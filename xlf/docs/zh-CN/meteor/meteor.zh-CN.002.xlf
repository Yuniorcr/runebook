<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="meteor">
    <body>
      <group id="meteor">
        <trans-unit id="2d873733389b731ccb6810f037b7574fe7350931" translate="yes" xml:space="preserve">
          <source>AccountsClient#logout()</source>
          <target state="translated">AccountsClient#logout()</target>
        </trans-unit>
        <trans-unit id="c6d36ea75d01bd0feb9a54654a78dfdefdff935a" translate="yes" xml:space="preserve">
          <source>AccountsClient#logoutOtherClients()</source>
          <target state="translated">AccountsClient#logoutOtherClients()</target>
        </trans-unit>
        <trans-unit id="1540993f501a89e34837847a656eb099f4cfe546" translate="yes" xml:space="preserve">
          <source>AccountsClient()</source>
          <target state="translated">AccountsClient()</target>
        </trans-unit>
        <trans-unit id="64d35ce0d75364de62b4e75eb9a48ef04d5827a9" translate="yes" xml:space="preserve">
          <source>AccountsCommon#config()</source>
          <target state="translated">AccountsCommon#config()</target>
        </trans-unit>
        <trans-unit id="d13e8bf51ba293e16f284e56f026336ed6fc5d7c" translate="yes" xml:space="preserve">
          <source>AccountsCommon#onLogin()</source>
          <target state="translated">AccountsCommon#onLogin()</target>
        </trans-unit>
        <trans-unit id="29d1a61992a980f4b4a9f2d5dbdab4cfbb7d8372" translate="yes" xml:space="preserve">
          <source>AccountsCommon#onLoginFailure()</source>
          <target state="translated">AccountsCommon#onLoginFailure()</target>
        </trans-unit>
        <trans-unit id="17fde8fb86c818cbfbce1fafd7353d77e51566c9" translate="yes" xml:space="preserve">
          <source>AccountsCommon#onLogout()</source>
          <target state="translated">AccountsCommon#onLogout()</target>
        </trans-unit>
        <trans-unit id="435e10616965a58d7b686c1eca8ce03c343fc71a" translate="yes" xml:space="preserve">
          <source>AccountsCommon#user()</source>
          <target state="translated">AccountsCommon#user()</target>
        </trans-unit>
        <trans-unit id="b8866b82d476f1d8dece76aa668336930e8479eb" translate="yes" xml:space="preserve">
          <source>AccountsCommon#userId()</source>
          <target state="translated">AccountsCommon#userId()</target>
        </trans-unit>
        <trans-unit id="92b2b7d6ab1935e2258a8aaaeebf4cbff62264e5" translate="yes" xml:space="preserve">
          <source>AccountsCommon()</source>
          <target state="translated">AccountsCommon()</target>
        </trans-unit>
        <trans-unit id="7c0928d46425660f76f3f12c8e5211d6a20a2f90" translate="yes" xml:space="preserve">
          <source>AccountsServer#onCreateUser()</source>
          <target state="translated">AccountsServer#onCreateUser()</target>
        </trans-unit>
        <trans-unit id="02a325378242e0565a24b87d9b3ece573ed4fd81" translate="yes" xml:space="preserve">
          <source>AccountsServer#validateLoginAttempt()</source>
          <target state="translated">AccountsServer#validateLoginAttempt()</target>
        </trans-unit>
        <trans-unit id="71aaba816be4fe80032c8e291cd8ec524467785a" translate="yes" xml:space="preserve">
          <source>AccountsServer#validateNewUser()</source>
          <target state="translated">AccountsServer#validateNewUser()</target>
        </trans-unit>
        <trans-unit id="49a13f3a5de809ead09bba2bca8c799552d93578" translate="yes" xml:space="preserve">
          <source>AccountsServer()</source>
          <target state="translated">AccountsServer()</target>
        </trans-unit>
        <trans-unit id="011c9788d6e0be0ea332791b0acefb3c0e817f6f" translate="yes" xml:space="preserve">
          <source>Across Meteor applications, there are some common patterns of data loading and management on the client side that are worth knowing. We&amp;rsquo;ll go into more detail about some of these in the &lt;a href=&quot;ui-ux&quot;&gt;UI/UX Article&lt;/a&gt;.</source>
          <target state="translated">在Meteor应用程序中，客户端上有一些常见的数据加载和管理模式值得一提。在&lt;a href=&quot;ui-ux&quot;&gt;UI / UX文章&lt;/a&gt;中，我们将详细介绍其中的一些内容。</target>
        </trans-unit>
        <trans-unit id="aa77549e9e718390ad59a70bcb9f8ce07f6acc29" translate="yes" xml:space="preserve">
          <source>Add &lt;code&gt;$ANDROID_HOME/tools&lt;/code&gt;, and &lt;code&gt;$ANDROID_HOME/platform-tools&lt;/code&gt; to your &lt;code&gt;PATH&lt;/code&gt;</source>
          <target state="translated">将 &lt;code&gt;$ANDROID_HOME/tools&lt;/code&gt; 和 &lt;code&gt;$ANDROID_HOME/platform-tools&lt;/code&gt; 到 &lt;code&gt;PATH&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b30293095796dd25179a0b165702884dacb01284" translate="yes" xml:space="preserve">
          <source>Add a custom datatype to EJSON.</source>
          <target state="translated">为EJSON添加一个自定义数据类型。</target>
        </trans-unit>
        <trans-unit id="7a9876a95776ae24503e37be6497a8549c2750e6" translate="yes" xml:space="preserve">
          <source>Add a document to the collection. A document is just an object, and its fields can contain any combination of EJSON-compatible datatypes (arrays, objects, numbers, strings, &lt;code&gt;null&lt;/code&gt;, true, and false).</source>
          <target state="translated">将文档添加到集合中。文档只是一个对象，其字段可以包含与EJSON兼容的数据类型的任意组合（数组，对象，数字，字符串， &lt;code&gt;null&lt;/code&gt; ，true和false）。</target>
        </trans-unit>
        <trans-unit id="362f23c3893b39183ed59714e372f15f7fc6317e" translate="yes" xml:space="preserve">
          <source>Add a preference for your build as described in the &lt;a href=&quot;http://cordova.apache.org/docs/en/5.1.1/config_ref_index.md.html#The%20config.xml%20File_global_preferences&quot;&gt;Cordova documentation&lt;/a&gt;.</source>
          <target state="translated">按照&lt;a href=&quot;http://cordova.apache.org/docs/en/5.1.1/config_ref_index.md.html#The%20config.xml%20File_global_preferences&quot;&gt;Cordova文档&lt;/a&gt;中的说明为构建添加首选项。</target>
        </trans-unit>
        <trans-unit id="a23cdf254dbd7a10b8883eec86d6146b48165821" translate="yes" xml:space="preserve">
          <source>Add a rule that matches against a stream of events describing method or subscription attempts. Each event is an object with the following properties:</source>
          <target state="translated">添加一条规则,针对描述方法或订阅尝试的事件流进行匹配。每个事件是一个对象,具有以下属性。</target>
        </trans-unit>
        <trans-unit id="e2dab10a73fe6cfb3e34ad0bafd8901d568cb909" translate="yes" xml:space="preserve">
          <source>Add an email address for a user. Use this instead of directly updating the database. The operation will fail if there is a different user with an email only differing in case. If the specified user has an existing email only differing in case however, we replace it.</source>
          <target state="translated">为用户添加一个电子邮件地址。使用此操作代替直接更新数据库。如果有一个不同的用户,其电子邮件地址只与大小写不同,则该操作将失败。如果指定的用户有一个现有的电子邮件地址,但只有大小写不同,我们就会替换它。</target>
        </trans-unit>
        <trans-unit id="3d7db431b9155e6d75c4fbbcd640b667f2a8c9ea" translate="yes" xml:space="preserve">
          <source>Add button</source>
          <target state="translated">添加按钮</target>
        </trans-unit>
        <trans-unit id="9d6a5d02b3ad734d502fa1851246c8de28e70006" translate="yes" xml:space="preserve">
          <source>Add packages to your Meteor project. By convention, names of community packages include the name of the maintainer. For example: &lt;code&gt;meteor add iron:router&lt;/code&gt;. You can add multiple packages with one command.</source>
          <target state="translated">将包添加到您的Meteor项目。按照惯例，社区软件包的名称包括维护者的名称。例如： &lt;code&gt;meteor add iron:router&lt;/code&gt; 。您可以使用一个命令添加多个软件包。</target>
        </trans-unit>
        <trans-unit id="3920f6d0b00d2751a5ea3733ff82e0270a4a960a" translate="yes" xml:space="preserve">
          <source>Add top-level fields onto the user document</source>
          <target state="translated">在用户文档中添加顶层字段</target>
        </trans-unit>
        <trans-unit id="df0650afac1d054969ef58c6351adcf0a428807c" translate="yes" xml:space="preserve">
          <source>Adding CSS</source>
          <target state="translated">添加CSS</target>
        </trans-unit>
        <trans-unit id="64747959a1e2f4cdcc191c7686aa129e36e36792" translate="yes" xml:space="preserve">
          <source>Adding Cordova platforms</source>
          <target state="translated">添加Cordova平台</target>
        </trans-unit>
        <trans-unit id="388f1da366d64049acbe13b239d2d31dbd4d8856" translate="yes" xml:space="preserve">
          <source>Adding JavaScript</source>
          <target state="translated">添加JavaScript</target>
        </trans-unit>
        <trans-unit id="5f5e54ebc13cbf10855d194409446e2aef511baf" translate="yes" xml:space="preserve">
          <source>Adding Sass, Less, or Stylus mixins/variables</source>
          <target state="translated">添加Sass、Less或Stylus混搭/变量。</target>
        </trans-unit>
        <trans-unit id="114997acdf8a6a0d1ae4b97ece4c85485198b588" translate="yes" xml:space="preserve">
          <source>Adding and using the package is straightforward:</source>
          <target state="translated">添加和使用该软件包是很直接的。</target>
        </trans-unit>
        <trans-unit id="b3a033b09d8548343def60883be8ca053af2d743" translate="yes" xml:space="preserve">
          <source>Adding fields on user registration</source>
          <target state="translated">在用户注册时增加字段</target>
        </trans-unit>
        <trans-unit id="3dcf7dac1471438719bdd8017ba88f48d68076b0" translate="yes" xml:space="preserve">
          <source>Adding files and assets</source>
          <target state="translated">添加文件和资产</target>
        </trans-unit>
        <trans-unit id="0bbbb60ef568f1a1cf6b30da1fd5363aa39c2200" translate="yes" xml:space="preserve">
          <source>Adding other assets</source>
          <target state="translated">增加其他资产</target>
        </trans-unit>
        <trans-unit id="3671e86de175ad1079e42e821c4583315f71e916" translate="yes" xml:space="preserve">
          <source>Adding types will make your code more readable and less prone to runtime errors.</source>
          <target state="translated">添加类型会让你的代码更易读,更不容易出现运行时错误。</target>
        </trans-unit>
        <trans-unit id="a94eb94b9f2637bb630167bcd28d6708ac844625" translate="yes" xml:space="preserve">
          <source>Additional parameters can be passed in the same way as the &lt;code&gt;node&lt;/code&gt; command, and the &lt;a href=&quot;https://nodejs.org/dist/latest-v4.x/docs/api/cli.html&quot;&gt;Node.js documentation&lt;/a&gt; should be consulted for the full list of commands and for a better understanding of their usage.</source>
          <target state="translated">可以使用与 &lt;code&gt;node&lt;/code&gt; 命令相同的方式来传递其他参数，并且应查阅&lt;a href=&quot;https://nodejs.org/dist/latest-v4.x/docs/api/cli.html&quot;&gt;Node.js文档&lt;/a&gt;以获取命令的完整列表并更好地了解其用法。</target>
        </trans-unit>
        <trans-unit id="c61759d64b2898cfdf46cf87c8b9324871181fa3" translate="yes" xml:space="preserve">
          <source>Additional parameters can be passed in the same way as the &lt;code&gt;npm&lt;/code&gt; command (e.g. &lt;code&gt;meteor npm rebuild&lt;/code&gt;, &lt;code&gt;meteor npm ls&lt;/code&gt;, etc.) and the &lt;a href=&quot;https://docs.npmjs.com/&quot;&gt;npm documentation&lt;/a&gt; should be consulted for the full list of commands and for a better understanding of their usage.</source>
          <target state="translated">可以使用与 &lt;code&gt;npm&lt;/code&gt; 命令相同的方式来传递其他参数（例如， &lt;code&gt;meteor npm rebuild&lt;/code&gt; ， &lt;code&gt;meteor npm ls&lt;/code&gt; 等），并且应查阅&lt;a href=&quot;https://docs.npmjs.com/&quot;&gt;npm文档&lt;/a&gt;以获取命令的完整列表并更好地了解其用法。</target>
        </trans-unit>
        <trans-unit id="19bd855e6f1778a7f8fc5ece5a25da1f035bdf66" translate="yes" xml:space="preserve">
          <source>Additionally we can see an example of a &lt;em&gt;template helper&lt;/em&gt;&amp;mdash;&lt;code&gt;{{checkedClass todo}}&lt;/code&gt; calls out to a &lt;code&gt;checkedClass&lt;/code&gt; helper defined in a separate JavaScript file. The HTML template and JavaScript file together define the &lt;code&gt;Todos_item&lt;/code&gt; component:</source>
          <target state="translated">另外，我们可以看到&lt;em&gt;模板帮助器&lt;/em&gt;的示例&amp;mdash; &lt;code&gt;{{checkedClass todo}}&lt;/code&gt; 调用在单独的JavaScript文件中定义的 &lt;code&gt;checkedClass&lt;/code&gt; 帮助器。HTML模板和JavaScript文件共同定义了 &lt;code&gt;Todos_item&lt;/code&gt; 组件：</target>
        </trans-unit>
        <trans-unit id="f8ce3ccec6bd3c5fd49a861dea388545b217a16c" translate="yes" xml:space="preserve">
          <source>Additionally, Meteor offers a &amp;ldquo;full application&amp;rdquo; test mode. You can run this with &lt;code&gt;meteor test --full-app&lt;/code&gt;.</source>
          <target state="translated">此外，Meteor还提供了&amp;ldquo;完整应用程序&amp;rdquo;测试模式。您可以使用 &lt;code&gt;meteor test --full-app&lt;/code&gt; 运行它。</target>
        </trans-unit>
        <trans-unit id="420379ef392349852612b66fd47cd79ac31dea37" translate="yes" xml:space="preserve">
          <source>Additionally, a helper will re-run if any &lt;em&gt;reactive data source&lt;/em&gt; accessed from within &lt;em&gt;that specific helper&lt;/em&gt; changes.</source>
          <target state="translated">此外，如果从&lt;em&gt;该特定助手中&lt;/em&gt;访问的任何&lt;em&gt;反应式数据源&lt;/em&gt;发生更改，则该助手将重新运行。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8ee22dec3b0b7b44ee60e2022b662bed3831d7a0" translate="yes" xml:space="preserve">
          <source>Additionally, each external service has its own login provider package and login function. For example, to support GitHub login, run the following in your terminal:</source>
          <target state="translated">此外,每个外部服务都有自己的登录提供商包和登录功能。例如,要支持GitHub登录,在终端运行以下内容。</target>
        </trans-unit>
        <trans-unit id="c534e06e39d6d2525f18d3c145b1c0626a75e06d" translate="yes" xml:space="preserve">
          <source>Additionally, for better clarity, always explicitly provide a data context to an inclusion rather than letting it inherit the context of the template where it was rendered:</source>
          <target state="translated">此外,为了更加清晰,总是明确地给一个包含提供一个数据上下文,而不是让它继承它被渲染的模板的上下文。</target>
        </trans-unit>
        <trans-unit id="4c8372b30ff5a06321c7ece8a486493759c3ce1d" translate="yes" xml:space="preserve">
          <source>Additionally, the URL could contain an HTTP &lt;a href=&quot;https://en.wikipedia.org/wiki/Query_string&quot;&gt;&lt;em&gt;query string&lt;/em&gt;&lt;/a&gt; (the part after an optional &lt;code&gt;?&lt;/code&gt;). If so, Flow Router will also split it up into named parameters, which it calls &lt;code&gt;queryParams&lt;/code&gt;.</source>
          <target state="translated">另外，URL可以包含HTTP &lt;a href=&quot;https://en.wikipedia.org/wiki/Query_string&quot;&gt;&lt;em&gt;查询字符串&lt;/em&gt;&lt;/a&gt;（可选的 &lt;code&gt;?&lt;/code&gt; 之后的部分）。如果是这样，Flow Router还将把它分成命名参数，称为 &lt;code&gt;queryParams&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bd4c77cdf53eb262ea5f0015e70eeaf743c9287d" translate="yes" xml:space="preserve">
          <source>Additionally, this access to the npm that comes with Meteor avoids the need to download and install npm separately.</source>
          <target state="translated">此外,这种对Meteor自带的npm的访问,避免了单独下载和安装npm的需要。</target>
        </trans-unit>
        <trans-unit id="27c02d14b165a76b6d1d97af30a8ac67b770a868" translate="yes" xml:space="preserve">
          <source>Adds platforms to your Meteor project. You can add multiple platforms with one command. Once a platform has been added, you can use &amp;lsquo;meteor run</source>
          <target state="translated">将平台添加到您的Meteor项目。您可以使用一个命令添加多个平台。添加平台后，您可以使用&amp;ldquo;流星跑</target>
        </trans-unit>
        <trans-unit id="780dad50ba3d311b65d5ebf34f62aa966358bec7" translate="yes" xml:space="preserve">
          <source>Adds support for binary and octal numeric literals. For example, &lt;code&gt;0b111110111 === 503&lt;/code&gt; and &lt;code&gt;0o767 === 503&lt;/code&gt;.</source>
          <target state="translated">增加了对二进制和八进制数字文字的支持。例如， &lt;code&gt;0b111110111 === 503&lt;/code&gt; 和 &lt;code&gt;0o767 === 503&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9c800c5082fa959d407b42b07c7d1b7b481b2b63" translate="yes" xml:space="preserve">
          <source>Advanced Method boilerplate</source>
          <target state="translated">高级方法模板</target>
        </trans-unit>
        <trans-unit id="0f498dc21b43c27ac7511b2b18666d5a5f39db07" translate="yes" xml:space="preserve">
          <source>Advanced Methods with mdg:validated-method</source>
          <target state="translated">使用mdg:validated-method的高级方法。</target>
        </trans-unit>
        <trans-unit id="823e688534c2f6bc344b4fa9d106758978e7cc6f" translate="yes" xml:space="preserve">
          <source>Advanced Routing</source>
          <target state="translated">高级路由选择</target>
        </trans-unit>
        <trans-unit id="c21b7ed2ffa893e99aa0f79d44fc9538365b40a9" translate="yes" xml:space="preserve">
          <source>Advanced build customization</source>
          <target state="translated">先进的自定义构建</target>
        </trans-unit>
        <trans-unit id="6dad2bf50708ff78286227db8839b9e68c752c7c" translate="yes" xml:space="preserve">
          <source>Advanced concepts</source>
          <target state="translated">高级概念</target>
        </trans-unit>
        <trans-unit id="8d357a9bd35794ea1054490c87d0401db6aec907" translate="yes" xml:space="preserve">
          <source>Advanced publications</source>
          <target state="translated">高级出版物</target>
        </trans-unit>
        <trans-unit id="0e19bf3c9595e917e97cddeb24c3719336161b84" translate="yes" xml:space="preserve">
          <source>After doing the above, you&amp;rsquo;ll need to ensure you &lt;code&gt;npm install&lt;/code&gt; and restart the &lt;code&gt;meteor&lt;/code&gt; process running your app to make sure the PostCSS system has had a chance to set itself up.</source>
          <target state="translated">完成上述操作后，您需要确保 &lt;code&gt;npm install&lt;/code&gt; 并重新启动运行您的应用程序的 &lt;code&gt;meteor&lt;/code&gt; 进程，以确保PostCSS系统有机会进行自我设置。</target>
        </trans-unit>
        <trans-unit id="de0707d98bb40f8516804642b2cf49d9c7baef75" translate="yes" xml:space="preserve">
          <source>After either method, edit the &lt;code&gt;dependencies&lt;/code&gt; attribute of &lt;code&gt;my-app/package.json&lt;/code&gt;, adding &lt;code&gt;&quot;my-package&quot;: &quot;1.0.0&quot;&lt;/code&gt; (use the same version number you chose during &lt;code&gt;meteor npm init&lt;/code&gt;).</source>
          <target state="translated">在这两种方法之后，都可以编辑 &lt;code&gt;my-app/package.json&lt;/code&gt; 的 &lt;code&gt;dependencies&lt;/code&gt; 属性，并添加 &lt;code&gt;&quot;my-package&quot;: &quot;1.0.0&quot;&lt;/code&gt; （使用在 &lt;code&gt;meteor npm init&lt;/code&gt; 期间选择的相同版本号）。</target>
        </trans-unit>
        <trans-unit id="33a8ab90275b0d97dbfc88bef89d7288eb8dd6f2" translate="yes" xml:space="preserve">
          <source>After it has downloaded, launch the installer, and complete the installation steps</source>
          <target state="translated">下载完毕后,启动安装程序,完成安装步骤。</target>
        </trans-unit>
        <trans-unit id="70adcc2f24d10940cb49cca0c84adfa1b0d09c55" translate="yes" xml:space="preserve">
          <source>After reading this article, you&amp;rsquo;ll know:</source>
          <target state="translated">阅读本文后，您将知道：</target>
        </trans-unit>
        <trans-unit id="943f92adb8ca1f9f8d14daab023925fef5f8338c" translate="yes" xml:space="preserve">
          <source>After reading this guide, you&amp;rsquo;ll know:</source>
          <target state="translated">阅读本指南后，您将知道：</target>
        </trans-unit>
        <trans-unit id="005eb5bd81f15573922dd54d30039203a9a6c898" translate="yes" xml:space="preserve">
          <source>After running &lt;code&gt;meteor build&lt;/code&gt; the generated APK will be copied from the &lt;code&gt;&amp;lt;build-output-directory&amp;gt;/android/project/build/outputs/apk&lt;/code&gt; directory to &lt;code&gt;&amp;lt;build-output-directory&amp;gt;/android/release-unsigned.apk&lt;/code&gt;.</source>
          <target state="translated">运行 &lt;code&gt;meteor build&lt;/code&gt; ，生成的APK将从 &lt;code&gt;&amp;lt;build-output-directory&amp;gt;/android/project/build/outputs/apk&lt;/code&gt; 目录复制到 &lt;code&gt;&amp;lt;build-output-directory&amp;gt;/android/release-unsigned.apk&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="74b88dbbf986dcebc1fcc206d648cecb38a2bdfa" translate="yes" xml:space="preserve">
          <source>After running &lt;code&gt;meteor build&lt;/code&gt; you can open the generated Xcode project in Xcode:</source>
          <target state="translated">运行 &lt;code&gt;meteor build&lt;/code&gt; 您可以在Xcode中打开生成的Xcode项目：</target>
        </trans-unit>
        <trans-unit id="dc0c82926387fe8179d7ef85b7e225af7559f304" translate="yes" xml:space="preserve">
          <source>After the download and installation completes, you will need to accept the license agreement. If you start Xcode for the first time, a dialog will pop up where you can read the license agreement and accept it. You can close Xcode directly afterwards.</source>
          <target state="translated">下载和安装完成后,您需要接受许可协议。如果您第一次启动Xcode,会弹出一个对话框,您可以阅读许可协议并接受它。之后你可以直接关闭Xcode。</target>
        </trans-unit>
        <trans-unit id="37174beccd1fb462ac9c5d818f04785570a1b698" translate="yes" xml:space="preserve">
          <source>After the relevant data updates have been sent to the correct client, the server sends back the last message in the Method life cycle - the DDP &lt;code&gt;updated&lt;/code&gt; message with the relevant Method ID. The client rolls back any changes to client side data made in the Method simulation in step 1, and replaces them with the actual changes sent from the server in step 5.</source>
          <target state="translated">在将相关数据更新发送到正确的客户端之后，服务器将发回方法生命周期中的最后一条消息- 具有相关方法ID 的DDP &lt;code&gt;updated&lt;/code&gt; 消息。客户端回滚在步骤1的&amp;ldquo;方法&amp;rdquo;模拟中对客户端数据所做的任何更改，并将其替换为在步骤5中从服务器发送的实际更改。</target>
        </trans-unit>
        <trans-unit id="6045767e885a139875b55851d1f12f99f9ecb722" translate="yes" xml:space="preserve">
          <source>After you have called one of the two functions above or the user has cancelled the process, call the &lt;code&gt;done&lt;/code&gt; function you got in the link callback. This will tell Meteor to get out of the special state it enters when you&amp;rsquo;re doing one of the email account flows.</source>
          <target state="translated">在您调用了以上两个函数之一或用户取消了该过程之后，请调用您在链接回调中获得的 &lt;code&gt;done&lt;/code&gt; 函数。这将告诉Meteor在执行其中一个电子邮件帐户流时摆脱进入的特殊状态。</target>
        </trans-unit>
        <trans-unit id="13f2d652f70945cb85fc5562fc3600a535ffb359" translate="yes" xml:space="preserve">
          <source>After:</source>
          <target state="translated">After:</target>
        </trans-unit>
        <trans-unit id="90a2684dcb2f4fa25ba6119784d55dc08cc30349" translate="yes" xml:space="preserve">
          <source>Again, generally speaking, this applies to applications whose &lt;code&gt;MAIL_URL&lt;/code&gt; already includes &lt;code&gt;:465&lt;/code&gt;. If an application&amp;rsquo;s mail provider supports &lt;code&gt;STARTTLS&lt;/code&gt; (i.e. if the &lt;code&gt;MAIL_URL&lt;/code&gt; uses &lt;code&gt;:587&lt;/code&gt; and &lt;em&gt;sometimes&lt;/em&gt;&lt;code&gt;:25&lt;/code&gt;), the application can continue to use &lt;code&gt;smtp://&lt;/code&gt; (without the &lt;code&gt;s&lt;/code&gt;) and the TLS/SSL upgrade will be made by the mail server, if supported.</source>
          <target state="translated">同样，通常来说，这适用于 &lt;code&gt;MAIL_URL&lt;/code&gt; 已经包括 &lt;code&gt;:465&lt;/code&gt; 的应用程序。如果应用程序的邮件提供商支持 &lt;code&gt;STARTTLS&lt;/code&gt; （即，如果 &lt;code&gt;MAIL_URL&lt;/code&gt; 使用 &lt;code&gt;:587&lt;/code&gt; ，&lt;em&gt;有时使用&lt;/em&gt; &lt;code&gt;:25&lt;/code&gt; ），则该应用程序可以继续使用 &lt;code&gt;smtp://&lt;/code&gt; （不带 &lt;code&gt;s&lt;/code&gt; ），并且邮件服务器将进行TLS / SSL升级，如果支持。</target>
        </trans-unit>
        <trans-unit id="871a26ff2335d08b2c118de393b550bd331fa89e" translate="yes" xml:space="preserve">
          <source>Alias for &lt;code&gt;template.view.autorun&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;template.view.autorun&lt;/code&gt; 的别名。</target>
        </trans-unit>
        <trans-unit id="9d2f89083c0856e21e6a8a489f9f54eb4005e901" translate="yes" xml:space="preserve">
          <source>All EJSON serializations are also valid JSON. For example an object with a date and a binary buffer would be serialized in EJSON as:</source>
          <target state="translated">所有EJSON序列化也是有效的JSON。例如,一个带有日期和二进制缓冲区的对象在EJSON中被序列化为:</target>
        </trans-unit>
        <trans-unit id="c9e603ce0abb2007db07db4ccab534d73d3a9df2" translate="yes" xml:space="preserve">
          <source>All JavaScript files outside special directories are loaded on both the client and the server. Meteor provides the variables &lt;a href=&quot;http://docs.meteor.com/#/full/meteor_isserver&quot;&gt;&lt;code&gt;Meteor.isClient&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;http://docs.meteor.com/#/full/meteor_isserver&quot;&gt;&lt;code&gt;Meteor.isServer&lt;/code&gt;&lt;/a&gt; so that your code can alter its behavior depending on whether it&amp;rsquo;s running on the client or the server.</source>
          <target state="translated">特殊目录之外的所有JavaScript文件都会同时加载到客户端和服务器上。Meteor提供变量&lt;a href=&quot;http://docs.meteor.com/#/full/meteor_isserver&quot;&gt; &lt;code&gt;Meteor.isClient&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;http://docs.meteor.com/#/full/meteor_isserver&quot;&gt; &lt;code&gt;Meteor.isServer&lt;/code&gt; ,&lt;/a&gt;以便您的代码可以根据其运行在客户端还是服务器上来更改其行为。</target>
        </trans-unit>
        <trans-unit id="9e8b0b6c02b0ad9e7952b034de5ba33e9fce9112" translate="yes" xml:space="preserve">
          <source>All code written in CoffeeScript compiles to JavaScript under the hood, and is completely compatible with any code in other packages that is written in JS or ES2015.</source>
          <target state="translated">所有用CoffeeScript编写的代码都会在引擎盖下编译成JavaScript,并与其他包中用JS或ES2015编写的任何代码完全兼容。</target>
        </trans-unit>
        <trans-unit id="a0a020dbb6fef8eb548e295eef6601c35c3e144e" translate="yes" xml:space="preserve">
          <source>All documents tracked by this subscription are removed from the mergebox, which may or may not mean they are also removed from the client.</source>
          <target state="translated">此订阅所跟踪的所有文件都会从合并框中删除,这可能或不意味着它们也会从客户端中删除。</target>
        </trans-unit>
        <trans-unit id="c0bb857a7d1900721d806817b5c50f8454ffb7f6" translate="yes" xml:space="preserve">
          <source>All files inside a top-level directory called &lt;code&gt;private/&lt;/code&gt; are only accessible from server code and can be loaded via the &lt;a href=&quot;http://docs.meteor.com/#/full/assets_getText&quot;&gt;&lt;code&gt;Assets&lt;/code&gt;&lt;/a&gt; API. This can be used for private data files and any files that are in your project directory that you don&amp;rsquo;t want to be accessible from the outside.</source>
          <target state="translated">只能通过服务器代码访问称为 &lt;code&gt;private/&lt;/code&gt; 的顶级目录中的所有文件，并且可以通过&lt;a href=&quot;http://docs.meteor.com/#/full/assets_getText&quot;&gt; &lt;code&gt;Assets&lt;/code&gt; &lt;/a&gt; API 进行加载。这可用于私有数据文件以及您不想从外部访问的项目目录中的任何文件。</target>
        </trans-unit>
        <trans-unit id="a32c8f4b73b8e5a3f17029d7910cd9aac3badebc" translate="yes" xml:space="preserve">
          <source>All files inside a top-level directory called &lt;code&gt;public/&lt;/code&gt; are served as-is to the client. When referencing these assets, do not include &lt;code&gt;public/&lt;/code&gt; in the URL, write the URL as if they were all in the top level. For example, reference &lt;code&gt;public/bg.png&lt;/code&gt; as &lt;code&gt;&amp;lt;img src='/bg.png' /&amp;gt;&lt;/code&gt;. This is the best place for &lt;code&gt;favicon.ico&lt;/code&gt;, &lt;code&gt;robots.txt&lt;/code&gt;, and similar files.</source>
          <target state="translated">名为 &lt;code&gt;public/&lt;/code&gt; 的顶级目录中的所有文件均按原样提供给客户端。当引用这些资产时，不要在URL中包括 &lt;code&gt;public/&lt;/code&gt; ，而应将它们写在顶级目录中。例如，将 &lt;code&gt;public/bg.png&lt;/code&gt; 引用为 &lt;code&gt;&amp;lt;img src='/bg.png' /&amp;gt;&lt;/code&gt; 。这是 &lt;code&gt;favicon.ico&lt;/code&gt; ， &lt;code&gt;robots.txt&lt;/code&gt; 和类似文件的最佳位置。</target>
        </trans-unit>
        <trans-unit id="4465f10cd7c7f36f8e4cd583842cd4c0d102e0ec" translate="yes" xml:space="preserve">
          <source>All of the code samples in this guide and future Meteor tutorials will use all of the new ES2015 features. You can also read more about ES2015 and how to get started with it on the Meteor Blog:</source>
          <target state="translated">本指南和未来Meteor教程中的所有代码示例都将使用所有新的ES2015特性。您也可以在Meteor博客上阅读更多关于ES2015以及如何开始使用它。</target>
        </trans-unit>
        <trans-unit id="723990a6f27fcab98f5a415ad83cd5c5ca4de9df" translate="yes" xml:space="preserve">
          <source>All of the points above about Methods apply to publications as well:</source>
          <target state="translated">以上所有关于方法的观点也适用于出版物。</target>
        </trans-unit>
        <trans-unit id="c5dae541cb7c9996014e3bef615a095c1468510b" translate="yes" xml:space="preserve">
          <source>All of the suggestions about reusable components apply to smart components. In addition:</source>
          <target state="translated">所有关于可重复使用组件的建议都适用于智能组件。此外:</target>
        </trans-unit>
        <trans-unit id="0eacaaa162cea7b01acedefcab5315e3e763b005" translate="yes" xml:space="preserve">
          <source>All of these exports are &lt;em&gt;named&lt;/em&gt;, which means other modules can import them using those names:</source>
          <target state="translated">所有这些导出都被&lt;em&gt;命名为&lt;/em&gt;，这意味着其他模块可以使用这些名称导入它们：</target>
        </trans-unit>
        <trans-unit id="74e1e2eeba53ef9b9a82116509de699a95ae92b5" translate="yes" xml:space="preserve">
          <source>All of these will be addressed in a future release. For full Minimongo release notes, see packages/minimongo/NOTES in the repository.</source>
          <target state="translated">所有这些都将在未来的版本中解决。完整的Minimongo发布说明,请参见版本库中的package/minimongo/NOTES。</target>
        </trans-unit>
        <trans-unit id="38a6beeafe7d8544bb14228c41a3c2cc2a67647b" translate="yes" xml:space="preserve">
          <source>All registered validate login callbacks are called, even if one of the callbacks aborts the login. The later callbacks will see the &lt;code&gt;allowed&lt;/code&gt; field set to &lt;code&gt;false&lt;/code&gt; since the login will now not be successful. This allows later callbacks to override an error from a previous callback; for example, you could override the &amp;ldquo;Incorrect password&amp;rdquo; error with a different message.</source>
          <target state="translated">即使其中一个回调中止了登录，也会调用所有已注册的验证登录回调。以后的回调将看到 &lt;code&gt;allowed&lt;/code&gt; 字段设置为 &lt;code&gt;false&lt;/code&gt; ,因为现在登录将失败。这样，以后的回调就可以覆盖以前的回调中的错误。例如，您可以用其他消息覆盖&amp;ldquo;密码错误&amp;rdquo;错误。</target>
        </trans-unit>
        <trans-unit id="c3e0d535e821e4718e83f067f6a962f5cedc4b54" translate="yes" xml:space="preserve">
          <source>All three libraries work fine in a Cordova web view, and you can use mobile CSS libraries like Ionic&amp;rsquo;s CSS with any view library.</source>
          <target state="translated">这三个库都可以在Cordova Web视图中正常工作，并且您可以将Ionic的CSS之类的移动CSS库与任何视图库一起使用。</target>
        </trans-unit>
        <trans-unit id="a1f359a9de9a612bd891d2405ea65242c381cd28" translate="yes" xml:space="preserve">
          <source>All you need to do to use CoffeeScript is add the right Meteor package:</source>
          <target state="translated">要使用CoffeeScript,你需要做的就是添加正确的Meteor包。</target>
        </trans-unit>
        <trans-unit id="c899e169988b39e5bfb7a2b5eca11c66629d598d" translate="yes" xml:space="preserve">
          <source>All your CSS style files will processed using Meteor&amp;rsquo;s default file load order rules along with any import statements and concatenated, and in a production build also minified. However, it&amp;rsquo;s no secret that writing plain CSS can often be a hassle as there&amp;rsquo;s no way to share common CSS code between different selectors or have a consistent color scheme between different elements. CSS compilers, or pre-processors, solve these issues by adding extra features on top of the CSS language like variables, mixins, math, and more, and in some cases also significantly change the syntax of CSS to be easier to read and write.</source>
          <target state="translated">您所有的CSS样式文件都将使用Meteor的默认文件加载顺序规则以及任何import语句进行处理和连接，并且在生产版本中也将被压缩。但是，编写纯CSS常常很麻烦，因为没有办法在不同的选择器之间共享通用的CSS代码，或者在不同的元素之间具有一致的配色方案，这并不是秘密。CSS编译器或预处理器通过在CSS语言之上添加额外的功能（如变量，mixins，数学等）来解决这些问题，并且在某些情况下，还极大地更改了CSS的语法，使其更易于阅读和编写。</target>
        </trans-unit>
        <trans-unit id="67f60d18dabe03b43d5832e7009a144529c64c2d" translate="yes" xml:space="preserve">
          <source>Allocate a new buffer of binary data that EJSON can serialize.</source>
          <target state="translated">分配一个新的EJSON可以序列化的二进制数据缓冲区。</target>
        </trans-unit>
        <trans-unit id="f6805e3fbbbc9311f980952c72e2727b8a8ec241" translate="yes" xml:space="preserve">
          <source>Allow users to write directly to this collection from client code, subject to limitations you define.</source>
          <target state="translated">允许用户从客户端代码直接写到这个集合,但要受到你定义的限制。</target>
        </trans-unit>
        <trans-unit id="a4137b3979288f95612df052084b414f8bfab28d" translate="yes" xml:space="preserve">
          <source>Allows an array of arguments to be interpolated into a list of arguments to a function call, &lt;code&gt;new&lt;/code&gt; expression, or array literal, without using &lt;code&gt;Function.prototype.apply&lt;/code&gt;:</source>
          <target state="translated">允许将参数数组插入到函数调用， &lt;code&gt;new&lt;/code&gt; 表达式或数组文字的参数列表中，而无需使用 &lt;code&gt;Function.prototype.apply&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="b1b7c032026344be8c04fa53e07fb1a8351c7599" translate="yes" xml:space="preserve">
          <source>Allows defining block-scoped variables that are not allowed to be redefined:</source>
          <target state="translated">允许定义不允许重新定义的块范围变量。</target>
        </trans-unit>
        <trans-unit id="8a261e223e52fee3df2107de49be409a69ab9633" translate="yes" xml:space="preserve">
          <source>Allows object literal properties with dynamically computed keys:</source>
          <target state="translated">允许使用动态计算键的对象文字属性。</target>
        </trans-unit>
        <trans-unit id="1b0be52626d91c97baf41417def44f9ca7adced5" translate="yes" xml:space="preserve">
          <source>Allows omitting the value of an object literal property when the desired value is held by a variable that has the same name as the property key. For example, instead of writing &lt;code&gt;{ x: x, y: y, z: &quot;asdf&quot; }&lt;/code&gt; you can just write &lt;code&gt;{ x, y, z: &quot;asdf&quot; }&lt;/code&gt;. Methods can also be written without the &lt;code&gt;: function&lt;/code&gt; property syntax:</source>
          <target state="translated">当所需的值由与属性键同名的变量保存时，允许省略对象文字属性的值。例如，不用编写 &lt;code&gt;{ x: x, y: y, z: &quot;asdf&quot; }&lt;/code&gt; ，而只需编写 &lt;code&gt;{ x, y, z: &quot;asdf&quot; }&lt;/code&gt; 。也可以编写不带 &lt;code&gt;: function&lt;/code&gt; 属性语法的方法：</target>
        </trans-unit>
        <trans-unit id="e468a91e79f1a71cef4325535b91f7bcaa6ae065" translate="yes" xml:space="preserve">
          <source>Allows the final parameter of a function to be followed by a comma, provided that parameter is not a &lt;code&gt;...rest&lt;/code&gt; parameter.</source>
          <target state="translated">允许函数的最终参数后跟逗号，前提是该参数不是 &lt;code&gt;...rest&lt;/code&gt; 参数。</target>
        </trans-unit>
        <trans-unit id="0e8b92fe2e287a1482da35d25fbf3d6a5ee85e46" translate="yes" xml:space="preserve">
          <source>Also &lt;code&gt;Plugin&lt;/code&gt; provides helper functions &lt;code&gt;convertToStandardPath&lt;/code&gt; and &lt;code&gt;convertToOSPath&lt;/code&gt; to convert to a Unix path or to the path expected by the node libraries regardless of the path origin.</source>
          <target state="translated">此外 &lt;code&gt;Plugin&lt;/code&gt; 提供了辅助功能 &lt;code&gt;convertToStandardPath&lt;/code&gt; 和 &lt;code&gt;convertToOSPath&lt;/code&gt; 转换为UNIX路径或通过节点库预期不管路径来源的路径。</target>
        </trans-unit>
        <trans-unit id="244a66bdd7d0ffd24563df38667d5769e773bfbd" translate="yes" xml:space="preserve">
          <source>Also enables &lt;code&gt;...spread&lt;/code&gt; properties in object literal expressions:</source>
          <target state="translated">还启用对象文字表达式中的 &lt;code&gt;...spread&lt;/code&gt; 属性：</target>
        </trans-unit>
        <trans-unit id="d6ed0d6829c8ffc0c2fa56e75bd0ac24c0a1b548" translate="yes" xml:space="preserve">
          <source>Also of note is the way we use a second DDP connection to the server in order to send these test &amp;ldquo;control&amp;rdquo; method calls.</source>
          <target state="translated">还要注意的是，我们使用第二个DDP连接到服务器以发送这些测试&amp;ldquo;控制&amp;rdquo;方法调用的方式。</target>
        </trans-unit>
        <trans-unit id="6e56f41a3e64c441efa51df70d6389c3f69aad00" translate="yes" xml:space="preserve">
          <source>Also, when changing between subscriptions, there is a brief period where both subscriptions are loaded (see &lt;a href=&quot;#publication-behavior-with-arguments&quot;&gt;Publication behavior when changing arguments&lt;/a&gt; below), so when doing things like pagination, it&amp;rsquo;s exceedingly likely that this will be the case.</source>
          <target state="translated">另外，在订阅之间进行更改时，会短暂加载两个订阅（请参见下面的&lt;a href=&quot;#publication-behavior-with-arguments&quot;&gt;更改参数时的发布行为&lt;/a&gt;），因此在执行诸如分页之类的操作时，情况极有可能发生。</target>
        </trans-unit>
        <trans-unit id="bf86eedab7176ccc3c27cb2878ac49cb5f750ae9" translate="yes" xml:space="preserve">
          <source>Alternatively, a publish function can directly control its published record set by calling the functions &lt;a href=&quot;#publish_added&quot;&gt;&lt;code&gt;added&lt;/code&gt;&lt;/a&gt; (to add a new document to the published record set), &lt;a href=&quot;#publish_changed&quot;&gt;&lt;code&gt;changed&lt;/code&gt;&lt;/a&gt; (to change or clear some fields on a document already in the published record set), and &lt;a href=&quot;#publish_removed&quot;&gt;&lt;code&gt;removed&lt;/code&gt;&lt;/a&gt; (to remove documents from the published record set). These methods are provided by &lt;code&gt;this&lt;/code&gt; in your publish function.</source>
          <target state="translated">或者，发布功能可以通过调用&lt;a href=&quot;#publish_added&quot;&gt; &lt;code&gt;added&lt;/code&gt; &lt;/a&gt;的功能（将新文档添加到发布的记录集），&lt;a href=&quot;#publish_changed&quot;&gt; &lt;code&gt;changed&lt;/code&gt; &lt;/a&gt;（更改或清除发布的记录集中已经存在的文档上的某些字段）来直接控制其发布的记录集。&lt;a href=&quot;#publish_removed&quot;&gt; &lt;code&gt;removed&lt;/code&gt; &lt;/a&gt;（以从已发布的记录集中删除文档）。通过提供这些方法 &lt;code&gt;this&lt;/code&gt; 在你的发布功能。</target>
        </trans-unit>
        <trans-unit id="efd2d6a35b41ba75c464f4d1936e08a05391f70c" translate="yes" xml:space="preserve">
          <source>Alternatively, if unreleased changes have been made to a plugin you&amp;rsquo;d like to use, you can also have Cordova download plugin code from a Git repository. Note that this will clone the plugin repository on every rebuild however, so this can be rather slow and should be avoided where possible. In contrast to default Cordova, Meteor requires you to specify the exact SHA hash for a commit, rather than allow you to refer to a branch or tag. This is done to guarantee repeatable builds and also avoids unnecessary reinstallation of all plugins because as long as the SHA is the same we know nothing has changed.</source>
          <target state="translated">另外，如果您要使用的插件未发布更改，您也可以让Cordova从Git存储库下载插件代码。请注意，这会在每次重建时克隆插件存储库，因此这可能会很慢，应尽可能避免。与默认的Cordova相比，Meteor要求您为提交指定确切的SHA哈希，而不是允许您引用分支或标记。这样做是为了确保可重复的构建，并且还避免了所有插件的不必要重新安装，因为只要SHA相同，我们就知道什么都没有改变。</target>
        </trans-unit>
        <trans-unit id="5e23787dd5e40cdd89907e51dd0f07e2a44d82db" translate="yes" xml:space="preserve">
          <source>Alternatively, with a GitHub URL:</source>
          <target state="translated">或者,用GitHub的URL。</target>
        </trans-unit>
        <trans-unit id="f5e5ed452a22b3e4b24f4bcc94906278f87cccaa" translate="yes" xml:space="preserve">
          <source>Alternatively, you can also use tools like &lt;a href=&quot;http://sinonjs.org&quot;&gt;Sinon&lt;/a&gt; to stub things directly, as we&amp;rsquo;ll see for example in our &lt;a href=&quot;#simple-integration-test&quot;&gt;simple integration test&lt;/a&gt;.</source>
          <target state="translated">另外，您也可以使用&lt;a href=&quot;http://sinonjs.org&quot;&gt;Sinon之类的&lt;/a&gt;工具直接对事物进行存根，例如我们将在&lt;a href=&quot;#simple-integration-test&quot;&gt;简单的集成测试中&lt;/a&gt;看到的。</target>
        </trans-unit>
        <trans-unit id="0e4572186fef61684a06ab8b00c674b05c07e12f" translate="yes" xml:space="preserve">
          <source>Although Blaze is a very intuitive rendering system, it does have some quirks and complexities that are worth knowing about when you are trying to do complex things.</source>
          <target state="translated">虽然Blaze是一个非常直观的渲染系统,但它确实有一些怪癖和复杂性,当你试图做复杂的事情时,值得了解。</target>
        </trans-unit>
        <trans-unit id="25cad36d229f3e7c7d7f8a0c74d4fd1a5c1c4a32" translate="yes" xml:space="preserve">
          <source>Although Blaze&amp;rsquo;s simple API doesn&amp;rsquo;t necessarily encourage a componentized approach, you can use the &lt;em&gt;template instance&lt;/em&gt; as a convenient place to store internal functionality and state. The template instance can be accessed via &lt;code&gt;this&lt;/code&gt; inside Blaze&amp;rsquo;s lifecycle callbacks and as &lt;code&gt;Template.instance()&lt;/code&gt; in event handlers and helpers. It&amp;rsquo;s also passed as the second argument to event handlers.</source>
          <target state="translated">尽管Blaze的简单API不一定鼓励采用组件化方法，但是您可以将&lt;em&gt;模板实例&lt;/em&gt;用作存储内部功能和状态的便捷位置。可以通过Blaze的生命周期回调中的 &lt;code&gt;this&lt;/code&gt; 实例以及事件处理程序和帮助程序中的 &lt;code&gt;Template.instance()&lt;/code&gt; 来访问模板实例。它也作为第二个参数传递给事件处理程序。</target>
        </trans-unit>
        <trans-unit id="d22e9c63e3c21279e3e42409e520c12c353a593e" translate="yes" xml:space="preserve">
          <source>Although Blaze, which is a simple template-based rendering engine, doesn&amp;rsquo;t enforce a lot of these principles (unlike other frameworks like React and Angular) you can enjoy most of the same benefits by following some conventions when writing your Blaze components. This section will outline some of these &amp;ldquo;best practices&amp;rdquo; for writing reusable Blaze components.</source>
          <target state="translated">尽管Blaze是一个简单的基于模板的渲染引擎，它并没有执行很多这些原则（与其他框架（如React和Angular等）不同），但是在编写Blaze组件时遵循一些约定可以享受大多数相同的好处。本节将概述一些用于编写可重复使用的Blaze组件的&amp;ldquo;最佳实践&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="635a9fd5a93310f71de411255fe35abe8045eca8" translate="yes" xml:space="preserve">
          <source>Although Flow Router can be used to render React components more or less as we&amp;rsquo;ve described above for Blaze, at the time of this writing Flow Router&amp;rsquo;s support for SSR is &lt;a href=&quot;https://kadira.io/blog/meteor/meteor-ssr-support-using-flow-router-and-react&quot;&gt;still experimental&lt;/a&gt;. However, it&amp;rsquo;s probably the best approach right now if you want to use SSR for Meteor.</source>
          <target state="translated">尽管可以像上面针对Blaze所述那样使用Flow Router或多或少地渲染React组件，但是在撰写本文时，Flow Router对SSR的支持&lt;a href=&quot;https://kadira.io/blog/meteor/meteor-ssr-support-using-flow-router-and-react&quot;&gt;仍处于试验阶段&lt;/a&gt;。但是，如果要对流星使用SSR，这可能是目前最好的方法。</target>
        </trans-unit>
        <trans-unit id="ee92655a563a27ab39f889772a5a30117b788eb8" translate="yes" xml:space="preserve">
          <source>Although Flow Router doesn&amp;rsquo;t take a done callback, we can use &lt;code&gt;Tracker.afterFlush&lt;/code&gt; to wait for all its reactive consequences to occur.</source>
          <target state="translated">尽管Flow Router不会执行完成的回调，但我们可以使用 &lt;code&gt;Tracker.afterFlush&lt;/code&gt; 等待其所有反应性结果发生。</target>
        </trans-unit>
        <trans-unit id="47aab11c85307f6b36496adfd4cd8d785a28dd2e" translate="yes" xml:space="preserve">
          <source>Although Meteor allows you to &lt;a href=&quot;http://docs.meteor.com/#/full/webapp&quot;&gt;write low-level connect handlers&lt;/a&gt; to create any kind of API you like on the server-side, if all you want to do is create a RESTful version of your Methods and Publications, you can often use the &lt;a href=&quot;http://atmospherejs.com/simple/rest&quot;&gt;&lt;code&gt;simple:rest&lt;/code&gt;&lt;/a&gt; package to do this easily. See the &lt;a href=&quot;data-loading#publications-as-rest&quot;&gt;Data Loading&lt;/a&gt; and &lt;a href=&quot;methods&quot;&gt;Methods&lt;/a&gt; articles for more information.</source>
          <target state="translated">尽管Meteor允许您&lt;a href=&quot;http://docs.meteor.com/#/full/webapp&quot;&gt;编写低级连接处理程序&lt;/a&gt;来在服务器端创建您喜欢的任何类型的API，但是如果您要做的只是创建方法和出版物的RESTful版本，您通常可以使用&lt;a href=&quot;http://atmospherejs.com/simple/rest&quot;&gt; &lt;code&gt;simple:rest&lt;/code&gt; &lt;/a&gt;打包即可轻松做到这一点。有关更多信息，请参见&amp;ldquo; &lt;a href=&quot;data-loading#publications-as-rest&quot;&gt;数据加载&lt;/a&gt;和&lt;a href=&quot;methods&quot;&gt;方法&amp;rdquo;&lt;/a&gt;文章。</target>
        </trans-unit>
        <trans-unit id="75c597556558c3dec1c29366758ff7d0f9b95387" translate="yes" xml:space="preserve">
          <source>Although Meteor includes a standard set of app icons and launch screens, you&amp;rsquo;ll most likely want to configure your own images.</source>
          <target state="translated">尽管Meteor包括一组标准的应用程序图标和启动屏幕，但您很可能希望配置自己的图像。</target>
        </trans-unit>
        <trans-unit id="12456b8a1d08c20fc0ed154b40610ed03d056d01" translate="yes" xml:space="preserve">
          <source>Although MongoDB is a schema-less database, which allows maximum flexibility in data structuring, it is generally good practice to use a schema to constrain the contents of your collection to conform to a known format. If you don&amp;rsquo;t, then you tend to end up needing to write defensive code to check and confirm the structure of your data as it &lt;em&gt;comes out&lt;/em&gt; of the database, instead of when it &lt;em&gt;goes into&lt;/em&gt; the database. As in most things, you tend to &lt;em&gt;read data more often than you write it&lt;/em&gt;, and so it&amp;rsquo;s usually easier, and less buggy to use a schema when writing.</source>
          <target state="translated">尽管MongoDB是一个无模式的数据库，它在数据结构方面提供了最大的灵活性，但是通常最好的做法是使用模式将集合的内容约束为符合已知格式。如果不这样做，那么最终倾向于编写防御性代码来检查和确认数据&lt;em&gt;从&lt;/em&gt;数据库中&lt;em&gt;出来&lt;/em&gt;时的结构，而不是何时&lt;em&gt;进入&lt;/em&gt;数据库中。就像在大多数情况下一样，&lt;em&gt;读取数据的频率往往比写入数据的频率高&lt;/em&gt;，因此在编写数据时使用架构通常更容易，而且错误更少。</target>
        </trans-unit>
        <trans-unit id="a57f88682acb9b68264003f0c2e86fe9a442616b" translate="yes" xml:space="preserve">
          <source>Although a host of tools exist to monitor the performance of HTTP, request-response based applications, the insights they give aren&amp;rsquo;t necessarily useful for a connected client system like a Meteor application. Although it&amp;rsquo;s true that slow HTTP response times would be a problem for your app, and so using a tool like &lt;a href=&quot;https://www.pingdom.com&quot;&gt;Pingdom&lt;/a&gt; can serve a purpose, there are many kinds of issues with your app that won&amp;rsquo;t be surfaced by such tools.</source>
          <target state="translated">尽管存在许多工具来监视基于HTTP（基于请求响应）的应用程序的性能，但是它们提供的见解对于像Meteor应用程序这样的连接客户端系统不一定有用。尽管确实很慢，HTTP响应时间对于您的应用程序来说是个问题，因此使用&lt;a href=&quot;https://www.pingdom.com&quot;&gt;Pingdom之&lt;/a&gt;类的工具可以达到目的，但此类工具不会解决您应用程序中的许多问题。</target>
        </trans-unit>
        <trans-unit id="816e3a71f46dd88bccaf7db749b2b51725f41ce6" translate="yes" xml:space="preserve">
          <source>Although by default a mustache tag will escape HTML tags to avoid &lt;a href=&quot;https://en.wikipedia.org/wiki/Cross-site_scripting&quot;&gt;XSS&lt;/a&gt;, you can render raw HTML with the triple-mustache: &lt;code&gt;{{{ }}}&lt;/code&gt;.</source>
          <target state="translated">尽管默认情况下，胡子标记将转义HTML标记以避免&lt;a href=&quot;https://en.wikipedia.org/wiki/Cross-site_scripting&quot;&gt;XSS&lt;/a&gt;，但您可以使用三重胡子 &lt;code&gt;{{{ }}}&lt;/code&gt; 渲染原始HTML 。</target>
        </trans-unit>
        <trans-unit id="11fbdf05d6f81bfb2563790780a590cdd860509e" translate="yes" xml:space="preserve">
          <source>Although client-side state is often best contained as state of an individual template (and passed down the template hierarchy as arguments where necessary), sometimes you have a need for &amp;ldquo;global&amp;rdquo; state that is shared between unrelated sections of the template hierarchy.</source>
          <target state="translated">尽管通常最好将客户端状态包含为单个模板的状态（并在必要时作为参数传递到模板层次结构中），但有时您需要在模板层次结构的不相关部分之间共享的&amp;ldquo;全局&amp;rdquo;状态。</target>
        </trans-unit>
        <trans-unit id="2f848759a83ec177cf6e81aa9f9fba003f196c56" translate="yes" xml:space="preserve">
          <source>Although conceptually different to unit tests, such tests typically do not need to be run any differently to unit tests and can use the same &lt;a href=&quot;#running-unit-tests&quot;&gt;&lt;code&gt;meteor test&lt;/code&gt; mode&lt;/a&gt; and &lt;a href=&quot;#isolation-techniques&quot;&gt;isolation techniques&lt;/a&gt; as we use for unit tests.</source>
          <target state="translated">尽管从概念上讲与单元测试不同，但此类测试通常不需要与单元测试以任何不同的方式运行，并且可以使用与单元测试相同的&lt;a href=&quot;#running-unit-tests&quot;&gt; &lt;code&gt;meteor test&lt;/code&gt; 模式&lt;/a&gt;和&lt;a href=&quot;#isolation-techniques&quot;&gt;隔离技术&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8b3c8e6eb7114c7f69c371ed26378e67af59e5ad" translate="yes" xml:space="preserve">
          <source>Although having client-side logs in the terminal can be useful, in most cases remote debugging is a much better option. This allows you to use the debugging tools built into Safari (for iOS apps) or Chrome (for Android apps) to investigate an app running on a remote device or a simulator/emulator. Here, you can not only view the logs, but also interact with running JavaScript code and the DOM, monitor network access, etc.</source>
          <target state="translated">虽然在终端中拥有客户端日志可能很有用,但在大多数情况下,远程调试是一个更好的选择。这允许您使用Safari(针对iOS应用程序)或Chrome(针对Android应用程序)中内置的调试工具来调查在远程设备或模拟器/仿真器上运行的应用程序。在这里,你不仅可以查看日志,还可以与运行中的JavaScript代码和DOM进行交互,监控网络访问等。</target>
        </trans-unit>
        <trans-unit id="72731dbfb51a131b019a3873aaf11db2744a36a1" translate="yes" xml:space="preserve">
          <source>Although it&amp;rsquo;s much easier to deploy a web application than release most other types of software, that doesn&amp;rsquo;t mean you should be cavalier with your deployment. It&amp;rsquo;s important to properly QA and test your releases before you push them live, to ensure that users don&amp;rsquo;t have a bad experience, or even worse, data get corrupted.</source>
          <target state="translated">尽管与发布大多数其他类型的软件相比，部署Web应用程序要容易得多，但这并不意味着您应该精于部署。重要的是在发布之前进行正确的质量检查和测试，以确保用户不会有不好的体验，甚至更糟的是，数据不会受到破坏。</target>
        </trans-unit>
        <trans-unit id="5087ad6f3bfaa0067d4829982ae5aa028789a430" translate="yes" xml:space="preserve">
          <source>Although the Tracker system means you often don&amp;rsquo;t &lt;em&gt;need&lt;/em&gt; to think too much about this in building your apps, usually if you want to get the user experience right, you&amp;rsquo;ll need to know when the data is ready.</source>
          <target state="translated">尽管Tracker系统意味着您在构建应用程序时通常&lt;em&gt;不需要&lt;/em&gt;考虑太多，但通常如果您想获得正确的用户体验，则需要知道何时准备好数据。</target>
        </trans-unit>
        <trans-unit id="e04bd7cc9a88f2c65a243e94369e5857aa946cba" translate="yes" xml:space="preserve">
          <source>Although there are a number of different variations of &lt;code&gt;import&lt;/code&gt; and &lt;code&gt;export&lt;/code&gt; syntax, this section describes the essential forms that everyone should know.</source>
          <target state="translated">尽管 &lt;code&gt;import&lt;/code&gt; 和 &lt;code&gt;export&lt;/code&gt; 语法有许多不同的变体，但本节介绍了每个人都应该知道的基本形式。</target>
        </trans-unit>
        <trans-unit id="eeaaf3d0d3e25db56af7c914bf7e0f44b390e568" translate="yes" xml:space="preserve">
          <source>Although there are a variety of ways that you can run data through a Simple Schema before sending it to your collection (for instance you could check a schema in every method call), the simplest and most reliable is to use the &lt;a href=&quot;https://atmospherejs.com/aldeed/collection2&quot;&gt;&lt;code&gt;aldeed:collection2&lt;/code&gt;&lt;/a&gt; package to run every mutator (&lt;code&gt;insert/update/upsert&lt;/code&gt; call) through the schema.</source>
          <target state="translated">尽管有多种方法可以在将数据发送到集合之前通过简单模式运行数据（例如，您可以在每个方法调用中检查模式），但最简单，最可靠的方法是使用&lt;a href=&quot;https://atmospherejs.com/aldeed/collection2&quot;&gt; &lt;code&gt;aldeed:collection2&lt;/code&gt; &lt;/a&gt;包通过模式运行每个增幅器（ &lt;code&gt;insert/update/upsert&lt;/code&gt; 调用）。</target>
        </trans-unit>
        <trans-unit id="f2c5e2c0dabd55a432e2a69dcb16b0f0611342bb" translate="yes" xml:space="preserve">
          <source>Although these examples have all involved React, the &lt;code&gt;onPageLoad&lt;/code&gt; API is designed to be generically useful for any kind of server-side rendering.</source>
          <target state="translated">尽管这些示例都涉及React，但 &lt;code&gt;onPageLoad&lt;/code&gt; API的设计目的是对任何类型的服务器端渲染都通用。</target>
        </trans-unit>
        <trans-unit id="a98d751c99750a97e0d90228217615e64356e110" translate="yes" xml:space="preserve">
          <source>Although this &lt;code&gt;ListPageContainer&lt;/code&gt; container is intended to be instantiated by the React Router (which passes in the props automatically), if we did ever want to create one manually, we would need to pass in the props to the container component (which then get passed into our data function above):</source>
          <target state="translated">尽管此 &lt;code&gt;ListPageContainer&lt;/code&gt; 容器旨在由React Router实例化（它会自动传递道具），但如果我们确实想手动创建一个容器，则需要将props传递给容器组件（然后将其传递到我们上面的数据功能）：</target>
        </trans-unit>
        <trans-unit id="57a2a554819e200e6472a12bbba84116b2255302" translate="yes" xml:space="preserve">
          <source>Although we can run the acceptance test against our &amp;ldquo;pure&amp;rdquo; Meteor app, as we&amp;rsquo;ve done above, it often makes sense to start our meteor server with a special test driver, &lt;code&gt;tmeasday:acceptance-test-driver&lt;/code&gt;. (You&amp;rsquo;ll need to &lt;code&gt;meteor add&lt;/code&gt; it to your app):</source>
          <target state="translated">尽管我们可以像上面所做的那样对&amp;ldquo;纯&amp;rdquo; Meteor应用程序运行验收测试，但通常需要使用特殊的测试驱动程序 &lt;code&gt;tmeasday:acceptance-test-driver&lt;/code&gt; 启动流星服务器。（您需要 &lt;code&gt;meteor add&lt;/code&gt; 其添加到您的应用中）：</target>
        </trans-unit>
        <trans-unit id="cbe3e3881cf9d3a29b02541ba0c56605c0424458" translate="yes" xml:space="preserve">
          <source>Although you can use publications and subscriptions in Meteor via an intuitive understanding, sometimes it&amp;rsquo;s useful to know exactly what happens under the hood when you subscribe to data.</source>
          <target state="translated">尽管您可以通过直观的了解来使用Meteor中的出版物和订阅，但是有时确切了解订阅数据时发生的实际情况还是有用的。</target>
        </trans-unit>
        <trans-unit id="60243bd30eed074113093259d5db7f0ed4cc362b" translate="yes" xml:space="preserve">
          <source>Always restrict fields</source>
          <target state="translated">始终限制字段</target>
        </trans-unit>
        <trans-unit id="6e55dd4e72e3ccefcd5b8b8ceaf6dc4d5ff0bf41" translate="yes" xml:space="preserve">
          <source>Always use specific queries to fetch data</source>
          <target state="translated">总是使用特定的查询来获取数据</target>
        </trans-unit>
        <trans-unit id="40da5ba1b12dabdb8a661305aaaf4d1bf0be14c0" translate="yes" xml:space="preserve">
          <source>An &amp;ldquo;else&amp;rdquo; section may be provided, which is used (with no new data context) if there are zero items in the sequence at any time.</source>
          <target state="translated">如果在任何时候序列中有零项，则可以提供一个&amp;ldquo; else&amp;rdquo;节，该节将被使用（没有新的数据上下文）。</target>
        </trans-unit>
        <trans-unit id="7b69ef6dc1aa3027ada407c4c65c6d1d1c505c71" translate="yes" xml:space="preserve">
          <source>An &amp;ldquo;import&amp;rdquo; file is evaluated only if imported from some other file and can be used to share common mixins and variables between different CSS files in your app.</source>
          <target state="translated">仅当从其他文件中导入&amp;ldquo;导入&amp;rdquo;文件时，才会对其进行评估，并且可用于在应用程序中不同CSS文件之间共享常见的mixin和变量。</target>
        </trans-unit>
        <trans-unit id="c1f3be26c217a4b2e96528059e6d171577f3fa88" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;#each&lt;/code&gt; template tag takes a sequence argument and inserts its content for each item in the sequence, setting the data context to the value of that item:</source>
          <target state="translated">一个 &lt;code&gt;#each&lt;/code&gt; 模板标签接受一个序列参数并插入其对于序列中的每个项目的内容，数据上下文设置到该项目的值：</target>
        </trans-unit>
        <trans-unit id="57e356d3f63e006f6def6a6a02e45aec1d58cec7" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;#if&lt;/code&gt; template tag renders either its main content or its &amp;ldquo;else&amp;rdquo; content, depending on the value of its data argument. Any falsy JavaScript value (including &lt;code&gt;null&lt;/code&gt;, &lt;code&gt;undefined&lt;/code&gt;, &lt;code&gt;0&lt;/code&gt;, &lt;code&gt;&quot;&quot;&lt;/code&gt;, and &lt;code&gt;false&lt;/code&gt;) is considered false, as well as the empty array, while any other value is considered true.</source>
          <target state="translated">一个 &lt;code&gt;#if&lt;/code&gt; 模板标签生成或者其主要内容还是它的&amp;ldquo;其他&amp;rdquo;的内容，这取决于它的数据参数的值。任何虚假的JavaScript值（包括 &lt;code&gt;null&lt;/code&gt; ， &lt;code&gt;undefined&lt;/code&gt; ， &lt;code&gt;0&lt;/code&gt; ， &lt;code&gt;&quot;&quot;&lt;/code&gt; 和 &lt;code&gt;false&lt;/code&gt; ）以及空数组均被视为false，而其他任何值均被视为true。</target>
        </trans-unit>
        <trans-unit id="60807195df5a09eb17a1a3822f5378974da4c514" translate="yes" xml:space="preserve">
          <source>An API for registering new login handlers, which is used by all of the other accounts packages to integrate with the accounts system. There isn&amp;rsquo;t any official documentation for this API, but you can &lt;a href=&quot;https://web.archive.org/web/20160913210817/https://meteorhacks.com/extending-meteor-accounts&quot;&gt;read more about it on the MeteorHacks blog&lt;/a&gt;.</source>
          <target state="translated">用于注册新登录处理程序的API，所有其他帐户软件包都使用该API与帐户系统集成。此API没有任何官方文档，但是您可以&lt;a href=&quot;https://web.archive.org/web/20160913210817/https://meteorhacks.com/extending-meteor-accounts&quot;&gt;在MeteorHacks博客上阅读有关它的更多信息&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9c82caa99effa4eda8502e42bc84f0ecef61c6be" translate="yes" xml:space="preserve">
          <source>An Object where the keys are different devices and screen sizes, and values are image paths relative to the project root directory.</source>
          <target state="translated">一个对象,其中键是不同的设备和屏幕尺寸,值是相对于项目根目录的图像路径。</target>
        </trans-unit>
        <trans-unit id="4624ccc518eb1cbf20aee2a5fb3bbc122b1849a6" translate="yes" xml:space="preserve">
          <source>An alternative method is maintaining a separate repository for the package and changing the &lt;code&gt;package.json&lt;/code&gt; version number &lt;a href=&quot;http://debuggable.com/posts/how-to-fork-patch-npm-modules:4e2eb9f3-e584-44be-b1a9-3db7cbdd56cb&quot;&gt;to a git URL or tarball&lt;/a&gt;, but every time you edit the separate repo, you&amp;rsquo;ll need to commit, push, and &lt;code&gt;npm update left-pad&lt;/code&gt;.</source>
          <target state="translated">另一种方法是为软件包维护一个单独的存储库，并将 &lt;code&gt;package.json&lt;/code&gt; 版本号&lt;a href=&quot;http://debuggable.com/posts/how-to-fork-patch-npm-modules:4e2eb9f3-e584-44be-b1a9-3db7cbdd56cb&quot;&gt;更改为git URL或tarball&lt;/a&gt;，但是每次编辑单独的存储库时，都需要提交，推送和 &lt;code&gt;npm update left-pad&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b9ee32b0aa3a5fc5cc578644a58357383c50ea5d" translate="yes" xml:space="preserve">
          <source>An application, especially a web application, is rarely finished, and it&amp;rsquo;s useful to consider potential future changes when designing your data schema. As in most things, it&amp;rsquo;s rarely a good idea to add fields before you actually need them (often what you anticipate doesn&amp;rsquo;t actually end up happening, after all).</source>
          <target state="translated">应用程序，尤其是Web应用程序，很少完成，因此在设计数据架构时考虑将来可能发生的更改很有用。与大多数情况一样，在您真正需要它们之前添加字段（通常通常您最终没有想到的事情）通常不是一个好主意。</target>
        </trans-unit>
        <trans-unit id="c21639d57ab81ac3ed87193a8bc708b7c6454c06" translate="yes" xml:space="preserve">
          <source>An argument to a helper can be any path or identifier, or a string, boolean, or number literal, or null.</source>
          <target state="translated">助手的参数可以是任何路径或标识符,或者是字符串、布尔值、数字文字,或者是空值。</target>
        </trans-unit>
        <trans-unit id="ef8f757269fdb7b1876d70c1c37c25280c0a432c" translate="yes" xml:space="preserve">
          <source>An array of the arguments passed to the login method.</source>
          <target state="translated">传递给登录方法的参数数组。</target>
        </trans-unit>
        <trans-unit id="1564c3525dd8092b11e527a382b767e7640263a7" translate="yes" xml:space="preserve">
          <source>An associative key-value data structure where the keys can be any JavaScript value (not just strings). Lookup and insertion take constant time.</source>
          <target state="translated">一个关联的键值数据结构,其中键可以是任何JavaScript值(不仅仅是字符串)。查找和插入需要持续的时间。</target>
        </trans-unit>
        <trans-unit id="ee9ac968ca76052ac9c49e478951fa0321be9d8c" translate="yes" xml:space="preserve">
          <source>An attribute value that consists entirely of template tags that return &lt;code&gt;null&lt;/code&gt;, &lt;code&gt;undefined&lt;/code&gt;, or &lt;code&gt;false&lt;/code&gt; is considered absent; otherwise, the attribute is considered present, even if its value is empty.</source>
          <target state="translated">完全由返回 &lt;code&gt;null&lt;/code&gt; ， &lt;code&gt;undefined&lt;/code&gt; 或 &lt;code&gt;false&lt;/code&gt; 的模板标记组成的属性值被视为不存在；否则，即使该属性的值为空，也认为该属性存在。</target>
        </trans-unit>
        <trans-unit id="c0233f3693abbb07f263af82b43adc249b8da0d4" translate="yes" xml:space="preserve">
          <source>An automatic flush occurs whenever the system is idle which performs exactly the same work as &lt;code&gt;Tracker.flush&lt;/code&gt;. The flushing process consists of rerunning any invalidated computations. If additional invalidations happen while flushing, they are processed as part of the same flush until there is no more work to be done. Callbacks registered with &lt;a href=&quot;#tracker_afterflush&quot;&gt;&lt;code&gt;Tracker.afterFlush&lt;/code&gt;&lt;/a&gt; are called after processing outstanding invalidations.</source>
          <target state="translated">每当系统空闲时，都会发生自动刷新，该刷新执行与 &lt;code&gt;Tracker.flush&lt;/code&gt; 完全相同的工作。刷新过程包括重新运行所有无效的计算。如果在刷新时发生其他无效，它们将作为同一刷新的一部分进行处理，直到没有更多工作要做。在处理了无效的无效之后，将调用在&lt;a href=&quot;#tracker_afterflush&quot;&gt; &lt;code&gt;Tracker.afterFlush&lt;/code&gt; &lt;/a&gt;中注册的回调。</target>
        </trans-unit>
        <trans-unit id="efe098602b753737813a8d517be30c228478e692" translate="yes" xml:space="preserve">
          <source>An email address that the external service will use to pre-fill the login prompt. Currently only supported with Meteor developer accounts and Google accounts. If used with Google, the Google User ID can also be passed.</source>
          <target state="translated">外部服务将用来预填登录提示的电子邮件地址。目前只支持Meteor开发者账户和Google账户。如果与Google一起使用,也可以传递Google用户ID。</target>
        </trans-unit>
        <trans-unit id="53c5641e85e960206e7a66dfc0d3f25931ac36dd" translate="yes" xml:space="preserve">
          <source>An event map is an object where the properties specify a set of events to handle, and the values are the handlers for those events. The property can be in one of several forms:</source>
          <target state="translated">事件图是一个对象,其中的属性指定了一组要处理的事件,而值是这些事件的处理程序。属性可以是几种形式之一。</target>
        </trans-unit>
        <trans-unit id="f9ab1a2784611cd47401201ce3ebd4475ad0a247" translate="yes" xml:space="preserve">
          <source>An example of refactoring from JavaScript to ES2015</source>
          <target state="translated">从JavaScript到ES2015的重构实例</target>
        </trans-unit>
        <trans-unit id="f798739801d9d9f4af7698ee9285363cbb093b4a" translate="yes" xml:space="preserve">
          <source>An implementation of the global &lt;a href=&quot;http://www.2ality.com/2014/12/es6-symbols.html&quot;&gt;&lt;code&gt;Symbol&lt;/code&gt;&lt;/a&gt;s namespace that enables a number of other ES2015 features, such as &lt;code&gt;for&lt;/code&gt;-&lt;code&gt;of&lt;/code&gt; loops and &lt;code&gt;Symbol.iterator&lt;/code&gt; methods: &lt;code&gt;[1,2,3][Symbol.iterator]()&lt;/code&gt;.</source>
          <target state="translated">全局&lt;a href=&quot;http://www.2ality.com/2014/12/es6-symbols.html&quot;&gt; &lt;code&gt;Symbol&lt;/code&gt; &lt;/a&gt;命名空间的实现，启用了许多其他ES2015功能，例如 &lt;code&gt;for&lt;/code&gt; - &lt;code&gt;of&lt;/code&gt; 循环和 &lt;code&gt;Symbol.iterator&lt;/code&gt; 方法： &lt;code&gt;[1,2,3][Symbol.iterator]()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b4b4407844f4a4dc759581d6064eca76528a967d" translate="yes" xml:space="preserve">
          <source>An important benefit of this is that while downloading may be slow over mobile connections, this is done in the background, and we won&amp;rsquo;t attempt to reload the app until all assets have been downloaded to the device.</source>
          <target state="translated">这样做的重要好处是，虽然下载可能会比移动连接慢，但这是在后台完成的，在所有资产都下载到设备上之前，我们不会尝试重新加载应用程序。</target>
        </trans-unit>
        <trans-unit id="bb146ac321e4c6bcea177d984200acd59b006687" translate="yes" xml:space="preserve">
          <source>An important feature shared by all of the available CSS pre-processors is the ability to import files. This lets you split your CSS into smaller pieces, and provides a lot of the same benefits that you get from JavaScript modules:</source>
          <target state="translated">所有可用的CSS预处理器共享的一个重要功能是导入文件的能力。这让你可以将你的CSS分割成更小的部分,并提供了很多与JavaScript模块相同的好处。</target>
        </trans-unit>
        <trans-unit id="2d7a8447f55c6513fafbefb339d3cfafcaeff8dd" translate="yes" xml:space="preserve">
          <source>An important function of the guide is to &lt;strong&gt;shape future development&lt;/strong&gt; in the Meteor platform. By documenting best practices, the guide shines a spotlight on areas of the platform that could be better, easier, or more performant, and thus will be used to focus a lot of future platform choices.</source>
          <target state="translated">该指南的重要功能是影响Meteor平台的&lt;strong&gt;未来发展&lt;/strong&gt;。通过记录最佳实践，该指南将重点放在平台的某些方面，这些方面可能会更好，更容易或更高效，因此将用于将来的许多平台选择。</target>
        </trans-unit>
        <trans-unit id="a0b7c184ba35ece6bffa56bde2068598168be452" translate="yes" xml:space="preserve">
          <source>An important property of ReactiveVars &amp;mdash; which is sometimes a reason for using one &amp;mdash; is that setting the value to the same value as before has no effect; it does not trigger any invalidations. So if one autorun sets a ReactiveVar, and another autorun gets the ReactiveVar, a re-run of the first autorun won&amp;rsquo;t necessarily trigger the second. By default, only primitive values are compared this way, while calling &lt;code&gt;set&lt;/code&gt; on an argument that is an &lt;em&gt;object&lt;/em&gt; (not a primitive) always counts as a change. You can configure this behavior using the &lt;code&gt;equalsFunc&lt;/code&gt; argument.</source>
          <target state="translated">ReactiveVars的一个重要属性（有时是使用它的一个原因）是，将值设置为与以前相同的值无效。它不会触发任何失效。因此，如果一个自动运行设置了ReactiveVar，而另一个自动运行获取了ReactiveVar，则第一个自动运行的重新运行不一定会触发第二个。默认情况下，仅以这种方式比较原始值，而在作为&lt;em&gt;对象&lt;/em&gt;（而非原始）的参数上调用 &lt;code&gt;set&lt;/code&gt; 总是被视为更改。您可以使用 &lt;code&gt;equalsFunc&lt;/code&gt; 参数配置此行为。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f416fec1003a0bcbc7389e3596de024838c0a629" translate="yes" xml:space="preserve">
          <source>An inclusion tag inserts an instantiation of the given template at the current location. If there is an argument, it becomes the data context, much as if the following code were used:</source>
          <target state="translated">包含标签在当前位置插入一个给定模板的实例化。如果有一个参数,它就成为数据上下文,就像使用下面的代码一样。</target>
        </trans-unit>
        <trans-unit id="2de52e1004e5b1b4b43a03b939b9ec67cf9f960e" translate="yes" xml:space="preserve">
          <source>An inclusion tag takes the form &lt;code&gt;{{&amp;gt; templateName}}&lt;/code&gt; or &lt;code&gt;{{&amp;gt; templateName
dataObj}}&lt;/code&gt;. Other argument forms are syntactic sugar for constructing a data object (see Inclusion and Block Arguments).</source>
          <target state="translated">包含标签的格式为 &lt;code&gt;{{&amp;gt; templateName}}&lt;/code&gt; 或 &lt;code&gt;{{&amp;gt; templateName dataObj}}&lt;/code&gt; 。其他参数形式是用于构造数据对象的语法糖（请参见包含和块参数）。</target>
        </trans-unit>
        <trans-unit id="2b5c186e705e28f3f9215652fa5ec2217809e19e" translate="yes" xml:space="preserve">
          <source>An integration test is a test that crosses module boundaries. In the simplest case, this simply means something very similar to a unit test, where you perform your isolation around multiple modules, creating a non-singular &amp;ldquo;system under test&amp;rdquo;.</source>
          <target state="translated">集成测试是跨越模块边界的测试。在最简单的情况下，这仅意味着与单元测试非常相似，在单元测试中，您围绕多个模块执行隔离，从而创建了非单一的&amp;ldquo;被测系统&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="cc3471c2da65468e3c2464e0ada84cc740a10735" translate="yes" xml:space="preserve">
          <source>An interesting UX challenge in a realtime system like Meteor involves how to bring new information (like changing data in a list) to the user&amp;rsquo;s attention. As &lt;a href=&quot;http://blog.percolatestudio.com/design/design-for-realtime/&quot;&gt;Dominic&lt;/a&gt; points out, it&amp;rsquo;s not always a good idea to simply update the contents of a list as quickly as possible, as it&amp;rsquo;s easy to miss changes or get confused about what&amp;rsquo;s happened.</source>
          <target state="translated">在像Meteor这样的实时系统中，一个有趣的UX挑战涉及如何使新信息（例如更改列表中的数据）引起用户的注意。正如&lt;a href=&quot;http://blog.percolatestudio.com/design/design-for-realtime/&quot;&gt;Dominic&lt;/a&gt;指出的那样，尽可能快地更新列表的内容并不总是一个好主意，因为很容易错过更改或对发生的事情感到困惑。</target>
        </trans-unit>
        <trans-unit id="3eaa5e7bb94bc068800ae4a147a75b3351df6c7d" translate="yes" xml:space="preserve">
          <source>An inverted &lt;a href=&quot;#Blaze-If&quot;&gt;&lt;code&gt;Blaze.If&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">倒的&lt;a href=&quot;#Blaze-If&quot;&gt; &lt;code&gt;Blaze.If&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="939b63e7cbbea497e2b1e6a9008066115b2bd7e0" translate="yes" xml:space="preserve">
          <source>An object to use as the data context, or a function returning such an object. If a function is provided, it will be reactively re-run.</source>
          <target state="translated">一个作为数据上下文的对象,或者一个返回该对象的函数。如果提供了一个函数,它将被反应性地重新运行。</target>
        </trans-unit>
        <trans-unit id="434c556f4c70bf2be0ddd49e6466955c1a738a9d" translate="yes" xml:space="preserve">
          <source>An object where the keys are NPM package names, and the values are the version numbers of required NPM packages, just like in &lt;a href=&quot;#Npm-depends&quot;&gt;Npm.depends&lt;/a&gt;.</source>
          <target state="translated">就像&lt;a href=&quot;#Npm-depends&quot;&gt;Npm.depends中&lt;/a&gt;一样，该对象的键是NPM软件包名称，值是所需NPM软件包的版本号。</target>
        </trans-unit>
        <trans-unit id="2ddc8c2f8c8e4417f5a3606059179534670eafff" translate="yes" xml:space="preserve">
          <source>An object where the keys are package names and the values are one of:</source>
          <target state="translated">一个对象,其中键是包名,值是以下之一:</target>
        </trans-unit>
        <trans-unit id="79785ffa5c429166c70188beff22fd316c295172" translate="yes" xml:space="preserve">
          <source>An object where the keys are plugin names and the values are version numbers or GitHub tarball URLs in string form. Example:</source>
          <target state="translated">一个对象,其中键是插件名称,值是版本号或GitHub的字符串形式的tarball URL。例如</target>
        </trans-unit>
        <trans-unit id="7b2c7ac909dcb09c335c9bced0b8eccb30aec3b4" translate="yes" xml:space="preserve">
          <source>An object which will be the value of &lt;code&gt;this&lt;/code&gt; inside &lt;code&gt;callback&lt;/code&gt;.</source>
          <target state="translated">一个对象，它将作为 &lt;code&gt;this&lt;/code&gt; 内部 &lt;code&gt;callback&lt;/code&gt; 的值。</target>
        </trans-unit>
        <trans-unit id="a0d7bef6545170610b98222ab80587927b525861" translate="yes" xml:space="preserve">
          <source>An object with two fields: '_variable' and '_sequence'. Each iterates over '_sequence', it may be a Cursor, an array, null, or undefined. Inside the Each body you will be able to get the current item from the sequence using the name specified in the '_variable' field.</source>
          <target state="translated">一个对象有两个字段:'_variable'和'_sequence'。每个对象都会对'_sequence'进行迭代,它可能是一个Cursor,一个数组,null,或者未定义。在Each体中,你可以使用'_variable'字段中指定的名称从序列中获取当前项目。</target>
        </trans-unit>
        <trans-unit id="8a7b61ebb065b9b10d0b68f0f03a2a450ddd054c" translate="yes" xml:space="preserve">
          <source>An option in this case is to call out that there are changes to the data the user is looking at without actually making UI updates. In a system like Meteor which is reactive by default, it isn&amp;rsquo;t necessarily easy to stop such changes from happening!</source>
          <target state="translated">在这种情况下，一种选择是指出用户正在查看的数据已发生更改，而没有实际进行UI更新。在像Meteor这样的默认响应的系统中，阻止此类更改的发生不一定很容易！</target>
        </trans-unit>
        <trans-unit id="63a8d8663ae7dd69a7d7fcccf37257cc02056a32" translate="yes" xml:space="preserve">
          <source>An optional computation declared to depend on &lt;code&gt;dependency&lt;/code&gt; instead of the current computation.</source>
          <target state="translated">声明为依赖于 &lt;code&gt;dependency&lt;/code&gt; 而不是当前计算的可选计算。</target>
        </trans-unit>
        <trans-unit id="44ae3ec55c149b5c7809f399272d4c11c9cf49c5" translate="yes" xml:space="preserve">
          <source>An optional transformation function. Documents will be passed through this function before being returned from &lt;code&gt;fetch&lt;/code&gt; or &lt;code&gt;findOne&lt;/code&gt;, and before being passed to callbacks of &lt;code&gt;observe&lt;/code&gt;, &lt;code&gt;map&lt;/code&gt;, &lt;code&gt;forEach&lt;/code&gt;, &lt;code&gt;allow&lt;/code&gt;, and &lt;code&gt;deny&lt;/code&gt;. Transforms are &lt;em&gt;not&lt;/em&gt; applied for the callbacks of &lt;code&gt;observeChanges&lt;/code&gt; or to cursors returned from publish functions.</source>
          <target state="translated">可选的转换功能。从 &lt;code&gt;fetch&lt;/code&gt; 或 &lt;code&gt;findOne&lt;/code&gt; 返回文档之前，文档将通过此函数传递，并在传递给 &lt;code&gt;observe&lt;/code&gt; ， &lt;code&gt;map&lt;/code&gt; ， &lt;code&gt;forEach&lt;/code&gt; ， &lt;code&gt;allow&lt;/code&gt; 和 &lt;code&gt;deny&lt;/code&gt; 的回调之前。转换&lt;em&gt;不适&lt;/em&gt;用于 &lt;code&gt;observeChanges&lt;/code&gt; 的回调或发布函数返回的游标。</target>
        </trans-unit>
        <trans-unit id="b824ce9adc77dd0be4ee1b2f760183225e5caea5" translate="yes" xml:space="preserve">
          <source>An unrendered &lt;a href=&quot;blaze#Blaze-View&quot;&gt;View&lt;/a&gt; object, like the return value of &lt;code&gt;Blaze.With&lt;/code&gt;</source>
          <target state="translated">未渲​​染的&lt;a href=&quot;blaze#Blaze-View&quot;&gt;View&lt;/a&gt;对象，例如 &lt;code&gt;Blaze.With&lt;/code&gt; 的返回值</target>
        </trans-unit>
        <trans-unit id="25bc96295797b5371aa0625196d597ef03a952de" translate="yes" xml:space="preserve">
          <source>Analytics</source>
          <target state="translated">Analytics</target>
        </trans-unit>
        <trans-unit id="3374ddce183976efff01a7c5115eba95b4a40fb0" translate="yes" xml:space="preserve">
          <source>And finally you use Ubuntu Make to install Android Studio and all dependencies:</source>
          <target state="translated">最后你可以使用Ubuntu Make来安装Android Studio和所有的依赖项。</target>
        </trans-unit>
        <trans-unit id="d758744d30f93206235fb47dd876aa25751bc550" translate="yes" xml:space="preserve">
          <source>And then for example with Cloudfront, you would:</source>
          <target state="translated">再比如说云锋,你会。</target>
        </trans-unit>
        <trans-unit id="87b77cf3fa6cc00250d9eafc287576a9b5bf0501" translate="yes" xml:space="preserve">
          <source>And then we use that state to determine what to render in the reusable component (&lt;code&gt;listShow&lt;/code&gt;):</source>
          <target state="translated">然后，我们使用该状态来确定在可重用组件（ &lt;code&gt;listShow&lt;/code&gt; ）中呈现什么：</target>
        </trans-unit>
        <trans-unit id="1928f95c598b9e69462fcb512625cf8e28923044" translate="yes" xml:space="preserve">
          <source>Android</source>
          <target state="translated">Android</target>
        </trans-unit>
        <trans-unit id="721ce6e6721623c2b3679f1a497bdb5e9fc18886" translate="yes" xml:space="preserve">
          <source>Android 5.0 also comes with a web view based on Chromium known as the &lt;a href=&quot;https://play.google.com/store/apps/details?id=com.google.android.webview&amp;amp;hl=en&quot;&gt;Android System Web View&lt;/a&gt;, but a big improvement is that it can be automatically updated through the Play Store. This means updates to the web view happen more regularly and are independent of OS updates.</source>
          <target state="translated">Android 5.0还带有基于Chromium的&lt;a href=&quot;https://play.google.com/store/apps/details?id=com.google.android.webview&amp;amp;hl=en&quot;&gt;Web视图&lt;/a&gt;，称为Android System Web View，但它的一大改进是可以通过Play商店自动更新。这意味着对Web视图的更新更经常发生，并且独立于OS更新。</target>
        </trans-unit>
        <trans-unit id="abad22263875eb6ee0d3e2addf237a243dafe2e0" translate="yes" xml:space="preserve">
          <source>Android Play Store</source>
          <target state="translated">安卓游戏商店</target>
        </trans-unit>
        <trans-unit id="8e09000e5c2a6bef346596ec2e0dec0fbf7495a6" translate="yes" xml:space="preserve">
          <source>Angular</source>
          <target state="translated">Angular</target>
        </trans-unit>
        <trans-unit id="a43723b38f21e024754c187fecadae213b9629c6" translate="yes" xml:space="preserve">
          <source>Angular and React have had more performance optimization work put into them than Blaze and in general will perform better. However, there are some cases when Blaze does better (for instance an &lt;code&gt;{{#each}}&lt;/code&gt; over a changing cursor).</source>
          <target state="translated">与Blaze相比，Angular和React进行了更多的性能优化工作，并且总体而言性能会更好。但是，在某些情况下，Blaze会做得更好（例如，在变化的光标上使用 &lt;code&gt;{{#each}}&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="0e4a5ab22e741abebab09ca99335854ad9c0bf12" translate="yes" xml:space="preserve">
          <source>Angular has 12k stars on Github and 4k npm libraries.</source>
          <target state="translated">Angular在Github上有1.2万颗星,4k个npm库。</target>
        </trans-unit>
        <trans-unit id="d00a167e9bc949dd872e53179e60625a5c4ddedc" translate="yes" xml:space="preserve">
          <source>Angular is a frontend rendering library that is officially supported by Meteor. The best place to read about how to use both Angular 1 and Angular 2 in Meteor is the &lt;a href=&quot;http://www.angular-meteor.com&quot;&gt;Angular-Meteor&lt;/a&gt; site.</source>
          <target state="translated">Angular是Meteor正式支持的前端渲染库。了解如何在Meteor中同时使用Angular 1和Angular 2的最佳地点是&lt;a href=&quot;http://www.angular-meteor.com&quot;&gt;Angular-Meteor&lt;/a&gt;网站。</target>
        </trans-unit>
        <trans-unit id="d386e5af782ff9d0f20d504af94511ef38ed1b6e" translate="yes" xml:space="preserve">
          <source>Angular templates</source>
          <target state="translated">Angular模板</target>
        </trans-unit>
        <trans-unit id="f4738ab5bc5ed3304cbb6cdc02b822657b885d14" translate="yes" xml:space="preserve">
          <source>Angular uses HTML with &lt;a href=&quot;https://angular.io/docs/ts/latest/guide/cheatsheet.html&quot;&gt;special attribute syntax&lt;/a&gt; for logic and events. Template helpers are written in the accompanying JavaScript file along with events, which are called by name from inside HTML attributes.</source>
          <target state="translated">Angular使用具有&lt;a href=&quot;https://angular.io/docs/ts/latest/guide/cheatsheet.html&quot;&gt;特殊属性语法的&lt;/a&gt; HTML 来处理逻辑和事件。模板助手与事件一起被写入随附的JavaScript文件中，事件从HTML属性内部按名称进行调用。</target>
        </trans-unit>
        <trans-unit id="87e2b69592048ff9af58feabfc5fa2431afde4d0" translate="yes" xml:space="preserve">
          <source>Animating changes in visiblity</source>
          <target state="translated">动态变化的可视性</target>
        </trans-unit>
        <trans-unit id="62b2ca1ca82dfed15272dd7126d0b0dfb6a088d8" translate="yes" xml:space="preserve">
          <source>Animating changes to attributes</source>
          <target state="translated">动态改变属性</target>
        </trans-unit>
        <trans-unit id="f70394e94c6014a61ca469dcf37e120f2bf7d949" translate="yes" xml:space="preserve">
          <source>Animating page changes</source>
          <target state="translated">动态改变页面</target>
        </trans-unit>
        <trans-unit id="62afd21e88769f01ba1c9330803baad57564d6e9" translate="yes" xml:space="preserve">
          <source>Animation</source>
          <target state="translated">Animation</target>
        </trans-unit>
        <trans-unit id="960960bd10c2c00046e9f7b8439f5832a60919ed" translate="yes" xml:space="preserve">
          <source>Animation is the process of indicating changes in the UI smoothly &lt;em&gt;over time&lt;/em&gt; rather than &lt;em&gt;instantly&lt;/em&gt;. Although animation is often seen as &amp;ldquo;window dressing&amp;rdquo; or purely aesthetic, in fact it serves a very important purpose, highlighted by the example of the changing list above. In a connected-client world where changes in the UI aren&amp;rsquo;t always initiated by user action (i.e. sometimes they happen as a result of the server pushing changes made by other users), instant changes can result in a user experience where it&amp;rsquo;s difficult to understand what is happening.</source>
          <target state="translated">动画是指示UI &lt;em&gt;随时间推移&lt;/em&gt;而不是&lt;em&gt;立即&lt;/em&gt;显示变化的过程。尽管动画通常被视为&amp;ldquo;橱窗装扮&amp;rdquo;或纯粹是美观的，但实际上它具有非常重要的作用，上面的更改清单示例突出了这一点。在互联客户端世界中，UI更改并非总是由用户操作引起的（即，有时是由于服务器推动其他用户所做的更改而发生的），即时更改会导致难以体验的用户体验。了解发生了什么。</target>
        </trans-unit>
        <trans-unit id="0a742cf454fa6ee03e580e0e78d51baf9a72035d" translate="yes" xml:space="preserve">
          <source>Another common type of animation is when an attribute of an element changes. For instance, a button may change color when you click on it. These type of animations are most easily achieved with &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Transitions/Using_CSS_transitions&quot;&gt;CSS transitions&lt;/a&gt;. For example, we use a CSS transition for the hover state of links in the Todos example app:</source>
          <target state="translated">动画的另一种常见类型是元素的属性发生变化时。例如，单击按钮可能会改变颜色。这些类型的动画最容易通过&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Transitions/Using_CSS_transitions&quot;&gt;CSS过渡&lt;/a&gt;实现。例如，我们在Todos示例应用程序中对链接的悬停状态使用CSS过渡：</target>
        </trans-unit>
        <trans-unit id="9a914b00f992589999aaf0beed2576d01e7ac2ba" translate="yes" xml:space="preserve">
          <source>Another complicated topic in Blaze is name lookups. In what order does Blaze look when you write &lt;code&gt;{{something}}&lt;/code&gt;? It runs in the following order:</source>
          <target state="translated">Blaze中的另一个复杂主题是名称查找。编写 &lt;code&gt;{{something}}&lt;/code&gt; 时，Blaze以什么顺序显示？它按以下顺序运行：</target>
        </trans-unit>
        <trans-unit id="1d2c061dfc319fe50f49b2b9783e5e810351e214" translate="yes" xml:space="preserve">
          <source>Another denormalization that this architecture sometimes requires can be from the parent document onto sub-documents. For instance, in Todos, as we enforce privacy of the todo lists via the &lt;code&gt;list.userId&lt;/code&gt; attribute, but we publish the todos separately, it might make sense to denormalize &lt;code&gt;todo.userId&lt;/code&gt; also. To do this, we&amp;rsquo;d need to be careful to take the &lt;code&gt;userId&lt;/code&gt; from the list when creating the todo, and updating all relevant todos whenever a list&amp;rsquo;s &lt;code&gt;userId&lt;/code&gt; changed.</source>
          <target state="translated">这种体系结构有时需要进行的另一个非规范化可能是从父文档到子文档。例如，在Todos中，当我们通过 &lt;code&gt;list.userId&lt;/code&gt; 属性强制执行待办事项列表的隐私时，但是我们分别发布了待办事项，因此也可以对 &lt;code&gt;todo.userId&lt;/code&gt; 进行非规范化。为此，在创建待办事项时，我们需要小心从列表中获取 &lt;code&gt;userId&lt;/code&gt; ，并在列表的 &lt;code&gt;userId&lt;/code&gt; 更改时更新所有相关的待办事项。</target>
        </trans-unit>
        <trans-unit id="d80d645e11c3bb0ca14f386e1a48fff00ea3614a" translate="yes" xml:space="preserve">
          <source>Another example where the subscription depends on the data context:</source>
          <target state="translated">另一个例子是,订阅取决于数据上下文。</target>
        </trans-unit>
        <trans-unit id="b7190df4442987645cbae048526d2927021378c0" translate="yes" xml:space="preserve">
          <source>Another example where you want to initialize a plugin when the subscription is done:</source>
          <target state="translated">另一个例子,当订阅完成后,你想初始化一个插件。</target>
        </trans-unit>
        <trans-unit id="73cb9ba627e270e4a63c114afaf5cb58e3b4e641" translate="yes" xml:space="preserve">
          <source>Another good option is &lt;a href=&quot;https://onsen.io/v2/&quot;&gt;Onsen UI&lt;/a&gt;, which includes a &lt;a href=&quot;https://onsen.io/v2/docs/guide/react/&quot;&gt;React version&lt;/a&gt;.</source>
          <target state="translated">另一个不错的选择是&lt;a href=&quot;https://onsen.io/v2/&quot;&gt;Onsen UI&lt;/a&gt;，其中包括一个&lt;a href=&quot;https://onsen.io/v2/docs/guide/react/&quot;&gt;React版本&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="df5062c1204643ad4500de34b513728a30ae7a7e" translate="yes" xml:space="preserve">
          <source>Another important consideration is how you&amp;rsquo;ll share the data between your different applications.</source>
          <target state="translated">另一个重要的考虑因素是如何在不同的应用程序之间共享数据。</target>
        </trans-unit>
        <trans-unit id="c8e3539abbac579f768de65b1c5569e567fbbe6a" translate="yes" xml:space="preserve">
          <source>Another important feature of the Meteor build tool is that it automatically concatenates and minifies all of your files in production mode. This is enabled by the &lt;a href=&quot;https://atmospherejs.com/meteor/standard-minifiers-js&quot;&gt;&lt;code&gt;standard-minifier-js&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://atmospherejs.com/meteor/standard-minifiers-css&quot;&gt;&lt;code&gt;standard-minifier-css&lt;/code&gt;&lt;/a&gt; packages, which are in all Meteor apps by default. If you need different minification behavior, you can replace these packages. Below, we&amp;rsquo;ll talk about how to &lt;a href=&quot;#postcss&quot;&gt;switch out a minifier to add PostCSS to your build process&lt;/a&gt;.</source>
          <target state="translated">流星构建工具的另一个重要功能是，它可以在生产模式下自动串联并缩小所有文件。默认情况下，所有Meteor应用程序中的&lt;a href=&quot;https://atmospherejs.com/meteor/standard-minifiers-js&quot;&gt; &lt;code&gt;standard-minifier-js&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;https://atmospherejs.com/meteor/standard-minifiers-css&quot;&gt; &lt;code&gt;standard-minifier-css&lt;/code&gt; &lt;/a&gt;软件包均启用了此功能。如果您需要其他缩小行为，则可以替换这些软件包。在下面，我们将讨论如何&lt;a href=&quot;#postcss&quot;&gt;切换出一个缩小器以将PostCSS添加到您的构建过程中&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4727184c2d70bd74761d6b6a25c523cec880c3ac" translate="yes" xml:space="preserve">
          <source>Another object to compare this to.</source>
          <target state="translated">又是一个可以比较的对象。</target>
        </trans-unit>
        <trans-unit id="fddbd6753e5fb24ece516dea5de5bbbbb8ae51e3" translate="yes" xml:space="preserve">
          <source>Another option is using the &lt;code&gt;METEOR_CORDOVA_COMPAT_VERSION_EXCLUDE&lt;/code&gt; environment variable. If you were to do this:</source>
          <target state="translated">另一种选择是使用 &lt;code&gt;METEOR_CORDOVA_COMPAT_VERSION_EXCLUDE&lt;/code&gt; 环境变量。如果要这样做：</target>
        </trans-unit>
        <trans-unit id="05634f216c70da01031ec61bce6c33e9cbc80751" translate="yes" xml:space="preserve">
          <source>Another thing to be aware of, especially with such multi-stage deploys, is that being prepared to rollback is important! For this reason, the migrations package allows you to specify a &lt;code&gt;down()&lt;/code&gt; function and call &lt;code&gt;Migrations.migrateTo(x)&lt;/code&gt; to migrate &lt;em&gt;back&lt;/em&gt; to version &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">特别要注意的另一件事是，对于这样的多阶段部署，准备回滚很重要！因此，迁移包允许您指定 &lt;code&gt;down()&lt;/code&gt; 函数并调用 &lt;code&gt;Migrations.migrateTo(x)&lt;/code&gt; 迁移&lt;em&gt;回&lt;/em&gt;版本 &lt;code&gt;x&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1759ce61ab461b729e0a2764d639e83ebd6b24c8" translate="yes" xml:space="preserve">
          <source>Another very common use case is splitting a worker process away from your main application so that expensive jobs do not impact the user experience of your visitors by locking up a single web server.</source>
          <target state="translated">另一个非常常见的用例是将一个工人进程从您的主应用程序中分离出来,这样昂贵的工作就不会通过锁定单个Web服务器来影响访问者的用户体验。</target>
        </trans-unit>
        <trans-unit id="bd6aa352a2f2253598dfd319587ee66909080a47" translate="yes" xml:space="preserve">
          <source>Another way to share commonly used view code is a global Spacebars helper. You can define these with the &lt;code&gt;Template.registerHelper()&lt;/code&gt; function. Typically you register helpers to do simple things (like rendering dates in a given format) which don&amp;rsquo;t justify a separate sub-component. For instance, you could do:</source>
          <target state="translated">共享常用视图代码的另一种方法是全局空格键帮助器。您可以使用 &lt;code&gt;Template.registerHelper()&lt;/code&gt; 函数进行定义。通常，您注册助手来执行简单的事情（例如以给定格式渲染日期），而这些事情不能证明单独的子组件是合理的。例如，您可以执行以下操作：</target>
        </trans-unit>
        <trans-unit id="9713ac8cc2ea7950bc76e6441c6fe2173b97540e" translate="yes" xml:space="preserve">
          <source>Any &lt;code&gt;this.onStop()&lt;/code&gt; callbacks setup by the publish handler run. In this case, it is a single automatic callback setup when returning a cursor from the handler, which stops the query observer and cleans it up if necessary.</source>
          <target state="translated">由发布处理程序运行的所有 &lt;code&gt;this.onStop()&lt;/code&gt; 回调设置。在这种情况下，这是从处理程序返回游标时的单个自动回调设置，它会停止查询观察器并在必要时进行清理。</target>
        </trans-unit>
        <trans-unit id="7de84040ef0ad73ddef7fe2d3fd2f1813c0bd57b" translate="yes" xml:space="preserve">
          <source>Any constructor function (eg, &lt;code&gt;Date&lt;/code&gt;)</source>
          <target state="translated">任何构造函数（例如 &lt;code&gt;Date&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="7cb7c93b5c17be7935d8a4f0c2236afb2f25290d" translate="yes" xml:space="preserve">
          <source>Any directory named &lt;code&gt;client/&lt;/code&gt; is not loaded on the server. Similar to wrapping your code in &lt;code&gt;if (Meteor.isClient) { ... }&lt;/code&gt;. All files loaded on the client are automatically concatenated and minified when in production mode. In development mode, JavaScript and CSS files are not minified, to make debugging easier. CSS files are still combined into a single file for consistency between production and development, because changing the CSS file&amp;rsquo;s URL affects how URLs in it are processed.</source>
          <target state="translated">服务器上未加载任何名为 &lt;code&gt;client/&lt;/code&gt; 目录。类似于将代码包装在 &lt;code&gt;if (Meteor.isClient) { ... }&lt;/code&gt; 。在生产模式下，客户端上加载的所有文件都会自动连接并最小化。在开发模式下，不会压缩JavaScript和CSS文件，从而使调试更加容易。CSS文件仍合并为一个文件，以确保生产和开发之间的一致性，因为更改CSS文件的URL会影响处理URL的方式。</target>
        </trans-unit>
        <trans-unit id="f170e8ec787b5654380e74c4fba619bf8321e74b" translate="yes" xml:space="preserve">
          <source>Any directory named &lt;code&gt;imports/&lt;/code&gt; is not loaded anywhere and files must be imported using &lt;code&gt;import&lt;/code&gt;.</source>
          <target state="translated">任何名为 &lt;code&gt;imports/&lt;/code&gt; 目录都不会在任何地方加载，并且必须使用 &lt;code&gt;import&lt;/code&gt; 导入文件。</target>
        </trans-unit>
        <trans-unit id="08121405e1baf04344048427e1e9a54f9970d8a4" translate="yes" xml:space="preserve">
          <source>Any directory named &lt;code&gt;node_modules/&lt;/code&gt; is not loaded anywhere. node.js packages installed into &lt;code&gt;node_modules&lt;/code&gt; directories must be imported using &lt;code&gt;import&lt;/code&gt; or by using &lt;code&gt;Npm.depends&lt;/code&gt; in &lt;code&gt;package.js&lt;/code&gt;.</source>
          <target state="translated">任何名为 &lt;code&gt;node_modules/&lt;/code&gt; 目录都不会在任何地方加载。Node.js的安装到包 &lt;code&gt;node_modules&lt;/code&gt; 目录必须使用进口 &lt;code&gt;import&lt;/code&gt; 或使用 &lt;code&gt;Npm.depends&lt;/code&gt; 在 &lt;code&gt;package.js&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="54f80e0a9c33b160a1bc6d17edf0694c587670e1" translate="yes" xml:space="preserve">
          <source>Any directory named &lt;code&gt;server/&lt;/code&gt; is not loaded on the client. Similar to wrapping your code in &lt;code&gt;if (Meteor.isServer) { ... }&lt;/code&gt;, except the client never even receives the code. Any sensitive code that you don&amp;rsquo;t want served to the client, such as code containing passwords or authentication mechanisms, should be kept in the &lt;code&gt;server/&lt;/code&gt; directory.</source>
          <target state="translated">客户端上不会加载任何名为 &lt;code&gt;server/&lt;/code&gt; 目录。类似于将代码包装在 &lt;code&gt;if (Meteor.isServer) { ... }&lt;/code&gt; ，只是客户端甚至从未收到该代码。您不希望提供给客户端的任何敏感代码，例如包含密码或身份验证机制的代码，都应保留在 &lt;code&gt;server/&lt;/code&gt; 目录中。</target>
        </trans-unit>
        <trans-unit id="1b97d4457bf03c6cd81fc9a0fc55c12c59cb1ebd" translate="yes" xml:space="preserve">
          <source>Any directory named &lt;code&gt;tests/&lt;/code&gt; is not loaded anywhere. Use this for any test code you want to run using a test runner outside of &lt;a href=&quot;testing&quot;&gt;Meteor&amp;rsquo;s built-in test tools&lt;/a&gt;.</source>
          <target state="translated">任何名为 &lt;code&gt;tests/&lt;/code&gt; 目录都不会在任何地方加载。将其用于要使用&lt;a href=&quot;testing&quot;&gt;Meteor内置测试工具&lt;/a&gt;之外的测试运行程序运行的任何测试代码。</target>
        </trans-unit>
        <trans-unit id="1eed9d8611cb9874f94e60db799b799fe0d637bb" translate="yes" xml:space="preserve">
          <source>Any other client-side data stores (read more in the &lt;a href=&quot;data-loading#stores&quot;&gt;Data Loading article&lt;/a&gt;)</source>
          <target state="translated">其他任何客户端数据存储（在&amp;ldquo; &lt;a href=&quot;data-loading#stores&quot;&gt;数据加载&amp;rdquo;一文中&lt;/a&gt;了解更多信息）</target>
        </trans-unit>
        <trans-unit id="cdf9bbefc76982e17471539cdea1217f5e1e0119" translate="yes" xml:space="preserve">
          <source>Anywhere</source>
          <target state="translated">Anywhere</target>
        </trans-unit>
        <trans-unit id="d718cfc91ca01459abd8b75acc03c2fa3dfe9eeb" translate="yes" xml:space="preserve">
          <source>Anywhere but publish functions</source>
          <target state="translated">除了发布功能,任何地方都可以</target>
        </trans-unit>
        <trans-unit id="e65e1cad7b403af55429566231a6c49f52e14b6d" translate="yes" xml:space="preserve">
          <source>Apart from simple interpolation, mustache tags can be used for control flow in the template. For instance, in the &lt;code&gt;Lists_show&lt;/code&gt; template, we render a list of todos like this:</source>
          <target state="translated">除简单插值外，胡子标记还可用于模板中的控制流。例如，在 &lt;code&gt;Lists_show&lt;/code&gt; 模板中，我们呈现如下待办事项列表：</target>
        </trans-unit>
        <trans-unit id="edcd5233f64822c2dd83d29085963d888872f414" translate="yes" xml:space="preserve">
          <source>App icons and launch screens</source>
          <target state="translated">应用程序图标和启动屏幕</target>
        </trans-unit>
        <trans-unit id="b16fe693a06028b9e11a8ad6b5984deabcc6f688" translate="yes" xml:space="preserve">
          <source>App.accessRule()</source>
          <target state="translated">App.accessRule()</target>
        </trans-unit>
        <trans-unit id="0a8ab8cdf975a3b9af79a0333a84a5ee7c842f5d" translate="yes" xml:space="preserve">
          <source>App.appendToConfig()</source>
          <target state="translated">App.appendToConfig()</target>
        </trans-unit>
        <trans-unit id="381f452164ada1d95c1dd9cd159af317bdf4cdac" translate="yes" xml:space="preserve">
          <source>App.configurePlugin()</source>
          <target state="translated">App.configurePlugin()</target>
        </trans-unit>
        <trans-unit id="28e0932e637b7f01d5b8ab4d663b3680cbf1285a" translate="yes" xml:space="preserve">
          <source>App.icons()</source>
          <target state="translated">App.icons()</target>
        </trans-unit>
        <trans-unit id="432165fc533188f8ac176bc3a0ff9b9b719a27a4" translate="yes" xml:space="preserve">
          <source>App.info()</source>
          <target state="translated">App.info()</target>
        </trans-unit>
        <trans-unit id="f1f94af4dfae2958052b8baf00d310dafc581262" translate="yes" xml:space="preserve">
          <source>App.launchScreens()</source>
          <target state="translated">App.launchScreens()</target>
        </trans-unit>
        <trans-unit id="1f65431545c034ffa0f3fa7ed051509cc756b9e4" translate="yes" xml:space="preserve">
          <source>App.setPreference()</source>
          <target state="translated">App.setPreference()</target>
        </trans-unit>
        <trans-unit id="e417325ee605b017aab3bc55e94e47c9a41976dc" translate="yes" xml:space="preserve">
          <source>Append custom tags into config's widget element.</source>
          <target state="translated">将自定义标签添加到config的widget元素中。</target>
        </trans-unit>
        <trans-unit id="d71de8152541f4a1b7fda48b87f3fe315656e14c" translate="yes" xml:space="preserve">
          <source>Application Structure</source>
          <target state="translated">应用结构</target>
        </trans-unit>
        <trans-unit id="b6c273f7d56767507a649668833a7373a09fc5b4" translate="yes" xml:space="preserve">
          <source>Applications will find &lt;a href=&quot;#tracker_autorun&quot;&gt;&lt;code&gt;Tracker.autorun&lt;/code&gt;&lt;/a&gt; useful, while more advanced facilities such as &lt;code&gt;Tracker.Dependency&lt;/code&gt; and &lt;code&gt;onInvalidate&lt;/code&gt; callbacks are intended primarily for package authors implementing new reactive data sources.</source>
          <target state="translated">应用程序会发现&lt;a href=&quot;#tracker_autorun&quot;&gt; &lt;code&gt;Tracker.autorun&lt;/code&gt; &lt;/a&gt;很有用，而更高级的功能（例如 &lt;code&gt;Tracker.Dependency&lt;/code&gt; 和 &lt;code&gt;onInvalidate&lt;/code&gt; 回调）主要用于实现新的反应性数据源的包作者。</target>
        </trans-unit>
        <trans-unit id="cbb9fa252e60809efa55a7ad83aea5438ef56753" translate="yes" xml:space="preserve">
          <source>Arguments</source>
          <target state="translated">Arguments</target>
        </trans-unit>
        <trans-unit id="01213ceef0a147d194e6cf6fddd447dc4ccd443c" translate="yes" xml:space="preserve">
          <source>Array (or space-separated string) of Message-IDs to refer to</source>
          <target state="translated">参考的Message-ID数组(或以空格分隔的字符串)。</target>
        </trans-unit>
        <trans-unit id="81ec532957dc01094b9d45d03698fc46c25b0573" translate="yes" xml:space="preserve">
          <source>Array of attachment objects, as described in the &lt;a href=&quot;https://github.com/nodemailer/mailcomposer/blob/v4.0.1/README.md#attachments&quot;&gt;mailcomposer documentation&lt;/a&gt;.</source>
          <target state="translated">附件对象数组，如&lt;a href=&quot;https://github.com/nodemailer/mailcomposer/blob/v4.0.1/README.md#attachments&quot;&gt;mailcomposer文档中所述&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d55f3361dc0c2f0bda8e847c22a466e4ca9b6659" translate="yes" xml:space="preserve">
          <source>Array or string to choose from</source>
          <target state="translated">可供选择的数组或字符串</target>
        </trans-unit>
        <trans-unit id="8aec69482f7ae347caa06235b2e3144e97b0f493" translate="yes" xml:space="preserve">
          <source>As &lt;code&gt;Factory.create&lt;/code&gt; directly inserts documents into the collection that&amp;rsquo;s passed into the &lt;code&gt;Factory.define&lt;/code&gt; function, it can be a problem to use it on the client. However there&amp;rsquo;s a neat isolation trick that you can do to replace the server-backed &lt;code&gt;Todos&lt;/code&gt;&lt;a href=&quot;collections#client-collections&quot;&gt;client collection&lt;/a&gt; with a mocked out &lt;a href=&quot;#collections.html#local-collections&quot;&gt;local collection&lt;/a&gt;, that&amp;rsquo;s encoded in the &lt;a href=&quot;https://atmospherejs.com/hwillson/stub-collections&quot;&gt;&lt;code&gt;hwillson:stub-collections&lt;/code&gt;&lt;/a&gt; package.</source>
          <target state="translated">由于 &lt;code&gt;Factory.create&lt;/code&gt; 直接将文档插入传递到 &lt;code&gt;Factory.define&lt;/code&gt; 函数的集合中，因此在客户端上使用它可能是一个问题。但是，您可以执行一个巧妙的隔离技巧，用模拟的&lt;a href=&quot;#collections.html#local-collections&quot;&gt;本地集合&lt;/a&gt;替换服务器支持的 &lt;code&gt;Todos&lt;/code&gt; &lt;a href=&quot;collections#client-collections&quot;&gt;客户端集合&lt;/a&gt;，该本地集合编码在&lt;a href=&quot;https://atmospherejs.com/hwillson/stub-collections&quot;&gt; &lt;code&gt;hwillson:stub-collections&lt;/code&gt; &lt;/a&gt;包中。</target>
        </trans-unit>
        <trans-unit id="c78d428199036618175ed9ae303b1e5e7dbd8494" translate="yes" xml:space="preserve">
          <source>As a concrete example of using the &lt;a href=&quot;#custom-publication&quot;&gt;low-level API&lt;/a&gt;, consider the situation where you have some 3rd party REST endpoint which provides a changing set of data that&amp;rsquo;s valuable to your users. How do you make that data available?</source>
          <target state="translated">作为使用&lt;a href=&quot;#custom-publication&quot;&gt;低级API&lt;/a&gt;的具体示例，请考虑以下情况：您拥有一些第三方REST端点，该端点提供了对用户有价值的不断变化的数据集。您如何使这些数据可用？</target>
        </trans-unit>
        <trans-unit id="114eee85654e96417eb15e7b89423441d53a9398" translate="yes" xml:space="preserve">
          <source>As a safety measure, if &lt;code&gt;selector&lt;/code&gt; is omitted (or is &lt;code&gt;undefined&lt;/code&gt;), no documents will be removed. Set &lt;code&gt;selector&lt;/code&gt; to &lt;code&gt;{}&lt;/code&gt; if you really want to remove all documents from your collection.</source>
          <target state="translated">为了安全起见，如果省略 &lt;code&gt;selector&lt;/code&gt; （或 &lt;code&gt;undefined&lt;/code&gt; 选择器），则不会删除任何文档。如果您确实要从集合中删除所有文档，请将 &lt;code&gt;selector&lt;/code&gt; 设置为 &lt;code&gt;{}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7ab4f3b3c06af5c43287dc0645a7a96a1d3c2280" translate="yes" xml:space="preserve">
          <source>As a template helper. The identifier &lt;code&gt;foo&lt;/code&gt; refers to a helper function (or constant value) that is accessible from the current template.</source>
          <target state="translated">作为模板助手。标识符 &lt;code&gt;foo&lt;/code&gt; 表示可从当前模板访问的辅助函数（或常量值）。</target>
        </trans-unit>
        <trans-unit id="8fe943a860a61843f10a1f4ff793245c3f64ffce" translate="yes" xml:space="preserve">
          <source>As a web app, Cordova apps are subject to various security mechanisms designed to protect the integrity of your code and to avoid certain types of attacks. Which security mechanisms are in use may depend on the type and version of the web view your app runs in. In addition, Cordova itself, and in some cases the OS, adds different levels of access control that may also affect what content can and cannot be loaded. All this can make it fairly confusing to understand why something is not working, and even harder to understand the security implications of the various ways of configuring these mechanisms.</source>
          <target state="translated">作为一个Web应用程序,Cordova应用程序受到各种安全机制的约束,这些机制旨在保护您的代码的完整性并避免某些类型的攻击。使用哪些安全机制可能取决于您的应用程序运行的Web视图的类型和版本。此外,Cordova本身以及在某些情况下,操作系统增加了不同级别的访问控制,这也可能会影响哪些内容可以和不能加载。所有这些都会让人相当困惑,无法理解为什么有些东西无法工作,更难以理解配置这些机制的各种方式的安全影响。</target>
        </trans-unit>
        <trans-unit id="5c654c84aad085e7d355c8e102451761c4e45af4" translate="yes" xml:space="preserve">
          <source>As acceptance tests test the behavior of the application in a full browser context in a generic way, there are a range of tools that you can use to specify and run such tests. In this guide we&amp;rsquo;ll demonstrate using &lt;a href=&quot;https://chimp.readme.io&quot;&gt;Chimp&lt;/a&gt;, an acceptance testing tool with a few neat Meteor-specific features that makes it easy to use.</source>
          <target state="translated">当验收测试以通用方式在完整浏览器上下文中测试应用程序的行为时，可以使用多种工具来指定和运行此类测试。在本指南中，我们将演示&lt;a href=&quot;https://chimp.readme.io&quot;&gt;Chimp的&lt;/a&gt;使用，Chimp是一种验收测试工具，具有一些流星特有的简洁功能，使其易于使用。</target>
        </trans-unit>
        <trans-unit id="103ce336a265824f32134a79b7e425646c5bd8df" translate="yes" xml:space="preserve">
          <source>As an alternative to publishing your package on Atmosphere, if you want to keep your package private, you can place it in your Meteor app in the &lt;code&gt;packages/&lt;/code&gt; directory, for instance &lt;code&gt;packages/foo/&lt;/code&gt;, and then add it to your app with &lt;code&gt;meteor add foo&lt;/code&gt;.</source>
          <target state="translated">作为在大气中发布软件包的一种替代方法，如果您想保持软件包的私密性，可以将其放置在您的Meteor应用程序的 &lt;code&gt;packages/&lt;/code&gt; 目录中，例如 &lt;code&gt;packages/foo/&lt;/code&gt; ，然后使用 &lt;code&gt;meteor add foo&lt;/code&gt; 将其添加到您的应用程序中foo。</target>
        </trans-unit>
        <trans-unit id="b52994f3c80b4b7be57d20445a36c68c62648598" translate="yes" xml:space="preserve">
          <source>As an example, consider the &lt;code&gt;Todos_item&lt;/code&gt; template from the Todos example app:</source>
          <target state="translated">作为示例，请考虑来自Todos示例应用程序的 &lt;code&gt;Todos_item&lt;/code&gt; 模板：</target>
        </trans-unit>
        <trans-unit id="bfe4b0bfdc388675965d04e9e1ecae11a95df54d" translate="yes" xml:space="preserve">
          <source>As described in the &lt;a href=&quot;https://guide.meteor.com/ui-ux.html#smart-components&quot;&gt;UI/UX article&lt;/a&gt;, you should fetch data in the same component where you subscribed to that data. In a Blaze smart component, it&amp;rsquo;s usually simplest to fetch the data in a helper, which you can then use to pass data into a reusable child component. For example, in the &lt;code&gt;Lists_show_page&lt;/code&gt;:</source>
          <target state="translated">如&lt;a href=&quot;https://guide.meteor.com/ui-ux.html#smart-components&quot;&gt;UI / UX文章中所述&lt;/a&gt;，您应该在订阅该数据的同一组件中获取数据。在Blaze智能组件中，通常最简单的方法是在助手中获取数据，然后可以使用该助手将数据传递到可重用的子组件中。例如，在 &lt;code&gt;Lists_show_page&lt;/code&gt; 中：</target>
        </trans-unit>
        <trans-unit id="52e320659b89e20f6729b1fa8ded350e2de1b6bd" translate="yes" xml:space="preserve">
          <source>As illustrated by the above example, there are four major types of template tags:</source>
          <target state="translated">如上例所示,模板标签主要有四种类型。</target>
        </trans-unit>
        <trans-unit id="2b84d8a0b5be7c9ca71a32925e9499a131948ea4" translate="yes" xml:space="preserve">
          <source>As mentioned before, mobile apps need to be able to &lt;a href=&quot;#connecting-to-the-server&quot;&gt;connect to a server&lt;/a&gt; to support hot code push. In production, you will need to specify which server to connect to &lt;a href=&quot;#building-for-production&quot;&gt;when building the app&lt;/a&gt; using the &lt;code&gt;--server&lt;/code&gt; option. The specified server address is used to set &lt;code&gt;ROOT_URL&lt;/code&gt; in &lt;code&gt;__meteor_runtime_config__&lt;/code&gt;, which is defined as part of the generated &lt;code&gt;index.html&lt;/code&gt; in the app bundle.</source>
          <target state="translated">如前所述，移动应用程序需要能够&lt;a href=&quot;#connecting-to-the-server&quot;&gt;连接到服务器&lt;/a&gt;以支持热代码推送。在生产中，使用 &lt;code&gt;--server&lt;/code&gt; 选项&lt;a href=&quot;#building-for-production&quot;&gt;在构建应用程序时&lt;/a&gt;需要指定要连接到的服务器。指定的服务器地址用于集 &lt;code&gt;ROOT_URL&lt;/code&gt; 在 &lt;code&gt;__meteor_runtime_config__&lt;/code&gt; ，其被定义为所生成的一部分 &lt;code&gt;index.html&lt;/code&gt; 在应用程序包。</target>
        </trans-unit>
        <trans-unit id="aad495ab9533614019a4d6f3c2cd9b1b8315401e" translate="yes" xml:space="preserve">
          <source>As mentioned in &lt;a href=&quot;#Blaze-render&quot;&gt;&lt;code&gt;Blaze.render&lt;/code&gt;&lt;/a&gt;, it is important to &amp;ldquo;remove&amp;rdquo; all content rendered via &lt;code&gt;Blaze.render&lt;/code&gt; using &lt;code&gt;Blaze.remove&lt;/code&gt;, unless the parent node of &lt;code&gt;renderedView&lt;/code&gt; is removed by a Meteor reactive update or with jQuery.</source>
          <target state="translated">正如提到&lt;a href=&quot;#Blaze-render&quot;&gt; &lt;code&gt;Blaze.render&lt;/code&gt; &lt;/a&gt;，它是&amp;ldquo;删除&amp;rdquo;经由呈现所有内容重要 &lt;code&gt;Blaze.render&lt;/code&gt; 使用 &lt;code&gt;Blaze.remove&lt;/code&gt; ，除非的父节点 &lt;code&gt;renderedView&lt;/code&gt; 通过流星反应更新或与jQuery除去。</target>
        </trans-unit>
        <trans-unit id="c1ac7655bc68adb19d6c72bb4621ed39d6200d48" translate="yes" xml:space="preserve">
          <source>As mentioned in the &lt;a href=&quot;https://guide.meteor.com/build-tool.html#blaze&quot;&gt;build system article&lt;/a&gt;, the &lt;a href=&quot;https://atmospherejs.com/meteor/blaze-html-templates&quot;&gt;&lt;code&gt;blaze-html-templates&lt;/code&gt;&lt;/a&gt; package scans your source code for &lt;code&gt;.html&lt;/code&gt; files, picks out &lt;code&gt;&amp;lt;template name=&quot;templateName&quot;&amp;gt;&lt;/code&gt; tags, and compiles them into a JavaScript file that defines a function that implements the component in code, attached to the &lt;code&gt;Template.templateName&lt;/code&gt; symbol.</source>
          <target state="translated">如&lt;a href=&quot;https://guide.meteor.com/build-tool.html#blaze&quot;&gt;构建系统文章&lt;/a&gt;中所述，&lt;a href=&quot;https://atmospherejs.com/meteor/blaze-html-templates&quot;&gt; &lt;code&gt;blaze-html-templates&lt;/code&gt; &lt;/a&gt;程序包扫描源代码中的 &lt;code&gt;.html&lt;/code&gt; 文件，挑选出 &lt;code&gt;&amp;lt;template name=&quot;templateName&quot;&amp;gt;&lt;/code&gt; 标记，然后将其编译为一个JavaScript文件，该JavaScript文件定义了一个实现代码中的组件，附加到 &lt;code&gt;Template.templateName&lt;/code&gt; 符号。</target>
        </trans-unit>
        <trans-unit id="efa2d8159f5af0638eb43e0603517d750e43ac65" translate="yes" xml:space="preserve">
          <source>As of &lt;a href=&quot;https://cordova.apache.org/announcements/2016/10/24/ios-release.html&quot;&gt;Cordova iOS 4.3.0&lt;/a&gt; you may also need to &lt;code&gt;sudo gem install cocoapods&lt;/code&gt; to resolve a dependency with &lt;a href=&quot;https://github.com/phonegap/phonegap-plugin-push/blob/master/docs/INSTALLATION.md&quot;&gt;PhoneGap Push Plugin&lt;/a&gt;.</source>
          <target state="translated">从&lt;a href=&quot;https://cordova.apache.org/announcements/2016/10/24/ios-release.html&quot;&gt;Cordova iOS 4.3.0开始，&lt;/a&gt;您可能还需要 &lt;code&gt;sudo gem install cocoapods&lt;/code&gt; 来解决&lt;a href=&quot;https://github.com/phonegap/phonegap-plugin-push/blob/master/docs/INSTALLATION.md&quot;&gt;PhoneGap Push Plugin&lt;/a&gt;的依赖性。</target>
        </trans-unit>
        <trans-unit id="34fbe4922687e2d3d8dfa7887952e9bc52d93b6d" translate="yes" xml:space="preserve">
          <source>As of Android Marshmallow, certain system features (e.g. camera, microphone, etc.) require additional permissions in order to access them. These must be listed in the manifest and &lt;strong&gt;also requested at runtime&lt;/strong&gt;.</source>
          <target state="translated">从Android Marshmallow开始，某些系统功能（例如相机，麦克风等）需要其他权限才能访问它们。这些必须在清单中列出并且&lt;strong&gt;还&lt;/strong&gt;必须&lt;strong&gt;在运行时请求&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="ae4403abb2e45dce33caa068f7690f83eeb19c2c" translate="yes" xml:space="preserve">
          <source>As of CoffeeScript 1.11.0, &lt;a href=&quot;http://coffeescript.org/#modules&quot;&gt;CoffeeScript supports &lt;code&gt;import&lt;/code&gt; and &lt;code&gt;export&lt;/code&gt; statements natively&lt;/a&gt;. Make sure you are using the latest version of the &lt;a href=&quot;https://atmospherejs.com/meteor/coffeescript&quot;&gt;CoffeeScript package&lt;/a&gt; in your project to get this support. New projects created today will get this version with &lt;code&gt;meteor add coffeescript&lt;/code&gt;. Make sure you don&amp;rsquo;t forget to include the &lt;code&gt;ecmascript&lt;/code&gt; and &lt;code&gt;modules&lt;/code&gt; packages: &lt;code&gt;meteor add ecmascript&lt;/code&gt;. (The &lt;code&gt;modules&lt;/code&gt; package is implied by &lt;code&gt;ecmascript&lt;/code&gt;.)</source>
          <target state="translated">从CoffeeScript 1.11.0开始，&lt;a href=&quot;http://coffeescript.org/#modules&quot;&gt;CoffeeScript 本机支持 &lt;code&gt;import&lt;/code&gt; 和 &lt;code&gt;export&lt;/code&gt; 语句&lt;/a&gt;。确保您在项目中使用的是最新版本的&lt;a href=&quot;https://atmospherejs.com/meteor/coffeescript&quot;&gt;CoffeeScript软件包&lt;/a&gt;，以获得此支持。今天创建的新项目将获得此版本的 &lt;code&gt;meteor add coffeescript&lt;/code&gt; 。确保您不要忘记包含 &lt;code&gt;ecmascript&lt;/code&gt; 和 &lt;code&gt;modules&lt;/code&gt; 软件包： &lt;code&gt;meteor add ecmascript&lt;/code&gt; 。（ &lt;code&gt;ecmascript&lt;/code&gt; 暗示 &lt;code&gt;modules&lt;/code&gt; 包。）</target>
        </trans-unit>
        <trans-unit id="fa8095e4d4b71816465789a6513a5e09fdb84eba" translate="yes" xml:space="preserve">
          <source>As of Meteor 1.4, you must ensure you set the &lt;code&gt;replicaSet&lt;/code&gt; parameter on your &lt;code&gt;METEOR_OPLOG_URL&lt;/code&gt;</source>
          <target state="translated">由于流星1.4，你必须确保你设置的 &lt;code&gt;replicaSet&lt;/code&gt; 参数上您 &lt;code&gt;METEOR_OPLOG_URL&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7cb3055259d36f92b5aef9fc40bc5fae0c2d0dec" translate="yes" xml:space="preserve">
          <source>As of version 1.3, Meteor ships with full support for &lt;a href=&quot;https://developer.mozilla.org/en/docs/web/javascript/reference/statements/import&quot;&gt;ES2015 modules&lt;/a&gt;. The ES2015 module standard is the replacement for &lt;a href=&quot;http://requirejs.org/docs/commonjs.html&quot;&gt;CommonJS&lt;/a&gt; and &lt;a href=&quot;https://github.com/amdjs/amdjs-api&quot;&gt;AMD&lt;/a&gt;, which are commonly used JavaScript module format and loading systems.</source>
          <target state="translated">从1.3版开始，Meteor随附对&lt;a href=&quot;https://developer.mozilla.org/en/docs/web/javascript/reference/statements/import&quot;&gt;ES2015模块的&lt;/a&gt;全面支持。ES2015模块标准是&lt;a href=&quot;http://requirejs.org/docs/commonjs.html&quot;&gt;CommonJS&lt;/a&gt;和&lt;a href=&quot;https://github.com/amdjs/amdjs-api&quot;&gt;AMD&lt;/a&gt;的替代，CommonJS和AMD是常用的JavaScript模块格式和加载系统。</target>
        </trans-unit>
        <trans-unit id="d0b8dff057ecedf521d295257ba65fd190b5ad6f" translate="yes" xml:space="preserve">
          <source>As the system under test in our integration test has a larger surface area, we need to stub out a few more points of integration with the rest of the stack. Of particular interest here is our use of the &lt;a href=&quot;#mocking-the-database&quot;&gt;&lt;code&gt;hwillson:stub-collections&lt;/code&gt;&lt;/a&gt; package and of &lt;a href=&quot;http://sinonjs.org&quot;&gt;Sinon&lt;/a&gt; to stub out Flow Router and our Subscription.</source>
          <target state="translated">由于我们的集成测试中的被测系统具有较大的表面积，因此我们需要与堆栈的其余部分分离更多的集成点。这里特别令人感兴趣的是，我们使用了&lt;a href=&quot;#mocking-the-database&quot;&gt; &lt;code&gt;hwillson:stub-collections&lt;/code&gt; &lt;/a&gt;软件包和&lt;a href=&quot;http://sinonjs.org&quot;&gt;Sinon&lt;/a&gt;来对Flow Router和我们的订阅进行存根。</target>
        </trans-unit>
        <trans-unit id="1f7a269aaebbc7f0ce8c7d35b82e234647c16365" translate="yes" xml:space="preserve">
          <source>As we discussed above, trying to predict all future requirements of your data schema ahead of time is impossible. Inevitably, as a project matures, there will come a time when you need to change the schema of the database. You need to be careful about how you make the migration to the new schema to make sure your app works smoothly during and after the migration.</source>
          <target state="translated">正如我们上面所讨论的,试图提前预测数据模式的所有未来需求是不可能的。随着项目的成熟,不可避免地,会有一次你需要改变数据库的模式。你需要小心翼翼地进行向新模式的迁移,以确保你的应用在迁移期间和迁移之后都能顺利运行。</target>
        </trans-unit>
        <trans-unit id="1b1f7c76e19eca5f25f2b075af9eda38eecebfb7" translate="yes" xml:space="preserve">
          <source>As we discussed earlier, it&amp;rsquo;s very common in Meteor applications to have associations between documents in different collections. Consequently, it&amp;rsquo;s also very common to need to write queries fetching related documents once you have a document you are interested in (for instance all the todos that are in a single list).</source>
          <target state="translated">如前所述，在Meteor应用程序中，不同集合中的文档之间具有关联是很常见的。因此，一旦您有感兴趣的文档（例如，单个列表中的所有待办事项），也需要编写查询以获取相关文档的查询。</target>
        </trans-unit>
        <trans-unit id="29dd93acb63f26c4e1a8932e4ae252ba0cf75a13" translate="yes" xml:space="preserve">
          <source>As we discussed in the introduction, the URL is really just a serialization of some part of the client-side state the user is looking at. Although parameters can only be strings, it&amp;rsquo;s possible to convert any type of data to a string by serializing it.</source>
          <target state="translated">正如我们在简介中讨论的那样，URL实际上只是用户正在查看的客户端状态的某些部分的序列化。尽管参数只能是字符串，但是可以通过序列化将任何类型的数据转换为字符串。</target>
        </trans-unit>
        <trans-unit id="5912be28372dade889ca2a9346b7831bdb0f5555" translate="yes" xml:space="preserve">
          <source>As we mentioned above, the &lt;code&gt;onRendered()&lt;/code&gt; callback is typically the right spot to call out to third party libraries that expect a pre-rendered DOM (such as jQuery plugins). The &lt;code&gt;onRendered()&lt;/code&gt; callback is triggered &lt;em&gt;once&lt;/em&gt; after the component has rendered and attached to the DOM for the first time.</source>
          <target state="translated">如上所述， &lt;code&gt;onRendered()&lt;/code&gt; 回调通常是调用需要预渲染DOM的第三方库（例如jQuery插件）的正确位置。所述 &lt;code&gt;onRendered()&lt;/code&gt; 回调被触发&lt;em&gt;一次&lt;/em&gt;后的部件已使与附加到DOM首次。</target>
        </trans-unit>
        <trans-unit id="38dba416ec96765d98f7f5025e2e45f47def2d9b" translate="yes" xml:space="preserve">
          <source>As we&amp;rsquo;ll run this test in the same way that we did our unit test, we need to &lt;code&gt;import&lt;/code&gt; the relevant modules under test in the same way that we &lt;a href=&quot;#simple-integration-test-importing&quot;&gt;did in the unit test&lt;/a&gt;.</source>
          <target state="translated">正如我们将运行这个测试中，我们做了我们的单元测试以同样的方式，我们需要 &lt;code&gt;import&lt;/code&gt; 相关的模块测试以同样的方式，我们&lt;a href=&quot;#simple-integration-test-importing&quot;&gt;在单元测试中做了&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3753cc8e3fca3fda6c4f0ab3f3fde280a86f5718" translate="yes" xml:space="preserve">
          <source>As we&amp;rsquo;ve defined a test file (&lt;code&gt;imports/todos/todos.tests.js&lt;/code&gt;), what this means is that the file above will be eagerly loaded, adding the &lt;code&gt;'builds correctly from factory'&lt;/code&gt; test to the Mocha registry.</source>
          <target state="translated">当我们定义了一个测试文件（ &lt;code&gt;imports/todos/todos.tests.js&lt;/code&gt; ）时，这意味着上面的文件将被急切加载，并将 &lt;code&gt;'builds correctly from factory'&lt;/code&gt; 测试添加到Mocha注册表中。</target>
        </trans-unit>
        <trans-unit id="d407b8c96e5d55bc035c664b3c3baf3e22079b31" translate="yes" xml:space="preserve">
          <source>As we&amp;rsquo;ve discussed, Meteor is a framework for client rendered applications, but this doesn&amp;rsquo;t always remove the requirement for server rendered routes. There are two main use cases for server-side routing.</source>
          <target state="translated">正如我们所讨论的，Meteor是用于客户端呈现的应用程序的框架，但这并不总是消除对服务器呈现的路由的需求。服务器端路由有两个主要用例。</target>
        </trans-unit>
        <trans-unit id="a1abd6160865d36ebc2c342028e604f5cbce3c0b" translate="yes" xml:space="preserve">
          <source>As we&amp;rsquo;ve placed the code above in a test file, it &lt;em&gt;will not&lt;/em&gt; load in normal development or production mode (which would be an incredibly bad thing!). If you create a Atmosphere package with a similar feature, you should mark it as &lt;code&gt;testOnly&lt;/code&gt; and it will similarly only load in test mode.</source>
          <target state="translated">当我们将上面的代码放置在测试文件中时，它将&lt;em&gt;不会&lt;/em&gt;在正常的开发或生产模式下加载（这将是非常糟糕的事情！）。如果创建具有类似功能的Atmosphere软件包，则应将其标记为 &lt;code&gt;testOnly&lt;/code&gt; ，并且类似地，它仅在测试模式下加载。</target>
        </trans-unit>
        <trans-unit id="14b6a09f95218d20c78df0dee62f9f211210953d" translate="yes" xml:space="preserve">
          <source>As with CommonJS &lt;code&gt;module.exports&lt;/code&gt;, it is possible to define a single &lt;em&gt;default&lt;/em&gt; export:</source>
          <target state="translated">与CommonJS &lt;code&gt;module.exports&lt;/code&gt; 一样，可以定义单个&lt;em&gt;默认&lt;/em&gt;导出：</target>
        </trans-unit>
        <trans-unit id="97ffdfa3b12f57325a3c035199b86637c190c07c" translate="yes" xml:space="preserve">
          <source>As you can see, there is a fair amount of boilerplate to handle errors nicely in a form, but most of it can be easily abstracted by an off-the-shelf form framework or a simple application-specific wrapper of your own design.</source>
          <target state="translated">正如你所看到的,有相当多的锅炉模板可以很好地处理表单中的错误,但大部分都可以通过现成的表单框架或你自己设计的简单的特定应用包装器轻松抽象出来。</target>
        </trans-unit>
        <trans-unit id="276f78d237188d5bcb8c8b1bea29f989f1f9cac9" translate="yes" xml:space="preserve">
          <source>As you can see, this approach to calling Methods results in a better development workflow - you can more easily deal with the different parts of the Method separately and test your code more easily without having to deal with Meteor internals. But this approach requires you to write a lot of boilerplate on the Method definition side.</source>
          <target state="translated">正如你所看到的,这种调用Method的方法会带来更好的开发工作流--你可以更容易地分别处理Method的不同部分,更容易地测试你的代码,而不必处理Meteor内部的问题。但是这种方法需要你在Method定义端写很多锅炉模板。</target>
        </trans-unit>
        <trans-unit id="7452434ad18755926a22354b3770b97dd25d1e2e" translate="yes" xml:space="preserve">
          <source>As you can see, we can use the ES2015 template string functionality to generate a multi-line string that includes the password reset URL. We can also set a custom &lt;code&gt;from&lt;/code&gt; address and email subject.</source>
          <target state="translated">如您所见，我们可以使用ES2015模板字符串功能来生成包含密码重置URL的多行字符串。我们还可以 &lt;code&gt;from&lt;/code&gt; 地址和电子邮件主题设置自定义。</target>
        </trans-unit>
        <trans-unit id="2ef56ebc5fe97485bb2f45faeab4552e5f8e9030" translate="yes" xml:space="preserve">
          <source>As you write more code and come up against the recommended style rules, you can take that as an opportunity to learn more about your programming language and how different people prefer to use it.</source>
          <target state="translated">当你写出更多的代码,遇到推荐的风格规则时,你可以借此机会更多地了解你的编程语言,以及不同的人喜欢如何使用它。</target>
        </trans-unit>
        <trans-unit id="95af8ee4216607403b1f122ae8b837dd1818b5a3" translate="yes" xml:space="preserve">
          <source>As your app gets more complex, you will invariably need to store some data about individual users, and the most natural place to put that data is in additional fields on the &lt;code&gt;Meteor.users&lt;/code&gt; collection described above. In a more normalized data situation it would be a good idea to keep Meteor&amp;rsquo;s user data and yours in two separate tables, but since MongoDB doesn&amp;rsquo;t deal well with data associations it makes sense to just use one collection.</source>
          <target state="translated">随着您的应用程序变得越来越复杂，您总是需要存储一些有关单个用户的数据，而放置数据的最自然的地方是上述 &lt;code&gt;Meteor.users&lt;/code&gt; 集合中的其他字段。在更规范的数据情况下，最好将Meteor的用户数据和您的用户数据保存在两个单独的表中，但是由于MongoDB不能很好地处理数据关联，因此仅使用一个集合是有意义的。</target>
        </trans-unit>
        <trans-unit id="20e338624cee29d0effead85b0dd0e70de783b4c" translate="yes" xml:space="preserve">
          <source>Assets</source>
          <target state="translated">Assets</target>
        </trans-unit>
        <trans-unit id="781d1600ad51aa1df0cf08bfc8fb61e796143a0e" translate="yes" xml:space="preserve">
          <source>Assigning default values based on the &lt;code&gt;defaultValue&lt;/code&gt; in the schema definition</source>
          <target state="translated">根据架构定义中的 &lt;code&gt;defaultValue&lt;/code&gt; 分配默认值</target>
        </trans-unit>
        <trans-unit id="8980c681d3221afc3da7a612479cd2084b6fc673" translate="yes" xml:space="preserve">
          <source>Association helpers</source>
          <target state="translated">协会助手</target>
        </trans-unit>
        <trans-unit id="d5862606c3b8b113c42053fb851227f05e6d074d" translate="yes" xml:space="preserve">
          <source>Associations between collections</source>
          <target state="translated">收藏品之间的联系</target>
        </trans-unit>
        <trans-unit id="da27fe7480745304c55a665924b3df23d9181996" translate="yes" xml:space="preserve">
          <source>Asyncronous Callbacks</source>
          <target state="translated">非同步回调</target>
        </trans-unit>
        <trans-unit id="90bb0f85a1a6bd065a34114333256e188a111001" translate="yes" xml:space="preserve">
          <source>At element level (i.e. anywhere an HTML tag could go)</source>
          <target state="translated">在元素层面(即任何一个HTML标签可以到达的地方)。</target>
        </trans-unit>
        <trans-unit id="50ed59c154d8c81b337b669516be66c08b3c9402" translate="yes" xml:space="preserve">
          <source>At its core, a Method is an API endpoint for your server; you can define a Method on the server and its counterpart on the client, then call it with some data, write to the database, and get the return value in a callback. Meteor Methods are also tightly integrated with the pub/sub and data loading systems of Meteor to allow for &lt;a href=&quot;http://info.meteor.com/blog/optimistic-ui-with-meteor-latency-compensation&quot;&gt;Optimistic UI&lt;/a&gt;&amp;mdash;the ability to simulate server-side actions on the client to make your app feel faster than it actually is.</source>
          <target state="translated">方法的核心是服务器的API端点。您可以在服务器上定义一个方法，并在客户端上定义它的对应方法，然后用一些数据对其进行调用，写入数据库，并在回调中获取返回值。流星方法还与流星的发布/订阅和数据加载系统紧密集成，以实现&lt;a href=&quot;http://info.meteor.com/blog/optimistic-ui-with-meteor-latency-compensation&quot;&gt;Optimistic UI（在UI&lt;/a&gt;上模拟客户端上服务器端操作的能力，使您的应用程序比实际速度更快）。</target>
        </trans-unit>
        <trans-unit id="096d20c5494d3c9eaea902d4a95e722c5380d56b" translate="yes" xml:space="preserve">
          <source>At its core, a web application offers its users a view into, and a way to modify, a persistent set of data. Whether managing a list of todos, or ordering a car to pick you up, you are interacting with a permanent but constantly changing data layer.</source>
          <target state="translated">在它的核心,一个网络应用程序为其用户提供了一个视图,并提供了修改一组持久数据的方法。无论是管理一个待办事项列表,还是订购一辆车来接你,你都在与一个永久但不断变化的数据层进行交互。</target>
        </trans-unit>
        <trans-unit id="42d76533272268f0e403a25f4279c6bf7e7ef47e" translate="yes" xml:space="preserve">
          <source>At most one of &lt;code&gt;options.connection&lt;/code&gt; and &lt;code&gt;options.ddpUrl&lt;/code&gt; should be provided in any instantiation of &lt;code&gt;AccountsClient&lt;/code&gt;. If neither is provided, &lt;code&gt;Meteor.connection&lt;/code&gt; will be used as the &lt;code&gt;.connection&lt;/code&gt; property of the &lt;code&gt;AccountsClient&lt;/code&gt; instance.</source>
          <target state="translated">在 &lt;code&gt;AccountsClient&lt;/code&gt; 的任何实例中，最多应提供 &lt;code&gt;options.connection&lt;/code&gt; 和 &lt;code&gt;options.ddpUrl&lt;/code&gt; 之一。如果没有提供， &lt;code&gt;Meteor.connection&lt;/code&gt; 将被用作 &lt;code&gt;.connection&lt;/code&gt; 的财产 &lt;code&gt;AccountsClient&lt;/code&gt; 实例。</target>
        </trans-unit>
        <trans-unit id="a0f0dcbdd68beab03ea707f6b14cc2fecbf3f7f4" translate="yes" xml:space="preserve">
          <source>At the end of the flush cycle (i.e. after the computation is done re-running), the old subscription checks to see if it was re-used, and if not, sends a message to the server to tell the server to shut it down.</source>
          <target state="translated">在刷新周期结束时(即计算完成重新运行后),旧的订阅会检查是否被重新使用,如果没有,则向服务器发送消息,告诉服务器关闭它。</target>
        </trans-unit>
        <trans-unit id="fa0ea99350074de42d36efe5a00b6e8073f89f33" translate="yes" xml:space="preserve">
          <source>At the heart of a View is an &lt;a href=&quot;https://docs.meteor.com/api/tracker.html#Tracker-autorun&quot;&gt;autorun&lt;/a&gt; that calls the View&amp;rsquo;s &lt;code&gt;renderFunction&lt;/code&gt;, uses the result to create DOM nodes, and replaces the contents of the View with these new DOM nodes. A View&amp;rsquo;s content may consist of any number of consecutive DOM nodes (though if it is zero, a placeholder node such as a comment or an empty text node is automatically supplied). Any reactive dependency established by &lt;code&gt;renderFunction&lt;/code&gt; causes a full recalculation of the View&amp;rsquo;s contents when the dependency is invalidated. Templates, however, are compiled in such a way that they do not have top-level dependencies and so will only ever render once, while their parts may re-render many times.</source>
          <target state="translated">View的核心是&lt;a href=&quot;https://docs.meteor.com/api/tracker.html#Tracker-autorun&quot;&gt;自动运行&lt;/a&gt;，该自动运行调用View的 &lt;code&gt;renderFunction&lt;/code&gt; ，使用结果创建DOM节点，并用这些新的DOM节点替换View的内容。 View的内容可以由任意数量的连续DOM节点组成（尽管如果为零，则会自动提供占位符节点，例如注释或空白文本节点）。当依赖项无效时，由 &lt;code&gt;renderFunction&lt;/code&gt; 建立的任何反应性依赖项都会导致对视图内容的完整重新计算。但是，模板的编译方式不具有顶层依赖性，因此只能渲染一次，而模板的部分可以多次渲染。</target>
        </trans-unit>
        <trans-unit id="b7d85c774b67e2afde5ed2f8faaa123cf3c4562a" translate="yes" xml:space="preserve">
          <source>Atmosphere dependencies</source>
          <target state="translated">大气层的依赖性</target>
        </trans-unit>
        <trans-unit id="890930cc3418ec9e8beb72cd3c8b0987e5e99220" translate="yes" xml:space="preserve">
          <source>Atmosphere package namespacing</source>
          <target state="translated">大气包名称间距</target>
        </trans-unit>
        <trans-unit id="ca3efe41d393e7d27f7b43433ba3d5fd5dabd91d" translate="yes" xml:space="preserve">
          <source>Atmosphere packages are packages written specifically for Meteor and have several advantages over npm when used with Meteor. In particular, Atmosphere packages can:</source>
          <target state="translated">Atmosphere包是专门为Meteor编写的包,在与Meteor一起使用时,比npm有几个优势。特别是,Atmosphere包可以。</target>
        </trans-unit>
        <trans-unit id="22276f2c629370e2c0cefe00383deefd62e8014a" translate="yes" xml:space="preserve">
          <source>Atmosphere packages can include &lt;a href=&quot;http://cordova.apache.org/plugins/&quot;&gt;Cordova plugins&lt;/a&gt; to ship native code for the Meteor mobile app container. This way, you can interact with the native camera interface, use the gyroscope, save files locally, and more.</source>
          <target state="translated">Atmosphere软件包可以包括&lt;a href=&quot;http://cordova.apache.org/plugins/&quot;&gt;Cordova插件&lt;/a&gt;，以为Meteor移动应用程序容器提供本机代码。这样，您就可以与本机摄像头界面进行交互，使用陀螺仪，在本地保存文件等等。</target>
        </trans-unit>
        <trans-unit id="469c347ee22dac48ab36e39577fd891ca12fc435" translate="yes" xml:space="preserve">
          <source>Atmosphere packages can ship with contained &lt;a href=&quot;https://guide.meteor.com/writing-packages.html#npm-dependencies&quot;&gt;npm dependencies&lt;/a&gt;, in which case you don&amp;rsquo;t need to do anything to make them work. However, some Atmosphere packages will expect that you have installed certain &amp;ldquo;peer&amp;rdquo; npm dependencies in your application.</source>
          <target state="translated">Atmosphere软件包可以附带&lt;a href=&quot;https://guide.meteor.com/writing-packages.html#npm-dependencies&quot;&gt;npm依赖项&lt;/a&gt;，在这种情况下，您无需执行任何操作即可使其正常工作。但是，某些Atmosphere软件包会期望您在应用程序中安装了某些&amp;ldquo;对等&amp;rdquo; npm依赖项。</target>
        </trans-unit>
        <trans-unit id="676295e8feb718dee7e03a8aab36db86db0fa2f0" translate="yes" xml:space="preserve">
          <source>Atmosphere vs. npm</source>
          <target state="translated">Atmosphere与npm的比较</target>
        </trans-unit>
        <trans-unit id="41dded417052424bdcf3c39f6c8664147fae6806" translate="yes" xml:space="preserve">
          <source>Atom</source>
          <target state="translated">Atom</target>
        </trans-unit>
        <trans-unit id="6bdf00d93745093129a4b32124e7ba749db63f8a" translate="yes" xml:space="preserve">
          <source>Attach functions to the instance</source>
          <target state="translated">给实例附加功能</target>
        </trans-unit>
        <trans-unit id="a3a2bf9c9266df67002e20b8feaf98a735e52c0b" translate="yes" xml:space="preserve">
          <source>Attempts to bring you to the latest version of Meteor, and then to upgrade your packages to their latest versions. By default, update will not break compatibility.</source>
          <target state="translated">嘗試將你帶到 Meteor 的最新版本,然後將你的套件升級到他們的最新版本。默认情况下,更新不会破坏兼容性。</target>
        </trans-unit>
        <trans-unit id="28d4a3eea8bfa5c23fba97140601bdacecdac47a" translate="yes" xml:space="preserve">
          <source>Attribute Helpers</source>
          <target state="translated">属性助手</target>
        </trans-unit>
        <trans-unit id="ffa507f2e416879e4f6b70d1e5d9df3ae74dab15" translate="yes" xml:space="preserve">
          <source>Attribute helpers</source>
          <target state="translated">属性助手</target>
        </trans-unit>
        <trans-unit id="219c5ddac0f9f308a33459aa0065d03b0745b4d0" translate="yes" xml:space="preserve">
          <source>Attributes from dynamic attribute tags are combined from left to right, after normal attributes, with later attribute values overwriting previous ones. Multiple values for the same attribute are not merged in any way, so if &lt;code&gt;attrs1&lt;/code&gt; specifies a value for the &lt;code&gt;class&lt;/code&gt; attribute, it will overwrite &lt;code&gt;{{myClass}}&lt;/code&gt;. As always, Spacebars takes care of recalculating the element&amp;rsquo;s attributes if any of &lt;code&gt;myClass&lt;/code&gt;, &lt;code&gt;attrs1&lt;/code&gt;, or &lt;code&gt;attrs2&lt;/code&gt; changes reactively.</source>
          <target state="translated">动态属性标签中的属性在普通属性之后从左到右进行组合，之后的属性值将覆盖先前的属性值。相同属性的多个值不会以任何方式合并，因此，如果 &lt;code&gt;attrs1&lt;/code&gt; 为 &lt;code&gt;class&lt;/code&gt; 属性指定一个值，它将覆盖 &lt;code&gt;{{myClass}}&lt;/code&gt; 。与往常一样，如果 &lt;code&gt;myClass&lt;/code&gt; ， &lt;code&gt;attrs1&lt;/code&gt; 或 &lt;code&gt;attrs2&lt;/code&gt; 中的任何一个发生反应性变化，空格键都会负责重新计算元素的属性。</target>
        </trans-unit>
        <trans-unit id="13d954cdceae57b14d2e483f121bdc910ef82e18" translate="yes" xml:space="preserve">
          <source>Automated testing is critical because it allows you to run a far greater set of tests much more often than you could manually, allowing you to catch regression errors immediately.</source>
          <target state="translated">自动测试是至关重要的,因为它可以让你比手动更频繁地运行更多的测试集,使你能够立即发现回归错误。</target>
        </trans-unit>
        <trans-unit id="273fea8ed91e271c435ba5e66231c17f1682055d" translate="yes" xml:space="preserve">
          <source>Automatic error checking</source>
          <target state="translated">自动错误检查</target>
        </trans-unit>
        <trans-unit id="9770213201ed0b51211dffa83da5db9d26147eb2" translate="yes" xml:space="preserve">
          <source>Available functions are:</source>
          <target state="translated">可用的功能有:</target>
        </trans-unit>
        <trans-unit id="8efa8e08e608693674a8f108ff557784e8515381" translate="yes" xml:space="preserve">
          <source>Avoid allow/deny</source>
          <target state="translated">避免允许/拒绝</target>
        </trans-unit>
        <trans-unit id="a792fa4821933ee58fa6ced67a2035e27e2bae7e" translate="yes" xml:space="preserve">
          <source>Avoid calling the server-side Method if the client-side validation failed, so we don&amp;rsquo;t waste server resources.</source>
          <target state="translated">如果客户端验证失败，请避免调用服务器端方法，因此我们不会浪费服务器资源。</target>
        </trans-unit>
        <trans-unit id="e154105509ed638e4be964b02c34afb8c19ffb4f" translate="yes" xml:space="preserve">
          <source>BIND_IP</source>
          <target state="translated">BIND_IP</target>
        </trans-unit>
        <trans-unit id="0b0bdb3ac128781c08d52532a584c524abde585f" translate="yes" xml:space="preserve">
          <source>Babel (for syntax highlighting &amp;ndash; &lt;a href=&quot;https://github.com/babel/babel-sublime#installation&quot;&gt;full instructions&lt;/a&gt;)</source>
          <target state="translated">Babel（用于语法突出显示&amp;ndash; &lt;a href=&quot;https://github.com/babel/babel-sublime#installation&quot;&gt;完整说明&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="d2e6fb31e2e71948571239e1b59de6545826cc54" translate="yes" xml:space="preserve">
          <source>Basic Method</source>
          <target state="translated">基本方法</target>
        </trans-unit>
        <trans-unit id="953657b3d60232a538f74887fa8b6a3c3c1d63ab" translate="yes" xml:space="preserve">
          <source>Basic syntax</source>
          <target state="translated">基本语法</target>
        </trans-unit>
        <trans-unit id="df59c37567d452b3df15811a05347add631d792a" translate="yes" xml:space="preserve">
          <source>Be warned however, that although the core plugins are generally well maintained and up to date with the rest of Cordova, the quality of third-party plugins can be a bit of a gamble. You also have to make sure the plugin you want to use is &lt;a href=&quot;#plugin-compatibility&quot;&gt;compatible with the Cordova platform versions Meteor bundles&lt;/a&gt;.</source>
          <target state="translated">但是请注意，尽管核心插件通常维护得很好，并且与Cordova的其余部分保持最新，但是第三方插件的质量可能有些冒险。您还必须确保要使用的插件&lt;a href=&quot;#plugin-compatibility&quot;&gt;与Cordova平台版本的Meteor捆绑包兼容&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5e198485ffc7f5bfc7055abf084c85ae24b58c35" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;Blaze.toHTML&lt;/code&gt; returns a string, it is not able to update the DOM in response to reactive data changes. Instead, any reactive data changes will invalidate the current Computation if there is one (for example, an autorun that is the caller of &lt;code&gt;Blaze.toHTML&lt;/code&gt;).</source>
          <target state="translated">由于 &lt;code&gt;Blaze.toHTML&lt;/code&gt; 返回一个字符串，因此它无法响应响应数据更改而更新DOM。相反，任何反应性数据更改都会使当前计算无效（例如，自动运行是 &lt;code&gt;Blaze.toHTML&lt;/code&gt; 的调用者）。</target>
        </trans-unit>
        <trans-unit id="a7c6ea44ced8c0c508edbdc8866cbfe8fa6848c0" translate="yes" xml:space="preserve">
          <source>Because Crosswalk bundles native code for Chromium, you will end up with APKs for both ARM and x86. You can find the generated APKs in the &lt;code&gt;&amp;lt;build-output-directory&amp;gt;/android/project/build/outputs/apk&lt;/code&gt; directory.</source>
          <target state="translated">由于Crosswalk捆绑了Chromium的本机代码，因此最终将获得适用于ARM和x86的APK。您可以在 &lt;code&gt;&amp;lt;build-output-directory&amp;gt;/android/project/build/outputs/apk&lt;/code&gt; 目录中找到生成的APK 。</target>
        </trans-unit>
        <trans-unit id="36597a39894449bf87dbf058f6bb39ff8e7c0002" translate="yes" xml:space="preserve">
          <source>Because a Cordova app is a web app, this means you use standard web elements to create your user interface instead of relying on platform-specific native UI components. Creating a good mobile user experience is an art in itself, but is fortunately helped by the availability of various frameworks and libraries.</source>
          <target state="translated">由于Cordova应用程序是一个Web应用程序,这意味着您使用标准的Web元素来创建您的用户界面,而不是依赖于平台特定的本地UI组件。创建一个良好的移动用户体验本身就是一门艺术,但幸运的是,各种框架和库的存在帮助了我们。</target>
        </trans-unit>
        <trans-unit id="16cb9372dbe0844bb6bf0a2dde71796b86b427da" translate="yes" xml:space="preserve">
          <source>Because installing plugins into a Cordova project already containing plugins can lead to indeterminate results, Meteor will remove and add back all plugins whenever a change to any of the plugins in your project is made.</source>
          <target state="translated">因为将插件安装到一个已经包含插件的Cordova项目中可能会导致不确定的结果,所以每当对项目中的任何插件进行更改时,Meteor都会删除并将所有插件添加回来。</target>
        </trans-unit>
        <trans-unit id="89a8287ce319e143911e1cf92a80ca9c2c261aaa" translate="yes" xml:space="preserve">
          <source>Because it&amp;rsquo;s a &lt;code&gt;Promise&lt;/code&gt;, there are a couple methods developers can use to dictate what will happen upon the availability of the dynamically loaded module:</source>
          <target state="translated">因为这是一个 &lt;code&gt;Promise&lt;/code&gt; ，所以开发人员可以使用几种方法来指示在动态加载的模块可用时会发生什么：</target>
        </trans-unit>
        <trans-unit id="af16a1c9c98456117d167a6f78040ea697541f04" translate="yes" xml:space="preserve">
          <source>Because the Cordova integration in Meteor does not serve your app from &lt;code&gt;file://&lt;/code&gt; URLs, access to local files through &lt;code&gt;file://&lt;/code&gt; URLs is not allowed either due to the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Security/Same-origin_policy&quot;&gt;same-origin policy&lt;/a&gt;.</source>
          <target state="translated">由于Meteor中的Cordova集成无法通过 &lt;code&gt;file://&lt;/code&gt; URL 服务您的应用程序，因此由于&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Security/Same-origin_policy&quot;&gt;同源策略，也&lt;/a&gt;不允许通过 &lt;code&gt;file://&lt;/code&gt; URL 访问本地文件。</target>
        </trans-unit>
        <trans-unit id="82d18fb9dfba6e82874786da637c709e06ccbc1b" translate="yes" xml:space="preserve">
          <source>Because there is a tight coupling between plugin versions and Cordova platform versions, you may encounter build time or runtime errors as a result of incompatible plugins. If this happens, you will have to install a different plugin version, or it may turn out a plugin is not (yet) compatible with the Cordova platform versions we bundle.</source>
          <target state="translated">由于插件版本和Cordova平台版本之间存在紧密的耦合,您可能会遇到因插件不兼容而导致的构建时间或运行时错误。如果发生这种情况,您将不得不安装不同的插件版本,或者可能会发现某个插件与我们捆绑的Cordova平台版本不(还)兼容。</target>
        </trans-unit>
        <trans-unit id="ab223a96e8304110f1a95d3feacd8f61319a39fd" translate="yes" xml:space="preserve">
          <source>Because you can only connect to your app after it has started up, you sometimes miss startup warnings and errors. You can invoke &lt;code&gt;location.reload()&lt;/code&gt; in the DevTools console to reload a running app, this time with the remote debugger connected.</source>
          <target state="translated">由于您只能在应用启动后才能连接到它，因此有时会错过启动警告和错误。您可以在DevTools控制台中调用 &lt;code&gt;location.reload()&lt;/code&gt; 来重新加载正在运行的应用程序，这次连接了远程调试器。</target>
        </trans-unit>
        <trans-unit id="19d16d53495cd58544f6153ebdbd306568c1f121" translate="yes" xml:space="preserve">
          <source>Because you can only connect to your app after it has started up, you sometimes miss startup warnings and errors. You can invoke &lt;code&gt;location.reload()&lt;/code&gt; in the Web Inspector console to reload a running app, this time with the remote debugger connected.</source>
          <target state="translated">由于您只能在应用启动后才能连接到它，因此有时会错过启动警告和错误。您可以在Web Inspector控制台中调用 &lt;code&gt;location.reload()&lt;/code&gt; 来重新加载正在运行的应用程序，这次已连接了远程调试器。</target>
        </trans-unit>
        <trans-unit id="0c6113b07d3d4eef759604eebb84fceb3d30ec31" translate="yes" xml:space="preserve">
          <source>Because your template has been rendered, you can use functions like &lt;a href=&quot;templates#Blaze-TemplateInstance-findAll&quot;&gt;&lt;code&gt;this.findAll&lt;/code&gt;&lt;/a&gt; which look at its DOM nodes.</source>
          <target state="translated">由于模板已经渲染，因此可以使用&lt;a href=&quot;templates#Blaze-TemplateInstance-findAll&quot;&gt; &lt;code&gt;this.findAll&lt;/code&gt; 之&lt;/a&gt;类的函数来查看其DOM节点。</target>
        </trans-unit>
        <trans-unit id="5abec997d982467c6b36892bc76dde8b3a33a8f6" translate="yes" xml:space="preserve">
          <source>Before &lt;code&gt;observe&lt;/code&gt; returns, &lt;code&gt;added&lt;/code&gt; (or &lt;code&gt;addedAt&lt;/code&gt;) will be called zero or more times to deliver the initial results of the query.</source>
          <target state="translated">之前 &lt;code&gt;observe&lt;/code&gt; 的回报， &lt;code&gt;added&lt;/code&gt; （或 &lt;code&gt;addedAt&lt;/code&gt; ）将被称为零次或更多次，提供查询的初步结果。</target>
        </trans-unit>
        <trans-unit id="a8d01123c94f4137460f621537cca27b552394ab" translate="yes" xml:space="preserve">
          <source>Before &lt;code&gt;observeChanges&lt;/code&gt; returns, &lt;code&gt;added&lt;/code&gt; (or &lt;code&gt;addedBefore&lt;/code&gt;) will be called zero or more times to deliver the initial results of the query.</source>
          <target state="translated">之前 &lt;code&gt;observeChanges&lt;/code&gt; 收益， &lt;code&gt;added&lt;/code&gt; （或 &lt;code&gt;addedBefore&lt;/code&gt; ）将被称为零次或更多次，提供查询的初步结果。</target>
        </trans-unit>
        <trans-unit id="ea83a0240e17a73c7243dc5297ea57c2a0625086" translate="yes" xml:space="preserve">
          <source>Before Meteor 1.2, all email addresses and usernames in the database were considered to be case-sensitive. This meant that if you registered an account as &lt;code&gt;AdaLovelace@example.com&lt;/code&gt;, and then tried to log in with &lt;code&gt;adalovelace@example.com&lt;/code&gt;, you&amp;rsquo;d see an error indicating that no user with that email exists. Of course, this can be quite confusing, so we decided to improve things in Meteor 1.2. But the situation was not as simple as it seemed; since MongoDB doesn&amp;rsquo;t have a concept of case-insensitive indexes, it was impossible to guarantee unique emails at the database level. For this reason, we have some special APIs for querying and updating users which manage the case-sensitivity problem at the application level.</source>
          <target state="translated">在Meteor 1.2之前，数据库中的所有电子邮件地址和用户名都区分大小写。这意味着，如果您将帐户注册为 &lt;code&gt;AdaLovelace@example.com&lt;/code&gt; ，然后尝试使用 &lt;code&gt;adalovelace@example.com&lt;/code&gt; 登录，则会看到一条错误消息，指示不存在使用该电子邮件的用户。当然，这可能会造成混乱，因此我们决定改进Meteor 1.2中的功能。但是情况并不像看起来那样简单。由于MongoDB没有区分大小写的索引的概念，因此不可能在数据库级别保证唯一的电子邮件。因此，我们有一些特殊的API用于查询和更新用户，这些API在应用程序级别管理区分大小写的问题。</target>
        </trans-unit>
        <trans-unit id="4b97e2efdb777988d22042bb6ba0cf3928ee1d81" translate="yes" xml:space="preserve">
          <source>Before Meteor 1.3, the contents of &lt;code&gt;node_modules&lt;/code&gt; directories in Meteor application code were completely ignored. When you enable &lt;code&gt;modules&lt;/code&gt;, those useless &lt;code&gt;node_modules&lt;/code&gt; directories suddenly become infinitely more useful:</source>
          <target state="translated">在Meteor 1.3之前，Meteor应用程序代码中的 &lt;code&gt;node_modules&lt;/code&gt; 目录的内容被完全忽略。当启用 &lt;code&gt;modules&lt;/code&gt; ，那些无用的 &lt;code&gt;node_modules&lt;/code&gt; 目录突然变得更加有用：</target>
        </trans-unit>
        <trans-unit id="6740be49888ca023a2351923b69ddf19230c4e0d" translate="yes" xml:space="preserve">
          <source>Before Meteor 1.3, the order in which application files were evaluated was dictated by a set of rules described in the &lt;a href=&quot;http://guide.meteor.com/structure.html#load-order&quot;&gt;Application Structure - Default file load order&lt;/a&gt; section of the Meteor Guide. These rules could become frustrating when one file depended on a variable defined by another file, particularly when the first file was evaluated after the second file.</source>
          <target state="translated">在Meteor 1.3之前，评估应用程序文件的&lt;a href=&quot;http://guide.meteor.com/structure.html#load-order&quot;&gt;顺序&lt;/a&gt;由《 Meteor指南》的&amp;ldquo; 应用程序结构-默认文件加载顺序&amp;rdquo;部分中描述的一组规则决定。当一个文件依赖于另一个文件定义的变量时，这些规则可能变得令人沮丧，尤其是当第一个文件在第二个文件之后进行求值时。</target>
        </trans-unit>
        <trans-unit id="fac9afefab23391468c447eb56ca2d2e2bfd0d21" translate="yes" xml:space="preserve">
          <source>Before running, each test sets up the data it needs using the &lt;code&gt;generateData&lt;/code&gt; helper (see &lt;a href=&quot;#creating-integration-test-data&quot;&gt;the section on creating integration test data&lt;/a&gt; for more detail) then goes to the homepage.</source>
          <target state="translated">在运行之前，每个测试都使用 &lt;code&gt;generateData&lt;/code&gt; 帮助器设置所需的数据（有关更多详细&lt;a href=&quot;#creating-integration-test-data&quot;&gt;信息&lt;/a&gt;，请参见创建集成测试数据的部分），然后转到主页。</target>
        </trans-unit>
        <trans-unit id="75bd7ba492a966d7825a4e04a738e986549b97ca" translate="yes" xml:space="preserve">
          <source>Before submitting the APK(s) to the Play Store, you will need to sign the APK and run &lt;a href=&quot;http://developer.android.com/tools/help/zipalign.html&quot;&gt;&lt;code&gt;zipalign&lt;/code&gt;&lt;/a&gt; on it to optimize the archive.</source>
          <target state="translated">在将APK提交到Play商店之前，您需要先对APK签名并对其执行&lt;a href=&quot;http://developer.android.com/tools/help/zipalign.html&quot;&gt; &lt;code&gt;zipalign&lt;/code&gt; &lt;/a&gt;来优化存档。</target>
        </trans-unit>
        <trans-unit id="58e76639e21d86a7cf0977025b282b4a338136b7" translate="yes" xml:space="preserve">
          <source>Before the release of Meteor 1.3, the only way to share values between files in an application was to assign them to global variables or communicate through shared variables like &lt;code&gt;Session&lt;/code&gt; (variables which, while not technically global, sure do feel syntactically identical to global variables). With the introduction of modules, one module can refer precisely to the exports of any other specific module, so global variables are no longer necessary.</source>
          <target state="translated">在Meteor 1.3发行之前，在应用程序中的文件之间共享值的唯一方法是将它们分配给全局变量或通过共享变量（例如 &lt;code&gt;Session&lt;/code&gt; )进行通信（这些变量在技术上并不全局，但确实在语法上与全局变量相同）。 。通过引入模块，一个模块可以精确地引用任何其他特定模块的输出，因此不再需要全局变量。</target>
        </trans-unit>
        <trans-unit id="9cbad5e621b33b0133b0cff0287c9b2124625e64" translate="yes" xml:space="preserve">
          <source>Before we get into all of the different user-facing accounts functionality you can add with Meteor, let&amp;rsquo;s go over some of the features built into the Meteor DDP protocol and &lt;code&gt;accounts-base&lt;/code&gt; package. These are the parts of Meteor that you&amp;rsquo;ll definitely need to be aware of if you have any user accounts in your app; most of everything else is optional and added/removed via packages.</source>
          <target state="translated">在介绍您可以使用Meteor添加的所有不同的面向用户帐户功能之前，让我们先了解一下Meteor DDP协议和基于 &lt;code&gt;accounts-base&lt;/code&gt; 程序包中内置的一些功能。如果您的应用程序中有任何用户帐户，您肯定需要了解Meteor的这些部分。其他所有内容都是可选的，可以通过软件包添加/删除。</target>
        </trans-unit>
        <trans-unit id="842beb51ca9c5417a27f472386d0e0d52dcc074f" translate="yes" xml:space="preserve">
          <source>Before:</source>
          <target state="translated">Before:</target>
        </trans-unit>
        <trans-unit id="6ac7498757b80872595b31eee7c338943a0e13e5" translate="yes" xml:space="preserve">
          <source>Behaves like &lt;code&gt;Match.Maybe&lt;/code&gt; except it doesn&amp;rsquo;t accept &lt;code&gt;null&lt;/code&gt;. If used in an object, the behavior is identical to &lt;code&gt;Match.Maybe&lt;/code&gt;.</source>
          <target state="translated">像 &lt;code&gt;Match.Maybe&lt;/code&gt; 这样的行为在于它不接受 &lt;code&gt;null&lt;/code&gt; 。如果在对象中使用，则行为与 &lt;code&gt;Match.Maybe&lt;/code&gt; 相同。</target>
        </trans-unit>
        <trans-unit id="50a87cb1bb65133222bac100054495f307293e4d" translate="yes" xml:space="preserve">
          <source>Behavior tab</source>
          <target state="translated">行为标签</target>
        </trans-unit>
        <trans-unit id="c621d5c41837954f6ad92f1eba8d0a32fee19d86" translate="yes" xml:space="preserve">
          <source>Behind every template or part of a template &amp;mdash; a template tag, say, like &lt;code&gt;{{foo}}&lt;/code&gt; or &lt;code&gt;{{#if}}&lt;/code&gt; &amp;mdash; is a View object, which is a reactively updating region of DOM.</source>
          <target state="translated">每个模板或模板的一部分（例如 &lt;code&gt;{{foo}}&lt;/code&gt; 或 &lt;code&gt;{{#if}}&lt;/code&gt; 之类的模板标签）后面都是View对象，它是DOM的动态更新区域。</target>
        </trans-unit>
        <trans-unit id="7e22e62a2eb772a5a2dfa91a54daad5db9e5738d" translate="yes" xml:space="preserve">
          <source>Below, you can find directions for setting up automatic linting at many different stages of development. In general, you want to run the linter as often as possible, because it&amp;rsquo;s the fastest and easiest way to identify typos and small errors.</source>
          <target state="translated">在下面，您可以找到在许多不同开发阶段设置自动棉绒的说明。通常，您希望尽可能多地运行lint，因为这是识别打字错误和小错误的最快，最简单的方法。</target>
        </trans-unit>
        <trans-unit id="bef15881080061463a963904c9625933eea9ae5e" translate="yes" xml:space="preserve">
          <source>Benefits of Methods over REST</source>
          <target state="translated">方法比REST的好处</target>
        </trans-unit>
        <trans-unit id="3f8b8a37ae1c5b93ff031cc3135ac145e3d98c68" translate="yes" xml:space="preserve">
          <source>Benefits of consistent style</source>
          <target state="translated">风格一致的好处</target>
        </trans-unit>
        <trans-unit id="b992d752d113a14ecca7614618e053bfb0a9bba6" translate="yes" xml:space="preserve">
          <source>Besides the common input files&amp;rsquo; methods, these methods are available:</source>
          <target state="translated">除了常用输入文件的方法外，这些方法也可用：</target>
        </trans-unit>
        <trans-unit id="d86abe20dfc3d1589f94ab5935e4ac22c7d1f0bc" translate="yes" xml:space="preserve">
          <source>Besides the common methods available on the input files&amp;rsquo; class, the following methods are available:</source>
          <target state="translated">除了输入文件类上可用的常用方法外，还可以使用以下方法：</target>
        </trans-unit>
        <trans-unit id="a443309dd65eff130e13fefdbbdb66f69b7ac9ba" translate="yes" xml:space="preserve">
          <source>Best practices for defining and calling Methods.</source>
          <target state="translated">定义和调用方法的最佳实践。</target>
        </trans-unit>
        <trans-unit id="60634b609eb279ed2091d0de9c92c92308e838ab" translate="yes" xml:space="preserve">
          <source>Best practices for writing reusable components in Blaze.</source>
          <target state="translated">在Blaze中编写可重用组件的最佳实践。</target>
        </trans-unit>
        <trans-unit id="b1c0d0de6145c780477570f98babdd639892b221" translate="yes" xml:space="preserve">
          <source>Bind the application server to a specific network interface by IP address, for example: &lt;code&gt;BIND_IP=192.168.0.2&lt;/code&gt;.</source>
          <target state="translated">通过IP地址将应用程序服务器绑定到特定的网络接口，例如： &lt;code&gt;BIND_IP=192.168.0.2&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4795dfe49b46fcfdaeaaf8f45bb7b00dd86a774d" translate="yes" xml:space="preserve">
          <source>Binding (eg. from &lt;code&gt;{{#let}}&lt;/code&gt; or &lt;code&gt;{{#each in}}&lt;/code&gt;) in current scope</source>
          <target state="translated">结合（例如，从 &lt;code&gt;{{#let}}&lt;/code&gt; 或 &lt;code&gt;{{#each in}}&lt;/code&gt; ）在当前范围</target>
        </trans-unit>
        <trans-unit id="7ff440de8d23dfe665747a8cf3c9d62a3d1cf5ab" translate="yes" xml:space="preserve">
          <source>Blaze</source>
          <target state="translated">Blaze</target>
        </trans-unit>
        <trans-unit id="d45cb94b6e10b7908a86cad81aab3d11d5d94c8d" translate="yes" xml:space="preserve">
          <source>Blaze HTML templates</source>
          <target state="translated">Blaze HTML模板</target>
        </trans-unit>
        <trans-unit id="91fdcf3e85ce36e991ac7da0bcc8282a2aa578ee" translate="yes" xml:space="preserve">
          <source>Blaze Jade templates</source>
          <target state="translated">翡翠模板</target>
        </trans-unit>
        <trans-unit id="1bb5b9cd15840a68e734293e214589091dfde2b7" translate="yes" xml:space="preserve">
          <source>Blaze Templates in React</source>
          <target state="translated">React中的Blaze模板</target>
        </trans-unit>
        <trans-unit id="60ff3e4031329adb453c91bc106abe22c9c1ecae" translate="yes" xml:space="preserve">
          <source>Blaze and the build system</source>
          <target state="translated">Blaze和构建系统</target>
        </trans-unit>
        <trans-unit id="ecfdf742a5c6737d05e274475b3257c1dbc7236a" translate="yes" xml:space="preserve">
          <source>Blaze has many full-stack Meteor packages on Atmosphere, such as &lt;a href=&quot;https://atmospherejs.com/useraccounts/core&quot;&gt;&lt;code&gt;useraccounts:core&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://atmospherejs.com/aldeed/autoform&quot;&gt;&lt;code&gt;aldeed:autoform&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Blaze在Atmosphere上有许多全栈式Meteor软件包，例如&lt;a href=&quot;https://atmospherejs.com/useraccounts/core&quot;&gt; &lt;code&gt;useraccounts:core&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;https://atmospherejs.com/aldeed/autoform&quot;&gt; &lt;code&gt;aldeed:autoform&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5756ad34518cb601adcdad483dbfc0fff1231b19" translate="yes" xml:space="preserve">
          <source>Blaze is Meteor&amp;rsquo;s built-in reactive rendering library. Usually, templates are written in &lt;a href=&quot;spacebars&quot;&gt;Spacebars&lt;/a&gt;, a variant of &lt;a href=&quot;http://handlebarsjs.com&quot;&gt;Handlebars&lt;/a&gt; designed to take advantage of &lt;a href=&quot;https://github.com/meteor/meteor/tree/devel/packages/tracker&quot;&gt;Tracker&lt;/a&gt;, Meteor&amp;rsquo;s reactivity system. These templates are compiled into JavaScript UI components that are rendered by the Blaze library.</source>
          <target state="translated">Blaze是Meteor的内置反应渲染库。通常，模板是用&lt;a href=&quot;spacebars&quot;&gt;Spacebars&lt;/a&gt;编写的，Spacebars是&lt;a href=&quot;http://handlebarsjs.com&quot;&gt;Handlebars的&lt;/a&gt;一种变体，旨在利用Meteor的反应系统&lt;a href=&quot;https://github.com/meteor/meteor/tree/devel/packages/tracker&quot;&gt;Tracker&lt;/a&gt;加以利用。这些模板被编译到由Blaze库呈现的JavaScript UI组件中。</target>
        </trans-unit>
        <trans-unit id="cd77dff1adda67c3fe762d044cae8bad64e91482" translate="yes" xml:space="preserve">
          <source>Blaze is intentionally opaque about re-rendering. Tracker and Blaze are designed as &amp;ldquo;eventual consistency&amp;rdquo; systems that end up fully reflecting any data change eventually, but may take a few re-runs or re-renders in getting there, depending on how they are used. This can be frustrating if you are trying to carefully control when your component is re-rendered.</source>
          <target state="translated">Blaze在重新渲染方面是故意不透明的。Tracker和Blaze被设计为&amp;ldquo;最终一致性&amp;rdquo;系统，最终最终完全反映出任何数据更改，但可能需要重新运行或重新渲染才能实现，具体取决于它们的使用方式。如果您尝试仔细控制何时重新渲染组件，这可能会令人沮丧。</target>
        </trans-unit>
        <trans-unit id="bd1fbe544f389fd851009ea10afc846cd309ac2d" translate="yes" xml:space="preserve">
          <source>Blaze is not required to build applications in Meteor&amp;mdash;you can also easily use &lt;a href=&quot;http://react-in-meteor.readthedocs.org/en/latest/&quot;&gt;React&lt;/a&gt; or &lt;a href=&quot;http://www.angular-meteor.com&quot;&gt;Angular&lt;/a&gt; to develop your UI. However, this particular article will take you through best practices in building an application in Blaze, which is used as the UI engine in all of the other articles.</source>
          <target state="translated">Blaze不需要在Meteor中构建应用程序-您还可以轻松地使用&lt;a href=&quot;http://react-in-meteor.readthedocs.org/en/latest/&quot;&gt;React&lt;/a&gt;或&lt;a href=&quot;http://www.angular-meteor.com&quot;&gt;Angular&lt;/a&gt;来开发UI。但是，本文将为您提供在Blaze中构建应用程序的最佳实践，该应用程序在所有其他文章中都用作UI引擎。</target>
        </trans-unit>
        <trans-unit id="425ec09b6bb552a4fb67503d6cdf308dfeb201b7" translate="yes" xml:space="preserve">
          <source>Blaze is the package that makes reactive templates possible. You can use the Blaze API directly in order to render templates programmatically and manipulate &amp;ldquo;Views,&amp;rdquo; the building blocks of reactive templates.</source>
          <target state="translated">Blaze是使响应模板成为可能的软件包。您可以直接使用Blaze API，以便以编程方式呈现模板并处理&amp;ldquo;视图&amp;rdquo;，即反应性模板的构建块。</target>
        </trans-unit>
        <trans-unit id="97dee0caaeaf40c573bdb780ef00c8c61f9bf754" translate="yes" xml:space="preserve">
          <source>Blaze uses an easy-to-learn &lt;a href=&quot;http://handlebarsjs.com&quot;&gt;Handlebars&lt;/a&gt;-like template syntax, with logic like &lt;code&gt;{{#if}}&lt;/code&gt; and &lt;code&gt;{{#each}}&lt;/code&gt; interspersed in your HTML files. Template functions and CSS-selector events maps are written in JavaScript files.</source>
          <target state="translated">Blaze使用了易于学习的类似&lt;a href=&quot;http://handlebarsjs.com&quot;&gt;Handlebars&lt;/a&gt;的模板语法，并且在HTML文件中穿插了 &lt;code&gt;{{#if}}&lt;/code&gt; 和 &lt;code&gt;{{#each}}&lt;/code&gt; 之类的逻辑。模板函数和CSS选择器事件映射是用JavaScript文件编写的。</target>
        </trans-unit>
        <trans-unit id="838c68fde027c2f83949feb6ee52f859a5357c3b" translate="yes" xml:space="preserve">
          <source>Blaze.If()</source>
          <target state="translated">Blaze.If()</target>
        </trans-unit>
        <trans-unit id="625246c9abb3577aa0320a1da3a26bf812b04659" translate="yes" xml:space="preserve">
          <source>Blaze.TemplateInstance#$()</source>
          <target state="translated">Blaze.TemplateInstance#$()</target>
        </trans-unit>
        <trans-unit id="9364d700207f76c2b155f4f49cc6ee0434a15582" translate="yes" xml:space="preserve">
          <source>Blaze.TemplateInstance#autorun()</source>
          <target state="translated">Blaze.TemplateInstance#autorun()</target>
        </trans-unit>
        <trans-unit id="a53379fdf05039a364c4fa3f0841e67a5e3d386a" translate="yes" xml:space="preserve">
          <source>Blaze.TemplateInstance#data</source>
          <target state="translated">Blaze.TemplateInstance#data</target>
        </trans-unit>
        <trans-unit id="0a3a728401d7f78a35c1cb49428b842e99e735ea" translate="yes" xml:space="preserve">
          <source>Blaze.TemplateInstance#find()</source>
          <target state="translated">Blaze.TemplateInstance#find()</target>
        </trans-unit>
        <trans-unit id="779b5dc42b1a220a370335de2ab7bff411b5e9ea" translate="yes" xml:space="preserve">
          <source>Blaze.TemplateInstance#findAll()</source>
          <target state="translated">Blaze.TemplateInstance#findAll()</target>
        </trans-unit>
        <trans-unit id="a0873b99f95aa7cfa8d38cbf81496c7bde0bdeb5" translate="yes" xml:space="preserve">
          <source>Blaze.TemplateInstance#firstNode</source>
          <target state="translated">Blaze.TemplateInstance#firstNode</target>
        </trans-unit>
        <trans-unit id="e3ddbd680d8deb80510e226f056a08d37d806229" translate="yes" xml:space="preserve">
          <source>Blaze.TemplateInstance#lastNode</source>
          <target state="translated">Blaze.TemplateInstance#lastNode</target>
        </trans-unit>
        <trans-unit id="6b52a4652e81831bff752c94b5ce73846d0512a0" translate="yes" xml:space="preserve">
          <source>Blaze.TemplateInstance#subscribe()</source>
          <target state="translated">Blaze.TemplateInstance#subscribe()</target>
        </trans-unit>
        <trans-unit id="f1cfed4b381d93e9d50af7a276f64d329720c2a8" translate="yes" xml:space="preserve">
          <source>Blaze.TemplateInstance#view</source>
          <target state="translated">Blaze.TemplateInstance#view</target>
        </trans-unit>
        <trans-unit id="b8f3d75f343c38c102bfdb5a199a3f4b2dfc9be8" translate="yes" xml:space="preserve">
          <source>Block Helpers</source>
          <target state="translated">区块助手</target>
        </trans-unit>
        <trans-unit id="70af3238de42da66beb5f354425347f373dca837" translate="yes" xml:space="preserve">
          <source>Block Tags</source>
          <target state="translated">区块标签</target>
        </trans-unit>
        <trans-unit id="d64197f2851ce58a8d3d271f23ed7fa0f9466463" translate="yes" xml:space="preserve">
          <source>Block tags can be used inside attribute values:</source>
          <target state="translated">块标签可以用在属性值里面。</target>
        </trans-unit>
        <trans-unit id="d2624e889e729d76da8196451c8457674f429ff2" translate="yes" xml:space="preserve">
          <source>Block tags invoke built-in directives or custom block helpers, passing a block of template content that may be instantiated once, more than once, or not at all by the directive or helper.</source>
          <target state="translated">区块标签调用内置指令或自定义区块帮助器,传递一个模板内容区块,该区块可能被指令或帮助器实例化一次、多次或完全不实例化。</target>
        </trans-unit>
        <trans-unit id="0143f6c4f551090c3f8f3db84502f90effd159e0" translate="yes" xml:space="preserve">
          <source>Block tags may also specify &amp;ldquo;else&amp;rdquo; content, separated from the main content by the special template tag &lt;code&gt;{{else}}&lt;/code&gt;.</source>
          <target state="translated">块标签还可以指定&amp;ldquo;其他&amp;rdquo;内容，并通过特殊模板标签 &lt;code&gt;{{else}}&lt;/code&gt; 与主要内容分隔开。</target>
        </trans-unit>
        <trans-unit id="e780c333333005f7389437be49392c0cdb34a2e3" translate="yes" xml:space="preserve">
          <source>Boolean variable. True if running in a Cordova mobile environment.</source>
          <target state="translated">布尔型变量,如果在Cordova移动环境中运行,则为真。如果在Cordova移动环境中运行,则为true。</target>
        </trans-unit>
        <trans-unit id="08524f87797312c593a230239177996812c0c3ae" translate="yes" xml:space="preserve">
          <source>Boolean variable. True if running in client environment.</source>
          <target state="translated">布尔变量,如果在客户端环境下运行,则为真。如果在客户端环境下运行,则为真。</target>
        </trans-unit>
        <trans-unit id="f27c1114c79b3aa9b4c780ac15975f3e7ad25cd3" translate="yes" xml:space="preserve">
          <source>Boolean variable. True if running in development environment.</source>
          <target state="translated">布尔变量,如果在开发环境下运行,则为真。如果在开发环境中运行,则为真。</target>
        </trans-unit>
        <trans-unit id="274de0dcff958e1db418ac191608bf7783aa5a38" translate="yes" xml:space="preserve">
          <source>Boolean variable. True if running in production environment.</source>
          <target state="translated">布尔变量,如果在生产环境中运行,则为真。如果在生产环境中运行,则为真。</target>
        </trans-unit>
        <trans-unit id="1999bda52cc1b0b140d5a576e2ca2531154b7a86" translate="yes" xml:space="preserve">
          <source>Boolean variable. True if running in server environment.</source>
          <target state="translated">布尔变量,如果在服务器环境下运行,则为真。如果在服务器环境下运行,则为真。</target>
        </trans-unit>
        <trans-unit id="ffcac2828e683c1e9a794d34b30015b27ff273bb" translate="yes" xml:space="preserve">
          <source>Borrowing from the &lt;code&gt;tap:i18n&lt;/code&gt; example &lt;a href=&quot;#tap-i18n-js&quot;&gt;above&lt;/a&gt;, in &lt;code&gt;universe:i18n&lt;/code&gt; our &lt;code&gt;displayError&lt;/code&gt; function now looks like this:</source>
          <target state="translated">从借款 &lt;code&gt;tap:i18n&lt;/code&gt; 例子&lt;a href=&quot;#tap-i18n-js&quot;&gt;以上&lt;/a&gt;，在 &lt;code&gt;universe:i18n&lt;/code&gt; 我们的 &lt;code&gt;displayError&lt;/code&gt; 函数现在看起来是这样的：</target>
        </trans-unit>
        <trans-unit id="4d8b7b12b2d7fe17b26b912b94bccb9195122df1" translate="yes" xml:space="preserve">
          <source>Both HTTP and HTTPS protocols are supported. The &lt;code&gt;url&lt;/code&gt; argument must be an absolute URL including protocol and host name on the server, but may be relative to the current host on the client. The &lt;code&gt;query&lt;/code&gt; option replaces the query string of &lt;code&gt;url&lt;/code&gt;. Parameters specified in &lt;code&gt;params&lt;/code&gt; that are put in the URL are appended to any query string. For example, with a &lt;code&gt;url&lt;/code&gt; of &lt;code&gt;'/path?query'&lt;/code&gt; and &lt;code&gt;params&lt;/code&gt; of &lt;code&gt;{ foo: 'bar' }&lt;/code&gt;, the final URL will be &lt;code&gt;'/path?query&amp;amp;foo=bar'&lt;/code&gt;.</source>
          <target state="translated">支持HTTP和HTTPS协议。该 &lt;code&gt;url&lt;/code&gt; 参数必须是一个绝对的URL包括协议和主机名的服务器上，但可能是相对于客户端的当前主机。该 &lt;code&gt;query&lt;/code&gt; 选项替换的查询字符串 &lt;code&gt;url&lt;/code&gt; 。URL中以参数形式指定的 &lt;code&gt;params&lt;/code&gt; 将附加到任何查询字符串。例如， &lt;code&gt;url&lt;/code&gt; 为 &lt;code&gt;'/path?query'&lt;/code&gt; 和 &lt;code&gt;params&lt;/code&gt; 为 &lt;code&gt;{ foo: 'bar' }&lt;/code&gt; 的最终URL将为 &lt;code&gt;'/path?query&amp;amp;foo=bar'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d3ef5f6a05ef42c44b65fa5c1b57d16ea6181323" translate="yes" xml:space="preserve">
          <source>Breaking schema changes</source>
          <target state="translated">打破模式的变化</target>
        </trans-unit>
        <trans-unit id="0d0417953fb6057cba10cb30f8314f4da0225229" translate="yes" xml:space="preserve">
          <source>Breakpoints can be set using the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/debugger&quot;&gt;&lt;code&gt;debugger&lt;/code&gt; keyword&lt;/a&gt;, or through the web UI of Node Inspector (&amp;ldquo;Sources&amp;rdquo; tab).</source>
          <target state="translated">可以使用&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/debugger&quot;&gt; &lt;code&gt;debugger&lt;/code&gt; 关键字&lt;/a&gt;或通过Node Inspector的Web UI（&amp;ldquo; Sources&amp;rdquo;选项卡）设置断点。</target>
        </trans-unit>
        <trans-unit id="7c6fc962f4fe9b56d99663612ad913e750bf7f04" translate="yes" xml:space="preserve">
          <source>Browsers limit the amount of data they will put in the application cache, which can vary due to factors such as how much disk space is free. Unfortunately if your application goes over the limit rather than disabling the application cache altogether and running the application online, the browser will instead fail that particular &lt;em&gt;update&lt;/em&gt; of the cache, leaving your users running old code.</source>
          <target state="translated">浏览器限制了它们将放入应用程序缓存中的数据量，该数据量可能会因可用磁盘空间等因素而有所不同。不幸的是，如果您的应用程序超出了限制，而不是完全禁用应用程序缓存并在线运行该应用程序，则浏览器将使该缓存的特定&lt;em&gt;更新&lt;/em&gt;失败，从而使用户运行旧代码。</target>
        </trans-unit>
        <trans-unit id="4b0a504295dd4c0437c340122fc3cd55baede437" translate="yes" xml:space="preserve">
          <source>Buffers of binary data are represented by &lt;code&gt;Uint8Array&lt;/code&gt; instances on JavaScript platforms that support them. On implementations of JavaScript that do not support &lt;code&gt;Uint8Array&lt;/code&gt;, binary data buffers are represented by standard arrays containing numbers ranging from 0 to 255, and the &lt;code&gt;$Uint8ArrayPolyfill&lt;/code&gt; key set to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">二进制数据的缓冲区由支持它们的JavaScript平台上的 &lt;code&gt;Uint8Array&lt;/code&gt; 实例表示。在不支持 &lt;code&gt;Uint8Array&lt;/code&gt; 的JavaScript实现上，二进制数据缓冲区由标准数组表示，该数组包含0到255之间的数字，并且 &lt;code&gt;$Uint8ArrayPolyfill&lt;/code&gt; 键设置为 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="44aba47e1f8464da650aeb1c01be7d61818f7318" translate="yes" xml:space="preserve">
          <source>Build Plugin</source>
          <target state="translated">构建插件</target>
        </trans-unit>
        <trans-unit id="a3974624af347a31732593250527936c169a498d" translate="yes" xml:space="preserve">
          <source>Build Plugins API</source>
          <target state="translated">构建插件API</target>
        </trans-unit>
        <trans-unit id="9f1ab2cb9af208e7f4ac2e0bbaeacdef61f17c98" translate="yes" xml:space="preserve">
          <source>Build System</source>
          <target state="translated">构建系统</target>
        </trans-unit>
        <trans-unit id="a3b684eb5589f8c2caadd59b2a2b8f57c78ba143" translate="yes" xml:space="preserve">
          <source>Build plugins</source>
          <target state="translated">构建插件</target>
        </trans-unit>
        <trans-unit id="3e9d7391bbcb1097ddb0ded32499e35c5adc1007" translate="yes" xml:space="preserve">
          <source>Build plugins are created with &lt;a href=&quot;#PackageNamespace-registerBuildPlugin&quot;&gt;&lt;code&gt;Package.registerBuildPlugin&lt;/code&gt;&lt;/a&gt;. See the coffeescript package for an example. Build plugins are fully-fledged Meteor programs in their own right and have their own namespace, package dependencies, source files and npm requirements.</source>
          <target state="translated">构建插件是使用&lt;a href=&quot;#PackageNamespace-registerBuildPlugin&quot;&gt; &lt;code&gt;Package.registerBuildPlugin&lt;/code&gt; &lt;/a&gt;创建的。有关示例，请参阅coffeescript包。Build插件本身就是成熟的Meteor程序，具有自己的名称空间，程序包依赖性，源文件和npm要求。</target>
        </trans-unit>
        <trans-unit id="9506a16b8fce2b1339fe0958fa2aac00e0777cc2" translate="yes" xml:space="preserve">
          <source>Build plugins fill the phases 2, 3 and 5.</source>
          <target state="translated">构建插件填充第2、3、5阶段。</target>
        </trans-unit>
        <trans-unit id="5d2c2c9f4c5c25dcaff9e2050a29eabb1ebe8b57" translate="yes" xml:space="preserve">
          <source>Building an application completely from scratch is a tall order. This is one of the main reasons you might consider using Meteor in the first place - you can focus on writing the code that is specific to your app, instead of reinventing wheels like user login and data synchronization. To streamline your workflow even further, it makes sense to use community packages from &lt;a href=&quot;https://www.npmjs.com&quot;&gt;npm&lt;/a&gt; and &lt;a href=&quot;https://atmospherejs.com&quot;&gt;Atmosphere&lt;/a&gt;. Many of these packages are recommended in the guide, and you can find more in the online directories.</source>
          <target state="translated">从头开始完全构建应用程序是一项艰巨的任务。这是您可能首先考虑使用Meteor的主要原因之一-您可以专注于编写针对您的应用程序的代码，而不必重新发明诸如用户登录和数据同步之类的工具。为了进一步简化您的工作流程，使用&lt;a href=&quot;https://www.npmjs.com&quot;&gt;npm&lt;/a&gt;和&lt;a href=&quot;https://atmospherejs.com&quot;&gt;Atmosphere的&lt;/a&gt;社区软件包是有意义的。在指南中推荐了许多这些软件包，您可以在在线目录中找到更多软件包。</target>
        </trans-unit>
        <trans-unit id="7bfd6775ecfe873ad1d226b3eee9234c45eb9da4" translate="yes" xml:space="preserve">
          <source>Building for production</source>
          <target state="translated">生产用房</target>
        </trans-unit>
        <trans-unit id="a7aff2b12618ba350dd16857d4d8f4798a31963f" translate="yes" xml:space="preserve">
          <source>Built-in Block Helpers</source>
          <target state="translated">内置块状辅助器</target>
        </trans-unit>
        <trans-unit id="cd57ee36fd454b49e6a5d678ccac4189458b8c25" translate="yes" xml:space="preserve">
          <source>Bulk changes</source>
          <target state="translated">批量变更</target>
        </trans-unit>
        <trans-unit id="36b8eb373cc4fa0e422e225c9b9076022a1243ac" translate="yes" xml:space="preserve">
          <source>Business logic an attacker could analyze to find weak points.</source>
          <target state="translated">攻击者可以通过分析业务逻辑来寻找薄弱点。</target>
        </trans-unit>
        <trans-unit id="fc0a52b8dd7d0ca53738b962731f18b0226287db" translate="yes" xml:space="preserve">
          <source>But if a modifier doesn&amp;rsquo;t contain any $-operators, then it is instead interpreted as a literal document, and completely replaces whatever was previously in the database. (Literal document modifiers are not currently supported by &lt;a href=&quot;#allow&quot;&gt;validated updates&lt;/a&gt;.)</source>
          <target state="translated">但是，如果修饰符不包含任何$运算符，则会将其解释为文字文档，并完全替换数据库中以前的任何内容。（&lt;a href=&quot;#allow&quot;&gt;经过验证的更新&lt;/a&gt;当前不支持文字文档修饰符。）</target>
        </trans-unit>
        <trans-unit id="9c8d728494cf932cb5426cefff8e9db24f416504" translate="yes" xml:space="preserve">
          <source>But if you do this, then you open yourself up to problems if another subscription pushes data into the same collection, since the data returned by &lt;code&gt;Lists.find()&lt;/code&gt; might not be what you expected anymore. In an actively developed application, it&amp;rsquo;s often hard to anticipate what may change in the future and this can be a source of hard to understand bugs.</source>
          <target state="translated">但是，如果执行此操作，那么如果另一个订阅将数据推送到同一集合中，则 &lt;code&gt;Lists.find()&lt;/code&gt; 自己带来麻烦，因为Lists.find（）返回的数据可能不再是您期望的。在积极开发的应用程序中，通常很难预料将来会发生什么变化，而这可能是难以理解的错误的来源。</target>
        </trans-unit>
        <trans-unit id="d47844f01b96f72704f852ec37dd4e806a3fafac" translate="yes" xml:space="preserve">
          <source>But they can also contain more complicated tests:</source>
          <target state="translated">但它们也可以包含更复杂的测试。</target>
        </trans-unit>
        <trans-unit id="fb4779ea6afb0215db3cc86f51452b6a202125d0" translate="yes" xml:space="preserve">
          <source>By &lt;code&gt;await&lt;/code&gt;-ing in an asynchronous function</source>
          <target state="translated">通过 &lt;code&gt;await&lt;/code&gt; 异步功能</target>
        </trans-unit>
        <trans-unit id="b966e4091c177fb1a16f5e65983d989ea0763d16" translate="yes" xml:space="preserve">
          <source>By default the &lt;code&gt;profile&lt;/code&gt; option is added directly to the new user document. To override this behavior, use &lt;a href=&quot;#accounts_oncreateuser&quot;&gt;&lt;code&gt;Accounts.onCreateUser&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">默认情况下， &lt;code&gt;profile&lt;/code&gt; 选项直接添加到新的用户文档中。若要覆盖此行为，请使用&lt;a href=&quot;#accounts_oncreateuser&quot;&gt; &lt;code&gt;Accounts.onCreateUser&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5106bb5601c7f77dcd68b2115e5fccd3081f7c8a" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;DDPRateLimiter&lt;/code&gt; is configured with a single rule. This rule limits login attempts, new user creation, and password resets to 5 attempts every 10 seconds per connection. It can be removed by calling &lt;code&gt;Accounts.removeDefaultRateLimit()&lt;/code&gt;.</source>
          <target state="translated">默认情况下， &lt;code&gt;DDPRateLimiter&lt;/code&gt; 使用单个规则配置。此规则将登录尝试，新用户创建和密码重置限制为每个连接每10秒5次尝试。可以通过调用 &lt;code&gt;Accounts.removeDefaultRateLimit()&lt;/code&gt; 删除它。</target>
        </trans-unit>
        <trans-unit id="87062e92b3fc008f434d03091165f21d4522c4af" translate="yes" xml:space="preserve">
          <source>By default, Cordova apps in Meteor are only allowed access to &lt;code&gt;localhost&lt;/code&gt; (the device itself, to serve the app from) and the server your app connects to for data loading and hot code push (either an automatically detected IP address an explicitly configured mobile server domain). These restrictions also apply to loading files in iframes and to opening files in other apps (including the mobile browser).</source>
          <target state="translated">默认情况下，仅允许Meteor中的Cordova应用程序访问 &lt;code&gt;localhost&lt;/code&gt; （设备本身，从中提供应用程序服务）以及您的应用程序所连接的服务器以进行数据加载和热代码推送（自动检测到的IP地址或显式配置的移动服务器）域）。这些限制还适用于在iframe中加载文件和在其他应用（包括移动浏览器）中打开文件。</target>
        </trans-unit>
        <trans-unit id="5e46c33dc0ea0ecfd499ad9b5c462c9517fda103" translate="yes" xml:space="preserve">
          <source>By default, Meteor automatically publishes every document in your collection to each connected client. To turn this behavior off, remove the &lt;code&gt;autopublish&lt;/code&gt; package, in your terminal:</source>
          <target state="translated">默认情况下，Meteor会自动将集合中的每个文档发布到每个连接的客户端。要关闭此行为，请在终端中删除 &lt;code&gt;autopublish&lt;/code&gt; 程序包：</target>
        </trans-unit>
        <trans-unit id="5156d8cbd47bd058acbc1ef9598c271ddc97b533" translate="yes" xml:space="preserve">
          <source>By default, an email address is added with &lt;code&gt;{ verified: false }&lt;/code&gt;. Use &lt;a href=&quot;#Accounts-sendVerificationEmail&quot;&gt;&lt;code&gt;Accounts.sendVerificationEmail&lt;/code&gt;&lt;/a&gt; to send an email with a link the user can use to verify their email address.</source>
          <target state="translated">默认情况下，电子邮件地址添加 &lt;code&gt;{ verified: false }&lt;/code&gt; 。使用&lt;a href=&quot;#Accounts-sendVerificationEmail&quot;&gt; &lt;code&gt;Accounts.sendVerificationEmail&lt;/code&gt; &lt;/a&gt;发送带有链接的电子邮件，用户可以使用该链接来验证其电子邮件地址。</target>
        </trans-unit>
        <trans-unit id="b8b727160fcc01ed3d353d41d60d4be0a6623d23" translate="yes" xml:space="preserve">
          <source>By default, any JavaScript files in your Meteor application folder are bundled and loaded on both the client and the server. However, the names of the files and directories inside your project can affect their load order, where they are loaded, and some other characteristics. Here is a list of file and directory names that are treated specially by Meteor:</source>
          <target state="translated">默认情况下,你的Meteor应用程序文件夹中的任何JavaScript文件都会被捆绑并在客户端和服务器上加载。然而,你的项目里面的文件和目录的名字会影响它们的加载顺序,它们被加载的位置,以及其他一些特性。这里是一个被Meteor特殊处理的文件和目录名称的列表。</target>
        </trans-unit>
        <trans-unit id="b621f5caf8a282360327ccc1c28ad527353d7225" translate="yes" xml:space="preserve">
          <source>By default, clients open a connection to the server from which they&amp;rsquo;re loaded. When you call &lt;code&gt;Meteor.subscribe&lt;/code&gt;, &lt;code&gt;Meteor.status&lt;/code&gt;, &lt;code&gt;Meteor.call&lt;/code&gt;, and &lt;code&gt;Meteor.apply&lt;/code&gt;, you are using a connection back to that default server.</source>
          <target state="translated">默认情况下，客户端打开与从中加载服务器的连接。当您调用 &lt;code&gt;Meteor.subscribe&lt;/code&gt; ， &lt;code&gt;Meteor.status&lt;/code&gt; ， &lt;code&gt;Meteor.call&lt;/code&gt; 和 &lt;code&gt;Meteor.apply&lt;/code&gt; 时，您正在使用到该默认服务器的连接。</target>
        </trans-unit>
        <trans-unit id="27262ec360298bde33308d96b74738296c7cf136" translate="yes" xml:space="preserve">
          <source>By default, the &lt;code&gt;Accounts.createUser&lt;/code&gt; function provided by &lt;code&gt;accounts-password&lt;/code&gt; allows you to create an account with a username, email, or both. Most apps expect a specific combination of the two, so you will certainly want to validate the new user creation:</source>
          <target state="translated">默认情况下， &lt;code&gt;accounts-password&lt;/code&gt; 提供的 &lt;code&gt;Accounts.createUser&lt;/code&gt; 函数允许您使用用户名和/或电子邮件创建帐户。大多数应用程序期望两者有特定的组合，因此您肯定会希望验证新用户的创建：</target>
        </trans-unit>
        <trans-unit id="4e8c12de07e1eb69d18782b4cba4294e4011b8af" translate="yes" xml:space="preserve">
          <source>By default, the current user&amp;rsquo;s &lt;code&gt;username&lt;/code&gt;, &lt;code&gt;emails&lt;/code&gt; and &lt;code&gt;profile&lt;/code&gt; are published to the client. You can publish additional fields for the current user with:</source>
          <target state="translated">默认情况下，当前用户的 &lt;code&gt;username&lt;/code&gt; ， &lt;code&gt;emails&lt;/code&gt; 和 &lt;code&gt;profile&lt;/code&gt; 将发布到客户端。您可以使用以下方法为当前用户发布其他字段：</target>
        </trans-unit>
        <trans-unit id="9da1c3fcb172badf20168094172f32903f2dc169" translate="yes" xml:space="preserve">
          <source>By default, the startup timeout is set to 20 seconds. If your app needs more time to startup (or considerably less), you can use &lt;a href=&quot;http://docs.meteor.com/api/mobile-config.html#App-setPreference&quot;&gt;&lt;code&gt;App.setPreference&lt;/code&gt;&lt;/a&gt; to set &lt;code&gt;WebAppStartupTimeout&lt;/code&gt; to another value.</source>
          <target state="translated">默认情况下，启动超时设置为20秒。如果您的应用需要更多（或更少）启动时间，则可以使用&lt;a href=&quot;http://docs.meteor.com/api/mobile-config.html#App-setPreference&quot;&gt; &lt;code&gt;App.setPreference&lt;/code&gt; &lt;/a&gt;将 &lt;code&gt;WebAppStartupTimeout&lt;/code&gt; 设置为另一个值。</target>
        </trans-unit>
        <trans-unit id="a881f32d40d22ea6979b31588aaff1ed703a94d7" translate="yes" xml:space="preserve">
          <source>By default, there are rules added to the &lt;a href=&quot;#ddpratelimiter&quot;&gt;&lt;code&gt;DDPRateLimiter&lt;/code&gt;&lt;/a&gt; that rate limit logins, new user registration and password reset calls to a limit of 5 requests per 10 seconds per session. These are a basic solution to dictionary attacks where a malicious user attempts to guess the passwords of legitimate users by attempting all possible passwords.</source>
          <target state="translated">默认情况下，&lt;a href=&quot;#ddpratelimiter&quot;&gt; &lt;code&gt;DDPRateLimiter&lt;/code&gt; &lt;/a&gt;中添加了一些规则，这些规则将登录名，新用户注册和密码重置调用的速率限制为每个会话每10秒5个请求。这些是字典攻击的基本解决方案，其中恶意用户尝试通过尝试所有可能的密码来猜测合法用户的密码。</target>
        </trans-unit>
        <trans-unit id="22b59bf355dc1bd168a7b33b391cedbd3bb83850" translate="yes" xml:space="preserve">
          <source>By default, your application is bundled for your current architecture. This may cause difficulties if your app contains binary code due to, for example, npm packages. You can try to override that behavior with the &lt;code&gt;--architecture&lt;/code&gt; flag.</source>
          <target state="translated">默认情况下，您的应用程序与当前体系结构捆绑在一起。如果您的应用包含二进制代码（例如，npm软件包），则可能会造成困难。您可以尝试使用 &lt;code&gt;--architecture&lt;/code&gt; 标志覆盖该行为。</target>
        </trans-unit>
        <trans-unit id="04c74d034cf76dbfcb12250c3adbde7b95758e51" translate="yes" xml:space="preserve">
          <source>By isolating a module and simply testing its internal functionality, we can write tests that are &lt;em&gt;fast&lt;/em&gt; and &lt;em&gt;accurate&lt;/em&gt;&amp;mdash;they can quickly tell you where a problem in your application lies. Note however that incomplete unit tests can often hide bugs because of the way they stub out dependencies. For that reason it&amp;rsquo;s useful to combine unit tests with slower (and perhaps less commonly run) integration and acceptance tests.</source>
          <target state="translated">通过隔离模块并简单地测试其内部功能，我们可以编写&lt;em&gt;快速&lt;/em&gt;而&lt;em&gt;准确的&lt;/em&gt;测试，它们可以快速告诉您应用程序中的问题所在。但是请注意，不完整的单元测试通常会掩盖错误，因为它们会破坏依赖关系。因此，将单元测试与速度较慢（可能运行频率较低）的集成和验收测试结合起来很有用。</target>
        </trans-unit>
        <trans-unit id="efb1e9885db336e87ea04cd396d89752cf2fe3ec" translate="yes" xml:space="preserve">
          <source>By making the &lt;code&gt;blurringInput&lt;/code&gt; flexible and reusable, we can avoid re-implementing functionality in the &lt;code&gt;autocompleteInput&lt;/code&gt;.</source>
          <target state="translated">通过使 &lt;code&gt;blurringInput&lt;/code&gt; 灵活且可重用，我们可以避免在 &lt;code&gt;autocompleteInput&lt;/code&gt; 中重新实现功能。</target>
        </trans-unit>
        <trans-unit id="67b6c4b8addee6f0bec9b64fdc066f75fd594e81" translate="yes" xml:space="preserve">
          <source>CDN</source>
          <target state="translated">CDN</target>
        </trans-unit>
        <trans-unit id="08dec90928cb6bd591cb3743478e47ca32878d94" translate="yes" xml:space="preserve">
          <source>CDNs and webfonts</source>
          <target state="translated">CDN和网络字体</target>
        </trans-unit>
        <trans-unit id="a84966ffb4bf321a67812b58d0d41b826341b6bd" translate="yes" xml:space="preserve">
          <source>CSS and CSS pre-processors</source>
          <target state="translated">CSS和CSS预处理器</target>
        </trans-unit>
        <trans-unit id="a6015c9189309fa31b429cde6c038394adde1ae0" translate="yes" xml:space="preserve">
          <source>CSS and HTML files outside special directories are loaded on the client only and cannot be used from server code.</source>
          <target state="translated">特殊目录外的CSS和HTML文件只在客户端加载,不能从服务器代码中使用。</target>
        </trans-unit>
        <trans-unit id="f7f4b8938c6cd3068d488a0d2281b2f77830982d" translate="yes" xml:space="preserve">
          <source>CSS files in an Atmosphere package are declared with &lt;a href=&quot;http://docs.meteor.com/#/full/pack_addFiles&quot;&gt;&lt;code&gt;api.addFiles&lt;/code&gt;&lt;/a&gt;, and therefore will be eagerly evaluated, and automatically bundled with all the other CSS in your app.</source>
          <target state="translated">Atmosphere包中的CSS文件使用&lt;a href=&quot;http://docs.meteor.com/#/full/pack_addFiles&quot;&gt; &lt;code&gt;api.addFiles&lt;/code&gt; &lt;/a&gt;声明，因此将进行急切的评估，并自动与您应用中的所有其他CSS捆绑在一起。</target>
        </trans-unit>
        <trans-unit id="17f6734a316a66f8187de488fbfc9203ab910c5f" translate="yes" xml:space="preserve">
          <source>CSS files in an Atmosphere package are declared with &lt;code&gt;api.addFiles&lt;/code&gt;, and therefore will be eagerly evaluated by default, and then bundled with all the other CSS in your app.</source>
          <target state="translated">Atmosphere包中的CSS文件使用 &lt;code&gt;api.addFiles&lt;/code&gt; 声明，因此默认情况下会急切地求值，然后将其与应用程序中的所有其他CSS捆绑在一起。</target>
        </trans-unit>
        <trans-unit id="93a146322f97a68a65a24dcd8f21183ede60da28" translate="yes" xml:space="preserve">
          <source>CSS framework compatibility should be a primary concern when picking a pre-processor, because a framework written with Less won&amp;rsquo;t be compatible with one written in Sass.</source>
          <target state="translated">选择预处理器时，CSS框架兼容性应该是首要考虑的问题，因为用Less编写的框架与Sass编写的框架不兼容。</target>
        </trans-unit>
        <trans-unit id="6d81c0235995b1524b5cac530b8248e41da04144" translate="yes" xml:space="preserve">
          <source>Cache format</source>
          <target state="translated">缓存格式</target>
        </trans-unit>
        <trans-unit id="60790f7c84170a8b87051d7e857118ffeb0465ee" translate="yes" xml:space="preserve">
          <source>Caching</source>
          <target state="translated">Caching</target>
        </trans-unit>
        <trans-unit id="d5841e55fa6cbcaedf3ecba8404a4141eb29f483" translate="yes" xml:space="preserve">
          <source>Caching Compiler</source>
          <target state="translated">缓存编译器</target>
        </trans-unit>
        <trans-unit id="6ac7c9b172e4fad468f51db89193f2766927b1fe" translate="yes" xml:space="preserve">
          <source>Call &lt;a href=&quot;#meteor_reconnect&quot;&gt;Meteor.reconnect&lt;/a&gt; to reestablish the connection and resume data transfer.</source>
          <target state="translated">调用&lt;a href=&quot;#meteor_reconnect&quot;&gt;Meteor.reconnect&lt;/a&gt;重新建立连接并恢复数据传输。</target>
        </trans-unit>
        <trans-unit id="44b70be3d804410b46c10782fa34d2d69a18a35b" translate="yes" xml:space="preserve">
          <source>Call &lt;code&gt;callback&lt;/code&gt; once for each matching document, sequentially and synchronously.</source>
          <target state="translated">调用 &lt;code&gt;callback&lt;/code&gt; 一次为每个匹配文档，依次同步。</target>
        </trans-unit>
        <trans-unit id="70f2f15eca33d5cb205b9f28af977d10386809ee" translate="yes" xml:space="preserve">
          <source>Call &lt;code&gt;validateLoginAttempt&lt;/code&gt; with a callback to be called on login attempts. It returns an object with a single method, &lt;code&gt;stop&lt;/code&gt;. Calling &lt;code&gt;stop()&lt;/code&gt; unregisters the callback.</source>
          <target state="translated">调用 &lt;code&gt;validateLoginAttempt&lt;/code&gt; ,并在尝试登录时调用一个回调。它使用单一方法 &lt;code&gt;stop&lt;/code&gt; 返回一个对象。调用 &lt;code&gt;stop()&lt;/code&gt; 取消注册回调。</target>
        </trans-unit>
        <trans-unit id="2d356ef2157924e5a40b869f8da5dcc7358601cf" translate="yes" xml:space="preserve">
          <source>Call a function in the future after waiting for a specified delay.</source>
          <target state="translated">等待指定的延迟后,在未来调用一个函数。</target>
        </trans-unit>
        <trans-unit id="3618413f78cab70c8a558023725b9af1308160c4" translate="yes" xml:space="preserve">
          <source>Call a function repeatedly, with a time delay between calls.</source>
          <target state="translated">反复调用一个函数,调用之间有时间延迟。</target>
        </trans-unit>
        <trans-unit id="ea4ea2432aa2799da7e13acb8eeb552e4935386f" translate="yes" xml:space="preserve">
          <source>Call inside a method invocation. Allow subsequent method from this client to begin running in a new fiber.</source>
          <target state="translated">在一个方法调用里面调用。允许该客户端的后续方法在新的光纤中开始运行。</target>
        </trans-unit>
        <trans-unit id="a751a5aece1fabc787773badfe4851e8fd86fa43" translate="yes" xml:space="preserve">
          <source>Call inside the publish function. Informs the subscriber that a document has been added to the record set.</source>
          <target state="translated">在发布函数内部调用。通知订阅者一个文档已被添加到记录集。</target>
        </trans-unit>
        <trans-unit id="8bcbbb115dddefdd02117fc94b644bace6315f13" translate="yes" xml:space="preserve">
          <source>Call inside the publish function. Informs the subscriber that a document has been removed from the record set.</source>
          <target state="translated">在发布函数内调用。通知订阅者文档已从记录集中删除。</target>
        </trans-unit>
        <trans-unit id="25117b3073c4c95d44263d31e4d856a816ffee14" translate="yes" xml:space="preserve">
          <source>Call inside the publish function. Informs the subscriber that a document in the record set has been modified.</source>
          <target state="translated">在发布函数内部调用。通知订阅者记录集中的文档已被修改。</target>
        </trans-unit>
        <trans-unit id="8fbb8bb97c30e4dd5ae6a6689c01d5fcc6f5ad5a" translate="yes" xml:space="preserve">
          <source>Call inside the publish function. Informs the subscriber that an initial, complete snapshot of the record set has been sent. This will trigger a call on the client to the &lt;code&gt;onReady&lt;/code&gt; callback passed to &lt;a href=&quot;#meteor_subscribe&quot;&gt;&lt;code&gt;Meteor.subscribe&lt;/code&gt;&lt;/a&gt;, if any.</source>
          <target state="translated">在发布函数中调用。通知订户已发送记录集的初始完整快照。这将触发客户端调用传递给&lt;a href=&quot;#meteor_subscribe&quot;&gt; &lt;code&gt;Meteor.subscribe&lt;/code&gt; &lt;/a&gt;的 &lt;code&gt;onReady&lt;/code&gt; 回调（如果有）。</target>
        </trans-unit>
        <trans-unit id="0f236a1cac04cf0a5650c7f738b423c336faece3" translate="yes" xml:space="preserve">
          <source>Call inside the publish function. Registers a callback function to run when the subscription is stopped.</source>
          <target state="translated">在发布函数里面调用。注册一个回调函数,以便在停止订阅时运行。</target>
        </trans-unit>
        <trans-unit id="dbb7197d57a94b7dbcbe416bc253788ef05ef322" translate="yes" xml:space="preserve">
          <source>Call inside the publish function. Stops this client's subscription and invokes the client's &lt;code&gt;onStop&lt;/code&gt; callback with no error.</source>
          <target state="translated">在发布函数中调用。停止此客户端的订阅，并无错误地调用客户端的 &lt;code&gt;onStop&lt;/code&gt; 回调。</target>
        </trans-unit>
        <trans-unit id="06de9b9ebc48ead72b16c0923df843875315b3f7" translate="yes" xml:space="preserve">
          <source>Call inside the publish function. Stops this client's subscription, triggering a call on the client to the &lt;code&gt;onStop&lt;/code&gt; callback passed to &lt;a href=&quot;#meteor_subscribe&quot;&gt;&lt;code&gt;Meteor.subscribe&lt;/code&gt;&lt;/a&gt;, if any. If &lt;code&gt;error&lt;/code&gt; is not a &lt;a href=&quot;#meteor_error&quot;&gt;&lt;code&gt;Meteor.Error&lt;/code&gt;&lt;/a&gt;, it will be &lt;a href=&quot;#meteor_error&quot;&gt;sanitized&lt;/a&gt;.</source>
          <target state="translated">在发布函数中调用。停止此客户端的订阅，从而触发客户端对传递给&lt;a href=&quot;#meteor_subscribe&quot;&gt; &lt;code&gt;Meteor.subscribe&lt;/code&gt; &lt;/a&gt;的 &lt;code&gt;onStop&lt;/code&gt; 回调的调用（如果有）。如果 &lt;code&gt;error&lt;/code&gt; 是不是&lt;a href=&quot;#meteor_error&quot;&gt; &lt;code&gt;Meteor.Error&lt;/code&gt; &lt;/a&gt;，它将被&lt;a href=&quot;#meteor_error&quot;&gt;消毒&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="01b8b2707adbfeaa0ac7d08a129c209852669afe" translate="yes" xml:space="preserve">
          <source>Call this function to change the currently logged-in user on the connection that made this method call. This simply sets the value of &lt;code&gt;userId&lt;/code&gt; for future method calls received on this connection. Pass &lt;code&gt;null&lt;/code&gt; to log out the connection.</source>
          <target state="translated">调用此函数以更改进行此方法调用的连接上的当前登录用户。这只是为在此连接上接收到的将来方法调用设置 &lt;code&gt;userId&lt;/code&gt; 的值。传递 &lt;code&gt;null&lt;/code&gt; 退出连接。</target>
        </trans-unit>
        <trans-unit id="0f897e3f75f9fb5dff3acae332556e5367cb279e" translate="yes" xml:space="preserve">
          <source>Call this method to disconnect from the server and stop all live data updates. While the client is disconnected it will not receive updates to collections, method calls will be queued until the connection is reestablished, and hot code push will be disabled.</source>
          <target state="translated">调用此方法断开与服务器的连接,并停止所有实时数据更新。当客户端断开连接时,它将不会收到收款的更新,方法调用将被排队,直到连接重新建立,并且热代码推送将被禁用。</target>
        </trans-unit>
        <trans-unit id="44093a4da42021f66f73beea67ad68ecbee70690" translate="yes" xml:space="preserve">
          <source>Callback that is called when the request is completed. Required on the client.</source>
          <target state="translated">请求完成后调用的回调。客户端需要。</target>
        </trans-unit>
        <trans-unit id="b00d2aac358446214b673079d45e7c92745c588a" translate="yes" xml:space="preserve">
          <source>Callbacks added with this method are called before your template&amp;rsquo;s logic is evaluated for the first time. Inside a callback, &lt;code&gt;this&lt;/code&gt; is the new &lt;a href=&quot;#Template-instances&quot;&gt;template instance&lt;/a&gt; object. Properties you set on this object will be visible from the callbacks added with &lt;code&gt;onRendered&lt;/code&gt; and &lt;code&gt;onDestroyed&lt;/code&gt; methods and from event handlers.</source>
          <target state="translated">在首次评估模板的逻辑之前，将调用此方法添加的回调。在回调内部， &lt;code&gt;this&lt;/code&gt; 是新的&lt;a href=&quot;#Template-instances&quot;&gt;模板实例&lt;/a&gt;对象。您在此对象上设置的属性将从通过 &lt;code&gt;onRendered&lt;/code&gt; 和 &lt;code&gt;onDestroyed&lt;/code&gt; 方法添加的回调以及事件处理程序中可见。</target>
        </trans-unit>
        <trans-unit id="6413b92f3589db16b7d7e81c831188c52c8a3859" translate="yes" xml:space="preserve">
          <source>Callbacks added with this method are called once when an instance of Template.&lt;em&gt;myTemplate&lt;/em&gt; is rendered into DOM nodes and put into the document for the first time.</source>
          <target state="translated">使用Template方法的实例时，使用此方法添加的回调将被调用一次。&lt;em&gt;myTemplate&lt;/em&gt;呈现到DOM节点中，并首次放入文档中。</target>
        </trans-unit>
        <trans-unit id="b8fda9c0aa14edaa3c99b485f25e2faccfc9fc11" translate="yes" xml:space="preserve">
          <source>Called whenever a login is attempted (either successful or unsuccessful). A login can be aborted by returning a falsy value or throwing an exception.</source>
          <target state="translated">每当尝试登录时(无论是成功还是不成功)都会被调用。登录可以通过返回一个虚假值或抛出一个异常来终止。</target>
        </trans-unit>
        <trans-unit id="759f49acb2d8dc2eb20ca80bc123aff10abc01de" translate="yes" xml:space="preserve">
          <source>Called whenever a new user is created. Return the new user object, or throw an &lt;code&gt;Error&lt;/code&gt; to abort the creation.</source>
          <target state="translated">每当创建新用户时调用。返回新的用户对象，或抛出 &lt;code&gt;Error&lt;/code&gt; 以中止创建。</target>
        </trans-unit>
        <trans-unit id="2c599ecf111ed4b6b085548d556e7965a946a2e9" translate="yes" xml:space="preserve">
          <source>Called whenever a new user is created. Takes the new user object, and returns true to allow the creation or false to abort.</source>
          <target state="translated">每当有新用户创建时调用。获取新用户对象,返回true允许创建,否则返回false中止。</target>
        </trans-unit>
        <trans-unit id="91f63fb778fbf778d23c69d5a31e985a9cacf308" translate="yes" xml:space="preserve">
          <source>Calling</source>
          <target state="translated">Calling</target>
        </trans-unit>
        <trans-unit id="a25dcc07948539fb7b93f4e64e93be7386595773" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;methods&lt;/code&gt; on the client defines &lt;em&gt;stub&lt;/em&gt; functions associated with server methods of the same name. You don&amp;rsquo;t have to define a stub for your method if you don&amp;rsquo;t want to. In that case, method calls are just like remote procedure calls in other systems, and you&amp;rsquo;ll have to wait for the results from the server.</source>
          <target state="translated">客户端上的调用 &lt;code&gt;methods&lt;/code&gt; 定义与同名服务器方法相关联的&lt;em&gt;存根&lt;/em&gt;函数。如果不想，则不必为方法定义存根。在这种情况下，方法调用就像其他系统中的远程过程调用一样，您将不得不等待服务器的结果。</target>
        </trans-unit>
        <trans-unit id="3e895dceee9c3ebf1e7fa5384228335a0cf20583" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;methods&lt;/code&gt; on the server defines functions that can be called remotely by clients. They should return an &lt;a href=&quot;#ejson&quot;&gt;EJSON&lt;/a&gt;-able value or throw an exception. Inside your method invocation, &lt;code&gt;this&lt;/code&gt; is bound to a method invocation object, which provides the following:</source>
          <target state="translated">服务器上的调用 &lt;code&gt;methods&lt;/code&gt; 定义了可以由客户端远程调用的函数。他们应该返回&lt;a href=&quot;#ejson&quot;&gt;EJSON&lt;/a&gt;允许的值或引发异常。在方法调用内部， &lt;code&gt;this&lt;/code&gt; 方法绑定到方法调用对象，该对象提供以下内容：</target>
        </trans-unit>
        <trans-unit id="83c163df00abba064e7630eb42d7c4f10fc0b258" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;this.autorun&lt;/code&gt; sets up a reactive context which will re-initialize the subscription whenever the reactive function &lt;code&gt;this.getListId()&lt;/code&gt; changes.</source>
          <target state="translated">调用 &lt;code&gt;this.autorun&lt;/code&gt; 设置一个反应式上下文，只要反应式函数 &lt;code&gt;this.getListId()&lt;/code&gt; 发生更改，该上下文便会重新初始化订阅。</target>
        </trans-unit>
        <trans-unit id="3713bac8141dfd0326737b87fd03bf0aabf988b3" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;this.subscribe()&lt;/code&gt; (rather than &lt;code&gt;Meteor.subscribe&lt;/code&gt;), which attaches a special &lt;code&gt;subscriptionsReady()&lt;/code&gt; function to the template instance, which is true when all subscriptions made inside this template are ready.</source>
          <target state="translated">调用 &lt;code&gt;this.subscribe()&lt;/code&gt; （而不是 &lt;code&gt;Meteor.subscribe&lt;/code&gt; ），它将一个特殊的 &lt;code&gt;subscriptionsReady()&lt;/code&gt; 函数附加到模板实例，当准备好在此模板内进行的所有订阅时，该函数为true。</target>
        </trans-unit>
        <trans-unit id="4a5d23d1c6d6168cec4f993ccda666e97b753723" translate="yes" xml:space="preserve">
          <source>Calling a Method from a form</source>
          <target state="translated">从表单中调用方法</target>
        </trans-unit>
        <trans-unit id="d186f85b7ced45c2eecfb4eba041f2fe11cef341" translate="yes" xml:space="preserve">
          <source>Calling a Method from another Method</source>
          <target state="translated">从另一个方法调用一个方法</target>
        </trans-unit>
        <trans-unit id="52cf538500f3c008630940db197aa2c752d37ef1" translate="yes" xml:space="preserve">
          <source>Calling helpers with arguments</source>
          <target state="translated">调用带有参数的助记符</target>
        </trans-unit>
        <trans-unit id="32ca778a91e8f62b4bf620335a3462423e1fb6de" translate="yes" xml:space="preserve">
          <source>Calling service API for more data</source>
          <target state="translated">调用服务API获取更多数据</target>
        </trans-unit>
        <trans-unit id="e3b8fa9ab8692f0835d4fc0518df606254fa697a" translate="yes" xml:space="preserve">
          <source>Calling this function is analogous to declaring a model in a traditional ORM (Object-Relation Mapper)-centric framework. It sets up a &lt;em&gt;collection&lt;/em&gt; (a storage space for records, or &amp;ldquo;documents&amp;rdquo;) that can be used to store a particular type of information, like users, posts, scores, todo items, or whatever matters to your application. Each document is a EJSON object. It includes an &lt;code&gt;_id&lt;/code&gt; property whose value is unique in the collection, which Meteor will set when you first create the document.</source>
          <target state="translated">调用此函数类似于在传统的以ORM（对象关系映射器）为中心的框架中声明模型。它设置了一个&lt;em&gt;集合&lt;/em&gt;（用于记录或&amp;ldquo;文档&amp;rdquo;的存储空间），该&lt;em&gt;集合&lt;/em&gt;可用于存储特定类型的信息，例如用户，帖子，乐谱，待办事项或对您的应用程序重要的信息。每个文档都是一个EJSON对象。它包含一个 &lt;code&gt;_id&lt;/code&gt; 属性，其值在集合中是唯一的，Meteor会在您首次创建文档时对其进行设置。</target>
        </trans-unit>
        <trans-unit id="e4ce4c47cf8c05a56cf27c5033c8f5f0701dfdce" translate="yes" xml:space="preserve">
          <source>Calls &lt;a href=&quot;#meteor_loggingin&quot;&gt;Meteor.loggingIn()&lt;/a&gt;.</source>
          <target state="translated">调用&lt;a href=&quot;#meteor_loggingin&quot;&gt;Meteor.loggingIn（）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a41053254050022a97f5f8f91de5898fcf3f7b34" translate="yes" xml:space="preserve">
          <source>Calls &lt;a href=&quot;#meteor_user&quot;&gt;Meteor.user()&lt;/a&gt;. Use &lt;code&gt;{{#if currentUser}}&lt;/code&gt; to check whether the user is logged in.</source>
          <target state="translated">调用&lt;a href=&quot;#meteor_user&quot;&gt;Meteor.user（）&lt;/a&gt;。使用 &lt;code&gt;{{#if currentUser}}&lt;/code&gt; 检查用户是否已登录。</target>
        </trans-unit>
        <trans-unit id="972868233a1c8e1a158b6026d72d6cc974406452" translate="yes" xml:space="preserve">
          <source>Calls &lt;code&gt;func&lt;/code&gt; when the View is rendered and inserted into the DOM, after waiting for the end of &lt;a href=&quot;https://docs.meteor.com/api/tracker.html#Tracker-afterFlush&quot;&gt;flush time&lt;/a&gt;. Does not fire if the View is destroyed at any point before it would fire. May fire multiple times (if the View re-renders). In &lt;code&gt;func&lt;/code&gt;, the View is bound to &lt;code&gt;this&lt;/code&gt;.</source>
          <target state="translated">等待&lt;a href=&quot;https://docs.meteor.com/api/tracker.html#Tracker-afterFlush&quot;&gt;刷新时间&lt;/a&gt;结束后，在呈现View并将其插入DOM时调用 &lt;code&gt;func&lt;/code&gt; 。如果在触发视图之前的任何时候将其销毁，则不会触发。可能会触发多次（如果视图重新渲染）。在 &lt;code&gt;func&lt;/code&gt; 中，View与 &lt;code&gt;this&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="355fc1521ea85087af5c15dfac01018a72ed857c" translate="yes" xml:space="preserve">
          <source>Calls &lt;code&gt;func&lt;/code&gt; with &lt;code&gt;Tracker.currentComputation&lt;/code&gt; temporarily set to &lt;code&gt;null&lt;/code&gt; and returns &lt;code&gt;func&lt;/code&gt;&amp;lsquo;s own return value. If &lt;code&gt;func&lt;/code&gt; accesses reactive data sources, these data sources will never cause a rerun of the enclosing computation.</source>
          <target state="translated">在 &lt;code&gt;Tracker.currentComputation&lt;/code&gt; 临时设置为 &lt;code&gt;null&lt;/code&gt; 的情况下调用 &lt;code&gt;func&lt;/code&gt; 并返回 &lt;code&gt;func&lt;/code&gt; 自己的返回值。如果 &lt;code&gt;func&lt;/code&gt; 访问反应性数据源，则这些数据源将永远不会导致封闭计算的重新运行。</target>
        </trans-unit>
        <trans-unit id="d7b33507b3618986e960f9d7f0e06f73996bb712" translate="yes" xml:space="preserve">
          <source>Calls the function &lt;em&gt;condition&lt;/em&gt; with the value as the argument. If &lt;em&gt;condition&lt;/em&gt; returns true, this matches. If &lt;em&gt;condition&lt;/em&gt; throws a &lt;code&gt;Match.Error&lt;/code&gt; or returns false, this fails. If &lt;em&gt;condition&lt;/em&gt; throws any other error, that error is thrown from the call to &lt;code&gt;check&lt;/code&gt; or &lt;code&gt;Match.test&lt;/code&gt;. Examples:</source>
          <target state="translated">以值作为参数调用函数&lt;em&gt;条件&lt;/em&gt;。如果&lt;em&gt;condition&lt;/em&gt;返回true，则匹配。如果&lt;em&gt;条件&lt;/em&gt;抛出 &lt;code&gt;Match.Error&lt;/code&gt; 或返回false，则失败。如果&lt;em&gt;condition&lt;/em&gt;引发任何其他错误，则从对 &lt;code&gt;check&lt;/code&gt; 或 &lt;code&gt;Match.test&lt;/code&gt; 的调用中引发该错误。例子：</target>
        </trans-unit>
        <trans-unit id="ebd33d67f25a75ad881749de04d2694337a74d14" translate="yes" xml:space="preserve">
          <source>Calls to &lt;a href=&quot;#accounts_createuser&quot;&gt;&lt;code&gt;createUser&lt;/code&gt;&lt;/a&gt; from the client will be rejected. In addition, if you are using &lt;a href=&quot;#accountsui&quot;&gt;accounts-ui&lt;/a&gt;, the &quot;Create account&quot; link will not be available.</source>
          <target state="translated">客户端对&lt;a href=&quot;#accounts_createuser&quot;&gt; &lt;code&gt;createUser&lt;/code&gt; 的&lt;/a&gt;调用将被拒绝。另外，如果您使用&lt;a href=&quot;#accountsui&quot;&gt;accounts-ui&lt;/a&gt;，则&amp;ldquo;创建帐户&amp;rdquo;链接将不可用。</target>
        </trans-unit>
        <trans-unit id="72e22acae50ef25ddfe821608c4c176721bb4db5" translate="yes" xml:space="preserve">
          <source>Cancel a function call scheduled by &lt;code&gt;Meteor.setTimeout&lt;/code&gt;.</source>
          <target state="translated">取消由 &lt;code&gt;Meteor.setTimeout&lt;/code&gt; 安排的函数调用。</target>
        </trans-unit>
        <trans-unit id="58c69ae93ab866a458cd5ecf58546ec317d4250d" translate="yes" xml:space="preserve">
          <source>Cancel a repeating function call scheduled by &lt;code&gt;Meteor.setInterval&lt;/code&gt;.</source>
          <target state="translated">取消由 &lt;code&gt;Meteor.setInterval&lt;/code&gt; 安排的重复功能调用。</target>
        </trans-unit>
        <trans-unit id="139ad8a41b0016097d15b025d9946f802a32532b" translate="yes" xml:space="preserve">
          <source>Cancel the subscription. This will typically result in the server directing the client to remove the subscription&amp;rsquo;s data from the client&amp;rsquo;s cache.</source>
          <target state="translated">取消订阅。通常，这将导致服务器指示客户端从客户端的缓存中删除订阅的数据。</target>
        </trans-unit>
        <trans-unit id="d722e7f88f6d500fe392942026205c1c29fa8a06" translate="yes" xml:space="preserve">
          <source>Carefully Designed Client Side Router for Meteor.</source>
          <target state="translated">精心设计的Meteor客户端路由器。</target>
        </trans-unit>
        <trans-unit id="18e12fa75235bc54c83809e88cc2cdcd32cccd82" translate="yes" xml:space="preserve">
          <source>Carefully extended flow-router with waitOn and template context</source>
          <target state="translated">带有waitOn和模板上下文的精心扩展的流媒体路由器。</target>
        </trans-unit>
        <trans-unit id="a5c2f31f12329b480874d41c2cb0a6bf9acc6f3c" translate="yes" xml:space="preserve">
          <source>Case sensitivity</source>
          <target state="translated">案件敏感性</target>
        </trans-unit>
        <trans-unit id="bd09a2aa3120e2567583f8bcfacaafd76be5024f" translate="yes" xml:space="preserve">
          <source>Catch-all for miscellaneous commands that require authorization to use.</source>
          <target state="translated">需要授权使用的各种命令的总称。</target>
        </trans-unit>
        <trans-unit id="bcaa33a7ae44bd5042c37a9cdbea7f843b1cf7c8" translate="yes" xml:space="preserve">
          <source>Caveats</source>
          <target state="translated">Caveats</target>
        </trans-unit>
        <trans-unit id="651e78b7f0c78415e57ff7cd15c08d2dd23bd313" translate="yes" xml:space="preserve">
          <source>Chaining of Block Helpers</source>
          <target state="translated">组块助手的连锁化</target>
        </trans-unit>
        <trans-unit id="856203aa2f27ce181319a9bba34f0864a2dab53b" translate="yes" xml:space="preserve">
          <source>Challenges of testing in Meteor</source>
          <target state="translated">流星测试的挑战</target>
        </trans-unit>
        <trans-unit id="202fece7ff7fb4f9be6423fd01ea00730cafe838" translate="yes" xml:space="preserve">
          <source>Chances are you also want to set &lt;code&gt;&amp;lt;title&amp;gt;&lt;/code&gt; tags and other &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; content to make your site appear nicer in search results. The best way to do so is to use the &lt;a href=&quot;https://atmospherejs.com/kadira/dochead&quot;&gt;&lt;code&gt;kadira:dochead&lt;/code&gt;&lt;/a&gt; package. The sensible place to call out to &lt;code&gt;DocHead&lt;/code&gt; is from the &lt;code&gt;onCreated&lt;/code&gt; callbacks of your page-level components.</source>
          <target state="translated">您还可能需要设置 &lt;code&gt;&amp;lt;title&amp;gt;&lt;/code&gt; 标签和其他 &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; 内容，以使您的网站在搜索结果中看起来更好。最好的方法是使用&lt;a href=&quot;https://atmospherejs.com/kadira/dochead&quot;&gt; &lt;code&gt;kadira:dochead&lt;/code&gt; &lt;/a&gt;软件包。调用 &lt;code&gt;DocHead&lt;/code&gt; 的明智位置是从页面级组件的 &lt;code&gt;onCreated&lt;/code&gt; 回调中进行。</target>
        </trans-unit>
        <trans-unit id="002745cee5b6b89e4e329c7c744b206048147993" translate="yes" xml:space="preserve">
          <source>Chances are your package will want to make use of other packages. To ensure they are available, you can declare dependencies. Atmosphere packages can depend both on other Atmosphere packages, as well as packages from npm.</source>
          <target state="translated">你的软件包有可能需要使用其他软件包。为了确保它们可用,你可以声明依赖关系。Atmosphere包既可以依赖其他Atmosphere包,也可以依赖npm的包。</target>
        </trans-unit>
        <trans-unit id="1a0247877d7c93e76babd10d5bd67176c1744989" translate="yes" xml:space="preserve">
          <source>Change a user's username. Use this instead of updating the database directly. The operation will fail if there is an existing user with a username only differing in case.</source>
          <target state="translated">更改用户的用户名。用这个方法代替直接更新数据库。如果有一个现有的用户,其用户名只有大小写不同,则该操作将失败。</target>
        </trans-unit>
        <trans-unit id="221120c71aeae043cd7b893fdf0d11a5dc1fe548" translate="yes" xml:space="preserve">
          <source>Change the current user's password. Must be logged in.</source>
          <target state="translated">修改当前用户的密码。必须登录。</target>
        </trans-unit>
        <trans-unit id="f4612cb3512308efd2f355bd5e6efa67fb45ebd6" translate="yes" xml:space="preserve">
          <source>Change tracking for Optimistic UI</source>
          <target state="translated">乐观主义UI的变化跟踪</target>
        </trans-unit>
        <trans-unit id="fe388c573f18530e9ce9618d14b573774074746e" translate="yes" xml:space="preserve">
          <source>Changing Routes</source>
          <target state="translated">改变路线</target>
        </trans-unit>
        <trans-unit id="b5094078776e636a876b346418b0c7c1e5768565" translate="yes" xml:space="preserve">
          <source>Changing language</source>
          <target state="translated">改变语言</target>
        </trans-unit>
        <trans-unit id="78500489dc7290053233cfe03b9b4a2b2430ca22" translate="yes" xml:space="preserve">
          <source>Changing page when logged out</source>
          <target state="translated">登出时更改页面</target>
        </trans-unit>
        <trans-unit id="4b5e84be0e45d1f4cc38276a4ec0e7fdea116bcf" translate="yes" xml:space="preserve">
          <source>Check</source>
          <target state="translated">Check</target>
        </trans-unit>
        <trans-unit id="be2e6073619118a4fb5dcb6c62f346f7872159ad" translate="yes" xml:space="preserve">
          <source>Check that a value matches a &lt;a href=&quot;#matchpatterns&quot;&gt;pattern&lt;/a&gt;. If the value does not match the pattern, throw a &lt;code&gt;Match.Error&lt;/code&gt;.</source>
          <target state="translated">检查值是否与&lt;a href=&quot;#matchpatterns&quot;&gt;模式&lt;/a&gt;匹配。如果该值与模式不匹配，则抛出 &lt;code&gt;Match.Error&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="136b8f4333d780aa7946829ce5d3cfa82c75d660" translate="yes" xml:space="preserve">
          <source>Check the box to accept the license agreement, and select the correct download for your platform</source>
          <target state="translated">勾选接受许可协议,并为您的平台选择正确的下载。</target>
        </trans-unit>
        <trans-unit id="b65e0c2f78a008bff05193c57feb1f2e4916c78d" translate="yes" xml:space="preserve">
          <source>Check your code with ESLint</source>
          <target state="translated">用ESLint检查您的代码</target>
        </trans-unit>
        <trans-unit id="f487fdd5931e5d4b5b28de0bdefb3877f59894e1" translate="yes" xml:space="preserve">
          <source>Chimp has a variety of options for setting it up, but we can add some npm scripts which will run the currently tests we define in Chimp&amp;rsquo;s two main modes. We can add them to our &lt;code&gt;package.json&lt;/code&gt;:</source>
          <target state="translated">Chimp有多种设置选项，但我们可以添加一些npm脚本，这些脚本将运行在Chimp的两种主要模式下定义的当前测试。我们可以将它们添加到我们的 &lt;code&gt;package.json&lt;/code&gt; 中：</target>
        </trans-unit>
        <trans-unit id="d4321a28a93f863267d3eed82d6e5c8af0ff1cae" translate="yes" xml:space="preserve">
          <source>Chimp requires node version 4 or 5. You can check your node version by running:</source>
          <target state="translated">Chimp需要node版本4或5。你可以通过运行以下命令检查你的节点版本。</target>
        </trans-unit>
        <trans-unit id="721cfa87b207181ba93b1b2ddd979fd880ae52e8" translate="yes" xml:space="preserve">
          <source>Chimp will now look in the &lt;code&gt;tests/&lt;/code&gt; directory (otherwise ignored by the Meteor tool) for files in which you define acceptance tests. In the &lt;a href=&quot;https://github.com/meteor/todos&quot;&gt;Todos&lt;/a&gt; example app, we define a simple test that ensures we can click the &amp;ldquo;create list&amp;rdquo; button.</source>
          <target state="translated">现在，黑猩猩会在 &lt;code&gt;tests/&lt;/code&gt; 目录（否则被Meteor工具忽略）中查找在其中定义验收测试的文件。在&lt;a href=&quot;https://github.com/meteor/todos&quot;&gt;Todos&lt;/a&gt;示例应用程序中，我们定义了一个简单的测试，以确保我们可以单击&amp;ldquo;创建列表&amp;rdquo;按钮。</target>
        </trans-unit>
        <trans-unit id="7f7d551d7d137224943bb1abd04be81cace59b4f" translate="yes" xml:space="preserve">
          <source>Choose a template to include dynamically, by name.</source>
          <target state="translated">选择一个模板,按名称动态收录。</target>
        </trans-unit>
        <trans-unit id="743a2d5609a7296d3d734c6e0b1f6d37a8c23170" translate="yes" xml:space="preserve">
          <source>CircleCI</source>
          <target state="translated">CircleCI</target>
        </trans-unit>
        <trans-unit id="ca168f4290290c81d67e372b10384764ad5f46f4" translate="yes" xml:space="preserve">
          <source>Click the Run button:</source>
          <target state="translated">点击 &quot;运行 &quot;按钮。</target>
        </trans-unit>
        <trans-unit id="1bdd79b12628d8c4ec4226ff4207341dcb869ab8" translate="yes" xml:space="preserve">
          <source>Client</source>
          <target state="translated">Client</target>
        </trans-unit>
        <trans-unit id="c03f071761a17bdd40e7eaa461f2bbf24b1a0883" translate="yes" xml:space="preserve">
          <source>Client example:</source>
          <target state="translated">客户实例:</target>
        </trans-unit>
        <trans-unit id="1e667dfcdaa0595e93cc7db4b91f2495a38212dc" translate="yes" xml:space="preserve">
          <source>Client only, optional callback. Called with no arguments on success, or with a single &lt;code&gt;Error&lt;/code&gt; argument on failure.</source>
          <target state="translated">仅客户端，可选回调。在成功时不带任何参数，在失败时仅带一个 &lt;code&gt;Error&lt;/code&gt; 参数。</target>
        </trans-unit>
        <trans-unit id="dcfa9e8a1bee95fd9dfdd56e3c0da9c0b6c8aafe" translate="yes" xml:space="preserve">
          <source>Client-side Routing</source>
          <target state="translated">客户端路由选择</target>
        </trans-unit>
        <trans-unit id="bd78eaea1b1f7ab435a4f79ca9f14176130ea4c0" translate="yes" xml:space="preserve">
          <source>Client-side collections</source>
          <target state="translated">客户端收藏</target>
        </trans-unit>
        <trans-unit id="8d9d9e8ccba5d4e1b7794bbdd7bbdfd0fb41bb8f" translate="yes" xml:space="preserve">
          <source>Client-side data with reactive stores</source>
          <target state="translated">客户端数据与反应式存储</target>
        </trans-unit>
        <trans-unit id="94b3cb40881ce0f8ebb90e991297d4c7e5802a7b" translate="yes" xml:space="preserve">
          <source>Close this DDP connection. The client is free to reconnect, but will receive a different connection with a new &lt;code&gt;id&lt;/code&gt; if it does.</source>
          <target state="translated">关闭此DDP连接。客户端可以自由地重新连接，但是如果连接成功，它将收到具有新 &lt;code&gt;id&lt;/code&gt; 的其他连接。</target>
        </trans-unit>
        <trans-unit id="376da7a254a7a6761e7ef611190aaefe2dd0591a" translate="yes" xml:space="preserve">
          <source>Code Style</source>
          <target state="translated">代码样式</target>
        </trans-unit>
        <trans-unit id="33b97cca9aa797594543b570058a30710afec75b" translate="yes" xml:space="preserve">
          <source>Code that runs on the server can be trusted.</source>
          <target state="translated">运行在服务器上的代码可以被信任。</target>
        </trans-unit>
        <trans-unit id="720c86d8765e68b79396c81bdec768d713ef9f0b" translate="yes" xml:space="preserve">
          <source>Coercing types - converting strings to numbers</source>
          <target state="translated">强制类型--将字符串转换为数字。</target>
        </trans-unit>
        <trans-unit id="082a42c3704ee38739d3dd41511c5b78ea5ca8f3" translate="yes" xml:space="preserve">
          <source>CoffeeScript</source>
          <target state="translated">CoffeeScript</target>
        </trans-unit>
        <trans-unit id="d4f61f01e90103f4ac46961a3d961b8f3700da22" translate="yes" xml:space="preserve">
          <source>CoffeeScript &lt;code&gt;import&lt;/code&gt; syntax is nearly identical to the ES2015 syntax you see above:</source>
          <target state="translated">CoffeeScript &lt;code&gt;import&lt;/code&gt; 语法与您在上面看到的ES2015语法几乎相同：</target>
        </trans-unit>
        <trans-unit id="67faeae921099df3fac1045569dfca67adc63eff" translate="yes" xml:space="preserve">
          <source>CoffeeScript has been a first-class supported language since Meteor&amp;rsquo;s early days. Even though today we recommend ES2015, we still intend to support CoffeeScript fully.</source>
          <target state="translated">自Meteor成立以来，CoffeeScript一直是一流的支持语言。即使今天我们推荐ES2015，我们仍然打算完全支持CoffeeScript。</target>
        </trans-unit>
        <trans-unit id="72f56bc09e4e34590b54d5534f2d1a90269bff7a" translate="yes" xml:space="preserve">
          <source>CoffeeScript is supported on both the client and the server. Files ending with &lt;code&gt;.coffee&lt;/code&gt;, &lt;code&gt;.litcoffee&lt;/code&gt;, or &lt;code&gt;.coffee.md&lt;/code&gt; are automatically compiled to JavaScript.</source>
          <target state="translated">客户端和服务器均支持CoffeeScript。以 &lt;code&gt;.coffee&lt;/code&gt; ， &lt;code&gt;.litcoffee&lt;/code&gt; 或 &lt;code&gt;.coffee.md&lt;/code&gt; 结尾的文件将自动编译为JavaScript。</target>
        </trans-unit>
        <trans-unit id="ceb29c36da17e32b17e7b474786bca251e5f3836" translate="yes" xml:space="preserve">
          <source>Collect route information,</source>
          <target state="translated">收集路线信息;</target>
        </trans-unit>
        <trans-unit id="669a6ad9f45266e612efa73c7935002fa8c4bb1c" translate="yes" xml:space="preserve">
          <source>Collection cursors are not query snapshots. If the database changes between calling &lt;code&gt;Collection.find&lt;/code&gt; and fetching the results of the cursor, or while fetching results from the cursor, those changes may or may not appear in the result set.</source>
          <target state="translated">集合游标不是查询快照。如果数据库在调用 &lt;code&gt;Collection.find&lt;/code&gt; 和获取游标的结果之间发生更改，或者在从游标获取的结果之间发生更改，则这些更改可能会或可能不会出现在结果集中。</target>
        </trans-unit>
        <trans-unit id="ff250a568e1cbcf039fe7459a475468f3a89a3cd" translate="yes" xml:space="preserve">
          <source>Collection helpers</source>
          <target state="translated">采集助手</target>
        </trans-unit>
        <trans-unit id="4bbb632f02fd69807705c0179999c17d35c93b0f" translate="yes" xml:space="preserve">
          <source>Collections</source>
          <target state="translated">Collections</target>
        </trans-unit>
        <trans-unit id="dcfa8c6114f9361a6ecc704fcb6744eda1344b27" translate="yes" xml:space="preserve">
          <source>Collections and Schemas</source>
          <target state="translated">收藏和方案</target>
        </trans-unit>
        <trans-unit id="e402a86f4dd53fc59cceef27abfe2185068af3bf" translate="yes" xml:space="preserve">
          <source>Collections are a very convenient way of storing data on the client side. If you&amp;rsquo;re fetching data using something other than subscriptions, you can put it in a collection manually. Let&amp;rsquo;s look at an example where we have a complex algorithm for calculating average scores from a series of games for a number of players. We don&amp;rsquo;t want to use a publication to load this data because we want to control exactly when it runs, and don&amp;rsquo;t want the data to be cached automatically.</source>
          <target state="translated">集合是在客户端存储数据的一种非常方便的方法。如果要使用订阅以外的其他方式获取数据，则可以手动将其放入集合中。让我们看一个示例，其中我们有一个复杂的算法来为一系列玩家计算一系列游戏的平均得分。我们不想使用发布来加载此数据，因为我们想精确控制发布的时间，也不想自动缓存数据。</target>
        </trans-unit>
        <trans-unit id="75e9fd0879d20f5ea28ac9f6339f4edf160041cb" translate="yes" xml:space="preserve">
          <source>Collections should be named as a plural noun, in &lt;a href=&quot;https://en.wikipedia.org/wiki/PascalCase&quot;&gt;PascalCase&lt;/a&gt;. The name of the collection in the database (the first argument to the collection constructor) should be the same as the name of the JavaScript symbol.</source>
          <target state="translated">在&lt;a href=&quot;https://en.wikipedia.org/wiki/PascalCase&quot;&gt;PascalCase中&lt;/a&gt;，集合应命名为复数名词。数据库中集合的名称（集合构造函数的第一个参数）应与JavaScript符号的名称相同。</target>
        </trans-unit>
        <trans-unit id="1a6fb552c34ef6fa0d21739ee49d60806e344400" translate="yes" xml:space="preserve">
          <source>Colon-delimited list of local package directories to look in, outside your normal application structure, for example: &lt;code&gt;METEOR_PACKAGE_DIRS=&quot;/usr/local/my_packages/&quot;&lt;/code&gt;. Note that this used to be &lt;code&gt;PACKAGE_DIRS&lt;/code&gt; but was changed in Meteor 1.4.2.</source>
          <target state="translated">要在常规应用程序结构之外查找的本地软件包目录的冒号分隔列表，例如： &lt;code&gt;METEOR_PACKAGE_DIRS=&quot;/usr/local/my_packages/&quot;&lt;/code&gt; 。注意，它曾经是 &lt;code&gt;PACKAGE_DIRS&lt;/code&gt; ,但在Meteor 1.4.2中已更改。</target>
        </trans-unit>
        <trans-unit id="e351f98a592773ff09e281b3929f0ae3541cf152" translate="yes" xml:space="preserve">
          <source>Combines and minifies code</source>
          <target state="translated">合并和简化代码</target>
        </trans-unit>
        <trans-unit id="59b0754344014d9d6347724f39bcacbaf47c2e7d" translate="yes" xml:space="preserve">
          <source>Command Line</source>
          <target state="translated">命令行</target>
        </trans-unit>
        <trans-unit id="f6fe35e209171bf42b301a97ecb399ad5a56cfaf" translate="yes" xml:space="preserve">
          <source>Command line</source>
          <target state="translated">命令行</target>
        </trans-unit>
        <trans-unit id="7a487a50a02c2aa3d82c78f98550fda48f40266d" translate="yes" xml:space="preserve">
          <source>Comment Tags</source>
          <target state="translated">如何标记</target>
        </trans-unit>
        <trans-unit id="4200b2af4f0154fc8da839c571749eabc6066cc6" translate="yes" xml:space="preserve">
          <source>Comment tags also come in a &amp;ldquo;block comment&amp;rdquo; form. Block comments may contain &lt;code&gt;{{&lt;/code&gt; and &lt;code&gt;}}&lt;/code&gt;:</source>
          <target state="translated">评论标签也以&amp;ldquo;阻止评论&amp;rdquo;形式出现。块注释可能包含 &lt;code&gt;{{&lt;/code&gt; 和 &lt;code&gt;}}&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="7e37a090cbb51b23da54506f2c1a48ad24a0b9f5" translate="yes" xml:space="preserve">
          <source>Comment tags can be used wherever other template tags are allowed.</source>
          <target state="translated">凡是允许使用其他模板标签的地方都可以使用评论标签。</target>
        </trans-unit>
        <trans-unit id="e802a089bf4853d1bd8b5725522ae5540c063949" translate="yes" xml:space="preserve">
          <source>Comment template tags begin with &lt;code&gt;{{!&lt;/code&gt; and can contain any characters except for &lt;code&gt;}}&lt;/code&gt;. Comments are removed upon compilation and never appear in the compiled template code or the generated HTML.</source>
          <target state="translated">评论模板标签以 &lt;code&gt;{{!&lt;/code&gt; 并且可以包含 &lt;code&gt;}}&lt;/code&gt; 以外的任何字符。注释将在编译时删除，并且永远不会出现在已编译的模板代码或生成的HTML中。</target>
        </trans-unit>
        <trans-unit id="377dd01e05316c6519d98a0022d6976f8e76be87" translate="yes" xml:space="preserve">
          <source>CommonJS</source>
          <target state="translated">CommonJS</target>
        </trans-unit>
        <trans-unit id="bfd58ee3a270f3a931009900e1008d549bbd7453" translate="yes" xml:space="preserve">
          <source>Community</source>
          <target state="translated">Community</target>
        </trans-unit>
        <trans-unit id="b34f90d76d96af2b2b4db7bb6ef129745a0ff3e8" translate="yes" xml:space="preserve">
          <source>Compare in key sensitive order, if supported by the JavaScript implementation. For example, &lt;code&gt;{a: 1, b: 2}&lt;/code&gt; is equal to &lt;code&gt;{b: 2, a: 1}&lt;/code&gt; only when &lt;code&gt;keyOrderSensitive&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;. The default is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果JavaScript实现支持，则按键敏感顺序进行比较。例如，仅当 &lt;code&gt;keyOrderSensitive&lt;/code&gt; 为 &lt;code&gt;false&lt;/code&gt; 时， &lt;code&gt;{a: 1, b: 2}&lt;/code&gt; 等于 &lt;code&gt;{b: 2, a: 1}&lt;/code&gt; 。默认值为 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="080dcc14da806989156d3e164aba8f8435dee785" translate="yes" xml:space="preserve">
          <source>Compile the source files like CoffeeScript, ES2015, Less, or Templates to plain JavaScript and CSS.</source>
          <target state="translated">将CoffeeScript、ES2015、Less或Template等源文件编译成纯JavaScript和CSS。</target>
        </trans-unit>
        <trans-unit id="c19d0256345d495a833e23f84597484c6e661449" translate="yes" xml:space="preserve">
          <source>Compiler plugin - compiles source files (LESS, CoffeeScript) into built output (JS, CSS, asset files, and HTML). Only one compiler plugin can handle a single file extension.</source>
          <target state="translated">编译器插件--将源文件(LESS、CoffeeScript)编译成内置输出(JS、CSS、资产文件和HTML)。只有一个编译器插件可以处理单个文件扩展名。</target>
        </trans-unit>
        <trans-unit id="e1be83a7756a5bb6c9b11d838efbdc2b010f2edd" translate="yes" xml:space="preserve">
          <source>Compilers</source>
          <target state="translated">Compilers</target>
        </trans-unit>
        <trans-unit id="749bc4320b93e86694979983f2b481543f85524a" translate="yes" xml:space="preserve">
          <source>Compilers are programs that take the source files and output JavaScript or CSS. They also can output parts of HTML that is added to the &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; tag and static assets. Examples for the compiler plugins are: CoffeeScript, Babel.js, JSX compilers, Pug templating compiler and others.</source>
          <target state="translated">编译器是接受源文件并输出JavaScript或CSS的程序。他们还可以输出添加到 &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; 标签和静态资产的HTML部分。编译器插件的示例包括：CoffeeScript，Babel.js，JSX编译器，Pug模板化编译器等。</target>
        </trans-unit>
        <trans-unit id="2e2bec0051d11e5f8de6705735e078406d61e630" translate="yes" xml:space="preserve">
          <source>Compiles files with build plugins</source>
          <target state="translated">使用构建插件编译文件</target>
        </trans-unit>
        <trans-unit id="1145eb181bb02197b728270b846cee0cf26795af" translate="yes" xml:space="preserve">
          <source>Complete reference &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array&quot;&gt;在此处&lt;/a&gt;完整参考。</target>
        </trans-unit>
        <trans-unit id="c448f985269e6f3f38c575a546e99e4cf214aa99" translate="yes" xml:space="preserve">
          <source>Complete reference &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object&quot;&gt;在此处&lt;/a&gt;完整参考。</target>
        </trans-unit>
        <trans-unit id="024fc4d8e9d46298cd8abcca533cb670fa8b6ea8" translate="yes" xml:space="preserve">
          <source>Complete reference &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String&quot;&gt;在此处&lt;/a&gt;完整参考。</target>
        </trans-unit>
        <trans-unit id="2557ea94ebac824a62ade4c0fad08100bdbec090" translate="yes" xml:space="preserve">
          <source>Complex authorization</source>
          <target state="translated">复杂的授权</target>
        </trans-unit>
        <trans-unit id="46bd0f418152fae5aabb6c96c32c47c40cbbf4f4" translate="yes" xml:space="preserve">
          <source>Components as pages</source>
          <target state="translated">作为页面的组件</target>
        </trans-unit>
        <trans-unit id="47da6f0838f083d3a01f384d483b468a305c5a2c" translate="yes" xml:space="preserve">
          <source>Compose</source>
          <target state="translated">Compose</target>
        </trans-unit>
        <trans-unit id="ca5e00120498b815c12de59fd45e93f8086a8bfc" translate="yes" xml:space="preserve">
          <source>Composition</source>
          <target state="translated">Composition</target>
        </trans-unit>
        <trans-unit id="32f94bf424b44d11abb2ab4e0c9a7d67282df197" translate="yes" xml:space="preserve">
          <source>Concept: Attack surface</source>
          <target state="translated">概念。攻击面</target>
        </trans-unit>
        <trans-unit id="4aba27fee30095472b5c8c06e3efeb1a366ab3e7" translate="yes" xml:space="preserve">
          <source>Conceptually, the only two things a Dependency can do are gain a dependent and change.</source>
          <target state="translated">从概念上讲,依赖症只有两件事,一是获得依赖,二是改变。</target>
        </trans-unit>
        <trans-unit id="e00f7bc970cb26d42ebab8cd7c98f35560bf1ea7" translate="yes" xml:space="preserve">
          <source>Conditional imports</source>
          <target state="translated">有条件的进口</target>
        </trans-unit>
        <trans-unit id="233efd1cd2b8d3909db019b55e7e59a6ea22da70" translate="yes" xml:space="preserve">
          <source>Configure the behavior of &lt;a href=&quot;#accountsui&quot;&gt;&lt;code&gt;{{&amp;gt; loginButtons}}&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">配置&lt;a href=&quot;#accountsui&quot;&gt; &lt;code&gt;{{&amp;gt; loginButtons}}&lt;/code&gt; &lt;/a&gt;的行为。</target>
        </trans-unit>
        <trans-unit id="0b6e15c47080ba1ee2dbc7666572d547bfc76ecf" translate="yes" xml:space="preserve">
          <source>Configuring OAuth</source>
          <target state="translated">配置OAuth</target>
        </trans-unit>
        <trans-unit id="e5b848f4712c6d649b46f9256556ff0c3ccacf2b" translate="yes" xml:space="preserve">
          <source>Configuring Services</source>
          <target state="translated">配置服务</target>
        </trans-unit>
        <trans-unit id="79280c12e85c304f34d277a9cc3847683b24e0c1" translate="yes" xml:space="preserve">
          <source>Configuring your app</source>
          <target state="translated">配置您的应用程序</target>
        </trans-unit>
        <trans-unit id="2b3b46e5c13b40325d3159d260105d6985927ec6" translate="yes" xml:space="preserve">
          <source>Configuring your server</source>
          <target state="translated">配置您的服务器</target>
        </trans-unit>
        <trans-unit id="a1efb4b38691a090e9c3ca81267ee3d839cd1f6b" translate="yes" xml:space="preserve">
          <source>Connect the device to a WiFi network that allows for communication with the server.</source>
          <target state="translated">将设备连接到允许与服务器通信的WiFi网络。</target>
        </trans-unit>
        <trans-unit id="dad8ba68ace075637cb0c56dbafbd192ae4d34a4" translate="yes" xml:space="preserve">
          <source>Connect to the server of a different Meteor application to subscribe to its document sets and invoke its remote methods.</source>
          <target state="translated">连接到不同Meteor应用程序的服务器,以订阅其文档集并调用其远程方法。</target>
        </trans-unit>
        <trans-unit id="9353137e70aea60618fd49f0efe74491a65dfc91" translate="yes" xml:space="preserve">
          <source>Connecting to the server</source>
          <target state="translated">连接到服务器</target>
        </trans-unit>
        <trans-unit id="8e1045d54948e1647de4048b971035cf144563d7" translate="yes" xml:space="preserve">
          <source>Connecting to your database</source>
          <target state="translated">连接到您的数据库</target>
        </trans-unit>
        <trans-unit id="723aeb02add5abef11633a71ed793b36afe4705c" translate="yes" xml:space="preserve">
          <source>Consider that if you are writing unit tests for your Methods, you would need to test all possible kinds of input to the Method; validating the arguments restricts the space of inputs you need to unit test, reducing the amount of code you need to write overall. It also has the extra bonus of being self-documenting; someone else can come along and read the code to find out what kinds of parameters a Method is looking for.</source>
          <target state="translated">考虑到如果你正在为你的方法编写单元测试,你需要测试所有可能的方法输入;验证参数限制了你需要单元测试的输入空间,减少了你需要编写的整体代码量。它还有一个额外的好处,就是可以自我记录;其他人可以来阅读代码,找出Method正在寻找什么样的参数。</target>
        </trans-unit>
        <trans-unit id="5a6edaeb3a6e28578de4bb2a1a23f33afc4ceb58" translate="yes" xml:space="preserve">
          <source>Consider the following URL pattern, used in the code snippet above:</source>
          <target state="translated">考虑以下URL模式,在上面的代码片段中使用。</target>
        </trans-unit>
        <trans-unit id="f10b6b5bcc62a46b74592f4344b965f5216274f3" translate="yes" xml:space="preserve">
          <source>Consistent ID generation and optimistic UI</source>
          <target state="translated">一致的ID生成和乐观的UI</target>
        </trans-unit>
        <trans-unit id="932d8ac803823978fbdcd35e534e47363328931c" translate="yes" xml:space="preserve">
          <source>Constructor for a Collection</source>
          <target state="translated">集合的构造函数</target>
        </trans-unit>
        <trans-unit id="52ee66c4e6476dbd5b57d37ac0fef86ed0f87c66" translate="yes" xml:space="preserve">
          <source>Constructor for a ReactiveVar, which represents a single reactive variable.</source>
          <target state="translated">一个ReactiveVar的构造函数,它代表一个单一的反应式变量。</target>
        </trans-unit>
        <trans-unit id="00d979369c8ac4537b2512a87cbfc8e3e29cd660" translate="yes" xml:space="preserve">
          <source>Constructor for a Template, which is used to construct Views with particular name and content.</source>
          <target state="translated">模板的构造函数,用于构造具有特定名称和内容的视图。</target>
        </trans-unit>
        <trans-unit id="377e18ece59cc9d2321ce8b8616dde036b5e12dd" translate="yes" xml:space="preserve">
          <source>Constructor for a View, which represents a reactive region of DOM.</source>
          <target state="translated">视图的构造函数,它代表DOM的一个反应区域。</target>
        </trans-unit>
        <trans-unit id="d0f917910ece6b40ffcc0ffcc847ac3775195c43" translate="yes" xml:space="preserve">
          <source>Constructor for the &lt;code&gt;Accounts&lt;/code&gt; namespace on the server.</source>
          <target state="translated">服务器上 &lt;code&gt;Accounts&lt;/code&gt; 命名空间的构造方法。</target>
        </trans-unit>
        <trans-unit id="a9d4a1525d591e95e8386f7176a28b174bb99765" translate="yes" xml:space="preserve">
          <source>Constructor for the &lt;code&gt;Accounts&lt;/code&gt; object on the client.</source>
          <target state="translated">客户端上 &lt;code&gt;Accounts&lt;/code&gt; 对象的构造方法。</target>
        </trans-unit>
        <trans-unit id="fd796b6d2dc6a6a4c51763548afa8b332d8368a7" translate="yes" xml:space="preserve">
          <source>Constructs a View that renders &lt;code&gt;contentFunc&lt;/code&gt; for each item in a sequence.</source>
          <target state="translated">构造一个为序列中的每个项目呈现 &lt;code&gt;contentFunc&lt;/code&gt; 的View 。</target>
        </trans-unit>
        <trans-unit id="3dd64ffaaad3baeef8a955726c62e26c0081faec" translate="yes" xml:space="preserve">
          <source>Constructs a View that renders content conditionally.</source>
          <target state="translated">构造一个有条件渲染内容的视图。</target>
        </trans-unit>
        <trans-unit id="ad781402a6327e1c97d08ca7759b4b84a6e8fe6b" translate="yes" xml:space="preserve">
          <source>Constructs a View that renders content with a data context.</source>
          <target state="translated">构造一个视图,通过数据上下文来渲染内容。</target>
        </trans-unit>
        <trans-unit id="2a65f8a297c79d7215f14b7b9156a139ce045f53" translate="yes" xml:space="preserve">
          <source>Constructs and returns an unrendered View object. This method is invoked by Meteor whenever the template is used, such as by &lt;code&gt;Blaze.render&lt;/code&gt; or by &lt;code&gt;{{&amp;gt; foo}}&lt;/code&gt; where &lt;code&gt;foo&lt;/code&gt; resolves to a Template object.</source>
          <target state="translated">构造并返回未渲染的View对象。每当使用模板时，流星都会调用此方法，例如 &lt;code&gt;Blaze.render&lt;/code&gt; 或 &lt;code&gt;{{&amp;gt; foo}}&lt;/code&gt; ，其中 &lt;code&gt;foo&lt;/code&gt; 解析为Template对象。</target>
        </trans-unit>
        <trans-unit id="1f0b9e7737dbe888e3c4a34fd9fec25e884beb80" translate="yes" xml:space="preserve">
          <source>Content Security Policy (CSP)</source>
          <target state="translated">内容安全策略(CSP)</target>
        </trans-unit>
        <trans-unit id="7698d008d36e29b0f5525fef4134876a16472bfc" translate="yes" xml:space="preserve">
          <source>Contents of the result object:</source>
          <target state="translated">结果对象的内容。</target>
        </trans-unit>
        <trans-unit id="7a302c3f9cf2b3cec42c41ee9b6ddfb04d9516a9" translate="yes" xml:space="preserve">
          <source>Continuous Integration</source>
          <target state="translated">持续集成</target>
        </trans-unit>
        <trans-unit id="3f3ad4e436b78ea19b3bfb0e48de0c98fff0f0f5" translate="yes" xml:space="preserve">
          <source>Continuous backups &amp;amp; Automated snapshots</source>
          <target state="translated">连续备份和自动快照</target>
        </trans-unit>
        <trans-unit id="9b3761a81e7f50b5a743fdcfcdec481a981d43df" translate="yes" xml:space="preserve">
          <source>Continuous deployment</source>
          <target state="translated">连续部署</target>
        </trans-unit>
        <trans-unit id="256036652dc86f036ffa56a2d5ed9e82cf0bbf80" translate="yes" xml:space="preserve">
          <source>Continuous deployment refers to the process of deploying an application via a continuous integration tool, usually when some condition is reached (such as a git push to the &lt;code&gt;master&lt;/code&gt; branch). You can use CD to deploy to Galaxy, as Nate Strauser explains in a &lt;a href=&quot;https://medium.com/@natestrauser/migrating-meteor-apps-from-modulus-to-galaxy-with-continuous-deployment-from-codeship-aed2044cabd9#.lvio4sh4a&quot;&gt;blog post on the subject&lt;/a&gt;.</source>
          <target state="translated">连续部署是指通常在达到某些条件（例如将git push推送到 &lt;code&gt;master&lt;/code&gt; 分支）时，通过连续集成工具部署应用程序的过程。如Nate Strauser在&lt;a href=&quot;https://medium.com/@natestrauser/migrating-meteor-apps-from-modulus-to-galaxy-with-continuous-deployment-from-codeship-aed2044cabd9#.lvio4sh4a&quot;&gt;有关该主题&lt;/a&gt;的博客文章中所述，您可以使用CD部署到Galaxy 。</target>
        </trans-unit>
        <trans-unit id="235203771850590c4a28b67872d3aa9e6e0ce46f" translate="yes" xml:space="preserve">
          <source>Continuous integration testing is the process of running tests on every commit of your project.</source>
          <target state="translated">持续集成测试是在项目的每次提交中运行测试的过程。</target>
        </trans-unit>
        <trans-unit id="2d82a4b27a4b305690d5ac612046a955778a9fa5" translate="yes" xml:space="preserve">
          <source>Contributing</source>
          <target state="translated">Contributing</target>
        </trans-unit>
        <trans-unit id="cde2421ad27043d8c65b4ec14d2b94886b718d5e" translate="yes" xml:space="preserve">
          <source>Controlling compatibility version</source>
          <target state="translated">控制兼容性版本</target>
        </trans-unit>
        <trans-unit id="f4d0105e4bbeab74af84f0611a50613227f104d7" translate="yes" xml:space="preserve">
          <source>Controlling re-rendering</source>
          <target state="translated">控制再渲染</target>
        </trans-unit>
        <trans-unit id="c5c62e142141ae1622b3503cc45566779bedff3c" translate="yes" xml:space="preserve">
          <source>Cookies are deliberately excluded from the headers as they are a security risk for this transport. For details and alternatives, see the &lt;a href=&quot;https://github.com/sockjs/sockjs-node#authorisation&quot;&gt;SockJS documentation&lt;/a&gt;.</source>
          <target state="translated">有意将Cookie从标头中排除，因为它们对此传输存在安全风险。有关详细信息和替代方法，请参见&lt;a href=&quot;https://github.com/sockjs/sockjs-node#authorisation&quot;&gt;SockJS文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e1fc898f5208ffd6783bee8eced80f3820e5d38e" translate="yes" xml:space="preserve">
          <source>Cordova also opens up access to certain native device features through a &lt;a href=&quot;#cordova-plugins&quot;&gt;plugin architecture&lt;/a&gt;. Plugins allow you to use features not usually available to web apps, such as accessing the device camera or the local file system, interact with barcode or NFC readers, etc.</source>
          <target state="translated">Cordova还通过&lt;a href=&quot;#cordova-plugins&quot;&gt;插件体系结构&lt;/a&gt;开放了对某些本机设备功能的访问。插件使您可以使用Web应用程序通常不具备的功能，例如访问设备摄像头或本地文件系统，与条形码或NFC读取器进行交互等。</target>
        </trans-unit>
        <trans-unit id="95520004e9dd48b2111df66ddc2d6032167626db" translate="yes" xml:space="preserve">
          <source>Cordova apps don&amp;rsquo;t load web content over the network, but rely on locally stored HTML, CSS, JavaScript code and other assets. While Cordova by default uses &lt;code&gt;file://&lt;/code&gt; URLs to load the app, Meteor includes an integrated file serving mechanism on the device to support both bundling the initial assets and incrementally updating your app through &lt;a href=&quot;#hot-code-push&quot;&gt;hot code push&lt;/a&gt;. This means your app will be served from &lt;code&gt;http://localhost:&amp;lt;port&amp;gt;&lt;/code&gt;, which also has the benefit that web views consider it a &lt;a href=&quot;https://www.chromium.org/Home/chromium-security/prefer-secure-origins-for-powerful-new-features&quot;&gt;secure origin&lt;/a&gt; and won&amp;rsquo;t block any sensitive features (which they increasingly do for &lt;code&gt;file://&lt;/code&gt; URLs).</source>
          <target state="translated">Cordova应用程序不会通过网络加载Web内容，而是依赖于本地存储的HTML，CSS，JavaScript代码和其他资产。默认情况下，Cordova使用 &lt;code&gt;file://&lt;/code&gt; URL加载应用程序，而Meteor在设备上包括集成的文件服务机制，以支持捆绑初始资产并通过&lt;a href=&quot;#hot-code-push&quot;&gt;热代码推&lt;/a&gt;送来增量更新应用程序。这意味着您的应用将从 &lt;code&gt;http://localhost:&amp;lt;port&amp;gt;&lt;/code&gt; 提供服务，这还具有Web视图认为它是&lt;a href=&quot;https://www.chromium.org/Home/chromium-security/prefer-secure-origins-for-powerful-new-features&quot;&gt;安全来源&lt;/a&gt;的优点，并且不会阻止任何敏感功能（它们越来越多地用于 &lt;code&gt;file://&lt;/code&gt; URL ）。</target>
        </trans-unit>
        <trans-unit id="8ed2d7952fa99d7583dcfd380cc5892f3b1f2107" translate="yes" xml:space="preserve">
          <source>Cordova apps run in a web view. A web view is basically a browser without the browser UI. Browser engines differ in their underlying implementation and in what web standards they support. As a result, what web view your app runs on can have a huge impact on your app&amp;rsquo;s performance and on the features you get to use. (If you want to know what features are supported on what browsers and versions, &lt;a href=&quot;http://caniuse.com&quot;&gt;caniuse.com&lt;/a&gt; is a great resource.)</source>
          <target state="translated">Cordova应用程序在Web视图中运行。Web视图本质上是没有浏览器UI的浏览器。浏览器引擎的底层实现及其支持的Web标准有所不同。因此，运行您的应用程序的Web视图可能会对应用程序的性能和使用的功能产生巨大影响。（如果您想知道哪些浏览器和版本支持哪些功能，&lt;a href=&quot;http://caniuse.com&quot;&gt;caniuse.com&lt;/a&gt;是一个很好的资源。）</target>
        </trans-unit>
        <trans-unit id="5ac4ab8855e413302ae905ef8bd65a7a027cfc45" translate="yes" xml:space="preserve">
          <source>Cordova comes with a plugin architecture that opens up access to features not usually available to web apps. Plugins are installable add-ons that contain both JavaScript and native code, which allows them to translate calls from your web app to platform-specific APIs.</source>
          <target state="translated">Cordova自带插件架构,可开放对Web应用程序通常无法使用的功能的访问。插件是可安装的附加组件,包含JavaScript和本地代码,这使得它们可以将Web应用程序的调用翻译成平台特定的API。</target>
        </trans-unit>
        <trans-unit id="422acefacba2bd041f45e0552baf9b671173637c" translate="yes" xml:space="preserve">
          <source>Cordova controls access to external domains through a whitelisting mechanism, which is implemented as &lt;a href=&quot;https://github.com/apache/cordova-plugin-whitelist&quot;&gt;&lt;code&gt;cordova-plugin-whitelist&lt;/code&gt;&lt;/a&gt; in the version of Cordova we bundle.</source>
          <target state="translated">Cordova通过白名单机制控制对外部域的访问，该机制在我们捆绑的Cordova版本中以&lt;a href=&quot;https://github.com/apache/cordova-plugin-whitelist&quot;&gt; &lt;code&gt;cordova-plugin-whitelist&lt;/code&gt; &lt;/a&gt;实现。</target>
        </trans-unit>
        <trans-unit id="a7c20d67a4f53238b39d03f8b5fbc53501b981f3" translate="yes" xml:space="preserve">
          <source>Cordova downloads plugins from npm, and caches them (in &lt;code&gt;~/.cordova/lib/npm_cache&lt;/code&gt;) so they don&amp;rsquo;t have to be downloaded repeatedly if you rebuild or use them again in another project.</source>
          <target state="translated">Cordova从npm下载插件，并将其缓存（在 &lt;code&gt;~/.cordova/lib/npm_cache&lt;/code&gt; ），因此，如果您在其他项目中重建或再次使用它们，则不必重复下载它们。</target>
        </trans-unit>
        <trans-unit id="e61fd23044183aebdb54006c598abafc9b32b925" translate="yes" xml:space="preserve">
          <source>Cordova plugins</source>
          <target state="translated">科尔多瓦插件</target>
        </trans-unit>
        <trans-unit id="d8a6d036fb15ce328b75158eab2ca3ea694d8683" translate="yes" xml:space="preserve">
          <source>Cordova will detect an Android SDK installed in various standard locations automatically, but in order to use tools like &lt;code&gt;android&lt;/code&gt; or &lt;code&gt;adb&lt;/code&gt; from the terminal, you will have to make some changes to your environment.</source>
          <target state="translated">Cordova会自动检测安装在各个标准位置的Android SDK，但是要在终端上使用 &lt;code&gt;android&lt;/code&gt; 或 &lt;code&gt;adb&lt;/code&gt; 之类的工具，您将必须对环境进行一些更改。</target>
        </trans-unit>
        <trans-unit id="574d21fb216d6ce88c083cde827eb853ea6888c5" translate="yes" xml:space="preserve">
          <source>Cordova.depends()</source>
          <target state="translated">Cordova.depends()</target>
        </trans-unit>
        <trans-unit id="68836c550ee20fae0e06b2994e76a40348d2fc30" translate="yes" xml:space="preserve">
          <source>Core</source>
          <target state="translated">Core</target>
        </trans-unit>
        <trans-unit id="064de31158d289e52c24ffef7f7f7541cb6b5a0b" translate="yes" xml:space="preserve">
          <source>Cost and pricing granularity</source>
          <target state="translated">成本和定价颗粒度</target>
        </trans-unit>
        <trans-unit id="3c3a10a35511350e46910c5afa535839f36b5be8" translate="yes" xml:space="preserve">
          <source>Countless hours have been spent by developers throughout the years arguing over single vs. double quotes, where to put brackets, how many spaces to type, and all kinds of other cosmetic code style questions. These are all questions that have at best a tangential relationship to code quality, but are very easy to have opinions about because they are so visual.</source>
          <target state="translated">多年来,开发者们花费了无数的时间来争论单引号和双引号,括号放在哪里,打字要有多少个空格,以及其他各种外观上的代码风格问题。这些问题充其量都是和代码质量有切身关系的问题,但因为太直观,所以很容易产生意见。</target>
        </trans-unit>
        <trans-unit id="fb2b40a4fad0e799200e07b261e6b08141df8b46" translate="yes" xml:space="preserve">
          <source>Create a Mongo-style &lt;code&gt;ObjectID&lt;/code&gt;. If you don't specify a &lt;code&gt;hexString&lt;/code&gt;, the &lt;code&gt;ObjectID&lt;/code&gt; will generated randomly (not using MongoDB's ID construction rules).</source>
          <target state="translated">创建一个Mongo风格的 &lt;code&gt;ObjectID&lt;/code&gt; 。如果您未指定 &lt;code&gt;hexString&lt;/code&gt; ，则 &lt;code&gt;ObjectID&lt;/code&gt; 将随机生成（不使用MongoDB的ID构造规则）。</target>
        </trans-unit>
        <trans-unit id="413850b1601d8fde96300f7d85b1df2c32964765" translate="yes" xml:space="preserve">
          <source>Create a new Meteor project. By default, makes a subdirectory named &lt;em&gt;name&lt;/em&gt; and copies in the template app. You can pass an absolute or relative path.</source>
          <target state="translated">创建一个新的Meteor项目。默认情况下，创建一个名为&lt;em&gt;name&lt;/em&gt;的子目录并在模板应用程序中进行复制。您可以传递绝对或相对路径。</target>
        </trans-unit>
        <trans-unit id="0a44e6689991edf775b211e7f8aa0eb59d5bbf24" translate="yes" xml:space="preserve">
          <source>Create a new user.</source>
          <target state="translated">创建一个新用户。</target>
        </trans-unit>
        <trans-unit id="be32b728b587a4f841d77b6ffcb140c394d5e35d" translate="yes" xml:space="preserve">
          <source>Create an HTTPS URL.</source>
          <target state="translated">创建一个HTTPS URL。</target>
        </trans-unit>
        <trans-unit id="f7ab8c59f46eee0540937e72a280eeacce495f82" translate="yes" xml:space="preserve">
          <source>Creates a basic, empty project.</source>
          <target state="translated">创建一个基本的、空的项目。</target>
        </trans-unit>
        <trans-unit id="426c1dd3586c661c60d0c7a74deb18de14ca45f1" translate="yes" xml:space="preserve">
          <source>Creates a more complete, imports-based project which closely matches the &lt;a href=&quot;https://guide.meteor.com/structure.html#javascript-structure&quot;&gt;file structure&lt;/a&gt; recommended by the &lt;a href=&quot;https://guide.meteor.com/&quot;&gt;Meteor Guide&lt;/a&gt;</source>
          <target state="translated">创建一个更完整的基于导入的项目，该项目与《&lt;a href=&quot;https://guide.meteor.com/&quot;&gt;流星指南》&lt;/a&gt;建议的&lt;a href=&quot;https://guide.meteor.com/structure.html#javascript-structure&quot;&gt;文件结构&lt;/a&gt;紧密匹配</target>
        </trans-unit>
        <trans-unit id="f7e1d6907791554cd7fe1ccb0fafed241e2e59cc" translate="yes" xml:space="preserve">
          <source>Creates a new package. If used in an existing app, this command will create a package in the packages directory.</source>
          <target state="translated">创建一个新包。如果在现有的应用程序中使用,该命令将在包目录下创建一个包。</target>
        </trans-unit>
        <trans-unit id="9863659c723fd50f285a94d52e69c6bba3941019" translate="yes" xml:space="preserve">
          <source>Creating data</source>
          <target state="translated">创建数据</target>
        </trans-unit>
        <trans-unit id="18fc2f97599c6123f77e230a7df453afa9545e6c" translate="yes" xml:space="preserve">
          <source>Cross-Origin Resource Sharing (CORS)</source>
          <target state="translated">跨源资源共享(CORS)</target>
        </trans-unit>
        <trans-unit id="cd15659ed388bc59afe708d85ce4286643a25f54" translate="yes" xml:space="preserve">
          <source>Current route information</source>
          <target state="translated">当前路线信息</target>
        </trans-unit>
        <trans-unit id="0ddad5326875afa568f2706cd94d772f83824eb5" translate="yes" xml:space="preserve">
          <source>Currently logged in user</source>
          <target state="translated">当前登录用户</target>
        </trans-unit>
        <trans-unit id="de1bf6bc03fd7a6e1f3166ff0a91ba5585318ae0" translate="yes" xml:space="preserve">
          <source>Currently when a client reconnects to the server (such as after temporarily losing its Internet connection), it will get a new connection each time. The &lt;code&gt;onConnection&lt;/code&gt; callbacks will be called again, and the new connection will have a new connection &lt;code&gt;id&lt;/code&gt;.</source>
          <target state="translated">当前，当客户端重新连接到服务器时（例如在暂时断开其Internet连接之后），它将每次都获得一个新的连接。该 &lt;code&gt;onConnection&lt;/code&gt; 回调将会再次调用，并且新的连接将有一个新的连接 &lt;code&gt;id&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="146d68e37b24bdd082c9dcd651baabac3be8b5ce" translate="yes" xml:space="preserve">
          <source>Currently, Meteor doesn&amp;rsquo;t have a separate build step for post-processing CSS, so the only way to integrate it is to build it into the minifier. Thankfully, there is a community package that has integrated PostCSS with plugin support into a replacement for Meteor&amp;rsquo;s standard minification package.</source>
          <target state="translated">目前，Meteor尚没有用于CSS后期处理的单独构建步骤，因此集成它的唯一方法是将其构建到压缩程序中。值得庆幸的是，有一个社区软件包已将带有插件支持的PostCSS集成到Meteor的标准缩小软件包中。</target>
        </trans-unit>
        <trans-unit id="097240b1aed59d7c6e3e5679866b8cf0765949a3" translate="yes" xml:space="preserve">
          <source>Currently, it is not possible to import &lt;code&gt;Assets&lt;/code&gt; as an ES6 module. Any of the &lt;code&gt;Assets&lt;/code&gt; methods below can simply be called directly in any Meteor server code.</source>
          <target state="translated">当前，无法将 &lt;code&gt;Assets&lt;/code&gt; 作为ES6模块导入。下面的任何 &lt;code&gt;Assets&lt;/code&gt; 方法都可以直接在任何Meteor服务器代码中直接调用。</target>
        </trans-unit>
        <trans-unit id="bf10b0a1ff741c4a70ff7a91f0f39a3806d0d622" translate="yes" xml:space="preserve">
          <source>Currently, the supported architectures for Meteor are 32-bit Linux, 64-bit Linux and Mac OS. Galaxy&amp;rsquo;s servers run 64-bit Linux.</source>
          <target state="translated">当前，Meteor支持的体系结构是32位Linux，64位Linux和Mac OS。Galaxy的服务器运行64位Linux。</target>
        </trans-unit>
        <trans-unit id="b18879aa1570baa217fccf76c26b1a6cea058db3" translate="yes" xml:space="preserve">
          <source>Currently, underscore is included in all projects, as the Meteor core depends on it. _ is available in the global namespace on both the client and the server even if you do not include this package. However if you do use underscore in your application, you should still add the package as we will remove the default underscore in the future.</source>
          <target state="translated">目前,所有的项目中都包含了下划线,因为Meteor核心依赖于它。即使你不包含这个包,_在客户端和服务器的全局命名空间中都是可用的。然而,如果你在你的应用程序中使用下划线,你仍然应该添加这个包,因为我们将在未来删除默认的下划线。</target>
        </trans-unit>
        <trans-unit id="351f29317ee6ca678183d6b909e465205a303f2a" translate="yes" xml:space="preserve">
          <source>Currently, using Meteor Up with Meteor 1.4 requires &lt;code&gt;kadirahq/mup&lt;/code&gt; (still in development) and a special docker image with the correct Node version.</source>
          <target state="translated">当前，在Meteor 1.4上使用Meteor Up需要 &lt;code&gt;kadirahq/mup&lt;/code&gt; （仍在开发中）和具有正确Node版本的特殊docker映像。</target>
        </trans-unit>
        <trans-unit id="403e58ac648f09170c7590415b63b480ea0460cb" translate="yes" xml:space="preserve">
          <source>Currently, when multiple subscriptions publish the same document &lt;em&gt;only the top level fields&lt;/em&gt; are compared during the merge. This means that if the documents include different sub-fields of the same top level field, not all of them will be available on the client. We hope to lift this restriction in a future release.</source>
          <target state="translated">当前，当多个订阅发布同一文档时，在合并期间&lt;em&gt;仅比较顶级字段&lt;/em&gt;。这意味着，如果文档包含同一顶级字段的不同子字段，则并非所有这些子字段在客户端上都可用。我们希望在将来的版本中取消此限制。</target>
        </trans-unit>
        <trans-unit id="f4d2f91040c93130ddcca14955ef2593c9e0caed" translate="yes" xml:space="preserve">
          <source>Cursors</source>
          <target state="translated">Cursors</target>
        </trans-unit>
        <trans-unit id="7e1c26c6b50d9031944321dd0a9d33930759744e" translate="yes" xml:space="preserve">
          <source>Cursors are a reactive data source. On the client, the first time you retrieve a cursor&amp;rsquo;s documents with &lt;code&gt;fetch&lt;/code&gt;, &lt;code&gt;map&lt;/code&gt;, or &lt;code&gt;forEach&lt;/code&gt; inside a reactive computation (eg, a template or &lt;a href=&quot;#tracker_autorun&quot;&gt;&lt;code&gt;autorun&lt;/code&gt;&lt;/a&gt;), Meteor will register a dependency on the underlying data. Any change to the collection that changes the documents in a cursor will trigger a recomputation. To disable this behavior, pass &lt;code&gt;{reactive: false}&lt;/code&gt; as an option to &lt;code&gt;find&lt;/code&gt;.</source>
          <target state="translated">游标是一种反应性数据源。在客户端上，您第一次在反应式计算（例如，模板或&lt;a href=&quot;#tracker_autorun&quot;&gt; &lt;code&gt;autorun&lt;/code&gt; &lt;/a&gt;）中使用 &lt;code&gt;fetch&lt;/code&gt; ， &lt;code&gt;map&lt;/code&gt; 或 &lt;code&gt;forEach&lt;/code&gt; 检索游标的文档时，Meteor将注册对基础数据的依赖性。对集合的任何更改都会更改光标中的文档，这将触发重新计算。要禁用此行为，请传递 &lt;code&gt;{reactive: false}&lt;/code&gt; 作为 &lt;code&gt;find&lt;/code&gt; 的选项。</target>
        </trans-unit>
        <trans-unit id="bd89b0ccb68aab58b1cc7a82d27a01f4c0aefff7" translate="yes" xml:space="preserve">
          <source>Custom Block Helpers</source>
          <target state="translated">自定义块助手</target>
        </trans-unit>
        <trans-unit id="86c01e0d4a261299067911c1e74281f149aeae99" translate="yes" xml:space="preserve">
          <source>Custom data about users</source>
          <target state="translated">关于用户的自定义数据</target>
        </trans-unit>
        <trans-unit id="750e15faeddc60df053265f4c826df2467c0e5d1" translate="yes" xml:space="preserve">
          <source>Custom deployment</source>
          <target state="translated">自定义部署</target>
        </trans-unit>
        <trans-unit id="78f0fa9ee3d077f63cf46d96a2d4077bc5e4ba51" translate="yes" xml:space="preserve">
          <source>Custom publications with the low level API</source>
          <target state="translated">有低级API的定制出版物</target>
        </trans-unit>
        <trans-unit id="bfec51f1d3204ddda9faaf09b58dfbc316772f95" translate="yes" xml:space="preserve">
          <source>Custom rules can be added by calling &lt;code&gt;DDPRateLimiter.addRule&lt;/code&gt;. The rate limiter is called on every method and subscription invocation.</source>
          <target state="translated">可以通过调用 &lt;code&gt;DDPRateLimiter.addRule&lt;/code&gt; 添加自定义规则。速率限制器在每个方法和订阅调用上都被调用。</target>
        </trans-unit>
        <trans-unit id="dc0817b6fa19e833be021b11bd08b6f37f2c5341" translate="yes" xml:space="preserve">
          <source>Customizable UI: useraccounts</source>
          <target state="translated">可定制的用户界面:用户账户</target>
        </trans-unit>
        <trans-unit id="9cff9630ae90cefccf3161716f1f70f3dc102ff1" translate="yes" xml:space="preserve">
          <source>Customize new user creation.</source>
          <target state="translated">自定义新用户创建。</target>
        </trans-unit>
        <trans-unit id="88dadb07022c2ddeaf066afc9c9bb9e16320f6e2" translate="yes" xml:space="preserve">
          <source>Customize rate limiting for methods and subscriptions.</source>
          <target state="translated">自定义方法和订阅的速率限制。</target>
        </trans-unit>
        <trans-unit id="794441e451f4b7c8657e4e9b68827fdb86ab53e3" translate="yes" xml:space="preserve">
          <source>Customizing accounts emails</source>
          <target state="translated">自定义账户邮件</target>
        </trans-unit>
        <trans-unit id="a0f0b55c7bd24cde94bca6e55f2601ae0dea6cb9" translate="yes" xml:space="preserve">
          <source>Customizing routes</source>
          <target state="translated">自定义路线</target>
        </trans-unit>
        <trans-unit id="753b9bccb6917794c867e05e0b86549759598475" translate="yes" xml:space="preserve">
          <source>Customizing templates</source>
          <target state="translated">自定义模板</target>
        </trans-unit>
        <trans-unit id="0d2ca62af3bb6abbbef1f0b7a04c04714b93574b" translate="yes" xml:space="preserve">
          <source>DDP is Meteor&amp;rsquo;s built-in pub/sub and RPC protocol. You can read about how to use it in the &lt;a href=&quot;data-loading&quot;&gt;Data Loading&lt;/a&gt; and &lt;a href=&quot;methods&quot;&gt;Methods&lt;/a&gt; articles. In addition to the concepts of data loading and method calls, DDP has one more feature built in - the idea of a &lt;code&gt;userId&lt;/code&gt; field on a connection. This is the place where login state is tracked, regardless of which accounts UI package or login service you are using.</source>
          <target state="translated">DDP是Meteor的内置pub / sub和RPC协议。您可以在&amp;ldquo; &lt;a href=&quot;data-loading&quot;&gt;数据加载&lt;/a&gt;和&lt;a href=&quot;methods&quot;&gt;方法&amp;rdquo;&lt;/a&gt;文章中阅读有关如何使用它的信息。除了数据加载和方法调用的概念外，DDP还内置了另一个功能- 连接上的 &lt;code&gt;userId&lt;/code&gt; 字段的概念。不管您使用哪个帐户UI包或登录服务，都在这里跟踪登录状态。</target>
        </trans-unit>
        <trans-unit id="67fea6a93d69d9b8f23ccf69b16ac6b2d1dedb19" translate="yes" xml:space="preserve">
          <source>DDP uses three main messages to communicate changes in the data for a publication: the &lt;code&gt;added&lt;/code&gt;, &lt;code&gt;changed&lt;/code&gt; and &lt;code&gt;removed&lt;/code&gt; messages. So, we can similarly do the same for a publication:</source>
          <target state="translated">DDP使用三种主要消息来传达发布数据的更改： &lt;code&gt;added&lt;/code&gt; ， &lt;code&gt;changed&lt;/code&gt; 和 &lt;code&gt;removed&lt;/code&gt; 消息。因此，我们可以类似地对出版物执行相同的操作：</target>
        </trans-unit>
        <trans-unit id="e6cc860523e90ae377ba02191ae831ce6e476a02" translate="yes" xml:space="preserve">
          <source>DDP, Meteor&amp;rsquo;s data publication protocol, only knows how to resolve conflicts in top-level fields. This means that you can&amp;rsquo;t have one publication send &lt;code&gt;services.facebook.first_name&lt;/code&gt; and another send &lt;code&gt;services.facebook.locale&lt;/code&gt; - one of them will win, and only one of the fields will actually be available on the client. The best way to fix this is to denormalize the data you want onto custom top-level fields, as described in the section about &lt;a href=&quot;#custom-user-data&quot;&gt;custom user data&lt;/a&gt;.</source>
          <target state="translated">流星的数据发布协议DDP仅知道如何解决顶级字段中的冲突。这意味着，你不能有一个刊物发送 &lt;code&gt;services.facebook.first_name&lt;/code&gt; 和另一个发送 &lt;code&gt;services.facebook.locale&lt;/code&gt; -其中一人将获胜，只有领域之一将实际获得的客户端上。解决此问题的最佳方法是将所需数据反规范化到自定义顶级字段上，如有关&lt;a href=&quot;#custom-user-data&quot;&gt;自定义用户数据&lt;/a&gt;的部分所述。</target>
        </trans-unit>
        <trans-unit id="635c7e23cabe8f1eb413d4bd4f3a608f21c7784f" translate="yes" xml:space="preserve">
          <source>DDP.connect()</source>
          <target state="translated">DDP.connect()</target>
        </trans-unit>
        <trans-unit id="9ad5b2b7037988b6aaa513d5e407ff741ac3ce32" translate="yes" xml:space="preserve">
          <source>DDP.onReconnect()</source>
          <target state="translated">DDP.onReconnect()</target>
        </trans-unit>
        <trans-unit id="8d2b707ca4de4180c159e6162d5fafa2c8ecf46b" translate="yes" xml:space="preserve">
          <source>DDPRateLimiter</source>
          <target state="translated">DDPRateLimiter</target>
        </trans-unit>
        <trans-unit id="e5a875174a8fe0707ceda1e17b505c96cfe84cba" translate="yes" xml:space="preserve">
          <source>DDPRateLimiter.addRule()</source>
          <target state="translated">DDPRateLimiter.addRule()</target>
        </trans-unit>
        <trans-unit id="26ae78c99346a2e0b6b2edefc9368832b89ca0af" translate="yes" xml:space="preserve">
          <source>DDPRateLimiter.removeRule()</source>
          <target state="translated">DDPRateLimiter.removeRule()</target>
        </trans-unit>
        <trans-unit id="49c8b8226ea88d212444cf00d1a41c86c6f054d8" translate="yes" xml:space="preserve">
          <source>DDPRateLimiter.setErrorMessage()</source>
          <target state="translated">DDPRateLimiter.setErrorMessage()</target>
        </trans-unit>
        <trans-unit id="8b7361d01d2829770d9129ddd535662ecf4b11d9" translate="yes" xml:space="preserve">
          <source>DISABLE_WEBSOCKETS</source>
          <target state="translated">DISABLE_WEBSOCKETS</target>
        </trans-unit>
        <trans-unit id="ed74c822dfb7410b7863a3a5063ccce3b81f4268" translate="yes" xml:space="preserve">
          <source>Data contexts and lookup</source>
          <target state="translated">数据上下文和查询</target>
        </trans-unit>
        <trans-unit id="1302cd909a4e57a99fc3e661f171864aac0addda" translate="yes" xml:space="preserve">
          <source>Dealing with every possible MongoDB operator is difficult to get right, as MongoDB has a rich modifier language. Instead we focus on just dealing with the modifiers we know we&amp;rsquo;ll see in our app. If this gets too tricky, then moving the hooks for the logic into the Methods that actually make the relevant modifications could be sensible (although you need to be diligent to ensure you do it in &lt;em&gt;all&lt;/em&gt; the relevant places, both now and as the app changes in the future).</source>
          <target state="translated">由于MongoDB具有丰富的修饰语，因此很难与每个可能的MongoDB运算符打交道。相反，我们专注于处理我们将在应用程序中看到的修饰符。如果这太棘手，那么将逻辑的钩子移到实际进行相关修改的方法中可能是明智的（尽管您需要勤奋地确保自己在&lt;em&gt;所有&lt;/em&gt;相关位置（无论是现在还是随着应用程序更改）都这样做在将来）。</target>
        </trans-unit>
        <trans-unit id="7d09616ed87ed67609e87fa066491e0ab7795cb1" translate="yes" xml:space="preserve">
          <source>Debugging on Android with Chrome</source>
          <target state="translated">在Android上使用Chrome进行调试</target>
        </trans-unit>
        <trans-unit id="8aa746c3b9fc4592c5dd7d5ce3adda61f7923c59" translate="yes" xml:space="preserve">
          <source>Debugging on iOS with Safari</source>
          <target state="translated">在iOS上使用Safari进行调试</target>
        </trans-unit>
        <trans-unit id="3d13469e63908f89f7ba57d74624b2fa61521522" translate="yes" xml:space="preserve">
          <source>Declare event handlers for instances of this template. Multiple calls add new event handlers in addition to the existing ones.</source>
          <target state="translated">为该模板的实例声明事件处理程序。多次调用除了现有的事件处理程序外,还可以添加新的事件处理程序。</target>
        </trans-unit>
        <trans-unit id="f839cdf1f83ccf5189a093a29c5f5713ec903849" translate="yes" xml:space="preserve">
          <source>Declares that the current computation (or &lt;code&gt;fromComputation&lt;/code&gt; if given) depends on &lt;code&gt;dependency&lt;/code&gt;. The computation will be invalidated the next time &lt;code&gt;dependency&lt;/code&gt; changes.</source>
          <target state="translated">声明当前的计算（或 &lt;code&gt;fromComputation&lt;/code&gt; (如果给定的话））取决于 &lt;code&gt;dependency&lt;/code&gt; 。下次 &lt;code&gt;dependency&lt;/code&gt; 更改时，计算将无效。</target>
        </trans-unit>
        <trans-unit id="d58720c1f33dca7d82fe3bb498933b6c872b7767" translate="yes" xml:space="preserve">
          <source>Deeper understanding</source>
          <target state="translated">更深入的理解</target>
        </trans-unit>
        <trans-unit id="808d7dca8a74d84af27a2d6602c3d786de45fe1e" translate="yes" xml:space="preserve">
          <source>Default</source>
          <target state="translated">Default</target>
        </trans-unit>
        <trans-unit id="9ec2dbc02e3afe106f88afa542e227751f325648" translate="yes" xml:space="preserve">
          <source>Default access rules:</source>
          <target state="translated">默认访问规则。</target>
        </trans-unit>
        <trans-unit id="6cefd9290f19790af8092d4b454039dd4ef72591" translate="yes" xml:space="preserve">
          <source>Default expressions for function parameters, evaluated whenever the parameter is &lt;code&gt;undefined&lt;/code&gt;, &lt;code&gt;...rest&lt;/code&gt; parameters for capturing remaining arguments without using the &lt;code&gt;arguments&lt;/code&gt; object:</source>
          <target state="translated">函数参数的默认表达式，在参数 &lt;code&gt;undefined&lt;/code&gt; 时进行评估， &lt;code&gt;...rest&lt;/code&gt; 参数用于捕获其余参数，而无需使用 &lt;code&gt;arguments&lt;/code&gt; 对象：</target>
        </trans-unit>
        <trans-unit id="7c62290ec5c6ac3fa261bb041bde3c7a74ec70cd" translate="yes" xml:space="preserve">
          <source>Default file load order</source>
          <target state="translated">默认文件加载顺序</target>
        </trans-unit>
        <trans-unit id="8dbd2b478a954ccf6dd32b287f8d7ebfa35af361" translate="yes" xml:space="preserve">
          <source>Defer execution of a function to run asynchronously in the background (similar to &lt;code&gt;Meteor.setTimeout(func, 0)&lt;/code&gt;.</source>
          <target state="translated">推迟执行要在后台异步运行的功能（类似于 &lt;code&gt;Meteor.setTimeout(func, 0)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2db566acd17f4b97305fc21a284527b145995921" translate="yes" xml:space="preserve">
          <source>Define a build plugin. A build plugin extends the build process for apps and packages that use this package. For example, the &lt;code&gt;coffeescript&lt;/code&gt; package uses a build plugin to compile CoffeeScript source files into JavaScript.</source>
          <target state="translated">定义一个构建插件。构建插件扩展了使用该软件包的应用和软件包的构建过程。例如， &lt;code&gt;coffeescript&lt;/code&gt; 包使用构建插件将CoffeeScript源文件编译为JavaScript。</target>
        </trans-unit>
        <trans-unit id="18200ccbab673ee883d9350bce6b9dce8b1ad9dd" translate="yes" xml:space="preserve">
          <source>Define dependencies and expose package methods for unit tests.</source>
          <target state="translated">为单元测试定义依赖关系并暴露包方法。</target>
        </trans-unit>
        <trans-unit id="6905cf18490570aa1bbbd736f7b9a5b353cc8f4e" translate="yes" xml:space="preserve">
          <source>Define dependencies and expose package methods with the &lt;code&gt;Package.onUse&lt;/code&gt; handler. This section lets you define what packages your package depends on, what packages are implied by your package, and what object your package is exported to.</source>
          <target state="translated">定义依赖关系，并使用 &lt;code&gt;Package.onUse&lt;/code&gt; 处理程序公开包方法。本部分使您可以定义您的程序包所依赖的程序包，程序包隐含的程序包以及程序包导出到的对象。</target>
        </trans-unit>
        <trans-unit id="c02ba958731a56c7329f44bca2584e6df388b718" translate="yes" xml:space="preserve">
          <source>Define package dependencies and expose package methods.</source>
          <target state="translated">定义包的依赖关系并公开包的方法。</target>
        </trans-unit>
        <trans-unit id="896f45c70cbd4046b9ddb902e58f3e7ae5798395" translate="yes" xml:space="preserve">
          <source>Defines a &lt;a href=&quot;#Template-helpers&quot;&gt;helper function&lt;/a&gt; which can be used from all templates.</source>
          <target state="translated">定义可以在所有模板中使用的&lt;a href=&quot;#Template-helpers&quot;&gt;辅助函数&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="84181a30ac9667feef69f3cb20d04274d0170088" translate="yes" xml:space="preserve">
          <source>Defines functions that can be invoked over the network by clients.</source>
          <target state="translated">定义了客户端可以通过网络调用的功能。</target>
        </trans-unit>
        <trans-unit id="72394697c73910e9331b4e63b3b6046bbb3ef139" translate="yes" xml:space="preserve">
          <source>Defining</source>
          <target state="translated">Defining</target>
        </trans-unit>
        <trans-unit id="2c07ae274de1dab3ca83185c5ceebea913bd524e" translate="yes" xml:space="preserve">
          <source>Defining a publication</source>
          <target state="translated">定义出版物</target>
        </trans-unit>
        <trans-unit id="5a621df3e85c731e4c689bfbeb133f06876b0f58" translate="yes" xml:space="preserve">
          <source>Defining a schema</source>
          <target state="translated">定义模式</target>
        </trans-unit>
        <trans-unit id="1ca5d090ef3f64fa477b0e8e51db80141b258846" translate="yes" xml:space="preserve">
          <source>Defining a simple route</source>
          <target state="translated">定义一个简单的路线</target>
        </trans-unit>
        <trans-unit id="35c7f3772aa3d121c9c96fe8f48f4f9a711cd1f7" translate="yes" xml:space="preserve">
          <source>Defining and calling Methods</source>
          <target state="translated">定义和调用方法</target>
        </trans-unit>
        <trans-unit id="37fef3f61269d82b74fe8944fb62aa3a33a39bff" translate="yes" xml:space="preserve">
          <source>Denormalization and multiple collections</source>
          <target state="translated">归一化和多重集合</target>
        </trans-unit>
        <trans-unit id="0551d015bef5a9e8ffc939459c9547834f4dea27" translate="yes" xml:space="preserve">
          <source>Denormalization may need to happen on various mutators of several collections. Therefore, it&amp;rsquo;s sensible to define the denormalization logic in one place, and hook it into each mutator with one line of code. The advantage of this approach is that the denormalization logic is one place rather than spread over many files, but you can still examine the code for each collection and fully understand what happens on each update.</source>
          <target state="translated">非规范化可能需要在几个集合的各种变异子上发生。因此，明智的做法是在一处定义反规范化逻辑，然后用一行代码将其挂接到每个mutator中。这种方法的优点是，非规范化逻辑是一个地方，而不是散布在许多文件中，但是您仍然可以检查每个集合的代码并完全了解每次更新会发生什么。</target>
        </trans-unit>
        <trans-unit id="17efdd103398906737648a1d60c431fb5433cc8e" translate="yes" xml:space="preserve">
          <source>Deny writes to the &lt;code&gt;profile&lt;/code&gt; field on user documents.</source>
          <target state="translated">拒绝写入用户文档上的 &lt;code&gt;profile&lt;/code&gt; 字段。</target>
        </trans-unit>
        <trans-unit id="73329a708b96198fa1dde11d635a69e8c1a5ba64" translate="yes" xml:space="preserve">
          <source>Depend on core Meteor packages, such as &lt;code&gt;ddp&lt;/code&gt; and &lt;code&gt;blaze&lt;/code&gt;</source>
          <target state="translated">取决于核心流星软件包，例如 &lt;code&gt;ddp&lt;/code&gt; 和 &lt;code&gt;blaze&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b4f8b36f761ce206c375eea56464bacee17d3dfd" translate="yes" xml:space="preserve">
          <source>Depend on package &lt;code&gt;packagename&lt;/code&gt;.</source>
          <target state="translated">取决于包 &lt;code&gt;packagename&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0562f32dc56f5c702810cbe010068ddd38dbd69a" translate="yes" xml:space="preserve">
          <source>Dependencies</source>
          <target state="translated">Dependencies</target>
        </trans-unit>
        <trans-unit id="75bc28dae67a3580f0c5196334d23701daf6cc22" translate="yes" xml:space="preserve">
          <source>Dependencies don&amp;rsquo;t store data, they just track the set of computations to invalidate if something changes. Typically, a data value will be accompanied by a Dependency object that tracks the computations that depend on it, as in this example:</source>
          <target state="translated">依赖项不存储数据，它们只是跟踪计算集，以使某些更改无效。通常，数据值将带有一个Dependency对象，该对象跟踪依赖于该对象的计算，如以下示例所示：</target>
        </trans-unit>
        <trans-unit id="412a747a785d8dc91d62592bd0fdede87946a3ec" translate="yes" xml:space="preserve">
          <source>Depending on Meteor version</source>
          <target state="translated">取决于Meteor版本</target>
        </trans-unit>
        <trans-unit id="8c0f9befc47151d268f3ef20c8ceae4ffb840d1e" translate="yes" xml:space="preserve">
          <source>Depending on the version of Meteor you are using, you should install the proper version of &lt;code&gt;node&lt;/code&gt; using the appropriate installation process for your platform.</source>
          <target state="translated">根据所使用的Meteor版本，应使用适合您平台的安装过程来安装正确版本的 &lt;code&gt;node&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0cd22a7e0092ed41a5b4eba55f9ea6f645d380be" translate="yes" xml:space="preserve">
          <source>Deploy a version of your application that can handle both the old and the new schema. In our case, it&amp;rsquo;d be code that doesn&amp;rsquo;t expect the &lt;code&gt;todoCount&lt;/code&gt; to be there, but which correctly updates it when new todos are created.</source>
          <target state="translated">部署可以处理旧模式和新模式的应用程序版本。在我们的例子中，这是不希望 &lt;code&gt;todoCount&lt;/code&gt; 出现的代码，但是当创建新的todo时它会正确地更新它。</target>
        </trans-unit>
        <trans-unit id="6c89b4b05993e80eccba9abd31b850f6f47e3b62" translate="yes" xml:space="preserve">
          <source>Deploy the new code that relies on the new schema and no longer knows how to deal with the old schema. Now we are safe to rely on &lt;code&gt;list.todoCount&lt;/code&gt; in our UI.</source>
          <target state="translated">部署依赖于新架构的新代码，并且不再知道如何处理旧架构。现在我们可以安全地在用户界面中依赖 &lt;code&gt;list.todoCount&lt;/code&gt; 了。</target>
        </trans-unit>
        <trans-unit id="39ee7111418081ce1ec55e2fc0ff4976177317be" translate="yes" xml:space="preserve">
          <source>Deploy the new version of the application to your staging server.</source>
          <target state="translated">将应用程序的新版本部署到您的暂存服务器上。</target>
        </trans-unit>
        <trans-unit id="ef23cda8b1f3b541a15db8ac778285fb1b9e28e5" translate="yes" xml:space="preserve">
          <source>Deploy the project in your current directory to &lt;a href=&quot;https://www.meteor.com/galaxy&quot;&gt;Galaxy&lt;/a&gt;.</source>
          <target state="translated">将当前目录中的项目部署到&lt;a href=&quot;https://www.meteor.com/galaxy&quot;&gt;Galaxy&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="850eed96beca0b0250d7bf8cb68dceb8d321dac1" translate="yes" xml:space="preserve">
          <source>Deploying Meteor Applications</source>
          <target state="translated">部署气象应用</target>
        </trans-unit>
        <trans-unit id="941a21aaed844f8c4ddd37c9f6d77a67a8623655" translate="yes" xml:space="preserve">
          <source>Deploying a special &amp;ldquo;migration application&amp;rdquo; to the same hardware as your real application is probably the best way to solve the above issues. It&amp;rsquo;d be amazing if such an application kept track of which migrations ran when, with logs and provided a UI to examine and run them. Perhaps a boilerplate application to do so could be built (if you do so, please let us know and we&amp;rsquo;ll link to it here!).</source>
          <target state="translated">将特殊的&amp;ldquo;迁移应用程序&amp;rdquo;部署到与实际应用程序相同的硬件上可能是解决上述问题的最佳方法。如果这样的应用程序通过日志跟踪运行迁移的时间，并提供一个UI来检查和运行它们，那将是惊人的。也许可以构建一个这样做的样板应用程序（如果您这样做，请告诉我们，我们将在此处链接到它！）。</target>
        </trans-unit>
        <trans-unit id="8a127a207cab7c7e892f216010ce1460e2f7515c" translate="yes" xml:space="preserve">
          <source>Deploying a web application is fundamentally different to releasing most other kinds of software, in that you can deploy as often as you&amp;rsquo;d like to. You don&amp;rsquo;t need to wait for users to do something to get the new version of your software because the server will push it right at them.</source>
          <target state="translated">部署Web应用程序与发布大多数其他类型的软件根本不同，因为您可以随意部署。您不需要等待用户做一些事情来获取软件的新版本，因为服务器会将它推向他们。</target>
        </trans-unit>
        <trans-unit id="fc47b0019f17d5d1fb71866651d9cc30a1126984" translate="yes" xml:space="preserve">
          <source>Deploying to production</source>
          <target state="translated">部署到生产中</target>
        </trans-unit>
        <trans-unit id="6d1ab959f77e870ad9dc85538a72b0a72d2a88b5" translate="yes" xml:space="preserve">
          <source>Deployment and Monitoring</source>
          <target state="translated">部署和监测</target>
        </trans-unit>
        <trans-unit id="9494ae5cac16bf136f925a990303724fd1f2e66b" translate="yes" xml:space="preserve">
          <source>Deployment environments</source>
          <target state="translated">部署环境</target>
        </trans-unit>
        <trans-unit id="cf4aeafe8cc2773e0b3c19c806bd782d567d67ce" translate="yes" xml:space="preserve">
          <source>Deployment options</source>
          <target state="translated">部署方案</target>
        </trans-unit>
        <trans-unit id="dc3a04df91d8b86e6c9bd296581aefcc95d6fd3b" translate="yes" xml:space="preserve">
          <source>Deployment process</source>
          <target state="translated">部署过程</target>
        </trans-unit>
        <trans-unit id="2526927f71addd4ab97cf0e0bf0c6f1688642583" translate="yes" xml:space="preserve">
          <source>Describes the current reconnection status. The possible values are &lt;code&gt;connected&lt;/code&gt; (the connection is up and running), &lt;code&gt;connecting&lt;/code&gt; (disconnected and trying to open a new connection), &lt;code&gt;failed&lt;/code&gt; (permanently failed to connect; e.g., the client and server support different versions of DDP), &lt;code&gt;waiting&lt;/code&gt; (failed to connect and waiting to try to reconnect) and &lt;code&gt;offline&lt;/code&gt; (user has disconnected the connection).</source>
          <target state="translated">描述当前的重新连接状态。可能的值是已 &lt;code&gt;connected&lt;/code&gt; （连接已建立并正在运行），已 &lt;code&gt;connecting&lt;/code&gt; （已断开连接并尝试打开新连接），已 &lt;code&gt;failed&lt;/code&gt; （永久失败；例如，客户端和服务器支持不同版本的DDP）， &lt;code&gt;waiting&lt;/code&gt; （失败连接并等待尝试重新连接）和 &lt;code&gt;offline&lt;/code&gt; （用户已断开连接）。</target>
        </trans-unit>
        <trans-unit id="486b1f571c7731b3d8a92cb14e8477390247ca84" translate="yes" xml:space="preserve">
          <source>Deserialize an EJSON value from its plain JSON representation.</source>
          <target state="translated">将EJSON值从其纯JSON表示中反序列化。</target>
        </trans-unit>
        <trans-unit id="a3df263d953f018ade51278383ecd0d2259639e4" translate="yes" xml:space="preserve">
          <source>Designing for the future</source>
          <target state="translated">面向未来的设计</target>
        </trans-unit>
        <trans-unit id="a37408ccce5e69b61c6cf62c10cd02b4c3fef878" translate="yes" xml:space="preserve">
          <source>Designing your data schema</source>
          <target state="translated">设计您的数据模式</target>
        </trans-unit>
        <trans-unit id="46c7ee96bf68fe1982330441b091aaea00a6af6e" translate="yes" xml:space="preserve">
          <source>Destructuring is the technique of using an array or object pattern on the left-hand side of an assignment or declaration, in place of the usual variable or parameter, so that certain sub-properties of the value on the right-hand side will be bound to identifiers that appear within the pattern. Perhaps the simplest example is swapping two variables without using a temporary variable:</source>
          <target state="translated">破坏结构是在赋值或声明的左侧使用数组或对象模式来代替通常的变量或参数的技术,这样右侧的值的某些子属性将被绑定到模式中出现的标识符上。也许最简单的例子就是在不使用临时变量的情况下交换两个变量。</target>
        </trans-unit>
        <trans-unit id="c2a75ba599f1de06def2282390cfed4ffb6d9145" translate="yes" xml:space="preserve">
          <source>Detecting Cordova in your JavaScript code</source>
          <target state="translated">在您的JavaScript代码中检测Cordova</target>
        </trans-unit>
        <trans-unit id="768f24738bf47f5e3f75de2453eb1d4913e12596" translate="yes" xml:space="preserve">
          <source>Developing on a device</source>
          <target state="translated">在设备上开发</target>
        </trans-unit>
        <trans-unit id="8dde5061719882cd34c931d8ebbff299d8e84752" translate="yes" xml:space="preserve">
          <source>Development vs. production</source>
          <target state="translated">发展与生产</target>
        </trans-unit>
        <trans-unit id="c157d3c38b8e40eb86adafca6ae2c439b67e635b" translate="yes" xml:space="preserve">
          <source>Dictionary of custom headers</source>
          <target state="translated">自定义页眉词典</target>
        </trans-unit>
        <trans-unit id="72a191c8509675bbcd36ad29c37fddf94526a3fc" translate="yes" xml:space="preserve">
          <source>Dictionary of fields to return or exclude.</source>
          <target state="translated">要返回或排除的字段字典。</target>
        </trans-unit>
        <trans-unit id="8e122afaa2260b77924e5f0bc161852721f91b7f" translate="yes" xml:space="preserve">
          <source>Dictionary of helper functions by name.</source>
          <target state="translated">按名称排列的帮助函数词典。</target>
        </trans-unit>
        <trans-unit id="024d013e953f3256c3ecedc703b75685f526b47e" translate="yes" xml:space="preserve">
          <source>Dictionary of request parameters to be encoded and placed in the URL (for GETs) or request body (for POSTs). If &lt;code&gt;content&lt;/code&gt; or &lt;code&gt;data&lt;/code&gt; is specified, &lt;code&gt;params&lt;/code&gt; will always be placed in the URL.</source>
          <target state="translated">要编码的请求参数字典，并放置在URL（对于GET）或请求正文（对于POST）中。如果指定了 &lt;code&gt;content&lt;/code&gt; 或 &lt;code&gt;data&lt;/code&gt; ，则 &lt;code&gt;params&lt;/code&gt; 将始终放在URL中。</target>
        </trans-unit>
        <trans-unit id="d0f4dd379ae8373d39829b52cf98859fc5ee5186" translate="yes" xml:space="preserve">
          <source>Dictionary of strings, headers to add to the HTTP request.</source>
          <target state="translated">字符串的字典,要添加到HTTP请求中的头信息。</target>
        </trans-unit>
        <trans-unit id="a89ba32baaa032279329156ef677c25c8b00a129" translate="yes" xml:space="preserve">
          <source>Dictionary whose keys are method names and values are functions.</source>
          <target state="translated">字典的键是方法名,值是函数。</target>
        </trans-unit>
        <trans-unit id="fdb859eb8d0207451604e95a445699eca4737ac9" translate="yes" xml:space="preserve">
          <source>Different types of logs</source>
          <target state="translated">不同类型的原木</target>
        </trans-unit>
        <trans-unit id="03bf0a54b86fdf600ed47b76df6625dec956b028" translate="yes" xml:space="preserve">
          <source>Disabling</source>
          <target state="translated">Disabling</target>
        </trans-unit>
        <trans-unit id="26c3d7f89c8152c891c76ec5ff1d8bbd29bc30af" translate="yes" xml:space="preserve">
          <source>Disconnect the client from the server.</source>
          <target state="translated">断开客户端与服务器的连接。</target>
        </trans-unit>
        <trans-unit id="c85ae0a48468ace002eeed5c3177ca7eba3ab152" translate="yes" xml:space="preserve">
          <source>Displaying an appropriate UI and completing the process</source>
          <target state="translated">显示适当的UI并完成流程。</target>
        </trans-unit>
        <trans-unit id="9f1141549f7c054b71516937d3febc77d991d59b" translate="yes" xml:space="preserve">
          <source>Docker</source>
          <target state="translated">Docker</target>
        </trans-unit>
        <trans-unit id="ea38dab1ce3be9087e4e441d07022ae29be297e9" translate="yes" xml:space="preserve">
          <source>Documentation for CompileStep is available &lt;a href=&quot;https://github.com/meteor/meteor/wiki/CompileStep-API-for-Build-Plugin-Source-Handlers&quot;&gt;on the GitHub Wiki&lt;/a&gt;.</source>
          <target state="translated">可以&lt;a href=&quot;https://github.com/meteor/meteor/wiki/CompileStep-API-for-Build-Plugin-Source-Handlers&quot;&gt;在GitHub Wiki上找到&lt;/a&gt; CompileStep的文档。</target>
        </trans-unit>
        <trans-unit id="acfde81c2e1c66a031bac2f868ce9f598ecbe625" translate="yes" xml:space="preserve">
          <source>Documentation of EJSON, Meteor's JSON extension.</source>
          <target state="translated">EJSON的文档,Meteor的JSON扩展。</target>
        </trans-unit>
        <trans-unit id="834d2b15392b6536da9cdfac63e33d45755927e6" translate="yes" xml:space="preserve">
          <source>Documentation of Meteor's Cordova configuration API.</source>
          <target state="translated">Meteor的Cordova配置API的文档。</target>
        </trans-unit>
        <trans-unit id="a60c0931de297040af1ba4e4b5bf8b7d30267f47" translate="yes" xml:space="preserve">
          <source>Documentation of Meteor's HTTP API.</source>
          <target state="translated">Meteor的HTTP API的文件。</target>
        </trans-unit>
        <trans-unit id="e7316a26df54a5af397bb5d1e5d8014b309e7890" translate="yes" xml:space="preserve">
          <source>Documentation of Meteor's Method (Remote Procedure Call) API.</source>
          <target state="translated">Meteor的方法(远程过程调用)API的文档。</target>
        </trans-unit>
        <trans-unit id="db47034b174dc50220a1a8dd49117d3337a09005" translate="yes" xml:space="preserve">
          <source>Documentation of Meteor's `accounts-ui` package.</source>
          <target state="translated">Meteor的`accounts-ui`包的文档。</target>
        </trans-unit>
        <trans-unit id="589fffcead074f032206dcc119ba2c8fd6527135" translate="yes" xml:space="preserve">
          <source>Documentation of Meteor's `apollo` package.</source>
          <target state="translated">Meteor的`apollo`包的文档。</target>
        </trans-unit>
        <trans-unit id="6405306b2e7b60271c2feaf9255ab8fb183935c8" translate="yes" xml:space="preserve">
          <source>Documentation of Meteor's `appcache` package.</source>
          <target state="translated">Meteor的`appcache`包的文档。</target>
        </trans-unit>
        <trans-unit id="0644ff85382ecfe92f8caca81723552e379422f9" translate="yes" xml:space="preserve">
          <source>Documentation of Meteor's `audit-argument-checks` package.</source>
          <target state="translated">Meteor的`audit-argument-checks`包的文档。</target>
        </trans-unit>
        <trans-unit id="ce08bbe3ad809b10a0c6a28ff0736165e1b424fe" translate="yes" xml:space="preserve">
          <source>Documentation of Meteor's `bundle-visualizer` package.</source>
          <target state="translated">Meteor的 &quot;bundle-visualizer &quot;包的文档。</target>
        </trans-unit>
        <trans-unit id="7c29b2970e1199a1dc8cf99c36fd871aa8170ef8" translate="yes" xml:space="preserve">
          <source>Documentation of Meteor's `coffeescript` package.</source>
          <target state="translated">Meteor的`coffeescript`包的文档。</target>
        </trans-unit>
        <trans-unit id="30146bfaa63584bff0b1ca35ff903e0ea04e20ed" translate="yes" xml:space="preserve">
          <source>Documentation of Meteor's `dynamic-import` package.</source>
          <target state="translated">Meteor的 &quot;dynamic-import &quot;包的文档。</target>
        </trans-unit>
        <trans-unit id="ffa966eff9d1ed18b83b0588602477d607840a9f" translate="yes" xml:space="preserve">
          <source>Documentation of Meteor's `ecmascript` package.</source>
          <target state="translated">Meteor的`ecmascript`包的文档。</target>
        </trans-unit>
        <trans-unit id="3c188a1260c075b519ed3040cb3364127e3e5edd" translate="yes" xml:space="preserve">
          <source>Documentation of Meteor's `jquery` package.</source>
          <target state="translated">Meteor的`jquery`包的文档。</target>
        </trans-unit>
        <trans-unit id="b3fde644f8e7a1877fbf194fa56ce0268367a35a" translate="yes" xml:space="preserve">
          <source>Documentation of Meteor's `less` package.</source>
          <target state="translated">Meteor的 &quot;less &quot;包的文档。</target>
        </trans-unit>
        <trans-unit id="3f7a98a81cca58e4c9d7950dbfd7470d5a1fcf28" translate="yes" xml:space="preserve">
          <source>Documentation of Meteor's `markdown` package.</source>
          <target state="translated">Meteor的 &quot;markdown &quot;包的文档。</target>
        </trans-unit>
        <trans-unit id="a685b078cd280447fbb874a167b51dfc3a9295ff" translate="yes" xml:space="preserve">
          <source>Documentation of Meteor's `modules` package.</source>
          <target state="translated">Meteor的 &quot;模块 &quot;包的文档。</target>
        </trans-unit>
        <trans-unit id="c4f5aeb625a0fe5bb662c97f4ac42ebc02c8ab33" translate="yes" xml:space="preserve">
          <source>Documentation of Meteor's `oauth-encryption` package.</source>
          <target state="translated">Meteor的 &quot;uth-encryption &quot;包的文档。</target>
        </trans-unit>
        <trans-unit id="7789eb3783ba5b678dfae5eabff7560e4929fb57" translate="yes" xml:space="preserve">
          <source>Documentation of Meteor's `random` package.</source>
          <target state="translated">Meteor的`random`包的文档。</target>
        </trans-unit>
        <trans-unit id="961025181b1d558653db03f49b82242d93b79cbb" translate="yes" xml:space="preserve">
          <source>Documentation of Meteor's `server-render` package.</source>
          <target state="translated">Meteor的 &quot;server-render &quot;包的文档。</target>
        </trans-unit>
        <trans-unit id="fa47a7f9ba5ec10a7143fbeb2cc37978df174906" translate="yes" xml:space="preserve">
          <source>Documentation of Meteor's `spacebars` package.</source>
          <target state="translated">Meteor的 &quot;spacebars &quot;包的文档。</target>
        </trans-unit>
        <trans-unit id="843ffaf84788d5ba9400193998c8cc8638aa5a8d" translate="yes" xml:space="preserve">
          <source>Documentation of Meteor's `underscore` package.</source>
          <target state="translated">Meteor的 &quot;underscore &quot;包的文档。</target>
        </trans-unit>
        <trans-unit id="b2de49727af30850ba45052643a90bc0f62cfbb2" translate="yes" xml:space="preserve">
          <source>Documentation of Meteor's `webapp` package.</source>
          <target state="translated">Meteor的`webapp`包的文档。</target>
        </trans-unit>
        <trans-unit id="aae3069a2e14eee4ba8c64aa7cd7c76360a7dabf" translate="yes" xml:space="preserve">
          <source>Documentation of Meteor's client-side session API.</source>
          <target state="translated">Meteor的客户端会话API的文档。</target>
        </trans-unit>
        <trans-unit id="ef05c9731ab7a8c05505d0ae09fd1853b759404c" translate="yes" xml:space="preserve">
          <source>Documentation of Meteor's email API.</source>
          <target state="translated">Meteor的电子邮件API的文档。</target>
        </trans-unit>
        <trans-unit id="597db727bc7bfeda337fbbcc262158b5c69a2e71" translate="yes" xml:space="preserve">
          <source>Documentation of Meteor's package API.</source>
          <target state="translated">Meteor的软件包API的文档。</target>
        </trans-unit>
        <trans-unit id="a896b2c4ae0899643dafe49a403cf8dbbcbe5660" translate="yes" xml:space="preserve">
          <source>Documentation of Meteor's password-based accounts API.</source>
          <target state="translated">Meteor的基于密码的账户API的文档。</target>
        </trans-unit>
        <trans-unit id="edf3e67c4a3952b1a95dd2b01e1f01ef49707c85" translate="yes" xml:space="preserve">
          <source>Documentation of Meteor's publication and subscription API.</source>
          <target state="translated">Meteor的出版和订阅API的文档。</target>
        </trans-unit>
        <trans-unit id="fab9fed53e4b5e4db128b02d6c38a4e81fec4d9a" translate="yes" xml:space="preserve">
          <source>Documentation of Meteor's template API.</source>
          <target state="translated">Meteor的模板API文档。</target>
        </trans-unit>
        <trans-unit id="004bae12179b0892dc869bf241973bd449fc2291" translate="yes" xml:space="preserve">
          <source>Documentation of Meteor's timeout APIs.</source>
          <target state="translated">Meteor的超时API的文档。</target>
        </trans-unit>
        <trans-unit id="1d3c71fb18be236b0c3b216c72da22bbf171d060" translate="yes" xml:space="preserve">
          <source>Documentation of ReactiveVar, a simple reactive variable package.</source>
          <target state="translated">ReactiveVar的文档,一个简单的反应式变量包。</target>
        </trans-unit>
        <trans-unit id="0df4b595c92c66d0f770696762f15e74b2c6ab42" translate="yes" xml:space="preserve">
          <source>Documentation of Tracker, Meteor's reactive system.</source>
          <target state="translated">Meteor的反应系统Tracker的文档。</target>
        </trans-unit>
        <trans-unit id="38f5252626829c090c4f8ca6a480c6b6987850d5" translate="yes" xml:space="preserve">
          <source>Documentation of core Meteor functions.</source>
          <target state="translated">记录核心的Meteor功能。</target>
        </trans-unit>
        <trans-unit id="fb97574ce2ab25649f5c5af7c32102f48207852e" translate="yes" xml:space="preserve">
          <source>Documentation of how to use Blaze, Meteor's reactive rendering engine.</source>
          <target state="translated">如何使用Meteor的反应式渲染引擎Blaze的文档。</target>
        </trans-unit>
        <trans-unit id="0cef6e1d9fa5136421bc6a17497a48470b566da7" translate="yes" xml:space="preserve">
          <source>Documentation of how to use Meteor's accounts functionality.</source>
          <target state="translated">如何使用Meteor的账户功能的文档。</target>
        </trans-unit>
        <trans-unit id="2d5c65c167004b16396603646d8f1bb0b1f95363" translate="yes" xml:space="preserve">
          <source>Documentation of how to use assets in Meteor.</source>
          <target state="translated">如何在Meteor中使用资产的文档。</target>
        </trans-unit>
        <trans-unit id="1897204012d1dabd9d7fdf53819ac6f9d1431c8e" translate="yes" xml:space="preserve">
          <source>Documentation of how to use the Accounts client to connect to other servers.</source>
          <target state="translated">关于如何使用Accounts客户端连接到其他服务器的文件。</target>
        </trans-unit>
        <trans-unit id="cf6e5a5057bbb42ecf16d9b451dac31e77f78753" translate="yes" xml:space="preserve">
          <source>Documentation of the various command line options of the Meteor tool.</source>
          <target state="translated">Meteor工具的各种命令行选项的文档。</target>
        </trans-unit>
        <trans-unit id="138ec9a198bd238e50c4908a73a9a7a43931bad4" translate="yes" xml:space="preserve">
          <source>Documentation on how to use Meteor's client-server connection.</source>
          <target state="translated">关于如何使用Meteor的客户端-服务器连接的文档。</target>
        </trans-unit>
        <trans-unit id="7873ddcb27b8d0257b13d55086bda5eef7f23809" translate="yes" xml:space="preserve">
          <source>Documentation on how to use Meteor's database collections.</source>
          <target state="translated">关于如何使用Meteor的数据库集合的文档。</target>
        </trans-unit>
        <trans-unit id="79f88a9bb9f4ec699c8ec64acf057a2ef9a2bf7c" translate="yes" xml:space="preserve">
          <source>Domain name</source>
          <target state="translated">域名</target>
        </trans-unit>
        <trans-unit id="646276576f2593ff66cf8d39941838c74b0d780f" translate="yes" xml:space="preserve">
          <source>Domain whitelisting</source>
          <target state="translated">域名白名单</target>
        </trans-unit>
        <trans-unit id="3f7ad4422df3c6392fffc57c27b60800ac5568a6" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t forget to run &lt;a href=&quot;http://docs.meteor.com/#/full/meteoradd&quot;&gt;&lt;code&gt;meteor add [my-package]&lt;/code&gt;&lt;/a&gt; once you have finished developing your package in order to use it; this applies if the package is a local package for internal use only or if you have published the package to Atmosphere.</source>
          <target state="translated">完成开发包以便使用后，不要忘记运行&lt;a href=&quot;http://docs.meteor.com/#/full/meteoradd&quot;&gt; &lt;code&gt;meteor add [my-package]&lt;/code&gt; &lt;/a&gt;。如果该程序包是仅供内部使用的本地程序包，或者已将该程序包发布到Atmosphere，则适用此规则。</target>
        </trans-unit>
        <trans-unit id="add8cb5f58427a4d09b86fa7aa711b53ee4f8654" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t leak any secret information to the client.</source>
          <target state="translated">不要将任何秘密信息泄露给客户端。</target>
        </trans-unit>
        <trans-unit id="2753c6d864f1a309b95ba1e0139a98ccad207465" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t pass userId from the client</source>
          <target state="translated">不要从客户端传递userId</target>
        </trans-unit>
        <trans-unit id="487dea8c1e47a8a71d8493c3009ee0431663a4fa" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t take generic arguments; make sure you know exactly what your publication is getting from the client.</source>
          <target state="translated">不要接受一般性的论点；确保您确切地知道从客户那里获得的出版物。</target>
        </trans-unit>
        <trans-unit id="c0b12a907a18131618d7729f953fe0efd183bd94" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t use &lt;a href=&quot;http://blazejs.org/guide/spacebars.html#Rendering-raw-HTML&quot;&gt;raw HTML inclusion in Blaze&lt;/a&gt; unless you really know what you are doing.</source>
          <target state="translated">除非您真的知道自己在做什么，否则不要&lt;a href=&quot;http://blazejs.org/guide/spacebars.html#Rendering-raw-HTML&quot;&gt;在Blaze中&lt;/a&gt;使用原始HTML包含。</target>
        </trans-unit>
        <trans-unit id="eb98ab531156c15fe6a38e2e382a86313252da87" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t use profile</source>
          <target state="translated">不要使用个人资料</target>
        </trans-unit>
        <trans-unit id="03970f297b18e936293bd5b43bf940a9cde80bf7" translate="yes" xml:space="preserve">
          <source>Double-braced Tags</source>
          <target state="translated">双括号标签</target>
        </trans-unit>
        <trans-unit id="7ed55e6fff6dc92d172c281fb92089d0de7daf66" translate="yes" xml:space="preserve">
          <source>Double-braced and triple-braced template tags take any number of positional and keyword arguments:</source>
          <target state="translated">双括号和三括号的模板标签采取任意数量的位置和关键字参数。</target>
        </trans-unit>
        <trans-unit id="e653b40b746a45b58c2b5f59e8007c2e5bcf9bc5" translate="yes" xml:space="preserve">
          <source>Double-click.</source>
          <target state="translated">Double-click.</target>
        </trans-unit>
        <trans-unit id="d44f6ace885aab2af027419f3d96b7f0a4b2ed4b" translate="yes" xml:space="preserve">
          <source>Download the version that you need from the above links</source>
          <target state="translated">从以上链接下载你需要的版本。</target>
        </trans-unit>
        <trans-unit id="25db32e4f925e860c7db5abc9252a9671f0f6941" translate="yes" xml:space="preserve">
          <source>Downloading updates is done incrementally, so we only download assets that have actually changed (based on a content hash). In addition, if we haven&amp;rsquo;t been able to download all changed assets in one go, because of a network failure or because the app was closed before we finished, we will reuse the ones that have already completed downloading the next time the app starts up or the network connection is restored.</source>
          <target state="translated">下载更新是增量进行的，因此我们仅下载实际更改的资产（基于内容哈希）。此外，如果由于网络故障或由于应用程序在完成之前已关闭而无法一次下载所有更改的资产，则下次使用该应用程序时，我们将重用已完成下载的资源或网络连接已恢复。</target>
        </trans-unit>
        <trans-unit id="5ac3cd9e565d2af660d6c302ac7812e098f47e74" translate="yes" xml:space="preserve">
          <source>Driver packages</source>
          <target state="translated">驱动程序包</target>
        </trans-unit>
        <trans-unit id="bf76ee5b9a5d42a5a6d8038e304829a3ccd1db8e" translate="yes" xml:space="preserve">
          <source>Drop-in UI without routing</source>
          <target state="translated">无路由的Drop-in UI</target>
        </trans-unit>
        <trans-unit id="8c5ec4ec4f5abbd6dd9295c1fc970cfc52e23ad3" translate="yes" xml:space="preserve">
          <source>Due to an upgrade in the underlying dependency for the &lt;a href=&quot;http://docs.meteor.com/api/email.html&quot;&gt;&lt;code&gt;email&lt;/code&gt; package&lt;/a&gt;, it is necessary to check that your &lt;code&gt;MAIL_URL&lt;/code&gt; is using the correct scheme (e.g. &lt;code&gt;smtps://&lt;/code&gt; or &lt;code&gt;smtp://&lt;/code&gt;).</source>
          <target state="translated">由于&lt;a href=&quot;http://docs.meteor.com/api/email.html&quot;&gt; &lt;code&gt;email&lt;/code&gt; 软件包&lt;/a&gt;的基础依赖性已升级，因此有必要检查您的 &lt;code&gt;MAIL_URL&lt;/code&gt; 是否使用了正确的方案（例如 &lt;code&gt;smtps://&lt;/code&gt; 或 &lt;code&gt;smtp://&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="0b83d2f17807f5a0249d5d723222fa45d535f5b9" translate="yes" xml:space="preserve">
          <source>During development, the Meteor &lt;a href=&quot;build-tool&quot;&gt;build tool&lt;/a&gt; detects any relevant file changes, recompiles the necessary files, and notifies all connected clients a new version is available. Clients can then automatically reload the app, switching over to the new version of the code. This is referred to as &lt;em&gt;hot code push&lt;/em&gt;.</source>
          <target state="translated">在开发过程中，Meteor &lt;a href=&quot;build-tool&quot;&gt;构建工具&lt;/a&gt;会检测到任何相关的文件更改，重新编译必要的文件，并通知所有连接的客户端新版本可用。然后，客户端可以自动重新加载应用程序，并切换到新版本的代码。这称为&lt;em&gt;热代码推送&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="96c366ad65caaa5e16bd7412d1c7573b0d692229" translate="yes" xml:space="preserve">
          <source>During development, the Meteor &lt;a href=&quot;build-tool&quot;&gt;build tool&lt;/a&gt; integrates with Cordova to run your app on a physical device or the iOS Simulator/Android emulator. In addition to starting a development server and MongoDB instance as usual, &lt;code&gt;meteor run&lt;/code&gt; accepts arguments to run the app on one or more mobile targets:</source>
          <target state="translated">在开发过程中，Meteor &lt;a href=&quot;build-tool&quot;&gt;构建工具&lt;/a&gt;与Cordova集成在一起，可在物理设备或iOS Simulator / Android仿真器上运行您的应用程序。除了照常启动开发服务器和MongoDB实例外， &lt;code&gt;meteor run&lt;/code&gt; 还接受用于在一个或多个移动目标上运行应用程序的参数：</target>
        </trans-unit>
        <trans-unit id="f7072ab162fa0bd2d88ce0eb2a5e45c09b0125d0" translate="yes" xml:space="preserve">
          <source>Dynamic Attributes</source>
          <target state="translated">动态属性</target>
        </trans-unit>
        <trans-unit id="64e8d2d9158f3e8c12250f3182864f19f2273c87" translate="yes" xml:space="preserve">
          <source>ECMAScript, the language standard on which every browser&amp;rsquo;s JavaScript implementation is based, has moved to yearly standards releases. The newest complete standard is ES2015, which includes some long-awaited and very significant improvements to the JavaScript language. Meteor&amp;rsquo;s &lt;code&gt;ecmascript&lt;/code&gt; package compiles this standard down to regular JavaScript that all browsers can understand using the &lt;a href=&quot;https://babeljs.io/&quot;&gt;popular Babel compiler&lt;/a&gt;. It&amp;rsquo;s fully backwards compatible to &amp;ldquo;regular&amp;rdquo; JavaScript, so you don&amp;rsquo;t have to use any new features if you don&amp;rsquo;t want to. We&amp;rsquo;ve put a lot of effort into making advanced browser features like source maps work great with this package, so that you can debug your code using your favorite developer tools without having to see any of the compiled output.</source>
          <target state="translated">ECMAScript是每个浏览器的JavaScript实现所基于的语言标准，现已移至年度标准版本。最新的完整标准是ES2015，其中包括对JavaScript语言的一些期待已久的重大改进。 Meteor的 &lt;code&gt;ecmascript&lt;/code&gt; 软件包将此标准编译为常规JavaScript，所有浏览器都可以使用&lt;a href=&quot;https://babeljs.io/&quot;&gt;流行的Babel编译&lt;/a&gt;器理解该标准。它与&amp;ldquo;常规&amp;rdquo; JavaScript完全向后兼容，因此，如果您不需要，则不必使用任何新功能。我们已经在使高级浏览器功能（如源映射）与该程序包一起工作方面付出了很大的努力，以便您可以使用自己喜欢的开发人员工具调试代码，而无需查看任何编译输出。</target>
        </trans-unit>
        <trans-unit id="a28c94d14495fde8cec538c695bcea0434b0479f" translate="yes" xml:space="preserve">
          <source>EJSON</source>
          <target state="translated">EJSON</target>
        </trans-unit>
        <trans-unit id="9c8572b82261f4cde650fd2f7a1bdf4750a04f18" translate="yes" xml:space="preserve">
          <source>EJSON is an extension of JSON to support more types. It supports all JSON-safe types, as well as:</source>
          <target state="translated">EJSON是JSON的扩展,支持更多类型。它支持所有JSON安全类型,以及:</target>
        </trans-unit>
        <trans-unit id="cd11323c6081a82a630bd062e7d2a0c115725cec" translate="yes" xml:space="preserve">
          <source>ERROR, string is not an attribute name</source>
          <target state="translated">ERROR,字符串不是属性名。</target>
        </trans-unit>
        <trans-unit id="5be8585e8dda5d16a9d3e66f70a40dc596a018af" translate="yes" xml:space="preserve">
          <source>ES2015</source>
          <target state="translated">ES2015</target>
        </trans-unit>
        <trans-unit id="947430ab34f34ae6f2058bd6c3894399afc389b4" translate="yes" xml:space="preserve">
          <source>ES2015 &lt;code&gt;export&lt;/code&gt; statements like these:</source>
          <target state="translated">ES2015 &lt;code&gt;export&lt;/code&gt; 语句如下：</target>
        </trans-unit>
        <trans-unit id="e558deafa5488e545da2990dd430704575be606c" translate="yes" xml:space="preserve">
          <source>ES2015 &lt;code&gt;import&lt;/code&gt; lines like these:</source>
          <target state="translated">ES2015 &lt;code&gt;import&lt;/code&gt; 行如下所示：</target>
        </trans-unit>
        <trans-unit id="06786b63c50ff431fbc07d64196f57c0f6d82721" translate="yes" xml:space="preserve">
          <source>ES2015 modules</source>
          <target state="translated">ES2015模块</target>
        </trans-unit>
        <trans-unit id="9a3ca754d4b3cab9f7f14c519febd9ac7d43dc58" translate="yes" xml:space="preserve">
          <source>ES2015+ (recommended)</source>
          <target state="translated">ES2015+(建议)</target>
        </trans-unit>
        <trans-unit id="3633746b067241666bc462dcfe7a24ff23a8db68" translate="yes" xml:space="preserve">
          <source>Each</source>
          <target state="translated">Each</target>
        </trans-unit>
        <trans-unit id="b95ba0ae036f0f29e6cad291a35b891ca4b78fa5" translate="yes" xml:space="preserve">
          <source>Each Atmosphere package that you use in your app exists in its own separate namespace, meaning that it sees only its own global variables and any variables provided by the packages that it specifically uses. When a top-level variable is defined in a package, it is either declared with local scope or package scope.</source>
          <target state="translated">你在应用程序中使用的每个Atmosphere包都存在于自己独立的命名空间中,这意味着它只看到自己的全局变量和它具体使用的包所提供的任何变量。当一个顶层变量在包中定义时,它要么用本地作用域声明,要么用包作用域声明。</target>
        </trans-unit>
        <trans-unit id="dfa7034e1d3f569958b955bba2409f3d8c9bb463" translate="yes" xml:space="preserve">
          <source>Each Meteor Method invocation shares a random generator seed with the client that called the Method, so any IDs generated by the client and server Methods are guaranteed to be the same. This means you can safely use the IDs generated on the client to do things while the Method is being sent to the server, and be confident that the IDs will be the same when the Method finishes. One case where this is particularly useful is if you want to create a new document in the database, then immediately redirect to a URL that contains that new document&amp;rsquo;s ID.</source>
          <target state="translated">每个Meteor方法调用都与客户端共享一个随机的生成器种子，该种子称为Method，因此，保证由客户端方法和服务器方法生成的任何ID均相同。这意味着您可以在将方法发送到服务器时安全地使用在客户端上生成的ID来执行操作，并确信在方法完成时这些ID将相同。一种特别有用的情况是，如果您想在数据库中创建一个新文档，然后立即重定向到包含该新文档ID的URL。</target>
        </trans-unit>
        <trans-unit id="533c3a0190649ec10759c8923533d157059db4cb" translate="yes" xml:space="preserve">
          <source>Each and With</source>
          <target state="translated">每个人都有</target>
        </trans-unit>
        <trans-unit id="e836e62ecfea337b06c631d3a534614caf5b3e7a" translate="yes" xml:space="preserve">
          <source>Each file in the list is an object that has all the methods provided by all build plugins, described above.</source>
          <target state="translated">列表中的每一个文件都是一个对象,它拥有所有构建插件提供的所有方法,如上所述。</target>
        </trans-unit>
        <trans-unit id="582993d8b7d6d1beae087f53647245de1bb5e141" translate="yes" xml:space="preserve">
          <source>Each file in your app should represent one logical module. Avoid having catch-all utility modules that export a variety of unrelated functions and symbols. Often, this can mean that it&amp;rsquo;s good to have one class, UI component, or collection per file, but there are cases where it is OK to make an exception, for example if you have a UI component with a small sub-component that isn&amp;rsquo;t used outside of that file.</source>
          <target state="translated">应用中的每个文件应代表一个逻辑模块。避免使用包罗万象的实用程序模块来导出各种不相关的功能和符号。通常，这可能意味着每个文件有一个类，UI组件或集合是一件好事，但是在某些情况下可以例外，例如，如果您的UI组件带有一个小的子组件，而该子组件却没有不在该文件之外使用。</target>
        </trans-unit>
        <trans-unit id="51f4f09922f6991d8a2cf5f6a7e6b68c5529c2fc" translate="yes" xml:space="preserve">
          <source>Each of the options correspond to a key in the app's core configuration as described in the &lt;a href=&quot;http://cordova.apache.org/docs/en/5.1.1/config_ref_index.md.html#The%20config.xml%20File_core_configuration_elements&quot;&gt;Cordova documentation&lt;/a&gt;.</source>
          <target state="translated">每个选项都对应于&lt;a href=&quot;http://cordova.apache.org/docs/en/5.1.1/config_ref_index.md.html#The%20config.xml%20File_core_configuration_elements&quot;&gt;Cordova文档&lt;/a&gt;中所述的应用程序核心配置中的键。</target>
        </trans-unit>
        <trans-unit id="b7b3e36e928eae42b236ef880ae1a1410e708e15" translate="yes" xml:space="preserve">
          <source>Each of these points will have their own section below.</source>
          <target state="translated">下面每一个点都会有自己的章节。</target>
        </trans-unit>
        <trans-unit id="066fa621ea0e0f7cc2fdd52de3fac86a2a813741" translate="yes" xml:space="preserve">
          <source>Each template has a local dictionary of helpers that are made available to it, and this call specifies helpers to add to the template&amp;rsquo;s dictionary.</source>
          <target state="translated">每个模板都有一个可用的本地助手字典，此调用指定要添加到模板字典中的助手。</target>
        </trans-unit>
        <trans-unit id="b192ab33cb35cc84f829fe0dc7ffbade8d4e7f25" translate="yes" xml:space="preserve">
          <source>Each template tag&amp;rsquo;s DOM is updated automatically when it evaluates to a new value, while avoiding unnecessary re-rendering as much as possible. For example, a double-braced tag replace its text node when its text value changes. An &lt;code&gt;#if&lt;/code&gt; re-renders its contents only when the condition changes from truthy to falsy or vice versa.</source>
          <target state="translated">每个模板标签的DOM在评估为新值时都会自动更新，同时尽可能避免不必要的重新渲染。例如，当文本值更改时，双括号标记将替换其文本节点。一个 &lt;code&gt;#if&lt;/code&gt; 重新呈现仅当条件从truthy变为falsy或反之亦然其内容。</target>
        </trans-unit>
        <trans-unit id="4461a43e600cdf5efa1eff9d8eea135b9ba936bc" translate="yes" xml:space="preserve">
          <source>Each time a computation runs, it may access various reactive data sources that serve as inputs to the computation, which are called its dependencies. At some future time, one of these dependencies may trigger the computation to be rerun by invalidating it. When this happens, the dependencies are cleared, and the computation is scheduled to be rerun at flush time.</source>
          <target state="translated">每次计算运行时,它可能会访问作为计算输入的各种反应式数据源,这些数据源被称为依赖关系。在未来的某个时候,这些依赖关系中的一个可能会通过使计算无效来触发计算的重新运行。当这种情况发生时,依赖关系就会被清除,计算就会被安排在刷新时重新运行。</target>
        </trans-unit>
        <trans-unit id="62008429c8dd1d3652c7ed3660c0635b6f1bbc12" translate="yes" xml:space="preserve">
          <source>Each-in</source>
          <target state="translated">Each-in</target>
        </trans-unit>
        <trans-unit id="1626bf53584539804234548386732c0103e38a63" translate="yes" xml:space="preserve">
          <source>Easily call the Method with a custom user ID, especially in tests (as recommended by the &lt;a href=&quot;https://www.discovermeteor.com/blog/meteor-pattern-two-tiered-methods/&quot;&gt;Discover Meteor two-tiered methods pattern&lt;/a&gt;).</source>
          <target state="translated">使用自定义用户ID轻松调用Method，尤其是在测试中（如&lt;a href=&quot;https://www.discovermeteor.com/blog/meteor-pattern-two-tiered-methods/&quot;&gt;Discover Meteor两层方法模式所建议&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="7432e47af5fe13154ca38cc8cbed143518940e8c" translate="yes" xml:space="preserve">
          <source>Easily override the Method for testing.</source>
          <target state="translated">轻松地覆盖方法进行测试。</target>
        </trans-unit>
        <trans-unit id="443dfa68497446993338ef19371adfe7de8fd239" translate="yes" xml:space="preserve">
          <source>Easy to read code</source>
          <target state="translated">易于阅读的代码</target>
        </trans-unit>
        <trans-unit id="177d47837a0b840025675413838d81f5e804ebfe" translate="yes" xml:space="preserve">
          <source>Edit button</source>
          <target state="translated">编辑按钮</target>
        </trans-unit>
        <trans-unit id="4a0d256ac1f7d5b2fbe2786ad72aceb5a36c1945" translate="yes" xml:space="preserve">
          <source>Either a string interpreted as a username or an email; or an object with a single key: &lt;code&gt;email&lt;/code&gt;, &lt;code&gt;username&lt;/code&gt; or &lt;code&gt;id&lt;/code&gt;. Username or email match in a case insensitive manner.</source>
          <target state="translated">解释为用户名的字符串或电子邮件；或具有单个键的对象： &lt;code&gt;email&lt;/code&gt; ， &lt;code&gt;username&lt;/code&gt; 或 &lt;code&gt;id&lt;/code&gt; 。用户名或电子邮件以不区分大小写的方式匹配。</target>
        </trans-unit>
        <trans-unit id="bd7f01b2756313501a3cac451fc5658f893b3805" translate="yes" xml:space="preserve">
          <source>Either the &lt;code&gt;onLogin&lt;/code&gt; or the &lt;code&gt;onLoginFailure&lt;/code&gt; callbacks will be called for each login attempt. The &lt;code&gt;onLogin&lt;/code&gt; callbacks are called after the user has been successfully logged in. The &lt;code&gt;onLoginFailure&lt;/code&gt; callbacks are called after a login attempt is denied.</source>
          <target state="translated">无论是 &lt;code&gt;onLogin&lt;/code&gt; 或 &lt;code&gt;onLoginFailure&lt;/code&gt; 回调会被要求每次登录尝试。该 &lt;code&gt;onLogin&lt;/code&gt; 后，用户在成功登录的回调被称为该 &lt;code&gt;onLoginFailure&lt;/code&gt; 登录尝试被拒绝后回调被调用。</target>
        </trans-unit>
        <trans-unit id="84add5b2952787581cb9a8851eef63d1ec75d22b" translate="yes" xml:space="preserve">
          <source>Email</source>
          <target state="translated">Email</target>
        </trans-unit>
        <trans-unit id="d9810544672e482b9c0025bd93656d66a8227379" translate="yes" xml:space="preserve">
          <source>Email flows</source>
          <target state="translated">电子邮件流</target>
        </trans-unit>
        <trans-unit id="51278b6eba2be0b22672652bcc5c10e5de75a003" translate="yes" xml:space="preserve">
          <source>Email works out of the box with accounts UI packages</source>
          <target state="translated">电子邮件可与账户UI包一起使用。</target>
        </trans-unit>
        <trans-unit id="492a42a58c56429f2ceed9469c63b20f75dd78ab" translate="yes" xml:space="preserve">
          <source>Enables &lt;code&gt;class&lt;/code&gt; syntax:</source>
          <target state="translated">启用 &lt;code&gt;class&lt;/code&gt; 语法：</target>
        </trans-unit>
        <trans-unit id="1bc70e3d745a9fd593f1cca2126119e8c844da25" translate="yes" xml:space="preserve">
          <source>Enables multi-line strings delimited by backticks instead of quotation marks, with variable interpolation:</source>
          <target state="translated">启用多行字符串,以反斜线代替引号,并采用可变插值。</target>
        </trans-unit>
        <trans-unit id="50d0b59c60affb6fcc34731807f626458d423349" translate="yes" xml:space="preserve">
          <source>Enables the &lt;code&gt;let&lt;/code&gt; and &lt;code&gt;const&lt;/code&gt; keywords as alternatives to &lt;code&gt;var&lt;/code&gt;. The key difference is that variables defined using &lt;code&gt;let&lt;/code&gt; or &lt;code&gt;const&lt;/code&gt; are visible only within the block where they are declared, rather than being visible anywhere in the enclosing function. For example:</source>
          <target state="translated">启用 &lt;code&gt;let&lt;/code&gt; 和 &lt;code&gt;const&lt;/code&gt; 关键字替代 &lt;code&gt;var&lt;/code&gt; 。主要区别在于，使用 &lt;code&gt;let&lt;/code&gt; 或 &lt;code&gt;const&lt;/code&gt; 定义的变量仅在声明它们的块内可见，而在封闭函数中的任何位置都不可见。例如：</target>
        </trans-unit>
        <trans-unit id="ab6c4d9a6009e703e713b51ae1e148dbd59d9898" translate="yes" xml:space="preserve">
          <source>Enabling</source>
          <target state="translated">Enabling</target>
        </trans-unit>
        <trans-unit id="edcd21d929a7fcb6f80ae83013a137599ac3407b" translate="yes" xml:space="preserve">
          <source>Enabling SEO</source>
          <target state="translated">启用SEO</target>
        </trans-unit>
        <trans-unit id="1e83b0c6a54d0f7fd927f49892653c00be248568" translate="yes" xml:space="preserve">
          <source>Enabling modules</source>
          <target state="translated">启用模块</target>
        </trans-unit>
        <trans-unit id="0ccf4930da45311cdc3e388583c8742399b9ccc7" translate="yes" xml:space="preserve">
          <source>Encryption of data in-flight and at-rest</source>
          <target state="translated">飞行和休息时的数据加密。</target>
        </trans-unit>
        <trans-unit id="ac4bbc3dc7765a7722e80ab3f3494d5b6a305392" translate="yes" xml:space="preserve">
          <source>Encrypts sensitive login secrets stored in the database such as a login service&amp;rsquo;s application secret key and users&amp;rsquo; access tokens.</source>
          <target state="translated">加密存储在数据库中的敏感登录密码，例如登录服务的应用程序密钥和用户的访问令牌。</target>
        </trans-unit>
        <trans-unit id="9db7b3bb07b4e0990a33d7e2756791eb6b029b3c" translate="yes" xml:space="preserve">
          <source>Enforce exact version dependencies between packages using Meteor&amp;rsquo;s &lt;a href=&quot;writing-atmosphere-packages.md#version-constraints&quot;&gt;constraint resolver&lt;/a&gt;</source>
          <target state="translated">使用Meteor的&lt;a href=&quot;writing-atmosphere-packages.md#version-constraints&quot;&gt;约束解析器&lt;/a&gt;在软件包之间实施确切的版本依赖性</target>
        </trans-unit>
        <trans-unit id="44c833bc2f9dbe0b7bc23634f3014760a8bee23f" translate="yes" xml:space="preserve">
          <source>Ensure that your &lt;a href=&quot;#meteor_absoluteurl&quot;&gt;&lt;code&gt;$ROOT_URL&lt;/code&gt;&lt;/a&gt; matches the authorized domain and callback URL that you configure with the external service (for instance, if you are running Meteor behind a proxy server, &lt;code&gt;$ROOT_URL&lt;/code&gt; should be the externally-accessible URL, not the URL inside your proxy).</source>
          <target state="translated">确保&lt;a href=&quot;#meteor_absoluteurl&quot;&gt; &lt;code&gt;$ROOT_URL&lt;/code&gt; &lt;/a&gt;与您使用外部服务配置的授权域和回调URL匹配（例如，如果您在代理服务器后面运行Meteor，则 &lt;code&gt;$ROOT_URL&lt;/code&gt; 应该是外部可访问的URL，而不是代理内部的URL） 。</target>
        </trans-unit>
        <trans-unit id="3631390663783b1262378940294087c8d90ab021" translate="yes" xml:space="preserve">
          <source>Entire books have been written on the subject of testing, so we will simply touch on some basics of testing here. The important thing to consider when writing a test is what part of the application you are trying to test, and how you are verifying the behavior works.</source>
          <target state="translated">关于测试的主题已经写了整整一本书,所以我们将在这里简单的介绍一些测试的基础知识。编写测试时要考虑的重要问题是你要测试的应用程序的哪一部分,以及你如何验证行为的工作。</target>
        </trans-unit>
        <trans-unit id="ec072bba7befaa68af710fe3549eb0491d7badd1" translate="yes" xml:space="preserve">
          <source>Environment Variables</source>
          <target state="translated">环境变量</target>
        </trans-unit>
        <trans-unit id="72e75d7e5d445bc15e0b9ea52b7baf3c7167b0ca" translate="yes" xml:space="preserve">
          <source>Environment variables and settings</source>
          <target state="translated">环境变量和设置</target>
        </trans-unit>
        <trans-unit id="65d09ae9f782d6f65a7ec72d18a1732d6c0a7de2" translate="yes" xml:space="preserve">
          <source>Environment variables are used to set process specific things, which could conceivably change for different instances of your application&amp;rsquo;s processes. For instance, you can set a different &lt;code&gt;KADIRA_OPTIONS_HOSTNAME&lt;/code&gt; for each process to ensure that &lt;a href=&quot;#kadira&quot;&gt;kadira&lt;/a&gt; logs timings with useful hostnames.</source>
          <target state="translated">环境变量用于设置特定于进程的事物，可以想象，对于应用程序进程的不同实例，这些事物可能会发生变化。例如，您可以为每个进程设置一个不同的 &lt;code&gt;KADIRA_OPTIONS_HOSTNAME&lt;/code&gt; ，以确保&lt;a href=&quot;#kadira&quot;&gt;kadira&lt;/a&gt;用有用的主机名记录时间。</target>
        </trans-unit>
        <trans-unit id="21d9b1edec202248799973eb0e9d2c3df65a5d20" translate="yes" xml:space="preserve">
          <source>Equivalent HTML</source>
          <target state="translated">相当于HTML</target>
        </trans-unit>
        <trans-unit id="05f4a8bb9bf12e58a28eaaeac29c9741467c50e9" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;a href=&quot;#find&quot;&gt;&lt;code&gt;find&lt;/code&gt;&lt;/a&gt;&lt;code&gt;(selector, options).&lt;/code&gt;&lt;a href=&quot;#fetch&quot;&gt;&lt;code&gt;fetch&lt;/code&gt;&lt;/a&gt;&lt;code&gt;()[0]&lt;/code&gt; with &lt;code&gt;options.limit = 1&lt;/code&gt;.</source>
          <target state="translated">等同于&lt;a href=&quot;#find&quot;&gt; &lt;code&gt;find&lt;/code&gt; &lt;/a&gt; &lt;code&gt;(selector, options).&lt;/code&gt; 使用 &lt;code&gt;options.limit = 1&lt;/code&gt; &lt;a href=&quot;#fetch&quot;&gt; &lt;code&gt;fetch&lt;/code&gt; &lt;/a&gt; &lt;code&gt;()[0]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f1065972287388dec34226ca1d5430712d6a7b62" translate="yes" xml:space="preserve">
          <source>Error case</source>
          <target state="translated">错误案例</target>
        </trans-unit>
        <trans-unit id="73631d7f0356fdbdeaa36f8e5dbad89c6aa15dc4" translate="yes" xml:space="preserve">
          <source>Error handling</source>
          <target state="translated">错误处理</target>
        </trans-unit>
        <trans-unit id="a41f6a98e341464efb67644fa3497c82f78450fb" translate="yes" xml:space="preserve">
          <source>Errors in Method simulation</source>
          <target state="translated">方法模拟中的错误</target>
        </trans-unit>
        <trans-unit id="2779ea444cb47200f1b0085d04662b33c09fc23f" translate="yes" xml:space="preserve">
          <source>Escaping</source>
          <target state="translated">Escaping</target>
        </trans-unit>
        <trans-unit id="e8e5567de1ab1f259c25ebfc614570a27330977c" translate="yes" xml:space="preserve">
          <source>Escaping Curly Braces</source>
          <target state="translated">摆脱卷曲的牙套</target>
        </trans-unit>
        <trans-unit id="af960cbec0a4a069531ee449bcb8978a06f0d33a" translate="yes" xml:space="preserve">
          <source>Essentially it copies a tarball of the contents of each of your npm dependencies into your application source repository. This is essentially a more robust version of the &lt;code&gt;npm-shrinkwrap.json&lt;/code&gt; file that shrinkwrap creates, because it means your application&amp;rsquo;s npm dependencies can be assembled without the need or reliance on the npm servers being available or reliable. This is good for repeatable builds especially when deploying.</source>
          <target state="translated">本质上，它将每个npm依赖项的内容的压缩包复制到应用程序源存储库中。这实际上是 &lt;code&gt;npm-shrinkwrap.json&lt;/code&gt; 包装创建的npm-shrinkwrap.json文件的更强大的版本，因为这意味着可以组装应用程序的npm依赖项，而无需或依赖可用或可靠的npm服务器。这对于可重复的构建特别有用，尤其是在部署时。</target>
        </trans-unit>
        <trans-unit id="20fbf1356baec1ddc0e72057db7491e002803955" translate="yes" xml:space="preserve">
          <source>Establish a weak dependency on a package. If package A has a weak dependency on package B, it means that including A in an app does not force B to be included too &amp;mdash; but, if B is included or by another package, then B will load before A. You can use this to make packages that optionally integrate with or enhance other packages if those packages are present. When you weakly depend on a package you don't see its exports. You can detect if the possibly-present weakly-depended-on package is there by seeing if &lt;code&gt;Package.foo&lt;/code&gt; exists, and get its exports from the same place.</source>
          <target state="translated">建立对程序包的弱依赖性。如果程序包A对程序包B的依赖性较弱，则意味着在应用程序中包含A不会强制也将B包括在内-但是，如果程序包A包含B或另一个程序包包含在内，则B将在A之前加载。制作可以与其他软件包集成或增强（如果存在）的软件包。当您弱依赖包装时，您将看不到其出口。您可以通过查看 &lt;code&gt;Package.foo&lt;/code&gt; 是否存在来检测可能存在的弱依赖包，然后从同一位置获取其导出。</target>
        </trans-unit>
        <trans-unit id="4c15409fb36b4813807ebc18ea1006cafcd1e3c6" translate="yes" xml:space="preserve">
          <source>Establishes a &lt;em&gt;live query&lt;/em&gt; that invokes callbacks when the result of the query changes. In contrast to &lt;a href=&quot;#observe&quot;&gt;&lt;code&gt;observe&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;observeChanges&lt;/code&gt; provides only the difference between the old and new result set, not the entire contents of the document that changed.</source>
          <target state="translated">建立一个&lt;em&gt;实时查询&lt;/em&gt;，该&lt;em&gt;实时查询&lt;/em&gt;在查询结果更改时调用回调。与&lt;a href=&quot;#observe&quot;&gt; &lt;code&gt;observe&lt;/code&gt; 相比&lt;/a&gt;， &lt;code&gt;observeChanges&lt;/code&gt; 仅提供新旧结果集之间的差异，而不提供已更改文档的全部内容。</target>
        </trans-unit>
        <trans-unit id="6067d57253940be2ab171eb9cc19c4fdff18af7f" translate="yes" xml:space="preserve">
          <source>Establishes a &lt;em&gt;live query&lt;/em&gt; that invokes callbacks when the result of the query changes. The callbacks receive the entire contents of the document that was affected, as well as its old contents, if applicable. If you only need to receive the fields that changed, see &lt;a href=&quot;#observe_changes&quot;&gt;&lt;code&gt;observeChanges&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">建立一个&lt;em&gt;实时查询&lt;/em&gt;，该&lt;em&gt;实时查询&lt;/em&gt;在查询结果更改时调用回调。回调将接收受影响文档的全部内容，以及旧内容（如果适用）。如果您只需要接收更改的字段，请参阅&lt;a href=&quot;#observe_changes&quot;&gt; &lt;code&gt;observeChanges&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8d147450a036bcd649afff9f1b3e74089dd56753" translate="yes" xml:space="preserve">
          <source>Establishes a reactive dependency on the result.</source>
          <target state="translated">建立对结果的被动依赖。</target>
        </trans-unit>
        <trans-unit id="9ed0d5b75247f900e487ce6a25e41a118c087a4b" translate="yes" xml:space="preserve">
          <source>Even if you aren&amp;rsquo;t saving data over the wire to the database on every user input, sometimes you still may wish to update in-memory data stores on every user change. If updating that data store triggers a lot of UI changes, you can see poor performance and missed keystrokes when you update it too often. In such cases you can limit re-rendering by throttling in a similar way how we throttled the method call above. You could also use &lt;code&gt;.debounce()&lt;/code&gt; to ensure the changes happen only after the user has stopped typing.</source>
          <target state="translated">即使您不是在每次用户输入时都通过网络将数据保存到数据库中，有时您仍可能希望在每次用户更改时更新内存中的数据存储。如果更新该数据存储引发大量的UI更改，则当您过于频繁地更新它时，您会发现性能不佳并错过了击键操作。在这种情况下，您可以通过节流上述类似的方式来节流，以限制重新渲染。您还可以使用 &lt;code&gt;.debounce()&lt;/code&gt; 来确保仅在用户停止键入后才进行更改。</target>
        </trans-unit>
        <trans-unit id="5204bdf6c201719651bc9bf61b87907bf2fa6722" translate="yes" xml:space="preserve">
          <source>Even ignoring the security implications of &lt;code&gt;profile&lt;/code&gt;, it isn&amp;rsquo;t a good idea to put all of your app&amp;rsquo;s custom data onto one field. As discussed in the &lt;a href=&quot;collections#schema-design&quot;&gt;Collections article&lt;/a&gt;, Meteor&amp;rsquo;s data transfer protocol doesn&amp;rsquo;t do deeply nested diffing of fields, so it&amp;rsquo;s a good idea to flatten out your objects into many top-level fields on the document.</source>
          <target state="translated">即使忽略 &lt;code&gt;profile&lt;/code&gt; 的安全隐患，将应用程序的所有自定义数据都放在一个字段上也不是一个好主意。正如在&lt;a href=&quot;collections#schema-design&quot;&gt;Collections文章中&lt;/a&gt;所讨论的那样，Meteor的数据传输协议并未对字段进行深层嵌套的区分，因此将对象展平为文档中许多顶级字段是一个好主意。</target>
        </trans-unit>
        <trans-unit id="3529e10b4f8dfafd4a034a44c92fc289cad4906a" translate="yes" xml:space="preserve">
          <source>Even though it is recommended that you write your application to use ES2015 modules and the &lt;code&gt;imports/&lt;/code&gt; directory, Meteor 1.3 continues to support eager loading of files, using these default load order rules, to provide backwards compatibility with applications written for Meteor 1.2 and earlier. You may combine both eager loading and lazy loading using &lt;code&gt;import&lt;/code&gt; in a single app. Any import statements are evaluated in the order they are listed in a file when that file is loaded and evaluated using these rules.</source>
          <target state="translated">即使建议您编写应用程序以使用ES2015模块和 &lt;code&gt;imports/&lt;/code&gt; 目录，但Meteor 1.3仍将使用这些默认的加载顺序规则继续支持文件的急切加载，以提供与为Meteor 1.2及更早版本编写的应用程序的向后兼容性。您可以在单个应用程序中使用 &lt;code&gt;import&lt;/code&gt; 合并急切加载和延迟加载。使用这些规则加载和评估任何import语句时，将按照文件中列出的顺序对其进行评估。</target>
        </trans-unit>
        <trans-unit id="e80c56065c7b654260bd65218422bb9e7d3d03cd" translate="yes" xml:space="preserve">
          <source>Event Maps</source>
          <target state="translated">活动地图</target>
        </trans-unit>
        <trans-unit id="36a67f567bf2ec3510801d617c4d76a61448c053" translate="yes" xml:space="preserve">
          <source>Event handlers to associate with this template.</source>
          <target state="translated">与该模板相关联的事件处理程序。</target>
        </trans-unit>
        <trans-unit id="eabc790d00812b33da77b202701e348d39479228" translate="yes" xml:space="preserve">
          <source>Event handling</source>
          <target state="translated">事件处理</target>
        </trans-unit>
        <trans-unit id="51bd03a46735470cb8e5a85fbabadc9ef7c0e093" translate="yes" xml:space="preserve">
          <source>Event types and their uses include:</source>
          <target state="translated">事件类型及其用途包括:</target>
        </trans-unit>
        <trans-unit id="01f4091aee7775e55b424276eac7ddd89786ebe6" translate="yes" xml:space="preserve">
          <source>Every Meteor app comes with production minification by default with the &lt;code&gt;standard-minifier-js&lt;/code&gt; and &lt;code&gt;standard-minifier-css&lt;/code&gt; packages. These minifiers go to some extra effort to do a good job - for example, Meteor automatically splits up your files if they get too big to maintain support for older versions of Internet Explorer which had a limit on the number of CSS rules per file.</source>
          <target state="translated">默认情况下，每个Meteor应用程序都带有 &lt;code&gt;standard-minifier-js&lt;/code&gt; 和 &lt;code&gt;standard-minifier-css&lt;/code&gt; 软件包的生产最小化版本。这些缩小器需要付出额外的努力才能做好工作-例如，如果Meteor太大而无法维护对Internet Explorer较旧版本的支持（这些文件的CSS规则数量受到限制），它们会自动拆分文件。</target>
        </trans-unit>
        <trans-unit id="af6f2fe9271813f9c06c5e6475ac49eac4f1b070" translate="yes" xml:space="preserve">
          <source>Every Meteor project targets a set of platforms. Platforms can be added to a Meteor project with &lt;code&gt;meteor add-platform&lt;/code&gt;.</source>
          <target state="translated">每个Meteor项目都针对一组平台。可以使用 &lt;code&gt;meteor add-platform&lt;/code&gt; 将平台添加到Meteor项目中。</target>
        </trans-unit>
        <trans-unit id="fdbc7c354c5c0405925c85fedf2997b60d26233a" translate="yes" xml:space="preserve">
          <source>Every app will have some secret API keys or passwords:</source>
          <target state="translated">每个应用都会有一些秘密的API密钥或密码。</target>
        </trans-unit>
        <trans-unit id="eedc2ea46adfe6da022b6831ee232ed74648c989" translate="yes" xml:space="preserve">
          <source>Every new Meteor app includes Blaze, Meteor&amp;rsquo;s default templating system, by default. If you are not planning on &lt;a href=&quot;#using-with-blaze&quot;&gt;using React and Blaze together&lt;/a&gt;, you can remove Blaze from your project by running:</source>
          <target state="translated">默认情况下，每个新的Meteor应用程序都包括Meteor的默认模板系统Blaze。如果您不打算一起&lt;a href=&quot;#using-with-blaze&quot;&gt;使用React和Blaze&lt;/a&gt;，可以通过运行以下命令从项目中删除Blaze：</target>
        </trans-unit>
        <trans-unit id="2e9c40c26ed50471311c3109d77b8e06f9a98112" translate="yes" xml:space="preserve">
          <source>Every other argument is passed as a prop to the component when it is rendered.</source>
          <target state="translated">当组件被渲染时,其他每个参数都会作为一个道具传递给组件。</target>
        </trans-unit>
        <trans-unit id="4d989e2df56c605dfc6c6ea04b0cd8aec51c9c0f" translate="yes" xml:space="preserve">
          <source>Every project is pinned to a specific release of Meteor. You can temporarily try using your package with another release by passing the &lt;code&gt;--release&lt;/code&gt; option to any command; &lt;code&gt;meteor update&lt;/code&gt; changes the pinned release.</source>
          <target state="translated">每个项目都固定到特定版本的Meteor。您可以通过将 &lt;code&gt;--release&lt;/code&gt; 选项传递给任何命令来暂时尝试将软件包与其他版本一起使用； &lt;code&gt;meteor update&lt;/code&gt; 更改固定发布。</target>
        </trans-unit>
        <trans-unit id="6113a91befef754507a909414b09535262331ba5" translate="yes" xml:space="preserve">
          <source>Every publication takes two types of parameters:</source>
          <target state="translated">每个出版物都需要两种类型的参数。</target>
        </trans-unit>
        <trans-unit id="3abe736de10b160fdad52b58c3f87bb13197627e" translate="yes" xml:space="preserve">
          <source>Everything else: code that runs on the client, data sent through Method and publication arguments, etc, can&amp;rsquo;t be trusted.</source>
          <target state="translated">其他所有内容：在客户端上运行的代码，通过Method和发布参数发送的数据等均不可信任。</target>
        </trans-unit>
        <trans-unit id="48918d21cb8427b9c0a3d99d41d627c47877adb9" translate="yes" xml:space="preserve">
          <source>Example (client):</source>
          <target state="translated">例子(客户):</target>
        </trans-unit>
        <trans-unit id="72bb1e626ae8ddf9d0be812f06ca11cfee969530" translate="yes" xml:space="preserve">
          <source>Example (server):</source>
          <target state="translated">例(服务器)。</target>
        </trans-unit>
        <trans-unit id="8f97bcc0e17b1dbc74957bd0380cdda95449c8dc" translate="yes" xml:space="preserve">
          <source>Example app</source>
          <target state="translated">应用实例</target>
        </trans-unit>
        <trans-unit id="e8fbc63282146097bdb5d214a2275dc1f625ef0f" translate="yes" xml:space="preserve">
          <source>Example asynchronous HTTP call:</source>
          <target state="translated">示例异步HTTP调用。</target>
        </trans-unit>
        <trans-unit id="f54b424db1f494644832d310ac00845732403bea" translate="yes" xml:space="preserve">
          <source>Example directory layout</source>
          <target state="translated">目录布局示例</target>
        </trans-unit>
        <trans-unit id="4d05ce1ffbb205c93297cb855637fcd8f224c5b6" translate="yes" xml:space="preserve">
          <source>Example server method:</source>
          <target state="translated">服务器方法示例。</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="4375e210d7c1b74f25ad4ca4b750e6c8b34217fb" translate="yes" xml:space="preserve">
          <source>Examples below will reference the &lt;code&gt;Lists_show&lt;/code&gt; component from the Todos example app.</source>
          <target state="translated">下面的示例将引用Todos示例应用程序中的 &lt;code&gt;Lists_show&lt;/code&gt; 组件。</target>
        </trans-unit>
        <trans-unit id="fb3447b632f6a431215776dcf254a01001a40c4f" translate="yes" xml:space="preserve">
          <source>Examples:</source>
          <target state="translated">Examples:</target>
        </trans-unit>
        <trans-unit id="8bc8848fa11928b655560703cb0f89e1bb28fd73" translate="yes" xml:space="preserve">
          <source>Executing &lt;code&gt;meteor node -e &quot;console.log(process.versions)&quot;&lt;/code&gt; would run &lt;code&gt;console.log(process.versions)&lt;/code&gt; in the version of &lt;code&gt;node&lt;/code&gt; bundled with Meteor.</source>
          <target state="translated">执行 &lt;code&gt;meteor node -e &quot;console.log(process.versions)&quot;&lt;/code&gt; 将在与Meteor绑定的 &lt;code&gt;node&lt;/code&gt; 版本中运行 &lt;code&gt;console.log(process.versions)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8c56e464ee0ee637718966cb38fae37b4d7d430b" translate="yes" xml:space="preserve">
          <source>Exiting the shell does not terminate the server. If the server restarts because a change was made in server code, or a fatal exception was encountered, the shell will restart along with the server. This behavior can be simulated by typing &lt;code&gt;.reload&lt;/code&gt; in the shell.</source>
          <target state="translated">退出外壳不会终止服务器。如果由于服务器代码中的更改导致服务器重新启动，或者遇到致命异常，则外壳程序将与服务器一起重新启动。可以通过在外壳中键入 &lt;code&gt;.reload&lt;/code&gt; 来模拟此行为。</target>
        </trans-unit>
        <trans-unit id="42a57fa75f4019d60defcf09b4a90412cfff9e84" translate="yes" xml:space="preserve">
          <source>Explicitly include non-javascript files including CSS, Less, Sass, Stylus and static assets</source>
          <target state="translated">明确包含非javascript文件,包括CSS、Less、Sass、Stylus和静态资产。</target>
        </trans-unit>
        <trans-unit id="6f35141d6315a42b30171c5af76dda7a26aca820" translate="yes" xml:space="preserve">
          <source>Export package-level variables in your package. The specified variables (declared without &lt;code&gt;var&lt;/code&gt; in the source code) will be available to packages that use your package. If your package sets the &lt;code&gt;debugOnly&lt;/code&gt;, &lt;code&gt;prodOnly&lt;/code&gt; or &lt;code&gt;testOnly&lt;/code&gt; options to &lt;code&gt;true&lt;/code&gt; when it calls &lt;code&gt;Package.describe()&lt;/code&gt;, then packages that use your package will need to use &lt;code&gt;Package[&quot;package-name&quot;].ExportedVariableName&lt;/code&gt; to access the value of an exported variable.</source>
          <target state="translated">在包中导出包级变量。指定的变量（在源代码中声明为不带 &lt;code&gt;var&lt;/code&gt; 的变量）将对使用您的软件包的软件包可用。如果您的程序包在调用 &lt;code&gt;Package.describe()&lt;/code&gt; 时将 &lt;code&gt;debugOnly&lt;/code&gt; ， &lt;code&gt;prodOnly&lt;/code&gt; 或 &lt;code&gt;testOnly&lt;/code&gt; 选项设置为 &lt;code&gt;true&lt;/code&gt; ，则使用您程序包的程序包将需要使用 &lt;code&gt;Package[&quot;package-name&quot;].ExportedVariableName&lt;/code&gt; 来访问导出变量的值。</target>
        </trans-unit>
        <trans-unit id="c37343fbc2a734ed5d2673a49ae41a53a7d7f024" translate="yes" xml:space="preserve">
          <source>Exporting</source>
          <target state="translated">Exporting</target>
        </trans-unit>
        <trans-unit id="41fc97a4300a245cdbff58066d70ad724c58fadc" translate="yes" xml:space="preserve">
          <source>External login services typically require registering and configuring your application before use. The easiest way to do this is with the &lt;a href=&quot;#accountsui&quot;&gt;&lt;code&gt;accounts-ui&lt;/code&gt; package&lt;/a&gt; which presents a step-by-step guide to configuring each service. However, the data can be also be entered manually in the &lt;code&gt;ServiceConfiguration.configurations&lt;/code&gt; collection, which is exported by the &lt;code&gt;service-configuration&lt;/code&gt; package.</source>
          <target state="translated">外部登录服务通常需要在使用前注册和配置您的应用程序。最简单的方法是使用&lt;a href=&quot;#accountsui&quot;&gt; &lt;code&gt;accounts-ui&lt;/code&gt; 软件包&lt;/a&gt;，该软件包提供了配置每个服务的分步指南。但是，也可以在 &lt;code&gt;ServiceConfiguration.configurations&lt;/code&gt; 集合中手动输入数据，该集合由 &lt;code&gt;service-configuration&lt;/code&gt; 包导出。</target>
        </trans-unit>
        <trans-unit id="0b9ce072e27032f45534f5801d0f467d6bd396ee" translate="yes" xml:space="preserve">
          <source>Extracting a specific property from an object:</source>
          <target state="translated">从对象中提取一个特定的属性。</target>
        </trans-unit>
        <trans-unit id="82da67b211249624f24f3c7db5642a5112c9446f" translate="yes" xml:space="preserve">
          <source>Facebook</source>
          <target state="translated">Facebook</target>
        </trans-unit>
        <trans-unit id="305d767720c94f8ec60ac0e8e05d1ec05d6cd057" translate="yes" xml:space="preserve">
          <source>Facebook with &lt;code&gt;accounts-facebook&lt;/code&gt;</source>
          <target state="translated">带有 &lt;code&gt;accounts-facebook&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ccd3256378a259f745b106874acb8eb5d3586370" translate="yes" xml:space="preserve">
          <source>Facebook, Google, and more</source>
          <target state="translated">Facebook、谷歌等</target>
        </trans-unit>
        <trans-unit id="4b85b0a9c33d40b2e3908fc120f8cdcf3613d3de" translate="yes" xml:space="preserve">
          <source>Facebook: &lt;a href=&quot;http://developers.facebook.com/docs/authentication/permissions/&quot;&gt;http://developers.facebook.com/docs/authentication/permissions/&lt;/a&gt;</source>
          <target state="translated">面子书：&lt;a href=&quot;http://developers.facebook.com/docs/authentication/permissions/&quot;&gt;http&lt;/a&gt; : //developers.facebook.com/docs/authentication/permissions/</target>
        </trans-unit>
        <trans-unit id="fb659df6b3ddd6d889d61a58767e837e74291b57" translate="yes" xml:space="preserve">
          <source>Fast prototyping with &lt;code&gt;accounts-ui&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;accounts-ui&lt;/code&gt; 快速进行原型制作</target>
        </trans-unit>
        <trans-unit id="f3f09da6f23802b8d775f313cbe8c78977793ea8" translate="yes" xml:space="preserve">
          <source>Features in core Meteor</source>
          <target state="translated">核心流星的特征</target>
        </trans-unit>
        <trans-unit id="b01ee8c8228364d240c04f0b37d721c88909865f" translate="yes" xml:space="preserve">
          <source>Fetch data from those subscriptions</source>
          <target state="translated">从这些订阅中获取数据</target>
        </trans-unit>
        <trans-unit id="f72e37fef6235224d97b3a255c42b2336a5bfcaf" translate="yes" xml:space="preserve">
          <source>Fetch global client-side state from stores such as the Router, Accounts, and your own stores</source>
          <target state="translated">从Router、Accounts和你自己的存储中获取全局的客户端状态。</target>
        </trans-unit>
        <trans-unit id="f1c833fa6c8cd83f72dafb2f2c3a5387a60235c9" translate="yes" xml:space="preserve">
          <source>Fetch in helpers</source>
          <target state="translated">获取帮助者</target>
        </trans-unit>
        <trans-unit id="8aa30b46fc32377780fbb913a85b1a9de35e8fa0" translate="yes" xml:space="preserve">
          <source>Fetch the data from those subscriptions, and</source>
          <target state="translated">从这些订阅中获取数据,并且</target>
        </trans-unit>
        <trans-unit id="7f010ba4cf279b8bbbfc559cedc8cccd600380b0" translate="yes" xml:space="preserve">
          <source>Fetch the data nearby where you subscribed to it</source>
          <target state="translated">在你订阅的地方就近获取数据。</target>
        </trans-unit>
        <trans-unit id="f841e4fe625e158df6b305e59b366460773baead" translate="yes" xml:space="preserve">
          <source>Fetching data</source>
          <target state="translated">获取数据</target>
        </trans-unit>
        <trans-unit id="f98ec139e428ca27cfbb1e77f6f876426f1ca919" translate="yes" xml:space="preserve">
          <source>Field Specifiers</source>
          <target state="translated">外勤人员</target>
        </trans-unit>
        <trans-unit id="18a19bb1f12b36ee797501cc072d5a887c9ed9eb" translate="yes" xml:space="preserve">
          <source>Field on the current data context</source>
          <target state="translated">当前数据上下文的字段</target>
        </trans-unit>
        <trans-unit id="c268ca0e772d0f085a5b3e084c5154431864450a" translate="yes" xml:space="preserve">
          <source>Fields in the database should be camelCased just like your JavaScript variable names.</source>
          <target state="translated">数据库中的字段应该像你的JavaScript变量名一样使用camelCasing。</target>
        </trans-unit>
        <trans-unit id="c75a31a175cab9aaaf9e0b59c42ce51db38fe210" translate="yes" xml:space="preserve">
          <source>File load order</source>
          <target state="translated">文件加载顺序</target>
        </trans-unit>
        <trans-unit id="9aab41c369b66a38c7edcdbad5d791f674f181d9" translate="yes" xml:space="preserve">
          <source>File structure</source>
          <target state="translated">文件结构</target>
        </trans-unit>
        <trans-unit id="e22accc8e24dc418cec87bb510c82a4b6a5f90a4" translate="yes" xml:space="preserve">
          <source>Files are then loaded in alphabetical order of the entire path</source>
          <target state="translated">然后按照整个路径的字母顺序加载文件。</target>
        </trans-unit>
        <trans-unit id="b55b695b8f688fedabc08846e224512342117564" translate="yes" xml:space="preserve">
          <source>Files beginning with &lt;code&gt;main.&lt;/code&gt; are loaded &lt;strong&gt;last&lt;/strong&gt;</source>
          <target state="translated">以 &lt;code&gt;main.&lt;/code&gt; 开头的文件。&lt;strong&gt;最后&lt;/strong&gt;加载&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4211a3e5987e1e9171faab6397528898f4bea488" translate="yes" xml:space="preserve">
          <source>Files inside &lt;strong&gt;any&lt;/strong&gt;&lt;code&gt;lib/&lt;/code&gt; directory are loaded next</source>
          <target state="translated">接下来将加载&lt;strong&gt;任何&lt;/strong&gt; &lt;code&gt;lib/&lt;/code&gt; 目录中的文件</target>
        </trans-unit>
        <trans-unit id="4930b392fc70ed7e0a9ff38302e0da516e082c3f" translate="yes" xml:space="preserve">
          <source>Files outside special directories</source>
          <target state="translated">特殊目录外的文件</target>
        </trans-unit>
        <trans-unit id="8a38f4447e9af696a57509a046dea0f070ea99d3" translate="yes" xml:space="preserve">
          <source>Files with deeper paths are loaded next</source>
          <target state="translated">更深路径的文件将在下一个加载</target>
        </trans-unit>
        <trans-unit id="9531b74bba56bcd9b0e032ee6d89149f8ce89bd7" translate="yes" xml:space="preserve">
          <source>Files, exports, and packages</source>
          <target state="translated">文件、出口和软件包</target>
        </trans-unit>
        <trans-unit id="4fc1ab2e66cdced32fb377d38c449802917fde57" translate="yes" xml:space="preserve">
          <source>Files/directories whose names start with a dot, like &lt;code&gt;.meteor&lt;/code&gt; and &lt;code&gt;.git&lt;/code&gt;</source>
          <target state="translated">名称以点开头的文件/目录，例如 &lt;code&gt;.meteor&lt;/code&gt; 和 &lt;code&gt;.git&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="72300adf4985b12eaddb7bd400893dc7763e02e7" translate="yes" xml:space="preserve">
          <source>Finally, especially if you&amp;rsquo;re developing your own plugin, installing it from the local filesystem can be a convenient way to keep up with changes you make to plugin code. The downside of this is that Meteor will reinstall all plugins on every build however, so this could really slow things down. We do add local plugins with the &lt;code&gt;--link&lt;/code&gt; option however, so Cordova will try to install the plugin&amp;rsquo;s files using symlinks instead of copying them, which means changes to files will be reflected in the generated native project (e.g. an Xcode project) and may not require a rebuild.</source>
          <target state="translated">最后，尤其是在开发自己的插件时，从本地文件系统安装插件可能是跟上对插件代码所做更改的便捷方法。不利的一面是，Meteor会在每个版本上重新安装所有插件，因此这确实会使速度变慢。但是，我们确实使用 &lt;code&gt;--link&lt;/code&gt; 选项添加了本地插件，因此Cordova将尝试使用符号链接而不是复制它们来安装插件的文件，这意味着对文件的更改将反映在生成的本机项目（例如Xcode项目）中，并且可能不需要重建。</target>
        </trans-unit>
        <trans-unit id="00179a9a5b3a1f7b853c1eb78e9b69d7b5dde683" translate="yes" xml:space="preserve">
          <source>Finally, if you are inside a stub on the client and call another method, the other method is not executed (no RPC is generated, nothing &amp;ldquo;real&amp;rdquo; happens). If that other method has a stub, that stub stands in for the method and is executed. The method call&amp;rsquo;s return value is the return value of the stub function. The client has no problem executing a stub synchronously, and that is why it&amp;rsquo;s okay for the client to use the synchronous &lt;code&gt;Meteor.call&lt;/code&gt; form from inside a method body, as described earlier.</source>
          <target state="translated">最后，如果您在客户端的存根中并调用另一个方法，则不会执行另一个方法（不生成RPC，不会发生任何&amp;ldquo;真实&amp;rdquo;事件）。如果该其他方法具有存根，则该存根代表该方法并执行。方法调用的返回值是存根函数的返回值。客户端毫无问题地同步执行存根，这就是为什么客户端可以从方法主体内部使用同步 &lt;code&gt;Meteor.call&lt;/code&gt; 表单的原因，如前所述。</target>
        </trans-unit>
        <trans-unit id="dde21c894270fc06d06b51b5fa3147002c70f08a" translate="yes" xml:space="preserve">
          <source>Finally, it&amp;rsquo;s common to animate when the user switches between routes of the application. Especially on mobile, this adds a sense of navigation to the app via positioning pages relative to each other. This can be done in a similar way to animating things appearing and disappearing (after all one page is appearing and other is disappearing), but there are some tricks that are worth being aware of.</source>
          <target state="translated">最后，当用户在应用程序的路由之间切换时，通常要进行动画处理。尤其是在移动设备上，这可以通过相对于彼此定位页面来为应用程序增加导航感。可以采用类似于动画显示和消失的方式来完成此操作（在所有一页都出现后，其他页面都消失了），但是有一些技巧值得我们注意。</target>
        </trans-unit>
        <trans-unit id="cff30e672f43bcc69f81119977805b5aa032acff" translate="yes" xml:space="preserve">
          <source>Finally, since this package is using the new &lt;code&gt;modules&lt;/code&gt; package, and the package &lt;code&gt;Npm.depends&lt;/code&gt; on the &amp;ldquo;moment&amp;rdquo; npm package, modules within the package can &lt;code&gt;import moment from 'moment'&lt;/code&gt; on both the client and the server. This is great news, because previous versions of Meteor allowed npm imports only on the server, via &lt;code&gt;Npm.require&lt;/code&gt;.</source>
          <target state="translated">最后，由于此软件包正在使用新的 &lt;code&gt;modules&lt;/code&gt; 软件包，并且软件包 &lt;code&gt;Npm.depends&lt;/code&gt; 依赖于&amp;ldquo; moment&amp;rdquo; npm软件包，因此该软件包中的模块可以在客户端和服务器上 &lt;code&gt;import moment from 'moment'&lt;/code&gt; 。这是个好消息，因为以前版本的Meteor只能通过 &lt;code&gt;Npm.require&lt;/code&gt; 在服务器上导入npm 。</target>
        </trans-unit>
        <trans-unit id="b57d061dc84919c05eade237b3b28715b566baa5" translate="yes" xml:space="preserve">
          <source>Find all elements matching &lt;code&gt;selector&lt;/code&gt; in this template instance, and return them as a JQuery object.</source>
          <target state="translated">在此模板实例中找到所有与 &lt;code&gt;selector&lt;/code&gt; 匹配的元素，并将它们作为JQuery对象返回。</target>
        </trans-unit>
        <trans-unit id="729ee83ff8d20957280f00fc30c989afe4117f1d" translate="yes" xml:space="preserve">
          <source>Find all elements matching &lt;code&gt;selector&lt;/code&gt; in this template instance.</source>
          <target state="translated">在此模板实例中找到所有与 &lt;code&gt;selector&lt;/code&gt; 匹配的元素。</target>
        </trans-unit>
        <trans-unit id="bce4a04e3715f5eb99f2ace98649dab754465ac2" translate="yes" xml:space="preserve">
          <source>Find all of the documents that match &lt;code&gt;selector&lt;/code&gt; and delete them from the collection.</source>
          <target state="translated">查找与 &lt;code&gt;selector&lt;/code&gt; 匹配的所有文档，并将其从集合中删除。</target>
        </trans-unit>
        <trans-unit id="818c7d9a04f185a2012b831a2a7b8532a39a8286" translate="yes" xml:space="preserve">
          <source>Find one element matching &lt;code&gt;selector&lt;/code&gt; in this template instance.</source>
          <target state="translated">在此模板实例中找到一个与 &lt;code&gt;selector&lt;/code&gt; 匹配的元素。</target>
        </trans-unit>
        <trans-unit id="b1213749216cb52d4a2b88eeaaa015418dc1c0ca" translate="yes" xml:space="preserve">
          <source>Find the documents in a collection that match the selector.</source>
          <target state="translated">在一个集合中找到与选择器相匹配的文档。</target>
        </trans-unit>
        <trans-unit id="aa76ad935c466ebfdbc18a706039bfb7536913f9" translate="yes" xml:space="preserve">
          <source>Finds the first document that matches the selector, as ordered by sort and skip options. Returns &lt;code&gt;undefined&lt;/code&gt; if no matching document is found.</source>
          <target state="translated">按照排序和跳过选项的顺序查找与选择器匹配的第一个文档。如果找不到匹配的文档，则返回 &lt;code&gt;undefined&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="65b9aeba6d9832b7ad62bd1e6f9697461fca5f9f" translate="yes" xml:space="preserve">
          <source>Finds the user with the specified email. First tries to match email case sensitively; if that fails, it tries case insensitively; but if more than one user matches the case insensitive search, it returns null.</source>
          <target state="translated">查找拥有指定邮件的用户。首先尝试匹配电子邮件的大小写;如果失败,则尝试不区分大小写;但如果超过一个用户匹配不区分大小写的搜索,则返回null。</target>
        </trans-unit>
        <trans-unit id="8d512f2eed7cd9d2283b97b779c29bfaee4591b7" translate="yes" xml:space="preserve">
          <source>Finds the user with the specified username. First tries to match username case sensitively; if that fails, it tries case insensitively; but if more than one user matches the case insensitive search, it returns null.</source>
          <target state="translated">查找具有指定用户名的用户。首先尝试匹配用户名的大小写;如果失败,则尝试不区分大小写;但如果有多个用户匹配了不区分大小写的搜索,则返回null。</target>
        </trans-unit>
        <trans-unit id="e58530e68ffe338c0e469a9a86011febec0c90ca" translate="yes" xml:space="preserve">
          <source>First, add the &lt;code&gt;service-configuration&lt;/code&gt; package:</source>
          <target state="translated">首先，添加 &lt;code&gt;service-configuration&lt;/code&gt; 包：</target>
        </trans-unit>
        <trans-unit id="25c27844ac3b9eaa4e6f8967d18f4d311537a823" translate="yes" xml:space="preserve">
          <source>First, add the service configuration package:</source>
          <target state="translated">首先,添加服务配置包。</target>
        </trans-unit>
        <trans-unit id="dfa1860bf8f5f99d6eb337acf640f11cf20a86fc" translate="yes" xml:space="preserve">
          <source>First, figure out which template you want to replace by looking at the source code of the package. For example, in the &lt;code&gt;useraccounts:unstyled&lt;/code&gt; package, the templates are listed &lt;a href=&quot;https://github.com/meteor-useraccounts/unstyled/tree/master/lib&quot;&gt;in this directory on GitHub&lt;/a&gt;. By squinting at the file names and looking for some of the HTML strings, we can figure out that we might be interested in replacing the &lt;code&gt;atPwdFormBtn&lt;/code&gt; template. Let&amp;rsquo;s take a look at the original template:</source>
          <target state="translated">首先，通过查看包的源代码来找出要替换的模板。例如，在 &lt;code&gt;useraccounts:unstyled&lt;/code&gt; 包中，模板&lt;a href=&quot;https://github.com/meteor-useraccounts/unstyled/tree/master/lib&quot;&gt;在GitHub的此目录&lt;/a&gt;中列出。通过斜视文件名并查找一些HTML字符串，我们可以发现我们可能对替换 &lt;code&gt;atPwdFormBtn&lt;/code&gt; 模板感兴趣。让我们看一下原始模板：</target>
        </trans-unit>
        <trans-unit id="782c6f0c6fc5c09720bad4a4119c4a995a4d47bc" translate="yes" xml:space="preserve">
          <source>First, we need to configure the layout we want to use when rendering the accounts templates:</source>
          <target state="translated">首先,我们需要配置我们想要在渲染账户模板时使用的布局。</target>
        </trans-unit>
        <trans-unit id="e5b61b65b9e4cbf23b57be970df77724c1af53a2" translate="yes" xml:space="preserve">
          <source>First, you can &lt;code&gt;export&lt;/code&gt; any named declaration on the same line where it was declared:</source>
          <target state="translated">首先，您可以在声明的同一行上 &lt;code&gt;export&lt;/code&gt; 任何命名的声明：</target>
        </trans-unit>
        <trans-unit id="eef31c8fb3cd90a9aab1d23453021b737b806a81" translate="yes" xml:space="preserve">
          <source>First, you need to create a &lt;em&gt;local collection&lt;/em&gt; - this is a collection that exists only on the client side and is not tied to a database collection on the server. Read more in the &lt;a href=&quot;http://guide.meteor.com/collections.html#local-collections&quot;&gt;Collections article&lt;/a&gt;.</source>
          <target state="translated">首先，您需要创建一个&lt;em&gt;本地集合&lt;/em&gt; -这是一个仅存在于客户端且不与服务器上的数据库集合绑定的集合。在&lt;a href=&quot;http://guide.meteor.com/collections.html#local-collections&quot;&gt;收藏文章中&lt;/a&gt;阅读更多内容。</target>
        </trans-unit>
        <trans-unit id="b0b89bea06c06c8de821418889983af218d5b7be" translate="yes" xml:space="preserve">
          <source>First, you&amp;rsquo;ll need to request the relevant permissions when logging in the user. See the &lt;a href=&quot;#oauth-configuration&quot;&gt;section above&lt;/a&gt; for how to pass those options.</source>
          <target state="translated">首先，您需要在登录用户时请求相关权限。有关如何传递这些选项的信息，请参见&lt;a href=&quot;#oauth-configuration&quot;&gt;上文&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b003b5beb77c5a51911b890c1a37d2bca99905e4" translate="yes" xml:space="preserve">
          <source>Fix any bugs found in step 2. and repeat.</source>
          <target state="translated">修复在第2步中发现的任何错误.并重复。</target>
        </trans-unit>
        <trans-unit id="400ca378a2cc34610e19295643d049d1b97a10a1" translate="yes" xml:space="preserve">
          <source>Flow Router</source>
          <target state="translated">流量路由器</target>
        </trans-unit>
        <trans-unit id="f7d0b0a63adac13483308d142df49c44aea5f3b5" translate="yes" xml:space="preserve">
          <source>Flow Router Extra</source>
          <target state="translated">额外的Flow Router</target>
        </trans-unit>
        <trans-unit id="4d809cb7e8e32ca86df6f2ccab008dd8bce5235c" translate="yes" xml:space="preserve">
          <source>Flow Router is a community routing package for Meteor.</source>
          <target state="translated">Flow Router是Meteor的一个社区路由包。</target>
        </trans-unit>
        <trans-unit id="9e962a78f26ba2cf49ccee370d69fa6dc08a25e1" translate="yes" xml:space="preserve">
          <source>Follow a JavaScript style guide</source>
          <target state="translated">遵循JavaScript风格指南</target>
        </trans-unit>
        <trans-unit id="2667cd7d059d2631b0f7ae3865916c80b3a515cb" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;https://guide.meteor.com/using-packages.html&quot;&gt;Atmosphere packages&lt;/a&gt;, as the older pre-1.3 &lt;code&gt;api.export&lt;/code&gt; syntax allowed more than one export per package, you&amp;rsquo;ll tend to see non-default exports used for symbols. For instance:</source>
          <target state="translated">对于&lt;a href=&quot;https://guide.meteor.com/using-packages.html&quot;&gt;Atmosphere软件包&lt;/a&gt;，由于较早的1.3之前版本的 &lt;code&gt;api.export&lt;/code&gt; 语法允许每个软件包进行多个导出，因此您会倾向于看到用于符号的非默认导出。例如：</target>
        </trans-unit>
        <trans-unit id="b35aa049fcc915835fd6aeeb29b631fb3bed7168" translate="yes" xml:space="preserve">
          <source>For Android, launch screen images should be special &quot;Nine-patch&quot; image files that specify how they should be stretched. See the &lt;a href=&quot;https://developer.android.com/guide/topics/graphics/2d-graphics.html#nine-patch&quot;&gt;Android docs&lt;/a&gt;.</source>
          <target state="translated">对于Android，启动屏幕图像应为特殊的&amp;ldquo;九补丁&amp;rdquo;图像文件，用于指定应如何拉伸它们。请参阅&lt;a href=&quot;https://developer.android.com/guide/topics/graphics/2d-graphics.html#nine-patch&quot;&gt;Android文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6e3e13018b30997708a71b1a620d710323a4ae08" translate="yes" xml:space="preserve">
          <source>For Meteor, we recommend using a CDN with &amp;ldquo;origin&amp;rdquo; support (like &lt;a href=&quot;http://joshowens.me/using-a-cdn-with-your-production-meteor-app/&quot;&gt;CloudFront&lt;/a&gt;), which means that instead of uploading your files in advance, the CDN automatically fetches them from your server. You put your files in &lt;code&gt;public/&lt;/code&gt; (in this case &lt;code&gt;public/cats.gif&lt;/code&gt;), and when your Australian user asks the CDN for &lt;code&gt;http://mycdn.com/cats.gif&lt;/code&gt;, the CDN, behind the scenes, fetches &lt;code&gt;http://myapp.com/cats.gif&lt;/code&gt; and then delivers it to the user. While this is slightly slower than getting &lt;code&gt;http://myapp.com/cats.gif&lt;/code&gt; directly, it only happens one time, because the CDN saves the file, and all subsequent Australians who ask for the file get it quickly.</source>
          <target state="translated">对于Meteor，我们建议使用具有&amp;ldquo;原始&amp;rdquo;支持的CDN（例如&lt;a href=&quot;http://joshowens.me/using-a-cdn-with-your-production-meteor-app/&quot;&gt;CloudFront&lt;/a&gt;），这意味着CDN无需预先上传文件，而是自动从服务器获取文件。您将文件放在 &lt;code&gt;public/&lt;/code&gt; （在本例中为 &lt;code&gt;public/cats.gif&lt;/code&gt; ）中，当您的澳大利亚用户向CDN询问 &lt;code&gt;http://mycdn.com/cats.gif&lt;/code&gt; 时，该CDN会在后台获取 &lt;code&gt;http://myapp.com/cats.gif&lt;/code&gt; ，然后将其交付给用户。尽管这比直接获取 &lt;code&gt;http://myapp.com/cats.gif&lt;/code&gt; 稍慢，但它只发生一次，因为CDN会保存文件，所有随后要求该文件的澳大利亚人都会很快得到它。</target>
        </trans-unit>
        <trans-unit id="6ba9007be8c5e94046dcbd42244c759a90eb82b7" translate="yes" xml:space="preserve">
          <source>For React-based apps, the &lt;a href=&quot;https://atmospherejs.com/universe/i18n&quot;&gt;&lt;code&gt;universe:18n&lt;/code&gt; package&lt;/a&gt; presents an alternative solution to &lt;code&gt;tap:i18n&lt;/code&gt;. &lt;code&gt;universe:i18n&lt;/code&gt; adopts similar conventions to &lt;code&gt;tap:i18n&lt;/code&gt;, but also includes a convenient drop-in React component and omits &lt;code&gt;tap:i18n's&lt;/code&gt; dependencies on Meteor&amp;rsquo;s &lt;code&gt;templating&lt;/code&gt; and &lt;code&gt;jquery&lt;/code&gt; packages. &lt;code&gt;universe:i18n&lt;/code&gt; was intended for Meteor React applications using &lt;code&gt;ES2015&lt;/code&gt; modules, but it can be used without React or modules.</source>
          <target state="translated">对于基于React的应用程序，&lt;a href=&quot;https://atmospherejs.com/universe/i18n&quot;&gt; &lt;code&gt;universe:18n&lt;/code&gt; 软件包&lt;/a&gt;提供了 &lt;code&gt;tap:i18n&lt;/code&gt; 的替代解决方案。 &lt;code&gt;universe:i18n&lt;/code&gt; 对 &lt;code&gt;tap:i18n&lt;/code&gt; ：i18n采用类似的约定，但还包括一个方便的嵌入式React组件，并省略了 &lt;code&gt;tap:i18n's&lt;/code&gt; 对Meteor的 &lt;code&gt;templating&lt;/code&gt; 和 &lt;code&gt;jquery&lt;/code&gt; 包的依赖。 &lt;code&gt;universe:i18n&lt;/code&gt; 适用于使用 &lt;code&gt;ES2015&lt;/code&gt; 模块的Meteor React应用程序，但可以在没有React或模块的情况下使用。</target>
        </trans-unit>
        <trans-unit id="45b297efb8a20bbe269b6486daea5c1cc0f1f3c0" translate="yes" xml:space="preserve">
          <source>For Views created by invoking templates, returns the &lt;a href=&quot;templates#Template-instances&quot;&gt;template instance&lt;/a&gt; object for this particular View. For example, in a &lt;a href=&quot;templates#Template-onCreated&quot;&gt;&lt;code&gt;created&lt;/code&gt;&lt;/a&gt; callback, &lt;code&gt;this.view.templateInstance() === this&lt;/code&gt;.</source>
          <target state="translated">对于通过调用模板创建的视图，返回此特定视图的&lt;a href=&quot;templates#Template-instances&quot;&gt;模板实例&lt;/a&gt;对象。例如，在&lt;a href=&quot;templates#Template-onCreated&quot;&gt; &lt;code&gt;created&lt;/code&gt; &lt;/a&gt;回调中， &lt;code&gt;this.view.templateInstance() === this&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3b9602ab0f2eed549af6ce92bb50a31dfad68229" translate="yes" xml:space="preserve">
          <source>For Views created by invoking templates, the original Template object. For example, &lt;code&gt;Blaze.render(Template.foo).template === Template.foo&lt;/code&gt;.</source>
          <target state="translated">对于通过调用模板创建的视图，原始模板对象。例如， &lt;code&gt;Blaze.render(Template.foo).template === Template.foo&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5b39025aef99aad05f2736347165bcf5032e3a91" translate="yes" xml:space="preserve">
          <source>For all your files in &lt;code&gt;public/&lt;/code&gt;, change their URLs to point at the CDN. You can use a helper like &lt;code&gt;assetUrl&lt;/code&gt;.</source>
          <target state="translated">对于 &lt;code&gt;public/&lt;/code&gt; 所有文件，更改其URL指向CDN。您可以使用诸如 &lt;code&gt;assetUrl&lt;/code&gt; 之类的帮助器。</target>
        </trans-unit>
        <trans-unit id="b8452546992174d3c1bfc7307b3febe9a6cf8999" translate="yes" xml:space="preserve">
          <source>For apps, this is as easy as &lt;code&gt;meteor add modules&lt;/code&gt;, or (even better) &lt;code&gt;meteor add ecmascript&lt;/code&gt;, since the &lt;code&gt;ecmascript&lt;/code&gt; package &lt;em&gt;implies&lt;/em&gt; the &lt;code&gt;modules&lt;/code&gt; package.</source>
          <target state="translated">对于应用程序，这就像 &lt;code&gt;meteor add modules&lt;/code&gt; 一样简单，（甚至更好） &lt;code&gt;meteor add ecmascript&lt;/code&gt; ，因为 &lt;code&gt;ecmascript&lt;/code&gt; 包&lt;em&gt;暗含&lt;/em&gt;了 &lt;code&gt;modules&lt;/code&gt; 包。</target>
        </trans-unit>
        <trans-unit id="0455a3b3e41b1c093be793af12deae4408af6c90" translate="yes" xml:space="preserve">
          <source>For backwards compatibility Meteor 1.3 still provides Meteor&amp;rsquo;s global namespacing for the Meteor core package as well as for other Meteor packages you include in your application. You can also still directly call functions such as &lt;a href=&quot;http://docs.meteor.com/#/full/meteor_publish&quot;&gt;&lt;code&gt;Meteor.publish&lt;/code&gt;&lt;/a&gt;, as in previous versions of Meteor, without first importing them. However, it is recommended best practice that you first load all the Meteor &amp;ldquo;pseudo-globals&amp;rdquo; using the &lt;code&gt;import { Name } from 'meteor/package'&lt;/code&gt; syntax before using them. For instance:</source>
          <target state="translated">为了向后兼容，Meteor 1.3仍为Meteor核心程序包以及应用程序中包含的其他Meteor程序包提供了Meteor的全局命名空间。您也可以像以前的Meteor版本一样直接调用&lt;a href=&quot;http://docs.meteor.com/#/full/meteor_publish&quot;&gt; &lt;code&gt;Meteor.publish&lt;/code&gt; 之类的&lt;/a&gt;函数，而无需先导入它们。但是，建议最佳实践是，在使用流星&amp;ldquo; pseudo-globals&amp;rdquo; 之前，请先使用 &lt;code&gt;import { Name } from 'meteor/package'&lt;/code&gt; 语法中的import {Name}加载所有流星&amp;ldquo; pseudo-globals&amp;rdquo; 。例如：</target>
        </trans-unit>
        <trans-unit id="0c19096759c939c2deb59c4543acfc1ddfaa6521" translate="yes" xml:space="preserve">
          <source>For backwards compatibility with Meteor 1.2 and early releases, Meteor by default makes available directly to your app all symbols referenced in &lt;code&gt;api.export&lt;/code&gt; in any packages you have installed. However, it is recommended that you import these symbols first before using them.</source>
          <target state="translated">为了与Meteor 1.2和早期版本向后兼容，默认情况下，Meteor &lt;code&gt;api.export&lt;/code&gt; 中引用的所有符号直接安装在您的应用程序中，而这些符号在已安装的任何软件包中均有效。但是，建议您先导入这些符号，然后再使用它们。</target>
        </trans-unit>
        <trans-unit id="b5efa68bab8287fb1652bd06f0ec969985d6c7cc" translate="yes" xml:space="preserve">
          <source>For certain applications, for example pagination, you&amp;rsquo;ll want to pass options into the publication to control things like how many documents should be sent to the client. There are some extra considerations to keep in mind for this particular case.</source>
          <target state="translated">对于某些应用程序，例如分页，您需要将选项传递到发布中，以控制诸如应向客户端发送多少文档之类的事情。对于此特定情况，需要牢记一些其他注意事项。</target>
        </trans-unit>
        <trans-unit id="fd1f0a999e8851f6dd247302510ac5f7acc2f7b2" translate="yes" xml:space="preserve">
          <source>For code that runs on the client, the global &lt;code&gt;Meteor.userId()&lt;/code&gt; reactive function will give you the ID of the currently logged in user.</source>
          <target state="translated">对于在客户端上运行的代码，全局 &lt;code&gt;Meteor.userId()&lt;/code&gt; 反应函数将为您提供当前登录用户的ID。</target>
        </trans-unit>
        <trans-unit id="e8941c82fe7784348b0df1ef942bf02807f9865b" translate="yes" xml:space="preserve">
          <source>For detailed information about all of the features Flow Router Extra has to offer, refer to the &lt;a href=&quot;https://github.com/VeliovGroup/flow-router#flowrouter-extra&quot;&gt;Flow Router Extra Documentation&lt;/a&gt;.</source>
          <target state="translated">有关Flow Router Extra必须提供的所有功能的详细信息，请参阅&lt;a href=&quot;https://github.com/VeliovGroup/flow-router#flowrouter-extra&quot;&gt;Flow Router Extra文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="05da61fff1234ddd48184a281bf97f7dafdfe3fe" translate="yes" xml:space="preserve">
          <source>For detailed information about all of the features Flow Router has to offer, refer to the &lt;a href=&quot;https://kadira.io/academy/meteor-routing-guide&quot;&gt;Kadira Meteor routing guide&lt;/a&gt;.</source>
          <target state="translated">有关Flow Router必须提供的所有功能的详细信息，请参阅&lt;a href=&quot;https://kadira.io/academy/meteor-routing-guide&quot;&gt;Kadira Meteor路由指南&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ca5a0d6ac3719d1483547ba26235567c8f6cf689" translate="yes" xml:space="preserve">
          <source>For detailed information about all of the features Iron Router has to offer, refer to the &lt;a href=&quot;https://iron-meteor.github.io/iron-router/&quot;&gt;Iron Router Guide&lt;/a&gt;</source>
          <target state="translated">有关Iron Router必须提供的所有功能的详细信息，请参阅《&lt;a href=&quot;https://iron-meteor.github.io/iron-router/&quot;&gt;Iron Router指南》&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="48c669636c4bc4c437e7e40d53dc912f4797d4f7" translate="yes" xml:space="preserve">
          <source>For each module defined above, it makes sense to co-locate the various auxiliary files with the base JavaScript file. For instance, a Blaze UI component should have its template HTML, JavaScript logic, and CSS rules in the same directory. A JavaScript module with some business logic should be co-located with the unit tests for that module.</source>
          <target state="translated">对于上面定义的每个模块,将各种辅助文件与基础JavaScript文件放在一起是有意义的。例如,一个Blaze UI组件应该把它的模板HTML、JavaScript逻辑和CSS规则放在同一个目录中。一个带有一些业务逻辑的JavaScript模块应该和该模块的单元测试放在一起。</target>
        </trans-unit>
        <trans-unit id="b0136e3434ebe2b4441e7e72b6fcef31a6a55e8b" translate="yes" xml:space="preserve">
          <source>For example in &lt;code&gt;app-not-found.html&lt;/code&gt;:</source>
          <target state="translated">例如在 &lt;code&gt;app-not-found.html&lt;/code&gt; 中：</target>
        </trans-unit>
        <trans-unit id="3d799858ea313a6fb12f6f4a730014fa1744fcb4" translate="yes" xml:space="preserve">
          <source>For example this Cordova whitelist syntax:</source>
          <target state="translated">比如这个Cordova的白名单语法。</target>
        </trans-unit>
        <trans-unit id="9fd0d45557850239a1954273258a5128e8a2a4b5" translate="yes" xml:space="preserve">
          <source>For example, &lt;a href=&quot;#accountsui&quot;&gt;the &lt;code&gt;accounts-ui&lt;/code&gt; package&lt;/a&gt; uses this to display an animation while the login request is being processed.</source>
          <target state="translated">例如，&lt;a href=&quot;#accountsui&quot;&gt;在 &lt;code&gt;accounts-ui&lt;/code&gt; &lt;/a&gt;处理登录请求时，accounts-ui软件包使用它来显示动画。</target>
        </trans-unit>
        <trans-unit id="e87873f2da987898fc0ffeef06ad69f2df128cd5" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;Template.parentData(0)&lt;/code&gt; is equivalent to &lt;code&gt;Template.currentData()&lt;/code&gt;. &lt;code&gt;Template.parentData(2)&lt;/code&gt; is equivalent to &lt;code&gt;{{../..}}&lt;/code&gt; in a template.</source>
          <target state="translated">例如， &lt;code&gt;Template.parentData(0)&lt;/code&gt; 等同于 &lt;code&gt;Template.currentData()&lt;/code&gt; 。 &lt;code&gt;Template.parentData(2)&lt;/code&gt; 等效于模板中的 &lt;code&gt;{{../..}}&lt;/code&gt; }。</target>
        </trans-unit>
        <trans-unit id="8640c408975d4966324d1f32b8f59e23a781fc35" translate="yes" xml:space="preserve">
          <source>For example, executing &lt;code&gt;meteor node&lt;/code&gt; will enter the Node.js &lt;a href=&quot;https://nodejs.org/dist/latest-v4.x/docs/api/repl.html&quot;&gt;Read-Eval-Print-Loop (REPL)&lt;/a&gt; interface and allow you to interactively run JavaScript and see the results.</source>
          <target state="translated">例如，执行 &lt;code&gt;meteor node&lt;/code&gt; 将进入Node.js &lt;a href=&quot;https://nodejs.org/dist/latest-v4.x/docs/api/repl.html&quot;&gt;Read-Eval-Print-Loop（REPL）&lt;/a&gt;界面，并允许您交互式运行JavaScript并查看结果。</target>
        </trans-unit>
        <trans-unit id="566dc7e4713926cae90867a37306dc5eacff8228" translate="yes" xml:space="preserve">
          <source>For example, executing &lt;code&gt;meteor npm install lodash --save&lt;/code&gt; would install &lt;code&gt;lodash&lt;/code&gt; from npm to your &lt;code&gt;node_modules&lt;/code&gt; directory and save its usage in your &lt;a href=&quot;https://docs.npmjs.com/files/package.json&quot;&gt;&lt;code&gt;package.json&lt;/code&gt;&lt;/a&gt; file.</source>
          <target state="translated">例如，执行 &lt;code&gt;meteor npm install lodash --save&lt;/code&gt; 将把 &lt;code&gt;lodash&lt;/code&gt; 从npm 安装到您的 &lt;code&gt;node_modules&lt;/code&gt; 目录中，并将其用法保存在&lt;a href=&quot;https://docs.npmjs.com/files/package.json&quot;&gt; &lt;code&gt;package.json&lt;/code&gt; &lt;/a&gt;文件中。</target>
        </trans-unit>
        <trans-unit id="9fa29970e497049df665d7fa4ef565c0f68a2476" translate="yes" xml:space="preserve">
          <source>For example, here we prepare our Android and iOS hardware permissions for a WebRTC session.</source>
          <target state="translated">例如,这里我们为一个WebRTC会话准备了Android和iOS硬件权限。</target>
        </trans-unit>
        <trans-unit id="b86ffe152961696e9821eee492ea8cec835596cf" translate="yes" xml:space="preserve">
          <source>For example, if a component requires a lot of complicated &lt;a href=&quot;http://d3js.org&quot;&gt;D3&lt;/a&gt; code for drawing graphs, it&amp;rsquo;s likely that that code itself could live in a separate module that&amp;rsquo;s called by the component. That makes it easier to abstract the code later and share it between various components that need to all draw graphs.</source>
          <target state="translated">例如，如果一个组件需要很多复杂的&lt;a href=&quot;http://d3js.org&quot;&gt;D3&lt;/a&gt;代码来绘制图形，则该代码本身很可能可以驻留在该组件调用的单独模块中。这样一来，以后就可以更轻松地抽象代码，并在需要绘制所有图形的各个组件之间共享代码。</target>
        </trans-unit>
        <trans-unit id="a77adffe34fcc02bce31edfd361bac24fa81f5f5" translate="yes" xml:space="preserve">
          <source>For example, if there is a template named &amp;ldquo;foo&amp;rdquo;, &lt;code&gt;{{&amp;gt; Template.dynamic
template=&quot;foo&quot;}}&lt;/code&gt; is equivalent to &lt;code&gt;{{&amp;gt; foo}}&lt;/code&gt; and &lt;code&gt;{{#Template.dynamic template=&quot;foo&quot;}} ... {{/Template.dynamic}}&lt;/code&gt; is equivalent to &lt;code&gt;{{#foo}} ... {{/foo}}&lt;/code&gt;.</source>
          <target state="translated">例如，如果有一个名为&amp;ldquo; foo&amp;rdquo;的模板，则 &lt;code&gt;{{&amp;gt; Template.dynamic template=&quot;foo&quot;}}&lt;/code&gt; 等效于 &lt;code&gt;{{&amp;gt; foo}}&lt;/code&gt; 和 &lt;code&gt;{{#Template.dynamic template=&quot;foo&quot;}} ... {{/Template.dynamic}}&lt;/code&gt; 等效于 &lt;code&gt;{{#foo}} ... {{/foo}}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="86cf62ff62bc1d631a9379c79b98bc20c22267e7" translate="yes" xml:space="preserve">
          <source>For example, in Galaxy, while you wait for your app&amp;rsquo;s log to load, you see a loading state indicating what you might see:</source>
          <target state="translated">例如，在Galaxy中，在等待加载应用程序日志时，您会看到一个加载状态，指示可能会看到的内容：</target>
        </trans-unit>
        <trans-unit id="3cb93cc9fbc0bc78a05e8172f5fd6a76ee0217c6" translate="yes" xml:space="preserve">
          <source>For example, in the Todos example app, we have a &lt;code&gt;ListPage&lt;/code&gt; component, which renders list metadata and the tasks in the list. In order to do so, it needs to &lt;a href=&quot;data-loading#subscriptions&quot;&gt;subscribe&lt;/a&gt; to the &lt;code&gt;todos.inList&lt;/code&gt; publication, check that subscription&amp;rsquo;s readiness, then fetch the list of todos from the &lt;code&gt;Todos&lt;/code&gt; collection.</source>
          <target state="translated">例如，在Todos示例应用程序中，我们有一个 &lt;code&gt;ListPage&lt;/code&gt; 组件，该组件呈现列表元数据和列表中的任务。为了做到这一点，它需要&lt;a href=&quot;data-loading#subscriptions&quot;&gt;订阅&lt;/a&gt;的 &lt;code&gt;todos.inList&lt;/code&gt; 出版物，检查订阅的准备，然后取出从待办事项列表 &lt;code&gt;Todos&lt;/code&gt; 集合。</target>
        </trans-unit>
        <trans-unit id="eef59f3ea5c85e68491a742c6d4c70537b40a9de" translate="yes" xml:space="preserve">
          <source>For example, let&amp;rsquo;s say packages A and B both depend on version 1.1.0 of package X. If a new version of A depends on X@2.0.0, but there is no new version of package B, running &lt;code&gt;meteor update&lt;/code&gt; will not update A, because doing so will break package B.</source>
          <target state="translated">例如，假设软件包A和B都依赖于软件包X的版本1.1.0。如果新版本的A依赖于X@2.0.0，但是没有软件包B的新版本，则运行 &lt;code&gt;meteor update&lt;/code&gt; 将不会更新A，因为这样做会破坏包装B。</target>
        </trans-unit>
        <trans-unit id="5ee1889df2b5586f8f2338c6e8a85c7f8b4855bb" translate="yes" xml:space="preserve">
          <source>For example, let&amp;rsquo;s say you published name:cool-binary-blob from a Mac. If you want people to be able to use cool-binary-blob from Linux, you should log into a Linux machine and then run &lt;code&gt;meteor publish-for-arch name:cool-binary-blob@version&lt;/code&gt;. It will notice that you are on a linux machine, and that there is no Linux-compatible build for your package and publish one.</source>
          <target state="translated">例如，假设您从Mac发布了name：cool-binary-blob。如果希望人们能够使用Linux上的cool-binary-blob，则应登录Linux机器，然后运行 &lt;code&gt;meteor publish-for-arch name:cool-binary-blob@version&lt;/code&gt; 。它将注意到您使用的是Linux机器，并且您的软件包没有Linux兼容的内部版本，因​​此不会发布。</target>
        </trans-unit>
        <trans-unit id="62a5b111a9dfaff38a5ba5283dc2e59ec51fad50" translate="yes" xml:space="preserve">
          <source>For example, the &lt;code&gt;toJSONValue&lt;/code&gt; method for &lt;a href=&quot;#mongo_object_id&quot;&gt;&lt;code&gt;Mongo.ObjectID&lt;/code&gt;&lt;/a&gt; could be:</source>
          <target state="translated">例如， &lt;code&gt;toJSONValue&lt;/code&gt; 为方法&lt;a href=&quot;#mongo_object_id&quot;&gt; &lt;code&gt;Mongo.ObjectID&lt;/code&gt; &lt;/a&gt;可以是：</target>
        </trans-unit>
        <trans-unit id="c10ae88355a18b76c1551618fb9cf80d78810409" translate="yes" xml:space="preserve">
          <source>For example, the files above are arranged in the correct load order. &lt;code&gt;main.html&lt;/code&gt; is loaded second because HTML templates are always loaded first, even if it begins with &lt;code&gt;main.&lt;/code&gt;, since rule 1 has priority over rule 2. However, it will be loaded after &lt;code&gt;nav.html&lt;/code&gt; because rule 2 has priority over rule 5.</source>
          <target state="translated">例如，上面的文件以正确的加载顺序排列。 &lt;code&gt;main.html&lt;/code&gt; 之所以被第二次加载是因为HTML模板总是被首先加载，即使它以 &lt;code&gt;main.&lt;/code&gt; 开头。，因为规则1优先于规则2。但是，由于规则2优先于规则5 ，因此它将在 &lt;code&gt;nav.html&lt;/code&gt; 之后加载。</target>
        </trans-unit>
        <trans-unit id="e4dd27f05c4753c540bb1f7d7ef347987bb67fdb" translate="yes" xml:space="preserve">
          <source>For example, to use the excellent &lt;a href=&quot;http://griddlegriddle.github.io/Griddle/&quot;&gt;Griddle&lt;/a&gt; React package for making tables, you could run</source>
          <target state="translated">例如，要使用出色的&lt;a href=&quot;http://griddlegriddle.github.io/Griddle/&quot;&gt;Griddle&lt;/a&gt; React软件包制作表格，可以运行</target>
        </trans-unit>
        <trans-unit id="6d635e55db8455e0b072cb8bc6954e7477d2016d" translate="yes" xml:space="preserve">
          <source>For example, when called in a user&amp;rsquo;s browser, connections in that browser remain logged in, but any other browsers or DDP clients logged in as that user will be logged out.</source>
          <target state="translated">例如，当在用户的浏览器中调用时，该浏览器中的连接将保持登录状态，但是以该用户身份登录的任何其他浏览器或DDP客户端都将被注销。</target>
        </trans-unit>
        <trans-unit id="3805566eeb73c4d01f62aefc9f499b8715f3648e" translate="yes" xml:space="preserve">
          <source>For example, you can monitor a cursor (which is a reactive data source) and aggregate it into a session variable:</source>
          <target state="translated">例如,你可以监控一个游标(这是一个反应式数据源),并将其聚合到一个会话变量中。</target>
        </trans-unit>
        <trans-unit id="080a2498acd408c847cae567c97b97c7238bb2d4" translate="yes" xml:space="preserve">
          <source>For example, you could write a publication, then later add a secret field to the published collection. Now, the publication would be sending that secret to the client. If you filter the fields on every publication when you first write it, then adding another field won&amp;rsquo;t automatically publish it.</source>
          <target state="translated">例如，您可以编写发布，然后在发布的集合中添加一个秘密字段。现在，发布会将那个秘密发送给客户端。如果您在初次编写时在每个出版物上过滤字段，那么添加另一个字段将不会自动发布。</target>
        </trans-unit>
        <trans-unit id="85a17a9ab408b80980f23d1cc6e06e21d531d614" translate="yes" xml:space="preserve">
          <source>For example: &lt;code&gt;meteor run --port 4000&lt;/code&gt; will run the development server on &lt;code&gt;http://localhost:4000&lt;/code&gt; and the development MongoDB instance on &lt;code&gt;mongodb://localhost:4001&lt;/code&gt;.</source>
          <target state="translated">例如： &lt;code&gt;meteor run --port 4000&lt;/code&gt; 将在 &lt;code&gt;http://localhost:4000&lt;/code&gt; 上运行开发服务器，在 &lt;code&gt;mongodb://localhost:4001&lt;/code&gt; 上运行开发MongoDB实例。</target>
        </trans-unit>
        <trans-unit id="78e6fd4a067693e270265f9ad03e373bb4f449a1" translate="yes" xml:space="preserve">
          <source>For further assistance, consult the documentation for the option you select.</source>
          <target state="translated">如需进一步的帮助,请查阅您所选择的选项的文档。</target>
        </trans-unit>
        <trans-unit id="48807e2ffbc6e66cb853587acc8401737dab4f55" translate="yes" xml:space="preserve">
          <source>For iOS, you can also refer to the &lt;a href=&quot;https://developer.apple.com/library/ios/documentation/UserExperience/Conceptual/MobileHIG/IconMatrix.html&quot;&gt;Icon and image sizes&lt;/a&gt; in the iOS Human Interface Guidelines for more information about the way these different sizes are used.</source>
          <target state="translated">对于iOS，您还可以参考《 iOS人机界面指南》中的&amp;ldquo; &lt;a href=&quot;https://developer.apple.com/library/ios/documentation/UserExperience/Conceptual/MobileHIG/IconMatrix.html&quot;&gt;图标和图像大小&lt;/a&gt; &amp;rdquo;，以获取有关使用这些不同大小的方式的更多信息。</target>
        </trans-unit>
        <trans-unit id="1edee26abee8ad003e87c6f335a9c78a08e364b8" translate="yes" xml:space="preserve">
          <source>For instance for errors in the Todos example app, we create an &lt;code&gt;errors&lt;/code&gt; module that allows us to easily alert a translated error for all of the errors that we can potentially throw from methods:</source>
          <target state="translated">例如，对于Todos示例应用程序中的 &lt;code&gt;errors&lt;/code&gt; ，我们创建了一个错误模块，该模块使我们可以轻松地向翻译后的错误发出可能从方法中抛出的所有错误的警报：</target>
        </trans-unit>
        <trans-unit id="b5fa351a6359e6e17aeb97e6aeed03106869143d" translate="yes" xml:space="preserve">
          <source>For instance, if you are writing a React package, you should not directly depend on &lt;a href=&quot;https://www.npmjs.com/package/react&quot;&gt;&lt;code&gt;react&lt;/code&gt;&lt;/a&gt;, but instead use &lt;code&gt;check-npm-versions&lt;/code&gt; to check the user has installed it:</source>
          <target state="translated">例如，如果您正在编写React软件包，则不应直接依赖&lt;a href=&quot;https://www.npmjs.com/package/react&quot;&gt; &lt;code&gt;react&lt;/code&gt; &lt;/a&gt;，而应使用 &lt;code&gt;check-npm-versions&lt;/code&gt; 来检查用户是否已安装它：</target>
        </trans-unit>
        <trans-unit id="0a88a6384a3e1454ae3e62fb6e41d53f1dbb7ba8" translate="yes" xml:space="preserve">
          <source>For instance, in &amp;ldquo;pure&amp;rdquo; MongoDB you might design the schema so that each list document had a field called &lt;code&gt;todos&lt;/code&gt; which was an array of todo items:</source>
          <target state="translated">例如，在&amp;ldquo;纯&amp;rdquo; MongoDB中，您可以设计模式，以便每个列表文档都有一个名为 &lt;code&gt;todos&lt;/code&gt; 的字段，该字段是todo项的数组：</target>
        </trans-unit>
        <trans-unit id="ccd52b90405eb61b7579e3e76116bcfffacbbd7c" translate="yes" xml:space="preserve">
          <source>For instance, in Galaxy, we use a component explorer called Chromatic to render each component one specification at a time or with all specifications at once.</source>
          <target state="translated">例如,在Galaxy中,我们使用一个名为Chromatic的组件资源管理器来一次渲染每个组件一个规格,或者一次渲染所有规格。</target>
        </trans-unit>
        <trans-unit id="922c719ef9c60481220e51992dfa7bca5a0ef389" translate="yes" xml:space="preserve">
          <source>For instance, in the Todos example app, when creating a new list, the list creation will basically always succeed, so we write:</source>
          <target state="translated">比如在Todos示例应用中,在创建一个新的列表时,列表的创建基本都会成功,所以我们写。</target>
        </trans-unit>
        <trans-unit id="a7255240ff1e7f09fe6219115c2180ff3242ca98" translate="yes" xml:space="preserve">
          <source>For instance, in the case of the &lt;code&gt;Todos_item&lt;/code&gt; sub-component, we need to provide two extra arguments to control the editing state of the item, which would have been a hassle to add if the item was used with a single &lt;code&gt;todo&lt;/code&gt; argument.</source>
          <target state="translated">例如，在 &lt;code&gt;Todos_item&lt;/code&gt; 子组件的情况下，我们需要提供两个额外的参数来控制项目的编辑状态，如果将项目与单个 &lt;code&gt;todo&lt;/code&gt; 参数一起使用，这将很麻烦。</target>
        </trans-unit>
        <trans-unit id="b1f2b7b8dfce76c741fe14ec2be61e8666c8af53" translate="yes" xml:space="preserve">
          <source>For instance, only one todo item can be in the editing state at a time, so the &lt;code&gt;Lists_show&lt;/code&gt; component manages the state of which is edited. When you focus on an item, that item needs to tell the list&amp;rsquo;s component to make it the &amp;ldquo;edited&amp;rdquo; one. To do that, we pass a callback into the &lt;code&gt;Todos_item&lt;/code&gt; component, and the child calls it whenever the state needs to be updated in the parent:</source>
          <target state="translated">例如，一次只能有一个待办事项处于编辑状态，因此 &lt;code&gt;Lists_show&lt;/code&gt; 组件管理其待编辑状态。当您关注某个项目时，该项目需要告诉列表的组成部分使其成为&amp;ldquo;已编辑&amp;rdquo;项目。为此，我们将回调传递到 &lt;code&gt;Todos_item&lt;/code&gt; 组件中，并且当需要在父级中更新状态时，子级会调用它：</target>
        </trans-unit>
        <trans-unit id="f81f18b253fa8cb4f09571d0bd339604f5b81ee3" translate="yes" xml:space="preserve">
          <source>For instance, suppose you have many places in your application where you need an input to blur itself when you click the &amp;ldquo;esc&amp;rdquo; key. If you were building an autocomplete widget that also wanted this functionality, you could compose a &lt;code&gt;blurringInput&lt;/code&gt; inside your &lt;code&gt;autocompleteInput&lt;/code&gt;:</source>
          <target state="translated">例如，假设您在应用程序中有很多地方，当您单击&amp;ldquo; esc&amp;rdquo;键时需要输入以使其自身模糊。如果要构建还需要此功能的自动完成小部件，则可以在 &lt;code&gt;autocompleteInput&lt;/code&gt; 内部编写一个 &lt;code&gt;blurringInput&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="111f242bece144a1b83b659bf3ca03b252908cb8" translate="yes" xml:space="preserve">
          <source>For legacy reasons, some built-in Meteor functions such as &lt;code&gt;check&lt;/code&gt; throw errors with a number in this field.</source>
          <target state="translated">由于遗留原因，一些内置的Meteor功能（例如此字段中带有数字的 &lt;code&gt;check&lt;/code&gt; 抛出错误）。</target>
        </trans-unit>
        <trans-unit id="d5ebb8a6452aaffb1d5be31776a4af5cf4256f24" translate="yes" xml:space="preserve">
          <source>For local collections you can pass a comparator function which receives two document objects, and returns -1 if the first document comes first in order, 1 if the second document comes first, or 0 if neither document comes before the other. This is a Minimongo extension to MongoDB.</source>
          <target state="translated">对于本地集合,你可以传递一个比较器函数,它接收两个文档对象,如果第一个文档按顺序排在前面,则返回-1,如果第二个文档排在前面,则返回1,如果两个文档都没有排在前面,则返回0。这是对MongoDB的Minimongo扩展。</target>
        </trans-unit>
        <trans-unit id="2c1968972ad567249cd3a475220952773e19e79d" translate="yes" xml:space="preserve">
          <source>For more details about the data stored in the user database, read the section below about accessing user data.</source>
          <target state="translated">有关存储在用户数据库中的数据的详细信息,请阅读下面关于访问用户数据的部分。</target>
        </trans-unit>
        <trans-unit id="904a5faf5ea7e5f5e6010a90c693a822d1409c4c" translate="yes" xml:space="preserve">
          <source>For more details using &lt;code&gt;imports&lt;/code&gt; with packages see &lt;a href=&quot;https://guide.meteor.com/using-packages.html&quot;&gt;Using Packages&lt;/a&gt; in the Meteor Guide.</source>
          <target state="translated">有关将 &lt;code&gt;imports&lt;/code&gt; 与软件包一起&lt;a href=&quot;https://guide.meteor.com/using-packages.html&quot;&gt;使用的&lt;/a&gt;更多详细信息，请参阅《流星指南》中的&amp;ldquo; 使用软件包 &amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="0b43c25265faefdf94be8052443941685348d3ec" translate="yes" xml:space="preserve">
          <source>For more details, read the &lt;a href=&quot;http://eslint.org/docs/user-guide/getting-started&quot;&gt;Getting Started&lt;/a&gt; directions from the ESLint website.</source>
          <target state="translated">有关更多详细信息，请阅读ESLint网站上的《&lt;a href=&quot;http://eslint.org/docs/user-guide/getting-started&quot;&gt;入门指南》&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ab3731f71191bf3f8b17f15af1c7db6d9645da41" translate="yes" xml:space="preserve">
          <source>For more examples and details on importing styles and using &lt;code&gt;@imports&lt;/code&gt; with packages see the &lt;a href=&quot;https://guide.meteor.com/using-packages.html#npm-styles&quot;&gt;Using Packages&lt;/a&gt; article.</source>
          <target state="translated">有关导入样式以及对包使用 &lt;code&gt;@imports&lt;/code&gt; 的更多示例和详细信息，请参阅&amp;ldquo; &lt;a href=&quot;https://guide.meteor.com/using-packages.html#npm-styles&quot;&gt;使用包&amp;rdquo;一&lt;/a&gt;文。</target>
        </trans-unit>
        <trans-unit id="46c4e192939b2e56d0db0d6784e9de1a6631c8bd" translate="yes" xml:space="preserve">
          <source>For more information about &lt;code&gt;npm install&lt;/code&gt;, check out the &lt;a href=&quot;https://docs.npmjs.com/getting-started/installing-npm-packages-locally&quot;&gt;official documentation&lt;/a&gt;.</source>
          <target state="translated">有关 &lt;code&gt;npm install&lt;/code&gt; 的更多信息，请查阅&lt;a href=&quot;https://docs.npmjs.com/getting-started/installing-npm-packages-locally&quot;&gt;官方文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a8639b763dbebaf146bc810497bc0d4f75d0754e" translate="yes" xml:space="preserve">
          <source>For more information about how Meteor interacts with the application cache, see the &lt;a href=&quot;https://github.com/meteor/meteor/wiki/AppCache&quot;&gt;AppCache page&lt;/a&gt; in the Meteor wiki.</source>
          <target state="translated">有关Meteor如何与应用程序缓存交互的更多信息，请参阅Meteor Wiki中的&lt;a href=&quot;https://github.com/meteor/meteor/wiki/AppCache&quot;&gt;AppCache页面&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="63674f40877f723f0dccce03be5204d7c2e5d291" translate="yes" xml:space="preserve">
          <source>For more ways to import styles, see the &lt;a href=&quot;build-tool#css-importing&quot;&gt;Build System&lt;/a&gt; article.</source>
          <target state="translated">有关导入样式的更多方法，请参见&amp;ldquo; &lt;a href=&quot;build-tool#css-importing&quot;&gt;构建系统&amp;rdquo;&lt;/a&gt;文章。</target>
        </trans-unit>
        <trans-unit id="92fa2e426b695443e27efec8114f18b9996ccf0a" translate="yes" xml:space="preserve">
          <source>For mouse events, the number of the mouse button (1=left, 2=middle, 3=right). For key events, a character or key code.</source>
          <target state="translated">对于鼠标事件,鼠标按钮的编号(1=左,2=中,3=右)。对于按键事件,一个字符或按键代码。</target>
        </trans-unit>
        <trans-unit id="1c9ae35f62e5a912e691433e0631b9770410af09" translate="yes" xml:space="preserve">
          <source>For now, you can not run this while a development server is running. Quit all running meteor applications before running this.</source>
          <target state="translated">目前,你不能在开发服务器运行时运行这个。在运行这个之前,请先退出所有正在运行的流星应用程序。</target>
        </trans-unit>
        <trans-unit id="31b62f37743481ae4492eec4b009460411828f37" translate="yes" xml:space="preserve">
          <source>For now, you must already have your application running locally with &lt;code&gt;meteor run&lt;/code&gt;. This will be easier in the future.</source>
          <target state="translated">现在，您必须已经将应用程序在本地运行，并 &lt;code&gt;meteor run&lt;/code&gt; 了meteor run。将来这会更容易。</target>
        </trans-unit>
        <trans-unit id="a3652dfb8488c0d56351ed1adf1a16f71d675c45" translate="yes" xml:space="preserve">
          <source>For numbers or strings, use their value as the identification key.</source>
          <target state="translated">对于数字或字符串,使用其值作为识别键。</target>
        </trans-unit>
        <trans-unit id="925725292b1e71c5f7cdc9bb79036284a38dfef5" translate="yes" xml:space="preserve">
          <source>For object and array session values, you cannot use &lt;code&gt;Session.equals&lt;/code&gt;; instead, you need to use the &lt;code&gt;underscore&lt;/code&gt; package and write &lt;code&gt;_.isEqual(Session.get(key), value)&lt;/code&gt;.</source>
          <target state="translated">对于对象和数组会话值，不能使用 &lt;code&gt;Session.equals&lt;/code&gt; ; 相反，您需要使用 &lt;code&gt;underscore&lt;/code&gt; 包并编写 &lt;code&gt;_.isEqual(Session.get(key), value)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ef941d7fed6b8e4b8d9464578fd82b4485d6c9c9" translate="yes" xml:space="preserve">
          <source>For objects with an &lt;code&gt;_id&lt;/code&gt; field, use that field as the identification key</source>
          <target state="translated">对于具有 &lt;code&gt;_id&lt;/code&gt; 字段的对象，请将该字段用作标识键</target>
        </trans-unit>
        <trans-unit id="0aba4e822cbd347e0b93f9cfed0443c04b8cc033" translate="yes" xml:space="preserve">
          <source>For objects with no &lt;code&gt;_id&lt;/code&gt; field, use the array index as the identification key. In this case, appends are fast but prepends are slower.</source>
          <target state="translated">对于没有 &lt;code&gt;_id&lt;/code&gt; 字段的对象，请使用数组索引作为标识键。在这种情况下，添加速度很快，但添加速度较慢。</target>
        </trans-unit>
        <trans-unit id="01bd8d95de37d1835084d2030406dca2654c3195" translate="yes" xml:space="preserve">
          <source>For packages, you can enable &lt;code&gt;modules&lt;/code&gt; by adding &lt;code&gt;api.use('modules')&lt;/code&gt; to the &lt;code&gt;Package.onUse&lt;/code&gt; or &lt;code&gt;Package.onTest&lt;/code&gt; sections of your &lt;code&gt;package.js&lt;/code&gt; file.</source>
          <target state="translated">对于包，可以通过将 &lt;code&gt;api.use('modules')&lt;/code&gt; 添加到 &lt;code&gt;package.js&lt;/code&gt; 文件的 &lt;code&gt;Package.onUse&lt;/code&gt; 或 &lt;code&gt;Package.onTest&lt;/code&gt; 部分来启用 &lt;code&gt;modules&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7c05b5c6768dc923c7b8f8397d6194df77a22108" translate="yes" xml:space="preserve">
          <source>For reactive data sources that create many internal Dependencies, this function is useful to determine whether a particular Dependency is still tracking any dependency relationships or if it can be cleaned up to save memory.</source>
          <target state="translated">对于创建了许多内部Dependency的反应式数据源来说,这个函数很有用,可以确定某个Dependency是否还在跟踪任何依赖关系,或者是否可以清理以节省内存。</target>
        </trans-unit>
        <trans-unit id="e4d0179ed7d8797a8095d6663f2f196d9b51bb61" translate="yes" xml:space="preserve">
          <source>For similar reasons to the above, it&amp;rsquo;s better to use &lt;code&gt;{{#each todo in todos}}&lt;/code&gt; rather than the older &lt;code&gt;{{#each todos}}&lt;/code&gt;. The second sets the entire data context of its children to a single &lt;code&gt;todo&lt;/code&gt; object, and makes it difficult to access any context from outside of the block.</source>
          <target state="translated">出于与上述类似的原因，最好使用 &lt;code&gt;{{#each todo in todos}}&lt;/code&gt; 而不是较旧的 &lt;code&gt;{{#each todos}}&lt;/code&gt; 。第二种方法将其子级对象的整个数据上下文设置为单个 &lt;code&gt;todo&lt;/code&gt; 对象，并使得很难从块外部访问任何上下文。</target>
        </trans-unit>
        <trans-unit id="692287c894f343be47ecfb90daf9465a6ee9f891" translate="yes" xml:space="preserve">
          <source>For some apps, the off-the-shelf login templates provided by the various &lt;code&gt;useraccounts&lt;/code&gt; UI packages will work as-is, but most apps will want to customize some of the presentation. There&amp;rsquo;s a simple way to do that using the template replacement functionality of the &lt;code&gt;aldeed:template-extension&lt;/code&gt; package.</source>
          <target state="translated">对于某些应用程序，各种用户 &lt;code&gt;useraccounts&lt;/code&gt; UI软件包提供的现成登录模板将按原样工作，但是大多数应用程序将希望自定义某些演示文稿。使用 &lt;code&gt;aldeed:template-extension&lt;/code&gt; 包的模板替换功能有一种简单的方法。</target>
        </trans-unit>
        <trans-unit id="7184d81fb0dd16fea395b7b9f656a76d78250e72" translate="yes" xml:space="preserve">
          <source>For the &lt;code&gt;accounts-facebook&lt;/code&gt; package to pick up these keys, you need to add them to the service configuration collection in the database. Here&amp;rsquo;s how you do that:</source>
          <target state="translated">为了使 &lt;code&gt;accounts-facebook&lt;/code&gt; 软件包能够选择这些密钥，您需要将它们添加到数据库中的服务配置集合中。这是您的操作方式：</target>
        </trans-unit>
        <trans-unit id="9bba1a1f464744305cd2c6b64e5b016d4506a268" translate="yes" xml:space="preserve">
          <source>For the fast rebuilds between the Isobuild process runs, plugins can implement on-disk caching. If a plugin implements the &lt;code&gt;setDiskCacheDirectory&lt;/code&gt; method, it will be called from time to time with a new path on disk where the plugin can write its offline cache. The folder is correctly reset when the plugin is rebuilt or cache should be invalidated for any reason (for example, picked package versions set has changed).</source>
          <target state="translated">为了在Isobuild进程运行之间进行快速重建，插件可以实现磁盘缓存。如果插件实现了 &lt;code&gt;setDiskCacheDirectory&lt;/code&gt; 方法，则将不时地使用磁盘上的新路径调用该方法，该插件可在其中写入其离线缓存。重建插件或由于任何原因使缓存无效时（例如，已选择的软件包版本集已更改），文件夹均已正确重置。</target>
        </trans-unit>
        <trans-unit id="de206915a2c5c624f4cee75931ba411b67345bde" translate="yes" xml:space="preserve">
          <source>For this reason, developers tend to try and get staging as close as possible to production. This means that all the steps we outline below about production deployment, should, if possible, also be followed for your staging server.</source>
          <target state="translated">出于这个原因,开发人员倾向于尝试让暂存尽可能地接近生产。这意味着我们在下面概述的所有关于生产部署的步骤,如果可能的话,也应该在你的暂存服务器上遵循。</target>
        </trans-unit>
        <trans-unit id="0388c6b514f53ff5daf6df4b67cfa29d434d521f" translate="yes" xml:space="preserve">
          <source>Force an immediate reconnection attempt if the client is not connected to the server.</source>
          <target state="translated">如果客户端没有连接到服务器,强制立即重新连接。</target>
        </trans-unit>
        <trans-unit id="038614e3c37183d93a56aebe7bd19632bd773735" translate="yes" xml:space="preserve">
          <source>Forcibly change the password for a user.</source>
          <target state="translated">强行更改用户的密码。</target>
        </trans-unit>
        <trans-unit id="08c7933553087fc033b0817ef0326a7f136d138b" translate="yes" xml:space="preserve">
          <source>Forcing SSL</source>
          <target state="translated">强制SSL</target>
        </trans-unit>
        <trans-unit id="c6018a326bef2f0001fc5a6513c61ed5af6e990b" translate="yes" xml:space="preserve">
          <source>From that entrypoint, you can &lt;code&gt;import&lt;/code&gt; other files within your package, &lt;a href=&quot;structure&quot;&gt;just as you would in an application&lt;/a&gt;.</source>
          <target state="translated">从该入口点，您可以在包中 &lt;code&gt;import&lt;/code&gt; 其他文件，&lt;a href=&quot;structure&quot;&gt;就像在application中一样&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="35d198578ebab50ddb10a6e0607499cd045917ab" translate="yes" xml:space="preserve">
          <source>From the client&amp;rsquo;s perspective, data published like this doesn&amp;rsquo;t look any different&amp;mdash;there&amp;rsquo;s actually no way for the client to know the difference as the DDP messages are the same. So even if you are connecting to, and mirroring, some esoteric data source, on the client it&amp;rsquo;ll appear like any other Mongo collection.</source>
          <target state="translated">从客户端的角度来看，这样发布的数据看起来没有什么不同-由于DDP消息相同，客户端实际上没有办法知道区别。因此，即使您正在连接并镜像某些深奥的数据源，在客户端上，它也会像任何其他Mongo集合一样出现。</target>
        </trans-unit>
        <trans-unit id="4664d5f9f0bcd9bde2772988dec0026e8a3f529b" translate="yes" xml:space="preserve">
          <source>From this point on, the process for building the app archive and submitting it to the App Store is the same as it would be for any other iOS app. Please refer to &lt;a href=&quot;https://developer.apple.com/library/ios/documentation/IDEs/Conceptual/AppDistributionGuide/SubmittingYourApp/SubmittingYourApp.html&quot;&gt;Apple&amp;rsquo;s documentation&lt;/a&gt; for further details.</source>
          <target state="translated">从现在开始，构建应用程序存档并将其提交到App Store的过程与其他任何iOS应用程序相同。有关更多详细信息，请参阅&lt;a href=&quot;https://developer.apple.com/library/ios/documentation/IDEs/Conceptual/AppDistributionGuide/SubmittingYourApp/SubmittingYourApp.html&quot;&gt;Apple的文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="32062cdab1018d3389efff35af89eafa35fd0a11" translate="yes" xml:space="preserve">
          <source>From this point on, the process for submitting the app to the Play Store is the same as it would be for any other Android app. &lt;code&gt;&amp;lt;your-app-name&amp;gt;.apk&lt;/code&gt; is the APK to upload to the store. Learn more by visiting &lt;a href=&quot;https://play.google.com/apps/publish&quot;&gt;https://play.google.com/apps/publish&lt;/a&gt;.</source>
          <target state="translated">从现在开始，将应用提交到Play商店的过程与其他任何Android应用的过程相同。 &lt;code&gt;&amp;lt;your-app-name&amp;gt;.apk&lt;/code&gt; 是要上传到商店的APK。访问&lt;a href=&quot;https://play.google.com/apps/publish&quot;&gt;https://play.google.com/apps/publish&lt;/a&gt;了解更多信息。</target>
        </trans-unit>
        <trans-unit id="0fe3752e01186e544e6f977a182c0156112153b2" translate="yes" xml:space="preserve">
          <source>From within your test entry point, you can import other files as you would in the package proper.</source>
          <target state="translated">在你的测试入口点,你可以像在软件包中那样导入其他文件。</target>
        </trans-unit>
        <trans-unit id="9b7feb2c711fd05c31bc63ffc267c4b2069c8fa8" translate="yes" xml:space="preserve">
          <source>Full-app integration test</source>
          <target state="translated">全应用集成测试</target>
        </trans-unit>
        <trans-unit id="69c40f62f30db857db5eaab1aa564e3b1174aa70" translate="yes" xml:space="preserve">
          <source>Function Returning a Template</source>
          <target state="translated">功能返回模板</target>
        </trans-unit>
        <trans-unit id="e991c5df2a66b6d1f35524f20dc6ca51c2ef02d9" translate="yes" xml:space="preserve">
          <source>Function called on the server each time a client subscribes. Inside the function, &lt;code&gt;this&lt;/code&gt; is the publish handler object, described below. If the client passed arguments to &lt;code&gt;subscribe&lt;/code&gt;, the function is called with the same arguments.</source>
          <target state="translated">每次客户端订阅时在服务器上调用的函数。在函数内部， &lt;code&gt;this&lt;/code&gt; 是发布处理程序对象，如下所述。如果客户端传递了要 &lt;code&gt;subscribe&lt;/code&gt; 参数，则会使用相同的参数调用该函数。</target>
        </trans-unit>
        <trans-unit id="ab30367062ed38b819b6bd1301fab2dab601fb15" translate="yes" xml:space="preserve">
          <source>Function to be called on invalidation. Receives one argument, the computation that was invalidated.</source>
          <target state="translated">无效时调用的函数。接收一个参数,即被无效的计算。</target>
        </trans-unit>
        <trans-unit id="f75f7b175aeae18fab78229982832b49ec813ef4" translate="yes" xml:space="preserve">
          <source>Function to be called on stop. Receives one argument, the computation that was stopped.</source>
          <target state="translated">停止时调用的函数。接收一个参数,即停止的计算。</target>
        </trans-unit>
        <trans-unit id="9eecea60a57a913127e41f958771d29bb8370567" translate="yes" xml:space="preserve">
          <source>Function to call. It will be called with three arguments: the document, a 0-based index, and &lt;em&gt;cursor&lt;/em&gt; itself.</source>
          <target state="translated">调用函数。将使用三个参数来调用它：文档，基于0的索引和&lt;em&gt;游标&lt;/em&gt;本身。</target>
        </trans-unit>
        <trans-unit id="1f01a35ef81a85bbaf12fb2bdb81b4424b156a30" translate="yes" xml:space="preserve">
          <source>Functions are passed in an object with a &lt;code&gt;timeToReset&lt;/code&gt; field that specifies the number of milliseconds until the next method or subscription is allowed to run. The function must return a string of the error message.</source>
          <target state="translated">函数在带有 &lt;code&gt;timeToReset&lt;/code&gt; 字段的对象中传递，该字段指定直到允许运行下一个方法或订阅之前的毫秒数。该函数必须返回错误消息的字符串。</target>
        </trans-unit>
        <trans-unit id="7101fa2236726e5ffedbc9bd088c9d67d592afa7" translate="yes" xml:space="preserve">
          <source>Functions scheduled by multiple calls to &lt;code&gt;afterFlush&lt;/code&gt; are guaranteed to run in the order that &lt;code&gt;afterFlush&lt;/code&gt; was called. Functions are guaranteed to be called at a time when there are no invalidated computations that need rerunning. This means that if an &lt;code&gt;afterFlush&lt;/code&gt; function invalidates a computation, that computation will be rerun before any other &lt;code&gt;afterFlush&lt;/code&gt; functions are called.</source>
          <target state="translated">计划通过多次调用功能 &lt;code&gt;afterFlush&lt;/code&gt; 被保证的顺序运行 &lt;code&gt;afterFlush&lt;/code&gt; 被调用。当没有无效的计算需要重新运行时，保证可以同时调用函数。这意味着，如果 &lt;code&gt;afterFlush&lt;/code&gt; 函数使计算无效，则将在调用其他 &lt;code&gt;afterFlush&lt;/code&gt; 函数之前重新运行该计算。</target>
        </trans-unit>
        <trans-unit id="a3ed1756955e8fb700c8ad1cd3c2099e6c8356f2" translate="yes" xml:space="preserve">
          <source>Functions that look at a proposed modification to the database and return true if it should be allowed.</source>
          <target state="translated">查看对数据库的修改建议并返回是否允许修改的函数。</target>
        </trans-unit>
        <trans-unit id="1601343ed0c0908b54f8d593c4fab5d49b5d7ded" translate="yes" xml:space="preserve">
          <source>Functions that look at a proposed modification to the database and return true if it should be denied, even if an &lt;a href=&quot;#allow&quot;&gt;allow&lt;/a&gt; rule says otherwise.</source>
          <target state="translated">查看提议的数据库修改并返回true的函数，即使应拒绝，即使&lt;a href=&quot;#allow&quot;&gt;允许&lt;/a&gt;规则另有规定也是如此。</target>
        </trans-unit>
        <trans-unit id="1369aef754a288504cae91fdf0e4546b28a1eab9" translate="yes" xml:space="preserve">
          <source>Functions to call to deliver the result set as it changes</source>
          <target state="translated">当结果集发生变化时,要调用的函数来传递它。</target>
        </trans-unit>
        <trans-unit id="d1540a59de4e97bee463ad0bcbe7f3426d0647c8" translate="yes" xml:space="preserve">
          <source>Further customization</source>
          <target state="translated">进一步定制</target>
        </trans-unit>
        <trans-unit id="74f668f937db12449aed292d11ada61b07df8e23" translate="yes" xml:space="preserve">
          <source>Galaxy (recommended)</source>
          <target state="translated">银河系统(建议)</target>
        </trans-unit>
        <trans-unit id="4aaa1aebdd09f54b7e519ca9699b2fe6b94288f5" translate="yes" xml:space="preserve">
          <source>Galaxy is a distributed system that runs on Amazon AWS. If you understand what it takes to run Meteor apps correctly and just how Galaxy works, you&amp;rsquo;ll come to appreciate Galaxy&amp;rsquo;s value, and that it will save you a lot of time and trouble. Most large Meteor apps run on Galaxy today, and many of them have switched from custom solutions they used prior to Galaxy&amp;rsquo;s launch.</source>
          <target state="translated">Galaxy是在Amazon AWS上运行的分布式系统。如果您了解正确运行Meteor应用程序需要什么以及Galaxy的工作原理，您将体会到Galaxy的价值，它将为您节省很多时间和麻烦。如今，大多数大型Meteor应用程序都可在Galaxy上运行，其中许多应用已从在Galaxy推出之前使用的自定义解决方案切换。</target>
        </trans-unit>
        <trans-unit id="68842ecf882f2e0d638cab0ddd492168313e28d8" translate="yes" xml:space="preserve">
          <source>Galaxy&amp;rsquo;s UI provides a detailed logging system, which can be invaluable to determine which action it is causing that extra load, or to generally debug other application issues:</source>
          <target state="translated">Galaxy的用户界面提供了详细的日志记录系统，该系统对于确定导致额外负载的操作或对其他应用程序问题进行调试非常有用：</target>
        </trans-unit>
        <trans-unit id="7fa1b2a120eaad1ebe4d23bd85a924f19536ace3" translate="yes" xml:space="preserve">
          <source>Gather source files from the app folder or read &lt;code&gt;package.js&lt;/code&gt; file for a package.</source>
          <target state="translated">收集来自app文件夹的源文件或读取 &lt;code&gt;package.js&lt;/code&gt; 文件。</target>
        </trans-unit>
        <trans-unit id="6a8732106f0d73883a3181c9b6c803738428b3d6" translate="yes" xml:space="preserve">
          <source>General tips for structuring your UI code, independent of your view rendering technology.</source>
          <target state="translated">关于构建UI代码的一般提示,与视图渲染技术无关。</target>
        </trans-unit>
        <trans-unit id="5afcb319e4d49bb0e1598f6a7a21ef1756d02202" translate="yes" xml:space="preserve">
          <source>Generally speaking, all production HTTP requests should go over HTTPS, and all WebSocket data should be sent over WSS.</source>
          <target state="translated">一般来说,所有的生产HTTP请求都应通过HTTPS,所有的WebSocket数据都应通过WSS发送。</target>
        </trans-unit>
        <trans-unit id="a2ab98638d4c956db4c074c04577335fcaae24a8" translate="yes" xml:space="preserve">
          <source>Generally, you&amp;rsquo;ll assign &lt;code&gt;Mongo.Collection&lt;/code&gt; objects in your app to global variables. You can only create one &lt;code&gt;Mongo.Collection&lt;/code&gt; object for each underlying Mongo collection.</source>
          <target state="translated">通常，您将在应用程序 &lt;code&gt;Mongo.Collection&lt;/code&gt; 对象分配给全局变量。您只能为每个基础Mongo集合创建一个 &lt;code&gt;Mongo.Collection&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="54178574f84730820557ce9ee88682719f9c3cf7" translate="yes" xml:space="preserve">
          <source>Generate an absolute URL pointing to the application. The server reads from the &lt;code&gt;ROOT_URL&lt;/code&gt; environment variable to determine where it is running. This is taken care of automatically for apps deployed to Galaxy, but must be provided when using &lt;code&gt;meteor build&lt;/code&gt;.</source>
          <target state="translated">生成指向应用程序的绝对URL。服务器从 &lt;code&gt;ROOT_URL&lt;/code&gt; 环境变量读取以确定它在哪里运行。对于部署到Galaxy的应用程序，这是自动完成的，但是在使用 &lt;code&gt;meteor build&lt;/code&gt; 时必须提供。</target>
        </trans-unit>
        <trans-unit id="5ece031934a20729660e43bc70730a99ea96243b" translate="yes" xml:space="preserve">
          <source>Generating a Key</source>
          <target state="translated">生成密钥</target>
        </trans-unit>
        <trans-unit id="a86496ffd04d2c8a216966f5a9a7efec2426ff7d" translate="yes" xml:space="preserve">
          <source>Generating test data</source>
          <target state="translated">生成测试数据</target>
        </trans-unit>
        <trans-unit id="ee817fcbc3f2895afc5a622f6a4df46b1897da34" translate="yes" xml:space="preserve">
          <source>Get direct access to Meteor&amp;rsquo;s &lt;a href=&quot;using-atmosphere-packages.md#package-namespacing&quot;&gt;package namespacing&lt;/a&gt; and package global exports without having to explicitly use ES2015 &lt;code&gt;import&lt;/code&gt;</source>
          <target state="translated">直接访问Meteor的&lt;a href=&quot;using-atmosphere-packages.md#package-namespacing&quot;&gt;程序包命名空间&lt;/a&gt;和程序包全局导出，而无需显式使用ES2015 &lt;code&gt;import&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4eba3bedb8c432d3a9b4bd31acf49de30834821c" translate="yes" xml:space="preserve">
          <source>Get help on meteor command line usage. Running &lt;code&gt;meteor help&lt;/code&gt; by itself will list the common meteor commands. Running &lt;code&gt;meteor help &lt;i&gt;command&lt;/i&gt;&lt;/code&gt; will print detailed help about the command.</source>
          <target state="translated">获取有关流星命令行用法的帮助。单独运行 &lt;code&gt;meteor help&lt;/code&gt; 将列出常见的流星命令。运行 &lt;code&gt;meteor help &lt;i&gt;command&lt;/i&gt;&lt;/code&gt; 将打印有关该命令的详细帮助。</target>
        </trans-unit>
        <trans-unit id="33d591acc7d54734b210564428ddd36923ebde32" translate="yes" xml:space="preserve">
          <source>Get the Method simulation return value to get IDs of inserted documents.</source>
          <target state="translated">获取方法模拟返回值,以获取插入文档的ID。</target>
        </trans-unit>
        <trans-unit id="a1da5be72547f3ebc151c68e80decde636f96c9c" translate="yes" xml:space="preserve">
          <source>Get the absolute path to the static server asset. Note that assets are read-only.</source>
          <target state="translated">获取静态服务器资产的绝对路径。注意资产是只读的。</target>
        </trans-unit>
        <trans-unit id="c725aaa6a7c0084f3c65575e152395c8912723bb" translate="yes" xml:space="preserve">
          <source>Get the current connection status. A reactive data source.</source>
          <target state="translated">获取当前连接状态。一个反应式数据源。</target>
        </trans-unit>
        <trans-unit id="c056162fb881100ef25c56973f53bb701d61d157" translate="yes" xml:space="preserve">
          <source>Get the current user id, or &lt;code&gt;null&lt;/code&gt; if no user is logged in. A reactive data source.</source>
          <target state="translated">获取当前用户ID，如果没有用户登录，则返回 &lt;code&gt;null&lt;/code&gt; 。反应性数据源。</target>
        </trans-unit>
        <trans-unit id="00d9d5bcd0ef575f22e97283ecf8578bcb2e7432" translate="yes" xml:space="preserve">
          <source>Get the current user record, or &lt;code&gt;null&lt;/code&gt; if no user is logged in. A reactive data source.</source>
          <target state="translated">获取当前用户记录，如果没有用户登录，则返回 &lt;code&gt;null&lt;/code&gt; 。反应式数据源。</target>
        </trans-unit>
        <trans-unit id="fe8bcf55cb673b5e7b34d041caeca8b9eef86563" translate="yes" xml:space="preserve">
          <source>Get the value of a session variable. If inside a &lt;a href=&quot;#reactivity&quot;&gt;reactive computation&lt;/a&gt;, invalidate the computation the next time the value of the variable is changed by &lt;a href=&quot;#session_set&quot;&gt;&lt;code&gt;Session.set&lt;/code&gt;&lt;/a&gt;. This returns a clone of the session value, so if it's an object or an array, mutating the returned value has no effect on the value stored in the session.</source>
          <target state="translated">获取会话变量的值。如果在&lt;a href=&quot;#reactivity&quot;&gt;反应式计算中&lt;/a&gt;，则下次由&lt;a href=&quot;#session_set&quot;&gt; &lt;code&gt;Session.set&lt;/code&gt; &lt;/a&gt;更改变量的值时，使计算无效。这将返回会话值的克隆，因此，如果它是对象或数组，则对返回的值进行更改不会影响会话中存储的值。</target>
        </trans-unit>
        <trans-unit id="748c2b5d743834fa86c8dfa6205ff4bf992cda40" translate="yes" xml:space="preserve">
          <source>Gets either the current View, or the View enclosing the given DOM element.</source>
          <target state="translated">获取当前的视图或包围给定DOM元素的视图。</target>
        </trans-unit>
        <trans-unit id="010b85ad56b34c34c7c2a3b2436c740e30428ed5" translate="yes" xml:space="preserve">
          <source>Getting Started</source>
          <target state="translated">入门</target>
        </trans-unit>
        <trans-unit id="526e8ca8f2f57c6895a91f4a1ae8e5f7f1bfc4a2" translate="yes" xml:space="preserve">
          <source>Getting started with ES2015 and Meteor</source>
          <target state="translated">开始使用ES2015和Meteor</target>
        </trans-unit>
        <trans-unit id="2ddc65a794f9ed08b4a5130bee6e870b9da4e8e2" translate="yes" xml:space="preserve">
          <source>Git URL example:</source>
          <target state="translated">Git URL的例子。</target>
        </trans-unit>
        <trans-unit id="ca731d392068a4788b6152238bea22545dc559d1" translate="yes" xml:space="preserve">
          <source>Git URLs in the format described &lt;a href=&quot;https://docs.npmjs.com/files/package.json#git-urls-as-dependencies&quot;&gt;here&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://docs.npmjs.com/files/package.json#git-urls-as-dependencies&quot;&gt;此处&lt;/a&gt;描述的格式的Git URL</target>
        </trans-unit>
        <trans-unit id="50c954fa653eb0f34f315db4b9a538a7e16e09cb" translate="yes" xml:space="preserve">
          <source>GitHub with &lt;code&gt;accounts-github&lt;/code&gt;</source>
          <target state="translated">GitHub &lt;code&gt;accounts-github&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="109c4560b23e63ac5efdc5cf5b7f029b10988531" translate="yes" xml:space="preserve">
          <source>GitHub: &lt;a href=&quot;http://developer.github.com/v3/oauth/#scopes&quot;&gt;http://developer.github.com/v3/oauth/#scopes&lt;/a&gt;</source>
          <target state="translated">GitHub：&lt;a href=&quot;http://developer.github.com/v3/oauth/#scopes&quot;&gt;http&lt;/a&gt; : //developer.github.com/v3/oauth/#scopes</target>
        </trans-unit>
        <trans-unit id="76d5449aa231a1c58ff379c9aa66902d542abe94" translate="yes" xml:space="preserve">
          <source>Github, Google, Meetup, Meteor Developer Accounts, Weibo</source>
          <target state="translated">Github,Google,Meetup,Meteor开发者账号,微博。</target>
        </trans-unit>
        <trans-unit id="0e3b723a4f4f8a8ae76be0aef4e0d6a47aca0196" translate="yes" xml:space="preserve">
          <source>Give users of this package access to another package (by passing in the string &lt;code&gt;packagename&lt;/code&gt;) or a collection of packages (by passing in an array of strings [&lt;code&gt;packagename1&lt;/code&gt;, &lt;code&gt;packagename2&lt;/code&gt;]</source>
          <target state="translated">允许该软件包的用户访问另一个软件包（通过传递字符串 &lt;code&gt;packagename&lt;/code&gt; ）或软件包的集合（通过传递字符串数组[ &lt;code&gt;packagename1&lt;/code&gt; ， &lt;code&gt;packagename2&lt;/code&gt; ]</target>
        </trans-unit>
        <trans-unit id="694d853e7d8eb1b64075e36d3a2f39bf2a48a33b" translate="yes" xml:space="preserve">
          <source>Given that the user ID of the current user is available through this context, you should never pass the ID of the current user as an argument to a Method. This would allow any client of your app to pass any user ID they want. Let&amp;rsquo;s look at an example:</source>
          <target state="translated">鉴于可以通过此上下文获得当前用户的用户ID，因此永远不要将当前用户的ID作为参数传递给Method。这将允许您的应用程序的任何客户端传递他们想要的任何用户ID。让我们看一个例子：</target>
        </trans-unit>
        <trans-unit id="12001bc02193503211b9e261e3be87dac5148428" translate="yes" xml:space="preserve">
          <source>Given the points above, we recommend that all Meteor apps should use Methods to accept data input from the client, and restrict the arguments accepted by each Method as tightly as possible.</source>
          <target state="translated">鉴于以上几点,我们建议所有Meteor应用都应该使用Methods来接受来自客户端的数据输入,并尽可能严格地限制每个Methods所接受的参数。</target>
        </trans-unit>
        <trans-unit id="70b73089949bacaa4a01ae997fe44ebf7f931e70" translate="yes" xml:space="preserve">
          <source>Global Helpers</source>
          <target state="translated">全球援助者</target>
        </trans-unit>
        <trans-unit id="a29091fcf08acaedc8eb769d5813722e6471a77e" translate="yes" xml:space="preserve">
          <source>Global data stores</source>
          <target state="translated">全球数据存储</target>
        </trans-unit>
        <trans-unit id="de222792693a691ff0c5bfab1ec28d45cc9fc400" translate="yes" xml:space="preserve">
          <source>Global helper</source>
          <target state="translated">全球助手</target>
        </trans-unit>
        <trans-unit id="9f34cf7bcf6e94a7d0ab119e9dab8affc29d35b3" translate="yes" xml:space="preserve">
          <source>Global subscriptions</source>
          <target state="translated">全球订阅</target>
        </trans-unit>
        <trans-unit id="fe15f4a3b9eb372fea69e780297a686c1ab51ebe" translate="yes" xml:space="preserve">
          <source>Goals of the project</source>
          <target state="translated">项目的目标</target>
        </trans-unit>
        <trans-unit id="bacc0d69b4322bc6fe1e8add41ac213ce371c6d7" translate="yes" xml:space="preserve">
          <source>Google with &lt;code&gt;accounts-google&lt;/code&gt;</source>
          <target state="translated">谷歌 &lt;code&gt;accounts-google&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="14ee815bc4884cc91079e1e64a53da46eecd65a6" translate="yes" xml:space="preserve">
          <source>Google: &lt;a href=&quot;https://developers.google.com/identity/protocols/googlescopes&quot;&gt;https://developers.google.com/identity/protocols/googlescopes&lt;/a&gt;</source>
          <target state="translated">Google：&lt;a href=&quot;https://developers.google.com/identity/protocols/googlescopes&quot;&gt;https&lt;/a&gt;：//developers.google.com/identity/protocols/googlescopes</target>
        </trans-unit>
        <trans-unit id="bf073fae640ded81eeb7a4cee70faff4a623c16c" translate="yes" xml:space="preserve">
          <source>Guide</source>
          <target state="translated">Guide</target>
        </trans-unit>
        <trans-unit id="ea88e95b9f94f091499bf80b93dd2375fa565ff0" translate="yes" xml:space="preserve">
          <source>Guide development</source>
          <target state="translated">指导发展</target>
        </trans-unit>
        <trans-unit id="6bfde79d3b52bed3855da6aee794325bdd0103c1" translate="yes" xml:space="preserve">
          <source>Guide: Blaze</source>
          <target state="translated">指南。火焰</target>
        </trans-unit>
        <trans-unit id="ff1308bf21ec56b2b427d3871e8296a2c61e5b1f" translate="yes" xml:space="preserve">
          <source>Guide: Build</source>
          <target state="translated">指南。构建</target>
        </trans-unit>
        <trans-unit id="f165a201fd01f78717b61c39cf577967d531ded8" translate="yes" xml:space="preserve">
          <source>Guide: Data</source>
          <target state="translated">指南:日期</target>
        </trans-unit>
        <trans-unit id="435664d8dd73d42849ca51b0d4c40f7afe7c56e6" translate="yes" xml:space="preserve">
          <source>Guide: Production</source>
          <target state="translated">指南。生产</target>
        </trans-unit>
        <trans-unit id="c01c0d896c8717f790b67f155627d28d648b678f" translate="yes" xml:space="preserve">
          <source>Guide: View</source>
          <target state="translated">指南。查看</target>
        </trans-unit>
        <trans-unit id="b37d1e80768ce8bfccd845f2e99adbf5e58796f9" translate="yes" xml:space="preserve">
          <source>HTML Dialect</source>
          <target state="translated">HTML方言</target>
        </trans-unit>
        <trans-unit id="5085f2ba2063e38550d15d143693d941bb545fe0" translate="yes" xml:space="preserve">
          <source>HTML emails</source>
          <target state="translated">HTML邮件</target>
        </trans-unit>
        <trans-unit id="392e8b9619d1399ed592dbda0aa0bdb81ff6856d" translate="yes" xml:space="preserve">
          <source>HTML files in a Meteor application are treated quite a bit differently from a server-side framework. Meteor scans all the HTML files in your directory for three top-level elements: &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt;, and &lt;code&gt;&amp;lt;template&amp;gt;&lt;/code&gt;. The head and body sections are separately concatenated into a single head and body, which are transmitted to the client on initial page load.</source>
          <target state="translated">流星应用程序中的HTML文件与服务器端框架有很大不同。流星扫描目录中的所有HTML文件中的三个顶级元素： &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; ， &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; 和 &lt;code&gt;&amp;lt;template&amp;gt;&lt;/code&gt; 。头和主体部分分别连接成一个头和主体，并在初始页面加载时传输到客户端。</target>
        </trans-unit>
        <trans-unit id="72a57c5112915d68e540b3e73548298eea2674a6" translate="yes" xml:space="preserve">
          <source>HTML template files are &lt;strong&gt;always&lt;/strong&gt; loaded before everything else</source>
          <target state="translated">HTML模板文件&lt;strong&gt;总是先&lt;/strong&gt;加载</target>
        </trans-unit>
        <trans-unit id="f40b27d6b8b9a4fc3827264c1da16a04ecf4d094" translate="yes" xml:space="preserve">
          <source>HTTP</source>
          <target state="translated">HTTP</target>
        </trans-unit>
        <trans-unit id="1f0c185e250a94b7afe62438a34e9a8919c319f9" translate="yes" xml:space="preserve">
          <source>HTTP basic authentication string of the form &lt;code&gt;&quot;username:password&quot;&lt;/code&gt;</source>
          <target state="translated">HTTP基本身份验证字符串，格式为 &lt;code&gt;&quot;username:password&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6d6e54155b83da6ea29e714ec3d6a67ddda031df" translate="yes" xml:space="preserve">
          <source>HTTP_FORWARDED_COUNT</source>
          <target state="translated">HTTP_FORWARDED_COUNT</target>
        </trans-unit>
        <trans-unit id="0ff95a68349ac5719cbe822be8e2a9ba9e81d9c0" translate="yes" xml:space="preserve">
          <source>Handling errors</source>
          <target state="translated">处理错误</target>
        </trans-unit>
        <trans-unit id="584cf27b699d9457620179a5387d801f7ba8351f" translate="yes" xml:space="preserve">
          <source>Have a well defined way to ship different code for client and server, enabling different behavior in each context</source>
          <target state="translated">有一个定义良好的方法来为客户端和服务器发送不同的代码,使每个上下文中的行为不同。</target>
        </trans-unit>
        <trans-unit id="f0a263faf09c6928162c621d01daa6ddea956746" translate="yes" xml:space="preserve">
          <source>Having a consistent style means that it&amp;rsquo;s easier to adopt standard tools for error checking. For example, if you adopt a convention that you must always use &lt;code&gt;let&lt;/code&gt; or &lt;code&gt;const&lt;/code&gt; instead of &lt;code&gt;var&lt;/code&gt;, you can now use a tool to ensure all of your variables are scoped the way you expect. That means you can avoid bugs where variables act in unexpected ways. Also, by enforcing that all variables are declared before use, you can easily catch typos before even running any code!</source>
          <target state="translated">具有一致的样式意味着更容易采用标准工具进行错误检查。例如，如果采用必须始终使用 &lt;code&gt;let&lt;/code&gt; 或 &lt;code&gt;const&lt;/code&gt; 而不是 &lt;code&gt;var&lt;/code&gt; 的约定，则现在可以使用一种工具来确保所有变量的作用域均符合您的预期。这意味着您可以避免那些变量以意外方式起作用的错误。此外，通过强制在使用前声明所有变量，您甚至可以在运行任何代码之前轻松捕获错别字！</target>
        </trans-unit>
        <trans-unit id="a1a2b3f35ab00ab3fb3a832a80b83cdaf0592d87" translate="yes" xml:space="preserve">
          <source>Heavy CoffeeScript users, please let us know how this arrangement works for you, whether &lt;code&gt;share&lt;/code&gt; is helpful for you, and anything else you&amp;rsquo;d like to see changed.</source>
          <target state="translated">大量使用CoffeeScript的用户，请告诉我们这种安排如何为您工作， &lt;code&gt;share&lt;/code&gt; 是否对您有帮助，以及您想看到的其他任何变化。</target>
        </trans-unit>
        <trans-unit id="71bfa60b06c751b549dfa608bed89dce9177c4af" translate="yes" xml:space="preserve">
          <source>Helper Arguments</source>
          <target state="translated">助手论据</target>
        </trans-unit>
        <trans-unit id="dc1f49c10715971e9d013ce60e7f82d216122794" translate="yes" xml:space="preserve">
          <source>Helper defined on the current component</source>
          <target state="translated">在当前组件上定义的帮助程序</target>
        </trans-unit>
        <trans-unit id="66705d703f7a2f4cfa2768aba4c5d97e0a610903" translate="yes" xml:space="preserve">
          <source>Helpers can accept positional and keyword arguments:</source>
          <target state="translated">助手可以接受位置参数和关键字参数。</target>
        </trans-unit>
        <trans-unit id="f606af98d3fda823ee4e02606188ad04bfc3336f" translate="yes" xml:space="preserve">
          <source>Helpers on &lt;code&gt;Template.body&lt;/code&gt; are only available in the &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; tags of your app. To register a global helper, use &lt;a href=&quot;templates#Template-registerHelper&quot;&gt;Template.registerHelper&lt;/a&gt;. Event maps on &lt;code&gt;Template.body&lt;/code&gt; don&amp;rsquo;t apply to elements added to the body via &lt;code&gt;Blaze.render&lt;/code&gt;, jQuery, or the DOM API, or to the body element itself. To handle events on the body, window, or document, use jQuery or the DOM API.</source>
          <target state="translated">&lt;code&gt;Template.body&lt;/code&gt; 上的帮助程序仅在您应用的 &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; 标记中可用。要注册全局助手，请使用&lt;a href=&quot;templates#Template-registerHelper&quot;&gt;Template.registerHelper&lt;/a&gt;。 &lt;code&gt;Template.body&lt;/code&gt; 上的事件映射不适用于通过 &lt;code&gt;Blaze.render&lt;/code&gt; ，jQuery或DOM API 添加到主体的元素，也不适用于body元素本身。要处理正文，窗口或文档上的事件，请使用jQuery或DOM API。</target>
        </trans-unit>
        <trans-unit id="e5246cd17978b86288a03ea9a792c469ffec54e6" translate="yes" xml:space="preserve">
          <source>Here are a couple of screenshots of &lt;code&gt;accounts-ui&lt;/code&gt; so you know what to expect:</source>
          <target state="translated">这是 &lt;code&gt;accounts-ui&lt;/code&gt; 的几个屏幕截图，所以您知道会发生什么：</target>
        </trans-unit>
        <trans-unit id="f48e2388b980916b8ed5a1115d6f5dab642002be" translate="yes" xml:space="preserve">
          <source>Here are a few of those methods:</source>
          <target state="translated">下面是其中的几种方法。</target>
        </trans-unit>
        <trans-unit id="122f48652eb654604aa8f40dbd193ba3643fafb4" translate="yes" xml:space="preserve">
          <source>Here are some example URLs and the resulting &lt;code&gt;params&lt;/code&gt; and &lt;code&gt;queryParams&lt;/code&gt;:</source>
          <target state="translated">以下是一些示例URL以及生成的 &lt;code&gt;params&lt;/code&gt; 和 &lt;code&gt;queryParams&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="8089ef0ac1ba3a3d90910291c8064cadc6cade07" translate="yes" xml:space="preserve">
          <source>Here are some patterns that are useful to keep in mind when building the user interface of your Meteor application.</source>
          <target state="translated">这里有一些模式,在构建Meteor应用程序的用户界面时,这些模式是有用的。</target>
        </trans-unit>
        <trans-unit id="2dcebaa7ae6f51f37f9ffdb4f73c5b848d80a690" translate="yes" xml:space="preserve">
          <source>Here at Meteor, we strongly believe that JavaScript is the best language to build web applications, for a variety of reasons. JavaScript is constantly improving, and the standards around ES2015 have really brought together the JavaScript community. Here are our recommendations about how to use ES2015 JavaScript in your app today.</source>
          <target state="translated">在Meteor,我们坚信JavaScript是构建Web应用的最佳语言,原因有很多。JavaScript在不断地改进,围绕ES2015的标准已经真正将JavaScript社区聚集在一起。以下是我们关于今天如何在你的应用中使用ES2015 JavaScript的建议。</target>
        </trans-unit>
        <trans-unit id="f71402dbd1216ae9cf759713e28e73c0e95baeec" translate="yes" xml:space="preserve">
          <source>Here is a basic example of &lt;code&gt;onPageLoad&lt;/code&gt; usage on the server:</source>
          <target state="translated">这是服务器上 &lt;code&gt;onPageLoad&lt;/code&gt; 用法的基本示例：</target>
        </trans-unit>
        <trans-unit id="65537fb9cd918f037957e1954de8cf28f515877d" translate="yes" xml:space="preserve">
          <source>Here is a list of the Babel transformers that are currently enabled:</source>
          <target state="translated">以下是当前启用的巴别变压器列表。</target>
        </trans-unit>
        <trans-unit id="ce9747381012c031c940584519e19bcf1ce3b6e6" translate="yes" xml:space="preserve">
          <source>Here is a more complicated example of &lt;code&gt;onPageLoad&lt;/code&gt; usage on the server, involving the &lt;a href=&quot;https://www.styled-components.com/docs/advanced#server-side-rendering&quot;&gt;&lt;code&gt;styled-components&lt;/code&gt;&lt;/a&gt; npm package:</source>
          <target state="translated">这是服务器上 &lt;code&gt;onPageLoad&lt;/code&gt; 用法的一个更复杂的示例，涉及&lt;a href=&quot;https://www.styled-components.com/docs/advanced#server-side-rendering&quot;&gt; &lt;code&gt;styled-components&lt;/code&gt; &lt;/a&gt; npm包：</target>
        </trans-unit>
        <trans-unit id="509e3b432dc6e032e4fe33905cf2847a7758f7a9" translate="yes" xml:space="preserve">
          <source>Here is a simple block helper that wraps its content in a div:</source>
          <target state="translated">这里有一个简单的块助手,它将其内容包裹在div中。</target>
        </trans-unit>
        <trans-unit id="b5cc21ccac7e95544ffe6831f0bb2aa87867a0cd" translate="yes" xml:space="preserve">
          <source>Here is an example of implementing &lt;code&gt;#unless&lt;/code&gt; in terms of &lt;code&gt;#if&lt;/code&gt; (ignoring for the moment that &lt;code&gt;unless&lt;/code&gt; is a built-in directive):</source>
          <target state="translated">下面是实现的一个例子 &lt;code&gt;#unless&lt;/code&gt; 来讲 &lt;code&gt;#if&lt;/code&gt; （暂时忽略那 &lt;code&gt;unless&lt;/code&gt; 是一个内置的指令）：</target>
        </trans-unit>
        <trans-unit id="99b57bf1c2eb8500e43bf390896c3d292a46ad27" translate="yes" xml:space="preserve">
          <source>Here the &lt;code&gt;todo&lt;/code&gt; is passed as argument to the &lt;code&gt;todoArgs&lt;/code&gt; helper, then the output is passed into the &lt;code&gt;Todos_item&lt;/code&gt; template.</source>
          <target state="translated">在这里，将 &lt;code&gt;todo&lt;/code&gt; 作为参数传递给 &lt;code&gt;todoArgs&lt;/code&gt; 帮助器，然后将输出传递给 &lt;code&gt;Todos_item&lt;/code&gt; 模板。</target>
        </trans-unit>
        <trans-unit id="71564680d4662152ecd029a6af15b1de99dd3a59" translate="yes" xml:space="preserve">
          <source>Here we wrote a little utility (which could be abstracted into a general package) to wait for all the subscriptions which are created by the route change (the &lt;code&gt;todos.inList&lt;/code&gt; subscription in this case) to become ready before checking their data.</source>
          <target state="translated">在这里，我们编写了一个小实用程序（可以抽象为通用程序包）来等待由路由更改创建的所有订阅（在本例中为 &lt;code&gt;todos.inList&lt;/code&gt; 订阅）在检查其数据之前准备就绪。</target>
        </trans-unit>
        <trans-unit id="5e28fa6148e604c17f82fb6c77eaea161163e7f0" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s a code snippet to add to your server code which disables client-side updates on a collection. This will make sure no other part of your app can use &lt;code&gt;allow&lt;/code&gt;:</source>
          <target state="translated">这是要添加到服务器代码中的代码段，该代码段将禁用集合上的客户端更新。这将确保您的应用程序的其他任何部分都不能使用 &lt;code&gt;allow&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="54e66c5d3e6fd46629bc99740b47035d52d22a43" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s a complete list of login providers for which Meteor actively maintains core packages:</source>
          <target state="translated">这是Meteor为其主动维护核心软件包的登录提供程序的完整列表：</target>
        </trans-unit>
        <trans-unit id="ec268f472c952354bc36644807f1d8595b86f53e" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s a list of the environment variables you can provide to your application.</source>
          <target state="translated">这是可以提供给应用程序的环境变量的列表。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
