<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="meteor">
    <body>
      <group id="meteor">
        <trans-unit id="0eae0f347d8525842b158b584cb38dde66950cf7" translate="yes" xml:space="preserve">
          <source>There are a variety of services out there, and we recommend that you select one of the below services depending on your requirements:</source>
          <target state="translated">服务有很多种,我们建议你根据自己的要求选择以下服务之一。</target>
        </trans-unit>
        <trans-unit id="a77ca7c834708bc27abce528eb4fe0c5dca2d9d7" translate="yes" xml:space="preserve">
          <source>There are a variety of states that such a list can be in:</source>
          <target state="translated">这样的名单可以有多种状态。</target>
        </trans-unit>
        <trans-unit id="0a8fd0cbe5c5ba2ada837c704e9b11a68c8df87e" translate="yes" xml:space="preserve">
          <source>There are also two Spacebars built-in helpers, &lt;code&gt;{{#each}}&lt;/code&gt;, and &lt;code&gt;{{#with}}&lt;/code&gt;, which we do not recommend using (see prefer using each-in). These block helpers change the data context within a template, which can be difficult to reason about.</source>
          <target state="translated">另外，我们不建议使用两个内置的空格键内置帮助器 &lt;code&gt;{{#each}}&lt;/code&gt; 和 &lt;code&gt;{{#with}}&lt;/code&gt; （请参阅首选使用each-in）。这些块帮助程序会更改模板中的数据上下文，这可能很难推理。</target>
        </trans-unit>
        <trans-unit id="de9db9f125309420b9eaf551aa5225901471c409" translate="yes" xml:space="preserve">
          <source>There are several load order rules. They are &lt;em&gt;applied sequentially&lt;/em&gt; to all applicable files in the application, in the priority given below:</source>
          <target state="translated">有几个加载顺序规则。它们&lt;em&gt;将按&lt;/em&gt;以下优先级&lt;em&gt;顺序应用于&lt;/em&gt;应用程序中所有适用的文件：</target>
        </trans-unit>
        <trans-unit id="643b5d33eec2cb6ebea1e10e6cb8fe7af80e31a3" translate="yes" xml:space="preserve">
          <source>There are several options. Choose the ones that makes sense for your app. You may depend on more than one and set up different test commands for different situations.</source>
          <target state="translated">有几个选项。选择对你的应用有意义的。您可以依赖多个选项,并为不同情况设置不同的测试命令。</target>
        </trans-unit>
        <trans-unit id="47cd41854f1f21c6492e42cc51ca1b7e984fef53" translate="yes" xml:space="preserve">
          <source>There are some advantages of splitting your application in this way:</source>
          <target state="translated">用这种方式拆分你的应用程序有一些优势。</target>
        </trans-unit>
        <trans-unit id="ec780adbc9edba54f7c0e2a6046d003ce4834206" translate="yes" xml:space="preserve">
          <source>There are some other considerations that you should make before you deploy your application to a production host. Remember that you should if possible do these steps for both your production &lt;em&gt;and&lt;/em&gt; staging environments.</source>
          <target state="translated">在将应用程序部署到生产主机之前，还应考虑其他一些注意事项。请记住，如果可能，您应该在生产&lt;em&gt;和&lt;/em&gt;暂存环境中都执行这些步骤。</target>
        </trans-unit>
        <trans-unit id="16ce97471d90d7ab84abc40ca0cbd444d1605cef" translate="yes" xml:space="preserve">
          <source>There are three CSS pre-processors that are particularly popular right now:</source>
          <target state="translated">现在特别流行的CSS前处理器有三种。</target>
        </trans-unit>
        <trans-unit id="b92e0c816137fbce8e368720b2f3e96dc5c961b2" translate="yes" xml:space="preserve">
          <source>There are three main locations in the HTML where template tags are allowed:</source>
          <target state="translated">在HTML中,允许使用模板标签的位置主要有三个。</target>
        </trans-unit>
        <trans-unit id="f97831b97e3142dfd1638a82832efb146598bd0a" translate="yes" xml:space="preserve">
          <source>There are three types of build plugins supported by Meteor today:</source>
          <target state="translated">目前Meteor支持的构建插件有三种类型。</target>
        </trans-unit>
        <trans-unit id="b55369396dc38842070e110e69cfabbaea6e8805" translate="yes" xml:space="preserve">
          <source>There are two main kinds of test driver packages:</source>
          <target state="translated">测试驱动包主要有两种。</target>
        </trans-unit>
        <trans-unit id="dfa4cc6275a1be273aa99621fffa8ed93477a3e1" translate="yes" xml:space="preserve">
          <source>There are two main options for routing with Meteor and React. Either way, we recommend consulting our &lt;a href=&quot;routing&quot;&gt;Routing article&lt;/a&gt; for some general principles of routing in Meteor before writing your app.</source>
          <target state="translated">使用Meteor和React进行路由有两个主要选项。无论哪种方式，我们都建议您在编写应用程序之前查阅&amp;ldquo; &lt;a href=&quot;routing&quot;&gt;路由&amp;rdquo;文章，&lt;/a&gt;了解Meteor中路由的一些一般原则。</target>
        </trans-unit>
        <trans-unit id="0219a31195ba33c6e3e859d4f4599fb46f8cf025" translate="yes" xml:space="preserve">
          <source>There are two main ways to configure your application outside of the code of the app itself:</source>
          <target state="translated">在应用程序本身的代码之外,有两种主要的方式来配置你的应用程序。</target>
        </trans-unit>
        <trans-unit id="cdb30cded6eb49815f7639ec528590f00713c5bb" translate="yes" xml:space="preserve">
          <source>There are two principal ways to do it: on the developer&amp;rsquo;s machine before allowing them to push code to the central repository, and on a dedicated CI server after each push. Both techniques are useful, and both require running tests in a commandline-only fashion.</source>
          <target state="translated">有两种主要的实现方法：在允许开发人员将代码推送到中央存储库之前，在开发人员的计算机上；以及在每次推送之后在专用CI服务器上。两种技术都很有用，并且都需要以仅命令行方式运行测试。</target>
        </trans-unit>
        <trans-unit id="43c4918fa555b203c351dfdd223a82fcdeb657a3" translate="yes" xml:space="preserve">
          <source>There are two styles of pagination that are commonly used, a &amp;ldquo;page-by-page&amp;rdquo; style&amp;mdash;where you show only one page of results at a time, starting at some offset (which the user can control), and &amp;ldquo;infinite-scroll&amp;rdquo; style, where you show an increasing number of pages of items, as the user moves through the list (this is the typical &amp;ldquo;feed&amp;rdquo; style user interface).</source>
          <target state="translated">共有两种分页样式，一种是&amp;ldquo;逐页&amp;rdquo;样式-您一次只显示一页结果，从某个偏移量开始（用户可以控制），而&amp;ldquo;无限滚动&amp;rdquo; &amp;rdquo;样式，随着用户在列表中移动，您将显示越来越多的项目页面（这是典型的&amp;ldquo;提要&amp;rdquo;样式用户界面）。</target>
        </trans-unit>
        <trans-unit id="c6e479eb712d65001efc0c3274b79c7089c641d5" translate="yes" xml:space="preserve">
          <source>There are two types of minifiers one can add: a minifier processing JavaScript (registered extensions: &lt;code&gt;['js']&lt;/code&gt;) and a minifier processing CSS (extensions: &lt;code&gt;['css']&lt;/code&gt;).</source>
          <target state="translated">可以添加两种类型的minifier：处理JavaScript的minifier（注册的扩展名： &lt;code&gt;['js']&lt;/code&gt; ）和处理CSS的minifier（扩展名： &lt;code&gt;['css']&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="cf02af84cef61722b1c0fd9d70c286fa884e8629" translate="yes" xml:space="preserve">
          <source>There are types of rendering logic that appear related to the route but which also seem related to user interface rendering. A classic example is authorization; for instance, you may want to render a login form for some subset of your pages if the user is not yet logged in.</source>
          <target state="translated">有一些类型的渲染逻辑看起来与路由有关,但看起来也与用户界面渲染有关。一个典型的例子是授权;例如,如果用户还没有登录,你可能想为你的某些页面子集渲染一个登录表单。</target>
        </trans-unit>
        <trans-unit id="feab03640f5b214fd02eb8bb24522c7d32ba70f6" translate="yes" xml:space="preserve">
          <source>There have been several articles about the potential pitfalls of accepting MongoDB update operators from the client, in particular the &lt;a href=&quot;https://www.discovermeteor.com/blog/allow-deny-security-challenge/&quot;&gt;Allow &amp;amp; Deny Security Challenge&lt;/a&gt; and its &lt;a href=&quot;https://www.discovermeteor.com/blog/allow-deny-challenge-results/&quot;&gt;results&lt;/a&gt;, both on the Discover Meteor blog.</source>
          <target state="translated">Discover Meteor博客上已有几篇文章介绍了从客户端接受MongoDB更新操作员的潜在陷阱，特别是&amp;ldquo; &lt;a href=&quot;https://www.discovermeteor.com/blog/allow-deny-security-challenge/&quot;&gt;允许与拒绝安全挑战&amp;rdquo;&lt;/a&gt;及其&lt;a href=&quot;https://www.discovermeteor.com/blog/allow-deny-challenge-results/&quot;&gt;结果&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f6637cc8dcff95fec1db52157e25b45ccd9b5eb4" translate="yes" xml:space="preserve">
          <source>There is a case where you might &lt;em&gt;need&lt;/em&gt; to use CommonJS, even if your project has the &lt;code&gt;ecmascript&lt;/code&gt; package: if you want to conditionally include a module. &lt;code&gt;import&lt;/code&gt; statements must be at top-level scope, so they cannot be within an &lt;code&gt;if&lt;/code&gt; block. If you&amp;rsquo;re writing a common file, loaded on both client and server, you might want to import a module in only one or the other environment:</source>
          <target state="translated">在 &lt;code&gt;ecmascript&lt;/code&gt; 情况下，即使您的项目具有ecmascript程序包，也可能&lt;em&gt;需要&lt;/em&gt;使用CommonJS ：如果要有条件地包括模块。 &lt;code&gt;import&lt;/code&gt; 语句必须在顶级范围内，因此它们不能在 &lt;code&gt;if&lt;/code&gt; 块内。如果要编写在客户端和服务器上都加载的通用文件，则可能只想在一个或另一个环境中导入模块：</target>
        </trans-unit>
        <trans-unit id="9b6e1bfc4ca9347027386872848599f05e98d3f9" translate="yes" xml:space="preserve">
          <source>There is a complementary function &lt;code&gt;Template.instance().subscriptionsReady()&lt;/code&gt; which returns true when all of the subscriptions called with &lt;code&gt;this.subscribe&lt;/code&gt; are ready.</source>
          <target state="translated">有一个补充函数 &lt;code&gt;Template.instance().subscriptionsReady()&lt;/code&gt; ，当用 &lt;code&gt;this.subscribe&lt;/code&gt; 调用的所有订阅都准备就绪时，它返回true 。</target>
        </trans-unit>
        <trans-unit id="97410b7e4ad6f74d2c57319fad31065551487f09" translate="yes" xml:space="preserve">
          <source>There is a core package called &lt;code&gt;caching-compiler&lt;/code&gt; that implements most of the common logic of keeping both in-memory and on-disk caches. The easiest way to implement caching correctly is to subclass the &lt;code&gt;CachingCompiler&lt;/code&gt; or &lt;code&gt;MultiFileCachingCompiler&lt;/code&gt; class from this package in your build plugin. &lt;code&gt;CachingCompiler&lt;/code&gt; is for compilers that consider each file completely independently; &lt;code&gt;MultiFileCachingCompiler&lt;/code&gt; is for compilers that allow files to reference each other. To get this class in your plugin namespace, add a dependency to the plugin definition:</source>
          <target state="translated">有一个名为 &lt;code&gt;caching-compiler&lt;/code&gt; 的核心程序包，它实现了保留内存和磁盘缓存的大多数通用逻辑。正确实现缓存的最简单方法是从构建插件中的此包中 &lt;code&gt;CachingCompiler&lt;/code&gt; 或 &lt;code&gt;MultiFileCachingCompiler&lt;/code&gt; 类。 &lt;code&gt;CachingCompiler&lt;/code&gt; 适用于完全独立考虑每个文件的编译器； &lt;code&gt;MultiFileCachingCompiler&lt;/code&gt; 用于允许文件相互引用的编译器。要在您的插件名称空间中获得此类，请在插件定义中添加一个依赖项：</target>
        </trans-unit>
        <trans-unit id="6d7ba477b67bd7644f00634976ebf7c00089618a" translate="yes" xml:space="preserve">
          <source>There is a package for logging in with Weibo, but it is no longer being actively maintained.</source>
          <target state="translated">有一个用微博登录的包,但已经不再主动维护。</target>
        </trans-unit>
        <trans-unit id="0675137be3d2503602c9c45a075ffbecacf390da" translate="yes" xml:space="preserve">
          <source>There is a special top-level directory named &lt;code&gt;cordova-build-override/&lt;/code&gt; that allows you to override, in an ad-hoc way, parts of your Cordova project that Meteor generates for you in the &lt;code&gt;.meteor/local/cordova-build&lt;/code&gt; directory. The entire file tree of this directory will be &lt;code&gt;cp -R&lt;/code&gt; (copied overwriting existing files) to the Cordova project right before the build and compilation step.</source>
          <target state="translated">有一个名为 &lt;code&gt;cordova-build-override/&lt;/code&gt; 的特殊顶级目录，它允许您临时覆盖Meteor在 &lt;code&gt;.meteor/local/cordova-build&lt;/code&gt; 目录中为您生成的Cordova项目的某些部分。在构建和编译步骤之前，此目录的整个文件树将是Cordova项目的 &lt;code&gt;cp -R&lt;/code&gt; （复制覆盖现有文件）。</target>
        </trans-unit>
        <trans-unit id="251b75c3cf94838235667d95e75c2d48cb410ab8" translate="yes" xml:space="preserve">
          <source>There is a third way to use a collection in Meteor. On the client or server, if you create a collection in one of these two ways:</source>
          <target state="translated">在Meteor中还有第三种使用集合的方式。在客户端或服务器上,如果你用这两种方式之一创建一个集合。</target>
        </trans-unit>
        <trans-unit id="184bcfb237dc3a9a373f09cead584292fd3ae177" translate="yes" xml:space="preserve">
          <source>There is no need to use Android Studio if you prefer a stand-alone install. Just make sure you install the most recent versions of the &lt;a href=&quot;http://developer.android.com/sdk/index.html#Other&quot;&gt;Android SDK Tools&lt;/a&gt; and download the required &lt;a href=&quot;http://developer.android.com/sdk/installing/adding-packages.html&quot;&gt;additional packages&lt;/a&gt; yourself using the &lt;a href=&quot;http://developer.android.com/tools/help/sdk-manager.html&quot;&gt;Android SDK Manager&lt;/a&gt;.</source>
          <target state="translated">如果您喜欢独立安装，则无需使用Android Studio。只要确保您安装了最新版本的&lt;a href=&quot;http://developer.android.com/sdk/index.html#Other&quot;&gt;Android SDK工具，&lt;/a&gt;然后使用&lt;a href=&quot;http://developer.android.com/tools/help/sdk-manager.html&quot;&gt;Android SDK Manager&lt;/a&gt;自己下载所需的&lt;a href=&quot;http://developer.android.com/sdk/installing/adding-packages.html&quot;&gt;其他软件包即可&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="60536baf67b087ae397279b17bac6d9f9583412b" translate="yes" xml:space="preserve">
          <source>There is no need to use Android Studio if you prefer a stand-alone install. Just make sure you install the most recent versions of the &lt;a href=&quot;https://developer.android.com/sdk/index.html#Other&quot;&gt;Android SDK Tools&lt;/a&gt; and download the required &lt;a href=&quot;https://developer.android.com/sdk/installing/adding-packages.html&quot;&gt;additional packages&lt;/a&gt; yourself using the &lt;a href=&quot;https://developer.android.com/tools/help/sdk-manager.html&quot;&gt;Android SDK Manager&lt;/a&gt;.</source>
          <target state="translated">如果您喜欢独立安装，则无需使用Android Studio。只要确保您安装了最新版本的&lt;a href=&quot;https://developer.android.com/sdk/index.html#Other&quot;&gt;Android SDK工具，&lt;/a&gt;然后使用&lt;a href=&quot;https://developer.android.com/tools/help/sdk-manager.html&quot;&gt;Android SDK Manager&lt;/a&gt;自己下载所需的&lt;a href=&quot;https://developer.android.com/sdk/installing/adding-packages.html&quot;&gt;其他软件包即可&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6fe6efa47a0fe8274a5583e2a7b872695d5c6d1d" translate="yes" xml:space="preserve">
          <source>There is no way to make a package-scope variable from a &lt;code&gt;.coffee&lt;/code&gt; file other than exporting it. We couldn&amp;rsquo;t figure out a way to make this fit naturally inside the CoffeeScript language. If you want to use package-scope variables with CoffeeScript, one way is to make a short &lt;code&gt;.js&lt;/code&gt; file that declares all of your package-scope variables. They can then be used and assigned to from &lt;code&gt;.coffee&lt;/code&gt; files.</source>
          <target state="translated">除了导出文件之外，没有其他方法可以从 &lt;code&gt;.coffee&lt;/code&gt; 文件中生成package-scope变量。我们无法找到一种使之自然适合CoffeeScript语言的方法。如果要在CoffeeScript中使用包范围变量，一种方法是制作一个简短的 &lt;code&gt;.js&lt;/code&gt; 文件，该文件声明所有包范围变量。然后可以使用它们并将其分配给 &lt;code&gt;.coffee&lt;/code&gt; 文件。</target>
        </trans-unit>
        <trans-unit id="d1f89804adfbd1890343bdde871e3f79d9613a1d" translate="yes" xml:space="preserve">
          <source>There is ongoing work in the Cordova project that will improve this situation and make it easier for plugins to specify their platform dependencies, so Cordova can determine compatible versions.</source>
          <target state="translated">在Cordova项目中正在进行的工作将改善这种情况,并使插件更容易指定其平台依赖性,以便Cordova可以确定兼容版本。</target>
        </trans-unit>
        <trans-unit id="1bfb2dcddd69bdf56e8fea78278201a4bbf2ca9f" translate="yes" xml:space="preserve">
          <source>There&amp;rsquo;s a lot of scope for better isolation and testing utilities.</source>
          <target state="translated">更好的隔离和测试实用程序还有很多范围。</target>
        </trans-unit>
        <trans-unit id="904c13513264628b49aa329ab4057be303f110f9" translate="yes" xml:space="preserve">
          <source>There&amp;rsquo;s a tempting existing field called &lt;code&gt;profile&lt;/code&gt; that is added by default when a new user registers. This field was historically intended to be used as a scratch pad for user-specific data - maybe their image avatar, name, intro text, etc. Because of this, &lt;strong&gt;the &lt;code&gt;profile&lt;/code&gt; field on every user is automatically writeable by that user from the client&lt;/strong&gt;. It&amp;rsquo;s also automatically published to the client for that particular user.</source>
          <target state="translated">新用户注册时，默认情况下会添加一个诱人的名为 &lt;code&gt;profile&lt;/code&gt; 的现有字段。从历史上看，该字段旨在用作用户特定数据（可能是他们的图像头像，姓名，介绍文字等）的暂存区。因此，&lt;strong&gt;每个用户&lt;/strong&gt;&lt;strong&gt;的 &lt;code&gt;profile&lt;/code&gt; 字段都可以由该用户从客户端自动写入&lt;/strong&gt;。它还会自动为该特定用户发布到客户端。</target>
        </trans-unit>
        <trans-unit id="a078125e6fb6f9cf6e07d3afe9afdbe13358796a" translate="yes" xml:space="preserve">
          <source>There&amp;rsquo;s also an even more restricted type of reusable component, a &amp;ldquo;pure&amp;rdquo; component, which does not have any internal state. For instance in the Todos app, the &lt;code&gt;Todos_item&lt;/code&gt; template decides what to render solely based on its arguments. Pure components are even easier to reason about and test than reusable ones and so should be preferred wherever possible.</source>
          <target state="translated">还有一个更受限制的类型的可重用组件，即&amp;ldquo;纯&amp;rdquo;组件，它没有任何内部状态。例如，在Todos应用程序中， &lt;code&gt;Todos_item&lt;/code&gt; 模板仅根据其参数决定要呈现的内容。纯组件比可重用组件更易于推理和测试，因此在任何可能的地方都应首选。</target>
        </trans-unit>
        <trans-unit id="1d10271641a82dc525695dafaf181e6eed96146c" translate="yes" xml:space="preserve">
          <source>Therefore, when you include &lt;code&gt;{{&amp;gt; Template.contentBlock}}&lt;/code&gt;, Spacebars hides the data context of the calling template, and any data contexts established in the template by &lt;code&gt;#each&lt;/code&gt; and &lt;code&gt;#with&lt;/code&gt;. They are not visible to the content block, even via &lt;code&gt;..&lt;/code&gt;. Put another way, it&amp;rsquo;s as if the &lt;code&gt;{{&amp;gt; Template.contentBlock}}&lt;/code&gt; inclusion occurred at the location where &lt;code&gt;{{#unless}}&lt;/code&gt; was invoked, as far as the data context stack is concerned.</source>
          <target state="translated">因此，当您包含 &lt;code&gt;{{&amp;gt; Template.contentBlock}}&lt;/code&gt; ，空格键将隐藏调用模板的数据上下文以及 &lt;code&gt;#each&lt;/code&gt; 和 &lt;code&gt;#with&lt;/code&gt; 在模板中建立的任何数据上下文。他们不是对内容块可见，甚至通过 &lt;code&gt;..&lt;/code&gt; 。换句话说，就数据上下文堆栈而言，好像 &lt;code&gt;{{&amp;gt; Template.contentBlock}}&lt;/code&gt; 包含发生在调用 &lt;code&gt;{{#unless}}&lt;/code&gt; 的位置。</target>
        </trans-unit>
        <trans-unit id="0fb4dc7b086310844026b5109a868ecfb50eaa5c" translate="yes" xml:space="preserve">
          <source>These &lt;code&gt;main.js&lt;/code&gt; files won&amp;rsquo;t do anything themselves, but they should import some &lt;em&gt;startup&lt;/em&gt; modules which will run immediately, on client and server respectively, when the app loads. These modules should do any configuration necessary for the packages you are using in your app, and import the rest of your app&amp;rsquo;s code.</source>
          <target state="translated">这些 &lt;code&gt;main.js&lt;/code&gt; 文件本身不会执行任何操作，但是它们应该导入一些&lt;em&gt;启动&lt;/em&gt;模块，这些&lt;em&gt;启动&lt;/em&gt;模块将在应用程序加载时立即分别在客户端和服务器上运行。这些模块应该对您在应用程序中使用的软件包进行必要的配置，并导入应用程序的其余代码。</target>
        </trans-unit>
        <trans-unit id="ae8c668bbb50dc31bc7ad377168e8cd34efdfa7e" translate="yes" xml:space="preserve">
          <source>These callbacks are called when an occurrence of a template is taken off the page for any reason and not replaced with a re-rendering. Inside a callback, &lt;code&gt;this&lt;/code&gt; is the &lt;a href=&quot;templates#Template-instances&quot;&gt;template instance&lt;/a&gt; object being destroyed.</source>
          <target state="translated">当由于某种原因将模板的出现从页面上删除而不用重新渲染代替时，将调用这些回调。在回调内部， &lt;code&gt;this&lt;/code&gt; 是被销毁的&lt;a href=&quot;templates#Template-instances&quot;&gt;模板实例&lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="ad6368edeb141c9a5233fbf9cf37e2d787311f9b" translate="yes" xml:space="preserve">
          <source>These callbacks fire once and are the first group of callbacks to fire. Handling the &lt;code&gt;created&lt;/code&gt; event is a useful way to set up values on template instance that are read from template helpers using &lt;code&gt;Template.instance()&lt;/code&gt;.</source>
          <target state="translated">这些回调将触发一次，并且是要触发的第一组回调。处理 &lt;code&gt;created&lt;/code&gt; 事件是在模板实例上设置值的有用方法，这些值是使用 &lt;code&gt;Template.instance()&lt;/code&gt; 从模板助手中读取的。</target>
        </trans-unit>
        <trans-unit id="9ac06c44043110df5a9f32a56f7326ea9c7b464e" translate="yes" xml:space="preserve">
          <source>These checks are run only when a client tries to write to the database directly, for example by calling &lt;code&gt;update&lt;/code&gt; from inside an event handler. Server code is trusted and isn&amp;rsquo;t subject to &lt;code&gt;allow&lt;/code&gt; and &lt;code&gt;deny&lt;/code&gt; restrictions. That includes methods that are called with &lt;code&gt;Meteor.call&lt;/code&gt; &amp;mdash; they are expected to do their own access checking rather than relying on &lt;code&gt;allow&lt;/code&gt; and &lt;code&gt;deny&lt;/code&gt;.</source>
          <target state="translated">仅当客户端尝试直接写入数据库时​​（例如通过从事件处理程序内部调用 &lt;code&gt;update&lt;/code&gt; )，才运行这些检查。服务器代码是受信任的，不受 &lt;code&gt;allow&lt;/code&gt; 和 &lt;code&gt;deny&lt;/code&gt; 限制。其中包括用 &lt;code&gt;Meteor.call&lt;/code&gt; 调用的方法-期望它们进行自己的访问检查，而不是依靠 &lt;code&gt;allow&lt;/code&gt; 和 &lt;code&gt;deny&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0472ebc553ae1a2a8b1a21ce12a92864782fec0d" translate="yes" xml:space="preserve">
          <source>These days, the landscape of JavaScript tools and frameworks is constantly shifting, and the language itself is evolving just as rapidly. It&amp;rsquo;s no longer reasonable to wait for web browsers to implement the language features you want to use. Most JavaScript development workflows rely on compiling code to work on the lowest common denominator of environments, while letting you use the newest features in development. Meteor has support for some of the most popular tools out of the box.</source>
          <target state="translated">如今，JavaScript工具和框架的格局正在不断变化，并且语言本身也在迅速发展。等待Web浏览器实现您要使用的语言功能已经不再合理。大多数JavaScript开发工作流程都依赖于编译代码以在环境的最低公分母上工作，同时允许您使用开发中的最新功能。流星开箱即用地支持一些最受欢迎的工具。</target>
        </trans-unit>
        <trans-unit id="0462e62c402247a57e8f7002d0a85b243ae39cbc" translate="yes" xml:space="preserve">
          <source>These declarations make the variables &lt;code&gt;a&lt;/code&gt;, &lt;code&gt;b&lt;/code&gt;, &lt;code&gt;c&lt;/code&gt; (and so on) available not only within the scope of the &lt;code&gt;exporter.js&lt;/code&gt; module, but also to other modules that &lt;code&gt;import&lt;/code&gt; from &lt;code&gt;exporter.js&lt;/code&gt;.</source>
          <target state="translated">这些声明使变量 &lt;code&gt;a&lt;/code&gt; ， &lt;code&gt;b&lt;/code&gt; ， &lt;code&gt;c&lt;/code&gt; （等等）不仅在 &lt;code&gt;exporter.js&lt;/code&gt; 模块的范围内可用，而且还可以用于从 &lt;code&gt;exporter.js&lt;/code&gt; &lt;code&gt;import&lt;/code&gt; 其他模块。</target>
        </trans-unit>
        <trans-unit id="aa30eaf1ec7e1a6cff7a8ca0df382678b559449a" translate="yes" xml:space="preserve">
          <source>These examples should get you started with &lt;code&gt;import&lt;/code&gt; and &lt;code&gt;export&lt;/code&gt; syntax. For further reading, here is a very detailed &lt;a href=&quot;http://www.2ality.com/2014/09/es6-modules-final.html&quot;&gt;explanation&lt;/a&gt; by &lt;a href=&quot;https://twitter.com/rauschma&quot;&gt;Axel Rauschmayer&lt;/a&gt; of every variation of &lt;code&gt;import&lt;/code&gt; and &lt;code&gt;export&lt;/code&gt; syntax.</source>
          <target state="translated">这些示例应该使您开始使用 &lt;code&gt;import&lt;/code&gt; 和 &lt;code&gt;export&lt;/code&gt; 语法。如要进一步了解，这里是一个非常详细&lt;a href=&quot;http://www.2ality.com/2014/09/es6-modules-final.html&quot;&gt;的解释&lt;/a&gt;由&lt;a href=&quot;https://twitter.com/rauschma&quot;&gt;阿克塞尔Rauschmayer先生&lt;/a&gt;的每一个变化的 &lt;code&gt;import&lt;/code&gt; 和 &lt;code&gt;export&lt;/code&gt; 的语法。</target>
        </trans-unit>
        <trans-unit id="86ffc0e598a4abbfe59e37179c7768598dbd5db6" translate="yes" xml:space="preserve">
          <source>These functions control how Meteor servers publish sets of records and how clients can subscribe to those sets.</source>
          <target state="translated">这些功能控制Meteor服务器如何发布记录集,以及客户端如何订阅这些记录集。</target>
        </trans-unit>
        <trans-unit id="413e991212ab4f5b5a723391d1126b6621314b66" translate="yes" xml:space="preserve">
          <source>These functions initiate the login process with an external service (eg: Facebook, Google, etc), using OAuth. When called they open a new pop-up window that loads the provider&amp;rsquo;s login page. Once the user has logged in with the provider, the pop-up window is closed and the Meteor client logs in to the Meteor server with the information provided by the external service.</source>
          <target state="translated">这些功能使用OAuth通过外部服务（例如Facebook，Google等）启动登录过程。当被呼叫时，他们打开一个新的弹出窗口，该窗口加载提供者的登录页面。用户通过提供者登录后，弹出窗口关闭，Meteor客户端使用外部服务提供的信息登录Meteor服务器。</target>
        </trans-unit>
        <trans-unit id="f173cac486c90f6e2b82eb2f5a948c07b6f5903d" translate="yes" xml:space="preserve">
          <source>These functions manage and inspect the network connection between the Meteor client and server.</source>
          <target state="translated">这些功能管理和检查Meteor客户端和服务器之间的网络连接。</target>
        </trans-unit>
        <trans-unit id="77ecb52a72d05d652813dad8d51a58ce85f791f1" translate="yes" xml:space="preserve">
          <source>These functions return an object with a single method, &lt;code&gt;stop&lt;/code&gt;. Calling &lt;code&gt;stop()&lt;/code&gt; unregisters the callback.</source>
          <target state="translated">这些函数使用单一方法 &lt;code&gt;stop&lt;/code&gt; 返回一个对象。调用 &lt;code&gt;stop()&lt;/code&gt; 取消注册回调。</target>
        </trans-unit>
        <trans-unit id="5e0a2b593413ab6cf5bbff134c8ade7f0cfd0d20" translate="yes" xml:space="preserve">
          <source>These functions work just like their native JavaScript equivalents. If you call the native function, you&amp;rsquo;ll get an error stating that Meteor code must always run within a Fiber, and advising to use &lt;code&gt;Meteor.bindEnvironment&lt;/code&gt;.</source>
          <target state="translated">这些函数的工作方式与其本机JavaScript等效项相同。如果调用本机函数，则会收到一条错误消息，指出Meteor代码必须始终在Fiber中运行，并建议使用 &lt;code&gt;Meteor.bindEnvironment&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="687e7b274a6eae98d2e66cec678c87ccb2d9bf12" translate="yes" xml:space="preserve">
          <source>These include some notable differences like:</source>
          <target state="translated">这些包括一些明显的区别,比如:</target>
        </trans-unit>
        <trans-unit id="66dafb931800467947ce0ab24f061cc337d9ed82" translate="yes" xml:space="preserve">
          <source>These methods are defined on &lt;code&gt;AccountsClient.prototype&lt;/code&gt;, and are thus available only on the client:</source>
          <target state="translated">这些方法在 &lt;code&gt;AccountsClient.prototype&lt;/code&gt; 上定义，因此仅在客户端上可用：</target>
        </trans-unit>
        <trans-unit id="76aec7f369ba86f9b87f342cec6d5acb90f5cf8a" translate="yes" xml:space="preserve">
          <source>These methods are defined on &lt;code&gt;AccountsServer.prototype&lt;/code&gt;, and are thus available only on the server:</source>
          <target state="translated">这些方法在 &lt;code&gt;AccountsServer.prototype&lt;/code&gt; 上定义，因此仅在服务器上可用：</target>
        </trans-unit>
        <trans-unit id="52712d93b5313cf282a026010bf4fe32ddf1e70a" translate="yes" xml:space="preserve">
          <source>These packages don&amp;rsquo;t do anything in development or production mode. They declare themselves &lt;code&gt;testOnly&lt;/code&gt; so they are not even loaded outside of testing. But when our app is run in &lt;a href=&quot;#test-modes&quot;&gt;test mode&lt;/a&gt;, the test driver package takes over, executing test code on both the client and server, and rendering results to the browser.</source>
          <target state="translated">这些软件包在开发或生产模式下不做任何事情。它们声明自己为 &lt;code&gt;testOnly&lt;/code&gt; ,因此它们甚至不会在测试之外加载。但是，当我们的应用程序在&lt;a href=&quot;#test-modes&quot;&gt;测试模式下&lt;/a&gt;运行时，测试驱动程序包将接管工作，在客户端和服务器上执行测试代码，并将结果呈现给浏览器。</target>
        </trans-unit>
        <trans-unit id="1df35b5cd39963e0ef7b946e9d1dad130ae27137" translate="yes" xml:space="preserve">
          <source>These rate limiting rules can be removed by calling &lt;code&gt;Accounts.removeDefaultRateLimit()&lt;/code&gt;. Please see the &lt;a href=&quot;#ddpratelimiter&quot;&gt;&lt;code&gt;DDPRateLimiter&lt;/code&gt;&lt;/a&gt; docs for more information.</source>
          <target state="translated">可以通过调用 &lt;code&gt;Accounts.removeDefaultRateLimit()&lt;/code&gt; 删除这些速率限制规则。请参阅&lt;a href=&quot;#ddpratelimiter&quot;&gt; &lt;code&gt;DDPRateLimiter&lt;/code&gt; &lt;/a&gt;文档以获取更多信息。</target>
        </trans-unit>
        <trans-unit id="091be4fe8840d9c388f77334a0339ebc333e19dd" translate="yes" xml:space="preserve">
          <source>These should never be stored as part of your app&amp;rsquo;s source code in version control, because developers might copy code around to unexpected places and forget that it contains secret keys. You can keep your keys separately in &lt;a href=&quot;https://www.dropbox.com/&quot;&gt;Dropbox&lt;/a&gt;, &lt;a href=&quot;https://lastpass.com&quot;&gt;LastPass&lt;/a&gt;, or another service, and then reference them when you need to deploy the app.</source>
          <target state="translated">这些代码永远不应作为应用程序源代码的一部分存储在版本控制中，因为开发人员可能会将代码复制到意想不到的地方，而忘记了其中包含秘密密钥。您可以将密钥分别保存在&lt;a href=&quot;https://www.dropbox.com/&quot;&gt;Dropbox&lt;/a&gt;，&lt;a href=&quot;https://lastpass.com&quot;&gt;LastPass&lt;/a&gt;或其他服务中，然后在需要部署应用程序时引用它们。</target>
        </trans-unit>
        <trans-unit id="a445af3d040c25b8330c9363849d6ce9a55beda7" translate="yes" xml:space="preserve">
          <source>These two Sass files will be lazily evaluated and only included in the CSS of the app if imported from some other file.</source>
          <target state="translated">这两个Sass文件将被懒惰地评估,只有在从其他文件导入时才会包含在应用程序的CSS中。</target>
        </trans-unit>
        <trans-unit id="4a401db56f47d9c403aef3a45748c136d372f7f2" translate="yes" xml:space="preserve">
          <source>They all have their pros and cons, and different people have different preferences, just like with JavaScript transpiled languages. The most popular one at the time of writing seems to be Sass with the SCSS syntax. Popular CSS frameworks like Bootstrap 4 and more are switching to Sass, and the C++ LibSass implementation appears to be faster than some of the other compilers available.</source>
          <target state="translated">它们都有各自的优点和缺点,不同的人有不同的偏好,就像JavaScript的转码语言一样。在写这篇文章的时候,最流行的似乎是SCSS语法的Sass。流行的CSS框架,如Bootstrap 4和更多的框架都在改用Sass,C++LibSass的实现似乎比其他一些可用的编译器更快。</target>
        </trans-unit>
        <trans-unit id="404ff9c7ee74b794fd80c600e63432c861667cb4" translate="yes" xml:space="preserve">
          <source>They are easy to add to component style guides&amp;mdash;as we&amp;rsquo;ll see in the section about &lt;a href=&quot;#styleguides&quot;&gt;component style guides&lt;/a&gt;, when creating a style guide, a clean environment makes things much easier to work with.</source>
          <target state="translated">它们很容易添加到组件样式指南中&amp;mdash;正如我们将在有关&lt;a href=&quot;#styleguides&quot;&gt;组件样式指南&lt;/a&gt;的部分中看到的那样，在创建样式指南时，干净的环境使事情变得更容易使用。</target>
        </trans-unit>
        <trans-unit id="0204351e627ad69ea6062bf41e41cc9a672796b0" translate="yes" xml:space="preserve">
          <source>They are easy to reason about&amp;mdash;you don&amp;rsquo;t need to understand how the data in the global store changes, simply how the arguments to the component change.</source>
          <target state="translated">它们很容易推断-您无需了解全局存储中的数据如何变化，只需了解组件的参数如何变化。</target>
        </trans-unit>
        <trans-unit id="ff28052343adf56ab51445577eee9880f6365bad" translate="yes" xml:space="preserve">
          <source>They are easy to test&amp;mdash;you don&amp;rsquo;t need to be careful about the environment you render them in, all you need to do is provide the right arguments.</source>
          <target state="translated">它们很容易测试-您不需要在渲染它们的环境上小心，只需要做的就是提供正确的参数。</target>
        </trans-unit>
        <trans-unit id="0c439fbad9298eea7eb6b9df98a9f29741aa80e6" translate="yes" xml:space="preserve">
          <source>Things are more complicated if the argument to the &lt;code&gt;#each&lt;/code&gt; reactively changes between different cursor objects, or between arrays of plain JavaScript objects that may not be identified clearly. The implementation of &lt;code&gt;#each&lt;/code&gt; tries to be intelligent without doing too much expensive work. Specifically, it tries to identify items between the old and new array or cursor with the following strategy:</source>
          <target state="translated">如果 &lt;code&gt;#each&lt;/code&gt; 的参数在不同的游标对象之间，或者在可能无法清楚识别的纯JavaScript对象数组之间发生反应性变化，则事情会变得更加复杂。实施 &lt;code&gt;#each&lt;/code&gt; 尝试是没有做太多昂贵的工作智能化。具体来说，它尝试使用以下策略识别新旧数组或游标之间的项：</target>
        </trans-unit>
        <trans-unit id="7786d1c21c37e7d0448b609968b761e8a555c3be" translate="yes" xml:space="preserve">
          <source>Things can get more complicated; for instance you may want to deal with documents being removed, or share the work of polling between multiple users (in a case where the data being polled isn&amp;rsquo;t private to that user), rather than doing the exact same poll for each interested user.</source>
          <target state="translated">事情会变得更加复杂；例如，您可能要处理被删除的文档，或者在多个用户之间共享轮询工作（在所轮询的数据不是该用户私有的情况下），而不是对每个感兴趣的用户进行完全相同的轮询。</target>
        </trans-unit>
        <trans-unit id="0576eeb506460b5dccf03d1672ed987f9bdfe8f4" translate="yes" xml:space="preserve">
          <source>This Method doesn&amp;rsquo;t modify the other user, but uses it as a target; for example, it could be a Method for sending a private message, or adding a user as a friend.</source>
          <target state="translated">该方法不会修改其他用户，而是将其用作目标。例如，它可以是发送私人消息或将用户添加为朋友的方法。</target>
        </trans-unit>
        <trans-unit id="9ea561a8f044f7b9be6d1c2784007839ecff81d6" translate="yes" xml:space="preserve">
          <source>This Method is callable from the client and server using &lt;a href=&quot;http://docs.meteor.com/#/full/meteor_call&quot;&gt;&lt;code&gt;Meteor.call&lt;/code&gt;&lt;/a&gt;. Note that you should only use a Method in the case where some code needs to be callable from the client; if you just want to modularize code that is only going to be called from the server, use a regular JavaScript function, not a Method.</source>
          <target state="translated">可以使用&lt;a href=&quot;http://docs.meteor.com/#/full/meteor_call&quot;&gt; &lt;code&gt;Meteor.call&lt;/code&gt; &lt;/a&gt;从客户端和服务器调用此方法。请注意，仅在需要从客户端调用某些代码的情况下，才应使用Method。如果只想模块化仅要从服务器调用的代码，请使用常规JavaScript函数，而不是Method。</target>
        </trans-unit>
        <trans-unit id="2e27bf202267e291c40855efdc53a65423f72cf0" translate="yes" xml:space="preserve">
          <source>This Sass file will be eagerly evaluated and its compiled form will be added to the CSS of the app immediately.</source>
          <target state="translated">这个Sass文件将被热切地评估,它的编译形式将被立即添加到应用程序的CSS中。</target>
        </trans-unit>
        <trans-unit id="9bb333b750d679d2f9e108958e92d320df6a97d3" translate="yes" xml:space="preserve">
          <source>This built-in feature means that you always get &lt;code&gt;this.userId&lt;/code&gt; inside Methods and Publications, and can access the user ID on the client. This is a great starting point for building your own custom accounts system, but most developers won&amp;rsquo;t need to worry about the mechanics, since you&amp;rsquo;ll mostly be interacting with the &lt;code&gt;accounts-base&lt;/code&gt; package instead.</source>
          <target state="translated">此内置功能意味着您始终可以在&amp;ldquo;方法和出版物&amp;rdquo;中获取 &lt;code&gt;this.userId&lt;/code&gt; ，并且可以访问客户端上的用户ID。这是构建自己的自定义帐户系统的一个很好的起点，但是大多数开发人员无需担心机制，因为您将主要与 &lt;code&gt;accounts-base&lt;/code&gt; 包进行交互。</target>
        </trans-unit>
        <trans-unit id="1494ff5c828d1c003edc7baff04b7cdc0cd7dcd4" translate="yes" xml:space="preserve">
          <source>This call to &lt;code&gt;Accounts.config&lt;/code&gt; should be made at load time (place at the top level of your source file), not called from inside of a &lt;code&gt;Meteor.startup&lt;/code&gt; block.</source>
          <target state="translated">对 &lt;code&gt;Accounts.config&lt;/code&gt; 的调用应在加载时（位于源文件的顶层）进行，而不是从 &lt;code&gt;Meteor.startup&lt;/code&gt; 块内部调用。</target>
        </trans-unit>
        <trans-unit id="00dda21f71615faabea32336583a89e5ba8843f6" translate="yes" xml:space="preserve">
          <source>This can be a good place to apply any DOM manipulations you want, after the template is rendered for the first time.</source>
          <target state="translated">这可以是一个很好的地方来应用任何你想要的DOM操作,在模板第一次渲染后。</target>
        </trans-unit>
        <trans-unit id="49b610f7e6d70f00ad635cc0e9f0a628d173b1cc" translate="yes" xml:space="preserve">
          <source>This can be called multiple times. If any of the functions return &lt;code&gt;false&lt;/code&gt; or throw an error, the new user creation is aborted. To set a specific error message (which will be displayed by &lt;a href=&quot;#accountsui&quot;&gt;&lt;code&gt;accounts-ui&lt;/code&gt;&lt;/a&gt;), throw a new &lt;a href=&quot;#meteor_error&quot;&gt;&lt;code&gt;Meteor.Error&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">这可以多次调用。如果任何函数返回 &lt;code&gt;false&lt;/code&gt; 或引发错误，则新用户创建将中止。要设置特定的错误消息（将由&lt;a href=&quot;#accountsui&quot;&gt; &lt;code&gt;accounts-ui&lt;/code&gt; &lt;/a&gt;显示），请抛出新的&lt;a href=&quot;#meteor_error&quot;&gt; &lt;code&gt;Meteor.Error&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ba9c26adcd09a8462852af3edd373ed19e4f6ea3" translate="yes" xml:space="preserve">
          <source>This can be used to save battery on mobile devices when real time updates are not required.</source>
          <target state="translated">当不需要实时更新时,这可以用来节省移动设备的电池。</target>
        </trans-unit>
        <trans-unit id="94cd2c64f57ec94ff31140e50d2d1b56d6fb9068" translate="yes" xml:space="preserve">
          <source>This can be useful if you have a function that accepts several different kinds of objects, and you want to determine which was passed in.</source>
          <target state="translated">如果你有一个函数接受了几种不同类型的对象,而你又想确定哪种对象是被传递进来的,那么这就很有用。</target>
        </trans-unit>
        <trans-unit id="1cd1d4c62c7a1bea960b0474218c6c81157bcc3a" translate="yes" xml:space="preserve">
          <source>This class represents a symbolic error thrown by a method.</source>
          <target state="translated">这个类表示一个方法抛出的符号错误。</target>
        </trans-unit>
        <trans-unit id="64724a799ae7bd0e491ad9115cd1f1b4cb55d6c0" translate="yes" xml:space="preserve">
          <source>This class should be defined inside a file called &lt;code&gt;ClickCounter.js&lt;/code&gt;. When you import it, it&amp;rsquo;ll look like this:</source>
          <target state="translated">此类应在名为 &lt;code&gt;ClickCounter.js&lt;/code&gt; 的文件中定义。导入时，它将如下所示：</target>
        </trans-unit>
        <trans-unit id="089e6d34c258f08d8e6ca86a1401d84507dfa237" translate="yes" xml:space="preserve">
          <source>This collection contains one document per registered user. Here&amp;rsquo;s an example user document:</source>
          <target state="translated">此集合每个注册用户包含一个文档。这是一个示例用户文档：</target>
        </trans-unit>
        <trans-unit id="87ab89ad8bc8b00f4ed6f86ade9f3d7e6855af73" translate="yes" xml:space="preserve">
          <source>This content has moved to the &lt;a href=&quot;http://blazejs.org/guide/introduction.html&quot;&gt;Blaze Community Site&lt;/a&gt;.</source>
          <target state="translated">该内容已移至&lt;a href=&quot;http://blazejs.org/guide/introduction.html&quot;&gt;Blaze社区站点&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e6303c4721a1e16fb0eb3ba65404169967013c6d" translate="yes" xml:space="preserve">
          <source>This continues until the client &lt;a href=&quot;#stopping-subscriptions&quot;&gt;stops&lt;/a&gt; the subscription, triggering the following behavior:</source>
          <target state="translated">这一直持续到客户端&lt;a href=&quot;#stopping-subscriptions&quot;&gt;停止&lt;/a&gt;订阅，从而触发以下行为：</target>
        </trans-unit>
        <trans-unit id="04f3e1b2e189c27c21d8fa1593eb85dba46a4976" translate="yes" xml:space="preserve">
          <source>This creates a &lt;em&gt;local collection&lt;/em&gt;. This is a Minimongo collection that has no database connection (ordinarily a collection would either be directly connected to the database on the server, or via a subscription on the client).</source>
          <target state="translated">这将创建一个&lt;em&gt;本地集合&lt;/em&gt;。这是一个没有数据库连接的Minimongo集合（通常，一个集合可以直接连接到服务器上的数据库，也可以通过客户端上的订阅来连接）。</target>
        </trans-unit>
        <trans-unit id="cfa530bf2a13ea8bbfe14b7270456e8e605460bd" translate="yes" xml:space="preserve">
          <source>This default export may then be imported without curly braces, using any name the importing module chooses:</source>
          <target state="translated">然后,可以不使用大括号,使用导入模块选择的任何名称导入该默认导出。</target>
        </trans-unit>
        <trans-unit id="b76024cf2694aebadfd1b2ceeea8dacb89817643" translate="yes" xml:space="preserve">
          <source>This deletes your data! Make sure you do not have any information you care about in your local mongo database by running &lt;code&gt;meteor mongo&lt;/code&gt;. From the mongo shell, use &lt;code&gt;show collections&lt;/code&gt; and &lt;code&gt;db.&lt;i&gt;collection&lt;/i&gt;.find()&lt;/code&gt; to inspect your data.</source>
          <target state="translated">这会删除您的数据！通过运行 &lt;code&gt;meteor mongo&lt;/code&gt; 确保您在本地mongo数据库中没有您关心的任何信息。在mongo shell中，使用 &lt;code&gt;show collections&lt;/code&gt; 和 &lt;code&gt;db.&lt;i&gt;collection&lt;/i&gt;.find()&lt;/code&gt; 检查您的数据。</target>
        </trans-unit>
        <trans-unit id="c158f9fcf362fbb1d28056dfb42a24467b8e8f7c" translate="yes" xml:space="preserve">
          <source>This documentation has moved to the &lt;a href=&quot;http://blazejs.org/guide/spacebars.html&quot;&gt;Blaze Community Site&lt;/a&gt;.</source>
          <target state="translated">本文档已移至&lt;a href=&quot;http://blazejs.org/guide/spacebars.html&quot;&gt;Blaze社区站点&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1a0f72edbce4c9f80b70de0ce3e5dc63933cd70c" translate="yes" xml:space="preserve">
          <source>This example for Twitter shows how existing unencrypted user tokens can be encrypted. The query finds user documents which have a Twitter access token but not the &lt;code&gt;algorithm&lt;/code&gt; field which is created when the token is encrypted. The relevant fields in the service data are then encrypted.</source>
          <target state="translated">Twitter的此示例显示了如何加密现有的未加密用户令牌。该查询查找具有Twitter访问令牌但没有加密令牌时创建的 &lt;code&gt;algorithm&lt;/code&gt; 字段的用户文档。然后对服务数据中的相关字段进行加密。</target>
        </trans-unit>
        <trans-unit id="58eff224482073fbf7b7b1b1a53aac5ad0180eeb" translate="yes" xml:space="preserve">
          <source>This example from the Todos app defines a schema with a few simple rules:</source>
          <target state="translated">这个来自Todos应用的例子用几个简单的规则定义了一个模式。</target>
        </trans-unit>
        <trans-unit id="578956aae973a0288f7a3df64f0683166bf8f2a2" translate="yes" xml:space="preserve">
          <source>This example implements a weather data source with a simple getter and setter. The getter records that the current computation depends on the &lt;code&gt;weatherDep&lt;/code&gt; dependency using &lt;code&gt;depend()&lt;/code&gt;, while the setter signals the dependency to invalidate all dependent computations by calling &lt;code&gt;changed()&lt;/code&gt;.</source>
          <target state="translated">本示例使用简单的getter和setter实现天气数据源。吸气剂使用 &lt;code&gt;depend()&lt;/code&gt; 记录当前计算依赖于 &lt;code&gt;weatherDep&lt;/code&gt; 依赖关系，而设置器通过调用 &lt;code&gt;changed()&lt;/code&gt; 通知依赖关系以使所有依赖计算无效。</target>
        </trans-unit>
        <trans-unit id="b4e770aff09288ae10b2ea6d8f309b9a30fbadee" translate="yes" xml:space="preserve">
          <source>This example uses the &lt;code&gt;aldeed:simple-schema&lt;/code&gt; package, which is recommended in several other articles, to validate the Method arguments.</source>
          <target state="translated">本示例使用 &lt;code&gt;aldeed:simple-schema&lt;/code&gt; 软件包（在其他几篇文章中推荐）来验证Method参数。</target>
        </trans-unit>
        <trans-unit id="7023a89c76ca1242e1a1925d2d3c73c2c65be3a4" translate="yes" xml:space="preserve">
          <source>This folder is for compatibility with JavaScript libraries that rely on variables declared with var at the top level being exported as globals. Files in this directory are executed without being wrapped in a new variable scope. These files are executed before other client-side JavaScript files.</source>
          <target state="translated">这个文件夹是为了兼容那些依赖在顶层用var声明的变量被导出为globals的JavaScript库。这个目录中的文件在执行时不会被包裹在一个新的变量作用域中。这些文件会在其他客户端JavaScript文件之前执行。</target>
        </trans-unit>
        <trans-unit id="888c6b7852db28389681b488182ba14942abf16c" translate="yes" xml:space="preserve">
          <source>This function accepts tokens passed into the callback registered with &lt;a href=&quot;#Accounts-onEmailVerificationLink&quot;&gt;&lt;code&gt;Accounts.onEmailVerificationLink&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此函数接受传递到在&lt;a href=&quot;#Accounts-onEmailVerificationLink&quot;&gt; &lt;code&gt;Accounts.onEmailVerificationLink&lt;/code&gt; 中&lt;/a&gt;注册的回调中的令牌。</target>
        </trans-unit>
        <trans-unit id="4e951d6d992488255fc7760222db409da92418b0" translate="yes" xml:space="preserve">
          <source>This function accepts tokens passed into the callbacks registered with &lt;a href=&quot;#Accounts-onResetPasswordLink&quot;&gt;&lt;code&gt;AccountsClient#onResetPasswordLink&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#Accounts-onEnrollmentLink&quot;&gt;&lt;code&gt;Accounts.onEnrollmentLink&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此函数接受传递到在&lt;a href=&quot;#Accounts-onResetPasswordLink&quot;&gt; &lt;code&gt;AccountsClient#onResetPasswordLink&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#Accounts-onEnrollmentLink&quot;&gt; &lt;code&gt;Accounts.onEnrollmentLink&lt;/code&gt; 中&lt;/a&gt;注册的回调中传递的令牌。</target>
        </trans-unit>
        <trans-unit id="853415bfe43c8e5627902fb641ef2fd4dc19a5ed" translate="yes" xml:space="preserve">
          <source>This function initiates an HTTP request to a remote server.</source>
          <target state="translated">该函数发起对远程服务器的HTTP请求。</target>
        </trans-unit>
        <trans-unit id="33d20fd1aee97efaed83300758d99e2ca92322cb" translate="yes" xml:space="preserve">
          <source>This function is only used for creating users with passwords. The external service login flows do not use this function.</source>
          <target state="translated">此功能仅用于创建带有密码的用户。外部服务登录流程不使用此功能。</target>
        </trans-unit>
        <trans-unit id="d3710dbe607b3779e72356fb84c019967225df98" translate="yes" xml:space="preserve">
          <source>This function is provided by the &lt;code&gt;accounts-password&lt;/code&gt; package. See the &lt;a href=&quot;#accounts_passwords&quot;&gt;Passwords&lt;/a&gt; section below.</source>
          <target state="translated">该功能由 &lt;code&gt;accounts-password&lt;/code&gt; 软件包提供。请参阅下面的&lt;a href=&quot;#accounts_passwords&quot;&gt;密码&lt;/a&gt;部分。</target>
        </trans-unit>
        <trans-unit id="5bf79919d22e37fb2acdadd71186801ba1a3f125" translate="yes" xml:space="preserve">
          <source>This group of callbacks is most useful for cleaning up or undoing any external effects of &lt;code&gt;created&lt;/code&gt; or &lt;code&gt;rendered&lt;/code&gt; groups. This group fires once and is the last callback to fire.</source>
          <target state="translated">这组回调对于清理或撤消已 &lt;code&gt;created&lt;/code&gt; 或 &lt;code&gt;rendered&lt;/code&gt; 组的任何外部影响最为有用。该组触发一次，是触发的最后一个回调。</target>
        </trans-unit>
        <trans-unit id="38a6eae8b7ed206fa06d0407ddfd4141f3e7f3d3" translate="yes" xml:space="preserve">
          <source>This guide is quite short and we think you&amp;rsquo;ll find the upgrade from 1.4 to 1.5 quite painless. We encourage reading &lt;a href=&quot;http://docs.meteor.com/changelog.html&quot;&gt;full history&lt;/a&gt; and comparing the full differences between the versions you are upgrading from and to.</source>
          <target state="translated">本指南很短，我们认为您会发现从1.4升级到1.5非常轻松。我们鼓励阅读&lt;a href=&quot;http://docs.meteor.com/changelog.html&quot;&gt;完整的历史记录&lt;/a&gt;并比较要升级的版本之间的差异。</target>
        </trans-unit>
        <trans-unit id="ca8cd2d0b20d19fb3c2c877e3eefe0d87ac148ab" translate="yes" xml:space="preserve">
          <source>This hook is the basis for the &lt;a href=&quot;templates#Template-onCreated&quot;&gt;&lt;code&gt;created&lt;/code&gt;&lt;/a&gt; template callback.</source>
          <target state="translated">此挂钩是&lt;a href=&quot;templates#Template-onCreated&quot;&gt; &lt;code&gt;created&lt;/code&gt; &lt;/a&gt;模板回调的基础。</target>
        </trans-unit>
        <trans-unit id="c9ae260e2f1fc810773fa91da7c3e22097801f4e" translate="yes" xml:space="preserve">
          <source>This hook is the basis for the &lt;a href=&quot;templates#Template-onDestroyed&quot;&gt;&lt;code&gt;destroyed&lt;/code&gt;&lt;/a&gt; template callback.</source>
          <target state="translated">该挂钩是&lt;a href=&quot;templates#Template-onDestroyed&quot;&gt; &lt;code&gt;destroyed&lt;/code&gt; &lt;/a&gt;模板回调的基础。</target>
        </trans-unit>
        <trans-unit id="24be87346489f672bc2a3578d4ed560c5fcca9ed" translate="yes" xml:space="preserve">
          <source>This hook is the basis for the &lt;a href=&quot;templates#Template-onRendered&quot;&gt;&lt;code&gt;rendered&lt;/code&gt;&lt;/a&gt; template callback.</source>
          <target state="translated">该钩子是&lt;a href=&quot;templates#Template-onRendered&quot;&gt; &lt;code&gt;rendered&lt;/code&gt; &lt;/a&gt;模板回调的基础。</target>
        </trans-unit>
        <trans-unit id="8670b644668ab6da0b45974fa33e6ff9aaa365cc" translate="yes" xml:space="preserve">
          <source>This imports the default export from the package into the symbol &lt;code&gt;moment&lt;/code&gt;.</source>
          <target state="translated">这会将默认的导出包从包中导入到符号 &lt;code&gt;moment&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="99a34389d271656974b9c9fa9e1b4f0b498b91a3" translate="yes" xml:space="preserve">
          <source>This integration test can be run the exact same way as we ran &lt;a href=&quot;#running-unit-tests&quot;&gt;unit tests above&lt;/a&gt;.</source>
          <target state="translated">可以与我们在&lt;a href=&quot;#running-unit-tests&quot;&gt;上面的单元测试中&lt;/a&gt;完全相同的方式运行此集成测试。</target>
        </trans-unit>
        <trans-unit id="001effefd1558355a79e62f14860078c0c8dc165" translate="yes" xml:space="preserve">
          <source>This interface is compatible with &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach&quot;&gt;Array.forEach&lt;/a&gt;.</source>
          <target state="translated">此接口与&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach&quot;&gt;Array.forEach&lt;/a&gt;兼容。</target>
        </trans-unit>
        <trans-unit id="6cbd3c9de88c077284e7b05a3de4407073b52a84" translate="yes" xml:space="preserve">
          <source>This interface is compatible with &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map&quot;&gt;Array.map&lt;/a&gt;.</source>
          <target state="translated">该接口与&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map&quot;&gt;Array.map&lt;/a&gt;兼容。</target>
        </trans-unit>
        <trans-unit id="2c34f87e3793dad1c4b6604e9819cbbbd50b1cf9" translate="yes" xml:space="preserve">
          <source>This is a Method only accessible by admin users, who are allowed to edit other users. See the section about user roles to learn how to check that a user is in a certain role.</source>
          <target state="translated">这是一个只有管理员用户才能访问的方法,管理员用户可以编辑其他用户。参见关于用户角色的部分,了解如何检查用户是否处于某个角色。</target>
        </trans-unit>
        <trans-unit id="6385fecfa1299ef18c9fcd3297aa13710b6a3016" translate="yes" xml:space="preserve">
          <source>This is a collection of points to check about your app that might catch common errors. However, it&amp;rsquo;s not an exhaustive list yet&amp;mdash;if we missed something, please let us know or file a pull request!</source>
          <target state="translated">这是检查您的应用程序可能会捕获常见错误的要点集合。但是，这还不是一个详尽的清单-如果我们错过了一些事情，请让我们知道或提出拉取请求！</target>
        </trans-unit>
        <trans-unit id="d48b590dbdc754a6789c10b5ac34b4b30fe1405a" translate="yes" xml:space="preserve">
          <source>This is a set of articles outlining opinions on best-practice application development using the &lt;a href=&quot;https://meteor.com&quot;&gt;Meteor&lt;/a&gt; platform. Our aim is to cover patterns that are common to the development of all modern web and mobile applications, so many concepts documented here are not necessarily Meteor specific and could be applied to any application built with a focus on modern, interactive user interfaces.</source>
          <target state="translated">这是一组文章，概述了有关使用&lt;a href=&quot;https://meteor.com&quot;&gt;Meteor&lt;/a&gt;平台进行最佳实践应用程序开发的意见。我们的目标是涵盖所有现代Web和移动应用程序开发所共有的模式，因此，此处记录的许多概念不一定都是Meteor特定的，可以应用于以现代交互用户界面为重点的任何应用程序。</target>
        </trans-unit>
        <trans-unit id="db9c80f628d09c9720572fe82d2d5a73f6f13b6f" translate="yes" xml:space="preserve">
          <source>This is a very short section, but it deserves its own place in the table of contents.</source>
          <target state="translated">这是一个很短的章节,但它值得在目录中占有一席之地。</target>
        </trans-unit>
        <trans-unit id="54c9c9d64c69b591b97f3c25e31c84c45419def8" translate="yes" xml:space="preserve">
          <source>This is an &lt;code&gt;Object&lt;/code&gt; with several fields that are used to generate text/html for the emails sent by &lt;code&gt;sendResetPasswordEmail&lt;/code&gt;, &lt;code&gt;sendEnrollmentEmail&lt;/code&gt;, and &lt;code&gt;sendVerificationEmail&lt;/code&gt;.</source>
          <target state="translated">这是一个具有多个字段的 &lt;code&gt;Object&lt;/code&gt; ，这些字段用于为 &lt;code&gt;sendResetPasswordEmail&lt;/code&gt; ， &lt;code&gt;sendEnrollmentEmail&lt;/code&gt; 和 &lt;code&gt;sendVerificationEmail&lt;/code&gt; 发送的电子邮件生成text / html 。</target>
        </trans-unit>
        <trans-unit id="1771b35db1ef9be590fa6643f323285f06ff6da3" translate="yes" xml:space="preserve">
          <source>This is constant. However, if the logged-in user changes, the publish function is rerun with the new value.</source>
          <target state="translated">这是不变的。但是,如果登录的用户发生变化,则会用新的值重新运行发布功能。</target>
        </trans-unit>
        <trans-unit id="0c4a19f41f357e975c7ecf272280bda06a0a7837" translate="yes" xml:space="preserve">
          <source>This is equivalent to:</source>
          <target state="translated">这相当于:</target>
        </trans-unit>
        <trans-unit id="cc80719fd9be55eafa15350b547d0ffb5d420f24" translate="yes" xml:space="preserve">
          <source>This is how to invoke a method. It will run the method on the server. If a stub is available, it will also run the stub on the client. (See also &lt;a href=&quot;#meteor_apply&quot;&gt;&lt;code&gt;Meteor.apply&lt;/code&gt;&lt;/a&gt;, which is identical to &lt;code&gt;Meteor.call&lt;/code&gt; except that you specify the parameters as an array instead of as separate arguments and you can specify a few options controlling how the method is executed.)</source>
          <target state="translated">这是调用方法的方法。它将在服务器上运行该方法。如果存根可用，它还将在客户端上运行该存根。（另请参阅&lt;a href=&quot;#meteor_apply&quot;&gt; &lt;code&gt;Meteor.apply&lt;/code&gt; &lt;/a&gt;，它与 &lt;code&gt;Meteor.call&lt;/code&gt; 相同，除了您将参数指定为数组而不是单独的参数，并且可以指定一些选项来控制方法的执行方式。）</target>
        </trans-unit>
        <trans-unit id="48f914f21d3910c489d4970a419dcdf59be4c203" translate="yes" xml:space="preserve">
          <source>This is more or less the way that the &lt;a href=&quot;https://atmospherejs.com/kadira/blaze-layout&quot;&gt;&lt;code&gt;kadira:blaze-layout&lt;/code&gt;&lt;/a&gt; package works.</source>
          <target state="translated">这或多或少是&lt;a href=&quot;https://atmospherejs.com/kadira/blaze-layout&quot;&gt; &lt;code&gt;kadira:blaze-layout&lt;/code&gt; &lt;/a&gt;包工作的方式。</target>
        </trans-unit>
        <trans-unit id="3df02605eec21c0b790a57b252cdaa7d18f53aff" translate="yes" xml:space="preserve">
          <source>This is not to be confused with &lt;a href=&quot;#meteorshell&quot;&gt;&lt;code&gt;meteor shell&lt;/code&gt;&lt;/a&gt;, which provides an almost identical experience but also gives you access to the &amp;ldquo;server&amp;rdquo; context of a Meteor application. Typically, &lt;code&gt;meteor shell&lt;/code&gt; will be preferred.</source>
          <target state="translated">请勿将它与&lt;a href=&quot;#meteorshell&quot;&gt; &lt;code&gt;meteor shell&lt;/code&gt; &lt;/a&gt;混淆，后者提供几乎相同的体验，但也使您可以访问流星应用程序的&amp;ldquo;服务器&amp;rdquo;上下文。通常， &lt;code&gt;meteor shell&lt;/code&gt; 将是优选的。</target>
        </trans-unit>
        <trans-unit id="23a99e1a018e2efa992d69a031eb168f30c77355" translate="yes" xml:space="preserve">
          <source>This is one reason why being able to achieve any state at will in the &lt;a href=&quot;#styleguides&quot;&gt;component style guide&lt;/a&gt; is so useful. As our reusable component &lt;code&gt;Lists_show&lt;/code&gt; simply chooses to render based on its &lt;code&gt;todosReady&lt;/code&gt; argument and does not concern itself with a subscription, it is trivial to render its loading state in a style guide.</source>
          <target state="translated">这就是为什么能够在&lt;a href=&quot;#styleguides&quot;&gt;组件样式指南&lt;/a&gt;中随意实现任何状态如此有用的原因之一。由于我们的可重用组件 &lt;code&gt;Lists_show&lt;/code&gt; 仅选择基于其 &lt;code&gt;todosReady&lt;/code&gt; 参数进行呈现，而与订阅无关，因此在样式指南中呈现其加载状态很简单。</target>
        </trans-unit>
        <trans-unit id="51a69742ccb1bab8bfe4255d153c5ec4ba5fe86d" translate="yes" xml:space="preserve">
          <source>This is similar to test mode, with key differences:</source>
          <target state="translated">这与测试模式类似,主要区别在于。</target>
        </trans-unit>
        <trans-unit id="a87f42c164c9dae4abe6d1483b1376306796103e" translate="yes" xml:space="preserve">
          <source>This is the default command. Simply running &lt;code&gt;meteor&lt;/code&gt; is the same as &lt;code&gt;meteor run&lt;/code&gt;.</source>
          <target state="translated">这是默认命令。只需运行 &lt;code&gt;meteor&lt;/code&gt; 是一样的 &lt;code&gt;meteor run&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b359abc10a8fa3c78cc55353582ce42ddb2f4c69" translate="yes" xml:space="preserve">
          <source>This is the guide for using Meteor, a full-stack JavaScript platform for developing modern web and mobile applications.</source>
          <target state="translated">这是使用Meteor的指南,Meteor是一个用于开发现代Web和移动应用的全栈JavaScript平台。</target>
        </trans-unit>
        <trans-unit id="d744ec4abf94bb00d26a28350cfe22a79493e68f" translate="yes" xml:space="preserve">
          <source>This is the known Isobuild feature &amp;ldquo;packages&amp;rdquo; sorted by the first release of Meteor which supports them.</source>
          <target state="translated">这是已知的Isobuild功能&amp;ldquo;程序包&amp;rdquo;，按支持它们的Meteor的第一个发行版进行排序。</target>
        </trans-unit>
        <trans-unit id="1fd96287a19052abb4a3d7fe8fe7567c888216ed" translate="yes" xml:space="preserve">
          <source>This is useful in initialization code, to avoid re-initializing a session variable every time a new version of your app is loaded.</source>
          <target state="translated">这在初始化代码中很有用,可以避免每次加载新版本的应用程序时重新初始化会话变量。</target>
        </trans-unit>
        <trans-unit id="d5a1929983cd56ef820285a3278e0929c97728ab" translate="yes" xml:space="preserve">
          <source>This loads your application in a special &amp;ldquo;test mode&amp;rdquo;. What this does is:</source>
          <target state="translated">这将以特殊的&amp;ldquo;测试模式&amp;rdquo;加载您的应用程序。这是什么：</target>
        </trans-unit>
        <trans-unit id="56971b15e750e9340198a79af0020869551f26ab" translate="yes" xml:space="preserve">
          <source>This looks like it should just work, but there&amp;rsquo;s one problem: Sometimes the rendering system will prefer to simply change an existing component rather than switching it out and triggering the animation system. For example in the Todos example app, when you navigate between lists, by default Blaze will try to simply re-render the &lt;code&gt;Lists_show&lt;/code&gt; component with a new &lt;code&gt;listId&lt;/code&gt; (a changed argument) rather than pull the old list out and put in a new one. This is an optimization that is nice in principle, but that we want to avoid here for animation purposes. More specifically, we want to make sure the animation &lt;em&gt;only&lt;/em&gt; happens when the &lt;code&gt;listId&lt;/code&gt; changes and not on other reactive changes.</source>
          <target state="translated">看起来它应该可以工作，但是有一个问题：有时，渲染系统会更喜欢简单地更改现有组件，而不是切换出现有组件并触发动画系统。例如，在Todos示例应用程序中，当您在列表之间导航时，默认情况下，Blaze将尝试使用新的 &lt;code&gt;listId&lt;/code&gt; （更改后的参数）简单地重新渲染 &lt;code&gt;Lists_show&lt;/code&gt; 组件，而不是拉出旧列表并放入新列表。从原则上讲，这是一种优化，但是出于动画目的，我们希望在此处避免这种优化。更具体地说，我们要确保动画&lt;em&gt;仅&lt;/em&gt;在 &lt;code&gt;listId&lt;/code&gt; 更改时发生，而不在其他反应性更改时发生。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e998a2640d4e37a48b95f25447a86ef5b31b66d8" translate="yes" xml:space="preserve">
          <source>This makes it easy to then import all the client startup code with a single import as a module from our main eagerly loaded client entry point &lt;code&gt;client/main.js&lt;/code&gt;:</source>
          <target state="translated">这使得从我们急切加载的主要客户端入口点 &lt;code&gt;client/main.js&lt;/code&gt; 中以模块的形式一次导入所有客户端启动代码变得容易：</target>
        </trans-unit>
        <trans-unit id="fdd7d395468a24d103f30652c24b648d07b68765" translate="yes" xml:space="preserve">
          <source>This means a React component also can&amp;rsquo;t be the only thing in a Blaze template, because it&amp;rsquo;s impossible to tell where the template will be used.</source>
          <target state="translated">这意味着React组件也不是Blaze模板中唯一的东西，因为无法确定模板的使用位置。</target>
        </trans-unit>
        <trans-unit id="3d99f1c619bdf42d30011f5632556efc7d7c1312" translate="yes" xml:space="preserve">
          <source>This means adding the Meteor package to your project would also install the specified Cordova plugin.</source>
          <target state="translated">这意味着在你的项目中添加Meteor包也会安装指定的Cordova插件。</target>
        </trans-unit>
        <trans-unit id="250fec3a571cd1dcf5cc1f0d54023aaf9b6dd8a2" translate="yes" xml:space="preserve">
          <source>This means that the entirety of your application (including for instance the web server and client side router) is loaded and will run as normal. This enables you to write much more &lt;a href=&quot;#full-app-integration-test&quot;&gt;complex integration tests&lt;/a&gt; and also load additional files for &lt;a href=&quot;#acceptance-testing&quot;&gt;acceptance tests&lt;/a&gt;.</source>
          <target state="translated">这意味着您的整个应用程序（包括Web服务器和客户端路由器）都已加载并且将正常运行。这使您可以编写更为&lt;a href=&quot;#full-app-integration-test&quot;&gt;复杂的集成测试&lt;/a&gt;，还可以加载其他文件进行&lt;a href=&quot;#acceptance-testing&quot;&gt;验收测试&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="835d2dd6df725b5975ecf6adebc2fb10440698ab" translate="yes" xml:space="preserve">
          <source>This means the &lt;code&gt;client.js&lt;/code&gt; module will not be evaluated during app startup unless/until another module imports it, and will not even be included in the client bundle if no importing code is found.</source>
          <target state="translated">这意味着，除非/直到另一个模块导入，否则在应用程序启动期间将不评估 &lt;code&gt;client.js&lt;/code&gt; 模块，如果未找到导入代码，则甚至不会将其包含在客户端包中。</target>
        </trans-unit>
        <trans-unit id="ae147d3fdb3daffac7849df948b923c4d04af3c4" translate="yes" xml:space="preserve">
          <source>This means when you render a Blaze template, you are simply running a function on the client that corresponds to the Spacebars content you defined in the &lt;code&gt;.html&lt;/code&gt; file.</source>
          <target state="translated">这意味着当渲染Blaze模板时，您只是在客户端上运行一个与您在 &lt;code&gt;.html&lt;/code&gt; 文件中定义的空格键内容相对应的函数。</target>
        </trans-unit>
        <trans-unit id="4cfc7fb6043f0ffb01ccd22d1a053df62fa7164e" translate="yes" xml:space="preserve">
          <source>This method can fail throwing one of the following errors:</source>
          <target state="translated">这个方法可能会失败,抛出以下错误之一。</target>
        </trans-unit>
        <trans-unit id="4dcd07d51c59652f99a5b12a8030b3c50838d5e3" translate="yes" xml:space="preserve">
          <source>This method does nothing if the client is already connected.</source>
          <target state="translated">如果客户端已经连接,本方法不做任何操作。</target>
        </trans-unit>
        <trans-unit id="74b9c17757f7f26bc57a20c37bc79d6d49da3861" translate="yes" xml:space="preserve">
          <source>This method returns the status of the connection between the client and the server. The return value is an object with the following fields:</source>
          <target state="translated">这个方法返回客户端和服务器之间的连接状态。返回值是一个包含以下字段的对象。</target>
        </trans-unit>
        <trans-unit id="f83d5ba415f5b6d71caf10ce74bdd3390d233ae8" translate="yes" xml:space="preserve">
          <source>This migration, which is sequenced to be the first migration to run over the database, will, when called, bring each list up to date with the current todo count.</source>
          <target state="translated">这个迁移是按顺序排列的,是在数据库上运行的第一个迁移,当被调用时,将使每个列表与当前的todo计数保持一致。</target>
        </trans-unit>
        <trans-unit id="5a9cda279a9be008b8893e91e2b611934eb188c0" translate="yes" xml:space="preserve">
          <source>This package also allows you to add handlers for HTTP requests. This lets other services access your app&amp;rsquo;s data through an HTTP API, allowing it to easily interoperate with tools and frameworks that don&amp;rsquo;t yet support DDP.</source>
          <target state="translated">该软件包还允许您添加HTTP请求的处理程序。这使其他服务可以通过HTTP API访问应用程序的数据，从而使其可以轻松地与尚不支持DDP的工具和框架进行互操作。</target>
        </trans-unit>
        <trans-unit id="88c4f2192b968c8539e39c850904cfb5d88a576c" translate="yes" xml:space="preserve">
          <source>This package causes Meteor to require that all arguments passed to methods and publish functions are &lt;a href=&quot;#check&quot;&gt;checked&lt;/a&gt;. Any method that does not pass each one of its arguments to &lt;code&gt;check&lt;/code&gt; will throw an error, which will be logged on the server and which will appear to the client as a &lt;code&gt;500 Internal server error&lt;/code&gt;. This is a simple way to help ensure that your app has complete check coverage.</source>
          <target state="translated">此程序包使Meteor要求&lt;a href=&quot;#check&quot;&gt;检查&lt;/a&gt;传递给方法和发布函数的所有参数。任何不通过其每个参数进行 &lt;code&gt;check&lt;/code&gt; 将引发错误，该错误将记录在服务器上，并在客户端显示为 &lt;code&gt;500 Internal server error&lt;/code&gt; 。这是帮助确保您的应用程序具有完整检查范围的简单方法。</target>
        </trans-unit>
        <trans-unit id="8e7a2a2ce9dbe7b4d56a019bdf8af6c776e97b35" translate="yes" xml:space="preserve">
          <source>This package depends on &lt;a href=&quot;https://github.com/meteor/meteor/tree/devel/packages/non-core/npm-node-aes-gcm&quot;&gt;npm-node-aes-gcm&lt;/a&gt;, which requires you to have OpenSSL installed on your system to run. To install OpenSSL on Windows, use one of the binaries on &lt;a href=&quot;http://slproweb.com/products/Win32OpenSSL.html&quot;&gt;this page&lt;/a&gt;. Don&amp;rsquo;t forget to install the Visual Studio 2008 redistributables if you don&amp;rsquo;t have them yet.</source>
          <target state="translated">该软件包取决于&lt;a href=&quot;https://github.com/meteor/meteor/tree/devel/packages/non-core/npm-node-aes-gcm&quot;&gt;npm-node-aes-gcm&lt;/a&gt;，它要求您在系统上安装OpenSSL才能运行。要在Windows上安装OpenSSL，请使用&lt;a href=&quot;http://slproweb.com/products/Win32OpenSSL.html&quot;&gt;此页面&lt;/a&gt;上的二进制文件之一。如果还没有安装Visual Studio 2008可再发行组件，请不要忘记安装它们。</target>
        </trans-unit>
        <trans-unit id="cb32dccefe9ece55571ae3a2429d3bebc1760c17" translate="yes" xml:space="preserve">
          <source>This package depends on &lt;a href=&quot;https://github.com/meteor/meteor/tree/devel/packages/non-core/npm-node-aes-gcm&quot;&gt;npm-node-aes-gcm&lt;/a&gt;, which requires you to have OpenSSL installed on your system to run. To install OpenSSL on Windows, use one of the binaries on &lt;a href=&quot;https://slproweb.com/products/Win32OpenSSL.html&quot;&gt;this page&lt;/a&gt;. Don&amp;rsquo;t forget to install the Visual Studio 2008 redistributables if you don&amp;rsquo;t have them yet.</source>
          <target state="translated">该软件包取决于&lt;a href=&quot;https://github.com/meteor/meteor/tree/devel/packages/non-core/npm-node-aes-gcm&quot;&gt;npm-node-aes-gcm&lt;/a&gt;，它要求您在系统上安装OpenSSL才能运行。要在Windows上安装OpenSSL，请使用&lt;a href=&quot;https://slproweb.com/products/Win32OpenSSL.html&quot;&gt;此页面&lt;/a&gt;上的二进制文件之一。如果您还没有Visual Studio 2008可再发行组件，请不要忘记安装它们。</target>
        </trans-unit>
        <trans-unit id="dc8ed5a9b6b0c2d0403c7ea5b473b18617755da9" translate="yes" xml:space="preserve">
          <source>This package exports a function named &lt;code&gt;onPageLoad&lt;/code&gt; which takes a callback function that will be called at page load (on the client) or whenever a new request happens (on the server).</source>
          <target state="translated">此程序包导出名为 &lt;code&gt;onPageLoad&lt;/code&gt; 的函数，该函数具有一个回调函数，该函数将在页面加载时（在客户端上）或每当有新请求发生时（在服务器上）调用。</target>
        </trans-unit>
        <trans-unit id="801611c7f69b14d0acd01859ac3266f4e2976b62" translate="yes" xml:space="preserve">
          <source>This package implements generic support for server-side rendering in Meteor apps, by providing a mechanism for injecting fragments of HTML into the &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; and/or &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; of the application&amp;rsquo;s initial HTML response.</source>
          <target state="translated">该软件包通过提供一种将HTML片段注入到应用程序初始HTML响应的 &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; 和/或 &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; 中的机制，为Meteor应用程序中的服务器端渲染实现了通用支持。</target>
        </trans-unit>
        <trans-unit id="b2e97b74b5413d63b2e976de4ef86343e97411c5" translate="yes" xml:space="preserve">
          <source>This package is the core of Meteor&amp;rsquo;s developer-facing user accounts functionality. This includes:</source>
          <target state="translated">该软件包是Meteor面向开发人员的用户帐户功能的核心。这包括：</target>
        </trans-unit>
        <trans-unit id="80fa61d7865956796febe9210ec66eda836f241d" translate="yes" xml:space="preserve">
          <source>This package lets you use Markdown in your templates. It&amp;rsquo;s easy: just put your markdown inside &lt;code&gt;{{#markdown}} ... {{/markdown}}&lt;/code&gt; tags. You can still use all of the usual Meteor template features inside a Markdown block, such as &lt;code&gt;{{#each}}&lt;/code&gt;, and you still get reactivity.</source>
          <target state="translated">该软件包可让您在模板中使用Markdown。这很容易：只需将您的markdown放在 &lt;code&gt;{{#markdown}} ... {{/markdown}}&lt;/code&gt; 标签内。您仍然可以在Markdown块中使用所有常规的Meteor模板功能，例如 &lt;code&gt;{{#each}}&lt;/code&gt; ，并且仍然可以进行反应。</target>
        </trans-unit>
        <trans-unit id="6a4e961bf0fc729e479ae4a4d0a644d2e705a5f8" translate="yes" xml:space="preserve">
          <source>This package lets you use new JavaScript language features that are part of the &lt;a href=&quot;http://www.ecma-international.org/ecma-262/6.0/&quot;&gt;ECMAScript 2015 specification&lt;/a&gt; but are not yet supported by all engines or browsers. Unsupported syntax is automatically translated into standard JavaScript that behaves the same way.</source>
          <target state="translated">该软件包可让您使用&lt;a href=&quot;http://www.ecma-international.org/ecma-262/6.0/&quot;&gt;ECMAScript 2015规范&lt;/a&gt;中包含的JavaScript新功能，但并非所有引擎或浏览器都支持。不支持的语法会自动转换为行为相同的标准JavaScript。</target>
        </trans-unit>
        <trans-unit id="006b4651eab4288ede0a5b6e4c1adc9ac054c896" translate="yes" xml:space="preserve">
          <source>This package lets you use new JavaScript language features that are part of the &lt;a href=&quot;https://www.ecma-international.org/ecma-262/6.0/&quot;&gt;ECMAScript 2015 specification&lt;/a&gt; but are not yet supported by all engines or browsers. Unsupported syntax is automatically translated into standard JavaScript that behaves the same way.</source>
          <target state="translated">此软件包可让您使用&lt;a href=&quot;https://www.ecma-international.org/ecma-262/6.0/&quot;&gt;ECMAScript 2015规范中&lt;/a&gt;包含的新JavaScript语言功能，但并非所有引擎或浏览器都支持这些功能。不支持的语法会自动转换为行为相同的标准JavaScript。</target>
        </trans-unit>
        <trans-unit id="20b909aee537737131c5908ff7f5d3bee31b5c58" translate="yes" xml:space="preserve">
          <source>This package requires data provided by the project&amp;rsquo;s minifier. For this reason, it is necessary to use the official &lt;code&gt;standard-minifier-js&lt;/code&gt; package or a minifier which includes file-size details obtained during minification.</source>
          <target state="translated">此软件包需要项目的缩小器提供的数据。因此，有必要使用官方的 &lt;code&gt;standard-minifier-js&lt;/code&gt; 软件包或一个包含在压缩期间获得的文件大小详细信息的压缩器。</target>
        </trans-unit>
        <trans-unit id="a8112cf60cd8f8bde1fa31e9f72d1cf81609fbdc" translate="yes" xml:space="preserve">
          <source>This package utilizes the &lt;code&gt;&amp;lt;hash&amp;gt;.stats.json&lt;/code&gt; files which are written alongside file bundles when the application is ran with the &lt;code&gt;--production&lt;/code&gt; flag. The specific details for the minified file sizes is added by the minifier package and therefore it&amp;rsquo;s important to review the minifier requirements below.</source>
          <target state="translated">该软件包利用 &lt;code&gt;&amp;lt;hash&amp;gt;.stats.json&lt;/code&gt; 文件，当使用 &lt;code&gt;--production&lt;/code&gt; 标志运行应用程序时，这些文件与文件捆绑包一起写入。压缩程序包中添加了缩小文件大小的特定详细信息，因此，请务必仔细阅读下面的压缩程序要求。</target>
        </trans-unit>
        <trans-unit id="d86cd0f3de421a09763190d39a42110bf482dbe8" translate="yes" xml:space="preserve">
          <source>This predefined &lt;code&gt;Accounts&lt;/code&gt; object (along with similar convenience methods of &lt;code&gt;Meteor&lt;/code&gt;, such as &lt;a href=&quot;#meteor_logout&quot;&gt;&lt;code&gt;Meteor.logout&lt;/code&gt;&lt;/a&gt;) is sufficient to implement most accounts-related logic in Meteor apps. Nevertheless, these two constructors can be instantiated more than once, to create multiple independent connections between different accounts servers and their clients, in more complicated authentication situations.</source>
          <target state="translated">这个预定义的 &lt;code&gt;Accounts&lt;/code&gt; 对象（以及类似 &lt;code&gt;Meteor&lt;/code&gt; 的便捷方法，例如&lt;a href=&quot;#meteor_logout&quot;&gt; &lt;code&gt;Meteor.logout&lt;/code&gt; &lt;/a&gt;）足以在Meteor应用程序中实现大多数与帐户相关的逻辑。但是，在更复杂的身份验证情况下，可以多次实例化这两个构造函数，以在不同帐户服务器及其客户端之间创建多个独立的连接。</target>
        </trans-unit>
        <trans-unit id="11c4a6fc2f5f5924859380777c5c56621212bd0a" translate="yes" xml:space="preserve">
          <source>This property is a convenience to support the common pattern where a computation has logic specific to the first run.</source>
          <target state="translated">这个属性是一种方便,用来支持常见的模式,即计算有特定于第一次运行的逻辑。</target>
        </trans-unit>
        <trans-unit id="4ae5bddb8bb73be03a77d52e596196e40e29091a" translate="yes" xml:space="preserve">
          <source>This property is initially false. It is set to true by &lt;code&gt;stop()&lt;/code&gt; and &lt;code&gt;invalidate()&lt;/code&gt;. It is reset to false when the computation is recomputed at flush time.</source>
          <target state="translated">此属性最初为false。通过 &lt;code&gt;stop()&lt;/code&gt; 和 &lt;code&gt;invalidate()&lt;/code&gt; 将其设置为true 。在刷新时间重新计算时，它将重置为false。</target>
        </trans-unit>
        <trans-unit id="fb00818fbd4c3f0ee41c33e0ab820318dc22e1a2" translate="yes" xml:space="preserve">
          <source>This property provides access to the data context at the top level of the template. It is updated each time the template is re-rendered. Access is read-only and non-reactive.</source>
          <target state="translated">此属性提供对模板顶层数据上下文的访问。每次重新渲染模板时,该属性都会更新。访问是只读的,非反应性的。</target>
        </trans-unit>
        <trans-unit id="587ae170156cabbbb1873110223a0a24e094712c" translate="yes" xml:space="preserve">
          <source>This publication will let the client pass an array of user IDs it&amp;rsquo;s interested in, and get the initials for all of those users.</source>
          <target state="translated">该出版物将使客户端可以传递其感兴趣的用户ID数组，并获得所有这些用户的姓名缩写。</target>
        </trans-unit>
        <trans-unit id="047a4a73f6287c3aae77e94110795e810f780ecc" translate="yes" xml:space="preserve">
          <source>This removes the package entirely. To continue using the package, but remove its version constraint, use &lt;a href=&quot;#meteoradd&quot;&gt;&lt;code&gt;meteor add&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">这将完全删除该程序包。要继续使用该软件包，但删除其版本限制，请使用&lt;a href=&quot;#meteoradd&quot;&gt; &lt;code&gt;meteor add&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2d1220c5c6562fab58e9ce30b67ea6ba7f2f5999" translate="yes" xml:space="preserve">
          <source>This route handler will run in two situations: if the page loads initially at a URL that matches the URL pattern, or if the URL changes to one that matches the pattern while the page is open. Note that, unlike in a server-side-rendered app, the URL can change without any additional requests to the server.</source>
          <target state="translated">这个路由处理程序将在两种情况下运行:如果页面最初加载的URL与URL模式相匹配,或者当页面打开时URL变更为与模式相匹配的URL。请注意,与服务器端渲染的应用程序不同,URL可以在不向服务器发出任何额外请求的情况下进行更改。</target>
        </trans-unit>
        <trans-unit id="1143251d242c452f6bc2432fe1288e1cc774476f" translate="yes" xml:space="preserve">
          <source>This snippet illustrates a few things:</source>
          <target state="translated">这个片段说明了几个问题。</target>
        </trans-unit>
        <trans-unit id="cc1be5265ed6b663c3c7f231529f42fd1bd6242a" translate="yes" xml:space="preserve">
          <source>This subscribes you to the chat messages in the current room and to your private messages. When you change rooms by calling &lt;code&gt;Session.set('currentRoom',
'newRoom')&lt;/code&gt;, Meteor will subscribe to the new room&amp;rsquo;s chat messages, unsubscribe from the original room&amp;rsquo;s chat messages, and continue to stay subscribed to your private messages.</source>
          <target state="translated">这将使您订阅当前房间中的聊天消息以及私人消息。当您通过调用 &lt;code&gt;Session.set('currentRoom', 'newRoom')&lt;/code&gt; 更改会议室时，Meteor将订阅新会议室的聊天消息，取消订阅原始会议室的聊天消息，并继续保持对私人消息的订阅。</target>
        </trans-unit>
        <trans-unit id="d7753196602f0f2606a0a72f558e9df929883512" translate="yes" xml:space="preserve">
          <source>This technique has a few disadvantages:</source>
          <target state="translated">这种技术有一些缺点。</target>
        </trans-unit>
        <trans-unit id="f46b4e27a3d324e56832175b5b5a854a0e6d1b16" translate="yes" xml:space="preserve">
          <source>This technique will only work on the server. If you need to reset the database from a client test, you can use a method to do so:</source>
          <target state="translated">这种技术只能在服务器上使用。如果你需要从客户端测试中重置数据库,你可以使用一种方法来重置。</target>
        </trans-unit>
        <trans-unit id="61916130428c7c39febc6a5b00a7fc3490f64309" translate="yes" xml:space="preserve">
          <source>This template expects to be rendered with an object with key &lt;code&gt;todo&lt;/code&gt; as data context (we&amp;rsquo;ll see &lt;a href=&quot;reusable-components#Validate-data-context&quot;&gt;below&lt;/a&gt; how to enforce that). We access the properties of the &lt;code&gt;todo&lt;/code&gt; using the mustache tag, such as &lt;code&gt;{{todo.text}}&lt;/code&gt;. The default behavior is to render that property as a string; however for some attributes (such as &lt;code&gt;checked={{todo.checked}}&lt;/code&gt;) it can be resolved as a boolean value.</source>
          <target state="translated">该模板期望使用具有键 &lt;code&gt;todo&lt;/code&gt; 的对象作为数据上下文呈现（我们将&lt;a href=&quot;reusable-components#Validate-data-context&quot;&gt;在下面&lt;/a&gt;看到如何执行该操作）。我们使用小胡子标记（例如 &lt;code&gt;{{todo.text}}&lt;/code&gt; )访问 &lt;code&gt;todo&lt;/code&gt; 的属性。默认行为是将该属性呈现为字符串。但是，对于某些属性（例如 &lt;code&gt;checked={{todo.checked}}&lt;/code&gt; ），可以将其解析为布尔值。</target>
        </trans-unit>
        <trans-unit id="99aa26bcf6e8036b27297eaf0ee901e829f04cb5" translate="yes" xml:space="preserve">
          <source>This template tag cannot be used in attributes or in an HTML start tag.</source>
          <target state="translated">这个模板标签不能用于属性或HTML开头标签。</target>
        </trans-unit>
        <trans-unit id="4fd60aaa94235fd5c2bccfebc902b5e5f028e4f7" translate="yes" xml:space="preserve">
          <source>This threatens to leave many older Android devices behind however, because they would be stuck on the web view included with the OS and are often unable to update to newer OS versions. Fortunately, the &lt;a href=&quot;https://crosswalk-project.org/documentation/cordova.html&quot;&gt;Crosswalk plugin&lt;/a&gt; allows you to embed Chromium in your app and use it instead of the web view that comes with the OS on any of the Android versions supported by Cordova (currently Android 4.0 or higher). Embedding Chromium means the size of your APK will grow by about 20MB, but the benefit is that you can rely on a consistent web view with considerably better performance and enhanced standards support.</source>
          <target state="translated">但是，这可能会使许多较旧的Android设备滞后，因为它们会卡在OS随附的Web视图中，并且通常无法更新到较新的OS版本。幸运的是，&lt;a href=&quot;https://crosswalk-project.org/documentation/cordova.html&quot;&gt;Crosswalk插件&lt;/a&gt;可让您将Chromium嵌入到您的应用程序中，而不是在Cordova支持的任何Android版本（当前为Android 4.0或更高版本）上使用OS随附的Web视图。嵌入Chromium意味着您的APK的大小将增加约20MB，但好处是您可以依靠一致的Web视图来获得更好的性能和增强的标准支持。</target>
        </trans-unit>
        <trans-unit id="b290580d14297d70b42dba5af21fd3331e72d861" translate="yes" xml:space="preserve">
          <source>This triggers a call to &lt;a href=&quot;#accounts_sendresetpasswordemail&quot;&gt;&lt;code&gt;Accounts.sendResetPasswordEmail&lt;/code&gt;&lt;/a&gt; on the server. When the user visits the link in this email, the callback registered with &lt;a href=&quot;#Accounts-onResetPasswordLink&quot;&gt;&lt;code&gt;Accounts.onResetPasswordLink&lt;/code&gt;&lt;/a&gt; will be called.</source>
          <target state="translated">这将触发对服务器上&lt;a href=&quot;#accounts_sendresetpasswordemail&quot;&gt; &lt;code&gt;Accounts.sendResetPasswordEmail&lt;/code&gt; &lt;/a&gt;的调用。当用户访问此电子邮件中的链接时，将调用在&lt;a href=&quot;#Accounts-onResetPasswordLink&quot;&gt; &lt;code&gt;Accounts.onResetPasswordLink&lt;/code&gt; 中&lt;/a&gt;注册的回调。</target>
        </trans-unit>
        <trans-unit id="6e78af78626e2d274d2efffe0137fb644bc10d58" translate="yes" xml:space="preserve">
          <source>This value indicates, whether a flush is in progress or not.</source>
          <target state="translated">该值表示,是否正在进行冲洗。</target>
        </trans-unit>
        <trans-unit id="16a3b01978773414a6791844da14b071c10debc4" translate="yes" xml:space="preserve">
          <source>This value is useful for data source implementations to determine whether they are being accessed reactively or not.</source>
          <target state="translated">这个值对于数据源的实现很有用,可以确定它们是否被反应性地访问。</target>
        </trans-unit>
        <trans-unit id="00e25c0f0c2b9b088c9d6549c9a282416f6cdd2b" translate="yes" xml:space="preserve">
          <source>This visualization can uncover details about which files or packages are occupying space within the initial client bundle. This can be useful in determining which imports might be candidates for being converted to dynamic &lt;code&gt;import()&lt;/code&gt; statements (which are excluded from the initial client bundle), or for identifying packages which have been inadvertently included in a project.</source>
          <target state="translated">该可视化可以发现有关哪些文件或软件包正在占用初始客户端捆绑软件中的空间的详细信息。这对于确定哪些导入可能是转换为动态 &lt;code&gt;import()&lt;/code&gt; 语句（从初始客户端捆绑包中排除）的候选对象，或用于识别无意中包含在项目中的程序包很有用。</target>
        </trans-unit>
        <trans-unit id="2484bce687a38d7267ef24756c09c0bf48a19416" translate="yes" xml:space="preserve">
          <source>This way you get the full reactive power of the store.</source>
          <target state="translated">这样一来,你就可以获得商店的全部无功功率。</target>
        </trans-unit>
        <trans-unit id="0ccc372c2aae5302b11a64624bdca5e27ef9ece9" translate="yes" xml:space="preserve">
          <source>This will add the newest version of the desired package that is compatible with the other packages in your app. If you want to specify a particular version, you can specify it by adding a suffix to the package name like: &lt;code&gt;meteor add kadira:flow-router@2.10.0&lt;/code&gt;.</source>
          <target state="translated">这将添加与您的应用程序中的其他软件包兼容的所需软件包的最新版本。如果要指定特定版本，可以通过在包名称后添加后缀来指定它，例如： &lt;code&gt;meteor add kadira:flow-router@2.10.0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8af6528337b018bf0e73207d060ed653d2043fb9" translate="yes" xml:space="preserve">
          <source>This will both update your &lt;code&gt;package.json&lt;/code&gt; with information about the dependency and download the package into your app&amp;rsquo;s local &lt;code&gt;node_modules/&lt;/code&gt; directory. Typically, you don&amp;rsquo;t check the &lt;code&gt;node_modules/&lt;/code&gt; directory into source control and your teammates run &lt;code&gt;meteor npm install&lt;/code&gt; to get up to date when dependencies change:</source>
          <target state="translated">这将使用有关依赖项的信息来更新 &lt;code&gt;package.json&lt;/code&gt; 并将该包下载到应用程序的本地 &lt;code&gt;node_modules/&lt;/code&gt; 目录中。通常，您无需将 &lt;code&gt;node_modules/&lt;/code&gt; 目录检入源代码管理，并且您的队友运行 &lt;code&gt;meteor npm install&lt;/code&gt; 来获取依赖项更改时的最新信息：</target>
        </trans-unit>
        <trans-unit id="0b0f429ae05b1d3a65fdc3c547b24d79b7ececf2" translate="yes" xml:space="preserve">
          <source>This will create an &lt;code&gt;npm-shrinkwrap.json&lt;/code&gt; file containing the exact versions of each dependency, and you should check this file into source control. For even more precision (the contents of a given version of a package &lt;em&gt;can&lt;/em&gt; change), and to avoid a reliance on the npm server during deployment, you should consider using &lt;a href=&quot;#npm-shrinkpack&quot;&gt;&lt;code&gt;npm shrinkpack&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">这将创建一个 &lt;code&gt;npm-shrinkwrap.json&lt;/code&gt; 文件，其中包含每个依赖项的确切版本，您应该将此文件检入源代码管理。为了获得更高的精度（包的给定版本的内容&lt;em&gt;可以&lt;/em&gt;更改），并且为了避免在部署过程中依赖npm服务器，您应该考虑使用&lt;a href=&quot;#npm-shrinkpack&quot;&gt; &lt;code&gt;npm shrinkpack&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="674cc981f9cbe7f05f2e547d4d0f5c3c73d94911" translate="yes" xml:space="preserve">
          <source>This will generate a directory at &lt;code&gt;&amp;lt;build-output-directory&amp;gt;&lt;/code&gt;, which includes a server bundle tarball and the project source for each targeted mobile platform in the &lt;code&gt;/ios&lt;/code&gt; and &lt;code&gt;/android&lt;/code&gt; directories.</source>
          <target state="translated">这将在 &lt;code&gt;&amp;lt;build-output-directory&amp;gt;&lt;/code&gt; 处生成一个目录，该目录包括服务器捆绑包tarball和 &lt;code&gt;/ios&lt;/code&gt; 和 &lt;code&gt;/android&lt;/code&gt; 目录中每个目标移动平台的项目源。</target>
        </trans-unit>
        <trans-unit id="ba4f7b787374b855dcd48af800c0b12543a38390" translate="yes" xml:space="preserve">
          <source>This will install &lt;code&gt;react&lt;/code&gt; into your project and allow you to access it within your files with &lt;code&gt;import React from 'react'&lt;/code&gt;. Most React code is written in &lt;a href=&quot;https://facebook.github.io/react/docs/jsx-in-depth.html&quot;&gt;JSX&lt;/a&gt;, which you can use by &lt;a href=&quot;http://guide.meteor.com/build-tool.html#react-jsx&quot;&gt;default in Meteor&lt;/a&gt; if you include the &lt;code&gt;ecmascript&lt;/code&gt; package (which is installed in all Meteor apps by default).</source>
          <target state="translated">这将把 &lt;code&gt;react&lt;/code&gt; 安装到您的项目中，并允许您 &lt;code&gt;import React from 'react'&lt;/code&gt; 在文件中访问它。大多数做出反应的代码写在&lt;a href=&quot;https://facebook.github.io/react/docs/jsx-in-depth.html&quot;&gt;JSX&lt;/a&gt;，您可以通过使用&lt;a href=&quot;http://guide.meteor.com/build-tool.html#react-jsx&quot;&gt;默认的流星&lt;/a&gt;，如果你包括 &lt;code&gt;ecmascript&lt;/code&gt; 包（这是默认安装在所有流星的应用程序）。</target>
        </trans-unit>
        <trans-unit id="c7bc7dbeba23dc5ab03e040f2caabd3e92a29378" translate="yes" xml:space="preserve">
          <source>This will make every Method only callable 5 times per second per connection. This is a rate limit that shouldn&amp;rsquo;t be noticeable by the user at all, but will prevent a malicious script from totally flooding the server with requests. You will need to tune the limit parameters to match your app&amp;rsquo;s needs.</source>
          <target state="translated">这将使每个方法每秒每个连接只能调用5次。这是一个速率限制，用户根本不应该注意到它，但是它将阻止恶意脚本将请求完全淹没服务器。您将需要调整限制参数以符合您的应用程序的需求。</target>
        </trans-unit>
        <trans-unit id="d00463c67f24a756272b7c19d96a983f98dce029" translate="yes" xml:space="preserve">
          <source>This will provide you with a bundled application &lt;code&gt;.tar.gz&lt;/code&gt; which you can extract and run without the &lt;code&gt;meteor&lt;/code&gt; tool. The environment you choose will need the correct version of Node.js and connectivity to a MongoDB server.</source>
          <target state="translated">这将为您提供一个捆绑的应用程序 &lt;code&gt;.tar.gz&lt;/code&gt; ，您可以在没有 &lt;code&gt;meteor&lt;/code&gt; 工具的情况下提取并运行它。您选择的环境将需要正确版本的Node.js并连接到MongoDB服务器。</target>
        </trans-unit>
        <trans-unit id="7c3e01dd8888acaa316a8d408f465642baa4cd94" translate="yes" xml:space="preserve">
          <source>This will run a special app containing only a &amp;ldquo;test&amp;rdquo; version of your package and start a Mocha &lt;a href=&quot;testing#driver-packages&quot;&gt;test driver package&lt;/a&gt;.</source>
          <target state="translated">这将运行一个仅包含软件包&amp;ldquo;测试&amp;rdquo;版本的特殊应用程序，并启动Mocha &lt;a href=&quot;testing#driver-packages&quot;&gt;测试驱动程序软件包&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="631977ba51c5ef6322cb4a01ef1125dcdc3b59c4" translate="yes" xml:space="preserve">
          <source>This will run your app on a default simulated iOS device. You can open Xcode to install and select another simulated device.</source>
          <target state="translated">这将在默认的模拟iOS设备上运行你的应用程序。你可以打开Xcode进行安装,并选择另一个模拟设备。</target>
        </trans-unit>
        <trans-unit id="faaee2d55a8237b2d82a8ce38647f9502d00edf7" translate="yes" xml:space="preserve">
          <source>This works just like &lt;a href=&quot;#allow&quot;&gt;&lt;code&gt;allow&lt;/code&gt;&lt;/a&gt;, except it lets you make sure that certain writes are definitely denied, even if there is an &lt;code&gt;allow&lt;/code&gt; rule that says that they should be permitted.</source>
          <target state="translated">这与&lt;a href=&quot;#allow&quot;&gt; &lt;code&gt;allow&lt;/code&gt; &lt;/a&gt;一样，除了允许您确保某些写入绝对被拒绝（即使存在 &lt;code&gt;allow&lt;/code&gt; 该写入的允许规则）之外，它的工作原理也一样。</target>
        </trans-unit>
        <trans-unit id="0c906b8ece5764400141a1240ce8dd7ae9a3eb69" translate="yes" xml:space="preserve">
          <source>Though Meteor 1.2 introduced support for &lt;a href=&quot;https://github.com/meteor/meteor/blob/devel/packages/ecmascript/README.md#supported-es2015-features&quot;&gt;many new ECMAScript 2015 features&lt;/a&gt;, one of the most notable omissions was &lt;a href=&quot;http://exploringjs.com/es6/ch_modules.html&quot;&gt;ES2015 &lt;code&gt;import&lt;/code&gt; and &lt;code&gt;export&lt;/code&gt; syntax&lt;/a&gt;. Meteor 1.3 fills that gap with a fully standards-compliant module system that works on both the client and the server, solves multiple long-standing problems for Meteor applications (such as controlling file load order), and yet maintains full backwards compatibility with existing Meteor code. This document explains the usage and key features of the new module system.</source>
          <target state="translated">尽管Meteor 1.2引入了对&lt;a href=&quot;https://github.com/meteor/meteor/blob/devel/packages/ecmascript/README.md#supported-es2015-features&quot;&gt;许多新ECMAScript 2015功能的&lt;/a&gt;支持，但最值得注意的遗漏之一是&lt;a href=&quot;http://exploringjs.com/es6/ch_modules.html&quot;&gt;ES2015 &lt;code&gt;import&lt;/code&gt; 和 &lt;code&gt;export&lt;/code&gt; 语法&lt;/a&gt;。 Meteor 1.3通过在客户端和服务器上均可使用的完全符合标准的模块系统填补了这一空白，解决了Meteor应用程序的多个长期存在的问题（例如控制文件加载顺序），但仍保持与现有Meteor的完全向后兼容性码。本文档说明了新模块系统的用法和主要功能。</target>
        </trans-unit>
        <trans-unit id="418c3d8b355720dc7fb8cd91171708c487964921" translate="yes" xml:space="preserve">
          <source>Throttling method calls on user action</source>
          <target state="translated">节流方法调用用户操作</target>
        </trans-unit>
        <trans-unit id="19237b8bc8352c4f24f44ebb12277437918eb9e8" translate="yes" xml:space="preserve">
          <source>Throwing errors from a Method</source>
          <target state="translated">从方法中抛出错误</target>
        </trans-unit>
        <trans-unit id="0c50361a14d76093904430e81fc260348a28b36b" translate="yes" xml:space="preserve">
          <source>Thus it&amp;rsquo;s a good way to develop the test&amp;mdash;this is why chimp has a feature where we mark tests with a &lt;code&gt;@watch&lt;/code&gt; in the name to call out the tests we want to work on (running our entire acceptance test suite can be time consuming in a large application).</source>
          <target state="translated">因此，这是开发测试的一种好方法-这就是为什么黑猩猩具有一个功能，其中我们在测试名称 &lt;code&gt;@watch&lt;/code&gt; 标记测试以调用我们要进行的测试（运行整个验收测试套件可能会很耗时。大型应用程序）。</target>
        </trans-unit>
        <trans-unit id="80f7bfc991a68ad35271fc4c44c57c7313dda264" translate="yes" xml:space="preserve">
          <source>Thus it&amp;rsquo;s best to keep the size of the cache below 5MB. The &lt;code&gt;appcache&lt;/code&gt; package will print a warning on the Meteor server console if the total size of the resources being cached is over 5MB.</source>
          <target state="translated">因此，最好将缓存的大小保持在5MB以下。如果正在缓存的资源总大小超过5MB ，则 &lt;code&gt;appcache&lt;/code&gt; 软件包将在Meteor服务器控制台上显示警告。</target>
        </trans-unit>
        <trans-unit id="841cd03a97cd854590864d79ae48ee749c5e902e" translate="yes" xml:space="preserve">
          <source>Timers</source>
          <target state="translated">Timers</target>
        </trans-unit>
        <trans-unit id="af43d192a2db078a74e425ebd0d1c79c0db4abe8" translate="yes" xml:space="preserve">
          <source>To achieve a similar abstraction for subscriptions/publications, you may want to write a simple wrapper for &lt;code&gt;Meteor.subscribe()&lt;/code&gt;.</source>
          <target state="translated">为了实现订阅/发布的类似抽象，您可能需要为 &lt;code&gt;Meteor.subscribe()&lt;/code&gt; 写一个简单的包装。</target>
        </trans-unit>
        <trans-unit id="307b88b07be557df43048b1b3f979a69bd726011" translate="yes" xml:space="preserve">
          <source>To add &lt;code&gt;Session&lt;/code&gt; to your application, run this command in your terminal:</source>
          <target state="translated">要将 &lt;code&gt;Session&lt;/code&gt; 添加到您的应用程序，请在终端中运行以下命令：</target>
        </trans-unit>
        <trans-unit id="d66430b590f84a3a149870f6747c2e3c611fccb2" translate="yes" xml:space="preserve">
          <source>To add &lt;code&gt;check&lt;/code&gt; (or &lt;code&gt;Match&lt;/code&gt;) to your application, run this command in your terminal:</source>
          <target state="translated">要将 &lt;code&gt;check&lt;/code&gt; （或 &lt;code&gt;Match&lt;/code&gt; ）添加到您的应用程序，请在终端中运行以下命令：</target>
        </trans-unit>
        <trans-unit id="8471b2c71056ace887facad475281c4bcc82e584" translate="yes" xml:space="preserve">
          <source>To add Accounts and a set of login controls to an application, add the &lt;code&gt;accounts-ui&lt;/code&gt; package and at least one login provider package: &lt;code&gt;accounts-password&lt;/code&gt;, &lt;code&gt;accounts-facebook&lt;/code&gt;, &lt;code&gt;accounts-github&lt;/code&gt;, &lt;code&gt;accounts-google&lt;/code&gt;, &lt;code&gt;accounts-twitter&lt;/code&gt;, or &lt;code&gt;accounts-weibo&lt;/code&gt;.</source>
          <target state="translated">要将Accounts和一组登录控件添加到应用程序，请添加 &lt;code&gt;accounts-ui&lt;/code&gt; 程序包和至少一个登录提供程序包： &lt;code&gt;accounts-password&lt;/code&gt; ， &lt;code&gt;accounts-facebook&lt;/code&gt; ， &lt;code&gt;accounts-github&lt;/code&gt; ， &lt;code&gt;accounts-google&lt;/code&gt; ， &lt;code&gt;accounts-twitter&lt;/code&gt; 或 &lt;code&gt;accounts-weibo&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="56392a39ad658fa9a39f5f4104aa485de77753ad" translate="yes" xml:space="preserve">
          <source>To add Flow Router Extra to your app, install the &lt;code&gt;ostrio:flow-router-extra&lt;/code&gt; package</source>
          <target state="translated">要将Flow Router Extra添加到您的应用中，请安装 &lt;code&gt;ostrio:flow-router-extra&lt;/code&gt; 软件包</target>
        </trans-unit>
        <trans-unit id="bf6e1f6d46dabcbab0f79270020e6a693e92a930" translate="yes" xml:space="preserve">
          <source>To add Flow Router to your app, install the &lt;code&gt;kadira:flow-router&lt;/code&gt; package</source>
          <target state="translated">要将Flow Router添加到您的应用，请安装 &lt;code&gt;kadira:flow-router&lt;/code&gt; 软件包</target>
        </trans-unit>
        <trans-unit id="1df4465ea1c500c52f31b3a0dfa24a407bcb0200" translate="yes" xml:space="preserve">
          <source>To add Iron Router to your app, install the &lt;code&gt;iron:router&lt;/code&gt; package</source>
          <target state="translated">要将Iron Router添加到您的应用中，请安装 &lt;code&gt;iron:router&lt;/code&gt; 软件包</target>
        </trans-unit>
        <trans-unit id="f6f51538e10e4501f3e413cdc9568e5dd6845dc9" translate="yes" xml:space="preserve">
          <source>To add JavaScript files to a package, specify an entrypoint with &lt;a href=&quot;http://docs.meteor.com/#/full/pack_mainModule&quot;&gt;&lt;code&gt;api.mainModule()&lt;/code&gt;&lt;/a&gt; in the package&amp;rsquo;s &lt;code&gt;onUse&lt;/code&gt; block (this will already have been done by &lt;code&gt;meteor create --package&lt;/code&gt; above):</source>
          <target state="translated">要将JavaScript文件添加到包中，请在包的 &lt;code&gt;onUse&lt;/code&gt; 块中使用&lt;a href=&quot;http://docs.meteor.com/#/full/pack_mainModule&quot;&gt; &lt;code&gt;api.mainModule()&lt;/code&gt; &lt;/a&gt;指定一个入口点（上面的 &lt;code&gt;meteor create --package&lt;/code&gt; 已经完成了此操作）：</target>
        </trans-unit>
        <trans-unit id="bd33aa5cca26139c81c7aa17d474afe02cd166c9" translate="yes" xml:space="preserve">
          <source>To add password support to your application, run this command in your terminal:</source>
          <target state="translated">要为您的应用程序添加密码支持,请在您的终端中运行此命令。</target>
        </trans-unit>
        <trans-unit id="a91b992f039d7294ffa8597df760e09fd36c5904" translate="yes" xml:space="preserve">
          <source>To add reactive i18n inline in your React components, simply use the &lt;code&gt;i18n.createComponent()&lt;/code&gt; function and pass it keys from your translation file. Here&amp;rsquo;s an example of a simple component wrapping i18n&amp;rsquo;s translation component:</source>
          <target state="translated">要将反应式i18n内联添加到您的React组件中，只需使用 &lt;code&gt;i18n.createComponent()&lt;/code&gt; 函数并将其键从翻译文件中传递出去即可。这是包装i18n的翻译组件的简单组件的示例：</target>
        </trans-unit>
        <trans-unit id="fa3553eeaac76c328a7b706dc9771d0e9fb911e6" translate="yes" xml:space="preserve">
          <source>To add routing to your app, install the &lt;a href=&quot;https://atmospherejs.com/kadira/flow-router&quot;&gt;&lt;code&gt;kadira:flow-router&lt;/code&gt;&lt;/a&gt; package:</source>
          <target state="translated">要将路由添加到您的应用，请安装&lt;a href=&quot;https://atmospherejs.com/kadira/flow-router&quot;&gt; &lt;code&gt;kadira:flow-router&lt;/code&gt; &lt;/a&gt;软件包：</target>
        </trans-unit>
        <trans-unit id="42eff87f5eef6265383b75626ff84bf3616f0a23" translate="yes" xml:space="preserve">
          <source>To add the &lt;code&gt;ecmascript&lt;/code&gt; package to an existing package, include the statement &lt;code&gt;api.use('ecmascript');&lt;/code&gt; in the &lt;code&gt;Package.onUse&lt;/code&gt; callback in your &lt;code&gt;package.js&lt;/code&gt; file:</source>
          <target state="translated">要将 &lt;code&gt;ecmascript&lt;/code&gt; 软件包添加到现有软件包中，请包含语句 &lt;code&gt;api.use('ecmascript');&lt;/code&gt; 。在 &lt;code&gt;package.js&lt;/code&gt; 文件的 &lt;code&gt;Package.onUse&lt;/code&gt; 回调中：</target>
        </trans-unit>
        <trans-unit id="e20880d00bcbd5eb38c559d663c3ec8def55d73f" translate="yes" xml:space="preserve">
          <source>To add this package to an existing app, run the following command from your app directory:</source>
          <target state="translated">要将此包添加到现有的应用程序中,请从您的应用程序目录中运行以下命令。</target>
        </trans-unit>
        <trans-unit id="f2e320cb01c4441352f907ce775a3e219f34ae6a" translate="yes" xml:space="preserve">
          <source>To alleviate some of the boilerplate that&amp;rsquo;s involved in correct Method definitions, we&amp;rsquo;ve published a wrapper package called &lt;code&gt;mdg:validated-method&lt;/code&gt; that does most of this for you. Here&amp;rsquo;s the same Method as above, but defined with the package:</source>
          <target state="translated">为了减轻正确方法定义中涉及的一些样板，我们发布了一个名为 &lt;code&gt;mdg:validated-method&lt;/code&gt; 的包装程序包，该程序包将为您完成大部分工作。这是与上述相同的方法，但是是通过软件包定义的：</target>
        </trans-unit>
        <trans-unit id="92028f9907da1367d1d7658cebf0085075aa1418" translate="yes" xml:space="preserve">
          <source>To ask the user for permission to act on their behalf when offline, map the relevant external service to &lt;code&gt;true&lt;/code&gt;. Currently only supported with Google. See &lt;a href=&quot;#meteor_loginwithexternalservice&quot;&gt;Meteor.loginWithExternalService&lt;/a&gt; for more details.</source>
          <target state="translated">要请求用户在脱机时代表他们行事的许可，请将相关外部服务映射为 &lt;code&gt;true&lt;/code&gt; 。目前仅支持Google。有关更多详细信息，请参见&lt;a href=&quot;#meteor_loginwithexternalservice&quot;&gt;Meteor.loginWithExternalService&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2e82f474960847ab4e3dd5d96da479d395c87223" translate="yes" xml:space="preserve">
          <source>To avoid storing the secret key in your application&amp;rsquo;s source code, you can use &lt;a href=&quot;http://docs.meteor.com/#meteor_settings&quot;&gt;&lt;code&gt;Meteor.settings&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">为了避免将密钥存储在应用程序的源代码中，可以使用&lt;a href=&quot;http://docs.meteor.com/#meteor_settings&quot;&gt; &lt;code&gt;Meteor.settings&lt;/code&gt; &lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="bf138440e10ab58d920cbae068c264e3b9e8f6da" translate="yes" xml:space="preserve">
          <source>To avoid this problem as a package author, you can request that users of your package have installed the npm package you want to use at the application level. This is similar to a &lt;a href=&quot;https://nodejs.org/en/blog/npm/peer-dependencies/&quot;&gt;peer dependency&lt;/a&gt; of an npm package (although with less support in the tool). You can use the &lt;a href=&quot;https://atmospherejs.com/tmeasday/check-npm-versions&quot;&gt;&lt;code&gt;tmeasday:check-npm-versions&lt;/code&gt;&lt;/a&gt; package to ensure that they&amp;rsquo;ve done this, and to warn them if not.</source>
          <target state="translated">为了避免以软件包作者的身份出现此问题，您可以请求软件包的用户安装了要在应用程序级别使用的npm软件包。这类似于npm软件包的&lt;a href=&quot;https://nodejs.org/en/blog/npm/peer-dependencies/&quot;&gt;对等依赖关系&lt;/a&gt;（尽管该工具支持较少）。您可以使用&lt;a href=&quot;https://atmospherejs.com/tmeasday/check-npm-versions&quot;&gt; &lt;code&gt;tmeasday:check-npm-versions&lt;/code&gt; &lt;/a&gt;包来确保它们已执行此操作，如果没有，则发出警告。</target>
        </trans-unit>
        <trans-unit id="bcd4b2d79f3651510148354743c21d68fffcd7de" translate="yes" xml:space="preserve">
          <source>To avoid this, we try to detect faulty versions and revert to the last known good version when this happens. The way detection works is that we expect all &lt;code&gt;Meteor.startup()&lt;/code&gt; callbacks to complete within a set period of time. If this doesn&amp;rsquo;t happen we consider the version faulty and will rollback the update. Unless the version on the server has been updated in the meantime, the server will try to hot code push the faulty version again. Therefore, we blacklist faulty versions on the device so we know not to retry.</source>
          <target state="translated">为避免这种情况，我们尝试检测错误的版本，并在发生这种情况时还原到最后一个已知的正确版本。检测的工作方式是，我们希望所有 &lt;code&gt;Meteor.startup()&lt;/code&gt; 回调都将在设定的时间内完成。如果这没有发生，我们认为版本有问题，并将回滚更新。除非同时更新了服务器上的版本，否则服务器将尝试通过热代码再次推送错误的版本。因此，我们将设备上的错误版本列入黑名单，因此我们不希望重试。</target>
        </trans-unit>
        <trans-unit id="889da3514abbff3bdc30c516c15c84268a01e7c0" translate="yes" xml:space="preserve">
          <source>To be a unit test, we must stub out the dependencies of the module. In this case, thanks to the way we&amp;rsquo;ve isolated our code into a reusable component, there&amp;rsquo;s not much to do; principally we need to stub out the &lt;code&gt;{{_}}&lt;/code&gt; helper that&amp;rsquo;s created by the &lt;a href=&quot;ui-ux#i18n&quot;&gt;&lt;code&gt;tap:i18n&lt;/code&gt;&lt;/a&gt; system. Note that we stub it out in a &lt;code&gt;beforeEach&lt;/code&gt; and restore it the &lt;code&gt;afterEach&lt;/code&gt;.</source>
          <target state="translated">要进行单元测试，我们必须将模块的依赖项排除在外。在这种情况下，由于采用了将代码隔离为可重用组件的方式，因此无需做太多工作；原则上，我们需要将&lt;a href=&quot;ui-ux#i18n&quot;&gt; &lt;code&gt;tap:i18n&lt;/code&gt; &lt;/a&gt;系统创建的 &lt;code&gt;{{_}}&lt;/code&gt; 帮助程序存根。请注意，我们将其 &lt;code&gt;afterEach&lt;/code&gt; &lt;code&gt;beforeEach&lt;/code&gt; 并将其还原为afterEach。</target>
        </trans-unit>
        <trans-unit id="10ac96ab417fc38f4a32046c551631b848155388" translate="yes" xml:space="preserve">
          <source>To begin with, let&amp;rsquo;s consider two categories of UI components that are useful to think about, &amp;ldquo;reusable&amp;rdquo; and &amp;ldquo;smart&amp;rdquo;:</source>
          <target state="translated">首先，让我们考虑两类有用的UI组件：&amp;ldquo;可重用&amp;rdquo;和&amp;ldquo;智能&amp;rdquo;：</target>
        </trans-unit>
        <trans-unit id="ed4d5d454132455710ac21f80b063535219155fb" translate="yes" xml:space="preserve">
          <source>To call methods on another Meteor application or subscribe to its data sets, call &lt;code&gt;DDP.connect&lt;/code&gt; with the URL of the application. &lt;code&gt;DDP.connect&lt;/code&gt; returns an object which provides:</source>
          <target state="translated">要在另一个Meteor应用程序上调用方法或订阅其数据集，请使用该应用程序的URL 调用 &lt;code&gt;DDP.connect&lt;/code&gt; 。 &lt;code&gt;DDP.connect&lt;/code&gt; 返回一个对象，该对象提供：</target>
        </trans-unit>
        <trans-unit id="ad15d4e2108b5e4f4e18e56d209df75232e22ec6" translate="yes" xml:space="preserve">
          <source>To change the user&amp;rsquo;s language, use &lt;code&gt;i18n.setLocale('en-US')&lt;/code&gt;. &lt;code&gt;universe:i18n&lt;/code&gt; allows retrieval of additional translations by method as well as including JSON files with a client bundle.</source>
          <target state="translated">要更改用户的语言，请使用 &lt;code&gt;i18n.setLocale('en-US')&lt;/code&gt; 。 &lt;code&gt;universe:i18n&lt;/code&gt; 允许按方法检索其他翻译，以及将JSON文件与客户端捆绑包一起使用。</target>
        </trans-unit>
        <trans-unit id="81e88f12ad857f0a8069f69573d9439bf531b56b" translate="yes" xml:space="preserve">
          <source>To check if your device has been connected and set up correctly, you can run &lt;code&gt;adb devices&lt;/code&gt; to get a list of devices.</source>
          <target state="translated">要检查设备是否已连接并正确设置，可以运行 &lt;code&gt;adb devices&lt;/code&gt; 来获取设备列表。</target>
        </trans-unit>
        <trans-unit id="06bbb21b3f577bf0c5b96e583f3621b41becacc3" translate="yes" xml:space="preserve">
          <source>To configure the behavior of &lt;code&gt;{{&amp;gt; loginButtons}}&lt;/code&gt;, use &lt;a href=&quot;#accounts_ui_config&quot;&gt;&lt;code&gt;Accounts.ui.config&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">要配置 &lt;code&gt;{{&amp;gt; loginButtons}}&lt;/code&gt; 的行为，请使用&lt;a href=&quot;#accounts_ui_config&quot;&gt; &lt;code&gt;Accounts.ui.config&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="326d3654ef346299bdd5fe0a3e3a039237f16e67" translate="yes" xml:space="preserve">
          <source>To create a cursor, use &lt;a href=&quot;#find&quot;&gt;&lt;code&gt;find&lt;/code&gt;&lt;/a&gt;. To access the documents in a cursor, use &lt;a href=&quot;#foreach&quot;&gt;&lt;code&gt;forEach&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#map&quot;&gt;&lt;code&gt;map&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;#fetch&quot;&gt;&lt;code&gt;fetch&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">要创建光标，请使用&lt;a href=&quot;#find&quot;&gt; &lt;code&gt;find&lt;/code&gt; &lt;/a&gt;。要访问光标中的文档，请使用&lt;a href=&quot;#foreach&quot;&gt; &lt;code&gt;forEach&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#map&quot;&gt; &lt;code&gt;map&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#fetch&quot;&gt; &lt;code&gt;fetch&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6661ac0f20ea90e07c90a94040185aa2b319f076" translate="yes" xml:space="preserve">
          <source>To create a helper that can be used in any template, use &lt;a href=&quot;templates#Template-registerHelper&quot;&gt;&lt;code&gt;Template.registerHelper&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">要创建可在任何模板中使用的助手，请使用&lt;a href=&quot;templates#Template-registerHelper&quot;&gt; &lt;code&gt;Template.registerHelper&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="70f904fa4649a456eb4c00ff9039079ddb96d9c5" translate="yes" xml:space="preserve">
          <source>To create a new npm package:</source>
          <target state="translated">要创建一个新的npm包。</target>
        </trans-unit>
        <trans-unit id="78800447b009fa5409b4c7472f32c62903c7f745" translate="yes" xml:space="preserve">
          <source>To create test data in full-app test mode, it usually makes sense to create some special test methods which we can call from the client side. Usually when testing a full app, we want to make sure the publications are sending through the correct data (as we do in this test), and so it&amp;rsquo;s not sufficient to stub out the collections and place synthetic data in them. Instead we&amp;rsquo;ll want to actually create data on the server and let it be published.</source>
          <target state="translated">要以全应用程序测试模式创建测试数据，通常有必要创建一些特殊的测试方法，我们可以从客户端调用这些方法。通常，在测试完整的应用程序时，我们要确保发布通过正确的数据进行发送（就像我们在本测试中所做的那样），因此仅存根集合并将合成数据放入其中是不够的。相反，我们要在服务器上实际创建数据并发布它。</target>
        </trans-unit>
        <trans-unit id="d1c7b931814d0b4edc0a2feb9ebcefd06c998e9d" translate="yes" xml:space="preserve">
          <source>To customize the contents of the email, see &lt;a href=&quot;#accounts_emailtemplates&quot;&gt;&lt;code&gt;Accounts.emailTemplates&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">要自定义电子邮件的内容，请参阅&lt;a href=&quot;#accounts_emailtemplates&quot;&gt; &lt;code&gt;Accounts.emailTemplates&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5140047bd555ef9841e9e569c9b6435496eefd9e" translate="yes" xml:space="preserve">
          <source>To define your own block helper, simply declare a template, and then invoke it using &lt;code&gt;{{#someTemplate}}&lt;/code&gt; (block) instead of &lt;code&gt;{{&amp;gt; someTemplate}}&lt;/code&gt; (inclusion) syntax.</source>
          <target state="translated">要定义自己的块帮助器，只需声明一个模板，然后使用 &lt;code&gt;{{#someTemplate}}&lt;/code&gt; （块）而不是 &lt;code&gt;{{&amp;gt; someTemplate}}&lt;/code&gt; （包含）语法来调用它。</target>
        </trans-unit>
        <trans-unit id="10a4f9f5681102b3aa8983bb43c9d543e7c7e152" translate="yes" xml:space="preserve">
          <source>To delete an application you&amp;rsquo;ve deployed, specify the &lt;code&gt;--delete&lt;/code&gt; option along with the site.</source>
          <target state="translated">要删除已部署的应用程序，请在站点上指定 &lt;code&gt;--delete&lt;/code&gt; 选项。</target>
        </trans-unit>
        <trans-unit id="ca105909ad53a383a4c4c0552475452b9b6d3334" translate="yes" xml:space="preserve">
          <source>To depend on another Atmosphere package, use &lt;a href=&quot;http://docs.meteor.com/#/full/pack_use&quot;&gt;&lt;code&gt;api.use&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">要依赖另一个Atmosphere软件包，请使用&lt;a href=&quot;http://docs.meteor.com/#/full/pack_use&quot;&gt; &lt;code&gt;api.use&lt;/code&gt; &lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="db2b46db90ab1ebb570301353caa7e894f37ad63" translate="yes" xml:space="preserve">
          <source>To deploy to the EU region, set DEPLOY_HOSTNAME to eu-west-1.galaxy.meteor.com.</source>
          <target state="translated">要部署到欧盟地区,将DEPLOY_HOSTNAME设置为eu-west-1.galaxy.meteor.com。</target>
        </trans-unit>
        <trans-unit id="bc138fd935e58931f06c928850c3e3e82fc4cb09" translate="yes" xml:space="preserve">
          <source>To do so in this case, we can use a little trick (that is specific to Blaze, although similar techniques apply to other view layers) of using the fact that the &lt;code&gt;{{#each}}&lt;/code&gt; helper diffs arrays of strings, and completely re-renders elements when they change.</source>
          <target state="translated">为此，在这种情况下，我们可以使用一个小技巧（特定于Blaze，尽管类似的技术也适用于其他视图层）：使用 &lt;code&gt;{{#each}}&lt;/code&gt; 辅助对象对字符串数组进行比较，并完全-在元素更改时渲染元素。</target>
        </trans-unit>
        <trans-unit id="8e626fdece591b67182c18d3bfaaa9773e897c2a" translate="yes" xml:space="preserve">
          <source>To do so, we can subclass &lt;code&gt;Mongo.Collection&lt;/code&gt; and write our own &lt;code&gt;insert()&lt;/code&gt; method:</source>
          <target state="translated">为此，我们可以子类化 &lt;code&gt;Mongo.Collection&lt;/code&gt; 并编写我们自己的 &lt;code&gt;insert()&lt;/code&gt; 方法：</target>
        </trans-unit>
        <trans-unit id="ebd840205f9265be376583a8de5ffc63864b7423" translate="yes" xml:space="preserve">
          <source>To do so, we can use the &lt;a href=&quot;https://prerender.io&quot;&gt;Prerender.io&lt;/a&gt; service, thanks to the &lt;a href=&quot;https://atmospherejs.com/dferber/prerender/&quot;&gt;&lt;code&gt;dferber:prerender&lt;/code&gt;&lt;/a&gt; package. It&amp;rsquo;s a simple as &lt;code&gt;meteor add&lt;/code&gt;-ing it, and optionally setting your prerender token if you have a premium prerender account and would like to enable more frequent cache changes. You can also just use the &lt;a href=&quot;https://www.npmjs.com/package/prerender-node&quot;&gt;&lt;code&gt;prerender-node&lt;/code&gt; NPM package&lt;/a&gt; directly, mimicing the small amount of &lt;a href=&quot;https://github.com/dferber90/meteor-prerender/blob/master/client/prerender.html&quot;&gt;client&lt;/a&gt; and &lt;a href=&quot;https://github.com/dferber90/meteor-prerender/blob/master/server/prerender.js&quot;&gt;server&lt;/a&gt; code in the Atmosphere package; do this if you need to use a newer version of the NPM package than the one in &lt;code&gt;dferber:prerender&lt;/code&gt;.</source>
          <target state="translated">要做到这一点，我们可以使用&lt;a href=&quot;https://prerender.io&quot;&gt;Prerender.io&lt;/a&gt;服务，感谢&lt;a href=&quot;https://atmospherejs.com/dferber/prerender/&quot;&gt; &lt;code&gt;dferber:prerender&lt;/code&gt; &lt;/a&gt;包。这很简单， &lt;code&gt;meteor add&lt;/code&gt; 它，如果您有高级预渲染帐户并希望启用更频繁的缓存更改，则可以选择设置预渲染令牌。您也可以直接使用&lt;a href=&quot;https://www.npmjs.com/package/prerender-node&quot;&gt; &lt;code&gt;prerender-node&lt;/code&gt; NPM程序包&lt;/a&gt;，模仿Atmosphere程序包中少量的&lt;a href=&quot;https://github.com/dferber90/meteor-prerender/blob/master/client/prerender.html&quot;&gt;客户端&lt;/a&gt;和&lt;a href=&quot;https://github.com/dferber90/meteor-prerender/blob/master/server/prerender.js&quot;&gt;服务器&lt;/a&gt;代码。如果您需要使用比 &lt;code&gt;dferber:prerender&lt;/code&gt; 中的NPM软件包新的版本，请执行此操作。</target>
        </trans-unit>
        <trans-unit id="a768a43a236b5ea82c041d7df8e76472a7dbbaba" translate="yes" xml:space="preserve">
          <source>To do so, we use &lt;code&gt;attachSchema()&lt;/code&gt;:</source>
          <target state="translated">为此，我们使用 &lt;code&gt;attachSchema()&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="c3064ba3c3bc9bf6c5751a509112cdc7514f7e0b" translate="yes" xml:space="preserve">
          <source>To do so, we&amp;rsquo;ll use a very simple test helper that renders a Blaze component off-screen with a given data context. As we place it in &lt;code&gt;imports&lt;/code&gt;, it won&amp;rsquo;t load in our app by in normal mode (as it&amp;rsquo;s not required anywhere).</source>
          <target state="translated">为此，我们将使用一个非常简单的测试助手，该助手在给定的数据上下文下将Blaze组件呈现在屏幕外。当我们将其放置在 &lt;code&gt;imports&lt;/code&gt; ，它不会以正常模式加载到我们的应用中（因为它在任何地方都不需要）。</target>
        </trans-unit>
        <trans-unit id="6ff636b12d986e98f989c21e7b6f8e715ec5fc87" translate="yes" xml:space="preserve">
          <source>To ensure the database is clean, the &lt;a href=&quot;https://atmospherejs.com/xolvio/cleaner&quot;&gt;&lt;code&gt;xolvio:cleaner&lt;/code&gt;&lt;/a&gt; package is useful. You can use it to reset the database in a &lt;code&gt;beforeEach&lt;/code&gt; block:</source>
          <target state="translated">为确保数据库干净，&lt;a href=&quot;https://atmospherejs.com/xolvio/cleaner&quot;&gt; &lt;code&gt;xolvio:cleaner&lt;/code&gt; &lt;/a&gt;软件包很有用。您可以使用它在 &lt;code&gt;beforeEach&lt;/code&gt; 块中重置数据库：</target>
        </trans-unit>
        <trans-unit id="e83ebaaf9a03f3c9ec0a00878488dab2fc3c08f7" translate="yes" xml:space="preserve">
          <source>To exclude specific fields from the result objects, the field specifier is a dictionary whose keys are field names and whose values are &lt;code&gt;0&lt;/code&gt;. All unspecified fields are included.</source>
          <target state="translated">为了从结果对象中排除特定字段，字段说明符是一个字典，其关键字是字段名称，其值是 &lt;code&gt;0&lt;/code&gt; 。包括所有未指定的字段。</target>
        </trans-unit>
        <trans-unit id="c7dc59dc94ce9370f9fb28ded16d88dbe69a4ba0" translate="yes" xml:space="preserve">
          <source>To find out more about the API of the Migrations package, refer to &lt;a href=&quot;https://atmospherejs.com/percolate/migrations&quot;&gt;its documentation&lt;/a&gt;.</source>
          <target state="translated">要了解有关Migrations软件包API的更多信息，请参阅&lt;a href=&quot;https://atmospherejs.com/percolate/migrations&quot;&gt;其文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="518e1370fc3bf075f37072465daa36cb36517a04" translate="yes" xml:space="preserve">
          <source>To find that out, &lt;code&gt;Meteor.subscribe()&lt;/code&gt; and (&lt;code&gt;this.subscribe()&lt;/code&gt; in Blaze components) returns a &amp;ldquo;subscription handle&amp;rdquo;, which contains a reactive data source called &lt;code&gt;.ready()&lt;/code&gt;:</source>
          <target state="translated">为了找出 &lt;code&gt;Meteor.subscribe()&lt;/code&gt; ，Meteor.subscribe（）和（Blaze组件中的 &lt;code&gt;this.subscribe()&lt;/code&gt; ）返回一个&amp;ldquo;订阅句柄&amp;rdquo;，其中包含一个名为 &lt;code&gt;.ready()&lt;/code&gt; 的反应性数据源：</target>
        </trans-unit>
        <trans-unit id="8a565a3c59161196c5cb0a07442ef3d8376da2d8" translate="yes" xml:space="preserve">
          <source>To fully use the module system and ensure that our code only runs when we ask it to, we recommend that all of your application code should be placed inside the &lt;code&gt;imports/&lt;/code&gt; directory. This means that the Meteor build system will only bundle and include that file if it is referenced from another file using an &lt;code&gt;import&lt;/code&gt; (also called &amp;ldquo;lazy evaluation or loading&amp;rdquo;).</source>
          <target state="translated">为了充分利用模块系统并确保我们的代码仅在我们要求时运行，我们建议您将所有应用程序代码放置在 &lt;code&gt;imports/&lt;/code&gt; 目录中。这意味着，如果使用 &lt;code&gt;import&lt;/code&gt; 从另一个文件中引用了该文件，那么Meteor构建系统将仅捆绑并包含该文件（也称为&amp;ldquo;延迟评估或加载&amp;rdquo;）。</target>
        </trans-unit>
        <trans-unit id="3a643a0227f5125cec9c22cfe467f934fdaa4fee" translate="yes" xml:space="preserve">
          <source>To generate a key:</source>
          <target state="translated">要生成一个密钥。</target>
        </trans-unit>
        <trans-unit id="7e9c7c5069cc46c43a0fe4fbb79127bdc1495a68" translate="yes" xml:space="preserve">
          <source>To get Meteor to use the CDN for your Javascript and CSS bundles, call &lt;code&gt;WebAppInternals.setBundledJsCssPrefix(&quot;http://mycdn.com&quot;)&lt;/code&gt; on the server. This will also take care of relative image URLs inside your CSS files. If you need to use a dynamic prefix, you can return the prefix from a function passed to &lt;code&gt;WebAppInternals.setBundledJsCssUrlRewriteHook()&lt;/code&gt;.</source>
          <target state="translated">要使Meteor将CDN用于Javascript和CSS捆绑包，请在服务器上调用 &lt;code&gt;WebAppInternals.setBundledJsCssPrefix(&quot;http://mycdn.com&quot;)&lt;/code&gt; 。这还将处理CSS文件中的相对图像URL。如果需要使用动态前缀，则可以从传递给 &lt;code&gt;WebAppInternals.setBundledJsCssUrlRewriteHook()&lt;/code&gt; 的函数中返回前缀。</target>
        </trans-unit>
        <trans-unit id="083509a11ebc0343923c9ed2101dfbbdcc1b3374" translate="yes" xml:space="preserve">
          <source>To get a callback after a computation has been recomputed, you can call &lt;a href=&quot;#tracker_afterflush&quot;&gt;&lt;code&gt;Tracker.afterFlush&lt;/code&gt;&lt;/a&gt; from &lt;code&gt;onInvalidate&lt;/code&gt;.</source>
          <target state="translated">为了得到一个回调的计算已重新计算后，你可以调用&lt;a href=&quot;#tracker_afterflush&quot;&gt; &lt;code&gt;Tracker.afterFlush&lt;/code&gt; &lt;/a&gt;从 &lt;code&gt;onInvalidate&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f6ff0c69389a389eb4e79d3cfb2711f4cec23b17" translate="yes" xml:space="preserve">
          <source>To get around these restrictions, you&amp;rsquo;ll have to use what is known as &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS&quot;&gt;Cross-Origin Resource Sharing (CORS)&lt;/a&gt;. In contrast to the whitelisting mechanism configured on the client, CORS relies on headers set by the server. In other words, in order to allow access to a remote resource, you may have to make configuration changes on the server, such as setting a &lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt; header.</source>
          <target state="translated">要解决这些限制，您必须使用所谓的&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS&quot;&gt;跨域资源共享（CORS）&lt;/a&gt;。与在客户端上配置的白名单机制相反，CORS依赖于服务器设置的标头。换句话说，为了允许访问远程资源，您可能必须在服务器上进行配置更改，例如设置 &lt;code&gt;Access-Control-Allow-Origin&lt;/code&gt; 标头。</target>
        </trans-unit>
        <trans-unit id="f6a17d297a0ed288565efddad8aa5613aa4753b7" translate="yes" xml:space="preserve">
          <source>To get proper syntax highlighting, go to a .js file, then select the following through the &lt;em&gt;View&lt;/em&gt; dropdown menu: &lt;em&gt;Syntax&lt;/em&gt; -&amp;gt; &lt;em&gt;Open all with current extension as&amp;hellip;&lt;/em&gt; -&amp;gt; &lt;em&gt;Babel&lt;/em&gt; -&amp;gt; &lt;em&gt;JavaScript (Babel)&lt;/em&gt;. If you are using React .jsx files, do the same from a .jsx file. If it&amp;rsquo;s working, you will see &amp;ldquo;JavaScript (Babel)&amp;rdquo; in the lower right hand corner of the window when you are on one of these files. Refer to the &lt;a href=&quot;https://github.com/babel/babel-sublime&quot;&gt;package readme&lt;/a&gt; for information on compatible color schemes.</source>
          <target state="translated">要突出显示正确的语法，请转到.js文件，然后通过&amp;ldquo; &lt;em&gt;视图&amp;rdquo;&lt;/em&gt;下拉菜单选择以下内容：&lt;em&gt;语法&lt;/em&gt; -&amp;gt; &lt;em&gt;使用当前扩展名全部打开为&amp;hellip;&lt;/em&gt; -&amp;gt; &lt;em&gt;Babel-&lt;/em&gt; &amp;gt; &lt;em&gt;JavaScript（Babel）&lt;/em&gt;。如果您使用的是React .jsx文件，请从.jsx文件执行相同操作。如果运行正常，则在其中一个文件上时，您将在窗口的右下角看到&amp;ldquo; JavaScript（Babel）&amp;rdquo;。有关兼容配色方案的信息，请参阅&lt;a href=&quot;https://github.com/babel/babel-sublime&quot;&gt;包装自述文件&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="893855d63dbfcafd6b5027960d5d6bad6fc49291" translate="yes" xml:space="preserve">
          <source>To get started with React in Meteor, you can follow along the &lt;a href=&quot;https://www.meteor.com/tutorials/react/creating-an-app&quot;&gt;React tutorial&lt;/a&gt;. To see an example of a more complete Meteor application built with React, check out the &lt;a href=&quot;https://github.com/meteor/todos/tree/react&quot;&gt;&lt;code&gt;react&lt;/code&gt; branch&lt;/a&gt; of the Todos example application. Where applicable, code examples in this article will reference that app.</source>
          <target state="translated">要在Meteor中开始使用React，您可以按照&lt;a href=&quot;https://www.meteor.com/tutorials/react/creating-an-app&quot;&gt;React教程进行操作&lt;/a&gt;。要查看使用React构建的更完整的Meteor应用程序的示例，请查看Todos示例应用程序的&lt;a href=&quot;https://github.com/meteor/todos/tree/react&quot;&gt; &lt;code&gt;react&lt;/code&gt; 分支&lt;/a&gt;。如果适用，本文中的代码示例将引用该应用。</target>
        </trans-unit>
        <trans-unit id="1237ef25890ecb7c83c8507238bda2a4768be54f" translate="yes" xml:space="preserve">
          <source>To get started writing a package, use the Meteor command line tool:</source>
          <target state="translated">要开始编写一个包,使用Meteor命令行工具。</target>
        </trans-unit>
        <trans-unit id="fcff710be19faa388283f090c0bbfef73c584354" translate="yes" xml:space="preserve">
          <source>To get started, run &lt;code&gt;meteor add universe:i18n&lt;/code&gt; to add it to your app. Add an English (&lt;code&gt;en-US&lt;/code&gt;) translation file in &lt;code&gt;JSON&lt;/code&gt; format to your app with the name &lt;code&gt;en-us.i18n.json&lt;/code&gt;. Translation files can be identified by file name or with the &lt;code&gt;{&quot;_locale&quot;: &quot;en-US&quot;}&lt;/code&gt; JSON property. The &lt;code&gt;YAML&lt;/code&gt; file format is also supported.</source>
          <target state="translated">首先，运行 &lt;code&gt;meteor add universe:i18n&lt;/code&gt; 将其添加到您的应用程序中。将 &lt;code&gt;JSON&lt;/code&gt; 格式的英语（ &lt;code&gt;en-US&lt;/code&gt; ）翻译文件添加到您的应用程序中，名称为 &lt;code&gt;en-us.i18n.json&lt;/code&gt; 。可以通过文件名或使用 &lt;code&gt;{&quot;_locale&quot;: &quot;en-US&quot;}&lt;/code&gt; JSON属性来标识翻译文件。在 &lt;code&gt;YAML&lt;/code&gt; 文件格式也支持。</target>
        </trans-unit>
        <trans-unit id="151ec154149098f7e43708e70ab3d1aeb7854ef8" translate="yes" xml:space="preserve">
          <source>To get the full experience, you should also use the &lt;code&gt;es5-shim&lt;/code&gt; package which is included in all new apps by default. This means you can rely on runtime features like &lt;code&gt;Array#forEach&lt;/code&gt; without worrying about which browsers support them.</source>
          <target state="translated">为了获得完整的体验，您还应该使用默认情况下所有新应用程序中都包含的 &lt;code&gt;es5-shim&lt;/code&gt; 软件包。这意味着您可以依靠 &lt;code&gt;Array#forEach&lt;/code&gt; 之类的运行时功能，而不必担心哪些浏览器支持它们。</target>
        </trans-unit>
        <trans-unit id="3126a82b51c023edcd49d2e4f2d37d44f8ed4368" translate="yes" xml:space="preserve">
          <source>To handle more than one event / selector with the same function, use a comma-separated list.</source>
          <target state="translated">要用同一个函数处理多个事件/选择器,请使用逗号分隔的列表。</target>
        </trans-unit>
        <trans-unit id="bb51b8da00a2350bda11d13a4dbddef6793d1057" translate="yes" xml:space="preserve">
          <source>To help you write good Methods that exhaustively validate their arguments, we&amp;rsquo;ve written a simple wrapper package for Methods that enforces argument validation. Read more about how to use it in the &lt;a href=&quot;methods#validated-method&quot;&gt;Methods article&lt;/a&gt;. The rest of the code samples in this article will assume that you are using this package. If you aren&amp;rsquo;t, you can still apply the same principles but the code will look a little different.</source>
          <target state="translated">为了帮助您编写能够彻底验证其参数的良好方法，我们为方法编写了一个简单的包装程序包，用于强制执行参数验证。在&amp;ldquo; &lt;a href=&quot;methods#validated-method&quot;&gt;方法&amp;rdquo;文章中&lt;/a&gt;阅读有关如何使用它的更多信息。本文中的其余代码示例将假定您正在使用此程序包。如果不是这样，您仍然可以应用相同的原理，但是代码看起来会有些不同。</target>
        </trans-unit>
        <trans-unit id="0b15a95a8081b30a704b341479c98fb80fe07d12" translate="yes" xml:space="preserve">
          <source>To import a method named &lt;code&gt;exportedPackageMethod&lt;/code&gt;, simply:</source>
          <target state="translated">要导入名为 &lt;code&gt;exportedPackageMethod&lt;/code&gt; 的方法，只需：</target>
        </trans-unit>
        <trans-unit id="cd4e955cbe7e715ad66ced8ce2a933691be63e92" translate="yes" xml:space="preserve">
          <source>To include CSS files with your package you can use &lt;a href=&quot;http://docs.meteor.com/#/full/pack_addFiles&quot;&gt;&lt;code&gt;api.addFiles()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">要在包中包含CSS文件，可以使用&lt;a href=&quot;http://docs.meteor.com/#/full/pack_addFiles&quot;&gt; &lt;code&gt;api.addFiles()&lt;/code&gt; &lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="2e05e948984ca7920b990616137fbf5b4325ad75" translate="yes" xml:space="preserve">
          <source>To include only specific fields in the result documents, use &lt;code&gt;1&lt;/code&gt; as the value. The &lt;code&gt;_id&lt;/code&gt; field is still included in the result.</source>
          <target state="translated">要仅在结果文档中包括特定字段，请使用 &lt;code&gt;1&lt;/code&gt; 作为值。该 &lt;code&gt;_id&lt;/code&gt; 领域仍然包括在结果中。</target>
        </trans-unit>
        <trans-unit id="3a768afacff969a47bc3ef71c575e618ff454162" translate="yes" xml:space="preserve">
          <source>To insert a literal &lt;code&gt;{{&lt;/code&gt;, &lt;code&gt;{{{&lt;/code&gt;, or any number of curly braces, put a vertical bar after it. So &lt;code&gt;{{|&lt;/code&gt; will show up as &lt;code&gt;{{&lt;/code&gt;, &lt;code&gt;{{{|&lt;/code&gt; will show up as &lt;code&gt;{{{&lt;/code&gt;, and so on.</source>
          <target state="translated">要插入文字 &lt;code&gt;{{&lt;/code&gt; ， &lt;code&gt;{{{&lt;/code&gt; 或任何数量的花括号，请在其后放置竖线。所以 &lt;code&gt;{{|&lt;/code&gt; 将显示为 &lt;code&gt;{{&lt;/code&gt; ， &lt;code&gt;{{{|&lt;/code&gt; 将显示为 &lt;code&gt;{{{&lt;/code&gt; ，依此类推。</target>
        </trans-unit>
        <trans-unit id="159c4fc12d09660b9440e023e6407ec37258b099" translate="yes" xml:space="preserve">
          <source>To insert literal curly braces: &lt;code&gt;{{ }}&lt;/code&gt; and the like, add a pipe character, &lt;code&gt;|&lt;/code&gt;, to the opening braces:</source>
          <target state="translated">要插入大括号： &lt;code&gt;{{ }}&lt;/code&gt; 等，请添加竖线字符 &lt;code&gt;|&lt;/code&gt; 。，到大括号：</target>
        </trans-unit>
        <trans-unit id="aac0c6aa8b888b26e1c1478b1fa3d46df59f41dc" translate="yes" xml:space="preserve">
          <source>To install React in Meteor 1.3 you should simply add it as an npm dependency:</source>
          <target state="translated">要在Meteor 1.3中安装React,你应该简单地将其添加为npm依赖。</target>
        </trans-unit>
        <trans-unit id="bd4de29a47510c144543e45f3da5c47947b9193d" translate="yes" xml:space="preserve">
          <source>To install a package into your app you run the &lt;code&gt;npm install&lt;/code&gt; command with the &lt;code&gt;--save&lt;/code&gt; flag:</source>
          <target state="translated">要将软件包安装到应用中，请运行带有 &lt;code&gt;--save&lt;/code&gt; 标志的 &lt;code&gt;npm install&lt;/code&gt; 命令：</target>
        </trans-unit>
        <trans-unit id="4dfb33e0812488c4502e9d019222e2ca9ba89e94" translate="yes" xml:space="preserve">
          <source>To install an Atmosphere package, you simply run &lt;code&gt;meteor add&lt;/code&gt;:</source>
          <target state="translated">要安装Atmosphere软件包，您只需运行 &lt;code&gt;meteor add&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="65c7b0c2baa95fc697ec0b486a6699e6b2d07d01" translate="yes" xml:space="preserve">
          <source>To install an older version of SDK tools:</source>
          <target state="translated">要安装旧版本的SDK工具。</target>
        </trans-unit>
        <trans-unit id="6724f8aced3b9c11dcafc95c2cd737a185b83efa" translate="yes" xml:space="preserve">
          <source>To integrate the two systems, we&amp;rsquo;ve developed a &lt;a href=&quot;https://atmospherejs.com/meteor/react-meteor-data&quot;&gt;&lt;code&gt;react-meteor-data&lt;/code&gt;&lt;/a&gt; package which allows React components to respond to data changes via Meteor&amp;rsquo;s &lt;a href=&quot;https://www.meteor.com/tracker&quot;&gt;Tracker&lt;/a&gt; reactivity system.</source>
          <target state="translated">为了集成这两个系统，我们开发了一个&lt;a href=&quot;https://atmospherejs.com/meteor/react-meteor-data&quot;&gt; &lt;code&gt;react-meteor-data&lt;/code&gt; &lt;/a&gt;包，该包允许React组件通过Meteor的&lt;a href=&quot;https://www.meteor.com/tracker&quot;&gt;Tracker&lt;/a&gt;反应系统响应数据更改。</target>
        </trans-unit>
        <trans-unit id="56d3564187390ed1e003c9f98758ef5c8a2f6b15" translate="yes" xml:space="preserve">
          <source>To learn more about using React in general and coming up to speed with the library, you should check out the &lt;a href=&quot;https://facebook.github.io/react/docs/getting-started.html&quot;&gt;React documentation&lt;/a&gt;, especially the &lt;a href=&quot;https://facebook.github.io/react/docs/thinking-in-react.html&quot;&gt;thinking in React&lt;/a&gt; post, which explains the React philosophy well.</source>
          <target state="translated">要了解有关一般使用React并快速了解库的更多信息，您应该查看&lt;a href=&quot;https://facebook.github.io/react/docs/getting-started.html&quot;&gt;React文档&lt;/a&gt;，尤其是&lt;a href=&quot;https://facebook.github.io/react/docs/thinking-in-react.html&quot;&gt;React&lt;/a&gt;帖子中的思想，它很好地解释了React的原理。</target>
        </trans-unit>
        <trans-unit id="7be6e9a877bd53d1d673ad21f25bbe30867186b9" translate="yes" xml:space="preserve">
          <source>To maintain type safety, you can take advantage of TypeScript&amp;rsquo;s import elision and reference the types using the &lt;code&gt;typeof&lt;/code&gt; keyword. See the &lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/modules.html#optional-module-loading-and-other-advanced-loading-scenarios&quot;&gt;TypeScript handbook article&lt;/a&gt; for details or &lt;a href=&quot;http://ideasintosoftware.com/typescript-conditional-imports/&quot;&gt;this blog post&lt;/a&gt; for a concrete Meteor example.</source>
          <target state="translated">为了保持类型安全，您可以利用TypeScript的导入省略功能并使用 &lt;code&gt;typeof&lt;/code&gt; 关键字引用类型。有关详细信息，请参见&lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/modules.html#optional-module-loading-and-other-advanced-loading-scenarios&quot;&gt;TypeScript手册文章&lt;/a&gt;；有关具体的Meteor示例，请参见此&lt;a href=&quot;http://ideasintosoftware.com/typescript-conditional-imports/&quot;&gt;博客文章&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9d96712ff0cf5452414572df486c9a663c0830af" translate="yes" xml:space="preserve">
          <source>To make this easier, we can attach functions to the prototype of the documents that belong to a given collection, to give us &amp;ldquo;methods&amp;rdquo; on the documents (in the object oriented sense). We can then use these methods to create new queries to find related documents.</source>
          <target state="translated">为了使这一过程变得容易，我们可以将函数附加到属于给定集合的文档原型中，从而为我们提供文档上的&amp;ldquo;方法&amp;rdquo;（面向对象）。然后，我们可以使用这些方法来创建新查询以查找相关文档。</target>
        </trans-unit>
        <trans-unit id="91224ae6dcebefbaa340524c9967570d3a9b865c" translate="yes" xml:space="preserve">
          <source>To orchestrate your own container-based deployment there are existing base images to consider before rolling your own:</source>
          <target state="translated">要协调你自己的基于容器的部署,在推出你自己的部署之前,有一些现有的基础图像可以考虑。</target>
        </trans-unit>
        <trans-unit id="9154b71efe563daa58944cd919fae47c3e1fd255" translate="yes" xml:space="preserve">
          <source>To pass a callback to a React component that you are including with this helper, simply make a &lt;a href=&quot;http://blazejs.org/guide/reusable-components.html#Pass-callbacks&quot;&gt;template helper that returns a function&lt;/a&gt;, and pass it in as a prop, like so:</source>
          <target state="translated">要将回调传递给您包含在此辅助程序中的React组件，只需制作一个&lt;a href=&quot;http://blazejs.org/guide/reusable-components.html#Pass-callbacks&quot;&gt;返回函数&lt;/a&gt;的模板辅助程序，然后将其作为prop传入，如下所示：</target>
        </trans-unit>
        <trans-unit id="bb59cd487bde7d1322d518f6f6b4daf80a607e47" translate="yes" xml:space="preserve">
          <source>To pass additional options to Node.js use the &lt;code&gt;NODE_OPTIONS&lt;/code&gt; environment variable. For example: &lt;code&gt;NODE_OPTIONS='--debug'&lt;/code&gt; or &lt;code&gt;NODE_OPTIONS='--debug-brk'&lt;/code&gt;</source>
          <target state="translated">要将其他选项传递给Node.js，请使用 &lt;code&gt;NODE_OPTIONS&lt;/code&gt; 环境变量。例如： &lt;code&gt;NODE_OPTIONS='--debug'&lt;/code&gt; 或 &lt;code&gt;NODE_OPTIONS='--debug-brk'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="20e5eba1a0f3808376de81e4e3858f9e902eb214" translate="yes" xml:space="preserve">
          <source>To publish a package for the first time, use &lt;code&gt;meteor publish --create&lt;/code&gt;.</source>
          <target state="translated">要第一次发布软件包，请使用 &lt;code&gt;meteor publish --create&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="527330003be5c43207d078408f899a784b3f44c5" translate="yes" xml:space="preserve">
          <source>To publish publicly, &lt;a href=&quot;https://docs.npmjs.com/getting-started/publishing-npm-packages&quot;&gt;follow these instructions&lt;/a&gt;. When you&amp;rsquo;re done, anyone can add your package to their app with &lt;code&gt;npm install --save your-package&lt;/code&gt;.</source>
          <target state="translated">要公开发布，请&lt;a href=&quot;https://docs.npmjs.com/getting-started/publishing-npm-packages&quot;&gt;按照以下说明进行操作&lt;/a&gt;。完成后，任何人都可以使用 &lt;code&gt;npm install --save your-package&lt;/code&gt; 将软件包添加到他们的应用程序中。</target>
        </trans-unit>
        <trans-unit id="e2fe6b82a49f279121fa4ad86b0495385edb893d" translate="yes" xml:space="preserve">
          <source>To publish records to clients, call &lt;code&gt;Meteor.publish&lt;/code&gt; on the server with two parameters: the name of the record set, and a &lt;em&gt;publish function&lt;/em&gt; that Meteor will call each time a client subscribes to the name.</source>
          <target state="translated">要将记录发布给客户端，请使用两个参数在服务器上调用 &lt;code&gt;Meteor.publish&lt;/code&gt; ：记录集的名称，以及每次客户端订阅该名称时Meteor都会调用的&lt;em&gt;发布功能&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="92d704cb2ecb8eaf3a9c4b3aeafeb43d83a7b0ab" translate="yes" xml:space="preserve">
          <source>To publish to a release track for the first time, use the &lt;code&gt;--create-track&lt;/code&gt; flag.</source>
          <target state="translated">要首次发布到发布轨道，请使用 &lt;code&gt;--create-track&lt;/code&gt; 标志。</target>
        </trans-unit>
        <trans-unit id="943f27f05db80da724049b8e2848fc0eac66d12d" translate="yes" xml:space="preserve">
          <source>To publish your package to Atmosphere, run &lt;a href=&quot;http://docs.meteor.com/#/full/meteorpublish&quot;&gt;&lt;code&gt;meteor publish&lt;/code&gt;&lt;/a&gt; from the package directory. To publish a package the package name must follow the format of &lt;code&gt;username:my-package&lt;/code&gt; and the package must contain a &lt;a href=&quot;#version-constraints&quot;&gt;SemVer version number&lt;/a&gt;.</source>
          <target state="translated">要将包发布到Atmosphere，请从包目录运行&lt;a href=&quot;http://docs.meteor.com/#/full/meteorpublish&quot;&gt; &lt;code&gt;meteor publish&lt;/code&gt; &lt;/a&gt;。要发布软件包，软件包名称必须遵循 &lt;code&gt;username:my-package&lt;/code&gt; 的格式，并且软件包必须包含&lt;a href=&quot;#version-constraints&quot;&gt;SemVer版本号&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1c6e1b3bad2cef83474e361de7129172837aa3d8" translate="yes" xml:space="preserve">
          <source>To register a compiler plugin in your package, you need to do the following in your &lt;code&gt;package.js&lt;/code&gt; file:</source>
          <target state="translated">要将编译器插件注册到您的软件包中，您需要在 &lt;code&gt;package.js&lt;/code&gt; 文件中执行以下操作：</target>
        </trans-unit>
        <trans-unit id="70f222ca7270bbb1d2257dae311e65ec53867601" translate="yes" xml:space="preserve">
          <source>To register a linter build plugin in your package, you need to do a couple of things in your &lt;code&gt;package.js&lt;/code&gt;:</source>
          <target state="translated">要在软件包中注册一个linter build插件，您需要在 &lt;code&gt;package.js&lt;/code&gt; 中做几件事：</target>
        </trans-unit>
        <trans-unit id="adb98c78462560bd4ad9f58fe0504a52496105dc" translate="yes" xml:space="preserve">
          <source>To register a minifier plugin in your package, add the following in your &lt;code&gt;package.js&lt;/code&gt; file:</source>
          <target state="translated">要将minifier插件注册到您的软件包中，请在 &lt;code&gt;package.js&lt;/code&gt; 文件中添加以下内容：</target>
        </trans-unit>
        <trans-unit id="1c8a804a7bd997f4f26015c9fd7cf3f1ad8f86b9" translate="yes" xml:space="preserve">
          <source>To remove a version constraint for a specific package, run &lt;code&gt;meteor add&lt;/code&gt; again without specifying a version. For example above, to stop using version &lt;code&gt;1.1.0&lt;/code&gt; exactly, run &lt;code&gt;meteor add package&lt;/code&gt;.</source>
          <target state="translated">要删除特定软件包的版本约束，请再次运行 &lt;code&gt;meteor add&lt;/code&gt; 而不指定版本。例如，要完全停止使用 &lt;code&gt;1.1.0&lt;/code&gt; 版，请运行 &lt;code&gt;meteor add package&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a54fbd95e6effd52fd8ea6b988d5fdd111837c94" translate="yes" xml:space="preserve">
          <source>To remove an unwanted Atmosphere package run:</source>
          <target state="translated">要删除不需要的Atmosphere软件包,请运行。</target>
        </trans-unit>
        <trans-unit id="8e0588ce4da8859f547b94b040e16f58fbac7712" translate="yes" xml:space="preserve">
          <source>To request them at runtime, consider using the &lt;a href=&quot;https://github.com/dpa99c/cordova-diagnostic-plugin&quot;&gt;&lt;code&gt;cordova.plugins.diagnostic&lt;/code&gt;&lt;/a&gt; plugin.</source>
          <target state="translated">要在运行时请求它们，请考虑使用&lt;a href=&quot;https://github.com/dpa99c/cordova-diagnostic-plugin&quot;&gt; &lt;code&gt;cordova.plugins.diagnostic&lt;/code&gt; &lt;/a&gt;插件。</target>
        </trans-unit>
        <trans-unit id="b785c9ffe98a48372bd2c6c56ed1db2c560368a6" translate="yes" xml:space="preserve">
          <source>To run a migration against your development database, it&amp;rsquo;s easiest to use the Meteor shell:</source>
          <target state="translated">要针对您的开发数据库运行迁移，最简单的方法是使用Meteor Shell：</target>
        </trans-unit>
        <trans-unit id="32df57f617c869a6e38979dc630b32322e8ab519" translate="yes" xml:space="preserve">
          <source>To run a migration against your production database, run your app locally in production mode (with production settings and environment variables, including database settings), and use the Meteor shell in the same way. What this does is run the &lt;code&gt;up()&lt;/code&gt; function of all outstanding migrations, against your production database. In our case, it should ensure all lists have a &lt;code&gt;todoCount&lt;/code&gt; field set.</source>
          <target state="translated">要针对您的生产数据库运行迁移，请在生产模式下本地运行您的应用程序（使用生产设置和环境变量，包括数据库设置），并以相同方式使用Meteor Shell。这样做是对生产数据库运行所有未完成的迁移的 &lt;code&gt;up()&lt;/code&gt; 函数。在我们的情况下，应确保所有列表都具有 &lt;code&gt;todoCount&lt;/code&gt; 字段集。</target>
        </trans-unit>
        <trans-unit id="a6363e284732c1e8431252139699e7c7aa9114c2" translate="yes" xml:space="preserve">
          <source>To run acceptance tests, we simply need to start our Meteor app as usual, and point Chimp at it.</source>
          <target state="translated">要运行验收测试,我们只需要像往常一样启动我们的Meteor应用,并将Chimp指向它。</target>
        </trans-unit>
        <trans-unit id="7482995f6f41dbf7835d0f1e35691487c3b162b5" translate="yes" xml:space="preserve">
          <source>To run the &lt;a href=&quot;#test-modes&quot;&gt;full-app tests&lt;/a&gt; in our application, we run:</source>
          <target state="translated">要在我们的应用程序中运行&lt;a href=&quot;#test-modes&quot;&gt;完整应用程序测试&lt;/a&gt;，我们运行：</target>
        </trans-unit>
        <trans-unit id="4af85ca590bedf942279e432e4051efd8797f79c" translate="yes" xml:space="preserve">
          <source>To run the linter, you can now simply type:</source>
          <target state="translated">要运行linter,你现在可以简单地输入。</target>
        </trans-unit>
        <trans-unit id="91ecd61c591d15456fbd8a7abc557338c58ffe3d" translate="yes" xml:space="preserve">
          <source>To run the tests that our app defines, we run our app in &lt;a href=&quot;#test-modes&quot;&gt;test mode&lt;/a&gt;:</source>
          <target state="translated">要运行我们的应用程序定义的测试，我们以&lt;a href=&quot;#test-modes&quot;&gt;测试模式&lt;/a&gt;运行我们的应用程序：</target>
        </trans-unit>
        <trans-unit id="6d29f9a1f0846c19394927f4ddf634ba42100a88" translate="yes" xml:space="preserve">
          <source>To run the tests, visit &lt;a href=&quot;http://localhost:3000&quot;&gt;http://localhost:3000&lt;/a&gt; in your browser. This kicks off &lt;code&gt;practicalmeteor:mocha&lt;/code&gt;, which runs your tests both in the browser and on the server. It displays the test results in the browser in a Mocha test reporter:</source>
          <target state="translated">要运行测试，请在浏览器中访问&lt;a href=&quot;http://localhost:3000&quot;&gt;http：// localhost：3000&lt;/a&gt;。这启动了 &lt;code&gt;practicalmeteor:mocha&lt;/code&gt; ，它可以在浏览器和服务器上运行测试。它将在Mocha测试报告器中的浏览器中显示测试结果：</target>
        </trans-unit>
        <trans-unit id="0b89b7e8c53deccf92bd51333b162e5480106210" translate="yes" xml:space="preserve">
          <source>To see all the Atmosphere packages installed run:</source>
          <target state="translated">要查看所有安装的Atmosphere软件包,请运行。</target>
        </trans-unit>
        <trans-unit id="be19c3df28624e7a1bf22f819db8f3e9d9376549" translate="yes" xml:space="preserve">
          <source>To see what options are available to you, read the complete description of the &lt;a href=&quot;http://docs.meteor.com/#/full/accounts_passwords&quot;&gt;&lt;code&gt;accounts-password&lt;/code&gt; API in the Meteor docs&lt;/a&gt;.</source>
          <target state="translated">要查看可用的选项，请阅读&lt;a href=&quot;http://docs.meteor.com/#/full/accounts_passwords&quot;&gt;Meteor docs&lt;/a&gt;中的 &lt;code&gt;accounts-password&lt;/code&gt; API的完整说明。</target>
        </trans-unit>
        <trans-unit id="b0d5b3a3e30176d40e53bf24dc31b8037a8af8ae" translate="yes" xml:space="preserve">
          <source>To set and change the language that a user is seeing, you should call &lt;code&gt;TAPi18n.setLanguage(fn)&lt;/code&gt;, where &lt;code&gt;fn&lt;/code&gt; is a (possibly reactive) function that returns the current language. For instance you could write</source>
          <target state="translated">要设置和更改用户正在查看的语言，您应该调用 &lt;code&gt;TAPi18n.setLanguage(fn)&lt;/code&gt; ，其中 &lt;code&gt;fn&lt;/code&gt; 是一个（可能是响应性的）函数，用于返回当前语言。例如你可以写</target>
        </trans-unit>
        <trans-unit id="e492a3c53e0896a354d18ab5ae0568e88766b4eb" translate="yes" xml:space="preserve">
          <source>To setup ESLint in your application, you can install the following &lt;a href=&quot;https://docs.npmjs.com/getting-started/what-is-npm&quot;&gt;npm&lt;/a&gt; packages:</source>
          <target state="translated">要在您的应用程序中设置ESLint，可以安装以下&lt;a href=&quot;https://docs.npmjs.com/getting-started/what-is-npm&quot;&gt;npm&lt;/a&gt;软件包：</target>
        </trans-unit>
        <trans-unit id="49464f868af9c94f409e998de694382cdd49d31d" translate="yes" xml:space="preserve">
          <source>To sign your app, you&amp;rsquo;ll need a private key. This key lets you publish and update your app. If you haven&amp;rsquo;t made a key for this app yet, run:</source>
          <target state="translated">要对您的应用进行签名，您需要一个私钥。使用此密钥可以发布和更新您的应用程序。如果您尚未为此应用创建密钥，请运行：</target>
        </trans-unit>
        <trans-unit id="e95fc7df2acd06264c3dbd5b714c5f36f66449a3" translate="yes" xml:space="preserve">
          <source>To specify a port to listen on (instead of the default 3000), use &lt;code&gt;--port [PORT]&lt;/code&gt;. (The development server also uses port &lt;code&gt;N+1&lt;/code&gt; for the default MongoDB instance)</source>
          <target state="translated">要指定要监听的端口（而不是默认的3000），请使用 &lt;code&gt;--port [PORT]&lt;/code&gt; 。（开发服务器还将端口 &lt;code&gt;N+1&lt;/code&gt; 用于默认的MongoDB实例）</target>
        </trans-unit>
        <trans-unit id="0e1a4f3e6eefd2251bedc17a2e534e23716c0d94" translate="yes" xml:space="preserve">
          <source>To start, let&amp;rsquo;s look at our &lt;a href=&quot;https://github.com/meteor/todos&quot;&gt;Todos example application&lt;/a&gt;, which is a great example to follow when structuring your app. Below is an overview of its directory structure. You can generate a new app with this structure using the command &lt;code&gt;meteor create appName --full&lt;/code&gt;.</source>
          <target state="translated">首先，让我们看一下&lt;a href=&quot;https://github.com/meteor/todos&quot;&gt;Todos示例应用程序&lt;/a&gt;，这是构建应用程序时要遵循的一个很好的示例。下面是其目录结构的概述。您可以使用命令 &lt;code&gt;meteor create appName --full&lt;/code&gt; 生成具有此结构的新应用程序。</target>
        </trans-unit>
        <trans-unit id="4e28adc0562a325e3e096fedb43aec2bcfc26cc2" translate="yes" xml:space="preserve">
          <source>To summarize:</source>
          <target state="translated">总结一下:</target>
        </trans-unit>
        <trans-unit id="c83c61683d4dad1ee11657a12ed5e9639f104d2f" translate="yes" xml:space="preserve">
          <source>To throttle writes, a typical approach is to use underscore&amp;rsquo;s &lt;a href=&quot;http://underscorejs.org/#throttle&quot;&gt;&lt;code&gt;.throttle()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;http://underscorejs.org/#debounce&quot;&gt;&lt;code&gt;.debounce()&lt;/code&gt;&lt;/a&gt; functions. For instance, in the Todos example app, we throttle writes on user input to 300ms:</source>
          <target state="translated">要限制写入，典型的方法是使用下划线的&lt;a href=&quot;http://underscorejs.org/#throttle&quot;&gt; &lt;code&gt;.throttle()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;http://underscorejs.org/#debounce&quot;&gt; &lt;code&gt;.debounce()&lt;/code&gt; &lt;/a&gt;函数。例如，在Todos示例应用程序中，我们将用户输入的写入速度限制为300ms：</target>
        </trans-unit>
        <trans-unit id="6533f8b171f29c5816af4a97430c2edb37bb3744" translate="yes" xml:space="preserve">
          <source>To turn AppCache off for specific browsers use:</source>
          <target state="translated">要关闭特定浏览器的AppCache使用。</target>
        </trans-unit>
        <trans-unit id="5f44b3c20156dfcb966dfaf567376efa26a8b538" translate="yes" xml:space="preserve">
          <source>To use &lt;code&gt;DDPRateLimiter&lt;/code&gt; for modifying the default rate-limiting rules, add the &lt;code&gt;ddp-rate-limiter&lt;/code&gt; package to your project in your terminal:</source>
          <target state="translated">要使用 &lt;code&gt;DDPRateLimiter&lt;/code&gt; 修改默认的速率限制规则，请将 &lt;code&gt;ddp-rate-limiter&lt;/code&gt; 程序包添加到终端中的项目中：</target>
        </trans-unit>
        <trans-unit id="eee61dad927f167f72684f93f35d91882bbb60fe" translate="yes" xml:space="preserve">
          <source>To use &lt;code&gt;ReactiveVar&lt;/code&gt;, add the &lt;code&gt;reactive-var&lt;/code&gt; package to your project by running in your terminal:</source>
          <target state="translated">要使用 &lt;code&gt;ReactiveVar&lt;/code&gt; ，通过在终端中运行，将 &lt;code&gt;reactive-var&lt;/code&gt; 软件包添加到您的项目中：</target>
        </trans-unit>
        <trans-unit id="fd100aba1fbcb5a43429e4f5cb263049645886c3" translate="yes" xml:space="preserve">
          <source>To use &lt;code&gt;tap:i18n&lt;/code&gt;, first &lt;code&gt;meteor add tap:i18n&lt;/code&gt; to add it to your app. Then we need to add a translation JSON file for our default language (&lt;code&gt;en&lt;/code&gt; for English) &amp;ndash; we can put it at &lt;code&gt;i18n/en.i18n.json&lt;/code&gt;. Once we&amp;rsquo;ve done that we can import and use the &lt;code&gt;TAPi18n.__()&lt;/code&gt; function to get translations for strings or keys within our JavaScript code.</source>
          <target state="translated">要使用 &lt;code&gt;tap:i18n&lt;/code&gt; ，请首先在 &lt;code&gt;meteor add tap:i18n&lt;/code&gt; 以将其添加到您的应用中。然后，我们需要为默认语言（中文为 &lt;code&gt;en&lt;/code&gt; ）添加一个翻译JSON文件-我们可以将其放在 &lt;code&gt;i18n/en.i18n.json&lt;/code&gt; 上。一旦完成，就可以导入并使用 &lt;code&gt;TAPi18n.__()&lt;/code&gt; 函数来获取JavaScript代码中字符串或键的翻译。</target>
        </trans-unit>
        <trans-unit id="6ec5c3505a5272c0d1faceb3a43e931c7bcb12cd" translate="yes" xml:space="preserve">
          <source>To use an Atmosphere Package in your app you can import it with the &lt;code&gt;meteor/&lt;/code&gt; prefix:</source>
          <target state="translated">要在您的应用中使用Atmosphere软件包，您可以使用 &lt;code&gt;meteor/&lt;/code&gt; 前缀将其导入：</target>
        </trans-unit>
        <trans-unit id="0b02f75570d9ff673fb25a140cc15f35c4b13233" translate="yes" xml:space="preserve">
          <source>To use an npm package from a file in your application you simply &lt;code&gt;import&lt;/code&gt; the name of the package:</source>
          <target state="translated">要从应用程序中的文件使用npm软件包，只需 &lt;code&gt;import&lt;/code&gt; 软件包名称：</target>
        </trans-unit>
        <trans-unit id="eddd004a514ac2215f120d35caf57c44cf72dd3b" translate="yes" xml:space="preserve">
          <source>To use data from a Meteor collection inside a React component, install &lt;a href=&quot;https://atmospherejs.com/meteor/react-meteor-data&quot;&gt;&lt;code&gt;react-meteor-data&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">要使用React组件中的Meteor集合中的数据，请安装&lt;a href=&quot;https://atmospherejs.com/meteor/react-meteor-data&quot;&gt; &lt;code&gt;react-meteor-data&lt;/code&gt; &lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="8710d2dc353d315fe5dabead351df0239da0663c" translate="yes" xml:space="preserve">
          <source>To use it in Blaze:</source>
          <target state="translated">要在Blaze中使用它。</target>
        </trans-unit>
        <trans-unit id="2529ac4d2806e5f597d4647eb98ac036671d711b" translate="yes" xml:space="preserve">
          <source>To use publications, you need to create a subscription to it on the client. To do so, you call &lt;code&gt;Meteor.subscribe()&lt;/code&gt; with the name of the publication. When you do this, it opens up a subscription to that publication, and the server starts sending data down the wire to ensure that your client collections contain up to date copies of the data specified by the publication.</source>
          <target state="translated">若要使用发布，您需要在客户端上创建对其的订阅。为此，请使用发布的名称调用 &lt;code&gt;Meteor.subscribe()&lt;/code&gt; 。当您执行此操作时，它将打开对该发布的订阅，并且服务器开始通过有线方式发送数据，以确保您的客户端集合包含该发布指定的数据的最新副本。</target>
        </trans-unit>
        <trans-unit id="93c9d5b7ae4011b1e04433e238d56705d9484724" translate="yes" xml:space="preserve">
          <source>To use remote debugging in Safari, you&amp;rsquo;ll first need to enable the Developer menu. Go to &lt;em&gt;Safari &amp;gt; Preferences&lt;/em&gt; and make sure &amp;lsquo;Show Develop menu in menu bar&amp;rsquo; is checked:</source>
          <target state="translated">要在Safari中使用远程调试，您首先需要启用&amp;ldquo;开发人员&amp;rdquo;菜单。转到&lt;em&gt;Safari&amp;gt;首选项&lt;/em&gt;，并确保选中了&amp;ldquo;在菜单栏中显示开发菜单&amp;rdquo;：</target>
        </trans-unit>
        <trans-unit id="0c5bc8e300a3279a22bfa4d7d8a85474e2a3797b" translate="yes" xml:space="preserve">
          <source>To use shrinkpack, first globally install it:</source>
          <target state="translated">要使用shrinkpack,首先要全局安装。</target>
        </trans-unit>
        <trans-unit id="6b20c6cf1de2fcb393f33d879382a297bf883b54" translate="yes" xml:space="preserve">
          <source>To use the factory in a test, we simply call &lt;code&gt;Factory.create&lt;/code&gt;:</source>
          <target state="translated">要在测试中使用工厂，我们只需调用 &lt;code&gt;Factory.create&lt;/code&gt; 即可：</target>
        </trans-unit>
        <trans-unit id="c07d9c508c0bb90680810845aec84361b9777cf0" translate="yes" xml:space="preserve">
          <source>To use this package, we need to define a &amp;ldquo;layout&amp;rdquo; component. In the Todos example app, that component is called &lt;code&gt;App_body&lt;/code&gt;:</source>
          <target state="translated">要使用此程序包，我们需要定义一个&amp;ldquo;布局&amp;rdquo;组件。在Todos示例应用程序中，该组件称为 &lt;code&gt;App_body&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="7437bf72ebd1cf2ed63cd1afd16388e616aadb7f" translate="yes" xml:space="preserve">
          <source>To write data back to the server, you use a &lt;em&gt;Method&lt;/em&gt;, the subject of the &lt;a href=&quot;methods&quot;&gt;methods article&lt;/a&gt;.</source>
          <target state="translated">要将数据写回到服务器，可以使用&lt;em&gt;Method&lt;/em&gt;，该&lt;a href=&quot;methods&quot;&gt;方法是本文&lt;/a&gt;的主题。</target>
        </trans-unit>
        <trans-unit id="b5db3239e498cad5ccfc3768fc1f7de9179b6a09" translate="yes" xml:space="preserve">
          <source>Tools like &lt;a href=&quot;http://browserify.org&quot;&gt;browserify&lt;/a&gt; and &lt;a href=&quot;https://webpack.github.io&quot;&gt;webpack&lt;/a&gt; are designed to provide a Node-like environment on the client so that many npm packages, even ones originally intended for the server, can run unmodified. Meteor&amp;rsquo;s ES2015 module system does this for you out of the box with no additional configuration necessary. In most cases, you can simply import npm dependencies from a client file, just as you would on the server.</source>
          <target state="translated">像工具&lt;a href=&quot;http://browserify.org&quot;&gt;browserify&lt;/a&gt;和&lt;a href=&quot;https://webpack.github.io&quot;&gt;的WebPack&lt;/a&gt;旨在提供一个节点等，使得许多NPM包，甚至是那些原本打算用于服务器的客户机上环境，可以运行未经修改。流星的ES2015模块系统为您提供了开箱即用的功能，无需其他配置。在大多数情况下，就像在服务器上一样，您可以简单地从客户端文件导入npm依赖项。</target>
        </trans-unit>
        <trans-unit id="fb90eb6ed224e27aae8dcf93409a2c0dae78f0a1" translate="yes" xml:space="preserve">
          <source>Top-level Elements in a &lt;code&gt;.html&lt;/code&gt; file</source>
          <target state="translated">&lt;code&gt;.html&lt;/code&gt; 文件中的顶级元素</target>
        </trans-unit>
        <trans-unit id="c15771fc77a45dae33911c04bb171e6f49fa33cb" translate="yes" xml:space="preserve">
          <source>Tracker</source>
          <target state="translated">Tracker</target>
        </trans-unit>
        <trans-unit id="0fc9210e465ad693259057d1e18ab00a6a0a27d9" translate="yes" xml:space="preserve">
          <source>Tracker.Computation</source>
          <target state="translated">Tracker.Computation</target>
        </trans-unit>
        <trans-unit id="40abde14676099fc15058b971f3b7e5f33425e90" translate="yes" xml:space="preserve">
          <source>Tracker.Dependency</source>
          <target state="translated">Tracker.Dependency</target>
        </trans-unit>
        <trans-unit id="d6faef47982e15f8398607dca0cbf140a673f0b4" translate="yes" xml:space="preserve">
          <source>Triple-braced Tags</source>
          <target state="translated">三臂式标签</target>
        </trans-unit>
        <trans-unit id="b90524605603fa0385a548e1dac399c130060cfa" translate="yes" xml:space="preserve">
          <source>Triple-braced tags are used to insert raw HTML into a template:</source>
          <target state="translated">三括号标签用于在模板中插入原始HTML。</target>
        </trans-unit>
        <trans-unit id="297b38b7eb29ec5686435955320303c43ef3fa0e" translate="yes" xml:space="preserve">
          <source>True during the initial run of the computation at the time &lt;code&gt;Tracker.autorun&lt;/code&gt; is called, and false on subsequent reruns and at other times.</source>
          <target state="translated">在调用 &lt;code&gt;Tracker.autorun&lt;/code&gt; 的计算的初始运行期间为true，在随后的重新运行以及其他时间为false。</target>
        </trans-unit>
        <trans-unit id="337f1addcc2851e038a87f915a64650caf8dc133" translate="yes" xml:space="preserve">
          <source>True if a login method (such as &lt;code&gt;Meteor.loginWithPassword&lt;/code&gt;, &lt;code&gt;Meteor.loginWithFacebook&lt;/code&gt;, or &lt;code&gt;Accounts.createUser&lt;/code&gt;) is currently in progress. A reactive data source.</source>
          <target state="translated">如果当前正在执行登录方法（例如 &lt;code&gt;Meteor.loginWithPassword&lt;/code&gt; ， &lt;code&gt;Meteor.loginWithFacebook&lt;/code&gt; 或 &lt;code&gt;Accounts.createUser&lt;/code&gt; ），则为 True 。反应性数据源。</target>
        </trans-unit>
        <trans-unit id="2de2e1c51dcf99eb34511846e503d98e6f5854b3" translate="yes" xml:space="preserve">
          <source>True if currently connected to the server. If false, changes and method invocations will be queued up until the connection is reestablished.</source>
          <target state="translated">如果当前连接到服务器,则为真。如果为false,更改和方法调用将被排队等待,直到连接被重新建立。</target>
        </trans-unit>
        <trans-unit id="1695b6982cf5b92a0fb48465ecc0f0225645a6a1" translate="yes" xml:space="preserve">
          <source>True if the server has &lt;a href=&quot;#publish_ready&quot;&gt;marked the subscription as ready&lt;/a&gt;. A reactive data source.</source>
          <target state="translated">如果服务器已将&lt;a href=&quot;#publish_ready&quot;&gt;订阅标记为就绪，&lt;/a&gt;则为True 。反应性数据源。</target>
        </trans-unit>
        <trans-unit id="f15d35bf2da46d0314bc5729dd44b0593fe8ade7" translate="yes" xml:space="preserve">
          <source>True if there is a current computation, meaning that dependencies on reactive data sources will be tracked and potentially cause the current computation to be rerun.</source>
          <target state="translated">如果有当前计算,则为真,这意味着对反应式数据源的依赖性将被跟踪,并有可能导致当前计算被重新运行。</target>
        </trans-unit>
        <trans-unit id="f9b429efdd186ff62d97dfc41b3fbe37cdcacaaf" translate="yes" xml:space="preserve">
          <source>True if this Dependency has one or more dependent Computations, which would be invalidated if this Dependency were to change.</source>
          <target state="translated">如果这个依赖关系有一个或多个依赖计算,如果这个依赖关系发生变化,这些计算就会失效,那么这个依赖关系为真。</target>
        </trans-unit>
        <trans-unit id="e35e5942afb506d095c8d820d2471850bc542ba1" translate="yes" xml:space="preserve">
          <source>True if this View has been called on to be rendered by &lt;code&gt;Blaze.render&lt;/code&gt; or &lt;code&gt;Blaze.toHTML&lt;/code&gt; or another View. Once it becomes true, never becomes false again. A &amp;ldquo;created&amp;rdquo; View&amp;rsquo;s &lt;code&gt;.parentView&lt;/code&gt; has been set to its final value. &lt;code&gt;isCreated&lt;/code&gt; is set to true before &lt;code&gt;onViewCreated&lt;/code&gt; hooks are called.</source>
          <target state="translated">如果已通过 &lt;code&gt;Blaze.render&lt;/code&gt; 或 &lt;code&gt;Blaze.toHTML&lt;/code&gt; 或另一个View 调用此View进行渲染，则为True。一旦变为真，就再也不会变为假。&amp;ldquo;创建的&amp;rdquo;视图的 &lt;code&gt;.parentView&lt;/code&gt; 已设置为其最终值。 &lt;code&gt;isCreated&lt;/code&gt; 设置为true之前 &lt;code&gt;onViewCreated&lt;/code&gt; 被称为挂钩。</target>
        </trans-unit>
        <trans-unit id="db38e16aea3816ea9b45530a31ecf9d3d462eb67" translate="yes" xml:space="preserve">
          <source>True if this View has been destroyed, such as by &lt;code&gt;Blaze.remove()&lt;/code&gt; or by a reactive update that removes it. A destroyed View&amp;rsquo;s autoruns have been stopped, and its DOM nodes have generally been cleaned of all Meteor reactivity and possibly dismantled.</source>
          <target state="translated">如果该视图已被 &lt;code&gt;Blaze.remove()&lt;/code&gt; 或通过将其删除的反应性更新销毁，则为true。已销毁的View的自动运行已停止，其DOM节点通常已清除所有Meteor反应性，并可能已拆除。</target>
        </trans-unit>
        <trans-unit id="388166969413925a5bdd13cc81355743d4d4aa57" translate="yes" xml:space="preserve">
          <source>True if this View has been rendered to DOM by &lt;code&gt;Blaze.render&lt;/code&gt; or by the rendering of an enclosing View. Conversion to HTML by &lt;code&gt;Blaze.toHTML&lt;/code&gt; doesn&amp;rsquo;t count. Once true, never becomes false.</source>
          <target state="translated">如果已通过 &lt;code&gt;Blaze.render&lt;/code&gt; 或通过封闭的View的渲染将此View渲染为DOM，则为 True 。由 &lt;code&gt;Blaze.toHTML&lt;/code&gt; 转换为HTML 不计算在内。一旦为真，就永远不会成为假。</target>
        </trans-unit>
        <trans-unit id="2afcc0ebdfcd53b9a8c0c90e3fcfdfb7ae7e9143" translate="yes" xml:space="preserve">
          <source>True if this computation has been invalidated (and not yet rerun), or if it has been stopped.</source>
          <target state="translated">如果这个计算已经无效(还没有重新运行),或者已经停止,则为真。</target>
        </trans-unit>
        <trans-unit id="16b568cc105a32609145d75e97b1f22fc5eca124" translate="yes" xml:space="preserve">
          <source>True if this computation has been stopped.</source>
          <target state="translated">如果该计算已经停止,则为真。</target>
        </trans-unit>
        <trans-unit id="89a5cb83cf1372831bb8c0ccce4a4760f6b37ce1" translate="yes" xml:space="preserve">
          <source>True if we are computing a computation now, either first time or recompute. This matches Tracker.active unless we are inside Tracker.nonreactive, which nullfies currentComputation even though an enclosing computation may still be running.</source>
          <target state="translated">如果我们现在正在计算一个计算,无论是第一次还是重新计算,都是真。这与Tracker.active相匹配,除非我们在Tracker.nonreactive里面,这样会使currentComputation无效,即使一个包围的计算仍然在运行。</target>
        </trans-unit>
        <trans-unit id="4094ad479b147ce7ecddb6050f4f8d861caff62e" translate="yes" xml:space="preserve">
          <source>True to insert a document if no matching documents are found.</source>
          <target state="translated">如果没有找到匹配的文档,则插入文档为真。</target>
        </trans-unit>
        <trans-unit id="13fac8d83f412385a2ac1c4f5d68a58b134b3eb3" translate="yes" xml:space="preserve">
          <source>True to modify all matching documents; false to only modify one of the matching documents (the default).</source>
          <target state="translated">为真,修改所有匹配的文档;为假,只修改其中一个匹配的文档(默认)。</target>
        </trans-unit>
        <trans-unit id="4dd071ec4e8c2771db727bd75e53a147ad95bb75" translate="yes" xml:space="preserve">
          <source>Trusted code can modify multiple documents at once by setting &lt;code&gt;multi&lt;/code&gt; to true, and can use an arbitrary &lt;a href=&quot;#selectors&quot;&gt;Mongo selector&lt;/a&gt; to find the documents to modify. It bypasses any access control rules set up by &lt;a href=&quot;#allow&quot;&gt;&lt;code&gt;allow&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#deny&quot;&gt;&lt;code&gt;deny&lt;/code&gt;&lt;/a&gt;. The number of affected documents will be returned from the &lt;code&gt;update&lt;/code&gt; call if you don&amp;rsquo;t pass a callback.</source>
          <target state="translated">可信代码可以通过将 &lt;code&gt;multi&lt;/code&gt; 设置为true来一次修改多个文档，并且可以使用任意的&lt;a href=&quot;#selectors&quot;&gt;Mongo选择器&lt;/a&gt;查找要修改的文档。它绕过了&lt;a href=&quot;#allow&quot;&gt; &lt;code&gt;allow&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#deny&quot;&gt; &lt;code&gt;deny&lt;/code&gt; &lt;/a&gt;设置的任何访问控制规则。如果您不传递回调，受影响的文档数将从 &lt;code&gt;update&lt;/code&gt; 调用中返回。</target>
        </trans-unit>
        <trans-unit id="78ff66283afe305b1c3f9c20f9c03605cd4e3bc7" translate="yes" xml:space="preserve">
          <source>Trusted code can use an arbitrary &lt;a href=&quot;#selectors&quot;&gt;Mongo selector&lt;/a&gt; to find the documents to remove, and can remove more than one document at once by passing a selector that matches multiple documents. It bypasses any access control rules set up by &lt;a href=&quot;#allow&quot;&gt;&lt;code&gt;allow&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#deny&quot;&gt;&lt;code&gt;deny&lt;/code&gt;&lt;/a&gt;. The number of removed documents will be returned from &lt;code&gt;remove&lt;/code&gt; if you don&amp;rsquo;t pass a callback.</source>
          <target state="translated">受信任的代码可以使用任意的&lt;a href=&quot;#selectors&quot;&gt;Mongo选择器&lt;/a&gt;来查找要删除的文档，并且可以通过传递与多个文档匹配的选择器来一次删除多个文档。它绕过了&lt;a href=&quot;#allow&quot;&gt; &lt;code&gt;allow&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#deny&quot;&gt; &lt;code&gt;deny&lt;/code&gt; &lt;/a&gt;设置的任何访问控制规则。如果您未通过回调，则会从 &lt;code&gt;remove&lt;/code&gt; 中返回已删除文档的数量。</target>
        </trans-unit>
        <trans-unit id="5392c950bdde4be7e5f5b8fdc6a1ca5f21e905cf" translate="yes" xml:space="preserve">
          <source>Twitter</source>
          <target state="translated">Twitter</target>
        </trans-unit>
        <trans-unit id="e2a4b8e0efe9303205f3474381c0be495b8b5efd" translate="yes" xml:space="preserve">
          <source>Twitter with &lt;code&gt;accounts-twitter&lt;/code&gt;</source>
          <target state="translated">推特 &lt;code&gt;accounts-twitter&lt;/code&gt; 推特</target>
        </trans-unit>
        <trans-unit id="65eca67ab5791ed11c8bb708753e02f7a5995d04" translate="yes" xml:space="preserve">
          <source>Twitter, Weibo, Meteor developer accounts: &lt;code&gt;requestPermissions&lt;/code&gt; currently not supported</source>
          <target state="translated">Twitter，微博，Meteor开发人员帐户： &lt;code&gt;requestPermissions&lt;/code&gt; 当前不支持</target>
        </trans-unit>
        <trans-unit id="d4a86cb946d4af4766f6a695502b64f3ea0cd58b" translate="yes" xml:space="preserve">
          <source>TypeScript</source>
          <target state="translated">TypeScript</target>
        </trans-unit>
        <trans-unit id="f3a65a19c82a566d2129fd24cf51620203153f21" translate="yes" xml:space="preserve">
          <source>TypeScript can be installed with:</source>
          <target state="translated">TypeScript可以安装与。</target>
        </trans-unit>
        <trans-unit id="bc7b9f3cfba78c5f5f835da717556e7cfd7cf685" translate="yes" xml:space="preserve">
          <source>TypeScript does not support nested &lt;code&gt;import&lt;/code&gt; statements, therefore conditionally importing modules requires you to use the &lt;code&gt;require&lt;/code&gt; statement (see &lt;a href=&quot;structure#using-require&quot;&gt;Using &lt;code&gt;require&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">TypeScript不支持嵌套的 &lt;code&gt;import&lt;/code&gt; 语句，因此有条件地导入模块需要您使用 &lt;code&gt;require&lt;/code&gt; 语句（请参阅&lt;a href=&quot;structure#using-require&quot;&gt;使用 &lt;code&gt;require&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="22bb752bbc5d1e1894badba0103272490abfd2b7" translate="yes" xml:space="preserve">
          <source>Types of build plugins</source>
          <target state="translated">构建插件的类型</target>
        </trans-unit>
        <trans-unit id="f092c6d9cd99b0b7c54fc00ac8efb74941c361c9" translate="yes" xml:space="preserve">
          <source>Types of stores</source>
          <target state="translated">商店的类型</target>
        </trans-unit>
        <trans-unit id="5b776c43a97f3a815a98825e62b260c4d762f804" translate="yes" xml:space="preserve">
          <source>Types of tests</source>
          <target state="translated">测试类型</target>
        </trans-unit>
        <trans-unit id="b4a89dbeb0804c1230ae2a9bb6fe31ec4e65b71d" translate="yes" xml:space="preserve">
          <source>Typically a package will export one or more symbols, which you&amp;rsquo;ll need to reference with the destructuring syntax. You can find these exported symbols by either looking in that package&amp;rsquo;s &lt;code&gt;package.js&lt;/code&gt; file for &lt;a href=&quot;http://docs.meteor.com/#/full/pack_export&quot;&gt;&lt;code&gt;api.export&lt;/code&gt;&lt;/a&gt; calls or by looking in that package&amp;rsquo;s main JavaScript file for ES2015 &lt;code&gt;export&lt;/code&gt; calls like &lt;code&gt;export const packageName = 'package-name';&lt;/code&gt;.</source>
          <target state="translated">通常，程序包会导出一个或多个符号，您需要使用解构语法对其进行引用。您可以通过在该程序包的 &lt;code&gt;package.js&lt;/code&gt; 文件中查找&lt;a href=&quot;http://docs.meteor.com/#/full/pack_export&quot;&gt; &lt;code&gt;api.export&lt;/code&gt; &lt;/a&gt;调用，或在该程序包的主JavaScript文件中进行ES2015 &lt;code&gt;export&lt;/code&gt; 调用（例如 &lt;code&gt;export const packageName = 'package-name';&lt;/code&gt; 来找到这些导出的符号。。</target>
        </trans-unit>
        <trans-unit id="243fffe4bd539132fde4dc4dfc5d8153e98f8fed" translate="yes" xml:space="preserve">
          <source>Typically the package will warn you if you have not done so. For example, if you install the &lt;a href=&quot;https://atmospherejs.com/meteor/react-meteor-data&quot;&gt;&lt;code&gt;react-meteor-data&lt;/code&gt;&lt;/a&gt; package into your app, you&amp;rsquo;ll also need to &lt;a href=&quot;#installing-npm&quot;&gt;install&lt;/a&gt; the &lt;a href=&quot;https://www.npmjs.com/package/react&quot;&gt;&lt;code&gt;react&lt;/code&gt;&lt;/a&gt; and the &lt;a href=&quot;https://www.npmjs.com/package/react-addons-pure-render-mixin&quot;&gt;&lt;code&gt;react-addons-pure-render-mixin&lt;/code&gt;&lt;/a&gt; packages:</source>
          <target state="translated">通常，如果您没有这样做，软件包会警告您。例如，如果你安装&lt;a href=&quot;https://atmospherejs.com/meteor/react-meteor-data&quot;&gt; &lt;code&gt;react-meteor-data&lt;/code&gt; &lt;/a&gt;包进入你的应用程序，你还需要&lt;a href=&quot;#installing-npm&quot;&gt;安装&lt;/a&gt;的&lt;a href=&quot;https://www.npmjs.com/package/react&quot;&gt; &lt;code&gt;react&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;https://www.npmjs.com/package/react-addons-pure-render-mixin&quot;&gt; &lt;code&gt;react-addons-pure-render-mixin&lt;/code&gt; &lt;/a&gt;包：</target>
        </trans-unit>
        <trans-unit id="1e5aa8ac5c97cd73cd04a039a07f2269bda5a038" translate="yes" xml:space="preserve">
          <source>Typically, you use &lt;code&gt;.throttle()&lt;/code&gt; if you are OK with the event happening during the user series of actions (i.e. you don&amp;rsquo;t mind the multiple, throttled events happening over time, as in this case), whereas you use &lt;code&gt;.debounce()&lt;/code&gt; if you want the events to happen whenever (in this example) the user stops typing for 300ms or longer.</source>
          <target state="translated">通常，如果您对在用户一系列操作期间发生的事件 &lt;code&gt;.throttle()&lt;/code&gt; 如果您不介意随时间推移发生多个受限制的事件，例如在这种情况下），则可以使用 &lt;code&gt;.debounce()&lt;/code&gt; ），而使用.debounce（ ），如果您希望事件在本示例中每隔300毫秒或更长时间停止输入就发生一次。</target>
        </trans-unit>
        <trans-unit id="c82392d4c0fb079cd9e3dec6d6c2ab9c47a8f6f5" translate="yes" xml:space="preserve">
          <source>UI components</source>
          <target state="translated">UI组件</target>
        </trans-unit>
        <trans-unit id="0e2d9b0777a485c1276de0803c12a7d76fbc5c39" translate="yes" xml:space="preserve">
          <source>URL</source>
          <target state="translated">URL</target>
        </trans-unit>
        <trans-unit id="2c4f2ea08e55fbeec99963e458291ac33dd45138" translate="yes" xml:space="preserve">
          <source>URL pattern matching</source>
          <target state="translated">URL模式匹配</target>
        </trans-unit>
        <trans-unit id="59addef772ceb127ba057b3e8227731ed35b79a1" translate="yes" xml:space="preserve">
          <source>URLs and Routing</source>
          <target state="translated">URL和路由</target>
        </trans-unit>
        <trans-unit id="13796f99f92349a87d26e6c9db3e70f9a6d02868" translate="yes" xml:space="preserve">
          <source>UX patterns for displaying new data</source>
          <target state="translated">显示新数据的用户体验模式</target>
        </trans-unit>
        <trans-unit id="5ea3df7599c377417c35fd5fbd655e8eafc83e3f" translate="yes" xml:space="preserve">
          <source>Under &amp;ldquo;Whitelist Headers&amp;rdquo;, scroll down to select &amp;ldquo;Origin&amp;rdquo;</source>
          <target state="translated">在&amp;ldquo;白名单标题&amp;rdquo;下，向下滚动以选择&amp;ldquo;来源&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="a0d58cc609adee7ef58bf0130c39755a9c3590cc" translate="yes" xml:space="preserve">
          <source>Under the hood, each helper starts a new &lt;a href=&quot;http://docs.meteor.com/api/tracker.html#Tracker-autorun&quot;&gt;&lt;code&gt;Tracker.autorun&lt;/code&gt;&lt;/a&gt;. When its reactive dependencies change, the helper is rerun. Helpers depend on their data context, passed arguments and other reactive data sources accessed during execution.</source>
          <target state="translated">在&lt;a href=&quot;http://docs.meteor.com/api/tracker.html#Tracker-autorun&quot;&gt; &lt;code&gt;Tracker.autorun&lt;/code&gt; &lt;/a&gt;，每个帮助程序都会启动一个新的Tracker.autorun。当其反应性依赖项发生更改时，将重新运行帮助程序。帮助程序取决于其数据上下文，传递的参数以及在执行过程中访问的其他反应性数据源。</target>
        </trans-unit>
        <trans-unit id="f4b878bbf9598bb5ee06e42a0dfd282f49503fc5" translate="yes" xml:space="preserve">
          <source>Understanding Blaze</source>
          <target state="translated">了解Blaze</target>
        </trans-unit>
        <trans-unit id="72bc8c7ccecc57a4e0f125bd444e3ca066bd991d" translate="yes" xml:space="preserve">
          <source>Understanding Meteor performance</source>
          <target state="translated">了解Meteor的性能</target>
        </trans-unit>
        <trans-unit id="4e5d96eae6460a3f1dcfd8fcf63848f4239348d0" translate="yes" xml:space="preserve">
          <source>Unexpected failures</source>
          <target state="translated">意外故障</target>
        </trans-unit>
        <trans-unit id="7faa434689ebce51e5c367e561bf98ff54b8bd21" translate="yes" xml:space="preserve">
          <source>Unfortunately, not all publications are as simple to secure as the example above. For more tips on how to use &lt;code&gt;reywood:publish-composite&lt;/code&gt; to handle reactive changes in publications, see the &lt;a href=&quot;data-loading#complex-auth&quot;&gt;data loading article&lt;/a&gt;.</source>
          <target state="translated">不幸的是，并非所有出版物都像上述示例那样简单。有关如何使用 &lt;code&gt;reywood:publish-composite&lt;/code&gt; 来处理发布中的反应性更改的更多提示，请参阅&lt;a href=&quot;data-loading#complex-auth&quot;&gt;数据加载文章&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cd6fdd293670da229ce904119e1e6a9179af0a72" translate="yes" xml:space="preserve">
          <source>Unfortunately, the e-mail ecosystem is &lt;a href=&quot;http://busylog.net/smtp-tls-ssl-25-465-587/&quot;&gt;confusing&lt;/a&gt;. More information can be found in the &lt;a href=&quot;https://nodemailer.com/smtp/&quot;&gt;Nodemailer docs&lt;/a&gt;.</source>
          <target state="translated">不幸的是，电子邮件生态系统&lt;a href=&quot;http://busylog.net/smtp-tls-ssl-25-465-587/&quot;&gt;令人困惑&lt;/a&gt;。可以在&lt;a href=&quot;https://nodemailer.com/smtp/&quot;&gt;Nodemailer文档中&lt;/a&gt;找到更多信息。</target>
        </trans-unit>
        <trans-unit id="81a4be7e010cb6daabd6b2dab1722b9ed0372269" translate="yes" xml:space="preserve">
          <source>Unit testing</source>
          <target state="translated">单元测试</target>
        </trans-unit>
        <trans-unit id="ffb4f9edca2d5dda9f1d2bc06aea35521a5759ed" translate="yes" xml:space="preserve">
          <source>Unit testing is the process of isolating a section of code and then testing that the internals of that section work as you expect. As &lt;a href=&quot;structure&quot;&gt;we&amp;rsquo;ve split our code base up into ES2015 modules&lt;/a&gt; it&amp;rsquo;s natural to test those modules one at a time.</source>
          <target state="translated">单元测试是隔离代码部分，然后测试该部分的内部功能是否按预期工作的过程。由于&lt;a href=&quot;structure&quot;&gt;我们将代码库分为ES2015模块，&lt;/a&gt;因此自然可以一次测试这些模块。</target>
        </trans-unit>
        <trans-unit id="ba6060d8f0b7a3c71d52884b176c4857139e83a3" translate="yes" xml:space="preserve">
          <source>Universal JavaScript</source>
          <target state="translated">通用JavaScript</target>
        </trans-unit>
        <trans-unit id="86251b1e296d5f02e9e014d5fe362ea8a73881ec" translate="yes" xml:space="preserve">
          <source>Unless you have a specific need to roll your own hosting environment, the other options here are definitely easier, and probably make for a better setup than doing everything from scratch. Operating a Meteor app in a way that it works correctly for everyone can be complex, and &lt;a href=&quot;#galaxy&quot;&gt;Galaxy&lt;/a&gt; handles a lot of the specifics like routing clients to the right containers and handling coordinated version updates for you.</source>
          <target state="translated">除非您特别需要滚动自己的托管环境，否则这里的其他选项肯定会更容易，并且与从头开始的所有操作相比，它可能会提供更好的设置。以适合所有人的方式运行Meteor应用程序可能很复杂，&lt;a href=&quot;#galaxy&quot;&gt;Galaxy会&lt;/a&gt;处理许多具体问题，例如将客户端路由到正确的容器并为您处理协调的版本更新。</target>
        </trans-unit>
        <trans-unit id="e5e475b4db8186c54e82b380c6960d256c3d5fc6" translate="yes" xml:space="preserve">
          <source>Unlike &lt;code&gt;observe&lt;/code&gt;, &lt;code&gt;observeChanges&lt;/code&gt; does not provide absolute position information (that is, &lt;code&gt;atIndex&lt;/code&gt; positions rather than &lt;code&gt;before&lt;/code&gt; positions.) This is for efficiency.</source>
          <target state="translated">与 &lt;code&gt;observe&lt;/code&gt; 不同， &lt;code&gt;observeChanges&lt;/code&gt; 不提供绝对位置信息（即 &lt;code&gt;atIndex&lt;/code&gt; 位置而不是 &lt;code&gt;before&lt;/code&gt; 位置。）这是为了提高效率。</target>
        </trans-unit>
        <trans-unit id="370730d29f8dba23681448b11394384e773e2def" translate="yes" xml:space="preserve">
          <source>Unlike &lt;code&gt;{{#with}}&lt;/code&gt; (as used in templates), &lt;code&gt;Blaze.With&lt;/code&gt; has no &amp;ldquo;else&amp;rdquo; case, and a falsy value for the data context will not prevent the content from rendering.</source>
          <target state="translated">与 &lt;code&gt;{{#with}}&lt;/code&gt; （在模板中使用）不同， &lt;code&gt;Blaze.With&lt;/code&gt; 没有&amp;ldquo; else&amp;rdquo;大小写，并且数据上下文的虚假值不会阻止内容呈现。</target>
        </trans-unit>
        <trans-unit id="986225a2e3b5f21807473c42bae16262f3ad7f30" translate="yes" xml:space="preserve">
          <source>Unlike CommonJS &lt;code&gt;module.exports&lt;/code&gt;, the use of default exports does not prevent the simultaneous use of named exports. Here is how you can combine them:</source>
          <target state="translated">与CommonJS &lt;code&gt;module.exports&lt;/code&gt; 不同，使用默认导出不会阻止同时使用命名的导出。您可以将它们组合在一起：</target>
        </trans-unit>
        <trans-unit id="2018a4a7be9f98c1432fb054291dcc164d74f217" translate="yes" xml:space="preserve">
          <source>Unlike most other systems, you don&amp;rsquo;t have to manually declare these dependencies &amp;mdash; it &amp;ldquo;just works&amp;rdquo;. The mechanism is simple and efficient. When you call a function that supports reactive updates (such as a database query), it automatically saves the current Computation object, if any (representing, for example, the current template being rendered). Later, when the data changes, the function can &amp;ldquo;invalidate&amp;rdquo; the Computation, causing it to rerun (rerendering the template).</source>
          <target state="translated">与大多数其他系统不同，您不必手动声明这些依赖关系-它&amp;ldquo;有效&amp;rdquo;。该机制简单有效。当您调用支持响应式更新的函数（例如数据库查询）时，它将自动保存当前的Computation对象（如果有）（例如，表示正在渲染的当前模板）。稍后，当数据更改时，该函数可以使计算&amp;ldquo;无效&amp;rdquo;，从而导致其重新运行（呈现模板）。</target>
        </trans-unit>
        <trans-unit id="b609966fbe1d2e03907584cd43e0ec6aa829a110" translate="yes" xml:space="preserve">
          <source>Unlike purely string-based template systems, Spacebars is HTML-aware and designed to update the DOM automatically. As a result, you can&amp;rsquo;t use a template tag to insert strings of HTML that don&amp;rsquo;t stand on their own, such as a lone HTML start tag or end tag, or that can&amp;rsquo;t be easily modified, such as the name of an HTML element.</source>
          <target state="translated">与仅基于字符串的模板系统不同，Spacebars可以识别HTML，并且可以自动更新DOM。因此，您不能使用模板标记插入不独立的HTML字符串，例如一个单独的HTML起始标记或结束标记，或者不容易修改的字符串，例如名称HTML元素。</target>
        </trans-unit>
        <trans-unit id="187deee1552d77fbc316c605cbcd2f14f4607f34" translate="yes" xml:space="preserve">
          <source>Unlike the other functions, &lt;code&gt;count&lt;/code&gt; registers a dependency only on the number of matching documents. (Updates that just change or reorder the documents in the result set will not trigger a recomputation.)</source>
          <target state="translated">与其他功能不同， &lt;code&gt;count&lt;/code&gt; 仅注册对匹配文档数的依赖性。（仅更改或重新排序结果集中的文档的更新不会触发重新计算。）</target>
        </trans-unit>
        <trans-unit id="45e3392204b6952d6f61b85cf29209fca5d0f1bf" translate="yes" xml:space="preserve">
          <source>Untrusted code can only modify a single document at once, specified by its &lt;code&gt;_id&lt;/code&gt;. The modification is allowed only after checking any applicable &lt;a href=&quot;#allow&quot;&gt;&lt;code&gt;allow&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#deny&quot;&gt;&lt;code&gt;deny&lt;/code&gt;&lt;/a&gt; rules. The number of affected documents will be returned to the callback. Untrusted code cannot perform upserts, except in insecure mode.</source>
          <target state="translated">不受信任的代码只能一次修改由 &lt;code&gt;_id&lt;/code&gt; 指定的单个文档。仅在检查任何适用的&lt;a href=&quot;#allow&quot;&gt; &lt;code&gt;allow&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#deny&quot;&gt; &lt;code&gt;deny&lt;/code&gt; &lt;/a&gt;规则之后，才允许进行修改。受影响的文档数将返回到回调。除非在不安全模式下，否则不受信任的代码无法执行upsert。</target>
        </trans-unit>
        <trans-unit id="342c03ffe7a1d69748a3d7ec1d39f9e9b6bfcb9f" translate="yes" xml:space="preserve">
          <source>Untrusted code can only remove a single document at a time, specified by its &lt;code&gt;_id&lt;/code&gt;. The document is removed only after checking any applicable &lt;a href=&quot;#allow&quot;&gt;&lt;code&gt;allow&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#deny&quot;&gt;&lt;code&gt;deny&lt;/code&gt;&lt;/a&gt; rules. The number of removed documents will be returned to the callback.</source>
          <target state="translated">不受信任的代码一次只能删除由 &lt;code&gt;_id&lt;/code&gt; 指定的单个文档。仅在检查所有适用的&lt;a href=&quot;#allow&quot;&gt; &lt;code&gt;allow&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#deny&quot;&gt; &lt;code&gt;deny&lt;/code&gt; &lt;/a&gt;规则后，才删除文档。删除的文档数将返回到回调。</target>
        </trans-unit>
        <trans-unit id="21f2b5ca46c834095f797cd1368dfc747c462e2d" translate="yes" xml:space="preserve">
          <source>Updated assets are downloaded from the server using native downloading mechanisms, and stored on the device</source>
          <target state="translated">更新后的资产使用本地下载机制从服务器下载,并存储在设备上。</target>
        </trans-unit>
        <trans-unit id="f2b7048f3db131f1da42a30a677df5a041679373" translate="yes" xml:space="preserve">
          <source>Updating stores</source>
          <target state="translated">更新商店</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">Usage</target>
        </trans-unit>
        <trans-unit id="69f3545316c91218f1b07d896f6704b7536cb22e" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;--owner&lt;/code&gt; to decide which organization or user account you&amp;rsquo;d like to deploy a new app to if you are a member of more than one Galaxy-enabled account.</source>
          <target state="translated">如果您是多个启用了Galaxy的帐户的成员，请使用 &lt;code&gt;--owner&lt;/code&gt; 决定要将新应用部署到哪个组织或用户帐户。</target>
        </trans-unit>
        <trans-unit id="a734e5b84dc4f8a9c7aca4934d30b17967acd91c" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;.js-&lt;/code&gt; selectors for event maps</source>
          <target state="translated">将 &lt;code&gt;.js-&lt;/code&gt; 选择器用于事件映射</target>
        </trans-unit>
        <trans-unit id="20b4ef28f8108468d01cf394c4aa764c81b49d15" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;Blaze.remove&lt;/code&gt; to remove a template or View previously inserted with &lt;code&gt;Blaze.render&lt;/code&gt;, in such a way that any behaviors attached to the DOM by Meteor are cleaned up. The rendered template or View is now considered &lt;a href=&quot;templates#Template-onDestroyed&quot;&gt;&amp;ldquo;destroyed&amp;rdquo;&lt;/a&gt;, along with all nested templates and Views. In addition, any data assigned via jQuery to the DOM nodes is removed, as if the nodes were passed to jQuery&amp;rsquo;s &lt;code&gt;$(...).remove()&lt;/code&gt;.</source>
          <target state="translated">使用 &lt;code&gt;Blaze.remove&lt;/code&gt; 删除模板或先前用 &lt;code&gt;Blaze.render&lt;/code&gt; 插入的View，以清除由Meteor附加到DOM的任何行为。现在，将渲染的模板或视图以及所有嵌套的模板和视图视为&lt;a href=&quot;templates#Template-onDestroyed&quot;&gt;&amp;ldquo;已销毁&amp;rdquo;&lt;/a&gt;。另外，所有通过jQuery分配给DOM节点的数据都将被删除，就像将节点传递给jQuery的 &lt;code&gt;$(...).remove()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="03bacce3a2a13672b7823bf8ed643281e07f3704" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;added&lt;/code&gt;, &lt;code&gt;changed&lt;/code&gt;, and &lt;code&gt;removed&lt;/code&gt; when you don&amp;rsquo;t care about the order of the documents in the result set. They are more efficient than &lt;code&gt;addedAt&lt;/code&gt;, &lt;code&gt;changedAt&lt;/code&gt;, and &lt;code&gt;removedAt&lt;/code&gt;.</source>
          <target state="translated">当您不关心结果集中文档的顺序时，请使用 &lt;code&gt;added&lt;/code&gt; ， &lt;code&gt;changed&lt;/code&gt; 和 &lt;code&gt;removed&lt;/code&gt; 。它们比 &lt;code&gt;addedAt&lt;/code&gt; ， &lt;code&gt;changedAt&lt;/code&gt; 和 &lt;code&gt;removedAt&lt;/code&gt; 效率更高。</target>
        </trans-unit>
        <trans-unit id="f295d7c2395881484c4e1c78ecac8322edab4f02" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;meteor build &amp;lt;build-output-directory&amp;gt; --server=&amp;lt;host&amp;gt;:&amp;lt;port&amp;gt;&lt;/code&gt; to build your app for production.</source>
          <target state="translated">使用 &lt;code&gt;meteor build &amp;lt;build-output-directory&amp;gt; --server=&amp;lt;host&amp;gt;:&amp;lt;port&amp;gt;&lt;/code&gt; 构建用于生产的应用程序。</target>
        </trans-unit>
        <trans-unit id="5ab113ea3c01b21ec5c4d1f81b0886db22f95c92" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;meteor search&lt;/code&gt; from the command line.</source>
          <target state="translated">从命令行使用 &lt;code&gt;meteor search&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8317dece1d60274612b01fbc235ed24dfc7cd9c7" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;onRendered()&lt;/code&gt; for 3rd party libraries</source>
          <target state="translated">将 &lt;code&gt;onRendered()&lt;/code&gt; 用于第三方库</target>
        </trans-unit>
        <trans-unit id="961c4e8ba2af61e0a0e40a1c1a9d321b8bfd7613" translate="yes" xml:space="preserve">
          <source>Use Methods instead of client-side insert/update/remove and allow/deny.</source>
          <target state="translated">使用Methods代替客户端的insert/update/remove和allow/deny。</target>
        </trans-unit>
        <trans-unit id="23d2be6d2a1e4ec9fc9f5e1bacecfada21f38c2d" translate="yes" xml:space="preserve">
          <source>Use a community package search website like &lt;a href=&quot;http://fastosphere.meteor.com/&quot;&gt;Fastosphere&lt;/a&gt;.</source>
          <target state="translated">使用社区软件包搜索网站，如&lt;a href=&quot;http://fastosphere.meteor.com/&quot;&gt;Fastosphere&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b6cc0752cbd2ae038a130eb625a262df2d469c19" translate="yes" xml:space="preserve">
          <source>Use a package from Atmosphere or npm that wraps the API into a nice JavaScript interface. For example, if you&amp;rsquo;re trying to load data from Facebook you could use the &lt;a href=&quot;https://www.npmjs.com/package/fbgraph&quot;&gt;fbgraph&lt;/a&gt; npm package. Read more about how to use npm with your app in the &lt;a href=&quot;build-tool#npm&quot;&gt;Build System article&lt;/a&gt;.</source>
          <target state="translated">使用来自Atmosphere或npm的程序包，将API封装到一个不错的JavaScript接口中。例如，如果您尝试从Facebook加载数据，则可以使用&lt;a href=&quot;https://www.npmjs.com/package/fbgraph&quot;&gt;fbgraph&lt;/a&gt; npm软件包。在&lt;a href=&quot;build-tool#npm&quot;&gt;Build System文章中&lt;/a&gt;了解有关如何在您的应用程序中使用npm的更多信息。</target>
        </trans-unit>
        <trans-unit id="76d566695283d1a57974142bff4b7d1b5185dbe9" translate="yes" xml:space="preserve">
          <source>Use a reactive dict for state</source>
          <target state="translated">使用反应式口令进行状态</target>
        </trans-unit>
        <trans-unit id="a055520524f88e57197c0e698a97c17b390f1930" translate="yes" xml:space="preserve">
          <source>Use any router or UI framework</source>
          <target state="translated">使用任何路由器或UI框架</target>
        </trans-unit>
        <trans-unit id="e6169a625b5c39cda78e91874ca2c90ff91eefb4" translate="yes" xml:space="preserve">
          <source>Use rate limiting to stop people from spamming you with subscriptions.</source>
          <target state="translated">使用费率限制来阻止人们向你发送垃圾订阅。</target>
        </trans-unit>
        <trans-unit id="a10eba6c6c8c4bdcba1683603289ff692d799fea" translate="yes" xml:space="preserve">
          <source>Use specific selectors and &lt;a href=&quot;http://guide.meteor.com/security.html#fields&quot;&gt;filter fields&lt;/a&gt; in publications.</source>
          <target state="translated">在出版物中使用特定的选择器和&lt;a href=&quot;http://guide.meteor.com/security.html#fields&quot;&gt;过滤器字段&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="879291cc427788a9f0214648a5f462f8e276b0d0" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;http://docs.meteor.com/#/full/http&quot;&gt;&lt;code&gt;http&lt;/code&gt; package&lt;/a&gt; to access the service&amp;rsquo;s API directly. You&amp;rsquo;ll probably need to pass the access token from above in a header. For details you&amp;rsquo;ll need to search the API documentation for the service.</source>
          <target state="translated">使用&lt;a href=&quot;http://docs.meteor.com/#/full/http&quot;&gt; &lt;code&gt;http&lt;/code&gt; 包&lt;/a&gt;直接访问服务的API。您可能需要从上方在标头中传递访问令牌。有关详细信息，您需要在API文档中搜索该服务。</target>
        </trans-unit>
        <trans-unit id="5d74fa0f4c5803f2a3e03cbab654e8caafe723a8" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;ecmascript&lt;/code&gt; package</source>
          <target state="translated">使用 &lt;code&gt;ecmascript&lt;/code&gt; 包</target>
        </trans-unit>
        <trans-unit id="5c09f7e3a2ce8af78ab146861944ef0ac08400f3" translate="yes" xml:space="preserve">
          <source>Use the below functions to initiate password changes or resets from the server or the client.</source>
          <target state="translated">使用以下功能从服务器或客户端发起密码更改或重置。</target>
        </trans-unit>
        <trans-unit id="c688072a788bd50324e66e2dd4aa16fdf12bd9b8" translate="yes" xml:space="preserve">
          <source>Use the package &lt;a href=&quot;https://atmospherejs.com/juliancwirko/postcss&quot;&gt;juliancwirko:postcss&lt;/a&gt; to your app to enable PostCSS for your Meteor app. To do so, we remove the standard CSS minifier and replace it with the postcss package:</source>
          <target state="translated">使用应用程序包&lt;a href=&quot;https://atmospherejs.com/juliancwirko/postcss&quot;&gt;juliancwirko：postcss&lt;/a&gt;来为Meteor应用程序启用PostCSS。为此，我们删除了标准的CSS缩小器，并将其替换为postcss包：</target>
        </trans-unit>
        <trans-unit id="72205db10ef5ee809240d7e0ab33037b7274d444" translate="yes" xml:space="preserve">
          <source>Use the template instance</source>
          <target state="translated">使用模板实例</target>
        </trans-unit>
        <trans-unit id="e4bdb377e4fe443080ee254526a761941f90dc8f" translate="yes" xml:space="preserve">
          <source>Use this variable to set the SMTP server for sending e-mails. &lt;a href=&quot;https://www.postmarkapp.com&quot;&gt;Postmark&lt;/a&gt;, &lt;a href=&quot;https://www.mandrillapp.com&quot;&gt;Mandrill&lt;/a&gt;, &lt;a href=&quot;https://www.mailgun.com&quot;&gt;MailGun&lt;/a&gt; and &lt;a href=&quot;https://www.sendgrid.com&quot;&gt;SendGrid&lt;/a&gt; (among others) are companies who can provide this service. The &lt;code&gt;MAIL_URL&lt;/code&gt; contains all of the information for connecting to the SMTP server and, like a URL, should look like &lt;code&gt;smtp://user:pass@yourservice.com:587&lt;/code&gt; or &lt;code&gt;smtps://user:pass@yourservice.com:465&lt;/code&gt;.</source>
          <target state="translated">使用此变量可以设置用于发送电子邮件的SMTP服务器。&lt;a href=&quot;https://www.postmarkapp.com&quot;&gt;邮戳&lt;/a&gt;，&lt;a href=&quot;https://www.mandrillapp.com&quot;&gt;山魈&lt;/a&gt;，&lt;a href=&quot;https://www.mailgun.com&quot;&gt;MailGun&lt;/a&gt;和&lt;a href=&quot;https://www.sendgrid.com&quot;&gt;SendGrid&lt;/a&gt;（等等）是公司谁可以提供这项服务。该 &lt;code&gt;MAIL_URL&lt;/code&gt; 包含了所有的信息是连接到SMTP服务器，就像一个URL，看起来应该像 &lt;code&gt;smtp://user:pass@yourservice.com:587&lt;/code&gt; 或 &lt;code&gt;smtps://user:pass@yourservice.com:465&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="86e31c10b6d910bca69a8dc84d50e0ef2543b0f9" translate="yes" xml:space="preserve">
          <source>Use this when you need to do more than simply accept or reject new user creation. With this function you can programatically control the contents of new user documents.</source>
          <target state="translated">当您需要做的不仅仅是接受或拒绝新用户创建时,请使用此功能。通过该功能,您可以对新用户文档的内容进行程序化控制。</target>
        </trans-unit>
        <trans-unit id="d617681615d8a768b31aa7d9fe8446ab56e69fa7" translate="yes" xml:space="preserve">
          <source>Use versions of core packages from a release. Unless provided, all packages will default to the versions released along with &lt;code&gt;meteorRelease&lt;/code&gt;. This will save you from having to figure out the exact versions of the core packages you want to use. For example, if the newest release of meteor is &lt;code&gt;METEOR@0.9.0&lt;/code&gt; and it includes &lt;code&gt;jquery@1.0.0&lt;/code&gt;, you can write &lt;code&gt;api.versionsFrom('METEOR@0.9.0')&lt;/code&gt; in your package, and when you later write &lt;code&gt;api.use('jquery')&lt;/code&gt;, it will be equivalent to &lt;code&gt;api.use('jquery@1.0.0')&lt;/code&gt;. You may specify an array of multiple releases, in which case the default value for constraints will be the &quot;or&quot; of the versions from each release: &lt;code&gt;api.versionsFrom(['METEOR@0.9.0',
'METEOR@0.9.5'])&lt;/code&gt; may cause &lt;code&gt;api.use('jquery')&lt;/code&gt; to be interpreted as &lt;code&gt;api.use('jquery@1.0.0 || 2.0.0')&lt;/code&gt;.</source>
          <target state="translated">使用发行版中核心软件包的版本。除非提供，否则所有软件包都将默认为与 &lt;code&gt;meteorRelease&lt;/code&gt; 一起发布的版本。这将使您不必弄清楚要使用的核心软件包的确切版本。例如，如果流星的最新版本是 &lt;code&gt;METEOR@0.9.0&lt;/code&gt; 并且包含 &lt;code&gt;jquery@1.0.0&lt;/code&gt; ，则可以在程序包中以及以后编写 &lt;code&gt;api.use('jquery')&lt;/code&gt; 时编写 &lt;code&gt;api.versionsFrom('METEOR@0.9.0')&lt;/code&gt; 。 use（'jquery'），它等效于 &lt;code&gt;api.use('jquery@1.0.0')&lt;/code&gt; 。您可以指定多个版本的数组，在这种情况下，约束的默认值将是每个版本的版本的&amp;ldquo;或&amp;rdquo;： &lt;code&gt;api.versionsFrom(['METEOR@0.9.0', 'METEOR@0.9.5'])&lt;/code&gt; 可能导致 &lt;code&gt;api.use('jquery')&lt;/code&gt; 被解释为 &lt;code&gt;api.use('jquery@1.0.0 || 2.0.0')&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4c6848db95e8201decfb4d288c34ba8d67043b97" translate="yes" xml:space="preserve">
          <source>Used to generate URLs to your application by, among others, the accounts package. Provide a full URL to your application like this: &lt;code&gt;ROOT_URL=&quot;https://www.myapp.com&quot;&lt;/code&gt;.</source>
          <target state="translated">用于通过帐户包等生成到您的应用程序的URL。像这样向您的应用程序提供完整的URL： &lt;code&gt;ROOT_URL=&quot;https://www.myapp.com&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="daccde9557869f82dccbade0cba1286c36c7a8ec" translate="yes" xml:space="preserve">
          <source>Useful patterns for managing subscriptions.</source>
          <target state="translated">管理订阅的有用模式。</target>
        </trans-unit>
        <trans-unit id="4325c61b581bf8fe6a3e2400d58928e7b9a55496" translate="yes" xml:space="preserve">
          <source>User Interfaces</source>
          <target state="translated">用户界面</target>
        </trans-unit>
        <trans-unit id="ad4c8252553c4a4b05dbcaa42dcf601cea21365e" translate="yes" xml:space="preserve">
          <source>User documents in the database have secret data like access keys and hashed passwords. When &lt;a href=&quot;#publish-custom-data&quot;&gt;publishing user data to the client&lt;/a&gt;, be extra careful not to include anything that client shouldn&amp;rsquo;t be able to see.</source>
          <target state="translated">数据库中的用户文档具有秘密数据，例如访问密钥和哈希密码。将&lt;a href=&quot;#publish-custom-data&quot;&gt;用户数据发布到客户端时&lt;/a&gt;，请特别注意不要包含客户端不应该看到的任何内容。</target>
        </trans-unit>
        <trans-unit id="c92ae70f9aa6d4032e366eb4340fc1e52d2bf92d" translate="yes" xml:space="preserve">
          <source>User experience patterns</source>
          <target state="translated">用户体验模式</target>
        </trans-unit>
        <trans-unit id="09d01c9af4a2007fdb6c1f64874508da43fe66cb" translate="yes" xml:space="preserve">
          <source>User experience, or UX, describes the experience of a user as they interact with your application. There are several UX patterns that are typical to most Meteor apps which are worth exploring here. Many of these patterns are tied to the way data is loaded as the user interacts with your app, so there are similar sections in the &lt;a href=&quot;data-loading#patterns&quot;&gt;data loading article&lt;/a&gt; talking about how to implement these patterns using Meteor&amp;rsquo;s publications and subscriptions.</source>
          <target state="translated">用户体验（UX）描述了用户与应用程序交互时的体验。大多数Meteor应用程序都有几种典型的UX模式，值得在这里进行探索。这些模式中的许多模式都与用户与您的应用程序交互时加载数据的方式有关，因此&lt;a href=&quot;data-loading#patterns&quot;&gt;数据加载文章中&lt;/a&gt;有类似的部分，讨论如何使用Meteor的出版物和订阅实现这些模式。</target>
        </trans-unit>
        <trans-unit id="0b3ba2af7f943c5da92635dc4cdd862ab5415d7a" translate="yes" xml:space="preserve">
          <source>User interface patterns</source>
          <target state="translated">用户界面模式</target>
        </trans-unit>
        <trans-unit id="46eb6026b6ad46a4d08f316a52fffc281577db72" translate="yes" xml:space="preserve">
          <source>Users and Accounts</source>
          <target state="translated">用户和账户</target>
        </trans-unit>
        <trans-unit id="633c224a715eb2226cdf3095674a790de9909b96" translate="yes" xml:space="preserve">
          <source>Users are by default allowed to specify their own &lt;code&gt;profile&lt;/code&gt; field with &lt;a href=&quot;#accounts_createuser&quot;&gt;&lt;code&gt;Accounts.createUser&lt;/code&gt;&lt;/a&gt; and modify it with &lt;code&gt;Meteor.users.update&lt;/code&gt;. To allow users to edit additional fields, use &lt;a href=&quot;#allow&quot;&gt;&lt;code&gt;Meteor.users.allow&lt;/code&gt;&lt;/a&gt;. To forbid users from making any modifications to their user document:</source>
          <target state="translated">默认情况下，允许用户使用&lt;a href=&quot;#accounts_createuser&quot;&gt; &lt;code&gt;Accounts.createUser&lt;/code&gt; &lt;/a&gt;指定自己的 &lt;code&gt;profile&lt;/code&gt; 字段，并使用 &lt;code&gt;Meteor.users.update&lt;/code&gt; 对其进行修改。要允许用户编辑其他字段，请使用&lt;a href=&quot;#allow&quot;&gt; &lt;code&gt;Meteor.users.allow&lt;/code&gt; &lt;/a&gt;。要禁止用户对其用户文档进行任何修改：</target>
        </trans-unit>
        <trans-unit id="c716801b2d3bf8d16f7c2eb9c7eb5a26e35dddba" translate="yes" xml:space="preserve">
          <source>Using 3rd party packages</source>
          <target state="translated">使用第三方软件包</target>
        </trans-unit>
        <trans-unit id="53bf5eee67f58057293029c899e24eead5ee207b" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;require&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;require&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a3b08b28ba8d34643cfc722ee74c955be5f52685" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;tap:i18n&lt;/code&gt; in Blaze</source>
          <target state="translated">在Blaze中使用 &lt;code&gt;tap:i18n&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9f58e648939108214570b0c5866de129d4492bad" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;tap:i18n&lt;/code&gt; in JavaScript</source>
          <target state="translated">在JavaScript中使用 &lt;code&gt;tap:i18n&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="93c01f30a7b96749ed7813c2c4b2657077db3732" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;universe:i18n&lt;/code&gt; in JS</source>
          <target state="translated">在JS中使用 &lt;code&gt;universe:i18n&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0e51e68f230a8c2b63a310eb062178595feb3ccc" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;universe:i18n&lt;/code&gt; in React</source>
          <target state="translated">在React中使用 &lt;code&gt;universe:i18n&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7e5e4bbb41c286113d572be757efa96cd456055d" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;universe:i18n&lt;/code&gt; in React components</source>
          <target state="translated">在React组件中使用 &lt;code&gt;universe:i18n&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4b7a9d1a0615cfdfc10e353409b5c44dcd2b94b2" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;withTracker&lt;/code&gt;</source>
          <target state="translated">与 &lt;code&gt;withTracker&lt;/code&gt; 一起使用</target>
        </trans-unit>
        <trans-unit id="1becafd3ff808f31d09078cd73dec993eb57d465" translate="yes" xml:space="preserve">
          <source>Using Atmosphere Packages</source>
          <target state="translated">使用大气包</target>
        </trans-unit>
        <trans-unit id="dbbb18c55323003c2090d120062d5bcea8baa8df" translate="yes" xml:space="preserve">
          <source>Using Chromatic enables rapid development of complex components. Typically in a large application, it can be quite difficult to achieve certain states of components purely by &amp;ldquo;using&amp;rdquo; the application. For example, a component in Galaxy can enter a complex state if two deploys of the same app happen simultaneously. With Chromatic we&amp;rsquo;re able to define this state at the component level and test it independently of the application logic.</source>
          <target state="translated">使用Chromatic可以快速开发复杂的组件。通常，在大型应用程序中，仅通过&amp;ldquo;使用&amp;rdquo;应用程序来实现组件的某些状态可能非常困难。例如，如果同一应用程序的两次部署同时发生，则Galaxy中的组件可以进入复杂状态。使用Chromatic，我们可以在组件级别定义此状态，并独立于应用程序逻辑对其进行测试。</target>
        </trans-unit>
        <trans-unit id="ef9829782339534f68303ee625019442673b3ec5" translate="yes" xml:space="preserve">
          <source>Using CoffeeScript</source>
          <target state="translated">使用CoffeeScript</target>
        </trans-unit>
        <trans-unit id="4adad8e38f5d01139eefff6e8ab4cb08f160d418" translate="yes" xml:space="preserve">
          <source>Using ESLint in VS Code requires installation of the 3rd party &lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=dbaeumer.vscode-eslint&quot;&gt;ESLint&lt;/a&gt; extension. In order to install the extension, follow these steps:</source>
          <target state="translated">在VS Code中使用ESLint需要安装第三方&lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=dbaeumer.vscode-eslint&quot;&gt;ESLint&lt;/a&gt;扩展。为了安装扩展，请按照下列步骤操作：</target>
        </trans-unit>
        <trans-unit id="f79f5cdb6ee03272f55707b7689f81aee7587066" translate="yes" xml:space="preserve">
          <source>Using ESLint with Atom is simple. Just install these three packages:</source>
          <target state="translated">使用ESLint和Atom很简单。只需安装这三个包。</target>
        </trans-unit>
        <trans-unit id="17c6bb31f3077116b580521466ca91f208a028d1" translate="yes" xml:space="preserve">
          <source>Using Flow Router</source>
          <target state="translated">使用Flow Router</target>
        </trans-unit>
        <trans-unit id="4d260bc0c0f70d136c4fb9d14420935843358c52" translate="yes" xml:space="preserve">
          <source>Using Flow Router with React is very similar to using it with Blaze. The only difference is that in your route actions, you should use the &lt;a href=&quot;https://www.npmjs.com/package/react-mounter&quot;&gt;&lt;code&gt;react-mounter&lt;/code&gt;&lt;/a&gt; package to mount components with a layout. Once you &lt;code&gt;meteor npm install --save react-mounter&lt;/code&gt;, you can do the following:</source>
          <target state="translated">将Flow Router与React结合使用与与Blaze结合使用非常相似。唯一的区别是在路由操作中，应使用&lt;a href=&quot;https://www.npmjs.com/package/react-mounter&quot;&gt; &lt;code&gt;react-mounter&lt;/code&gt; &lt;/a&gt; mounter软件包来安装具有布局的组件。一旦你 &lt;code&gt;meteor npm install --save react-mounter&lt;/code&gt; ，你可以做到以下几点：</target>
        </trans-unit>
        <trans-unit id="1845bf9ab58b1949566b1478b9830d7643eac47e" translate="yes" xml:space="preserve">
          <source>Using Meteor&amp;rsquo;s data system</source>
          <target state="translated">使用流星的数据系统</target>
        </trans-unit>
        <trans-unit id="4b414ab72c99070ca8b8fafcef4de7d95eeb309c" translate="yes" xml:space="preserve">
          <source>Using React Router is also straightforward. Once you &lt;code&gt;meteor npm install --save react-router history&lt;/code&gt;, you can simply export a list of nested routes as you would in any other React Router driven React application:</source>
          <target state="translated">使用React Router也很简单。一旦你 &lt;code&gt;meteor npm install --save react-router history&lt;/code&gt; ，你可以简单地出口嵌套的路线列表，你会在任何其他阵营路由器驱动阵营的应用：</target>
        </trans-unit>
        <trans-unit id="ce0dca4a6a1231a9f0b22d19f1526d27457ca851" translate="yes" xml:space="preserve">
          <source>Using React in Atmosphere Packages</source>
          <target state="translated">在Atmosphere包中使用React</target>
        </trans-unit>
        <trans-unit id="86ecdd2e45eb7214b2defd0d440c303ea897be28" translate="yes" xml:space="preserve">
          <source>Using Session.equals here means that when the user clicks on an item and changes the selection, only the newly selected and the newly unselected items are re-rendered.</source>
          <target state="translated">在这里使用Session.equals意味着当用户点击一个项目并更改选择时,只有新选择的项目和新未选择的项目会被重新渲染。</target>
        </trans-unit>
        <trans-unit id="1e63d2694fcde1eafdb5a2385c1ae2fc7da9f76a" translate="yes" xml:space="preserve">
          <source>Using Ubuntu Make</source>
          <target state="translated">使用Ubuntu Make</target>
        </trans-unit>
        <trans-unit id="a45711d8609a4d5a7f5e373c787e641c382e5e12" translate="yes" xml:space="preserve">
          <source>Using a local collection to store and display data fetched from a Method</source>
          <target state="translated">使用本地集合来存储和显示从方法获取的数据。</target>
        </trans-unit>
        <trans-unit id="ac426f4d17ac37edf8da6bfd273cc4964850681a" translate="yes" xml:space="preserve">
          <source>Using any of Meteor&amp;rsquo;s &lt;a href=&quot;build-tool#css&quot;&gt;supported CSS pre-processors&lt;/a&gt; you can import other style files provided by an NPM into your application using both relative and absolute paths. However, this will only work for the top-level app and will not work inside an Atmosphere package.</source>
          <target state="translated">使用Meteor &lt;a href=&quot;build-tool#css&quot;&gt;支持的&lt;/a&gt;任何CSS预处理程序，您都可以使用相对路径和绝对路径将NPM提供的其他样式文件导入到您的应用程序中。但是，这仅适用于顶级应用程序，而不能在Atmosphere程序包中使用。</target>
        </trans-unit>
        <trans-unit id="b3c3cfb8bbd7432bd063ad887566596bb7be1f09" translate="yes" xml:space="preserve">
          <source>Using any of Meteor&amp;rsquo;s supported CSS pre-processors you can import other style files using the &lt;code&gt;{package-name}&lt;/code&gt; syntax as long as those files are designated to be lazily evaluated as &amp;ldquo;import&amp;rdquo; files. To get more details on how to determine this see &lt;a href=&quot;build-tool#css-source-vs-import&quot;&gt;CSS source versus import&lt;/a&gt; files.</source>
          <target state="translated">使用Meteor支持的任何CSS预处理程序，您可以使用 &lt;code&gt;{package-name}&lt;/code&gt; 语法导入其他样式文件，只要这些文件被指定为延迟评估为&amp;ldquo;导入&amp;rdquo;文件即可。要获取有关如何确定此内容的更多详细信息，请参阅&lt;a href=&quot;build-tool#css-source-vs-import&quot;&gt;CSS源&lt;/a&gt;文件与导入文件。</target>
        </trans-unit>
        <trans-unit id="eea3cba804284a77f2e8a2c498c7830c69db10b3" translate="yes" xml:space="preserve">
          <source>Using npm Packages</source>
          <target state="translated">使用npm包</target>
        </trans-unit>
        <trans-unit id="d014bbccb76d2fb30ab515cc552cf71f5db19b0f" translate="yes" xml:space="preserve">
          <source>Using oauth-encryption on Windows</source>
          <target state="translated">在Windows上使用oauth加密</target>
        </trans-unit>
        <trans-unit id="3b5c16000f486145e2add9cb3f0d3da20e90fbc6" translate="yes" xml:space="preserve">
          <source>Using oauth-encryption with accounts</source>
          <target state="translated">在账户中使用oauth加密</target>
        </trans-unit>
        <trans-unit id="ec171f85b43e47ed7a519aded9254709b68e16b2" translate="yes" xml:space="preserve">
          <source>Using oauth-encryption without accounts</source>
          <target state="translated">在没有账户的情况下使用oauth加密</target>
        </trans-unit>
        <trans-unit id="cd99de4018ad13733eafdbf3510c5663df6e7836" translate="yes" xml:space="preserve">
          <source>Using plugins</source>
          <target state="translated">使用插件</target>
        </trans-unit>
        <trans-unit id="5017817c024119d2f5bd08a3f92452d595bb4ff5" translate="yes" xml:space="preserve">
          <source>Using schemas on write</source>
          <target state="translated">在写上使用模式</target>
        </trans-unit>
        <trans-unit id="c55a9fca65358172a95d4d2999bd0306206dafee" translate="yes" xml:space="preserve">
          <source>Using the &lt;a href=&quot;https://atmospherejs.com/johanbrook/publication-collector&quot;&gt;&lt;code&gt;johanbrook:publication-collector&lt;/code&gt;&lt;/a&gt; package, you&amp;rsquo;re able to test individual publication&amp;rsquo;s output without needing to create a traditional subscription:</source>
          <target state="translated">使用&lt;a href=&quot;https://atmospherejs.com/johanbrook/publication-collector&quot;&gt; &lt;code&gt;johanbrook:publication-collector&lt;/code&gt; &lt;/a&gt;包，您可以测试单个出版物的输出，而无需创建传统的订阅：</target>
        </trans-unit>
        <trans-unit id="1ad9185ceb62e3d26112c00bede6f61a36486ad7" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;meteor npm ...&lt;/code&gt; commands in place of traditional &lt;code&gt;npm ...&lt;/code&gt; commands is particularly important when using Node.js modules that have binary dependencies that make native C calls (like &lt;a href=&quot;https://www.npmjs.com/package/bcrypt&quot;&gt;&lt;code&gt;bcrypt&lt;/code&gt;&lt;/a&gt;) because doing so ensures that they are built using the same libaries.</source>
          <target state="translated">使用 &lt;code&gt;meteor npm ...&lt;/code&gt; 取代传统的命令 &lt;code&gt;npm ...&lt;/code&gt; 命令使用具有二进制依赖，使本机C调用（如Node.js的模块时，就显得尤为重要&lt;a href=&quot;https://www.npmjs.com/package/bcrypt&quot;&gt; &lt;code&gt;bcrypt&lt;/code&gt; &lt;/a&gt;），因为这样做可以确保它们使用相同的内置库。</target>
        </trans-unit>
        <trans-unit id="f933359ba9f9f8c3a3b9d72930fa9d798376fb73" translate="yes" xml:space="preserve">
          <source>Using the style guide to prototype loading state</source>
          <target state="translated">使用样式指南来原型加载状态</target>
        </trans-unit>
        <trans-unit id="53683da0e52c2eee9035300710d9ff0c180f58d2" translate="yes" xml:space="preserve">
          <source>Usually build plugins implement a class that is given a list of files to process. Commonly, such files have the following methods:</source>
          <target state="translated">通常构建插件都会实现一个类,给它一个要处理的文件列表。通常,这种文件有以下方法。</target>
        </trans-unit>
        <trans-unit id="d603c9c01b0a98ae82dd143867da9b4fbebd2f08" translate="yes" xml:space="preserve">
          <source>Usually it is better to not rely on your application code in migrations (because the application will change over time, and the migrations should not). For instance, having your migrations pass through your Collection2 collections (and thus check schemas, set autovalues etc) is likely to break them over time as your schemas change over time.</source>
          <target state="translated">通常情况下,最好不要在迁移中依赖你的应用程序代码(因为应用程序会随着时间的推移而改变,而迁移不应该)。例如,让你的迁移通过你的Collection2集合(从而检查模式,设置自动值等)很可能会随着时间的推移而破坏它们,因为你的模式会随着时间的推移而改变。</target>
        </trans-unit>
        <trans-unit id="f7df64632cf5e443809b8f851703ad5b54ec8b29" translate="yes" xml:space="preserve">
          <source>Usually it makes for a better UX to show as much of the screen as possible as quickly as possible and to only show loading state for the parts of the screen that are still waiting on data. So a nice pattern to follow is &amp;ldquo;per-component loading&amp;rdquo;. We do this in the Todos app when you visit the list page&amp;mdash;we instantly render the list metadata, such as its title and privacy settings, and render a loading state for the list of todos while we wait for them to appear.</source>
          <target state="translated">通常，它使更好的UX能够尽可能快地显示尽可能多的屏幕，并且仅显示仍在等待数据的屏幕部分的加载状态。因此，一个不错的模式是&amp;ldquo;按组件加载&amp;rdquo;。当您访问列表页面时，我们会在Todos应用程序中执行此操作-我们立即呈现列表元数据（例如其标题和隐私设置），并在待显示待办事项列表时呈现待办事项列表的加载状态。</target>
        </trans-unit>
        <trans-unit id="080418566278cf80d070092e08481e3b90f576c9" translate="yes" xml:space="preserve">
          <source>Usually such state is stored in a &lt;em&gt;global singleton&lt;/em&gt; object which we can call a store. A singleton is a data structure of which only a single copy logically exists. The current user and the router from above are typical examples of such global singletons.</source>
          <target state="translated">通常，这种状态存储在&lt;em&gt;全局单例&lt;/em&gt;对象中，我们可以将其称为存储。单例是逻辑上仅存在一个副本的数据结构。当前用户和上方的路由器是此类全局单例的典型示例。</target>
        </trans-unit>
        <trans-unit id="4dd49f6dedfd5f286c952f4f335ead4222474ceb" translate="yes" xml:space="preserve">
          <source>Usually, the popup-based flow is preferable because the user will not have to reload your whole app at the end of the login flow. However, the popup-based flow requires browser features such as &lt;code&gt;window.close&lt;/code&gt; and &lt;code&gt;window.opener&lt;/code&gt; that are not available in all mobile environments. In particular, we recommend using &lt;code&gt;Meteor.loginWith&amp;lt;ExternalService&amp;gt;({ loginStyle: 'redirect' })&lt;/code&gt; in the following environments:</source>
          <target state="translated">通常，基于弹出窗口的流程是更可取的，因为用户不必在登录流程结束时重新加载整个应用程序。但是，基于弹出窗口的流程需要并非在所有移动环境中都可用的浏览器功能，例如 &lt;code&gt;window.close&lt;/code&gt; 和 &lt;code&gt;window.opener&lt;/code&gt; 。特别是，我们建议在以下环境中使用 &lt;code&gt;Meteor.loginWith&amp;lt;ExternalService&amp;gt;({ loginStyle: 'redirect' })&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="448557a493c70fe0dcbe5cc202ed2a74070bab70" translate="yes" xml:space="preserve">
          <source>Usually, we can redirect in response to a user&amp;rsquo;s action by calling &lt;code&gt;FlowRouter.go()&lt;/code&gt; and friends, like in our list creation example above, but if a user browses directly to a URL that doesn&amp;rsquo;t exist, it&amp;rsquo;s useful to know how to redirect immediately.</source>
          <target state="translated">通常，我们可以通过调用 &lt;code&gt;FlowRouter.go()&lt;/code&gt; 和朋友来重定向用户的操作，就像上面的列表创建示例一样，但是如果用户直接浏览到一个不存在的URL，了解如何进行操作将很有用。立即重定向。</target>
        </trans-unit>
        <trans-unit id="9d79eabf3b21a3edcb3cca6cccdaf3a8fbeea61e" translate="yes" xml:space="preserve">
          <source>Usually, while developing an application, it makes sense to run &lt;code&gt;meteor test&lt;/code&gt; on a second port (say &lt;code&gt;3100&lt;/code&gt;), while also running your main application in a separate process:</source>
          <target state="translated">通常，在开发应用程序时，有必要在第二个端口（例如 &lt;code&gt;3100&lt;/code&gt; ）上运行 &lt;code&gt;meteor test&lt;/code&gt; ，同时还要在单独的进程中运行主应用程序：</target>
        </trans-unit>
        <trans-unit id="0e80e11d33452a9a41da25c7cbb3152b516fe169" translate="yes" xml:space="preserve">
          <source>Usually, you don&amp;rsquo;t need to include &lt;code&gt;accounts-base&lt;/code&gt; yourself since it&amp;rsquo;s added for you if you use &lt;code&gt;accounts-password&lt;/code&gt; or similar, but it&amp;rsquo;s good to be aware of what is what.</source>
          <target state="translated">通常，您不需要自己包括基于 &lt;code&gt;accounts-base&lt;/code&gt; 因为如果您使用 &lt;code&gt;accounts-password&lt;/code&gt; 或类似密码会为您添加帐户，但是知道是什么是很好的。</target>
        </trans-unit>
        <trans-unit id="bafcc18c6001832250fcc1b24de9d49644426902" translate="yes" xml:space="preserve">
          <source>Valid key values:</source>
          <target state="translated">有效的键值:</target>
        </trans-unit>
        <trans-unit id="c4809279eaffccbaae44cdeedc2f2acf685589ca" translate="yes" xml:space="preserve">
          <source>Validate all Method and publication arguments, and include the &lt;code&gt;audit-argument-checks&lt;/code&gt; to check this automatically.</source>
          <target state="translated">验证所有方法和发布参数，并包括 &lt;code&gt;audit-argument-checks&lt;/code&gt; 以自动检查它。</target>
        </trans-unit>
        <trans-unit id="03557f20b760d4f31c2307f132591da6e45886a6" translate="yes" xml:space="preserve">
          <source>Validate all arguments</source>
          <target state="translated">验证所有参数</target>
        </trans-unit>
        <trans-unit id="888b7ee83a472f1d312ef6cdfc9d78c961d9a324" translate="yes" xml:space="preserve">
          <source>Validate all arguments using &lt;code&gt;check&lt;/code&gt; or &lt;code&gt;aldeed:simple-schema&lt;/code&gt;.</source>
          <target state="translated">使用 &lt;code&gt;check&lt;/code&gt; 或 &lt;code&gt;aldeed:simple-schema&lt;/code&gt; 验证所有参数。</target>
        </trans-unit>
        <trans-unit id="1b1a9c130d0822b346ebc944d18c77af8995f90f" translate="yes" xml:space="preserve">
          <source>Validate and check all inputs that come from the client.</source>
          <target state="translated">验证和检查所有来自客户端的输入。</target>
        </trans-unit>
        <trans-unit id="15f0bb7c9a7bdb62845bdb709898269a288d135a" translate="yes" xml:space="preserve">
          <source>Validate data context</source>
          <target state="translated">验证数据上下文</target>
        </trans-unit>
        <trans-unit id="80a59d7c91ab12693f3c24c5b83bfd3385bd2c0e" translate="yes" xml:space="preserve">
          <source>Validate login attempts.</source>
          <target state="translated">验证登录尝试。</target>
        </trans-unit>
        <trans-unit id="87ce9b6cba405f47ec78abd4743634d121c5bdee" translate="yes" xml:space="preserve">
          <source>Validate login callbacks that aren&amp;rsquo;t explicitly trying to override a previous error generally have no need to run if the attempt has already been determined to fail, and should start with</source>
          <target state="translated">如果已经确定尝试失败，则验证没有明确尝试覆盖先前错误的登录回调通常不需要运行，并且应该以</target>
        </trans-unit>
        <trans-unit id="7890fdb5f8ccd072b05f6c52a66ef7fc2a051cb9" translate="yes" xml:space="preserve">
          <source>Validating against a schema</source>
          <target state="translated">针对模式进行验证</target>
        </trans-unit>
        <trans-unit id="fb936e80a470ebeaaad104b273f6fb1e1b350a2b" translate="yes" xml:space="preserve">
          <source>ValidationError for argument validation errors</source>
          <target state="translated">参数验证错误的ValidationError</target>
        </trans-unit>
        <trans-unit id="f429b7cf8a4db1908837249a6ac2a54a6e11bf9b" translate="yes" xml:space="preserve">
          <source>Values returned from helpers must be pure text, not HTML. (That is, strings should have &lt;code&gt;&amp;lt;&lt;/code&gt;, not &lt;code&gt;&amp;amp;lt;&lt;/code&gt;.) Spacebars will perform any necessary escaping if a template is rendered to HTML.</source>
          <target state="translated">从助手返回的值必须是纯文本，而不是HTML。（也就是说，字符串应具有 &lt;code&gt;&amp;lt;&lt;/code&gt; ，而不是 &lt;code&gt;&amp;amp;lt;&lt;/code&gt; ;。）如果将模板呈现为HTML，空格键将执行任何必要的转义。</target>
        </trans-unit>
        <trans-unit id="045c90945319688ae9d74869140c5d56b7e85fb9" translate="yes" xml:space="preserve">
          <source>Variables introduced this way take precedence over names of templates, global helpers, fields of the current data context and previously introduced variables with the same name.</source>
          <target state="translated">以这种方式引入的变量优先于模板、全局帮助程序、当前数据上下文的字段以及之前引入的同名变量的名称。</target>
        </trans-unit>
        <trans-unit id="bbd63e59c29dd06130dff6566b7da5d024348166" translate="yes" xml:space="preserve">
          <source>Version numbers in string form</source>
          <target state="translated">字符串形式的版本号</target>
        </trans-unit>
        <trans-unit id="f4db5c9295ba20317d97afec7f45171a7d75f8f0" translate="yes" xml:space="preserve">
          <source>View layers</source>
          <target state="translated">查看图层</target>
        </trans-unit>
        <trans-unit id="80862a89e60d27db6c651d4339c6e41365075e1c" translate="yes" xml:space="preserve">
          <source>Viewing</source>
          <target state="translated">Viewing</target>
        </trans-unit>
        <trans-unit id="e5f044a125b61640854a6b6d36ce37e1659ea156" translate="yes" xml:space="preserve">
          <source>Visit the &lt;a href=&quot;https://forums.meteor.com&quot;&gt;Meteor discussion forums&lt;/a&gt; to announce projects, get help, talk about the community, or discuss changes to core.</source>
          <target state="translated">访问&lt;a href=&quot;https://forums.meteor.com&quot;&gt;Meteor讨论论坛&lt;/a&gt;以宣布项目，获得帮助，谈论社区或讨论对核心的更改。</target>
        </trans-unit>
        <trans-unit id="423f1f3d80c4d824ca917e13649a5c584a13ec87" translate="yes" xml:space="preserve">
          <source>Visual Studio Code</source>
          <target state="translated">Visual Studio代码</target>
        </trans-unit>
        <trans-unit id="80dba7512d8171ffe0c68de505c83939c8e4f7b6" translate="yes" xml:space="preserve">
          <source>Visually testing reusable components</source>
          <target state="translated">视觉测试可重复使用的组件</target>
        </trans-unit>
        <trans-unit id="6f77218a678f83cf7b0f6386bfaa4b68ac89b8ee" translate="yes" xml:space="preserve">
          <source>Watch a query. Receive callbacks as the result set changes.</source>
          <target state="translated">观察一个查询。当结果集发生变化时接收回调。</target>
        </trans-unit>
        <trans-unit id="023860dab61f66b01b653c243028682ec7205894" translate="yes" xml:space="preserve">
          <source>Watch a query. Receive callbacks as the result set changes. Only the differences between the old and new documents are passed to the callbacks.</source>
          <target state="translated">观察一个查询。当结果集改变时接收回调。只有新旧文档之间的差异才会传递给回调。</target>
        </trans-unit>
        <trans-unit id="e70677505fbf49c176a22cca7a1b636171a3e136" translate="yes" xml:space="preserve">
          <source>We achieve this by passing the readiness of the todos list down from the smart component which is subscribing (the &lt;code&gt;listShowPage&lt;/code&gt;) into the reusable component which renders the data:</source>
          <target state="translated">我们通过将待办事项列表的就绪状态从正在订阅的智能组件（ &lt;code&gt;listShowPage&lt;/code&gt; ）传递到可重用的组件中，该组件呈现数据：</target>
        </trans-unit>
        <trans-unit id="c8b484b3d7f114e81448853cb7597adc9e8c0f6e" translate="yes" xml:space="preserve">
          <source>We are then able to wire in the denormalizer into the mutations of the &lt;code&gt;Todos&lt;/code&gt; collection like so:</source>
          <target state="translated">然后，我们可以将反规范器连接到 &lt;code&gt;Todos&lt;/code&gt; 集合的突变中，如下所示：</target>
        </trans-unit>
        <trans-unit id="d33f8b817ee66745ac583a46ea670f6a8c6a78db" translate="yes" xml:space="preserve">
          <source>We attach the schema to the namespace of &lt;code&gt;Lists&lt;/code&gt; directly, which allows us to check objects against this schema directly whenever we want, such as in a form or &lt;a href=&quot;methods&quot;&gt;Method&lt;/a&gt;. In the &lt;a href=&quot;#schemas-on-write&quot;&gt;next section&lt;/a&gt; we&amp;rsquo;ll see how to use this schema automatically when writing to the collection.</source>
          <target state="translated">我们将模式直接附加到 &lt;code&gt;Lists&lt;/code&gt; 的命名空间，这使我们可以在需要时直接根据此模式检查对象，例如以form或&lt;a href=&quot;methods&quot;&gt;Method&lt;/a&gt;形式。在&lt;a href=&quot;#schemas-on-write&quot;&gt;下一节中，&lt;/a&gt;我们将看到在写入集合时如何自动使用此架构。</target>
        </trans-unit>
        <trans-unit id="54ff4d01015b98dd760aa2436a1958993a17aa88" translate="yes" xml:space="preserve">
          <source>We believe Methods provide a much better primitive for building modern applications than REST endpoints built on HTTP. Let&amp;rsquo;s go over some of the things you get for free with Methods that you would have to worry about if using HTTP. The purpose of this section is not to convince you that REST is bad - it&amp;rsquo;s just to remind you that you don&amp;rsquo;t need to handle these things yourself in a Meteor app.</source>
          <target state="translated">我们认为，方法比基于HTTP的REST端点为构建现代应用程序提供了更好的原始方法。让我们研究一下使用方法免费获得的一些东西，如果使用HTTP，则将不得不担心。本部分的目的并不是要使您确信REST是不好的-只是提醒您，您不需要自己在Meteor应用程序中处理这些事情。</target>
        </trans-unit>
        <trans-unit id="45f0dc5c09269563f1248497ac835d4da26a207a" translate="yes" xml:space="preserve">
          <source>We can also add that command to our &lt;code&gt;package.json&lt;/code&gt; as a &lt;code&gt;test&lt;/code&gt; script:</source>
          <target state="translated">我们还可以将该命令作为 &lt;code&gt;test&lt;/code&gt; 脚本添加到 &lt;code&gt;package.json&lt;/code&gt; 中：</target>
        </trans-unit>
        <trans-unit id="7a9107c4505267d3b570f2f760a133029f39b3d4" translate="yes" xml:space="preserve">
          <source>We can also apply the same structure to testing React components and recommend the &lt;a href=&quot;https://github.com/airbnb/enzyme&quot;&gt;Enzyme&lt;/a&gt; package, which simulates a React component&amp;rsquo;s environment and allows you to query it using CSS selectors. A larger suite of tests is available in the &lt;a href=&quot;https://github.com/meteor/todos/tree/react&quot;&gt;react branch of the Todos app&lt;/a&gt;, but let&amp;rsquo;s look at a simple example for now:</source>
          <target state="translated">我们还可以将相同的结构应用于测试React组件，并推荐&lt;a href=&quot;https://github.com/airbnb/enzyme&quot;&gt;Enzyme&lt;/a&gt;软件包，该软件包可模拟React组件的环境，并允许您使用CSS选择器对其进行查询。&lt;a href=&quot;https://github.com/meteor/todos/tree/react&quot;&gt;Todos应用程序&lt;/a&gt;的react分支中提供了更大的测试套件，但现在让我们看一个简单的示例：</target>
        </trans-unit>
        <trans-unit id="92d2f77dfd1bf7e88a8d062c6fdb2f47955b940c" translate="yes" xml:space="preserve">
          <source>We can also easily use translations in Blaze templates. To do so, we can use the &lt;code&gt;{{_ }}&lt;/code&gt; helper. In the Todos app we use the actual string that we want to output in English as the i18n key, which means we don&amp;rsquo;t need to provide an English translation, although perhaps in a real app you might want to provide keys from the beginning.</source>
          <target state="translated">我们还可以轻松地在Blaze模板中使用翻译。为此，我们可以使用 &lt;code&gt;{{_ }}&lt;/code&gt; 帮助器。在Todos应用程序中，我们使用要以英语输出的实际字符串作为i18n键，这意味着我们不需要提供英语翻译，尽管也许在真正的应用程序中，您可能希望从一开始就提供键。</target>
        </trans-unit>
        <trans-unit id="1f22f384764aee1fe14c7dafc10fb665e2fa8d68" translate="yes" xml:space="preserve">
          <source>We can also use &lt;code&gt;publish-composite&lt;/code&gt; to perform complex authorization in publications. For instance, consider if we had a &lt;code&gt;Todos.admin.inList&lt;/code&gt; publication that allowed an admin to bypass default publication&amp;rsquo;s security for users with an &lt;code&gt;admin&lt;/code&gt; flag set.</source>
          <target state="translated">我们还可以使用 &lt;code&gt;publish-composite&lt;/code&gt; 在出版物中执行复杂的授权。例如，考虑是否有一个 &lt;code&gt;Todos.admin.inList&lt;/code&gt; 发布，该发布允许管理员为设置了 &lt;code&gt;admin&lt;/code&gt; 标志的用户绕过默认发布的安全性。</target>
        </trans-unit>
        <trans-unit id="404edd3a8b9cec4841d4934e807761f1104d352e" translate="yes" xml:space="preserve">
          <source>We can also use a command-line driver for Mocha &lt;a href=&quot;https://atmospherejs.com/meteortesting/mocha&quot;&gt;&lt;code&gt;meteortesting:mocha&lt;/code&gt;&lt;/a&gt; to run our standard tests on the command line.</source>
          <target state="translated">我们还可以对Mocha &lt;a href=&quot;https://atmospherejs.com/meteortesting/mocha&quot;&gt; &lt;code&gt;meteortesting:mocha&lt;/code&gt; &lt;/a&gt;使用命令行驱动程序，以在命令行上运行我们的标准测试。</target>
        </trans-unit>
        <trans-unit id="8319bf829fd8fb9f0ee17a63e83f77c056cbca35" translate="yes" xml:space="preserve">
          <source>We can determine if the user is currently viewing the list with the &lt;code&gt;activeListClass&lt;/code&gt; helper:</source>
          <target state="translated">我们可以使用 &lt;code&gt;activeListClass&lt;/code&gt; 帮助程序确定用户当前是否正在查看列表：</target>
        </trans-unit>
        <trans-unit id="180102553a75ea5c131b70101ebffe037336b39e" translate="yes" xml:space="preserve">
          <source>We can now distinguish between the 5 states above based on these conditions:</source>
          <target state="translated">现在我们可以根据这些条件来区分以上5种状态。</target>
        </trans-unit>
        <trans-unit id="8db255d04f2d2e46dd8598a7e77a72a778370ff8" translate="yes" xml:space="preserve">
          <source>We can now use the data from the local collection &lt;code&gt;ScoreAverages&lt;/code&gt; inside a UI component exactly the same way we would use a regular MongoDB collection. Instead of it updating automatically, we&amp;rsquo;ll need to call &lt;code&gt;updateAverages&lt;/code&gt; every time we need new results.</source>
          <target state="translated">现在，我们可以在UI组件中使用本地集合 &lt;code&gt;ScoreAverages&lt;/code&gt; 中的数据，与使用常规MongoDB集合完全相同。除了需要自动更新之外，我们每次需要新结果时都需要调用 &lt;code&gt;updateAverages&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="111a91f091af503fa1f23d871fb7238da463c6a1" translate="yes" xml:space="preserve">
          <source>We can take advantage of the object specification form of a block tag to define an object with properties we name:</source>
          <target state="translated">我们可以利用块标签的对象规范形式来定义一个具有我们命名的属性的对象。</target>
        </trans-unit>
        <trans-unit id="0e81303b7fca31ea4339d443f8ad45d76e557a92" translate="yes" xml:space="preserve">
          <source>We can use a subclass for this case as well, overriding the &lt;code&gt;remove()&lt;/code&gt; method:</source>
          <target state="translated">在这种情况下，我们也可以使用子类，重写 &lt;code&gt;remove()&lt;/code&gt; 方法：</target>
        </trans-unit>
        <trans-unit id="bc12cc8dc89146524fb0f80a1ccdca1c2811d0de" translate="yes" xml:space="preserve">
          <source>We can use the &lt;a href=&quot;#test-data&quot;&gt;Factory package&amp;rsquo;s&lt;/a&gt;&lt;code&gt;.build()&lt;/code&gt; API to create a test document without inserting it into any collection. As we&amp;rsquo;ve been careful not to call out to any collections directly in the reusable component, we can pass the built &lt;code&gt;todo&lt;/code&gt; document directly into the template.</source>
          <target state="translated">我们可以使用&lt;a href=&quot;#test-data&quot;&gt;Factory软件包的&lt;/a&gt; &lt;code&gt;.build()&lt;/code&gt; API创建测试文档，而无需将其插入任何集合中。由于我们一直小心不要在可重用组件中直接调用任何集合，因此我们可以将内置的 &lt;code&gt;todo&lt;/code&gt; 文档直接传递到模板中。</target>
        </trans-unit>
        <trans-unit id="e3849a93ff5248576e0a3e5125111f84d10c745f" translate="yes" xml:space="preserve">
          <source>We can use the &lt;a href=&quot;https://atmospherejs.com/dburles/collection-helpers&quot;&gt;&lt;code&gt;dburles:collection-helpers&lt;/code&gt;&lt;/a&gt; package to easily attach such methods (or &amp;ldquo;helpers&amp;rdquo;) to documents. For instance:</source>
          <target state="translated">我们可以使用&lt;a href=&quot;https://atmospherejs.com/dburles/collection-helpers&quot;&gt; &lt;code&gt;dburles:collection-helpers&lt;/code&gt; &lt;/a&gt;包将此类方法（或&amp;ldquo; helpers&amp;rdquo;）轻松附加到文档中。例如：</target>
        </trans-unit>
        <trans-unit id="a9491149f883c97c881b591b443d5b7c9fb89ec3" translate="yes" xml:space="preserve">
          <source>We can use this information to be more subtle about when we try and show data to users, and when we show a loading screen.</source>
          <target state="translated">我们可以利用这些信息来更微妙地决定何时尝试向用户展示数据,何时展示加载画面。</target>
        </trans-unit>
        <trans-unit id="e74db3094b83b131983d2fc11f77e3f2242d446c" translate="yes" xml:space="preserve">
          <source>We could write our above migration like so (note that you must be on MongoDB 2.6 or later for the bulk update operations to exist). We can access the native MongoDB API via &lt;a href=&quot;http://docs.meteor.com/api/collections.html#Mongo-Collection-rawCollection&quot;&gt;&lt;code&gt;Collection#rawCollection()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">我们可以这样写上面的迁移（请注意，必须存在MongoDB 2.6或更高版本，才能进行批量更新操作）。我们可以通过&lt;a href=&quot;http://docs.meteor.com/api/collections.html#Mongo-Collection-rawCollection&quot;&gt; &lt;code&gt;Collection#rawCollection()&lt;/code&gt; &lt;/a&gt;访问本机MongoDB API ：</target>
        </trans-unit>
        <trans-unit id="4eee7c51d10456d3ad169288246f8e84033bc7c4" translate="yes" xml:space="preserve">
          <source>We do that in the &lt;code&gt;action&lt;/code&gt; function of our &lt;code&gt;Lists.show&lt;/code&gt; route definition:</source>
          <target state="translated">我们在 &lt;code&gt;Lists.show&lt;/code&gt; 路由定义的 &lt;code&gt;action&lt;/code&gt; 函数中执行此操作：</target>
        </trans-unit>
        <trans-unit id="9855e9b007cc49cf29b6e64ad7e7bc2c6e5580ac" translate="yes" xml:space="preserve">
          <source>We do this for the same reason we subscribe in the component in the first place&amp;mdash;to avoid action at a distance and to make it easier to understand where data comes from. A common pattern is to fetch the data in a parent template, and then pass it into a &amp;ldquo;pure&amp;rdquo; child component, as we&amp;rsquo;ll see it in the &lt;a href=&quot;ui-ux#components&quot;&gt;UI Article&lt;/a&gt;.</source>
          <target state="translated">我们这样做的原因与我们首先订阅该组件的原因相同-避免远距离执行操作，并使其更容易理解数据的来源。一种常见的模式是获取父模板中的数据，然后将其传递到&amp;ldquo;纯&amp;rdquo;子组件中，如我们将在&lt;a href=&quot;ui-ux#components&quot;&gt;UI Article中&lt;/a&gt;看到的那样。</target>
        </trans-unit>
        <trans-unit id="1651ae38461b176e14355178d2e8cdee134ca5be" translate="yes" xml:space="preserve">
          <source>We do this with Blaze&amp;rsquo;s &lt;code&gt;Template.subscriptionsReady&lt;/code&gt; which is perfect for this purpose, as it waits for all the subscriptions that the current component has asked for to become ready.</source>
          <target state="translated">我们使用Blaze的 &lt;code&gt;Template.subscriptionsReady&lt;/code&gt; 进行此操作，它非常适合此目的，因为它等待当前组件要求准备就绪的所有订阅。</target>
        </trans-unit>
        <trans-unit id="84f04ce9e68f5ba71117f050c42d38f05296bc5d" translate="yes" xml:space="preserve">
          <source>We have slightly modified the way Underscore differentiates between objects and arrays in &lt;a href=&quot;http://underscorejs.org/#each&quot;&gt;collection functions&lt;/a&gt;. The original Underscore logic is to treat any object with a numeric &lt;code&gt;length&lt;/code&gt; property as an array (which helps it work properly on &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/NodeList&quot;&gt;&lt;code&gt;NodeList&lt;/code&gt;s&lt;/a&gt;). In Meteor&amp;rsquo;s version of Underscore, objects with a numeric &lt;code&gt;length&lt;/code&gt; property are treated as objects if they have no prototype (specifically, if &lt;code&gt;x.constructor === Object&lt;/code&gt;.</source>
          <target state="translated">我们稍微修改了Underscore在&lt;a href=&quot;http://underscorejs.org/#each&quot;&gt;集合函数中&lt;/a&gt;区分对象和数组的方式。原始下划线逻辑用于治疗任何对象与数字 &lt;code&gt;length&lt;/code&gt; 属性作为阵列（这有助于其正常工作的&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/NodeList&quot;&gt; &lt;code&gt;NodeList&lt;/code&gt; 小号&lt;/a&gt;）。在Meteor的 &lt;code&gt;x.constructor === Object&lt;/code&gt; ，如果对象没有原型（特别是x.constructor === Object），则将具有数字 &lt;code&gt;length&lt;/code&gt; 属性的对象视为对象。</target>
        </trans-unit>
        <trans-unit id="a55ad990e0ddae5dc67ee2451fdf32e798033ca5" translate="yes" xml:space="preserve">
          <source>We might want to write:</source>
          <target state="translated">我们可能想写。</target>
        </trans-unit>
        <trans-unit id="d92e893f2eb16248ff3c876dece5c8af700c08be" translate="yes" xml:space="preserve">
          <source>We place the &lt;code&gt;FlowRouter.go('Lists.show')&lt;/code&gt; outside of the callback of the Method call, so that it runs right away. First we &lt;em&gt;simulate&lt;/em&gt; the method (which creates a list locally in Minimongo), then route to it. Eventually the server returns, usually creating the exact same list (which the user will not even notice). In the unlikely event that the server call fails, we show an error and redirect back to the homepage.</source>
          <target state="translated">我们将 &lt;code&gt;FlowRouter.go('Lists.show')&lt;/code&gt; 放在Method调用的回调之外，以便它立即运行。首先，我们&lt;em&gt;模拟&lt;/em&gt;该方法（该方法在Minimongo中本地创建一个列表），然后路由至该方法。最终，服务器返回，通常创建完全相同的列表（用户甚至不会注意到）。万一服务器调用失败，我们将显示错误并重定向回首页。</target>
        </trans-unit>
        <trans-unit id="c7531fbd03b44e92eb25ae25659d6ecd13b12937" translate="yes" xml:space="preserve">
          <source>We recommend choosing and sticking to a JavaScript style guide and enforcing it with tools. A popular option that we recommend is the &lt;a href=&quot;https://github.com/airbnb/javascript&quot;&gt;Airbnb style guide&lt;/a&gt; with the ES6 extensions (and optionally React extensions).</source>
          <target state="translated">我们建议选择并坚持使用JavaScript样式指南，并使用工具对其进行实施。我们推荐的一个流行选项是带有ES6扩展（以及可选的React扩展）的&lt;a href=&quot;https://github.com/airbnb/javascript&quot;&gt;Airbnb样式指南&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1b25b116ae91d3081999d0fc63470aeadac903ca" translate="yes" xml:space="preserve">
          <source>We recommend using the &lt;a href=&quot;https://github.com/airbnb/javascript/tree/master/packages/eslint-config-airbnb&quot;&gt;Airbnb eslint configuration&lt;/a&gt; which verifies the Airbnb styleguide.</source>
          <target state="translated">我们建议使用验证Airbnb样式指南的&lt;a href=&quot;https://github.com/airbnb/javascript/tree/master/packages/eslint-config-airbnb&quot;&gt;Airbnb eslint配置&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="825bccad1882a72368fdd0d2dbb69ddc1f9a5239" translate="yes" xml:space="preserve">
          <source>We recommend using these approaches only if absolutely required and if your customizations can not be handled by standard configuration options.</source>
          <target state="translated">我们建议只有在绝对需要的情况下,以及在标准配置选项无法处理您的定制时,才使用这些方法。</target>
        </trans-unit>
        <trans-unit id="e66eae3b48f33946df3e77d5d20aaa2c7257b1d2" translate="yes" xml:space="preserve">
          <source>We saw above that using a helper (or data context lookup) in the form &lt;code&gt;checked={{todo.checked}}&lt;/code&gt; will add the checked property to the HTML tag if &lt;code&gt;todo.checked&lt;/code&gt; evaluates to true. Also, you can directly include an object in the attribute list of an HTML element to set multiple attributes at once:</source>
          <target state="translated">上面我们看到，如果 &lt;code&gt;todo.checked&lt;/code&gt; 评估为true ，则使用格式为 &lt;code&gt;checked={{todo.checked}}&lt;/code&gt; 的帮助程序（或数据上下文查找）会将checked属性添加到HTML标记中。另外，您可以直接在HTML元素的属性列表中包含一个对象，以一次设置多个属性：</target>
        </trans-unit>
        <trans-unit id="212c94829bfa33adf98a72f023b4376341891278" translate="yes" xml:space="preserve">
          <source>We simply define the &lt;code&gt;ListPage&lt;/code&gt; component as a presentational component that expects its data to be passed in using React &lt;code&gt;props&lt;/code&gt;:</source>
          <target state="translated">我们仅将 &lt;code&gt;ListPage&lt;/code&gt; 组件定义为表示性组件，希望它的数据可以使用React &lt;code&gt;props&lt;/code&gt; 传递：</target>
        </trans-unit>
        <trans-unit id="e900738915d1e4581c9270c11ba6798344ecd067" translate="yes" xml:space="preserve">
          <source>We specify that the &lt;code&gt;name&lt;/code&gt; field of a list is required and must be a string.</source>
          <target state="translated">我们指定列表的 &lt;code&gt;name&lt;/code&gt; 字段为必填字段，并且必须为字符串。</target>
        </trans-unit>
        <trans-unit id="0d948a30fbdb6a91c67d14d6ea8e2059f0606020" translate="yes" xml:space="preserve">
          <source>We specify that the &lt;code&gt;userId&lt;/code&gt;, which is optional, must be a string that looks like the ID of a user document.</source>
          <target state="translated">我们指定 &lt;code&gt;userId&lt;/code&gt; （这是可选的）必须是类似于用户文档ID的字符串。</target>
        </trans-unit>
        <trans-unit id="2c7009320b4b09a7b757eb5e9991434d7ab9353a" translate="yes" xml:space="preserve">
          <source>We specify the &lt;code&gt;incompleteCount&lt;/code&gt; is a number, which on insertion is set to &lt;code&gt;0&lt;/code&gt; if not otherwise specified.</source>
          <target state="translated">我们指定 &lt;code&gt;incompleteCount&lt;/code&gt; 是一个数字，如果没有另外指定，则在插入时将其设置为 &lt;code&gt;0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8b0a9a9ca4488500814241d40e6704df4afbb214" translate="yes" xml:space="preserve">
          <source>We suggest a convention of naming it &lt;code&gt;instance&lt;/code&gt; in these contexts and assigning it at the top of every relevant helper. For instance:</source>
          <target state="translated">我们建议在这些上下文中命名 &lt;code&gt;instance&lt;/code&gt; 并在每个相关帮助程序的顶部分配它的约定。例如：</target>
        </trans-unit>
        <trans-unit id="d5b5bece7791c8df87066cd2677025526a69426c" translate="yes" xml:space="preserve">
          <source>We suggest using the &lt;code&gt;this.userId&lt;/code&gt; property on the context of Methods and publications instead, and passing that around through function arguments to wherever you need it.</source>
          <target state="translated">我们建议 &lt;code&gt;this.userId&lt;/code&gt; 在方法和发布的上下文中使用this.userId属性，并将其通过函数参数传递到所需的位置。</target>
        </trans-unit>
        <trans-unit id="2134562a7ab740161619af149b6d6f5e9287480e" translate="yes" xml:space="preserve">
          <source>We then import both of these files in &lt;code&gt;imports/startup/client/index.js&lt;/code&gt;:</source>
          <target state="translated">然后，我们将这两个文件都 &lt;code&gt;imports/startup/client/index.js&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="713e02ddecbd33150bd5374b9b6500732e8e90ac" translate="yes" xml:space="preserve">
          <source>We think you&amp;rsquo;re going to love the new module system, and that&amp;rsquo;s why it will be installed by default for all new apps and packages. Nevertheless, the &lt;code&gt;modules&lt;/code&gt; package is totally optional, and it will be up to you to add it to existing apps and/or packages.</source>
          <target state="translated">我们认为您会喜欢新的模块系统，因此所有默认的新应用程序和软件包都将默认安装该模块系统。不过， &lt;code&gt;modules&lt;/code&gt; 包是完全可选的，您可以将其添加到现有的应用程序和/或包中。</target>
        </trans-unit>
        <trans-unit id="6e5c0c4ca46f3b35eb14ccc928b3173e72e033c7" translate="yes" xml:space="preserve">
          <source>We use &lt;code&gt;this.subscribe()&lt;/code&gt; as opposed to &lt;code&gt;Meteor.subscribe()&lt;/code&gt; so that the component automatically keeps track of when the subscriptions are ready. We can use this information in our HTML template with the built-in &lt;code&gt;{{Template.subscriptionsReady}}&lt;/code&gt; helper or within helpers using &lt;code&gt;instance.subscriptionsReady()&lt;/code&gt;.</source>
          <target state="translated">我们使用 &lt;code&gt;this.subscribe()&lt;/code&gt; 而不是 &lt;code&gt;Meteor.subscribe()&lt;/code&gt; ,以便组件自动跟踪订阅准备就绪的时间。我们可以在HTML模板中使用内置的 &lt;code&gt;{{Template.subscriptionsReady}}&lt;/code&gt; 帮助器，也可以在使用 &lt;code&gt;instance.subscriptionsReady()&lt;/code&gt; 的帮助器中使用此信息。</target>
        </trans-unit>
        <trans-unit id="b95d2deaaa1a25dfab3069f2e104db52c56127d7" translate="yes" xml:space="preserve">
          <source>We use an &lt;code&gt;autorun()&lt;/code&gt; here to ensure that the data context is re-validated whenever it changes.</source>
          <target state="translated">我们在这里使用 &lt;code&gt;autorun()&lt;/code&gt; 来确保数据上下文每当更改时都会重新验证。</target>
        </trans-unit>
        <trans-unit id="a138c75af5bcc2abd919d1721259883355592db2" translate="yes" xml:space="preserve">
          <source>We&amp;rsquo;d increment that &lt;code&gt;requestedTodos&lt;/code&gt; variable when the user clicks &amp;ldquo;load more&amp;rdquo; (or perhaps just when they scroll to the bottom of the page).</source>
          <target state="translated">当用户单击&amp;ldquo;加载更多&amp;rdquo;时（或者也许当他们滚动到页面底部时），我们将增加 &lt;code&gt;requestedTodos&lt;/code&gt; 变量。</target>
        </trans-unit>
        <trans-unit id="55d04dac8ac69741203406a4991907b155caf924" translate="yes" xml:space="preserve">
          <source>We&amp;rsquo;ll be referring to Meteor Methods with a capital M to differentiate them from class methods in JavaScript.</source>
          <target state="translated">我们将使用大写的M表示流星方法，以将其与JavaScript中的类方法区分开。</target>
        </trans-unit>
        <trans-unit id="21e8fa969226cc6b287da3fa1545b1c42f850b79" translate="yes" xml:space="preserve">
          <source>We&amp;rsquo;ll talk about how to handle the &lt;code&gt;ValidationError&lt;/code&gt; in the section on forms below.</source>
          <target state="translated">我们将在下面表格的部分中讨论如何处理 &lt;code&gt;ValidationError&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8a9cf8923f77b7e959c683403bee0429e2620088" translate="yes" xml:space="preserve">
          <source>We&amp;rsquo;ve already seen an example of using an &lt;code&gt;autorun&lt;/code&gt; to re-subscribe when the (reactive) arguments to a subscription change. It&amp;rsquo;s worth digging in a little more detail to understand what happens in this scenario.</source>
          <target state="translated">我们已经看过一个示例，该示例使用 &lt;code&gt;autorun&lt;/code&gt; 重新订阅的（响应）参数发生更改时重新订阅。值得更详细地了解这种情况下会发生什么。</target>
        </trans-unit>
        <trans-unit id="16c8fdb82d60c63756a3eca4d4896792eaca52e2" translate="yes" xml:space="preserve">
          <source>We&amp;rsquo;ve seen examples above of failures which you don&amp;rsquo;t really anticipate will happen. It&amp;rsquo;s difficult and inefficient to defend against every possible error, however unlikely. However, there are some catch-all patterns that you can use for unexpected failures.</source>
          <target state="translated">我们在上面已经看到了一些您无法真正预期会发生的失败示例。防范每一个可能的错误（无论多么不可能）都是困难且效率低下的。但是，您可以使用一些通用模式来处理意外故障。</target>
        </trans-unit>
        <trans-unit id="2a92ee0dd1acece00ece044f08379b324d51bfcb" translate="yes" xml:space="preserve">
          <source>We&amp;rsquo;ve seen one example of running tests on the command line, using our &lt;code&gt;meteor npm run chimp-test&lt;/code&gt; mode.</source>
          <target state="translated">我们已经看到了使用 &lt;code&gt;meteor npm run chimp-test&lt;/code&gt; 模式在命令行上运行测试的一个示例。</target>
        </trans-unit>
        <trans-unit id="898763cf37250e72b399888e07b50bfa8f05c41d" translate="yes" xml:space="preserve">
          <source>We&amp;rsquo;ve seen that &lt;code&gt;{{todo.title}}&lt;/code&gt; accesses the &lt;code&gt;title&lt;/code&gt; property of the &lt;code&gt;todo&lt;/code&gt; item on the current data context. Additionally, &lt;code&gt;..&lt;/code&gt; accesses the parent data context (rarely a good idea), &lt;code&gt;list.todos.[0]&lt;/code&gt; accesses the first element of the &lt;code&gt;todos&lt;/code&gt; array on &lt;code&gt;list&lt;/code&gt;.</source>
          <target state="translated">我们已经看到 &lt;code&gt;{{todo.title}}&lt;/code&gt; 在当前数据上下文中访问 &lt;code&gt;todo&lt;/code&gt; 项的 &lt;code&gt;title&lt;/code&gt; 属性。另外， &lt;code&gt;..&lt;/code&gt; 访问父数据上下文（这是一个好主意）， &lt;code&gt;list.todos.[0]&lt;/code&gt; 访问 &lt;code&gt;list&lt;/code&gt; 上 &lt;code&gt;todos&lt;/code&gt; 数组的第一个元素。</target>
        </trans-unit>
        <trans-unit id="c5b6d6d89517eff4ce180cea4ab387ae48e094cb" translate="yes" xml:space="preserve">
          <source>WebStorm</source>
          <target state="translated">WebStorm</target>
        </trans-unit>
        <trans-unit id="3987502f114b2d73c65ea1910a97319cbcd2d663" translate="yes" xml:space="preserve">
          <source>WebStorm provides &lt;a href=&quot;https://www.jetbrains.com/webstorm/help/eslint.html&quot;&gt;these instructions for using ESLint&lt;/a&gt;. After you install the ESLint Node packages and set up your &lt;code&gt;package.json&lt;/code&gt;, just enable ESLint and click &amp;ldquo;Apply&amp;rdquo;. You can configure how WebStorm should find your &lt;code&gt;.eslintrc&lt;/code&gt; file, but on my machine it worked without any changes. It also automatically suggested switching to &amp;ldquo;JSX Harmony&amp;rdquo; syntax highlighting.</source>
          <target state="translated">WebStorm提供了&lt;a href=&quot;https://www.jetbrains.com/webstorm/help/eslint.html&quot;&gt;有关使用ESLint的这些说明&lt;/a&gt;。在安装ESLint Node软件包并设置 &lt;code&gt;package.json&lt;/code&gt; 之后，只需启用ESLint并单击&amp;ldquo;应用&amp;rdquo;即可。您可以配置WebStorm如何找到 &lt;code&gt;.eslintrc&lt;/code&gt; 文件，但是在我的机器上它没有任何更改即可工作。它还自动建议切换到&amp;ldquo; JSX Harmony&amp;rdquo;语法突出显示。</target>
        </trans-unit>
        <trans-unit id="9f52bca7c0abe7f1f7a60dc34b7755de6d6f44c7" translate="yes" xml:space="preserve">
          <source>What Cordova is, and how Meteor integrates with it to build mobile apps from a single codebase</source>
          <target state="translated">什么是Cordova,以及Meteor如何与之集成,从单一代码库中构建移动应用。</target>
        </trans-unit>
        <trans-unit id="715ab59402756713b9ed0fe2d54d30ea472c0019" translate="yes" xml:space="preserve">
          <source>What Methods are in Meteor and how they work in detail.</source>
          <target state="translated">流星里有哪些方法,以及它们的详细工作原理。</target>
        </trans-unit>
        <trans-unit id="9a09cbaa3e5001ee250ebcf3fbc1b17367963e57" translate="yes" xml:space="preserve">
          <source>What React is, and why you would consider using it with Meteor.</source>
          <target state="translated">React是什么,以及为什么你会考虑将它与Meteor一起使用。</target>
        </trans-unit>
        <trans-unit id="31e67532c2b2157c0135287af2681e37e1f7e285" translate="yes" xml:space="preserve">
          <source>What URL will users use to access your site? You&amp;rsquo;ll probably need to register a domain name with a domain registrar, and setup DNS entries to point to the site (this will depend on how you deploy, see below). If you deploy to Galaxy, you can use a &lt;code&gt;x.meteorapp.com&lt;/code&gt; or &lt;code&gt;x.eu.meteorapp.com&lt;/code&gt; domain while you are testing the app. &lt;a href=&quot;http://galaxy-guide.meteor.com/custom-domains.html#meteorapp-subdomain&quot;&gt;Learn more about Galaxy domains &amp;raquo;&lt;/a&gt;</source>
          <target state="translated">用户将使用什么URL访问您的网站？您可能需要向域名注册商注册一个域名，然后设置DNS条目以指向该站点（这取决于您的部署方式，请参见下文）。如果部署到Galaxy，则可以在测试应用程序时使用 &lt;code&gt;x.meteorapp.com&lt;/code&gt; 或 &lt;code&gt;x.eu.meteorapp.com&lt;/code&gt; 域。&lt;a href=&quot;http://galaxy-guide.meteor.com/custom-domains.html#meteorapp-subdomain&quot;&gt;进一步了解Galaxy网域&amp;raquo;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="544add104824be68ef99321d0e73b9989fa0ae13" translate="yes" xml:space="preserve">
          <source>What about PhoneGap?</source>
          <target state="translated">PhoneGap怎么样?</target>
        </trans-unit>
        <trans-unit id="06b2c135c0cd5ad382fc2e7bf514ca2bf8828d46" translate="yes" xml:space="preserve">
          <source>What does it do?</source>
          <target state="translated">它的作用是什么?</target>
        </trans-unit>
        <trans-unit id="f95f4783f2f2b3eff2616770feda65452eb7647b" translate="yes" xml:space="preserve">
          <source>What does this mean for my app?</source>
          <target state="translated">这对我的应用意味着什么?</target>
        </trans-unit>
        <trans-unit id="55de40f75713a616f3cba615561b4859feadc075" translate="yes" xml:space="preserve">
          <source>What features in core Meteor enable user accounts</source>
          <target state="translated">核心流星有哪些功能可以实现用户账户</target>
        </trans-unit>
        <trans-unit id="cf5a4a470f538810dd11bc651364103fba56fdd4" translate="yes" xml:space="preserve">
          <source>What happens when you subscribe to a publication.</source>
          <target state="translated">当你订阅一份出版物时会发生什么。</target>
        </trans-unit>
        <trans-unit id="edfc6c13c446747ffa72398d80b34ea405b37951" translate="yes" xml:space="preserve">
          <source>What is Meteor?</source>
          <target state="translated">什么是流星?</target>
        </trans-unit>
        <trans-unit id="de11c908015e5632f5ff9ac616134a4c477aa358" translate="yes" xml:space="preserve">
          <source>What is a &lt;a href=&quot;https://github.com/meteor/validation-error/&quot;&gt;&lt;code&gt;ValidationError&lt;/code&gt;&lt;/a&gt;? It&amp;rsquo;s a special error that is used in Meteor to indicate a user-input based error in modifying a collection. Typically, the details on a &lt;code&gt;ValidationError&lt;/code&gt; are used to mark up a form with information about what inputs don&amp;rsquo;t match the schema. In the &lt;a href=&quot;methods#validation-error&quot;&gt;methods article&lt;/a&gt;, we&amp;rsquo;ll see more about how this works.</source>
          <target state="translated">什么是&lt;a href=&quot;https://github.com/meteor/validation-error/&quot;&gt; &lt;code&gt;ValidationError&lt;/code&gt; &lt;/a&gt;？这是Meteor中使用的一种特殊错误，用于指示在修改集合时基于用户输入的错误。通常， &lt;code&gt;ValidationError&lt;/code&gt; 的详细信息用于标记表单，其中包含有关哪些输入与架构不匹配的信息。在&lt;a href=&quot;methods#validation-error&quot;&gt;方法文章中&lt;/a&gt;，我们将详细了解其工作原理。</target>
        </trans-unit>
        <trans-unit id="b0ba3f66b14221964be28f5e6c73ddedb926e0b6" translate="yes" xml:space="preserve">
          <source>What is a Method?</source>
          <target state="translated">什么是方法?</target>
        </trans-unit>
        <trans-unit id="f3e027b7a31d82e4e8522767297430b9af264920" translate="yes" xml:space="preserve">
          <source>What is a view?</source>
          <target state="translated">什么是风景?</target>
        </trans-unit>
        <trans-unit id="fc8f340ba3180856db78ed055154bc9a7c919310" translate="yes" xml:space="preserve">
          <source>What is often confusing to people is that setting &lt;code&gt;App.accessRule&lt;/code&gt; is not enough to allow access to remote resources. While domain whitelisting allows the client to control which domains it can connect to, additional restrictions based on the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Security/Same-origin_policy&quot;&gt;same-origin policy&lt;/a&gt; also apply. By default, web views will not allow cross-origin HTTP requests initiated from JavaScript for instance, so you will likely run into this when using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest&quot;&gt;&lt;code&gt;XMLHttpRequest&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">人们经常感到困惑的是，设置 &lt;code&gt;App.accessRule&lt;/code&gt; 不足以允许访问远程资源。虽然域白名单允许客户端控制其可以连接到的域，但基于&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Security/Same-origin_policy&quot;&gt;同源策略的&lt;/a&gt;其他限制也适用。默认情况下，Web视图将不允许例如从JavaScript发起的跨域HTTP请求，因此在使用&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest&quot;&gt; &lt;code&gt;XMLHttpRequest&lt;/code&gt; &lt;/a&gt;时可能会遇到这种情况。</target>
        </trans-unit>
        <trans-unit id="88608282acddee0150ea84bcd103b1021fe7d3b7" translate="yes" xml:space="preserve">
          <source>What is the Meteor Guide?</source>
          <target state="translated">什么是《流星指南》?</target>
        </trans-unit>
        <trans-unit id="a2240a5c4149dd89ccaa9b23d0c17cc195a959a5" translate="yes" xml:space="preserve">
          <source>What port will your app be served from?</source>
          <target state="translated">您的应用程序将从哪个端口提供服务?</target>
        </trans-unit>
        <trans-unit id="50770b62e3fd36707eaf858b692bb5a3872e5843" translate="yes" xml:space="preserve">
          <source>What publications and subscriptions are in the Meteor platform.</source>
          <target state="translated">流星平台有哪些出版物和订阅。</target>
        </trans-unit>
        <trans-unit id="ff5f4edfa3dd8e1d191a8ad001b5cea180637582" translate="yes" xml:space="preserve">
          <source>What that means is that the publication will simply ensure the set of data matching that query is available to any client that subscribes to it. In this case, all lists that do not have a &lt;code&gt;userId&lt;/code&gt; setting. So the collection named &lt;code&gt;Lists&lt;/code&gt; on the client will have all of the public lists that are available in the server collection named &lt;code&gt;Lists&lt;/code&gt; while that subscription is open. In this particular example in the Todos application, the subscription is initialized when the app starts and never stopped, but a later section will talk about &lt;a href=&quot;data-loading#patterns&quot;&gt;subscription life cycle&lt;/a&gt;.</source>
          <target state="translated">这意味着发布将仅确保与该查询匹配的数据集可用于订阅该查询的任何客户端。在这种情况下，所有没有 &lt;code&gt;userId&lt;/code&gt; 设置的列表。因此，在该订阅打开时，客户端上名为 &lt;code&gt;Lists&lt;/code&gt; 的集合将具有所有名为 &lt;code&gt;Lists&lt;/code&gt; 的服务器集合中可用的公共列表。在Todos应用程序的此特定示例中，订阅在应用程序启动且从未停止时被初始化，但是稍后的部分将讨论&lt;a href=&quot;data-loading#patterns&quot;&gt;订阅生命周期&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="178359646449ea378ff0c1d727db3433d713dd22" translate="yes" xml:space="preserve">
          <source>What this means in practice is that you should place your subscription calls in &lt;em&gt;components&lt;/em&gt;. In Blaze, it&amp;rsquo;s best to do this in the &lt;code&gt;onCreated()&lt;/code&gt; callback:</source>
          <target state="translated">实际上，这意味着您应该将订阅调用放置在&lt;em&gt;组件中&lt;/em&gt;。在Blaze中，最好在 &lt;code&gt;onCreated()&lt;/code&gt; 回调中执行此操作：</target>
        </trans-unit>
        <trans-unit id="667fca675b8ab923a3ef4072ae1f669cd0892f21" translate="yes" xml:space="preserve">
          <source>What this means is if users are accessing the site whilst the update is being prepared, it will likely go out of date! Also, a bulk update will lock the entire collection while it is being applied, which can cause a significant blip in your user experience if it takes a while. For these reason, you often need to stop your server and let your users know you are performing maintenance while the update is happening.</source>
          <target state="translated">这意味着,如果用户在准备更新时访问网站,它很可能会过时!同时,批量更新会在应用时锁定整个集合,如果需要一段时间,会造成用户体验的重大突变。此外,批量更新会在应用时锁定整个集合,如果需要一段时间,会给你的用户体验带来很大的突变。基于这些原因,您经常需要停止服务器,并让用户知道您正在进行更新时的维护。</target>
        </trans-unit>
        <trans-unit id="cf6f95008e4d708b2c30094d082910c3ad04f398" translate="yes" xml:space="preserve">
          <source>What this means is in general, when changing subscriptions, there&amp;rsquo;ll be a period where you are &lt;em&gt;over-subscribed&lt;/em&gt; and there is more data on the client than you strictly asked for. This is one very important reason why you should always fetch the same data that you have subscribed to (don&amp;rsquo;t &amp;ldquo;over-fetch&amp;rdquo;).</source>
          <target state="translated">这通常意味着什么，在更改订阅时，会有一段时间您被&lt;em&gt;超额订阅，&lt;/em&gt;并且客户端上的数据超过了您严格要求的数量。这是一个非常重要的原因，为什么您应该始终获取已订阅的相同数据（不要&amp;ldquo;过度获取&amp;rdquo;）。</target>
        </trans-unit>
        <trans-unit id="b1be9fc5a65038c6e36b8bb490dced9b113cd634" translate="yes" xml:space="preserve">
          <source>What this means is that now every time we call &lt;code&gt;Lists.insert()&lt;/code&gt;, &lt;code&gt;Lists.update()&lt;/code&gt;, &lt;code&gt;Lists.upsert()&lt;/code&gt;, first our document or modifier will be automatically checked against the schema (in subtly different ways depending on the exact mutator).</source>
          <target state="translated">这意味着现在我们每次调用 &lt;code&gt;Lists.insert()&lt;/code&gt; ， &lt;code&gt;Lists.update()&lt;/code&gt; ， &lt;code&gt;Lists.upsert()&lt;/code&gt; 时，首先将根据模式自动检查我们的文档或修饰符（根据确切的变量，以不同的方式进行检查） ）。</target>
        </trans-unit>
        <trans-unit id="c74d3a339f6c99b15c158895f93ba6675398a76b" translate="yes" xml:space="preserve">
          <source>What this means is that whenever a user visits a URL of the form &lt;code&gt;/lists/X&lt;/code&gt;, the &lt;code&gt;Lists.show&lt;/code&gt; route will kick in, triggering the &lt;code&gt;BlazeLayout&lt;/code&gt; call to set the &lt;code&gt;main&lt;/code&gt; property of the &lt;code&gt;App_body&lt;/code&gt; component.</source>
          <target state="translated">这意味着每当用户访问格式为 &lt;code&gt;/lists/X&lt;/code&gt; 的URL时， &lt;code&gt;Lists.show&lt;/code&gt; 路由就会加入，触发 &lt;code&gt;BlazeLayout&lt;/code&gt; 调用来设置 &lt;code&gt;App_body&lt;/code&gt; 组件的 &lt;code&gt;main&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="18c7ac556ec60f6a1cc0e2bcef204f3d2f1d3c95" translate="yes" xml:space="preserve">
          <source>What this means is that you can write tests in files with a certain filename pattern and know they&amp;rsquo;ll not be included in normal builds of your app. When your app runs in test mode, those files will be loaded (and nothing else will), and they can import the modules you want to test. As we&amp;rsquo;ll see this is ideal for &lt;a href=&quot;#unit-testing&quot;&gt;unit tests&lt;/a&gt; and &lt;a href=&quot;#simple-integration-test&quot;&gt;simple integration tests&lt;/a&gt;.</source>
          <target state="translated">这意味着您可以在具有特定文件名模式的文件中编写测试，并知道这些测试将不会包含在您的应用程序的常规版本中。当您的应用程序在测试模式下运行时，这些文件将被加载（其他都不会加载），并且它们可以导入您要测试的模块。正如我们将看到的，这是&lt;a href=&quot;#unit-testing&quot;&gt;单元测试&lt;/a&gt;和&lt;a href=&quot;#simple-integration-test&quot;&gt;简单集成测试的&lt;/a&gt;理想选择。</target>
        </trans-unit>
        <trans-unit id="e40a8e983b9457978d17d73e419798dfcd21447b" translate="yes" xml:space="preserve">
          <source>What to consider before you deploy a Meteor application.</source>
          <target state="translated">在部署Meteor应用之前,需要考虑哪些问题。</target>
        </trans-unit>
        <trans-unit id="463789f77c1d0ba0ebb09ae7f72244ff76885ddc" translate="yes" xml:space="preserve">
          <source>What to consider when defining your collection&amp;rsquo;s schema.</source>
          <target state="translated">定义集合的架构时应考虑的因素。</target>
        </trans-unit>
        <trans-unit id="36ee5edbedf8b9faf73b594f9f41959e17494e04" translate="yes" xml:space="preserve">
          <source>What you can do to create a good mobile user experience for your app</source>
          <target state="translated">如何为你的应用创造良好的移动用户体验?</target>
        </trans-unit>
        <trans-unit id="10ae24728db36499c26d2f6ef6407bc10f9e6817" translate="yes" xml:space="preserve">
          <source>What&amp;rsquo;s special about &lt;code&gt;Session&lt;/code&gt; is that it&amp;rsquo;s reactive. If you call &lt;a href=&quot;#session_get&quot;&gt;&lt;code&gt;Session.get&lt;/code&gt;&lt;/a&gt;&lt;code&gt;('currentList')&lt;/code&gt; from inside a template, the template will automatically be rerendered whenever &lt;a href=&quot;#session_set&quot;&gt;&lt;code&gt;Session.set&lt;/code&gt;&lt;/a&gt;&lt;code&gt;('currentList', x)&lt;/code&gt; is called.</source>
          <target state="translated">&lt;code&gt;Session&lt;/code&gt; 的特别之处在于它具有反应性。如果您从模板内部调用&lt;a href=&quot;#session_get&quot;&gt; &lt;code&gt;Session.get&lt;/code&gt; &lt;/a&gt; &lt;code&gt;('currentList')&lt;/code&gt; ，则每当&lt;a href=&quot;#session_set&quot;&gt; &lt;code&gt;Session.set&lt;/code&gt; &lt;/a&gt; &lt;code&gt;('currentList', x)&lt;/code&gt; 时，模板都会自动重新呈现。</target>
        </trans-unit>
        <trans-unit id="f287be46c03e5394c7dd4a50098d9da1a48027da" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;allowed&lt;/code&gt; is false, the exception describing why the login failed. It will be a &lt;code&gt;Meteor.Error&lt;/code&gt; for failures reported to the user (such as invalid password), and can be a another kind of exception for internal errors.</source>
          <target state="translated">如果 &lt;code&gt;allowed&lt;/code&gt; 为false，则描述登录失败原因的异常。报告给用户的失败（例如无效密码）将是 &lt;code&gt;Meteor.Error&lt;/code&gt; ，并且可能是内部错误的另一种异常。</target>
        </trans-unit>
        <trans-unit id="94185962f76bf2ba5a4988c8db706a34d1ffefd5" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;meteor shell&lt;/code&gt; is executed in an application directory where a server is already running, it connects to the server and starts an interactive shell for evaluating server-side code.</source>
          <target state="translated">当 &lt;code&gt;meteor shell&lt;/code&gt; 在已经运行服务器的应用程序目录中执行时，它将连接到服务器并启动用于评估服务器端代码的交互式外壳。</target>
        </trans-unit>
        <trans-unit id="a8016f520d55dbc8815070e60f070a3ca3d6f04c" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;true&lt;/code&gt;, stringifies keys in an object in sorted order.</source>
          <target state="translated">如果为 &lt;code&gt;true&lt;/code&gt; ，则按排序顺序对对象中的键进行字符串化。</target>
        </trans-unit>
        <trans-unit id="e26ec741bd2757df67895e056248e865029ae19f" translate="yes" xml:space="preserve">
          <source>When Method simulations and server-side executions run, Meteor tracks any resulting changes to the database. This is what lets the Meteor data system roll back the changes from the Method simulation and replace them with the actual writes from the server. Without this automatic database tracking, it would be very difficult to implement a correct Optimistic UI system.</source>
          <target state="translated">当方法模拟和服务器端执行运行时,Meteor会跟踪任何由此产生的数据库变化。这就是让Meteor数据系统回滚Method模拟的变化,并将其替换为服务器的实际写入。如果没有这种自动数据库跟踪,就很难实现一个正确的Optimistic UI系统。</target>
        </trans-unit>
        <trans-unit id="3ab492bf401f85f1af3b44c3f0028684c11fe831" translate="yes" xml:space="preserve">
          <source>When a &lt;code&gt;Blaze.View&lt;/code&gt; is constructed by calling the constructor, no hooks are fired and no rendering is performed. In particular, the View is not yet considered to be &amp;ldquo;created.&amp;rdquo; Only when the View is actually used, by a call to &lt;code&gt;Blaze.render&lt;/code&gt; or &lt;code&gt;Blaze.toHTML&lt;/code&gt; or by inclusion in another View, is it &amp;ldquo;created,&amp;rdquo; right before it is rendered for the first time. When a View is created, its &lt;code&gt;.parentView&lt;/code&gt; is set if appropriate, and then the &lt;code&gt;onViewCreated&lt;/code&gt; hook is fired. The term &amp;ldquo;unrendered View&amp;rdquo; means a newly constructed View that has not been &amp;ldquo;created&amp;rdquo; or rendered.</source>
          <target state="translated">当 &lt;code&gt;Blaze.View&lt;/code&gt; 是通过调用构造函数构造，没有挂钩被解雇，并没有进行渲染。特别是，尚未将视图视为&amp;ldquo;已创建&amp;rdquo;。仅在实际使用视图时，通过调用 &lt;code&gt;Blaze.render&lt;/code&gt; 或 &lt;code&gt;Blaze.toHTML&lt;/code&gt; 或将其包含在另一个视图中，才在第一次渲染该视图之前对其进行&amp;ldquo;创建&amp;rdquo;。创建视图时，将在适当时设置其 &lt;code&gt;.parentView&lt;/code&gt; ，然后触发 &lt;code&gt;onViewCreated&lt;/code&gt; 挂钩。术语&amp;ldquo;未渲染的视图&amp;rdquo;是指尚未&amp;ldquo;创建&amp;rdquo;或渲染的新构建的视图。</target>
        </trans-unit>
        <trans-unit id="b643bcdc133f357c91b741fb04c842fa7c6cc282" translate="yes" xml:space="preserve">
          <source>When a Method call fails because the arguments are of the wrong type, it&amp;rsquo;s good to throw a &lt;code&gt;ValidationError&lt;/code&gt;. This works just like &lt;code&gt;Meteor.Error&lt;/code&gt;, but is a custom constructor that enforces a standard error format that can be read by different form and validation libraries. In particular, if you are calling this Method from a form, throwing a &lt;code&gt;ValidationError&lt;/code&gt; will make it easy to display nice error messages next to particular fields in the form.</source>
          <target state="translated">当方法调用由于参数类型错误而失败时，最好抛出 &lt;code&gt;ValidationError&lt;/code&gt; 。这就像 &lt;code&gt;Meteor.Error&lt;/code&gt; 一样工作，但是它是一个自定义构造函数，用于强制执行标准错误格式，该格式可以由不同的表单和验证库读取。特别是，如果您是从表单中调用此方法，则抛出 &lt;code&gt;ValidationError&lt;/code&gt; 将使在表单中特定字段旁边显示漂亮的错误消息变得容易。</target>
        </trans-unit>
        <trans-unit id="6eac4758d2ad56c0b3a35a372dd96a644024d919" translate="yes" xml:space="preserve">
          <source>When a Method is called, it usually runs twice&amp;mdash;once on the client to simulate the result for Optimistic UI, and again on the server to make the actual change to the database. This means that if your Method throws an error, it will likely fail on the client &lt;em&gt;and&lt;/em&gt; the server. For this reason, &lt;code&gt;ValidatedMethod&lt;/code&gt; turns on undocumented option in Meteor to avoid calling the server-side implementation if the simulation throws an error.</source>
          <target state="translated">调用Method时，它通常运行两次，一次在客户端上模拟Optimistic UI的结果，然后在服务器上再次运行以对数据库进行实际更改。这意味着，如果您的方法抛出错误，则可能在客户端&lt;em&gt;和&lt;/em&gt;服务器上失败。因此， &lt;code&gt;ValidatedMethod&lt;/code&gt; 在Meteor中打开未记录的选项，以避免在模拟抛出错误时调用服务器端实现。</target>
        </trans-unit>
        <trans-unit id="f27358ca301a70e8e1ccb5fa9b7d2a60aa469862" translate="yes" xml:space="preserve">
          <source>When a client calls &lt;code&gt;insert&lt;/code&gt;, &lt;code&gt;update&lt;/code&gt;, or &lt;code&gt;remove&lt;/code&gt; on a collection, the collection&amp;rsquo;s &lt;code&gt;allow&lt;/code&gt; and &lt;a href=&quot;#deny&quot;&gt;&lt;code&gt;deny&lt;/code&gt;&lt;/a&gt; callbacks are called on the server to determine if the write should be allowed. If at least one &lt;code&gt;allow&lt;/code&gt; callback allows the write, and no &lt;code&gt;deny&lt;/code&gt; callbacks deny the write, then the write is allowed to proceed.</source>
          <target state="translated">当客户端在集合上调用 &lt;code&gt;insert&lt;/code&gt; ， &lt;code&gt;update&lt;/code&gt; 或 &lt;code&gt;remove&lt;/code&gt; 时，服务器上将调用集合的 &lt;code&gt;allow&lt;/code&gt; 和&lt;a href=&quot;#deny&quot;&gt; &lt;code&gt;deny&lt;/code&gt; &lt;/a&gt;回调以确定是否应允许写入。如果至少有一个 &lt;code&gt;allow&lt;/code&gt; 回调允许写入，并且没有 &lt;code&gt;deny&lt;/code&gt; 回调都拒绝写入，则允许进行写入。</target>
        </trans-unit>
        <trans-unit id="56be403b018a89e0c484b891df47aaacd74309ca" translate="yes" xml:space="preserve">
          <source>When a client tries to write to a collection, the Meteor server first checks the collection&amp;rsquo;s &lt;code&gt;deny&lt;/code&gt; rules. If none of them return true then it checks the collection&amp;rsquo;s &lt;code&gt;allow&lt;/code&gt; rules. Meteor allows the write only if no &lt;code&gt;deny&lt;/code&gt; rules return &lt;code&gt;true&lt;/code&gt; and at least one &lt;code&gt;allow&lt;/code&gt; rule returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">当客户端尝试写入集合时，Meteor服务器首先检查集合的 &lt;code&gt;deny&lt;/code&gt; 规则。如果它们都不返回true，则它将检查集合的 &lt;code&gt;allow&lt;/code&gt; 规则。流星仅在没有 &lt;code&gt;deny&lt;/code&gt; 规则返回 &lt;code&gt;true&lt;/code&gt; 并且至少一个 &lt;code&gt;allow&lt;/code&gt; 规则返回 &lt;code&gt;true&lt;/code&gt; 时才允许写入。</target>
        </trans-unit>
        <trans-unit id="5f8b1f29683741b82952b614a02a61f2a2762e94" translate="yes" xml:space="preserve">
          <source>When a file represents a single class or UI component, the file should be named the same as the thing it defines, with the same capitalization. So if you have a file that exports a class:</source>
          <target state="translated">当一个文件代表一个类或UI组件时,文件的名字应该和它所定义的东西一样,用同样的大写。所以,如果你有一个导出类的文件。</target>
        </trans-unit>
        <trans-unit id="3fc0dcffafb0edcd249b4653aefad9c49f2c13b3" translate="yes" xml:space="preserve">
          <source>When a login attempt is made, the registered validate login callbacks are called with a single argument, the attempt info object:</source>
          <target state="translated">当有登录尝试时,注册的验证登录回调会被调用,只有一个参数,即尝试信息对象。</target>
        </trans-unit>
        <trans-unit id="5a7528a272a181b1ee878bbb86f45267fce4bfde" translate="yes" xml:space="preserve">
          <source>When a template is invoked as a block helper, it can use &lt;code&gt;{{&amp;gt;
Template.contentBlock}}&lt;/code&gt; and &lt;code&gt;{{&amp;gt; Template.elseBlock}}&lt;/code&gt; to include the block content it was passed.</source>
          <target state="translated">当模板被用作块帮助器时，它可以使用 &lt;code&gt;{{&amp;gt; Template.contentBlock}}&lt;/code&gt; 和 &lt;code&gt;{{&amp;gt; Template.elseBlock}}&lt;/code&gt; 来包含已传递的块内容。</target>
        </trans-unit>
        <trans-unit id="6e11c12f80a228b870e13b0f35420176ab42d353" translate="yes" xml:space="preserve">
          <source>When accessing a REST API, you will sometimes run into a situation where you make two requests one after the other, but the results arrive out of order. Meteor&amp;rsquo;s underlying machinery makes sure this never happens with Methods. When multiple Method calls are received &lt;em&gt;from the same client&lt;/em&gt;, Meteor runs each Method to completion before starting the next one. If you need to disable this functionality for one particularly long-running Method, you can use &lt;a href=&quot;http://docs.meteor.com/#/full/method_unblock&quot;&gt;&lt;code&gt;this.unblock()&lt;/code&gt;&lt;/a&gt; to allow the next Method to run while the current one is still in progress. Also, since Meteor is based on Websockets instead of HTTP, all Method calls and results are guaranteed to arrive in the order they are sent. You can also pass a special option &lt;code&gt;wait: true&lt;/code&gt; to &lt;code&gt;Meteor.apply&lt;/code&gt; to wait to send a particular Method until all others have returned, and not send any other Methods until this one returns.</source>
          <target state="translated">访问REST API时，有时会遇到这样的情况：一个接一个地发出两个请求，但结果却乱序。流星的基础机制确保方法永远不会发生这种情况。当&lt;em&gt;从同一个客户端&lt;/em&gt;收到多个方法调用时，Meteor将在启动下一个方法之前运行每个方法。如果您需要为一个特别长时间运行的方法禁用此功能，则可以使用&lt;a href=&quot;http://docs.meteor.com/#/full/method_unblock&quot;&gt; &lt;code&gt;this.unblock()&lt;/code&gt; &lt;/a&gt;允许在当前方法仍在运行时运行下一个方法。另外，由于Meteor是基于Websockets而不是HTTP，因此，所有方法调用和结果均按其发送顺序得到保证。您还可以传递一个特殊的选项 &lt;code&gt;wait: true&lt;/code&gt; 对 &lt;code&gt;Meteor.apply&lt;/code&gt; 为true 等待发送一个特定的方法，直到所有其他方法都返回，然后再发送其他任何方法，直到该方法返回为止。</target>
        </trans-unit>
        <trans-unit id="cc1d86a3e890d7c741d73f68543dae5d85aa9eb3" translate="yes" xml:space="preserve">
          <source>When called from a reactive computation, &lt;code&gt;fetch&lt;/code&gt; registers dependencies on the matching documents.</source>
          <target state="translated">从反应式计算中调用时， &lt;code&gt;fetch&lt;/code&gt; 存会注册对匹配文档的依赖关系。</target>
        </trans-unit>
        <trans-unit id="58e295144f4aaf2770409551c2ad80911987a55e" translate="yes" xml:space="preserve">
          <source>When called from a reactive computation, &lt;code&gt;forEach&lt;/code&gt; registers dependencies on the matching documents.</source>
          <target state="translated">从反应式计算中调用时， &lt;code&gt;forEach&lt;/code&gt; 注册对匹配文档的依赖关系。</target>
        </trans-unit>
        <trans-unit id="6f02041312095e886de16679f31542a335300e54" translate="yes" xml:space="preserve">
          <source>When called from a reactive computation, &lt;code&gt;map&lt;/code&gt; registers dependencies on the matching documents.</source>
          <target state="translated">从反应式计算中调用时， &lt;code&gt;map&lt;/code&gt; 注册对匹配文档的依赖关系。</target>
        </trans-unit>
        <trans-unit id="e9f539f9880266d2ecf565aad972822b36ddb602" translate="yes" xml:space="preserve">
          <source>When calling &lt;code&gt;update&lt;/code&gt; or &lt;code&gt;remove&lt;/code&gt; Meteor will by default fetch the entire document &lt;code&gt;doc&lt;/code&gt; from the database. If you have large documents you may wish to fetch only the fields that are actually used by your functions. Accomplish this by setting &lt;code&gt;fetch&lt;/code&gt; to an array of field names to retrieve.</source>
          <target state="translated">默认情况下，调用 &lt;code&gt;update&lt;/code&gt; 或 &lt;code&gt;remove&lt;/code&gt; Meteor时，将从数据库中获取整个文档 &lt;code&gt;doc&lt;/code&gt; 。如果您有大型文档，则可能希望仅获取函数实际使用的字段。通过将 &lt;code&gt;fetch&lt;/code&gt; 设置为要检索的字段名称数组来实现此目的。</target>
        </trans-unit>
        <trans-unit id="a0b65295021601c6ad42cc39a2d2314775d836ef" translate="yes" xml:space="preserve">
          <source>When choosing a name for your npm package, be sure to follow the &lt;a href=&quot;https://docs.npmjs.com/files/package.json#name&quot;&gt;npm guidelines&lt;/a&gt;.</source>
          <target state="translated">为npm软件包选择名称时，请务必遵循&lt;a href=&quot;https://docs.npmjs.com/files/package.json#name&quot;&gt;npm准则&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cfa4e0f52e9f6b80996a3cf16bb74d5bb74947c4" translate="yes" xml:space="preserve">
          <source>When configuring OAuth login with a provider (such as Facebook or Google), Meteor lets you choose a popup- or redirect-based flow. In a popup-based flow, when a user logs in, they will be prompted to login at the provider in a popup window. In a redirect-based flow, the user&amp;rsquo;s whole browser window will be redirected to the login provider, and the window will redirect back to your app when the login is completed.</source>
          <target state="translated">通过提供商（例如Facebook或Google）配置OAuth登录时，Meteor允许您选择基于弹出式或重定向的流程。在基于弹出窗口的流程中，当用户登录时，系统会提示他们在弹出窗口中登录提供者。在基于重定向的流程中，用户的整个浏览器窗口将重定向到登录提供程序，登录完成后，该窗口将重定向回您的应用程序。</target>
        </trans-unit>
        <trans-unit id="87f834418b0a161bdb589ea60fb5bd499786edd6" translate="yes" xml:space="preserve">
          <source>When creating a new application Meteor installs the &lt;code&gt;meteor-node-stubs&lt;/code&gt; npm package to help provide this client browser compatibility. If you are upgrading an application to Meteor 1.3 you may have to run &lt;code&gt;meteor npm install --save meteor-node-stubs&lt;/code&gt; manually.</source>
          <target state="translated">在创建新应用程序时，Meteor将安装 &lt;code&gt;meteor-node-stubs&lt;/code&gt; npm软件包以帮助提供此客户端浏览器兼容性。如果要将应用程序升级到Meteor 1.3，则可能必须手动运行 &lt;code&gt;meteor npm install --save meteor-node-stubs&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="27641ba55976c03afe9ea728f7ce0b78ae1f8d99" translate="yes" xml:space="preserve">
          <source>When developing your application, Meteor starts a local MongoDB instance and automatically connects to it. In production, you must specify a &lt;code&gt;MONGO_URL&lt;/code&gt; environment variable pointing at your database in &lt;a href=&quot;https://docs.mongodb.com/manual/reference/connection-string&quot;&gt;the standard mongo connection string format&lt;/a&gt;.</source>
          <target state="translated">开发应用程序时，Meteor将启动本地MongoDB实例并自动连接到该实例。在生产中，您必须&lt;a href=&quot;https://docs.mongodb.com/manual/reference/connection-string&quot;&gt;以标准mongo连接字符串格式&lt;/a&gt;指定一个指向数据库的 &lt;code&gt;MONGO_URL&lt;/code&gt; 环境变量。</target>
        </trans-unit>
        <trans-unit id="e30bfad33e2b2ae9c262f7db9b189a3554c310b1" translate="yes" xml:space="preserve">
          <source>When evaluating a path, identifiers after the first are used to index into the object so far, like JavaScript&amp;rsquo;s &lt;code&gt;.&lt;/code&gt;. However, an error is never thrown when trying to index into a non-object or an undefined value.</source>
          <target state="translated">在评估路径时，第一个之后的标识符可用于索引到目前为止的对象，例如JavaScript的 &lt;code&gt;.&lt;/code&gt; 。但是，尝试索引到非对象或未定义的值时，永远不会引发错误。</target>
        </trans-unit>
        <trans-unit id="882ba392931740c858b2407f305d6e93fc1e7ea0" translate="yes" xml:space="preserve">
          <source>When finding users by email or username, make sure to use the case-insensitive functions provided by &lt;code&gt;accounts-password&lt;/code&gt;. See the &lt;a href=&quot;#case-sensitivity&quot;&gt;section about case-sensitivity&lt;/a&gt; for more details.</source>
          <target state="translated">通过电子邮件或用户名查找用户时，请确保使用 &lt;code&gt;accounts-password&lt;/code&gt; 提供的不区分大小写的功能。有关更多详细信息，请参见&lt;a href=&quot;#case-sensitivity&quot;&gt;关于区分大小写&lt;/a&gt;的部分。</target>
        </trans-unit>
        <trans-unit id="e10ddd866bca5fc9cd97d0055b5eaf3bcb365a1e" translate="yes" xml:space="preserve">
          <source>When importing CSS from a JavaScript file, that CSS is not bundled with the rest of the CSS processed with the Meteor Build tool, but instead is put in your app&amp;rsquo;s &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; tag inside &lt;code&gt;&amp;lt;style&amp;gt;...&amp;lt;/style&amp;gt;&lt;/code&gt; after the main concatenated CSS file.</source>
          <target state="translated">从JavaScript文件导入CSS时，该CSS不会与通过Meteor Build工具处理的其余CSS捆绑在一起，而是放在应用程序的 &lt;code&gt;&amp;lt;style&amp;gt;...&amp;lt;/style&amp;gt;&lt;/code&gt; 之后的 &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; 标记中。主级联CSS文件。</target>
        </trans-unit>
        <trans-unit id="9ba272358ce62b3d533a6e65c536acbb17af37cc" translate="yes" xml:space="preserve">
          <source>When it is known which user was attempting to login, the Meteor user object. This will always be present for successful logins.</source>
          <target state="translated">当知道是哪个用户在尝试登录时,Meteor用户对象。对于成功的登录,这个将一直存在。</target>
        </trans-unit>
        <trans-unit id="6ebd83497c9cd8d312f13faa3d8a564f068765a4" translate="yes" xml:space="preserve">
          <source>When run in asynchronous mode, the callback receives two arguments, &lt;code&gt;error&lt;/code&gt; and &lt;code&gt;result&lt;/code&gt;. The &lt;code&gt;error&lt;/code&gt; argument will contain an Error if the request fails in any way, including a network error, time-out, or an HTTP status code in the 400 or 500 range. In case of a 4xx/5xx HTTP status code, the &lt;code&gt;response&lt;/code&gt; property on &lt;code&gt;error&lt;/code&gt; matches the contents of the result object. When run in synchronous mode, either &lt;code&gt;result&lt;/code&gt; is returned from the function, or &lt;code&gt;error&lt;/code&gt; is thrown.</source>
          <target state="translated">在异步模式下运行时，回调函数将接收两个参数 &lt;code&gt;error&lt;/code&gt; 和 &lt;code&gt;result&lt;/code&gt; 。的 &lt;code&gt;error&lt;/code&gt; ，如果该请求以任何方式发生故障时，包括网络错误，超时，或在400或500的范围内的HTTP状态代码参数将包含错误。如果是4xx / 5xx HTTP状态代码，则 &lt;code&gt;error&lt;/code&gt; 的 &lt;code&gt;response&lt;/code&gt; 属性与结果对象的内容匹配。在同步模式下运行时，该 &lt;code&gt;result&lt;/code&gt; 将从函数返回，或者引发 &lt;code&gt;error&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4069c983e45cd40b231784c74934aa163775aa69" translate="yes" xml:space="preserve">
          <source>When running your bundled application in production mode, pass a string of JSON containing your settings with &lt;code&gt;METEOR_SETTINGS='{ &quot;server_only_setting&quot;: &quot;foo&quot;, &quot;public&quot;: { &quot;client_and_server_setting&quot;: &quot;bar&quot; } }'&lt;/code&gt;.</source>
          <target state="translated">在生产模式下运行捆绑的应用程序时，请传递一个包含您的设置的JSON字符串，并带有 &lt;code&gt;METEOR_SETTINGS='{ &quot;server_only_setting&quot;: &quot;foo&quot;, &quot;public&quot;: { &quot;client_and_server_setting&quot;: &quot;bar&quot; } }'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8e027ab875d838258980cd654c7ec4b4e385b577" translate="yes" xml:space="preserve">
          <source>When selecting a hosted MongoDB service for production it is important to assess the features that the service provides. Below is a nonexhaustive list of features to consider when selecting a service:</source>
          <target state="translated">当为生产选择一个托管的MongoDB服务时,评估该服务提供的功能很重要。以下是选择服务时需要考虑的非详尽的功能列表。</target>
        </trans-unit>
        <trans-unit id="492c2a03c639981f9d1af15676912f4ad0f5d4aa" translate="yes" xml:space="preserve">
          <source>When the argument to &lt;code&gt;#each&lt;/code&gt; changes, the DOM is always updated to reflect the new sequence, but it&amp;rsquo;s sometimes significant exactly how that is achieved. When the argument is a Meteor live cursor, the &lt;code&gt;#each&lt;/code&gt; has access to fine-grained updates to the sequence &amp;ndash; add, remove, move, and change callbacks &amp;ndash; and the items are all documents identified by unique ids. As long as the cursor itself remains constant (i.e. the query doesn&amp;rsquo;t change), it is very easy to reason about how the DOM will be updated as the contents of the cursor change. The rendered content for each document persists as long as the document is in the cursor, and when documents are re-ordered, the DOM is re-ordered.</source>
          <target state="translated">当 &lt;code&gt;#each&lt;/code&gt; 的参数更改时，DOM总是会更新以反映新的序列，但是有时确切地实现这一点很重要。当参数是Meteor实时游标时，＃ &lt;code&gt;#each&lt;/code&gt; 可以访问该序列的细粒度更新-添加，删除，移动和更改回调-这些项都是由唯一ID标识的文档。只要游标本身保持不变（即查询不变），就很容易推断出随着游标内容的变化将如何更新DOM。只要文档位于光标中，每个文档的呈现内容都会保留，并且当文档重新排序时，DOM也将重新排序。</target>
        </trans-unit>
        <trans-unit id="8fbb7af2f0221aafa1416badc1879abd3bc344ed" translate="yes" xml:space="preserve">
          <source>When the connection came in over an HTTP transport (such as with Meteor&amp;rsquo;s default SockJS implementation), this field contains whitelisted HTTP headers.</source>
          <target state="translated">当连接通过HTTP传输（例如Meteor的默认SockJS实现）进入时，此字段包含列入白名单的HTTP标头。</target>
        </trans-unit>
        <trans-unit id="8acdb696c1c490744ce20c0c102152308898e4a9" translate="yes" xml:space="preserve">
          <source>When the route is matched, the &lt;code&gt;action&lt;/code&gt; method executes, and you can perform any actions you need to. The &lt;code&gt;name&lt;/code&gt; property of the route is optional, but will let us refer to this route more conveniently later on.</source>
          <target state="translated">路由匹配后，将执行 &lt;code&gt;action&lt;/code&gt; 方法，您可以执行所需的任何操作。路由的 &lt;code&gt;name&lt;/code&gt; 属性是可选的，但是稍后我们将更方便地引用该路由。</target>
        </trans-unit>
        <trans-unit id="8210de7978053be9a270f9aa7fe5907b39613d78" translate="yes" xml:space="preserve">
          <source>When the server receives the message, it executes the Method code again on the server. The client side version was a simulation that will be rolled back later, but this time it&amp;rsquo;s the real version that is writing to the actual database. Running the actual Method logic on the server is crucial because the server is a trusted environment where we know that security-critical code will run the way we expect.</source>
          <target state="translated">服务器收到消息后，将在服务器上再次执行方法代码。客户端版本是一个模拟，稍后将回滚，但是这次是写入实际数据库的真实版本。在服务器上运行实际的Method逻辑至关重要，因为服务器是一个受信任的环境，在这里我们知道安全性至关重要的代码将按照我们期望的方式运行。</target>
        </trans-unit>
        <trans-unit id="f7db065fe4a71159b3171ab13a66fdd9ec3d26f9" translate="yes" xml:space="preserve">
          <source>When the server was not able to complete the user&amp;rsquo;s desired action because of a known condition, you should throw a descriptive &lt;code&gt;Meteor.Error&lt;/code&gt; object to the client. In the Todos example app, we use these to report situations where the current user is not authorized to complete a certain action, or where the action is not allowed within the app - for example, deleting the last public list.</source>
          <target state="translated">如果服务器由于已知条件而无法完成用户所需的操作，则应向客户端抛出一个描述性的 &lt;code&gt;Meteor.Error&lt;/code&gt; 对象。在Todos示例应用程序中，我们使用它们来报告以下情况：当前用户无权完成某项操作，或者该应用程序内不允许执行该操作-例如，删除最后一个公共列表。</target>
        </trans-unit>
        <trans-unit id="c48850747410c5cd72c5141a583d2b76dd92d83a" translate="yes" xml:space="preserve">
          <source>When the user receives the email and clicks the link inside, their web browser will take them to your app. Now, you need to be able to identify these special links and act appropriately. If you haven&amp;rsquo;t customized the link URL, then you can use some built-in callbacks to identify when the app is in the middle of an email flow.</source>
          <target state="translated">当用户收到电子邮件并单击其中的链接时，他们的Web浏览器会将其带到您的应用程序。现在，您需要能够识别这些特殊链接并采取适当措施。如果您尚未自定义链接URL，则可以使用一些内置的回调来识别应用程序何时处于电子邮件流的中间。</target>
        </trans-unit>
        <trans-unit id="bebc959d84e2f00c57251e00b09a3f3446960da1" translate="yes" xml:space="preserve">
          <source>When the user submits the form, you need to call the appropriate function to commit their change to the database. Each of these functions takes the new value and the token you got from the event in the previous step.</source>
          <target state="translated">当用户提交表单时,你需要调用适当的函数将他们的更改提交到数据库中。每一个函数都需要新的值和上一步从事件中得到的标记。</target>
        </trans-unit>
        <trans-unit id="dd0550e6771d8dd1264af2e577d690cdd386714d" translate="yes" xml:space="preserve">
          <source>When the user visits the link in this email, the callback registered with &lt;a href=&quot;#Accounts-onEmailVerificationLink&quot;&gt;&lt;code&gt;Accounts.onEmailVerificationLink&lt;/code&gt;&lt;/a&gt; will be called.</source>
          <target state="translated">当用户访问此电子邮件中的链接时，将调用在&lt;a href=&quot;#Accounts-onEmailVerificationLink&quot;&gt; &lt;code&gt;Accounts.onEmailVerificationLink&lt;/code&gt; 中&lt;/a&gt;注册的回调。</target>
        </trans-unit>
        <trans-unit id="3fe6b169f202a235d83bf081bf38e17e80961870" translate="yes" xml:space="preserve">
          <source>When the user visits the link in this email, the callback registered with &lt;a href=&quot;#Accounts-onEnrollmentLink&quot;&gt;&lt;code&gt;Accounts.onEnrollmentLink&lt;/code&gt;&lt;/a&gt; will be called.</source>
          <target state="translated">当用户访问此电子邮件中的链接时，将调用在&lt;a href=&quot;#Accounts-onEnrollmentLink&quot;&gt; &lt;code&gt;Accounts.onEnrollmentLink&lt;/code&gt; 中&lt;/a&gt;注册的回调。</target>
        </trans-unit>
        <trans-unit id="b1f9800212499cd4c2d741d3128152fb4fb34086" translate="yes" xml:space="preserve">
          <source>When the user visits the link in this email, the callback registered with &lt;a href=&quot;#Accounts-onResetPasswordLink&quot;&gt;&lt;code&gt;AccountsClient#onResetPasswordLink&lt;/code&gt;&lt;/a&gt; will be called.</source>
          <target state="translated">当用户访问此电子邮件中的链接时，将调用在&lt;a href=&quot;#Accounts-onResetPasswordLink&quot;&gt; &lt;code&gt;AccountsClient#onResetPasswordLink&lt;/code&gt; 中&lt;/a&gt;注册的回调。</target>
        </trans-unit>
        <trans-unit id="cb509c883e02823449ddb0acf8ee526e4860d02e" translate="yes" xml:space="preserve">
          <source>When to use Atmosphere packages</source>
          <target state="translated">何时使用Atmosphere软件包</target>
        </trans-unit>
        <trans-unit id="10cf50d586f68e33e97072be418db1f683520cb8" translate="yes" xml:space="preserve">
          <source>When to use npm packages</source>
          <target state="translated">何时使用npm包</target>
        </trans-unit>
        <trans-unit id="db85db92954475a7fc399432a4837ce50c526540" translate="yes" xml:space="preserve">
          <source>When using &lt;code&gt;meteor run&lt;/code&gt;, server-side logs will be printed in the terminal as usual. In addition, running on an Android device or emulator will print a subset of the logs to that same terminal (these logs also include &lt;code&gt;console&lt;/code&gt; logging calls made from client-side code).</source>
          <target state="translated">使用 &lt;code&gt;meteor run&lt;/code&gt; 时，将照常在终端中打印服务器端日志。另外，在Android设备或仿真器上运行时，会将日志的一部分打印到同一终端（这些日志还包括从客户端代码发出的 &lt;code&gt;console&lt;/code&gt; 日志调用）。</target>
        </trans-unit>
        <trans-unit id="447ad09c0d1fdc3a32797ee25868519024416f2c" translate="yes" xml:space="preserve">
          <source>When using Flow Router, the simplest way to display different views on the page for different URLs is to use the complementary Blaze Layout package. First, make sure you have the Blaze Layout package installed:</source>
          <target state="translated">在使用Flow Router时,要在页面上针对不同的URL显示不同的视图,最简单的方法就是使用配套的Blaze Layout包。首先,确保您已经安装了Blaze Layout包。</target>
        </trans-unit>
        <trans-unit id="2caa7f06023c191d78ffd7293a3abe576369f2d1" translate="yes" xml:space="preserve">
          <source>When using React Router in Meteor, you can follow roughly the &lt;a href=&quot;routing&quot;&gt;same principles&lt;/a&gt; as when using Flow Router, but you should also consider the idioms outlined in React Router&amp;rsquo;s own &lt;a href=&quot;https://github.com/ReactTraining/react-router&quot;&gt;documentation&lt;/a&gt;.</source>
          <target state="translated">在Meteor中使用React Router时，您可以遵循&lt;a href=&quot;routing&quot;&gt;与&lt;/a&gt;使用Flow Router时大致相同的原则，但是您还应该考虑React Router自己的&lt;a href=&quot;https://github.com/ReactTraining/react-router&quot;&gt;文档中&lt;/a&gt;概述的惯用法。</target>
        </trans-unit>
        <trans-unit id="ebf776e4e40a3817b024a4aac7bc6c6a3c060b26" translate="yes" xml:space="preserve">
          <source>When using the &lt;code&gt;oauth-encryption&lt;/code&gt; package, the 16 byte key using to encrypt sensitive account credentials in the database, encoded in base64. This option may only be specifed on the server. See packages/oauth-encryption/README.md for details.</source>
          <target state="translated">使用 &lt;code&gt;oauth-encryption&lt;/code&gt; 软件包时，16字节密钥用于对数据库中的敏感帐户凭据进行加密，以base64编码。此选项只能在服务器上指定。有关详细信息，请参见packages / oauth-encryption / README.md。</target>
        </trans-unit>
        <trans-unit id="9920294db4ac77a19f6718fbfede0bcf365fd961" translate="yes" xml:space="preserve">
          <source>When using the data in the sub-component, it&amp;rsquo;s a lot clearer what you are accessing; &lt;code&gt;{{todo.title}}&lt;/code&gt; is clearer than &lt;code&gt;{{title}}&lt;/code&gt;.</source>
          <target state="translated">当使用子组件中的数据时，您正在访问的内容将更加清晰。 &lt;code&gt;{{todo.title}}&lt;/code&gt; 比 &lt;code&gt;{{title}}&lt;/code&gt; 更清晰。</target>
        </trans-unit>
        <trans-unit id="b6422a7af30f2af34e460106ecd1faa6548b81ec" translate="yes" xml:space="preserve">
          <source>When we connect to the test instance in a browser, we want to render a testing UI rather than our app UI, so the &lt;code&gt;mocha-web-reporter&lt;/code&gt; package will hide any UI of our application and overlay it with its own. However the app continues to behave as normal, so we are able to route around and check the correct data is loaded.</source>
          <target state="translated">当我们在浏览器中连接到测试实例时，我们想要呈现一个测试UI而不是我们的应用程序UI，因此 &lt;code&gt;mocha-web-reporter&lt;/code&gt; 包将隐藏我们应用程序的任何UI并将其覆盖。但是，该应用仍会继续正常运行，因此我们能够进行路由并检查是否加载了正确的数据。</target>
        </trans-unit>
        <trans-unit id="ffd82d12b6baa0c0a350e98ccef3e1e981c815c2" translate="yes" xml:space="preserve">
          <source>When we run our app in test mode, only our test files will be eagerly loaded. In particular, this means that in order to use our templates, we need to import them! In this test, we import &lt;code&gt;todos-item.js&lt;/code&gt;, which itself imports &lt;code&gt;todos.html&lt;/code&gt; (yes, you do need to import the HTML files of your Blaze templates!)</source>
          <target state="translated">当我们在测试模式下运行我们的应用程序时，将仅加载我们的测试文件。特别是，这意味着要使用我们的模板，我们需要导入它们！在此测试中，我们导入了 &lt;code&gt;todos-item.js&lt;/code&gt; ，它本身也导入了 &lt;code&gt;todos.html&lt;/code&gt; （是的，您确实需要导入Blaze模板的HTML文件！）</target>
        </trans-unit>
        <trans-unit id="bb3f56c6bf039b669f547e48fd37ff5bf90e1987" translate="yes" xml:space="preserve">
          <source>When we subscribe to this publication on the client, we can provide this argument via the &lt;code&gt;Meteor.subscribe()&lt;/code&gt; call:</source>
          <target state="translated">当我们在客户端上订阅此出版物时，可以通过 &lt;code&gt;Meteor.subscribe()&lt;/code&gt; 调用提供此参数：</target>
        </trans-unit>
        <trans-unit id="d95cd1d03e58d68d9f86955dfe1815fe2185dc62" translate="yes" xml:space="preserve">
          <source>When writing a package, CoffeeScript-defined variables can be exported like any other variable (see &lt;a href=&quot;../api/packagejs&quot;&gt;Package.js&lt;/a&gt;). Exporting a variable pulls it up to package scope, meaning that it will be visible to all of the code in your app or package (both &lt;code&gt;.js&lt;/code&gt; and &lt;code&gt;.coffee&lt;/code&gt; files).</source>
          <target state="translated">编写包时，可以像其他任何变量一样导出CoffeeScript定义的变量（请参见&lt;a href=&quot;../api/packagejs&quot;&gt;Package.js&lt;/a&gt;）。导出变量会将其拉至包范围，这意味着它对于您的应用程序或包中的所有代码（ &lt;code&gt;.js&lt;/code&gt; 和 &lt;code&gt;.coffee&lt;/code&gt; 文件）都是可见的。</target>
        </trans-unit>
        <trans-unit id="aca05652e4e1ecf05f4402596047105617cd4ca3" translate="yes" xml:space="preserve">
          <source>When you add a type to EJSON, Meteor will be able to use that type in:</source>
          <target state="translated">当你在EJSON中添加一个类型时,Meteor将能够在中使用该类型。</target>
        </trans-unit>
        <trans-unit id="7b4c334a6d801637b4f898196fc3e2b6976be319" translate="yes" xml:space="preserve">
          <source>When you are developing a new npm package for your app, there are a couple methods for including the package in your app:</source>
          <target state="translated">当你为你的应用程序开发一个新的npm包时,有几种方法可以将该包包含在你的应用程序中。</target>
        </trans-unit>
        <trans-unit id="e3a935a965367d36d877014522bf6f55e86477f3" translate="yes" xml:space="preserve">
          <source>When you are running an app in production, it&amp;rsquo;s vitally important that you keep tabs on the performance of your application and ensure it is running smoothly.</source>
          <target state="translated">在生产环境中运行应用程序时，至关重要的一点是，密切关注应用程序的性能并确保其运行顺畅。</target>
        </trans-unit>
        <trans-unit id="f42b81db271dfd032a9fab7a5ff47683174f70ac" translate="yes" xml:space="preserve">
          <source>When you are running your app on multiple servers or containers, it&amp;rsquo;s not a good idea to shut down all of the servers at once and then start them all back up again. This will result in more downtime than necessary, and will cause a huge spike in CPU usage when all of your clients reconnect again at the same time. To alleviate this, Galaxy stops and re-starts containers one by one during deployment. There will be a time period during which some containers are running the old version and some the new version, as users are migrated incrementally to the new version of your app.</source>
          <target state="translated">当您在多个服务器或容器上运行您的应用程序时，一次关闭所有服务器然后重新启动所有服务器不是一个好主意。这将导致不必要的停机时间，并且当所有客户端同时再次重新连接时，将导致CPU使用率的剧增。为了缓解这种情况，Galaxy会在部署期间逐个停止并重新启动容器。在一段时间内，随着用户逐步迁移到应用程序的新版本，一些容器将运行旧版本，而某些容器将运行新版本。</target>
        </trans-unit>
        <trans-unit id="5a4baba2cbc9c468159936fd9a8223205cd4c9fe" translate="yes" xml:space="preserve">
          <source>When you are setting up event maps in your JS files, you need to &amp;lsquo;select&amp;rsquo; the element in the template that the event attaches to. Rather than using the same CSS class names that are used to style the elements, it&amp;rsquo;s better practice to use classnames that are specifically added for those event maps. A reasonable convention is a class starting with &lt;code&gt;js-&lt;/code&gt; to indicate it is used by the JavaScript. For instance &lt;code&gt;.js-todo-add&lt;/code&gt; above.</source>
          <target state="translated">在JS文件中设置事件映射时，需要在事件附加到的模板中&amp;ldquo;选择&amp;rdquo;元素。与其使用与样式元素相同的CSS类名称，不如使用专门为这些事件映射添加的类名称，这是更好的做法。一个合理的约定是一个以 &lt;code&gt;js-&lt;/code&gt; 开头的类，指示它已被JavaScript使用。例如上面的 &lt;code&gt;.js-todo-add&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="effe82c59d4faf6b5ea70030b1fa9c7eedadc2bf" translate="yes" xml:space="preserve">
          <source>When you call a Method, any errors thrown by it will be returned in the callback. At this point, you should identify which error type it is and display the appropriate message to the user. In this case, it is unlikely that the Method will throw a &lt;code&gt;ValidationError&lt;/code&gt; or an internal server error, so we will only handle the unauthorized error:</source>
          <target state="translated">调用Method时，引发的任何错误都将在回调中返回。此时，您应该确定错误类型并向用户显示适当的消息。在这种情况下，该方法不太可能引发 &lt;code&gt;ValidationError&lt;/code&gt; 或内部服务器错误，因此我们将仅处理未授权的错误：</target>
        </trans-unit>
        <trans-unit id="075d7307f843533a02cf438e14f642882d9eef4b" translate="yes" xml:space="preserve">
          <source>When you create a collection on the server:</source>
          <target state="translated">当你在服务器上创建一个集合时。</target>
        </trans-unit>
        <trans-unit id="3a2f52564d5b5f97fb1595e7f01037f0a1268735" translate="yes" xml:space="preserve">
          <source>When you deploy your Meteor server, you need a &lt;code&gt;MONGO_URL&lt;/code&gt; that points to your MongoDB database. You can either use a hosted MongoDB service or set up and run your own MongoDB server. We recommend using a hosted service, as the time saved and peace of mind are usually worth the higher monthly cost. In either case, the database should be hosted in the same region as the Meteor server (for lower latency). For example if your app is hosted on Galaxy in &lt;code&gt;us-east-1&lt;/code&gt; (on AWS), then you could create a database on &lt;a href=&quot;https://www.compose.io&quot;&gt;Compose&lt;/a&gt; in &lt;code&gt;AWS us-east-1&lt;/code&gt; or on &lt;a href=&quot;https://amazonlightsail.com/&quot;&gt;Amazon Lightsail&lt;/a&gt; in &lt;code&gt;us-east-1&lt;/code&gt;.</source>
          <target state="translated">部署Meteor服务器时，需要一个指向MongoDB数据库的 &lt;code&gt;MONGO_URL&lt;/code&gt; 。您可以使用托管的MongoDB服务，也可以设置并运行自己的MongoDB服务器。我们建议使用托管服务，因为节省时间和省心通常值得每月支付较高的费用。无论哪种情况，数据库都应与Meteor服务器托管在同一区域中（以降低延迟）。例如，如果您的应用程序在银河托管 &lt;code&gt;us-east-1&lt;/code&gt; （在AWS），那么你可以创建一个数据库，&lt;a href=&quot;https://www.compose.io&quot;&gt;撰写&lt;/a&gt;在 &lt;code&gt;AWS us-east-1&lt;/code&gt; 或&lt;a href=&quot;https://amazonlightsail.com/&quot;&gt;亚马逊Lightsail&lt;/a&gt;在 &lt;code&gt;us-east-1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e378e0f29233b9950fe4bbf47b108a785efccb3a" translate="yes" xml:space="preserve">
          <source>When you have a login system for your app based on user emails, that opens up the possibility for email-based account flows. The common thing between all of these workflows is that they involve sending a unique link to the user&amp;rsquo;s email address, which does something special when it is clicked. Let&amp;rsquo;s look at some common examples that Meteor&amp;rsquo;s &lt;code&gt;accounts-password&lt;/code&gt; package supports out of the box:</source>
          <target state="translated">当您有一个基于用户电子邮件的应用程序登录系统时，这就为基于电子邮件的帐户流打开了可能性。所有这些工作流程之间的共同之处在于，它们涉及到发送指向用户电子邮件地址的唯一链接，该链接在单击时会做一些特别的事情。让我们来看一下Meteor的 &lt;code&gt;accounts-password&lt;/code&gt; 软件包支持的一些常见示例：</target>
        </trans-unit>
        <trans-unit id="5429c6e3d582f717eeddd636edc9fea3e29e508a" translate="yes" xml:space="preserve">
          <source>When you have an error that doesn&amp;rsquo;t need to be reported to the client, but is internal to the server, throw a regular JavaScript error object. This will be reported to the client as a totally opaque internal server error with no details.</source>
          <target state="translated">当您遇到不需要向客户端报告但属于服务器内部的错误时，请抛出常规JavaScript错误对象。这将作为完全不透明的内部服务器错误（没有详细信息）报告给客户端。</target>
        </trans-unit>
        <trans-unit id="ca3e447bb0be51e49d4dd5990564409fa5ec9ad4" translate="yes" xml:space="preserve">
          <source>When you insert documents into Minimongo from the client-side simulation of a Method, the &lt;code&gt;_id&lt;/code&gt; field of each document is a random string. When the Method call is executed on the server, the IDs are generated again before being inserted into the database. If it were implemented naively, it could mean that the IDs generated on the server are different, which would cause undesirable flickering and re-renders in the UI when the Method simulation was rolled back and replaced with the server data. But this is not the case in Meteor!</source>
          <target state="translated">从方法的客户端模拟将文档插入Minimongo时，每个文档的 &lt;code&gt;_id&lt;/code&gt; 字段都是随机字符串。在服务器上执行Method调用时，将在将ID插入数据库之前再次生成ID。如果天真地实施它，可能意味着服务器上生成的ID是不同的，这将导致在方法模拟回滚并替换为服务器数据时在UI中引起不希望的闪烁和重新渲染。但这不是流星中的情况！</target>
        </trans-unit>
        <trans-unit id="7d9263ed2bf4140536268b6c3e7022a85b39f5b7" translate="yes" xml:space="preserve">
          <source>When you render a template, the callbacks added with &lt;a href=&quot;templates#Template-onCreated&quot;&gt;&lt;code&gt;onCreated&lt;/code&gt;&lt;/a&gt; are invoked immediately, before evaluating the content of the template. The callbacks added with &lt;a href=&quot;templates#Template-onRendered&quot;&gt;&lt;code&gt;onRendered&lt;/code&gt;&lt;/a&gt; are invoked after the View is rendered and inserted into the DOM.</source>
          <target state="translated">呈现模板时，在评估模板内容之前，将立即调用用&lt;a href=&quot;templates#Template-onCreated&quot;&gt; &lt;code&gt;onCreated&lt;/code&gt; &lt;/a&gt;添加的回调。呈现View并将其插入DOM后，将调用随&lt;a href=&quot;templates#Template-onRendered&quot;&gt; &lt;code&gt;onRendered&lt;/code&gt; &lt;/a&gt;添加的回调。</target>
        </trans-unit>
        <trans-unit id="63d91b96e4d54f69991586c52d485193e6bbc8b1" translate="yes" xml:space="preserve">
          <source>When you run &lt;code&gt;meteor&lt;/code&gt;, the tool starts up, and you should leave it running continuously while developing your app. The tool automatically detects any relevant file changes and recompiles the necessary changes, restarting your client or server environment if needed.</source>
          <target state="translated">运行 &lt;code&gt;meteor&lt;/code&gt; 时，该工具将启动，并且在开发应用程序时应使其连续运行。该工具会自动检测任何相关的文件更改并重新编译必要的更改，并在需要时重新启动客户端或服务器环境。</target>
        </trans-unit>
        <trans-unit id="64bf9292535e3b8451e0fb5305e909f4e97ef965" translate="yes" xml:space="preserve">
          <source>When you run a &lt;code&gt;meteor test&lt;/code&gt; command, you must provide a &lt;code&gt;--driver-package&lt;/code&gt; argument. A test driver is a mini-application that runs in place of your app and runs each of your defined tests, whilst reporting the results in some kind of user interface.</source>
          <target state="translated">运行 &lt;code&gt;meteor test&lt;/code&gt; 命令时，必须提供 &lt;code&gt;--driver-package&lt;/code&gt; 参数。测试驱动程序是一个微型应用程序，它代替您的应用程序运行，并运行您定义的每个测试，同时通过某种用户界面报告结果。</target>
        </trans-unit>
        <trans-unit id="7e15c9215e768e8b1599afa9a242a231d9b85781" translate="yes" xml:space="preserve">
          <source>When you run this app, the &lt;code&gt;moment&lt;/code&gt; library will be imported on both the client and the server, and both consoles will log output similar to: &lt;code&gt;Today at 7:51 PM&lt;/code&gt;. Our hope is that the possibility of installing Node modules directly within an app will reduce the need for npm wrapper packages such as &lt;a href=&quot;https://atmospherejs.com/momentjs/moment&quot;&gt;https://atmospherejs.com/momentjs/moment&lt;/a&gt;.</source>
          <target state="translated">当您运行此应用程序时， &lt;code&gt;moment&lt;/code&gt; 库将同时在客户端和服务器上导入，并且两个控制台都将记录类似于以下内容的输出： &lt;code&gt;Today at 7:51 PM&lt;/code&gt; 。我们希望直接在应用程序内安装Node模块的可能性将减少对npm包装程序包（如&lt;a href=&quot;https://atmospherejs.com/momentjs/moment&quot;&gt;https://atmospherejs.com/momentjs/moment）的需求&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b750063f9a82be04c802b6c666fed345436303e4" translate="yes" xml:space="preserve">
          <source>When you subscribe to a record set, it tells the server to send records to the client. The client stores these records in local &lt;a href=&quot;#mongo_collection&quot;&gt;Minimongo collections&lt;/a&gt;, with the same name as the &lt;code&gt;collection&lt;/code&gt; argument used in the publish handler&amp;rsquo;s &lt;a href=&quot;#publish_added&quot;&gt;&lt;code&gt;added&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#publish_changed&quot;&gt;&lt;code&gt;changed&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#publish_removed&quot;&gt;&lt;code&gt;removed&lt;/code&gt;&lt;/a&gt; callbacks. Meteor will queue incoming records until you declare the &lt;a href=&quot;#mongo_collection&quot;&gt;&lt;code&gt;Mongo.Collection&lt;/code&gt;&lt;/a&gt; on the client with the matching collection name.</source>
          <target state="translated">订阅记录集时，它告诉服务器将记录发送到客户端。客户端将这些记录存储在本地&lt;a href=&quot;#mongo_collection&quot;&gt;Minimongo集合中&lt;/a&gt;，其名称与发布处理程序的&lt;a href=&quot;#publish_added&quot;&gt; &lt;code&gt;added&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#publish_changed&quot;&gt; &lt;code&gt;changed&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#publish_removed&quot;&gt; &lt;code&gt;removed&lt;/code&gt; &lt;/a&gt;回调中使用的 &lt;code&gt;collection&lt;/code&gt; 参数同名。流星将对传入记录进行排队，直到您在客户端上使用匹配的集合名称声明&lt;a href=&quot;#mongo_collection&quot;&gt; &lt;code&gt;Mongo.Collection&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d9425b3b84e765f4cf9bc568175f5b6505bc2a81" translate="yes" xml:space="preserve">
          <source>When you subscribe to data in Meteor, it does not become instantly available on the client. Typically the user will need to wait for a few hundred milliseconds, or as long as a few seconds (depending on the connection speed), for the data to arrive. This is especially noticeable when the app is first starting up or you move between screens that are displaying completely new data.</source>
          <target state="translated">当你在Meteor中订阅数据时,数据并不会在客户端上立即可用。通常情况下,用户需要等待几百毫秒,或者长达几秒钟(取决于连接速度),数据才会到达。这在应用程序首次启动或你在显示全新数据的屏幕之间移动时尤其明显。</target>
        </trans-unit>
        <trans-unit id="9b6aadd05c8758e946dfc4c5a1ac49b4c8d09851" translate="yes" xml:space="preserve">
          <source>When you use &lt;code&gt;api.mainModule&lt;/code&gt;, the exports of the main module are exposed globally as &lt;code&gt;Package['my-modular-package']&lt;/code&gt;, along with any symbols exported by &lt;code&gt;api.export&lt;/code&gt;, and thus become available to any code that imports the package. In other words, the main module gets to decide what value of &lt;code&gt;Foo&lt;/code&gt; will be exported by &lt;code&gt;api.export&lt;/code&gt;, as well as providing other properties that can be explicitly imported from the package:</source>
          <target state="translated">使用 &lt;code&gt;api.mainModule&lt;/code&gt; 时，主模块的导出与 &lt;code&gt;api.export&lt;/code&gt; 导出的所有符号一起作为 &lt;code&gt;Package['my-modular-package']&lt;/code&gt; 全局公开，因此可用于导入该包的任何代码。换句话说，主模块决定 &lt;code&gt;api.export&lt;/code&gt; 将导出 &lt;code&gt;Foo&lt;/code&gt; 的值，以及提供可以从包中显式导入的其他属性：</target>
        </trans-unit>
        <trans-unit id="d6d3ff73d329befa7ea0114cfee7069682286880" translate="yes" xml:space="preserve">
          <source>When you use &lt;code&gt;mdg:validated-method&lt;/code&gt; with &lt;code&gt;aldeed:simple-schema&lt;/code&gt; as demonstrated above, this type of error is thrown for you.</source>
          <target state="translated">当您将 &lt;code&gt;mdg:validated-method&lt;/code&gt; 与 &lt;code&gt;aldeed:simple-schema&lt;/code&gt; 一起使用时，会向您抛出这种类型的错误。</target>
        </trans-unit>
        <trans-unit id="eb36f2c4e343f6bc6a8eb9498b2bd7152beb9fec" translate="yes" xml:space="preserve">
          <source>When you write a template as &lt;code&gt;&amp;lt;template name=&quot;foo&quot;&amp;gt; ... &amp;lt;/template&amp;gt;&lt;/code&gt; in an HTML file in your app, Meteor generates a &amp;ldquo;template object&amp;rdquo; named &lt;code&gt;Template.foo&lt;/code&gt;. Note that template name cannot contain hyphens and other special characters.</source>
          <target state="translated">当您在应用程序的HTML文件中以 &lt;code&gt;&amp;lt;template name=&quot;foo&quot;&amp;gt; ... &amp;lt;/template&amp;gt;&lt;/code&gt; 编写模板时，Meteor会生成一个名为 &lt;code&gt;Template.foo&lt;/code&gt; 的&amp;ldquo;模板对象&amp;rdquo; 。请注意，模板名称不能包含连字符和其他特殊字符。</target>
        </trans-unit>
        <trans-unit id="844477ae54747e0c57dd9f37bba03e8419088085" translate="yes" xml:space="preserve">
          <source>When you write to the database on the client (&lt;a href=&quot;#insert&quot;&gt;&lt;code&gt;insert&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#update&quot;&gt;&lt;code&gt;update&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#remove&quot;&gt;&lt;code&gt;remove&lt;/code&gt;&lt;/a&gt;), the command is executed locally immediately, and, simultaneously, it&amp;rsquo;s sent to the server and executed there too. This happens via &lt;a href=&quot;#meteor_methods&quot;&gt;stubs&lt;/a&gt;, because writes are implemented as methods.</source>
          <target state="translated">当您在客户端上写入数据库（&lt;a href=&quot;#insert&quot;&gt; &lt;code&gt;insert&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#update&quot;&gt; &lt;code&gt;update&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#remove&quot;&gt; &lt;code&gt;remove&lt;/code&gt; &lt;/a&gt;）时，该命令将立即在本地执行，同时，该命令还将发送到服务器并在此执行。这是通过&lt;a href=&quot;#meteor_methods&quot;&gt;存根&lt;/a&gt;发生的，因为写操作是作为方法实现的。</target>
        </trans-unit>
        <trans-unit id="e30d39386b8b030b289f7e5ecc23282b8048246d" translate="yes" xml:space="preserve">
          <source>When your app is run in test mode, it is initialized with a clean test database.</source>
          <target state="translated">当您的应用程序在测试模式下运行时,它将以一个干净的测试数据库进行初始化。</target>
        </trans-unit>
        <trans-unit id="649b28c9fbe77cf6f86e691b286ea66818c0038d" translate="yes" xml:space="preserve">
          <source>When your package starts in test mode, rather than loading the &lt;code&gt;onUse&lt;/code&gt; block, Meteor loads the &lt;code&gt;onTest&lt;/code&gt; block:</source>
          <target state="translated">当您的程序包以测试模式启动时，而不是加载 &lt;code&gt;onUse&lt;/code&gt; 块，Meteor会加载 &lt;code&gt;onTest&lt;/code&gt; 块：</target>
        </trans-unit>
        <trans-unit id="cda390f79e08ffb82360ffcae7aeb2a7d890946c" translate="yes" xml:space="preserve">
          <source>When, on the server, you write to a collection which has a specified &lt;code&gt;connection&lt;/code&gt; to another server, it sends the corresponding method to the other server and receives the changed values back from it over DDP. Unlike on the client, it does not execute the write locally first.</source>
          <target state="translated">在服务器上，当您写入具有到另一台服务器的指定 &lt;code&gt;connection&lt;/code&gt; 的集合时，该集合将相应的方法发送到另一台服务器，并通过DDP从其返回更改的值。与客户端不同，它不首先在本地执行写入。</target>
        </trans-unit>
        <trans-unit id="a3844a1398efe433ab3efe9372cc7cace53bae03" translate="yes" xml:space="preserve">
          <source>Where to store secret keys in development and production.</source>
          <target state="translated">开发和生产中的秘钥存放在哪里。</target>
        </trans-unit>
        <trans-unit id="c542b6c203cb13a4b0b0025a01d43cd78467d609" translate="yes" xml:space="preserve">
          <source>Where to subscribe on the client and in which templates.</source>
          <target state="translated">在客户端哪里订阅,在哪些模板中订阅。</target>
        </trans-unit>
        <trans-unit id="685ec8ab1ce73fc82fd8fe77efd7972951288ad9" translate="yes" xml:space="preserve">
          <source>Whether this login is allowed and will be successful (if not aborted by any of the validateLoginAttempt callbacks). False if the login will not succeed (for example, an invalid password or the login was aborted by a previous validateLoginAttempt callback).</source>
          <target state="translated">这个登录是否被允许,是否会成功(如果没有被任何一个validateLoginAttempt回调中止)。如果登录不成功,则为False(例如,密码无效或登录被之前的validateLoginAttempt回调中止)。</target>
        </trans-unit>
        <trans-unit id="f0faaf49cc3d3da7633316ffa5af7fe5d0ac1847" translate="yes" xml:space="preserve">
          <source>Which &lt;a href=&quot;#requestpermissions&quot;&gt;permissions&lt;/a&gt; to request from the user for each external service.</source>
          <target state="translated">其&lt;a href=&quot;#requestpermissions&quot;&gt;权限&lt;/a&gt;从用户的每个外部服务请求。</target>
        </trans-unit>
        <trans-unit id="5ec679ad7c4b83ccb85da84e8c8d841be2487999" translate="yes" xml:space="preserve">
          <source>Which fields to display in the user creation form. One of '&lt;code&gt;USERNAME_AND_EMAIL&lt;/code&gt;', '&lt;code&gt;USERNAME_AND_OPTIONAL_EMAIL&lt;/code&gt;', '&lt;code&gt;USERNAME_ONLY&lt;/code&gt;', or '&lt;code&gt;EMAIL_ONLY&lt;/code&gt;' (default).</source>
          <target state="translated">在用户创建表单中显示哪些字段。&amp;ldquo; &lt;code&gt;USERNAME_AND_EMAIL&lt;/code&gt; &amp;rdquo;，&amp;ldquo; &lt;code&gt;USERNAME_AND_OPTIONAL_EMAIL&lt;/code&gt; &amp;rdquo;，&amp;ldquo; &lt;code&gt;USERNAME_ONLY&lt;/code&gt; &amp;rdquo;或&amp;ldquo; &lt;code&gt;EMAIL_ONLY&lt;/code&gt; &amp;rdquo;之一（默认）。</target>
        </trans-unit>
        <trans-unit id="d73eb73aec594862bbf285f820336ad2d1337c61" translate="yes" xml:space="preserve">
          <source>Which port the app should listen on, for example: &lt;code&gt;PORT=3030&lt;/code&gt;</source>
          <target state="translated">应用程序应侦听哪个端口，例如： &lt;code&gt;PORT=3030&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9380602b0bab772adf758776ce0f5c894e6be36a" translate="yes" xml:space="preserve">
          <source>Which style guide we recommend for JavaScript code</source>
          <target state="translated">对于JavaScript代码,我们推荐哪种样式指南</target>
        </trans-unit>
        <trans-unit id="9accc8f889604a6fe19e76e94779c30b642fbe4d" translate="yes" xml:space="preserve">
          <source>While &lt;code&gt;allow&lt;/code&gt; and &lt;code&gt;deny&lt;/code&gt; make it easy to get started building an app, it&amp;rsquo;s harder than it seems to write secure &lt;code&gt;allow&lt;/code&gt; and &lt;code&gt;deny&lt;/code&gt; rules. We recommend that developers avoid &lt;code&gt;allow&lt;/code&gt; and &lt;code&gt;deny&lt;/code&gt;, and switch directly to custom methods once they are ready to remove &lt;code&gt;insecure&lt;/code&gt; mode from their app. See &lt;a href=&quot;https://guide.meteor.com/security.html#allow-deny&quot;&gt;the Meteor Guide on security&lt;/a&gt; for more details.</source>
          <target state="translated">虽然 &lt;code&gt;allow&lt;/code&gt; and &lt;code&gt;deny&lt;/code&gt; 使开始构建应用程序变得容易，但它似乎比编写安全的 &lt;code&gt;allow&lt;/code&gt; and &lt;code&gt;deny&lt;/code&gt; 规则要困难。我们建议开发人员避免使用 &lt;code&gt;allow&lt;/code&gt; 和 &lt;code&gt;deny&lt;/code&gt; ，一旦准备好从应用程序中删除 &lt;code&gt;insecure&lt;/code&gt; 模式，请直接切换到自定义方法。有关更多详细信息，请参阅&lt;a href=&quot;https://guide.meteor.com/security.html#allow-deny&quot;&gt;《流星指南》&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="274222bfd655a21cfd2ad10d479dd1d05213224a" translate="yes" xml:space="preserve">
          <source>While Meteor uses a built-in request interception mechanism on Android, supporting &lt;code&gt;WKWebView&lt;/code&gt; on iOS requires running a real embedded web server instead. That means the local web server needs a port to bind to, and we can&amp;rsquo;t simply use a fixed port because that might lead to conflicts when running multiple Meteor Cordova apps on the same device. The easiest solution may seem to use a randomized port, but this has a serious drawback: if the port changes each time you run the app, web features that depend on the origin (like caching, localStorage, IndexedDB) won&amp;rsquo;t persist between runs, and you also wouldn&amp;rsquo;t be able to specify a stable OAuth redirect URL. So instead we now pick a port from a predetermined range (12000-13000), calculated based on the &lt;code&gt;appId&lt;/code&gt;, a unique identifier that is part of every Meteor project. That ensures the same app will always use the same port, but it hopefully avoids collisions betweens apps as much as possible. (There is still a theoretical possibility of the selected port being in use. Currently, starting the local server will fail in that case.)</source>
          <target state="translated">虽然Meteor在Android上使用了内置的请求拦截机制， &lt;code&gt;WKWebView&lt;/code&gt; 在iOS 上支持WKWebView却需要运行真正的嵌入式Web服务器。这意味着本地Web服务器需要绑定端口，而我们不能简单地使用固定端口，因为在同一设备上运行多个Meteor Cordova应用程序时，这可能导致冲突。最简单的解决方案似乎使用了随机端口，但这有一个严重的缺点：如果每次运行应用程序时端口都发生变化，则取决于来源的Web功能（例如缓存，localStorage，IndexedDB）将不会在两次运行之间持续存在，而且您也将无法指定稳定的OAuth重定向URL。因此，我们现在从基于 &lt;code&gt;appId&lt;/code&gt; 计算的预定范围（12000-13000）中选择一个端口，这是每个Meteor项目的一部分的唯一标识符。这样可以确保相同的应用程序始终使用相同的端口，但是希望可以尽可能避免应用程序之间的冲突。（从理论上讲，所选端口仍在使用中。目前，在这种情况下，启动本地服务器将失败。）</target>
        </trans-unit>
        <trans-unit id="2de9826cb3a2523ab3b06a3a97256e623a505a34" translate="yes" xml:space="preserve">
          <source>While it&amp;rsquo;s not necessarily important whether your code base uses single or double quotes for string literals, there are huge benefits to making that decision once and having it be consistent across your organization. These benefits also apply to the Meteor and JavaScript development communities as a whole.</source>
          <target state="translated">虽然您的代码库对字符串文字使用单引号还是双引号不一定很重要，但是一次做出该决定并使其在整个组织中保持一致具有巨大的好处。这些好处也适用于整个Meteor和JavaScript开发社区。</target>
        </trans-unit>
        <trans-unit id="7db46f60fa00aae0697520cc8b373796cd842008" translate="yes" xml:space="preserve">
          <source>While it&amp;rsquo;s optional and the basic functionality will work without it, it&amp;rsquo;s also a good idea to pick a router integration:</source>
          <target state="translated">虽然它是可选的，并且没有它就可以使用基本功能，但是选择路由器集成也是一个好主意：</target>
        </trans-unit>
        <trans-unit id="1902b93c0a261071f41cb938ff4fddd869ca91f5" translate="yes" xml:space="preserve">
          <source>While most of the components in your app should be reusable, they need to get their data passed in from somewhere. This is where &amp;ldquo;smart&amp;rdquo; components come in. Such components typically do the following things:</source>
          <target state="translated">尽管您应用中的大多数组件都应可重用，但它们仍需要从某个地方传递数据。这就是&amp;ldquo;智能&amp;rdquo;组件出现的地方。此类组件通常执行以下操作：</target>
        </trans-unit>
        <trans-unit id="d5d2526064b0becc82a0c00fbb4c9d47a012531a" translate="yes" xml:space="preserve">
          <source>While some packages exist just to provide side effects to the app, most packages provide a reusable bit of code that can be used by the consumer with &lt;code&gt;import&lt;/code&gt;. To export a symbol from your package, simply use the ES2015 &lt;code&gt;export&lt;/code&gt; syntax in your &lt;code&gt;mainModule&lt;/code&gt;:</source>
          <target state="translated">虽然存在一些软件包只是为了给应用程序提供副作用，但大多数软件包提供了可重用的代码，供消费者使用 &lt;code&gt;import&lt;/code&gt; 来使用。为了从你的包导出一个符号，只需使用ES2015 &lt;code&gt;export&lt;/code&gt; 语法在 &lt;code&gt;mainModule&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="084ba33c3d72a5c2e2c60387768e42e9c8ec756b" translate="yes" xml:space="preserve">
          <source>While the &lt;code&gt;modules&lt;/code&gt; package is useful by itself, we very much encourage using the &lt;code&gt;ecmascript&lt;/code&gt; package (and thus &lt;code&gt;import&lt;/code&gt; and &lt;code&gt;export&lt;/code&gt;) instead of using &lt;code&gt;require&lt;/code&gt; and &lt;code&gt;exports&lt;/code&gt; directly. If you need convincing, here&amp;rsquo;s a presentation that explains the differences: &lt;a href=&quot;http://benjamn.github.io/empirenode-2015&quot;&gt;http://benjamn.github.io/empirenode-2015&lt;/a&gt;</source>
          <target state="translated">而 &lt;code&gt;modules&lt;/code&gt; 封装本身是有益的，我们非常鼓励使用 &lt;code&gt;ecmascript&lt;/code&gt; 包（因而 &lt;code&gt;import&lt;/code&gt; 和 &lt;code&gt;export&lt;/code&gt; ），而不是使用 &lt;code&gt;require&lt;/code&gt; 和 &lt;code&gt;exports&lt;/code&gt; 直接。如果您需要说服力，以下是介绍差异的演示文稿：&lt;a href=&quot;http://benjamn.github.io/empirenode-2015&quot;&gt;http&lt;/a&gt; : //benjamn.github.io/empirenode-2015</target>
        </trans-unit>
        <trans-unit id="c928041f7af9f9510ca49712bad641a9729806f3" translate="yes" xml:space="preserve">
          <source>While the &lt;code&gt;modules&lt;/code&gt; package is useful by itself, we very much encourage using the &lt;code&gt;ecmascript&lt;/code&gt; package (and thus &lt;code&gt;import&lt;/code&gt; and &lt;code&gt;export&lt;/code&gt;) instead of using &lt;code&gt;require&lt;/code&gt; and &lt;code&gt;exports&lt;/code&gt; directly. If you need convincing, here&amp;rsquo;s a presentation that explains the differences: &lt;a href=&quot;https://benjamn.github.io/empirenode-2015&quot;&gt;http://benjamn.github.io/empirenode-2015&lt;/a&gt;</source>
          <target state="translated">而 &lt;code&gt;modules&lt;/code&gt; 封装本身是有益的，我们非常鼓励使用 &lt;code&gt;ecmascript&lt;/code&gt; 包（因而 &lt;code&gt;import&lt;/code&gt; 和 &lt;code&gt;export&lt;/code&gt; ），而不是使用 &lt;code&gt;require&lt;/code&gt; 和 &lt;code&gt;exports&lt;/code&gt; 直接。如果您需要说服力，以下是介绍差异的演示文稿：&lt;a href=&quot;https://benjamn.github.io/empirenode-2015&quot;&gt;http&lt;/a&gt; : //benjamn.github.io/empirenode-2015</target>
        </trans-unit>
        <trans-unit id="445d2277a61f8494c7b0d3e62400fa762c10ac8a" translate="yes" xml:space="preserve">
          <source>While the client-side code of your application is necessarily accessible by the browser, every application will have some secret code on the server that you don&amp;rsquo;t want to share with the world.</source>
          <target state="translated">尽管浏览器必须可以访问您应用程序的客户端代码，但是每个应用程序在服务器上都会有一些您不希望与世界共享的秘密代码。</target>
        </trans-unit>
        <trans-unit id="38fe9a4d0bc6b4111044e28548b07ff96c1a36a0" translate="yes" xml:space="preserve">
          <source>While this behavior is good for saving server resources in cases where a Method will certainly fail, it&amp;rsquo;s important to make sure that the simulation doesn&amp;rsquo;t throw an error in cases where the server Method would have succeeded (for example, if you didn&amp;rsquo;t load some data on the client that the Method needs to do the simulation properly). In this case, you can wrap server-side-only logic in a block that checks for a method simulation:</source>
          <target state="translated">尽管此行为对于在Method肯定会失败的情况下节省服务器资源来说是很好的，但重要的是要确保在Server Method成功的情况下，模拟不会引发错误（例如，在客户端上加载一些方法需要正确执行模拟的数据）。在这种情况下，可以将仅服务器端逻辑包装在检查方法模拟的块中：</target>
        </trans-unit>
        <trans-unit id="6ce6cc661b4ee7409838276e1cbb016385eb765f" translate="yes" xml:space="preserve">
          <source>While we recommend using ES2015 with the &lt;code&gt;ecmascript&lt;/code&gt; package as the best development experience for Meteor, everything in the platform is 100% compatible with &lt;a href=&quot;http://coffeescript.org/&quot;&gt;CoffeeScript&lt;/a&gt; and many people in the Meteor community prefer it.</source>
          <target state="translated">虽然我们建议将ES2015与 &lt;code&gt;ecmascript&lt;/code&gt; 软件包一起使用是Meteor的最佳开发体验，但该平台中的所有内容均与&lt;a href=&quot;http://coffeescript.org/&quot;&gt;CoffeeScript&lt;/a&gt; 100％兼容，并且Meteor社区中的许多人都喜欢它。</target>
        </trans-unit>
        <trans-unit id="050af3a43f6c489ff4eceec775c37584c349289d" translate="yes" xml:space="preserve">
          <source>While you can easily use Methods in a simple app by following the Meteor introductory tutorial, it&amp;rsquo;s important to understand exactly how they work to use them effectively in a production app. One of the downsides of using a framework like Meteor that does a lot for you under the hood is that you don&amp;rsquo;t always understand what is going on, so it&amp;rsquo;s good to learn some of the core concepts.</source>
          <target state="translated">通过遵循&amp;ldquo;流星&amp;rdquo;入门教程，您可以轻松地在一个简单的应用程序中使用&amp;ldquo;方法&amp;rdquo;，但重要的是要准确了解它们如何在生产应用程序中有效使用它们。使用像Meteor这样的框架在后台为您做很多事情的缺点之一是您并不总是了解正在发生的事情，因此学习一些核心概念是一件好事。</target>
        </trans-unit>
        <trans-unit id="4761c389a8dbeebd189831d04f1cbd6568091a24" translate="yes" xml:space="preserve">
          <source>Why it&amp;rsquo;s a good idea to have consistent code style</source>
          <target state="translated">为什么拥有一致的代码风格是个好主意</target>
        </trans-unit>
        <trans-unit id="564f8c6e76fbd512be2e38dabdfdd61550d0c3cc" translate="yes" xml:space="preserve">
          <source>With</source>
          <target state="translated">With</target>
        </trans-unit>
        <trans-unit id="48861b74369b2a39d8e8a84cecc4c61da61fd288" translate="yes" xml:space="preserve">
          <source>With Meteor, there is no need to install Cordova yourself, or use the &lt;code&gt;cordova&lt;/code&gt; command directly. Cordova project creation happens as part of the Meteor run and build commands, and the project itself is considered a build artifact (stored in &lt;code&gt;.meteor/local/cordova-build&lt;/code&gt; in your app directory) that can be deleted and recreated at any time. Instead of having you modify Cordova&amp;rsquo;s &lt;code&gt;config.xml&lt;/code&gt; file, Meteor reads a &lt;a href=&quot;http://docs.meteor.com/api/mobile-config.html&quot;&gt;&lt;code&gt;mobile-config.js&lt;/code&gt;&lt;/a&gt; file in the root of your app directory and uses the settings specified there to configure the generated project.</source>
          <target state="translated">使用Meteor，无需自己安装Cordova或直接使用 &lt;code&gt;cordova&lt;/code&gt; 命令。Cordova项目的创建是Meteor运行和构建命令的一部分，并且项目本身被视为构建构件（存储在您的应用目录中的 &lt;code&gt;.meteor/local/cordova-build&lt;/code&gt; 中），可以随时删除和重新创建。Meteor 无需修改Cordova的 &lt;code&gt;config.xml&lt;/code&gt; 文件，而是读取您应用目录根目录中的&lt;a href=&quot;http://docs.meteor.com/api/mobile-config.html&quot;&gt; &lt;code&gt;mobile-config.js&lt;/code&gt; &lt;/a&gt;文件，并使用在那里指定的设置来配置生成的项目。</target>
        </trans-unit>
        <trans-unit id="279d87e0ddbf5918498e3a648de58010464aea6c" translate="yes" xml:space="preserve">
          <source>With React Router, you&amp;rsquo;ll also need to explicity render the exported routes in a startup function:</source>
          <target state="translated">使用React Router，您还需要在启动函数中显式呈现导出的路由：</target>
        </trans-unit>
        <trans-unit id="78ad02171a0a0b0e09d465faed8a9ed86b70efac" translate="yes" xml:space="preserve">
          <source>With one exception, it is not possible to mix inclusion and exclusion styles: the keys must either be all 1 or all 0. The exception is that you may specify &lt;code&gt;_id: 0&lt;/code&gt; in an inclusion specifier, which will leave &lt;code&gt;_id&lt;/code&gt; out of the result object as well. However, such field specifiers can not be used with &lt;a href=&quot;#observe_changes&quot;&gt;&lt;code&gt;observeChanges&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#observe&quot;&gt;&lt;code&gt;observe&lt;/code&gt;&lt;/a&gt;, cursors returned from a &lt;a href=&quot;#meteor_publish&quot;&gt;publish function&lt;/a&gt;, or cursors used in &lt;code&gt;{{#each}}&lt;/code&gt; in a template. They may be used with &lt;a href=&quot;#fetch&quot;&gt;&lt;code&gt;fetch&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#findone&quot;&gt;&lt;code&gt;findOne&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#foreach&quot;&gt;&lt;code&gt;forEach&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#map&quot;&gt;&lt;code&gt;map&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">除了一个例外，不可能混合使用包含样式和排除样式：键必须全部为1或全部为0。例外情况是，您可以在包含说明符中指定 &lt;code&gt;_id: 0&lt;/code&gt; ，这会将 &lt;code&gt;_id&lt;/code&gt; 保留在结果对象之外也一样但是，此类字段说明符不能与&lt;a href=&quot;#observe_changes&quot;&gt; &lt;code&gt;observeChanges&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#observe&quot;&gt; &lt;code&gt;observe&lt;/code&gt; &lt;/a&gt;，从&lt;a href=&quot;#meteor_publish&quot;&gt;发布函数&lt;/a&gt;返回的游标或模板的 &lt;code&gt;{{#each}}&lt;/code&gt; 中使用的游标一起使用。它们可以与&lt;a href=&quot;#fetch&quot;&gt; &lt;code&gt;fetch&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#findone&quot;&gt; &lt;code&gt;findOne&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#foreach&quot;&gt; &lt;code&gt;forEach&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#map&quot;&gt; &lt;code&gt;map&lt;/code&gt; 一起使用&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="02148a75389c5623f51749325849a59f81199b42" translate="yes" xml:space="preserve">
          <source>With that said, in some situations you may need to call out to &lt;code&gt;require&lt;/code&gt; directly. One notable example is when requiring client or server-only code from a common file. As &lt;code&gt;import&lt;/code&gt;s must be at the top-level scope, you may not place them within an &lt;code&gt;if&lt;/code&gt; statement, so you&amp;rsquo;ll need to write code like:</source>
          <target state="translated">话虽如此，在某些情况下，您可能需要直接提出 &lt;code&gt;require&lt;/code&gt; 。一个著名的例子是当需要来自公共文件的客户端或仅服务器代码时。由于 &lt;code&gt;import&lt;/code&gt; 必须在顶级范围内，因此您可能不能将它们放在 &lt;code&gt;if&lt;/code&gt; 语句中，因此您需要编写如下代码：</target>
        </trans-unit>
        <trans-unit id="888670c17dd555fac3d6da2eba246828fe64c7bc" translate="yes" xml:space="preserve">
          <source>With the &lt;code&gt;less&lt;/code&gt; package installed, &lt;code&gt;.less&lt;/code&gt; files in your application are automatically compiled to CSS and the results are included in the client CSS bundle.</source>
          <target state="translated">安装了 &lt;code&gt;less&lt;/code&gt; 软件包后，应用程序中的 &lt;code&gt;.less&lt;/code&gt; 文件将自动编译为CSS，并且结果将包含在客户端CSS捆绑包中。</target>
        </trans-unit>
        <trans-unit id="0235c8e9ddd6a614d1c7ada5608743610aa8aa76" translate="yes" xml:space="preserve">
          <source>Within the &lt;code&gt;imports/api&lt;/code&gt; directory, it&amp;rsquo;s sensible to split the code into directories based on the domain that the code is providing an API for &amp;mdash; typically this corresponds to the collections you&amp;rsquo;ve defined in your app. For instance in the Todos example app, we have the &lt;code&gt;imports/api/lists&lt;/code&gt; and &lt;code&gt;imports/api/todos&lt;/code&gt; domains. Inside each directory we define the collections, publications and methods used to manipulate the relevant domain data.</source>
          <target state="translated">在 &lt;code&gt;imports/api&lt;/code&gt; 目录中，根据代码为其提供API的域将代码分成目录是明智的-通常，这对应于您在应用程序中定义的集合。例如，在Todos示例应用程序中，我们具有 &lt;code&gt;imports/api/lists&lt;/code&gt; 和 &lt;code&gt;imports/api/todos&lt;/code&gt; 域。在每个目录中，我们定义用于操纵相关域数据的集合，出版物和方法。</target>
        </trans-unit>
        <trans-unit id="e5ca916316fecdfdcd09e7a02ea04536b16cb7a7" translate="yes" xml:space="preserve">
          <source>Within the &lt;code&gt;imports/ui&lt;/code&gt; directory it typically makes sense to group files into directories based on the type of UI side code they define, i.e. top level &lt;code&gt;pages&lt;/code&gt;, wrapping &lt;code&gt;layouts&lt;/code&gt;, or reusable &lt;code&gt;components&lt;/code&gt;.</source>
          <target state="translated">在 &lt;code&gt;imports/ui&lt;/code&gt; 目录中，通常根据文件定义的UI侧边代码的类型将文件分组到目录中是有意义的，例如，顶级 &lt;code&gt;pages&lt;/code&gt; ，包装 &lt;code&gt;layouts&lt;/code&gt; 或可重用 &lt;code&gt;components&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1a55595583f082ec27a6cd967c6cc4c9ea851fef" translate="yes" xml:space="preserve">
          <source>Working with REST APIs</source>
          <target state="translated">使用REST APIs</target>
        </trans-unit>
        <trans-unit id="463cb6e65401ee33feefb1ca2a58091e4140b4aa" translate="yes" xml:space="preserve">
          <source>Wrap a function that takes a callback function as its final parameter. The signature of the callback of the wrapped function should be &lt;code&gt;function(error, result){}&lt;/code&gt;. On the server, the wrapped function can be used either synchronously (without passing a callback) or asynchronously (when a callback is passed). On the client, a callback is always required; errors will be logged if there is no callback. If a callback is provided, the environment captured when the original function was called will be restored in the callback.</source>
          <target state="translated">包装一个将回调函数作为其最终参数的函数。包装函数的回调的签名应为 &lt;code&gt;function(error, result){}&lt;/code&gt; 。在服务器上，包装函数可以同步使用（不传递回调），也可以异步使用（传递回调时）。在客户端上，始终需要回调。如果没有回调，将记录错误。如果提供了回调，则将在回调中恢复调用原始函数时捕获的环境。</target>
        </trans-unit>
        <trans-unit id="fbadab8600072e37a4780b4a78f0ec308c818630" translate="yes" xml:space="preserve">
          <source>Writing Atmosphere Packages</source>
          <target state="translated">写作氛围包</target>
        </trans-unit>
        <trans-unit id="682e327d7d036c873125604e373874ab72bb17c8" translate="yes" xml:space="preserve">
          <source>Writing a build plugin is a very advanced task that only the most advanced Meteor users should get into. The best place to start is to copy a different plugin that is the most similar to what you are trying to do. For example, if you wanted to make a new CSS compiler plugin, you could fork the &lt;code&gt;less&lt;/code&gt; package; if you wanted to make your own JS transpiler, you could fork &lt;code&gt;ecmascript&lt;/code&gt;. A good example of a linter is the &lt;code&gt;jshint&lt;/code&gt; package, and for a minifier you can look at &lt;code&gt;standard-minifiers-js&lt;/code&gt; and &lt;code&gt;standard-minifiers-css&lt;/code&gt;.</source>
          <target state="translated">编写构建插件是一项非常高级的任务，只有最高级的Meteor用户才能参与。最好的起点是复制与您尝试执行的操作最相似的其他插件。例如，如果您想制作一个新的CSS编译器插件，则可以分叉 &lt;code&gt;less&lt;/code&gt; 包；如果您想制作自己的JS转译器，则可以使用 &lt;code&gt;ecmascript&lt;/code&gt; 。 &lt;code&gt;jshint&lt;/code&gt; 软件包是linter的一个很好的例子，对于minifier，您可以查看 &lt;code&gt;standard-minifiers-js&lt;/code&gt; 和 &lt;code&gt;standard-minifiers-css&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b0a210f4b0062ab70f663ab7b33754f4f1e9cc07" translate="yes" xml:space="preserve">
          <source>Writing migrations</source>
          <target state="translated">编写迁移文件</target>
        </trans-unit>
        <trans-unit id="67d8eb5b83423e4c01ef5397e89bf9279b547e64" translate="yes" xml:space="preserve">
          <source>Writing npm Packages</source>
          <target state="translated">编写npm包</target>
        </trans-unit>
        <trans-unit id="0c5db175e86f27dd0d1bd5d4fe69519e4f6064af" translate="yes" xml:space="preserve">
          <source>Writing smart components with Blaze</source>
          <target state="translated">用Blaze编写智能组件</target>
        </trans-unit>
        <trans-unit id="dd28e043c6cb6a21402fa517b7192cb5a4a63908" translate="yes" xml:space="preserve">
          <source>Writing your own build plugin</source>
          <target state="translated">编写自己的构建插件</target>
        </trans-unit>
        <trans-unit id="c032adc1ff629c9b66f22749ad667e6beadf144b" translate="yes" xml:space="preserve">
          <source>X</source>
          <target state="translated">X</target>
        </trans-unit>
        <trans-unit id="f0b30ebb13a341d741a1ad7680ddade64cb2fa6b" translate="yes" xml:space="preserve">
          <source>Xcode builds the app, installs it on the device, and launches it.</source>
          <target state="translated">Xcode构建应用程序,将其安装在设备上,并启动它。</target>
        </trans-unit>
        <trans-unit id="f12898521ccd045820f9f088b5338da1a95ec276" translate="yes" xml:space="preserve">
          <source>Yes, Meteor does hash your password or login token on the client before sending it over the wire, but that only prevents an attacker from figuring out your password - it doesn&amp;rsquo;t prevent them from logging in as you, since they could just send the hashed password to the server to log in! No matter how you slice it, logging in requires the client to send sensitive data to the server, and the only way to secure that transfer is by using SSL. Note that the same issue is present when using cookies for authentication in a normal HTTP web application, so any app that needs to reliably identify users should be running on SSL.</source>
          <target state="translated">是的，Meteor会在通过网络发送密码之前先在客户端上对您的密码或登录令牌进行哈希处理，但这只会阻止攻击者弄清您的密码-不会阻止他们以您的身份登录，因为他们可以发送密码哈希密码登录到服务器！无论如何分割，登录都要求客户端将敏感数据发送到服务器，并且确保传输安全的唯一方法是使用SSL。请注意，在正常的HTTP Web应用程序中使用cookie进行身份验证时，也会出现相同的问题，因此任何需要可靠地标识用户的应用程序都应在SSL上运行。</target>
        </trans-unit>
        <trans-unit id="f076b03a152a910a713055344401278fd44f1192" translate="yes" xml:space="preserve">
          <source>You &amp;ldquo;include&amp;rdquo; a sub-component with the &lt;code&gt;{{&amp;gt; }}&lt;/code&gt; syntax. By default, the sub-component will gain the data context of the caller, although it&amp;rsquo;s usually a good idea to be explicit. You can provide a single object which will become the entire data context (as we did with the object returned by the &lt;code&gt;todoArgs&lt;/code&gt; helper above), or provide a list of keyword arguments which will be put together into one object, like so:</source>
          <target state="translated">您可以使用 &lt;code&gt;{{&amp;gt; }}&lt;/code&gt; 语法&amp;ldquo;包括&amp;rdquo;一个子组件。默认情况下，子组件将获得调用者的数据上下文，尽管明确表示通常是一个好主意。您可以提供一个将成为整个数据上下文的对象（就像我们对上面的 &lt;code&gt;todoArgs&lt;/code&gt; 帮助器返回的对象所做的那样），或者提供关键字参数列表，这些关键字参数将被放到一个对象中，如下所示：</target>
        </trans-unit>
        <trans-unit id="b90deaca0ef701768f16f25209af315869bc5d5a" translate="yes" xml:space="preserve">
          <source>You are creating a collection within MongoDB, and an interface to that collection to be used on the server. It&amp;rsquo;s a fairly straightforward layer on top of the underlying Node MongoDB driver, but with a synchronous API:</source>
          <target state="translated">您正在MongoDB中创建一个集合，并在服务器上使用该集合的接口。这是基础Node MongoDB驱动程序之上相当简单的一层，但具有同步API：</target>
        </trans-unit>
        <trans-unit id="be27b62d3961acc7a6cd24129ef110f528fef299" translate="yes" xml:space="preserve">
          <source>You call it the same way you call the advanced Method above, but the Method definition is significantly simpler. We believe this style of Method lets you clearly see the important parts - the name of the Method sent over the wire, the format of the expected arguments, and the JavaScript namespace by which the Method can be referenced. Validated methods only accept a single argument and a callback function.</source>
          <target state="translated">你调用它的方式和上面的高级Method一样,但Method的定义明显更简单。我们相信这种风格的Method可以让你清楚地看到重要的部分--通过电线发送的Method的名称,预期参数的格式,以及可以引用该Method的JavaScript命名空间。经过验证的方法只接受一个参数和一个回调函数。</target>
        </trans-unit>
        <trans-unit id="a35763ae89deeee3538169e6f8edd2fab5a390f1" translate="yes" xml:space="preserve">
          <source>You can add Cordova plugins to your project either directly, or as a dependency of a Meteor package.</source>
          <target state="translated">你可以直接添加Cordova插件到你的项目中,或者作为Meteor包的依赖。</target>
        </trans-unit>
        <trans-unit id="bb166ada98fada3a6ab9f0cf1a163f7b421ea333" translate="yes" xml:space="preserve">
          <source>You can add information specific to a particular deployment of your application by using the &lt;code&gt;--settings&lt;/code&gt; option. The argument to &lt;code&gt;--settings&lt;/code&gt; is a file containing any JSON string. The object in your settings file will appear on the server side of your application in &lt;a href=&quot;#meteor_settings&quot;&gt;&lt;code&gt;Meteor.settings&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">您可以使用 &lt;code&gt;--settings&lt;/code&gt; 选项添加特定于应用程序特定部署的信息。 &lt;code&gt;--settings&lt;/code&gt; 的参数是一个包含任何JSON字符串的文件。设置文件中的对象将在&lt;a href=&quot;#meteor_settings&quot;&gt; &lt;code&gt;Meteor.settings&lt;/code&gt; 中&lt;/a&gt;显示在应用程序的服务器端。</target>
        </trans-unit>
        <trans-unit id="9b2782964809756050678023f65eea3fd7ace175" translate="yes" xml:space="preserve">
          <source>You can add the Crosswalk plugin to your app with &lt;code&gt;meteor add crosswalk&lt;/code&gt;.</source>
          <target state="translated">您可以使用 &lt;code&gt;meteor add crosswalk&lt;/code&gt; 将Crosswalk插件添加到您的应用中。</target>
        </trans-unit>
        <trans-unit id="b85c023f8b0658958d03f07ac969ba3039532cee" translate="yes" xml:space="preserve">
          <source>You can allow different teams at your organization to work on the different applications independently.</source>
          <target state="translated">您可以允许您的组织中的不同团队在不同的应用程序上独立工作。</target>
        </trans-unit>
        <trans-unit id="247cffea5b43b8414001541dffd25090106f85a3" translate="yes" xml:space="preserve">
          <source>You can also access authenticated publications (such as &lt;code&gt;lists.private&lt;/code&gt;). Suppose we&amp;rsquo;ve signed up (via the web UI) as &lt;code&gt;user@example.com&lt;/code&gt;, with the password &lt;code&gt;password&lt;/code&gt;, and created a private list. Then we can access it as follows:</source>
          <target state="translated">您还可以访问经过身份验证的发布（例如 &lt;code&gt;lists.private&lt;/code&gt; ）。假设我们已经（通过Web UI）以 &lt;code&gt;user@example.com&lt;/code&gt; （使用密码 &lt;code&gt;password&lt;/code&gt; )进行了注册，并创建了一个私有列表。然后我们可以按以下方式访问它：</target>
        </trans-unit>
        <trans-unit id="e0d44a4238826b91db16ad530c52f74b0cd87286" translate="yes" xml:space="preserve">
          <source>You can also add a &lt;code&gt;eslintConfig&lt;/code&gt; section to your &lt;code&gt;package.json&lt;/code&gt; to specify that you&amp;rsquo;d like to use the Airbnb config, and to enable &lt;a href=&quot;https://github.com/dferber90/eslint-plugin-meteor&quot;&gt;ESLint-plugin-Meteor&lt;/a&gt;. You can also setup any extra rules you want to change, as well as adding a lint npm command:</source>
          <target state="translated">您还可以在 &lt;code&gt;package.json&lt;/code&gt; 中添加 &lt;code&gt;eslintConfig&lt;/code&gt; 部分，以指定您要使用Airbnb配置并启用&lt;a href=&quot;https://github.com/dferber90/eslint-plugin-meteor&quot;&gt;ESLint-plugin-Meteor&lt;/a&gt;。您还可以设置要更改的任何其他规则，以及添加lint npm命令：</target>
        </trans-unit>
        <trans-unit id="938eb70c71a7246257e05ba047445913de769e60" translate="yes" xml:space="preserve">
          <source>You can also add any source file that would be compiled to a JS file (such as a CoffeeScript file) in a similar way, assuming you &lt;a href=&quot;#dependencies&quot;&gt;depend&lt;/a&gt; on an appropriate build plugin.</source>
          <target state="translated">假设您&lt;a href=&quot;#dependencies&quot;&gt;依赖&lt;/a&gt;于适当的构建插件，您还可以类似的方式将要编译的任何源文件添加到JS文件（例如CoffeeScript文件）中。</target>
        </trans-unit>
        <trans-unit id="207367ccef744450937729110472f3b5a5c4bbd6" translate="yes" xml:space="preserve">
          <source>You can also change only part of the URL if you want to, using the &lt;code&gt;FlowRouter.setParams()&lt;/code&gt; and &lt;code&gt;FlowRouter.setQueryParams()&lt;/code&gt;. For instance, if we were viewing one list and wanted to go to another, we could write:</source>
          <target state="translated">如果需要，还可以使用 &lt;code&gt;FlowRouter.setParams()&lt;/code&gt; 和 &lt;code&gt;FlowRouter.setQueryParams()&lt;/code&gt; 来仅更改URL的一部分。例如，如果我们正在查看一个列表并想转到另一个列表，则可以编写：</target>
        </trans-unit>
        <trans-unit id="78a6add1c3ff370e5a611f819b812a945a44b50f" translate="yes" xml:space="preserve">
          <source>You can also import CSS directly from a JavaScript file to control load order if you have the &lt;code&gt;ecmascript&lt;/code&gt; package installed:</source>
          <target state="translated">如果已安装 &lt;code&gt;ecmascript&lt;/code&gt; 软件包，也可以直接从JavaScript文件导入CSS以控制加载顺序：</target>
        </trans-unit>
        <trans-unit id="2f5167c9831c495628d994dede0a720b9c76fd97" translate="yes" xml:space="preserve">
          <source>You can also import CSS from a JavaScript file if you have the &lt;code&gt;ecmascript&lt;/code&gt; package installed:</source>
          <target state="translated">如果您已安装 &lt;code&gt;ecmascript&lt;/code&gt; 软件包，也可以从JavaScript文件导入CSS ：</target>
        </trans-unit>
        <trans-unit id="9e9fca25291bcef9d8bce2cfc18822749de67e9f" translate="yes" xml:space="preserve">
          <source>You can also import other files or JS entry points from a package:</source>
          <target state="translated">你也可以从一个包中导入其他文件或JS入口点。</target>
        </trans-unit>
        <trans-unit id="4aff4aafc57685ef38f27de719f338d5b0b10183" translate="yes" xml:space="preserve">
          <source>You can also import specific functions from a package using the destructuring syntax:</source>
          <target state="translated">你也可以使用解构语法从一个包中导入特定的函数。</target>
        </trans-unit>
        <trans-unit id="fa3e246284b66255d672bd1fff87fab5ee4aa809" translate="yes" xml:space="preserve">
          <source>You can also log into the Galaxy UI at &lt;a href=&quot;https://galaxy.meteor.com&quot;&gt;https://galaxy.meteor.com&lt;/a&gt;. Once there you can manage your applications, monitor the number of connections and resource usage, view logs, and change settings.</source>
          <target state="translated">您也可以通过&lt;a href=&quot;https://galaxy.meteor.com&quot;&gt;https://galaxy.meteor.com&lt;/a&gt;登录到Galaxy UI 。在那里，您可以管理您的应用程序，监视连接数和资源使用情况，查看日志并更改设置。</target>
        </trans-unit>
        <trans-unit id="02fc3314e275aaaf86c0c8bb0f6b41848338f151" translate="yes" xml:space="preserve">
          <source>You can also pass the output of a helper to a template inclusion or other helper. To do so, use parentheses to show precedence:</source>
          <target state="translated">你也可以将帮助程序的输出传递给模板包含或其他帮助程序。要做到这一点,请使用括号来显示优先级。</target>
        </trans-unit>
        <trans-unit id="0d26a2823a09071aec3e17d038a8f356b7f2c1b1" translate="yes" xml:space="preserve">
          <source>You can also pick which type of login to do by passing an option to &lt;a href=&quot;#meteor_loginwithexternalservice&quot;&gt;&lt;code&gt;Meteor.loginWith&amp;lt;ExternalService&amp;gt;&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">您还可以通过将选项传递给&lt;a href=&quot;#meteor_loginwithexternalservice&quot;&gt; &lt;code&gt;Meteor.loginWith&amp;lt;ExternalService&amp;gt;&lt;/code&gt; &lt;/a&gt;来选择要执行的登录类型。</target>
        </trans-unit>
        <trans-unit id="1a82cd9a2c751894e11f1b6c264863c21e3d7f5b" translate="yes" xml:space="preserve">
          <source>You can also set &lt;code&gt;MONGO_URL&lt;/code&gt; in development if you want to connect to a different MongoDB instance.</source>
          <target state="translated">如果要连接到其他MongoDB实例，也可以在开发中设置 &lt;code&gt;MONGO_URL&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="231463b81c735f806c6f07dd41a9a53507c490db" translate="yes" xml:space="preserve">
          <source>You can also simply write &lt;code&gt;exports&lt;/code&gt; instead of &lt;code&gt;module.exports&lt;/code&gt; if you prefer. If you need to &lt;code&gt;require&lt;/code&gt; from an ES2015 module with a &lt;code&gt;default&lt;/code&gt; export, you can access the export with &lt;code&gt;require('package').default&lt;/code&gt;.</source>
          <target state="translated">如果愿意，您也可以只写 &lt;code&gt;exports&lt;/code&gt; 而不是 &lt;code&gt;module.exports&lt;/code&gt; 。如果您需要使用 &lt;code&gt;default&lt;/code&gt; 导出的ES2015模块进行 &lt;code&gt;require&lt;/code&gt; ，则可以使用 &lt;code&gt;require('package').default&lt;/code&gt; 访问导出。</target>
        </trans-unit>
        <trans-unit id="645188ed51b5c49ada822d64bf978d39a6b8333f" translate="yes" xml:space="preserve">
          <source>You can also use &lt;a href=&quot;http://docs.meteor.com/#/full/meteor_startup&quot;&gt;Meteor.startup&lt;/a&gt; to control when run code is run on both the server and the client.</source>
          <target state="translated">您还可以使用&lt;a href=&quot;http://docs.meteor.com/#/full/meteor_startup&quot;&gt;Meteor.startup&lt;/a&gt;来控制何时在服务器和客户端上运行运行代码。</target>
        </trans-unit>
        <trans-unit id="b8524fc012f4cf38b4aa5d7d9bc8492ed402c3c2" translate="yes" xml:space="preserve">
          <source>You can also use traditional CommonJS syntax with CoffeeScript.</source>
          <target state="translated">你也可以用CoffeeScript使用传统的CommonJS语法。</target>
        </trans-unit>
        <trans-unit id="fd2e6bef96133f1d047a1f15f2d0e9bd5d2f02f1" translate="yes" xml:space="preserve">
          <source>You can call &lt;code&gt;allow&lt;/code&gt; as many times as you like, and each call can include any combination of &lt;code&gt;insert&lt;/code&gt;, &lt;code&gt;update&lt;/code&gt;, and &lt;code&gt;remove&lt;/code&gt; functions. The functions should return &lt;code&gt;true&lt;/code&gt; if they think the operation should be allowed. Otherwise they should return &lt;code&gt;false&lt;/code&gt;, or nothing at all (&lt;code&gt;undefined&lt;/code&gt;). In that case Meteor will continue searching through any other &lt;code&gt;allow&lt;/code&gt; rules on the collection.</source>
          <target state="translated">您可以拨打 &lt;code&gt;allow&lt;/code&gt; 多次，只要你喜欢，并且每次通话可以包括任意组合 &lt;code&gt;insert&lt;/code&gt; ， &lt;code&gt;update&lt;/code&gt; 和 &lt;code&gt;remove&lt;/code&gt; 功能。如果函数认为应该允许该操作，则应返回 &lt;code&gt;true&lt;/code&gt; 。否则，它们应该返回 &lt;code&gt;false&lt;/code&gt; ，或者不返回任何值（ &lt;code&gt;undefined&lt;/code&gt; ）。在那种情况下，Meteor将继续搜索集合中的任何其他 &lt;code&gt;allow&lt;/code&gt; 规则。</target>
        </trans-unit>
        <trans-unit id="5f4c0a240b04c218b0779d19d12aa57965fb7dbf" translate="yes" xml:space="preserve">
          <source>You can chain block helpers:</source>
          <target state="translated">你可以链块帮手。</target>
        </trans-unit>
        <trans-unit id="3ae789f218267cb434db4ec292f653b98d787972" translate="yes" xml:space="preserve">
          <source>You can chain block tags:</source>
          <target state="translated">你可以链块标签。</target>
        </trans-unit>
        <trans-unit id="0898dbcdbfd719b78eadecb6b100c5ec73dbe583" translate="yes" xml:space="preserve">
          <source>You can combine multiple dynamic attributes tags with other attributes:</source>
          <target state="translated">您可以将多个动态属性标签与其他属性组合。</target>
        </trans-unit>
        <trans-unit id="655ed346f81784d0581261653e9a7e79ed6e13ef" translate="yes" xml:space="preserve">
          <source>You can connect any native iOS or Android app to a Meteor server via &lt;a href=&quot;https://www.meteor.com/ddp&quot;&gt;DDP&lt;/a&gt;. For iOS, use the &lt;a href=&quot;https://github.com/martijnwalraven/meteor-ios&quot;&gt;&lt;code&gt;meteor-ios&lt;/code&gt;&lt;/a&gt; framework.</source>
          <target state="translated">您可以通过&lt;a href=&quot;https://www.meteor.com/ddp&quot;&gt;DDP&lt;/a&gt;将任何本机iOS或Android应用程序连接到Meteor服务器。对于iOS，请使用&lt;a href=&quot;https://github.com/martijnwalraven/meteor-ios&quot;&gt; &lt;code&gt;meteor-ios&lt;/code&gt; &lt;/a&gt;框架。</target>
        </trans-unit>
        <trans-unit id="10e7ff79681a417b72ff452347965d4639b403fc" translate="yes" xml:space="preserve">
          <source>You can construct your own user interface using the functions below, or use the &lt;a href=&quot;#accountsui&quot;&gt;&lt;code&gt;accounts-ui&lt;/code&gt; package&lt;/a&gt; to include a turn-key user interface for password-based sign-in.</source>
          <target state="translated">您可以使用以下功能构建自己的用户界面，或使用&lt;a href=&quot;#accountsui&quot;&gt; &lt;code&gt;accounts-ui&lt;/code&gt; 软件包&lt;/a&gt;包括用于基于密码的登录的交钥匙用户界面。</target>
        </trans-unit>
        <trans-unit id="fdec73e8983ba2f0768d7d2b3675a40f95d715b6" translate="yes" xml:space="preserve">
          <source>You can control the load order of files by encoding dependencies through imports, since the load order of CSS matters.</source>
          <target state="translated">你可以通过导入编码依赖关系来控制文件的加载顺序,因为CSS的加载顺序很重要。</target>
        </trans-unit>
        <trans-unit id="fa8ffab423d6590f5ab5449fc0acfba427671200" translate="yes" xml:space="preserve">
          <source>You can create reusable CSS &amp;ldquo;modules&amp;rdquo; that just have variables and mixins and don&amp;rsquo;t actually generate any CSS.</source>
          <target state="translated">您可以创建可重复使用的CSS&amp;ldquo;模块&amp;rdquo;，它们仅包含变量和混合，而实际上不生成任何CSS。</target>
        </trans-unit>
        <trans-unit id="b876b900f8ebf93e1a5d810796db77a2b1fc0092" translate="yes" xml:space="preserve">
          <source>You can create wrapper components by using the &amp;ldquo;template as block helper&amp;rdquo; ability of Blaze (see the &lt;a href=&quot;http://blazejs.org/guide/spacebars.html#Block-Helpers&quot;&gt;Blaze Article&lt;/a&gt;). Here&amp;rsquo;s how we could write an authorization template:</source>
          <target state="translated">您可以使用Blaze的&amp;ldquo;模板作为块帮助程序&amp;rdquo;功能来创建包装器组件（请参见&lt;a href=&quot;http://blazejs.org/guide/spacebars.html#Block-Helpers&quot;&gt;Blaze文章&lt;/a&gt;）。这是我们编写授权模板的方法：</target>
        </trans-unit>
        <trans-unit id="54d5d17b9a75b2c6635708869dea8a0fad77e70e" translate="yes" xml:space="preserve">
          <source>You can decrypt them using &lt;code&gt;OAuth.openSecrets&lt;/code&gt;:</source>
          <target state="translated">您可以使用 &lt;code&gt;OAuth.openSecrets&lt;/code&gt; 将它们解密：</target>
        </trans-unit>
        <trans-unit id="6febc32541eb91e25edcf07cae361f84d66b94d4" translate="yes" xml:space="preserve">
          <source>You can define helpers and event maps on &lt;code&gt;Template.body&lt;/code&gt; just like on any &lt;code&gt;Template.myTemplate&lt;/code&gt; object.</source>
          <target state="translated">您可以定义佣工和事件映射 &lt;code&gt;Template.body&lt;/code&gt; 就像任何关于 &lt;code&gt;Template.myTemplate&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="90f08cabf85c560b4a952c6f1009803e3fcd5ddc" translate="yes" xml:space="preserve">
          <source>You can deploy in debug mode by passing &lt;code&gt;--debug&lt;/code&gt;. This will leave your source code readable by your favorite in-browser debugger, just like it is in local development mode.</source>
          <target state="translated">您可以通过传递 &lt;code&gt;--debug&lt;/code&gt; 以调试模式进行部署。就像在本地开发模式下一样，这将使您喜欢的浏览器内调试器可以读取源代码。</target>
        </trans-unit>
        <trans-unit id="7087bebd85af6832dc0e73cc2d2c852b1a6c7a59" translate="yes" xml:space="preserve">
          <source>You can deploy the different applications with different scaling setups and secure them differently (for instance you might restrict access to your admin application to users behind a firewall).</source>
          <target state="translated">您可以使用不同的缩放设置部署不同的应用程序,并以不同的方式保护它们(例如,您可能会限制防火墙后的用户访问您的管理应用程序)。</target>
        </trans-unit>
        <trans-unit id="9fdf88d2aeda1f8f8f2af4bdaf00f46c4ce2dbde" translate="yes" xml:space="preserve">
          <source>You can do this by adding these lines to your &lt;code&gt;~/.bash_profile&lt;/code&gt; file (or the equivalent file for your shell environment, like &lt;code&gt;~/.zshrc&lt;/code&gt;):</source>
          <target state="translated">您可以通过将以下 &lt;code&gt;~/.bash_profile&lt;/code&gt; 行添加到〜/ .bash_profile文件（或您的shell环境的等效文件，例如 &lt;code&gt;~/.zshrc&lt;/code&gt; ）中来完成此操作：</target>
        </trans-unit>
        <trans-unit id="6a997f0bdfa31505b73b36af52ca54e4e80fbb12" translate="yes" xml:space="preserve">
          <source>You can do this in a Blaze component&amp;rsquo;s &lt;code&gt;onCreated()&lt;/code&gt; callback, like so:</source>
          <target state="translated">您可以在Blaze组件的 &lt;code&gt;onCreated()&lt;/code&gt; 回调中执行此操作，如下所示：</target>
        </trans-unit>
        <trans-unit id="f36db4ab7b9147091e249710cef30c56c5932bab" translate="yes" xml:space="preserve">
          <source>You can find a complete list of different available routes in the &lt;a href=&quot;https://github.com/meteor-useraccounts/flow-routing#routes&quot;&gt;documentation the &lt;code&gt;useraccounts:flow-routing&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">您可以&lt;a href=&quot;https://github.com/meteor-useraccounts/flow-routing#routes&quot;&gt;在 &lt;code&gt;useraccounts:flow-routing&lt;/code&gt; &lt;/a&gt;文档中找到不同可用路由的完整列表。</target>
        </trans-unit>
        <trans-unit id="9a55fbf2d641e4c9a755a2b5e40269f365086d17" translate="yes" xml:space="preserve">
          <source>You can find more information about remote debugging in the &lt;a href=&quot;https://developer.apple.com/library/safari/documentation/AppleApplications/Conceptual/Safari_Developer_Guide/&quot;&gt;Safari Developer Guide&lt;/a&gt;.</source>
          <target state="translated">您可以在《&lt;a href=&quot;https://developer.apple.com/library/safari/documentation/AppleApplications/Conceptual/Safari_Developer_Guide/&quot;&gt;Safari开发人员指南》中&lt;/a&gt;找到有关远程调试的更多信息。</target>
        </trans-unit>
        <trans-unit id="ad878ee63ef308bf3e69d3d1482b8bb5cb81181f" translate="yes" xml:space="preserve">
          <source>You can get more details on all the package commands in the &lt;a href=&quot;http://docs.meteor.com/#/full/meteorhelp&quot;&gt;Meteor Command line documentation&lt;/a&gt;.</source>
          <target state="translated">您可以在&lt;a href=&quot;http://docs.meteor.com/#/full/meteorhelp&quot;&gt;Meteor命令行文档中&lt;/a&gt;获取有关所有软件包命令的更多详细信息。</target>
        </trans-unit>
        <trans-unit id="0363ebd129bb08306b7f37eaa1513563789a23e9" translate="yes" xml:space="preserve">
          <source>You can import the dependency from within you package code in the same way that you would inside an &lt;a href=&quot;using-npm-packages#using-npm&quot;&gt;application&lt;/a&gt;:</source>
          <target state="translated">您可以按照与在&lt;a href=&quot;using-npm-packages#using-npm&quot;&gt;应用程序&lt;/a&gt;内部相同的方式从打包代码中导入依赖项：</target>
        </trans-unit>
        <trans-unit id="0f2b672405dfa4b775a2f8ae94d2a939150eb3c4" translate="yes" xml:space="preserve">
          <source>You can include other assets, such as fonts, icons or images, to your package using &lt;a href=&quot;http://docs.meteor.com/#/full/PackageAPI-addAssets&quot;&gt;&lt;code&gt;api.addAssets&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">您可以使用&lt;a href=&quot;http://docs.meteor.com/#/full/PackageAPI-addAssets&quot;&gt; &lt;code&gt;api.addAssets&lt;/code&gt; &lt;/a&gt;将其他资产（例如字体，图标或图像）添加到程序包中：</target>
        </trans-unit>
        <trans-unit id="d7f85cf2b5c56691bb7ac107c35e0b042bf6d157" translate="yes" xml:space="preserve">
          <source>You can install MongoDB on your own server&amp;mdash;one you own, rent, or a VPS (recommended) like &lt;a href=&quot;https://www.digitalocean.com/&quot;&gt;DigitalOcean&lt;/a&gt; or &lt;a href=&quot;https://amazonlightsail.com/&quot;&gt;Lightsail&lt;/a&gt;. As you can see from the above section, there are many aspects of database setup and maintenance that you have to take care of. For example, to get the best performance, you should choose a server with an &lt;a href=&quot;https://docs.mongodb.com/manual/administration/production-notes/#use-solid-state-disks-ssds&quot;&gt;SSD&lt;/a&gt; large enough to fit your data and with enough RAM to fit the working set (indexes + active documents) in memory.</source>
          <target state="translated">您可以在自己的服务器上安装MongoDB，也可以将其安装，租用或使用&lt;a href=&quot;https://www.digitalocean.com/&quot;&gt;DigitalOcean&lt;/a&gt;或&lt;a href=&quot;https://amazonlightsail.com/&quot;&gt;Lightsail之&lt;/a&gt;类的VPS（推荐）。从上一节中可以看到，必须注意数据库设置和维护的许多方面。例如，为了获得最佳性能，您应该选择一台服务器，该服务器应具有足够大的&lt;a href=&quot;https://docs.mongodb.com/manual/administration/production-notes/#use-solid-state-disks-ssds&quot;&gt;SSD&lt;/a&gt;来容纳数据，并具有足够的RAM来容纳内存中的工作集（索引+活动文档）。</target>
        </trans-unit>
        <trans-unit id="4348bb45d713a8d15ac0c352fb3b5b097b01b822" translate="yes" xml:space="preserve">
          <source>You can install the Sublime Text packages that integrate them into the text editor. It&amp;rsquo;s generally recommended to use Package Control to add these packages. If you already have that setup, you can just add the these packages by name; if not, click the instructions links:</source>
          <target state="translated">您可以安装将Sublime Text软件包集成到文本编辑器中的软件包。通常建议使用Package Control添加这些软件包。如果已经有了该设置，则只需按名称添加这些软件包即可。如果没有，请单击说明链接：</target>
        </trans-unit>
        <trans-unit id="992cbf137974fe8c5e9ec2abc1303415564d38c5" translate="yes" xml:space="preserve">
          <source>You can install version 4 from &lt;a href=&quot;https://nodejs.org/en/download/&quot;&gt;nodejs.org&lt;/a&gt; or version 5 with &lt;code&gt;brew install node&lt;/code&gt;. Then we can install the Chimp tool globally using:</source>
          <target state="translated">您可以从&lt;a href=&quot;https://nodejs.org/en/download/&quot;&gt;nodejs.org&lt;/a&gt;安装版本4 或使用 &lt;code&gt;brew install node&lt;/code&gt; 安装版本5 。然后，我们可以使用以下命令全局安装Chimp工具：</target>
        </trans-unit>
        <trans-unit id="c1b72fb128df42fc961796e6e6d09f01ca8aa297" translate="yes" xml:space="preserve">
          <source>You can learn more about arguments to helpers in &lt;a href=&quot;spacebars&quot;&gt;Spacebars&lt;/a&gt;.</source>
          <target state="translated">您可以在&lt;a href=&quot;spacebars&quot;&gt;Spacebars中&lt;/a&gt;了解有关给助手的参数的更多信息。</target>
        </trans-unit>
        <trans-unit id="9270f9a713e8f91d4e81ecf6e55a1eb6aa5eb27c" translate="yes" xml:space="preserve">
          <source>You can obtain a View object by calling &lt;a href=&quot;#Blaze-render&quot;&gt;&lt;code&gt;Blaze.render&lt;/code&gt;&lt;/a&gt; on a template, or by accessing &lt;a href=&quot;templates#Blaze-TemplateInstance-view&quot;&gt;&lt;code&gt;template.view&lt;/code&gt;&lt;/a&gt; on a template instance.</source>
          <target state="translated">您可以通过在模板上调用&lt;a href=&quot;#Blaze-render&quot;&gt; &lt;code&gt;Blaze.render&lt;/code&gt; &lt;/a&gt;或通过在模板实例上访问&lt;a href=&quot;templates#Blaze-TemplateInstance-view&quot;&gt; &lt;code&gt;template.view&lt;/code&gt; &lt;/a&gt;来获取View对象。</target>
        </trans-unit>
        <trans-unit id="47a8e9d55ad24a87920c2c18a1bb927d48212ab4" translate="yes" xml:space="preserve">
          <source>You can obtain a server running Ubuntu or Debian from many generic hosting providers and Meteor Up can SSH into your server with the keys you provide in the config. You can also &lt;a href=&quot;https://www.youtube.com/watch?v=WLGdXtZMmiI&quot;&gt;watch this video&lt;/a&gt; for a more complete walkthrough on how to do it.</source>
          <target state="translated">您可以从许多通用托管服务提供商处获得运行Ubuntu或Debian的服务器，Meteor Up可以使用您在配置中提供的密钥通过SSH进入您的服务器。您也可以&lt;a href=&quot;https://www.youtube.com/watch?v=WLGdXtZMmiI&quot;&gt;观看此视频&lt;/a&gt;，以获取有关如何操作的更完整的演练。</target>
        </trans-unit>
        <trans-unit id="2995106fad3a164c44aca51698ab73d2b15e7538" translate="yes" xml:space="preserve">
          <source>You can often work out &lt;em&gt;why&lt;/em&gt; a helper has re-run by tracing the source of the reactive invalidation:</source>
          <target state="translated">您通常可以通过跟踪反应性无效的来源来找出&lt;em&gt;为什么&lt;/em&gt;重新运行助手的&lt;em&gt;原因&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="cb41f49a9b4285630e5a878037ee396237fbbaae" translate="yes" xml:space="preserve">
          <source>You can only access &lt;code&gt;findAll&lt;/code&gt;, &lt;code&gt;find&lt;/code&gt;, &lt;code&gt;firstNode&lt;/code&gt;, and &lt;code&gt;lastNode&lt;/code&gt; from the &lt;code&gt;onRendered&lt;/code&gt; callback and event handlers, not from &lt;code&gt;onCreated&lt;/code&gt; and &lt;code&gt;onDestroyed&lt;/code&gt;, because they require the template instance to be in the DOM.</source>
          <target state="translated">您只能从 &lt;code&gt;onRendered&lt;/code&gt; 回调和事件处理程序（而不是 &lt;code&gt;onCreated&lt;/code&gt; 和 &lt;code&gt;onDestroyed&lt;/code&gt; )访问 &lt;code&gt;findAll&lt;/code&gt; ， &lt;code&gt;find&lt;/code&gt; ， &lt;code&gt;firstNode&lt;/code&gt; 和 &lt;code&gt;lastNode&lt;/code&gt; ，因为它们要求模板实例位于DOM中。</target>
        </trans-unit>
        <trans-unit id="4ef732022f03cd81ea0fb4da7fb108bbe19b4465" translate="yes" xml:space="preserve">
          <source>You can pass &lt;code&gt;--server-only&lt;/code&gt; to only build the server bundle. This allows you to build your app without installing the mobile SDKs on the build machine. This is useful if you use an automated deployment setup for instance. (If you remove the mobile platforms before building instead, hot code push will be disabled because the assets for Cordova included in the server bundle will not be generated.)</source>
          <target state="translated">您可以传递 &lt;code&gt;--server-only&lt;/code&gt; 仅构建服务器捆绑包。这样一来，您无需在构建机器上安装移动SDK即可构建应用。例如，如果您使用自动部署设置，这将很有用。（如果改为在构建之前删除移动平台，则将禁用热代码推送，因为将不会生成服务器捆绑包中包含的Cordova资产。）</target>
        </trans-unit>
        <trans-unit id="0f89febf1cc0cf2286f84dd4a884cdffa35a0bae" translate="yes" xml:space="preserve">
          <source>You can pass &lt;code&gt;METEOR_SESSION_FILE=token.json&lt;/code&gt; before &lt;code&gt;meteor login&lt;/code&gt; to generate a login session token so you don&amp;rsquo;t have to share your login credentials with third-party service providers.</source>
          <target state="translated">您可以在 &lt;code&gt;meteor login&lt;/code&gt; 之前传递 &lt;code&gt;METEOR_SESSION_FILE=token.json&lt;/code&gt; 来生成登录会话令牌，因此您不必与第三方服务提供商共享登录凭据。</target>
        </trans-unit>
        <trans-unit id="7830a21ba1d3347cb7951399fc28fac7f35d173c" translate="yes" xml:space="preserve">
          <source>You can pass an argument to &lt;code&gt;{{&amp;gt; Template.contentBlock}}&lt;/code&gt; or &lt;code&gt;{{&amp;gt;
Template.elseBlock}}&lt;/code&gt; to invoke it with a data context of your choice. You can also use &lt;code&gt;{{#if Template.contentBlock}}&lt;/code&gt; to see if the current template was invoked as a block helper rather than an inclusion.</source>
          <target state="translated">您可以将参数传递到 &lt;code&gt;{{&amp;gt; Template.contentBlock}}&lt;/code&gt; 或 &lt;code&gt;{{&amp;gt; Template.elseBlock}}&lt;/code&gt; 以使用您选择的数据上下文来调用它。您还可以使用 &lt;code&gt;{{#if Template.contentBlock}}&lt;/code&gt; 来查看当前模板是否作为块帮助程序而不是包含函数被调用。</target>
        </trans-unit>
        <trans-unit id="c39cad7f669d627f6f48626c10d710892e6935c4" translate="yes" xml:space="preserve">
          <source>You can pass in the flag &lt;code&gt;--packages-only&lt;/code&gt; to update only the packages, and not the release itself. Similarly, you can pass in names of packages (&lt;code&gt;meteor update foo:kittens baz:cats&lt;/code&gt;) to only update specific packages.</source>
          <target state="translated">您可以传递 &lt;code&gt;--packages-only&lt;/code&gt; 标志来仅更新软件包，而不更新发行版本身。同样，您可以传入软件包名称（ &lt;code&gt;meteor update foo:kittens baz:cats&lt;/code&gt; ）以仅更新特定软件包。</target>
        </trans-unit>
        <trans-unit id="2670efad128c2847df08821969530c5982124949" translate="yes" xml:space="preserve">
          <source>You can pass settings to your app through a &lt;em&gt;settings file&lt;/em&gt; or an &lt;em&gt;environment variable&lt;/em&gt;. Most of your app settings should be in JSON files that you pass in when starting your app. You can start your app with a settings file by passing the &lt;code&gt;--settings&lt;/code&gt; flag:</source>
          <target state="translated">您可以通过设置&lt;em&gt;文件&lt;/em&gt;或&lt;em&gt;环境变量&lt;/em&gt;将设置传递给您的应用。您的大多数应用设置应位于启动应用时传递的JSON文件中。您可以通过传递 &lt;code&gt;--settings&lt;/code&gt; 标志来使用设置文件启动您的应用：</target>
        </trans-unit>
        <trans-unit id="acb1a747720b365b65f3ef3ee4fd8e5cf9afb54d" translate="yes" xml:space="preserve">
          <source>You can provide arguments to a helper like &lt;code&gt;checkedClass&lt;/code&gt; by simply placing the argument after the helper call, as in: &lt;code&gt;{{checkedClass todo true 'checked'}}&lt;/code&gt;. You can also provide a list of named keyword arguments to a helper with &lt;code&gt;{{checkedClass todo noClass=true classname='checked'}}&lt;/code&gt;. When you pass keyword arguments, you need to read them off of the &lt;code&gt;hash&lt;/code&gt; property of the final argument. Here&amp;rsquo;s how it would look for the example we just saw:</source>
          <target state="translated">您可以通过简单地将参数放在帮助程序调用之后，将参数提供给 &lt;code&gt;checkedClass&lt;/code&gt; 这样的帮助程序，例如： &lt;code&gt;{{checkedClass todo true 'checked'}}&lt;/code&gt; 。您还可以使用 &lt;code&gt;{{checkedClass todo noClass=true classname='checked'}}&lt;/code&gt; 向助手提供命名关键字参数列表。传递关键字参数时，需要从最终参数的 &lt;code&gt;hash&lt;/code&gt; 属性中读取它们。这就是我们刚才看到的示例的外观：</target>
        </trans-unit>
        <trans-unit id="d344814d6de6796e279884e12eed7f40b8c8feb2" translate="yes" xml:space="preserve">
          <source>You can read about the full syntax &lt;a href=&quot;../api/spacebars&quot;&gt;in the Spacebars&lt;/a&gt;. In this section we&amp;rsquo;ll attempt to cover some of the important details beyond just the syntax.</source>
          <target state="translated">您可以&lt;a href=&quot;../api/spacebars&quot;&gt;在空格键中&lt;/a&gt;阅读完整的语法。在本节中，我们将尝试覆盖语法以外的一些重要细节。</target>
        </trans-unit>
        <trans-unit id="39f1fe3fe0f293991aba353817d2fa496b238d62" translate="yes" xml:space="preserve">
          <source>You can read about the module system in detail in the &lt;a href=&quot;https://docs.meteor.com/#/full/modules&quot;&gt;&lt;code&gt;modules&lt;/code&gt; package README&lt;/a&gt;. This package is automatically included in every new Meteor app as part of the &lt;a href=&quot;https://docs.meteor.com/#/full/ecmascript&quot;&gt;&lt;code&gt;ecmascript&lt;/code&gt; meta-package&lt;/a&gt;, so most apps won&amp;rsquo;t need to do anything to start using modules right away.</source>
          <target state="translated">您可以在&lt;a href=&quot;https://docs.meteor.com/#/full/modules&quot;&gt; &lt;code&gt;modules&lt;/code&gt; 包README&lt;/a&gt;中详细了解模块系统。此软件包作为&lt;a href=&quot;https://docs.meteor.com/#/full/ecmascript&quot;&gt; &lt;code&gt;ecmascript&lt;/code&gt; 元软件包的&lt;/a&gt;一部分自动包含在每个新的Meteor应用程序中，因此大多数应用程序无需做任何事情即可立即开始使用模块。</target>
        </trans-unit>
        <trans-unit id="677ed86f4653021adb6464050b4696cd107ee3c9" translate="yes" xml:space="preserve">
          <source>You can read more about testing in Meteor in the &lt;a href=&quot;testing&quot;&gt;Testing article&lt;/a&gt;.</source>
          <target state="translated">您可以在&amp;ldquo; &lt;a href=&quot;testing&quot;&gt;测试&amp;rdquo;文章中&lt;/a&gt;阅读有关流星测试的更多信息。</target>
        </trans-unit>
        <trans-unit id="cac7c58eebbebcfee2eda69b304193fbfc66655e" translate="yes" xml:space="preserve">
          <source>You can read more about views in the &lt;a href=&quot;../api/blaze#Blaze-View&quot;&gt;Blaze View&lt;/a&gt;.</source>
          <target state="translated">您可以在&lt;a href=&quot;../api/blaze#Blaze-View&quot;&gt;Blaze视图中&lt;/a&gt;阅读有关视图的更多信息。</target>
        </trans-unit>
        <trans-unit id="21588630855ee60edffdf41d2ca535f1e8042ae6" translate="yes" xml:space="preserve">
          <source>You can read this &lt;a href=&quot;https://www.okgrow.com/posts/mongodb-atlas-setup&quot;&gt;detailed guide&lt;/a&gt; by OK GROW! for step-by-step instructions to deploying a production ready MongoDB database on MongoDB Atlas.</source>
          <target state="translated">您可以通过OK GROW 阅读此&lt;a href=&quot;https://www.okgrow.com/posts/mongodb-atlas-setup&quot;&gt;详细指南&lt;/a&gt;！有关在MongoDB Atlas上部署生产就绪的MongoDB数据库的分步说明。</target>
        </trans-unit>
        <trans-unit id="ec22f3709b6dd7897c4dc5c586588309576d5758" translate="yes" xml:space="preserve">
          <source>You can remove a previously added plugin using &lt;code&gt;meteor remove&lt;/code&gt;:</source>
          <target state="translated">您可以使用 &lt;code&gt;meteor remove&lt;/code&gt; 删除以前添加的插件：</target>
        </trans-unit>
        <trans-unit id="f6df52778bbe12b2b5233490bb56338c1012b18d" translate="yes" xml:space="preserve">
          <source>You can render a component hierarchy to the DOM using the &lt;code&gt;react-dom&lt;/code&gt; package:</source>
          <target state="translated">您可以使用 &lt;code&gt;react-dom&lt;/code&gt; 包将组件层次结构呈现给DOM ：</target>
        </trans-unit>
        <trans-unit id="eb8d291d4800eeca1965120be1b6b109c90338d3" translate="yes" xml:space="preserve">
          <source>You can see a proof of concept of this architecture in an &lt;a href=&quot;https://github.com/tmeasday/multi-app-accounts&quot;&gt;example repository&lt;/a&gt;.</source>
          <target state="translated">您可以在&lt;a href=&quot;https://github.com/tmeasday/multi-app-accounts&quot;&gt;示例存储库中&lt;/a&gt;看到此体系结构的概念证明。</target>
        </trans-unit>
        <trans-unit id="d46847fb3216d60b044b6960139d813e62a86cdb" translate="yes" xml:space="preserve">
          <source>You can see that although the situation is a little complex, it&amp;rsquo;s also completely determined by the arguments and thus very much testable. A component style guide helps immeasurably in seeing all these states easily! In Galaxy we have each state in our style guide for each of the lists of our app and we can ensure all work as expected and appear correctly:</source>
          <target state="translated">您可以看到，尽管情况有点复杂，但它也完全由参数确定，因此可以测试。组件样式指南可帮助您轻松轻松地查看所有这些状态！在Galaxy中，我们的样式指南中针对应用程序的每个列表都有每个状态，我们可以确保所有工作均按预期进行并正确显示：</target>
        </trans-unit>
        <trans-unit id="a344188b17a4c7783bc4cfc054ff302f93a67981" translate="yes" xml:space="preserve">
          <source>You can see that this Method does a &lt;em&gt;very specific thing&lt;/em&gt; - it just makes a single list private. An alternative would have been to have a Method called &lt;code&gt;setPrivacy&lt;/code&gt;, which could set the list to private or public, but it turns out that in this particular app the security considerations for the two related operations - &lt;code&gt;makePrivate&lt;/code&gt; and &lt;code&gt;makePublic&lt;/code&gt; - are very different. By splitting our operations into different Methods, we make each one much clearer. It&amp;rsquo;s obvious from the above Method definition which arguments we accept, what security checks we perform, and what operations we do on the database.</source>
          <target state="translated">您可以看到此方法做了&lt;em&gt;非常特定的事情&lt;/em&gt; -它只是将单个列表设为私有。一种替代方法是使用一种名为 &lt;code&gt;setPrivacy&lt;/code&gt; 的方法，该方法可以将列表设置为私有或公共，但是事实证明，在此特定应用中，两个相关操作（ &lt;code&gt;makePrivate&lt;/code&gt; 和 &lt;code&gt;makePublic&lt;/code&gt; )的安全注意事项非常不同。通过将操作分成不同的方法，我们使每个方法都更加清晰。从上面的方法定义中可以明显看出，我们接受哪些参数，我们执行哪些安全检查以及对数据库执行哪些操作。</target>
        </trans-unit>
        <trans-unit id="67994359c59c850118111c14804dfe397f0d8e8f" translate="yes" xml:space="preserve">
          <source>You can see that with relatively little code we&amp;rsquo;ve managed to restrict the format of a list significantly. You can read more about more complex things that can be done with schemas in the &lt;a href=&quot;http://atmospherejs.com/aldeed/simple-schema&quot;&gt;Simple Schema docs&lt;/a&gt;.</source>
          <target state="translated">您可以看到，使用相对较少的代码，我们已经成功地限制了列表的格式。您可以在&amp;ldquo; &lt;a href=&quot;http://atmospherejs.com/aldeed/simple-schema&quot;&gt;简单模式&amp;rdquo;文档中&lt;/a&gt;阅读更多有关可以使用模式完成的复杂事情的信息。</target>
        </trans-unit>
        <trans-unit id="f24de5f82ac264207f621dbd3478c799651b6cd5" translate="yes" xml:space="preserve">
          <source>You can share your package with others by publishing it to the npm registry. While most packages are public, you can control who may view and use your package with &lt;a href=&quot;https://docs.npmjs.com/private-modules/intro&quot;&gt;private modules&lt;/a&gt;).</source>
          <target state="translated">您可以通过将软件包发布到npm注册表来与他人共享软件包。尽管大多数软件包都是公开的，但您可以控制谁可以通过&lt;a href=&quot;https://docs.npmjs.com/private-modules/intro&quot;&gt;私有模块&lt;/a&gt;查看和使用您的软件包。</target>
        </trans-unit>
        <trans-unit id="87be8aa1162e791406bf47cce0fe0a2ae8a5b729" translate="yes" xml:space="preserve">
          <source>You can specify multiple targets, so &lt;code&gt;meteor run ios android-device&lt;/code&gt; will run the app on both the iOS Simulator and an Android device for example.</source>
          <target state="translated">您可以指定多个目标，例如， &lt;code&gt;meteor run ios android-device&lt;/code&gt; 将在iOS模拟器和Android设备上运行该应用程序。</target>
        </trans-unit>
        <trans-unit id="4d08bf500dca58dc82a365871bba78de6c21404a" translate="yes" xml:space="preserve">
          <source>You can take the above UI a step further by showing placeholders whilst you wait for the data to load. This is a UX pattern that has been pioneered by Facebook which gives the user a more solid impression of what data is coming down the wire. It also prevents parts of the UI from moving around when data loads, if you can make the placeholder have the same dimensions as the final element.</source>
          <target state="translated">你可以在等待数据加载时显示占位符,从而使上述UI更进一步。这是Facebook开创的一种用户体验模式,它让用户对即将到来的数据有了更深刻的印象。如果你能让占位符的尺寸与最终元素的尺寸相同,它还能防止数据加载时UI的部分移动。</target>
        </trans-unit>
        <trans-unit id="b7f98eb30614a882d79daa6d32c8320a50158703" translate="yes" xml:space="preserve">
          <source>You can then access these files from the client from a URL &lt;code&gt;/packages/username_my-package/font/OpenSans-Regular-webfont.eot&lt;/code&gt; or from the server using the &lt;a href=&quot;http://docs.meteor.com/#/full/assets_getText&quot;&gt;Assets API&lt;/a&gt;.</source>
          <target state="translated">然后，您可以从客户端通过URL &lt;code&gt;/packages/username_my-package/font/OpenSans-Regular-webfont.eot&lt;/code&gt; 访问这些文件，也可以使用&lt;a href=&quot;http://docs.meteor.com/#/full/assets_getText&quot;&gt;Assets API&lt;/a&gt;从服务器访问这些文件。</target>
        </trans-unit>
        <trans-unit id="f5acc6e398770bfc30afc03d44106e7b8e78f17e" translate="yes" xml:space="preserve">
          <source>You can then get the data back out of Flow Router using &lt;a href=&quot;http://docs.meteor.com/#/full/ejson_parse&quot;&gt;&lt;code&gt;EJSON.parse()&lt;/code&gt;&lt;/a&gt;. Note that Flow Router does the URL decoding for you automatically:</source>
          <target state="translated">然后，您可以使用&lt;a href=&quot;http://docs.meteor.com/#/full/ejson_parse&quot;&gt; &lt;code&gt;EJSON.parse()&lt;/code&gt; &lt;/a&gt;从Flow Router中取回数据。请注意，Flow Router自动为您执行URL解码：</target>
        </trans-unit>
        <trans-unit id="01dd8fbee8fa942fc00d0b0c2bc37f5b7f748b58" translate="yes" xml:space="preserve">
          <source>You can then run the application by invoking &lt;code&gt;node&lt;/code&gt; with a &lt;code&gt;ROOT_URL&lt;/code&gt;, and &lt;code&gt;MONGO_URL&lt;/code&gt;. These instructions are also available in the &lt;code&gt;README&lt;/code&gt; file found in the root of the bundle you built above.</source>
          <target state="translated">然后，您可以通过调用带有 &lt;code&gt;ROOT_URL&lt;/code&gt; 和 &lt;code&gt;MONGO_URL&lt;/code&gt; 的 &lt;code&gt;node&lt;/code&gt; 来运行该应用程序。这些说明也位于您在上面构建的捆绑软件根目录下的 &lt;code&gt;README&lt;/code&gt; 文件中。</target>
        </trans-unit>
        <trans-unit id="d6f1b08b6ac58a8312bbfcc767daabb4523afb12" translate="yes" xml:space="preserve">
          <source>You can use (1) or (2) to override the version from Atmosphere. You can even do this to load patched versions of Meteor core packages - just copy the code of the package from &lt;a href=&quot;https://github.com/meteor/meteor/tree/devel/packages&quot;&gt;Meteor&amp;rsquo;s GitHub repository&lt;/a&gt;, and edit away.</source>
          <target state="translated">您可以使用（1）或（2）覆盖Atmosphere的版本。您甚至可以执行此操作以加载修补版的Meteor核心软件包-只需从&lt;a href=&quot;https://github.com/meteor/meteor/tree/devel/packages&quot;&gt;Meteor的GitHub存储库中&lt;/a&gt;复制该软件包的代码，然后进行编辑即可。</target>
        </trans-unit>
        <trans-unit id="abe82bb58f5585431c4fb1a02e95ab64101879b1" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;#writingpackages&quot;&gt;local packages&lt;/a&gt; to define custom build plugins for your app, with one caveat. In published packages, build plugins are already bundled with their transitive dependencies. So if you want a dependency of a build plugin to be satisfied by a local package, you must use a local copy of the package that defines the plugin (even if you make no changes to that package) so that Meteor will pick up the local dependency.</source>
          <target state="translated">您可以使用&lt;a href=&quot;#writingpackages&quot;&gt;本地包&lt;/a&gt;为您的应用程序定义自定义构建插件，但有一项警告。在已发布的软件包中，构建插件已经与它们的传递依赖项捆绑在一起。因此，如果您希望本地软件包满足构建插件的依赖性，则必须使用定义该插件的软件包本地副本（即使您未对该软件包进行任何更改），这样Meteor才能选择本地软件包。依赖性。</target>
        </trans-unit>
        <trans-unit id="719484cd6caa5518b91e86f8f54edebcfe7b939d" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;https://github.com/meteor/chromatic&quot;&gt;Chromatic component explorer&lt;/a&gt; in your Meteor + React app with &lt;code&gt;meteor add mdg:chromatic&lt;/code&gt;. Similar projects built in React are &lt;a href=&quot;http://www.uiharness.com/&quot;&gt;UI Harness&lt;/a&gt; by Phil Cockfield and &lt;a href=&quot;https://github.com/kadirahq/react-storybook&quot;&gt;React Storybook&lt;/a&gt; by Arunoda Susiripala.</source>
          <target state="translated">您可以在Meteor + React应用程序中使用&lt;a href=&quot;https://github.com/meteor/chromatic&quot;&gt;Chromatic组件浏览器&lt;/a&gt;，并使用 &lt;code&gt;meteor add mdg:chromatic&lt;/code&gt; 。在React中构建的类似项目是Phil Cockfield的&lt;a href=&quot;http://www.uiharness.com/&quot;&gt;UI Harness&lt;/a&gt;和Arunoda Susiripala的&lt;a href=&quot;https://github.com/kadirahq/react-storybook&quot;&gt;React Storybook&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a7b55ec6860cbf09c67efb1cbe8e061e27768ad2" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;this.autorun&lt;/code&gt; from an &lt;a href=&quot;templates#Template-onCreated&quot;&gt;&lt;code&gt;onCreated&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;templates#Template-onRendered&quot;&gt;&lt;code&gt;onRendered&lt;/code&gt;&lt;/a&gt; callback to reactively update the DOM or the template instance. You can use &lt;code&gt;Template.currentData()&lt;/code&gt; inside of this callback to access reactive data context of the template instance. The Computation is automatically stopped when the template is destroyed.</source>
          <target state="translated">您可以从&lt;a href=&quot;templates#Template-onCreated&quot;&gt; &lt;code&gt;onCreated&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;templates#Template-onRendered&quot;&gt; &lt;code&gt;onRendered&lt;/code&gt; &lt;/a&gt;回调中使用 &lt;code&gt;this.autorun&lt;/code&gt; 来动态更新DOM或模板实例。您可以在此回调内部使用 &lt;code&gt;Template.currentData()&lt;/code&gt; 来访问模板实例的反应数据上下文。模板销毁后，计算将自动停止。</target>
        </trans-unit>
        <trans-unit id="def8b86be88e1a4fba9288b0f7a13fb4141a9c59" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;this.subscribe&lt;/code&gt; from an &lt;a href=&quot;templates#Template-onCreated&quot;&gt;&lt;code&gt;onCreated&lt;/code&gt;&lt;/a&gt; callback to specify which data publications this template depends on. The subscription is automatically stopped when the template is destroyed.</source>
          <target state="translated">您可以从&lt;a href=&quot;templates#Template-onCreated&quot;&gt; &lt;code&gt;onCreated&lt;/code&gt; &lt;/a&gt;回调中使用 &lt;code&gt;this.subscribe&lt;/code&gt; 来指定此模板依赖的数据发布。模板销毁后，订阅将自动停止。</target>
        </trans-unit>
        <trans-unit id="625bdbdf3540913a4eaf0e9ae255ce21f5a4b00b" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;update&lt;/code&gt; to perform a Mongo upsert by setting the &lt;code&gt;upsert&lt;/code&gt; option to true. You can also use the &lt;a href=&quot;#upsert&quot;&gt;&lt;code&gt;upsert&lt;/code&gt;&lt;/a&gt; method to perform an upsert that returns the &lt;code&gt;_id&lt;/code&gt; of the document that was inserted (if there was one) in addition to the number of affected documents.</source>
          <target state="translated">您可以通过将 &lt;code&gt;upsert&lt;/code&gt; 选项设置为true 来使用 &lt;code&gt;update&lt;/code&gt; 执行Mongo upsert 。您还可以使用&lt;a href=&quot;#upsert&quot;&gt; &lt;code&gt;upsert&lt;/code&gt; &lt;/a&gt;方法执行upsert，该upsert 除了影响的文档数外，还返回插入的文档的 &lt;code&gt;_id&lt;/code&gt; （如果有的话）。</target>
        </trans-unit>
        <trans-unit id="367cb316ce142085cf3595052ca4c41bb3735b2b" translate="yes" xml:space="preserve">
          <source>You can use a special variable &lt;code&gt;@index&lt;/code&gt; in the body of &lt;code&gt;#each&lt;/code&gt; to get the 0-based index of the currently rendered value in the sequence.</source>
          <target state="translated">您可以在 &lt;code&gt;#each&lt;/code&gt; 主体中使用特殊变量 &lt;code&gt;@index&lt;/code&gt; 来获取序列中当前呈现值的从0开始的索引。</target>
        </trans-unit>
        <trans-unit id="49c3186f6fceef6b76bf646f03fdbf62e5da70d6" translate="yes" xml:space="preserve">
          <source>You can use any field name other than those &lt;a href=&quot;http://docs.meteor.com/api/accounts.html#Meteor-users&quot;&gt;used by the Accounts system&lt;/a&gt;.</source>
          <target state="translated">您可以使用&lt;a href=&quot;http://docs.meteor.com/api/accounts.html#Meteor-users&quot;&gt;&amp;ldquo;帐户&amp;rdquo;系统&lt;/a&gt;使用的任何其他字段名称。</target>
        </trans-unit>
        <trans-unit id="69d614007a524a4d41a28ee9d3ec31704c6b72fe" translate="yes" xml:space="preserve">
          <source>You can use the application by pointing your web browser at &lt;a href=&quot;http://localhost:3000&quot;&gt;localhost:3000&lt;/a&gt;. No Internet connection is required.</source>
          <target state="translated">您可以通过将Web浏览器指向&lt;a href=&quot;http://localhost:3000&quot;&gt;localhost：3000&lt;/a&gt;来使用该应用程序。不需要互联网连接。</target>
        </trans-unit>
        <trans-unit id="1d6f0840a85fe3661c42350e24c5642aadd13d23" translate="yes" xml:space="preserve">
          <source>You can use the application server bundle to host a Meteor application on your own server, instead of deploying to Galaxy. You will have to deal with logging, monitoring, backups, load-balancing, etc, all of which we handle for you if you use Galaxy.</source>
          <target state="translated">您可以使用应用服务器捆绑包来在您自己的服务器上托管Meteor应用,而不是部署到Galaxy。您将不得不处理日志、监控、备份、负载平衡等问题,如果您使用Galaxy,我们将为您处理所有这些问题。</target>
        </trans-unit>
        <trans-unit id="693e68c4cc153f63f032100b0ef2420caddc6788" translate="yes" xml:space="preserve">
          <source>You can use the official search at &lt;a href=&quot;https://www.npmjs.com/&quot;&gt;npmjs.com&lt;/a&gt; or see results sorted by package quality (code quality, maintenance status, development velocity, popularity etc.) at &lt;a href=&quot;https://npms.io/&quot;&gt;npms.io&lt;/a&gt;. There are also sites that search certain types of packages, like &lt;a href=&quot;https://js.coach/&quot;&gt;js.coach&lt;/a&gt;&amp;lsquo;s &lt;a href=&quot;https://js.coach/react&quot;&gt;React&lt;/a&gt; and &lt;a href=&quot;https://js.coach/react-native&quot;&gt;React Native&lt;/a&gt; sections.</source>
          <target state="translated">您可以在&lt;a href=&quot;https://www.npmjs.com/&quot;&gt;npmjs.com上&lt;/a&gt;使用官方搜索，也可以在npms.io上查看按软件包质量（代码质量，维护状态，开发速度，受欢迎程度等）&lt;a href=&quot;https://npms.io/&quot;&gt;排序的结果&lt;/a&gt;。也有一些网站搜索某些类型的软件包，例如&lt;a href=&quot;https://js.coach/&quot;&gt;js.coach&lt;/a&gt;的&lt;a href=&quot;https://js.coach/react&quot;&gt;React&lt;/a&gt;和&lt;a href=&quot;https://js.coach/react-native&quot;&gt;React Native&lt;/a&gt;部分。</target>
        </trans-unit>
        <trans-unit id="e2e397dc59d62c9ff4b2d7ce9e37575739e480e5" translate="yes" xml:space="preserve">
          <source>You can write apps with native UI elements in JavaScript using &lt;a href=&quot;https://facebook.github.io/react-native/&quot;&gt;React Native&lt;/a&gt;. For the most recent information on how to use React Native with Meteor, see &lt;a href=&quot;https://github.com/spencercarli/react-native-meteor-index&quot;&gt;this reference&lt;/a&gt;.</source>
          <target state="translated">您可以使用&lt;a href=&quot;https://facebook.github.io/react-native/&quot;&gt;React Native&lt;/a&gt;在JavaScript中使用本机UI元素编写应用程序。有关如何将React Native与Meteor一起使用的最新信息，请参阅&lt;a href=&quot;https://github.com/spencercarli/react-native-meteor-index&quot;&gt;此参考资料&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ca897cb3ea8d43f3dac013232817716ef78944b4" translate="yes" xml:space="preserve">
          <source>You can&amp;rsquo;t do security at the rendering layer</source>
          <target state="translated">您无法在渲染层进行安全保护</target>
        </trans-unit>
        <trans-unit id="d161470ddf8dd7abd3373375e088cf4830cbd38a" translate="yes" xml:space="preserve">
          <source>You configure these images with &lt;a href=&quot;http://docs.meteor.com/api/mobile-config.html#App-icons&quot;&gt;&lt;code&gt;App.icons&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;http://docs.meteor.com/api/mobile-config.html#App-launchScreens&quot;&gt;&lt;code&gt;App.launchScreens&lt;/code&gt;&lt;/a&gt;, which both use names to refer to the various supported image sizes (see API documentation).</source>
          <target state="translated">您可以使用&lt;a href=&quot;http://docs.meteor.com/api/mobile-config.html#App-icons&quot;&gt; &lt;code&gt;App.icons&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;http://docs.meteor.com/api/mobile-config.html#App-launchScreens&quot;&gt; &lt;code&gt;App.launchScreens&lt;/code&gt; &lt;/a&gt;配置这些图像，这两个图像都使用名称来引用各种受支持的图像大小（请参阅API文档）。</target>
        </trans-unit>
        <trans-unit id="a96fd67b2ef2cc7b602721cd756aad2ccde351f8" translate="yes" xml:space="preserve">
          <source>You don&amp;rsquo;t have to put all your method definitions into a single &lt;code&gt;Meteor.methods&lt;/code&gt; call; you may call it multiple times, as long as each method has a unique name.</source>
          <target state="translated">您不必将所有方法定义放入单个 &lt;code&gt;Meteor.methods&lt;/code&gt; 调用中；您可以多次调用它，只要每个方法都有唯一的名称即可。</target>
        </trans-unit>
        <trans-unit id="a16d7b01173b10b72630fe0e9d73f4211139f847" translate="yes" xml:space="preserve">
          <source>You don&amp;rsquo;t need to use the &lt;code&gt;ecmascript&lt;/code&gt; package or ES2015 syntax in order to use modules. Just like Node.js in the pre-ES2015 days, you can use &lt;code&gt;require&lt;/code&gt; and &lt;code&gt;module.exports&lt;/code&gt;&amp;mdash;that&amp;rsquo;s what the &lt;code&gt;import&lt;/code&gt; and &lt;code&gt;export&lt;/code&gt; statements are compiling into, anyway.</source>
          <target state="translated">您无需使用 &lt;code&gt;ecmascript&lt;/code&gt; 包或ES2015语法即可使用模块。就像ES2015之前的Node.js一样，您可以使用 &lt;code&gt;require&lt;/code&gt; 和 &lt;code&gt;module.exports&lt;/code&gt; －无论如何，这就是 &lt;code&gt;import&lt;/code&gt; 和 &lt;code&gt;export&lt;/code&gt; 语句要编译到的内容。</target>
        </trans-unit>
        <trans-unit id="35340523a28f631b7ad9ff725dba3eac18ec03b4" translate="yes" xml:space="preserve">
          <source>You install plugins from the local file system by specifying a &lt;code&gt;file://&lt;/code&gt; URL, which gets interpreted relative to the project directory:</source>
          <target state="translated">您可以通过指定 &lt;code&gt;file://&lt;/code&gt; URL 从本地文件系统安装插件，该URL相对于项目目录进行解释：</target>
        </trans-unit>
        <trans-unit id="7f9de81df1636001e3313767d2c4f81a6f21e25d" translate="yes" xml:space="preserve">
          <source>You know exactly what dependencies you need to provide for them to work in different environments.</source>
          <target state="translated">你清楚地知道你需要为它们提供哪些依赖关系才能在不同的环境中工作。</target>
        </trans-unit>
        <trans-unit id="7230ad8e312e005df99bc928963df2b191b25e59" translate="yes" xml:space="preserve">
          <source>You may also need to click &amp;lsquo;Allow&amp;rsquo; on the &lt;code&gt;Allow USB debugging?&lt;/code&gt; prompt on the device.</source>
          <target state="translated">您可能还需要在&amp;ldquo; &lt;code&gt;Allow USB debugging?&lt;/code&gt; &amp;rdquo;上单击&amp;ldquo;允许&amp;rdquo; 。在设备上提示。</target>
        </trans-unit>
        <trans-unit id="b7dcf010c68b008bb21d0fa44d110cd195c477ae" translate="yes" xml:space="preserve">
          <source>You may also pass the &lt;code&gt;--release&lt;/code&gt; flag to act as an override to update to a specific release. This is an override: if it cannot find compatible versions of packages, it will log a warning, but perform the update anyway. This will only change your package versions if necessary.</source>
          <target state="translated">您还可以传递 &lt;code&gt;--release&lt;/code&gt; 标志以用作覆盖以更新到特定版本。这是一个替代：如果找不到兼容的软件包版本，它将记录警告，但仍然执行更新。这只会在必要时更改您的软件包版本。</target>
        </trans-unit>
        <trans-unit id="5d633e2969e79a6a5d2823a964f03c203967aa6f" translate="yes" xml:space="preserve">
          <source>You may be aware that WKWebView on iOS 8 doesn&amp;rsquo;t allow files to be loaded from the local filesystem. This is problematic for standard Cordova apps, because these use &lt;code&gt;file://&lt;/code&gt; URLs to load the app. But because the Meteor integration serves assets from &lt;code&gt;localhost&lt;/code&gt;, WKWebView works fine on both iOS 8 and iOS 9.</source>
          <target state="translated">您可能知道，iOS 8上的WKWebView不允许从本地文件系统加载文件。这对于标准Cordova应用程序是有问题的，因为这些应用程序使用 &lt;code&gt;file://&lt;/code&gt; URL来加载应用程序。但是，由于Meteor集成服务来自 &lt;code&gt;localhost&lt;/code&gt; 资产，因此WKWebView在iOS 8和iOS 9上均可正常运行。</target>
        </trans-unit>
        <trans-unit id="03a010eb4ddfc7f27147ebb347fbb6b90ecb2990" translate="yes" xml:space="preserve">
          <source>You may have heard of PhoneGap, and wonder how it relates to Cordova. PhoneGap is a product name used by Adobe since 2011, when they acquired a company called Nitobi, the original creators of what is now the Cordova project. When Adobe donated the code to Apache in 2012 to ensure a more open governance model, the open source project was rebranded as Cordova. PhoneGap is now one of the distributions of Cordova, on a par with other distributions like Ionic, Telerik, Monaca, or Intel XDK. These distributions mainly differ in tooling and integration with cloud services, but they share the underlying platform and plugins. Meteor could also be considered a Cordova distribution.</source>
          <target state="translated">你可能听说过PhoneGap,并想知道它与Cordova的关系。PhoneGap是Adobe自2011年以来使用的一个产品名称,当时他们收购了一家名为Nitobi的公司,也就是现在Cordova项目的原始创建者。当Adobe在2012年将代码捐赠给Apache以确保更开放的治理模式时,这个开源项目被重新命名为Cordova。PhoneGap现在是Cordova的发行版之一,与Ionic、Telerik、Monaca或Intel XDK等其他发行版平起平坐。这些发行版主要是在工具和与云服务的集成方面有所不同,但它们共享底层平台和插件。Meteor也可以被认为是Cordova发行版。</target>
        </trans-unit>
        <trans-unit id="9c952d45a07adebdf65651853743470414f4a2cd" translate="yes" xml:space="preserve">
          <source>You may notice in the example Method above, we didn&amp;rsquo;t need to write any callbacks when interacting with MongoDB, but the Method still has the non-blocking properties that people associate with Node.js and callback-style code. Meteor uses a coroutine library called &lt;a href=&quot;https://github.com/laverdet/node-fibers&quot;&gt;Fibers&lt;/a&gt; to enable you to write code that uses return values and throws errors, and avoid dealing with lots of nested callbacks.</source>
          <target state="translated">您可能会注意到，在上面的示例方法中，当与MongoDB交互时，我们不需要编写任何回调，但是Method仍然具有人们与Node.js和回调样式代码相关联的非阻塞属性。Meteor使用一个名为&lt;a href=&quot;https://github.com/laverdet/node-fibers&quot;&gt;Fibers&lt;/a&gt;的协程库来使您能够编写使用返回值并引发错误的代码，并避免处理大量嵌套的回调。</target>
        </trans-unit>
        <trans-unit id="439bddc16ca01d35482ca36832a9f9a0a7bbb438" translate="yes" xml:space="preserve">
          <source>You may notice that, with the exception of Meteor platform packages, all packages on Atmosphere have a name of the form &lt;code&gt;prefix:package-name&lt;/code&gt;. The prefix is the Meteor Developer username of the organization or user that published the package. Meteor uses such a convention for package naming to make sure that it&amp;rsquo;s clear who has published a certain package, and to avoid an ad-hoc namespacing convention. Meteor platform packages do not have any &lt;code&gt;prefix:&lt;/code&gt;.</source>
          <target state="translated">您可能会注意到，除了Meteor平台软件包之外，Atmosphere上的所有软件包都具有 &lt;code&gt;prefix:package-name&lt;/code&gt; 形式的名称。前缀是发布软件包的组织或用户的Meteor Developer用户名。流星使用这样的约定来进行程序包命名，以确保清楚谁发布了特定程序包，并避免临时命名空间约定。流星平台软件包没有任何 &lt;code&gt;prefix:&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="480387cb61cb7ba5a817f84602da8f194071d532" translate="yes" xml:space="preserve">
          <source>You may want to override the compatibility version if you want hot code push to reach older apps that don&amp;rsquo;t have the latest version of your native code from the app store. Let&amp;rsquo;s say you&amp;rsquo;re developing an iOS app, you have the plugin &lt;code&gt;cordova-plugin-camera@2.4.0&lt;/code&gt;, and your app has the compatibility version pictured above, &lt;code&gt;3ed5b9318b2916b595f7721759ead4d708dfbd46&lt;/code&gt;. If you were to update to version &lt;code&gt;2.4.1&lt;/code&gt; of &lt;code&gt;cordova-plugin-camera&lt;/code&gt;, your server would generate a new compatibility version and your users&amp;rsquo; apps would stop receiving hot code pushes. However, you can tell your server to use the old compatilibity version:</source>
          <target state="translated">如果您希望热代码推送到较旧的应用，而这些较旧的应用没有来自应用商店的本机代码的最新版本，则可能需要覆盖兼容性版本。假设您正在开发一个iOS应用程序，您有插件 &lt;code&gt;cordova-plugin-camera@2.4.0&lt;/code&gt; ，并且您的应用程序具有上图所示的兼容版本 &lt;code&gt;3ed5b9318b2916b595f7721759ead4d708dfbd46&lt;/code&gt; 。如果你要更新到版本 &lt;code&gt;2.4.1&lt;/code&gt; 的 &lt;code&gt;cordova-plugin-camera&lt;/code&gt; ，您的服务器将产生一个新的兼容版本和用户的应用程序将停止接受热码推。但是，您可以告诉您的服务器使用旧的兼容性版本：</target>
        </trans-unit>
        <trans-unit id="b5517118161752100ae95c4743085b7c6793f3e0" translate="yes" xml:space="preserve">
          <source>You may want to track non-page change related events (for instance publication subscription, or method calls) also. To do so you can use the custom event tracking functionality:</source>
          <target state="translated">您可能还想跟踪与页面更改无关的事件(例如,出版物订阅或方法调用)。为此,您可以使用自定义事件跟踪功能。</target>
        </trans-unit>
        <trans-unit id="ad14068ffe4882e6762492f9fc7f94c1f18c977d" translate="yes" xml:space="preserve">
          <source>You might run into a situation where many Methods in your app have the same security checks. This can be simplified by factoring out the security into a separate module, wrapping the Method body, or extending the &lt;code&gt;Mongo.Collection&lt;/code&gt; class to do security inside the &lt;code&gt;insert&lt;/code&gt;, &lt;code&gt;update&lt;/code&gt;, and &lt;code&gt;remove&lt;/code&gt; implementations on the server. However, implementing your client-server communication via specific Methods is still a good idea rather than sending arbitrary &lt;code&gt;update&lt;/code&gt; operators from the client, since a malicious client can&amp;rsquo;t send an &lt;code&gt;update&lt;/code&gt; operator that you didn&amp;rsquo;t test for.</source>
          <target state="translated">您可能会遇到这样的情况，即您的应用程序中的许多方法都具有相同的安全检查。通过将安全性分解为一个单独的模块，包装Method主体或扩展 &lt;code&gt;Mongo.Collection&lt;/code&gt; 类以在服务器上的 &lt;code&gt;insert&lt;/code&gt; ， &lt;code&gt;update&lt;/code&gt; 和 &lt;code&gt;remove&lt;/code&gt; 实施内进行安全性，可以简化此操作。但是，通过特定方法实现客户端-服务器通信仍然是一个好主意，而不是从客户端发送任意 &lt;code&gt;update&lt;/code&gt; 运算符，因为恶意客户端无法发送未经测试的 &lt;code&gt;update&lt;/code&gt; 运算符。</target>
        </trans-unit>
        <trans-unit id="7797a5602e77f30aa23f9f397d14291df3056a7e" translate="yes" xml:space="preserve">
          <source>You must close all HTML tags except the ones specified to have no end tag, like BR, HR, IMG and INPUT. You can write these tags as &lt;code&gt;&amp;lt;br&amp;gt;&lt;/code&gt; or equivalently &lt;code&gt;&amp;lt;br/&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">您必须关闭所有HTML标记，但指定为没有结束标记的HTML标记除外，例如BR，HR，IMG和INPUT。您可以将这些标签写为 &lt;code&gt;&amp;lt;br&amp;gt;&lt;/code&gt; 或等效地 &lt;code&gt;&amp;lt;br/&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a8a7cd629849d965704b4691a76f5d0c59ef0c85" translate="yes" xml:space="preserve">
          <source>You must provide the &lt;code&gt;from&lt;/code&gt; option and at least one of &lt;code&gt;to&lt;/code&gt;, &lt;code&gt;cc&lt;/code&gt;, and &lt;code&gt;bcc&lt;/code&gt;; all other options are optional.</source>
          <target state="translated">您必须提供 &lt;code&gt;from&lt;/code&gt; 选项，以及 &lt;code&gt;to&lt;/code&gt; ， &lt;code&gt;cc&lt;/code&gt; 和 &lt;code&gt;bcc&lt;/code&gt; 中的至少一个；所有其他选项都是可选的。</target>
        </trans-unit>
        <trans-unit id="613bb83304959ed4153e2a7554d7321223107489" translate="yes" xml:space="preserve">
          <source>You need to include a &lt;code&gt;&amp;lt;div id=&quot;app&quot;&amp;gt;&amp;lt;/div&amp;gt;&lt;/code&gt; in your body&amp;rsquo;s HTML somewhere of course.</source>
          <target state="translated">当然，您需要在您身体的HTML中加入 &lt;code&gt;&amp;lt;div id=&quot;app&quot;&amp;gt;&amp;lt;/div&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4be047212ec41d65f51b475be6fd8fe404292cb3" translate="yes" xml:space="preserve">
          <source>You should access stores in the same way you&amp;rsquo;d access other reactive data in your templates&amp;mdash;that means centralizing your store access, much like you centralize your subscribing and data fetch. For a Blaze template, that&amp;rsquo;s either in a helper, or from within a &lt;code&gt;this.autorun()&lt;/code&gt; inside an &lt;code&gt;onCreated()&lt;/code&gt; callback.</source>
          <target state="translated">您应该以与访问模板中其他反应式数据相同的方式访问存储，这意味着集中存储访问，就像集中订阅和数据提取一样。对于Blaze模板，它位于帮助器中，或位于 &lt;code&gt;onCreated()&lt;/code&gt; 回调内的 &lt;code&gt;this.autorun()&lt;/code&gt; 内部。</target>
        </trans-unit>
        <trans-unit id="8879023240bd4396cad16507c8521fc47765904f" translate="yes" xml:space="preserve">
          <source>You should be extremely careful about doing this, and always ensure you aren&amp;rsquo;t returning user-generated content (or escape it if you do!) from such a helper.</source>
          <target state="translated">您在执行此操作时应格外小心，并始终确保您不会从此类帮助程序中返回用户生成的内容（如果这样做，则不要转义！）。</target>
        </trans-unit>
        <trans-unit id="08549087f148f7c277d241dcc1dcdc6d0ff81a79" translate="yes" xml:space="preserve">
          <source>You should subscribe to publications from the server from an &lt;code&gt;onCreated&lt;/code&gt; callback (within an &lt;code&gt;autorun&lt;/code&gt; block if you have reactively changing arguments). In the Todos example app, in the &lt;code&gt;Lists_show_page&lt;/code&gt; template we subscribe to the &lt;code&gt;todos.inList&lt;/code&gt; publication based on the current &lt;code&gt;_id&lt;/code&gt; FlowRouter param:</source>
          <target state="translated">您应该从服务器上的 &lt;code&gt;onCreated&lt;/code&gt; 回调订阅发布（如果您需要动态更改参数，请在 &lt;code&gt;autorun&lt;/code&gt; 块内）。在Todos示例应用程序中，在 &lt;code&gt;Lists_show_page&lt;/code&gt; 模板中，我们基于当前 &lt;code&gt;_id&lt;/code&gt; FlowRouter参数订阅 &lt;code&gt;todos.inList&lt;/code&gt; 发布：</target>
        </trans-unit>
        <trans-unit id="bc2775eb509ea9a26144cc4eb7f44b5dd7ae36ff" translate="yes" xml:space="preserve">
          <source>You should then check the generated &lt;code&gt;node_shrinkwrap/&lt;/code&gt; directory into source control, but ensure it is ignored by your text editor.</source>
          <target state="translated">然后，应将生成的 &lt;code&gt;node_shrinkwrap/&lt;/code&gt; 目录检入源代码管理，但请确保您的文本编辑器将其忽略。</target>
        </trans-unit>
        <trans-unit id="66c226daf843ca8e6cba7357af776299e8c0338d" translate="yes" xml:space="preserve">
          <source>You should use the ES2015 &lt;code&gt;import&lt;/code&gt; and &lt;code&gt;export&lt;/code&gt; features to manage your code. This will let you better understand the dependencies between different parts of your code, and it will be easy to know where to look if you need to read the source code of a dependency.</source>
          <target state="translated">您应该使用ES2015 &lt;code&gt;import&lt;/code&gt; 和 &lt;code&gt;export&lt;/code&gt; 功能来管理代码。这将使您更好地理解代码不同部分之间的依赖关系，并且如果需要读取依赖关系的源代码，则很容易知道从何处查找。</target>
        </trans-unit>
        <trans-unit id="9d51b211fc87565ae85755593dea4bd46e042154" translate="yes" xml:space="preserve">
          <source>You should wrap any functionality which relies on a Cordova plugin in a &lt;code&gt;Meteor.startup()&lt;/code&gt; block to make sure the plugin has been fully initialized (by listening to the &lt;code&gt;deviceready&lt;/code&gt; event). For example, when using the Cordova geolocation plugin:</source>
          <target state="translated">您应该在 &lt;code&gt;Meteor.startup()&lt;/code&gt; 块中包装依赖于Cordova插件的所有功能，以确保插件已完全初始化（通过侦听 &lt;code&gt;deviceready&lt;/code&gt; 事件）。例如，当使用Cordova地理位置插件时：</target>
        </trans-unit>
        <trans-unit id="d6ba28d94f3ec5d74bff845de110966d89125010" translate="yes" xml:space="preserve">
          <source>You use methods all the time, because the database mutators (&lt;a href=&quot;#insert&quot;&gt;&lt;code&gt;insert&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#update&quot;&gt;&lt;code&gt;update&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#remove&quot;&gt;&lt;code&gt;remove&lt;/code&gt;&lt;/a&gt;) are implemented as methods. When you call any of these functions on the client, you&amp;rsquo;re invoking their stub version that update the local cache, and sending the same write request to the server. When the server responds, the client updates the local cache with the writes that actually occurred on the server.</source>
          <target state="translated">您一直使用方法，因为数据库更改器（&lt;a href=&quot;#insert&quot;&gt; &lt;code&gt;insert&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#update&quot;&gt; &lt;code&gt;update&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#remove&quot;&gt; &lt;code&gt;remove&lt;/code&gt; &lt;/a&gt;）被实现为方法。在客户端上调用这些功能中的任何一个时，都在调用它们的存根版本以更新本地缓存，并将相同的写入请求发送到服务器。当服务器响应时，客户端使用服务器上实际发生的写入更新本地缓存。</target>
        </trans-unit>
        <trans-unit id="a6fcd201a20fd9b38fb187354839c9d5feb92cec" translate="yes" xml:space="preserve">
          <source>You will also want to show some kind of indication that the method is working in between their click of the button and the redirect completing. Don&amp;rsquo;t forget to provide feedback if the method is returning an error.</source>
          <target state="translated">您还需要显示某种指示，表明该方法在单击按钮和重​​定向完成之间起作用。如果方法返回错误，请不要忘记提供反馈。</target>
        </trans-unit>
        <trans-unit id="c2ff7526e0fd0ef6dc980122bb340e5d83684469" translate="yes" xml:space="preserve">
          <source>You will encounter three types of logs in a Meteor Cordova app:</source>
          <target state="translated">你会在Meteor Cordova应用中遇到三种类型的日志。</target>
        </trans-unit>
        <trans-unit id="0f6c8827c0f45795f7d486d0ed929b3901badd41" translate="yes" xml:space="preserve">
          <source>You will have to sign and &lt;code&gt;zipalign&lt;/code&gt; both APKs. You will also have to submit both to the Play Store, see &lt;a href=&quot;http://developer.android.com/google/play/publishing/multiple-apks.html&quot;&gt;submitting multiple APKs&lt;/a&gt; for more information.</source>
          <target state="translated">您将必须对两个APK 进行签名和 &lt;code&gt;zipalign&lt;/code&gt; 。您还必须将两者都提交到Play商店，请参阅&lt;a href=&quot;http://developer.android.com/google/play/publishing/multiple-apks.html&quot;&gt;提交多个APK&lt;/a&gt;以了解更多信息。</target>
        </trans-unit>
        <trans-unit id="0856094a5b5c09e0414432ba50a661a0f2afe398" translate="yes" xml:space="preserve">
          <source>You will have to sign and &lt;code&gt;zipalign&lt;/code&gt; both APKs. You will also have to submit both to the Play Store, see &lt;a href=&quot;https://developer.android.com/google/play/publishing/multiple-apks.html&quot;&gt;submitting multiple APKs&lt;/a&gt; for more information.</source>
          <target state="translated">您将必须对两个APK进行签名和 &lt;code&gt;zipalign&lt;/code&gt; 。您还必须将两者都提交到Play商店，请参阅&lt;a href=&quot;https://developer.android.com/google/play/publishing/multiple-apks.html&quot;&gt;提交多个APK&lt;/a&gt;以了解更多信息。</target>
        </trans-unit>
        <trans-unit id="ef3bf410faf44328e0141c6e0ed75c7d1940fcf1" translate="yes" xml:space="preserve">
          <source>You will need to pass in the component class with a helper:</source>
          <target state="translated">你需要将组件类与助记符一起传递进来。</target>
        </trans-unit>
        <trans-unit id="6ff6535487cf313117c5f2e69e51c24b2e94e078" translate="yes" xml:space="preserve">
          <source>You will probably want to customize the emails &lt;code&gt;accounts-password&lt;/code&gt; will send on your behalf. This can be easily done through the &lt;a href=&quot;http://docs.meteor.com/#/full/accounts_emailtemplates&quot;&gt;&lt;code&gt;Accounts.emailTemplates&lt;/code&gt; API&lt;/a&gt;. Below is some example code from the Todos app:</source>
          <target state="translated">您可能需要自定义 &lt;code&gt;accounts-password&lt;/code&gt; 将代表您发送的电子邮件。这可以通过&lt;a href=&quot;http://docs.meteor.com/#/full/accounts_emailtemplates&quot;&gt; &lt;code&gt;Accounts.emailTemplates&lt;/code&gt; API&lt;/a&gt;轻松完成。以下是Todos应用中的一些示例代码：</target>
        </trans-unit>
        <trans-unit id="b9e60497380a0d0e7fd7c98d7871a8d07fabaef3" translate="yes" xml:space="preserve">
          <source>You will then have to reload &lt;code&gt;.bash_profile&lt;/code&gt; (by executing &lt;code&gt;source ~/.bash_profile&lt;/code&gt;) or open a new terminal session to apply the new environment.</source>
          <target state="translated">然后，您将必须重新加载 &lt;code&gt;.bash_profile&lt;/code&gt; （通过执行 &lt;code&gt;source ~/.bash_profile&lt;/code&gt; ）或打开新的终端会话以应用新环境。</target>
        </trans-unit>
        <trans-unit id="da2d9dc3cf81454dfa3e09ad55298729c27793ad" translate="yes" xml:space="preserve">
          <source>You would invoke it as:</source>
          <target state="translated">你会援引它为:</target>
        </trans-unit>
        <trans-unit id="a69667edabb5f55dd20a8a936ca05ca8c4a8c8d3" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;ll also need to enable the Web Inspector on your iOS device. Go to &lt;em&gt;Settings &amp;gt; Safari &amp;gt; Advanced&lt;/em&gt; and enable &amp;lsquo;Web Inspector&amp;rsquo;:</source>
          <target state="translated">您还需要在iOS设备上启用Web检查器。转到&lt;em&gt;设置&amp;gt; Safari&amp;gt;高级&lt;/em&gt;并启用&amp;ldquo; Web检查器&amp;rdquo;：</target>
        </trans-unit>
        <trans-unit id="f653248bfacd541b98d5458c3c0e8c97a22531ba" translate="yes" xml:space="preserve">
          <source>Your app sees only the exports of the packages that you use directly. If you use package A, and package A uses package B, then you only see package A&amp;rsquo;s exports. Package B&amp;rsquo;s exports don&amp;rsquo;t &amp;ldquo;leak&amp;rdquo; into your namespace just because you used package A. Each app or package only sees their own globals plus the APIs of the packages that they specifically use and depend upon.</source>
          <target state="translated">您的应用程序仅看到您直接使用的软件包的导出。如果使用程序包A，而程序包A使用程序包B，则只能看到程序包A的导出。程序包B的导出不会仅因为使用了程序包A而&amp;ldquo;泄漏&amp;rdquo;到您的命名空间中。每个应用程序或程序包仅看到自己的全局变量以及它们专门使用并依赖的程序包的API。</target>
        </trans-unit>
        <trans-unit id="a8a60bf01c71769ba32875a616bbd1e6e581da5f" translate="yes" xml:space="preserve">
          <source>Your client JavaScript bundle can be significantly smaller if you separate out code that a specific type of user will never use.</source>
          <target state="translated">如果你把特定类型的用户永远不会使用的代码分离出来,你的客户端JavaScript捆绑包就可以大大缩小。</target>
        </trans-unit>
        <trans-unit id="4b85346c9b63e7d112518073509d10c23fc11779" translate="yes" xml:space="preserve">
          <source>Your collections, as well as the &lt;code&gt;Meteor.users&lt;/code&gt; collection,</source>
          <target state="translated">您的收藏以及 &lt;code&gt;Meteor.users&lt;/code&gt; 收藏，</target>
        </trans-unit>
        <trans-unit id="b7e989771eb31f770ff05ee04531369bcade571e" translate="yes" xml:space="preserve">
          <source>Your database password.</source>
          <target state="translated">您的数据库密码。</target>
        </trans-unit>
        <trans-unit id="3b8185f9a4851a44eb3797131162788d510f9ba4" translate="yes" xml:space="preserve">
          <source>a directory with an Xcode project source if iOS is targetted as a mobile platform</source>
          <target state="translated">如果iOS的目标是移动平台,则是一个带有Xcode项目源代码的目录。</target>
        </trans-unit>
        <trans-unit id="6f06478f58a2c8f9a50a939555db380008e3c183" translate="yes" xml:space="preserve">
          <source>a function: for the event to satisfy the matcher, the function must evaluate to true when passed the value of the same property in the event object</source>
          <target state="translated">一个函数:为了使事件满足匹配器的要求,当传递给事件对象中相同属性的值时,该函数必须评估为真。</target>
        </trans-unit>
        <trans-unit id="a77d0176448fc334ffe13823e7169116511c84b4" translate="yes" xml:space="preserve">
          <source>a straightforward approach is simply to include the common code as a &lt;a href=&quot;https://git-scm.com/book/en/v2/Git-Tools-Submodules&quot;&gt;git submodule&lt;/a&gt; of both applications.</source>
          <target state="translated">一种简单的方法就是将通用代码作为两个应用程序的&lt;a href=&quot;https://git-scm.com/book/en/v2/Git-Tools-Submodules&quot;&gt;git子模块&lt;/a&gt;包含在内。</target>
        </trans-unit>
        <trans-unit id="70e3e605f1bcbc94ed03f9011b11f6b2fa51ac31" translate="yes" xml:space="preserve">
          <source>a string: for the event to satisfy the matcher, this value must be equal to the value of the same property in the event object</source>
          <target state="translated">一个字符串:为了使事件满足匹配器的要求,这个值必须等于事件对象中相同属性的值。</target>
        </trans-unit>
        <trans-unit id="f308829cc49a9491fd8b714d523aaa30e68c8ec7" translate="yes" xml:space="preserve">
          <source>a tarball (.tar.gz) that includes everything necessary to run the application server (see the &lt;code&gt;README&lt;/code&gt; in the tarball for details). Using the &lt;code&gt;--directory&lt;/code&gt; option will produce a &lt;code&gt;bundle&lt;/code&gt; directory instead of the tarball.</source>
          <target state="translated">一个tarball（.tar.gz），其中包含运行应用程序服务器所需的一切（有关详细信息，请参见tarball中的 &lt;code&gt;README&lt;/code&gt; ）。使用 &lt;code&gt;--directory&lt;/code&gt; 选项将生成 &lt;code&gt;bundle&lt;/code&gt; 目录，而不是tarball。</target>
        </trans-unit>
        <trans-unit id="5f6d69c202b8f9fe872a7e8d5e9bcb55454000e7" translate="yes" xml:space="preserve">
          <source>accounts-ui</source>
          <target state="translated">accounts-ui</target>
        </trans-unit>
        <trans-unit id="87d2a05490bf43487c105a23530f5c58114fe3ee" translate="yes" xml:space="preserve">
          <source>added(document)or</source>
          <target state="translated">added(document)or</target>
        </trans-unit>
        <trans-unit id="32baf52ba59fafec16a0a1a005603d878aa9fcef" translate="yes" xml:space="preserve">
          <source>added(id, fields)or</source>
          <target state="translated">添加(id,fields)或</target>
        </trans-unit>
        <trans-unit id="681e13dbe41dc73aa4b6b1108b2f7012580f98a6" translate="yes" xml:space="preserve">
          <source>addedAt(document, atIndex, before)</source>
          <target state="translated">addedAt(document,atIndex,before)</target>
        </trans-unit>
        <trans-unit id="cd3f32650155ee5e7eaa76b5aa83446bc88e41e0" translate="yes" xml:space="preserve">
          <source>addedBefore(id, fields, before)</source>
          <target state="translated">addBefore(id,fields,before)</target>
        </trans-unit>
        <trans-unit id="ad845dc5c233de90812e0d92642d8da6f8340c33" translate="yes" xml:space="preserve">
          <source>alanning:roles</source>
          <target state="translated">alanning:roles</target>
        </trans-unit>
        <trans-unit id="a1a857dd38fda4b8de5eed6bce429f7eedefd708" translate="yes" xml:space="preserve">
          <source>allowedBoolean</source>
          <target state="translated">allowedBoolean</target>
        </trans-unit>
        <trans-unit id="a413809824517467fe6e874e5e0a65a327c543d1" translate="yes" xml:space="preserve">
          <source>allowing your type in &lt;a href=&quot;#session&quot;&gt;&lt;code&gt;Session&lt;/code&gt;&lt;/a&gt; variables.</source>
          <target state="translated">允许您输入&lt;a href=&quot;#session&quot;&gt; &lt;code&gt;Session&lt;/code&gt; &lt;/a&gt;变量。</target>
        </trans-unit>
        <trans-unit id="056c888a3211f88a8b0527c1e6528e47103eac66" translate="yes" xml:space="preserve">
          <source>allowing your type in the return values or arguments to &lt;a href=&quot;#methods_header&quot;&gt;methods&lt;/a&gt;.</source>
          <target state="translated">允许您输入&lt;a href=&quot;#methods_header&quot;&gt;方法&lt;/a&gt;的返回值或参数。</target>
        </trans-unit>
        <trans-unit id="2f44985d5b80e9a1b5b78395a21677990e50da68" translate="yes" xml:space="preserve">
          <source>alternatively, if you include both applications in a single repository, you can use symbolic links to include the common module inside both apps.</source>
          <target state="translated">或者,如果你把两个应用程序都包含在一个版本库中,你可以使用符号链接在两个应用程序中包含公共模块。</target>
        </trans-unit>
        <trans-unit id="4373ea5720d4d20c2b3214d55fb9e0af933d45ca" translate="yes" xml:space="preserve">
          <source>an unsigned &lt;code&gt;apk&lt;/code&gt; bundle and a project source if Android is targetted as a mobile platform</source>
          <target state="translated">如果将Android定位为移动平台，则未签名的 &lt;code&gt;apk&lt;/code&gt; 捆绑包和项目源</target>
        </trans-unit>
        <trans-unit id="9afd00e8c50bfbbea664455202bddf35d54b8a9c" translate="yes" xml:space="preserve">
          <source>and instead call &lt;a href=&quot;#meteor_publish&quot;&gt;&lt;code&gt;Meteor.publish&lt;/code&gt;&lt;/a&gt; to specify which parts of your collection should be published to which users.</source>
          <target state="translated">而是调用&lt;a href=&quot;#meteor_publish&quot;&gt; &lt;code&gt;Meteor.publish&lt;/code&gt; &lt;/a&gt;来指定应将集合的哪些部分发布给哪些用户。</target>
        </trans-unit>
        <trans-unit id="48aee7a36f2b83100df312b9edbff502a89b7b77" translate="yes" xml:space="preserve">
          <source>and use the &lt;code&gt;Meteor.loginWithGithub&lt;/code&gt; function:</source>
          <target state="translated">并使用 &lt;code&gt;Meteor.loginWithGithub&lt;/code&gt; 函数：</target>
        </trans-unit>
        <trans-unit id="c16f370cee25b21f0992cb7c946594f04cf38bf4" translate="yes" xml:space="preserve">
          <source>and you can access &lt;code&gt;AccountsTemplates&lt;/code&gt; via &lt;code&gt;UserAccountsCore.AccountsTemplates&lt;/code&gt;.</source>
          <target state="translated">您可以通过 &lt;code&gt;UserAccountsCore.AccountsTemplates&lt;/code&gt; 访问 &lt;code&gt;AccountsTemplates&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="337553caea598d0d286cbb38bfb16f0dda424eed" translate="yes" xml:space="preserve">
          <source>api.addAssets()</source>
          <target state="translated">api.addAssets()</target>
        </trans-unit>
        <trans-unit id="263ddf06871ccf581a6906beb7782d3bfd2b651a" translate="yes" xml:space="preserve">
          <source>api.addFiles()</source>
          <target state="translated">api.addFiles()</target>
        </trans-unit>
        <trans-unit id="f0e400cce3088a342f2618e9f458aa5203ca354f" translate="yes" xml:space="preserve">
          <source>api.export()</source>
          <target state="translated">api.export()</target>
        </trans-unit>
        <trans-unit id="52a1eb7fdeb6ff5a761c21f8f37c57982f7a9e86" translate="yes" xml:space="preserve">
          <source>api.imply()</source>
          <target state="translated">api.imply()</target>
        </trans-unit>
        <trans-unit id="5b149e74ec94b8db90695d3b5dda3d0c5749a417" translate="yes" xml:space="preserve">
          <source>api.use()</source>
          <target state="translated">api.use()</target>
        </trans-unit>
        <trans-unit id="82a7a0ef25c64de45ca1118dd5524ab3212fcb50" translate="yes" xml:space="preserve">
          <source>api.versionsFrom()</source>
          <target state="translated">api.versionsFrom()</target>
        </trans-unit>
        <trans-unit id="799467800736cc259595fda194df8afa84f3d069" translate="yes" xml:space="preserve">
          <source>apollo</source>
          <target state="translated">apollo</target>
        </trans-unit>
        <trans-unit id="6d003f368abe9913162366183acee34bd1c4af93" translate="yes" xml:space="preserve">
          <source>appcache</source>
          <target state="translated">appcache</target>
        </trans-unit>
        <trans-unit id="322634c19b595675d1343c2e97fa0918a2cbe28f" translate="yes" xml:space="preserve">
          <source>audit-argument-checks</source>
          <target state="translated">audit-argument-checks</target>
        </trans-unit>
        <trans-unit id="cb78c7866bd354810b3988098b2ec83d7efd97dc" translate="yes" xml:space="preserve">
          <source>autopublish</source>
          <target state="translated">autopublish</target>
        </trans-unit>
        <trans-unit id="f4bc6a03d26f76170cdc720bac320958112e8111" translate="yes" xml:space="preserve">
          <source>blaze-html-templates</source>
          <target state="translated">blaze-html-templates</target>
        </trans-unit>
        <trans-unit id="eec8758ec9848c46de47939a142ef18e0cb3ec61" translate="yes" xml:space="preserve">
          <source>bundle-visualizer</source>
          <target state="translated">bundle-visualizer</target>
        </trans-unit>
        <trans-unit id="df7cf341160ad91ea752ecca5a26d4d5d1ab7cbd" translate="yes" xml:space="preserve">
          <source>calls:</source>
          <target state="translated">calls:</target>
        </trans-unit>
        <trans-unit id="85004e4aec3d0bb5ff39ddf66472b9d20484e16c" translate="yes" xml:space="preserve">
          <source>can be rewritten to use CommonJS &lt;code&gt;module.exports&lt;/code&gt;:</source>
          <target state="translated">可以重写为使用CommonJS &lt;code&gt;module.exports&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="7d9ea3c0d7ce1b63b7bc6c804421576c74bcfa35" translate="yes" xml:space="preserve">
          <source>can be written with CommonJS like this:</source>
          <target state="translated">可以用CommonJS这样写。</target>
        </trans-unit>
        <trans-unit id="393e268fa535e418ab452aad69e8b29af4fcabe7" translate="yes" xml:space="preserve">
          <source>causes files in your &lt;code&gt;public/online&lt;/code&gt; directory to not be cached, and so they will only be available online. You can then move your large files into that directory and refer to them at the new URL:</source>
          <target state="translated">导致您的 &lt;code&gt;public/online&lt;/code&gt; 目录中的文件不被缓存，因此它们只能在线使用。然后，您可以将大文件移动到该目录中，并在新URL上引用它们：</target>
        </trans-unit>
        <trans-unit id="22feb8a4e84029cbe6237d80b48b21771fcef697" translate="yes" xml:space="preserve">
          <source>changed(id, fields)</source>
          <target state="translated">已更改(id,fields)</target>
        </trans-unit>
        <trans-unit id="73ef343416195b0aa93d754f66cfb2a698ee1704" translate="yes" xml:space="preserve">
          <source>changed(newDocument, oldDocument) or</source>
          <target state="translated">changed(newDocument,oldDocument)或</target>
        </trans-unit>
        <trans-unit id="73b5bcb8160d83003f4ac6a91f265023d6f6d8b3" translate="yes" xml:space="preserve">
          <source>changedAt(newDocument, oldDocument, atIndex)</source>
          <target state="translated">changedAt(newDocument,oldDocument,atIndex)</target>
        </trans-unit>
        <trans-unit id="d56d985300d4b52eb6e189be006f44f8d23c5ec9" translate="yes" xml:space="preserve">
          <source>check</source>
          <target state="translated">check</target>
        </trans-unit>
        <trans-unit id="1f6d22f056609770956ad56fd0a4605ac4c32186" translate="yes" xml:space="preserve">
          <source>chriswessels/meteor-tupperware</source>
          <target state="translated">chriswessels/meteor-tupperware</target>
        </trans-unit>
        <trans-unit id="0bfe991f64a92e574abf91696ef883387dc58d98" translate="yes" xml:space="preserve">
          <source>clientAddressString</source>
          <target state="translated">clientAddressString</target>
        </trans-unit>
        <trans-unit id="b9dc902e551bc0ff53e48b2ec7096990efb51cdb" translate="yes" xml:space="preserve">
          <source>closeFunction</source>
          <target state="translated">closeFunction</target>
        </trans-unit>
        <trans-unit id="f5fbc02e24988b5ca567bcf3a45121224fa91a32" translate="yes" xml:space="preserve">
          <source>coffeescript</source>
          <target state="translated">coffeescript</target>
        </trans-unit>
        <trans-unit id="a3d96f494937846929339ab6fa25cc1872a5a284" translate="yes" xml:space="preserve">
          <source>connectedBoolean</source>
          <target state="translated">connectedBoolean</target>
        </trans-unit>
        <trans-unit id="c487fcb2799f8d2d61d01bf00bacb808b48e7929" translate="yes" xml:space="preserve">
          <source>connectionObject</source>
          <target state="translated">connectionObject</target>
        </trans-unit>
        <trans-unit id="26188050a295ca85745caf9bcf1be2b1b009d853" translate="yes" xml:space="preserve">
          <source>contentString</source>
          <target state="translated">contentString</target>
        </trans-unit>
        <trans-unit id="dea9a7c5509fa8416711d8e51eeee8c363546832" translate="yes" xml:space="preserve">
          <source>currentTargetDOM Element</source>
          <target state="translated">currentTargetDOM元素</target>
        </trans-unit>
        <trans-unit id="7a4eb3b4c695dc29a4a3bb40c5dde8b7a87ad2bb" translate="yes" xml:space="preserve">
          <source>dataObject or &lt;code&gt;null&lt;/code&gt;</source>
          <target state="translated">dataObject或 &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f0b23868e4456acbebf96fd9f9636f5ac81135c3" translate="yes" xml:space="preserve">
          <source>depend on &lt;code&gt;isobuild:minifier-plugin@1.0.0&lt;/code&gt; package</source>
          <target state="translated">取决于 &lt;code&gt;isobuild:minifier-plugin@1.0.0&lt;/code&gt; 软件包</target>
        </trans-unit>
        <trans-unit id="fe2fd87bb819cba67dc48ddae6833aed2f9395fb" translate="yes" xml:space="preserve">
          <source>depend on the &lt;code&gt;isobuild:compiler-plugin@1.0.0&lt;/code&gt; package</source>
          <target state="translated">取决于 &lt;code&gt;isobuild:compiler-plugin@1.0.0&lt;/code&gt; 软件包</target>
        </trans-unit>
        <trans-unit id="210638acae66da57ddf80e15b2aa2ed5a2f6e4a0" translate="yes" xml:space="preserve">
          <source>depend on the &lt;code&gt;isobuild:linter-plugin@1.0.0&lt;/code&gt; package</source>
          <target state="translated">取决于 &lt;code&gt;isobuild:linter-plugin@1.0.0&lt;/code&gt; 软件包</target>
        </trans-unit>
        <trans-unit id="84fc50220ede69f2f7d823fd283052aef56d4ad2" translate="yes" xml:space="preserve">
          <source>dynamic-import</source>
          <target state="translated">dynamic-import</target>
        </trans-unit>
        <trans-unit id="ffdd886259c31d8aa8f5e64f7987626a20ee013a" translate="yes" xml:space="preserve">
          <source>ecmascript</source>
          <target state="translated">ecmascript</target>
        </trans-unit>
        <trans-unit id="b47a43585289c6f31ef3e4081f4af2b50781a391" translate="yes" xml:space="preserve">
          <source>errorException</source>
          <target state="translated">errorException</target>
        </trans-unit>
        <trans-unit id="8a049923432d3522e804c213f2697a5cd3849ee8" translate="yes" xml:space="preserve">
          <source>es5-shim</source>
          <target state="translated">es5-shim</target>
        </trans-unit>
        <trans-unit id="0db613a2ac6478cf73360eeacae4bc69b9f8dbde" translate="yes" xml:space="preserve">
          <source>function to be called after a rule is executed.</source>
          <target state="translated">在规则执行后调用的函数。</target>
        </trans-unit>
        <trans-unit id="ed357dc0ea4edcec2bbf0109e3be571b2141b9e6" translate="yes" xml:space="preserve">
          <source>headersObject</source>
          <target state="translated">headersObject</target>
        </trans-unit>
        <trans-unit id="1c3f7bc2a7736cca7c328899ec167bdea781aae6" translate="yes" xml:space="preserve">
          <source>httpHeadersObject</source>
          <target state="translated">httpHeadersObject</target>
        </trans-unit>
        <trans-unit id="1f24c14a2571bc0a5f8dd92d9d8524a52a9312ea" translate="yes" xml:space="preserve">
          <source>iCalendar event attachment</source>
          <target state="translated">iCalendar事件附件</target>
        </trans-unit>
        <trans-unit id="6413e837d316aafcf260786cd21a849f88ae3069" translate="yes" xml:space="preserve">
          <source>iOS</source>
          <target state="translated">iOS</target>
        </trans-unit>
        <trans-unit id="b22e494620da9c73804fad039c471367072572c3" translate="yes" xml:space="preserve">
          <source>iOS App Store</source>
          <target state="translated">iOS应用商店</target>
        </trans-unit>
        <trans-unit id="e24748607671f9e76bea4879f63bd8d68a0f3025" translate="yes" xml:space="preserve">
          <source>idString</source>
          <target state="translated">idString</target>
        </trans-unit>
        <trans-unit id="a2337e8ec6c42d96d125e45bd2a8fdf8c3233d4b" translate="yes" xml:space="preserve">
          <source>insecure</source>
          <target state="translated">insecure</target>
        </trans-unit>
        <trans-unit id="cd680c9a868f19e429854f411d600f738684db22" translate="yes" xml:space="preserve">
          <source>insert(userId, doc)</source>
          <target state="translated">insert(userId,doc)</target>
        </trans-unit>
        <trans-unit id="18ab6ac7001b131bc4dc74bd619c612205dff372" translate="yes" xml:space="preserve">
          <source>is equivalent to:</source>
          <target state="translated">相当于:</target>
        </trans-unit>
        <trans-unit id="0b016c46ec354cbc4bea797d892262b87c3bd58a" translate="yes" xml:space="preserve">
          <source>isDefaultPrevented()</source>
          <target state="translated">isDefaultPrevented()</target>
        </trans-unit>
        <trans-unit id="55d512020baa96f81e58a174450e28a1a88c39e2" translate="yes" xml:space="preserve">
          <source>isImmediatePropagationStopped()</source>
          <target state="translated">isImmediatePropagationStopped()</target>
        </trans-unit>
        <trans-unit id="776c48ff6073e31bb1c594594e4d39f44c2d54d3" translate="yes" xml:space="preserve">
          <source>isPropagationStopped()</source>
          <target state="translated">isPropagationStopped()</target>
        </trans-unit>
        <trans-unit id="71b71b51e74f77e588b8f6d4fbf399c995cb4b63" translate="yes" xml:space="preserve">
          <source>johanbrook:publication-collector</source>
          <target state="translated">johanbrook:publication-collector</target>
        </trans-unit>
        <trans-unit id="6f2ab963b5a51d155d69ac091e52e506d1055057" translate="yes" xml:space="preserve">
          <source>jquery</source>
          <target state="translated">jquery</target>
        </trans-unit>
        <trans-unit id="ff4a70604b3c4420201a59080331d35228c9f28b" translate="yes" xml:space="preserve">
          <source>jshimko/meteor-launchpad</source>
          <target state="translated">jshimko/meteor-launchpad</target>
        </trans-unit>
        <trans-unit id="c05f6475fd52854d25d68aea3340ac1e5b28e7b5" translate="yes" xml:space="preserve">
          <source>juliancwirko:postcss</source>
          <target state="translated">juliancwirko:postcss</target>
        </trans-unit>
        <trans-unit id="52a1d17ad00685f00f37b61a98744d74988466d3" translate="yes" xml:space="preserve">
          <source>kadira:blaze-layout</source>
          <target state="translated">kadira:blaze-layout</target>
        </trans-unit>
        <trans-unit id="11722dc77961f3026ccf64947faea40c3661d1d7" translate="yes" xml:space="preserve">
          <source>kadira:flow-router</source>
          <target state="translated">kadira:flow-router</target>
        </trans-unit>
        <trans-unit id="0b439cf4e10f87567e60f4b7818ecd57383dc7f0" translate="yes" xml:space="preserve">
          <source>less</source>
          <target state="translated">less</target>
        </trans-unit>
        <trans-unit id="446e52e51c36d579c8101ac4fae2f00bc14a938b" translate="yes" xml:space="preserve">
          <source>mLab</source>
          <target state="translated">mLab</target>
        </trans-unit>
        <trans-unit id="90320b91e55bc2ec44b699d76f6fd9743cac0c81" translate="yes" xml:space="preserve">
          <source>markdown</source>
          <target state="translated">markdown</target>
        </trans-unit>
        <trans-unit id="3baddc005f502139dff2bb2841892b709ef377ee" translate="yes" xml:space="preserve">
          <source>matches pattern?</source>
          <target state="translated">匹配模式?</target>
        </trans-unit>
        <trans-unit id="18eded645860e9ac14032e82d301d596df6fe772" translate="yes" xml:space="preserve">
          <source>mdg:validated-method</source>
          <target state="translated">mdg:validated-method</target>
        </trans-unit>
        <trans-unit id="cf2a39f47fea662b4bbe164ebde8a7a9d18f00bf" translate="yes" xml:space="preserve">
          <source>meteor add</source>
          <target state="translated">流星号</target>
        </trans-unit>
        <trans-unit id="4162ceb16092221530080a8796a9597abd67317e" translate="yes" xml:space="preserve">
          <source>meteor add package</source>
          <target state="translated">流星添加包</target>
        </trans-unit>
        <trans-unit id="667b1f95551a4556971c55866bd196b724db80e2" translate="yes" xml:space="preserve">
          <source>meteor add-platform</source>
          <target state="translated">流星添加平台</target>
        </trans-unit>
        <trans-unit id="db20c6879752cae48129691f8bb5d754d9af4d0b" translate="yes" xml:space="preserve">
          <source>meteor add-platform platform</source>
          <target state="translated">流星加平台平台</target>
        </trans-unit>
        <trans-unit id="b4cc825b03053bf2e2541259d881b7535d680a6a" translate="yes" xml:space="preserve">
          <source>meteor admin</source>
          <target state="translated">流星管理</target>
        </trans-unit>
        <trans-unit id="99bdc95ebc8ec710c34572e64de8e48c7115e110" translate="yes" xml:space="preserve">
          <source>meteor build</source>
          <target state="translated">流星制造</target>
        </trans-unit>
        <trans-unit id="88afe7bf54e1cc1e3392d0b524293af479845320" translate="yes" xml:space="preserve">
          <source>meteor create</source>
          <target state="translated">陨落</target>
        </trans-unit>
        <trans-unit id="39380593196060e2d56e0583d23b8ddc499a2a33" translate="yes" xml:space="preserve">
          <source>meteor create name</source>
          <target state="translated">陨石创名</target>
        </trans-unit>
        <trans-unit id="074fdda244acb9ff36c78cd433278d12fefe4ca6" translate="yes" xml:space="preserve">
          <source>meteor debug</source>
          <target state="translated">流星调试</target>
        </trans-unit>
        <trans-unit id="bc3d4ed87c6c372f32a2a153dbdf9bae0c41a15c" translate="yes" xml:space="preserve">
          <source>meteor deploy</source>
          <target state="translated">陨落</target>
        </trans-unit>
        <trans-unit id="805f0f097834d349c322be7c837fbffafb694ffe" translate="yes" xml:space="preserve">
          <source>meteor deploy site</source>
          <target state="translated">陨石部署点</target>
        </trans-unit>
        <trans-unit id="e2c90d1fb7d0aa2d9a05db75bc173caad257bb10" translate="yes" xml:space="preserve">
          <source>meteor help</source>
          <target state="translated">流星帮助</target>
        </trans-unit>
        <trans-unit id="e685d60635580bd33b59660777292819324bea43" translate="yes" xml:space="preserve">
          <source>meteor lint</source>
          <target state="translated">流星带</target>
        </trans-unit>
        <trans-unit id="297172c0a5460f8eb736a829eafaa0a1891ab198" translate="yes" xml:space="preserve">
          <source>meteor list</source>
          <target state="translated">流星榜</target>
        </trans-unit>
        <trans-unit id="1774672a644529f54d533a11c69195350b91480b" translate="yes" xml:space="preserve">
          <source>meteor list-platforms</source>
          <target state="translated">流星榜-平台</target>
        </trans-unit>
        <trans-unit id="d526fc3bad5ff16795f44d8812bbe8ba7408d861" translate="yes" xml:space="preserve">
          <source>meteor login / logout</source>
          <target state="translated">流星登录/注销</target>
        </trans-unit>
        <trans-unit id="9ed6ee46e63af9fa9330a57bb043376c8ec6b821" translate="yes" xml:space="preserve">
          <source>meteor mongo</source>
          <target state="translated">流星怪兽</target>
        </trans-unit>
        <trans-unit id="5f6f267339c41262a61d7487e19a4273597f0e36" translate="yes" xml:space="preserve">
          <source>meteor node</source>
          <target state="translated">流星体</target>
        </trans-unit>
        <trans-unit id="70c40393775ede0deeb4a54f86b908acb5cd5bee" translate="yes" xml:space="preserve">
          <source>meteor npm</source>
          <target state="translated">流星 npm</target>
        </trans-unit>
        <trans-unit id="7c1772d10b7c1d6ec0a0ae106c46e9ebd19b9d0b" translate="yes" xml:space="preserve">
          <source>meteor publish</source>
          <target state="translated">流星出版社</target>
        </trans-unit>
        <trans-unit id="be0194d8f1f6619658812507529c3048aa83871b" translate="yes" xml:space="preserve">
          <source>meteor publish-for-arch</source>
          <target state="translated">流星出版社</target>
        </trans-unit>
        <trans-unit id="8ea91d3da1f213360f4bcf4a3abb1455e0966756" translate="yes" xml:space="preserve">
          <source>meteor publish-release</source>
          <target state="translated">流星出版发行</target>
        </trans-unit>
        <trans-unit id="fa10d4cbfad6842250a5d0ca24190dc7a87f4436" translate="yes" xml:space="preserve">
          <source>meteor remove</source>
          <target state="translated">陨落</target>
        </trans-unit>
        <trans-unit id="9ed6b15a8130c87b930be7f1cbe21492eea47458" translate="yes" xml:space="preserve">
          <source>meteor remove package</source>
          <target state="translated">流星删除包</target>
        </trans-unit>
        <trans-unit id="5a86b771d74e63ef189705cadf84b9c4f6d87b01" translate="yes" xml:space="preserve">
          <source>meteor remove-platform</source>
          <target state="translated">流星号删除平台</target>
        </trans-unit>
        <trans-unit id="f1c4f349e355df0bf112878834961365329babf4" translate="yes" xml:space="preserve">
          <source>meteor remove-platform platform</source>
          <target state="translated">流星删除平台-平台</target>
        </trans-unit>
        <trans-unit id="199b661e006783c7029b28b68420cf1871ece594" translate="yes" xml:space="preserve">
          <source>meteor reset</source>
          <target state="translated">陨石复位</target>
        </trans-unit>
        <trans-unit id="702a411f029221565cd8584482209027057fad6c" translate="yes" xml:space="preserve">
          <source>meteor run</source>
          <target state="translated">流星雨</target>
        </trans-unit>
        <trans-unit id="455a8a0ef13ae2d720a99991dad08a7810a1e000" translate="yes" xml:space="preserve">
          <source>meteor search</source>
          <target state="translated">搜寻流星</target>
        </trans-unit>
        <trans-unit id="506b01654468ce52df65961d51ff2f24f6ba9659" translate="yes" xml:space="preserve">
          <source>meteor shell</source>
          <target state="translated">流星弹</target>
        </trans-unit>
        <trans-unit id="7e55ac06f7765a190d6c40f5d4cde28cd606c375" translate="yes" xml:space="preserve">
          <source>meteor show</source>
          <target state="translated">流星雨</target>
        </trans-unit>
        <trans-unit id="1863c8dd851a8c8877f06fc26a571db8bee3edcf" translate="yes" xml:space="preserve">
          <source>meteor test-packages</source>
          <target state="translated">流星测试包</target>
        </trans-unit>
        <trans-unit id="0a78db04edd85aa1bcc0469eef35cd2b8609ae91" translate="yes" xml:space="preserve">
          <source>meteor update</source>
          <target state="translated">流星更新</target>
        </trans-unit>
        <trans-unit id="1990eaae0d3c3a2d5c4549c35edb6c2909d95b3b" translate="yes" xml:space="preserve">
          <source>meteor-base</source>
          <target state="translated">meteor-base</target>
        </trans-unit>
        <trans-unit id="062f313045cb95708db4ed0985a62b0b823c8a4d" translate="yes" xml:space="preserve">
          <source>meteorhacks/meteord</source>
          <target state="translated">meteorhacks/meteord</target>
        </trans-unit>
        <trans-unit id="941e89275636ba30ac463825cb61078cfa9ae272" translate="yes" xml:space="preserve">
          <source>methodArgumentsArray</source>
          <target state="translated">methodArgumentsArray</target>
        </trans-unit>
        <trans-unit id="709ac1a21e00f882c6be74b80fc087c5a61d3908" translate="yes" xml:space="preserve">
          <source>methodNameString</source>
          <target state="translated">methodNameString</target>
        </trans-unit>
        <trans-unit id="73314acfcf0e407857b86ab83676a26ead9fa7f2" translate="yes" xml:space="preserve">
          <source>mobile-experience</source>
          <target state="translated">mobile-experience</target>
        </trans-unit>
        <trans-unit id="e83284a649504ba68fd077c3fd6ad4e7410a34eb" translate="yes" xml:space="preserve">
          <source>module is fetched from the server at runtime.</source>
          <target state="translated">模块在运行时从服务器获取。</target>
        </trans-unit>
        <trans-unit id="67b5df3a35529734623a1486e386f71fa806e1dd" translate="yes" xml:space="preserve">
          <source>module would be bundled into the initial JavaScript bundle, a dynamically</source>
          <target state="translated">模块将被捆绑到初始的JavaScript bundle中,一个动态的</target>
        </trans-unit>
        <trans-unit id="4580485d482a9037af94f68af98adf23819cbdf4" translate="yes" xml:space="preserve">
          <source>modules</source>
          <target state="translated">modules</target>
        </trans-unit>
        <trans-unit id="d8101c974cfd4cab63dd00ac0a5b89f6376ebb83" translate="yes" xml:space="preserve">
          <source>mongo</source>
          <target state="translated">mongo</target>
        </trans-unit>
        <trans-unit id="bef95319d159a10c9b709d5c1aed04e31dd0a96f" translate="yes" xml:space="preserve">
          <source>movedBefore(id, before)</source>
          <target state="translated">movedBefore(id,before)</target>
        </trans-unit>
        <trans-unit id="ca206eae60ca726013e31fbfc6ca73a0738572a3" translate="yes" xml:space="preserve">
          <source>movedTo(document, fromIndex, toIndex, before)</source>
          <target state="translated">movedTo(document,fromIndex,toIndex,before)</target>
        </trans-unit>
        <trans-unit id="6ae999552a0d2dca14d62e2bc8b764d377b1dd6c" translate="yes" xml:space="preserve">
          <source>name</source>
          <target state="translated">name</target>
        </trans-unit>
        <trans-unit id="fd1286353570c5703799ba76999323b7c7447b06" translate="yes" xml:space="preserve">
          <source>no</source>
          <target state="translated">no</target>
        </trans-unit>
        <trans-unit id="910f462fe19fdf93943d8fd34bcbfc0954de811f" translate="yes" xml:space="preserve">
          <source>npm Shrinkwrap</source>
          <target state="translated">npm Shrinkwrap</target>
        </trans-unit>
        <trans-unit id="5035753810f86ca8932b0ce5bcd5a271b58add68" translate="yes" xml:space="preserve">
          <source>npm dependencies</source>
          <target state="translated">npm依赖性</target>
        </trans-unit>
        <trans-unit id="9b9ac73b42b059e722990755c3574ae5935d3739" translate="yes" xml:space="preserve">
          <source>npm is a repository of general JavaScript packages. These packages were originally intended solely for the Node.js server-side environment, but as the JavaScript ecosystem matured, solutions arose to enable the use of npm packages in other environments such as the browser. Today, npm is used for all types of JavaScript packages.</source>
          <target state="translated">npm是一个通用JavaScript包的仓库。这些包最初只用于Node.js服务器端环境,但随着JavaScript生态系统的成熟,出现了使npm包能够在浏览器等其他环境中使用的解决方案。今天,npm被用于所有类型的JavaScript包。</target>
        </trans-unit>
        <trans-unit id="7c5bd46cde7c08be44eff431ccef262f3ffc18be" translate="yes" xml:space="preserve">
          <source>npm on the client</source>
          <target state="translated">客户端上的npm</target>
        </trans-unit>
        <trans-unit id="1226cc9ee2ebf50412e803250c7d8dca0de70049" translate="yes" xml:space="preserve">
          <source>npm packages are configured in a &lt;code&gt;package.json&lt;/code&gt; file at the root of your project. If you create a new Meteor project, you will have such a file created for you. If not you can run &lt;code&gt;meteor npm init&lt;/code&gt; to create one.</source>
          <target state="translated">npm软件包在项目根目录的 &lt;code&gt;package.json&lt;/code&gt; 文件中配置。如果创建一个新的Meteor项目，则将为您创建一个这样的文件。如果没有，您可以运行 &lt;code&gt;meteor npm init&lt;/code&gt; 来创建一个。</target>
        </trans-unit>
        <trans-unit id="4129bf75818a50bb7965907d71d47d194b5244a9" translate="yes" xml:space="preserve">
          <source>number of requests allowed per time interval. Default = 10.</source>
          <target state="translated">每个时间间隔允许的请求数。默认值=10。</target>
        </trans-unit>
        <trans-unit id="e3cad9087d59df1fcb6d8b1e44f00fe9edfe17d3" translate="yes" xml:space="preserve">
          <source>oauth-encryption</source>
          <target state="translated">oauth-encryption</target>
        </trans-unit>
        <trans-unit id="bdd377f97f5899b549b58be4c82ee7779d909f2b" translate="yes" xml:space="preserve">
          <source>onCloseFunction</source>
          <target state="translated">onCloseFunction</target>
        </trans-unit>
        <trans-unit id="e71003c6b7dd4093ce139ac0c51a6ba38d54a439" translate="yes" xml:space="preserve">
          <source>outputs</source>
          <target state="translated">outputs</target>
        </trans-unit>
        <trans-unit id="582681c2eae02b3f3d399c0c26d321560f6c567a" translate="yes" xml:space="preserve">
          <source>package</source>
          <target state="translated">package</target>
        </trans-unit>
        <trans-unit id="5a9f1ec8210ba10422a7ced2e302a9a8202bc69e" translate="yes" xml:space="preserve">
          <source>package.js</source>
          <target state="translated">package.js</target>
        </trans-unit>
        <trans-unit id="fd7b034e09b752c24942cd9b0b20c29db2dc3e90" translate="yes" xml:space="preserve">
          <source>params</source>
          <target state="translated">params</target>
        </trans-unit>
        <trans-unit id="3c72abbe626f27d174d80fc434b851cce7bde6d3" translate="yes" xml:space="preserve">
          <source>platform</source>
          <target state="translated">platform</target>
        </trans-unit>
        <trans-unit id="c5902f602739a721c03b66d736b59e404808626e" translate="yes" xml:space="preserve">
          <source>practicalmeteor:mocha</source>
          <target state="translated">practicalmeteor:mocha</target>
        </trans-unit>
        <trans-unit id="b8caa37d2c3b307b03dcd597548444681aed22fc" translate="yes" xml:space="preserve">
          <source>preventDefault()</source>
          <target state="translated">preventDefault()</target>
        </trans-unit>
        <trans-unit id="bfd29548d005c543f55b2f33e265bff1d80542a3" translate="yes" xml:space="preserve">
          <source>publishing objects of your type if you pass them to publish handlers.</source>
          <target state="translated">如果你把你的类型的发布对象传递给发布处理程序,那么发布对象。</target>
        </trans-unit>
        <trans-unit id="2d3f674d191956615d3649b2c58b5fb5450d7e3a" translate="yes" xml:space="preserve">
          <source>queryParams</source>
          <target state="translated">queryParams</target>
        </trans-unit>
        <trans-unit id="a415ab5cc17c8c093c015ccdb7e552aee7911aa4" translate="yes" xml:space="preserve">
          <source>random</source>
          <target state="translated">random</target>
        </trans-unit>
        <trans-unit id="d593f709a8526aea211bdac9207b7d32c45271c1" translate="yes" xml:space="preserve">
          <source>reactive-var</source>
          <target state="translated">reactive-var</target>
        </trans-unit>
        <trans-unit id="b295ba3a088a2749141ef4d930011cb33bc650ec" translate="yes" xml:space="preserve">
          <source>ready()</source>
          <target state="translated">ready()</target>
        </trans-unit>
        <trans-unit id="adaa8e57042fde322ad9e847878e803a7d8fd347" translate="yes" xml:space="preserve">
          <source>reasonString or undefined</source>
          <target state="translated">理由字符串或未定义</target>
        </trans-unit>
        <trans-unit id="7d73773099fa8639ebc85ab6ccb6ec6a80d2ba56" translate="yes" xml:space="preserve">
          <source>register a build plugin: &lt;code&gt;Package.registerBuildPlugin({ name, sources, ... });&lt;/code&gt; (see docs)</source>
          <target state="translated">注册一个构建插件： &lt;code&gt;Package.registerBuildPlugin({ name, sources, ... });&lt;/code&gt; （请参阅文档）</target>
        </trans-unit>
        <trans-unit id="5686cab9d0ba10a4e636be747aba6318c4bf56b8" translate="yes" xml:space="preserve">
          <source>remove(userId, doc)</source>
          <target state="translated">remove(userId,doc)</target>
        </trans-unit>
        <trans-unit id="48b5c64f6710ca64b88178a5264378b28929d282" translate="yes" xml:space="preserve">
          <source>removed(id)</source>
          <target state="translated">removed(id)</target>
        </trans-unit>
        <trans-unit id="01cb54c380b4b86fccbd3d6fc5be0c440d5d8b29" translate="yes" xml:space="preserve">
          <source>removed(oldDocument)or</source>
          <target state="translated">removed(oldDocument)or</target>
        </trans-unit>
        <trans-unit id="6fde0d4145af6f130233103a906937dcc27f2aae" translate="yes" xml:space="preserve">
          <source>removedAt(oldDocument, atIndex)</source>
          <target state="translated">removedAt(oldDocument,atIndex)</target>
        </trans-unit>
        <trans-unit id="eb884f579685f726927154a469130919b8d4a214" translate="yes" xml:space="preserve">
          <source>retryCountNumber</source>
          <target state="translated">retryCountNumber</target>
        </trans-unit>
        <trans-unit id="88d4fec792cb8f94a51f38bdf413822b04ed974c" translate="yes" xml:space="preserve">
          <source>retryTimeNumber or undefined</source>
          <target state="translated">重试时间数或未定义</target>
        </trans-unit>
        <trans-unit id="0253b19e390f88e6eb6c01226ad518dac0e119ec" translate="yes" xml:space="preserve">
          <source>server-render</source>
          <target state="translated">server-render</target>
        </trans-unit>
        <trans-unit id="246f313d0f99102356e00ed9e499faddf0437e50" translate="yes" xml:space="preserve">
          <source>shell-server</source>
          <target state="translated">shell-server</target>
        </trans-unit>
        <trans-unit id="c099a42a5555825cdb50df0c04932bcd29613457" translate="yes" xml:space="preserve">
          <source>site</source>
          <target state="translated">site</target>
        </trans-unit>
        <trans-unit id="3295ce705f7d58f6c875c2e5d9287d22d24c2f3d" translate="yes" xml:space="preserve">
          <source>spacebars</source>
          <target state="translated">spacebars</target>
        </trans-unit>
        <trans-unit id="f7b760b065b23efe842f84774f27e1606c186508" translate="yes" xml:space="preserve">
          <source>standard-minifier-css</source>
          <target state="translated">standard-minifier-css</target>
        </trans-unit>
        <trans-unit id="c5c935e3078e4856147e3536a1174a89366fd0fe" translate="yes" xml:space="preserve">
          <source>standard-minifier-js</source>
          <target state="translated">standard-minifier-js</target>
        </trans-unit>
        <trans-unit id="b22a2840a91bacb1f6e01d3fc8208988072fe3eb" translate="yes" xml:space="preserve">
          <source>static-html</source>
          <target state="translated">static-html</target>
        </trans-unit>
        <trans-unit id="aa83989c850adcae8ef925148d978bb2e7739501" translate="yes" xml:space="preserve">
          <source>statusCodeNumber</source>
          <target state="translated">statusCodeNumber</target>
        </trans-unit>
        <trans-unit id="e425b3085024e944b20e4f80f32d2184fc3f6376" translate="yes" xml:space="preserve">
          <source>statusString</source>
          <target state="translated">statusString</target>
        </trans-unit>
        <trans-unit id="2391ebebb2e141a6296591ac99a4157e9c94c126" translate="yes" xml:space="preserve">
          <source>stop()</source>
          <target state="translated">stop()</target>
        </trans-unit>
        <trans-unit id="7ef27ab18c03510d2f32b8160dbcd4476dd32b5c" translate="yes" xml:space="preserve">
          <source>stopImmediatePropagation()</source>
          <target state="translated">stopImmediatePropagation()</target>
        </trans-unit>
        <trans-unit id="b15f8f63d4cd5bd1058824e14f73bf9b9ea4affc" translate="yes" xml:space="preserve">
          <source>stopPropagation()</source>
          <target state="translated">stopPropagation()</target>
        </trans-unit>
        <trans-unit id="ad1d082e45e9c9cfeebb7a19362108f51012fdf3" translate="yes" xml:space="preserve">
          <source>storing your type client-side in Minimongo.</source>
          <target state="translated">在Minimongo的客户端存储你的类型。</target>
        </trans-unit>
        <trans-unit id="754c12b525469a4a0de566c4dcc3572f6937c1d3" translate="yes" xml:space="preserve">
          <source>subscriptionId</source>
          <target state="translated">subscriptionId</target>
        </trans-unit>
        <trans-unit id="63dc4e9af93d170de794a4d1381cd0176730542d" translate="yes" xml:space="preserve">
          <source>targetDOM Element</source>
          <target state="translated">targetDOM元素</target>
        </trans-unit>
        <trans-unit id="57ccfc6979340891e7fa546f8fe76cbb8070f453" translate="yes" xml:space="preserve">
          <source>then you&amp;rsquo;ll need to import &lt;code&gt;Todos&lt;/code&gt; both in that file and in the test:</source>
          <target state="translated">那么您需要在该文件和测试中同时导入 &lt;code&gt;Todos&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="998ce3c46a62e42e8da88bfa0578dd35e0261470" translate="yes" xml:space="preserve">
          <source>this.added()</source>
          <target state="translated">this.added()</target>
        </trans-unit>
        <trans-unit id="dedb150fbcd5341d63bb5c5fe4c8af9e44bddb6b" translate="yes" xml:space="preserve">
          <source>this.changed()</source>
          <target state="translated">this.changed()</target>
        </trans-unit>
        <trans-unit id="dcaee1dbdb8dee3d73923fa3979be501265a1633" translate="yes" xml:space="preserve">
          <source>this.connection</source>
          <target state="translated">this.connection</target>
        </trans-unit>
        <trans-unit id="648515391fe232cdbe01bfaa097913307421f900" translate="yes" xml:space="preserve">
          <source>this.error()</source>
          <target state="translated">this.error()</target>
        </trans-unit>
        <trans-unit id="56b4a9013193acb055264f70bdc3216bb7025e94" translate="yes" xml:space="preserve">
          <source>this.isSimulation</source>
          <target state="translated">this.isSimulation</target>
        </trans-unit>
        <trans-unit id="454626c560d7c9c3f8a51b43bfff6d84a5acc256" translate="yes" xml:space="preserve">
          <source>this.onStop()</source>
          <target state="translated">this.onStop()</target>
        </trans-unit>
        <trans-unit id="6737c79d410b920b0054902750ef22374dbdf7c7" translate="yes" xml:space="preserve">
          <source>this.ready()</source>
          <target state="translated">this.ready()</target>
        </trans-unit>
        <trans-unit id="89afe52b86c3889f25fa2278cb337d0a1658f2ee" translate="yes" xml:space="preserve">
          <source>this.removed()</source>
          <target state="translated">this.removed()</target>
        </trans-unit>
        <trans-unit id="820a06fcb7f5b40a96f42159f3a900998789f728" translate="yes" xml:space="preserve">
          <source>this.setUserId()</source>
          <target state="translated">this.setUserId()</target>
        </trans-unit>
        <trans-unit id="10e5d9c1da767dac16046d9bb5e88cb510f2a344" translate="yes" xml:space="preserve">
          <source>this.stop()</source>
          <target state="translated">this.stop()</target>
        </trans-unit>
        <trans-unit id="b386dda33725f71caed877eab0952302e2808769" translate="yes" xml:space="preserve">
          <source>this.unblock()</source>
          <target state="translated">this.unblock()</target>
        </trans-unit>
        <trans-unit id="22391baea91712e653f15c774a97b60545067b3a" translate="yes" xml:space="preserve">
          <source>this.userId</source>
          <target state="translated">this.userId</target>
        </trans-unit>
        <trans-unit id="26baf33fc32935132ec7550c1383167674b1712a" translate="yes" xml:space="preserve">
          <source>though keep in mind that since the exclusion is by prefix (this is a limitation of the application cache manifest), excluding &lt;code&gt;/largedata.json&lt;/code&gt; will also exclude such URLs as &lt;code&gt;/largedata.json.orig&lt;/code&gt; and &lt;code&gt;/largedata.json/file1&lt;/code&gt;.</source>
          <target state="translated">尽管要记住，由于排除是通过前缀进行的（这是应用程序缓存清单的限制），所以排除 &lt;code&gt;/largedata.json&lt;/code&gt; 还将排除诸如 &lt;code&gt;/largedata.json.orig&lt;/code&gt; 和 &lt;code&gt;/largedata.json/file1&lt;/code&gt; 之类的URL 。</target>
        </trans-unit>
        <trans-unit id="ec93f2e9b718802cb48e29d13c62409a296b2b6b" translate="yes" xml:space="preserve">
          <source>time interval in milliseconds after which rule's counters are reset. Default = 1000.</source>
          <target state="translated">重置规则计数器的时间间隔(毫秒)。默认值=1000。</target>
        </trans-unit>
        <trans-unit id="8c6ae142dcaf7a80bda8e0fe217f1156a4842ca8" translate="yes" xml:space="preserve">
          <source>tracker</source>
          <target state="translated">tracker</target>
        </trans-unit>
        <trans-unit id="7724755d91bdf156391d60c8e541cc016069f025" translate="yes" xml:space="preserve">
          <source>typeString</source>
          <target state="translated">typeString</target>
        </trans-unit>
        <trans-unit id="64bc6893bc3cd89e154861739424a03acc7fa393" translate="yes" xml:space="preserve">
          <source>underscore</source>
          <target state="translated">underscore</target>
        </trans-unit>
        <trans-unit id="6941455180eddfa012acff6599db3cc19414485f" translate="yes" xml:space="preserve">
          <source>update(userId, doc, fieldNames, modifier)</source>
          <target state="translated">update(userId,doc,fieldNames,modifier)</target>
        </trans-unit>
        <trans-unit id="1c57162a6cef7912ab8ec25c6f868e465f2ac932" translate="yes" xml:space="preserve">
          <source>userId in DDP</source>
          <target state="translated">DDP中的用户ID</target>
        </trans-unit>
        <trans-unit id="32fa043bb813fcc7f432930643740540dbb33faf" translate="yes" xml:space="preserve">
          <source>userObject</source>
          <target state="translated">userObject</target>
        </trans-unit>
        <trans-unit id="a5d1b3feae16382df6e19f5a62b83130a10db8b4" translate="yes" xml:space="preserve">
          <source>v.25.&lt;strong&gt;3.0&lt;/strong&gt;&lt;strong&gt;will not work&lt;/strong&gt; due to &lt;a href=&quot;https://developer.android.com/studio/releases/sdk-tools.html&quot;&gt;extensive changes&lt;/a&gt;. See &lt;a href=&quot;https://github.com/meteor/meteor/issues/8464&quot;&gt;issue #8464&lt;/a&gt; for more information.</source>
          <target state="translated">v.25。由于进行了&lt;a href=&quot;https://developer.android.com/studio/releases/sdk-tools.html&quot;&gt;广泛的更改，&lt;/a&gt;&lt;strong&gt;3.0 &lt;/strong&gt;&lt;strong&gt;将无法正常工作&lt;/strong&gt;。有关更多信息，请参见&lt;a href=&quot;https://github.com/meteor/meteor/issues/8464&quot;&gt;问题＃8464&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d2278cd7906e178c08854dde22a1222c0870d337" translate="yes" xml:space="preserve">
          <source>webapp</source>
          <target state="translated">webapp</target>
        </trans-unit>
        <trans-unit id="b4d485bdd0e2fc3d3eb72c008213efa5bfb9b905" translate="yes" xml:space="preserve">
          <source>whichNumber</source>
          <target state="translated">whichNumber</target>
        </trans-unit>
        <trans-unit id="fb360f9c09ac8c5edb2f18be5de4e80ea4c430d0" translate="yes" xml:space="preserve">
          <source>yes</source>
          <target state="translated">yes</target>
        </trans-unit>
        <trans-unit id="1abfabe581e56f5a89f11de2b5983b661f57771e" translate="yes" xml:space="preserve">
          <source>your compatibility version would not change.</source>
          <target state="translated">您的兼容性版本不会改变。</target>
        </trans-unit>
        <trans-unit id="40f879ca3ed1a06d3391c60c86cbd53b0b71323d" translate="yes" xml:space="preserve">
          <source>{ _id: &amp;ldquo;1&amp;rdquo;}</source>
          <target state="translated">{_id：&amp;ldquo; 1&amp;rdquo;}</target>
        </trans-unit>
        <trans-unit id="23755fe1288af72e293d0ea9430da108a7bd4a9a" translate="yes" xml:space="preserve">
          <source>{ _id: &amp;ldquo;eMtGij5AFESbTKfkT&amp;rdquo;}</source>
          <target state="translated">{_id：&amp;ldquo; eMtGij5AFESbTKfkT&amp;rdquo;}</target>
        </trans-unit>
        <trans-unit id="deecf398b57231a458c154b9c72c8cd28568a836" translate="yes" xml:space="preserve">
          <source>{ todoSort: &amp;ldquo;top&amp;rdquo; }</source>
          <target state="translated">{todoSort：&amp;ldquo;顶部&amp;rdquo;}</target>
        </trans-unit>
        <trans-unit id="4448e1dbcb7f6e8f55f2f5b257a1169d8c4db209" translate="yes" xml:space="preserve">
          <source>{ }</source>
          <target state="translated">{}</target>
        </trans-unit>
        <trans-unit id="ade57cfa4384f99c7aa2665116aa623962e92578" translate="yes" xml:space="preserve">
          <source>{{ currentUser }}</source>
          <target state="translated">{{ 当前用户 }}</target>
        </trans-unit>
        <trans-unit id="8fdf813e9b8965614d6ba010b7f33c56eea39d31" translate="yes" xml:space="preserve">
          <source>{{ loggingIn }}</source>
          <target state="translated">{{ 在登录 }}</target>
        </trans-unit>
        <trans-unit id="091a9c159802ba71c70f9fc01b633d56d0f8951a" translate="yes" xml:space="preserve">
          <source>{{&amp;gt; Template.dynamic }}</source>
          <target state="translated">{{&amp;gt; Template.dynamic}}</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
