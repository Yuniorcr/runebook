<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="meteor">
    <body>
      <group id="meteor">
        <trans-unit id="3ce1177dc30f77e6f0fbc70f020c8ae44e2e9689" translate="yes" xml:space="preserve">
          <source>Optional &lt;code&gt;this&lt;/code&gt; object against which the original function will be invoked</source>
          <target state="translated">可选 &lt;code&gt;this&lt;/code&gt; 对象，将针对其调用原始函数</target>
        </trans-unit>
        <trans-unit id="f2b502fca25acb3346f68d51a3ad71866861a590" translate="yes" xml:space="preserve">
          <source>Optional DDP connection to reuse.</source>
          <target state="translated">可选DDP连接再利用。</target>
        </trans-unit>
        <trans-unit id="2b1ca519d2c3b87735efeacac429adc8fee78d73" translate="yes" xml:space="preserve">
          <source>Optional Filepath to documentation. Set to 'README.md' by default. Set this to null to submit no documentation.</source>
          <target state="translated">可选的文档文件路径,默认设置为'README.md'。默认设置为'README.md'。如果设置为空,则不提交文档。</target>
        </trans-unit>
        <trans-unit id="2062de28015111b04b8268cd932fc2b20032e827" translate="yes" xml:space="preserve">
          <source>Optional Git URL to the source repository.</source>
          <target state="translated">可选的Git源代码库的URL。</target>
        </trans-unit>
        <trans-unit id="94c373a3c0ac95938eb633d1206fa0279edf48a4" translate="yes" xml:space="preserve">
          <source>Optional URL for creating a new DDP connection.</source>
          <target state="translated">用于创建新的DDP连接的可选URL。</target>
        </trans-unit>
        <trans-unit id="8d5edf0beffc1c25094d5e082f632e8205f48854" translate="yes" xml:space="preserve">
          <source>Optional additional data to be added into the token record.</source>
          <target state="translated">可选择添加到标记记录中的附加数据。</target>
        </trans-unit>
        <trans-unit id="1a356eac4559527a400d214412af5f40ab962e26" translate="yes" xml:space="preserve">
          <source>Optional arguments passed to publisher function on server.</source>
          <target state="translated">可选参数传递给服务器上的发布者函数。</target>
        </trans-unit>
        <trans-unit id="a5da6453042ca4b5635c452fd01e6b699d109668" translate="yes" xml:space="preserve">
          <source>Optional callback, which is called asynchronously with the error or result after the function is complete. If not provided, the function runs synchronously.</source>
          <target state="translated">可选回调,在函数完成后与错误或结果一起异步调用。如果没有提供,函数将同步运行。</target>
        </trans-unit>
        <trans-unit id="bb4007f4f60af4f689bc9f284f5276d1931420ba" translate="yes" xml:space="preserve">
          <source>Optional callback, which is called asynchronously with the error or result after the method is complete. If not provided, the method runs synchronously if possible (see below).</source>
          <target state="translated">可选的回调,在方法完成后与错误或结果一起异步调用。如果没有提供回调,方法将尽可能同步运行(见下文)。</target>
        </trans-unit>
        <trans-unit id="2e976b73a75d7017485e073a00b9d1e522a65217" translate="yes" xml:space="preserve">
          <source>Optional callback. Called with no arguments on success, or with a single &lt;code&gt;Error&lt;/code&gt; argument on failure.</source>
          <target state="translated">可选的回调。在成功时不带任何参数，在失败时仅带一个 &lt;code&gt;Error&lt;/code&gt; 参数。</target>
        </trans-unit>
        <trans-unit id="866264afd4838ebd59331c1a9808fb598b6a278e" translate="yes" xml:space="preserve">
          <source>Optional callback. Called with no arguments on success, or with a single &lt;code&gt;Error&lt;/code&gt; argument on failure. The callback cannot be called if you are using the &quot;redirect&quot; &lt;code&gt;loginStyle&lt;/code&gt;, because the app will have reloaded in the meantime; try using &lt;a href=&quot;#accounts_onlogin&quot;&gt;client-side login hooks&lt;/a&gt; instead.</source>
          <target state="translated">可选的回调。在成功时不带任何参数，在失败时仅带一个 &lt;code&gt;Error&lt;/code&gt; 参数。如果您使用的是&amp;ldquo; redirect&amp;rdquo; &lt;code&gt;loginStyle&lt;/code&gt; ，则无法调用该回调，因为在此期间，该应用将被重新加载；尝试改用&lt;a href=&quot;#accounts_onlogin&quot;&gt;客户端登录挂钩&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7aaafbc93ce519b4d7800e3dccb2592a79af8b49" translate="yes" xml:space="preserve">
          <source>Optional callback. If passed, the method runs asynchronously, instead of synchronously, and calls asyncCallback. On the client, this callback is required.</source>
          <target state="translated">可选的回调。如果通过,该方法将异步运行,而不是同步运行,并调用asyncCallback。在客户端,这个回调是必需的。</target>
        </trans-unit>
        <trans-unit id="16014bc07737a03deb25e654724ccf83b20f299f" translate="yes" xml:space="preserve">
          <source>Optional callback; same semantics as in &lt;a href=&quot;#meteor_call&quot;&gt;&lt;code&gt;Meteor.call&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">可选的回调；与&lt;a href=&quot;#meteor_call&quot;&gt; &lt;code&gt;Meteor.call&lt;/code&gt; 中的&lt;/a&gt;语义相同。</target>
        </trans-unit>
        <trans-unit id="b0ea2a35fd3e3fe5a82e1460dcc3c6da40f9714a" translate="yes" xml:space="preserve">
          <source>Optional length of the identifier in characters (defaults to 17)</source>
          <target state="translated">标识符的长度可选,以字符为单位(默认为17)。</target>
        </trans-unit>
        <trans-unit id="6aa5d2cb894ed9a13e151cce0449c21df87ddb15" translate="yes" xml:space="preserve">
          <source>Optional length of the secret string (defaults to 43 characters, or 256 bits of entropy)</source>
          <target state="translated">可选的秘密字符串长度(默认为43个字符,或256位熵)</target>
        </trans-unit>
        <trans-unit id="3ce46e8cfee821a0da260af67de15dd1a98939eb" translate="yes" xml:space="preserve">
          <source>Optional method arguments</source>
          <target state="translated">可选方法参数</target>
        </trans-unit>
        <trans-unit id="5748f7150e5050a60bbf656d8939815142e707b6" translate="yes" xml:space="preserve">
          <source>Optional name override. By default, the package name comes from the name of its directory.</source>
          <target state="translated">可选的名称覆盖。默认情况下,包名来自于它的目录名。</target>
        </trans-unit>
        <trans-unit id="0089fb8b63f95d6ef7ec9a543e2b97dfe94b3e11" translate="yes" xml:space="preserve">
          <source>Optional performance enhancement. Limits the fields that will be fetched from the database for inspection by your &lt;code&gt;update&lt;/code&gt; and &lt;code&gt;remove&lt;/code&gt; functions.</source>
          <target state="translated">可选的性能增强。限制将从数据库中获取以供 &lt;code&gt;update&lt;/code&gt; 和 &lt;code&gt;remove&lt;/code&gt; 功能检查的字段。</target>
        </trans-unit>
        <trans-unit id="abed5a45d77ee470c604514993b668b923e8ccf7" translate="yes" xml:space="preserve">
          <source>Optional. A Function that returns &lt;a href=&quot;#Renderable-Content&quot;&gt;&lt;em&gt;renderable content&lt;/em&gt;&lt;/a&gt;. If no &lt;code&gt;elseFunc&lt;/code&gt; is supplied, no content is shown in the &quot;else&quot; case.</source>
          <target state="translated">可选的。一个返回&lt;a href=&quot;#Renderable-Content&quot;&gt;&lt;em&gt;可渲染内容的&lt;/em&gt;&lt;/a&gt;函数。如果未提供 &lt;code&gt;elseFunc&lt;/code&gt; ，则在&amp;ldquo;其他&amp;rdquo;情况下不显示任何内容。</target>
        </trans-unit>
        <trans-unit id="5e65194d6f58a86bd97335b088d3295ee7b2c5d0" translate="yes" xml:space="preserve">
          <source>Optional. A function of two arguments, called on the old value and the new value whenever the ReactiveVar is set. If it returns true, no set is performed. If omitted, the default &lt;code&gt;equalsFunc&lt;/code&gt; returns true if its arguments are &lt;code&gt;===&lt;/code&gt; and are of type number, boolean, string, undefined, or null.</source>
          <target state="translated">可选的。设置ReactiveVar时，有两个参数的函数，分别调用旧值和新值。如果返回true，则不执行任何设置。如果省略，则默认的 &lt;code&gt;equalsFunc&lt;/code&gt; 如果其参数为 &lt;code&gt;===&lt;/code&gt; 并且类型为数字，布尔值，字符串，未定义或null ，则返回true 。</target>
        </trans-unit>
        <trans-unit id="8fa18ab3197cd6b44e01abc99d3e338d8cdab003" translate="yes" xml:space="preserve">
          <source>Optional. A name for Views constructed by this Template. See &lt;a href=&quot;#view_name&quot;&gt;&lt;code&gt;view.name&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">可选的。此模板构造的视图的名称。参见&lt;a href=&quot;#view_name&quot;&gt; &lt;code&gt;view.name&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6b14192f51827ea632949522f7e65b43830aba77" translate="yes" xml:space="preserve">
          <source>Optional. A name for this type of View. See &lt;a href=&quot;#view_name&quot;&gt;&lt;code&gt;view.name&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">可选的。此类视图的名称。参见&lt;a href=&quot;#view_name&quot;&gt; &lt;code&gt;view.name&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="78797f45c0309eca53361a2860d6297bcb89d13f" translate="yes" xml:space="preserve">
          <source>Optional. A platform name (either &lt;code&gt;ios&lt;/code&gt; or &lt;code&gt;android&lt;/code&gt;) to add a platform-specific preference.</source>
          <target state="translated">可选的。用于添加特定于平台的首选项的平台名称（ &lt;code&gt;ios&lt;/code&gt; 或 &lt;code&gt;android&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="db38daefcfbd47ee3e35bf4b8e14484d90c60442" translate="yes" xml:space="preserve">
          <source>Optional. A short human-readable summary of the error, like 'Not Found'.</source>
          <target state="translated">可选。一个简短的可读的错误摘要,如 &quot;未找到&quot;。</target>
        </trans-unit>
        <trans-unit id="7d0d07563690955a9a423f8fc1188c501de82f77" translate="yes" xml:space="preserve">
          <source>Optional. Additional information about the error, like a textual stack trace.</source>
          <target state="translated">可选。关于错误的附加信息,如文本堆栈跟踪。</target>
        </trans-unit>
        <trans-unit id="7acf3396eb1b8186caf2ebe0eeef32302661403e" translate="yes" xml:space="preserve">
          <source>Optional. An element that was rendered by a Meteor, or a View.</source>
          <target state="translated">可选。一个由Meteor或View渲染的元素。</target>
        </trans-unit>
        <trans-unit id="a83c6bb1fbdcd2e8fa8e4d899334bcbf154dc31d" translate="yes" xml:space="preserve">
          <source>Optional. If present, called with an error object as its argument.</source>
          <target state="translated">可选,如果存在,则以错误对象作为参数调用。如果存在,以错误对象作为参数调用。</target>
        </trans-unit>
        <trans-unit id="7172808148a20fcb88bff0c5e39babf6d4769434" translate="yes" xml:space="preserve">
          <source>Optional. If present, called with an error object as the first argument and, if no error, the _id as the second.</source>
          <target state="translated">可选。如果存在,以错误对象作为第一个参数调用,如果没有错误,以_id作为第二个参数调用。</target>
        </trans-unit>
        <trans-unit id="81bfa19cc56a07bea98ef9029a4496e78315b142" translate="yes" xml:space="preserve">
          <source>Optional. If present, called with an error object as the first argument and, if no error, the number of affected documents as the second.</source>
          <target state="translated">可选。如果存在,则以错误对象作为第一个参数调用,如果没有错误,则以受影响文档的数量作为第二个参数调用。</target>
        </trans-unit>
        <trans-unit id="9551349951d3883395f5adc34d7af4c4ca072ab8" translate="yes" xml:space="preserve">
          <source>Optional. If provided, it will be set as the rendered View's &lt;a href=&quot;#view_parentview&quot;&gt;&lt;code&gt;parentView&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">可选的。如果提供，它将被设置为渲染的View的&lt;a href=&quot;#view_parentview&quot;&gt; &lt;code&gt;parentView&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9fed3559474c572fc3c65b6053a86dcb9792e630" translate="yes" xml:space="preserve">
          <source>Optional. If provided, must be a child of &lt;em&gt;parentNode&lt;/em&gt;; the template will be inserted before this node. If not provided, the template will be inserted as the last child of parentNode.</source>
          <target state="translated">可选的。如果提供，则必须是&lt;em&gt;parentNode&lt;/em&gt;的子级；模板将插入到该节点之前。如果未提供，则该模板将作为parentNode的最后一个子元素插入。</target>
        </trans-unit>
        <trans-unit id="279b4fdca8d8a5b52a5ec4979dc3c86f0eb24a69" translate="yes" xml:space="preserve">
          <source>Optional. If specified, the View enclosing &lt;code&gt;element&lt;/code&gt; is returned.</source>
          <target state="translated">可选的。如果指定，则返回View封闭 &lt;code&gt;element&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="651bd945d835785fe36f575684104c0a9a9871e7" translate="yes" xml:space="preserve">
          <source>Optional. May include &lt;code&gt;onStop&lt;/code&gt; and &lt;code&gt;onReady&lt;/code&gt; callbacks. If there is an error, it is passed as an argument to &lt;code&gt;onStop&lt;/code&gt;. If a function is passed instead of an object, it is interpreted as an &lt;code&gt;onReady&lt;/code&gt; callback.</source>
          <target state="translated">可选的。可能包括 &lt;code&gt;onStop&lt;/code&gt; 和 &lt;code&gt;onReady&lt;/code&gt; 回调。如果有错误，则将其作为参数传递给 &lt;code&gt;onStop&lt;/code&gt; 。如果传递的是函数而不是对象，则将其解释为 &lt;code&gt;onReady&lt;/code&gt; 回调。</target>
        </trans-unit>
        <trans-unit id="278619d19810441639858f0bd82c7df83403f531" translate="yes" xml:space="preserve">
          <source>Optional. The 24-character hexadecimal contents of the ObjectID to create</source>
          <target state="translated">可选。要创建的对象ID的24个字符的十六进制内容。</target>
        </trans-unit>
        <trans-unit id="40b318f18ba6c3dc352b80788058488f3361d8aa" translate="yes" xml:space="preserve">
          <source>Optional. The data context in which to include the template.</source>
          <target state="translated">可选。包含模板的数据上下文。</target>
        </trans-unit>
        <trans-unit id="eebf8c88808ac3a633db6dd38f739b626cb7d94d" translate="yes" xml:space="preserve">
          <source>Optional. The function to run when an error happens in the Computation. The only argument it receives is the Error thrown. Defaults to the error being logged to the console.</source>
          <target state="translated">可选。当计算过程中发生错误时要运行的函数。接收的唯一参数是Error thrown。默认为将错误记录到控制台。</target>
        </trans-unit>
        <trans-unit id="c83372ac3b89f75804252c05606d98ef60ec719c" translate="yes" xml:space="preserve">
          <source>Optional. Which address of the user's to send the email to. This address must be in the user's &lt;code&gt;emails&lt;/code&gt; list. Defaults to the first email in the list.</source>
          <target state="translated">可选的。要将电子邮件发送到的用户地址。该地址必须在用户的 &lt;code&gt;emails&lt;/code&gt; 列表中。默认为列表中的第一封电子邮件。</target>
        </trans-unit>
        <trans-unit id="33ada2561149e7d23b2d350f77413b812aeee38e" translate="yes" xml:space="preserve">
          <source>Optional. Which address of the user's to send the email to. This address must be in the user's &lt;code&gt;emails&lt;/code&gt; list. Defaults to the first unverified email in the list.</source>
          <target state="translated">可选的。要将电子邮件发送到的用户地址。该地址必须在用户的 &lt;code&gt;emails&lt;/code&gt; 列表中。默认为列表中的第一封未经验证的电子邮件。</target>
        </trans-unit>
        <trans-unit id="2f56f5aa4cbe7513bc2d9a6bdd47cc2223ce6aca" translate="yes" xml:space="preserve">
          <source>Optionally, adds version constraints. Running &lt;code&gt;meteor add package@1.1.0&lt;/code&gt; will add the package at version &lt;code&gt;1.1.0&lt;/code&gt; or higher (but not &lt;code&gt;2.0.0&lt;/code&gt; or higher). If you want to use version &lt;code&gt;1.1.0&lt;/code&gt; exactly, use &lt;code&gt;meteor add package@=1.1.0&lt;/code&gt;. You can also &amp;lsquo;or&amp;rsquo; constraints together: for example, &lt;code&gt;meteor add 'package@=1.0.0 || =2.0.1'&lt;/code&gt; means either 1.0.0 (exactly) or 2.0.1 (exactly).</source>
          <target state="translated">（可选）添加版本约束。运行 &lt;code&gt;meteor add package@1.1.0&lt;/code&gt; 将添加版本为 &lt;code&gt;1.1.0&lt;/code&gt; 或更高版本（但不是 &lt;code&gt;2.0.0&lt;/code&gt; 或更高版本）的软件包。如果要精确使用 &lt;code&gt;1.1.0&lt;/code&gt; 版本，请使用 &lt;code&gt;meteor add package@=1.1.0&lt;/code&gt; 。您也可以一起&amp;ldquo;或&amp;rdquo;约束：例如， &lt;code&gt;meteor add 'package@=1.0.0 || =2.0.1'&lt;/code&gt; 表示1.0.0（完全）或2.0.1（完全）。</target>
        </trans-unit>
        <trans-unit id="f4e349444562c4e622ed3b666533b3b816ba0ada" translate="yes" xml:space="preserve">
          <source>Optionally, you can specify &lt;code&gt;--keystore&lt;/code&gt; to use a different keystore. Don&amp;rsquo;t forget to specify the same keystore when signing the APK.</source>
          <target state="translated">（可选）您可以指定 &lt;code&gt;--keystore&lt;/code&gt; 以使用其他密钥库。对APK进行签名时，请不要忘记指定相同的密钥库。</target>
        </trans-unit>
        <trans-unit id="e6706c19aec47d4686c9813cdbd6ac4ed3a000bb" translate="yes" xml:space="preserve">
          <source>Optionally: Create an Android Virtual Device to run apps on an emulator</source>
          <target state="translated">可以选择。创建一个Android虚拟设备,在模拟器上运行应用程序。</target>
        </trans-unit>
        <trans-unit id="5364fd6be6783cb880d7c0a1a5a2295f6323d8f4" translate="yes" xml:space="preserve">
          <source>Optionally: Creating an Android Virtual Device (AVD) to run apps on an emulator</source>
          <target state="translated">可选。创建安卓虚拟设备(AVD),在模拟器上运行应用程序。</target>
        </trans-unit>
        <trans-unit id="6bf5da9c080bee3a8142586c412aa39971137eee" translate="yes" xml:space="preserve">
          <source>Options</source>
          <target state="translated">Options</target>
        </trans-unit>
        <trans-unit id="3f8bdb1a6725318bd675ab83c4c58b43596fef29" translate="yes" xml:space="preserve">
          <source>Options passed on to &lt;a href=&quot;#http_call&quot;&gt;&lt;code&gt;HTTP.call&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">选项传递给&lt;a href=&quot;#http_call&quot;&gt; &lt;code&gt;HTTP.call&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="296f90d0078ca72b5d7373a674a7f47df0948861" translate="yes" xml:space="preserve">
          <source>Options to customize emails sent from the Accounts system.</source>
          <target state="translated">自定义从账户系统发送电子邮件的选项。</target>
        </trans-unit>
        <trans-unit id="198374d30341e432a4012d344f967bf53449e96f" translate="yes" xml:space="preserve">
          <source>Or you can wait for a session variable to have a certain value, and do something the first time it does, calling &lt;code&gt;stop&lt;/code&gt; on the computation to prevent further rerunning:</source>
          <target state="translated">或者，您可以等待会话变量具有某个值，然后在第一次执行该操作时，对计算调用 &lt;code&gt;stop&lt;/code&gt; ，以防止再次运行：</target>
        </trans-unit>
        <trans-unit id="2b895a822fda3ad31b9fc8dd367ab3a20f6e47e5" translate="yes" xml:space="preserve">
          <source>Organizing publications</source>
          <target state="translated">组织出版物</target>
        </trans-unit>
        <trans-unit id="639034643937477923c42c76a4bd0f53194aeaa0" translate="yes" xml:space="preserve">
          <source>Original &lt;a href=&quot;https://github.com/arunoda/meteor-up&quot;&gt;Meteor Up&lt;/a&gt; (not generally recommended any longer)</source>
          <target state="translated">原始&lt;a href=&quot;https://github.com/arunoda/meteor-up&quot;&gt;流星&lt;/a&gt;（不再推荐）</target>
        </trans-unit>
        <trans-unit id="5df772b1313681645dfd60212b4ec8ee6fb9b4b1" translate="yes" xml:space="preserve">
          <source>Other DOM events are available as well, but for the events above, Meteor has taken some care to ensure that they work uniformly in all browsers.</source>
          <target state="translated">其他的DOM事件也是可用的,但是对于上面的事件,Meteor已经采取了一些措施来确保它们在所有的浏览器中统一工作。</target>
        </trans-unit>
        <trans-unit id="67ea52f1a7ae74f014909d25b0bddf410e9fbbb3" translate="yes" xml:space="preserve">
          <source>Other considerations</source>
          <target state="translated">其他考虑因素</target>
        </trans-unit>
        <trans-unit id="a3634dabd3bfa7d228620cba5159e1dbf8a66c93" translate="yes" xml:space="preserve">
          <source>Other deployments &lt;em&gt;may&lt;/em&gt; have control panel options or may need to be manually configured on the the proxy server (e.g. HAProxy, nginx, etc.). The articles linked above provide some assistance on this.</source>
          <target state="translated">其他部署&lt;em&gt;可能&lt;/em&gt;具有控制面板选项，或者可能需要在代理服务器上手动配置（例如HAProxy，nginx等）。上面链接的文章对此提供了一些帮助。</target>
        </trans-unit>
        <trans-unit id="1b37a5b9b8e1acc3fca24b207aed275166d10ade" translate="yes" xml:space="preserve">
          <source>Other developers will also need to run the &lt;code&gt;npm link&lt;/code&gt; command.</source>
          <target state="translated">其他开发人员也将需要运行 &lt;code&gt;npm link&lt;/code&gt; 命令。</target>
        </trans-unit>
        <trans-unit id="164e07c655074e1b2ae5980c4f633a5d76cf5e09" translate="yes" xml:space="preserve">
          <source>Other options for React</source>
          <target state="translated">React的其他选项</target>
        </trans-unit>
        <trans-unit id="70635cabe306913f063e2fcd7298d84a798bcc05" translate="yes" xml:space="preserve">
          <source>Our main server entry point &lt;code&gt;server/main.js&lt;/code&gt; then imports this startup module. You can see that here we don&amp;rsquo;t actually import any variables from these files - we just import them so that they execute in this order.</source>
          <target state="translated">然后，我们的主服务器入口点 &lt;code&gt;server/main.js&lt;/code&gt; 导入此启动模块。您可以看到，在这里我们实际上没有从这些文件中导入任何变量，我们只是导入它们，以便它们按此顺序执行。</target>
        </trans-unit>
        <trans-unit id="37b702ca6bad6eaff621f2553351bebfbf853710" translate="yes" xml:space="preserve">
          <source>Our reusable components were a natural fit for a unit test; similarly our smart components tend to require an integration test to really be exercised properly, as the job of a smart component is to bring data together and supply it to a reusable component.</source>
          <target state="translated">我们的可重用组件很自然地适合单元测试;同样,我们的智能组件也往往需要集成测试才能真正正确地行使,因为智能组件的工作是将数据汇集起来并供给给可重用组件。</target>
        </trans-unit>
        <trans-unit id="87ae6abb901f61c0109d4a4133ce7187ec9ab693" translate="yes" xml:space="preserve">
          <source>Override &lt;code&gt;allow&lt;/code&gt; rules.</source>
          <target state="translated">覆盖 &lt;code&gt;allow&lt;/code&gt; 规则。</target>
        </trans-unit>
        <trans-unit id="fce211bc2d7c6f0b086778b048b5ae2383dee5f6" translate="yes" xml:space="preserve">
          <source>Override the default ROOT_URL from the server environment. For example: &quot;&lt;code&gt;http://foo.example.com&lt;/code&gt;&quot;</source>
          <target state="translated">从服务器环境覆盖默认的ROOT_URL。例如：&amp;ldquo; &lt;code&gt;http://foo.example.com&lt;/code&gt; &amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="d4d7fd77ff2c8adb1ca651c2a32212de473f3a13" translate="yes" xml:space="preserve">
          <source>Overrides &lt;code&gt;transform&lt;/code&gt; on the &lt;a href=&quot;#collections&quot;&gt;&lt;code&gt;Collection&lt;/code&gt;&lt;/a&gt; for this cursor. Pass &lt;code&gt;null&lt;/code&gt; to disable transformation.</source>
          <target state="translated">重写对此光标的&lt;a href=&quot;#collections&quot;&gt; &lt;code&gt;Collection&lt;/code&gt; &lt;/a&gt;进行 &lt;code&gt;transform&lt;/code&gt; 。传递 &lt;code&gt;null&lt;/code&gt; 以禁用转换。</target>
        </trans-unit>
        <trans-unit id="a00758d523153346459585439cafa8a44ae7e9c5" translate="yes" xml:space="preserve">
          <source>Overrides &lt;code&gt;transform&lt;/code&gt; on the &lt;a href=&quot;#collections&quot;&gt;&lt;code&gt;Collection&lt;/code&gt;&lt;/a&gt;. Pass &lt;code&gt;null&lt;/code&gt; to disable transformation.</source>
          <target state="translated">重写 &lt;code&gt;transform&lt;/code&gt; 为&lt;a href=&quot;#collections&quot;&gt; &lt;code&gt;Collection&lt;/code&gt; &lt;/a&gt;。传递 &lt;code&gt;null&lt;/code&gt; 以禁用转换。</target>
        </trans-unit>
        <trans-unit id="de89f3f877451fb0093f6e83b2ed4cf84c19913a" translate="yes" xml:space="preserve">
          <source>Overriding packages with a local version</source>
          <target state="translated">用本地版本覆盖软件包</target>
        </trans-unit>
        <trans-unit id="a52e338d221104d419ade7367598cf8aeedb21c6" translate="yes" xml:space="preserve">
          <source>Overriding published packages with a local version</source>
          <target state="translated">用本地版本覆盖已发布的软件包</target>
        </trans-unit>
        <trans-unit id="70fdee66e5d3c3ea7620b52d6faeac128a5a13ed" translate="yes" xml:space="preserve">
          <source>Own server</source>
          <target state="translated">自己的服务器</target>
        </trans-unit>
        <trans-unit id="124a65c4b69218e19c3c3a7964d9775dc6b18e3d" translate="yes" xml:space="preserve">
          <source>PORT</source>
          <target state="translated">PORT</target>
        </trans-unit>
        <trans-unit id="b3f9e003d846ea5821f7feac5cede2f4649277b7" translate="yes" xml:space="preserve">
          <source>Package naming</source>
          <target state="translated">包装命名</target>
        </trans-unit>
        <trans-unit id="992d908f46a352a8ea2d55fd17eac4884a01442d" translate="yes" xml:space="preserve">
          <source>Package source code in directories indicated by setting a &lt;code&gt;METEOR_PACKAGE_DIRS&lt;/code&gt; environment variable before running any &lt;code&gt;meteor&lt;/code&gt; command. You can add multiple directories by separating the paths with a &lt;code&gt;:&lt;/code&gt; on OSX or Linux, or a &lt;code&gt;;&lt;/code&gt; on Windows. For example: &lt;code&gt;METEOR_PACKAGE_DIRS=../first/directory:../second/directory&lt;/code&gt;, or on Windows: &lt;code&gt;set PACKAGE_DIRS=..\first\directory;..\second\directory&lt;/code&gt;.</source>
          <target state="translated">在运行任何 &lt;code&gt;meteor&lt;/code&gt; 命令之前，将源代码打包到通过设置 &lt;code&gt;METEOR_PACKAGE_DIRS&lt;/code&gt; 环境变量指示的目录中。您可以通过在OSX或Linux上用 &lt;code&gt;:&lt;/code&gt; 分隔路径来添加多个目录 &lt;code&gt;;&lt;/code&gt; 在Windows上。例如： &lt;code&gt;METEOR_PACKAGE_DIRS=../first/directory:../second/directory&lt;/code&gt; ，或在Windows上： &lt;code&gt;set PACKAGE_DIRS=..\first\directory;..\second\directory&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ff4ded7d2d80dbbe9dba28169810d901d192738a" translate="yes" xml:space="preserve">
          <source>Package source code in the &lt;code&gt;packages/&lt;/code&gt; directory inside your app.</source>
          <target state="translated">程序 &lt;code&gt;packages/&lt;/code&gt; 目录中的程序包源代码。</target>
        </trans-unit>
        <trans-unit id="38dcedf5b8b3e820deb4726844567d15bda96f48" translate="yes" xml:space="preserve">
          <source>Package this project up for deployment. The output is a directory with several build artifacts:</source>
          <target state="translated">将这个项目打包部署。输出的是一个包含若干构建工件的目录。</target>
        </trans-unit>
        <trans-unit id="a0fefd67a387acb4b67fc7ba1d449b65c7ef1ac4" translate="yes" xml:space="preserve">
          <source>Package-scope variables declared in &lt;code&gt;.js&lt;/code&gt; files are visible in any &lt;code&gt;.coffee&lt;/code&gt; files in the same app or project.</source>
          <target state="translated">&lt;code&gt;.js&lt;/code&gt; 文件中声明的包范围变量在同一应用程序或项目中的任何 &lt;code&gt;.coffee&lt;/code&gt; 文件中均可见。</target>
        </trans-unit>
        <trans-unit id="80bde04107a079b0607142294524a55d82fd02b5" translate="yes" xml:space="preserve">
          <source>Package.describe()</source>
          <target state="translated">Package.describe()</target>
        </trans-unit>
        <trans-unit id="40d3196613f4d36bcf4702009d05dca099daef2c" translate="yes" xml:space="preserve">
          <source>Package.js</source>
          <target state="translated">Package.js</target>
        </trans-unit>
        <trans-unit id="46b4924e5f7b4c743a8b72a4bb853eded12359d2" translate="yes" xml:space="preserve">
          <source>Package.onTest()</source>
          <target state="translated">Package.onTest()</target>
        </trans-unit>
        <trans-unit id="81a69db763dd8a26b5ad050f5c8512ef444d4068" translate="yes" xml:space="preserve">
          <source>Package.onUse()</source>
          <target state="translated">Package.onUse()</target>
        </trans-unit>
        <trans-unit id="6478fd5c20ceaba1753c1e0c0afe60eb2307fafc" translate="yes" xml:space="preserve">
          <source>Package.registerBuildPlugin()</source>
          <target state="translated">Package.registerBuildPlugin()</target>
        </trans-unit>
        <trans-unit id="0a999012ffb87b3edac99adbdfc498b12831a1e2" translate="yes" xml:space="preserve">
          <source>Packages</source>
          <target state="translated">Packages</target>
        </trans-unit>
        <trans-unit id="3559066107681241b25756133ad42bd620942809" translate="yes" xml:space="preserve">
          <source>Packages being depended on. Package names may be suffixed with an @version tag.</source>
          <target state="translated">被依赖的软件包。软件包名称可以用@版本标签作为后缀。</target>
        </trans-unit>
        <trans-unit id="9d183b52b19943da11c4170d725cf78bbea93f62" translate="yes" xml:space="preserve">
          <source>Packages can also specify a &lt;em&gt;lazy&lt;/em&gt; main module:</source>
          <target state="translated">软件包还可以指定一个&lt;em&gt;惰性&lt;/em&gt;主模块：</target>
        </trans-unit>
        <trans-unit id="b6e8f00c5476d774092fd6a8ccc8664d08515763" translate="yes" xml:space="preserve">
          <source>Paginating subscriptions</source>
          <target state="translated">分页订阅</target>
        </trans-unit>
        <trans-unit id="100325b8d6de92dc6ff09cd2c078133755bf274f" translate="yes" xml:space="preserve">
          <source>Pagination</source>
          <target state="translated">Pagination</target>
        </trans-unit>
        <trans-unit id="b69c4398784057ef536416738bdcae23d20b3bbd" translate="yes" xml:space="preserve">
          <source>Parse a string into an EJSON value. Throws an error if the string is not valid EJSON.</source>
          <target state="translated">将一个字符串解析为EJSON值。如果字符串不是有效的EJSON值,则抛出一个错误。</target>
        </trans-unit>
        <trans-unit id="08867752f8690d85f84a6d22987bd22c41a05fbe" translate="yes" xml:space="preserve">
          <source>Particularly useful to assert that arguments to a function have the right types and structure.</source>
          <target state="translated">特别适用于断言一个函数的参数具有正确的类型和结构。</target>
        </trans-unit>
        <trans-unit id="7891c2d0da86a3f1f310af54f03e3780c047c67a" translate="yes" xml:space="preserve">
          <source>Pass callbacks</source>
          <target state="translated">传递回调</target>
        </trans-unit>
        <trans-unit id="36442a8d8a3c36e2ebf4aab70c62b7f1ddde30b9" translate="yes" xml:space="preserve">
          <source>Pass data into helpers</source>
          <target state="translated">将数据传递给助手</target>
        </trans-unit>
        <trans-unit id="cc69b17cb479e5950ec98c31f0c519a94ea149b8" translate="yes" xml:space="preserve">
          <source>Pass that data into a sub-component.</source>
          <target state="translated">将这些数据传递到一个子组件中。</target>
        </trans-unit>
        <trans-unit id="b8005a5cc62aef397b14d280f28e46b700ec684f" translate="yes" xml:space="preserve">
          <source>Passed to &lt;a href=&quot;https://docs.meteor.com/api/pubsub.html#Meteor-subscribe&quot;&gt;&lt;code&gt;Meteor.subscribe&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">传递给&lt;a href=&quot;https://docs.meteor.com/api/pubsub.html#Meteor-subscribe&quot;&gt; &lt;code&gt;Meteor.subscribe&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d722643138fd0d0458a3ebed2b3bcd0d8f537e78" translate="yes" xml:space="preserve">
          <source>Passing HTML content as a template argument</source>
          <target state="translated">传递HTML内容作为模板参数</target>
        </trans-unit>
        <trans-unit id="157af5b91dc8ffc21bf2ad00775dc3df896e8e9f" translate="yes" xml:space="preserve">
          <source>Passing callbacks to a React component</source>
          <target state="translated">将回调传递给React组件</target>
        </trans-unit>
        <trans-unit id="4f68ed21fc56c7f5b451bd1d1d2f4f3db03f183a" translate="yes" xml:space="preserve">
          <source>Passing options</source>
          <target state="translated">传球选择</target>
        </trans-unit>
        <trans-unit id="3d3f2741fe36bd01f082ca434bfece2676c035e4" translate="yes" xml:space="preserve">
          <source>Password login</source>
          <target state="translated">密码登录</target>
        </trans-unit>
        <trans-unit id="02c8304104610b987415dc656a1a2308b1ca7be0" translate="yes" xml:space="preserve">
          <source>Passwords</source>
          <target state="translated">Passwords</target>
        </trans-unit>
        <trans-unit id="2b55f9458e3b539989f93bf5de2466011102d449" translate="yes" xml:space="preserve">
          <source>Paste &lt;code&gt;ext install vscode-eslint&lt;/code&gt; in the command window and press &lt;code&gt;Enter&lt;/code&gt;</source>
          <target state="translated">在命令窗口中粘贴 &lt;code&gt;ext install vscode-eslint&lt;/code&gt; 并按 &lt;code&gt;Enter&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="96823d127a0a2757a51b79120bccf6794fd59de8" translate="yes" xml:space="preserve">
          <source>Path Evaluation</source>
          <target state="translated">路径评估</target>
        </trans-unit>
        <trans-unit id="3288936e66f01aaff1d38efc36d523c466c42db3" translate="yes" xml:space="preserve">
          <source>Paths to the asset files.</source>
          <target state="translated">资产文件的路径。</target>
        </trans-unit>
        <trans-unit id="9baec68cbb2e5a72591c94aa0a227d154c229135" translate="yes" xml:space="preserve">
          <source>Paths to the source files.</source>
          <target state="translated">源文件的路径。</target>
        </trans-unit>
        <trans-unit id="232cf18164f45c3e223a7b945aa9a257060582e2" translate="yes" xml:space="preserve">
          <source>Patterns for building front end components in a performant way in Meteor.</source>
          <target state="translated">在Meteor中以性能化的方式构建前端组件的模式。</target>
        </trans-unit>
        <trans-unit id="d804ab55cc86bf1b710df0bbe6aa6c5ac254ad4b" translate="yes" xml:space="preserve">
          <source>Patterns for data loading</source>
          <target state="translated">数据加载模式</target>
        </trans-unit>
        <trans-unit id="98de53a371d648152a678ae4f111b5738a9daa69" translate="yes" xml:space="preserve">
          <source>Peer npm dependencies</source>
          <target state="translated">同行的npm依赖性</target>
        </trans-unit>
        <trans-unit id="f02d80342fe6db607b38a6b0ddab4a497d829b81" translate="yes" xml:space="preserve">
          <source>Per the usual CoffeeScript convention, CoffeeScript variables are file-scoped by default (visible only in the &lt;code&gt;.coffee&lt;/code&gt; file where they are defined.)</source>
          <target state="translated">根据通常的CoffeeScript约定，默认情况下，CoffeeScript变量是文件作用域的（仅在定义它们的 &lt;code&gt;.coffee&lt;/code&gt; 文件中可见）。</target>
        </trans-unit>
        <trans-unit id="590b9cacaaf73049eda1be3a16cce0ac36d396f2" translate="yes" xml:space="preserve">
          <source>Per-component loading state</source>
          <target state="translated">每个组件的装载状态</target>
        </trans-unit>
        <trans-unit id="e7510d7974e57faa2d28ee023244b247ee02f995" translate="yes" xml:space="preserve">
          <source>Per-document permissions</source>
          <target state="translated">每份文件的权限</target>
        </trans-unit>
        <trans-unit id="2a88f3290f242252e3664464a4e41627ddef5894" translate="yes" xml:space="preserve">
          <source>Perform an outbound HTTP request.</source>
          <target state="translated">执行一个出站HTTP请求。</target>
        </trans-unit>
        <trans-unit id="63c904559993935c470f516c8b549ca7f3640dbb" translate="yes" xml:space="preserve">
          <source>Performance</source>
          <target state="translated">Performance</target>
        </trans-unit>
        <trans-unit id="5bfe7b2a634812bc1553d4395081586562f43e90" translate="yes" xml:space="preserve">
          <source>Permits the use of &lt;a href=&quot;http://flowtype.org/&quot;&gt;Flow&lt;/a&gt; type annotations. These annotations are simply stripped from the code, so they have no effect on the code&amp;rsquo;s behavior, but you can run the &lt;code&gt;flow&lt;/code&gt; tool over your code to check the types if desired.</source>
          <target state="translated">允许使用&lt;a href=&quot;http://flowtype.org/&quot;&gt;Flow&lt;/a&gt;类型注释。这些注释只是从代码中剥离了，因此它们对代码的行为没有影响，但是如果需要，您可以在代码上运行 &lt;code&gt;flow&lt;/code&gt; 工具以检查类型。</target>
        </trans-unit>
        <trans-unit id="9a0f934580e35c80e3730498184ab70cc4e4b77d" translate="yes" xml:space="preserve">
          <source>Places to translate</source>
          <target state="translated">翻译的地方</target>
        </trans-unit>
        <trans-unit id="a9e7f1e55e3a73081cc8e3b64ff6abda3bd53bfe" translate="yes" xml:space="preserve">
          <source>Please refer to &lt;a href=&quot;http://developer.android.com/sdk/installing/index.html?pkg=studio&quot;&gt;the Android Studio installation instructions&lt;/a&gt; for more details on the exact steps to follow.</source>
          <target state="translated">请参阅&lt;a href=&quot;http://developer.android.com/sdk/installing/index.html?pkg=studio&quot;&gt;Android Studio安装说明&lt;/a&gt;，详细了解要遵循的确切步骤。</target>
        </trans-unit>
        <trans-unit id="6620c8bfa2ab84e1a169c0014399408aff658292" translate="yes" xml:space="preserve">
          <source>Plugin.registerSourceHandler()</source>
          <target state="translated">Plugin.registerSourceHandler()</target>
        </trans-unit>
        <trans-unit id="335abfa9c587852e79cfcc36d36e3e67d55e4219" translate="yes" xml:space="preserve">
          <source>Plugins are identified by a name, which is generally the same as their npm package name. The current convention is for plugin names to start with &lt;code&gt;cordova-plugin-&lt;/code&gt;, but not all third-party plugins adhere to this.</source>
          <target state="translated">插件由名称标识，该名称通常与它们的npm软件包名称相同。当前的约定是让插件名称以 &lt;code&gt;cordova-plugin-&lt;/code&gt; 开头，但是并非所有第三方插件都遵守该约定。</target>
        </trans-unit>
        <trans-unit id="86fbb32f1e8ef65605e5487472c87df7855842f5" translate="yes" xml:space="preserve">
          <source>Plugins are installed from &lt;a href=&quot;http://plugins.cordova.io/&quot;&gt;plugins.cordova.io&lt;/a&gt;, so the plugins and versions specified must exist there. Alternatively, the version can be replaced with a GitHub tarball URL as described in the &lt;a href=&quot;https://guide.meteor.com/mobile.html#cordova-plugins&quot;&gt;Cordova&lt;/a&gt; page of the Meteor wiki on GitHub.</source>
          <target state="translated">插件是从&lt;a href=&quot;http://plugins.cordova.io/&quot;&gt;plugins.cordova.io&lt;/a&gt;安装的，因此指定的插件和版本必须存在于此。或者，可以使用GitHub tarball URL替换该版本，如GitHub上Meteor Wiki 的&lt;a href=&quot;https://guide.meteor.com/mobile.html#cordova-plugins&quot;&gt;Cordova&lt;/a&gt;页面中所述。</target>
        </trans-unit>
        <trans-unit id="228a070d3b65ddcff5b58359e120b5be974221c3" translate="yes" xml:space="preserve">
          <source>Point 3. can usually be resolved by placing the hook in the &lt;em&gt;Method&lt;/em&gt; that calls the mutator, rather than the hook itself. Although this is an imperfect compromise (as we need to be careful if we ever add another Method that calls that mutator in the future), it is better than writing a bunch of code that is never actually called (which is guaranteed to not work!), or giving the impression that your hook is more general that it actually is.</source>
          <target state="translated">第3点通常可以通过将钩子放置在调用mutator 的&lt;em&gt;方法&lt;/em&gt;中来解决，而不是通过钩子本身来解决。尽管这是一个不完美的折衷方案（因为我们将来要添加另一个调用该mutator的方法时需要小心），但比编写一堆从未真正被调用过的代码（这肯定不会起作用！）要好得多。 ），或者给人的印象是您的钩子实际上更加笼统。</target>
        </trans-unit>
        <trans-unit id="c65de7239130b2221dc156af1c9b5fa8125b9bf3" translate="yes" xml:space="preserve">
          <source>Polyfills</source>
          <target state="translated">Polyfills</target>
        </trans-unit>
        <trans-unit id="34bc8e7aa201f66589b1ba0065873cfcd166e05f" translate="yes" xml:space="preserve">
          <source>Polyfills for the following &lt;a href=&quot;https://github.com/zloirock/core-js#ecmascript-6-array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt;-related methods:</source>
          <target state="translated">用于以下与&lt;a href=&quot;https://github.com/zloirock/core-js#ecmascript-6-array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt;相关的方法的Polyfills ：</target>
        </trans-unit>
        <trans-unit id="07755feac4fba33effd2d9d90f40e3faa73ea252" translate="yes" xml:space="preserve">
          <source>Polyfills for the following &lt;a href=&quot;https://github.com/zloirock/core-js#ecmascript-6-function&quot;&gt;&lt;code&gt;Function&lt;/code&gt;&lt;/a&gt;-related properties:</source>
          <target state="translated">具有以下与&lt;a href=&quot;https://github.com/zloirock/core-js#ecmascript-6-function&quot;&gt; &lt;code&gt;Function&lt;/code&gt; &lt;/a&gt;相关的属性的Polyfill ：</target>
        </trans-unit>
        <trans-unit id="58c7d8dbbfcc23cf7005b3d896385973b16c9c22" translate="yes" xml:space="preserve">
          <source>Polyfills for the following &lt;a href=&quot;https://github.com/zloirock/core-js#ecmascript-6-object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt;-related methods:</source>
          <target state="translated">以下&lt;a href=&quot;https://github.com/zloirock/core-js#ecmascript-6-object&quot;&gt; &lt;code&gt;Object&lt;/code&gt; &lt;/a&gt;相关方法的Polyfills ：</target>
        </trans-unit>
        <trans-unit id="de56c0b4c6e6e868bb32a426e3de2b6687260ddc" translate="yes" xml:space="preserve">
          <source>Polyfills for the following &lt;a href=&quot;https://github.com/zloirock/core-js#ecmascript-6-string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;-related methods:</source>
          <target state="translated">以下与&lt;a href=&quot;https://github.com/zloirock/core-js#ecmascript-6-string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;相关的方法的Polyfills ：</target>
        </trans-unit>
        <trans-unit id="9e7ba4d9e9da383d37b24f34e030a3b9d520ba8c" translate="yes" xml:space="preserve">
          <source>Popup versus redirect flow</source>
          <target state="translated">弹出式与重定向流</target>
        </trans-unit>
        <trans-unit id="b2ef221e3193ecc713338eb88d02a0cab9694e2a" translate="yes" xml:space="preserve">
          <source>Possible values:</source>
          <target state="translated">可能的数值:</target>
        </trans-unit>
        <trans-unit id="f6ffee1f7d5964009b84b8169b1742ea48e1ff76" translate="yes" xml:space="preserve">
          <source>PostCSS and Autoprefixer</source>
          <target state="translated">PostCSS和Autoprefixer</target>
        </trans-unit>
        <trans-unit id="8f5aa2ea35759e808ce8b0f3efaca68a7e8a756c" translate="yes" xml:space="preserve">
          <source>Pre-built package from Atmosphere. The package is cached in &lt;code&gt;~/.meteor/packages&lt;/code&gt; on Mac/Linux or &lt;code&gt;%LOCALAPPDATA%\.meteor\packages&lt;/code&gt; on Windows, and only loaded into your app as it is built.</source>
          <target state="translated">来自Atmosphere的预编译软件包。程序包缓存在Mac / Linux上的 &lt;code&gt;~/.meteor/packages&lt;/code&gt; 或Windows上的 &lt;code&gt;%LOCALAPPDATA%\.meteor\packages&lt;/code&gt; 中，并且仅在构建时加载到您的应用程序中。</target>
        </trans-unit>
        <trans-unit id="8ef61c9b31cf9ea723f28d7ca56b472545610744" translate="yes" xml:space="preserve">
          <source>Pre-built templates for &lt;a href=&quot;https://github.com/meteor-useraccounts/core/blob/master/Guide.md#available-versions&quot;&gt;Bootstrap, Semantic UI, Materialize, and more&lt;/a&gt;. These templates don&amp;rsquo;t come with the actual CSS framework, so you can pick your favorite Bootstrap package, for example.</source>
          <target state="translated">用于&lt;a href=&quot;https://github.com/meteor-useraccounts/core/blob/master/Guide.md#available-versions&quot;&gt;Bootstrap，语义UI，Materialize等的&lt;/a&gt;预构建模板。这些模板没有实际的CSS框架提供，因此，例如，您可以选择自己喜欢的Bootstrap软件包。</target>
        </trans-unit>
        <trans-unit id="c433f05ddcb133d3d51b09313cede630ce86da8e" translate="yes" xml:space="preserve">
          <source>Prefer &lt;code&gt;{{#each .. in}}&lt;/code&gt;</source>
          <target state="translated">身高 &lt;code&gt;{{#each .. in}}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9dfd349ebee555eb8d652be20dad971cae439eca" translate="yes" xml:space="preserve">
          <source>Preferences</source>
          <target state="translated">Preferences</target>
        </trans-unit>
        <trans-unit id="0e98bb6276bc127f65da256ec5b9c547611366a7" translate="yes" xml:space="preserve">
          <source>Prevent all additional event handlers from being run on this event, including other handlers in this event map, handlers reached by bubbling, and handlers in other event maps.</source>
          <target state="translated">防止所有额外的事件处理程序在此事件上运行,包括此事件图中的其他处理程序、冒泡到达的处理程序以及其他事件图中的处理程序。</target>
        </trans-unit>
        <trans-unit id="faf8b6ecf533db929aead9c23c1f9f63c398027f" translate="yes" xml:space="preserve">
          <source>Prevent the event from propagating (bubbling) up to other elements. Other event handlers matching the same element are still fired, in this and other event maps.</source>
          <target state="translated">防止事件传播(冒泡)到其他元素。在这个事件映射和其他事件映射中,与同一元素匹配的其他事件处理程序仍然会被触发。</target>
        </trans-unit>
        <trans-unit id="83f18522da7a41cf571abe704c5847d66c561af4" translate="yes" xml:space="preserve">
          <source>Preventing re-renders</source>
          <target state="translated">防止重演</target>
        </trans-unit>
        <trans-unit id="c93ae87b516695a9e5a6eb0423c6d99e44056720" translate="yes" xml:space="preserve">
          <source>Prevents the action the browser would normally take in response to this event, such as following a link or submitting a form. Further handlers are still called, but cannot reverse the effect.</source>
          <target state="translated">防止浏览器在响应该事件时通常会采取的行动,例如跟随一个链接或提交一个表单。进一步的处理程序仍会被调用,但不能扭转其效果。</target>
        </trans-unit>
        <trans-unit id="f54ff853ebbb4676d89beaa9d06a21eb19aff79d" translate="yes" xml:space="preserve">
          <source>Prevents this computation from rerunning.</source>
          <target state="translated">防止该计算重新运行。</target>
        </trans-unit>
        <trans-unit id="883267ed51228e6612dfdea9fdcd4c4f6b23711e" translate="yes" xml:space="preserve">
          <source>Previously, Meteor would automatically assume that any &lt;code&gt;MAIL_URL&lt;/code&gt; using port 465 was to be encrypted and automatically changed &lt;code&gt;smtp://&lt;/code&gt; to &lt;code&gt;smtps://&lt;/code&gt;. However, this is not always desired, and not always a safe assumption for Meteor.</source>
          <target state="translated">以前，Meteor会自动假定将使用端口465的任何 &lt;code&gt;MAIL_URL&lt;/code&gt; 进行加密，并自动将 &lt;code&gt;smtp://&lt;/code&gt; 更改为 &lt;code&gt;smtps://&lt;/code&gt; 。但是，这并非总是希望的，对于Meteor来说也不总是一个安全的假设。</target>
        </trans-unit>
        <trans-unit id="9d885f783900e6c78128ccb66893a263d295ba0f" translate="yes" xml:space="preserve">
          <source>Probably the most fundamental type of UI change that requires animation is when items appear or disappear. In Blaze, we can use the &lt;a href=&quot;https://atmospherejs.com/percolate/momentum&quot;&gt;&lt;code&gt;percolate:momentum&lt;/code&gt; package&lt;/a&gt; to plug a standard set of animations from the &lt;a href=&quot;http://julian.com/research/velocity/&quot;&gt;&lt;code&gt;velocity animation library&lt;/code&gt;&lt;/a&gt; into such state changes.</source>
          <target state="translated">可能需要动画的UI更改的最基本类型是项目的出现或消失。在Blaze中，我们可以使用&lt;a href=&quot;https://atmospherejs.com/percolate/momentum&quot;&gt; &lt;code&gt;percolate:momentum&lt;/code&gt; 包&lt;/a&gt;将来自&lt;a href=&quot;http://julian.com/research/velocity/&quot;&gt; &lt;code&gt;velocity animation library&lt;/code&gt; &lt;/a&gt;一组标准动画插入到这种状态变化中。</target>
        </trans-unit>
        <trans-unit id="23559a789f2928b712b9afdd123e384e78bd7406" translate="yes" xml:space="preserve">
          <source>Process all reactive updates immediately and ensure that all invalidated computations are rerun.</source>
          <target state="translated">立即处理所有被动更新,并确保重新运行所有无效的计算。</target>
        </trans-unit>
        <trans-unit id="b1d472e424c03ff52490d1edc8a0e23f95babb92" translate="yes" xml:space="preserve">
          <source>Promises</source>
          <target state="translated">Promises</target>
        </trans-unit>
        <trans-unit id="2de846e277b8bd927a270771b3af25c725c98b4a" translate="yes" xml:space="preserve">
          <source>Property Name</source>
          <target state="translated">物业名称</target>
        </trans-unit>
        <trans-unit id="1e685dbb842b631f007fd297b7933ec922f28e1c" translate="yes" xml:space="preserve">
          <source>Provide additional parameters to the authentication URI. Currently only supported with Google. See &lt;a href=&quot;https://developers.google.com/identity/protocols/OpenIDConnect#authenticationuriparameters&quot;&gt;Google Identity Platform documentation&lt;/a&gt;.</source>
          <target state="translated">为身份验证URI提供其他参数。目前仅支持Google。请参阅&lt;a href=&quot;https://developers.google.com/identity/protocols/OpenIDConnect#authenticationuriparameters&quot;&gt;Google Identity Platform文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="86f6211035ce87a4dd69dcd91d66589fe045fe00" translate="yes" xml:space="preserve">
          <source>Provide basic package information with &lt;code&gt;Package.describe(options)&lt;/code&gt;. To publish a package, you must define &lt;code&gt;summary&lt;/code&gt; and &lt;code&gt;version&lt;/code&gt;.</source>
          <target state="translated">使用 &lt;code&gt;Package.describe(options)&lt;/code&gt; 提供基本的软件包信息。要发布软件包，您必须定义 &lt;code&gt;summary&lt;/code&gt; 和 &lt;code&gt;version&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f5719954a5742f2f63e294accbcce7945375bf98" translate="yes" xml:space="preserve">
          <source>Provide basic package information.</source>
          <target state="translated">提供基本的套餐信息。</target>
        </trans-unit>
        <trans-unit id="b71bcd75aa59c4d7b3709bf728682072e335ae50" translate="yes" xml:space="preserve">
          <source>Provides a shorthand for function expressions. For example, &lt;code&gt;[1, 2, 3].map(x =&amp;gt; x + 1)&lt;/code&gt; evaluates to &lt;code&gt;[2, 3, 4]&lt;/code&gt;. If &lt;code&gt;this&lt;/code&gt; is used in the body of the arrow function, it will be automatically bound to the value of &lt;code&gt;this&lt;/code&gt; in the enclosing scope.</source>
          <target state="translated">提供函数表达式的简写。例如， &lt;code&gt;[1, 2, 3].map(x =&amp;gt; x + 1)&lt;/code&gt; 计算结果为 &lt;code&gt;[2, 3, 4]&lt;/code&gt; 。如果在箭头函数的主体中使用了 &lt;code&gt;this&lt;/code&gt; ，它将自动绑定到封闭范围内的 &lt;code&gt;this&lt;/code&gt; 的值。</target>
        </trans-unit>
        <trans-unit id="9e50c06617663f961c6d0d4fb3cea248fbbbdf53" translate="yes" xml:space="preserve">
          <source>Provides an easy way to iterate over the elements of a collection:</source>
          <target state="translated">提供了一种简单的方法来迭代一个集合的元素。</target>
        </trans-unit>
        <trans-unit id="d69cc6df12ee1e81bdf2f06b4195121fe9873d3b" translate="yes" xml:space="preserve">
          <source>Publication behavior when arguments change</source>
          <target state="translated">当参数改变时的发布行为</target>
        </trans-unit>
        <trans-unit id="0855684c1444ece44c79b3612a7f4cfac9ae6e2a" translate="yes" xml:space="preserve">
          <source>Publications</source>
          <target state="translated">Publications</target>
        </trans-unit>
        <trans-unit id="1f1c22386ac3b78a59d85c050f8295515b9ddb38" translate="yes" xml:space="preserve">
          <source>Publications and Data Loading</source>
          <target state="translated">出版物和数据加载</target>
        </trans-unit>
        <trans-unit id="7e546e644f955582ccca26ae2ed17b1ee720db7b" translate="yes" xml:space="preserve">
          <source>Publications and subscriptions</source>
          <target state="translated">出版物和订阅</target>
        </trans-unit>
        <trans-unit id="616838de7576d6bafe8c82d1dfffa07bf76660ed" translate="yes" xml:space="preserve">
          <source>Publications and subscriptions are the primary way of dealing with data in Meteor&amp;rsquo;s DDP protocol, but lots of data sources use the popular REST protocol for their API. It&amp;rsquo;s useful to be able to convert between the two.</source>
          <target state="translated">发布和订阅是处理Meteor DDP协议中数据的主要方式，但是许多数据源使用流行的REST协议作为其API。能够在两者之间进行转换非常有用。</target>
        </trans-unit>
        <trans-unit id="44953c8c16399990df12c0e6808a11d0ef886924" translate="yes" xml:space="preserve">
          <source>Publications and userId</source>
          <target state="translated">出版物和用户ID</target>
        </trans-unit>
        <trans-unit id="87c0348b446f1563f9b6f94095d33c09573cdbf7" translate="yes" xml:space="preserve">
          <source>Publications are not reactive, and they only re-run when the currently logged in &lt;code&gt;userId&lt;/code&gt; changes, which can be accessed through &lt;code&gt;this.userId&lt;/code&gt;. Because of this, it&amp;rsquo;s easy to accidentally write a publication that is secure when it first runs, but doesn&amp;rsquo;t respond to changes in the app environment. Let&amp;rsquo;s look at an example:</source>
          <target state="translated">发布是无反应的，并且它们仅在当前登录的 &lt;code&gt;userId&lt;/code&gt; 更改时才重新运行，可以通过 &lt;code&gt;this.userId&lt;/code&gt; 访问。因此，很容易意外地编写发布，该发布在初次运行时是安全的，但不会响应应用程序环境中的更改。让我们看一个例子：</target>
        </trans-unit>
        <trans-unit id="1da23a61b8eb53858580daf8d166a724341d993a" translate="yes" xml:space="preserve">
          <source>Publications are not the only place the client gets data from the server. The set of source code files and static assets that are served by your application server could also potentially contain sensitive data:</source>
          <target state="translated">出版物并不是客户端从服务器获取数据的唯一地方。由您的应用程序服务器提供的一组源代码文件和静态资产也可能包含敏感数据。</target>
        </trans-unit>
        <trans-unit id="1158921c3af55d6ea4b5c57c99d9d4837b8606d6" translate="yes" xml:space="preserve">
          <source>Publications are the primary way a Meteor server can make data available to a client. While with Methods the primary concern was making sure users can&amp;rsquo;t modify the database in unexpected ways, with publications the main issue is filtering the data being returned so that a malicious user can&amp;rsquo;t get access to data they aren&amp;rsquo;t supposed to see.</source>
          <target state="translated">发布是Meteor服务器向客户端提供数据的主要方式。使用Methods时，主要的问题是确保用户不能以意外的方式修改数据库，而使用发布时，主要问题是过滤返回的数据，以使恶意用户无法访问不应看到的数据。</target>
        </trans-unit>
        <trans-unit id="fe963bdf7fb16fbc6ecc5e0bdcdcb4f31fc3bc0a" translate="yes" xml:space="preserve">
          <source>Publish a record set.</source>
          <target state="translated">发布一套记录。</target>
        </trans-unit>
        <trans-unit id="0ecab94e8396634ea220582c8c290d482a5057ef" translate="yes" xml:space="preserve">
          <source>Publish and subscribe</source>
          <target state="translated">发布和订阅</target>
        </trans-unit>
        <trans-unit id="8a7727674e3f1ce41f843f4991b95a53deb41f11" translate="yes" xml:space="preserve">
          <source>Publish functions can return a &lt;a href=&quot;#mongo_cursor&quot;&gt;&lt;code&gt;Collection.Cursor&lt;/code&gt;&lt;/a&gt;, in which case Meteor will publish that cursor&amp;rsquo;s documents to each subscribed client. You can also return an array of &lt;code&gt;Collection.Cursor&lt;/code&gt;s, in which case Meteor will publish all of the cursors.</source>
          <target state="translated">发布函数可以返回&lt;a href=&quot;#mongo_cursor&quot;&gt; &lt;code&gt;Collection.Cursor&lt;/code&gt; &lt;/a&gt;，在这种情况下，Meteor会将光标的文档发布到每个订阅的客户端。您还可以返回一个 &lt;code&gt;Collection.Cursor&lt;/code&gt; 数组，在这种情况下，Meteor将发布所有游标。</target>
        </trans-unit>
        <trans-unit id="d7d6e9da660fdddc77ee12d9b9b9e4c85445d654" translate="yes" xml:space="preserve">
          <source>Publishes a build of an existing package version from a different architecture.</source>
          <target state="translated">从不同的架构中发布一个现有软件包版本的构建。</target>
        </trans-unit>
        <trans-unit id="2c21a1f6e7f7e1fb7e8ac96e291eb5de4f5f147f" translate="yes" xml:space="preserve">
          <source>Publishes a release of Meteor. Takes in a JSON configuration file.</source>
          <target state="translated">发布Meteor的一个版本。读取JSON配置文件。</target>
        </trans-unit>
        <trans-unit id="aad9c0a458a08cfd4f5e8f1d16e0ad848af395b7" translate="yes" xml:space="preserve">
          <source>Publishes your package. To publish, you must &lt;code&gt;cd&lt;/code&gt; into the package directory, log in with your Meteor Developer Account and run &lt;code&gt;meteor publish&lt;/code&gt;. By convention, published package names must begin with the maintainer&amp;rsquo;s Meteor Developer Account username and a colon, like so: &lt;code&gt;iron:router&lt;/code&gt;.</source>
          <target state="translated">发布您的包。要发布，则必须 &lt;code&gt;cd&lt;/code&gt; 到包目录，请使用您的流星开发者帐户和运行 &lt;code&gt;meteor publish&lt;/code&gt; 。按照惯例，发布的程序包名称必须以维护者的Meteor开发人员帐户用户名和冒号开头，例如： &lt;code&gt;iron:router&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d1ae649c77fbe74454ae984c4567ee92eaf7e62a" translate="yes" xml:space="preserve">
          <source>Publishing custom data</source>
          <target state="translated">发布自定义数据</target>
        </trans-unit>
        <trans-unit id="cf072ddc78088bd17cc6fbb56f69b9c147eed725" translate="yes" xml:space="preserve">
          <source>Publishing relational data</source>
          <target state="translated">发布关系型数据</target>
        </trans-unit>
        <trans-unit id="ec5a5c4535a32a0f51364b08a7b62982d5da8cd1" translate="yes" xml:space="preserve">
          <source>Publishing your package</source>
          <target state="translated">发布您的包</target>
        </trans-unit>
        <trans-unit id="8cf28850d801a770993108c5c98eaf31759d0270" translate="yes" xml:space="preserve">
          <source>QA the application on the staging server.</source>
          <target state="translated">在暂存服务器上对应用程序进行质量保证。</target>
        </trans-unit>
        <trans-unit id="70fce46ec46c599814c13e8d42f1d5b7a21134b6" translate="yes" xml:space="preserve">
          <source>Queries can specify a particular set of fields to include or exclude from the result object.</source>
          <target state="translated">查询可以指定一组特定的字段,以便从结果对象中包含或排除。</target>
        </trans-unit>
        <trans-unit id="0fb02e04d4ffb26f0e1039c0ef20570656f8f128" translate="yes" xml:space="preserve">
          <source>Query string to go in the URL. Overwrites any query string in &lt;code&gt;url&lt;/code&gt;.</source>
          <target state="translated">查询字符串以输入URL。覆盖 &lt;code&gt;url&lt;/code&gt; 中的所有查询字符串。</target>
        </trans-unit>
        <trans-unit id="b342f020314b26a7fba16949f44e287503b5ee8f" translate="yes" xml:space="preserve">
          <source>Quick start</source>
          <target state="translated">快速启动</target>
        </trans-unit>
        <trans-unit id="970323b6af000949a28f21a657b8fb9c7c025e01" translate="yes" xml:space="preserve">
          <source>ROOT_URL</source>
          <target state="translated">ROOT_URL</target>
        </trans-unit>
        <trans-unit id="c5a205ec66ee47186f2a312c8c46890626de2077" translate="yes" xml:space="preserve">
          <source>Random.choice</source>
          <target state="translated">Random.choice</target>
        </trans-unit>
        <trans-unit id="65c230ed7fe6f7a31a8f0f91fd95d6a948ad893b" translate="yes" xml:space="preserve">
          <source>Random.fraction</source>
          <target state="translated">Random.fraction</target>
        </trans-unit>
        <trans-unit id="27fc9bd71a4531953e5ed0a544bd5ac559a9ebdf" translate="yes" xml:space="preserve">
          <source>Random.hexString</source>
          <target state="translated">Random.hexString</target>
        </trans-unit>
        <trans-unit id="3fc8d6ef3c559f953730d5982bf468051bebc6cd" translate="yes" xml:space="preserve">
          <source>Random.id</source>
          <target state="translated">Random.id</target>
        </trans-unit>
        <trans-unit id="82444551ce40ed8d6ca4dccf672ab6cf6a199dac" translate="yes" xml:space="preserve">
          <source>Random.secret</source>
          <target state="translated">Random.secret</target>
        </trans-unit>
        <trans-unit id="e9f05aa2c47c6bff64cd5f9cf0a523af4429924d" translate="yes" xml:space="preserve">
          <source>Rate Limiting</source>
          <target state="translated">费率限制</target>
        </trans-unit>
        <trans-unit id="e663f74edb9d15a14c0184e9940248e5e0ce4a56" translate="yes" xml:space="preserve">
          <source>Rate limiting</source>
          <target state="translated">速率限制</target>
        </trans-unit>
        <trans-unit id="b7589558b832752969324a2eca6730f29c3b81cd" translate="yes" xml:space="preserve">
          <source>Rather than accessing data in helpers via &lt;code&gt;this&lt;/code&gt;, it&amp;rsquo;s better to pass the arguments in directly from the template. So our &lt;code&gt;checkedClass&lt;/code&gt; helper takes the &lt;code&gt;todo&lt;/code&gt; as an argument and inspects it directly, rather than implicitly using &lt;code&gt;this.todo&lt;/code&gt;. We do this for similar reasons to why we always pass arguments to template inclusions, and because &amp;ldquo;template variables&amp;rdquo; (such as the iteratee of the &lt;code&gt;{{#each .. in}}&lt;/code&gt; helper) are not available on &lt;code&gt;this&lt;/code&gt;.</source>
          <target state="translated">与其通过 &lt;code&gt;this&lt;/code&gt; 访问帮助程序中的数据，不如直接从模板传递参数。因此，我们的 &lt;code&gt;checkedClass&lt;/code&gt; 帮助器将 &lt;code&gt;todo&lt;/code&gt; 用作参数并直接检查它，而不是隐式使用 &lt;code&gt;this.todo&lt;/code&gt; 。我们这样做的原因与我们总是将参数传递给模板包含项的原因类似，并且因为&amp;ldquo;模板变量&amp;rdquo;（例如 &lt;code&gt;{{#each .. in}}&lt;/code&gt; ＃each..in }}帮助程序的迭代器）在 &lt;code&gt;this&lt;/code&gt; 上不可用。</target>
        </trans-unit>
        <trans-unit id="573337c1079c60c541c96b8dc447bb8f314bb4d9" translate="yes" xml:space="preserve">
          <source>Rather than dealing with the specifics of this field, it can be helpful to just ignore its existence entirely. You can safely do that as long as you deny all writes from the client:</source>
          <target state="translated">与其处理这个字段的细节,不如完全忽略它的存在。只要你拒绝来自客户端的所有写入,你就可以放心地这样做。</target>
        </trans-unit>
        <trans-unit id="3375581da7c02fdd84432ad6135794c4116cb6da" translate="yes" xml:space="preserve">
          <source>Re-rendering</source>
          <target state="translated">Re-rendering</target>
        </trans-unit>
        <trans-unit id="4d1f996aa17807ebebdb5143b01f86f170d5bea6" translate="yes" xml:space="preserve">
          <source>React</source>
          <target state="translated">React</target>
        </trans-unit>
        <trans-unit id="49c1cb79114912416ad2b3bd24b66eabadd2acd4" translate="yes" xml:space="preserve">
          <source>React Components in Blaze</source>
          <target state="translated">Blaze中的React组件</target>
        </trans-unit>
        <trans-unit id="55a38b3edc3904e22c3fddf2b60febe07b47d508" translate="yes" xml:space="preserve">
          <source>React Router</source>
          <target state="translated">React Router</target>
        </trans-unit>
        <trans-unit id="6e5b7376e594b7899814b8447d6979037e782702" translate="yes" xml:space="preserve">
          <source>React Router embraces React-specific functionality like the use of &lt;a href=&quot;https://facebook.github.io/react/docs/context.html&quot;&gt;context&lt;/a&gt;, although you can also explicitly pass your FlowRouter instance around in context if you&amp;rsquo;d like (in fact this is probably the best thing to do).</source>
          <target state="translated">React Router包含React特定的功能，例如使用&lt;a href=&quot;https://facebook.github.io/react/docs/context.html&quot;&gt;context&lt;/a&gt;，尽管您也可以根据需要在上下文中显式传递FlowRouter实例（实际上这可能是最好的选择）。</target>
        </trans-unit>
        <trans-unit id="7d607092da7544267a7a387340cf2521827e93ca" translate="yes" xml:space="preserve">
          <source>React Router encourages you to couple your URL design and layout hierarchy in the route definition. Flow Router is more flexible, although it can involve much more boilerplate as a result.</source>
          <target state="translated">React Router鼓励你在路由定义中耦合你的URL设计和布局层次。Flow Router更灵活,尽管它可能因此涉及更多的模板。</target>
        </trans-unit>
        <trans-unit id="6f8e9031349410a44129beb2570274771652ace2" translate="yes" xml:space="preserve">
          <source>React and Angular enforce a better component structure, which makes developing larger apps easier. (Although you can add component structure to Blaze by &lt;a href=&quot;http://blazejs.org/guide/reusable-components.html&quot;&gt;following conventions&lt;/a&gt; or using the &lt;a href=&quot;http://components.meteorapp.com/&quot;&gt;Blaze Components&lt;/a&gt; or &lt;a href=&quot;https://viewmodel.org/&quot;&gt;ViewModel&lt;/a&gt; packages.)</source>
          <target state="translated">React和Angular实施了更好的组件结构，这使得开发更大的应用程序变得更加容易。（尽管您可以通过&lt;a href=&quot;http://blazejs.org/guide/reusable-components.html&quot;&gt;遵循约定&lt;/a&gt;或使用&lt;a href=&quot;http://components.meteorapp.com/&quot;&gt;Blaze Components&lt;/a&gt;或&lt;a href=&quot;https://viewmodel.org/&quot;&gt;ViewModel&lt;/a&gt;包将组件结构添加到Blaze 。）</target>
        </trans-unit>
        <trans-unit id="00be0cc0e386d74ecb800b0b7256bb644a8571da" translate="yes" xml:space="preserve">
          <source>React components must be the only thing in the wrapper element. Due to a limitation of React (see facebook/react &lt;a href=&quot;https://github.com/facebook/react/issues/1970&quot;&gt;#1970&lt;/a&gt;, &lt;a href=&quot;https://github.com/facebook/react/issues/2484&quot;&gt;#2484&lt;/a&gt;), a React component must be rendered as the only child of its parent node, meaning it cannot have any siblings.</source>
          <target state="translated">React组件必须是wrapper元素中唯一的东西。由于React的局限性（请参阅facebook / react &lt;a href=&quot;https://github.com/facebook/react/issues/1970&quot;&gt;＃1970&lt;/a&gt;，&lt;a href=&quot;https://github.com/facebook/react/issues/2484&quot;&gt;＃2484&lt;/a&gt;），必须将React组件呈现为其父节点的唯一子节点，这意味着它不能具有任何同级。</target>
        </trans-unit>
        <trans-unit id="e560460603038656fa1d4787e66b57875466247f" translate="yes" xml:space="preserve">
          <source>React has 42k stars on Github and 13k npm libraries.</source>
          <target state="translated">React在Github上有4.2万颗星,13000个npm库。</target>
        </trans-unit>
        <trans-unit id="842ea8549385fb281357570ba515c722367cd388" translate="yes" xml:space="preserve">
          <source>React has a vibrant and growing ecosystem and is used widely in production in a variety of combinations with different frameworks.</source>
          <target state="translated">React拥有一个充满活力和不断发展的生态系统,并与不同的框架进行各种组合,被广泛应用于生产中。</target>
        </trans-unit>
        <trans-unit id="ace93fb63cc0d2401fa8c866126498bfc5822265" translate="yes" xml:space="preserve">
          <source>React is a front-end rendering library and as such doesn&amp;rsquo;t concern itself with how data gets into and out of components. On the other hand, Meteor has strong opinions about data! Meteor operates in terms of &lt;a href=&quot;data-loading&quot;&gt;publications&lt;/a&gt; and &lt;a href=&quot;methods&quot;&gt;methods&lt;/a&gt;, used to subscribe to and modify the data in your application.</source>
          <target state="translated">React是一个前端渲染库，因此它本身与数据如何进出组件无关。另一方面，流星对数据有很强的见解！流星根据&lt;a href=&quot;data-loading&quot;&gt;出版物&lt;/a&gt;和&lt;a href=&quot;methods&quot;&gt;方法进行操作&lt;/a&gt;，用于订阅和修改应用程序中的数据。</target>
        </trans-unit>
        <trans-unit id="2dd03e5a8480bd16de936ec04566d0a92275af08" translate="yes" xml:space="preserve">
          <source>React uses &lt;a href=&quot;https://facebook.github.io/react/docs/jsx-in-depth.html&quot;&gt;JSX&lt;/a&gt;, with which you write your HTML in JavaScript. While it doesn&amp;rsquo;t have the logic-view separation most libraries have, it also has the most flexibility. Template functions and event handlers are defined in the same file as the HTML part of the component, which usually makes it easier to understand how they are tied together.</source>
          <target state="translated">React使用&lt;a href=&quot;https://facebook.github.io/react/docs/jsx-in-depth.html&quot;&gt;JSX&lt;/a&gt;，您可以使用JSX用JavaScript编写HTML。尽管它没有大多数库所具有的逻辑视图分离，但它也具有最大的灵活性。模板函数和事件处理程序与组件的HTML部分定义在同一文件中，这通常使您更容易理解它们是如何结合在一起的。</target>
        </trans-unit>
        <trans-unit id="2081c8b6e011d41b489cdba5c5210d3aee8fa611" translate="yes" xml:space="preserve">
          <source>ReactiveVar</source>
          <target state="translated">ReactiveVar</target>
        </trans-unit>
        <trans-unit id="8697a43862309b716782d78796f2102dbcf2397e" translate="yes" xml:space="preserve">
          <source>ReactiveVar()</source>
          <target state="translated">ReactiveVar()</target>
        </trans-unit>
        <trans-unit id="c1db1d64f2798b54cabab0f08a21fe75f49cd445" translate="yes" xml:space="preserve">
          <source>ReactiveVars are not automatically migrated across hot code pushes, whereas Session state is.</source>
          <target state="translated">ReactiveVars不会在热代码推送中自动迁移,而Session状态会自动迁移。</target>
        </trans-unit>
        <trans-unit id="df8032fe5a56ae94cce3f53b0d3f9bf2e5085c03" translate="yes" xml:space="preserve">
          <source>ReactiveVars can hold any value, while Session variables are limited to JSON or EJSON.</source>
          <target state="translated">ReactiveVars可以持有任何值,而Session变量仅限于JSON或EJSON。</target>
        </trans-unit>
        <trans-unit id="63b549c6f13b260a95aeae59802286b6eb3dac69" translate="yes" xml:space="preserve">
          <source>ReactiveVars don&amp;rsquo;t have global names, like the &amp;ldquo;foo&amp;rdquo; in &lt;code&gt;Session.get('foo')&lt;/code&gt;. Instead, they may be created and used locally, for example attached to a template instance, as in: &lt;code&gt;this.foo.get()&lt;/code&gt;.</source>
          <target state="translated">ReactiveVar没有全局名称，例如 &lt;code&gt;Session.get('foo')&lt;/code&gt; 中的&amp;ldquo; foo&amp;rdquo;。而是可以在本地创建和使用它们，例如，将其附加到模板实例，例如： &lt;code&gt;this.foo.get()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="09edc430ee465cd900e16ef710a79298da6a4c99" translate="yes" xml:space="preserve">
          <source>Reactively changing subscription arguments</source>
          <target state="translated">被动地改变订阅参数</target>
        </trans-unit>
        <trans-unit id="0c2e9a29a2b3becda37d55df31e770964ce58e84" translate="yes" xml:space="preserve">
          <source>Reactivity Model</source>
          <target state="translated">反应性模型</target>
        </trans-unit>
        <trans-unit id="25d4d8b557171bf685d27eb70aa2a678497d5577" translate="yes" xml:space="preserve">
          <source>Reactivity Model for Each</source>
          <target state="translated">每种产品的反应性模型</target>
        </trans-unit>
        <trans-unit id="402182cbd1637abec9fe8435165c8a049bba7abb" translate="yes" xml:space="preserve">
          <source>Read about how to use Blaze and Spacebars in the Blaze article.</source>
          <target state="translated">在Blaze文章中阅读如何使用Blaze和Spacebars。</target>
        </trans-unit>
        <trans-unit id="71149d867186a5f2f5f8e067b366c8485ffeb50c" translate="yes" xml:space="preserve">
          <source>Read more about Blaze subscriptions in the &lt;a href=&quot;http://blazejs.org/api/templates.html#Blaze-TemplateInstance-subscribe&quot;&gt;Blaze article&lt;/a&gt;, and about tracking loading state inside UI components in the &lt;a href=&quot;ui-ux#subscription-readiness&quot;&gt;UI article&lt;/a&gt;.</source>
          <target state="translated">在&lt;a href=&quot;http://blazejs.org/api/templates.html#Blaze-TemplateInstance-subscribe&quot;&gt;Blaze文章中&lt;/a&gt;了解有关Blaze订阅的更多信息，并在&lt;a href=&quot;ui-ux#subscription-readiness&quot;&gt;UI文章中&lt;/a&gt;了解有关跟踪UI组件内部加载状态的更多信息。</target>
        </trans-unit>
        <trans-unit id="4b0019568f61881e296b5b633e27dad46cd5e8be" translate="yes" xml:space="preserve">
          <source>Read more about collections and how to use them in the &lt;a href=&quot;http://guide.meteor.com/collections.html&quot;&gt;Collections&lt;/a&gt; article in the Meteor Guide.</source>
          <target state="translated">在&amp;ldquo;流星指南&amp;rdquo; 的&amp;ldquo; &lt;a href=&quot;http://guide.meteor.com/collections.html&quot;&gt;收藏集&amp;rdquo;&lt;/a&gt;文章中了解有关收藏集以及如何使用它们的更多信息。</target>
        </trans-unit>
        <trans-unit id="28041b3fd7b74372933d95f95d7bbf35797b461e" translate="yes" xml:space="preserve">
          <source>Read more about customizing user accounts in the &lt;a href=&quot;http://guide.meteor.com/accounts.html&quot;&gt;Accounts&lt;/a&gt; article in the Meteor Guide.</source>
          <target state="translated">在《流星指南》的&amp;ldquo; &lt;a href=&quot;http://guide.meteor.com/accounts.html&quot;&gt;帐户&amp;rdquo;一&lt;/a&gt;文中，了解有关自定义用户帐户的更多信息。</target>
        </trans-unit>
        <trans-unit id="88823fa3dc67965acb81c27d919ad7838ba60aac" translate="yes" xml:space="preserve">
          <source>Read more about domain patterns in &lt;a href=&quot;http://cordova.apache.org/docs/en/6.0.0/guide_appdev_whitelist_index.md.html&quot;&gt;Cordova docs&lt;/a&gt;.</source>
          <target state="translated">在&lt;a href=&quot;http://cordova.apache.org/docs/en/6.0.0/guide_appdev_whitelist_index.md.html&quot;&gt;Cordova docs中&lt;/a&gt;阅读有关域模式的更多信息。</target>
        </trans-unit>
        <trans-unit id="1a603d46e6808c855984c8bc19955f92373fdb87" translate="yes" xml:space="preserve">
          <source>Read more about managing keys and settings in the Deployment article.</source>
          <target state="translated">阅读部署文章中有关管理密钥和设置的更多信息。</target>
        </trans-unit>
        <trans-unit id="3292e698700557811666ba69379855299a42fbb1" translate="yes" xml:space="preserve">
          <source>Read more about methods and how to use them in the &lt;a href=&quot;http://guide.meteor.com/methods.html&quot;&gt;Methods&lt;/a&gt; article in the Meteor Guide.</source>
          <target state="translated">在&amp;ldquo;流星指南&amp;rdquo; 中的&amp;ldquo; &lt;a href=&quot;http://guide.meteor.com/methods.html&quot;&gt;方法&amp;rdquo;&lt;/a&gt;文章中了解有关方法及其用法的更多信息。</target>
        </trans-unit>
        <trans-unit id="c902f2f8fe71262c6666db8c4219fd4365b8930b" translate="yes" xml:space="preserve">
          <source>Read more about publications and how to use them in the &lt;a href=&quot;http://guide.meteor.com/data-loading.html&quot;&gt;Data Loading&lt;/a&gt; article in the Meteor Guide.</source>
          <target state="translated">在&amp;ldquo;流星指南&amp;rdquo; 的&amp;ldquo; &lt;a href=&quot;http://guide.meteor.com/data-loading.html&quot;&gt;数据加载&amp;rdquo;&lt;/a&gt;文章中了解有关出版物以及如何使用它们的更多信息。</target>
        </trans-unit>
        <trans-unit id="7827930c24e781b89efc57a127790c78417bd52b" translate="yes" xml:space="preserve">
          <source>Read more about templates and how to use them in the &lt;a href=&quot;spacebars&quot;&gt;Spacebars&lt;/a&gt; and &lt;a href=&quot;../guide/introduction&quot;&gt;Blaze&lt;/a&gt; article in the Guide.</source>
          <target state="translated">在指南的&lt;a href=&quot;spacebars&quot;&gt;空格键&lt;/a&gt;和&lt;a href=&quot;../guide/introduction&quot;&gt;Blaze&lt;/a&gt;文章中了解有关模板以及如何使用模板的更多信息。</target>
        </trans-unit>
        <trans-unit id="2fbf991af4665cfc10aa8b85ee0ea5b2388e0e34" translate="yes" xml:space="preserve">
          <source>Read more about the error format in the &lt;a href=&quot;https://atmospherejs.com/mdg/validation-error&quot;&gt;&lt;code&gt;mdg:validation-error&lt;/code&gt; docs&lt;/a&gt;.</source>
          <target state="translated">在&lt;a href=&quot;https://atmospherejs.com/mdg/validation-error&quot;&gt; &lt;code&gt;mdg:validation-error&lt;/code&gt; docs中&lt;/a&gt;阅读有关错误格式的更多信息。</target>
        </trans-unit>
        <trans-unit id="2ede26eeb61932173032ed2aaa87e5c3e8a58ef4" translate="yes" xml:space="preserve">
          <source>Read more about using Cordova in the &lt;a href=&quot;mobile&quot;&gt;mobile guide&lt;/a&gt;.</source>
          <target state="translated">在&lt;a href=&quot;mobile&quot;&gt;移动指南中&lt;/a&gt;阅读有关使用Cordova的更多信息。</target>
        </trans-unit>
        <trans-unit id="fdc5d0a73ed6e5754beb78140673dc58ba17d0dc" translate="yes" xml:space="preserve">
          <source>Read more in the &lt;a href=&quot;https://atmospherejs.com/alanning/roles&quot;&gt;&lt;code&gt;alanning:roles&lt;/code&gt; package documentation&lt;/a&gt;.</source>
          <target state="translated">在&lt;a href=&quot;https://atmospherejs.com/alanning/roles&quot;&gt; &lt;code&gt;alanning:roles&lt;/code&gt; 软件包文档中&lt;/a&gt;了解更多信息。</target>
        </trans-unit>
        <trans-unit id="08498c5c362d894ecbf197db25bd23776045d783" translate="yes" xml:space="preserve">
          <source>Read the documentation about build plugins.</source>
          <target state="translated">阅读关于构建插件的文档。</target>
        </trans-unit>
        <trans-unit id="7695db2d5ac227a2dfd986509c3fcc74ca165470" translate="yes" xml:space="preserve">
          <source>Read the documentation for each package listed below to see how to indicate which files are source files vs. imports.</source>
          <target state="translated">阅读下面列出的每个包的文档,看看如何指示哪些文件是源文件与导入文件。</target>
        </trans-unit>
        <trans-unit id="3c219f4cfcba1bccfa614469cdb62b68c0a1beb3" translate="yes" xml:space="preserve">
          <source>Recently, a lot of npm packages have been moving to Promises instead of callbacks for their API. This means you actually get a return value from the asynchronous function, but it&amp;rsquo;s just an empty shell where the real value is filled in later.</source>
          <target state="translated">最近，许多npm软件包已经转移到Promises，而不是其API的回调。这意味着您实际上从异步函数中获得了一个返回值，但这只是一个空壳，稍后将在其中填充实际值。</target>
        </trans-unit>
        <trans-unit id="54022bc6f2f9b999e1a4ce0c9f340f99d42a72f1" translate="yes" xml:space="preserve">
          <source>Recommended: Mocha</source>
          <target state="translated">推荐 摩卡</target>
        </trans-unit>
        <trans-unit id="17a8cce91d565b284d3d1168a8f686bda872db99" translate="yes" xml:space="preserve">
          <source>Recovering from faulty versions</source>
          <target state="translated">从有问题的版本中恢复</target>
        </trans-unit>
        <trans-unit id="60e22121bdd0bc71cdb2bae2a3aa577006b2eae9" translate="yes" xml:space="preserve">
          <source>Redirecting</source>
          <target state="translated">Redirecting</target>
        </trans-unit>
        <trans-unit id="8b7fc268a6ac78cab9d0a46d12ca44738f41a78c" translate="yes" xml:space="preserve">
          <source>Redirecting after a user&amp;rsquo;s action</source>
          <target state="translated">用户操作后重定向</target>
        </trans-unit>
        <trans-unit id="40a4d23a8dafd58a95661084ed2f34c6b35573cc" translate="yes" xml:space="preserve">
          <source>Redirecting dynamically</source>
          <target state="translated">动态重定向</target>
        </trans-unit>
        <trans-unit id="65d26c11f1b25c89fcdf6ae8498fa376d710ec34" translate="yes" xml:space="preserve">
          <source>Refactoring to reuse security rules</source>
          <target state="translated">重构以重用安全规则</target>
        </trans-unit>
        <trans-unit id="3a4c8dcbb74393067916a368021f02effedc575d" translate="yes" xml:space="preserve">
          <source>Refer to the &lt;a href=&quot;https://cordova.apache.org/docs/en/dev/config_ref/index.html#preference&quot;&gt;preferences section&lt;/a&gt; of the Cordova documentation for more information about supported options.</source>
          <target state="translated">有关支持的选项的更多信息，请参阅Cordova文档的&lt;a href=&quot;https://cordova.apache.org/docs/en/dev/config_ref/index.html#preference&quot;&gt;首选项部分&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c25cd66a82531c77ed01fb1c26ba430584018b76" translate="yes" xml:space="preserve">
          <source>Refer to the Method via JS module rather than a magic string.</source>
          <target state="translated">通过JS模块引用方法,而不是魔法字符串。</target>
        </trans-unit>
        <trans-unit id="b01d33f6c7b508ee0fe9eca5942ab2d8b9bcbb77" translate="yes" xml:space="preserve">
          <source>Regardless of how you add the package to your app, its actual version will be tracked in the file at &lt;code&gt;.meteor/versions&lt;/code&gt;. This means that anybody collaborating with you on the same app is guaranteed to have the same package versions as you. If you want to update to a newer version of a package after installing it, use &lt;code&gt;meteor update&lt;/code&gt;. You can run &lt;code&gt;meteor update&lt;/code&gt; without any arguments to update all packages and Meteor itself to their latest versions, or pass a specific package to update just that one, for example &lt;code&gt;meteor update kadira:flow-router&lt;/code&gt;.</source>
          <target state="translated">无论您如何将软件包添加到应用中，其实际版本都会在 &lt;code&gt;.meteor/versions&lt;/code&gt; 的文件中进行跟踪。这意味着在同一应用程序上与您合作的任何人都可以保证拥有与您相同的软件包版本。如果要在安装后更新到软件包的较新版本，请使用 &lt;code&gt;meteor update&lt;/code&gt; 。您可以运行不带任何参数的 &lt;code&gt;meteor update&lt;/code&gt; 以将所有软件包和流星本身更新为最新版本，或传递特定的软件包以仅更新该软件包，例如， &lt;code&gt;meteor update kadira:flow-router&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="df0b0ae6dab5a8da38f1c82f15d73aca42eb5c9f" translate="yes" xml:space="preserve">
          <source>Regardless of the view layer that you are using, there are some patterns in how you build your User Interface (UI) that will help make your app&amp;rsquo;s code easier to understand, test, and maintain. These patterns, much like general patterns of modularity, revolve around making the interfaces to your UI elements very clear and avoiding using techniques that bypass these known interfaces.</source>
          <target state="translated">不管使用哪种视图层，如何构建用户界面（UI）都有一些模式，这些模式将有助于使应用程序的代码更易于理解，测试和维护。这些模式与模块化的一般模式非常相似，围绕使UI元素的接口非常清晰并避免使用绕过这些已知接口的技术进行。</target>
        </trans-unit>
        <trans-unit id="8a41fadc048efbfbcd4464f67267f15bbc047043" translate="yes" xml:space="preserve">
          <source>Register a callback to be called after a login attempt fails.</source>
          <target state="translated">注册一个回调,以便在登录尝试失败后被调用。</target>
        </trans-unit>
        <trans-unit id="3bbb5b6615ebbc2a8d067ada3d8a180da644c5c0" translate="yes" xml:space="preserve">
          <source>Register a callback to be called after a login attempt succeeds.</source>
          <target state="translated">注册一个回调,在登录尝试成功后调用。</target>
        </trans-unit>
        <trans-unit id="1a7372e8d4e1031596740ef57c21d3017751113c" translate="yes" xml:space="preserve">
          <source>Register a callback to be called after a logout attempt succeeds.</source>
          <target state="translated">注册一个回调,在注销尝试成功后调用。</target>
        </trans-unit>
        <trans-unit id="822b3f5ff4b7fef4902d2c7846ff9e00c5e09db2" translate="yes" xml:space="preserve">
          <source>Register a callback to be called when a new DDP connection is made to the server.</source>
          <target state="translated">注册一个回调,当有新的DDP连接到服务器时调用。</target>
        </trans-unit>
        <trans-unit id="f619d019b63a99f44e3850ba418fd92a0277cc81" translate="yes" xml:space="preserve">
          <source>Register a callback to be called when the connection is closed. If the connection is already closed, the callback will be called immediately.</source>
          <target state="translated">注册一个回调,当连接被关闭时,回调将被调用。如果连接已经关闭,回调将被立即调用。</target>
        </trans-unit>
        <trans-unit id="f5ebdbe5e38fd8c714e314eb749b76766f7d74a2" translate="yes" xml:space="preserve">
          <source>Register a function to be called when an instance of this template is created.</source>
          <target state="translated">注册一个函数,当这个模板的实例被创建时调用。</target>
        </trans-unit>
        <trans-unit id="9efe8ac33a0511d6d129b62d882344a2bb35eb17" translate="yes" xml:space="preserve">
          <source>Register a function to be called when an instance of this template is inserted into the DOM.</source>
          <target state="translated">注册一个函数,当这个模板的实例被插入到DOM中时,该函数将被调用。</target>
        </trans-unit>
        <trans-unit id="ce80fdc783593d32a60cbe706fb72a6253eac64a" translate="yes" xml:space="preserve">
          <source>Register a function to be called when an instance of this template is removed from the DOM and destroyed.</source>
          <target state="translated">注册一个函数,当这个模板的实例从DOM中移除并销毁时,该函数将被调用。</target>
        </trans-unit>
        <trans-unit id="b8da5312c0c7036207f2751af104356905dd47d3" translate="yes" xml:space="preserve">
          <source>Register a function to call as the first step of reconnecting. This function can call methods which will be executed before any other outstanding methods. For example, this can be used to re-establish the appropriate authentication context on the connection.</source>
          <target state="translated">注册一个函数,作为重新连接的第一步调用。这个函数可以调用将在任何其他未决方法之前执行的方法。例如,这可以用来在连接上重新建立适当的认证上下文。</target>
        </trans-unit>
        <trans-unit id="4a64cbdba5142f513eb30038d00b0e8cb4775d21" translate="yes" xml:space="preserve">
          <source>Register a function to call when a reset password link is clicked in an email sent by &lt;a href=&quot;#accounts_sendresetpasswordemail&quot;&gt;&lt;code&gt;Accounts.sendResetPasswordEmail&lt;/code&gt;&lt;/a&gt;. This function should be called in top-level code, not inside &lt;code&gt;Meteor.startup()&lt;/code&gt;.</source>
          <target state="translated">注册一个函数，以在&lt;a href=&quot;#accounts_sendresetpasswordemail&quot;&gt; &lt;code&gt;Accounts.sendResetPasswordEmail&lt;/code&gt; &lt;/a&gt;发送的电子邮件中单击重置密码链接时调用。该函数应该在顶层代码中调用，而不是在 &lt;code&gt;Meteor.startup()&lt;/code&gt; 内部调用。</target>
        </trans-unit>
        <trans-unit id="f8373983b247f7d43bc88705df46f72cf5ceb386" translate="yes" xml:space="preserve">
          <source>Register a function to call when an account enrollment link is clicked in an email sent by &lt;a href=&quot;#accounts_sendenrollmentemail&quot;&gt;&lt;code&gt;Accounts.sendEnrollmentEmail&lt;/code&gt;&lt;/a&gt;. This function should be called in top-level code, not inside &lt;code&gt;Meteor.startup()&lt;/code&gt;.</source>
          <target state="translated">注册一个函数，以在&lt;a href=&quot;#accounts_sendenrollmentemail&quot;&gt; &lt;code&gt;Accounts.sendEnrollmentEmail&lt;/code&gt; &lt;/a&gt;发送的电子邮件中单击帐户注册链接时调用。该函数应该在顶层代码中调用，而不是在 &lt;code&gt;Meteor.startup()&lt;/code&gt; 内部调用。</target>
        </trans-unit>
        <trans-unit id="54a21feb97deddc34afaf44b4d5e96b246c20326" translate="yes" xml:space="preserve">
          <source>Register a function to call when an email verification link is clicked in an email sent by &lt;a href=&quot;#accounts_sendverificationemail&quot;&gt;&lt;code&gt;Accounts.sendVerificationEmail&lt;/code&gt;&lt;/a&gt;. This function should be called in top-level code, not inside &lt;code&gt;Meteor.startup()&lt;/code&gt;.</source>
          <target state="translated">注册一个函数，以在&lt;a href=&quot;#accounts_sendverificationemail&quot;&gt; &lt;code&gt;Accounts.sendVerificationEmail&lt;/code&gt; &lt;/a&gt;发送的电子邮件中单击电子邮件验证链接时调用。该函数应该在顶层代码中调用，而不是在 &lt;code&gt;Meteor.startup()&lt;/code&gt; 内部调用。</target>
        </trans-unit>
        <trans-unit id="e8c49fac1d08550fd31ce1d4297976aa28b7f1f6" translate="yes" xml:space="preserve">
          <source>Registers &lt;code&gt;callback&lt;/code&gt; to run when this computation is next invalidated, or runs it immediately if the computation is already invalidated. The callback is run exactly once and not upon future invalidations unless &lt;code&gt;onInvalidate&lt;/code&gt; is called again after the computation becomes valid again.</source>
          <target state="translated">注册 &lt;code&gt;callback&lt;/code&gt; 以在下次使该计算无效时运行，或者在计算已经无效的情况下立即运行回调。该回调仅运行一次，并且不会在以后的失效时运行，除非在计算再次变得有效之后再次调用 &lt;code&gt;onInvalidate&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f544d3333c38572f5001db3033b4d656d02e45d0" translate="yes" xml:space="preserve">
          <source>Registers &lt;code&gt;callback&lt;/code&gt; to run when this computation is stopped, or runs it immediately if the computation is already stopped. The callback is run after any &lt;code&gt;onInvalidate&lt;/code&gt; callbacks.</source>
          <target state="translated">注册 &lt;code&gt;callback&lt;/code&gt; 以在此计算停止时运行，或者在计算已停止时立即运行它。该回调在任何 &lt;code&gt;onInvalidate&lt;/code&gt; 回调之后运行。</target>
        </trans-unit>
        <trans-unit id="a729e924b9f0527e5edc8a765fd827d48e828e71" translate="yes" xml:space="preserve">
          <source>Registers a new &lt;a href=&quot;#computation_oninvalidate&quot;&gt;&lt;code&gt;onInvalidate&lt;/code&gt;&lt;/a&gt; callback on the current computation (which must exist), to be called immediately when the current computation is invalidated or stopped.</source>
          <target state="translated">在当前计算（必须存在）上注册一个新的&lt;a href=&quot;#computation_oninvalidate&quot;&gt; &lt;code&gt;onInvalidate&lt;/code&gt; &lt;/a&gt;回调，当当前计算无效或停止时立即调用该回调。</target>
        </trans-unit>
        <trans-unit id="e6cb94729d19fa00aad07bfad30cd327bba18eba" translate="yes" xml:space="preserve">
          <source>Regular &lt;code&gt;Error&lt;/code&gt; for internal server errors</source>
          <target state="translated">常规 &lt;code&gt;Error&lt;/code&gt; 内部服务器错误</target>
        </trans-unit>
        <trans-unit id="7324bbce403ec626639c4d45e6ed9a157091e4e1" translate="yes" xml:space="preserve">
          <source>Reloads app on file change</source>
          <target state="translated">文件更改时重新启动应用程序</target>
        </trans-unit>
        <trans-unit id="c4e88f19388c890b10a1d60bb0e45227065ee77c" translate="yes" xml:space="preserve">
          <source>Remove an email address for a user. Use this instead of updating the database directly.</source>
          <target state="translated">删除用户的电子邮件地址。用这个方法代替直接更新数据库。</target>
        </trans-unit>
        <trans-unit id="57a85bff63e30d2cc749be81fcb72d9abea4b29b" translate="yes" xml:space="preserve">
          <source>Remove documents from the collection</source>
          <target state="translated">从收藏中删除文件</target>
        </trans-unit>
        <trans-unit id="201b0de1f3280854197b5a3292b805835203a0ba" translate="yes" xml:space="preserve">
          <source>Removes a package previously added to your Meteor project. For a list of the packages that your application is currently using, run &lt;code&gt;meteor list&lt;/code&gt;.</source>
          <target state="translated">删除先前添加到您的Meteor项目中的软件包。有关您的应用程序当前正在使用的软件包的列表，请运行 &lt;code&gt;meteor list&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="66beb793c61909cbbdffd9fd1645cbf7ef1a3047" translate="yes" xml:space="preserve">
          <source>Removes a platform previously added to your Meteor project. For a list of the platforms that your application is currently using, see &lt;code&gt;meteor list-platforms&lt;/code&gt;.</source>
          <target state="translated">删除先前添加到您的Meteor项目中的平台。有关您的应用程序当前正在使用 &lt;code&gt;meteor list-platforms&lt;/code&gt; ，请参阅流星列表平台。</target>
        </trans-unit>
        <trans-unit id="34103f69fe0d4d71b74d991911320628162be9a6" translate="yes" xml:space="preserve">
          <source>Removes a rendered View from the DOM, stopping all reactive updates and event listeners on it. Also destroys the Blaze.Template instance associated with the view.</source>
          <target state="translated">从DOM中移除已渲染的View,并停止其上的所有反应式更新和事件监听器。同时销毁与该视图相关联的Blaze.Template实例。</target>
        </trans-unit>
        <trans-unit id="ef5418ac2674abc862503242059562ef3208bf5a" translate="yes" xml:space="preserve">
          <source>Removes the specified rule from the rate limiter. If rule had hit a rate limit, that limit is removed as well.</source>
          <target state="translated">将指定的规则从费率限制器中删除。如果规则达到了费率限制,则该限制也会被删除。</target>
        </trans-unit>
        <trans-unit id="806f62597efaa40fe7c07758bf9078e343e283f1" translate="yes" xml:space="preserve">
          <source>Removing attributes not in the schema</source>
          <target state="translated">删除模式中没有的属性</target>
        </trans-unit>
        <trans-unit id="937938f90c18610fb2311b51587797149b2dd30f" translate="yes" xml:space="preserve">
          <source>Removing directly installed plugins</source>
          <target state="translated">移除直接安装的插件</target>
        </trans-unit>
        <trans-unit id="071197509cb7c8cff19d8bac27e7440048edd880" translate="yes" xml:space="preserve">
          <source>Render performance varies a lot depending on the situation. All three libraries are very quick at rendering simple apps, but can take a noticeable amount of time with more complex apps.</source>
          <target state="translated">根据不同的情况,渲染性能差异很大。这三个库在渲染简单的应用时都非常快,但在处理比较复杂的应用时可能会花费明显的时间。</target>
        </trans-unit>
        <trans-unit id="941faaeb7a5f68be1162d99baa90cc9160f50e1e" translate="yes" xml:space="preserve">
          <source>Render the helpers in the same way the previous template did. In this case we are using &lt;code&gt;buttonText&lt;/code&gt;.</source>
          <target state="translated">以与先前模板相同的方式渲染助手。在这种情况下，我们使用的是 &lt;code&gt;buttonText&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="29350daccbab00f57e738178ebefb89531e492bb" translate="yes" xml:space="preserve">
          <source>Renderable Content</source>
          <target state="translated">可渲染内容</target>
        </trans-unit>
        <trans-unit id="bb334a622f026b92bb650f9085e2b28dac310a35" translate="yes" xml:space="preserve">
          <source>Rendering a template to HTML loses all fine-grained reactivity. The normal way to render a template is to either include it from another template (&lt;code&gt;{{&amp;gt; myTemplate}}&lt;/code&gt;) or render and insert it programmatically using &lt;code&gt;Blaze.render&lt;/code&gt;. Only occasionally is generating HTML useful.</source>
          <target state="translated">将模板呈现为HTML会失去所有细粒度的反应性。渲染模板的正常方法是从另一个模板（ &lt;code&gt;{{&amp;gt; myTemplate}}&lt;/code&gt; 包含模板，或者使用 &lt;code&gt;Blaze.render&lt;/code&gt; 编程地渲染并插入模板。仅偶尔生成HTML有用。</target>
        </trans-unit>
        <trans-unit id="02208207bc68e791a4d1db92b0ae89e131daef08" translate="yes" xml:space="preserve">
          <source>Rendering an updated UI when a user reaches a new route is not that useful without giving the user some way to reach a new route! The simplest way is with the trusty &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; tag and a URL. You can generate the URLs yourself using &lt;code&gt;FlowRouter.pathFor&lt;/code&gt;, but it is more convenient to use the &lt;a href=&quot;https://github.com/arillo/meteor-flow-router-helpers/&quot;&gt;&lt;code&gt;arillo:flow-router-helpers&lt;/code&gt;&lt;/a&gt; package that defines some helpers for you:</source>
          <target state="translated">如果没有给用户提供某种方法来到达新路线，则在用户到达新路线时呈现更新的UI并没有多大用处！最简单的方法是使用可信任的 &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; 标记和URL。您可以使用 &lt;code&gt;FlowRouter.pathFor&lt;/code&gt; 自己生成URL ，但使用&lt;a href=&quot;https://github.com/arillo/meteor-flow-router-helpers/&quot;&gt; &lt;code&gt;arillo:flow-router-helpers&lt;/code&gt; &lt;/a&gt;包为您定义一些帮助程序更为方便：</target>
        </trans-unit>
        <trans-unit id="1ba514b1cc3ecab339360b3b5959fbf5ae8b45ac" translate="yes" xml:space="preserve">
          <source>Rendering based on the route</source>
          <target state="translated">基于路线的渲染</target>
        </trans-unit>
        <trans-unit id="6f2b248a41f9e64e230a755be8da77faeb619ed3" translate="yes" xml:space="preserve">
          <source>Rendering raw HTML</source>
          <target state="translated">渲染原始HTML</target>
        </trans-unit>
        <trans-unit id="cea9fce3d9e0a0226d1009eabc5f8aae1e69a3bf" translate="yes" xml:space="preserve">
          <source>Renders a template or View to DOM nodes and inserts it into the DOM, returning a rendered &lt;a href=&quot;#Blaze-View&quot;&gt;View&lt;/a&gt; which can be passed to &lt;a href=&quot;#Blaze-remove&quot;&gt;&lt;code&gt;Blaze.remove&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">将模板或视图渲染到DOM节点，然后将其插入到DOM中，返回可以传递给&lt;a href=&quot;#Blaze-remove&quot;&gt; &lt;code&gt;Blaze.remove&lt;/code&gt; &lt;/a&gt;的渲染的&lt;a href=&quot;#Blaze-View&quot;&gt;View&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3719e8da641de28a1a7578fba81d635d71cfeed9" translate="yes" xml:space="preserve">
          <source>Renders a template or View to DOM nodes with a data context. Otherwise identical to &lt;code&gt;Blaze.render&lt;/code&gt;.</source>
          <target state="translated">使用数据上下文将模板或视图渲染到DOM节点。否则与 &lt;code&gt;Blaze.render&lt;/code&gt; 相同。</target>
        </trans-unit>
        <trans-unit id="d66f25799c3dce91c45de1fd4bd0f7f5e10013e6" translate="yes" xml:space="preserve">
          <source>Renders a template or View to HTML with a data context. Otherwise identical to &lt;code&gt;Blaze.toHTML&lt;/code&gt;.</source>
          <target state="translated">使用数据上下文将模板或视图呈现为HTML。否则与 &lt;code&gt;Blaze.toHTML&lt;/code&gt; 相同。</target>
        </trans-unit>
        <trans-unit id="2adbf6d8c3b324405f9c4279b460777eb7bedd3e" translate="yes" xml:space="preserve">
          <source>Renders a template or View to a string of HTML.</source>
          <target state="translated">将模板或视图渲染成一串HTML。</target>
        </trans-unit>
        <trans-unit id="6f1cb9bcb8fdf346bdb04d0d0f22e728ed79b8d3" translate="yes" xml:space="preserve">
          <source>Replace localhost with 127.0.0.1. Useful for services that don't recognize localhost as a domain name.</source>
          <target state="translated">用127.0.0.1代替localhost。对不承认localhost为域名的服务有用。</target>
        </trans-unit>
        <trans-unit id="00c672c70f58ab89a00f7fdd4c7a2662714c6740" translate="yes" xml:space="preserve">
          <source>Replace the &lt;code&gt;tools/&lt;/code&gt; folder in &lt;code&gt;~/Library/Android/sdk/&lt;/code&gt;</source>
          <target state="translated">替换 &lt;code&gt;~/Library/Android/sdk/&lt;/code&gt; 的 &lt;code&gt;tools/&lt;/code&gt; 文件夹</target>
        </trans-unit>
        <trans-unit id="a242ade3ef6daa3baaaebe0ef02919fd067b76d2" translate="yes" xml:space="preserve">
          <source>Request a forgot password email.</source>
          <target state="translated">申请忘记密码邮件。</target>
        </trans-unit>
        <trans-unit id="f38a27d2d3cd986f4dc6c899aa795773f3ed09c4" translate="yes" xml:space="preserve">
          <source>Requesting Permissions</source>
          <target state="translated">申请权限</target>
        </trans-unit>
        <trans-unit id="35d17a1d71b863c03c95ab7196d118a86b489da7" translate="yes" xml:space="preserve">
          <source>Require a package that was specified using &lt;code&gt;Npm.depends()&lt;/code&gt;.</source>
          <target state="translated">需要使用 &lt;code&gt;Npm.depends()&lt;/code&gt; 指定的软件包。</target>
        </trans-unit>
        <trans-unit id="09a428f93ec07a73d726f8bd037ecacfaaf8b044" translate="yes" xml:space="preserve">
          <source>Requirements</source>
          <target state="translated">Requirements</target>
        </trans-unit>
        <trans-unit id="8f4a692fc113a9fbf96e7b6db5f6b023297a1613" translate="yes" xml:space="preserve">
          <source>Requiring username or email</source>
          <target state="translated">要求提供用户名或电子邮件</target>
        </trans-unit>
        <trans-unit id="9d79ba10cf1beedefcd5cb2cd8d4276c9f901a5f" translate="yes" xml:space="preserve">
          <source>Reset the current project to a fresh state. Removes the local mongo database.</source>
          <target state="translated">将当前项目重置为新状态。删除本地mongo数据库。</target>
        </trans-unit>
        <trans-unit id="10f6872970910165d253bbd2066c87f811053ba5" translate="yes" xml:space="preserve">
          <source>Reset the password for a user using a token received in email. Logs the user in afterwards.</source>
          <target state="translated">使用邮件中收到的令牌为用户重置密码。之后登录用户。</target>
        </trans-unit>
        <trans-unit id="3e946a4115352d8257a590891238fa19e328931a" translate="yes" xml:space="preserve">
          <source>Restart VS Code</source>
          <target state="translated">重新启动美国代码</target>
        </trans-unit>
        <trans-unit id="419415c9ab764255e58576751f5ab56204362267" translate="yes" xml:space="preserve">
          <source>Retrieve the contents of the static server asset as a UTF8-encoded string.</source>
          <target state="translated">以UTF8编码的字符串形式检索静态服务器资产的内容。</target>
        </trans-unit>
        <trans-unit id="ed9a0b9e0dc4c5e3e7821777e532e6413b3a5e33" translate="yes" xml:space="preserve">
          <source>Retrieve the contents of the static server asset as an &lt;a href=&quot;#ejson_new_binary&quot;&gt;EJSON Binary&lt;/a&gt;.</source>
          <target state="translated">以&lt;a href=&quot;#ejson_new_binary&quot;&gt;EJSON Binary的形式&lt;/a&gt;检索静态服务器资产的内容。</target>
        </trans-unit>
        <trans-unit id="eb8a04210e616dde8062a58c4d4b0a16d33b2099" translate="yes" xml:space="preserve">
          <source>Retrieves the user record for the current user from the &lt;a href=&quot;#meteor_users&quot;&gt;&lt;code&gt;Meteor.users&lt;/code&gt;&lt;/a&gt; collection.</source>
          <target state="translated">从&lt;a href=&quot;#meteor_users&quot;&gt; &lt;code&gt;Meteor.users&lt;/code&gt; &lt;/a&gt;集合中检索当前用户的用户记录。</target>
        </trans-unit>
        <trans-unit id="dd9192270a9006bdbb0d60dda0d9dfbfe3e13042" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;other&lt;/code&gt; has a value equal to &lt;code&gt;this&lt;/code&gt;; &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">如果 &lt;code&gt;other&lt;/code&gt; 的值等 &lt;code&gt;this&lt;/code&gt; 值，则返回 &lt;code&gt;true&lt;/code&gt; ;否则返回true。否则为 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4ed1a51e3c7c6cf43a3633b3e58f69e74b9dd263" translate="yes" xml:space="preserve">
          <source>Return Value</source>
          <target state="translated">返回值</target>
        </trans-unit>
        <trans-unit id="1d84f91f90db6d7078683bbbadd4142507dfbaab" translate="yes" xml:space="preserve">
          <source>Return a deep copy of &lt;code&gt;val&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;val&lt;/code&gt; 的深层副本。</target>
        </trans-unit>
        <trans-unit id="405b952918d3cc6f9e583417d6e2d50947a568b1" translate="yes" xml:space="preserve">
          <source>Return a number between 0 and 1, like &lt;code&gt;Math.random&lt;/code&gt;.</source>
          <target state="translated">返回0到1之间的数字，例如 &lt;code&gt;Math.random&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fc816941f1f652a68c6a352399448afc74d82649" translate="yes" xml:space="preserve">
          <source>Return a random element of the given array or string.</source>
          <target state="translated">返回给定数组或字符串中的一个随机元素。</target>
        </trans-unit>
        <trans-unit id="656adc591e1a65872f8010699af86800ba3d68a2" translate="yes" xml:space="preserve">
          <source>Return a random string of &lt;code&gt;n&lt;/code&gt; hexadecimal digits.</source>
          <target state="translated">返回 &lt;code&gt;n&lt;/code&gt; 个十六进制数字的随机字符串。</target>
        </trans-unit>
        <trans-unit id="49c85b45e1a520a5f92de401f0e1539d9c8458c8" translate="yes" xml:space="preserve">
          <source>Return a random string of printable characters with 6 bits of entropy per character. Use &lt;code&gt;Random.secret&lt;/code&gt; for security-critical secrets that are intended for machine, rather than human, consumption.</source>
          <target state="translated">返回一个可打印字符的随机字符串，每个字符具有6位熵。使用 &lt;code&gt;Random.secret&lt;/code&gt; 可以获取旨在供计算机而非人使用的安全性至关重要的机密。</target>
        </trans-unit>
        <trans-unit id="604eeddfc7d81023a5928056882b40bec6c7ec91" translate="yes" xml:space="preserve">
          <source>Return a unique identifier, such as &lt;code&gt;&quot;Jjwjg6gouWLXhMGKW&quot;&lt;/code&gt;, that is likely to be unique in the whole world.</source>
          <target state="translated">返回唯一的标识符，例如 &lt;code&gt;&quot;Jjwjg6gouWLXhMGKW&quot;&lt;/code&gt; ，该标识符在整个世界范围内可能是唯一的。</target>
        </trans-unit>
        <trans-unit id="189ad33766f6c44a17d20b0b33c90284241520dd" translate="yes" xml:space="preserve">
          <source>Return a value &lt;code&gt;r&lt;/code&gt; such that &lt;code&gt;this.equals(r)&lt;/code&gt; is true, and modifications to &lt;code&gt;r&lt;/code&gt; do not affect &lt;code&gt;this&lt;/code&gt; and vice versa.</source>
          <target state="translated">返回值 &lt;code&gt;r&lt;/code&gt; ，以使 &lt;code&gt;this.equals(r)&lt;/code&gt; 为true，对 &lt;code&gt;r&lt;/code&gt; 的修改不会影响 &lt;code&gt;this&lt;/code&gt; ，反之亦然。</target>
        </trans-unit>
        <trans-unit id="b511b08db5b0274d0477a6bd83c0aa6ab2aa164a" translate="yes" xml:space="preserve">
          <source>Return all matching documents as an Array.</source>
          <target state="translated">以数组形式返回所有匹配的文档。</target>
        </trans-unit>
        <trans-unit id="5c2f97184bfe0759afaa52e3dea61a8fbdcd5299" translate="yes" xml:space="preserve">
          <source>Return ambiguous error messages from login failures to prevent user enumeration. Defaults to false.</source>
          <target state="translated">返回登录失败时的模棱两可的错误信息,防止用户枚举。默认为false。</target>
        </trans-unit>
        <trans-unit id="8bfabaed6a4d2b54f0d351ade5e9d5493fe15fad" translate="yes" xml:space="preserve">
          <source>Return the tag used to identify this type. This must match the tag used to register this type with &lt;a href=&quot;#ejson_add_type&quot;&gt;&lt;code&gt;EJSON.addType&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">返回用于标识此类型的标签。这必须与用于使用&lt;a href=&quot;#ejson_add_type&quot;&gt; &lt;code&gt;EJSON.addType&lt;/code&gt; &lt;/a&gt;注册此类型的标签匹配。</target>
        </trans-unit>
        <trans-unit id="2e2e744ca0060a036477398b68411bd8ae9d1116" translate="yes" xml:space="preserve">
          <source>Return true if &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; are equal to each other. Return false otherwise. Uses the &lt;code&gt;equals&lt;/code&gt; method on &lt;code&gt;a&lt;/code&gt; if present, otherwise performs a deep comparison.</source>
          <target state="translated">如果 &lt;code&gt;a&lt;/code&gt; 和 &lt;code&gt;b&lt;/code&gt; 彼此相等，则返回true 。否则返回false。使用 &lt;code&gt;equals&lt;/code&gt; 上方法 &lt;code&gt;a&lt;/code&gt; 如果存在的话，否则执行深比较。</target>
        </trans-unit>
        <trans-unit id="4cc9f197562b8a00d58d67cf96d00f3ab99d1809" translate="yes" xml:space="preserve">
          <source>Returning &lt;code&gt;false&lt;/code&gt; from a handler is the same as calling both &lt;code&gt;stopImmediatePropagation&lt;/code&gt; and &lt;code&gt;preventDefault&lt;/code&gt; on the event.</source>
          <target state="translated">从处理程序返回 &lt;code&gt;false&lt;/code&gt; 与在事件上调用 &lt;code&gt;stopImmediatePropagation&lt;/code&gt; 和 &lt;code&gt;preventDefault&lt;/code&gt; 相同。</target>
        </trans-unit>
        <trans-unit id="ac586d0086a4b73af4ea1bee5996773b14a33252" translate="yes" xml:space="preserve">
          <source>Returns a handle that can be used by &lt;code&gt;Meteor.clearInterval&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;Meteor.clearInterval&lt;/code&gt; 可以使用的句柄。</target>
        </trans-unit>
        <trans-unit id="155c5721ad3c0a1fbb025b1b78038151d3169fa2" translate="yes" xml:space="preserve">
          <source>Returns a handle that can be used by &lt;code&gt;Meteor.clearTimeout&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;Meteor.clearTimeout&lt;/code&gt; 可以使用的句柄。</target>
        </trans-unit>
        <trans-unit id="8efd7f051658876e46e7afadb7a76b5146c894ce" translate="yes" xml:space="preserve">
          <source>Returns an unrendered View object you can pass to &lt;code&gt;Blaze.render&lt;/code&gt;.</source>
          <target state="translated">返回可以传递给 &lt;code&gt;Blaze.render&lt;/code&gt; 的未渲染的View对象。</target>
        </trans-unit>
        <trans-unit id="467c1bfcc17eb57521a52be12cc51c067a7a8479" translate="yes" xml:space="preserve">
          <source>Returns one DOM element matching &lt;code&gt;selector&lt;/code&gt;, or &lt;code&gt;null&lt;/code&gt; if there are no such elements.</source>
          <target state="translated">返回一个与 &lt;code&gt;selector&lt;/code&gt; 匹配的DOM元素；如果没有此类元素，则返回 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3658376ed7bd64aa1ba58fe02497c57690938574" translate="yes" xml:space="preserve">
          <source>Returns the &lt;a href=&quot;http://mongodb.github.io/node-mongodb-native/2.2/api/Collection.html&quot;&gt;&lt;code&gt;Collection&lt;/code&gt;&lt;/a&gt; object corresponding to this collection from the &lt;a href=&quot;https://www.npmjs.com/package/mongodb&quot;&gt;npm &lt;code&gt;mongodb&lt;/code&gt; driver module&lt;/a&gt; which is wrapped by &lt;code&gt;Mongo.Collection&lt;/code&gt;.</source>
          <target state="translated">从由 &lt;code&gt;Mongo.Collection&lt;/code&gt; 包装的&lt;a href=&quot;https://www.npmjs.com/package/mongodb&quot;&gt;npm &lt;/a&gt; &lt;code&gt;mongodb&lt;/code&gt; 驱动程序模块返回与此集合相对应的&lt;a href=&quot;http://mongodb.github.io/node-mongodb-native/2.2/api/Collection.html&quot;&gt; &lt;code&gt;Collection&lt;/code&gt; &lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="aefa5150f7bb6cb18f1e527c2d933cadbd58a69c" translate="yes" xml:space="preserve">
          <source>Returns the &lt;a href=&quot;http://mongodb.github.io/node-mongodb-native/2.2/api/Db.html&quot;&gt;&lt;code&gt;Db&lt;/code&gt;&lt;/a&gt; object corresponding to this collection's database connection from the &lt;a href=&quot;https://www.npmjs.com/package/mongodb&quot;&gt;npm &lt;code&gt;mongodb&lt;/code&gt; driver module&lt;/a&gt; which is wrapped by &lt;code&gt;Mongo.Collection&lt;/code&gt;.</source>
          <target state="translated">从由 &lt;code&gt;Mongo.Collection&lt;/code&gt; 包装的&lt;a href=&quot;https://www.npmjs.com/package/mongodb&quot;&gt;npm &lt;/a&gt; &lt;code&gt;mongodb&lt;/code&gt; 驱动程序模块返回与此集合的数据库连接相对应的&lt;a href=&quot;http://mongodb.github.io/node-mongodb-native/2.2/api/Db.html&quot;&gt; &lt;code&gt;Db&lt;/code&gt; &lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="29dd3c9a52b119bdedec2c6de623abcdac5540b9" translate="yes" xml:space="preserve">
          <source>Returns the current data context, or the data context that was used when rendering a particular DOM element or View from a Meteor template.</source>
          <target state="translated">Returns the current data context,or the data context that was used when rendering a particular DOM element or View from a Meteor template.</target>
        </trans-unit>
        <trans-unit id="1d4bfb60ebedff68f5fd65f0ad9563137cd80a7f" translate="yes" xml:space="preserve">
          <source>Returns the current value of the ReactiveVar, establishing a reactive dependency.</source>
          <target state="translated">返回ReactiveVar的当前值,建立一个反应依赖关系。</target>
        </trans-unit>
        <trans-unit id="dfa1f3ec85911f5a0d5bacc052fdac9c074b652f" translate="yes" xml:space="preserve">
          <source>Returns the number of documents that match a query.</source>
          <target state="translated">返回与查询匹配的文档数量。</target>
        </trans-unit>
        <trans-unit id="2200acbce72c1d4789bad815509ce1f619efbd90" translate="yes" xml:space="preserve">
          <source>Returns true if &lt;code&gt;value&lt;/code&gt; is a template object like &lt;code&gt;Template.myTemplate&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;value&lt;/code&gt; 是一个类似 &lt;code&gt;Template.myTemplate&lt;/code&gt; 的模板对象，则返回true 。</target>
        </trans-unit>
        <trans-unit id="4b8568caba404619a3400ef9f8cc92de6614b59f" translate="yes" xml:space="preserve">
          <source>Returns true if &lt;code&gt;x&lt;/code&gt; is a buffer of binary data, as returned from &lt;a href=&quot;#ejson_new_binary&quot;&gt;&lt;code&gt;EJSON.newBinary&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果 &lt;code&gt;x&lt;/code&gt; 是从&lt;a href=&quot;#ejson_new_binary&quot;&gt; &lt;code&gt;EJSON.newBinary&lt;/code&gt; &lt;/a&gt;返回的二进制数据缓冲区，则返回true 。</target>
        </trans-unit>
        <trans-unit id="99f2d994469715424e279fadff7f71bac8d585d6" translate="yes" xml:space="preserve">
          <source>Returns true if the computation is a new dependent of &lt;code&gt;dependency&lt;/code&gt; rather than an existing one.</source>
          <target state="translated">如果计算是依赖的新 &lt;code&gt;dependency&lt;/code&gt; 而不是现有依赖，则返回true 。</target>
        </trans-unit>
        <trans-unit id="5caf1d79a7ade37b7c0b9481f3c08ce86c735415" translate="yes" xml:space="preserve">
          <source>Returns true if the value matches the pattern.</source>
          <target state="translated">如果该值符合模式,则返回true。</target>
        </trans-unit>
        <trans-unit id="113c300fa95ddf1f0ecb1d78a180e2136a125575" translate="yes" xml:space="preserve">
          <source>Returns unique &lt;code&gt;ruleId&lt;/code&gt; that can be passed to &lt;code&gt;removeRule&lt;/code&gt;.</source>
          <target state="translated">返回唯一 &lt;code&gt;ruleId&lt;/code&gt; 可以传递到 &lt;code&gt;removeRule&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="14c00cc40cb9a802986228a425de9dca8530c3a8" translate="yes" xml:space="preserve">
          <source>Returns whether &lt;code&gt;preventDefault()&lt;/code&gt; has been called for this event.</source>
          <target state="translated">返回是否为此事件调用了 &lt;code&gt;preventDefault()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="711ff3cae769ddd78110829049c42edcd37953bb" translate="yes" xml:space="preserve">
          <source>Returns whether &lt;code&gt;stopImmediatePropagation()&lt;/code&gt; has been called for this event.</source>
          <target state="translated">返回是否已为此事件调用 &lt;code&gt;stopImmediatePropagation()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a63df53ef5e942ba64b3bd9f4eaba3b6329ab3bd" translate="yes" xml:space="preserve">
          <source>Returns whether &lt;code&gt;stopPropagation()&lt;/code&gt; has been called for this event.</source>
          <target state="translated">返回是否已为此事件调用 &lt;code&gt;stopPropagation()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cd5579e438b8d514ebfa3afdac6844eacf576a7c" translate="yes" xml:space="preserve">
          <source>Reusable components</source>
          <target state="translated">可重复使用的部件</target>
        </trans-unit>
        <trans-unit id="15d90af326f16531c4e8b8a49e7be3def862ae59" translate="yes" xml:space="preserve">
          <source>Reusable components have many advantages:</source>
          <target state="translated">可重复使用的组件有很多优点。</target>
        </trans-unit>
        <trans-unit id="a284c65c1493f84a3127263ac51fc681656485e0" translate="yes" xml:space="preserve">
          <source>Reusable components in Blaze</source>
          <target state="translated">Blaze中的可重复使用组件</target>
        </trans-unit>
        <trans-unit id="b158e06f1216200c9f60198c61501480351d7aa9" translate="yes" xml:space="preserve">
          <source>Reusing code in Blaze</source>
          <target state="translated">在Blaze中重用代码</target>
        </trans-unit>
        <trans-unit id="ad6771cea1733cf8422062ac744cc6f183bf894e" translate="yes" xml:space="preserve">
          <source>Right now, Meteor Core ships with the &lt;code&gt;standard-minifiers&lt;/code&gt; package that can be replaced with a custom one. The &lt;a href=&quot;https://github.com/meteor/meteor/tree/devel/packages/standard-minifiers&quot;&gt;source&lt;/a&gt; of the package is a good example how to build your own minification plugin.</source>
          <target state="translated">现在，Meteor Core随附了 &lt;code&gt;standard-minifiers&lt;/code&gt; 程序包，可以用自定义包替换它。软件包的&lt;a href=&quot;https://github.com/meteor/meteor/tree/devel/packages/standard-minifiers&quot;&gt;来源&lt;/a&gt;是一个很好的示例，说明了如何构建自己的缩小插件。</target>
        </trans-unit>
        <trans-unit id="34e619ef5ba1e8b27ec55296e3c36612a379d293" translate="yes" xml:space="preserve">
          <source>Role-based permissions</source>
          <target state="translated">基于角色的权限</target>
        </trans-unit>
        <trans-unit id="5fa35a440181e8d55bd7cfc037441858edbc805a" translate="yes" xml:space="preserve">
          <source>Roles and permissions</source>
          <target state="translated">角色和权限</target>
        </trans-unit>
        <trans-unit id="7184d0f9f8e70d4b632c63288609269b59279541" translate="yes" xml:space="preserve">
          <source>Rolling deployments and data versions</source>
          <target state="translated">滚动部署和数据版本</target>
        </trans-unit>
        <trans-unit id="7d15dd1bec2e055c5b177c9f869305ae6c54c9bb" translate="yes" xml:space="preserve">
          <source>Routing</source>
          <target state="translated">Routing</target>
        </trans-unit>
        <trans-unit id="8128c69c4470f8e138f6e62cde8d3b6df781896c" translate="yes" xml:space="preserve">
          <source>Routing programmatically</source>
          <target state="translated">程式化路由</target>
        </trans-unit>
        <trans-unit id="2208d34eec2992b6566c52dcfd489d0151e7bcf7" translate="yes" xml:space="preserve">
          <source>Rules about Methods still apply</source>
          <target state="translated">关于方法的规则仍然适用</target>
        </trans-unit>
        <trans-unit id="28855377de3988a49c39152cac5435a613258928" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;meteor help run&lt;/code&gt; to see the full list of options.</source>
          <target state="translated">运行 &lt;code&gt;meteor help run&lt;/code&gt; 以查看选项的完整列表。</target>
        </trans-unit>
        <trans-unit id="cf37a9ace3b319dd43e644e0069110adc29efad2" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;meteor run android-device&lt;/code&gt; to build the app, install it on the device, and launch it.</source>
          <target state="translated">运行 &lt;code&gt;meteor run android-device&lt;/code&gt; 来构建应用程序，将其安装在设备上，然后启动它。</target>
        </trans-unit>
        <trans-unit id="8ce1a6c4101c765e9d163cdc55c8efaa87b15c12" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;meteor run ios-device&lt;/code&gt; to open your project in Xcode.</source>
          <target state="translated">运行 &lt;code&gt;meteor run ios-device&lt;/code&gt; 以在Xcode中打开您的项目。</target>
        </trans-unit>
        <trans-unit id="5a5e874e32b2a8152f44d7a06bb3f4ef57a55973" translate="yes" xml:space="preserve">
          <source>Run a function now and rerun it later whenever its dependencies change. Returns a Computation object that can be used to stop or observe the rerunning.</source>
          <target state="translated">现在运行一个函数,并在其依赖关系发生变化时重新运行它。返回一个计算对象,可以用来停止或观察重新运行。</target>
        </trans-unit>
        <trans-unit id="c83e98edf2a0c6f2a6d8b5aaee71e43c0a4d8bb7" translate="yes" xml:space="preserve">
          <source>Run a function without tracking dependencies.</source>
          <target state="translated">运行函数时不需要跟踪依赖关系。</target>
        </trans-unit>
        <trans-unit id="65b067f65c51a168a109d43f726c4b2063b59f95" translate="yes" xml:space="preserve">
          <source>Run a meteor development server in the current project. Searches upward from the current directory for the root directory of a Meteor project. Whenever you change any of the application&amp;rsquo;s source files, the changes are automatically detected and applied to the running application.</source>
          <target state="translated">在当前项目中运行流星开发服务器。从当前目录向上搜索Meteor项目的根目录。每当您更改应用程序的任何源文件时，更改都会被自动检测到并应用于正在运行的应用程序。</target>
        </trans-unit>
        <trans-unit id="d16665f3fa7fc9d2d48dcd43ef512ef439b97a2e" translate="yes" xml:space="preserve">
          <source>Run code when a client or a server starts.</source>
          <target state="translated">在客户端或服务器启动时运行代码。</target>
        </trans-unit>
        <trans-unit id="73b32ee93c68dbdff0bd27afe11ed32743ed737d" translate="yes" xml:space="preserve">
          <source>Run final QA on production.</source>
          <target state="translated">对生产进行最后的QA。</target>
        </trans-unit>
        <trans-unit id="99fc272b99a46928ca8a062919bdec3479b91a79" translate="yes" xml:space="preserve">
          <source>Run it locally:</source>
          <target state="translated">在本地运行它。</target>
        </trans-unit>
        <trans-unit id="8ef120974061babfe981ce6b8225d9b4158ce035" translate="yes" xml:space="preserve">
          <source>Run the migration. At this point you should be confident that all lists have a &lt;code&gt;todoCount&lt;/code&gt;.</source>
          <target state="translated">运行迁移。在这一点上，您应该确信所有列表都具有 &lt;code&gt;todoCount&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2ec862c1409feb5710432e9181beaa3c5a1b459b" translate="yes" xml:space="preserve">
          <source>Run the project, but suspend the server process for debugging.</source>
          <target state="translated">运行项目,但暂停服务器进程进行调试。</target>
        </trans-unit>
        <trans-unit id="ac8382ae9e657d66704f1e57b71d2d1a66df25a6" translate="yes" xml:space="preserve">
          <source>Run through the whole build process for the app and run all linters the app uses. Outputs all build errors or linting warnings to the standard output.</source>
          <target state="translated">贯穿应用程序的整个构建过程,并运行应用程序使用的所有linters。将所有的构建错误或linting警告输出到标准输出。</target>
        </trans-unit>
        <trans-unit id="e54fe58d90d3960424f2350d297d1a7a4c2eb497" translate="yes" xml:space="preserve">
          <source>Run validation code by itself without running the Method body.</source>
          <target state="translated">不运行Method体,自己运行验证代码。</target>
        </trans-unit>
        <trans-unit id="62db9434a4168267a8eb92aa401e37cf9d8b60e6" translate="yes" xml:space="preserve">
          <source>Running acceptance tests</source>
          <target state="translated">运行验收测试</target>
        </trans-unit>
        <trans-unit id="b5f2135517ec110eedee484c49324fd5f9892be7" translate="yes" xml:space="preserve">
          <source>Running an app in development is all about fast iteration time. All kinds of different parts of your app are handled differently and instrumented to enable better reloads and debugging. In production, the app is reduced to just the necessary code, and functions like a regular Node.js app. Therefore, you shouldn&amp;rsquo;t run your app in production by running the &lt;code&gt;meteor&lt;/code&gt; command. Instead, follow the directions in the &lt;a href=&quot;deployment#custom-deployment&quot;&gt;production deployment article&lt;/a&gt;.</source>
          <target state="translated">在开发中运行应用程序的全部目的是缩短迭代时间。应用程序的各种不同部分的处理方式和配置方式不同，可实现更好的重新加载和调试。在生产中，该应用程序简化为必要的代码，其功能类似于常规的Node.js应用程序。因此，不应通过运行 &lt;code&gt;meteor&lt;/code&gt; 命令在生产环境中运行应用程序。而是，按照&lt;a href=&quot;deployment#custom-deployment&quot;&gt;生产部署文章中&lt;/a&gt;的指示进行操作。</target>
        </trans-unit>
        <trans-unit id="4be095ccdd94d2b1e7c85b3c5e697631860d90fc" translate="yes" xml:space="preserve">
          <source>Running full-app tests</source>
          <target state="translated">运行全应用测试</target>
        </trans-unit>
        <trans-unit id="1120d67d5254aa21f97d7819ef49052320a610d2" translate="yes" xml:space="preserve">
          <source>Running migrations</source>
          <target state="translated">运行迁移</target>
        </trans-unit>
        <trans-unit id="2b388b314c3fd06ed5eeb23647f7534ab8c4ec2e" translate="yes" xml:space="preserve">
          <source>Running on iOS will not show client-side logs in the terminal, but Xcode will show native logs as usual in the &lt;a href=&quot;https://developer.apple.com/library/tvos/documentation/DeveloperTools/Conceptual/debugging_with_xcode/chapters/debugging_tools.html&quot;&gt;debug console&lt;/a&gt;. You can add &lt;a href=&quot;https://github.com/apache/cordova-plugin-console&quot;&gt;cordova-plugin-console&lt;/a&gt; to your project to output &lt;code&gt;console&lt;/code&gt; logging calls to the native logs (which Android does by default), but this isn&amp;rsquo;t recommended because it has a substantial performance impact, and remote debugging gives you much nicer and more complete console output.</source>
          <target state="translated">在iOS上运行不会在终端中显示客户端日志，但是Xcode会像往常一样在&lt;a href=&quot;https://developer.apple.com/library/tvos/documentation/DeveloperTools/Conceptual/debugging_with_xcode/chapters/debugging_tools.html&quot;&gt;调试控制台中&lt;/a&gt;显示本机日志。您可以在项目中添加&lt;a href=&quot;https://github.com/apache/cordova-plugin-console&quot;&gt;cordova-plugin-console，&lt;/a&gt;以将 &lt;code&gt;console&lt;/code&gt; 日志记录调用输出到本机日志（默认情况下，Android会这样做），但是不建议这样做，因为它会对性能产生实质性影响，并且远程调试会给您带来更好的体验更完整的控制台输出。</target>
        </trans-unit>
        <trans-unit id="27522f8a49676d7ac99a9375ec6596bf175fb25f" translate="yes" xml:space="preserve">
          <source>Running the migration on your local machine will probably make it take a lot longer as your machine isn&amp;rsquo;t as close to the production database as it could be.</source>
          <target state="translated">在本地计算机上运行迁移可能会花费更长的时间，因为您的计算机与生产数据库的距离可能不那么近。</target>
        </trans-unit>
        <trans-unit id="10d439482778e2a2049898cc331c501cc436a6e6" translate="yes" xml:space="preserve">
          <source>Running unit tests</source>
          <target state="translated">运行单元测试</target>
        </trans-unit>
        <trans-unit id="78bb8826fcc2504583e625386c238563e6207595" translate="yes" xml:space="preserve">
          <source>SSL</source>
          <target state="translated">SSL</target>
        </trans-unit>
        <trans-unit id="e195c53109047004a9cc210c6b5a3caf52332575" translate="yes" xml:space="preserve">
          <source>SSL Certificate</source>
          <target state="translated">SSL证书</target>
        </trans-unit>
        <trans-unit id="5d8e270a3b478909d95ca7c40279e9043d659c52" translate="yes" xml:space="preserve">
          <source>SafeString</source>
          <target state="translated">SafeString</target>
        </trans-unit>
        <trans-unit id="f71dc05e071d088a9c780f2b1a6d694a3fb6befe" translate="yes" xml:space="preserve">
          <source>Same as the constructor argument.</source>
          <target state="translated">与构造函数参数相同。</target>
        </trans-unit>
        <trans-unit id="b6eeeb3abd2a7bc179a6b6d5c56488b5f8c903a7" translate="yes" xml:space="preserve">
          <source>Sass</source>
          <target state="translated">Sass</target>
        </trans-unit>
        <trans-unit id="9f70cfec1604b298dcfbaec9575e55ba48ba5dbc" translate="yes" xml:space="preserve">
          <source>Sass, Less, or Stylus?</source>
          <target state="translated">Sass,Less,or Stylus?</target>
        </trans-unit>
        <trans-unit id="32e6e0b94d6167fe9b7fe89e42d7f5044ab699ac" translate="yes" xml:space="preserve">
          <source>Schedules a function to be called during the next flush, or later in the current flush if one is in progress, after all invalidated computations have been rerun. The function will be run once and not on subsequent flushes unless &lt;code&gt;afterFlush&lt;/code&gt; is called again.</source>
          <target state="translated">重新计划所有无效的计算之后，计划在下一次刷新时或在当前刷新中稍后进行的函数（如果正在进行的话）。该函数将运行一次，并且不会在后续刷新中运行，除非再次调用 &lt;code&gt;afterFlush&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d309def7c9266580fb73e9d47d1961225a2a23b7" translate="yes" xml:space="preserve">
          <source>Scope DOM lookups to the template instance</source>
          <target state="translated">范围DOM查找到模板实例</target>
        </trans-unit>
        <trans-unit id="883d1c30464c5133deb4650b36e619a4392cff51" translate="yes" xml:space="preserve">
          <source>Search on the &lt;a href=&quot;https://atmospherejs.com/&quot;&gt;Atmosphere website&lt;/a&gt;.</source>
          <target state="translated">在&lt;a href=&quot;https://atmospherejs.com/&quot;&gt;Atmosphere网站&lt;/a&gt;上搜索。</target>
        </trans-unit>
        <trans-unit id="e3475e2db0d019565d1ca87758eec7edd62085a1" translate="yes" xml:space="preserve">
          <source>Searches for Meteor packages and releases, whose names contain the specified regular expression.</source>
          <target state="translated">搜索Meteor软件包和发行版,其名称包含指定的正则表达式。</target>
        </trans-unit>
        <trans-unit id="8ad30bba4b18ac4df7ce3a4a23bbaa04acebf666" translate="yes" xml:space="preserve">
          <source>Searching for packages</source>
          <target state="translated">搜索软件包</target>
        </trans-unit>
        <trans-unit id="3987f0061ea29708554b30785525952aebaf74a8" translate="yes" xml:space="preserve">
          <source>Secret API keys should never be stored in your source code at all, the next section will talk about how to handle them.</source>
          <target state="translated">秘密的API密钥根本就不应该存储在你的源代码中,下一节将讲述如何处理它们。</target>
        </trans-unit>
        <trans-unit id="be0139dda44d098daa31eb14ef4dc6b673dec78e" translate="yes" xml:space="preserve">
          <source>Secret API keys.</source>
          <target state="translated">秘密API密钥。</target>
        </trans-unit>
        <trans-unit id="04c0eefaa17d751a2cf4b34f4c893ee8801f7ed7" translate="yes" xml:space="preserve">
          <source>Secret algorithms that a competitor could steal.</source>
          <target state="translated">竞争对手可以窃取的秘密算法。</target>
        </trans-unit>
        <trans-unit id="d6cd8be97888a56174d431bff061bea19025c1b4" translate="yes" xml:space="preserve">
          <source>Secret business logic in your app should be located in code that is only loaded on the server. This means it is in a &lt;code&gt;server/&lt;/code&gt; directory of your app, in a package that is only included on the server, or in a file inside a package that was loaded only on the server.</source>
          <target state="translated">应用程序中的秘密业务逻辑应位于仅在服务器上加载的代码中。这意味着它位于应用程序的 &lt;code&gt;server/&lt;/code&gt; 目录中，仅包含在服务器中的软件包中或仅在服务器上加载的软件包中的文件中。</target>
        </trans-unit>
        <trans-unit id="b3fc3b91ad7369046ee5d271ab3be72365042098" translate="yes" xml:space="preserve">
          <source>Secret server code</source>
          <target state="translated">秘密服务器代码</target>
        </trans-unit>
        <trans-unit id="038f44881a0c82e1dacea7ffa6fa04b95a2574f3" translate="yes" xml:space="preserve">
          <source>Secure the data, not the UI - redirecting away from a client-side route does nothing for security, it&amp;rsquo;s just a nice UX feature.</source>
          <target state="translated">保护数据而不是UI的安全-从客户端路由重定向离开对安全性没有任何作用，它只是一个不错的UX功能。</target>
        </trans-unit>
        <trans-unit id="7fc5094a6a529a06cf4de0f2c90b013709424e66" translate="yes" xml:space="preserve">
          <source>Securing API keys</source>
          <target state="translated">确保API密钥的安全</target>
        </trans-unit>
        <trans-unit id="2d9658effc7c6ea9a9f1ccbf39d37f944b00b628" translate="yes" xml:space="preserve">
          <source>Securing a web application is all about understanding security domains and understanding the attack surface between these domains. In a Meteor app, things are pretty simple:</source>
          <target state="translated">保护Web应用的安全就是要了解安全域,了解这些域之间的攻击面。在Meteor应用中,事情非常简单。</target>
        </trans-unit>
        <trans-unit id="f25ce1b8a399bd8621a57427a20039b4b13935db" translate="yes" xml:space="preserve">
          <source>Security</source>
          <target state="translated">Security</target>
        </trans-unit>
        <trans-unit id="6c40431cdd5d0303effab46224badb7d49a79307" translate="yes" xml:space="preserve">
          <source>Security checklist</source>
          <target state="translated">安全检查表</target>
        </trans-unit>
        <trans-unit id="d8b13bc4a3d44d1b0ed58cddefc6791d5719e4f0" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#Event-Maps&quot;&gt;Event Maps&lt;/a&gt; for a detailed description of the event map format and how event handling works in Meteor.</source>
          <target state="translated">有关&lt;a href=&quot;#Event-Maps&quot;&gt;事件&lt;/a&gt;映射格式的详细说明以及在Meteor中事件处理的工作方式，请参阅事件映射。</target>
        </trans-unit>
        <trans-unit id="fca69e387dff42155aded59f486ef2124f4d801b" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#computation_oninvalidate&quot;&gt;&lt;em&gt;&lt;code&gt;computation&lt;/code&gt;&lt;/em&gt;&lt;code&gt;.onInvalidate&lt;/code&gt;&lt;/a&gt; for more details.</source>
          <target state="translated">有关更多详细信息，请参见&lt;a href=&quot;#computation_oninvalidate&quot;&gt;&lt;em&gt; &lt;code&gt;computation&lt;/code&gt; &lt;/em&gt; &lt;code&gt;.onInvalidate&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8237c3552d75dbb4739021a6a85deba2109fba55" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#view_firstnode&quot;&gt;&lt;code&gt;firstNode()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">参见&lt;a href=&quot;#view_firstnode&quot;&gt; &lt;code&gt;firstNode()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="37e7115ecc5bfc84b5f89c8fb51a441fa07bea44" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http://docs.mongodb.org/manual/tutorial/project-fields-from-query-results/#projection&quot;&gt; the MongoDB docs&lt;/a&gt; for details of the nested field rules and array behavior.</source>
          <target state="translated">有关嵌套字段规则和数组行为的详细信息，请参见&lt;a href=&quot;http://docs.mongodb.org/manual/tutorial/project-fields-from-query-results/#projection&quot;&gt;MongoDB文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cbc90c39de6c7d8a216aa50ed76e78f5280cef8d" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://developers.google.com/web/tools/chrome-devtools/debug/remote-debugging/remote-debugging#remote-debugging-on-android-with-chrome-devtools&quot;&gt;this article&lt;/a&gt; for instructions on how to remote debug your Android app with the Chrome DevTools.</source>
          <target state="translated">有关如何使用Chrome DevTools远程调试Android应用的说明，请参阅&lt;a href=&quot;https://developers.google.com/web/tools/chrome-devtools/debug/remote-debugging/remote-debugging#remote-debugging-on-android-with-chrome-devtools&quot;&gt;本文&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3126d8f08b9016ef673b8b2f6298400df86ef819" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;modules#CoffeeScript&quot;&gt;Modules &amp;raquo; Syntax &amp;raquo; CoffeeScript&lt;/a&gt;.</source>
          <target state="translated">请参见&lt;a href=&quot;modules#CoffeeScript&quot;&gt;模块&amp;raquo;语法&amp;raquo;CoffeeScript&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4b2ed8790ccbf6708fcfd498fc66ed11a6130c32" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;#BIND-IP&quot;&gt;&lt;code&gt;BIND_IP&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">另请参阅：&lt;a href=&quot;#BIND-IP&quot;&gt; &lt;code&gt;BIND_IP&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9e0bf2b379fb150ea19626531e11018fc722f6b5" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;#PORT&quot;&gt;&lt;code&gt;PORT&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">另请参阅：&lt;a href=&quot;#PORT&quot;&gt; &lt;code&gt;PORT&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4e770d141e06088557ee2818eb57a13235efb46d" translate="yes" xml:space="preserve">
          <source>See an example of a linting plugin implemented in Core: &lt;a href=&quot;https://github.com/meteor/meteor/tree/devel/packages/jshint&quot;&gt;jshint&lt;/a&gt;.</source>
          <target state="translated">请参阅在Core：&lt;a href=&quot;https://github.com/meteor/meteor/tree/devel/packages/jshint&quot;&gt;jshint中&lt;/a&gt;实现的linting插件的示例。</target>
        </trans-unit>
        <trans-unit id="28919346ab02e0a8e42e01b3f12218f2a79d986b" translate="yes" xml:space="preserve">
          <source>See description of &lt;a href=&quot;#accounts_onloginfailure&quot;&gt;AccountsCommon#onLoginFailure&lt;/a&gt; for details.</source>
          <target state="translated">有关详细信息，请参见&lt;a href=&quot;#accounts_onloginfailure&quot;&gt;AccountsCommon＃onLoginFailure&lt;/a&gt;的描述。</target>
        </trans-unit>
        <trans-unit id="8f3b5f3d2e6eefc9bf0b79711aa4f32bb7060bb4" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;http://docs.mongodb.org/manual/reference/operator/&quot;&gt;complete documentation&lt;/a&gt;.</source>
          <target state="translated">请参阅&lt;a href=&quot;http://docs.mongodb.org/manual/reference/operator/&quot;&gt;完整的文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ca39bd511ac60dac08f0cb572980df4db83fb9bd" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;http://docs.mongodb.org/manual/reference/operator/update/&quot;&gt;full list of modifiers&lt;/a&gt;.</source>
          <target state="translated">请参阅&lt;a href=&quot;http://docs.mongodb.org/manual/reference/operator/update/&quot;&gt;修饰符&lt;/a&gt;的完整列表。</target>
        </trans-unit>
        <trans-unit id="9faed082e8248ab5f20c14fb4ed9379f5f85806d" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;https://github.com/meteor/docs/blob/master/long-form/tracker-manual.md#creating-a-reactive-value-using-trackerdependency&quot;&gt;Tracker manual&lt;/a&gt; to learn how to create a reactive data source using &lt;code&gt;Tracker.Dependency&lt;/code&gt;.</source>
          <target state="translated">请参阅&lt;a href=&quot;https://github.com/meteor/docs/blob/master/long-form/tracker-manual.md#creating-a-reactive-value-using-trackerdependency&quot;&gt;Tracker手册，&lt;/a&gt;以了解如何使用 &lt;code&gt;Tracker.Dependency&lt;/code&gt; 创建反应性数据源。</target>
        </trans-unit>
        <trans-unit id="35731614430df115b1c5334503360571cdaa7378" translate="yes" xml:space="preserve">
          <source>See the Docs: &lt;a href=&quot;https://docs.meteor.com/packages/modules.html#CoffeeScript&quot;&gt;Modules &amp;raquo; Syntax &amp;raquo; CoffeeScript&lt;/a&gt;</source>
          <target state="translated">请参阅文档：&lt;a href=&quot;https://docs.meteor.com/packages/modules.html#CoffeeScript&quot;&gt;模块&amp;raquo;语法&amp;raquo;CoffeeScript&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4faf6de68d5021fd48da0a9f0aaf239dabb4e520" translate="yes" xml:space="preserve">
          <source>See the documentation for &lt;a href=&quot;https://atmospherejs.com/universe/i18n&quot;&gt;&lt;code&gt;universe:i18n&lt;/code&gt;&lt;/a&gt; for additional options and configuration.</source>
          <target state="translated">有关其他选项和配置，请参见&lt;a href=&quot;https://atmospherejs.com/universe/i18n&quot;&gt; &lt;code&gt;universe:i18n&lt;/code&gt; &lt;/a&gt;的文档。</target>
        </trans-unit>
        <trans-unit id="0c20b774264ddb1550c65438747330633d99bbf5" translate="yes" xml:space="preserve">
          <source>Select your app origin</source>
          <target state="translated">选择您的应用程序来源</target>
        </trans-unit>
        <trans-unit id="cfb0ea17037b0734a233d08579e75e88ef495131" translate="yes" xml:space="preserve">
          <source>Select your distribution</source>
          <target state="translated">选择您的分布</target>
        </trans-unit>
        <trans-unit id="16919af682dae2171fb05bf9148f48ba20650209" translate="yes" xml:space="preserve">
          <source>Semantic versioning and version constraints</source>
          <target state="translated">语义版本和版本约束</target>
        </trans-unit>
        <trans-unit id="08414b570a795cc81b6907f83b267ef3f81cf7ec" translate="yes" xml:space="preserve">
          <source>Send an HTTP &lt;code&gt;DELETE&lt;/code&gt; request. Equivalent to calling &lt;a href=&quot;#http_call&quot;&gt;&lt;code&gt;HTTP.call&lt;/code&gt;&lt;/a&gt; with &quot;DELETE&quot; as the first argument. (Named &lt;code&gt;del&lt;/code&gt; to avoid conflict with the Javascript keyword &lt;code&gt;delete&lt;/code&gt;)</source>
          <target state="translated">发送HTTP &lt;code&gt;DELETE&lt;/code&gt; 请求。等效于以&amp;ldquo; DELETE&amp;rdquo;作为第一个参数调用&lt;a href=&quot;#http_call&quot;&gt; &lt;code&gt;HTTP.call&lt;/code&gt; &lt;/a&gt;。（命名为 &lt;code&gt;del&lt;/code&gt; 以避免与Javascript关键字 &lt;code&gt;delete&lt;/code&gt; 冲突）</target>
        </trans-unit>
        <trans-unit id="20153162231adf87b39564be97298b927720da54" translate="yes" xml:space="preserve">
          <source>Send an HTTP &lt;code&gt;GET&lt;/code&gt; request. Equivalent to calling &lt;a href=&quot;#http_call&quot;&gt;&lt;code&gt;HTTP.call&lt;/code&gt;&lt;/a&gt; with &quot;GET&quot; as the first argument.</source>
          <target state="translated">发送HTTP &lt;code&gt;GET&lt;/code&gt; 请求。等效于使用&amp;ldquo; GET&amp;rdquo;作为第一个参数调用&lt;a href=&quot;#http_call&quot;&gt; &lt;code&gt;HTTP.call&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="17d83a070e4a780970e424a16209aa6d3faf03e9" translate="yes" xml:space="preserve">
          <source>Send an HTTP &lt;code&gt;POST&lt;/code&gt; request. Equivalent to calling &lt;a href=&quot;#http_call&quot;&gt;&lt;code&gt;HTTP.call&lt;/code&gt;&lt;/a&gt; with &quot;POST&quot; as the first argument.</source>
          <target state="translated">发送一个HTTP &lt;code&gt;POST&lt;/code&gt; 请求。等效于使用&amp;ldquo; POST&amp;rdquo;作为第一个参数调用&lt;a href=&quot;#http_call&quot;&gt; &lt;code&gt;HTTP.call&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="31a0c499286858733a515b188759317d59e133a8" translate="yes" xml:space="preserve">
          <source>Send an HTTP &lt;code&gt;PUT&lt;/code&gt; request. Equivalent to calling &lt;a href=&quot;#http_call&quot;&gt;&lt;code&gt;HTTP.call&lt;/code&gt;&lt;/a&gt; with &quot;PUT&quot; as the first argument.</source>
          <target state="translated">发送HTTP &lt;code&gt;PUT&lt;/code&gt; 请求。等效于使用&amp;ldquo; PUT&amp;rdquo;作为第一个参数调用&lt;a href=&quot;#http_call&quot;&gt; &lt;code&gt;HTTP.call&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="dc516ab03aa311272837ca65647302297044506e" translate="yes" xml:space="preserve">
          <source>Send an email with a link the user can use to reset their password.</source>
          <target state="translated">发送一封电子邮件,其中包含用户可以用来重置密码的链接。</target>
        </trans-unit>
        <trans-unit id="6bcd556d8c1771306a449dbaf461c27e109b3f81" translate="yes" xml:space="preserve">
          <source>Send an email with a link the user can use to set their initial password.</source>
          <target state="translated">发送一封电子邮件,其中包含用户可以用来设置初始密码的链接。</target>
        </trans-unit>
        <trans-unit id="f7312b1839069ebf1c7630d998a4c33491b9ee51" translate="yes" xml:space="preserve">
          <source>Send an email with a link the user can use verify their email address.</source>
          <target state="translated">发送一封带有链接的电子邮件,用户可以使用该链接验证自己的电子邮件地址。</target>
        </trans-unit>
        <trans-unit id="6a6d723fe408c120cda7b79a89b0b18e53bb7c16" translate="yes" xml:space="preserve">
          <source>Send an email. Throws an &lt;code&gt;Error&lt;/code&gt; on failure to contact mail server or if mail server returns an error. All fields should match &lt;a href=&quot;http://tools.ietf.org/html/rfc5322&quot;&gt;RFC5322&lt;/a&gt; specification.</source>
          <target state="translated">发送电子邮件。抛出一个 &lt;code&gt;Error&lt;/code&gt; 上未能联系邮件服务器，或者邮件服务器返回一个错误。所有字段均应符合&lt;a href=&quot;http://tools.ietf.org/html/rfc5322&quot;&gt;RFC5322&lt;/a&gt;规范。</target>
        </trans-unit>
        <trans-unit id="a8a524f10d294b2eb2df21525271e4188dac7d8a" translate="yes" xml:space="preserve">
          <source>Sending the email</source>
          <target state="translated">发送电子邮件</target>
        </trans-unit>
        <trans-unit id="52c38c5fd40d268aa487131b6f119ffd702edd4a" translate="yes" xml:space="preserve">
          <source>Serialize a value to a string. For EJSON values, the serialization fully represents the value. For non-EJSON values, serializes the same way as &lt;code&gt;JSON.stringify&lt;/code&gt;.</source>
          <target state="translated">将值序列化为字符串。对于EJSON值，序列化完全表示该值。对于非EJSON值，序列化与 &lt;code&gt;JSON.stringify&lt;/code&gt; 相同。</target>
        </trans-unit>
        <trans-unit id="1bb054eb9fa646925ae3ecd1baba7a3b511c9efa" translate="yes" xml:space="preserve">
          <source>Serialize an EJSON-compatible value into its plain JSON representation.</source>
          <target state="translated">将一个EJSON兼容的值序列化为其纯JSON表示。</target>
        </trans-unit>
        <trans-unit id="c429afcde389802f396daaa661ab40e4cdc0ee78" translate="yes" xml:space="preserve">
          <source>Serialize this instance into a JSON-compatible value.</source>
          <target state="translated">将此实例序列化为一个JSON兼容的值。</target>
        </trans-unit>
        <trans-unit id="7dcf6c8feacbe81988ca71309fcb7379ae28c4fa" translate="yes" xml:space="preserve">
          <source>Served files</source>
          <target state="translated">已送达的文件</target>
        </trans-unit>
        <trans-unit id="cb0cb170d106f8e8d5af1e05bbdbd3a96a7de197" translate="yes" xml:space="preserve">
          <source>Server</source>
          <target state="translated">Server</target>
        </trans-unit>
        <trans-unit id="cb46f37fe9212a9315e731389dcec2de84112a2e" translate="yes" xml:space="preserve">
          <source>Server Connections</source>
          <target state="translated">服务器连接</target>
        </trans-unit>
        <trans-unit id="4ff6540c25bde7085cf0d2d1e9575cb74d3e0915" translate="yes" xml:space="preserve">
          <source>Server Rendering</source>
          <target state="translated">服务器渲染</target>
        </trans-unit>
        <trans-unit id="63eebe3062d457aa6c6d748fdc54a598dd71bd88" translate="yes" xml:space="preserve">
          <source>Server Routing for API access</source>
          <target state="translated">API访问的服务器路由</target>
        </trans-unit>
        <trans-unit id="6844d311dc2e8f093fdbeca96aeed32c5fc7bfa8" translate="yes" xml:space="preserve">
          <source>Server Side Routing</source>
          <target state="translated">服务器端路由选择</target>
        </trans-unit>
        <trans-unit id="d95d51e76282fecac3f98c5d1b83a1688ac7db86" translate="yes" xml:space="preserve">
          <source>Server [Not in build plugins]</source>
          <target state="translated">服务器 [不在构建插件中]</target>
        </trans-unit>
        <trans-unit id="f79ff6c35a336ad293fb67e335b11e74f356ca6e" translate="yes" xml:space="preserve">
          <source>Server example:</source>
          <target state="translated">服务器的例子。</target>
        </trans-unit>
        <trans-unit id="5c6b62c1e86c6ed24f03c3db81c390e5eae031f2" translate="yes" xml:space="preserve">
          <source>Server-side collections</source>
          <target state="translated">服务器端收藏</target>
        </trans-unit>
        <trans-unit id="5cbd584046863bc7b753e57e8681a98a87f36f0f" translate="yes" xml:space="preserve">
          <source>Services</source>
          <target state="translated">Services</target>
        </trans-unit>
        <trans-unit id="f7f1997c6cd1aa051279675742272a956e7db628" translate="yes" xml:space="preserve">
          <source>Session</source>
          <target state="translated">Session</target>
        </trans-unit>
        <trans-unit id="a9fb80e899597e03753ba9424e22c41fd1dd96d9" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;ANDROID_HOME&lt;/code&gt; and add the tools directories to your &lt;code&gt;PATH&lt;/code&gt;</source>
          <target state="translated">设置 &lt;code&gt;ANDROID_HOME&lt;/code&gt; 并将工具目录添加到 &lt;code&gt;PATH&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a466d1f1e10272a5fcd913e3964147f01a33bccc" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;HTTP_FORWARDED_COUNT&lt;/code&gt; to an integer representing the number of proxies in front of your server. For example, you&amp;rsquo;d set it to &lt;code&gt;1&lt;/code&gt; when your server was behind one proxy.</source>
          <target state="translated">将 &lt;code&gt;HTTP_FORWARDED_COUNT&lt;/code&gt; 设置为代表服务器前面的代理数量的整数。例如，当服务器位于一个代理之后时，可以将其设置为 &lt;code&gt;1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a94ff804efb8542bacaad0421a8624ae76e6115f" translate="yes" xml:space="preserve">
          <source>Set a new access rule based on origin domain for your app. By default your application has a limited list of servers it can contact. Use this method to extend this list.</source>
          <target state="translated">为您的应用程序设置一个基于起源域的新访问规则。默认情况下,您的应用程序可以联系的服务器列表有限。使用此方法来扩展此列表。</target>
        </trans-unit>
        <trans-unit id="474a8790c6be462a53b787ddbebe6482f08ceb9c" translate="yes" xml:space="preserve">
          <source>Set a variable in the session if it hasn't been set before. Otherwise works exactly the same as &lt;a href=&quot;#session_set&quot;&gt;&lt;code&gt;Session.set&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果之前没有设置过，请在会话中设置一个变量。否则，其工作原理与&lt;a href=&quot;#session_set&quot;&gt; &lt;code&gt;Session.set&lt;/code&gt; &lt;/a&gt;完全相同。</target>
        </trans-unit>
        <trans-unit id="dd6a0ab02ea3becfa235cb520e3d0093728b5d68" translate="yes" xml:space="preserve">
          <source>Set a variable in the session. Notify any listeners that the value has changed (eg: redraw templates, and rerun any &lt;a href=&quot;#tracker_autorun&quot;&gt;&lt;code&gt;Tracker.autorun&lt;/code&gt;&lt;/a&gt; computations, that called &lt;a href=&quot;#session_get&quot;&gt;&lt;code&gt;Session.get&lt;/code&gt;&lt;/a&gt; on this &lt;code&gt;key&lt;/code&gt;.)</source>
          <target state="translated">在会话中设置一个变量。通知所有侦听器该值已更改（例如：重绘模板，并重新运行任何&lt;a href=&quot;#tracker_autorun&quot;&gt; &lt;code&gt;Tracker.autorun&lt;/code&gt; &lt;/a&gt;计算，该计算在此 &lt;code&gt;key&lt;/code&gt; 上称为&lt;a href=&quot;#session_get&quot;&gt; &lt;code&gt;Session.get&lt;/code&gt; &lt;/a&gt;。）</target>
        </trans-unit>
        <trans-unit id="0868a117b5fa798b2b6a975c7fb0b0668e990d9f" translate="yes" xml:space="preserve">
          <source>Set error message text when method or subscription rate limit exceeded.</source>
          <target state="translated">设置超过方法或订阅率限制时的错误信息文本。</target>
        </trans-unit>
        <trans-unit id="2100d34444fb4ce91c64431d0bbe6e89bc8d4f9d" translate="yes" xml:space="preserve">
          <source>Set global accounts options.</source>
          <target state="translated">设置全球账户选项。</target>
        </trans-unit>
        <trans-unit id="f8a11d8df4e203ebab3704f29dceced5634e310c" translate="yes" xml:space="preserve">
          <source>Set restrictions on new user creation.</source>
          <target state="translated">设置新用户创建的限制。</target>
        </trans-unit>
        <trans-unit id="c097141f5e58fd69e73071834b48a00b9076cff2" translate="yes" xml:space="preserve">
          <source>Set the &lt;code&gt;ANDROID_HOME&lt;/code&gt; environment variable to the location of the Android SDK. If you&amp;rsquo;ve used the Android Studio setup wizard, it should be installed in &lt;code&gt;~/Library/Android/sdk&lt;/code&gt; by default.</source>
          <target state="translated">将 &lt;code&gt;ANDROID_HOME&lt;/code&gt; 环境变量设置为Android SDK的位置。如果您使用过Android Studio安装向导，则默认情况下应将其安装在 &lt;code&gt;~/Library/Android/sdk&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ab0539029a8206c3046c0b94b0c2e688628bf02d" translate="yes" xml:space="preserve">
          <source>Set the build-time configuration for a Cordova plugin.</source>
          <target state="translated">设置Cordova插件的构建时间配置。</target>
        </trans-unit>
        <trans-unit id="8efa0fb25a7b782d6829b81e27ae9b298fdd4e27" translate="yes" xml:space="preserve">
          <source>Set the fields of the object by assigning to them:</source>
          <target state="translated">通过分配给对象的字段来设置对象的字段。</target>
        </trans-unit>
        <trans-unit id="a880a6457ca5972ffde0f57dd7c9655711778c7a" translate="yes" xml:space="preserve">
          <source>Set the icons for your mobile app.</source>
          <target state="translated">设置移动应用的图标。</target>
        </trans-unit>
        <trans-unit id="84e76ad2c58d1d3ab8eb13bf39c7f285bbd71643" translate="yes" xml:space="preserve">
          <source>Set the launch screen images for your mobile app.</source>
          <target state="translated">设置手机应用的启动画面图像。</target>
        </trans-unit>
        <trans-unit id="aeec94c0f0217937f531870de6304f3bb88a90c4" translate="yes" xml:space="preserve">
          <source>Set the logged in user.</source>
          <target state="translated">设置登录用户。</target>
        </trans-unit>
        <trans-unit id="7d9aa1392649cd956c7be97715dd43ddd9af3c48" translate="yes" xml:space="preserve">
          <source>Set this to however many number of proxies you have running before your Meteor application. For example, if have an NGINX server acting as a proxy before your Meteor application, you would set &lt;code&gt;HTTP_FORWARDED_COUNT=1&lt;/code&gt;. If you have a load balancer in front of that NGINX server, the count is 2.</source>
          <target state="translated">将此设置为您在Meteor应用程序之前运行的代理数量。例如，如果在您的Meteor应用程序之前让NGINX服务器充当代理，则应设置 &lt;code&gt;HTTP_FORWARDED_COUNT=1&lt;/code&gt; 。如果您在该NGINX服务器之前有一个负载平衡器，则计数为2。</target>
        </trans-unit>
        <trans-unit id="8f1151de0b066675a643bc513935ade939a649f1" translate="yes" xml:space="preserve">
          <source>Set to &lt;code&gt;false&lt;/code&gt; to skip setting up the mutation methods that enable insert/update/remove from client code. Default &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">设置为 &lt;code&gt;false&lt;/code&gt; 可跳过设置启用从客户端代码插入/更新/删除的突变方法的设置。默认为 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="84277186a7e44add9f6ed1de93310c155b55fad6" translate="yes" xml:space="preserve">
          <source>Set up &lt;a href=&quot;https://atmospherejs.com/meteor/browser-policy&quot;&gt;browser policy&lt;/a&gt;, but know that not all browsers support it so it just provides an extra layer of security to users with modern browsers.</source>
          <target state="translated">设置&lt;a href=&quot;https://atmospherejs.com/meteor/browser-policy&quot;&gt;浏览器策略&lt;/a&gt;，但是要知道并不是所有的浏览器都支持它，因此它为使用现代浏览器的用户提供了额外的安全保护。</target>
        </trans-unit>
        <trans-unit id="26059f78b231dd38e5f8a1611adee67997509f14" translate="yes" xml:space="preserve">
          <source>Set up Sublime Text for ES2015</source>
          <target state="translated">为ES2015设置Sublime Text</target>
        </trans-unit>
        <trans-unit id="052877a075af7b6c59cc675a1ae15a112a6a8b82" translate="yes" xml:space="preserve">
          <source>Set up your tests with the &lt;code&gt;Package.onTest&lt;/code&gt; handler, which has an interface that&amp;rsquo;s parallel to that of the &lt;code&gt;onUse&lt;/code&gt; handler. The tests will need to depend on the package that you have just created. For example, if your package is the &lt;code&gt;email&lt;/code&gt; package, you have to call &lt;code&gt;api.use('email')&lt;/code&gt; in order to test the package.</source>
          <target state="translated">使用 &lt;code&gt;Package.onTest&lt;/code&gt; 处理程序设置测试，该处理程序的接口与 &lt;code&gt;onUse&lt;/code&gt; 处理程序的接口平行。测试将取决于您刚创建的程序包。例如，如果您的软件包是 &lt;code&gt;email&lt;/code&gt; 软件包，则必须调用 &lt;code&gt;api.use('email')&lt;/code&gt; 才能测试该软件包。</target>
        </trans-unit>
        <trans-unit id="ec2afb77e48cf64faaeca8638039bd986cf1c758" translate="yes" xml:space="preserve">
          <source>Set your mobile app's core configuration information.</source>
          <target state="translated">设置你的移动应用的核心配置信息。</target>
        </trans-unit>
        <trans-unit id="9dcf84601ce28ccf34d61e589b76264b91256c79" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;Meteor.isAppTest&lt;/code&gt; flag to be true (instead of the &lt;code&gt;Meteor.isTest&lt;/code&gt; flag).</source>
          <target state="translated">将 &lt;code&gt;Meteor.isAppTest&lt;/code&gt; 标志设置为true（而不是 &lt;code&gt;Meteor.isTest&lt;/code&gt; 标志）。</target>
        </trans-unit>
        <trans-unit id="f8080b657ede4e6b55bfd342fc170a0915f7f41c" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;Meteor.isTest&lt;/code&gt; flag to be true.</source>
          <target state="translated">将 &lt;code&gt;Meteor.isTest&lt;/code&gt; 标志设置为true。</target>
        </trans-unit>
        <trans-unit id="904bbba587b1c8ad2dad8846ac67f52887a20931" translate="yes" xml:space="preserve">
          <source>Sets the current value of the ReactiveVar, invalidating the Computations that called &lt;code&gt;get&lt;/code&gt; if &lt;code&gt;newValue&lt;/code&gt; is different from the old value.</source>
          <target state="translated">设置ReactiveVar的当前值，如果 &lt;code&gt;newValue&lt;/code&gt; 与旧值不同，则使调用 &lt;code&gt;get&lt;/code&gt; 的Computations无效。</target>
        </trans-unit>
        <trans-unit id="54a7c68e20d4d835028e20600b87f45d77872794" translate="yes" xml:space="preserve">
          <source>Setting &lt;code&gt;ANDROID_HOME&lt;/code&gt; and adding the tools directories to your &lt;code&gt;PATH&lt;/code&gt;</source>
          <target state="translated">设置 &lt;code&gt;ANDROID_HOME&lt;/code&gt; 并将工具目录添加到 &lt;code&gt;PATH&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="eed34e908902076e9264e4ad7813b5025e3853c8" translate="yes" xml:space="preserve">
          <source>Setting plugin parameters</source>
          <target state="translated">设置插件参数</target>
        </trans-unit>
        <trans-unit id="1ad1f5bffa09f930716cc3b1a1176a7dc0396b01" translate="yes" xml:space="preserve">
          <source>Setting tag attributes via helpers (e.g. &lt;code&gt;&amp;lt;div {{attributes}}&amp;gt;&lt;/code&gt;) is a neat tool and has some precedence rules that make it more useful. Specifically, when you use it more than once on a given element, the attributes are composed (rather than the second set of attributes simply replacing the first). So you can use one helper to set one set of attributes and a second to set another. For instance:</source>
          <target state="translated">通过帮助程序（例如 &lt;code&gt;&amp;lt;div {{attributes}}&amp;gt;&lt;/code&gt; ）设置标签属性是一种简洁的工具，并且具有一些优先级规则，使其更加有用。具体来说，当您在给定元素上多次使用它时，属性将组成（而不是第二组属性仅替换第一组属性）。因此，您可以使用一个助手来设置一组属性，而使用另一个来设置另一组属性。例如：</target>
        </trans-unit>
        <trans-unit id="37223c70fe20a90e7164defe75b8d260faeb9932" translate="yes" xml:space="preserve">
          <source>Setting up SSL</source>
          <target state="translated">设置SSL</target>
        </trans-unit>
        <trans-unit id="6d18d6bf5a6d7f360ff22f5759b370e85005149d" translate="yes" xml:space="preserve">
          <source>Settings are persistent. When you redeploy your app, the old value will be preserved unless you explicitly pass new settings using the &lt;code&gt;--settings&lt;/code&gt; option. To unset &lt;code&gt;Meteor.settings&lt;/code&gt;, pass an empty settings file.</source>
          <target state="translated">设置是持久的。重新部署应用程序时，除非使用 &lt;code&gt;--settings&lt;/code&gt; 选项显式传递新设置，否则将保留旧值。要取消设置 &lt;code&gt;Meteor.settings&lt;/code&gt; ，请传递一个空的设置文件。</target>
        </trans-unit>
        <trans-unit id="695213abc06fa197ed4a73c115863be4ecf6d1de" translate="yes" xml:space="preserve">
          <source>Settings on the client</source>
          <target state="translated">客户端的设置</target>
        </trans-unit>
        <trans-unit id="09a30596256b09bb9b3c7a1dc78e226ec4815ab1" translate="yes" xml:space="preserve">
          <source>Settings should be used to set environment (i.e. staging vs production) specific things, like the access token and secret used to connect to Google. These settings will not change between any given process running your application in the given environment.</source>
          <target state="translated">设置应该用于设置环境(即暂存与生产)的特定事项,如用于连接到Google的访问令牌和秘密。这些设置不会在给定环境中运行你的应用程序的任何给定进程之间改变。</target>
        </trans-unit>
        <trans-unit id="8f4c87116412e85e367eab789b17b3511b068718" translate="yes" xml:space="preserve">
          <source>Sharing accounts</source>
          <target state="translated">共享账户</target>
        </trans-unit>
        <trans-unit id="9f91705fe5b54d824df8460bb342771f79b84b37" translate="yes" xml:space="preserve">
          <source>Sharing code</source>
          <target state="translated">共享代码</target>
        </trans-unit>
        <trans-unit id="a3d520b6d95896465f450679cdf0a1cc5a9d6830" translate="yes" xml:space="preserve">
          <source>Sharing data</source>
          <target state="translated">共享数据</target>
        </trans-unit>
        <trans-unit id="82bae8b29285c471dbf7aad0461857bd5f5609fe" translate="yes" xml:space="preserve">
          <source>Showing &lt;em&gt;all&lt;/em&gt; the items - no more available.</source>
          <target state="translated">显示&lt;em&gt;所有&lt;/em&gt;项目-无更多可用。</target>
        </trans-unit>
        <trans-unit id="5b07095fbfec182b98868bfa467c9c53e773d170" translate="yes" xml:space="preserve">
          <source>Showing &lt;em&gt;no&lt;/em&gt; items because none exist.</source>
          <target state="translated">&lt;em&gt;没有&lt;/em&gt;显示&lt;em&gt;任何&lt;/em&gt;项目，因为不存在。</target>
        </trans-unit>
        <trans-unit id="8f5912d5929b0363365aadb1d03bdaa4bebbc472" translate="yes" xml:space="preserve">
          <source>Showing a subset of the items with more available.</source>
          <target state="translated">显示更多可用项目的子集。</target>
        </trans-unit>
        <trans-unit id="ee89e4636392433cb94e5d06ba98ed9577491d32" translate="yes" xml:space="preserve">
          <source>Showing a subset of the items with more loading.</source>
          <target state="translated">显示加载量较大的项目子集。</target>
        </trans-unit>
        <trans-unit id="22a285b02a4fdc67c5be75eace7e654455038f4a" translate="yes" xml:space="preserve">
          <source>Showing placeholders</source>
          <target state="translated">显示占位符</target>
        </trans-unit>
        <trans-unit id="fd0a4616d2b74eb5364b45519c2bae5d3a547e97" translate="yes" xml:space="preserve">
          <source>Shows more information about a specific package or release: name, summary, the usernames of its maintainers, and, if specified, its homepage and git URL.</source>
          <target state="translated">显示有关特定软件包或发行版的更多信息:名称、摘要、维护者的用户名,以及(如果指定)其主页和 git URL。</target>
        </trans-unit>
        <trans-unit id="95480b4946cf0f4acacff6221f3354c159cae878" translate="yes" xml:space="preserve">
          <source>Shrinkpack</source>
          <target state="translated">Shrinkpack</target>
        </trans-unit>
        <trans-unit id="a1ca0f23b735dfbb9ffbf04aed8e726e817b949d" translate="yes" xml:space="preserve">
          <source>Similar to the way we cleared the database using a method in the &lt;code&gt;beforeEach&lt;/code&gt; in the &lt;a href=&quot;#test-data&quot;&gt;test data&lt;/a&gt; section above, we can call a method to do that before running our tests. In the case of our routing tests, we&amp;rsquo;ve used a file called &lt;a href=&quot;https://github.com/meteor/todos/blob/master/imports/api/generate-data.app-tests.js&quot;&gt;&lt;code&gt;imports/api/generate-data.app-tests.js&lt;/code&gt;&lt;/a&gt; which defines this method (and will only be loaded in full app test mode, so is not available in general!):</source>
          <target state="translated">与我们使用上面&lt;a href=&quot;#test-data&quot;&gt;测试数据&lt;/a&gt;部分中 &lt;code&gt;beforeEach&lt;/code&gt; 中的方法清除数据库的方式类似，我们可以在运行测试之前调用一个方法来执行此操作。在进行路由测试的情况下，我们使用了一个名为&lt;a href=&quot;https://github.com/meteor/todos/blob/master/imports/api/generate-data.app-tests.js&quot;&gt; &lt;code&gt;imports/api/generate-data.app-tests.js&lt;/code&gt; &lt;/a&gt;的文件，该文件定义了此方法（并且只会在完整的应用程序测试模式下加载，因此通常不可用） ！）：</target>
        </trans-unit>
        <trans-unit id="ff77663843c2e4f0390094118d8381f2acb6aecb" translate="yes" xml:space="preserve">
          <source>Similarly, gaps in the platform highlighted by the guide can often be plugged by &lt;strong&gt;community packages&lt;/strong&gt;; we hope that if you see an opportunity to improve the Meteor workflow by writing a package, that you take it! If you&amp;rsquo;re not sure how best to design or architect your package, reach out on the forums and start a discussion.</source>
          <target state="translated">同样，指南中强调的平台漏洞通常可以通过&lt;strong&gt;社区软件包&lt;/strong&gt;来弥补；我们希望，如果您发现有机会通过编写软件包来改善Meteor工作流程，那么您一定会接受！如果不确定如何最好地设计或设计软件包，请访问论坛并开始讨论。</target>
        </trans-unit>
        <trans-unit id="abf9deaee8187b606eb185f33cf375f31c4e5d42" translate="yes" xml:space="preserve">
          <source>Simple integration test</source>
          <target state="translated">简单的集成测试</target>
        </trans-unit>
        <trans-unit id="8ee5ce85efcdb07beb3331674001255221f6b6d8" translate="yes" xml:space="preserve">
          <source>Since Meteor apps are often written in a style that puts client and server code together, it&amp;rsquo;s extra important to be aware what is running on the client, what is running on the server, and what the boundaries are. Here&amp;rsquo;s a complete list of places security checks need to be done in a Meteor app:</source>
          <target state="translated">由于Meteor应用程序通常以将客户端和服务器代码放在一起的样式编写，因此了解客户端上正在运行的内容，服务器上正在运行的内容以及边界是什么尤为重要。这是需要在Meteor应用程序中进行安全检查的地方的完整列表：</target>
        </trans-unit>
        <trans-unit id="8f539db13811192386c80432d7a15e0bd1abffdc" translate="yes" xml:space="preserve">
          <source>Since Meteor uses client-side rendering for your app&amp;rsquo;s UI, all of your HTML code, UI components, and templates need to be compiled to JavaScript. There are a few options at your disposal to write your UI code.</source>
          <target state="translated">由于Meteor为应用程序的UI使用客户端渲染，因此所有HTML代码，UI组件和模板都需要编译为JavaScript。您可以使用一些选项来编写UI代码。</target>
        </trans-unit>
        <trans-unit id="e66afc4878e945e4c4e6fda186ef65128d9a743e" translate="yes" xml:space="preserve">
          <source>Since Methods can work as general purpose RPCs, they can also be used to fetch data instead of publications. There are some advantages and some disadvantages to this approach compared with loading data through publications, and at the end of the day we recommend always using publications to load data.</source>
          <target state="translated">由于Methods可以作为通用的RPC工作,它们也可以用来代替publications来获取数据。与通过出版物加载数据相比,这种方法有一些优点,也有一些缺点,最后我们建议始终使用出版物来加载数据。</target>
        </trans-unit>
        <trans-unit id="f6baeb3784a3d4fed12ee64f5f10e864703c707c" translate="yes" xml:space="preserve">
          <source>Since Spacebars templates are always global, can&amp;rsquo;t be imported and exported as modules, and need to have names that are completely unique across the whole app, we recommend naming your Blaze templates with the full path to the namespace, separated by underscores. Underscores are a great choice in this case because then you can easily type the name of the template as one symbol in JavaScript.</source>
          <target state="translated">由于Spacebars模板始终是全局的，不能作为模块导入和导出，并且需要在整个应用程序中具有完全唯一的名称，因此我们建议使用带下划线的完整名称空间路径命名Blaze模板。在这种情况下，下划线是一个不错的选择，因为在JavaScript中，您可以轻松地将模板的名称输入为一个符号。</target>
        </trans-unit>
        <trans-unit id="bfe3aa227f534fa3a585127756ec38d283cd1583" translate="yes" xml:space="preserve">
          <source>Since bundle analysis is only truly accurate on a minified bundle and minification does not take place during development (as it is a complex and CPU-intensive process which would substantially slow down normal development) this package must be used in conjunction with the &lt;code&gt;--production&lt;/code&gt; flag to the &lt;code&gt;meteor&lt;/code&gt; tool to simulate production bundling and enable minification.</source>
          <target state="translated">由于捆绑包分析仅在最小的捆绑包上才真正准确，并且在开发过程中不会进行最小化（因为这是一个复杂且占用大量CPU的过程，会大大减慢正常开发的速度），因此必须将此软件包与 &lt;code&gt;--production&lt;/code&gt; 结合使用标记 &lt;code&gt;meteor&lt;/code&gt; 工具以模拟生产捆绑并启用最小化。</target>
        </trans-unit>
        <trans-unit id="8a6d6cf77b1b1598e37271bd0e760bb53273f4c3" translate="yes" xml:space="preserve">
          <source>Since the API allows build plugins to process multiple files at once, we encourage package authors to implement at least some in-memory caching for their plugins. Using the &lt;code&gt;getSourceHash&lt;/code&gt; function for linters and compilers will allow quick incremental recompilations if the file is not reprocessed even when the contents didn&amp;rsquo;t change.</source>
          <target state="translated">由于API允许构建插件一次处理多个文件，因此我们鼓励软件包作者为其插件至少实现一些内存中的缓存。如果未重新处理文件（即使内容未更改），则对linter和编译器使用 &lt;code&gt;getSourceHash&lt;/code&gt; 函数将允许快速增量重新编译。</target>
        </trans-unit>
        <trans-unit id="f7b527a0552c1cb5ce2704935c37a29309653c8c" translate="yes" xml:space="preserve">
          <source>Since the build plugins run as part of the Meteor tool, they follow the same file-system access convention - all file system paths always look like a Unix path: using forward slashes and having a root at &amp;lsquo;/&amp;lsquo;, even on Windows. For example: paths &lt;code&gt;/usr/bin/program&lt;/code&gt; and &lt;code&gt;/C/Program Files/Program/program.exe&lt;/code&gt; are valid paths, and &lt;code&gt;C:\Program Files\Program\program.exe&lt;/code&gt; is not.</source>
          <target state="translated">由于构建插件是作为Meteor工具的一部分运行的，因此它们遵循相同的文件系统访问约定-所有文件系统路径始终看起来像Unix路径：使用正斜杠并在'/'处具有根，即使在Windows上也是如此。例如：路径 &lt;code&gt;/usr/bin/program&lt;/code&gt; 和 &lt;code&gt;/C/Program Files/Program/program.exe&lt;/code&gt; 是有效路径，而 &lt;code&gt;C:\Program Files\Program\program.exe&lt;/code&gt; 不是有效路径。</target>
        </trans-unit>
        <trans-unit id="a7092d3e5fdb4d89bd9a552d42476f77488b8063" translate="yes" xml:space="preserve">
          <source>Since this is a new feature introduced in Meteor 1.3, you will find a lot of code online that uses the older, more centralized conventions built around packages and apps declaring global symbols. This old system still works, so to opt-in to the new module system, code must be placed inside the &lt;code&gt;imports/&lt;/code&gt; directory in your application. We expect a future release of Meteor will turn on modules by default for all code, because this is more aligned with how developers in the wider JavaScript community write their code.</source>
          <target state="translated">由于这是Meteor 1.3中引入的一项新功能，因此您会在网上找到许多代码，这些代码使用围绕包和应用程序声明全局符号的更旧，更集中的约定。这个旧系统仍然有效，因此要选择加入新模块系统，必须将代码放置在应用程序的 &lt;code&gt;imports/&lt;/code&gt; 目录中。我们预计Meteor的未来版本将默认打开所有代码的模块，因为这与更广泛的JavaScript社区中的开发人员编写代码的方式更加一致。</target>
        </trans-unit>
        <trans-unit id="dbb4f7251d1ad0c7469904a610a47e90fb808811" translate="yes" xml:space="preserve">
          <source>Smart components</source>
          <target state="translated">智能组件</target>
        </trans-unit>
        <trans-unit id="39c9dbb5b98a8e8fd343b869bae6f0ed09e4ad60" translate="yes" xml:space="preserve">
          <source>So a subscription can be thought of as a set of data that changes over time. Typically, the result of this is that a subscription &amp;ldquo;bridges&amp;rdquo; a &lt;a href=&quot;collections#server-collections&quot;&gt;server-side MongoDB collection&lt;/a&gt;, and the &lt;a href=&quot;collections#client-collections&quot;&gt;client side Minimongo cache&lt;/a&gt; of that collection. You can think of a subscription as a pipe that connects a subset of the &amp;ldquo;real&amp;rdquo; collection with the client&amp;rsquo;s version, and constantly keeps it up to date with the latest information on the server.</source>
          <target state="translated">因此，可以将订阅视为随时间变化的一组数据。通常，这样做的结果是预订&amp;ldquo;桥接&amp;rdquo;了&lt;a href=&quot;collections#server-collections&quot;&gt;服务器端MongoDB集合&lt;/a&gt;和该集合的&lt;a href=&quot;collections#client-collections&quot;&gt;客户端Minimongo缓存&lt;/a&gt;。您可以将订阅看作是一条管道，该管道将&amp;ldquo;真实&amp;rdquo;集合的子集与客户端的版本连接在一起，并不断使之与服务器上的最新信息保持最新。</target>
        </trans-unit>
        <trans-unit id="478f1f92ef92b6d2c9b1cd21b4fd6204094c90a7" translate="yes" xml:space="preserve">
          <source>So if we wanted to reverse our migration above, we&amp;rsquo;d run</source>
          <target state="translated">因此，如果我们想逆转上述迁移，我们会运行</target>
        </trans-unit>
        <trans-unit id="98aa39ecd1b7e86893f4675d679ab3aef45170f3" translate="yes" xml:space="preserve">
          <source>So in the case above, if a user subscribes to a list that is later made private by another user, although the &lt;code&gt;list.userId&lt;/code&gt; will change to a value that no longer passes the condition, the body of the publication will not re-run, and so the query to the &lt;code&gt;Todos&lt;/code&gt; collection (&lt;code&gt;{listId}&lt;/code&gt;) will not change. So the first user will continue to see items they shouldn&amp;rsquo;t.</source>
          <target state="translated">因此，在上述情况下，如果一个用户订阅了一个列表，该列表后来又被另一个用户 &lt;code&gt;list.userId&lt;/code&gt; 私有，尽管list.userId将更改为不再通过该条件的值，但是发布的正文将不会重新运行，因此对 &lt;code&gt;Todos&lt;/code&gt; 集合（ &lt;code&gt;{listId}&lt;/code&gt; ）的查询将不会更改。因此，第一个用户将继续看到他们不应该看到的项目。</target>
        </trans-unit>
        <trans-unit id="9c62a259503606443fa8426b9c59cd0a4e4c47ca" translate="yes" xml:space="preserve">
          <source>So when should you wait for the server and when not? It basically comes down to how optimistic you are; how likely it is that something will go wrong. In the case of a password, you really can&amp;rsquo;t tell on the client, so you need to be conservative. In other cases, you can be pretty confident that the Method call will succeed, and so you can move on.</source>
          <target state="translated">因此，您什么时候应该等待服务器，什么时候不该等待？基本上，这取决于您的乐观程度。出问题的可能性有多大。对于密码，您实际上无法告诉客户端，因此您需要保持保守。在其他情况下，您可以确信方法调用将成功，因此可以继续进行。</target>
        </trans-unit>
        <trans-unit id="e187e39e8a003f11f5518446bd48cc4885f8af1e" translate="yes" xml:space="preserve">
          <source>So whenever you get a path in your build plugin implementation, via &lt;code&gt;getPathInPackage&lt;/code&gt; or in an argument of the &lt;code&gt;setDiskCacheDirectory&lt;/code&gt; method, the path will be a Unix path.</source>
          <target state="translated">因此，只要在构建插件实现中通过 &lt;code&gt;getPathInPackage&lt;/code&gt; 或 &lt;code&gt;setDiskCacheDirectory&lt;/code&gt; 方法的参数获取路径，该路径即为 Unix路径。</target>
        </trans-unit>
        <trans-unit id="95c804dda762ed369a9896eefc2804517d971bd9" translate="yes" xml:space="preserve">
          <source>So which are the global data stores that you should be avoiding in reusable components? There are a few. Meteor is built to optimize speed of development, which means you can access a lot of things globally. Although this is convenient when building &amp;ldquo;smart&amp;rdquo; components (see below), you&amp;rsquo;ll need to avoid these data sources in reusable components:</source>
          <target state="translated">那么在可重用组件中应避免使用哪些全局数据存储？有几个。Meteor旨在优化开发速度，这意味着您可以全局访问许多内容。尽管在构建&amp;ldquo;智能&amp;rdquo;组件时很方便（请参见下文），但您需要避免在可重复使用的组件中使用这些数据源：</target>
        </trans-unit>
        <trans-unit id="9627182a4fe072bfbec05f6a749d3b6a0cdcb29e" translate="yes" xml:space="preserve">
          <source>Some Cordova plugins require certain parameters to be set as part of the build process. For example, &lt;code&gt;com-phonegap-plugins-facebookconnect&lt;/code&gt; requires you to specify an &lt;code&gt;APP_ID&lt;/code&gt; and &lt;code&gt;APP_NAME&lt;/code&gt;. You can set these using &lt;code&gt;App.configurePlugin&lt;/code&gt; in your &lt;a href=&quot;http://docs.meteor.com/api/mobile-config.html&quot;&gt;mobile-config.js&lt;/a&gt;.</source>
          <target state="translated">一些Cordova插件需要在构建过程中设置某些参数。例如， &lt;code&gt;com-phonegap-plugins-facebookconnect&lt;/code&gt; 要求您指定 &lt;code&gt;APP_ID&lt;/code&gt; 和 &lt;code&gt;APP_NAME&lt;/code&gt; 。您可以在&lt;a href=&quot;http://docs.meteor.com/api/mobile-config.html&quot;&gt;mobile-config.js中&lt;/a&gt;使用 &lt;code&gt;App.configurePlugin&lt;/code&gt; 进行设置。</target>
        </trans-unit>
        <trans-unit id="288805ed360b5c9b94ce45ecff66330cd5e15bc4" translate="yes" xml:space="preserve">
          <source>Some Meteor apps contain local Meteor packages (packages defined in the &lt;code&gt;packages/&lt;/code&gt; directory of your app tree); this was an older recommendation from before Meteor had full ECMAScript support. If your app is laid out this way, you can also &lt;code&gt;require&lt;/code&gt; or &lt;code&gt;import&lt;/code&gt; npm packages installed in your app from within your local Meteor packages.</source>
          <target state="translated">一些Meteor应用程序包含本地Meteor软件包（在应用程序树的 &lt;code&gt;packages/&lt;/code&gt; 目录中定义的软件包）；这是Meteor全面支持ECMAScript之前的较旧建议。如果您的应用是通过这种方式布置的，则还可以从本地Meteor软件包中 &lt;code&gt;require&lt;/code&gt; 或 &lt;code&gt;import&lt;/code&gt; 安装在应用中的npm软件包。</target>
        </trans-unit>
        <trans-unit id="5583d20bd00ddad1e3ebd55dd768207a1576d120" translate="yes" xml:space="preserve">
          <source>Some aspects of the migration strategy outlined above are possibly not the most ideal way to do things (although perhaps appropriate in many situations). Here are some other things to be aware of:</source>
          <target state="translated">上文概述的迁移战略的某些方面可能不是最理想的方式(尽管在许多情况下可能是合适的)。以下是需要注意的一些其他事项:</target>
        </trans-unit>
        <trans-unit id="072e10b4145d1db5429e8b26ba3ce40d482fe400" translate="yes" xml:space="preserve">
          <source>Some example uses of &lt;code&gt;meteor admin&lt;/code&gt; include adding and removing package maintainers and setting a homepage for a package. It also includes various helpful functions for managing a Meteor release. Run &lt;code&gt;meteor help admin&lt;/code&gt; for more information.</source>
          <target state="translated">&lt;code&gt;meteor admin&lt;/code&gt; 一些示例用法包括添加和删除软件包维护者以及设置软件包的主页。它还包括用于管理Meteor版本的各种有用功能。运行 &lt;code&gt;meteor help admin&lt;/code&gt; 以获取更多信息。</target>
        </trans-unit>
        <trans-unit id="fd89b46d604ef486a28a5ca580a3855bb5c0ce96" translate="yes" xml:space="preserve">
          <source>Some of your code isn&amp;rsquo;t going to be a unit of business logic or UI, it&amp;rsquo;s just some setup or configuration code that needs to run in the context of the app when it starts up. In the Todos example app, the &lt;code&gt;imports/startup/client/useraccounts-configuration.js&lt;/code&gt; file configures the &lt;code&gt;useraccounts&lt;/code&gt; login templates (see the &lt;a href=&quot;accounts&quot;&gt;Accounts&lt;/a&gt; article for more information about &lt;code&gt;useraccounts&lt;/code&gt;). The &lt;code&gt;imports/startup/client/routes.js&lt;/code&gt; configures all of the routes and then imports &lt;em&gt;all&lt;/em&gt; other code that is required on the client:</source>
          <target state="translated">您的某些代码不会成为业务逻辑或UI的一部分，而只是一些启动时需要在应用程序上下文中运行的设置或配置代码。在Todos示例应用程序中， &lt;code&gt;imports/startup/client/useraccounts-configuration.js&lt;/code&gt; 文件配置了 &lt;code&gt;useraccounts&lt;/code&gt; 登录模板（有关 &lt;code&gt;useraccounts&lt;/code&gt; 的更多信息，请参阅&lt;a href=&quot;accounts&quot;&gt;Accounts&lt;/a&gt;文章）。在 &lt;code&gt;imports/startup/client/routes.js&lt;/code&gt; 配置所有路线，然后导入&lt;em&gt;所有&lt;/em&gt;所需的客户端上的其他代码：&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cfcfd4524c6a19a0376d9dec412accbb0994f32b" translate="yes" xml:space="preserve">
          <source>Some of your components will need to access state outside of their data context&amp;mdash;for instance, data from the server via subscriptions or the contents of client-side store. As discussed in the &lt;a href=&quot;https://guide.meteor.com/data-loading.html#patterns&quot;&gt;data loading&lt;/a&gt; and &lt;a href=&quot;https://guide.meteor.com/ui-ux.html#smart-components&quot;&gt;UI&lt;/a&gt; articles, you should be careful and considered in how you use such smart components.</source>
          <target state="translated">您的某些组件将需要访问其数据上下文之外的状态，例如，来自服务器的数据（通过订阅）或客户端存储的内容。如&lt;a href=&quot;https://guide.meteor.com/data-loading.html#patterns&quot;&gt;数据加载&lt;/a&gt;和&lt;a href=&quot;https://guide.meteor.com/ui-ux.html#smart-components&quot;&gt;UI&lt;/a&gt;文章中所述，在使用此类智能组件时应谨慎并考虑。</target>
        </trans-unit>
        <trans-unit id="a2bafd3349aa60e6d14644ba436b4cff4cb20b9b" translate="yes" xml:space="preserve">
          <source>Some packages contain code specific to an architecture. Running &lt;code&gt;publish&lt;/code&gt; by itself, will upload the build to the architecture that you were using to publish. You need to run &lt;code&gt;publish-for-arch&lt;/code&gt; from a different architecture to upload a different build.</source>
          <target state="translated">一些软件包包含特定于体系结构的代码。自行运行 &lt;code&gt;publish&lt;/code&gt; ，会将构建上传到您用于发布的体系结构。您需要从不同的体系结构运行 &lt;code&gt;publish-for-arch&lt;/code&gt; 架构，以上传不同的构建。</target>
        </trans-unit>
        <trans-unit id="e128406895c90cb74e42012b3024d0405c7c877b" translate="yes" xml:space="preserve">
          <source>Something else to keep in mind is that your server-side code should be prepared to handle requests from older client versions, which may not yet have been updated. As you make changes to your data schema or publication functions for example, you may want to reflect on how this will impact backwards compatibility.</source>
          <target state="translated">其他需要注意的是,你的服务器端代码应该准备好处理来自旧的客户端版本的请求,这些版本可能还没有更新。例如,当你对你的数据模式或发布功能进行更改时,你可能要考虑这将如何影响向后兼容性。</target>
        </trans-unit>
        <trans-unit id="b7e30b57358aece3044dff3a76d13060e868ae4d" translate="yes" xml:space="preserve">
          <source>Sometimes a module doesn&amp;rsquo;t actually need to import anything from another module, but you still want to be sure the other module gets evaluated first. In such situations, you can use an even simpler &lt;code&gt;import&lt;/code&gt; syntax:</source>
          <target state="translated">有时候一个模块实际上不需要从另一个模块导入任何东西，但是您仍然要确保首先评估另一个模块。在这种情况下，您可以使用更简单的 &lt;code&gt;import&lt;/code&gt; 语法：</target>
        </trans-unit>
        <trans-unit id="2775ccc0da8ca41da6274f811302c8fd1fecccdc" translate="yes" xml:space="preserve">
          <source>Sometimes a package will have no exports and simply have side effects when included in your app. In such cases you don&amp;rsquo;t need to import the package at all after installing.</source>
          <target state="translated">有时，当程序包中包含某个包时，它们将不会导出，只会产生副作用。在这种情况下，安装后根本不需要导入软件包。</target>
        </trans-unit>
        <trans-unit id="b7fb941f27793448af5e3a89674fc1adfce343aa" translate="yes" xml:space="preserve">
          <source>Sometimes a single piece of functionality can be spread over multiple mutators.</source>
          <target state="translated">有时,一个功能可以分布在多个突变器上。</target>
        </trans-unit>
        <trans-unit id="37177908e7d657fd13b1bf5bc5412ed34a490301" translate="yes" xml:space="preserve">
          <source>Sometimes an argument to a helper call is best expressed as a return value of some other expression. For this and other cases, one can use parentheses to express the evaluation order of nested expressions.</source>
          <target state="translated">有时,帮助调用的一个参数最好用其他表达式的返回值来表示。对于这种情况和其他情况,我们可以使用括号来表达嵌套表达式的评估顺序。</target>
        </trans-unit>
        <trans-unit id="967fcd8347c649fe963cca11b07dfe2fa067d406" translate="yes" xml:space="preserve">
          <source>Sometimes changes in your data can trigger re-computations which you know won&amp;rsquo;t affect your UI. Although React is in general quite efficient in the face of unnecessary re-renders, if you need to control re-rendering, the above pattern allows you to easily use React&amp;rsquo;s &lt;a href=&quot;https://facebook.github.io/react/docs/component-specs.html#updating-shouldcomponentupdate&quot;&gt;&lt;code&gt;shouldComponentUpdate&lt;/code&gt;&lt;/a&gt; on the presentational component to avoid re-renders.</source>
          <target state="translated">有时，您的数据更改可能会触发重新计算，您知道这不会影响您的UI。尽管React在面对不必要的重新渲染时通常非常有效，但是如果您需要控制重新渲染，则上述模式可以让您轻松地在演示组件上使用React的&lt;a href=&quot;https://facebook.github.io/react/docs/component-specs.html#updating-shouldcomponentupdate&quot;&gt; &lt;code&gt;shouldComponentUpdate&lt;/code&gt; &lt;/a&gt;来避免重新渲染。</target>
        </trans-unit>
        <trans-unit id="30eed3363beda5dc6cb6645d4304aa8921b0f07a" translate="yes" xml:space="preserve">
          <source>Sometimes packages may contain binary code specific to an architecture (for example, they may use an npm package). In that case, running publish will only upload the build to the architecture that you were using to publish it. You can use &lt;code&gt;publish-for-arch&lt;/code&gt; to upload a build to a different architecture from a different machine.</source>
          <target state="translated">有时，软件包可能包含特定于体系结构的二进制代码（例如，它们可能使用npm软件包）。在这种情况下，运行发布只会将内部版本上传到用于发布它的体系结构。您可以使用 &lt;code&gt;publish-for-arch&lt;/code&gt; 将构建从其他计算机上载到不同的体系结构。</target>
        </trans-unit>
        <trans-unit id="e2b83c8b42b23568b24e56afda2dd3f27e1497e1" translate="yes" xml:space="preserve">
          <source>Sometimes the user may be interested in knowing when the update has hit the server. For instance, in a chat application, it&amp;rsquo;s a typical pattern to optimistically display the message in the chat log, but indicate that it is &amp;ldquo;pending&amp;rdquo; until the server has acknowledged the write. We can do this easily in Meteor by simply modifying the Method to act differently on the client:</source>
          <target state="translated">有时用户可能会对知道更新何时到达服务器感兴趣。例如，在聊天应用程序中，一种典型的模式是乐观地在聊天日志中显示该消息，但表示该消息在服务器确认写入之前一直处于&amp;ldquo;挂起&amp;rdquo;状态。我们可以通过简单地修改Method以使其在客户端上以不同的方式在Meteor中轻松实现：</target>
        </trans-unit>
        <trans-unit id="8e78f363b35581ec725cb46401ef8bbcf2b9978b" translate="yes" xml:space="preserve">
          <source>Sometimes when we change the schema of an application, we do so in a breaking way &amp;ndash; so that the old schema doesn&amp;rsquo;t work properly with the new code base. For instance, if we had some UI code that heavily relied on all lists having a &lt;code&gt;todoCount&lt;/code&gt; set, there would be a period, before the migration runs, in which the UI of our app would be broken after we deployed.</source>
          <target state="translated">有时，当我们更改应用程序的架构时，会以一种断断续续的方式进行操作-从而旧架构无法与新代码库一起正常使用。例如，如果我们有一些UI代码在很大程度上依赖于所有设置了 &lt;code&gt;todoCount&lt;/code&gt; 的列表，那么在迁移运行之前的一段时间内，在部署之后我们的应用程序UI会被破坏。</target>
        </trans-unit>
        <trans-unit id="c9541b8d1475268ea7ff1a13eaa81f4a1fc3d282" translate="yes" xml:space="preserve">
          <source>Sometimes, Meteor will ask you to run &lt;code&gt;meteor update --patch&lt;/code&gt;. Patch releases are special releases that contain only very minor changes (usually crucial bug fixes) from previous releases. We highly recommend that you always run &lt;code&gt;update
--patch&lt;/code&gt; when prompted.</source>
          <target state="translated">有时，Meteor会要求您运行 &lt;code&gt;meteor update --patch&lt;/code&gt; 。修补程序版本是特殊版本，仅包含与先前版本相比非常小的更改（通常是重要的错误修复）。强烈建议您在出现提示时始终运行 &lt;code&gt;update --patch&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5f9b65b97d3759923631106558124cc0679d385d" translate="yes" xml:space="preserve">
          <source>Sometimes, it doesn&amp;rsquo;t make sense to abstract permissions into &amp;ldquo;groups&amp;rdquo; - you just want documents to have owners and that&amp;rsquo;s it. In this case, you can use a simpler strategy using collection helpers.</source>
          <target state="translated">有时，将权限抽象为&amp;ldquo;组&amp;rdquo;没有意义-您只希望文档具有所有者即可。在这种情况下，您可以使用集合助手来使用更简单的策略。</target>
        </trans-unit>
        <trans-unit id="587ed289fb5162efc495a4470606aae244c5a266" translate="yes" xml:space="preserve">
          <source>Sometimes, the simple mechanism of returning a query from a publication function won&amp;rsquo;t cover your needs. In those situations, there are some more powerful publication patterns that you can use.</source>
          <target state="translated">有时，从发布函数返回查询的简单机制无法满足您的需求。在这种情况下，可以使用一些更强大的发布模式。</target>
        </trans-unit>
        <trans-unit id="8ea56ed3ad462396bdd97fc31754c69092c333ef" translate="yes" xml:space="preserve">
          <source>Sometimes, you&amp;rsquo;ll want to call a Method from another Method. Perhaps you already have some functionality implemented and you want to add a wrapper that fills in some of the arguments automatically. This is a totally fine pattern, and Meteor does some nice things for you:</source>
          <target state="translated">有时，您需要从另一个方法调用一个方法。也许您已经实现了某些功能，并且想要添加一个自动填充某些参数的包装器。这是一个非常好的模式，Meteor为您做了一些不错的事情：</target>
        </trans-unit>
        <trans-unit id="42494b26bf1ad21b3ef7f5e960a7620440551809" translate="yes" xml:space="preserve">
          <source>Sometimes, your users will end up on a page that isn&amp;rsquo;t a good place for them to be. Maybe the data they were looking for has moved, maybe they were on an admin panel page and logged out, or maybe they just created a new object and you want them to end up on the page for the thing they just created.</source>
          <target state="translated">有时，您的用户最终会出现在一个不合适的页面上。也许他们正在寻找的数据已经移动，也许他们在管理面板页面上并已注销，或者也许他们只是创建了一个新对象，而您希望它们最终出现在他们刚创建的对象的页面上。</target>
        </trans-unit>
        <trans-unit id="1770eb1256a559743e31eac20e1799f90efee3ab" translate="yes" xml:space="preserve">
          <source>Sort Specifiers</source>
          <target state="translated">排序规格</target>
        </trans-unit>
        <trans-unit id="bc64afe5eb57c9154a448e2c6f8cd508b88f154e" translate="yes" xml:space="preserve">
          <source>Sort order (default: natural order)</source>
          <target state="translated">排序顺序(默认:自然顺序</target>
        </trans-unit>
        <trans-unit id="afa7db30001b249bae428d0da7857c46b13ab1e8" translate="yes" xml:space="preserve">
          <source>Sorts may be specified using your choice of several syntaxes:</source>
          <target state="translated">可以使用你选择的几种语法来指定分类。</target>
        </trans-unit>
        <trans-unit id="843558854e90b07b4e553cf25b2db7e4fbf89149" translate="yes" xml:space="preserve">
          <source>Source vs. import files</source>
          <target state="translated">源文件与导入文件</target>
        </trans-unit>
        <trans-unit id="ecc504d5bcdaffc6ef5d66689b319535cea8c706" translate="yes" xml:space="preserve">
          <source>Spacebars</source>
          <target state="translated">Spacebars</target>
        </trans-unit>
        <trans-unit id="ac129336f9c18f31db88e4217a928ed28f2cf3f0" translate="yes" xml:space="preserve">
          <source>Spacebars has a very strict HTML parser. For instance, you can&amp;rsquo;t self-close a &lt;code&gt;div&lt;/code&gt; (&lt;code&gt;&amp;lt;div/&amp;gt;&lt;/code&gt;) in Spacebars, and you need to close some tags that a browser might not require you to (such as a &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; tag). Thankfully, the parser will warn you when it can&amp;rsquo;t understand your code with an exact line number for the error.</source>
          <target state="translated">空格键具有非常严格的HTML解析器。例如，您不能在空格键中自动关闭 &lt;code&gt;div&lt;/code&gt; （ &lt;code&gt;&amp;lt;div/&amp;gt;&lt;/code&gt; ），并且需要关闭一些浏览器可能不需要的标签（例如 &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; 标签）。值得庆幸的是，当解析器无法理解您的代码并给出确切的错误行号时，它将向您发出警告。</target>
        </trans-unit>
        <trans-unit id="dd5c7cca91ad8702873343ecf92904d4da9e6381" translate="yes" xml:space="preserve">
          <source>Spacebars is a Meteor template language inspired by &lt;a href=&quot;http://handlebarsjs.com/&quot;&gt;Handlebars&lt;/a&gt;. It shares some of the spirit and syntax of Handlebars, but it has been tailored to produce reactive Meteor templates when compiled.</source>
          <target state="translated">Spacebars是一种由&lt;a href=&quot;http://handlebarsjs.com/&quot;&gt;Handlebars&lt;/a&gt;启发的Meteor模板语言。它具有一些Handlebars的精神和语法，但已被定制为在编译时生成反应性Meteor模板。</target>
        </trans-unit>
        <trans-unit id="db589873b07c45de7de4a5f6847d245903bd7460" translate="yes" xml:space="preserve">
          <source>Spacebars is a handlebars-like templating language, built on the concept of rendering a reactively changing &lt;em&gt;data context&lt;/em&gt;. Spacebars templates look like simple HTML with special &amp;ldquo;mustache&amp;rdquo; tags delimited by curly braces: &lt;code&gt;{{ }}&lt;/code&gt;.</source>
          <target state="translated">空格键是一种类似于把手的模板语言，建立在呈现反应性变化的&lt;em&gt;数据上下文&lt;/em&gt;的概念上。空格键模板看起来像简单的HTML，带有特殊的&amp;ldquo;小胡子&amp;rdquo;标签，用花括号 &lt;code&gt;{{ }}&lt;/code&gt; 分隔。</target>
        </trans-unit>
        <trans-unit id="186a93d0f0a006ebfdb539f8e5276f79d80c2a44" translate="yes" xml:space="preserve">
          <source>Spacebars is not lenient about malformed markup the way a web browser is. While the latest HTML spec standardizes how browsers should recover from parse errors, these cases are still not valid HTML. For example, a browser may recover from a bare &lt;code&gt;&amp;lt;&lt;/code&gt; that does not begin a well-formed HTML tag, while Spacebars will not. However, gone are the restrictions of the XHTML days; attribute values do not have to quoted, and tags are not case-sensitive, for example.</source>
          <target state="translated">空格键对网络浏览器格式错误的标记不宽容。尽管最新的HTML规范规范了浏览器应如何从解析错误中恢复，但这些情况仍然不是有效的HTML。例如，一个浏览器可以从裸恢复 &lt;code&gt;&amp;lt;&lt;/code&gt; 不开始一个良好的HTML标签，而Spacebars不会。但是，XHTML时代的限制已不复存在。例如，属性值不必加引号，并且标记不区分大小写。</target>
        </trans-unit>
        <trans-unit id="659d70786d24c24a73453589dbc84ee62f997914" translate="yes" xml:space="preserve">
          <source>Spacebars templates</source>
          <target state="translated">空格条模板</target>
        </trans-unit>
        <trans-unit id="6ebb68ffd6433e4817d1350a43c68460aa95a9fc" translate="yes" xml:space="preserve">
          <source>Spacebars templates are written in &lt;a href=&quot;http://developers.whatwg.org/syntax.html&quot;&gt;standard HTML&lt;/a&gt; extended with additional syntax (i.e. template tags).</source>
          <target state="translated">空格键模板以&lt;a href=&quot;http://developers.whatwg.org/syntax.html&quot;&gt;标准HTML&lt;/a&gt;编写，并带有其他语法（即模板标签）。</target>
        </trans-unit>
        <trans-unit id="51c87867f5dccf179d8c4ef9d9cbdc625c600629" translate="yes" xml:space="preserve">
          <source>Spacebars templates update reactively at a fine-grained level in response to changing data.</source>
          <target state="translated">空间条模板会根据数据的变化进行细粒度的反应式更新。</target>
        </trans-unit>
        <trans-unit id="7f2cbe4d1a91009df73ec6f7396b39440b15a070" translate="yes" xml:space="preserve">
          <source>Spacebars validates your HTML as it goes and will throw a compile-time error if you violate basic HTML syntax in a way that prevents it from determining the structure of your code.</source>
          <target state="translated">Spacebars会对你的HTML进行验证,如果你违反了基本的HTML语法,使其无法确定你的代码结构,那么Spacebars会抛出一个编译时错误。</target>
        </trans-unit>
        <trans-unit id="f7218259ff5cece22f9f49760d5ec4b6c7ba7b3a" translate="yes" xml:space="preserve">
          <source>Special directories</source>
          <target state="translated">特别目录</target>
        </trans-unit>
        <trans-unit id="1e908a5ad4bfd8c4d66dcf036244665b5746aa4c" translate="yes" xml:space="preserve">
          <source>Specifically, when you pass a &lt;code&gt;name&lt;/code&gt;, here&amp;rsquo;s what happens:</source>
          <target state="translated">具体来说，当您传递 &lt;code&gt;name&lt;/code&gt; ，会发生以下情况：</target>
        </trans-unit>
        <trans-unit id="92a47ebb69242937b16a0aad20f259c584179d12" translate="yes" xml:space="preserve">
          <source>Specification of a release: track@version. Just 'version' (e.g. &lt;code&gt;&quot;0.9.0&quot;&lt;/code&gt;) is sufficient if using the default release track &lt;code&gt;METEOR&lt;/code&gt;. Can be an array of specifications.</source>
          <target state="translated">版本说明：track @ version。如果使用默认的发布轨道 &lt;code&gt;METEOR&lt;/code&gt; ,仅'version'（例如 &lt;code&gt;&quot;0.9.0&quot;&lt;/code&gt; ）就足够了。可以是一系列规格。</target>
        </trans-unit>
        <trans-unit id="6eacbeb05feca92e3ce66260defc9b4f765e6dab" translate="yes" xml:space="preserve">
          <source>Specifies how to modify the documents</source>
          <target state="translated">指定如何修改文件</target>
        </trans-unit>
        <trans-unit id="d6e01d68e936bf6f610d7cd227db050e0ddef24b" translate="yes" xml:space="preserve">
          <source>Specifies which documents to modify</source>
          <target state="translated">指定要修改的文件</target>
        </trans-unit>
        <trans-unit id="9d0b7c3c37091ca0a32493119a8818e748a0cff5" translate="yes" xml:space="preserve">
          <source>Specifies which documents to remove</source>
          <target state="translated">指定要删除的文件</target>
        </trans-unit>
        <trans-unit id="e6f7a19aa0bff6b0065b239546903ba4890712b6" translate="yes" xml:space="preserve">
          <source>Specify asset files for your package. They can be accessed via the &lt;a href=&quot;#assets&quot;&gt;Assets API&lt;/a&gt; from the server, or at the URL &lt;code&gt;/packages/username_package-name/file-name&lt;/code&gt; from the client, depending on the architecture passed.</source>
          <target state="translated">指定软件包的资产文件。可以通过服务器上的&lt;a href=&quot;#assets&quot;&gt;Assets API&lt;/a&gt;或从客户端通过URL &lt;code&gt;/packages/username_package-name/file-name&lt;/code&gt; 访问它们，具体取决于传递的体系结构。</target>
        </trans-unit>
        <trans-unit id="b5a2d0605b608d23cd66764f3cdf1e853afb9118" translate="yes" xml:space="preserve">
          <source>Specify event handlers for this template.</source>
          <target state="translated">为该模板指定事件处理程序。</target>
        </trans-unit>
        <trans-unit id="4c80894f7fe63793c42766af04601259f84c4102" translate="yes" xml:space="preserve">
          <source>Specify source code files for your package.</source>
          <target state="translated">为您的软件包指定源代码文件。</target>
        </trans-unit>
        <trans-unit id="dcf0eb8c6102fc69f1c9fd19043bed6b784a902a" translate="yes" xml:space="preserve">
          <source>Specify template helpers available to this template.</source>
          <target state="translated">指定本模板可用的模板帮助程序。</target>
        </trans-unit>
        <trans-unit id="301f34b1d2335841250ebe63ac55db926657a828" translate="yes" xml:space="preserve">
          <source>Specify where this asset should be available (e.g., 'server', 'client', 'web.browser', 'web.cordova'). You can specify multiple architectures by passing in an array, for example &lt;code&gt;['web.cordova', 'os.linux']&lt;/code&gt;.</source>
          <target state="translated">指定该资产在何处可用（例如，&amp;ldquo;服务器&amp;rdquo;，&amp;ldquo;客户端&amp;rdquo;，&amp;ldquo; web.browser&amp;rdquo;，&amp;ldquo; web.cordova&amp;rdquo;）。您可以通过传入数组来指定多种架构，例如 &lt;code&gt;['web.cordova', 'os.linux']&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0979000f814be6a0b456fe96612343c6e571858a" translate="yes" xml:space="preserve">
          <source>Specify which &lt;a href=&quot;http://cordova.apache.org/&quot;&gt;Cordova / PhoneGap&lt;/a&gt; plugins your Meteor package depends on.</source>
          <target state="translated">指定您的Meteor软件包所依赖的&lt;a href=&quot;http://cordova.apache.org/&quot;&gt;Cordova / PhoneGap&lt;/a&gt;插件。</target>
        </trans-unit>
        <trans-unit id="396a0d4158b8d9f6c74552eaa6d645e6fe9a3875" translate="yes" xml:space="preserve">
          <source>Specify which &lt;a href=&quot;https://www.npmjs.org/&quot;&gt;NPM&lt;/a&gt; packages your Meteor package depends on.</source>
          <target state="translated">指定您的Meteor软件包所依赖的&lt;a href=&quot;https://www.npmjs.org/&quot;&gt;NPM&lt;/a&gt;软件包。</target>
        </trans-unit>
        <trans-unit id="da21c85d61d2f38d5c1da617547cfc07e9ba39b5" translate="yes" xml:space="preserve">
          <source>Splitting into multiple apps</source>
          <target state="translated">分割成多个应用程序</target>
        </trans-unit>
        <trans-unit id="baa01701f1fa1790c7ef5ce421dcd21608fe6fcf" translate="yes" xml:space="preserve">
          <source>Starting with Meteor 1.0.4 access rule for all domains and protocols (&lt;code&gt;&amp;lt;access origin=&quot;*&quot;/&amp;gt;&lt;/code&gt;) is no longer set by default due to &lt;a href=&quot;http://cordova.apache.org/announcements/2014/08/04/android-351.html&quot;&gt;certain kind of possible attacks&lt;/a&gt;.</source>
          <target state="translated">从Meteor 1.0.4开始，由于&lt;a href=&quot;http://cordova.apache.org/announcements/2014/08/04/android-351.html&quot;&gt;某些可能的攻击&lt;/a&gt;，默认情况下不再设置所有域和协议（ &lt;code&gt;&amp;lt;access origin=&quot;*&quot;/&amp;gt;&lt;/code&gt; ）的访问规则。</target>
        </trans-unit>
        <trans-unit id="cae08a2af0a6cfee2acf7b5acbd2499fe1841275" translate="yes" xml:space="preserve">
          <source>Starting with Meteor 1.2, packages can declare that they need a version of the Meteor tool whose Isobuild build system supports a certain feature. For example, packages must write &lt;code&gt;api.use('isobuild:compiler-plugin@1.0.0')&lt;/code&gt; in order to call &lt;code&gt;Plugin.registerCompiler&lt;/code&gt;. This means that a package can transition from the old &lt;code&gt;registerSourceHandler&lt;/code&gt; API to &lt;code&gt;registerCompiler&lt;/code&gt; and Version Solver will properly prevent the &lt;code&gt;registerCompiler&lt;/code&gt; version from being chosen by older tools that don&amp;rsquo;t know how to handle it.</source>
          <target state="translated">从Meteor 1.2开始，程序包可以声明它们需要其Isobuild构建系统支持某种功能的Meteor工具的版本。例如，软件包必须编写 &lt;code&gt;api.use('isobuild:compiler-plugin@1.0.0')&lt;/code&gt; 才能调用 &lt;code&gt;Plugin.registerCompiler&lt;/code&gt; 。这意味着程序包可以从旧的 &lt;code&gt;registerSourceHandler&lt;/code&gt; API 过渡到 &lt;code&gt;registerCompiler&lt;/code&gt; ,而Version Solver将适当地阻止不知道如何处理它的旧工具选择 &lt;code&gt;registerCompiler&lt;/code&gt; 版本。</target>
        </trans-unit>
        <trans-unit id="ee8c8ebe2a3a93d4ad4b379dcedd3e3826bc907e" translate="yes" xml:space="preserve">
          <source>Starting with Meteor 1.2, the API used to plug into the build process is called &amp;ldquo;Build Plugins&amp;rdquo;. There are 3 phases when a package&amp;rsquo;s plugin can run: linting, compilation and minification. Here is an overview of operations Isobuild performs on the application and packages source:</source>
          <target state="translated">从Meteor 1.2开始，用于插入构建过程的API称为&amp;ldquo;构建插件&amp;rdquo;。包的插件可以运行分为三个阶段：整理，编译和缩小。以下是Isobuild对应用程序和程序包源执行的操作的概述：</target>
        </trans-unit>
        <trans-unit id="2c53b0cdb260d1d53a18026e667ce6fb85645c7f" translate="yes" xml:space="preserve">
          <source>Starts up the test driver package (&lt;a href=&quot;#driver-packages&quot;&gt;see below&lt;/a&gt;).</source>
          <target state="translated">启动测试驱动程序包（&lt;a href=&quot;#driver-packages&quot;&gt;请参见下文&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="4dc274cbfb723d7fa7d47c8a8ebbb3affafbe000" translate="yes" xml:space="preserve">
          <source>Startup files</source>
          <target state="translated">启动文件</target>
        </trans-unit>
        <trans-unit id="488a095631c8c195522d289cd71abe333949c403" translate="yes" xml:space="preserve">
          <source>Static server assets are included by placing them in the application&amp;rsquo;s &lt;code&gt;private&lt;/code&gt; subdirectory. For example, if an application&amp;rsquo;s &lt;code&gt;private&lt;/code&gt; subdirectory includes a directory called &lt;code&gt;nested&lt;/code&gt; with a file called &lt;code&gt;data.txt&lt;/code&gt; inside it, then server code can read &lt;code&gt;data.txt&lt;/code&gt; by running:</source>
          <target state="translated">通过将静态服务器资产放置在应用程序的 &lt;code&gt;private&lt;/code&gt; 子目录中，可以将其包括在内。例如，如果应用程序的 &lt;code&gt;private&lt;/code&gt; 子目录包含一个名为 &lt;code&gt;nested&lt;/code&gt; 的目录，该目录中嵌套有一个名为 &lt;code&gt;data.txt&lt;/code&gt; 的文件，则服务器代码可以通过运行以下命令来读取 &lt;code&gt;data.txt&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="22ede57d426a7020d719e3e2e0dfd9587f9dbb1b" translate="yes" xml:space="preserve">
          <source>Step 4 above is an important detail&amp;mdash;that the system cleverly knows not to re-subscribe if the autorun re-runs and subscribes with the exact same arguments. This holds true even if the new subscription is set up somewhere else in the template hierarchy. For example, if a user navigates between two pages that both subscribe to the exact same subscription, the same mechanism will kick in and no unnecessary subscribing will happen.</source>
          <target state="translated">上面的步骤4是一个重要的细节-如果自动运行重新运行并使用完全相同的参数进行预订，系统就会聪明地知道不要重新预订。即使在模板层次结构中的其他位置设置了新订阅，也是如此。例如，如果用户在两个都订阅完全相同的订阅的页面之间导航，则将使用相同的机制，并且不会发生不必要的订阅。</target>
        </trans-unit>
        <trans-unit id="c43b7a588c840bc119129d373529cd1eb91feb1f" translate="yes" xml:space="preserve">
          <source>Steps 2. and 5. can be quite time-consuming, especially if you are aiming to maintain a high level of quality in your application. That&amp;rsquo;s why it&amp;rsquo;s a great idea to develop a suite of acceptance tests (see our &lt;a href=&quot;testing&quot;&gt;Testing Article&lt;/a&gt; for more on this). To take things even further, you could run a load/stress test against your staging server on every release.</source>
          <target state="translated">步骤2和5.可能会非常耗时，特别是如果您要在应用程序中保持较高的质量。因此，开发一套验收测试是一个好主意（有关更多信息，请参见我们的&lt;a href=&quot;testing&quot;&gt;测试文章&lt;/a&gt;）。更进一步，您可以在每个发行版上针对登台服务器运行负载/压力测试。</target>
        </trans-unit>
        <trans-unit id="a86f651249f4e19c9cd5df8e90e6bd2420b53217" translate="yes" xml:space="preserve">
          <source>Stopping Subscriptions</source>
          <target state="translated">停止订阅</target>
        </trans-unit>
        <trans-unit id="7fd14e8fcb39146c3c2b3f490ed48f627d66e4f6" translate="yes" xml:space="preserve">
          <source>Stopping a computation causes its &lt;code&gt;onInvalidate&lt;/code&gt; callbacks to run immediately if it is not currently invalidated, as well as its &lt;code&gt;stop&lt;/code&gt; callbacks.</source>
          <target state="translated">停止计算会导致其 &lt;code&gt;onInvalidate&lt;/code&gt; 回调（如果当前尚未使它无效）立即运行，以及 &lt;code&gt;stop&lt;/code&gt; 回调。</target>
        </trans-unit>
        <trans-unit id="38238c8459154491b33e937ae104aad658d3268d" translate="yes" xml:space="preserve">
          <source>Stopping a computation invalidates it (if it is valid) for the purpose of calling callbacks, but ensures that it will never be rerun.</source>
          <target state="translated">停止一个计算会使它无效(如果它是有效的),以达到调用回调的目的,但确保它永远不会被重新运行。</target>
        </trans-unit>
        <trans-unit id="0d0f00fed7f257417a56fde30da357fb9e97cce9" translate="yes" xml:space="preserve">
          <source>Stopping a computation is irreversible and guarantees that it will never be rerun. You can stop a computation at any time, including from the computation&amp;rsquo;s own run function. Stopping a computation that is already stopped has no effect.</source>
          <target state="translated">停止计算是不可逆的，并保证永远不会重新运行它。您可以随时停止计算，包括通过计算自身的运行功能停止计算。停止已经停止的计算无效。</target>
        </trans-unit>
        <trans-unit id="84cd0876723c908e36df076d6b7be48a4fdbf71d" translate="yes" xml:space="preserve">
          <source>Storage Engine Support (MMAPv1 or WiredTiger) &amp;ndash; Since Meteor 1.4 WiredTiger is the default storage engine</source>
          <target state="translated">存储引擎支持（MMAPv1或WiredTiger）&amp;ndash;由于Meteor 1.4 WiredTiger是默认存储引擎</target>
        </trans-unit>
        <trans-unit id="cfd5cb5c2a301919f6af30860bff0837ba03e2e8" translate="yes" xml:space="preserve">
          <source>Storing data in the URL</source>
          <target state="translated">在URL中存储数据</target>
        </trans-unit>
        <trans-unit id="ea178a9a9bd02024d63a2e33e3d1c06a8b763aa9" translate="yes" xml:space="preserve">
          <source>Strictness</source>
          <target state="translated">Strictness</target>
        </trans-unit>
        <trans-unit id="cf849e3b6bb69e78ff1f65f9b1a600f0969b064d" translate="yes" xml:space="preserve">
          <source>String to use as the HTTP request body.</source>
          <target state="translated">用来作为HTTP请求体的字符串。</target>
        </trans-unit>
        <trans-unit id="c83169d252f6be6e356582bc842a48fd5186ffc4" translate="yes" xml:space="preserve">
          <source>Structuring imports</source>
          <target state="translated">调整进口结构</target>
        </trans-unit>
        <trans-unit id="532626609e018b03feb0f8b6873e8b52009d95ad" translate="yes" xml:space="preserve">
          <source>Stubbing</source>
          <target state="translated">Stubbing</target>
        </trans-unit>
        <trans-unit id="a0d160aba89c286bf5f12775644159a426602778" translate="yes" xml:space="preserve">
          <source>Style suggestions for Meteor-specific patterns, such as Methods, publications, and more</source>
          <target state="translated">气象特定模式的风格建议,如方法、出版物等。</target>
        </trans-unit>
        <trans-unit id="957400ac1d92f82a856a3f939ce5438d5096957c" translate="yes" xml:space="preserve">
          <source>Stylus</source>
          <target state="translated">Stylus</target>
        </trans-unit>
        <trans-unit id="edcc462ffa5e5dab415de6afbc1d092aa1a02087" translate="yes" xml:space="preserve">
          <source>Stylus is maintained as a &lt;a href=&quot;https://atmospherejs.com/meteor/stylus&quot;&gt;Meteor core package called &lt;code&gt;stylus&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">手写笔作为&lt;a href=&quot;https://atmospherejs.com/meteor/stylus&quot;&gt;称为 &lt;code&gt;stylus&lt;/code&gt; &lt;/a&gt;的流星核心软件包进行维护。</target>
        </trans-unit>
        <trans-unit id="f53221ba50d4176a02810b2f92fffc05193e7ea6" translate="yes" xml:space="preserve">
          <source>Sub-expressions can be used to calculate key-word arguments, too:</source>
          <target state="translated">子表达式也可以用来计算关键词参数。</target>
        </trans-unit>
        <trans-unit id="9ce6ba148fe8d9ab4a1efa44f043d11727e7f6ee" translate="yes" xml:space="preserve">
          <source>Sublime Text</source>
          <target state="translated">崇高的文本</target>
        </trans-unit>
        <trans-unit id="a3c1d0c35e3de98dca3e0b0bf5b1b0497fcf9e6a" translate="yes" xml:space="preserve">
          <source>SublimeLinter (&lt;a href=&quot;http://sublimelinter.readthedocs.org/en/latest/installation.html&quot;&gt;full instructions&lt;/a&gt;)</source>
          <target state="translated">SublimeLinter（&lt;a href=&quot;http://sublimelinter.readthedocs.org/en/latest/installation.html&quot;&gt;完整说明&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="1e45d7eb374f7f57043eaa5fbea25fc5e84adc47" translate="yes" xml:space="preserve">
          <source>SublimeLinter-contrib-eslint (&lt;a href=&quot;https://github.com/roadhump/SublimeLinter-eslint#plugin-installation&quot;&gt;full instructions&lt;/a&gt;)</source>
          <target state="translated">SublimeLinter-contrib-eslint（&lt;a href=&quot;https://github.com/roadhump/SublimeLinter-eslint#plugin-installation&quot;&gt;完整说明&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="087e97c4e3b69f78bd885dea1594496aaa4ea3ff" translate="yes" xml:space="preserve">
          <source>Submitting an app using Crosswalk to to Play Store</source>
          <target state="translated">使用 Crosswalk 向 Play Store 提交应用程序</target>
        </trans-unit>
        <trans-unit id="c0f95cd7594695fc860e5e6020241d55c06b1dba" translate="yes" xml:space="preserve">
          <source>Subscribe from &lt;code&gt;onCreated&lt;/code&gt;</source>
          <target state="translated">从 &lt;code&gt;onCreated&lt;/code&gt; 订阅</target>
        </trans-unit>
        <trans-unit id="1af8e1144fceed9ec58f1b52645250164f66f7c3" translate="yes" xml:space="preserve">
          <source>Subscribe in UI components</source>
          <target state="translated">在UI组件中订阅</target>
        </trans-unit>
        <trans-unit id="019d920e4312cdd5d847ca57afbc59c99b40bad0" translate="yes" xml:space="preserve">
          <source>Subscribe to a record set. Returns a handle that provides &lt;code&gt;stop()&lt;/code&gt; and &lt;code&gt;ready()&lt;/code&gt; methods.</source>
          <target state="translated">订阅记录集。返回提供 &lt;code&gt;stop()&lt;/code&gt; 和 &lt;code&gt;ready()&lt;/code&gt; 方法的句柄。</target>
        </trans-unit>
        <trans-unit id="eb0493455a7518a21bcd6a8fcfa3e2c2b4562802" translate="yes" xml:space="preserve">
          <source>Subscribe to data</source>
          <target state="translated">订阅数据</target>
        </trans-unit>
        <trans-unit id="ba401ec98dec72f17b10dca519bc070ad9595e82" translate="yes" xml:space="preserve">
          <source>Subscribe to relevant subscriptions,</source>
          <target state="translated">订阅相关订阅。</target>
        </trans-unit>
        <trans-unit id="c9ceca33bbb824f322c70060ce390e0b0ed09aa7" translate="yes" xml:space="preserve">
          <source>Subscribing to data</source>
          <target state="translated">订阅数据</target>
        </trans-unit>
        <trans-unit id="037af573831ad1ba19f11905a227ae0a1a33d609" translate="yes" xml:space="preserve">
          <source>Subscribing to data puts it in your client-side collection. To use the data in your user interface, you need to query your client-side collection. There are a couple of important rules to follow when doing this.</source>
          <target state="translated">订阅数据会把数据放到你的客户端集合中。要在你的用户界面中使用数据,你需要查询你的客户端集合。在这样做的时候,有几个重要的规则需要遵循。</target>
        </trans-unit>
        <trans-unit id="61a8c988386beefb5a99ca1920f24f0083d2ed89" translate="yes" xml:space="preserve">
          <source>Subscription lifecycle</source>
          <target state="translated">订阅生命周期</target>
        </trans-unit>
        <trans-unit id="84b90a00a876707d164f85089ad4f2273e36aec1" translate="yes" xml:space="preserve">
          <source>Subscription readiness</source>
          <target state="translated">订阅准备情况</target>
        </trans-unit>
        <trans-unit id="40b8e3a739c94ae31c2d2611ccebf4ce458f9807" translate="yes" xml:space="preserve">
          <source>Suggested style guidelines for your code.</source>
          <target state="translated">为您的代码推荐风格指南。</target>
        </trans-unit>
        <trans-unit id="481bc2ff1e299fbca3651cb1d9053d8888501cf3" translate="yes" xml:space="preserve">
          <source>Super-constructor for AccountsClient and AccountsServer.</source>
          <target state="translated">AccountsClient 和 AccountsServer 的超级构造函数。</target>
        </trans-unit>
        <trans-unit id="f0bab6d94ac2aea3829cd9120fff59574f733d0d" translate="yes" xml:space="preserve">
          <source>Support for Replica Sets &amp;amp; Oplog tailing</source>
          <target state="translated">支持副本集和Oplog拖尾</target>
        </trans-unit>
        <trans-unit id="ae06bea331f28eb01f40396f0e9966f2a64c7de1" translate="yes" xml:space="preserve">
          <source>Supported ES2015 Features</source>
          <target state="translated">支持的ES2015功能</target>
        </trans-unit>
        <trans-unit id="a60b6274ab94fd571786c35b02d0730b279a2fe4" translate="yes" xml:space="preserve">
          <source>Supports catch-all &lt;code&gt;...rest&lt;/code&gt; properties in object literal declarations and assignments:</source>
          <target state="translated">支持对象文字声明和赋值中的全部 &lt;code&gt;...rest&lt;/code&gt; 属性：</target>
        </trans-unit>
        <trans-unit id="22feaffa039be8678f90f340543de7a34015bcf5" translate="yes" xml:space="preserve">
          <source>Supports the MongoDB version you wish to run</source>
          <target state="translated">支持你想运行的MongoDB版本。</target>
        </trans-unit>
        <trans-unit id="bfa160301d799b28c48a451782aa085c37930e88" translate="yes" xml:space="preserve">
          <source>Suppose you have a simple publication of the following form:</source>
          <target state="translated">假设你有一个简单的出版物,其形式如下。</target>
        </trans-unit>
        <trans-unit id="cd0531ce8fef7fd864d536517837a08ea81ab48d" translate="yes" xml:space="preserve">
          <source>Suppose, as an example, that we wanted to add a &lt;code&gt;list.todoCount&lt;/code&gt; field, and ensure that it was set for all existing lists. Then we might write the following in server-only code (e.g. &lt;code&gt;/server/migrations.js&lt;/code&gt;):</source>
          <target state="translated">举例来说，假设我们要添加一个 &lt;code&gt;list.todoCount&lt;/code&gt; 字段，并确保已为所有现有列表设置了该字段。然后，我们可以在仅服务器的代码（例如 &lt;code&gt;/server/migrations.js&lt;/code&gt; ）中编写以下代码：</target>
        </trans-unit>
        <trans-unit id="17c7ba7676ad1ad6dd1c4e6b997adcae910262c9" translate="yes" xml:space="preserve">
          <source>Syntax</source>
          <target state="translated">Syntax</target>
        </trans-unit>
        <trans-unit id="567b2656bb53fc60c79cd830a3253b6b487b0699" translate="yes" xml:space="preserve">
          <source>System Permissions</source>
          <target state="translated">系统权限</target>
        </trans-unit>
        <trans-unit id="f32de3e71f149d81905d2c0f8c9944150c3e4e29" translate="yes" xml:space="preserve">
          <source>Take advantage of Meteor&amp;rsquo;s &lt;a href=&quot;build-tool&quot;&gt;build system&lt;/a&gt; to be automatically transpiled from languages like CoffeeScript</source>
          <target state="translated">利用Meteor的&lt;a href=&quot;build-tool&quot;&gt;构建系统&lt;/a&gt;自动从CoffeeScript等语言进行翻译</target>
        </trans-unit>
        <trans-unit id="7dc30076646c7eb425a83b84c83e4c9fb7d03bf9" translate="yes" xml:space="preserve">
          <source>Target audience</source>
          <target state="translated">目标受众</target>
        </trans-unit>
        <trans-unit id="17e2637b16a5eba0cef89d8c454e94401594e14f" translate="yes" xml:space="preserve">
          <source>Technically speaking, the &lt;code&gt;&amp;lt;template&amp;gt;&lt;/code&gt; element is not part of the Spacebars language. A &lt;code&gt;foo.html&lt;/code&gt; template file in Meteor consists of one or more of the following elements:</source>
          <target state="translated">从技术上讲， &lt;code&gt;&amp;lt;template&amp;gt;&lt;/code&gt; 元素不是空格键语言的一部分。一个 &lt;code&gt;foo.html&lt;/code&gt; 流星模板文件包含一个或多个以下要素：</target>
        </trans-unit>
        <trans-unit id="903e0de531f14fb0495c42169017eaca7c92edf3" translate="yes" xml:space="preserve">
          <source>Technically, what happens when one of these reactive sources changes is the following:</source>
          <target state="translated">从技术上讲,当其中一个反应源发生变化时,会发生以下情况。</target>
        </trans-unit>
        <trans-unit id="0fe6042703610dfdfd08cfa5771de503b563a878" translate="yes" xml:space="preserve">
          <source>Template Declarations</source>
          <target state="translated">模板声明</target>
        </trans-unit>
        <trans-unit id="bdd364054e55324d98012f718e9b3d48a89df69d" translate="yes" xml:space="preserve">
          <source>Template Tag Placement Limitations</source>
          <target state="translated">模板标签放置限制</target>
        </trans-unit>
        <trans-unit id="29f6f10ddc19829caadc10be7999e311791dd631" translate="yes" xml:space="preserve">
          <source>Template data contexts (which you can access reactively with &lt;code&gt;Template.currentData()&lt;/code&gt;).</source>
          <target state="translated">模板数据上下文（您可以使用 &lt;code&gt;Template.currentData()&lt;/code&gt; 进行反应式访问）。</target>
        </trans-unit>
        <trans-unit id="dd84b79aa495bebccabc7f154f254f161ffd3c0c" translate="yes" xml:space="preserve">
          <source>Template helpers take priority over properties of the data context.</source>
          <target state="translated">模板助手优先于数据上下文的属性。</target>
        </trans-unit>
        <trans-unit id="55b7201637ff0afa51b88637d8ad020d809e0a83" translate="yes" xml:space="preserve">
          <source>Template inclusion</source>
          <target state="translated">模板包含</target>
        </trans-unit>
        <trans-unit id="035d8506a3bee285b7a1a3417b22da1baebec672" translate="yes" xml:space="preserve">
          <source>Template instance objects are &lt;code&gt;instanceof Blaze.TemplateInstance&lt;/code&gt;.</source>
          <target state="translated">模板实例对象是 &lt;code&gt;instanceof Blaze.TemplateInstance&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e84bc56fbad42cb89bb821c78b86f8d554517f7f" translate="yes" xml:space="preserve">
          <source>Template instance objects are found as the value of &lt;code&gt;this&lt;/code&gt; in the &lt;code&gt;onCreated&lt;/code&gt;, &lt;code&gt;onRendered&lt;/code&gt;, and &lt;code&gt;onDestroyed&lt;/code&gt; template callbacks, and as an argument to event handlers. You can access the current template instance from helpers using &lt;a href=&quot;templates#Template-instance&quot;&gt;&lt;code&gt;Template.instance()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">模板实例对象中发现的价值 &lt;code&gt;this&lt;/code&gt; 在 &lt;code&gt;onCreated&lt;/code&gt; ， &lt;code&gt;onRendered&lt;/code&gt; 和 &lt;code&gt;onDestroyed&lt;/code&gt; 模板回调，并作为参数传递给事件处理程序。您可以使用&lt;a href=&quot;templates#Template-instance&quot;&gt; &lt;code&gt;Template.instance()&lt;/code&gt; &lt;/a&gt;从帮助器访问当前模板实例。</target>
        </trans-unit>
        <trans-unit id="8644d7693f62b77833e7c88bd58cdcce8f9918be" translate="yes" xml:space="preserve">
          <source>Template instance objects have fields like &lt;code&gt;data&lt;/code&gt;, &lt;code&gt;firstNode&lt;/code&gt;, and &lt;code&gt;lastNode&lt;/code&gt; which are not reactive and which are also not automatically kept up to date. Calling &lt;code&gt;templateInstance()&lt;/code&gt; causes these fields to be updated.</source>
          <target state="translated">模板实例对象具有诸如 &lt;code&gt;data&lt;/code&gt; ， &lt;code&gt;firstNode&lt;/code&gt; 和 &lt;code&gt;lastNode&lt;/code&gt; 之类的字段，这些字段不是反应性的，也不会自动保持最新。调用 &lt;code&gt;templateInstance()&lt;/code&gt; 导致这些字段被更新。</target>
        </trans-unit>
        <trans-unit id="de6fa8e33e81f97df83046b1c5ecafc0cc146810" translate="yes" xml:space="preserve">
          <source>Template instances</source>
          <target state="translated">模板实例</target>
        </trans-unit>
        <trans-unit id="954ab955f2a4e981e2a42027ac3b702c33779a3e" translate="yes" xml:space="preserve">
          <source>Template name</source>
          <target state="translated">模板名称</target>
        </trans-unit>
        <trans-unit id="bcb645303efc3c8f462d217bc353c2b8b48088e0" translate="yes" xml:space="preserve">
          <source>Template#events()</source>
          <target state="translated">Template#events()</target>
        </trans-unit>
        <trans-unit id="d9fe9712b1b136c60046d954d784963ff129062c" translate="yes" xml:space="preserve">
          <source>Template#helpers()</source>
          <target state="translated">Template#helpers()</target>
        </trans-unit>
        <trans-unit id="94d18a58f4d1c36790911a050f2b383247c749c9" translate="yes" xml:space="preserve">
          <source>Template#onCreated</source>
          <target state="translated">Template#onCreated</target>
        </trans-unit>
        <trans-unit id="5fc234b06b339f13553e21c57fe129c6b3870c7d" translate="yes" xml:space="preserve">
          <source>Template#onDestroyed</source>
          <target state="translated">Template#onDestroyed</target>
        </trans-unit>
        <trans-unit id="f70cfeefd66c6d59a23695f76f055c20c08a8ab5" translate="yes" xml:space="preserve">
          <source>Template#onRendered</source>
          <target state="translated">Template#onRendered</target>
        </trans-unit>
        <trans-unit id="ee4905bfe20e62ceb883b0dd1c895d6c08b79498" translate="yes" xml:space="preserve">
          <source>Template.body</source>
          <target state="translated">Template.body</target>
        </trans-unit>
        <trans-unit id="cf6122bfebfbe04ad334163b6cdbae804dc4629c" translate="yes" xml:space="preserve">
          <source>Template.currentData()</source>
          <target state="translated">Template.currentData()</target>
        </trans-unit>
        <trans-unit id="30ef925fcbd26103b22179b021ac812bcf7b2a82" translate="yes" xml:space="preserve">
          <source>Template.instance()</source>
          <target state="translated">Template.instance()</target>
        </trans-unit>
        <trans-unit id="0a5041bb7a0ef0a391ef9a428d41bde65e2b974e" translate="yes" xml:space="preserve">
          <source>Template.parentData()</source>
          <target state="translated">Template.parentData()</target>
        </trans-unit>
        <trans-unit id="b856e3cccd43f16d4b078a0b3968edfeb4ebf4ca" translate="yes" xml:space="preserve">
          <source>Template.registerHelper()</source>
          <target state="translated">Template.registerHelper()</target>
        </trans-unit>
        <trans-unit id="f25b700ed9f092123a43acb205a6869342cf9dd6" translate="yes" xml:space="preserve">
          <source>Templates</source>
          <target state="translated">Templates</target>
        </trans-unit>
        <trans-unit id="241156fe7b111b0119698d0ac0de8840677acb6f" translate="yes" xml:space="preserve">
          <source>Templates and HTML</source>
          <target state="translated">模板和HTML</target>
        </trans-unit>
        <trans-unit id="5a679dbcb04acbd729bc2083a60a2f2f653eb626" translate="yes" xml:space="preserve">
          <source>Templates and components</source>
          <target state="translated">模板和组件</target>
        </trans-unit>
        <trans-unit id="29e93519e88967304d1daa33b2822c504b9680b1" translate="yes" xml:space="preserve">
          <source>Templates defined by the template compiler, such as &lt;code&gt;Template.myTemplate&lt;/code&gt;, are objects of type &lt;code&gt;Blaze.Template&lt;/code&gt; (aliased as &lt;code&gt;Template&lt;/code&gt;).</source>
          <target state="translated">模板编译器定义的模板（例如 &lt;code&gt;Template.myTemplate&lt;/code&gt; ）是 &lt;code&gt;Blaze.Template&lt;/code&gt; 类型的对象（别名为 &lt;code&gt;Template&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="c025d2ae33754d4bfe4d335c9cb82163f641d492" translate="yes" xml:space="preserve">
          <source>Test Files</source>
          <target state="translated">测试文件</target>
        </trans-unit>
        <trans-unit id="87a1d1d44fb17167a54fb7c79b121ad07f74c815" translate="yes" xml:space="preserve">
          <source>Test Meteor packages, either by name, or by directory. Not specifying an argument will run tests for all local packages. The results are displayed in an app that runs at &lt;code&gt;localhost:3000&lt;/code&gt; by default. If you need to, you can pass the &lt;code&gt;--settings&lt;/code&gt; and &lt;code&gt;--port&lt;/code&gt; arguments.</source>
          <target state="translated">通过名称或目录测试Meteor软件包。不指定参数将对所有本地软件包运行测试。结果显示在默认情况下以 &lt;code&gt;localhost:3000&lt;/code&gt; 运行的应用程序中。如果需要，可以传递 &lt;code&gt;--settings&lt;/code&gt; 和 &lt;code&gt;--port&lt;/code&gt; 参数。</target>
        </trans-unit>
        <trans-unit id="87514101785630549e54861e7e3b772a0e86078e" translate="yes" xml:space="preserve">
          <source>Test data</source>
          <target state="translated">测试数据</target>
        </trans-unit>
        <trans-unit id="4a06fef6a0fa977984162a2767d7bc80aae40286" translate="yes" xml:space="preserve">
          <source>Test files themselves (for example a file named &lt;code&gt;todos-item.test.js&lt;/code&gt; or &lt;code&gt;routing.app-specs.coffee&lt;/code&gt;) can register themselves to be run by the test driver in the usual way for that testing library. For Mocha, that&amp;rsquo;s by using &lt;code&gt;describe&lt;/code&gt; and &lt;code&gt;it&lt;/code&gt;:</source>
          <target state="translated">测试文件本身（例如，名为 &lt;code&gt;todos-item.test.js&lt;/code&gt; 或 &lt;code&gt;routing.app-specs.coffee&lt;/code&gt; 的文件）可以注册自己，以由测试驱动程序以该测试库的常规方式运行。对于Mocha，这是使用 &lt;code&gt;describe&lt;/code&gt; 和 &lt;code&gt;it&lt;/code&gt; 进行的：</target>
        </trans-unit>
        <trans-unit id="0fa762720da1f7c5efd2ed8b5502936147a15cdc" translate="yes" xml:space="preserve">
          <source>Test if a session variable is equal to a value. If inside a &lt;a href=&quot;#reactivity&quot;&gt;reactive computation&lt;/a&gt;, invalidate the computation the next time the variable changes to or from the value.</source>
          <target state="translated">测试会话变量是否等于值。如果在&lt;a href=&quot;#reactivity&quot;&gt;无功计算中&lt;/a&gt;，则下次变量更改为值或从值更改时使计算无效。</target>
        </trans-unit>
        <trans-unit id="0820b32b206b7352858e8903a838ed14319acdfd" translate="yes" xml:space="preserve">
          <source>Testing</source>
          <target state="translated">Testing</target>
        </trans-unit>
        <trans-unit id="a8d9f1a6657856f2287a9e4d4457163b88c30e0c" translate="yes" xml:space="preserve">
          <source>Testing allows you to ensure your application works the way you think it does, especially as your codebase changes over time. If you have good tests, you can refactor and rewrite code with confidence. Tests are also the most concrete form of documentation of expected behavior, since other developers can figure out how to use your code by reading the tests.</source>
          <target state="translated">测试可以让您确保您的应用程序以您认为的方式工作,特别是当您的代码库随着时间的推移而变化时。如果你有良好的测试,你就可以放心地重构和重写代码。测试也是预期行为的最具体的文档形式,因为其他开发人员可以通过阅读测试来了解如何使用你的代码。</target>
        </trans-unit>
        <trans-unit id="dddc3f861194f3b4a52169865358ab5cf7cb5272" translate="yes" xml:space="preserve">
          <source>Testing packages</source>
          <target state="translated">测试包</target>
        </trans-unit>
        <trans-unit id="2687e96cfa9d1d8d9233168af944ddc7ab3ff1f7" translate="yes" xml:space="preserve">
          <source>Testing publications</source>
          <target state="translated">测试出版物</target>
        </trans-unit>
        <trans-unit id="b629a403b8cdc9e9bfb8978fd80ebef4c680151f" translate="yes" xml:space="preserve">
          <source>Thanks to Meteor&amp;rsquo;s automatic handling of optimistic UI, if a method unexpectedly fails the optimistic changes will roll back and the Minimongo database will end up in a consistent state. If you are rendering directly from Minimongo, the user will see something that is consistent, even if it&amp;rsquo;s not what they anticipated of course. In some cases when you have state you are keeping outside of Minimongo, you may need to make changes to it manually to reflect this. You can see this in the example above where we had to update the router manually after an operation failed.</source>
          <target state="translated">由于Meteor对乐观UI的自动处理，如果方法意外失败，那么乐观更改将回滚，并且Minimongo数据库最终将处于一致状态。如果直接从Minimongo进行渲染，则用户将看到一致的内容，即使这当然不是他们所期望的。在某些情况下，当您处于不在Minimongo的状态时，可能需要对其进行手动更改以反映这一点。您可以在上面的示例中看到这一点，在该示例中，操作失败后我们必须手动更新路由器。</target>
        </trans-unit>
        <trans-unit id="74debe8633cb830359b907ee833bcb0786e3cdda" translate="yes" xml:space="preserve">
          <source>Thanks to modules, any load-order dependency you might imagine can be resolved by adding an &lt;code&gt;import&lt;/code&gt; statement. So if &lt;code&gt;a.js&lt;/code&gt; loads before &lt;code&gt;b.js&lt;/code&gt; because of their file names, but &lt;code&gt;a.js&lt;/code&gt; needs something defined by &lt;code&gt;b.js&lt;/code&gt;, then &lt;code&gt;a.js&lt;/code&gt; can simply &lt;code&gt;import&lt;/code&gt; that value from &lt;code&gt;b.js&lt;/code&gt;:</source>
          <target state="translated">多亏了模块，您可以想象的任何加载顺序依赖性都可以通过添加 &lt;code&gt;import&lt;/code&gt; 语句来解决。因此，如果 &lt;code&gt;a.js&lt;/code&gt; 由于文件名而在 &lt;code&gt;b.js&lt;/code&gt; 之前加载，但是 &lt;code&gt;a.js&lt;/code&gt; 需要b.js定义的 &lt;code&gt;b.js&lt;/code&gt; ，则 &lt;code&gt;a.js&lt;/code&gt; 可以简单地从 &lt;code&gt;b.js&lt;/code&gt; &lt;code&gt;import&lt;/code&gt; 该值：</target>
        </trans-unit>
        <trans-unit id="34a8b6200074d30b9b2b9a0aee58401c6db6f443" translate="yes" xml:space="preserve">
          <source>Thanks to the guarantees provided by DDP and Meteor&amp;rsquo;s accounts system, the above publication can be confident that it will only ever publish private lists to the user that they belong to. Note that the publication will re-run if the user logs out (or back in again), which means that the published set of private lists will change as the active user changes.</source>
          <target state="translated">由于DDP和Meteor的帐户系统提供了保证，因此上述出版物可以确信它只会将私有列表发布给它们所属的用户。请注意，如果用户注销（或再次登录），则发布将重新运行，这意味着已发布的私有列表集将随着活动用户的更改而更改。</target>
        </trans-unit>
        <trans-unit id="37bc1757280417ab2e024852d14ee4b639696c3d" translate="yes" xml:space="preserve">
          <source>The &amp;ldquo;current View&amp;rdquo; is kept in &lt;a href=&quot;#Blaze-currentView&quot;&gt;&lt;code&gt;Blaze.currentView&lt;/code&gt;&lt;/a&gt; and is set during View rendering, callbacks, autoruns, and template event handlers. It affects calls such as &lt;a href=&quot;templates#Template-currentData&quot;&gt;&lt;code&gt;Template.currentData()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&amp;ldquo;当前视图&amp;rdquo;保留在&lt;a href=&quot;#Blaze-currentView&quot;&gt; &lt;code&gt;Blaze.currentView&lt;/code&gt; 中,&lt;/a&gt;并在视图渲染，回调，自动运行和模板事件处理程序期间进行设置。它会影响诸如&lt;a href=&quot;templates#Template-currentData&quot;&gt; &lt;code&gt;Template.currentData()&lt;/code&gt; 之类的&lt;/a&gt;调用。</target>
        </trans-unit>
        <trans-unit id="edc291428b27f7f9fba068db1d70b436d6781473" translate="yes" xml:space="preserve">
          <source>The &amp;ldquo;current view&amp;rdquo; is used by &lt;a href=&quot;templates#Template-currentData&quot;&gt;&lt;code&gt;Template.currentData()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;templates#Template-instance&quot;&gt;&lt;code&gt;Template.instance()&lt;/code&gt;&lt;/a&gt; to determine the contextually relevant data context and template instance.</source>
          <target state="translated">&lt;a href=&quot;templates#Template-currentData&quot;&gt; &lt;code&gt;Template.currentData()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;templates#Template-instance&quot;&gt; &lt;code&gt;Template.instance()&lt;/code&gt; &lt;/a&gt;使用&amp;ldquo;当前视图&amp;rdquo; 来确定上下文相关的数据上下文和模板实例。</target>
        </trans-unit>
        <trans-unit id="498a8e5e30464099d72aae3e631f20d81add1e57" translate="yes" xml:space="preserve">
          <source>The &amp;lsquo;meteor test&amp;rsquo; command</source>
          <target state="translated">&amp;ldquo;流星测试&amp;rdquo;命令</target>
        </trans-unit>
        <trans-unit id="1f077f0cd8f98b1c7830ad41c879a0bebb4706a8" translate="yes" xml:space="preserve">
          <source>The (extended) &lt;a href=&quot;http://www.semver.org&quot;&gt;semver&lt;/a&gt; version for your package. Additionally, Meteor allows a wrap number: a positive integer that follows the version number. If you are porting another package that uses semver versioning, you may want to use the original version, postfixed with &lt;code&gt;_wrapnumber&lt;/code&gt;. For example, &lt;code&gt;1.2.3_1&lt;/code&gt; or &lt;code&gt;2.4.5-rc1_4&lt;/code&gt;. Wrap numbers sort after the original numbers: &lt;code&gt;1.2.3&lt;/code&gt; &amp;lt; &lt;code&gt;1.2.3_1&lt;/code&gt; &amp;lt; &lt;code&gt;1.2.3_2&lt;/code&gt; &amp;lt; &lt;code&gt;1.2.4-rc.0&lt;/code&gt;. If no version is specified, this field defaults to &lt;code&gt;0.0.0&lt;/code&gt;. If you want to publish your package to the package server, you must specify a version.</source>
          <target state="translated">软件包的（扩展）&lt;a href=&quot;http://www.semver.org&quot;&gt;semver&lt;/a&gt;版本。此外，Meteor允许使用换行号：版本号后的正整数。如果要移植另一个使用semver版本控制的软件包，则可能要使用后缀 &lt;code&gt;_wrapnumber&lt;/code&gt; 的原始版本。例如 &lt;code&gt;1.2.3_1&lt;/code&gt; 或 &lt;code&gt;2.4.5-rc1_4&lt;/code&gt; 。换行编号按原始编号排序： &lt;code&gt;1.2.3&lt;/code&gt; &amp;lt; &lt;code&gt;1.2.3_1&lt;/code&gt; &amp;lt; &lt;code&gt;1.2.3_2&lt;/code&gt; &amp;lt; &lt;code&gt;1.2.4-rc.0&lt;/code&gt; 。如果未指定版本，则此字段默认为 &lt;code&gt;0.0.0&lt;/code&gt; 。如果要将软件包发布到软件包服务器，则必须指定版本。</target>
        </trans-unit>
        <trans-unit id="720f7a15f8ef4cd75bf1890491a0834595f0f4cc" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#Template-Declarations&quot;&gt;template object&lt;/a&gt; representing your &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; tag.</source>
          <target state="translated">表示您的 &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; 标签的&lt;a href=&quot;#Template-Declarations&quot;&gt;模板对象&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="37f50de62554904500225788d9479d70a34287db" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#Template-instances&quot;&gt;template instance&lt;/a&gt; corresponding to the current template helper, event handler, callback, or autorun. If there isn't one, &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">与当前模板助手，事件处理程序，回调或自动运行相对应的&lt;a href=&quot;#Template-instances&quot;&gt;模板实例&lt;/a&gt;。如果没有，则为 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6b9502dc40a988bfb0e7a3108ed20e41444d9ba8" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;blaze#Blaze-View&quot;&gt;View&lt;/a&gt; object for this invocation of the template.</source>
          <target state="translated">该&lt;a href=&quot;blaze#Blaze-View&quot;&gt;视图&lt;/a&gt;对象此次调用模板。</target>
        </trans-unit>
        <trans-unit id="e1f87f80f657b3c027fa8cbb0c85ddd64f63a257" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;build-tool#what-it-does&quot;&gt;Meteor build tool&lt;/a&gt; and the &lt;code&gt;meteor test&lt;/code&gt; command ignore any files located in any &lt;code&gt;tests/&lt;/code&gt; directory. This allows you to put tests in this directory that you can run using a test runner outside of Meteor&amp;rsquo;s built-in test tools and still not have those files loaded in your application. See Meteor&amp;rsquo;s &lt;a href=&quot;structure#load-order&quot;&gt;default file load order&lt;/a&gt; rules.</source>
          <target state="translated">该&lt;a href=&quot;build-tool#what-it-does&quot;&gt;流星构建工具&lt;/a&gt;和 &lt;code&gt;meteor test&lt;/code&gt; 命令忽略位于任何任何文件 &lt;code&gt;tests/&lt;/code&gt; 目录下。这使您可以将测试放在该目录中，您可以使用Meteor内置测试工具之外的测试运行程序运行测试，而仍未在应用程序中加载这些文件。请参阅流星的&lt;a href=&quot;structure#load-order&quot;&gt;默认文件加载顺序&lt;/a&gt;规则。</target>
        </trans-unit>
        <trans-unit id="1a450a62817802ec8fe740cfbc4a152496bfb81c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://en.wikipedia.org/wiki/HTTP_method&quot;&gt;HTTP method&lt;/a&gt; to use, such as &quot;&lt;code&gt;GET&lt;/code&gt;&quot;, &quot;&lt;code&gt;POST&lt;/code&gt;&quot;, or &quot;&lt;code&gt;HEAD&lt;/code&gt;&quot;.</source>
          <target state="translated">要使用的&lt;a href=&quot;http://en.wikipedia.org/wiki/HTTP_method&quot;&gt;HTTP方法&lt;/a&gt;，例如&amp;ldquo; &lt;code&gt;GET&lt;/code&gt; &amp;rdquo;，&amp;ldquo; &lt;code&gt;POST&lt;/code&gt; &amp;rdquo;或&amp;ldquo; &lt;code&gt;HEAD&lt;/code&gt; &amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="0a53aebbf6d34463a81d54cae71dfb3f69c070c0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://atmospherejs.com/hwillson/stub-collections&quot;&gt;&lt;code&gt;hwillson:stub-collections&lt;/code&gt;&lt;/a&gt; package we mentioned &lt;a href=&quot;#mocking-the-database&quot;&gt;above&lt;/a&gt;.</source>
          <target state="translated">我们&lt;a href=&quot;#mocking-the-database&quot;&gt;上面&lt;/a&gt;提到的&lt;a href=&quot;https://atmospherejs.com/hwillson/stub-collections&quot;&gt; &lt;code&gt;hwillson:stub-collections&lt;/code&gt; &lt;/a&gt;软件包。</target>
        </trans-unit>
        <trans-unit id="534b26dee33fb34fe43c5f25213cbfa079600bb3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://atmospherejs.com/meteor/apollo&quot;&gt;&lt;code&gt;apollo&lt;/code&gt; Atmosphere package&lt;/a&gt; for Meteor provides integration with &lt;a href=&quot;http://www.apollodata.com/&quot;&gt;Apollo&lt;/a&gt; (and thus GraphQL).</source>
          <target state="translated">用于Meteor 的&lt;a href=&quot;https://atmospherejs.com/meteor/apollo&quot;&gt; &lt;code&gt;apollo&lt;/code&gt; Atmosphere软件包&lt;/a&gt;提供了与&lt;a href=&quot;http://www.apollodata.com/&quot;&gt;Apollo&lt;/a&gt;（以及GraphQL）的集成。</target>
        </trans-unit>
        <trans-unit id="5d407bf8eea58896a623c449771f8cdd09fa8ad2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://atmospherejs.com/meteor/reactive-dict&quot;&gt;&lt;code&gt;reactive-dict&lt;/code&gt;&lt;/a&gt; package lets you define a simple reactive key-value dictionary. It&amp;rsquo;s a convenient way to attach internal state to a component. We create the &lt;code&gt;state&lt;/code&gt; dictionary in the &lt;code&gt;onCreated&lt;/code&gt; callback, and attach it to the template instance:</source>
          <target state="translated">该&lt;a href=&quot;https://atmospherejs.com/meteor/reactive-dict&quot;&gt; &lt;code&gt;reactive-dict&lt;/code&gt; &lt;/a&gt;包可以让你定义一个简单的反应键值字典。这是将内部状态附加到组件的便捷方法。我们在 &lt;code&gt;onCreated&lt;/code&gt; 回调中创建 &lt;code&gt;state&lt;/code&gt; 字典，并将其附加到模板实例：</target>
        </trans-unit>
        <trans-unit id="a2991e0bd23b6c144c6722ea0d60f802e82e6550" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://atmospherejs.com/velocity/meteor-stubs&quot;&gt;&lt;code&gt;velocity:meteor-stubs&lt;/code&gt;&lt;/a&gt; package, which creates simple stubs for most Meteor core objects.</source>
          <target state="translated">的&lt;a href=&quot;https://atmospherejs.com/velocity/meteor-stubs&quot;&gt; &lt;code&gt;velocity:meteor-stubs&lt;/code&gt; &lt;/a&gt;包，它创建用于最流星核心对象简单存根。</target>
        </trans-unit>
        <trans-unit id="2daed1b94fd1329afc419eba63cb003c11445519" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://docs.meteor.com&quot;&gt;Meteor docs&lt;/a&gt; is the best place to find the core API documentation of the platform.</source>
          <target state="translated">该&lt;a href=&quot;https://docs.meteor.com&quot;&gt;流星文档&lt;/a&gt;是找到平台的核心API文档的最佳场所。</target>
        </trans-unit>
        <trans-unit id="58f719fe6d54eb82f96f7e043931f576ef99fe49" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://github.com/arunoda/meteor-up/tree/mupx&quot;&gt;&lt;code&gt;mupx&lt;/code&gt;&lt;/a&gt; branch (best for pre-Meteor 1.4)</source>
          <target state="translated">该&lt;a href=&quot;https://github.com/arunoda/meteor-up/tree/mupx&quot;&gt; &lt;code&gt;mupx&lt;/code&gt; &lt;/a&gt;分支（最佳预流星1.4）</target>
        </trans-unit>
        <trans-unit id="119e0391fd90d30f59076159266e695da881da09" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://github.com/kadirahq/meteor-up&quot;&gt;&lt;code&gt;kadirahq/mup&lt;/code&gt;&lt;/a&gt; fork &lt;em&gt;(best for Meteor 1.4 or higher)&lt;/em&gt;</source>
          <target state="translated">所述&lt;a href=&quot;https://github.com/kadirahq/meteor-up&quot;&gt; &lt;code&gt;kadirahq/mup&lt;/code&gt; &lt;/a&gt;叉&lt;em&gt;（最好为1.4流星或更高）&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c54f06d8d72feecced755a2d90987a690cc30863" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://github.com/meteor/docs/blob/master/long-form/tracker-manual.md#the-flush-cycle&quot;&gt;Tracker manual&lt;/a&gt; describes the motivation for the flush cycle and the guarantees made by &lt;code&gt;Tracker.flush&lt;/code&gt; and &lt;code&gt;Tracker.afterFlush&lt;/code&gt;.</source>
          <target state="translated">该&lt;a href=&quot;https://github.com/meteor/docs/blob/master/long-form/tracker-manual.md#the-flush-cycle&quot;&gt;跟踪器手册&lt;/a&gt;描述了用于在冲洗循环的动力和由作出的保证 &lt;code&gt;Tracker.flush&lt;/code&gt; 和 &lt;code&gt;Tracker.afterFlush&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9544209b8e2b457db7d1752161262706c02f8312" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;#let&lt;/code&gt; tag creates a new alias variable for a given expression. While it doesn&amp;rsquo;t change the data context, it allows to refer to an expression (helper, data context, another variable) with a short-hand within the template:</source>
          <target state="translated">该 &lt;code&gt;#let&lt;/code&gt; 标签创建为特定表达一个新的别名变量。尽管它不会更改数据上下文，但它允许在模板内以简写形式引用表达式（帮助程序，数据上下文，另一个变量）：</target>
        </trans-unit>
        <trans-unit id="1199bf2ca9bb11d0c1723650cd941df651e77b90" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;Blaze template=&quot;itemsList&quot; items={items} /&amp;gt;&lt;/code&gt; line is the same as if you had written &lt;code&gt;{{&amp;gt; itemsList items=items}}&lt;/code&gt; inside of a Blaze template. For other options and further information, see the package&amp;rsquo;s &lt;a href=&quot;https://github.com/gadicc/meteor-blaze-react-component&quot;&gt;project page&lt;/a&gt;.</source>
          <target state="translated">所述 &lt;code&gt;&amp;lt;Blaze template=&quot;itemsList&quot; items={items} /&amp;gt;&lt;/code&gt; 线是相同的，如果你写 &lt;code&gt;{{&amp;gt; itemsList items=items}}&lt;/code&gt; 闪耀模板的内部。有关其他选项和更多信息，请参见软件包的&lt;a href=&quot;https://github.com/gadicc/meteor-blaze-react-component&quot;&gt;项目页面&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9f1f18f57a33f5eef39686bbd60f04a3b2695e7e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;host&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;port&amp;gt;&lt;/code&gt; should be the address of the server you want your app to connect to.</source>
          <target state="translated">在 &lt;code&gt;&amp;lt;host&amp;gt;&lt;/code&gt; 和 &lt;code&gt;&amp;lt;port&amp;gt;&lt;/code&gt; 应该是你希望你的应用程序连接到服务器的地址。</target>
        </trans-unit>
        <trans-unit id="a358091c0c7f33df251b91e5f3e17c14b17d6fdc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.then()&lt;/code&gt; method of the &lt;code&gt;Promise&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Promise&lt;/code&gt; 的 &lt;code&gt;.then()&lt;/code&gt; 方法</target>
        </trans-unit>
        <trans-unit id="168a5c0ab7b1c62cceb14ec134b59285f9a47039" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AccountsClient&lt;/code&gt; and &lt;code&gt;AccountsServer&lt;/code&gt; classes share a common superclass, &lt;code&gt;AccountsCommon&lt;/code&gt;. Methods defined on &lt;code&gt;AccountsCommon.prototype&lt;/code&gt; will be available on both the client and the server, via the predefined &lt;code&gt;Accounts&lt;/code&gt; object (most common) or any custom &lt;code&gt;accountsClientOrServer&lt;/code&gt; object created using the &lt;code&gt;AccountsClient&lt;/code&gt; or &lt;code&gt;AccountsServer&lt;/code&gt; constructors (less common).</source>
          <target state="translated">该 &lt;code&gt;AccountsClient&lt;/code&gt; 和 &lt;code&gt;AccountsServer&lt;/code&gt; 类共享一个共同的超类， &lt;code&gt;AccountsCommon&lt;/code&gt; 。上定义的方法 &lt;code&gt;AccountsCommon.prototype&lt;/code&gt; 将可用在客户端和服务器两者上，经由预定义的 &lt;code&gt;Accounts&lt;/code&gt; 对象（最常见的），或任何自定义 &lt;code&gt;accountsClientOrServer&lt;/code&gt; 使用创建的对象 &lt;code&gt;AccountsClient&lt;/code&gt; 或 &lt;code&gt;AccountsServer&lt;/code&gt; 构造（较少）。</target>
        </trans-unit>
        <trans-unit id="53d896014c69bd5f40201df6b83c6bce629451f0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;App_rootRedirector&lt;/code&gt; component is rendered inside the &lt;code&gt;App_body&lt;/code&gt; layout, which takes care of subscribing to the set of lists the user knows about &lt;em&gt;before&lt;/em&gt; rendering its sub-component, and we are guaranteed there is at least one such list. This means that if the &lt;code&gt;App_rootRedirector&lt;/code&gt; ends up being created, there&amp;rsquo;ll be a list loaded, so we can simply do:</source>
          <target state="translated">该 &lt;code&gt;App_rootRedirector&lt;/code&gt; 组件呈现里面 &lt;code&gt;App_body&lt;/code&gt; 布局，这需要订阅的设置列表中的用户知道的护理&lt;em&gt;之前&lt;/em&gt;渲染它的子组件，我们都保证至少有一个这样的名单。这意味着，如果最终创建了 &lt;code&gt;App_rootRedirector&lt;/code&gt; ，则会加载一个列表，因此我们可以简单地执行以下操作：</target>
        </trans-unit>
        <trans-unit id="10a4d76dba5aaaeec68ecfe67b4f107ae4fd4de9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Lists_show_page&lt;/code&gt; template renders &lt;em&gt;without&lt;/em&gt; arguments&amp;mdash;it is this template&amp;rsquo;s responsibility to collect information from the current route, and then pass this information down into its child templates. Correspondingly the &lt;code&gt;Lists_show_page&lt;/code&gt; template is very tied to the route that rendered it, and so it needs to be a smart component. See the article on &lt;a href=&quot;ui-ux&quot;&gt;UI/UX&lt;/a&gt; for more about smart and reusable components.</source>
          <target state="translated">该 &lt;code&gt;Lists_show_page&lt;/code&gt; 模板呈现&lt;em&gt;无&lt;/em&gt;参数，它是这个模板的责任，从目前的路径收集信息，然后将此信息传递分解成其子模板。相应地， &lt;code&gt;Lists_show_page&lt;/code&gt; 模板与呈现它的路线非常相关，因此它必须是一个智能组件。有关智能和可重用组件的更多信息，请参见&lt;a href=&quot;ui-ux&quot;&gt;UI / UX&lt;/a&gt;上的文章。</target>
        </trans-unit>
        <trans-unit id="4747eae57c26b0d41ece7eda66ca67d658307501" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;METEOR_CORDOVA_COMPAT_VERSION_*&lt;/code&gt; env vars must be present &lt;strong&gt;while building&lt;/strong&gt; your app through &lt;code&gt;run&lt;/code&gt;, &lt;code&gt;build&lt;/code&gt; or &lt;code&gt;deploy&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;METEOR_CORDOVA_COMPAT_VERSION_*&lt;/code&gt; ENV瓦尔必须存在&lt;strong&gt;，同时建立&lt;/strong&gt;通过你的应用程序 &lt;code&gt;run&lt;/code&gt; ， &lt;code&gt;build&lt;/code&gt; 和 &lt;code&gt;deploy&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0dc9bf0e45b3728817f53fc34f51837a4a4698da" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MyLinter&lt;/code&gt; class should now implement the &lt;code&gt;processFilesForPackage&lt;/code&gt; method. The method should accept two arguments: a list of files and an options object.</source>
          <target state="translated">该 &lt;code&gt;MyLinter&lt;/code&gt; 类现在应该实现 &lt;code&gt;processFilesForPackage&lt;/code&gt; 方法。该方法应接受两个参数：文件列表和选项对象。</target>
        </trans-unit>
        <trans-unit id="52a56cc43a7528c5c6111b04f0f4d05397745f7f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ValidationError&lt;/code&gt;</source>
          <target state="translated">该 &lt;code&gt;ValidationError&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="28f41a1cb4d3fde6c4ca3b32167b118bb5ec716d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;accounts-base&lt;/code&gt; package exports two constructors, called &lt;code&gt;AccountsClient&lt;/code&gt; and &lt;code&gt;AccountsServer&lt;/code&gt;, which are used to create the &lt;code&gt;Accounts&lt;/code&gt; object that is available on the client and the server, respectively.</source>
          <target state="translated">基于 &lt;code&gt;accounts-base&lt;/code&gt; 程序包导出两个构造函数，分别称为 &lt;code&gt;AccountsClient&lt;/code&gt; 和 &lt;code&gt;AccountsServer&lt;/code&gt; ，这两个构造函数用于创建分别在客户端和服务器上可用的 &lt;code&gt;Accounts&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="5338034bb1c6ea18b1d533a77f342fbc45cde4c9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;accounts-password&lt;/code&gt; package contains a full system for password-based authentication. In addition to the basic username and password-based sign-in process, it also supports email-based sign-in including address verification and password recovery emails.</source>
          <target state="translated">该 &lt;code&gt;accounts-password&lt;/code&gt; 包中包含基于密码的验证一个完整的系统。除了基本的基于用户名和密码的登录过程外，它还支持基于电子邮件的登录，包括地址验证和密码恢复电子邮件。</target>
        </trans-unit>
        <trans-unit id="873e5e9c45468e38dffc64d1d31b2927218a4c2a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;appcache&lt;/code&gt; package stores the static parts of a Meteor application (the client side Javascript, HTML, CSS, and images) in the browser&amp;rsquo;s &lt;a href=&quot;https://en.wikipedia.org/wiki/AppCache&quot;&gt;application cache&lt;/a&gt;. To enable caching simply add the &lt;code&gt;appcache&lt;/code&gt; package to your project.</source>
          <target state="translated">该 &lt;code&gt;appcache&lt;/code&gt; 包存储在浏览器的一个流星应用程序（客户端的JavaScript，HTML，CSS和图像）的静态部分&lt;a href=&quot;https://en.wikipedia.org/wiki/AppCache&quot;&gt;应用程序缓存&lt;/a&gt;。要启用缓存，只需将 &lt;code&gt;appcache&lt;/code&gt; 包添加到您的项目中。</target>
        </trans-unit>
        <trans-unit id="620306c025cce35a68c4384e5e838f125d384040" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;bundle-visualizer&lt;/code&gt; package is an analysis tool which provides a visual representation within the web browser showing what is included in the initial client bundle. The initial client bundle is the primary package of code downloaded and executed by the browser to run a Meteor application and includes packages which have been added via &lt;code&gt;meteor add &amp;lt;package&amp;gt;&lt;/code&gt; or Node modules included in the &lt;code&gt;node_modules&lt;/code&gt; directory and used in an application.</source>
          <target state="translated">该 &lt;code&gt;bundle-visualizer&lt;/code&gt; 包是一种分析工具，它提供表示什么被包括在初始客户端束中的web浏览器内的视觉表示。初始客户端捆绑包是由浏览器下载并执行以运行Meteor应用程序的主要代码包，其中包括已通过 &lt;code&gt;meteor add &amp;lt;package&amp;gt;&lt;/code&gt; 或 &lt;code&gt;node_modules&lt;/code&gt; 目录中包含的Node模块添加并在应用程序中使用的包。</target>
        </trans-unit>
        <trans-unit id="649991da5abd40f8b85d1656bc4a777e7eff8a60" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;check&lt;/code&gt; package includes pattern checking functions useful for checking the types and structure of variables and an &lt;a href=&quot;#matchpatterns&quot;&gt;extensible library of patterns&lt;/a&gt; to specify which types you are expecting.</source>
          <target state="translated">该 &lt;code&gt;check&lt;/code&gt; 包包括用于检查变量的类型和结构的模式检查功能，以及&lt;a href=&quot;#matchpatterns&quot;&gt;可扩展的模式库，&lt;/a&gt;用于指定所需的类型。</target>
        </trans-unit>
        <trans-unit id="c20025be87cd004083251793aaf578fbf14abd94" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;chimp-test&lt;/code&gt; command will run all of the tests &lt;em&gt;once only&lt;/em&gt; and is good for testing that our suite passes, either as a manual step, or as part of a &lt;a href=&quot;#ci&quot;&gt;continuous integration&lt;/a&gt; process.</source>
          <target state="translated">在 &lt;code&gt;chimp-test&lt;/code&gt; 命令将运行所有测试的&lt;em&gt;只有一次&lt;/em&gt;，也是很好的测试，我们的套件的推移，无论是作为一个手动工序，或作为一个组成部分&lt;a href=&quot;#ci&quot;&gt;不断融合&lt;/a&gt;的过程。</target>
        </trans-unit>
        <trans-unit id="0c414fba55f12b2f37dd8193c89aaf75bd858a72" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;chimp-watch&lt;/code&gt; command will then run the test in a browser, and continue to re-run it as we change the test or the application. (Note that the test assumes we are running the app on port &lt;code&gt;3000&lt;/code&gt;).</source>
          <target state="translated">然后， &lt;code&gt;chimp-watch&lt;/code&gt; 命令将在浏览器中运行测试，并在我们更改测试或应用程序时继续重新运行它。（请注意，该测试假设我们在端口 &lt;code&gt;3000&lt;/code&gt; 上运行该应用程序）。</target>
        </trans-unit>
        <trans-unit id="3d9c3a6c6c53efb4fbaf6614bb10cec10d9acea8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;component&lt;/code&gt; argument is the React component to include, which should be passed in with a helper.</source>
          <target state="translated">的 &lt;code&gt;component&lt;/code&gt; 参数是阵营组件包括，它应与辅助传递英寸</target>
        </trans-unit>
        <trans-unit id="b423c736a072ef8990b145a544ae078062f0d84f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;connection&lt;/code&gt; object the request came in on. See &lt;a href=&quot;#meteor_onconnection&quot;&gt;&lt;code&gt;Meteor.onConnection&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">请求进入的 &lt;code&gt;connection&lt;/code&gt; 对象。有关详细信息，请参见&lt;a href=&quot;#meteor_onconnection&quot;&gt; &lt;code&gt;Meteor.onConnection&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ec9e7db73c437f025e26d37ecb522f73570bee85" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;cordovaCompatibilityVersions.*&lt;/code&gt; attributes can be read from the manifest file with &lt;code&gt;cordova-plugin-file&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;cordovaCompatibilityVersions.*&lt;/code&gt; 属性可以从清单文件中读取 &lt;code&gt;cordova-plugin-file&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="47e3f54f4885264c768a38124d100596fda29c7f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;dynamic-import&lt;/code&gt; package provides an implementation of &lt;code&gt;Module.prototype.dynamicImport&lt;/code&gt;, an extension of the module runtime which powers the &lt;a href=&quot;https://github.com/tc39/proposal-dynamic-import&quot;&gt;dynamic &lt;code&gt;import(...)&lt;/code&gt;&lt;/a&gt; statement, an up-and-coming (currently stage 3 out of 4) addition to the ECMAScript standard.</source>
          <target state="translated">该 &lt;code&gt;dynamic-import&lt;/code&gt; 包提供的实现 &lt;code&gt;Module.prototype.dynamicImport&lt;/code&gt; ，该模块运行时间的延长，其权力&lt;a href=&quot;https://github.com/tc39/proposal-dynamic-import&quot;&gt;动态 &lt;code&gt;import(...)&lt;/code&gt; &lt;/a&gt;语句，一起来和未来的（目前3期开出4）除ECMAScript标准。</target>
        </trans-unit>
        <trans-unit id="7dff7e7da16368cdf28699bd824354b0c058dc04" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ecmascript&lt;/code&gt; package (which is installed into all new apps and packages by default, but can be removed), allows support for many ES2015 features. We recommend using it. You can read more about it in the &lt;a href=&quot;code-style#ecmascript&quot;&gt;Code Style&lt;/a&gt; article.</source>
          <target state="translated">在 &lt;code&gt;ecmascript&lt;/code&gt; 包（其安装到默认情况下所有新应用及套餐，但可以去掉），允许许多ES2015功能的支持。我们建议使用它。您可以在&amp;ldquo; &lt;a href=&quot;code-style#ecmascript&quot;&gt;代码样式&amp;rdquo;&lt;/a&gt;文章中阅读有关它的更多信息。</target>
        </trans-unit>
        <trans-unit id="dd3dd0ace8907b5e0479ac6313b096f0e060ae8b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ecmascript&lt;/code&gt; package is included in all new apps and packages by default, and compiles all files with the &lt;code&gt;.js&lt;/code&gt; file extension automatically. See the &lt;a href=&quot;https://docs.meteor.com/packages/ecmascript.html#Supported-ES2015-Features&quot;&gt;list of all ES2015 features supported by the ecmascript package&lt;/a&gt;.</source>
          <target state="translated">在 &lt;code&gt;ecmascript&lt;/code&gt; 包包含在默认情况下，所有新应用及封装，并编译与所有文件 &lt;code&gt;.js&lt;/code&gt; 自动文件扩展名。请参阅&lt;a href=&quot;https://docs.meteor.com/packages/ecmascript.html#Supported-ES2015-Features&quot;&gt;ecmascript软件包支持的所有ES2015功能列表&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="17cf20872264d949bdcef3d3c2033fc5760145bc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ecmascript&lt;/code&gt; package registers a compiler plugin that transpiles ECMAScript 2015+ to ECMAScript 5 (standard JS) in all &lt;code&gt;.js&lt;/code&gt; files. By default, this package is pre-installed for all new apps and packages.</source>
          <target state="translated">所述 &lt;code&gt;ecmascript&lt;/code&gt; 包寄存器编译器插件，transpiles的ECMAScript 2015+对ECMAScript 5（标准JS）在所有 &lt;code&gt;.js&lt;/code&gt; 文件。默认情况下，所有新的应用程序和软件包都已预安装此软件包。</target>
        </trans-unit>
        <trans-unit id="3a8b3c8262fc2252136036f013c160d56dd5d188" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ecmascript&lt;/code&gt; package uses &lt;a href=&quot;http://babeljs.io/&quot;&gt;Babel&lt;/a&gt; to compile ES2015 syntax to ES5 syntax. Many but not all ES2015 features can be simulated by Babel, and &lt;code&gt;ecmascript&lt;/code&gt; enables most of the features supported by Babel.</source>
          <target state="translated">在 &lt;code&gt;ecmascript&lt;/code&gt; 包使用&lt;a href=&quot;http://babeljs.io/&quot;&gt;通天&lt;/a&gt;编译ES2015语法ES5语法。Babel可以模拟许多但不是全部的ES2015功能，而 &lt;code&gt;ecmascript&lt;/code&gt; 支持Babel支持的大多数功能。</target>
        </trans-unit>
        <trans-unit id="5709c3ce0d4f5eef2bb3e6d0197894dd845160e1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;email&lt;/code&gt; package allows sending email from a Meteor app. To use it, add the package to your project by running in your terminal:</source>
          <target state="translated">该 &lt;code&gt;email&lt;/code&gt; 包允许从一个流星的应用程序发送电子邮件。要使用它，请通过在终端中运行将包添加到项目中：</target>
        </trans-unit>
        <trans-unit id="75bc434fedd5db364cee84da82e3b7ea6a7fd722" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;equals&lt;/code&gt; method should define an &lt;a href=&quot;http://en.wikipedia.org/wiki/Equivalence_relation&quot;&gt;equivalence relation&lt;/a&gt;. It should have the following properties:</source>
          <target state="translated">在 &lt;code&gt;equals&lt;/code&gt; 方法应该定义一个&lt;a href=&quot;http://en.wikipedia.org/wiki/Equivalence_relation&quot;&gt;等价关系&lt;/a&gt;。它应具有以下属性：</target>
        </trans-unit>
        <trans-unit id="c74205a7f7f7a0987b134f5ba577095d5ea14713" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;error.error&lt;/code&gt; field is the first argument to the &lt;code&gt;Meteor.Error&lt;/code&gt; constructor, and we use it to uniquely name and namespace all the errors we use in the application. We then define the English text of those errors in &lt;code&gt;i18n/en.i18n.json&lt;/code&gt;:</source>
          <target state="translated">该 &lt;code&gt;error.error&lt;/code&gt; 场是第一个参数 &lt;code&gt;Meteor.Error&lt;/code&gt; 构造函数，我们用它来唯一名称和命名空间所有我们在应用程序中使用错误。然后，我们在 &lt;code&gt;i18n/en.i18n.json&lt;/code&gt; 中定义这些错误的英文文本：</target>
        </trans-unit>
        <trans-unit id="ca086329fccf9cd22eb4788c377fe3c33f7a9dbe" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;id&lt;/code&gt; of the subscription this handle is for. When you run &lt;code&gt;Meteor.subscribe&lt;/code&gt; inside of &lt;code&gt;Tracker.autorun&lt;/code&gt;, the handles you get will always have the same &lt;code&gt;subscriptionId&lt;/code&gt; field. You can use this to deduplicate subscription handles if you are storing them in some data structure.</source>
          <target state="translated">此句柄用于的订阅的 &lt;code&gt;id&lt;/code&gt; 。当您运行 &lt;code&gt;Meteor.subscribe&lt;/code&gt; 内 &lt;code&gt;Tracker.autorun&lt;/code&gt; ，你把手将始终具有相同的 &lt;code&gt;subscriptionId&lt;/code&gt; 领域。如果您将订阅句柄存储在某些数据结构中，则可以使用它来消除重复项。</target>
        </trans-unit>
        <trans-unit id="5533700215f55e478dcf036532d058d9ba5928f0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;import(...)&lt;/code&gt; statement returns a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Using_promises&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; which is resolved with the &lt;code&gt;exports&lt;/code&gt; of the module when it has been successfully fetched from the server and is ready to be used.</source>
          <target state="translated">在 &lt;code&gt;import(...)&lt;/code&gt; 语句返回一个&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Using_promises&quot;&gt; &lt;code&gt;Promise&lt;/code&gt; &lt;/a&gt;，其与上述已解决 &lt;code&gt;exports&lt;/code&gt; 模块时，它已经从服务器获取成功，并准备使用。</target>
        </trans-unit>
        <trans-unit id="f69950a9d9335d0328166b365b89658c24724adb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;import(...)&lt;/code&gt;&lt;code&gt;Promise&lt;/code&gt; is resolved with the &lt;code&gt;exports&lt;/code&gt; of the module. If it&amp;rsquo;s necessary to use the &amp;ldquo;default&amp;rdquo; export from a module, it will be available on the &lt;code&gt;default&lt;/code&gt; property of the resulting object. In the above examples, this means it will be available as &lt;code&gt;tool.default&lt;/code&gt;. It can be helpful to use parameter de-structuring to provide additional clarity:</source>
          <target state="translated">在 &lt;code&gt;import(...)&lt;/code&gt; &lt;code&gt;Promise&lt;/code&gt; 与上述已解决 &lt;code&gt;exports&lt;/code&gt; 模块。如果有必要使用模块的&amp;ldquo;默认&amp;rdquo;导出，则将在结果对象的 &lt;code&gt;default&lt;/code&gt; 属性上使用该导出。在上述示例中，这意味着它将作为 &lt;code&gt;tool.default&lt;/code&gt; 可用。使用参数解构来提高清晰度可能会有所帮助：</target>
        </trans-unit>
        <trans-unit id="49b9d90d524e7531884ed5070717dcfe9ed8dedb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;jquery&lt;/code&gt; package adds the jQuery library to the client JavaScript bundle. It has no effect on the server.</source>
          <target state="translated">在 &lt;code&gt;jquery&lt;/code&gt; 封装增加了jQuery库到客户端的JavaScript包。它对服务器没有影响。</target>
        </trans-unit>
        <trans-unit id="56ef08d8ffe8d750b112d8e3cda83e2c49782b88" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;listArgs&lt;/code&gt; helper fetches the data that we&amp;rsquo;ve subscribed to above:</source>
          <target state="translated">该 &lt;code&gt;listArgs&lt;/code&gt; 助手取，我们已经预订了上面的数据：</target>
        </trans-unit>
        <trans-unit id="d30242fb7d69b0d01aec1c035c65e0c64fb15cfe" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;meteor node&lt;/code&gt; command calls the &lt;a href=&quot;https://nodejs.org&quot;&gt;&lt;code&gt;node&lt;/code&gt;&lt;/a&gt; version bundled with Meteor itself.</source>
          <target state="translated">该 &lt;code&gt;meteor node&lt;/code&gt; 命令调用&lt;a href=&quot;https://nodejs.org&quot;&gt; &lt;code&gt;node&lt;/code&gt; &lt;/a&gt;与流星本身捆绑版本。</target>
        </trans-unit>
        <trans-unit id="67aa668aa1e8b11cdf1da77e1cd0c84391e04842" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;meteor npm&lt;/code&gt; command calls the &lt;a href=&quot;https://docs.npmjs.com/getting-started/what-is-npm&quot;&gt;&lt;code&gt;npm&lt;/code&gt;&lt;/a&gt; version bundled with Meteor itself.</source>
          <target state="translated">该 &lt;code&gt;meteor npm&lt;/code&gt; 命令调用&lt;a href=&quot;https://docs.npmjs.com/getting-started/what-is-npm&quot;&gt; &lt;code&gt;npm&lt;/code&gt; &lt;/a&gt;与流星本身捆绑版本。</target>
        </trans-unit>
        <trans-unit id="aff6c0d72c1aacb5b168bcc54dc23b3c04efe5df" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;nosub&lt;/code&gt; message is sent to the client to indicate that the subscription has stopped.</source>
          <target state="translated">将 &lt;code&gt;nosub&lt;/code&gt; 消息发送到客户端以指示订阅已停止。</target>
        </trans-unit>
        <trans-unit id="685b0c395254c54b684f6dba1e1b538a25426f19" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onReady&lt;/code&gt; callback is called with no arguments when the server &lt;a href=&quot;#publish_ready&quot;&gt;marks the subscription as ready&lt;/a&gt;. The &lt;code&gt;onStop&lt;/code&gt; callback is called with a &lt;a href=&quot;#meteor_error&quot;&gt;&lt;code&gt;Meteor.Error&lt;/code&gt;&lt;/a&gt; if the subscription fails or is terminated by the server. If the subscription is stopped by calling &lt;code&gt;stop&lt;/code&gt; on the subscription handle or inside the publication, &lt;code&gt;onStop&lt;/code&gt; is called with no arguments.</source>
          <target state="translated">该 &lt;code&gt;onReady&lt;/code&gt; 回调称为不带参数，当服务器&lt;a href=&quot;#publish_ready&quot;&gt;标记认购事项准备&lt;/a&gt;。该 &lt;code&gt;onStop&lt;/code&gt; 回调是带一个&lt;a href=&quot;#meteor_error&quot;&gt; &lt;code&gt;Meteor.Error&lt;/code&gt; &lt;/a&gt;如果认购失败或由服务器终止。如果通过在订阅句柄或发布内部调用 &lt;code&gt;stop&lt;/code&gt; 来停止订阅，则将调用 &lt;code&gt;onStop&lt;/code&gt; 且不带参数。</target>
        </trans-unit>
        <trans-unit id="06063c608a0d91190bd33e44295416981f321ca6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;package.js&lt;/code&gt; file below is an example of how to use the packaging API. The rest of this section will explain the specific API commands in greater detail.</source>
          <target state="translated">以下 &lt;code&gt;package.js&lt;/code&gt; 文件是如何使用包装API的示例。本节的其余部分将更详细地说明特定的API命令。</target>
        </trans-unit>
        <trans-unit id="23ddc8e0699779292ae53e0921717129af567080" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;package.js&lt;/code&gt; file is the main file in every Meteor package. This is a JavaScript file that defines the metadata, files loaded, architectures, npm packages, and Cordova packages for your Meteor package.</source>
          <target state="translated">该 &lt;code&gt;package.js&lt;/code&gt; 文件是在每一个流星包的主文件。这是一个JavaScript文件，用于定义Meteor包的元数据，加载的文件，体系结构，npm包和Cordova包。</target>
        </trans-unit>
        <trans-unit id="248b78f21981a15968dce8d0503b944a0b658881" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;params&lt;/code&gt; are put in the URL or the request body, depending on the type of request. In the case of request with no bodies, like GET and HEAD, the parameters will always go in the URL. For a POST or other type of request, the parameters will be encoded into the body with a standard &lt;code&gt;x-www-form-urlencoded&lt;/code&gt; content type, unless the &lt;code&gt;content&lt;/code&gt; or &lt;code&gt;data&lt;/code&gt; option is used to specify a body, in which case the parameters will be appended to the URL instead.</source>
          <target state="translated">根据请求的类型，将 &lt;code&gt;params&lt;/code&gt; 放入URL或请求正文中。对于没有正文的请求（例如GET和HEAD），参数将始终放在URL中。对于POST或其他类型的请求，除非使用 &lt;code&gt;content&lt;/code&gt; 或 &lt;code&gt;data&lt;/code&gt; 选项指定主体，否则参数将使用标准的 &lt;code&gt;x-www-form-urlencoded&lt;/code&gt; 内容类型编码到主体中，在这种情况下，参数将为而是附加到URL。</target>
        </trans-unit>
        <trans-unit id="d3ce8bf2a2383be6737acd880628c392cd595ded" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;random&lt;/code&gt; package provides several functions for generating random numbers. It uses a cryptographically strong pseudorandom number generator when possible, but falls back to a weaker random number generator when cryptographically strong randomness is not available (on older browsers or on servers that don&amp;rsquo;t have enough entropy to seed the cryptographically strong generator).</source>
          <target state="translated">的 &lt;code&gt;random&lt;/code&gt; 包提供若干功能用于生成随机数。它在可能的情况下使用加密强度高的伪随机数生成器，但在没有加密强度高的随机性不可用时（在较旧的浏览器或没有足够熵来加密加密强度高的生成器的服务器上），会使用较弱的随机数生成器。</target>
        </trans-unit>
        <trans-unit id="fb3f59f9cd1616175104ad5ee272702a6b7aa74d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;sink&lt;/code&gt; object may also expose additional properties depending on the environment. For example, on the server, &lt;code&gt;sink.request&lt;/code&gt; provides access to the current &lt;code&gt;request&lt;/code&gt; object, and &lt;code&gt;sink.arch&lt;/code&gt; identifies the target architecture of the pending HTTP response (e.g. &amp;ldquo;web.browser&amp;rdquo;).</source>
          <target state="translated">接收 &lt;code&gt;sink&lt;/code&gt; 对象还可以根据环境公开其他属性。例如，在服务器上， &lt;code&gt;sink.request&lt;/code&gt; 提供对当前 &lt;code&gt;request&lt;/code&gt; 对象的访问，而 &lt;code&gt;sink.arch&lt;/code&gt; 标识未决HTTP响应的目标体系结构（例如&amp;ldquo; web.browser&amp;rdquo;）。</target>
        </trans-unit>
        <trans-unit id="6aca730cc311d99b56dad16da66c4fa82bcd1973" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;smtp://&lt;/code&gt; form is for mail servers which support encryption via &lt;code&gt;STARTTLS&lt;/code&gt; or those that do not use encryption at all and is most common for servers on port 587 and &lt;em&gt;sometimes&lt;/em&gt; port 25. On the other hand, the &lt;code&gt;smtps://&lt;/code&gt; form (the &lt;code&gt;s&lt;/code&gt; stands for &amp;ldquo;secure&amp;rdquo;) should be used if the server only supports TLS/SSL (and does not support connection upgrade with &lt;code&gt;STARTTLS&lt;/code&gt;) and is most common for servers on port 465.</source>
          <target state="translated">该 &lt;code&gt;smtp://&lt;/code&gt; 形式是邮件服务器通过其支持的加密 &lt;code&gt;STARTTLS&lt;/code&gt; 或那些完全不使用加密和是最常见的服务器端口587和&lt;em&gt;有时&lt;/em&gt;端口25。在另一方面， &lt;code&gt;smtps://&lt;/code&gt; 形式（在 &lt;code&gt;s&lt;/code&gt; 代表&amp;ldquo;安全&amp;rdquo;），如果服务器只支持TLS / SSL（和不支持连接与升级，应使用 &lt;code&gt;STARTTLS&lt;/code&gt; ），并在端口465服务器最常见的。</target>
        </trans-unit>
        <trans-unit id="5f7c6c42397a628deabc6eaab3b3fd6c56bb09c9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;startup&lt;/code&gt; callbacks are called in the same order as the calls to &lt;code&gt;Meteor.startup&lt;/code&gt; were made.</source>
          <target state="translated">在 &lt;code&gt;startup&lt;/code&gt; 回调被称为以相同的顺序来调用 &lt;code&gt;Meteor.startup&lt;/code&gt; 作了。</target>
        </trans-unit>
        <trans-unit id="629e4c135033f354044ddb958337d95ca14c5b02" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;this&lt;/code&gt; context inside every Meteor Method has some useful information about the current connection, and the most useful is &lt;a href=&quot;http://docs.meteor.com/#/full/method_userId&quot;&gt;&lt;code&gt;this.userId&lt;/code&gt;&lt;/a&gt;. This property is managed by the DDP login system, and is guaranteed by the framework itself to be secure following widely-used best practices.</source>
          <target state="translated">每个Meteor方法中的 &lt;code&gt;this&lt;/code&gt; 上下文都有一些有关当前连接的有用信息，而最有用的是&lt;a href=&quot;http://docs.meteor.com/#/full/method_userId&quot;&gt; &lt;code&gt;this.userId&lt;/code&gt; &lt;/a&gt;。该属性由DDP登录系统管理，并由框架本身保证在遵循广泛使用的最佳实践后是安全的。</target>
        </trans-unit>
        <trans-unit id="5010655ccc962a72b2bb890e25818d687ab3c8b5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;this&lt;/code&gt; context, which has information about the current DDP connection. For example, you can access the current user&amp;rsquo;s &lt;code&gt;_id&lt;/code&gt; with &lt;code&gt;this.userId&lt;/code&gt;.</source>
          <target state="translated">在 &lt;code&gt;this&lt;/code&gt; 背景下，其中有关于当前DDP连接信息。例如，您可以使用 &lt;code&gt;this.userId&lt;/code&gt; 访问当前用户的 &lt;code&gt;_id&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="348b72e75d1bfbcc4619c7e7089246acca7f7bca" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;underscore&lt;/code&gt; package defines the &lt;code&gt;_&lt;/code&gt; namespace on both the client and the server.</source>
          <target state="translated">在 &lt;code&gt;underscore&lt;/code&gt; 包定义 &lt;code&gt;_&lt;/code&gt; 客户端和服务器上的命名空间。</target>
        </trans-unit>
        <trans-unit id="108fa09909ea0db4cd0b31057151dfc73205dccb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;version&lt;/code&gt; attribute of &lt;code&gt;manifest.json&lt;/code&gt;, which reflects the version of only your JS bundle, is accessible from JS at &lt;code&gt;__meteor_runtime_config__.autoupdateVersionCordova&lt;/code&gt;.</source>
          <target state="translated">可通过JS在 &lt;code&gt;__meteor_runtime_config__.autoupdateVersionCordova&lt;/code&gt; 访问 &lt;code&gt;manifest.json&lt;/code&gt; 的 &lt;code&gt;version&lt;/code&gt; 属性，该属性仅反映您的JS捆绑软件的版本。</target>
        </trans-unit>
        <trans-unit id="fd597517d0aef89433282b961f7f7b2f564b73c1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;webapp&lt;/code&gt; package is what lets your Meteor app serve content to a web browser. It is included in the &lt;code&gt;meteor-base&lt;/code&gt; set of packages that is automatically added when you run &lt;code&gt;meteor create&lt;/code&gt;. You can easily build a Meteor app without it - for example if you wanted to make a command-line tool that still used the Meteor package system and DDP.</source>
          <target state="translated">在 &lt;code&gt;webapp&lt;/code&gt; 包是什么让您的流星应用服务内容的Web浏览器。它包含在运行 &lt;code&gt;meteor create&lt;/code&gt; 时会自动添加的基于 &lt;code&gt;meteor-base&lt;/code&gt; 的软件包集中。您可以轻松构建没有它的Meteor应用程序-例如，如果您想制作一个仍使用Meteor软件包系统和DDP的命令行工具。</target>
        </trans-unit>
        <trans-unit id="aff1bfcf06bc990a1acd192431fddc86a77d7b31" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;withTracker&lt;/code&gt; function now replaces the previous function &lt;code&gt;createContainer&lt;/code&gt;, however it remains as part of the package for backwards compatibility.</source>
          <target state="translated">现在， &lt;code&gt;withTracker&lt;/code&gt; 函数将替换先前的函数 &lt;code&gt;createContainer&lt;/code&gt; ，但是为了向后兼容，它仍作为软件包的一部分保留。</target>
        </trans-unit>
        <trans-unit id="5d18fd722b156605aee23e2d51ab48e8026fb854" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;{{#each .. in}}&lt;/code&gt; block helper which repeats a block of HTML for each element in an array or cursor, or renders the contents of the &lt;code&gt;{{else}}&lt;/code&gt; block if no items exist.</source>
          <target state="translated">的 &lt;code&gt;{{#each .. in}}&lt;/code&gt; 块辅助其重复HTML块的每个元素在阵列或光标，或呈现的内容 &lt;code&gt;{{else}}&lt;/code&gt; 块是否存在没有任何项目。</target>
        </trans-unit>
        <trans-unit id="40e6f9fd001ca29ba2c0959765d298fc1feba3fb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;{{#each .. in}}&lt;/code&gt; helper is a convenient way to step over a list while retaining the outer data context.</source>
          <target state="translated">的 &lt;code&gt;{{#each .. in}}&lt;/code&gt; 助手是一个方便的方法来在步骤列表，同时保持外数据上下文。</target>
        </trans-unit>
        <trans-unit id="951988f2796603e0ca615d94cf5a8ae40d36b133" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;{{#if}}&lt;/code&gt; and &lt;code&gt;{{#unless}}&lt;/code&gt; helpers are fairly straightforward but invaluable for controlling the control flow of a template. Both operate by evaluating and checking their single argument for truthiness. In JS &lt;code&gt;null&lt;/code&gt;, &lt;code&gt;undefined&lt;/code&gt;, &lt;code&gt;0&lt;/code&gt;, &lt;code&gt;''&lt;/code&gt;, &lt;code&gt;NaN&lt;/code&gt;, and &lt;code&gt;false&lt;/code&gt; are considered &amp;ldquo;falsy&amp;rdquo;, and all other values are &amp;ldquo;truthy&amp;rdquo;.</source>
          <target state="translated">该 &lt;code&gt;{{#if}}&lt;/code&gt; 和 &lt;code&gt;{{#unless}}&lt;/code&gt; 帮手是相当简单，但非常宝贵的用于控制模板的控制流。两者都通过评估和检查其单个参数是否真实来进行操作。在JS中， &lt;code&gt;null&lt;/code&gt; ， &lt;code&gt;undefined&lt;/code&gt; ， &lt;code&gt;0&lt;/code&gt; ， &lt;code&gt;''&lt;/code&gt; ， &lt;code&gt;NaN&lt;/code&gt; 和 &lt;code&gt;false&lt;/code&gt; 被视为&amp;ldquo;虚假&amp;rdquo;，所有其他值均为&amp;ldquo;真实&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="432be6064abd05ef0974fb6122780115d4027147" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;{{#let}}&lt;/code&gt; helper is useful to capture the output of a helper or document subproperty within a template. Think of it just like defining a variable using JavaScript &lt;code&gt;let&lt;/code&gt;.</source>
          <target state="translated">的 &lt;code&gt;{{#let}}&lt;/code&gt; 助手是有用捕捉模板内的辅助或子属性文件的输出。就像使用JavaScript &lt;code&gt;let&lt;/code&gt; 定义变量一样。</target>
        </trans-unit>
        <trans-unit id="57e19d9fa3d174ce03bb09a59e268660ed187208" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;current computation&lt;/em&gt; (&lt;a href=&quot;#tracker_currentcomputation&quot;&gt;&lt;code&gt;Tracker.currentComputation&lt;/code&gt;&lt;/a&gt;) is the computation that is currently being run or rerun (computed), and the one that gains a dependency when a reactive data source is accessed. Data sources are responsible for tracking these dependencies using &lt;a href=&quot;#tracker_dependency&quot;&gt;&lt;code&gt;Tracker.Dependency&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">所述&lt;em&gt;电流运算&lt;/em&gt;（&lt;a href=&quot;#tracker_currentcomputation&quot;&gt; &lt;code&gt;Tracker.currentComputation&lt;/code&gt; &lt;/a&gt;）是当前正在运行的计算或重新运行（计算的），和增益的相关性时的反应数据源访问的一个。数据源负责使用&lt;a href=&quot;#tracker_dependency&quot;&gt; &lt;code&gt;Tracker.Dependency&lt;/code&gt; &lt;/a&gt;对象跟踪这些依赖关系。</target>
        </trans-unit>
        <trans-unit id="36e9cba0731478ef9a24a5659c52fb87f430f688" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;only&lt;/em&gt; times you should be passing any user ID as an argument are the following:</source>
          <target state="translated">以下是&lt;em&gt;唯一&lt;/em&gt;应将任何用户标识作为参数传递的次数：</target>
        </trans-unit>
        <trans-unit id="ee47cb84572091905bf3cf695a48504f47d43686" translate="yes" xml:space="preserve">
          <source>The APIs of the Meteor platform are available at the &lt;a href=&quot;https://docs.meteor.com&quot;&gt;docs site&lt;/a&gt;, and you can browse community packages on &lt;a href=&quot;https://atmospherejs.com&quot;&gt;atmosphere&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://docs.meteor.com&quot;&gt;docs网站&lt;/a&gt;上提供了Meteor平台的API ，您可以在&lt;a href=&quot;https://atmospherejs.com&quot;&gt;大气中&lt;/a&gt;浏览社区软件包。</target>
        </trans-unit>
        <trans-unit id="8a1e2ec9dc86b52fd744a37fd93a245876a08e0f" translate="yes" xml:space="preserve">
          <source>The Apache Cordova project maintains a set of &lt;a href=&quot;https://cordova.apache.org/docs/en/dev/guide/support/index.html#core-plugin-apis&quot;&gt;core plugins&lt;/a&gt; that provide access to various native device features such as the camera, contacts, or access to the file system. But anyone can write a Cordova plugin to do basically anything that can be done from native code, and many third-party plugins are available. You can &lt;a href=&quot;https://cordova.apache.org/plugins/&quot;&gt;search for plugins on the Cordova website&lt;/a&gt; or directly on &lt;a href=&quot;https://www.npmjs.com/search?q=ecosystem%3Acordova&quot;&gt;npm&lt;/a&gt;.</source>
          <target state="translated">Apache Cordova项目维护着一组&lt;a href=&quot;https://cordova.apache.org/docs/en/dev/guide/support/index.html#core-plugin-apis&quot;&gt;核心插件&lt;/a&gt;，这些插件可提供对各种本机设备功能（如摄像机，联系人）的访问，或对文件系统的访问。但是任何人都可以编写Cordova插件来完成基本上可以通过本机代码完成的任何事情，并且有许多第三方插件可用。您可以&lt;a href=&quot;https://cordova.apache.org/plugins/&quot;&gt;在Cordova网站上&lt;/a&gt;或直接在&lt;a href=&quot;https://www.npmjs.com/search?q=ecosystem%3Acordova&quot;&gt;npm &lt;/a&gt;上搜索插件。</target>
        </trans-unit>
        <trans-unit id="a0d870593e89d028d2a1392c4feacb18ac93722a" translate="yes" xml:space="preserve">
          <source>The Blaze UI library does not have support for server-side rendering, so it&amp;rsquo;s not possible to render your pages on the server if you use Blaze. However, the React UI library does. This means it is possible to render HTML on the server if you use React as your rendering framework.</source>
          <target state="translated">Blaze UI库不支持服务器端渲染，因此如果使用Blaze，则无法在服务器上渲染页面。但是，React UI库可以。这意味着如果您使用React作为渲染框架，则可以在服务器上渲染HTML。</target>
        </trans-unit>
        <trans-unit id="4b7125cdc8a6c1fbdb7389e8cb4b1420970f893c" translate="yes" xml:space="preserve">
          <source>The CSS file will be automatically loaded into any app that uses your package.</source>
          <target state="translated">该CSS文件将被自动加载到任何使用您的软件包的应用程序中。</target>
        </trans-unit>
        <trans-unit id="60d2375b52348d88de9d73704db5b25e9a5de633" translate="yes" xml:space="preserve">
          <source>The CSS selector to match, scoped to the template contents.</source>
          <target state="translated">要匹配的CSS选择器,范围为模板内容。</target>
        </trans-unit>
        <trans-unit id="a2caadf5248ad21df8b29c644ef4ca41a7cca080" translate="yes" xml:space="preserve">
          <source>The ECMAScript 2015 standard library has grown to include new APIs and data structures, some of which can be implemented (&amp;ldquo;polyfilled&amp;rdquo;) using JavaScript that runs in all engines and browsers today. Here are three new constructors that are guaranteed to be available when the &lt;code&gt;ecmascript&lt;/code&gt; package is installed:</source>
          <target state="translated">ECMAScript 2015标准库已经发展为包括新的API和数据结构，其中一些可以使用运行在当今所有引擎和浏览器中的JavaScript进行实现（&amp;ldquo;多填充&amp;rdquo;）。这是保证在安装 &lt;code&gt;ecmascript&lt;/code&gt; 软件包时可以使用的三个新构造函数：</target>
        </trans-unit>
        <trans-unit id="5176dbd6067707ebf2e564a7a6e32ea28b3ac27a" translate="yes" xml:space="preserve">
          <source>The HTML spec allows omitting some additional end tags, such as P and LI, but Spacebars doesn&amp;rsquo;t currently support this.</source>
          <target state="translated">HTML规范允许省略一些附加的结束标记，例如P和LI，但是空格键当前不支持此标记。</target>
        </trans-unit>
        <trans-unit id="dd982a7651c8a24ab8959f9743bdb11cf637028a" translate="yes" xml:space="preserve">
          <source>The ID of the document that has been removed.</source>
          <target state="translated">被删除的文件的ID。</target>
        </trans-unit>
        <trans-unit id="71da2be50954fcfb4db9e1f5c191df2c926698c5" translate="yes" xml:space="preserve">
          <source>The ID of the user to update.</source>
          <target state="translated">要更新的用户的ID。</target>
        </trans-unit>
        <trans-unit id="7be813706e2c284379f84a2e5f76a39023c8f3ac" translate="yes" xml:space="preserve">
          <source>The IP address of the client in dotted form (such as &lt;code&gt;127.0.0.1&lt;/code&gt;).</source>
          <target state="translated">客户端的IP地址（点分形式）（例如 &lt;code&gt;127.0.0.1&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="a2869296ae0d1dd0e2b8e6637e01d12e05512d8f" translate="yes" xml:space="preserve">
          <source>The JSON configuration file must contain the name of the release track (&lt;code&gt;track&lt;/code&gt;), the release version (&lt;code&gt;version&lt;/code&gt;), various metadata, the packages specified by the release as mapped to versions (&lt;code&gt;packages&lt;/code&gt;), and the package &amp;amp; version of the Meteor command-line tool (&lt;code&gt;tool&lt;/code&gt;). Note that this means that forks of the meteor tool can be published as packages and people can use them by switching to a corresponding release. For more information, run &lt;code&gt;meteor help publish-release&lt;/code&gt;.</source>
          <target state="translated">JSON配置文件必须包含发行版轨道（ &lt;code&gt;track&lt;/code&gt; ）的名称，发行版版本（ &lt;code&gt;version&lt;/code&gt; ），各种元数据，发行版所映射到版本的 &lt;code&gt;packages&lt;/code&gt; （包）以及Meteor命令的包和版本-线工具（ &lt;code&gt;tool&lt;/code&gt; ）。请注意，这意味着流星工具的分支可以作为包发布，人们可以通过切换到相应的发行版来使用它们。有关更多信息，请运行 &lt;code&gt;meteor help publish-release&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="16fae4e58587b4f662e36443fea8a7705d76af81" translate="yes" xml:space="preserve">
          <source>The JavaScript of this component is responsible for subscribing and fetching the data that&amp;rsquo;s used by the &lt;code&gt;Lists_show&lt;/code&gt; template itself:</source>
          <target state="translated">该组件的JavaScript负责订阅和获取 &lt;code&gt;Lists_show&lt;/code&gt; 模板本身使用的数据：</target>
        </trans-unit>
        <trans-unit id="896c78fd661960f4bb6e666fa9925e5acfde5022" translate="yes" xml:space="preserve">
          <source>The Meteor Accounts system builds on top of the &lt;code&gt;userId&lt;/code&gt; support in &lt;a href=&quot;#publish_userId&quot;&gt;&lt;code&gt;publish&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#method_userId&quot;&gt;&lt;code&gt;methods&lt;/code&gt;&lt;/a&gt;. The core packages add the concept of user documents stored in the database, and additional packages add &lt;a href=&quot;#accounts_passwords&quot;&gt;secure password authentication&lt;/a&gt;, &lt;a href=&quot;#meteor_loginwithexternalservice&quot;&gt;integration with third party login services&lt;/a&gt;, and a &lt;a href=&quot;../packages/accounts-ui&quot;&gt;pre-built user interface&lt;/a&gt;.</source>
          <target state="translated">流星帐户系统建立在&lt;a href=&quot;#publish_userId&quot;&gt; &lt;code&gt;publish&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#method_userId&quot;&gt; &lt;code&gt;methods&lt;/code&gt; &lt;/a&gt;中对 &lt;code&gt;userId&lt;/code&gt; 的支持之上。核心软件包增加了存储在数据库中的用户文档的概念，其他软件包增加了&lt;a href=&quot;#accounts_passwords&quot;&gt;安全密码验证&lt;/a&gt;，&lt;a href=&quot;#meteor_loginwithexternalservice&quot;&gt;与第三方登录服务的集成&lt;/a&gt;以及&lt;a href=&quot;../packages/accounts-ui&quot;&gt;预构建的用户界面&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bd0182c35a86a0426613c6baf254b37b7d849428" translate="yes" xml:space="preserve">
          <source>The Meteor build system is the actual command line tool that you get when you install Meteor. You run it by typing the &lt;code&gt;meteor&lt;/code&gt; command in your terminal, possibly followed by a set of arguments. Read the &lt;a href=&quot;http://docs.meteor.com/#/full/commandline&quot;&gt;docs about the command line tool&lt;/a&gt; or type &lt;code&gt;meteor help&lt;/code&gt; in your terminal to learn about all of the commands.</source>
          <target state="translated">Meteor构建系统是安装Meteor时获得的实际命令行工具。您可以通过在终端中键入 &lt;code&gt;meteor&lt;/code&gt; 命令（可能后面跟一组参数）来运行它。阅读&lt;a href=&quot;http://docs.meteor.com/#/full/commandline&quot;&gt;有关命令行工具&lt;/a&gt;的文档，或在终端中输入 &lt;code&gt;meteor help&lt;/code&gt; 以了解所有命令。</target>
        </trans-unit>
        <trans-unit id="9ed6998a9b60024706c64d6971252a8a138a0b20" translate="yes" xml:space="preserve">
          <source>The Meteor build tool is what compiles, runs, deploys, and publishes all of your Meteor apps and packages. It&amp;rsquo;s Meteor&amp;rsquo;s built-in solution to the problems also solved by tools like Grunt, Gulp, Webpack, Browserify, Nodemon, and many others, and uses many popular Node.js tools like Babel and UglifyJS internally to enable a seamless experience.</source>
          <target state="translated">流星构建工具是编译，运行，部署和发布所有流星应用和程序包的工具。这是Meteor的内置解决方案，也可以通过Grunt，Gulp，Webpack，Browserify，Nodemon等工具解决，并且在内部使用了许多流行的Node.js工具（例如Babel和UglifyJS）来实现无缝体验。</target>
        </trans-unit>
        <trans-unit id="0c3942dc6449d48ea19d6d829b64b40c1f044cde" translate="yes" xml:space="preserve">
          <source>The Meteor client constructs a DDP message to send to the server. This includes the Method name, arguments, and an automatically generated Method ID that represents this particular Method invocation.</source>
          <target state="translated">Meteor客戶端建構一個DDP訊息來傳送給伺服器。这包括方法名称、参数和自动生成的方法ID,代表这个特定的方法调用。</target>
        </trans-unit>
        <trans-unit id="772414e93dcd743e1995ad040a68593ac8c97547" translate="yes" xml:space="preserve">
          <source>The Meteor core API includes an alternative to Methods for manipulating data from the client. Instead of explicitly defining Methods with specific arguments, you can instead call &lt;code&gt;insert&lt;/code&gt;, &lt;code&gt;update&lt;/code&gt;, and &lt;code&gt;remove&lt;/code&gt; directly from the client and specify security rules with &lt;a href=&quot;http://docs.meteor.com/#/full/allow&quot;&gt;&lt;code&gt;allow&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;http://docs.meteor.com/#/full/deny&quot;&gt;&lt;code&gt;deny&lt;/code&gt;&lt;/a&gt;. In the Meteor Guide, we are taking a strong position that this feature should be avoided and Methods used instead. Read more about the problems with allow/deny in the &lt;a href=&quot;security#allow-deny&quot;&gt;Security article&lt;/a&gt;.</source>
          <target state="translated">Meteor核心API包括用于处理来自客户端的数据的方法的替代方法。您可以直接从客户端调用 &lt;code&gt;insert&lt;/code&gt; ， &lt;code&gt;update&lt;/code&gt; 和 &lt;code&gt;remove&lt;/code&gt; ，而不是使用特定的参数显式定义Methods ，并使用&lt;a href=&quot;http://docs.meteor.com/#/full/allow&quot;&gt; &lt;code&gt;allow&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;http://docs.meteor.com/#/full/deny&quot;&gt; &lt;code&gt;deny&lt;/code&gt; &lt;/a&gt;指定安全性规则。在《流星指南》中，我们坚决应避免使用此功能，而应使用&amp;ldquo;方法&amp;rdquo;。在&amp;ldquo; &lt;a href=&quot;security#allow-deny&quot;&gt;安全性&amp;rdquo;文章中&lt;/a&gt;阅读有关允许/拒绝问题的更多信息。</target>
        </trans-unit>
        <trans-unit id="9f2a7f5fade585b5ec9cf23d72e35fb42ed6eebf" translate="yes" xml:space="preserve">
          <source>The Meteor server stores passwords using the &lt;a href=&quot;http://en.wikipedia.org/wiki/Bcrypt&quot;&gt;bcrypt&lt;/a&gt; algorithm. This helps protect against embarrassing password leaks if the server&amp;rsquo;s database is compromised.</source>
          <target state="translated">流星服务器使用&lt;a href=&quot;http://en.wikipedia.org/wiki/Bcrypt&quot;&gt;bcrypt&lt;/a&gt;算法存储密码。如果服务器的数据库遭到破坏，这有助于防止令人尴尬的密码泄漏。</target>
        </trans-unit>
        <trans-unit id="28cfb47bd98dc99b089b399b09ea9dbbb669e91f" translate="yes" xml:space="preserve">
          <source>The Meteor user object of the user which just logged out.</source>
          <target state="translated">刚刚注销的用户的Meteor用户对象。</target>
        </trans-unit>
        <trans-unit id="fbc3037dc5cc9631ba635a73341cae811bc345e3" translate="yes" xml:space="preserve">
          <source>The Meteor.users collection</source>
          <target state="translated">Meteor.用户集合</target>
        </trans-unit>
        <trans-unit id="8476c53edf67af47f0940d90ac62a022739b4a45" translate="yes" xml:space="preserve">
          <source>The OAuth login service packages populate &lt;code&gt;profile.name&lt;/code&gt;. We don&amp;rsquo;t recommend using this but, if you plan to, make sure to deny client-side writes to &lt;code&gt;profile&lt;/code&gt;. See the section about the &lt;a href=&quot;#dont-use-profile&quot;&gt;&lt;code&gt;profile&lt;/code&gt; field on users&lt;/a&gt;.</source>
          <target state="translated">OAuth登录服务包将填充 &lt;code&gt;profile.name&lt;/code&gt; 。我们不建议使用此方法，但是，如果您打算这样做，请确保拒绝客户端对 &lt;code&gt;profile&lt;/code&gt; 的写入。请参阅&lt;a href=&quot;#dont-use-profile&quot;&gt;有关用户&lt;/a&gt;的 &lt;code&gt;profile&lt;/code&gt; 字段的部分。</target>
        </trans-unit>
        <trans-unit id="27a9526d01d31d63df8dc685846e968574c8a7dd" translate="yes" xml:space="preserve">
          <source>The URL of another Meteor application.</source>
          <target state="translated">另一个Meteor应用的URL。</target>
        </trans-unit>
        <trans-unit id="6f2102292919866718ad50a3acbcee97c59c4026" translate="yes" xml:space="preserve">
          <source>The URL to retrieve.</source>
          <target state="translated">要检索的URL。</target>
        </trans-unit>
        <trans-unit id="a64bf122abe1d10cd0e701c4cd4d818e2d9c1879" translate="yes" xml:space="preserve">
          <source>The URL to which the request should be sent.</source>
          <target state="translated">发送请求的URL。</target>
        </trans-unit>
        <trans-unit id="56d822254ab772c06ebd2fd3c858ebf94a0e9989" translate="yes" xml:space="preserve">
          <source>The View corresponding to the current template helper, event handler, callback, or autorun. If there isn't one, &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">与当前模板助手，事件处理程序，回调或自动运行相对应的View。如果没有，则为 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="26c9c1b1b044e6756fecbd38c1acab1d71c26389" translate="yes" xml:space="preserve">
          <source>The Windows installer supports Windows 7, Windows 8.1, Windows Server</source>
          <target state="translated">Windows安装程序支持Windows 7、Windows 8.1、Windows Server。</target>
        </trans-unit>
        <trans-unit id="c64291755dfda03d5c11847e2b97871a861bda67" translate="yes" xml:space="preserve">
          <source>The XML you want to include</source>
          <target state="translated">你想包含的XML</target>
        </trans-unit>
        <trans-unit id="79575e6b77ee45e1605aec94bfac3aef87c607d8" translate="yes" xml:space="preserve">
          <source>The above Method is great because you can have the flexibility of having some optional fields and only passing the ones you want to change. In particular, what makes it possible for this Method is that the security considerations of setting one&amp;rsquo;s full name and date of birth are the same - we don&amp;rsquo;t have to do different security checks for different fields being set. Note that it&amp;rsquo;s very important that the &lt;code&gt;$set&lt;/code&gt; query on MongoDB is generated on the server - we should never take MongoDB operators as-is from the client, since they are hard to validate and could result in unexpected side effects.</source>
          <target state="translated">上面的方法很棒，因为您可以灵活地拥有一些可选字段，并且只传递您要更改的字段。特别是，使此方法成为可能的是，设置一个人的全名和生日的安全考虑是相同的-我们不必对要设置的不同字段进行不同的安全检查。请注意，在服务器上生成MongoDB上的 &lt;code&gt;$set&lt;/code&gt; 查询非常重要-我们绝不应该从客户端直接获取MongoDB运算符，因为它们难以验证并且可能导致意外的副作用。</target>
        </trans-unit>
        <trans-unit id="cb437ccdc6b45a78a5085edffe767a9c98bac6da" translate="yes" xml:space="preserve">
          <source>The above approach will only work for static redirects. However, sometimes you need to load some data to figure out where to redirect to. In this case you&amp;rsquo;ll need to render part of the component hierarchy to subscribe to the data you need. For example, in the Todos example app, we want to make the root (&lt;code&gt;/&lt;/code&gt;) route redirect to the first known list. To achieve this, we need to render a special &lt;code&gt;App_rootRedirector&lt;/code&gt; route:</source>
          <target state="translated">以上方法仅适用于静态重定向。但是，有时您需要加载一些数据以找出重定向到的位置。在这种情况下，您将需要呈现组件层次结构的一部分以订阅所需的数据。例如，在Todos示例应用程序中，我们希望将根（ &lt;code&gt;/&lt;/code&gt; ）路由重定向到第一个已知列表。为此，我们需要呈现一条特殊的 &lt;code&gt;App_rootRedirector&lt;/code&gt; 路由：</target>
        </trans-unit>
        <trans-unit id="bfad329861bd98d88106bb84cc8f2f7f65837040" translate="yes" xml:space="preserve">
          <source>The above code snippet is equivalent to the code below, which specifies all of the version numbers individually:</source>
          <target state="translated">上面的代码片段相当于下面的代码,它单独指定了所有的版本号。</target>
        </trans-unit>
        <trans-unit id="466d4f6004ff5de137195f0531fa0eda84ec3ecf" translate="yes" xml:space="preserve">
          <source>The above pattern will match certain URLs. You may notice that one segment of the URL is prefixed by &lt;code&gt;:&lt;/code&gt; - this means that it is a &lt;em&gt;url parameter&lt;/em&gt;, and will match any string that is present in that segment of the path. Flow Router will make that part of the URL available on the &lt;code&gt;params&lt;/code&gt; property of the current route.</source>
          <target state="translated">上面的模式将匹配某些URL。您可能会注意到URL的一个段以前缀 &lt;code&gt;:&lt;/code&gt; -这意味着它是一个&lt;em&gt;url参数&lt;/em&gt;，并将匹配该路径段中存在的任何字符串。Flow Router将使该部分URL 在当前路由的 &lt;code&gt;params&lt;/code&gt; 属性中可用。</target>
        </trans-unit>
        <trans-unit id="6dc89bafb35f98d9c1b284e5384f0fe9a6c6947e" translate="yes" xml:space="preserve">
          <source>The actual files for a given version of an Atmosphere package are stored in your local &lt;code&gt;~/.meteor/packages&lt;/code&gt; directory.</source>
          <target state="translated">给定版本的Atmosphere软件包的实际文件存储在本地 &lt;code&gt;~/.meteor/packages&lt;/code&gt; 目录中。</target>
        </trans-unit>
        <trans-unit id="99efcfc477dfd202bf0863401bee84cc1b5a57ca" translate="yes" xml:space="preserve">
          <source>The advantage of a &lt;code&gt;ReactiveDict&lt;/code&gt; is you can access each property individually (&lt;code&gt;WindowSize.get('width')&lt;/code&gt;), and the dict will diff the field and track changes on it individually (so your template will re-render less often for instance).</source>
          <target state="translated">&lt;code&gt;ReactiveDict&lt;/code&gt; 的优点是您可以单独访问每个属性（ &lt;code&gt;WindowSize.get('width')&lt;/code&gt; ），并且该dict将对字段进行区分并单独跟踪其更改（例如，模板的重新渲染频率较低）。</target>
        </trans-unit>
        <trans-unit id="735022e06f9cbcc8bc7022957bf5278567f9761f" translate="yes" xml:space="preserve">
          <source>The advantage of a bulk operation is that it only requires a single round trip to MongoDB for the write, which usually means it is a &lt;em&gt;lot&lt;/em&gt; faster. The downside is that if your migration is complex (which it usually is if you can&amp;rsquo;t just do an &lt;code&gt;.update(.., .., {multi: true})&lt;/code&gt;), it can take a significant amount of time to prepare the bulk update.</source>
          <target state="translated">批量操作的优点在于，它仅仅需要单个往返的MongoDB针对写入，这通常意味着它是一个&lt;em&gt;很大&lt;/em&gt;更快。不利之处在于，如果您的迁移很复杂（通常是无法仅执行 &lt;code&gt;.update(.., .., {multi: true})&lt;/code&gt; ），则可能需要花费大量时间来准备批量更新。</target>
        </trans-unit>
        <trans-unit id="b41fa29cf2394497f8ecf0c8f8d7b3d55f132222" translate="yes" xml:space="preserve">
          <source>The advantage of running our acceptance test suite pointed at an app that runs in full app test mode is that all of the &lt;a href=&quot;#creating-integration-test-data&quot;&gt;data generating methods&lt;/a&gt; that we&amp;rsquo;ve created remain available. Otherwise the &lt;code&gt;acceptance-test-driver&lt;/code&gt; does nothing.</source>
          <target state="translated">针对以完全应用程序测试模式运行的应用程序运行验收测试套件的优势在于，我们创建的所有&lt;a href=&quot;#creating-integration-test-data&quot;&gt;数据生成方法均&lt;/a&gt;保持可用。否则， &lt;code&gt;acceptance-test-driver&lt;/code&gt; 什么也不做。</target>
        </trans-unit>
        <trans-unit id="f75ceab42894aed4b40dab12aeb1654d82b99873" translate="yes" xml:space="preserve">
          <source>The amount of foresight you bake into your schema design will depend on your app&amp;rsquo;s individual constraints, and will need to be a judgement call on your part.</source>
          <target state="translated">您对架构设计的远见卓识将取决于应用程序的个别约束，并且需要您自己进行判断。</target>
        </trans-unit>
        <trans-unit id="917a6e6c95af21315a342385f340790e5dbe696b" translate="yes" xml:space="preserve">
          <source>The analytics package hooks into Flow Router (see the &lt;a href=&quot;routing&quot;&gt;routing article&lt;/a&gt; for more) and records all of the page events for you.</source>
          <target state="translated">分析包挂接到Flow Router（有关更多信息，请参阅&lt;a href=&quot;routing&quot;&gt;路由文章&lt;/a&gt;），并为您记录所有页面事件。</target>
        </trans-unit>
        <trans-unit id="9ead835d6621c4694bc551de3b9a3fe58e8906c8" translate="yes" xml:space="preserve">
          <source>The application cache allows the application to be loaded even when the browser doesn&amp;rsquo;t have an Internet connection, and so enables using the app offline.</source>
          <target state="translated">应用程序缓存允许即使浏览器没有Internet连接也可以加载应用程序，因此可以离线使用应用程序。</target>
        </trans-unit>
        <trans-unit id="04a1a1290d8eae6c9de3ee266f9ff663701f1338" translate="yes" xml:space="preserve">
          <source>The aptly named &lt;code&gt;blaze-html-templates&lt;/code&gt; package that comes with every new Meteor app by default compiles your &lt;code&gt;.html&lt;/code&gt; files written using &lt;a href=&quot;http://blazejs.org/api/spacebars.html&quot;&gt;Spacebars&lt;/a&gt; into Blaze-compatible JavaScript code. You can also add &lt;code&gt;blaze-html-templates&lt;/code&gt; to any of your packages to compile template files located in the package.</source>
          <target state="translated">默认情况下，每个新的Meteor应用程序随附的名称恰当的 &lt;code&gt;blaze-html-templates&lt;/code&gt; 软件包 &lt;code&gt;.html&lt;/code&gt; 使用&lt;a href=&quot;http://blazejs.org/api/spacebars.html&quot;&gt;空格键&lt;/a&gt;编写的.html文件编译为与Blaze兼容的JavaScript代码。您还可以将 &lt;code&gt;blaze-html-templates&lt;/code&gt; 添加到任何软件包中，以编译位于软件包中的模板文件。</target>
        </trans-unit>
        <trans-unit id="378952f0189a81fedc0741d76c3e99d79a1e9e13" translate="yes" xml:space="preserve">
          <source>The argument is typically a Meteor cursor (the result of &lt;code&gt;collection.find()&lt;/code&gt;, for example), but it may also be a plain JavaScript array, &lt;code&gt;null&lt;/code&gt;, or &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">该参数通常是一个Meteor游标（例如， &lt;code&gt;collection.find()&lt;/code&gt; 的结果），但是它也可以是普通的JavaScript数组， &lt;code&gt;null&lt;/code&gt; 或 &lt;code&gt;undefined&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d77aee2e87699b6eaa98b53d0d180a23f17a1dd1" translate="yes" xml:space="preserve">
          <source>The arguments to the publication, which can be passed in when calling &lt;code&gt;Meteor.subscribe&lt;/code&gt;.</source>
          <target state="translated">发布的参数，可以在调用 &lt;code&gt;Meteor.subscribe&lt;/code&gt; 时传递该参数。</target>
        </trans-unit>
        <trans-unit id="9e23e8e89c294bdac4801e34e624b2364ad13030" translate="yes" xml:space="preserve">
          <source>The available callbacks are:</source>
          <target state="translated">可用的回调有:</target>
        </trans-unit>
        <trans-unit id="e0333a3e94b3b1df990028a4ef4fe4675fc5be85" translate="yes" xml:space="preserve">
          <source>The basic Accounts system is in the &lt;code&gt;accounts-base&lt;/code&gt; package, but applications typically include this automatically by adding one of the login provider packages: &lt;code&gt;accounts-password&lt;/code&gt;, &lt;code&gt;accounts-facebook&lt;/code&gt;, &lt;code&gt;accounts-github&lt;/code&gt;, &lt;code&gt;accounts-google&lt;/code&gt;, &lt;code&gt;accounts-meetup&lt;/code&gt;, &lt;code&gt;accounts-twitter&lt;/code&gt;, or &lt;code&gt;accounts-weibo&lt;/code&gt;.</source>
          <target state="translated">基本的Accounts系统位于 &lt;code&gt;accounts-base&lt;/code&gt; 程序包中，但是应用程序通常通过添加以下登录提供程序包之一来自动包括此功能： &lt;code&gt;accounts-password&lt;/code&gt; ， &lt;code&gt;accounts-facebook&lt;/code&gt; ， &lt;code&gt;accounts-github&lt;/code&gt; ， &lt;code&gt;accounts-google&lt;/code&gt; ， &lt;code&gt;accounts-meetup&lt;/code&gt; ， &lt;code&gt;accounts-twitter&lt;/code&gt; 或 &lt;code&gt;accounts-weibo&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="db89f434d35c86142d8a42b1b42997d85c19a412" translate="yes" xml:space="preserve">
          <source>The basic purpose of a router is to match certain URLs and perform actions as a result. This all happens on the client side, in the app user&amp;rsquo;s browser or mobile app container. Let&amp;rsquo;s take an example from the Todos example app:</source>
          <target state="translated">路由器的基本目的是匹配某些URL并执行相应的操作。这一切都发生在客户端，应用程序用户的浏览器或移动应用程序容器中。让我们以Todos示例应用程序为例：</target>
        </trans-unit>
        <trans-unit id="1d73760033c1a6738267e7589ae09097a86ac374" translate="yes" xml:space="preserve">
          <source>The basic way to use a CDN is to upload your files to the CDN and change your URLs to point at the CDN (for instance if your Meteor app is at &lt;code&gt;http://myapp.com&lt;/code&gt;, changing your image URL from &lt;code&gt;&amp;lt;img src=&quot;http://myapp.com/cats.gif&quot;&amp;gt;&lt;/code&gt; to &lt;code&gt;&amp;lt;img src=&quot;http://mycdn.com/cats.gif&quot;&amp;gt;&lt;/code&gt;). However, this would be hard to do with Meteor, since the largest file &amp;ndash; your Javascript bundle &amp;ndash; changes every time you edit your app.</source>
          <target state="translated">使用CDN的基本方法是将文件上传到CDN并更改URL以指向CDN（例如，如果Meteor应用位于 &lt;code&gt;http://myapp.com&lt;/code&gt; ，则将图像URL从 &lt;code&gt;&amp;lt;img src=&quot;http://myapp.com/cats.gif&quot;&amp;gt;&lt;/code&gt; 到 &lt;code&gt;&amp;lt;img src=&quot;http://mycdn.com/cats.gif&quot;&amp;gt;&lt;/code&gt; ）。但是，使用Meteor很难做到这一点，因为每次编辑应用程序时，最大的文件（即Javascript捆绑包）都会更改。</target>
        </trans-unit>
        <trans-unit id="29f995b6b0f1a832c48648ecfe840224eda5a62e" translate="yes" xml:space="preserve">
          <source>The behavior of &lt;code&gt;remove&lt;/code&gt; differs depending on whether it is called by trusted or untrusted code. Trusted code includes server code and method code. Untrusted code includes client-side code such as event handlers and a browser&amp;rsquo;s JavaScript console.</source>
          <target state="translated">&lt;code&gt;remove&lt;/code&gt; 的行为取决于受信任或不受信任的代码调用而有所不同。受信任的代码包括服务器代码和方法代码。不受信任的代码包括客户端代码，例如事件处理程序和浏览器的JavaScript控制台。</target>
        </trans-unit>
        <trans-unit id="b540c601572a90a3ef7beb0c14f57bd732901e8e" translate="yes" xml:space="preserve">
          <source>The behavior of &lt;code&gt;update&lt;/code&gt; differs depending on whether it is called by trusted or untrusted code. Trusted code includes server code and method code. Untrusted code includes client-side code such as event handlers and a browser&amp;rsquo;s JavaScript console.</source>
          <target state="translated">&lt;code&gt;update&lt;/code&gt; 的行为取决于是由受信任的代码还是不受信任的代码调用而不同。受信任的代码包括服务器代码和方法代码。不受信任的代码包括客户端代码，例如事件处理程序和浏览器的JavaScript控制台。</target>
        </trans-unit>
        <trans-unit id="6cf6d1d0942b648d69e4f2334c33febbb5409993" translate="yes" xml:space="preserve">
          <source>The behavior of a template tag is affected by where it is located in the HTML, and not all tags are allowed at all locations.</source>
          <target state="translated">模板标签的行为受其在HTML中的位置影响,并不是所有的标签在所有的位置都可以使用。</target>
        </trans-unit>
        <trans-unit id="fe2a22351167c169483478713aad4321355fb500" translate="yes" xml:space="preserve">
          <source>The best Sass build plugin for Meteor is &lt;a href=&quot;https://atmospherejs.com/fourseven/scss&quot;&gt;&lt;code&gt;fourseven:scss&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">流星最好的Sass构建插件是&lt;a href=&quot;https://atmospherejs.com/fourseven/scss&quot;&gt; &lt;code&gt;fourseven:scss&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d21b94fc2f7728c9c4647013748274a56eeb6353" translate="yes" xml:space="preserve">
          <source>The best way to make your app secure is to understand all of the possible inputs that could come from an untrusted source, and make sure that they are all handled correctly. The easiest way to understand what inputs can come from the client is to restrict them to as small of a space as possible. This means your Methods should all be specific actions, and shouldn&amp;rsquo;t take a multitude of options that change the behavior in significant ways. The end goal is that you can easily look at each Method in your app and validate or test that it is secure. Here&amp;rsquo;s a secure example Method from the Todos example app:</source>
          <target state="translated">使您的应用程序安全的最佳方法是了解所有可能来自不受信任来源的输入，并确保正确处理了所有输入。理解来自客户端的输入的最简单方法是将它们限制在尽可能小的空间内。这意味着您的&amp;ldquo;方法&amp;rdquo;都应该是特定的操作，并且不应采取多种以重大方式改变行为的选项。最终目标是您可以轻松查看应用程序中的每个方法，并验证或测试该方法的安全性。这是来自Todos示例应用程序的安全示例方法：</target>
        </trans-unit>
        <trans-unit id="315bee23c0ee544bbb296894b6d09e4a6f9b08ad" translate="yes" xml:space="preserve">
          <source>The best way to make your build plugin fast is to use caching anywhere you can - the best way to save time is to do less work! Check out the &lt;a href=&quot;https://docs.meteor.com/api/packagejs.html#build-plugin-caching&quot;&gt;documentation about CachingCompiler&lt;/a&gt; to learn more. It&amp;rsquo;s used in all of the above examples, so you can see how to use it by looking at them.</source>
          <target state="translated">快速构建插件的最佳方法是在任何可能的地方使用缓存-节省时间的最佳方法是减少工作量！查看&lt;a href=&quot;https://docs.meteor.com/api/packagejs.html#build-plugin-caching&quot;&gt;有关CachingCompiler&lt;/a&gt;的文档以了解更多信息。在以上所有示例中都使用了它，因此您可以通过查看它们来了解如何使用它。</target>
        </trans-unit>
        <trans-unit id="8cb953f8026acbebd8fe0df9cc112316bc284e8a" translate="yes" xml:space="preserve">
          <source>The best way to store your custom data onto the &lt;code&gt;Meteor.users&lt;/code&gt; collection is to add a new uniquely-named top-level field on the user document. For example, if you wanted to add a mailing address to a user, you could do it like this:</source>
          <target state="translated">将自定义数据存储到 &lt;code&gt;Meteor.users&lt;/code&gt; 集合中的最佳方法是在用户文档上添加一个新的唯一命名的顶级字段。例如，如果您想向用户添加邮寄地址，则可以这样进行：</target>
        </trans-unit>
        <trans-unit id="4bb7afad9811d34a0799f9eec42c9d511a448357" translate="yes" xml:space="preserve">
          <source>The body of the HTTP response as a string.</source>
          <target state="translated">HTTP响应的主体是一个字符串。</target>
        </trans-unit>
        <trans-unit id="520d93bbeeff05e26e6e839c0804d7f12bb8dd44" translate="yes" xml:space="preserve">
          <source>The browser on iOS is Safari, which is based on the open source WebKit project, but tends to be somewhat slow in enabling new features. Because they use the same underlying framework, the features available to a web view match the features supported by Safari on the iOS release you&amp;rsquo;re running on.</source>
          <target state="translated">iOS上的浏览器是Safari，它基于开放源WebKit项目，但是启用新功能的速度往往有些慢。因为它们使用相同的基础框架，所以可用于Web视图的功能与您正在运行的iOS版本上Safari支持的功能匹配。</target>
        </trans-unit>
        <trans-unit id="d8708bfa23fa52e22c67b7fb716a9c92a7fff5da" translate="yes" xml:space="preserve">
          <source>The callback function</source>
          <target state="translated">回调函数</target>
        </trans-unit>
        <trans-unit id="c2dcaabbaa2752b243256533c88d4a7087ea2035" translate="yes" xml:space="preserve">
          <source>The callback is called with a single argument, the server-side &lt;code&gt;connection&lt;/code&gt; representing the connection from the client. This object contains the following fields:</source>
          <target state="translated">使用单个参数调用回调，服务器端 &lt;code&gt;connection&lt;/code&gt; 表示来自客户端的连接。该对象包含以下字段：</target>
        </trans-unit>
        <trans-unit id="c8b1c1450b6dfa3f5d9ee8ad7aade6a7f06f3c2f" translate="yes" xml:space="preserve">
          <source>The callback receives a &lt;code&gt;sink&lt;/code&gt; object, which is an instance of either &lt;code&gt;ClientSink&lt;/code&gt; or &lt;code&gt;ServerSink&lt;/code&gt; depending on the environment. Both types of &lt;code&gt;sink&lt;/code&gt; have the same methods, though the server version accepts only HTML strings as content, whereas the client version also accepts DOM nodes.</source>
          <target state="translated">回调接收一个接收 &lt;code&gt;sink&lt;/code&gt; 对象，该对象是 &lt;code&gt;ClientSink&lt;/code&gt; 或 &lt;code&gt;ServerSink&lt;/code&gt; 的实例，具体取决于环境。两种类型的接收 &lt;code&gt;sink&lt;/code&gt; 都具有相同的方法，尽管服务器版本仅接受HTML字符串作为内容，而客户端版本也接受DOM节点。</target>
        </trans-unit>
        <trans-unit id="8b9f6f162907e02a0ea9ed02c3076f4dfd5e9784" translate="yes" xml:space="preserve">
          <source>The callback to be called after the login has failed.</source>
          <target state="translated">登录失败后要调用的回调。</target>
        </trans-unit>
        <trans-unit id="4e1136b97efaeea6628f872cffb0094c5fa313ee" translate="yes" xml:space="preserve">
          <source>The callback to be called when login is successful.</source>
          <target state="translated">登录成功时调用的回调。</target>
        </trans-unit>
        <trans-unit id="e8601dc28796ec40c6dd1873bf26178e037f01a8" translate="yes" xml:space="preserve">
          <source>The callback to be called when logout is successful.</source>
          <target state="translated">注销成功时调用的回调。</target>
        </trans-unit>
        <trans-unit id="2d537507e9f0e48a9d318103c9b844df71ab1a7f" translate="yes" xml:space="preserve">
          <source>The changed document's ID.</source>
          <target state="translated">变更后的文件的ID。</target>
        </trans-unit>
        <trans-unit id="cdda8d0b2e57b8d445498c884280ef4906776319" translate="yes" xml:space="preserve">
          <source>The client enters a special mode where it tracks all changes made to client-side collections, so that they can be rolled back later. When this step is complete, the user of your app sees their UI update instantly with the new content of the client-side database, but the server hasn&amp;rsquo;t received any data yet.</source>
          <target state="translated">客户端进入一种特殊模式，在该模式下，它将跟踪对客户端集合所做的所有更改，以便以后可以回滚它们。完成此步骤后，您的应用程序用户会立即使用客户端数据库的新内容查看其UI更新，但服务器尚未收到任何数据。</target>
        </trans-unit>
        <trans-unit id="f82adb248be9dcec9419a93f949feec9a3ecef57" translate="yes" xml:space="preserve">
          <source>The client sends a &lt;code&gt;sub&lt;/code&gt; message with the name of the subscription over DDP.</source>
          <target state="translated">客户端通过DDP发送带有订阅名称的 &lt;code&gt;sub&lt;/code&gt; 消息。</target>
        </trans-unit>
        <trans-unit id="4d7269b8f4de7c21284ee91d7b146c64cca37422" translate="yes" xml:space="preserve">
          <source>The client sends the &lt;code&gt;unsub&lt;/code&gt; DDP message.</source>
          <target state="translated">客户端发送 &lt;code&gt;unsub&lt;/code&gt; DDP消息。</target>
        </trans-unit>
        <trans-unit id="f4eee4395cb424192df043a4634d70610e3360df" translate="yes" xml:space="preserve">
          <source>The client will see a document if the document is currently in the published record set of any of its subscriptions. If multiple publications publish a document with the same &lt;code&gt;_id&lt;/code&gt; for the same collection the documents are merged for the client. If the values of any of the top level fields conflict, the resulting value will be one of the published values, chosen arbitrarily.</source>
          <target state="translated">如果该文档当前处于其任何订阅的已发布记录集中，则客户端将看到该文档。如果多个出版物为同一集合发布具有相同 &lt;code&gt;_id&lt;/code&gt; 的文档，则该文档将为客户端合并。如果任何顶级字段的值发生冲突，则结果值将是任意选择的已发布值之一。</target>
        </trans-unit>
        <trans-unit id="a3edc6b86aaba4a10db03ed3bf65c1feeea7e3ce" translate="yes" xml:space="preserve">
          <source>The code above is just code that you could run on the server inside a Meteor Method to set someone&amp;rsquo;s mailing address. Sometimes, you want to set a field when the user first creates their account, for example to initialize a default value or compute something from their social data. You can do this using &lt;a href=&quot;http://docs.meteor.com/#/full/accounts_oncreateuser&quot;&gt;&lt;code&gt;Accounts.onCreateUser&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">上面的代码只是您可以在服务器上运行的&amp;ldquo;流星方法&amp;rdquo;中设置某人的邮寄地址的代码。有时，您想在用户首次创建其帐户时设置一个字段，例如初始化默认值或从其社交数据中计算出一些内容。您可以使用&lt;a href=&quot;http://docs.meteor.com/#/full/accounts_oncreateuser&quot;&gt; &lt;code&gt;Accounts.onCreateUser&lt;/code&gt; &lt;/a&gt;做到这一点：</target>
        </trans-unit>
        <trans-unit id="c2089f8d3a5cab974d960c79146921cccd7ae5c3" translate="yes" xml:space="preserve">
          <source>The code snippet below is an example &lt;code&gt;mobile-config.js&lt;/code&gt; file. The rest of this section will explain the specific API commands in greater detail.</source>
          <target state="translated">下面的代码段是一个示例 &lt;code&gt;mobile-config.js&lt;/code&gt; 文件。本节的其余部分将更详细地说明特定的API命令。</target>
        </trans-unit>
        <trans-unit id="1eb7ae9f8a9bc2920efe4766f0b593b1505daa82" translate="yes" xml:space="preserve">
          <source>The compatibility version can be found in the &lt;code&gt;cordovaCompatibilityVersions&lt;/code&gt; attribute of the JSON file served at &lt;code&gt;ROOT_URL/__cordova/manifest.json&lt;/code&gt; during &lt;code&gt;meteor run [ios/android]&lt;/code&gt;.</source>
          <target state="translated">可以在 &lt;code&gt;meteor run [ios/android]&lt;/code&gt; 在 &lt;code&gt;ROOT_URL/__cordova/manifest.json&lt;/code&gt; 中提供的JSON文件的 &lt;code&gt;cordovaCompatibilityVersions&lt;/code&gt; 属性中找到兼容版本。</target>
        </trans-unit>
        <trans-unit id="a46b7120798be4c7bb1b75ec9bb4782f83b13e93" translate="yes" xml:space="preserve">
          <source>The compiler class must implement the &lt;code&gt;processFilesForTarget&lt;/code&gt; method that is given the source files for a target (server or client part of the package/app).</source>
          <target state="translated">编译器类必须实现 &lt;code&gt;processFilesForTarget&lt;/code&gt; 方法，该方法已为目标（包/应用程序的服务器或客户端部分）提供源文件。</target>
        </trans-unit>
        <trans-unit id="1c330f9e1e6edcaea05a56dd5ac7fc6db6980110" translate="yes" xml:space="preserve">
          <source>The computation re-runs, with &lt;code&gt;.subscribe()&lt;/code&gt; being re-called either with the same or different arguments.</source>
          <target state="translated">重新运行计算，使用相同或不同的参数重新调用 &lt;code&gt;.subscribe()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="99af7eab5138d62d319c8d32d956df1c850801eb" translate="yes" xml:space="preserve">
          <source>The connection on which to make the subscription.</source>
          <target state="translated">进行认购的连接。</target>
        </trans-unit>
        <trans-unit id="740a87853b05ceafa44f1bc4728a3d9ee2d2be80" translate="yes" xml:space="preserve">
          <source>The constraint solver is necessary because Meteor&amp;rsquo;s package system is &lt;strong&gt;single-loading&lt;/strong&gt; - that is, you can never have two different versions of the same package loaded side-by-side in the same app. This is particularly useful for packages that include a lot of client-side code, or packages that expect to be singletons.</source>
          <target state="translated">约束求解器是必需的，因为Meteor的软件包系统是&lt;strong&gt;单加载的&lt;/strong&gt; -也就是说，您永远不能在同一应用程序中同时加载同一软件包的两个不同版本。这对于包含大量客户端代码的程序包或期望为单例的程序包特别有用。</target>
        </trans-unit>
        <trans-unit id="cc108241281fb051b81b727df9560c00f149908c" translate="yes" xml:space="preserve">
          <source>The container component created by &lt;code&gt;withTracker&lt;/code&gt; will reactively re-render the wrapped component in response to any changes to &lt;a href=&quot;https://atmospherejs.com/meteor/tracker&quot;&gt;reactive data sources&lt;/a&gt; accessed from inside the function provided to it.</source>
          <target state="translated">&lt;code&gt;withTracker&lt;/code&gt; 创建的容器组件将响应从提供给它的函数内部访问的&lt;a href=&quot;https://atmospherejs.com/meteor/tracker&quot;&gt;反应性数据源的&lt;/a&gt;任何更改来反应性地重新渲染包装的组件。</target>
        </trans-unit>
        <trans-unit id="6e0e7cbaa70b9d07d863354905feeffad0bc332f" translate="yes" xml:space="preserve">
          <source>The contents of a document were previously &lt;code&gt;oldDocument&lt;/code&gt; and are now &lt;code&gt;newDocument&lt;/code&gt;. The position of the changed document is &lt;code&gt;atIndex&lt;/code&gt;.</source>
          <target state="translated">文档的内容以前是 &lt;code&gt;oldDocument&lt;/code&gt; ，现在是 &lt;code&gt;newDocument&lt;/code&gt; 。更改后的文档的位置是 &lt;code&gt;atIndex&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2625b821f53748eb1164c8ce720f3d6dd2c500b0" translate="yes" xml:space="preserve">
          <source>The contents of other application specific client data stores.</source>
          <target state="translated">其他特定应用的客户端数据存储的内容。</target>
        </trans-unit>
        <trans-unit id="ee514a1a330652bd01870bca4f0ea104e8b15fb4" translate="yes" xml:space="preserve">
          <source>The correct place to find details about using Angular with Meteor</source>
          <target state="translated">正确的地方是找到关于使用Angular与Meteor的细节。</target>
        </trans-unit>
        <trans-unit id="f718d72ed150836467e7680a94abb5d448ed0e72" translate="yes" xml:space="preserve">
          <source>The correct property name to use for the API identifier (i.e. &lt;code&gt;clientId&lt;/code&gt; in the above example) depends on the the login service being used, so be sure to use the correct one:</source>
          <target state="translated">用于API标识符的正确属性名称（即上例中的 &lt;code&gt;clientId&lt;/code&gt; ）取决于所使用的登录服务，因此请确保使用正确的属性：</target>
        </trans-unit>
        <trans-unit id="038413d4a88fc127061a29ec58fdae244cf1f95b" translate="yes" xml:space="preserve">
          <source>The current Android emulator tends to be rather slow and can be unstable, so our recommendation is to run your app on a physical device instead.</source>
          <target state="translated">目前的Android模拟器往往相当缓慢,而且可能不稳定,所以我们建议在物理设备上运行你的应用程序,而不是。</target>
        </trans-unit>
        <trans-unit id="3e07947643b580155cf6f80848ebd8e192d5a105" translate="yes" xml:space="preserve">
          <source>The current Android emulator tends to be rather slow and can be unstable. Our recommendation is to run on a physical device or to use an alternative emulator like &lt;a href=&quot;https://www.genymotion.com&quot;&gt;Genymotion&lt;/a&gt;.</source>
          <target state="translated">当前的Android模拟器往往运行缓慢且不稳定。我们的建议是在物理设备上运行，或者使用&lt;a href=&quot;https://www.genymotion.com&quot;&gt;Genymotion&lt;/a&gt;等替代模拟器。</target>
        </trans-unit>
        <trans-unit id="2131933246f6214698b657819a789a6448ec567b" translate="yes" xml:space="preserve">
          <source>The current best practice for deploying web production applications is to concatenate and minify all of your app assets. This lets you add all of the comments and whitespace you want to your source code, and split it into as many files as is necessary without worrying about app performance.</source>
          <target state="translated">目前部署 Web 生产应用程序的最佳实践是将所有的应用程序资产进行串联和最小化。这可以让你在源代码中添加所有你想要的注释和空白,并将其分割成尽可能多的文件,而不用担心应用程序的性能。</target>
        </trans-unit>
        <trans-unit id="21cc63df53564e2881a4fcb1f79cabb884731cbc" translate="yes" xml:space="preserve">
          <source>The current computation, or &lt;code&gt;null&lt;/code&gt; if there isn't one. The current computation is the &lt;a href=&quot;#tracker_computation&quot;&gt;&lt;code&gt;Tracker.Computation&lt;/code&gt;&lt;/a&gt; object created by the innermost active call to &lt;code&gt;Tracker.autorun&lt;/code&gt;, and it's the computation that gains dependencies when reactive data sources are accessed.</source>
          <target state="translated">当前计算，如果没有，则为 &lt;code&gt;null&lt;/code&gt; 。目前的计算是&lt;a href=&quot;#tracker_computation&quot;&gt; &lt;code&gt;Tracker.Computation&lt;/code&gt; &lt;/a&gt;由最里面活动的呼叫创建的对象 &lt;code&gt;Tracker.autorun&lt;/code&gt; ，这是当反应数据源的访问收益依赖的计算。</target>
        </trans-unit>
        <trans-unit id="7993fea7c04218147a82f11b44d87d091661eb83" translate="yes" xml:space="preserve">
          <source>The current interface of &lt;code&gt;{Client,Server}Sink&lt;/code&gt; objects is as follows:</source>
          <target state="translated">&lt;code&gt;{Client,Server}Sink&lt;/code&gt; 对象的当前接口如下：</target>
        </trans-unit>
        <trans-unit id="159bf321dd10d2506790f13dc152068cf32723e4" translate="yes" xml:space="preserve">
          <source>The current route</source>
          <target state="translated">目前的路线</target>
        </trans-unit>
        <trans-unit id="b8daad2b57bb95ce4e96d0430123ddaf6601bace" translate="yes" xml:space="preserve">
          <source>The current user status (&lt;code&gt;Meteor.user()&lt;/code&gt; and &lt;code&gt;Meteor.loggingIn()&lt;/code&gt;).</source>
          <target state="translated">当前用户状态（ &lt;code&gt;Meteor.user()&lt;/code&gt; 和 &lt;code&gt;Meteor.loggingIn()&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="35e8eb02090a8e4baa59367c7ab5ef3d91ad8b02" translate="yes" xml:space="preserve">
          <source>The data context of this instance's latest invocation.</source>
          <target state="translated">本实例最近一次调用的数据上下文。</target>
        </trans-unit>
        <trans-unit id="9c9be1129e2a2dca40064429c01c92c34a444d2b" translate="yes" xml:space="preserve">
          <source>The data context to use, or a function returning a data context.</source>
          <target state="translated">要使用的数据上下文,或返回数据上下文的函数。</target>
        </trans-unit>
        <trans-unit id="edc2b40c85ef4f8f1ca8337a54cb2a5ffbca0e8a" translate="yes" xml:space="preserve">
          <source>The data context to use, or a function returning a data context. If a function is provided, it will be reactively re-run.</source>
          <target state="translated">要使用的数据上下文,或返回数据上下文的函数。如果提供了一个函数,它将被反应性地重新运行。</target>
        </trans-unit>
        <trans-unit id="c791d4cf7c01b8051fca1ec022bd56ffb37e3e85" translate="yes" xml:space="preserve">
          <source>The data returned from publications will often be dependent on the currently logged in user, and perhaps some properties about that user - whether they are an admin, whether they own a certain document, etc.</source>
          <target state="translated">出版物返回的数据往往取决于当前登录的用户,或许还有一些关于该用户的属性--他们是否是管理员,是否拥有某个文档等。</target>
        </trans-unit>
        <trans-unit id="0a0c03db688e73505c62ded0a799de175fe32c90" translate="yes" xml:space="preserve">
          <source>The decisions made and practices outlined in the guide must necessarily be &lt;strong&gt;opinionated&lt;/strong&gt;. Certain best practices will be highlighted and other valid approaches ignored. We aim to reach community consensus around major decisions but there will always be other ways to solve problems when developing your application. We believe it&amp;rsquo;s important to know what the &amp;ldquo;standard&amp;rdquo; way to solve a problem is before branching out to other options. If an alternate approach proves itself superior, then it should make its way into a future version of the guide.</source>
          <target state="translated">必须对本指南中做出的决定和实践进行&lt;strong&gt;总结&lt;/strong&gt;。某些最佳做法将被重点介绍，而其他有效方法将被忽略。我们旨在就主要决策达成社区共识，但是在开发应用程序时，总会有其他方法来解决问题。我们认为，在扩展到其他选项之前，了解解决问题的&amp;ldquo;标准&amp;rdquo;方法很重要。如果一种替代方法证明自己优越，则应将其引入该指南的未来版本中。</target>
        </trans-unit>
        <trans-unit id="7d4f7d958407c1a06736784ae1695c00701ac37c" translate="yes" xml:space="preserve">
          <source>The default create user function simply copies &lt;code&gt;options.profile&lt;/code&gt; into the new user document. Calling &lt;code&gt;onCreateUser&lt;/code&gt; overrides the default hook. This can only be called once.</source>
          <target state="translated">默认的创建用户功能只是将 &lt;code&gt;options.profile&lt;/code&gt; 复制到新的用户文档中。调用 &lt;code&gt;onCreateUser&lt;/code&gt; 会覆盖默认的挂钩。这只能被调用一次。</target>
        </trans-unit>
        <trans-unit id="e2c5cfa48990a96b48af53f2fc3024bbc22eed8a" translate="yes" xml:space="preserve">
          <source>The default id generation technique is &lt;code&gt;'STRING'&lt;/code&gt;.</source>
          <target state="translated">默认的id生成技术是 &lt;code&gt;'STRING'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f8008a9a87d839dbf55ce84f54c0459067f8855a" translate="yes" xml:space="preserve">
          <source>The different types of MongoDB collections in Meteor, and how to use them.</source>
          <target state="translated">Meteor中MongoDB集合的不同类型,以及如何使用它们。</target>
        </trans-unit>
        <trans-unit id="247b0b2ab6a208b9a4bb279c595c176c2523532c" translate="yes" xml:space="preserve">
          <source>The document &lt;code&gt;oldDocument&lt;/code&gt; is no longer in the result set. It used to be at position &lt;code&gt;atIndex&lt;/code&gt;.</source>
          <target state="translated">文档 &lt;code&gt;oldDocument&lt;/code&gt; 不再位于结果集中。它曾经在 &lt;code&gt;atIndex&lt;/code&gt; 的位置。</target>
        </trans-unit>
        <trans-unit id="3f0e90b6931b50def96a79f404db488a08193c82" translate="yes" xml:space="preserve">
          <source>The document identified by &lt;code&gt;id&lt;/code&gt; changed its position in the ordered result set, and now appears before the document identified by &lt;code&gt;before&lt;/code&gt;.</source>
          <target state="translated">由 &lt;code&gt;id&lt;/code&gt; 标识的文档更改了其在已排序结果集中的位置，现在出现在由 &lt;code&gt;before&lt;/code&gt; 标识的文档之前。</target>
        </trans-unit>
        <trans-unit id="0dd89a7a2b537dfcdd001e0d4bd5f90e6ea11ef4" translate="yes" xml:space="preserve">
          <source>The document identified by &lt;code&gt;id&lt;/code&gt; has changed. &lt;code&gt;fields&lt;/code&gt; contains the changed fields with their new values. If a field was removed from the document then it will be present in &lt;code&gt;fields&lt;/code&gt; with a value of &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;id&lt;/code&gt; 标识的文档已更改。 &lt;code&gt;fields&lt;/code&gt; 包含更改后的字段及其新值。如果从文档中删除了某个字段，则该 &lt;code&gt;fields&lt;/code&gt; 将出现在值为 &lt;code&gt;undefined&lt;/code&gt; 的字段中。</target>
        </trans-unit>
        <trans-unit id="a624fb59fe57070dc297d97890126e9ee977185d" translate="yes" xml:space="preserve">
          <source>The document identified by &lt;code&gt;id&lt;/code&gt; was removed from the result set.</source>
          <target state="translated">由 &lt;code&gt;id&lt;/code&gt; 标识的文档已从结果集中删除。</target>
        </trans-unit>
        <trans-unit id="45589e64c975888c317277bc78ee35890c7019c5" translate="yes" xml:space="preserve">
          <source>The document to insert. May not yet have an _id attribute, in which case Meteor will generate one for you.</source>
          <target state="translated">要插入的文件。可能还没有一个_id属性,在这种情况下,Meteor将为你生成一个。</target>
        </trans-unit>
        <trans-unit id="517b6c99561135b8cbfdab91517658497ea8d515" translate="yes" xml:space="preserve">
          <source>The documentation, usage instructions, and a starter application can be found in the &lt;a href=&quot;http://dev.apollodata.com/core/meteor.html&quot;&gt;&lt;code&gt;apollo&lt;/code&gt; section&lt;/a&gt; of the &lt;a href=&quot;http://dev.apollodata.com/&quot;&gt;Apollo Developer docs&lt;/a&gt;.</source>
          <target state="translated">文档，使用说明和入门应用程序可以在&lt;a href=&quot;http://dev.apollodata.com/&quot;&gt;Apollo Developer docs&lt;/a&gt;的&lt;a href=&quot;http://dev.apollodata.com/core/meteor.html&quot;&gt; &lt;code&gt;apollo&lt;/code&gt; 部分&lt;/a&gt;中找到。</target>
        </trans-unit>
        <trans-unit id="aecd209e0c60f336e8759e3bfcf604328d1467f9" translate="yes" xml:space="preserve">
          <source>The domain or address of the Meteor server to connect to for DDP and hot code push of new versions.</source>
          <target state="translated">要连接到Meteor服务器的域名或地址,用于DDP和新版本的热码推送。</target>
        </trans-unit>
        <trans-unit id="9a28cb88919fcb07c997e5e68538f81d1f539252" translate="yes" xml:space="preserve">
          <source>The dynamic &lt;code&gt;import(...)&lt;/code&gt; statement is a complimentary method to the static &lt;code&gt;import&lt;/code&gt; technique of requiring a module. While a statically</source>
          <target state="translated">动态 &lt;code&gt;import(...)&lt;/code&gt; 语句是对需要模块的静态 &lt;code&gt;import&lt;/code&gt; 技术的补充方法。虽然是静态的</target>
        </trans-unit>
        <trans-unit id="6658088a6e39e457724f921b9b53571618b0a1a3" translate="yes" xml:space="preserve">
          <source>The easiest way to get a working Android development environment is by installing &lt;a href=&quot;http://developer.android.com/sdk/index.html&quot;&gt;Android Studio&lt;/a&gt;, which offers a setup wizard on first launch that installs the Android SDK for you, and downloads a default set of tools, platforms, and other components that you will need to start developing.</source>
          <target state="translated">获得有效的Android开发环境的最简单方法是安装&lt;a href=&quot;http://developer.android.com/sdk/index.html&quot;&gt;Android Studio&lt;/a&gt;，该工具在首次启动时提供安装向导，该向导将为您安装Android SDK，并下载您需要的默认工具，平台和其他组件集。开始发展。</target>
        </trans-unit>
        <trans-unit id="5e46780139e2e7cbdd276acdef814c73f6776661" translate="yes" xml:space="preserve">
          <source>The easiest way to operate your app with confidence is to use Galaxy, the service built by Meteor Development Group specifically to run Meteor apps.</source>
          <target state="translated">最简单的方法就是放心的操作你的应用,使用Galaxy,Galaxy是Meteor开发集团专门为运行Meteor应用而打造的服务。</target>
        </trans-unit>
        <trans-unit id="654fba81e3a9c2aa1c5bf9b6a56018ac01de8f0c" translate="yes" xml:space="preserve">
          <source>The element currently handling the event. This is the element that matched the selector in the event map. For events that bubble, it may be &lt;code&gt;target&lt;/code&gt; or an ancestor of &lt;code&gt;target&lt;/code&gt;, and its value changes as the event bubbles.</source>
          <target state="translated">当前处理事件的元素。这是与事件映射中的选择器匹配的元素。对于事件气泡，也可能是 &lt;code&gt;target&lt;/code&gt; 或的祖先 &lt;code&gt;target&lt;/code&gt; ，其值变化作为事件气泡。</target>
        </trans-unit>
        <trans-unit id="07d9edbe44b8b93d5155bab0d32f17818f6f99b4" translate="yes" xml:space="preserve">
          <source>The element that originated the event.</source>
          <target state="translated">发起该事件的元素。</target>
        </trans-unit>
        <trans-unit id="6be9d3326749416c1be6ea1db2002aad21872641" translate="yes" xml:space="preserve">
          <source>The email address to look for</source>
          <target state="translated">要查找的电子邮件地址</target>
        </trans-unit>
        <trans-unit id="3743afb81fcad8ac1416b9103eed387633f80c05" translate="yes" xml:space="preserve">
          <source>The email address to remove.</source>
          <target state="translated">要删除的电子邮件地址。</target>
        </trans-unit>
        <trans-unit id="9eda1a7cbc691a218c11f872db26c1738104cfe2" translate="yes" xml:space="preserve">
          <source>The email address to send a password reset link.</source>
          <target state="translated">发送密码重置链接的电子邮件地址。</target>
        </trans-unit>
        <trans-unit id="7ac844ecc62bf24b7a12b30517f37c5a73fd2756" translate="yes" xml:space="preserve">
          <source>The email is generated using the email templates from &lt;a href=&quot;http://docs.meteor.com/#/full/accounts_emailtemplates&quot;&gt;Accounts.emailTemplates&lt;/a&gt;, and include links generated with &lt;code&gt;Accounts.urls&lt;/code&gt;. We&amp;rsquo;ll go into more detail about customizing the email content and URL later.</source>
          <target state="translated">电子邮件是使用&lt;a href=&quot;http://docs.meteor.com/#/full/accounts_emailtemplates&quot;&gt;Accounts.emailTemplates中&lt;/a&gt;的电子邮件模板生成的，并且包括使用 &lt;code&gt;Accounts.urls&lt;/code&gt; 生成的链接。稍后，我们将详细介绍自定义电子邮件内容和URL。</target>
        </trans-unit>
        <trans-unit id="567d93adeeb375b1b5fad532439a099741568237" translate="yes" xml:space="preserve">
          <source>The enclosing View that caused this View to be rendered, if any.</source>
          <target state="translated">导致该视图被渲染的包围视图(如果有的话)。</target>
        </trans-unit>
        <trans-unit id="a39bb6a8c9c2bfc0c4251979c3ae716828e4f6d0" translate="yes" xml:space="preserve">
          <source>The encryption key is 16 bytes, encoded in Base64.</source>
          <target state="translated">加密密钥为16个字节,以Base64编码。</target>
        </trans-unit>
        <trans-unit id="7a139e0d0e150d967403ab83e938806c4dce6822" translate="yes" xml:space="preserve">
          <source>The error to pass to the client.</source>
          <target state="translated">要传递给客户端的错误。</target>
        </trans-unit>
        <trans-unit id="12cd803332783618763b1137bc79bb163ecafb8d" translate="yes" xml:space="preserve">
          <source>The estimated time of the next reconnection attempt. To turn this into an interval until the next reconnection, use &lt;code&gt;retryTime - (new Date()).getTime()&lt;/code&gt;. This key will be set only when &lt;code&gt;status&lt;/code&gt; is &lt;code&gt;waiting&lt;/code&gt;.</source>
          <target state="translated">下一次重新连接尝试的估计时间。要将其变为间隔直到下一次重新连接，请使用 &lt;code&gt;retryTime - (new Date()).getTime()&lt;/code&gt; 。仅当 &lt;code&gt;status&lt;/code&gt; 为 &lt;code&gt;waiting&lt;/code&gt; 时才设置此键。</target>
        </trans-unit>
        <trans-unit id="6eb6952418b5ed3ce89f3c1265f9e982a83f1479" translate="yes" xml:space="preserve">
          <source>The event&amp;rsquo;s type, such as &amp;ldquo;click&amp;rdquo;, &amp;ldquo;blur&amp;rdquo; or &amp;ldquo;keypress&amp;rdquo;.</source>
          <target state="translated">事件的类型，例如&amp;ldquo;单击&amp;rdquo;，&amp;ldquo;模糊&amp;rdquo;或&amp;ldquo;按键&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="dacbc84d4f22d4a66057c29a4639052e47783b20" translate="yes" xml:space="preserve">
          <source>The factory function passed to the &lt;code&gt;EJSON.addType&lt;/code&gt; method should create an instance of our custom type and initialize it with values from an object passed as the first argument of the factory function. Here is an example:</source>
          <target state="translated">传递给 &lt;code&gt;EJSON.addType&lt;/code&gt; 方法的工厂函数应创建我们自定义类型的实例，并使用作为工厂函数的第一个参数传递的对象中的值对其进行初始化。这是一个例子：</target>
        </trans-unit>
        <trans-unit id="92ba2c3871355e6bdd10259faea23c325aea857a" translate="yes" xml:space="preserve">
          <source>The fields in the document that have changed, together with their new values. If a field is not present in &lt;code&gt;fields&lt;/code&gt; it was left unchanged; if it is present in &lt;code&gt;fields&lt;/code&gt; and has a value of &lt;code&gt;undefined&lt;/code&gt; it was removed from the document. If &lt;code&gt;_id&lt;/code&gt; is present it is ignored.</source>
          <target state="translated">文档中已更改的字段及其新值。如果字段没有出现在 &lt;code&gt;fields&lt;/code&gt; 它保持不变; 如果它存在于 &lt;code&gt;fields&lt;/code&gt; 且值 &lt;code&gt;undefined&lt;/code&gt; 则将其从文档中删除。如果存在 &lt;code&gt;_id&lt;/code&gt; ，它将被忽略。</target>
        </trans-unit>
        <trans-unit id="1439fc236a1522eefd719270b3de11c81f763fdc" translate="yes" xml:space="preserve">
          <source>The fields in the new document. If &lt;code&gt;_id&lt;/code&gt; is present it is ignored.</source>
          <target state="translated">新文档中的字段。如果存在 &lt;code&gt;_id&lt;/code&gt; ，它将被忽略。</target>
        </trans-unit>
        <trans-unit id="daf7b75d0ac7c5652e53090e2da5ea8c9d128776" translate="yes" xml:space="preserve">
          <source>The file extension that this plugin should handle, without the first dot. Examples: &lt;code&gt;&quot;coffee&quot;&lt;/code&gt;, &lt;code&gt;&quot;coffee.md&quot;&lt;/code&gt;.</source>
          <target state="translated">该插件应处理的文件扩展名，不带第一个点。例如： &lt;code&gt;&quot;coffee&quot;&lt;/code&gt; ， &lt;code&gt;&quot;coffee.md&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e9d994f1d29813d3ea3225942ca3ca1433446e74" translate="yes" xml:space="preserve">
          <source>The file serving mechanism used in Meteor allows for local file access through URLs of the form &lt;code&gt;http://localhost:&amp;lt;port&amp;gt;/local-filesystem/&amp;lt;path&amp;gt;&lt;/code&gt;) however. You can construct these file system URLs manually, or use &lt;code&gt;WebAppLocalServer.localFileSystemUrl()&lt;/code&gt; to convert &lt;code&gt;file://&lt;/code&gt; URLs. You can use this to convert URLs received from plugins like &lt;code&gt;cordova-plugin-file&lt;/code&gt; and &lt;code&gt;cordova-plugin-camera&lt;/code&gt; for example.</source>
          <target state="translated">但是，Meteor中使用的文件服务机制允许通过 &lt;code&gt;http://localhost:&amp;lt;port&amp;gt;/local-filesystem/&amp;lt;path&amp;gt;&lt;/code&gt; 形式的URL访问本地文件。您可以手动构造这些文件系统URL，或使用 &lt;code&gt;WebAppLocalServer.localFileSystemUrl()&lt;/code&gt; 转换 &lt;code&gt;file://&lt;/code&gt; URL。您可以使用它来转换从例如 &lt;code&gt;cordova-plugin-file&lt;/code&gt; 和 &lt;code&gt;cordova-plugin-camera&lt;/code&gt; 之类的插件收到的URL 。</target>
        </trans-unit>
        <trans-unit id="4fc2a53e18d567493a7dab3e0e1c62a5ab75f9af" translate="yes" xml:space="preserve">
          <source>The first identifier in a path is resolved in one of two ways:</source>
          <target state="translated">路径中的第一个标识符有两种解决方式之一。</target>
        </trans-unit>
        <trans-unit id="fc45df8317aed71cc42c885955e9514593eba5f6" translate="yes" xml:space="preserve">
          <source>The first node of the View&amp;rsquo;s rendered content. Note that this may be a text node. Requires that the View be rendered. If the View rendered to zero DOM nodes, it may be a placeholder node (comment or text node). The DOM extent of a View consists of the nodes between &lt;code&gt;view.firstNode()&lt;/code&gt; and &lt;code&gt;view.lastNode()&lt;/code&gt;, inclusive.</source>
          <target state="translated">视图的渲染内容的第一个节点。请注意，这可能是文本节点。要求渲染视图。如果将View呈现为零DOM节点，则它可能是一个占位符节点（注释或文本节点）。View的DOM范围由 &lt;code&gt;view.firstNode()&lt;/code&gt; 和 &lt;code&gt;view.lastNode()&lt;/code&gt; 之间的节点组成。</target>
        </trans-unit>
        <trans-unit id="9593cc38f7d0efced546ec7c49927969fdd40020" translate="yes" xml:space="preserve">
          <source>The first thing to consider here is if you actually need to care about your component re-rendering. Blaze is optimized so that it typically doesn&amp;rsquo;t matter if a component is re-rendered even if it strictly shouldn&amp;rsquo;t. If you make sure that your helpers are cheap to run and consequently rendering is not expensive, then you probably don&amp;rsquo;t need to worry about this.</source>
          <target state="translated">这里首先要考虑的是您是否真的需要关心组件的重新渲染。Blaze已进行了优化，因此即使严格不建议重新渲染组件也通常无关紧要。如果确保您的助手运行起来便宜，因此渲染也不昂贵，那么您可能不必为此担心。</target>
        </trans-unit>
        <trans-unit id="584ecaca2c8bcc54e95a7d1cdec2c8b572958b24" translate="yes" xml:space="preserve">
          <source>The first thing to understand about &lt;code&gt;useraccounts&lt;/code&gt; is that the core accounts management logic is independent of the HTML templates and routing packages. This means you can use &lt;a href=&quot;https://atmospherejs.com/useraccounts/core&quot;&gt;&lt;code&gt;useraccounts:core&lt;/code&gt;&lt;/a&gt; to build your own set of login templates. Generally, you&amp;rsquo;ll want to pick one login template package and one login routing package. The options for templates include:</source>
          <target state="translated">要了解的第一件事 &lt;code&gt;useraccounts&lt;/code&gt; 是核心账户管理逻辑是独立的HTML模板和路由包。这意味着您可以使用&lt;a href=&quot;https://atmospherejs.com/useraccounts/core&quot;&gt; &lt;code&gt;useraccounts:core&lt;/code&gt; &lt;/a&gt;来构建自己的登录模板集。通常，您需要选择一个登录模板包和一个登录路由包。模板的选项包括：</target>
        </trans-unit>
        <trans-unit id="a7faa87860bf4abfc4c966f5fc83a212ecb9abb9" translate="yes" xml:space="preserve">
          <source>The first top-level DOM node in this template instance.</source>
          <target state="translated">该模板实例中的第一个顶层DOM节点。</target>
        </trans-unit>
        <trans-unit id="f1ed35800128020fe247eb673ce130f63b49ace7" translate="yes" xml:space="preserve">
          <source>The following are some of the more commonly used commands in the &lt;code&gt;meteor&lt;/code&gt; command-line tool. This is just an overview and does not mention every command or every option to every command; for more details, use the &lt;code&gt;meteor help&lt;/code&gt; command.</source>
          <target state="translated">以下是 &lt;code&gt;meteor&lt;/code&gt; 命令行工具中一些更常用的命令。这只是一个概述，并没有提及每个命令或每个命令的每个选项。有关更多详细信息，请使用 &lt;code&gt;meteor help&lt;/code&gt; 命令。</target>
        </trans-unit>
        <trans-unit id="b8f068eb49d38bd41b15412d2114fd69d1623795" translate="yes" xml:space="preserve">
          <source>The following directories are also not loaded as part of your app code:</source>
          <target state="translated">以下目录也没有作为您的应用程序代码的一部分被加载。</target>
        </trans-unit>
        <trans-unit id="f458bb9e4e3f205db3d2788a44adc0955a225cb2" translate="yes" xml:space="preserve">
          <source>The following patterns can be used as pattern arguments to &lt;a href=&quot;#check&quot;&gt;&lt;code&gt;check&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;Match.test&lt;/code&gt;:</source>
          <target state="translated">以下模式可用作&lt;a href=&quot;#check&quot;&gt; &lt;code&gt;check&lt;/code&gt; &lt;/a&gt;和 &lt;code&gt;Match.test&lt;/code&gt; 的模式参数：</target>
        </trans-unit>
        <trans-unit id="01b079166094902f236986e058597d9c5b4c6829" translate="yes" xml:space="preserve">
          <source>The following properties and methods are available on Blaze.View:</source>
          <target state="translated">Blaze.View上有以下属性和方法。</target>
        </trans-unit>
        <trans-unit id="bc25416eed36dd3efad8f9cdadf6ef42aab4bbd1" translate="yes" xml:space="preserve">
          <source>The following properties and methods are available on the event object passed to handlers:</source>
          <target state="translated">传递给处理程序的事件对象上有以下属性和方法。</target>
        </trans-unit>
        <trans-unit id="b02444ac0e947a21897753e15438db3b2b3a71f9" translate="yes" xml:space="preserve">
          <source>The function is invoked immediately, at which point it may alert and stop right away if &lt;code&gt;shouldAlert&lt;/code&gt; is already true. If not, the function is run again when &lt;code&gt;shouldAlert&lt;/code&gt; becomes true.</source>
          <target state="translated">该函数将立即被调用，此时，如果 &lt;code&gt;shouldAlert&lt;/code&gt; 已经为true ，它可能会立即发出警报并停止。如果不是，则在 &lt;code&gt;shouldAlert&lt;/code&gt; 变为true 时再次运行该函数。</target>
        </trans-unit>
        <trans-unit id="c5fc97ab72920fe5fa5a9a758c687e1ae9ce53c0" translate="yes" xml:space="preserve">
          <source>The function returns an object with methods to &lt;a href=&quot;#insert&quot;&gt;&lt;code&gt;insert&lt;/code&gt;&lt;/a&gt; documents in the collection, &lt;a href=&quot;#update&quot;&gt;&lt;code&gt;update&lt;/code&gt;&lt;/a&gt; their properties, and &lt;a href=&quot;#remove&quot;&gt;&lt;code&gt;remove&lt;/code&gt;&lt;/a&gt; them, and to &lt;a href=&quot;#find&quot;&gt;&lt;code&gt;find&lt;/code&gt;&lt;/a&gt; the documents in the collection that match arbitrary criteria. The way these methods work is compatible with the popular Mongo database API. The same database API works on both the client and the server (see below).</source>
          <target state="translated">该函数返回一个对象，该对象的方法可以&lt;a href=&quot;#insert&quot;&gt; &lt;code&gt;insert&lt;/code&gt; &lt;/a&gt;文档插入集合中，&lt;a href=&quot;#update&quot;&gt; &lt;code&gt;update&lt;/code&gt; &lt;/a&gt;其属性并&lt;a href=&quot;#remove&quot;&gt; &lt;code&gt;remove&lt;/code&gt; &lt;/a&gt;它们，以及在集合中&lt;a href=&quot;#find&quot;&gt; &lt;code&gt;find&lt;/code&gt; &lt;/a&gt;与任意条件匹配的文档。这些方法的工作方式与流行的Mongo数据库API兼容。客户端和服务器上都可以使用相同的数据库API（请参见下文）。</target>
        </trans-unit>
        <trans-unit id="00960f5c749ac85fa276f4981b76cea9b5cf20e7" translate="yes" xml:space="preserve">
          <source>The function should return the user document (either the one passed in or a newly-created object) with whatever modifications are desired. The returned document is inserted directly into the &lt;a href=&quot;#meteor_users&quot;&gt;&lt;code&gt;Meteor.users&lt;/code&gt;&lt;/a&gt; collection.</source>
          <target state="translated">该函数应返回用户文档（无论是传入的文档还是新创建的对象），都需要进行任何修改。返回的文档将直接插入&lt;a href=&quot;#meteor_users&quot;&gt; &lt;code&gt;Meteor.users&lt;/code&gt; &lt;/a&gt;集合中。</target>
        </trans-unit>
        <trans-unit id="25f8f1273d5558936c16f7f636b59e3500409771" translate="yes" xml:space="preserve">
          <source>The function to call when a new DDP connection is established.</source>
          <target state="translated">建立新的DDP连接时调用的函数。</target>
        </trans-unit>
        <trans-unit id="a381d8d1cd22b68668676a7e01122fcafe1c6552" translate="yes" xml:space="preserve">
          <source>The function to call. It is given two arguments:</source>
          <target state="translated">要调用的函数。它有两个参数。</target>
        </trans-unit>
        <trans-unit id="4137a187bc9d506f095cd90f857f7ad1d0d546d3" translate="yes" xml:space="preserve">
          <source>The function to call. It will be called with a single argument, the &lt;a href=&quot;#ddp_connect&quot;&gt;connection object&lt;/a&gt; that is reconnecting.</source>
          <target state="translated">调用的函数。将使用单个参数（正在重新连接的&lt;a href=&quot;#ddp_connect&quot;&gt;连接对象）&lt;/a&gt;调用该参数。</target>
        </trans-unit>
        <trans-unit id="4536fc32a9148981dd5404f4b2e238b1332cdacf" translate="yes" xml:space="preserve">
          <source>The function to run</source>
          <target state="translated">要运行的功能</target>
        </trans-unit>
        <trans-unit id="6a6c8ac9b40bb186fd447ca19470ac35f142a0c8" translate="yes" xml:space="preserve">
          <source>The function to run. It receives one argument: a Tracker.Computation object.</source>
          <target state="translated">要运行的函数。它接收一个参数:一个Tracker.Computation对象。</target>
        </trans-unit>
        <trans-unit id="ea0d21bc45812b570af7457f46863740e4deaeee" translate="yes" xml:space="preserve">
          <source>The function to run. It receives one argument: the Computation object that will be returned.</source>
          <target state="translated">要运行的函数。它接收一个参数:将返回的计算对象。</target>
        </trans-unit>
        <trans-unit id="faffbe39cd94e8cfe5c69f1c6e0a9a8ffb6d19db" translate="yes" xml:space="preserve">
          <source>The function you pass will be called with two arguments: &lt;code&gt;options&lt;/code&gt; and &lt;code&gt;user&lt;/code&gt;. The &lt;code&gt;options&lt;/code&gt; argument comes from &lt;a href=&quot;#accounts_createuser&quot;&gt;&lt;code&gt;Accounts.createUser&lt;/code&gt;&lt;/a&gt; for password-based users or from an external service login flow. &lt;code&gt;options&lt;/code&gt; may come from an untrusted client so make sure to validate any values you read from it. The &lt;code&gt;user&lt;/code&gt; argument is created on the server and contains a proposed user object with all the automatically generated fields required for the user to log in, including the &lt;code&gt;_id&lt;/code&gt;.</source>
          <target state="translated">您传递的函数将使用两个参数调用： &lt;code&gt;options&lt;/code&gt; 和 &lt;code&gt;user&lt;/code&gt; 。该 &lt;code&gt;options&lt;/code&gt; 的说法来自&lt;a href=&quot;#accounts_createuser&quot;&gt; &lt;code&gt;Accounts.createUser&lt;/code&gt; &lt;/a&gt;的基于密码的用户或从外部服务登录流程。 &lt;code&gt;options&lt;/code&gt; 可能来自不受信任的客户端，因此请确保验证从其中读取的所有值。的 &lt;code&gt;user&lt;/code&gt; 参数是在服务器上创建，并包含与所有登录所需的用户自动生成的字段，包括一个提议的用户对象 &lt;code&gt;_id&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fd446fbeb8bacd739ba69b7eae72ca032e711e1b" translate="yes" xml:space="preserve">
          <source>The global Meteor server context and every method and publication initialize a new fiber so that they can run concurrently. Many Meteor APIs, for example collections, rely on running inside a fiber. They also rely on an internal Meteor mechanism that tracks server &amp;ldquo;environment&amp;rdquo; state, like the currently executing method. This means you need to initialize your own fiber and environment to use asynchronous Node code inside a Meteor app. Let&amp;rsquo;s look at an example of some code that won&amp;rsquo;t work, using the code example from the &lt;a href=&quot;https://github.com/mikedeboer/node-github&quot;&gt;node-github repository&lt;/a&gt;:</source>
          <target state="translated">全局Meteor服务器上下文以及每种方法和发布都会初始化新的光纤，以便它们可以同时运行。许多Meteor API（例如集合）都依赖于在光纤内部运行。它们还依赖于内部Meteor机制，该机制可以跟踪服务器的&amp;ldquo;环境&amp;rdquo;状态，就像当前执行的方法一样。这意味着您需要初始化自己的光纤和环境以在Meteor应用程序中使用异步Node代码。我们使用&lt;a href=&quot;https://github.com/mikedeboer/node-github&quot;&gt;node-github存储库中&lt;/a&gt;的代码示例来看一些无法使用的代码示例：</target>
        </trans-unit>
        <trans-unit id="b53a8d04298b3864946e232b02e320f299d1060f" translate="yes" xml:space="preserve">
          <source>The globals are passed in the options object so that the linters can omit the warnings about the package imports that look like global variables.</source>
          <target state="translated">在选项对象中传递了globals,这样linters就可以省略关于看起来像全局变量的包导入的警告。</target>
        </trans-unit>
        <trans-unit id="06a7132664b40248286c2cf32b5fb7c2748ae238" translate="yes" xml:space="preserve">
          <source>The good news is that Promises can be used with the new ES2015 &lt;code&gt;async/await&lt;/code&gt; syntax (available in the &lt;code&gt;ecmascript&lt;/code&gt; package since Meteor 1.3) in a natural and synchronous-looking style on both the client and the server.</source>
          <target state="translated">好消息是，Promises可以在客户端和服务器上以自然且具有同步外观的样式与新的ES2015 &lt;code&gt;async/await&lt;/code&gt; 语法（自Meteor 1.3起在 &lt;code&gt;ecmascript&lt;/code&gt; 包中可用）一起使用。</target>
        </trans-unit>
        <trans-unit id="dca7a84b25430a74537ddd3adccb73d27ffe3d55" translate="yes" xml:space="preserve">
          <source>The guide also includes sample applications created with Angular, React, Vue, and Blaze&amp;mdash;all written in TypeScript. See the code &lt;a href=&quot;https://github.com/birkskyum/meteor-typescript-samples&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">该指南还包括使用Angular，React，Vue和Blaze创建的示例应用程序，这些应用程序均以TypeScript编写。在&lt;a href=&quot;https://github.com/birkskyum/meteor-typescript-samples&quot;&gt;这里&lt;/a&gt;查看代码。</target>
        </trans-unit>
        <trans-unit id="637199bf494276120c5fbbfac4671918711cf1b1" translate="yes" xml:space="preserve">
          <source>The guide is targeted towards intermediate developers that have some familiarity with JavaScript, the Meteor platform, and web development in general. If you are just getting started with Meteor, we recommend starting with the &lt;a href=&quot;https://www.meteor.com/tutorials/blaze/creating-an-app&quot;&gt;official tutorial&lt;/a&gt;.</source>
          <target state="translated">该指南针对的是对JavaScript，Meteor平台和一般Web开发有所了解的中间开发人员。如果您刚开始使用Meteor，建议您从&lt;a href=&quot;https://www.meteor.com/tutorials/blaze/creating-an-app&quot;&gt;官方教程开始&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="02872d00bba492451f9d7a01ba71c7f54ca30435" translate="yes" xml:space="preserve">
          <source>The handle returned by &lt;code&gt;Meteor.setInterval&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Meteor.setInterval&lt;/code&gt; 返回的句柄</target>
        </trans-unit>
        <trans-unit id="b73edf919779af977d5b21d29da5337b539a99f7" translate="yes" xml:space="preserve">
          <source>The handle returned by &lt;code&gt;Meteor.setTimeout&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Meteor.setTimeout&lt;/code&gt; 返回的句柄</target>
        </trans-unit>
        <trans-unit id="32dd1bcb0d7fab3d53fcd4d7bf060d5dd00ba3e5" translate="yes" xml:space="preserve">
          <source>The handler function receives two arguments: &lt;code&gt;event&lt;/code&gt;, an object with information about the event, and &lt;code&gt;template&lt;/code&gt;, a &lt;a href=&quot;#Template-instances&quot;&gt;template instance&lt;/a&gt; for the template where the handler is defined. The handler also receives some additional context data in &lt;code&gt;this&lt;/code&gt;, depending on the context of the current element handling the event. In a template, an element&amp;rsquo;s context is the data context where that element occurs, which is set by block helpers such as &lt;code&gt;#with&lt;/code&gt; and &lt;code&gt;#each&lt;/code&gt;.</source>
          <target state="translated">处理程序函数接收两个参数： &lt;code&gt;event&lt;/code&gt; （具有有关事件信息的对象）和 &lt;code&gt;template&lt;/code&gt; （定义处理程序的模板的&lt;a href=&quot;#Template-instances&quot;&gt;模板实例）&lt;/a&gt;。处理程序还会在 &lt;code&gt;this&lt;/code&gt; 接收一些其他上下文数据，这取决于处理事件的当前元素的上下文。在模板中，元素的上下文是该元素所在的数据上下文，由诸如 &lt;code&gt;#with&lt;/code&gt; 和 &lt;code&gt;#each&lt;/code&gt; 的块帮助程序设置。</target>
        </trans-unit>
        <trans-unit id="f6e0376def06813eb38f25196ebac8ff4d53d7e8" translate="yes" xml:space="preserve">
          <source>The helper function itself.</source>
          <target state="translated">助手功能本身。</target>
        </trans-unit>
        <trans-unit id="893f4536b2fef4324989d08558e5e7b6b4f3a8f6" translate="yes" xml:space="preserve">
          <source>The helper&amp;rsquo;s implementation can access the current data context as &lt;code&gt;this&lt;/code&gt;.</source>
          <target state="translated">助手的实现可以访问当前数据上下文 &lt;code&gt;this&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7beb40c5f9b25a82388e468937e0480879ed1acc" translate="yes" xml:space="preserve">
          <source>The id of the user that made this method call, or &lt;code&gt;null&lt;/code&gt; if no user was logged in.</source>
          <target state="translated">调用此方法的用户的ID；如果没有用户登录，则返回 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3c3d6519aed2e24a46dcc82ff3d5453e2efa97ed" translate="yes" xml:space="preserve">
          <source>The id of the user to send email to.</source>
          <target state="translated">要发送邮件的用户ID。</target>
        </trans-unit>
        <trans-unit id="c984f1a5985da0663c84dd201c8b9bd65398c096" translate="yes" xml:space="preserve">
          <source>The id of the user to update.</source>
          <target state="translated">要更新的用户的ID。</target>
        </trans-unit>
        <trans-unit id="22bb0cd5e6ef4498df5368ed05bad68ba985f028" translate="yes" xml:space="preserve">
          <source>The idea of the staging environment is to provide a non-user-visible test environment that is as close as possible to production in terms of infrastructure. It&amp;rsquo;s common for issues to appear with new code on the production infrastructure that just don&amp;rsquo;t happen in a development environment. A very simple example is issues that involve latency between the client and server&amp;mdash;connecting to a local development server with tiny latencies, you just may never see such an issue.</source>
          <target state="translated">暂存环境的想法是提供一个对用户不可见的测试环境，该环境在基础结构方面尽可能地接近生产环境。在生产基础架构上出现新代码的问题很常见，而在开发环境中根本不会发生。一个非常简单的示例就是涉及客户端和服务器之间的延迟的问题-以很小的延迟连接到本地开发服务器，您可能永远不会看到这样的问题。</target>
        </trans-unit>
        <trans-unit id="001061d23a95f7611790e74787aacc1f359fe589" translate="yes" xml:space="preserve">
          <source>The identifier of the plugin you want to configure.</source>
          <target state="translated">你要配置的插件的标识符。</target>
        </trans-unit>
        <trans-unit id="df92b794d4b888ef989636e3e383472a156d5358" translate="yes" xml:space="preserve">
          <source>The implication of the above is that we need to create more collections to contain sub-documents. In the case of the Todos application, we need both a &lt;code&gt;Lists&lt;/code&gt; collection and a &lt;code&gt;Todos&lt;/code&gt; collection to contain each list&amp;rsquo;s todo items. Consequently we need to do some things that you&amp;rsquo;d typically associate with a SQL database, like using foreign keys (&lt;code&gt;todo.listId&lt;/code&gt;) to associate one document with another.</source>
          <target state="translated">上面的含义是我们需要创建更多集合以包含子文档。对于Todos应用程序，我们需要一个 &lt;code&gt;Lists&lt;/code&gt; 集合和一个 &lt;code&gt;Todos&lt;/code&gt; 集合来包含每个列表的待办事项。因此，我们需要做一些您通常与SQL数据库关联的事情，例如使用外键（ &lt;code&gt;todo.listId&lt;/code&gt; ）将一个文档与另一个文档关联。</target>
        </trans-unit>
        <trans-unit id="39615301fcd77be1815bf649443edd765568538f" translate="yes" xml:space="preserve">
          <source>The initial value to set. &lt;code&gt;equalsFunc&lt;/code&gt; is ignored when setting the initial value.</source>
          <target state="translated">要设置的初始值。设置初始值时， &lt;code&gt;equalsFunc&lt;/code&gt; 被忽略。</target>
        </trans-unit>
        <trans-unit id="631bf9914cea7c7ce5a67604f6dd1f72c8e049d4" translate="yes" xml:space="preserve">
          <source>The inserted HTML must consist of balanced HTML tags. You can&amp;rsquo;t, for example, insert &lt;code&gt;&quot;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&quot;&lt;/code&gt; to close an existing div and open a new one.</source>
          <target state="translated">插入的HTML必须包含平衡的HTML标签。例如，您不能插入 &lt;code&gt;&quot;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&quot;&lt;/code&gt; 来关闭现有的div并打开一个新的div。</target>
        </trans-unit>
        <trans-unit id="cf59184c506e87f22cd7c9a7c19cf83ce4599ecd" translate="yes" xml:space="preserve">
          <source>The issue with this schema is that due to the DDP behavior just mentioned, each change to &lt;em&gt;any&lt;/em&gt; todo item in a list will require sending the &lt;em&gt;entire&lt;/em&gt; set of todos for that list over the network. This is because DDP has no concept of &amp;ldquo;change the &lt;code&gt;text&lt;/code&gt; field of the 3rd item in the field called &lt;code&gt;todos&lt;/code&gt;&amp;ldquo;, simply &amp;ldquo;change the field called &lt;code&gt;todos&lt;/code&gt; to a totally new array&amp;rdquo;.</source>
          <target state="translated">这种模式的问题在于，由于刚才提到的DDP行为，对列表中&lt;em&gt;任何&lt;/em&gt;待办事项的每次更改都需要通过网络发送该列表的&lt;em&gt;整个&lt;/em&gt;待办事项集。这是因为DDP没有&amp;ldquo;将名为 &lt;code&gt;todos&lt;/code&gt; 的字段中的第三项的 &lt;code&gt;text&lt;/code&gt; 字段更改&amp;rdquo;的概念，而只是&amp;ldquo;将名为 &lt;code&gt;todos&lt;/code&gt; 的字段更改为全新的数组&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="cc3dcc2b6eba9612cc0ca947cb6f916d99764552" translate="yes" xml:space="preserve">
          <source>The key to set, eg, &lt;code&gt;selectedItem&lt;/code&gt;</source>
          <target state="translated">设置的键，例如 &lt;code&gt;selectedItem&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bf355afc6c3e8f73ec33c2201c210bc589768e4f" translate="yes" xml:space="preserve">
          <source>The last command creates a &lt;code&gt;package.json&lt;/code&gt; file and prompts you for the package information. You may skip everything but &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;version&lt;/code&gt;, and &lt;code&gt;entry point&lt;/code&gt;. You can use the default &lt;code&gt;index.js&lt;/code&gt; for &lt;code&gt;entry point&lt;/code&gt;. This file is where you set your package&amp;rsquo;s exports:</source>
          <target state="translated">最后一个命令创建一个 &lt;code&gt;package.json&lt;/code&gt; 文件，并提示您输入软件包信息。您可以跳过 &lt;code&gt;name&lt;/code&gt; ， &lt;code&gt;version&lt;/code&gt; 和 &lt;code&gt;entry point&lt;/code&gt; 。您可以使用默认的 &lt;code&gt;index.js&lt;/code&gt; 作为 &lt;code&gt;entry point&lt;/code&gt; 。该文件是您设置软件包导出的位置：</target>
        </trans-unit>
        <trans-unit id="58ecbf3dede503a58bde3e045a3df89887a049a3" translate="yes" xml:space="preserve">
          <source>The last form will only work if your JavaScript implementation preserves the order of keys in objects. Most do, most of the time, but it&amp;rsquo;s up to you to be sure.</source>
          <target state="translated">仅当您的JavaScript实现保留对象中键的顺序时，最后一种形式才有效。大多数情况下，大多数情况下都会这样做，但这取决于您自己。</target>
        </trans-unit>
        <trans-unit id="62face76ea24a25e14ec88678cac33ee4e338c66" translate="yes" xml:space="preserve">
          <source>The last node of the View&amp;rsquo;s rendered content.</source>
          <target state="translated">视图呈现内容的最后一个节点。</target>
        </trans-unit>
        <trans-unit id="27a18372e353012f1d14dab0863f5525adbb9bb5" translate="yes" xml:space="preserve">
          <source>The last top-level DOM node in this template instance.</source>
          <target state="translated">该模板实例中最后一个顶层DOM节点。</target>
        </trans-unit>
        <trans-unit id="02279ad83eb1b692260d7d9cde7b2b5d2ae56e80" translate="yes" xml:space="preserve">
          <source>The main Atmosphere website provides additional curation features like trending packages, package stars, and flags, but some of the other options can be faster if you&amp;rsquo;re trying to find a specific package. For example, you can use &lt;code&gt;meteor show kadira:flow-router&lt;/code&gt; from the command line to see the description of that package and different available versions.</source>
          <target state="translated">Atmosphere主网站提供了其他策展功能，例如趋势包，包星和标志，但是如果您要查找特定的包，则其他一些选项可能会更快。例如，您可以 &lt;code&gt;meteor show kadira:flow-router&lt;/code&gt; 使用meteor show kadira：flow-router来查看该软件包的描述以及不同的可用版本。</target>
        </trans-unit>
        <trans-unit id="bad940316714a3ab0e6572294a28c9b8ae5f1015" translate="yes" xml:space="preserve">
          <source>The main advantage of this approach is that it is immediately clear when viewing the &lt;code&gt;Lists_show_page&lt;/code&gt; what behavior will occur when a user visits the page.</source>
          <target state="translated">这种方法的主要优点是，在查看 &lt;code&gt;Lists_show_page&lt;/code&gt; 时，可以立即清楚用户访问该页面时将发生什么行为。</target>
        </trans-unit>
        <trans-unit id="087cec891935cf1e492b59ed52df2b8bf65da3fe" translate="yes" xml:space="preserve">
          <source>The main function of an Atmosphere package is to contain source code (JS, CSS, and any transpiled languages) and assets (images, fonts, and more) that will be shared across different applications.</source>
          <target state="translated">Atmosphere包的主要功能是包含源码(JS、CSS和任何移植的语言)和资产(图像、字体等),这些资产将在不同的应用程序中共享。</target>
        </trans-unit>
        <trans-unit id="ac594fc5f09adad9be18a02fcebc34665789af54" translate="yes" xml:space="preserve">
          <source>The main function of the Meteor build tool is to run &amp;ldquo;build plugins&amp;rdquo;. These plugins define different parts of your app build process. Meteor puts heavy emphasis on reducing or removing build configuration files, so you won&amp;rsquo;t see any large build process config files like you would in Gulp or Webpack. The Meteor build process, and &lt;a href=&quot;structure#load-order&quot;&gt;file load order&lt;/a&gt;, is configured almost entirely through adding and removing packages to your app and putting files in specially named directories. For example, to get all of the newest stable ES2015 JavaScript features in your app, you just add the &lt;a href=&quot;http://docs.meteor.com/#/full/ecmascript&quot;&gt;&lt;code&gt;ecmascript&lt;/code&gt; package&lt;/a&gt;. This package provides support for ES2015 modules, which gives you even more fine grained control over file load order using ES2015 &lt;code&gt;import&lt;/code&gt; and &lt;code&gt;export&lt;/code&gt;. As new Meteor releases add new features to this package you just get them for free.</source>
          <target state="translated">流星构建工具的主要功能是运行&amp;ldquo;构建插件&amp;rdquo;。这些插件定义了应用构建过程的不同部分。流星非常重视减少或删除构建配置文件，因此不会像Gulp或Webpack那样看到任何大型的构建过程配置文件。流星的构建过程和&lt;a href=&quot;structure#load-order&quot;&gt;文件加载顺序&lt;/a&gt;几乎完全是通过向您的应用中添加和删除程序包以及将文件放在特别命名的目录中来配置的。例如，要在您的应用中获得所有最新的稳定的ES2015 JavaScript功能，只需添加&lt;a href=&quot;http://docs.meteor.com/#/full/ecmascript&quot;&gt; &lt;code&gt;ecmascript&lt;/code&gt; 包&lt;/a&gt;。该软件包提供了对ES2015模块的支持，从而使您可以使用ES2015 &lt;code&gt;import&lt;/code&gt; 和导入功能更精细地控制文件加载顺序 &lt;code&gt;export&lt;/code&gt; 。当新的Meteor版本向此软件包添加新功能时，您只需免费获得它们。</target>
        </trans-unit>
        <trans-unit id="9030d33310ed67928fe084c9847e6d27b43c18fe" translate="yes" xml:space="preserve">
          <source>The main thing enabled by the &lt;code&gt;ValidationError&lt;/code&gt; convention is simple integration between Methods and the forms that call them. In general, your app is likely to have a one-to-one mapping of forms in the UI to Methods. First, let&amp;rsquo;s define a Method for our business logic:</source>
          <target state="translated">&lt;code&gt;ValidationError&lt;/code&gt; 约定启用的主要功能是方法与调用它们的表单之间的简单集成。通常，您的应用程序可能会将UI中的表单与方法进行一对一映射。首先，让我们为业务逻辑定义一个方法：</target>
        </trans-unit>
        <trans-unit id="c67aa737041c3f3797cf0aa256ed25cba5132582" translate="yes" xml:space="preserve">
          <source>The main thing to understand about how Blaze re-renders is that re-rendering happens at the level of helpers and template inclusions. Whenever the &lt;em&gt;data context&lt;/em&gt; of a component changes, it necessarily must re-run &lt;em&gt;all&lt;/em&gt; helpers and data accessors (as &lt;code&gt;this&lt;/code&gt; within the helper is the data context and thus will have changed).</source>
          <target state="translated">关于Blaze如何重新渲染的主要要理解的是，重新渲染发生在助手和模板包含的级别。每当&lt;em&gt;数据上下文&lt;/em&gt;的组成部分的变化，它一定必须重新运行&lt;em&gt;所有的&lt;/em&gt;助手和数据存取（因为 &lt;code&gt;this&lt;/code&gt; 助手里是数据上下文，因此也会有变化）。</target>
        </trans-unit>
        <trans-unit id="05dafcc9b089b13ad60b26fd4f9f8201fac9c7c9" translate="yes" xml:space="preserve">
          <source>The mental model here is:</source>
          <target state="translated">这里的心理模型是。</target>
        </trans-unit>
        <trans-unit id="9fe40d9ebf86fd4ddce617c1b48fd4df787dd561" translate="yes" xml:space="preserve">
          <source>The method of generating the &lt;code&gt;_id&lt;/code&gt; fields of new documents in this collection. Possible values:</source>
          <target state="translated">在此集合中生成新文档的 &lt;code&gt;_id&lt;/code&gt; 字段的方法。可能的值：</target>
        </trans-unit>
        <trans-unit id="4fd01fd0a1b0b9f41b2613c6143a80de785d255a" translate="yes" xml:space="preserve">
          <source>The minifier class must implement the method &lt;code&gt;processFilesForBundle&lt;/code&gt;. The first argument is a list of processed files and the options object specifies if the minifier is ran in production mode or development mode.</source>
          <target state="translated">Minifier类必须实现 &lt;code&gt;processFilesForBundle&lt;/code&gt; 方法。第一个参数是已处理文件的列表，options对象指定minifier是在生产模式下还是在开发模式下运行。</target>
        </trans-unit>
        <trans-unit id="6a944b35af3e4fbd8d5302f9527e421b0768f5c0" translate="yes" xml:space="preserve">
          <source>The most advanced mobile web framework is &lt;a href=&quot;http://ionicframework.com/docs/v2/&quot;&gt;Ionic 2&lt;/a&gt;, which uses Angular 2.</source>
          <target state="translated">最高级的移动Web框架是使用Angular 2的&lt;a href=&quot;http://ionicframework.com/docs/v2/&quot;&gt;Ionic&lt;/a&gt; 2。</target>
        </trans-unit>
        <trans-unit id="0c2d88cbe5690b733be86f60121bc107d1acb1dd" translate="yes" xml:space="preserve">
          <source>The most important consideration is related to the way DDP, Meteor&amp;rsquo;s data loading protocol, communicates documents over the wire. The key thing to realize is that DDP sends changes to documents at the level of top-level document &lt;em&gt;fields&lt;/em&gt;. What this means is that if you have large and complex subfields on document that change often, DDP can send unnecessary changes over the wire.</source>
          <target state="translated">最重要的考虑因素涉及流星的数据加载协议DDP通过有线方式传输文档的方式。要实现的关键是DDP在顶级文档&lt;em&gt;字段&lt;/em&gt;级别将更改发送到文档。这意味着，如果文档上有大型而复杂的子字段，并且经常更改，则DDP可以通过网络发送不必要的更改。</target>
        </trans-unit>
        <trans-unit id="041bbfac67b8faad4b90349044927ca9c48e25c4" translate="yes" xml:space="preserve">
          <source>The most important thing to keep in mind is that user documents are certain to contain private data about your users. In particular, the user document includes hashed password data and access keys for external APIs. This means it&amp;rsquo;s critically important to &lt;a href=&quot;http://guide.meteor.com/security.html#fields&quot;&gt;filter the fields&lt;/a&gt; of the user document that you send to any client.</source>
          <target state="translated">要记住的最重要的一点是，用户文档肯定包含有关用户的私人数据。特别是，用户文档包括哈希密码数据和用于外部API的访问密钥。这意味着&lt;a href=&quot;http://guide.meteor.com/security.html#fields&quot;&gt;筛选&lt;/a&gt;发送到任何客户端的用户文档的字段至关重要。</target>
        </trans-unit>
        <trans-unit id="29635c76fe31daf9bef9734f9375360e554deb6e" translate="yes" xml:space="preserve">
          <source>The most popular CSS post-processor right now is &lt;a href=&quot;https://github.com/postcss/postcss&quot;&gt;PostCSS&lt;/a&gt;, which supports a variety of plugins. &lt;a href=&quot;https://github.com/postcss/autoprefixer&quot;&gt;Autoprefixer&lt;/a&gt; is perhaps the most useful plugin, since it enables you to stop worrying about browser prefixes and compatibility and write standards-compliant CSS. No more copying 5 different statements every time you want a CSS gradient - you can just write a standard gradient without any prefixes and Autoprefixer handles it for you.</source>
          <target state="translated">目前最流行的CSS后处理器是&lt;a href=&quot;https://github.com/postcss/postcss&quot;&gt;PostCSS&lt;/a&gt;，它支持各种插件。&lt;a href=&quot;https://github.com/postcss/autoprefixer&quot;&gt;Autoprefixer&lt;/a&gt;也许是最有用的插件，因为它使您不必担心浏览器前缀和兼容性，并编写符合标准的CSS。每次您想要CSS渐变时，都不再需要复制5个不同的语句-您只需编写没有任何前缀的标准渐变，Autoprefixer即可为您处理。</target>
        </trans-unit>
        <trans-unit id="41100d8581602da5152d964141f9e1cb7c4ee177" translate="yes" xml:space="preserve">
          <source>The most popular package for role-based permissions in Meteor is &lt;a href=&quot;https://atmospherejs.com/alanning/roles&quot;&gt;&lt;code&gt;alanning:roles&lt;/code&gt;&lt;/a&gt;. For example, here is how you would make a user into an administrator, or a moderator:</source>
          <target state="translated">在Meteor中，基于角色的权限最流行的软件包是&lt;a href=&quot;https://atmospherejs.com/alanning/roles&quot;&gt; &lt;code&gt;alanning:roles&lt;/code&gt; &lt;/a&gt;。例如，这是使用户成为管理员或主持人的方法：</target>
        </trans-unit>
        <trans-unit id="33f95663bdb44f0e22fe580aa85febeeebebb1f8" translate="yes" xml:space="preserve">
          <source>The most powerful feature of Meteor&amp;rsquo;s build system is the ability to define custom build plugins. If you find yourself writing scripts that mangle one type of file into another, merge multiple files, or something else, it&amp;rsquo;s likely that these scripts would be better implemented as a build plugin. The &lt;code&gt;ecmascript&lt;/code&gt;, &lt;code&gt;templating&lt;/code&gt;, and &lt;code&gt;coffeescript&lt;/code&gt; packages are all implemented as build plugins, so you can replace them with your own versions if you want to!</source>
          <target state="translated">流星构建系统最强大的功能是能够定义自定义构建插件。如果您发现自己编写了将一种文件类型转换为另一种文件，合并多个文件或其他内容的脚本，则这些脚本可能会更好地实现为构建插件。在 &lt;code&gt;ecmascript&lt;/code&gt; ， &lt;code&gt;templating&lt;/code&gt; 和 &lt;code&gt;coffeescript&lt;/code&gt; 包都被实现为构建插件，这样你就可以，如果你想用自己的版本替换它们！</target>
        </trans-unit>
        <trans-unit id="1ee41d922eff780ecaff3ef99605a3b9119cf5c7" translate="yes" xml:space="preserve">
          <source>The mouse button is newly down or up.</source>
          <target state="translated">鼠标按钮是新的向下或向上。</target>
        </trans-unit>
        <trans-unit id="8fbb5613850e679b2f68299f9baa31ac98b9b2ef" translate="yes" xml:space="preserve">
          <source>The name of the Meteor method being used to login.</source>
          <target state="translated">用于登录的Meteor方法的名称。</target>
        </trans-unit>
        <trans-unit id="2b8becb5b6c6f747f4f4fcec5d5ba0b95c3d5d6c" translate="yes" xml:space="preserve">
          <source>The name of the collection that contains the changed document.</source>
          <target state="translated">包含更改文档的集合名称。</target>
        </trans-unit>
        <trans-unit id="a110db700050ed25131d869b59bbbee4b90483fa" translate="yes" xml:space="preserve">
          <source>The name of the collection that contains the new document.</source>
          <target state="translated">包含新文档的集合名称。</target>
        </trans-unit>
        <trans-unit id="12890a4496f8bd405aef15e465058d6e53f8670c" translate="yes" xml:space="preserve">
          <source>The name of the collection that the document has been removed from.</source>
          <target state="translated">文件被删除的集合名称;</target>
        </trans-unit>
        <trans-unit id="aededf02ab8585133ad16566be90bc597b461caa" translate="yes" xml:space="preserve">
          <source>The name of the collection. If null, creates an unmanaged (unsynchronized) local collection.</source>
          <target state="translated">集合的名称。如果为空,则创建一个非管理(非同步)的本地集合。</target>
        </trans-unit>
        <trans-unit id="cee22e1cf3b1b10904d1573dfc4e5f31b03e98e4" translate="yes" xml:space="preserve">
          <source>The name of the helper function you are defining.</source>
          <target state="translated">你所定义的辅助函数的名称。</target>
        </trans-unit>
        <trans-unit id="3cefe07ca40ac0098c2ecef7ab586bdb550e6c49" translate="yes" xml:space="preserve">
          <source>The name of the package to require.</source>
          <target state="translated">需要的软件包的名称。</target>
        </trans-unit>
        <trans-unit id="920ff863539ce75133ab803119feacd0042e2282" translate="yes" xml:space="preserve">
          <source>The name of the session variable to return</source>
          <target state="translated">要返回的会话变量的名称</target>
        </trans-unit>
        <trans-unit id="5172527e74ca00b58bba7ad9c1f71a91e09af72f" translate="yes" xml:space="preserve">
          <source>The name of the session variable to test</source>
          <target state="translated">要测试的会话变量的名称</target>
        </trans-unit>
        <trans-unit id="a06673519c2a8a449084e67603a463a768ba9138" translate="yes" xml:space="preserve">
          <source>The name of the template to include.</source>
          <target state="translated">要包含的模板名称。</target>
        </trans-unit>
        <trans-unit id="176d65e18cc7bf7c5ed547ad17c8014fd2faa317" translate="yes" xml:space="preserve">
          <source>The name of this type of View. View names may be used to identify particular kinds of Views in code, but more often they simply aid in debugging and comprehensibility of the View tree. Views generated by Meteor have names like &amp;ldquo;Template.foo&amp;rdquo; and &amp;ldquo;if&amp;rdquo;.</source>
          <target state="translated">此类视图的名称。视图名称可用于标识代码中的特定种类的视图，但更多情况下，它们仅有助于调试和理解视图树。流星生成的视图的名称如&amp;ldquo; Template.foo&amp;rdquo;和&amp;ldquo; if&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="5ead238c6d0a0b1e2991bbc9d03dff84ecb261c1" translate="yes" xml:space="preserve">
          <source>The new document's ID.</source>
          <target state="translated">新文件的ID。</target>
        </trans-unit>
        <trans-unit id="f640c1c0168d245bf62dac0b58ef4a4ea14d0f23" translate="yes" xml:space="preserve">
          <source>The new value for &lt;code&gt;key&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; 的新值</target>
        </trans-unit>
        <trans-unit id="5683e458ca2c49f3ed860b926a3f0940a626811a" translate="yes" xml:space="preserve">
          <source>The newer variant of &lt;code&gt;#each&lt;/code&gt; doesn&amp;rsquo;t change the data context but introduces a new variable that can be used in the body to refer to the current item:</source>
          <target state="translated">&lt;code&gt;#each&lt;/code&gt; 的较新变体不会更改数据上下文，但会引入一个新变量，该变量可在主体中用于引用当前项目：</target>
        </trans-unit>
        <trans-unit id="0f6934cd801fccda166cd1d81a676851c4932e22" translate="yes" xml:space="preserve">
          <source>The node that will be the parent of the rendered template. It must be an Element node.</source>
          <target state="translated">渲染模板的父节点。它必须是一个元素节点。</target>
        </trans-unit>
        <trans-unit id="6720aec8906bdb559b3f17f4d0beb9f284062970" translate="yes" xml:space="preserve">
          <source>The number of bytes of binary data to allocate.</source>
          <target state="translated">要分配的二进制数据的字节数。</target>
        </trans-unit>
        <trans-unit id="dba728d279234fa11e3c96752fea811c330fc820" translate="yes" xml:space="preserve">
          <source>The number of days from when a link to reset password is sent until token expires and user can't reset password with the link anymore. Defaults to 3.</source>
          <target state="translated">重置密码的链接发送的天数,直到令牌过期,用户不能再使用该链接重置密码。默认值为3。</target>
        </trans-unit>
        <trans-unit id="fbf37e56e9df9c710871811ee1641a93403770db" translate="yes" xml:space="preserve">
          <source>The number of days from when a link to set inital password is sent until token expires and user can't set password with the link anymore. Defaults to 30.</source>
          <target state="translated">从发送设置初始密码的链接到令牌过期和用户不能再使用链接设置密码的天数。默认值为30天。</target>
        </trans-unit>
        <trans-unit id="8dfaa8ca88d40642840c1c14b552a064b807998e" translate="yes" xml:space="preserve">
          <source>The number of days from when a user logs in until their token expires and they are logged out. Defaults to 90. Set to &lt;code&gt;null&lt;/code&gt; to disable login expiration.</source>
          <target state="translated">从用户登录到其令牌到期并注销的天数。默认值为90。设置为 &lt;code&gt;null&lt;/code&gt; 可禁用登录到期。</target>
        </trans-unit>
        <trans-unit id="ea882e6e592495d4f1fdf5bb546bcff8a2a280da" translate="yes" xml:space="preserve">
          <source>The number of levels beyond the current data context to look. Defaults to 1.</source>
          <target state="translated">超出当前数据上下文的级别数。默认值为1。</target>
        </trans-unit>
        <trans-unit id="ae4898ef734061446e0764ca241fb8bb5c700814" translate="yes" xml:space="preserve">
          <source>The number of times the View has been rendered, including the current time if the View is in the process of being rendered or re-rendered.</source>
          <target state="translated">视图被渲染的次数,包括当前时间,如果视图正在被渲染或重新渲染的过程中。</target>
        </trans-unit>
        <trans-unit id="abcbf76bd08ffde7566c6e27b725b9d0896f531e" translate="yes" xml:space="preserve">
          <source>The number of times the client has tried to reconnect since the connection was lost. 0 when connected.</source>
          <target state="translated">客户端在连接丢失后试图重新连接的次数。连接时为0。</target>
        </trans-unit>
        <trans-unit id="fa479a8e3972469522ab5d930e7d1250954d3cb0" translate="yes" xml:space="preserve">
          <source>The observer fetches the current set of documents matching the cursor, and passes them back to the subscription (via the &lt;code&gt;this.added()&lt;/code&gt; callback).</source>
          <target state="translated">观察者获取与游标匹配的当前文档集，并将它们传递回订阅（通过 &lt;code&gt;this.added()&lt;/code&gt; 回调）。</target>
        </trans-unit>
        <trans-unit id="53c688a2194b2f27c34a7591e8d0eaa760d0d64a" translate="yes" xml:space="preserve">
          <source>The observer observes the query. Typically, it &lt;a href=&quot;https://github.com/meteor/meteor/wiki/Oplog-Observe-Driver&quot;&gt;uses MongoDB&amp;rsquo;s Oplog&lt;/a&gt; to notice changes that affect the query. If it sees a relevant change, like a new matching document or a change in a field on a matching document, it calls into the subscription (via &lt;code&gt;.added()&lt;/code&gt;, &lt;code&gt;.changed()&lt;/code&gt; or &lt;code&gt;.removed()&lt;/code&gt;), which again sends the changes to the mergebox, and then to the client via DDP.</source>
          <target state="translated">观察者观察查询。通常，它&lt;a href=&quot;https://github.com/meteor/meteor/wiki/Oplog-Observe-Driver&quot;&gt;使用MongoDB的Oplog&lt;/a&gt;来注意影响查询的更改。如果看到一个相关的变化，像一个新的匹配文档或上一个匹配文档中的磁场的变化，它会调用到订阅（通过 &lt;code&gt;.added()&lt;/code&gt; ， &lt;code&gt;.changed()&lt;/code&gt; 或 &lt;code&gt;.removed()&lt;/code&gt; ），这再次发送更改为合并框，然后通过DDP更改为客户端。</target>
        </trans-unit>
        <trans-unit id="a30a5dd8e1c97f27469429c022c3fb3c77e8af44" translate="yes" xml:space="preserve">
          <source>The only reason not to use &lt;code&gt;{{#each .. in}}&lt;/code&gt; would be because it makes it difficult to access the &lt;code&gt;todo&lt;/code&gt; symbol inside event handlers. Typically the solution to this is to use a sub-component to render the inside of the loop:</source>
          <target state="translated">不使用 &lt;code&gt;{{#each .. in}}&lt;/code&gt; 的唯一原因是因为它使得很难在事件处理程序中访问 &lt;code&gt;todo&lt;/code&gt; 符号。通常，解决方案是使用子组件来渲染循环的内部：</target>
        </trans-unit>
        <trans-unit id="9db3a42ebc5acbaa53c1172351d4309de2d80567" translate="yes" xml:space="preserve">
          <source>The opposite scenario occurs when you want to publish data to be consumed by a 3rd party, typically over REST. If the data we want to publish is the same as what we already publish via a publication, then we can use the &lt;a href=&quot;https://atmospherejs.com/simple/rest&quot;&gt;simple:rest&lt;/a&gt; package to do this really easily.</source>
          <target state="translated">当您要发布数据以供第三方使用（通常通过REST）时，情况会相反。如果我们要发布的数据与我们已经通过发布发布的数据相同，那么我们可以使用&lt;a href=&quot;https://atmospherejs.com/simple/rest&quot;&gt;simple：rest&lt;/a&gt;包真正轻松地做到这一点。</target>
        </trans-unit>
        <trans-unit id="bcde54f116d99f5d06808179c05f7ba6f1e4e9bf" translate="yes" xml:space="preserve">
          <source>The page is reloaded and the web view re-requests the assets from the local web server</source>
          <target state="translated">页面被重新加载,Web视图从本地Web服务器重新请求资产。</target>
        </trans-unit>
        <trans-unit id="80cd78cf234184e72a37dc201f7f4bfe9d15c435" translate="yes" xml:space="preserve">
          <source>The path of the asset, relative to the application's &lt;code&gt;private&lt;/code&gt; subdirectory.</source>
          <target state="translated">资产的路径，相对于应用程序的 &lt;code&gt;private&lt;/code&gt; 子目录。</target>
        </trans-unit>
        <trans-unit id="521a81640f8ab9eac4784c022ded2d4326c35d63" translate="yes" xml:space="preserve">
          <source>The pattern defining affected domains or URLs.</source>
          <target state="translated">定义受影响域或URL的模式。</target>
        </trans-unit>
        <trans-unit id="1bb24703e108f8284fd72e3479806a47df145761" translate="yes" xml:space="preserve">
          <source>The pattern to match &lt;code&gt;value&lt;/code&gt; against</source>
          <target state="translated">该模式的匹配 &lt;code&gt;value&lt;/code&gt; 对</target>
        </trans-unit>
        <trans-unit id="a49d39bb128771a179d0edca97783db6bfdd1f6c" translate="yes" xml:space="preserve">
          <source>The place to get started with Meteor is the &lt;a href=&quot;https://www.meteor.com/tutorials/blaze/creating-an-app&quot;&gt;official tutorial&lt;/a&gt;.</source>
          <target state="translated">流星入门的地方是&lt;a href=&quot;https://www.meteor.com/tutorials/blaze/creating-an-app&quot;&gt;官方教程&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="556bd230d169ee45ecc4f1fc92dc61ae62f450a8" translate="yes" xml:space="preserve">
          <source>The pointer enters or leaves the bounds of an element. These events do not bubble.</source>
          <target state="translated">指针进入或离开一个元素的边界。这些事件不会冒泡。</target>
        </trans-unit>
        <trans-unit id="12b9ea0078874b778b28fde7c6f18922178d5a9e" translate="yes" xml:space="preserve">
          <source>The primary challenge is properly sharing code between the different applications you are building. The simplest approach to deal with this issue is to simply deploy the &lt;em&gt;same&lt;/em&gt; application on different web servers, controlling the behavior via different &lt;a href=&quot;deployment#environment&quot;&gt;settings&lt;/a&gt;. This approach allows you to easily deploy different versions with different scaling behavior but doesn&amp;rsquo;t enjoy most of the other advantages stated above.</source>
          <target state="translated">主要挑战是在要构建的不同应用程序之间正确共享代码。解决此问题的最简单方法是将&lt;em&gt;同一&lt;/em&gt;应用程序简单地部署在不同的Web服务器上，并通过不同的&lt;a href=&quot;deployment#environment&quot;&gt;设置来&lt;/a&gt;控制行为。这种方法使您可以轻松地部署具有不同缩放行为的不同版本，但不能享受上述大多数其他优点。</target>
        </trans-unit>
        <trans-unit id="51b06a1c4c72e4d0ba519e2db4fda58b6aa5f310" translate="yes" xml:space="preserve">
          <source>The primary way to test your application in Meteor is the &lt;code&gt;meteor test&lt;/code&gt; command.</source>
          <target state="translated">在Meteor中测试应用程序的主要方法是 &lt;code&gt;meteor test&lt;/code&gt; 命令。</target>
        </trans-unit>
        <trans-unit id="2f82a21783db5564684bce916eecdb8fff7a0fe6" translate="yes" xml:space="preserve">
          <source>The problem with this mechanism is that it overrides complete files, so it is not a good solution for customizing &lt;code&gt;config.xml&lt;/code&gt;. Replacing the generated version with your own file means you lose all configuration information set by the build process and by installed plugins, which will likely break your app.</source>
          <target state="translated">这种机制的问题在于它会覆盖完整的文件，因此对于自定义 &lt;code&gt;config.xml&lt;/code&gt; 来说不是一个好的解决方案。用您自己的文件替换生成的版本意味着您将丢失由构建过程和已安装的插件设置的所有配置信息，这很可能会破坏您的应用程序。</target>
        </trans-unit>
        <trans-unit id="cbc08b261ed5c2929402efaa830642474a0ba56e" translate="yes" xml:space="preserve">
          <source>The publication calls the &lt;code&gt;.ready()&lt;/code&gt; callback, which sends the DDP &lt;code&gt;ready&lt;/code&gt; message to the client. The subscription handle on the client is marked as ready.</source>
          <target state="translated">&lt;code&gt;.ready()&lt;/code&gt; 调用.ready（）回调，该回调将DDP &lt;code&gt;ready&lt;/code&gt; 消息发送到客户端。客户端上的订阅句柄被标记为就绪。</target>
        </trans-unit>
        <trans-unit id="57a8d0ec773fc1b82243adbf0c7b6d3bba0abed5" translate="yes" xml:space="preserve">
          <source>The publication handler identifies that the return value is a cursor. This enables a convenient mode for publishing cursors.</source>
          <target state="translated">发布处理程序确定返回值是一个游标。这为发布游标提供了方便的模式。</target>
        </trans-unit>
        <trans-unit id="c51dcc1727b3af5900a6cc6c56c706886097ed5b" translate="yes" xml:space="preserve">
          <source>The reactive data source &lt;em&gt;invalidates&lt;/em&gt; the autorun computation (marks it so that it re-runs in the next Tracker flush cycle).</source>
          <target state="translated">反应性数据源&lt;em&gt;使&lt;/em&gt;自动运行计算&lt;em&gt;无效&lt;/em&gt;（将其标记为可在下一个Tracker刷新周期中重新运行）。</target>
        </trans-unit>
        <trans-unit id="309d6f42b267e108ba41490cedacb95ce33b8a65" translate="yes" xml:space="preserve">
          <source>The reason Dependencies do not store data themselves is that it can be useful to associate multiple Dependencies with the same piece of data. For example, one Dependency might represent the result of a database query, while another might represent just the number of documents in the result. A Dependency could represent whether the weather is sunny or not, or whether the temperature is above freezing. &lt;a href=&quot;#session_equals&quot;&gt;&lt;code&gt;Session.equals&lt;/code&gt;&lt;/a&gt; is implemented this way for efficiency. When you call &lt;code&gt;Session.equals('weather', 'sunny')&lt;/code&gt;, the current computation is made to depend on an internal Dependency that does not change if the weather goes from, say, &lt;code&gt;rainy&lt;/code&gt; to &lt;code&gt;cloudy&lt;/code&gt;.</source>
          <target state="translated">依赖关系本身不存储数据的原因是，将多个依赖关系与同一条数据关联起来可能很有用。例如，一个依赖关系可能代表数据库查询的结果，而另一个依赖关系可能仅代表结果中的文档数。相关性可以表示天气是否晴朗，或者温度是否高于冰点。&lt;a href=&quot;#session_equals&quot;&gt; &lt;code&gt;Session.equals&lt;/code&gt; &lt;/a&gt;以这种方式实现以提高效率。当您调用 &lt;code&gt;Session.equals('weather', 'sunny')&lt;/code&gt; ，当前的计算将依赖于内部相关性，如果天气从 &lt;code&gt;rainy&lt;/code&gt; 到 &lt;code&gt;cloudy&lt;/code&gt; 都不会改变。</target>
        </trans-unit>
        <trans-unit id="c001cca251f1269a800c30cf115f1757697ea195" translate="yes" xml:space="preserve">
          <source>The reason this is needed is because updates delivered through hot code push replace the initially bundled &lt;code&gt;index.html&lt;/code&gt; with a freshly generated one. If the &lt;code&gt;ROOT_URL&lt;/code&gt; on your server hasn&amp;rsquo;t been set, it defaults to &lt;code&gt;localhost:3000&lt;/code&gt;, and this would leave the app unable to connect to the server, both for data loading and for receiving further hot code pushes. In Meteor 1.3, we protect against this by blocking updates that would change the &lt;code&gt;ROOT_URL&lt;/code&gt; to &lt;code&gt;localhost&lt;/code&gt;, but the consequence of this is that hot code push is disabled until you configure &lt;code&gt;ROOT_URL&lt;/code&gt; correctly.</source>
          <target state="translated">之所以需要这样做，是因为通过热代码推送提供的更新用新生成的 &lt;code&gt;index.html&lt;/code&gt; 替换了最初捆绑的index.html。如果未设置服务器上的 &lt;code&gt;ROOT_URL&lt;/code&gt; ，则默认值为 &lt;code&gt;localhost:3000&lt;/code&gt; ，这将使应用程序无法连接到服务器，无论是加载数据还是接收进一步的热代码推送。在Meteor 1.3中，我们通过阻止将 &lt;code&gt;ROOT_URL&lt;/code&gt; 更改为 &lt;code&gt;localhost&lt;/code&gt; 的更新来防止这种情况的发生，但是这样做的后果是， &lt;code&gt;ROOT_URL&lt;/code&gt; 正确配置了ROOT_URL，否则禁用了热代码推送。</target>
        </trans-unit>
        <trans-unit id="ea4ad2f495ec6f870bb27648ac9cfca44b40af11" translate="yes" xml:space="preserve">
          <source>The rendered template will update reactively in response to data changes until the View is removed using &lt;a href=&quot;#Blaze-remove&quot;&gt;&lt;code&gt;Blaze.remove&lt;/code&gt;&lt;/a&gt; or the View&amp;rsquo;s parent element is removed by Meteor or jQuery.</source>
          <target state="translated">呈现的模板将响应数据更改进行反应性更新，直到使用&lt;a href=&quot;#Blaze-remove&quot;&gt; &lt;code&gt;Blaze.remove&lt;/code&gt; &lt;/a&gt;删除View或通过Meteor或jQuery删除View的父元素。</target>
        </trans-unit>
        <trans-unit id="346fb3496c3ed7d82e3d8d06285355dda446588d" translate="yes" xml:space="preserve">
          <source>The return value from &lt;code&gt;Blaze.render&lt;/code&gt; or &lt;code&gt;Blaze.renderWithData&lt;/code&gt;, or the &lt;code&gt;view&lt;/code&gt; property of a Blaze.Template instance. Calling &lt;code&gt;Blaze.remove(Template.instance().view)&lt;/code&gt; from within a template event handler will destroy the view as well as that template and trigger the template's &lt;code&gt;onDestroyed&lt;/code&gt; handlers.</source>
          <target state="translated">&lt;code&gt;Blaze.render&lt;/code&gt; 或 &lt;code&gt;Blaze.renderWithData&lt;/code&gt; 的返回值，或者Blaze.Template实例的 &lt;code&gt;view&lt;/code&gt; 属性。从模板事件处理程序中调用 &lt;code&gt;Blaze.remove(Template.instance().view)&lt;/code&gt; 将破坏视图以及该模板，并触发模板的 &lt;code&gt;onDestroyed&lt;/code&gt; 处理程序。</target>
        </trans-unit>
        <trans-unit id="0ab08929e21ebfd079d0562223de60b4a09e6f70" translate="yes" xml:space="preserve">
          <source>The return value of the Method simulation is discarded, unless the &lt;code&gt;returnStubValue&lt;/code&gt; option is passed when calling the Method, in which case it is returned to the Method caller. ValidatedMethod passes this option by default.</source>
          <target state="translated">除非调用方法时传递了 &lt;code&gt;returnStubValue&lt;/code&gt; 选项，否则将放弃Method模拟的返回值，在这种情况下，它将返回给Method调用者。ValidatedMethod默认情况下会传递此选项。</target>
        </trans-unit>
        <trans-unit id="1bd226c832ab492024761da3688ff4ca08a6a08b" translate="yes" xml:space="preserve">
          <source>The reusable sub-component can then use the &lt;code&gt;hasChanges&lt;/code&gt; argument to determine if it should show some kind of callout to the user to indicate changes are available, and then use the &lt;code&gt;onShowChanges&lt;/code&gt; callback to trigger them to be shown.</source>
          <target state="translated">然后，可重用子组件可以使用 &lt;code&gt;hasChanges&lt;/code&gt; 参数来确定是否应向用户显示某种标注以指示更改可用，然后使用 &lt;code&gt;onShowChanges&lt;/code&gt; 回调触发显示它们。</target>
        </trans-unit>
        <trans-unit id="d7398f7e34b816d147c67530ad472fee00ff0e8b" translate="yes" xml:space="preserve">
          <source>The role URLs play in a client-rendered app, and how it&amp;rsquo;s different from a traditional server-rendered app.</source>
          <target state="translated">URL在客户端呈现的应用程序中扮演的角色，以及与传统的服务器呈现的应用程序有何不同。</target>
        </trans-unit>
        <trans-unit id="12ec5d01ec42e9704e010290897925f6ffe6f076" translate="yes" xml:space="preserve">
          <source>The runtime environment</source>
          <target state="translated">运行时环境</target>
        </trans-unit>
        <trans-unit id="9afa6d691c99313dd9b95ca03d32651044f3ba8a" translate="yes" xml:space="preserve">
          <source>The same debugging functionality can be achieved by adding the &lt;code&gt;--debug-port &amp;lt;port&amp;gt;&lt;/code&gt; option to other &lt;code&gt;meteor&lt;/code&gt; tool commands, such as &lt;code&gt;meteor run&lt;/code&gt; and &lt;code&gt;meteor test-packages&lt;/code&gt;.</source>
          <target state="translated">通过将 &lt;code&gt;--debug-port &amp;lt;port&amp;gt;&lt;/code&gt; 选项添加到其他 &lt;code&gt;meteor&lt;/code&gt; 工具命令（例如 &lt;code&gt;meteor run&lt;/code&gt; 和 &lt;code&gt;meteor test-packages&lt;/code&gt; ，可以实现相同的调试功能。</target>
        </trans-unit>
        <trans-unit id="702dec1a6bf9b4464cba0750cef4f3711229ca75" translate="yes" xml:space="preserve">
          <source>The same syntax can be used for &lt;code&gt;api.use&lt;/code&gt;, &lt;code&gt;api.imply&lt;/code&gt;, and &lt;code&gt;api.export&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;api.use&lt;/code&gt; ， &lt;code&gt;api.imply&lt;/code&gt; 和 &lt;code&gt;api.export&lt;/code&gt; 可以使用相同的语法。</target>
        </trans-unit>
        <trans-unit id="d9c0308c51f25dae18970cb3a07fdc1cd767a80a" translate="yes" xml:space="preserve">
          <source>The same template may occur many times on a page, and these occurrences are called template instances. Template instances have a life cycle of being created, put into the document, and later taken out of the document and destroyed. Meteor manages these stages for you, including determining when a template instance has been removed or replaced and should be cleaned up. You can associate data with a template instance, and you can access its DOM nodes when it is in the document.</source>
          <target state="translated">同样的模板可能会在一个页面上出现多次,这些出现的模板称为模板实例。模板实例有一个生命周期,从创建、放入文档,到后来从文档中取出并销毁。Meteor 为您管理这些阶段,包括确定模板实例何时被删除或替换,以及何时应该被清理。您可以将数据与模板实例相关联,当它在文档中时,您可以访问它的DOM节点。</target>
        </trans-unit>
        <trans-unit id="64032b8927e78661e3f868ef314eb3f245c7dc6d" translate="yes" xml:space="preserve">
          <source>The same way that you don&amp;rsquo;t read English sentences one word at a time, you don&amp;rsquo;t read code one token at a time. Mostly you just look at the shape of a certain expression, or the way it highlights in your editor, and assume what it does. If the style of every bit of code is consistent, that ensures that bits of code that look the same actually &lt;em&gt;are&lt;/em&gt; the same - there isn&amp;rsquo;t any hidden punctuation or gotchas that you don&amp;rsquo;t expect, so you can focus on understanding the logic instead of the symbols. One example of this is indentation - while in JavaScript, indentation is not meaningful, it&amp;rsquo;s helpful to have all of your code consistently indented so that you don&amp;rsquo;t need to read all of the brackets in detail to see what is going on.</source>
          <target state="translated">就像您一次不读一个单词的英语句子一样，一次也不读一个令牌的代码。通常，您只需要查看某个表达式的形状或它在编辑器中的突出显示方式，然后假设它的作用即可。如果每一位代码的样式都是一致的，那么可以确保看起来相同的代码位实际上&lt;em&gt;是&lt;/em&gt;相同的-没有您不希望看到的隐藏标点或陷阱，因此您可以专注于理解逻辑而不是符号。缩进就是这样的一个例子-缩进在JavaScript中没有意义，但使所有代码一致缩进是有帮助的，这样您就不必详细阅读所有括号来了解发生了什么。</target>
        </trans-unit>
        <trans-unit id="3bd72f15648c21b68e1c62222d240964640ae880" translate="yes" xml:space="preserve">
          <source>The second is when the URL is valid, but doesn&amp;rsquo;t actually match any data. In this case, the URL matches a route, but once the route has successfully subscribed, it discovers there is no data. It usually makes sense in this case for the page component (which subscribes and fetches the data) to render a not-found template instead of the usual template for the page:</source>
          <target state="translated">第二个是URL有效但实际上不匹配任何数据的时间。在这种情况下，URL与路由匹配，但是一旦路由成功订阅，它就会发现没有数据。在这种情况下，页面组件（订阅并获取数据）呈现一个找不到的模板而不是页面的常用模板通常是有意义的：</target>
        </trans-unit>
        <trans-unit id="4390553f93c001bde55a8e234067b449495d68dd" translate="yes" xml:space="preserve">
          <source>The section above talked about JavaScript code in general - you can easily apply it in any JavaScript application, not just with Meteor apps. However, there are some style questions that are Meteor-specific, in particular how to name and structure all of the different components of your app.</source>
          <target state="translated">上面的部分谈到了一般的JavaScript代码--你可以很容易地在任何JavaScript应用中应用它,而不仅仅是Meteor应用。然而,有一些风格问题是Meteor特有的,特别是如何命名和结构化你的应用程序的所有不同组件。</target>
        </trans-unit>
        <trans-unit id="4ca89d1440c014241d0e14e42159bf3494b1c84e" translate="yes" xml:space="preserve">
          <source>The security surface area of a Meteor app.</source>
          <target state="translated">陨石应用的安全面积。</target>
        </trans-unit>
        <trans-unit id="72bbc6dfb75bf94765ca8935d2157cc923c27d4e" translate="yes" xml:space="preserve">
          <source>The server &lt;em&gt;explicitly&lt;/em&gt; waits until all the data is sent down (the new subscription is ready) for the new subscription before removing the data from the old subscription. The idea here is to avoid flicker&amp;mdash;you can, if desired, continue to show the old subscription&amp;rsquo;s data until the new data is ready, then instantly switch over to the new subscription&amp;rsquo;s complete data set.</source>
          <target state="translated">服务器从新订阅中删除数据之前，&lt;em&gt;显式&lt;/em&gt;等待直到为新订阅发送完所有数据（新订阅就绪）为止。这里的想法是避免闪烁&amp;mdash;如果需要，您可以继续显示旧订阅的数据，直到准备好新数据为止，然后立即切换到新订阅的完整数据集。</target>
        </trans-unit>
        <trans-unit id="746fab1fce56a89f377ea80e4afe7658f62e7c56" translate="yes" xml:space="preserve">
          <source>The server connection that will manage this collection. Uses the default connection if not specified. Pass the return value of calling &lt;a href=&quot;#ddp_connect&quot;&gt;&lt;code&gt;DDP.connect&lt;/code&gt;&lt;/a&gt; to specify a different server. Pass &lt;code&gt;null&lt;/code&gt; to specify no connection. Unmanaged (&lt;code&gt;name&lt;/code&gt; is null) collections cannot specify a connection.</source>
          <target state="translated">将管理此集合的服务器连接。如果未指定，则使用默认连接。传递调用&lt;a href=&quot;#ddp_connect&quot;&gt; &lt;code&gt;DDP.connect&lt;/code&gt; &lt;/a&gt;的返回值以指定其他服务器。传递 &lt;code&gt;null&lt;/code&gt; 以指定没有连接。非托管（ &lt;code&gt;name&lt;/code&gt; 为null）集合不能指定连接。</target>
        </trans-unit>
        <trans-unit id="9cb77650aef11e195d36d66bcd612105e751c461" translate="yes" xml:space="preserve">
          <source>The server process debugger will listen for incoming connections from debugging clients, such as node-inspector, on port 5858 by default. To specify a different port use the &lt;code&gt;--debug-port &amp;lt;port&amp;gt;&lt;/code&gt; option.</source>
          <target state="translated">默认情况下，服务器进程调试器将在端口5858上侦听来自调试客户端（例如node-inspector）的传入连接。要指定其他端口，请使用 &lt;code&gt;--debug-port &amp;lt;port&amp;gt;&lt;/code&gt; 选项。</target>
        </trans-unit>
        <trans-unit id="057dbd182acf9a6c2ccbc6671595895194b7d7f9" translate="yes" xml:space="preserve">
          <source>The server process will be suspended just before the first statement of server code that would normally execute. In order to continue execution of server code, use either the web-based Node Inspector or the command-line debugger (further instructions will be printed in the console).</source>
          <target state="translated">在正常执行的服务器代码的第一条语句之前,服务器进程将被暂停。为了继续执行服务器代码,请使用基于Web的Node Inspector或命令行调试器(进一步的说明将打印在控制台中)。</target>
        </trans-unit>
        <trans-unit id="fe8af390358ce5dba4612c0e33e5297f0d01891d" translate="yes" xml:space="preserve">
          <source>The server reads from the &lt;code&gt;MAIL_URL&lt;/code&gt; environment variable to determine how to send mail. The &lt;code&gt;MAIL_URL&lt;/code&gt; should reference an &lt;a href=&quot;https://en.wikipedia.org/wiki/Simple_Mail_Transfer_Protocol&quot;&gt;SMTP&lt;/a&gt; server and use the form &lt;code&gt;smtp://USERNAME:PASSWORD@HOST:PORT&lt;/code&gt; or &lt;code&gt;smtps://USERNAME:PASSWORD@HOST:PORT&lt;/code&gt;. The &lt;code&gt;smtps://&lt;/code&gt; form (the &lt;code&gt;s&lt;/code&gt; is for &amp;ldquo;secure&amp;rdquo;) should be used if the mail server requires TLS/SSL (and does not use &lt;code&gt;STARTTLS&lt;/code&gt;) and is most common on port 465. Connections which start unencrypted prior to being upgraded to TLS/SSL (using &lt;code&gt;STARTTLS&lt;/code&gt;) typically use port 587 (and &lt;em&gt;sometimes&lt;/em&gt; 25) and should use &lt;code&gt;smtp://&lt;/code&gt;. For more information see the &lt;a href=&quot;https://nodemailer.com/smtp/&quot;&gt;Nodemailer docs&lt;/a&gt;</source>
          <target state="translated">服务器从 &lt;code&gt;MAIL_URL&lt;/code&gt; 环境变量中读取信息，以确定如何发送邮件。所述 &lt;code&gt;MAIL_URL&lt;/code&gt; 应引用一个&lt;a href=&quot;https://en.wikipedia.org/wiki/Simple_Mail_Transfer_Protocol&quot;&gt;SMTP&lt;/a&gt;服务器，并使用形式 &lt;code&gt;smtp://USERNAME:PASSWORD@HOST:PORT&lt;/code&gt; 或 &lt;code&gt;smtps://USERNAME:PASSWORD@HOST:PORT&lt;/code&gt; 。该 &lt;code&gt;smtps://&lt;/code&gt; 形式（的 &lt;code&gt;s&lt;/code&gt; 是&amp;ldquo;安全&amp;rdquo;），如果邮件服务器需要TLS / SSL，应使用（不使用 &lt;code&gt;STARTTLS&lt;/code&gt; ），并在端口465连接其升级到加密之前开始最为常见TLS / SSL（使用 &lt;code&gt;STARTTLS&lt;/code&gt; ）通常使用端口587（&lt;em&gt;有时为&lt;/em&gt; 25），并且应使用 &lt;code&gt;smtp://&lt;/code&gt; 。有关更多信息，请参见&lt;a href=&quot;https://nodemailer.com/smtp/&quot;&gt;Nodemailer文档&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="069a91677cd1cf24c181a4723eafdb77ebd45a94" translate="yes" xml:space="preserve">
          <source>The server sets up a query observer on that cursor, unless such an observer already exists on the server (for any user), in which case that observer is re-used.</source>
          <target state="translated">服务器在该游标上设置了一个查询观察器,除非该观察器已经存在于服务器上(对于任何用户),在这种情况下,该观察器被重新使用。</target>
        </trans-unit>
        <trans-unit id="097e5c67d62065e88e6065da77e5ec00a14928d6" translate="yes" xml:space="preserve">
          <source>The server starts up the subscription by running the publication handler function.</source>
          <target state="translated">服务器通过运行发布处理函数来启动订阅。</target>
        </trans-unit>
        <trans-unit id="c5a40c32ec4d5c6a93d6ea4f6e1e60dc0d236f27" translate="yes" xml:space="preserve">
          <source>The server stops its internal subscription object, triggering the following effects:</source>
          <target state="translated">服务器停止其内部订阅对象,触发以下效果。</target>
        </trans-unit>
        <trans-unit id="5fdfc53475d513083d8a034d3c39368f38afe631" translate="yes" xml:space="preserve">
          <source>The service name, such as &amp;ldquo;password&amp;rdquo; or &amp;ldquo;twitter&amp;rdquo;.</source>
          <target state="translated">服务名称，例如&amp;ldquo; password&amp;rdquo;或&amp;ldquo; twitter&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="41acf53ac46904bb6e77bd2a44b34aa17cee14bb" translate="yes" xml:space="preserve">
          <source>The shell maintains a persistent history across sessions. Previously-run commands can be accessed by pressing the up arrow.</source>
          <target state="translated">shell会在不同的会话中保持一个持久的历史记录。以前运行过的命令可以通过按向上箭头访问。</target>
        </trans-unit>
        <trans-unit id="562d3e8f78be8f0d4590814f3055a13d654387ee" translate="yes" xml:space="preserve">
          <source>The shell supports tab completion for global variables like &lt;code&gt;Meteor&lt;/code&gt;, &lt;code&gt;Mongo&lt;/code&gt;, and &lt;code&gt;Package&lt;/code&gt;. Try typing &lt;code&gt;Meteor.is&lt;/code&gt; and then pressing tab.</source>
          <target state="translated">该外壳程序支持 &lt;code&gt;Meteor&lt;/code&gt; ， &lt;code&gt;Mongo&lt;/code&gt; 和 &lt;code&gt;Package&lt;/code&gt; 等全局变量的制表符补全。尝试键入 &lt;code&gt;Meteor.is&lt;/code&gt; ，然后按Tab。</target>
        </trans-unit>
        <trans-unit id="6aa874cbb26c1a6cd4be959c8f1ba01ee5ff71a9" translate="yes" xml:space="preserve">
          <source>The simple way to work around the problem is to take the application down for the period in between deployment and completing the migration. This is far from ideal, especially considering some migrations can take hours to run (although using &lt;a href=&quot;#bulk-data-changes&quot;&gt;Bulk Updates&lt;/a&gt; probably helps a lot here).</source>
          <target state="translated">解决该问题的简单方法是在部署和完成迁移之间的时间内关闭应用程序。这远非理想，尤其是考虑到某些迁移可能需要几个小时才能运行（尽管在这里使用&lt;a href=&quot;#bulk-data-changes&quot;&gt;批量更新&lt;/a&gt;可能会有所帮助）。</target>
        </trans-unit>
        <trans-unit id="dca64431a60adfcc58a7cda7ad819b143861c80b" translate="yes" xml:space="preserve">
          <source>The simplest approach is to point both applications at the same &lt;code&gt;MONGO_URL&lt;/code&gt; and allow both applications to read and write from the database directly. This works well thanks to Meteor&amp;rsquo;s support for reactivity through the database. When one app changes some data in MongoDB, users of any other app connected to the database will see the changes immediately thanks to Meteor&amp;rsquo;s livequery.</source>
          <target state="translated">最简单的方法是将两个应用程序指向相同的 &lt;code&gt;MONGO_URL&lt;/code&gt; ,并允许两个应用程序直接从数据库读取和写入。感谢Meteor通过数据库对反应性的支持，此方法效果很好。当一个应用程序更改MongoDB中的某些数据时，由于Meteor的livequery，连接到数据库的任何其他应用程序的用户将立即看到更改。</target>
        </trans-unit>
        <trans-unit id="415b97d9fafddf82aacde9699b97ade4bea5f0e1" translate="yes" xml:space="preserve">
          <source>The simplest selectors are just a string or &lt;a href=&quot;#mongo_object_id&quot;&gt;&lt;code&gt;Mongo.ObjectID&lt;/code&gt;&lt;/a&gt;. These selectors match the document with that value in its &lt;code&gt;_id&lt;/code&gt; field.</source>
          <target state="translated">最简单的选择器只是一个字符串或&lt;a href=&quot;#mongo_object_id&quot;&gt; &lt;code&gt;Mongo.ObjectID&lt;/code&gt; &lt;/a&gt;。这些选择器将文档的 &lt;code&gt;_id&lt;/code&gt; 字段中的值与该文档匹配。</target>
        </trans-unit>
        <trans-unit id="276138ce12ffe75d29b12930d8c09959208e2833" translate="yes" xml:space="preserve">
          <source>The simplest way to provide a server-server API is to use Meteor&amp;rsquo;s built-in DDP protocol directly. This is the same way your Meteor client gets data from your server, but you can also use it to communicate between different applications. You can use &lt;a href=&quot;http://docs.meteor.com/#/full/ddp_connect&quot;&gt;&lt;code&gt;DDP.connect()&lt;/code&gt;&lt;/a&gt; to connect from a &amp;ldquo;client&amp;rdquo; server to the master server, and then use the connection object returned to make method calls and read from publications.</source>
          <target state="translated">提供服务器-服务器API的最简单方法是直接使用Meteor的内置DDP协议。这与您的Meteor客户端从服务器获取数据的方式相同，但是您也可以使用它在不同的应用程序之间进行通信。您可以使用&lt;a href=&quot;http://docs.meteor.com/#/full/ddp_connect&quot;&gt; &lt;code&gt;DDP.connect()&lt;/code&gt; &lt;/a&gt;从&amp;ldquo;客户端&amp;rdquo;服务器连接到主服务器，然后使用返回的连接对象进行方法调用并从发布中读取。</target>
        </trans-unit>
        <trans-unit id="0cb76e9ab7889fb86c50e261ae5f43478e4cac2b" translate="yes" xml:space="preserve">
          <source>The source files that make up the build plugin, independent from &lt;a href=&quot;#pack_addFiles&quot;&gt;api.addFiles&lt;/a&gt;.</source>
          <target state="translated">组成构建插件的源文件，独立于&lt;a href=&quot;#pack_addFiles&quot;&gt;api.addFiles&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="71f0b54587199ae5ce51413291798c894c72f957" translate="yes" xml:space="preserve">
          <source>The subscription detects this, and given that anything is possible in next computation run, marks itself for destruction.</source>
          <target state="translated">订阅检测到这一点,鉴于在下一次计算运行中任何事情都有可能发生,就将自己标记为销毁。</target>
        </trans-unit>
        <trans-unit id="c6f295b3b87dd070837aff2f0d0a6a3c94dfe452" translate="yes" xml:space="preserve">
          <source>The subscription handle also has another important property, the &lt;code&gt;.stop()&lt;/code&gt; method. When you are subscribing, it is very important to ensure that you always call &lt;code&gt;.stop()&lt;/code&gt; on the subscription when you are done with it. This ensures that the documents sent by the subscription are cleared from your local Minimongo cache and the server stops doing the work required to service your subscription. If you forget to call stop, you&amp;rsquo;ll consume unnecessary resources both on the client and the server.</source>
          <target state="translated">订阅句柄还具有另一个重要属性，即 &lt;code&gt;.stop()&lt;/code&gt; 方法。订阅时，确保在订阅完成后始终在其上调用 &lt;code&gt;.stop()&lt;/code&gt; 非常重要。这样可以确保从本地Minimongo缓存中清除订阅发送的文档，并且服务器停止完成为订阅提供服务所需的工作。如果您忘记了呼叫停止，则将浪费客户端和服务器上不必要的资源。</target>
        </trans-unit>
        <trans-unit id="91927b29e575261e6c8d02feb858ac50e635a114" translate="yes" xml:space="preserve">
          <source>The subscription passes the added documents to the subscribing client&amp;rsquo;s connection &lt;em&gt;mergebox&lt;/em&gt;, which is an on-server cache of the documents that have been published to this particular client. Each document is merged with any existing version of the document that the client knows about, and an &lt;code&gt;added&lt;/code&gt; (if the document is new to the client) or &lt;code&gt;changed&lt;/code&gt; (if it is known but this subscription is adding or changing fields) DDP message is sent.</source>
          <target state="translated">订阅将添加的文档传递到订阅客户端的连接&lt;em&gt;mergebox&lt;/em&gt;，该文件&lt;em&gt;夹&lt;/em&gt;是已发布到此特定客户端的文档的服务器上缓存。每个文档都与客户端知道的文档的任何现有版本合并，并发送 &lt;code&gt;added&lt;/code&gt; （如果该文档是客户端的新文档）或已 &lt;code&gt;changed&lt;/code&gt; （如果已知，但是此订阅正在添加或更改字段）DDP消息。</target>
        </trans-unit>
        <trans-unit id="27cd2a4faa764d089ebe647c80d95c496bd197a5" translate="yes" xml:space="preserve">
          <source>The supported browsers that can be enabled or disabled include, but are not limited to, &lt;code&gt;android&lt;/code&gt;, &lt;code&gt;chrome&lt;/code&gt;, &lt;code&gt;chromium&lt;/code&gt;, &lt;code&gt;chromeMobileIOS&lt;/code&gt;, &lt;code&gt;firefox&lt;/code&gt;, &lt;code&gt;ie&lt;/code&gt;, &lt;code&gt;mobileSafari&lt;/code&gt; and &lt;code&gt;safari&lt;/code&gt;.</source>
          <target state="translated">支持的浏览器，可以启用或禁用包括，但不限于， &lt;code&gt;android&lt;/code&gt; ， &lt;code&gt;chrome&lt;/code&gt; ， &lt;code&gt;chromium&lt;/code&gt; ， &lt;code&gt;chromeMobileIOS&lt;/code&gt; ， &lt;code&gt;firefox&lt;/code&gt; ， &lt;code&gt;ie&lt;/code&gt; ， &lt;code&gt;mobileSafari&lt;/code&gt; 和 &lt;code&gt;safari&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="44c6e24f74b0df3afa42e317d3c73162804f043e" translate="yes" xml:space="preserve">
          <source>The syntax to add a plugin from Git is kind of awkward. The name (the part before the &lt;code&gt;@&lt;/code&gt;) is the plugin ID and will have to match what is specified in the plugin&amp;rsquo;s &lt;code&gt;plugin.xml&lt;/code&gt;. Instead of a version, you specify a URL to a Git repository with the SHA hash as an anchor (the part after the &lt;code&gt;#&lt;/code&gt;):</source>
          <target state="translated">从Git添加插件的语法有点尴尬。名称（ &lt;code&gt;@&lt;/code&gt; 之前的部分）是插件ID，必须与插件的 &lt;code&gt;plugin.xml&lt;/code&gt; 中指定的名称匹配。您可以使用SHA哈希作为锚点（在 &lt;code&gt;#&lt;/code&gt; 之后的部分）指定Git存储库的URL，而不是版本：</target>
        </trans-unit>
        <trans-unit id="6bbb2d039d4932c20a858d127e21c3eb7d1c653b" translate="yes" xml:space="preserve">
          <source>The tag must evaluate to an object that serves as a dictionary of attribute name and value strings. For convenience, the value may also be a string or null. An empty string or null expands to &lt;code&gt;{}&lt;/code&gt;. A non-empty string must be an attribute name, and expands to an attribute with an empty value; for example, &lt;code&gt;&quot;checked&quot;&lt;/code&gt; expands to &lt;code&gt;{checked: &quot;&quot;}&lt;/code&gt; (which, as far as HTML is concerned, means the checkbox is checked).</source>
          <target state="translated">标签必须求值一个对象，该对象充当属性名称和值字符串的字典。为了方便起见，该值也可以是字符串或null。空字符串或null会扩展为 &lt;code&gt;{}&lt;/code&gt; 。非空字符串必须是属性名称，并扩展为具有空值的属性。例如， &lt;code&gt;&quot;checked&quot;&lt;/code&gt; 扩展为 &lt;code&gt;{checked: &quot;&quot;}&lt;/code&gt; （就HTML而言，表示该复选框已选中）。</target>
        </trans-unit>
        <trans-unit id="b8125d20cd4452677a9491582fd02d620c207adf" translate="yes" xml:space="preserve">
          <source>The technique above can also be used to provide a location to &amp;ldquo;hook&amp;rdquo; extra functionality into the collection. For instance, when removing a list, we &lt;em&gt;always&lt;/em&gt; want to remove all of its todos at the same time.</source>
          <target state="translated">上面的技术还可以用于提供一个位置，以&amp;ldquo;挂钩&amp;rdquo;额外的功能到集合中。例如，当删除列表时，我们&lt;em&gt;总是&lt;/em&gt;希望同时删除其所有待办事项。</target>
        </trans-unit>
        <trans-unit id="034e7f74fb6db86e567a63ea331823c40a21e813" translate="yes" xml:space="preserve">
          <source>The template (e.g. &lt;code&gt;Template.myTemplate&lt;/code&gt;) or View object from which to generate HTML.</source>
          <target state="translated">从中生成HTML 的模板（例如 &lt;code&gt;Template.myTemplate&lt;/code&gt; ）或View对象。</target>
        </trans-unit>
        <trans-unit id="d8e63bce841f73d768307448657db139ec098866" translate="yes" xml:space="preserve">
          <source>The template (e.g. &lt;code&gt;Template.myTemplate&lt;/code&gt;) or View object to render.</source>
          <target state="translated">要渲染的模板（例如 &lt;code&gt;Template.myTemplate&lt;/code&gt; ）或View对象。</target>
        </trans-unit>
        <trans-unit id="41249779096e24a297a4e65929b43298def99b87" translate="yes" xml:space="preserve">
          <source>The template (e.g. &lt;code&gt;Template.myTemplate&lt;/code&gt;) or View object to render. If a template, a View object is &lt;a href=&quot;#template_constructview&quot;&gt;constructed&lt;/a&gt;. If a View, it must be an unrendered View, which becomes a rendered View and is returned.</source>
          <target state="translated">要渲染的模板（例如 &lt;code&gt;Template.myTemplate&lt;/code&gt; ）或View对象。如果是模板，则&lt;a href=&quot;#template_constructview&quot;&gt;构造&lt;/a&gt; View对象。如果是View，则它必须是未渲染的View，它将成为渲染的View并返回。</target>
        </trans-unit>
        <trans-unit id="7d84dd762c7d0220ca76f4a43e1c2813420edf4a" translate="yes" xml:space="preserve">
          <source>The template inclusion tag, &lt;code&gt;{{&amp;gt; Todos_item (todoArgs todo)}}&lt;/code&gt; which renders the &lt;code&gt;Todos_item&lt;/code&gt; component with the data context returned from the &lt;code&gt;todosArg&lt;/code&gt; helper.</source>
          <target state="translated">模板包含标签 &lt;code&gt;{{&amp;gt; Todos_item (todoArgs todo)}}&lt;/code&gt; 会使用从 &lt;code&gt;todosArg&lt;/code&gt; 帮助程序返回的数据上下文来呈现 &lt;code&gt;Todos_item&lt;/code&gt; 组件。</target>
        </trans-unit>
        <trans-unit id="573b5fbd0391064796b87f40c1db56b1c4bc4d6a" translate="yes" xml:space="preserve">
          <source>The template instance serves as the document root for the selector. Only elements inside the template and its sub-templates can match parts of the selector.</source>
          <target state="translated">模板实例作为选择器的文档根。只有模板及其子模板中的元素才能匹配选择器的部分内容。</target>
        </trans-unit>
        <trans-unit id="008d54f6db6e00ce95a452f003837c432202d425" translate="yes" xml:space="preserve">
          <source>The test is slightly simpler than the Blaze version above because the React sample app is not internationalized. Otherwise, it&amp;rsquo;s conceptually identical. We use Enzyme&amp;rsquo;s &lt;code&gt;shallow&lt;/code&gt; function to render the &lt;code&gt;TodoItem&lt;/code&gt; component, and the resulting object to query the document, and also to simulate user interactions. And here&amp;rsquo;s an example of simulating a user checking the todo item:</source>
          <target state="translated">该测试比上面的Blaze版本稍微简单一些，因为React示例应用程序尚未国际化。否则，它在概念上是相同的。我们使用酶的 &lt;code&gt;shallow&lt;/code&gt; 函数来呈现 &lt;code&gt;TodoItem&lt;/code&gt; 组件，并使用生成的对象来查询文档并模拟用户交互。这是一个模拟用户检查待办事项的示例：</target>
        </trans-unit>
        <trans-unit id="f343dc469f126c1ea38aefc825230c5c7a86d365" translate="yes" xml:space="preserve">
          <source>The token retrieved from the reset password URL.</source>
          <target state="translated">从重置密码URL中获取的令牌。</target>
        </trans-unit>
        <trans-unit id="2c6e0b8ef722da8420c87bbca69163609f13e897" translate="yes" xml:space="preserve">
          <source>The token retrieved from the verification URL.</source>
          <target state="translated">从验证URL中获取的令牌。</target>
        </trans-unit>
        <trans-unit id="8bda0c1c785971202641067eef854eeb2b5c0955" translate="yes" xml:space="preserve">
          <source>The two alteratives to Angular are &lt;a href=&quot;blaze&quot;&gt;Blaze&lt;/a&gt; and &lt;a href=&quot;react&quot;&gt;React&lt;/a&gt;. &lt;a href=&quot;ui-ux#view-layers&quot;&gt;Here&amp;rsquo;s a comparison&lt;/a&gt; of all three.</source>
          <target state="translated">Angular的两个替代方案是&lt;a href=&quot;blaze&quot;&gt;Blaze&lt;/a&gt;和&lt;a href=&quot;react&quot;&gt;React&lt;/a&gt;。&lt;a href=&quot;ui-ux#view-layers&quot;&gt;这&lt;/a&gt;是所有三个的比较。</target>
        </trans-unit>
        <trans-unit id="251bf726eb97960278b61f839fdf72b93fb2ca39" translate="yes" xml:space="preserve">
          <source>The two nodes &lt;code&gt;firstNode&lt;/code&gt; and &lt;code&gt;lastNode&lt;/code&gt; indicate the extent of the rendered template in the DOM. The rendered template includes these nodes, their intervening siblings, and their descendents. These two nodes are siblings (they have the same parent), and &lt;code&gt;lastNode&lt;/code&gt; comes after &lt;code&gt;firstNode&lt;/code&gt;, or else they are the same node.</source>
          <target state="translated">两个节点 &lt;code&gt;firstNode&lt;/code&gt; 和 &lt;code&gt;lastNode&lt;/code&gt; 指示DOM中渲染模板的范围。呈现的模板包括这些节点，它们之间的同级兄弟及其后代。这两个节点是同级节点（它们具有相同的父节点），并且 &lt;code&gt;lastNode&lt;/code&gt; 在 &lt;code&gt;firstNode&lt;/code&gt; 之后，否则它们是同一节点。</target>
        </trans-unit>
        <trans-unit id="1d7ffd8a888b1262ac59e6639f670a995882f6fe" translate="yes" xml:space="preserve">
          <source>The unsigned &lt;code&gt;apk&lt;/code&gt; bundle and the outputted Xcode project can be used to deploy your mobile apps to Android Play Store and Apple App Store.</source>
          <target state="translated">未签名的 &lt;code&gt;apk&lt;/code&gt; 捆绑包和输出的Xcode项目可用于将您的移动应用程序部署到Android Play商店和Apple App Store。</target>
        </trans-unit>
        <trans-unit id="cfcdd510434f17af6c092af6290adc687923cf50" translate="yes" xml:space="preserve">
          <source>The user &lt;code&gt;userId&lt;/code&gt; wants to insert the document &lt;code&gt;doc&lt;/code&gt; into the collection. Return &lt;code&gt;true&lt;/code&gt; if this should be allowed.</source>
          <target state="translated">用户 &lt;code&gt;userId&lt;/code&gt; 想要将文档 &lt;code&gt;doc&lt;/code&gt; 插入集合中。如果应允许，则返回 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fe801444a7c8711efa09c71940bb8ba8ae6f6b09" translate="yes" xml:space="preserve">
          <source>The user &lt;code&gt;userId&lt;/code&gt; wants to remove &lt;code&gt;doc&lt;/code&gt; from the database. Return &lt;code&gt;true&lt;/code&gt; to permit this.</source>
          <target state="translated">用户 &lt;code&gt;userId&lt;/code&gt; 想要从数据库中删除 &lt;code&gt;doc&lt;/code&gt; 。返回 &lt;code&gt;true&lt;/code&gt; 以允许这样做。</target>
        </trans-unit>
        <trans-unit id="08bef4fc2671c2024349524e02270b0ba38a2819" translate="yes" xml:space="preserve">
          <source>The user &lt;code&gt;userId&lt;/code&gt; wants to update a document &lt;code&gt;doc&lt;/code&gt;. (&lt;code&gt;doc&lt;/code&gt; is the current version of the document from the database, without the proposed update.) Return &lt;code&gt;true&lt;/code&gt; to permit the change.</source>
          <target state="translated">用户 &lt;code&gt;userId&lt;/code&gt; 想要更新文档 &lt;code&gt;doc&lt;/code&gt; 。（ &lt;code&gt;doc&lt;/code&gt; 是数据库中文档的当前版本，没有建议的更新。）返回 &lt;code&gt;true&lt;/code&gt; 以允许进行更改。</target>
        </trans-unit>
        <trans-unit id="9b98eab3af4d739796a1a360b91b07b1db47c9f0" translate="yes" xml:space="preserve">
          <source>The user id is an arbitrary string &amp;mdash; typically the id of the user record in the database. You can set it with the &lt;code&gt;setUserId&lt;/code&gt; function. If you&amp;rsquo;re using the &lt;a href=&quot;#accounts_api&quot;&gt;Meteor accounts system&lt;/a&gt; then this is handled for you.</source>
          <target state="translated">用户ID是任意字符串，通常是数据库中用户记录的ID。您可以使用 &lt;code&gt;setUserId&lt;/code&gt; 函数进行设置。如果您使用的是&lt;a href=&quot;#accounts_api&quot;&gt;Meteor帐户系统，&lt;/a&gt;则将为您处理。</target>
        </trans-unit>
        <trans-unit id="bf032e7944e1e3983413c57fa3ae8548dca23173" translate="yes" xml:space="preserve">
          <source>The user presses a keyboard key. &lt;code&gt;keypress&lt;/code&gt; is most useful for catching typing in text fields, while &lt;code&gt;keydown&lt;/code&gt; and &lt;code&gt;keyup&lt;/code&gt; can be used for arrow keys or modifier keys.</source>
          <target state="translated">用户按下键盘键。 &lt;code&gt;keypress&lt;/code&gt; 对于捕获文本字段中的输入最为有用，而 &lt;code&gt;keydown&lt;/code&gt; 和 &lt;code&gt;keyup&lt;/code&gt; 则可用于箭头键或修饰键。</target>
        </trans-unit>
        <trans-unit id="0e8f396aec2f98b55e4d3dffa0512958e211f380" translate="yes" xml:space="preserve">
          <source>The user's current password. This is &lt;strong&gt;not&lt;/strong&gt; sent in plain text over the wire.</source>
          <target state="translated">用户的当前密码。这&lt;strong&gt;不会&lt;/strong&gt;以纯文本形式通过网络发送。</target>
        </trans-unit>
        <trans-unit id="807c55624f8479c8eb47f6be16ce5d1b43ab7288" translate="yes" xml:space="preserve">
          <source>The user's email address.</source>
          <target state="translated">用户的电子邮件地址。</target>
        </trans-unit>
        <trans-unit id="10eab012c461bfc94dae75aa1fcd8595ad75aaa3" translate="yes" xml:space="preserve">
          <source>The user's password.</source>
          <target state="translated">用户的密码。</target>
        </trans-unit>
        <trans-unit id="59a0e240b9207fb55d72a9754f4e95a7557b4d0f" translate="yes" xml:space="preserve">
          <source>The user's password. This is &lt;strong&gt;not&lt;/strong&gt; sent in plain text over the wire.</source>
          <target state="translated">用户密码。这&lt;strong&gt;不会&lt;/strong&gt;以纯文本形式通过网络发送。</target>
        </trans-unit>
        <trans-unit id="08cc72d10c9fa5edf945d26a3ed1b5582f01e95e" translate="yes" xml:space="preserve">
          <source>The user's profile, typically including the &lt;code&gt;name&lt;/code&gt; field.</source>
          <target state="translated">用户的个人资料，通常包括 &lt;code&gt;name&lt;/code&gt; 字段。</target>
        </trans-unit>
        <trans-unit id="58253cd708fc4aae51ae3f5cce7ee272c7c95324" translate="yes" xml:space="preserve">
          <source>The username to look for</source>
          <target state="translated">要找的用户名</target>
        </trans-unit>
        <trans-unit id="e71b6aa32f716490ff5aaa8aa6ada5169a88d769" translate="yes" xml:space="preserve">
          <source>The value for that preference.</source>
          <target state="translated">该优惠的价值。</target>
        </trans-unit>
        <trans-unit id="f0c9eb5c99d36714cd633ae73fcbbea6530e2cdd" translate="yes" xml:space="preserve">
          <source>The value that should be returned by &lt;code&gt;userId&lt;/code&gt; on this connection.</source>
          <target state="translated">此连接上的 &lt;code&gt;userId&lt;/code&gt; 应该返回的值。</target>
        </trans-unit>
        <trans-unit id="224a586b5c96fa838ab0d25ab2f1c9ecb9042587" translate="yes" xml:space="preserve">
          <source>The value to check</source>
          <target state="translated">要检查的值</target>
        </trans-unit>
        <trans-unit id="3fdb08efce1dd734be1b5cea101b0b4e5b482201" translate="yes" xml:space="preserve">
          <source>The value to test against</source>
          <target state="translated">要测试的值</target>
        </trans-unit>
        <trans-unit id="572affcd555e45a118ca8c255703b01188667dc6" translate="yes" xml:space="preserve">
          <source>The value to test.</source>
          <target state="translated">要测试的数值。</target>
        </trans-unit>
        <trans-unit id="f6aec9757e763674c114ae79bf7a90019a5f4b5e" translate="yes" xml:space="preserve">
          <source>The variable to check.</source>
          <target state="translated">要检查的变量。</target>
        </trans-unit>
        <trans-unit id="71addf175afde40d4d6f69932118df3855185e6e" translate="yes" xml:space="preserve">
          <source>The way that you move data from the server (and MongoDB-backed) collection into the client (in-memory) collection is the subject of the &lt;a href=&quot;data-loading&quot;&gt;data loading article&lt;/a&gt;. Generally speaking, you &lt;em&gt;subscribe&lt;/em&gt; to a &lt;em&gt;publication&lt;/em&gt;, which pushes data from the server to the client. Usually, you can assume that the client contains an up-to-date copy of some subset of the full MongoDB collection.</source>
          <target state="translated">将数据从服务器（和受MongoDB支持的）集合中移动到客户端（内存中）集合的方式是&lt;a href=&quot;data-loading&quot;&gt;数据加载文章&lt;/a&gt;的主题。一般来说，你&lt;em&gt;订阅&lt;/em&gt;的&lt;em&gt;刊物&lt;/em&gt;，从服务器到客户端推送数据。通常，您可以假定客户端包含完整的MongoDB集合的某些子集的最新副本。</target>
        </trans-unit>
        <trans-unit id="30f5a256e98f9ccafa77d05bb3ec50f629893163" translate="yes" xml:space="preserve">
          <source>The way this package works is to first establish a cursor on one collection, and then explicitly set up a second level of cursors on a second collection with the results of the first cursor. The package uses a query observer behind the scenes to trigger the subscription to change and queries to re-run whenever the source data changes.</source>
          <target state="translated">该包的工作方式是先在一个集合上建立一个游标,然后用第一个游标的结果在第二个集合上显式建立第二级游标。该包在后台使用了一个查询观察器,只要源数据发生变化,就会触发订阅的变化和查询的重新运行。</target>
        </trans-unit>
        <trans-unit id="3911b92d29cad53d31a6e86b7339b0a08113614e" translate="yes" xml:space="preserve">
          <source>The web view situation on Android is a little more complicated. On older Android versions, the included web view is known to be rather slow and buggy. That improved somewhat with Android 4.4, which includes a web view based on Chromium, the open source project behind the Chrome browser.</source>
          <target state="translated">安卓系统上的web视图情况比较复杂。在旧的Android版本上,包含的Web视图被认为相当缓慢和错误。这种情况在Android 4.4中得到了一定的改善,它包含了一个基于Chromium的Web视图,Chrome浏览器背后的开源项目。</target>
        </trans-unit>
        <trans-unit id="f8d0127e05868bdd01cc2bef27a7b76f589b6e20" translate="yes" xml:space="preserve">
          <source>The whole directory or path should indicate that these templates are related to the &lt;code&gt;Lists&lt;/code&gt; module, so it&amp;rsquo;s not necessary to reproduce that information in the file name. Read more about directory structure &lt;a href=&quot;structure#javascript-structure&quot;&gt;below&lt;/a&gt;.</source>
          <target state="translated">整个目录或路径应指示这些模板与&amp;ldquo; &lt;code&gt;Lists&lt;/code&gt; 模块相关，因此不必在文件名中重现该信息。&lt;a href=&quot;structure#javascript-structure&quot;&gt;在下面&lt;/a&gt;阅读有关目录结构的更多信息。</target>
        </trans-unit>
        <trans-unit id="17ceb8a53f7ac1ca2da2c14a2be51c5643c2f2f1" translate="yes" xml:space="preserve">
          <source>Then &lt;strong&gt;restart&lt;/strong&gt; (or &lt;strong&gt;reload&lt;/strong&gt; by pressing Ctrl+Alt+R / Cmd+Opt+R) Atom to activate linting.</source>
          <target state="translated">然后&lt;strong&gt;重新启动&lt;/strong&gt;（或通过按Ctrl + Alt + R / Cmd + Opt + R &lt;strong&gt;重新加载&lt;/strong&gt;）Atom以激活棉绒。</target>
        </trans-unit>
        <trans-unit id="1d3382dd82b1cd83e103bbc2c27f6d355cfcfd5b" translate="yes" xml:space="preserve">
          <source>Then just include it anywhere in a Blaze template:</source>
          <target state="translated">然后将其包含在Blaze模板的任何地方即可。</target>
        </trans-unit>
        <trans-unit id="9f8939db65b9680811ecc2555a938732b394618f" translate="yes" xml:space="preserve">
          <source>Then on the client side, we&amp;rsquo;d set some kind of reactive state variable to control how many items to request:</source>
          <target state="translated">然后在客户端，我们将设置某种反应性状态变量来控制要请求的项目数：</target>
        </trans-unit>
        <trans-unit id="f4d9739e6092184526ef79541a30ac9c3401861e" translate="yes" xml:space="preserve">
          <source>Then on the client, after subscribing to that publication, we can access the count with</source>
          <target state="translated">然后在客户端上,订阅该刊物后,我们可以通过以下方式获取该刊物的数量</target>
        </trans-unit>
        <trans-unit id="7072456d1ba04eaf3f572a3a3033977e037d8365" translate="yes" xml:space="preserve">
          <source>Then simply add the &lt;code&gt;{{&amp;gt; loginButtons}}&lt;/code&gt; helper to an HTML file. This will place a login widget on the page. If there is only one provider configured and it is an external service, this will add a login/logout button. If you use &lt;code&gt;accounts-password&lt;/code&gt; or use multiple external login services, this will add a &amp;ldquo;Sign in&amp;rdquo; link which opens a dropdown menu with login options. If you plan to position the login dropdown in the right edge of the screen, use &lt;code&gt;{{&amp;gt; loginButtons align=&quot;right&quot;}}&lt;/code&gt; in order to get the dropdown to lay itself out without expanding off the edge of the screen.</source>
          <target state="translated">然后，只需将 &lt;code&gt;{{&amp;gt; loginButtons}}&lt;/code&gt; 帮助器添加到HTML文件。这将在页面上放置一个登录小部件。如果仅配置了一个提供程序，并且它是一项外部服务，则将添加一个登录/注销按钮。如果您使用 &lt;code&gt;accounts-password&lt;/code&gt; 或使用多个外部登录服务，则将添加&amp;ldquo;登录&amp;rdquo;链接，该链接将打开一个包含登录选项的下拉菜单。如果您打算将登录下拉菜单放置在屏幕的右侧，请使用 &lt;code&gt;{{&amp;gt; loginButtons align=&quot;right&quot;}}&lt;/code&gt; ，以使下拉菜单在不扩大屏幕边缘的情况下进行布局。</target>
        </trans-unit>
        <trans-unit id="aa68d811db3705a398d7f023589ffb5ac8d66234" translate="yes" xml:space="preserve">
          <source>Then somewhere in your UI you can &lt;code&gt;CurrentLanguage.set('es')&lt;/code&gt; when a user chooses a new language.</source>
          <target state="translated">然后，当用户选择一种新语言时，您可以在用户界面的某个 &lt;code&gt;CurrentLanguage.set('es')&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ffac89bfc6e35fb7f8b28410fec691dee710b039" translate="yes" xml:space="preserve">
          <source>Then the &lt;code&gt;validate()&lt;/code&gt; call will throw a &lt;code&gt;ValidationError&lt;/code&gt; which contains details about what is wrong with the &lt;code&gt;list&lt;/code&gt; document.</source>
          <target state="translated">然后 &lt;code&gt;validate()&lt;/code&gt; 调用将引发 &lt;code&gt;ValidationError&lt;/code&gt; ，其中包含有关 &lt;code&gt;list&lt;/code&gt; 文档出问题的详细信息。</target>
        </trans-unit>
        <trans-unit id="260b32eee2d9a5b59e01c5ec1dbac06b4b12a7b8" translate="yes" xml:space="preserve">
          <source>Then use it directly after you shrinkwrap</source>
          <target state="translated">那就在你收缩包装后直接使用吧</target>
        </trans-unit>
        <trans-unit id="74c6024d2e572e7374bad7c40761f6fbca1e759b" translate="yes" xml:space="preserve">
          <source>Then we can install any npm CSS processing packages that we&amp;rsquo;d like to use and reference them from a &lt;code&gt;postcss&lt;/code&gt; section of our &lt;code&gt;package.json&lt;/code&gt;. In the Todos example app, we use &lt;code&gt;autoprefixer&lt;/code&gt; package to increase browser support:</source>
          <target state="translated">然后，我们可以安装要使用的所有npm CSS处理程序包，并从 &lt;code&gt;package.json&lt;/code&gt; 的 &lt;code&gt;postcss&lt;/code&gt; 部分中引用它们。在Todos示例应用程序中，我们使用 &lt;code&gt;autoprefixer&lt;/code&gt; 软件包来增加浏览器支持：</target>
        </trans-unit>
        <trans-unit id="573abc801b2e89cb55d831c86476e22620e88570" translate="yes" xml:space="preserve">
          <source>Then we create a &lt;code&gt;ListPageContainer&lt;/code&gt; container component which wraps it and provides a data source:</source>
          <target state="translated">然后，我们创建一个 &lt;code&gt;ListPageContainer&lt;/code&gt; 容器组件，将其包装并提供数据源：</target>
        </trans-unit>
        <trans-unit id="41c39c5ed035281dfd4080e777ed40dd343de321" translate="yes" xml:space="preserve">
          <source>Then when a client calls &lt;code&gt;Meteor.subscribe('Posts.all')&lt;/code&gt; the following things happen inside Meteor:</source>
          <target state="translated">然后，当客户调用 &lt;code&gt;Meteor.subscribe('Posts.all')&lt;/code&gt; 时，Meteor内部发生以下情况：</target>
        </trans-unit>
        <trans-unit id="d8c3d9a94679f38475c8ba863bf42d61eed4fad5" translate="yes" xml:space="preserve">
          <source>Then you can call that function from within an event handler:</source>
          <target state="translated">然后你可以从事件处理程序中调用该函数。</target>
        </trans-unit>
        <trans-unit id="9a9eb38d2a2f935321307f2ba1548c6e36667347" translate="yes" xml:space="preserve">
          <source>Then you can call this helper from template like this:</source>
          <target state="translated">然后,你可以从模板中调用这个助手,像这样。</target>
        </trans-unit>
        <trans-unit id="28c7cbf60740227e4b5fe04cc6418e3ab825fa0b" translate="yes" xml:space="preserve">
          <source>Then you can open two browser windows to see the app in action while also ensuring that you don&amp;rsquo;t break any tests as you make changes.</source>
          <target state="translated">然后，您可以打开两个浏览器窗口以查看应用程序的运行情况，同时确保在进行更改时不会破坏任何测试。</target>
        </trans-unit>
        <trans-unit id="8031e6eeba4412cee7511fc6dc77cce0b1a22293" translate="yes" xml:space="preserve">
          <source>Then, in your app (this example is for the Weebo service):</source>
          <target state="translated">然后,在你的应用中(这个例子是针对Weebo服务的)。</target>
        </trans-unit>
        <trans-unit id="8cd450ec03ae5a265091ed22d858bbec593ebb0a" translate="yes" xml:space="preserve">
          <source>Then, like with any other &lt;a href=&quot;https://guide.meteor.com/using-packages.html#npm&quot;&gt;npm package&lt;/a&gt;, you can import the component in your application:</source>
          <target state="translated">然后，与其他&lt;a href=&quot;https://guide.meteor.com/using-packages.html#npm&quot;&gt;npm软件包一样&lt;/a&gt;，您可以在应用程序中导入组件：</target>
        </trans-unit>
        <trans-unit id="4bde930c0db8e155e3e481dedb64107f8c4b1ffc" translate="yes" xml:space="preserve">
          <source>Then, make sure to pick a login provider; they will automatically integrate with &lt;code&gt;accounts-ui&lt;/code&gt;:</source>
          <target state="translated">然后，确保选择一个登录提供程序；他们将自动与 &lt;code&gt;accounts-ui&lt;/code&gt; 集成：</target>
        </trans-unit>
        <trans-unit id="9f6aea17917affab1cf7bf3c7dbfb69dae113f60" translate="yes" xml:space="preserve">
          <source>Then, upsert into the &lt;code&gt;ServiceConfiguration&lt;/code&gt; collection:</source>
          <target state="translated">然后，向上插入 &lt;code&gt;ServiceConfiguration&lt;/code&gt; 集合：</target>
        </trans-unit>
        <trans-unit id="b744cde79a1b4ac3b6afad6287dca315638c63e9" translate="yes" xml:space="preserve">
          <source>Then, use the &lt;code&gt;replaces&lt;/code&gt; function on the template to override the existing template from &lt;code&gt;useraccounts&lt;/code&gt;:</source>
          <target state="translated">然后，使用模板上的 &lt;code&gt;replaces&lt;/code&gt; 函数从 &lt;code&gt;useraccounts&lt;/code&gt; 覆盖现有模板：</target>
        </trans-unit>
        <trans-unit id="913f2bbc905424a2214ec1676fe36fe6118b4fb2" translate="yes" xml:space="preserve">
          <source>Then, you can install Ubuntu Make itself:</source>
          <target state="translated">然后,你可以自己安装Ubuntu Make。</target>
        </trans-unit>
        <trans-unit id="ccbe4b42586263d044fa5838e3a8b202e1122a13" translate="yes" xml:space="preserve">
          <source>Then, you need to get the user&amp;rsquo;s access token. You can find this token in the &lt;code&gt;Meteor.users&lt;/code&gt; collection under the &lt;code&gt;services&lt;/code&gt; field. For example, if you wanted to get a particular user&amp;rsquo;s Facebook access token:</source>
          <target state="translated">然后，您需要获取用户的访问令牌。您可以在 &lt;code&gt;Meteor.users&lt;/code&gt; 集合中的 &lt;code&gt;services&lt;/code&gt; 字段下找到此令牌。例如，如果您想获取特定用户的Facebook访问令牌：</target>
        </trans-unit>
        <trans-unit id="0616b2298bc7bf0120583700f8e42e63bb5d9fac" translate="yes" xml:space="preserve">
          <source>There are a few UX techniques for dealing with this waiting period. The simplest is simply to switch out the page you are rendering with a generic &amp;ldquo;loading&amp;rdquo; page while you wait for all the data (typically a page may open several subscriptions) to load. As an example, in the Todos example app, we wait until all the public lists and the user&amp;rsquo;s private lists have loaded before we try to render the actual page:</source>
          <target state="translated">有几种UX技术可以处理此等待时间。最简单的方法就是，在等待所有数据（通常一个页面可能会打开多个订阅）加载时，用通用的&amp;ldquo;加载&amp;rdquo;页面切换出正在渲染的页面。作为示例，在Todos示例应用程序中，我们等待直到所有公共列表和用户的私人列表都已加载，然后再尝试渲染实际页面：</target>
        </trans-unit>
        <trans-unit id="da275f2e26e4c28337f85a135b94b346fbf76f30" translate="yes" xml:space="preserve">
          <source>There are a few built-in block helpers that are worth knowing about:</source>
          <target state="translated">有几个内置的区块助手是值得了解的。</target>
        </trans-unit>
        <trans-unit id="3b3b1fa605865c0bbd62ab255e0141b17088222d" translate="yes" xml:space="preserve">
          <source>There are a few points to know about configuring OAuth login:</source>
          <target state="translated">配置OAuth登录有几点需要了解。</target>
        </trans-unit>
        <trans-unit id="1a4d3b881a64de5bae1c3445eddbfc0bad8a0b33" translate="yes" xml:space="preserve">
          <source>There are a few things to understand about this code block. First, we&amp;rsquo;ve named the publication with the unique string &lt;code&gt;lists.public&lt;/code&gt;, and that will be how we access it from the client. Second, we are simply returning a Mongo &lt;em&gt;cursor&lt;/em&gt; from the publication function. Note that the cursor is filtered to only return certain fields from the collection, as detailed in the &lt;a href=&quot;security#fields&quot;&gt;Security article&lt;/a&gt;.</source>
          <target state="translated">关于此代码块，需要了解一些事情。首先，我们使用唯一的字符串 &lt;code&gt;lists.public&lt;/code&gt; 命名发布，这就是我们从客户端访问它的方式。其次，我们只是从发布函数返回一个Mongo &lt;em&gt;游标&lt;/em&gt;。请注意，如&amp;ldquo; &lt;a href=&quot;security#fields&quot;&gt;安全性&amp;rdquo;文章&lt;/a&gt;中所述，将光标过滤为仅返回集合中的某些字段。</target>
        </trans-unit>
        <trans-unit id="f279f980da322c753b3d3b123835e562e12b4bc3" translate="yes" xml:space="preserve">
          <source>There are a few ways to search for Meteor packages published to Atmosphere:</source>
          <target state="translated">有几种方法可以搜索发布到Atmosphere的Meteor包。</target>
        </trans-unit>
        <trans-unit id="0eae0f347d8525842b158b584cb38dde66950cf7" translate="yes" xml:space="preserve">
          <source>There are a variety of services out there, and we recommend that you select one of the below services depending on your requirements:</source>
          <target state="translated">服务有很多种,我们建议你根据自己的要求选择以下服务之一。</target>
        </trans-unit>
        <trans-unit id="a77ca7c834708bc27abce528eb4fe0c5dca2d9d7" translate="yes" xml:space="preserve">
          <source>There are a variety of states that such a list can be in:</source>
          <target state="translated">这样的名单可以有多种状态。</target>
        </trans-unit>
        <trans-unit id="0a8fd0cbe5c5ba2ada837c704e9b11a68c8df87e" translate="yes" xml:space="preserve">
          <source>There are also two Spacebars built-in helpers, &lt;code&gt;{{#each}}&lt;/code&gt;, and &lt;code&gt;{{#with}}&lt;/code&gt;, which we do not recommend using (see prefer using each-in). These block helpers change the data context within a template, which can be difficult to reason about.</source>
          <target state="translated">另外，我们不建议使用两个内置的空格键内置帮助器 &lt;code&gt;{{#each}}&lt;/code&gt; 和 &lt;code&gt;{{#with}}&lt;/code&gt; （请参阅首选使用each-in）。这些块帮助程序会更改模板中的数据上下文，这可能很难推理。</target>
        </trans-unit>
        <trans-unit id="de9db9f125309420b9eaf551aa5225901471c409" translate="yes" xml:space="preserve">
          <source>There are several load order rules. They are &lt;em&gt;applied sequentially&lt;/em&gt; to all applicable files in the application, in the priority given below:</source>
          <target state="translated">有几个加载顺序规则。它们&lt;em&gt;将按&lt;/em&gt;以下优先级&lt;em&gt;顺序应用于&lt;/em&gt;应用程序中所有适用的文件：</target>
        </trans-unit>
        <trans-unit id="643b5d33eec2cb6ebea1e10e6cb8fe7af80e31a3" translate="yes" xml:space="preserve">
          <source>There are several options. Choose the ones that makes sense for your app. You may depend on more than one and set up different test commands for different situations.</source>
          <target state="translated">有几个选项。选择对你的应用有意义的。您可以依赖多个选项,并为不同情况设置不同的测试命令。</target>
        </trans-unit>
        <trans-unit id="47cd41854f1f21c6492e42cc51ca1b7e984fef53" translate="yes" xml:space="preserve">
          <source>There are some advantages of splitting your application in this way:</source>
          <target state="translated">用这种方式拆分你的应用程序有一些优势。</target>
        </trans-unit>
        <trans-unit id="ec780adbc9edba54f7c0e2a6046d003ce4834206" translate="yes" xml:space="preserve">
          <source>There are some other considerations that you should make before you deploy your application to a production host. Remember that you should if possible do these steps for both your production &lt;em&gt;and&lt;/em&gt; staging environments.</source>
          <target state="translated">在将应用程序部署到生产主机之前，还应考虑其他一些注意事项。请记住，如果可能，您应该在生产&lt;em&gt;和&lt;/em&gt;暂存环境中都执行这些步骤。</target>
        </trans-unit>
        <trans-unit id="16ce97471d90d7ab84abc40ca0cbd444d1605cef" translate="yes" xml:space="preserve">
          <source>There are three CSS pre-processors that are particularly popular right now:</source>
          <target state="translated">现在特别流行的CSS前处理器有三种。</target>
        </trans-unit>
        <trans-unit id="b92e0c816137fbce8e368720b2f3e96dc5c961b2" translate="yes" xml:space="preserve">
          <source>There are three main locations in the HTML where template tags are allowed:</source>
          <target state="translated">在HTML中,允许使用模板标签的位置主要有三个。</target>
        </trans-unit>
        <trans-unit id="f97831b97e3142dfd1638a82832efb146598bd0a" translate="yes" xml:space="preserve">
          <source>There are three types of build plugins supported by Meteor today:</source>
          <target state="translated">目前Meteor支持的构建插件有三种类型。</target>
        </trans-unit>
        <trans-unit id="b55369396dc38842070e110e69cfabbaea6e8805" translate="yes" xml:space="preserve">
          <source>There are two main kinds of test driver packages:</source>
          <target state="translated">测试驱动包主要有两种。</target>
        </trans-unit>
        <trans-unit id="dfa4cc6275a1be273aa99621fffa8ed93477a3e1" translate="yes" xml:space="preserve">
          <source>There are two main options for routing with Meteor and React. Either way, we recommend consulting our &lt;a href=&quot;routing&quot;&gt;Routing article&lt;/a&gt; for some general principles of routing in Meteor before writing your app.</source>
          <target state="translated">使用Meteor和React进行路由有两个主要选项。无论哪种方式，我们都建议您在编写应用程序之前查阅&amp;ldquo; &lt;a href=&quot;routing&quot;&gt;路由&amp;rdquo;文章，&lt;/a&gt;了解Meteor中路由的一些一般原则。</target>
        </trans-unit>
        <trans-unit id="0219a31195ba33c6e3e859d4f4599fb46f8cf025" translate="yes" xml:space="preserve">
          <source>There are two main ways to configure your application outside of the code of the app itself:</source>
          <target state="translated">在应用程序本身的代码之外,有两种主要的方式来配置你的应用程序。</target>
        </trans-unit>
        <trans-unit id="cdb30cded6eb49815f7639ec528590f00713c5bb" translate="yes" xml:space="preserve">
          <source>There are two principal ways to do it: on the developer&amp;rsquo;s machine before allowing them to push code to the central repository, and on a dedicated CI server after each push. Both techniques are useful, and both require running tests in a commandline-only fashion.</source>
          <target state="translated">有两种主要的实现方法：在允许开发人员将代码推送到中央存储库之前，在开发人员的计算机上；以及在每次推送之后在专用CI服务器上。两种技术都很有用，并且都需要以仅命令行方式运行测试。</target>
        </trans-unit>
        <trans-unit id="43c4918fa555b203c351dfdd223a82fcdeb657a3" translate="yes" xml:space="preserve">
          <source>There are two styles of pagination that are commonly used, a &amp;ldquo;page-by-page&amp;rdquo; style&amp;mdash;where you show only one page of results at a time, starting at some offset (which the user can control), and &amp;ldquo;infinite-scroll&amp;rdquo; style, where you show an increasing number of pages of items, as the user moves through the list (this is the typical &amp;ldquo;feed&amp;rdquo; style user interface).</source>
          <target state="translated">共有两种分页样式，一种是&amp;ldquo;逐页&amp;rdquo;样式-您一次只显示一页结果，从某个偏移量开始（用户可以控制），而&amp;ldquo;无限滚动&amp;rdquo; &amp;rdquo;样式，随着用户在列表中移动，您将显示越来越多的项目页面（这是典型的&amp;ldquo;提要&amp;rdquo;样式用户界面）。</target>
        </trans-unit>
        <trans-unit id="c6e479eb712d65001efc0c3274b79c7089c641d5" translate="yes" xml:space="preserve">
          <source>There are two types of minifiers one can add: a minifier processing JavaScript (registered extensions: &lt;code&gt;['js']&lt;/code&gt;) and a minifier processing CSS (extensions: &lt;code&gt;['css']&lt;/code&gt;).</source>
          <target state="translated">可以添加两种类型的minifier：处理JavaScript的minifier（注册的扩展名： &lt;code&gt;['js']&lt;/code&gt; ）和处理CSS的minifier（扩展名： &lt;code&gt;['css']&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="cf02af84cef61722b1c0fd9d70c286fa884e8629" translate="yes" xml:space="preserve">
          <source>There are types of rendering logic that appear related to the route but which also seem related to user interface rendering. A classic example is authorization; for instance, you may want to render a login form for some subset of your pages if the user is not yet logged in.</source>
          <target state="translated">有一些类型的渲染逻辑看起来与路由有关,但看起来也与用户界面渲染有关。一个典型的例子是授权;例如,如果用户还没有登录,你可能想为你的某些页面子集渲染一个登录表单。</target>
        </trans-unit>
        <trans-unit id="feab03640f5b214fd02eb8bb24522c7d32ba70f6" translate="yes" xml:space="preserve">
          <source>There have been several articles about the potential pitfalls of accepting MongoDB update operators from the client, in particular the &lt;a href=&quot;https://www.discovermeteor.com/blog/allow-deny-security-challenge/&quot;&gt;Allow &amp;amp; Deny Security Challenge&lt;/a&gt; and its &lt;a href=&quot;https://www.discovermeteor.com/blog/allow-deny-challenge-results/&quot;&gt;results&lt;/a&gt;, both on the Discover Meteor blog.</source>
          <target state="translated">Discover Meteor博客上已有几篇文章介绍了从客户端接受MongoDB更新操作员的潜在陷阱，特别是&amp;ldquo; &lt;a href=&quot;https://www.discovermeteor.com/blog/allow-deny-security-challenge/&quot;&gt;允许与拒绝安全挑战&amp;rdquo;&lt;/a&gt;及其&lt;a href=&quot;https://www.discovermeteor.com/blog/allow-deny-challenge-results/&quot;&gt;结果&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f6637cc8dcff95fec1db52157e25b45ccd9b5eb4" translate="yes" xml:space="preserve">
          <source>There is a case where you might &lt;em&gt;need&lt;/em&gt; to use CommonJS, even if your project has the &lt;code&gt;ecmascript&lt;/code&gt; package: if you want to conditionally include a module. &lt;code&gt;import&lt;/code&gt; statements must be at top-level scope, so they cannot be within an &lt;code&gt;if&lt;/code&gt; block. If you&amp;rsquo;re writing a common file, loaded on both client and server, you might want to import a module in only one or the other environment:</source>
          <target state="translated">在 &lt;code&gt;ecmascript&lt;/code&gt; 情况下，即使您的项目具有ecmascript程序包，也可能&lt;em&gt;需要&lt;/em&gt;使用CommonJS ：如果要有条件地包括模块。 &lt;code&gt;import&lt;/code&gt; 语句必须在顶级范围内，因此它们不能在 &lt;code&gt;if&lt;/code&gt; 块内。如果要编写在客户端和服务器上都加载的通用文件，则可能只想在一个或另一个环境中导入模块：</target>
        </trans-unit>
        <trans-unit id="9b6e1bfc4ca9347027386872848599f05e98d3f9" translate="yes" xml:space="preserve">
          <source>There is a complementary function &lt;code&gt;Template.instance().subscriptionsReady()&lt;/code&gt; which returns true when all of the subscriptions called with &lt;code&gt;this.subscribe&lt;/code&gt; are ready.</source>
          <target state="translated">有一个补充函数 &lt;code&gt;Template.instance().subscriptionsReady()&lt;/code&gt; ，当用 &lt;code&gt;this.subscribe&lt;/code&gt; 调用的所有订阅都准备就绪时，它返回true 。</target>
        </trans-unit>
        <trans-unit id="97410b7e4ad6f74d2c57319fad31065551487f09" translate="yes" xml:space="preserve">
          <source>There is a core package called &lt;code&gt;caching-compiler&lt;/code&gt; that implements most of the common logic of keeping both in-memory and on-disk caches. The easiest way to implement caching correctly is to subclass the &lt;code&gt;CachingCompiler&lt;/code&gt; or &lt;code&gt;MultiFileCachingCompiler&lt;/code&gt; class from this package in your build plugin. &lt;code&gt;CachingCompiler&lt;/code&gt; is for compilers that consider each file completely independently; &lt;code&gt;MultiFileCachingCompiler&lt;/code&gt; is for compilers that allow files to reference each other. To get this class in your plugin namespace, add a dependency to the plugin definition:</source>
          <target state="translated">有一个名为 &lt;code&gt;caching-compiler&lt;/code&gt; 的核心程序包，它实现了保留内存和磁盘缓存的大多数通用逻辑。正确实现缓存的最简单方法是从构建插件中的此包中 &lt;code&gt;CachingCompiler&lt;/code&gt; 或 &lt;code&gt;MultiFileCachingCompiler&lt;/code&gt; 类。 &lt;code&gt;CachingCompiler&lt;/code&gt; 适用于完全独立考虑每个文件的编译器； &lt;code&gt;MultiFileCachingCompiler&lt;/code&gt; 用于允许文件相互引用的编译器。要在您的插件名称空间中获得此类，请在插件定义中添加一个依赖项：</target>
        </trans-unit>
        <trans-unit id="6d7ba477b67bd7644f00634976ebf7c00089618a" translate="yes" xml:space="preserve">
          <source>There is a package for logging in with Weibo, but it is no longer being actively maintained.</source>
          <target state="translated">有一个用微博登录的包,但已经不再主动维护。</target>
        </trans-unit>
        <trans-unit id="0675137be3d2503602c9c45a075ffbecacf390da" translate="yes" xml:space="preserve">
          <source>There is a special top-level directory named &lt;code&gt;cordova-build-override/&lt;/code&gt; that allows you to override, in an ad-hoc way, parts of your Cordova project that Meteor generates for you in the &lt;code&gt;.meteor/local/cordova-build&lt;/code&gt; directory. The entire file tree of this directory will be &lt;code&gt;cp -R&lt;/code&gt; (copied overwriting existing files) to the Cordova project right before the build and compilation step.</source>
          <target state="translated">有一个名为 &lt;code&gt;cordova-build-override/&lt;/code&gt; 的特殊顶级目录，它允许您临时覆盖Meteor在 &lt;code&gt;.meteor/local/cordova-build&lt;/code&gt; 目录中为您生成的Cordova项目的某些部分。在构建和编译步骤之前，此目录的整个文件树将是Cordova项目的 &lt;code&gt;cp -R&lt;/code&gt; （复制覆盖现有文件）。</target>
        </trans-unit>
        <trans-unit id="251b75c3cf94838235667d95e75c2d48cb410ab8" translate="yes" xml:space="preserve">
          <source>There is a third way to use a collection in Meteor. On the client or server, if you create a collection in one of these two ways:</source>
          <target state="translated">在Meteor中还有第三种使用集合的方式。在客户端或服务器上,如果你用这两种方式之一创建一个集合。</target>
        </trans-unit>
        <trans-unit id="184bcfb237dc3a9a373f09cead584292fd3ae177" translate="yes" xml:space="preserve">
          <source>There is no need to use Android Studio if you prefer a stand-alone install. Just make sure you install the most recent versions of the &lt;a href=&quot;http://developer.android.com/sdk/index.html#Other&quot;&gt;Android SDK Tools&lt;/a&gt; and download the required &lt;a href=&quot;http://developer.android.com/sdk/installing/adding-packages.html&quot;&gt;additional packages&lt;/a&gt; yourself using the &lt;a href=&quot;http://developer.android.com/tools/help/sdk-manager.html&quot;&gt;Android SDK Manager&lt;/a&gt;.</source>
          <target state="translated">如果您喜欢独立安装，则无需使用Android Studio。只要确保您安装了最新版本的&lt;a href=&quot;http://developer.android.com/sdk/index.html#Other&quot;&gt;Android SDK工具，&lt;/a&gt;然后使用&lt;a href=&quot;http://developer.android.com/tools/help/sdk-manager.html&quot;&gt;Android SDK Manager&lt;/a&gt;自己下载所需的&lt;a href=&quot;http://developer.android.com/sdk/installing/adding-packages.html&quot;&gt;其他软件包即可&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6fe6efa47a0fe8274a5583e2a7b872695d5c6d1d" translate="yes" xml:space="preserve">
          <source>There is no way to make a package-scope variable from a &lt;code&gt;.coffee&lt;/code&gt; file other than exporting it. We couldn&amp;rsquo;t figure out a way to make this fit naturally inside the CoffeeScript language. If you want to use package-scope variables with CoffeeScript, one way is to make a short &lt;code&gt;.js&lt;/code&gt; file that declares all of your package-scope variables. They can then be used and assigned to from &lt;code&gt;.coffee&lt;/code&gt; files.</source>
          <target state="translated">除了导出文件之外，没有其他方法可以从 &lt;code&gt;.coffee&lt;/code&gt; 文件中生成package-scope变量。我们无法找到一种使之自然适合CoffeeScript语言的方法。如果要在CoffeeScript中使用包范围变量，一种方法是制作一个简短的 &lt;code&gt;.js&lt;/code&gt; 文件，该文件声明所有包范围变量。然后可以使用它们并将其分配给 &lt;code&gt;.coffee&lt;/code&gt; 文件。</target>
        </trans-unit>
        <trans-unit id="d1f89804adfbd1890343bdde871e3f79d9613a1d" translate="yes" xml:space="preserve">
          <source>There is ongoing work in the Cordova project that will improve this situation and make it easier for plugins to specify their platform dependencies, so Cordova can determine compatible versions.</source>
          <target state="translated">在Cordova项目中正在进行的工作将改善这种情况,并使插件更容易指定其平台依赖性,以便Cordova可以确定兼容版本。</target>
        </trans-unit>
        <trans-unit id="1bfb2dcddd69bdf56e8fea78278201a4bbf2ca9f" translate="yes" xml:space="preserve">
          <source>There&amp;rsquo;s a lot of scope for better isolation and testing utilities.</source>
          <target state="translated">更好的隔离和测试实用程序还有很多范围。</target>
        </trans-unit>
        <trans-unit id="904c13513264628b49aa329ab4057be303f110f9" translate="yes" xml:space="preserve">
          <source>There&amp;rsquo;s a tempting existing field called &lt;code&gt;profile&lt;/code&gt; that is added by default when a new user registers. This field was historically intended to be used as a scratch pad for user-specific data - maybe their image avatar, name, intro text, etc. Because of this, &lt;strong&gt;the &lt;code&gt;profile&lt;/code&gt; field on every user is automatically writeable by that user from the client&lt;/strong&gt;. It&amp;rsquo;s also automatically published to the client for that particular user.</source>
          <target state="translated">新用户注册时，默认情况下会添加一个诱人的名为 &lt;code&gt;profile&lt;/code&gt; 的现有字段。从历史上看，该字段旨在用作用户特定数据（可能是他们的图像头像，姓名，介绍文字等）的暂存区。因此，&lt;strong&gt;每个用户&lt;/strong&gt;&lt;strong&gt;的 &lt;code&gt;profile&lt;/code&gt; 字段都可以由该用户从客户端自动写入&lt;/strong&gt;。它还会自动为该特定用户发布到客户端。</target>
        </trans-unit>
        <trans-unit id="a078125e6fb6f9cf6e07d3afe9afdbe13358796a" translate="yes" xml:space="preserve">
          <source>There&amp;rsquo;s also an even more restricted type of reusable component, a &amp;ldquo;pure&amp;rdquo; component, which does not have any internal state. For instance in the Todos app, the &lt;code&gt;Todos_item&lt;/code&gt; template decides what to render solely based on its arguments. Pure components are even easier to reason about and test than reusable ones and so should be preferred wherever possible.</source>
          <target state="translated">还有一个更受限制的类型的可重用组件，即&amp;ldquo;纯&amp;rdquo;组件，它没有任何内部状态。例如，在Todos应用程序中， &lt;code&gt;Todos_item&lt;/code&gt; 模板仅根据其参数决定要呈现的内容。纯组件比可重用组件更易于推理和测试，因此在任何可能的地方都应首选。</target>
        </trans-unit>
        <trans-unit id="1d10271641a82dc525695dafaf181e6eed96146c" translate="yes" xml:space="preserve">
          <source>Therefore, when you include &lt;code&gt;{{&amp;gt; Template.contentBlock}}&lt;/code&gt;, Spacebars hides the data context of the calling template, and any data contexts established in the template by &lt;code&gt;#each&lt;/code&gt; and &lt;code&gt;#with&lt;/code&gt;. They are not visible to the content block, even via &lt;code&gt;..&lt;/code&gt;. Put another way, it&amp;rsquo;s as if the &lt;code&gt;{{&amp;gt; Template.contentBlock}}&lt;/code&gt; inclusion occurred at the location where &lt;code&gt;{{#unless}}&lt;/code&gt; was invoked, as far as the data context stack is concerned.</source>
          <target state="translated">因此，当您包含 &lt;code&gt;{{&amp;gt; Template.contentBlock}}&lt;/code&gt; ，空格键将隐藏调用模板的数据上下文以及 &lt;code&gt;#each&lt;/code&gt; 和 &lt;code&gt;#with&lt;/code&gt; 在模板中建立的任何数据上下文。他们不是对内容块可见，甚至通过 &lt;code&gt;..&lt;/code&gt; 。换句话说，就数据上下文堆栈而言，好像 &lt;code&gt;{{&amp;gt; Template.contentBlock}}&lt;/code&gt; 包含发生在调用 &lt;code&gt;{{#unless}}&lt;/code&gt; 的位置。</target>
        </trans-unit>
        <trans-unit id="0fb4dc7b086310844026b5109a868ecfb50eaa5c" translate="yes" xml:space="preserve">
          <source>These &lt;code&gt;main.js&lt;/code&gt; files won&amp;rsquo;t do anything themselves, but they should import some &lt;em&gt;startup&lt;/em&gt; modules which will run immediately, on client and server respectively, when the app loads. These modules should do any configuration necessary for the packages you are using in your app, and import the rest of your app&amp;rsquo;s code.</source>
          <target state="translated">这些 &lt;code&gt;main.js&lt;/code&gt; 文件本身不会执行任何操作，但是它们应该导入一些&lt;em&gt;启动&lt;/em&gt;模块，这些&lt;em&gt;启动&lt;/em&gt;模块将在应用程序加载时立即分别在客户端和服务器上运行。这些模块应该对您在应用程序中使用的软件包进行必要的配置，并导入应用程序的其余代码。</target>
        </trans-unit>
        <trans-unit id="ae8c668bbb50dc31bc7ad377168e8cd34efdfa7e" translate="yes" xml:space="preserve">
          <source>These callbacks are called when an occurrence of a template is taken off the page for any reason and not replaced with a re-rendering. Inside a callback, &lt;code&gt;this&lt;/code&gt; is the &lt;a href=&quot;templates#Template-instances&quot;&gt;template instance&lt;/a&gt; object being destroyed.</source>
          <target state="translated">当由于某种原因将模板的出现从页面上删除而不用重新渲染代替时，将调用这些回调。在回调内部， &lt;code&gt;this&lt;/code&gt; 是被销毁的&lt;a href=&quot;templates#Template-instances&quot;&gt;模板实例&lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="ad6368edeb141c9a5233fbf9cf37e2d787311f9b" translate="yes" xml:space="preserve">
          <source>These callbacks fire once and are the first group of callbacks to fire. Handling the &lt;code&gt;created&lt;/code&gt; event is a useful way to set up values on template instance that are read from template helpers using &lt;code&gt;Template.instance()&lt;/code&gt;.</source>
          <target state="translated">这些回调将触发一次，并且是要触发的第一组回调。处理 &lt;code&gt;created&lt;/code&gt; 事件是在模板实例上设置值的有用方法，这些值是使用 &lt;code&gt;Template.instance()&lt;/code&gt; 从模板助手中读取的。</target>
        </trans-unit>
        <trans-unit id="9ac06c44043110df5a9f32a56f7326ea9c7b464e" translate="yes" xml:space="preserve">
          <source>These checks are run only when a client tries to write to the database directly, for example by calling &lt;code&gt;update&lt;/code&gt; from inside an event handler. Server code is trusted and isn&amp;rsquo;t subject to &lt;code&gt;allow&lt;/code&gt; and &lt;code&gt;deny&lt;/code&gt; restrictions. That includes methods that are called with &lt;code&gt;Meteor.call&lt;/code&gt; &amp;mdash; they are expected to do their own access checking rather than relying on &lt;code&gt;allow&lt;/code&gt; and &lt;code&gt;deny&lt;/code&gt;.</source>
          <target state="translated">仅当客户端尝试直接写入数据库时​​（例如通过从事件处理程序内部调用 &lt;code&gt;update&lt;/code&gt; )，才运行这些检查。服务器代码是受信任的，不受 &lt;code&gt;allow&lt;/code&gt; 和 &lt;code&gt;deny&lt;/code&gt; 限制。其中包括用 &lt;code&gt;Meteor.call&lt;/code&gt; 调用的方法-期望它们进行自己的访问检查，而不是依靠 &lt;code&gt;allow&lt;/code&gt; 和 &lt;code&gt;deny&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0472ebc553ae1a2a8b1a21ce12a92864782fec0d" translate="yes" xml:space="preserve">
          <source>These days, the landscape of JavaScript tools and frameworks is constantly shifting, and the language itself is evolving just as rapidly. It&amp;rsquo;s no longer reasonable to wait for web browsers to implement the language features you want to use. Most JavaScript development workflows rely on compiling code to work on the lowest common denominator of environments, while letting you use the newest features in development. Meteor has support for some of the most popular tools out of the box.</source>
          <target state="translated">如今，JavaScript工具和框架的格局正在不断变化，并且语言本身也在迅速发展。等待Web浏览器实现您要使用的语言功能已经不再合理。大多数JavaScript开发工作流程都依赖于编译代码以在环境的最低公分母上工作，同时允许您使用开发中的最新功能。流星开箱即用地支持一些最受欢迎的工具。</target>
        </trans-unit>
        <trans-unit id="0462e62c402247a57e8f7002d0a85b243ae39cbc" translate="yes" xml:space="preserve">
          <source>These declarations make the variables &lt;code&gt;a&lt;/code&gt;, &lt;code&gt;b&lt;/code&gt;, &lt;code&gt;c&lt;/code&gt; (and so on) available not only within the scope of the &lt;code&gt;exporter.js&lt;/code&gt; module, but also to other modules that &lt;code&gt;import&lt;/code&gt; from &lt;code&gt;exporter.js&lt;/code&gt;.</source>
          <target state="translated">这些声明使变量 &lt;code&gt;a&lt;/code&gt; ， &lt;code&gt;b&lt;/code&gt; ， &lt;code&gt;c&lt;/code&gt; （等等）不仅在 &lt;code&gt;exporter.js&lt;/code&gt; 模块的范围内可用，而且还可以用于从 &lt;code&gt;exporter.js&lt;/code&gt; &lt;code&gt;import&lt;/code&gt; 其他模块。</target>
        </trans-unit>
        <trans-unit id="aa30eaf1ec7e1a6cff7a8ca0df382678b559449a" translate="yes" xml:space="preserve">
          <source>These examples should get you started with &lt;code&gt;import&lt;/code&gt; and &lt;code&gt;export&lt;/code&gt; syntax. For further reading, here is a very detailed &lt;a href=&quot;http://www.2ality.com/2014/09/es6-modules-final.html&quot;&gt;explanation&lt;/a&gt; by &lt;a href=&quot;https://twitter.com/rauschma&quot;&gt;Axel Rauschmayer&lt;/a&gt; of every variation of &lt;code&gt;import&lt;/code&gt; and &lt;code&gt;export&lt;/code&gt; syntax.</source>
          <target state="translated">这些示例应该使您开始使用 &lt;code&gt;import&lt;/code&gt; 和 &lt;code&gt;export&lt;/code&gt; 语法。如要进一步了解，这里是一个非常详细&lt;a href=&quot;http://www.2ality.com/2014/09/es6-modules-final.html&quot;&gt;的解释&lt;/a&gt;由&lt;a href=&quot;https://twitter.com/rauschma&quot;&gt;阿克塞尔Rauschmayer先生&lt;/a&gt;的每一个变化的 &lt;code&gt;import&lt;/code&gt; 和 &lt;code&gt;export&lt;/code&gt; 的语法。</target>
        </trans-unit>
        <trans-unit id="86ffc0e598a4abbfe59e37179c7768598dbd5db6" translate="yes" xml:space="preserve">
          <source>These functions control how Meteor servers publish sets of records and how clients can subscribe to those sets.</source>
          <target state="translated">这些功能控制Meteor服务器如何发布记录集,以及客户端如何订阅这些记录集。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
