<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="rails">
    <body>
      <group id="rails">
        <trans-unit id="7acce9bd0f8ebeb41299d3c5d39790821251f354" translate="yes" xml:space="preserve">
          <source>The params hash has a nested person value, which can therefore be accessed with &lt;code&gt;params[:person]&lt;/code&gt; in the controller.</source>
          <target state="translated">params哈希具有嵌套的person值，因此可以在控制器中使用 &lt;code&gt;params[:person]&lt;/code&gt; 进行访问。</target>
        </trans-unit>
        <trans-unit id="b1f382907f48466d6409760d407191f01637a0f9" translate="yes" xml:space="preserve">
          <source>The params object created when this form is submitted would look like:</source>
          <target state="translated">提交此表格时创建的params对象会是这样的。</target>
        </trans-unit>
        <trans-unit id="a22d4f278f8aeadd352f595fa70b33907e1f9099" translate="yes" xml:space="preserve">
          <source>The parent namespace, &quot;A&quot;, may not reflect nesting at a given spot.</source>
          <target state="translated">父名空间 &quot;A &quot;可能无法反映在某一位置的嵌套。</target>
        </trans-unit>
        <trans-unit id="fa88e48a48c300647e152fdf64f231b79f2e6cac" translate="yes" xml:space="preserve">
          <source>The parent of top-level and anonymous modules is &lt;a href=&quot;object&quot;&gt;Object&lt;/a&gt;.</source>
          <target state="translated">顶级和匿名模块的父级是&lt;a href=&quot;object&quot;&gt;Object&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e70e4385028599bc0890d172e091f651173988f3" translate="yes" xml:space="preserve">
          <source>The path prefix for the routes.</source>
          <target state="translated">途径的路径前缀。</target>
        </trans-unit>
        <trans-unit id="8b49906b65248bb2a02d7efa1852cdde693d1597" translate="yes" xml:space="preserve">
          <source>The pattern used to match explicit dependencies is &lt;code&gt;/# Template
Dependency: (\S+)/&lt;/code&gt;, so it's important that you type it out just so. You can only declare one template dependency per line.</source>
          <target state="translated">用来匹配显式依赖项的模式是 &lt;code&gt;/# Template Dependency: (\S+)/&lt;/code&gt; ，因此键入正确的模式非常重要。每行只能声明一个模板依赖项。</target>
        </trans-unit>
        <trans-unit id="202c79dce79999d668dd4c269eaef15bd452360a" translate="yes" xml:space="preserve">
          <source>The payload (described in previous sections)</source>
          <target state="translated">有效载荷(前几节所述)</target>
        </trans-unit>
        <trans-unit id="19698fc3977432b8ba532562866f2175617a2f1e" translate="yes" xml:space="preserve">
          <source>The permitted scalar types are &lt;code&gt;String&lt;/code&gt;, &lt;code&gt;Symbol&lt;/code&gt;, &lt;code&gt;NilClass&lt;/code&gt;, &lt;code&gt;Numeric&lt;/code&gt;, &lt;code&gt;TrueClass&lt;/code&gt;, &lt;code&gt;FalseClass&lt;/code&gt;, &lt;code&gt;Date&lt;/code&gt;, &lt;code&gt;Time&lt;/code&gt;, &lt;code&gt;DateTime&lt;/code&gt;, &lt;code&gt;StringIO&lt;/code&gt;, &lt;code&gt;IO&lt;/code&gt;, &lt;code&gt;ActionDispatch::Http::UploadedFile&lt;/code&gt;, and &lt;code&gt;Rack::Test::UploadedFile&lt;/code&gt;.</source>
          <target state="translated">允许的标量类型为 &lt;code&gt;String&lt;/code&gt; ， &lt;code&gt;Symbol&lt;/code&gt; ， &lt;code&gt;NilClass&lt;/code&gt; ， &lt;code&gt;Numeric&lt;/code&gt; ， &lt;code&gt;TrueClass&lt;/code&gt; ， &lt;code&gt;FalseClass&lt;/code&gt; ， &lt;code&gt;Date&lt;/code&gt; ， &lt;code&gt;Time&lt;/code&gt; ， &lt;code&gt;DateTime&lt;/code&gt; ， &lt;code&gt;StringIO&lt;/code&gt; ， &lt;code&gt;IO&lt;/code&gt; ， &lt;code&gt;ActionDispatch::Http::UploadedFile&lt;/code&gt; 和 &lt;code&gt;Rack::Test::UploadedFile&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0d9fe577f207f6e519a775e2220ac855388fee63" translate="yes" xml:space="preserve">
          <source>The phrase &amp;ldquo;Updating salaries&amp;hellip;&amp;rdquo; would then be printed, along with the benchmark for the block when the block completes.</source>
          <target state="translated">块完成后，将打印短语&amp;ldquo;正在更新薪水&amp;hellip;&amp;hellip;&amp;rdquo;以及该块的基准。</target>
        </trans-unit>
        <trans-unit id="211a16b14e6131fc9047c75ee343534532a31b7c" translate="yes" xml:space="preserve">
          <source>The pool first tries to gain ownership of all connections. If unable to do so within a timeout interval (default duration is &lt;code&gt;spec.config[:checkout_timeout] * 2&lt;/code&gt; seconds), then the pool forcefully clears the cache and reloads connections without any regard for other connection owning threads.</source>
          <target state="translated">池首先尝试获得所有连接的所有权。如果无法在超时间隔（默认持续时间为 &lt;code&gt;spec.config[:checkout_timeout] * 2&lt;/code&gt; 秒）内这样做，则该池将强制清除缓存并重新加载连接，而无需考虑其他拥有连接的线程。</target>
        </trans-unit>
        <trans-unit id="b737fd02684471a726d9203f4d5534cf0b4a32c7" translate="yes" xml:space="preserve">
          <source>The pool first tries to gain ownership of all connections. If unable to do so within a timeout interval (default duration is &lt;code&gt;spec.config[:checkout_timeout] * 2&lt;/code&gt; seconds), then the pool is forcefully disconnected without any regard for other connection owning threads.</source>
          <target state="translated">池首先尝试获得所有连接的所有权。如果无法在超时间隔（默认持续时间为 &lt;code&gt;spec.config[:checkout_timeout] * 2&lt;/code&gt; 秒）内这样做，则将池强制断开连接，而不考虑其他拥有连接的线程。</target>
        </trans-unit>
        <trans-unit id="0b9aa36314226d9fc2457ceacd68160dd0193c9a" translate="yes" xml:space="preserve">
          <source>The popular Apache web server has an option called DocumentRoot. This is the home directory of the web site, everything in this directory tree will be served by the web server. If there are files with a certain file name extension, the code in it will be executed when requested (might require some options to be set). Examples for this are PHP and CGI files. Now think of a situation where an attacker uploads a file &quot;file.cgi&quot; with code in it, which will be executed when someone downloads the file.</source>
          <target state="translated">流行的Apache网站服务器有一个选项叫做DocumentRoot。这是网站的主目录,这个目录树中的所有内容都将由Web服务器提供服务。如果有某个文件名扩展名的文件,当请求时,其中的代码将被执行(可能需要设置一些选项)。这方面的例子是PHP和CGI文件。现在想一想,攻击者上传了一个文件 &quot;file.cgi&quot;,里面有代码,当有人下载这个文件时,这个文件就会被执行。</target>
        </trans-unit>
        <trans-unit id="dbdce44c77c959bd4862bc5a859508ac636ef124" translate="yes" xml:space="preserve">
          <source>The port number (integer) used for the request.</source>
          <target state="translated">用于请求的端口号(整数)。</target>
        </trans-unit>
        <trans-unit id="b079d046ffb4ec9ded1b387f3e0010827c056b99" translate="yes" xml:space="preserve">
          <source>The possible length constraint options are:</source>
          <target state="translated">可能的长度限制选项是:</target>
        </trans-unit>
        <trans-unit id="4fce22dc56bb380decb3337ee172999502454fa4" translate="yes" xml:space="preserve">
          <source>The power of the &lt;code&gt;validates&lt;/code&gt; method comes when using custom validators and default validators in one call for a given attribute.</source>
          <target state="translated">当在给定属性的一次调用中使用自定义验证器和默认验证器时， &lt;code&gt;validates&lt;/code&gt; 方法的功能将发挥作用。</target>
        </trans-unit>
        <trans-unit id="b6c43b0561e55dd6178731da78ad85e3a4b6c1e1" translate="yes" xml:space="preserve">
          <source>The precedence between model names is calculated using the &lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt; operator for &lt;code&gt;String&lt;/code&gt;. This means that if the strings are of different lengths, and the strings are equal when compared up to the shortest length, then the longer string is considered of higher lexical precedence than the shorter one. For example, one would expect the tables &quot;paper_boxes&quot; and &quot;papers&quot; to generate a join table name of &quot;papers_paper_boxes&quot; because of the length of the name &quot;paper_boxes&quot;, but it in fact generates a join table name of &quot;paper_boxes_papers&quot; (because the underscore '_' is lexicographically &lt;em&gt;less&lt;/em&gt; than 's' in common encodings).</source>
          <target state="translated">模型名称之间的优先级使用 &lt;code&gt;String&lt;/code&gt; 的 &lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt; 运算符计算。这意味着，如果字符串的长度不同，并且在比较最短长度的字符串时相等，则较长的字符串被认为比较短的字符串具有更高的词法优先级。例如，由于名称&amp;ldquo; paper_boxes&amp;rdquo;的长度，可能希望表&amp;ldquo; paper_boxes&amp;rdquo;和&amp;ldquo; papers&amp;rdquo;生成联接表名称&amp;ldquo; papers_paper_boxes&amp;rdquo;，但实际上它会生成联接表名称&amp;ldquo; paper_boxes_papers&amp;rdquo;（因为下划线&amp;ldquo;_&amp;rdquo;是字典顺序&lt;em&gt;少&lt;/em&gt;比在常用编码的'）。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1623bdf3d6d99614a33905e28305018e8da2ea92" translate="yes" xml:space="preserve">
          <source>The predicate &lt;code&gt;exclude?&lt;/code&gt; tests whether a given object does &lt;strong&gt;not&lt;/strong&gt; belong to the collection. It is the negation of the built-in &lt;code&gt;include?&lt;/code&gt;:</source>
          <target state="translated">谓词 &lt;code&gt;exclude?&lt;/code&gt; 测试给定对象是否&lt;strong&gt;不&lt;/strong&gt;属于该集合。它是对内置 &lt;code&gt;include?&lt;/code&gt; 的否定吗？：</target>
        </trans-unit>
        <trans-unit id="d30534585d78db0e871015ad6fc7ba29234362ff" translate="yes" xml:space="preserve">
          <source>The predicate &lt;code&gt;in?&lt;/code&gt; tests if an object is included in another object. An &lt;code&gt;ArgumentError&lt;/code&gt; exception will be raised if the argument passed does not respond to &lt;code&gt;include?&lt;/code&gt;.</source>
          <target state="translated">谓词 &lt;code&gt;in?&lt;/code&gt; 测试一个对象是否包含在另一个对象中。一个 &lt;code&gt;ArgumentError&lt;/code&gt; 将引发异常，如果通过不响应的参数 &lt;code&gt;include?&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="51cc5e243f6ab35d21893ecf5f94e037441bc436" translate="yes" xml:space="preserve">
          <source>The predicate &lt;code&gt;utc?&lt;/code&gt; says whether the receiver has UTC as its time zone:</source>
          <target state="translated">谓词 &lt;code&gt;utc?&lt;/code&gt; 说明接收方是否将UTC作为其时区：</target>
        </trans-unit>
        <trans-unit id="b750834b37ac4d51943f62e9387ff28a0575c379" translate="yes" xml:space="preserve">
          <source>The predicate for strings uses the Unicode-aware character class &lt;code&gt;[:space:]&lt;/code&gt;, so for example U+2029 (paragraph separator) is considered to be whitespace.</source>
          <target state="translated">字符串的谓词使用可识别Unicode的字符类 &lt;code&gt;[:space:]&lt;/code&gt; ，因此，例如U + 2029（段落分隔符）被视为空白。</target>
        </trans-unit>
        <trans-unit id="dc6a93f70839243fa9e1d8408e34e2544f70a727" translate="yes" xml:space="preserve">
          <source>The preferred method of outputting text in your views is to use the &amp;lt;%= &amp;ldquo;text&amp;rdquo; %&amp;gt; eRuby syntax. The regular &lt;em&gt;puts&lt;/em&gt; and &lt;em&gt;print&lt;/em&gt; methods do not operate as expected in an eRuby code block. If you absolutely must output text within a non-output code block (i.e., &amp;lt;% %&amp;gt;), you can use the concat method.</source>
          <target state="translated">在视图中输出文本的首选方法是使用&amp;lt;％=&amp;ldquo; text&amp;rdquo;％&amp;gt; eRuby语法。常规的&lt;em&gt;puts&lt;/em&gt;和&lt;em&gt;print&lt;/em&gt;方法在eRuby代码块中无法按预期运行。如果绝对必须在非输出代码块（即&amp;lt;％％&amp;gt;）中输出文本，则可以使用concat方法。</target>
        </trans-unit>
        <trans-unit id="746374f648c11779fb7595faf543aa73a11667ec" translate="yes" xml:space="preserve">
          <source>The prefix is a generation timestamp (in UTC).</source>
          <target state="translated">前缀是一个生成时间戳(以UTC为单位)。</target>
        </trans-unit>
        <trans-unit id="d2dc8c1fb9d9a6e930ad3ad1f1962e294f759976" translate="yes" xml:space="preserve">
          <source>The prefix string to prepend to every table name.</source>
          <target state="translated">每个表名的前缀字符串。</target>
        </trans-unit>
        <trans-unit id="c8eb84352de12fc2e14e658df97f8e1dd7fc6ae7" translate="yes" xml:space="preserve">
          <source>The prefix type that will be prepended to every primary key column name. The options are &lt;code&gt;:table_name&lt;/code&gt; and &lt;code&gt;:table_name_with_underscore&lt;/code&gt;. If the first is specified, the Product class will look for &amp;ldquo;productid&amp;rdquo; instead of &amp;ldquo;id&amp;rdquo; as the primary column. If the latter is specified, the Product class will look for &amp;ldquo;product_id&amp;rdquo; instead of &amp;ldquo;id&amp;rdquo;. Remember that this is a global setting for all Active Records.</source>
          <target state="translated">将在每个主键列名称之前添加的前缀类型。选项是 &lt;code&gt;:table_name&lt;/code&gt; 和 &lt;code&gt;:table_name_with_underscore&lt;/code&gt; 。如果指定了第一个，则Product类将查找&amp;ldquo; productid&amp;rdquo;而不是&amp;ldquo; id&amp;rdquo;作为主列。如果指定了后者，则Product类将查找&amp;ldquo; product_id&amp;rdquo;而不是&amp;ldquo; id&amp;rdquo;。请记住，这是所有活动记录的全局设置。</target>
        </trans-unit>
        <trans-unit id="76608f27ed33c279c84f9724f718d27ff86e52f7" translate="yes" xml:space="preserve">
          <source>The previous example generates &lt;code&gt;address_street&lt;/code&gt; rather than &lt;code&gt;street&lt;/code&gt;.</source>
          <target state="translated">前面的示例生成 &lt;code&gt;address_street&lt;/code&gt; 而不是 &lt;code&gt;street&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bf79e4462cb7c0cd7769f456bd8a2b2988b51b2b" translate="yes" xml:space="preserve">
          <source>The previous sections did not use the Rails form helpers at all. While you can craft the input names yourself and pass them directly to helpers such as &lt;code&gt;text_field_tag&lt;/code&gt; Rails also provides higher level support. The two tools at your disposal here are the name parameter to &lt;code&gt;form_with&lt;/code&gt; and &lt;code&gt;fields_for&lt;/code&gt; and the &lt;code&gt;:index&lt;/code&gt; option that helpers take.</source>
          <target state="translated">前面的部分完全没有使用Rails表单帮助器。虽然您可以自己制作输入名称并将其直接传递给诸如 &lt;code&gt;text_field_tag&lt;/code&gt; 的助手，但Rails也提供了更高级别的支持。您可以使用的两个工具是 &lt;code&gt;form_with&lt;/code&gt; 和 &lt;code&gt;fields_for&lt;/code&gt; 的名称参数以及助手使用的 &lt;code&gt;:index&lt;/code&gt; 选项。</target>
        </trans-unit>
        <trans-unit id="e0e9047f925fbf67d1eb6f9a1ed3d116890223cc" translate="yes" xml:space="preserve">
          <source>The primary goal of the function &lt;code&gt;exec_app&lt;/code&gt; is to execute your app's &lt;code&gt;bin/rails&lt;/code&gt;. If the current directory does not have a &lt;code&gt;bin/rails&lt;/code&gt;, it will navigate upwards until it finds a &lt;code&gt;bin/rails&lt;/code&gt; executable. Thus one can invoke a &lt;code&gt;rails&lt;/code&gt; command from anywhere inside a rails application.</source>
          <target state="translated">函数 &lt;code&gt;exec_app&lt;/code&gt; 的主要目标是执行应用程序的 &lt;code&gt;bin/rails&lt;/code&gt; 。如果当前目录没有 &lt;code&gt;bin/rails&lt;/code&gt; ，它将向上导航直到找到 &lt;code&gt;bin/rails&lt;/code&gt; 可执行文件。因此，可以从rails应用程序内的任何位置调用 &lt;code&gt;rails&lt;/code&gt; 命令。</target>
        </trans-unit>
        <trans-unit id="374e971dc3ced2698c6060ed9d03807d33897f25" translate="yes" xml:space="preserve">
          <source>The primary key column name on &lt;code&gt;to_table&lt;/code&gt;. Defaults to &lt;code&gt;id&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;to_table&lt;/code&gt; 上的主键列名称。默认为 &lt;code&gt;id&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bac5ab3487ebac7ba2d2d20e1ec39fd6f57a8550" translate="yes" xml:space="preserve">
          <source>The primary key may auto-increment on each create, even if it fails. This can accelerate the problem of running out of integers, if the underlying table is still stuck on a primary key of type int (note: All Rails apps since 5.1+ have defaulted to bigint, which is not liable to this problem).</source>
          <target state="translated">主键可能会在每次创建时自动递增,即使失败也是如此。如果底层表仍然停留在int类型的主键上,这可能会加速整数用完的问题(注意:从5.1+开始,所有的Rails应用都默认为bigint,不存在这个问题)。</target>
        </trans-unit>
        <trans-unit id="0e4104a011a461fd57d9f8ef9c0cc4734f38d19d" translate="yes" xml:space="preserve">
          <source>The primary operation of &lt;code&gt;Model.find(options)&lt;/code&gt; can be summarized as:</source>
          <target state="translated">&lt;code&gt;Model.find(options)&lt;/code&gt; 的主要操作可以概括为：</target>
        </trans-unit>
        <trans-unit id="355491ae17fbdee22c249344fd63c33317a6c2c6" translate="yes" xml:space="preserve">
          <source>The primary options are:</source>
          <target state="translated">主要选择有:</target>
        </trans-unit>
        <trans-unit id="e4fa3e65aa6bbe33b99dacd08bdbeb417dc2f95b" translate="yes" xml:space="preserve">
          <source>The procedure to autoload constant &lt;code&gt;C&lt;/code&gt; in an arbitrary situation is as follows:</source>
          <target state="translated">在任意情况下自动加载常数 &lt;code&gt;C&lt;/code&gt; 的过程如下：</target>
        </trans-unit>
        <trans-unit id="8040e6c9ad1dcfe9ba2350e5dae6e0ddc3828236" translate="yes" xml:space="preserve">
          <source>The process of &quot;internationalization&quot; usually means to abstract all strings and other locale specific bits (such as date or currency formats) out of your application. The process of &quot;localization&quot; means to provide translations and localized formats for these bits.&lt;sup id=&quot;footnote-1-ref&quot;&gt;&lt;a href=&quot;#footnote-1&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;</source>
          <target state="translated">&amp;ldquo;国际化&amp;rdquo;过程通常意味着从您的应用程序中抽象出所有字符串和其他特定于语言环境的位（例如日期或货币格式）。&amp;ldquo;本地化&amp;rdquo;过程意味着为这些位提供翻译和本地化格式。&lt;sup id=&quot;footnote-1-ref&quot;&gt;&lt;a href=&quot;#footnote-1&quot;&gt;1个&lt;/a&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="bab12b63d1f444a4baf98767b36d0c0acab0c884" translate="yes" xml:space="preserve">
          <source>The process should go as follows:</source>
          <target state="translated">这个过程应该如下:</target>
        </trans-unit>
        <trans-unit id="d247badcf31b8cb60f802528ca9ec9615802ad61" translate="yes" xml:space="preserve">
          <source>The program should report its version.</source>
          <target state="translated">该程序应报告其版本。</target>
        </trans-unit>
        <trans-unit id="39be8745f83c23f980e50b68440fb75f28893215" translate="yes" xml:space="preserve">
          <source>The project class now has the following methods (and more) to ease the traversal and manipulation of its relationships:</source>
          <target state="translated">现在,项目类有以下方法(还有更多)来简化对其关系的遍历和操作。</target>
        </trans-unit>
        <trans-unit id="35e6836db7b86f1636ec6a98ca72c3104147db64" translate="yes" xml:space="preserve">
          <source>The proxy class returned when calling mb_chars. You can use this accessor to configure your own proxy class so you can support other encodings. See the &lt;a href=&quot;multibyte/chars&quot;&gt;ActiveSupport::Multibyte::Chars&lt;/a&gt; implementation for an example how to do this.</source>
          <target state="translated">调用mb_chars时返回的代理类。您可以使用此访问器来配置自己的代理类，以便支持其他编码。有关如何执行此操作的示例，请参见&lt;a href=&quot;multibyte/chars&quot;&gt;ActiveSupport :: Multibyte :: Chars&lt;/a&gt;实现。</target>
        </trans-unit>
        <trans-unit id="2db1dccdc41ae63a5d769078a53e229b53f03007" translate="yes" xml:space="preserve">
          <source>The proxy objects that control the access to associations can be extended through anonymous modules. This is especially beneficial for adding new finders, creators, and other factory-type methods that are only used as part of this association.</source>
          <target state="translated">控制关联访问的代理对象可以通过匿名模块进行扩展。这对于添加新的查找器、创建者和其他只作为这个关联的一部分使用的工厂型方法特别有利。</target>
        </trans-unit>
        <trans-unit id="cb2ef0a3f23683b82b3a7fc76ce94b0e0f988d66" translate="yes" xml:space="preserve">
          <source>The public API of the i18n framework - a Ruby module with public methods that define how the library works</source>
          <target state="translated">i18n框架的公共API--一个Ruby模块,它的公共方法定义了库的工作方式。</target>
        </trans-unit>
        <trans-unit id="e2f3f6bc15534a07027a580fb53a5ce807cb0522" translate="yes" xml:space="preserve">
          <source>The public controller methods &lt;code&gt;respond_to&lt;/code&gt; may be called with a block that is used to define responses to different mime-types, e.g. for &lt;code&gt;respond_to&lt;/code&gt; :</source>
          <target state="translated">公共控制器方法 &lt;code&gt;respond_to&lt;/code&gt; 可以与被用于定义到不同的MIME类型，例如用于响应的块被称为 &lt;code&gt;respond_to&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="e523c677a1876a5d7712fcdf44f31a3393f986ba" translate="yes" xml:space="preserve">
          <source>The public path that Sprockets uses by default is &lt;code&gt;/assets&lt;/code&gt;.</source>
          <target state="translated">Sprockets默认使用的公共路径是 &lt;code&gt;/assets&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b1c15f7c37361e4d62cc7d2ebb86fe446e3f202b" translate="yes" xml:space="preserve">
          <source>The purpose of debugging.</source>
          <target state="translated">调试的目的。</target>
        </trans-unit>
        <trans-unit id="bc7610d0ca7ba5f46a29cc2aff958d13007d672d" translate="yes" xml:space="preserve">
          <source>The purpose of this setup would be that the application uses the class that corresponds to the environment via &lt;code&gt;AUTH_SERVICE&lt;/code&gt;. In development mode &lt;code&gt;MockedAuthService&lt;/code&gt; gets autoloaded when the initializer runs. Let's suppose we do some requests, change its implementation, and hit the application again. To our surprise the changes are not reflected. Why?</source>
          <target state="translated">该设置的目的是使应用程序通过 &lt;code&gt;AUTH_SERVICE&lt;/code&gt; 使用与环境相对应的类。在开发模式下，初始化程序运行时， &lt;code&gt;MockedAuthService&lt;/code&gt; 将自动加载。假设我们执行一些请求，更改其实现，然后再次运行该应用程序。令我们惊讶的是，这些变化没有得到体现。为什么？</target>
        </trans-unit>
        <trans-unit id="3b96e7010ad0263400b2ad5355a0f3d1d24d9569" translate="yes" xml:space="preserve">
          <source>The query string part of the URL, i.e., everything after &quot;?&quot;.</source>
          <target state="translated">URL的查询字符串部分,即&quot;?&quot;之后的所有内容。</target>
        </trans-unit>
        <trans-unit id="963ede72d0dfa198743a61a0942634ecdbed773d" translate="yes" xml:space="preserve">
          <source>The query string strategy has several disadvantages:</source>
          <target state="translated">查询字符串策略有几个缺点。</target>
        </trans-unit>
        <trans-unit id="9447d2ea713bcd10ab52cda886cd6cbf5d593b22" translate="yes" xml:space="preserve">
          <source>The rails commands that manipulate migrations and your schema.</source>
          <target state="translated">操纵迁移和模式的rails命令。</target>
        </trans-unit>
        <trans-unit id="4e2911d154a61b6a5ba76018adc402ed58605ab3" translate="yes" xml:space="preserve">
          <source>The reason for this is that during development you'd usually want your views to still render even though a translation is missing.</source>
          <target state="translated">原因是在开发过程中,你通常会希望你的视图在缺少翻译的情况下仍然能够呈现。</target>
        </trans-unit>
        <trans-unit id="78dd8f5116b3d8b957ca4166352d82a58bb88405" translate="yes" xml:space="preserve">
          <source>The reason is that autoloading is triggered for the singleton class, which is anonymous, and as &lt;a href=&quot;#generic-procedure&quot;&gt;we saw before&lt;/a&gt;, Rails only checks the top-level namespace in that edge case.</source>
          <target state="translated">原因是单例类触发了自动加载，该类是匿名的，并且正如&lt;a href=&quot;#generic-procedure&quot;&gt;我们之前所见&lt;/a&gt;，Rails仅在这种情况下检查顶级名称空间。</target>
        </trans-unit>
        <trans-unit id="fbbbe01fb4a2a4d9cb2a8c25e4df69ba3ef590b0" translate="yes" xml:space="preserve">
          <source>The reason most people use Rails is that it provides a set of defaults that allows developers to get up and running quickly, without having to make a lot of trivial decisions.</source>
          <target state="translated">大多数人使用Rails的原因是,它提供了一套默认设置,让开发人员可以快速上手,无需做很多琐碎的决定。</target>
        </trans-unit>
        <trans-unit id="25facf3920d52f7ea5f36c7e93e4e595a2175805" translate="yes" xml:space="preserve">
          <source>The reason why we added &lt;code&gt;@article = Article.new&lt;/code&gt; in the &lt;code&gt;ArticlesController&lt;/code&gt; is that otherwise &lt;code&gt;@article&lt;/code&gt; would be &lt;code&gt;nil&lt;/code&gt; in our view, and calling &lt;code&gt;@article.errors.any?&lt;/code&gt; would throw an error.</source>
          <target state="translated">我们在 &lt;code&gt;ArticlesController&lt;/code&gt; 中添加 &lt;code&gt;@article = Article.new&lt;/code&gt; 的原因是，否则我们认为 &lt;code&gt;@article&lt;/code&gt; 将 &lt;code&gt;nil&lt;/code&gt; ，并调用 &lt;code&gt;@article.errors.any?&lt;/code&gt; 会抛出一个错误。</target>
        </trans-unit>
        <trans-unit id="cec56727dcf557c3b63bdfe82a9a3a16d8e16121" translate="yes" xml:space="preserve">
          <source>The rebroadcast will be received by all connected clients, &lt;em&gt;including&lt;/em&gt; the client that sent the message. Note that params are the same as they were when you subscribed to the channel.</source>
          <target state="translated">所有连接的客户端（&lt;em&gt;包括&lt;/em&gt;发送消息的客户端）都将接收重新广播。请注意，参数与您订阅频道时的参数相同。</target>
        </trans-unit>
        <trans-unit id="34a3cd9fd5339aaaefab9615beb498916c347532" translate="yes" xml:space="preserve">
          <source>The redirection happens as a &lt;code&gt;302 Found&lt;/code&gt; header unless otherwise specified using the &lt;code&gt;:status&lt;/code&gt; option:</source>
          <target state="translated">除非使用 &lt;code&gt;:status&lt;/code&gt; 选项指定，否则重定向将以 &lt;code&gt;302 Found&lt;/code&gt; 标头的形式发生：</target>
        </trans-unit>
        <trans-unit id="6fc33772c67a94f60777ad03a5f62d48d81352f8" translate="yes" xml:space="preserve">
          <source>The reference column type. Defaults to &lt;code&gt;:bigint&lt;/code&gt;.</source>
          <target state="translated">参考列的类型。默认为 &lt;code&gt;:bigint&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d9352b43be8aa84da2f638620572a5ccea912a66" translate="yes" xml:space="preserve">
          <source>The referrer information is pulled from the HTTP &lt;code&gt;Referer&lt;/code&gt; (sic) header on the request. This is an optional header and its presence on the request is subject to browser security settings and user preferences. If the request is missing this header, the &lt;code&gt;fallback_location&lt;/code&gt; will be used.</source>
          <target state="translated">引荐信息从HTTP拉出 &lt;code&gt;Referer&lt;/code&gt; 所述请求（原文如此）报头。这是一个可选的标头，其在请求中的存在受浏览器安全设置和用户首选项的约束。如果请求缺少此标头，则将使用 &lt;code&gt;fallback_location&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="eb49b45c4a2d1a85d2d9af882862e039d5010fcc" translate="yes" xml:space="preserve">
          <source>The rendered template is &lt;code&gt;people/_labelling_form&lt;/code&gt; and the local variable referencing the form builder is called &lt;code&gt;labelling_form&lt;/code&gt;.</source>
          <target state="translated">呈现的模板为 &lt;code&gt;people/_labelling_form&lt;/code&gt; ，引用表单构建器的局部变量称为 &lt;code&gt;labelling_form&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="63f684b0b47877c550e81776857431c7164bacd0" translate="yes" xml:space="preserve">
          <source>The request body is an IO input stream. If the RAW_POST_DATA environment variable is already set, wrap it in a StringIO.</source>
          <target state="translated">请求体是一个IO输入流。如果已经设置了RAW_POST_DATA环境变量,则用StringIO包装。</target>
        </trans-unit>
        <trans-unit id="5618400bb0c662f7a9044a9e92d762488642b3ee" translate="yes" xml:space="preserve">
          <source>The request object contains a lot of useful information about the request coming in from the client. To get a full list of the available methods, refer to the &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionDispatch/Request.html&quot;&gt;Rails API documentation&lt;/a&gt; and &lt;a href=&quot;https://www.rubydoc.info/github/rack/rack/Rack/Request&quot;&gt;Rack Documentation&lt;/a&gt;. Among the properties that you can access on this object are:</source>
          <target state="translated">请求对象包含许多有关来自客户端的请求的有用信息。要获取可用方法的完整列表，请参考&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionDispatch/Request.html&quot;&gt;Rails API文档&lt;/a&gt;和&lt;a href=&quot;https://www.rubydoc.info/github/rack/rack/Rack/Request&quot;&gt;Rack文档&lt;/a&gt;。您可以访问此对象的属性包括：</target>
        </trans-unit>
        <trans-unit id="447adfed7e1b075f5907827838b9d68713be5f5a" translate="yes" xml:space="preserve">
          <source>The request that initiated the WebSocket connection is available here. This gives access to the environment, cookies, etc.</source>
          <target state="translated">启动WebSocket连接的请求可在此获得。这可以访问环境、cookies等。</target>
        </trans-unit>
        <trans-unit id="2ebe4d5fe508222930c3bc355f953f8b7e69a836" translate="yes" xml:space="preserve">
          <source>The request that the response is responding to.</source>
          <target state="translated">响应的请求。</target>
        </trans-unit>
        <trans-unit id="8c0d63c0e9b70807564233148a1c2dbdea492502" translate="yes" xml:space="preserve">
          <source>The request to this asset is then served by the Sprockets gem.</source>
          <target state="translated">然后,对该资产的请求由Sprockets gem服务。</target>
        </trans-unit>
        <trans-unit id="a13bac9dbc4228aac718c2160238ae2f74224f6d" translate="yes" xml:space="preserve">
          <source>The request variant is a specialization of the request format, like &lt;code&gt;:tablet&lt;/code&gt;, &lt;code&gt;:phone&lt;/code&gt;, or &lt;code&gt;:desktop&lt;/code&gt;.</source>
          <target state="translated">request变量是请求格式的一种特殊形式，例如 &lt;code&gt;:tablet&lt;/code&gt; ， &lt;code&gt;:phone&lt;/code&gt; 或 &lt;code&gt;:desktop&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1c6f31a993c883608b49486cf93c169ad92d6226" translate="yes" xml:space="preserve">
          <source>The requirements for implementing &lt;a href=&quot;dirty&quot;&gt;ActiveModel::Dirty&lt;/a&gt; are:</source>
          <target state="translated">实现&lt;a href=&quot;dirty&quot;&gt;ActiveModel :: Dirty&lt;/a&gt;的要求是：</target>
        </trans-unit>
        <trans-unit id="c89ab6641453bcf8d055aa8bc68cd2cd8cab4f65" translate="yes" xml:space="preserve">
          <source>The requirements to implement &lt;code&gt;ActiveModel::AttributeMethods&lt;/code&gt; are to:</source>
          <target state="translated">实现 &lt;code&gt;ActiveModel::AttributeMethods&lt;/code&gt; 的要求是：</target>
        </trans-unit>
        <trans-unit id="300f2949996e658ac115ccea16fe17506d448ce0" translate="yes" xml:space="preserve">
          <source>The resolver class defines when the application should switch (i.e. read from the primary if a write occurred less than 2 seconds ago) and a resolver context class that sets a value that helps the resolver class decide when to switch.</source>
          <target state="translated">resolver类定义了应用程序应该在什么时候切换(即如果写发生在不到2秒前,则从primary读取)和一个resolver上下文类,该类设置了一个值,帮助resolver类决定何时切换。</target>
        </trans-unit>
        <trans-unit id="15f2c7d083db22a8119db70913a3db4aaad993bc" translate="yes" xml:space="preserve">
          <source>The resource and all segments will now route to /postings instead of /posts.</source>
          <target state="translated">资源和所有的段现在将路由到/postings而不是/posts。</target>
        </trans-unit>
        <trans-unit id="beaa87f3d21ecbfe45641f3a86ee4784a14c6812" translate="yes" xml:space="preserve">
          <source>The response code of the request.</source>
          <target state="translated">请求的响应代码。</target>
        </trans-unit>
        <trans-unit id="0c493831110ba9d815114c381b8f94946676425e" translate="yes" xml:space="preserve">
          <source>The response object is not usually used directly, but is built up during the execution of the action and rendering of the data that is being sent back to the user, but sometimes - like in an after filter - it can be useful to access the response directly. Some of these accessor methods also have setters, allowing you to change their values. To get a full list of the available methods, refer to the &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionDispatch/Response.html&quot;&gt;Rails API documentation&lt;/a&gt; and &lt;a href=&quot;https://www.rubydoc.info/github/rack/rack/Rack/Response&quot;&gt;Rack Documentation&lt;/a&gt;.</source>
          <target state="translated">响应对象通常不直接使用，而是在执行操作和呈现要发送回用户的数据的过程中建立的，但是有时（例如在after过滤器中）访问响应是有用的直。其中一些访问器方法也具有设置器，使您可以更改其值。要获取可用方法的完整列表，请参考&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionDispatch/Response.html&quot;&gt;Rails API文档&lt;/a&gt;和&lt;a href=&quot;https://www.rubydoc.info/github/rack/rack/Rack/Response&quot;&gt;Rack文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cbf34bbcf94a3cd1f50b6c287697c3d57ed72cb5" translate="yes" xml:space="preserve">
          <source>The rest of &lt;code&gt;config/application.rb&lt;/code&gt; defines the configuration for the &lt;code&gt;Rails::Application&lt;/code&gt; which will be used once the application is fully initialized. When &lt;code&gt;config/application.rb&lt;/code&gt; has finished loading Rails and defined the application namespace, we go back to &lt;code&gt;config/environment.rb&lt;/code&gt;. Here, the application is initialized with &lt;code&gt;Rails.application.initialize!&lt;/code&gt;, which is defined in &lt;code&gt;rails/application.rb&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;config/application.rb&lt;/code&gt; 的其余部分定义了 &lt;code&gt;Rails::Application&lt;/code&gt; 的配置，将在应用程序完全初始化后使用。当 &lt;code&gt;config/application.rb&lt;/code&gt; 完成加载Rails并定义了应用程序名称空间后，我们回到 &lt;code&gt;config/environment.rb&lt;/code&gt; 。在这里，应用程序使用 &lt;code&gt;Rails.application.initialize!&lt;/code&gt; 初始化！，它在 &lt;code&gt;rails/application.rb&lt;/code&gt; 中定义。</target>
        </trans-unit>
        <trans-unit id="effb5614fd27c25befd2c6d1b8f3efd5ba7fd3b2" translate="yes" xml:space="preserve">
          <source>The rest of this guide describes the mechanisms Rails uses to make it &quot;mostly ignorable&quot;, and how extensions and applications with special needs can use them.</source>
          <target state="translated">本指南的其余部分介绍了Rails用来使其 &quot;大部分可忽略 &quot;的机制,以及有特殊需求的扩展和应用如何使用它们。</target>
        </trans-unit>
        <trans-unit id="74aecee2b54888a4b816d341feda0b0331477ef2" translate="yes" xml:space="preserve">
          <source>The result after rendering is:</source>
          <target state="translated">渲染后的结果是。</target>
        </trans-unit>
        <trans-unit id="dcd568ad6b005de288f75e8fe0668cc29b612d27" translate="yes" xml:space="preserve">
          <source>The result is marked as HTML-safe, but it is escaped by default, unless &lt;code&gt;:escape&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;. Care should be taken if &lt;code&gt;text&lt;/code&gt; contains HTML tags or entities, because truncation may produce invalid HTML (such as unbalanced or incomplete tags).</source>
          <target state="translated">结果标记为HTML安全，但默认情况下会转义，除非 &lt;code&gt;:escape&lt;/code&gt; 为 &lt;code&gt;false&lt;/code&gt; 。如果 &lt;code&gt;text&lt;/code&gt; 包含HTML标记或实体，则应格外小心，因为截断可能会产生无效的HTML（例如，不平衡或不完整的标记）。</target>
        </trans-unit>
        <trans-unit id="a25ad2e87bf95b7cfc6b0056a7f16420a069ff66" translate="yes" xml:space="preserve">
          <source>The result may contain alphanumeric characters except 0, O, I and l.</source>
          <target state="translated">结果可能包含除0、O、I和l以外的字母数字字符。</target>
        </trans-unit>
        <trans-unit id="59041e876a7fc33927f1114587cb2013250c8716" translate="yes" xml:space="preserve">
          <source>The result of rendering this page into the supplied layout would be this HTML:</source>
          <target state="translated">将此页面渲染成所提供的布局的结果将是这样的HTML。</target>
        </trans-unit>
        <trans-unit id="ce4233cf4e68b15da2f7f962c3aa058e81e088f1" translate="yes" xml:space="preserve">
          <source>The result should be something like this:</source>
          <target state="translated">结果应该是这样的。</target>
        </trans-unit>
        <trans-unit id="346e462e239bdd14b4a628c87f5eadb465a3a2fa" translate="yes" xml:space="preserve">
          <source>The result will contain alphanumeric characters in lowercase.</source>
          <target state="translated">结果将包含小写的字母数字字符。</target>
        </trans-unit>
        <trans-unit id="0adb8a1307684faa2f86601a21cfe31f030157a8" translate="yes" xml:space="preserve">
          <source>The result won't be a list of projects (because there is no project with an empty name), but a list of user names and their password. So hopefully you encrypted the passwords in the database! The only problem for the attacker is, that the number of columns has to be the same in both queries. That's why the second query includes a list of ones (1), which will be always the value 1, in order to match the number of columns in the first query.</source>
          <target state="translated">结果不会是一个项目的列表(因为没有一个项目的名字是空的),而是一个用户名和密码的列表。所以,希望你对数据库中的密码进行了加密。对于攻击者来说,唯一的问题是,两个查询中的列数必须是相同的。这就是为什么第二个查询包含一个1的列表,它的值总是1,以匹配第一个查询中的列数。</target>
        </trans-unit>
        <trans-unit id="e70fb1c2729e8458de00d32c3591467e2d7aa855" translate="yes" xml:space="preserve">
          <source>The resulting &lt;code&gt;Mail::Message&lt;/code&gt; will have the following in its header:</source>
          <target state="translated">生成的 &lt;code&gt;Mail::Message&lt;/code&gt; 的标头中将包含以下内容：</target>
        </trans-unit>
        <trans-unit id="99d61cd3773bc4d60f3270a01f2095c107751685" translate="yes" xml:space="preserve">
          <source>The resulting HTML is:</source>
          <target state="translated">由此产生的HTML是:</target>
        </trans-unit>
        <trans-unit id="291698672d11962c8bb088e3306823ab4309b2d4" translate="yes" xml:space="preserve">
          <source>The retrieved record may vary depending on the database engine.</source>
          <target state="translated">检索到的记录可能因数据库引擎的不同而不同。</target>
        </trans-unit>
        <trans-unit id="9f55e694c225f295d0bdcccba3be020d10a4d8fa" translate="yes" xml:space="preserve">
          <source>The return of capture is the string generated by the block. For Example:</source>
          <target state="translated">捕获的返回是块生成的字符串。例如</target>
        </trans-unit>
        <trans-unit id="4ddd68cea8d0fe03eb2943356aa27557616b7f05" translate="yes" xml:space="preserve">
          <source>The return value from the block passed to &lt;code&gt;direct&lt;/code&gt; must be a valid set of arguments for &lt;code&gt;url_for&lt;/code&gt; which will actually build the URL string. This can be one of the following:</source>
          <target state="translated">传递给 &lt;code&gt;direct&lt;/code&gt; 的块的返回值必须是 &lt;code&gt;url_for&lt;/code&gt; 的有效参数集，该参数实际上将构建URL字符串。可以是以下之一：</target>
        </trans-unit>
        <trans-unit id="154e88df68e99f69cd0b483c47a5ada31a856800" translate="yes" xml:space="preserve">
          <source>The return value of &lt;code&gt;to_param&lt;/code&gt; should &lt;strong&gt;not&lt;/strong&gt; be escaped:</source>
          <target state="translated">的返回值 &lt;code&gt;to_param&lt;/code&gt; 应该&lt;strong&gt;不&lt;/strong&gt;被转义：</target>
        </trans-unit>
        <trans-unit id="c3147580f8522c424243090e61bbb85df53db8c8" translate="yes" xml:space="preserve">
          <source>The return value of the block must be a valid argument for the &lt;code&gt;url_for&lt;/code&gt; method. So, you can pass a valid string URL, Hash, Array, an Active Model instance, or an Active Model class.</source>
          <target state="translated">该块的返回值必须是 &lt;code&gt;url_for&lt;/code&gt; 方法的有效参数。因此，您可以传递有效的字符串URL，哈希，数组，活动模型实例或活动模型类。</target>
        </trans-unit>
        <trans-unit id="712cb04b5cda0c9344ce367414c9f233585347f5" translate="yes" xml:space="preserve">
          <source>The return value of this method will be returned from &lt;a href=&quot;../../activerecord/attributemethods/read#method-i-read_attribute&quot;&gt;ActiveRecord::AttributeMethods::Read#read_attribute&lt;/a&gt;. See also: &lt;a href=&quot;value#method-i-cast_value&quot;&gt;#cast_value&lt;/a&gt;.</source>
          <target state="translated">该方法的返回值将从&lt;a href=&quot;../../activerecord/attributemethods/read#method-i-read_attribute&quot;&gt;ActiveRecord :: AttributeMethods :: Read＃read_attribute中返回&lt;/a&gt;。另请参阅：&lt;a href=&quot;value#method-i-cast_value&quot;&gt;#cast_value&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="02d062788bd9bee681b003f51a10c4ddc35a0f20" translate="yes" xml:space="preserve">
          <source>The return value of this method will implement the interface described by &lt;a href=&quot;../../activemodel/type/value&quot;&gt;ActiveModel::Type::Value&lt;/a&gt; (though the object itself may not subclass it).</source>
          <target state="translated">此方法的返回值将实现&lt;a href=&quot;../../activemodel/type/value&quot;&gt;ActiveModel :: Type :: Value&lt;/a&gt;描述的接口（尽管对象本身可能不会将其子类化）。</target>
        </trans-unit>
        <trans-unit id="8151c4f5afe49e75a934b72f81a8df8a8e3d9b5f" translate="yes" xml:space="preserve">
          <source>The returned relation implements the Null &lt;a href=&quot;../object&quot;&gt;Object&lt;/a&gt; pattern. It is an object with defined null behavior and always returns an empty array of records without querying the database.</source>
          <target state="translated">返回的关系实现Null &lt;a href=&quot;../object&quot;&gt;Object&lt;/a&gt;模式。这是一个具有定义为空行为的对象，并且始终返回空的记录数组，而不查询数据库。</target>
        </trans-unit>
        <trans-unit id="a8a176bf29706fa37ad63399ebcd21c506e08a48" translate="yes" xml:space="preserve">
          <source>The reverse of &lt;a href=&quot;inflector#method-i-pluralize&quot;&gt;pluralize&lt;/a&gt;, returns the singular form of a word in a string.</source>
          <target state="translated">的反向&lt;a href=&quot;inflector#method-i-pluralize&quot;&gt;变复数&lt;/a&gt;，返回字符串中的一个单词的单数形式。</target>
        </trans-unit>
        <trans-unit id="f0c5f4b12a37e16bfe4b06dcf4213f26c624b861" translate="yes" xml:space="preserve">
          <source>The reverse of &lt;code&gt;camelize&lt;/code&gt;. Makes an underscored, lowercase form from the expression in the string.</source>
          <target state="translated">的反向 &lt;code&gt;camelize&lt;/code&gt; 。根据字符串中的表达式制作带下划线的小写形式。</target>
        </trans-unit>
        <trans-unit id="49c3882be12d0dbab48454dd420e872739fa4014" translate="yes" xml:space="preserve">
          <source>The reverse of &lt;code&gt;pluralize&lt;/code&gt;, returns the singular form of a word in a string.</source>
          <target state="translated">的反向 &lt;code&gt;pluralize&lt;/code&gt; ，返回字符串中的一个单词的单数形式。</target>
        </trans-unit>
        <trans-unit id="5a2f5d042f75acbe0f3e7548eed90e866ea9799c" translate="yes" xml:space="preserve">
          <source>The rightmost argument to &lt;code&gt;form_for&lt;/code&gt; is an optional hash of options -</source>
          <target state="translated">&lt;code&gt;form_for&lt;/code&gt; 最右边的参数是options的可选哈希-</target>
        </trans-unit>
        <trans-unit id="a9a9612e7634415916c2149adc277d52fac00916" translate="yes" xml:space="preserve">
          <source>The root node reflects the class name of the first element in plural if all elements belong to the same type and that's not Hash:</source>
          <target state="translated">如果所有元素都属于同一类型,而且不是Hash,那么根节点反映的是第一个元素的复数的类名。</target>
        </trans-unit>
        <trans-unit id="924c9739d75001033fe4a310f64ac55258d3feec" translate="yes" xml:space="preserve">
          <source>The route key also considers if the noun is uncountable and, in such cases, automatically appends _index.</source>
          <target state="translated">路由键还会考虑名词是否不可数,在这种情况下,会自动追加_index。</target>
        </trans-unit>
        <trans-unit id="f42ca910b8cf2641923a9b3307cb94acee7c74ce" translate="yes" xml:space="preserve">
          <source>The route name (if any)</source>
          <target state="translated">途径名称(如有)</target>
        </trans-unit>
        <trans-unit id="d73914cf8b9c98e84c8b82ff0505113e4b8e3e02" translate="yes" xml:space="preserve">
          <source>The route now exists, but the controller that this route goes to does not. To create it, run this command from the application root:</source>
          <target state="translated">现在路由已经存在,但该路由所指向的控制器却不存在。要创建途径,请在应用程序根目录下运行此命令。</target>
        </trans-unit>
        <trans-unit id="9b9c1a0a0514b0f65210493280e8a71f86fdbca5" translate="yes" xml:space="preserve">
          <source>The route's action.</source>
          <target state="translated">航线的行动。</target>
        </trans-unit>
        <trans-unit id="163a12e69171016995c19135436c2a61402b497f" translate="yes" xml:space="preserve">
          <source>The route's controller.</source>
          <target state="translated">航线的控制器。</target>
        </trans-unit>
        <trans-unit id="9ea35eca50e9266731ea2e3982089ae64656d971" translate="yes" xml:space="preserve">
          <source>The routes for your application or engine live in the file &lt;code&gt;config/routes.rb&lt;/code&gt; and typically looks like this:</source>
          <target state="translated">您的应用程序或引擎的路由位于 &lt;code&gt;config/routes.rb&lt;/code&gt; 文件中，通常如下所示：</target>
        </trans-unit>
        <trans-unit id="d98c7c75f450c601067f23fdeb5247891ee46349" translate="yes" xml:space="preserve">
          <source>The routing module provides URL rewriting in native Ruby. It's a way to redirect incoming requests to controllers and actions. This replaces mod_rewrite rules. Best of all, Rails' Routing works with any web server. Routes are defined in &lt;code&gt;config/routes.rb&lt;/code&gt;.</source>
          <target state="translated">路由模块提供本机Ruby中的URL重写。这是一种将传入请求重定向到控制器和操作的方法。这将替换mod_rewrite规则。最重要的是，Rails的路由可与任何Web服务器一起使用。路由在 &lt;code&gt;config/routes.rb&lt;/code&gt; 中定义。</target>
        </trans-unit>
        <trans-unit id="43b869ffdbb23efddcd2f11588a9dd772e5b663c" translate="yes" xml:space="preserve">
          <source>The routing parameters for the route</source>
          <target state="translated">途径的路由参数</target>
        </trans-unit>
        <trans-unit id="5c1e7a884f603d0cb7012c9790df3b850851f848" translate="yes" xml:space="preserve">
          <source>The row is simply removed with an SQL &lt;code&gt;DELETE&lt;/code&gt; statement on the record's primary key, and no callbacks are executed.</source>
          <target state="translated">只需在记录的主键上使用SQL &lt;code&gt;DELETE&lt;/code&gt; 语句删除该行，就不会执行任何回调。</target>
        </trans-unit>
        <trans-unit id="57647ca6535b32390105386b22f168aaa4fd171c" translate="yes" xml:space="preserve">
          <source>The safety bit is lost always, no matter whether the transformation actually changed something.</source>
          <target state="translated">无论转型是否真的改变了什么,安全位总是丢失。</target>
        </trans-unit>
        <trans-unit id="aefe907ee6913d67f5922b327093209a576a180b" translate="yes" xml:space="preserve">
          <source>The same as &lt;code&gt;content_for&lt;/code&gt; but when used with streaming flushes straight back to the layout. In other words, if you want to concatenate several times to the same buffer when rendering a given template, you should use &lt;code&gt;content_for&lt;/code&gt;, if not, use &lt;code&gt;provide&lt;/code&gt; to tell the layout to stop looking for more contents.</source>
          <target state="translated">与 &lt;code&gt;content_for&lt;/code&gt; 相同，但与流一起使用时，会直接冲回到布局。换句话说，如果你想几次串联到同一个缓冲的渲染给定模板的时候，你应该使用 &lt;code&gt;content_for&lt;/code&gt; ，如果没有，使用 &lt;code&gt;provide&lt;/code&gt; 告诉布局停止寻找更多的内容。</target>
        </trans-unit>
        <trans-unit id="9953b98c64e5ffc7f405323c6a791708f94ff6a1" translate="yes" xml:space="preserve">
          <source>The same format can be used to set carbon copy (Cc:) and blind carbon copy (Bcc:) recipients, by using the &lt;code&gt;:cc&lt;/code&gt; and &lt;code&gt;:bcc&lt;/code&gt; keys respectively.</source>
          <target state="translated">通过分别使用 &lt;code&gt;:cc&lt;/code&gt; 和 &lt;code&gt;:bcc&lt;/code&gt; 键，可以使用相同的格式设置抄送（Cc :)和密抄送（Bcc :)收件人。</target>
        </trans-unit>
        <trans-unit id="2e706e64542efdac4f02a3ddcdaaa1983b14beed" translate="yes" xml:space="preserve">
          <source>The same migration could also have been written without using &lt;code&gt;revert&lt;/code&gt; but this would have involved a few more steps: reversing the order of &lt;code&gt;create_table&lt;/code&gt; and &lt;code&gt;reversible&lt;/code&gt;, replacing &lt;code&gt;create_table&lt;/code&gt; by &lt;code&gt;drop_table&lt;/code&gt;, and finally replacing &lt;code&gt;up&lt;/code&gt; by &lt;code&gt;down&lt;/code&gt; and vice-versa. This is all taken care of by &lt;code&gt;revert&lt;/code&gt;.</source>
          <target state="translated">同样的迁移也已被写入没有使用 &lt;code&gt;revert&lt;/code&gt; 但是这会牵涉到几个步骤：颠倒的顺序 &lt;code&gt;create_table&lt;/code&gt; 和 &lt;code&gt;reversible&lt;/code&gt; ，更换 &lt;code&gt;create_table&lt;/code&gt; 通过 &lt;code&gt;drop_table&lt;/code&gt; ，终于取代 &lt;code&gt;up&lt;/code&gt; 由 &lt;code&gt;down&lt;/code&gt; ，反之亦然。这全部通过还 &lt;code&gt;revert&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ae2cbbfb58ef1b4d1438f7be95f11bb462578b7d" translate="yes" xml:space="preserve">
          <source>The same remarks about ordering made above apply. In particular, you can specify individual files and they are compiled in the order specified. For example, you might concatenate three CSS files together this way:</source>
          <target state="translated">上面关于顺序的说明同样适用。特别是,你可以指定单个文件,它们会按照指定的顺序进行编译。例如,你可以用这种方式将三个CSS文件连在一起。</target>
        </trans-unit>
        <trans-unit id="f697c996741525baca91a161ef79961528f0bca1" translate="yes" xml:space="preserve">
          <source>The same works with &lt;code&gt;javascript_include_tag&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;javascript_include_tag&lt;/code&gt; 同样适用：</target>
        </trans-unit>
        <trans-unit id="902eca9fb9857fe6b9624eac04a7cecf345099d8" translate="yes" xml:space="preserve">
          <source>The schema dumper adds two additional configuration options:</source>
          <target state="translated">模式跳线增加了两个额外的配置选项。</target>
        </trans-unit>
        <trans-unit id="0c53c10237ef4bddb7676d2ae3b7456838e0a982" translate="yes" xml:space="preserve">
          <source>The screenshot will be displayed in your console, if supported.</source>
          <target state="translated">如果支持的话,截图将显示在你的控制台中。</target>
        </trans-unit>
        <trans-unit id="abfd5ddb1b891ad695041019063c671d48b40a8e" translate="yes" xml:space="preserve">
          <source>The search, telephone, date, time, color, datetime, datetime-local, month, week, URL, email, number, and range inputs are HTML5 controls. If you require your app to have a consistent experience in older browsers, you will need an HTML5 polyfill (provided by CSS and/or JavaScript). There is definitely &lt;a href=&quot;https://github.com/Modernizr/Modernizr/wiki/HTML5-Cross-Browser-Polyfills&quot;&gt;no shortage of solutions for this&lt;/a&gt;, although a popular tool at the moment is &lt;a href=&quot;https://modernizr.com/&quot;&gt;Modernizr&lt;/a&gt;, which provides a simple way to add functionality based on the presence of detected HTML5 features.</source>
          <target state="translated">搜索，电话，日期，时间，颜色，日期时间，本地日期时间，月，周，URL，电子邮件，数字和范围输入是HTML5控件。如果您要求您的应用在旧版浏览器中具有一致的体验，则需要HTML5 polyfill（由CSS和/或JavaScript提供）。尽管目前流行的工具是&lt;a href=&quot;https://modernizr.com/&quot;&gt;Modernizr&lt;/a&gt;，但绝对&lt;a href=&quot;https://github.com/Modernizr/Modernizr/wiki/HTML5-Cross-Browser-Polyfills&quot;&gt;不乏解决方案&lt;/a&gt;，它基于检测到的HTML5功能提供了一种简单的方法来添加功能。</target>
        </trans-unit>
        <trans-unit id="d921cbf4d775ce5249e42b24eb44f85bf4cbff38" translate="yes" xml:space="preserve">
          <source>The second argument indicates whether the callback is to be run &lt;code&gt;:before&lt;/code&gt;, &lt;code&gt;:after&lt;/code&gt;, or &lt;code&gt;:around&lt;/code&gt; the event. If omitted, &lt;code&gt;:before&lt;/code&gt; is assumed. This means the first example above can also be written as:</source>
          <target state="translated">第二个参数指示是否要在事件 &lt;code&gt;:before&lt;/code&gt; 运行：before， &lt;code&gt;:after&lt;/code&gt; 或 &lt;code&gt;:around&lt;/code&gt; 。如果省略，则假定 &lt;code&gt;:before&lt;/code&gt; 。这意味着上面的第一个示例也可以写成：</target>
        </trans-unit>
        <trans-unit id="9af4d188053d675b615bd09c5b2ebeed2870fe55" translate="yes" xml:space="preserve">
          <source>The second argument, &lt;code&gt;indent_string&lt;/code&gt;, specifies which indent string to use. The default is &lt;code&gt;nil&lt;/code&gt;, which tells the method to make a guess by peeking at the first indented line, and fallback to a space if there is none.</source>
          <target state="translated">第二个参数 &lt;code&gt;indent_string&lt;/code&gt; ，指定要使用的缩进字符串。缺省值为 &lt;code&gt;nil&lt;/code&gt; ，它告诉该方法通过偷看第一条缩进行进行猜测，如果没有则回退到一个空格。</target>
        </trans-unit>
        <trans-unit id="4cb8c9f7b08002ccee566978dd1cbdbd3f7197a5" translate="yes" xml:space="preserve">
          <source>The second argument, &lt;code&gt;indent_string&lt;/code&gt;, specifies which indent string to use. The default is &lt;code&gt;nil&lt;/code&gt;, which tells the method to make an educated guess peeking at the first indented line, and fallback to a space if there is none.</source>
          <target state="translated">第二个参数 &lt;code&gt;indent_string&lt;/code&gt; ，指定要使用的缩进字符串。缺省值为 &lt;code&gt;nil&lt;/code&gt; ，它告诉该方法在第一个缩进行处进行有根据的猜测，如果没有则回退到空格。</target>
        </trans-unit>
        <trans-unit id="b0c1c629ea994f2987ea56b45bca30e917233746" translate="yes" xml:space="preserve">
          <source>The second feature of the asset pipeline is asset minification or compression. For CSS files, this is done by removing whitespace and comments. For JavaScript, more complex processes can be applied. You can choose from a set of built in options or specify your own.</source>
          <target state="translated">资产管道的第二个功能是资产最小化或压缩。对于CSS文件,这是通过删除空白和注释来实现的。对于JavaScript,可以应用更复杂的过程。你可以从一组内置的选项中选择,也可以指定你自己的选项。</target>
        </trans-unit>
        <trans-unit id="fe9a2783619d59158ecacd99966e8ff4873dee03" translate="yes" xml:space="preserve">
          <source>The second line can safely access the &quot;type&quot; key, and let the user to pass either &lt;code&gt;:type&lt;/code&gt; or &quot;type&quot;.</source>
          <target state="translated">第二行可以安全地访问&amp;ldquo; type&amp;rdquo;键，并允许用户传递 &lt;code&gt;:type&lt;/code&gt; 或&amp;ldquo; type&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="c5b46933582d278e942545f1f09e4e2181c0c75a" translate="yes" xml:space="preserve">
          <source>The second line can safely access the &lt;code&gt;:params&lt;/code&gt; key, and let the user to pass either &lt;code&gt;:params&lt;/code&gt; or &quot;params&quot;.</source>
          <target state="translated">第二行可以安全地访问 &lt;code&gt;:params&lt;/code&gt; 键，并允许用户传递 &lt;code&gt;:params&lt;/code&gt; 或&amp;ldquo; params&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="87370f63b750b398e3d1d2d4d7ac881a34411734" translate="yes" xml:space="preserve">
          <source>The second render just defines the partial template we want to render, &lt;code&gt;comments/form&lt;/code&gt;. Rails is smart enough to spot the forward slash in that string and realize that you want to render the &lt;code&gt;_form.html.erb&lt;/code&gt; file in the &lt;code&gt;app/views/comments&lt;/code&gt; directory.</source>
          <target state="translated">第二个渲染只定义了我们要渲染的部分模板， &lt;code&gt;comments/form&lt;/code&gt; 。Rails足够聪明，可以在该字符串中发现正斜杠，并意识到要在 &lt;code&gt;app/views/comments&lt;/code&gt; 目录中呈现 &lt;code&gt;_form.html.erb&lt;/code&gt; 文件。</target>
        </trans-unit>
        <trans-unit id="95d2464bf033dbb44e211484579e31d9b961dbc8" translate="yes" xml:space="preserve">
          <source>The second time the same query is run against the database, it's not actually going to hit the database. The first time the result is returned from the query it is stored in the query cache (in memory) and the second time it's pulled from memory.</source>
          <target state="translated">第二次对着数据库运行同样的查询,其实是不会打到数据库的。第一次查询返回的结果会存储在查询缓存中(内存中),第二次就会从内存中拉出来。</target>
        </trans-unit>
        <trans-unit id="3efc4a8e9d7945b1d7f7a23ba4380c75006156f2" translate="yes" xml:space="preserve">
          <source>The second way is to use a class (actually, any object that responds to the right methods will do) to handle the filtering. This is useful in cases that are more complex and cannot be implemented in a readable and reusable way using the two other methods. As an example, you could rewrite the login filter again to use a class:</source>
          <target state="translated">第二种方法是使用一个类(实际上,任何响应正确方法的对象都可以)来处理过滤。这在一些比较复杂的情况下是很有用的,而且不能用另外两种方法以可读和可重用的方式实现。举个例子,你可以再次重写登录过滤器,使用一个类。</target>
        </trans-unit>
        <trans-unit id="61a71f83c97ed525d6c4921cbda3d9a74c8be32f" translate="yes" xml:space="preserve">
          <source>The second way is using a block:</source>
          <target state="translated">第二种方式是使用块。</target>
        </trans-unit>
        <trans-unit id="ee3dafb008288f3fc62bfe8b4c6a215bc537e4d7" translate="yes" xml:space="preserve">
          <source>The second way to declare a many-to-many relationship is to use &lt;code&gt;has_many :through&lt;/code&gt;. This makes the association indirectly, through a join model:</source>
          <target state="translated">声明多对多关系的第二种方法是使用 &lt;code&gt;has_many :through&lt;/code&gt; 。这通过联接模型间接建立关联：</target>
        </trans-unit>
        <trans-unit id="5be71a74ba22ce6b2dedd769c1778c19f8234b4b" translate="yes" xml:space="preserve">
          <source>The secrets kept in credentials file are accessible via &lt;code&gt;Rails.application.credentials&lt;/code&gt;. For example, with the following decrypted &lt;code&gt;config/credentials.yml.enc&lt;/code&gt;:</source>
          <target state="translated">可通过 &lt;code&gt;Rails.application.credentials&lt;/code&gt; 访问凭证文件中保存的机密。例如，使用以下解密的 &lt;code&gt;config/credentials.yml.enc&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="3ab74d6898ce4ece91f996260f25f8432949724d" translate="yes" xml:space="preserve">
          <source>The section about session fixation introduced the problem of maintained sessions. An attacker maintaining a session every five minutes can keep the session alive forever, although you are expiring sessions. A simple solution for this would be to add a &lt;code&gt;created_at&lt;/code&gt; column to the sessions table. Now you can delete sessions that were created a long time ago. Use this line in the sweep method above:</source>
          <target state="translated">关于会话固定的部分介绍了维护会话的问题。尽管您正在终止会话，但每五分钟维护一次会话的攻击者可以使该会话永远存在。一个简单的解决方案是在会话表中添加 &lt;code&gt;created_at&lt;/code&gt; 列。现在，您可以删除很久以前创建的会话。在上面的扫描方法中使用以下行：</target>
        </trans-unit>
        <trans-unit id="1f6120da2c879830bdb45596b1660515dc2d88c6" translate="yes" xml:space="preserve">
          <source>The security landscape shifts and it is important to keep up to date, because missing a new vulnerability can be catastrophic. You can find additional resources about (Rails) security here:</source>
          <target state="translated">安全环境不断变化,保持更新很重要,因为错过一个新的漏洞可能是灾难性的。你可以在这里找到关于(Rails)安全的其他资源。</target>
        </trans-unit>
        <trans-unit id="7126ad7da26114aa98cd24f05b132e044ab649ab" translate="yes" xml:space="preserve">
          <source>The selects are prepared for multi-parameter assignment to an Active Record object.</source>
          <target state="translated">选择是为多参数分配到活动记录对象而准备的。</target>
        </trans-unit>
        <trans-unit id="67fc72ff072f14ae4ea568c8c44418a72eccad87" translate="yes" xml:space="preserve">
          <source>The server can be run on a different port using the &lt;code&gt;-p&lt;/code&gt; option. The default development environment can be changed using &lt;code&gt;-e&lt;/code&gt;.</source>
          <target state="translated">可以使用 &lt;code&gt;-p&lt;/code&gt; 选项在其他端口上运行服务器。可以使用 &lt;code&gt;-e&lt;/code&gt; 更改默认的开发环境。</target>
        </trans-unit>
        <trans-unit id="6f096bb4e5d5d5c6145e30b812288136686222e7" translate="yes" xml:space="preserve">
          <source>The setup in Rails allows you to easily change how the switching is done and what parameters it's based on. Let's say you want to use a cookie instead of a session to decide when to swap connections. You can write your own class:</source>
          <target state="translated">Rails中的设置可以让你轻松地改变交换的方式以及它所基于的参数。比方说,你想用cookie而不是session来决定何时交换连接。你可以写一个自己的类。</target>
        </trans-unit>
        <trans-unit id="bf940f74e13a7a42bdf13e37d4c4acbb4d699793" translate="yes" xml:space="preserve">
          <source>The show action in the above controller would have all parameter values encoded as ASCII-8BIT. This is useful in the case where an application must handle data but encoding of the data is unknown, like file system data.</source>
          <target state="translated">上述控制器中的show动作将把所有参数值编码为ASCII-8BIT。这在应用程序必须处理数据但数据编码未知的情况下很有用,比如文件系统数据。</target>
        </trans-unit>
        <trans-unit id="9fb10354b4e9f1b98e97daca2e9598a177524248" translate="yes" xml:space="preserve">
          <source>The signed ID is also used to create stable URLs for the blob through the BlobsController.</source>
          <target state="translated">签名的ID也用于通过BlobsController为blob创建稳定的URL。</target>
        </trans-unit>
        <trans-unit id="ce32a93e4064970c8546be14bb4215b30b4ef348" translate="yes" xml:space="preserve">
          <source>The simplest rule of thumb is that you should set up a &lt;code&gt;has_many :through&lt;/code&gt; relationship if you need to work with the relationship model as an independent entity. If you don't need to do anything with the relationship model, it may be simpler to set up a &lt;code&gt;has_and_belongs_to_many&lt;/code&gt; relationship (though you'll need to remember to create the joining table in the database).</source>
          <target state="translated">最简单的经验法则是，如果需要将关系模型作为独立实体使用，则应设置 &lt;code&gt;has_many :through&lt;/code&gt; 关系。如果您不需要对关系模型做任何事情，则设置 &lt;code&gt;has_and_belongs_to_many&lt;/code&gt; 关系可能更简单（尽管您需要记住要在数据库中创建联接表）。</target>
        </trans-unit>
        <trans-unit id="20504bd60dd726d82fcb6ff496945b67c5bac04a" translate="yes" xml:space="preserve">
          <source>The simplest template that would work in this case would be one located at &lt;code&gt;app/views/articles/new.html.erb&lt;/code&gt;. The extension of this file name is important: the first extension is the &lt;em&gt;format&lt;/em&gt; of the template, and the second extension is the &lt;em&gt;handler&lt;/em&gt; that will be used to render the template. Rails is attempting to find a template called &lt;code&gt;articles/new&lt;/code&gt; within &lt;code&gt;app/views&lt;/code&gt; for the application. The format for this template can only be &lt;code&gt;html&lt;/code&gt; and the default handler for HTML is &lt;code&gt;erb&lt;/code&gt;. Rails uses other handlers for other formats. &lt;code&gt;builder&lt;/code&gt; handler is used to build XML templates and &lt;code&gt;coffee&lt;/code&gt; handler uses CoffeeScript to build JavaScript templates. Since you want to create a new HTML form, you will be using the &lt;code&gt;ERB&lt;/code&gt; language which is designed to embed Ruby in HTML.</source>
          <target state="translated">在这种情况下，最简单的模板将是位于 &lt;code&gt;app/views/articles/new.html.erb&lt;/code&gt; 的模板。该文件名的扩展名很重要：第一个扩展名是模板的&lt;em&gt;格式&lt;/em&gt;，第二个扩展名是将用于呈现模板的&lt;em&gt;处理程序&lt;/em&gt;。 Rails试图在该应用程序的应用 &lt;code&gt;app/views&lt;/code&gt; 找到一个名为 &lt;code&gt;articles/new&lt;/code&gt; 的模板。该模板的格式只能是 &lt;code&gt;html&lt;/code&gt; ，HTML的默认处理程序是 &lt;code&gt;erb&lt;/code&gt; 。 Rails将其他处理程序用于其他格式。 &lt;code&gt;builder&lt;/code&gt; 处理程序用于构建XML模板和 &lt;code&gt;coffee&lt;/code&gt; 处理程序使用CoffeeScript构建JavaScript模板。由于您要创建新的HTML表单，因此将使用 &lt;code&gt;ERB&lt;/code&gt; 语言，该语言旨在将Ruby嵌入HTML中。</target>
        </trans-unit>
        <trans-unit id="29e2b5e147c1b372744d171d51ecfd514b5b40e6" translate="yes" xml:space="preserve">
          <source>The solution to this is best to &lt;em&gt;process media files asynchronously&lt;/em&gt;: Save the media file and schedule a processing request in the database. A second process will handle the processing of the file in the background.</source>
          <target state="translated">解决方案最好是&lt;em&gt;异步处理媒体文件&lt;/em&gt;：保存媒体文件并在数据库中安排处理请求。第二个过程将在后台处理文件。</target>
        </trans-unit>
        <trans-unit id="fcaaa7261c7e1496228fcd0f857e65f05c064de9" translate="yes" xml:space="preserve">
          <source>The speak action simply uses the Chat::Room object that was created when the channel was first subscribed to by the consumer when that subscriber wants to say something in the room.</source>
          <target state="translated">当消费者第一次订阅频道时,当该订阅者想在房间里说些什么时,说话的动作就会简单地使用该频道创建的Chat::Room对象。</target>
        </trans-unit>
        <trans-unit id="1bdd39fb0d2e38471f75ef10005c947a24983c76" translate="yes" xml:space="preserve">
          <source>The special syntax &lt;code&gt;:id&lt;/code&gt; tells rails that this route expects an &lt;code&gt;:id&lt;/code&gt; parameter, which in our case will be the id of the article.</source>
          <target state="translated">特殊语法 &lt;code&gt;:id&lt;/code&gt; 告诉Rails，该路由需要一个 &lt;code&gt;:id&lt;/code&gt; 参数，在我们的情况下，该参数将为文章的ID。</target>
        </trans-unit>
        <trans-unit id="d21a3746c58b2424072639a95cdac84836fee217" translate="yes" xml:space="preserve">
          <source>The specified URL will then be passed a &lt;a href=&quot;../../file&quot;&gt;File&lt;/a&gt; object containing the selected file, or if the field was left blank, a StringIO object.</source>
          <target state="translated">然后，将向指定的URL传递一个包含所选文件的&lt;a href=&quot;../../file&quot;&gt;File&lt;/a&gt;对象，或者如果该字段保留为空白，则传递一个StringIO对象。</target>
        </trans-unit>
        <trans-unit id="2a90b5c619bbc6a71675b667b03350ade98a639f" translate="yes" xml:space="preserve">
          <source>The standard set of helper methods for form building are located in the &lt;code&gt;field_helpers&lt;/code&gt; class attribute.</source>
          <target state="translated">用于表单构建的标准帮助方法集位于 &lt;code&gt;field_helpers&lt;/code&gt; 类属性中。</target>
        </trans-unit>
        <trans-unit id="4d57b2839976977694e926113e1db0d9b1557222" translate="yes" xml:space="preserve">
          <source>The status code can either be a standard &lt;a href=&quot;https://www.iana.org/assignments/http-status-codes&quot;&gt;HTTP Status code&lt;/a&gt; as an integer, or a symbol representing the downcased, underscored and symbolized description. Note that the status code must be a 3xx HTTP code, or redirection will not occur.</source>
          <target state="translated">状态码可以是标准的&lt;a href=&quot;https://www.iana.org/assignments/http-status-codes&quot;&gt;HTTP状态码&lt;/a&gt;（整数形式），也可以是代表小写，下划线和符号化描述的符号。请注意，状态代码必须是3xx HTTP代码，否则将不会发生重定向。</target>
        </trans-unit>
        <trans-unit id="dab910766bcf61ff2b6b105149ac996ae15cafe0" translate="yes" xml:space="preserve">
          <source>The stored attribute names can be retrieved using .stored_attributes.</source>
          <target state="translated">存储的属性名可以使用.sedicated_attributes来检索。</target>
        </trans-unit>
        <trans-unit id="06fa98d1baa28477f3254b368c8fb59ce8ee67d7" translate="yes" xml:space="preserve">
          <source>The string pairs &amp;ldquo;key=value&amp;rdquo; that conform the query string are sorted lexicographically in ascending order.</source>
          <target state="translated">符合查询字符串的字符串对&amp;ldquo; key = value&amp;rdquo;按字典顺序升序排序。</target>
        </trans-unit>
        <trans-unit id="64f19a2a1cf8db7cc04037d9a665651ea6cfea93" translate="yes" xml:space="preserve">
          <source>The strong parameter API was designed with the most common use cases in mind. It is not meant as a silver bullet to handle all of your parameter filtering problems. However, you can easily mix the API with your own code to adapt to your situation.</source>
          <target state="translated">强参数API的设计是考虑到最常见的使用情况。它并不意味着是处理所有参数过滤问题的银弹。然而,您可以很容易地将API与您自己的代码混合,以适应您的情况。</target>
        </trans-unit>
        <trans-unit id="64aeaa7e8af743f68b89426602efeec47b839e41" translate="yes" xml:space="preserve">
          <source>The suffix string to append to every table name.</source>
          <target state="translated">要附加到每个表名的后缀字符串。</target>
        </trans-unit>
        <trans-unit id="c231da1b10c4104be616e8c614640770820e58c1" translate="yes" xml:space="preserve">
          <source>The sum of an empty collection is zero by default, but this is customizable:</source>
          <target state="translated">空集合的总和默认为零,但这是可以自定义的。</target>
        </trans-unit>
        <trans-unit id="e0f6f599baf2275dfb5a4aa872b6058539d06ebe" translate="yes" xml:space="preserve">
          <source>The sum of an empty receiver can be customized in this form as well:</source>
          <target state="translated">空接收器的和也可以用这种形式自定义。</target>
        </trans-unit>
        <trans-unit id="1980a1d02d3b53fd80ac4e2d7c492dc10cf6c43f" translate="yes" xml:space="preserve">
          <source>The system has been designed to having you go through the &lt;a href=&quot;many&quot;&gt;ActiveStorage::Attached::Many&lt;/a&gt; proxy that provides the dynamic proxy to the associations and factory methods, like &lt;code&gt;#attach&lt;/code&gt;.</source>
          <target state="translated">该系统旨在让您通过&lt;a href=&quot;many&quot;&gt;ActiveStorage :: Attached :: Many&lt;/a&gt;代理，该代理为关联和工厂方法提供动态代理，例如 &lt;code&gt;#attach&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c6ebe8a2a1f772cd708e9b2d8a544a7d7601a8a9" translate="yes" xml:space="preserve">
          <source>The system has been designed to having you go through the &lt;a href=&quot;one&quot;&gt;ActiveStorage::Attached::One&lt;/a&gt; proxy that provides the dynamic proxy to the associations and factory methods, like &lt;code&gt;attach&lt;/code&gt;.</source>
          <target state="translated">该系统旨在让您通过&lt;a href=&quot;one&quot;&gt;ActiveStorage :: Attached :: One&lt;/a&gt;代理，它为关联和工厂方法提供动态代理，例如 &lt;code&gt;attach&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ffb7d9e85d8c423cb49ef35ffe1f58ff36aea978" translate="yes" xml:space="preserve">
          <source>The system test directory holds system tests, which are used for full browser testing of your application. System tests allow you to test your application the way your users experience it and help you test your JavaScript as well. System tests inherit from Capybara and perform in browser tests for your application.</source>
          <target state="translated">系统测试目录中保存着系统测试,这些测试用于对您的应用程序进行全面的浏览器测试。系统测试可以让您以用户体验的方式测试您的应用程序,也可以帮助您测试您的JavaScript。系统测试继承自Capybara,并为您的应用程序执行浏览器内测试。</target>
        </trans-unit>
        <trans-unit id="e226fbd01d0f3a577c7b4944a32ddf8e19e4f6ff" translate="yes" xml:space="preserve">
          <source>The tables for these classes could look something like:</source>
          <target state="translated">这些类的表格可以是这样的。</target>
        </trans-unit>
        <trans-unit id="b607a63d813d085dd13611c891d91b17902f9714" translate="yes" xml:space="preserve">
          <source>The tag builder respects &lt;a href=&quot;https://www.w3.org/TR/html5/syntax.html#void-elements&quot;&gt;HTML5 void elements&lt;/a&gt; if no content is passed, and omits closing tags for those elements.</source>
          <target state="translated">如果未传递任何内容，则标记构建器将尊重&lt;a href=&quot;https://www.w3.org/TR/html5/syntax.html#void-elements&quot;&gt;HTML5 void元素&lt;/a&gt;，并省略这些元素的结束标记。</target>
        </trans-unit>
        <trans-unit id="675b6b8a4bce863060710a5c9d10379e1bb08bad" translate="yes" xml:space="preserve">
          <source>The target can be anything callable within the object, e.g. instance variables, methods, constants, etc.</source>
          <target state="translated">目标可以是对象中任何可调用的东西,例如实例变量、方法、常量等。</target>
        </trans-unit>
        <trans-unit id="baa685d8cc36701c6d0f85459c13777a362b6065" translate="yes" xml:space="preserve">
          <source>The target can be anything callable within the object, e.g. instance variables, methods, constants, etc. Only the public methods of the target are delegated.</source>
          <target state="translated">target可以是对象中任何可调用的东西,例如实例变量、方法、常量等。只有目标的公共方法才可以委托。</target>
        </trans-unit>
        <trans-unit id="6ccd69b0632a038b4775e1137e3438272e0689a3" translate="yes" xml:space="preserve">
          <source>The target method must be public, otherwise it will raise &lt;code&gt;NoMethodError&lt;/code&gt;.</source>
          <target state="translated">目标方法必须是公共的，否则将引发 &lt;code&gt;NoMethodError&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="97e918c05349a4e966ec6c625bebb25ec81486ac" translate="yes" xml:space="preserve">
          <source>The technique Sprockets uses for fingerprinting is to insert a hash of the content into the name, usually at the end. For example a CSS file &lt;code&gt;global.css&lt;/code&gt;</source>
          <target state="translated">Sprockets用于指纹识别的技术通常是在结尾处将内容的哈希值插入名称中。例如CSS文件 &lt;code&gt;global.css&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0a5e1b46915f509c3c7c7826ece3ecda8e4ab7d6" translate="yes" xml:space="preserve">
          <source>The tempfile is automatically closed and unlinked after the given block is executed.</source>
          <target state="translated">在执行完指定的块后,tempfile会自动关闭并解除链接。</target>
        </trans-unit>
        <trans-unit id="08851009cfd2022992ccb98a459841a4bbcf4922" translate="yes" xml:space="preserve">
          <source>The tempfile's name is prefixed with &lt;code&gt;ActiveStorage-&lt;/code&gt; and the blob's ID. Its extension matches that of the blob.</source>
          <target state="translated">临时文件的名称以 &lt;code&gt;ActiveStorage-&lt;/code&gt; 和blob的ID 为前缀。它的扩展名与Blob的扩展名匹配。</target>
        </trans-unit>
        <trans-unit id="fcda92529a81d9af722ac3cb13fb8f8768ff4cb9" translate="yes" xml:space="preserve">
          <source>The template digest that's added to the cache key is computed by taking an MD5 of the contents of the entire template file. This ensures that your caches will automatically expire when you change the template file.</source>
          <target state="translated">添加到缓存密钥的模板摘要是通过对整个模板文件的内容进行MD5计算的。这就保证了你的缓存会在你修改模板文件时自动失效。</target>
        </trans-unit>
        <trans-unit id="ba538c4449760474d7d60b4c54d76929d5f7fcb3" translate="yes" xml:space="preserve">
          <source>The template will be looked always in &lt;code&gt;app/views/layouts/&lt;/code&gt; folder. But you can point &lt;code&gt;layouts&lt;/code&gt; folder direct also. &lt;code&gt;layout &quot;layouts/demo&quot;&lt;/code&gt; is the same as &lt;code&gt;layout
&quot;demo&quot;&lt;/code&gt;.</source>
          <target state="translated">模板将始终在 &lt;code&gt;app/views/layouts/&lt;/code&gt; 文件夹中显示。但是您也可以直接指向 &lt;code&gt;layouts&lt;/code&gt; 文件夹。 &lt;code&gt;layout &quot;layouts/demo&quot;&lt;/code&gt; 与 &lt;code&gt;layout &quot;demo&quot;&lt;/code&gt; 相同。</target>
        </trans-unit>
        <trans-unit id="5c5c794abecdd21cff9c4b0a0fde1a6849f77b0f" translate="yes" xml:space="preserve">
          <source>The template will be rendered in a Rack environment which is accessible through ActionController::Renderer#env. You can set it up in two ways:</source>
          <target state="translated">模板将在Rack环境中渲染,可以通过ActionController::Renderer#env访问。你可以通过两种方式进行设置。</target>
        </trans-unit>
        <trans-unit id="2cf77bf1c65d71615e432d7b152984771af2f9e1" translate="yes" xml:space="preserve">
          <source>The test adapter should be used only in testing. Along with &lt;code&gt;ActionCable::TestHelper&lt;/code&gt; it makes a great tool to test your Rails application.</source>
          <target state="translated">测试适配器应仅在测试中使用。与 &lt;code&gt;ActionCable::TestHelper&lt;/code&gt; 一起，它是测试Rails应用程序的好工具。</target>
        </trans-unit>
        <trans-unit id="e2f52f540be30e96ad7b0037c64acc9126cfb2d3" translate="yes" xml:space="preserve">
          <source>The test adapter should be used only in testing. Along with &lt;code&gt;ActiveJob::TestCase&lt;/code&gt; and &lt;code&gt;ActiveJob::TestHelper&lt;/code&gt; it makes a great tool to test your Rails application.</source>
          <target state="translated">测试适配器应仅在测试中使用。与 &lt;code&gt;ActiveJob::TestCase&lt;/code&gt; 和 &lt;code&gt;ActiveJob::TestHelper&lt;/code&gt; 它是测试Rails应用程序的好工具。</target>
        </trans-unit>
        <trans-unit id="975aa4be50774a60cf43702b38d9d5f31ba89b40" translate="yes" xml:space="preserve">
          <source>The test for the controller</source>
          <target state="translated">控制器的测试</target>
        </trans-unit>
        <trans-unit id="00a7467e10ff3f397084acc632df42c027f23243" translate="yes" xml:space="preserve">
          <source>The test runner also provides a lot of other features like failing fast, deferring test output at the end of test run and so on. Check the documentation of the test runner as follows:</source>
          <target state="translated">测试运行器还提供了很多其他的功能,比如快速失败、测试运行结束时推迟测试输出等。查看测试运行器的文档如下。</target>
        </trans-unit>
        <trans-unit id="640507b7858ee7a8ef9198521e54b0f566518fb9" translate="yes" xml:space="preserve">
          <source>The test should see that there is an &lt;code&gt;h1&lt;/code&gt; on the articles index page and pass.</source>
          <target state="translated">测试应该看到在商品索引页面上存在一个 &lt;code&gt;h1&lt;/code&gt; 并通过。</target>
        </trans-unit>
        <trans-unit id="9b2cf1c313b916f77748246680f4fd2104331502" translate="yes" xml:space="preserve">
          <source>The test will have the following name:</source>
          <target state="translated">该测试将有以下名称:</target>
        </trans-unit>
        <trans-unit id="72797504f4efb0607c366b3726d9a06008557676" translate="yes" xml:space="preserve">
          <source>The testing environment will automatically load all the fixtures into the database before each test. To ensure consistent data, the environment deletes the fixtures before running the load.</source>
          <target state="translated">在每次测试之前,测试环境会自动将所有夹具加载到数据库中。为了确保数据的一致性,环境会在运行加载之前删除夹具。</target>
        </trans-unit>
        <trans-unit id="29f0e86770cb31aee986bbcb60bab0de0e063a64" translate="yes" xml:space="preserve">
          <source>The third argument, &lt;code&gt;indent_empty_lines&lt;/code&gt;, is a flag that says whether empty lines should be indented. Default is false.</source>
          <target state="translated">第三个参数 &lt;code&gt;indent_empty_lines&lt;/code&gt; 是一个标志，指示是否应缩进空行。默认为false。</target>
        </trans-unit>
        <trans-unit id="416d9d9d95fa737fdf9ecf9dd097599dc8c9c7ef" translate="yes" xml:space="preserve">
          <source>The third feature of the asset pipeline is it allows coding assets via a higher-level language, with precompilation down to the actual assets. Supported languages include Sass for CSS, CoffeeScript for JavaScript, and ERB for both by default.</source>
          <target state="translated">资产管道的第三个特点是它允许通过更高级别的语言对资产进行编码,预编译到实际的资产。支持的语言包括CSS的Sass,JavaScript的CoffeeScript,默认情况下两者都支持ERB。</target>
        </trans-unit>
        <trans-unit id="f12ece5923a813434343679094fa85482f7f8059" translate="yes" xml:space="preserve">
          <source>The threaded parallelization uses minitest's parallel executor directly. The processes parallelization uses a Ruby DRb server.</source>
          <target state="translated">线程并行化直接使用minitest的并行执行器。进程并行化使用Ruby DRb服务器。</target>
        </trans-unit>
        <trans-unit id="6511e3596ea3977b98718f56e83ca7b2c0af377b" translate="yes" xml:space="preserve">
          <source>The threats against web applications include user account hijacking, bypass of access control, reading or modifying sensitive data, or presenting fraudulent content. Or an attacker might be able to install a Trojan horse program or unsolicited e-mail sending software, aim at financial enrichment, or cause brand name damage by modifying company resources. In order to prevent attacks, minimize their impact and remove points of attack, first of all, you have to fully understand the attack methods in order to find the correct countermeasures. That is what this guide aims at.</source>
          <target state="translated">针对网络应用的威胁包括劫持用户账户、绕过访问控制、读取或修改敏感数据,或呈现欺诈性内容。或者攻击者可能会安装木马程序或不请自来的电子邮件发送软件,以敛财为目的,或者通过修改公司资源造成品牌损害。为了防止攻击,将攻击的影响降到最低,消除攻击点,首先要充分了解攻击方式,才能找到正确的应对措施。这就是本指南的目的。</target>
        </trans-unit>
        <trans-unit id="31848326716b8e439bd35853912f7581c2cf69c2" translate="yes" xml:space="preserve">
          <source>The three of them return &lt;code&gt;nil&lt;/code&gt; for blank receivers.</source>
          <target state="translated">对于空白接收器，它们三个返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a86c8236c7a4aa22941361c064142983f59ef501" translate="yes" xml:space="preserve">
          <source>The time is parsed using Time.parse method. If &lt;code&gt;form&lt;/code&gt; is :local, then the time is in the system timezone. If the date part is missing then the current date is used and if the time part is missing then it is assumed to be 00:00:00.</source>
          <target state="translated">使用Time.parse方法分析时间。如果 &lt;code&gt;form&lt;/code&gt; 为：local，则时间为系统时区。如果缺少日期部分，则使用当前日期；如果缺少时间部分，则假定为00:00:00。</target>
        </trans-unit>
        <trans-unit id="1da1a16a7b055aacdbe4a5e837bd0b5a8550d320" translate="yes" xml:space="preserve">
          <source>The timeline of Rails' initialization sequence.</source>
          <target state="translated">Rails初始化序列的时间轴。</target>
        </trans-unit>
        <trans-unit id="d6194f3b2f582790fad265e80912cb271ac73c7b" translate="yes" xml:space="preserve">
          <source>The token parameter is named &lt;code&gt;authenticity_token&lt;/code&gt; by default. The name and value of this token must be added to every layout that renders forms by including &lt;code&gt;csrf_meta_tags&lt;/code&gt; in the HTML &lt;code&gt;head&lt;/code&gt;.</source>
          <target state="translated">默认情况下，令牌参数命名为 &lt;code&gt;authenticity_token&lt;/code&gt; 。必须通过在HTML &lt;code&gt;head&lt;/code&gt; 包含 &lt;code&gt;csrf_meta_tags&lt;/code&gt; ，将此令牌的名称和值添加到呈现表单的每个布局中。</target>
        </trans-unit>
        <trans-unit id="05d8eb590d8e83077814240b2a170f555b1863fe" translate="yes" xml:space="preserve">
          <source>The top portion of the index page displays the users. The bottom portion provides a form to create a new user.</source>
          <target state="translated">索引页面的顶部显示用户。底部提供了一个创建新用户的表格。</target>
        </trans-unit>
        <trans-unit id="e7aaa0ff7f838941cf4d13f0243ddae8be9664af" translate="yes" xml:space="preserve">
          <source>The trailing '_id' can be kept and capitalized by setting the optional parameter &lt;code&gt;keep_id_suffix&lt;/code&gt; to true (default is false).</source>
          <target state="translated">通过将可选参数 &lt;code&gt;keep_id_suffix&lt;/code&gt; 设置为true（默认值为false），可以保留尾部的'_id'并将其大写。</target>
        </trans-unit>
        <trans-unit id="a346915612a785e701fb8aa4fb88d6d804e10964" translate="yes" xml:space="preserve">
          <source>The trailing '_id' can be kept and capitalized by setting the optional parameter &lt;code&gt;keep_id_suffix&lt;/code&gt; to true. By default, this parameter is false.</source>
          <target state="translated">通过将可选参数 &lt;code&gt;keep_id_suffix&lt;/code&gt; 设置为true，可以保留尾部的'_id'并将其大写。默认情况下，此参数为false。</target>
        </trans-unit>
        <trans-unit id="aec6fc5c9914c772cee6cc49f306e3312005d4e1" translate="yes" xml:space="preserve">
          <source>The trailing '_id','Id'.. can be kept and capitalized by setting the optional parameter &lt;code&gt;keep_id_suffix&lt;/code&gt; to true. By default, this parameter is false.</source>
          <target state="translated">通过将可选参数 &lt;code&gt;keep_id_suffix&lt;/code&gt; 设置为true，可以保留尾随的'_id'，'Id'..并将其大写。默认情况下，此参数为false。</target>
        </trans-unit>
        <trans-unit id="c4c9ed39b42fbbb24c8e1e3654de7fd488fd5d48" translate="yes" xml:space="preserve">
          <source>The translated model name, translated attribute name, and value are always available for interpolation as &lt;code&gt;model&lt;/code&gt;, &lt;code&gt;attribute&lt;/code&gt; and &lt;code&gt;value&lt;/code&gt; respectively.</source>
          <target state="translated">转换后的模型名称，转换后的属性名称和值始终可分别作为 &lt;code&gt;model&lt;/code&gt; ， &lt;code&gt;attribute&lt;/code&gt; 和 &lt;code&gt;value&lt;/code&gt; 进行插值。</target>
        </trans-unit>
        <trans-unit id="0c206e712ab9262a624613a14bf5a4614f215afa" translate="yes" xml:space="preserve">
          <source>The translation denoted as &lt;code&gt;:one&lt;/code&gt; is regarded as singular, and the &lt;code&gt;:other&lt;/code&gt; is used as plural. If the count is zero, and a &lt;code&gt;:zero&lt;/code&gt; entry is present, then it will be used instead of &lt;code&gt;:other&lt;/code&gt;.</source>
          <target state="translated">表示为 &lt;code&gt;:one&lt;/code&gt; 的翻译被视为单数，而 &lt;code&gt;:other&lt;/code&gt; 被用作复数。如果计数为零，并且存在 &lt;code&gt;:zero&lt;/code&gt; 条目，则将使用它代替 &lt;code&gt;:other&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1eaffe2233ce31e6bda12ed1e808ce2e1055683f" translate="yes" xml:space="preserve">
          <source>The truncated text ends with the &lt;code&gt;:omission&lt;/code&gt; string, defaulting to &amp;ldquo;&amp;hellip;&amp;rdquo;, for a total length not exceeding &lt;code&gt;bytesize&lt;/code&gt;.</source>
          <target state="translated">截断的文本以 &lt;code&gt;:omission&lt;/code&gt; &lt;code&gt;bytesize&lt;/code&gt; 字符串结尾，默认为&amp;ldquo;&amp;hellip;&amp;rdquo;，总长度不超过bytesize。</target>
        </trans-unit>
        <trans-unit id="3ef5f4d61a4d21cbfd235b66e8b63c8804fdf71b" translate="yes" xml:space="preserve">
          <source>The two basic structures are arrays and hashes. Hashes mirror the syntax used for accessing the value in &lt;code&gt;params&lt;/code&gt;. For example, if a form contains:</source>
          <target state="translated">两个基本结构是数组和哈希。哈希反映了用于访问 &lt;code&gt;params&lt;/code&gt; 中的值的语法。例如，如果表单包含：</target>
        </trans-unit>
        <trans-unit id="4ae6f1958803c95c5af96cee2de8ca60e298f229" translate="yes" xml:space="preserve">
          <source>The two dashes start a comment ignoring everything after it. So the query returns all records from the projects table including those blind to the user. This is because the condition is true for all records.</source>
          <target state="translated">两个破折号开始的注释忽略了后面的所有内容。因此,查询将返回项目表中的所有记录,包括那些对用户来说是盲目的记录。这是因为条件对所有记录都是真的。</target>
        </trans-unit>
        <trans-unit id="26baf66a5c5cf8b3ca15d0abd849a6180bb33678" translate="yes" xml:space="preserve">
          <source>The two lines following the request are to handle the redirect we setup when creating a new article.</source>
          <target state="translated">请求后面的两行是为了处理我们在创建新文章时设置的重定向。</target>
        </trans-unit>
        <trans-unit id="6b101fb80aec1c9c2ab48a863fb3cea6d938460e" translate="yes" xml:space="preserve">
          <source>The two main methods for testing your routes:</source>
          <target state="translated">测试路线的两种主要方法。</target>
        </trans-unit>
        <trans-unit id="4df240969de79c63294f13e9b45064ab12e90f94" translate="yes" xml:space="preserve">
          <source>The two relations must be structurally compatible: they must be scoping the same model, and they must differ only by &lt;a href=&quot;querymethods#method-i-where&quot;&gt;where&lt;/a&gt; (if no &lt;a href=&quot;querymethods#method-i-group&quot;&gt;group&lt;/a&gt; has been defined) or &lt;a href=&quot;querymethods#method-i-having&quot;&gt;having&lt;/a&gt; (if a &lt;a href=&quot;querymethods#method-i-group&quot;&gt;group&lt;/a&gt; is present). Neither relation may have a &lt;a href=&quot;querymethods#method-i-limit&quot;&gt;limit&lt;/a&gt;, &lt;a href=&quot;querymethods#method-i-offset&quot;&gt;offset&lt;/a&gt;, or &lt;a href=&quot;querymethods#method-i-distinct&quot;&gt;distinct&lt;/a&gt; set.</source>
          <target state="translated">两个关系必须结构兼容：它们必须被确定范围相同的模型，并且它们必须区别仅由&lt;a href=&quot;querymethods#method-i-where&quot;&gt;其中&lt;/a&gt;（如果没有&lt;a href=&quot;querymethods#method-i-group&quot;&gt;组&lt;/a&gt;已定义）或&lt;a href=&quot;querymethods#method-i-having&quot;&gt;具有&lt;/a&gt;（如果一个&lt;a href=&quot;querymethods#method-i-group&quot;&gt;基团&lt;/a&gt;存在的话）。两个关系都不能具有&lt;a href=&quot;querymethods#method-i-limit&quot;&gt;limit&lt;/a&gt;，&lt;a href=&quot;querymethods#method-i-offset&quot;&gt;offset&lt;/a&gt;或&lt;a href=&quot;querymethods#method-i-distinct&quot;&gt;distinct&lt;/a&gt;集合。</target>
        </trans-unit>
        <trans-unit id="4429a5c939dc6aca1139441991d565996b91dd6d" translate="yes" xml:space="preserve">
          <source>The type detected by Active Record can be overridden.</source>
          <target state="translated">活动记录检测到的类型可以被覆盖。</target>
        </trans-unit>
        <trans-unit id="1f0b9cf1c4d9c3eca3e4a428a0c7fa3e8066b238" translate="yes" xml:space="preserve">
          <source>The type of an attribute is given the opportunity to change how dirty tracking is performed. The methods &lt;code&gt;changed?&lt;/code&gt; and &lt;code&gt;changed_in_place?&lt;/code&gt; will be called from &lt;a href=&quot;../../activemodel/dirty&quot;&gt;ActiveModel::Dirty&lt;/a&gt;. See the documentation for those methods in &lt;a href=&quot;../../activemodel/type/value&quot;&gt;ActiveModel::Type::Value&lt;/a&gt; for more details.</source>
          <target state="translated">属性的类型有机会更改执行脏跟踪的方式。方法 &lt;code&gt;changed?&lt;/code&gt; 和 &lt;code&gt;changed_in_place?&lt;/code&gt; 将从&lt;a href=&quot;../../activemodel/dirty&quot;&gt;ActiveModel :: Dirty&lt;/a&gt;调用。有关更多详细信息，请参见&lt;a href=&quot;../../activemodel/type/value&quot;&gt;ActiveModel :: Type :: Value中&lt;/a&gt;有关这些方法的文档。</target>
        </trans-unit>
        <trans-unit id="927059acf7f717dfa1ace58934a018ae273d21bc" translate="yes" xml:space="preserve">
          <source>The types &lt;code&gt;inet&lt;/code&gt; and &lt;code&gt;cidr&lt;/code&gt; are mapped to Ruby &lt;a href=&quot;https://ruby-doc.org/stdlib-2.2.2/libdoc/ipaddr/rdoc/IPAddr.html&quot;&gt;&lt;code&gt;IPAddr&lt;/code&gt;&lt;/a&gt; objects. The &lt;code&gt;macaddr&lt;/code&gt; type is mapped to normal text.</source>
          <target state="translated">&lt;code&gt;inet&lt;/code&gt; 和 &lt;code&gt;cidr&lt;/code&gt; 类型映射到Ruby &lt;a href=&quot;https://ruby-doc.org/stdlib-2.2.2/libdoc/ipaddr/rdoc/IPAddr.html&quot;&gt; &lt;code&gt;IPAddr&lt;/code&gt; &lt;/a&gt;对象。该 &lt;code&gt;macaddr&lt;/code&gt; 类型映射到普通文本。</target>
        </trans-unit>
        <trans-unit id="b0861f73b8db3082acb47c4ea15e2a6f8e772b26" translate="yes" xml:space="preserve">
          <source>The typical route is to just dump everything in a monolithic class, perhaps with a comment, as a least-bad alternative. Using modules in separate files means tedious sifting to get a big-picture view.</source>
          <target state="translated">典型的方法是把所有的东西都转储到一个单片类中,也许加上一个注释,作为一个最不坏的选择。在单独的文件中使用模块意味着要通过繁琐的筛选才能得到一个全局性的视图。</target>
        </trans-unit>
        <trans-unit id="cc0073e1d3239a9024667d104757ce1e2361f109" translate="yes" xml:space="preserve">
          <source>The underlying body, as a streamable object.</source>
          <target state="translated">底层主体,作为一个可流转的对象。</target>
        </trans-unit>
        <trans-unit id="504117b27c360308482a63dde448944374808b20" translate="yes" xml:space="preserve">
          <source>The underlying table must have the relevant columns defined with unique constraints.</source>
          <target state="translated">基础表必须有相关的列定义,并有唯一的约束条件。</target>
        </trans-unit>
        <trans-unit id="fdf93057400271c1f0b768430268fc455455f04a" translate="yes" xml:space="preserve">
          <source>The unique request id can be used to trace a request end-to-end and would typically end up being part of log files from multiple pieces of the stack.</source>
          <target state="translated">唯一的请求id可以用来跟踪一个请求的端到端,通常会最终成为堆栈中多个片段的日志文件的一部分。</target>
        </trans-unit>
        <trans-unit id="44345e0f37696053af8dfe1ad08931d4ee884fed" translate="yes" xml:space="preserve">
          <source>The unique request id is either based on the X-Request-Id header in the request, which would typically be generated by a firewall, load balancer, or the web server, or, if this header is not available, a random uuid. If the header is accepted from the outside world, we sanitize it to a max of 255 chars and alphanumeric and dashes only.</source>
          <target state="translated">唯一的请求ID是基于请求中的X-Request-Id头(通常由防火墙、负载平衡器或Web服务器生成),或者,如果这个头不可用,则是一个随机的uuid。如果请求头是由外部世界接受的,我们会将请求头的字符数控制在255个以内,并且只包含字母数字和破折号。</target>
        </trans-unit>
        <trans-unit id="c4127c0166c14c885baf6d19dcdb9fce72629288" translate="yes" xml:space="preserve">
          <source>The upside of long-lived channel instances is that you can use instance variables to keep reference to objects that future subscriber requests can interact with. Here's a quick example:</source>
          <target state="translated">长寿命通道实例的好处是,你可以使用实例变量来保持对未来订阅者请求可以交互的对象的引用。下面是一个快速的例子。</target>
        </trans-unit>
        <trans-unit id="f05b9f48f977cb2b8245e6965144965f6f98f067" translate="yes" xml:space="preserve">
          <source>The use of &lt;code&gt;write_attribute&lt;/code&gt; to write to the field in model is just one example of how a plugin can interact with the model, and will not always be the right method to use. For example, you could also use:</source>
          <target state="translated">使用 &lt;code&gt;write_attribute&lt;/code&gt; 写入模型中的字段只是插件如何与模型进行交互的一个示例，并且不一定总是正确的使用方法。例如，您还可以使用：</target>
        </trans-unit>
        <trans-unit id="8ba3a56d5e7efe66d3fab380043aeea55b8e7b0a" translate="yes" xml:space="preserve">
          <source>The use of extra attributes on the join table in a &lt;code&gt;has_and_belongs_to_many&lt;/code&gt; association is deprecated. If you require this sort of complex behavior on the table that joins two models in a many-to-many relationship, you should use a &lt;code&gt;has_many :through&lt;/code&gt; association instead of &lt;code&gt;has_and_belongs_to_many&lt;/code&gt;.</source>
          <target state="translated">在 &lt;code&gt;has_and_belongs_to_many&lt;/code&gt; 关联中，不建议在联接表上使用额外的属性。如果在以多对多关系连接两个模型的表上需要这种复杂的行为，则应使用 &lt;code&gt;has_many :through&lt;/code&gt; 关联而不是 &lt;code&gt;has_and_belongs_to_many&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="687066842fc8ecd4fa47ae8968fd256f5e45ada4" translate="yes" xml:space="preserve">
          <source>The user buys something.</source>
          <target state="translated">用户买东西。</target>
        </trans-unit>
        <trans-unit id="7c62bd30e184568bef1e6d0ac16046c9a736c174" translate="yes" xml:space="preserve">
          <source>The user can also specify the encoding via a comment on the first line of the template (# encoding: NAME-OF-ENCODING). This will work with any template engine, as we process out the encoding comment before passing the source on to the template engine, leaving a blank line in its stead.</source>
          <target state="translated">用户也可以通过模板第一行的注释来指定编码(#encoding:NAME-OF-ENCODING)。这将适用于任何模板引擎,因为我们在将源码传递给模板引擎之前,会先处理掉编码注释,然后留下一行空白。</target>
        </trans-unit>
        <trans-unit id="826ca47e57f18b11478c16bdc6bb3633f987bcfe" translate="yes" xml:space="preserve">
          <source>The user can override this default by passing a block to the layout:</source>
          <target state="translated">用户可以通过向布局传递一个块来覆盖这个默认值。</target>
        </trans-unit>
        <trans-unit id="719dce192492bacd8bcefcb5f6b709f528c266da" translate="yes" xml:space="preserve">
          <source>The user has their original credit back.</source>
          <target state="translated">用户原有的信用已经恢复。</target>
        </trans-unit>
        <trans-unit id="c6fa6bc3d4150b5cc2b951fee14c9d1cabd21a92" translate="yes" xml:space="preserve">
          <source>The user is &lt;em&gt;held accountable for the results&lt;/em&gt; of the interaction.</source>
          <target state="translated">用户要对交互&lt;em&gt;结果&lt;/em&gt;负责。</target>
        </trans-unit>
        <trans-unit id="3e076b48f1c86983855eb3347dba2080e3709d89" translate="yes" xml:space="preserve">
          <source>The user takes the cookie from the first step (which they previously copied) and replaces the current cookie in the browser.</source>
          <target state="translated">用户从第一步中取出cookie(他们之前复制的),并在浏览器中替换当前cookie。</target>
        </trans-unit>
        <trans-unit id="0c221d372386ae6055b0803819195b0d89fb89dc" translate="yes" xml:space="preserve">
          <source>The validation happens by performing an SQL query into the model's table, searching for an existing record with the same value in that attribute.</source>
          <target state="translated">验证是通过对模型的表执行SQL查询,搜索该属性中具有相同值的现有记录来实现的。</target>
        </trans-unit>
        <trans-unit id="210fb69772009d42d4971aa88ccf3a4132e9cbb3" translate="yes" xml:space="preserve">
          <source>The validation only runs when all the &lt;code&gt;:if&lt;/code&gt; conditions and none of the &lt;code&gt;:unless&lt;/code&gt; conditions are evaluated to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">验证仅在所有 &lt;code&gt;:if&lt;/code&gt; 条件且所有 &lt;code&gt;:unless&lt;/code&gt; 条件均未评估为 &lt;code&gt;true&lt;/code&gt; 时运行。</target>
        </trans-unit>
        <trans-unit id="22d922531e256f36a7805e905aa5612d4cc33f30" translate="yes" xml:space="preserve">
          <source>The validation process on save can be skipped by passing &lt;code&gt;validate:
false&lt;/code&gt;. The validation context can be changed by passing &lt;code&gt;context: context&lt;/code&gt;. The regular &lt;a href=&quot;persistence#method-i-save&quot;&gt;ActiveRecord::Base#save&lt;/a&gt; method is replaced with this when the validations module is mixed in, which it is by default.</source>
          <target state="translated">可以通过传递 &lt;code&gt;validate: false&lt;/code&gt; 来跳过保存时的验证过程。可以通过传递 &lt;code&gt;context: context&lt;/code&gt; 来更改验证上下文。混入验证模块时，默认的方法是用常规&lt;a href=&quot;persistence#method-i-save&quot;&gt;ActiveRecord :: Base＃save&lt;/a&gt;方法替换该方法。</target>
        </trans-unit>
        <trans-unit id="8999b1ed1a41ae9c57579e07e860b4efcd1722c6" translate="yes" xml:space="preserve">
          <source>The validators hash can also handle regular expressions, ranges, arrays and strings in shortcut form.</source>
          <target state="translated">验证器哈希还可以处理正则表达式、范围、数组和字符串的快捷形式。</target>
        </trans-unit>
        <trans-unit id="ddc6ecf56ce207f86d9a65f068b01ae48ef8f30f" translate="yes" xml:space="preserve">
          <source>The value for &lt;code&gt;i18n.transliterate.rule&lt;/code&gt; can be a simple &lt;a href=&quot;../hash&quot;&gt;Hash&lt;/a&gt; that maps characters to ASCII approximations as shown above, or, for more complex requirements, a Proc:</source>
          <target state="translated">&lt;code&gt;i18n.transliterate.rule&lt;/code&gt; 的值可以是一个简单的&lt;a href=&quot;../hash&quot;&gt;Hash&lt;/a&gt;，可以将字符映射到ASCII近似值（如上所示），或者对于更复杂的要求，可以使用Proc：</target>
        </trans-unit>
        <trans-unit id="4529e2d3c40915fd4c9132c578e7597ed49f3db5" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;autoload_paths&lt;/code&gt; can be inspected. In a just-generated application it is (edited):</source>
          <target state="translated">可以检查 &lt;code&gt;autoload_paths&lt;/code&gt; 的值。在刚刚生成的应用程序中，它是（已编辑）：</target>
        </trans-unit>
        <trans-unit id="cd0a00e0a081899b611799d0f44fe6f9726d2a6e" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;params[:ids]&lt;/code&gt; will now be &lt;code&gt;[&quot;1&quot;, &quot;2&quot;, &quot;3&quot;]&lt;/code&gt;. Note that parameter values are always strings; Rails makes no attempt to guess or cast the type.</source>
          <target state="translated">现在 &lt;code&gt;params[:ids]&lt;/code&gt; 的值将为 &lt;code&gt;[&quot;1&quot;, &quot;2&quot;, &quot;3&quot;]&lt;/code&gt; 。请注意，参数值始终是字符串。Rails不会尝试猜测或强制转换类型。</target>
        </trans-unit>
        <trans-unit id="be17b91d3b4e674a03379a9cbc0828c572860985" translate="yes" xml:space="preserve">
          <source>The values are first processed by SHA256, so that we don't leak length info via timing attacks.</source>
          <target state="translated">首先对数值进行SHA256处理,这样我们就不会通过定时攻击泄露长度信息。</target>
        </trans-unit>
        <trans-unit id="f7668455a149f8036f8739030b9a40a0d03c8dfc" translate="yes" xml:space="preserve">
          <source>The values compared should be of fixed length, such as strings that have already been processed by HMAC. Raises in case of length mismatch.</source>
          <target state="translated">比较的值应该是固定长度的,比如已经被HMAC处理过的字符串。如果出现长度不匹配的情况,则发出警报。</target>
        </trans-unit>
        <trans-unit id="c3de7898cf5037e5a00562c2e793081732841dfe" translate="yes" xml:space="preserve">
          <source>The values of the hash here being the arguments or options passed to the specific git command. As per the final example shown here, multiple git commands can be specified at a time, but the order of their running is not guaranteed to be the same as the order that they were specified in.</source>
          <target state="translated">这里的哈希值是传递给特定git命令的参数或选项。按照最后一个例子,可以同时指定多个git命令,但不能保证它们的运行顺序与指定的顺序相同。</target>
        </trans-unit>
        <trans-unit id="51738102e906fea5a59e8e5aa4f95a26d7b4e6ee" translate="yes" xml:space="preserve">
          <source>The variable &lt;code&gt;f&lt;/code&gt; yielded to the block is a &lt;a href=&quot;formbuilder&quot;&gt;FormBuilder&lt;/a&gt; object that incorporates the knowledge about the model object represented by &lt;code&gt;:person&lt;/code&gt; passed to &lt;code&gt;form_for&lt;/code&gt;. Methods defined on the &lt;a href=&quot;formbuilder&quot;&gt;FormBuilder&lt;/a&gt; are used to generate fields bound to this model. Thus, for example,</source>
          <target state="translated">产生给该块的变量 &lt;code&gt;f&lt;/code&gt; 是一个&lt;a href=&quot;formbuilder&quot;&gt;FormBuilder&lt;/a&gt;对象，其中包含有关传递给 &lt;code&gt;form_for&lt;/code&gt; 的 &lt;code&gt;:person&lt;/code&gt; 表示的模型对象的知识。在&lt;a href=&quot;formbuilder&quot;&gt;FormBuilder&lt;/a&gt;上定义的方法用于生成绑定到此模型的字段。因此，例如</target>
        </trans-unit>
        <trans-unit id="c9a81f628645aa415b2032ec2f5f389b9a451d86" translate="yes" xml:space="preserve">
          <source>The variables inside the displayed list will be printed with their values after you move in the stack. To stop displaying a variable use &lt;code&gt;undisplay n&lt;/code&gt; where &lt;em&gt;n&lt;/em&gt; is the variable number (1 in the last example).</source>
          <target state="translated">在堆栈中移动后，将显示显示列表中的变量及其值。要停止显示变量，请取消 &lt;code&gt;undisplay n&lt;/code&gt; ，其中&lt;em&gt;n&lt;/em&gt;是变量号（在上一个示例中为1）。</target>
        </trans-unit>
        <trans-unit id="30e5bd030892b4a852e2c3cbc8b86634a728d26f" translate="yes" xml:space="preserve">
          <source>The various connection pools are managed by a single instance of &lt;a href=&quot;connectionhandler&quot;&gt;ConnectionHandler&lt;/a&gt; accessible via &lt;a href=&quot;../core#method-c-connection_handler&quot;&gt;ActiveRecord::Core.connection_handler&lt;/a&gt;. All Active Record models use this handler to determine the connection pool that they should use.</source>
          <target state="translated">各种连接池由&lt;a href=&quot;connectionhandler&quot;&gt;ConnectionHandler&lt;/a&gt;的单个实例管理，可通过&lt;a href=&quot;../core#method-c-connection_handler&quot;&gt;ActiveRecord :: Core.connection_handler&lt;/a&gt;访问。所有Active Record模型都使用此处理程序来确定它们应使用的连接池。</target>
        </trans-unit>
        <trans-unit id="3ba65a91e27bd5bcb67a20448455ea6160bacbdd" translate="yes" xml:space="preserve">
          <source>The version column used for optimistic locking. Defaults to &lt;code&gt;lock_version&lt;/code&gt;.</source>
          <target state="translated">用于乐观锁定的版本列。默认为 &lt;code&gt;lock_version&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d0edb9fdea3de462fd0a58773839cce4a4acbae7" translate="yes" xml:space="preserve">
          <source>The version number in which the deprecated behavior will be removed, by default.</source>
          <target state="translated">默认情况下,删除被废弃行为的版本号。</target>
        </trans-unit>
        <trans-unit id="ac0230161de62aae504a0f81a584296cdc0e8222" translate="yes" xml:space="preserve">
          <source>The very first migration related rails command you will use will probably be &lt;code&gt;rails db:migrate&lt;/code&gt;. In its most basic form it just runs the &lt;code&gt;change&lt;/code&gt; or &lt;code&gt;up&lt;/code&gt; method for all the migrations that have not yet been run. If there are no such migrations, it exits. It will run these migrations in order based on the date of the migration.</source>
          <target state="translated">您将使用的第一个与迁移相关的rails命令可能是 &lt;code&gt;rails db:migrate&lt;/code&gt; 。它以其最基本的形式仅对尚未运行的所有迁移运行 &lt;code&gt;change&lt;/code&gt; 或 &lt;code&gt;up&lt;/code&gt; 方法。如果没有此类迁移，则退出。它将根据迁移日期按顺序运行这些迁移。</target>
        </trans-unit>
        <trans-unit id="ac2a3b8ac588e6c7d35fe808ffcfdd151ce9cc02" translate="yes" xml:space="preserve">
          <source>The video tag also supports all of the &lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt; HTML options through the HTML options hash, including:</source>
          <target state="translated">video标签还通过HTML options哈希支持所有 &lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt; HTML选项，包括：</target>
        </trans-unit>
        <trans-unit id="119b909af465377a2dafbbc8a03ac551f389a7b4" translate="yes" xml:space="preserve">
          <source>The view class must have the following methods:</source>
          <target state="translated">视图类必须有以下方法。</target>
        </trans-unit>
        <trans-unit id="1d2a88b0bc833aa9900595087d57dd20bf6b3e79" translate="yes" xml:space="preserve">
          <source>The view will contain a form similar to the one we used when creating new articles. Create a file called &lt;code&gt;app/views/articles/edit.html.erb&lt;/code&gt; and make it look as follows:</source>
          <target state="translated">该视图将包含与我们创建新文章时使用的表单类似的表单。创建一个名为 &lt;code&gt;app/views/articles/edit.html.erb&lt;/code&gt; 的文件,并使其如下所示：</target>
        </trans-unit>
        <trans-unit id="6c158899320feee2e97c385d2ee14ec4ce40aa6d" translate="yes" xml:space="preserve">
          <source>The way it works is that, when the link is activated, it constructs a hidden form in the document with the &quot;action&quot; attribute corresponding to &quot;href&quot; value of the link, and the method corresponding to &lt;code&gt;data-method&lt;/code&gt; value, and submits that form.</source>
          <target state="translated">它的工作方式是：激活链接后，它会在文档中构造一个隐藏的表单，该表单具有与链接的&amp;ldquo; href&amp;rdquo;值相对应的&amp;ldquo; action&amp;rdquo;属性以及与 &lt;code&gt;data-method&lt;/code&gt; 值相对应的方法，然后提交该隐藏表单形成。</target>
        </trans-unit>
        <trans-unit id="1e18e70ccf9ed0f548a5db54192832822b7a0ad9" translate="yes" xml:space="preserve">
          <source>The way this is done is to add a non-guessable token which is only known to your server to each request. This way, if a request comes in without the proper token, it will be denied access.</source>
          <target state="translated">这样做的方法是在每个请求中添加一个不可猜测的标记,这个标记只有你的服务器知道。这样,如果一个请求没有合适的令牌,它将被拒绝访问。</target>
        </trans-unit>
        <trans-unit id="b7c78eda0eacbc05a4fde40017411e78c31cd0e1" translate="yes" xml:space="preserve">
          <source>The web application at &lt;code&gt;www.webapp.com&lt;/code&gt; verifies the user information in the corresponding session hash and destroys the project with the ID 1. It then returns a result page which is an unexpected result for the browser, so it will not display the image.</source>
          <target state="translated">&lt;code&gt;www.webapp.com&lt;/code&gt; 上的Web应用程序将验证相应会话哈希中的用户信息，并销毁ID为1的项目。然后，它返回结果页，该结果页对于浏览器而言是意外结果，因此将不显示图像。</target>
        </trans-unit>
        <trans-unit id="9f0bf503400b87f8f940d1752feec19d755672a8" translate="yes" xml:space="preserve">
          <source>The whole callback chain is wrapped in a transaction. If any callback raises an exception, the execution chain gets halted and a ROLLBACK is issued. To intentionally stop a chain use:</source>
          <target state="translated">整个回调链被包裹在一个事务中。如果任何回调引发异常,执行链就会停止,并发出ROLLBACK。要有意地停止一个链,可以使用:</target>
        </trans-unit>
        <trans-unit id="304e04fad05e0c4f4a61a9fc6958560aa376e82f" translate="yes" xml:space="preserve">
          <source>The word will be pluralized using rules defined for the locale (you must define your own inflection rules for languages other than English). See &lt;a href=&quot;../../activesupport/inflector#method-i-pluralize&quot;&gt;ActiveSupport::Inflector#pluralize&lt;/a&gt;</source>
          <target state="translated">该单词将使用为区域设置定义的规则来复数（您必须为英语以外的其他语言定义自己的变形规则）。参见&lt;a href=&quot;../../activesupport/inflector#method-i-pluralize&quot;&gt;ActiveSupport :: Inflector＃pluralize&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8b90a1b189ff4eaf81ed82bbe6e50b03aaabd418" translate="yes" xml:space="preserve">
          <source>The worker pool is used to run connection callbacks and channel actions in isolation from the server's main thread. Action Cable allows the application to configure the number of simultaneously processed threads in the worker pool.</source>
          <target state="translated">工作池用于与服务器的主线程隔离运行连接回调和通道动作。动作缆允许应用程序配置工人池中同时处理的线程数量。</target>
        </trans-unit>
        <trans-unit id="5a227e6c2220ef5acd6b50d07b084d078961f053" translate="yes" xml:space="preserve">
          <source>The worker pool is where we run connection callbacks and channel actions. We do as little as possible on the server's main thread. The worker pool is an executor service that's backed by a pool of threads working from a task queue. The thread pool size maxes out at 4 worker threads by default. Tune the size yourself with &lt;code&gt;config.action_cable.worker_pool_size&lt;/code&gt;.</source>
          <target state="translated">工作池是我们运行连接回调和通道操作的地方。我们在服务器的主线程上做的越少越好。工作池是一个执行程序服务，由任务队列中工作的线程池支持。默认情况下，线程池大小最大为4个工作线程。使用 &lt;code&gt;config.action_cable.worker_pool_size&lt;/code&gt; 自己调整大小。</target>
        </trans-unit>
        <trans-unit id="4071a60de007bb344068973d53b28d0026839c89" translate="yes" xml:space="preserve">
          <source>The worms exploit a hole in Yahoo's HTML/JavaScript filter, which usually filters all targets and onload attributes from tags (because there can be JavaScript). The filter is applied only once, however, so the onload attribute with the worm code stays in place. This is a good example why restricted list filters are never complete and why it is hard to allow HTML/JavaScript in a web application.</source>
          <target state="translated">蠕虫利用了雅虎的HTML/JavaScript过滤器中的一个漏洞,该过滤器通常会过滤标签中的所有目标和onload属性(因为可能有JavaScript)。然而,该过滤器只应用一次,所以带有蠕虫代码的onload属性会留在原地。这就是一个很好的例子,为什么限制列表过滤器永远不完整,为什么很难在Web应用程序中允许HTML/JavaScript。</target>
        </trans-unit>
        <trans-unit id="381cfbd9c2dd9fecda0a80c5cba63a031cfacf42" translate="yes" xml:space="preserve">
          <source>Then &lt;code&gt;User.human_attribute_name(&quot;role.admin&quot;)&lt;/code&gt; will return &quot;Admin&quot;.</source>
          <target state="translated">然后， &lt;code&gt;User.human_attribute_name(&quot;role.admin&quot;)&lt;/code&gt; 将返回&amp;ldquo; Admin&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="69726d22ecf072f07dd132a5079e2db0487c5a16" translate="yes" xml:space="preserve">
          <source>Then &lt;code&gt;User.model_name.human(count: 2)&lt;/code&gt; will return &quot;Customers&quot;. With &lt;code&gt;count: 1&lt;/code&gt; or without params will return &quot;Customer&quot;.</source>
          <target state="translated">然后 &lt;code&gt;User.model_name.human(count: 2)&lt;/code&gt; 将返回&amp;ldquo;客户&amp;rdquo;。带 &lt;code&gt;count: 1&lt;/code&gt; 或不带参数将返回&amp;ldquo;客户&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="ce1ac48f704be117e0c440eeff8da490a84e2fdd" translate="yes" xml:space="preserve">
          <source>Then &lt;code&gt;User.model_name.human&lt;/code&gt; will return &quot;Customer&quot; and &lt;code&gt;User.human_attribute_name(&quot;login&quot;)&lt;/code&gt; will return &quot;Handle&quot;.</source>
          <target state="translated">然后， &lt;code&gt;User.model_name.human&lt;/code&gt; 将返回&amp;ldquo;客户&amp;rdquo;，而 &lt;code&gt;User.human_attribute_name(&quot;login&quot;)&lt;/code&gt; 将返回&amp;ldquo;句柄&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="a1dcc9b3170af9168677c16003802ad10b7a65fa" translate="yes" xml:space="preserve">
          <source>Then &lt;code&gt;parse_options&lt;/code&gt; is defined like this:</source>
          <target state="translated">然后， &lt;code&gt;parse_options&lt;/code&gt; 的定义如下：</target>
        </trans-unit>
        <trans-unit id="23a50ecef846d168f5924b2581ba4253e1d79ec9" translate="yes" xml:space="preserve">
          <source>Then Action View will look first in this directory when resolving views.</source>
          <target state="translated">那么Action View在解析视图的时候会先在这个目录下寻找。</target>
        </trans-unit>
        <trans-unit id="459d1a5ee37a5dfc347ac0b9db5a24592e3778ee" translate="yes" xml:space="preserve">
          <source>Then Active Record will look for messages in this order:</source>
          <target state="translated">然后Active Record会按照这个顺序寻找消息。</target>
        </trans-unit>
        <trans-unit id="3d4d27ddd244a8a4ebabec05bc03c56676658e3a" translate="yes" xml:space="preserve">
          <source>Then any written signed cookies will be digested with SHA256. Old cookies that were written with SHA1 can still be read, and if accessed will be written with the new digest so they're upgraded and won't be invalid when you remove the rotation.</source>
          <target state="translated">那么任何写好的签名cookie都会用SHA256消化。用SHA1写的旧Cookie仍然可以被读取,如果访问会用新的摘要来写,这样它们就升级了,不会在你删除轮换时失效。</target>
        </trans-unit>
        <trans-unit id="85e3645699a57b500a4fac14d2ba27a49c74a6f7" translate="yes" xml:space="preserve">
          <source>Then define a list of methods that you want callbacks attached to:</source>
          <target state="translated">然后定义一个你想要回调的方法列表。</target>
        </trans-unit>
        <trans-unit id="4f510685cd652852a1e3efa690ea6956f7bcdfdb" translate="yes" xml:space="preserve">
          <source>Then do the same for the &lt;code&gt;app/views/articles/edit.html.erb&lt;/code&gt; view:</source>
          <target state="translated">然后对 &lt;code&gt;app/views/articles/edit.html.erb&lt;/code&gt; 视图执行相同的操作：</target>
        </trans-unit>
        <trans-unit id="35dfdb159823060f46838dd038413c533e538e9c" translate="yes" xml:space="preserve">
          <source>Then ensure that this file is loaded at the top of your &lt;code&gt;config/application.rb&lt;/code&gt; (or in your &lt;code&gt;Gemfile&lt;/code&gt;) and it will automatically load models, controllers and helpers inside &lt;code&gt;app&lt;/code&gt;, load routes at &lt;code&gt;config/routes.rb&lt;/code&gt;, load locales at &lt;code&gt;config/locales/*&lt;/code&gt;, and load tasks at &lt;code&gt;lib/tasks/*&lt;/code&gt;.</source>
          <target state="translated">然后，确保该文件是在你的顶部加载 &lt;code&gt;config/application.rb&lt;/code&gt; （或在您 &lt;code&gt;Gemfile&lt;/code&gt; ），它会自动加载模型，控制器和内部助手 &lt;code&gt;app&lt;/code&gt; 的，负载的路由 &lt;code&gt;config/routes.rb&lt;/code&gt; ，负载区域设置在 &lt;code&gt;config/locales/*&lt;/code&gt; ，并在 &lt;code&gt;lib/tasks/*&lt;/code&gt; 加载任务。</target>
        </trans-unit>
        <trans-unit id="ce0a816131af5b4f10ba7dd68f10732047901d7d" translate="yes" xml:space="preserve">
          <source>Then gradually rotate the old values out by adding them as fallbacks. Any message generated with the old values will then work until the rotation is removed.</source>
          <target state="translated">然后通过添加旧值作为后备值,逐渐将其旋转出来。任何用旧值生成的消息都将发挥作用,直到旋转被移除。</target>
        </trans-unit>
        <trans-unit id="c25ba8a4f5f2e80428305d964bd1bf9df12698c9" translate="yes" xml:space="preserve">
          <source>Then in the view any form using &lt;code&gt;form_for&lt;/code&gt; will be an instance of the specified form builder:</source>
          <target state="translated">然后，在视图中，任何使用 &lt;code&gt;form_for&lt;/code&gt; 的表单都将是指定表单构建器的实例：</target>
        </trans-unit>
        <trans-unit id="e1a2120982b7267dfa978e50b64a59538c9064c3" translate="yes" xml:space="preserve">
          <source>Then in your class, you can use the &lt;code&gt;before_create&lt;/code&gt;, &lt;code&gt;after_create&lt;/code&gt; and &lt;code&gt;around_create&lt;/code&gt; methods, just as you would in an Active Record model.</source>
          <target state="translated">然后在你的类，你可以使用 &lt;code&gt;before_create&lt;/code&gt; ， &lt;code&gt;after_create&lt;/code&gt; 和 &lt;code&gt;around_create&lt;/code&gt; 方法，就像你在一个活动记录模式。</target>
        </trans-unit>
        <trans-unit id="aebe8891b52bd362b7f19f07d1a47dc194ca8c95" translate="yes" xml:space="preserve">
          <source>Then in your view, you can just reference &lt;code&gt;attachments&lt;/code&gt; as a hash and specify which attachment you want to show, calling &lt;code&gt;url&lt;/code&gt; on it and then passing the result into the &lt;code&gt;image_tag&lt;/code&gt; method:</source>
          <target state="translated">然后，在您的视图中，您可以将 &lt;code&gt;attachments&lt;/code&gt; 作为哈希引用，并指定要显示的附件，在其上调用 &lt;code&gt;url&lt;/code&gt; ，然后将结果传递给 &lt;code&gt;image_tag&lt;/code&gt; 方法：</target>
        </trans-unit>
        <trans-unit id="237fe237773a0ec739fb4cc8e5c87bcf8fa12ec0" translate="yes" xml:space="preserve">
          <source>Then make sure that all your job classes inherit from it.</source>
          <target state="translated">然后确保你所有的工作类都能继承它。</target>
        </trans-unit>
        <trans-unit id="4d121a9048cc21ad12c6bc9dfcf50d1c0c7ed200" translate="yes" xml:space="preserve">
          <source>Then make sure that all your models inherit from it.</source>
          <target state="translated">然后确保你所有的模型都能继承它。</target>
        </trans-unit>
        <trans-unit id="e9c05622c9e2375d881f99cefdba0de66f0a8aab" translate="yes" xml:space="preserve">
          <source>Then new join models are automatically created for the newly associated objects. If some that existed previously are now missing, then their join rows are automatically deleted.</source>
          <target state="translated">然后为新关联的对象自动创建新的连接模型。如果之前存在的一些对象现在不见了,那么它们的连接行就会被自动删除。</target>
        </trans-unit>
        <trans-unit id="8bb78d3088ec4a03fb4ba35f504b631634a22413" translate="yes" xml:space="preserve">
          <source>Then refer to this field in the form for the model:</source>
          <target state="translated">然后在表格中参考这个字段来做模型。</target>
        </trans-unit>
        <trans-unit id="01700a39e23b7ab78877badc25228c5133bf399d" translate="yes" xml:space="preserve">
          <source>Then run &lt;code&gt;bundle&lt;/code&gt; to install the gem.</source>
          <target state="translated">然后运行 &lt;code&gt;bundle&lt;/code&gt; 安装gem。</target>
        </trans-unit>
        <trans-unit id="3c797d8f24c8628794ae46f0798a2a8a395d237f" translate="yes" xml:space="preserve">
          <source>Then set up a mailbox:</source>
          <target state="translated">然后设置一个邮箱。</target>
        </trans-unit>
        <trans-unit id="b23cf8584845218e3a92147b3fe0ba5780c2bf36" translate="yes" xml:space="preserve">
          <source>Then that same purpose must be passed when verifying to get the data back out:</source>
          <target state="translated">那么在验证的时候也必须通过同样的目的,才能把数据拿回来。</target>
        </trans-unit>
        <trans-unit id="32681196fa4394258a9f0ddbaa6841d13623c56b" translate="yes" xml:space="preserve">
          <source>Then the &lt;code&gt;click_on &quot;New Article&quot;&lt;/code&gt; will find the &quot;New Article&quot; button on the index page. This will redirect the browser to &lt;code&gt;/articles/new&lt;/code&gt;.</source>
          <target state="translated">然后， &lt;code&gt;click_on &quot;New Article&quot;&lt;/code&gt; 将在索引页面上找到&amp;ldquo;新文章&amp;rdquo;按钮。这会将浏览器重定向到 &lt;code&gt;/articles/new&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c3adef20432b6b66fe2ce80984aa12cb32aa026a" translate="yes" xml:space="preserve">
          <source>Then the fun begins!</source>
          <target state="translated">然后,有趣的事情就开始了!</target>
        </trans-unit>
        <trans-unit id="62bc07d8aa975b0496a50ba872658d371c63aa06" translate="yes" xml:space="preserve">
          <source>Then the messages can be verified and returned up to the expire time. Thereafter, the &lt;code&gt;verified&lt;/code&gt; method returns &lt;code&gt;nil&lt;/code&gt; while &lt;code&gt;verify&lt;/code&gt; raises &lt;code&gt;ActiveSupport::MessageVerifier::InvalidSignature&lt;/code&gt;.</source>
          <target state="translated">然后可以验证消息并返回到到期时间。此后， &lt;code&gt;verified&lt;/code&gt; 方法返回 &lt;code&gt;nil&lt;/code&gt; ,而 &lt;code&gt;verify&lt;/code&gt; 引发 &lt;code&gt;ActiveSupport::MessageVerifier::InvalidSignature&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="13f7c19977b2cebec1e9a82e2e3042c127ffb695" translate="yes" xml:space="preserve">
          <source>Then the messages can be verified and returned up to the expire time. Thereafter, verifying returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">然后可以验证消息并返回到到期时间。此后，验证返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="37db38f09873e69b0d0d19b6cd96ccbb3c4b339b" translate="yes" xml:space="preserve">
          <source>Then the preview will be available in http://localhost:3000/rails/mailers/user_mailer/welcome_email.</source>
          <target state="translated">然后在http://localhost:3000/rails/mailers/user_mailer/welcome_email,就可以预览了。</target>
        </trans-unit>
        <trans-unit id="369ed4a7ad9c26f1140c7972a5560f133f03519c" translate="yes" xml:space="preserve">
          <source>Then the returned token is &lt;code&gt;&quot;abc&quot;&lt;/code&gt;, and the options are &lt;code&gt;{nonce: &quot;def&quot;}&lt;/code&gt;</source>
          <target state="translated">然后返回的令牌为 &lt;code&gt;&quot;abc&quot;&lt;/code&gt; ，选项为 &lt;code&gt;{nonce: &quot;def&quot;}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="366a0275143580828d7dd35a9ff6892eaaf5f9a4" translate="yes" xml:space="preserve">
          <source>Then the test will fill in the title and body of the article with the specified text. Once the fields are filled in, &quot;Create Article&quot; is clicked on which will send a POST request to create the new article in the database.</source>
          <target state="translated">然后测试会用指定的文字填写文章的标题和正文。字段填写完毕后,点击 &quot;创建文章&quot;,将发送一个POST请求,在数据库中创建新的文章。</target>
        </trans-unit>
        <trans-unit id="10a63abca550fb5d05522c45d27747f0e9db193b" translate="yes" xml:space="preserve">
          <source>Then the view, to display our message (in &lt;code&gt;app/views/greetings/hello.html.erb&lt;/code&gt;):</source>
          <target state="translated">然后是视图，以显示我们的消息（在 &lt;code&gt;app/views/greetings/hello.html.erb&lt;/code&gt; 中）：</target>
        </trans-unit>
        <trans-unit id="ddfd5408dd5dd26d25099c7e83d85cdbe7fac7a2" translate="yes" xml:space="preserve">
          <source>Then we need to update &lt;code&gt;ApplicationRecord&lt;/code&gt; to be aware of our new replica.</source>
          <target state="translated">然后，我们需要更新 &lt;code&gt;ApplicationRecord&lt;/code&gt; 以了解我们的新副本。</target>
        </trans-unit>
        <trans-unit id="098660123aac14d41b15d67b877d80ee14982a13" translate="yes" xml:space="preserve">
          <source>Then you can add an automatic nonce value by passing &lt;code&gt;nonce: true&lt;/code&gt; as part of &lt;code&gt;html_options&lt;/code&gt;. Example:</source>
          <target state="translated">然后，您可以通过将 &lt;code&gt;nonce: true&lt;/code&gt; 作为 &lt;code&gt;html_options&lt;/code&gt; 的一部分传递来添加自动的nonce值。例：</target>
        </trans-unit>
        <trans-unit id="0d37c70958344a9839a6342d4c9fc86d22db17b4" translate="yes" xml:space="preserve">
          <source>Then you can change &lt;code&gt;app/views/articles/show.html.erb&lt;/code&gt; to look like the following:</source>
          <target state="translated">然后，您可以将 &lt;code&gt;app/views/articles/show.html.erb&lt;/code&gt; 更改为如下所示：</target>
        </trans-unit>
        <trans-unit id="1f03061ab10bf02c25498814f574e5e40f393c87" translate="yes" xml:space="preserve">
          <source>Then you could create special views like &lt;code&gt;app/views/articles/show.expert.html.erb&lt;/code&gt; that would only be displayed to expert users.</source>
          <target state="translated">然后，您可以创建仅显示给专家用户的特殊视图，例如 &lt;code&gt;app/views/articles/show.expert.html.erb&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="496beabd3e4e458cf277bd0998b3a81e387ea7cd" translate="yes" xml:space="preserve">
          <source>Then you could do:</source>
          <target state="translated">那么你可以做。</target>
        </trans-unit>
        <trans-unit id="9063c5f74d1b74e7ea62cc04b8a5984d7224827c" translate="yes" xml:space="preserve">
          <source>Then you make the &lt;code&gt;app/views/articles/show.html.erb&lt;/code&gt; look like the following:</source>
          <target state="translated">然后，使 &lt;code&gt;app/views/articles/show.html.erb&lt;/code&gt; 如下所示：</target>
        </trans-unit>
        <trans-unit id="0ca1e0676acb4662d0e6ee4f9143d236d7763d5d" translate="yes" xml:space="preserve">
          <source>Then you start the server using a binstub in &lt;code&gt;bin/cable&lt;/code&gt; ala:</source>
          <target state="translated">然后，使用 &lt;code&gt;bin/cable&lt;/code&gt; ala中的binstub启动服务器：</target>
        </trans-unit>
        <trans-unit id="87783a1bba48c17b1a2f3223b471f53bb6f44608" translate="yes" xml:space="preserve">
          <source>Then you would create your own channel classes. For example, you could have a &lt;code&gt;ChatChannel&lt;/code&gt; and an &lt;code&gt;AppearanceChannel&lt;/code&gt;:</source>
          <target state="translated">然后，您将创建自己的频道类。例如，您可能有一个 &lt;code&gt;ChatChannel&lt;/code&gt; 和 &lt;code&gt;AppearanceChannel&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="5b8b29d981a70edce615391b418603f900f0fc23" translate="yes" xml:space="preserve">
          <source>Then your library can be eager loaded by simply calling:</source>
          <target state="translated">然后你的库可以通过简单的调用来急切地加载。</target>
        </trans-unit>
        <trans-unit id="e48472de2f53d5ecda6546f6dd9503f542948c68" translate="yes" xml:space="preserve">
          <source>Then, if you want webrat to be invoked, just supply:</source>
          <target state="translated">然后,如果你想让webrat被调用,只要提供。</target>
        </trans-unit>
        <trans-unit id="70a620085ffad4cda58d1cc705b7621b4c3d6b03" translate="yes" xml:space="preserve">
          <source>Then, in another template or layout, this code would render both links in order:</source>
          <target state="translated">然后,在另一个模板或布局中,这段代码将按顺序呈现两个链接。</target>
        </trans-unit>
        <trans-unit id="1ee33242fa8dc35c52b38b93dd261d062e831523" translate="yes" xml:space="preserve">
          <source>Then, in another template or layout, this code would render only the last link:</source>
          <target state="translated">然后,在另一个模板或布局中,这段代码将只呈现最后一个链接。</target>
        </trans-unit>
        <trans-unit id="c02759babbfbed3b2ce9248b83250e3d9c6e304d" translate="yes" xml:space="preserve">
          <source>Then, in another view, you could to do something like this:</source>
          <target state="translated">然后,在另一个角度,你可以做这样的事情。</target>
        </trans-unit>
        <trans-unit id="2428dd5467214a1330f0142642a33f223e8adb27" translate="yes" xml:space="preserve">
          <source>Then, in any view rendered by &lt;code&gt;EventsController&lt;/code&gt;, the &lt;code&gt;format_time&lt;/code&gt; method can be called:</source>
          <target state="translated">然后，在 &lt;code&gt;EventsController&lt;/code&gt; 呈现的任何视图中，可以调用 &lt;code&gt;format_time&lt;/code&gt; 方法：</target>
        </trans-unit>
        <trans-unit id="6ab1405302d62c1ecddf63d2dc2d85296feb34ca" translate="yes" xml:space="preserve">
          <source>Then, in your application's configuration, you can specify the service to use like this:</source>
          <target state="translated">然后,在你的应用程序的配置中,你可以像这样指定要使用的服务。</target>
        </trans-unit>
        <trans-unit id="57185357f15f4a8fb2cd8be83b26417c031c473e" translate="yes" xml:space="preserve">
          <source>Then, one asserts whether the current state is as expected. &amp;ldquo;State&amp;rdquo; can be anything: the controller's HTTP response, the database contents, etc.</source>
          <target state="translated">然后，断言当前状态是否符合预期。&amp;ldquo;状态&amp;rdquo;可以是任何内容：控制器的HTTP响应，数据库内容等。</target>
        </trans-unit>
        <trans-unit id="482ca65ca763b7b0baddca14580910c2d6413532" translate="yes" xml:space="preserve">
          <source>Then, one asserts whether the current state is as expected. &amp;ldquo;State&amp;rdquo; can be anything: transmitted messages, subscribed streams, etc.</source>
          <target state="translated">然后，断言当前状态是否符合预期。&amp;ldquo;状态&amp;rdquo;可以是任何内容：传输的消息，订阅的流等。</target>
        </trans-unit>
        <trans-unit id="031870965fb348d4c11e251e9555a1156c075b8c" translate="yes" xml:space="preserve">
          <source>There also may be a case where you have a database that you don't always want to connect to on application boot but may need for a slow query or analytics. After defining that database in the &lt;code&gt;database.yml&lt;/code&gt; you can connect by passing a database argument to &lt;code&gt;connected_to&lt;/code&gt;</source>
          <target state="translated">在某些情况下，您可能并不总是希望在应用程序启动时连接到数据库，但可能需要进行缓慢的查询或分析。在定义该数据库后 &lt;code&gt;database.yml&lt;/code&gt; 你可以通过数据库参数连接 &lt;code&gt;connected_to&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3bb2b87b49ad713bc9166e86cd1da2325e0969a0" translate="yes" xml:space="preserve">
          <source>There are &lt;code&gt;public&lt;/code&gt;, &lt;code&gt;private&lt;/code&gt; and &lt;code&gt;protected&lt;/code&gt; methods in Ruby, but only &lt;code&gt;public&lt;/code&gt; methods can be actions for controllers. For more details check out &lt;a href=&quot;http://www.ruby-doc.org/docs/ProgrammingRuby/&quot;&gt;Programming Ruby&lt;/a&gt;.</source>
          <target state="translated">Ruby中有 &lt;code&gt;public&lt;/code&gt; ， &lt;code&gt;private&lt;/code&gt; 和 &lt;code&gt;protected&lt;/code&gt; 方法，但是只有 &lt;code&gt;public&lt;/code&gt; 方法才可以成为控制器的操作。有关更多详细信息，请查看&lt;a href=&quot;http://www.ruby-doc.org/docs/ProgrammingRuby/&quot;&gt;Ruby编程&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="19b00caa5f3ff7b3b669683c7dea0b0d4f09835e" translate="yes" xml:space="preserve">
          <source>There are Valgrind tools that can automatically detect many memory management and threading bugs, and profile your programs in detail. For example, if a C extension in the interpreter calls &lt;code&gt;malloc()&lt;/code&gt; but doesn't properly call &lt;code&gt;free()&lt;/code&gt;, this memory won't be available until the app terminates.</source>
          <target state="translated">有Valgrind工具可以自动检测许多内存管理和线程错误，并详细描述程序。例如，如果解释器中的C扩展调用 &lt;code&gt;malloc()&lt;/code&gt; 但未正确调用 &lt;code&gt;free()&lt;/code&gt; ，则在应用终止之前，该内存将不可用。</target>
        </trans-unit>
        <trans-unit id="9b00b3df83e32e888bc604425fec394ee693ccd7" translate="yes" xml:space="preserve">
          <source>There are a couple of new configuration settings that you should add to your development environment:</source>
          <target state="translated">有几个新的配置设置,你应该添加到你的开发环境中。</target>
        </trans-unit>
        <trans-unit id="164be5c17020dc109dc9be858a8e3b603db5fe38" translate="yes" xml:space="preserve">
          <source>There are a couple of things to notice in the above example. We need to make sure to close the response stream. Forgetting to close the stream will leave the socket open forever. We also have to set the content type to &lt;code&gt;text/event-stream&lt;/code&gt; before we write to the response stream. This is because headers cannot be written after the response has been committed (when &lt;code&gt;response.committed?&lt;/code&gt; returns a truthy value), which occurs when you &lt;code&gt;write&lt;/code&gt; or &lt;code&gt;commit&lt;/code&gt; the response stream.</source>
          <target state="translated">上面的示例中有两点需要注意。我们需要确保关闭响应流。忘记关闭流将使套接字永远打开。在写入响应流之前，我们还必须将内容类型设置为 &lt;code&gt;text/event-stream&lt;/code&gt; stream。这是因为在提交 &lt;code&gt;response.committed?&lt;/code&gt; （当response.committed？返回真实值）后无法写入标头，这是在 &lt;code&gt;write&lt;/code&gt; 或 &lt;code&gt;commit&lt;/code&gt; 响应流时发生的。</target>
        </trans-unit>
        <trans-unit id="0c768baf5fd448c75d1de2436abdaa5e34da7465" translate="yes" xml:space="preserve">
          <source>There are a few caveats with this module. You &lt;strong&gt;cannot&lt;/strong&gt; write headers after the response has been committed (Response#committed? will return truthy). Calling &lt;code&gt;write&lt;/code&gt; or &lt;code&gt;close&lt;/code&gt; on the response stream will cause the response object to be committed. Make sure all headers are set before calling write or close on your stream.</source>
          <target state="translated">此模块有一些警告。提交响应后，您&lt;strong&gt;将无法&lt;/strong&gt;编写标头（Response＃committed？将返回true）。在响应流上调用 &lt;code&gt;write&lt;/code&gt; 或 &lt;code&gt;close&lt;/code&gt; 将导致响应对象被提交。在流上调用write或close之前，请确保已设置所有标头。</target>
        </trans-unit>
        <trans-unit id="4bad24b22c7cae4c6a61de5d3108af1db11f82d6" translate="yes" xml:space="preserve">
          <source>There are a few commands that are absolutely critical to your everyday usage of Rails. In the order of how much you'll probably use them are:</source>
          <target state="translated">有几个命令对你日常使用Rails是绝对重要的。按照你可能会用到的程度,它们的顺序是。</target>
        </trans-unit>
        <trans-unit id="e56663a6abdb097299bc4197150b89e3d7d69945" translate="yes" xml:space="preserve">
          <source>There are a few configuration options available in Active Support:</source>
          <target state="translated">在Active Support中有一些配置选项。</target>
        </trans-unit>
        <trans-unit id="e637e4147c84d8dceeb2b213377ec66714ac9891" translate="yes" xml:space="preserve">
          <source>There are a few major changes related to JSON handling in Rails 4.1.</source>
          <target state="translated">在Rails 4.1中,有一些与JSON处理有关的重大变化。</target>
        </trans-unit>
        <trans-unit id="c564b1ac7e5320df2899d4761623e9c54d1bfc41" translate="yes" xml:space="preserve">
          <source>There are a few special &lt;code&gt;html_options&lt;/code&gt;:</source>
          <target state="translated">有一些特殊的 &lt;code&gt;html_options&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="09097833af7a7785ff0289cc3e4cd9f30ec67ede" translate="yes" xml:space="preserve">
          <source>There are a few steps to get up and running with I18n support for a Rails application.</source>
          <target state="translated">有几个步骤可以让Rails应用程序支持I18n并开始运行。</target>
        </trans-unit>
        <trans-unit id="d785783338230f3b87db04ee80e1a01039e7eb28" translate="yes" xml:space="preserve">
          <source>There are a few things to note here:</source>
          <target state="translated">这里有几点需要注意。</target>
        </trans-unit>
        <trans-unit id="a7ec542f6e00c4c48c1cc756a5abf11aceb10d86" translate="yes" xml:space="preserve">
          <source>There are a number of authentication plug-ins for Rails available. Good ones, such as the popular &lt;a href=&quot;https://github.com/plataformatec/devise&quot;&gt;devise&lt;/a&gt; and &lt;a href=&quot;https://github.com/binarylogic/authlogic&quot;&gt;authlogic&lt;/a&gt;, store only encrypted passwords, not plain-text passwords. In Rails 3.1 you can use the built-in &lt;code&gt;has_secure_password&lt;/code&gt; method which has similar features.</source>
          <target state="translated">有许多Rails的身份验证插件可用。好的密码（例如流行的&lt;a href=&quot;https://github.com/plataformatec/devise&quot;&gt;dev&lt;/a&gt;和&lt;a href=&quot;https://github.com/binarylogic/authlogic&quot;&gt;authlogic&lt;/a&gt;）仅存储加密的密码，而不存储纯文本密码。在Rails 3.1中，可以使用具有类似功能的内置 &lt;code&gt;has_secure_password&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="9e915227e133b452b09ab70d569af6da2645774d" translate="yes" xml:space="preserve">
          <source>There are a number of settings available on &lt;code&gt;config.action_mailer&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;config.action_mailer&lt;/code&gt; 上有许多可用的设置：</target>
        </trans-unit>
        <trans-unit id="dd7c127858d5bd0036433e51e9a1318a30cbc05b" translate="yes" xml:space="preserve">
          <source>There are also attribute readers and writers for the following attributes:</source>
          <target state="translated">以下属性也有属性读者和作者。</target>
        </trans-unit>
        <trans-unit id="6ab98ce79b9f7ae2b050438c168ded2c086027fb" translate="yes" xml:space="preserve">
          <source>There are also some optional column names that will add additional features to Active Record instances:</source>
          <target state="translated">还有一些可选的列名,将为Active Record实例添加额外的功能。</target>
        </trans-unit>
        <trans-unit id="9a3b4a5facffc66d580f52bd37aca25d75f46c3f" translate="yes" xml:space="preserve">
          <source>There are also three special methods available: &lt;code&gt;object&lt;/code&gt;, &lt;code&gt;text&lt;/code&gt; and &lt;code&gt;value&lt;/code&gt;, which are the current item being rendered, its text and value methods, respectively. You can use them like this:</source>
          <target state="translated">还有三种可用的特殊方法： &lt;code&gt;object&lt;/code&gt; ， &lt;code&gt;text&lt;/code&gt; 和 &lt;code&gt;value&lt;/code&gt; ，它们是正在渲染的当前项目，分别是其text和value方法。您可以像这样使用它们：</target>
        </trans-unit>
        <trans-unit id="e9328ff730efb351cb7c68f93646e3e43677d947" translate="yes" xml:space="preserve">
          <source>There are cases where you need to define a method with &lt;code&gt;define_method&lt;/code&gt;, but don't know whether a method with that name already exists. If it does, a warning is issued if they are enabled. No big deal, but not clean either.</source>
          <target state="translated">在某些情况下，您需要使用 &lt;code&gt;define_method&lt;/code&gt; 定义一个方法，但是不知道该名称的方法是否已经存在。如果已启用，则启用警告。没什么大不了的，但也不干净。</target>
        </trans-unit>
        <trans-unit id="029bc6ef9eb6398dbbb511125f106e1c755e2fa6" translate="yes" xml:space="preserve">
          <source>There are certain queries that can't run inside a transaction. If your adapter supports DDL transactions you can use &lt;code&gt;disable_ddl_transaction!&lt;/code&gt; to disable them for a single migration.</source>
          <target state="translated">某些查询不能在事务内运行。如果您的适配器支持DDL事务，则可以使用 &lt;code&gt;disable_ddl_transaction!&lt;/code&gt; 为一次迁移禁用它们。</target>
        </trans-unit>
        <trans-unit id="be7e376f41a66410dfe8064842fb23c80123304f" translate="yes" xml:space="preserve">
          <source>There are four types of callbacks accepted by the callback macros: &lt;a href=&quot;../method&quot;&gt;Method&lt;/a&gt; references (symbol), callback objects, inline methods (using a proc). &lt;a href=&quot;../method&quot;&gt;Method&lt;/a&gt; references and callback objects are the recommended approaches, inline methods using a proc are sometimes appropriate (such as for creating mix-ins).</source>
          <target state="translated">回调宏接受四种类型的回调：&lt;a href=&quot;../method&quot;&gt;方法&lt;/a&gt;引用（符号），回调对象，内联方法（使用proc）。推荐使用&lt;a href=&quot;../method&quot;&gt;方法&lt;/a&gt;引用和回调对象，有时使用proc的内联方法是合适的（例如用于创建混入）。</target>
        </trans-unit>
        <trans-unit id="c3c560843f70069524c11e393bc20f191103e246" translate="yes" xml:space="preserve">
          <source>There are just three methods that you need to send pretty much any email message:</source>
          <target state="translated">只有三种方法,你需要发送几乎所有的电子邮件信息。</target>
        </trans-unit>
        <trans-unit id="6c03497c42b565308fa509564379e1b6c94969d2" translate="yes" xml:space="preserve">
          <source>There are many other possibilities, like using a &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tag to make a cross-site request to a URL with a JSONP or JavaScript response. The response is executable code that the attacker can find a way to run, possibly extracting sensitive data. To protect against this data leakage, we must disallow cross-site &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tags. Ajax requests, however, obey the browser's same-origin policy (only your own site is allowed to initiate &lt;code&gt;XmlHttpRequest&lt;/code&gt;) so we can safely allow them to return JavaScript responses.</source>
          <target state="translated">还有许多其他可能性，例如使用 &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; 标记通过JSONP或JavaScript响应对URL进行跨站点请求。响应是可执行代码，攻击者可以找到一种运行方式，可能会提取敏感数据。为了防止这种数据泄漏，我们必须禁止跨站点 &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; 标记。但是，Ajax请求遵循浏览器的同源策略（仅允许您自己的站点启动 &lt;code&gt;XmlHttpRequest&lt;/code&gt; ），因此我们可以放心地允许它们返回JavaScript响应。</target>
        </trans-unit>
        <trans-unit id="6fdedcb9b572bfe35fee43800e0ce6d8a996a6eb" translate="yes" xml:space="preserve">
          <source>There are many ways to change the state of an object in the database. Some methods will trigger validations, but some will not. This means that it's possible to save an object in the database in an invalid state if you aren't careful.</source>
          <target state="translated">有很多方法可以改变数据库中对象的状态。有些方法会触发验证,但有些不会。这意味着,如果你不小心的话,有可能将数据库中的对象保存为无效状态。</target>
        </trans-unit>
        <trans-unit id="be3d1d3662c8729fe79089273eee95478741ca7c" translate="yes" xml:space="preserve">
          <source>There are more assertions that are primarily used in testing views:</source>
          <target state="translated">主要用于测试视图的论断比较多。</target>
        </trans-unit>
        <trans-unit id="1807ce7145d108f1d111bf9da906ad3f26500e7c" translate="yes" xml:space="preserve">
          <source>There are multiple ways to use the &lt;code&gt;joins&lt;/code&gt; method.</source>
          <target state="translated">有多种使用 &lt;code&gt;joins&lt;/code&gt; 方法的方法。</target>
        </trans-unit>
        <trans-unit id="6d2fd0d7d839d4055f6084f32e67d508fe996a9f" translate="yes" xml:space="preserve">
          <source>There are nineteen callbacks in total, which give you immense power to react and prepare for each state in the Active Record life cycle. The sequence for calling &lt;a href=&quot;persistence#method-i-save&quot;&gt;ActiveRecord::Base#save&lt;/a&gt; for an existing record is similar, except that each &lt;code&gt;_create&lt;/code&gt; callback is replaced by the corresponding &lt;code&gt;_update&lt;/code&gt; callback.</source>
          <target state="translated">总共有19个回调，它们使您有很大的能力做出反应并为Active Record生命周期中的每个状态做好准备。为现有记录调用&lt;a href=&quot;persistence#method-i-save&quot;&gt;ActiveRecord :: Base＃save&lt;/a&gt;的顺序是相似的，只是每个 &lt;code&gt;_create&lt;/code&gt; 回调都由相应的 &lt;code&gt;_update&lt;/code&gt; 回调代替。</target>
        </trans-unit>
        <trans-unit id="60676983eb349d9e47dfbfa92f1781e6b9e4aa75" translate="yes" xml:space="preserve">
          <source>There are no columns defined on the model side, Active Storage takes care of the mapping between your records and the attachments.</source>
          <target state="translated">在模型侧没有定义列,Active Storage负责您的记录和附件之间的映射。</target>
        </trans-unit>
        <trans-unit id="df256418346b53d1574fb832c21a0cf0b180a492" translate="yes" xml:space="preserve">
          <source>There are now no strict dependencies on what the class is, only what the API for the class must be. The engine simply requires this class to define a &lt;code&gt;find_or_create_by&lt;/code&gt; method which returns an object of that class, to be associated with an article when it's created. This object, of course, should have some sort of identifier by which it can be referenced.</source>
          <target state="translated">现在，对于类是什么，没有严格的依赖关系，只有类的API必须是什么。引擎仅要求该类定义一个 &lt;code&gt;find_or_create_by&lt;/code&gt; 方法，该方法将返回该类的对象，并在创建该对象时将其与该文章相关联。当然，该对象应该具有某种可以用来引用它的标识符。</target>
        </trans-unit>
        <trans-unit id="ce0a39ba9b7cf48f4c6055538e9adba40239a005" translate="yes" xml:space="preserve">
          <source>There are several connection-pooling-related options that you can add to your database connection configuration:</source>
          <target state="translated">有几个连接池相关的选项可以添加到你的数据库连接配置中。</target>
        </trans-unit>
        <trans-unit id="9d0cadb28de56ba0c481802976db1808b725da35" translate="yes" xml:space="preserve">
          <source>There are several drawbacks to &lt;a href=&quot;relation#method-i-create_or_find_by&quot;&gt;create_or_find_by&lt;/a&gt;, though:</source>
          <target state="translated">不过&lt;a href=&quot;relation#method-i-create_or_find_by&quot;&gt;create_or_find_by&lt;/a&gt;有几个缺点：</target>
        </trans-unit>
        <trans-unit id="f5f6274648b333846f41816feb18e009ef513ce0" translate="yes" xml:space="preserve">
          <source>There are several other ways to validate data before it is saved into your database, including native database constraints, client-side validations and controller-level validations. Here's a summary of the pros and cons:</source>
          <target state="translated">在将数据保存到数据库之前,还有其他几种方法来验证数据,包括本地数据库约束、客户端验证和控制器级验证。下面是优缺点的总结。</target>
        </trans-unit>
        <trans-unit id="a69c97218c629d30b6c90b8aa47cb72f59eb27cb" translate="yes" xml:space="preserve">
          <source>There are several reasons why you might want to precompile your assets locally. Among them are:</source>
          <target state="translated">您可能想在本地预编译您的资产有几个原因。这些原因包括:</target>
        </trans-unit>
        <trans-unit id="f6dd344381ca41fca48a944fef01bf54b6f098f4" translate="yes" xml:space="preserve">
          <source>There are several ways of getting similar results with different sub-templating schemes using this technique. Note that there is no limit in nesting levels. One can use the &lt;code&gt;ActionView::render&lt;/code&gt; method via &lt;code&gt;render template: 'layouts/news'&lt;/code&gt; to base a new layout on the News layout. If you are sure you will not subtemplate the &lt;code&gt;News&lt;/code&gt; layout, you can replace the &lt;code&gt;content_for?(:news_content) ? yield(:news_content) : yield&lt;/code&gt; with simply &lt;code&gt;yield&lt;/code&gt;.</source>
          <target state="translated">使用这种技术，有几种方法可以通过不同的子模板方案获得相似的结果。请注意，嵌套级别没有限制。可以通过 &lt;code&gt;render template: 'layouts/news'&lt;/code&gt; 使用 &lt;code&gt;ActionView::render&lt;/code&gt; 方法将新布局作为&amp;ldquo;新闻&amp;rdquo;布局的基础。如果确定您不会将&amp;ldquo; &lt;code&gt;News&lt;/code&gt; 布局作为子 &lt;code&gt;content_for?(:news_content) ? yield(:news_content) : yield&lt;/code&gt; ，则可以替换content_for？（：news_content）？yield（：news_content）：仅包含 &lt;code&gt;yield&lt;/code&gt; 的。</target>
        </trans-unit>
        <trans-unit id="eaecf0b4d2e44c25af3b3721a0250e08a8cd2eee" translate="yes" xml:space="preserve">
          <source>There are some Rails plugins to help you to find errors and debug your application. Here is a list of useful plugins for debugging:</source>
          <target state="translated">有一些Rails插件可以帮助你发现错误并调试你的应用程序。下面是一个有用的调试插件列表。</target>
        </trans-unit>
        <trans-unit id="3504c265baaaac9aa5bf497840b330969a940f12" translate="yes" xml:space="preserve">
          <source>There are some cases where you may want your application to connect to a primary or a replica and the automatic connection switching isn't adequate. For example, you may know that for a particular request you always want to send the request to a replica, even when you are in a POST request path.</source>
          <target state="translated">在某些情况下,您可能希望您的应用程序连接到主服务器或副本,而自动连接切换并不充分。例如,你可能知道,对于一个特定的请求,你总是希望将请求发送到副本,即使你是在POST请求路径中。</target>
        </trans-unit>
        <trans-unit id="dcb72f26c9dfff3c7688908dbc5a105968528743" translate="yes" xml:space="preserve">
          <source>There are some common options that can be used by all cache implementations. These can be passed to the constructor or the various methods to interact with entries.</source>
          <target state="translated">有一些常见的选项可以被所有的缓存实现使用。这些选项可以传递给构造函数或各种方法来与条目交互。</target>
        </trans-unit>
        <trans-unit id="2325217393bb4e236ec11a3514d7759e8a18cf18" translate="yes" xml:space="preserve">
          <source>There are some examples below. This guide won't cover all the possibilities, just a few as examples. When an Active Record method is called, the query is not immediately generated and sent to the database, this just happens when the data is actually needed. So each example below generates a single query.</source>
          <target state="translated">下面有一些例子。本指南不会涵盖所有的可能性,只是举几个例子。当调用Active Record方法时,查询并不会立即生成并发送到数据库,这只是发生在实际需要数据的时候。所以下面每个例子都会生成一个查询。</target>
        </trans-unit>
        <trans-unit id="f44c42117c2e27fc38b3118894601990c020d261" translate="yes" xml:space="preserve">
          <source>There are some more advanced features available even if the id is specified:</source>
          <target state="translated">即使指定了id,也有一些更高级的功能。</target>
        </trans-unit>
        <trans-unit id="14faa76835e014a527d5b1b7b1bb9d3a6e93a8d7" translate="yes" xml:space="preserve">
          <source>There are some places where an Engine's name is used:</source>
          <target state="translated">有一些地方使用Engine的名字。</target>
        </trans-unit>
        <trans-unit id="27a508a465b22ff0965c167edd7ee17a8164704a" translate="yes" xml:space="preserve">
          <source>There are some situations where your engine's assets are not required by the host application. For example, say that you've created an admin functionality that only exists for your engine. In this case, the host application doesn't need to require &lt;code&gt;admin.css&lt;/code&gt; or &lt;code&gt;admin.js&lt;/code&gt;. Only the gem's admin layout needs these assets. It doesn't make sense for the host app to include &lt;code&gt;&quot;blorgh/admin.css&quot;&lt;/code&gt; in its stylesheets. In this situation, you should explicitly define these assets for precompilation. This tells Sprockets to add your engine assets when &lt;code&gt;rails assets:precompile&lt;/code&gt; is triggered.</source>
          <target state="translated">在某些情况下，主机应用程序不需要引擎的资产。例如，假设您已经创建了仅对引擎存在的管理功能。在这种情况下，主机应用程序不需要 &lt;code&gt;admin.css&lt;/code&gt; 或 &lt;code&gt;admin.js&lt;/code&gt; 。只有gem的管理员布局需要这些资产。对于主机应用程序，在其样式表中包含 &lt;code&gt;&quot;blorgh/admin.css&quot;&lt;/code&gt; 是没有意义的。在这种情况下，您应明确定义这些资产以进行预编译。这告诉Sprockets在触发 &lt;code&gt;rails assets:precompile&lt;/code&gt; 时添加您的引擎资产。</target>
        </trans-unit>
        <trans-unit id="eafc5e31bbabf67fe699f3bf8db1b952c9f7fdb7" translate="yes" xml:space="preserve">
          <source>There are three caveats:</source>
          <target state="translated">有三个注意事项。</target>
        </trans-unit>
        <trans-unit id="e188cdad09cfb6d1d34ff6a8e5ddae318e8c144e" translate="yes" xml:space="preserve">
          <source>There are three tag options available for the &lt;code&gt;auto_discovery_link_tag&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;auto_discovery_link_tag&lt;/code&gt; 提供三个标签选项：</target>
        </trans-unit>
        <trans-unit id="22616ec1cb1b82bc502e98a842309397e39db66a" translate="yes" xml:space="preserve">
          <source>There are times, however, in which you want to make sure a certain constant is known when the execution reaches some code. &lt;code&gt;require_dependency&lt;/code&gt; provides a way to load a file using the current &lt;a href=&quot;#loading-mechanism&quot;&gt;loading mechanism&lt;/a&gt;, and keeping track of constants defined in that file as if they were autoloaded to have them reloaded as needed.</source>
          <target state="translated">但是，有时您需要确保在执行到达某些代码时知道某个常数。 &lt;code&gt;require_dependency&lt;/code&gt; 提供了一种使用当前&lt;a href=&quot;#loading-mechanism&quot;&gt;加载机制&lt;/a&gt;加载文件的方式，并跟踪该文件中定义的常量，就好像它们是自动加载的一样，可以根据需要重新加载它们。</target>
        </trans-unit>
        <trans-unit id="c3ed8e7e59b27e9304399311f3fe5faab63bd90b" translate="yes" xml:space="preserve">
          <source>There are two additional callbacks that are triggered by the completion of a database transaction: &lt;code&gt;after_commit&lt;/code&gt; and &lt;code&gt;after_rollback&lt;/code&gt;. These callbacks are very similar to the &lt;code&gt;after_save&lt;/code&gt; callback except that they don't execute until after database changes have either been committed or rolled back. They are most useful when your active record models need to interact with external systems which are not part of the database transaction.</source>
          <target state="translated">数据库事务完成触发了另外两个回调： &lt;code&gt;after_commit&lt;/code&gt; 和 &lt;code&gt;after_rollback&lt;/code&gt; 。这些回调与 &lt;code&gt;after_save&lt;/code&gt; 回调非常相似，除了它们在提交或回滚数据库更改之后才执行。当您的活动记录模型需要与不属于数据库事务的外部系统交互时，它们最有用。</target>
        </trans-unit>
        <trans-unit id="ebec656902b77e7e217ac4c0f7cc86f86eb27a9d" translate="yes" xml:space="preserve">
          <source>There are two aspects of testing your mailer, the unit tests and the functional tests. In the unit tests, you run the mailer in isolation with tightly controlled inputs and compare the output to a known value (a fixture.) In the functional tests you don't so much test the minute details produced by the mailer; instead, we test that our controllers and models are using the mailer in the right way. You test to prove that the right email was sent at the right time.</source>
          <target state="translated">测试您的邮件有两个方面,单元测试和功能测试。在单元测试中,你用严格控制的输入隔离运行邮件,并将输出与一个已知的值(一个夹具)进行比较。在功能测试中,你不需要测试邮件产生的微小细节;相反,我们测试我们的控制器和模型是否以正确的方式使用邮件。你测试证明在正确的时间发送了正确的邮件。</target>
        </trans-unit>
        <trans-unit id="21ab6495877059c526b8c930367d1a5ed97661b6" translate="yes" xml:space="preserve">
          <source>There are two basic forms of output:</source>
          <target state="translated">有两种基本的输出形式。</target>
        </trans-unit>
        <trans-unit id="3908d57e19af4589dfaef7f9b86ed3ee6e3d3338" translate="yes" xml:space="preserve">
          <source>There are two forms of &lt;code&gt;assert_select&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;assert_select&lt;/code&gt; 有两种形式：</target>
        </trans-unit>
        <trans-unit id="21763745a45506727a5852b2909e7957b19bc082" translate="yes" xml:space="preserve">
          <source>There are two kinds of Active Record objects: those that correspond to a row inside your database and those that do not. When you create a fresh object, for example using the &lt;code&gt;new&lt;/code&gt; method, that object does not belong to the database yet. Once you call &lt;code&gt;save&lt;/code&gt; upon that object it will be saved into the appropriate database table. Active Record uses the &lt;code&gt;new_record?&lt;/code&gt; instance method to determine whether an object is already in the database or not. Consider the following simple Active Record class:</source>
          <target state="translated">Active Record对象有两种：与数据库中的一行相对应的对象和与数据库中不对应的对象。当您创建一个新对象时，例如使用 &lt;code&gt;new&lt;/code&gt; 方法，该对象尚不属于数据库。一旦调用该对象的 &lt;code&gt;save&lt;/code&gt; ，它将被保存到适当的数据库表中。活动记录使用 &lt;code&gt;new_record?&lt;/code&gt; 确定对象是否已在数据库中的实例方法。考虑以下简单的Active Record类：</target>
        </trans-unit>
        <trans-unit id="fefc70cada4f4163764455cd1803175c7cf08d52" translate="yes" xml:space="preserve">
          <source>There are two possible formats for the &lt;code&gt;choices&lt;/code&gt; parameter, corresponding to other helpers' output:</source>
          <target state="translated">&lt;code&gt;choices&lt;/code&gt; 参数有两种可能的格式，与其他助手的输出相对应：</target>
        </trans-unit>
        <trans-unit id="0cc91023998bdb1d2e4f422cbca40e4f89e8b1ae" translate="yes" xml:space="preserve">
          <source>There are two possible gotchas here in development mode:</source>
          <target state="translated">在开发模式下,这里有两个可能的陷阱。</target>
        </trans-unit>
        <trans-unit id="f5e43c596f90a95651acd56ed24b8ccadf92e3b4" translate="yes" xml:space="preserve">
          <source>There are two strings in our code that are in English and that users will be rendered in our response (&quot;Hello Flash&quot; and &quot;Hello World&quot;). In order to internationalize this code, these strings need to be replaced by calls to Rails' &lt;code&gt;#t&lt;/code&gt; helper with an appropriate key for each string:</source>
          <target state="translated">我们的代码中有两个英文字符串，用户将在我们的响应中呈现（&amp;ldquo; Hello Flash&amp;rdquo;和&amp;ldquo; Hello World&amp;rdquo;）。为了使此代码国际化，这些字符串需要替换为对Rails的 &lt;code&gt;#t&lt;/code&gt; helper 的调用，并为每个字符串使用适当的键：</target>
        </trans-unit>
        <trans-unit id="0406ff92458bec18fa3c41b42493cedbdf751109" translate="yes" xml:space="preserve">
          <source>There are two types of callbacks associated with committing and rolling back transactions: &lt;a href=&quot;classmethods#method-i-after_commit&quot;&gt;after_commit&lt;/a&gt; and &lt;a href=&quot;classmethods#method-i-after_rollback&quot;&gt;after_rollback&lt;/a&gt;.</source>
          <target state="translated">有两种与提交和回滚事务关联的回调：&lt;a href=&quot;classmethods#method-i-after_commit&quot;&gt;after_commit&lt;/a&gt;和&lt;a href=&quot;classmethods#method-i-after_rollback&quot;&gt;after_rollback&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2fed839d5811d96a75c77988c842d3f1167e018e" translate="yes" xml:space="preserve">
          <source>There are two types of form helpers: those that specifically work with model attributes and those that don't. This helper deals with those that work with model attributes; to see an example of form helpers that don't work with model attributes, check the &lt;code&gt;ActionView::Helpers::FormTagHelper&lt;/code&gt; documentation.</source>
          <target state="translated">有两种类型的表单助手：专门用于模型属性的表单助手和不用于模型属性的助手。这个助手处理那些使用模型属性的助手。要查看不适用于模型属性的表单助手的示例，请查看 &lt;code&gt;ActionView::Helpers::FormTagHelper&lt;/code&gt; 文档。</target>
        </trans-unit>
        <trans-unit id="f56085fc03bb10b4267212f4c8adf98797c60bac" translate="yes" xml:space="preserve">
          <source>There are two ways to build a many-to-many relationship.</source>
          <target state="translated">建立多对多关系有两种方式。</target>
        </trans-unit>
        <trans-unit id="0a459232a7400ba945311f0a8eea99dc78b24f4f" translate="yes" xml:space="preserve">
          <source>There are two ways to mitigate this problem.</source>
          <target state="translated">有两种方法可以缓解这个问题。</target>
        </trans-unit>
        <trans-unit id="695714ece75baa8719cb57f7edb9157a784685da" translate="yes" xml:space="preserve">
          <source>There are two ways to resume execution of an application that is stopped in the debugger:</source>
          <target state="translated">有两种方法可以恢复在调试器中停止的应用程序的执行。</target>
        </trans-unit>
        <trans-unit id="712b8504b1eed7dc8fb0d1ff75b300c48fed5b1e" translate="yes" xml:space="preserve">
          <source>There are two ways to work with &lt;a href=&quot;schemastatements#method-i-create_table&quot;&gt;create_table&lt;/a&gt;. You can use the block form or the regular form, like this:</source>
          <target state="translated">有两种使用&lt;a href=&quot;schemastatements#method-i-create_table&quot;&gt;create_table的方法&lt;/a&gt;。您可以使用块形式或常规形式，如下所示：</target>
        </trans-unit>
        <trans-unit id="7856da849630e83ad1164d4aea2457adeb33092a" translate="yes" xml:space="preserve">
          <source>There exist two options for &lt;code&gt;scope&lt;/code&gt; to customize shallow routes. &lt;code&gt;:shallow_path&lt;/code&gt; prefixes member paths with the specified parameter:</source>
          <target state="translated">&lt;code&gt;scope&lt;/code&gt; 有两个选项可用于定制浅层路由。 &lt;code&gt;:shallow_path&lt;/code&gt; 用指定的参数为成员路径添加前缀：</target>
        </trans-unit>
        <trans-unit id="7fe658cab3ae9b31e60d801bb4eb0338faa6a33e" translate="yes" xml:space="preserve">
          <source>There is a &lt;code&gt;:scope&lt;/code&gt; option that you can use to specify one or more attributes that are used to limit the uniqueness check:</source>
          <target state="translated">有一个 &lt;code&gt;:scope&lt;/code&gt; 选项，可用于指定一个或多个用于限制唯一性检查的属性：</target>
        </trans-unit>
        <trans-unit id="6b34607bfb43676f4c857579d76a627e23d434d2" translate="yes" xml:space="preserve">
          <source>There is a naming convention for views in Rails. Typically, the views share their name with the associated controller action, as you can see above. For example, the index controller action of the &lt;code&gt;articles_controller.rb&lt;/code&gt; will use the &lt;code&gt;index.html.erb&lt;/code&gt; view file in the &lt;code&gt;app/views/articles&lt;/code&gt; directory. The complete HTML returned to the client is composed of a combination of this ERB file, a layout template that wraps it, and all the partials that the view may reference. Within this guide you will find more detailed documentation about each of these three components.</source>
          <target state="translated">Rails中有一个视图命名约定。通常，视图与关联的控制器操作共享其名称，如上所示。例如， &lt;code&gt;articles_controller.rb&lt;/code&gt; 的索引控制器操作将使用 &lt;code&gt;app/views/articles&lt;/code&gt; 目录中的 &lt;code&gt;index.html.erb&lt;/code&gt; 视图文件。返回给客户端的完整HTML由此ERB文件，包装该文件的布局模板以及视图可能引用的所有部分的组合组成。在本指南中，您将找到有关这三个组件中每个组件的更详细的文档。</target>
        </trans-unit>
        <trans-unit id="f860d89c3679de331732d4f89fb91db66b50e84b" translate="yes" xml:space="preserve">
          <source>There is a potential pitfall here: &lt;a href=&quot;classmethods#method-i-has_and_belongs_to_many&quot;&gt;has_and_belongs_to_many&lt;/a&gt; and &lt;a href=&quot;classmethods#method-i-has_many&quot;&gt;has_many&lt;/a&gt;&lt;code&gt;:through&lt;/code&gt; associations have records in join tables, as well as the associated records. So when we call one of these deletion methods, what exactly should be deleted?</source>
          <target state="translated">这里有一个潜在的陷阱：&lt;a href=&quot;classmethods#method-i-has_and_belongs_to_many&quot;&gt;has_and_belongs_to_many&lt;/a&gt;和&lt;a href=&quot;classmethods#method-i-has_many&quot;&gt;has_many &lt;/a&gt; &lt;code&gt;:through&lt;/code&gt; 关联在联接表中有记录以及相关的记录。因此，当我们调用这些删除方法之一时，究竟应该删除什么？</target>
        </trans-unit>
        <trans-unit id="0ad48ba9aa950ddaa4d4c357e39bd9c68fa32f1d" translate="yes" xml:space="preserve">
          <source>There is a single hash of options. HTML options (except &lt;code&gt;id&lt;/code&gt; and &lt;code&gt;class&lt;/code&gt;) are passed in the &lt;code&gt;:html&lt;/code&gt; hash. Also you can provide a &lt;code&gt;:namespace&lt;/code&gt; option for your form to ensure uniqueness of id attributes on form elements. The scope attribute will be prefixed with underscore on the generated HTML id.</source>
          <target state="translated">选项只有一个散列。HTML选项（ &lt;code&gt;id&lt;/code&gt; 和 &lt;code&gt;class&lt;/code&gt; 除外）在 &lt;code&gt;:html&lt;/code&gt; 哈希中传递。您也可以为表单提供 &lt;code&gt;:namespace&lt;/code&gt; 选项，以确保表单元素上id属性的唯一性。在生成的HTML ID上，scope属性将带有下划线前缀。</target>
        </trans-unit>
        <trans-unit id="b987a89e8d81fab49645c31428afa62da4caa34e" translate="yes" xml:space="preserve">
          <source>There is a special syntactic shortcut to generate migrations that add fields to a table.</source>
          <target state="translated">有一个特殊的语法快捷方式来生成向表添加字段的迁移。</target>
        </trans-unit>
        <trans-unit id="944ce00ff07d7562a7c32486d88946c164d99489" translate="yes" xml:space="preserve">
          <source>There is also &lt;code&gt;time_zone_options_for_select&lt;/code&gt; helper for a more manual (therefore more customizable) way of doing this. Read the &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionView/Helpers/FormOptionsHelper.html#method-i-time_zone_options_for_select&quot;&gt;API documentation&lt;/a&gt; to learn about the possible arguments for these two methods.</source>
          <target state="translated">还有一个 &lt;code&gt;time_zone_options_for_select&lt;/code&gt; 帮助器，用于更手动（因此更可定制）的方式。阅读&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionView/Helpers/FormOptionsHelper.html#method-i-time_zone_options_for_select&quot;&gt;API文档，&lt;/a&gt;以了解这两种方法的可能参数。</target>
        </trans-unit>
        <trans-unit id="a92a7948a7a3e7a37f987d13b99d1b0f66b3afae" translate="yes" xml:space="preserve">
          <source>There is also a &lt;code&gt;:case_sensitive&lt;/code&gt; option that you can use to define whether the confirmation constraint will be case sensitive or not. This option defaults to true.</source>
          <target state="translated">还有一个 &lt;code&gt;:case_sensitive&lt;/code&gt; 选项，可用于定义确认约束是否区分大小写。此选项默认为true。</target>
        </trans-unit>
        <trans-unit id="08f395432cafd500b3c51b02a880645ff49e9691" translate="yes" xml:space="preserve">
          <source>There is also a &lt;code&gt;:case_sensitive&lt;/code&gt; option that you can use to define whether the uniqueness constraint will be case sensitive or not. This option defaults to true.</source>
          <target state="translated">还有一个 &lt;code&gt;:case_sensitive&lt;/code&gt; 选项，可用于定义唯一性约束是否区分大小写。此选项默认为true。</target>
        </trans-unit>
        <trans-unit id="26319a846afaaffb853e530a85dca196e17bc21e" translate="yes" xml:space="preserve">
          <source>There is also a &lt;code&gt;clear&lt;/code&gt; method which is the same as &lt;code&gt;delete_all&lt;/code&gt;, except that it returns the association rather than the records which have been deleted.</source>
          <target state="translated">还有一个 &lt;code&gt;clear&lt;/code&gt; 方法与 &lt;code&gt;delete_all&lt;/code&gt; 相同，除了它返回关联而不是已删除的记录外。</target>
        </trans-unit>
        <trans-unit id="c4438c6b2101cf26639e5c33a5913bcf47daf55b" translate="yes" xml:space="preserve">
          <source>There is also a &lt;code&gt;main_app&lt;/code&gt; helper that gives you access to application's routes inside Engine:</source>
          <target state="translated">还有一个 &lt;code&gt;main_app&lt;/code&gt; 帮助器，可让您访问Engine内部的应用程序路由：</target>
        </trans-unit>
        <trans-unit id="cba91c500dccf5183f072dd89abfd1037c67edd4" translate="yes" xml:space="preserve">
          <source>There is also a generator which will produce join tables if &lt;code&gt;JoinTable&lt;/code&gt; is part of the name:</source>
          <target state="translated">如果 &lt;code&gt;JoinTable&lt;/code&gt; 是名称的一部分，还有一个生成器将生成联接表：</target>
        </trans-unit>
        <trans-unit id="b7e914c5609d154d382e9c0fba25c6d3a3dd2085" translate="yes" xml:space="preserve">
          <source>There is also a list of default options supported by every validator: &lt;code&gt;:if&lt;/code&gt;, &lt;code&gt;:unless&lt;/code&gt;, &lt;code&gt;:on&lt;/code&gt; and &lt;code&gt;:strict&lt;/code&gt;. See &lt;code&gt;ActiveModel::Validations#validates&lt;/code&gt; for more information</source>
          <target state="translated">每个验证器还支持默认选项的列表 &lt;code&gt;:if&lt;/code&gt; ， &lt;code&gt;:unless&lt;/code&gt; ， &lt;code&gt;:on&lt;/code&gt; 和 &lt;code&gt;:strict&lt;/code&gt; 。有关更多信息，请参见 &lt;code&gt;ActiveModel::Validations#validates&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d6bee8d7a48948390ca575bad45aeccd8d98d156" translate="yes" xml:space="preserve">
          <source>There is also a list of default options supported by every validator: &lt;code&gt;:if&lt;/code&gt;, &lt;code&gt;:unless&lt;/code&gt;, &lt;code&gt;:on&lt;/code&gt;, &lt;code&gt;:allow_nil&lt;/code&gt;, &lt;code&gt;:allow_blank&lt;/code&gt;, and &lt;code&gt;:strict&lt;/code&gt; . See &lt;code&gt;ActiveModel::Validations#validates&lt;/code&gt; for more information</source>
          <target state="translated">每个验证器还支持默认选项的列表 &lt;code&gt;:if&lt;/code&gt; ， &lt;code&gt;:unless&lt;/code&gt; ， &lt;code&gt;:on&lt;/code&gt; ， &lt;code&gt;:allow_nil&lt;/code&gt; ， &lt;code&gt;:allow_blank&lt;/code&gt; 和 &lt;code&gt;:strict&lt;/code&gt; 。有关更多信息，请参见 &lt;code&gt;ActiveModel::Validations#validates&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="93847491505e729e6d4ee5a015588bdb8858326f" translate="yes" xml:space="preserve">
          <source>There is also a list of default options supported by every validator: &lt;code&gt;:if&lt;/code&gt;, &lt;code&gt;:unless&lt;/code&gt;, &lt;code&gt;:on&lt;/code&gt;, &lt;code&gt;:allow_nil&lt;/code&gt;, &lt;code&gt;:allow_blank&lt;/code&gt;, and &lt;code&gt;:strict&lt;/code&gt;. See &lt;code&gt;ActiveModel::Validations#validates&lt;/code&gt; for more information</source>
          <target state="translated">每个验证器还支持默认选项的列表 &lt;code&gt;:if&lt;/code&gt; ， &lt;code&gt;:unless&lt;/code&gt; ， &lt;code&gt;:on&lt;/code&gt; ， &lt;code&gt;:allow_nil&lt;/code&gt; ， &lt;code&gt;:allow_blank&lt;/code&gt; 和 &lt;code&gt;:strict&lt;/code&gt; 。有关更多信息，请参见 &lt;code&gt;ActiveModel::Validations#validates&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="748b9c1ab9da9de40e6d3ebf30e2e1413de7f5d8" translate="yes" xml:space="preserve">
          <source>There is also a list of default options supported by every validator: &lt;code&gt;:if&lt;/code&gt;, &lt;code&gt;:unless&lt;/code&gt;, &lt;code&gt;:on&lt;/code&gt;, &lt;code&gt;:allow_nil&lt;/code&gt;, &lt;code&gt;:allow_blank&lt;/code&gt;, and &lt;code&gt;:strict&lt;/code&gt;. See &lt;code&gt;ActiveModel::Validations#validates&lt;/code&gt; for more information.</source>
          <target state="translated">每个验证器还支持默认选项的列表 &lt;code&gt;:if&lt;/code&gt; ， &lt;code&gt;:unless&lt;/code&gt; ， &lt;code&gt;:on&lt;/code&gt; ， &lt;code&gt;:allow_nil&lt;/code&gt; ， &lt;code&gt;:allow_blank&lt;/code&gt; 和 &lt;code&gt;:strict&lt;/code&gt; 。有关更多信息，请参见 &lt;code&gt;ActiveModel::Validations#validates&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f7fe45a08fca5fe58f1e88f7ac7a9210fc69391d" translate="yes" xml:space="preserve">
          <source>There is also a list of options that could be used along with validators:</source>
          <target state="translated">还有一个选项清单,可以和验证器一起使用。</target>
        </trans-unit>
        <trans-unit id="79225454c971f81087b4f4c0e463d1f98b8b3dbb" translate="yes" xml:space="preserve">
          <source>There is also a shorthand for this. Assuming &lt;code&gt;@products&lt;/code&gt; is a collection of &lt;code&gt;Product&lt;/code&gt; instances, you can simply write this in the &lt;code&gt;index.html.erb&lt;/code&gt; to produce the same result:</source>
          <target state="translated">这也有一个简写。假设 &lt;code&gt;@products&lt;/code&gt; 是 &lt;code&gt;Product&lt;/code&gt; 实例的集合，则只需将其写在 &lt;code&gt;index.html.erb&lt;/code&gt; 中即可产生相同的结果：</target>
        </trans-unit>
        <trans-unit id="1c448005d30e7a661bfd3a32354d884702b6586b" translate="yes" xml:space="preserve">
          <source>There is also an alias for using the &lt;code&gt;after_commit&lt;/code&gt; callback for both create and update together:</source>
          <target state="translated">还有一个别名，用于将 &lt;code&gt;after_commit&lt;/code&gt; 回调用于一起创建和更新：</target>
        </trans-unit>
        <trans-unit id="86bcd3acef2da93d850e3310b1f9b06238e93baa" translate="yes" xml:space="preserve">
          <source>There is also the ability to pass a custom exception to the &lt;code&gt;:strict&lt;/code&gt; option.</source>
          <target state="translated">还可以将自定义异常传递给 &lt;code&gt;:strict&lt;/code&gt; 选项。</target>
        </trans-unit>
        <trans-unit id="e59b241c28f8480ba0ce4c51c99155489acd967b" translate="yes" xml:space="preserve">
          <source>There is an exception for the &lt;code&gt;format&lt;/code&gt; constraint: while it's a method on the Request object, it's also an implicit optional parameter on every path. Segment constraints take precedence and the &lt;code&gt;format&lt;/code&gt; constraint is only applied as such when enforced through a hash. For example, &lt;code&gt;get 'foo', constraints: { format: 'json' }&lt;/code&gt; will match &lt;code&gt;GET  /foo&lt;/code&gt; because the format is optional by default. However, you can &lt;a href=&quot;#advanced-constraints&quot;&gt;use a lambda&lt;/a&gt; like in &lt;code&gt;get 'foo', constraints: lambda { |req| req.format == :json }&lt;/code&gt; and the route will only match explicit JSON requests.</source>
          <target state="translated">&lt;code&gt;format&lt;/code&gt; 约束有一个例外：虽然它是Request对象上的方法，但它也是每个路径上的隐式可选参数。段约束优先， &lt;code&gt;format&lt;/code&gt; 约束仅在通过哈希实施时才应用。例如， &lt;code&gt;get 'foo', constraints: { format: 'json' }&lt;/code&gt; 将匹配 &lt;code&gt;GET /foo&lt;/code&gt; 因为默认情况下该格式是可选的。但是，您可以像在 &lt;code&gt;get 'foo', constraints: lambda { |req| req.format == :json }&lt;/code&gt; 那样&lt;a href=&quot;#advanced-constraints&quot;&gt;使用lambda &lt;/a&gt;约束：lambda {| req | req.format ==：json}，该路由将仅与显式JSON请求匹配。</target>
        </trans-unit>
        <trans-unit id="b8a91b18877002868c9dc749f792dcc0a1f11220" translate="yes" xml:space="preserve">
          <source>There is even &lt;code&gt;file()&lt;/code&gt;, which accepts a relative path from &lt;code&gt;Rails.root&lt;/code&gt; and creates all the directories/files needed:</source>
          <target state="translated">甚至还有 &lt;code&gt;file()&lt;/code&gt; ，它接受来自 &lt;code&gt;Rails.root&lt;/code&gt; 的相对路径并创建所需的所有目录/文件：</target>
        </trans-unit>
        <trans-unit id="526236750959866fd6d21299cd81cfa275a4ebb3" translate="yes" xml:space="preserve">
          <source>There is no &lt;code&gt;REQUEST_METHOD&lt;/code&gt; key in &lt;code&gt;ENV&lt;/code&gt; so we can skip over that line. The next line merges in the options from &lt;code&gt;opt_parser&lt;/code&gt; which is defined plainly in &lt;code&gt;Rack::Server&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;ENV&lt;/code&gt; 中没有 &lt;code&gt;REQUEST_METHOD&lt;/code&gt; 键，因此我们可以跳过该行。下一行合并 &lt;code&gt;opt_parser&lt;/code&gt; 中的选项，该选项在 &lt;code&gt;Rack::Server&lt;/code&gt; 明确定义：</target>
        </trans-unit>
        <trans-unit id="8b7d5af49bb173bcd50ffed470c8cdee09278858" translate="yes" xml:space="preserve">
          <source>There is no column defined on the model side, Active Storage takes care of the mapping between your records and the attachment.</source>
          <target state="translated">在模型侧没有定义列,Active Storage负责您的记录和附件之间的映射。</target>
        </trans-unit>
        <trans-unit id="cba47c07cb70d2daf3ef3a3b05a98b0a5282be14" translate="yes" xml:space="preserve">
          <source>There is no guarantee that your initializers will run after all the gem initializers, so any initialization code that depends on a given gem having been initialized should go into a &lt;code&gt;config.after_initialize&lt;/code&gt; block.</source>
          <target state="translated">无法保证您的初始化程序将在所有gem初始化程序之后运行，因此任何依赖于已初始化给定gem的初始化代码都应放入 &lt;code&gt;config.after_initialize&lt;/code&gt; 块中。</target>
        </trans-unit>
        <trans-unit id="ef0adca7b88832fc28f9c2a670b8181336aa1ddf" translate="yes" xml:space="preserve">
          <source>There is no layout</source>
          <target state="translated">没有布局</target>
        </trans-unit>
        <trans-unit id="49b7d428a530de11bb29fde97ba972b14cdbe051" translate="yes" xml:space="preserve">
          <source>There is seldom any good reason to use this option. Mixing ERB into your controllers defeats the MVC orientation of Rails and will make it harder for other developers to follow the logic of your project. Use a separate erb view instead.</source>
          <target state="translated">很少有任何好的理由使用这个选项。将 ERB 混合到控制器中,会破坏 Rails 的 MVC 方向,并使其他开发者更难理解项目的逻辑。请使用单独的ERB视图来代替。</target>
        </trans-unit>
        <trans-unit id="a323058df0fdb155b4f09f3ff902648b543800ce" translate="yes" xml:space="preserve">
          <source>There isn't much to this file - but note that the &lt;code&gt;Article&lt;/code&gt; class inherits from &lt;code&gt;ApplicationRecord&lt;/code&gt;. &lt;code&gt;ApplicationRecord&lt;/code&gt; inherits from &lt;code&gt;ActiveRecord::Base&lt;/code&gt; which supplies a great deal of functionality to your Rails models for free, including basic database CRUD (Create, Read, Update, Destroy) operations, data validation, as well as sophisticated search support and the ability to relate multiple models to one another.</source>
          <target state="translated">该文件没有太多内容，但请注意， &lt;code&gt;Article&lt;/code&gt; 类继承自 &lt;code&gt;ApplicationRecord&lt;/code&gt; 。 &lt;code&gt;ApplicationRecord&lt;/code&gt; 继承自 &lt;code&gt;ActiveRecord::Base&lt;/code&gt; ，它免费为您的Rails模型提供大量功能，包括基本的数据库CRUD（创建，读取，更新，销毁）操作，数据验证以及复杂的搜索支持和关联能力多个模型相互之间。</target>
        </trans-unit>
        <trans-unit id="3627b01fb89111a0e68325183b3f10f21815a6a3" translate="yes" xml:space="preserve">
          <source>There may be cases in which you want to skip the template rendering step and supply the email body as a string. You can achieve this using the &lt;code&gt;:body&lt;/code&gt; option. In such cases don't forget to add the &lt;code&gt;:content_type&lt;/code&gt; option. Rails will default to &lt;code&gt;text/plain&lt;/code&gt; otherwise.</source>
          <target state="translated">在某些情况下，您可能希望跳过模板渲染步骤，并以字符串形式提供电子邮件正文。您可以使用 &lt;code&gt;:body&lt;/code&gt; 选项来实现。在这种情况下，请不要忘记添加 &lt;code&gt;:content_type&lt;/code&gt; 选项。否则，Rails将默认为 &lt;code&gt;text/plain&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5fd482966b8098cb54a96c3ee1b27d407a241e13" translate="yes" xml:space="preserve">
          <source>There may be times when you wish to customize the query used by &lt;code&gt;belongs_to&lt;/code&gt;. Such customizations can be achieved via a scope block. For example:</source>
          <target state="translated">有可能是当你想自定义所使用的查询 &lt;code&gt;belongs_to&lt;/code&gt; 的。可以通过作用域块实现此类自定义。例如：</target>
        </trans-unit>
        <trans-unit id="e894b9ea589be57b0a4706d1e9268dba3d1d0ae3" translate="yes" xml:space="preserve">
          <source>There may be times when you wish to customize the query used by &lt;code&gt;has_and_belongs_to_many&lt;/code&gt;. Such customizations can be achieved via a scope block. For example:</source>
          <target state="translated">有时您可能希望自定义 &lt;code&gt;has_and_belongs_to_many&lt;/code&gt; 使用的查询。可以通过作用域块实现此类自定义。例如：</target>
        </trans-unit>
        <trans-unit id="14c63d13c9a5a248481d25c20cdbed41cee4c423" translate="yes" xml:space="preserve">
          <source>There may be times when you wish to customize the query used by &lt;code&gt;has_many&lt;/code&gt;. Such customizations can be achieved via a scope block. For example:</source>
          <target state="translated">有时您可能希望自定义 &lt;code&gt;has_many&lt;/code&gt; 使用的查询。可以通过作用域块实现此类自定义。例如：</target>
        </trans-unit>
        <trans-unit id="b14296c62128b6cd10dd4219454aa8eb4e5cfcba" translate="yes" xml:space="preserve">
          <source>There may be times when you wish to customize the query used by &lt;code&gt;has_one&lt;/code&gt;. Such customizations can be achieved via a scope block. For example:</source>
          <target state="translated">有时您可能希望自定义 &lt;code&gt;has_one&lt;/code&gt; 使用的查询。可以通过作用域块实现此类自定义。例如：</target>
        </trans-unit>
        <trans-unit id="f73e720d5cc27c8ed51c7e9ffa25fc710d41ff78" translate="yes" xml:space="preserve">
          <source>There's a new choice for sanitizing HTML fragments in your applications. The venerable html-scanner approach is now officially being deprecated in favor of &lt;a href=&quot;https://github.com/rails/rails-html-sanitizer&quot;&gt;&lt;code&gt;Rails HTML Sanitizer&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">清理应用程序中的HTML片段有一个新选择。现在已正式弃用古老的html-scanner方法，而推荐使用&lt;a href=&quot;https://github.com/rails/rails-html-sanitizer&quot;&gt; &lt;code&gt;Rails HTML Sanitizer&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5767f43f9637442ecb64ed17723019181118e42b" translate="yes" xml:space="preserve">
          <source>There's a restriction, however, while hashes can be nested arbitrarily, only one level of &quot;arrayness&quot; is allowed. Arrays can usually be replaced by hashes; for example, instead of having an array of model objects, one can have a hash of model objects keyed by their id, an array index, or some other parameter.</source>
          <target state="translated">不过有一个限制,虽然哈希可以任意嵌套,但只允许有一个层次的 &quot;数组&quot;。数组通常可以用哈希来代替;例如,我们可以用一个以id、数组索引或其他参数为键的模型对象哈希来代替模型对象的数组。</target>
        </trans-unit>
        <trans-unit id="65bd3549183be5ddeee5d0d504340866d990b4ae" translate="yes" xml:space="preserve">
          <source>There's a series of callbacks associated with &lt;a href=&quot;persistence#method-i-destroy&quot;&gt;destroy&lt;/a&gt;. If the &lt;code&gt;before_destroy&lt;/code&gt; callback throws &lt;code&gt;:abort&lt;/code&gt; the action is cancelled and &lt;a href=&quot;persistence#method-i-destroy&quot;&gt;destroy&lt;/a&gt; returns &lt;code&gt;false&lt;/code&gt;. See &lt;a href=&quot;callbacks&quot;&gt;ActiveRecord::Callbacks&lt;/a&gt; for further details.</source>
          <target state="translated">有一系列与&lt;a href=&quot;persistence#method-i-destroy&quot;&gt;destroy&lt;/a&gt;相关的回调。如果 &lt;code&gt;before_destroy&lt;/code&gt; 回调函数throw &lt;code&gt;:abort&lt;/code&gt; ，则取消操作，&lt;a href=&quot;persistence#method-i-destroy&quot;&gt;destroy&lt;/a&gt;返回 &lt;code&gt;false&lt;/code&gt; 。有关更多详细信息，请参见&lt;a href=&quot;callbacks&quot;&gt;ActiveRecord :: Callbacks&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="50ae13a01265b151942c701c8650a5ef0ed4cd6c" translate="yes" xml:space="preserve">
          <source>There's a series of callbacks associated with &lt;a href=&quot;persistence#method-i-destroy-21&quot;&gt;destroy!&lt;/a&gt;. If the &lt;code&gt;before_destroy&lt;/code&gt; callback throws &lt;code&gt;:abort&lt;/code&gt; the action is cancelled and &lt;a href=&quot;persistence#method-i-destroy-21&quot;&gt;destroy!&lt;/a&gt; raises &lt;a href=&quot;recordnotdestroyed&quot;&gt;ActiveRecord::RecordNotDestroyed&lt;/a&gt;. See &lt;a href=&quot;callbacks&quot;&gt;ActiveRecord::Callbacks&lt;/a&gt; for further details.</source>
          <target state="translated">有一系列与&lt;a href=&quot;persistence#method-i-destroy-21&quot;&gt;destroy&lt;/a&gt;相关的回调！。如果 &lt;code&gt;before_destroy&lt;/code&gt; 回调抛出 &lt;code&gt;:abort&lt;/code&gt; ，操作将被取消并&lt;a href=&quot;persistence#method-i-destroy-21&quot;&gt;销毁！&lt;/a&gt;引发&lt;a href=&quot;recordnotdestroyed&quot;&gt;ActiveRecord :: RecordNotDestroyed&lt;/a&gt;。有关更多详细信息，请参见&lt;a href=&quot;callbacks&quot;&gt;ActiveRecord :: Callbacks&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="baadf5ef0cf8e709a055e8a610480db8bd62c0b4" translate="yes" xml:space="preserve">
          <source>There's a series of callbacks associated with &lt;a href=&quot;persistence#method-i-save&quot;&gt;save&lt;/a&gt;. If any of the &lt;code&gt;before_*&lt;/code&gt; callbacks throws &lt;code&gt;:abort&lt;/code&gt; the action is cancelled and &lt;a href=&quot;persistence#method-i-save&quot;&gt;save&lt;/a&gt; returns &lt;code&gt;false&lt;/code&gt;. See &lt;a href=&quot;callbacks&quot;&gt;ActiveRecord::Callbacks&lt;/a&gt; for further details.</source>
          <target state="translated">有一系列与&lt;a href=&quot;persistence#method-i-save&quot;&gt;save&lt;/a&gt;相关的回调。如果任何 &lt;code&gt;before_*&lt;/code&gt; 回调函数抛出 &lt;code&gt;:abort&lt;/code&gt; ,则该操作将被取消，并且&lt;a href=&quot;persistence#method-i-save&quot;&gt;save&lt;/a&gt;返回 &lt;code&gt;false&lt;/code&gt; 。有关更多详细信息，请参见&lt;a href=&quot;callbacks&quot;&gt;ActiveRecord :: Callbacks&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5c63fc7d9076faa508e121bb7939dcfea3faf94b" translate="yes" xml:space="preserve">
          <source>There's a series of callbacks associated with &lt;a href=&quot;persistence#method-i-save-21&quot;&gt;save!&lt;/a&gt;. If any of the &lt;code&gt;before_*&lt;/code&gt; callbacks throws &lt;code&gt;:abort&lt;/code&gt; the action is cancelled and &lt;a href=&quot;persistence#method-i-save-21&quot;&gt;save!&lt;/a&gt; raises &lt;a href=&quot;recordnotsaved&quot;&gt;ActiveRecord::RecordNotSaved&lt;/a&gt;. See &lt;a href=&quot;callbacks&quot;&gt;ActiveRecord::Callbacks&lt;/a&gt; for further details.</source>
          <target state="translated">与&lt;a href=&quot;persistence#method-i-save-21&quot;&gt;保存&lt;/a&gt;相关的一系列回调！。如果任何 &lt;code&gt;before_*&lt;/code&gt; 回调抛出 &lt;code&gt;:abort&lt;/code&gt; ，操作将被取消并&lt;a href=&quot;persistence#method-i-save-21&quot;&gt;保存！&lt;/a&gt;引发&lt;a href=&quot;recordnotsaved&quot;&gt;ActiveRecord :: RecordNotSaved&lt;/a&gt;。有关更多详细信息，请参见&lt;a href=&quot;callbacks&quot;&gt;ActiveRecord :: Callbacks&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f690b74b98e9c8e3bcb30878b11de3914cd94c90" translate="yes" xml:space="preserve">
          <source>There's a short-hand method for each of the type values declared at the top. And then there's &lt;a href=&quot;tabledefinition#method-i-timestamps&quot;&gt;#timestamps&lt;/a&gt; that'll add &lt;code&gt;created_at&lt;/code&gt; and &lt;code&gt;updated_at&lt;/code&gt; as datetimes.</source>
          <target state="translated">在顶部声明的每个类型值都有一个简便的方法。然后是&lt;a href=&quot;tabledefinition#method-i-timestamps&quot;&gt;#timestamps&lt;/a&gt;，它们会将 &lt;code&gt;created_at&lt;/code&gt; 和 &lt;code&gt;updated_at&lt;/code&gt; 添加为日期时间。</target>
        </trans-unit>
        <trans-unit id="a2a47f4d301a329df06372bf9a2362a740e3cf4a" translate="yes" xml:space="preserve">
          <source>There's also &lt;code&gt;insert_after&lt;/code&gt; which will insert a middleware after another:</source>
          <target state="translated">还有 &lt;code&gt;insert_after&lt;/code&gt; ，它将在另一个中间插入中间件：</target>
        </trans-unit>
        <trans-unit id="3377ee426223ead51640693037410f1557a63826" translate="yes" xml:space="preserve">
          <source>There's also a convenience method for rendering sub templates within the current controller that depends on a single object (we call this kind of sub templates for partials). It relies on the fact that partials should follow the naming convention of being prefixed with an underscore &amp;ndash; as to separate them from regular templates that could be rendered on their own.</source>
          <target state="translated">还有一种方便的方法可以在当前控制器内呈现依赖于单个对象的子模板（我们称这种子模板为局部对象）。它依赖于这样的事实，即局部变量应遵循以下划线作为前缀的命名约定，以便将它们与可以自己呈现的常规模板分开。</target>
        </trans-unit>
        <trans-unit id="ed91282508faeedc754bde528d1a7850b7199aa8" translate="yes" xml:space="preserve">
          <source>There's also a related idiom that uses the splat operator:</source>
          <target state="translated">还有一个相关的成语是使用溅射操作符。</target>
        </trans-unit>
        <trans-unit id="f956bef09f19451c8e40e6ec46cf01c8bab90c32" translate="yes" xml:space="preserve">
          <source>There's also the bang variant &lt;code&gt;except!&lt;/code&gt; that removes keys in the very receiver.</source>
          <target state="translated">&lt;code&gt;except!&lt;/code&gt; 爆炸之外，还有爆炸的变种！删除接收方中的密钥。</target>
        </trans-unit>
        <trans-unit id="9b923af91ebe1d074a60fa80ac21ebe6ee3104e6" translate="yes" xml:space="preserve">
          <source>There's also the bang variant &lt;code&gt;stringify_keys!&lt;/code&gt; that stringifies keys in the very receiver.</source>
          <target state="translated">还有爆炸型的 &lt;code&gt;stringify_keys!&lt;/code&gt; 在接收方中对密钥进行字符串化处理。</target>
        </trans-unit>
        <trans-unit id="78a19505c4007a8bcf226c393c50df09e247200d" translate="yes" xml:space="preserve">
          <source>There's also the bang variant &lt;code&gt;symbolize_keys!&lt;/code&gt; that symbolizes keys in the very receiver.</source>
          <target state="translated">还有爆炸变种 &lt;code&gt;symbolize_keys!&lt;/code&gt; 象征着接收方的钥匙。</target>
        </trans-unit>
        <trans-unit id="96e7550fe8a372858fac794d0441c24d32d3a161" translate="yes" xml:space="preserve">
          <source>There's also the destructive version &lt;code&gt;String#remove!&lt;/code&gt;.</source>
          <target state="translated">还有破坏性的版本 &lt;code&gt;String#remove!&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="80e73f2a82d31657db00c5c72ef73a2eeb3df615" translate="yes" xml:space="preserve">
          <source>There's also the destructive version &lt;code&gt;String#squish!&lt;/code&gt;.</source>
          <target state="translated">还有破坏性的版本 &lt;code&gt;String#squish!&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0a2b00febe434917117c1b1394b701114ec80450" translate="yes" xml:space="preserve">
          <source>There's no need to use &lt;code&gt;includes&lt;/code&gt; for immediate associations - that is, if you have &lt;code&gt;Book belongs_to :author&lt;/code&gt;, then the author is eager-loaded automatically when it's needed.</source>
          <target state="translated">不需要使用 &lt;code&gt;includes&lt;/code&gt; 来进行直接关联-也就是说，如果您拥有 &lt;code&gt;Book belongs_to :author&lt;/code&gt; ，那么将在需要时自动加载作者。</target>
        </trans-unit>
        <trans-unit id="5af5f8d372afc8fdbbf3a48b40c337522f940077" translate="yes" xml:space="preserve">
          <source>There's one problem with this form though. If you inspect the HTML that is generated, by viewing the source of the page, you will see that the &lt;code&gt;action&lt;/code&gt; attribute for the form is pointing at &lt;code&gt;/articles/new&lt;/code&gt;. This is a problem because this route goes to the very page that you're on right at the moment, and that route should only be used to display the form for a new article.</source>
          <target state="translated">但是，这种形式存在一个问题。如果检查生成的HTML，通过查看页面的源代码，您将看到表单的 &lt;code&gt;action&lt;/code&gt; 属性指向 &lt;code&gt;/articles/new&lt;/code&gt; 。这是一个问题，因为该路线转到您当前所处的页面，并且该路线仅应用于显示新文章的表单。</target>
        </trans-unit>
        <trans-unit id="f63be22a8bb00d7b7c8ecae170f05392b6a869cc" translate="yes" xml:space="preserve">
          <source>Therefore the file should be called &lt;code&gt;articles/new.html.erb&lt;/code&gt; and needs to be located inside the &lt;code&gt;app/views&lt;/code&gt; directory of the application.</source>
          <target state="translated">因此，该文件应称为 &lt;code&gt;articles/new.html.erb&lt;/code&gt; 并且需要位于该 &lt;code&gt;app/views&lt;/code&gt; 目录内。</target>
        </trans-unit>
        <trans-unit id="54d043af6ac60b7ff4247d868d9da4667b5e26aa" translate="yes" xml:space="preserve">
          <source>Therefore, engines and applications can be thought of as almost the same thing, just with subtle differences, as you'll see throughout this guide. Engines and applications also share a common structure.</source>
          <target state="translated">因此,引擎和应用程序可以被认为是几乎相同的东西,只是有微妙的区别,你将在本指南中看到。引擎和应用程序也有一个共同的结构。</target>
        </trans-unit>
        <trans-unit id="5822ddf0577b14c01efca59a6c127cdb9bf85dbb" translate="yes" xml:space="preserve">
          <source>Therefore, if you store a reloadable class or module object in a place that is not reloaded, that value is going to become stale.</source>
          <target state="translated">因此,如果你把一个可重载的类或模块对象存储在一个不重载的地方,这个值就会变得陈旧。</target>
        </trans-unit>
        <trans-unit id="c5dddde3c19b813eb2e97296982859fc7b193006" translate="yes" xml:space="preserve">
          <source>Therefore, once a value is added to the enum array, its position in the array must be maintained, and new values should only be added to the end of the array. To remove unused values, the explicit hash syntax should be used.</source>
          <target state="translated">因此,一旦一个值被添加到枚举数组中,就必须保持其在数组中的位置,新的值只能添加到数组的末尾。要删除未使用的值,应使用显式哈希语法。</target>
        </trans-unit>
        <trans-unit id="3312419e3b3bf265104b5325bbf7a861dc887f43" translate="yes" xml:space="preserve">
          <source>Therefore, when you are unsure if &lt;code&gt;ActiveSupport.escape_html_entities_in_json&lt;/code&gt; is enabled, or if you are unsure where your JSON string originated from, it is recommended that you always apply this helper (other libraries, such as the JSON gem, do not provide this kind of protection by default; also some gems might override &lt;code&gt;to_json&lt;/code&gt; to bypass Active Support's encoder).</source>
          <target state="translated">因此，当您不确定是否启用了 &lt;code&gt;ActiveSupport.escape_html_entities_in_json&lt;/code&gt; 时，或者不确定JSON字符串的来源时，建议您始终应用此帮助程序（其他库，例如JSON gem，则不提供此类帮助）。默认情况下为保护状态；某些gem可能会覆盖 &lt;code&gt;to_json&lt;/code&gt; 以绕过Active Support的编码器）。</target>
        </trans-unit>
        <trans-unit id="f9114f128c27108517bc58f97f6e8ec15e5ba8b6" translate="yes" xml:space="preserve">
          <source>These are &lt;b&gt;Edge Guides&lt;/b&gt;, based on &lt;a href=&quot;https://github.com/rails/rails/tree/&quot;&gt;master@&lt;/a&gt;.</source>
          <target state="translated">这些是基于&lt;a href=&quot;https://github.com/rails/rails/tree/&quot;&gt;master @的&lt;/a&gt;&lt;b&gt;Edge指南&lt;/b&gt;。</target>
        </trans-unit>
        <trans-unit id="8d0a8c4498c7c7a4fddeddb5aafbf861cf8f7c76" translate="yes" xml:space="preserve">
          <source>These are common validation options:</source>
          <target state="translated">这些都是常见的验证选项。</target>
        </trans-unit>
        <trans-unit id="54d23c4c7a3abf2356c0e98d63f6de16ee7c5ac8" translate="yes" xml:space="preserve">
          <source>These are the available configuration hooks. They do not hook into any particular framework, but instead they run in context of the entire application.</source>
          <target state="translated">这些都是可用的配置钩子,它们不会钩入任何特定的框架,而是在整个应用程序的上下文中运行。它们不与任何特定的框架挂钩,而是在整个应用程序的上下文中运行。</target>
        </trans-unit>
        <trans-unit id="e699f3e2047c7aa9cab430d169beedbfa3d580c9" translate="yes" xml:space="preserve">
          <source>These are the hooks you can use in your own code.</source>
          <target state="translated">这些是你可以在自己的代码中使用的钩子。</target>
        </trans-unit>
        <trans-unit id="2b22f389b62a84b1caafbc3f014bd1e450b4b1e8" translate="yes" xml:space="preserve">
          <source>These are used to generate the dynamic forms that implement non-remote links with &lt;code&gt;:method&lt;/code&gt;.</source>
          <target state="translated">这些用于生成动态形式，这些形式使用 &lt;code&gt;:method&lt;/code&gt; 实现非远程链接。</target>
        </trans-unit>
        <trans-unit id="7e7204643d8f17655f6051508b7b0bfbab88e895" translate="yes" xml:space="preserve">
          <source>These callbacks are called only when the associated objects are added or removed through the association collection:</source>
          <target state="translated">只有在通过关联集合添加或删除关联对象时,才会调用这些回调。</target>
        </trans-unit>
        <trans-unit id="7d19b4d81fee5eb3fdb0377e60fd1069b834510c" translate="yes" xml:space="preserve">
          <source>These callbacks are useful for interacting with other systems since you will be guaranteed that the callback is only executed when the database is in a permanent state. For example, &lt;a href=&quot;classmethods#method-i-after_commit&quot;&gt;after_commit&lt;/a&gt; is a good spot to put in a hook to clearing a cache since clearing it from within a transaction could trigger the cache to be regenerated before the database is updated.</source>
          <target state="translated">这些回调对于与其他系统进行交互很有用，因为可以确保仅在数据库处于永久状态时才执行回调。例如，&lt;a href=&quot;classmethods#method-i-after_commit&quot;&gt;after_commit&lt;/a&gt;是挂接清除缓存的一个好地方，因为从事务内部清除缓存可能会触发缓存在数据库更新之前重新生成。</target>
        </trans-unit>
        <trans-unit id="7bec3791f2ea67b636c1245ac77342e845d4486e" translate="yes" xml:space="preserve">
          <source>These can now be accessed in &lt;code&gt;shared/header&lt;/code&gt; with:</source>
          <target state="translated">现在可以使用以下命令在 &lt;code&gt;shared/header&lt;/code&gt; 访问这些：</target>
        </trans-unit>
        <trans-unit id="65d00b8450f73eefece21c008242b16d0b94eecc" translate="yes" xml:space="preserve">
          <source>These changes will ensure that all articles have a title that is at least five characters long. Rails can validate a variety of conditions in a model, including the presence or uniqueness of columns, their format, and the existence of associated objects. Validations are covered in detail in &lt;a href=&quot;active_record_validations&quot;&gt;Active Record Validations&lt;/a&gt;.</source>
          <target state="translated">这些更改将确保所有文章的标题长度至少为五个字符。Rails可以验证模型中的各种条件，包括列的存在或唯一性，其格式以及关联对象的存在。验证在&lt;a href=&quot;active_record_validations&quot;&gt;Active Record验证&lt;/a&gt;中详细介绍。</target>
        </trans-unit>
        <trans-unit id="9638b284981feee6487024ad55aba177e0b954c6" translate="yes" xml:space="preserve">
          <source>These chapters will show examples using both the &lt;code&gt;I18n.translate&lt;/code&gt; method as well as the &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionView/Helpers/TranslationHelper.html#method-i-translate&quot;&gt;&lt;code&gt;translate&lt;/code&gt; view helper method&lt;/a&gt; (noting the additional feature provide by the view helper method).</source>
          <target state="translated">这些章节将显示使用 &lt;code&gt;I18n.translate&lt;/code&gt; 方法和&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionView/Helpers/TranslationHelper.html#method-i-translate&quot;&gt; &lt;code&gt;translate&lt;/code&gt; view helper方法的&lt;/a&gt;示例（注意，view helper方法提供的附加功能）。</target>
        </trans-unit>
        <trans-unit id="ac5f2e69f53fc1b4376f36022172c7e5b9a8b05a" translate="yes" xml:space="preserve">
          <source>These collections can be used just like any other hash:</source>
          <target state="translated">这些集合可以像其他哈希一样使用。</target>
        </trans-unit>
        <trans-unit id="1602e901a67721c3d064a74b0786e59fd0237c54" translate="yes" xml:space="preserve">
          <source>These concerns are used in &lt;a href=&quot;resources&quot;&gt;Resources&lt;/a&gt; routing:</source>
          <target state="translated">这些关注点在&lt;a href=&quot;resources&quot;&gt;资源&lt;/a&gt;路由中使用：</target>
        </trans-unit>
        <trans-unit id="fe8d18b1a1af418d46f0c1762852e86222a737d6" translate="yes" xml:space="preserve">
          <source>These concerns can be used in resources to avoid code duplication and share behavior across routes:</source>
          <target state="translated">这些关注点可以在资源中使用,以避免代码重复,并在不同的路由中共享行为。</target>
        </trans-unit>
        <trans-unit id="fdc87cb375b3fa6f8adc4f36b5d7f6836c61fcfa" translate="yes" xml:space="preserve">
          <source>These configuration methods are to be called on a &lt;code&gt;Rails::Railtie&lt;/code&gt; object, such as a subclass of &lt;code&gt;Rails::Engine&lt;/code&gt; or &lt;code&gt;Rails::Application&lt;/code&gt;.</source>
          <target state="translated">这些配置方法将在 &lt;code&gt;Rails::Railtie&lt;/code&gt; 对象上调用，例如 &lt;code&gt;Rails::Engine&lt;/code&gt; 或 &lt;code&gt;Rails::Application&lt;/code&gt; 的子类。</target>
        </trans-unit>
        <trans-unit id="aee4c86ddbc20a70ac6de991da1abde7b7779a1c" translate="yes" xml:space="preserve">
          <source>These configuration points are then available through the configuration object:</source>
          <target state="translated">这些配置点就可以通过配置对象获得。</target>
        </trans-unit>
        <trans-unit id="16b07cb0b4389928fefa2bf726c42774804b3256" translate="yes" xml:space="preserve">
          <source>These equivalent methods may not execute the same SQL as the previous implementation.</source>
          <target state="translated">这些等价的方法可能不会执行与之前的实现相同的SQL。</target>
        </trans-unit>
        <trans-unit id="8d5cbf40b6dbca1d049666b1de9ee4817b21e15f" translate="yes" xml:space="preserve">
          <source>These examples don't do any harm so far, so let's see how an attacker can steal the user's cookie (and thus hijack the user's session). In JavaScript you can use the document.cookie property to read and write the document's cookie. JavaScript enforces the same origin policy, that means a script from one domain cannot access cookies of another domain. The document.cookie property holds the cookie of the originating web server. However, you can read and write this property, if you embed the code directly in the HTML document (as it happens with XSS). Inject this anywhere in your web application to see your own cookie on the result page:</source>
          <target state="translated">这些例子到目前为止还没有造成任何伤害,那么让我们来看看攻击者如何窃取用户的cookie(从而劫持用户的会话)。在JavaScript中,你可以使用document.cookie属性来读取和写入文档的cookie。JavaScript执行相同的起源策略,这意味着一个域的脚本不能访问另一个域的cookie。document.cookie属性保存着发起Web服务器的cookie。然而,如果你直接在HTML文档中嵌入代码,你可以读写这个属性(就像XSS一样)。在你的Web应用中的任何地方注入这个,就可以在结果页面上看到自己的cookie。</target>
        </trans-unit>
        <trans-unit id="a27090b4fedb948475d7cbd62876466ae6c995c2" translate="yes" xml:space="preserve">
          <source>These files allow you to specify what gem dependencies are needed for your Rails application. These files are used by the Bundler gem. For more information about Bundler, see the &lt;a href=&quot;https://bundler.io&quot;&gt;Bundler website&lt;/a&gt;.</source>
          <target state="translated">这些文件使您可以指定Rails应用程序需要哪些gem依赖项。这些文件由Bundler gem使用。有关Bundler的更多信息，请参见&lt;a href=&quot;https://bundler.io&quot;&gt;Bundler网站&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d84535d564b577693b8a8d9ebb6012d6bf9a78cf" translate="yes" xml:space="preserve">
          <source>These have the aliases #t and #l so you can use them like this:</source>
          <target state="translated">这些都有#t和#l的别名,所以你可以像这样使用它们。</target>
        </trans-unit>
        <trans-unit id="9a95f00469907efb1bc0b9e8e4f7a2777fe791ca" translate="yes" xml:space="preserve">
          <source>These helpers can then be explicitly required as needed and included as needed</source>
          <target state="translated">然后,可以根据需要明确地要求这些助手,并根据需要包含这些助手</target>
        </trans-unit>
        <trans-unit id="237b4a9b33c4126eb8cc426d957fec5a9a20274a" translate="yes" xml:space="preserve">
          <source>These inbound emails are routed asynchronously using Active Job to one or several dedicated mailboxes, which are capable of interacting directly with the rest of your domain model.</source>
          <target state="translated">这些入站邮件使用Active Job异步路由到一个或多个专用邮箱,这些邮箱能够直接与您的域模型的其他部分进行交互。</target>
        </trans-unit>
        <trans-unit id="845f625b6f124c282e78051e4452d00a4e22c614" translate="yes" xml:space="preserve">
          <source>These kind of ambiguities can often be resolved using qualified constants:</source>
          <target state="translated">这类歧义往往可以使用限定常量来解决。</target>
        </trans-unit>
        <trans-unit id="46c73379b03b75caeed644f6833cfb0de9d1f6a5" translate="yes" xml:space="preserve">
          <source>These libraries are not provided by Rails. You must install them yourself to use the built-in previewers. Before you install and use third-party software, make sure you understand the licensing implications of doing so.</source>
          <target state="translated">这些库不是由Rails提供的,你必须自己安装才能使用内置的预览器。您必须自己安装它们才能使用内置的预览器。在您安装和使用第三方软件之前,请确保您了解这样做的许可含义。</target>
        </trans-unit>
        <trans-unit id="57a06ff80b16f646465f2114175927d8bc937ebd" translate="yes" xml:space="preserve">
          <source>These mechanisms all involve multiple threads, each managing work for a unique instance of some object (controller, job, channel), while sharing the global process space (such as classes and their configurations, and global variables). As long as your code doesn't modify any of those shared things, it can mostly ignore that other threads exist.</source>
          <target state="translated">这些机制都涉及到多个线程,每个线程为某个对象(控制器、作业、通道)的唯一实例管理工作,同时共享全局进程空间(如类及其配置,以及全局变量)。只要你的代码不修改这些共享的东西,它大多可以忽略其他线程的存在。</target>
        </trans-unit>
        <trans-unit id="1ce44e86a7aa8bf2f44b6cc0b7087229cc42c8c2" translate="yes" xml:space="preserve">
          <source>These methods are not needed or available when using parallel testing with threads.</source>
          <target state="translated">当使用线程进行并行测试时,这些方法是不需要或不可用的。</target>
        </trans-unit>
        <trans-unit id="481a47f429a9e808ff788948aeceb8f3bf837ea6" translate="yes" xml:space="preserve">
          <source>These methods are useful when you want to generate the correct URL or path to a RESTful resource without having to know the exact type of the record in question.</source>
          <target state="translated">当你想生成正确的URL或RESTful资源的路径而不需要知道相关记录的确切类型时,这些方法非常有用。</target>
        </trans-unit>
        <trans-unit id="e0ca2ef6c6a653967492a217dec79a0d38a72888" translate="yes" xml:space="preserve">
          <source>These methods let you ask questions from templates and decide the flow based on the user's answer. Let's say you want to Freeze Rails only if the user wants to:</source>
          <target state="translated">这些方法可以让你从模板中提出问题,并根据用户的回答决定流程。比方说,如果用户想冻结Rails,你只需要。</target>
        </trans-unit>
        <trans-unit id="2f964cc59da3c6f2e63593f6a75a22d82804b5c4" translate="yes" xml:space="preserve">
          <source>These methods should be used with caution, however, because important business rules and application logic may be kept in callbacks. Bypassing them without understanding the potential implications may lead to invalid data.</source>
          <target state="translated">但是,这些方法应该谨慎使用,因为重要的业务规则和应用逻辑可能会被保存在回调中。在不了解潜在影响的情况下绕过它们可能会导致无效数据。</target>
        </trans-unit>
        <trans-unit id="b237698c54c09388618913c8780d824a930950fa" translate="yes" xml:space="preserve">
          <source>These methods should not be used in ordinary views. Unsafe values are automatically escaped:</source>
          <target state="translated">这些方法不应该在普通视图中使用。不安全的值会自动转义。</target>
        </trans-unit>
        <trans-unit id="cbc4b0f5255bfee845c9839ebd849486ea95cdda" translate="yes" xml:space="preserve">
          <source>These methods use Time#advance for precise date calculations when using from_now, ago, etc. as well as adding or subtracting their results from a Time object. For example:</source>
          <target state="translated">这些方法在使用from_now、 ago等方法时,使用Time#advance进行精确的日期计算,以及从Time对象中添加或减去其结果。例如</target>
        </trans-unit>
        <trans-unit id="0b15cf80ef8c4443538bcf9ba62dadca5ce0849d" translate="yes" xml:space="preserve">
          <source>These methods will be included into any Active Job object, adding callbacks for &lt;code&gt;perform&lt;/code&gt; and &lt;code&gt;enqueue&lt;/code&gt; methods.</source>
          <target state="translated">这些方法将包含在任何Active Job对象中，从而为 &lt;code&gt;perform&lt;/code&gt; 和 &lt;code&gt;enqueue&lt;/code&gt; 方法添加回调。</target>
        </trans-unit>
        <trans-unit id="fac92986ad45b2904b5f7cef4f619d1f996465b9" translate="yes" xml:space="preserve">
          <source>These methods will be included into any Active Job object, adding helpers for de/serialization and creation of job instances.</source>
          <target state="translated">这些方法将被包含在任何Active Job对象中,为去/序列化和创建作业实例添加助手。</target>
        </trans-unit>
        <trans-unit id="1a12ffbb9a20c8082a4a85f578c452b56149f93a" translate="yes" xml:space="preserve">
          <source>These methods will operate with value objects like the ones described below:</source>
          <target state="translated">这些方法将与下面描述的值对象一起操作。</target>
        </trans-unit>
        <trans-unit id="926ca4932f7bdeba121426204a21f401286479a1" translate="yes" xml:space="preserve">
          <source>These named scopes are composable. For instance, &lt;code&gt;Shirt.red.dry_clean_only&lt;/code&gt; will produce all shirts that are both red and dry clean only. Nested finds and calculations also work with these compositions: &lt;code&gt;Shirt.red.dry_clean_only.count&lt;/code&gt; returns the number of garments for which these criteria obtain. Similarly with &lt;code&gt;Shirt.red.dry_clean_only.average(:thread_count)&lt;/code&gt;.</source>
          <target state="translated">这些命名范围是可组合的。例如， &lt;code&gt;Shirt.red.dry_clean_only&lt;/code&gt; 将生成所有仅红色和干洗的衬衫。嵌套的查找和计算也适用于以下组成： &lt;code&gt;Shirt.red.dry_clean_only.count&lt;/code&gt; 返回获得这些条件的服装数量。与 &lt;code&gt;Shirt.red.dry_clean_only.average(:thread_count)&lt;/code&gt; 类似。</target>
        </trans-unit>
        <trans-unit id="83ddf58ecc721fdb2014a5e1d3240d26e473e31b" translate="yes" xml:space="preserve">
          <source>These need to be backed up by a migration to create the &lt;code&gt;assemblies_parts&lt;/code&gt; table. This table should be created without a primary key:</source>
          <target state="translated">这些需要通过迁移进行备份以创建 &lt;code&gt;assemblies_parts&lt;/code&gt; 表。该表应该没有主键创建：</target>
        </trans-unit>
        <trans-unit id="5497de896675e671af51ad317bd26ba031713911" translate="yes" xml:space="preserve">
          <source>These options are specified on the class level, like &lt;code&gt;ActionMailer::Base.raise_delivery_errors = true&lt;/code&gt;</source>
          <target state="translated">这些选项在类级别上指定，例如 &lt;code&gt;ActionMailer::Base.raise_delivery_errors = true&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="17ae8f2d0c5f3ba8aa2188c1a11eb9756a9d2cab" translate="yes" xml:space="preserve">
          <source>These options mean something to all cache implementations. Individual cache implementations may support additional options.</source>
          <target state="translated">这些选项对所有的缓存实现都有意义。个别的缓存实现可能会支持额外的选项。</target>
        </trans-unit>
        <trans-unit id="31bd624036c840bf986354a0963f7e12268c2133" translate="yes" xml:space="preserve">
          <source>These options will be used as a starting point when generating URLs, so it's possible they'll be overridden by the options passed to &lt;code&gt;url_for&lt;/code&gt; calls.</source>
          <target state="translated">这些选项将用作生成URL的起点，因此有可能被传递给 &lt;code&gt;url_for&lt;/code&gt; 调用的选项所覆盖。</target>
        </trans-unit>
        <trans-unit id="2c458987f769e6ae68fb15a55a06b4423b4739cf" translate="yes" xml:space="preserve">
          <source>These releases are created by taking the last released version, applying the security patches, and releasing. Those patches are then applied to the end of the x-y-stable branch. For example, a theoretical 1.2.3 security release would be built from 1.2.2, and then added to the end of 1-2-stable. This means that security releases are easy to upgrade to if you're running the latest version of Rails.</source>
          <target state="translated">这些版本是通过使用上一个发布的版本,应用安全补丁,然后发布的。这些补丁会被应用到 x-y-stable 分支的末尾。例如,一个理论上的 1.2.3 安全版本将从 1.2.2 构建,然后添加到 1-2-stable 分支的末尾。这意味着,如果你运行的是最新版本的 Rails,安全版本很容易升级到。</target>
        </trans-unit>
        <trans-unit id="26c06bf53d5f75b145edb6bfded64da635ff8c7b" translate="yes" xml:space="preserve">
          <source>These special cookie jars use a serializer to serialize the assigned values into strings and deserializes them into Ruby objects on read.</source>
          <target state="translated">这些特殊的cookie罐子使用序列化器将分配的值序列化为字符串,并在读取时反序列化为Ruby对象。</target>
        </trans-unit>
        <trans-unit id="c69560b003a070a5a3c6cdde28ca2b70e145e8fb" translate="yes" xml:space="preserve">
          <source>These tests do not attempt to determine the semantic correctness of the returned values. For instance, you could implement &lt;code&gt;valid?&lt;/code&gt; to always return &lt;code&gt;true&lt;/code&gt;, and the tests would pass. It is up to you to ensure that the values are semantically meaningful.</source>
          <target state="translated">这些测试不会尝试确定返回值的语义正确性。例如，您可以实施 &lt;code&gt;valid?&lt;/code&gt; 始终返回 &lt;code&gt;true&lt;/code&gt; ，则测试将通过。您需要确保值在语义上有意义。</target>
        </trans-unit>
        <trans-unit id="3b67a82ec0a502c4bdf056f5d91537ea3dd3ed33" translate="yes" xml:space="preserve">
          <source>These two declarations enable a good bit of automatic behavior. For example, if you have an instance variable &lt;code&gt;@article&lt;/code&gt; containing an article, you can retrieve all the comments belonging to that article as an array using &lt;code&gt;@article.comments&lt;/code&gt;.</source>
          <target state="translated">这两个声明启用了很多自动行为。例如，如果您有一个包含文章的实例变量 &lt;code&gt;@article&lt;/code&gt; ，则可以使用 &lt;code&gt;@article.comments&lt;/code&gt; 以数组的形式检索属于该文章的所有注释。</target>
        </trans-unit>
        <trans-unit id="d3f6bc49848016434b208a5921266b6e39810de3" translate="yes" xml:space="preserve">
          <source>These two methods represent the two basic action archetypes used in Action Controllers: Get-and-show and do-and-redirect. Most actions are variations on these themes.</source>
          <target state="translated">这两种方法代表了动作控制器中使用的两种基本动作原型。Get-and-show和do-and-redirect。大多数动作都是这些主题的变化。</target>
        </trans-unit>
        <trans-unit id="33e0287c858863f021b51e27e200bfc4f089da64" translate="yes" xml:space="preserve">
          <source>They are analogous. Please refer to their documentation above and take into account the following differences:</source>
          <target state="translated">它们是类似的。请参考上述文件,并考虑到以下差异。</target>
        </trans-unit>
        <trans-unit id="b5bd24a243de54209ede8e600ff44df089372d33" translate="yes" xml:space="preserve">
          <source>They are stored in YAML files, one file per model, which are placed in the directory appointed by &lt;code&gt;ActiveSupport::TestCase.fixture_path=(path)&lt;/code&gt; (this is automatically configured for Rails, so you can just put your files in &lt;code&gt;&amp;lt;your-rails-app&amp;gt;/test/fixtures/&lt;/code&gt;). The fixture file ends with the &lt;code&gt;.yml&lt;/code&gt; file extension, for example: &lt;code&gt;&amp;lt;your-rails-app&amp;gt;/test/fixtures/web_sites.yml&lt;/code&gt;).</source>
          <target state="translated">它们存储在YAML文件中，每个模型一个文件，放置在 &lt;code&gt;ActiveSupport::TestCase.fixture_path=(path)&lt;/code&gt; 指定的目录中（此文件自动为Rails配置，因此您可以将文件放在 &lt;code&gt;&amp;lt;your-rails-app&amp;gt;/test/fixtures/&lt;/code&gt; ）。夹具文件以 &lt;code&gt;.yml&lt;/code&gt; 文件扩展名结尾，例如： &lt;code&gt;&amp;lt;your-rails-app&amp;gt;/test/fixtures/web_sites.yml&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="9c5f934785de2e314143e684cb9be170b058e5b5" translate="yes" xml:space="preserve">
          <source>They can also be accessed and overridden at the instance level.</source>
          <target state="translated">它们也可以在实例层面被访问和覆盖。</target>
        </trans-unit>
        <trans-unit id="46d4e908d2c48c059241ac18375d00df6a3318ec" translate="yes" xml:space="preserve">
          <source>They can also be removed from the stack completely:</source>
          <target state="translated">它们也可以从堆栈中完全移除。</target>
        </trans-unit>
        <trans-unit id="0107efa51b3ef0fc81c2801ea8b66112e7056323" translate="yes" xml:space="preserve">
          <source>They inherit from &lt;code&gt;ActionMailer::Base&lt;/code&gt; and live in &lt;code&gt;app/mailers&lt;/code&gt;. Mailers also work very similarly to controllers. Some examples of similarities are enumerated below. Mailers have:</source>
          <target state="translated">它们继承自 &lt;code&gt;ActionMailer::Base&lt;/code&gt; 在于 &lt;code&gt;app/mailers&lt;/code&gt; 中。邮件程序的工作方式也与控制器非常相似。下面列举了一些相似的示例。邮件具有：</target>
        </trans-unit>
        <trans-unit id="1306c8a02ba468a5dffe07f4002008a307ae8613" translate="yes" xml:space="preserve">
          <source>They maintain the session by accessing the web application periodically in order to keep an expiring session alive.</source>
          <target state="translated">它们通过定期访问Web应用程序来维持会话,以保持到期会话的活力。</target>
        </trans-unit>
        <trans-unit id="9f127f7abccb59b14b1bd363498eb471f2243e46" translate="yes" xml:space="preserve">
          <source>They return the corresponding amount of bytes, using a conversion factor of 1024:</source>
          <target state="translated">它们使用1024的转换系数,返回相应的字节数。</target>
        </trans-unit>
        <trans-unit id="acfd88153819fc0ef7992434ccfca9dd06f84e5f" translate="yes" xml:space="preserve">
          <source>They translate to calls to &lt;code&gt;since&lt;/code&gt; or &lt;code&gt;advance&lt;/code&gt;. For example here we get the correct jump in the calendar reform:</source>
          <target state="translated">它们转换为 &lt;code&gt;since&lt;/code&gt; 或 &lt;code&gt;advance&lt;/code&gt; 呼叫。例如，这里我们在日历改革中获得了正确的跳跃：</target>
        </trans-unit>
        <trans-unit id="78b0f96d526c61955700c71121d4646083adcf60" translate="yes" xml:space="preserve">
          <source>They work by using the &lt;code&gt;HTTP_IF_NONE_MATCH&lt;/code&gt; and &lt;code&gt;HTTP_IF_MODIFIED_SINCE&lt;/code&gt; headers to pass back and forth both a unique content identifier and the timestamp of when the content was last changed. If the browser makes a request where the content identifier (etag) or last modified since timestamp matches the server's version then the server only needs to send back an empty response with a not modified status.</source>
          <target state="translated">它们通过使用 &lt;code&gt;HTTP_IF_NONE_MATCH&lt;/code&gt; 和 &lt;code&gt;HTTP_IF_MODIFIED_SINCE&lt;/code&gt; 标头来回传递唯一的内容标识符和上次更改内容的时间戳。如果浏览器发出请求，请求中的内容标识符（etag）或自时间戳以来最后修改的时间与服务器的版本匹配，则服务器仅需要发回状态未修改的空响应。</target>
        </trans-unit>
        <trans-unit id="7fff975593130a4e01e02e1e1def8304c95b238d" translate="yes" xml:space="preserve">
          <source>Think of &lt;code&gt;destroy&lt;/code&gt; as the opposite of &lt;code&gt;generate&lt;/code&gt;. It'll figure out what generate did, and undo it.</source>
          <target state="translated">将 &lt;code&gt;destroy&lt;/code&gt; 视为与 &lt;code&gt;generate&lt;/code&gt; 相反。它将找出generate做了什么，然后撤消它。</target>
        </trans-unit>
        <trans-unit id="ec50fe9d5ee0df11700556f4de11f2af7968f536" translate="yes" xml:space="preserve">
          <source>Think of a situation where an attacker has stolen a user's session cookie and thus may co-use the application. If it is easy to change the password, the attacker will hijack the account with a few clicks. Or if the change-password form is vulnerable to CSRF, the attacker will be able to change the victim's password by luring them to a web page where there is a crafted IMG-tag which does the CSRF. As a countermeasure, &lt;em&gt;make change-password forms safe against CSRF&lt;/em&gt;, of course. And &lt;em&gt;require the user to enter the old password when changing it&lt;/em&gt;.</source>
          <target state="translated">考虑一下攻击者窃取了用户会话cookie并因此可能共同使用该应用程序的情况。如果很容易更改密码，攻击者只需单击几下即可劫持该帐户。或者，如果更改密码形式容易受到CSRF的攻击，攻击者将能够通过诱使受害者进入一个包含精心制作的，执行CSRF的IMG标签的网页来更改受害者的密码。当然，作为对策，&lt;em&gt;使更改密码形式对CSRF安全&lt;/em&gt;。并&lt;em&gt;要求用户在更改旧密码时输入它&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="090598e3cb6e5557a76d9f498c3f99a8a50509b6" translate="yes" xml:space="preserve">
          <source>Think of creating routes as drawing a map for your requests. The map tells them where to go based on some predefined pattern:</source>
          <target state="translated">把创建路线想象成为你的请求画一张地图。地图根据一些预定义的模式告诉他们去哪里。</target>
        </trans-unit>
        <trans-unit id="ac4fc7fa914171aef955ec263c4925c7c3485dd3" translate="yes" xml:space="preserve">
          <source>Think of it as page caching using HTTP semantics.</source>
          <target state="translated">把它看作是使用HTTP语义的页面缓存。</target>
        </trans-unit>
        <trans-unit id="2b2e497eddb3696588ddf377c22c6589397db83e" translate="yes" xml:space="preserve">
          <source>Third configurable block to run. Does not run if &lt;code&gt;config.eager_load&lt;/code&gt; set to false.</source>
          <target state="translated">第三个可配置块运行。如果 &lt;code&gt;config.eager_load&lt;/code&gt; 设置为false，则不运行。</target>
        </trans-unit>
        <trans-unit id="a9399c03e83a1865fc30c82098c108182758ac25" translate="yes" xml:space="preserve">
          <source>Third, if we DON'T find a template AND the request is a page load in a web browser (technically, a non-XHR GET request for an HTML response) where you reasonably expect to have rendered a template, then we raise &lt;code&gt;ActionView::UnknownFormat&lt;/code&gt; with an explanation.</source>
          <target state="translated">第三，如果找不到模板，并且请求是Web浏览器中的页面加载（从技术上讲，是您对HTML响应的非XHR GET请求），您可以合理地期望已呈现了模板，那么我们将提出 &lt;code&gt;ActionView::UnknownFormat&lt;/code&gt; 及其解释。</target>
        </trans-unit>
        <trans-unit id="4a7362efbdd2c82924a8a0e0cea79ebd45d0e631" translate="yes" xml:space="preserve">
          <source>Third, the translation will be marked as &lt;code&gt;html_safe&lt;/code&gt; if the key has the suffix &amp;ldquo;_html&amp;rdquo; or the last element of the key is &amp;ldquo;html&amp;rdquo;. Calling &lt;code&gt;translate(&quot;footer_html&quot;)&lt;/code&gt; or &lt;code&gt;translate(&quot;footer.html&quot;)&lt;/code&gt; will return an HTML safe string that won't be escaped by other HTML helper methods. This naming convention helps to identify translations that include HTML tags so that you know what kind of output to expect when you call translate in a template and translators know which keys they can provide HTML values for.</source>
          <target state="translated">第三，如果键的后缀为&amp;ldquo; _html&amp;rdquo;或键的最后一个元素为&amp;ldquo; html&amp;rdquo; ，则翻译将标记为 &lt;code&gt;html_safe&lt;/code&gt; 。调用 &lt;code&gt;translate(&quot;footer_html&quot;)&lt;/code&gt; 或 &lt;code&gt;translate(&quot;footer.html&quot;)&lt;/code&gt; 会返回一个HTML安全字符串，其他HTML帮助器方法不会对此字符串进行转义。此命名约定有助于识别包含HTML标记的翻译，以便您知道在模板中调用Translation时期望的输出类型，而翻译者知道它们可以为HTML值提供哪些键。</target>
        </trans-unit>
        <trans-unit id="dba11a48cc216373589702626e1fbcb5aef1b0c4" translate="yes" xml:space="preserve">
          <source>This JavaScript code will simply display an alert box. The next examples do exactly the same, only in very uncommon places:</source>
          <target state="translated">这段JavaScript代码将简单地显示一个提示框。接下来的例子也完全一样,只是在非常不常见的地方。</target>
        </trans-unit>
        <trans-unit id="fea430f978987786a30da526dae9edb12ef3a537" translate="yes" xml:space="preserve">
          <source>This URL passes the filter because the regular expression matches - the second line, the rest does not matter. Now imagine we had a view that showed the URL like this:</source>
          <target state="translated">这个URL通过了过滤,因为正则表达式匹配--第二行,其他的都不重要。现在想象一下,我们有一个视图,显示的URL是这样的。</target>
        </trans-unit>
        <trans-unit id="17fc719c23efabfa22dedb5bcf3e95223386150f" translate="yes" xml:space="preserve">
          <source>This action is now displaying the parameters for the article that are coming in from the form. However, this isn't really all that helpful. Yes, you can see the parameters but nothing in particular is being done with them.</source>
          <target state="translated">这个操作现在正在显示从表单中进来的文章的参数。然而,这并不是真的那么有用。是的,你可以看到这些参数,但并没有对它们进行任何特别的处理。</target>
        </trans-unit>
        <trans-unit id="c8f843fd1bcb3d095f5adbea69e50d48947b7b40" translate="yes" xml:space="preserve">
          <source>This adds a form on the &lt;code&gt;Article&lt;/code&gt; show page that creates a new comment by calling the &lt;code&gt;CommentsController&lt;/code&gt;&lt;code&gt;create&lt;/code&gt; action. The &lt;code&gt;form_with&lt;/code&gt; call here uses an array, which will build a nested route, such as &lt;code&gt;/articles/1/comments&lt;/code&gt;.</source>
          <target state="translated">这将在&amp;ldquo; &lt;code&gt;Article&lt;/code&gt; 显示页面上添加一个表单，该表单通过调用 &lt;code&gt;CommentsController&lt;/code&gt; &lt;code&gt;create&lt;/code&gt; 操作来创建新注释。这里的 &lt;code&gt;form_with&lt;/code&gt; 调用使用一个数组，它将建立一个嵌套的路由，例如 &lt;code&gt;/articles/1/comments&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="46f00894177e6d8e67ed069223a4ade6fcb2da20" translate="yes" xml:space="preserve">
          <source>This adds a new foreign key to the &lt;code&gt;author_id&lt;/code&gt; column of the &lt;code&gt;articles&lt;/code&gt; table. The key references the &lt;code&gt;id&lt;/code&gt; column of the &lt;code&gt;authors&lt;/code&gt; table. If the column names cannot be derived from the table names, you can use the &lt;code&gt;:column&lt;/code&gt; and &lt;code&gt;:primary_key&lt;/code&gt; options.</source>
          <target state="translated">这会将新的外键添加到 &lt;code&gt;articles&lt;/code&gt; 表的 &lt;code&gt;author_id&lt;/code&gt; 列。该键引用 &lt;code&gt;authors&lt;/code&gt; 表的 &lt;code&gt;id&lt;/code&gt; 列。如果不能从表名派生列名，则可以使用 &lt;code&gt;:column&lt;/code&gt; 和 &lt;code&gt;:primary_key&lt;/code&gt; 选项。</target>
        </trans-unit>
        <trans-unit id="60a05f3a6cca9f98fb6238843deb477cd9cad796" translate="yes" xml:space="preserve">
          <source>This affects only to constants at the same top-level as in the example above. Inner classes and modules are fine. For example, consider</source>
          <target state="translated">这只影响到上面例子中同一顶层的常量。内在的类和模块都可以。例如,考虑</target>
        </trans-unit>
        <trans-unit id="4e2dcd8c78d123694cdc898d64bdad9a27b9c90e" translate="yes" xml:space="preserve">
          <source>This allows URLs for resources that otherwise would be deeply nested such as a comment on a blog post like &lt;code&gt;/posts/a-long-permalink/comments/1234&lt;/code&gt; to be shortened to just &lt;code&gt;/comments/1234&lt;/code&gt;.</source>
          <target state="translated">这允许将原本会被深深嵌套的资源的URL（例如，对 &lt;code&gt;/posts/a-long-permalink/comments/1234&lt;/code&gt; 之类的博客帖子的评论）缩短为 &lt;code&gt;/comments/1234&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1fbbd78d1edbc9056f94a963a99efae21c1fe490" translate="yes" xml:space="preserve">
          <source>This allows any character other than a slash as part of your &lt;code&gt;:id&lt;/code&gt;.</source>
          <target state="translated">这可以在您的 &lt;code&gt;:id&lt;/code&gt; 中使用除斜杠以外的任何字符。</target>
        </trans-unit>
        <trans-unit id="9ffe7a17bd47c61bf59e095fabdd612a1d05dc51" translate="yes" xml:space="preserve">
          <source>This allows for views to display rather reasonable strings while still giving developers a way to find missing translations.</source>
          <target state="translated">这使得视图可以显示相当合理的字符串,同时还能让开发人员找到丢失的翻译。</target>
        </trans-unit>
        <trans-unit id="169b5728b55d8f2e89a55edcd6e338ce067c6c35" translate="yes" xml:space="preserve">
          <source>This allows only the given tags and does a good job, even against all kinds of tricks and malformed tags.</source>
          <target state="translated">这只允许给定的标签,而且做得很好,甚至可以对付各种技巧和畸形的标签。</target>
        </trans-unit>
        <trans-unit id="0395fb7dca9e85a2a35f66131ae78f9e37ca7284" translate="yes" xml:space="preserve">
          <source>This allows you to modify application's generators from Railties.</source>
          <target state="translated">这让您可以从Railties中修改应用程序的生成器。</target>
        </trans-unit>
        <trans-unit id="6d86b60f04d2f4a95e5b1bc4a8837139c80842c7" translate="yes" xml:space="preserve">
          <source>This allows you to modify the application's middlewares from Engines.</source>
          <target state="translated">这允许你从Engines修改应用程序的中间件。</target>
        </trans-unit>
        <trans-unit id="f8f05bcc23028ab19898b67ea456aea168ee90c4" translate="yes" xml:space="preserve">
          <source>This allows you to treat instances of your models as URLs, and is a key advantage to using the resourceful style.</source>
          <target state="translated">这允许您将您的模型实例视为URL,这也是使用资源丰富风格的一个关键优势。</target>
        </trans-unit>
        <trans-unit id="816ce130adac3a79cc4bab4270b57850d3fcf1c7" translate="yes" xml:space="preserve">
          <source>This also ensures that the engine's URL helpers will work as expected in your tests.</source>
          <target state="translated">这也确保了引擎的URL帮助器在你的测试中能按照预期工作。</target>
        </trans-unit>
        <trans-unit id="1cba66decd634cfa1294c591fbbd74f27e915489" translate="yes" xml:space="preserve">
          <source>This also provides the required class methods for hooking into the Rails internationalization API, including being able to define a class based &lt;code&gt;i18n_scope&lt;/code&gt; and &lt;code&gt;lookup_ancestors&lt;/code&gt; to find translations in parent classes.</source>
          <target state="translated">这也提供了连接Rails国际化API所需的类方法，包括能够定义基于 &lt;code&gt;i18n_scope&lt;/code&gt; 和 &lt;code&gt;lookup_ancestors&lt;/code&gt; 的类以在父类中查找翻译。</target>
        </trans-unit>
        <trans-unit id="8b996e9c22a962811fb1cf6f532b74a9db521c52" translate="yes" xml:space="preserve">
          <source>This also works for links with &lt;code&gt;data-method&lt;/code&gt; attribute.</source>
          <target state="translated">这也适用于具有 &lt;code&gt;data-method&lt;/code&gt; 属性的链接。</target>
        </trans-unit>
        <trans-unit id="ef6e8eed01678ac90fee45991c411ecd73ddcee2" translate="yes" xml:space="preserve">
          <source>This also works for the methods in &lt;a href=&quot;formoptionshelper&quot;&gt;FormOptionsHelper&lt;/a&gt; and &lt;a href=&quot;datehelper&quot;&gt;DateHelper&lt;/a&gt; that are designed to work with an object as base, like &lt;a href=&quot;formoptionshelper#method-i-collection_select&quot;&gt;ActionView::Helpers::FormOptionsHelper#collection_select&lt;/a&gt; and &lt;a href=&quot;datehelper#method-i-datetime_select&quot;&gt;ActionView::Helpers::DateHelper#datetime_select&lt;/a&gt;.</source>
          <target state="translated">这也适用于&lt;a href=&quot;formoptionshelper&quot;&gt;FormOptionsHelper&lt;/a&gt;和&lt;a href=&quot;datehelper&quot;&gt;DateHelper&lt;/a&gt;中的设计为以对象为基础的方法，例如&lt;a href=&quot;formoptionshelper#method-i-collection_select&quot;&gt;ActionView :: Helpers :: FormOptionsHelper＃collection_select&lt;/a&gt;和&lt;a href=&quot;datehelper#method-i-datetime_select&quot;&gt;ActionView :: Helpers :: DateHelper＃datetime_select&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="dad4f457978053eb9daf5acf1e4a9f3fdf265a9b" translate="yes" xml:space="preserve">
          <source>This also works with polymorphic belongs_to relationships:</source>
          <target state="translated">这也适用于多态的 belongs_to 关系。</target>
        </trans-unit>
        <trans-unit id="d5f6ba7a4a34e7f2251cff43a9c1e7573db3524b" translate="yes" xml:space="preserve">
          <source>This analyzer relies on the third-party &lt;a href=&quot;https://github.com/minimagick/minimagick&quot;&gt;MiniMagick&lt;/a&gt; gem. MiniMagick requires the &lt;a href=&quot;http://www.imagemagick.org&quot;&gt;ImageMagick&lt;/a&gt; system library.</source>
          <target state="translated">该分析仪依赖于第三方&lt;a href=&quot;https://github.com/minimagick/minimagick&quot;&gt;MiniMagick&lt;/a&gt; gem。MiniMagick需要&lt;a href=&quot;http://www.imagemagick.org&quot;&gt;ImageMagick&lt;/a&gt;系统库。</target>
        </trans-unit>
        <trans-unit id="52f00403aa88e53e106009e0de6df97f83d752aa" translate="yes" xml:space="preserve">
          <source>This analyzer requires the &lt;a href=&quot;https://www.ffmpeg.org&quot;&gt;FFmpeg&lt;/a&gt; system library, which is not provided by Rails.</source>
          <target state="translated">该分析仪需要&lt;a href=&quot;https://www.ffmpeg.org&quot;&gt;FFmpeg&lt;/a&gt;系统库，而Rails没有提供。</target>
        </trans-unit>
        <trans-unit id="178263874a3e36da6c37b9c6bab0df507090c51e" translate="yes" xml:space="preserve">
          <source>This application only cares about non-archived &lt;code&gt;Articles&lt;/code&gt;. A view also allows for conditions so we can exclude the archived &lt;code&gt;Articles&lt;/code&gt; directly.</source>
          <target state="translated">此应用程序仅关注未存档的 &lt;code&gt;Articles&lt;/code&gt; 。视图还考虑了条件，因此我们可以直接排除已归档的 &lt;code&gt;Articles&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fbb4195615713af26464d308f931e815c6758a7c" translate="yes" xml:space="preserve">
          <source>This approach has almost the same set of advantages as setting the locale from the domain name: namely that it's RESTful and in accord with the rest of the World Wide Web. It does require a little bit more work to implement, though.</source>
          <target state="translated">这种方法与从域名中设置locale有几乎相同的优点:即它是RESTful的,并且与万维网的其他部分一致。但它确实需要更多的工作来实现。</target>
        </trans-unit>
        <trans-unit id="ac518fdc1a794b141c9ee5c764b7d0a65e72abcd" translate="yes" xml:space="preserve">
          <source>This approach is a decent way of keeping common structures isolated from the changing content, but it's verbose and if you ever want to change the structure of these two includes, you'll have to change all the templates.</source>
          <target state="translated">这种方法是一个不错的方法,可以让常用的结构与变化的内容隔离开来,但它很啰嗦,如果你曾经想改变这两个包含的结构,你就必须改变所有的模板。</target>
        </trans-unit>
        <trans-unit id="083d804ee4d54d82a0c32a28af65e04359fcff1c" translate="yes" xml:space="preserve">
          <source>This approach was introduced in Rails 3.1 and is still improving. Several Rack middlewares may not work and you need to be careful when streaming. Those points are going to be addressed soon.</source>
          <target state="translated">这种方法是在Rails 3.1中引入的,目前还在改进。有几个Rack中间件可能无法使用,你需要在流媒体时小心。这些点很快就会得到解决。</target>
        </trans-unit>
        <trans-unit id="ff40517e4c015abe3750405eacad85528109d988" translate="yes" xml:space="preserve">
          <source>This approach will assume that when a new topic is added, you'll touch the project. The cache key generated from this call will be something like:</source>
          <target state="translated">这种方法会假设当一个新的主题被添加时,你会触及项目。这个调用产生的缓存键会是类似于。</target>
        </trans-unit>
        <trans-unit id="a5d6787fdf71272bd07c38db318b9189fa542f61" translate="yes" xml:space="preserve">
          <source>This assertion is quite powerful. For more advanced usage, refer to its &lt;a href=&quot;https://github.com/rails/rails-dom-testing/blob/master/lib/rails/dom/testing/assertions/selector_assertions.rb&quot;&gt;documentation&lt;/a&gt;.</source>
          <target state="translated">此断言非常有力。有关更高级的用法，请参阅其&lt;a href=&quot;https://github.com/rails/rails-dom-testing/blob/master/lib/rails/dom/testing/assertions/selector_assertions.rb&quot;&gt;文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9cfc7e4fec5acb42ceb71ddc79e859833d3b0876" translate="yes" xml:space="preserve">
          <source>This attack focuses on fixing a user's session ID known to the attacker, and forcing the user's browser into using this ID. It is therefore not necessary for the attacker to steal the session ID afterwards. Here is how this attack works:</source>
          <target state="translated">这种攻击的重点是固定攻击者已知的用户会话ID,并强迫用户的浏览器使用这个ID。因此,攻击者没有必要在事后窃取会话ID。下面是这种攻击的工作原理。</target>
        </trans-unit>
        <trans-unit id="26eddff046c4367bccf2b4160ad488fd944dacf8" translate="yes" xml:space="preserve">
          <source>This attack method works by including malicious code or a link in a page that accesses a web application that the user is believed to have authenticated. If the session for that web application has not timed out, an attacker may execute unauthorized commands.</source>
          <target state="translated">这种攻击方法的工作原理是在页面中加入恶意代码或链接,以访问用户被认为已经认证的网络应用程序。如果该网络应用程序的会话没有超时,攻击者可以执行未经授权的命令。</target>
        </trans-unit>
        <trans-unit id="7c2ef301b1b88296629007f66b2d09e6d6497919" translate="yes" xml:space="preserve">
          <source>This behaves in almost the same way as outlined previously, with a couple of small exceptions. First, the prefix used to name the input elements within the form (hence the key that denotes them in the &lt;code&gt;params&lt;/code&gt; hash) is actually derived from the object's &lt;em&gt;class&lt;/em&gt;, e.g. &lt;code&gt;params[:post]&lt;/code&gt; if the object's class is &lt;code&gt;Post&lt;/code&gt;. However, this can be overwritten using the &lt;code&gt;:as&lt;/code&gt; option, e.g. -</source>
          <target state="translated">这种行为几乎与前面概述的行为相同，但有一些小例外。首先，用于命名表单中输入元素的前缀（因此，在 &lt;code&gt;params&lt;/code&gt; 哈希中表示它们的键）实际上是从对象的&lt;em&gt;类&lt;/em&gt;派生的，例如，如果对象的类是 &lt;code&gt;Post&lt;/code&gt; ,则是 &lt;code&gt;params[:post]&lt;/code&gt; 。但是，可以使用 &lt;code&gt;:as&lt;/code&gt; 选项将其覆盖，例如-</target>
        </trans-unit>
        <trans-unit id="67a66d6b894fc0bbba09d5ce93524db577ffd0b9" translate="yes" xml:space="preserve">
          <source>This behavior can also be achieved by setting the &lt;code&gt;:root&lt;/code&gt; option to &lt;code&gt;true&lt;/code&gt; as in:</source>
          <target state="translated">也可以通过将 &lt;code&gt;:root&lt;/code&gt; 选项设置为 &lt;code&gt;true&lt;/code&gt; 来实现此行为，如下所示：</target>
        </trans-unit>
        <trans-unit id="c08ec7492a186db0a6dc03b4455535acc56cf848" translate="yes" xml:space="preserve">
          <source>This behavior can be turned off by setting &lt;code&gt;ActiveRecord::Base.lock_optimistically = false&lt;/code&gt;.</source>
          <target state="translated">可以通过设置 &lt;code&gt;ActiveRecord::Base.lock_optimistically = false&lt;/code&gt; 来关闭此行为。</target>
        </trans-unit>
        <trans-unit id="3259504ed753df77d38d003df0fcaded9e585a6d" translate="yes" xml:space="preserve">
          <source>This behavior can be turned off by setting &lt;code&gt;ActiveRecord::Base.lock_optimistically = false&lt;/code&gt;. To override the name of the &lt;code&gt;lock_version&lt;/code&gt; column, set the &lt;code&gt;locking_column&lt;/code&gt; class attribute:</source>
          <target state="translated">可以通过设置 &lt;code&gt;ActiveRecord::Base.lock_optimistically = false&lt;/code&gt; 来关闭此行为。要覆盖 &lt;code&gt;lock_version&lt;/code&gt; 列的名称，请设置 &lt;code&gt;locking_column&lt;/code&gt; 类属性：</target>
        </trans-unit>
        <trans-unit id="a52b704c0982fe827b6f05b12131c956b0897af8" translate="yes" xml:space="preserve">
          <source>This behavior was never intentionally supported. Due to a change in the internals of &lt;code&gt;ActiveSupport::Callbacks&lt;/code&gt;, this is no longer allowed in Rails 4.1. Using a &lt;code&gt;return&lt;/code&gt; statement in an inline callback block causes a &lt;code&gt;LocalJumpError&lt;/code&gt; to be raised when the callback is executed.</source>
          <target state="translated">从未有意支持此行为。由于 &lt;code&gt;ActiveSupport::Callbacks&lt;/code&gt; 内部的更改，因此Rails 4.1中不再允许这样做。 &lt;code&gt;LocalJumpError&lt;/code&gt; 联回调块中使用 &lt;code&gt;return&lt;/code&gt; 语句会导致在执行回调时引发LocalJumpError。</target>
        </trans-unit>
        <trans-unit id="4d9554f238af713f51cb9ef0b3e35cb8707f5c32" translate="yes" xml:space="preserve">
          <source>This cache does implement the local cache strategy, so values will actually be cached inside blocks that utilize this strategy. See &lt;a href=&quot;strategy/localcache&quot;&gt;ActiveSupport::Cache::Strategy::LocalCache&lt;/a&gt; for more details.</source>
          <target state="translated">该缓存确实实现了本地缓存策略，因此值实际上将缓存在利用该策略的块内。有关更多详细信息，请参见&lt;a href=&quot;strategy/localcache&quot;&gt;ActiveSupport :: Cache :: Strategy :: LocalCache&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4af85cab0bdc6c15dddd5640088731511962fad2" translate="yes" xml:space="preserve">
          <source>This cache has a bounded size specified by the :size options to the initializer (default is 32Mb). When the cache exceeds the allotted size, a cleanup will occur which tries to prune the cache down to three quarters of the maximum size by removing the least recently used entries.</source>
          <target state="translated">这个缓存的大小由初始化器的:size选项指定(默认为32Mb)。当缓存超过分配的大小时,将进行一次清理,通过删除最近使用最少的条目,试图将缓存缩减到最大大小的四分之三。</target>
        </trans-unit>
        <trans-unit id="0373bb4d447d2e34759c0046345dcabe712d09e8" translate="yes" xml:space="preserve">
          <source>This cache key is stable, but it's combined with a cache version derived from the project record. When the project updated_at is touched, the cache_version changes, even if the key stays stable. This means that unlike a traditional key-based cache expiration approach, you won't be generating cache trash, unused keys, simply because the dependent record is updated.</source>
          <target state="translated">这个缓存键是稳定的,但它与从项目记录中导出的缓存版本相结合。当触及项目update_at时,cache_version会改变,即使key保持稳定。这意味着与传统的基于键的缓存过期方式不同,你不会仅仅因为依赖的记录被更新而产生缓存垃圾、未使用的键。</target>
        </trans-unit>
        <trans-unit id="a3de3e1459212e74dd738cfc7a292806b2904cef" translate="yes" xml:space="preserve">
          <source>This cache store implementation is meant to be used only in development or test environments and it never stores anything. This can be very useful in development when you have code that interacts directly with &lt;code&gt;Rails.cache&lt;/code&gt; but caching may interfere with being able to see the results of code changes. With this cache store, all &lt;code&gt;fetch&lt;/code&gt; and &lt;code&gt;read&lt;/code&gt; operations will result in a miss.</source>
          <target state="translated">此高速缓存存储实现旨在仅在开发或测试环境中使用，并且从不存储任何内容。当您具有直接与 &lt;code&gt;Rails.cache&lt;/code&gt; 交互的代码时，这在开发中非常有用，但是缓存可能会干扰能够查看代码更改的结果。使用此缓存存储，所有 &lt;code&gt;fetch&lt;/code&gt; 和 &lt;code&gt;read&lt;/code&gt; 操作都将导致未命中。</target>
        </trans-unit>
        <trans-unit id="7ccf1d587a45dbc8a554ddbd617f0e45952f2f5c" translate="yes" xml:space="preserve">
          <source>This cache store keeps entries in memory in the same Ruby process. The cache store has a bounded size specified by sending the &lt;code&gt;:size&lt;/code&gt; option to the initializer (default is 32Mb). When the cache exceeds the allotted size, a cleanup will occur and the least recently used entries will be removed.</source>
          <target state="translated">该缓存存储将条目在同一Ruby进程中保存在内存中。通过将 &lt;code&gt;:size&lt;/code&gt; 选项发送到初始值设定项，高速缓存存储具有限制大小（默认值为32Mb）。当缓存超过分配的大小时，将进行清理并删除最近最少使用的条目。</target>
        </trans-unit>
        <trans-unit id="388ac868d2b01f20b533b918207279903e2cb5cb" translate="yes" xml:space="preserve">
          <source>This cache store uses Danga's &lt;code&gt;memcached&lt;/code&gt; server to provide a centralized cache for your application. Rails uses the bundled &lt;code&gt;dalli&lt;/code&gt; gem by default. This is currently the most popular cache store for production websites. It can be used to provide a single, shared cache cluster with very high performance and redundancy.</source>
          <target state="translated">该缓存存储区使用Danga的 &lt;code&gt;memcached&lt;/code&gt; 服务器为您的应用程序提供集中式缓存。Rails 默认使用捆绑的 &lt;code&gt;dalli&lt;/code&gt; 宝石。这是目前最流行的生产网站缓存存储。它可用于提供具有非常高的性能和冗余的单个共享缓存群集。</target>
        </trans-unit>
        <trans-unit id="0566a25ae6f6a9472adf73ecbb7e5dda0a17bcca" translate="yes" xml:space="preserve">
          <source>This cache store uses the file system to store entries. The path to the directory where the store files will be stored must be specified when initializing the cache.</source>
          <target state="translated">该缓存存储使用文件系统来存储条目。在初始化缓存时必须指定存储文件的目录路径。</target>
        </trans-unit>
        <trans-unit id="89267dbc248cb731eb2d1a1aa2d771f7d17b1cbb" translate="yes" xml:space="preserve">
          <source>This calculates aggregate values in the given column. Methods for &lt;a href=&quot;calculations#method-i-count&quot;&gt;count&lt;/a&gt;, &lt;a href=&quot;calculations#method-i-sum&quot;&gt;sum&lt;/a&gt;, &lt;a href=&quot;calculations#method-i-average&quot;&gt;average&lt;/a&gt;, &lt;a href=&quot;calculations#method-i-minimum&quot;&gt;minimum&lt;/a&gt;, and &lt;a href=&quot;calculations#method-i-maximum&quot;&gt;maximum&lt;/a&gt; have been added as shortcuts.</source>
          <target state="translated">这将计算给定列中的合计值。为方法&lt;a href=&quot;calculations#method-i-count&quot;&gt;计数&lt;/a&gt;，&lt;a href=&quot;calculations#method-i-sum&quot;&gt;求和&lt;/a&gt;，&lt;a href=&quot;calculations#method-i-average&quot;&gt;平均值&lt;/a&gt;，&lt;a href=&quot;calculations#method-i-minimum&quot;&gt;最小值&lt;/a&gt;和&lt;a href=&quot;calculations#method-i-maximum&quot;&gt;最大值&lt;/a&gt;已被添加为快捷方式。</target>
        </trans-unit>
        <trans-unit id="9ffa6b5aa194b5a903a7cec22dee641ecbe72e3d" translate="yes" xml:space="preserve">
          <source>This callback is called after a create, update, or destroy are rolled back.</source>
          <target state="translated">这个回调在创建、更新或销毁回滚后被调用。</target>
        </trans-unit>
        <trans-unit id="37fe6b80052055ab7637e148a60bea110c169889" translate="yes" xml:space="preserve">
          <source>This callback is called after a record has been created, updated, or destroyed.</source>
          <target state="translated">这个回调在记录被创建、更新或销毁后被调用。</target>
        </trans-unit>
        <trans-unit id="defe3820d51a833c36bb81d4e57ec474ae3d5b6d" translate="yes" xml:space="preserve">
          <source>This can be changed to something else:</source>
          <target state="translated">这个可以改成别的。</target>
        </trans-unit>
        <trans-unit id="d0c1d3e6298a06134e6fae092232abf7b7d3efde" translate="yes" xml:space="preserve">
          <source>This can be done with a symbol pointing to a method:</source>
          <target state="translated">这可以用一个指向方法的符号来完成。</target>
        </trans-unit>
        <trans-unit id="df03ee101966c8c961da22afa45c21da5e0c4429" translate="yes" xml:space="preserve">
          <source>This can be helpful for example, when we want to put views inside a different directory for subdomains.</source>
          <target state="translated">例如,当我们想把子域的视图放在不同的目录中时,这就很有帮助。</target>
        </trans-unit>
        <trans-unit id="10cab613965fd1c02ce409a4b182febf3b64e9fd" translate="yes" xml:space="preserve">
          <source>This can be turned off per-association with &lt;code&gt;optional: true&lt;/code&gt;.</source>
          <target state="translated">可以通过 &lt;code&gt;optional: true&lt;/code&gt; 关闭每个关联。</target>
        </trans-unit>
        <trans-unit id="5547f6f44a505672230e52eb4c6b3b85e0a28135" translate="yes" xml:space="preserve">
          <source>This can be used in situations similar to the &lt;code&gt;MessageVerifier&lt;/code&gt;, but where you don't want users to be able to determine the value of the payload.</source>
          <target state="translated">可以在类似于 &lt;code&gt;MessageVerifier&lt;/code&gt; 的情况下使用此方法，但是您不希望用户能够确定有效负载的值。</target>
        </trans-unit>
        <trans-unit id="a7c433cc9b8bb7f780bd77fd5adc7fd9d594fc49" translate="yes" xml:space="preserve">
          <source>This can be used to provide a default set of options in the standard way: before rendering the create form, a new model instance is assigned the default options and bound to @model_name. Usually this model is not saved to the database. Instead, a second model object is created when the create request is received. This allows the user to submit a form page more than once with the expected results of creating multiple records. In addition, this allows a single partial to be used to generate form inputs for both edit and create forms.</source>
          <target state="translated">这可以用来以标准的方式提供一组默认的选项:在渲染创建表单之前,一个新的模型实例被分配了默认的选项并绑定到@model_name。通常这个模型不会保存到数据库中。相反,当收到创建请求时,会创建第二个模型对象。这样,用户就可以不止一次地提交表单页面,并达到创建多条记录的预期效果。此外,这还允许用一个局部来生成编辑和创建表单的表单输入。</target>
        </trans-unit>
        <trans-unit id="20fd39e13a1ad74ab7643003c0fde1438cfd148c" translate="yes" xml:space="preserve">
          <source>This can be useful to trigger an action on check-boxes for instance:</source>
          <target state="translated">例如,这对于触发复选框的操作很有用。</target>
        </trans-unit>
        <trans-unit id="1b99261fbdf6a8235da55f083e6bb197be6d56f4" translate="yes" xml:space="preserve">
          <source>This can make for more readable code in complex queries.</source>
          <target state="translated">这可以使复杂的查询中的代码更具可读性。</target>
        </trans-unit>
        <trans-unit id="54605430802e84d1831139f18e6c1d40c8ddad87" translate="yes" xml:space="preserve">
          <source>This can now be used in combination with the &lt;code&gt;validates&lt;/code&gt; method (see &lt;code&gt;ActiveModel::Validations::ClassMethods.validates&lt;/code&gt; for more on this).</source>
          <target state="translated">现在可以将其与 &lt;code&gt;validates&lt;/code&gt; 方法结合使用（有关更多信息，请参见 &lt;code&gt;ActiveModel::Validations::ClassMethods.validates&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="9ec213fb775a672d89340314d3d84215e9fa21d5" translate="yes" xml:space="preserve">
          <source>This change applies to most places in Rails where callbacks are used, including Active Record and Active Model callbacks, as well as filters in Action Controller (e.g. &lt;code&gt;before_action&lt;/code&gt;).</source>
          <target state="translated">此更改适用于Rails中使用回调的大多数位置，包括Active Record和Active Model回调以及Action Controller中的过滤器（例如 &lt;code&gt;before_action&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="bf7f4f522d5fd20445f73ba1f0c9e5a6e4a1be80" translate="yes" xml:space="preserve">
          <source>This change does require that the engine is run from a Rails application that has an &lt;code&gt;ApplicationController&lt;/code&gt;.</source>
          <target state="translated">此更改确实需要从具有 &lt;code&gt;ApplicationController&lt;/code&gt; 的Rails应用程序中运行引擎。</target>
        </trans-unit>
        <trans-unit id="6246e1eade5d1936db2b494cfe6f3517dfa5627f" translate="yes" xml:space="preserve">
          <source>This changes the column &lt;code&gt;part_number&lt;/code&gt; on products table to be a &lt;code&gt;:text&lt;/code&gt; field. Note that &lt;code&gt;change_column&lt;/code&gt; command is irreversible.</source>
          <target state="translated">这会将products表上的 &lt;code&gt;part_number&lt;/code&gt; 列更改为 &lt;code&gt;:text&lt;/code&gt; 字段。请注意， &lt;code&gt;change_column&lt;/code&gt; 命令是不可逆的。</target>
        </trans-unit>
        <trans-unit id="ea6bff9c8fbed3084ac15b58575f1083d35a6b6a" translate="yes" xml:space="preserve">
          <source>This chapter describes some particular attacks related to sessions, and security measures to protect your session data.</source>
          <target state="translated">本章介绍了一些与会话有关的特殊攻击,以及保护会话数据的安全措施。</target>
        </trans-unit>
        <trans-unit id="3e2c13dd6ef7285c1ea44eb1bf4a57d328e8be33" translate="yes" xml:space="preserve">
          <source>This check is performed only if &lt;code&gt;email_confirmation&lt;/code&gt; is not &lt;code&gt;nil&lt;/code&gt;. To require confirmation, make sure to add a presence check for the confirmation attribute (we'll take a look at &lt;code&gt;presence&lt;/code&gt; later on in this guide):</source>
          <target state="translated">仅当 &lt;code&gt;email_confirmation&lt;/code&gt; 不为 &lt;code&gt;nil&lt;/code&gt; 时,才执行此检查。为了要求确认，确保添加存在确认的确认属性（我们将看看 &lt;code&gt;presence&lt;/code&gt; 稍后本指南中）：</target>
        </trans-unit>
        <trans-unit id="b7244a9e77f60322a06cb51172c087b32c03c595" translate="yes" xml:space="preserve">
          <source>This check is performed only if &lt;code&gt;terms_of_service&lt;/code&gt; is not &lt;code&gt;nil&lt;/code&gt;. The default error message for this helper is &lt;em&gt;&quot;must be accepted&quot;&lt;/em&gt;. You can also pass custom message via the &lt;code&gt;message&lt;/code&gt; option.</source>
          <target state="translated">仅当 &lt;code&gt;terms_of_service&lt;/code&gt; 不为 &lt;code&gt;nil&lt;/code&gt; 时,才执行此检查。此帮助程序的默认错误消息是&lt;em&gt;&amp;ldquo;必须接受&amp;rdquo;&lt;/em&gt;。您还可以通过 &lt;code&gt;message&lt;/code&gt; 选项传递自定义消息。</target>
        </trans-unit>
        <trans-unit id="b15eea6dcda175bfc691935b655fc49e802c80bc" translate="yes" xml:space="preserve">
          <source>This class delegates unknown methods to the &lt;code&gt;association&lt;/code&gt;'s relation class via a delegate cache.</source>
          <target state="translated">此类通过委托缓存将未知方法委托给 &lt;code&gt;association&lt;/code&gt; 的关系类。</target>
        </trans-unit>
        <trans-unit id="8b14936ad9e5501d96b8fca38cc9b05f1a24609c" translate="yes" xml:space="preserve">
          <source>This class encapsulates a result returned from calling &lt;a href=&quot;connectionadapters/databasestatements#method-i-exec_query&quot;&gt;#exec_query&lt;/a&gt; on any database connection adapter. For example:</source>
          <target state="translated">此类封装了从任何数据库连接适配器上调用&lt;a href=&quot;connectionadapters/databasestatements#method-i-exec_query&quot;&gt;#exec_query&lt;/a&gt;返回的结果。例如：</target>
        </trans-unit>
        <trans-unit id="6a515bde8d597367a933ea4dac5a1b32dd7ac44a" translate="yes" xml:space="preserve">
          <source>This class is then used like this:</source>
          <target state="translated">这个类就这样使用。</target>
        </trans-unit>
        <trans-unit id="e745f48ae13b0f2f92bb4804d64ffe95c402b630" translate="yes" xml:space="preserve">
          <source>This class is used by Rails to reload the I18n framework whenever they are changed upon a new request.</source>
          <target state="translated">这个类被Rails用来在I18n框架发生变化时,在新的请求中重新加载它们。</target>
        </trans-unit>
        <trans-unit id="89c2abf913a3e97d7ab6873e3aa498a91e8f1595" translate="yes" xml:space="preserve">
          <source>This class is used to instrument the execution of a single middleware. It proxies the `call` method transparently and instruments the method call.</source>
          <target state="translated">该类用于检测单个中间件的执行。它透明地代理 &quot;call &quot;方法,并对该方法的调用进行仪器化处理。</target>
        </trans-unit>
        <trans-unit id="10fbec722834b66a788d6b29443a2bf571ae8e0f" translate="yes" xml:space="preserve">
          <source>This class is used to verify that all migrations have been run before loading a web page if &lt;code&gt;config.active_record.migration_error&lt;/code&gt; is set to :page_load</source>
          <target state="translated">如果 &lt;code&gt;config.active_record.migration_error&lt;/code&gt; 设置为：page_load，则该类用于验证在加载网页之前是否已运行所有迁移。</target>
        </trans-unit>
        <trans-unit id="3375c7ae74f396d65ca403824619d59f9d3ed1c4" translate="yes" xml:space="preserve">
          <source>This class method is the single entry point for the `rails notes` command.</source>
          <target state="translated">该类方法是 &quot;rails notes &quot;命令的唯一入口点。</target>
        </trans-unit>
        <trans-unit id="06babc6870f5a898792fb0a11d7b4aded32ca5b7" translate="yes" xml:space="preserve">
          <source>This class provides a &lt;a href=&quot;testcase&quot;&gt;TestCase&lt;/a&gt; for testing generators. To setup, you need just to configure the destination and set which generator is being tested:</source>
          <target state="translated">此类提供用于测试生成器的&lt;a href=&quot;testcase&quot;&gt;TestCase&lt;/a&gt;。要进行设置，您只需要配置目标并设置要测试的生成器：</target>
        </trans-unit>
        <trans-unit id="1d673ae1de282bc01ba31145580f50177bbfb8b0" translate="yes" xml:space="preserve">
          <source>This class provides the ability to write an &lt;a href=&quot;sse&quot;&gt;SSE&lt;/a&gt; (Server Sent Event) to an IO stream. The class is initialized with a stream and can be used to either write a JSON string or an object which can be converted to JSON.</source>
          <target state="translated">此类提供了将&lt;a href=&quot;sse&quot;&gt;SSE&lt;/a&gt;（服务器已发送事件）写入IO流的功能。该类使用流进行初始化，可用于编写JSON字符串或可转换为JSON的对象。</target>
        </trans-unit>
        <trans-unit id="d653286bf96aba74228548ea6351cfabd32bec75" translate="yes" xml:space="preserve">
          <source>This class provides the foundation for interacting with the cache in Rails. This is an abstract class and you cannot use it on its own. Rather you must use a concrete implementation of the class tied to a storage engine. Rails ships with several implementations documented below.</source>
          <target state="translated">这个类提供了在Rails中与缓存交互的基础。这是一个抽象的类,您不能单独使用它,而是必须使用该类的具体实现与存储引擎绑定。相反,您必须使用与存储引擎绑定的该类的具体实现。Rails提供了以下几种实现。</target>
        </trans-unit>
        <trans-unit id="e2791de68eb0237bebce0392853ff57de3ef9058" translate="yes" xml:space="preserve">
          <source>This code fetches data from &quot;/test&quot;, and then appends the result to the &lt;code&gt;div&lt;/code&gt; with an id of &lt;code&gt;results&lt;/code&gt;.</source>
          <target state="translated">此代码从&amp;ldquo; / test&amp;rdquo;获取数据，然后将结果与 &lt;code&gt;results&lt;/code&gt; ID 附加到 &lt;code&gt;div&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="439c06bad781236bd049a3c068a21f302a3bce89" translate="yes" xml:space="preserve">
          <source>This code is highly preferable:</source>
          <target state="translated">这个代码是非常可取的。</target>
        </trans-unit>
        <trans-unit id="cf500c3c8a7fb537a497a92b60a34ceaa06c8c29" translate="yes" xml:space="preserve">
          <source>This code looks fine at the first sight. But the problem lies within the total number of queries executed. The above code executes 1 (to find 10 clients) + 10 (one per each client to load the address) = &lt;strong&gt;11&lt;/strong&gt; queries in total.</source>
          <target state="translated">乍一看，这段代码看起来不错。但是问题出在执行查询的总数之内。上面的代码执行1（查找10个客户端）+ 10（每个客户端一个以加载地址）= &lt;strong&gt;11个&lt;/strong&gt;查询。</target>
        </trans-unit>
        <trans-unit id="94727cfd4a995038a6f1da663151e279ae86383c" translate="yes" xml:space="preserve">
          <source>This code will generate SQL like this:</source>
          <target state="translated">这段代码将生成这样的SQL。</target>
        </trans-unit>
        <trans-unit id="609b7ef302631f417d6afac2da186c9c6f9548f6" translate="yes" xml:space="preserve">
          <source>This code will use &lt;code&gt;my_engine.user_path(@user)&lt;/code&gt; to generate the proper route.</source>
          <target state="translated">此代码将使用 &lt;code&gt;my_engine.user_path(@user)&lt;/code&gt; 生成正确的路由。</target>
        </trans-unit>
        <trans-unit id="03f95dc3ccc6c6e45151da4a754073b4b3149c7e" translate="yes" xml:space="preserve">
          <source>This command can be nested.</source>
          <target state="translated">这个命令可以嵌套。</target>
        </trans-unit>
        <trans-unit id="317442b797232f02be324b4b9ed468f79d4b6182" translate="yes" xml:space="preserve">
          <source>This command is very helpful when you are debugging concurrent threads and need to verify that there are no race conditions in your code.</source>
          <target state="translated">当你在调试并发线程时,需要验证代码中是否存在竞赛条件时,这个命令非常有用。</target>
        </trans-unit>
        <trans-unit id="80915cd9dc7fff63ca68cba70bb9384809be5f0d" translate="yes" xml:space="preserve">
          <source>This command will generate four files:</source>
          <target state="translated">该命令将生成四个文件。</target>
        </trans-unit>
        <trans-unit id="aaf37d0a8579b15595338a15aa94e5e3da392a0c" translate="yes" xml:space="preserve">
          <source>This command will generate the &lt;code&gt;Thud&lt;/code&gt; application, and then apply the template to the generated output.</source>
          <target state="translated">此命令将生成 &lt;code&gt;Thud&lt;/code&gt; 应用程序，然后将模板应用于生成的输出。</target>
        </trans-unit>
        <trans-unit id="f52a782529b26434e43d41b8c11a9a9cfdc35964" translate="yes" xml:space="preserve">
          <source>This command will output this information:</source>
          <target state="translated">该命令将输出这些信息。</target>
        </trans-unit>
        <trans-unit id="a039ae63928ac7a4161c7e1c8a87a8c773703cc0" translate="yes" xml:space="preserve">
          <source>This command, when run for the first time, will copy over all the migrations from the engine. When run the next time, it will only copy over migrations that haven't been copied over already. The first run for this command will output something such as this:</source>
          <target state="translated">这个命令,当第一次运行时,将复制引擎中所有的迁移。当下一次运行时,它将只复制尚未被复制的迁移。这个命令的第一次运行将输出这样的结果。</target>
        </trans-unit>
        <trans-unit id="29574f91239ed2bd7e7687ebc2466676ea941217" translate="yes" xml:space="preserve">
          <source>This cookie-based session store is the Rails default. It is dramatically faster than the alternatives.</source>
          <target state="translated">这种基于cookie的会话存储是Rails的默认值。它的速度要比其他替代方案快得多。</target>
        </trans-unit>
        <trans-unit id="0f29bcb1394a4dcda50076f5e42fc7bab69c9328" translate="yes" xml:space="preserve">
          <source>This could be in a search action and the user may enter a project's name that they want to find. If a malicious user enters ' OR 1 --, the resulting SQL query will be:</source>
          <target state="translated">这可能是在一个搜索动作中,用户可能会输入一个他们想要找到的项目名称。如果恶意用户输入'或1--,则产生的SQL查询将是:</target>
        </trans-unit>
        <trans-unit id="b6f2af4b75cb550178bf327f34ea5f78eeb3ae43" translate="yes" xml:space="preserve">
          <source>This covers various different error types so we need to do additional work to classify the exception definitively as a &lt;a href=&quot;../preparedstatementcacheexpired&quot;&gt;ActiveRecord::PreparedStatementCacheExpired&lt;/a&gt;</source>
          <target state="translated">这涵盖了各种不同的错误类型，因此我们需要做其他工作才能将异常明确地分类为&lt;a href=&quot;../preparedstatementcacheexpired&quot;&gt;ActiveRecord :: PreparedStatementCacheExpired&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cfbd0fc027f2d942dcd37f52b54d341c33610053" translate="yes" xml:space="preserve">
          <source>This creates &lt;code&gt;comments&lt;/code&gt; as a &lt;em&gt;nested resource&lt;/em&gt; within &lt;code&gt;articles&lt;/code&gt;. This is another part of capturing the hierarchical relationship that exists between articles and comments.</source>
          <target state="translated">这将创建 &lt;code&gt;comments&lt;/code&gt; 为&lt;em&gt;嵌套的资源&lt;/em&gt;内 &lt;code&gt;articles&lt;/code&gt; 。这是捕获文章和评论之间存在的层次关系的另一部分。</target>
        </trans-unit>
        <trans-unit id="c7356600fd1f688811cf440fec9ea49752e6e17d" translate="yes" xml:space="preserve">
          <source>This creates a nested route for the comments, which is what the form requires.</source>
          <target state="translated">这就为注释创建了一个嵌套的路径,这也是表格所要求的。</target>
        </trans-unit>
        <trans-unit id="63dfbd8fca59aadbfe204eda34786ba63a06f05d" translate="yes" xml:space="preserve">
          <source>This creates an &lt;code&gt;addresses_attributes=&lt;/code&gt; method on &lt;code&gt;Person&lt;/code&gt; that allows you to create, update, and (optionally) destroy addresses.</source>
          <target state="translated">这将在 &lt;code&gt;Person&lt;/code&gt; 上创建一个 &lt;code&gt;addresses_attributes=&lt;/code&gt; 方法，使您可以创建，更新和（可选）销毁地址。</target>
        </trans-unit>
        <trans-unit id="276f47aa29131225538db3d8071790e1bff8765e" translate="yes" xml:space="preserve">
          <source>This creates four files and one empty directory:</source>
          <target state="translated">这将创建四个文件和一个空目录。</target>
        </trans-unit>
        <trans-unit id="3da8fb6ede4e8e8b624b7d2eca6665c6b62a8a50" translate="yes" xml:space="preserve">
          <source>This creates six different routes in your application, all mapping to the &lt;code&gt;Profiles&lt;/code&gt; controller (note that the controller is named after the plural):</source>
          <target state="translated">这将在您的应用程序中创建6条不同的路由，所有路由都映射到 &lt;code&gt;Profiles&lt;/code&gt; 控制器（请注意，该控制器以复数形式命名）：</target>
        </trans-unit>
        <trans-unit id="436d0c20e5818a9b9c8fa494d96cca999be2cca7" translate="yes" xml:space="preserve">
          <source>This custom store must be defined as &lt;code&gt;ActionDispatch::Session::MyCustomStore&lt;/code&gt;.</source>
          <target state="translated">该自定义存储必须定义为 &lt;code&gt;ActionDispatch::Session::MyCustomStore&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7b8dcc561d8d7efc98e338e3b3a80ad10d3bd1a5" translate="yes" xml:space="preserve">
          <source>This declaration constrains the &lt;code&gt;:id&lt;/code&gt; parameter to match the supplied regular expression. So, in this case, the router would no longer match &lt;code&gt;/photos/1&lt;/code&gt; to this route. Instead, &lt;code&gt;/photos/RR27&lt;/code&gt; would match.</source>
          <target state="translated">该声明限制 &lt;code&gt;:id&lt;/code&gt; 参数匹配提供的正则表达式。因此，在这种情况下，路由器将不再将 &lt;code&gt;/photos/1&lt;/code&gt; 与此路由匹配。相反， &lt;code&gt;/photos/RR27&lt;/code&gt; 将匹配。</target>
        </trans-unit>
        <trans-unit id="497c1b65b17c79aa75934cb1aea046a96168de6b" translate="yes" xml:space="preserve">
          <source>This declaration needs to be backed up by a corresponding foreign key column in the books table. For a brand new table, the migration might look something like this:</source>
          <target state="translated">这个声明需要在书表中有相应的外键列来支持。对于一个全新的表,迁移的过程可能是这样的。</target>
        </trans-unit>
        <trans-unit id="6243f746968a49d3dc031414f454a2f40e1698a4" translate="yes" xml:space="preserve">
          <source>This declaration permits the &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;emails&lt;/code&gt;, and &lt;code&gt;friends&lt;/code&gt; attributes. It is expected that &lt;code&gt;emails&lt;/code&gt; will be an array of permitted scalar values, and that &lt;code&gt;friends&lt;/code&gt; will be an array of resources with specific attributes: they should have a &lt;code&gt;name&lt;/code&gt; attribute (any permitted scalar values allowed), a &lt;code&gt;hobbies&lt;/code&gt; attribute as an array of permitted scalar values, and a &lt;code&gt;family&lt;/code&gt; attribute which is restricted to having a &lt;code&gt;name&lt;/code&gt; (any permitted scalar values allowed here, too).</source>
          <target state="translated">此声明允许 &lt;code&gt;name&lt;/code&gt; ， &lt;code&gt;emails&lt;/code&gt; 和 &lt;code&gt;friends&lt;/code&gt; 属性。预计 &lt;code&gt;emails&lt;/code&gt; 将是允许的标量值数组， &lt;code&gt;friends&lt;/code&gt; 将是具有特定属性的资源数组：它们应该具有 &lt;code&gt;name&lt;/code&gt; 属性（允许的任何允许的标量值）， &lt;code&gt;hobbies&lt;/code&gt; 属性作为允许的标量数组值，以及仅限于具有 &lt;code&gt;name&lt;/code&gt; 的 &lt;code&gt;family&lt;/code&gt; 属性（此处也允许任何允许的标量值）。</target>
        </trans-unit>
        <trans-unit id="01125580540f8e7b1e2bed712693ddb5855a93da" translate="yes" xml:space="preserve">
          <source>This default will be automatically configured in new applications. If existing application want to add this feature it will need to be turned on in an initializer.</source>
          <target state="translated">这个默认值将在新的应用程序中自动配置。如果现有的应用程序想要添加此功能,则需要在初始化器中开启。</target>
        </trans-unit>
        <trans-unit id="d0f91a62649f0abf238a3d6e647bdb7c716824b9" translate="yes" xml:space="preserve">
          <source>This demonstrates a shorter syntax for the examples in &lt;a href=&quot;#array-conditions&quot;&gt;Array Conditions&lt;/a&gt;</source>
          <target state="translated">这展示了&lt;a href=&quot;#array-conditions&quot;&gt;数组条件中&lt;/a&gt;示例的较短语法</target>
        </trans-unit>
        <trans-unit id="9b9d714522810170bed8f9ad10fc3d7a14c5f000" translate="yes" xml:space="preserve">
          <source>This directory contains one file, &lt;code&gt;bin/rails&lt;/code&gt;, which enables you to use the &lt;code&gt;rails&lt;/code&gt; sub-commands and generators just like you would within an application. This means that you will be able to generate new controllers and models for this engine very easily by running commands like this:</source>
          <target state="translated">该目录包含一个文件 &lt;code&gt;bin/rails&lt;/code&gt; ，使您可以像在应用程序中一样使用 &lt;code&gt;rails&lt;/code&gt; 子命令和生成器。这意味着您可以通过运行以下命令非常轻松地为此引擎生成新的控制器和模型：</target>
        </trans-unit>
        <trans-unit id="7e382df0917cb80d4e37f4a8e547e0d77496ebd2" translate="yes" xml:space="preserve">
          <source>This doesn't apply to just overrides, but anything that you add in an engine that isn't referenced by your main application.</source>
          <target state="translated">这不仅适用于覆盖,还适用于任何你在引擎中添加的、不被你的主应用程序引用的东西。</target>
        </trans-unit>
        <trans-unit id="66ba41d34d758a571b86ec9a5fbbc8545295c867" translate="yes" xml:space="preserve">
          <source>This error indicates that Rails cannot find the &lt;code&gt;new&lt;/code&gt; action inside the &lt;code&gt;ArticlesController&lt;/code&gt; that you just generated. This is because when controllers are generated in Rails they are empty by default, unless you tell it your desired actions during the generation process.</source>
          <target state="translated">该错误表明Rails 在您刚刚生成的 &lt;code&gt;ArticlesController&lt;/code&gt; 中找不到 &lt;code&gt;new&lt;/code&gt; 动作。这是因为在Rails中生成控制器时，默认情况下它们为空，除非您在生成过程中告诉它所需的操作。</target>
        </trans-unit>
        <trans-unit id="29aed8b26a416886193c5d4f05f247148454ee1b" translate="yes" xml:space="preserve">
          <source>This error is raised when trying to eager load a polymorphic association using a JOIN. Eager loading polymorphic associations is only possible with &lt;a href=&quot;querymethods#method-i-preload&quot;&gt;ActiveRecord::Relation#preload&lt;/a&gt;.</source>
          <target state="translated">尝试使用JOIN加载多态关联时会引发此错误。只能使用&lt;a href=&quot;querymethods#method-i-preload&quot;&gt;ActiveRecord :: Relation＃preload来实现预先&lt;/a&gt;加载多态关联。</target>
        </trans-unit>
        <trans-unit id="c36a009a82305ca82e7786666343739d8cbc09be" translate="yes" xml:space="preserve">
          <source>This error occurs because the route needs to have a controller defined in order to serve the request. The solution to this particular problem is simple: create a controller called &lt;code&gt;ArticlesController&lt;/code&gt;. You can do this by running this command:</source>
          <target state="translated">发生此错误的原因是，路由需要定义一个控制器才能处理请求。解决此特定问题的方法很简单：创建一个名为 &lt;code&gt;ArticlesController&lt;/code&gt; 的控制器。您可以通过运行以下命令来做到这一点：</target>
        </trans-unit>
        <trans-unit id="a6f4ec00f14631ec68ed64dac8bde9819c949665" translate="yes" xml:space="preserve">
          <source>This essentially finds the object (or multiple objects) with the given id, creates a new object from the attributes, and then calls destroy on it.</source>
          <target state="translated">这本质上是找到给定id的对象(或多个对象),从属性中创建一个新的对象,然后对其调用destroy。</target>
        </trans-unit>
        <trans-unit id="aba405a21502b349d888a3e2dc183e1fb9b1f816" translate="yes" xml:space="preserve">
          <source>This event is only used when &lt;code&gt;#fetch&lt;/code&gt; is called with a block.</source>
          <target state="translated">仅在通过块调用 &lt;code&gt;#fetch&lt;/code&gt; 时才使用此事件。</target>
        </trans-unit>
        <trans-unit id="4f2db974ddac791cd42b1da641f5b73ec9ca9508" translate="yes" xml:space="preserve">
          <source>This example illustrates this using a URL query parameter to set the locale (e.g. &lt;code&gt;http://example.com/books?locale=pt&lt;/code&gt;). With this approach, &lt;code&gt;http://localhost:3000?locale=pt&lt;/code&gt; renders the Portuguese localization, while &lt;code&gt;http://localhost:3000?locale=de&lt;/code&gt; loads a German localization.</source>
          <target state="translated">本示例使用URL查询参数设置语言环境（例如 &lt;code&gt;http://example.com/books?locale=pt&lt;/code&gt; ）对此进行了说明。使用这种方法， &lt;code&gt;http://localhost:3000?locale=pt&lt;/code&gt; 呈现葡萄牙语本地化，而 &lt;code&gt;http://localhost:3000?locale=de&lt;/code&gt; 则加载德语本地化。</target>
        </trans-unit>
        <trans-unit id="1510bec1bc7bea53e98c5c1204f7826c949f11c3" translate="yes" xml:space="preserve">
          <source>This example is a Base64 encoded JavaScript which displays a simple message box. In a redirection URL, an attacker could redirect to this URL with the malicious code in it. As a countermeasure, &lt;em&gt;do not allow the user to supply (parts of) the URL to be redirected to&lt;/em&gt;.</source>
          <target state="translated">此示例是Base64编码的JavaScript，它显示一个简单的消息框。在重定向URL中，攻击者可以将其中包含恶意代码的地址重定向到该URL。作为对策，&lt;em&gt;请勿让用户提供要重定向到的URL（的一部分）&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="94f4c2e14d707f20ff9ea8728189ed2aaed147d6" translate="yes" xml:space="preserve">
          <source>This example places a string in the flash. And of course, you can put as many as you like at a time too. If you want to pass non-primitive types, you will have to handle that in your application. Example: To show messages with links, you will have to use sanitize helper.</source>
          <target state="translated">这个例子在flash中放置一个字符串。当然,你也可以一次放多少个就放多少个。如果你想传递非原生类型,你必须在你的应用程序中进行处理。例子:如果要显示带有链接的消息,你需要在应用程序中处理这些类型。要显示带有链接的消息,你必须使用 sanitize helper.</target>
        </trans-unit>
        <trans-unit id="33ee26c948944cd253e0827af1d9031fb96bc2b4" translate="yes" xml:space="preserve">
          <source>This example pops up a message box. It will be recognized by the above sanitize() filter, though. A great tool to obfuscate and encode strings, and thus &quot;get to know your enemy&quot;, is the &lt;a href=&quot;https://hackvertor.co.uk/public&quot;&gt;Hackvertor&lt;/a&gt;. Rails' sanitize() method does a good job to fend off encoding attacks.</source>
          <target state="translated">本示例弹出一个消息框。不过，上面的sanitize（）过滤器会识别出它。&lt;a href=&quot;https://hackvertor.co.uk/public&quot;&gt;Hackvertor&lt;/a&gt;是对字符串进行模糊处理和编码，从而&amp;ldquo;了解敌人&amp;rdquo;的绝佳工具。Rails的sanitize（）方法在抵御编码攻击方面做得很好。</target>
        </trans-unit>
        <trans-unit id="230f995753ecdf35190841ba13710083ced79868" translate="yes" xml:space="preserve">
          <source>This example relies on the fact that you will already have handled authentication of the user somewhere else in your application, and that a successful authentication sets a signed cookie with the user ID.</source>
          <target state="translated">这个例子依赖于这样一个事实,即你已经在你的应用程序中的其他地方处理了用户的身份验证,而且成功的身份验证会设置一个带有用户ID的签名cookie。</target>
        </trans-unit>
        <trans-unit id="15a5d9d73c5d7ae4ea28e73bcec401952ead48a6" translate="yes" xml:space="preserve">
          <source>This example shows how you can print the instance variables defined within the current context:</source>
          <target state="translated">这个例子展示了如何打印在当前上下文中定义的实例变量。</target>
        </trans-unit>
        <trans-unit id="0f196fd922d277fe17877b9ac4b4f97dac3b1139" translate="yes" xml:space="preserve">
          <source>This example will only take money from David and give it to Mary if neither &lt;code&gt;withdrawal&lt;/code&gt; nor &lt;code&gt;deposit&lt;/code&gt; raise an exception. Exceptions will force a ROLLBACK that returns the database to the state before the transaction began. Be aware, though, that the objects will &lt;em&gt;not&lt;/em&gt; have their instance data returned to their pre-transactional state.</source>
          <target state="translated">这个例子只需要从大卫的钱，如果没有把它给玛丽 &lt;code&gt;withdrawal&lt;/code&gt; 也不 &lt;code&gt;deposit&lt;/code&gt; 引发异常。异常将强制执行ROLLBACK，使数据库返回事务开始之前的状态。但是请注意，对象&lt;em&gt;不会&lt;/em&gt;将其实例数据返回到事务前的状态。</target>
        </trans-unit>
        <trans-unit id="998fc86682bb8f42f6e558c3ce2f919dee276525" translate="yes" xml:space="preserve">
          <source>This example, again, showed that a restricted list filter is never complete. However, as custom CSS in web applications is a quite rare feature, it may be hard to find a good permitted CSS filter. &lt;em&gt;If you want to allow custom colors or images, you can allow the user to choose them and build the CSS in the web application&lt;/em&gt;. Use Rails' &lt;code&gt;sanitize()&lt;/code&gt; method as a model for a permitted CSS filter, if you really need one.</source>
          <target state="translated">此示例再次表明，受限列表过滤器永远不会完成。但是，由于Web应用程序中的自定义CSS是非常少见的功能，因此可能很难找到允许的良好CSS过滤器。&lt;em&gt;如果要允许自定义颜色或图像，则可以允许用户选择它们并在Web应用程序中构建CSS&lt;/em&gt;。如果确实需要，请使用Rails的 &lt;code&gt;sanitize()&lt;/code&gt; 方法作为允许的CSS过滤器的模型。</target>
        </trans-unit>
        <trans-unit id="e60260896b2290a3e4082126c758244aa4b88c71" translate="yes" xml:space="preserve">
          <source>This feature can be turned off completely by setting:</source>
          <target state="translated">通过设置可以完全关闭该功能。</target>
        </trans-unit>
        <trans-unit id="58ffd7a01c3b666b4a389f4b2058f3053cd26c00" translate="yes" xml:space="preserve">
          <source>This feature is accomplished by instantiating the class and storing the instance as a thread local keyed by the class name. In the example above a key &amp;ldquo;ActiveRecord::RuntimeRegistry&amp;rdquo; is stored in &lt;code&gt;Thread.current&lt;/code&gt;. The class methods proxy to said thread local instance.</source>
          <target state="translated">通过实例化该类并将实例存储为以该类名称作为键的本地线程来实现此功能。在上面的示例中，键&amp;ldquo; ActiveRecord :: RuntimeRegistry&amp;rdquo;存储在 &lt;code&gt;Thread.current&lt;/code&gt; 中。类方法代理到所述线程本地实例。</target>
        </trans-unit>
        <trans-unit id="f8fea081f4b4bbdb9c69b687c807254bad0018f2" translate="yes" xml:space="preserve">
          <source>This feature is implemented by keeping a connection pool in &lt;a href=&quot;base&quot;&gt;ActiveRecord::Base&lt;/a&gt; that is a hash indexed by the class. If a connection is requested, the &lt;a href=&quot;connectionhandling#method-i-retrieve_connection&quot;&gt;ActiveRecord::Base.retrieve_connection&lt;/a&gt; method will go up the class-hierarchy until a connection is found in the connection pool.</source>
          <target state="translated">通过将连接池保留在&lt;a href=&quot;base&quot;&gt;ActiveRecord :: Base中&lt;/a&gt;，该连接池是该类索引的哈希，可以实现此功能。如果请求连接，则&lt;a href=&quot;connectionhandling#method-i-retrieve_connection&quot;&gt;ActiveRecord :: Base.retrieve_connection&lt;/a&gt;方法将沿类层次结构上升，直到在连接池中找到连接为止。</target>
        </trans-unit>
        <trans-unit id="31c2888e43c5f2017a9d9c97fd6ad3e2f7251ed1" translate="yes" xml:space="preserve">
          <source>This file allows you to specify what npm dependencies are needed for your Rails application. This file is used by Yarn. For more information about Yarn, see the &lt;a href=&quot;https://yarnpkg.com/lang/en/&quot;&gt;Yarn website&lt;/a&gt;.</source>
          <target state="translated">该文件允许您指定Rails应用程序需要哪些npm依赖项。该文件由Yarn使用。有关Yarn的更多信息，请参见&lt;a href=&quot;https://yarnpkg.com/lang/en/&quot;&gt;Yarn网站&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0305989c7986e5a24f3563489e3f90f47e607d92" translate="yes" xml:space="preserve">
          <source>This file begins with requiring &lt;code&gt;config/application.rb&lt;/code&gt;:</source>
          <target state="translated">该文件以require &lt;code&gt;config/application.rb&lt;/code&gt; 开始：</target>
        </trans-unit>
        <trans-unit id="3fe1d94720be601d84c164eb7af0efee4c6d683a" translate="yes" xml:space="preserve">
          <source>This file contains the default Ruby version.</source>
          <target state="translated">这个文件包含默认的Ruby版本。</target>
        </trans-unit>
        <trans-unit id="d9fd5a5fc49aeb9f2dbf45033958e98349f1015c" translate="yes" xml:space="preserve">
          <source>This file is as follows:</source>
          <target state="translated">该文件如下:</target>
        </trans-unit>
        <trans-unit id="aa4586bd736ea7a04fa9074689e9c187780df338" translate="yes" xml:space="preserve">
          <source>This file is responsible for requiring all the individual frameworks of Rails:</source>
          <target state="translated">这个文件负责要求Rails的所有独立框架。</target>
        </trans-unit>
        <trans-unit id="3f7115a8bfccf5ab029f1e9f589e05ca3cf679cb" translate="yes" xml:space="preserve">
          <source>This file is the common file required by &lt;code&gt;config.ru&lt;/code&gt; (&lt;code&gt;rails server&lt;/code&gt;) and Passenger. This is where these two ways to run the server meet; everything before this point has been Rack and Rails setup.</source>
          <target state="translated">该文件是 &lt;code&gt;config.ru&lt;/code&gt; （ &lt;code&gt;rails server&lt;/code&gt; ）和Passenger 所需的公用文件。这是这两种运行服务器的方式的结合。在此之前的所有操作都已经完成了Rack and Rails的安装。</target>
        </trans-unit>
        <trans-unit id="fa57ab990e2caace5607002f73d0317305bc7d1c" translate="yes" xml:space="preserve">
          <source>This file locates and loads tasks that can be run from the command line. The task definitions are defined throughout the components of Rails. Rather than changing &lt;code&gt;Rakefile&lt;/code&gt;, you should add your own tasks by adding files to the &lt;code&gt;lib/tasks&lt;/code&gt; directory of your application.</source>
          <target state="translated">该文件查找并加载可以从命令行运行的任务。任务定义在Rails的所有组件中定义。而不是更改 &lt;code&gt;Rakefile&lt;/code&gt; ，您应该通过将文件添加到应用程序的 &lt;code&gt;lib/tasks&lt;/code&gt; 目录中来添加自己的任务。</target>
        </trans-unit>
        <trans-unit id="d53aae298230120d4306abdc660332538510a9b1" translate="yes" xml:space="preserve">
          <source>This file requires &lt;code&gt;config/boot.rb&lt;/code&gt;:</source>
          <target state="translated">该文件需要 &lt;code&gt;config/boot.rb&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="72c2d5495604ca8eac86343fba13ad817af3099a" translate="yes" xml:space="preserve">
          <source>This file tells git which files (or patterns) it should ignore. See &lt;a href=&quot;https://help.github.com/articles/ignoring-files&quot;&gt;GitHub - Ignoring files&lt;/a&gt; for more info about ignoring files.</source>
          <target state="translated">这个文件告诉git它应该忽略哪些文件（或模式）。有关&lt;a href=&quot;https://help.github.com/articles/ignoring-files&quot;&gt;忽略文件&lt;/a&gt;的更多信息，请参见GitHub-忽略文件。</target>
        </trans-unit>
        <trans-unit id="65357aa41bfbb81ea66b4c0622d92b983758d0fb" translate="yes" xml:space="preserve">
          <source>This file will change into the Rails root directory (a path two directories up from &lt;code&gt;APP_PATH&lt;/code&gt; which points at &lt;code&gt;config/application.rb&lt;/code&gt;), but only if the &lt;code&gt;config.ru&lt;/code&gt; file isn't found. This then starts up the &lt;code&gt;Rails::Server&lt;/code&gt; class.</source>
          <target state="translated">该文件将更改到Rails根目录（从 &lt;code&gt;APP_PATH&lt;/code&gt; 到两个目录的路径，该目录指向 &lt;code&gt;config/application.rb&lt;/code&gt; ），但前提是未找到 &lt;code&gt;config.ru&lt;/code&gt; 文件。然后，这将启动 &lt;code&gt;Rails::Server&lt;/code&gt; 类。</target>
        </trans-unit>
        <trans-unit id="6c6e28e5429614dda6f67b6a110b78e24406fb77" translate="yes" xml:space="preserve">
          <source>This fixture file includes two fixtures. Each YAML fixture (ie. record) is given a name and is followed by an indented list of key/value pairs in the &amp;ldquo;key: value&amp;rdquo; format. Records are separated by a blank line for your viewing pleasure.</source>
          <target state="translated">该灯具文件包括两个灯具。每个YAML固定装置（即记录）都有一个名称，后跟一个缩进的键/值对列表，格式为&amp;ldquo;键：值&amp;rdquo;。记录以空行分隔，以供您查看。</target>
        </trans-unit>
        <trans-unit id="beda4d528d768322473cee2e8a786e2bd1fad71e" translate="yes" xml:space="preserve">
          <source>This functionality is enabled in &lt;code&gt;config/initializers/wrap_parameters.rb&lt;/code&gt; and can be customized.</source>
          <target state="translated">可以在 &lt;code&gt;config/initializers/wrap_parameters.rb&lt;/code&gt; 中启用此功能，并且可以对其进行自定义。</target>
        </trans-unit>
        <trans-unit id="83588c310e0a08fd376975dc292ffb18e9f833d5" translate="yes" xml:space="preserve">
          <source>This generates a form with:</source>
          <target state="translated">这将生成一个表格,其中包括:</target>
        </trans-unit>
        <trans-unit id="aab15c3a0e4f00f5929d24d9ee064f50f46b76a0" translate="yes" xml:space="preserve">
          <source>This generates helpers such as &lt;code&gt;account_projects_path&lt;/code&gt;, just like &lt;code&gt;resources&lt;/code&gt; does. The difference here being that the routes generated are like /:account_id/projects, rather than /accounts/:account_id/projects.</source>
          <target state="translated">就像 &lt;code&gt;resources&lt;/code&gt; 一样，这会生成诸如 &lt;code&gt;account_projects_path&lt;/code&gt; 之类的帮助器。区别在于生成的路由类似于/：account_id / projects，而不是/ accounts /：account_id / projects。</target>
        </trans-unit>
        <trans-unit id="0db56c455f2669ea2ea56963dfa8f4c0c2837ae9" translate="yes" xml:space="preserve">
          <source>This generates the URL &amp;ldquo;/basket#items&amp;rdquo; because when the last item in an array passed to &lt;code&gt;polymorphic_url&lt;/code&gt; is a hash then it's treated as options to the URL helper that gets called.</source>
          <target state="translated">这将生成URL&amp;ldquo; / basket＃items&amp;rdquo;，因为当数组中传递给 &lt;code&gt;polymorphic_url&lt;/code&gt; 的最后一个项目是哈希时，它将被视为要调用的URL帮助器的选项。</target>
        </trans-unit>
        <trans-unit id="3cf3bc289cb71e75637c206fd3f7776af8578ba9" translate="yes" xml:space="preserve">
          <source>This generates the following comments routes:</source>
          <target state="translated">这样就会产生以下评论路线。</target>
        </trans-unit>
        <trans-unit id="5071c02b398382fbb15b3f9ca7e61a2acce29dda" translate="yes" xml:space="preserve">
          <source>This generates the following routes:</source>
          <target state="translated">这将产生以下路线。</target>
        </trans-unit>
        <trans-unit id="428127dc11bba63a8e3e622eab698160a7e7c03e" translate="yes" xml:space="preserve">
          <source>This generates the following:</source>
          <target state="translated">这就产生了以下结果:</target>
        </trans-unit>
        <trans-unit id="201ac36a5603e55b0818de07410e97cb099ce89b" translate="yes" xml:space="preserve">
          <source>This generates, among other things, the method &lt;code&gt;users_path&lt;/code&gt;. By default, this method is accessible from your controllers, views and mailers. If you need to access this auto-generated method from other places (such as a model), then you can do that by including &lt;a href=&quot;../../rails#method-c-application&quot;&gt;Rails.application&lt;/a&gt;.routes.url_helpers in your class:</source>
          <target state="translated">这将生成方法 &lt;code&gt;users_path&lt;/code&gt; 等。默认情况下，可以从控制器，视图和邮件程序访问此方法。如果您需要从其他地方（例如模型）访问此自动生成的方法，则可以通过在类中包含&lt;a href=&quot;../../rails#method-c-application&quot;&gt;Rails.application&lt;/a&gt; .routes.url_helpers来实现：</target>
        </trans-unit>
        <trans-unit id="7634c823f94cb03785b418ddea129d64980f0405" translate="yes" xml:space="preserve">
          <source>This generates:</source>
          <target state="translated">这就产生了:</target>
        </trans-unit>
        <trans-unit id="590bc9b042313052c052ea8d1bb4866ac4be5f65" translate="yes" xml:space="preserve">
          <source>This generator call will generate just the necessary model files it needs, namespacing the files under a &lt;code&gt;blorgh&lt;/code&gt; directory and creating a model class called &lt;code&gt;Blorgh::Comment&lt;/code&gt;. Now run the migration to create our blorgh_comments table:</source>
          <target state="translated">该生成器调用将仅生成所需的必要模型文件，在 &lt;code&gt;blorgh&lt;/code&gt; 目录下命名文件的空间，并创建一个名为 &lt;code&gt;Blorgh::Comment&lt;/code&gt; 的模型类。现在运行迁移以创建我们的blorgh_comments表：</target>
        </trans-unit>
        <trans-unit id="80a979f8d2412c92b4eb6a2d1707e966a7196054" translate="yes" xml:space="preserve">
          <source>This generator can do much more than append a timestamp to the file name. Based on naming conventions and additional (optional) arguments it can also start fleshing out the migration.</source>
          <target state="translated">这个生成器能做的远远不止是给文件名附加一个时间戳。基于命名惯例和附加(可选)参数,它还可以开始充实迁移。</target>
        </trans-unit>
        <trans-unit id="7c3f138c5ce1030ac56fdfdd3979b21fb91940dc" translate="yes" xml:space="preserve">
          <source>This gives better control over what you want to exclude and makes it easier to create a bare controller class, instead of listing the modules required manually.</source>
          <target state="translated">这样可以更好地控制你想要排除的内容,并且可以更容易地创建一个裸控制器类,而不是手动列出所需的模块。</target>
        </trans-unit>
        <trans-unit id="439aa7feae0070429fb40c49a5397b52e268e75b" translate="yes" xml:space="preserve">
          <source>This gives better control over what you want to exclude and makes it easier to create an &lt;a href=&quot;api&quot;&gt;API&lt;/a&gt; controller class, instead of listing the modules required manually.</source>
          <target state="translated">这样可以更好地控制您要排除的内容，并使创建&lt;a href=&quot;api&quot;&gt;API&lt;/a&gt;控制器类变得更加容易，而不是手动列出所需的模块。</target>
        </trans-unit>
        <trans-unit id="28fad93f5f220028ec0e72cee51726384fb91503" translate="yes" xml:space="preserve">
          <source>This gives you quite powerful means to flexibly adjust your messages to your application's needs.</source>
          <target state="translated">这给你提供了相当强大的手段,可以根据你的应用需求灵活调整你的信息。</target>
        </trans-unit>
        <trans-unit id="f3a64ce1a2780d8966eef340f2e6e1614b37248b" translate="yes" xml:space="preserve">
          <source>This gotcha is only possible in Ruby &amp;lt; 2.5.</source>
          <target state="translated">仅在Ruby &amp;lt;2.5中才可能出现此问题。</target>
        </trans-unit>
        <trans-unit id="5182bb878f49d8cac9619f40a547e3e08d9a5683" translate="yes" xml:space="preserve">
          <source>This guide assumes a working knowledge of Rack protocol and Rack concepts such as middlewares, URL maps, and &lt;code&gt;Rack::Builder&lt;/code&gt;.</source>
          <target state="translated">本指南假定您对Rack协议和Rack概念（例如中间件，URL映射和 &lt;code&gt;Rack::Builder&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a4774f456eed4e34f3a3c0136ab930a2caec9246" translate="yes" xml:space="preserve">
          <source>This guide covers PostgreSQL specific usage of Active Record.</source>
          <target state="translated">本指南涵盖了PostgreSQL对Active Record的具体使用。</target>
        </trans-unit>
        <trans-unit id="7cb1b8a276b5f10ea1d52f8f987052c31c339438" translate="yes" xml:space="preserve">
          <source>This guide covers Rails integration with Rack and interfacing with other Rack components.</source>
          <target state="translated">本指南涵盖了Rails与Rack的集成以及与其他Rack组件的接口。</target>
        </trans-unit>
        <trans-unit id="91962cdd757e087b8150c270955e35a154fc343a" translate="yes" xml:space="preserve">
          <source>This guide covers all the associations provided by Active Record.</source>
          <target state="translated">本指南涵盖了Active Record提供的所有协会。</target>
        </trans-unit>
        <trans-unit id="fe838c8d7977efc195277609f82b5bce5de222d4" translate="yes" xml:space="preserve">
          <source>This guide covers building a Rails application that serves JSON resources to an API client, including client-side frameworks.</source>
          <target state="translated">本指南涵盖了构建一个Rails应用,为API客户端提供JSON资源,包括客户端框架。</target>
        </trans-unit>
        <trans-unit id="824a738f887c71f932df129cd76bd5308cc658af" translate="yes" xml:space="preserve">
          <source>This guide covers built-in mechanisms in Rails for testing your application.</source>
          <target state="translated">本指南涵盖了Rails中用于测试应用程序的内置机制。</target>
        </trans-unit>
        <trans-unit id="7a323687ff515a0c9940a39c6b4ca72e7d18dad0" translate="yes" xml:space="preserve">
          <source>This guide covers different ways to retrieve data from the database using Active Record.</source>
          <target state="translated">本指南涵盖了使用Active Record从数据库中检索数据的不同方法。</target>
        </trans-unit>
        <trans-unit id="4dd9a9902093fd5bffaa4576ad6f6ba8762d7d27" translate="yes" xml:space="preserve">
          <source>This guide covers getting up and running with Ruby on Rails.</source>
          <target state="translated">本指南涵盖了Ruby on Rails的启动和运行。</target>
        </trans-unit>
        <trans-unit id="9acb517d68ac00c3cb053e7f3ce868a1b8b2b5a1" translate="yes" xml:space="preserve">
          <source>This guide covers how controllers work and how they fit into the request cycle in your application. It includes sessions, filters, and cookies, data streaming, and dealing with exceptions raised by a request, among other topics.</source>
          <target state="translated">本指南涵盖了控制器的工作方式以及它们如何适应应用程序中的请求周期。它包括会话、过滤器和cookie、数据流,以及处理由请求引起的异常等主题。</target>
        </trans-unit>
        <trans-unit id="d765881a1657a1853d29fe949c944147b17b5e25" translate="yes" xml:space="preserve">
          <source>This guide covers how to add internationalization to your applications. Your application will be able to translate content to different languages, change pluralization rules, use correct date formats for each country, and so on.</source>
          <target state="translated">本指南涵盖了如何将国际化添加到您的应用程序中。您的应用程序将能够将内容翻译成不同的语言,改变复数规则,为每个国家使用正确的日期格式,等等。</target>
        </trans-unit>
        <trans-unit id="50e7508bc5ad05cf1f477c571c5124b9eb442775" translate="yes" xml:space="preserve">
          <source>This guide covers how to attach files to your Active Record models.</source>
          <target state="translated">本指南涵盖了如何将文件附加到您的Active Record模型。</target>
        </trans-unit>
        <trans-unit id="8276426b6fde15dabbfad76c8f84401ecc333d32" translate="yes" xml:space="preserve">
          <source>This guide covers how to build a plugin to extend the functionality of Rails.</source>
          <target state="translated">本指南介绍了如何构建一个插件来扩展Rails的功能。</target>
        </trans-unit>
        <trans-unit id="8309285977427ce4a96ad4a08acd7660d70d3df0" translate="yes" xml:space="preserve">
          <source>This guide covers how you can use Active Record callbacks.</source>
          <target state="translated">本指南涵盖了如何使用Active Record回调。</target>
        </trans-unit>
        <trans-unit id="34606416c459a039397543261218c9b6ca671a9a" translate="yes" xml:space="preserve">
          <source>This guide covers how you can use Active Record migrations to alter your database in a structured and organized manner.</source>
          <target state="translated">本指南涵盖了如何使用Active Record迁移来以结构化和组织化的方式改变你的数据库。</target>
        </trans-unit>
        <trans-unit id="08ad902b7bab6953b46838e27beb53d36d707105" translate="yes" xml:space="preserve">
          <source>This guide covers how you can use Active Record validations.</source>
          <target state="translated">本指南涵盖了如何使用Active Record验证。</target>
        </trans-unit>
        <trans-unit id="7effa7e7e7b66955bbafa8ebadfb443dda7fd34b" translate="yes" xml:space="preserve">
          <source>This guide covers the asset pipeline.</source>
          <target state="translated">本指南涉及资产管道。</target>
        </trans-unit>
        <trans-unit id="93ac6e01582e082652d567408c18be0117e273c3" translate="yes" xml:space="preserve">
          <source>This guide covers the association features of Active Record.</source>
          <target state="translated">本指南涵盖了Active Record的关联功能。</target>
        </trans-unit>
        <trans-unit id="100afe41a6459905b61d1d9f5545fb3b50965c51" translate="yes" xml:space="preserve">
          <source>This guide covers the basic configuration settings for a Rails application.</source>
          <target state="translated">本指南涵盖了Rails应用的基本配置设置。</target>
        </trans-unit>
        <trans-unit id="0e3f8b80f813199a5d6e17e6b233f6a57679466d" translate="yes" xml:space="preserve">
          <source>This guide covers the basic layout features of Action Controller and Action View, including rendering and redirecting, using content_for blocks, and working with partials.</source>
          <target state="translated">本指南涵盖了Action Controller和Action View的基本布局功能,包括渲染和重定向,使用content_for块,以及使用partials。</target>
        </trans-unit>
        <trans-unit id="cdd19bf75d1a9d62155ef4d129ac09db55b141bb" translate="yes" xml:space="preserve">
          <source>This guide covers the basic layout features of Action Controller and Action View.</source>
          <target state="translated">本指南涵盖了Action Controller和Action View的基本布局功能。</target>
        </trans-unit>
        <trans-unit id="034e23ae1c54fc24ae8959b2b885505a54e0e3f5" translate="yes" xml:space="preserve">
          <source>This guide covers the built-in Ajax/JavaScript functionality of Rails (and more); it will enable you to create rich and dynamic Ajax applications with ease!</source>
          <target state="translated">本指南涵盖了Rails内置的Ajax/JavaScript功能(以及更多);它将使你能够轻松创建丰富的动态Ajax应用!</target>
        </trans-unit>
        <trans-unit id="10f433a3aa200f3c61a356cbffb7de42f6e48686" translate="yes" xml:space="preserve">
          <source>This guide covers the built-in Ajax/JavaScript functionality of Rails.</source>
          <target state="translated">本指南涵盖了Rails的内置Ajax/JavaScript功能。</target>
        </trans-unit>
        <trans-unit id="5bd83b0ae5b8eb7278b2b9936769f172afddfbe3" translate="yes" xml:space="preserve">
          <source>This guide covers the command line tools provided by Rails.</source>
          <target state="translated">本指南涵盖了Rails提供的命令行工具。</target>
        </trans-unit>
        <trans-unit id="8dfa4d97908dcc8c9f28ee873de460ef4c37b3bd" translate="yes" xml:space="preserve">
          <source>This guide covers the configuration and initialization features available to Rails applications.</source>
          <target state="translated">本指南涵盖了Rails应用可用的配置和初始化功能。</target>
        </trans-unit>
        <trans-unit id="2e8d99dc655d0b682912b886433561aad79e0298" translate="yes" xml:space="preserve">
          <source>This guide covers the database query interface provided by Active Record.</source>
          <target state="translated">本指南涵盖了Active Record提供的数据库查询界面。</target>
        </trans-unit>
        <trans-unit id="18023441403b3312fbbf744a8c068a57fef52ca4" translate="yes" xml:space="preserve">
          <source>This guide covers the process of adding a brand new generator to your extension or providing an alternative to an element of a built-in Rails generator (such as providing alternative test stubs for the scaffold generator).</source>
          <target state="translated">本指南涵盖了为您的扩展添加一个全新的生成器或为内置 Rails 生成器的某个元素提供替代的过程(例如为脚手架生成器提供替代测试存根)。</target>
        </trans-unit>
        <trans-unit id="0b1068ffa96eea4fd43a7e31b9345d92877e11b7" translate="yes" xml:space="preserve">
          <source>This guide covers the use of model classes without Active Record.</source>
          <target state="translated">本指南涵盖了没有Active Record的模型类的使用。</target>
        </trans-unit>
        <trans-unit id="3cbf8c9ad246207f491d05cd6add7dde972db7fd" translate="yes" xml:space="preserve">
          <source>This guide covers the user-facing features of Rails routing.</source>
          <target state="translated">本指南涵盖了Rails路由的面向用户的功能。</target>
        </trans-unit>
        <trans-unit id="4d6b82d3b20e437146d95815dfd07d24185e6550" translate="yes" xml:space="preserve">
          <source>This guide covers the user-facing features of Rails routing. If you want to understand how to use routing in your own Rails applications, start here.</source>
          <target state="translated">本指南涵盖了Rails路由的面向用户的功能。如果您想了解如何在自己的Rails应用中使用路由,请从这里开始。</target>
        </trans-unit>
        <trans-unit id="185a1c80c4169f19105583d20e2288ddefc3e000" translate="yes" xml:space="preserve">
          <source>This guide covers using multiple databases in your application.</source>
          <target state="translated">本指南包括在您的应用程序中使用多个数据库。</target>
        </trans-unit>
        <trans-unit id="652b5dbb6ddf65ccd53f2a95d31ce66f641849b2" translate="yes" xml:space="preserve">
          <source>This guide covers using multiple databases with your Rails application.</source>
          <target state="translated">本指南涵盖了在Rails应用中使用多个数据库。</target>
        </trans-unit>
        <trans-unit id="93a53e9647fcbf5054b064a4dc02e32ccbe6e95f" translate="yes" xml:space="preserve">
          <source>This guide describes common security problems in web applications and how to avoid them with Rails.</source>
          <target state="translated">本指南介绍了Web应用中常见的安全问题,以及如何通过Rails避免这些问题。</target>
        </trans-unit>
        <trans-unit id="f4d40862790c214d79aae639b4955b93125c6139" translate="yes" xml:space="preserve">
          <source>This guide describes how to build a test-driven plugin that will:</source>
          <target state="translated">本指南介绍了如何构建一个测试驱动的插件,将。</target>
        </trans-unit>
        <trans-unit id="afcc19d49048024ff81954101df13e16cab4d3c9" translate="yes" xml:space="preserve">
          <source>This guide describes how to debug Rails applications. It covers the different ways of achieving this and how to understand what is happening &quot;behind the scenes&quot; of your code.</source>
          <target state="translated">本指南介绍了如何调试Rails应用。它涵盖了实现这一目标的不同方法,以及如何了解代码 &quot;幕后 &quot;发生的事情。</target>
        </trans-unit>
        <trans-unit id="0d495f902e31350750cbeb65b97f1d71c420feb9" translate="yes" xml:space="preserve">
          <source>This guide describes how to use Action Mailbox to receive emails.</source>
          <target state="translated">本指南介绍了如何使用Action Mailbox来接收邮件。</target>
        </trans-unit>
        <trans-unit id="e1878fb11e81d87df5af5b823baf6ec0695b1dcc" translate="yes" xml:space="preserve">
          <source>This guide describes how to use Action Mailer to send emails.</source>
          <target state="translated">本指南介绍如何使用Action Mailer发送电子邮件。</target>
        </trans-unit>
        <trans-unit id="83472dca908d6961d439bd9f1167cfa97eb62772" translate="yes" xml:space="preserve">
          <source>This guide describes how to use Action Text to handle rich text content.</source>
          <target state="translated">本指南介绍了如何使用Action Text来处理富文本内容。</target>
        </trans-unit>
        <trans-unit id="8e6695892453a4910d634829999fc532c8a05ee6" translate="yes" xml:space="preserve">
          <source>This guide describes the considerations needed and tools available when working directly with concurrency in a Rails application.</source>
          <target state="translated">本指南介绍了在Rails应用中直接使用并发性时需要的考虑因素和可用的工具。</target>
        </trans-unit>
        <trans-unit id="490892dcb79211443bc7b66a3b9e7994c1ff4270" translate="yes" xml:space="preserve">
          <source>This guide documents autoloading in &lt;code&gt;classic&lt;/code&gt; mode, which is the traditional one. If you'd like to read about &lt;code&gt;zeiwerk&lt;/code&gt; mode instead, the new one in Rails 6, please check &lt;a href=&quot;autoloading_and_reloading_constants&quot;&gt;Autoloading and Reloading Constants (Zeitwerk Mode)&lt;/a&gt;.</source>
          <target state="translated">本指南记录了 &lt;code&gt;classic&lt;/code&gt; 模式下传统模式下的自动加载。如果您想阅读有关 &lt;code&gt;zeiwerk&lt;/code&gt; 模式的信息，请使用Rails 6中的新功能，请检查&lt;a href=&quot;autoloading_and_reloading_constants&quot;&gt;自动加载和重新加载常量（Zeitwerk模式）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="432d9a11ce6b5dbf6f20370efaa72473f0784d2c" translate="yes" xml:space="preserve">
          <source>This guide documents autoloading in &lt;code&gt;zeitwerk&lt;/code&gt; mode, which is new in Rails 6. If you'd like to read about &lt;code&gt;classic&lt;/code&gt; mode instead, please check &lt;a href=&quot;autoloading_and_reloading_constants_classic_mode&quot;&gt;Autoloading and Reloading Constants (Classic Mode)&lt;/a&gt;.</source>
          <target state="translated">本指南介绍了 &lt;code&gt;zeitwerk&lt;/code&gt; 模式下的自动加载，这是Rails 6中的新增功能。如果您想阅读 &lt;code&gt;classic&lt;/code&gt; 模式，请检查&lt;a href=&quot;autoloading_and_reloading_constants_classic_mode&quot;&gt;自动加载和重新加载常量（经典模式）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="69637cb78a5aa34a1f32b1b6f5cdf63a3d67357c" translate="yes" xml:space="preserve">
          <source>This guide documents how autoloading and reloading constants work (Classic mode).</source>
          <target state="translated">本指南记录了自动加载和重新加载常数的工作原理(经典模式)。</target>
        </trans-unit>
        <trans-unit id="43b73f786044a1c7a34642999528e6c22d41fd23" translate="yes" xml:space="preserve">
          <source>This guide documents how autoloading and reloading constants work (Zeitwerk mode).</source>
          <target state="translated">本指南记录了自动加载和重新加载常数的工作原理(Zeitwerk模式)。</target>
        </trans-unit>
        <trans-unit id="46dec6c392ad85b1b1ee86096590464b5289a287" translate="yes" xml:space="preserve">
          <source>This guide documents how autoloading and reloading works in &lt;code&gt;zeitwerk&lt;/code&gt; mode.</source>
          <target state="translated">本指南记录了在 &lt;code&gt;zeitwerk&lt;/code&gt; 模式下自动加载和重新加载的工作方式。</target>
        </trans-unit>
        <trans-unit id="9ca295e3457ec79aa7f765d9d8124b28f9666bd4" translate="yes" xml:space="preserve">
          <source>This guide documents how constant autoloading and reloading works in &lt;code&gt;classic&lt;/code&gt; mode.</source>
          <target state="translated">本指南记录了 &lt;code&gt;classic&lt;/code&gt; 模式下恒定自动加载和重新加载的工作方式。</target>
        </trans-unit>
        <trans-unit id="341e4b0ec0fa25b8f2229a034b23831dd4b65189" translate="yes" xml:space="preserve">
          <source>This guide documents how that works.</source>
          <target state="translated">本指南记录了如何工作。</target>
        </trans-unit>
        <trans-unit id="c76190df026f1658510299183161369ac0bc9dfe" translate="yes" xml:space="preserve">
          <source>This guide documents the Ruby core extensions defined in Active Support.</source>
          <target state="translated">本指南记录了在Active Support中定义的Ruby核心扩展。</target>
        </trans-unit>
        <trans-unit id="baebb62e9ec086008a53e25398f1c01aa44d7a0b" translate="yes" xml:space="preserve">
          <source>This guide documents the Ruby on Rails API documentation guidelines.</source>
          <target state="translated">本指南记录了Ruby on Rails API文档指南。</target>
        </trans-unit>
        <trans-unit id="b8b7b2ecac3d057d660d162024e1457e18e08b73" translate="yes" xml:space="preserve">
          <source>This guide documents the Ruby on Rails guides guidelines.</source>
          <target state="translated">本指南记录了Ruby on Rails指南的指导方针。</target>
        </trans-unit>
        <trans-unit id="5759e595b5723fe34f3630e51b3fb63c997c7d6e" translate="yes" xml:space="preserve">
          <source>This guide documents the asset pipeline.</source>
          <target state="translated">本指南记录了资产管道。</target>
        </trans-unit>
        <trans-unit id="6332ac3de97a8b2a1e350e8ab0a99f985c7de305" translate="yes" xml:space="preserve">
          <source>This guide explains how Action Cable works, and how to use WebSockets to create real-time features.</source>
          <target state="translated">本指南解释了Action Cable如何工作,以及如何使用WebSockets创建实时功能。</target>
        </trans-unit>
        <trans-unit id="44fa006d215b1e026e404200b070b0e95dd2f507" translate="yes" xml:space="preserve">
          <source>This guide explains how to effectively use Rails to develop a JSON API application.</source>
          <target state="translated">本指南介绍了如何有效地使用Rails来开发JSON API应用。</target>
        </trans-unit>
        <trans-unit id="aced21d35e857623d9e4c983ed8d1fe3f0c5456b" translate="yes" xml:space="preserve">
          <source>This guide explains how to use the instrumentation API inside of Active Support to measure events inside of Rails and other Ruby code.</source>
          <target state="translated">本指南介绍了如何使用Active Support中的仪器API来测量Rails和其他Ruby代码中的事件。</target>
        </trans-unit>
        <trans-unit id="2047593bd3cece5b122f08b03b7b74cf1b5f0635" translate="yes" xml:space="preserve">
          <source>This guide explains how to write a mountable engine.</source>
          <target state="translated">本指南解释了如何编写一个可挂载的引擎。</target>
        </trans-unit>
        <trans-unit id="2a4ae51c1cb2d15b2f6a443eac592fce0ccea7f3" translate="yes" xml:space="preserve">
          <source>This guide explains the internals of the Rails initialization process.</source>
          <target state="translated">本指南解释了Rails初始化过程的内部结构。</target>
        </trans-unit>
        <trans-unit id="5464e7d22c76dc1fba25355fc2a7bcfaf0fcc9b3" translate="yes" xml:space="preserve">
          <source>This guide explains the internals of the initialization process in Rails. It is an extremely in-depth guide and recommended for advanced Rails developers.</source>
          <target state="translated">本指南解释了Rails中初始化过程的内部结构。这是一本极其深入的指南,推荐给高级Rails开发人员。</target>
        </trans-unit>
        <trans-unit id="469c0fa8b79d027d1bec52b5728f17bb485f5004" translate="yes" xml:space="preserve">
          <source>This guide focuses on the interaction between Controller and View in the Model-View-Controller triangle. As you know, the Controller is responsible for orchestrating the whole process of handling a request in Rails, though it normally hands off any heavy code to the Model. But then, when it's time to send a response back to the user, the Controller hands things off to the View. It's that handoff that is the subject of this guide.</source>
          <target state="translated">本指南主要介绍Model-View-Controller三角中Controller和View之间的交互。如你所知,Controller负责协调处理Rails中请求的整个过程,尽管它通常会将任何繁重的代码交给Model。但是,当需要向用户发送响应时,Controller就会把事情交给View。本指南的主题就是这种交接。</target>
        </trans-unit>
        <trans-unit id="9934e6d316077d905027240a55b8ce24c04fc1f8" translate="yes" xml:space="preserve">
          <source>This guide goes through every method call that is required to boot up the Ruby on Rails stack for a default Rails application, explaining each part in detail along the way. For this guide, we will be focusing on what happens when you execute &lt;code&gt;rails server&lt;/code&gt; to boot your app.</source>
          <target state="translated">本指南详细介绍了为默认的Rails应用程序启动Ruby on Rails堆栈所需的每个方法调用，并在此过程中详细解释了每个部分。对于本指南，我们将重点介绍执行 &lt;code&gt;rails server&lt;/code&gt; 启动应用程序时发生的情况。</target>
        </trans-unit>
        <trans-unit id="57bdbfb180878f217808961000e2406113a627b2" translate="yes" xml:space="preserve">
          <source>This guide helps in upgrading applications to latest Ruby on Rails versions.</source>
          <target state="translated">本指南有助于将应用程序升级到最新的Ruby on Rails版本。</target>
        </trans-unit>
        <trans-unit id="354229e83f9fa8df4471d69c2c88420d8e4d925e" translate="yes" xml:space="preserve">
          <source>This guide introduces techniques for debugging Ruby on Rails applications.</source>
          <target state="translated">本指南介绍了Ruby on Rails应用的调试技术。</target>
        </trans-unit>
        <trans-unit id="8491e88b3ee49cd77b5a3a0c2e2aa7eb5f308688" translate="yes" xml:space="preserve">
          <source>This guide is an introduction to Active Record.</source>
          <target state="translated">本指南是对Active Record的介绍。</target>
        </trans-unit>
        <trans-unit id="13ce5d317c4f474aa04e717a7020fd28819bc0a0" translate="yes" xml:space="preserve">
          <source>This guide is an introduction to speeding up your Rails application with caching.</source>
          <target state="translated">本指南介绍了如何通过缓存来加快Rails应用的速度。</target>
        </trans-unit>
        <trans-unit id="067ba47e605b0b184fce32b87808d9aee977c0c9" translate="yes" xml:space="preserve">
          <source>This guide is designed for beginners who want to get started with a Rails application from scratch. It does not assume that you have any prior experience with Rails.</source>
          <target state="translated">本指南是为想要从头开始使用Rails应用程序的初学者设计的。本指南并不假定您之前有任何Rails的经验。</target>
        </trans-unit>
        <trans-unit id="54fabaf69315c31c33c515465e36ba26df9a5991" translate="yes" xml:space="preserve">
          <source>This guide is not intended to be a complete documentation of available form helpers and their arguments. Please visit &lt;a href=&quot;https://edgeapi.rubyonrails.org/&quot;&gt;the Rails API documentation&lt;/a&gt; for a complete reference.</source>
          <target state="translated">本指南并非旨在提供可用的表单助手及其参数的完整文档。请访问&lt;a href=&quot;https://edgeapi.rubyonrails.org/&quot;&gt;Rails API文档&lt;/a&gt;以获取完整参考。</target>
        </trans-unit>
        <trans-unit id="dd8bc150f159e64661f27eac1d8ba8720b1b43c0" translate="yes" xml:space="preserve">
          <source>This guide provides an introduction to Action View and introduces a few of the more common view helpers.</source>
          <target state="translated">本指南提供了对Action View的介绍,并介绍了一些比较常见的视图助手。</target>
        </trans-unit>
        <trans-unit id="7aedc9d40a992664cabf83423090a4192903139b" translate="yes" xml:space="preserve">
          <source>This guide provides steps to be followed when you upgrade your applications to a newer version of Ruby on Rails. These steps are also available in individual release guides.</source>
          <target state="translated">本指南提供了将应用程序升级到Ruby on Rails较新版本时应遵循的步骤。这些步骤也可以在各个版本指南中找到。</target>
        </trans-unit>
        <trans-unit id="92b18a31864bae306411dbd35e90821c8cea2e24" translate="yes" xml:space="preserve">
          <source>This guide provides you with all you need to get started creating, enqueuing, and executing background jobs.</source>
          <target state="translated">本指南为您提供了开始创建、排队和执行后台作业所需的全部内容。</target>
        </trans-unit>
        <trans-unit id="eb7ba8e9a54d8ea88e1dcacfd7409c70005acd35" translate="yes" xml:space="preserve">
          <source>This guide provides you with all you need to get started in creating, enqueuing and executing background jobs.</source>
          <target state="translated">本指南为您提供了创建、排队和执行后台作业的全部入门知识。</target>
        </trans-unit>
        <trans-unit id="f9b82bd30aa4020b78b0e236395c82da989cf0d6" translate="yes" xml:space="preserve">
          <source>This guide provides you with all you need to get started in handling rich text content.</source>
          <target state="translated">本指南为您提供了处理富文本内容所需的所有入门知识。</target>
        </trans-unit>
        <trans-unit id="63d2970cdf1122b7787c543c509a52a7a9225e94" translate="yes" xml:space="preserve">
          <source>This guide provides you with all you need to get started in receiving emails to your application.</source>
          <target state="translated">本指南为您提供了开始接收电子邮件到您的申请所需的一切。</target>
        </trans-unit>
        <trans-unit id="a1ada7d49865a815c69da87c4c93e610d2b2ef1a" translate="yes" xml:space="preserve">
          <source>This guide provides you with all you need to get started in sending emails from and to your application, and many internals of Action Mailer. It also covers how to test your mailers.</source>
          <target state="translated">本指南为您提供了从应用程序发送电子邮件和向应用程序发送电子邮件所需的所有内容,以及Action Mailer的许多内部操作。它还包括如何测试您的邮件。</target>
        </trans-unit>
        <trans-unit id="02edb0e1d8d93191ac64d29d7cc880c86c056143" translate="yes" xml:space="preserve">
          <source>This guide should provide you with all you need to get started using model classes. Active Model allows for Action Pack helpers to interact with plain Ruby objects. Active Model also helps build custom ORMs for use outside of the Rails framework.</source>
          <target state="translated">本指南将为您提供使用模型类入门所需的全部内容。Active Model允许Action Pack助手与普通Ruby对象进行交互。Active Model还可以帮助构建自定义的ORM,以便在Rails框架之外使用。</target>
        </trans-unit>
        <trans-unit id="94d30cf066a8e6edf595e6be8f690a2bdb587d4c" translate="yes" xml:space="preserve">
          <source>This guide teaches you how to hook into the life cycle of your Active Record objects.</source>
          <target state="translated">本指南教你如何钩入你的Active Record对象的生命周期。</target>
        </trans-unit>
        <trans-unit id="317d0fb5727ba561db9a587b1d7191b396c98342" translate="yes" xml:space="preserve">
          <source>This guide teaches you how to validate the state of objects before they go into the database using Active Record's validations feature.</source>
          <target state="translated">本指南教您如何使用Active Record的验证功能在对象进入数据库之前验证它们的状态。</target>
        </trans-unit>
        <trans-unit id="728b7245e28c54a68c3a12c4eb4c1516ec1f7b59" translate="yes" xml:space="preserve">
          <source>This guide uses the word &quot;load&quot; freely to mean a given file is interpreted, but the actual mechanism can be &lt;code&gt;Kernel#load&lt;/code&gt; or &lt;code&gt;Kernel#require&lt;/code&gt; depending on that flag.</source>
          <target state="translated">本指南自由地使用&amp;ldquo;加载&amp;rdquo;一词来解释给定的文件，但是实际机制可以是 &lt;code&gt;Kernel#load&lt;/code&gt; 或 &lt;code&gt;Kernel#require&lt;/code&gt; ,具体取决于该标志。</target>
        </trans-unit>
        <trans-unit id="687e76eee10a2472d0838923e50ff39c9ef78043" translate="yes" xml:space="preserve">
          <source>This guide will get you started with models, persistence to database, and the Active Record pattern and library.</source>
          <target state="translated">本指南将让你从模型、持久化到数据库,以及Active Record模式和库开始学习。</target>
        </trans-unit>
        <trans-unit id="d54e9a9556eeab94622ebc22bc76bca217cb7e3b" translate="yes" xml:space="preserve">
          <source>This guide will walk you through the I18n API and contains a tutorial on how to internationalize a Rails application from the start.</source>
          <target state="translated">本指南将带领您了解I18n API,并包含了如何从一开始就对Rails应用进行国际化的教程。</target>
        </trans-unit>
        <trans-unit id="ebf6a56734197b7e9e648e6fa1367d918afca195" translate="yes" xml:space="preserve">
          <source>This has the downside of increasing the boot-up time, as opposed to manually requiring only the necessary files in your individual tests.</source>
          <target state="translated">这样做的缺点是增加了开机时间,而不是在你的各个测试中手动只需要必要的文件。</target>
        </trans-unit>
        <trans-unit id="98984a9e0ba46fe579cf3567990617ba8162ba51" translate="yes" xml:space="preserve">
          <source>This helper exposes a method for caching fragments of a view rather than an entire action or page. This technique is useful caching pieces like menus, lists of new topics, static HTML fragments, and so on. This method takes a block that contains the content you wish to cache.</source>
          <target state="translated">这个助手提供了一种缓存视图片段而不是整个操作或页面的方法。这种技术对于缓存菜单、新主题列表、静态HTML片段等片段非常有用。这个方法需要一个包含你想缓存的内容的块。</target>
        </trans-unit>
        <trans-unit id="545785f00f8db6a6ce540ffe34525f4d65e44158" translate="yes" xml:space="preserve">
          <source>This helper makes building an Atom feed easy. Here's a full usage example:</source>
          <target state="translated">这个助手让构建一个Atom feed变得简单。这里有一个完整的使用示例。</target>
        </trans-unit>
        <trans-unit id="379e9cbec4b4d8644f28954a9c8275624dfac1a6" translate="yes" xml:space="preserve">
          <source>This helper may be included in any class that includes the URL helpers of a routes (routes.url_helpers). Some methods provided here will only work in the context of a request (link_to_unless_current, for instance), which must be provided as a method called request on the context.</source>
          <target state="translated">这个帮助程序可以被包含在任何一个包含路由的URL帮助程序的类中(routes.url_helpers).这里提供的一些方法只能在请求的上下文中使用(例如link_to_unless_current),必须在上下文中提供一个叫做request的方法。这里提供的一些方法只有在请求的上下文中才会起作用(例如link_to_unless_current),必须在上下文中提供一个叫做request的方法。</target>
        </trans-unit>
        <trans-unit id="774382992584a01cddf74b882eff987c1413f162" translate="yes" xml:space="preserve">
          <source>This helper passes the record to a separate class for validation.</source>
          <target state="translated">这个帮助程序将记录传递给一个单独的类进行验证。</target>
        </trans-unit>
        <trans-unit id="7c9eafd4e02a7675d33e7eefee0949a72f673c3c" translate="yes" xml:space="preserve">
          <source>This helper returns the name of a cache key for a given fragment cache call. By supplying &lt;code&gt;skip_digest: true&lt;/code&gt; to cache, the digestion of cache fragments can be manually bypassed. This is useful when cache fragments cannot be manually expired unless you know the exact key which is the case when using memcached.</source>
          <target state="translated">该帮助程序返回给定片段缓存调用的缓存键名称。通过为缓存提供 &lt;code&gt;skip_digest: true&lt;/code&gt; ，可以手动绕过缓存片段的消化。当无法手动使缓存片段失效时，这很有用，除非您知道使用memcached时的确切密钥。</target>
        </trans-unit>
        <trans-unit id="005155dcb4050a59bc267cf64ed58fe3133fcd3c" translate="yes" xml:space="preserve">
          <source>This helper validates attributes against a block. It doesn't have a predefined validation function. You should create one using a block, and every attribute passed to &lt;code&gt;validates_each&lt;/code&gt; will be tested against it. In the following example, we don't want names and surnames to begin with lower case.</source>
          <target state="translated">该帮助程序根据块验证属性。它没有预定义的验证功能。您应该使用一个块来创建一个，然后将对传递给 &lt;code&gt;validates_each&lt;/code&gt; 的每个属性进行测试。在以下示例中，我们不希望名称和姓氏以小写开头。</target>
        </trans-unit>
        <trans-unit id="94f1c3f7c0b96fee7072388fbb93376802bab4f9" translate="yes" xml:space="preserve">
          <source>This helper validates that the attribute's value is unique right before the object gets saved. It does not create a uniqueness constraint in the database, so it may happen that two different database connections create two records with the same value for a column that you intend to be unique. To avoid that, you must create a unique index on that column in your database.</source>
          <target state="translated">在保存对象之前,这个帮助程序会验证属性的值是否是唯一的。它不会在数据库中创建唯一性约束,因此可能会发生两个不同的数据库连接为您打算唯一的列创建两条具有相同值的记录。为了避免这种情况,你必须在数据库中的该列上创建一个唯一索引。</target>
        </trans-unit>
        <trans-unit id="e78cfea25a550fee5c7d05639e326011a4bfb3b2" translate="yes" xml:space="preserve">
          <source>This helper validates that the attributes' values are included in a given set. In fact, this set can be any enumerable object.</source>
          <target state="translated">这个帮助程序验证属性的值是否包含在一个给定的集合中。事实上,这个集合可以是任何可枚举的对象。</target>
        </trans-unit>
        <trans-unit id="08d2b0d48c3a3bec15be8ee351558bb1a0069904" translate="yes" xml:space="preserve">
          <source>This helper validates that the attributes' values are not included in a given set. In fact, this set can be any enumerable object.</source>
          <target state="translated">这个帮助程序验证属性的值是否不包含在给定的集合中,事实上,这个集合可以是任何可枚举的对象。事实上,这个集合可以是任何可枚举对象。</target>
        </trans-unit>
        <trans-unit id="debd785872bb943820e19d09f895ce0362f82442" translate="yes" xml:space="preserve">
          <source>This helper validates that the specified attributes are absent. It uses the &lt;code&gt;present?&lt;/code&gt; method to check if the value is not either nil or a blank string, that is, a string that is either empty or consists of whitespace.</source>
          <target state="translated">该帮助程序将验证是否缺少指定的属性。它使用 &lt;code&gt;present?&lt;/code&gt; 检查值是否为nil或空白字符串的方法，即，该字符串为空还是由空格组成。</target>
        </trans-unit>
        <trans-unit id="4d51465dcf2954d7a13b6f2dbce55dd44e27d183" translate="yes" xml:space="preserve">
          <source>This helper validates that the specified attributes are not empty. It uses the &lt;code&gt;blank?&lt;/code&gt; method to check if the value is either &lt;code&gt;nil&lt;/code&gt; or a blank string, that is, a string that is either empty or consists of whitespace.</source>
          <target state="translated">该帮助程序验证指定的属性不为空。它使用 &lt;code&gt;blank?&lt;/code&gt; 检查值是 &lt;code&gt;nil&lt;/code&gt; 还是空白字符串的方法，即，该字符串为空或由空格组成。</target>
        </trans-unit>
        <trans-unit id="8d15d493f2dac4260fafd63c6fa6c3c6cd2b5924" translate="yes" xml:space="preserve">
          <source>This helper validates that your attributes have only numeric values. By default, it will match an optional sign followed by an integral or floating point number. To specify that only integral numbers are allowed set &lt;code&gt;:only_integer&lt;/code&gt; to true.</source>
          <target state="translated">此帮助程序将验证您的属性仅具有数字值。默认情况下，它将匹配一个可选符号，后跟一个整数或浮点数。要指定只允许整数，请将 &lt;code&gt;:only_integer&lt;/code&gt; 设置为true。</target>
        </trans-unit>
        <trans-unit id="1837be71c3347ee7d252b4dd76e12139d678e3cf" translate="yes" xml:space="preserve">
          <source>This helper validates the attributes' values by testing whether they match a given regular expression, which is specified using the &lt;code&gt;:with&lt;/code&gt; option.</source>
          <target state="translated">该助手通过测试属性值是否与给定的正则表达式（使用 &lt;code&gt;:with&lt;/code&gt; 选项指定）相匹配来验证它们的值。</target>
        </trans-unit>
        <trans-unit id="530c3904d56ec5974f60d563e1d3bdcbda2302bd" translate="yes" xml:space="preserve">
          <source>This helper validates the length of the attributes' values. It provides a variety of options, so you can specify length constraints in different ways:</source>
          <target state="translated">这个助手可以验证属性值的长度。它提供了多种选项,所以你可以用不同的方式来指定长度限制。</target>
        </trans-unit>
        <trans-unit id="fabb16d868184cea58cfe7d4003c718c4f166887" translate="yes" xml:space="preserve">
          <source>This helper works just like normal helpers.</source>
          <target state="translated">这个助手的工作原理和普通助手一样。</target>
        </trans-unit>
        <trans-unit id="30fc2d64b7d0d8394a7f903001ad772e2088e0b3" translate="yes" xml:space="preserve">
          <source>This helps prevent conflicts with any other engine or application that may have an article resource as well.</source>
          <target state="translated">这有助于防止与任何其他引擎或应用程序可能有文章资源的冲突。</target>
        </trans-unit>
        <trans-unit id="1cf0b8ca8c2df39f6fdac13adf8e604c6933a463" translate="yes" xml:space="preserve">
          <source>This high level overview will help you understand when your code is executed and how, and overall become a better Rails developer. If you still want to know more, the Rails source code itself is probably the best place to go next.</source>
          <target state="translated">这个高层次的概述将帮助你了解你的代码何时执行,如何执行,并整体上成为一个更好的Rails开发者。如果你还想了解更多,Rails源代码本身可能是接下来最好的地方。</target>
        </trans-unit>
        <trans-unit id="f82d2b1992c212da213b6b597a27186c4f4dba64" translate="yes" xml:space="preserve">
          <source>This idea strikes a balance between descriptive routes and deep nesting. There exists shorthand syntax to achieve just that, via the &lt;code&gt;:shallow&lt;/code&gt; option:</source>
          <target state="translated">这个想法在描述性路线和深层嵌套之间取得了平衡。通过 &lt;code&gt;:shallow&lt;/code&gt; 选项，可以使用速记语法来实现此目的：</target>
        </trans-unit>
        <trans-unit id="82076effaf2061abd5b6f14d518b3fae8ca28b71" translate="yes" xml:space="preserve">
          <source>This inserts a correctly-formatted data URI into the CSS source.</source>
          <target state="translated">这将在CSS源中插入一个正确格式化的数据URI。</target>
        </trans-unit>
        <trans-unit id="7624c621ac14deafeaaed7902e07ca4994eeabf1" translate="yes" xml:space="preserve">
          <source>This interceptor is enabled by default. To disable it, delete it from the &lt;code&gt;ActionMailer::Base.preview_interceptors&lt;/code&gt; array:</source>
          <target state="translated">默认情况下启用此拦截器。要禁用它，请从 &lt;code&gt;ActionMailer::Base.preview_interceptors&lt;/code&gt; 数组中将其删除：</target>
        </trans-unit>
        <trans-unit id="68ac435fc016afd53ebc39d8d2bdbe7fa1818e52" translate="yes" xml:space="preserve">
          <source>This is a brief instruction manual for your application. You should edit this file to tell others what your application does, how to set it up, and so on.</source>
          <target state="translated">这是您的应用程序的简要说明手册,您应该编辑这个文件来告诉别人您的应用程序的功能,如何设置等等。你应该编辑这个文件来告诉别人你的应用程序的功能,如何设置它,等等。</target>
        </trans-unit>
        <trans-unit id="236a86724a3b7c924ff74a1550504e6c1a14b8f4" translate="yes" xml:space="preserve">
          <source>This is a class that abstracts away an asserted response. It purposely does not inherit from &lt;a href=&quot;response&quot;&gt;Response&lt;/a&gt; because it doesn't need it. That means it does not have headers or a body.</source>
          <target state="translated">这是一个抽象断言响应的类。它故意不从&lt;a href=&quot;response&quot;&gt;Response&lt;/a&gt;继承，因为它不需要它。这意味着它没有标题或正文。</target>
        </trans-unit>
        <trans-unit id="0227309670d5d656255751e4bef7637565f95272" translate="yes" xml:space="preserve">
          <source>This is a great way to inspect the values of the current context variables. For example, to check that we have no local variables currently defined:</source>
          <target state="translated">这是一个检查当前上下文变量值的好方法。例如,检查我们当前没有定义局部变量。</target>
        </trans-unit>
        <trans-unit id="d4587a30fb5b215d87c2747e9969b087ba324099" translate="yes" xml:space="preserve">
          <source>This is a handy option if you are updating an older project that didn't use the asset pipeline and already uses this path or you wish to use this path for a new resource.</source>
          <target state="translated">如果你正在更新一个没有使用资产管道的旧项目,并且已经使用了这个路径,或者你希望将这个路径用于一个新的资源,这是一个方便的选项。</target>
        </trans-unit>
        <trans-unit id="91fb6f33bcbb65b651d369ad6213dde3283a864f" translate="yes" xml:space="preserve">
          <source>This is a perfectly valid solution, but Rails provides a less verbose alternative: &lt;code&gt;options_from_collection_for_select&lt;/code&gt;. This helper expects a collection of arbitrary objects and two additional arguments: the names of the methods to read the option &lt;strong&gt;value&lt;/strong&gt; and &lt;strong&gt;text&lt;/strong&gt; from, respectively:</source>
          <target state="translated">这是一个非常有效的解决方案，但是Rails提供了一个不太冗长的选择： &lt;code&gt;options_from_collection_for_select&lt;/code&gt; 。该助手需要一个任意对象和两个附加参数的集合：分别用于读取选项&lt;strong&gt;值&lt;/strong&gt;和&lt;strong&gt;文本&lt;/strong&gt;的方法的名称：</target>
        </trans-unit>
        <trans-unit id="fe56016c0db98bbf6300fa8d10326808584bcc75" translate="yes" xml:space="preserve">
          <source>This is a poor solution, but fully distributed transactions are beyond the scope of Active Record.</source>
          <target state="translated">这是一个糟糕的解决方案,但完全分布式事务超出了Active Record的范围。</target>
        </trans-unit>
        <trans-unit id="7dd8c7b7b69c090c1cbdf105479f8256c1d16690" translate="yes" xml:space="preserve">
          <source>This is a rather comprehensive guide to the various testing facilities in Rails. It covers everything from 'What is a test?' to Integration Testing. Enjoy.</source>
          <target state="translated">这是一个相当全面的Rails测试设施指南。它涵盖了从 &quot;什么是测试?&quot;到集成测试的所有内容。好好享受吧。</target>
        </trans-unit>
        <trans-unit id="1b4db319b3fda4fa46827ef71d4d592b37a9892d" translate="yes" xml:space="preserve">
          <source>This is a setting for Rails itself. If you want to pass settings to individual Rails components, you can do so via the same &lt;code&gt;config&lt;/code&gt; object in &lt;code&gt;config/application.rb&lt;/code&gt;:</source>
          <target state="translated">这是Rails本身的设置。如果要将设置传递给各个Rails组件，可以通过 &lt;code&gt;config/application.rb&lt;/code&gt; 中的同一 &lt;code&gt;config&lt;/code&gt; 对象进行：</target>
        </trans-unit>
        <trans-unit id="dbfd983ac46d4b355583cedc1284525f1db08144" translate="yes" xml:space="preserve">
          <source>This is a start, but it doesn't dynamically create the option tags. You can generate option tags with the &lt;code&gt;options_for_select&lt;/code&gt; helper:</source>
          <target state="translated">这是一个开始，但它不会动态创建选项标签。您可以使用 &lt;code&gt;options_for_select&lt;/code&gt; 帮助程序生成选项标签：</target>
        </trans-unit>
        <trans-unit id="d17bc718e6125253db3d6010bd018864dc8c7748" translate="yes" xml:space="preserve">
          <source>This is a web notification channel that allows you to trigger client-side web notifications when you broadcast to the right streams:</source>
          <target state="translated">这是一个网络通知通道,当你广播到正确的流时,可以触发客户端的网络通知。</target>
        </trans-unit>
        <trans-unit id="add325d6853a3081a693db0988ded439abf165b1" translate="yes" xml:space="preserve">
          <source>This is a white list of permitted scalar types that includes the ones supported in XML and JSON requests.</source>
          <target state="translated">这是一个允许的标量类型的白名单,包括XML和JSON请求中支持的类型。</target>
        </trans-unit>
        <trans-unit id="a1bfe41decfa7156f43af4b11764141340abb1c9" translate="yes" xml:space="preserve">
          <source>This is alright for some web applications, but certainly not if the user is not authorized to view all projects. If the user changes the id to 42, and they are not allowed to see that information, they will have access to it anyway. Instead, &lt;em&gt;query the user's access rights, too&lt;/em&gt;:</source>
          <target state="translated">对于某些Web应用程序来说这没问题，但是如果用户无权查看所有项目，则肯定不是。如果用户将ID更改为42，并且不允许他们查看该信息，则无论如何他们将可以访问该信息。相反&lt;em&gt;，也要查询用户的访问权限&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="7ea08e85428f7dae28f5ff42bac4f303f6975ffa" translate="yes" xml:space="preserve">
          <source>This is also the case with inheritance and module includes where the parent or module defines a &lt;a href=&quot;classmethods#method-i-default_scope&quot;&gt;default_scope&lt;/a&gt; and the child or including class defines a second one.</source>
          <target state="translated">继承也是这种情况，模块包括父级或模块定义了&lt;a href=&quot;classmethods#method-i-default_scope&quot;&gt;default_scope&lt;/a&gt;，子级或包含类定义了第二个。</target>
        </trans-unit>
        <trans-unit id="865f091128dc7691bac5e173d9e24d51ce2cd12f" translate="yes" xml:space="preserve">
          <source>This is an abstract base class for analyzers, which extract metadata from blobs. See &lt;a href=&quot;analyzer/imageanalyzer&quot;&gt;ActiveStorage::Analyzer::ImageAnalyzer&lt;/a&gt; for an example of a concrete subclass.</source>
          <target state="translated">这是分析器的抽象基类，该分析器从Blob中提取元数据。有关具体子类的示例，请参见&lt;a href=&quot;analyzer/imageanalyzer&quot;&gt;ActiveStorage :: Analyzer :: ImageAnalyzer&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="314966a61923d31a0bc7b653c7b15e8267b26741" translate="yes" xml:space="preserve">
          <source>This is an abstract base class for previewers, which generate images from blobs. See ActiveStorage::Previewer::MuPDFPreviewer and ActiveStorage::Previewer::VideoPreviewer for examples of concrete subclasses.</source>
          <target state="translated">这是一个用于预览器的抽象基类,它可以从blobs中生成图像。参见ActiveStorage::Previewer::MuPDFPreviewer和ActiveStorage::Previewer::VideoPreviewer的具体子类的例子。</target>
        </trans-unit>
        <trans-unit id="5164c9f3a244e51b03aa9d3197a95e96bb00d342" translate="yes" xml:space="preserve">
          <source>This is an all-or-nothing operation, Rails does not attempt to reload only what changed since dependencies between classes makes that really tricky. Instead, everything is wiped.</source>
          <target state="translated">这是一个全有或全无的操作,Rails 并不试图只重载改变的内容,因为类之间的依赖关系让重载变得非常棘手。相反,所有的东西都会被抹掉。</target>
        </trans-unit>
        <trans-unit id="9dfd9dc3caa14755efc8f8a05248988fd13e2764" translate="yes" xml:space="preserve">
          <source>This is an introduction to three types of caching techniques: page, action and fragment caching. By default Rails provides fragment caching. In order to use page and action caching you will need to add &lt;code&gt;actionpack-page_caching&lt;/code&gt; and &lt;code&gt;actionpack-action_caching&lt;/code&gt; to your &lt;code&gt;Gemfile&lt;/code&gt;.</source>
          <target state="translated">这是对三种类型的缓存技术的介绍：页面，操作和片段缓存。默认情况下，Rails提供片段缓存。为了使用页面和动作缓存，您需要将 &lt;code&gt;actionpack-page_caching&lt;/code&gt; 和 &lt;code&gt;actionpack-action_caching&lt;/code&gt; 添加到 &lt;code&gt;Gemfile&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="5555dee3e7a5ab5584fbaa2cdbf6e111d65572e7" translate="yes" xml:space="preserve">
          <source>This is because the incoming XML document (if a web-service request is in process) can only contain a single root-node. So, we have to rearrange things so that the request looks like this (url-encoded):</source>
          <target state="translated">这是因为传入的 XML 文档(如果一个 web 服务请求正在处理中)只能包含一个根节点。所以,我们必须重新排列,使请求看起来像这样(url编码)。</target>
        </trans-unit>
        <trans-unit id="905051a2d5ae2f2b8c51b848354a8751c3782e96" translate="yes" xml:space="preserve">
          <source>This is currently the most popular cache store for production websites.</source>
          <target state="translated">这是目前制作网站最受欢迎的缓存商店。</target>
        </trans-unit>
        <trans-unit id="5871bd759ac07fed83a084a33ffb3dbbf698d715" translate="yes" xml:space="preserve">
          <source>This is done by either returning and leasing existing connection, or by creating a new connection and leasing it.</source>
          <target state="translated">这可以通过返回并租赁现有的连接,或通过创建一个新的连接并租赁来实现。</target>
        </trans-unit>
        <trans-unit id="edf40f3fb63d5f4a07f45fdb49c69cb8aaecdfe3" translate="yes" xml:space="preserve">
          <source>This is due to the way &lt;a href=&quot;../../object#method-i-blank-3F&quot;&gt;Object#blank?&lt;/a&gt; handles boolean values: &lt;code&gt;false.blank? # =&amp;gt; true&lt;/code&gt;.</source>
          <target state="translated">这是由于&lt;a href=&quot;../../object#method-i-blank-3F&quot;&gt;Object＃blank？&lt;/a&gt;处理布尔值： &lt;code&gt;false.blank? # =&amp;gt; true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0e75165bd6c0c435e57a13f622ac0560e9f8aea5" translate="yes" xml:space="preserve">
          <source>This is equivalent to</source>
          <target state="translated">这相当于</target>
        </trans-unit>
        <trans-unit id="7df60eca28628c687288336e90344c09052d6e67" translate="yes" xml:space="preserve">
          <source>This is equivalent to writing:</source>
          <target state="translated">这就相当于写作。</target>
        </trans-unit>
        <trans-unit id="0c4a19f41f357e975c7ecf272280bda06a0a7837" translate="yes" xml:space="preserve">
          <source>This is equivalent to:</source>
          <target state="translated">这相当于:</target>
        </trans-unit>
        <trans-unit id="bf3963c5a31eeb01e885e1acef74b0386761c8e2" translate="yes" xml:space="preserve">
          <source>This is especially useful in validation situations where the user might supply a string for an integer field and you want to display the original string back in an error message. Accessing the attribute normally would typecast the string to 0, which isn't what you want.</source>
          <target state="translated">这在用户可能为一个整数字段提供一个字符串,而你想在错误消息中显示原始字符串的验证情况下特别有用。访问该属性通常会将字符串类型化为0,这不是你想要的。</target>
        </trans-unit>
        <trans-unit id="71866269bd470ce2d7b7b1155a0a13386d12cd5a" translate="yes" xml:space="preserve">
          <source>This is generally a much cleaner way to set up the database of a blank application.</source>
          <target state="translated">一般来说,这是一种更简洁的设置空白应用程序数据库的方法。</target>
        </trans-unit>
        <trans-unit id="4ad8a787581f843360989dbf783471a59de59634" translate="yes" xml:space="preserve">
          <source>This is mainly intended for sharing common conditions between multiple associations.</source>
          <target state="translated">这主要是为了让多个社团之间共享共同条件。</target>
        </trans-unit>
        <trans-unit id="0e601d127faa01a91c1ee11466a5b40f9e1a2ba8" translate="yes" xml:space="preserve">
          <source>This is meant to be implemented by the adapters that support extensions</source>
          <target state="translated">这是由支持扩展的适配器来实现的。</target>
        </trans-unit>
        <trans-unit id="5e39777005ed40ac5c55a9e639158a69e12f0534" translate="yes" xml:space="preserve">
          <source>This is more often than not used inside a select_tag like this example:</source>
          <target state="translated">这通常在select_tag中使用,比如这个例子。</target>
        </trans-unit>
        <trans-unit id="88736da89c7f5fa560ff5b210c718c953972c3d5" translate="yes" xml:space="preserve">
          <source>This is most useful when updating several attributes at once. If, on the other hand, you'd like to update several records in bulk, you may find the &lt;code&gt;update_all&lt;/code&gt; class method useful:</source>
          <target state="translated">一次更新多个属性时，这非常有用。另一方面，如果您想批量更新多条记录，则可能会发现 &lt;code&gt;update_all&lt;/code&gt; 类方法很有用：</target>
        </trans-unit>
        <trans-unit id="caccd46ce2b3dd250ca9818efcd2df2cf306c5bb" translate="yes" xml:space="preserve">
          <source>This is not compatible with the &lt;a href=&quot;#direct-uploads&quot;&gt;direct uploads&lt;/a&gt; feature.</source>
          <target state="translated">这与&lt;a href=&quot;#direct-uploads&quot;&gt;直接上传&lt;/a&gt;功能不兼容。</target>
        </trans-unit>
        <trans-unit id="d652a9e2f95ded9cdd728c3a457299f1da7ff87a" translate="yes" xml:space="preserve">
          <source>This is not the case in Rails applications, where application classes and modules are just available everywhere:</source>
          <target state="translated">在Rails应用中却不是这样,应用类和模块随处可见。</target>
        </trans-unit>
        <trans-unit id="2c4c708a791cd0766f936fe455fd58d8f7f8536a" translate="yes" xml:space="preserve">
          <source>This is not the same as running all the migrations. It will only use the contents of the current &lt;code&gt;db/schema.rb&lt;/code&gt; or &lt;code&gt;db/structure.sql&lt;/code&gt; file. If a migration can't be rolled back, &lt;code&gt;rails db:reset&lt;/code&gt; may not help you. To find out more about dumping the schema see &lt;a href=&quot;#schema-dumping-and-you&quot;&gt;Schema Dumping and You&lt;/a&gt; section.</source>
          <target state="translated">这与运行所有迁移不同。它将仅使用当前 &lt;code&gt;db/schema.rb&lt;/code&gt; 或 &lt;code&gt;db/structure.sql&lt;/code&gt; 文件的内容。如果无法回滚迁移， &lt;code&gt;rails db:reset&lt;/code&gt; 可能对您没有帮助。要了解有关转储模式的更多信息，请参见&amp;ldquo; &lt;a href=&quot;#schema-dumping-and-you&quot;&gt;模式转储和您&amp;rdquo;&lt;/a&gt;部分。</target>
        </trans-unit>
        <trans-unit id="476f3c583a6763b42119d74920eae71a20fdb760" translate="yes" xml:space="preserve">
          <source>This is often factored out into its own method so it can be reused by multiple actions in the same controller, for example &lt;code&gt;create&lt;/code&gt; and &lt;code&gt;update&lt;/code&gt;. Above and beyond mass assignment issues, the method is often made &lt;code&gt;private&lt;/code&gt; to make sure it can't be called outside its intended context. Here is the result:</source>
          <target state="translated">通常将其分解为自己的方法，以便可以由同一控制器中的多个操作（例如 &lt;code&gt;create&lt;/code&gt; 和 &lt;code&gt;update&lt;/code&gt; )重用。除了大量分配问题之外，该方法通常被 &lt;code&gt;private&lt;/code&gt; ，以确保不能在其预期的上下文之外调用它。结果如下：</target>
        </trans-unit>
        <trans-unit id="0e0a90acd9171f758e766f64e40f11604b22b532" translate="yes" xml:space="preserve">
          <source>This is one of the best ways to find bugs in your code.</source>
          <target state="translated">这是寻找代码中错误的最好方法之一。</target>
        </trans-unit>
        <trans-unit id="63ca15fdcd8e41433c8d24158cbffeb8de318585" translate="yes" xml:space="preserve">
          <source>This is particularly useful for initializing an options hash with default values.</source>
          <target state="translated">这对于用默认值初始化一个选项哈希特别有用。</target>
        </trans-unit>
        <trans-unit id="4bf4b1de560da5ffbb60a75f2ecba74c5e7fe966" translate="yes" xml:space="preserve">
          <source>This is possible because on some servers, this way the parameter id, as in params[:id], would be nil. However, here is the finder from the activation action:</source>
          <target state="translated">这是有可能的,因为在某些服务器上,这种方式的参数id,如params[:id],会是nil。然而,这里是激活动作的查找器。</target>
        </trans-unit>
        <trans-unit id="f043ebef04d8d62a14ad83768255d1c49c9d2466" translate="yes" xml:space="preserve">
          <source>This is possible thanks to a hidden field generated by the helper method for every collection of checkboxes. This hidden field is given the same field name as the checkboxes with a blank value.</source>
          <target state="translated">这要归功于helper方法为每个复选框集合生成的一个隐藏字段。这个隐藏字段与复选框的字段名相同,但有一个空白值。</target>
        </trans-unit>
        <trans-unit id="4055e9eb86cbef6fd45cdce30c4e1d8fa7109629" translate="yes" xml:space="preserve">
          <source>This is short-hand for &lt;code&gt;unscope(:select).select(fields)&lt;/code&gt;. Note that we're unscoping the entire select statement.</source>
          <target state="translated">这是 &lt;code&gt;unscope(:select).select(fields)&lt;/code&gt; 的简写。请注意，我们将对整个select语句进行范围界定。</target>
        </trans-unit>
        <trans-unit id="524db4e942fe674edb44820a99cd4b3b0a848093" translate="yes" xml:space="preserve">
          <source>This is short-hand for &lt;code&gt;unscope(where:
conditions.keys).where(conditions)&lt;/code&gt;. Note that unlike reorder, we're only unscoping the named conditions &amp;ndash; not the entire where statement.</source>
          <target state="translated">这是 &lt;code&gt;unscope(where: conditions.keys).where(conditions)&lt;/code&gt; 。请注意，与重新排序不同，我们只对命名条件进行范围界定，而不是整个where语句。</target>
        </trans-unit>
        <trans-unit id="03f6e44dab7f751dc8ac3b6362059f6af7087c4e" translate="yes" xml:space="preserve">
          <source>This is short-hand for:</source>
          <target state="translated">这是简称。</target>
        </trans-unit>
        <trans-unit id="d060cb3ccf4a3c817c36239623366a500bc1139a" translate="yes" xml:space="preserve">
          <source>This is similar to &lt;a href=&quot;relation#method-i-find_or_create_by&quot;&gt;find_or_create_by&lt;/a&gt;, but avoids the problem of stale reads between the SELECT and the INSERT, as that method needs to first query the table, then attempt to insert a row if none is found.</source>
          <target state="translated">这类似于&lt;a href=&quot;relation#method-i-find_or_create_by&quot;&gt;find_or_create_by&lt;/a&gt;，但是避免了在SELECT和INSERT之间过时读取的问题，因为该方法需要首先查询表，然后在找不到行的情况下尝试插入行。</target>
        </trans-unit>
        <trans-unit id="d3039fad58aed73518993e5254cab0746970698c" translate="yes" xml:space="preserve">
          <source>This is the default cache store implementation (at &lt;code&gt;&quot;#{root}/tmp/cache/&quot;&lt;/code&gt;) if no explicit &lt;code&gt;config.cache_store&lt;/code&gt; is supplied.</source>
          <target state="translated">如果未提供显式的 &lt;code&gt;config.cache_store&lt;/code&gt; ,则这是默认的缓存存储实现（位于 &lt;code&gt;&quot;#{root}/tmp/cache/&quot;&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="3b294f478ac8128dd19bb0a3363f9167a2ff202c" translate="yes" xml:space="preserve">
          <source>This is the default queue adapter. It's well-suited for dev/test since it doesn't need an external infrastructure, but it's a poor fit for production since it drops pending jobs on restart.</source>
          <target state="translated">这是默认的队列适配器。它很适合开发/测试,因为它不需要外部基础设施,但它不适合生产,因为它在重启时会丢弃待处理的作业。</target>
        </trans-unit>
        <trans-unit id="19b9cbb208ca023f3d372570188571ddffe2eb88" translate="yes" xml:space="preserve">
          <source>This is the entry point for all assets. When using the asset pipeline (i.e. sprockets and sprockets-rails), the behavior is &amp;ldquo;enhanced&amp;rdquo;. You can bypass the asset pipeline by passing in &lt;code&gt;skip_pipeline: true&lt;/code&gt; to the options.</source>
          <target state="translated">这是所有资产的切入点。使用资产管道（即链轮和链轮轨道）时，行为会得到&amp;ldquo;增强&amp;rdquo;。您可以通过在选项中传递 &lt;code&gt;skip_pipeline: true&lt;/code&gt; 来绕开资产管道。</target>
        </trans-unit>
        <trans-unit id="a879952bc2384b58228e1cc88c6eeba119ebdba2" translate="yes" xml:space="preserve">
          <source>This is the fastest way to update attributes because it goes straight to the database, but take into account that in consequence the regular update procedures are totally bypassed. In particular:</source>
          <target state="translated">这是更新属性最快的方法,因为它直接进入数据库,但要考虑到,结果是完全绕过了常规的更新程序。特别是:</target>
        </trans-unit>
        <trans-unit id="dea8eb66708962551027008a99a9d115a30b5e03" translate="yes" xml:space="preserve">
          <source>This is the final step required to get the new comment form working. Displaying the comments, however, is not quite right yet. If you were to create a comment right now, you would see this error:</source>
          <target state="translated">这是让新的评论表工作的最后一步。然而,显示评论还不是很正确。如果你现在创建一个评论,你会看到这个错误。</target>
        </trans-unit>
        <trans-unit id="0d733419d80f4628f3b75f9f9b75f8084c9fea98" translate="yes" xml:space="preserve">
          <source>This is the generator just created:</source>
          <target state="translated">这就是刚刚创建的发电机。</target>
        </trans-unit>
        <trans-unit id="213775bf160b9aaddfc0b572608a82bd8c8122c6" translate="yes" xml:space="preserve">
          <source>This is the low level API which sits beneath &lt;code&gt;attribute&lt;/code&gt;. It only accepts type objects, and will do its work immediately instead of waiting for the schema to load. Automatic schema detection and &lt;a href=&quot;classmethods#method-i-attribute&quot;&gt;#attribute&lt;/a&gt; both call this under the hood. While this method is provided so it can be used by plugin authors, application code should probably use &lt;a href=&quot;classmethods#method-i-attribute&quot;&gt;#attribute&lt;/a&gt;.</source>
          <target state="translated">这是位于 &lt;code&gt;attribute&lt;/code&gt; 下方的低级API 。它仅接受类型对象，并且将立即执行其工作，而不是等待架构加载。自动模式检测和&lt;a href=&quot;classmethods#method-i-attribute&quot;&gt;#attribute&lt;/a&gt;都在后台将其称为。虽然提供了此方法以便插件作者可以使用，但应用程序代码可能应使用&lt;a href=&quot;classmethods#method-i-attribute&quot;&gt;#attribute&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="08a01c626433c4a35f7b2d425460de1d4acf0e73" translate="yes" xml:space="preserve">
          <source>This is the main entry point for rendering. It basically delegates to other objects like TemplateRenderer and &lt;a href=&quot;partialrenderer&quot;&gt;PartialRenderer&lt;/a&gt; which actually renders the template.</source>
          <target state="translated">这是渲染的主要入口点。它基本上委托给其他对象，例如TemplateRenderer和&lt;a href=&quot;partialrenderer&quot;&gt;PartialRenderer&lt;/a&gt;，它们实际呈现模板。</target>
        </trans-unit>
        <trans-unit id="0a7362d4fdb9ce2bc04ad1949d06a74ddbb934b1" translate="yes" xml:space="preserve">
          <source>This is the method that defines the application behavior when a request is found to be unverified.</source>
          <target state="translated">该方法定义了当发现请求未被验证时的应用行为。</target>
        </trans-unit>
        <trans-unit id="04147656e71aa844819d315a436992670672c2c0" translate="yes" xml:space="preserve">
          <source>This is the only method that is not thread safe, but is only ever called during the eager loading phase.</source>
          <target state="translated">这是唯一一个不是线程安全的方法,但只有在急切加载阶段才会被调用。</target>
        </trans-unit>
        <trans-unit id="d403e247708e5bb03eef06a0a89b4bf74851fe8b" translate="yes" xml:space="preserve">
          <source>This is the right time to understand a little more about writing tests for your mailers. The line &lt;code&gt;ActionMailer::Base.delivery_method = :test&lt;/code&gt; in &lt;code&gt;config/environments/test.rb&lt;/code&gt; sets the delivery method to test mode so that email will not actually be delivered (useful to avoid spamming your users while testing) but instead it will be appended to an array (&lt;code&gt;ActionMailer::Base.deliveries&lt;/code&gt;).</source>
          <target state="translated">现在是时候了解有关为邮件编写测试的更多信息了。该生产线 &lt;code&gt;ActionMailer::Base.delivery_method = :test&lt;/code&gt; 在 &lt;code&gt;config/environments/test.rb&lt;/code&gt; 设置的传送方法的测试模式，这样的电子邮件不会实际交付（有效避免垃圾邮件用户在测试），而是会被追加到一个数组（ &lt;code&gt;ActionMailer::Base.deliveries&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="a8756e6def08accc737d69f61fb7bb7d51e092f5" translate="yes" xml:space="preserve">
          <source>This is the strategy adopted by the Rails asset pipeline.</source>
          <target state="translated">这就是Rails资产管道所采取的策略。</target>
        </trans-unit>
        <trans-unit id="004780d4c45954d665bd54c93112b626b23347bd" translate="yes" xml:space="preserve">
          <source>This is the string of data being sent back to the client. This is most often HTML.</source>
          <target state="translated">这是发送回客户端的数据字符串。最常见的是HTML。</target>
        </trans-unit>
        <trans-unit id="dcf397b2bfca317db3d0b076ec600f2f63f09fea" translate="yes" xml:space="preserve">
          <source>This is then used by Action Cable to determine the URL of your WebSocket server. Your CoffeeScript can then connect to the server without needing to specify the URL directly:</source>
          <target state="translated">这将被Action Cable用来确定你的WebSocket服务器的URL。您的CoffeeScript就可以连接到服务器,而不需要直接指定URL。</target>
        </trans-unit>
        <trans-unit id="4cf90ade8f212940229e1dd084416f20c163760f" translate="yes" xml:space="preserve">
          <source>This is used by the Rails UJS helper to create dynamically loaded inline &amp;lt;script&amp;gt; elements.</source>
          <target state="translated">Rails UJS助手使用它来创建动态加载的内联&amp;lt;script&amp;gt;元素。</target>
        </trans-unit>
        <trans-unit id="663d182dd5ff878aea73b684cb3e3623606702a4" translate="yes" xml:space="preserve">
          <source>This is used by the Rails UJS helper to create dynamically loaded inline &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; elements.</source>
          <target state="translated">Rails UJS助手使用它来创建动态加载的内联 &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; 元素。</target>
        </trans-unit>
        <trans-unit id="80aef7d14433f3872bdc21b294a585f3b6194dae" translate="yes" xml:space="preserve">
          <source>This is used by the default &lt;a href=&quot;../rails#attribute-c-logger&quot;&gt;Rails.logger&lt;/a&gt; as configured by Railties to make it easy to stamp log lines with subdomains, request ids, and anything else to aid debugging of multi-user production applications.</source>
          <target state="translated">由&lt;a href=&quot;../rails#attribute-c-logger&quot;&gt;Railties&lt;/a&gt;配置的默认Rails.logger可以使用它，以轻松标记带有子域，请求ID和其他内容的日志行，以帮助调试多用户生产应用程序。</target>
        </trans-unit>
        <trans-unit id="da463114acbc05d0accf4cb9abf3944514b91e01" translate="yes" xml:space="preserve">
          <source>This is used to create the &lt;code&gt;config&lt;/code&gt; object on Railties, an instance of &lt;a href=&quot;railtie/configuration&quot;&gt;Railtie::Configuration&lt;/a&gt;, that is used by Railties and &lt;a href=&quot;application&quot;&gt;Application&lt;/a&gt; to store related configuration.</source>
          <target state="translated">这用于在Railties上创建 &lt;code&gt;config&lt;/code&gt; 对象，该对象是&lt;a href=&quot;railtie/configuration&quot;&gt;Railtie :: Configuration&lt;/a&gt;的实例，由Railties和&lt;a href=&quot;application&quot;&gt;Application&lt;/a&gt;用来存储相关配置。</target>
        </trans-unit>
        <trans-unit id="ccd8f91e2131e8cc7a6c70e96f65caea6a40b112" translate="yes" xml:space="preserve">
          <source>This is useful for cases like remember-me tokens and auto-unsubscribe links where the session store isn't suitable or available.</source>
          <target state="translated">这对于像记住我的代币和自动取消订阅链接这样的情况是很有用的,因为会话商店并不合适或可用。</target>
        </trans-unit>
        <trans-unit id="6bcd23b49e5cc8549fc267d976ca5b6c271bae70" translate="yes" xml:space="preserve">
          <source>This is useful for limiting a set of parameters to everything but a few known toggles:</source>
          <target state="translated">这对于限制一组参数,除了几个已知的切换之外,其他的都很有用。</target>
        </trans-unit>
        <trans-unit id="93cd12486193c6b8cc6da9b85aa975b6e99ee6c1" translate="yes" xml:space="preserve">
          <source>This is useful for setting flash messages for instance:</source>
          <target state="translated">例如,这对设置闪光信息很有用。</target>
        </trans-unit>
        <trans-unit id="20f494f5b35219f6b64992edd064d3f4c188dfc1" translate="yes" xml:space="preserve">
          <source>This is useful for when you need to call a proprietary method such as PostgreSQL's lo_* methods.</source>
          <target state="translated">当你需要调用一个专有的方法,如PostgreSQL的lo_*方法时,这很有用。</target>
        </trans-unit>
        <trans-unit id="91b7d75dcbae399c13b14c743e7166314f1ab845" translate="yes" xml:space="preserve">
          <source>This is useful in cases where you aren't sure if the local variable has been assigned. Alternatively, you could also use &lt;code&gt;defined?
headline&lt;/code&gt; to first check if the variable has been assigned before using it.</source>
          <target state="translated">在不确定是否已分配局部变量的情况下，这很有用。或者，您也可以使用 &lt;code&gt;defined? headline&lt;/code&gt; 要在使用变量之前先检查变量是否已分配的标题。</target>
        </trans-unit>
        <trans-unit id="daeda2332a21cd511e52c9790edb7f742ee54918" translate="yes" xml:space="preserve">
          <source>This is useful when you want to log under development or staging without flooding your production log with unnecessary information.</source>
          <target state="translated">当你想在开发或暂存的情况下进行记录,而不需要用不必要的信息来淹没你的生产日志时,这很有用。</target>
        </trans-unit>
        <trans-unit id="9ed4c7388eef8d2c01e191e1ae5565f0b71812d6" translate="yes" xml:space="preserve">
          <source>This is useful when you're rendering a small snippet of HTML code. However, you might want to consider moving it to a template file if the markup is complex.</source>
          <target state="translated">当你要渲染一小段HTML代码时,这很有用。但是,如果标记很复杂,你可能要考虑将它移到模板文件中。</target>
        </trans-unit>
        <trans-unit id="9904c6020adc3dd710bfbbf34a05016a746fbec6" translate="yes" xml:space="preserve">
          <source>This is very similar to the &lt;code&gt;Article&lt;/code&gt; model that you saw earlier. The difference is the line &lt;code&gt;belongs_to :article&lt;/code&gt;, which sets up an Active Record &lt;em&gt;association&lt;/em&gt;. You'll learn a little about associations in the next section of this guide.</source>
          <target state="translated">这与您之前看到的 &lt;code&gt;Article&lt;/code&gt; 模型非常相似。区别在于，这行建立了Active Record &lt;em&gt;关联&lt;/em&gt;，这是一行属下的属下 &lt;code&gt;belongs_to :article&lt;/code&gt; 。您将在本指南的下一部分中了解有关关联的一些信息。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="29028b796bcc932eb094a3292aa812906209c05c" translate="yes" xml:space="preserve">
          <source>This is where all the Rails frameworks are loaded and thus made available to the application. We won't go into detail of what happens inside each of those frameworks, but you're encouraged to try and explore them on your own.</source>
          <target state="translated">这里是加载所有Rails框架的地方,从而使应用程序可用。我们不会详细介绍每一个框架内部发生的事情,但我们鼓励你自己去尝试和探索它们。</target>
        </trans-unit>
        <trans-unit id="37329c739affc0a288f6d223308497354efc9781" translate="yes" xml:space="preserve">
          <source>This is where the first output of the Rails initialization happens. This method creates a trap for &lt;code&gt;INT&lt;/code&gt; signals, so if you &lt;code&gt;CTRL-C&lt;/code&gt; the server, it will exit the process. As we can see from the code here, it will create the &lt;code&gt;tmp/cache&lt;/code&gt;, &lt;code&gt;tmp/pids&lt;/code&gt;, and &lt;code&gt;tmp/sockets&lt;/code&gt; directories. It then enables caching in development if &lt;code&gt;rails server&lt;/code&gt; is called with &lt;code&gt;--dev-caching&lt;/code&gt;. Finally, it calls &lt;code&gt;wrapped_app&lt;/code&gt; which is responsible for creating the Rack app, before creating and assigning an instance of &lt;code&gt;ActiveSupport::Logger&lt;/code&gt;.</source>
          <target state="translated">这是Rails初始化的第一个输出发生的地方。此方法为 &lt;code&gt;INT&lt;/code&gt; 信号创建陷阱，因此如果您对服务器进行 &lt;code&gt;CTRL-C&lt;/code&gt; ，它将退出该过程。从这里的代码可以看到，它将创建 &lt;code&gt;tmp/cache&lt;/code&gt; ， &lt;code&gt;tmp/pids&lt;/code&gt; 和 &lt;code&gt;tmp/sockets&lt;/code&gt; 目录。如果使用 &lt;code&gt;--dev-caching&lt;/code&gt; 调用 &lt;code&gt;rails server&lt;/code&gt; ，那么它将启用开发中的缓存。最后，它调用 &lt;code&gt;wrapped_app&lt;/code&gt; 负责创建机架应用，创造和分配的一个实例之前 &lt;code&gt;ActiveSupport::Logger&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="51aa07dbdbd1a837e9dd0eb82a9c9b0310f528b6" translate="yes" xml:space="preserve">
          <source>This is your application's &lt;em&gt;routing file&lt;/em&gt; which holds entries in a special &lt;a href=&quot;https://en.wikipedia.org/wiki/Domain-specific_language&quot;&gt;DSL (domain-specific language)&lt;/a&gt; that tells Rails how to connect incoming requests to controllers and actions. Edit this file by adding the line of code &lt;code&gt;root 'welcome#index'&lt;/code&gt;. It should look something like the following:</source>
          <target state="translated">这是您应用程序的&lt;em&gt;路由文件&lt;/em&gt;，该&lt;em&gt;文件&lt;/em&gt;以特殊的&lt;a href=&quot;https://en.wikipedia.org/wiki/Domain-specific_language&quot;&gt;DSL（特定&lt;/a&gt;于域的语言）保存条目，该条目告诉Rails如何将传入的请求连接到控制器和动作。通过添加代码 &lt;code&gt;root 'welcome#index'&lt;/code&gt; 编辑此文件。它看起来应该如下所示：</target>
        </trans-unit>
        <trans-unit id="381bcafb465435f07a66f05c0e9e2ccccd82a683" translate="yes" xml:space="preserve">
          <source>This jar allows chaining with the signed jar as well, so you can set permanent, signed cookies. Examples:</source>
          <target state="translated">这个罐子也允许与签名的罐子进行链式连接,所以你可以设置永久性的签名cookie。例子:</target>
        </trans-unit>
        <trans-unit id="5a76e5c72d284c47c6a70bf93313d59ea270d4d1" translate="yes" xml:space="preserve">
          <source>This jar is only meant for writing. You'll read permanent cookies through the regular accessor.</source>
          <target state="translated">这个罐子只用于书写。你会通过普通的访问器来读取永久的cookies。</target>
        </trans-unit>
        <trans-unit id="4167658d0f7fa61c58fa5fbeeddc9aa6a579273c" translate="yes" xml:space="preserve">
          <source>This jar requires that you set a suitable secret for the verification on your app's &lt;code&gt;secret_key_base&lt;/code&gt;.</source>
          <target state="translated">这个jar要求您在应用的 &lt;code&gt;secret_key_base&lt;/code&gt; 上设置一个合适的密码进行验证。</target>
        </trans-unit>
        <trans-unit id="e3915c380b68cd39be6cba69c57aa30807df9192" translate="yes" xml:space="preserve">
          <source>This line mounts the engine at the path &lt;code&gt;/blorgh&lt;/code&gt;, which will make it accessible through the application only at that path.</source>
          <target state="translated">该行将引擎安装在路径 &lt;code&gt;/blorgh&lt;/code&gt; ，这将使其只能通过该路径上的应用程序进行访问。</target>
        </trans-unit>
        <trans-unit id="a92994e4bc3eb46baa1c70d2090e9dac787735bc" translate="yes" xml:space="preserve">
          <source>This line will mount the engine at &lt;code&gt;/blog&lt;/code&gt; in the application. Making it accessible at &lt;code&gt;http://localhost:3000/blog&lt;/code&gt; when the application runs with &lt;code&gt;rails
server&lt;/code&gt;.</source>
          <target state="translated">此行会将引擎安装在应用程序的 &lt;code&gt;/blog&lt;/code&gt; 中。当应用程序与 &lt;code&gt;rails server&lt;/code&gt; 运行时，可通过 &lt;code&gt;http://localhost:3000/blog&lt;/code&gt; 访问它。</target>
        </trans-unit>
        <trans-unit id="4cb62752a647511f462535ccfd7ae3c21187d930" translate="yes" xml:space="preserve">
          <source>This line will require there to be a &lt;code&gt;has_many&lt;/code&gt; association for comments defined on the &lt;code&gt;Blorgh::Article&lt;/code&gt; model, which there isn't right now. To define one, open &lt;code&gt;app/models/blorgh/article.rb&lt;/code&gt; and add this line into the model:</source>
          <target state="translated">该行将需要有一个 &lt;code&gt;has_many&lt;/code&gt; 关联，用于在 &lt;code&gt;Blorgh::Article&lt;/code&gt; 模型上定义的注释，该注释当前不存在。要定义一个，请打开 &lt;code&gt;app/models/blorgh/article.rb&lt;/code&gt; 并将此行添加到模型中：</target>
        </trans-unit>
        <trans-unit id="8a0d47373f7566fe90459e9b7e76c7dc55eeab3c" translate="yes" xml:space="preserve">
          <source>This link will allow you to bring up the form that lets you create a new article.</source>
          <target state="translated">这个链接会让你弹出让你创建新文章的表格。</target>
        </trans-unit>
        <trans-unit id="4bed1815ee2c5769736f0bbec391caf49e034039" translate="yes" xml:space="preserve">
          <source>This links the folder specified in &lt;code&gt;config.assets.prefix&lt;/code&gt; to &lt;code&gt;shared/assets&lt;/code&gt;. If you already use this shared folder you'll need to write your own deployment command.</source>
          <target state="translated">这 &lt;code&gt;config.assets.prefix&lt;/code&gt; 指定的文件夹链接到 &lt;code&gt;shared/assets&lt;/code&gt; 。如果您已经使用此共享文件夹，则需要编写自己的部署命令。</target>
        </trans-unit>
        <trans-unit id="1e5db0cbda6d065beb5a38ffcd5d827702f924ec" translate="yes" xml:space="preserve">
          <source>This list is in particular used to filter ordinary requests, &lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt; goes as first element to quickly short-circuit the common case.</source>
          <target state="translated">此列表尤其用于过滤普通请求，&lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;作为第一个元素来快速缩短常见情况。</target>
        </trans-unit>
        <trans-unit id="03ae548a58e0d2156b84b0334e5e8b7ddc51b2e5" translate="yes" xml:space="preserve">
          <source>This loads all the articles and the associated category and comments for each article.</source>
          <target state="translated">这将加载所有的文章和每个文章的相关类别和评论。</target>
        </trans-unit>
        <trans-unit id="35b4fe12be07a79f0640d65fa9aa10a39562ad00" translate="yes" xml:space="preserve">
          <source>This loads arbitrary HTML and/or JavaScript from an external source and embeds it as part of the site. This iframe is taken from an actual attack on legitimate Italian sites using the &lt;a href=&quot;http://isc.sans.org/diary.html?storyid=3015&quot;&gt;Mpack attack framework&lt;/a&gt;. Mpack tries to install malicious software through security holes in the web browser - very successfully, 50% of the attacks succeed.</source>
          <target state="translated">这将从外部源加载任意HTML和/或JavaScript，并将其嵌入为网站的一部分。该iframe来自使用&lt;a href=&quot;http://isc.sans.org/diary.html?storyid=3015&quot;&gt;Mpack攻击框架&lt;/a&gt;对合法意大利站点的实际攻击。Mpack尝试通过Web浏览器中的安全漏洞安装恶意软件-非常成功，成功进行了50％的攻击。</target>
        </trans-unit>
        <trans-unit id="4614d263bb358a560bb30e7d74cf0c9ee4528424" translate="yes" xml:space="preserve">
          <source>This locking mechanism will function inside a single Ruby process. To make it work across all web requests, the recommended approach is to add &lt;code&gt;lock_version&lt;/code&gt; as a hidden field to your form.</source>
          <target state="translated">这种锁定机制将在单个Ruby进程中起作用。为了使其能够在所有Web请求中正常工作，建议的方法是将 &lt;code&gt;lock_version&lt;/code&gt; 作为隐藏字段添加到表单中。</target>
        </trans-unit>
        <trans-unit id="c3cccb8ea5ac4e4769575827adeaafd779d48d6c" translate="yes" xml:space="preserve">
          <source>This looks up the &lt;code&gt;:record_invalid&lt;/code&gt; message in the Active Record error messages.</source>
          <target state="translated">这将在Active Record错误消息中查找 &lt;code&gt;:record_invalid&lt;/code&gt; 消息。</target>
        </trans-unit>
        <trans-unit id="5641f216bd18ec6a3d662f7d2a71c9f4c87eaa40" translate="yes" xml:space="preserve">
          <source>This maintains the context of the original caller on whether to return a path or full URL, e.g:</source>
          <target state="translated">这维护了原调用者的上下文,是返回一个路径还是完整的URL,如</target>
        </trans-unit>
        <trans-unit id="97595dab8f749316ed2ee9b09cfa05a2cc72c3be" translate="yes" xml:space="preserve">
          <source>This makes &lt;code&gt;app/views/application/&lt;/code&gt; a great place for your shared partials, which can then be rendered in your ERB as such:</source>
          <target state="translated">这使 &lt;code&gt;app/views/application/&lt;/code&gt; 成为您共享部分的理想场所，然后可以在您的ERB中将其呈现为：</target>
        </trans-unit>
        <trans-unit id="895a23f64b056803b5a7798b1ba0ae3b3d462853" translate="yes" xml:space="preserve">
          <source>This makes for clearer readability if you have a large number of variable conditions.</source>
          <target state="translated">如果你有大量的变量条件,这样就会有更清晰的可读性。</target>
        </trans-unit>
        <trans-unit id="1da73b5103ef8a7a3085798d29399f725987961c" translate="yes" xml:space="preserve">
          <source>This makes sense if you think about it: if you were to call &lt;code&gt;post.tags.delete(Tag.find_by(name: 'food'))&lt;/code&gt; you would want the 'food' tag to be unlinked from the post, rather than for the tag itself to be removed from the database.</source>
          <target state="translated">考虑一下这很有意义：如果您要调用 &lt;code&gt;post.tags.delete(Tag.find_by(name: 'food'))&lt;/code&gt; ，则希望将'food'标签与该帖子取消链接，而不是标签本身以从数据库中删除。</target>
        </trans-unit>
        <trans-unit id="e67dcce11dbca0a90d9ca6117b66a33e99f635f9" translate="yes" xml:space="preserve">
          <source>This makes sense in most applications, since you never should require a file in &lt;code&gt;app/models&lt;/code&gt;, for example, and Zeitwerk only uses absolute file names internally.</source>
          <target state="translated">这在大多数应用程序中是有道理的，例如，因为您永远都不需要在 &lt;code&gt;app/models&lt;/code&gt; 中使用文件，并且Zeitwerk在内部仅使用绝对文件名。</target>
        </trans-unit>
        <trans-unit id="89c6cd8a5ef940d3f1e8ac1a8890a63e3ef1de8b" translate="yes" xml:space="preserve">
          <source>This manifest &lt;code&gt;app/assets/javascripts/application.js&lt;/code&gt;:</source>
          <target state="translated">此清单 &lt;code&gt;app/assets/javascripts/application.js&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="8e807b6eee38015b2030baa284e9a02d6b6f5abf" translate="yes" xml:space="preserve">
          <source>This manual describes common security problems in web applications and how to avoid them with Rails.</source>
          <target state="translated">本手册介绍了Web应用中常见的安全问题,以及如何通过Rails避免这些问题。</target>
        </trans-unit>
        <trans-unit id="7da615f537586c7fb1d2fa742facf71a9d313d23" translate="yes" xml:space="preserve">
          <source>This marks every template in the directory as a dependency. To find those templates, the wildcard path must be absolutely defined from &lt;code&gt;app/views&lt;/code&gt; or paths otherwise added with &lt;code&gt;prepend_view_path&lt;/code&gt; or &lt;code&gt;append_view_path&lt;/code&gt;. This way the wildcard for &lt;code&gt;app/views/recordings/events&lt;/code&gt; would be &lt;code&gt;recordings/events/*&lt;/code&gt; etc.</source>
          <target state="translated">这会将目录中的每个模板标记为依赖项。要查找这些模板，必须从 &lt;code&gt;app/views&lt;/code&gt; 或其他通过 &lt;code&gt;prepend_view_path&lt;/code&gt; 或 &lt;code&gt;append_view_path&lt;/code&gt; 添加的路径中绝对定义通配符路径。这样， &lt;code&gt;app/views/recordings/events&lt;/code&gt; 的通配符将是 &lt;code&gt;recordings/events/*&lt;/code&gt; 等。</target>
        </trans-unit>
        <trans-unit id="590b29fa10d33f8d8d0328642011a76bdd0db844" translate="yes" xml:space="preserve">
          <source>This marks the &lt;code&gt;:log_entry&lt;/code&gt; parameters hash and any sub-hash of it as permitted and does not check for permitted scalars, anything is accepted. Extreme care should be taken when using &lt;code&gt;permit!&lt;/code&gt;, as it will allow all current and future model attributes to be mass-assigned.</source>
          <target state="translated">这 &lt;code&gt;:log_entry&lt;/code&gt; 参数哈希值及其任何子哈希值标记为允许，并且不检查允许的标量，任何东西都被接受。使用 &lt;code&gt;permit!&lt;/code&gt; 时应格外小心！，因为它将允许批量分配所有当前和将来的模型属性。</target>
        </trans-unit>
        <trans-unit id="b3627b7191e06bb1d36c84e175b1119ef41e58cf" translate="yes" xml:space="preserve">
          <source>This matches normal Ruby method inheritance: think of writing an attribute on a subclass as overriding the reader method. However, you need to be aware when using &lt;code&gt;class_attribute&lt;/code&gt; with mutable structures as &lt;code&gt;Array&lt;/code&gt; or &lt;code&gt;Hash&lt;/code&gt;. In such cases, you don't want to do changes in place. Instead use setters:</source>
          <target state="translated">这与常规的Ruby方法继承相匹配：将子类上的属性写为重写reader方法。但是，在将 &lt;code&gt;class_attribute&lt;/code&gt; 与可变结构（如 &lt;code&gt;Array&lt;/code&gt; 或 &lt;code&gt;Hash&lt;/code&gt; )一起使用时，您需要注意。在这种情况下，您不想就地进行更改。而是使用setter：</target>
        </trans-unit>
        <trans-unit id="a46526cf145bed88fc68b22717b92b243653a2a4" translate="yes" xml:space="preserve">
          <source>This may appear straightforward:</source>
          <target state="translated">这可能看起来很简单。</target>
        </trans-unit>
        <trans-unit id="56c5e03d9e5fdcadc2292beb97b4f8fe28aba7fe" translate="yes" xml:space="preserve">
          <source>This may be useful if you want to revert engine's migrations before removing it. To revert all migrations from blorgh engine you can run code such as:</source>
          <target state="translated">如果你想在移除引擎之前恢复引擎的迁移,这可能会很有用。要恢复blorgh引擎的所有迁移,你可以运行这样的代码。</target>
        </trans-unit>
        <trans-unit id="538ab1c487668c557422fd6fcef02f42a0371322" translate="yes" xml:space="preserve">
          <source>This may improve the asset loading performance of your application. It is also possible the combination of additional connection overhead (DNS, SSL) and the overall browser connection limits may result in this solution being slower. You should be sure to measure your actual performance across targeted browsers both before and after this change.</source>
          <target state="translated">这可能会改善您应用程序的资产加载性能。此外,额外的连接开销(DNS、SSL)和整体浏览器连接限制的结合也可能导致该解决方案更慢。您应该确保在此更改之前和之后测量目标浏览器的实际性能。</target>
        </trans-unit>
        <trans-unit id="32d6c438d08b83b4159c8193fff3cd5013e7732c" translate="yes" xml:space="preserve">
          <source>This may work fine in some languages. However, &lt;em&gt;in Ruby ^ and $ match the &lt;strong&gt;line&lt;/strong&gt; beginning and line end&lt;/em&gt;. And thus a URL like this passes the filter without problems:</source>
          <target state="translated">在某些语言中，这可能工作正常。但是，&lt;em&gt;在Ruby ^和$中，匹配&lt;strong&gt;行首&lt;/strong&gt;和行尾&lt;/em&gt;。因此，这样的URL可以毫无问题地通过过滤器：</target>
        </trans-unit>
        <trans-unit id="2b8d7be15b0899eedd7a1e6c90bbd24c8b8b8fb3" translate="yes" xml:space="preserve">
          <source>This means it can be used in association definitions:</source>
          <target state="translated">这意味着它可以在关联定义中使用。</target>
        </trans-unit>
        <trans-unit id="68b1d1ba6366f943b4492d30914613515d105920" translate="yes" xml:space="preserve">
          <source>This means that all behavior added to Vehicle is available for Car too, as associations, public methods, etc.</source>
          <target state="translated">这意味着,所有添加到Vehicle的行为也可以用于Car,如关联、公共方法等。</target>
        </trans-unit>
        <trans-unit id="6ef5441a46d6ca86c47c8a760c64e494e2e4803e" translate="yes" xml:space="preserve">
          <source>This means that any field with an error ends up with a 2 pixel red border.</source>
          <target state="translated">这意味着任何有错误的字段最后都会有一个2像素的红色边框。</target>
        </trans-unit>
        <trans-unit id="561c2a96d25e2de371013f24d3520fd51f189c4a" translate="yes" xml:space="preserve">
          <source>This means that if your application used to have its own streaming module, the following code would break in production mode:</source>
          <target state="translated">这意味着,如果你的应用程序曾经有自己的流媒体模块,下面的代码将在生产模式下中断。</target>
        </trans-unit>
        <trans-unit id="5bdd437fb4bc86a7944c33d8eb8128f32dd7274b" translate="yes" xml:space="preserve">
          <source>This means that the cache middleware will store off the &lt;code&gt;Last-Modified&lt;/code&gt; value for a URL in the Rails cache, and add an &lt;code&gt;If-Modified-Since&lt;/code&gt; header to any subsequent inbound requests for the same URL.</source>
          <target state="translated">这意味着缓存中间件将在Rails缓存中存储URL 的 &lt;code&gt;Last-Modified&lt;/code&gt; 值，并将 &lt;code&gt;If-Modified-Since&lt;/code&gt; 标头添加到同一URL的所有后续入站请求中。</target>
        </trans-unit>
        <trans-unit id="6dd0a8dc082efe987cb2d25ffe1482a661216e84" translate="yes" xml:space="preserve">
          <source>This means that your functional and integration tests that use</source>
          <target state="translated">这意味着您的功能测试和集成测试使用了</target>
        </trans-unit>
        <trans-unit id="0d69c41c544d5ded04374c5ca1ddfe8bb77f877b" translate="yes" xml:space="preserve">
          <source>This means that, if you have &lt;code&gt;yield :title&lt;/code&gt; in your layout and you want to use streaming, you would have to render the whole template (and eventually trigger all queries) before streaming the title and all assets, which kills the purpose of streaming. For this purpose, you can use a helper called &lt;code&gt;provide&lt;/code&gt; that does the same as &lt;code&gt;content_for&lt;/code&gt; but tells the layout to stop searching for other entries and continue rendering.</source>
          <target state="translated">这意味着，如果布局中具有 &lt;code&gt;yield :title&lt;/code&gt; 并要使用流式传输，则必须在流式传输标题和所有资产之前渲染整个模板（并最终触发所有查询），这会终止流式传输的目的。为此，您可以使用一个名为 &lt;code&gt;provide&lt;/code&gt; 的助手，该助手的功能与 &lt;code&gt;content_for&lt;/code&gt; 相同，但告诉布局停止搜索其他条目并继续渲染。</target>
        </trans-unit>
        <trans-unit id="30566771d7cc580ce3d944941f573990a00f44b5" translate="yes" xml:space="preserve">
          <source>This means that, if your application currently relies on instance variables set in the template to be used in the layout, they won't work once you move to streaming. The proper way to communicate between layout and template, regardless of whether you use streaming or not, is by using &lt;code&gt;content_for&lt;/code&gt;, &lt;code&gt;provide&lt;/code&gt; and &lt;code&gt;yield&lt;/code&gt;.</source>
          <target state="translated">这意味着，如果您的应用程序当前依赖于模板中设置的实例变量以在布局中使用，则一旦您移至流式传输，它们将无法工作。无论您是否使用流技术，在布局和模板之间进行通信的正确方法是使用 &lt;code&gt;content_for&lt;/code&gt; ， &lt;code&gt;provide&lt;/code&gt; 和 &lt;code&gt;yield&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="64488eace3ccd3e2554936646679ca9ab5fca0f1" translate="yes" xml:space="preserve">
          <source>This means that, on MySQL, you shouldn't execute DDL operations inside a &lt;a href=&quot;databasestatements#method-i-transaction&quot;&gt;transaction&lt;/a&gt; call that you know might create a savepoint. Otherwise, &lt;a href=&quot;databasestatements#method-i-transaction&quot;&gt;transaction&lt;/a&gt; will raise exceptions when it tries to release the already-automatically-released savepoints:</source>
          <target state="translated">这意味着，在MySQL上，您不应在知道可能会创建保存点的&lt;a href=&quot;databasestatements#method-i-transaction&quot;&gt;事务&lt;/a&gt;调用内执行DDL操作。否则，&lt;a href=&quot;databasestatements#method-i-transaction&quot;&gt;事务&lt;/a&gt;将在尝试释放已经自动释放的保存点时引发异常：</target>
        </trans-unit>
        <trans-unit id="8b3a3ef7a49d78168be8db72b13fa7dcda38a9ec" translate="yes" xml:space="preserve">
          <source>This means the methods &lt;code&gt;sanitize&lt;/code&gt;, &lt;code&gt;sanitize_css&lt;/code&gt;, &lt;code&gt;strip_tags&lt;/code&gt; and &lt;code&gt;strip_links&lt;/code&gt; are backed by a new implementation.</source>
          <target state="translated">这意味着方法 &lt;code&gt;sanitize&lt;/code&gt; ， &lt;code&gt;sanitize_css&lt;/code&gt; ， &lt;code&gt;strip_tags&lt;/code&gt; 和 &lt;code&gt;strip_links&lt;/code&gt; 由新的实现支持。</target>
        </trans-unit>
        <trans-unit id="9389cdff0ab192e91d33a4ba04dc29b765723d18" translate="yes" xml:space="preserve">
          <source>This means, that in the &lt;code&gt;:en&lt;/code&gt; locale, the key &lt;em&gt;hello&lt;/em&gt; will map to the &lt;em&gt;Hello world&lt;/em&gt; string. Every string inside Rails is internationalized in this way, see for instance Active Model validation messages in the &lt;a href=&quot;https://github.com/rails/rails/blob/master/activemodel/lib/active_model/locale/en.yml&quot;&gt;&lt;code&gt;activemodel/lib/active_model/locale/en.yml&lt;/code&gt;&lt;/a&gt; file or time and date formats in the &lt;a href=&quot;https://github.com/rails/rails/blob/master/activesupport/lib/active_support/locale/en.yml&quot;&gt;&lt;code&gt;activesupport/lib/active_support/locale/en.yml&lt;/code&gt;&lt;/a&gt; file. You can use YAML or standard Ruby Hashes to store translations in the default (Simple) backend.</source>
          <target state="translated">这意味着，在 &lt;code&gt;:en&lt;/code&gt; 区域设置中，关键字&lt;em&gt;hello&lt;/em&gt;将映射到&lt;em&gt;Hello世界&lt;/em&gt;字符串。Rails内部的每个字符串都以这种方式国际化，例如，请参见&lt;a href=&quot;https://github.com/rails/rails/blob/master/activemodel/lib/active_model/locale/en.yml&quot;&gt; &lt;code&gt;activemodel/lib/active_model/locale/en.yml&lt;/code&gt; &lt;/a&gt;文件中的Active Model验证消息，或&lt;a href=&quot;https://github.com/rails/rails/blob/master/activesupport/lib/active_support/locale/en.yml&quot;&gt; &lt;code&gt;activesupport/lib/active_support/locale/en.yml&lt;/code&gt; &lt;/a&gt;文件中的时间和日期格式。您可以使用YAML或标准Ruby哈希将翻译存储在默认（简单）后端中。</target>
        </trans-unit>
        <trans-unit id="3a50c2e300e52fe73c69e4357cb7f563efee5bed" translate="yes" xml:space="preserve">
          <source>This method accepts &lt;strong&gt;no&lt;/strong&gt; arguments.</source>
          <target state="translated">此方法不接受&lt;strong&gt;任何&lt;/strong&gt;参数。</target>
        </trans-unit>
        <trans-unit id="990a29e49dfbf85694809673700e7e888fa73b40" translate="yes" xml:space="preserve">
          <source>This method accepts a block, which is passed down to &lt;a href=&quot;relation#method-i-create&quot;&gt;create&lt;/a&gt;. The last example above can be alternatively written this way:</source>
          <target state="translated">此方法接受一个块，将其传递给&lt;a href=&quot;relation#method-i-create&quot;&gt;create&lt;/a&gt;。上面的最后一个示例可以这样写：</target>
        </trans-unit>
        <trans-unit id="5e3a23d8239c4d27ea6987fe5225081e48e27730" translate="yes" xml:space="preserve">
          <source>This method accepts any of the following day symbols: :monday, :tuesday, :wednesday, :thursday, :friday, :saturday, :sunday</source>
          <target state="translated">本方法接受以下任何一个日期符号::星期一,:星期二,:星期三,:星期四,:星期五,:星期六,:星期日。</target>
        </trans-unit>
        <trans-unit id="f0396aeacdc2ea90763adb8e1466a2c5c7182ffa" translate="yes" xml:space="preserve">
          <source>This method accepts any of the following:</source>
          <target state="translated">本方法接受以下任何一种方法:</target>
        </trans-unit>
        <trans-unit id="6f63e92a7504413095ca51e07b7c2d9a816841aa" translate="yes" xml:space="preserve">
          <source>This method accepts both a single key and an array of keys.</source>
          <target state="translated">本方法既接受单个键,也接受一个键数组。</target>
        </trans-unit>
        <trans-unit id="0a9e49d197244769492bd5dd28fcd7d2154b0757" translate="yes" xml:space="preserve">
          <source>This method accepts three options:</source>
          <target state="translated">本方法接受三个选项。</target>
        </trans-unit>
        <trans-unit id="49398d4997d7146a74d4b5b11f9cd1a91e280bf1" translate="yes" xml:space="preserve">
          <source>This method also accepts a block, which will return the current time back to its original state at the end of the block:</source>
          <target state="translated">这个方法也接受一个区块,在区块结束后会将当前时间返回到原始状态。</target>
        </trans-unit>
        <trans-unit id="9113793c4f80a41633eb596a1bf294057e3b6002" translate="yes" xml:space="preserve">
          <source>This method also accepts a block. All queries inside the block will not use the previously set scopes.</source>
          <target state="translated">这个方法也接受一个块。在块中的所有查询将不会使用之前设置的作用域。</target>
        </trans-unit>
        <trans-unit id="2a44ede58b45f5b66d134c4ffd92e4f37c5f79ae" translate="yes" xml:space="preserve">
          <source>This method also supports filtering. If the &lt;code&gt;:only&lt;/code&gt; option is specified, then only the listed job(s) will be performed.</source>
          <target state="translated">此方法还支持过滤。如果指定 &lt;code&gt;:only&lt;/code&gt; 选项，则仅执行列出的作业。</target>
        </trans-unit>
        <trans-unit id="957d919bd7775b422cbfd87a80daa9765e349b81" translate="yes" xml:space="preserve">
          <source>This method also takes a block, expected to return a string:</source>
          <target state="translated">这个方法也需要一个块,预计返回一个字符串。</target>
        </trans-unit>
        <trans-unit id="c3f998554191e12f3faa53f79526b60263d4b5de" translate="yes" xml:space="preserve">
          <source>This method also takes a block:</source>
          <target state="translated">这个方法也需要一个块。</target>
        </trans-unit>
        <trans-unit id="9bb6ebbd17dbb44aadc1d74a24b29c946e864bbe" translate="yes" xml:space="preserve">
          <source>This method always returns a record, but if creation was attempted and failed due to validation errors it won't be persisted, you get what &lt;a href=&quot;relation#method-i-create&quot;&gt;create&lt;/a&gt; returns in such situation.</source>
          <target state="translated">此方法始终返回一条记录，但是如果尝试创建并且由于验证错误而失败，则该记录将不会持久保存，您将获得在这种情况下&lt;a href=&quot;relation#method-i-create&quot;&gt;create所&lt;/a&gt;返回的内容。</target>
        </trans-unit>
        <trans-unit id="9e5b0b8d509f4f4bdf772cef122c5d6c897f037c" translate="yes" xml:space="preserve">
          <source>This method assumes an &lt;code&gt;ApplicationController&lt;/code&gt; exists, and it extends &lt;code&gt;ActionController::Base&lt;/code&gt;</source>
          <target state="translated">此方法假定存在 &lt;code&gt;ApplicationController&lt;/code&gt; ，并且扩展了 &lt;code&gt;ActionController::Base&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6ef88032bc400f9e0ada77d7fd319a7975c9a6d7" translate="yes" xml:space="preserve">
          <source>This method can also take a block:</source>
          <target state="translated">这种方法也可以采取块。</target>
        </trans-unit>
        <trans-unit id="89f92c11f8324dc471aa79968e8746f7a5e1cd59" translate="yes" xml:space="preserve">
          <source>This method can be passed attribute names and an optional time argument. If attribute names are passed, they are updated along with updated_at/on attributes. If no time argument is passed, the current time is used as default.</source>
          <target state="translated">这个方法可以传递属性名和一个可选的时间参数。如果传递了属性名,它们会和update_at/on属性一起被更新。如果没有传递时间参数,则使用当前时间作为默认值。</target>
        </trans-unit>
        <trans-unit id="793c125ffa75c4e65b2043f2e0d8283612bd8dc8" translate="yes" xml:space="preserve">
          <source>This method enables you to use the flash as a central messaging system in your app. When you need to pass an object to the next action, you use the standard flash assign (&lt;code&gt;[]=&lt;/code&gt;). When you need to pass an object to the current action, you use &lt;code&gt;now&lt;/code&gt;, and your object will vanish when the current action is done.</source>
          <target state="translated">通过此方法，您可以将Flash用作应用程序中的中央消息传递系统。当需要将对象传递到下一个动作时，可以使用标准的Flash分配（ &lt;code&gt;[]=&lt;/code&gt; ）。当您需要将对象传递给当前操作时，请使用 &lt;code&gt;now&lt;/code&gt; ，当当前操作完成时，您的对象将消失。</target>
        </trans-unit>
        <trans-unit id="dcd8de23f881e1252dc585b3ca49217da91ca185" translate="yes" xml:space="preserve">
          <source>This method escapes whatever is needed, both for the key and the value:</source>
          <target state="translated">这个方法可以逃逸任何需要的东西,包括键和值。</target>
        </trans-unit>
        <trans-unit id="8a09358115f3d10c59be2557dc4838d6a74ffcdd" translate="yes" xml:space="preserve">
          <source>This method exists to avoid the expensive primary_key check internally, without breaking compatibility with the &lt;a href=&quot;read#method-i-read_attribute&quot;&gt;#read_attribute&lt;/a&gt; API</source>
          <target state="translated">存在此方法是为了避免在内部进行昂贵的primary_key检查，而又不会破坏与&lt;a href=&quot;read#method-i-read_attribute&quot;&gt;#read_attribute&lt;/a&gt; API的兼容性</target>
        </trans-unit>
        <trans-unit id="2ce4a391f95da2c1e472e9aa40a0b8600b91a886" translate="yes" xml:space="preserve">
          <source>This method finds the record by its primary key (which could be assigned manually) and modifies the receiver in-place:</source>
          <target state="translated">该方法通过主键(可以手动分配)找到记录,并就地修改接收机。</target>
        </trans-unit>
        <trans-unit id="17fdcafd122d296c493d784129a615dd86e51a21" translate="yes" xml:space="preserve">
          <source>This method first computes the destination date passing &lt;code&gt;:years&lt;/code&gt;, &lt;code&gt;:months&lt;/code&gt;, &lt;code&gt;:weeks&lt;/code&gt;, and &lt;code&gt;:days&lt;/code&gt; to &lt;code&gt;Date#advance&lt;/code&gt; documented above. After that, it adjusts the time calling &lt;code&gt;since&lt;/code&gt; with the number of seconds to advance. This order is relevant, a different ordering would give different datetimes in some edge-cases. The example in &lt;code&gt;Date#advance&lt;/code&gt; applies, and we can extend it to show order relevance related to the time bits.</source>
          <target state="translated">此方法首先计算将日期传递到上面记录的 &lt;code&gt;Date#advance&lt;/code&gt; 的 &lt;code&gt;:years&lt;/code&gt; ， &lt;code&gt;:months&lt;/code&gt; ， &lt;code&gt;:weeks&lt;/code&gt; 和 &lt;code&gt;:days&lt;/code&gt; 的目标日期。在此之后，它调整的时间打电话 &lt;code&gt;since&lt;/code&gt; 用秒来提前数。该顺序是相关的，在某些情况下，不同的顺序将给出不同的日期时间。 &lt;code&gt;Date#advance&lt;/code&gt; 中的示例适用，我们可以对其进行扩展以显示与时间位相关的顺序相关性。</target>
        </trans-unit>
        <trans-unit id="b7b9ab33ec418700f15d67ca9b49e97cbf40c15a" translate="yes" xml:space="preserve">
          <source>This method has the same semantics of &lt;code&gt;update&lt;/code&gt;, except it does not modify the receiver but rather returns a new hash with indifferent access with the result of the merge.</source>
          <target state="translated">此方法具有 &lt;code&gt;update&lt;/code&gt; 的相同语义，不同之处在于它不修改接收方，而是返回对合并结果无差别访问的新哈希。</target>
        </trans-unit>
        <trans-unit id="ea9df9a3e2a988d68e7ebf054d8a27879d6d1a07" translate="yes" xml:space="preserve">
          <source>This method is I18n aware, so you can set up custom approximations for a locale. This can be useful, for example, to transliterate German's &amp;ldquo;&amp;uuml;&amp;rdquo; and &amp;ldquo;&amp;ouml;&amp;rdquo; to &amp;ldquo;ue&amp;rdquo; and &amp;ldquo;oe&amp;rdquo;, or to add support for transliterating Russian to ASCII.</source>
          <target state="translated">此方法支持I18n，因此您可以为语言环境设置自定义近似值。例如，这对于将德语的&amp;ldquo;&amp;uuml;&amp;rdquo;和&amp;ldquo;&amp;ouml;&amp;rdquo;音译为&amp;ldquo; ue&amp;rdquo;和&amp;ldquo; oe&amp;rdquo;或增加对将俄语的音译为ASCII的支持很有用。</target>
        </trans-unit>
        <trans-unit id="94ef3129cb2c2ade866e1ef7b0770f8723786088" translate="yes" xml:space="preserve">
          <source>This method is a shortcut to all default validators and any custom validator classes ending in 'Validator'. Note that Rails default validators can be overridden inside specific classes by creating custom validator classes in their place such as PresenceValidator.</source>
          <target state="translated">这个方法是所有默认验证器和任何以'Validator'结尾的自定义验证器类的快捷方式。请注意,Rails的默认验证器可以通过创建自定义验证器类(如PresenceValidator)在特定的类中被覆盖。</target>
        </trans-unit>
        <trans-unit id="358d1b206c0fab50e9c776b6e23c2da20d6293e5" translate="yes" xml:space="preserve">
          <source>This method is aliased as &lt;code&gt;collection.concat&lt;/code&gt; and &lt;code&gt;collection.push&lt;/code&gt;.</source>
          <target state="translated">该方法的别名为 &lt;code&gt;collection.concat&lt;/code&gt; 和 &lt;code&gt;collection.push&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b69e332abfa784b22407063fd6f9a3b21fe950b7" translate="yes" xml:space="preserve">
          <source>This method is aliased to &lt;code&gt;to_s&lt;/code&gt;.</source>
          <target state="translated">此方法别名为 &lt;code&gt;to_s&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="79238276df741c9642608968ce900140be9fab9a" translate="yes" xml:space="preserve">
          <source>This method is also aliased as &lt;code&gt;getutc&lt;/code&gt;.</source>
          <target state="translated">此方法也别名为 &lt;code&gt;getutc&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fd68b2b34136cbfd2ac2e50ac3c1ec2c81876180" translate="yes" xml:space="preserve">
          <source>This method is also aliased as &lt;code&gt;to_param&lt;/code&gt;.</source>
          <target state="translated">此方法也别名为 &lt;code&gt;to_param&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="14e442034aa8b8782fea4c4a1a220d5805afb6dc" translate="yes" xml:space="preserve">
          <source>This method is automatically called for a blob when it's attached for the first time. You can call it to analyze a blob again (e.g. if you add a new analyzer or modify an existing one).</source>
          <target state="translated">当一个blob第一次被连接时,本方法会自动被调用。你可以调用它来再次分析一个blob(例如,如果你添加一个新的分析器或修改一个现有的分析器)。</target>
        </trans-unit>
        <trans-unit id="5a31c0a8e8d85adc0dd81c1e9ce90b3ead125291" translate="yes" xml:space="preserve">
          <source>This method is called after subscription has been added to the connection and confirms or rejects the subscription.</source>
          <target state="translated">本方法在订阅被添加到连接后被调用,确认或拒绝订阅。</target>
        </trans-unit>
        <trans-unit id="02c095641d1fcbf07c9da55ce3f958f9ef743e66" translate="yes" xml:space="preserve">
          <source>This method is defined to be able to write</source>
          <target state="translated">这个方法被定义为可以写</target>
        </trans-unit>
        <trans-unit id="5a43b9eab0b21223ab37dc3e74cfae1ad17ddf25" translate="yes" xml:space="preserve">
          <source>This method is instrumented as &amp;ldquo;!render_template.action_view&amp;rdquo;. Notice that we use a bang in this instrumentation because you don't want to consume this in production. This is only slow if it's being listened to.</source>
          <target state="translated">该方法被标记为&amp;ldquo;！render_template.action_view&amp;rdquo;。注意，我们在此工具中使用了一个&amp;ldquo;爆炸&amp;rdquo;，因为您不想在生产中使用它。仅当正在收听时，这才很慢。</target>
        </trans-unit>
        <trans-unit id="2aa4291b05902cdaee1873fd2c5e3adfb853f3b9" translate="yes" xml:space="preserve">
          <source>This method is invoked when a log event occurs</source>
          <target state="translated">当有日志事件发生时,会调用此方法。</target>
        </trans-unit>
        <trans-unit id="cec76b3d0537cb8421990ce1470964e0b635ddbf" translate="yes" xml:space="preserve">
          <source>This method is not tolerant to non-existing dates, if the change is invalid &lt;code&gt;ArgumentError&lt;/code&gt; is raised:</source>
          <target state="translated">如果更改无效，则此方法不能容忍不存在的日期：引发 &lt;code&gt;ArgumentError&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="4893b4cc7c9973033ec43f501db42e9692a06713" translate="yes" xml:space="preserve">
          <source>This method is only useful &lt;em&gt;after&lt;/em&gt; validations have been run, because it only inspects the errors collection and does not trigger validations itself. It's different from the &lt;code&gt;ActiveRecord::Base#invalid?&lt;/code&gt; method explained above because it doesn't verify the validity of the object as a whole. It only checks to see whether there are errors found on an individual attribute of the object.</source>
          <target state="translated">此方法仅&lt;em&gt;在&lt;/em&gt;运行验证后才有用，因为它仅检查错误集合，而不会触发验证本身。它与 &lt;code&gt;ActiveRecord::Base#invalid?&lt;/code&gt; 上面说明的方法，因为它不能验证整个对象的有效性。它仅检查是否在对象的单个属性上发现错误。</target>
        </trans-unit>
        <trans-unit id="e3905cdb6dc11d3e35b1d1d62c9a39b48c35d4cb" translate="yes" xml:space="preserve">
          <source>This method is opposite of register method.</source>
          <target state="translated">这种方法与寄存器方法相反。</target>
        </trans-unit>
        <trans-unit id="9758645bd22f929081aa8a8b6742e9cd715050cb" translate="yes" xml:space="preserve">
          <source>This method is rarely used directly. Use &lt;code&gt;#get&lt;/code&gt;, &lt;code&gt;#post&lt;/code&gt;, or other standard HTTP methods in integration tests. &lt;code&gt;#process&lt;/code&gt; is only required when using a request method that doesn't have a method defined in the integration tests.</source>
          <target state="translated">这种方法很少直接使用。在集成测试中使用 &lt;code&gt;#get&lt;/code&gt; ， &lt;code&gt;#post&lt;/code&gt; 或其他标准HTTP方法。仅当使用在集成测试中未定义方法的请求方法时，才需要 &lt;code&gt;#process&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2925b9d90887a1a5bd94ae6d12e2180383068708" translate="yes" xml:space="preserve">
          <source>This method is responsible for properly setting the encoding of the source. Until this point, we assume that the source is BINARY data. If no additional information is supplied, we assume the encoding is the same as &lt;code&gt;Encoding.default_external&lt;/code&gt;.</source>
          <target state="translated">此方法负责正确设置源的编码。在此之前，我们假设源是BINARY数据。如果没有提供其他信息，则假定编码与 &lt;code&gt;Encoding.default_external&lt;/code&gt; 相同。</target>
        </trans-unit>
        <trans-unit id="7edbbc29ebb04a4ee14cd5702cebcf9de1ca9fe4" translate="yes" xml:space="preserve">
          <source>This method is similar in purpose to &lt;code&gt;Kernel#Array&lt;/code&gt;, but there are some differences:</source>
          <target state="translated">此方法的用途类似于 &lt;code&gt;Kernel#Array&lt;/code&gt; ，但有一些区别：</target>
        </trans-unit>
        <trans-unit id="72a06f3d0e49559b9fa88d5e815e94c47a978d18" translate="yes" xml:space="preserve">
          <source>This method is similar to Time#localtime, except that it uses &lt;code&gt;Time.zone&lt;/code&gt; as the local zone instead of the operating system's time zone.</source>
          <target state="translated">此方法与Time＃localtime相似，不同之处在于它使用 &lt;code&gt;Time.zone&lt;/code&gt; 作为本地区域而不是操作系统的时区。</target>
        </trans-unit>
        <trans-unit id="d21667b3d4c3cdf9d82503a64c46404c8cd871f0" translate="yes" xml:space="preserve">
          <source>This method is similar to except, but unlike except, it persists across merges:</source>
          <target state="translated">这个方法类似于 except,但与 except 不同的是,它在合并过程中会持续存在。</target>
        </trans-unit>
        <trans-unit id="a0a9b26612f00bffa6781a41652fa600f58d81fa" translate="yes" xml:space="preserve">
          <source>This method is the opposite of add method.</source>
          <target state="translated">这种方法与加法相反。</target>
        </trans-unit>
        <trans-unit id="7238d1b830654cc06bf54329d31471832093ced2" translate="yes" xml:space="preserve">
          <source>This method is used primarily for maintaining counter_cache columns that are used to store aggregate values. For example, a &lt;code&gt;DiscussionBoard&lt;/code&gt; may cache posts_count and comments_count to avoid running an SQL query to calculate the number of posts and comments there are, each time it is displayed.</source>
          <target state="translated">此方法主要用于维护用于存储聚合值的counter_cache列。例如， &lt;code&gt;DiscussionBoard&lt;/code&gt; 可以在每次显示时缓存posts_count和comments_count，以避免运行SQL查询来计算其中的帖子和评论的数量。</target>
        </trans-unit>
        <trans-unit id="0bbef1c2971e3e9c707a8b197b8e42d7aebd61c4" translate="yes" xml:space="preserve">
          <source>This method is used to define validations that cannot be corrected by end users and are considered exceptional. So each validator defined with bang or &lt;code&gt;:strict&lt;/code&gt; option set to &lt;code&gt;true&lt;/code&gt; will always raise &lt;code&gt;ActiveModel::StrictValidationFailed&lt;/code&gt; instead of adding error when validation fails. See &lt;code&gt;validates&lt;/code&gt; for more information about the validation itself.</source>
          <target state="translated">此方法用于定义最终用户无法纠正的验证，并且被认为是例外的。因此，将bang或 &lt;code&gt;:strict&lt;/code&gt; 选项设置为 &lt;code&gt;true&lt;/code&gt; 定义的每个验证器将始终引发 &lt;code&gt;ActiveModel::StrictValidationFailed&lt;/code&gt; 而不是在验证失败时添加错误。有关验证本身的更多信息，请参见 &lt;code&gt;validates&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="91c8abc879f54a8f19771378cab83ca529c48d9e" translate="yes" xml:space="preserve">
          <source>This method is useful in after callbacks to determine if an attribute was changed during the save that triggered the callbacks to run. It can be invoked as &lt;code&gt;saved_change_to_name?&lt;/code&gt; instead of &lt;code&gt;saved_change_to_attribute?(&quot;name&quot;)&lt;/code&gt;.</source>
          <target state="translated">此方法在回调之后确定在触发回调运行的保存期间是否更改了属性时很有用。可以作为 &lt;code&gt;saved_change_to_name?&lt;/code&gt; 调用吗？而不是 &lt;code&gt;saved_change_to_attribute?(&quot;name&quot;)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="efd57c805dc453ca877d929ae0e168a6ce0ca705" translate="yes" xml:space="preserve">
          <source>This method is useful in after callbacks to get the original value of an attribute before the save that triggered the callbacks to run. It can be invoked as &lt;code&gt;name_before_last_save&lt;/code&gt; instead of &lt;code&gt;attribute_before_last_save(&quot;name&quot;)&lt;/code&gt;.</source>
          <target state="translated">此方法在回调之后获取触发回调运行的保存之前获取属性的原始值时很有用。可以将其作为 &lt;code&gt;name_before_last_save&lt;/code&gt; 而不是 &lt;code&gt;attribute_before_last_save(&quot;name&quot;)&lt;/code&gt; 来调用。</target>
        </trans-unit>
        <trans-unit id="792859b798f7ac4d47b4904f6506da08852d09c0" translate="yes" xml:space="preserve">
          <source>This method is useful in after callbacks, to see the change in an attribute during the save that triggered the callbacks to run. It can be invoked as &lt;code&gt;saved_change_to_name&lt;/code&gt; instead of &lt;code&gt;saved_change_to_attribute(&quot;name&quot;)&lt;/code&gt;.</source>
          <target state="translated">此方法在after回调中很有用，以查看保存期间触发回调运行的属性更改。可以将其作为 &lt;code&gt;saved_change_to_name&lt;/code&gt; 而不是 &lt;code&gt;saved_change_to_attribute(&quot;name&quot;)&lt;/code&gt; 调用。</target>
        </trans-unit>
        <trans-unit id="62be837069cecd976797ac900bad3f7ea532bad6" translate="yes" xml:space="preserve">
          <source>This method is useful in validations and before callbacks to determine if the next call to &lt;code&gt;save&lt;/code&gt; will change a particular attribute. It can be invoked as &lt;code&gt;will_save_change_to_name?&lt;/code&gt; instead of &lt;code&gt;will_save_change_to_attribute(&quot;name&quot;)&lt;/code&gt;.</source>
          <target state="translated">此方法在验证中和回调之前很有用，以确定下一次 &lt;code&gt;save&lt;/code&gt; 调用是否会更改特定属性。可以作为 &lt;code&gt;will_save_change_to_name?&lt;/code&gt; 调用吗？代替 &lt;code&gt;will_save_change_to_attribute(&quot;name&quot;)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6e6c4c33319b7ee32eafeffc5d8cc5dfd0c1fed3" translate="yes" xml:space="preserve">
          <source>This method is useful in validations and before callbacks, to see the change to an attribute that will occur when the record is saved. It can be invoked as &lt;code&gt;name_change_to_be_saved&lt;/code&gt; instead of &lt;code&gt;attribute_change_to_be_saved(&quot;name&quot;)&lt;/code&gt;.</source>
          <target state="translated">此方法在验证中和回调之前很有用，以查看保存记录时将发生的属性更改。可以将其作为 &lt;code&gt;name_change_to_be_saved&lt;/code&gt; 而不是 &lt;code&gt;attribute_change_to_be_saved(&quot;name&quot;)&lt;/code&gt; 调用。</target>
        </trans-unit>
        <trans-unit id="0acb369e5856d0cd0383b35bb76708d9803df543" translate="yes" xml:space="preserve">
          <source>This method is useful in validations and before callbacks, to see the original value of an attribute prior to any changes about to be saved. It can be invoked as &lt;code&gt;name_in_database&lt;/code&gt; instead of &lt;code&gt;attribute_in_database(&quot;name&quot;)&lt;/code&gt;.</source>
          <target state="translated">此方法在验证中和回调之前很有用，可以在要保存的任何更改之前查看属性的原始值。可以将其作为 &lt;code&gt;name_in_database&lt;/code&gt; 而不是 &lt;code&gt;attribute_in_database(&quot;name&quot;)&lt;/code&gt; 调用。</target>
        </trans-unit>
        <trans-unit id="5e3d421d82d6185e6b9c626db00d4c6e0d309543" translate="yes" xml:space="preserve">
          <source>This method may be useful for example to easily accept both symbols and strings as options. For instance &lt;code&gt;ActionController::UrlRewriter&lt;/code&gt; defines</source>
          <target state="translated">例如，此方法可能非常有用，可以轻松地接受符号和字符串作为选项。例如 &lt;code&gt;ActionController::UrlRewriter&lt;/code&gt; 定义</target>
        </trans-unit>
        <trans-unit id="914277e3adb518f953eeeb1cf1f83a255a2821da" translate="yes" xml:space="preserve">
          <source>This method may be useful for example to easily accept both symbols and strings as options. For instance &lt;code&gt;ActionView::Helpers::FormHelper&lt;/code&gt; defines:</source>
          <target state="translated">例如，此方法可能非常有用，可以轻松地接受符号和字符串作为选项。例如， &lt;code&gt;ActionView::Helpers::FormHelper&lt;/code&gt; 定义：</target>
        </trans-unit>
        <trans-unit id="0c8ee578ca500f6179c32f3766aecedf81a5095f" translate="yes" xml:space="preserve">
          <source>This method must also receive a block that will be called once a path changes. The array of files and list of directories cannot be changed after &lt;a href=&quot;fileupdatechecker&quot;&gt;FileUpdateChecker&lt;/a&gt; has been initialized.</source>
          <target state="translated">此方法还必须接收一个路径更改后将被调用的块。初始化&lt;a href=&quot;fileupdatechecker&quot;&gt;FileUpdateChecker&lt;/a&gt;后，无法更改文件数组和目录列表。</target>
        </trans-unit>
        <trans-unit id="c6b3478ea308cc5ecea6556ec6aafbeaa137586e" translate="yes" xml:space="preserve">
          <source>This method needs to create a temporary file. By default it will create it in the same directory as the destination file. If you don't like this behavior you can provide a different directory but it must be on the same physical filesystem as the file you're trying to write.</source>
          <target state="translated">此方法需要创建一个临时文件。默认情况下,它将在与目标文件相同的目录下创建。如果你不喜欢这种行为,你可以提供一个不同的目录,但它必须与你试图写入的文件在同一个物理文件系统中。</target>
        </trans-unit>
        <trans-unit id="be96305885f21a6dcaea96d5e6cdbb478641b0dc" translate="yes" xml:space="preserve">
          <source>This method only works for connections that have been obtained through &lt;a href=&quot;connectionpool#method-i-connection&quot;&gt;connection&lt;/a&gt; or &lt;a href=&quot;connectionpool#method-i-with_connection&quot;&gt;with_connection&lt;/a&gt; methods, connections obtained through &lt;a href=&quot;connectionpool#method-i-checkout&quot;&gt;checkout&lt;/a&gt; will not be automatically released.</source>
          <target state="translated">此方法仅适用于通过&lt;a href=&quot;connectionpool#method-i-connection&quot;&gt;connection&lt;/a&gt;或&lt;a href=&quot;connectionpool#method-i-with_connection&quot;&gt;with_connection&lt;/a&gt;方法获得的连接，通过&lt;a href=&quot;connectionpool#method-i-checkout&quot;&gt;checkout&lt;/a&gt;获得的连接将不会自动释放。</target>
        </trans-unit>
        <trans-unit id="fecd57ae6ea471b95961d7bbf50092f6f908aecd" translate="yes" xml:space="preserve">
          <source>This method only works for connections that have been obtained through &lt;a href=&quot;connectionpool#method-i-connection&quot;&gt;connection&lt;/a&gt; or &lt;a href=&quot;connectionpool#method-i-with_connection&quot;&gt;with_connection&lt;/a&gt; methods. Connections obtained through &lt;a href=&quot;connectionpool#method-i-checkout&quot;&gt;checkout&lt;/a&gt; will not be detected by &lt;a href=&quot;connectionpool#method-i-active_connection-3F&quot;&gt;active_connection?&lt;/a&gt;</source>
          <target state="translated">此方法仅适用于通过&lt;a href=&quot;connectionpool#method-i-connection&quot;&gt;connection&lt;/a&gt;或&lt;a href=&quot;connectionpool#method-i-with_connection&quot;&gt;with_connection&lt;/a&gt;方法获得的连接。通过&lt;a href=&quot;connectionpool#method-i-checkout&quot;&gt;checkout&lt;/a&gt;获得的连接不会被&lt;a href=&quot;connectionpool#method-i-active_connection-3F&quot;&gt;active_connection&lt;/a&gt;检测到吗？</target>
        </trans-unit>
        <trans-unit id="50465cfe742f7b1908b49c2d57638b135b0b3f17" translate="yes" xml:space="preserve">
          <source>This method outputs without escaping a string. Since escaping tags is now default, this can be used when you don't want Rails to automatically escape tags. This is not recommended if the data is coming from the user's input.</source>
          <target state="translated">此方法在输出时不对字符串进行转义。由于转义标签现在是默认的,所以当你不想让Rails自动转义标签时,可以使用这个方法。如果数据来自用户的输入,则不建议使用此方法。</target>
        </trans-unit>
        <trans-unit id="d5af0d23d9a237d3c706e177116e7d324b2e140b" translate="yes" xml:space="preserve">
          <source>This method raises &lt;a href=&quot;../unpreviewableerror&quot;&gt;ActiveStorage::UnpreviewableError&lt;/a&gt; if no previewer accepts the receiving blob. To determine whether a blob is accepted by any previewer, call &lt;a href=&quot;representable#method-i-previewable-3F&quot;&gt;#previewable?&lt;/a&gt;.</source>
          <target state="translated">如果没有预览器接受接收的Blob，则此方法引发&lt;a href=&quot;../unpreviewableerror&quot;&gt;ActiveStorage :: UnpreviewableError&lt;/a&gt;。要确定某个预览器是否接受Blob，请调用&lt;a href=&quot;representable#method-i-previewable-3F&quot;&gt;#previewable？&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="638a44b23179629e0cfc048a71803fa8a07a0438" translate="yes" xml:space="preserve">
          <source>This method raises an &lt;a href=&quot;activerecorderror&quot;&gt;ActiveRecord::ActiveRecordError&lt;/a&gt; if the attribute is marked as readonly.</source>
          <target state="translated">如果该属性被标记为只读，则此方法引发&lt;a href=&quot;activerecorderror&quot;&gt;ActiveRecord :: ActiveRecordError&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8705c381acee7571ff04baf5c4b3125b142419cb" translate="yes" xml:space="preserve">
          <source>This method raises an &lt;a href=&quot;activerecorderror&quot;&gt;ActiveRecord::ActiveRecordError&lt;/a&gt; when called on new objects, or when at least one of the attributes is marked as readonly.</source>
          <target state="translated">当在新对象上调用时，或者当至少一个属性标记为只读时，此方法引发&lt;a href=&quot;activerecorderror&quot;&gt;ActiveRecord :: ActiveRecordError&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ebc904cc99f753720f7081ebdbc9072e056bb10d" translate="yes" xml:space="preserve">
          <source>This method receives an arbitrary number of action names, and an optional hash of options as last argument. With the call to &lt;code&gt;extract_options!&lt;/code&gt; you obtain the options hash and remove it from &lt;code&gt;actions&lt;/code&gt; in a simple and explicit way.</source>
          <target state="translated">此方法接收任意数量的动作名称，以及可选的选项哈希作为最后一个参数。随着对 &lt;code&gt;extract_options!&lt;/code&gt; 的调用！您可以获取选项哈希，并以简单明了的方式将其从 &lt;code&gt;actions&lt;/code&gt; 中删除。</target>
        </trans-unit>
        <trans-unit id="4f7c9527a5e9a35217b473bfb238234e6c26c30e" translate="yes" xml:space="preserve">
          <source>This method removes all scoping and will do a normal query on the table.</source>
          <target state="translated">这个方法删除了所有的作用域,并将对表进行正常查询。</target>
        </trans-unit>
        <trans-unit id="0279bc230bf5f453a0febf1afd12ffda02315973" translate="yes" xml:space="preserve">
          <source>This method returns &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="translated">此方法返回 &lt;code&gt;self&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c158386794267bd016b4cbb7aa01d24445ea74c4" translate="yes" xml:space="preserve">
          <source>This method returns an HTML safe string similar to what &lt;code&gt;Array#join&lt;/code&gt; would return. The array is flattened, and all items, including the supplied separator, are HTML escaped unless they are HTML safe, and the returned string is marked as HTML safe.</source>
          <target state="translated">此方法返回一个类似于 &lt;code&gt;Array#join&lt;/code&gt; 将返回的HTML安全字符串。数组将被展平，并且所有项目（包括提供的分隔符）都将进行HTML转义，除非它们是HTML安全的，并且返回的字符串被标记为HTML安全。</target>
        </trans-unit>
        <trans-unit id="e1edac73577cc4c6d542d34d226b8093205975ca" translate="yes" xml:space="preserve">
          <source>This method returns the response status, after performing the request. Furthermore, if this method was called from an &lt;a href=&quot;../integrationtest&quot;&gt;ActionDispatch::IntegrationTest&lt;/a&gt; object, then that object's &lt;code&gt;@response&lt;/code&gt; instance variable will point to a &lt;a href=&quot;../response&quot;&gt;Response&lt;/a&gt; object which one can use to inspect the details of the response.</source>
          <target state="translated">执行请求后，此方法返回响应状态。此外，如果从&lt;a href=&quot;../integrationtest&quot;&gt;ActionDispatch :: IntegrationTest&lt;/a&gt;对象调用了此方法，则该对象的 &lt;code&gt;@response&lt;/code&gt; 实例变量将指向&lt;a href=&quot;../response&quot;&gt;Response&lt;/a&gt;对象，可用于检查响应的详细信息。</target>
        </trans-unit>
        <trans-unit id="c0b09fc842518a232ab80cd1e5c59dd846aa511a" translate="yes" xml:space="preserve">
          <source>This method sets a weak ETag validator on the response so browsers and proxies may cache the response, keyed on the ETag. On subsequent requests, the If-None-Match header is set to the cached ETag. If it matches the current ETag, we can return a 304 Not Modified response with no body, letting the browser or proxy know that their cache is current. Big savings in request time and network bandwidth.</source>
          <target state="translated">这个方法在响应上设置了一个弱ETag验证器,因此浏览器和代理可以缓存响应,并在ETag上键入。在随后的请求中,If-None-Match头被设置为缓存的ETag。如果它与当前的ETag匹配,我们可以返回一个304 Not Modified响应,没有正文,让浏览器或代理知道他们的缓存是当前的。大大节省了请求时间和网络带宽。</target>
        </trans-unit>
        <trans-unit id="46e1b8cdccfba9c5b0c329ff915d3cb2a9607d53" translate="yes" xml:space="preserve">
          <source>This method should return a hash with assigns. You can overwrite this configuration per controller.</source>
          <target state="translated">这个方法应该返回一个带有赋值的哈希。你可以为每个控制器覆盖这个配置。</target>
        </trans-unit>
        <trans-unit id="41885df729b68cec5e492338ab5422001ebc9769" translate="yes" xml:space="preserve">
          <source>This method synchronously processes a variant of the preview image, so do not call it in views. Instead, generate a stable URL that redirects to the short-lived URL returned by this method.</source>
          <target state="translated">这个方法同步处理预览图像的变体,所以不要在视图中调用它。相反,生成一个稳定的URL,重定向到本方法返回的短时URL。</target>
        </trans-unit>
        <trans-unit id="012d0e0efeb4b90d2fb318d1a2210ebebbeac1ad" translate="yes" xml:space="preserve">
          <source>This method takes an authorization body and splits up the key-value pairs by the standardized &lt;code&gt;:&lt;/code&gt;, &lt;code&gt;;&lt;/code&gt;, or &lt;code&gt;\t&lt;/code&gt; delimiters defined in &lt;code&gt;AUTHN_PAIR_DELIMITERS&lt;/code&gt;.</source>
          <target state="translated">该方法采用授权主体，并通过标准化的 &lt;code&gt;:&lt;/code&gt; ， &lt;code&gt;;&lt;/code&gt; 拆分键值对。或 &lt;code&gt;AUTHN_PAIR_DELIMITERS&lt;/code&gt; 中定义的 &lt;code&gt;\t&lt;/code&gt; 分隔符。</target>
        </trans-unit>
        <trans-unit id="bcfbe784cc7e24a23013647372adbb0cfac865fa" translate="yes" xml:space="preserve">
          <source>This method validates that a checkbox on the user interface was checked when a form was submitted. This is typically used when the user needs to agree to your application's terms of service, confirm that some text is read, or any similar concept.</source>
          <target state="translated">这个方法验证当表单提交时,用户界面上的一个复选框是否被选中。这通常用于当用户需要同意你的应用程序的服务条款,确认一些文本被阅读,或任何类似的概念。</target>
        </trans-unit>
        <trans-unit id="5dff2d512cf23ec50b72edca0451ece07b06bbd1" translate="yes" xml:space="preserve">
          <source>This method will also generate 3 input hidden tags, for the actual year, month and day unless the option &lt;code&gt;:ignore_date&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt;. If you set the &lt;code&gt;:ignore_date&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;, you must have a &lt;code&gt;date_select&lt;/code&gt; on the same method within the form otherwise an exception will be raised.</source>
          <target state="translated">除非选项 &lt;code&gt;:ignore_date&lt;/code&gt; 设置为 &lt;code&gt;true&lt;/code&gt; ,否则该方法还将为实际的年，月和日生成3个输入隐藏标签。如果将 &lt;code&gt;:ignore_date&lt;/code&gt; 设置为 &lt;code&gt;true&lt;/code&gt; ，则表单中的同一方法上必须具有 &lt;code&gt;date_select&lt;/code&gt; ，否则将引发异常。</target>
        </trans-unit>
        <trans-unit id="64bae8693b242b241d6c1069e584c82ac89bd00d" translate="yes" xml:space="preserve">
          <source>This method will automatically define a new method for each of the given names, and it will be available in your views.</source>
          <target state="translated">这个方法将自动为每个给定的名称定义一个新的方法,它将在你的视图中可用。</target>
        </trans-unit>
        <trans-unit id="b2796e7f017e5372e44f884a51e71260d25abc07" translate="yes" xml:space="preserve">
          <source>This method will overwrite an existing Cache-Control header. See &lt;a href=&quot;https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html&quot;&gt;www.w3.org/Protocols/rfc2616/rfc2616-sec14.html&lt;/a&gt; for more possibilities.</source>
          <target state="translated">此方法将覆盖现有的Cache-Control标头。有关更多可能性，请参见&lt;a href=&quot;https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html&quot;&gt;www.w3.org/Protocols/rfc2616/rfc2616-sec14.html&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="06943c1d91ca0ed1a7ee27b9069f0fc0c6e21107" translate="yes" xml:space="preserve">
          <source>This method will raise an &lt;code&gt;IrreversibleMigration&lt;/code&gt; exception if it cannot invert the &lt;code&gt;command&lt;/code&gt;.</source>
          <target state="translated">如果该方法无法反转 &lt;code&gt;command&lt;/code&gt; 则将引发 &lt;code&gt;IrreversibleMigration&lt;/code&gt; 异常。</target>
        </trans-unit>
        <trans-unit id="f38ce92d06f8df11400be36093b7097e5c3c2394" translate="yes" xml:space="preserve">
          <source>This method will return a record if all given attributes are covered by unique constraints (unless the INSERT -&amp;gt; DELETE -&amp;gt; SELECT race condition is triggered), but if creation was attempted and failed due to validation errors it won't be persisted, you get what &lt;a href=&quot;relation#method-i-create&quot;&gt;create&lt;/a&gt; returns in such situation.</source>
          <target state="translated">如果所有给定属性都被唯一约束覆盖（除非触发了INSERT-&amp;gt; DELETE-&amp;gt; SELECT竞争条件），则此方法将返回一条记录，但是如果尝试创建并由于验证错误而失败，则该方法将不会保留。在这种情况下获得&lt;a href=&quot;relation#method-i-create&quot;&gt;创造&lt;/a&gt;收益的东西。</target>
        </trans-unit>
        <trans-unit id="c86869e92877b86be09a466a234404de518f17f2" translate="yes" xml:space="preserve">
          <source>This method will set up keys for the &lt;code&gt;options&lt;/code&gt; which Rails will then be able to use to determine how its server should run. After &lt;code&gt;initialize&lt;/code&gt; has finished, we jump back into the server command where &lt;code&gt;APP_PATH&lt;/code&gt; (which was set earlier) is required.</source>
          <target state="translated">此方法将为Rails随后可以用来确定其服务器运行方式的 &lt;code&gt;options&lt;/code&gt; 设置密钥。经过 &lt;code&gt;initialize&lt;/code&gt; 完成后，我们跳回所在服务器命令 &lt;code&gt;APP_PATH&lt;/code&gt; 需要（这是先前设置）。</target>
        </trans-unit>
        <trans-unit id="c5b1c276ff2e5ebf4b7786da73057ea07d2ab622" translate="yes" xml:space="preserve">
          <source>This method works like its siblings, &lt;code&gt;attr_accessor&lt;/code&gt; and &lt;code&gt;cattr_accessor&lt;/code&gt;, but provides a setter and getter method on the module with the specified name. To use it, it must be referenced using &lt;code&gt;Blorgh.author_class&lt;/code&gt;.</source>
          <target state="translated">此方法的工作方式与其兄弟姐妹 &lt;code&gt;attr_accessor&lt;/code&gt; 和 &lt;code&gt;cattr_accessor&lt;/code&gt; 相同，但是在具有指定名称的模块上提供了setter和getter方法。要使用它，必须使用 &lt;code&gt;Blorgh.author_class&lt;/code&gt; 进行引用。</target>
        </trans-unit>
        <trans-unit id="f7ee50ed51d0d15770d36644e8414ce82f979eaa" translate="yes" xml:space="preserve">
          <source>This middleware calculates the IP address of the remote client that is making the request. It does this by checking various headers that could contain the address, and then picking the last-set address that is not on the list of trusted IPs. This follows the precedent set by e.g. &lt;a href=&quot;https://issues.apache.org/bugzilla/show_bug.cgi?id=50453&quot;&gt;the Tomcat server&lt;/a&gt;, with &lt;a href=&quot;http://blog.gingerlime.com/2012/rails-ip-spoofing-vulnerabilities-and-protection&quot;&gt;reasoning explained at length&lt;/a&gt; by @gingerlime. A more detailed explanation of the algorithm is given at &lt;a href=&quot;remoteip/getip#method-i-calculate_ip&quot;&gt;ActionDispatch::RemoteIp::GetIp#calculate_ip&lt;/a&gt;.</source>
          <target state="translated">该中间件计算正在发出请求的远程客户端的IP地址。它通过检查可能包含该地址的各种标头，然后选择不在受信任IP列表上的最后设置的地址来执行此操作。这遵循了例如&lt;a href=&quot;https://issues.apache.org/bugzilla/show_bug.cgi?id=50453&quot;&gt;Tomcat服务器&lt;/a&gt;设置的先例，并通过@gingerlime详细&lt;a href=&quot;http://blog.gingerlime.com/2012/rails-ip-spoofing-vulnerabilities-and-protection&quot;&gt;解释&lt;/a&gt;了推理。在&lt;a href=&quot;remoteip/getip#method-i-calculate_ip&quot;&gt;ActionDispatch :: RemoteIp :: GetIp＃calculate_ip上&lt;/a&gt;提供了对该算法的更详细说明。</target>
        </trans-unit>
        <trans-unit id="3439033169a9bdabd1efa7147b60b1ef9ca0024f" translate="yes" xml:space="preserve">
          <source>This middleware can be used to diagnose deadlocks in the autoload interlock.</source>
          <target state="translated">该中间件可用于诊断自动加载联锁中的死锁。</target>
        </trans-unit>
        <trans-unit id="dabb8e079fc21462c7d20d4e7a0de5475b74dbb8" translate="yes" xml:space="preserve">
          <source>This middleware exposes operational details of the server, with no access control. It should only be enabled when in use, and removed thereafter.</source>
          <target state="translated">这个中间件暴露了服务器的操作细节,没有访问控制。它只应在使用时启用,之后再删除。</target>
        </trans-unit>
        <trans-unit id="208e3d2fb70acd153c67d30409d98ee76a097fae" translate="yes" xml:space="preserve">
          <source>This middleware guards from DNS rebinding attacks by explicitly permitting the hosts a request can be sent to.</source>
          <target state="translated">这个中间件通过明确允许可以发送请求的主机来防范DNS重绑定攻击。</target>
        </trans-unit>
        <trans-unit id="d39ee5c3b45bcf1eba2d3206f33d68df0bb14fdf" translate="yes" xml:space="preserve">
          <source>This middleware is added to the stack when &lt;code&gt;config.force_ssl =
true&lt;/code&gt;, and is passed the options set in &lt;code&gt;config.ssl_options&lt;/code&gt;. It does three jobs to enforce secure HTTP requests:</source>
          <target state="translated">当 &lt;code&gt;config.force_ssl = true&lt;/code&gt; ，此中间件将添加到堆栈中，并传递 &lt;code&gt;config.ssl_options&lt;/code&gt; 中设置的选项。它执行以下三个工作来强制执行安全的HTTP请求：</target>
        </trans-unit>
        <trans-unit id="6496f0e0f25d6b0f2d6da5a5517298276222317c" translate="yes" xml:space="preserve">
          <source>This middleware returns a file's contents from disk in the body response. When initialized, it can accept optional HTTP headers, which will be set when a response containing a file's contents is delivered.</source>
          <target state="translated">这个中间件在主体响应中从磁盘返回文件内容。当初始化时,它可以接受可选的HTTP头,这些头将在包含文件内容的响应交付时被设置。</target>
        </trans-unit>
        <trans-unit id="2ac1578c39a45c87b7612f701eedcd08b29c4561" translate="yes" xml:space="preserve">
          <source>This middleware verifies the path to ensure that only files living in the root directory can be rendered. A request cannot produce a directory traversal using this middleware. Only 'GET' and 'HEAD' requests will result in a file being returned.</source>
          <target state="translated">这个中间件会验证路径,以确保只有生活在根目录中的文件才能被渲染。使用这个中间件的请求不能产生目录遍历。只有'GET'和'HEAD'请求才会返回文件。</target>
        </trans-unit>
        <trans-unit id="014df54573381128828ecc65d349560208352273" translate="yes" xml:space="preserve">
          <source>This middleware will attempt to return the contents of a file's body from disk in the response. If a file is not found on disk, the request will be delegated to the application stack. This middleware is commonly initialized to serve assets from a server's &lt;code&gt;public/&lt;/code&gt; directory.</source>
          <target state="translated">该中间件将尝试在响应中从磁盘返回文件正文的内容。如果在磁盘上找不到文件，该请求将被委派给应用程序堆栈。通常将中间件初始化为服务于服务器 &lt;code&gt;public/&lt;/code&gt; 目录中的资产。</target>
        </trans-unit>
        <trans-unit id="32a1a159366cb6478f2d4f7ebf380a24c15cca7b" translate="yes" xml:space="preserve">
          <source>This middleware will render the file specified in &lt;code&gt;env[&quot;PATH_INFO&quot;]&lt;/code&gt; where the base path is in the &lt;code&gt;root&lt;/code&gt; directory. For example, if the &lt;code&gt;root&lt;/code&gt; is set to &lt;code&gt;public/&lt;/code&gt;, then a request with &lt;code&gt;env[&quot;PATH_INFO&quot;]&lt;/code&gt; of &lt;code&gt;assets/application.js&lt;/code&gt; will return a response with the contents of a file located at &lt;code&gt;public/assets/application.js&lt;/code&gt; if the file exists. If the file does not exist, a 404 &amp;ldquo;File not Found&amp;rdquo; response will be returned.</source>
          <target state="translated">该中间件将呈现基本路径位于 &lt;code&gt;root&lt;/code&gt; 目录中的 &lt;code&gt;env[&quot;PATH_INFO&quot;]&lt;/code&gt; 中指定的文件。例如，如果 &lt;code&gt;root&lt;/code&gt; 设置为 &lt;code&gt;public/&lt;/code&gt; ，则带有 &lt;code&gt;assets/application.js&lt;/code&gt; &lt;code&gt;env[&quot;PATH_INFO&quot;]&lt;/code&gt; 的请求将返回一个响应，其中包含位于 &lt;code&gt;public/assets/application.js&lt;/code&gt; 中的文件的内容存在。如果文件不存在，将返回404&amp;ldquo;找不到文件&amp;rdquo;响应。</target>
        </trans-unit>
        <trans-unit id="4dc55f8fc0d61294b21a0782672c4be6778fb0fb" translate="yes" xml:space="preserve">
          <source>This migration adds a table called &lt;code&gt;products&lt;/code&gt; with a string column called &lt;code&gt;name&lt;/code&gt; and a text column called &lt;code&gt;description&lt;/code&gt;. A primary key column called &lt;code&gt;id&lt;/code&gt; will also be added implicitly, as it's the default primary key for all Active Record models. The &lt;code&gt;timestamps&lt;/code&gt; macro adds two columns, &lt;code&gt;created_at&lt;/code&gt; and &lt;code&gt;updated_at&lt;/code&gt;. These special columns are automatically managed by Active Record if they exist.</source>
          <target state="translated">此迁移将添加一个名为 &lt;code&gt;products&lt;/code&gt; 的表，该表具有一个名为 &lt;code&gt;name&lt;/code&gt; 的字符串列和一个名为 &lt;code&gt;description&lt;/code&gt; 的文本列。一个名为 &lt;code&gt;id&lt;/code&gt; 的主键列也将隐式添加，因为它是所有Active Record模型的默认主键。该 &lt;code&gt;timestamps&lt;/code&gt; 宏将两列， &lt;code&gt;created_at&lt;/code&gt; 和 &lt;code&gt;updated_at&lt;/code&gt; 。这些特殊列（如果存在）由Active Record自动管理。</target>
        </trans-unit>
        <trans-unit id="3900c9971d50896e978d54fa358b22e2c732ed01" translate="yes" xml:space="preserve">
          <source>This migration can be simplified by using the &lt;code&gt;t.references&lt;/code&gt; form:</source>
          <target state="translated">可以使用 &lt;code&gt;t.references&lt;/code&gt; 表单简化此迁移：</target>
        </trans-unit>
        <trans-unit id="885b258edaf0ca5835de252b2e87c1bac3d3fcd8" translate="yes" xml:space="preserve">
          <source>This migration first adds the &lt;code&gt;system_settings&lt;/code&gt; table, then creates the very first row in it using the Active Record model that relies on the table. It also uses the more advanced &lt;code&gt;create_table&lt;/code&gt; syntax where you can specify a complete table schema in one block call.</source>
          <target state="translated">此迁移首先添加 &lt;code&gt;system_settings&lt;/code&gt; 表，然后使用依赖于该表的Active Record模型在表中创建第一行。它还使用更高级的 &lt;code&gt;create_table&lt;/code&gt; 语法，您可以在一个块调用中指定完整的表模式。</target>
        </trans-unit>
        <trans-unit id="7e178bf4130d6446d9de99fc2a55553e0b28d78b" translate="yes" xml:space="preserve">
          <source>This migration will add a boolean flag to the accounts table and remove it if you're backing out of the migration. It shows how all migrations have two methods &lt;code&gt;up&lt;/code&gt; and &lt;code&gt;down&lt;/code&gt; that describes the transformations required to implement or remove the migration. These methods can consist of both the migration specific methods like &lt;code&gt;add_column&lt;/code&gt; and &lt;code&gt;remove_column&lt;/code&gt;, but may also contain regular Ruby code for generating data needed for the transformations.</source>
          <target state="translated">此迁移将在帐户表中添加一个布尔值标志，如果您退出迁移，则将其删除。它显示了所有迁移怎么有两种方法 &lt;code&gt;up&lt;/code&gt; 和 &lt;code&gt;down&lt;/code&gt; 描述来实现或删除迁移的转换需要。这些方法既可以包含特定于迁移的方法，如 &lt;code&gt;add_column&lt;/code&gt; 和 &lt;code&gt;remove_column&lt;/code&gt; ，也可以包含常规的Ruby代码，用于生成转换所需的数据。</target>
        </trans-unit>
        <trans-unit id="4985dfe4f4a90c958afb459eaada7c764a487ac1" translate="yes" xml:space="preserve">
          <source>This migration will create a &lt;code&gt;user_id&lt;/code&gt; column and appropriate index. For more &lt;code&gt;add_reference&lt;/code&gt; options, visit the &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-add_reference&quot;&gt;API documentation&lt;/a&gt;.</source>
          <target state="translated">此迁移将创建一个 &lt;code&gt;user_id&lt;/code&gt; 列和适当的索引。有关更多的 &lt;code&gt;add_reference&lt;/code&gt; 选项，请访问&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-add_reference&quot;&gt;API文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5669fde4eec64f10818cf2e3517c3d7e5f42c208" translate="yes" xml:space="preserve">
          <source>This migration will create the horses table for you on the way up, and automatically figure out how to drop the table on the way down.</source>
          <target state="translated">这个迁移会在上行时为你创建马表,下行时自动想办法放下马表。</target>
        </trans-unit>
        <trans-unit id="5516ca5f5ddf9bac6a1d49105da9e2042c212e1b" translate="yes" xml:space="preserve">
          <source>This migration will need to be run on the application. To do that, it must first be copied using this command:</source>
          <target state="translated">这个迁移需要在应用程序上运行。要做到这一点,必须首先使用这个命令复制它。</target>
        </trans-unit>
        <trans-unit id="5b71acd4c739f9ed2673b4139c3b262e87b15c02" translate="yes" xml:space="preserve">
          <source>This mode uses more memory, performs more poorly than the default, and is not recommended.</source>
          <target state="translated">该模式使用的内存较多,性能比默认模式差,不建议使用。</target>
        </trans-unit>
        <trans-unit id="d243535d40aabdfe065813a26d6de6c00f9cbe2c" translate="yes" xml:space="preserve">
          <source>This model can now be used with a nested &lt;a href=&quot;formbuilder#method-i-fields_for&quot;&gt;#fields_for&lt;/a&gt;, like so:</source>
          <target state="translated">现在可以将此模型与嵌套的&lt;a href=&quot;formbuilder#method-i-fields_for&quot;&gt;#fields_for&lt;/a&gt;一起使用，如下所示：</target>
        </trans-unit>
        <trans-unit id="a0e73c2711552abda121ef8c6ac32d00a79614af" translate="yes" xml:space="preserve">
          <source>This model can now be used with a nested &lt;a href=&quot;formhelper#method-i-fields_for&quot;&gt;#fields_for&lt;/a&gt;, like so:</source>
          <target state="translated">现在可以将此模型与嵌套的&lt;a href=&quot;formhelper#method-i-fields_for&quot;&gt;#fields_for&lt;/a&gt;一起使用，如下所示：</target>
        </trans-unit>
        <trans-unit id="dd03efbb6dd8783abb654113eb8919de838f4bbb" translate="yes" xml:space="preserve">
          <source>This model can now be used with a nested fields_for. The block given to the nested &lt;a href=&quot;formbuilder#method-i-fields_for&quot;&gt;#fields_for&lt;/a&gt; call will be repeated for each instance in the collection:</source>
          <target state="translated">现在可以将此模型与嵌套的fields_for一起使用。会为集合中的每个实例重复提供给嵌套&lt;a href=&quot;formbuilder#method-i-fields_for&quot;&gt;#fields_for&lt;/a&gt;调用的代码块：</target>
        </trans-unit>
        <trans-unit id="640d7faaa46ff1cc37c2e2a0656eae5acb40ef70" translate="yes" xml:space="preserve">
          <source>This model can now be used with a nested fields_for. The block given to the nested &lt;a href=&quot;formhelper#method-i-fields_for&quot;&gt;#fields_for&lt;/a&gt; call will be repeated for each instance in the collection:</source>
          <target state="translated">现在可以将此模型与嵌套的fields_for一起使用。会为集合中的每个实例重复提供给嵌套&lt;a href=&quot;formhelper#method-i-fields_for&quot;&gt;#fields_for&lt;/a&gt;调用的代码块：</target>
        </trans-unit>
        <trans-unit id="3e5d73d1bbeedab4be25fb129ea6ee8fcea08d07" translate="yes" xml:space="preserve">
          <source>This module allows you to define autoloads based on Rails conventions (i.e. no need to define the path it is automatically guessed based on the filename) and also define a set of constants that needs to be eager loaded:</source>
          <target state="translated">这个模块允许你基于Rails的约定来定义自动加载(即不需要定义路径,它会根据文件名自动猜测),还可以定义一组需要急切加载的常量。</target>
        </trans-unit>
        <trans-unit id="ebd4a59f08621fde2640ac21c4478ab8a9aab4bb" translate="yes" xml:space="preserve">
          <source>This module exists because &lt;a href=&quot;attributemethods/dirty&quot;&gt;ActiveRecord::AttributeMethods::Dirty&lt;/a&gt; needs to define callbacks, but continue to have its version of &lt;code&gt;save&lt;/code&gt; be the super method of &lt;a href=&quot;callbacks&quot;&gt;ActiveRecord::Callbacks&lt;/a&gt;. This will be removed when the removal of deprecated code removes this need.</source>
          <target state="translated">存在此模块是因为&lt;a href=&quot;attributemethods/dirty&quot;&gt;ActiveRecord :: AttributeMethods :: Dirty&lt;/a&gt;需要定义回调，但是继续将其 &lt;code&gt;save&lt;/code&gt; 版本&lt;a href=&quot;callbacks&quot;&gt;用作ActiveRecord :: Callbacks&lt;/a&gt;的超级方法。当删除不推荐使用的代码消除了这种需求时，将删除该代码。</target>
        </trans-unit>
        <trans-unit id="94244227efaa951180a549f929adb04352831939" translate="yes" xml:space="preserve">
          <source>This module handles everything related to mail delivery, from registering new delivery methods to configuring the mail object to be sent.</source>
          <target state="translated">该模块处理与邮件发送有关的一切,从注册新的发送方法到配置要发送的邮件对象。</target>
        </trans-unit>
        <trans-unit id="3e1941493198dfa728594c19da80819472100156" translate="yes" xml:space="preserve">
          <source>This module helps build the runtime properties that are displayed in Rails::InfoController responses. These include the active Rails version, Ruby version, Rack version, and so on.</source>
          <target state="translated">该模块帮助构建Rails::InfoController响应中显示的运行时属性。这些属性包括活动的Rails版本、Ruby版本、Rack版本等。</target>
        </trans-unit>
        <trans-unit id="0cef4708bb706ca8ee98950587d6ae406c9df0bf" translate="yes" xml:space="preserve">
          <source>This module is responsible for providing &lt;code&gt;rescue_from&lt;/code&gt; helpers to controllers and configuring when detailed exceptions must be shown.</source>
          <target state="translated">该模块负责提供从助手到控制器的 &lt;code&gt;rescue_from&lt;/code&gt; ，并配置何时必须显示详细的异常。</target>
        </trans-unit>
        <trans-unit id="9e3c20d53a4426f29a4bd7a9838c788021dedf64" translate="yes" xml:space="preserve">
          <source>This module is used to encapsulate access to thread local variables.</source>
          <target state="translated">该模块用于封装对线程局部变量的访问。</target>
        </trans-unit>
        <trans-unit id="22f4c8a4c981a60f3a05c2c0a0c6a8bc72748f9b" translate="yes" xml:space="preserve">
          <source>This module provides an internal implementation to track descendants which is faster than iterating through ObjectSpace.</source>
          <target state="translated">这个模块提供了一个内部实现来跟踪子孙,这比在ObjectSpace中迭代要快。</target>
        </trans-unit>
        <trans-unit id="631368182d8bbf4acf4b786152c548a5c12f3e77" translate="yes" xml:space="preserve">
          <source>This module provides methods for generating HTML that links views to assets such as images, JavaScript files, stylesheets, and feeds.</source>
          <target state="translated">该模块提供了生成HTML的方法,这些方法将视图链接到资产,如图像、JavaScript文件、样式表和feeds。</target>
        </trans-unit>
        <trans-unit id="69d2293cee465d18b3ab1034048805a0d13e1fb6" translate="yes" xml:space="preserve">
          <source>This module provides methods for generating HTML that links views to assets such as images, JavaScripts, stylesheets, and feeds. These methods do not verify the assets exist before linking to them:</source>
          <target state="translated">这个模块提供了生成HTML的方法,这些方法可以将视图链接到图片、JavaScripts、样式表和feeds等资产。这些方法在链接到资产之前并不验证资产的存在。</target>
        </trans-unit>
        <trans-unit id="86eee6aec75a942dab88d2f2fb2d6be094436f2a" translate="yes" xml:space="preserve">
          <source>This module provides methods for generating asset paths and URLs.</source>
          <target state="translated">该模块提供了生成资产路径和URL的方法。</target>
        </trans-unit>
        <trans-unit id="d80792f7af72d9115718c99d4842fab3aba31858" translate="yes" xml:space="preserve">
          <source>This needs to happen for every intermediate (non-root and non-leaf) class. The root class does not scope the query by type, and therefore does not necessarily have to know all its descendants.</source>
          <target state="translated">这需要发生在每个中间类(非根类和非叶类)上。根类不按类型进行查询,因此不一定要知道它的所有子类。</target>
        </trans-unit>
        <trans-unit id="723de11f9b9bb4df51697024a41e43c3beb50f19" translate="yes" xml:space="preserve">
          <source>This new embed information make those cookies incompatible with versions of Rails older than 5.2.</source>
          <target state="translated">新的嵌入信息使得这些cookie与5.2以上的Rails版本不兼容。</target>
        </trans-unit>
        <trans-unit id="aabae3f77e3509214e76e768ccad19dde1ed8326" translate="yes" xml:space="preserve">
          <source>This new embed information make those cookies incompatible with versions of Rails older than 6.0.</source>
          <target state="translated">新的嵌入信息使得这些cookie与6.0以上的Rails版本不兼容。</target>
        </trans-unit>
        <trans-unit id="06c42da025a5b2d8c11d5b2611a7e26218329dde" translate="yes" xml:space="preserve">
          <source>This new sanitizer uses &lt;a href=&quot;https://github.com/flavorjones/loofah&quot;&gt;Loofah&lt;/a&gt; internally. Loofah in turn uses Nokogiri, which wraps XML parsers written in both C and Java, so sanitization should be faster no matter which Ruby version you run.</source>
          <target state="translated">这种新型消毒剂内部使用&lt;a href=&quot;https://github.com/flavorjones/loofah&quot;&gt;丝瓜络&lt;/a&gt;。丝瓜络又使用了Nokogiri，它包装了用C和Java编写的XML解析器，因此无论运行哪种Ruby版本，清理都应该更快。</target>
        </trans-unit>
        <trans-unit id="ed5864f55824cd0ba8ff1052ea5ca1073b597068" translate="yes" xml:space="preserve">
          <source>This new snippet will only include &lt;code&gt;MyActiveRecordHelper&lt;/code&gt; when &lt;code&gt;ActiveRecord::Base&lt;/code&gt; is loaded.</source>
          <target state="translated">加载 &lt;code&gt;ActiveRecord::Base&lt;/code&gt; 时，此新代码段仅包含 &lt;code&gt;MyActiveRecordHelper&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="69982115ba3f0a38d99b309b7f0f83d5b21528ab" translate="yes" xml:space="preserve">
          <source>This object is an extended hash that behaves as root of the &lt;code&gt;Rails::Paths&lt;/code&gt; system. It allows you to collect information about how you want to structure your application paths through a Hash-like API. It requires you to give a physical path on initialization.</source>
          <target state="translated">该对象是扩展的哈希，其行为与 &lt;code&gt;Rails::Paths&lt;/code&gt; 系统的根相同。它允许您收集有关如何通过类似Hash的API构造应用程序路径的信息。它要求您在初始化时给出物理路径。</target>
        </trans-unit>
        <trans-unit id="84cad39f8863c845a0d9debbf0bbcb07ddf841ff" translate="yes" xml:space="preserve">
          <source>This option can be used to configure a custom named &lt;code&gt;:counter_cache.&lt;/code&gt; You only need this option, when you customized the name of your &lt;code&gt;:counter_cache&lt;/code&gt; on the &lt;a href=&quot;classmethods#method-i-belongs_to&quot;&gt;belongs_to&lt;/a&gt; association.</source>
          <target state="translated">此选项可用于配置名为 &lt;code&gt;:counter_cache.&lt;/code&gt; 的自定义。当您在&lt;a href=&quot;classmethods#method-i-belongs_to&quot;&gt;Emirates_to&lt;/a&gt;关联上自定义 &lt;code&gt;:counter_cache&lt;/code&gt; 的名称时，仅需要此选项。</target>
        </trans-unit>
        <trans-unit id="9ab2086178b4abdefb934a38fbbb3916be52744c" translate="yes" xml:space="preserve">
          <source>This option can be used to configure a custom named &lt;code&gt;:counter_cache&lt;/code&gt;. You only need this option when you customized the name of your &lt;code&gt;:counter_cache&lt;/code&gt; on the &lt;a href=&quot;#options-for-belongs-to&quot;&gt;belongs_to association&lt;/a&gt;.</source>
          <target state="translated">此选项可用于配置名为 &lt;code&gt;:counter_cache&lt;/code&gt; 的自定义。仅当您在属具&lt;a href=&quot;#options-for-belongs-to&quot;&gt;关联中&lt;/a&gt;自定义 &lt;code&gt;:counter_cache&lt;/code&gt; 的名称时，才需要此选项。</target>
        </trans-unit>
        <trans-unit id="f68ae509829e7450b92000008806868d38e89cda" translate="yes" xml:space="preserve">
          <source>This option should be used only if you don't care about the content type of the response. Using &lt;code&gt;:plain&lt;/code&gt; or &lt;code&gt;:html&lt;/code&gt; might be more appropriate most of the time.</source>
          <target state="translated">仅当您不关心响应的内容类型时，才应使用此选项。大多数情况下，使用 &lt;code&gt;:plain&lt;/code&gt; 或 &lt;code&gt;:html&lt;/code&gt; 可能更合适。</target>
        </trans-unit>
        <trans-unit id="d2af3083a1b3fca93ea3eabedf316f7311b08a1e" translate="yes" xml:space="preserve">
          <source>This partial will be responsible for rendering just the comment text, for now. Create a new file at &lt;code&gt;app/views/blorgh/comments/_comment.html.erb&lt;/code&gt; and put this line inside it:</source>
          <target state="translated">目前，此部分内容仅负责呈现注释文本。在 &lt;code&gt;app/views/blorgh/comments/_comment.html.erb&lt;/code&gt; 中创建一个新文件，并将此行放入其中：</target>
        </trans-unit>
        <trans-unit id="9ca6827cd178a7371e007820d7bc736f71b5a6ca" translate="yes" xml:space="preserve">
          <source>This plugin will add a method named 'squawk' to any Active Record object that calls &lt;code&gt;acts_as_yaffle&lt;/code&gt;. The 'squawk' method will simply set the value of one of the fields in the database.</source>
          <target state="translated">这个插件将增加一个名为&amp;ldquo;发牢骚&amp;rdquo;到该呼叫任何Active Record对象方法 &lt;code&gt;acts_as_yaffle&lt;/code&gt; 。&amp;ldquo; squawk&amp;rdquo;方法将简单地设置数据库中字段之一的值。</target>
        </trans-unit>
        <trans-unit id="fe3b5fbcf11c1dfc262bf8c84ee1e6e1548bcd2d" translate="yes" xml:space="preserve">
          <source>This plugin will expect that you've added a method to your model named &lt;code&gt;last_squawk&lt;/code&gt;. However, the plugin users might have already defined a method on their model named &lt;code&gt;last_squawk&lt;/code&gt; that they use for something else. This plugin will allow the name to be changed by adding a class method called &lt;code&gt;yaffle_text_field&lt;/code&gt;.</source>
          <target state="translated">该插件将期望您在模型中添加了一个名为 &lt;code&gt;last_squawk&lt;/code&gt; 的方法。但是，插件用户可能已经在其模型上定义了一个名为 &lt;code&gt;last_squawk&lt;/code&gt; 的方法，用于其他用途。该插件将允许通过添加一个名为 &lt;code&gt;yaffle_text_field&lt;/code&gt; 的类方法来更改名称。</target>
        </trans-unit>
        <trans-unit id="d4080fd0fea66e1a2f188bd170ca3ba9801b72a4" translate="yes" xml:space="preserve">
          <source>This process is repeated, fetching more batches as needed, until all of the records have been processed.</source>
          <target state="translated">这个过程重复进行,根据需要获取更多的批次,直到处理完所有的记录。</target>
        </trans-unit>
        <trans-unit id="ff5280ccaade258e94436683ba2403f8e398b4f3" translate="yes" xml:space="preserve">
          <source>This produces:</source>
          <target state="translated">这就产生了:</target>
        </trans-unit>
        <trans-unit id="ff62fb6b2a142fa597ee4f3dc08a5abdb24c77c2" translate="yes" xml:space="preserve">
          <source>This references the name of the &lt;a href=&quot;classmethods#method-i-belongs_to&quot;&gt;belongs_to&lt;/a&gt; association that also used the &lt;code&gt;:author&lt;/code&gt; symbol. After loading the posts, &lt;code&gt;find&lt;/code&gt; will collect the &lt;code&gt;author_id&lt;/code&gt; from each one and load all of the referenced authors with one query. Doing so will cut down the number of queries from 201 to 102.</source>
          <target state="translated">该引用还使用了 &lt;code&gt;:author&lt;/code&gt; 符号的&lt;a href=&quot;classmethods#method-i-belongs_to&quot;&gt;belongs_to&lt;/a&gt;关联的名称。加载帖子后， &lt;code&gt;find&lt;/code&gt; 将收集每个帖子的 &lt;code&gt;author_id&lt;/code&gt; ，并通过一个查询加载所有引用的作者。这样做会将查询数量从201减少到102。</target>
        </trans-unit>
        <trans-unit id="a11435417ff912526d0f73321aa89242acdbc08b" translate="yes" xml:space="preserve">
          <source>This release includes some breaking changes to optional parts of the Action Cable JavaScript API:</source>
          <target state="translated">这个版本包括对Action Cable JavaScript API的可选部分的一些突破性改动。</target>
        </trans-unit>
        <trans-unit id="f85fbf1557477fbbaf24978943eb96603597f6ce" translate="yes" xml:space="preserve">
          <source>This removes the &lt;code&gt;&quot;&lt;/code&gt; characters wrapping the value.</source>
          <target state="translated">这将删除包裹值的 &lt;code&gt;&quot;&lt;/code&gt; 字符。</target>
        </trans-unit>
        <trans-unit id="3ed4e429a043b344dbd88b0a4f362f59aabf7379" translate="yes" xml:space="preserve">
          <source>This renders the raw file (it doesn't support ERB or other handlers). By default it is rendered within the current layout.</source>
          <target state="translated">这将渲染原始文件(它不支持 ERB 或其他处理程序)。默认情况下,它是在当前布局中渲染的。</target>
        </trans-unit>
        <trans-unit id="f780ebd959678062386a3bce985fc0cb8f1664bf" translate="yes" xml:space="preserve">
          <source>This resourceful route:</source>
          <target state="translated">这条资源丰富的路线。</target>
        </trans-unit>
        <trans-unit id="576d2193c977cb5091ad3f1c37f8cb18711fb115" translate="yes" xml:space="preserve">
          <source>This restriction only applies to explicit namespaces. Classes and modules not defining a namespace can be defined using those idioms.</source>
          <target state="translated">这个限制只适用于显式命名空间。没有定义命名空间的类和模块可以使用这些成语来定义。</target>
        </trans-unit>
        <trans-unit id="73744111630d7e542dc9c93cf1cea86e8eebd2fa" translate="yes" xml:space="preserve">
          <source>This returned &quot;some&amp;lt;script&amp;gt;alert('hello')&amp;lt;/script&amp;gt;&quot;, which makes an attack work. That's why a permitted list approach is better, using the updated Rails 2 method sanitize():</source>
          <target state="translated">这返回&amp;ldquo; some &amp;lt;script&amp;gt; alert（'hello'）&amp;lt;/ script&amp;gt;&amp;rdquo;，这使攻击起作用。这就是为什么使用更新的Rails 2方法sanitize（）允许列表方法更好的原因：</target>
        </trans-unit>
        <trans-unit id="420dbe0c61cbd2a97b9989fc9b43d572d2951620" translate="yes" xml:space="preserve">
          <source>This returns the date and total price for each order object, grouped by the day they were ordered and where the price is more than $100.</source>
          <target state="translated">这将返回每个订单对象的日期和总价格,按订单日期分组,价格超过100美元的地方。</target>
        </trans-unit>
        <trans-unit id="164c8bc01e03f24cbab05f04a51c89948101ff5c" translate="yes" xml:space="preserve">
          <source>This route would match &lt;code&gt;photos/12&lt;/code&gt; or &lt;code&gt;/photos/long/path/to/12&lt;/code&gt;, setting &lt;code&gt;params[:other]&lt;/code&gt; to &lt;code&gt;&quot;12&quot;&lt;/code&gt; or &lt;code&gt;&quot;long/path/to/12&quot;&lt;/code&gt;. The fragments prefixed with a star are called &quot;wildcard segments&quot;.</source>
          <target state="translated">该路由将匹配 &lt;code&gt;photos/12&lt;/code&gt; 或 &lt;code&gt;/photos/long/path/to/12&lt;/code&gt; ，将 &lt;code&gt;params[:other]&lt;/code&gt; 设置为 &lt;code&gt;&quot;12&quot;&lt;/code&gt; 或 &lt;code&gt;&quot;long/path/to/12&quot;&lt;/code&gt; 。带有星形前缀的片段称为&amp;ldquo;通配符段&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="6e794fda21608573b4957498e3f119f175ac228c" translate="yes" xml:space="preserve">
          <source>This route would match paths such as &lt;code&gt;/photos/A12345&lt;/code&gt;, but not &lt;code&gt;/photos/893&lt;/code&gt;. You can more succinctly express the same route this way:</source>
          <target state="translated">此路由将匹配 &lt;code&gt;/photos/A12345&lt;/code&gt; 之类的路径，但不匹配 &lt;code&gt;/photos/893&lt;/code&gt; 。您可以通过以下方式更简洁地表达相同的路线：</target>
        </trans-unit>
        <trans-unit id="88307a9a355c9cfda7c63f87346f4b8d457bfac3" translate="yes" xml:space="preserve">
          <source>This route would respond to paths such as &lt;code&gt;/photos/1/with_user/2&lt;/code&gt;. In this case, &lt;code&gt;params&lt;/code&gt; would be &lt;code&gt;{ controller: 'photos', action: 'show', id: '1', user_id: '2' }&lt;/code&gt;.</source>
          <target state="translated">此路由将响应诸如 &lt;code&gt;/photos/1/with_user/2&lt;/code&gt; 之类的路径。在这种情况下， &lt;code&gt;params&lt;/code&gt; 将为 &lt;code&gt;{ controller: 'photos', action: 'show', id: '1', user_id: '2' }&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8fc25f6a8ab0b96bceea194ab647bc637647c8f4" translate="yes" xml:space="preserve">
          <source>This sanitize helper will HTML encode all tags and strip all attributes that aren't specifically allowed.</source>
          <target state="translated">这个 sanitize helper 会对所有的标签进行 HTML 编码,并剥离所有没有特别允许的属性。</target>
        </trans-unit>
        <trans-unit id="5909b520101c5e8f8ea7f5b936b6a0ba245d8416" translate="yes" xml:space="preserve">
          <source>This section covers how to make the &lt;code&gt;User&lt;/code&gt; class configurable, followed by general configuration tips for the engine.</source>
          <target state="translated">本节介绍如何使 &lt;code&gt;User&lt;/code&gt; 类可配置，然后介绍引擎的常规配置提示。</target>
        </trans-unit>
        <trans-unit id="ce851e7bd6dfa7a8a7aab4b2ca0f3b0b2ab8cf00" translate="yes" xml:space="preserve">
          <source>This section explains how to add and/or override engine MVC functionality in the main Rails application.</source>
          <target state="translated">本节介绍了如何在主Rails应用中添加和/或覆盖引擎MVC功能。</target>
        </trans-unit>
        <trans-unit id="919a0c9a7ba5508d98414a70e473b42a00002d44" translate="yes" xml:space="preserve">
          <source>This section uses count as an example method in this preamble, but the options described apply to all sub-sections.</source>
          <target state="translated">本节在本前言中使用count作为示例方法,但所描述的选项适用于所有子节。</target>
        </trans-unit>
        <trans-unit id="366a2e60a1f26887202760405004422dda63c6d2" translate="yes" xml:space="preserve">
          <source>This section will explain how to add a method to String that will be available anywhere in your Rails application.</source>
          <target state="translated">本节将解释如何为String添加一个方法,该方法将在Rails应用中的任何地方可用。</target>
        </trans-unit>
        <trans-unit id="170a3d51ce6ad6c8b8d190303b295cb96ceb842c" translate="yes" xml:space="preserve">
          <source>This section will provide a step-by-step guide to creating a job and enqueuing it.</source>
          <target state="translated">本节将提供创建作业和排队的步骤指南。</target>
        </trans-unit>
        <trans-unit id="38da0dbe2a5686429679c4badc45fcbedbf87454" translate="yes" xml:space="preserve">
          <source>This section will provide a step-by-step guide to creating a mailer and its views.</source>
          <target state="translated">本节将提供创建邮件及其视图的步骤指南。</target>
        </trans-unit>
        <trans-unit id="996b1979fa871d3971a5413e931ca1f8a0454986" translate="yes" xml:space="preserve">
          <source>This sets &lt;code&gt;:name&lt;/code&gt; field on products to a &lt;code&gt;NOT NULL&lt;/code&gt; column and the default value of the &lt;code&gt;:approved&lt;/code&gt; field from true to false.</source>
          <target state="translated">这会将产品上的 &lt;code&gt;:name&lt;/code&gt; 字段设置为 &lt;code&gt;NOT NULL&lt;/code&gt; 列，并将 &lt;code&gt;:approved&lt;/code&gt; 字段的默认值从true设置为false。</target>
        </trans-unit>
        <trans-unit id="2c101b3e3300554fce3b4c6e14c72955ac25863e" translate="yes" xml:space="preserve">
          <source>This should be not be called manually but set in database.yml.</source>
          <target state="translated">这不应该被手动调用,而应该在database.yml中设置。</target>
        </trans-unit>
        <trans-unit id="b9bd825fd18aa062058d3d233dd21f8c957147a4" translate="yes" xml:space="preserve">
          <source>This should not result in any noticeable differences for most applications. However, if you need some non-mailer methods to be executed synchronously, and you were previously relying on the synchronous proxying behavior, you should define them as class methods on the mailer class directly:</source>
          <target state="translated">这对于大多数应用来说,应该不会产生任何明显的差异。但是,如果你需要一些非邮件发送器方法被同步执行,而你之前是依赖同步代理行为,你应该直接将它们定义为邮件发送器类上的类方法。</target>
        </trans-unit>
        <trans-unit id="029ad8bff1dbfaba67cfda070c4aea0016bf8c83" translate="yes" xml:space="preserve">
          <source>This simplifies</source>
          <target state="translated">这就简化了</target>
        </trans-unit>
        <trans-unit id="4bcd150fa2e648ee216ab53da70e278e981e8e0d" translate="yes" xml:space="preserve">
          <source>This simplifies maintenance and keeps things clean by allowing related code to be grouped before inclusion elsewhere.</source>
          <target state="translated">这简化了维护,并通过允许在其他地方包含之前对相关代码进行分组来保持干净。</target>
        </trans-unit>
        <trans-unit id="6c36327b0b450f9facc49b6d6fdaeb4ff9516cd5" translate="yes" xml:space="preserve">
          <source>This small step has some wonderful ripple effects. We can</source>
          <target state="translated">这一小步就有了一些奇妙的波澜效果。我们可以</target>
        </trans-unit>
        <trans-unit id="f45ab8191cf4093a46a3a866a54714973d196495" translate="yes" xml:space="preserve">
          <source>This snippet means that when this file is loaded, it will encounter &lt;code&gt;ActiveRecord::Base&lt;/code&gt;. This encounter causes Ruby to look for the definition of that constant and will require it. This causes the entire Active Record framework to be loaded on boot.</source>
          <target state="translated">此代码段意味着在加载此文件时，它将遇到 &lt;code&gt;ActiveRecord::Base&lt;/code&gt; 。遇到这种情况会使Ruby查找该常量的定义并将需要它。这将导致整个Active Record框架在启动时加载。</target>
        </trans-unit>
        <trans-unit id="aa881d45f0c4366521f545464e5ba3e7812d19ea" translate="yes" xml:space="preserve">
          <source>This solution has aforementioned advantages, however, you may not be able or may not want to provide different localizations (&quot;language versions&quot;) on different domains. The most obvious solution would be to include locale code in the URL params (or request path).</source>
          <target state="translated">这个解决方案有上述的优点,但是,你可能无法或不想在不同的域上提供不同的本地化(&quot;语言版本&quot;)。最明显的解决方案是在URL参数(或请求路径)中加入本地化代码。</target>
        </trans-unit>
        <trans-unit id="6cc35be7d9ae462482385e6372e8203e7e3b83dc" translate="yes" xml:space="preserve">
          <source>This surprising constant resolution can be observed with any qualifying class:</source>
          <target state="translated">这种令人惊奇的恒定分辨率可以在任何限定类中观察到。</target>
        </trans-unit>
        <trans-unit id="3d6e5bed0ce1b0863d024c50daf0ff2f44eb581d" translate="yes" xml:space="preserve">
          <source>This table does not follow the Rails conventions at all. Because simple PostgreSQL views are updateable by default, we can wrap it as follows:</source>
          <target state="translated">这个表完全没有遵循Rails的约定。因为简单的PostgreSQL视图在默认情况下是可以更新的,所以我们可以将其包装成如下样子。</target>
        </trans-unit>
        <trans-unit id="d654789a6b34795bd8eecb0dd8fa3b82b8d4a534" translate="yes" xml:space="preserve">
          <source>This tells Rails to look for template variations of the same format. You can specify a list of variants by passing the &lt;code&gt;:variants&lt;/code&gt; option with a symbol or an array.</source>
          <target state="translated">这告诉Rails寻找相同格式的模板变体。您可以通过传递 &lt;code&gt;:variants&lt;/code&gt; 选项以及符号或数组来指定变量列表。</target>
        </trans-unit>
        <trans-unit id="92accf5b96f44c594837e65bd538fd5330ba5c91" translate="yes" xml:space="preserve">
          <source>This tells the application that you still want to perform a &lt;code&gt;GET&lt;/code&gt; request to the &lt;code&gt;index&lt;/code&gt; action of this controller, but you want to use the engine's route to get there, rather than the application's one.</source>
          <target state="translated">这告诉应用程序您仍要对该控制器的 &lt;code&gt;index&lt;/code&gt; 操作执行 &lt;code&gt;GET&lt;/code&gt; 请求，但是您想使用引擎的路由来到达那里，而不是应用程序的路由。</target>
        </trans-unit>
        <trans-unit id="cb493140b3c17b27b3930bd0085286984f205efa" translate="yes" xml:space="preserve">
          <source>This tells us that we don't have the necessary models (Hickwall and Wickwall) that we are trying to test. We can easily generate these models in our &quot;dummy&quot; Rails application by running the following commands from the &lt;code&gt;test/dummy&lt;/code&gt; directory:</source>
          <target state="translated">这告诉我们，我们没有要测试的必要模型（Hickwall和Wickwall）。通过从 &lt;code&gt;test/dummy&lt;/code&gt; 目录运行以下命令，我们可以在&amp;ldquo;虚拟&amp;rdquo; Rails应用程序中轻松生成这些模型：</target>
        </trans-unit>
        <trans-unit id="10dd27cd48dfc49d4b02b59dd1189e4f38d50cc2" translate="yes" xml:space="preserve">
          <source>This test is pretty simple and only asserts that the channel subscribes the connection to a particular stream.</source>
          <target state="translated">这个测试非常简单,只需断言该频道订阅了特定流的连接。</target>
        </trans-unit>
        <trans-unit id="b43c64186934ad15a78ee71a0e7c3eb3082193d8" translate="yes" xml:space="preserve">
          <source>This test is pretty simple and only asserts that the job got the work done as expected.</source>
          <target state="translated">这个测试很简单,只是断言工作按预期完成了。</target>
        </trans-unit>
        <trans-unit id="afebf0aa9349219f73e863c9df89b502a00da789" translate="yes" xml:space="preserve">
          <source>This test should now pass.</source>
          <target state="translated">现在这个测试应该通过了。</target>
        </trans-unit>
        <trans-unit id="56961ab49613bc56e2996a3331a4d079b93b9639" translate="yes" xml:space="preserve">
          <source>This time we point the form to the &lt;code&gt;update&lt;/code&gt; action, which is not defined yet but will be very soon.</source>
          <target state="translated">这次，我们将表单指向 &lt;code&gt;update&lt;/code&gt; 操作，该操作尚未定义，但很快就会发布。</target>
        </trans-unit>
        <trans-unit id="9ca70f5f3dc1dd42668e4a159b6a2429abbf41f6" translate="yes" xml:space="preserve">
          <source>This tutorial assumes you have basic Rails knowledge from reading the &lt;a href=&quot;getting_started&quot;&gt;Getting Started with Rails Guide&lt;/a&gt;.</source>
          <target state="translated">本教程假定您已阅读&lt;a href=&quot;getting_started&quot;&gt;Rails入门指南，&lt;/a&gt;具有基本的Rails知识。</target>
        </trans-unit>
        <trans-unit id="3d3bd7a5e7de97b9f032a27bc89818fb97a80f0b" translate="yes" xml:space="preserve">
          <source>This type is mapped to Ruby &lt;a href=&quot;https://ruby-doc.org/core-2.2.2/Range.html&quot;&gt;&lt;code&gt;Range&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">此类型映射到Ruby &lt;a href=&quot;https://ruby-doc.org/core-2.2.2/Range.html&quot;&gt; &lt;code&gt;Range&lt;/code&gt; &lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="d7aa7b6c5ac24dec69a78ce68fc4a7ade298e860" translate="yes" xml:space="preserve">
          <source>This unique ID is useful for tracing a request from end-to-end as part of logging or debugging. This relies on the Rack variable set by the &lt;a href=&quot;requestid&quot;&gt;ActionDispatch::RequestId&lt;/a&gt; middleware.</source>
          <target state="translated">此唯一ID对于在记录或调试过程中从端到端跟踪请求很有用。这依赖于由&lt;a href=&quot;requestid&quot;&gt;ActionDispatch :: RequestId&lt;/a&gt;中间件设置的Rack变量。</target>
        </trans-unit>
        <trans-unit id="5f64fa1df58f66d796291430ff6825e8cfabc422" translate="yes" xml:space="preserve">
          <source>This validation is very specific to web applications and this 'acceptance' does not need to be recorded anywhere in your database. If you don't have a field for it, the helper will just create a virtual attribute. If the field does exist in your database, the &lt;code&gt;accept&lt;/code&gt; option must be set to or include &lt;code&gt;true&lt;/code&gt; or else the validation will not run.</source>
          <target state="translated">该验证非常特定于Web应用程序，不需要在数据库的任何位置记录此&amp;ldquo;接受&amp;rdquo;。如果没有它的字段，则助手将只创建一个虚拟属性。如果该字段确实存在于数据库中，则必须将 &lt;code&gt;accept&lt;/code&gt; 选项设置为 &lt;code&gt;true&lt;/code&gt; 或包含true，否则验证将不会运行。</target>
        </trans-unit>
        <trans-unit id="b3a0c8db08f46cab5cfdea7374449e3ea7d2643f" translate="yes" xml:space="preserve">
          <source>This validation will work with all of the association types.</source>
          <target state="translated">这种验证将适用于所有的关联类型。</target>
        </trans-unit>
        <trans-unit id="a416a8d7b0d7770891a41f445e4cfc9153eeb6f9" translate="yes" xml:space="preserve">
          <source>This validator defers to the Active Model validation for presence, adding the check to see that an associated object is not marked for destruction. This prevents the parent object from validating successfully and saving, which then deletes the associated object, thus putting the parent object into an invalid state.</source>
          <target state="translated">该验证器延用Active Model验证的存在性,增加了检查关联对象是否被标记销毁的功能。这样可以防止父对象验证成功并保存,然后删除关联对象,从而使父对象处于无效状态。</target>
        </trans-unit>
        <trans-unit id="78c93e981f9362b83125078215501e8c63d15d26" translate="yes" xml:space="preserve">
          <source>This value can be later fetched using either &lt;code&gt;:key&lt;/code&gt; or &lt;code&gt;'key'&lt;/code&gt;.</source>
          <target state="translated">以后可以使用 &lt;code&gt;:key&lt;/code&gt; 或 &lt;code&gt;'key'&lt;/code&gt; 来获取该值。</target>
        </trans-unit>
        <trans-unit id="e0b4044796f51dddd7358d3a25c148eaaaf81ce8" translate="yes" xml:space="preserve">
          <source>This verifier can be used to generate and verify signed messages in the application.</source>
          <target state="translated">该验证器可用于在应用程序中生成和验证签名消息。</target>
        </trans-unit>
        <trans-unit id="0dc6e041dee5ce11365d9c669e9362b10f8b2b00" translate="yes" xml:space="preserve">
          <source>This way it is possible to use the partial without the need to declare all local variables.</source>
          <target state="translated">这样就可以使用局部,而不需要声明所有的局部变量。</target>
        </trans-unit>
        <trans-unit id="ce96deed83fa3f2a3c48034aaece9fcc4fd976c2" translate="yes" xml:space="preserve">
          <source>This way you can move inside the file and see the code above the line where you added the &lt;code&gt;byebug&lt;/code&gt; call. Finally, to see where you are in the code again you can type &lt;code&gt;list=&lt;/code&gt;</source>
          <target state="translated">这样，您可以在文件内部移动，并在添加 &lt;code&gt;byebug&lt;/code&gt; 调用的行上方看到代码。最后，要再次查看您在代码中的位置，可以键入 &lt;code&gt;list=&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2ef600fc0b9bad91b0106d7dd09941d637df28c1" translate="yes" xml:space="preserve">
          <source>This way you can provide special translations for various error messages at different points in your models inheritance chain and in the attributes, models, or default scopes.</source>
          <target state="translated">这样您就可以在您的模型继承链中的不同点以及属性、模型或默认作用域中为各种错误信息提供特殊的翻译。</target>
        </trans-unit>
        <trans-unit id="dcac8da51b29825b04cb1707ac04cd86a8bef4bc" translate="yes" xml:space="preserve">
          <source>This way, if an action sets a notice or an alert message, the layout will display it automatically.</source>
          <target state="translated">这样,如果一个动作设置了通知或警报消息,布局就会自动显示它。</target>
        </trans-unit>
        <trans-unit id="552eed590ff40e116e6775d26eab6fd8aa7cc01f" translate="yes" xml:space="preserve">
          <source>This way, the &lt;code&gt;before_destroy&lt;/code&gt; gets executed before the &lt;code&gt;dependent: :destroy&lt;/code&gt; is called, and the data is still available.</source>
          <target state="translated">这样， &lt;code&gt;before_destroy&lt;/code&gt; 会在调用 &lt;code&gt;dependent: :destroy&lt;/code&gt; 之前执行，并且数据仍然可用。</target>
        </trans-unit>
        <trans-unit id="da5ffdee1702839500a02d13e03206410520dadf" translate="yes" xml:space="preserve">
          <source>This way, the client either sends only the hidden field (representing the check box is unchecked), or both fields. Since the HTML specification says key/value pairs have to be sent in the same order they appear in the form, and parameters extraction gets the last occurrence of any repeated key in the query string, that works for ordinary forms.</source>
          <target state="translated">这样一来,客户端要么只发送隐藏字段(代表复选框未被选中),要么两个字段都发送。由于HTML规范规定键/值对必须按照它们在表单中出现的顺序发送,而参数提取得到的是查询字符串中任何重复键的最后一次出现,所以这对普通表单是有效的。</target>
        </trans-unit>
        <trans-unit id="c357b658da2eb3a5e83cb262d8556b10f5849eeb" translate="yes" xml:space="preserve">
          <source>This way, you can separate model and model attribute names from text inside views, and all of this from the &quot;defaults&quot; (e.g. date and time formats). Other stores for the i18n library could provide different means of such separation.</source>
          <target state="translated">这样一来,你就可以将模型和模型属性名与视图内的文本分开,而这一切都与 &quot;默认值&quot;(如日期和时间格式)分开。i18n库的其他存储可以提供不同的这种分离手段。</target>
        </trans-unit>
        <trans-unit id="90897c4cace33b6b3b81396934d7f66552fc95da" translate="yes" xml:space="preserve">
          <source>This will add &lt;code&gt;app/views/direct&lt;/code&gt; to the end of the lookup paths.</source>
          <target state="translated">这会将 &lt;code&gt;app/views/direct&lt;/code&gt; 添加到查找路径的末尾。</target>
        </trans-unit>
        <trans-unit id="e63c54344163d6dadd2274516afdaf16ce6bcf3a" translate="yes" xml:space="preserve">
          <source>This will allow you to specify which models to destroy in the attributes hash by adding a form element for the &lt;code&gt;_destroy&lt;/code&gt; parameter with a value that evaluates to &lt;code&gt;true&lt;/code&gt; (eg. 1, '1', true, or 'true'):</source>
          <target state="translated">这将允许您通过为 &lt;code&gt;_destroy&lt;/code&gt; 参数添加一个表单元素来指定要在属性哈希中销毁的模型，该元素的值等于 &lt;code&gt;true&lt;/code&gt; （例如1，&amp;ldquo; 1&amp;rdquo;，true或&amp;ldquo; true&amp;rdquo;）：</target>
        </trans-unit>
        <trans-unit id="a67465a53d1c7b44290f957f6736edb684f7e42c" translate="yes" xml:space="preserve">
          <source>This will also create routing helpers such as &lt;code&gt;magazine_ads_url&lt;/code&gt; and &lt;code&gt;edit_magazine_ad_path&lt;/code&gt;. These helpers take an instance of Magazine as the first parameter (&lt;code&gt;magazine_ads_url(@magazine)&lt;/code&gt;).</source>
          <target state="translated">这还将创建路由助手，例如 &lt;code&gt;magazine_ads_url&lt;/code&gt; 和 &lt;code&gt;edit_magazine_ad_path&lt;/code&gt; 。这些助手将Magazine的实例作为第一个参数（ &lt;code&gt;magazine_ads_url(@magazine)&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="5f05910d168dd2e7b873c8c8b483bcfa7a005ecd" translate="yes" xml:space="preserve">
          <source>This will assign &amp;ldquo;weblog_standard&amp;rdquo; as the WeblogController's layout for all actions except for the &lt;code&gt;rss&lt;/code&gt; action, which will be rendered directly, without wrapping a layout around the rendered view.</source>
          <target state="translated">这将为所有动作分配&amp;ldquo; weblog_standard&amp;rdquo;作为WeblogController的布局，但 &lt;code&gt;rss&lt;/code&gt; 动作除外，后者将直接呈现，而无需在呈现的视图周围包装布局。</target>
        </trans-unit>
        <trans-unit id="2cb47c745d6bfc8f2425c96cfe1b1d075a290769" translate="yes" xml:space="preserve">
          <source>This will automatically create the corresponding &lt;a href=&quot;#scopes&quot;&gt;scopes&lt;/a&gt; to query the model. Methods to transition between states and query the current state are also added.</source>
          <target state="translated">这将自动创建相应的&lt;a href=&quot;#scopes&quot;&gt;范围&lt;/a&gt;以查询模型。还添加了在状态之间转换和查询当前状态的方法。</target>
        </trans-unit>
        <trans-unit id="3a266bdb0ffdd739b93eafa98b37d0bd86eb0fc6" translate="yes" xml:space="preserve">
          <source>This will automatically include a security token in all forms and Ajax requests generated by Rails. If the security token doesn't match what was expected, an exception will be thrown.</source>
          <target state="translated">这将会在Rails生成的所有表单和Ajax请求中自动包含一个安全标记。如果安全标记与预期不符,就会抛出一个异常。</target>
        </trans-unit>
        <trans-unit id="c2688665b23b7e8fcef5368b613f3bd1b831b1ba" translate="yes" xml:space="preserve">
          <source>This will build an array of objects from the database for the scope, converting them into an array and iterating through them using &lt;code&gt;Array#select&lt;/code&gt;.</source>
          <target state="translated">这将从数据库中为作用域构建一个对象数组，将它们转换为数组，然后使用 &lt;code&gt;Array#select&lt;/code&gt; 遍历它们。</target>
        </trans-unit>
        <trans-unit id="eea2107956649c6c0807f2d8c76f050b93113c0b" translate="yes" xml:space="preserve">
          <source>This will clear all named routes and reload config/routes.rb if the file has been modified from last load. To absolutely force reloading, use &lt;code&gt;reload!&lt;/code&gt;.</source>
          <target state="translated">如果文件是在上次加载后修改的，这将清除所有命名的路由并重新加载config / routes.rb。要绝对强制重新加载，请使用 &lt;code&gt;reload!&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0bc40807db89eb423564e922ca82e75c6fe1ae1d" translate="yes" xml:space="preserve">
          <source>This will connect to a new database for the queries inside the block. By default the `:writing` role will be used since all connections must be assigned a role. If you would like to use a different role you can pass a hash to database:</source>
          <target state="translated">这将为块内的查询连接到一个新的数据库。默认情况下,将使用`:write`角色,因为所有的连接都必须被分配一个角色。如果你想使用不同的角色,你可以向数据库传递一个哈希值。</target>
        </trans-unit>
        <trans-unit id="c57269c9aa5df1a940d6b8b91a691ded351bdf1f" translate="yes" xml:space="preserve">
          <source>This will connect to the database named &lt;code&gt;blog_development&lt;/code&gt; using the &lt;code&gt;postgresql&lt;/code&gt; adapter. This same information can be stored in a URL and provided via an environment variable like this:</source>
          <target state="translated">这将使用 &lt;code&gt;postgresql&lt;/code&gt; 适配器连接到名为 &lt;code&gt;blog_development&lt;/code&gt; 的数据库。相同的信息可以存储在URL中，并可以通过如下环境变量提供：</target>
        </trans-unit>
        <trans-unit id="caf1348f85efdb24907365e0e86d242c0b27732b" translate="yes" xml:space="preserve">
          <source>This will create 1000 very simple fixtures.</source>
          <target state="translated">这将创建1000个非常简单的固定装置。</target>
        </trans-unit>
        <trans-unit id="d6d75b5e504b1b631c89ae85e982ab79f5ed20a4" translate="yes" xml:space="preserve">
          <source>This will create &lt;code&gt;logout_path&lt;/code&gt; and &lt;code&gt;logout_url&lt;/code&gt; as named route helpers in your application. Calling &lt;code&gt;logout_path&lt;/code&gt; will return &lt;code&gt;/exit&lt;/code&gt;</source>
          <target state="translated">这将在您的应用程序中将 &lt;code&gt;logout_path&lt;/code&gt; 和 &lt;code&gt;logout_url&lt;/code&gt; 创建为命名路由助手。调用 &lt;code&gt;logout_path&lt;/code&gt; 将返回 &lt;code&gt;/exit&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="17cb90fdc58783a11912cf731d2c9b3634b84a2c" translate="yes" xml:space="preserve">
          <source>This will create a &lt;code&gt;Product&lt;/code&gt; model, mapped to a &lt;code&gt;products&lt;/code&gt; table at the database. By doing this you'll also have the ability to map the columns of each row in that table with the attributes of the instances of your model. Suppose that the &lt;code&gt;products&lt;/code&gt; table was created using an SQL (or one of its extensions) statement like:</source>
          <target state="translated">这将创建一个 &lt;code&gt;Product&lt;/code&gt; 模型，该模型映射到数据库中的 &lt;code&gt;products&lt;/code&gt; 表。这样，您还可以使用该模型实例的属性映射该表中每一行的列。假设 &lt;code&gt;products&lt;/code&gt; 表是使用SQL（或其扩展名之一）语句创建的，例如：</target>
        </trans-unit>
        <trans-unit id="4d848877cdcbdc72e7235775c465573e4ce9123f" translate="yes" xml:space="preserve">
          <source>This will create a Rails application called Blog in a &lt;code&gt;blog&lt;/code&gt; directory and install the gem dependencies that are already mentioned in &lt;code&gt;Gemfile&lt;/code&gt; using &lt;code&gt;bundle install&lt;/code&gt;.</source>
          <target state="translated">这将在 &lt;code&gt;blog&lt;/code&gt; 目录中创建一个名为Blog的Rails应用程序， &lt;code&gt;Gemfile&lt;/code&gt; 使用 &lt;code&gt;bundle install&lt;/code&gt; 安装Gemfile中已经提到的gem依赖项。</target>
        </trans-unit>
        <trans-unit id="c8396fb6973acd136e824b9e7505c904be1d80c6" translate="yes" xml:space="preserve">
          <source>This will create a URL for that specific blob with that specific variant, which the &lt;a href=&quot;../representationscontroller&quot;&gt;ActiveStorage::RepresentationsController&lt;/a&gt; can then produce on-demand.</source>
          <target state="translated">这将为具有特定变体的特定Blob创建一个URL，然后&lt;a href=&quot;../representationscontroller&quot;&gt;ActiveStorage :: RepresentationsController&lt;/a&gt;可以按需产生该URL 。</target>
        </trans-unit>
        <trans-unit id="1a7c1825f8c6720c2fe95b8cf2b2f3c53bcf7139" translate="yes" xml:space="preserve">
          <source>This will create a URL for that specific blob with that specific variant, which the &lt;a href=&quot;representationscontroller&quot;&gt;ActiveStorage::RepresentationsController&lt;/a&gt; can then produce on-demand.</source>
          <target state="translated">这将为具有特定变体的特定Blob创建一个URL，然后&lt;a href=&quot;representationscontroller&quot;&gt;ActiveStorage :: RepresentationsController&lt;/a&gt;可以按需产生该URL 。</target>
        </trans-unit>
        <trans-unit id="90d5f6bd0b355a0b48c47782e4fc7945f94b8a1f" translate="yes" xml:space="preserve">
          <source>This will create a connection handler for switching between connections, look up the config hash using the &lt;code&gt;database_key&lt;/code&gt; and finally establishes a connection to that config.</source>
          <target state="translated">这将创建一个用于在连接之间进行切换的连接处理程序，使用 &lt;code&gt;database_key&lt;/code&gt; 查找配置哈希，最后建立与该配置的连接。</target>
        </trans-unit>
        <trans-unit id="977360c989f208719ae1fa97256fc5d6c5dfe6d9" translate="yes" xml:space="preserve">
          <source>This will create a number of routes for each of the &lt;code&gt;articles&lt;/code&gt; and &lt;code&gt;comments&lt;/code&gt; controller. For &lt;code&gt;Admin::ArticlesController&lt;/code&gt;, Rails will create:</source>
          <target state="translated">这将为每个 &lt;code&gt;articles&lt;/code&gt; 和 &lt;code&gt;comments&lt;/code&gt; 控制器创建许多路由。对于 &lt;code&gt;Admin::ArticlesController&lt;/code&gt; ，Rails将创建：</target>
        </trans-unit>
        <trans-unit id="4dc53f62c1f3b6923d80ecece1b9b66574873458" translate="yes" xml:space="preserve">
          <source>This will create a number of routes for each of the posts and comments controller. For &lt;code&gt;Admin::PostsController&lt;/code&gt;, Rails will create:</source>
          <target state="translated">这将为每个帖子和评论控制器创建许多路线。对于 &lt;code&gt;Admin::PostsController&lt;/code&gt; ，Rails将创建：</target>
        </trans-unit>
        <trans-unit id="1d835575fda2c997e5940227096b69c38806a716" translate="yes" xml:space="preserve">
          <source>This will create an appropriately named empty migration:</source>
          <target state="translated">这将创建一个适当命名的空迁移。</target>
        </trans-unit>
        <trans-unit id="688252d096b068de65da8350686d66b6600477d3" translate="yes" xml:space="preserve">
          <source>This will create and process a variant of the avatar blob that's constrained to a height and width of 100. Then it'll upload said variant to the service according to a derivative key of the blob and the transformations.</source>
          <target state="translated">这将创建并处理一个高度和宽度都限制在100的头像blob的变体。然后它将根据blob的衍生键和变换将上述变体上传到服务中。</target>
        </trans-unit>
        <trans-unit id="0af97e6d52f7a53ef081d8839974e5e26885487f" translate="yes" xml:space="preserve">
          <source>This will create and process a variant of the avatar blob that's constrained to a height and width of 100px. Then it'll upload said variant to the service according to a derivative key of the blob and the transformations.</source>
          <target state="translated">这将创建并处理一个高度和宽度都限制在100px的头像blob的变体。然后它将根据blob的衍生键和变换将上述变体上传到服务中。</target>
        </trans-unit>
        <trans-unit id="0d52e4fd185c14a75ce4f70036fcf8cfb8d0ed50" translate="yes" xml:space="preserve">
          <source>This will create routing helpers such as &lt;code&gt;magazine_periodical_ads_url&lt;/code&gt; and &lt;code&gt;edit_magazine_periodical_ad_path&lt;/code&gt;.</source>
          <target state="translated">这将创建路由辅助程序，例如 &lt;code&gt;magazine_periodical_ads_url&lt;/code&gt; 和 &lt;code&gt;edit_magazine_periodical_ad_path&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="305c233031351d2e461ee258b0bb207c5f3e99d6" translate="yes" xml:space="preserve">
          <source>This will define a &lt;code&gt;user_path&lt;/code&gt; method that will be available in controllers, helpers, and views that will go to a route such as &lt;code&gt;/bob&lt;/code&gt;. Inside the &lt;code&gt;show&lt;/code&gt; action of &lt;code&gt;UsersController&lt;/code&gt;, &lt;code&gt;params[:username]&lt;/code&gt; will contain the username for the user. Change &lt;code&gt;:username&lt;/code&gt; in the route definition if you do not want your parameter name to be &lt;code&gt;:username&lt;/code&gt;.</source>
          <target state="translated">这将定义一个 &lt;code&gt;user_path&lt;/code&gt; 方法，该方法将在控制器，帮助器和视图中可用，这些方法将转到 &lt;code&gt;/bob&lt;/code&gt; 之类的路径。在 &lt;code&gt;UsersController&lt;/code&gt; 的 &lt;code&gt;show&lt;/code&gt; 动作内部， &lt;code&gt;params[:username]&lt;/code&gt; 将包含用户的用户名。如果您不希望参数名称为 &lt;code&gt;:username&lt;/code&gt; ，请在路由定义中更改 &lt;code&gt;:username&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8df8b7633c46dc154ef0ad2888d096ba1bae755d" translate="yes" xml:space="preserve">
          <source>This will disconnect all the connections established for &lt;code&gt;User.find(1)&lt;/code&gt;, across all servers running on all machines, because it uses the internal channel that all of these servers are subscribed to.</source>
          <target state="translated">这将断开在所有计算机上运行的所有服务器之间为 &lt;code&gt;User.find(1)&lt;/code&gt; 建立的所有连接，因为它使用了所有这些服务器都已预订的内部通道。</target>
        </trans-unit>
        <trans-unit id="dafbdfd2b90448c92a3ed045a44bc71dddfdc45f" translate="yes" xml:space="preserve">
          <source>This will do three main things for you:</source>
          <target state="translated">这将为你做三件大事。</target>
        </trans-unit>
        <trans-unit id="ee79d82211be7a526dec218f3776f7a9c60fc128" translate="yes" xml:space="preserve">
          <source>This will enable Rails to recognize paths such as &lt;code&gt;/comments/new/preview&lt;/code&gt; with GET, and route to the &lt;code&gt;preview&lt;/code&gt; action of &lt;code&gt;CommentsController&lt;/code&gt;. It will also create the &lt;code&gt;preview_new_comment_url&lt;/code&gt; and &lt;code&gt;preview_new_comment_path&lt;/code&gt; route helpers.</source>
          <target state="translated">这将使Rails可以使用GET 识别 &lt;code&gt;/comments/new/preview&lt;/code&gt; 之类的路径，并路由到 &lt;code&gt;CommentsController&lt;/code&gt; 的 &lt;code&gt;preview&lt;/code&gt; 动作。它还将创建 &lt;code&gt;preview_new_comment_url&lt;/code&gt; 和 &lt;code&gt;preview_new_comment_path&lt;/code&gt; 路由帮助器。</target>
        </trans-unit>
        <trans-unit id="5a9b358ad4b9c74e2ca4539517283dc157d82a65" translate="yes" xml:space="preserve">
          <source>This will enable Rails to recognize paths such as &lt;code&gt;/photos/search&lt;/code&gt; with GET, and route to the &lt;code&gt;search&lt;/code&gt; action of &lt;code&gt;PhotosController&lt;/code&gt;. It will also create the &lt;code&gt;search_photos_url&lt;/code&gt; and &lt;code&gt;search_photos_path&lt;/code&gt; route helpers.</source>
          <target state="translated">这将使Rails &lt;code&gt;/photos/search&lt;/code&gt; 使用GET 识别/ photos / search之类的路径，并路由到 &lt;code&gt;PhotosController&lt;/code&gt; 的 &lt;code&gt;search&lt;/code&gt; 动作。它还将创建 &lt;code&gt;search_photos_url&lt;/code&gt; 和 &lt;code&gt;search_photos_path&lt;/code&gt; 路由助手。</target>
        </trans-unit>
        <trans-unit id="4db922acc5c6067700fd0bc3f47ccdd3a7e22251" translate="yes" xml:space="preserve">
          <source>This will enable Rails to recognize paths such as &lt;code&gt;/photos/search&lt;/code&gt; with GET, and route to the search action of &lt;code&gt;PhotosController&lt;/code&gt;. It will also create the &lt;code&gt;search_photos_url&lt;/code&gt; and &lt;code&gt;search_photos_path&lt;/code&gt; route helpers.</source>
          <target state="translated">这将使Rails &lt;code&gt;/photos/search&lt;/code&gt; 使用GET 识别/ photos / search之类的路径，并路由到 &lt;code&gt;PhotosController&lt;/code&gt; 的搜索动作。它还将创建 &lt;code&gt;search_photos_url&lt;/code&gt; 和 &lt;code&gt;search_photos_path&lt;/code&gt; 路由助手。</target>
        </trans-unit>
        <trans-unit id="d1230522740eff7749a0f2bf9ea29ec09aebf7e0" translate="yes" xml:space="preserve">
          <source>This will execute one query to load the addresses and load the addressables with one query per addressable type. For example, if all the addressables are either of class Person or Company, then a total of 3 queries will be executed. The list of addressable types to load is determined on the back of the addresses loaded. This is not supported if Active Record has to fallback to the previous implementation of eager loading and will raise &lt;a href=&quot;../eagerloadpolymorphicerror&quot;&gt;ActiveRecord::EagerLoadPolymorphicError&lt;/a&gt;. The reason is that the parent model's type is a column value so its corresponding table name cannot be put in the &lt;code&gt;FROM&lt;/code&gt;/&lt;code&gt;JOIN&lt;/code&gt; clauses of that query.</source>
          <target state="translated">这将执行一个查询以加载地址，并为每种可寻址类型的一个查询加载可寻址对象。例如，如果所有可寻址对象都是Person类或Company类，则将总共执行3个查询。要加载的可寻址类型的列表在加载的地址的背面确定。如果Active Record必须回&lt;a href=&quot;../eagerloadpolymorphicerror&quot;&gt;退到&lt;/a&gt;之前的急切加载实现，并且会引发ActiveRecord :: EagerLoadPolymorphicError，则不支持此功能。原因是父模型的类型是列值，因此不能将其对应的表名放在该查询的 &lt;code&gt;FROM&lt;/code&gt; / &lt;code&gt;JOIN&lt;/code&gt; 子句中。</target>
        </trans-unit>
        <trans-unit id="eb6eff373294234fc7d4840384a2c5a1ac45c275" translate="yes" xml:space="preserve">
          <source>This will find all clients created yesterday by using a &lt;code&gt;BETWEEN&lt;/code&gt; SQL statement:</source>
          <target state="translated">这将查找昨天使用 &lt;code&gt;BETWEEN&lt;/code&gt; SQL语句创建的所有客户端：</target>
        </trans-unit>
        <trans-unit id="b3bd54fd95988d965be979b72eb8b09345044893" translate="yes" xml:space="preserve">
          <source>This will find all clients who have orders that were created yesterday, again using a &lt;code&gt;BETWEEN&lt;/code&gt; SQL expression.</source>
          <target state="translated">这将再次使用 &lt;code&gt;BETWEEN&lt;/code&gt; SQL表达式查找所有具有昨天创建的订单的客户。</target>
        </trans-unit>
        <trans-unit id="e6fba8340bf9902a6a1fb631e9a96f361c3cadf2" translate="yes" xml:space="preserve">
          <source>This will find the category with id 1 and eager load all of the associated articles, the associated articles' tags and comments, and every comment's guest association.</source>
          <target state="translated">这将找到 id 1 的类别,并急切加载所有相关文章、相关文章的标签和评论,以及每条评论的嘉宾关联。</target>
        </trans-unit>
        <trans-unit id="12050b7e0e8c3a855ebea0332254fe28225b6788" translate="yes" xml:space="preserve">
          <source>This will fire up Puma, a web server distributed with Rails by default. To see your application in action, open a browser window and navigate to http://localhost:3000. You should see the Rails default information page:</source>
          <target state="translated">这将启动Puma,一个默认与Rails一起发布的Web服务器。要查看应用程序的运行情况,请打开浏览器窗口并导航到 http://localhost:3000。你应该会看到Rails的默认信息页面。</target>
        </trans-unit>
        <trans-unit id="e526dce7655ad97b08efd074ac104ec65a63cd7f" translate="yes" xml:space="preserve">
          <source>This will generate SQL like this:</source>
          <target state="translated">这样就会生成这样的SQL。</target>
        </trans-unit>
        <trans-unit id="11305323ce54bbde6178971aaae7db5ae181aa89" translate="yes" xml:space="preserve">
          <source>This will generate routes such as &lt;code&gt;admin_photos_path&lt;/code&gt; and &lt;code&gt;admin_accounts_path&lt;/code&gt; which map to &lt;code&gt;/admin/photos&lt;/code&gt; and &lt;code&gt;/admin/accounts&lt;/code&gt; respectively.</source>
          <target state="translated">这将生成诸如 &lt;code&gt;admin_photos_path&lt;/code&gt; 和 &lt;code&gt;admin_accounts_path&lt;/code&gt; 之类的路由，它们分别映射到 &lt;code&gt;/admin/photos&lt;/code&gt; 和 &lt;code&gt;/admin/accounts&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="93c13bd6eebfa01de31672d51d7d40db17d2ce18" translate="yes" xml:space="preserve">
          <source>This will generate the &lt;code&gt;exciting_path&lt;/code&gt; and &lt;code&gt;exciting_url&lt;/code&gt; helpers which can be used to navigate to this mounted app.</source>
          <target state="translated">这将生成可用于导航到此已安装应用程序的 &lt;code&gt;exciting_path&lt;/code&gt; &lt;code&gt;exciting_url&lt;/code&gt; 路径和令人兴奋的 URL帮助器。</target>
        </trans-unit>
        <trans-unit id="eb8e4ad95786c9c308a2a16beb745394e0df227c" translate="yes" xml:space="preserve">
          <source>This will generate the controller code and tests for an &lt;code&gt;Article&lt;/code&gt; resource. You can take a look at the file &lt;code&gt;articles_controller_test.rb&lt;/code&gt; in the &lt;code&gt;test/controllers&lt;/code&gt; directory.</source>
          <target state="translated">这将生成控制器代码并测试 &lt;code&gt;Article&lt;/code&gt; 资源。你可以看看文件 &lt;code&gt;articles_controller_test.rb&lt;/code&gt; 在 &lt;code&gt;test/controllers&lt;/code&gt; 目录。</target>
        </trans-unit>
        <trans-unit id="48104d9494c74c4133057a5e28bedb4f47214280" translate="yes" xml:space="preserve">
          <source>This will generate the exact same routes as the first example. You can also specify the &lt;code&gt;:shallow&lt;/code&gt; option in the parent resource, in which case all of the nested resources will be shallow:</source>
          <target state="translated">这将生成与第一个示例完全相同的路由。您还可以在父资源中指定 &lt;code&gt;:shallow&lt;/code&gt; 选项，在这种情况下，所有嵌套资源都将变浅：</target>
        </trans-unit>
        <trans-unit id="20be9b915ee11ece206017b88e7234d8db8e06fe" translate="yes" xml:space="preserve">
          <source>This will generate the file &lt;code&gt;timestamp_add_fieldname_to_tablename.rb&lt;/code&gt;, which will look like this:</source>
          <target state="translated">这将生成文件 &lt;code&gt;timestamp_add_fieldname_to_tablename.rb&lt;/code&gt; ，如下所示：</target>
        </trans-unit>
        <trans-unit id="dd0f2e6c3b72347c22def94e6470c429ddd03bae" translate="yes" xml:space="preserve">
          <source>This will generate the following HTML:</source>
          <target state="translated">这将产生以下HTML。</target>
        </trans-unit>
        <trans-unit id="40fe0881d573c0a43296b612394692067593adfa" translate="yes" xml:space="preserve">
          <source>This will generate the following things:</source>
          <target state="translated">这将产生以下事情。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
