<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="rails">
    <body>
      <group id="rails">
        <trans-unit id="f5912d0e9fb9f1a27f3fcc3d7157b541ab860c0f" translate="yes" xml:space="preserve">
          <source>InboundEmail::MessageId#generate_missing_message_id</source>
          <target state="translated">InboundEmail::MessageId#generate_missing_message_id</target>
        </trans-unit>
        <trans-unit id="2c0be3c66e86606aab01bf26322bb4ede14060b8" translate="yes" xml:space="preserve">
          <source>InboundEmail::Routable</source>
          <target state="translated">InboundEmail::Routable</target>
        </trans-unit>
        <trans-unit id="6c6b1b612c3911b90fce7e2e5e0d1ef6e415c371" translate="yes" xml:space="preserve">
          <source>InboundEmail::Routable#route</source>
          <target state="translated">InboundEmail::Routable#route</target>
        </trans-unit>
        <trans-unit id="ff0fbc44503d8cb2db7d66abca56d62be677cace" translate="yes" xml:space="preserve">
          <source>InboundEmail::Routable#route_later</source>
          <target state="translated">InboundEmail::Routable#route_later</target>
        </trans-unit>
        <trans-unit id="acbf3a393e68b6f6f34e91d2c28dcbb1f27f41ad" translate="yes" xml:space="preserve">
          <source>Incineration of InboundEmails</source>
          <target state="translated">焚烧入站邮件</target>
        </trans-unit>
        <trans-unit id="46f00fe566c2a85a7ae293976c1f5cc228d97a9f" translate="yes" xml:space="preserve">
          <source>IncinerationJob</source>
          <target state="translated">IncinerationJob</target>
        </trans-unit>
        <trans-unit id="9a3b927462c4fc3601133e7ebb25fa8381442e2e" translate="yes" xml:space="preserve">
          <source>IncinerationJob#perform</source>
          <target state="translated">IncinerationJob#perform</target>
        </trans-unit>
        <trans-unit id="cac65a7ffa3df433e8908fd590e410aeec250ed8" translate="yes" xml:space="preserve">
          <source>IncinerationJob::schedule</source>
          <target state="translated">IncinerationJob::schedule</target>
        </trans-unit>
        <trans-unit id="5c9882c571c76e2d7257004676310a0cdec5e265" translate="yes" xml:space="preserve">
          <source>Include &lt;code&gt;activestorage.js&lt;/code&gt; in your application's JavaScript bundle.</source>
          <target state="translated">在应用程序的JavaScript包中包含 &lt;code&gt;activestorage.js&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1bec07c62228d9d427b17ec331ffe481e3050aea" translate="yes" xml:space="preserve">
          <source>Include a field with the current UTC time-stamp in it and check it on the server. If it is too far in the past, or if it is in the future, the form is invalid.</source>
          <target state="translated">包括一个带有当前UTC时间戳的字段,并在服务器上检查它。如果时间太过久远,或者是在未来,则表格无效。</target>
        </trans-unit>
        <trans-unit id="f121e28368bea6b8e2ce8d128829d6efaa5b3b4a" translate="yes" xml:space="preserve">
          <source>Include in a cookie jar to allow chaining, e.g. cookies.permanent.signed.</source>
          <target state="translated">包含在一个cookie罐子里,以允许连锁,例如:cookie.永久.签名。</target>
        </trans-unit>
        <trans-unit id="c100b7d867e6c16b5bd5b980d88e6a2a50d8f041" translate="yes" xml:space="preserve">
          <source>Include more than one honeypot field of all types, including submission buttons</source>
          <target state="translated">包含一个以上所有类型的蜜罐字段,包括提交按钮。</target>
        </trans-unit>
        <trans-unit id="4c5f87743501282fa63fbaffa15c1a3acc9cc8cd" translate="yes" xml:space="preserve">
          <source>Included modules:</source>
          <target state="translated">包括的模块:</target>
        </trans-unit>
        <trans-unit id="bdf9b5829b7161238ada537108b7fe4a6e34fa4e" translate="yes" xml:space="preserve">
          <source>Includes &lt;code&gt;url_for&lt;/code&gt; into the host class (e.g. an abstract controller or mailer). The class has to provide a &lt;code&gt;RouteSet&lt;/code&gt; by implementing the &lt;code&gt;_routes&lt;/code&gt; methods. Otherwise, an exception will be raised.</source>
          <target state="translated">将 &lt;code&gt;url_for&lt;/code&gt; 包含在主机类中（例如抽象控制器或邮件程序）。这个类必须提供 &lt;code&gt;RouteSet&lt;/code&gt; 通过实现 &lt;code&gt;_routes&lt;/code&gt; 方法。否则，将引发异常。</target>
        </trans-unit>
        <trans-unit id="2b4374eea981f26c15f5994eec0f3f1ab7ef8047" translate="yes" xml:space="preserve">
          <source>Includes &lt;code&gt;url_for&lt;/code&gt; into the host class. The class has to provide a &lt;code&gt;RouteSet&lt;/code&gt; by implementing the &lt;code&gt;_routes&lt;/code&gt; method. Otherwise, an exception will be raised.</source>
          <target state="translated">在主机类中包含 &lt;code&gt;url_for&lt;/code&gt; 。类有以提供 &lt;code&gt;RouteSet&lt;/code&gt; 通过实现 &lt;code&gt;_routes&lt;/code&gt; 方法。否则，将引发异常。</target>
        </trans-unit>
        <trans-unit id="f5579a2df75038fb652d0231bd1004d082f10429" translate="yes" xml:space="preserve">
          <source>Includes methods for executing and performing jobs instantly.</source>
          <target state="translated">包括即时执行和实施作业的方法。</target>
        </trans-unit>
        <trans-unit id="631b012f0c3aa49dec56ba3a62ff5bff3b8b3f91" translate="yes" xml:space="preserve">
          <source>Includes the &lt;code&gt;perform_later&lt;/code&gt; method for job initialization.</source>
          <target state="translated">包括用于作业初始化的 &lt;code&gt;perform_later&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="53c7595c01b9dbfe8612fe4bc1db96f60de2a369" translate="yes" xml:space="preserve">
          <source>Includes the ability to override the default queue name and prefix.</source>
          <target state="translated">包括覆盖默认队列名称和前缀的功能。</target>
        </trans-unit>
        <trans-unit id="e7990a0676a74bda5cc28e40baf19fd593e762c7" translate="yes" xml:space="preserve">
          <source>Includes the ability to override the default queue priority.</source>
          <target state="translated">包括覆盖默认队列优先级的功能。</target>
        </trans-unit>
        <trans-unit id="62c9858129e9d1c16d3eef60145006748e5bba1e" translate="yes" xml:space="preserve">
          <source>Includes the given modules in the template class.</source>
          <target state="translated">在模板类中包含给定的模块。</target>
        </trans-unit>
        <trans-unit id="cbb61314f8aef07993e347f911ec747581366e10" translate="yes" xml:space="preserve">
          <source>Includes the required interface for an object to interact with Action Pack and Action View, using different Active &lt;a href=&quot;model&quot;&gt;&lt;code&gt;Model&lt;/code&gt;&lt;/a&gt; modules. It includes model name introspections, conversions, translations and validations. Besides that, it allows you to initialize the object with a hash of attributes, pretty much like Active Record does.</source>
          <target state="translated">包括对象使用不同的Active &lt;a href=&quot;model&quot;&gt; &lt;code&gt;Model&lt;/code&gt; &lt;/a&gt;模块与Action Pack和Action View交互所需的接口。它包括型号名称自省，转换，翻译和验证。除此之外，它还允许您使用属性的哈希值来初始化对象，就像Active Record一样。</target>
        </trans-unit>
        <trans-unit id="e15c12fa809cf4ddf2cfdca94bdae62aa1fa326a" translate="yes" xml:space="preserve">
          <source>Includes the required interface for an object to interact with Action Pack and Action View, using different Active &lt;a href=&quot;model&quot;&gt;Model&lt;/a&gt; modules. It includes model name introspections, conversions, translations and validations. Besides that, it allows you to initialize the object with a hash of attributes, pretty much like Active Record does.</source>
          <target state="translated">包括对象使用不同的Active &lt;a href=&quot;model&quot;&gt;Model&lt;/a&gt;模块与Action Pack和Action View交互所需的接口。它包括型号名称自省，转换，翻译和验证。除此之外，它还允许您使用属性的哈希值来初始化对象，就像Active Record一样。</target>
        </trans-unit>
        <trans-unit id="c7fea2d3a0b9e01a0a5f139f1591c47d3c91bbc9" translate="yes" xml:space="preserve">
          <source>Includes the setter method for changing the active queue adapter.</source>
          <target state="translated">包括改变活动队列适配器的setter方法。</target>
        </trans-unit>
        <trans-unit id="aa5f93716a712ea4619d480ed3cde7ae07449569" translate="yes" xml:space="preserve">
          <source>Including &lt;code&gt;ActionController::Live&lt;/code&gt; inside of your controller class will provide all actions inside of the controller the ability to stream data. You can mix in the module like so:</source>
          <target state="translated">在控制器类内部包括 &lt;code&gt;ActionController::Live&lt;/code&gt; ，将为控制器内部的所有操作提供流数据的能力。您可以像这样混入模块：</target>
        </trans-unit>
        <trans-unit id="bab20420de5d9ccbf10b3dcff8cc1b95ab75628b" translate="yes" xml:space="preserve">
          <source>Including a nonce (a random value) in the session solves replay attacks. A nonce is valid only once, and the server has to keep track of all the valid nonces. It gets even more complicated if you have several application servers. Storing nonces in a database table would defeat the entire purpose of CookieStore (avoiding accessing the database).</source>
          <target state="translated">在会话中加入一个nonce(一个随机值)可以解决重放攻击。一个nonce只有效一次,服务器必须跟踪所有有效的nonce。如果你有几个应用服务器,那就更复杂了。将nonce存储在数据库表中会破坏CookieStore的整个目的(避免访问数据库)。</target>
        </trans-unit>
        <trans-unit id="3ba3a191a2f605b7f6e1de97049978194d3e3d3a" translate="yes" xml:space="preserve">
          <source>Increment a cached value. This method uses the Redis incr atomic operator and can only be used on values written with the :raw option. Calling it on a value not stored with :raw will initialize that value to zero.</source>
          <target state="translated">递增一个缓存值。这个方法使用Redis incr原子运算符,并且只能用于用:raw选项写入的值。对一个没有使用:raw选项存储的值进行调用,会将该值初始化为0。</target>
        </trans-unit>
        <trans-unit id="84d6064c26c32bbd7bab16ef8fd8429566031c22" translate="yes" xml:space="preserve">
          <source>Increment a cached value. This method uses the memcached incr atomic operator and can only be used on values written with the :raw option. Calling it on a value not stored with :raw will initialize that value to zero.</source>
          <target state="translated">递增一个缓存值。本方法使用memcached incr原子运算符,并且只能用于用:raw选项写入的值。对一个没有使用:raw选项存储的值进行调用,会将该值初始化为0。</target>
        </trans-unit>
        <trans-unit id="dd0c837987bda03b85ceb94f7c3cfea331fe8115" translate="yes" xml:space="preserve">
          <source>Increment a numeric field by one, via a direct SQL update.</source>
          <target state="translated">通过一个直接的SQL更新,将一个数字字段增加一个。</target>
        </trans-unit>
        <trans-unit id="975a549b7ff243eb9938d718f3659245c93a9383" translate="yes" xml:space="preserve">
          <source>Increment an integer value in the cache.</source>
          <target state="translated">在缓存中增加一个整数值。</target>
        </trans-unit>
        <trans-unit id="78f8148e4691770bb4ee98b5331ee87d3d67f053" translate="yes" xml:space="preserve">
          <source>Increments an already existing integer value that is stored in the cache. If the key is not found nothing is done.</source>
          <target state="translated">增加一个已经存在的整数值,该值存储在缓存中。如果没有找到键,则不做任何事情。</target>
        </trans-unit>
        <trans-unit id="5c60a79bc55fbbd08f59d91ffb860f8c89bb4d61" translate="yes" xml:space="preserve">
          <source>Increments an integer value in the cache.</source>
          <target state="translated">增加缓存中的一个整数值。</target>
        </trans-unit>
        <trans-unit id="ac8f586235cd9c9a54e04e1582486b97984ef9e5" translate="yes" xml:space="preserve">
          <source>Indeed, those features are provided by Ruby on Rails, where we just write</source>
          <target state="translated">事实上,这些功能是由Ruby on Rails提供的,我们只需写下</target>
        </trans-unit>
        <trans-unit id="15cfadc26717bad880a9fde19a51e2f1ba2fa5ba" translate="yes" xml:space="preserve">
          <source>Indent the &lt;code&gt;Gemfile&lt;/code&gt; to the depth of @indentation</source>
          <target state="translated">将 &lt;code&gt;Gemfile&lt;/code&gt; 缩进到@indentation的深度</target>
        </trans-unit>
        <trans-unit id="55a69bd5ad72c95be80535a77a034016a752d59f" translate="yes" xml:space="preserve">
          <source>Indents the lines in the receiver:</source>
          <target state="translated">在接收器中缩进线。</target>
        </trans-unit>
        <trans-unit id="383b324a3291b51f1e54ef9c0d763010fbc5e171" translate="yes" xml:space="preserve">
          <source>IndexError</source>
          <target state="translated">IndexError</target>
        </trans-unit>
        <trans-unit id="6af6ebf2652770fb07b7edc8a706df252af3c13a" translate="yes" xml:space="preserve">
          <source>Indicates if the model is persisted. Default is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">指示模型是否持久。默认值为 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2fd1b698c13f9950dbc0a396b271f3999ea4de3b" translate="yes" xml:space="preserve">
          <source>Indicates whether table names should be the pluralized versions of the corresponding class names. If true, the default table name for a Product class will be &amp;ldquo;products&amp;rdquo;. If false, it would just be &amp;ldquo;product&amp;rdquo;. See table_name for the full rules on table/class naming. This is true, by default.</source>
          <target state="translated">指示表名称是否应为对应类名称的复数形式。如果为true，则Product类的默认表名称将为&amp;ldquo; products&amp;rdquo;。如果为假，则只是&amp;ldquo;产品&amp;rdquo;。有关表/类命名的完整规则，请参见table_name。默认情况下是这样。</target>
        </trans-unit>
        <trans-unit id="dc64305a14542034550a32ad76b58e39ab963e2d" translate="yes" xml:space="preserve">
          <source>Indicates whether the table associated with this class exists</source>
          <target state="translated">表示与该类相关的表是否存在。</target>
        </trans-unit>
        <trans-unit id="b833fb286a71c34f5e91a0725ed89419e3cd6797" translate="yes" xml:space="preserve">
          <source>Indifferent Access</source>
          <target state="translated">无所谓的访问</target>
        </trans-unit>
        <trans-unit id="e377a7420d75303382002218677f891fbd8e5368" translate="yes" xml:space="preserve">
          <source>Individual Components</source>
          <target state="translated">单个组件</target>
        </trans-unit>
        <trans-unit id="af78b717bb9e05184fbb67ea0224879b5cf257ac" translate="yes" xml:space="preserve">
          <source>Inflection Rules For Other Locales</source>
          <target state="translated">其他地区的转折规则</target>
        </trans-unit>
        <trans-unit id="cf181dc19faa86f0697f3303810611ccfcc004f0" translate="yes" xml:space="preserve">
          <source>Inflection Rules for Other Locales</source>
          <target state="translated">其他地区的拐弯规则</target>
        </trans-unit>
        <trans-unit id="7919b931473684f976aff4e0e966d02ccdc1b05a" translate="yes" xml:space="preserve">
          <source>Inflections</source>
          <target state="translated">Inflections</target>
        </trans-unit>
        <trans-unit id="0f1c9abd7505d9208da9c8c7136012880fde3431" translate="yes" xml:space="preserve">
          <source>Inflections go the other way around.</source>
          <target state="translated">拐弯抹角,反其道而行之。</target>
        </trans-unit>
        <trans-unit id="5ade1199eca264ac0dfc557731d76a0f599ba79e" translate="yes" xml:space="preserve">
          <source>Info::inspect</source>
          <target state="translated">Info::inspect</target>
        </trans-unit>
        <trans-unit id="5e57975599660667fcec0e77696ab5bd3ccb669a" translate="yes" xml:space="preserve">
          <source>Info::property</source>
          <target state="translated">Info::property</target>
        </trans-unit>
        <trans-unit id="e8c940c56b021e4e98e5c24a447c9f7fb6f97ec7" translate="yes" xml:space="preserve">
          <source>Info::to_html</source>
          <target state="translated">Info::to_html</target>
        </trans-unit>
        <trans-unit id="6d3ae8926026fa77c4627cf590895d6f17c9ff4e" translate="yes" xml:space="preserve">
          <source>Info::to_s</source>
          <target state="translated">Info::to_s</target>
        </trans-unit>
        <trans-unit id="238da28b1ea22430b20905f64adaf447cc97c56b" translate="yes" xml:space="preserve">
          <source>Ingests inbound emails from Mailgun. Requires the following parameters:</source>
          <target state="translated">摄取 Mailgun 的入站邮件。需要以下参数。</target>
        </trans-unit>
        <trans-unit id="c243d42c40b1b079fac4e495d20a5f383add383e" translate="yes" xml:space="preserve">
          <source>Ingests inbound emails from Mandrill.</source>
          <target state="translated">读取来自Mandrill的入站邮件。</target>
        </trans-unit>
        <trans-unit id="2e89987697155a3aab4cf8005968c5692402a010" translate="yes" xml:space="preserve">
          <source>Ingests inbound emails from Postmark. Requires a &lt;code&gt;RawEmail&lt;/code&gt; parameter containing a full RFC 822 message.</source>
          <target state="translated">从Postmark接收入站电子邮件。需要包含完整的RFC 822消息的 &lt;code&gt;RawEmail&lt;/code&gt; 参数。</target>
        </trans-unit>
        <trans-unit id="04e8776b1781cf6ec53bef1b8cc34a7ff1a0e9d4" translate="yes" xml:space="preserve">
          <source>Ingests inbound emails from SendGrid. Requires an &lt;code&gt;email&lt;/code&gt; parameter containing a full RFC 822 message.</source>
          <target state="translated">从SendGrid接收入站电子邮件。需要包含完整RFC 822消息的 &lt;code&gt;email&lt;/code&gt; 参数。</target>
        </trans-unit>
        <trans-unit id="844c9e9ffaf6b19ebb0cb6befdac150c47968826" translate="yes" xml:space="preserve">
          <source>Ingests inbound emails relayed from an SMTP server.</source>
          <target state="translated">读取从SMTP服务器中转的入站邮件。</target>
        </trans-unit>
        <trans-unit id="7da25d8a59155f55aeac4ed34d5ae1b9e20f37f3" translate="yes" xml:space="preserve">
          <source>Ingresses::Mailgun::InboundEmailsController</source>
          <target state="translated">Ingresses::Mailgun::InboundEmailsController</target>
        </trans-unit>
        <trans-unit id="b6d7efeec877849944e373cc37ee9788cbc2bde9" translate="yes" xml:space="preserve">
          <source>Ingresses::Mailgun::InboundEmailsController#create</source>
          <target state="translated">Ingresses::Mailgun::InboundEmailsController#create</target>
        </trans-unit>
        <trans-unit id="d471c518a4e0625f34b076410d3be699c0bfa111" translate="yes" xml:space="preserve">
          <source>Ingresses::Mandrill::InboundEmailsController</source>
          <target state="translated">Ingresses::Mandrill::InboundEmailsController</target>
        </trans-unit>
        <trans-unit id="6497cdc2b1c087141d75471048d8be9f2619e409" translate="yes" xml:space="preserve">
          <source>Ingresses::Mandrill::InboundEmailsController#create</source>
          <target state="translated">Ingresses::Mandrill::InboundEmailsController#create</target>
        </trans-unit>
        <trans-unit id="32482320e6f8c5325ea6fc34ae05791cb30bc211" translate="yes" xml:space="preserve">
          <source>Ingresses::Postmark::InboundEmailsController</source>
          <target state="translated">Ingresses::Postmark::InboundEmailsController</target>
        </trans-unit>
        <trans-unit id="def7ccd5bae34830a8dcd032d9c179d5f085af18" translate="yes" xml:space="preserve">
          <source>Ingresses::Postmark::InboundEmailsController#create</source>
          <target state="translated">Ingresses::Postmark::InboundEmailsController#create</target>
        </trans-unit>
        <trans-unit id="7055870ae3e931a2224267afbbb92ab8f653c953" translate="yes" xml:space="preserve">
          <source>Ingresses::Relay::InboundEmailsController</source>
          <target state="translated">Ingresses::Relay::InboundEmailsController</target>
        </trans-unit>
        <trans-unit id="d68de4f5b7ef94464fcb633024f3afa8e9d82b81" translate="yes" xml:space="preserve">
          <source>Ingresses::Relay::InboundEmailsController#create</source>
          <target state="translated">Ingresses::Relay::InboundEmailsController#create</target>
        </trans-unit>
        <trans-unit id="3315bf43c874cae6ee36c7d291e89ba04abb6915" translate="yes" xml:space="preserve">
          <source>Ingresses::Sendgrid::InboundEmailsController</source>
          <target state="translated">Ingresses::Sendgrid::InboundEmailsController</target>
        </trans-unit>
        <trans-unit id="79fc86436700d42b832b3c4ea9ae5af07d6ac826" translate="yes" xml:space="preserve">
          <source>Ingresses::Sendgrid::InboundEmailsController#create</source>
          <target state="translated">Ingresses::Sendgrid::InboundEmailsController#create</target>
        </trans-unit>
        <trans-unit id="9addf5a08ee6560a6444bfa5da226f9dda5097e8" translate="yes" xml:space="preserve">
          <source>Inheritable callback queues</source>
          <target state="translated">可继承的回调队列</target>
        </trans-unit>
        <trans-unit id="878ffd80536d567c1ec4814aab5eb7633c481c93" translate="yes" xml:space="preserve">
          <source>InheritableOptions</source>
          <target state="translated">InheritableOptions</target>
        </trans-unit>
        <trans-unit id="3d6a119a959e8cbe5490945458d11f87f26d87c5" translate="yes" xml:space="preserve">
          <source>InheritableOptions#inheritable_copy</source>
          <target state="translated">InheritableOptions#inheritable_copy</target>
        </trans-unit>
        <trans-unit id="108a36b1b8200fb5a72710521a7d03c26b191aca" translate="yes" xml:space="preserve">
          <source>InheritableOptions::new</source>
          <target state="translated">InheritableOptions::new</target>
        </trans-unit>
        <trans-unit id="fdaddb9ce367c2ca746a97cc24d2e8817a51f27d" translate="yes" xml:space="preserve">
          <source>Inheritance</source>
          <target state="translated">Inheritance</target>
        </trans-unit>
        <trans-unit id="6990f737f07155678850da157ebfcf4ec6a6199e" translate="yes" xml:space="preserve">
          <source>Inheritance Examples</source>
          <target state="translated">继承实例</target>
        </trans-unit>
        <trans-unit id="bde126929181e729972ad7d9ddf772e47cda5bd8" translate="yes" xml:space="preserve">
          <source>Inheritance#initialize_dup</source>
          <target state="translated">Inheritance#initialize_dup</target>
        </trans-unit>
        <trans-unit id="a326a867145d9f00f1712c47c8eb34e3439ab41c" translate="yes" xml:space="preserve">
          <source>Inheritance::ClassMethods</source>
          <target state="translated">Inheritance::ClassMethods</target>
        </trans-unit>
        <trans-unit id="a01613b2b9238ef321f4b05a78a4568055d71e6e" translate="yes" xml:space="preserve">
          <source>Inheritance::ClassMethods#abstract_class</source>
          <target state="translated">Inheritance::ClassMethods#abstract_class</target>
        </trans-unit>
        <trans-unit id="4934c3b146a1d79f2577e3e67ff820d302381e18" translate="yes" xml:space="preserve">
          <source>Inheritance::ClassMethods#abstract_class?</source>
          <target state="translated">Inheritance::ClassMethods#abstract_class?</target>
        </trans-unit>
        <trans-unit id="00e7918294e24f28c311b4076f415b7d8b83740e" translate="yes" xml:space="preserve">
          <source>Inheritance::ClassMethods#base_class</source>
          <target state="translated">Inheritance::ClassMethods#base_class</target>
        </trans-unit>
        <trans-unit id="04a62c79aa4cb9e487fae1d12175cd1d777f6770" translate="yes" xml:space="preserve">
          <source>Inheritance::ClassMethods#base_class?</source>
          <target state="translated">Inheritance::ClassMethods#base_class?</target>
        </trans-unit>
        <trans-unit id="0fb13c325e9fe3b08f15be74bd775aff377f5c5b" translate="yes" xml:space="preserve">
          <source>Inheritance::ClassMethods#compute_type</source>
          <target state="translated">Inheritance::ClassMethods#compute_type</target>
        </trans-unit>
        <trans-unit id="15186ad27ca45e760e125a07d16fa8e79261d707" translate="yes" xml:space="preserve">
          <source>Inheritance::ClassMethods#descends_from_active_record?</source>
          <target state="translated">Inheritance::ClassMethods#descends_from_active_record?</target>
        </trans-unit>
        <trans-unit id="0635fb33f336fafb4ba4e40502aff8a83777dcc6" translate="yes" xml:space="preserve">
          <source>Inheritance::ClassMethods#inherited</source>
          <target state="translated">Inheritance::ClassMethods#inherited</target>
        </trans-unit>
        <trans-unit id="977d92bc899515934b4b966eb7654018c87db3bf" translate="yes" xml:space="preserve">
          <source>Inheritance::ClassMethods#new</source>
          <target state="translated">Inheritance::ClassMethods#new</target>
        </trans-unit>
        <trans-unit id="372df04a248e04ff8449a2c54ffff50187ce7f28" translate="yes" xml:space="preserve">
          <source>Inheritance::ClassMethods#polymorphic_name</source>
          <target state="translated">Inheritance::ClassMethods#polymorphic_name</target>
        </trans-unit>
        <trans-unit id="2a2dfa372be9c94c50976c8495df7eae0586c8a4" translate="yes" xml:space="preserve">
          <source>Inheritance::ClassMethods#sti_name</source>
          <target state="translated">Inheritance::ClassMethods#sti_name</target>
        </trans-unit>
        <trans-unit id="68fa16ffd48f366e4fa8d57fea78ff03fcab0191" translate="yes" xml:space="preserve">
          <source>Initialization</source>
          <target state="translated">Initialization</target>
        </trans-unit>
        <trans-unit id="6514323c8fb77a04ce286a1549e2bf030a862781" translate="yes" xml:space="preserve">
          <source>Initialization events</source>
          <target state="translated">初始化事件</target>
        </trans-unit>
        <trans-unit id="b9b3df890d7a8d84203daafab9b04d207b07add4" translate="yes" xml:space="preserve">
          <source>Initialize a new &lt;a href=&quot;messageencryptor&quot;&gt;&lt;code&gt;MessageEncryptor&lt;/code&gt;&lt;/a&gt;. &lt;code&gt;secret&lt;/code&gt; must be at least as long as the cipher key size. For the default 'aes-256-gcm' cipher, this is 256 bits. If you are using a user-entered secret, you can generate a suitable key by using &lt;code&gt;ActiveSupport::KeyGenerator&lt;/code&gt; or a similar key derivation function.</source>
          <target state="translated">初始化一个新的&lt;a href=&quot;messageencryptor&quot;&gt; &lt;code&gt;MessageEncryptor&lt;/code&gt; &lt;/a&gt;。 &lt;code&gt;secret&lt;/code&gt; 必须至少与密码密钥大小一样长。对于默认的&amp;ldquo; aes-256-gcm&amp;rdquo;密码，这是256位。如果使用的是用户输入的机密，则可以使用 &lt;code&gt;ActiveSupport::KeyGenerator&lt;/code&gt; 或类似的密钥派生函数来生成合适的密钥。</target>
        </trans-unit>
        <trans-unit id="12ddca1d545d5a1128488691ed488f4cd1e459af" translate="yes" xml:space="preserve">
          <source>Initialize a new &lt;a href=&quot;messageencryptor&quot;&gt;MessageEncryptor&lt;/a&gt;. &lt;code&gt;secret&lt;/code&gt; must be at least as long as the cipher key size. For the default 'aes-256-gcm' cipher, this is 256 bits. If you are using a user-entered secret, you can generate a suitable key by using &lt;code&gt;ActiveSupport::KeyGenerator&lt;/code&gt; or a similar key derivation function.</source>
          <target state="translated">初始化一个新的&lt;a href=&quot;messageencryptor&quot;&gt;MessageEncryptor&lt;/a&gt;。 &lt;code&gt;secret&lt;/code&gt; 必须至少与密码密钥大小一样长。对于默认的&amp;ldquo; aes-256-gcm&amp;rdquo;密码，这是256位。如果您使用的是用户输入的机密，则可以使用 &lt;code&gt;ActiveSupport::KeyGenerator&lt;/code&gt; 或类似的密钥派生函数来生成合适的密钥。</target>
        </trans-unit>
        <trans-unit id="c6f5bbca96cb40eb122694edc60ed84cb7ae383d" translate="yes" xml:space="preserve">
          <source>Initialize an empty model object from &lt;code&gt;coder&lt;/code&gt;. &lt;code&gt;coder&lt;/code&gt; should be the result of previously encoding an Active Record model, using &lt;a href=&quot;core#method-i-encode_with&quot;&gt;&lt;code&gt;encode_with&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">从 &lt;code&gt;coder&lt;/code&gt; 初始化一个空的模型对象。 &lt;code&gt;coder&lt;/code&gt; 应该是先前使用&lt;a href=&quot;core#method-i-encode_with&quot;&gt; &lt;code&gt;encode_with&lt;/code&gt; &lt;/a&gt;对Active Record模型进行编码的结果。</target>
        </trans-unit>
        <trans-unit id="96d7e26d527682af0767568cd6eff6730b2648d3" translate="yes" xml:space="preserve">
          <source>Initialize an empty model object from &lt;code&gt;coder&lt;/code&gt;. &lt;code&gt;coder&lt;/code&gt; should be the result of previously encoding an Active Record model, using &lt;a href=&quot;core#method-i-encode_with&quot;&gt;encode_with&lt;/a&gt;.</source>
          <target state="translated">从 &lt;code&gt;coder&lt;/code&gt; 初始化一个空的模型对象。 &lt;code&gt;coder&lt;/code&gt; 应该是先前使用&lt;a href=&quot;core#method-i-encode_with&quot;&gt;encode_with&lt;/a&gt;对Active Record模型进行编码的结果。</target>
        </trans-unit>
        <trans-unit id="db5e65d8fc7dddd98f6860c2416bcbcc90ec0fba" translate="yes" xml:space="preserve">
          <source>Initializers</source>
          <target state="translated">Initializers</target>
        </trans-unit>
        <trans-unit id="3cc643394e015280b5fb20c2d82a6a247d93fb7d" translate="yes" xml:space="preserve">
          <source>Initializers defined using the &lt;code&gt;initializer&lt;/code&gt; method will be run in the order they are defined in, with the exception of ones that use the &lt;code&gt;:before&lt;/code&gt; or &lt;code&gt;:after&lt;/code&gt; methods.</source>
          <target state="translated">使用 &lt;code&gt;initializer&lt;/code&gt; 方法定义的初始化器将按照定义的顺序运行，但使用 &lt;code&gt;:before&lt;/code&gt; 或 &lt;code&gt;:after&lt;/code&gt; 方法的初始化器除外。</target>
        </trans-unit>
        <trans-unit id="a86d77af0c3722c3e4da4c178fb648acf43fc367" translate="yes" xml:space="preserve">
          <source>Initializes &lt;code&gt;attribute&lt;/code&gt; to zero if &lt;code&gt;nil&lt;/code&gt; and adds the value passed as &lt;code&gt;by&lt;/code&gt; (default is 1). The increment is performed directly on the underlying attribute, no setter is invoked. Only makes sense for number-based attributes. Returns &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="translated">如果为 &lt;code&gt;nil&lt;/code&gt; ，则将 &lt;code&gt;attribute&lt;/code&gt; 初始化为零，并添加传递的值 &lt;code&gt;by&lt;/code&gt; （默认值为1）。增量直接在基础属性上执行，不调用设置器。仅对基于数字的属性有意义。返回 &lt;code&gt;self&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fcd42385993fdf0221b329817d9382977b72308d" translate="yes" xml:space="preserve">
          <source>Initializes &lt;code&gt;attribute&lt;/code&gt; to zero if &lt;code&gt;nil&lt;/code&gt; and subtracts the value passed as &lt;code&gt;by&lt;/code&gt; (default is 1). The decrement is performed directly on the underlying attribute, no setter is invoked. Only makes sense for number-based attributes. Returns &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="translated">如果为 &lt;code&gt;nil&lt;/code&gt; ，则将 &lt;code&gt;attribute&lt;/code&gt; 初始化为零，然后减去传递的值 &lt;code&gt;by&lt;/code&gt; （默认值为1）。递减直接在基础属性上执行，不调用setter。仅对基于数字的属性有意义。返回 &lt;code&gt;self&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9d1efbf2932073f2aaa30fb69d34ca59d561f6dc" translate="yes" xml:space="preserve">
          <source>Initializes a new model with the given &lt;code&gt;params&lt;/code&gt;.</source>
          <target state="translated">使用给定的 &lt;code&gt;params&lt;/code&gt; 初始化一个新模型。</target>
        </trans-unit>
        <trans-unit id="25919e950f14f28342516aa26edc8ef27fb8cfe7" translate="yes" xml:space="preserve">
          <source>Initializes and connects a PostgreSQL adapter.</source>
          <target state="translated">初始化并连接一个PostgreSQL适配器。</target>
        </trans-unit>
        <trans-unit id="5f44168de8e6de1f11fd906b709a9ac6d9152d00" translate="yes" xml:space="preserve">
          <source>Initializes new record from relation while maintaining the current scope.</source>
          <target state="translated">在保持当前作用域的同时,从关系中初始化新记录。</target>
        </trans-unit>
        <trans-unit id="56915b94b06061a272ee042aac64cce078107917" translate="yes" xml:space="preserve">
          <source>Initiate a manual reload</source>
          <target state="translated">启动手动重装</target>
        </trans-unit>
        <trans-unit id="2d851649cb0b809ff3f794243faf8b50aac49273" translate="yes" xml:space="preserve">
          <source>Injection</source>
          <target state="translated">Injection</target>
        </trans-unit>
        <trans-unit id="829ffb5e8ba86505d0ede43d4f74c3b605d82ec6" translate="yes" xml:space="preserve">
          <source>Injection is very tricky, because the same code or parameter can be malicious in one context, but totally harmless in another. A context can be a scripting, query, or programming language, the shell, or a Ruby/Rails method. The following sections will cover all important contexts where injection attacks may happen. The first section, however, covers an architectural decision in connection with Injection.</source>
          <target state="translated">注入是非常棘手的,因为同样的代码或参数在一个上下文中可能是恶意的,但在另一个上下文中却完全无害。上下文可以是脚本、查询或编程语言、shell或Ruby/Rails方法。下面的章节将涵盖所有可能发生注入攻击的重要上下文。然而,第一节涵盖了一个与注入相关的架构决定。</target>
        </trans-unit>
        <trans-unit id="6485cd5f8e0fb60a6b40665efa4be6e80ab8c693" translate="yes" xml:space="preserve">
          <source>Injects a block of code into a defined position in your file.</source>
          <target state="translated">在您的文件中定义的位置注入一个代码块。</target>
        </trans-unit>
        <trans-unit id="d2860d2edae8411abdfa46d50321f29af97f5353" translate="yes" xml:space="preserve">
          <source>Inline Attachments</source>
          <target state="translated">内联附件</target>
        </trans-unit>
        <trans-unit id="b46ea27191430cc66d892811d5c5909433511f69" translate="yes" xml:space="preserve">
          <source>Inline callback blocks using &lt;code&gt;return&lt;/code&gt; can be refactored to evaluate to the returned value:</source>
          <target state="translated">可以重构使用 &lt;code&gt;return&lt;/code&gt; 的内联回调块以求出返回值：</target>
        </trans-unit>
        <trans-unit id="29a8dda03d8fa26cf788bd2ddffa18aa80d59c11" translate="yes" xml:space="preserve">
          <source>InlinePreviewInterceptor</source>
          <target state="translated">InlinePreviewInterceptor</target>
        </trans-unit>
        <trans-unit id="a845996754ffc7a0716a05091edc051fd302fc2e" translate="yes" xml:space="preserve">
          <source>Inserting data into HTML templates needs extra care. For example, you can't just interpolate &lt;code&gt;@review.title&lt;/code&gt; verbatim into an HTML page. For one thing, if the review title is &quot;Flanagan &amp;amp; Matz rules!&quot; the output won't be well-formed because an ampersand has to be escaped as &quot;&amp;amp;amp;&quot;. What's more, depending on the application, that may be a big security hole because users can inject malicious HTML setting a hand-crafted review title. Check out the section about cross-site scripting in the &lt;a href=&quot;security#cross-site-scripting-xss&quot;&gt;Security guide&lt;/a&gt; for further information about the risks.</source>
          <target state="translated">将数据插入HTML模板需要格外小心。例如，您不能只将 &lt;code&gt;@review.title&lt;/code&gt; 逐字插入到HTML页面中。一方面，如果评论标题是&amp;ldquo; Flanagan＆Matz规则！&amp;rdquo; 输出将格式不正确，因为必须将与号转义为&amp;ldquo;＆amp;&amp;rdquo;。此外，根据应用程序的不同，这可能是一个很大的安全漏洞，因为用户可以注入恶意HTML来设置手工制作的审阅标题。请查看《&lt;a href=&quot;security#cross-site-scripting-xss&quot;&gt;安全性指南》中&lt;/a&gt;有关跨站点脚本的部分，以获取有关风险的更多信息。</target>
        </trans-unit>
        <trans-unit id="01be4a345faed307605daf983eeed9bc1912f61d" translate="yes" xml:space="preserve">
          <source>Inserts a single record into the database in a single SQL INSERT statement. It does not instantiate any models nor does it trigger Active Record callbacks or validations. Though passed values go through Active Record's type casting and serialization.</source>
          <target state="translated">在一条SQL INSERT语句中插入一条记录到数据库中。它不实例化任何模型,也不触发Active Record回调或验证。尽管通过的值会通过Active Record的类型转换和序列化。</target>
        </trans-unit>
        <trans-unit id="f2098ea62054241a3c2030b9e7b979d66024097c" translate="yes" xml:space="preserve">
          <source>Inserts multiple records into the database in a single SQL INSERT statement. It does not instantiate any models nor does it trigger Active Record callbacks or validations. Though passed values go through Active Record's type casting and serialization.</source>
          <target state="translated">在一个SQL INSERT语句中插入多个记录到数据库中。它不实例化任何模型,也不触发Active Record回调或验证。尽管通过的值会经过Active Record的类型转换和序列化。</target>
        </trans-unit>
        <trans-unit id="03c94201b563e22988175ed07701bbc92b432230" translate="yes" xml:space="preserve">
          <source>Inserts the given fixture into the table. Overridden in adapters that require something beyond a simple insert (e.g. Oracle). Most of adapters should implement `insert_fixtures_set` that leverages bulk SQL insert. We keep this method to provide fallback for databases like sqlite that do not support bulk inserts.</source>
          <target state="translated">将给定的夹具插入到表中。在需要超越简单插入的适配器中被重写(例如Oracle)。大多数适配程序应该实现`insert_fixtures_set`来利用批量SQL插入。我们保留这个方法是为了给像sqlite这样不支持批量插入的数据库提供后备。</target>
        </trans-unit>
        <trans-unit id="3e75d211e60bc43f28ee2a4034ae9797a2cd4e71" translate="yes" xml:space="preserve">
          <source>Inserts the given fixture into the table. Overridden in adapters that require something beyond a simple insert (eg. Oracle). Most of adapters should implement `insert_fixtures_set` that leverages bulk SQL insert. We keep this method to provide fallback for databases like sqlite that do not support bulk inserts.</source>
          <target state="translated">将给定的夹具插入到表中。在需要超越简单插入的适配器中被重写(例如Oracle)。大多数适配程序应该实现`insert_fixtures_set`来利用批量SQL插入。我们保留这个方法是为了给像sqlite这样不支持批量插入的数据库提供后备。</target>
        </trans-unit>
        <trans-unit id="dcdce6d287df6df156ef34c4bebe0e7598a298eb" translate="yes" xml:space="preserve">
          <source>Inside a Rails application, you can set-up your services through the generated &lt;code&gt;config/storage.yml&lt;/code&gt; file and reference one of the aforementioned constant under the &lt;code&gt;service&lt;/code&gt; key. For example:</source>
          <target state="translated">在Rails应用程序中，您可以通过生成的 &lt;code&gt;config/storage.yml&lt;/code&gt; 文件设置服务，并在 &lt;code&gt;service&lt;/code&gt; 密钥下引用上述常量之一。例如：</target>
        </trans-unit>
        <trans-unit id="81fc66f02c626e819fce091962b69cd908ed799a" translate="yes" xml:space="preserve">
          <source>Inside an Engine</source>
          <target state="translated">引擎内部</target>
        </trans-unit>
        <trans-unit id="ca089a5502c726d8026d3a6ef582d1f9c7041b18" translate="yes" xml:space="preserve">
          <source>Inside any Rails application you can then invoke the debugger by calling the &lt;code&gt;byebug&lt;/code&gt; method.</source>
          <target state="translated">然后，您可以在任何Rails应用程序中通过调用 &lt;code&gt;byebug&lt;/code&gt; 方法来调用调试器。</target>
        </trans-unit>
        <trans-unit id="7bafd3cd51f90726af9a9d1acaf7aa7cadd199a4" translate="yes" xml:space="preserve">
          <source>Inside any controller action or view, you can invoke the console by calling the &lt;code&gt;console&lt;/code&gt; method.</source>
          <target state="translated">在任何控制器动作或视图中，都可以通过调用 &lt;code&gt;console&lt;/code&gt; 方法来调用控制台。</target>
        </trans-unit>
        <trans-unit id="21481b8c559c4c02b87406f78ebeb054fe506b43" translate="yes" xml:space="preserve">
          <source>Inside migration files, the &lt;code&gt;t&lt;/code&gt; object in &lt;a href=&quot;schemastatements#method-i-create_table&quot;&gt;create_table&lt;/a&gt; is actually of this type:</source>
          <target state="translated">在迁移文件中，&lt;a href=&quot;schemastatements#method-i-create_table&quot;&gt;create_table中&lt;/a&gt;的 &lt;code&gt;t&lt;/code&gt; 对象实际上是这种类型的：</target>
        </trans-unit>
        <trans-unit id="744d4fb8e59b54f4790af3c09cd7d3d4f2da5ac7" translate="yes" xml:space="preserve">
          <source>Inside the &lt;code&gt;-&amp;gt; { ... }&lt;/code&gt; block you can use all of the usual &lt;a href=&quot;../relation&quot;&gt;&lt;code&gt;Relation&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">在 &lt;code&gt;-&amp;gt; { ... }&lt;/code&gt; 块中，您可以使用所有常用的&lt;a href=&quot;../relation&quot;&gt; &lt;code&gt;Relation&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="acfb2b1ac48dee8a30cfcdf3f4dfe998556d2d5a" translate="yes" xml:space="preserve">
          <source>Inside the &lt;code&gt;-&amp;gt; { ... }&lt;/code&gt; block you can use all of the usual &lt;a href=&quot;../relation&quot;&gt;Relation&lt;/a&gt; methods.</source>
          <target state="translated">在 &lt;code&gt;-&amp;gt; { ... }&lt;/code&gt; 块中，您可以使用所有常用的&lt;a href=&quot;../relation&quot;&gt;Relation&lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="edfc5dfee3505b9f9d6bda671872ebd4a4ee350e" translate="yes" xml:space="preserve">
          <source>Inside the &lt;code&gt;app&lt;/code&gt; directory are the standard &lt;code&gt;assets&lt;/code&gt;, &lt;code&gt;controllers&lt;/code&gt;, &lt;code&gt;helpers&lt;/code&gt;, &lt;code&gt;jobs&lt;/code&gt;, &lt;code&gt;mailers&lt;/code&gt;, &lt;code&gt;models&lt;/code&gt;, and &lt;code&gt;views&lt;/code&gt; directories that you should be familiar with from an application. We'll look more into models in a future section, when we're writing the engine.</source>
          <target state="translated">在 &lt;code&gt;app&lt;/code&gt; 目录内是您应该从应用程序中熟悉的标准 &lt;code&gt;assets&lt;/code&gt; ， &lt;code&gt;controllers&lt;/code&gt; ， &lt;code&gt;helpers&lt;/code&gt; ， &lt;code&gt;jobs&lt;/code&gt; ， &lt;code&gt;mailers&lt;/code&gt; ， &lt;code&gt;models&lt;/code&gt; 和 &lt;code&gt;views&lt;/code&gt; 目录。在编写引擎时，我们将在以后的部分中进一步研究模型。</target>
        </trans-unit>
        <trans-unit id="91967b542aed5f5ef2e46c25860a52b13656d35d" translate="yes" xml:space="preserve">
          <source>Inside the &lt;code&gt;bin/rails console&lt;/code&gt; you have access to the &lt;code&gt;app&lt;/code&gt; and &lt;code&gt;helper&lt;/code&gt; instances.</source>
          <target state="translated">在 &lt;code&gt;bin/rails console&lt;/code&gt; 您可以访问 &lt;code&gt;app&lt;/code&gt; 和 &lt;code&gt;helper&lt;/code&gt; 程序实例。</target>
        </trans-unit>
        <trans-unit id="3b5bb7d78f59ef0d2405b8e986fb4763ebd602dd" translate="yes" xml:space="preserve">
          <source>Inside the &lt;code&gt;rails console&lt;/code&gt; you have access to the &lt;code&gt;app&lt;/code&gt; and &lt;code&gt;helper&lt;/code&gt; instances.</source>
          <target state="translated">在 &lt;code&gt;rails console&lt;/code&gt; 您可以访问 &lt;code&gt;app&lt;/code&gt; 和 &lt;code&gt;helper&lt;/code&gt; 程序实例。</target>
        </trans-unit>
        <trans-unit id="641ef3a3a6478764778e579b5b58210ea5d42729" translate="yes" xml:space="preserve">
          <source>Inside the block for &lt;code&gt;create_table&lt;/code&gt;, two columns are defined: &lt;code&gt;title&lt;/code&gt; and &lt;code&gt;body&lt;/code&gt;. These were added by the generator because we included them in our generate command (&lt;code&gt;bin/rails generate model Article title:string body:text&lt;/code&gt;).</source>
          <target state="translated">在 &lt;code&gt;create_table&lt;/code&gt; 的块内，定义了两列： &lt;code&gt;title&lt;/code&gt; 和 &lt;code&gt;body&lt;/code&gt; 。这些是由生成器添加的，因为我们将它们包含在了我们的generate命令中（ &lt;code&gt;bin/rails generate model Article title:string body:text&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="6469372268010b680566e892d837c1be10063e1d" translate="yes" xml:space="preserve">
          <source>Inside the test directory there is the &lt;code&gt;test/integration&lt;/code&gt; directory, where integration tests for the engine should be placed. Other directories can be created in the &lt;code&gt;test&lt;/code&gt; directory as well. For example, you may wish to create a &lt;code&gt;test/models&lt;/code&gt; directory for your model tests.</source>
          <target state="translated">在test目录中有 &lt;code&gt;test/integration&lt;/code&gt; 目录，应该在其中放置引擎的集成测试。其他目录也可以在 &lt;code&gt;test&lt;/code&gt; 目录中创建。例如，您可能希望为模型测试创建一个 &lt;code&gt;test/models&lt;/code&gt; 目录。</target>
        </trans-unit>
        <trans-unit id="8408bbf7dfd69738c24b99c0074fd7a247613a94" translate="yes" xml:space="preserve">
          <source>Inspecting Middleware Stack</source>
          <target state="translated">检查中间件堆栈</target>
        </trans-unit>
        <trans-unit id="a6ae35f450b26d859c2118e63fa573b3bd8d5308" translate="yes" xml:space="preserve">
          <source>Inspecting Variables</source>
          <target state="translated">检查变量</target>
        </trans-unit>
        <trans-unit id="c92130bec27348f9c16772e495150fc6bd805def" translate="yes" xml:space="preserve">
          <source>Inspecting and Testing Routes</source>
          <target state="translated">检查和测试路线</target>
        </trans-unit>
        <trans-unit id="cfb0a450eea8507a41095ebe947ca2ed8994961a" translate="yes" xml:space="preserve">
          <source>Inspired by the Quiet Backtrace gem by thoughtbot.</source>
          <target state="translated">灵感来自于thoughtbot的Quiet Backtrace宝石。</target>
        </trans-unit>
        <trans-unit id="8dacdfdb2b7181d7db1e289a5292e9965b1d7fd8" translate="yes" xml:space="preserve">
          <source>Install a callback for the given event.</source>
          <target state="translated">为给定事件安装一个回调。</target>
        </trans-unit>
        <trans-unit id="17ec383645ad0dd91277a304080964bf80f4f253" translate="yes" xml:space="preserve">
          <source>Install migrations needed for &lt;code&gt;InboundEmail&lt;/code&gt; and ensure Active Storage is set up:</source>
          <target state="translated">安装 &lt;code&gt;InboundEmail&lt;/code&gt; 所需的迁移，并确保已设置Active Storage：</target>
        </trans-unit>
        <trans-unit id="d00f491d8c40c03d4b59f712550d0e446ff54fbd" translate="yes" xml:space="preserve">
          <source>Install spring using &lt;code&gt;bundle install&lt;/code&gt;.</source>
          <target state="translated">使用 &lt;code&gt;bundle install&lt;/code&gt; 安装spring 。</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">Installation</target>
        </trans-unit>
        <trans-unit id="6e0f3906b5c7f6a4b6cb048055a7f93079d5264f" translate="yes" xml:space="preserve">
          <source>Installing Rails</source>
          <target state="translated">安装轨道</target>
        </trans-unit>
        <trans-unit id="aa6dfe54274ed1710b82f903b6abd73713a2f05a" translate="yes" xml:space="preserve">
          <source>Instance Variables</source>
          <target state="translated">实例变量</target>
        </trans-unit>
        <trans-unit id="e6bc144a6aa17edc35608d98fc5380cd3df13339" translate="yes" xml:space="preserve">
          <source>Instance Variables Available</source>
          <target state="translated">可用的实例变量</target>
        </trans-unit>
        <trans-unit id="f4afcaf921a6de61c708f5f2c356b8ce5c3328e9" translate="yes" xml:space="preserve">
          <source>Instance methods are created as well for convenience, they are just proxies to the class attribute. So, instances can change the class attribute, but cannot override it as it happens with &lt;code&gt;class_attribute&lt;/code&gt; (see above). For example given</source>
          <target state="translated">实例方法也是为了方便而创建的，它们只是class属性的代理。因此，实例可以更改class属性，但不能像 &lt;code&gt;class_attribute&lt;/code&gt; 那样覆盖它（请参见上文）。例如给出</target>
        </trans-unit>
        <trans-unit id="0c9fd054155855fd08e13e216d559f7895b79636" translate="yes" xml:space="preserve">
          <source>Instance variables that are accessible in views.</source>
          <target state="translated">可在视图中访问的实例变量。</target>
        </trans-unit>
        <trans-unit id="a7436cd076605f4f6b404cf011f15d6a92df9c3d" translate="yes" xml:space="preserve">
          <source>Instance-level &lt;code&gt;respond_to&lt;/code&gt; is unaffected and does not require the additional gem:</source>
          <target state="translated">实例级的 &lt;code&gt;respond_to&lt;/code&gt; 不受影响，不需要其他的gem：</target>
        </trans-unit>
        <trans-unit id="7762633929a1e0b61a50135d708b869a90a1a564" translate="yes" xml:space="preserve">
          <source>Instances may overwrite the class value in the same way:</source>
          <target state="translated">实例可以用同样的方式覆盖类值。</target>
        </trans-unit>
        <trans-unit id="9f2c6de42dd18302648ff7dd63c129bbd2f177e6" translate="yes" xml:space="preserve">
          <source>Instantiate the equivalent Ruby object of the appropriate model for every resulting row.</source>
          <target state="translated">为每一行的结果实例化相应模型的Ruby对象。</target>
        </trans-unit>
        <trans-unit id="d4cfe1684b9bdb4a97ddba033a2969091cea4d78" translate="yes" xml:space="preserve">
          <source>Instantiates a new column for the table. See &lt;a href=&quot;schemastatements#method-i-add_column&quot;&gt;connection.add_column&lt;/a&gt; for available options.</source>
          <target state="translated">实例化表的新列。有关可用选项，请参见&lt;a href=&quot;schemastatements#method-i-add_column&quot;&gt;connection.add_column&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e745302923474832bd961065a8fb1dadefee0f6b" translate="yes" xml:space="preserve">
          <source>Instantiating a new &lt;a href=&quot;stringinquirer&quot;&gt;&lt;code&gt;StringInquirer&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">实例化一个新的&lt;a href=&quot;stringinquirer&quot;&gt; &lt;code&gt;StringInquirer&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ec491111cabccfee0fc99b9e3416ee8ef93d5fab" translate="yes" xml:space="preserve">
          <source>Instantiating a new &lt;a href=&quot;stringinquirer&quot;&gt;StringInquirer&lt;/a&gt;</source>
          <target state="translated">实例化一个新的&lt;a href=&quot;stringinquirer&quot;&gt;StringInquirer&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4db2c485a1c4b852a7d1afe7da3a46ea4ba7e31d" translate="yes" xml:space="preserve">
          <source>Instead of a &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;, like &lt;code&gt;posts#index&lt;/code&gt;, which corresponds to the index action in the PostsController, you can specify any Rack application as the endpoint for a matcher:</source>
          <target state="translated">代替的&lt;a href=&quot;../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;，如 &lt;code&gt;posts#index&lt;/code&gt; ，其对应于PostsController索引操作，您可以指定任何Rack应用为终点的匹配：</target>
        </trans-unit>
        <trans-unit id="de2daca2c5d3ff11781567a508a71041f4b7c73f" translate="yes" xml:space="preserve">
          <source>Instead of a &lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt;, like &lt;code&gt;posts#index&lt;/code&gt;, which corresponds to the index action in the PostsController, you can specify any Rack application as the endpoint for a matcher:</source>
          <target state="translated">代替的&lt;a href=&quot;../string&quot;&gt;字符串&lt;/a&gt;，如 &lt;code&gt;posts#index&lt;/code&gt; ，其对应于PostsController索引操作，您可以指定任何Rack应用为终点的匹配：</target>
        </trans-unit>
        <trans-unit id="b82c51d0b22ee7205e62cd6f126b3721bdf68de6" translate="yes" xml:space="preserve">
          <source>Instead of a String like &lt;code&gt;'articles#index'&lt;/code&gt;, which corresponds to the &lt;code&gt;index&lt;/code&gt; action in the &lt;code&gt;ArticlesController&lt;/code&gt;, you can specify any &lt;a href=&quot;rails_on_rack&quot;&gt;Rack application&lt;/a&gt; as the endpoint for a matcher:</source>
          <target state="translated">您可以将任何&lt;a href=&quot;rails_on_rack&quot;&gt;Rack应用程序&lt;/a&gt;指定为匹配器的端点，而不是与 &lt;code&gt;ArticlesController&lt;/code&gt; 中的 &lt;code&gt;index&lt;/code&gt; 操作相对应的字符串 &lt;code&gt;'articles#index'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cda95c68819053b9941c2e8712b8b82003b7c61b" translate="yes" xml:space="preserve">
          <source>Instead of an options hash, you can also simply pass in a model. Rails will use the &lt;code&gt;updated_at&lt;/code&gt; and &lt;code&gt;cache_key_with_version&lt;/code&gt; methods for setting &lt;code&gt;last_modified&lt;/code&gt; and &lt;code&gt;etag&lt;/code&gt;:</source>
          <target state="translated">除了选项哈希之外，您还可以简单地传递模型。Rails将使用 &lt;code&gt;updated_at&lt;/code&gt; 和 &lt;code&gt;cache_key_with_version&lt;/code&gt; 方法来设置 &lt;code&gt;last_modified&lt;/code&gt; 和 &lt;code&gt;etag&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="abde7a605409afb52df3b59e00ef377416ed7481" translate="yes" xml:space="preserve">
          <source>Instead of calling &lt;a href=&quot;tabledefinition#method-i-column&quot;&gt;&lt;code&gt;column&lt;/code&gt;&lt;/a&gt; directly, you can also work with the short-hand definitions for the default types. They use the type as the method name instead of as a parameter and allow for multiple columns to be defined in a single statement.</source>
          <target state="translated">除了直接调用&lt;a href=&quot;tabledefinition#method-i-column&quot;&gt; &lt;code&gt;column&lt;/code&gt; 之外&lt;/a&gt;，还可以使用默认类型的简写定义。他们使用类型作为方法名称而不是参数，并允许在单个语句中定义多个列。</target>
        </trans-unit>
        <trans-unit id="b08b659f08cd25084c638c422a66099cf07388cf" translate="yes" xml:space="preserve">
          <source>Instead of calling &lt;a href=&quot;tabledefinition#method-i-column&quot;&gt;column&lt;/a&gt; directly, you can also work with the short-hand definitions for the default types. They use the type as the method name instead of as a parameter and allow for multiple columns to be defined in a single statement.</source>
          <target state="translated">除了直接调用&lt;a href=&quot;tabledefinition#method-i-column&quot;&gt;column之外&lt;/a&gt;，还可以使用默认类型的简写定义。他们使用类型作为方法名称而不是参数，并允许在单个语句中定义多个列。</target>
        </trans-unit>
        <trans-unit id="54c983c02d3a5b541a7a56ed3d4f0d08dea5c885" translate="yes" xml:space="preserve">
          <source>Instead of explicitly naming the location of a partial, you can also let &lt;a href=&quot;partialrenderer&quot;&gt;&lt;code&gt;PartialRenderer&lt;/code&gt;&lt;/a&gt; do the work and pick the proper path by checking &lt;code&gt;to_partial_path&lt;/code&gt; method.</source>
          <target state="translated">除了明确命名&lt;a href=&quot;partialrenderer&quot;&gt; &lt;code&gt;PartialRenderer&lt;/code&gt; &lt;/a&gt;的位置，您还可以让PartialRenderer完成工作并通过检查 &lt;code&gt;to_partial_path&lt;/code&gt; 方法来选择正确的路径。</target>
        </trans-unit>
        <trans-unit id="d6fac76b830aa8fdf650571fd8e47e809b5f97b6" translate="yes" xml:space="preserve">
          <source>Instead of explicitly naming the location of a partial, you can also let &lt;a href=&quot;partialrenderer&quot;&gt;PartialRenderer&lt;/a&gt; do the work and pick the proper path by checking &lt;code&gt;to_partial_path&lt;/code&gt; method.</source>
          <target state="translated">您也可以让&lt;a href=&quot;partialrenderer&quot;&gt;PartialRenderer&lt;/a&gt;完成工作并通过检查 &lt;code&gt;to_partial_path&lt;/code&gt; 方法来选择正确的路径，而不是显式命名局部的位置。</target>
        </trans-unit>
        <trans-unit id="282a280a0cab90c59c897d96018296189d742c1c" translate="yes" xml:space="preserve">
          <source>Instead of passing a string to the conditions option, you can pass an array to sanitize tainted strings like this:</source>
          <target state="translated">你可以不向条件选项传递一个字符串,而是像这样传递一个数组来消毒污染的字符串。</target>
        </trans-unit>
        <trans-unit id="ec02bda762202680a9ca746c8177602658813c28" translate="yes" xml:space="preserve">
          <source>Instead of passing the content as an argument, you can also use a block in which case, you pass your &lt;code&gt;html_options&lt;/code&gt; as the first parameter.</source>
          <target state="translated">除了将内容作为参数传递外，还可以使用一个块，在这种情况下，您将 &lt;code&gt;html_options&lt;/code&gt; 作为第一个参数传递。</target>
        </trans-unit>
        <trans-unit id="edd65bb52286b846fe1b028432f87a2da5ac601a" translate="yes" xml:space="preserve">
          <source>Instead of polluting the thread locals namespace:</source>
          <target state="translated">而不是污染线程locals命名空间。</target>
        </trans-unit>
        <trans-unit id="38b0e5a9769fb9574f82e5157ef0cddca8289de5" translate="yes" xml:space="preserve">
          <source>Instead of returning a path such as &lt;code&gt;/assets/smile.png&lt;/code&gt; (digests are left out for readability). The URL generated will have the full path to your CDN.</source>
          <target state="translated">而不是返回诸如 &lt;code&gt;/assets/smile.png&lt;/code&gt; 之类的路径（出于可读性考虑，省略了摘要）。生成的URL将具有您CDN的完整路径。</target>
        </trans-unit>
        <trans-unit id="8b24539f81dce8069573b818cfa967fe057251e4" translate="yes" xml:space="preserve">
          <source>Instead of setting the variant on the render call you may also set it on the request object in your controller action.</source>
          <target state="translated">不需要在渲染调用中设置变量,你也可以在控制器动作中对请求对象进行设置。</target>
        </trans-unit>
        <trans-unit id="d7d9c8fa98536e91c26d449b779521f157c1a6de" translate="yes" xml:space="preserve">
          <source>Instead of stealing a cookie unknown to the attacker, they fix a user's session identifier (in the cookie) known to them. Read more about this so-called session fixation later.</source>
          <target state="translated">他们不是窃取攻击者未知的cookie,而是固定用户已知的用户会话标识符(在cookie中)。稍后再读一下这种所谓的会话固定。</target>
        </trans-unit>
        <trans-unit id="368161168ef35935386619c50d010f0e7708fec1" translate="yes" xml:space="preserve">
          <source>Instead of the initializer, you'll have to set the relevant options somewhere before your middleware is built (like &lt;code&gt;config/application.rb&lt;/code&gt;) and pass them to your preferred middleware, like this:</source>
          <target state="translated">代替初始化程序，您必须在构建中间件之前在某个位置设置相关选项（例如 &lt;code&gt;config/application.rb&lt;/code&gt; ），然后将它们传递给首选的中间件，如下所示：</target>
        </trans-unit>
        <trans-unit id="a9ae3405744e20c189c424dbe4a3d20461b01ff6" translate="yes" xml:space="preserve">
          <source>Instead of using Rails to generate HTML that communicates with the server through forms and links, many developers are treating their web application as just an API client delivered as HTML with JavaScript that consumes a JSON API.</source>
          <target state="translated">许多开发人员没有使用Rails生成通过表单和链接与服务器通信的HTML,而是将他们的Web应用视为一个API客户端,以HTML和JavaScript交付,消耗JSON API。</target>
        </trans-unit>
        <trans-unit id="c042f3d9b71b32db250543be269d410c99d13527" translate="yes" xml:space="preserve">
          <source>Instead of:</source>
          <target state="translated">而不是:</target>
        </trans-unit>
        <trans-unit id="48dfdea2f5cbbb425bae6510eac74e4622640ae0" translate="yes" xml:space="preserve">
          <source>Instead, we will pass a single Hash that contains the values. However, we must still specify what values are allowed in that Hash. Otherwise, a malicious user could potentially submit extra form fields and overwrite private data. In fact, if we pass the unfiltered &lt;code&gt;params[:article]&lt;/code&gt; Hash directly to &lt;code&gt;Article.new&lt;/code&gt;, Rails will raise a &lt;code&gt;ForbiddenAttributesError&lt;/code&gt; to alert us about the problem. So we will use a feature of Rails called &lt;em&gt;Strong Parameters&lt;/em&gt; to filter &lt;code&gt;params&lt;/code&gt;. Think of it as &lt;a href=&quot;https://en.wikipedia.org/wiki/Strong_and_weak_typing&quot;&gt;strong typing&lt;/a&gt; for &lt;code&gt;params&lt;/code&gt;.</source>
          <target state="translated">相反，我们将传递一个包含值的哈希值。但是，我们仍然必须指定该哈希中允许使用的值。否则，恶意用户可能会提交额外的表单字段并覆盖私人数据。实际上，如果我们将未经过滤的 &lt;code&gt;params[:article]&lt;/code&gt; Hash直接传递给 &lt;code&gt;Article.new&lt;/code&gt; ，Rails将引发一个 &lt;code&gt;ForbiddenAttributesError&lt;/code&gt; 来提醒我们有关问题的信息。因此，我们将使用Rails的称为&lt;em&gt;Strong Parameters的功能&lt;/em&gt;来过滤 &lt;code&gt;params&lt;/code&gt; 。可以将其视为对 &lt;code&gt;params&lt;/code&gt; 的&lt;a href=&quot;https://en.wikipedia.org/wiki/Strong_and_weak_typing&quot;&gt;强类型输入&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="507770191eeb7ec98eb1ba54a5ba1a74a894e508" translate="yes" xml:space="preserve">
          <source>Instrumentation: Rails has an instrumentation API that triggers registered handlers for a variety of events, such as action processing, sending a file or data, redirection, and database queries. The payload of each event comes with relevant information (for the action processing event, the payload includes the controller, action, parameters, request format, request method, and the request's full path).</source>
          <target state="translated">工具化。Rails有一个工具化API,它可以触发各种事件的注册处理程序,如动作处理、发送文件或数据、重定向和数据库查询。每个事件的有效载荷都带有相关信息(对于动作处理事件,有效载荷包括控制器、动作、参数、请求格式、请求方法和请求的完整路径)。</target>
        </trans-unit>
        <trans-unit id="ce36819d4451c02e4b229841cfbf52796a818ec4" translate="yes" xml:space="preserve">
          <source>Instrumenters</source>
          <target state="translated">Instrumenters</target>
        </trans-unit>
        <trans-unit id="b300e5ce045a08b89313fafa5e73ed0492a458f3" translate="yes" xml:space="preserve">
          <source>Instrumenters are stored in a thread local.</source>
          <target state="translated">仪表器存储在线程本地。</target>
        </trans-unit>
        <trans-unit id="9edcffff4461c9083fbff857f8dcee0f0769cbd4" translate="yes" xml:space="preserve">
          <source>Integer</source>
          <target state="translated">Integer</target>
        </trans-unit>
        <trans-unit id="3caba6d00ba203d77ce889c6e7b15dc02732832e" translate="yes" xml:space="preserve">
          <source>Integer#year</source>
          <target state="translated">Integer#year</target>
        </trans-unit>
        <trans-unit id="6c44dbddc3fd22ad67d4d705b958417bd4bc9d93" translate="yes" xml:space="preserve">
          <source>Integers in the example above are supposed to come from the respective calls to &lt;code&gt;id&lt;/code&gt;.</source>
          <target state="translated">上面示例中的整数应该来自对 &lt;code&gt;id&lt;/code&gt; 的相应调用。</target>
        </trans-unit>
        <trans-unit id="c87f52def7d613c90253e811aa67f30c00e37459" translate="yes" xml:space="preserve">
          <source>Integrating with Libraries or Frameworks</source>
          <target state="translated">与库或框架集成</target>
        </trans-unit>
        <trans-unit id="899e5920ef1372292f1f4f69d3125e5a5f5a1dfb" translate="yes" xml:space="preserve">
          <source>Integration</source>
          <target state="translated">Integration</target>
        </trans-unit>
        <trans-unit id="ed8e7536d5000854a478dee90bcbee2c9954ce4e" translate="yes" xml:space="preserve">
          <source>Integration Testing</source>
          <target state="translated">集成测试</target>
        </trans-unit>
        <trans-unit id="67982c4f135ee413508775af875318e3445716ec" translate="yes" xml:space="preserve">
          <source>Integration test methods such as &lt;a href=&quot;integration/requesthelpers#method-i-get&quot;&gt;ActionDispatch::Integration::RequestHelpers#get&lt;/a&gt; and &lt;a href=&quot;integration/requesthelpers#method-i-post&quot;&gt;ActionDispatch::Integration::RequestHelpers#post&lt;/a&gt; return objects of class &lt;a href=&quot;testresponse&quot;&gt;TestResponse&lt;/a&gt;, which represent the HTTP response results of the requested controller actions.</source>
          <target state="translated">集成测试方法，例如&lt;a href=&quot;integration/requesthelpers#method-i-get&quot;&gt;ActionDispatch :: Integration :: RequestHelpers＃get&lt;/a&gt;和&lt;a href=&quot;integration/requesthelpers#method-i-post&quot;&gt;ActionDispatch :: Integration :: RequestHelpers＃post&lt;/a&gt;返回类&lt;a href=&quot;testresponse&quot;&gt;TestResponse的&lt;/a&gt;对象，这些对象代表所请求的控制器操作的HTTP响应结果。</target>
        </trans-unit>
        <trans-unit id="a0463d29899b2730367d1e976545807c7a0e21c9" translate="yes" xml:space="preserve">
          <source>Integration tests are used to test how various parts of our application interact. They are generally used to test important workflows within our application.</source>
          <target state="translated">集成测试用于测试我们的应用程序的各个部分如何交互。它们通常用于测试我们应用程序中的重要工作流程。</target>
        </trans-unit>
        <trans-unit id="2e1cd626fe8c4b66dfdf6e0d004c6db44ed7558b" translate="yes" xml:space="preserve">
          <source>Integration tests are used to test how various parts of your application interact. They are generally used to test important workflows within our application.</source>
          <target state="translated">集成测试用于测试应用程序的各个部分如何交互。它们通常用于测试我们应用程序中的重要工作流程。</target>
        </trans-unit>
        <trans-unit id="b2819304f744a3d244c44613d57e819fac608045" translate="yes" xml:space="preserve">
          <source>Integration#cache_key</source>
          <target state="translated">Integration#cache_key</target>
        </trans-unit>
        <trans-unit id="6c53dea3f7d20bb55236f30495fad68cb70689bb" translate="yes" xml:space="preserve">
          <source>Integration#cache_key_with_version</source>
          <target state="translated">Integration#cache_key_with_version</target>
        </trans-unit>
        <trans-unit id="f02c91c56da5fefe68235806aa6ec3d1994ea656" translate="yes" xml:space="preserve">
          <source>Integration#cache_version</source>
          <target state="translated">Integration#cache_version</target>
        </trans-unit>
        <trans-unit id="21095e92f582034508d7653b41289d55753aeab1" translate="yes" xml:space="preserve">
          <source>Integration#to_param</source>
          <target state="translated">Integration#to_param</target>
        </trans-unit>
        <trans-unit id="ce1fd21e1204581f63416449f6c7edfb967c6d78" translate="yes" xml:space="preserve">
          <source>Integration::ClassMethods</source>
          <target state="translated">Integration::ClassMethods</target>
        </trans-unit>
        <trans-unit id="139e252d29f786121f30f0460e336269c02a8bac" translate="yes" xml:space="preserve">
          <source>Integration::ClassMethods#to_param</source>
          <target state="translated">Integration::ClassMethods#to_param</target>
        </trans-unit>
        <trans-unit id="98b57e9fddf70f7d3e9da54385232a98cebca479" translate="yes" xml:space="preserve">
          <source>IntegrationTest</source>
          <target state="translated">IntegrationTest</target>
        </trans-unit>
        <trans-unit id="ab94e6a337bd2b08d6d1d29161b02030b26df85e" translate="yes" xml:space="preserve">
          <source>Intercepting Emails</source>
          <target state="translated">拦截电子邮件</target>
        </trans-unit>
        <trans-unit id="173c52fe8d7e7d33649dde7c6d75cc38405db524" translate="yes" xml:space="preserve">
          <source>Intercepting and Observing Emails</source>
          <target state="translated">截取和观察电子邮件</target>
        </trans-unit>
        <trans-unit id="ae9bbcda879bd31a484a0af47874a6bab22e1ed5" translate="yes" xml:space="preserve">
          <source>Interceptors allow you to make modifications to emails before they are handed off to the delivery agents. An interceptor class must implement the &lt;code&gt;::delivering_email(message)&lt;/code&gt; method which will be called before the email is sent.</source>
          <target state="translated">拦截器使您可以对电子邮件进行修改，然后再将其交给传递代理。拦截器类必须实现 &lt;code&gt;::delivering_email(message)&lt;/code&gt; 方法，该方法将在发送电子邮件之前被调用。</target>
        </trans-unit>
        <trans-unit id="342e3231db1c88366814ccab28f7d0434684057a" translate="yes" xml:space="preserve">
          <source>Interceptors allow you to make modifications to emails before they are handed off to the delivery agents. An interceptor class must implement the &lt;code&gt;:delivering_email(message)&lt;/code&gt; method which will be called before the email is sent.</source>
          <target state="translated">拦截器使您可以对电子邮件进行修改，然后再将其交给传递代理。拦截器类必须实现 &lt;code&gt;:delivering_email(message)&lt;/code&gt; 方法，该方法将在发送电子邮件之前被调用。</target>
        </trans-unit>
        <trans-unit id="2dfcc4c89dfb267aa18e62e74d6d54f6561f0fc2" translate="yes" xml:space="preserve">
          <source>Interestingly, the exact same view code in the previous example can be used to edit a person. If &lt;code&gt;@person&lt;/code&gt; is an existing record with name &amp;ldquo;John Smith&amp;rdquo; and ID 256, the code above as is would yield instead:</source>
          <target state="translated">有趣的是，上一个示例中完全相同的视图代码可用于编辑人物。如果 &lt;code&gt;@person&lt;/code&gt; 是名称为&amp;ldquo; John Smith&amp;rdquo;和ID 256的现有记录，则上面的代码将改为：</target>
        </trans-unit>
        <trans-unit id="dcc5733b7561d603a93c21562214e0c1d33fb1c8" translate="yes" xml:space="preserve">
          <source>Internal Middleware Stack</source>
          <target state="translated">内部中间件栈</target>
        </trans-unit>
        <trans-unit id="505d9d0c421453bd1f4ff40309dee285d37725cf" translate="yes" xml:space="preserve">
          <source>Internally symbols are mapped to strings when used as keys in the entire writing interface (calling &lt;code&gt;[]=&lt;/code&gt;, &lt;code&gt;merge&lt;/code&gt;, etc). This mapping belongs to the public interface. For example, given:</source>
          <target state="translated">当在整个书写界面中用作符号（调用 &lt;code&gt;[]=&lt;/code&gt; ， &lt;code&gt;merge&lt;/code&gt; 等）时，内部符号会映射到字符串。该映射属于公共接口。例如，给定：</target>
        </trans-unit>
        <trans-unit id="3b755f7b857b999860755840e5f0964f6b120c4d" translate="yes" xml:space="preserve">
          <source>Internationalization</source>
          <target state="translated">Internationalization</target>
        </trans-unit>
        <trans-unit id="ec41529ec988c31d48e2791253f7675f0f07663a" translate="yes" xml:space="preserve">
          <source>Internationalization and Localization</source>
          <target state="translated">国际化和本土化</target>
        </trans-unit>
        <trans-unit id="c09a9a12334a713ae333766d80dbc7726ba5ddbd" translate="yes" xml:space="preserve">
          <source>Internationalization is a complex problem. Natural languages differ in so many ways (e.g. in pluralization rules) that it is hard to provide tools for solving all problems at once. For that reason the Rails I18n API focuses on:</source>
          <target state="translated">国际化是一个复杂的问题。自然语言在很多方面都存在差异(例如复数规则),因此很难同时提供解决所有问题的工具。出于这个原因,Rails I18n API的重点是:</target>
        </trans-unit>
        <trans-unit id="5ec77c95171316f9af44f1afebf62f3ac2ca5ee5" translate="yes" xml:space="preserve">
          <source>Interoperability and configuration</source>
          <target state="translated">互操作性和配置</target>
        </trans-unit>
        <trans-unit id="80feef0d1957adca54e3f9d24dc512572009e68c" translate="yes" xml:space="preserve">
          <source>Interpolation escapes as needed though. For example, given:</source>
          <target state="translated">不过根据需要进行插值逃逸。例如,鉴于。</target>
        </trans-unit>
        <trans-unit id="b70d894eda2fa1027b4f2cc23a1615a878a3cb5f" translate="yes" xml:space="preserve">
          <source>Interpretation of the output of EXPLAIN is beyond the scope of this guide. The following pointers may be helpful:</source>
          <target state="translated">解释EXPLAIN的输出超出了本指南的范围。下面的说明可能会有帮助。</target>
        </trans-unit>
        <trans-unit id="1331fd357cb4c48e65a61cb90dbec7b0da4d430b" translate="yes" xml:space="preserve">
          <source>Interpreting EXPLAIN</source>
          <target state="translated">解释EXPLAIN</target>
        </trans-unit>
        <trans-unit id="438faf6320554999d6e3436c3267791fd96090b3" translate="yes" xml:space="preserve">
          <source>Interprets a file using &lt;code&gt;mechanism&lt;/code&gt; and marks its defined constants as autoloaded. &lt;code&gt;file_name&lt;/code&gt; can be either a string or respond to &lt;code&gt;to_path&lt;/code&gt;.</source>
          <target state="translated">使用 &lt;code&gt;mechanism&lt;/code&gt; 解释文件，并将其定义的常量标记为自动加载。 &lt;code&gt;file_name&lt;/code&gt; 可以是字符串，也可以响应 &lt;code&gt;to_path&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="011efcd591019b5969a332a24dff728a8107dbe2" translate="yes" xml:space="preserve">
          <source>Interval</source>
          <target state="translated">Interval</target>
        </trans-unit>
        <trans-unit id="bab1ab6e63418fb60a28315088fc32113592c35b" translate="yes" xml:space="preserve">
          <source>Intranet and Admin Security</source>
          <target state="translated">内联网和管理安全</target>
        </trans-unit>
        <trans-unit id="0a6767b03885ddc439ef17983c2f692c5a07e41e" translate="yes" xml:space="preserve">
          <source>Intranet and administration interfaces are popular attack targets, because they allow privileged access. Although this would require several extra-security measures, the opposite is the case in the real world.</source>
          <target state="translated">内网和管理界面是流行的攻击目标,因为它们允许特权访问。虽然这需要采取一些额外的安全措施,但现实世界中的情况恰恰相反。</target>
        </trans-unit>
        <trans-unit id="1e02c113caf7083037190e94f7f4d29321ba00e9" translate="yes" xml:space="preserve">
          <source>Introducing &lt;a href=&quot;concerning#method-i-concerning&quot;&gt;#concerning&lt;/a&gt;</source>
          <target state="translated">介绍&lt;a href=&quot;concerning#method-i-concerning&quot;&gt;#concerning&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c7d192b525b28dbf34bd94bcd875ed9cc28c7054" translate="yes" xml:space="preserve">
          <source>Introducing &lt;a href=&quot;concerning#method-i-concerning&quot;&gt;&lt;code&gt;Module#concerning&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">介绍&lt;a href=&quot;concerning#method-i-concerning&quot;&gt; &lt;code&gt;Module#concerning&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f8ab457bd47803331ebc080bd833f3ee0b9e2d8f" translate="yes" xml:space="preserve">
          <source>Introducing Rack</source>
          <target state="translated">Rack介绍</target>
        </trans-unit>
        <trans-unit id="2473e96bc614a911821242119918a241a41836d6" translate="yes" xml:space="preserve">
          <source>Introduction</source>
          <target state="translated">Introduction</target>
        </trans-unit>
        <trans-unit id="b10b45ec08f0b166df0731e9de830720dfa05269" translate="yes" xml:space="preserve">
          <source>Introduction to Rack</source>
          <target state="translated">机架介绍</target>
        </trans-unit>
        <trans-unit id="2dc38a9b87ba3ab2b84c75bf7b0f1b314cde1a6d" translate="yes" xml:space="preserve">
          <source>Introduction to Testing</source>
          <target state="translated">测试简介</target>
        </trans-unit>
        <trans-unit id="87d217e986a7a6fcb0d9d6294bb7ea099ed34b8e" translate="yes" xml:space="preserve">
          <source>Introduction to instrumentation</source>
          <target state="translated">仪器仪表介绍</target>
        </trans-unit>
        <trans-unit id="cd56babc4fde7c7f6acd80a958c42b65e7e5679b" translate="yes" xml:space="preserve">
          <source>InvalidMatch</source>
          <target state="translated">InvalidMatch</target>
        </trans-unit>
        <trans-unit id="f6d7303488dffe7e3ac8ead1d3fcbd32a701138b" translate="yes" xml:space="preserve">
          <source>Invocation of the tasks will look like:</source>
          <target state="translated">任务的调用将是这样的。</target>
        </trans-unit>
        <trans-unit id="58dd409d6a03b715d8a4a7142eeb16c3ce59eda9" translate="yes" xml:space="preserve">
          <source>Invoke a generator based on the value supplied by the user to the given option named &amp;ldquo;name&amp;rdquo;. A class option is created when this method is invoked and you can set a hash to customize it.</source>
          <target state="translated">根据用户提供给名为&amp;ldquo; name&amp;rdquo;的给定选项的值来调用生成器。调用此方法时，将创建一个类选项，您可以设置哈希值对其进行自定义。</target>
        </trans-unit>
        <trans-unit id="5b3a05f5c432f715f0fac2ee75b57be97620fa7a" translate="yes" xml:space="preserve">
          <source>Invoke a method on the connection asynchronously through the pool of thread workers.</source>
          <target state="translated">通过线程工作者池异步调用连接上的方法。</target>
        </trans-unit>
        <trans-unit id="3ad5366ba531078ac6d163ac3c753ee1d3907e95" translate="yes" xml:space="preserve">
          <source>Invoke the server registered hooks. Check &lt;code&gt;Rails::Railtie.server&lt;/code&gt; for more info.</source>
          <target state="translated">调用服务器注册的挂钩。检查 &lt;code&gt;Rails::Railtie.server&lt;/code&gt; 以获得更多信息。</target>
        </trans-unit>
        <trans-unit id="0256c5a56ef3a0bc7ccc3f9ed6d01aea84ad06a9" translate="yes" xml:space="preserve">
          <source>Invokes Journey::Router::Utils.normalize_path and ensure that (:locale) becomes (/:locale) instead of /(:locale). Except for root cases, where the latter is the correct one.</source>
          <target state="translated">调用 Journey::Router::Utils.normalize_path 并确保 (:locale)变成 (/:locale)而不是 /(:locale)。除了根的情况,后者才是正确的。</target>
        </trans-unit>
        <trans-unit id="dd0dd55a6d95ecc47868b96b36290bdfad0559b1" translate="yes" xml:space="preserve">
          <source>Invokes Journey::Router::Utils.normalize_path, then ensures that /(:locale) becomes (/:locale). Except for root cases, where the former is the correct one.</source>
          <target state="translated">调用Journey::Router::Utils.normalize_path,然后确保/(:locale)变成(/:locale)。除了根的情况,前者是正确的。</target>
        </trans-unit>
        <trans-unit id="385202a85d41f1ba93fb6a0880e136ee611817eb" translate="yes" xml:space="preserve">
          <source>Invokes the public method whose name goes as first argument just like &lt;code&gt;public_send&lt;/code&gt; does, except that if the receiver does not respond to it the call returns &lt;code&gt;nil&lt;/code&gt; rather than raising an exception.</source>
          <target state="translated">与 &lt;code&gt;public_send&lt;/code&gt; 一样，调用其名称作为第一个参数的public方法，不同之处在于，如果接收方不响应，则调用返回 &lt;code&gt;nil&lt;/code&gt; 而不引发异常。</target>
        </trans-unit>
        <trans-unit id="59e5020714711541b39a9551f5b84853e831134e" translate="yes" xml:space="preserve">
          <source>Irreversible transformations</source>
          <target state="translated">不可逆的转变</target>
        </trans-unit>
        <trans-unit id="2f766b312d7e667b7f0d8b9c17bb303b08b1acae" translate="yes" xml:space="preserve">
          <source>Is &lt;code&gt;new_name&lt;/code&gt; an alias?</source>
          <target state="translated">是 &lt;code&gt;new_name&lt;/code&gt; 别名？</target>
        </trans-unit>
        <trans-unit id="b0eda3fd7457c0fb4308b75d0bf6df3d4719aced" translate="yes" xml:space="preserve">
          <source>Is equivalent to:</source>
          <target state="translated">相当于:</target>
        </trans-unit>
        <trans-unit id="4bccdd2795f3378d91b39fbc9d59c69a50b7194f" translate="yes" xml:space="preserve">
          <source>Is it a &lt;a href=&quot;classmethods#method-i-belongs_to&quot;&gt;&lt;code&gt;belongs_to&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;classmethods#method-i-has_one&quot;&gt;&lt;code&gt;has_one&lt;/code&gt;&lt;/a&gt; association?</source>
          <target state="translated">它是一个&lt;a href=&quot;classmethods#method-i-belongs_to&quot;&gt; &lt;code&gt;belongs_to&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;classmethods#method-i-has_one&quot;&gt; &lt;code&gt;has_one&lt;/code&gt; &lt;/a&gt;关联吗？</target>
        </trans-unit>
        <trans-unit id="46fb94424bf8f10921609b59625d794e12d26b07" translate="yes" xml:space="preserve">
          <source>Is it a &lt;a href=&quot;classmethods#method-i-belongs_to&quot;&gt;belongs_to&lt;/a&gt; or &lt;a href=&quot;classmethods#method-i-has_one&quot;&gt;has_one&lt;/a&gt; association?</source>
          <target state="translated">它是一个&lt;a href=&quot;classmethods#method-i-belongs_to&quot;&gt;Emirates_to&lt;/a&gt;或&lt;a href=&quot;classmethods#method-i-has_one&quot;&gt;has_one&lt;/a&gt;关联？</target>
        </trans-unit>
        <trans-unit id="7aee814e5e7b7c81d49f7ba52ab62790c23d34e6" translate="yes" xml:space="preserve">
          <source>Is it a GET or HEAD request? GETs should be safe and idempotent</source>
          <target state="translated">是GET还是HEAD请求?GETs应该是安全的和幂等的。</target>
        </trans-unit>
        <trans-unit id="a559a239bb82de0629bcb6a428aeb5fd89db0826" translate="yes" xml:space="preserve">
          <source>Is the same as:</source>
          <target state="translated">是与。</target>
        </trans-unit>
        <trans-unit id="0e468c5ec10bbeae8ac268222bf3b1cefef440a5" translate="yes" xml:space="preserve">
          <source>Is this connection alive and ready for queries?</source>
          <target state="translated">这个连接是否还活着,是否可以查询?</target>
        </trans-unit>
        <trans-unit id="eac6c893607e2948d6e48939779ac243770bf603" translate="yes" xml:space="preserve">
          <source>Isolated &lt;a href=&quot;engine&quot;&gt;&lt;code&gt;Engine&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">隔离&lt;a href=&quot;engine&quot;&gt; &lt;code&gt;Engine&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="76655109a5cf36c486e596d85b9959d33081cbb3" translate="yes" xml:space="preserve">
          <source>Isolated &lt;a href=&quot;engine&quot;&gt;Engine&lt;/a&gt;</source>
          <target state="translated">隔离&lt;a href=&quot;engine&quot;&gt;引擎&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2f451fdf2858ac5e97eb02d93dd74df99d36099e" translate="yes" xml:space="preserve">
          <source>Isolated engine's helpers</source>
          <target state="translated">孤立的引擎助手</target>
        </trans-unit>
        <trans-unit id="7ac5f519b4cd0a9c673a2b984a399a3a92c58140" translate="yes" xml:space="preserve">
          <source>It accepts a hash where the key is the symbol of the MIME type and the value is a proc.</source>
          <target state="translated">它接受一个哈希,其中键是MIME类型的符号,值是一个proc。</target>
        </trans-unit>
        <trans-unit id="4a6fae6667f1ec35b8e1214e1089d2257fc09809" translate="yes" xml:space="preserve">
          <source>It accepts a headers hash. This hash allows you to specify the most used headers in an email message, these are:</source>
          <target state="translated">它接受一个标题哈希值,这个哈希值允许你指定邮件中最常用的标题,这些标题是:这个哈希值允许你指定电子邮件中最常用的头信息,这些信息是。</target>
        </trans-unit>
        <trans-unit id="d5f0f4cf85fc4819613826afbcfe7f04f25a0738" translate="yes" xml:space="preserve">
          <source>It accepts two parameters on initialization. The first is a version of library and the second is a library name.</source>
          <target state="translated">它在初始化时接受两个参数。第一个是库的版本,第二个是库名。</target>
        </trans-unit>
        <trans-unit id="9435a5a3fea1387cba916e7fc9c284d2e6dfd894" translate="yes" xml:space="preserve">
          <source>It accepts two parameters on initialization. The first is an array of files and the second is an optional hash of directories. The hash must have directories as keys and the value is an array of extensions to be watched under that directory.</source>
          <target state="translated">它在初始化时接受两个参数。第一个是一个文件数组,第二个是一个可选的目录哈希。哈希必须以目录为键,值是该目录下要监视的扩展数组。</target>
        </trans-unit>
        <trans-unit id="45d44b1df6715c7a7af6333949ec087808a70c28" translate="yes" xml:space="preserve">
          <source>It allows you to call method &lt;a href=&quot;renderer#method-i-render&quot;&gt;&lt;code&gt;render&lt;/code&gt;&lt;/a&gt; directly.</source>
          <target state="translated">它允许您直接调用方法&lt;a href=&quot;renderer#method-i-render&quot;&gt; &lt;code&gt;render&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="38ca25bcf2c0905e02178cd352066c0836a6a9a0" translate="yes" xml:space="preserve">
          <source>It allows you to call method &lt;a href=&quot;renderer#method-i-render&quot;&gt;render&lt;/a&gt; directly.</source>
          <target state="translated">它允许您直接调用方法&lt;a href=&quot;renderer#method-i-render&quot;&gt;渲染&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d49d2a57a5a1ca8b7ea86511d458060ee225f77d" translate="yes" xml:space="preserve">
          <source>It also allows you to update the avatar through the member:</source>
          <target state="translated">也可以通过会员来更新头像。</target>
        </trans-unit>
        <trans-unit id="ebc0f9ba57056697e4de8afcfef4be20a0ad3303" translate="yes" xml:space="preserve">
          <source>It also generated some lines in our &lt;code&gt;database.yml&lt;/code&gt; configuration corresponding to our choice of PostgreSQL for database.</source>
          <target state="translated">它还在 &lt;code&gt;database.yml&lt;/code&gt; 配置中生成了一些与我们为数据库选择的PostgreSQL相对应的行。</target>
        </trans-unit>
        <trans-unit id="39146458b45b3abeec98952f595c4cf5f503332e" translate="yes" xml:space="preserve">
          <source>It also gives you the ability to initialize an object with a hash of attributes, much like any Active Record object.</source>
          <target state="translated">它还能让你用属性哈希初始化一个对象,就像任何Active Record对象一样。</target>
        </trans-unit>
        <trans-unit id="bd0ee1da8322e4399bcac48a328b9839193f1124" translate="yes" xml:space="preserve">
          <source>It also searches for a key specific to the given object:</source>
          <target state="translated">它还会搜索给定对象的特定键。</target>
        </trans-unit>
        <trans-unit id="cfedffa8e710bb3bffa6f731ec1bf9d845f19fbc" translate="yes" xml:space="preserve">
          <source>It also strips href/src attributes with unsafe protocols like &lt;code&gt;javascript:&lt;/code&gt;, while also protecting against attempts to use Unicode, ASCII, and hex character references to work around these protocol filters. All special characters will be escaped.</source>
          <target state="translated">它还使用不安全的协议（如 &lt;code&gt;javascript:&lt;/code&gt; )剥离href / src属性，同时还防止尝试使用Unicode，ASCII和十六进制字符引用来解决这些协议过滤器。所有特殊字符将被转义。</target>
        </trans-unit>
        <trans-unit id="426c108419ecab367f3cf08cecf90bf1479d10f5" translate="yes" xml:space="preserve">
          <source>It can also be used to return exceptional conditions:</source>
          <target state="translated">它也可以用来返回特殊条件。</target>
        </trans-unit>
        <trans-unit id="9316df6dbeb2297de41526f9b627ebdbe698b986" translate="yes" xml:space="preserve">
          <source>It can also be used with an explicit receiver:</source>
          <target state="translated">它也可以和一个明确的接收器一起使用。</target>
        </trans-unit>
        <trans-unit id="6dba1fa6506ff89cb1689631b83474c09424753e" translate="yes" xml:space="preserve">
          <source>It can also be useful to save information to log files at runtime. Rails maintains a separate log file for each runtime environment.</source>
          <target state="translated">在运行时将信息保存到日志文件中也很有用。Rails为每个运行时环境维护一个单独的日志文件。</target>
        </trans-unit>
        <trans-unit id="2831d4f1ce96a57796267468ca626023eda9252e" translate="yes" xml:space="preserve">
          <source>It can also calculate the sum without the use of a block.</source>
          <target state="translated">它还可以在不使用块的情况下计算总和。</target>
        </trans-unit>
        <trans-unit id="7687f2339942576b33eabc229b67923feb868d9f" translate="yes" xml:space="preserve">
          <source>It can also receive an &lt;code&gt;:accept&lt;/code&gt; option, which determines the allowed values that will be considered as accepted. It defaults to &lt;code&gt;['1', true]&lt;/code&gt; and can be easily changed.</source>
          <target state="translated">它还可以接收 &lt;code&gt;:accept&lt;/code&gt; 选项，该选项确定将被视为接受的允许值。它的默认值为 &lt;code&gt;['1', true]&lt;/code&gt; 并且可以轻松更改。</target>
        </trans-unit>
        <trans-unit id="a234c9c580ec73225fe07a2b2cb15c5278679324" translate="yes" xml:space="preserve">
          <source>It can also validate whether the value of the specified attributes are unique based on a &lt;code&gt;:scope&lt;/code&gt; parameter:</source>
          <target state="translated">它还可以根据 &lt;code&gt;:scope&lt;/code&gt; 参数来验证指定属性的值是否唯一：</target>
        </trans-unit>
        <trans-unit id="40a7b1d9d8a7cd76b12428401930bc5065694c8d" translate="yes" xml:space="preserve">
          <source>It can be used along with &lt;code&gt;belongs_to&lt;/code&gt;:</source>
          <target state="translated">它可以和 &lt;code&gt;belongs_to&lt;/code&gt; 一起使用：</target>
        </trans-unit>
        <trans-unit id="22e1c7f72b5a3c73c0cb68a4bbb7d3c44ef4b893" translate="yes" xml:space="preserve">
          <source>It can be used as follow:</source>
          <target state="translated">它的使用方法如下:</target>
        </trans-unit>
        <trans-unit id="bd8e399f3585248f5db85e7a07a982ef55fb80c9" translate="yes" xml:space="preserve">
          <source>It can be useful to access the class that is using that validator when there are prerequisites such as an &lt;code&gt;attr_accessor&lt;/code&gt; being present. This class is accessible via &lt;code&gt;options[:class]&lt;/code&gt; in the constructor. To set up your validator override the constructor.</source>
          <target state="translated">当存在诸如 &lt;code&gt;attr_accessor&lt;/code&gt; 之类的先决条件时，访问使用该验证程序的类可能会很有用。此类可通过构造函数中的 &lt;code&gt;options[:class]&lt;/code&gt; 访问。要设置验证器，请重写构造函数。</target>
        </trans-unit>
        <trans-unit id="1ac0a20ef283df4adc7e264352fcf154710271f2" translate="yes" xml:space="preserve">
          <source>It can be useful to access the class that is using that validator when there are prerequisites such as an &lt;code&gt;attr_accessor&lt;/code&gt; being present. This class is accessible via &lt;code&gt;options[:class]&lt;/code&gt; in the constructor. To setup your validator override the constructor.</source>
          <target state="translated">在存在诸如 &lt;code&gt;attr_accessor&lt;/code&gt; 之类的先决条件时，访问使用该验证程序的类可能会很有用。可通过构造函数中的 &lt;code&gt;options[:class]&lt;/code&gt; 访问此类。要设置验证器，请重写构造函数。</target>
        </trans-unit>
        <trans-unit id="96a8cf569167573398933897b23ace80840cc711" translate="yes" xml:space="preserve">
          <source>It could be the case that some particular file or directory name does not get inflected as you want. For instance, &lt;code&gt;html_parser.rb&lt;/code&gt; is expected to define &lt;code&gt;HtmlParser&lt;/code&gt; by default. What if you prefer the class to be &lt;code&gt;HTMLParser&lt;/code&gt;? There are a few ways to customize this.</source>
          <target state="translated">某些情况下，某些特定的文件或目录名称可能不会按照您的要求进行变形。例如，默认情况下 &lt;code&gt;html_parser.rb&lt;/code&gt; 应该定义 &lt;code&gt;HtmlParser&lt;/code&gt; 。如果您更喜欢该类为 &lt;code&gt;HTMLParser&lt;/code&gt; 怎么办？有几种方法可以对此进行自定义。</target>
        </trans-unit>
        <trans-unit id="71ab59b1e35929a8594e36b0ef1ec13b4b68d49a" translate="yes" xml:space="preserve">
          <source>It creates and returns an instance of the &lt;a href=&quot;activesupport/multibyte/chars&quot;&gt;&lt;code&gt;ActiveSupport::Multibyte::Chars&lt;/code&gt;&lt;/a&gt; class which encapsulates the original string. A Unicode safe version of all the &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; methods are defined on this proxy class. If the proxy class doesn't respond to a certain method, it's forwarded to the encapsulated string.</source>
          <target state="translated">它创建并返回一个&lt;a href=&quot;activesupport/multibyte/chars&quot;&gt; &lt;code&gt;ActiveSupport::Multibyte::Chars&lt;/code&gt; &lt;/a&gt;类的实例，该实例封装了原始字符串。在此代理类上定义了所有&lt;a href=&quot;string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;方法的Unicode安全版本。如果代理类不响应某个方法，则将其转发到封装的字符串。</target>
        </trans-unit>
        <trans-unit id="49b4aa175d14125482748aa613908101aa82e8b5" translate="yes" xml:space="preserve">
          <source>It creates and returns an instance of the &lt;a href=&quot;activesupport/multibyte/chars&quot;&gt;ActiveSupport::Multibyte::Chars&lt;/a&gt; class which encapsulates the original string. A Unicode safe version of all the &lt;a href=&quot;string&quot;&gt;String&lt;/a&gt; methods are defined on this proxy class. If the proxy class doesn't respond to a certain method, it's forwarded to the encapsulated string.</source>
          <target state="translated">它创建并返回一个&lt;a href=&quot;activesupport/multibyte/chars&quot;&gt;ActiveSupport :: Multibyte :: Chars&lt;/a&gt;类的实例，该实例封装了原始字符串。在此代理类上定义了所有&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;方法的Unicode安全版本。如果代理类不响应某个方法，则将其转发到封装的字符串。</target>
        </trans-unit>
        <trans-unit id="499cc07feea969499a3dc48ed2492713c8c86211" translate="yes" xml:space="preserve">
          <source>It does not call &lt;code&gt;to_a&lt;/code&gt; on the argument, if the argument does not respond to &lt;code&gt;to_ary&lt;/code&gt; it returns an array with the argument as its single element.</source>
          <target state="translated">它不会在参数上调用 &lt;code&gt;to_a&lt;/code&gt; ，如果参数不响应 &lt;code&gt;to_ary&lt;/code&gt; ,它将返回一个以参数作为其单个元素的数组。</target>
        </trans-unit>
        <trans-unit id="56b4d8dc1bf62dfda767cc7b994335d9456a43bf" translate="yes" xml:space="preserve">
          <source>It intends to prevent odd bugs and confusion in code that call mutator methods directly on the &lt;code&gt;Relation&lt;/code&gt;.</source>
          <target state="translated">它旨在防止直接在 &lt;code&gt;Relation&lt;/code&gt; 上调用mutator方法的代码中的奇怪错误和混乱。</target>
        </trans-unit>
        <trans-unit id="5d5c5b84f1606def2d58f9fb00f6b5f36fadaeab" translate="yes" xml:space="preserve">
          <source>It is &lt;strong&gt;highly&lt;/strong&gt; recommended that the &lt;code&gt;isolate_namespace&lt;/code&gt; line be left within the &lt;code&gt;Engine&lt;/code&gt; class definition. Without it, classes generated in an engine &lt;strong&gt;may&lt;/strong&gt; conflict with an application.</source>
          <target state="translated">这是&lt;strong&gt;强烈&lt;/strong&gt;建议 &lt;code&gt;isolate_namespace&lt;/code&gt; 线的中左 &lt;code&gt;Engine&lt;/code&gt; 类的定义。没有它，引擎中生成的类&lt;strong&gt;可能&lt;/strong&gt;与应用程序冲突。</target>
        </trans-unit>
        <trans-unit id="10cfb379bf3244a1c48de6cb1cda23ec4480ebb5" translate="yes" xml:space="preserve">
          <source>It is accessed in much the same way as the session, as a hash (it's a &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionDispatch/Flash/FlashHash.html&quot;&gt;FlashHash&lt;/a&gt; instance).</source>
          <target state="translated">它以与会话几乎相同的方式作为哈希（它是&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionDispatch/Flash/FlashHash.html&quot;&gt;FlashHash&lt;/a&gt;实例）进行访问。</target>
        </trans-unit>
        <trans-unit id="83efac2576f2e3cca18100e7aee4b5a47479b098" translate="yes" xml:space="preserve">
          <source>It is also important to use different salt values for encrypted and signed cookies. Using the same value for different salt configuration values may lead to the same derived key being used for different security features which in turn may weaken the strength of the key.</source>
          <target state="translated">对加密和签名的Cookies使用不同的盐值也很重要。对不同的盐配置值使用相同的值可能会导致相同的衍生密钥被用于不同的安全功能,这反过来又会削弱密钥的强度。</target>
        </trans-unit>
        <trans-unit id="fd5336404614ecb4acce82c4ff85169b0e93d510" translate="yes" xml:space="preserve">
          <source>It is also possible to assign a flash message as part of the redirection. There are two special accessors for the commonly used flash names &lt;code&gt;alert&lt;/code&gt; and &lt;code&gt;notice&lt;/code&gt; as well as a general purpose &lt;code&gt;flash&lt;/code&gt; bucket.</source>
          <target state="translated">也可以分配Flash消息作为重定向的一部分。常用的闪存名称 &lt;code&gt;alert&lt;/code&gt; 和 &lt;code&gt;notice&lt;/code&gt; 有两个特殊的访问器，以及通用 &lt;code&gt;flash&lt;/code&gt; 存储桶。</target>
        </trans-unit>
        <trans-unit id="179fe87c22bf5b6c89ee355df0482f9dc84a0da7" translate="yes" xml:space="preserve">
          <source>It is also possible to automatically disable an input while the form is submitting by using the &lt;code&gt;data-disable-with&lt;/code&gt; attribute. This is to prevent accidental double-clicks from the user, which could result in duplicate HTTP requests that the backend may not detect as such. The value of the attribute is the text that will become the new value of the button in its disabled state.</source>
          <target state="translated">还可以使用 &lt;code&gt;data-disable-with&lt;/code&gt; 属性在提交表单时自动禁用输入。这是为了防止用户意外双击，这可能导致重复的HTTP请求，而后端可能无法检测到。属性的值是在禁用状态下将成为按钮的新值的文本。</target>
        </trans-unit>
        <trans-unit id="348a45df3c04b6d5fe9c86d061104b62e5b62d75" translate="yes" xml:space="preserve">
          <source>It is also possible to customize the way the elements will be shown by giving a block to the method:</source>
          <target state="translated">也可以通过给该方法赋予一个块来自定义元素的显示方式。</target>
        </trans-unit>
        <trans-unit id="5e55d2ed2495603dfd9e5fa2fc9d52ef7987d08b" translate="yes" xml:space="preserve">
          <source>It is also possible to define the Ajax &lt;code&gt;dataType&lt;/code&gt; explicitly while performing requests for &lt;code&gt;data-remote&lt;/code&gt; elements, by way of the &lt;code&gt;data-type&lt;/code&gt; attribute.</source>
          <target state="translated">还可以通过 &lt;code&gt;data-type&lt;/code&gt; 属性，在执行对 &lt;code&gt;data-remote&lt;/code&gt; 元素的请求时显式定义Ajax &lt;code&gt;dataType&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="819fc44ec9ef18718e13d598795b20fdc7e69280" translate="yes" xml:space="preserve">
          <source>It is also possible to limit the uniqueness constraint to a set of records matching certain conditions. In this example archived articles are not being taken into consideration when validating uniqueness of the title attribute:</source>
          <target state="translated">也可以将唯一性约束限制在一组符合某些条件的记录上。在这个例子中,在验证标题属性的唯一性时,不考虑已存档的文章。</target>
        </trans-unit>
        <trans-unit id="a985124ab3a30ac2f740ba2e729b65433dd15f7c" translate="yes" xml:space="preserve">
          <source>It is also possible to pass a custom serializer that responds to &lt;code&gt;load&lt;/code&gt; and &lt;code&gt;dump&lt;/code&gt;:</source>
          <target state="translated">也可以传递一个响应 &lt;code&gt;load&lt;/code&gt; 和 &lt;code&gt;dump&lt;/code&gt; 的自定义序列化程序：</target>
        </trans-unit>
        <trans-unit id="d7a775c2c33dca7d2800bfafa6f196f92f27191d" translate="yes" xml:space="preserve">
          <source>It is also possible to pass an object which responds to &lt;code&gt;call&lt;/code&gt; method as the second parameter to the &lt;code&gt;subscribe&lt;/code&gt; method instead of a block:</source>
          <target state="translated">也可以将响应 &lt;code&gt;call&lt;/code&gt; 方法的对象作为第二个参数传递给 &lt;code&gt;subscribe&lt;/code&gt; 方法，而不是传递给块：</target>
        </trans-unit>
        <trans-unit id="18abb3beeb3bf6cdf55d0d1bc4bfefab51a336a9" translate="yes" xml:space="preserve">
          <source>It is also possible to set a default host that will be used in all mailers by setting the &lt;code&gt;:host&lt;/code&gt; option as a configuration option in &lt;code&gt;config/application.rb&lt;/code&gt;:</source>
          <target state="translated">通过将 &lt;code&gt;:host&lt;/code&gt; 选项设置为 &lt;code&gt;config/application.rb&lt;/code&gt; 中的配置选项，还可以设置将在所有邮件程序中使用的默认主机：</target>
        </trans-unit>
        <trans-unit id="ab7cb2d57cb049b703f4721d525abf15854caa6a" translate="yes" xml:space="preserve">
          <source>It is also possible to set these default options that will be used in all mailers through the &lt;code&gt;default_options=&lt;/code&gt; configuration in &lt;code&gt;config/application.rb&lt;/code&gt;:</source>
          <target state="translated">也可以通过 &lt;code&gt;config/application.rb&lt;/code&gt; 中的 &lt;code&gt;default_options=&lt;/code&gt; 配置设置将在所有邮件中使用的这些默认选项：</target>
        </trans-unit>
        <trans-unit id="7b781e4a3aafdb190e8c24f4f3c6f103c1f5c3b3" translate="yes" xml:space="preserve">
          <source>It is also possible to supply a custom prefix.</source>
          <target state="translated">也可以提供一个自定义的前缀。</target>
        </trans-unit>
        <trans-unit id="217db1c91aa9f1200c2f9bc48daada017d477db5" translate="yes" xml:space="preserve">
          <source>It is beyond the scope of this guide to document Ruby constants, but we are nevertheless going to highlight a few key topics. Truly grasping the following sections is instrumental to understanding constant autoloading and reloading.</source>
          <target state="translated">这超出了本指南的范围,但我们还是要强调几个关键主题。真正掌握以下几个部分对于理解常量的自动加载和重装是非常重要的。</target>
        </trans-unit>
        <trans-unit id="3258883b4eb20fb13831be19bf566b5526debab3" translate="yes" xml:space="preserve">
          <source>It is beyond the scope of this guide to inform you on how to secure your application code and environments. However, please secure your database configuration, e.g. &lt;code&gt;config/database.yml&lt;/code&gt;, master key for &lt;code&gt;credentials.yml&lt;/code&gt;, and other unencrypted secrets. You may want to further restrict access, using environment-specific versions of these files and any others that may contain sensitive information.</source>
          <target state="translated">关于如何保护应用程序代码和环境的信息超出了本指南的范围。但是，请保护数据库配置的安全，例如 &lt;code&gt;config/database.yml&lt;/code&gt; ， &lt;code&gt;credentials.yml&lt;/code&gt; 主密钥和其他未加密的机密。您可能希望使用这些文件的特定于环境的版本以及可能包含敏感信息的其他任何文件来进一步限制访问。</target>
        </trans-unit>
        <trans-unit id="6fe4130ab4ee095a6deeb9892cd4088476f03a76" translate="yes" xml:space="preserve">
          <source>It is common to use persistent cookies to store user information, with &lt;code&gt;cookies.permanent&lt;/code&gt; for example. In this case, the cookies will not be cleared and the out of the box CSRF protection will not be effective. If you are using a different cookie store than the session for this information, you must handle what to do with it yourself:</source>
          <target state="translated">通常使用持久性cookie来存储用户信息，例如 &lt;code&gt;cookies.permanent&lt;/code&gt; 。在这种情况下，Cookie将不会被清除，开箱即用的CSRF保护将无效。如果您使用的会话存储区与会话存储区不同，则必须自己处理该存储区：</target>
        </trans-unit>
        <trans-unit id="f9341cff4e30114860c81d61ae45c3c73d6ae1c7" translate="yes" xml:space="preserve">
          <source>It is considered good practice to declare callback methods as private. If left public, they can be called from outside of the model and violate the principle of object encapsulation.</source>
          <target state="translated">将回调方法声明为私有的做法被认为是好的。如果不公开,则可以从模型外部调用这些方法,并且违反了对象封装的原则。</target>
        </trans-unit>
        <trans-unit id="43a011e67c6ead698c933aa355ff5673de5432b5" translate="yes" xml:space="preserve">
          <source>It is equivalent to writing:</source>
          <target state="translated">它相当于写作。</target>
        </trans-unit>
        <trans-unit id="01ba04d8b437042468e0c2c09742be51208f176a" translate="yes" xml:space="preserve">
          <source>It is generally safe to exclude XHR requests from CSRF protection (like the code snippet above does), because XHR requests can only be made from the same origin. Note however that any cross-origin third party domain allowed via &lt;a href=&quot;https://en.wikipedia.org/wiki/Cross-origin_resource_sharing&quot;&gt;CORS&lt;/a&gt; will also be able to create XHR requests. Be sure to check your CORS configuration before disabling forgery protection for XHR.</source>
          <target state="translated">通常，将XHR请求从CSRF保护中排除是安全的（就像上面的代码片段一样），因为XHR请求只能来自同一来源。但是请注意，通过&lt;a href=&quot;https://en.wikipedia.org/wiki/Cross-origin_resource_sharing&quot;&gt;CORS&lt;/a&gt;允许的任何跨域第三方域也将能够创建XHR请求。在禁用XHR的伪造保护之前，请务必检查您的CORS配置。</target>
        </trans-unit>
        <trans-unit id="a207a505579df11ef014f66a20f5d9cf4698ae30" translate="yes" xml:space="preserve">
          <source>It is important that this folder is shared between deployments so that remotely cached pages referencing the old compiled assets still work for the life of the cached page.</source>
          <target state="translated">重要的是,这个文件夹在部署之间共享,以便远程缓存的页面引用旧的编译资产在缓存页面的生命周期内仍然可以工作。</target>
        </trans-unit>
        <trans-unit id="dda9f7c4cb278191f2fd04c7db508eb24b9287cd" translate="yes" xml:space="preserve">
          <source>It is important to note that files you want to reference outside a manifest must be added to the precompile array or they will not be available in the production environment.</source>
          <target state="translated">需要注意的是,你想在清单之外引用的文件必须添加到预编译数组中,否则它们在生产环境中将不可用。</target>
        </trans-unit>
        <trans-unit id="525c4700d9b0c161a634194efc57c56e14f975ce" translate="yes" xml:space="preserve">
          <source>It is important to notice that the actual crafted image or link doesn't necessarily have to be situated in the web application's domain, it can be anywhere - in a forum, blog post, or email.</source>
          <target state="translated">需要注意的是,实际制作的图片或链接不一定要位于网络应用的域中,它可以在任何地方--论坛、博客文章或电子邮件中。</target>
        </trans-unit>
        <trans-unit id="a753c2dcf80c811ac30d16c0dda03089e7018f95" translate="yes" xml:space="preserve">
          <source>It is important to understand that &lt;code&gt;html_safe&lt;/code&gt; performs no escaping whatsoever, it is just an assertion:</source>
          <target state="translated">重要的是要了解 &lt;code&gt;html_safe&lt;/code&gt; 不会执行任何转义，它只是一个断言：</target>
        </trans-unit>
        <trans-unit id="d55e0a0d2aac8db229502f8ef70a2140d1f09635" translate="yes" xml:space="preserve">
          <source>It is important to understand that the nesting is composed of class and module &lt;em&gt;objects&lt;/em&gt;, it has nothing to do with the constants used to access them, and is also unrelated to their names.</source>
          <target state="translated">重要的是要了解嵌套是由类和模块&lt;em&gt;对象&lt;/em&gt;组成的，它与用于访问它们的常量无关，并且也与它们的名称无关。</target>
        </trans-unit>
        <trans-unit id="41efcacaf212ba9a4488f51d99b234f2f8337edd" translate="yes" xml:space="preserve">
          <source>It is interesting to observe that blocks do not modify the stack. In particular the blocks that may be passed to &lt;code&gt;Class.new&lt;/code&gt; and &lt;code&gt;Module.new&lt;/code&gt; do not get the class or module being defined pushed to their nesting. That's one of the differences between defining classes and modules in one way or another.</source>
          <target state="translated">有趣的是，块不会修改堆栈。特别是，可能传递给 &lt;code&gt;Class.new&lt;/code&gt; 和 &lt;code&gt;Module.new&lt;/code&gt; 的块不会将定义的类或模块推送到其嵌套中。这是用一种或另一种方式定义类和模块之间的区别之一。</target>
        </trans-unit>
        <trans-unit id="941e591857cdf0d45804c6c106a3821ade8d5bf6" translate="yes" xml:space="preserve">
          <source>It is necessary to &lt;code&gt;raw&lt;/code&gt; the result of &lt;code&gt;json_escape&lt;/code&gt;, so that quotation marks don't get converted to &lt;code&gt;&amp;amp;quot;&lt;/code&gt; entities. &lt;code&gt;json_escape&lt;/code&gt; doesn't automatically flag the result as HTML safe, since the raw value is unsafe to use inside HTML attributes.</source>
          <target state="translated">这是必要的 &lt;code&gt;raw&lt;/code&gt; 的结果 &lt;code&gt;json_escape&lt;/code&gt; ，让引号没有得到转化为 &lt;code&gt;&amp;amp;quot;&lt;/code&gt; 实体。 &lt;code&gt;json_escape&lt;/code&gt; 不会自动将结果标记为HTML安全，因为原始值在HTML属性中使用是不安全的。</target>
        </trans-unit>
        <trans-unit id="59035bb25168789f781c7f9fcd3e7e21efa80ace" translate="yes" xml:space="preserve">
          <source>It is not necessary to pass all the attributes to &lt;code&gt;update&lt;/code&gt;. For example, if &lt;code&gt;@article.update(title: 'A new title')&lt;/code&gt; was called, Rails would only update the &lt;code&gt;title&lt;/code&gt; attribute, leaving all other attributes untouched.</source>
          <target state="translated">不必传递所有属性进行 &lt;code&gt;update&lt;/code&gt; 。例如，如果调用了 &lt;code&gt;@article.update(title: 'A new title')&lt;/code&gt; ，Rails将仅更新 &lt;code&gt;title&lt;/code&gt; 属性，而所有其他属性都保持不变。</target>
        </trans-unit>
        <trans-unit id="93598eff3d787ca530523d68e5e3b68468b4d0d0" translate="yes" xml:space="preserve">
          <source>It is not recommended that you stream static files through Rails if you can instead keep them in a public folder on your web server. It is much more efficient to let the user download the file directly using Apache or another web server, keeping the request from unnecessarily going through the whole Rails stack.</source>
          <target state="translated">如果可以将静态文件保存在Web服务器上的公共文件夹中,不建议通过Rails流式传输。让用户直接使用Apache或其他Web服务器下载文件会更有效,这样可以避免请求不必要地经过整个Rails堆栈。</target>
        </trans-unit>
        <trans-unit id="d015ad73b3672fc5748a09b49d6df746aa38bf26" translate="yes" xml:space="preserve">
          <source>It is not recommended to use this method in a request since it does not yield to a block like `connected_to`.</source>
          <target state="translated">不建议在请求中使用这个方法,因为它不会产生像`connected_to`这样的块。</target>
        </trans-unit>
        <trans-unit id="e88432ee04e64b5f3195b709467ab625a7694aa3" translate="yes" xml:space="preserve">
          <source>It is often useful to ignore sets of fields that the user has not filled in. You can control this by passing a &lt;code&gt;:reject_if&lt;/code&gt; proc to &lt;code&gt;accepts_nested_attributes_for&lt;/code&gt;. This proc will be called with each hash of attributes submitted by the form. If the proc returns &lt;code&gt;false&lt;/code&gt; then Active Record will not build an associated object for that hash. The example below only tries to build an address if the &lt;code&gt;kind&lt;/code&gt; attribute is set.</source>
          <target state="translated">忽略用户尚未填写的字段集通常很有用。您可以通过将 &lt;code&gt;:reject_if&lt;/code&gt; proc 传递给 &lt;code&gt;accepts_nested_attributes_for&lt;/code&gt; 来控制它。将使用表单提交的属性的每个哈希调用此proc。如果proc返回 &lt;code&gt;false&lt;/code&gt; ,则Active Record将不会为该哈希建立关联的对象。如果设置了 &lt;code&gt;kind&lt;/code&gt; 属性，则下面的示例仅尝试构建地址。</target>
        </trans-unit>
        <trans-unit id="359dd26ed4325027fc03a54808e8ea6356971976" translate="yes" xml:space="preserve">
          <source>It is only soft-deprecated, which means that your code will not break at the moment and no deprecation warning will be displayed, but this constant will be removed in the future.</source>
          <target state="translated">它只是软弃用,这意味着你的代码目前不会被破坏,也不会显示弃用警告,但这个常量将来会被删除。</target>
        </trans-unit>
        <trans-unit id="4562ca89794a86c1f1a7abdb14c2b0bf7874f843" translate="yes" xml:space="preserve">
          <source>It is possible to associate &lt;code&gt;:if&lt;/code&gt; and &lt;code&gt;:unless&lt;/code&gt; with a &lt;code&gt;Proc&lt;/code&gt; object which will be called. Using a &lt;code&gt;Proc&lt;/code&gt; object gives you the ability to write an inline condition instead of a separate method. This option is best suited for one-liners.</source>
          <target state="translated">可以将 &lt;code&gt;:if&lt;/code&gt; 和 &lt;code&gt;:unless&lt;/code&gt; 与将被调用的 &lt;code&gt;Proc&lt;/code&gt; 对象相关联。使用 &lt;code&gt;Proc&lt;/code&gt; 对象可让您编写内联条件而不是单独的方法。此选项最适合单线。</target>
        </trans-unit>
        <trans-unit id="cf776ffebf1af8bc2d942f750e9a51092414860e" translate="yes" xml:space="preserve">
          <source>It is possible to associate &lt;code&gt;:if&lt;/code&gt; and &lt;code&gt;:unless&lt;/code&gt; with a &lt;code&gt;Proc&lt;/code&gt; object. This option is best suited when writing short validation methods, usually one-liners:</source>
          <target state="translated">可以将 &lt;code&gt;:if&lt;/code&gt; 和 &lt;code&gt;:unless&lt;/code&gt; 与 &lt;code&gt;Proc&lt;/code&gt; 对象关联。此选项最适合编写简短的验证方法，通常是单行代码：</target>
        </trans-unit>
        <trans-unit id="94c0520a8d6f229af5d1702cf7d9bb86be3a506e" translate="yes" xml:space="preserve">
          <source>It is possible to customize the behavior of elements with a &lt;code&gt;data-remote&lt;/code&gt; attribute without writing a line of JavaScript. You can specify extra &lt;code&gt;data-&lt;/code&gt; attributes to accomplish this.</source>
          <target state="translated">无需编写JavaScript行就可以使用 &lt;code&gt;data-remote&lt;/code&gt; 属性来自定义元素的行为。您可以指定其他 &lt;code&gt;data-&lt;/code&gt; 属性来完成此操作。</target>
        </trans-unit>
        <trans-unit id="5fdb819e34d79e2af13d3f5739becece3367eef9" translate="yes" xml:space="preserve">
          <source>It is possible to return to old behavior and disable &lt;code&gt;deep_munge&lt;/code&gt; configuring your application if you are aware of the risk and know how to handle it:</source>
          <target state="translated">如果您知道风险并知道如何处理，则可以返回旧行为并禁用 &lt;code&gt;deep_munge&lt;/code&gt; 配置应用程序：</target>
        </trans-unit>
        <trans-unit id="c699de2f3bdf654ecdd4536b61685dc7cafc0885" translate="yes" xml:space="preserve">
          <source>It is possible to send email to one or more recipients in one email (e.g., informing all admins of a new signup) by setting the list of emails to the &lt;code&gt;:to&lt;/code&gt; key. The list of emails can be an array of email addresses or a single string with the addresses separated by commas.</source>
          <target state="translated">通过将电子邮件列表设置为 &lt;code&gt;:to&lt;/code&gt; 键，可以在一封电子邮件中向一个或多个收件人发送电子邮件（例如，通知所有管理员新的注册）。电子邮件列表可以是电子邮件地址的数组，也可以是单个字符串，其中的地址用逗号分隔。</target>
        </trans-unit>
        <trans-unit id="dd2fba07d1449421861070682cf3bc42607770a5" translate="yes" xml:space="preserve">
          <source>It is possible to share partials and associated caching between files with different mime types. For example shared partial caching allows template writers to share a partial between HTML and JavaScript files. When templates are collected in the template resolver file paths they only include the template language extension and not the mime type. Because of this templates can be used for multiple mime types. Both HTML and JavaScript requests will respond to the following code:</source>
          <target state="translated">可以在不同mime类型的文件之间共享部分缓存和相关缓存。例如共享局部缓存允许模板编写者在HTML和JavaScript文件之间共享局部。当模板被收集在模板解析器文件路径中时,它们只包括模板语言扩展名,而不包括mime类型。正因为如此,模板可以用于多种mime类型。HTML和JavaScript请求都会响应以下代码。</target>
        </trans-unit>
        <trans-unit id="b8fd1eae44ed2d596522e191f73299d597768b59" translate="yes" xml:space="preserve">
          <source>It is possible to swap the shipped Simple backend with a more powerful one, which would store translation data in a relational database, GetText dictionary, or similar. See section &lt;a href=&quot;#using-different-backends&quot;&gt;Using different backends&lt;/a&gt; below.</source>
          <target state="translated">可以用功能更强大的后端交换出厂的Simple后端，该后端将翻译数据存储在关系数据库，GetText字典或类似数据库中。请参阅下面的&lt;a href=&quot;#using-different-backends&quot;&gt;使用不同的后端&lt;/a&gt;部分。</target>
        </trans-unit>
        <trans-unit id="648e7ff34b53bee2903e398ed4116f0d74bf63d7" translate="yes" xml:space="preserve">
          <source>It is recommended not to use the same verifier for different things, so you can get different verifiers passing the &lt;code&gt;verifier_name&lt;/code&gt; argument.</source>
          <target state="translated">建议不要将相同的验证器用于不同的事物，因此可以通过 &lt;code&gt;verifier_name&lt;/code&gt; 参数获得不同的验证器。</target>
        </trans-unit>
        <trans-unit id="ab44ad0eac99bfa97d75c89f0ad0ef7a845ed57e" translate="yes" xml:space="preserve">
          <source>It is recommended to &lt;em&gt;use RedCloth in combination with a permitted input filter&lt;/em&gt;, as described in the countermeasures against XSS section.</source>
          <target state="translated">建议将&lt;em&gt;RedCloth与允许的输入过滤器结合使用&lt;/em&gt;，如针对XSS的对策部分中所述。</target>
        </trans-unit>
        <trans-unit id="31461f64487532620d38eadf42db9852c1279cb0" translate="yes" xml:space="preserve">
          <source>It is safe to call this method if a database transaction is already open, i.e. if &lt;a href=&quot;databasestatements#method-i-transaction&quot;&gt;&lt;code&gt;transaction&lt;/code&gt;&lt;/a&gt; is called within another &lt;a href=&quot;databasestatements#method-i-transaction&quot;&gt;&lt;code&gt;transaction&lt;/code&gt;&lt;/a&gt; block. In case of a nested call, &lt;a href=&quot;databasestatements#method-i-transaction&quot;&gt;&lt;code&gt;transaction&lt;/code&gt;&lt;/a&gt; will behave as follows:</source>
          <target state="translated">它是安全的调用这个方法，如果一个数据库事务已经打开，也就是说，如果&lt;a href=&quot;databasestatements#method-i-transaction&quot;&gt; &lt;code&gt;transaction&lt;/code&gt; &lt;/a&gt;被其他所谓的内部&lt;a href=&quot;databasestatements#method-i-transaction&quot;&gt; &lt;code&gt;transaction&lt;/code&gt; &lt;/a&gt;块。在嵌套调用的情况下，&lt;a href=&quot;databasestatements#method-i-transaction&quot;&gt; &lt;code&gt;transaction&lt;/code&gt; &lt;/a&gt;行为如下：</target>
        </trans-unit>
        <trans-unit id="298255e081934b106aba3a7bad6a52c856a4bc8f" translate="yes" xml:space="preserve">
          <source>It is safe to call this method if a database transaction is already open, i.e. if &lt;a href=&quot;databasestatements#method-i-transaction&quot;&gt;transaction&lt;/a&gt; is called within another &lt;a href=&quot;databasestatements#method-i-transaction&quot;&gt;transaction&lt;/a&gt; block. In case of a nested call, &lt;a href=&quot;databasestatements#method-i-transaction&quot;&gt;transaction&lt;/a&gt; will behave as follows:</source>
          <target state="translated">它是安全的调用这个方法，如果一个数据库事务已经打开，也就是说，如果&lt;a href=&quot;databasestatements#method-i-transaction&quot;&gt;交易&lt;/a&gt;被其他所谓的内部&lt;a href=&quot;databasestatements#method-i-transaction&quot;&gt;事务&lt;/a&gt;块。在嵌套调用的情况下，&lt;a href=&quot;databasestatements#method-i-transaction&quot;&gt;事务的&lt;/a&gt;行为如下：</target>
        </trans-unit>
        <trans-unit id="7a45593b8b2126e4764abc506e87f644124f7d10" translate="yes" xml:space="preserve">
          <source>It is shorter, and the intention more obvious.</source>
          <target state="translated">它的时间更短,意图也更明显。</target>
        </trans-unit>
        <trans-unit id="89bdff5bc31e9e0bf49c6a3a0b41b9c39713a357" translate="yes" xml:space="preserve">
          <source>It is similar to render, except that it does not set the &lt;code&gt;response_body&lt;/code&gt; and it should be guaranteed to always return a string.</source>
          <target state="translated">它与render类似，不同之处在于它不设置 &lt;code&gt;response_body&lt;/code&gt; ，并且应确保始终返回字符串。</target>
        </trans-unit>
        <trans-unit id="feba03ed2eb137a18e226422934ced8f11f7d231" translate="yes" xml:space="preserve">
          <source>It is the server's (i.e. our) responsibility to look for a last modified timestamp and the if-none-match header and determine whether or not to send back the full response. With conditional-get support in Rails this is a pretty easy task:</source>
          <target state="translated">服务器(即我们)的责任是寻找最后修改的时间戳和if-none-match头,并决定是否发送完整的响应。有了Rails中的条件-get支持,这是个非常简单的任务。</target>
        </trans-unit>
        <trans-unit id="733a427a481d95bc20d446154005106d5e2b15ab" translate="yes" xml:space="preserve">
          <source>It is used to find the class correspondent to the value stored in the inheritance column.</source>
          <target state="translated">它用于查找存储在继承列中的值所对应的类。</target>
        </trans-unit>
        <trans-unit id="3b8f8badc2d008327c7b2654ec92911e4b75e011" translate="yes" xml:space="preserve">
          <source>It is used to find the class correspondent to the value stored in the polymorphic type column.</source>
          <target state="translated">它用于查找多态类型列中存储的值所对应的类。</target>
        </trans-unit>
        <trans-unit id="1f24fb666ec8101a20d8e74aef753ea515b4ed85" translate="yes" xml:space="preserve">
          <source>It is useful when rendering from an &lt;code&gt;ActionController::Metal&lt;/code&gt; controller or otherwise to add an available renderer proc to a specific controller.</source>
          <target state="translated">从 &lt;code&gt;ActionController::Metal&lt;/code&gt; 控制器进行渲染时，或以其他方式将可用的渲染器proc添加到特定控制器时，这很有用。</target>
        </trans-unit>
        <trans-unit id="8381b5798039f8bdc6ba9892429183aa3882944c" translate="yes" xml:space="preserve">
          <source>It is very common that a template will need to iterate over a collection and render a sub-template for each of the elements. This pattern has been implemented as a single method that accepts an array and renders a partial for each one of the elements in the array.</source>
          <target state="translated">模板需要对一个集合进行迭代,并为每个元素渲染一个子模板,这是非常常见的。这种模式被实现为一个单一的方法,它接受一个数组,并为数组中的每个元素渲染一个局部。</target>
        </trans-unit>
        <trans-unit id="112ab076fea03f9d75fe593aa250d73126e6c082" translate="yes" xml:space="preserve">
          <source>It is very easy to create Active Record models. All you have to do is to subclass the &lt;code&gt;ApplicationRecord&lt;/code&gt; class and you're good to go:</source>
          <target state="translated">创建Active Record模型非常容易。您要做的就是将 &lt;code&gt;ApplicationRecord&lt;/code&gt; 类子类化，您可以开始：</target>
        </trans-unit>
        <trans-unit id="0f65232288f706aa8c4dc006258a969438263eeb" translate="yes" xml:space="preserve">
          <source>It is very important that the override &lt;em&gt;reopens&lt;/em&gt; the class or module. Using the &lt;code&gt;class&lt;/code&gt; or &lt;code&gt;module&lt;/code&gt; keywords would define them if they were not already in memory, which would be incorrect because the definition lives in the engine. Using &lt;code&gt;class_eval&lt;/code&gt; as shown above ensures you are reopening.</source>
          <target state="translated">重写&lt;em&gt;重新打开&lt;/em&gt;类或模块非常重要。如果它们尚未在内存中，则使用 &lt;code&gt;class&lt;/code&gt; 或 &lt;code&gt;module&lt;/code&gt; 关键字将对其进行定义，这将是不正确的，因为该定义存在于引擎中。如上所示使用 &lt;code&gt;class_eval&lt;/code&gt; 可以确保您重新打开。</target>
        </trans-unit>
        <trans-unit id="3f2567301b91ff3e1a8e3b6ab299f1ab0e52af5b" translate="yes" xml:space="preserve">
          <source>It is very important to &lt;em&gt;think about the worst case&lt;/em&gt;: What if someone really got hold of your cookies or user credentials. You could &lt;em&gt;introduce roles&lt;/em&gt; for the admin interface to limit the possibilities of the attacker. Or how about &lt;em&gt;special login credentials&lt;/em&gt; for the admin interface, other than the ones used for the public part of the application. Or a &lt;em&gt;special password for very serious actions&lt;/em&gt;?</source>
          <target state="translated">&lt;em&gt;考虑最坏的情况&lt;/em&gt;非常重要：如果有人真的掌握了您的Cookie或用户凭据，&lt;em&gt;该&lt;/em&gt;怎么办。您可以为管理界面&lt;em&gt;引入角色&lt;/em&gt;，以限制攻击者的可能性。或关于管理界面的&lt;em&gt;特殊登录凭据（&lt;/em&gt;用于应用程序公共部分的&lt;em&gt;凭据&lt;/em&gt;除外）如何。还是&lt;em&gt;用于非常严肃的操作&lt;/em&gt;的&lt;em&gt;特殊密码&lt;/em&gt;？</target>
        </trans-unit>
        <trans-unit id="b0493caf1193ee906843c7daabc5ed6988e9f46b" translate="yes" xml:space="preserve">
          <source>It is very important to understand that Ruby does not have a way to truly reload classes and modules in memory, and have that reflected everywhere they are already used. Technically, &quot;unloading&quot; the &lt;code&gt;User&lt;/code&gt; class means removing the &lt;code&gt;User&lt;/code&gt; constant via &lt;code&gt;Object.send(:remove_const, &quot;User&quot;)&lt;/code&gt;.</source>
          <target state="translated">理解Ruby没有办法真正地在内存中重新加载类和模块，并使它们在已被使用的任何地方都反映出来，这一点非常重要。从技术上讲，&amp;ldquo;卸载&amp;rdquo; &lt;code&gt;User&lt;/code&gt; 类意味着通过 &lt;code&gt;Object.send(:remove_const, &quot;User&quot;)&lt;/code&gt; 删除 &lt;code&gt;User&lt;/code&gt; 常量。</target>
        </trans-unit>
        <trans-unit id="2ae463c41c994975a8c9d1ed7d20b19f6f82fa4e" translate="yes" xml:space="preserve">
          <source>It is very trivial to implement in Rails.</source>
          <target state="translated">在Rails中实现它是非常琐碎的。</target>
        </trans-unit>
        <trans-unit id="35ee732864066c0d0eadb6125761394ebaf22e35" translate="yes" xml:space="preserve">
          <source>It is your responsibility to ensure calling &lt;code&gt;html_safe&lt;/code&gt; on a particular string is fine.</source>
          <target state="translated">确保在特定字符串上调用 &lt;code&gt;html_safe&lt;/code&gt; 是您的责任。</target>
        </trans-unit>
        <trans-unit id="31c0edfcaa4fc403ac3adceae75236d17c99abf7" translate="yes" xml:space="preserve">
          <source>It iterates through the collection and passes each element to a block. The element will be keyed by the value returned by the block:</source>
          <target state="translated">它遍历集合,并将每个元素传递给一个块。元素将以区块返回的值为键。</target>
        </trans-unit>
        <trans-unit id="721fe765d7d4e10b75516d49bfbcce75be736438" translate="yes" xml:space="preserve">
          <source>It may not function correctly. This is because the application doesn't know how to route these requests to the engine unless you explicitly tell it &lt;strong&gt;how&lt;/strong&gt;. To do this, you must set the &lt;code&gt;@routes&lt;/code&gt; instance variable to the engine's route set in your setup code:</source>
          <target state="translated">它可能无法正常运行。这是因为除非您明确告诉它&lt;strong&gt;如何，&lt;/strong&gt;否则应用程序不知道如何将这些请求路由到引擎。为此，必须将 &lt;code&gt;@routes&lt;/code&gt; 实例变量设置为在安装代码中设置的引擎的路由：</target>
        </trans-unit>
        <trans-unit id="6ce713b879eb723ee2b86cf67e06dfef733959e9" translate="yes" xml:space="preserve">
          <source>It offers a richer bottom-line at the language level, targeted both at the development of Rails applications, and at the development of Ruby on Rails itself.</source>
          <target state="translated">它在语言层面提供了更丰富的底层,既针对Rails应用的开发,也针对Ruby on Rails本身的开发。</target>
        </trans-unit>
        <trans-unit id="8096c3aca7a392a3a34226c703cd085adca651c9" translate="yes" xml:space="preserve">
          <source>It preserves dashes and underscores unless they are used as separators:</source>
          <target state="translated">它保留了破折号和下划线,除非它们被用作分隔符。</target>
        </trans-unit>
        <trans-unit id="124daf2dae3dc1290bb02e4af593b4afcd962cb7" translate="yes" xml:space="preserve">
          <source>It provides a method to capture blocks into variables through capture and a way to capture a block of markup for use in a layout through &lt;a href=&quot;capturehelper#method-i-content_for&quot;&gt;content_for&lt;/a&gt;.</source>
          <target state="translated">它提供了一种通过捕获将块捕获到变量中的方法，以及一种通过&lt;a href=&quot;capturehelper#method-i-content_for&quot;&gt;content_for&lt;/a&gt;捕获在布局中使用的标记块的方法。</target>
        </trans-unit>
        <trans-unit id="d559b2073af90812c6c78ec7af2c339cdd913618" translate="yes" xml:space="preserve">
          <source>It provides an interface for protecting attributes from end-user assignment. This makes Action Controller parameters forbidden to be used in Active Model mass assignment until they have been explicitly enumerated.</source>
          <target state="translated">它提供了一个接口来保护属性不被终端用户分配。这使得Action Controller参数在被明确列举之前,禁止在Active Model的大规模分配中使用。</target>
        </trans-unit>
        <trans-unit id="d53d2b0f66ddb0510df5988207a06488b1a81009" translate="yes" xml:space="preserve">
          <source>It provides two options that controls the top-level behavior of new instances:</source>
          <target state="translated">它提供了两个选项来控制新实例的顶层行为。</target>
        </trans-unit>
        <trans-unit id="b59d7e861125ed6d581d3a0cc77e6a38802989db" translate="yes" xml:space="preserve">
          <source>It relies on exception handling to handle control flow, which may be marginally slower.</source>
          <target state="translated">它依靠异常处理来处理控制流,这可能会稍微慢一些。</target>
        </trans-unit>
        <trans-unit id="8e985f63cf9499f5816c3c8d3acd3c680200932a" translate="yes" xml:space="preserve">
          <source>It returns an empty HTML tag of type &lt;code&gt;name&lt;/code&gt; which by default is XHTML compliant. Set &lt;code&gt;open&lt;/code&gt; to true to create an open tag compatible with HTML 4.0 and below. Add HTML attributes by passing an attributes hash to &lt;code&gt;options&lt;/code&gt;. Set &lt;code&gt;escape&lt;/code&gt; to false to disable attribute value escaping.</source>
          <target state="translated">它返回一个空的HTML标记，该标记的 &lt;code&gt;name&lt;/code&gt; 类型默认为XHTML兼容。将 &lt;code&gt;open&lt;/code&gt; 设置为true可以创建与HTML 4.0及以下版本兼容的open标签。通过将属性哈希传递给 &lt;code&gt;options&lt;/code&gt; 来添加HTML属性。将 &lt;code&gt;escape&lt;/code&gt; 设置为false可禁用属性值转义。</target>
        </trans-unit>
        <trans-unit id="103c6ce50b681a6ef444b5d698f26fbec76c9171" translate="yes" xml:space="preserve">
          <source>It should have created a test file placeholder for us. With the output of the previous command we should see:</source>
          <target state="translated">它应该已经为我们创建了一个测试文件占位符。根据前面命令的输出,我们应该看到。</target>
        </trans-unit>
        <trans-unit id="4966f7811cb27a198a6cba34da214ff55b23cc1f" translate="yes" xml:space="preserve">
          <source>It should have created a test file placeholder for us. With the output of the previous command you should see:</source>
          <target state="translated">它应该已经为我们创建了一个测试文件占位符。有了前面命令的输出,你应该看到。</target>
        </trans-unit>
        <trans-unit id="157ac47cfa200341598ff079a15434917fd957db" translate="yes" xml:space="preserve">
          <source>It takes the names of an old (deprecated) constant and of a new constant (both in string form) and optionally a deprecator. The deprecator defaults to &lt;code&gt;ActiveSupport::Deprecator&lt;/code&gt; if none is specified.</source>
          <target state="translated">它使用一个旧的（不推荐使用的）常量和一个新的常量（均以字符串形式）的名称以及一个可选的不推荐使用的名称。如果未指定，则弃用者默认为 &lt;code&gt;ActiveSupport::Deprecator&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5f9a57db6f3be424c799cd8d94ff60597b0aa735" translate="yes" xml:space="preserve">
          <source>It tends to be faster and less error prone to create a new instance of your application's database by loading the schema file via &lt;code&gt;bin/rails db:schema:load&lt;/code&gt; than it is to replay the entire migration history. &lt;a href=&quot;#old-migrations&quot;&gt;Old migrations&lt;/a&gt; may fail to apply correctly if those migrations use changing external dependencies or rely on application code which evolves separately from your migrations.</source>
          <target state="translated">与通过重播整个迁移历史记录相比，通过 &lt;code&gt;bin/rails db:schema:load&lt;/code&gt; 加载架构文件来创建应用程序数据库的新实例通常会更快，更容易出错。&lt;a href=&quot;#old-migrations&quot;&gt;如果旧的迁移&lt;/a&gt;使用不断变化的外部依赖关系或依赖与您的迁移分开发展的应用程序代码，则旧的迁移可能无法正确应用。</target>
        </trans-unit>
        <trans-unit id="83087d1a900bea48f8391e7474e1e5c67d0ff05a" translate="yes" xml:space="preserve">
          <source>It tends to be faster and less error prone to create a new instance of your application's database by loading the schema file via &lt;code&gt;rails db:schema:load&lt;/code&gt; than it is to replay the entire migration history. &lt;a href=&quot;#old-migrations&quot;&gt;Old migrations&lt;/a&gt; may fail to apply correctly if those migrations use changing external dependencies or rely on application code which evolves separately from your migrations.</source>
          <target state="translated">与通过重播整个迁移历史记录相比，通过 &lt;code&gt;rails db:schema:load&lt;/code&gt; 加载架构文件来创建应用程序数据库的新实例通常会更快，更容易出错。&lt;a href=&quot;#old-migrations&quot;&gt;如果旧的迁移&lt;/a&gt;使用不断变化的外部依赖性或依赖与您的迁移分开发展的应用程序代码，则旧的迁移可能无法正确应用。</target>
        </trans-unit>
        <trans-unit id="ccc2a2f98b56eb3a54fae986fc622f497465a043" translate="yes" xml:space="preserve">
          <source>It will include all of the helpers from engine's directory. Take into account that this does not include helpers defined in controllers with helper_method or other similar solutions, only helpers defined in the helpers directory will be included.</source>
          <target state="translated">它将包含所有引擎目录下的助记符。需要注意的是,这不包括定义在controller中的helper_method或其他类似的解决方案,只有定义在helpers目录下的helpers才会被包含在内。</target>
        </trans-unit>
        <trans-unit id="ff50f07b75ecd8565d4477a52681e559177c02d3" translate="yes" xml:space="preserve">
          <source>It will include all of the helpers from engine's directory. Take into account this does not include helpers defined in controllers with helper_method or other similar solutions, only helpers defined in the helpers directory will be included.</source>
          <target state="translated">它将包含所有引擎目录下的helpers。考虑到这并不包括定义在controllers中的helper_method或其他类似的解决方案,只有定义在helpers目录下的helpers才会被包含在内。</target>
        </trans-unit>
        <trans-unit id="98c13cf8d00ca42ad01461edeb1c7ca6801faefd" translate="yes" xml:space="preserve">
          <source>It will look a little basic for now, but that's ok. We'll look at improving the styling for it afterwards.</source>
          <target state="translated">现在看起来会有点基本,但没关系。之后我们会研究改进它的造型。</target>
        </trans-unit>
        <trans-unit id="8637603c373814dd050a1532100af0da4f2090a9" translate="yes" xml:space="preserve">
          <source>It will use the given &lt;code&gt;user_content_type&lt;/code&gt;, or multipart if the mail message has any attachments. If the attachments are inline, the content type will be &amp;ldquo;multipart/related&amp;rdquo;, otherwise &amp;ldquo;multipart/mixed&amp;rdquo;.</source>
          <target state="translated">它将使用给定的 &lt;code&gt;user_content_type&lt;/code&gt; ，如果邮件具有任何附件，则使用multipart。如果附件为嵌入式，则内容类型将为&amp;ldquo;多部分/相关&amp;rdquo;，否则为&amp;ldquo;多部分/混合&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="42cbfd3191bc8d384376a66a5cca989147dbf649" translate="yes" xml:space="preserve">
          <source>It works for both inline:</source>
          <target state="translated">它既可以用于内联。</target>
        </trans-unit>
        <trans-unit id="618aee3ec871071cafa5f2c415e6c3ad428f6c63" translate="yes" xml:space="preserve">
          <source>It works like this:</source>
          <target state="translated">它的工作原理是这样的。</target>
        </trans-unit>
        <trans-unit id="4e9581765ec600cf23cfdcdef0a724ea6ec31300" translate="yes" xml:space="preserve">
          <source>It's a good practice to ensure that the correct message has been broadcasted inside other components (e.g. inside your controllers). This is precisely where the custom assertions provided by Action Cable are pretty useful. For instance, within a model:</source>
          <target state="translated">确保正确的信息已经在其他组件内部(例如在你的控制器内部)被广播,这是一个很好的做法。这正是Action Cable提供的自定义断言非常有用的地方。例如,在一个模型内。</target>
        </trans-unit>
        <trans-unit id="f422ae9e8159f660700963246d16c8816e8e4e5b" translate="yes" xml:space="preserve">
          <source>It's a good practice to ensure that your jobs correctly get enqueued or performed wherever you invoke them (e.g. inside your controllers). This is precisely where the custom assertions provided by Active Job are pretty useful. For instance, within a model:</source>
          <target state="translated">确保你的工作在你调用它们的任何地方(例如在你的控制器内部)都能正确地被enqueued或执行是一个很好的实践。这正是Active Job提供的自定义断言非常有用的地方。例如,在一个模型中。</target>
        </trans-unit>
        <trans-unit id="a80a15c6dc9f952abf9d054b00b9bc97a4a2ae13" translate="yes" xml:space="preserve">
          <source>It's advisable that you only store simple data (strings and numbers) in cookies. If you have to store complex objects, you would need to handle the conversion manually when reading the values on subsequent requests.</source>
          <target state="translated">建议你只在Cookie中存储简单的数据(字符串和数字)。如果你必须存储复杂的对象,你将需要在后续请求中读取值时手动处理转换。</target>
        </trans-unit>
        <trans-unit id="1b5341eced867c0f8d3ab2b44d8744a44e0359bb" translate="yes" xml:space="preserve">
          <source>It's also a good idea to add indexes to each of those columns to speed up the joins process. However, in MySQL it is advised to add a compound index for both of the columns as MySQL only uses one index per table during the lookup.</source>
          <target state="translated">也可以为这两列分别添加索引,以加快连接过程。不过,在MySQL中,建议为这两列添加复合索引,因为MySQL在查找过程中,每个表只使用一个索引。</target>
        </trans-unit>
        <trans-unit id="23d63436f77065acc450057bff4d18024da3b766" translate="yes" xml:space="preserve">
          <source>It's also important to treat the value objects as immutable. Don't allow the Money object to have its amount changed after creation. Create a new Money object with the new value instead. The &lt;code&gt;Money#exchange_to&lt;/code&gt; method is an example of this. It returns a new value object instead of changing its own values. Active Record won't persist value objects that have been changed through means other than the writer method.</source>
          <target state="translated">将值对象视为不可变也是很重要的。创建后，不允许Money对象更改其金额。而是使用新值创建一个新的Money对象。该 &lt;code&gt;Money#exchange_to&lt;/code&gt; 方法是这样的一个例子。它返回一个新的值对象，而不是更改自己的值。Active Record不会保留通过writer方法以外的方法更改过的值对象。</target>
        </trans-unit>
        <trans-unit id="ce772d533b0ed334ad2b7969d9190d3bfed1e182" translate="yes" xml:space="preserve">
          <source>It's also possible to construct multi-dimensional parameter hashes by specifying keys using brackets, such as:</source>
          <target state="translated">也可以通过使用括号指定键来构建多维参数哈希,例如:。</target>
        </trans-unit>
        <trans-unit id="1c5080c9d97459219fcb315f929272aaf0d44726" translate="yes" xml:space="preserve">
          <source>It's also possible to delegate a method to the class by using &lt;code&gt;:class&lt;/code&gt;:</source>
          <target state="translated">也可以使用 &lt;code&gt;:class&lt;/code&gt; 将方法委托给类：</target>
        </trans-unit>
        <trans-unit id="ee9bba4c576ef4381989429f386a4c0d76c77e88" translate="yes" xml:space="preserve">
          <source>It's also possible to instantiate related objects, so a &lt;code&gt;Client&lt;/code&gt; class belonging to the &lt;code&gt;clients&lt;/code&gt; table with a &lt;code&gt;master_id&lt;/code&gt; foreign key can instantiate master through &lt;code&gt;Client#master&lt;/code&gt;.</source>
          <target state="translated">也可以实例化相关对象，因此属于具有 &lt;code&gt;master_id&lt;/code&gt; 外键的 &lt;code&gt;clients&lt;/code&gt; 表的 &lt;code&gt;Client&lt;/code&gt; 类可以通过 &lt;code&gt;Client#master&lt;/code&gt; 实例化master。</target>
        </trans-unit>
        <trans-unit id="d018ba7160b482abab2b6e00cfd3ecbbb4865e28" translate="yes" xml:space="preserve">
          <source>It's also possible to interpret encrypted YAML files with &lt;code&gt;config&lt;/code&gt;.</source>
          <target state="translated">也可以使用 &lt;code&gt;config&lt;/code&gt; 解释加密的YAML文件。</target>
        </trans-unit>
        <trans-unit id="6c8736847d7c7ad6de203a9a1a70d34f62f81a4d" translate="yes" xml:space="preserve">
          <source>It's also possible to override the column that should be used as the table's primary key using the &lt;code&gt;ActiveRecord::Base.primary_key=&lt;/code&gt; method:</source>
          <target state="translated">还可以使用 &lt;code&gt;ActiveRecord::Base.primary_key=&lt;/code&gt; 方法覆盖应用作表主键的列：</target>
        </trans-unit>
        <trans-unit id="20c583d4833cfc55c98348bf9834c35bbaee87ec" translate="yes" xml:space="preserve">
          <source>It's also possible to retry or discard a job if an exception is raised during execution. For example:</source>
          <target state="translated">如果在执行过程中出现异常,也可以重试或放弃一个作业。例如:在执行过程中,如果出现异常,也可以重试或放弃作业。</target>
        </trans-unit>
        <trans-unit id="7d0f83e7bb64d92b6a7b5c41f4d4d0caa14b8cea" translate="yes" xml:space="preserve">
          <source>It's also possible to specify the instance to be used:</source>
          <target state="translated">也可以指定要使用的实例。</target>
        </trans-unit>
        <trans-unit id="d2cec49ece4ed432ed06fe492f0dc3f0dbca2d38" translate="yes" xml:space="preserve">
          <source>It's also possible to swap connections granularly for shards.</source>
          <target state="translated">也可以把连接颗粒地换成碎片。</target>
        </trans-unit>
        <trans-unit id="06bf6d5af71eff30bf65d8d44e4b90be5583daab" translate="yes" xml:space="preserve">
          <source>It's also possible to use multiple attributes in the same &lt;code&gt;find_by_&lt;/code&gt; by separating them with &amp;ldquo;&lt;em&gt;and&lt;/em&gt;&amp;rdquo;.</source>
          <target state="translated">也可以在同一 &lt;code&gt;find_by_&lt;/code&gt; 中使用多个属性，方法是使用&amp;ldquo; &lt;em&gt;和&lt;/em&gt; &amp;rdquo; 将它们分开。</target>
        </trans-unit>
        <trans-unit id="b3598f3734b84a9d144e42f8399310dc626f865a" translate="yes" xml:space="preserve">
          <source>It's common that you need to find a record or create it if it doesn't exist. You can do that with the &lt;code&gt;find_or_create_by&lt;/code&gt; and &lt;code&gt;find_or_create_by!&lt;/code&gt; methods.</source>
          <target state="translated">通常需要查找记录或创建记录（如果不存在）。您可以使用 &lt;code&gt;find_or_create_by&lt;/code&gt; 和 &lt;code&gt;find_or_create_by!&lt;/code&gt; 来做到这一点！方法。</target>
        </trans-unit>
        <trans-unit id="0f49250b8cffccdc364b03b3385e42a6d9aa7de5" translate="yes" xml:space="preserve">
          <source>It's common to have resources that are logically children of other resources. For example, suppose your application includes these models:</source>
          <target state="translated">常见的情况是,资源在逻辑上是其他资源的子资源。例如,假设你的应用程序包括这些模型。</target>
        </trans-unit>
        <trans-unit id="b210ae2be028d7173f42ca71c61c6b0b4412e0aa" translate="yes" xml:space="preserve">
          <source>It's common to have resources that are logically children of other resources:</source>
          <target state="translated">常见的情况是,资源在逻辑上是其他资源的子女。</target>
        </trans-unit>
        <trans-unit id="70811258be9b0fd9bd6ee0a2ce8b0baa003841be" translate="yes" xml:space="preserve">
          <source>It's common to want to test the caching strategy of your application in development mode. Rails provides the rails command &lt;code&gt;dev:cache&lt;/code&gt; to easily toggle caching on/off.</source>
          <target state="translated">通常要在开发模式下测试应用程序的缓存策略。Rails提供了rails命令 &lt;code&gt;dev:cache&lt;/code&gt; 来轻松地打开/关闭缓存。</target>
        </trans-unit>
        <trans-unit id="496d6b6240d7125cf093cec706a29512a5683f4c" translate="yes" xml:space="preserve">
          <source>It's even possible to call these dynamic finder methods on relations and named scopes.</source>
          <target state="translated">甚至可以在关系和命名作用域上调用这些动态查找方法。</target>
        </trans-unit>
        <trans-unit id="d40bb18153b626c0253f7b7d4189338603c47ddb" translate="yes" xml:space="preserve">
          <source>It's even possible to use &lt;code&gt;exists?&lt;/code&gt; without any arguments on a model or a relation.</source>
          <target state="translated">甚至有可能使用 &lt;code&gt;exists?&lt;/code&gt; 在模型或关系上没有任何参数。</target>
        </trans-unit>
        <trans-unit id="d966070d0b05c39fbcc1da00391f8af210d6e75b" translate="yes" xml:space="preserve">
          <source>It's helpful to be able to test incoming emails in development without actually sending and receiving real emails. To accomplish this, there's a conductor controller mounted at &lt;code&gt;/rails/conductor/action_mailbox/inbound_emails&lt;/code&gt;, which gives you an index of all the InboundEmails in the system, their state of processing, and a form to create a new InboundEmail as well.</source>
          <target state="translated">能够在不实际发送和接收真实电子邮件的情况下测试开发中的传入电子邮件很有用。为此，在 &lt;code&gt;/rails/conductor/action_mailbox/inbound_emails&lt;/code&gt; 安装了一个导体控制器，该控制器为您提供系统中所有InboundEmail的索引，它们的处理状态，以及用于创建新InboundEmail的表格。</target>
        </trans-unit>
        <trans-unit id="74318357210d0ce970a5c87b95a2c46f5bec161f" translate="yes" xml:space="preserve">
          <source>It's important to connect to your database in a single model and then inherit from that model for the tables rather than connect multiple individual models to the same database. Database clients have a limit to the number of open connections there can be and if you do this it will multiply the number of connections you have since Rails uses the model class name for the connection specification name.</source>
          <target state="translated">重要的是用一个模型连接到你的数据库,然后从这个模型继承表,而不是将多个单独的模型连接到同一个数据库。数据库客户端对开放连接的数量有限制,如果你这样做,会使你的连接数量成倍增加,因为Rails使用模型类名作为连接规范名。</target>
        </trans-unit>
        <trans-unit id="c731ba937d8d715e7c40709120f481beab47aa00" translate="yes" xml:space="preserve">
          <source>It's important to keep in mind at all times that the application should &lt;strong&gt;always&lt;/strong&gt; take precedence over its engines. An application is the object that has final say in what goes on in its environment. The engine should only be enhancing it, rather than changing it drastically.</source>
          <target state="translated">&lt;strong&gt;始终&lt;/strong&gt;牢记应用程序应&lt;strong&gt;始终&lt;/strong&gt;优先于其引擎，这一点很重要。应用程序是其环境中拥有最终决定权的对象。引擎应该只是对其进行增强，而不是进行大幅度的更改。</target>
        </trans-unit>
        <trans-unit id="61fcd28ba5c492e3c29858044d3265888cdd9725" translate="yes" xml:space="preserve">
          <source>It's important to know that the file is not yet available in the &lt;code&gt;after_create&lt;/code&gt; callback but in the &lt;code&gt;after_create_commit&lt;/code&gt; only.</source>
          <target state="translated">重要的是要知道该文件在 &lt;code&gt;after_create&lt;/code&gt; 回调中尚不可用，而仅在 &lt;code&gt;after_create_commit&lt;/code&gt; 中可用。</target>
        </trans-unit>
        <trans-unit id="e878d51979cf5c0a6c91cb7c590dd5e82fc40565" translate="yes" xml:space="preserve">
          <source>It's important to note that we have only &lt;em&gt;initialized&lt;/em&gt; this object. This object is not saved to the database at all. It's only available in the console at the moment. To save the object to the database, we must call &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveRecord/Persistence.html#method-i-save&quot;&gt;&lt;code&gt;save&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">重要的是要注意，我们只&lt;em&gt;初始化了&lt;/em&gt;这个对象。此对象根本不会保存到数据库。目前仅在控制台中可用。要将对象保存到数据库，我们必须调用&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveRecord/Persistence.html#method-i-save&quot;&gt; &lt;code&gt;save&lt;/code&gt; &lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="a0c359079f380a8190da5470e95085b4e0266c5b" translate="yes" xml:space="preserve">
          <source>It's important to remember that XML or JSON requests are also checked by default. If you're building an &lt;a href=&quot;api&quot;&gt;API&lt;/a&gt; or an SPA you could change forgery protection method in &lt;code&gt;ApplicationController&lt;/code&gt; (by default: &lt;code&gt;:exception&lt;/code&gt;):</source>
          <target state="translated">重要的是要记住，默认情况下也会检查XML或JSON请求。如果要构建&lt;a href=&quot;api&quot;&gt;API&lt;/a&gt;或SPA，则可以在 &lt;code&gt;ApplicationController&lt;/code&gt; 中更改伪造保护方法（默认情况下 &lt;code&gt;:exception&lt;/code&gt; ）：</target>
        </trans-unit>
        <trans-unit id="d4ea5fd1f11864cb83fb9ed3228955626a4be617" translate="yes" xml:space="preserve">
          <source>It's necessary not to set or leave &lt;code&gt;:nullify&lt;/code&gt; option for those associations that have &lt;code&gt;NOT NULL&lt;/code&gt; database constraints. If you don't set &lt;code&gt;dependent&lt;/code&gt; to destroy such associations you won't be able to change the associated object because the initial associated object's foreign key will be set to the unallowed &lt;code&gt;NULL&lt;/code&gt; value.</source>
          <target state="translated">对于那些没有 &lt;code&gt;NOT NULL&lt;/code&gt; 数据库约束的关联，必须不要设置或保留 &lt;code&gt;:nullify&lt;/code&gt; 选项。如果您未将 &lt;code&gt;dependent&lt;/code&gt; 设置为销毁此类关联，则将无法更改关联的对象，因为初始关联的对象的外键将设置为不允许的 &lt;code&gt;NULL&lt;/code&gt; 值。</target>
        </trans-unit>
        <trans-unit id="2de386d061ae8779fc61c2f09a77ad60535807ab" translate="yes" xml:space="preserve">
          <source>It's normal for associations to work in two directions, requiring declaration on two different models:</source>
          <target state="translated">联想到两个方向的工作,需要在两种不同的模式上进行申报,这很正常。</target>
        </trans-unit>
        <trans-unit id="27f390c981876d7b7b77c2786f714460a8271639" translate="yes" xml:space="preserve">
          <source>It's not possible to derive all render calls like that, though. Here are a few examples of things that can't be derived:</source>
          <target state="translated">不过不可能把所有的渲染调用都这样派生出来。下面是几个不能派生的例子。</target>
        </trans-unit>
        <trans-unit id="868f5785a4560369896872c12a3c257722a8d878" translate="yes" xml:space="preserve">
          <source>It's possible to add an exclamation point (!) on the end of the dynamic finders to get them to raise an &lt;a href=&quot;recordnotfound&quot;&gt;&lt;code&gt;ActiveRecord::RecordNotFound&lt;/code&gt;&lt;/a&gt; error if they do not return any records, like &lt;code&gt;Person.find_by_last_name!&lt;/code&gt;.</source>
          <target state="translated">如果动态查找器不返回任何记录（例如 &lt;code&gt;Person.find_by_last_name!&lt;/code&gt; ），则可以在动态查找器的末尾添加一个感叹号（！），以使它们引发&lt;a href=&quot;recordnotfound&quot;&gt; &lt;code&gt;ActiveRecord::RecordNotFound&lt;/code&gt; &lt;/a&gt;错误。。</target>
        </trans-unit>
        <trans-unit id="25f14b97d2c364a8b7b21e0c4a093d07e8cb1fd6" translate="yes" xml:space="preserve">
          <source>It's possible to add an exclamation point (!) on the end of the dynamic finders to get them to raise an &lt;a href=&quot;recordnotfound&quot;&gt;ActiveRecord::RecordNotFound&lt;/a&gt; error if they do not return any records, like &lt;code&gt;Person.find_by_last_name!&lt;/code&gt;.</source>
          <target state="translated">如果动态查找器不返回任何记录（例如 &lt;code&gt;Person.find_by_last_name!&lt;/code&gt; ），则可以在动态查找器的末尾添加一个感叹号（！），使它们引发&lt;a href=&quot;recordnotfound&quot;&gt;ActiveRecord :: RecordNotFound&lt;/a&gt;错误。。</target>
        </trans-unit>
        <trans-unit id="10a0322b52e0bf6b284ef6e7bb95d7213022d5c8" translate="yes" xml:space="preserve">
          <source>It's possible to further restrict the use of a signed id with a purpose. This helps when you have a general base model, like a User, which might have signed ids for several things, like password reset or email verification. The purpose that was set during generation must match the purpose set when finding. If there's a mismatch, nil is again returned.</source>
          <target state="translated">可以进一步限制有目的的签名id的使用。当你有一个通用的基础模型,比如一个用户,它可能有几个目的的签名id,比如密码重置或电子邮件验证,这就有帮助。在生成时设置的目的必须与查找时设置的目的相匹配。如果不匹配,又会返回nil。</target>
        </trans-unit>
        <trans-unit id="07d745fa3c1940442a48d11e1c81707259e4e2fc" translate="yes" xml:space="preserve">
          <source>It's possible to rotate the ciphers and digests used for encrypted and signed cookies.</source>
          <target state="translated">可以轮流使用加密和签名的cookie的密码和摘要。</target>
        </trans-unit>
        <trans-unit id="6c0c97dfda8d4b7a9cb09eedf3b374f351a7d03c" translate="yes" xml:space="preserve">
          <source>It's possible to set the fixture's model class directly in the YAML file. This is helpful when fixtures are loaded outside tests and &lt;code&gt;set_fixture_class&lt;/code&gt; is not available (e.g. when running &lt;code&gt;bin/rails db:fixtures:load&lt;/code&gt;).</source>
          <target state="translated">可以直接在YAML文件中设置灯具的模型类。当夹具在测试之外加载并且 &lt;code&gt;set_fixture_class&lt;/code&gt; 不可用时（例如，在运行 &lt;code&gt;bin/rails db:fixtures:load&lt;/code&gt; 时），这很有用。</target>
        </trans-unit>
        <trans-unit id="c32e8dd88e75c55390e501c7bd381f8aca605240" translate="yes" xml:space="preserve">
          <source>It's possible to set the fixture's model class directly in the YAML file. This is helpful when fixtures are loaded outside tests and &lt;code&gt;set_fixture_class&lt;/code&gt; is not available (e.g. when running &lt;code&gt;rails db:fixtures:load&lt;/code&gt;).</source>
          <target state="translated">可以直接在YAML文件中设置灯具的模型类。当夹具在测试之外加载并且 &lt;code&gt;set_fixture_class&lt;/code&gt; 不可用时（例如，在运行 &lt;code&gt;rails db:fixtures:load&lt;/code&gt; 时），这很有用。</target>
        </trans-unit>
        <trans-unit id="98cb3aa74f36c4b8f6c7c65b58c0012c527c5d89" translate="yes" xml:space="preserve">
          <source>It's possible to stack callbacks by passing them as an array. Example:</source>
          <target state="translated">通过将回调作为数组传递,可以堆栈回调。例子:</target>
        </trans-unit>
        <trans-unit id="411969aa31079ad6714c1419f7c08edef6d92a15" translate="yes" xml:space="preserve">
          <source>It's possible to use any of the above middlewares in your custom Rack stack.</source>
          <target state="translated">在你的自定义Rack堆栈中可以使用以上任何一个中间件。</target>
        </trans-unit>
        <trans-unit id="a3d4cccbe811b7396f09d0f801e04618ab0dac79" translate="yes" xml:space="preserve">
          <source>It's time to add a second model to the application. The second model will handle comments on articles.</source>
          <target state="translated">是时候给应用程序添加第二个模型了。第二个模型将处理对文章的评论。</target>
        </trans-unit>
        <trans-unit id="0ad56c35d6c96eef75a6ee75178cc603e11a32f0" translate="yes" xml:space="preserve">
          <source>It's very important here to use the &lt;code&gt;String&lt;/code&gt; version of the class, rather than the class itself. If you were to use the class, Rails would attempt to load that class and then reference the related table. This could lead to problems if the table didn't already exist. Therefore, a &lt;code&gt;String&lt;/code&gt; should be used and then converted to a class using &lt;code&gt;constantize&lt;/code&gt; in the engine later on.</source>
          <target state="translated">在这里使用类的 &lt;code&gt;String&lt;/code&gt; 版本而不是类本身非常重要。如果要使用该类，Rails会尝试加载该类，然后引用相关表。如果该表不存在，可能会导致问题。因此，应使用 &lt;code&gt;String&lt;/code&gt; ，然后在引擎中使用 &lt;code&gt;constantize&lt;/code&gt; 量化将其转换为类。</target>
        </trans-unit>
        <trans-unit id="82c4355aa174ea1134e7c02d2a116f276e1eee7a" translate="yes" xml:space="preserve">
          <source>Iterates through each error key, value pair in the error messages hash. Yields the attribute and the error for that attribute. If the attribute has more than one error message, yields once for each error message.</source>
          <target state="translated">遍历错误信息哈希中的每个错误键、值对。产生属性和该属性的错误信息。如果属性有多个错误信息,则每个错误信息产生一次。</target>
        </trans-unit>
        <trans-unit id="39312c7e1376cb1ad7cca45b9cf9c109cd96ff73" translate="yes" xml:space="preserve">
          <source>Iterates through each error object.</source>
          <target state="translated">遍历每个错误对象。</target>
        </trans-unit>
        <trans-unit id="9a3f6528f2606d1ed81f1e9f85b624a26b98cbbe" translate="yes" xml:space="preserve">
          <source>JOIN</source>
          <target state="translated">JOIN</target>
        </trans-unit>
        <trans-unit id="031a4e76f0b39d0df073d934da5fc48da8d737e5" translate="yes" xml:space="preserve">
          <source>JSON</source>
          <target state="translated">JSON</target>
        </trans-unit>
        <trans-unit id="fe0b7e20b2738d8025a2377f855de38e73f547f9" translate="yes" xml:space="preserve">
          <source>JSON and JSONB</source>
          <target state="translated">JSON和JSONB</target>
        </trans-unit>
        <trans-unit id="cf43040f699629e838a8715912bcf428aa5440fb" translate="yes" xml:space="preserve">
          <source>JSON is a JavaScript data format used by many Ajax libraries. Rails has built-in support for converting objects to JSON and rendering that JSON back to the browser:</source>
          <target state="translated">JSON是一种被许多Ajax库使用的JavaScript数据格式。Rails内置支持将对象转换为JSON,并将JSON渲染回浏览器。</target>
        </trans-unit>
        <trans-unit id="31c1bce502137da7db199329615126120773d1f0" translate="yes" xml:space="preserve">
          <source>JSON parameters</source>
          <target state="translated">JSON参数</target>
        </trans-unit>
        <trans-unit id="935b885e280c10afb46d2bf45f85bbea09bc94ce" translate="yes" xml:space="preserve">
          <source>JSON support</source>
          <target state="translated">JSON支持</target>
        </trans-unit>
        <trans-unit id="91b8bae1d5741163238caeb859f60f9aad22ca54" translate="yes" xml:space="preserve">
          <source>JSON::decode</source>
          <target state="translated">JSON::decode</target>
        </trans-unit>
        <trans-unit id="cd65102564a8ba6c57d96671fc65196b16e48b3c" translate="yes" xml:space="preserve">
          <source>JSON::encode</source>
          <target state="translated">JSON::encode</target>
        </trans-unit>
        <trans-unit id="92b18c9405f766007bd6109914f3813baf41ad56" translate="yes" xml:space="preserve">
          <source>JSON::parse_error</source>
          <target state="translated">JSON::parse_error</target>
        </trans-unit>
        <trans-unit id="19acdb4160eb288df993337f159e349c600848ff" translate="yes" xml:space="preserve">
          <source>JSON_ESCAPE</source>
          <target state="translated">JSON_ESCAPE</target>
        </trans-unit>
        <trans-unit id="c4f4583027599ec31d99dce1fd474812e595bec5" translate="yes" xml:space="preserve">
          <source>JSON_ESCAPE_REGEXP</source>
          <target state="translated">JSON_ESCAPE_REGEXP</target>
        </trans-unit>
        <trans-unit id="6b078a8fb6a84f103228ea09a5d693750075dfee" translate="yes" xml:space="preserve">
          <source>JS_ESCAPE_MAP</source>
          <target state="translated">JS_ESCAPE_MAP</target>
        </trans-unit>
        <trans-unit id="3a2bc94aa5df89cb534947cbbba66bbfa8f5d420" translate="yes" xml:space="preserve">
          <source>JavaScript Compression</source>
          <target state="translated">JavaScript压缩</target>
        </trans-unit>
        <trans-unit id="329f655713f7ed95d8ad672ec206ea61c89847f8" translate="yes" xml:space="preserve">
          <source>JavaScript asset compression requires you have a JavaScript runtime available on your system, in the absence of a runtime you will see an &lt;code&gt;execjs&lt;/code&gt; error during asset compilation. Usually macOS and Windows come with a JavaScript runtime installed. &lt;code&gt;therubyrhino&lt;/code&gt; is the recommended runtime for JRuby users and is added by default to the &lt;code&gt;Gemfile&lt;/code&gt; in apps generated under JRuby. You can investigate all the supported runtimes at &lt;a href=&quot;https://github.com/rails/execjs#readme&quot;&gt;ExecJS&lt;/a&gt;.</source>
          <target state="translated">JavaScript资产压缩要求您的系统上有一个JavaScript运行时，在没有运行时的情况下，资产编译期间会看到 &lt;code&gt;execjs&lt;/code&gt; 错误。通常，macOS和Windows都安装了JavaScript运行时。 &lt;code&gt;therubyrhino&lt;/code&gt; 是JRuby用户推荐的运行时，默认情况下会添加到在JRuby下生成的应用程序中的 &lt;code&gt;Gemfile&lt;/code&gt; 中。您可以在&lt;a href=&quot;https://github.com/rails/execjs#readme&quot;&gt;ExecJS上&lt;/a&gt;研究所有受支持的运行时。</target>
        </trans-unit>
        <trans-unit id="0950a27c9b54b1fadb8e152d01d78d9a8de8b0af" translate="yes" xml:space="preserve">
          <source>JavaScript asset compression requires you have a JavaScript runtime available on your system, in the absence of a runtime you will see an &lt;code&gt;execjs&lt;/code&gt; error during asset compression. Usually macOS and Windows come with a JavaScript runtime installed. &lt;code&gt;therubyrhino&lt;/code&gt; is the recommended runtime for JRuby users and is added by default to the &lt;code&gt;Gemfile&lt;/code&gt; in apps generated under JRuby. You can investigate all the supported runtimes at &lt;a href=&quot;https://github.com/rails/execjs#readme&quot;&gt;ExecJS&lt;/a&gt;.</source>
          <target state="translated">JavaScript资产压缩要求您的系统上有可用的JavaScript运行时，在没有运行时的情况下，资产压缩期间会看到 &lt;code&gt;execjs&lt;/code&gt; 错误。通常，macOS和Windows都安装了JavaScript运行时。 &lt;code&gt;therubyrhino&lt;/code&gt; 是JRuby用户推荐的运行时，默认情况下会添加到在JRuby下生成的应用程序中的 &lt;code&gt;Gemfile&lt;/code&gt; 中。您可以在&lt;a href=&quot;https://github.com/rails/execjs#readme&quot;&gt;ExecJS上&lt;/a&gt;研究所有受支持的运行时。</target>
        </trans-unit>
        <trans-unit id="c469bfe9f94b3c15c0a2967572561504964de859" translate="yes" xml:space="preserve">
          <source>JavaScript can also make requests to the server, and parse the response. It also has the ability to update information on the page. Combining these two powers, a JavaScript writer can make a web page that can update just parts of itself, without needing to get the full page data from the server. This is a powerful technique that we call Ajax.</source>
          <target state="translated">JavaScript还可以向服务器发出请求,并解析响应。它还具有更新页面信息的能力。结合这两种能力,一个JavaScript编写者可以制作一个网页,它可以只更新自己的一部分,而不需要从服务器上获取完整的页面数据。这是一种强大的技术,我们称之为Ajax。</target>
        </trans-unit>
        <trans-unit id="7bd16b36cdda0f2697deaaca766efe478f0bb26f" translate="yes" xml:space="preserve">
          <source>JavaScript view rendering doesn't do any preprocessing, so you shouldn't use ES6 syntax here.</source>
          <target state="translated">JavaScript视图渲染不做任何预处理,所以你不应该在这里使用ES6语法。</target>
        </trans-unit>
        <trans-unit id="e79342aa85fd4f1c22498783cd42d8faf5c0f966" translate="yes" xml:space="preserve">
          <source>JavaScriptHelper</source>
          <target state="translated">JavaScriptHelper</target>
        </trans-unit>
        <trans-unit id="4d1ff2f58b0a4a6adf2107fa93ff7226f28327a3" translate="yes" xml:space="preserve">
          <source>Job Execution</source>
          <target state="translated">工作执行</target>
        </trans-unit>
        <trans-unit id="ba8d06fda34fb43af828c544923775e18fb1a0b2" translate="yes" xml:space="preserve">
          <source>Job Identifier</source>
          <target state="translated">工作标识符</target>
        </trans-unit>
        <trans-unit id="3f331e97598d78f4160b82438f27bf259a5df56f" translate="yes" xml:space="preserve">
          <source>Job Testing</source>
          <target state="translated">工作测试</target>
        </trans-unit>
        <trans-unit id="e5baad04a61a328c9f20c8c710417477b5871973" translate="yes" xml:space="preserve">
          <source>Job arguments</source>
          <target state="translated">工作参数</target>
        </trans-unit>
        <trans-unit id="243efbade47e05637dd57919b72473a334187b42" translate="yes" xml:space="preserve">
          <source>Job object</source>
          <target state="translated">工作对象</target>
        </trans-unit>
        <trans-unit id="08d8ff960f1c7483a34d89f43b7bb3ac9cafa206" translate="yes" xml:space="preserve">
          <source>Job to destroy the records associated with a destroyed record in background.</source>
          <target state="translated">在后台销毁与销毁记录相关的记录的工作。</target>
        </trans-unit>
        <trans-unit id="e91b70d63ed47030600cb3d8ce6bdfdabe2a990d" translate="yes" xml:space="preserve">
          <source>Job: Any class inheriting from the adapter may set the priority on the job object relative to other jobs.</source>
          <target state="translated">作业。任何继承自适配器的类都可以设置作业对象相对于其他作业的优先级。</target>
        </trans-unit>
        <trans-unit id="3a6116842526736873ed5f69baef76f0d3c2c51b" translate="yes" xml:space="preserve">
          <source>Job: The number of retries can be set per instance of the job class.</source>
          <target state="translated">作业。可以设置每个工作类别的重试次数。</target>
        </trans-unit>
        <trans-unit id="bfef8c94380b329ced3bcf083ac61b7f2a6ce2ec" translate="yes" xml:space="preserve">
          <source>Job: The timeout can be set for each instance of the job class.</source>
          <target state="translated">作业,可以为作业类的每个实例设置超时。可以为每个作业类的实例设置超时。</target>
        </trans-unit>
        <trans-unit id="f8a539a40723c2241a7fba7916651de221c51cc8" translate="yes" xml:space="preserve">
          <source>Joining Across Databases</source>
          <target state="translated">跨数据库连接</target>
        </trans-unit>
        <trans-unit id="5e207af13c7f10c990fa0278c9a6d430dd7d1927" translate="yes" xml:space="preserve">
          <source>Joining Tables</source>
          <target state="translated">加入表格</target>
        </trans-unit>
        <trans-unit id="9cd1a12e9f4770062aa1cf8bf14ef4b159146a9b" translate="yes" xml:space="preserve">
          <source>Joining across clusters</source>
          <target state="translated">跨群组连接</target>
        </trans-unit>
        <trans-unit id="36cb6826dbbbacc9f0915d9e44ccb82925b04c72" translate="yes" xml:space="preserve">
          <source>Joins</source>
          <target state="translated">Joins</target>
        </trans-unit>
        <trans-unit id="b8202b1a0f9ac4ece76b1b53a1b999e3fec322b8" translate="yes" xml:space="preserve">
          <source>Joins that are also marked for preloading. In which case we should just eager load them. Note that this is a naive implementation because we could have strings and symbols which represent the same association, but that aren't matched by this. Also, we could have nested hashes which partially match, e.g. { a: :b } &amp;amp; { a: [:b, :c] }</source>
          <target state="translated">也标记为预加载的联接。在这种情况下，我们应该急于加载它们。请注意，这是一个幼稚的实现，因为我们可以使用表示相同关联但与此不匹配的字符串和符号。另外，我们可能有部分匹配的嵌套哈希，例如{a：：b}＆{a：[：b，：c]}</target>
        </trans-unit>
        <trans-unit id="6e55f603d9ec6b7739d6e41f2a606f221971eb79" translate="yes" xml:space="preserve">
          <source>Just about every Rails application interacts heavily with a database and, as a result, your tests will need a database to interact with as well. To write efficient tests, you'll need to understand how to set up this database and populate it with sample data.</source>
          <target state="translated">几乎每一个Rails应用程序都会与数据库进行大量的交互,因此,您的测试也需要一个数据库来进行交互。为了编写高效的测试,您需要了解如何设置这个数据库,并在其中填充样本数据。</target>
        </trans-unit>
        <trans-unit id="9a2e31fe0f7501188d972dc8b3009118ae147cce" translate="yes" xml:space="preserve">
          <source>Just about every Rails application will interact with a database. You can connect to the database by setting an environment variable &lt;code&gt;ENV['DATABASE_URL']&lt;/code&gt; or by using a configuration file called &lt;code&gt;config/database.yml&lt;/code&gt;.</source>
          <target state="translated">几乎每个Rails应用程序都将与数据库进行交互。您可以通过设置环境变量 &lt;code&gt;ENV['DATABASE_URL']&lt;/code&gt; 或使用名为 &lt;code&gt;config/database.yml&lt;/code&gt; 的配置文件来连接到数据库。</target>
        </trans-unit>
        <trans-unit id="a6e9bc826bb062c09dd75404c4f004cf69a6b37f" translate="yes" xml:space="preserve">
          <source>Just as with member routes, you can pass &lt;code&gt;:on&lt;/code&gt; to a route:</source>
          <target state="translated">与成员路线一样，您可以将 &lt;code&gt;:on&lt;/code&gt; 传递到路线：</target>
        </trans-unit>
        <trans-unit id="2f3d430d08030c44ea5008d7059f7767a85248fa" translate="yes" xml:space="preserve">
          <source>Just as with validations, it is also possible to skip callbacks by using the following methods:</source>
          <target state="translated">和验证一样,也可以通过使用以下方法跳过回调。</target>
        </trans-unit>
        <trans-unit id="65c24c89c19cd55b93be4dd2d2729c2fca34d806" translate="yes" xml:space="preserve">
          <source>Just as you have to filter file names for uploads, you have to do so for downloads. The &lt;code&gt;send_file()&lt;/code&gt; method sends files from the server to the client. If you use a file name, that the user entered, without filtering, any file can be downloaded:</source>
          <target state="translated">就像您必须为上传过滤文件名一样，对于下载也必须这样做。在 &lt;code&gt;send_file()&lt;/code&gt; 方法从服务器向客户端发送的文件。如果使用用户输入的文件名，而无需过滤，则可以下载任何文件：</target>
        </trans-unit>
        <trans-unit id="f7176b43f8be7e97b7f6abc748a4d1ba73e1f076" translate="yes" xml:space="preserve">
          <source>Just as you have to filter file names for uploads, you have to do so for downloads. The send_file() method sends files from the server to the client. If you use a file name, that the user entered, without filtering, any file can be downloaded:</source>
          <target state="translated">就像上传时必须过滤文件名一样,下载时也必须这样做。send_file()方法将文件从服务器发送到客户端。如果你使用用户输入的文件名,不经过过滤,任何文件都可以下载。</target>
        </trans-unit>
        <trans-unit id="6eba7e48f48826c026364d3ef9033ea0a2ba0cec" translate="yes" xml:space="preserve">
          <source>Just follow the flow and use constant autoloading always, never mix autoloading and &lt;code&gt;require&lt;/code&gt;. As a last resort, if some file absolutely needs to load a certain file use &lt;code&gt;require_dependency&lt;/code&gt; to play nice with constant autoloading. This option is rarely needed in practice, though.</source>
          <target state="translated">只需遵循流程并始终使用恒定的自动加载功能即可，切勿将自动加载功能与 &lt;code&gt;require&lt;/code&gt; 混合使用。作为最后的选择，如果某些文件绝对需要加载某些文件，请使用 &lt;code&gt;require_dependency&lt;/code&gt; 进行恒定自动加载。但是，实际上很少需要此选项。</target>
        </trans-unit>
        <trans-unit id="a80f691b02f3be73882bc31c3ea73a96722da7ff" translate="yes" xml:space="preserve">
          <source>Just like &lt;a href=&quot;calculations#method-i-pluck&quot;&gt;&lt;code&gt;pluck&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;calculations#method-i-pick&quot;&gt;&lt;code&gt;pick&lt;/code&gt;&lt;/a&gt; will only load the actual value, not the entire record object, so it's also more efficient. The value is, again like with pluck, typecast by the column type.</source>
          <target state="translated">就像&lt;a href=&quot;calculations#method-i-pluck&quot;&gt; &lt;code&gt;pluck&lt;/code&gt; &lt;/a&gt;一样，&lt;a href=&quot;calculations#method-i-pick&quot;&gt; &lt;code&gt;pick&lt;/code&gt; &lt;/a&gt;只会加载实际值，而不是整个记录对象，因此效率更高。同样，该值与pluck一样，是按列类型进行类型转换的。</target>
        </trans-unit>
        <trans-unit id="c7399cb44559f41a1a38147646227e775691d7d9" translate="yes" xml:space="preserve">
          <source>Just like &lt;a href=&quot;calculations#method-i-pluck&quot;&gt;pluck&lt;/a&gt;, &lt;a href=&quot;calculations#method-i-pick&quot;&gt;pick&lt;/a&gt; will only load the actual value, not the entire record object, so it's also more efficient. The value is, again like with pluck, typecast by the column type.</source>
          <target state="translated">就像&lt;a href=&quot;calculations#method-i-pluck&quot;&gt;pluck&lt;/a&gt;一样，&lt;a href=&quot;calculations#method-i-pick&quot;&gt;pick&lt;/a&gt;只会加载实际值，而不是整个记录对象，因此效率也更高。再次与pluck一样，该值也按列类型进行类型转换。</target>
        </trans-unit>
        <trans-unit id="b5142a3258360fa837bbaa68beca75ce9f59b7c8" translate="yes" xml:space="preserve">
          <source>Just like &lt;code&gt;include&lt;/code&gt;, concerns also support &lt;code&gt;prepend&lt;/code&gt; with a corresponding &lt;code&gt;prepended do&lt;/code&gt; callback. &lt;code&gt;module ClassMethods&lt;/code&gt; or &lt;code&gt;class_methods do&lt;/code&gt; are prepended as well.</source>
          <target state="translated">就像 &lt;code&gt;include&lt;/code&gt; ，担忧也支持 &lt;code&gt;prepend&lt;/code&gt; 了相应的 &lt;code&gt;prepended do&lt;/code&gt; 回调。 &lt;code&gt;module ClassMethods&lt;/code&gt; 或 &lt;code&gt;class_methods do&lt;/code&gt; 也是预先添加的。</target>
        </trans-unit>
        <trans-unit id="671b2bc997bf58b09f7c839fa2e9de6a259349c8" translate="yes" xml:space="preserve">
          <source>Just like &lt;code&gt;where&lt;/code&gt; clauses scopes are merged using &lt;code&gt;AND&lt;/code&gt; conditions.</source>
          <target state="translated">就像 &lt;code&gt;where&lt;/code&gt; 子句的作用域使用 &lt;code&gt;AND&lt;/code&gt; 条件合并一样。</target>
        </trans-unit>
        <trans-unit id="84d58a3285241049fdc7d2c0d02a7b2fde9d3be1" translate="yes" xml:space="preserve">
          <source>Just like &lt;code&gt;where&lt;/code&gt; clauses, scopes are merged using &lt;code&gt;AND&lt;/code&gt; conditions.</source>
          <target state="translated">就像 &lt;code&gt;where&lt;/code&gt; 子句一样，合并范围是使用 &lt;code&gt;AND&lt;/code&gt; 条件合并的。</target>
        </trans-unit>
        <trans-unit id="f64914076cb847b94287ce323657522270559d5e" translate="yes" xml:space="preserve">
          <source>Just like controller views, you can also have mailer layouts. The layout name needs to be the same as your mailer, such as &lt;code&gt;user_mailer.html.erb&lt;/code&gt; and &lt;code&gt;user_mailer.text.erb&lt;/code&gt; to be automatically recognized by your mailer as a layout.</source>
          <target state="translated">就像控制器视图一样，您也可以具有邮件程序布局。布局名称必须与邮件程序相同，例如 &lt;code&gt;user_mailer.html.erb&lt;/code&gt; 和 &lt;code&gt;user_mailer.text.erb&lt;/code&gt; ，以便邮件程序自动将其识别为布局。</target>
        </trans-unit>
        <trans-unit id="46bee7f81b2f9fe875003c5e26130b06678f387a" translate="yes" xml:space="preserve">
          <source>Just like for &lt;code&gt;app/controllers&lt;/code&gt;, you will find a &lt;code&gt;blorgh&lt;/code&gt; subdirectory under the &lt;code&gt;app/helpers&lt;/code&gt;, &lt;code&gt;app/jobs&lt;/code&gt;, &lt;code&gt;app/mailers&lt;/code&gt; and &lt;code&gt;app/models&lt;/code&gt; directories containing the associated &lt;code&gt;application_*.rb&lt;/code&gt; file for gathering common functionalities. By placing your files under this subdirectory and namespacing your objects, you prevent them from possibly clashing with identically-named elements within other engines or even within the application.</source>
          <target state="translated">就像 &lt;code&gt;app/controllers&lt;/code&gt; 一样，您将在 &lt;code&gt;app/helpers&lt;/code&gt; ， &lt;code&gt;app/jobs&lt;/code&gt; ， &lt;code&gt;app/mailers&lt;/code&gt; 和 &lt;code&gt;app/models&lt;/code&gt; 目录下找到一个 &lt;code&gt;blorgh&lt;/code&gt; 子目录，其中包含用于收集常用功能的关联 &lt;code&gt;application_*.rb&lt;/code&gt; 文件。通过将文件放置在此子目录下并为对象命名，可以防止它们与其他引擎甚至应用程序中名称相同的元素发生冲突。</target>
        </trans-unit>
        <trans-unit id="b0ff75e5509e5833aad29a601299fcb536fb4a17" translate="yes" xml:space="preserve">
          <source>Just like for &lt;code&gt;find_each&lt;/code&gt;, &lt;code&gt;batch_size&lt;/code&gt; establishes how many records will be retrieved in each group. For example, retrieving batches of 2500 records can be specified as:</source>
          <target state="translated">就像 &lt;code&gt;find_each&lt;/code&gt; 一样， &lt;code&gt;batch_size&lt;/code&gt; 确定在每个组中将检索多少条记录。例如，检索2500条记录的批处理可以指定为：</target>
        </trans-unit>
        <trans-unit id="753554100abd5092cfad1bab450b186806b19dcb" translate="yes" xml:space="preserve">
          <source>Just like the &lt;code&gt;:status&lt;/code&gt; option for &lt;code&gt;render&lt;/code&gt;, &lt;code&gt;:status&lt;/code&gt; for &lt;code&gt;redirect_to&lt;/code&gt; accepts both numeric and symbolic header designations.</source>
          <target state="translated">就像 &lt;code&gt;:status&lt;/code&gt; 的选项 &lt;code&gt;render&lt;/code&gt; ， &lt;code&gt;:status&lt;/code&gt; 为 &lt;code&gt;redirect_to&lt;/code&gt; 的同时接受数字和符号标题名称。</target>
        </trans-unit>
        <trans-unit id="48a1e320e2900c92a403a1b54619041dc6c7dbb0" translate="yes" xml:space="preserve">
          <source>Just like with controller views, use &lt;code&gt;yield&lt;/code&gt; to render the view inside the layout.</source>
          <target state="translated">与控制器视图一样，使用 &lt;code&gt;yield&lt;/code&gt; 可以在布局内部渲染视图。</target>
        </trans-unit>
        <trans-unit id="cfe563ecbc5c2d0727d8e68cb28dba126901d7cb" translate="yes" xml:space="preserve">
          <source>Just provide the polymorphic target type and Active Record will take care of the rest.</source>
          <target state="translated">只需提供多态的目标类型,Active Record将负责剩下的工作。</target>
        </trans-unit>
        <trans-unit id="860d8665c7153f5ed86a5af21fcfc9bdf178a9c7" translate="yes" xml:space="preserve">
          <source>Just remember: They'll be gone by the time the next action has been performed.</source>
          <target state="translated">只要记住。他们会在下一次行动前消失。</target>
        </trans-unit>
        <trans-unit id="dd65c1b4b3e66e765523873bd29cf5d6d6838189" translate="yes" xml:space="preserve">
          <source>KEY</source>
          <target state="translated">KEY</target>
        </trans-unit>
        <trans-unit id="d4539f21502f9a79f091307f97c17b2f1499a26d" translate="yes" xml:space="preserve">
          <source>KILOBYTE</source>
          <target state="translated">KILOBYTE</target>
        </trans-unit>
        <trans-unit id="74f46f9fed362d70b79016c97d7a171bb9094666" translate="yes" xml:space="preserve">
          <source>KV_RE</source>
          <target state="translated">KV_RE</target>
        </trans-unit>
        <trans-unit id="6dc3af60e01355817ee8300ffeb6bf0b63b5301c" translate="yes" xml:space="preserve">
          <source>Karel Minař&amp;iacute;k</source>
          <target state="translated">卡雷尔（KarelMinař&amp;iacute;k）</target>
        </trans-unit>
        <trans-unit id="e64ba95d856c5ca45c7426d6f65bec414c07937e" translate="yes" xml:space="preserve">
          <source>Keep in mind that database adapters handle certain serialization tasks for you. For instance: &lt;code&gt;json&lt;/code&gt; and &lt;code&gt;jsonb&lt;/code&gt; types in PostgreSQL will be converted between JSON object/array syntax and Ruby &lt;code&gt;Hash&lt;/code&gt; or &lt;code&gt;Array&lt;/code&gt; objects transparently. There is no need to use &lt;a href=&quot;classmethods#method-i-serialize&quot;&gt;&lt;code&gt;serialize&lt;/code&gt;&lt;/a&gt; in this case.</source>
          <target state="translated">请记住，数据库适配器会为您处理某些序列化任务。例如：PostgreSQL中的 &lt;code&gt;json&lt;/code&gt; 和 &lt;code&gt;jsonb&lt;/code&gt; 类型将在JSON对象/数组语法与Ruby &lt;code&gt;Hash&lt;/code&gt; 或 &lt;code&gt;Array&lt;/code&gt; 对象之间透明地转换。在这种情况下，无需使用&lt;a href=&quot;classmethods#method-i-serialize&quot;&gt; &lt;code&gt;serialize&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ca6310cd242689398be52a0e491b3ffc0905a27a" translate="yes" xml:space="preserve">
          <source>Keep in mind that database adapters handle certain serialization tasks for you. For instance: &lt;code&gt;json&lt;/code&gt; and &lt;code&gt;jsonb&lt;/code&gt; types in PostgreSQL will be converted between JSON object/array syntax and Ruby &lt;code&gt;Hash&lt;/code&gt; or &lt;code&gt;Array&lt;/code&gt; objects transparently. There is no need to use &lt;a href=&quot;classmethods#method-i-serialize&quot;&gt;serialize&lt;/a&gt; in this case.</source>
          <target state="translated">请记住，数据库适配器会为您处理某些序列化任务。例如：PostgreSQL中的 &lt;code&gt;json&lt;/code&gt; 和 &lt;code&gt;jsonb&lt;/code&gt; 类型将在JSON对象/数组语法与Ruby &lt;code&gt;Hash&lt;/code&gt; 或 &lt;code&gt;Array&lt;/code&gt; 对象之间透明地转换。在这种情况下，无需使用&lt;a href=&quot;classmethods#method-i-serialize&quot;&gt;序列化&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b37b81146f80a1a4919ec9c9b0e5d0cd85718f8c" translate="yes" xml:space="preserve">
          <source>Keep in mind that removing these middlewares will remove support for certain features in Action Controller.</source>
          <target state="translated">请记住,移除这些中间件将移除对Action Controller中某些功能的支持。</target>
        </trans-unit>
        <trans-unit id="f3cd42ebc58551029cf6d64890f34636b5f605b0" translate="yes" xml:space="preserve">
          <source>Keep in mind the order of these preprocessors is important. For example, if you called your JavaScript file &lt;code&gt;app/assets/javascripts/projects.erb.coffee&lt;/code&gt; then it would be processed with the CoffeeScript interpreter first, which wouldn't understand ERB and therefore you would run into problems.</source>
          <target state="translated">请记住，这些预处理器的顺序很重要。例如，如果您调用JavaScript文件 &lt;code&gt;app/assets/javascripts/projects.erb.coffee&lt;/code&gt; ，则将首先使用CoffeeScript解释器对其进行处理，因为它不了解ERB，因此会遇到问题。</target>
        </trans-unit>
        <trans-unit id="38b50dd97691ece4d75030debc9d7c69689f4370" translate="yes" xml:space="preserve">
          <source>Keep in mind, of course, that anything generated with these commands inside of an engine that has &lt;code&gt;isolate_namespace&lt;/code&gt; in the &lt;code&gt;Engine&lt;/code&gt; class will be namespaced.</source>
          <target state="translated">当然，请记住，在 &lt;code&gt;Engine&lt;/code&gt; 类中具有 &lt;code&gt;isolate_namespace&lt;/code&gt; 的引擎内部使用这些命令生成的任何内容都将被命名空间。</target>
        </trans-unit>
        <trans-unit id="811c5671e6f72a16320e58794cbdd505a4a8bfdd" translate="yes" xml:space="preserve">
          <source>Keep your master key safe. Do not commit your master key.</source>
          <target state="translated">妥善保管您的主钥匙。不要将你的主钥匙投入。</target>
        </trans-unit>
        <trans-unit id="5c3ffafd6d0bd987a08e86445a216acb025e6c9e" translate="yes" xml:space="preserve">
          <source>Keeping the Postman in Check</source>
          <target state="translated">管好邮差</target>
        </trans-unit>
        <trans-unit id="56d925c36d2e941d2af29d231d5dbe9ae819ce7d" translate="yes" xml:space="preserve">
          <source>Keeps an array of all the emails sent out through the Action Mailer with delivery_method :test. Most useful for unit and functional testing.</source>
          <target state="translated">保存通过Action Mailer发送的所有邮件的数组,其中delivery_method :test。对单元测试和功能测试最有用。</target>
        </trans-unit>
        <trans-unit id="37bcbef0779247a6b500aae75580d306dd7aad75" translate="yes" xml:space="preserve">
          <source>Keeps either the entire current flash or a specific flash entry available for the next action:</source>
          <target state="translated">保持整个当前闪光灯或特定的闪光灯条目供下一个操作使用。</target>
        </trans-unit>
        <trans-unit id="74808d3df030e992e7b9444241625147986487c1" translate="yes" xml:space="preserve">
          <source>Kernel</source>
          <target state="translated">Kernel</target>
        </trans-unit>
        <trans-unit id="c67dd20ee842986086a0a915ddc2a279490130ed" translate="yes" xml:space="preserve">
          <source>Key</source>
          <target state="translated">Key</target>
        </trans-unit>
        <trans-unit id="dccff3da927cfa30d8263467f25f4099d890d528" translate="yes" xml:space="preserve">
          <source>Key aspects of Ruby constants</source>
          <target state="translated">Ruby常量的主要方面</target>
        </trans-unit>
        <trans-unit id="bd612611d70de311a74efc2fb60fd72bd02e7463" translate="yes" xml:space="preserve">
          <source>Key prefix</source>
          <target state="translated">钥匙前缀</target>
        </trans-unit>
        <trans-unit id="1fd3bb93252c4e7c505b9a33e3f33adbbb95274d" translate="yes" xml:space="preserve">
          <source>Key used in the store</source>
          <target state="translated">店内使用的钥匙</target>
        </trans-unit>
        <trans-unit id="74018238351de8a4b5f41ef51f98e3f2c94d5837" translate="yes" xml:space="preserve">
          <source>KeyError</source>
          <target state="translated">KeyError</target>
        </trans-unit>
        <trans-unit id="74b7794756029ab4d216c6b5291e0a3c6b00afdc" translate="yes" xml:space="preserve">
          <source>KeyGenerator</source>
          <target state="translated">KeyGenerator</target>
        </trans-unit>
        <trans-unit id="38565bb17684d112a156b97c9fd4c097d914dfef" translate="yes" xml:space="preserve">
          <source>KeyGenerator#generate_key</source>
          <target state="translated">KeyGenerator#generate_key</target>
        </trans-unit>
        <trans-unit id="5e8529f8277cb52ad5e090f3e1129a3e4596b4ad" translate="yes" xml:space="preserve">
          <source>KeyGenerator::new</source>
          <target state="translated">KeyGenerator::new</target>
        </trans-unit>
        <trans-unit id="719e044fe2073788bf09e1d48dfff585870d5f03" translate="yes" xml:space="preserve">
          <source>Keys are Rails &lt;a href=&quot;timezone&quot;&gt;&lt;code&gt;TimeZone&lt;/code&gt;&lt;/a&gt; names, values are TZInfo identifiers.</source>
          <target state="translated">键是Rails &lt;a href=&quot;timezone&quot;&gt; &lt;code&gt;TimeZone&lt;/code&gt; &lt;/a&gt;名称，值是TZInfo标识符。</target>
        </trans-unit>
        <trans-unit id="759dc506a4c9361dcdcf96ba09aab32ce67fc6aa" translate="yes" xml:space="preserve">
          <source>Keys are Rails &lt;a href=&quot;timezone&quot;&gt;TimeZone&lt;/a&gt; names, values are TZInfo identifiers.</source>
          <target state="translated">键是Rails &lt;a href=&quot;timezone&quot;&gt;TimeZone&lt;/a&gt;名称，值是TZInfo标识符。</target>
        </trans-unit>
        <trans-unit id="a20d2ee49597daf4669b80fbd8282f66a254453f" translate="yes" xml:space="preserve">
          <source>Keys are always translated into Strings and are case sensitive. When an object is specified as a key and has a &lt;code&gt;cache_key&lt;/code&gt; method defined, this method will be called to define the key. Otherwise, the &lt;code&gt;to_param&lt;/code&gt; method will be called. Hashes and Arrays can also be used as keys. The elements will be delimited by slashes, and the elements within a &lt;a href=&quot;../../hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt; will be sorted by key so they are consistent.</source>
          <target state="translated">键始终转换为字符串，并且区分大小写。当将一个对象指定为键并定义了 &lt;code&gt;cache_key&lt;/code&gt; 方法时，将调用此方法来定义键。否则，将调用 &lt;code&gt;to_param&lt;/code&gt; 方法。哈希和数组也可以用作键。元素将用斜杠定界，并且&lt;a href=&quot;../../hash&quot;&gt; &lt;code&gt;Hash&lt;/code&gt; &lt;/a&gt;的元素将按键排序，以便它们保持一致。</target>
        </trans-unit>
        <trans-unit id="7c91d792d7d8ea478b77ee4fc93f40db3edb4c80" translate="yes" xml:space="preserve">
          <source>Keys are always translated into Strings and are case sensitive. When an object is specified as a key and has a &lt;code&gt;cache_key&lt;/code&gt; method defined, this method will be called to define the key. Otherwise, the &lt;code&gt;to_param&lt;/code&gt; method will be called. Hashes and Arrays can also be used as keys. The elements will be delimited by slashes, and the elements within a &lt;a href=&quot;../../hash&quot;&gt;Hash&lt;/a&gt; will be sorted by key so they are consistent.</source>
          <target state="translated">键始终转换为字符串，并且区分大小写。当将对象指定为键并定义了 &lt;code&gt;cache_key&lt;/code&gt; 方法时，将调用此方法来定义键。否则，将调用 &lt;code&gt;to_param&lt;/code&gt; 方法。哈希和数组也可以用作键。元素将由斜杠定界，并且&lt;a href=&quot;../../hash&quot;&gt;哈希中&lt;/a&gt;的元素将按键排序，以便它们保持一致。</target>
        </trans-unit>
        <trans-unit id="ed45856e9e6ecb02a978d31d54e643eb027da025" translate="yes" xml:space="preserve">
          <source>Keys are truncated with their own SHA2 digest if they exceed 1kB</source>
          <target state="translated">如果密钥超过1kB,则用自己的SHA2摘要截断。</target>
        </trans-unit>
        <trans-unit id="6dade8eae87c393093fe35456b0c0546385b2018" translate="yes" xml:space="preserve">
          <source>Keys should normally be unique. If the block returns the same value for different elements no collection is built for that key. The last item will win.</source>
          <target state="translated">键通常应该是唯一的。如果块对不同元素返回相同的值,则不会为该键建立集合。最后一项将获胜。</target>
        </trans-unit>
        <trans-unit id="3c4171878f85224ae8e8085027502b35e802765f" translate="yes" xml:space="preserve">
          <source>Keys with a '_html' suffix and keys named 'html' are marked as HTML safe. When you use them in views the HTML will not be escaped.</source>
          <target state="translated">后缀为'_html'的键和名为'html'的键被标记为HTML安全键。当你在视图中使用它们时,HTML将不会被转义。</target>
        </trans-unit>
        <trans-unit id="603962661dd677bfb30ebbf245488be607df467b" translate="yes" xml:space="preserve">
          <source>Knowing this, you can combine &lt;code&gt;select_tag&lt;/code&gt; and &lt;code&gt;options_for_select&lt;/code&gt; to achieve the desired, complete markup:</source>
          <target state="translated">知道了这一点，您可以结合使用 &lt;code&gt;select_tag&lt;/code&gt; 和 &lt;code&gt;options_for_select&lt;/code&gt; 以获得所需的完整标记：</target>
        </trans-unit>
        <trans-unit id="b9c048acd3b4935270bc39bf7303395a77e3c631" translate="yes" xml:space="preserve">
          <source>LAST_MODIFIED</source>
          <target state="translated">LAST_MODIFIED</target>
        </trans-unit>
        <trans-unit id="096c41c788487a970ec074e54230e758c0f4c4b5" translate="yes" xml:space="preserve">
          <source>LOCALHOST</source>
          <target state="translated">LOCALHOST</target>
        </trans-unit>
        <trans-unit id="40c3322b3b3d0d946724fe784d34663629e1932a" translate="yes" xml:space="preserve">
          <source>LOCATION</source>
          <target state="translated">LOCATION</target>
        </trans-unit>
        <trans-unit id="f7b234a238285a1f43faf56fe04f8eca0e8187cd" translate="yes" xml:space="preserve">
          <source>LOCK_NOT_AVAILABLE</source>
          <target state="translated">LOCK_NOT_AVAILABLE</target>
        </trans-unit>
        <trans-unit id="098eeaebc4158474bc2be818c08af354bd7af4d9" translate="yes" xml:space="preserve">
          <source>LOOKUP</source>
          <target state="translated">LOOKUP</target>
        </trans-unit>
        <trans-unit id="eea76aa993177151ffe54751f3710090c41018a2" translate="yes" xml:space="preserve">
          <source>Label references for associations (belongs_to, has_one, has_many)</source>
          <target state="translated">关联的标签引用(belongs_to,has_one,has_many)</target>
        </trans-unit>
        <trans-unit id="ef1b43b180145d1655abe2acaac47486dfdc28a0" translate="yes" xml:space="preserve">
          <source>Last configurable block to run. Called after frameworks initialize.</source>
          <target state="translated">最后运行的可配置块。在框架初始化后调用。</target>
        </trans-unit>
        <trans-unit id="091fde44725196b0d7b6b7ede88ee30e526d8fe4" translate="yes" xml:space="preserve">
          <source>Last time we left when the &lt;code&gt;app&lt;/code&gt; method was being defined:</source>
          <target state="translated">上次我们在定义 &lt;code&gt;app&lt;/code&gt; 方法时离开：</target>
        </trans-unit>
        <trans-unit id="510f1240320c0b4245e6973ae63e21990f3c7f94" translate="yes" xml:space="preserve">
          <source>Lastly an &lt;code&gt;after_find&lt;/code&gt; and &lt;code&gt;after_initialize&lt;/code&gt; callback is triggered for each object that is found and instantiated by a finder, with &lt;code&gt;after_initialize&lt;/code&gt; being triggered after new objects are instantiated as well.</source>
          <target state="translated">最后，为查找器发现并实例化的每个对象触发一次 &lt;code&gt;after_find&lt;/code&gt; 和 &lt;code&gt;after_initialize&lt;/code&gt; 回调，在实例化新对象之后也触发 &lt;code&gt;after_initialize&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a8edffefe23a3b0069154ba211dceaa5589a707c" translate="yes" xml:space="preserve">
          <source>Lastly, for new primary databases you need to set the &lt;code&gt;migrations_paths&lt;/code&gt; to the directory where you will store migrations for that database. We'll look more at &lt;code&gt;migrations_paths&lt;/code&gt; later on in this guide.</source>
          <target state="translated">最后，对于新的主数据库，您需要将 &lt;code&gt;migrations_paths&lt;/code&gt; 设置为将存储该数据库迁移的目录。我们将看到更多的 &lt;code&gt;migrations_paths&lt;/code&gt; 后来此指南中。</target>
        </trans-unit>
        <trans-unit id="5519aac47c42ea625f3e384185f96f912ddc1ee0" translate="yes" xml:space="preserve">
          <source>Lastly, for new writer databases you need to set the &lt;code&gt;migrations_paths&lt;/code&gt; to the directory where you will store migrations for that database. We'll look more at &lt;code&gt;migrations_paths&lt;/code&gt; later on in this guide.</source>
          <target state="translated">最后，对于新的编写器数据库，您需要将 &lt;code&gt;migrations_paths&lt;/code&gt; 设置为将存储该数据库迁移的目录。我们将在本指南的后面部分进一步介绍 &lt;code&gt;migrations_paths&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e11ef8043bdfd5d2effaa0c4ccffaea4aff10bd1" translate="yes" xml:space="preserve">
          <source>Lastly, simple content can be passed as a parameter:</source>
          <target state="translated">最后,简单的内容可以作为参数传递。</target>
        </trans-unit>
        <trans-unit id="b1a487af9f0197f34ab23417574667b914a550ec" translate="yes" xml:space="preserve">
          <source>Lastly, the &lt;code&gt;app/views&lt;/code&gt; directory contains a &lt;code&gt;layouts&lt;/code&gt; folder, which contains a file at &lt;code&gt;blorgh/application.html.erb&lt;/code&gt;. This file allows you to specify a layout for the engine. If this engine is to be used as a stand-alone engine, then you would add any customization to its layout in this file, rather than the application's &lt;code&gt;app/views/layouts/application.html.erb&lt;/code&gt; file.</source>
          <target state="translated">最后， &lt;code&gt;app/views&lt;/code&gt; 目录包含一个 &lt;code&gt;layouts&lt;/code&gt; 文件夹，该文件夹包含一个位于 &lt;code&gt;blorgh/application.html.erb&lt;/code&gt; 的文件。该文件允许您指定引擎的布局。如果要将此引擎用作独立引擎，则可以在此文件（而不是应用程序的 &lt;code&gt;app/views/layouts/application.html.erb&lt;/code&gt; 文件）中为其布局添加任何自定义项。</target>
        </trans-unit>
        <trans-unit id="4923e7c21c37b1490f6b455965aed466eb385e5e" translate="yes" xml:space="preserve">
          <source>Lastly, we can specify a default choice for the select box with the &lt;code&gt;:selected&lt;/code&gt; argument:</source>
          <target state="translated">最后，我们可以使用 &lt;code&gt;:selected&lt;/code&gt; 参数为选择框指定默认选项：</target>
        </trans-unit>
        <trans-unit id="cf0e45525464dbd04e79c657faf5c6b2fb11c005" translate="yes" xml:space="preserve">
          <source>Lastly, you can use sprintf-style % escapes in the template. This works slightly differently than the previous methods; you are responsible for ensuring that the values in the template are properly quoted. The values are passed to the connector for quoting, but the caller is responsible for ensuring they are enclosed in quotes in the resulting SQL. After quoting, the values are inserted using the same escapes as the Ruby core method &lt;code&gt;Kernel::sprintf&lt;/code&gt;.</source>
          <target state="translated">最后，您可以在模板中使用sprintf样式的％转义符。这与以前的方法略有不同。您有责任确保正确引用模板中的值。这些值将传递到连接器以进行引用，但是调用者负责确保将它们包含在结果SQL中的引号中。引用后，使用与Ruby核心方法 &lt;code&gt;Kernel::sprintf&lt;/code&gt; 相同的转义符插入值。</target>
        </trans-unit>
        <trans-unit id="392c8854d0981f89d43dab619acc0d260db6fa94" translate="yes" xml:space="preserve">
          <source>Later, when the body of the module definition is interpreted, a new entry is created in the constant table of the module object stored in the &lt;code&gt;Colors&lt;/code&gt; constant. That entry maps the name &quot;RED&quot; to the string &quot;0xff0000&quot;.</source>
          <target state="translated">稍后，当解释模块定义的主体时，将在 &lt;code&gt;Colors&lt;/code&gt; 常量中存储的模块对象的常量表中创建一个新条目。该条目将名称&amp;ldquo; RED&amp;rdquo;映射到字符串&amp;ldquo; 0xff0000&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="bec266232611c1ccc105a2b7fb87e8c1a59a2eca" translate="yes" xml:space="preserve">
          <source>Launch the web server again if you stopped it to generate the controller (&lt;code&gt;rails
server&lt;/code&gt;) and navigate to http://localhost:3000 in your browser. You'll see the &quot;Hello, Rails!&quot; message you put into &lt;code&gt;app/views/welcome/index.html.erb&lt;/code&gt;, indicating that this new route is indeed going to &lt;code&gt;WelcomeController&lt;/code&gt;'s &lt;code&gt;index&lt;/code&gt; action and is rendering the view correctly.</source>
          <target state="translated">如果您停止了Web服务器以生成控制器（ &lt;code&gt;rails server&lt;/code&gt; ），然后再次启动它，并在浏览器中导航到http：// localhost：3000。您会看到&amp;ldquo;你好，Rails！&amp;rdquo; 您输入到 &lt;code&gt;app/views/welcome/index.html.erb&lt;/code&gt; 中的消息，表明此新路线确实将进入 &lt;code&gt;WelcomeController&lt;/code&gt; 的 &lt;code&gt;index&lt;/code&gt; 操作并正确呈现了视图。</target>
        </trans-unit>
        <trans-unit id="af9e4ca75455ed36ae5cba0ec03de1506f297609" translate="yes" xml:space="preserve">
          <source>Launch!</source>
          <target state="translated">Launch!</target>
        </trans-unit>
        <trans-unit id="3b232ddd1deabfdc739b7f19ed66f965ea3e4797" translate="yes" xml:space="preserve">
          <source>Layers additional behavior on &lt;a href=&quot;time#method-c-at&quot;&gt;::at&lt;/a&gt; so that &lt;a href=&quot;activesupport/timewithzone&quot;&gt;ActiveSupport::TimeWithZone&lt;/a&gt; and &lt;a href=&quot;datetime&quot;&gt;DateTime&lt;/a&gt; instances can be used when called with a single argument</source>
          <target state="translated">在&lt;a href=&quot;time#method-c-at&quot;&gt;:: at&lt;/a&gt;上分层附加行为，以便在通过单个参数调用时可以使用&lt;a href=&quot;activesupport/timewithzone&quot;&gt;ActiveSupport :: TimeWithZone&lt;/a&gt;和&lt;a href=&quot;datetime&quot;&gt;DateTime&lt;/a&gt;实例</target>
        </trans-unit>
        <trans-unit id="de73d00b2c752e040525128277ab5e9682434f68" translate="yes" xml:space="preserve">
          <source>Layers additional behavior on &lt;a href=&quot;time#method-c-at&quot;&gt;&lt;code&gt;Time.at&lt;/code&gt;&lt;/a&gt; so that &lt;a href=&quot;activesupport/timewithzone&quot;&gt;&lt;code&gt;ActiveSupport::TimeWithZone&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;datetime&quot;&gt;&lt;code&gt;DateTime&lt;/code&gt;&lt;/a&gt; instances can be used when called with a single argument</source>
          <target state="translated">在&lt;a href=&quot;time#method-c-at&quot;&gt; &lt;code&gt;Time.at&lt;/code&gt; &lt;/a&gt;上分层其他行为，以便在通过单个参数调用时可以使用&lt;a href=&quot;activesupport/timewithzone&quot;&gt; &lt;code&gt;ActiveSupport::TimeWithZone&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;datetime&quot;&gt; &lt;code&gt;DateTime&lt;/code&gt; &lt;/a&gt;实例</target>
        </trans-unit>
        <trans-unit id="450c7c23c31cb0b2f54d83184ce79687a2b74fa0" translate="yes" xml:space="preserve">
          <source>Layers additional behavior on &lt;a href=&quot;time#method-i-eql-3F&quot;&gt;#eql?&lt;/a&gt; so that &lt;a href=&quot;activesupport/timewithzone&quot;&gt;ActiveSupport::TimeWithZone&lt;/a&gt; instances can be eql? to an equivalent &lt;a href=&quot;time&quot;&gt;Time&lt;/a&gt;</source>
          <target state="translated">在&lt;a href=&quot;time#method-i-eql-3F&quot;&gt;#eql&lt;/a&gt;上叠加其他行为？这样&lt;a href=&quot;activesupport/timewithzone&quot;&gt;ActiveSupport :: TimeWithZone&lt;/a&gt;实例可以是eql？到等效&lt;a href=&quot;time&quot;&gt;时间&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5a12d9cbeb593495ba2e988c7c8941a3ecb5512c" translate="yes" xml:space="preserve">
          <source>Layers additional behavior on &lt;a href=&quot;time#method-i-eql-3F&quot;&gt;&lt;code&gt;Time#eql?&lt;/code&gt;&lt;/a&gt; so that &lt;a href=&quot;activesupport/timewithzone&quot;&gt;&lt;code&gt;ActiveSupport::TimeWithZone&lt;/code&gt;&lt;/a&gt; instances can be eql? to an equivalent &lt;a href=&quot;time&quot;&gt;&lt;code&gt;Time&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">在&lt;a href=&quot;time#method-i-eql-3F&quot;&gt; &lt;code&gt;Time#eql?&lt;/code&gt; &lt;/a&gt;上分层其他行为？这样&lt;a href=&quot;activesupport/timewithzone&quot;&gt; &lt;code&gt;ActiveSupport::TimeWithZone&lt;/code&gt; &lt;/a&gt;实例可以是eql？到相等的&lt;a href=&quot;time&quot;&gt; &lt;code&gt;Time&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4b38f51a09e969dada758addbb48c5faf21f8a94" translate="yes" xml:space="preserve">
          <source>Layers additional behavior on DateTime#&amp;lt;=&amp;gt; so that &lt;a href=&quot;time&quot;&gt;&lt;code&gt;Time&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;activesupport/timewithzone&quot;&gt;&lt;code&gt;ActiveSupport::TimeWithZone&lt;/code&gt;&lt;/a&gt; instances can be compared with a &lt;a href=&quot;datetime&quot;&gt;&lt;code&gt;DateTime&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在DateTime＃&amp;lt;=&amp;gt;上分层其他行为，以便可以将&lt;a href=&quot;time&quot;&gt; &lt;code&gt;Time&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;activesupport/timewithzone&quot;&gt; &lt;code&gt;ActiveSupport::TimeWithZone&lt;/code&gt; &lt;/a&gt;实例与&lt;a href=&quot;datetime&quot;&gt; &lt;code&gt;DateTime&lt;/code&gt; &lt;/a&gt;进行比较。</target>
        </trans-unit>
        <trans-unit id="7d321d86ff6cc58af6defb3f60342a2302fa2218" translate="yes" xml:space="preserve">
          <source>Layers additional behavior on DateTime#&amp;lt;=&amp;gt; so that &lt;a href=&quot;time&quot;&gt;Time&lt;/a&gt; and &lt;a href=&quot;activesupport/timewithzone&quot;&gt;ActiveSupport::TimeWithZone&lt;/a&gt; instances can be compared with a &lt;a href=&quot;datetime&quot;&gt;DateTime&lt;/a&gt;.</source>
          <target state="translated">在DateTime＃&amp;lt;=&amp;gt;上分层其他行为，以便可以将&lt;a href=&quot;time&quot;&gt;Time&lt;/a&gt;和&lt;a href=&quot;activesupport/timewithzone&quot;&gt;ActiveSupport :: TimeWithZone&lt;/a&gt;实例与&lt;a href=&quot;datetime&quot;&gt;DateTime&lt;/a&gt;进行比较。</target>
        </trans-unit>
        <trans-unit id="64305a85ea672eb6ee37a080535d6592fb2e7db8" translate="yes" xml:space="preserve">
          <source>Layers additional behavior on Time#&amp;lt;=&amp;gt; so that &lt;a href=&quot;datetime&quot;&gt;&lt;code&gt;DateTime&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;activesupport/timewithzone&quot;&gt;&lt;code&gt;ActiveSupport::TimeWithZone&lt;/code&gt;&lt;/a&gt; instances can be chronologically compared with a &lt;a href=&quot;time&quot;&gt;&lt;code&gt;Time&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">在Time＃&amp;lt;=&amp;gt;上分层其他行为，以便可以按时间顺序将&lt;a href=&quot;datetime&quot;&gt; &lt;code&gt;DateTime&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;activesupport/timewithzone&quot;&gt; &lt;code&gt;ActiveSupport::TimeWithZone&lt;/code&gt; &lt;/a&gt;实例与&lt;a href=&quot;time&quot;&gt; &lt;code&gt;Time&lt;/code&gt; &lt;/a&gt;进行比较</target>
        </trans-unit>
        <trans-unit id="29c255a938da046a574f295ca103dddf42d32232" translate="yes" xml:space="preserve">
          <source>Layers additional behavior on Time#&amp;lt;=&amp;gt; so that &lt;a href=&quot;datetime&quot;&gt;DateTime&lt;/a&gt; and &lt;a href=&quot;activesupport/timewithzone&quot;&gt;ActiveSupport::TimeWithZone&lt;/a&gt; instances can be chronologically compared with a &lt;a href=&quot;time&quot;&gt;Time&lt;/a&gt;</source>
          <target state="translated">在Time＃&amp;lt;=&amp;gt;上分层其他行为，以便可以按时间顺序将&lt;a href=&quot;datetime&quot;&gt;DateTime&lt;/a&gt;和&lt;a href=&quot;activesupport/timewithzone&quot;&gt;ActiveSupport :: TimeWithZone&lt;/a&gt;实例与&lt;a href=&quot;time&quot;&gt;时间&lt;/a&gt;进行比较</target>
        </trans-unit>
        <trans-unit id="8daa234f4e9273cda7590ab2e63f033cc2e446cd" translate="yes" xml:space="preserve">
          <source>Laying down the groundwork</source>
          <target state="translated">奠定基础</target>
        </trans-unit>
        <trans-unit id="ddc2e0175464c8ae5a4d0b334ec3310ddf23aae7" translate="yes" xml:space="preserve">
          <source>Layout assignment</source>
          <target state="translated">布局分配</target>
        </trans-unit>
        <trans-unit id="01655ad5977ee9d7376ffb682322087942af96db" translate="yes" xml:space="preserve">
          <source>Layout declarations cascade downward in the hierarchy, and more specific layout declarations always override more general ones. For example:</source>
          <target state="translated">布局声明在层次结构中逐级向下,更具体的布局声明总是覆盖更一般的声明。例如:</target>
        </trans-unit>
        <trans-unit id="28e6f54e33a1151bfd4c7cc4affd14df3525f2db" translate="yes" xml:space="preserve">
          <source>Layouts</source>
          <target state="translated">Layouts</target>
        </trans-unit>
        <trans-unit id="9c2227b01890429dea82f0435c986a7de2991348" translate="yes" xml:space="preserve">
          <source>Layouts and Rendering in Rails</source>
          <target state="translated">Rails中的布局和渲染</target>
        </trans-unit>
        <trans-unit id="5e792861fadd8548975876f8194dfffbf0cb481c" translate="yes" xml:space="preserve">
          <source>Layouts can be used to render a common view template around the results of Rails controller actions. Typically, a Rails application will have a couple of layouts that pages will be rendered within. For example, a site might have one layout for a logged in user and another for the marketing or sales side of the site. The logged in user layout might include top-level navigation that should be present across many controller actions. The sales layout for a SaaS app might include top-level navigation for things like &quot;Pricing&quot; and &quot;Contact Us&quot; pages. You would expect each layout to have a different look and feel. You can read about layouts in more detail in the &lt;a href=&quot;layouts_and_rendering&quot;&gt;Layouts and Rendering in Rails&lt;/a&gt; guide.</source>
          <target state="translated">布局可用于围绕Rails控制器操作的结果呈现公共视图模板。通常，Rails应用程序将具有几个页面将在其中呈现的布局。例如，一个网站可能具有一个布局用于登录用户，而另一布局用于该站点的市场营销或销售。登录的用户布局可能包含应该在许多控制器操作中出现的顶级导航。 SaaS应用程序的销售布局可能包括顶级导航，例如&amp;ldquo;定价&amp;rdquo;和&amp;ldquo;联系我们&amp;rdquo;页面。您可能希望每种布局都有不同的外观。您可以&lt;a href=&quot;layouts_and_rendering&quot;&gt;在《 Rails&lt;/a&gt;中的布局和渲染》指南中详细了解布局。</target>
        </trans-unit>
        <trans-unit id="48470ed7993d797dbe5e8d27e23dd9a217c53643" translate="yes" xml:space="preserve">
          <source>Layouts specified at the controller level support the &lt;code&gt;:only&lt;/code&gt; and &lt;code&gt;:except&lt;/code&gt; options. These options take either a method name, or an array of method names, corresponding to method names within the controller:</source>
          <target state="translated">在控制器级别指定的布局支持 &lt;code&gt;:only&lt;/code&gt; 和 &lt;code&gt;:except&lt;/code&gt; 选项。这些选项采用与控制器内的方法名称相对应的方法名称或方法名称数组：</target>
        </trans-unit>
        <trans-unit id="e27583837c86c78aaebaf82c394f36c53e1ccbcf" translate="yes" xml:space="preserve">
          <source>Layouts#action_has_layout?</source>
          <target state="translated">Layouts#action_has_layout?</target>
        </trans-unit>
        <trans-unit id="f7cade8c906e9d8975259c8d26198e469b8c71e4" translate="yes" xml:space="preserve">
          <source>Layouts::ClassMethods</source>
          <target state="translated">Layouts::ClassMethods</target>
        </trans-unit>
        <trans-unit id="5617eb863672173bd45cabc2c17a35b9e442eed4" translate="yes" xml:space="preserve">
          <source>Layouts::ClassMethods#layout</source>
          <target state="translated">Layouts::ClassMethods#layout</target>
        </trans-unit>
        <trans-unit id="dab591e309e317fa64fcc8cc09c071b74932d444" translate="yes" xml:space="preserve">
          <source>Lazily load TZInfo::Timezone instances only when they're needed.</source>
          <target state="translated">只有在需要的时候才懒得加载TZInfo::Timezone实例。</target>
        </trans-unit>
        <trans-unit id="4acd3d668558126efd2cfb5861479b741fa7210e" translate="yes" xml:space="preserve">
          <source>LazyLoadHooks</source>
          <target state="translated">LazyLoadHooks</target>
        </trans-unit>
        <trans-unit id="05f23ec34b8f5c1c142321cf9fb3a41254f5ed9b" translate="yes" xml:space="preserve">
          <source>LazyLoadHooks#on_load</source>
          <target state="translated">LazyLoadHooks#on_load</target>
        </trans-unit>
        <trans-unit id="43d15a08d31d62de7b68ddb2009b76398fc6fafd" translate="yes" xml:space="preserve">
          <source>LazyLoadHooks#run_load_hooks</source>
          <target state="translated">LazyLoadHooks#run_load_hooks</target>
        </trans-unit>
        <trans-unit id="f56145331f8573663f749e0585fba9bafdedf906" translate="yes" xml:space="preserve">
          <source>Leading colons would make the first segment absolute rather than relative: &lt;code&gt;::Billing::Invoice&lt;/code&gt;. That would force &lt;code&gt;Billing&lt;/code&gt; to be looked up only as a top-level constant.</source>
          <target state="translated">前导冒号会使第一部分定为绝对而非相对 &lt;code&gt;::Billing::Invoice&lt;/code&gt; 。这将迫使 &lt;code&gt;Billing&lt;/code&gt; 只被视为顶级常量。</target>
        </trans-unit>
        <trans-unit id="0205f20e6f02e7e5bf0f090188c3352d3378c901" translate="yes" xml:space="preserve">
          <source>Lean on the protect_from_forgery declaration to mark which actions are due for same-origin request verification. If protect_from_forgery is enabled on an action, this before_action flags its after_action to verify that JavaScript responses are for XHR requests, ensuring they follow the browser's same-origin policy.</source>
          <target state="translated">倚靠 protect_from_forgery 声明来标记哪些动作应该进行同源请求验证。如果在一个动作上启用了protect_from_forgery,那么这个before_action就会标记它的after_action来验证JavaScript响应是否为XHR请求,确保它们遵循浏览器的同源策略。</target>
        </trans-unit>
        <trans-unit id="d80449c77af0b47c205fab1563e049bc44130805" translate="yes" xml:space="preserve">
          <source>Learn more about &lt;a href=&quot;security#custom-credentials&quot;&gt;managing credentials later in this guide&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;security#custom-credentials&quot;&gt;稍后在本指南中&lt;/a&gt;了解有关管理凭据的更多信息</target>
        </trans-unit>
        <trans-unit id="1ad1bc4649e118e58e58b46a15a459da27fdfed7" translate="yes" xml:space="preserve">
          <source>Learn more about &lt;code&gt;redirect_to&lt;/code&gt; and what options you have in &lt;a href=&quot;redirecting&quot;&gt;&lt;code&gt;ActionController::Redirecting&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">了解有关 &lt;code&gt;redirect_to&lt;/code&gt; 以及&lt;a href=&quot;redirecting&quot;&gt; &lt;code&gt;ActionController::Redirecting&lt;/code&gt; &lt;/a&gt;具有哪些选项的更多信息。</target>
        </trans-unit>
        <trans-unit id="5120024867e2bd45c0226da8ee5ccca4d252aa19" translate="yes" xml:space="preserve">
          <source>Learn more about &lt;code&gt;redirect_to&lt;/code&gt; and what options you have in &lt;a href=&quot;redirecting&quot;&gt;ActionController::Redirecting&lt;/a&gt;.</source>
          <target state="translated">了解有关 &lt;code&gt;redirect_to&lt;/code&gt; 以及&lt;a href=&quot;redirecting&quot;&gt;ActionController :: Redirecting中&lt;/a&gt;具有哪些选项的更多信息。</target>
        </trans-unit>
        <trans-unit id="2680ad714bae01fb2a75924986c28aa6fbc21993" translate="yes" xml:space="preserve">
          <source>Learn more about CSRF attacks and securing your application in the &lt;a href=&quot;https://guides.rubyonrails.org/security.html&quot;&gt;Ruby on Rails Security Guide&lt;/a&gt;.</source>
          <target state="translated">在&lt;a href=&quot;https://guides.rubyonrails.org/security.html&quot;&gt;Ruby on Rails安全指南中&lt;/a&gt;了解有关CSRF攻击和保护应用程序的更多信息。</target>
        </trans-unit>
        <trans-unit id="d03a367fb887c4a017cd9d70d02779563c3dfabe" translate="yes" xml:space="preserve">
          <source>Learn more about Unobtrusive JavaScript on &lt;a href=&quot;working_with_javascript_in_rails&quot;&gt;Working With JavaScript in Rails&lt;/a&gt; guide.</source>
          <target state="translated">&lt;a href=&quot;working_with_javascript_in_rails&quot;&gt;在Rails&lt;/a&gt;指南中了解有关使用JavaScript的更多信息。</target>
        </trans-unit>
        <trans-unit id="3a20c5f3f21fbfde638b451c2ec404f619773284" translate="yes" xml:space="preserve">
          <source>Learn more about credentials with &lt;code&gt;bin/rails credentials:help&lt;/code&gt;.</source>
          <target state="translated">了解更多有关带有 &lt;code&gt;bin/rails credentials:help&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="49a7c9654d7d32bf1a7434e36ba31c8a9d52bd04" translate="yes" xml:space="preserve">
          <source>Learn more about credentials with &lt;code&gt;rails credentials:help&lt;/code&gt;.</source>
          <target state="translated">了解更多有关带有 &lt;code&gt;rails credentials:help&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6087ad887326b13b7e705f0f5b49332398028b13" translate="yes" xml:space="preserve">
          <source>Learn more about other session storages in &lt;a href=&quot;action_controller_overview#session&quot;&gt;Action Controller Overview Guide&lt;/a&gt;.</source>
          <target state="translated">在&lt;a href=&quot;action_controller_overview#session&quot;&gt;《 Action Controller概述指南》中&lt;/a&gt;了解有关其他会话存储的更多信息。</target>
        </trans-unit>
        <trans-unit id="a361189388c27c3316f9ffe0894462c23768bd0d" translate="yes" xml:space="preserve">
          <source>Learning Rack</source>
          <target state="translated">学习架</target>
        </trans-unit>
        <trans-unit id="4004c46012ce2e74f00d47a6df53669577458d0c" translate="yes" xml:space="preserve">
          <source>Leaving the hash off gives the wrong link:</source>
          <target state="translated">把哈希值去掉,就会出现错误的链接。</target>
        </trans-unit>
        <trans-unit id="57cabcc429f05e3d4a452b279c39df253df905c9" translate="yes" xml:space="preserve">
          <source>Legacy syntax</source>
          <target state="translated">遗留语法</target>
        </trans-unit>
        <trans-unit id="fce9208985a0113f6dd633ee81af6e35d8918cff" translate="yes" xml:space="preserve">
          <source>Less File Lookups</source>
          <target state="translated">减少文件查询</target>
        </trans-unit>
        <trans-unit id="21025e2c77d6b2c7631c77a921456691873eefc3" translate="yes" xml:space="preserve">
          <source>Let &lt;a href=&quot;proxyobject&quot;&gt;&lt;code&gt;ActiveSupport::ProxyObject&lt;/code&gt;&lt;/a&gt; at least raise exceptions.</source>
          <target state="translated">让&lt;a href=&quot;proxyobject&quot;&gt; &lt;code&gt;ActiveSupport::ProxyObject&lt;/code&gt; &lt;/a&gt;至少引发异常。</target>
        </trans-unit>
        <trans-unit id="78d8e5ae3e5b6af734ef6545182637310d10213b" translate="yes" xml:space="preserve">
          <source>Let &lt;a href=&quot;proxyobject&quot;&gt;ActiveSupport::ProxyObject&lt;/a&gt; at least raise exceptions.</source>
          <target state="translated">让&lt;a href=&quot;proxyobject&quot;&gt;ActiveSupport :: ProxyObject&lt;/a&gt;至少引发异常。</target>
        </trans-unit>
        <trans-unit id="a72602d5db80600fb59df54bed6dd5174594a0dd" translate="yes" xml:space="preserve">
          <source>Let us also move that new comment section out to its own partial. Again, you create a file &lt;code&gt;app/views/comments/_form.html.erb&lt;/code&gt; containing:</source>
          <target state="translated">让我们还将新的评论部分移到它自己的部分。同样，您将创建一个文件 &lt;code&gt;app/views/comments/_form.html.erb&lt;/code&gt; ,其中包含：</target>
        </trans-unit>
        <trans-unit id="96a0635a516af1771ae2eb32708ac151fe4aaaf8" translate="yes" xml:space="preserve">
          <source>Let us modify &lt;code&gt;test_should_create_article&lt;/code&gt; test in &lt;code&gt;articles_controller_test.rb&lt;/code&gt; so that all our test pass:</source>
          <target state="translated">让我们修改 &lt;code&gt;test_should_create_article&lt;/code&gt; 试验 &lt;code&gt;articles_controller_test.rb&lt;/code&gt; 让我们所有的测试流程：</target>
        </trans-unit>
        <trans-unit id="dab4c465b3545675931666804e362f8235200f4c" translate="yes" xml:space="preserve">
          <source>Let us run this newly added test (where &lt;code&gt;6&lt;/code&gt; is the number of line where the test is defined).</source>
          <target state="translated">让我们运行这个新添加的测试（其中 &lt;code&gt;6&lt;/code&gt; 是定义测试的行数）。</target>
        </trans-unit>
        <trans-unit id="b9fcf90507f73f5eb8f58f17d19d3ae4f2f9910f" translate="yes" xml:space="preserve">
          <source>Let's add a method called &lt;code&gt;welcome_email&lt;/code&gt;, that will send an email to the user's registered email address:</source>
          <target state="translated">让我们添加一个名为 &lt;code&gt;welcome_email&lt;/code&gt; 的方法，该方法会将电子邮件发送到用户的注册电子邮件地址：</target>
        </trans-unit>
        <trans-unit id="4ce5b9dbf4d8187abe529ddcf55601c38cf4ebe3" translate="yes" xml:space="preserve">
          <source>Let's add a private method to the bottom of &lt;code&gt;app/controllers/articles_controller.rb&lt;/code&gt; named &lt;code&gt;article_params&lt;/code&gt; that filters &lt;code&gt;params&lt;/code&gt;. And let's change &lt;code&gt;create&lt;/code&gt; to use it:</source>
          <target state="translated">让我们在 &lt;code&gt;app/controllers/articles_controller.rb&lt;/code&gt; 的底部添加一个名为 &lt;code&gt;article_params&lt;/code&gt; 的私有方法，该方法可以过滤 &lt;code&gt;params&lt;/code&gt; 。让我们更改 &lt;code&gt;create&lt;/code&gt; 以使用它：</target>
        </trans-unit>
        <trans-unit id="5269d07ce7dd2783f1dedc68e2d3fa0b3123b91c" translate="yes" xml:space="preserve">
          <source>Let's add a replica for the first configuration, and a second database called animals and a replica for that as well. To do this we need to change our &lt;code&gt;database.yml&lt;/code&gt; from a 2-tier to a 3-tier config.</source>
          <target state="translated">让我们为第一种配置添加一个副本，然后为动物添加第二个数据库，并为其添加一个副本。为此，我们需要将 &lt;code&gt;database.yml&lt;/code&gt; 从2层配置更改为3层配置。</target>
        </trans-unit>
        <trans-unit id="79e1f74aa6ec7b5a5077c8b42b57bd04f8515dc5" translate="yes" xml:space="preserve">
          <source>Let's add a replica for the primary, a new writer called animals and a replica for that as well. To do this we need to change our &lt;code&gt;database.yml&lt;/code&gt; from a 2-tier to a 3-tier config.</source>
          <target state="translated">让我们为主要对象添加一个副本，一个称为动物的新作者，并为其添加一个副本。为此，我们需要将 &lt;code&gt;database.yml&lt;/code&gt; 从2层配置更改为3层配置。</target>
        </trans-unit>
        <trans-unit id="b48e65eb47d949d7844ff9e16bf80abf6b052f5f" translate="yes" xml:space="preserve">
          <source>Let's add an integration test to our blog application. We'll start with a basic workflow of creating a new blog article, to verify that everything is working properly.</source>
          <target state="translated">让我们为我们的博客应用添加一个集成测试。我们将从创建一个新的博客文章的基本工作流程开始,来验证一切是否正常工作。</target>
        </trans-unit>
        <trans-unit id="6e3f79475457cf9a5f2a016839cf6a8e669854a2" translate="yes" xml:space="preserve">
          <source>Let's add links to the other views as well, starting with adding this &quot;New Article&quot; link to &lt;code&gt;app/views/articles/index.html.erb&lt;/code&gt;, placing it above the &lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt; tag:</source>
          <target state="translated">让我们也添加到其他视图的链接，首先将此&amp;ldquo;新文章&amp;rdquo;链接添加到 &lt;code&gt;app/views/articles/index.html.erb&lt;/code&gt; ，然后将其放置在 &lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt; 标记上方：</target>
        </trans-unit>
        <trans-unit id="f3740501fd9d5dc2e11e1031b17a964d35358f21" translate="yes" xml:space="preserve">
          <source>Let's add some validations to our model in &lt;code&gt;app/models/article.rb&lt;/code&gt;:</source>
          <target state="translated">让我们在 &lt;code&gt;app/models/article.rb&lt;/code&gt; 中为我们的模型添加一些验证：</target>
        </trans-unit>
        <trans-unit id="49d80491e9eb79684958a135d6d1dcac3770b0de" translate="yes" xml:space="preserve">
          <source>Let's add that &lt;code&gt;show&lt;/code&gt; action now, below the &lt;code&gt;index&lt;/code&gt; action in &lt;code&gt;app/controllers/articles_controller.rb&lt;/code&gt;:</source>
          <target state="translated">现在，在 &lt;code&gt;app/controllers/articles_controller.rb&lt;/code&gt; 中的 &lt;code&gt;index&lt;/code&gt; 动作下方添加 &lt;code&gt;show&lt;/code&gt; 动作：</target>
        </trans-unit>
        <trans-unit id="dc3ecee55d65665c35f62547c455cc419b0dc82d" translate="yes" xml:space="preserve">
          <source>Let's also make a text part for this email. Not all clients prefer HTML emails, and so sending both is best practice. To do this, create a file called &lt;code&gt;welcome_email.text.erb&lt;/code&gt; in &lt;code&gt;app/views/user_mailer/&lt;/code&gt;:</source>
          <target state="translated">让我们为该电子邮件添加文本部分。并非所有客户都喜欢HTML电子邮件，因此最好同时发送这两种电子邮件。为此，请在 &lt;code&gt;app/views/user_mailer/&lt;/code&gt; 创建一个名为 &lt;code&gt;welcome_email.text.erb&lt;/code&gt; 的文件：</target>
        </trans-unit>
        <trans-unit id="6dfb10465abe14397694d1ef3fbb975786f3e93d" translate="yes" xml:space="preserve">
          <source>Let's analyze an example to really understand what that means. While common abuses of language like &quot;the &lt;code&gt;String&lt;/code&gt; class&quot; are convenient, the exposition is going to be precise here for didactic purposes.</source>
          <target state="translated">让我们分析一个示例以真正理解其含义。尽管常见的滥用语言（例如&amp;ldquo; &lt;code&gt;String&lt;/code&gt; 类&amp;rdquo;）很方便，但出于教学目的，这里的说明将很精确。</target>
        </trans-unit>
        <trans-unit id="f4ce79534391e97d4f4aa9c82cc741ad12c8def6" translate="yes" xml:space="preserve">
          <source>Let's assume we want to deploy our application to &quot;/app1&quot;. Rails needs to know this directory to generate the appropriate routes:</source>
          <target state="translated">假设我们想把应用部署到&quot;/app1&quot;。Rails需要知道这个目录来生成相应的路由。</target>
        </trans-unit>
        <trans-unit id="64e9c368d11a718bfea479dfb073f5601b509e2c" translate="yes" xml:space="preserve">
          <source>Let's begin exploring these features by adding more functionality to our application.</source>
          <target state="translated">让我们开始探索这些功能,为我们的应用程序添加更多的功能。</target>
        </trans-unit>
        <trans-unit id="71b6809eee4e5ad984a6e18c3317f2e1911b1c3f" translate="yes" xml:space="preserve">
          <source>Let's break out some more monkeys and pirates.</source>
          <target state="translated">让我们再多出一些猴子和海盗。</target>
        </trans-unit>
        <trans-unit id="0175bd3560f981f045ac3204ff11ccf5cd1e0c8f" translate="yes" xml:space="preserve">
          <source>Let's break this test down so we can understand it.</source>
          <target state="translated">我们来分析一下这个测试,以便我们能够理解它。</target>
        </trans-unit>
        <trans-unit id="d411cec433d62e9e5131196fc3d8ca677b9020c5" translate="yes" xml:space="preserve">
          <source>Let's consider</source>
          <target state="translated">让我们考虑一下</target>
        </trans-unit>
        <trans-unit id="6a2b72ee8dfb84cee80a7035dfdbf117386402d2" translate="yes" xml:space="preserve">
          <source>Let's consider a flight simulator. The application has a default flight model</source>
          <target state="translated">让我们考虑一个飞行模拟器。该应用程序有一个默认的飞行模型</target>
        </trans-unit>
        <trans-unit id="c00ee8b2221f13d18a00305aa785cc9bb52f8574" translate="yes" xml:space="preserve">
          <source>Let's consider the following module definition:</source>
          <target state="translated">让我们考虑以下模块定义。</target>
        </trans-unit>
        <trans-unit id="b1a2e958859b8c7457503e9efcd9e0b3492d8f4e" translate="yes" xml:space="preserve">
          <source>Let's consider this initializer:</source>
          <target state="translated">让我们考虑一下这个初始化器。</target>
        </trans-unit>
        <trans-unit id="83f57047aad3e797bd0c389f4e130b37320697a9" translate="yes" xml:space="preserve">
          <source>Let's consider:</source>
          <target state="translated">让我们考虑一下。</target>
        </trans-unit>
        <trans-unit id="275f8e627215fb48538855450669e0f7b295d120" translate="yes" xml:space="preserve">
          <source>Let's create &lt;code&gt;app/views/articles/new.html.erb&lt;/code&gt; with the following contents:</source>
          <target state="translated">让我们创建具有以下内容的 &lt;code&gt;app/views/articles/new.html.erb&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="c5c35b56547b5b8a93aff7507c46bb9eacc09cc2" translate="yes" xml:space="preserve">
          <source>Let's create &lt;code&gt;app/views/articles/show.html.erb&lt;/code&gt;, with the following contents:</source>
          <target state="translated">让我们创建 &lt;code&gt;app/views/articles/show.html.erb&lt;/code&gt; ，其中包含以下内容：</target>
        </trans-unit>
        <trans-unit id="c26c7d6fe559c363e03a6bd3159ae8ce188a0ff1" translate="yes" xml:space="preserve">
          <source>Let's create a simple Rails application to step through each of these commands in context.</source>
          <target state="translated">让我们创建一个简单的Rails应用程序,在上下文中逐步完成这些命令。</target>
        </trans-unit>
        <trans-unit id="f6988e18c816b90155d8f9087dd4ede9ba5d8e76" translate="yes" xml:space="preserve">
          <source>Let's go back to our controller in &lt;code&gt;app/controllers/articles_controller.rb&lt;/code&gt;, and change the &lt;code&gt;index&lt;/code&gt; action to fetch all articles from the database:</source>
          <target state="translated">让我们回到 &lt;code&gt;app/controllers/articles_controller.rb&lt;/code&gt; 中的控制器，并更改 &lt;code&gt;index&lt;/code&gt; 操作以从数据库中获取所有文章：</target>
        </trans-unit>
        <trans-unit id="b1fa58a55971fd9e23ddeee23e8c1d0c89153587" translate="yes" xml:space="preserve">
          <source>Let's imagine that users in some application have login information in the &lt;code&gt;User&lt;/code&gt; model but name and other data in a separate &lt;code&gt;Profile&lt;/code&gt; model:</source>
          <target state="translated">假设某些应用程序中的 &lt;code&gt;User&lt;/code&gt; 在User模型中具有登录信息，但在单独的 &lt;code&gt;Profile&lt;/code&gt; 模型中具有名称和其他数据：</target>
        </trans-unit>
        <trans-unit id="21a5e444a84811bf545d3f94d479c8b239f38e28" translate="yes" xml:space="preserve">
          <source>Let's implement the flash message now in our controller. Our &lt;code&gt;:create&lt;/code&gt; action should now look like this:</source>
          <target state="translated">让我们现在在控制器中实现Flash消息。我们的 &lt;code&gt;:create&lt;/code&gt; 动作现在应如下所示：</target>
        </trans-unit>
        <trans-unit id="b51c46ffa72a597d58c3017405a3b8080b7928f4" translate="yes" xml:space="preserve">
          <source>Let's introduce now a subclass of &lt;code&gt;Rectangle&lt;/code&gt;:</source>
          <target state="translated">现在让我们介绍 &lt;code&gt;Rectangle&lt;/code&gt; 的子类：</target>
        </trans-unit>
        <trans-unit id="a5f04bf3b6464abe4ee0ae36590dbb17b2f0d292" translate="yes" xml:space="preserve">
          <source>Let's launch the console with this command:</source>
          <target state="translated">让我们用这个命令启动控制台。</target>
        </trans-unit>
        <trans-unit id="559ba613fcdfc3a29ca8db3b5ac8cb93ef9c41f8" translate="yes" xml:space="preserve">
          <source>Let's look at that entry/message/comment example using delegated types:</source>
          <target state="translated">让我们看看那个使用委托类型的条目/消息/注释的例子。</target>
        </trans-unit>
        <trans-unit id="cd40f9d2fe4074d731d624f45d324731e74d0541" translate="yes" xml:space="preserve">
          <source>Let's look at the code below:</source>
          <target state="translated">我们来看看下面的代码。</target>
        </trans-unit>
        <trans-unit id="7588d79a31b685899386a77630023f4aad3bc947" translate="yes" xml:space="preserve">
          <source>Let's look at the full error message again:</source>
          <target state="translated">我们再来看看完整的错误信息。</target>
        </trans-unit>
        <trans-unit id="db255fe389309039f7483e2c79350e7b43e7b7d4" translate="yes" xml:space="preserve">
          <source>Let's make our own controller with the controller generator. But what command should we use? Let's ask the generator:</source>
          <target state="translated">让我们用控制器生成器来制作我们自己的控制器。但是我们应该用什么命令呢?让我们问问生成器吧。</target>
        </trans-unit>
        <trans-unit id="f10ea4f39f4b33b53a25bba08b9359f1fcad5b86" translate="yes" xml:space="preserve">
          <source>Let's make the HABTM fixture go away.</source>
          <target state="translated">让我们让HABTM的固定装置消失。</target>
        </trans-unit>
        <trans-unit id="f6c736865f2b69edc0a585f4712fc27790bfde32" translate="yes" xml:space="preserve">
          <source>Let's open &lt;code&gt;app/views/articles/index.html.erb&lt;/code&gt;, and replace its contents with:</source>
          <target state="translated">让我们打开 &lt;code&gt;app/views/articles/index.html.erb&lt;/code&gt; ，并将其内容替换为：</target>
        </trans-unit>
        <trans-unit id="03c41edf8d63eb5f66d09a27b4b72a81e8237307" translate="yes" xml:space="preserve">
          <source>Let's open &lt;code&gt;config/routes.rb&lt;/code&gt;, and add the following &lt;code&gt;root&lt;/code&gt; route to the top of the &lt;code&gt;Rails.application.routes.draw&lt;/code&gt; block:</source>
          <target state="translated">让我们打开 &lt;code&gt;config/routes.rb&lt;/code&gt; ，并将以下 &lt;code&gt;root&lt;/code&gt; 路由添加到 &lt;code&gt;Rails.application.routes.draw&lt;/code&gt; 块的顶部：</target>
        </trans-unit>
        <trans-unit id="12cc34bba418576d5afbcf4876a26da69dfbbc5d" translate="yes" xml:space="preserve">
          <source>Let's run our migration with the following command:</source>
          <target state="translated">让我们用以下命令运行我们的迁移。</target>
        </trans-unit>
        <trans-unit id="af3c0983643d82f65dfb7da47772af56e8bae72d" translate="yes" xml:space="preserve">
          <source>Let's say the &lt;code&gt;users&lt;/code&gt; table has &lt;code&gt;id&lt;/code&gt; as the primary_key but it also has a &lt;code&gt;guid&lt;/code&gt; column. The requirement is that the &lt;code&gt;todos&lt;/code&gt; table should hold the &lt;code&gt;guid&lt;/code&gt; column value as the foreign key and not &lt;code&gt;id&lt;/code&gt; value. This can be achieved like this:</source>
          <target state="translated">假设 &lt;code&gt;users&lt;/code&gt; 表的 &lt;code&gt;id&lt;/code&gt; 为primary_key，但也有一个 &lt;code&gt;guid&lt;/code&gt; 列。要求是 &lt;code&gt;todos&lt;/code&gt; 表应将 &lt;code&gt;guid&lt;/code&gt; 列值作为外键而不是 &lt;code&gt;id&lt;/code&gt; 值。可以这样实现：</target>
        </trans-unit>
        <trans-unit id="8aaa8fd90fd44344aa5ea74de6918d0b560e4441" translate="yes" xml:space="preserve">
          <source>Let's say we have an application with a single primary database and we need to add a new database for some new tables we're adding. The name of the new database will be &quot;animals&quot;.</source>
          <target state="translated">比方说,我们有一个应用程序,有一个单一的主数据库,我们需要为我们添加的一些新表添加一个新的数据库。新数据库的名称将是 &quot;动物&quot;。</target>
        </trans-unit>
        <trans-unit id="bd81cf4522c612f7be3acc9b2e606c7cff8434c1" translate="yes" xml:space="preserve">
          <source>Let's say we have an application with a single writer database and we need to add a new database for some new tables we're adding. The name of the new database will be &quot;animals&quot;.</source>
          <target state="translated">比方说,我们有一个应用程序,有一个单一的编写数据库,我们需要为一些新的表添加一个新的数据库。新数据库的名称将是 &quot;动物&quot;。</target>
        </trans-unit>
        <trans-unit id="c507f5be5e78ef25fd1568f5682ddaeb10c8c2e4" translate="yes" xml:space="preserve">
          <source>Let's say we want to render a form with a set of fields for each of a person's addresses. The &lt;code&gt;fields_for&lt;/code&gt; helper and its &lt;code&gt;:index&lt;/code&gt; argument can assist with this:</source>
          <target state="translated">假设我们要为一个人的每个地址呈现一个带有一组字段的表单。该 &lt;code&gt;fields_for&lt;/code&gt; 助手及其 &lt;code&gt;:index&lt;/code&gt; 参数可以帮助这样的：</target>
        </trans-unit>
        <trans-unit id="e62d2d4961a0889a900d5b7d7deb016aa106cbd4" translate="yes" xml:space="preserve">
          <source>Let's say we're displaying an article on a page which should be wrapped in a &lt;code&gt;div&lt;/code&gt; for display purposes. Firstly, we'll create a new &lt;code&gt;Article&lt;/code&gt;:</source>
          <target state="translated">假设我们要在页面上显示文章，该文章应该包装在 &lt;code&gt;div&lt;/code&gt; 中以用于显示。首先，我们将创建一个新的 &lt;code&gt;Article&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="8579674d7daf7815627e340f71121460d49e4cb2" translate="yes" xml:space="preserve">
          <source>Let's say we're in the &lt;code&gt;http://www.example.com/products&lt;/code&gt; action with method POST in case of invalid product.</source>
          <target state="translated">假设我们在商品无效的情况下使用POST方法进入 &lt;code&gt;http://www.example.com/products&lt;/code&gt; 操作。</target>
        </trans-unit>
        <trans-unit id="8aec0ccffe5b428a6cb21a91e46b9704b1b5f7fb" translate="yes" xml:space="preserve">
          <source>Let's say we're in the &lt;code&gt;http://www.example.com/shop/checkout?order=desc&amp;amp;page=1&lt;/code&gt; action.</source>
          <target state="translated">假设我们正在 &lt;code&gt;http://www.example.com/shop/checkout?order=desc&amp;amp;page=1&lt;/code&gt; 操作中。</target>
        </trans-unit>
        <trans-unit id="f3e0d2a71301db441896e1ffdd4d512f4c884fe7" translate="yes" xml:space="preserve">
          <source>Let's say you have a &lt;em&gt;BooksController&lt;/em&gt; in your application. Your &lt;em&gt;index&lt;/em&gt; action renders content in &lt;code&gt;app/views/books/index.html.erb&lt;/code&gt; template. When you put a &lt;em&gt;localized variant&lt;/em&gt; of this template: &lt;code&gt;index.es.html.erb&lt;/code&gt; in the same directory, Rails will render content in this template, when the locale is set to &lt;code&gt;:es&lt;/code&gt;. When the locale is set to the default locale, the generic &lt;code&gt;index.html.erb&lt;/code&gt; view will be used. (Future Rails versions may well bring this &lt;em&gt;automagic&lt;/em&gt; localization to assets in &lt;code&gt;public&lt;/code&gt;, etc.)</source>
          <target state="translated">假设您的应用程序中有一个&lt;em&gt;BooksController&lt;/em&gt;。您的&lt;em&gt;索引&lt;/em&gt;操作会在 &lt;code&gt;app/views/books/index.html.erb&lt;/code&gt; 模板中呈现内容。当您将此模板的&lt;em&gt;本地化变体&lt;/em&gt;： &lt;code&gt;index.es.html.erb&lt;/code&gt; 放在同一目录中时，当语言环境设置为 &lt;code&gt;:es&lt;/code&gt; 时，Rails将在此模板中呈现内容。当语言环境设置为默认语言环境时，将使用通用 &lt;code&gt;index.html.erb&lt;/code&gt; 视图。（Future Rails版本很可能将这种&lt;em&gt;自动的&lt;/em&gt;本地化带入 &lt;code&gt;public&lt;/code&gt; 资产等）</target>
        </trans-unit>
        <trans-unit id="46e0bd3737a3ceb5c11cdc9352d2399ab7de05d4" translate="yes" xml:space="preserve">
          <source>Let's say you have a navigation menu&amp;hellip;</source>
          <target state="translated">假设您有一个导航菜单...</target>
        </trans-unit>
        <trans-unit id="177e78ab7407be2c090f5ae68f3c072dc96edece" translate="yes" xml:space="preserve">
          <source>Let's say you like using &lt;code&gt;Object#not_nil?&lt;/code&gt; and &lt;code&gt;Object#not_blank?&lt;/code&gt;:</source>
          <target state="translated">假设您喜欢使用 &lt;code&gt;Object#not_nil?&lt;/code&gt; 和 &lt;code&gt;Object#not_blank?&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="c9cd3934a0abc016ddefcdb09c99e8dd9ccffe99" translate="yes" xml:space="preserve">
          <source>Let's see for example the definition of the &lt;code&gt;caches_action&lt;/code&gt; controller macro:</source>
          <target state="translated">让我们来看例如 &lt;code&gt;caches_action&lt;/code&gt; 控制器宏的定义：</target>
        </trans-unit>
        <trans-unit id="dda5f06059ddbf981e8fa7bfde1dfc2d0115a597" translate="yes" xml:space="preserve">
          <source>Let's see how Rails autoloads the &lt;code&gt;Post&lt;/code&gt; constant in the &lt;code&gt;PostsController&lt;/code&gt; above assuming the application has a &lt;code&gt;Post&lt;/code&gt; model defined in &lt;code&gt;app/models/post.rb&lt;/code&gt;.</source>
          <target state="translated">假设应用程序具有在 &lt;code&gt;app/models/post.rb&lt;/code&gt; 中定义的 &lt;code&gt;Post&lt;/code&gt; 模型，让我们看看Rails如何在上述 &lt;code&gt;PostsController&lt;/code&gt; 中自动加载 &lt;code&gt;Post&lt;/code&gt; 常量。</target>
        </trans-unit>
        <trans-unit id="9ba493509a4d442db810ba55cc1cd484277e3bf9" translate="yes" xml:space="preserve">
          <source>Let's see other situations that involve stale class or module objects.</source>
          <target state="translated">让我们看看其他涉及陈旧的类或模块对象的情况。</target>
        </trans-unit>
        <trans-unit id="1212c891c1276d0d0922365aee5189e87122dcb9" translate="yes" xml:space="preserve">
          <source>Let's see the interface Rails created for us.</source>
          <target state="translated">我们来看看Rails为我们创建的界面。</target>
        </trans-unit>
        <trans-unit id="7c9f75a14a6a8fa84a573b0eb3a6e227e9516c06" translate="yes" xml:space="preserve">
          <source>Let's see what a &lt;code&gt;--git&lt;/code&gt; option and a &lt;code&gt;--database=postgresql&lt;/code&gt; option will do for us:</source>
          <target state="translated">让我们看看 &lt;code&gt;--git&lt;/code&gt; 选项和 &lt;code&gt;--database=postgresql&lt;/code&gt; 选项将为我们做什么：</target>
        </trans-unit>
        <trans-unit id="fc7d11799d172423de5d1b9f3034efdcb44fe82b" translate="yes" xml:space="preserve">
          <source>Let's start by adding a route to our routes file, &lt;code&gt;config/routes.rb&lt;/code&gt;, at the top of the &lt;code&gt;Rails.application.routes.draw&lt;/code&gt; block:</source>
          <target state="translated">让我们从在 &lt;code&gt;Rails.application.routes.draw&lt;/code&gt; 块顶部的路由文件 &lt;code&gt;config/routes.rb&lt;/code&gt; 中添加一条路由开始：</target>
        </trans-unit>
        <trans-unit id="2463f5acabbb86e1902e7e40a13ca91e4485de9b" translate="yes" xml:space="preserve">
          <source>Let's start by adding this assertion to our &lt;code&gt;test_should_create_article&lt;/code&gt; test:</source>
          <target state="translated">首先，将以下断言添加到我们的 &lt;code&gt;test_should_create_article&lt;/code&gt; 测试中：</target>
        </trans-unit>
        <trans-unit id="7dd25355c3943d701e459ca69a67dd4b4635c625" translate="yes" xml:space="preserve">
          <source>Let's start to boot and initialize the app. A Rails application is usually started by running &lt;code&gt;bin/rails console&lt;/code&gt; or &lt;code&gt;bin/rails server&lt;/code&gt;.</source>
          <target state="translated">让我们开始启动并初始化应用程序。通常通过运行 &lt;code&gt;bin/rails console&lt;/code&gt; 或 &lt;code&gt;bin/rails server&lt;/code&gt; 来启动Rails应用程序。</target>
        </trans-unit>
        <trans-unit id="679242afe97967bee95cf933ac25ed6b6adeee4c" translate="yes" xml:space="preserve">
          <source>Let's start to boot and initialize the app. A Rails application is usually started by running &lt;code&gt;rails console&lt;/code&gt; or &lt;code&gt;rails server&lt;/code&gt;.</source>
          <target state="translated">让我们开始启动并初始化应用程序。通常，通过运行 &lt;code&gt;rails console&lt;/code&gt; 或 &lt;code&gt;rails server&lt;/code&gt; 来启动Rails应用程序。</target>
        </trans-unit>
        <trans-unit id="26bbb36043b4b51caaf53b4eb429bbb3cd71c66a" translate="yes" xml:space="preserve">
          <source>Let's suppose that you were making a Karaoke machine and a user wants to get the lyrics for a particular song. Each &lt;code&gt;Song&lt;/code&gt; has a particular number of lines and each line takes time &lt;code&gt;num_beats&lt;/code&gt; to finish singing.</source>
          <target state="translated">假设您正在制作卡拉OK机，并且用户想要获取特定歌曲的歌词。每首 &lt;code&gt;Song&lt;/code&gt; 都有特定的行数，每行需要 &lt;code&gt;num_beats&lt;/code&gt; 时间才能完成演唱。</target>
        </trans-unit>
        <trans-unit id="b39773d51d4340138e114edc90a5ea57419ae99d" translate="yes" xml:space="preserve">
          <source>Let's suppose the following snippet creates a class (rather than reopening it):</source>
          <target state="translated">让我们假设下面的代码段创建一个类(而不是重新打开它)。</target>
        </trans-unit>
        <trans-unit id="57e26fc7533f565888b3ecfca314d023ce8533a2" translate="yes" xml:space="preserve">
          <source>Let's suppose we have these class definitions:</source>
          <target state="translated">假设我们有这些类的定义。</target>
        </trans-unit>
        <trans-unit id="a4090c16fa4ca8c22ac98f2731e3303c82f681b4" translate="yes" xml:space="preserve">
          <source>Let's suppose you are creating a generator that needs to invoke the controller generator from test unit. Your first attempt is:</source>
          <target state="translated">假设你正在创建一个需要从测试单元调用控制器生成器的生成器。你的第一次尝试是:</target>
        </trans-unit>
        <trans-unit id="b8d8dd280572f4245c2f9798e4cf4307d53e5d5a" translate="yes" xml:space="preserve">
          <source>Let's take a look at one such test, &lt;code&gt;test_should_get_index&lt;/code&gt; from the file &lt;code&gt;articles_controller_test.rb&lt;/code&gt;.</source>
          <target state="translated">让我们看一下一个这样的测试， &lt;code&gt;test_should_get_index&lt;/code&gt; 来自 &lt;code&gt;articles_controller_test.rb&lt;/code&gt; 文件的test_should_get_index。</target>
        </trans-unit>
        <trans-unit id="fb7b003a2624199393e36191ea09f4b342435f64" translate="yes" xml:space="preserve">
          <source>Let's take a look at some of the things that Rails provides out of the box that are still applicable to API applications.</source>
          <target state="translated">让我们来看看Rails提供的一些开箱即用的东西,它们仍然适用于API应用。</target>
        </trans-unit>
        <trans-unit id="54cb16d6149c7c86f795cf72402bada64d93b4dc" translate="yes" xml:space="preserve">
          <source>Let's take a look at the contents of our new migration file:</source>
          <target state="translated">让我们来看看新迁移文件的内容。</target>
        </trans-unit>
        <trans-unit id="563872689b7d13f35f84ce3e7c9d9cb69f5f4742" translate="yes" xml:space="preserve">
          <source>Let's take a look at what Rails does by default when creating a new resource using the scaffold generator:</source>
          <target state="translated">让我们来看看Rails在使用脚手架生成器创建新资源时的默认操作。</target>
        </trans-unit>
        <trans-unit id="2b61280695474ba2f4d47ae92ae0ee897d8bc51b" translate="yes" xml:space="preserve">
          <source>Let's take for example this non-persisted object.</source>
          <target state="translated">我们以这个非persisted对象为例。</target>
        </trans-unit>
        <trans-unit id="97b75242b93becb500d73edfceaaad470ab7fc77" translate="yes" xml:space="preserve">
          <source>Let's talk about unit tests. Unit tests are code that tests and makes assertions about code. In unit testing, we take a little part of code, say a method of a model, and test its inputs and outputs. Unit tests are your friend. The sooner you make peace with the fact that your quality of life will drastically increase when you unit test your code, the better. Seriously. Please visit &lt;a href=&quot;https://guides.rubyonrails.org/testing.html&quot;&gt;the testing guide&lt;/a&gt; for an in-depth look at unit testing.</source>
          <target state="translated">让我们谈谈单元测试。单元测试是测试并声明代码的代码。在单元测试中，我们仅使用一小部分代码（例如模型的方法），并测试其输入和输出。单元测试是您的朋友。当您对单元代码进行单元测试时，您越早能使生活质量急剧提高这一事实就越令人安心。说真的 请访问&lt;a href=&quot;https://guides.rubyonrails.org/testing.html&quot;&gt;测试指南&lt;/a&gt;以深入了解单元测试。</target>
        </trans-unit>
        <trans-unit id="92e8aa44e8687f3418392049e0642466f90f0ccb" translate="yes" xml:space="preserve">
          <source>Let's update &lt;code&gt;app/views/articles/new.html.erb&lt;/code&gt; to use the partial via &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionView/Helpers/RenderingHelper.html#method-i-render&quot;&gt;&lt;code&gt;render&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">让我们更新 &lt;code&gt;app/views/articles/new.html.erb&lt;/code&gt; 以通过&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionView/Helpers/RenderingHelper.html#method-i-render&quot;&gt; &lt;code&gt;render&lt;/code&gt; &lt;/a&gt;使用部分：</target>
        </trans-unit>
        <trans-unit id="fd189d590d8b1b050d1f34adacad7d94c39e61b0" translate="yes" xml:space="preserve">
          <source>Let's use the act of logging out as an example. The controller can send a message which will be displayed to the user on the next request:</source>
          <target state="translated">我们以注销行为为例。控制器可以发送一条消息,该消息将在下一次请求时显示给用户。</target>
        </trans-unit>
        <trans-unit id="1a7302ab1c8547352066ed26da2374047cdadc44" translate="yes" xml:space="preserve">
          <source>Let's wire up the &lt;code&gt;create&lt;/code&gt; in &lt;code&gt;app/controllers/comments_controller.rb&lt;/code&gt;:</source>
          <target state="translated">让我们线了 &lt;code&gt;create&lt;/code&gt; 在 &lt;code&gt;app/controllers/comments_controller.rb&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="992a5765c7ceef439caa841de820744520c02dab" translate="yes" xml:space="preserve">
          <source>Let's write a test for the &lt;code&gt;:show&lt;/code&gt; action:</source>
          <target state="translated">让我们为 &lt;code&gt;:show&lt;/code&gt; 动作编写一个测试：</target>
        </trans-unit>
        <trans-unit id="87f073daffb250fdd9420bb580aebdaf208071cd" translate="yes" xml:space="preserve">
          <source>Lets you find a record based on a signed id that's safe to put into the world without risk of tampering. This is particularly useful for things like password reset or email verification, where you want the bearer of the signed id to be able to interact with the underlying record, but usually only within a certain time period.</source>
          <target state="translated">让你找到一个基于签名id的记录,它可以安全地放到世界上,而没有被篡改的风险。这对于像密码重置或电子邮件验证这样的事情特别有用,在这些情况下,你希望签名id的持有者能够与底层记录进行交互,但通常只能在一定的时间段内进行。</target>
        </trans-unit>
        <trans-unit id="6388e2763a8787438175ea44759b7a341170f551" translate="yes" xml:space="preserve">
          <source>Lets you selectively disable calls to &lt;code&gt;touch&lt;/code&gt; for the duration of a block.</source>
          <target state="translated">允许您在一个块的持续时间内有选择地禁用 &lt;code&gt;touch&lt;/code&gt; 功能。</target>
        </trans-unit>
        <trans-unit id="8acbdbc31bdc854cb88cd725315b1b68aca7a0e7" translate="yes" xml:space="preserve">
          <source>Licensed under the Creative Commons Attribution-ShareAlike 4.0 International License.</source>
          <target state="translated">根据知识共享署名-相同方式共享4.0国际许可证授权。</target>
        </trans-unit>
        <trans-unit id="58fd3b1b83cc7fc933d72fe934bdb6e534441281" translate="yes" xml:space="preserve">
          <source>Licensed under the MIT License.</source>
          <target state="translated">根据麻省理工学院许可证授权。</target>
        </trans-unit>
        <trans-unit id="32e831ee28a53c1c45723507c4a82ba362ea3fda" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;collectionproxy#method-i-create&quot;&gt;&lt;code&gt;create&lt;/code&gt;&lt;/a&gt;, except that if the record is invalid, raises an exception.</source>
          <target state="translated">与&lt;a href=&quot;collectionproxy#method-i-create&quot;&gt; &lt;code&gt;create&lt;/code&gt; &lt;/a&gt;一样，不同之处在于如果记录无效，则会引发异常。</target>
        </trans-unit>
        <trans-unit id="90c56b68f39e7603a156bfa82a13c020a53c399d" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;collectionproxy#method-i-create&quot;&gt;create&lt;/a&gt;, except that if the record is invalid, raises an exception.</source>
          <target state="translated">与&lt;a href=&quot;collectionproxy#method-i-create&quot;&gt;create&lt;/a&gt;一样，不同之处在于如果记录无效，则会引发异常。</target>
        </trans-unit>
        <trans-unit id="e5e27ba900b5fb80f69ace324b1132ba4d11debd" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;findermethods#method-i-find_by&quot;&gt;&lt;code&gt;find_by&lt;/code&gt;&lt;/a&gt;, except that if no record is found, raises an &lt;a href=&quot;recordnotfound&quot;&gt;&lt;code&gt;ActiveRecord::RecordNotFound&lt;/code&gt;&lt;/a&gt; error.</source>
          <target state="translated">与&lt;a href=&quot;findermethods#method-i-find_by&quot;&gt; &lt;code&gt;find_by&lt;/code&gt; 相似&lt;/a&gt;，不同之处在于如果未找到任何记录，则会引发&lt;a href=&quot;recordnotfound&quot;&gt; &lt;code&gt;ActiveRecord::RecordNotFound&lt;/code&gt; &lt;/a&gt;错误。</target>
        </trans-unit>
        <trans-unit id="f82455ed657d40dfabb8a5dd6261584322dd09d7" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;findermethods#method-i-find_by&quot;&gt;find_by&lt;/a&gt;, except that if no record is found, raises an &lt;a href=&quot;recordnotfound&quot;&gt;ActiveRecord::RecordNotFound&lt;/a&gt; error.</source>
          <target state="translated">与&lt;a href=&quot;findermethods#method-i-find_by&quot;&gt;find_by相似&lt;/a&gt;，不同之处在于如果未找到任何记录，则会引发&lt;a href=&quot;recordnotfound&quot;&gt;ActiveRecord :: RecordNotFound&lt;/a&gt;错误。</target>
        </trans-unit>
        <trans-unit id="d9b86ca0bc1a7db98401d8b8dff3fcec3da819a7" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;relation#method-i-create_or_find_by&quot;&gt;&lt;code&gt;create_or_find_by&lt;/code&gt;&lt;/a&gt;, but calls &lt;a href=&quot;persistence/classmethods#method-i-create-21&quot;&gt;create!&lt;/a&gt; so an exception is raised if the created record is invalid.</source>
          <target state="translated">类似于&lt;a href=&quot;relation#method-i-create_or_find_by&quot;&gt; &lt;code&gt;create_or_find_by&lt;/code&gt; &lt;/a&gt;，但是调用可以&lt;a href=&quot;persistence/classmethods#method-i-create-21&quot;&gt;创建！&lt;/a&gt;因此，如果创建的记录无效，则会引发异常。</target>
        </trans-unit>
        <trans-unit id="1a36c87f81f627d65cc615f8ae7a9afdbe70794c" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;relation#method-i-create_or_find_by&quot;&gt;create_or_find_by&lt;/a&gt;, but calls &lt;a href=&quot;persistence/classmethods#method-i-create-21&quot;&gt;create!&lt;/a&gt; so an exception is raised if the created record is invalid.</source>
          <target state="translated">类似于&lt;a href=&quot;relation#method-i-create_or_find_by&quot;&gt;create_or_find_by&lt;/a&gt;，但是调用可以&lt;a href=&quot;persistence/classmethods#method-i-create-21&quot;&gt;创建！&lt;/a&gt;因此，如果创建的记录无效，则会引发异常。</target>
        </trans-unit>
        <trans-unit id="5ce3efea0686417adc5b92aeb46eb41818eec203" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;relation#method-i-find_or_create_by&quot;&gt;&lt;code&gt;find_or_create_by&lt;/code&gt;&lt;/a&gt;, but calls &lt;a href=&quot;persistence/classmethods#method-i-create-21&quot;&gt;create!&lt;/a&gt; so an exception is raised if the created record is invalid.</source>
          <target state="translated">类似于&lt;a href=&quot;relation#method-i-find_or_create_by&quot;&gt; &lt;code&gt;find_or_create_by&lt;/code&gt; &lt;/a&gt;，但是调用可以&lt;a href=&quot;persistence/classmethods#method-i-create-21&quot;&gt;创建！&lt;/a&gt;因此，如果创建的记录无效，则会引发异常。</target>
        </trans-unit>
        <trans-unit id="813158c643b69edd68c1fa60c2e540a0b6a2d978" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;relation#method-i-find_or_create_by&quot;&gt;&lt;code&gt;find_or_create_by&lt;/code&gt;&lt;/a&gt;, but calls new instead of &lt;a href=&quot;persistence/classmethods#method-i-create&quot;&gt;create&lt;/a&gt;.</source>
          <target state="translated">类似于&lt;a href=&quot;relation#method-i-find_or_create_by&quot;&gt; &lt;code&gt;find_or_create_by&lt;/code&gt; &lt;/a&gt;，但是调用new而不是&lt;a href=&quot;persistence/classmethods#method-i-create&quot;&gt;create&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="838678c204cb7edc7ae37ac099a5e73f3f667073" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;relation#method-i-find_or_create_by&quot;&gt;find_or_create_by&lt;/a&gt;, but calls &lt;a href=&quot;persistence/classmethods#method-i-create-21&quot;&gt;create!&lt;/a&gt; so an exception is raised if the created record is invalid.</source>
          <target state="translated">类似于&lt;a href=&quot;relation#method-i-find_or_create_by&quot;&gt;find_or_create_by&lt;/a&gt;，但是调用可以&lt;a href=&quot;persistence/classmethods#method-i-create-21&quot;&gt;创建！&lt;/a&gt;因此，如果创建的记录无效，则会引发异常。</target>
        </trans-unit>
        <trans-unit id="f8856f0a8b7199b002c8122ad2fcd4604b1d6719" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;relation#method-i-find_or_create_by&quot;&gt;find_or_create_by&lt;/a&gt;, but calls new instead of &lt;a href=&quot;persistence/classmethods#method-i-create&quot;&gt;create&lt;/a&gt;.</source>
          <target state="translated">类似于&lt;a href=&quot;relation#method-i-find_or_create_by&quot;&gt;find_or_create_by&lt;/a&gt;，但是调用new而不是&lt;a href=&quot;persistence/classmethods#method-i-create&quot;&gt;create&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="981e81b63a865974c1cebae7d45b847c46d0c320" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;distance_of_time_in_words&lt;/code&gt;, but where &lt;code&gt;to_time&lt;/code&gt; is fixed to &lt;code&gt;Time.now&lt;/code&gt;.</source>
          <target state="translated">像 &lt;code&gt;distance_of_time_in_words&lt;/code&gt; 一样，但是 &lt;code&gt;to_time&lt;/code&gt; 固定为 &lt;code&gt;Time.now&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dd2abf706df47832d72f8c321855ea5fb7e3691b" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;merge&lt;/code&gt; but the other way around: Merges the receiver into the argument and returns a new hash with indifferent access as result:</source>
          <target state="translated">像 &lt;code&gt;merge&lt;/code&gt; 一样，但也有另一种方式：将接收者合并到参数中，并返回一个新的哈希，其结果是访问无关紧要：</target>
        </trans-unit>
        <trans-unit id="1945f3936ef206114971a0591dc706d5e224d076" translate="yes" xml:space="preserve">
          <source>Like Action Controller, each mailer class has a corresponding view directory in which each method of the class looks for a template with its name.</source>
          <target state="translated">和Action Controller一样,每个邮件类都有一个对应的视图目录,在这个目录中,该类的每个方法都会寻找一个带名字的模板。</target>
        </trans-unit>
        <trans-unit id="8ffafe203ca6452b9469b0ee8ef3f5bd66cb64c9" translate="yes" xml:space="preserve">
          <source>Like all of the other components of an engine, the assets should be namespaced. This means that if you have an asset called &lt;code&gt;style.css&lt;/code&gt;, it should be placed at &lt;code&gt;app/assets/stylesheets/[engine name]/style.css&lt;/code&gt;, rather than &lt;code&gt;app/assets/stylesheets/style.css&lt;/code&gt;. If this asset isn't namespaced, there is a possibility that the host application could have an asset named identically, in which case the application's asset would take precedence and the engine's one would be ignored.</source>
          <target state="translated">与引擎的所有其他组件一样，资产应被命名。这意味着，如果您有一个名为 &lt;code&gt;style.css&lt;/code&gt; 的资产，则应将其放置在 &lt;code&gt;app/assets/stylesheets/[engine name]/style.css&lt;/code&gt; ，而不是 &lt;code&gt;app/assets/stylesheets/style.css&lt;/code&gt; 中。如果此资产没有命名空间，则主机应用程序可能具有名称相同的资产，在这种情况下，该应用程序的资产将优先，而引擎的资产将被忽略。</target>
        </trans-unit>
        <trans-unit id="9d575f43f40942a50e4f39a888b719fa5e7f6f38" translate="yes" xml:space="preserve">
          <source>Like all other validations, &lt;code&gt;validates_with&lt;/code&gt; takes the &lt;code&gt;:if&lt;/code&gt;, &lt;code&gt;:unless&lt;/code&gt; and &lt;code&gt;:on&lt;/code&gt; options. If you pass any other options, it will send those options to the validator class as &lt;code&gt;options&lt;/code&gt;:</source>
          <target state="translated">像所有其他验证一样， &lt;code&gt;validates_with&lt;/code&gt; 采用 &lt;code&gt;:if&lt;/code&gt; ， &lt;code&gt;:unless&lt;/code&gt; 和 &lt;code&gt;:on&lt;/code&gt; 选项。如果您传递任何其他选项，它将把这些选项作为 &lt;code&gt;options&lt;/code&gt; 发送到验证器类：</target>
        </trans-unit>
        <trans-unit id="01fcd4d2ae4700b5f2465b1ff92871077189f820" translate="yes" xml:space="preserve">
          <source>Like an &lt;code&gt;image_tag&lt;/code&gt; you can supply a path, either absolute, or relative to the &lt;code&gt;public/videos&lt;/code&gt; directory. Additionally you can specify the &lt;code&gt;size: &quot;#{width}x#{height}&quot;&lt;/code&gt; option just like an &lt;code&gt;image_tag&lt;/code&gt;. Video tags can also have any of the HTML options specified at the end (&lt;code&gt;id&lt;/code&gt;, &lt;code&gt;class&lt;/code&gt; et al).</source>
          <target state="translated">就像 &lt;code&gt;image_tag&lt;/code&gt; 一样，您可以提供绝对路径或相对于 &lt;code&gt;public/videos&lt;/code&gt; 目录的路径。另外，您可以指定 &lt;code&gt;size: &quot;#{width}x#{height}&quot;&lt;/code&gt; 选项，就像 &lt;code&gt;image_tag&lt;/code&gt; 一样。视频标签还可以在末尾指定任何HTML选项（ &lt;code&gt;id&lt;/code&gt; ， &lt;code&gt;class&lt;/code&gt; 等）。</target>
        </trans-unit>
        <trans-unit id="2ebbef68061adecb878f7d42134a495f64524522" translate="yes" xml:space="preserve">
          <source>Like everything else in your Rails application, you can test your routes. Route tests reside in &lt;code&gt;test/controllers/&lt;/code&gt; or are part of controller tests.</source>
          <target state="translated">像Rails应用程序中的其他所有内容一样，您可以测试路线。路由测试位于 &lt;code&gt;test/controllers/&lt;/code&gt; 或者是控制器测试的一部分。</target>
        </trans-unit>
        <trans-unit id="aee8e6aaa6eb1e9d33d334a7bfe242f7cc49970c" translate="yes" xml:space="preserve">
          <source>Like interceptors, you need to register observers with the Action Mailer framework. You can do this in an initializer file &lt;code&gt;config/initializers/email_delivery_observer.rb&lt;/code&gt;</source>
          <target state="translated">与拦截器一样，您需要向Action Mailer框架注册观察者。您可以在初始化文件 &lt;code&gt;config/initializers/email_delivery_observer.rb&lt;/code&gt; 中进行此操作</target>
        </trans-unit>
        <trans-unit id="91c20106ed1d5b3e7ee5eb18cac235356a844f06" translate="yes" xml:space="preserve">
          <source>Like other &lt;code&gt;before_*&lt;/code&gt; callbacks if &lt;code&gt;before_validation&lt;/code&gt; throws &lt;code&gt;:abort&lt;/code&gt; then &lt;code&gt;valid?&lt;/code&gt; will not be called.</source>
          <target state="translated">与其他 &lt;code&gt;before_*&lt;/code&gt; 回调类似，如果 &lt;code&gt;before_validation&lt;/code&gt; 抛出 &lt;code&gt;:abort&lt;/code&gt; 则 &lt;code&gt;valid?&lt;/code&gt; 不会被调用。</target>
        </trans-unit>
        <trans-unit id="fd5a27f27952b83949f0ba6492d83bafa2550fe3" translate="yes" xml:space="preserve">
          <source>Like other form controls, a select box can be bound to a model attribute. For example, if we have a &lt;code&gt;@person&lt;/code&gt; model object like:</source>
          <target state="translated">像其他表单控件一样，选择框可以绑定到模型属性。例如，如果我们有一个 &lt;code&gt;@person&lt;/code&gt; 模型对象，例如：</target>
        </trans-unit>
        <trans-unit id="d6d8aed9f13962f34865c0047d057350e384d9e8" translate="yes" xml:space="preserve">
          <source>Like railties, engines can access a config object which contains configuration shared by all railties and the application. Additionally, each engine can access &lt;code&gt;autoload_paths&lt;/code&gt;, &lt;code&gt;eager_load_paths&lt;/code&gt; and &lt;code&gt;autoload_once_paths&lt;/code&gt; settings which are scoped to that engine.</source>
          <target state="translated">像铁路一样，引擎可以访问一个配置对象，该对象包含所有铁路和应用程序共享的配置。此外，每个引擎都可以访问该引擎范围内的 &lt;code&gt;autoload_paths&lt;/code&gt; ， &lt;code&gt;eager_load_paths&lt;/code&gt; 和 &lt;code&gt;autoload_once_paths&lt;/code&gt; 设置。</target>
        </trans-unit>
        <trans-unit id="75c1dc4daa7154d93dae21a1c761babdf8b41bde" translate="yes" xml:space="preserve">
          <source>Like the &lt;code&gt;remove_column&lt;/code&gt; and &lt;code&gt;add_column&lt;/code&gt; Rails provides the &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-change_column&quot;&gt;&lt;code&gt;change_column&lt;/code&gt;&lt;/a&gt; migration method.</source>
          <target state="translated">像 &lt;code&gt;remove_column&lt;/code&gt; 和 &lt;code&gt;add_column&lt;/code&gt; 一样，Rails提供了&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-change_column&quot;&gt; &lt;code&gt;change_column&lt;/code&gt; &lt;/a&gt;迁移方法。</target>
        </trans-unit>
        <trans-unit id="5dd204ef14d7b85ee67171cb097475f1e6871271" translate="yes" xml:space="preserve">
          <source>Like the &lt;code&gt;remove_column&lt;/code&gt; and &lt;code&gt;add_column&lt;/code&gt; Rails provides the &lt;code&gt;change_column&lt;/code&gt; migration method.</source>
          <target state="translated">像 &lt;code&gt;remove_column&lt;/code&gt; 和 &lt;code&gt;add_column&lt;/code&gt; 一样，Rails提供了 &lt;code&gt;change_column&lt;/code&gt; 迁移方法。</target>
        </trans-unit>
        <trans-unit id="36d6a2738d70d70feb17c5c4ce6fb8a243819c54" translate="yes" xml:space="preserve">
          <source>Like the &lt;code&gt;video_tag&lt;/code&gt;, the &lt;code&gt;audio_tag&lt;/code&gt; has special options:</source>
          <target state="translated">像 &lt;code&gt;video_tag&lt;/code&gt; 一样， &lt;code&gt;audio_tag&lt;/code&gt; 也具有特殊的选项：</target>
        </trans-unit>
        <trans-unit id="e66a5dc476fc73af9f8055914d8ed515c1102014" translate="yes" xml:space="preserve">
          <source>Like the Active Record methods, the callback chain is aborted as soon as one of the methods throws &lt;code&gt;:abort&lt;/code&gt;.</source>
          <target state="translated">像Active Record方法一样，一旦其中一种方法抛出 &lt;code&gt;:abort&lt;/code&gt; ，回调链就会中止。</target>
        </trans-unit>
        <trans-unit id="06becc0802c58a331912f0807cf74457815d184a" translate="yes" xml:space="preserve">
          <source>Like the Executor, the Reloader also wraps application code. If the Executor is not already active on the current thread, the Reloader will invoke it for you, so you only need to call one. This also guarantees that everything the Reloader does, including all its callback invocations, occurs wrapped inside the Executor.</source>
          <target state="translated">和Executor一样,Reloader也会封装应用代码。如果当前线程中的Executor还未激活,Reloader将为你调用它,所以你只需要调用一个。这也保证了Reloader所做的一切,包括它的所有回调调用,都是在Executor内部进行封装的。</target>
        </trans-unit>
        <trans-unit id="366f425cd5b9e6652a38ac7f7aa971788b88b9e8" translate="yes" xml:space="preserve">
          <source>Like the other examples, this will behave similarly to a class method.</source>
          <target state="translated">像其他的例子一样,这将与类方法的行为相似。</target>
        </trans-unit>
        <trans-unit id="ebba6a2344880667e5d34781e11c86287eaa9d87" translate="yes" xml:space="preserve">
          <source>Like with Hash#merge in the standard library, a block can be provided to merge values:</source>
          <target state="translated">和标准库中的Hash#merge一样,可以提供一个块来合并值。</target>
        </trans-unit>
        <trans-unit id="fb4789449468fc495b47f2645508781ca736af5a" translate="yes" xml:space="preserve">
          <source>Like with any blog, our readers will create their comments directly after reading the article, and once they have added their comment, will be sent back to the article show page to see their comment now listed. Due to this, our &lt;code&gt;CommentsController&lt;/code&gt; is there to provide a method to create comments and delete spam comments when they arrive.</source>
          <target state="translated">与任何博客一样，我们的读者将在阅读文章后直接创建他们的评论，一旦他们添加了评论，就会被发送回文章显示页面以查看现在列出的评论。因此，我们的 &lt;code&gt;CommentsController&lt;/code&gt; 可以提供一种创建评论并在垃圾评论到达时将其删除的方法。</target>
        </trans-unit>
        <trans-unit id="ff5496f02f2e70dd87939f4f922ad6359b435663" translate="yes" xml:space="preserve">
          <source>Likewise, if a message has no purpose it won't be returned when verifying with a specific purpose.</source>
          <target state="translated">同样,如果一条消息没有目的,在用特定目的验证时也不会被返回。</target>
        </trans-unit>
        <trans-unit id="7f9f56dc5d9dac067cad8e9787f85e70aa8451e2" translate="yes" xml:space="preserve">
          <source>Likewise, in the controller</source>
          <target state="translated">同样,在控制器中</target>
        </trans-unit>
        <trans-unit id="9043e4d4d1671a725ba2238469203640ef3b4115" translate="yes" xml:space="preserve">
          <source>Likewise, once retrieved an Active Record object can be destroyed which removes it from the database.</source>
          <target state="translated">同样,一旦检索到一个活动记录对象,就可以将其从数据库中删除。</target>
        </trans-unit>
        <trans-unit id="1e39e2da3e09996465c4f4ce0479cc61d8bd528e" translate="yes" xml:space="preserve">
          <source>Limit and Offset</source>
          <target state="translated">极限和偏移</target>
        </trans-unit>
        <trans-unit id="4f68bad7da836e631fb2248fb1abb438211c676f" translate="yes" xml:space="preserve">
          <source>Limit the set of zones provided by TZInfo to a meaningful subset of 134 zones.</source>
          <target state="translated">将 TZInfo 提供的区段集限制为 134 个区段的有意义子集。</target>
        </trans-unit>
        <trans-unit id="1605fb4368464e150eb13ea430ef0ff67931d853" translate="yes" xml:space="preserve">
          <source>Limits are honored, and if present there is no requirement for the batch size, it can be less than, equal, or greater than the limit.</source>
          <target state="translated">限额是兑现的,如果存在对批量大小没有要求,可以小于、等于或大于限额。</target>
        </trans-unit>
        <trans-unit id="7d2bb2ad6044f129fa674c47902d971b813e5412" translate="yes" xml:space="preserve">
          <source>Limits are honored, and if present there is no requirement for the batch size: it can be less than, equal to, or greater than the limit.</source>
          <target state="translated">限值是被尊重的,如果存在,则对批次大小没有要求:可以小于、等于或大于限值。</target>
        </trans-unit>
        <trans-unit id="a0453458ad839bba5dbe50a404dd500b022d2db6" translate="yes" xml:space="preserve">
          <source>Limits the byte size of the string to a number of bytes without breaking characters. Usable when the storage for a string is limited for some reason.</source>
          <target state="translated">将字符串的字节大小限制为一定数量的字节,而不破坏字符。当字符串的存储空间因某种原因受到限制时,可以使用。</target>
        </trans-unit>
        <trans-unit id="8717faa36eea1d1c7661ae98c71e5bedde325942" translate="yes" xml:space="preserve">
          <source>Linking to Files</source>
          <target state="translated">链接到文件</target>
        </trans-unit>
        <trans-unit id="68f0799319cb24a16611680c2a93d9b76e26d5b1" translate="yes" xml:space="preserve">
          <source>Links to a URL derived from &lt;code&gt;url_for&lt;/code&gt; under the hood. Primarily used to create RESTful resource links, which for this example, boils down to when passing models to &lt;code&gt;link_to&lt;/code&gt;.</source>
          <target state="translated">链接到从 &lt;code&gt;url_for&lt;/code&gt; 派生的URL 。主要用于创建RESTful资源链接，在本示例中，该链接归结为将模型传递给 &lt;code&gt;link_to&lt;/code&gt; 时的情况。</target>
        </trans-unit>
        <trans-unit id="e2ae7cc433871751f8c4fe89e1a46b8934cd7aac" translate="yes" xml:space="preserve">
          <source>Lint Tests</source>
          <target state="translated">绒毛测试</target>
        </trans-unit>
        <trans-unit id="a1464f7beeb518a1b885870631c7f3a94b56fd43" translate="yes" xml:space="preserve">
          <source>List all validators that are being used to validate a specific attribute.</source>
          <target state="translated">列出所有用于验证特定属性的验证器。</target>
        </trans-unit>
        <trans-unit id="9756c11c70cc0c3e6447ead1a20c3b8bfd39a733" translate="yes" xml:space="preserve">
          <source>List all validators that are being used to validate the model using &lt;code&gt;validates_with&lt;/code&gt; method.</source>
          <target state="translated">使用 &lt;code&gt;validates_with&lt;/code&gt; 方法列出用于验证模型的所有验证器。</target>
        </trans-unit>
        <trans-unit id="0f3720ccefa495f1f67d13bfaf93c2c1ac631f1f" translate="yes" xml:space="preserve">
          <source>List of Free Programming Books</source>
          <target state="translated">免费编程书籍列表</target>
        </trans-unit>
        <trans-unit id="90531be0f34f12cdf82a5dd4b4d23699f1a88923" translate="yes" xml:space="preserve">
          <source>List of HTTP request methods from the following RFCs: Hypertext Transfer Protocol &amp;ndash; HTTP/1.1 (&lt;a href=&quot;https://www.ietf.org/rfc/rfc2616.txt&quot;&gt;www.ietf.org/rfc/rfc2616.txt&lt;/a&gt;) HTTP Extensions for Distributed Authoring &amp;ndash; WEBDAV (&lt;a href=&quot;https://www.ietf.org/rfc/rfc2518.txt&quot;&gt;www.ietf.org/rfc/rfc2518.txt&lt;/a&gt;) Versioning Extensions to WebDAV (&lt;a href=&quot;https://www.ietf.org/rfc/rfc3253.txt&quot;&gt;www.ietf.org/rfc/rfc3253.txt&lt;/a&gt;) Ordered Collections Protocol (WebDAV) (&lt;a href=&quot;https://www.ietf.org/rfc/rfc3648.txt&quot;&gt;www.ietf.org/rfc/rfc3648.txt&lt;/a&gt;) Web Distributed Authoring and Versioning (WebDAV) Access Control Protocol (&lt;a href=&quot;https://www.ietf.org/rfc/rfc3744.txt&quot;&gt;www.ietf.org/rfc/rfc3744.txt&lt;/a&gt;) Web Distributed Authoring and Versioning (WebDAV) SEARCH (&lt;a href=&quot;https://www.ietf.org/rfc/rfc5323.txt&quot;&gt;www.ietf.org/rfc/rfc5323.txt&lt;/a&gt;) Calendar Extensions to WebDAV (&lt;a href=&quot;https://www.ietf.org/rfc/rfc4791.txt&quot;&gt;www.ietf.org/rfc/rfc4791.txt&lt;/a&gt;) PATCH &lt;a href=&quot;../method&quot;&gt;&lt;code&gt;Method&lt;/code&gt;&lt;/a&gt; for HTTP (&lt;a href=&quot;https://www.ietf.org/rfc/rfc5789.txt&quot;&gt;www.ietf.org/rfc/rfc5789.txt&lt;/a&gt;)</source>
          <target state="translated">来自以下RFC的HTTP请求方法列表：超文本传输​​协议&amp;ndash; HTTP / 1.1（&lt;a href=&quot;https://www.ietf.org/rfc/rfc2616.txt&quot;&gt;www.ietf.org/rfc/rfc2616.txt&lt;/a&gt;）分布式创作的HTTP扩展&amp;ndash; WEBDAV（&lt;a href=&quot;https://www.ietf.org/rfc/rfc2518.txt&quot;&gt;www.ietf.org/rfc/rfc2518.txt&lt;/a&gt;） WebDAV的版本扩展（&lt;a href=&quot;https://www.ietf.org/rfc/rfc3253.txt&quot;&gt;www.ietf.org/rfc/rfc3253.txt&lt;/a&gt;）有序集合协议（WebDAV）（&lt;a href=&quot;https://www.ietf.org/rfc/rfc3648.txt&quot;&gt;www.ietf.org/rfc/rfc3648.txt&lt;/a&gt;）Web分布式创作和版本控制（WebDAV）访问控制协议（&lt;a href=&quot;https://www.ietf.org/rfc/rfc3744.txt&quot;&gt;www。 ietf.org/rfc/rfc3744.txt&lt;/a&gt;）Web分布式创作和版本控制（WebDAV）搜索（&lt;a href=&quot;https://www.ietf.org/rfc/rfc5323.txt&quot;&gt;www.ietf.org/rfc/rfc5323.txt&lt;/a&gt;）日历扩展到的WebDAV（&lt;a href=&quot;https://www.ietf.org/rfc/rfc4791.txt&quot;&gt;www.ietf.org/rfc/rfc4791.txt&lt;/a&gt;）PATCH HTTP&lt;a href=&quot;../method&quot;&gt; &lt;code&gt;Method&lt;/code&gt; &lt;/a&gt;（&lt;a href=&quot;https://www.ietf.org/rfc/rfc5789.txt&quot;&gt;www.ietf.org/rfc/rfc5789.txt&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="407b7ccb6a8ea464943a7436167fbbcc36291043" translate="yes" xml:space="preserve">
          <source>List of HTTP request methods from the following RFCs: Hypertext Transfer Protocol &amp;ndash; HTTP/1.1 (&lt;a href=&quot;https://www.ietf.org/rfc/rfc2616.txt&quot;&gt;www.ietf.org/rfc/rfc2616.txt&lt;/a&gt;) HTTP Extensions for Distributed Authoring &amp;ndash; WEBDAV (&lt;a href=&quot;https://www.ietf.org/rfc/rfc2518.txt&quot;&gt;www.ietf.org/rfc/rfc2518.txt&lt;/a&gt;) Versioning Extensions to WebDAV (&lt;a href=&quot;https://www.ietf.org/rfc/rfc3253.txt&quot;&gt;www.ietf.org/rfc/rfc3253.txt&lt;/a&gt;) Ordered Collections Protocol (WebDAV) (&lt;a href=&quot;https://www.ietf.org/rfc/rfc3648.txt&quot;&gt;www.ietf.org/rfc/rfc3648.txt&lt;/a&gt;) Web Distributed Authoring and Versioning (WebDAV) Access Control Protocol (&lt;a href=&quot;https://www.ietf.org/rfc/rfc3744.txt&quot;&gt;www.ietf.org/rfc/rfc3744.txt&lt;/a&gt;) Web Distributed Authoring and Versioning (WebDAV) SEARCH (&lt;a href=&quot;https://www.ietf.org/rfc/rfc5323.txt&quot;&gt;www.ietf.org/rfc/rfc5323.txt&lt;/a&gt;) Calendar Extensions to WebDAV (&lt;a href=&quot;https://www.ietf.org/rfc/rfc4791.txt&quot;&gt;www.ietf.org/rfc/rfc4791.txt&lt;/a&gt;) PATCH &lt;a href=&quot;../method&quot;&gt;Method&lt;/a&gt; for HTTP (&lt;a href=&quot;https://www.ietf.org/rfc/rfc5789.txt&quot;&gt;www.ietf.org/rfc/rfc5789.txt&lt;/a&gt;)</source>
          <target state="translated">来自以下RFC的HTTP请求方法列表：超文本传输​​协议&amp;ndash; HTTP / 1.1（&lt;a href=&quot;https://www.ietf.org/rfc/rfc2616.txt&quot;&gt;www.ietf.org/rfc/rfc2616.txt&lt;/a&gt;）分布式创作的HTTP扩展&amp;ndash; WEBDAV（&lt;a href=&quot;https://www.ietf.org/rfc/rfc2518.txt&quot;&gt;www.ietf.org/rfc/rfc2518.txt&lt;/a&gt;） WebDAV的版本扩展（&lt;a href=&quot;https://www.ietf.org/rfc/rfc3253.txt&quot;&gt;www.ietf.org/rfc/rfc3253.txt&lt;/a&gt;）有序集合协议（WebDAV）（&lt;a href=&quot;https://www.ietf.org/rfc/rfc3648.txt&quot;&gt;www.ietf.org/rfc/rfc3648.txt&lt;/a&gt;）Web分布式创作和版本控制（WebDAV）访问控制协议（&lt;a href=&quot;https://www.ietf.org/rfc/rfc3744.txt&quot;&gt;www。 ietf.org/rfc/rfc3744.txt&lt;/a&gt;）Web分布式创作和版本控制（WebDAV）搜索（&lt;a href=&quot;https://www.ietf.org/rfc/rfc5323.txt&quot;&gt;www.ietf.org/rfc/rfc5323.txt&lt;/a&gt;）日历扩展到的WebDAV（&lt;a href=&quot;https://www.ietf.org/rfc/rfc4791.txt&quot;&gt;www.ietf.org/rfc/rfc4791.txt&lt;/a&gt;）PATCH HTTP &lt;a href=&quot;../method&quot;&gt;方法&lt;/a&gt;（&lt;a href=&quot;https://www.ietf.org/rfc/rfc5789.txt&quot;&gt;www.ietf.org/rfc/rfc5789.txt&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="e99b9b6b4d6ae76f036d8dca5b804e70b84aaf44" translate="yes" xml:space="preserve">
          <source>Listing Existing Routes</source>
          <target state="translated">列出现有路线</target>
        </trans-unit>
        <trans-unit id="a3bd4dc53839cb5b27fe373d0c90296d3ac3ae04" translate="yes" xml:space="preserve">
          <source>Listing all articles</source>
          <target state="translated">列出所有文章</target>
        </trans-unit>
        <trans-unit id="f0de68777e9549b34e900beb10c9ee85fb7009c4" translate="yes" xml:space="preserve">
          <source>Live Compilation</source>
          <target state="translated">现场合集</target>
        </trans-unit>
        <trans-unit id="e87779f8c44830dda0afa1d38923843e3867f226" translate="yes" xml:space="preserve">
          <source>Live Streaming of Arbitrary Data</source>
          <target state="translated">任意数据的实时流媒体</target>
        </trans-unit>
        <trans-unit id="1de45b5aa2fca7905d7dc09902ec0937f54991cc" translate="yes" xml:space="preserve">
          <source>Live#process</source>
          <target state="translated">Live#process</target>
        </trans-unit>
        <trans-unit id="6b673d9f50ed21fc6d9ccf9a74fec9716a0a7c34" translate="yes" xml:space="preserve">
          <source>Live#response_body=</source>
          <target state="translated">Live#response_body=</target>
        </trans-unit>
        <trans-unit id="1f8628696f61ead3bad365dcf9e48ec45e356b1a" translate="yes" xml:space="preserve">
          <source>Live::SSE</source>
          <target state="translated">Live::SSE</target>
        </trans-unit>
        <trans-unit id="e80cbd3ad532e9de26e75dec756d632ae670e179" translate="yes" xml:space="preserve">
          <source>Live::SSE#close</source>
          <target state="translated">Live::SSE#close</target>
        </trans-unit>
        <trans-unit id="6ca07fe7ffa55271abd157aad738f9c911eccd09" translate="yes" xml:space="preserve">
          <source>Live::SSE#write</source>
          <target state="translated">Live::SSE#write</target>
        </trans-unit>
        <trans-unit id="2002f9ba4a5ddf3e6317fd5214f79f817a7c0f7b" translate="yes" xml:space="preserve">
          <source>Live::SSE::new</source>
          <target state="translated">Live::SSE::new</target>
        </trans-unit>
        <trans-unit id="516a45906ee7a73f138ed7aee6724d5995797437" translate="yes" xml:space="preserve">
          <source>Load &lt;code&gt;Rails&lt;/code&gt; generators and invoke the registered hooks. Check &lt;code&gt;Rails::Railtie.generators&lt;/code&gt; for more info.</source>
          <target state="translated">加载 &lt;code&gt;Rails&lt;/code&gt; 生成器并调用已注册的钩子。检查 &lt;code&gt;Rails::Railtie.generators&lt;/code&gt; 以获得更多信息。</target>
        </trans-unit>
        <trans-unit id="87c8a03a8a5fa7b03a6feed7b52827941ada6924" translate="yes" xml:space="preserve">
          <source>Load &lt;code&gt;Rails&lt;/code&gt; runner and invoke the registered hooks. Check &lt;code&gt;Rails::Railtie.runner&lt;/code&gt; for more info.</source>
          <target state="translated">加载 &lt;code&gt;Rails&lt;/code&gt; 运行程序并调用已注册的钩子。检查 &lt;code&gt;Rails::Railtie.runner&lt;/code&gt; 以获取更多信息。</target>
        </trans-unit>
        <trans-unit id="0856eaf6a58aba3e18f24940f49d7a541bb5fbf7" translate="yes" xml:space="preserve">
          <source>Load Balancing Replicas</source>
          <target state="translated">负载均衡副本</target>
        </trans-unit>
        <trans-unit id="3f211060ae86ba78f9cf3ddbf2e12e4cdd937256" translate="yes" xml:space="preserve">
          <source>Load Interlock</source>
          <target state="translated">负载联锁</target>
        </trans-unit>
        <trans-unit id="3b57c97e1176888fbdd46c4bd908ef2a819c9b3e" translate="yes" xml:space="preserve">
          <source>Load Rails generators and invoke the registered hooks. Check &lt;code&gt;Rails::Railtie.generators&lt;/code&gt; for more info.</source>
          <target state="translated">加载Rails生成器并调用已注册的钩子。检查 &lt;code&gt;Rails::Railtie.generators&lt;/code&gt; 以获得更多信息。</target>
        </trans-unit>
        <trans-unit id="90e7e9635304b55840a29eb4e6fe7f20cc9f5fa9" translate="yes" xml:space="preserve">
          <source>Load Rails runner and invoke the registered hooks. Check &lt;code&gt;Rails::Railtie.runner&lt;/code&gt; for more info.</source>
          <target state="translated">加载Rails运行程序并调用已注册的钩子。检查 &lt;code&gt;Rails::Railtie.runner&lt;/code&gt; 以获取更多信息。</target>
        </trans-unit>
        <trans-unit id="7f519035b4f9c4608d417cc7916003ffcfb5efb6" translate="yes" xml:space="preserve">
          <source>Load Rake, railties tasks and invoke the registered hooks. Check &lt;code&gt;Rails::Railtie.rake_tasks&lt;/code&gt; for more info.</source>
          <target state="translated">加载Rake，railties任务并调用已注册的钩子。检查 &lt;code&gt;Rails::Railtie.rake_tasks&lt;/code&gt; 了解更多信息。</target>
        </trans-unit>
        <trans-unit id="b89c0598fef41aa501e1b546bb1a781c1aff38c0" translate="yes" xml:space="preserve">
          <source>Load and Configuration Hooks</source>
          <target state="translated">负载和配置钩子</target>
        </trans-unit>
        <trans-unit id="a2c2986fb53b84bdd72507871802910ba4f82c3d" translate="yes" xml:space="preserve">
          <source>Load and configuration hooks are the API that allow you to hook into this initialization process without violating the load contract with Rails. This will also mitigate boot performance degradation and avoid conflicts.</source>
          <target state="translated">加载和配置钩子是允许你钩入这个初始化过程的API,而不违反与Rails的负载合约。这也将减轻引导性能下降,避免冲突。</target>
        </trans-unit>
        <trans-unit id="248737ce5d09b3292262076a9f3ec47f2b88e069" translate="yes" xml:space="preserve">
          <source>Load balancing replicas</source>
          <target state="translated">负载平衡副本</target>
        </trans-unit>
        <trans-unit id="5b040245677803bf954f78cdd2af2a4400d98afd" translate="yes" xml:space="preserve">
          <source>Load console and invoke the registered hooks. Check &lt;code&gt;Rails::Railtie.console&lt;/code&gt; for more info.</source>
          <target state="translated">加载控制台并调用注册的挂钩。检查 &lt;code&gt;Rails::Railtie.console&lt;/code&gt; 以获得更多信息。</target>
        </trans-unit>
        <trans-unit id="1cc55c2158b1ec32df371ef3e42b70f4ecfbd7e5" translate="yes" xml:space="preserve">
          <source>Load data from db/seeds.rb file. It can be used in to load engines' seeds, e.g.:</source>
          <target state="translated">从db/seeds.rb文件中加载数据。它可以用于加载引擎的种子,例如:。</target>
        </trans-unit>
        <trans-unit id="c9ec4dd9e6e9589e6eb04e8827dc323ba0606dc6" translate="yes" xml:space="preserve">
          <source>Load the fixture data into the table</source>
          <target state="translated">将夹具数据加载到表中</target>
        </trans-unit>
        <trans-unit id="46559e0eb7289033adcb2334be83299e56fb790b" translate="yes" xml:space="preserve">
          <source>LoadError</source>
          <target state="translated">LoadError</target>
        </trans-unit>
        <trans-unit id="c6a9492b638a409f67b0d9e982b3e7d774ce79be" translate="yes" xml:space="preserve">
          <source>LoadError#is_missing?</source>
          <target state="translated">LoadError#is_missing?</target>
        </trans-unit>
        <trans-unit id="680b0dbdca06c127414899a3ee820eac94b1b989" translate="yes" xml:space="preserve">
          <source>Loading Mechanism</source>
          <target state="translated">装载机制</target>
        </trans-unit>
        <trans-unit id="2ee3534a3ee9902cefe30be9a319bf71af143f92" translate="yes" xml:space="preserve">
          <source>Loading Rails</source>
          <target state="translated">装载轨道</target>
        </trans-unit>
        <trans-unit id="3e645f2adaf9f5637fe18120419047275c2c7afb" translate="yes" xml:space="preserve">
          <source>Loading Rake Tasks and &lt;a href=&quot;generators&quot;&gt;&lt;code&gt;Generators&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">加载耙任务和&lt;a href=&quot;generators&quot;&gt; &lt;code&gt;Generators&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b6d4e36c8ec129c107705cec5ce7a52230bcbdac" translate="yes" xml:space="preserve">
          <source>Loading Rake Tasks and &lt;a href=&quot;generators&quot;&gt;Generators&lt;/a&gt;</source>
          <target state="translated">加载耙任务和&lt;a href=&quot;generators&quot;&gt;生成器&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dc26c6048f64ac1b38aa517f836e37fbf66e2c1d" translate="yes" xml:space="preserve">
          <source>Loading nested relationships is possible using a Hash:</source>
          <target state="translated">使用Hash可以加载嵌套关系。</target>
        </trans-unit>
        <trans-unit id="6a2179426c96029e473583f4db63f8591c481484" translate="yes" xml:space="preserve">
          <source>Loading priority</source>
          <target state="translated">加载优先级</target>
        </trans-unit>
        <trans-unit id="f97bb749d00e9d8d7b4d3cd28987c05e88b7ce8e" translate="yes" xml:space="preserve">
          <source>Loads and returns the entire raw configuration of database from values stored in &lt;code&gt;config/database.yml&lt;/code&gt;.</source>
          <target state="translated">从 &lt;code&gt;config/database.yml&lt;/code&gt; 中存储的值加载并返回数据库的整个原始配置。</target>
        </trans-unit>
        <trans-unit id="7dac81fe05d6da25576051805b6a4ec6f157c584" translate="yes" xml:space="preserve">
          <source>Loads default configurations. See &lt;a href=&quot;https://guides.rubyonrails.org/configuring.html#results-of-config-load-defaults&quot;&gt;the result of the method for each version&lt;/a&gt;.</source>
          <target state="translated">加载默认配置。请参见&lt;a href=&quot;https://guides.rubyonrails.org/configuring.html#results-of-config-load-defaults&quot;&gt;每个版本的方法结果&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="96e2841f795c120ab7abbb2a3ce3f19e15e77e86" translate="yes" xml:space="preserve">
          <source>Local Precompilation</source>
          <target state="translated">当地预编</target>
        </trans-unit>
        <trans-unit id="1c19411016a1397c6d7b57cf20afdd1da2dd9035" translate="yes" xml:space="preserve">
          <source>Local cache. Hot in-memory primary cache within block/middleware scope.</source>
          <target state="translated">本地缓存。在块/中间件范围内的热内存主缓存。</target>
        </trans-unit>
        <trans-unit id="ba7f74c4406ac9a4770f83a94dfa9c053e17cdd8" translate="yes" xml:space="preserve">
          <source>Local compilation allows you to commit the compiled files into source control, and deploy as normal.</source>
          <target state="translated">本地编译允许你将编译后的文件提交到源码控制中,并像正常的部署一样。</target>
        </trans-unit>
        <trans-unit id="f55dab02536ee16f582d5325dacc099456f85791" translate="yes" xml:space="preserve">
          <source>Locales.</source>
          <target state="translated">Locales.</target>
        </trans-unit>
        <trans-unit id="73b34ea0c0a622e20701c981eb89fe3ec0a90df7" translate="yes" xml:space="preserve">
          <source>Localization can also be based purely on the translation of the attribute-name (if you are using &lt;a href=&quot;../../activerecord&quot;&gt;&lt;code&gt;ActiveRecord&lt;/code&gt;&lt;/a&gt;):</source>
          <target state="translated">本地化也可以纯粹基于属性名称的转换（如果使用&lt;a href=&quot;../../activerecord&quot;&gt; &lt;code&gt;ActiveRecord&lt;/code&gt; &lt;/a&gt;）：</target>
        </trans-unit>
        <trans-unit id="90074f8117f03461acc7b696a5b8d3dccb4b250b" translate="yes" xml:space="preserve">
          <source>Localization can also be based purely on the translation of the attribute-name (if you are using &lt;a href=&quot;../../activerecord&quot;&gt;ActiveRecord&lt;/a&gt;):</source>
          <target state="translated">本地化也可以纯粹基于属性名称的转换（如果使用&lt;a href=&quot;../../activerecord&quot;&gt;ActiveRecord&lt;/a&gt;）：</target>
        </trans-unit>
        <trans-unit id="a3a34118a7f1edcd0e1c47f55d3079c60385b677" translate="yes" xml:space="preserve">
          <source>Localized Views</source>
          <target state="translated">本地化观点</target>
        </trans-unit>
        <trans-unit id="3c40afeba79944e854dac84a2ffd51e7d381cc30" translate="yes" xml:space="preserve">
          <source>Localizing content</source>
          <target state="translated">内容本地化</target>
        </trans-unit>
        <trans-unit id="4c03678b420b8bf20d3d6c624f864ad7ee683883" translate="yes" xml:space="preserve">
          <source>Locate a specific time zone object. If the argument is a string, it is interpreted to mean the name of the timezone to locate. If it is a numeric value it is either the hour offset, or the second offset, of the timezone to find. (The first one with that offset will be returned.) Returns &lt;code&gt;nil&lt;/code&gt; if no such time zone is known to the system.</source>
          <target state="translated">找到一个特定的时区对象。如果参数是字符串，则将其解释为要定位的时区的名称。如果是数字值，则为要查找的时区的小时偏移量或第二个偏移量。（将返回具有该偏移量的第一个。）如果系统不知道这样的时区，则返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2933d6ed899ca9db16a4351ba422ce7bc83c406b" translate="yes" xml:space="preserve">
          <source>Locates a Trix editor and fills it in with the given HTML.</source>
          <target state="translated">找到一个Trix编辑器,并用给定的HTML填入其中。</target>
        </trans-unit>
        <trans-unit id="9e95ef1a476c826249b6254155f1da146086ac43" translate="yes" xml:space="preserve">
          <source>Location response header</source>
          <target state="translated">位置响应头</target>
        </trans-unit>
        <trans-unit id="eb05c96a9e2a4707170d9c3b8a23447c38f4cffd" translate="yes" xml:space="preserve">
          <source>Locations for Initialization Code</source>
          <target state="translated">初始化代码的位置</target>
        </trans-unit>
        <trans-unit id="710ae4ff639eebf3d4df032ac4c7f3a3743c7b07" translate="yes" xml:space="preserve">
          <source>LockWaitTimeout</source>
          <target state="translated">LockWaitTimeout</target>
        </trans-unit>
        <trans-unit id="70835a0129c110391e7f829d841581f090cc206d" translate="yes" xml:space="preserve">
          <source>Locking Records for Update</source>
          <target state="translated">锁定记录以便更新</target>
        </trans-unit>
        <trans-unit id="df60e973a265b7d703153225e3ca5b47b7d40460" translate="yes" xml:space="preserve">
          <source>Locking is helpful for preventing race conditions when updating records in the database and ensuring atomic updates.</source>
          <target state="translated">锁定有助于防止数据库中更新记录时出现竞赛条件,保证原子更新。</target>
        </trans-unit>
        <trans-unit id="8f4169d04da897048c43e4c9684fc2f239bde026" translate="yes" xml:space="preserve">
          <source>Locking::Optimistic</source>
          <target state="translated">Locking::Optimistic</target>
        </trans-unit>
        <trans-unit id="2f864ade87e4b991694ad9e9afa97f92ae24daed" translate="yes" xml:space="preserve">
          <source>Locking::Optimistic::ClassMethods</source>
          <target state="translated">Locking::Optimistic::ClassMethods</target>
        </trans-unit>
        <trans-unit id="efc6084f6c49058a0f0ef20343618f9318154bab" translate="yes" xml:space="preserve">
          <source>Locking::Optimistic::ClassMethods#locking_column</source>
          <target state="translated">Locking::Optimistic::ClassMethods#locking_column</target>
        </trans-unit>
        <trans-unit id="08b053fe703a6fda9c517d44062753cd85d1e48b" translate="yes" xml:space="preserve">
          <source>Locking::Optimistic::ClassMethods#locking_column=</source>
          <target state="translated">Locking::Optimistic::ClassMethods#locking_column=</target>
        </trans-unit>
        <trans-unit id="8b926b531b9aed70e598004702c9afc9ff288d3b" translate="yes" xml:space="preserve">
          <source>Locking::Optimistic::ClassMethods#locking_enabled?</source>
          <target state="translated">Locking::Optimistic::ClassMethods#locking_enabled?</target>
        </trans-unit>
        <trans-unit id="a93398134569361708a52f98f356d046e6d55882" translate="yes" xml:space="preserve">
          <source>Locking::Optimistic::ClassMethods#reset_locking_column</source>
          <target state="translated">Locking::Optimistic::ClassMethods#reset_locking_column</target>
        </trans-unit>
        <trans-unit id="c589b468cf024c9825b7795a069b9d21a6f97377" translate="yes" xml:space="preserve">
          <source>Locking::Optimistic::ClassMethods#update_counters</source>
          <target state="translated">Locking::Optimistic::ClassMethods#update_counters</target>
        </trans-unit>
        <trans-unit id="be460ffa012cbe0430d2f9788757f594528a1561" translate="yes" xml:space="preserve">
          <source>Locking::Pessimistic</source>
          <target state="translated">Locking::Pessimistic</target>
        </trans-unit>
        <trans-unit id="d06e7be0414bb22dece5eb8c8424c6ced1994179" translate="yes" xml:space="preserve">
          <source>Locking::Pessimistic#lock!</source>
          <target state="translated">Locking::Pessimistic#lock!</target>
        </trans-unit>
        <trans-unit id="0feea6ff63eb300cd3671f76b7c22268524140de" translate="yes" xml:space="preserve">
          <source>Locking::Pessimistic#with_lock</source>
          <target state="translated">Locking::Pessimistic#with_lock</target>
        </trans-unit>
        <trans-unit id="1666df53d33ece6d245d229a5b15f3cd95f66b69" translate="yes" xml:space="preserve">
          <source>Log Filtering</source>
          <target state="translated">日志过滤</target>
        </trans-unit>
        <trans-unit id="0797e5297ca5c23288b5154f0d790da08cf46509" translate="yes" xml:space="preserve">
          <source>Log Levels</source>
          <target state="translated">对数水平</target>
        </trans-unit>
        <trans-unit id="7f1c49dd337173f24af84a17222b9b4d40ebbf67" translate="yes" xml:space="preserve">
          <source>Log all deprecation warnings to +$stderr+.</source>
          <target state="translated">将所有的弃用警告记录到+$stderr+。</target>
        </trans-unit>
        <trans-unit id="8c388deed51ddb528977af4fdbf643cb2fe84d76" translate="yes" xml:space="preserve">
          <source>Log all deprecation warnings to &lt;code&gt;$stderr&lt;/code&gt;.</source>
          <target state="translated">将所有弃用警告记录到 &lt;code&gt;$stderr&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8341546ec1ee881b75ca43bb8090792a0d48ce20" translate="yes" xml:space="preserve">
          <source>Log all deprecation warnings to &lt;code&gt;Rails.logger&lt;/code&gt;.</source>
          <target state="translated">将所有弃用警告记录到 &lt;code&gt;Rails.logger&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="c2d2e22437d49b9714bdc19ff30351f11a7a7a74" translate="yes" xml:space="preserve">
          <source>Log subscriber also has some helpers to deal with logging and automatically flushes all logs when the request finishes (via &lt;code&gt;action_dispatch.callback&lt;/code&gt; notification) in a Rails environment.</source>
          <target state="translated">日志订阅服务器还具有一些帮助处理日志的助手，并在Rails环境中（通过 &lt;code&gt;action_dispatch.callback&lt;/code&gt; 通知）完成请求后自动刷新所有日志。</target>
        </trans-unit>
        <trans-unit id="171e213cec25bdc69e47b2e95d1df5626b979f38" translate="yes" xml:space="preserve">
          <source>Log tags (&lt;code&gt;taggers&lt;/code&gt;) can be an &lt;a href=&quot;../../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; containing: methods that the &lt;code&gt;request&lt;/code&gt; object responds to, objects that respond to &lt;code&gt;to_s&lt;/code&gt; or Proc objects that accept an instance of the &lt;code&gt;request&lt;/code&gt; object.</source>
          <target state="translated">日志标记（ &lt;code&gt;taggers&lt;/code&gt; ）可以是一个&lt;a href=&quot;../../array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; ,&lt;/a&gt;包含以下内容： &lt;code&gt;request&lt;/code&gt; 对象响应的方法，响应 &lt;code&gt;to_s&lt;/code&gt; 的对象或接受 &lt;code&gt;request&lt;/code&gt; 对象实例的Proc对象。</target>
        </trans-unit>
        <trans-unit id="c5250cfa995360aa285147b0f1c57abc6ca7f730" translate="yes" xml:space="preserve">
          <source>Log tags (&lt;code&gt;taggers&lt;/code&gt;) can be an &lt;a href=&quot;../../array&quot;&gt;Array&lt;/a&gt; containing: methods that the &lt;code&gt;request&lt;/code&gt; object responds to, objects that respond to &lt;code&gt;to_s&lt;/code&gt; or Proc objects that accept an instance of the &lt;code&gt;request&lt;/code&gt; object.</source>
          <target state="translated">日志标记（ &lt;code&gt;taggers&lt;/code&gt; ）可以是一个&lt;a href=&quot;../../array&quot;&gt;Array，&lt;/a&gt;包含以下内容： &lt;code&gt;request&lt;/code&gt; 对象响应的方法，响应 &lt;code&gt;to_s&lt;/code&gt; 的对象或接受 &lt;code&gt;request&lt;/code&gt; 对象实例的Proc 对象。</target>
        </trans-unit>
        <trans-unit id="5a90aa65e0a6658543600ca7e1e91262921df2de" translate="yes" xml:space="preserve">
          <source>LogSubscriber</source>
          <target state="translated">LogSubscriber</target>
        </trans-unit>
        <trans-unit id="218d5e774207d1d66e3f9b66f20bd4af3471f172" translate="yes" xml:space="preserve">
          <source>LogSubscriber#deliver</source>
          <target state="translated">LogSubscriber#deliver</target>
        </trans-unit>
        <trans-unit id="55af923ea33dff98ca7c168da85d23e80fa5317c" translate="yes" xml:space="preserve">
          <source>LogSubscriber#logger</source>
          <target state="translated">LogSubscriber#logger</target>
        </trans-unit>
        <trans-unit id="7a2411179d17d59f93aad508af303050b741fa32" translate="yes" xml:space="preserve">
          <source>LogSubscriber#process</source>
          <target state="translated">LogSubscriber#process</target>
        </trans-unit>
        <trans-unit id="6bf53002539406558cd714c6ef5bf62042b5b8a6" translate="yes" xml:space="preserve">
          <source>LogSubscriber#receive</source>
          <target state="translated">LogSubscriber#receive</target>
        </trans-unit>
        <trans-unit id="8432c24573f3f89fad60802fe8eddf1da6315768" translate="yes" xml:space="preserve">
          <source>Logger</source>
          <target state="translated">Logger</target>
        </trans-unit>
        <trans-unit id="676b4fcb697f154bd5a7bc122e393a6385de5014" translate="yes" xml:space="preserve">
          <source>Logger::Formatter</source>
          <target state="translated">Logger::Formatter</target>
        </trans-unit>
        <trans-unit id="3d9e60c602c970a2f5c3509958b4089cbf8c68d1" translate="yes" xml:space="preserve">
          <source>Logger::SimpleFormatter</source>
          <target state="translated">Logger::SimpleFormatter</target>
        </trans-unit>
        <trans-unit id="4d7ad5706deb8532d7eec04b8aa18ef1f42c1a43" translate="yes" xml:space="preserve">
          <source>Logger::SimpleFormatter#call</source>
          <target state="translated">Logger::SimpleFormatter#call</target>
        </trans-unit>
        <trans-unit id="a9707eb17132476d73754f320250ed9502fdf44d" translate="yes" xml:space="preserve">
          <source>Logger::logger_outputs_to?</source>
          <target state="translated">Logger::logger_outputs_to?</target>
        </trans-unit>
        <trans-unit id="d0005f516a11a16bb48bbeb76e0cb73c796b70a7" translate="yes" xml:space="preserve">
          <source>Logger::new</source>
          <target state="translated">Logger::new</target>
        </trans-unit>
        <trans-unit id="f18d79bc26224d883a29b68180c11a40752a2aac" translate="yes" xml:space="preserve">
          <source>LoggerSilence</source>
          <target state="translated">LoggerSilence</target>
        </trans-unit>
        <trans-unit id="8b290acfc10cb27d57e006dd5e54594619754a64" translate="yes" xml:space="preserve">
          <source>LoggerSilence#silence</source>
          <target state="translated">LoggerSilence#silence</target>
        </trans-unit>
        <trans-unit id="57003616863fe634c645e342ee9080681e419c5f" translate="yes" xml:space="preserve">
          <source>Logging</source>
          <target state="translated">Logging</target>
        </trans-unit>
        <trans-unit id="da23089c20adecce3364e2fd63f0e5cb8ece4167" translate="yes" xml:space="preserve">
          <source>Logging will always have a small impact on the performance of your Rails app, particularly when logging to disk. Additionally, there are a few subtleties:</source>
          <target state="translated">日志总是会对Rails应用的性能产生一点影响,尤其是在将日志记录到磁盘时。此外,还有一些微妙的地方。</target>
        </trans-unit>
        <trans-unit id="6d8dba556a702c4b2b02fff1697dced0aa887dad" translate="yes" xml:space="preserve">
          <source>Logging: Rails applications log every request, with a level of verbosity appropriate for the current mode. Rails logs in development include information about the request environment, database queries, and basic performance information.</source>
          <target state="translated">日志记录。Rails应用会记录每一个请求,并以适合当前模式的简洁程度进行记录。开发中的Rails日志包括有关请求环境、数据库查询和基本性能信息。</target>
        </trans-unit>
        <trans-unit id="f431dc40465ac4a9323987ccc7c60a2626bcb38a" translate="yes" xml:space="preserve">
          <source>Long-lived channels (and connections) also mean you're responsible for ensuring that the data is fresh. If you hold a reference to a user record, but the name is changed while that reference is held, you may be sending stale data if you don't take precautions to avoid it.</source>
          <target state="translated">长时间的通道(和连接)也意味着你有责任确保数据是新鲜的。如果你持有一个用户记录的引用,但在持有该引用的同时,名称也发生了变化,如果你不采取预防措施来避免,你可能会发送陈旧的数据。</target>
        </trans-unit>
        <trans-unit id="3fa5015243d6b37528285498fd3134e805a65d33" translate="yes" xml:space="preserve">
          <source>Looking at this output, it's easy to understand how generators work in Rails 3.0 and above. The scaffold generator doesn't actually generate anything, it just invokes others to do the work. This allows us to add/replace/remove any of those invocations. For instance, the scaffold generator invokes the scaffold_controller generator, which invokes erb, test_unit and helper generators. Since each generator has a single responsibility, they are easy to reuse, avoiding code duplication.</source>
          <target state="translated">看了这个输出,很容易理解Rails 3.0及以上版本的生成器是如何工作的。脚手架生成器实际上并不生成任何东西,它只是调用他人来完成工作。这允许我们添加/替换/删除任何这些调用。例如,脚手架生成器会调用scaffold_controller生成器,而scaffold_controller会调用erb、test_unit和helper生成器。由于每个生成器只有一个责任,所以它们很容易重用,避免代码重复。</target>
        </trans-unit>
        <trans-unit id="b887769549ff1debdc02faa3b40f3f606879358e" translate="yes" xml:space="preserve">
          <source>Looking up Translations</source>
          <target state="translated">查找翻译</target>
        </trans-unit>
        <trans-unit id="7bde0be8517d00fa09c4fc2ce5dfe9429a37dc46" translate="yes" xml:space="preserve">
          <source>Looping through a collection of records from the database (using the &lt;a href=&quot;scoping/named/classmethods#method-i-all&quot;&gt;&lt;code&gt;Scoping::Named::ClassMethods.all&lt;/code&gt;&lt;/a&gt; method, for example) is very inefficient since it will try to instantiate all the objects at once.</source>
          <target state="translated">循环遍历数据库中的记录集合（例如，使用&lt;a href=&quot;scoping/named/classmethods#method-i-all&quot;&gt; &lt;code&gt;Scoping::Named::ClassMethods.all&lt;/code&gt; &lt;/a&gt;方法）效率很低，因为它将尝试立即实例化所有对象。</target>
        </trans-unit>
        <trans-unit id="d34434162cf0ffe0f5e7c53841247432498ca42c" translate="yes" xml:space="preserve">
          <source>Looping through a collection of records from the database (using the &lt;a href=&quot;scoping/named/classmethods#method-i-all&quot;&gt;ActiveRecord::Scoping::Named::ClassMethods#all&lt;/a&gt; method, for example) is very inefficient since it will try to instantiate all the objects at once.</source>
          <target state="translated">循环遍历数据库中的记录集合（例如，使用&lt;a href=&quot;scoping/named/classmethods#method-i-all&quot;&gt;ActiveRecord :: Scoping :: Named :: ClassMethods＃all&lt;/a&gt;方法）效率很低，因为它将尝试立即实例化所有对象。</target>
        </trans-unit>
        <trans-unit id="89de374ab7a4be82c038987469668c6f701d3cc7" translate="yes" xml:space="preserve">
          <source>Looping through a collection of records from the database (using the &lt;code&gt;all&lt;/code&gt; method, for example) is very inefficient since it will try to instantiate all the objects at once.</source>
          <target state="translated">循环遍历数据库中的记录集合（例如，使用 &lt;code&gt;all&lt;/code&gt; 方法）效率很低，因为它将尝试立即实例化所有对象。</target>
        </trans-unit>
        <trans-unit id="d216bdf358444e1a0d5e9711e1c686d79571b539" translate="yes" xml:space="preserve">
          <source>Low-Level Caching</source>
          <target state="translated">低级缓存</target>
        </trans-unit>
        <trans-unit id="81eda5632cd54c811f36d9ec9e372ab5faaf038f" translate="yes" xml:space="preserve">
          <source>MAGENTA</source>
          <target state="translated">MAGENTA</target>
        </trans-unit>
        <trans-unit id="b315cd523ae2ef826dbad53529ba6c9c2ad21ff1" translate="yes" xml:space="preserve">
          <source>MAPPING</source>
          <target state="translated">MAPPING</target>
        </trans-unit>
        <trans-unit id="2848f474d72e47595a51218285d39dc86a6ee429" translate="yes" xml:space="preserve">
          <source>MAXIMUM_UPLOAD_PARTS_COUNT</source>
          <target state="translated">MAXIMUM_UPLOAD_PARTS_COUNT</target>
        </trans-unit>
        <trans-unit id="65124a8cda19a4bdcf3161683856e5c9f03eeb50" translate="yes" xml:space="preserve">
          <source>MAX_COOKIE_SIZE</source>
          <target state="translated">MAX_COOKIE_SIZE</target>
        </trans-unit>
        <trans-unit id="9df6c8ec33fd4d7a7eea5fc38ce44524546bce63" translate="yes" xml:space="preserve">
          <source>MAX_ID</source>
          <target state="translated">MAX_ID</target>
        </trans-unit>
        <trans-unit id="ba4091290416138086fb56a894f148cffa494206" translate="yes" xml:space="preserve">
          <source>MAX_KEY_BYTESIZE</source>
          <target state="translated">MAX_KEY_BYTESIZE</target>
        </trans-unit>
        <trans-unit id="284fa63eb59eba7c9e2cd98118f61b0726b934ae" translate="yes" xml:space="preserve">
          <source>MAX_PASSWORD_LENGTH_ALLOWED</source>
          <target state="translated">MAX_PASSWORD_LENGTH_ALLOWED</target>
        </trans-unit>
        <trans-unit id="a98cf28ee66a521605286ef7bf41c421cac7c060" translate="yes" xml:space="preserve">
          <source>MEGABYTE</source>
          <target state="translated">MEGABYTE</target>
        </trans-unit>
        <trans-unit id="8d4dcd2d8fbee8ff07ff7bc53114f0c434eeec56" translate="yes" xml:space="preserve">
          <source>MESSAGE_OPTIONS</source>
          <target state="translated">MESSAGE_OPTIONS</target>
        </trans-unit>
        <trans-unit id="495e45b5da0f07a933bcae72c50ae91eeb20d3f5" translate="yes" xml:space="preserve">
          <source>MIME_NAME</source>
          <target state="translated">MIME_NAME</target>
        </trans-unit>
        <trans-unit id="4a5aa456e74d55cddbb3f26a2e5b910c10b728c1" translate="yes" xml:space="preserve">
          <source>MIME_PARAMETER</source>
          <target state="translated">MIME_PARAMETER</target>
        </trans-unit>
        <trans-unit id="aa9e2c39cad2ac07dfa73810c9f0172f4c586568" translate="yes" xml:space="preserve">
          <source>MIME_PARAMETER_KEY</source>
          <target state="translated">MIME_PARAMETER_KEY</target>
        </trans-unit>
        <trans-unit id="dcefa2aeec7b7e6e08532fde0a1d873266cb4c02" translate="yes" xml:space="preserve">
          <source>MIME_PARAMETER_VALUE</source>
          <target state="translated">MIME_PARAMETER_VALUE</target>
        </trans-unit>
        <trans-unit id="0c7239873afa3db6794c6cf12a208d9718befee7" translate="yes" xml:space="preserve">
          <source>MIME_REGEXP</source>
          <target state="translated">MIME_REGEXP</target>
        </trans-unit>
        <trans-unit id="a8fa17735864cae1c62698a2f866732de4fcf2a5" translate="yes" xml:space="preserve">
          <source>MINIMUM_TOKEN_LENGTH</source>
          <target state="translated">MINIMUM_TOKEN_LENGTH</target>
        </trans-unit>
        <trans-unit id="2bd9323b7b8f4d32687cb655e64b2f2a8c08f1b2" translate="yes" xml:space="preserve">
          <source>MINIMUM_UPLOAD_PART_SIZE</source>
          <target state="translated">MINIMUM_UPLOAD_PART_SIZE</target>
        </trans-unit>
        <trans-unit id="468bfc8881876f60b1992fde5e9b6af946206e43" translate="yes" xml:space="preserve">
          <source>MINUTES_IN_QUARTER_YEAR</source>
          <target state="translated">MINUTES_IN_QUARTER_YEAR</target>
        </trans-unit>
        <trans-unit id="1a14e5831f85aa97e54c26370015ca312d486468" translate="yes" xml:space="preserve">
          <source>MINUTES_IN_THREE_QUARTERS_YEAR</source>
          <target state="translated">MINUTES_IN_THREE_QUARTERS_YEAR</target>
        </trans-unit>
        <trans-unit id="ac3a71bb010a31611bf5406bed00ef6e011aa34b" translate="yes" xml:space="preserve">
          <source>MINUTES_IN_YEAR</source>
          <target state="translated">MINUTES_IN_YEAR</target>
        </trans-unit>
        <trans-unit id="479396de59be987e42108d35e44f4b59dc1b4a9e" translate="yes" xml:space="preserve">
          <source>MODULES</source>
          <target state="translated">MODULES</target>
        </trans-unit>
        <trans-unit id="3bc34b9230133df1f9971deec3f33546dc36b624" translate="yes" xml:space="preserve">
          <source>MULTI_VALUE_METHODS</source>
          <target state="translated">MULTI_VALUE_METHODS</target>
        </trans-unit>
        <trans-unit id="d82bb796085b36f19aa29833ac03dc6a50644efe" translate="yes" xml:space="preserve">
          <source>MUST_REVALIDATE</source>
          <target state="translated">MUST_REVALIDATE</target>
        </trans-unit>
        <trans-unit id="8477fe9398216210024e61ba40f5df523ddf3df2" translate="yes" xml:space="preserve">
          <source>MVC and You</source>
          <target state="translated">MVC和你</target>
        </trans-unit>
        <trans-unit id="a8c694c348d74ec772f1e8f64d687c8999e1e811" translate="yes" xml:space="preserve">
          <source>Mail will automatically Base64 encode an attachment. If you want something different, encode your content and pass in the encoded content and encoding in a &lt;code&gt;Hash&lt;/code&gt; to the &lt;code&gt;attachments&lt;/code&gt; method.</source>
          <target state="translated">邮件将自动对Base64编码的附件。如果您需要其他内容，请对内容进行编码，然后将编码后的内容和 &lt;code&gt;Hash&lt;/code&gt; 中的编码传递给 &lt;code&gt;attachments&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="c55ad5c93794819374aa38d68902e3c966dcc117" translate="yes" xml:space="preserve">
          <source>MailHelper</source>
          <target state="translated">MailHelper</target>
        </trans-unit>
        <trans-unit id="3d95a627cdb107ff69b030371d1e7e8b4c10935f" translate="yes" xml:space="preserve">
          <source>MailHelper#attachments</source>
          <target state="translated">MailHelper#attachments</target>
        </trans-unit>
        <trans-unit id="b2f5e480ba0bee4286f1cc3a4ca5a963f43cfe63" translate="yes" xml:space="preserve">
          <source>MailHelper#block_format</source>
          <target state="translated">MailHelper#block_format</target>
        </trans-unit>
        <trans-unit id="7ae23fe551aca162ae1c5589d602a1df8e671748" translate="yes" xml:space="preserve">
          <source>MailHelper#format_paragraph</source>
          <target state="translated">MailHelper#format_paragraph</target>
        </trans-unit>
        <trans-unit id="fb236b1746e1802c3a0b73e9683c6ab41ac24d0b" translate="yes" xml:space="preserve">
          <source>MailHelper#mailer</source>
          <target state="translated">MailHelper#mailer</target>
        </trans-unit>
        <trans-unit id="3e8ee2a92d3b7f52814ab5089a1ff9eee1297fd1" translate="yes" xml:space="preserve">
          <source>MailHelper#message</source>
          <target state="translated">MailHelper#message</target>
        </trans-unit>
        <trans-unit id="f70ea59698ce3b86d3b1359815b6b8b662a4785d" translate="yes" xml:space="preserve">
          <source>Mailer Filters abort further processing if body is set to a non-nil value.</source>
          <target state="translated">如果body被设置为非零值,则邮件过滤器中止进一步处理。</target>
        </trans-unit>
        <trans-unit id="13980201fa07cfc07994ed387ca6379609fdff0c" translate="yes" xml:space="preserve">
          <source>Mailer Models</source>
          <target state="translated">邮递员型号</target>
        </trans-unit>
        <trans-unit id="680a61c5f502dd97082db34df71463ef11e26d1f" translate="yes" xml:space="preserve">
          <source>Mailer Testing</source>
          <target state="translated">邮件测试</target>
        </trans-unit>
        <trans-unit id="a21c64ba416f2ab2281167ae92a45b9bf82d97e2" translate="yes" xml:space="preserve">
          <source>Mailer Views</source>
          <target state="translated">邮件浏览量</target>
        </trans-unit>
        <trans-unit id="68e337f3658a60fb99f830ff9b6e79e91a43f276" translate="yes" xml:space="preserve">
          <source>Mailer test cases obtain the mailer being tested from the name of the test class using &lt;code&gt;constantize&lt;/code&gt;:</source>
          <target state="translated">邮件程序测试用例使用 &lt;code&gt;constantize&lt;/code&gt; 从测试类的名称中获取要测试的邮件程序：</target>
        </trans-unit>
        <trans-unit id="44df4fb76daaa7b1a6be96a25c78d05f88becb98" translate="yes" xml:space="preserve">
          <source>Mailer views</source>
          <target state="translated">邮递员意见</target>
        </trans-unit>
        <trans-unit id="587b49cee9e902b2a9c917c758289cbced65c031" translate="yes" xml:space="preserve">
          <source>Mailer views are located in the &lt;code&gt;app/views/name_of_mailer_class&lt;/code&gt; directory. The specific mailer view is known to the class because its name is the same as the mailer method. In our example from above, our mailer view for the &lt;code&gt;welcome_email&lt;/code&gt; method will be in &lt;code&gt;app/views/user_mailer/welcome_email.html.erb&lt;/code&gt; for the HTML version and &lt;code&gt;welcome_email.text.erb&lt;/code&gt; for the plain text version.</source>
          <target state="translated">邮件程序视图位于 &lt;code&gt;app/views/name_of_mailer_class&lt;/code&gt; 目录中。该类知道特定的邮件视图，因为它的名称与邮件方法相同。在上面的示例中，用于 &lt;code&gt;welcome_email&lt;/code&gt; 方法的邮件视图在HTML版本的 &lt;code&gt;app/views/user_mailer/welcome_email.html.erb&lt;/code&gt; 中，在纯文本版本的 &lt;code&gt;welcome_email.text.erb&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="36be81ab1542c937801f33caaded349a9bc4127c" translate="yes" xml:space="preserve">
          <source>Mailers are really just another way to render a view. Instead of rendering a view and sending it over the HTTP protocol, they are just sending it out through the email protocols instead. Due to this, it makes sense to just have your controller tell the Mailer to send an email when a user is successfully created.</source>
          <target state="translated">邮件发送器其实只是渲染视图的另一种方式。它们不是渲染一个视图并通过HTTP协议发送,而是通过电子邮件协议发送。由于这一点,当用户成功创建时,让你的控制器告诉Mailer发送电子邮件是有意义的。</target>
        </trans-unit>
        <trans-unit id="8f33bfdf3c88fe05bfdc4e267e0cc92da201b449" translate="yes" xml:space="preserve">
          <source>Mailers are really just another way to render a view. Instead of rendering a view and sending it over the HTTP protocol, they are sending it out through the email protocols instead. Due to this, it makes sense to have your controller tell the Mailer to send an email when a user is successfully created.</source>
          <target state="translated">邮件发送器实际上只是渲染视图的另一种方式。它们不是渲染一个视图并通过HTTP协议发送,而是通过电子邮件协议发送。由于这一点,当用户成功创建时,让你的控制器告诉Mailer发送电子邮件是有意义的。</target>
        </trans-unit>
        <trans-unit id="64de1eb796e4922fd13819de6eaab4dcdb1d7c9b" translate="yes" xml:space="preserve">
          <source>Mailers have methods called &quot;actions&quot; and they use views to structure their content. Where a controller generates content like HTML to send back to the client, a Mailer creates a message to be delivered via email.</source>
          <target state="translated">Mailer有被称为 &quot;动作 &quot;的方法,它们使用视图来结构它们的内容。控制器会生成像HTML这样的内容来回传给客户端,而Mailer则会创建一个消息来通过电子邮件发送。</target>
        </trans-unit>
        <trans-unit id="16066075c5a83dca0ba2cea04fba9274abb07b0e" translate="yes" xml:space="preserve">
          <source>Mailgun</source>
          <target state="translated">Mailgun</target>
        </trans-unit>
        <trans-unit id="8b66a1c9fbdcaa52fb90bc5d0058e4dd90be7b68" translate="yes" xml:space="preserve">
          <source>Main Features</source>
          <target state="translated">主要特点</target>
        </trans-unit>
        <trans-unit id="ae266dfc442b5ec385b4338560900eb345c499d9" translate="yes" xml:space="preserve">
          <source>Main render entry point shared by Action View and Action Controller.</source>
          <target state="translated">由动作视图和动作控制器共享的主要渲染入口点。</target>
        </trans-unit>
        <trans-unit id="089471884fb865229f0f9111a9377f8fb353d285" translate="yes" xml:space="preserve">
          <source>Maintaining the test database schema</source>
          <target state="translated">维护测试数据库模式</target>
        </trans-unit>
        <trans-unit id="f8fa33a721957f371e84c8dd9e6fb8b01c0321b1" translate="yes" xml:space="preserve">
          <source>Maintenance Policy</source>
          <target state="translated">维护政策</target>
        </trans-unit>
        <trans-unit id="58d6b980b33f53ac06a743ee46e99cae645364df" translate="yes" xml:space="preserve">
          <source>Maintenance Policy for Ruby on Rails</source>
          <target state="translated">Ruby on Rails的维护政策</target>
        </trans-unit>
        <trans-unit id="252157b41e8c33085114f9d5bae78ff87bf6ade9" translate="yes" xml:space="preserve">
          <source>Make &lt;code&gt;ApplicationController&lt;/code&gt; inherit from &lt;code&gt;ActionController::API&lt;/code&gt; instead of &lt;code&gt;ActionController::Base&lt;/code&gt;. As with middleware, this will leave out any Action Controller modules that provide functionalities primarily used by browser applications.</source>
          <target state="translated">使 &lt;code&gt;ApplicationController&lt;/code&gt; 继承自 &lt;code&gt;ActionController::API&lt;/code&gt; 而不是 &lt;code&gt;ActionController::Base&lt;/code&gt; 。与中间件一样，这将省略所有提供主要由浏览器应用程序使用的功能的Action Controller模块。</target>
        </trans-unit>
        <trans-unit id="3ad5d449d0548ace3647803d555c0dbbae48a281" translate="yes" xml:space="preserve">
          <source>Make a temporary table.</source>
          <target state="translated">做一张临时桌子。</target>
        </trans-unit>
        <trans-unit id="ec88d6037ccc44218de1dd451330f65338a749ea" translate="yes" xml:space="preserve">
          <source>Make an entry in &lt;code&gt;Rails&lt;/code&gt; routing file &lt;code&gt;config/routes.rb&lt;/code&gt;</source>
          <target state="translated">在 &lt;code&gt;Rails&lt;/code&gt; 路由文件 &lt;code&gt;config/routes.rb&lt;/code&gt; 中输入一个条目</target>
        </trans-unit>
        <trans-unit id="306b5c693bdfd1595e76e9e9d059f004a98367a8" translate="yes" xml:space="preserve">
          <source>Make an entry in Rails routing file &lt;code&gt;config/routes.rb&lt;/code&gt;</source>
          <target state="translated">在Rails路由文件 &lt;code&gt;config/routes.rb&lt;/code&gt; 中输入一个条目</target>
        </trans-unit>
        <trans-unit id="8b69db2b39800a827d6f6168d3c1a20938083839" translate="yes" xml:space="preserve">
          <source>Make periodic timers no-op</source>
          <target state="translated">使周期性定时器成为无操作的</target>
        </trans-unit>
        <trans-unit id="8399eb539601add9de2d3f82842b56234c0d1f9c" translate="yes" xml:space="preserve">
          <source>Make sure that you declare the database column used for the serialized store as a text, so there's plenty of room.</source>
          <target state="translated">确保将用于序列化存储的数据库列声明为文本,所以有足够的空间。</target>
        </trans-unit>
        <trans-unit id="c4ac7a454c98bda90c921a3bff6938498dfb3fc2" translate="yes" xml:space="preserve">
          <source>Make sure the lock version column gets updated when counters are updated.</source>
          <target state="translated">确保当计数器更新时,锁定版本列得到更新。</target>
        </trans-unit>
        <trans-unit id="57fdc5e6a8181b505e4377c235dcdba10ccefd2b" translate="yes" xml:space="preserve">
          <source>Make sure to check the modules included in &lt;code&gt;ActionController::Base&lt;/code&gt; if you want to use any other functionality that is not provided by &lt;code&gt;ActionController::API&lt;/code&gt; out of the box.</source>
          <target state="translated">如果要立即使用 &lt;code&gt;ActionController::API&lt;/code&gt; 不提供的任何其他功能，请确保检查 &lt;code&gt;ActionController::Base&lt;/code&gt; 包含的模块。</target>
        </trans-unit>
        <trans-unit id="1b94a75acb3e2883ef72226f00cf1c8e7c27ad3d" translate="yes" xml:space="preserve">
          <source>Make sure to configure your server to support these options following the instructions in the &lt;code&gt;Rack::Sendfile&lt;/code&gt; documentation.</source>
          <target state="translated">确保按照 &lt;code&gt;Rack::Sendfile&lt;/code&gt; 文档中的说明将服务器配置为支持这些选项。</target>
        </trans-unit>
        <trans-unit id="5efdeaf7a8b12f96eb5dc7d68b2ffffb447d6f56" translate="yes" xml:space="preserve">
          <source>Make sure to specify the correct server location in each of your environment config files:</source>
          <target state="translated">确保在每个环境配置文件中指定正确的服务器位置。</target>
        </trans-unit>
        <trans-unit id="8899c331bcf7e348bccc244aac252dc6bbce4cdd" translate="yes" xml:space="preserve">
          <source>Make sure to use &lt;code&gt;and return&lt;/code&gt; instead of &lt;code&gt;&amp;amp;&amp;amp; return&lt;/code&gt; because &lt;code&gt;&amp;amp;&amp;amp; return&lt;/code&gt; will not work due to the operator precedence in the Ruby Language.</source>
          <target state="translated">确保使用 &lt;code&gt;and return&lt;/code&gt; 而不是 &lt;code&gt;&amp;amp;&amp;amp; return&lt;/code&gt; ,因为 &lt;code&gt;&amp;amp;&amp;amp; return&lt;/code&gt; 由于Ruby语言中的运算符优先级而无法使用。</target>
        </trans-unit>
        <trans-unit id="fc7e11f912ac4bdebcc08be41ef772e521bd6ac6" translate="yes" xml:space="preserve">
          <source>Make sure you are comparing Flash message keys against strings.</source>
          <target state="translated">确保你正在将Flash信息键与字符串进行比较。</target>
        </trans-unit>
        <trans-unit id="e680f6c6382557f180208e3d709cb9136d70ccb5" translate="yes" xml:space="preserve">
          <source>Make sure your buckets are properly configured for public access. See docs on how to enable public read permissions for &lt;a href=&quot;https://docs.aws.amazon.com/AmazonS3/latest/user-guide/block-public-access-bucket.html&quot;&gt;Amazon S3&lt;/a&gt;, &lt;a href=&quot;https://cloud.google.com/storage/docs/access-control/making-data-public#buckets&quot;&gt;Google Cloud Storage&lt;/a&gt;, and &lt;a href=&quot;https://docs.microsoft.com/en-us/azure/storage/blobs/storage-manage-access-to-resources#set-container-public-access-level-in-the-azure-portal&quot;&gt;Microsoft Azure&lt;/a&gt; storage services.</source>
          <target state="translated">确保您的存储桶已正确配置以供公共访问。请参阅有关如何为&lt;a href=&quot;https://docs.aws.amazon.com/AmazonS3/latest/user-guide/block-public-access-bucket.html&quot;&gt;Amazon S3&lt;/a&gt;，&lt;a href=&quot;https://cloud.google.com/storage/docs/access-control/making-data-public#buckets&quot;&gt;Google Cloud Storage&lt;/a&gt;和&lt;a href=&quot;https://docs.microsoft.com/en-us/azure/storage/blobs/storage-manage-access-to-resources#set-container-public-access-level-in-the-azure-portal&quot;&gt;Microsoft Azure&lt;/a&gt;存储服务启用公共读取权限的文档。</target>
        </trans-unit>
        <trans-unit id="16e768995acffc826fe3508921661c1719fc07d8" translate="yes" xml:space="preserve">
          <source>Make sure your queuing backend &quot;listens&quot; on your queue name. For some backends you need to specify the queues to listen to.</source>
          <target state="translated">确保你的队列后端 &quot;监听 &quot;你的队列名。对于一些后端,你需要指定要监听的队列。</target>
        </trans-unit>
        <trans-unit id="5682e0cf408b02c5d4877c6049064b81b83869ac" translate="yes" xml:space="preserve">
          <source>Make the following changes to your &lt;code&gt;Gemfile&lt;/code&gt;.</source>
          <target state="translated">对您的 &lt;code&gt;Gemfile&lt;/code&gt; 进行以下更改。</target>
        </trans-unit>
        <trans-unit id="f964d093f2f5ad4e04fb5d1cac5dfe5b45964069" translate="yes" xml:space="preserve">
          <source>Makes a unique &lt;code&gt;X-Request-Id&lt;/code&gt; header available to the response and enables the &lt;code&gt;ActionDispatch::Request#request_id&lt;/code&gt; method.</source>
          <target state="translated">使唯一的 &lt;code&gt;X-Request-Id&lt;/code&gt; 标头可用于响应，并启用 &lt;code&gt;ActionDispatch::Request#request_id&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="5036c3834983c0c5d0a51b922a33316cf1efabc5" translate="yes" xml:space="preserve">
          <source>Makes a unique request id available to the &lt;code&gt;action_dispatch.request_id&lt;/code&gt; env variable (which is then accessible through &lt;code&gt;ActionDispatch::Request#request_id&lt;/code&gt; or the alias &lt;code&gt;ActionDispatch::Request#uuid&lt;/code&gt;) and sends the same id to the client via the X-Request-Id header.</source>
          <target state="translated">使对 &lt;code&gt;action_dispatch.request_id&lt;/code&gt; env变量可用的唯一请求ID （然后可通过 &lt;code&gt;ActionDispatch::Request#request_id&lt;/code&gt; 或别名 &lt;code&gt;ActionDispatch::Request#uuid&lt;/code&gt; ），并通过X-Request-Id将相同的ID发送给客户端标头。</target>
        </trans-unit>
        <trans-unit id="77c87d6f8d7b1bbc1e4b64d6ed3fcf1eeab45281" translate="yes" xml:space="preserve">
          <source>Makes an underscored, lowercase form from the expression in the string.</source>
          <target state="translated">从字符串中的表达式中生成一个下划线的小写形式。</target>
        </trans-unit>
        <trans-unit id="9669dfc0cbb139a1a81d28a2be5b2f78c6eec70e" translate="yes" xml:space="preserve">
          <source>Makes it dead easy to do HTTP &lt;a href=&quot;httpauthentication/basic&quot;&gt;&lt;code&gt;Basic&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;httpauthentication/digest&quot;&gt;&lt;code&gt;Digest&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;httpauthentication/token&quot;&gt;&lt;code&gt;Token&lt;/code&gt;&lt;/a&gt; authentication.</source>
          <target state="translated">使HTTP &lt;a href=&quot;httpauthentication/basic&quot;&gt; &lt;code&gt;Basic&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;httpauthentication/digest&quot;&gt; &lt;code&gt;Digest&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;httpauthentication/token&quot;&gt; &lt;code&gt;Token&lt;/code&gt; &lt;/a&gt;身份验证变得非常简单。</target>
        </trans-unit>
        <trans-unit id="3cd3cc6959800f15a2205416f9bd7058de795420" translate="yes" xml:space="preserve">
          <source>Makes it dead easy to do HTTP &lt;a href=&quot;httpauthentication/basic&quot;&gt;Basic&lt;/a&gt;, &lt;a href=&quot;httpauthentication/digest&quot;&gt;Digest&lt;/a&gt; and &lt;a href=&quot;httpauthentication/token&quot;&gt;Token&lt;/a&gt; authentication.</source>
          <target state="translated">使HTTP &lt;a href=&quot;httpauthentication/basic&quot;&gt;Basic&lt;/a&gt;，&lt;a href=&quot;httpauthentication/digest&quot;&gt;Digest&lt;/a&gt;和&lt;a href=&quot;httpauthentication/token&quot;&gt;Token&lt;/a&gt;身份验证变得非常简单。</target>
        </trans-unit>
        <trans-unit id="0cf03647a61b240bb87a605abba11b5e117ea46b" translate="yes" xml:space="preserve">
          <source>Makes it dead easy to do HTTP &lt;a href=&quot;token&quot;&gt;&lt;code&gt;Token&lt;/code&gt;&lt;/a&gt; authentication.</source>
          <target state="translated">使HTTP&lt;a href=&quot;token&quot;&gt; &lt;code&gt;Token&lt;/code&gt; &lt;/a&gt;认证变得非常简单。</target>
        </trans-unit>
        <trans-unit id="bab5116953faf0be205b9fc2c28dd2778e91ac89" translate="yes" xml:space="preserve">
          <source>Makes it dead easy to do HTTP &lt;a href=&quot;token&quot;&gt;Token&lt;/a&gt; authentication.</source>
          <target state="translated">使HTTP &lt;a href=&quot;token&quot;&gt;令牌&lt;/a&gt;认证变得非常简单。</target>
        </trans-unit>
        <trans-unit id="82d90853a9285a97be64f6ddfab56da7048dd4ea" translate="yes" xml:space="preserve">
          <source>Makes it dead easy to do HTTP Basic authentication.</source>
          <target state="translated">使得HTTP Basic认证变得非常容易。</target>
        </trans-unit>
        <trans-unit id="248ffebb944238814419305b57452011f6e8a054" translate="yes" xml:space="preserve">
          <source>Makes it dead easy to do HTTP Digest authentication.</source>
          <target state="translated">使得它很容易进行HTTP Digest认证。</target>
        </trans-unit>
        <trans-unit id="9b65162648b93cf813417157560cc2b1670a2db9" translate="yes" xml:space="preserve">
          <source>Makes it possible for the RemoteConnection to disconnect a specific connection.</source>
          <target state="translated">使得 RemoteConnection 可以断开特定的连接。</target>
        </trans-unit>
        <trans-unit id="dba69823998a36ac20a883dc8e6f67040b179324" translate="yes" xml:space="preserve">
          <source>Making Select Boxes with Ease</source>
          <target state="translated">轻松制作选择框</target>
        </trans-unit>
        <trans-unit id="cb01187942b0742e6351609b7735a6adcf73fc33" translate="yes" xml:space="preserve">
          <source>Making Your Library or Gem a Pre-Processor</source>
          <target state="translated">让您的库或宝石成为一个预处理程序</target>
        </trans-unit>
        <trans-unit id="8205e9d586c3493e6f60cebf5165f64f9b3c019e" translate="yes" xml:space="preserve">
          <source>Making messages expire</source>
          <target state="translated">使信息过期</target>
        </trans-unit>
        <trans-unit id="a5ba6a079e12e18c361a6a47933e07e1a7228504" translate="yes" xml:space="preserve">
          <source>Manage &lt;code&gt;Gemfile&lt;/code&gt; indentation for a DSL action block</source>
          <target state="translated">管理DSL操作块的 &lt;code&gt;Gemfile&lt;/code&gt; 缩进</target>
        </trans-unit>
        <trans-unit id="b2aee73bd2e79677bed872d3980e254bec42f2c5" translate="yes" xml:space="preserve">
          <source>Managing dependencies</source>
          <target state="translated">管理依赖性</target>
        </trans-unit>
        <trans-unit id="4c4e0450a210ba7947ca44f072542be4cd2bbf6e" translate="yes" xml:space="preserve">
          <source>Managing the Locale across Requests</source>
          <target state="translated">跨请求管理地域</target>
        </trans-unit>
        <trans-unit id="5e0b984f07b1075591ab1d0a27cd0c92e4a47a76" translate="yes" xml:space="preserve">
          <source>Mandrill</source>
          <target state="translated">Mandrill</target>
        </trans-unit>
        <trans-unit id="2d88b61ea857089a4c533daa1a9cf98822177551" translate="yes" xml:space="preserve">
          <source>Manifest Files and Directives</source>
          <target state="translated">舱单文件和指令</target>
        </trans-unit>
        <trans-unit id="38d94fc9b2424981345aad47073ff6221d182b79" translate="yes" xml:space="preserve">
          <source>Manipulating session and cookie variables</source>
          <target state="translated">操作会话和cookie变量</target>
        </trans-unit>
        <trans-unit id="6f5bab837311ddf9a2bc63d03a1cd96d18a19ce8" translate="yes" xml:space="preserve">
          <source>Manual Unsubscription</source>
          <target state="translated">手动退订</target>
        </trans-unit>
        <trans-unit id="e7686ebdb95a27789f53732e864b2cf3e21d13ff" translate="yes" xml:space="preserve">
          <source>Manually check out a connection from the pool with &lt;a href=&quot;connectionpool#method-i-checkout&quot;&gt;ActiveRecord::Base.connection_pool.checkout&lt;/a&gt;. You are responsible for returning this connection to the pool when finished by calling &lt;a href=&quot;connectionpool#method-i-checkin&quot;&gt;ActiveRecord::Base.connection_pool.checkin(connection)&lt;/a&gt;.</source>
          <target state="translated">使用&lt;a href=&quot;connectionpool#method-i-checkout&quot;&gt;ActiveRecord :: Base.connection_pool.checkout&lt;/a&gt;从池中手动检出连接。您有责任通过调用&lt;a href=&quot;connectionpool#method-i-checkin&quot;&gt;ActiveRecord :: Base.connection_pool.checkin（connection）&lt;/a&gt;将此连接返回到池中。</target>
        </trans-unit>
        <trans-unit id="047b759d8afa6da4ea87a2a2059a77060daca4cd" translate="yes" xml:space="preserve">
          <source>Many apps grow beyond simple forms editing a single object. For example, when creating a &lt;code&gt;Person&lt;/code&gt; you might want to allow the user to (on the same form) create multiple address records (home, work, etc.). When later editing that person the user should be able to add, remove, or amend addresses as necessary.</source>
          <target state="translated">许多应用程序超越了简单的表单编辑单个对象的范围。例如，在创建 &lt;code&gt;Person&lt;/code&gt; 您可能希望允许用户（以相同的形式）创建多个地址记录（家庭，工作等）。以后编辑该人时，用户应该能够根据需要添加，删除或修改地址。</target>
        </trans-unit>
        <trans-unit id="c51aa84e06e0d4cb20eb010b07acb0a782ae7e1b" translate="yes" xml:space="preserve">
          <source>Many cross-site scripting (XSS) exploits aim at obtaining the user's cookie. You'll read &lt;a href=&quot;#cross-site-scripting-xss&quot;&gt;more about XSS&lt;/a&gt; later.</source>
          <target state="translated">许多跨站点脚本（XSS）攻击旨在获取用户的cookie。您稍后将阅读&lt;a href=&quot;#cross-site-scripting-xss&quot;&gt;有关XSS的更多信息&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="94760ac5345671c21adf55c326e4bc74930f068c" translate="yes" xml:space="preserve">
          <source>Many modern web servers can be used as a proxy server to balance third-party elements such as caching servers or application servers.</source>
          <target state="translated">许多现代Web服务器可以作为代理服务器来平衡第三方元素,如缓存服务器或应用服务器。</target>
        </trans-unit>
        <trans-unit id="68dea1c5c75caa39cba7ba14014f2517fbc6048c" translate="yes" xml:space="preserve">
          <source>Many of Action Dispatcher's internal components are implemented as Rack middlewares. &lt;code&gt;Rails::Application&lt;/code&gt; uses &lt;code&gt;ActionDispatch::MiddlewareStack&lt;/code&gt; to combine various internal and external middlewares to form a complete Rails Rack application.</source>
          <target state="translated">Action Dispatcher的许多内部组件都作为Rack中间件实现。 &lt;code&gt;Rails::Application&lt;/code&gt; 使用 &lt;code&gt;ActionDispatch::MiddlewareStack&lt;/code&gt; 来组合各种内部和外部中间件，以形成一个完整的Rails Rack应用程序。</target>
        </trans-unit>
        <trans-unit id="5023dcf79d2fffe404c655626656b9c927384425" translate="yes" xml:space="preserve">
          <source>Many web applications allow users to upload files. &lt;em&gt;File names, which the user may choose (partly), should always be filtered&lt;/em&gt; as an attacker could use a malicious file name to overwrite any file on the server. If you store file uploads at /var/www/uploads, and the user enters a file name like &quot;../../../etc/passwd&quot;, it may overwrite an important file. Of course, the Ruby interpreter would need the appropriate permissions to do so - one more reason to run web servers, database servers, and other programs as a less privileged Unix user.</source>
          <target state="translated">许多Web应用程序都允许用户上传文件。&lt;em&gt;用户可能会选择（部分）选择的文件名，&lt;/em&gt;因为攻击者可能会使用恶意文件名覆盖服务器上的任何文件。如果将文件上载存储在/ var / www / uploads，并且用户输入的文件名如&amp;ldquo; ../../../etc/passwd&amp;rdquo;，则可能会覆盖重要文件。当然，Ruby解释器将需要适当的权限才能这样做-还有一个理由以特权较低的Unix用户身份运行Web服务器，数据库服务器和其他程序。</target>
        </trans-unit>
        <trans-unit id="c23c36ee0702008b369b29fb802016cb8c1b8277" translate="yes" xml:space="preserve">
          <source>Many web applications have an authentication system: a user provides a user name and password, the web application checks them and stores the corresponding user id in the session hash. From now on, the session is valid. On every request the application will load the user, identified by the user id in the session, without the need for new authentication. The session ID in the cookie identifies the session.</source>
          <target state="translated">很多网络应用都有一个认证系统:用户提供用户名和密码,网络应用会对其进行检查,并将相应的用户id存储在session hash中。从现在开始,这个会话就是有效的。在每次请求时,应用程序将加载由会话中的用户id识别的用户,而无需进行新的认证。在cookie中的session ID识别会话。</target>
        </trans-unit>
        <trans-unit id="19390742e5806874fd7fb49160ecbeb01caa65a9" translate="yes" xml:space="preserve">
          <source>Many web applications make it easy to hijack user accounts. Why not be different and make it more difficult?.</source>
          <target state="translated">很多网络应用都能轻松劫持用户账号。为什么不与众不同,增加难度呢?</target>
        </trans-unit>
        <trans-unit id="24891e5f043d78206edf6518d0d3d35f7785b4f3" translate="yes" xml:space="preserve">
          <source>Many-to-many</source>
          <target state="translated">Many-to-many</target>
        </trans-unit>
        <trans-unit id="c9a42937cf22ca82b4cf9b49a17e155274e834d4" translate="yes" xml:space="preserve">
          <source>Maps asset types to public directory.</source>
          <target state="translated">将资产类型映射到公共目录。</target>
        </trans-unit>
        <trans-unit id="2186a94f3e5893663ec64cffa3a2c9ffa5b5e277" translate="yes" xml:space="preserve">
          <source>MariaDB: &lt;a href=&quot;https://mariadb.com/kb/en/mariadb/explain/&quot;&gt;EXPLAIN&lt;/a&gt;</source>
          <target state="translated">MariaDB的：&lt;a href=&quot;https://mariadb.com/kb/en/mariadb/explain/&quot;&gt;EXPLAIN&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ab2e377998906eb21e2af5cfe084f2169f9ad123" translate="yes" xml:space="preserve">
          <source>Mark a key as being a connection identifier index that can then be used to find the specific connection again later. Common identifiers are current_user and current_account, but could be anything, really.</source>
          <target state="translated">将一个键标记为连接标识符索引,然后可以用于以后再次查找特定的连接。常见的标识符是current_user和current_account,但也可以是任何东西,真的。</target>
        </trans-unit>
        <trans-unit id="77e548ab7cc8720a986d43ffb76f2e1373d171ea" translate="yes" xml:space="preserve">
          <source>Marks a string as trusted safe. It will be inserted into HTML with no additional escaping performed. It is your responsibility to ensure that the string contains no malicious content. This method is equivalent to the &lt;code&gt;raw&lt;/code&gt; helper in views. It is recommended that you use &lt;code&gt;sanitize&lt;/code&gt; instead of this method. It should never be called on user input.</source>
          <target state="translated">将字符串标记为受信任的安全。它将被插入到HTML中，而不会执行其他转义。您有责任确保字符串不包含恶意内容。此方法等效于视图中的 &lt;code&gt;raw&lt;/code&gt; 帮助器。建议您使用 &lt;code&gt;sanitize&lt;/code&gt; 代替此方法。永远不要在用户输入上调用它。</target>
        </trans-unit>
        <trans-unit id="4cf7916b5b85729b16a8ae8093bdc4715dd95f4d" translate="yes" xml:space="preserve">
          <source>Marks the entire flash or a single flash entry to be discarded by the end of the current action:</source>
          <target state="translated">标记整个闪光灯或单个闪光灯条目在当前操作结束时被丢弃。</target>
        </trans-unit>
        <trans-unit id="17e2394d0589431098b1c37bfbdbd191785f528b" translate="yes" xml:space="preserve">
          <source>Marks the named method as intended to be redefined, if it exists. Suppresses the Ruby method redefinition warning. Prefer &lt;a href=&quot;module#method-i-redefine_method&quot;&gt;&lt;code&gt;redefine_method&lt;/code&gt;&lt;/a&gt; where possible.</source>
          <target state="translated">将命名方法标记为打算重新定义（如果存在）。禁止Ruby方法重定义警告。身高&lt;a href=&quot;module#method-i-redefine_method&quot;&gt; &lt;code&gt;redefine_method&lt;/code&gt; &lt;/a&gt;在可能的情况。</target>
        </trans-unit>
        <trans-unit id="762795e51673105df0f06e3d6f3f9189f42b1615" translate="yes" xml:space="preserve">
          <source>Marks the named method as intended to be redefined, if it exists. Suppresses the Ruby method redefinition warning. Prefer &lt;a href=&quot;module#method-i-redefine_method&quot;&gt;redefine_method&lt;/a&gt; where possible.</source>
          <target state="translated">将命名方法标记为打算重新定义（如果存在）。禁止Ruby方法重定义警告。身高&lt;a href=&quot;module#method-i-redefine_method&quot;&gt;redefine_method&lt;/a&gt;在可能的情况。</target>
        </trans-unit>
        <trans-unit id="0475c3dda41d22daed4981fee4af23c1b9ef4ff1" translate="yes" xml:space="preserve">
          <source>Marks this record as read only.</source>
          <target state="translated">将此记录标记为只读。</target>
        </trans-unit>
        <trans-unit id="b36e9ee63716f8133557ba3c2a06919d8f961b9c" translate="yes" xml:space="preserve">
          <source>Marks this record to be destroyed as part of the parent's save transaction. This does &lt;em&gt;not&lt;/em&gt; actually destroy the record instantly, rather child record will be destroyed when &lt;code&gt;parent.save&lt;/code&gt; is called.</source>
          <target state="translated">将此记录标记为作为父级保存事务的一部分被销毁。这实际上并&lt;em&gt;不能&lt;/em&gt;立即销毁记录，而是在调用 &lt;code&gt;parent.save&lt;/code&gt; 时会销毁子记录。</target>
        </trans-unit>
        <trans-unit id="567a561a163f9443feee81023bbb6e3d3d856e7d" translate="yes" xml:space="preserve">
          <source>Mask value of &lt;code&gt;params&lt;/code&gt; if key matches one of filters.</source>
          <target state="translated">面膜的价值 &lt;code&gt;params&lt;/code&gt; 如果密钥相匹配的过滤器之一。</target>
        </trans-unit>
        <trans-unit id="cb3cb3e44a313e8943d59b0c6c633a46ac1ce5d8" translate="yes" xml:space="preserve">
          <source>Masked Authenticity Tokens</source>
          <target state="translated">遮蔽的真实性令牌</target>
        </trans-unit>
        <trans-unit id="5c1e45d56c039093f8a35ab45a70a26ca3d2a641" translate="yes" xml:space="preserve">
          <source>Matches a URL pattern to one or more routes.</source>
          <target state="translated">将一个URL模式与一个或多个路由进行匹配。</target>
        </trans-unit>
        <trans-unit id="dcd37a0f5706371522de514ef180c0fb66ebe5cb" translate="yes" xml:space="preserve">
          <source>Matches a URL pattern to one or more routes. For more information, see &lt;a href=&quot;base#method-i-match&quot;&gt;match&lt;/a&gt;.</source>
          <target state="translated">将网址格式与一个或多个路由匹配。有关更多信息，请参见&lt;a href=&quot;base#method-i-match&quot;&gt;match&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cc8477b206cc55c328a42daa3a110d5a902da25e" translate="yes" xml:space="preserve">
          <source>Matches an exception to a handler based on the exception class.</source>
          <target state="translated">根据异常类将异常匹配到一个处理程序。</target>
        </trans-unit>
        <trans-unit id="392aa4613bb333a2cb618b83882099e4b8d3329d" translate="yes" xml:space="preserve">
          <source>Matching URLs will be marked as '[FILTERED]'.</source>
          <target state="translated">匹配的URL将被标记为'[FILTERED]'。</target>
        </trans-unit>
        <trans-unit id="a8df2fec28d8948a0326722029c7492b88ee4fbe" translate="yes" xml:space="preserve">
          <source>Maximum</source>
          <target state="translated">Maximum</target>
        </trans-unit>
        <trans-unit id="12cc5e83df7b3b7cee5836d99947c68d0239b409" translate="yes" xml:space="preserve">
          <source>May be called with a block:</source>
          <target state="translated">可以用块状物调用。</target>
        </trans-unit>
        <trans-unit id="ea0fd428175d5a7f6c71193bfd0cb7d518663243" translate="yes" xml:space="preserve">
          <source>Media type of response.</source>
          <target state="translated">媒体类型的反应。</target>
        </trans-unit>
        <trans-unit id="8d4f7c7b848d7a6ae17b193da35c83de55460b18" translate="yes" xml:space="preserve">
          <source>Memoizes the value returned by &lt;a href=&quot;getip#method-i-calculate_ip&quot;&gt;&lt;code&gt;calculate_ip&lt;/code&gt;&lt;/a&gt; and returns it for &lt;a href=&quot;../request&quot;&gt;&lt;code&gt;ActionDispatch::Request&lt;/code&gt;&lt;/a&gt; to use.</source>
          <target state="translated">记住由&lt;a href=&quot;getip#method-i-calculate_ip&quot;&gt; &lt;code&gt;calculate_ip&lt;/code&gt; &lt;/a&gt;返回的值，并将其返回以供&lt;a href=&quot;../request&quot;&gt; &lt;code&gt;ActionDispatch::Request&lt;/code&gt; &lt;/a&gt;使用。</target>
        </trans-unit>
        <trans-unit id="4d5f48e858447d5b8bf7bc81648942a5d44922e8" translate="yes" xml:space="preserve">
          <source>Memoizes the value returned by &lt;a href=&quot;getip#method-i-calculate_ip&quot;&gt;calculate_ip&lt;/a&gt; and returns it for &lt;a href=&quot;../request&quot;&gt;ActionDispatch::Request&lt;/a&gt; to use.</source>
          <target state="translated">记住由&lt;a href=&quot;getip#method-i-calculate_ip&quot;&gt;calculate_ip&lt;/a&gt;返回的值，并将其返回以供&lt;a href=&quot;../request&quot;&gt;ActionDispatch :: Request&lt;/a&gt;使用。</target>
        </trans-unit>
        <trans-unit id="c582a39d302aff9549c336383b6fc21c37d4ebe1" translate="yes" xml:space="preserve">
          <source>Merge conflicts can occur in your schema file when two branches modify schema. To resolve these conflicts run &lt;code&gt;bin/rails db:migrate&lt;/code&gt; to regenerate the schema file.</source>
          <target state="translated">当两个分支修改架构时，架构文件中可能发生合并冲突。要解决这些冲突，请运行 &lt;code&gt;bin/rails db:migrate&lt;/code&gt; 以重新生成架构文件。</target>
        </trans-unit>
        <trans-unit id="5f53a17ddcd691ca1e78252051c126d13cd160ee" translate="yes" xml:space="preserve">
          <source>Merge conflicts can occur in your schema file when two branches modify schema. To resolve these conflicts run &lt;code&gt;rails db:migrate&lt;/code&gt; to regenerate the schema file.</source>
          <target state="translated">当两个分支修改架构时，架构文件中可能发生合并冲突。要解决这些冲突，请运行 &lt;code&gt;rails db:migrate&lt;/code&gt; 重新生成架构文件。</target>
        </trans-unit>
        <trans-unit id="900dd84f0b222da89ac364b102139535e8a32737" translate="yes" xml:space="preserve">
          <source>Merges in the conditions from &lt;code&gt;other&lt;/code&gt;, if &lt;code&gt;other&lt;/code&gt; is an &lt;a href=&quot;relation&quot;&gt;&lt;code&gt;ActiveRecord::Relation&lt;/code&gt;&lt;/a&gt;. Returns an array representing the intersection of the resulting records with &lt;code&gt;other&lt;/code&gt;, if &lt;code&gt;other&lt;/code&gt; is an array.</source>
          <target state="translated">合并 &lt;code&gt;other&lt;/code&gt; 条件（如果 &lt;code&gt;other&lt;/code&gt; 为&lt;a href=&quot;relation&quot;&gt; &lt;code&gt;ActiveRecord::Relation&lt;/code&gt; &lt;/a&gt;。返回一个数组，该数组表示结果记录与 &lt;code&gt;other&lt;/code&gt; 的交集（如果 &lt;code&gt;other&lt;/code&gt; 是一个数组）。</target>
        </trans-unit>
        <trans-unit id="226be574fbe2fe077103b611adc4a492e6b6acbc" translate="yes" xml:space="preserve">
          <source>Merges in the conditions from &lt;code&gt;other&lt;/code&gt;, if &lt;code&gt;other&lt;/code&gt; is an &lt;a href=&quot;relation&quot;&gt;ActiveRecord::Relation&lt;/a&gt;. Returns an array representing the intersection of the resulting records with &lt;code&gt;other&lt;/code&gt;, if &lt;code&gt;other&lt;/code&gt; is an array.</source>
          <target state="translated">合并 &lt;code&gt;other&lt;/code&gt; 条件（如果 &lt;code&gt;other&lt;/code&gt; 条件为&lt;a href=&quot;relation&quot;&gt;ActiveRecord :: Relation）&lt;/a&gt;。返回一个数组，该数组表示结果记录与 &lt;code&gt;other&lt;/code&gt; 的交集（如果 &lt;code&gt;other&lt;/code&gt; 是数组）。</target>
        </trans-unit>
        <trans-unit id="9d078dcba4eea635c17ac1cc07c092528c89cf22" translate="yes" xml:space="preserve">
          <source>Merges the caller into &lt;code&gt;other_hash&lt;/code&gt;. For example,</source>
          <target state="translated">将调用者合并到 &lt;code&gt;other_hash&lt;/code&gt; 中。例如，</target>
        </trans-unit>
        <trans-unit id="3eb6109cebb02b893019bf2fb6ad12061a744e3e" translate="yes" xml:space="preserve">
          <source>Merges the errors from &lt;code&gt;other&lt;/code&gt;, each &lt;code&gt;Error&lt;/code&gt; wrapped as &lt;code&gt;NestedError&lt;/code&gt;.</source>
          <target state="translated">合并 &lt;code&gt;other&lt;/code&gt; &lt;code&gt;Error&lt;/code&gt; ，每个错误包装为 &lt;code&gt;NestedError&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d9d98f104e303f9cf5ba6cad0f2e8b90cc2ed8ec" translate="yes" xml:space="preserve">
          <source>Merges the errors from &lt;code&gt;other&lt;/code&gt;.</source>
          <target state="translated">合并 &lt;code&gt;other&lt;/code&gt; 错误。</target>
        </trans-unit>
        <trans-unit id="40de0d4de887a374168bf79e72c7aa0fa4594d6e" translate="yes" xml:space="preserve">
          <source>Merging</source>
          <target state="translated">Merging</target>
        </trans-unit>
        <trans-unit id="30998fc7b14825bfe3e591f38ea1804d33fd195e" translate="yes" xml:space="preserve">
          <source>Merging of scopes</source>
          <target state="translated">合并范围</target>
        </trans-unit>
        <trans-unit id="39479ff33f15bab6f4bff70fe02746b486a928cb" translate="yes" xml:space="preserve">
          <source>MessageDelivery</source>
          <target state="translated">MessageDelivery</target>
        </trans-unit>
        <trans-unit id="2ca3a9f4c5c006a148b7a9932578ec19923bc9f1" translate="yes" xml:space="preserve">
          <source>MessageDelivery#deliver_later</source>
          <target state="translated">MessageDelivery#deliver_later</target>
        </trans-unit>
        <trans-unit id="d58a2072f2c00bcf994136544ed0881f4277955c" translate="yes" xml:space="preserve">
          <source>MessageDelivery#deliver_later!</source>
          <target state="translated">MessageDelivery#deliver_later!</target>
        </trans-unit>
        <trans-unit id="7dc2404b1df899d54d5d918418a7a861a6fd98d7" translate="yes" xml:space="preserve">
          <source>MessageDelivery#deliver_now</source>
          <target state="translated">MessageDelivery#deliver_now</target>
        </trans-unit>
        <trans-unit id="f694e10fbd9555697b01757d6c268f0aba5cf7e5" translate="yes" xml:space="preserve">
          <source>MessageDelivery#deliver_now!</source>
          <target state="translated">MessageDelivery#deliver_now!</target>
        </trans-unit>
        <trans-unit id="d815799b8048b0698d61637622c9b59c5a136e80" translate="yes" xml:space="preserve">
          <source>MessageDelivery#message</source>
          <target state="translated">MessageDelivery#message</target>
        </trans-unit>
        <trans-unit id="ebbce05309872298d3a6ebb2dc89bd5f0a10e93b" translate="yes" xml:space="preserve">
          <source>MessageDelivery#processed?</source>
          <target state="translated">MessageDelivery#processed?</target>
        </trans-unit>
        <trans-unit id="00bd198ba5bc0785f66eced2f7b32668155ba43b" translate="yes" xml:space="preserve">
          <source>MessageEncryptor</source>
          <target state="translated">MessageEncryptor</target>
        </trans-unit>
        <trans-unit id="75851ac20320d046daeb57638d6439c136973683" translate="yes" xml:space="preserve">
          <source>MessageEncryptor#decrypt_and_verify</source>
          <target state="translated">MessageEncryptor#decrypt_and_verify</target>
        </trans-unit>
        <trans-unit id="ec3605655c1dd7df73e97bee16ca0dc06fa4ba72" translate="yes" xml:space="preserve">
          <source>MessageEncryptor#encrypt_and_sign</source>
          <target state="translated">MessageEncryptor#encrypt_and_sign</target>
        </trans-unit>
        <trans-unit id="f92a218377d645f9092dd4c876aaced4944bc4c6" translate="yes" xml:space="preserve">
          <source>MessageEncryptor::key_len</source>
          <target state="translated">MessageEncryptor::key_len</target>
        </trans-unit>
        <trans-unit id="8f1e28e8dce828703d5d80714ec5189d685ade59" translate="yes" xml:space="preserve">
          <source>MessageEncryptor::new</source>
          <target state="translated">MessageEncryptor::new</target>
        </trans-unit>
        <trans-unit id="2fd13a09c7dae2fdbec9311749e402b4ff60c103" translate="yes" xml:space="preserve">
          <source>MessageVerifier</source>
          <target state="translated">MessageVerifier</target>
        </trans-unit>
        <trans-unit id="0a4d6d879f6d4797c6c59a17b65975130fee0209" translate="yes" xml:space="preserve">
          <source>MessageVerifier#generate</source>
          <target state="translated">MessageVerifier#generate</target>
        </trans-unit>
        <trans-unit id="42f90315126a3917fcfb263375bb71bc0a0a0dc4" translate="yes" xml:space="preserve">
          <source>MessageVerifier#valid_message?</source>
          <target state="translated">MessageVerifier#valid_message?</target>
        </trans-unit>
        <trans-unit id="81f77bbedd728547b52ddc40c7f614824f70a36b" translate="yes" xml:space="preserve">
          <source>MessageVerifier#verified</source>
          <target state="translated">MessageVerifier#verified</target>
        </trans-unit>
        <trans-unit id="cb9c675c988d965998ae45b5d73c7f5308bc24f7" translate="yes" xml:space="preserve">
          <source>MessageVerifier#verify</source>
          <target state="translated">MessageVerifier#verify</target>
        </trans-unit>
        <trans-unit id="faade315455c305d9bb171bc107ea83f06e6fa63" translate="yes" xml:space="preserve">
          <source>MessageVerifier::new</source>
          <target state="translated">MessageVerifier::new</target>
        </trans-unit>
        <trans-unit id="90acb406947db8913ac9b53b7532764ff4fcc59e" translate="yes" xml:space="preserve">
          <source>Metal</source>
          <target state="translated">Metal</target>
        </trans-unit>
        <trans-unit id="38196d8520f1d9e342a790c7baee91ba05b7857a" translate="yes" xml:space="preserve">
          <source>Metal#controller_name</source>
          <target state="translated">Metal#controller_name</target>
        </trans-unit>
        <trans-unit id="edb271c6ba74584a5e95fc8a592017e04d034cfe" translate="yes" xml:space="preserve">
          <source>Metal#params</source>
          <target state="translated">Metal#params</target>
        </trans-unit>
        <trans-unit id="e25845eba96b1c6cec462f426fe2054f763d5f7e" translate="yes" xml:space="preserve">
          <source>Metal#params=</source>
          <target state="translated">Metal#params=</target>
        </trans-unit>
        <trans-unit id="ae198879fd9a7f794c7ff37117ecdd787966071f" translate="yes" xml:space="preserve">
          <source>Metal#performed?</source>
          <target state="translated">Metal#performed?</target>
        </trans-unit>
        <trans-unit id="645752c91da4af331d632112e2ff95adf8ceb3d4" translate="yes" xml:space="preserve">
          <source>Metal#reset_session</source>
          <target state="translated">Metal#reset_session</target>
        </trans-unit>
        <trans-unit id="0c1d3d5f890bdd4021fc1683c03282ae40e4b4db" translate="yes" xml:space="preserve">
          <source>Metal#response_body=</source>
          <target state="translated">Metal#response_body=</target>
        </trans-unit>
        <trans-unit id="2592810200ac0ea7cdb516839b5733b45cd7157a" translate="yes" xml:space="preserve">
          <source>Metal#url_for</source>
          <target state="translated">Metal#url_for</target>
        </trans-unit>
        <trans-unit id="5d5a5e7489ce45c5bc7bbfce6515f09fc97fbd9c" translate="yes" xml:space="preserve">
          <source>Metal::action</source>
          <target state="translated">Metal::action</target>
        </trans-unit>
        <trans-unit id="e2a4b21df305be1783c72a1f50c97c1f1d4985a7" translate="yes" xml:space="preserve">
          <source>Metal::controller_name</source>
          <target state="translated">Metal::controller_name</target>
        </trans-unit>
        <trans-unit id="ce79f003cf7ea40ba89e57e2a796360ffd946624" translate="yes" xml:space="preserve">
          <source>Metal::dispatch</source>
          <target state="translated">Metal::dispatch</target>
        </trans-unit>
        <trans-unit id="182ff2b0bc20e306864bb84402eee07193eb45a1" translate="yes" xml:space="preserve">
          <source>Metal::make_response!</source>
          <target state="translated">Metal::make_response!</target>
        </trans-unit>
        <trans-unit id="d382f96858a788760f261e666e4f85ff97426a6b" translate="yes" xml:space="preserve">
          <source>Metal::middleware</source>
          <target state="translated">Metal::middleware</target>
        </trans-unit>
        <trans-unit id="3ed079e8835c2f9c9c9047fad46dd8ccfe5f55f6" translate="yes" xml:space="preserve">
          <source>Metal::new</source>
          <target state="translated">Metal::new</target>
        </trans-unit>
        <trans-unit id="2f72e572e61260367af8b52a4e688488474b8e83" translate="yes" xml:space="preserve">
          <source>Metal::use</source>
          <target state="translated">Metal::use</target>
        </trans-unit>
        <trans-unit id="88306943fea7e76f9cd57cae0ea6d8b32d2e8434" translate="yes" xml:space="preserve">
          <source>Method</source>
          <target state="translated">Method</target>
        </trans-unit>
        <trans-unit id="f2a980d54dbcb57ac4454a805bc48519eb1f3e32" translate="yes" xml:space="preserve">
          <source>Method Delegation</source>
          <target state="translated">方法委托</target>
        </trans-unit>
        <trans-unit id="dcddcbb57206eaf4559c31c460763d2d6db31a20" translate="yes" xml:space="preserve">
          <source>Methods and Actions</source>
          <target state="translated">方法和行动</target>
        </trans-unit>
        <trans-unit id="666268e79826afdec3fff0264016e94ef5b766ab" translate="yes" xml:space="preserve">
          <source>Methods are not duplicable:</source>
          <target state="translated">方法是不可重复的。</target>
        </trans-unit>
        <trans-unit id="481f07082abcea98f240ee7383772b4988e84273" translate="yes" xml:space="preserve">
          <source>Methods can be delegated to instance variables, class variables, or constants by providing them as a symbols:</source>
          <target state="translated">方法可以通过以符号的形式提供给实例变量、类变量或常量。</target>
        </trans-unit>
        <trans-unit id="3419a2570908db81b298d7c6d51f10df0e243219" translate="yes" xml:space="preserve">
          <source>Methods defined in Active Record fixtures</source>
          <target state="translated">在活动记录夹具中定义的方法</target>
        </trans-unit>
        <trans-unit id="8e227abc813f4dbe34a05c0e54629b2a9e2fc5be" translate="yes" xml:space="preserve">
          <source>Methods for sending arbitrary data and for streaming files to the browser, instead of rendering.</source>
          <target state="translated">用于发送任意数据和流文件到浏览器的方法,而不是渲染。</target>
        </trans-unit>
        <trans-unit id="d3ae077b906176fdf43ee4e5fa066f1c0a49b9ee" translate="yes" xml:space="preserve">
          <source>Methods must return a &lt;code&gt;Mail::Message&lt;/code&gt; object which can be generated by calling the mailer method without the additional &lt;code&gt;deliver_now&lt;/code&gt; / &lt;code&gt;deliver_later&lt;/code&gt;. The location of the mailer previews directory can be configured using the &lt;code&gt;preview_path&lt;/code&gt; option which has a default of &lt;code&gt;test/mailers/previews&lt;/code&gt;:</source>
          <target state="translated">方法必须返回一个 &lt;code&gt;Mail::Message&lt;/code&gt; 对象，可以通过调用mailer方法来生成该对象，而无需额外的 &lt;code&gt;deliver_now&lt;/code&gt; / &lt;code&gt;deliver_later&lt;/code&gt; 。可以使用 &lt;code&gt;preview_path&lt;/code&gt; 选项配置邮件程序预览目录的位置，该选项的默认值为 &lt;code&gt;test/mailers/previews&lt;/code&gt; previews：</target>
        </trans-unit>
        <trans-unit id="a445a0c958f699e2d42015e88db5478fad019eca" translate="yes" xml:space="preserve">
          <source>Methods provided by Thor are not covered this guide and can be found in &lt;a href=&quot;http://rdoc.info/github/erikhuda/thor/master/Thor/Actions.html&quot;&gt;Thor's documentation&lt;/a&gt;</source>
          <target state="translated">Thor所提供的方法未在本指南中涵盖，可以在&lt;a href=&quot;http://rdoc.info/github/erikhuda/thor/master/Thor/Actions.html&quot;&gt;Thor的文档中&lt;/a&gt;找到</target>
        </trans-unit>
        <trans-unit id="f15421ed37c95e18016fedbb48a699c3f1868102" translate="yes" xml:space="preserve">
          <source>Methods provided by Thor are not covered this guide and can be found in &lt;a href=&quot;https://rdoc.info/github/erikhuda/thor/master/Thor/Actions.html&quot;&gt;Thor's documentation&lt;/a&gt;</source>
          <target state="translated">Thor所提供的方法未在本指南中涵盖，可以在&lt;a href=&quot;https://rdoc.info/github/erikhuda/thor/master/Thor/Actions.html&quot;&gt;Thor的文档中&lt;/a&gt;找到</target>
        </trans-unit>
        <trans-unit id="337d33d863058e0d37f9eac0f10f65d2f777c208" translate="yes" xml:space="preserve">
          <source>Methods that operate on collections are also aware of the hierarchy. For example, &lt;code&gt;Polygon.all&lt;/code&gt; returns all the records of the table, because all rectangles and triangles are polygons. Active Record takes care of returning instances of their corresponding class in the result set.</source>
          <target state="translated">对集合进行操作的方法也知道层次结构。例如， &lt;code&gt;Polygon.all&lt;/code&gt; 返回表的所有记录，因为所有矩形和三角形都是多边形。Active Record负责返回结果集中其相应类的实例。</target>
        </trans-unit>
        <trans-unit id="67cf221c8b87e3529b8c224fef7556811903e14a" translate="yes" xml:space="preserve">
          <source>Methods to create form controls are called &lt;strong&gt;on&lt;/strong&gt; the form builder object &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="translated">方法来创建窗体控件称为&lt;strong&gt;上&lt;/strong&gt;表单生成器对象 &lt;code&gt;f&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5de9d6fe8584b29709979d39884dc53d6c96e3a5" translate="yes" xml:space="preserve">
          <source>Methods will be added for retrieval and query for a single associated object, for which this object holds an id:</source>
          <target state="translated">将增加方法对单个关联对象进行检索和查询,这个对象拥有一个id。</target>
        </trans-unit>
        <trans-unit id="5eb00c057aeacb4083ac81ba9b645b27dc753532" translate="yes" xml:space="preserve">
          <source>Microsoft Azure Storage Service</source>
          <target state="translated">微软Azure存储服务</target>
        </trans-unit>
        <trans-unit id="b7507320067b372700f147199bfa6970bc4f77db" translate="yes" xml:space="preserve">
          <source>Middleware class can be inserted as a Rack handler to be local cache for the duration of request.</source>
          <target state="translated">中间件类可以作为一个Rack处理程序插入,在请求期间作为本地缓存。</target>
        </trans-unit>
        <trans-unit id="bf3312ce9eeb6125a88289fa4cc849222be8b06d" translate="yes" xml:space="preserve">
          <source>Middleware stack</source>
          <target state="translated">中间件栈</target>
        </trans-unit>
        <trans-unit id="9d38520e4d12785ebcf01316593660ab8608f5f2" translate="yes" xml:space="preserve">
          <source>Middleware that determines which database connection to use in a multiple database application.</source>
          <target state="translated">决定在多数据库应用程序中使用哪种数据库连接的中间件。</target>
        </trans-unit>
        <trans-unit id="563b6e9338739fba0218b72d657c3e48b84a5b78" translate="yes" xml:space="preserve">
          <source>Middleware::DatabaseSelector</source>
          <target state="translated">Middleware::DatabaseSelector</target>
        </trans-unit>
        <trans-unit id="8f269630c3fc0cbd7d46cc52b6ce2aee1bcbefa6" translate="yes" xml:space="preserve">
          <source>Middleware::DatabaseSelector#call</source>
          <target state="translated">Middleware::DatabaseSelector#call</target>
        </trans-unit>
        <trans-unit id="1ba8c8c9800962e37f6e1230fd89f8279c0728a5" translate="yes" xml:space="preserve">
          <source>Middleware::DatabaseSelector#context_klass</source>
          <target state="translated">Middleware::DatabaseSelector#context_klass</target>
        </trans-unit>
        <trans-unit id="01598e7d668159cced3b5d431bd75f29396ede41" translate="yes" xml:space="preserve">
          <source>Middleware::DatabaseSelector#options</source>
          <target state="translated">Middleware::DatabaseSelector#options</target>
        </trans-unit>
        <trans-unit id="155690df2c425380b1967de734857d9dbea0bb2b" translate="yes" xml:space="preserve">
          <source>Middleware::DatabaseSelector#resolver_klass</source>
          <target state="translated">Middleware::DatabaseSelector#resolver_klass</target>
        </trans-unit>
        <trans-unit id="0336e69fa320a456f7b839c7f9ef95e94d2ba03a" translate="yes" xml:space="preserve">
          <source>Middleware::DatabaseSelector::new</source>
          <target state="translated">Middleware::DatabaseSelector::new</target>
        </trans-unit>
        <trans-unit id="33b6b00c01da2bce5880337e4154f952b0cf5e1a" translate="yes" xml:space="preserve">
          <source>MiddlewareStack::InstrumentationProxy</source>
          <target state="translated">MiddlewareStack::InstrumentationProxy</target>
        </trans-unit>
        <trans-unit id="ce6014a5f10c8a7e1157c5ffac9afecce96ff840" translate="yes" xml:space="preserve">
          <source>MiddlewareStack::InstrumentationProxy#call</source>
          <target state="translated">MiddlewareStack::InstrumentationProxy#call</target>
        </trans-unit>
        <trans-unit id="5f8a75a366d8e0cf285b8df25b529ff4733f3dcd" translate="yes" xml:space="preserve">
          <source>MiddlewareStack::InstrumentationProxy::new</source>
          <target state="translated">MiddlewareStack::InstrumentationProxy::new</target>
        </trans-unit>
        <trans-unit id="27e0622c20c96144720c72ae273895e1f0116ee8" translate="yes" xml:space="preserve">
          <source>Middlewares</source>
          <target state="translated">Middlewares</target>
        </trans-unit>
        <trans-unit id="c36c34173f49fa742f965209eed50d88aaff346c" translate="yes" xml:space="preserve">
          <source>Middlewares are loaded once and are not monitored for changes. You will have to restart the server for changes to be reflected in the running application.</source>
          <target state="translated">中间件只加载一次,不监控变化。您必须重新启动服务器,才能在运行的应用程序中反映变化。</target>
        </trans-unit>
        <trans-unit id="282f075c796a3d6b9e95474b434c7581a2396fb7" translate="yes" xml:space="preserve">
          <source>Middlewares can also be completely swapped out and replaced with others:</source>
          <target state="translated">中间件也可以完全换掉,换成其他的。</target>
        </trans-unit>
        <trans-unit id="d1b3f91ec2dcd0a57731ecd63b35db51810a232c" translate="yes" xml:space="preserve">
          <source>Middlewares can be moved from one place to another:</source>
          <target state="translated">中间件可以从一个地方移动到另一个地方。</target>
        </trans-unit>
        <trans-unit id="77bcdd2131896dea63742df165ba47d28766a503" translate="yes" xml:space="preserve">
          <source>Middlewares that need to manipulate the body won't work with streaming. You should disable those middlewares whenever streaming in development or production. For instance, &lt;code&gt;Rack::Bug&lt;/code&gt; won't work when streaming as it needs to inject contents in the HTML body.</source>
          <target state="translated">需要操纵主体的中间件不能与流一起使用。在开发或生产中进行流式传输时，应禁用这些中间件。例如， &lt;code&gt;Rack::Bug&lt;/code&gt; 在流式传输时将不起作用，因为它需要在HTML主体中注入内容。</target>
        </trans-unit>
        <trans-unit id="d0628fa131fd3749ca6f8ae87cbb36a3fdf7a395" translate="yes" xml:space="preserve">
          <source>Might want a shorter timeout depending on whether the request is a PATCH, PUT, or POST, and if the client is a browser or web service. Can be much shorter if the Stale directive is implemented. This would allow a user to use new nonce without prompting the user again for their username and password.</source>
          <target state="translated">可能需要更短的超时时间,这取决于请求是PATCH、PUT还是POST,以及客户端是浏览器还是Web服务。如果实现了Stale指令,时间可以更短。这将允许用户使用新的nonce,而无需再次提示用户输入用户名和密码。</target>
        </trans-unit>
        <trans-unit id="de063e32dc06a43a0af8ea312ac86d212f940f81" translate="yes" xml:space="preserve">
          <source>Migrate away from MultiJSON by using &lt;code&gt;obj.to_json&lt;/code&gt;, and &lt;code&gt;JSON.parse(str)&lt;/code&gt; instead.</source>
          <target state="translated">改用 &lt;code&gt;obj.to_json&lt;/code&gt; 和 &lt;code&gt;JSON.parse(str)&lt;/code&gt; 从MultiJSON迁移。</target>
        </trans-unit>
        <trans-unit id="849cf5dbd007a2e8d456dd72aa453236b2c87bd3" translate="yes" xml:space="preserve">
          <source>Migration Overview</source>
          <target state="translated">迁移概述</target>
        </trans-unit>
        <trans-unit id="c10689ae3fc90ca5bd5d3afa879fe03daf018267" translate="yes" xml:space="preserve">
          <source>Migration to create the comments table in your database (your name will include a different timestamp)</source>
          <target state="translated">迁移到您的数据库中创建评论表(您的名字将包含不同的时间戳)。</target>
        </trans-unit>
        <trans-unit id="df5bd8ca322d93957c7101e41c22684019c85ff5" translate="yes" xml:space="preserve">
          <source>MigrationProxy</source>
          <target state="translated">MigrationProxy</target>
        </trans-unit>
        <trans-unit id="dca984afd74a0089c1d5a5816e4de2e8d46a60b5" translate="yes" xml:space="preserve">
          <source>Migrations</source>
          <target state="translated">Migrations</target>
        </trans-unit>
        <trans-unit id="92fa499d9dbdc22d3d47a8967f65d9b91f5e16f5" translate="yes" xml:space="preserve">
          <source>Migrations &amp;amp; seed data</source>
          <target state="translated">迁移和种子数据</target>
        </trans-unit>
        <trans-unit id="add41b9c7d182bf31f14e478e595fffc9cc6dbbf" translate="yes" xml:space="preserve">
          <source>Migrations and Seed Data</source>
          <target state="translated">迁移和种子数据</target>
        </trans-unit>
        <trans-unit id="57a43495bb4f9921561af4c2e6643f541818d776" translate="yes" xml:space="preserve">
          <source>Migrations are a convenient way to &lt;a href=&quot;https://en.wikipedia.org/wiki/Schema_migration&quot;&gt;alter your database schema over time&lt;/a&gt; in a consistent and easy way. They use a Ruby DSL so that you don't have to write SQL by hand, allowing your schema and changes to be database independent.</source>
          <target state="translated">迁移是一种方便，一致且简便的方式，可以&lt;a href=&quot;https://en.wikipedia.org/wiki/Schema_migration&quot;&gt;随着时间的推移更改数据库架构&lt;/a&gt;。他们使用Ruby DSL，因此您不必手工编写SQL，从而使架构和更改独立于数据库。</target>
        </trans-unit>
        <trans-unit id="e2b2ceaa5197ee347285fe8f3ebfd8a7b2e99d02" translate="yes" xml:space="preserve">
          <source>Migrations are a convenient way to &lt;a href=&quot;https://en.wikipedia.org/wiki/Schema_migration&quot;&gt;alter your database schema over time&lt;/a&gt; in a consistent way. They use a Ruby DSL so that you don't have to write SQL by hand, allowing your schema and changes to be database independent.</source>
          <target state="translated">迁移是一种方便的方式，&lt;a href=&quot;https://en.wikipedia.org/wiki/Schema_migration&quot;&gt;可以随着时间的推移&lt;/a&gt;以一致的方式更改数据库架构。他们使用Ruby DSL，因此您不必手工编写SQL，从而使架构和更改独立于数据库。</target>
        </trans-unit>
        <trans-unit id="a39b244ebfff3bd0603a4c48828ce03aab566d33" translate="yes" xml:space="preserve">
          <source>Migrations are a feature of Active Record that allows you to evolve your database schema over time. Rather than write schema modifications in pure SQL, migrations allow you to use a Ruby DSL to describe changes to your tables.</source>
          <target state="translated">Migrations是Active Record的一个功能,它允许您随着时间的推移发展您的数据库模式。迁移不是用纯SQL编写模式修改,而是允许您使用一个Ruby DSL来描述您的表的变化。</target>
        </trans-unit>
        <trans-unit id="35eb283061f63c9f2d9c8759c68d4c4790d997dd" translate="yes" xml:space="preserve">
          <source>Migrations are a feature of Active Record that allows you to evolve your database schema over time. Rather than write schema modifications in pure SQL, migrations allow you to use an easy Ruby DSL to describe changes to your tables.</source>
          <target state="translated">Migrations是Active Record的一个功能,它允许您随着时间的推移而发展您的数据库模式。迁移不是用纯SQL编写模式修改,而是允许您使用一个简单的Ruby DSL来描述您的表的变化。</target>
        </trans-unit>
        <trans-unit id="ae5636cafa88975771a82a06eb973872d54fc377" translate="yes" xml:space="preserve">
          <source>Migrations are currently supported in MySQL, PostgreSQL, SQLite, SQL Server, and Oracle (all supported databases except DB2).</source>
          <target state="translated">目前支持在MySQL、PostgreSQL、SQLite、SQL Server和Oracle中进行迁移(除DB2外的所有支持数据库)。</target>
        </trans-unit>
        <trans-unit id="dd0a5b8c9fe431987a19d0d866524897437e203c" translate="yes" xml:space="preserve">
          <source>Migrations are stored as files in the &lt;code&gt;db/migrate&lt;/code&gt; directory, one for each migration class. The name of the file is of the form &lt;code&gt;YYYYMMDDHHMMSS_create_products.rb&lt;/code&gt;, that is to say a UTC timestamp identifying the migration followed by an underscore followed by the name of the migration. The name of the migration class (CamelCased version) should match the latter part of the file name. For example &lt;code&gt;20080906120000_create_products.rb&lt;/code&gt; should define class &lt;code&gt;CreateProducts&lt;/code&gt; and &lt;code&gt;20080906120001_add_details_to_products.rb&lt;/code&gt; should define &lt;code&gt;AddDetailsToProducts&lt;/code&gt;. Rails uses this timestamp to determine which migration should be run and in what order, so if you're copying a migration from another application or generate a file yourself, be aware of its position in the order.</source>
          <target state="translated">迁移作为文件存储在 &lt;code&gt;db/migrate&lt;/code&gt; 目录中，每个迁移类一个。文件名的格式为 &lt;code&gt;YYYYMMDDHHMMSS_create_products.rb&lt;/code&gt; ，也就是说，UTC时间戳记标识了迁移，并在其后带有下划线和迁移名。迁移类的名称（CamelCased版本）应与文件名的后半部分匹配。例如， &lt;code&gt;20080906120000_create_products.rb&lt;/code&gt; 应该定义类 &lt;code&gt;CreateProducts&lt;/code&gt; ,而 &lt;code&gt;20080906120001_add_details_to_products.rb&lt;/code&gt; 应该定义 &lt;code&gt;AddDetailsToProducts&lt;/code&gt; 。Rails使用此时间戳来确定应以哪种顺序运行迁移，因此，如果要从另一个应用程序复制迁移或自己生成文件，请注意其在顺序中的位置。</target>
        </trans-unit>
        <trans-unit id="d26d12943d7d80825abca46a5dc3235ea3ec50a2" translate="yes" xml:space="preserve">
          <source>Migrations can manage the evolution of a schema used by several physical databases. It's a solution to the common problem of adding a field to make a new feature work in your local database, but being unsure of how to push that change to other developers and to the production server. With migrations, you can describe the transformations in self-contained classes that can be checked into version control systems and executed against another database that might be one, two, or five versions behind.</source>
          <target state="translated">迁移可以管理多个物理数据库使用的模式的演变。它是一个常见问题的解决方案,即添加一个字段以使一个新功能在本地数据库中工作,但不确定如何将该变化推送给其他开发人员和生产服务器。通过迁移,你可以在自足的类中描述变换,这些类可以被检查到版本控制系统中,并针对可能落后一个、两个或五个版本的另一个数据库执行。</target>
        </trans-unit>
        <trans-unit id="f94ebd9500c999984b8945609bc2df7a540d229d" translate="yes" xml:space="preserve">
          <source>Migrations for multiple databases should live in their own folders prefixed with the name of the database key in the configuration.</source>
          <target state="translated">多个数据库的迁移应该存在自己的文件夹中,前缀为配置中的数据库键的名称。</target>
        </trans-unit>
        <trans-unit id="86a3425e7c377c2db63091c03252f49164c0a2bc" translate="yes" xml:space="preserve">
          <source>Migrations, mighty as they may be, are not the authoritative source for your database schema. Your database remains the authoritative source. By default, Rails generates &lt;code&gt;db/schema.rb&lt;/code&gt; which attempts to capture the current state of your database schema.</source>
          <target state="translated">迁移（尽管可能如此）并非数据库架构的权威来源。您的数据库仍然是权威来源。默认情况下，Rails生成 &lt;code&gt;db/schema.rb&lt;/code&gt; ，它试图捕获数据库模式的当前状态。</target>
        </trans-unit>
        <trans-unit id="1e3979049ac0db93535e487d19b907375014fe97" translate="yes" xml:space="preserve">
          <source>Mime</source>
          <target state="translated">Mime</target>
        </trans-unit>
        <trans-unit id="837a9cd6761dcbf9f4cc0d2283bc69ff6d49162f" translate="yes" xml:space="preserve">
          <source>Mime::Type</source>
          <target state="translated">Mime::Type</target>
        </trans-unit>
        <trans-unit id="3d541a2228a89762108026001dee109145d47890" translate="yes" xml:space="preserve">
          <source>Mime::[]</source>
          <target state="translated">Mime::[]</target>
        </trans-unit>
        <trans-unit id="0926e3a2597b119bebc1a1fce3d223f29ed8f149" translate="yes" xml:space="preserve">
          <source>Mime::fetch</source>
          <target state="translated">Mime::fetch</target>
        </trans-unit>
        <trans-unit id="050981c2f1d2b6a48d219c1eccf7c86033e0e849" translate="yes" xml:space="preserve">
          <source>MimeResponds</source>
          <target state="translated">MimeResponds</target>
        </trans-unit>
        <trans-unit id="8b545c051d507c480dba95bf413fce8705988b77" translate="yes" xml:space="preserve">
          <source>MimeResponds#respond_to</source>
          <target state="translated">MimeResponds#respond_to</target>
        </trans-unit>
        <trans-unit id="6f5a075fbf5fd5c483250378da86ae9b313d0b5e" translate="yes" xml:space="preserve">
          <source>MimeResponds::Collector</source>
          <target state="translated">MimeResponds::Collector</target>
        </trans-unit>
        <trans-unit id="dd15e78a286dc1fcb96a6d760a8accbea04d2f46" translate="yes" xml:space="preserve">
          <source>MimeResponds::Collector#all</source>
          <target state="translated">MimeResponds::Collector#all</target>
        </trans-unit>
        <trans-unit id="3186ed947655e8e13c11d197e22b057a3b826b5a" translate="yes" xml:space="preserve">
          <source>MimeResponds::Collector#any</source>
          <target state="translated">MimeResponds::Collector#any</target>
        </trans-unit>
        <trans-unit id="077fae0e3039a4b3ba6f06a7b2493faf6bc94149" translate="yes" xml:space="preserve">
          <source>MimeResponds::Collector#custom</source>
          <target state="translated">MimeResponds::Collector#custom</target>
        </trans-unit>
        <trans-unit id="0a408c565a901345e13710dce8b46ddc83596604" translate="yes" xml:space="preserve">
          <source>MimeResponds::Collector#format</source>
          <target state="translated">MimeResponds::Collector#format</target>
        </trans-unit>
        <trans-unit id="d7d7238b3edbaa05ba30c1b8de1d6eae8196c62e" translate="yes" xml:space="preserve">
          <source>MimeResponds::Collector#negotiate_format</source>
          <target state="translated">MimeResponds::Collector#negotiate_format</target>
        </trans-unit>
        <trans-unit id="a43f44c574ab0f660ef86ec6284e21f6a15123a3" translate="yes" xml:space="preserve">
          <source>MimeResponds::Collector#response</source>
          <target state="translated">MimeResponds::Collector#response</target>
        </trans-unit>
        <trans-unit id="c94b172f9c46140e4befb5a3b40843c333dc1bd0" translate="yes" xml:space="preserve">
          <source>MimeResponds::Collector::new</source>
          <target state="translated">MimeResponds::Collector::new</target>
        </trans-unit>
        <trans-unit id="5d398eef3ecc3ea6a161734581d0bd3d920b64d8" translate="yes" xml:space="preserve">
          <source>Minimum</source>
          <target state="translated">Minimum</target>
        </trans-unit>
        <trans-unit id="16596f8408b40402e03fb1fa1fea448e6247038b" translate="yes" xml:space="preserve">
          <source>Minitest::Test</source>
          <target state="translated">Minitest::Test</target>
        </trans-unit>
        <trans-unit id="74043cd8393b54dc6043472a59ad52bfb062b30d" translate="yes" xml:space="preserve">
          <source>Mirror Service</source>
          <target state="translated">镜像服务</target>
        </trans-unit>
        <trans-unit id="39a204e4c038fabc71fb5297195e22adca4656b2" translate="yes" xml:space="preserve">
          <source>Mirror services are compatible with direct uploads. New files are directly uploaded to the primary service. When a directly-uploaded file is attached to a record, a background job is enqueued to copy it to the secondary services.</source>
          <target state="translated">镜像服务与直接上传兼容。新文件直接上传到主服务。当直接上传的文件附加到记录上时,后台作业会排队将其复制到辅助服务。</target>
        </trans-unit>
        <trans-unit id="2ebe5e5d265df06404092bd36060d02d7d449026" translate="yes" xml:space="preserve">
          <source>Mirroring is not atomic. It is possible for an upload to succeed on the primary service and fail on any of the subordinate services. Before going all-in on a new service, verify that all files have been copied.</source>
          <target state="translated">镜像不是原子性的。上载有可能在主服务上成功,而在任何附属服务上失败。在全身心投入一个新服务之前,请核实所有文件都已被复制。</target>
        </trans-unit>
        <trans-unit id="5f2cbd107037ed23248e5058a7a64cd6bae05468" translate="yes" xml:space="preserve">
          <source>Miscellaneous</source>
          <target state="translated">Miscellaneous</target>
        </trans-unit>
        <trans-unit id="432aa1daa28e69ab50b92351f6f2af0a95b10677" translate="yes" xml:space="preserve">
          <source>MismatchedForeignKey</source>
          <target state="translated">MismatchedForeignKey</target>
        </trans-unit>
        <trans-unit id="df53296b1d6061c27762beb02feb56a79d980fe5" translate="yes" xml:space="preserve">
          <source>MismatchedForeignKey::new</source>
          <target state="translated">MismatchedForeignKey::new</target>
        </trans-unit>
        <trans-unit id="c9027d21a516adb82b35423ae731d466f68685dd" translate="yes" xml:space="preserve">
          <source>Missing routes keys may be filled in from the current request's parameters (e.g. &lt;code&gt;:controller&lt;/code&gt;, &lt;code&gt;:action&lt;/code&gt;, &lt;code&gt;:id&lt;/code&gt; and any other parameters that are placed in the path). Given that the current action has been reached through &lt;code&gt;GET
/users/1&lt;/code&gt;:</source>
          <target state="translated">可以从当前请求的参数（例如 &lt;code&gt;:controller&lt;/code&gt; ， &lt;code&gt;:action&lt;/code&gt; ， &lt;code&gt;:id&lt;/code&gt; 和放置在路径中的任何其他参数）填充缺少的路由键。鉴于已经通过 &lt;code&gt;GET /users/1&lt;/code&gt; 实现了当前操作：</target>
        </trans-unit>
        <trans-unit id="41937a7bc85765db9aca03191382c7b168e9b5f0" translate="yes" xml:space="preserve">
          <source>Mix this module into your controller, and all actions in that controller will be able to stream data to the client as it's written.</source>
          <target state="translated">将此模块混合到你的控制器中,该控制器中的所有操作都能在写好后将数据流传到客户端。</target>
        </trans-unit>
        <trans-unit id="605c579c268184680eec501755fbbe56698c9acc" translate="yes" xml:space="preserve">
          <source>Mix-in noise exiled to its own file:</source>
          <target state="translated">混入的噪音被放逐到自己的文件中。</target>
        </trans-unit>
        <trans-unit id="8d259b78f39d0db65eeb3909e9dfd3052b08bc7c" translate="yes" xml:space="preserve">
          <source>Mixing in this module allows you to define the events in the object's life cycle that will support callbacks (via &lt;code&gt;ClassMethods.define_callbacks&lt;/code&gt;), set the instance methods, procs, or callback objects to be called (via &lt;code&gt;ClassMethods.set_callback&lt;/code&gt;), and run the installed callbacks at the appropriate times (via &lt;code&gt;run_callbacks&lt;/code&gt;).</source>
          <target state="translated">混合使用此模块，您可以定义对象生命周期中的事件，这些事件将支持回调（通过 &lt;code&gt;ClassMethods.define_callbacks&lt;/code&gt; ），设置要调用的实例方法，procs或回调对象（通过 &lt;code&gt;ClassMethods.set_callback&lt;/code&gt; ）并运行已安装在适当的时间回调（通过 &lt;code&gt;run_callbacks&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="6bf1644fb9edca063e6ffc86e4f90c94f369309b" translate="yes" xml:space="preserve">
          <source>Mixing with other form helpers</source>
          <target state="translated">与其他表格助手混合使用</target>
        </trans-unit>
        <trans-unit id="3d28be03faf876ad49209848ad7be7b220d78b7e" translate="yes" xml:space="preserve">
          <source>Mobile Safari looks for a different link tag, pointing to an image that will be used if you add the page to the home screen of an iOS device. The following call would generate such a tag:</source>
          <target state="translated">移动Safari寻找一个不同的链接标签,指向一张图片,如果你将页面添加到iOS设备的主屏幕上,就会使用该图片。下面的调用将生成这样一个标签。</target>
        </trans-unit>
        <trans-unit id="68c2cc7f0ceaa3e499ecb4db331feb4debbbcc23" translate="yes" xml:space="preserve">
          <source>Model</source>
          <target state="translated">Model</target>
        </trans-unit>
        <trans-unit id="995901a6d05be888b514f03ce152df52987cf9d7" translate="yes" xml:space="preserve">
          <source>Model / Class</source>
          <target state="translated">型号/等级</target>
        </trans-unit>
        <trans-unit id="506e58da3784558b9ced4bdec6bcfcf767fb21fa" translate="yes" xml:space="preserve">
          <source>Model Class - Singular with the first letter of each word capitalized (e.g., &lt;code&gt;BookClub&lt;/code&gt;).</source>
          <target state="translated">模型类-单数，每个单词的首字母大写（例如 &lt;code&gt;BookClub&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="12bcd30f814db80cb1f7e7a2796b829953df4af8" translate="yes" xml:space="preserve">
          <source>Model Generators</source>
          <target state="translated">模型发电机</target>
        </trans-unit>
        <trans-unit id="33ac27d1e8badd8f928fc67c97f045d911339e91" translate="yes" xml:space="preserve">
          <source>Model Object Helpers</source>
          <target state="translated">模型对象帮助器</target>
        </trans-unit>
        <trans-unit id="d52c41ee4ca421219a75e5a69582d944082143e0" translate="yes" xml:space="preserve">
          <source>Model Testing</source>
          <target state="translated">模型测试</target>
        </trans-unit>
        <trans-unit id="e4bef5d3c94fa7c5c5847e00ba0a25e7f37a2e73" translate="yes" xml:space="preserve">
          <source>Model attributes have a reader, a writer, and a predicate. You can alias a model attribute having the corresponding three methods all defined for you by using &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Module.html#method-i-alias_attribute&quot;&gt;&lt;code&gt;alias_attribute&lt;/code&gt;&lt;/a&gt;. As in other aliasing methods, the new name is the first argument, and the old name is the second (one mnemonic is that they go in the same order as if you did an assignment):</source>
          <target state="translated">模型属性具有读者，作者和谓词。您可以使用&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Module.html#method-i-alias_attribute&quot;&gt; &lt;code&gt;alias_attribute&lt;/code&gt; &lt;/a&gt;为具有为您定义的所有三种方法的模型属性添加别名。与其他别名方法一样，新名称是第一个参数，旧名称是第二个参数（一个助记符是它们的执行顺序与您执行赋值的顺序相同）：</target>
        </trans-unit>
        <trans-unit id="4ec9ebd42f054a98c3da4bc4a0a86ee8eda11c19" translate="yes" xml:space="preserve">
          <source>Model attributes have a reader, a writer, and a predicate. You can alias a model attribute having the corresponding three methods defined for you in one shot. As in other aliasing methods, the new name is the first argument, and the old name is the second (one mnemonic is that they go in the same order as if you did an assignment):</source>
          <target state="translated">模型属性有一个读者、一个写者和一个谓词。你可以一气呵成地别名一个模型属性有相应的三个方法为你定义。和其他别名方法一样,新名称是第一个参数,旧名称是第二个参数(有一个记忆点是,它们的顺序和你做赋值一样)。</target>
        </trans-unit>
        <trans-unit id="fcd2e36ad78fb7f71108bd32655d54cc7792e2c6" translate="yes" xml:space="preserve">
          <source>Model names are &lt;strong&gt;singular&lt;/strong&gt;, because an instantiated model represents a single data record. To help remember this convention, think of how you would call the model's constructor: we want to write &lt;code&gt;Article.new(...)&lt;/code&gt;, &lt;strong&gt;not&lt;/strong&gt;&lt;code&gt;Articles.new(...)&lt;/code&gt;.</source>
          <target state="translated">模型名称是&lt;strong&gt;单数&lt;/strong&gt;，因为实例化的模型表示单个数据记录。为了记住该约定，请考虑如何调用模型的构造函数：我们要编写 &lt;code&gt;Article.new(...)&lt;/code&gt; ，&lt;strong&gt;而不是&lt;/strong&gt; &lt;code&gt;Articles.new(...)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="55122a12c64767a82f2b9a00f00e2eb10873a428" translate="yes" xml:space="preserve">
          <source>Model tests are used to test the various models of your application.</source>
          <target state="translated">模型测试用于测试应用程序的各种模型。</target>
        </trans-unit>
        <trans-unit id="2b6825ada8068d617c4713f563e77b48935cfc12" translate="yes" xml:space="preserve">
          <source>Model tests don't have their own superclass like &lt;code&gt;ActionMailer::TestCase&lt;/code&gt; instead they inherit from &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveSupport/TestCase.html&quot;&gt;&lt;code&gt;ActiveSupport::TestCase&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">模型测试没有像 &lt;code&gt;ActionMailer::TestCase&lt;/code&gt; 这样的自身超类，而是从&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveSupport/TestCase.html&quot;&gt; &lt;code&gt;ActiveSupport::TestCase&lt;/code&gt; &lt;/a&gt;继承。</target>
        </trans-unit>
        <trans-unit id="dbe801f24d91b32cbbccf08eb1a5ecb957775630" translate="yes" xml:space="preserve">
          <source>Model tests don't have their own superclass like &lt;code&gt;ActionMailer::TestCase&lt;/code&gt;. Instead, they inherit from &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveSupport/TestCase.html&quot;&gt;&lt;code&gt;ActiveSupport::TestCase&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">模型测试没有像 &lt;code&gt;ActionMailer::TestCase&lt;/code&gt; 这样的超类。相反，它们继承自&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveSupport/TestCase.html&quot;&gt; &lt;code&gt;ActiveSupport::TestCase&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2f48817ab34d92bde58ab86f2f428072514122ae" translate="yes" xml:space="preserve">
          <source>Model#persisted?</source>
          <target state="translated">Model#persisted?</target>
        </trans-unit>
        <trans-unit id="4e64f33abdbac5e5ff3f2e0c7fa34b64c6f354dd" translate="yes" xml:space="preserve">
          <source>Model::new</source>
          <target state="translated">Model::new</target>
        </trans-unit>
        <trans-unit id="a5db1f719d035d2f86dd53bc73b31dd5d8068fa4" translate="yes" xml:space="preserve">
          <source>ModelSchema</source>
          <target state="translated">ModelSchema</target>
        </trans-unit>
        <trans-unit id="d441ba5c7e24f4a6db2f90c5e92148cb34f38781" translate="yes" xml:space="preserve">
          <source>ModelSchema::ClassMethods</source>
          <target state="translated">ModelSchema::ClassMethods</target>
        </trans-unit>
        <trans-unit id="f0c7506bc80fe2b9aa98f1bff85e0301e077fb1c" translate="yes" xml:space="preserve">
          <source>ModelSchema::ClassMethods#column_defaults</source>
          <target state="translated">ModelSchema::ClassMethods#column_defaults</target>
        </trans-unit>
        <trans-unit id="e4b875e3ee3c2296967f7855c30256163a85c06b" translate="yes" xml:space="preserve">
          <source>ModelSchema::ClassMethods#column_names</source>
          <target state="translated">ModelSchema::ClassMethods#column_names</target>
        </trans-unit>
        <trans-unit id="00b3898ec2cd08cbe44ab0fc9d248fb3e907a774" translate="yes" xml:space="preserve">
          <source>ModelSchema::ClassMethods#columns</source>
          <target state="translated">ModelSchema::ClassMethods#columns</target>
        </trans-unit>
        <trans-unit id="8a528d813dbaef3873723d8e3064d1398a98f18b" translate="yes" xml:space="preserve">
          <source>ModelSchema::ClassMethods#content_columns</source>
          <target state="translated">ModelSchema::ClassMethods#content_columns</target>
        </trans-unit>
        <trans-unit id="30ca4105a6f05ea7297f11d83896095972184c21" translate="yes" xml:space="preserve">
          <source>ModelSchema::ClassMethods#ignored_columns</source>
          <target state="translated">ModelSchema::ClassMethods#ignored_columns</target>
        </trans-unit>
        <trans-unit id="1226cd6aa58cebf7a5e070fb6137578c208b0802" translate="yes" xml:space="preserve">
          <source>ModelSchema::ClassMethods#ignored_columns=</source>
          <target state="translated">ModelSchema::ClassMethods#ignored_columns=</target>
        </trans-unit>
        <trans-unit id="ebe513fb11fd20dba0ba645e2edd6ed770f802f4" translate="yes" xml:space="preserve">
          <source>ModelSchema::ClassMethods#inheritance_column</source>
          <target state="translated">ModelSchema::ClassMethods#inheritance_column</target>
        </trans-unit>
        <trans-unit id="39d4c5f29d57690fb20af6be5053214a278517c1" translate="yes" xml:space="preserve">
          <source>ModelSchema::ClassMethods#inheritance_column=</source>
          <target state="translated">ModelSchema::ClassMethods#inheritance_column=</target>
        </trans-unit>
        <trans-unit id="638056b926ae5b5e9d04d40a36348eeff37ec51b" translate="yes" xml:space="preserve">
          <source>ModelSchema::ClassMethods#initialize_load_schema_monitor</source>
          <target state="translated">ModelSchema::ClassMethods#initialize_load_schema_monitor</target>
        </trans-unit>
        <trans-unit id="cfdf8706cebcfc8f7edbfa7e020989f53119191c" translate="yes" xml:space="preserve">
          <source>ModelSchema::ClassMethods#next_sequence_value</source>
          <target state="translated">ModelSchema::ClassMethods#next_sequence_value</target>
        </trans-unit>
        <trans-unit id="b3de9d78e61cce1bfb45aebe65dee739fec0c3b6" translate="yes" xml:space="preserve">
          <source>ModelSchema::ClassMethods#prefetch_primary_key?</source>
          <target state="translated">ModelSchema::ClassMethods#prefetch_primary_key?</target>
        </trans-unit>
        <trans-unit id="5c638cca0496e75fa8bdd3ef760687b62143bd87" translate="yes" xml:space="preserve">
          <source>ModelSchema::ClassMethods#protected_environments</source>
          <target state="translated">ModelSchema::ClassMethods#protected_environments</target>
        </trans-unit>
        <trans-unit id="b49a9d0078e1a6b59d5626d3edb9b0be56f14a2e" translate="yes" xml:space="preserve">
          <source>ModelSchema::ClassMethods#protected_environments=</source>
          <target state="translated">ModelSchema::ClassMethods#protected_environments=</target>
        </trans-unit>
        <trans-unit id="df0f9208df053b27a067b113784578798515de75" translate="yes" xml:space="preserve">
          <source>ModelSchema::ClassMethods#quoted_table_name</source>
          <target state="translated">ModelSchema::ClassMethods#quoted_table_name</target>
        </trans-unit>
        <trans-unit id="34aa90a1129948e9f4a0488047f67ef89969c5fc" translate="yes" xml:space="preserve">
          <source>ModelSchema::ClassMethods#reset_column_information</source>
          <target state="translated">ModelSchema::ClassMethods#reset_column_information</target>
        </trans-unit>
        <trans-unit id="4ec0770a96fdf697248442b1010e45ec5cc2648a" translate="yes" xml:space="preserve">
          <source>ModelSchema::ClassMethods#sequence_name</source>
          <target state="translated">ModelSchema::ClassMethods#sequence_name</target>
        </trans-unit>
        <trans-unit id="8aac7e2479a471101f94603dc47c6282e17718d1" translate="yes" xml:space="preserve">
          <source>ModelSchema::ClassMethods#sequence_name=</source>
          <target state="translated">ModelSchema::ClassMethods#sequence_name=</target>
        </trans-unit>
        <trans-unit id="32b16c33fdddfbf58ef1861aeb3e5fa24adc6132" translate="yes" xml:space="preserve">
          <source>ModelSchema::ClassMethods#table_exists?</source>
          <target state="translated">ModelSchema::ClassMethods#table_exists?</target>
        </trans-unit>
        <trans-unit id="2daf3196846b82ba6ce8254246befb81255884e0" translate="yes" xml:space="preserve">
          <source>ModelSchema::ClassMethods#table_name</source>
          <target state="translated">ModelSchema::ClassMethods#table_name</target>
        </trans-unit>
        <trans-unit id="17d64cbc84f6a89f2fb5594f6be6487222648148" translate="yes" xml:space="preserve">
          <source>ModelSchema::ClassMethods#table_name=</source>
          <target state="translated">ModelSchema::ClassMethods#table_name=</target>
        </trans-unit>
        <trans-unit id="b7be56821c21245487af1e9e89268a7fa3a26889" translate="yes" xml:space="preserve">
          <source>ModelSchema::ClassMethods#type_for_attribute</source>
          <target state="translated">ModelSchema::ClassMethods#type_for_attribute</target>
        </trans-unit>
        <trans-unit id="1bece6f5eaebefa7dd968a26fca03b1c68c0cca3" translate="yes" xml:space="preserve">
          <source>ModelSchema::implicit_order_column</source>
          <target state="translated">ModelSchema::implicit_order_column</target>
        </trans-unit>
        <trans-unit id="fb87d535030cc77f6eea99000bb3cea45e1edc55" translate="yes" xml:space="preserve">
          <source>ModelSchema::implicit_order_column=</source>
          <target state="translated">ModelSchema::implicit_order_column=</target>
        </trans-unit>
        <trans-unit id="431e95ad2f8f90f99412581d3cd5dfe16abee564" translate="yes" xml:space="preserve">
          <source>ModelSchema::internal_metadata_table_name</source>
          <target state="translated">ModelSchema::internal_metadata_table_name</target>
        </trans-unit>
        <trans-unit id="98b6b1f31f822ce45ba0cb29e89ac6123c8d48f4" translate="yes" xml:space="preserve">
          <source>ModelSchema::internal_metadata_table_name=</source>
          <target state="translated">ModelSchema::internal_metadata_table_name=</target>
        </trans-unit>
        <trans-unit id="8590c49fd4bb679ea3badb5e84d0a0953bbbd833" translate="yes" xml:space="preserve">
          <source>ModelSchema::pluralize_table_names</source>
          <target state="translated">ModelSchema::pluralize_table_names</target>
        </trans-unit>
        <trans-unit id="ebcf9310ab2b6b0318d091ceb7b1c703c0ac45b7" translate="yes" xml:space="preserve">
          <source>ModelSchema::pluralize_table_names=</source>
          <target state="translated">ModelSchema::pluralize_table_names=</target>
        </trans-unit>
        <trans-unit id="b43262e7c70a6f23fc2c45ec6b8a726355f76039" translate="yes" xml:space="preserve">
          <source>ModelSchema::primary_key_prefix_type</source>
          <target state="translated">ModelSchema::primary_key_prefix_type</target>
        </trans-unit>
        <trans-unit id="6c1cb907a3190d2cb95d00e64613bae792025c7c" translate="yes" xml:space="preserve">
          <source>ModelSchema::primary_key_prefix_type=</source>
          <target state="translated">ModelSchema::primary_key_prefix_type=</target>
        </trans-unit>
        <trans-unit id="de67ebceb5546c59b706f434213517811df93916" translate="yes" xml:space="preserve">
          <source>ModelSchema::schema_migrations_table_name</source>
          <target state="translated">ModelSchema::schema_migrations_table_name</target>
        </trans-unit>
        <trans-unit id="39ef611dd8b38aff324d220142a154c1bc699e95" translate="yes" xml:space="preserve">
          <source>ModelSchema::schema_migrations_table_name=</source>
          <target state="translated">ModelSchema::schema_migrations_table_name=</target>
        </trans-unit>
        <trans-unit id="a9efeee47a5a06ca364ef4cb85ffe51ec9687c6d" translate="yes" xml:space="preserve">
          <source>ModelSchema::table_name_prefix</source>
          <target state="translated">ModelSchema::table_name_prefix</target>
        </trans-unit>
        <trans-unit id="8f5e531aa919cbc02fa58144c8b391e2dc8af1fa" translate="yes" xml:space="preserve">
          <source>ModelSchema::table_name_prefix=</source>
          <target state="translated">ModelSchema::table_name_prefix=</target>
        </trans-unit>
        <trans-unit id="6c66134e0c6448bba29b0fc5c80c6bc88daf08db" translate="yes" xml:space="preserve">
          <source>ModelSchema::table_name_suffix</source>
          <target state="translated">ModelSchema::table_name_suffix</target>
        </trans-unit>
        <trans-unit id="33b6803388ddcb50e4870abc9e5cad2d62b56c1d" translate="yes" xml:space="preserve">
          <source>ModelSchema::table_name_suffix=</source>
          <target state="translated">ModelSchema::table_name_suffix=</target>
        </trans-unit>
        <trans-unit id="f3798f81c7b6fecad2cbfec741314f8a66c0eca3" translate="yes" xml:space="preserve">
          <source>Models</source>
          <target state="translated">Models</target>
        </trans-unit>
        <trans-unit id="3d9a5a4b2cc3bb27c0ddd861e63b64508ff0d4ba" translate="yes" xml:space="preserve">
          <source>Models are the final piece of the MVC puzzle. Next, we will connect all of the pieces together.</source>
          <target state="translated">模型是MVC拼图的最后一块。接下来,我们将把所有的碎片连接在一起。</target>
        </trans-unit>
        <trans-unit id="f61c2e48a73d059cd433cefde5962a9fe351d83a" translate="yes" xml:space="preserve">
          <source>Models are then connected with the &lt;code&gt;connects_to&lt;/code&gt; API via the &lt;code&gt;shards&lt;/code&gt; key:</source>
          <target state="translated">然后，通过分 &lt;code&gt;shards&lt;/code&gt; 键 &lt;code&gt;connects_to&lt;/code&gt; 模型与connects_to API连接起来：</target>
        </trans-unit>
        <trans-unit id="30f7aa9f7fd11d6341a4cf482eb7088bbc806644" translate="yes" xml:space="preserve">
          <source>Models in Rails use a singular name, and their corresponding database tables use a plural name. Rails provides a generator for creating models, which most Rails developers tend to use when creating new models. To create the new model, run this command in your terminal:</source>
          <target state="translated">Rails中的模型使用单数名称,其对应的数据库表使用复数名称。Rails提供了一个创建模型的生成器,大多数Rails开发人员在创建新模型时往往会使用这个生成器。要创建新的模型,请在终端运行这个命令。</target>
        </trans-unit>
        <trans-unit id="212e02f4daf070220d134976d698fbfd6435b031" translate="yes" xml:space="preserve">
          <source>Models uploaded files.</source>
          <target state="translated">模型上传的文件。</target>
        </trans-unit>
        <trans-unit id="e3ea079ded57effba0d3c11311c33855f14ee35e" translate="yes" xml:space="preserve">
          <source>Modification</source>
          <target state="translated">Modification</target>
        </trans-unit>
        <trans-unit id="ad7314f5a2628d0dc9988e07053d3b3451d45d9b" translate="yes" xml:space="preserve">
          <source>Modifying Code to use Load Hooks</source>
          <target state="translated">修改代码以使用加载钩子</target>
        </trans-unit>
        <trans-unit id="4bb4fb2222bcd3fca349ae9ce5dfd4c33ad42390" translate="yes" xml:space="preserve">
          <source>Modifying code is generally straightforward. If you have a line of code that refers to a Rails framework such as &lt;code&gt;ActiveRecord::Base&lt;/code&gt; you can wrap that code in a load hook.</source>
          <target state="translated">修改代码通常很简单。如果您有一行代码引用诸如 &lt;code&gt;ActiveRecord::Base&lt;/code&gt; 类的Rails框架，则可以将该代码包装在一个加载钩子中。</target>
        </trans-unit>
        <trans-unit id="2625f3c6940984f6f3e4268c2479f099c0bbd324" translate="yes" xml:space="preserve">
          <source>Modifying code is generally straightforward. If you have a line of code that refers to a Rails framework such as &lt;code&gt;ActiveRecord::Base&lt;/code&gt; you can wrap that code in an &lt;code&gt;on_load&lt;/code&gt; hook.</source>
          <target state="translated">修改代码通常很简单。如果您有一行代码引用诸如 &lt;code&gt;ActiveRecord::Base&lt;/code&gt; 类的Rails框架，则可以将该代码包装在 &lt;code&gt;on_load&lt;/code&gt; 挂钩中。</target>
        </trans-unit>
        <trans-unit id="0b313c3c2650f892a30a82cbbbbfb0962b6ae7b5" translate="yes" xml:space="preserve">
          <source>Modifying code to use &lt;code&gt;on_load&lt;/code&gt; hooks</source>
          <target state="translated">修改代码以使用 &lt;code&gt;on_load&lt;/code&gt; 挂钩</target>
        </trans-unit>
        <trans-unit id="b8ff02892916ff59f7fbd4e617fccd01f6bca576" translate="yes" xml:space="preserve">
          <source>Module</source>
          <target state="translated">Module</target>
        </trans-unit>
        <trans-unit id="35f34b19ff60e68c68b8e81cf54c250dd275712f" translate="yes" xml:space="preserve">
          <source>Module::Concerning</source>
          <target state="translated">Module::Concerning</target>
        </trans-unit>
        <trans-unit id="9d4eba0f3d95edee88947f6d524fd5959c3a0997" translate="yes" xml:space="preserve">
          <source>Module::DelegationError</source>
          <target state="translated">Module::DelegationError</target>
        </trans-unit>
        <trans-unit id="04e9462c0ff02bb9032b92abd45881a3c7e15fb7" translate="yes" xml:space="preserve">
          <source>Modules</source>
          <target state="translated">Modules</target>
        </trans-unit>
        <trans-unit id="8bfd6b5026a42edb8ae149f647de15fe2e57d087" translate="yes" xml:space="preserve">
          <source>Modules can be specified in different ways. All of the following calls include &lt;code&gt;FooHelper&lt;/code&gt;:</source>
          <target state="translated">可以用不同的方式指定模块。以下所有调用均包含 &lt;code&gt;FooHelper&lt;/code&gt; ：</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
