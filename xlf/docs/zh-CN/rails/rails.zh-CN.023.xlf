<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="rails">
    <body>
      <group id="rails">
        <trans-unit id="3bca32f42178d269b7ad52489086de0093555240" translate="yes" xml:space="preserve">
          <source>The database kwarg is deprecated and will be removed in 6.2.0 without replacement.</source>
          <target state="translated">数据库kwarg已被废弃,并将在6.2.0中被删除而不被替换。</target>
        </trans-unit>
        <trans-unit id="eb5d4b3c92a99df5c5226c0136446a9d44e487fa" translate="yes" xml:space="preserve">
          <source>The debugger can also help you if you want to learn about the Rails source code but don't know where to start. Just debug any request to your application and use this guide to learn how to move from the code you have written into the underlying Rails code.</source>
          <target state="translated">如果你想了解Rails源代码,但不知道从哪里开始,调试器也可以帮助你。只需调试任何对你的应用程序的请求,并使用本指南来学习如何从你写的代码转移到底层Rails代码中。</target>
        </trans-unit>
        <trans-unit id="b5935b676f3b260677cf3404e8139a226e615c40" translate="yes" xml:space="preserve">
          <source>The debugger can list, stop, resume, and switch between running threads by using the &lt;code&gt;thread&lt;/code&gt; command (or the abbreviated &lt;code&gt;th&lt;/code&gt;). This command has a handful of options:</source>
          <target state="translated">调试器可以使用 &lt;code&gt;thread&lt;/code&gt; 命令（或缩写为 &lt;code&gt;th&lt;/code&gt; ）列出，停止，恢复和在正在运行的线程之间切换。此命令有几个选项：</target>
        </trans-unit>
        <trans-unit id="40c1b56945614754ba8bcd9b896199640af123be" translate="yes" xml:space="preserve">
          <source>The debugger creates a context when a stopping point or an event is reached. The context has information about the suspended program which enables the debugger to inspect the frame stack, evaluate variables from the perspective of the debugged program, and know the place where the debugged program is stopped.</source>
          <target state="translated">当达到一个停止点或事件时,调试器会创建一个上下文。该上下文有关于暂停程序的信息,使调试器能够检查帧栈,从被调试程序的角度评估变量,并知道被调试程序停止的地方。</target>
        </trans-unit>
        <trans-unit id="21886789df11ea9338c71bc1e713dc0ce0b78495" translate="yes" xml:space="preserve">
          <source>The declaration can also include an &lt;code&gt;options&lt;/code&gt; hash to specialize the behavior of the association.</source>
          <target state="translated">该声明还可以包含一个 &lt;code&gt;options&lt;/code&gt; 哈希，以专门化关联的行为。</target>
        </trans-unit>
        <trans-unit id="49199abadcd9f974ed88dc3d7ccd19edc4680383" translate="yes" xml:space="preserve">
          <source>The declaration may include an &lt;code&gt;options&lt;/code&gt; hash to specialize the behavior of the association.</source>
          <target state="translated">该声明可以包括一个 &lt;code&gt;options&lt;/code&gt; 哈希，以专门化关联的行为。</target>
        </trans-unit>
        <trans-unit id="36ad4ffacf5446ac468457067baa5ce51ef75fec" translate="yes" xml:space="preserve">
          <source>The default &lt;a href=&quot;api&quot;&gt;&lt;code&gt;API&lt;/code&gt;&lt;/a&gt; Controller stack includes all renderers, which means you can use &lt;code&gt;render :json&lt;/code&gt; and brothers freely in your controllers. Keep in mind that templates are not going to be rendered, so you need to ensure your controller is calling either &lt;code&gt;render&lt;/code&gt; or &lt;code&gt;redirect_to&lt;/code&gt; in all actions, otherwise it will return 204 No Content.</source>
          <target state="translated">默认的&lt;a href=&quot;api&quot;&gt; &lt;code&gt;API&lt;/code&gt; &lt;/a&gt; Controller堆栈包括所有渲染器，这意味着您可以在控制器中自由使用 &lt;code&gt;render :json&lt;/code&gt; 和brothers。请记住，不会渲染模板，因此您需要确保控制器在所有操作中都调用 &lt;code&gt;render&lt;/code&gt; 或 &lt;code&gt;redirect_to&lt;/code&gt; ，否则它将返回204 No Content。</target>
        </trans-unit>
        <trans-unit id="2ab15d11218b04ab1e55edd9e2351474404876f9" translate="yes" xml:space="preserve">
          <source>The default &lt;a href=&quot;api&quot;&gt;API&lt;/a&gt; Controller stack includes all renderers, which means you can use &lt;code&gt;render :json&lt;/code&gt; and brothers freely in your controllers. Keep in mind that templates are not going to be rendered, so you need to ensure your controller is calling either &lt;code&gt;render&lt;/code&gt; or &lt;code&gt;redirect_to&lt;/code&gt; in all actions, otherwise it will return 204 No Content.</source>
          <target state="translated">默认的&lt;a href=&quot;api&quot;&gt;API&lt;/a&gt; Controller堆栈包括所有渲染器，这意味着您可以在控制器中自由使用 &lt;code&gt;render :json&lt;/code&gt; 和brothers。请记住，将不会渲染模板，因此您需要确保控制器在所有操作中都调用 &lt;code&gt;render&lt;/code&gt; 或 &lt;code&gt;redirect_to&lt;/code&gt; ，否则它将返回204 No Content。</target>
        </trans-unit>
        <trans-unit id="68002b170cf143cd31a7dd0a441517d28da354ce" translate="yes" xml:space="preserve">
          <source>The default &lt;a href=&quot;chars&quot;&gt;&lt;code&gt;Chars&lt;/code&gt;&lt;/a&gt; implementation assumes that the encoding of the string is UTF-8, if you want to handle different encodings you can write your own multibyte string handler and configure it through &lt;a href=&quot;../multibyte#method-c-proxy_class&quot;&gt;&lt;code&gt;ActiveSupport::Multibyte.proxy_class&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">默认的&lt;a href=&quot;chars&quot;&gt; &lt;code&gt;Chars&lt;/code&gt; &lt;/a&gt;实现假定字符串的编码为UTF-8，如果要处理不同的编码，则可以编写自己的多字节字符串处理程序，并通过&lt;a href=&quot;../multibyte#method-c-proxy_class&quot;&gt; &lt;code&gt;ActiveSupport::Multibyte.proxy_class&lt;/code&gt; &lt;/a&gt;对其进行配置。</target>
        </trans-unit>
        <trans-unit id="dc90e3304a747d9958eb86ef66ce3055efc93b4d" translate="yes" xml:space="preserve">
          <source>The default &lt;a href=&quot;chars&quot;&gt;Chars&lt;/a&gt; implementation assumes that the encoding of the string is UTF-8, if you want to handle different encodings you can write your own multibyte string handler and configure it through &lt;a href=&quot;../multibyte#method-c-proxy_class&quot;&gt;ActiveSupport::Multibyte.proxy_class&lt;/a&gt;.</source>
          <target state="translated">默认的&lt;a href=&quot;chars&quot;&gt;Chars&lt;/a&gt;实现假定字符串的编码为UTF-8，如果要处理不同的编码，则可以编写自己的多字节字符串处理程序，并通过&lt;a href=&quot;../multibyte#method-c-proxy_class&quot;&gt;ActiveSupport :: Multibyte.proxy_class&lt;/a&gt;对其进行配置。</target>
        </trans-unit>
        <trans-unit id="0999be2b2dd63e205841c3741dbcba8d12a40141" translate="yes" xml:space="preserve">
          <source>The default &lt;a href=&quot;connectionpool&quot;&gt;&lt;code&gt;ConnectionPool&lt;/code&gt;&lt;/a&gt; maximum size is 5.</source>
          <target state="translated">默认的&lt;a href=&quot;connectionpool&quot;&gt; &lt;code&gt;ConnectionPool&lt;/code&gt; &lt;/a&gt;最大大小为5。</target>
        </trans-unit>
        <trans-unit id="b0d39dd78e8545ab21333b000c8adbc3abe6b759" translate="yes" xml:space="preserve">
          <source>The default &lt;a href=&quot;connectionpool&quot;&gt;ConnectionPool&lt;/a&gt; maximum size is 5.</source>
          <target state="translated">默认的&lt;a href=&quot;connectionpool&quot;&gt;ConnectionPool&lt;/a&gt;最大大小为5。</target>
        </trans-unit>
        <trans-unit id="417f6a3218aa19f90d2676b492b9137303dbd659" translate="yes" xml:space="preserve">
          <source>The default &lt;code&gt;en.yml&lt;/code&gt; locale in this directory contains a sample pair of translation strings:</source>
          <target state="translated">此目录中的默认 &lt;code&gt;en.yml&lt;/code&gt; 语言环境包含一对翻译字符串示例：</target>
        </trans-unit>
        <trans-unit id="b0d259d82af709edf493880239feb894d39f182f" translate="yes" xml:space="preserve">
          <source>The default Content-Type and Content-Disposition headers are set to download arbitrary binary files in as many browsers as possible. IE versions 4, 5, 5.5, and 6 are all known to have a variety of quirks (especially when downloading over SSL).</source>
          <target state="translated">默认的Content-Type和Content-Disposition头的设置是为了在尽可能多的浏览器中下载任意的二进制文件。众所周知,IE 4、5、5.5和6版本都有各种怪癖(特别是在通过SSL下载时)。</target>
        </trans-unit>
        <trans-unit id="8cb593908b345bbc3e5cdf84afbaa780e9d63901" translate="yes" xml:space="preserve">
          <source>The default HTTP status code used in &lt;code&gt;ActionDispatch::SSL&lt;/code&gt; when redirecting non-GET/HEAD requests from HTTP to HTTPS has been changed to &lt;code&gt;308&lt;/code&gt; as defined in &lt;a href=&quot;https://tools.ietf.org/html/rfc7538&quot;&gt;https://tools.ietf.org/html/rfc7538&lt;/a&gt;.</source>
          <target state="translated">如&lt;a href=&quot;https://tools.ietf.org/html/rfc7538&quot;&gt;https://tools.ietf.org/html/rfc7538中&lt;/a&gt;所定义，当将非GET / HEAD请求从HTTP重定向到HTTPS时， &lt;code&gt;ActionDispatch::SSL&lt;/code&gt; 使用的默认HTTP状态代码已更改为 &lt;code&gt;308&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="db07404c73b8a2a45b04e8b6ffb034a810331405" translate="yes" xml:space="preserve">
          <source>The default Rails log level is &lt;code&gt;debug&lt;/code&gt; in all environments.</source>
          <target state="translated">在所有环境中，默认的Rails日志级别均为 &lt;code&gt;debug&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="38a0c4e49d718aec7078c57bc4c8099a64d09f22" translate="yes" xml:space="preserve">
          <source>The default XML builder is a fresh instance of &lt;code&gt;Builder::XmlMarkup&lt;/code&gt;. You can configure your own builder via the &lt;code&gt;:builder&lt;/code&gt; option. The method also accepts options like &lt;code&gt;:dasherize&lt;/code&gt; and friends, they are forwarded to the builder:</source>
          <target state="translated">默认的XML构建器是 &lt;code&gt;Builder::XmlMarkup&lt;/code&gt; 的新实例。您可以通过 &lt;code&gt;:builder&lt;/code&gt; 选项配置自己的构建器。该方法还接受 &lt;code&gt;:dasherize&lt;/code&gt; 和friends之类的选项，它们会转发给构建器：</target>
        </trans-unit>
        <trans-unit id="4ff911b45d3f05d4d40816676a3ed43ffe82d1a8" translate="yes" xml:space="preserve">
          <source>The default XML builder is a fresh instance of &lt;code&gt;Builder::XmlMarkup&lt;/code&gt;. You can configure your own builder with the &lt;code&gt;:builder&lt;/code&gt; option. The method also accepts options like &lt;code&gt;:dasherize&lt;/code&gt; and friends, they are forwarded to the builder.</source>
          <target state="translated">默认的XML构建器是 &lt;code&gt;Builder::XmlMarkup&lt;/code&gt; 的新实例。您可以使用 &lt;code&gt;:builder&lt;/code&gt; 选项配置自己的生成器。该方法还接受 &lt;code&gt;:dasherize&lt;/code&gt; 和friends之类的选项，它们会转发给构建器。</target>
        </trans-unit>
        <trans-unit id="fdfbcaff28aa74fc6b3972d42c3a0b707432a40f" translate="yes" xml:space="preserve">
          <source>The default behavior can be changed by setting the config options to a custom class:</source>
          <target state="translated">可以通过将配置选项设置为自定义类来改变默认行为。</target>
        </trans-unit>
        <trans-unit id="964deb4deb137c72b1a8c946cd6ea798ee2b77c0" translate="yes" xml:space="preserve">
          <source>The default configuration for Rails 6</source>
          <target state="translated">Rails 6的默认配置</target>
        </trans-unit>
        <trans-unit id="cefd9f0956a756fa1742eab5d0fdfe7c9672a491" translate="yes" xml:space="preserve">
          <source>The default confirmation uses a JavaScript confirm dialog, but you can customize this by listening to the &lt;code&gt;confirm&lt;/code&gt; event, which is fired just before the confirmation window appears to the user. To cancel this default confirmation, have the confirm handler return &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">默认确认使用JavaScript确认对话框，但是您可以通过监听 &lt;code&gt;confirm&lt;/code&gt; 事件来自定义此事件，该事件在确认窗口出现在用户面前之前触发。要取消此默认确认，请使确认处理程序返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e5118e78e0f72e8d201c79ffa5ee19f3bb74d601" translate="yes" xml:space="preserve">
          <source>The default confirmation uses a JavaScript confirm dialog, but you can customize this by listening to the &lt;code&gt;confirm&lt;/code&gt; event, which is fired just before the confirmation window appears to the user. To cancel this default confirmation, have the confirm handler to return &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">默认确认使用JavaScript确认对话框，但是您可以通过侦听 &lt;code&gt;confirm&lt;/code&gt; 事件来自定义该事件，该事件在确认窗口出现在用户面前之前触发。要取消此默认确认，请使Confirm处理程序返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3124d3c72e5b92f5a8455f117ed6fd09726ebfff" translate="yes" xml:space="preserve">
          <source>The default error message for &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveRecord/Validations/ClassMethods.html#method-i-validates_associated&quot;&gt;&lt;code&gt;validates_associated&lt;/code&gt;&lt;/a&gt; is &lt;em&gt;&quot;is invalid&quot;&lt;/em&gt;. Note that each associated object will contain its own &lt;code&gt;errors&lt;/code&gt; collection; errors do not bubble up to the calling model.</source>
          <target state="translated">&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveRecord/Validations/ClassMethods.html#method-i-validates_associated&quot;&gt; &lt;code&gt;validates_associated&lt;/code&gt; &lt;/a&gt;的默认错误消息是&lt;em&gt;&amp;ldquo;无效&amp;rdquo;&lt;/em&gt;。请注意，每个关联的对象将包含其自己的 &lt;code&gt;errors&lt;/code&gt; 集合；错误不会上升到调用模型。</target>
        </trans-unit>
        <trans-unit id="da02076b73046b331e3a794c5d90ae5db9d7569c" translate="yes" xml:space="preserve">
          <source>The default error message for &lt;code&gt;:only_integer&lt;/code&gt; is &lt;em&gt;&quot;must be an integer&quot;&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;:only_integer&lt;/code&gt; 的默认错误消息是&lt;em&gt;&amp;ldquo;必须为整数&amp;rdquo;&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="6bbe748864f65ace153e63b32d9fb9aae5ccc443" translate="yes" xml:space="preserve">
          <source>The default error message for &lt;code&gt;validates_associated&lt;/code&gt; is &lt;em&gt;&quot;is invalid&quot;&lt;/em&gt;. Note that each associated object will contain its own &lt;code&gt;errors&lt;/code&gt; collection; errors do not bubble up to the calling model.</source>
          <target state="translated">&lt;code&gt;validates_associated&lt;/code&gt; 的默认错误消息是&lt;em&gt;&amp;ldquo;无效&amp;rdquo;&lt;/em&gt;。请注意，每个关联的对象将包含其自己的 &lt;code&gt;errors&lt;/code&gt; 集合；错误不会上升到调用模型。</target>
        </trans-unit>
        <trans-unit id="867423ae48db625181e81d46b4c69e62f28c825d" translate="yes" xml:space="preserve">
          <source>The default error message for this helper is &lt;em&gt;&quot;doesn't match confirmation&quot;&lt;/em&gt;.</source>
          <target state="translated">此帮助程序的默认错误消息是&lt;em&gt;&amp;ldquo;与确认不匹配&amp;rdquo;&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="191962cf0a53a5a6e818b0f1aca5743ac55311d9" translate="yes" xml:space="preserve">
          <source>The default error message for this helper is &lt;em&gt;&quot;is not included in the list&quot;&lt;/em&gt;.</source>
          <target state="translated">此帮助程序的默认错误消息是&lt;em&gt;&amp;ldquo;未包含在列表中&amp;rdquo;&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="c1fb5c5ae103bf01f69e90eaa63675b328ed1a1c" translate="yes" xml:space="preserve">
          <source>The default error message is &lt;em&gt;&quot;has already been taken&quot;&lt;/em&gt;.</source>
          <target state="translated">默认错误消息是&lt;em&gt;&amp;ldquo;已被使用&amp;rdquo;&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="9457ef49196b5a4950348b7a27e4d880cb9c20c8" translate="yes" xml:space="preserve">
          <source>The default error message is &lt;em&gt;&quot;is invalid&quot;&lt;/em&gt;.</source>
          <target state="translated">默认错误消息是&lt;em&gt;&amp;ldquo;无效&amp;rdquo;&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="ba637f7bfb2bf214d7ab58eb7fa9d57e04657f8f" translate="yes" xml:space="preserve">
          <source>The default error message is &lt;em&gt;&quot;is not a number&quot;&lt;/em&gt;.</source>
          <target state="translated">默认错误消息是&lt;em&gt;&amp;ldquo;不是数字&amp;rdquo;&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="9335fb9ba4197c3649d79cacccddab3b123bd729" translate="yes" xml:space="preserve">
          <source>The default error message is &lt;em&gt;&quot;is reserved&quot;&lt;/em&gt;.</source>
          <target state="translated">默认错误消息是&lt;em&gt;&amp;ldquo;保留&amp;rdquo;&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="7f4903f326fc4f8f3dc2774dfae143f7d309b858" translate="yes" xml:space="preserve">
          <source>The default error message is &lt;em&gt;&quot;must be blank&quot;&lt;/em&gt;.</source>
          <target state="translated">默认错误消息是&lt;em&gt;&amp;ldquo;必须为空&amp;rdquo;&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="fe342e1d9bddcb12fc387433f37a34de0597592e" translate="yes" xml:space="preserve">
          <source>The default error message when no options are specified is &lt;em&gt;&quot;is not a number&quot;&lt;/em&gt;.</source>
          <target state="translated">未指定选项时的默认错误消息是&lt;em&gt;&amp;ldquo;不是数字&amp;rdquo;&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="465f1f3ea389cd791f8d42ff409bc80944085d28" translate="yes" xml:space="preserve">
          <source>The default error messages depend on the type of length validation being performed. You can customize these messages using the &lt;code&gt;:wrong_length&lt;/code&gt;, &lt;code&gt;:too_long&lt;/code&gt;, and &lt;code&gt;:too_short&lt;/code&gt; options and &lt;code&gt;%{count}&lt;/code&gt; as a placeholder for the number corresponding to the length constraint being used. You can still use the &lt;code&gt;:message&lt;/code&gt; option to specify an error message.</source>
          <target state="translated">默认错误消息取决于所执行的长度验证的类型。您可以使用 &lt;code&gt;:wrong_length&lt;/code&gt; ， &lt;code&gt;:too_long&lt;/code&gt; 和 &lt;code&gt;:too_short&lt;/code&gt; 选项以及 &lt;code&gt;%{count}&lt;/code&gt; 作为占位符（与所使用的长度限制相对应的数字）来自定义这些消息。您仍然可以使用 &lt;code&gt;:message&lt;/code&gt; 选项指定错误消息。</target>
        </trans-unit>
        <trans-unit id="0e1ac826384501a459391f77dccc506bc756093f" translate="yes" xml:space="preserve">
          <source>The default error messages depend on the type of length validation being performed. You can personalize these messages using the &lt;code&gt;:wrong_length&lt;/code&gt;, &lt;code&gt;:too_long&lt;/code&gt;, and &lt;code&gt;:too_short&lt;/code&gt; options and &lt;code&gt;%{count}&lt;/code&gt; as a placeholder for the number corresponding to the length constraint being used. You can still use the &lt;code&gt;:message&lt;/code&gt; option to specify an error message.</source>
          <target state="translated">默认错误消息取决于所执行的长度验证的类型。您可以使用 &lt;code&gt;:wrong_length&lt;/code&gt; ， &lt;code&gt;:too_long&lt;/code&gt; 和 &lt;code&gt;:too_short&lt;/code&gt; 选项以及 &lt;code&gt;%{count}&lt;/code&gt; 作为与所使用的长度限制相对应的数字的占位符，来个性化这些消息。您仍然可以使用 &lt;code&gt;:message&lt;/code&gt; 选项指定错误消息。</target>
        </trans-unit>
        <trans-unit id="b13f3a7afb4a9725957b1897d9ead715643512bb" translate="yes" xml:space="preserve">
          <source>The default implementation does nothing; the implementation should be overridden by concrete adapters.</source>
          <target state="translated">默认的实现什么都不做,应该由具体的适配器来覆盖实现。</target>
        </trans-unit>
        <trans-unit id="3e74ab6be939a5c78f62ad5e60efb485ede92294" translate="yes" xml:space="preserve">
          <source>The default inheritance column name is &lt;code&gt;type&lt;/code&gt;, which means it's a reserved word inside Active Record. To be able to use single-table inheritance with another column name, or to use the column &lt;code&gt;type&lt;/code&gt; in your own model for something else, you can set &lt;code&gt;inheritance_column&lt;/code&gt;:</source>
          <target state="translated">默认继承列名称为 &lt;code&gt;type&lt;/code&gt; ，这意味着它是Active Record中的保留字。为了能够将单表继承与另一个列名一起使用，或者将自己的模型中的列 &lt;code&gt;type&lt;/code&gt; 用于其他用途，可以设置 &lt;code&gt;inheritance_column&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="5b04d3ac6d07f3c41ce5d77eae396450a01409f4" translate="yes" xml:space="preserve">
          <source>The default is 5 minutes.</source>
          <target state="translated">默认为5分钟。</target>
        </trans-unit>
        <trans-unit id="1b67e281a2d48140c816abd25a470778ff77b5bf" translate="yes" xml:space="preserve">
          <source>The default is &lt;code&gt;/rails/active_storage&lt;/code&gt;.</source>
          <target state="translated">默认值为 &lt;code&gt;/rails/active_storage&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b2f7dad334733a76121cb0c0714aec946761f52d" translate="yes" xml:space="preserve">
          <source>The default is &lt;code&gt;:rails_storage_redirect&lt;/code&gt;.</source>
          <target state="translated">默认值为 &lt;code&gt;:rails_storage_redirect&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c3000af20082800ed1719b2c75850c9c000fd27e" translate="yes" xml:space="preserve">
          <source>The default locale is used for all translations unless &lt;code&gt;I18n.locale=&lt;/code&gt; or &lt;code&gt;I18n.with_locale&lt;/code&gt; is used.</source>
          <target state="translated">除非使用 &lt;code&gt;I18n.locale=&lt;/code&gt; 或 &lt;code&gt;I18n.with_locale&lt;/code&gt; ,否则所有翻译均使用默认语言环境。</target>
        </trans-unit>
        <trans-unit id="bdea9edbdc10997d0fc7eb472e80325679677f90" translate="yes" xml:space="preserve">
          <source>The default locale loading mechanism in Rails does not load locale files in nested dictionaries, like we have here. So, for this to work, we must explicitly tell Rails to look further:</source>
          <target state="translated">Rails中默认的locale加载机制不会像我们这里一样,加载嵌套字典中的locale文件。因此,要想让这个机制发挥作用,我们必须明确告诉 Rails 进一步查找。</target>
        </trans-unit>
        <trans-unit id="0c2d50ec5de29e7e39e2abf4cdda42eed22420e0" translate="yes" xml:space="preserve">
          <source>The default location for the manifest is the root of the location specified in &lt;code&gt;config.assets.prefix&lt;/code&gt; ('/assets' by default).</source>
          <target state="translated">清单的默认位置是 &lt;code&gt;config.assets.prefix&lt;/code&gt; 中指定的位置的根（默认为'/ assets'）。</target>
        </trans-unit>
        <trans-unit id="f81c8358ebf064bc1b12157c51e2df2cc81232bf" translate="yes" xml:space="preserve">
          <source>The default locations are: the &lt;code&gt;images&lt;/code&gt;, &lt;code&gt;javascripts&lt;/code&gt; and &lt;code&gt;stylesheets&lt;/code&gt; directories under the &lt;code&gt;app/assets&lt;/code&gt; folder, but these subdirectories are not special - any path under &lt;code&gt;assets/*&lt;/code&gt; will be searched.</source>
          <target state="translated">默认位置是： &lt;code&gt;app/assets&lt;/code&gt; 文件夹下的 &lt;code&gt;images&lt;/code&gt; ， &lt;code&gt;javascripts&lt;/code&gt; 和 &lt;code&gt;stylesheets&lt;/code&gt; 目录，但是这些子目录并不特殊- &lt;code&gt;assets/*&lt;/code&gt; 下的任何路径都将被搜索。</target>
        </trans-unit>
        <trans-unit id="1c2b4eace4f7484f211975650ac9a2dae6cb21cb" translate="yes" xml:space="preserve">
          <source>The default mailer queue name is &lt;code&gt;mailers&lt;/code&gt;. This configuration option allows you to globally change the queue name. Set the following in your config:</source>
          <target state="translated">默认邮件队列名称是 &lt;code&gt;mailers&lt;/code&gt; 。此配置选项使您可以全局更改队列名称。在您的配置中设置以下内容：</target>
        </trans-unit>
        <trans-unit id="d40a6c3b3003507f3c7ed2c5fd5c5f76c65efea7" translate="yes" xml:space="preserve">
          <source>The default matcher for compiling files includes &lt;code&gt;application.js&lt;/code&gt;, &lt;code&gt;application.css&lt;/code&gt; and all non-JS/CSS files (this will include all image assets automatically) from &lt;code&gt;app/assets&lt;/code&gt; folders including your gems:</source>
          <target state="translated">编译文件的默认匹配器包括 &lt;code&gt;application.js&lt;/code&gt; &lt;code&gt;app/assets&lt;/code&gt; 文件夹中的application.js， &lt;code&gt;application.css&lt;/code&gt; 和所有非JS / CSS文件（这将自动包括所有图像资产），包括您的gems：</target>
        </trans-unit>
        <trans-unit id="ed073a8405e9ab34fc3dac43c68ab0a495c2a384" translate="yes" xml:space="preserve">
          <source>The default middlewares shown here (and some others) are each summarized in the &lt;a href=&quot;#internal-middleware-stack&quot;&gt;Internal Middlewares&lt;/a&gt; section, below.</source>
          <target state="translated">此处显示的默认中间件（和其他一些中间件）在下面的&lt;a href=&quot;#internal-middleware-stack&quot;&gt;内部中间件&lt;/a&gt;部分中进行了汇总。</target>
        </trans-unit>
        <trans-unit id="8a3c7bfab60bb2a9340081d984047c607d31607f" translate="yes" xml:space="preserve">
          <source>The default normalization used for operations that require normalization. It can be set to any of the normalizations in &lt;a href=&quot;unicode#NORMALIZATION_FORMS&quot;&gt;NORMALIZATION_FORMS&lt;/a&gt;.</source>
          <target state="translated">用于需要规范化的操作的默认规范化。可以将其设置为&lt;a href=&quot;unicode#NORMALIZATION_FORMS&quot;&gt;NORMALIZATION_FORMS中的&lt;/a&gt;任何规范化。</target>
        </trans-unit>
        <trans-unit id="8a301994a79c75534c49b79a61a4664b4e721cdd" translate="yes" xml:space="preserve">
          <source>The default parallelization method is to fork processes using Ruby's DRb system. The processes are forked based on the number of workers provided. The default number is the actual core count on the machine you are on, but can be changed by the number passed to the parallelize method.</source>
          <target state="translated">默认的并行化方法是使用Ruby的DRb系统来分叉进程。进程是根据提供的worker数量进行分叉的,默认的数量是你所在的机器上的实际核心数,但可以通过传递给parallelize方法的数量来改变。默认的数量是你所在机器上的实际核心数,但可以通过传递给并行化方法的数量来改变。</target>
        </trans-unit>
        <trans-unit id="f767b8f5ac6c561f9d1d4776585774fb62693a4e" translate="yes" xml:space="preserve">
          <source>The default parallelization method is to fork processes. If you'd like to use threads instead you can pass &lt;code&gt;with: :threads&lt;/code&gt; to the &lt;code&gt;parallelize&lt;/code&gt; method. Note the threaded parallelization does not create multiple database and will not work with system tests at this time.</source>
          <target state="translated">默认的并行化方法是派生进程。如果您想使用线程，则可以将 &lt;code&gt;with: :threads&lt;/code&gt; 传递给 &lt;code&gt;parallelize&lt;/code&gt; 方法。请注意，线程并行化不会创建多个数据库，并且此时将无法使用系统测试。</target>
        </trans-unit>
        <trans-unit id="1b1d81ea25551b6dbe82955f22e7b61026f6857f" translate="yes" xml:space="preserve">
          <source>The default query string in Rails 2.x is based on the modification time of the files. When assets are deployed to a cluster, there is no guarantee that the timestamps will be the same, resulting in different values being used depending on which server handles the request.</source>
          <target state="translated">Rails 2.x中默认的查询字符串是基于文件的修改时间。当资产部署到集群时,无法保证时间戳相同,导致根据处理请求的服务器不同而使用不同的值。</target>
        </trans-unit>
        <trans-unit id="147c7acadfc41f5f5e59a90b1e7884d58638c717" translate="yes" xml:space="preserve">
          <source>The default queue name prefix delimiter is '_'. This can be changed by setting &lt;code&gt;config.active_job.queue_name_delimiter&lt;/code&gt; in &lt;code&gt;application.rb&lt;/code&gt;:</source>
          <target state="translated">默认队列名称前缀定界符为&amp;ldquo; _&amp;rdquo;。这可以通过在 &lt;code&gt;application.rb&lt;/code&gt; 中设置 &lt;code&gt;config.active_job.queue_name_delimiter&lt;/code&gt; 来更改：</target>
        </trans-unit>
        <trans-unit id="8552b825d22023630bc90a85bfa0ff7ef0a73f83" translate="yes" xml:space="preserve">
          <source>The default sanitizer is Rails::Html::SafeListSanitizer. See &lt;a href=&quot;https://github.com/rails/rails-html-sanitizer&quot;&gt;Rails HTML Sanitizers&lt;/a&gt; for more information.</source>
          <target state="translated">默认的消毒剂是Rails :: Html :: SafeListSanitizer。有关更多信息，请参见&lt;a href=&quot;https://github.com/rails/rails-html-sanitizer&quot;&gt;Rails HTML Sanitizers&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b2016ca14211876c1edaa8337a906e443cb4b6a4" translate="yes" xml:space="preserve">
          <source>The default serializer for new applications is &lt;code&gt;:json&lt;/code&gt;. For compatibility with old applications with existing cookies, &lt;code&gt;:marshal&lt;/code&gt; is used when &lt;code&gt;serializer&lt;/code&gt; option is not specified.</source>
          <target state="translated">新应用程序的默认序列化器是 &lt;code&gt;:json&lt;/code&gt; 。为了与具有现有cookie的旧应用程序兼容，如果未指定 &lt;code&gt;serializer&lt;/code&gt; 选项，则使用 &lt;code&gt;:marshal&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f47159673cb495ccbabe040b7bed54c0ab255c7c" translate="yes" xml:space="preserve">
          <source>The default setting is &lt;code&gt;true&lt;/code&gt;, which uses the partial at &lt;code&gt;/admin/articles/_article.erb&lt;/code&gt;. Setting the value to &lt;code&gt;false&lt;/code&gt; would render &lt;code&gt;/articles/_article.erb&lt;/code&gt;, which is the same behavior as rendering from a non-namespaced controller such as &lt;code&gt;ArticlesController&lt;/code&gt;.</source>
          <target state="translated">默认设置为 &lt;code&gt;true&lt;/code&gt; ，它使用 &lt;code&gt;/admin/articles/_article.erb&lt;/code&gt; 的部分设置。将值设置为 &lt;code&gt;false&lt;/code&gt; 将会渲染 &lt;code&gt;/articles/_article.erb&lt;/code&gt; ，这与从非命名空间控制器（如 &lt;code&gt;ArticlesController&lt;/code&gt; )进行渲染的行为相同。</target>
        </trans-unit>
        <trans-unit id="515503b563ee9a5bbb4ae3beb0127d46d8fa5713" translate="yes" xml:space="preserve">
          <source>The default settings are Selenium, using Chrome, with a screen size of 1400x1400.</source>
          <target state="translated">默认设置为Selenium,使用Chrome浏览器,屏幕大小为1400x1400。</target>
        </trans-unit>
        <trans-unit id="c5f8f103612c80ac874538744f53c5fe3b5cd267" translate="yes" xml:space="preserve">
          <source>The default sum of an empty list is zero. You can override this default:</source>
          <target state="translated">空列表的默认和为零。你可以覆盖这个默认值。</target>
        </trans-unit>
        <trans-unit id="071a72da76e5b74a031c70449265c7fa7a2297fe" translate="yes" xml:space="preserve">
          <source>The default terminator halts the chain when a callback throws &lt;code&gt;:abort&lt;/code&gt;.</source>
          <target state="translated">当回调抛出 &lt;code&gt;:abort&lt;/code&gt; 时，默认终止符将终止链。</target>
        </trans-unit>
        <trans-unit id="4697708713aa6085f40190002f8d6e33c97a56cf" translate="yes" xml:space="preserve">
          <source>The default test stub in &lt;code&gt;test/models/article_test.rb&lt;/code&gt; looks like this:</source>
          <target state="translated">&lt;code&gt;test/models/article_test.rb&lt;/code&gt; 中的默认测试存根看起来像这样：</target>
        </trans-unit>
        <trans-unit id="6a1270eb0f735549a1008a4527b95f164d8e96ac" translate="yes" xml:space="preserve">
          <source>The default trusted IPs list simply includes IP addresses that are guaranteed by the IP specification to be private addresses. Those will not be the ultimate client IP in production, and so are discarded. See &lt;a href=&quot;https://en.wikipedia.org/wiki/Private_network&quot;&gt;en.wikipedia.org/wiki/Private_network&lt;/a&gt; for details.</source>
          <target state="translated">默认的受信任IP列表仅包含IP规范保证为私有地址的IP地址。这些将不是生产中的最终客户端IP，因此将被丢弃。有关详细信息，请参见&lt;a href=&quot;https://en.wikipedia.org/wiki/Private_network&quot;&gt;en.wikipedia.org/wiki/Private_network&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="387dbd27be3c9069b6f778552aed77b8b5cd08bc" translate="yes" xml:space="preserve">
          <source>The default value for &lt;code&gt;include_root&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;. You can change it to &lt;code&gt;true&lt;/code&gt; if the given &lt;a href=&quot;json&quot;&gt;&lt;code&gt;JSON&lt;/code&gt;&lt;/a&gt; string includes a single root node.</source>
          <target state="translated">为默认值 &lt;code&gt;include_root&lt;/code&gt; 是 &lt;code&gt;false&lt;/code&gt; 。如果给定的&lt;a href=&quot;json&quot;&gt; &lt;code&gt;JSON&lt;/code&gt; &lt;/a&gt;字符串包含单个根节点，则可以将其更改为 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="23f60753d7620ad7eea0f11cae021bf7e9adc787" translate="yes" xml:space="preserve">
          <source>The default value for &lt;code&gt;include_root&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;. You can change it to &lt;code&gt;true&lt;/code&gt; if the given &lt;a href=&quot;json&quot;&gt;JSON&lt;/a&gt; string includes a single root node.</source>
          <target state="translated">为默认值 &lt;code&gt;include_root&lt;/code&gt; 是 &lt;code&gt;false&lt;/code&gt; 。如果给定的&lt;a href=&quot;json&quot;&gt;JSON&lt;/a&gt;字符串包含单个根节点，则可以将其更改为 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2995a2cd89ccb1c807ab761506e22c3579641b10" translate="yes" xml:space="preserve">
          <source>The default value is generated by trying to call &lt;code&gt;strftime&lt;/code&gt; with &amp;ldquo;%T.%L&amp;rdquo; on the object's value. It is still possible to override that by passing the &amp;ldquo;value&amp;rdquo; option.</source>
          <target state="translated">通过尝试使用对象值的&amp;ldquo;％T.％L&amp;rdquo; 调用 &lt;code&gt;strftime&lt;/code&gt; 来生成默认值。仍然可以通过传递&amp;ldquo;值&amp;rdquo;选项来覆盖它。</target>
        </trans-unit>
        <trans-unit id="2352d73ec4b0e0d6ff2a95c7bb0de09cbf629174" translate="yes" xml:space="preserve">
          <source>The default value is generated by trying to call &lt;code&gt;strftime&lt;/code&gt; with &amp;ldquo;%Y-%m&amp;rdquo; on the object's value, which makes it behave as expected for instances of &lt;a href=&quot;../../datetime&quot;&gt;&lt;code&gt;DateTime&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../activesupport/timewithzone&quot;&gt;&lt;code&gt;ActiveSupport::TimeWithZone&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">默认值是通过尝试在对象的值上使用&amp;ldquo;％Y-％m&amp;rdquo;调用 &lt;code&gt;strftime&lt;/code&gt; 来生成的，这使其对于&lt;a href=&quot;../../datetime&quot;&gt; &lt;code&gt;DateTime&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../../activesupport/timewithzone&quot;&gt; &lt;code&gt;ActiveSupport::TimeWithZone&lt;/code&gt; &lt;/a&gt;实例具有预期的行为。</target>
        </trans-unit>
        <trans-unit id="fce923ebd77135ee6e5a64fb412ca563cbb9a2f4" translate="yes" xml:space="preserve">
          <source>The default value is generated by trying to call &lt;code&gt;strftime&lt;/code&gt; with &amp;ldquo;%Y-%m&amp;rdquo; on the object's value, which makes it behave as expected for instances of &lt;a href=&quot;../../datetime&quot;&gt;DateTime&lt;/a&gt; and &lt;a href=&quot;../../activesupport/timewithzone&quot;&gt;ActiveSupport::TimeWithZone&lt;/a&gt;.</source>
          <target state="translated">通过尝试在对象的值上使用&amp;ldquo;％Y-％m&amp;rdquo; 调用 &lt;code&gt;strftime&lt;/code&gt; 来生成默认值，这使得它对于&lt;a href=&quot;../../datetime&quot;&gt;DateTime&lt;/a&gt;和&lt;a href=&quot;../../activesupport/timewithzone&quot;&gt;ActiveSupport :: TimeWithZone&lt;/a&gt;实例具有预期的行为。</target>
        </trans-unit>
        <trans-unit id="961406feda2c9607a547c41ca3bd120f2aeaa8dd" translate="yes" xml:space="preserve">
          <source>The default value is generated by trying to call &lt;code&gt;strftime&lt;/code&gt; with &amp;ldquo;%Y-%m-%d&amp;rdquo; on the object's value, which makes it behave as expected for instances of &lt;a href=&quot;../../datetime&quot;&gt;&lt;code&gt;DateTime&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../activesupport/timewithzone&quot;&gt;&lt;code&gt;ActiveSupport::TimeWithZone&lt;/code&gt;&lt;/a&gt;. You can still override that by passing the &amp;ldquo;value&amp;rdquo; option explicitly, e.g.</source>
          <target state="translated">默认值是通过尝试用对象值上的&amp;ldquo;％Y-％m-％d&amp;rdquo;调用 &lt;code&gt;strftime&lt;/code&gt; 来生成的，这使其对于&lt;a href=&quot;../../datetime&quot;&gt; &lt;code&gt;DateTime&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../../activesupport/timewithzone&quot;&gt; &lt;code&gt;ActiveSupport::TimeWithZone&lt;/code&gt; &lt;/a&gt;实例具有预期的行为。您仍然可以通过显式传递&amp;ldquo; value&amp;rdquo;选项来覆盖它，例如</target>
        </trans-unit>
        <trans-unit id="51b813ed49344540ac2076972a7ceaf113ab8138" translate="yes" xml:space="preserve">
          <source>The default value is generated by trying to call &lt;code&gt;strftime&lt;/code&gt; with &amp;ldquo;%Y-%m-%d&amp;rdquo; on the object's value, which makes it behave as expected for instances of &lt;a href=&quot;../../datetime&quot;&gt;DateTime&lt;/a&gt; and &lt;a href=&quot;../../activesupport/timewithzone&quot;&gt;ActiveSupport::TimeWithZone&lt;/a&gt;. You can still override that by passing the &amp;ldquo;value&amp;rdquo; option explicitly, e.g.</source>
          <target state="translated">通过尝试在对象的值上使用&amp;ldquo;％Y-％m-％d&amp;rdquo; 调用 &lt;code&gt;strftime&lt;/code&gt; 来生成默认值，这使其对于&lt;a href=&quot;../../datetime&quot;&gt;DateTime&lt;/a&gt;和&lt;a href=&quot;../../activesupport/timewithzone&quot;&gt;ActiveSupport :: TimeWithZone&lt;/a&gt;实例具有预期的行为。您仍然可以通过显式传递&amp;ldquo;值&amp;rdquo;选项来覆盖它，例如</target>
        </trans-unit>
        <trans-unit id="8a7a98ac087cf08203ada29462f60f281cc7ce8c" translate="yes" xml:space="preserve">
          <source>The default value is generated by trying to call &lt;code&gt;strftime&lt;/code&gt; with &amp;ldquo;%Y-%m-%dT%T&amp;rdquo; on the object's value, which makes it behave as expected for instances of &lt;a href=&quot;../../datetime&quot;&gt;&lt;code&gt;DateTime&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../activesupport/timewithzone&quot;&gt;&lt;code&gt;ActiveSupport::TimeWithZone&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">通过尝试使用对象值上的&amp;ldquo;％Y-％m-％dT％T&amp;rdquo;调用 &lt;code&gt;strftime&lt;/code&gt; 来生成默认值，这使其对于&lt;a href=&quot;../../datetime&quot;&gt; &lt;code&gt;DateTime&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../../activesupport/timewithzone&quot;&gt; &lt;code&gt;ActiveSupport::TimeWithZone&lt;/code&gt; &lt;/a&gt;实例具有预期的行为。</target>
        </trans-unit>
        <trans-unit id="155f523aa7dab7eaef4a73cf5262806f48843b57" translate="yes" xml:space="preserve">
          <source>The default value is generated by trying to call &lt;code&gt;strftime&lt;/code&gt; with &amp;ldquo;%Y-%m-%dT%T&amp;rdquo; on the object's value, which makes it behave as expected for instances of &lt;a href=&quot;../../datetime&quot;&gt;DateTime&lt;/a&gt; and &lt;a href=&quot;../../activesupport/timewithzone&quot;&gt;ActiveSupport::TimeWithZone&lt;/a&gt;.</source>
          <target state="translated">通过尝试在对象的值上使用&amp;ldquo;％Y-％m-％dT％T&amp;rdquo; 调用 &lt;code&gt;strftime&lt;/code&gt; 来生成默认值，这使它对于&lt;a href=&quot;../../datetime&quot;&gt;DateTime&lt;/a&gt;和&lt;a href=&quot;../../activesupport/timewithzone&quot;&gt;ActiveSupport :: TimeWithZone&lt;/a&gt;实例具有预期的行为。</target>
        </trans-unit>
        <trans-unit id="5d5885094783f9624549e228e79f6943abafae18" translate="yes" xml:space="preserve">
          <source>The default value is generated by trying to call &lt;code&gt;strftime&lt;/code&gt; with &amp;ldquo;%Y-W%W&amp;rdquo; on the object's value, which makes it behave as expected for instances of &lt;a href=&quot;../../datetime&quot;&gt;&lt;code&gt;DateTime&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../activesupport/timewithzone&quot;&gt;&lt;code&gt;ActiveSupport::TimeWithZone&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">通过尝试在对象的值上使用&amp;ldquo;％YW％W&amp;rdquo;调用 &lt;code&gt;strftime&lt;/code&gt; 来生成默认值，这使它对于&lt;a href=&quot;../../datetime&quot;&gt; &lt;code&gt;DateTime&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../../activesupport/timewithzone&quot;&gt; &lt;code&gt;ActiveSupport::TimeWithZone&lt;/code&gt; &lt;/a&gt;实例具有预期的行为。</target>
        </trans-unit>
        <trans-unit id="5e75e0fbb28eddbbcf15907c13cd835044074f14" translate="yes" xml:space="preserve">
          <source>The default value is generated by trying to call &lt;code&gt;strftime&lt;/code&gt; with &amp;ldquo;%Y-W%W&amp;rdquo; on the object's value, which makes it behave as expected for instances of &lt;a href=&quot;../../datetime&quot;&gt;DateTime&lt;/a&gt; and &lt;a href=&quot;../../activesupport/timewithzone&quot;&gt;ActiveSupport::TimeWithZone&lt;/a&gt;.</source>
          <target state="translated">通过尝试在对象的值上使用&amp;ldquo;％YW％W&amp;rdquo; 调用 &lt;code&gt;strftime&lt;/code&gt; 来生成默认值，这使得它对于&lt;a href=&quot;../../datetime&quot;&gt;DateTime&lt;/a&gt;和&lt;a href=&quot;../../activesupport/timewithzone&quot;&gt;ActiveSupport :: TimeWithZone&lt;/a&gt;实例具有预期的行为。</target>
        </trans-unit>
        <trans-unit id="302a80951efeb150725e12d390b168e285d9d6c7" translate="yes" xml:space="preserve">
          <source>The defaults for these options can be localized, their keys are:</source>
          <target state="translated">这些选项的默认值是可以本地化的,它们的键是。</target>
        </trans-unit>
        <trans-unit id="1405dbd52b41e365289863e28f99fa1bd2332eb9" translate="yes" xml:space="preserve">
          <source>The delay of the retry</source>
          <target state="translated">重试的延迟</target>
        </trans-unit>
        <trans-unit id="b3b195383209449dce9fab8d27f9f073c6ae8715" translate="yes" xml:space="preserve">
          <source>The delegated method must be public on the target, otherwise it will raise &lt;code&gt;DelegationError&lt;/code&gt;. If you wish to instead return &lt;code&gt;nil&lt;/code&gt;, use the &lt;code&gt;:allow_nil&lt;/code&gt; option.</source>
          <target state="translated">委托的方法必须在目标上是公共的，否则将引发 &lt;code&gt;DelegationError&lt;/code&gt; 。如果您想返回 &lt;code&gt;nil&lt;/code&gt; ，请使用 &lt;code&gt;:allow_nil&lt;/code&gt; 选项。</target>
        </trans-unit>
        <trans-unit id="0ddcccd9c048d80e5af182b551f880e6af315c21" translate="yes" xml:space="preserve">
          <source>The delegated method must be public on the target, otherwise it will raise &lt;code&gt;NoMethodError&lt;/code&gt;.</source>
          <target state="translated">委托的方法必须在目标上是公共的，否则它将引发 &lt;code&gt;NoMethodError&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4b09ac1b3fc3753d4f13bde06b487a8da159ea06" translate="yes" xml:space="preserve">
          <source>The delegated methods are public by default. Pass &lt;code&gt;private:
true&lt;/code&gt; to change that.</source>
          <target state="translated">默认情况下，委托方法是公共的。通过 &lt;code&gt;private: true&lt;/code&gt; 即可更改。</target>
        </trans-unit>
        <trans-unit id="1c09337d38031bfbccf8b69e1b2b744dc8e04ce3" translate="yes" xml:space="preserve">
          <source>The delegated type shouldn't just answer the question of what the underlying class is called. In fact, that's an anti-pattern most of the time. The reason you're building this hierarchy is to take advantage of polymorphism. So here's a simple example of that:</source>
          <target state="translated">委托类型不应该只回答底层类叫什么的问题。事实上,这在大多数时候都是一种反模式。你建立这个层次结构的原因是为了利用多态性。所以这里有一个简单的例子。</target>
        </trans-unit>
        <trans-unit id="02b4e2eca3f12dd43b5daa997c4256d932c0c2d1" translate="yes" xml:space="preserve">
          <source>The dependent &lt;a href=&quot;richtext&quot;&gt;&lt;code&gt;RichText&lt;/code&gt;&lt;/a&gt; model will also automatically process attachments links as sent via the Trix-powered editor. These attachments are associated with the &lt;a href=&quot;richtext&quot;&gt;&lt;code&gt;RichText&lt;/code&gt;&lt;/a&gt; model using Active Storage.</source>
          <target state="translated">依赖的&lt;a href=&quot;richtext&quot;&gt; &lt;code&gt;RichText&lt;/code&gt; &lt;/a&gt;模型还将自动处理通过Trix支持的编辑器发送的附件链接。这些附件使用Active Storage与&lt;a href=&quot;richtext&quot;&gt; &lt;code&gt;RichText&lt;/code&gt; &lt;/a&gt;模型关联。</target>
        </trans-unit>
        <trans-unit id="b561c6d24076a191c3806cfbab4b44dc868d9533" translate="yes" xml:space="preserve">
          <source>The dependent &lt;a href=&quot;richtext&quot;&gt;RichText&lt;/a&gt; model will also automatically process attachments links as sent via the Trix-powered editor. These attachments are associated with the &lt;a href=&quot;richtext&quot;&gt;RichText&lt;/a&gt; model using Active Storage.</source>
          <target state="translated">依赖的&lt;a href=&quot;richtext&quot;&gt;RichText&lt;/a&gt;模型还将自动处理通过Trix支持的编辑器发送的附件链接。这些附件使用Active Storage 与&lt;a href=&quot;richtext&quot;&gt;RichText&lt;/a&gt;模型关联。</target>
        </trans-unit>
        <trans-unit id="7b896f7775194663df7f16876df2a84f94b10d3b" translate="yes" xml:space="preserve">
          <source>The deprecated constant now returns the same object as the new one rather than a proxy object, so it can be used transparently in &lt;code&gt;rescue&lt;/code&gt; blocks etc.</source>
          <target state="translated">现在，已弃用的常量将返回与新对象相同的对象，而不是代理对象，因此可以在 &lt;code&gt;rescue&lt;/code&gt; 块等中透明地使用它。</target>
        </trans-unit>
        <trans-unit id="036245d5d96624f479702d772eb72dcb5e11e8c4" translate="yes" xml:space="preserve">
          <source>The deprecation warning</source>
          <target state="translated">废弃警告</target>
        </trans-unit>
        <trans-unit id="31b2196e4888dd55cad8ce07cad5266dfe9ec435" translate="yes" xml:space="preserve">
          <source>The desired result can be accomplished by wrapping the known-safe string in &lt;a href=&quot;../arel#method-c-sql&quot;&gt;&lt;code&gt;Arel.sql&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">可以通过将已知安全的字符串包装在&lt;a href=&quot;../arel#method-c-sql&quot;&gt; &lt;code&gt;Arel.sql&lt;/code&gt; 中&lt;/a&gt;来实现所需的结果：</target>
        </trans-unit>
        <trans-unit id="296534b4b5c0114d9b09d904b18e264419c9274a" translate="yes" xml:space="preserve">
          <source>The desired result can be accomplished by wrapping the known-safe string in Arel.sql:</source>
          <target state="translated">通过在Arel.sql中包装已知的安全字符串,可以达到预期的结果。</target>
        </trans-unit>
        <trans-unit id="f01e3ce935b75a14bcd55aaf7d5d0bb040f17e93" translate="yes" xml:space="preserve">
          <source>The differences with &lt;code&gt;Kernel#Array&lt;/code&gt; explained above apply to the rest of &lt;code&gt;object&lt;/code&gt;s.</source>
          <target state="translated">上面说明的与 &lt;code&gt;Kernel#Array&lt;/code&gt; 的区别适用于 &lt;code&gt;object&lt;/code&gt; s 的其余部分。</target>
        </trans-unit>
        <trans-unit id="f4f7d49b1ac826abef81ba5b39c283b9cef02d95" translate="yes" xml:space="preserve">
          <source>The different ways of debugging.</source>
          <target state="translated">调试的不同方式。</target>
        </trans-unit>
        <trans-unit id="4e465a9e2c0e5bd338b7983c7a2d3ecf29038df0" translate="yes" xml:space="preserve">
          <source>The digest will be generated using &lt;code&gt;virtual_path:&lt;/code&gt; if it is provided.</source>
          <target state="translated">摘要将使用 &lt;code&gt;virtual_path:&lt;/code&gt; 生成（如果提供）。</target>
        </trans-unit>
        <trans-unit id="87e9e845de388090f6fedfdef8cbb1972b1b0d42" translate="yes" xml:space="preserve">
          <source>The digestor can be bypassed by passing skip_digest: true as an option to the cache call:</source>
          <target state="translated">通过传递 skip_digest:true 作为缓存调用的一个选项,可以绕过消化器。</target>
        </trans-unit>
        <trans-unit id="c9880525eeb47dcc8b1a61a667bcb1ac06388bf9" translate="yes" xml:space="preserve">
          <source>The directives that work in JavaScript files also work in stylesheets (though obviously including stylesheets rather than JavaScript files). The &lt;code&gt;require_tree&lt;/code&gt; directive in a CSS manifest works the same way as the JavaScript one, requiring all stylesheets from the current directory.</source>
          <target state="translated">适用于JavaScript文件的指令也适用于样式表（尽管显然包括样式表而不是JavaScript文件）。CSS清单中的 &lt;code&gt;require_tree&lt;/code&gt; 指令与JavaScript指令的工作方式相同，要求当前目录中的所有样式表。</target>
        </trans-unit>
        <trans-unit id="213bb5462a19fb4d16c75c50df8bd7cb3bb8fb11" translate="yes" xml:space="preserve">
          <source>The directory &lt;code&gt;test/mailers/previews&lt;/code&gt;.</source>
          <target state="translated">目录 &lt;code&gt;test/mailers/previews&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="db0a97cd4a13a2cce5468ae004d2f87eec98fccd" translate="yes" xml:space="preserve">
          <source>The distinction is in where you place the foreign key (it goes on the table for the class declaring the &lt;code&gt;belongs_to&lt;/code&gt; association), but you should give some thought to the actual meaning of the data as well. The &lt;code&gt;has_one&lt;/code&gt; relationship says that one of something is yours - that is, that something points back to you. For example, it makes more sense to say that a supplier owns an account than that an account owns a supplier. This suggests that the correct relationships are like this:</source>
          <target state="translated">区别在于放置外键的位置（该类在表上声明了 &lt;code&gt;belongs_to&lt;/code&gt; 关联的表上），但是您也应该考虑一下数据的实际含义。该 &lt;code&gt;has_one&lt;/code&gt; 关系说的事情之一就是你的-也就是说，点的东西还给你。例如，说一个供应商拥有一个帐户比说一个账户拥有一个供应商更有意义。这表明正确的关系是这样的：</target>
        </trans-unit>
        <trans-unit id="985c59a63de601354797a9003df4ab4f40409519" translate="yes" xml:space="preserve">
          <source>The documentation for &lt;code&gt;PermitScrubber&lt;/code&gt; and &lt;code&gt;TargetScrubber&lt;/code&gt; explains how you can gain complete control over when and how elements should be stripped.</source>
          <target state="translated">&lt;code&gt;PermitScrubber&lt;/code&gt; 和 &lt;code&gt;TargetScrubber&lt;/code&gt; 的文档说明了如何完全控制何时应该剥离元素以及如何剥离元素。</target>
        </trans-unit>
        <trans-unit id="7a30f95b69b46783ce610879e86f95b33971917c" translate="yes" xml:space="preserve">
          <source>The driver name is a required argument for &lt;code&gt;driven_by&lt;/code&gt;. The optional arguments that can be passed to &lt;code&gt;driven_by&lt;/code&gt; are &lt;code&gt;:using&lt;/code&gt; for the browser (this will only be used by Selenium), &lt;code&gt;:screen_size&lt;/code&gt; to change the size of the screen for screenshots, and &lt;code&gt;:options&lt;/code&gt; which can be used to set options supported by the driver.</source>
          <target state="translated">驱动程序名称是 &lt;code&gt;driven_by&lt;/code&gt; 的必需参数。可以传递给 &lt;code&gt;driven_by&lt;/code&gt; 的可选参数包括 &lt;code&gt;:using&lt;/code&gt; 用于浏览器（仅Selenium将使用） &lt;code&gt;:screen_size&lt;/code&gt; 更改屏幕截图的屏幕大小；以及 &lt;code&gt;:options&lt;/code&gt; （可用于设置受支持的选项）司机。</target>
        </trans-unit>
        <trans-unit id="207b31a7446a5dd854fdf995d6f80eaf815309e8" translate="yes" xml:space="preserve">
          <source>The easiest way is to define acronyms in &lt;code&gt;config/initializers/inflections.rb&lt;/code&gt;:</source>
          <target state="translated">最简单的方法是在 &lt;code&gt;config/initializers/inflections.rb&lt;/code&gt; 中定义首字母缩写词：</target>
        </trans-unit>
        <trans-unit id="4997e6afb5b4fcd0fc1edb4cdc05bfb0a531e68e" translate="yes" xml:space="preserve">
          <source>The easiest way to add custom validators for validating individual attributes is with the convenient &lt;code&gt;ActiveModel::EachValidator&lt;/code&gt;.</source>
          <target state="translated">添加用于验证单个属性的自定义验证器的最简单方法是使用便捷的 &lt;code&gt;ActiveModel::EachValidator&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="98faafe30a9e70db0e0977f135231c7feded8674" translate="yes" xml:space="preserve">
          <source>The easiest way to add custom validators for validating individual attributes is with the convenient &lt;code&gt;ActiveModel::EachValidator&lt;/code&gt;. In this case, the custom validator class must implement a &lt;code&gt;validate_each&lt;/code&gt; method which takes three arguments: record, attribute, and value. These correspond to the instance, the attribute to be validated, and the value of the attribute in the passed instance.</source>
          <target state="translated">添加用于验证单个属性的自定义验证器的最简单方法是使用便捷的 &lt;code&gt;ActiveModel::EachValidator&lt;/code&gt; 。在这种情况下，自定义验证器类必须实现一个 &lt;code&gt;validate_each&lt;/code&gt; 方法，该方法采用三个参数：记录，属性和值。这些对应于实例，要验证的属性以及传递的实例中的属性值。</target>
        </trans-unit>
        <trans-unit id="91e62d62a76a3d0d1a18977f96d9d5517a4cc465" translate="yes" xml:space="preserve">
          <source>The easiest way to do that is to throw</source>
          <target state="translated">最简单的方法是抛出</target>
        </trans-unit>
        <trans-unit id="67abd7985beb12edf1df94d4e24d4ac0499aedde" translate="yes" xml:space="preserve">
          <source>The easiest way to see functional tests in action is to generate a controller using the scaffold generator:</source>
          <target state="translated">最简单的方法是使用脚手架生成器生成一个控制器来查看功能测试的运行情况。</target>
        </trans-unit>
        <trans-unit id="71f9b218d0a717f2a34e6fb5f6eed95f85739bd8" translate="yes" xml:space="preserve">
          <source>The easiest way to work with Rails is to store all external data as UTF-8. If you don't, Ruby libraries and Rails will often be able to convert your native data into UTF-8, but this doesn't always work reliably, so you're better off ensuring that all external data is UTF-8.</source>
          <target state="translated">使用Rails最简单的方法是将所有外部数据存储为UTF-8。如果你不这样做,Ruby库和Rails通常能够将你的本地数据转换为UTF-8,但这并不总是可靠地工作,所以你最好确保所有外部数据都是UTF-8。</target>
        </trans-unit>
        <trans-unit id="69e2efc49c2d7213b2c913e7885eead9c6a6f639" translate="yes" xml:space="preserve">
          <source>The editor can be found by:</source>
          <target state="translated">小编可以通过。</target>
        </trans-unit>
        <trans-unit id="de8bad23dcd8917481e25590ac072420ea7cda7e" translate="yes" xml:space="preserve">
          <source>The encoded form of the mail</source>
          <target state="translated">邮件的编码形式</target>
        </trans-unit>
        <trans-unit id="603d901a7533f7d4b81087cd4d5da75a04f6dc77" translate="yes" xml:space="preserve">
          <source>The engine contains migrations for the &lt;code&gt;blorgh_articles&lt;/code&gt; and &lt;code&gt;blorgh_comments&lt;/code&gt; table which need to be created in the application's database so that the engine's models can query them correctly. To copy these migrations into the application run the following command from the application's root:</source>
          <target state="translated">该引擎包含需要在应用程序数据库中创建的 &lt;code&gt;blorgh_articles&lt;/code&gt; 和 &lt;code&gt;blorgh_comments&lt;/code&gt; 表的迁移，以便引擎的模型可以正确查询它们。要将这些迁移复制到应用程序中，请从应用程序的根目录运行以下命令：</target>
        </trans-unit>
        <trans-unit id="2465fb9cdbf0b80704e99d5b2da49be290d0b4c9" translate="yes" xml:space="preserve">
          <source>The engine is unable to find the partial required for rendering the comments. Rails looks first in the application's (&lt;code&gt;test/dummy&lt;/code&gt;) &lt;code&gt;app/views&lt;/code&gt; directory and then in the engine's &lt;code&gt;app/views&lt;/code&gt; directory. When it can't find it, it will throw this error. The engine knows to look for &lt;code&gt;blorgh/comments/_comment&lt;/code&gt; because the model object it is receiving is from the &lt;code&gt;Blorgh::Comment&lt;/code&gt; class.</source>
          <target state="translated">引擎找不到呈现注释所需的部分内容。Rails首先在应用程序的（ &lt;code&gt;test/dummy&lt;/code&gt; ） &lt;code&gt;app/views&lt;/code&gt; 目录中查找，然后在引擎的 &lt;code&gt;app/views&lt;/code&gt; 目录中查找。当找不到它时，它将引发此错误。引擎知道要查找 &lt;code&gt;blorgh/comments/_comment&lt;/code&gt; ,因为它接收的模型对象来自 &lt;code&gt;Blorgh::Comment&lt;/code&gt; 类。</target>
        </trans-unit>
        <trans-unit id="ea6b332efc300c274b97a32b7ce8d8e009ab65ef" translate="yes" xml:space="preserve">
          <source>The engine that this guide covers provides submitting articles and commenting functionality and follows a similar thread to the &lt;a href=&quot;getting_started&quot;&gt;Getting Started Guide&lt;/a&gt;, with some new twists.</source>
          <target state="translated">本指南涵盖的引擎提供提交文章和评论功能，并遵循与《&lt;a href=&quot;getting_started&quot;&gt;入门指南》&lt;/a&gt;类似的主题，但有一些新的变化。</target>
        </trans-unit>
        <trans-unit id="d7b01cfd4565a85c2dbb4f19156a363391250255" translate="yes" xml:space="preserve">
          <source>The engine that will be created in this guide will be called &quot;blorgh&quot;. This engine will provide blogging functionality to its host applications, allowing for new articles and comments to be created. At the beginning of this guide, you will be working solely within the engine itself, but in later sections you'll see how to hook it into an application.</source>
          <target state="translated">本指南中将要创建的引擎将被称为 &quot;blorgh&quot;。这个引擎将为其主机应用程序提供博客功能,允许创建新文章和评论。在本指南的一开始,你将只在引擎本身中工作,但在后面的章节中,你将看到如何将它挂到一个应用程序中。</target>
        </trans-unit>
        <trans-unit id="527b2aac30ef582fdc0a45802b88ee7ae5e7ffc7" translate="yes" xml:space="preserve">
          <source>The entire URL used for the request.</source>
          <target state="translated">用于请求的整个URL。</target>
        </trans-unit>
        <trans-unit id="1c7a4ea6286b889e3eeecb8b0c295abd48222222" translate="yes" xml:space="preserve">
          <source>The entire callback chain of a &lt;a href=&quot;persistence#method-i-save&quot;&gt;#save&lt;/a&gt;, &lt;a href=&quot;persistence#method-i-save-21&quot;&gt;#save!&lt;/a&gt;, or &lt;a href=&quot;persistence#method-i-destroy&quot;&gt;#destroy&lt;/a&gt; call runs within a transaction. That includes &lt;code&gt;after_*&lt;/code&gt; hooks. If everything goes fine a &lt;code&gt;COMMIT&lt;/code&gt; is executed once the chain has been completed.</source>
          <target state="translated"># &lt;a href=&quot;persistence#method-i-save&quot;&gt;save&lt;/a&gt;，# &lt;a href=&quot;persistence#method-i-save-21&quot;&gt;save！&lt;/a&gt;的整个回调链。或&lt;a href=&quot;persistence#method-i-destroy&quot;&gt;#destroy&lt;/a&gt;调用在事务内运行。这包括 &lt;code&gt;after_*&lt;/code&gt; 钩子。如果一切顺利，则在链完成后将执行 &lt;code&gt;COMMIT&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d99c9a66d0b0be0a02769838a20ac0b1925f5311" translate="yes" xml:space="preserve">
          <source>The entire callback chain of a &lt;a href=&quot;persistence#method-i-save&quot;&gt;#save&lt;/a&gt;, &lt;a href=&quot;persistence#method-i-save-21&quot;&gt;#save!&lt;/a&gt;, or &lt;a href=&quot;persistence#method-i-destroy&quot;&gt;#destroy&lt;/a&gt; call runs within a transaction. That includes &lt;code&gt;after_*&lt;/code&gt; hooks. If everything goes fine a COMMIT is executed once the chain has been completed.</source>
          <target state="translated"># &lt;a href=&quot;persistence#method-i-save&quot;&gt;save&lt;/a&gt;，# &lt;a href=&quot;persistence#method-i-save-21&quot;&gt;save！&lt;/a&gt;的整个回调链。或&lt;a href=&quot;persistence#method-i-destroy&quot;&gt;#destroy&lt;/a&gt;调用在事务内运行。这包括 &lt;code&gt;after_*&lt;/code&gt; 钩子。如果一切顺利，则在链完成后将执行COMMIT。</target>
        </trans-unit>
        <trans-unit id="160135e0f4b320878ee046d55d4b87a2848ed38b" translate="yes" xml:space="preserve">
          <source>The entry &amp;ldquo;superclass&amp;rdquo; also serves as a perfect place to put all that shared logic that applies to both messages and comments, and which acts primarily on the shared attributes. Imagine:</source>
          <target state="translated">条目&amp;ldquo;超类&amp;rdquo;也是放置所有适用于消息和注释并主要作用于共享属性的共享逻辑的理想场所。想象：</target>
        </trans-unit>
        <trans-unit id="f16e4fc1970700778bf53ca3a20a8ccb854a9165" translate="yes" xml:space="preserve">
          <source>The environment variable RAILS_GROUPS;</source>
          <target state="translated">环境变量RAILS_GROUPS。</target>
        </trans-unit>
        <trans-unit id="47fccb458c4924179eb7ab520146ad2f2e5b5da5" translate="yes" xml:space="preserve">
          <source>The equivalent YAML file would look like this:</source>
          <target state="translated">相应的YAML文件会是这样的。</target>
        </trans-unit>
        <trans-unit id="46b064b6decece00517a4ae80500c5b520897a0b" translate="yes" xml:space="preserve">
          <source>The errata for the &lt;code&gt;PATCH&lt;/code&gt; verb &lt;a href=&quot;http://www.rfc-editor.org/errata_search.php?rfc=5789&quot;&gt;specifies that a 'diff' media type should be used with &lt;code&gt;PATCH&lt;/code&gt;&lt;/a&gt;. One such format is &lt;a href=&quot;https://tools.ietf.org/html/rfc6902&quot;&gt;JSON Patch&lt;/a&gt;. While Rails does not support JSON Patch natively, it's easy enough to add support:</source>
          <target state="translated">用于勘误 &lt;code&gt;PATCH&lt;/code&gt; 动词&lt;a href=&quot;http://www.rfc-editor.org/errata_search.php?rfc=5789&quot;&gt;，一个&amp;ldquo;差异&amp;rdquo;的媒体类型应与使用指定 &lt;code&gt;PATCH&lt;/code&gt; &lt;/a&gt;。一种这样的格式是&lt;a href=&quot;https://tools.ietf.org/html/rfc6902&quot;&gt;JSON Patch&lt;/a&gt;。尽管Rails本身不支持JSON Patch，但添加支持很容易：</target>
        </trans-unit>
        <trans-unit id="8885f8ccb1c1582405cb4d3b3c605662ddb50e9f" translate="yes" xml:space="preserve">
          <source>The errata for the &lt;code&gt;PATCH&lt;/code&gt; verb &lt;a href=&quot;https://www.rfc-editor.org/errata_search.php?rfc=5789&quot;&gt;specifies that a 'diff' media type should be used with &lt;code&gt;PATCH&lt;/code&gt;&lt;/a&gt;. One such format is &lt;a href=&quot;https://tools.ietf.org/html/rfc6902&quot;&gt;JSON Patch&lt;/a&gt;. While Rails does not support JSON Patch natively, it's easy enough to add support:</source>
          <target state="translated">用于勘误 &lt;code&gt;PATCH&lt;/code&gt; 动词&lt;a href=&quot;https://www.rfc-editor.org/errata_search.php?rfc=5789&quot;&gt;，一个&amp;ldquo;差异&amp;rdquo;的媒体类型应与使用指定 &lt;code&gt;PATCH&lt;/code&gt; &lt;/a&gt;。一种这样的格式是&lt;a href=&quot;https://tools.ietf.org/html/rfc6902&quot;&gt;JSON Patch&lt;/a&gt;。尽管Rails本身不支持JSON Patch，但添加支持很容易：</target>
        </trans-unit>
        <trans-unit id="517f5495378b09403c3a338eae8b0225a24b8aff" translate="yes" xml:space="preserve">
          <source>The error that caused the discard</source>
          <target state="translated">导致丢弃的错误</target>
        </trans-unit>
        <trans-unit id="202c080109e967ceac7ed5f3b20a32c657e5c762" translate="yes" xml:space="preserve">
          <source>The error that caused the retry</source>
          <target state="translated">导致重试的错误</target>
        </trans-unit>
        <trans-unit id="4e43b8e70ed522e58308259bcdb4debbfad5afa2" translate="yes" xml:space="preserve">
          <source>The escaping performed in this method is identical to those performed in the Active Support JSON encoder when &lt;code&gt;ActiveSupport.escape_html_entities_in_json&lt;/code&gt; is set to true. Because this transformation is idempotent, this helper can be applied even if &lt;code&gt;ActiveSupport.escape_html_entities_in_json&lt;/code&gt; is already true.</source>
          <target state="translated">当 &lt;code&gt;ActiveSupport.escape_html_entities_in_json&lt;/code&gt; 设置为true 时，在此方法中执行的转义与在Active Support JSON编码器中执行的转义相同。因为此转换是幂等的，所以即使 &lt;code&gt;ActiveSupport.escape_html_entities_in_json&lt;/code&gt; 已经为true ，也可以应用此助手。</target>
        </trans-unit>
        <trans-unit id="f6cd9b6aa0872547b71e432f2132c47e1b23d564" translate="yes" xml:space="preserve">
          <source>The eval() function is a nightmare for restricted list input filters, as it allows the style attribute to hide the word &quot;innerHTML&quot;:</source>
          <target state="translated">eval()函数对于受限列表输入过滤器来说是个噩梦,因为它允许样式属性隐藏 &quot;innerHTML &quot;这个词。</target>
        </trans-unit>
        <trans-unit id="3970e1a2fc0e3743d76d2b4beaa13f39ba8d4504" translate="yes" xml:space="preserve">
          <source>The example above generates &amp;ldquo;&lt;a href=&quot;http://assets1.example.com&quot;&gt;assets1.example.com&lt;/a&gt;&amp;rdquo; and &amp;ldquo;&lt;a href=&quot;http://assets2.example.com&quot;&gt;assets2.example.com&lt;/a&gt;&amp;rdquo;. This option is useful for example if you need fewer/more than four hosts, custom host names, etc.</source>
          <target state="translated">上面的示例生成&amp;ldquo; &lt;a href=&quot;http://assets1.example.com&quot;&gt;asset1.example.com&lt;/a&gt; &amp;rdquo;和&amp;ldquo; &lt;a href=&quot;http://assets2.example.com&quot;&gt;asset2.example.com&lt;/a&gt; &amp;rdquo;。例如，如果您需要少于/多于四个主机，自定义主机名等，则此选项很有用。</target>
        </trans-unit>
        <trans-unit id="4ccbe5f2440d7cda26b90a4eb61f3a776bcb524d" translate="yes" xml:space="preserve">
          <source>The example above uses a custom environment called &quot;staging&quot; for a production like server but for testing purposes. You can read &lt;a href=&quot;configuring#creating-rails-environments&quot;&gt;Creating Rails Environments&lt;/a&gt; for more information about custom Rails environments.</source>
          <target state="translated">上面的示例将一个称为&amp;ldquo;登台&amp;rdquo;的自定义环境用于服务器之类的产品，但用于测试目的。您可以阅读&lt;a href=&quot;configuring#creating-rails-environments&quot;&gt;创建Rails环境&lt;/a&gt;以获取有关定制Rails环境的更多信息。</target>
        </trans-unit>
        <trans-unit id="dd5763a2636a74bdb09de576f848b626740d358c" translate="yes" xml:space="preserve">
          <source>The example above uses a custom environment called &quot;staging&quot; for a production like server but for testing purposes. You can read &lt;a href=&quot;configuring#creating-rails-environments&quot;&gt;Creating Rails environments&lt;/a&gt; for more information about custom Rails environments.</source>
          <target state="translated">上面的示例将一个称为&amp;ldquo;登台&amp;rdquo;的自定义环境用于服务器之类的产品，但用于测试目的。您可以阅读&lt;a href=&quot;configuring#creating-rails-environments&quot;&gt;创建Rails环境&lt;/a&gt;以获取有关定制Rails环境的更多信息。</target>
        </trans-unit>
        <trans-unit id="ecb3184dee5c579a473cebc5475c09e72e149629" translate="yes" xml:space="preserve">
          <source>The example above will create a test framework option and will invoke a generator based on the user supplied value.</source>
          <target state="translated">上面的例子将创建一个测试框架选项,并将根据用户提供的值调用一个生成器。</target>
        </trans-unit>
        <trans-unit id="344add1bda36def193aec6a1db38dc0ecd133c78" translate="yes" xml:space="preserve">
          <source>The example of partial use describes a familiar pattern where a template needs to iterate over an array and render a sub template for each of the elements. This pattern has been implemented as a single method that accepts an array and renders a partial by the same name as the elements contained within. So the three-lined example in &amp;ldquo;Using partials&amp;rdquo; can be rewritten with a single line:</source>
          <target state="translated">部分使用的示例描述了一种熟悉的模式，其中模板需要遍历数组并为每个元素呈现一个子模板。此模式已实现为单个方法，该方法接受数组并以与包含在其中的元素相同的名称呈现部分视图。因此，可以使用单行重写&amp;ldquo;使用局部&amp;rdquo;中的三行示例：</target>
        </trans-unit>
        <trans-unit id="513e1d35af00b7b4857d0001cb9d96cd14237d06" translate="yes" xml:space="preserve">
          <source>The examples above put files under the application's &lt;code&gt;lib&lt;/code&gt; because said directory belongs to &lt;code&gt;$LOAD_PATH&lt;/code&gt;.</source>
          <target state="translated">上面的示例将文件放在应用程序的 &lt;code&gt;lib&lt;/code&gt; 下，因为该目录属于 &lt;code&gt;$LOAD_PATH&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1c74c9a07fb4e60ccadc9e321e8eb5e6ad8dd588" translate="yes" xml:space="preserve">
          <source>The examples above show that &lt;code&gt;in_groups&lt;/code&gt; fills some groups with a trailing &lt;code&gt;nil&lt;/code&gt; element as needed. A group can get at most one of these extra elements, the rightmost one if any. And the groups that have them are always the last ones.</source>
          <target state="translated">上面的示例显示 &lt;code&gt;in_groups&lt;/code&gt; 根据需要用尾随 &lt;code&gt;nil&lt;/code&gt; 元素填充某些组。一组最多可以获得这些额外元素中的一个，如果有的话，最右边的一个。拥有他们的团体永远是最后一个。</target>
        </trans-unit>
        <trans-unit id="253b59cdddb01f4ba710f2685087ef72920525de" translate="yes" xml:space="preserve">
          <source>The examples below use &lt;code&gt;$&lt;/code&gt; to represent your terminal prompt in a UNIX-like OS, though it may have been customized to appear differently. If you are using Windows, your prompt will look something like &lt;code&gt;C:\source_code&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">下面的示例使用 &lt;code&gt;$&lt;/code&gt; 表示类似UNIX的操作系统中的终端提示，尽管可能已对其进行了自定义以使其外观有所不同。如果使用Windows，则提示符将类似于 &lt;code&gt;C:\source_code&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="61162445c5595b6fb1ee7e3f0721291476b564b0" translate="yes" xml:space="preserve">
          <source>The examples below use &lt;code&gt;$&lt;/code&gt; to represent your terminal prompt in a UNIX-like OS, though it may have been customized to appear differently. If you are using Windows, your prompt will look something like &lt;code&gt;c:\source_code&amp;gt;&lt;/code&gt;</source>
          <target state="translated">下面的示例使用 &lt;code&gt;$&lt;/code&gt; 表示类似UNIX的操作系统中的终端提示，尽管可能已对其进行了自定义以使其外观有所不同。如果使用Windows，则提示符将类似于 &lt;code&gt;c:\source_code&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="962d766aea512badcd93d36a0bad74875b6df8a3" translate="yes" xml:space="preserve">
          <source>The exception object</source>
          <target state="translated">异常对象</target>
        </trans-unit>
        <trans-unit id="61f4d305dc19efd8a77994a6d624f683cf529072" translate="yes" xml:space="preserve">
          <source>The exceptions &lt;a href=&quot;adapternotspecified&quot;&gt;&lt;code&gt;AdapterNotSpecified&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;adapternotfound&quot;&gt;&lt;code&gt;AdapterNotFound&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;ArgumentError&lt;/code&gt; may be returned on an error.</source>
          <target state="translated">例外&lt;a href=&quot;adapternotspecified&quot;&gt; &lt;code&gt;AdapterNotSpecified&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;adapternotfound&quot;&gt; &lt;code&gt;AdapterNotFound&lt;/code&gt; &lt;/a&gt;并 &lt;code&gt;ArgumentError&lt;/code&gt; 可能在错误被退回。</target>
        </trans-unit>
        <trans-unit id="13335fd46e437958bd49212b4d657196ad9ffa75" translate="yes" xml:space="preserve">
          <source>The exceptions &lt;a href=&quot;adapternotspecified&quot;&gt;AdapterNotSpecified&lt;/a&gt;, &lt;a href=&quot;adapternotfound&quot;&gt;AdapterNotFound&lt;/a&gt; and &lt;code&gt;ArgumentError&lt;/code&gt; may be returned on an error.</source>
          <target state="translated">例外&lt;a href=&quot;adapternotspecified&quot;&gt;AdapterNotSpecified&lt;/a&gt;，&lt;a href=&quot;adapternotfound&quot;&gt;AdapterNotFound&lt;/a&gt;并 &lt;code&gt;ArgumentError&lt;/code&gt; 可能在错误被退回。</target>
        </trans-unit>
        <trans-unit id="2268f470fa1e4f224984a46fe5b66988eea0dd2c" translate="yes" xml:space="preserve">
          <source>The execution context of a block passed to &lt;code&gt;Class.new&lt;/code&gt; or &lt;code&gt;Module.new&lt;/code&gt; is not entirely equivalent to the one of the body of the definitions using the &lt;code&gt;class&lt;/code&gt; and &lt;code&gt;module&lt;/code&gt; keywords. But both idioms result in the same constant assignment.</source>
          <target state="translated">传递给 &lt;code&gt;Class.new&lt;/code&gt; 或 &lt;code&gt;Module.new&lt;/code&gt; 的块的执行上下文并不完全等同于使用 &lt;code&gt;class&lt;/code&gt; 和 &lt;code&gt;module&lt;/code&gt; 关键字的定义主体之一。但是，这两个习惯用法都会导致相同的常量分配。</target>
        </trans-unit>
        <trans-unit id="d1560f51490992d361bd33ce4f84967240b07850" translate="yes" xml:space="preserve">
          <source>The execution of each test method stops as soon as any error or an assertion failure is encountered, and the test suite continues with the next method. All test methods are executed in random order. The &lt;a href=&quot;configuring#configuring-active-support&quot;&gt;&lt;code&gt;config.active_support.test_order&lt;/code&gt; option&lt;/a&gt; can be used to configure test order.</source>
          <target state="translated">一旦遇到任何错误或断言失败，每个测试方法的执行就会停止，测试套件将继续使用下一个方法。所有测试方法均以随机顺序执行。该&lt;a href=&quot;configuring#configuring-active-support&quot;&gt; &lt;code&gt;config.active_support.test_order&lt;/code&gt; 选项&lt;/a&gt;可以用来配置测试顺序。</target>
        </trans-unit>
        <trans-unit id="86f2a88639b58b6dc320a26b779f9c83492793d1" translate="yes" xml:space="preserve">
          <source>The face attribute must be in the object and it cannot be blank or marked for destruction.</source>
          <target state="translated">面部属性必须在对象中,不能是空白或标记销毁。</target>
        </trans-unit>
        <trans-unit id="cd2e2325522f51d93172fabd30184210ad6758e4" translate="yes" xml:space="preserve">
          <source>The field name can also be a string:</source>
          <target state="translated">字段名也可以是一个字符串。</target>
        </trans-unit>
        <trans-unit id="c23f5a2d4fe414d9b9dccdb276434ede248d4038" translate="yes" xml:space="preserve">
          <source>The file &lt;code&gt;railties/lib/rails/cli&lt;/code&gt; in turn calls &lt;code&gt;Rails::AppLoader.exec_app&lt;/code&gt;.</source>
          <target state="translated">文件 &lt;code&gt;railties/lib/rails/cli&lt;/code&gt; 依次调用 &lt;code&gt;Rails::AppLoader.exec_app&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bac5d2c07bdf6dfba37a9dd229fabf112d19ceeb" translate="yes" xml:space="preserve">
          <source>The file extensions used on an asset determine what preprocessing is applied. When a controller or a scaffold is generated with the default Rails gemset, a CoffeeScript file and a SCSS file are generated in place of a regular JavaScript and CSS file. The example used before was a controller called &quot;projects&quot;, which generated an &lt;code&gt;app/assets/stylesheets/projects.scss&lt;/code&gt; file.</source>
          <target state="translated">资产上使用的文件扩展名确定要应用的预处理。当使用默认的Rails宝石集生成控制器或支架时，将生成CoffeeScript文件和SCSS文件来代替常规的JavaScript和CSS文件。之前使用的示例是一个名为&amp;ldquo; projects&amp;rdquo;的控制器，该控制器生成了一个 &lt;code&gt;app/assets/stylesheets/projects.scss&lt;/code&gt; 文件。</target>
        </trans-unit>
        <trans-unit id="683b772b6fe83f9b1b76bea0a8b4863a2c46b587" translate="yes" xml:space="preserve">
          <source>The file extensions used on an asset determine what preprocessing is applied. When a controller or a scaffold is generated with the default Rails gemset, an SCSS file is generated in place of a regular CSS file. The example used before was a controller called &quot;projects&quot;, which generated an &lt;code&gt;app/assets/stylesheets/projects.scss&lt;/code&gt; file.</source>
          <target state="translated">资产上使用的文件扩展名决定了要应用的预处理。当使用默认的Rails gemset生成控制器或支架时，将生成SCSS文件来代替常规CSS文件。之前使用的示例是一个名为&amp;ldquo; projects&amp;rdquo;的控制器，该控制器生成了一个 &lt;code&gt;app/assets/stylesheets/projects.scss&lt;/code&gt; 文件。</target>
        </trans-unit>
        <trans-unit id="cba93d2258aa378ac9e921c11bf7eaf5e6cfa97d" translate="yes" xml:space="preserve">
          <source>The file_path parameter on the show action would be encoded as ASCII-8BIT, but all other arguments will remain UTF-8 encoded. This is useful in the case where an application must handle data but encoding of the data is unknown, like file system data.</source>
          <target state="translated">show动作中的file_path参数将被编码为ASCII-8BIT,但所有其他参数将保持UTF-8编码。这在应用程序必须处理数据但数据编码未知的情况下非常有用,比如文件系统数据。</target>
        </trans-unit>
        <trans-unit id="c26c0108cf064c492a946765b42605d5cad90a75" translate="yes" xml:space="preserve">
          <source>The files in &lt;code&gt;config/initializers&lt;/code&gt; (and any subdirectories of &lt;code&gt;config/initializers&lt;/code&gt;) are sorted and loaded one by one as part of the &lt;code&gt;load_config_initializers&lt;/code&gt; initializer.</source>
          <target state="translated">中的文件 &lt;code&gt;config/initializers&lt;/code&gt; （以及任何子目录 &lt;code&gt;config/initializers&lt;/code&gt; ）进行排序，并加载逐个作为一部分 &lt;code&gt;load_config_initializers&lt;/code&gt; 初始化。</target>
        </trans-unit>
        <trans-unit id="693c5053c620072ba87006436392f9198d81b36c" translate="yes" xml:space="preserve">
          <source>The files or configs can also be encrypted with a custom key. To decrypt with a key in the &lt;code&gt;ENV&lt;/code&gt;, use:</source>
          <target state="translated">也可以使用自定义密钥对文件或配置进行加密。要使用 &lt;code&gt;ENV&lt;/code&gt; 中的密钥解密，请使用：</target>
        </trans-unit>
        <trans-unit id="79590c5db1b2aa3e6f7401ef520c2cc7cf875c50" translate="yes" xml:space="preserve">
          <source>The final caveat is that your actions are executed in a separate thread than the main thread. Make sure your actions are thread safe, and this shouldn't be a problem (don't share state across threads, etc).</source>
          <target state="translated">最后要注意的是,你的操作是在一个独立的线程中执行的,而不是在主线程中。确保你的动作是线程安全的,这应该不是问题(不要跨线程共享状态等)。</target>
        </trans-unit>
        <trans-unit id="421c547ed96034c7fdf98ebd07b149c41367cd02" translate="yes" xml:space="preserve">
          <source>The final result would be:</source>
          <target state="translated">最后的结果将是:</target>
        </trans-unit>
        <trans-unit id="b6e8a878c6d566279c79dabab5729cf9f687141e" translate="yes" xml:space="preserve">
          <source>The fingerprinting behavior is controlled by the &lt;code&gt;config.assets.digest&lt;/code&gt; initialization option (which defaults to &lt;code&gt;true&lt;/code&gt;).</source>
          <target state="translated">指纹行为由 &lt;code&gt;config.assets.digest&lt;/code&gt; 初始化选项（默认为 &lt;code&gt;true&lt;/code&gt; ）控制。</target>
        </trans-unit>
        <trans-unit id="0e5b88eb961587020694ec62f77f764be5c16bf8" translate="yes" xml:space="preserve">
          <source>The first &lt;code&gt;link_to&lt;/code&gt; will generate &amp;ldquo;/profile&amp;rdquo; but the second will generate the standard polymorphic URL of &amp;ldquo;/admin/users/1&amp;rdquo;.</source>
          <target state="translated">第一个 &lt;code&gt;link_to&lt;/code&gt; 将生成&amp;ldquo; / profile&amp;rdquo;，但是第二个link_to将生成标准的多态URL&amp;ldquo; / admin / users / 1&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="cd20ffb3e2140e1113ddfc3b288c6aa57e901460" translate="yes" xml:space="preserve">
          <source>The first and last part used to find the generator to be invoked are guessed based on class invokes &lt;a href=&quot;base#method-c-hook_for&quot;&gt;::hook_for&lt;/a&gt;, as noticed in the example above. This can be customized with two options: :in and :as.</source>
          <target state="translated">如上例所示，根据类&lt;a href=&quot;base#method-c-hook_for&quot;&gt;invokes :: hook_for&lt;/a&gt;猜测用于查找要调用的生成器的第一部分和最后一部分。可以使用以下两个选项来自定义：：in和：as。</target>
        </trans-unit>
        <trans-unit id="4ab3c578cc14a9f99df243c07a14a3467eafd65b" translate="yes" xml:space="preserve">
          <source>The first and last part used to find the generator to be invoked are guessed based on class invokes &lt;a href=&quot;base#method-c-hook_for&quot;&gt;&lt;code&gt;hook_for&lt;/code&gt;&lt;/a&gt;, as noticed in the example above. This can be customized with two options: :in and :as.</source>
          <target state="translated">如上例所示，根据类调用&lt;a href=&quot;base#method-c-hook_for&quot;&gt; &lt;code&gt;hook_for&lt;/code&gt; &lt;/a&gt;猜测用于查找要调用的生成器的第一部分和最后一部分。可以使用以下两个选项来自定义：：in和：as。</target>
        </trans-unit>
        <trans-unit id="6b2feec48312de884813c60913a1cd3ef59e3f70" translate="yes" xml:space="preserve">
          <source>The first argument to &lt;code&gt;options_for_select&lt;/code&gt; is a nested array where each element has two elements: option text (city name) and option value (city id). The option value is what will be submitted to your controller. Often this will be the id of a corresponding database object but this does not have to be the case.</source>
          <target state="translated">&lt;code&gt;options_for_select&lt;/code&gt; 的第一个参数是一个嵌套数组，其中每个元素都有两个元素：选项文本（城市名称）和选项值（城市ID）。选项值是将提交给您的控制器的值。通常，这将是相应数据库对象的ID，但这不是必须的。</target>
        </trans-unit>
        <trans-unit id="c35a6654821cab50b0d48eb9aec811dba267ad71" translate="yes" xml:space="preserve">
          <source>The first example shows &lt;code&gt;in_groups_of&lt;/code&gt; fills the last group with as many &lt;code&gt;nil&lt;/code&gt; elements as needed to have the requested size. You can change this padding value using the second optional argument:</source>
          <target state="translated">第一个示例显示 &lt;code&gt;in_groups_of&lt;/code&gt; 为最后一个组填充所需数量的 &lt;code&gt;nil&lt;/code&gt; 元素，以具有请求的大小。您可以使用第二个可选参数来更改此填充值：</target>
        </trans-unit>
        <trans-unit id="cec3ae932966c51c2ccbcc94a3e144ca1e358e96" translate="yes" xml:space="preserve">
          <source>The first example shows how &lt;code&gt;in_groups_of&lt;/code&gt; fills the last group with as many &lt;code&gt;nil&lt;/code&gt; elements as needed to have the requested size. You can change this padding value using the second optional argument:</source>
          <target state="translated">第一个示例显示 &lt;code&gt;in_groups_of&lt;/code&gt; 如何用所需的 &lt;code&gt;nil&lt;/code&gt; 个元素填充最后一个组，以具有所请求的大小。您可以使用第二个可选参数来更改此填充值：</target>
        </trans-unit>
        <trans-unit id="4f47fe60e70f182e1be5811a83b6e1289320cec3" translate="yes" xml:space="preserve">
          <source>The first feature of the pipeline is to concatenate assets, which can reduce the number of requests that a browser makes to render a web page. Web browsers are limited in the number of requests that they can make in parallel, so fewer requests can mean faster loading for your application.</source>
          <target state="translated">管道的第一个功能是连接资产,这可以减少浏览器渲染网页的请求数量。网络浏览器可以并行发出的请求数量是有限的,因此较少的请求意味着您的应用程序加载速度更快。</target>
        </trans-unit>
        <trans-unit id="a7fda4a618b934b655302ec63bac10bfdaa3385c" translate="yes" xml:space="preserve">
          <source>The first form</source>
          <target state="translated">第一种形式</target>
        </trans-unit>
        <trans-unit id="c779e7cdfc5b1f836df5b6e50b3fb3f8e6ec3015" translate="yes" xml:space="preserve">
          <source>The first is to use a block directly with the *_action methods. The block receives the controller as an argument. The &lt;code&gt;require_login&lt;/code&gt; filter from above could be rewritten to use a block:</source>
          <target state="translated">第一种是直接使用* _action方法使用块。该块接收控制器作为参数。上面的 &lt;code&gt;require_login&lt;/code&gt; 过滤器可以重写为使用一个块：</target>
        </trans-unit>
        <trans-unit id="0eefd9b71e6b09cec0f424fcb37e2f0065378122" translate="yes" xml:space="preserve">
          <source>The first is to use a block directly with the &lt;code&gt;*_action&lt;/code&gt; methods. The block receives the controller as an argument. The &lt;code&gt;require_login&lt;/code&gt; filter from above could be rewritten to use a block:</source>
          <target state="translated">第一种是直接将块与 &lt;code&gt;*_action&lt;/code&gt; 方法一起使用。该块接收控制器作为参数。上面的 &lt;code&gt;require_login&lt;/code&gt; 过滤器可以重写为使用一个块：</target>
        </trans-unit>
        <trans-unit id="decf5a49fc6e6d01f58f977387f90ce1c0e78cbb" translate="yes" xml:space="preserve">
          <source>The first option doesn't require any client-side JavaScript integration, and can be used by any other back-end service that deals with files. The second option is faster, since you're not using your own server as a staging point for uploads, and can work with deployments like Heroku that do not provide large amounts of disk space.</source>
          <target state="translated">第一个选项不需要任何客户端JavaScript集成,可以被任何其他处理文件的后端服务使用。第二种方案速度更快,因为你不使用自己的服务器作为上传的中转站,可以与Heroku这样不提供大量磁盘空间的部署一起使用。</target>
        </trans-unit>
        <trans-unit id="3018e7bc52b5fa1b4994063800ecfef2cab4f995" translate="yes" xml:space="preserve">
          <source>The first parameter specifies which value should be selected and can either be an instance of a &lt;code&gt;Date&lt;/code&gt;, &lt;code&gt;Time&lt;/code&gt;, or &lt;code&gt;DateTime&lt;/code&gt;, in which case the relevant component will be extracted, or a numerical value. For example:</source>
          <target state="translated">第一个参数指定应选择的值，并且可以是 &lt;code&gt;Date&lt;/code&gt; ， &lt;code&gt;Time&lt;/code&gt; 或 &lt;code&gt;DateTime&lt;/code&gt; 的实例，在这种情况下，将提取相关组件或数值。例如：</target>
        </trans-unit>
        <trans-unit id="23ef7dafac92cd567811d97501c6c0de467a9214" translate="yes" xml:space="preserve">
          <source>The first parameter to &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionView/Helpers/FormBuilder.html#method-i-check_box&quot;&gt;&lt;code&gt;check_box&lt;/code&gt;&lt;/a&gt; is the name of the input. The second parameter is the value of the input. This value will be included in the form data (and be present in &lt;code&gt;params&lt;/code&gt;) when the checkbox is checked.</source>
          <target state="translated">&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionView/Helpers/FormBuilder.html#method-i-check_box&quot;&gt; &lt;code&gt;check_box&lt;/code&gt; &lt;/a&gt;的第一个参数是输入的名称。第二个参数是输入的值。选中复选框后，此值将包含在表单数据中（并存在于 &lt;code&gt;params&lt;/code&gt; 中）。</target>
        </trans-unit>
        <trans-unit id="9f933693c0140825dd1f189e2779b8fe6cb715c9" translate="yes" xml:space="preserve">
          <source>The first parameter to &lt;code&gt;check_box_tag&lt;/code&gt;, of course, is the name of the input. The second parameter, naturally, is the value of the input. This value will be included in the form data (and be present in &lt;code&gt;params&lt;/code&gt;) when the checkbox is checked.</source>
          <target state="translated">当然， &lt;code&gt;check_box_tag&lt;/code&gt; 的第一个参数是输入的名称。第二个参数自然是输入值。选中此复选框后，此值将包含在表单数据中（并存在于 &lt;code&gt;params&lt;/code&gt; 中）。</target>
        </trans-unit>
        <trans-unit id="ceab9ee28778e0cd198e4bb4c0d9830c53ea674c" translate="yes" xml:space="preserve">
          <source>The first question a lot of people have when thinking about building a JSON API using Rails is: &quot;isn't using Rails to spit out some JSON overkill? Shouldn't I just use something like Sinatra?&quot;.</source>
          <target state="translated">很多人在考虑使用Rails构建JSON API的时候,第一个问题就是。&quot;用Rails来吐出一些JSON不是太夸张了吗?&quot; &quot;我是不是应该用Sinatra之类的东西?我是不是应该用Sinatra这样的东西?&quot;。</target>
        </trans-unit>
        <trans-unit id="dbb1590aff8add787236e67ae78ae8bec4308b59" translate="yes" xml:space="preserve">
          <source>The first step is to call &lt;code&gt;visit articles_path&lt;/code&gt;. This will take the test to the articles index page.</source>
          <target state="translated">第一步是调用 &lt;code&gt;visit articles_path&lt;/code&gt; 。这会将测试带到文章索引页面。</target>
        </trans-unit>
        <trans-unit id="a5f38744e3441897f904e05dbaada4d430125ad6" translate="yes" xml:space="preserve">
          <source>The first step is to create a file at &lt;code&gt;lib/generators/initializer_generator.rb&lt;/code&gt; with the following content:</source>
          <target state="translated">第一步是在 &lt;code&gt;lib/generators/initializer_generator.rb&lt;/code&gt; 中创建一个文件，内容如下：</target>
        </trans-unit>
        <trans-unit id="7647b789ce905eead162df1c2d4deef59320a6d1" translate="yes" xml:space="preserve">
          <source>The first step is to update the README file with detailed information about how to use your plugin. A few key things to include are:</source>
          <target state="translated">第一步是更新README文件,详细介绍如何使用你的插件。需要包含的几个关键内容是</target>
        </trans-unit>
        <trans-unit id="59c512882e34836962c0651a7f7bce0b3070c1e6" translate="yes" xml:space="preserve">
          <source>The first step to avoid this is to make sure all &quot;destructive&quot; actions (create, update, and destroy) can only be accessed with non-GET requests. If you're following RESTful conventions you're already doing this. However, a malicious site can still send a non-GET request to your site quite easily, and that's where the request forgery protection comes in. As the name says, it protects from forged requests.</source>
          <target state="translated">避免这种情况的第一步是确保所有的 &quot;破坏性 &quot;操作(创建、更新和销毁)只能通过非GET请求来访问。如果你遵循RESTful惯例,你已经做到了这一点。然而,一个恶意网站仍然可以很容易地向你的网站发送非GET请求,这就是请求伪造保护的作用。顾名思义,它可以防止伪造的请求。</target>
        </trans-unit>
        <trans-unit id="5109762b5d7c74ae179ab67654f35f303d74031b" translate="yes" xml:space="preserve">
          <source>The first step we'll take is adding an &lt;code&gt;edit&lt;/code&gt; action to the &lt;code&gt;ArticlesController&lt;/code&gt;, generally between the &lt;code&gt;new&lt;/code&gt; and &lt;code&gt;create&lt;/code&gt; actions, as shown:</source>
          <target state="translated">我们将采取的第一步是将 &lt;code&gt;edit&lt;/code&gt; 动作添加到 &lt;code&gt;ArticlesController&lt;/code&gt; ，通常在 &lt;code&gt;new&lt;/code&gt; 和 &lt;code&gt;create&lt;/code&gt; 动作之间，如下所示：</target>
        </trans-unit>
        <trans-unit id="ca590be262eb1b3454e67886b520ae65c0895075" translate="yes" xml:space="preserve">
          <source>The first thing that the scaffold generator does is invoke the &lt;code&gt;active_record&lt;/code&gt; generator, which generates a migration and a model for the resource. Note here, however, that the migration is called &lt;code&gt;create_blorgh_articles&lt;/code&gt; rather than the usual &lt;code&gt;create_articles&lt;/code&gt;. This is due to the &lt;code&gt;isolate_namespace&lt;/code&gt; method called in the &lt;code&gt;Blorgh::Engine&lt;/code&gt; class's definition. The model here is also namespaced, being placed at &lt;code&gt;app/models/blorgh/article.rb&lt;/code&gt; rather than &lt;code&gt;app/models/article.rb&lt;/code&gt; due to the &lt;code&gt;isolate_namespace&lt;/code&gt; call within the &lt;code&gt;Engine&lt;/code&gt; class.</source>
          <target state="translated">脚手架生成器要做的第一件事是调用 &lt;code&gt;active_record&lt;/code&gt; 生成器，该生成器为资源生成迁移和模型。但是请注意，该迁移称为 &lt;code&gt;create_blorgh_articles&lt;/code&gt; ,而不是通常的 &lt;code&gt;create_articles&lt;/code&gt; 。这是由于在 &lt;code&gt;Blorgh::Engine&lt;/code&gt; 类的定义中调用了 &lt;code&gt;isolate_namespace&lt;/code&gt; 方法。由于 &lt;code&gt;Engine&lt;/code&gt; 类中的 &lt;code&gt;isolate_namespace&lt;/code&gt; 调用，此处的模型也具有命名空间，放置在 &lt;code&gt;app/models/blorgh/article.rb&lt;/code&gt; 而非 &lt;code&gt;app/models/article.rb&lt;/code&gt; 处。</target>
        </trans-unit>
        <trans-unit id="bf247db1b15a4a0665a1fff0a86d0b8b870286c8" translate="yes" xml:space="preserve">
          <source>The first thing to generate for a blog engine is the &lt;code&gt;Article&lt;/code&gt; model and related controller. To quickly generate this, you can use the Rails scaffold generator.</source>
          <target state="translated">为博客引擎生成的第一件事是 &lt;code&gt;Article&lt;/code&gt; 模型和相关的控制器。要快速生成此文件，可以使用Rails支架生成器。</target>
        </trans-unit>
        <trans-unit id="67ac826f249d2df18239a1cdc76f0b3ffea39836" translate="yes" xml:space="preserve">
          <source>The first thing we'll want to do is create a new Rails application by running the &lt;code&gt;rails new&lt;/code&gt; command after installing Rails.</source>
          <target state="translated">我们要做的第一件事是在安装Rails之后通过运行 &lt;code&gt;rails new&lt;/code&gt; 命令创建一个新的Rails应用程序。</target>
        </trans-unit>
        <trans-unit id="0ee7285a99cf6559d8f8b5329c15cff3b597d8f9" translate="yes" xml:space="preserve">
          <source>The first timestamp (&lt;code&gt;[timestamp_1]&lt;/code&gt;) will be the current time, and the second timestamp (&lt;code&gt;[timestamp_2]&lt;/code&gt;) will be the current time plus a second. The reason for this is so that the migrations for the engine are run after any existing migrations in the application.</source>
          <target state="translated">第一个时间戳（ &lt;code&gt;[timestamp_1]&lt;/code&gt; ）将是当前时间，第二个时间戳（ &lt;code&gt;[timestamp_2]&lt;/code&gt; ）将是当前时间加一秒。这样做的原因是，引擎的迁移在应用程序中任何现有的迁移之后运行。</target>
        </trans-unit>
        <trans-unit id="3e6b2570d51c28085531d230e84b5d63f1e48272" translate="yes" xml:space="preserve">
          <source>The first two characters (&amp;ldquo;&amp;gt;) are required in case the exception happens while rendering attributes for a given tag. You can check the real cause for the exception in your logger.</source>
          <target state="translated">如果在呈现给定标签的属性时发生异常，则需要前两个字符（&amp;ldquo;&amp;gt;&amp;rdquo;）。您可以在记录器中检查导致异常的真正原因。</target>
        </trans-unit>
        <trans-unit id="f5092553a0a2e3d4056efc8cfd87cfcacfff7bc7" translate="yes" xml:space="preserve">
          <source>The first validation declares that a &lt;code&gt;title&lt;/code&gt; value must be present. Because &lt;code&gt;title&lt;/code&gt; is a string, this means that the &lt;code&gt;title&lt;/code&gt; value must contain at least one non-whitespace character.</source>
          <target state="translated">第一次验证声明必须存在 &lt;code&gt;title&lt;/code&gt; 值。因为 &lt;code&gt;title&lt;/code&gt; 是一个字符串，所以这意味着 &lt;code&gt;title&lt;/code&gt; 值必须至少包含一个非空白字符。</target>
        </trans-unit>
        <trans-unit id="b2c00d089f456d9cd4776e5aa15cde27aa51cc15" translate="yes" xml:space="preserve">
          <source>The first way uses a &lt;a href=&quot;classmethods#method-i-has_many&quot;&gt;&lt;code&gt;has_many&lt;/code&gt;&lt;/a&gt; association with the &lt;code&gt;:through&lt;/code&gt; option and a join model, so there are two stages of associations.</source>
          <target state="translated">第一种方法将&lt;a href=&quot;classmethods#method-i-has_many&quot;&gt; &lt;code&gt;has_many&lt;/code&gt; &lt;/a&gt;关联与 &lt;code&gt;:through&lt;/code&gt; 选项和连接模型一起使用，因此有两个关联阶段。</target>
        </trans-unit>
        <trans-unit id="72aa6535de6074bb6bd46b9d2d9f30007e42e7a1" translate="yes" xml:space="preserve">
          <source>The first way uses a &lt;a href=&quot;classmethods#method-i-has_many&quot;&gt;has_many&lt;/a&gt; association with the &lt;code&gt;:through&lt;/code&gt; option and a join model, so there are two stages of associations.</source>
          <target state="translated">第一种方法将&lt;a href=&quot;classmethods#method-i-has_many&quot;&gt;has_many&lt;/a&gt;关联与 &lt;code&gt;:through&lt;/code&gt; 选项和连接模型一起使用，因此有两个关联阶段。</target>
        </trans-unit>
        <trans-unit id="c9cd0c75ac26aeaf1392bf739898212b29b06c34" translate="yes" xml:space="preserve">
          <source>The first_name attribute must be in the object and it cannot be blank.</source>
          <target state="translated">first_name属性必须在对象中,不能为空。</target>
        </trans-unit>
        <trans-unit id="7f7deeb91723eb6307c03873779ac20d588eb92a" translate="yes" xml:space="preserve">
          <source>The first_name attribute must be in the object and it must be blank.</source>
          <target state="translated">first_name属性必须在对象中,且必须为空白。</target>
        </trans-unit>
        <trans-unit id="55bef31fcee581ecc39fbeffc0faa4743f90075a" translate="yes" xml:space="preserve">
          <source>The flash is a special part of the session which is cleared with each request. This means that values stored there will only be available in the next request, which is useful for passing error messages etc.</source>
          <target state="translated">flash是会话的一个特殊部分,每次请求都会被清除。这意味着存储在那里的值只有在下一个请求中才能使用,这对传递错误信息等很有用。</target>
        </trans-unit>
        <trans-unit id="13c55339edc43cfab5f941cbdf399008a5a9ec67" translate="yes" xml:space="preserve">
          <source>The flash is a special part of the session which is cleared with each request. This means that values stored there will only be available in the next request, which is useful for passing error messages, etc.</source>
          <target state="translated">flash是会话的一个特殊部分,每次请求都会被清除。这意味着存储在那里的值只有在下一个请求中才能使用,这对传递错误信息等很有用。</target>
        </trans-unit>
        <trans-unit id="9245524e6ad5dd053b9feec99770843d73c126d2" translate="yes" xml:space="preserve">
          <source>The flash is accessed via the &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionDispatch/Flash/RequestMethods.html#method-i-flash&quot;&gt;&lt;code&gt;flash&lt;/code&gt;&lt;/a&gt; method. Like the session, the flash is represented as a hash.</source>
          <target state="translated">通过&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionDispatch/Flash/RequestMethods.html#method-i-flash&quot;&gt; &lt;code&gt;flash&lt;/code&gt; &lt;/a&gt;方法可以访问flash。像会话一样，闪存也表示为哈希。</target>
        </trans-unit>
        <trans-unit id="643574b17d90501a21086b03d4416808f0b5012a" translate="yes" xml:space="preserve">
          <source>The flash provides a way to pass temporary primitive-types (&lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt;) between actions. Anything you place in the flash will be exposed to the very next action and then cleared out. This is a great way of doing notices and alerts, such as a create action that sets &lt;code&gt;flash[:notice] = &quot;Post successfully created&quot;&lt;/code&gt; before redirecting to a display action that can then expose the flash to its template. Actually, that exposure is automatically done.</source>
          <target state="translated">Flash提供了一种在动作之间传递临时原始类型（&lt;a href=&quot;../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../hash&quot;&gt; &lt;code&gt;Hash&lt;/code&gt; &lt;/a&gt;）的方法。您放置在闪光灯中的任何东西都将暴露于下一个动作，然后被清除。这是一种执行通知和警报的好方法，例如，将create &lt;code&gt;flash[:notice] = &quot;Post successfully created&quot;&lt;/code&gt; 设置为flash [：notice] =&amp;ldquo;成功创建后发布&amp;rdquo;，然后将其重定向到可以将Flash暴露给其模板的显示操作。实际上，曝光是自动完成的。</target>
        </trans-unit>
        <trans-unit id="89b509889e32d8f793986316afbb6c7d8a102d1b" translate="yes" xml:space="preserve">
          <source>The flash provides a way to pass temporary primitive-types (String, &lt;a href=&quot;../array&quot;&gt;Array&lt;/a&gt;, &lt;a href=&quot;../hash&quot;&gt;Hash&lt;/a&gt;) between actions. Anything you place in the flash will be exposed to the very next action and then cleared out. This is a great way of doing notices and alerts, such as a create action that sets &lt;code&gt;flash[:notice] = &quot;Post
successfully created&quot;&lt;/code&gt; before redirecting to a display action that can then expose the flash to its template. Actually, that exposure is automatically done.</source>
          <target state="translated">Flash提供了一种在动作之间传递临时原始类型（String，&lt;a href=&quot;../array&quot;&gt;Array&lt;/a&gt;，&lt;a href=&quot;../hash&quot;&gt;Hash&lt;/a&gt;）的方法。您放置在闪光灯中的任何东西都将暴露于下一个动作，然后清除。这是一种执行通知和警报的好方法，例如，将create &lt;code&gt;flash[:notice] = &quot;Post successfully created&quot;&lt;/code&gt; 设置为flash [：notice] =&amp;ldquo;成功完成发布&amp;rdquo;，然后将其重定向到可以将Flash暴露给其模板的显示操作。实际上，曝光是自动完成的。</target>
        </trans-unit>
        <trans-unit id="d6361541543365d2f737ca6fb21692e2f0f63b28" translate="yes" xml:space="preserve">
          <source>The following are methods available for both generators and templates for Rails.</source>
          <target state="translated">以下是Rails的生成器和模板可用的方法。</target>
        </trans-unit>
        <trans-unit id="67bf5b51e02f43e1149966c9a4a365e81062253f" translate="yes" xml:space="preserve">
          <source>The following bundled adapters throw the &lt;a href=&quot;../recordnotunique&quot;&gt;&lt;code&gt;ActiveRecord::RecordNotUnique&lt;/code&gt;&lt;/a&gt; exception:</source>
          <target state="translated">以下捆绑的适配器引发&lt;a href=&quot;../recordnotunique&quot;&gt; &lt;code&gt;ActiveRecord::RecordNotUnique&lt;/code&gt; &lt;/a&gt;异常：</target>
        </trans-unit>
        <trans-unit id="ffee53ad3ec5b77a2f9a08d7a6e4adedc900dee5" translate="yes" xml:space="preserve">
          <source>The following bundled adapters throw the &lt;a href=&quot;../recordnotunique&quot;&gt;ActiveRecord::RecordNotUnique&lt;/a&gt; exception:</source>
          <target state="translated">以下捆绑的适配器引发&lt;a href=&quot;../recordnotunique&quot;&gt;ActiveRecord :: RecordNotUnique&lt;/a&gt;异常：</target>
        </trans-unit>
        <trans-unit id="4f1c96675ae6b9570b50e212e3ae027ef8570ca5" translate="yes" xml:space="preserve">
          <source>The following calculation methods have edge cases in October 1582, since days 5..14 just do not exist. This guide does not document their behavior around those days for brevity, but it is enough to say that they do what you would expect. That is, &lt;code&gt;Date.new(1582, 10, 4).tomorrow&lt;/code&gt; returns &lt;code&gt;Date.new(1582, 10, 15)&lt;/code&gt; and so on. Please check &lt;code&gt;test/core_ext/date_ext_test.rb&lt;/code&gt; in the Active Support test suite for expected behavior.</source>
          <target state="translated">下面的计算方法在1582年10月存在边缘情况，因为第5..14天就不存在了。为了简洁起见，本指南并未记录这些日子的行为，但足以说明他们做了您期望的事情。也就是说， &lt;code&gt;Date.new(1582, 10, 4).tomorrow&lt;/code&gt; 返回 &lt;code&gt;Date.new(1582, 10, 15)&lt;/code&gt; ，依此类推。请检查Active Support测试套件中的 &lt;code&gt;test/core_ext/date_ext_test.rb&lt;/code&gt; 以获取预期的行为。</target>
        </trans-unit>
        <trans-unit id="70d4c9f719378844b4409a52323353064e172572" translate="yes" xml:space="preserve">
          <source>The following changes are meant for upgrading your application to Rails 3.1.12, the last 3.1.x version of Rails.</source>
          <target state="translated">以下改动是为了将您的应用程序升级到 Rails 3.1.12,即 Rails 的最新 3.1.x 版本。</target>
        </trans-unit>
        <trans-unit id="a21909e1f363f954735463d953a47620a34d0ecc" translate="yes" xml:space="preserve">
          <source>The following changes are meant for upgrading your application to Rails 4.0.</source>
          <target state="translated">以下改动是为了将您的应用程序升级到 Rails 4.0。</target>
        </trans-unit>
        <trans-unit id="1f4eba11712b688c04dbd32d2ec745a16224dc68" translate="yes" xml:space="preserve">
          <source>The following changes are meant for upgrading your application to the latest 3.2.x version of Rails.</source>
          <target state="translated">以下改动是为了将您的应用程序升级到最新的3.2.x版本的Rails。</target>
        </trans-unit>
        <trans-unit id="5a17e0ad99303eed4359cff4d8da7d88c45ebc56" translate="yes" xml:space="preserve">
          <source>The following checks can also be supplied with a proc or a symbol which corresponds to a method:</source>
          <target state="translated">下面的检查也可以用proc或对应于方法的符号来提供。</target>
        </trans-unit>
        <trans-unit id="46a28b7e917344b9bee0503c9f816514c89eeea1" translate="yes" xml:space="preserve">
          <source>The following code summarizes the situation:</source>
          <target state="translated">以下代码总结了这一情况。</target>
        </trans-unit>
        <trans-unit id="c281ebe2a035df9fc9b458fe9d16552fd19ecc0a" translate="yes" xml:space="preserve">
          <source>The following concrete subclasses are included in Active Storage:</source>
          <target state="translated">下列具体的子类包含在Active Storage中。</target>
        </trans-unit>
        <trans-unit id="96657eda8232590db12df6e4e53baab705d4dc34" translate="yes" xml:space="preserve">
          <source>The following configuration options are best made in one of the environment files (environment.rb, production.rb, etc...)</source>
          <target state="translated">以下配置选项最好在其中一个环境文件中进行(environment.rb、production.rb等...)。</target>
        </trans-unit>
        <trans-unit id="30177bc5b6729d79742e2ee030efdfe4f950f932" translate="yes" xml:space="preserve">
          <source>The following configuration would queue the given job on the &lt;code&gt;production_high_priority&lt;/code&gt; queue when run in production:</source>
          <target state="translated">在生产环境中运行时，以下配置将给定作业在 &lt;code&gt;production_high_priority&lt;/code&gt; 队列中排队：</target>
        </trans-unit>
        <trans-unit id="48b002c00bb39650ea2c3d72da1338bb50128142" translate="yes" xml:space="preserve">
          <source>The following configuration would queue the provided job on the &lt;code&gt;video_server.low_priority&lt;/code&gt; queue:</source>
          <target state="translated">以下配置会将提供的作业放在 &lt;code&gt;video_server.low_priority&lt;/code&gt; 队列中：</target>
        </trans-unit>
        <trans-unit id="daa83a45bf2ff91d6a20f892040b66a0d751ead1" translate="yes" xml:space="preserve">
          <source>The following example demonstrates an extension which can be used with or without &lt;code&gt;Rails&lt;/code&gt;.</source>
          <target state="translated">以下示例演示了可以与 &lt;code&gt;Rails&lt;/code&gt; 一起使用或不与Rails一起使用的扩展。</target>
        </trans-unit>
        <trans-unit id="5f452617bef02933cc7f6d371891f371f7e4b779" translate="yes" xml:space="preserve">
          <source>The following example demonstrates an extension which can be used with or without Rails.</source>
          <target state="translated">下面的例子演示了一个可以与Rails一起使用或不使用Rails的扩展。</target>
        </trans-unit>
        <trans-unit id="99962e504be8e6840c8589ad9d05120d1cb4146f" translate="yes" xml:space="preserve">
          <source>The following features are not (yet) supported:</source>
          <target state="translated">目前还不支持以下功能。</target>
        </trans-unit>
        <trans-unit id="013180286a901d766bcc39db17dc989369dbd41a" translate="yes" xml:space="preserve">
          <source>The following form allows a user to create a &lt;code&gt;Person&lt;/code&gt; and its associated addresses.</source>
          <target state="translated">以下形式允许用户创建一个 &lt;code&gt;Person&lt;/code&gt; 及其相关地址。</target>
        </trans-unit>
        <trans-unit id="d27a5fac9684ab445570c45c6aa8783eca1e2a54" translate="yes" xml:space="preserve">
          <source>The following form:</source>
          <target state="translated">以下形式:</target>
        </trans-unit>
        <trans-unit id="bc83f277cf7da9fe5a7029905b527298a6aa3ec1" translate="yes" xml:space="preserve">
          <source>The following format is for legacy syntax support. It will be deprecated in future versions of Rails.</source>
          <target state="translated">下面的格式是对传统语法的支持。在未来的Rails版本中,它将被废弃。</target>
        </trans-unit>
        <trans-unit id="d8548d239e9c484f9cc69b4404f594147009b4fe" translate="yes" xml:space="preserve">
          <source>The following full app-like example demonstrates how to use a Current class to facilitate easy access to the global, per-request attributes without passing them deeply around everywhere:</source>
          <target state="translated">下面的完整应用样例演示了如何使用Current类来方便地访问全局的、每个请求的属性,而不需要把它们深深地传遍各地。</target>
        </trans-unit>
        <trans-unit id="f673bda06c21b2c27e3f9ccec5465bcd91e788ad" translate="yes" xml:space="preserve">
          <source>The following headers:</source>
          <target state="translated">以下是标题:</target>
        </trans-unit>
        <trans-unit id="0955f47379c8d09732c707b032526245b3e6cc5c" translate="yes" xml:space="preserve">
          <source>The following is a list of the most commonly used methods. Please refer to the &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveModel/Errors.html&quot;&gt;&lt;code&gt;ActiveModel::Errors&lt;/code&gt;&lt;/a&gt; documentation for a list of all the available methods.</source>
          <target state="translated">以下是最常用的方法列表。请参阅&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveModel/Errors.html&quot;&gt; &lt;code&gt;ActiveModel::Errors&lt;/code&gt; &lt;/a&gt;文档以获取所有可用方法的列表。</target>
        </trans-unit>
        <trans-unit id="58d425cd8d652b864ae1fe65a46c847b1c3552b2" translate="yes" xml:space="preserve">
          <source>The following is a list of the most commonly used methods. Please refer to the &lt;code&gt;ActiveModel::Errors&lt;/code&gt; documentation for a list of all the available methods.</source>
          <target state="translated">以下是最常用的方法列表。请参阅 &lt;code&gt;ActiveModel::Errors&lt;/code&gt; 文档以获取所有可用方法的列表。</target>
        </trans-unit>
        <trans-unit id="12aabb098cae3591d87c543791e9cbc757195d40" translate="yes" xml:space="preserve">
          <source>The following is an excerpt from the &lt;a href=&quot;http://www.symantec.com/security_response/writeup.jsp?docid=2006-061211-4111-99&amp;amp;tabid=1&quot;&gt;Js.Yamanner@m&lt;/a&gt; Yahoo! Mail &lt;a href=&quot;http://groovin.net/stuff/yammer.txt&quot;&gt;worm&lt;/a&gt;. It appeared on June 11, 2006 and was the first webmail interface worm:</source>
          <target state="translated">以下摘录自&lt;a href=&quot;http://www.symantec.com/security_response/writeup.jsp?docid=2006-061211-4111-99&amp;amp;tabid=1&quot;&gt;Js.Yamanner@m&lt;/a&gt; Yahoo! 邮件&lt;a href=&quot;http://groovin.net/stuff/yammer.txt&quot;&gt;蠕虫&lt;/a&gt;。它出现在2006年6月11日，是第一个Webmail接口蠕虫：</target>
        </trans-unit>
        <trans-unit id="337763a65ff195f06649463b2951abd3b3a7cb97" translate="yes" xml:space="preserve">
          <source>The following is an excerpt from the &lt;a href=&quot;https://www.symantec.com/security_response/writeup.jsp?docid=2006-061211-4111-99&amp;amp;tabid=1&quot;&gt;Js.Yamanner@m&lt;/a&gt; Yahoo! Mail &lt;a href=&quot;http://groovin.net/stuff/yammer.txt&quot;&gt;worm&lt;/a&gt;. It appeared on June 11, 2006 and was the first webmail interface worm:</source>
          <target state="translated">以下摘录自&lt;a href=&quot;https://www.symantec.com/security_response/writeup.jsp?docid=2006-061211-4111-99&amp;amp;tabid=1&quot;&gt;Js.Yamanner@m&lt;/a&gt; Yahoo! 邮件&lt;a href=&quot;http://groovin.net/stuff/yammer.txt&quot;&gt;蠕虫&lt;/a&gt;。它出现在2006年6月11日，并且是第一个Webmail接口蠕虫：</target>
        </trans-unit>
        <trans-unit id="579d8c42dd4ef8c57843a057efd4713ac1241a02" translate="yes" xml:space="preserve">
          <source>The following is only a brief overview summary of the helpers available in Action View. It's recommended that you review the &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionView/Helpers.html&quot;&gt;API Documentation&lt;/a&gt;, which covers all of the helpers in more detail, but this should serve as a good starting point.</source>
          <target state="translated">以下只是Action View中可用的助手的简要概述。建议您阅读&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionView/Helpers.html&quot;&gt;API文档&lt;/a&gt;，其中更详细地介绍了所有帮助程序，但这应该是一个很好的起点。</target>
        </trans-unit>
        <trans-unit id="d28f8549e31b151dd0222afe166ac626a4278627" translate="yes" xml:space="preserve">
          <source>The following line enables YUI compression, and requires the &lt;code&gt;yui-compressor&lt;/code&gt; gem.</source>
          <target state="translated">以下行启用YUI压缩，并需要 &lt;code&gt;yui-compressor&lt;/code&gt; gem。</target>
        </trans-unit>
        <trans-unit id="f47cec262f30e06d8f4686db19c2d636b84a9271" translate="yes" xml:space="preserve">
          <source>The following line invokes &lt;code&gt;uglifier&lt;/code&gt; for JavaScript compression.</source>
          <target state="translated">以下行调用 &lt;code&gt;uglifier&lt;/code&gt; 进行JavaScript压缩。</target>
        </trans-unit>
        <trans-unit id="3a19c4339274251eb0bf0254401868be2ad510d0" translate="yes" xml:space="preserve">
          <source>The following methods are only implemented in &lt;code&gt;active_support/core_ext/date_time/calculations.rb&lt;/code&gt; as they only make sense when used with a &lt;code&gt;DateTime&lt;/code&gt; instance:</source>
          <target state="translated">以下方法仅在 &lt;code&gt;active_support/core_ext/date_time/calculations.rb&lt;/code&gt; 中实现,因为它们仅在与 &lt;code&gt;DateTime&lt;/code&gt; 实例一起使用时才有意义：</target>
        </trans-unit>
        <trans-unit id="f43faaf33bf2c0cdf7480bc0b867a519fa0ab48b" translate="yes" xml:space="preserve">
          <source>The following methods are reimplemented so you do &lt;strong&gt;not&lt;/strong&gt; need to load &lt;code&gt;active_support/core_ext/date/calculations.rb&lt;/code&gt; for these ones:</source>
          <target state="translated">下面的方法是重新实现，这样你就&lt;strong&gt;不会&lt;/strong&gt;需要负载 &lt;code&gt;active_support/core_ext/date/calculations.rb&lt;/code&gt; 这些的：</target>
        </trans-unit>
        <trans-unit id="3a5dee795f797c6e7d2a27bbce6ab149fb9ee6ba" translate="yes" xml:space="preserve">
          <source>The following methods for retrieval and query of a single associated object will be added:</source>
          <target state="translated">将增加以下方法,用于检索和查询单个关联对象。</target>
        </trans-unit>
        <trans-unit id="d5783a97e1eb9d3a76a908a48921fa3c38071460" translate="yes" xml:space="preserve">
          <source>The following methods return a &lt;code&gt;Time&lt;/code&gt; object if possible, otherwise a &lt;code&gt;DateTime&lt;/code&gt;. If set, they honor the user time zone.</source>
          <target state="translated">以下方法在可能的情况下返回 &lt;code&gt;Time&lt;/code&gt; 对象，否则返回 &lt;code&gt;DateTime&lt;/code&gt; 。如果设置，它们将遵守用户时区。</target>
        </trans-unit>
        <trans-unit id="657070cc7bdd9e1b035ac61f00a01849f933d950" translate="yes" xml:space="preserve">
          <source>The following methods skip validations, and will save the object to the database regardless of its validity. They should be used with caution.</source>
          <target state="translated">以下方法跳过了验证,无论对象是否有效,都会将其保存到数据库中。请谨慎使用这些方法。</target>
        </trans-unit>
        <trans-unit id="1f465129a4fb90e4527101bf731f2963373a56d8" translate="yes" xml:space="preserve">
          <source>The following methods trigger callbacks:</source>
          <target state="translated">以下方法会触发回调。</target>
        </trans-unit>
        <trans-unit id="cfbc7fa8f557720dad3b43f60910ef4eb36a6082" translate="yes" xml:space="preserve">
          <source>The following methods trigger validations, and will save the object to the database only if the object is valid:</source>
          <target state="translated">以下方法会触发验证,只有当对象有效时,才会将对象保存到数据库中。</target>
        </trans-unit>
        <trans-unit id="523016b8452201bb1628b70c8c9797a7f03d6744" translate="yes" xml:space="preserve">
          <source>The following methods:</source>
          <target state="translated">以下方法:</target>
        </trans-unit>
        <trans-unit id="fb3f54b9d4027c086c72adc490b0f155c01c54fb" translate="yes" xml:space="preserve">
          <source>The following middlewares, used for session management, are excluded from API apps since they normally don't need sessions. If one of your API clients is a browser, you might want to add one of these back in:</source>
          <target state="translated">以下用于会话管理的中间件被排除在 API 应用程序之外,因为它们通常不需要会话。如果您的 API 客户端之一是浏览器,您可能会想重新添加其中的一个。</target>
        </trans-unit>
        <trans-unit id="36cf22b1fa5b113b06014631879e53072ca8ace1" translate="yes" xml:space="preserve">
          <source>The following migration will remove the table 'horses' and create the table 'apples' on the way up, and the reverse on the way down.</source>
          <target state="translated">下面的迁移将删除表 &quot;马&quot;,并在上行时创建表 &quot;苹果&quot;,下行时则相反。</target>
        </trans-unit>
        <trans-unit id="e4d77afab2cb5c0e79177397fed4c21c74e5e9f3" translate="yes" xml:space="preserve">
          <source>The following options are accepted:</source>
          <target state="translated">接受以下选项:</target>
        </trans-unit>
        <trans-unit id="07868184f0badaae70ea74815fedb13374262579" translate="yes" xml:space="preserve">
          <source>The following sections give the details of each type of association, including the methods that they add and the options that you can use when declaring an association.</source>
          <target state="translated">下面的章节给出了每一种关联类型的细节,包括它们所添加的方法以及在声明关联时可以使用的选项。</target>
        </trans-unit>
        <trans-unit id="2562708af49a0bfce89266564bd6292133c83b57" translate="yes" xml:space="preserve">
          <source>The following sections outline the primary methods provided by the API:</source>
          <target state="translated">以下部分概述了API提供的主要方法。</target>
        </trans-unit>
        <trans-unit id="609de3a69e18bad3684cc06e831d02068915f957" translate="yes" xml:space="preserve">
          <source>The following setup steps are common to both examples:</source>
          <target state="translated">下面的设置步骤对两个例子都是通用的。</target>
        </trans-unit>
        <trans-unit id="68ac9096c207d6e6fc7e824e70e5b3e0bab909e1" translate="yes" xml:space="preserve">
          <source>The following symbols are special:</source>
          <target state="translated">以下符号为特殊符号。</target>
        </trans-unit>
        <trans-unit id="9ff0dc756e7049a9d9d1160dc09667c5d872c2b2" translate="yes" xml:space="preserve">
          <source>The following two forms both upload a file.</source>
          <target state="translated">以下两种形式都是上传文件。</target>
        </trans-unit>
        <trans-unit id="1b73d642411f485e10316d22f8c12e0959b92a7e" translate="yes" xml:space="preserve">
          <source>The following validations are added automatically:</source>
          <target state="translated">以下验证是自动添加的。</target>
        </trans-unit>
        <trans-unit id="392904f5f0a66b4200b7691949066a9831c1859a" translate="yes" xml:space="preserve">
          <source>The following values are considered to be blank in a Rails application:</source>
          <target state="translated">在Rails应用中,以下值被认为是空白。</target>
        </trans-unit>
        <trans-unit id="deee9509446ecf108a516105821dd5478062ac54" translate="yes" xml:space="preserve">
          <source>The foreign key column name on &lt;code&gt;from_table&lt;/code&gt;. Defaults to &lt;code&gt;to_table.singularize + &quot;_id&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;from_table&lt;/code&gt; 上的外键列名称。默认为 &lt;code&gt;to_table.singularize + &quot;_id&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3326729145fe6394d473ee7cb8400c3bea60f441" translate="yes" xml:space="preserve">
          <source>The foreign key will be named after the following pattern: &lt;code&gt;fk_rails_&amp;lt;identifier&amp;gt;&lt;/code&gt;. &lt;code&gt;identifier&lt;/code&gt; is a 10 character long string which is deterministically generated from the &lt;code&gt;from_table&lt;/code&gt; and &lt;code&gt;column&lt;/code&gt;. A custom name can be specified with the &lt;code&gt;:name&lt;/code&gt; option.</source>
          <target state="translated">外键将以以下模式命名： &lt;code&gt;fk_rails_&amp;lt;identifier&amp;gt;&lt;/code&gt; 。 &lt;code&gt;identifier&lt;/code&gt; 是一个10字符长的字符串，它是从 &lt;code&gt;from_table&lt;/code&gt; 和 &lt;code&gt;column&lt;/code&gt; 确定地生成的。可以使用 &lt;code&gt;:name&lt;/code&gt; 选项指定自定义名称。</target>
        </trans-unit>
        <trans-unit id="c57ae9faadcd902410eb3b14af62a22ffbd5d285" translate="yes" xml:space="preserve">
          <source>The form &lt;code&gt;action&lt;/code&gt; is automatically filled with an appropriate value for &lt;code&gt;@article&lt;/code&gt;.</source>
          <target state="translated">表单 &lt;code&gt;action&lt;/code&gt; 会自动为 &lt;code&gt;@article&lt;/code&gt; 填充适当的值。</target>
        </trans-unit>
        <trans-unit id="1e007df2b561afc5d816ad0fcb5f864ca277d8c4" translate="yes" xml:space="preserve">
          <source>The form builder object yielded by &lt;code&gt;form_with&lt;/code&gt; provides numerous helper methods for generating form elements such as text fields, checkboxes, and radio buttons. The first parameter to these methods is always the name of the input. When the form is submitted, the name will be passed along with the form data, and will make its way to the &lt;code&gt;params&lt;/code&gt; in the controller with the value entered by the user for that field. For example, if the form contains &lt;code&gt;&amp;lt;%= form.text_field :query %&amp;gt;&lt;/code&gt;, then you would be able to get the value of this field in the controller with &lt;code&gt;params[:query]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;form_with&lt;/code&gt; 产生的表单构建器对象提供了许多帮助程序方法，用于生成诸如文本字段，复选框和单选按钮之类的表单元素。这些方法的第一个参数始终是输入的名称。提交表单后，该名称将与表单数据一起传递，并使用用户为该字段输入的值进入控制器中的 &lt;code&gt;params&lt;/code&gt; 。例如，如果表单包含 &lt;code&gt;&amp;lt;%= form.text_field :query %&amp;gt;&lt;/code&gt; ，则可以使用 &lt;code&gt;params[:query]&lt;/code&gt; 在控制器中获取此字段的值。</target>
        </trans-unit>
        <trans-unit id="090e93106d4fe15776dd64af77237f6b9a5104b9" translate="yes" xml:space="preserve">
          <source>The form builder used also determines what happens when you do</source>
          <target state="translated">所使用的表单构建器也决定了当你做了</target>
        </trans-unit>
        <trans-unit id="6f232e20bbc8c58f703a1c9e6e79a9addc1e2cf8" translate="yes" xml:space="preserve">
          <source>The form builder used also determines what happens when you do:</source>
          <target state="translated">使用的表单构建器也决定了你做的时候会发生什么。</target>
        </trans-unit>
        <trans-unit id="969e4f9f028abca92b6eaeb2377525e0daf1b47a" translate="yes" xml:space="preserve">
          <source>The form field names are scoped with &lt;code&gt;article[...]&lt;/code&gt;. This means that &lt;code&gt;params[:article]&lt;/code&gt; will be a hash containing all these field's values. You can read more about the significance of input names in chapter &lt;a href=&quot;#understanding-parameter-naming-conventions&quot;&gt;Understanding Parameter Naming Conventions&lt;/a&gt; of this guide.</source>
          <target state="translated">表单字段名称的范围为 &lt;code&gt;article[...]&lt;/code&gt; 。这意味着 &lt;code&gt;params[:article]&lt;/code&gt; 将是一个包含所有这些字段值的哈希值。您可以在本指南的&lt;a href=&quot;#understanding-parameter-naming-conventions&quot;&gt;了解参数命名约定&lt;/a&gt;一章中了解有关输入名称的含义的更多信息。</target>
        </trans-unit>
        <trans-unit id="fa5be3edf2485d340a88e387ea582ad91c46d2ce" translate="yes" xml:space="preserve">
          <source>The form fields are automatically filled with the corresponding values from &lt;code&gt;@article&lt;/code&gt;.</source>
          <target state="translated">表单字段会自动填充 &lt;code&gt;@article&lt;/code&gt; 中的相应值。</target>
        </trans-unit>
        <trans-unit id="60342ada4ced98a39f41de5586ec3ad3944ed28b" translate="yes" xml:space="preserve">
          <source>The form needs to use a different URL in order to go somewhere else. This can be done quite simply with the &lt;code&gt;:url&lt;/code&gt; option of &lt;code&gt;form_with&lt;/code&gt;. Typically in Rails, the action that is used for new form submissions like this is called &quot;create&quot;, and so the form should be pointed to that action.</source>
          <target state="translated">表单需要使用其他URL才能到达其他地方。这可以通过 &lt;code&gt;form_with&lt;/code&gt; 的 &lt;code&gt;:url&lt;/code&gt; 选项非常简单地完成。通常在Rails中，用于这种新表单提交的操作称为&amp;ldquo;创建&amp;rdquo;，因此表单应指向该操作。</target>
        </trans-unit>
        <trans-unit id="db75dbcbdc0e093bbfc719f467a241d7e67a2520" translate="yes" xml:space="preserve">
          <source>The form will be making a &lt;code&gt;POST&lt;/code&gt; request to &lt;code&gt;/articles/:article_id/comments&lt;/code&gt;, which will correspond with the &lt;code&gt;create&lt;/code&gt; action in &lt;code&gt;Blorgh::CommentsController&lt;/code&gt;. This action needs to be created, which can be done by putting the following lines inside the class definition in &lt;code&gt;app/controllers/blorgh/comments_controller.rb&lt;/code&gt;:</source>
          <target state="translated">表单将向 &lt;code&gt;/articles/:article_id/comments&lt;/code&gt; 发出 &lt;code&gt;POST&lt;/code&gt; 请求，该请求将与 &lt;code&gt;Blorgh::CommentsController&lt;/code&gt; 的 &lt;code&gt;create&lt;/code&gt; 动作相对应。需要创建此操作，可以通过 &lt;code&gt;app/controllers/blorgh/comments_controller.rb&lt;/code&gt; 放入app / controllers / blorgh / comments_controller.rb中的类定义中来完成：</target>
        </trans-unit>
        <trans-unit id="7fbb9ae7852d624b58a411bef42e33a47388b020" translate="yes" xml:space="preserve">
          <source>The form's authenticity parameter. Override to provide your own.</source>
          <target state="translated">表格的真实性参数。覆盖提供自己的参数。</target>
        </trans-unit>
        <trans-unit id="3a13d407b622c23af95f052897df47515f94470f" translate="yes" xml:space="preserve">
          <source>The format of a fixture file looks like this:</source>
          <target state="translated">夹具文件的格式是这样的。</target>
        </trans-unit>
        <trans-unit id="2f7cb81c43eb0277bcb09abdbdfa4f95cbea41c6" translate="yes" xml:space="preserve">
          <source>The format of the schema dump generated by Rails is controlled by the &lt;code&gt;config.active_record.schema_format&lt;/code&gt; setting in &lt;code&gt;config/application.rb&lt;/code&gt;. By default, the format is &lt;code&gt;:ruby&lt;/code&gt;, but can also be set to &lt;code&gt;:sql&lt;/code&gt;.</source>
          <target state="translated">Rails生成的模式转储的格式由 &lt;code&gt;config/application.rb&lt;/code&gt; 中的 &lt;code&gt;config.active_record.schema_format&lt;/code&gt; 设置控制。默认情况下，格式为 &lt;code&gt;:ruby&lt;/code&gt; ，但也可以设置为 &lt;code&gt;:sql&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b2bcbf7d68f15e27fc0dd857f9971c15c0d46bd3" translate="yes" xml:space="preserve">
          <source>The former is the main one. The latter is there mostly for backwards compatibility reasons, in case the application has something in &lt;code&gt;config.autoload_once_paths&lt;/code&gt; (this is discouraged nowadays).</source>
          <target state="translated">前者是主要的。后者主要是出于向后兼容性的原因，以防应用程序在 &lt;code&gt;config.autoload_once_paths&lt;/code&gt; 中包含某些内容（如今不建议使用）。</target>
        </trans-unit>
        <trans-unit id="82fadfffe8a017d8cc4cbac60f0f81c907522668" translate="yes" xml:space="preserve">
          <source>The full list of options for the plugin generator may be seen by typing:</source>
          <target state="translated">完整的插件生成器选项列表可以通过键入来查看。</target>
        </trans-unit>
        <trans-unit id="d4bde2b1b890d3a726aec51e0fcf264cdac863fa" translate="yes" xml:space="preserve">
          <source>The full request object is available via the request accessor and is primarily used to query for HTTP headers:</source>
          <target state="translated">通过请求访问器可以获得完整的请求对象,主要用于查询HTTP头信息。</target>
        </trans-unit>
        <trans-unit id="15558a932ce7d5ec8c2377322dcd833861fe3a97" translate="yes" xml:space="preserve">
          <source>The full set of methods that can be used in this block are as follows:</source>
          <target state="translated">本块可使用的全部方法如下。</target>
        </trans-unit>
        <trans-unit id="6c14ca350035676710a670dd045416bbcfb75b88" translate="yes" xml:space="preserve">
          <source>The gateway through which you can drill down into various details of each error.</source>
          <target state="translated">通过该网关,您可以深入了解每个错误的各种细节。</target>
        </trans-unit>
        <trans-unit id="46bd57d06a4ef9cdd161560d193f0e40b2eb8282" translate="yes" xml:space="preserve">
          <source>The general layout of a Rails application.</source>
          <target state="translated">Rails应用的总体布局。</target>
        </trans-unit>
        <trans-unit id="e7eeed51b86202389059cb757e688e04f990154f" translate="yes" xml:space="preserve">
          <source>The generated ID for a given label is constant, so we can discover any fixture's ID without loading anything, as long as we know the label.</source>
          <target state="translated">给定标签的生成ID是恒定的,所以只要我们知道标签,就可以在不加载任何东西的情况下发现任何灯具的ID。</target>
        </trans-unit>
        <trans-unit id="c89bd0c48d5da0f02788cadbf5279ad7b0b6ae74" translate="yes" xml:space="preserve">
          <source>The generated attributes are escaped by default. This can be disabled using &lt;code&gt;escape_attributes&lt;/code&gt;.</source>
          <target state="translated">默认情况下，将对生成的属性进行转义。可以使用 &lt;code&gt;escape_attributes&lt;/code&gt; 禁用它。</target>
        </trans-unit>
        <trans-unit id="645e01b963a2d6bedc01988adc919326a38cbb71" translate="yes" xml:space="preserve">
          <source>The generated model inherits from &lt;code&gt;ApplicationMailer&lt;/code&gt; which in turn inherits from &lt;code&gt;ActionMailer::Base&lt;/code&gt;. A mailer model defines methods used to generate an email message. In these methods, you can set up variables to be used in the mailer views, options on the mail itself such as the &lt;code&gt;:from&lt;/code&gt; address, and attachments.</source>
          <target state="translated">生成的模型从 &lt;code&gt;ApplicationMailer&lt;/code&gt; 继承，而ApplicationMailer继而从 &lt;code&gt;ActionMailer::Base&lt;/code&gt; 继承。邮件程序模型定义用于生成电子邮件的方法。在这些方法中，您可以设置要在邮件视图中使用的变量，邮件本身的选项，例如 &lt;code&gt;:from&lt;/code&gt; 地址和附件。</target>
        </trans-unit>
        <trans-unit id="83ab849c0e0913321228afc5541b5041a5ce971d" translate="yes" xml:space="preserve">
          <source>The generated model inherits from &lt;code&gt;ApplicationMailer&lt;/code&gt; which in turn inherits from &lt;code&gt;ActionMailer::Base&lt;/code&gt;. A mailer model defines methods used to generate an email message. In these methods, you can setup variables to be used in the mailer views, options on the mail itself such as the &lt;code&gt;:from&lt;/code&gt; address, and attachments.</source>
          <target state="translated">生成的模型继承自 &lt;code&gt;ApplicationMailer&lt;/code&gt; ，后者又继承自 &lt;code&gt;ActionMailer::Base&lt;/code&gt; 。邮件程序模型定义用于生成电子邮件的方法。在这些方法中，您可以设置要在邮件视图中使用的变量，邮件本身的选项，例如 &lt;code&gt;:from&lt;/code&gt; 地址和附件。</target>
        </trans-unit>
        <trans-unit id="321061befaaa7def4b485d8f5cfddc8d61d5b9d2" translate="yes" xml:space="preserve">
          <source>The generated model will automatically inherit from &lt;code&gt;AnimalsRecord&lt;/code&gt;.</source>
          <target state="translated">生成的模型将自动从 &lt;code&gt;AnimalsRecord&lt;/code&gt; 继承。</target>
        </trans-unit>
        <trans-unit id="9642127f67417f40c4b17b7ca6fba9837a5b3709" translate="yes" xml:space="preserve">
          <source>The generated model will look like this:</source>
          <target state="translated">生成的模型会是这样的。</target>
        </trans-unit>
        <trans-unit id="8ebb94072c2ba22e483813ad1a85b01320851bc6" translate="yes" xml:space="preserve">
          <source>The generation of the reader instance method can be prevented by setting &lt;code&gt;:instance_reader&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; and the generation of the writer instance method can be prevented by setting &lt;code&gt;:instance_writer&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt;. Generation of both methods can be prevented by setting &lt;code&gt;:instance_accessor&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt;. In all cases, the value must be exactly &lt;code&gt;false&lt;/code&gt; and not any false value.</source>
          <target state="translated">读取器的实例方法的生成可以通过设置能够防止 &lt;code&gt;:instance_reader&lt;/code&gt; 到 &lt;code&gt;false&lt;/code&gt; ，并且可以通过设置能够防止写入器的实例方法的产生 &lt;code&gt;:instance_writer&lt;/code&gt; 到 &lt;code&gt;false&lt;/code&gt; 。可以通过将 &lt;code&gt;:instance_accessor&lt;/code&gt; 设置为 &lt;code&gt;false&lt;/code&gt; 来防止两种方法的生成。在所有情况下，该值都必须完全为 &lt;code&gt;false&lt;/code&gt; 而不是任何假值。</target>
        </trans-unit>
        <trans-unit id="d4bf2ad59eb23553637bb6ad74e918f26165d9a9" translate="yes" xml:space="preserve">
          <source>The generation of the reader instance method can be prevented by setting the option &lt;code&gt;:instance_reader&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">可以通过将选项 &lt;code&gt;:instance_reader&lt;/code&gt; 设置为 &lt;code&gt;false&lt;/code&gt; 来防止生成读取器实例方法。</target>
        </trans-unit>
        <trans-unit id="96923220f999eee1905ec339692e505269b44e49" translate="yes" xml:space="preserve">
          <source>The generation of the writer instance method can be prevented by setting the option &lt;code&gt;:instance_writer&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">通过将选项 &lt;code&gt;:instance_writer&lt;/code&gt; 设置为 &lt;code&gt;false&lt;/code&gt; 可以防止writer实例方法的生成。</target>
        </trans-unit>
        <trans-unit id="03b7c6a99d34c4aaf65fc166f48dc469d58dfbbc" translate="yes" xml:space="preserve">
          <source>The generator checks that there exist the directories for models, controllers, helpers, layouts, functional and unit tests, stylesheets, creates the views, controller, model and database migration for HighScore (creating the &lt;code&gt;high_scores&lt;/code&gt; table and fields), takes care of the route for the &lt;strong&gt;resource&lt;/strong&gt;, and new tests for everything.</source>
          <target state="translated">生成器检查是否存在模型，控制器，助手，布局，功能和单元测试，样式表的目录，为 &lt;code&gt;high_scores&lt;/code&gt; 创建视图，控制器，模型和数据库迁移（创建high_scores表和字段），并处理路由对于&lt;strong&gt;资源&lt;/strong&gt;，对于一切新的测试。</target>
        </trans-unit>
        <trans-unit id="7b39f749f99948f5914a83edc800a368fad145a9" translate="yes" xml:space="preserve">
          <source>The generators you can use to create them.</source>
          <target state="translated">你可以使用的生成器来创建它们。</target>
        </trans-unit>
        <trans-unit id="a84866369ad05153b18c2d07d9dde0bdd61861cb" translate="yes" xml:space="preserve">
          <source>The given arguments may also be specified as matcher procs that return a boolean value indicating whether a job's attribute meets certain criteria.</source>
          <target state="translated">给定的参数也可以指定为匹配器procs,返回一个布尔值,表示一个作业的属性是否符合某些标准。</target>
        </trans-unit>
        <trans-unit id="44697cfaaac008cfcbe2fe60f5a95303683ec71b" translate="yes" xml:space="preserve">
          <source>The given range must be fully bounded, with both start and end.</source>
          <target state="translated">给定的范围必须是完全有边界的,有开始和结束。</target>
        </trans-unit>
        <trans-unit id="4a11e822e465e85b59074ad8222bc49591cdfb25" translate="yes" xml:space="preserve">
          <source>The goals of testing your mailer classes are to ensure that:</source>
          <target state="translated">测试你的邮件类的目标是确保。</target>
        </trans-unit>
        <trans-unit id="362978286aa17bd104be42963df61dd594f4d276" translate="yes" xml:space="preserve">
          <source>The guides for earlier releases: &lt;a href=&quot;https://guides.rubyonrails.org/v5.2/&quot;&gt;Rails 5.2&lt;/a&gt;, &lt;a href=&quot;https://guides.rubyonrails.org/v5.1/&quot;&gt;Rails 5.1&lt;/a&gt;, &lt;a href=&quot;https://guides.rubyonrails.org/v5.0/&quot;&gt;Rails 5.0&lt;/a&gt;, &lt;a href=&quot;https://guides.rubyonrails.org/v4.2/&quot;&gt;Rails 4.2&lt;/a&gt;, &lt;a href=&quot;https://guides.rubyonrails.org/v4.1/&quot;&gt;Rails 4.1&lt;/a&gt;, &lt;a href=&quot;https://guides.rubyonrails.org/v4.0/&quot;&gt;Rails 4.0&lt;/a&gt;, &lt;a href=&quot;https://guides.rubyonrails.org/v3.2/&quot;&gt;Rails 3.2&lt;/a&gt;, &lt;a href=&quot;https://guides.rubyonrails.org/v3.1/&quot;&gt;Rails 3.1&lt;/a&gt;, &lt;a href=&quot;https://guides.rubyonrails.org/v3.0/&quot;&gt;Rails 3.0&lt;/a&gt;, and &lt;a href=&quot;https://guides.rubyonrails.org/v2.3/&quot;&gt;Rails 2.3&lt;/a&gt;.</source>
          <target state="translated">较早版本的指南：&lt;a href=&quot;https://guides.rubyonrails.org/v5.2/&quot;&gt;Rails 5.2&lt;/a&gt;，&lt;a href=&quot;https://guides.rubyonrails.org/v5.1/&quot;&gt;Rails 5.1&lt;/a&gt;，&lt;a href=&quot;https://guides.rubyonrails.org/v5.0/&quot;&gt;Rails 5.0&lt;/a&gt;，&lt;a href=&quot;https://guides.rubyonrails.org/v4.2/&quot;&gt;Rails 4.2&lt;/a&gt;，&lt;a href=&quot;https://guides.rubyonrails.org/v4.1/&quot;&gt;Rails 4.1&lt;/a&gt;，&lt;a href=&quot;https://guides.rubyonrails.org/v4.0/&quot;&gt;Rails 4.0&lt;/a&gt;，&lt;a href=&quot;https://guides.rubyonrails.org/v3.2/&quot;&gt;Rails 3.2&lt;/a&gt;，&lt;a href=&quot;https://guides.rubyonrails.org/v3.1/&quot;&gt;Rails 3.1&lt;/a&gt;，&lt;a href=&quot;https://guides.rubyonrails.org/v3.0/&quot;&gt;Rails 3.0&lt;/a&gt;和&lt;a href=&quot;https://guides.rubyonrails.org/v2.3/&quot;&gt;Rails 2.3&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b2b614143472cc56211bf69dd5927b0911062968" translate="yes" xml:space="preserve">
          <source>The guides for earlier releases: &lt;a href=&quot;https://guides.rubyonrails.org/v6.0/&quot;&gt;Rails 6.0&lt;/a&gt;, &lt;a href=&quot;https://guides.rubyonrails.org/v5.2/&quot;&gt;Rails 5.2&lt;/a&gt;, &lt;a href=&quot;https://guides.rubyonrails.org/v5.1/&quot;&gt;Rails 5.1&lt;/a&gt;, &lt;a href=&quot;https://guides.rubyonrails.org/v5.0/&quot;&gt;Rails 5.0&lt;/a&gt;, &lt;a href=&quot;https://guides.rubyonrails.org/v4.2/&quot;&gt;Rails 4.2&lt;/a&gt;, &lt;a href=&quot;https://guides.rubyonrails.org/v4.1/&quot;&gt;Rails 4.1&lt;/a&gt;, &lt;a href=&quot;https://guides.rubyonrails.org/v4.0/&quot;&gt;Rails 4.0&lt;/a&gt;, &lt;a href=&quot;https://guides.rubyonrails.org/v3.2/&quot;&gt;Rails 3.2&lt;/a&gt;, &lt;a href=&quot;https://guides.rubyonrails.org/v3.1/&quot;&gt;Rails 3.1&lt;/a&gt;, &lt;a href=&quot;https://guides.rubyonrails.org/v3.0/&quot;&gt;Rails 3.0&lt;/a&gt;, and &lt;a href=&quot;https://guides.rubyonrails.org/v2.3/&quot;&gt;Rails 2.3&lt;/a&gt;.</source>
          <target state="translated">较早版本的指南：&lt;a href=&quot;https://guides.rubyonrails.org/v6.0/&quot;&gt;Rails 6.0&lt;/a&gt;，&lt;a href=&quot;https://guides.rubyonrails.org/v5.2/&quot;&gt;Rails 5.2&lt;/a&gt;，&lt;a href=&quot;https://guides.rubyonrails.org/v5.1/&quot;&gt;Rails 5.1&lt;/a&gt;，&lt;a href=&quot;https://guides.rubyonrails.org/v5.0/&quot;&gt;Rails 5.0&lt;/a&gt;，&lt;a href=&quot;https://guides.rubyonrails.org/v4.2/&quot;&gt;Rails 4.2&lt;/a&gt;，&lt;a href=&quot;https://guides.rubyonrails.org/v4.1/&quot;&gt;Rails 4.1&lt;/a&gt;，&lt;a href=&quot;https://guides.rubyonrails.org/v4.0/&quot;&gt;Rails 4.0&lt;/a&gt;，&lt;a href=&quot;https://guides.rubyonrails.org/v3.2/&quot;&gt;Rails 3.2&lt;/a&gt;，&lt;a href=&quot;https://guides.rubyonrails.org/v3.1/&quot;&gt;Rails 3.1&lt;/a&gt;，&lt;a href=&quot;https://guides.rubyonrails.org/v3.0/&quot;&gt;Rails 3.0&lt;/a&gt;和&lt;a href=&quot;https://guides.rubyonrails.org/v2.3/&quot;&gt;Rails 2.3&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0769462d4182a8d7e15fc285a42e4195eb77d38c" translate="yes" xml:space="preserve">
          <source>The hash keys are the attribute names, and the hash values are the original attribute values in the database (as opposed to the in-memory values about to be saved).</source>
          <target state="translated">哈希键是属性名,哈希值是数据库中的原始属性值(而不是即将保存的内存值)。</target>
        </trans-unit>
        <trans-unit id="058d050ee7d540ed9e563b384b80cef28a9d82ce" translate="yes" xml:space="preserve">
          <source>The hash passed to the mail method allows you to specify any header that a &lt;code&gt;Mail::Message&lt;/code&gt; will accept (any valid email header including optional fields).</source>
          <target state="translated">传递给mail方法的哈希值使您可以指定 &lt;code&gt;Mail::Message&lt;/code&gt; 将接受的任何标头（任何有效的电子邮件标头，包括可选字段）。</target>
        </trans-unit>
        <trans-unit id="6f5c290181dabdf6559a851bcac9bcc0636e995f" translate="yes" xml:space="preserve">
          <source>The helper gets the name of the favicon file as first argument, which defaults to &amp;ldquo;favicon.ico&amp;rdquo;, and also supports &lt;code&gt;:rel&lt;/code&gt; and &lt;code&gt;:type&lt;/code&gt; options to override their defaults, &amp;ldquo;shortcut icon&amp;rdquo; and &amp;ldquo;image/x-icon&amp;rdquo; respectively:</source>
          <target state="translated">帮助程序将favicon文件的名称作为第一个参数，默认为&amp;ldquo; favicon.ico&amp;rdquo;，并且还支持 &lt;code&gt;:rel&lt;/code&gt; 和 &lt;code&gt;:type&lt;/code&gt; 选项以覆盖其默认设置，分别是&amp;ldquo;快捷方式图标&amp;rdquo;和&amp;ldquo; image / x-icon&amp;rdquo;：</target>
        </trans-unit>
        <trans-unit id="c8f3b49cd9e3cb6be9a8ff2c3fb102ef6cfdd129" translate="yes" xml:space="preserve">
          <source>The helper inside &lt;code&gt;app/helpers/blorgh/articles_helper.rb&lt;/code&gt; is also namespaced:</source>
          <target state="translated">助手里面 &lt;code&gt;app/helpers/blorgh/articles_helper.rb&lt;/code&gt; 也被命名空间：</target>
        </trans-unit>
        <trans-unit id="3b93bd5de48450a8776f0c3f464e327c151c1f12" translate="yes" xml:space="preserve">
          <source>The helper method &lt;code&gt;full_messages&lt;/code&gt; uses &lt;code&gt;humanize&lt;/code&gt; as a fallback to include attribute names:</source>
          <target state="translated">辅助方法 &lt;code&gt;full_messages&lt;/code&gt; 使用 &lt;code&gt;humanize&lt;/code&gt; 作为后备，以包括属性名称：</target>
        </trans-unit>
        <trans-unit id="c03db03c2478cc4beefab4ef9e28af6f4d551a14" translate="yes" xml:space="preserve">
          <source>The helper methods called on the form builder are identical to the model object helpers except that it is not necessary to specify which object is being edited since this is already managed by the form builder.</source>
          <target state="translated">在表单构建器上调用的帮助方法与模型对象帮助方法相同,只是不需要指定正在编辑的对象,因为这已经由表单构建器管理。</target>
        </trans-unit>
        <trans-unit id="48e6e57e3a5816d496cf9346b7b10113bd662a20" translate="yes" xml:space="preserve">
          <source>The hooks inside the Rails framework for instrumentation.</source>
          <target state="translated">Rails框架内部的钩子,用于工具化。</target>
        </trans-unit>
        <trans-unit id="4b21621570d8c2b68888621ecdd2bf376d3c4875" translate="yes" xml:space="preserve">
          <source>The hooks lookup is similar as above:</source>
          <target state="translated">钩子的查找与上面类似。</target>
        </trans-unit>
        <trans-unit id="4350fdd5e24421c545843a276f1aecf4174489c6" translate="yes" xml:space="preserve">
          <source>The horizontal sharding API also supports read replicas. You can swap the role and the shard with the &lt;code&gt;connected_to&lt;/code&gt; API.</source>
          <target state="translated">水平分片API还支持只读副本。您可以使用 &lt;code&gt;connected_to&lt;/code&gt; API交换角色和分片。</target>
        </trans-unit>
        <trans-unit id="7943c0c7de50364f1568dbf6a3844f8f66f52bc0" translate="yes" xml:space="preserve">
          <source>The host of a request is checked against the &lt;code&gt;hosts&lt;/code&gt; entries with the case operator (&lt;code&gt;#===&lt;/code&gt;), which lets &lt;code&gt;hosts&lt;/code&gt; support entries of type &lt;code&gt;Regexp&lt;/code&gt;, &lt;code&gt;Proc&lt;/code&gt; and &lt;code&gt;IPAddr&lt;/code&gt; to name a few. Here is an example with a regexp.</source>
          <target state="translated">使用大小写运算符（ &lt;code&gt;#===&lt;/code&gt; ）根据 &lt;code&gt;hosts&lt;/code&gt; 条目检查请求的主机，该操作符使 &lt;code&gt;hosts&lt;/code&gt; 可以支持 &lt;code&gt;Regexp&lt;/code&gt; ， &lt;code&gt;Proc&lt;/code&gt; 和 &lt;code&gt;IPAddr&lt;/code&gt; 类型的条目。这是带有正则表达式的示例。</target>
        </trans-unit>
        <trans-unit id="465f83962e2239cb19550b0b54f391531039b74a" translate="yes" xml:space="preserve">
          <source>The hostname used for this request.</source>
          <target state="translated">本次请求使用的主机名。</target>
        </trans-unit>
        <trans-unit id="df619d8c4ceafae7f4ef07c3343b96da7296ae57" translate="yes" xml:space="preserve">
          <source>The hostname used in the last request.</source>
          <target state="translated">上次请求中使用的主机名。</target>
        </trans-unit>
        <trans-unit id="d729a8f7d6c2e7248811f11389969b4f75002255" translate="yes" xml:space="preserve">
          <source>The hostname's first &lt;code&gt;n&lt;/code&gt; segments, starting from the right (the TLD).</source>
          <target state="translated">主机名的前 &lt;code&gt;n&lt;/code&gt; 个分段，从右侧（TLD）开始。</target>
        </trans-unit>
        <trans-unit id="247a4e650cdfc512efea9563eb1b2a0a9fceb6a4" translate="yes" xml:space="preserve">
          <source>The i18n library takes a &lt;strong&gt;pragmatic approach&lt;/strong&gt; to locale keys (after &lt;a href=&quot;https://groups.google.com/forum/#!topic/rails-i18n/FN7eLH2-lHA&quot;&gt;some discussion&lt;/a&gt;), including only the &lt;em&gt;locale&lt;/em&gt; (&quot;language&quot;) part, like &lt;code&gt;:en&lt;/code&gt;, &lt;code&gt;:pl&lt;/code&gt;, not the &lt;em&gt;region&lt;/em&gt; part, like &lt;code&gt;:&quot;en-US&quot;&lt;/code&gt; or &lt;code&gt;:&quot;en-GB&quot;&lt;/code&gt;, which are traditionally used for separating &quot;languages&quot; and &quot;regional setting&quot; or &quot;dialects&quot;. Many international applications use only the &quot;language&quot; element of a locale such as &lt;code&gt;:cs&lt;/code&gt;, &lt;code&gt;:th&lt;/code&gt;, or &lt;code&gt;:es&lt;/code&gt; (for Czech, Thai, and Spanish). However, there are also regional differences within different language groups that may be important. For instance, in the &lt;code&gt;:&quot;en-US&quot;&lt;/code&gt; locale you would have $ as a currency symbol, while in &lt;code&gt;:&quot;en-GB&quot;&lt;/code&gt;, you would have &amp;pound;. Nothing stops you from separating regional and other settings in this way: you just have to provide full &quot;English - United Kingdom&quot; locale in a &lt;code&gt;:&quot;en-GB&quot;&lt;/code&gt; dictionary.</source>
          <target state="translated">i18n库采用&lt;strong&gt;务实的方法&lt;/strong&gt;来处理区域设置键（经过&lt;a href=&quot;https://groups.google.com/forum/#!topic/rails-i18n/FN7eLH2-lHA&quot;&gt;一番讨论&lt;/a&gt;），仅包括&lt;em&gt;区域设置&lt;/em&gt;（&amp;ldquo;语言&amp;rdquo;）部分，例如 &lt;code&gt;:en&lt;/code&gt; ， &lt;code&gt;:pl&lt;/code&gt; ，而不包括&lt;em&gt;区域&lt;/em&gt;部分，例如 &lt;code&gt;:&quot;en-US&quot;&lt;/code&gt; 或 &lt;code&gt;:&quot;en-GB&quot;&lt;/code&gt; ，传统上用于分隔&amp;ldquo;语言&amp;rdquo;和&amp;ldquo;区域设置&amp;rdquo;或&amp;ldquo;方言&amp;rdquo;。许多国际应用程序仅使用语言环境的&amp;ldquo;语言&amp;rdquo;元素，例如 &lt;code&gt;:cs&lt;/code&gt; ， &lt;code&gt;:th&lt;/code&gt; 或 &lt;code&gt;:es&lt;/code&gt; （对于捷克语，泰语和西班牙语）。但是，在不同语言组中也可能存在重要的地区差异。例如，在 &lt;code&gt;:&quot;en-US&quot;&lt;/code&gt; 语言环境中，您将$作为货币符号，而在 &lt;code&gt;:&quot;en-GB&quot;&lt;/code&gt; ，您将具有&amp;pound;。没有什么能阻止您以这种方式分隔区域设置和其他设置：您只需要在 &lt;code&gt;:&quot;en-GB&quot;&lt;/code&gt; 词典中提供完整的&amp;ldquo;英语-英国&amp;rdquo;语言环境即可。</target>
        </trans-unit>
        <trans-unit id="42fa67d833d76b1422c347fe803ccf6a40acbd46" translate="yes" xml:space="preserve">
          <source>The i18n library takes a &lt;strong&gt;pragmatic approach&lt;/strong&gt; to locale keys (after &lt;a href=&quot;https://groups.google.com/forum/#!topic/rails-i18n/FN7eLH2-lHA&quot;&gt;some discussion&lt;/a&gt;), including only the &lt;em&gt;locale&lt;/em&gt; (&quot;language&quot;) part, like &lt;code&gt;:en&lt;/code&gt;, &lt;code&gt;:pl&lt;/code&gt;, not the &lt;em&gt;region&lt;/em&gt; part, like &lt;code&gt;:en-US&lt;/code&gt; or &lt;code&gt;:en-GB&lt;/code&gt;, which are traditionally used for separating &quot;languages&quot; and &quot;regional setting&quot; or &quot;dialects&quot;. Many international applications use only the &quot;language&quot; element of a locale such as &lt;code&gt;:cs&lt;/code&gt;, &lt;code&gt;:th&lt;/code&gt;, or &lt;code&gt;:es&lt;/code&gt; (for Czech, Thai, and Spanish). However, there are also regional differences within different language groups that may be important. For instance, in the &lt;code&gt;:en-US&lt;/code&gt; locale you would have $ as a currency symbol, while in &lt;code&gt;:en-GB&lt;/code&gt;, you would have &amp;pound;. Nothing stops you from separating regional and other settings in this way: you just have to provide full &quot;English - United Kingdom&quot; locale in a &lt;code&gt;:en-GB&lt;/code&gt; dictionary.</source>
          <target state="translated">i18n库采用&lt;strong&gt;务实的方法&lt;/strong&gt;来处理区域设置键（经过&lt;a href=&quot;https://groups.google.com/forum/#!topic/rails-i18n/FN7eLH2-lHA&quot;&gt;一番讨论&lt;/a&gt;），仅包括&lt;em&gt;区域设置&lt;/em&gt;（&amp;ldquo;语言&amp;rdquo;）部分，如 &lt;code&gt;:en&lt;/code&gt; ， &lt;code&gt;:pl&lt;/code&gt; ，而不包括&lt;em&gt;区域&lt;/em&gt;部分，如 &lt;code&gt;:en-US&lt;/code&gt; 或 &lt;code&gt;:en-GB&lt;/code&gt; 。传统上用于分隔&amp;ldquo;语言&amp;rdquo;和&amp;ldquo;区域设置&amp;rdquo;或&amp;ldquo;方言&amp;rdquo;。许多国际应用程序仅使用语言环境的&amp;ldquo;语言&amp;rdquo;元素，例如 &lt;code&gt;:cs&lt;/code&gt; ， &lt;code&gt;:th&lt;/code&gt; 或 &lt;code&gt;:es&lt;/code&gt; （对于捷克语，泰语和西班牙语）。但是，在不同语言组中也可能存在重要的地区差异。例如，在 &lt;code&gt;:en-US&lt;/code&gt; 语言环境中，您将$作为货币符号，而在 &lt;code&gt;:en-GB&lt;/code&gt; 中，您将具有&amp;pound;。没有什么能阻止您以这种方式分隔区域设置和其他设置：您只需要在 &lt;code&gt;:en-GB&lt;/code&gt; 词典中提供完整的&amp;ldquo;英语-英国&amp;rdquo;语言环境即可。</target>
        </trans-unit>
        <trans-unit id="7f53afb305af92309a3fdf213ca6a51b59f8138a" translate="yes" xml:space="preserve">
          <source>The idea of a parent namespace is at the core of the autoloading algorithms and helps explain and understand their motivation intuitively, but as you see that metaphor leaks easily. Given an edge case to reason about, take always into account that by &quot;parent namespace&quot; the guide means exactly that specific string derivation.</source>
          <target state="translated">父名空间的概念是自动加载算法的核心,有助于直观地解释和理解其动机,但正如你所看到的那样,这种隐喻很容易泄露。给定一个边缘案例进行推理,要始终考虑到指南中所说的 &quot;父命名空间 &quot;正是指那个特定的字符串推导。</target>
        </trans-unit>
        <trans-unit id="3cd13b5796c3fc5827aff4691f7e2ec42bfb7375" translate="yes" xml:space="preserve">
          <source>The idea would be to use &lt;code&gt;$PAYMENT_GATEWAY&lt;/code&gt; in the code, and let the initializer set that to the actual implementation depending on the environment.</source>
          <target state="translated">想法是在代码中使用 &lt;code&gt;$PAYMENT_GATEWAY&lt;/code&gt; ，然后让初始化程序根据环境将其设置为实际的实现。</target>
        </trans-unit>
        <trans-unit id="5f19b540681118fdd893c06bdeb7c6925c5febfb" translate="yes" xml:space="preserve">
          <source>The immutable requirement is enforced by Active Record by freezing any object assigned as a value object. Attempting to change it afterwards will result in a &lt;code&gt;RuntimeError&lt;/code&gt;.</source>
          <target state="translated">Active Record通过冻结分配为值对象的任何对象来强制执行不可变要求。之后尝试更改它会导致 &lt;code&gt;RuntimeError&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="54381883e6c09b4dc43d4ac46bee21b9cc5395a7" translate="yes" xml:space="preserve">
          <source>The implicit block given to &lt;code&gt;link_to_unless_current&lt;/code&gt; is evaluated if the current action is the action given. So, if we had a comments page and wanted to render a &amp;ldquo;Go Back&amp;rdquo; link instead of a link to the comments page, we could do something like this&amp;hellip;</source>
          <target state="translated">如果当前动作是给定的动作，则会评估给定 &lt;code&gt;link_to_unless_current&lt;/code&gt; 的隐式块。因此，如果我们有一个评论页面，并且想要呈现&amp;ldquo;返回&amp;rdquo;链接而不是指向评论页面的链接，我们可以做这样的事情&amp;hellip;&amp;hellip;</target>
        </trans-unit>
        <trans-unit id="ae13bd63f4cdb460db67da0c75a77a0f55f7ea5c" translate="yes" xml:space="preserve">
          <source>The inbound emails are turned into &lt;code&gt;InboundEmail&lt;/code&gt; records using Active Record and feature lifecycle tracking, storage of the original email on cloud storage via Active Storage, and responsible data handling with on-by-default incineration.</source>
          <target state="translated">使用Active Record和功能生命周期跟踪将入站电子邮件转换为 &lt;code&gt;InboundEmail&lt;/code&gt; 记录，通过Active Storage将原始电子邮件存储在云存储上，并通过默认焚化进行负责的数据处理。</target>
        </trans-unit>
        <trans-unit id="869236c95820445e727ad51587da6b23b472304d" translate="yes" xml:space="preserve">
          <source>The index view (&lt;code&gt;app/views/users/index.html.erb&lt;/code&gt;) contains:</source>
          <target state="translated">索引视图（ &lt;code&gt;app/views/users/index.html.erb&lt;/code&gt; ）包含：</target>
        </trans-unit>
        <trans-unit id="b32f9511f66640e563df5e34e2c7c0a6fab3ddf3" translate="yes" xml:space="preserve">
          <source>The index will be named after the table and the column name(s), unless you pass &lt;code&gt;:name&lt;/code&gt; as an option.</source>
          <target state="translated">索引将以表和列名命名，除非您通过 &lt;code&gt;:name&lt;/code&gt; 作为选项。</target>
        </trans-unit>
        <trans-unit id="648e623dacab4b9af4b014df64075bd0547875ce" translate="yes" xml:space="preserve">
          <source>The initializer wants to create a &lt;code&gt;BellX1::FlightModel&lt;/code&gt; and nesting has &lt;code&gt;BellX1&lt;/code&gt;, that looks good. But if the default flight model is loaded and the one for the Bell-X1 is not, the interpreter is able to resolve the top-level &lt;code&gt;FlightModel&lt;/code&gt; and autoloading is thus not triggered for &lt;code&gt;BellX1::FlightModel&lt;/code&gt;.</source>
          <target state="translated">初始化程序要创建一个 &lt;code&gt;BellX1::FlightModel&lt;/code&gt; 并且嵌套具有 &lt;code&gt;BellX1&lt;/code&gt; ，看起来不错。但是，如果加载了默认的飞行模型，但没有加载Bell-X1的模型，则解释器能够解析顶级 &lt;code&gt;FlightModel&lt;/code&gt; ，因此不会为 &lt;code&gt;BellX1::FlightModel&lt;/code&gt; 触发自动加载。</target>
        </trans-unit>
        <trans-unit id="7c80d611760f565bf27d46366137ae2e4fd9731f" translate="yes" xml:space="preserve">
          <source>The instrumentation API provided by Active Support allows developers to provide hooks which other developers may hook into. There are several of these within the &lt;a href=&quot;#rails-framework-hooks&quot;&gt;Rails framework&lt;/a&gt;. With this API, developers can choose to be notified when certain events occur inside their application or another piece of Ruby code.</source>
          <target state="translated">Active Support提供的工具API允许开发人员提供其他开发人员可以挂钩的挂钩。在&lt;a href=&quot;#rails-framework-hooks&quot;&gt;Rails框架中&lt;/a&gt;有几种。使用此API，开发人员可以选择在其应用程序或另一段Ruby代码内部发生某些事件时得到通知。</target>
        </trans-unit>
        <trans-unit id="44b71bf98dd0cdf4cb43c535aaee7d46af03287d" translate="yes" xml:space="preserve">
          <source>The intended use case for this method is to escape JSON strings before including them inside a script tag to avoid XSS vulnerability:</source>
          <target state="translated">该方法的预期用例是在将JSON字符串包含在脚本标签中之前对其进行转义,以避免XSS漏洞。</target>
        </trans-unit>
        <trans-unit id="79f2c35a7b9a90149c8abcd1a54d9b8fc7aa6157" translate="yes" xml:space="preserve">
          <source>The interaction &lt;em&gt;changes the state&lt;/em&gt; of the resource in a way that the user would perceive (e.g., a subscription to a service), or</source>
          <target state="translated">交互以用户会感知的方式（例如，对服务的订阅）&lt;em&gt;更改&lt;/em&gt;资源&lt;em&gt;状态&lt;/em&gt;，或者</target>
        </trans-unit>
        <trans-unit id="a5762c80b87c2c4c3a9e18dfd534cadedd2d6b35" translate="yes" xml:space="preserve">
          <source>The interaction is more &lt;em&gt;like a question&lt;/em&gt; (i.e., it is a safe operation such as a query, read operation, or lookup).</source>
          <target state="translated">交互更像&lt;em&gt;是一个问题&lt;/em&gt;（即，它是一种安全的操作，例如查询，读取操作或查找）。</target>
        </trans-unit>
        <trans-unit id="7962fec553e1f444a5bd713ae1675baca557a15e" translate="yes" xml:space="preserve">
          <source>The interaction is more &lt;em&gt;like an order&lt;/em&gt;, or</source>
          <target state="translated">互动&lt;em&gt;更像是订单&lt;/em&gt;，或者</target>
        </trans-unit>
        <trans-unit id="95f3d55c11448516ef4cf2c075e8257c9652b19b" translate="yes" xml:space="preserve">
          <source>The interesting part for a Rails app is the last line, &lt;code&gt;server.run&lt;/code&gt;. Here we encounter the &lt;code&gt;wrapped_app&lt;/code&gt; method again, which this time we're going to explore more (even though it was executed before, and thus memoized by now).</source>
          <target state="translated">Rails应用程序有趣的部分是最后一行 &lt;code&gt;server.run&lt;/code&gt; 。在这里，我们再次遇到了 &lt;code&gt;wrapped_app&lt;/code&gt; 方法，这一次我们将进行更多的探索（即使它是以前执行的，因此现在已经被记住了）。</target>
        </trans-unit>
        <trans-unit id="b459fda0fb539be04b0a909ef219de4e5a2b39af" translate="yes" xml:space="preserve">
          <source>The interpretation of a parent namespace when thinking about classes and modules is tricky though. Let's consider a module M named &quot;A::B&quot;:</source>
          <target state="translated">不过在考虑类和模块时,对父名空间的解释是很棘手的。让我们考虑一个名为 &quot;A::B &quot;的模块M。</target>
        </trans-unit>
        <trans-unit id="b088dc4a33ac210d77c1458749a93ed8bf4c34fc" translate="yes" xml:space="preserve">
          <source>The inverse of &lt;code&gt;String#include?&lt;/code&gt;. Returns true if the string does not include the other string.</source>
          <target state="translated">&lt;code&gt;String#include?&lt;/code&gt; 的反函数？。如果字符串不包含其他字符串，则返回true。</target>
        </trans-unit>
        <trans-unit id="d3b045c64486cd3543aa4c92eac840cd5ff4ee1a" translate="yes" xml:space="preserve">
          <source>The inverse of &lt;code&gt;pluralize&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;pluralize&lt;/code&gt; 的逆：</target>
        </trans-unit>
        <trans-unit id="5dd1404e8fb1e4a2f3428a87a501d557bbc475c1" translate="yes" xml:space="preserve">
          <source>The join table should not have a primary key or a model associated with it. You must manually generate the join table with a migration such as this:</source>
          <target state="translated">连接表不应该有主键或与之相关的模型。你必须用这样的迁移方式手动生成连接表。</target>
        </trans-unit>
        <trans-unit id="052d7b38c38526d06bad1945b5b98f5f66c7d437" translate="yes" xml:space="preserve">
          <source>The key for the error message in this case is &lt;code&gt;:blank&lt;/code&gt;. Active Record will look up this key in the namespaces:</source>
          <target state="translated">在这种情况下，错误消息的密钥是 &lt;code&gt;:blank&lt;/code&gt; 。Active Record将在名称空间中查找此键：</target>
        </trans-unit>
        <trans-unit id="a03e001b53b8dfaae3a1107e4ec8266dabdface7" translate="yes" xml:space="preserve">
          <source>The keys must be the fixture names, that coincide with the short paths to the fixture files.</source>
          <target state="translated">键必须是夹具名称,与夹具文件的短路径一致。</target>
        </trans-unit>
        <trans-unit id="1d3e3365229f6940a1c09a4628bdc8177d9404b5" translate="yes" xml:space="preserve">
          <source>The keys of the &lt;code&gt;:addresses_attributes&lt;/code&gt; hash are unimportant, they need merely be different for each address.</source>
          <target state="translated">&lt;code&gt;:addresses_attributes&lt;/code&gt; 哈希的关键字并不重要，每个地址只需要不同即可。</target>
        </trans-unit>
        <trans-unit id="437996ad7c0e04b8e7fa0c7a7527aa0f661baec9" translate="yes" xml:space="preserve">
          <source>The keys of the hash which is the value for &lt;code&gt;:posts_attributes&lt;/code&gt; are ignored in this case. However, it is not allowed to use &lt;code&gt;'id'&lt;/code&gt; or &lt;code&gt;:id&lt;/code&gt; for one of such keys, otherwise the hash will be wrapped in an array and interpreted as an attribute hash for a single post.</source>
          <target state="translated">在这种情况下，将忽略作为 &lt;code&gt;:posts_attributes&lt;/code&gt; 值的哈希键。但是，不允许对其中一个键使用 &lt;code&gt;'id'&lt;/code&gt; 或 &lt;code&gt;:id&lt;/code&gt; ，否则哈希将包装在数组中并解释为单个帖子的属性哈希。</target>
        </trans-unit>
        <trans-unit id="bff0237eaabfc7db91da8d08231c80475092cb7e" translate="yes" xml:space="preserve">
          <source>The keys used in a cache can be any object that responds to either &lt;code&gt;cache_key&lt;/code&gt; or &lt;code&gt;to_param&lt;/code&gt;. You can implement the &lt;code&gt;cache_key&lt;/code&gt; method on your classes if you need to generate custom keys. Active Record will generate keys based on the class name and record id.</source>
          <target state="translated">高速缓存中使用的键可以是任何响应 &lt;code&gt;cache_key&lt;/code&gt; 或 &lt;code&gt;to_param&lt;/code&gt; 的对象。如果需要生成自定义键，则可以在类上实现 &lt;code&gt;cache_key&lt;/code&gt; 方法。Active Record将基于类名称和记录ID生成密钥。</target>
        </trans-unit>
        <trans-unit id="f7776f2c4b88c4d6b494aa2092d34ebd03edd32c" translate="yes" xml:space="preserve">
          <source>The keys you use on &lt;code&gt;Rails.cache&lt;/code&gt; will not be the same as those actually used with the storage engine. They may be modified with a namespace or altered to fit technology backend constraints. This means, for instance, that you can't save values with &lt;code&gt;Rails.cache&lt;/code&gt; and then try to pull them out with the &lt;code&gt;dalli&lt;/code&gt; gem. However, you also don't need to worry about exceeding the memcached size limit or violating syntax rules.</source>
          <target state="translated">您在 &lt;code&gt;Rails.cache&lt;/code&gt; 上使用的密钥将与存储引擎实际使用的密钥不同。可以使用名称空间对其进行修改，也可以对其进行更改以适合技术后端约束。例如，这意味着您无法使用 &lt;code&gt;Rails.cache&lt;/code&gt; 保存值，然后尝试使用 &lt;code&gt;dalli&lt;/code&gt; gem 将其拉出。但是，您也不必担心超出内存缓存大小限制或违反语法规则。</target>
        </trans-unit>
        <trans-unit id="9a7613a9e24c1242511419e1adb78550681bc52d" translate="yes" xml:space="preserve">
          <source>The keyword arguments :from and :to can be given to specify the expected initial value and the expected value after the block was executed.</source>
          <target state="translated">关键字参数:from和:to可以用来指定预期的初始值和块执行后的预期值。</target>
        </trans-unit>
        <trans-unit id="f3349b4c7e79a27feec027e09eaaf6fe241addad" translate="yes" xml:space="preserve">
          <source>The label of the current fixture is always available as a column value:</source>
          <target state="translated">当前灯具的标签总是作为一个列值可用。</target>
        </trans-unit>
        <trans-unit id="5a7bea3f7592b166f30ea2c09e8e9abb723ec914" translate="yes" xml:space="preserve">
          <source>The last characters will be replaced with the &lt;code&gt;:omission&lt;/code&gt; string (defaults to &amp;ldquo;&amp;hellip;&amp;rdquo;) for a total length not exceeding &lt;code&gt;length&lt;/code&gt;:</source>
          <target state="translated">最后一个字符将被 &lt;code&gt;:omission&lt;/code&gt; 字符串替换（默认为&amp;ldquo;&amp;hellip;&amp;rdquo;），总长度不超过 &lt;code&gt;length&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="e5104bffaf01d4231666775a1d668f8d8ffd8c52" translate="yes" xml:space="preserve">
          <source>The last characters will be replaced with the &lt;code&gt;:omission&lt;/code&gt; string (defaults to &amp;ldquo;&amp;hellip;&amp;rdquo;):</source>
          <target state="translated">最后一个字符将被 &lt;code&gt;:omission&lt;/code&gt; 字符串替换（默认为&amp;ldquo;&amp;hellip;&amp;rdquo;）：</target>
        </trans-unit>
        <trans-unit id="5b1fbe78e9957e7cf09f70c95db9866dfc8c504c" translate="yes" xml:space="preserve">
          <source>The last line ought to save the through record (a &lt;code&gt;Tagging&lt;/code&gt;). This will only work if the &lt;code&gt;:inverse_of&lt;/code&gt; is set:</source>
          <target state="translated">最后一行应保存通过记录（一个 &lt;code&gt;Tagging&lt;/code&gt; ）。仅当设置 &lt;code&gt;:inverse_of&lt;/code&gt; 时,此方法才有效：</target>
        </trans-unit>
        <trans-unit id="67a572e784d49a5e26efa0baf5210771e08bc0d2" translate="yes" xml:space="preserve">
          <source>The last point is easily explained with some enumerables:</source>
          <target state="translated">最后一点用一些列举法很容易解释。</target>
        </trans-unit>
        <trans-unit id="6bf06164b55dbf97e284223c0efd4152256ea1e6" translate="yes" xml:space="preserve">
          <source>The last point is particularly worth comparing for some enumerables:</source>
          <target state="translated">最后一点是特别值得比较的一些列子。</target>
        </trans-unit>
        <trans-unit id="c184c4cc81fa679b5807f802db648819174c0a80" translate="yes" xml:space="preserve">
          <source>The last three methods are required in your object for &lt;code&gt;Errors&lt;/code&gt; to be able to generate error messages correctly and also handle multiple languages. Of course, if you extend your object with &lt;code&gt;ActiveModel::Translation&lt;/code&gt; you will not need to implement the last two. Likewise, using &lt;code&gt;ActiveModel::Validations&lt;/code&gt; will handle the validation related methods for you.</source>
          <target state="translated">对象中需要使用后三种方法才能使 &lt;code&gt;Errors&lt;/code&gt; 正确生成错误消息并处理多种语言。当然，如果使用 &lt;code&gt;ActiveModel::Translation&lt;/code&gt; 扩展对象，则无需实现最后两个。同样，使用 &lt;code&gt;ActiveModel::Validations&lt;/code&gt; 将为您处理与验证相关的方法。</target>
        </trans-unit>
        <trans-unit id="97564964a74572c208e8ddbae7b14e004f054ff5" translate="yes" xml:space="preserve">
          <source>The last two assume that &lt;code&gt;&quot;foo&quot;.camelize&lt;/code&gt; returns &amp;ldquo;Foo&amp;rdquo;.</source>
          <target state="translated">最后两个假设 &lt;code&gt;&quot;foo&quot;.camelize&lt;/code&gt; 返回&amp;ldquo; Foo&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="47b2c402c42a4bd00dbe048a89ca0f4f2119a696" translate="yes" xml:space="preserve">
          <source>The last two assume that &lt;code&gt;&quot;foo/bar&quot;.camelize&lt;/code&gt; returns &amp;ldquo;Foo::Bar&amp;rdquo;.</source>
          <target state="translated">最后两个假设 &lt;code&gt;&quot;foo/bar&quot;.camelize&lt;/code&gt; 返回&amp;ldquo; Foo :: Bar&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="01d4583e92db9c0607227e88af967aeb5072f75c" translate="yes" xml:space="preserve">
          <source>The latter is a shortcut for:</source>
          <target state="translated">后者是一种快捷方式。</target>
        </trans-unit>
        <trans-unit id="d60eb064146a6c7d8808535fb46ffe1d06c0ef35" translate="yes" xml:space="preserve">
          <source>The layout will be rendered together with the partial for each item in the collection. The current object and object_counter variables will be available in the layout as well, the same way they are within the partial.</source>
          <target state="translated">布局将和局部变量一起呈现在集合中的每个项目上。当前的对象和object_counter变量也将在布局中可用,就像它们在局部中一样。</target>
        </trans-unit>
        <trans-unit id="f284415c6d146c7afcb0672e6e0f0abf85ffd823" translate="yes" xml:space="preserve">
          <source>The library as a whole can be accessed in the application manifest like so:</source>
          <target state="translated">库作为一个整体可以在应用程序清单中这样访问。</target>
        </trans-unit>
        <trans-unit id="fba58133a93884c30ef1d3cc05d18c16fa410026" translate="yes" xml:space="preserve">
          <source>The life cycle of Active Record objects.</source>
          <target state="translated">活动记录对象的生命周期。</target>
        </trans-unit>
        <trans-unit id="92a217a341fa19e51932070fc99d9da0f3f4d7cb" translate="yes" xml:space="preserve">
          <source>The link looks innocent to visitors, but when it's clicked, it will execute the JavaScript function &quot;exploit_code&quot; or any other JavaScript the attacker provides.</source>
          <target state="translated">该链接在访问者看来是无辜的,但当它被点击时,它将执行JavaScript函数 &quot;exploit_code &quot;或攻击者提供的任何其他JavaScript。</target>
        </trans-unit>
        <trans-unit id="140864c4a27c61fd406b6f614287fbce60f18f97" translate="yes" xml:space="preserve">
          <source>The list of columns names the model should ignore. Ignored columns won't have attribute accessors defined, and won't be referenced in SQL queries.</source>
          <target state="translated">模型应该忽略的列名列表。忽略的列不会定义属性访问器,也不会在SQL查询中被引用。</target>
        </trans-unit>
        <trans-unit id="e01fcb5edebcaa447ba52d13d4044f5a0666630b" translate="yes" xml:space="preserve">
          <source>The load path must be specified before any translations are looked up. To change the default locale from an initializer instead of &lt;code&gt;config/application.rb&lt;/code&gt;:</source>
          <target state="translated">查找任何翻译之前，必须指定加载路径。要从初始化程序而不是 &lt;code&gt;config/application.rb&lt;/code&gt; 更改默认语言环境：</target>
        </trans-unit>
        <trans-unit id="b91abe0a3bab1667a08a85ecc6e8da70adbd94e0" translate="yes" xml:space="preserve">
          <source>The local variables passed to sub templates can be accessed as a hash using the &lt;code&gt;local_assigns&lt;/code&gt; hash. This lets you access the variables as:</source>
          <target state="translated">可以使用 &lt;code&gt;local_assigns&lt;/code&gt; 哈希将传递给子模板的局部变量作为哈希进行访问。这使您可以按以下方式访问变量：</target>
        </trans-unit>
        <trans-unit id="d2dceed55b6b0e02bd26ebf3baea2208a19abe67" translate="yes" xml:space="preserve">
          <source>The locale can be either set pseudo-globally to &lt;code&gt;I18n.locale&lt;/code&gt; (which uses &lt;code&gt;Thread.current&lt;/code&gt; like, e.g., &lt;code&gt;Time.zone&lt;/code&gt;) or can be passed as an option to &lt;code&gt;#translate&lt;/code&gt; and &lt;code&gt;#localize&lt;/code&gt;.</source>
          <target state="translated">区域设置可以是组伪全局到 &lt;code&gt;I18n.locale&lt;/code&gt; （使用 &lt;code&gt;Thread.current&lt;/code&gt; 等，例如 &lt;code&gt;Time.zone&lt;/code&gt; ），或可作为一种选择要传递 &lt;code&gt;#translate&lt;/code&gt; 和 &lt;code&gt;#localize&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="413c8092d1383ea347a5974fbaadfa780f3120e9" translate="yes" xml:space="preserve">
          <source>The locale can be set in an &lt;code&gt;around_action&lt;/code&gt; in the &lt;code&gt;ApplicationController&lt;/code&gt;:</source>
          <target state="translated">可以在 &lt;code&gt;ApplicationController&lt;/code&gt; 的 &lt;code&gt;around_action&lt;/code&gt; 中设置语言环境：</target>
        </trans-unit>
        <trans-unit id="daf31176920b1d84600a05b4b96e3cdf806b6a98" translate="yes" xml:space="preserve">
          <source>The locale can be set using one of many different approaches.</source>
          <target state="translated">可以使用许多不同的方法之一来设置区域。</target>
        </trans-unit>
        <trans-unit id="dacee22f44c5ce441593543b2c1e7a3944349db1" translate="yes" xml:space="preserve">
          <source>The locale is an &lt;em&gt;obvious&lt;/em&gt; part of the URL.</source>
          <target state="translated">语言环境是URL 的&lt;em&gt;明显&lt;/em&gt;部分。</target>
        </trans-unit>
        <trans-unit id="7cbd4a2a8191fc3188f26e69e32667e5d3e6d197" translate="yes" xml:space="preserve">
          <source>The log files on &lt;a href=&quot;http://www.attacker.com&quot;&gt;www.attacker.com&lt;/a&gt; will read like this:</source>
          <target state="translated">&lt;a href=&quot;http://www.attacker.com&quot;&gt;www.attacker.com&lt;/a&gt;上的日志文件将如下所示：</target>
        </trans-unit>
        <trans-unit id="cc00365603b4266cf1c98299376d51ed6a9302f8" translate="yes" xml:space="preserve">
          <source>The lookup in this case for test_unit as input is:</source>
          <target state="translated">在这种情况下,作为输入的test_unit的查找是。</target>
        </trans-unit>
        <trans-unit id="dc77ccb96283466ad3dd5c3db6e697992a0f4424" translate="yes" xml:space="preserve">
          <source>The lookup order for an &lt;code&gt;admin/products#index&lt;/code&gt; action will be:</source>
          <target state="translated">&lt;code&gt;admin/products#index&lt;/code&gt; 操作的查找顺序为：</target>
        </trans-unit>
        <trans-unit id="361ee9d224498cc085910e79d5715c8d5a8243a4" translate="yes" xml:space="preserve">
          <source>The loop is set up in regular embedding tags &lt;code&gt;&amp;lt;% %&amp;gt;&lt;/code&gt;, and the name is written using the output embedding tag &lt;code&gt;&amp;lt;%= %&amp;gt;&lt;/code&gt;. Note that this is not just a usage suggestion. Regular output functions like print or puts won't work with &lt;code&gt;ERB&lt;/code&gt; templates. So this would be wrong:</source>
          <target state="translated">循环是在常规嵌入标记 &lt;code&gt;&amp;lt;% %&amp;gt;&lt;/code&gt; ，名称是使用输出嵌入标记 &lt;code&gt;&amp;lt;%= %&amp;gt;&lt;/code&gt; 编写的。请注意，这不仅仅是使用建议。常规输出功能（如打印或放置）不适用于 &lt;code&gt;ERB&lt;/code&gt; 模板。因此，这将是错误的：</target>
        </trans-unit>
        <trans-unit id="89708913768e17e0f4e9ebf21fe3c90dedbbdee1" translate="yes" xml:space="preserve">
          <source>The loop is set up using regular embedding tags (&lt;code&gt;&amp;lt;% %&amp;gt;&lt;/code&gt;) and the name is inserted using the output embedding tags (&lt;code&gt;&amp;lt;%= %&amp;gt;&lt;/code&gt;). Note that this is not just a usage suggestion: regular output functions such as &lt;code&gt;print&lt;/code&gt; and &lt;code&gt;puts&lt;/code&gt; won't be rendered to the view with ERB templates. So this would be wrong:</source>
          <target state="translated">使用常规嵌入标记（ &lt;code&gt;&amp;lt;% %&amp;gt;&lt;/code&gt; ）设置循环，并使用输出嵌入标记（ &lt;code&gt;&amp;lt;%= %&amp;gt;&lt;/code&gt; ）插入名称。请注意，这不仅仅是一种用法建议：常规的输出功能（例如 &lt;code&gt;print&lt;/code&gt; 和 &lt;code&gt;puts&lt;/code&gt; 将不会使用ERB模板呈现到视图中。因此，这将是错误的：</target>
        </trans-unit>
        <trans-unit id="dc30761df747a5ac678de0e1485ab435952394e1" translate="yes" xml:space="preserve">
          <source>The loop is setup in regular embedding tags &lt;code&gt;&amp;lt;% %&amp;gt;&lt;/code&gt;, and the name is written using the output embedding tag &lt;code&gt;&amp;lt;%=
%&amp;gt;&lt;/code&gt;. Note that this is not just a usage suggestion. Regular output functions like print or puts won't work with ERB templates. So this would be wrong:</source>
          <target state="translated">循环是在常规嵌入标记 &lt;code&gt;&amp;lt;% %&amp;gt;&lt;/code&gt; ，并且名称是使用输出嵌入标记 &lt;code&gt;&amp;lt;%= %&amp;gt;&lt;/code&gt; 写入的。请注意，这不仅仅是使用建议。常规输出功能（如打印或放置）不适用于ERB模板。因此，这将是错误的：</target>
        </trans-unit>
        <trans-unit id="60c1c080776c32f16ee80456ec4655445a163299" translate="yes" xml:space="preserve">
          <source>The macro &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Module.html#method-i-attr_internal&quot;&gt;&lt;code&gt;attr_internal&lt;/code&gt;&lt;/a&gt; is a synonym for &lt;code&gt;attr_internal_accessor&lt;/code&gt;:</source>
          <target state="translated">宏&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Module.html#method-i-attr_internal&quot;&gt; &lt;code&gt;attr_internal&lt;/code&gt; &lt;/a&gt;是一个同义词 &lt;code&gt;attr_internal_accessor&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="b359cd9a1a8a4f6521d576bd7487d6e3b867cc80" translate="yes" xml:space="preserve">
          <source>The macro &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Module.html#method-i-delegate&quot;&gt;&lt;code&gt;delegate&lt;/code&gt;&lt;/a&gt; offers an easy way to forward methods.</source>
          <target state="translated">宏&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Module.html#method-i-delegate&quot;&gt; &lt;code&gt;delegate&lt;/code&gt; &lt;/a&gt;提供了一种简单的方法转发方法。</target>
        </trans-unit>
        <trans-unit id="4782d45cb3bff384195fc3fa74f6ae6e493a63ea" translate="yes" xml:space="preserve">
          <source>The macro &lt;code&gt;attr_internal&lt;/code&gt; is a synonym for &lt;code&gt;attr_internal_accessor&lt;/code&gt;:</source>
          <target state="translated">宏 &lt;code&gt;attr_internal&lt;/code&gt; 是一个同义词 &lt;code&gt;attr_internal_accessor&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="a2f7c6d14cf5071e8ad6bb4bd27649a2b165b18f" translate="yes" xml:space="preserve">
          <source>The macro &lt;code&gt;delegate&lt;/code&gt; offers an easy way to forward methods.</source>
          <target state="translated">宏 &lt;code&gt;delegate&lt;/code&gt; 提供了一种简单的方法转发方法。</target>
        </trans-unit>
        <trans-unit id="415498318beba7b40f9b5611af8461964ca6a83e" translate="yes" xml:space="preserve">
          <source>The macro receives one or more method names (specified as symbols or strings) and the name of the target object via the &lt;code&gt;:to&lt;/code&gt; option (also a symbol or string).</source>
          <target state="translated">宏通过 &lt;code&gt;:to&lt;/code&gt; 选项（也可以是符号或字符串）接收一个或多个方法名称（指定为符号或字符串）和目标对象的名称。</target>
        </trans-unit>
        <trans-unit id="60baf372c6c437b91d26d4adf2d9c721e5ed9c08" translate="yes" xml:space="preserve">
          <source>The macro-style class methods can also receive a block. Consider using this style if the code inside your block is so short that it fits in a single line. For example, you could send metrics for every job enqueued:</source>
          <target state="translated">宏式类方法也可以接收一个块。如果你的区块里面的代码很短,以至于可以放在一行中,可以考虑使用这种风格。例如,你可以为每一个被查询的作业发送指标。</target>
        </trans-unit>
        <trans-unit id="ae8d13b0e4b30afca687a27a2a6bcee77b82e1f5" translate="yes" xml:space="preserve">
          <source>The macro-style class methods can also receive a block. Consider using this style if the code inside your block is so short that it fits in a single line:</source>
          <target state="translated">宏风格的类方法也可以接收一个块。如果你的块里面的代码很短,可以用一行来表示,可以考虑使用这种风格。</target>
        </trans-unit>
        <trans-unit id="62a5b4baa352f58f0f7825e54ea2087fe5908668" translate="yes" xml:space="preserve">
          <source>The macros &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Module.html#method-i-cattr_reader&quot;&gt;&lt;code&gt;cattr_reader&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Module.html#method-i-cattr_writer&quot;&gt;&lt;code&gt;cattr_writer&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Module.html#method-i-cattr_accessor&quot;&gt;&lt;code&gt;cattr_accessor&lt;/code&gt;&lt;/a&gt; are analogous to their &lt;code&gt;attr_*&lt;/code&gt; counterparts but for classes. They initialize a class variable to &lt;code&gt;nil&lt;/code&gt; unless it already exists, and generate the corresponding class methods to access it:</source>
          <target state="translated">&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Module.html#method-i-cattr_reader&quot;&gt; &lt;code&gt;cattr_reader&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Module.html#method-i-cattr_writer&quot;&gt; &lt;code&gt;cattr_writer&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Module.html#method-i-cattr_accessor&quot;&gt; &lt;code&gt;cattr_accessor&lt;/code&gt; &lt;/a&gt;宏类似于 &lt;code&gt;attr_*&lt;/code&gt; 对应的宏，但用于类。他们将一个类变量初始化为 &lt;code&gt;nil&lt;/code&gt; ,除非它已经存在，并生成相应的类方法来访问它：</target>
        </trans-unit>
        <trans-unit id="87afced873ca87f9a61f091f800f32b8bc8f5a43" translate="yes" xml:space="preserve">
          <source>The macros &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Module.html#method-i-mattr_reader&quot;&gt;&lt;code&gt;mattr_reader&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Module.html#method-i-mattr_writer&quot;&gt;&lt;code&gt;mattr_writer&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Module.html#method-i-mattr_accessor&quot;&gt;&lt;code&gt;mattr_accessor&lt;/code&gt;&lt;/a&gt; are the same as the &lt;code&gt;cattr_*&lt;/code&gt; macros defined for class. In fact, the &lt;code&gt;cattr_*&lt;/code&gt; macros are just aliases for the &lt;code&gt;mattr_*&lt;/code&gt; macros. Check &lt;a href=&quot;#class-attributes&quot;&gt;Class Attributes&lt;/a&gt;.</source>
          <target state="translated">宏&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Module.html#method-i-mattr_reader&quot;&gt; &lt;code&gt;mattr_reader&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Module.html#method-i-mattr_writer&quot;&gt; &lt;code&gt;mattr_writer&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Module.html#method-i-mattr_accessor&quot;&gt; &lt;code&gt;mattr_accessor&lt;/code&gt; &lt;/a&gt;与为类定义的 &lt;code&gt;cattr_*&lt;/code&gt; 宏相同。事实上， &lt;code&gt;cattr_*&lt;/code&gt; 宏是对于刚刚别名 &lt;code&gt;mattr_*&lt;/code&gt; 宏。检查&lt;a href=&quot;#class-attributes&quot;&gt;类属性&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7bf8a2a68d5bb7d9bdce0e3db1b7396a5f8c4dbe" translate="yes" xml:space="preserve">
          <source>The macros &lt;code&gt;cattr_reader&lt;/code&gt;, &lt;code&gt;cattr_writer&lt;/code&gt;, and &lt;code&gt;cattr_accessor&lt;/code&gt; are analogous to their &lt;code&gt;attr_*&lt;/code&gt; counterparts but for classes. They initialize a class variable to &lt;code&gt;nil&lt;/code&gt; unless it already exists, and generate the corresponding class methods to access it:</source>
          <target state="translated">&lt;code&gt;cattr_reader&lt;/code&gt; ， &lt;code&gt;cattr_writer&lt;/code&gt; 和 &lt;code&gt;cattr_accessor&lt;/code&gt; 宏类似于 &lt;code&gt;attr_*&lt;/code&gt; 对应的宏，但用于类。他们将一个类变量初始化为 &lt;code&gt;nil&lt;/code&gt; ,除非它已经存在，并生成相应的类方法来访问它：</target>
        </trans-unit>
        <trans-unit id="75c1b4fe1ccf8d7f2c382dea52c838eafc63998f" translate="yes" xml:space="preserve">
          <source>The macros &lt;code&gt;mattr_reader&lt;/code&gt;, &lt;code&gt;mattr_writer&lt;/code&gt;, and &lt;code&gt;mattr_accessor&lt;/code&gt; are the same as the &lt;code&gt;cattr_*&lt;/code&gt; macros defined for class. In fact, the &lt;code&gt;cattr_*&lt;/code&gt; macros are just aliases for the &lt;code&gt;mattr_*&lt;/code&gt; macros. Check &lt;a href=&quot;#class-attributes&quot;&gt;Class Attributes&lt;/a&gt;.</source>
          <target state="translated">宏 &lt;code&gt;mattr_reader&lt;/code&gt; ， &lt;code&gt;mattr_writer&lt;/code&gt; 和 &lt;code&gt;mattr_accessor&lt;/code&gt; 与为类定义的 &lt;code&gt;cattr_*&lt;/code&gt; 宏相同。事实上， &lt;code&gt;cattr_*&lt;/code&gt; 宏是对于刚刚别名 &lt;code&gt;mattr_*&lt;/code&gt; 宏。检查&lt;a href=&quot;#class-attributes&quot;&gt;类属性&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="58b4dccf4abf64be6b0a0ec46a36c74305dc1844" translate="yes" xml:space="preserve">
          <source>The main body of the view will always render into the unnamed &lt;code&gt;yield&lt;/code&gt;. To render content into a named &lt;code&gt;yield&lt;/code&gt;, you use the &lt;code&gt;content_for&lt;/code&gt; method.</source>
          <target state="translated">视图的主体将始终呈现为未命名的 &lt;code&gt;yield&lt;/code&gt; 。要将内容呈现为命名的 &lt;code&gt;yield&lt;/code&gt; ，请使用 &lt;code&gt;content_for&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="c79154cc310f99ec2631747409f4048ac004be4c" translate="yes" xml:space="preserve">
          <source>The main difference from &lt;code&gt;belongs_to&lt;/code&gt; is that the link column &lt;code&gt;supplier_id&lt;/code&gt; is located in the other table:</source>
          <target state="translated">与 &lt;code&gt;belongs_to&lt;/code&gt; 的主要区别在于，链接列 &lt;code&gt;supplier_id&lt;/code&gt; 位于另一个表中：</target>
        </trans-unit>
        <trans-unit id="8a300fdd5f24e0f35d7ec91006d771d21fa00b32" translate="yes" xml:space="preserve">
          <source>The main form helper is &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionView/Helpers/FormHelper.html#method-i-form_with&quot;&gt;&lt;code&gt;form_with&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">主要的表单帮助器是&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionView/Helpers/FormHelper.html#method-i-form_with&quot;&gt; &lt;code&gt;form_with&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="79f6a395f84dfa52f266c952a76eb19193188b76" translate="yes" xml:space="preserve">
          <source>The main form helper is &lt;code&gt;form_with&lt;/code&gt;.</source>
          <target state="translated">主要的表单帮助器是 &lt;code&gt;form_with&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7fc515176450fdd7cbfab7c1b8954dc09f9c2dce" translate="yes" xml:space="preserve">
          <source>The main method that creates the message and renders the email templates. There are two ways to call this method, with a block, or without a block.</source>
          <target state="translated">创建邮件并渲染邮件模板的主要方法。有两种方法可以调用这个方法,有块,或者没有块。</target>
        </trans-unit>
        <trans-unit id="495929d2ad1e03b5a3e61a6dfafb4d72fa178b9c" translate="yes" xml:space="preserve">
          <source>The main methods to call are &lt;code&gt;read&lt;/code&gt;, &lt;code&gt;write&lt;/code&gt;, &lt;code&gt;delete&lt;/code&gt;, &lt;code&gt;exist?&lt;/code&gt;, and &lt;code&gt;fetch&lt;/code&gt;. The fetch method takes a block and will either return an existing value from the cache, or evaluate the block and write the result to the cache if no value exists.</source>
          <target state="translated">调用的主要方法是 &lt;code&gt;read&lt;/code&gt; ， &lt;code&gt;write&lt;/code&gt; ， &lt;code&gt;delete&lt;/code&gt; ，是否 &lt;code&gt;exist?&lt;/code&gt; 和 &lt;code&gt;fetch&lt;/code&gt; 。fetch方法使用一个块，并将从高速缓存中返回一个现有值，或者评估该块并将结果（如果不存在任何值）写入高速缓存。</target>
        </trans-unit>
        <trans-unit id="14c39f5026611e3921bac887dbcc489606e1d7f4" translate="yes" xml:space="preserve">
          <source>The main objective of most attackers is to make money. The underground prices for stolen bank login accounts range from 0.5%-10% of account balance, $0.5-$30 for credit card numbers ($20-$60 with full details), $0.1-$1.5 for identities (Name, SSN &amp;amp; DOB), $20-$50 for retailer accounts, and $6-$10 for cloud service provider accounts, according to the &lt;a href=&quot;https://www.symantec.com/content/dam/symantec/docs/reports/istr-22-2017-en.pdf&quot;&gt;Symantec Internet Security Threat Report (2017)&lt;/a&gt;.</source>
          <target state="translated">大多数攻击者的主要目标是赚钱。被盗的银行登录帐户的地下价格范围为帐户余额的0.5％-10％，信用卡号为$ 0.5- $ 30（完整信息为$ 20- $ 60），身份（名称，SSN和DOB）为$ 0.1- $ 1.5，$ 20-根据《&lt;a href=&quot;https://www.symantec.com/content/dam/symantec/docs/reports/istr-22-2017-en.pdf&quot;&gt;Symantec Internet Security威胁报告（2017）》&lt;/a&gt;，零售商帐户为50美元，云服务提供商帐户为6-10美元。</target>
        </trans-unit>
        <trans-unit id="5f0f4d1e05aeb9d77de10ffcf78f1778658c85b3" translate="yes" xml:space="preserve">
          <source>The main objective of most attackers is to make money. The underground prices for stolen bank login accounts range from 0.5%-10% of account balance, $0.5-$30 for credit card numbers ($20-$60 with full details), $0.1-$1.5 for identities (Name, SSN, and DOB), $20-$50 for retailer accounts, and $6-$10 for cloud service provider accounts, according to the &lt;a href=&quot;https://www.symantec.com/content/dam/symantec/docs/reports/istr-22-2017-en.pdf&quot;&gt;Symantec Internet Security Threat Report (2017)&lt;/a&gt;.</source>
          <target state="translated">大多数攻击者的主要目标是赚钱。被盗的银行登录帐户的地下价格范围为帐户余额的0.5％-10％，信用卡号为$ 0.5- $ 30（完整信息为$ 20- $ 60），身份（名称，SSN和DOB）为$ 0.1- $ 1.5，$ 20根据《&lt;a href=&quot;https://www.symantec.com/content/dam/symantec/docs/reports/istr-22-2017-en.pdf&quot;&gt;赛门铁克互联网安全威胁报告》（2017年）&lt;/a&gt;，零售商账户为50美元，云服务提供商账户为6至10美元。</target>
        </trans-unit>
        <trans-unit id="21599ae78681ea4faf08ff08a657288956a915b6" translate="yes" xml:space="preserve">
          <source>The main point is to ensure that all Rails apps will have a job infrastructure in place. We can then have framework features and other gems build on top of that, without having to worry about API differences between various job runners such as Delayed Job and Resque. Picking your queuing backend becomes more of an operational concern, then. And you'll be able to switch between them without having to rewrite your jobs.</source>
          <target state="translated">主要是确保所有的Rails应用都会有一个job基础设施。然后,我们可以让框架功能和其他gems构建在上面,而不必担心Delayed Job和Resque等各种作业运行器之间的API差异。那么,选择你的排队后端就更多的成为了一个操作上的问题。而且你将能够在它们之间进行切换,而不必重写你的作业。</target>
        </trans-unit>
        <trans-unit id="71619b344378d256ebf3fdb56f4d5efbf0440f8d" translate="yes" xml:space="preserve">
          <source>The main purpose of Rails' migration feature is to issue commands that modify the schema using a consistent process. Migrations can also be used to add or modify data. This is useful in an existing database that can't be destroyed and recreated, such as a production database.</source>
          <target state="translated">Rails的迁移功能的主要目的是发出命令,使用一致的流程修改模式。迁移也可以用来添加或修改数据。这在无法销毁和重新创建的现有数据库中非常有用,例如生产数据库。</target>
        </trans-unit>
        <trans-unit id="9f79a2a93cfc18ecc7090835c969528751a32baa" translate="yes" xml:space="preserve">
          <source>The matcher (and other members of the precompile array; see below) is applied to final compiled file names. This means anything that compiles to JS/CSS is excluded, as well as raw JS/CSS files; for example, &lt;code&gt;.coffee&lt;/code&gt; and &lt;code&gt;.scss&lt;/code&gt; files are &lt;strong&gt;not&lt;/strong&gt; automatically included as they compile to JS/CSS.</source>
          <target state="translated">匹配器（和预编译数组的其他成员；请参见下文）将应用于最终的编译文件名。这意味着不包括任何可编译为JS / CSS的文件以及原始JS / CSS文件。例如， &lt;code&gt;.coffee&lt;/code&gt; 和 &lt;code&gt;.scss&lt;/code&gt; 文件&lt;strong&gt;不会&lt;/strong&gt;自动为它们编译成JS / CSS包括在内。</target>
        </trans-unit>
        <trans-unit id="5a5326dc8382eb380da680fd49ebf42711f48794" translate="yes" xml:space="preserve">
          <source>The maximum length of a password is 72 (required by &lt;code&gt;bcrypt&lt;/code&gt; on which ActiveModel::SecurePassword depends)</source>
          <target state="translated">密码的最大长度为72（ActiveModel :: SecurePassword所依赖的 &lt;code&gt;bcrypt&lt;/code&gt; 要求）</target>
        </trans-unit>
        <trans-unit id="efc00f941fcc8767657069623c7b30577861e458" translate="yes" xml:space="preserve">
          <source>The message identifies which template is missing. In this case, it's the &lt;code&gt;articles/new&lt;/code&gt; template. Rails will first look for this template. If not found, then it will attempt to load a template called &lt;code&gt;application/new&lt;/code&gt;, because the &lt;code&gt;ArticlesController&lt;/code&gt; inherits from &lt;code&gt;ApplicationController&lt;/code&gt;.</source>
          <target state="translated">该消息标识缺少哪个模板。在这种情况下，它是 &lt;code&gt;articles/new&lt;/code&gt; 模板。Rails首先会寻找该模板。如果未找到，则它将尝试加载名为 &lt;code&gt;application/new&lt;/code&gt; 的模板，因为 &lt;code&gt;ArticlesController&lt;/code&gt; 继承自 &lt;code&gt;ApplicationController&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="47bc5e7f0a3a4de0af0ba74ae3f9825d3afcaeb3" translate="yes" xml:space="preserve">
          <source>The message is signed with the &lt;code&gt;MessageVerifier&lt;/code&gt;'s secret. Returns Base64-encoded message joined with the generated signature.</source>
          <target state="translated">该消息使用 &lt;code&gt;MessageVerifier&lt;/code&gt; 的秘密进行签名。返回与生成的签名结合在一起的Base64编码的消息。</target>
        </trans-unit>
        <trans-unit id="687ac77baf1c88b97b2fe37f68e7a236164e70b0" translate="yes" xml:space="preserve">
          <source>The message is signed with the &lt;code&gt;MessageVerifier&lt;/code&gt;'s secret. Without knowing the secret, the original value cannot be extracted from the message.</source>
          <target state="translated">该消息使用 &lt;code&gt;MessageVerifier&lt;/code&gt; 的秘密进行签名。在不知道秘密的情况下，无法从消息中提取原始值。</target>
        </trans-unit>
        <trans-unit id="093a0fd1eecb6d23d318f6fc14f9ed0c2e8da44c" translate="yes" xml:space="preserve">
          <source>The messages are available in the @logger instance, which is a logger with limited powers (it actually does not send anything to your output), and you can collect them doing @logger.logged(level), where level is the level used in logging, like info, debug, warn and so on.</source>
          <target state="translated">这些消息可以在@logger实例中获得,它是一个权力有限的记录器(实际上它不会向你的输出发送任何东西),你可以做@logger.logged(level)来收集这些消息,其中level是用于记录的级别,比如info、debug、warning等等。</target>
        </trans-unit>
        <trans-unit id="b612ae6689da6e5fbb2f1fd93e9a17cebb56a72f" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Array.html#method-c-wrap&quot;&gt;&lt;code&gt;Array.wrap&lt;/code&gt;&lt;/a&gt; wraps its argument in an array unless it is already an array (or array-like).</source>
          <target state="translated">除非方法已经是数组（或类似数组的方法），&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Array.html#method-c-wrap&quot;&gt; &lt;code&gt;Array.wrap&lt;/code&gt; &lt;/a&gt;方法会将其参数包装在数组中。</target>
        </trans-unit>
        <trans-unit id="e0c7986875aada54039f9f866dce9eaf81b9b726" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Array.html#method-i-deep_dup&quot;&gt;&lt;code&gt;Array#deep_dup&lt;/code&gt;&lt;/a&gt; duplicates itself and all objects inside recursively with the Active Support method &lt;code&gt;Object#deep_dup&lt;/code&gt;. It works like &lt;code&gt;Array#map&lt;/code&gt;, sending &lt;code&gt;deep_dup&lt;/code&gt; method to each object inside.</source>
          <target state="translated">&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Array.html#method-i-deep_dup&quot;&gt; &lt;code&gt;Array#deep_dup&lt;/code&gt; &lt;/a&gt;方法使用Active Support方法 &lt;code&gt;Object#deep_dup&lt;/code&gt; 递归地复制自身和其中的所有对象。它的工作原理类似于 &lt;code&gt;Array#map&lt;/code&gt; ，将 &lt;code&gt;deep_dup&lt;/code&gt; 方法发送到内部的每个对象。</target>
        </trans-unit>
        <trans-unit id="f1083861e0acfb7a7f8c678f8a1acde83bccc8a4" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Array.html#method-i-excluding&quot;&gt;&lt;code&gt;excluding&lt;/code&gt;&lt;/a&gt; returns a copy of the Array excluding the specified elements. This is an optimization of &lt;code&gt;Enumerable#excluding&lt;/code&gt; that uses &lt;code&gt;Array#-&lt;/code&gt; instead of &lt;code&gt;Array#reject&lt;/code&gt; for performance reasons.</source>
          <target state="translated">&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Array.html#method-i-excluding&quot;&gt; &lt;code&gt;excluding&lt;/code&gt; &lt;/a&gt;方法返回不包含指定元素的Array的副本。这是对 &lt;code&gt;Enumerable#excluding&lt;/code&gt; 的优化，出于性能原因，它使用 &lt;code&gt;Array#-&lt;/code&gt; 而不是 &lt;code&gt;Array#reject&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3c5ab031b7e50d2e96e0a74ffe9af2b6b2712219" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Array.html#method-i-extract-21&quot;&gt;&lt;code&gt;extract!&lt;/code&gt;&lt;/a&gt; removes and returns the elements for which the block returns a true value. If no block is given, an Enumerator is returned instead.</source>
          <target state="translated">方法&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Array.html#method-i-extract-21&quot;&gt; &lt;code&gt;extract!&lt;/code&gt; &lt;/a&gt;删除并返回该块为其返回真值的元素。如果没有给出块，则返回一个Enumerator。</target>
        </trans-unit>
        <trans-unit id="1baa36c974bc804921431457c1c6c6a4be330e0f" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Array.html#method-i-in_groups&quot;&gt;&lt;code&gt;in_groups&lt;/code&gt;&lt;/a&gt; splits an array into a certain number of groups. The method returns an array with the groups:</source>
          <target state="translated">&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Array.html#method-i-in_groups&quot;&gt; &lt;code&gt;in_groups&lt;/code&gt; &lt;/a&gt;方法将数组拆分为一定数量的组。该方法返回具有组的数组：</target>
        </trans-unit>
        <trans-unit id="7d79e4eef123985b75e731ceb60d98228c7cbf62" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Array.html#method-i-in_groups_of&quot;&gt;&lt;code&gt;in_groups_of&lt;/code&gt;&lt;/a&gt; splits an array into consecutive groups of a certain size. It returns an array with the groups:</source>
          <target state="translated">&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Array.html#method-i-in_groups_of&quot;&gt; &lt;code&gt;in_groups_of&lt;/code&gt; &lt;/a&gt;方法将数组拆分为一定大小的连续组。它返回带有组的数组：</target>
        </trans-unit>
        <trans-unit id="ece220193b948f6451f39d1479e13638b20bc0a7" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Array.html#method-i-including&quot;&gt;&lt;code&gt;including&lt;/code&gt;&lt;/a&gt; returns a new array that includes the passed elements:</source>
          <target state="translated">该方法&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Array.html#method-i-including&quot;&gt; &lt;code&gt;including&lt;/code&gt; &lt;/a&gt;返回一个新数组，该数组包含传递的元素：</target>
        </trans-unit>
        <trans-unit id="9dc7dad9a9aca6e185fba5588ba639a3bc736351" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Array.html#method-i-split&quot;&gt;&lt;code&gt;split&lt;/code&gt;&lt;/a&gt; divides an array by a separator and returns the resulting chunks.</source>
          <target state="translated">该方法&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Array.html#method-i-split&quot;&gt; &lt;code&gt;split&lt;/code&gt; &lt;/a&gt;用分隔符对数组进行划分，并返回结果块​​。</target>
        </trans-unit>
        <trans-unit id="41c401983d9066d49e62ff263b77010081bab58b" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Array.html#method-i-to_formatted_s&quot;&gt;&lt;code&gt;to_formatted_s&lt;/code&gt;&lt;/a&gt; acts like &lt;code&gt;to_s&lt;/code&gt; by default.</source>
          <target state="translated">默认情况下，方法&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Array.html#method-i-to_formatted_s&quot;&gt; &lt;code&gt;to_formatted_s&lt;/code&gt; 的&lt;/a&gt;行为类似于 &lt;code&gt;to_s&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bf0308bc34dfdcb2c2be01608f4664521f58109a" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Array.html#method-i-to_sentence&quot;&gt;&lt;code&gt;to_sentence&lt;/code&gt;&lt;/a&gt; turns an array into a string containing a sentence that enumerates its items:</source>
          <target state="translated">方法&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Array.html#method-i-to_sentence&quot;&gt; &lt;code&gt;to_sentence&lt;/code&gt; &lt;/a&gt;将数组转换为字符串，该字符串包含一个枚举其项的句子：</target>
        </trans-unit>
        <trans-unit id="9d753bd10bf8fe0a2e8c39d13af5c915e0223f06" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Array.html#method-i-to_xml&quot;&gt;&lt;code&gt;to_xml&lt;/code&gt;&lt;/a&gt; returns a string containing an XML representation of its receiver:</source>
          <target state="translated">方法&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Array.html#method-i-to_xml&quot;&gt; &lt;code&gt;to_xml&lt;/code&gt; &lt;/a&gt;返回一个字符串，该字符串包含其接收者的XML表示形式：</target>
        </trans-unit>
        <trans-unit id="c897ff212d2d6e5e632ed0bce056d6c3f7ff27f5" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Class.html#method-i-class_attribute&quot;&gt;&lt;code&gt;class_attribute&lt;/code&gt;&lt;/a&gt; declares one or more inheritable class attributes that can be overridden at any level down the hierarchy.</source>
          <target state="translated">方法&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Class.html#method-i-class_attribute&quot;&gt; &lt;code&gt;class_attribute&lt;/code&gt; &lt;/a&gt;声明一个或多个可继承的类属性，这些属性可以在层次结构中的任何级别被覆盖。</target>
        </trans-unit>
        <trans-unit id="2a8ebb5b1ac4f9cf2151a625cbb168b3204d93d6" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Date.html#method-i-ago&quot;&gt;&lt;code&gt;ago&lt;/code&gt;&lt;/a&gt; receives a number of seconds as argument and returns a timestamp those many seconds ago from midnight:</source>
          <target state="translated">该方法&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Date.html#method-i-ago&quot;&gt; &lt;code&gt;ago&lt;/code&gt; &lt;/a&gt;收到了几秒钟作为参数，并返回了午夜之前几秒钟的时间戳：</target>
        </trans-unit>
        <trans-unit id="35bcee94edc7af7af7187cdc1c4002a40197bcdc" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Date.html#method-i-beginning_of_day&quot;&gt;&lt;code&gt;beginning_of_day&lt;/code&gt;&lt;/a&gt; returns a timestamp at the beginning of the day (00:00:00):</source>
          <target state="translated">该方法&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Date.html#method-i-beginning_of_day&quot;&gt; &lt;code&gt;beginning_of_day&lt;/code&gt; &lt;/a&gt;返回在一天（00:00:00）开始时的时间戳：</target>
        </trans-unit>
        <trans-unit id="039fc540d1c85df727eee6b7666d9a480d776c99" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Date.html#method-i-change&quot;&gt;&lt;code&gt;change&lt;/code&gt;&lt;/a&gt; allows you to get a new date which is the same as the receiver except for the given year, month, or day:</source>
          <target state="translated">方法&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Date.html#method-i-change&quot;&gt; &lt;code&gt;change&lt;/code&gt; &lt;/a&gt;允许您获得与接收者相同的新日期，但给定的年，月或日除外：</target>
        </trans-unit>
        <trans-unit id="1a04133f50a7e8dee41d24a8c412f407c8402448" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Date.html#method-i-end_of_day&quot;&gt;&lt;code&gt;end_of_day&lt;/code&gt;&lt;/a&gt; returns a timestamp at the end of the day (23:59:59):</source>
          <target state="translated">方法&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Date.html#method-i-end_of_day&quot;&gt; &lt;code&gt;end_of_day&lt;/code&gt; &lt;/a&gt;返回一天结束时的时间戳记（23:59:59）：</target>
        </trans-unit>
        <trans-unit id="8e0610126065795c03431aa3b00277477ca54fbf" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/DateAndTime/Calculations.html#method-i-all_day&quot;&gt;&lt;code&gt;all_day&lt;/code&gt;&lt;/a&gt; returns a range representing the whole day of the current time.</source>
          <target state="translated">&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/DateAndTime/Calculations.html#method-i-all_day&quot;&gt; &lt;code&gt;all_day&lt;/code&gt; &lt;/a&gt;方法返回一个范围，该范围表示当前时间的整天。</target>
        </trans-unit>
        <trans-unit id="998250f2fb6bd070c9087e3c2d373d324896049e" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/DateAndTime/Calculations.html#method-i-next_week&quot;&gt;&lt;code&gt;next_week&lt;/code&gt;&lt;/a&gt; receives a symbol with a day name in English (default is the thread local &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Date.html#method-c-beginning_of_week&quot;&gt;&lt;code&gt;Date.beginning_of_week&lt;/code&gt;&lt;/a&gt;, or &lt;code&gt;config.beginning_of_week&lt;/code&gt;, or &lt;code&gt;:monday&lt;/code&gt;) and it returns the date corresponding to that day.</source>
          <target state="translated">方法&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/DateAndTime/Calculations.html#method-i-next_week&quot;&gt; &lt;code&gt;next_week&lt;/code&gt; 会&lt;/a&gt;收到一个带有英文日期名称的符号（默认为本地local的&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Date.html#method-c-beginning_of_week&quot;&gt; &lt;code&gt;Date.beginning_of_week&lt;/code&gt; &lt;/a&gt;或 &lt;code&gt;config.beginning_of_week&lt;/code&gt; 或 &lt;code&gt;:monday&lt;/code&gt; ），并返回与该日相对应的日期。</target>
        </trans-unit>
        <trans-unit id="73a8292161baf30cfe01fcc1081d24d9ea2ac191" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/DateAndTime/Calculations.html#method-i-prev_week&quot;&gt;&lt;code&gt;prev_week&lt;/code&gt;&lt;/a&gt; is analogous:</source>
          <target state="translated">方法&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/DateAndTime/Calculations.html#method-i-prev_week&quot;&gt; &lt;code&gt;prev_week&lt;/code&gt; &lt;/a&gt;类似于：</target>
        </trans-unit>
        <trans-unit id="a78efcc4bbe0421096dae65f032b7093e39e2f67" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/DateAndTime/Calculations.html#method-i-weeks_ago&quot;&gt;&lt;code&gt;weeks_ago&lt;/code&gt;&lt;/a&gt; works analogously for weeks:</source>
          <target state="translated">类似的方法&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/DateAndTime/Calculations.html#method-i-weeks_ago&quot;&gt; &lt;code&gt;weeks_ago&lt;/code&gt; 可&lt;/a&gt;工作数周：</target>
        </trans-unit>
        <trans-unit id="e69dd34154dc2248f2543c71ee8b402f5698765a" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/DateAndTime/Calculations.html#method-i-years_ago&quot;&gt;&lt;code&gt;years_ago&lt;/code&gt;&lt;/a&gt; receives a number of years and returns the same date those many years ago:</source>
          <target state="translated">&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/DateAndTime/Calculations.html#method-i-years_ago&quot;&gt; &lt;code&gt;years_ago&lt;/code&gt; &lt;/a&gt;方法接收若干年，并返回许多年前的同一日期：</target>
        </trans-unit>
        <trans-unit id="2beaa804c79a1634aac18973a0e2f9c9f66ddfa3" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/DateTime.html#method-i-beginning_of_hour&quot;&gt;&lt;code&gt;beginning_of_hour&lt;/code&gt;&lt;/a&gt; returns a timestamp at the beginning of the hour (hh:00:00):</source>
          <target state="translated">方法&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/DateTime.html#method-i-beginning_of_hour&quot;&gt; &lt;code&gt;beginning_of_hour&lt;/code&gt; &lt;/a&gt;在小时的开头（hh：00：00）返回一个时间戳：</target>
        </trans-unit>
        <trans-unit id="07bdff82609af37ff84c3cfd8409014733ca8a8e" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/DateTime.html#method-i-beginning_of_minute&quot;&gt;&lt;code&gt;beginning_of_minute&lt;/code&gt;&lt;/a&gt; returns a timestamp at the beginning of the minute (hh:mm:00):</source>
          <target state="translated">该方法&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/DateTime.html#method-i-beginning_of_minute&quot;&gt; &lt;code&gt;beginning_of_minute&lt;/code&gt; &lt;/a&gt;返回在分钟（HH：MM：00）的开始的时戳：</target>
        </trans-unit>
        <trans-unit id="65a870bfad322c3180cf0ec3330dd1a5debe159c" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/DateTime.html#method-i-change&quot;&gt;&lt;code&gt;change&lt;/code&gt;&lt;/a&gt; allows you to get a new datetime which is the same as the receiver except for the given options, which may include &lt;code&gt;:year&lt;/code&gt;, &lt;code&gt;:month&lt;/code&gt;, &lt;code&gt;:day&lt;/code&gt;, &lt;code&gt;:hour&lt;/code&gt;, &lt;code&gt;:min&lt;/code&gt;, &lt;code&gt;:sec&lt;/code&gt;, &lt;code&gt;:offset&lt;/code&gt;, &lt;code&gt;:start&lt;/code&gt;:</source>
          <target state="translated">方法&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/DateTime.html#method-i-change&quot;&gt; &lt;code&gt;change&lt;/code&gt; &lt;/a&gt;允许您获得与接收者相同的新日期时间，除了给定的选项，其中可能包括 &lt;code&gt;:year&lt;/code&gt; ， &lt;code&gt;:month&lt;/code&gt; ， &lt;code&gt;:day&lt;/code&gt; ， &lt;code&gt;:hour&lt;/code&gt; ， &lt;code&gt;:min&lt;/code&gt; ， &lt;code&gt;:sec&lt;/code&gt; ， &lt;code&gt;:offset&lt;/code&gt; ， &lt;code&gt;:start&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="d673cf2b5b30a16b5b74d7a095ccbb4ff056d438" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/DateTime.html#method-i-end_of_hour&quot;&gt;&lt;code&gt;end_of_hour&lt;/code&gt;&lt;/a&gt; returns a timestamp at the end of the hour (hh:59:59):</source>
          <target state="translated">方法&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/DateTime.html#method-i-end_of_hour&quot;&gt; &lt;code&gt;end_of_hour&lt;/code&gt; &lt;/a&gt;返回小时结束时的时间戳记（hh：59：59）：</target>
        </trans-unit>
        <trans-unit id="b81a306583738eb9cb77cb80392e2c36cb478eeb" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/DateTime.html#method-i-end_of_minute&quot;&gt;&lt;code&gt;end_of_minute&lt;/code&gt;&lt;/a&gt; returns a timestamp at the end of the minute (hh:mm:59):</source>
          <target state="translated">方法&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/DateTime.html#method-i-end_of_minute&quot;&gt; &lt;code&gt;end_of_minute&lt;/code&gt; &lt;/a&gt;在分钟结束时（hh：mm：59）返回一个时间戳：</target>
        </trans-unit>
        <trans-unit id="6f76fda555ef0678ba34cbf7845ada96b332bf68" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/DateTime.html#method-i-seconds_since_midnight&quot;&gt;&lt;code&gt;seconds_since_midnight&lt;/code&gt;&lt;/a&gt; returns the number of seconds since midnight:</source>
          <target state="translated">&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/DateTime.html#method-i-seconds_since_midnight&quot;&gt; &lt;code&gt;seconds_since_midnight&lt;/code&gt; &lt;/a&gt;方法返回自午夜以来的秒数：</target>
        </trans-unit>
        <trans-unit id="c28216d4001ab19eedcabbf50fa36d8544027988" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/DateTime.html#method-i-utc&quot;&gt;&lt;code&gt;utc&lt;/code&gt;&lt;/a&gt; gives you the same datetime in the receiver expressed in UTC.</source>
          <target state="translated">&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/DateTime.html#method-i-utc&quot;&gt; &lt;code&gt;utc&lt;/code&gt; &lt;/a&gt;方法为您提供了以UTC表示的接收器中相同的日期时间。</target>
        </trans-unit>
        <trans-unit id="1b80281bb6fb3d4596fcd7b362d6ecddd2052fc4" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Enumerable.html#method-i-excluding&quot;&gt;&lt;code&gt;excluding&lt;/code&gt;&lt;/a&gt; returns a copy of an enumerable with the specified elements removed:</source>
          <target state="translated">&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Enumerable.html#method-i-excluding&quot;&gt; &lt;code&gt;excluding&lt;/code&gt; &lt;/a&gt;方法返回已删除指定元素的enumerable的副本：</target>
        </trans-unit>
        <trans-unit id="2a09a352614ac83f88a19a2b4fbddd78472bda89" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Enumerable.html#method-i-including&quot;&gt;&lt;code&gt;including&lt;/code&gt;&lt;/a&gt; returns a new enumerable that includes the passed elements:</source>
          <target state="translated">该方法&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Enumerable.html#method-i-including&quot;&gt; &lt;code&gt;including&lt;/code&gt; &lt;/a&gt;返回一个新的可枚举，其中包括传递的元素：</target>
        </trans-unit>
        <trans-unit id="4b6d0cfdbebf0ab3c55fdcef586069d11f968776" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Enumerable.html#method-i-index_by&quot;&gt;&lt;code&gt;index_by&lt;/code&gt;&lt;/a&gt; generates a hash with the elements of an enumerable indexed by some key.</source>
          <target state="translated">方法&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Enumerable.html#method-i-index_by&quot;&gt; &lt;code&gt;index_by&lt;/code&gt; &lt;/a&gt;生成具有由某个键索引的可枚举元素的哈希。</target>
        </trans-unit>
        <trans-unit id="ac63c0f10ceee6988f41a4c0e8a3c0c22f173476" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Enumerable.html#method-i-index_with&quot;&gt;&lt;code&gt;index_with&lt;/code&gt;&lt;/a&gt; generates a hash with the elements of an enumerable as keys. The value is either a passed default or returned in a block.</source>
          <target state="translated">方法&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Enumerable.html#method-i-index_with&quot;&gt; &lt;code&gt;index_with&lt;/code&gt; &lt;/a&gt;生成一个以枚举的元素为键的哈希。该值可以是传递的默认值，也可以是在块中返回的值。</target>
        </trans-unit>
        <trans-unit id="49039a23028677150f6fec3f16952f42c907275a" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Enumerable.html#method-i-many-3F&quot;&gt;&lt;code&gt;many?&lt;/code&gt;&lt;/a&gt; is shorthand for &lt;code&gt;collection.size &amp;gt; 1&lt;/code&gt;:</source>
          <target state="translated">方法&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Enumerable.html#method-i-many-3F&quot;&gt; &lt;code&gt;many?&lt;/code&gt; &lt;/a&gt;是 &lt;code&gt;collection.size &amp;gt; 1&lt;/code&gt; 简写：</target>
        </trans-unit>
        <trans-unit id="c4d868e6a4eb9fce227da49b321e5cf5c7948cb8" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Enumerable.html#method-i-pick&quot;&gt;&lt;code&gt;pick&lt;/code&gt;&lt;/a&gt; extracts the given key from the first element:</source>
          <target state="translated">方法&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Enumerable.html#method-i-pick&quot;&gt; &lt;code&gt;pick&lt;/code&gt; &lt;/a&gt;从第一个元素中提取给定的键：</target>
        </trans-unit>
        <trans-unit id="067cb0f562d830d4d67135591127ca2f21f24fed" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Enumerable.html#method-i-pluck&quot;&gt;&lt;code&gt;pluck&lt;/code&gt;&lt;/a&gt; extracts the given key from each element:</source>
          <target state="translated">该方法&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Enumerable.html#method-i-pluck&quot;&gt; &lt;code&gt;pluck&lt;/code&gt; &lt;/a&gt;从每个元素提取给定的键：</target>
        </trans-unit>
        <trans-unit id="7b5a526849a27f31a1962e9f3c08dd81c0bea1df" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Enumerable.html#method-i-sum&quot;&gt;&lt;code&gt;sum&lt;/code&gt;&lt;/a&gt; adds the elements of an enumerable:</source>
          <target state="translated">&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Enumerable.html#method-i-sum&quot;&gt; &lt;code&gt;sum&lt;/code&gt; &lt;/a&gt;方法增加了一个可枚举的元素：</target>
        </trans-unit>
        <trans-unit id="6c9ca080cc58756a3d47a0ed20beb1ffda36552b" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Hash.html#method-i-assert_valid_keys&quot;&gt;&lt;code&gt;assert_valid_keys&lt;/code&gt;&lt;/a&gt; receives an arbitrary number of arguments, and checks whether the receiver has any key outside that list. If it does &lt;code&gt;ArgumentError&lt;/code&gt; is raised.</source>
          <target state="translated">方法&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Hash.html#method-i-assert_valid_keys&quot;&gt; &lt;code&gt;assert_valid_keys&lt;/code&gt; &lt;/a&gt;接收任意数量的参数，并检查接收方是否在该列表之外有任何键。如果这样做，则会引发 &lt;code&gt;ArgumentError&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e39fb3197db6c4eca6513a55e9e4170d984b1c8f" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Hash.html#method-i-deep_dup&quot;&gt;&lt;code&gt;Hash#deep_dup&lt;/code&gt;&lt;/a&gt; duplicates itself and all keys and values inside recursively with Active Support method &lt;code&gt;Object#deep_dup&lt;/code&gt;. It works like &lt;code&gt;Enumerator#each_with_object&lt;/code&gt; with sending &lt;code&gt;deep_dup&lt;/code&gt; method to each pair inside.</source>
          <target state="translated">&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Hash.html#method-i-deep_dup&quot;&gt; &lt;code&gt;Hash#deep_dup&lt;/code&gt; &lt;/a&gt;方法使用Active Support方法 &lt;code&gt;Object#deep_dup&lt;/code&gt; 递归地复制自身以及其中的所有键和值。就像 &lt;code&gt;Enumerator#each_with_object&lt;/code&gt; 一样，向每个内部对发送 &lt;code&gt;deep_dup&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="ef1c7ff2c42fcd6ffca4211ce8c4aafdbc8ca006" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Hash.html#method-i-deep_merge-21&quot;&gt;&lt;code&gt;deep_merge!&lt;/code&gt;&lt;/a&gt; performs a deep merge in place.</source>
          <target state="translated">方法&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Hash.html#method-i-deep_merge-21&quot;&gt; &lt;code&gt;deep_merge!&lt;/code&gt; &lt;/a&gt;执行适当的深层合并。</target>
        </trans-unit>
        <trans-unit id="db56b2fbf9f7496ce388c67fa2491a432c560048" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Hash.html#method-i-deep_transform_values&quot;&gt;&lt;code&gt;deep_transform_values&lt;/code&gt;&lt;/a&gt; returns a new hash with all values converted by the block operation. This includes the values from the root hash and from all nested hashes and arrays.</source>
          <target state="translated">方法&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Hash.html#method-i-deep_transform_values&quot;&gt; &lt;code&gt;deep_transform_values&lt;/code&gt; &lt;/a&gt;返回一个新的哈希值，其中包含由块操作转换的所有值。这包括来自根哈希以及所有嵌套哈希和数组的值。</target>
        </trans-unit>
        <trans-unit id="33be23ac1f32f6d9010c22340202bc130db384ee" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Hash.html#method-i-except&quot;&gt;&lt;code&gt;except&lt;/code&gt;&lt;/a&gt; returns a hash with the keys in the argument list removed, if present:</source>
          <target state="translated">该方法&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Hash.html#method-i-except&quot;&gt; &lt;code&gt;except&lt;/code&gt; &lt;/a&gt;返回一个散列，其中删除了参数列表中的键（如果存在）：</target>
        </trans-unit>
        <trans-unit id="6490dc6ca0ea2e116d9ca4eb23f948822aacf23d" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Hash.html#method-i-extract-21&quot;&gt;&lt;code&gt;extract!&lt;/code&gt;&lt;/a&gt; removes and returns the key/value pairs matching the given keys.</source>
          <target state="translated">方法&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Hash.html#method-i-extract-21&quot;&gt; &lt;code&gt;extract!&lt;/code&gt; &lt;/a&gt;删除并返回与给定键匹配的键/值对。</target>
        </trans-unit>
        <trans-unit id="fade3e9adbec811dcd25983814a9bf033e16c62f" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Hash.html#method-i-reverse_update&quot;&gt;&lt;code&gt;reverse_update&lt;/code&gt;&lt;/a&gt; is an alias for &lt;code&gt;reverse_merge!&lt;/code&gt;, explained above.</source>
          <target state="translated">方法&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Hash.html#method-i-reverse_update&quot;&gt; &lt;code&gt;reverse_update&lt;/code&gt; &lt;/a&gt;是reverse_merge的别名 &lt;code&gt;reverse_merge!&lt;/code&gt; ，如上所述。</target>
        </trans-unit>
        <trans-unit id="35b414153ebbc60a3b64d13a1d98835966813d9f" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Hash.html#method-i-slice-21&quot;&gt;&lt;code&gt;slice!&lt;/code&gt;&lt;/a&gt; replaces the hash with only the given keys and returns a hash containing the removed key/value pairs.</source>
          <target state="translated">方法&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Hash.html#method-i-slice-21&quot;&gt; &lt;code&gt;slice!&lt;/code&gt; &lt;/a&gt;仅用给定的键替换哈希，并返回包含删除的键/值对的哈希。</target>
        </trans-unit>
        <trans-unit id="8b46983a719de51e4d19bef825a0edcf7d848670" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Hash.html#method-i-stringify_keys&quot;&gt;&lt;code&gt;stringify_keys&lt;/code&gt;&lt;/a&gt; returns a hash that has a stringified version of the keys in the receiver. It does so by sending &lt;code&gt;to_s&lt;/code&gt; to them:</source>
          <target state="translated">方法&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Hash.html#method-i-stringify_keys&quot;&gt; &lt;code&gt;stringify_keys&lt;/code&gt; &lt;/a&gt;返回一个哈希值，该哈希值具有接收方中密钥的字符串化版本。通过向他们发送 &lt;code&gt;to_s&lt;/code&gt; 来做到这一点：</target>
        </trans-unit>
        <trans-unit id="b5b9400ba7eec7cce0300dff6b1ddd2b1d82e8a1" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Hash.html#method-i-symbolize_keys&quot;&gt;&lt;code&gt;symbolize_keys&lt;/code&gt;&lt;/a&gt; returns a hash that has a symbolized version of the keys in the receiver, where possible. It does so by sending &lt;code&gt;to_sym&lt;/code&gt; to them:</source>
          <target state="translated">如果可能，方法&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Hash.html#method-i-symbolize_keys&quot;&gt; &lt;code&gt;symbolize_keys&lt;/code&gt; &lt;/a&gt;返回一个哈希值，该哈希值具有接收器中密钥的符号版本。通过向他们发送 &lt;code&gt;to_sym&lt;/code&gt; 来做到这一点：</target>
        </trans-unit>
        <trans-unit id="a947f9eb3846b0bdddd07f12c282763be5d6207d" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Hash.html#method-i-to_query&quot;&gt;&lt;code&gt;Hash#to_query&lt;/code&gt;&lt;/a&gt; accepts an optional namespace for the keys:</source>
          <target state="translated">方法&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Hash.html#method-i-to_query&quot;&gt; &lt;code&gt;Hash#to_query&lt;/code&gt; &lt;/a&gt;接受键的可选名称空间：</target>
        </trans-unit>
        <trans-unit id="31d153239a06048bedf1876d59d7c1af9d5a66c3" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Hash.html#method-i-to_xml&quot;&gt;&lt;code&gt;to_xml&lt;/code&gt;&lt;/a&gt; returns a string containing an XML representation of its receiver:</source>
          <target state="translated">方法&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Hash.html#method-i-to_xml&quot;&gt; &lt;code&gt;to_xml&lt;/code&gt; &lt;/a&gt;返回一个字符串，该字符串包含其接收者的XML表示形式：</target>
        </trans-unit>
        <trans-unit id="3ab0dde6e21a4d8de1002823763ee74238bd72b5" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Hash.html#method-i-with_indifferent_access&quot;&gt;&lt;code&gt;with_indifferent_access&lt;/code&gt;&lt;/a&gt; returns an &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveSupport/HashWithIndifferentAccess.html&quot;&gt;&lt;code&gt;ActiveSupport::HashWithIndifferentAccess&lt;/code&gt;&lt;/a&gt; out of its receiver:</source>
          <target state="translated">方法&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Hash.html#method-i-with_indifferent_access&quot;&gt; &lt;code&gt;with_indifferent_access&lt;/code&gt; &lt;/a&gt;从其接收者&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveSupport/HashWithIndifferentAccess.html&quot;&gt; &lt;code&gt;ActiveSupport::HashWithIndifferentAccess&lt;/code&gt; &lt;/a&gt;返回ActiveSupport :: HashWithIndifferentAccess：</target>
        </trans-unit>
        <trans-unit id="c728b859a01fd896b600648d1f5fd53efc1c894d" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Integer.html#method-i-multiple_of-3F&quot;&gt;&lt;code&gt;multiple_of?&lt;/code&gt;&lt;/a&gt; tests whether an integer is multiple of the argument:</source>
          <target state="translated">方法&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Integer.html#method-i-multiple_of-3F&quot;&gt; &lt;code&gt;multiple_of?&lt;/code&gt; &lt;/a&gt;测试整数是否为参数的倍数：</target>
        </trans-unit>
        <trans-unit id="629496f56548980ec7d8b63ec8d54512ed656f20" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Integer.html#method-i-ordinal&quot;&gt;&lt;code&gt;ordinal&lt;/code&gt;&lt;/a&gt; returns the ordinal suffix string corresponding to the receiver integer:</source>
          <target state="translated">&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Integer.html#method-i-ordinal&quot;&gt; &lt;code&gt;ordinal&lt;/code&gt; &lt;/a&gt;方法返回与接收方整数相对应的序数后缀字符串：</target>
        </trans-unit>
        <trans-unit id="7e852fe6e316d83ad3e1d9716154d2f4fd818712" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Integer.html#method-i-ordinalize&quot;&gt;&lt;code&gt;ordinalize&lt;/code&gt;&lt;/a&gt; returns the ordinal string corresponding to the receiver integer. In comparison, note that the &lt;code&gt;ordinal&lt;/code&gt; method returns &lt;strong&gt;only&lt;/strong&gt; the suffix string.</source>
          <target state="translated">&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Integer.html#method-i-ordinalize&quot;&gt; &lt;code&gt;ordinalize&lt;/code&gt; &lt;/a&gt;方法返回与接收方整数相对应的序数字符串。相比之下，请注意， &lt;code&gt;ordinal&lt;/code&gt; 方法&lt;strong&gt;仅&lt;/strong&gt;返回后缀字符串。</target>
        </trans-unit>
        <trans-unit id="8b7b6222edb5074fb9f1ab910e335ceeb413e25a" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Module.html#method-i-module_parents&quot;&gt;&lt;code&gt;module_parents&lt;/code&gt;&lt;/a&gt; calls &lt;code&gt;module_parent&lt;/code&gt; on the receiver and upwards until &lt;code&gt;Object&lt;/code&gt; is reached. The chain is returned in an array, from bottom to top:</source>
          <target state="translated">方法&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Module.html#method-i-module_parents&quot;&gt; &lt;code&gt;module_parents&lt;/code&gt; &lt;/a&gt;在接收器上向上调用 &lt;code&gt;module_parent&lt;/code&gt; ，直到到达 &lt;code&gt;Object&lt;/code&gt; 为止。链从下至上以数组形式返回：</target>
        </trans-unit>
        <trans-unit id="bb93589607ae29af34d998bb5eed6ffeb493d63c" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Module.html#method-i-redefine_method&quot;&gt;&lt;code&gt;redefine_method&lt;/code&gt;&lt;/a&gt; prevents such a potential warning, removing the existing method before if needed.</source>
          <target state="translated">方法&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Module.html#method-i-redefine_method&quot;&gt; &lt;code&gt;redefine_method&lt;/code&gt; &lt;/a&gt;防止了这种潜在的警告，如果需要，请先删除现有方法。</target>
        </trans-unit>
        <trans-unit id="1be34124f06e32daed96a1fbf94011dfc94fd3ae" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Object.html#method-i-acts_like-3F&quot;&gt;&lt;code&gt;acts_like?&lt;/code&gt;&lt;/a&gt; provides a way to check whether some class acts like some other class based on a simple convention: a class that provides the same interface as &lt;code&gt;String&lt;/code&gt; defines</source>
          <target state="translated">该方法&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Object.html#method-i-acts_like-3F&quot;&gt; &lt;code&gt;acts_like?&lt;/code&gt; &lt;/a&gt;提供了一种基于简单约定检查某些类是否与其他类类似的行为的方法：提供与 &lt;code&gt;String&lt;/code&gt; 定义相同的接口的类</target>
        </trans-unit>
        <trans-unit id="8e28f9efa48a8311d58b2d51671a5cff0b79b51b" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Object.html#method-i-instance_values&quot;&gt;&lt;code&gt;instance_values&lt;/code&gt;&lt;/a&gt; returns a hash that maps instance variable names without &quot;@&quot; to their corresponding values. Keys are strings:</source>
          <target state="translated">方法&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Object.html#method-i-instance_values&quot;&gt; &lt;code&gt;instance_values&lt;/code&gt; &lt;/a&gt;返回一个散列，该散列将没有&amp;ldquo; @&amp;rdquo;的实例变量名称映射到其对应的值。键是字符串：</target>
        </trans-unit>
        <trans-unit id="83778f8bb2b218390999a2216414d88765df2915" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Object.html#method-i-instance_variable_names&quot;&gt;&lt;code&gt;instance_variable_names&lt;/code&gt;&lt;/a&gt; returns an array. Each name includes the &quot;@&quot; sign.</source>
          <target state="translated">方法&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Object.html#method-i-instance_variable_names&quot;&gt; &lt;code&gt;instance_variable_names&lt;/code&gt; &lt;/a&gt;返回一个数组。每个名称都包含&amp;ldquo; @&amp;rdquo;符号。</target>
        </trans-unit>
        <trans-unit id="97593ca123b5fa134e1de89a1623369dfbe38b08" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Object.html#method-i-present-3F&quot;&gt;&lt;code&gt;present?&lt;/code&gt;&lt;/a&gt; is equivalent to &lt;code&gt;!blank?&lt;/code&gt;. This example is taken from &lt;code&gt;ActionDispatch::Http::Cache::Response&lt;/code&gt;:</source>
          <target state="translated">该方法&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Object.html#method-i-present-3F&quot;&gt; &lt;code&gt;present?&lt;/code&gt; &lt;/a&gt;等于 &lt;code&gt;!blank?&lt;/code&gt; 。这个例子来自 &lt;code&gt;ActionDispatch::Http::Cache::Response&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="b4d05db4a11b99876a5c2a16edcd12327922b2d2" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Object.html#method-i-with_options&quot;&gt;&lt;code&gt;with_options&lt;/code&gt;&lt;/a&gt; provides a way to factor out common options in a series of method calls.</source>
          <target state="translated">&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Object.html#method-i-with_options&quot;&gt; &lt;code&gt;with_options&lt;/code&gt; &lt;/a&gt;方法提供了一种在一系列方法调用中排除常见选项的方法。</target>
        </trans-unit>
        <trans-unit id="6f9c17b68b3afdf4396eabd741209a2dc4ba5802" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Range.html#method-i-overlaps-3F&quot;&gt;&lt;code&gt;Range#overlaps?&lt;/code&gt;&lt;/a&gt; says whether any two given ranges have non-void intersection:</source>
          <target state="translated">方法&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Range.html#method-i-overlaps-3F&quot;&gt; &lt;code&gt;Range#overlaps?&lt;/code&gt; &lt;/a&gt;表示是否有两个给定范围具有非无效交集：</target>
        </trans-unit>
        <trans-unit id="37eab709de9cd444dc9a168cede664380cbc58df" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Regexp.html#method-i-multiline-3F&quot;&gt;&lt;code&gt;multiline?&lt;/code&gt;&lt;/a&gt; says whether a regexp has the &lt;code&gt;/m&lt;/code&gt; flag set, that is, whether the dot matches newlines.</source>
          <target state="translated">方法&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Regexp.html#method-i-multiline-3F&quot;&gt; &lt;code&gt;multiline?&lt;/code&gt; &lt;/a&gt;表示正则表达式是否设置了 &lt;code&gt;/m&lt;/code&gt; 标志，即点是否与换行符匹配。</target>
        </trans-unit>
        <trans-unit id="25765e5be6305cd00889838f5f220713c979597a" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/String.html#method-i-camelize&quot;&gt;&lt;code&gt;camelize&lt;/code&gt;&lt;/a&gt; returns its receiver in camel case:</source>
          <target state="translated">&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/String.html#method-i-camelize&quot;&gt; &lt;code&gt;camelize&lt;/code&gt; &lt;/a&gt;方法在骆驼的情况下返回其接收者：</target>
        </trans-unit>
        <trans-unit id="10006c76f77637b0c12c06d471a11da83918cead" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/String.html#method-i-classify&quot;&gt;&lt;code&gt;classify&lt;/code&gt;&lt;/a&gt; is the inverse of &lt;code&gt;tableize&lt;/code&gt;. It gives you the class name corresponding to a table name:</source>
          <target state="translated">&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/String.html#method-i-classify&quot;&gt; &lt;code&gt;classify&lt;/code&gt; &lt;/a&gt;的方法是 &lt;code&gt;tableize&lt;/code&gt; 的逆。它为您提供与表名相对应的类名：</target>
        </trans-unit>
        <trans-unit id="81a2a0f4e6205fbf9a54f41a00af597eccd4db28" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/String.html#method-i-constantize&quot;&gt;&lt;code&gt;constantize&lt;/code&gt;&lt;/a&gt; resolves the constant reference expression in its receiver:</source>
          <target state="translated">&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/String.html#method-i-constantize&quot;&gt; &lt;code&gt;constantize&lt;/code&gt; &lt;/a&gt;量化方法在其接收器中解析常量引用表达式：</target>
        </trans-unit>
        <trans-unit id="7f370a448dc74955ff307f5132c85487f986fce2" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/String.html#method-i-dasherize&quot;&gt;&lt;code&gt;dasherize&lt;/code&gt;&lt;/a&gt; replaces the underscores in the receiver with dashes:</source>
          <target state="translated">&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/String.html#method-i-dasherize&quot;&gt; &lt;code&gt;dasherize&lt;/code&gt; &lt;/a&gt;方法用破折号替换接收器中的下划线：</target>
        </trans-unit>
        <trans-unit id="a6d0cf8fdd61c1b357d02992fa1a01b5f9ac5bbc" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/String.html#method-i-foreign_key&quot;&gt;&lt;code&gt;foreign_key&lt;/code&gt;&lt;/a&gt; gives a foreign key column name from a class name. To do so it demodulizes, underscores, and adds &quot;_id&quot;:</source>
          <target state="translated">&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/String.html#method-i-foreign_key&quot;&gt; &lt;code&gt;foreign_key&lt;/code&gt; &lt;/a&gt;方法从类名称中给出外键列名称。为此，它解调，加下划线并添加&amp;ldquo; _id&amp;rdquo;：</target>
        </trans-unit>
        <trans-unit id="afd665bdbb2f5cfcbf0161f40c174b33f22d5b58" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/String.html#method-i-humanize&quot;&gt;&lt;code&gt;humanize&lt;/code&gt;&lt;/a&gt; tweaks an attribute name for display to end users.</source>
          <target state="translated">该方法&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/String.html#method-i-humanize&quot;&gt; &lt;code&gt;humanize&lt;/code&gt; &lt;/a&gt;调整属性名称以显示给最终用户。</target>
        </trans-unit>
        <trans-unit id="86f7039fb2270b5e42f7ecdfcbb0befc1f15aa6b" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/String.html#method-i-parameterize&quot;&gt;&lt;code&gt;parameterize&lt;/code&gt;&lt;/a&gt; normalizes its receiver in a way that can be used in pretty URLs.</source>
          <target state="translated">&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/String.html#method-i-parameterize&quot;&gt; &lt;code&gt;parameterize&lt;/code&gt; &lt;/a&gt;化方法以一种可以在漂亮的URL中使用的方式对其接收器进行规范化。</target>
        </trans-unit>
        <trans-unit id="0336691ef81dccacdb120a7ca91df0c74effeb6f" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/String.html#method-i-pluralize&quot;&gt;&lt;code&gt;pluralize&lt;/code&gt;&lt;/a&gt; returns the plural of its receiver:</source>
          <target state="translated">&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/String.html#method-i-pluralize&quot;&gt; &lt;code&gt;pluralize&lt;/code&gt; &lt;/a&gt;方法返回其接收者的复数：</target>
        </trans-unit>
        <trans-unit id="80b6102669c6a659bf608e07041a3c518bad5567" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/String.html#method-i-remove&quot;&gt;&lt;code&gt;remove&lt;/code&gt;&lt;/a&gt; will remove all occurrences of the pattern:</source>
          <target state="translated">&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/String.html#method-i-remove&quot;&gt; &lt;code&gt;remove&lt;/code&gt; &lt;/a&gt;方法将删除所有出现的模式：</target>
        </trans-unit>
        <trans-unit id="c46836ff01da142902bf881767e118ccf1df1bc8" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/String.html#method-i-squish&quot;&gt;&lt;code&gt;squish&lt;/code&gt;&lt;/a&gt; strips leading and trailing whitespace, and substitutes runs of whitespace with a single space each:</source>
          <target state="translated">该方法&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/String.html#method-i-squish&quot;&gt; &lt;code&gt;squish&lt;/code&gt; &lt;/a&gt;前导空格和尾随空格，并用单个空格替换空白行：</target>
        </trans-unit>
        <trans-unit id="3c69b14879cb479c724cf35abbee1bf24245da29" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/String.html#method-i-strip_heredoc&quot;&gt;&lt;code&gt;strip_heredoc&lt;/code&gt;&lt;/a&gt; strips indentation in heredocs.</source>
          <target state="translated">方法&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/String.html#method-i-strip_heredoc&quot;&gt; &lt;code&gt;strip_heredoc&lt;/code&gt; 去除heredocs&lt;/a&gt;中的缩进。</target>
        </trans-unit>
        <trans-unit id="ddc2d54e3b46414455fe4e79fb39d04443de248b" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/String.html#method-i-tableize&quot;&gt;&lt;code&gt;tableize&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;underscore&lt;/code&gt; followed by &lt;code&gt;pluralize&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/String.html#method-i-tableize&quot;&gt; &lt;code&gt;tableize&lt;/code&gt; &lt;/a&gt;的方法是 &lt;code&gt;underscore&lt;/code&gt; 然后是 &lt;code&gt;pluralize&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d500c31ed587cc52ff907cedd5049f912cf7ea36" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/String.html#method-i-titleize&quot;&gt;&lt;code&gt;titleize&lt;/code&gt;&lt;/a&gt; capitalizes the words in the receiver:</source>
          <target state="translated">&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/String.html#method-i-titleize&quot;&gt; &lt;code&gt;titleize&lt;/code&gt; &lt;/a&gt;化方法将接收方中的单词大写：</target>
        </trans-unit>
        <trans-unit id="0d766d4ec220da853443cfb4af23b11a7e235fbd" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/String.html#method-i-truncate&quot;&gt;&lt;code&gt;truncate&lt;/code&gt;&lt;/a&gt; returns a copy of its receiver truncated after a given &lt;code&gt;length&lt;/code&gt;:</source>
          <target state="translated">&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/String.html#method-i-truncate&quot;&gt; &lt;code&gt;truncate&lt;/code&gt; &lt;/a&gt;方法返回给定 &lt;code&gt;length&lt;/code&gt; 后被截断的接收者的副本：</target>
        </trans-unit>
        <trans-unit id="5f5cf95e1c9f81af90ce3b38f1c3f8ba6aa4cefe" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/String.html#method-i-truncate_bytes&quot;&gt;&lt;code&gt;truncate_bytes&lt;/code&gt;&lt;/a&gt; returns a copy of its receiver truncated to at most &lt;code&gt;bytesize&lt;/code&gt; bytes:</source>
          <target state="translated">&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/String.html#method-i-truncate_bytes&quot;&gt; &lt;code&gt;truncate_bytes&lt;/code&gt; &lt;/a&gt;方法返回其接收者的副本，该副本的副本被截断为最多字节 &lt;code&gt;bytesize&lt;/code&gt; 字节：</target>
        </trans-unit>
        <trans-unit id="f39ec5a8e52e6f9f7ec6de6443711ad7c9d8e4aa" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/String.html#method-i-truncate_words&quot;&gt;&lt;code&gt;truncate_words&lt;/code&gt;&lt;/a&gt; returns a copy of its receiver truncated after a given number of words:</source>
          <target state="translated">&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/String.html#method-i-truncate_words&quot;&gt; &lt;code&gt;truncate_words&lt;/code&gt; &lt;/a&gt;方法返回给定数目的单词后被截断的接收者的副本：</target>
        </trans-unit>
        <trans-unit id="e98455a7f0340463fe249c782e9664af3346ee03" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/String.html#method-i-underscore&quot;&gt;&lt;code&gt;underscore&lt;/code&gt;&lt;/a&gt; goes the other way around, from camel case to paths:</source>
          <target state="translated">方法&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/String.html#method-i-underscore&quot;&gt; &lt;code&gt;underscore&lt;/code&gt; &lt;/a&gt;从驼峰到路径都是相反的：</target>
        </trans-unit>
        <trans-unit id="e32772287becf00004ac3c06bca75256d6389810" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;Array#deep_dup&lt;/code&gt; duplicates itself and all objects inside recursively with Active Support method &lt;code&gt;Object#deep_dup&lt;/code&gt;. It works like &lt;code&gt;Array#map&lt;/code&gt; with sending &lt;code&gt;deep_dup&lt;/code&gt; method to each object inside.</source>
          <target state="translated">&lt;code&gt;Array#deep_dup&lt;/code&gt; 方法使用Active Support方法 &lt;code&gt;Object#deep_dup&lt;/code&gt; 递归地复制自身和其中的所有对象。它就像 &lt;code&gt;Array#map&lt;/code&gt; 一样，向每个内部对象发送 &lt;code&gt;deep_dup&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="c1e33e74fb4fd7f607ac4ec9c062ba47e1d98a83" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;Array.wrap&lt;/code&gt; wraps its argument in an array unless it is already an array (or array-like).</source>
          <target state="translated">除非方法已经是数组（或类似数组的方法）， &lt;code&gt;Array.wrap&lt;/code&gt; 方法会将其参数包装在数组中。</target>
        </trans-unit>
        <trans-unit id="d6b82f431ad6d4eddf847396d46b04b6fd616ec1" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;Hash#deep_dup&lt;/code&gt; duplicates itself and all keys and values inside recursively with Active Support method &lt;code&gt;Object#deep_dup&lt;/code&gt;. It works like &lt;code&gt;Enumerator#each_with_object&lt;/code&gt; with sending &lt;code&gt;deep_dup&lt;/code&gt; method to each pair inside.</source>
          <target state="translated">&lt;code&gt;Hash#deep_dup&lt;/code&gt; 方法使用Active Support方法 &lt;code&gt;Object#deep_dup&lt;/code&gt; 递归地复制自身以及其中的所有键和值。就像 &lt;code&gt;Enumerator#each_with_object&lt;/code&gt; 一样，向每个内部对发送 &lt;code&gt;deep_dup&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="7de965296f37e83a90fa8fad4aeb58775b5f8602" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;Hash#to_query&lt;/code&gt; accepts an optional namespace for the keys:</source>
          <target state="translated">方法 &lt;code&gt;Hash#to_query&lt;/code&gt; 接受键的可选名称空间：</target>
        </trans-unit>
        <trans-unit id="d0eeaa0bdef1015a3d295e8021c903df196a0661" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;Range#overlaps?&lt;/code&gt; says whether any two given ranges have non-void intersection:</source>
          <target state="translated">方法 &lt;code&gt;Range#overlaps?&lt;/code&gt; 表示是否有两个给定范围具有非无效交集：</target>
        </trans-unit>
        <trans-unit id="2179f3488c189a7d1b1ae889f5df7a90d0add093" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;acts_like?&lt;/code&gt; provides a way to check whether some class acts like some other class based on a simple convention: a class that provides the same interface as &lt;code&gt;String&lt;/code&gt; defines</source>
          <target state="translated">方法 &lt;code&gt;acts_like?&lt;/code&gt; 提供一种方法来根据简单约定检查某些类是否像其他类一样工作：提供与 &lt;code&gt;String&lt;/code&gt; 定义相同的接口的类</target>
        </trans-unit>
        <trans-unit id="3f8c125e2741bd24b350323c120868d16ec18dbf" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;advance&lt;/code&gt; advances first one month, and then one day, the result is:</source>
          <target state="translated">该方法 &lt;code&gt;advance&lt;/code&gt; 一个月，然后进行一天，结果为：</target>
        </trans-unit>
        <trans-unit id="552f54883f3f33b594f06d41ba5b2220bba8453d" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;ago&lt;/code&gt; receives a number of seconds as argument and returns a timestamp those many seconds ago from midnight:</source>
          <target state="translated">该方法 &lt;code&gt;ago&lt;/code&gt; 收到了几秒钟作为参数，并返回了午夜之前几秒钟的时间戳：</target>
        </trans-unit>
        <trans-unit id="8f2e4acf7ddddd85645952fc4aa279e137c99b5a" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;all_day&lt;/code&gt; returns a range representing the whole day of the current time.</source>
          <target state="translated">&lt;code&gt;all_day&lt;/code&gt; 方法返回一个表示当前时间的全天范围。</target>
        </trans-unit>
        <trans-unit id="541b5c428abe6077b2427df44c06151cabbe2505" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;assert_valid_keys&lt;/code&gt; receives an arbitrary number of arguments, and checks whether the receiver has any key outside that white list. If it does &lt;code&gt;ArgumentError&lt;/code&gt; is raised.</source>
          <target state="translated">方法 &lt;code&gt;assert_valid_keys&lt;/code&gt; 接收任意数量的参数，并检查接收方是否在该白名单之外有任何密钥。如果这样做，则会引发 &lt;code&gt;ArgumentError&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="91964bd2587b244f8090ac94f24f6de56fc458e7" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;beginning_of_day&lt;/code&gt; returns a timestamp at the beginning of the day (00:00:00):</source>
          <target state="translated">该方法 &lt;code&gt;beginning_of_day&lt;/code&gt; 返回在一天（00:00:00）开始时的时间戳：</target>
        </trans-unit>
        <trans-unit id="e085bbffe1ea485f880a3af6f70c393c243f7720" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;beginning_of_hour&lt;/code&gt; returns a timestamp at the beginning of the hour (hh:00:00):</source>
          <target state="translated">该方法 &lt;code&gt;beginning_of_hour&lt;/code&gt; 在小时（：00：00 HH）的开始返回一个时间戳：</target>
        </trans-unit>
        <trans-unit id="f577d04c9de8bcd3e4d8ba5950192cbedbcd4c33" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;beginning_of_minute&lt;/code&gt; returns a timestamp at the beginning of the minute (hh:mm:00):</source>
          <target state="translated">方法 &lt;code&gt;beginning_of_minute&lt;/code&gt; 返回分钟的开始时间戳（hh：mm：00）：</target>
        </trans-unit>
        <trans-unit id="c36a6bddcb246413376decd5b3e385ac52a3c55d" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;camelize&lt;/code&gt; returns its receiver in camel case:</source>
          <target state="translated">&lt;code&gt;camelize&lt;/code&gt; 方法在骆驼的情况下返回其接收者：</target>
        </trans-unit>
        <trans-unit id="50d58e637eefa0c2f54a8097a5a26358508ed881" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;change&lt;/code&gt; allows you to get a new date which is the same as the receiver except for the given year, month, or day:</source>
          <target state="translated">&lt;code&gt;change&lt;/code&gt; 方法可以使您获得一个与接收者相同的新日期，但给定的年，月或日除外：</target>
        </trans-unit>
        <trans-unit id="c1693ffe243f5ff35dd83e523a87b2b0e6b7ce09" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;change&lt;/code&gt; allows you to get a new datetime which is the same as the receiver except for the given options, which may include &lt;code&gt;:year&lt;/code&gt;, &lt;code&gt;:month&lt;/code&gt;, &lt;code&gt;:day&lt;/code&gt;, &lt;code&gt;:hour&lt;/code&gt;, &lt;code&gt;:min&lt;/code&gt;, &lt;code&gt;:sec&lt;/code&gt;, &lt;code&gt;:offset&lt;/code&gt;, &lt;code&gt;:start&lt;/code&gt;:</source>
          <target state="translated">方法 &lt;code&gt;change&lt;/code&gt; 允许您获得与接收者相同的新日期时间，除了给定的选项，其中可能包括 &lt;code&gt;:year&lt;/code&gt; ， &lt;code&gt;:month&lt;/code&gt; ， &lt;code&gt;:day&lt;/code&gt; ， &lt;code&gt;:hour&lt;/code&gt; ， &lt;code&gt;:min&lt;/code&gt; ， &lt;code&gt;:sec&lt;/code&gt; ， &lt;code&gt;:offset&lt;/code&gt; ， &lt;code&gt;:start&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="c90aa7f827d4f56fea49a7ae34641b299c94c4bd" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;class_attribute&lt;/code&gt; declares one or more inheritable class attributes that can be overridden at any level down the hierarchy.</source>
          <target state="translated">方法 &lt;code&gt;class_attribute&lt;/code&gt; 声明一个或多个可继承的类属性，这些属性可以在层次结构中的任何级别上被覆盖。</target>
        </trans-unit>
        <trans-unit id="c9e96da64b1b8279c4e0994f0fb0a8adae7dac72" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;classify&lt;/code&gt; is the inverse of &lt;code&gt;tableize&lt;/code&gt;. It gives you the class name corresponding to a table name:</source>
          <target state="translated">&lt;code&gt;classify&lt;/code&gt; 方法是 &lt;code&gt;tableize&lt;/code&gt; 的逆方法。它为您提供与表名相对应的类名：</target>
        </trans-unit>
        <trans-unit id="078c50f28bde0d9e8cd63a6c910aaaf2320cfc2f" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;constantize&lt;/code&gt; resolves the constant reference expression in its receiver:</source>
          <target state="translated">&lt;code&gt;constantize&lt;/code&gt; 量化方法在其接收器中解析常量引用表达式：</target>
        </trans-unit>
        <trans-unit id="357988408dbb70c115cb0dfc7514cae03b651c01" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;dasherize&lt;/code&gt; replaces the underscores in the receiver with dashes:</source>
          <target state="translated">&lt;code&gt;dasherize&lt;/code&gt; 方法用破折号替换接收器中的下划线：</target>
        </trans-unit>
        <trans-unit id="e211c70f6c4329e28772a26b56c394e16d3ce068" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;deep_merge!&lt;/code&gt; performs a deep merge in place.</source>
          <target state="translated">方法 &lt;code&gt;deep_merge!&lt;/code&gt; 执行适当的深度合并。</target>
        </trans-unit>
        <trans-unit id="d78f3750e4c5052b90fcbd5bea5e723036a174b5" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;end_of_day&lt;/code&gt; returns a timestamp at the end of the day (23:59:59):</source>
          <target state="translated">&lt;code&gt;end_of_day&lt;/code&gt; 方法在一天结束时（23:59:59）返回时间戳：</target>
        </trans-unit>
        <trans-unit id="d46bf9d09c3a7c7fd408440a7e9a40f95118e29f" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;end_of_hour&lt;/code&gt; returns a timestamp at the end of the hour (hh:59:59):</source>
          <target state="translated">方法 &lt;code&gt;end_of_hour&lt;/code&gt; 返回小时结束时的时间戳（hh：59：59）：</target>
        </trans-unit>
        <trans-unit id="de74d561fab3abfbd50e4756cde750b0a3935f48" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;end_of_minute&lt;/code&gt; returns a timestamp at the end of the minute (hh:mm:59):</source>
          <target state="translated">方法 &lt;code&gt;end_of_minute&lt;/code&gt; 在分钟结束时（hh：mm：59）返回时间戳：</target>
        </trans-unit>
        <trans-unit id="0b221ae8dbe130744caad5199d2d97fbc76c565f" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;except&lt;/code&gt; returns a hash with the keys in the argument list removed, if present:</source>
          <target state="translated">该方法 &lt;code&gt;except&lt;/code&gt; 返回一个散列，其中删除了参数列表中的键（如果存在）：</target>
        </trans-unit>
        <trans-unit id="aaf6f40b5a5a4af9d91c806cce7c3bbcea4835d2" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;extract!&lt;/code&gt; removes and returns the elements for which the block returns a true value. If no block is given, an Enumerator is returned instead.</source>
          <target state="translated">方法 &lt;code&gt;extract!&lt;/code&gt; 删除并返回该块为其返回真值的元素。如果没有给出块，则返回一个枚举器。</target>
        </trans-unit>
        <trans-unit id="99ed6b8b4541116327e8d0e7a6633713b0532871" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;extract!&lt;/code&gt; removes and returns the key/value pairs matching the given keys.</source>
          <target state="translated">方法 &lt;code&gt;extract!&lt;/code&gt; 删除并返回与给定键匹配的键/值对。</target>
        </trans-unit>
        <trans-unit id="0741247d19b528e9a12214261ac26cb44b6ed1c7" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;extract!&lt;/code&gt; returns the same subclass of Hash that the receiver is.</source>
          <target state="translated">方法 &lt;code&gt;extract!&lt;/code&gt; 返回与接收者相同的Hash子类。</target>
        </trans-unit>
        <trans-unit id="ea9f782cf4d463d7fa0c6babbe898a4179c215a0" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;extract!&lt;/code&gt; returns the same subclass of Hash, that the receiver is.</source>
          <target state="translated">方法 &lt;code&gt;extract!&lt;/code&gt; 返回与接收者相同的Hash子类。</target>
        </trans-unit>
        <trans-unit id="2ff5d88d672e86390c7f851883bc096da7e53d01" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;foreign_key&lt;/code&gt; gives a foreign key column name from a class name. To do so it demodulizes, underscores, and adds &quot;_id&quot;:</source>
          <target state="translated">&lt;code&gt;foreign_key&lt;/code&gt; 方法从类名称中给出外键列名称。为此，它解调，加下划线并添加&amp;ldquo; _id&amp;rdquo;：</target>
        </trans-unit>
        <trans-unit id="e7a5c875313a703800a91a074d810febde910dd4" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;humanize&lt;/code&gt; tweaks an attribute name for display to end users.</source>
          <target state="translated">该方法 &lt;code&gt;humanize&lt;/code&gt; 调整属性名称以显示给最终用户。</target>
        </trans-unit>
        <trans-unit id="fb26c0817d6731204de3f5269480a99a26d221bd" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;in_groups&lt;/code&gt; splits an array into a certain number of groups. The method returns an array with the groups:</source>
          <target state="translated">&lt;code&gt;in_groups&lt;/code&gt; 方法将数组拆分为一定数量的组。该方法返回具有组的数组：</target>
        </trans-unit>
        <trans-unit id="bcda912a9181a0c10cda3df95ea77faada8fc3fd" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;in_groups_of&lt;/code&gt; splits an array into consecutive groups of a certain size. It returns an array with the groups:</source>
          <target state="translated">&lt;code&gt;in_groups_of&lt;/code&gt; 方法将数组拆分为一定大小的连续组。它返回带有组的数组：</target>
        </trans-unit>
        <trans-unit id="435c8a187b47719a1cd22951879b4182144227d5" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;index_by&lt;/code&gt; generates a hash with the elements of an enumerable indexed by some key.</source>
          <target state="translated">方法 &lt;code&gt;index_by&lt;/code&gt; 生成具有由某个键索引的可枚举元素的哈希。</target>
        </trans-unit>
        <trans-unit id="da8b1a27cc1c31e946af6fde23476e92ede82db2" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;index_with&lt;/code&gt; generates a hash with the elements of an enumerable as keys. The value is either a passed default or returned in a block.</source>
          <target state="translated">方法 &lt;code&gt;index_with&lt;/code&gt; 生成一个以枚举的元素为键的哈希。该值可以是传递的默认值，也可以是在块中返回的值。</target>
        </trans-unit>
        <trans-unit id="d1f20a3ddef2c375b761522691412f7214b57d0f" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;instance_values&lt;/code&gt; returns a hash that maps instance variable names without &quot;@&quot; to their corresponding values. Keys are strings:</source>
          <target state="translated">方法 &lt;code&gt;instance_values&lt;/code&gt; 返回一个散列，该散列将没有&amp;ldquo; @&amp;rdquo;的实例变量名称映射到其对应的值。键是字符串：</target>
        </trans-unit>
        <trans-unit id="c321602f17827d8217a980646e121648d496bb1c" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;instance_variable_names&lt;/code&gt; returns an array. Each name includes the &quot;@&quot; sign.</source>
          <target state="translated">方法 &lt;code&gt;instance_variable_names&lt;/code&gt; 返回一个数组。每个名称都包含&amp;ldquo; @&amp;rdquo;符号。</target>
        </trans-unit>
        <trans-unit id="20ff505780bbd3782af13427c34a1855014975cb" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;many?&lt;/code&gt; is shorthand for &lt;code&gt;collection.size &amp;gt; 1&lt;/code&gt;:</source>
          <target state="translated">方法 &lt;code&gt;many?&lt;/code&gt; 是 &lt;code&gt;collection.size &amp;gt; 1&lt;/code&gt; 简写：</target>
        </trans-unit>
        <trans-unit id="bb55847e5bf51aa79a7903f73ec506aacf7196a6" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;module_parents&lt;/code&gt; calls &lt;code&gt;module_parent&lt;/code&gt; on the receiver and upwards until &lt;code&gt;Object&lt;/code&gt; is reached. The chain is returned in an array, from bottom to top:</source>
          <target state="translated">方法 &lt;code&gt;module_parents&lt;/code&gt; 在接收器上向上调用 &lt;code&gt;module_parent&lt;/code&gt; ，直到到达 &lt;code&gt;Object&lt;/code&gt; 为止。该链从下至上以数组形式返回：</target>
        </trans-unit>
        <trans-unit id="6089bffe83adf640f1613660fa0462ada9ab1360" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;multiline?&lt;/code&gt; says whether a regexp has the &lt;code&gt;/m&lt;/code&gt; flag set, that is, whether the dot matches newlines.</source>
          <target state="translated">方法 &lt;code&gt;multiline?&lt;/code&gt; 表示正则表达式是否设置了 &lt;code&gt;/m&lt;/code&gt; 标志，即点是否与换行符匹配。</target>
        </trans-unit>
        <trans-unit id="b85ea67c1af5da35bcf6a98d0598b5cd5fe12943" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;multiple_of?&lt;/code&gt; tests whether an integer is multiple of the argument:</source>
          <target state="translated">方法 &lt;code&gt;multiple_of?&lt;/code&gt; 测试整数是否为参数的倍数：</target>
        </trans-unit>
        <trans-unit id="f15df0993a61ed439f2d1c9e3f00efd157cf7c77" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;next_week&lt;/code&gt; receives a symbol with a day name in English (default is the thread local &lt;code&gt;Date.beginning_of_week&lt;/code&gt;, or &lt;code&gt;config.beginning_of_week&lt;/code&gt;, or &lt;code&gt;:monday&lt;/code&gt;) and it returns the date corresponding to that day.</source>
          <target state="translated">方法 &lt;code&gt;next_week&lt;/code&gt; 接收带有英文日期名称的符号（默认为本地线程 &lt;code&gt;Date.beginning_of_week&lt;/code&gt; 或 &lt;code&gt;config.beginning_of_week&lt;/code&gt; 或 &lt;code&gt;:monday&lt;/code&gt; ），并返回与该日期相对应的日期。</target>
        </trans-unit>
        <trans-unit id="a33b8ded9323df6fd86cb09ff5d011f7e28769a0" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;ordinal&lt;/code&gt; returns the ordinal suffix string corresponding to the receiver integer:</source>
          <target state="translated">&lt;code&gt;ordinal&lt;/code&gt; 方法返回与接收方整数对应的序数后缀字符串：</target>
        </trans-unit>
        <trans-unit id="d1761b81eab5a13ce24b2d3f37ede256550af29c" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;ordinalize&lt;/code&gt; returns the ordinal string corresponding to the receiver integer. In comparison, note that the &lt;code&gt;ordinal&lt;/code&gt; method returns &lt;strong&gt;only&lt;/strong&gt; the suffix string.</source>
          <target state="translated">&lt;code&gt;ordinalize&lt;/code&gt; 方法返回与接收方整数相对应的序数字符串。相比之下，请注意， &lt;code&gt;ordinal&lt;/code&gt; 方法&lt;strong&gt;仅&lt;/strong&gt;返回后缀字符串。</target>
        </trans-unit>
        <trans-unit id="97392ecc57bbe19c9ee47fe2e7e60d101f006c2d" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;parameterize&lt;/code&gt; normalizes its receiver in a way that can be used in pretty URLs.</source>
          <target state="translated">&lt;code&gt;parameterize&lt;/code&gt; 化方法以一种可以在漂亮的URL中使用的方式对其接收器进行规范化。</target>
        </trans-unit>
        <trans-unit id="6e7420cd00a473a7a6d8483f9261f0ddfd51a128" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;pluck&lt;/code&gt; returns an array based on the given key:</source>
          <target state="translated">&lt;code&gt;pluck&lt;/code&gt; 方法基于给定的键返回一个数组：</target>
        </trans-unit>
        <trans-unit id="9ee6516c7f56f1ba0ed077fbc2e7db598686ac08" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;pluralize&lt;/code&gt; returns the plural of its receiver:</source>
          <target state="translated">&lt;code&gt;pluralize&lt;/code&gt; 方法返回其接收者的复数：</target>
        </trans-unit>
        <trans-unit id="41bb7c4e58183037bcfd42551f575ed0b14097d0" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;present?&lt;/code&gt; is equivalent to &lt;code&gt;!blank?&lt;/code&gt;. This example is taken from &lt;code&gt;ActionDispatch::Http::Cache::Response&lt;/code&gt;:</source>
          <target state="translated">该方法 &lt;code&gt;present?&lt;/code&gt; 等于 &lt;code&gt;!blank?&lt;/code&gt; 。这个例子来自 &lt;code&gt;ActionDispatch::Http::Cache::Response&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="b91d6be6b7e138a340af57a72512784b971a9ee1" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;prev_week&lt;/code&gt; is analogous:</source>
          <target state="translated">方法 &lt;code&gt;prev_week&lt;/code&gt; 类似于：</target>
        </trans-unit>
        <trans-unit id="f12cfe07736bb5bbc05da705235c306e033463f5" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;redefine_method&lt;/code&gt; prevents such a potential warning, removing the existing method before if needed.</source>
          <target state="translated">方法 &lt;code&gt;redefine_method&lt;/code&gt; 防止了这种潜在的警告，如果需要，请先删除现有方法。</target>
        </trans-unit>
        <trans-unit id="dd8539a782376af5d21222e2cb75190799a1d16b" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;remove&lt;/code&gt; will remove all occurrences of the pattern:</source>
          <target state="translated">&lt;code&gt;remove&lt;/code&gt; 方法将删除所有出现的模式：</target>
        </trans-unit>
        <trans-unit id="387ce0f8010addda4cde39eee52ccea1d12762fd" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;reverse_update&lt;/code&gt; is an alias for &lt;code&gt;reverse_merge!&lt;/code&gt;, explained above.</source>
          <target state="translated">方法 &lt;code&gt;reverse_update&lt;/code&gt; 是reverse_merge的别名 &lt;code&gt;reverse_merge!&lt;/code&gt; ，如上所述。</target>
        </trans-unit>
        <trans-unit id="ff4b75d9e257aba1e8fc283a1b01585233e460b4" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;seconds_since_midnight&lt;/code&gt; returns the number of seconds since midnight:</source>
          <target state="translated">&lt;code&gt;seconds_since_midnight&lt;/code&gt; 方法返回自午夜以来的秒数：</target>
        </trans-unit>
        <trans-unit id="4a0dfce079234958f39d2ac44a20f44086af21e6" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;slice!&lt;/code&gt; replaces the hash with only the given keys and returns a hash containing the removed key/value pairs.</source>
          <target state="translated">方法 &lt;code&gt;slice!&lt;/code&gt; 仅用给定的键替换哈希，并返回包含已删除键/值对的哈希。</target>
        </trans-unit>
        <trans-unit id="115efaa72ec871de6e14307a19a958b113979000" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;split&lt;/code&gt; divides an array by a separator and returns the resulting chunks.</source>
          <target state="translated">该方法 &lt;code&gt;split&lt;/code&gt; 用分隔符对数组进行划分，并返回结果块​​。</target>
        </trans-unit>
        <trans-unit id="706387e27a1798aff7654f080c37fe4327344e38" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;squish&lt;/code&gt; strips leading and trailing whitespace, and substitutes runs of whitespace with a single space each:</source>
          <target state="translated">该方法 &lt;code&gt;squish&lt;/code&gt; 前导空格和尾随空格，并用单个空格替换空白行：</target>
        </trans-unit>
        <trans-unit id="f0869d8f033f9cae7ed0fb46925e26e58694dd80" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;stringify_keys&lt;/code&gt; returns a hash that has a stringified version of the keys in the receiver. It does so by sending &lt;code&gt;to_s&lt;/code&gt; to them:</source>
          <target state="translated">方法 &lt;code&gt;stringify_keys&lt;/code&gt; 返回一个哈希值，该哈希值具有接收方中密钥的字符串化版本。通过向他们发送 &lt;code&gt;to_s&lt;/code&gt; 来做到这一点：</target>
        </trans-unit>
        <trans-unit id="a2a91721cba9308202438adc6d39cc57e1518bfd" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;strip_heredoc&lt;/code&gt; strips indentation in heredocs.</source>
          <target state="translated">方法 &lt;code&gt;strip_heredoc&lt;/code&gt; 去除heredocs中的缩进。</target>
        </trans-unit>
        <trans-unit id="c0907a71fc4ec4c8ff7e86f4c1da60f559bdf3f6" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;sum&lt;/code&gt; adds the elements of an enumerable:</source>
          <target state="translated">&lt;code&gt;sum&lt;/code&gt; 方法增加了一个可枚举的元素：</target>
        </trans-unit>
        <trans-unit id="bcd37680102e0da1447d329b81f3e01b33deeae9" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;symbolize_keys&lt;/code&gt; returns a hash that has a symbolized version of the keys in the receiver, where possible. It does so by sending &lt;code&gt;to_sym&lt;/code&gt; to them:</source>
          <target state="translated">如果可能，方法 &lt;code&gt;symbolize_keys&lt;/code&gt; 返回一个哈希值，该哈希值具有接收器中密钥的符号版本。通过向他们发送 &lt;code&gt;to_sym&lt;/code&gt; 来做到这一点：</target>
        </trans-unit>
        <trans-unit id="bd6b9963429952cd5d8efa1a81a122b83c576304" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;tableize&lt;/code&gt; is &lt;code&gt;underscore&lt;/code&gt; followed by &lt;code&gt;pluralize&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;tableize&lt;/code&gt; 的方法是 &lt;code&gt;underscore&lt;/code&gt; 然后是 &lt;code&gt;pluralize&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4811f4d445cab7099f3493b7e741d51ccb0dfb69" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;titleize&lt;/code&gt; capitalizes the words in the receiver:</source>
          <target state="translated">&lt;code&gt;titleize&lt;/code&gt; 化方法将接收方中的单词大写：</target>
        </trans-unit>
        <trans-unit id="b25ddab50687e5e7168c2e3221c5982ea48aaa35" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;to_formatted_s&lt;/code&gt; acts like &lt;code&gt;to_s&lt;/code&gt; by default.</source>
          <target state="translated">默认情况下，方法 &lt;code&gt;to_formatted_s&lt;/code&gt; 的行为类似于 &lt;code&gt;to_s&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2800ff6f2b96de9b72d620a5f58ae1e0841c919b" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;to_s&lt;/code&gt; provides a default specifier of &quot;F&quot;. This means that a simple call to &lt;code&gt;to_s&lt;/code&gt; will result in floating point representation instead of engineering notation:</source>
          <target state="translated">方法 &lt;code&gt;to_s&lt;/code&gt; 提供默认的说明符&amp;ldquo; F&amp;rdquo;。这意味着对 &lt;code&gt;to_s&lt;/code&gt; 的简单调用将导致浮点表示而不是工程表示法：</target>
        </trans-unit>
        <trans-unit id="b7c050e5958ce1fe8f9c1bab0bac53bdcf120f3c" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;to_sentence&lt;/code&gt; turns an array into a string containing a sentence that enumerates its items:</source>
          <target state="translated">方法 &lt;code&gt;to_sentence&lt;/code&gt; 将数组转换为字符串，该字符串包含一个枚举其项的句子：</target>
        </trans-unit>
        <trans-unit id="2524a9e324636fcdd082cb9a29ef299c0ddea118" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;to_xml&lt;/code&gt; returns a string containing an XML representation of its receiver:</source>
          <target state="translated">方法 &lt;code&gt;to_xml&lt;/code&gt; 返回一个字符串，该字符串包含其接收者的XML表示形式：</target>
        </trans-unit>
        <trans-unit id="59c0bc92f01100a9cc031a421d333b37a09ddef7" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;truncate&lt;/code&gt; returns a copy of its receiver truncated after a given &lt;code&gt;length&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;truncate&lt;/code&gt; 方法返回给定 &lt;code&gt;length&lt;/code&gt; 后被截断的接收者的副本：</target>
        </trans-unit>
        <trans-unit id="b1562a387389afb4f581f9b1a1ebd89caf5ecb3c" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;truncate_words&lt;/code&gt; returns a copy of its receiver truncated after a given number of words:</source>
          <target state="translated">&lt;code&gt;truncate_words&lt;/code&gt; 方法返回给定数目的单词后被截断的接收者的副本：</target>
        </trans-unit>
        <trans-unit id="770445ffcdb5e5d9f57ab10d842bffa5bd0051ec" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;underscore&lt;/code&gt; goes the other way around, from camel case to paths:</source>
          <target state="translated">方法 &lt;code&gt;underscore&lt;/code&gt; 从驼峰到路径都是相反的：</target>
        </trans-unit>
        <trans-unit id="c982543515f1362bd3befc11f73b8e85e6f34c9f" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;utc&lt;/code&gt; gives you the same datetime in the receiver expressed in UTC.</source>
          <target state="translated">&lt;code&gt;utc&lt;/code&gt; 方法为您提供了以UTC表示的接收器中相同的日期时间。</target>
        </trans-unit>
        <trans-unit id="a3ce902d2fa93d5680d9025389c8b3d49da865a6" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;weeks_ago&lt;/code&gt; works analogously for weeks:</source>
          <target state="translated">类似的方法 &lt;code&gt;weeks_ago&lt;/code&gt; 工作数周：</target>
        </trans-unit>
        <trans-unit id="38036a1b218f762f72707ab93f3b1ac4c75cc41e" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;welcome_email&lt;/code&gt; returns an &lt;code&gt;ActionMailer::MessageDelivery&lt;/code&gt; object which can then be told to &lt;code&gt;deliver_now&lt;/code&gt; or &lt;code&gt;deliver_later&lt;/code&gt; to send itself out. The &lt;code&gt;ActionMailer::MessageDelivery&lt;/code&gt; object is a wrapper around a &lt;code&gt;Mail::Message&lt;/code&gt;. If you want to inspect, alter, or do anything else with the &lt;code&gt;Mail::Message&lt;/code&gt; object you can access it with the &lt;code&gt;message&lt;/code&gt; method on the &lt;code&gt;ActionMailer::MessageDelivery&lt;/code&gt; object.</source>
          <target state="translated">方法 &lt;code&gt;welcome_email&lt;/code&gt; 返回一个 &lt;code&gt;ActionMailer::MessageDelivery&lt;/code&gt; 对象，然后可以通知该对象提供 &lt;code&gt;deliver_now&lt;/code&gt; 或 &lt;code&gt;deliver_later&lt;/code&gt; 进行发送。该 &lt;code&gt;ActionMailer::MessageDelivery&lt;/code&gt; 对象是围绕着一个包装 &lt;code&gt;Mail::Message&lt;/code&gt; 。如果要检查，更改或对 &lt;code&gt;Mail::Message&lt;/code&gt; 对象执行其他任何操作，则可以使用 &lt;code&gt;ActionMailer::MessageDelivery&lt;/code&gt; 对象上的 &lt;code&gt;message&lt;/code&gt; 方法访问它。</target>
        </trans-unit>
        <trans-unit id="2e30119f0c67cfd57bce9d6914c30134d947806b" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;welcome_email&lt;/code&gt; returns an &lt;code&gt;ActionMailer::MessageDelivery&lt;/code&gt; object which can then just be told &lt;code&gt;deliver_now&lt;/code&gt; or &lt;code&gt;deliver_later&lt;/code&gt; to send itself out. The &lt;code&gt;ActionMailer::MessageDelivery&lt;/code&gt; object is just a wrapper around a &lt;code&gt;Mail::Message&lt;/code&gt;. If you want to inspect, alter, or do anything else with the &lt;code&gt;Mail::Message&lt;/code&gt; object you can access it with the &lt;code&gt;message&lt;/code&gt; method on the &lt;code&gt;ActionMailer::MessageDelivery&lt;/code&gt; object.</source>
          <target state="translated">方法 &lt;code&gt;welcome_email&lt;/code&gt; 返回一个 &lt;code&gt;ActionMailer::MessageDelivery&lt;/code&gt; 对象，然后可以告诉该对象 &lt;code&gt;deliver_now&lt;/code&gt; 或 &lt;code&gt;deliver_later&lt;/code&gt; 将自身发送出去。该 &lt;code&gt;ActionMailer::MessageDelivery&lt;/code&gt; 对象只是围绕着一个包装 &lt;code&gt;Mail::Message&lt;/code&gt; 。如果要检查，更改或对 &lt;code&gt;Mail::Message&lt;/code&gt; 对象进行其他操作，则可以使用 &lt;code&gt;ActionMailer::MessageDelivery&lt;/code&gt; 对象上的 &lt;code&gt;message&lt;/code&gt; 方法访问它。</target>
        </trans-unit>
        <trans-unit id="143476ef54c29a1ec148780dbea92c40c0a25b4e" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;with_indifferent_access&lt;/code&gt; returns an &lt;code&gt;ActiveSupport::HashWithIndifferentAccess&lt;/code&gt; out of its receiver:</source>
          <target state="translated">方法 &lt;code&gt;with_indifferent_access&lt;/code&gt; 从其接收者返回 &lt;code&gt;ActiveSupport::HashWithIndifferentAccess&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="376cd7ee7cb616a24d413450adee82f6527d2b4f" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;with_options&lt;/code&gt; provides a way to factor out common options in a series of method calls.</source>
          <target state="translated">&lt;code&gt;with_options&lt;/code&gt; 方法提供了一种在一系列方法调用中排除常见选项的方法。</target>
        </trans-unit>
        <trans-unit id="d918b0efff2157c8c8e66e095e36340c8d9725bb" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;without&lt;/code&gt; returns a copy of an enumerable with the specified elements removed:</source>
          <target state="translated">&lt;code&gt;without&lt;/code&gt; 该方法将返回已删除指定元素的枚举的副本：</target>
        </trans-unit>
        <trans-unit id="749ed452302f0bfc6da535e793254e8dd6d7ddc2" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;years_ago&lt;/code&gt; receives a number of years and returns the same date those many years ago:</source>
          <target state="translated">&lt;code&gt;years_ago&lt;/code&gt; 方法接收若干年并返回许多年前的同一日期：</target>
        </trans-unit>
        <trans-unit id="b6139bf6204c334a2dca2c4766b4c7e500cf1072" translate="yes" xml:space="preserve">
          <source>The method accepts a block too. If present, the block is evaluated in the context of the controller helper module. This simple call makes the &lt;code&gt;wadus&lt;/code&gt; method available in templates of the enclosing controller:</source>
          <target state="translated">该方法也接受一个块。如果存在，则在控制器帮助程序模块的上下文中评估该块。这个简单的调用使 &lt;code&gt;wadus&lt;/code&gt; 方法在封闭控制器的模板中可用：</target>
        </trans-unit>
        <trans-unit id="4eaf50f86f012b22cbcfd5d0712981b9b5c8c600" translate="yes" xml:space="preserve">
          <source>The method accepts an optional fourth argument to replace existing &lt;code&gt;NULL&lt;/code&gt;s with some other value. Use that one when enabling the constraint if needed, since otherwise those rows would not be valid.</source>
          <target state="translated">该方法接受可选的第四个参数，以将现有 &lt;code&gt;NULL&lt;/code&gt; 替换为其他值。如果需要，在启用约束时使用那个，否则这些行将无效。</target>
        </trans-unit>
        <trans-unit id="f52bb918e6a1a9bd9c24ca2082d9cf87e5aa096a" translate="yes" xml:space="preserve">
          <source>The method arguments are symbols which correspond to the names of the methods which should be unscoped. The valid arguments are given in &lt;a href=&quot;querymethods#VALID_UNSCOPING_VALUES&quot;&gt;&lt;code&gt;VALID_UNSCOPING_VALUES&lt;/code&gt;&lt;/a&gt;. The method can also be called with multiple arguments. For example:</source>
          <target state="translated">方法参数是符号，它们对应于应不受作用域限制的方法名称。有效参数在&lt;a href=&quot;querymethods#VALID_UNSCOPING_VALUES&quot;&gt; &lt;code&gt;VALID_UNSCOPING_VALUES&lt;/code&gt; &lt;/a&gt;中给出。也可以使用多个参数来调用该方法。例如：</target>
        </trans-unit>
        <trans-unit id="72a3e85771e7d5da34d4a62058419ff2db1527a9" translate="yes" xml:space="preserve">
          <source>The method arguments are symbols which correspond to the names of the methods which should be unscoped. The valid arguments are given in &lt;a href=&quot;querymethods#VALID_UNSCOPING_VALUES&quot;&gt;VALID_UNSCOPING_VALUES&lt;/a&gt;. The method can also be called with multiple arguments. For example:</source>
          <target state="translated">方法参数是符号，它们对应于应不受作用域限制的方法名称。有效参数在&lt;a href=&quot;querymethods#VALID_UNSCOPING_VALUES&quot;&gt;VALID_UNSCOPING_VALUES&lt;/a&gt;中给出。也可以使用多个参数来调用该方法。例如：</target>
        </trans-unit>
        <trans-unit id="f29811b2344f3c781cc85f6126a7eba350e8f54e" translate="yes" xml:space="preserve">
          <source>The method can be used in several slightly different ways, depending on how much you wish to rely on Rails to infer automatically from the model how the form should be constructed. For a generic model object, a form can be created by passing &lt;code&gt;form_for&lt;/code&gt; a string or symbol representing the object we are concerned with:</source>
          <target state="translated">该方法可以以几种略有不同的方式使用，具体取决于您希望依靠Rails从模型中自动推断出应该如何构造表单的方式。对于通用模型对象，可以通过传递 &lt;code&gt;form_for&lt;/code&gt; 表示我们关注的对象的字符串或符号来创建表单：</target>
        </trans-unit>
        <trans-unit id="df59aa5f4379b6a7b3027cf6de35b290d184f6f8" translate="yes" xml:space="preserve">
          <source>The method must be public in the target.</source>
          <target state="translated">该方法在目标中必须是公共的。</target>
        </trans-unit>
        <trans-unit id="d6c4a302116d905f51af0710172d864db0198ec2" translate="yes" xml:space="preserve">
          <source>The method name is generated by replacing spaces with underscores. The result does not need to be a valid Ruby identifier though &amp;mdash; the name may contain punctuation characters, etc. That's because in Ruby technically any string may be a method name. This may require use of &lt;code&gt;define_method&lt;/code&gt; and &lt;code&gt;send&lt;/code&gt; calls to function properly, but formally there's little restriction on the name.</source>
          <target state="translated">方法名称是通过用下划线替换空格来生成的。但是，结果不必是有效的Ruby标识符-名称可以包含标点符号等。这是因为从技术上讲，在Ruby中，任何字符串都可以是方法名。这可能需要使用 &lt;code&gt;define_method&lt;/code&gt; 并 &lt;code&gt;send&lt;/code&gt; 调用才能正常运行，但是在形式上对名称几乎没有限制。</target>
        </trans-unit>
        <trans-unit id="0ea58e33d4325a5441c0ed44a3d6618cc3feba41" translate="yes" xml:space="preserve">
          <source>The method name is generated by replacing spaces with underscores. The result does not need to be a valid Ruby identifier though, the name may contain punctuation characters etc. That's because in Ruby technically any string may be a method name. This may require use of &lt;code&gt;define_method&lt;/code&gt; and &lt;code&gt;send&lt;/code&gt; calls to function properly, but formally there's little restriction on the name.</source>
          <target state="translated">方法名称是通过用下划线替换空格来生成的。但是，结果不必是有效的Ruby标识符，该名称可以包含标点符号等。这是因为从技术上讲，在Ruby中，任何字符串都可以是方法名称。这可能需要使用 &lt;code&gt;define_method&lt;/code&gt; 并 &lt;code&gt;send&lt;/code&gt; 调用才能正常运行，但是在形式上对名称几乎没有限制。</target>
        </trans-unit>
        <trans-unit id="3f48950e7a1291930ff3ceba91618afc3d58f76d" translate="yes" xml:space="preserve">
          <source>The method reference callbacks work by specifying a protected or private method available in the object, like this:</source>
          <target state="translated">方法引用回调通过指定对象中可用的protected或private方法来工作,像这样。</target>
        </trans-unit>
        <trans-unit id="4c103e976f66c3afee2e0a77e51963a42f30a430" translate="yes" xml:space="preserve">
          <source>The method reference is the preferred approach to variable layouts and is used like this:</source>
          <target state="translated">方法引用是变量布局的首选方法,使用方法是这样的。</target>
        </trans-unit>
        <trans-unit id="0177f2d4e9121bd990bbdc6e21ee4939f478d0b6" translate="yes" xml:space="preserve">
          <source>The method simply stores an error message in the flash and redirects to the login form if the user is not logged in. If a &quot;before&quot; filter renders or redirects, the action will not run. If there are additional filters scheduled to run after that filter, they are also cancelled.</source>
          <target state="translated">该方法只是在flash中存储一个错误信息,如果用户没有登录,则重定向到登录表单。如果 &quot;之前 &quot;的过滤器渲染或重定向,该动作将不会运行。如果在该过滤器之后还有其他过滤器计划运行,它们也会被取消。</target>
        </trans-unit>
        <trans-unit id="e51ca83b78ed3a96cbc5befd362957c1169c765e" translate="yes" xml:space="preserve">
          <source>The method understands qualified table names:</source>
          <target state="translated">该方法可以理解限定表名。</target>
        </trans-unit>
        <trans-unit id="f0a296b63f2cf5a95d407e53006a436d773bba0e" translate="yes" xml:space="preserve">
          <source>The method will also ensure an HTTP &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; header for client compatibility.</source>
          <target state="translated">该方法还将确保HTTP &lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;标头可实现客户端兼容性。</target>
        </trans-unit>
        <trans-unit id="c350fc830645f9176dfd3818099b11ae3983bdbf" translate="yes" xml:space="preserve">
          <source>The method will also ensure an HTTP &lt;a href=&quot;../date&quot;&gt;Date&lt;/a&gt; header for client compatibility.</source>
          <target state="translated">该方法还将确保HTTP &lt;a href=&quot;../date&quot;&gt;Date&lt;/a&gt;标头可实现客户端兼容性。</target>
        </trans-unit>
        <trans-unit id="e7934c859ba3f1bbfef963b0dd18e1eebc036a02" translate="yes" xml:space="preserve">
          <source>The methods &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Array.html#method-i-second&quot;&gt;&lt;code&gt;second&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Array.html#method-i-third&quot;&gt;&lt;code&gt;third&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Array.html#method-i-fourth&quot;&gt;&lt;code&gt;fourth&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Array.html#method-i-fifth&quot;&gt;&lt;code&gt;fifth&lt;/code&gt;&lt;/a&gt; return the corresponding element, as do &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Array.html#method-i-second_to_last&quot;&gt;&lt;code&gt;second_to_last&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Array.html#method-i-third_to_last&quot;&gt;&lt;code&gt;third_to_last&lt;/code&gt;&lt;/a&gt; (&lt;code&gt;first&lt;/code&gt; and &lt;code&gt;last&lt;/code&gt; are built-in). Thanks to social wisdom and positive constructiveness all around, &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Array.html#method-i-forty_two&quot;&gt;&lt;code&gt;forty_two&lt;/code&gt;&lt;/a&gt; is also available.</source>
          <target state="translated">所述方法&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Array.html#method-i-second&quot;&gt; &lt;code&gt;second&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Array.html#method-i-third&quot;&gt; &lt;code&gt;third&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Array.html#method-i-fourth&quot;&gt; &lt;code&gt;fourth&lt;/code&gt; &lt;/a&gt;，和&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Array.html#method-i-fifth&quot;&gt; &lt;code&gt;fifth&lt;/code&gt; &lt;/a&gt;返回相应的元件，因为这样做&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Array.html#method-i-second_to_last&quot;&gt; &lt;code&gt;second_to_last&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Array.html#method-i-third_to_last&quot;&gt; &lt;code&gt;third_to_last&lt;/code&gt; &lt;/a&gt;（ &lt;code&gt;first&lt;/code&gt; 和 &lt;code&gt;last&lt;/code&gt; 是内置的）。多亏了社会的智慧和积极的建设性，也有四&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Array.html#method-i-forty_two&quot;&gt; &lt;code&gt;forty_two&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0f4268a3f3f72e7bfd7ea9ce837459b402d840ed" translate="yes" xml:space="preserve">
          <source>The methods &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/DateAndTime/Calculations.html#method-i-beginning_of_month&quot;&gt;&lt;code&gt;beginning_of_month&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/DateAndTime/Calculations.html#method-i-end_of_month&quot;&gt;&lt;code&gt;end_of_month&lt;/code&gt;&lt;/a&gt; return the dates for the beginning and end of the month:</source>
          <target state="translated">该方法&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/DateAndTime/Calculations.html#method-i-beginning_of_month&quot;&gt; &lt;code&gt;beginning_of_month&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/DateAndTime/Calculations.html#method-i-end_of_month&quot;&gt; &lt;code&gt;end_of_month&lt;/code&gt; &lt;/a&gt;回报月的开始和结束日期：</target>
        </trans-unit>
        <trans-unit id="5bbbb643120063a3302eafe287e3a55134792667" translate="yes" xml:space="preserve">
          <source>The methods &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/DateAndTime/Calculations.html#method-i-beginning_of_quarter&quot;&gt;&lt;code&gt;beginning_of_quarter&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/DateAndTime/Calculations.html#method-i-end_of_quarter&quot;&gt;&lt;code&gt;end_of_quarter&lt;/code&gt;&lt;/a&gt; return the dates for the beginning and end of the quarter of the receiver's calendar year:</source>
          <target state="translated">该方法&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/DateAndTime/Calculations.html#method-i-beginning_of_quarter&quot;&gt; &lt;code&gt;beginning_of_quarter&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/DateAndTime/Calculations.html#method-i-end_of_quarter&quot;&gt; &lt;code&gt;end_of_quarter&lt;/code&gt; &lt;/a&gt;返回的日期开始和接收器的历年季度末：</target>
        </trans-unit>
        <trans-unit id="b7a39f9936b27ee847e67301677097f669a8b309" translate="yes" xml:space="preserve">
          <source>The methods &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/DateAndTime/Calculations.html#method-i-beginning_of_week&quot;&gt;&lt;code&gt;beginning_of_week&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/DateAndTime/Calculations.html#method-i-end_of_week&quot;&gt;&lt;code&gt;end_of_week&lt;/code&gt;&lt;/a&gt; return the dates for the beginning and end of the week, respectively. Weeks are assumed to start on Monday, but that can be changed passing an argument, setting thread local &lt;code&gt;Date.beginning_of_week&lt;/code&gt; or &lt;code&gt;config.beginning_of_week&lt;/code&gt;.</source>
          <target state="translated">该方法&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/DateAndTime/Calculations.html#method-i-beginning_of_week&quot;&gt; &lt;code&gt;beginning_of_week&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/DateAndTime/Calculations.html#method-i-end_of_week&quot;&gt; &lt;code&gt;end_of_week&lt;/code&gt; &lt;/a&gt;分别返回一周的开始和结束的日期。假定周从星期一开始，但是可以通过传递参数，设置线程本地 &lt;code&gt;Date.beginning_of_week&lt;/code&gt; 或 &lt;code&gt;config.beginning_of_week&lt;/code&gt; 来更改。</target>
        </trans-unit>
        <trans-unit id="2313909eb086648ffc293b8a000069cf41ee70a4" translate="yes" xml:space="preserve">
          <source>The methods &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/DateAndTime/Calculations.html#method-i-beginning_of_year&quot;&gt;&lt;code&gt;beginning_of_year&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/DateAndTime/Calculations.html#method-i-end_of_year&quot;&gt;&lt;code&gt;end_of_year&lt;/code&gt;&lt;/a&gt; return the dates for the beginning and end of the year:</source>
          <target state="translated">该方法&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/DateAndTime/Calculations.html#method-i-beginning_of_year&quot;&gt; &lt;code&gt;beginning_of_year&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/DateAndTime/Calculations.html#method-i-end_of_year&quot;&gt; &lt;code&gt;end_of_year&lt;/code&gt; &lt;/a&gt;换取一年的开始和结束日期：</target>
        </trans-unit>
        <trans-unit id="19aae78de33632f9430ef34c4a1f0fa2d8cea8e3" translate="yes" xml:space="preserve">
          <source>The methods &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/DateAndTime/Calculations.html#method-i-monday&quot;&gt;&lt;code&gt;monday&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/DateAndTime/Calculations.html#method-i-sunday&quot;&gt;&lt;code&gt;sunday&lt;/code&gt;&lt;/a&gt; return the dates for the previous Monday and next Sunday, respectively.</source>
          <target state="translated">&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/DateAndTime/Calculations.html#method-i-monday&quot;&gt; &lt;code&gt;monday&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/DateAndTime/Calculations.html#method-i-sunday&quot;&gt; &lt;code&gt;sunday&lt;/code&gt; &lt;/a&gt;方法分别返回上一个星期一和下一个星期日的日期。</target>
        </trans-unit>
        <trans-unit id="8bc9f6890a4064f7a40ab776d4900a65595e7b6f" translate="yes" xml:space="preserve">
          <source>The methods &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/DateAndTime/Calculations.html#method-i-months_ago&quot;&gt;&lt;code&gt;months_ago&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/DateAndTime/Calculations.html#method-i-months_since&quot;&gt;&lt;code&gt;months_since&lt;/code&gt;&lt;/a&gt; work analogously for months:</source>
          <target state="translated">方法&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/DateAndTime/Calculations.html#method-i-months_ago&quot;&gt; &lt;code&gt;months_ago&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/DateAndTime/Calculations.html#method-i-months_since&quot;&gt; &lt;code&gt;months_since&lt;/code&gt; &lt;/a&gt;类似地工作了几个月：</target>
        </trans-unit>
        <trans-unit id="a89be9d861059d6afe106e651977780cec5f0cd1" translate="yes" xml:space="preserve">
          <source>The methods &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Hash.html#method-i-to_options&quot;&gt;&lt;code&gt;to_options&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Hash.html#method-i-to_options-21&quot;&gt;&lt;code&gt;to_options!&lt;/code&gt;&lt;/a&gt; are aliases of &lt;code&gt;symbolize_keys&lt;/code&gt; and &lt;code&gt;symbolize_keys!&lt;/code&gt;, respectively.</source>
          <target state="translated">方法&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Hash.html#method-i-to_options&quot;&gt; &lt;code&gt;to_options&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Hash.html#method-i-to_options-21&quot;&gt; &lt;code&gt;to_options!&lt;/code&gt; &lt;/a&gt;是 &lt;code&gt;symbolize_keys&lt;/code&gt; 和 &lt;code&gt;symbolize_keys!&lt;/code&gt; 别名！， 分别。</target>
        </trans-unit>
        <trans-unit id="a4fe83528af64482eb1c2c0f517513b16f498a1a" translate="yes" xml:space="preserve">
          <source>The methods &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Kernel.html#method-i-silence_warnings&quot;&gt;&lt;code&gt;silence_warnings&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Kernel.html#method-i-enable_warnings&quot;&gt;&lt;code&gt;enable_warnings&lt;/code&gt;&lt;/a&gt; change the value of &lt;code&gt;$VERBOSE&lt;/code&gt; accordingly for the duration of their block, and reset it afterwards:</source>
          <target state="translated">方法&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Kernel.html#method-i-silence_warnings&quot;&gt; &lt;code&gt;silence_warnings&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Kernel.html#method-i-enable_warnings&quot;&gt; &lt;code&gt;enable_warnings&lt;/code&gt; &lt;/a&gt;在其块的持续时间内相应地更改 &lt;code&gt;$VERBOSE&lt;/code&gt; 的值，然后将其重置：</target>
        </trans-unit>
        <trans-unit id="3b0647dfcd8d7d70703cb0a11190a6cedb68989a" translate="yes" xml:space="preserve">
          <source>The methods &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/String.html#method-i-to_date&quot;&gt;&lt;code&gt;to_date&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/String.html#method-i-to_time&quot;&gt;&lt;code&gt;to_time&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/String.html#method-i-to_datetime&quot;&gt;&lt;code&gt;to_datetime&lt;/code&gt;&lt;/a&gt; are basically convenience wrappers around &lt;code&gt;Date._parse&lt;/code&gt;:</source>
          <target state="translated">方法&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/String.html#method-i-to_date&quot;&gt; &lt;code&gt;to_date&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/String.html#method-i-to_time&quot;&gt; &lt;code&gt;to_time&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/String.html#method-i-to_datetime&quot;&gt; &lt;code&gt;to_datetime&lt;/code&gt; &lt;/a&gt;基本上是 &lt;code&gt;Date._parse&lt;/code&gt; 周围的方便包装器：</target>
        </trans-unit>
        <trans-unit id="c7c7f5ee384fe2044ad32d25e79e26d5f3aa690a" translate="yes" xml:space="preserve">
          <source>The methods &lt;code&gt;Range#===&lt;/code&gt;, &lt;code&gt;Range#include?&lt;/code&gt;, and &lt;code&gt;Range#cover?&lt;/code&gt; say whether some value falls between the ends of a given instance:</source>
          <target state="translated">方法 &lt;code&gt;Range#===&lt;/code&gt; ， &lt;code&gt;Range#include?&lt;/code&gt; 和 &lt;code&gt;Range#cover?&lt;/code&gt; 说出某个值是否落在给定实例的两端之间：</target>
        </trans-unit>
        <trans-unit id="d9a7edd36cd3f87a9ac106594572cc990797d90a" translate="yes" xml:space="preserve">
          <source>The methods &lt;code&gt;beginning_of_month&lt;/code&gt; and &lt;code&gt;end_of_month&lt;/code&gt; return the dates for the beginning and end of the month:</source>
          <target state="translated">该方法 &lt;code&gt;beginning_of_month&lt;/code&gt; 和 &lt;code&gt;end_of_month&lt;/code&gt; 回报月的开始和结束日期：</target>
        </trans-unit>
        <trans-unit id="b082ddf7d0327c04320194626ffb003ed515c178" translate="yes" xml:space="preserve">
          <source>The methods &lt;code&gt;beginning_of_quarter&lt;/code&gt; and &lt;code&gt;end_of_quarter&lt;/code&gt; return the dates for the beginning and end of the quarter of the receiver's calendar year:</source>
          <target state="translated">该方法 &lt;code&gt;beginning_of_quarter&lt;/code&gt; 和 &lt;code&gt;end_of_quarter&lt;/code&gt; 返回的日期开始和接收器的历年季度末：</target>
        </trans-unit>
        <trans-unit id="d9a727e15831861050a8ad7462355064dc28ab58" translate="yes" xml:space="preserve">
          <source>The methods &lt;code&gt;beginning_of_week&lt;/code&gt; and &lt;code&gt;end_of_week&lt;/code&gt; return the dates for the beginning and end of the week, respectively. Weeks are assumed to start on Monday, but that can be changed passing an argument, setting thread local &lt;code&gt;Date.beginning_of_week&lt;/code&gt; or &lt;code&gt;config.beginning_of_week&lt;/code&gt;.</source>
          <target state="translated">该方法 &lt;code&gt;beginning_of_week&lt;/code&gt; 和 &lt;code&gt;end_of_week&lt;/code&gt; 分别返回一周的开始和结束的日期。假设周从星期一开始，但是可以通过传递参数，设置线程本地 &lt;code&gt;Date.beginning_of_week&lt;/code&gt; 或 &lt;code&gt;config.beginning_of_week&lt;/code&gt; 来更改。</target>
        </trans-unit>
        <trans-unit id="bc61fc2dcfd38d754ffc1b03fdf37a7ac79771a6" translate="yes" xml:space="preserve">
          <source>The methods &lt;code&gt;beginning_of_year&lt;/code&gt; and &lt;code&gt;end_of_year&lt;/code&gt; return the dates for the beginning and end of the year:</source>
          <target state="translated">该方法 &lt;code&gt;beginning_of_year&lt;/code&gt; 和 &lt;code&gt;end_of_year&lt;/code&gt; 换取一年的开始和结束日期：</target>
        </trans-unit>
        <trans-unit id="c93442f75ad37d78087c0cd7de4798ce7440226e" translate="yes" xml:space="preserve">
          <source>The methods &lt;code&gt;monday&lt;/code&gt; and &lt;code&gt;sunday&lt;/code&gt; return the dates for the previous Monday and next Sunday, respectively.</source>
          <target state="translated">&lt;code&gt;monday&lt;/code&gt; 和 &lt;code&gt;sunday&lt;/code&gt; 方法分别返回上一个星期一和下一个星期日的日期。</target>
        </trans-unit>
        <trans-unit id="101e739f5a98fcc8679ad2d254272635b35eb22b" translate="yes" xml:space="preserve">
          <source>The methods &lt;code&gt;months_ago&lt;/code&gt; and &lt;code&gt;months_since&lt;/code&gt; work analogously for months:</source>
          <target state="translated">方法 &lt;code&gt;months_ago&lt;/code&gt; 和 &lt;code&gt;months_since&lt;/code&gt; 类似地工作了几个月：</target>
        </trans-unit>
        <trans-unit id="a57bf9a6a89002a3c34cc6c1d424b2ec54e1d27a" translate="yes" xml:space="preserve">
          <source>The methods &lt;code&gt;second&lt;/code&gt;, &lt;code&gt;third&lt;/code&gt;, &lt;code&gt;fourth&lt;/code&gt;, and &lt;code&gt;fifth&lt;/code&gt; return the corresponding element, as do &lt;code&gt;second_to_last&lt;/code&gt; and &lt;code&gt;third_to_last&lt;/code&gt; (&lt;code&gt;first&lt;/code&gt; and &lt;code&gt;last&lt;/code&gt; are built-in). Thanks to social wisdom and positive constructiveness all around, &lt;code&gt;forty_two&lt;/code&gt; is also available.</source>
          <target state="translated">所述方法 &lt;code&gt;second&lt;/code&gt; ， &lt;code&gt;third&lt;/code&gt; ， &lt;code&gt;fourth&lt;/code&gt; ，和 &lt;code&gt;fifth&lt;/code&gt; 返回相应的元件，因为这样做 &lt;code&gt;second_to_last&lt;/code&gt; 和 &lt;code&gt;third_to_last&lt;/code&gt; （ &lt;code&gt;first&lt;/code&gt; 和 &lt;code&gt;last&lt;/code&gt; 是内置的）。多亏了社会的智慧和积极的建设性，也有四 &lt;code&gt;forty_two&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="302a64dec0c184391c6bcb15ca258c399575c5b1" translate="yes" xml:space="preserve">
          <source>The methods &lt;code&gt;silence_warnings&lt;/code&gt; and &lt;code&gt;enable_warnings&lt;/code&gt; change the value of &lt;code&gt;$VERBOSE&lt;/code&gt; accordingly for the duration of their block, and reset it afterwards:</source>
          <target state="translated">方法 &lt;code&gt;silence_warnings&lt;/code&gt; 和 &lt;code&gt;enable_warnings&lt;/code&gt; 在块的持续时间内相应地更改 &lt;code&gt;$VERBOSE&lt;/code&gt; 的值，然后将其重置：</target>
        </trans-unit>
        <trans-unit id="10ee15491942712a1e41b76c89b0f5f1b22a509f" translate="yes" xml:space="preserve">
          <source>The methods &lt;code&gt;to_date&lt;/code&gt;, &lt;code&gt;to_time&lt;/code&gt;, and &lt;code&gt;to_datetime&lt;/code&gt; are basically convenience wrappers around &lt;code&gt;Date._parse&lt;/code&gt;:</source>
          <target state="translated">方法 &lt;code&gt;to_date&lt;/code&gt; ， &lt;code&gt;to_time&lt;/code&gt; 和 &lt;code&gt;to_datetime&lt;/code&gt; 基本上是 &lt;code&gt;Date._parse&lt;/code&gt; 周围的方便包装器：</target>
        </trans-unit>
        <trans-unit id="cbe25a0862b8a2b5ae25688ccd92978edff13bd7" translate="yes" xml:space="preserve">
          <source>The methods &lt;code&gt;to_options&lt;/code&gt; and &lt;code&gt;to_options!&lt;/code&gt; are respectively aliases of &lt;code&gt;symbolize_keys&lt;/code&gt; and &lt;code&gt;symbolize_keys!&lt;/code&gt;.</source>
          <target state="translated">方法 &lt;code&gt;to_options&lt;/code&gt; 和 &lt;code&gt;to_options!&lt;/code&gt; 分别是 &lt;code&gt;symbolize_keys&lt;/code&gt; 和 &lt;code&gt;symbolize_keys!&lt;/code&gt; 别名！。</target>
        </trans-unit>
        <trans-unit id="28acdf93546eacce94f3d9bcd3f859094ac99119" translate="yes" xml:space="preserve">
          <source>The methods Active Record provides to manipulate your database.</source>
          <target state="translated">Active Record提供的方法可以操作你的数据库。</target>
        </trans-unit>
        <trans-unit id="e01fbc4ac2e1415be0e05e3a36a4769e572ae738" translate="yes" xml:space="preserve">
          <source>The methods are:</source>
          <target state="translated">这些方法是:</target>
        </trans-unit>
        <trans-unit id="85ead67c11e5371c2a532edbb9f016817232ba42" translate="yes" xml:space="preserve">
          <source>The methods that are available for generators are covered in the &lt;a href=&quot;#generator-methods&quot;&gt;final section&lt;/a&gt; of this guide.</source>
          <target state="translated">本指南的&lt;a href=&quot;#generator-methods&quot;&gt;最后一部分&lt;/a&gt;介绍了可用于发电机的方法。</target>
        </trans-unit>
        <trans-unit id="632757f8db9c26f8fc3f69acc6499d156989d659" translate="yes" xml:space="preserve">
          <source>The migration DSL has been expanded to support foreign key definitions. If you've been using the Foreigner gem, you might want to consider removing it. Note that the foreign key support of Rails is a subset of Foreigner. This means that not every Foreigner definition can be fully replaced by its Rails migration DSL counterpart.</source>
          <target state="translated">迁移DSL已经扩展到支持外键定义。如果你一直在使用Foreigner gem,你可能要考虑将其删除。请注意,Rails的外键支持是Foreigner的一个子集。这意味着并非每个Foreigner定义都能完全被Rails迁移DSL对应的定义所取代。</target>
        </trans-unit>
        <trans-unit id="fe354a4973240c9410053a804a2ebd4b4d92ba50" translate="yes" xml:space="preserve">
          <source>The migration method &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-create_join_table&quot;&gt;&lt;code&gt;create_join_table&lt;/code&gt;&lt;/a&gt; creates an HABTM (has and belongs to many) join table. A typical use would be:</source>
          <target state="translated">迁移方法&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-create_join_table&quot;&gt; &lt;code&gt;create_join_table&lt;/code&gt; &lt;/a&gt;创建一个HABTM（具有并属于多个）连接表。典型的用法是：</target>
        </trans-unit>
        <trans-unit id="064ad71d72802cf5173a957b04d66eaf6ae10a67" translate="yes" xml:space="preserve">
          <source>The migration method &lt;code&gt;create_join_table&lt;/code&gt; creates an HABTM (has and belongs to many) join table. A typical use would be:</source>
          <target state="translated">迁移方法 &lt;code&gt;create_join_table&lt;/code&gt; 创建一个HABTM（具有并属于多个）连接表。典型的用法是：</target>
        </trans-unit>
        <trans-unit id="46f69d5e49bda7d74e75c9f40f69e27e28ae44b1" translate="yes" xml:space="preserve">
          <source>The migration procedure is as follows:</source>
          <target state="translated">迁移程序如下:</target>
        </trans-unit>
        <trans-unit id="d18afdf6bffb0d53df16ac23c3fc6603a2497553" translate="yes" xml:space="preserve">
          <source>The migration requires that we &lt;strong&gt;migrate&lt;/strong&gt;, that is, run some Ruby code (living in that &lt;code&gt;20130717151933_create_high_scores.rb&lt;/code&gt;) to modify the schema of our database. Which database? The SQLite3 database that Rails will create for you when we run the &lt;code&gt;bin/rails db:migrate&lt;/code&gt; command. We'll talk more about that command below.</source>
          <target state="translated">迁移要求我们进行&lt;strong&gt;迁移&lt;/strong&gt;，即运行一些Ruby代码（位于 &lt;code&gt;20130717151933_create_high_scores.rb&lt;/code&gt; 中）来修改数据库的架构。哪个数据库？当我们运行 &lt;code&gt;bin/rails db:migrate&lt;/code&gt; 命令时，Rails将为您创建的SQLite3数据库。我们将在下面详细讨论该命令。</target>
        </trans-unit>
        <trans-unit id="ab24c1cdb4bc14a36f9680163589fdc69716d944" translate="yes" xml:space="preserve">
          <source>The migration requires that we &lt;strong&gt;migrate&lt;/strong&gt;, that is, run some Ruby code (living in that &lt;code&gt;20130717151933_create_high_scores.rb&lt;/code&gt;) to modify the schema of our database. Which database? The SQLite3 database that Rails will create for you when we run the &lt;code&gt;rails db:migrate&lt;/code&gt; command. We'll talk more about that command below.</source>
          <target state="translated">迁移要求我们进行&lt;strong&gt;迁移&lt;/strong&gt;，即运行一些Ruby代码（位于 &lt;code&gt;20130717151933_create_high_scores.rb&lt;/code&gt; 中）来修改数据库的架构。哪个数据库？当我们运行 &lt;code&gt;rails db:migrate&lt;/code&gt; 命令时，Rails将为您创建的SQLite3数据库。我们将在下面详细讨论该命令。</target>
        </trans-unit>
        <trans-unit id="106794560ae8481f1f8e790f3f30a20620d4b2b3" translate="yes" xml:space="preserve">
          <source>The migration version, migration file name, migration class name are available as instance variables in the template to be rendered.</source>
          <target state="translated">迁移版本、迁移文件名、迁移类名在要渲染的模板中可作为实例变量。</target>
        </trans-unit>
        <trans-unit id="264fdcd063a5b992cffc029bb74fd19a7ee3ecc8" translate="yes" xml:space="preserve">
          <source>The migrations paths for a database configuration. If the &lt;code&gt;migrations_paths&lt;/code&gt; key is present in the config, &lt;code&gt;migrations_paths&lt;/code&gt; will return its value.</source>
          <target state="translated">数据库配置的迁移路径。如果配置中存在 &lt;code&gt;migrations_paths&lt;/code&gt; 键，则 &lt;code&gt;migrations_paths&lt;/code&gt; 将返回其值。</target>
        </trans-unit>
        <trans-unit id="1ffa60f96218aefefa017b3600936d844a777339" translate="yes" xml:space="preserve">
          <source>The model and scaffold generators will create migrations appropriate for adding a new model. This migration will already contain instructions for creating the relevant table. If you tell Rails what columns you want, then statements for adding these columns will also be created. For example, running:</source>
          <target state="translated">模型和脚手架生成器将创建适合添加新模型的迁移。这个迁移将已经包含创建相关表的说明。如果你告诉Rails你想要什么列,那么也会创建用于添加这些列的语句。例如,运行</target>
        </trans-unit>
        <trans-unit id="249b19b94a2baf19802b3a383ce518c8761e1284" translate="yes" xml:space="preserve">
          <source>The model class method &lt;code&gt;accepts_nested_attributes_for&lt;/code&gt; allows you to update and destroy associated records. This is based on the &lt;code&gt;id&lt;/code&gt; and &lt;code&gt;_destroy&lt;/code&gt; parameters:</source>
          <target state="translated">模型类方法 &lt;code&gt;accepts_nested_attributes_for&lt;/code&gt; 允许您更新和销毁关联的记录。这基于 &lt;code&gt;id&lt;/code&gt; 和 &lt;code&gt;_destroy&lt;/code&gt; 参数：</target>
        </trans-unit>
        <trans-unit id="e14cc259f2fce88b090eb2cb7128b471b333c1e8" translate="yes" xml:space="preserve">
          <source>The model file, &lt;code&gt;app/models/article.rb&lt;/code&gt; is about as simple as it can get:</source>
          <target state="translated">模型文件 &lt;code&gt;app/models/article.rb&lt;/code&gt; 尽可能简单：</target>
        </trans-unit>
        <trans-unit id="eba21083dc8e4e9c25ca1f480fd47c8b083c4073" translate="yes" xml:space="preserve">
          <source>The module object following a &lt;code&gt;module&lt;/code&gt; keyword gets pushed when its body is executed, and popped after it.</source>
          <target state="translated">&lt;code&gt;module&lt;/code&gt; 关键字后面的模块对象在执行其主体时会被推送，并在其后弹出。</target>
        </trans-unit>
        <trans-unit id="83bfde6905a12029da10ae0302da14e944a33572" translate="yes" xml:space="preserve">
          <source>The more generic form can also be used:</source>
          <target state="translated">也可以使用更通用的形式。</target>
        </trans-unit>
        <trans-unit id="8749a8b69f507a203077616aca924230b98cbb6b" translate="yes" xml:space="preserve">
          <source>The more prepared statements in use: the more memory your database will require. If your PostgreSQL database is hitting memory limits, try lowering &lt;code&gt;statement_limit&lt;/code&gt; or disabling prepared statements.</source>
          <target state="translated">使用的准备语句越多：数据库将需要更多的内存。如果您的PostgreSQL数据库达到内存限制，请尝试降低 &lt;code&gt;statement_limit&lt;/code&gt; 或禁用准备好的语句。</target>
        </trans-unit>
        <trans-unit id="559aa9c854f2130ef8fac1dca2f96f39aeb3d7e4" translate="yes" xml:space="preserve">
          <source>The most common XSS language is of course the most popular client-side scripting language JavaScript, often in combination with HTML. &lt;em&gt;Escaping user input is essential&lt;/em&gt;.</source>
          <target state="translated">当然，最常见的XSS语言是最流行的客户端脚本语言JavaScript，通常与HTML结合使用。&lt;em&gt;转义用户输入至关重要&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="7cd17334a3478f1d7c2e20e61fa6e2680f80c045" translate="yes" xml:space="preserve">
          <source>The most common commands of the &lt;code&gt;db:&lt;/code&gt; rails namespace are &lt;code&gt;migrate&lt;/code&gt; and &lt;code&gt;create&lt;/code&gt;, and it will pay off to try out all of the migration rails commands (&lt;code&gt;up&lt;/code&gt;, &lt;code&gt;down&lt;/code&gt;, &lt;code&gt;redo&lt;/code&gt;, &lt;code&gt;reset&lt;/code&gt;). &lt;code&gt;bin/rails db:version&lt;/code&gt; is useful when troubleshooting, telling you the current version of the database.</source>
          <target state="translated">在最常用的命令 &lt;code&gt;db:&lt;/code&gt; 轨命名空间的 &lt;code&gt;migrate&lt;/code&gt; 和 &lt;code&gt;create&lt;/code&gt; ，它会还清尝试所有的迁移轨命令（ &lt;code&gt;up&lt;/code&gt; ， &lt;code&gt;down&lt;/code&gt; ， &lt;code&gt;redo&lt;/code&gt; ， &lt;code&gt;reset&lt;/code&gt; ）。 &lt;code&gt;bin/rails db:version&lt;/code&gt; 在进行故障排除时非常有用，它可以告诉您数据库的当前版本。</target>
        </trans-unit>
        <trans-unit id="a394aaf66692ca993ee720ec89c38286621984ad" translate="yes" xml:space="preserve">
          <source>The most common commands of the &lt;code&gt;db:&lt;/code&gt; rails namespace are &lt;code&gt;migrate&lt;/code&gt; and &lt;code&gt;create&lt;/code&gt;, and it will pay off to try out all of the migration rails commands (&lt;code&gt;up&lt;/code&gt;, &lt;code&gt;down&lt;/code&gt;, &lt;code&gt;redo&lt;/code&gt;, &lt;code&gt;reset&lt;/code&gt;). &lt;code&gt;rails db:version&lt;/code&gt; is useful when troubleshooting, telling you the current version of the database.</source>
          <target state="translated">在最常用的命令 &lt;code&gt;db:&lt;/code&gt; 轨命名空间的 &lt;code&gt;migrate&lt;/code&gt; 和 &lt;code&gt;create&lt;/code&gt; ，它会还清尝试所有的迁移轨命令（ &lt;code&gt;up&lt;/code&gt; ， &lt;code&gt;down&lt;/code&gt; ， &lt;code&gt;redo&lt;/code&gt; ， &lt;code&gt;reset&lt;/code&gt; ）。 &lt;code&gt;rails db:version&lt;/code&gt; 在进行故障排除时非常有用，它可以告诉您数据库的当前版本。</target>
        </trans-unit>
        <trans-unit id="2d09f26c4b080f0da2d9b5d96ee1a38b054f08f7" translate="yes" xml:space="preserve">
          <source>The most common entry points are message posts, user comments, and guest books, but project titles, document names, and search result pages have also been vulnerable - just about everywhere where the user can input data. But the input does not necessarily have to come from input boxes on web sites, it can be in any URL parameter - obvious, hidden or internal. Remember that the user may intercept any traffic. Applications or client-site proxies make it easy to change requests. There are also other attack vectors like banner advertisements.</source>
          <target state="translated">最常见的入口点是留言帖、用户评论和留言簿,但项目标题、文档名称和搜索结果页面也存在漏洞--几乎所有用户可以输入数据的地方。但输入的数据不一定来自于网站上的输入框,它可以在任何URL参数中--明显的、隐藏的或内部的。请记住,用户可能拦截任何流量。应用程序或客户端-网站代理使其很容易改变请求。还有其他攻击载体,如横幅广告。</target>
        </trans-unit>
        <trans-unit id="445653008345676d9901d54b1dd03fc1df7ab282" translate="yes" xml:space="preserve">
          <source>The most common parameter that a user might tamper with, is the id parameter, as in &lt;code&gt;http://www.domain.com/project/1&lt;/code&gt;, whereas 1 is the id. It will be available in params in the controller. There, you will most likely do something like this:</source>
          <target state="translated">用户可能会篡改的最常见参数是id参数，例如 &lt;code&gt;http://www.domain.com/project/1&lt;/code&gt; ，而1是id。它将在控制器的参数中可用。在那里，您很可能会执行以下操作：</target>
        </trans-unit>
        <trans-unit id="539024df1130477692163b826318e13606156156" translate="yes" xml:space="preserve">
          <source>The most common usage pattern for this method is probably in a migration, when just after creating a table you want to populate it with some default values, eg:</source>
          <target state="translated">这个方法最常见的使用模式可能是在迁移过程中,当刚创建完一个表,你就想用一些默认值来填充它,比如说。</target>
        </trans-unit>
        <trans-unit id="53c94369ca312f2c571a25a01b217c63a4032152" translate="yes" xml:space="preserve">
          <source>The most effective countermeasure is to &lt;em&gt;issue a new session identifier&lt;/em&gt; and declare the old one invalid after a successful login. That way, an attacker cannot use the fixed session identifier. This is a good countermeasure against session hijacking, as well. Here is how to create a new session in Rails:</source>
          <target state="translated">最有效的对策是在成功登录后&lt;em&gt;发出新的会话标识符&lt;/em&gt;并声明旧的&lt;em&gt;会话标识符&lt;/em&gt;无效。这样，攻击者无法使用固定的会话标识符。这也是防止会话劫持的好措施。这是在Rails中创建新会话的方法：</target>
        </trans-unit>
        <trans-unit id="ed10c5c1398c3d0f83d0fb9826f7a006d60d6b58" translate="yes" xml:space="preserve">
          <source>The most efficient way to implement low-level caching is using the &lt;code&gt;Rails.cache.fetch&lt;/code&gt; method. This method does both reading and writing to the cache. When passed only a single argument, the key is fetched and value from the cache is returned. If a block is passed, that block will be executed in the event of a cache miss. The return value of the block will be written to the cache under the given cache key, and that return value will be returned. In case of cache hit, the cached value will be returned without executing the block.</source>
          <target state="translated">实现低级缓存的最有效方法是使用 &lt;code&gt;Rails.cache.fetch&lt;/code&gt; 方法。此方法同时读取和写入高速缓存。仅传递单个参数时，将获取键并返回缓存中的值。如果传递了一个块，则在高速缓存未命中时将执行该块。该块的返回值将在给定的缓存键下写入到缓存中，并将返回该返回值。如果发生高速缓存命中，则将返回高速缓存的值，而不执行该块。</target>
        </trans-unit>
        <trans-unit id="1bf4622040a1d5fcf3d59cf7f1f8b690e8a3cdf9" translate="yes" xml:space="preserve">
          <source>The most generic helper is &lt;code&gt;select_tag&lt;/code&gt;, which - as the name implies - simply generates the &lt;code&gt;SELECT&lt;/code&gt; tag that encapsulates an options string:</source>
          <target state="translated">最通用的帮助器是 &lt;code&gt;select_tag&lt;/code&gt; ，顾名思义，它只是生成封装了选项字符串的 &lt;code&gt;SELECT&lt;/code&gt; 标记：</target>
        </trans-unit>
        <trans-unit id="b3bfcdc3e816b4ad131b3a2dfe0a00d3ea806652" translate="yes" xml:space="preserve">
          <source>The most generic way to jump to another datetime is &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/DateTime.html#method-i-advance&quot;&gt;&lt;code&gt;advance&lt;/code&gt;&lt;/a&gt;. This method receives a hash with keys &lt;code&gt;:years&lt;/code&gt;, &lt;code&gt;:months&lt;/code&gt;, &lt;code&gt;:weeks&lt;/code&gt;, &lt;code&gt;:days&lt;/code&gt;, &lt;code&gt;:hours&lt;/code&gt;, &lt;code&gt;:minutes&lt;/code&gt;, and &lt;code&gt;:seconds&lt;/code&gt;, and returns a datetime advanced as much as the present keys indicate.</source>
          <target state="translated">跳转到另一个日期时间的最通用方法是&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/DateTime.html#method-i-advance&quot;&gt; &lt;code&gt;advance&lt;/code&gt; &lt;/a&gt;。此方法接收包含键 &lt;code&gt;:years&lt;/code&gt; ， &lt;code&gt;:months&lt;/code&gt; ， &lt;code&gt;:weeks&lt;/code&gt; ， &lt;code&gt;:days&lt;/code&gt; ， &lt;code&gt;:hours&lt;/code&gt; ， &lt;code&gt;:minutes&lt;/code&gt; 和 &lt;code&gt;:seconds&lt;/code&gt; 的哈希，并返回与当前键指示的日期时间提前的日期时间。</target>
        </trans-unit>
        <trans-unit id="0509ac0ca8c10723fb1e7121e2ee0f87534275c0" translate="yes" xml:space="preserve">
          <source>The most generic way to jump to another datetime is &lt;code&gt;advance&lt;/code&gt;. This method receives a hash with keys &lt;code&gt;:years&lt;/code&gt;, &lt;code&gt;:months&lt;/code&gt;, &lt;code&gt;:weeks&lt;/code&gt;, &lt;code&gt;:days&lt;/code&gt;, &lt;code&gt;:hours&lt;/code&gt;, &lt;code&gt;:minutes&lt;/code&gt;, and &lt;code&gt;:seconds&lt;/code&gt;, and returns a datetime advanced as much as the present keys indicate.</source>
          <target state="translated">跳转到另一个日期时间的最通用方法是 &lt;code&gt;advance&lt;/code&gt; 。此方法接收具有键 &lt;code&gt;:years&lt;/code&gt; ， &lt;code&gt;:months&lt;/code&gt; ， &lt;code&gt;:weeks&lt;/code&gt; ， &lt;code&gt;:days&lt;/code&gt; ， &lt;code&gt;:hours&lt;/code&gt; ， &lt;code&gt;:minutes&lt;/code&gt; 和 &lt;code&gt;:seconds&lt;/code&gt; 的哈希，并返回与当前键指示的日期时间相同的日期时间。</target>
        </trans-unit>
        <trans-unit id="10fdde72309e5fae6123dcb99ad5f251fa0233e8" translate="yes" xml:space="preserve">
          <source>The most generic way to jump to other days is &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Date.html#method-i-advance&quot;&gt;&lt;code&gt;advance&lt;/code&gt;&lt;/a&gt;. This method receives a hash with keys &lt;code&gt;:years&lt;/code&gt;, &lt;code&gt;:months&lt;/code&gt;, &lt;code&gt;:weeks&lt;/code&gt;, &lt;code&gt;:days&lt;/code&gt;, and returns a date advanced as much as the present keys indicate:</source>
          <target state="translated">过渡到其他日子最通用的方法是&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Date.html#method-i-advance&quot;&gt; &lt;code&gt;advance&lt;/code&gt; &lt;/a&gt;。此方法接收具有键 &lt;code&gt;:years&lt;/code&gt; ， &lt;code&gt;:months&lt;/code&gt; ， &lt;code&gt;:weeks&lt;/code&gt; ， &lt;code&gt;:days&lt;/code&gt; 的哈希，并返回与当前键指示的日期一样高的日期：</target>
        </trans-unit>
        <trans-unit id="12e7e7cea726db9dc19377303f26cc2abd058530" translate="yes" xml:space="preserve">
          <source>The most generic way to jump to other days is &lt;code&gt;advance&lt;/code&gt;. This method receives a hash with keys &lt;code&gt;:years&lt;/code&gt;, &lt;code&gt;:months&lt;/code&gt;, &lt;code&gt;:weeks&lt;/code&gt;, &lt;code&gt;:days&lt;/code&gt;, and returns a date advanced as much as the present keys indicate:</source>
          <target state="translated">过渡到其他日子最通用的方法是 &lt;code&gt;advance&lt;/code&gt; 。此方法接收具有键 &lt;code&gt;:years&lt;/code&gt; ， &lt;code&gt;:months&lt;/code&gt; ， &lt;code&gt;:weeks&lt;/code&gt; ， &lt;code&gt;:days&lt;/code&gt; 的哈希，并返回与当前键指示的日期一样高的日期：</target>
        </trans-unit>
        <trans-unit id="ab1db0eb26e081fb619f5c2ecda6a3dfcb20b5b0" translate="yes" xml:space="preserve">
          <source>The most important methods of the I18n API are:</source>
          <target state="translated">I18n API最重要的方法是:</target>
        </trans-unit>
        <trans-unit id="4ba9a929bfe627197eb5e19693e6263041543a97" translate="yes" xml:space="preserve">
          <source>The most important of these is the controller file, &lt;code&gt;app/controllers/articles_controller.rb&lt;/code&gt;. Let's take a look at it:</source>
          <target state="translated">其中最重要的是控制器文件 &lt;code&gt;app/controllers/articles_controller.rb&lt;/code&gt; 。让我们看一下：</target>
        </trans-unit>
        <trans-unit id="de5193516e477d3a63bb08f8e687e1bad99cf2fe" translate="yes" xml:space="preserve">
          <source>The most lightweight way to get &lt;code&gt;blank?&lt;/code&gt; is to cherry-pick the file that defines it.</source>
          <target state="translated">最轻巧的方式来获得 &lt;code&gt;blank?&lt;/code&gt; 是挑选定义它的文件。</target>
        </trans-unit>
        <trans-unit id="deaa5c007cdde26cbe743db657315259b43d7a47" translate="yes" xml:space="preserve">
          <source>The most significant part of the reloading process is the Class Unload, where all autoloaded classes are removed, ready to be loaded again. This will occur immediately before either the Run or Complete callback, depending on the &lt;code&gt;reload_classes_only_on_change&lt;/code&gt; setting.</source>
          <target state="translated">重新加载过程中最重要的部分是类卸载，其中所有自动加载的类都已删除，准备再次加载。根据 &lt;code&gt;reload_classes_only_on_change&lt;/code&gt; 设置，这将在Run或Complete回调之前立即发生。</target>
        </trans-unit>
        <trans-unit id="f22b7e6bbaf30a8c9243fc72a0dbaa5e651e526a" translate="yes" xml:space="preserve">
          <source>The most simple negative CAPTCHA is one hidden honeypot field. On the server side, you will check the value of the field: If it contains any text, it must be a bot. Then, you can either ignore the post or return a positive result, but not saving the post to the database. This way the bot will be satisfied and moves on.</source>
          <target state="translated">最简单的负面验证码就是一个隐藏的蜜罐字段。在服务器端,你会检查该字段的值。如果它包含任何文本,它必须是一个机器人。然后,你可以忽略这个帖子,或者返回一个肯定的结果,但不把这个帖子保存到数据库。这样机器人就会满意并继续前进。</target>
        </trans-unit>
        <trans-unit id="5b08222207f915df820834ca331365d73b1692b3" translate="yes" xml:space="preserve">
          <source>The most usual way of setting (and passing) the locale would be to include it in URL params, as we did in the &lt;code&gt;I18n.with_locale(params[:locale], &amp;amp;action)&lt;/code&gt;&lt;em&gt;around_action&lt;/em&gt; in the first example. We would like to have URLs like &lt;code&gt;www.example.com/books?locale=ja&lt;/code&gt; or &lt;code&gt;www.example.com/ja/books&lt;/code&gt; in this case.</source>
          <target state="translated">设置（和传递）语言环境的最常用方法是将其包含在URL参数中，就像在第一个示例中的 &lt;code&gt;I18n.with_locale(params[:locale], &amp;amp;action)&lt;/code&gt; &lt;em&gt;around_action&lt;/em&gt;中&lt;em&gt;所做的&lt;/em&gt;那样。在这种情况下，我们希望使用类似 &lt;code&gt;www.example.com/books?locale=ja&lt;/code&gt; 或 &lt;code&gt;www.example.com/ja/books&lt;/code&gt; 之类的URL 。</target>
        </trans-unit>
        <trans-unit id="7e572f11bc576cfa35e26cdda3779b627b91359a" translate="yes" xml:space="preserve">
          <source>The mysql2 and postgresql adapters support setting the transaction isolation level.</source>
          <target state="translated">mysql2和postgresql适配器支持设置事务隔离级别。</target>
        </trans-unit>
        <trans-unit id="7abd2783257ce5c418b69249f67d3cccad19bd9b" translate="yes" xml:space="preserve">
          <source>The name is assumed to be the one of a top-level constant, no matter whether it starts with &amp;ldquo;::&amp;rdquo; or not. No lexical context is taken into account:</source>
          <target state="translated">无论名称是否以&amp;ldquo; ::&amp;rdquo;开头，都假定该名称是顶级常量之一。没有考虑任何词法上下文：</target>
        </trans-unit>
        <trans-unit id="7682be9c1ac3480a8408c4e7c8381256b4759439" translate="yes" xml:space="preserve">
          <source>The name may be given as a symbol or string. A symbol is tested against the bare constant name, a string is against the fully qualified constant name.</source>
          <target state="translated">名称可以是符号或字符串。符号是根据裸常数名进行测试,字符串是根据完全限定的常数名进行测试。</target>
        </trans-unit>
        <trans-unit id="ff2cc46757b67b828a3611568ef0999be93f8863" translate="yes" xml:space="preserve">
          <source>The name of children nodes is by default the name of the root node singularized. In the examples above we've seen &quot;contributor&quot; and &quot;object&quot;. The option &lt;code&gt;:children&lt;/code&gt; allows you to set these node names.</source>
          <target state="translated">子节点的名称默认情况下是单数的根节点的名称。在上面的示例中，我们看到了&amp;ldquo;贡献者&amp;rdquo;和&amp;ldquo;对象&amp;rdquo;。 &lt;code&gt;:children&lt;/code&gt; 选项允许您设置这些节点名称。</target>
        </trans-unit>
        <trans-unit id="9c6ce84bb5ee288c0d73a45b947b0bd4d166718a" translate="yes" xml:space="preserve">
          <source>The name of the column records are ordered by if no explicit order clause is used during an ordered finder call. If not set the primary key is used.</source>
          <target state="translated">如果在 ordered finder 调用期间没有使用显式的 order 子句,则列记录的名称被排序。如果没有设置,则使用主键。</target>
        </trans-unit>
        <trans-unit id="2d5cd10d5efb705d95ff6ef881164cb30052e176" translate="yes" xml:space="preserve">
          <source>The name of the event</source>
          <target state="translated">活动名称</target>
        </trans-unit>
        <trans-unit id="99cde37466813b73e8fdf6722f4504527670a021" translate="yes" xml:space="preserve">
          <source>The name of the file is passed as an argument, and the method yields a file handle opened for writing. Once the block is done &lt;code&gt;atomic_write&lt;/code&gt; closes the file handle and completes its job.</source>
          <target state="translated">文件名作为参数传递，该方法产生一个打开的文件句柄以进行写入。一旦完成该块， &lt;code&gt;atomic_write&lt;/code&gt; 将关闭文件句柄并完成其工作。</target>
        </trans-unit>
        <trans-unit id="0521ba09d337a2d778bfca23d5ae64a4f07775ab" translate="yes" xml:space="preserve">
          <source>The name of the internal metadata table. By default, the value is &lt;code&gt;&quot;ar_internal_metadata&quot;&lt;/code&gt;.</source>
          <target state="translated">内部元数据表的名称。默认情况下，值为 &lt;code&gt;&quot;ar_internal_metadata&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="87b9d571692332990b0d9ecc4d38d8bf64d75f30" translate="yes" xml:space="preserve">
          <source>The name of the other model is pluralized when declaring a &lt;code&gt;has_many&lt;/code&gt; association.</source>
          <target state="translated">声明 &lt;code&gt;has_many&lt;/code&gt; 关联时，另一个模型的名称是复数的。</target>
        </trans-unit>
        <trans-unit id="fae05eeb96ed23d05d4d24f0db744b426f26af4b" translate="yes" xml:space="preserve">
          <source>The name of the primary key, if one is to be added automatically. Defaults to &lt;code&gt;id&lt;/code&gt;. If &lt;code&gt;:id&lt;/code&gt; is false, then this option is ignored.</source>
          <target state="translated">主键的名称（如果要自动添加）。默认为 &lt;code&gt;id&lt;/code&gt; 。如果 &lt;code&gt;:id&lt;/code&gt; 为false，则忽略此选项。</target>
        </trans-unit>
        <trans-unit id="da0fc804bd180d28e2d8888d63d2769586922e81" translate="yes" xml:space="preserve">
          <source>The name of the schema migrations table. By default, the value is &lt;code&gt;&quot;schema_migrations&quot;&lt;/code&gt;.</source>
          <target state="translated">模式迁移表的名称。默认情况下，值为 &lt;code&gt;&quot;schema_migrations&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e6c80f6f8b2cab6f8d72af40fb12b078c9f2364a" translate="yes" xml:space="preserve">
          <source>The name of the table that contains the referenced primary key.</source>
          <target state="translated">包含引用的主键的表的名称。</target>
        </trans-unit>
        <trans-unit id="7b4e2235c7c60d1a2f073929cfea99b7c7914199" translate="yes" xml:space="preserve">
          <source>The name used to generate routing helpers.</source>
          <target state="translated">用于生成路由帮助程序的名称。</target>
        </trans-unit>
        <trans-unit id="3964abe7f918479b2abff91c768cdbbc000a3785" translate="yes" xml:space="preserve">
          <source>The namespace for :controller.</source>
          <target state="translated">:controller的命名空间。</target>
        </trans-unit>
        <trans-unit id="c0a61dcbd71b123c4388becd07a60ebdedcd55c9" translate="yes" xml:space="preserve">
          <source>The naming convention of controllers in Rails favors pluralization of the last word in the controller's name, although it is not strictly required (e.g. &lt;code&gt;ApplicationController&lt;/code&gt;). For example, &lt;code&gt;ClientsController&lt;/code&gt; is preferable to &lt;code&gt;ClientController&lt;/code&gt;, &lt;code&gt;SiteAdminsController&lt;/code&gt; is preferable to &lt;code&gt;SiteAdminController&lt;/code&gt; or &lt;code&gt;SitesAdminsController&lt;/code&gt;, and so on.</source>
          <target state="translated">尽管并非严格要求，但Rails中控制器的命名约定有利于控制器名称中最后一个单词的复数（例如， &lt;code&gt;ApplicationController&lt;/code&gt; ）。例如， &lt;code&gt;ClientsController&lt;/code&gt; 优于 &lt;code&gt;ClientController&lt;/code&gt; ， &lt;code&gt;SiteAdminsController&lt;/code&gt; 优于 &lt;code&gt;SiteAdminController&lt;/code&gt; 或 &lt;code&gt;SitesAdminsController&lt;/code&gt; ，依此类推。</target>
        </trans-unit>
        <trans-unit id="da43aa56708a046e9d919ba08558af7f2b7c90f6" translate="yes" xml:space="preserve">
          <source>The native Range#=== behavior is untouched.</source>
          <target state="translated">原生的Range#===行为不受影响。</target>
        </trans-unit>
        <trans-unit id="01d960ee2f543130c2fa5e0f4bbe3a7d3b4d5d58" translate="yes" xml:space="preserve">
          <source>The native Range#cover? behavior is untouched.</source>
          <target state="translated">原生的Range#cover?行为不受影响。</target>
        </trans-unit>
        <trans-unit id="addd76f14ed86b37f8794f1949371e30871af465" translate="yes" xml:space="preserve">
          <source>The native Range#include? behavior is untouched.</source>
          <target state="translated">原生的Range#include?行为不受影响。</target>
        </trans-unit>
        <trans-unit id="955570bf5e30a267b95e2b19e01795ab5b90fe19" translate="yes" xml:space="preserve">
          <source>The negative of the &lt;code&gt;Enumerable#include?&lt;/code&gt;. Returns &lt;code&gt;true&lt;/code&gt; if the collection does not include the object.</source>
          <target state="translated">&lt;code&gt;Enumerable#include?&lt;/code&gt; 的负数？。如果集合不包含该对象，则返回 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="aa592105289e44cdc2fe7058b0d283c263374192" translate="yes" xml:space="preserve">
          <source>The nesting at the top-level of code interpreted by &lt;code&gt;Kernel#load&lt;/code&gt; is empty unless the &lt;code&gt;load&lt;/code&gt; call receives a true value as second argument, in which case a newly created anonymous module is pushed by Ruby.</source>
          <target state="translated">除非 &lt;code&gt;load&lt;/code&gt; 调用将真实值作为第二个参数，否则由 &lt;code&gt;Kernel#load&lt;/code&gt; 解释的代码的顶级嵌套为空，在这种情况下，Ruby将推入一个新创建的匿名模块。</target>
        </trans-unit>
        <trans-unit id="44f681ce3d5bf281490d9093acabc279f90b97b0" translate="yes" xml:space="preserve">
          <source>The nesting in (3) consists of two module objects:</source>
          <target state="translated">(3)中的嵌套由两个模块对象组成。</target>
        </trans-unit>
        <trans-unit id="1f2776db1df9e895a5437fc06cd98a8e3f712806" translate="yes" xml:space="preserve">
          <source>The nesting is an internal stack maintained by the interpreter, and it gets modified according to these rules:</source>
          <target state="translated">嵌套是由解释器维护的内部栈,它会根据这些规则得到修改。</target>
        </trans-unit>
        <trans-unit id="d8132f087b3a3c8f4dbbe4d6d5c2d07c8a3b1719" translate="yes" xml:space="preserve">
          <source>The new Rails version might have different configuration defaults than the previous version. However, after following the steps described above, your application would still run with configuration defaults from the &lt;em&gt;previous&lt;/em&gt; Rails version. That's because the value for &lt;code&gt;config.load_defaults&lt;/code&gt; in &lt;code&gt;config/application.rb&lt;/code&gt; has not been changed yet.</source>
          <target state="translated">新的Rails版本可能具有与先前版本不同的默认配置。但是，按照上述步骤操作后，您的应用程序仍将使用&lt;em&gt;先前&lt;/em&gt; Rails版本的配置默认值运行。这是因为该值 &lt;code&gt;config.load_defaults&lt;/code&gt; 中 &lt;code&gt;config/application.rb&lt;/code&gt; 尚未改变。</target>
        </trans-unit>
        <trans-unit id="5cd4f4aaeecefdcd80f1ff388b96a1c0963cfd34" translate="yes" xml:space="preserve">
          <source>The new adjusted credit value is stored in the session.</source>
          <target state="translated">新的调整后的信用值被存储在会话中。</target>
        </trans-unit>
        <trans-unit id="3236ac103406c4313c28858fa0a2054906ffe321" translate="yes" xml:space="preserve">
          <source>The new configuration point</source>
          <target state="translated">新配置点</target>
        </trans-unit>
        <trans-unit id="0da16999f13727907b8b87c6035cd8e31952aef2" translate="yes" xml:space="preserve">
          <source>The new instance is yielded to the passed block. Typically the block will create some routes using &lt;code&gt;set.draw { match ... }&lt;/code&gt;:</source>
          <target state="translated">新实例将产生给传递的块。通常，该块将使用 &lt;code&gt;set.draw { match ... }&lt;/code&gt; 创建一些路由：</target>
        </trans-unit>
        <trans-unit id="361f89f47f1ce3ba7058a4305e31979330927e55" translate="yes" xml:space="preserve">
          <source>The new method, &lt;code&gt;update&lt;/code&gt;, is used when you want to update a record that already exists, and it accepts a hash containing the attributes that you want to update. As before, if there was an error updating the article we want to show the form back to the user.</source>
          <target state="translated">当您要更新已存在的记录时，将使用新方法 &lt;code&gt;update&lt;/code&gt; ，它接受包含要更新的属性的哈希。和以前一样，如果更新文章时出错，我们希望将表单显示给用户。</target>
        </trans-unit>
        <trans-unit id="6412348bc9179e1b6361749c95aec125c2d79269" translate="yes" xml:space="preserve">
          <source>The new record might not be saved to the database; that depends on whether validations passed or not (just like &lt;code&gt;create&lt;/code&gt;).</source>
          <target state="translated">新记录可能不会保存到数据库；这取决于验证是否通过（就像 &lt;code&gt;create&lt;/code&gt; 一样）。</target>
        </trans-unit>
        <trans-unit id="3b0901f800f4c2c35a3db6cb60e5551b6c28b8fd" translate="yes" xml:space="preserve">
          <source>The new route is another &lt;code&gt;get&lt;/code&gt; route, but it has something extra in its path: &lt;code&gt;:id&lt;/code&gt;. This designates a route &lt;em&gt;parameter&lt;/em&gt;. A route parameter captures a segment of the request's path, and puts that value into the &lt;code&gt;params&lt;/code&gt; Hash, which is accessible by the controller action. For example, when handling a request like &lt;code&gt;GET http://localhost:3000/articles/1&lt;/code&gt;, &lt;code&gt;1&lt;/code&gt; would be captured as the value for &lt;code&gt;:id&lt;/code&gt;, which would then be accessible as &lt;code&gt;params[:id]&lt;/code&gt; in the &lt;code&gt;show&lt;/code&gt; action of &lt;code&gt;ArticlesController&lt;/code&gt;.</source>
          <target state="translated">新路线是另一条 &lt;code&gt;get&lt;/code&gt; 路线，但其路径中还有一些额外的内容 &lt;code&gt;:id&lt;/code&gt; 。这指定了一个路由&lt;em&gt;参数&lt;/em&gt;。路由参数捕获请求路径的一部分，并将该值放入 &lt;code&gt;params&lt;/code&gt; 哈希中，该哈希可由控制器操作访问。例如，当处理诸如 &lt;code&gt;GET http://localhost:3000/articles/1&lt;/code&gt; 之类的请求时， &lt;code&gt;1&lt;/code&gt; 将被捕获​​为 &lt;code&gt;:id&lt;/code&gt; 的值，然后可以在 &lt;code&gt;ArticlesController&lt;/code&gt; 的 &lt;code&gt;show&lt;/code&gt; 动作中将其作为 &lt;code&gt;params[:id]&lt;/code&gt; 进行访问。</target>
        </trans-unit>
        <trans-unit id="74f8325afa2e53ab911c7dd3a1bd0b5d96aac1df" translate="yes" xml:space="preserve">
          <source>The new version updates &lt;code&gt;sanitize&lt;/code&gt;, so it can take a &lt;code&gt;Loofah::Scrubber&lt;/code&gt; for powerful scrubbing. &lt;a href=&quot;https://github.com/flavorjones/loofah#loofahscrubber&quot;&gt;See some examples of scrubbers here&lt;/a&gt;.</source>
          <target state="translated">新版本更新了 &lt;code&gt;sanitize&lt;/code&gt; ，因此可以使用 &lt;code&gt;Loofah::Scrubber&lt;/code&gt; 进行强大的清理。&lt;a href=&quot;https://github.com/flavorjones/loofah#loofahscrubber&quot;&gt;在此处查看洗涤器的一些示例&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d1894e9581c114e574d8b39a2616de5b78a0f089" translate="yes" xml:space="preserve">
          <source>The next customization on the workflow will be to stop generating stylesheet and test fixture files for scaffolds altogether. We can achieve that by changing our configuration to the following:</source>
          <target state="translated">下一个对工作流的定制将是完全停止为脚手架生成样式表和测试夹具文件。我们可以通过将我们的配置改为以下内容来实现。</target>
        </trans-unit>
        <trans-unit id="c8b49bfc24f4c677b6906642f014ecee042d3e62" translate="yes" xml:space="preserve">
          <source>The next level is to simply load all extensions to &lt;code&gt;Object&lt;/code&gt;. As a rule of thumb, extensions to &lt;code&gt;SomeClass&lt;/code&gt; are available in one shot by loading &lt;code&gt;active_support/core_ext/some_class&lt;/code&gt;.</source>
          <target state="translated">下一步是简单地将所有扩展加载到 &lt;code&gt;Object&lt;/code&gt; 。根据经验，可以通过加载 &lt;code&gt;active_support/core_ext/some_class&lt;/code&gt; 一次性获得 &lt;code&gt;SomeClass&lt;/code&gt; 的扩展。</target>
        </trans-unit>
        <trans-unit id="b6a1f1dbc7d882abfb6cfb4b67d27a4e28897661" translate="yes" xml:space="preserve">
          <source>The next line in &lt;code&gt;config/application.rb&lt;/code&gt; is:</source>
          <target state="translated">&lt;code&gt;config/application.rb&lt;/code&gt; 中的下一行是：</target>
        </trans-unit>
        <trans-unit id="890dcab656e3faff6f378319839d5ff9b37f86c6" translate="yes" xml:space="preserve">
          <source>The next problem was MySpace filtering the word &quot;javascript&quot;, so the author used &quot;java&amp;lt;NEWLINE&amp;gt;script&quot; to get around this:</source>
          <target state="translated">下一个问题是MySpace过滤了&amp;ldquo; javascript&amp;rdquo;一词，因此作者使用&amp;ldquo; java &amp;lt;NEWLINE&amp;gt; script&amp;rdquo;来解决此问题：</target>
        </trans-unit>
        <trans-unit id="95abed138dae7b61a5b5608d40b96e6a4ae0a51d" translate="yes" xml:space="preserve">
          <source>The next problem was MySpace filtering the word &lt;code&gt;&quot;javascript&quot;&lt;/code&gt;, so the author used &lt;code&gt;&quot;java&amp;lt;NEWLINE&amp;gt;script&quot;&lt;/code&gt; to get around this:</source>
          <target state="translated">下一个问题是MySpace过滤了 &lt;code&gt;&quot;javascript&quot;&lt;/code&gt; 一词，因此作者使用了 &lt;code&gt;&quot;java&amp;lt;NEWLINE&amp;gt;script&quot;&lt;/code&gt; 来解决这个问题：</target>
        </trans-unit>
        <trans-unit id="86ab928a1a7619a09a73390e50d76a97c8e90778" translate="yes" xml:space="preserve">
          <source>The next step is to make the class that represents a &lt;code&gt;User&lt;/code&gt; in the application customizable for the engine. This is because that class may not always be &lt;code&gt;User&lt;/code&gt;, as previously explained. To make this setting customizable, the engine will have a configuration setting called &lt;code&gt;author_class&lt;/code&gt; that will be used to specify which class represents users inside the application.</source>
          <target state="translated">下一步是使代表 &lt;code&gt;User&lt;/code&gt; 的类在应用程序中为引擎可定制。这是因为如前所述，该类可能并不总是 &lt;code&gt;User&lt;/code&gt; 。为了使此设置可自定义，引擎将具有一个名为 &lt;code&gt;author_class&lt;/code&gt; 的配置设置，该设置将用于指定哪个类代表应用程序内的用户。</target>
        </trans-unit>
        <trans-unit id="79e3f57a1b3ee60f1474c6b0b6b6f30307fee9e6" translate="yes" xml:space="preserve">
          <source>The next step is to switch the &lt;code&gt;Blorgh::Article&lt;/code&gt; model over to this new setting. Change the &lt;code&gt;belongs_to&lt;/code&gt; association inside this model (&lt;code&gt;app/models/blorgh/article.rb&lt;/code&gt;) to this:</source>
          <target state="translated">下一步是将 &lt;code&gt;Blorgh::Article&lt;/code&gt; 模型切换到此新设置。将此模型（ &lt;code&gt;app/models/blorgh/article.rb&lt;/code&gt; ）内的 &lt;code&gt;belongs_to&lt;/code&gt; 关联更改为：</target>
        </trans-unit>
        <trans-unit id="665b7f33f63099c0b1cea4b1fb4ebac3b0e2d737" translate="yes" xml:space="preserve">
          <source>The next thing that changes in isolated engines is the behavior of routes. Normally, when you namespace your controllers, you also need to namespace the related routes. With an isolated engine, the engine's namespace is automatically applied, so you don't need to specify it explicitly in your routes:</source>
          <target state="translated">在隔离引擎中,接下来改变的是路由的行为。通常情况下,当你给控制器命名空间时,你也需要给相关的路由命名空间。在隔离引擎中,引擎的命名空间是自动应用的,所以你不需要在路由中明确指定它。</target>
        </trans-unit>
        <trans-unit id="8035be6c63365e5b247a107ff1f6abbe4ff4d98d" translate="yes" xml:space="preserve">
          <source>The nonce is opaque to the client. Composed of &lt;a href=&quot;../../time&quot;&gt;&lt;code&gt;Time&lt;/code&gt;&lt;/a&gt;, and hash of &lt;a href=&quot;../../time&quot;&gt;&lt;code&gt;Time&lt;/code&gt;&lt;/a&gt; with secret key from the Rails session secret generated upon creation of project. Ensures the time cannot be modified by client.</source>
          <target state="translated">随机数对客户端是不透明的。由&lt;a href=&quot;../../time&quot;&gt; &lt;code&gt;Time&lt;/code&gt; &lt;/a&gt;和哈希&lt;a href=&quot;../../time&quot;&gt; &lt;code&gt;Time&lt;/code&gt; &lt;/a&gt;与在创建项目所产生的Rails的会话密钥的密钥。确保时间不能被客户端修改。</target>
        </trans-unit>
        <trans-unit id="93d819b142e381f44914883470304c3b40e5adf1" translate="yes" xml:space="preserve">
          <source>The nonce is opaque to the client. Composed of &lt;a href=&quot;../../time&quot;&gt;Time&lt;/a&gt;, and hash of &lt;a href=&quot;../../time&quot;&gt;Time&lt;/a&gt; with secret key from the Rails session secret generated upon creation of project. Ensures the time cannot be modified by client.</source>
          <target state="translated">随机数对客户端是不透明的。由&lt;a href=&quot;../../time&quot;&gt;时间&lt;/a&gt;和哈希&lt;a href=&quot;../../time&quot;&gt;时间&lt;/a&gt;与在创建项目所产生的Rails的会话密钥的密钥。确保时间不能被客户端修改。</target>
        </trans-unit>
        <trans-unit id="d6afe7561df1d98a902707f851ee94efab958e53" translate="yes" xml:space="preserve">
          <source>The number in the middle is the &lt;code&gt;product_id&lt;/code&gt; followed by the timestamp value in the &lt;code&gt;updated_at&lt;/code&gt; attribute of the product record. Rails uses the timestamp value to make sure it is not serving stale data. If the value of &lt;code&gt;updated_at&lt;/code&gt; has changed, a new key will be generated. Then Rails will write a new cache to that key, and the old cache written to the old key will never be used again. This is called key-based expiration.</source>
          <target state="translated">中间的数字是 &lt;code&gt;product_id&lt;/code&gt; ,后跟产品记录的 &lt;code&gt;updated_at&lt;/code&gt; 属性中的时间戳记值。Rails使用时间戳记值来确保它不提供过时的数据。如果 &lt;code&gt;updated_at&lt;/code&gt; 的值已更改，将生成一个新密钥。然后，Rails将向该键写入新的缓存，并且写入旧键的旧缓存将不再使用。这称为基于密钥的到期。</target>
        </trans-unit>
        <trans-unit id="8ee1df042709719100df6be6c3b0a3fd04dc19b3" translate="yes" xml:space="preserve">
          <source>The number of arguments in the signature must match. If the object responds to the method the call is attempted and &lt;code&gt;ArgumentError&lt;/code&gt; is still raised in case of argument mismatch.</source>
          <target state="translated">签名中的参数数量必须匹配。如果对象响应该方法，则会尝试调用，并且在参数不匹配的情况下仍会引发 &lt;code&gt;ArgumentError&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="505e9d95ab3606901bc6ffa80ead6b281f7cb035" translate="yes" xml:space="preserve">
          <source>The number of iterations that will be done by the partial.</source>
          <target state="translated">部分要做的迭代次数。</target>
        </trans-unit>
        <trans-unit id="038422c23b9cb97bfa4b6a6b66a4d0be0680f470" translate="yes" xml:space="preserve">
          <source>The number of workers passed is the number of times the process will be forked. You may want to parallelize your local test suite differently from your CI, so an environment variable is provided to be able to easily change the number of workers a test run should use:</source>
          <target state="translated">通过的工作者数量是指进程将被分叉的次数。您可能希望以不同于CI的方式并行化您的本地测试套件,因此提供了一个环境变量,以便能够轻松地改变测试运行应该使用的工人数量。</target>
        </trans-unit>
        <trans-unit id="33d090a4862daa4700aeb1957ac30a3aad04f48a" translate="yes" xml:space="preserve">
          <source>The number of workers passed to &lt;code&gt;parallelize&lt;/code&gt; determines the number of threads the tests will use. You may want to parallelize your local test suite differently from your CI, so an environment variable is provided to be able to easily change the number of workers a test run should use:</source>
          <target state="translated">传递给 &lt;code&gt;parallelize&lt;/code&gt; 的工作程序数量决定了测试将使用的线程数量。您可能希望以不同于CI的方式并行化本地测试套件，因此提供了一个环境变量，以便可以轻松更改测试运行应使用的工作程序数量：</target>
        </trans-unit>
        <trans-unit id="bec8710416db3a7f64fed68d9b0b0bf55970a04e" translate="yes" xml:space="preserve">
          <source>The object in the &lt;code&gt;params&lt;/code&gt; hash is an instance of &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionDispatch/Http/UploadedFile.html&quot;&gt;&lt;code&gt;ActionDispatch::Http::UploadedFile&lt;/code&gt;&lt;/a&gt;. The following snippet saves the uploaded file in &lt;code&gt;#{Rails.root}/public/uploads&lt;/code&gt; under the same name as the original file.</source>
          <target state="translated">&lt;code&gt;params&lt;/code&gt; 哈希中的对象是&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionDispatch/Http/UploadedFile.html&quot;&gt; &lt;code&gt;ActionDispatch::Http::UploadedFile&lt;/code&gt; &lt;/a&gt;的实例。以下代码段将上传的文件以与原始文件相同的名称保存在 &lt;code&gt;#{Rails.root}/public/uploads&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="638d1c2387bff55fda430b14e4440039041a5b60" translate="yes" xml:space="preserve">
          <source>The object passed as &lt;code&gt;:model&lt;/code&gt; in &lt;code&gt;form_with&lt;/code&gt; controls the key used in &lt;code&gt;params&lt;/code&gt; to access the form's values. Here the name is &lt;code&gt;article&lt;/code&gt; and so all the inputs have names of the form &lt;code&gt;article[attribute_name]&lt;/code&gt;. Accordingly, in the &lt;code&gt;create&lt;/code&gt; action &lt;code&gt;params[:article]&lt;/code&gt; will be a hash with keys &lt;code&gt;:title&lt;/code&gt; and &lt;code&gt;:body&lt;/code&gt;. You can read more about the significance of input names in chapter &lt;a href=&quot;#understanding-parameter-naming-conventions&quot;&gt;Understanding Parameter Naming Conventions&lt;/a&gt; of this guide.</source>
          <target state="translated">在 &lt;code&gt;form_with&lt;/code&gt; 中作为 &lt;code&gt;:model&lt;/code&gt; 传递的对象控制在 &lt;code&gt;params&lt;/code&gt; 中使用的键以访问表单的值。这里的名称是 &lt;code&gt;article&lt;/code&gt; ，因此所有输入都具有 &lt;code&gt;article[attribute_name]&lt;/code&gt; 形式的名称。因此，在 &lt;code&gt;create&lt;/code&gt; 动作中， &lt;code&gt;params[:article]&lt;/code&gt; 将是带有键 &lt;code&gt;:title&lt;/code&gt; 和 &lt;code&gt;:body&lt;/code&gt; 的哈希。您可以在本指南的&lt;a href=&quot;#understanding-parameter-naming-conventions&quot;&gt;了解参数命名约定&lt;/a&gt;一章中了解有关输入名称的含义的更多信息。</target>
        </trans-unit>
        <trans-unit id="3db7e74818e7069b61951f9db787751ef0935d02" translate="yes" xml:space="preserve">
          <source>The object returned is a relation, which can be further extended.</source>
          <target state="translated">返回的对象是一个关系,可以进一步扩展。</target>
        </trans-unit>
        <trans-unit id="7ee58bc1aa9442c84125f9312a20866565bb95cb" translate="yes" xml:space="preserve">
          <source>The object which the error belongs to</source>
          <target state="translated">错误所属的对象</target>
        </trans-unit>
        <trans-unit id="7ebeb64ea392c06389da82d15b57e2dc0fb1998e" translate="yes" xml:space="preserve">
          <source>The object yielded by &lt;code&gt;fields_for&lt;/code&gt; is a form builder like the one yielded by &lt;code&gt;form_with&lt;/code&gt;.</source>
          <target state="translated">由 &lt;code&gt;fields_for&lt;/code&gt; 产生的对象是一个表单生成器，类似于由 &lt;code&gt;form_with&lt;/code&gt; 产生的对象。</target>
        </trans-unit>
        <trans-unit id="fea8f8996397205887d460fe4b147f31a68fa5ae" translate="yes" xml:space="preserve">
          <source>The object yielded by &lt;code&gt;form_with&lt;/code&gt; and &lt;code&gt;fields_for&lt;/code&gt; is an instance of &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionView/Helpers/FormBuilder.html&quot;&gt;&lt;code&gt;ActionView::Helpers::FormBuilder&lt;/code&gt;&lt;/a&gt;. Form builders encapsulate the notion of displaying form elements for a single object. While you can write helpers for your forms in the usual way, you can also create a subclass of &lt;code&gt;ActionView::Helpers::FormBuilder&lt;/code&gt;, and add the helpers there. For example,</source>
          <target state="translated">由 &lt;code&gt;form_with&lt;/code&gt; 和 &lt;code&gt;fields_for&lt;/code&gt; 产生的对象是&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionView/Helpers/FormBuilder.html&quot;&gt; &lt;code&gt;ActionView::Helpers::FormBuilder&lt;/code&gt; &lt;/a&gt;的实例。表单构建器封装了显示单个对象的表单元素的概念。虽然您可以使用通常的方式为表单编写帮助程序，但也可以创建 &lt;code&gt;ActionView::Helpers::FormBuilder&lt;/code&gt; 的子类，并在其中添加帮助程序。例如，</target>
        </trans-unit>
        <trans-unit id="57072ad448de4139f9cc538a750565d5bae03dd9" translate="yes" xml:space="preserve">
          <source>The object yielded by &lt;code&gt;form_with&lt;/code&gt; and &lt;code&gt;fields_for&lt;/code&gt; is an instance of &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionView/Helpers/FormBuilder.html&quot;&gt;&lt;code&gt;ActionView::Helpers::FormBuilder&lt;/code&gt;&lt;/a&gt;. Form builders encapsulate the notion of displaying form elements for a single object. While you can write helpers for your forms in the usual way, you can also create subclass &lt;code&gt;ActionView::Helpers::FormBuilder&lt;/code&gt; and add the helpers there. For example:</source>
          <target state="translated">由 &lt;code&gt;form_with&lt;/code&gt; 和 &lt;code&gt;fields_for&lt;/code&gt; 产生的对象是&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionView/Helpers/FormBuilder.html&quot;&gt; &lt;code&gt;ActionView::Helpers::FormBuilder&lt;/code&gt; &lt;/a&gt;的实例。表单构建器封装了显示单个对象的表单元素的概念。虽然可以用通常的方式为表单编写帮助程序，但也可以创建子类 &lt;code&gt;ActionView::Helpers::FormBuilder&lt;/code&gt; 并在其中添加帮助程序。例如：</target>
        </trans-unit>
        <trans-unit id="3de27dfed2e4c78b35ecc58982517007c169ac2a" translate="yes" xml:space="preserve">
          <source>The only ActiveStorage service that provides this hook so far is GCS.</source>
          <target state="translated">到目前为止,唯一提供这个钩子的ActiveStorage服务是GCS。</target>
        </trans-unit>
        <trans-unit id="caaae6a0029374b4c88ed2f441090956efc2faaa" translate="yes" xml:space="preserve">
          <source>The only catch with using the SCM options is that you have to make your application's directory first, then initialize your SCM, then you can run the &lt;code&gt;rails new&lt;/code&gt; command to generate the basis of your app.</source>
          <target state="translated">使用SCM选项的唯一陷阱是，您必须首先创建应用程序的目录，然后初始化SCM，然后才能运行 &lt;code&gt;rails new&lt;/code&gt; 命令来生成应用程序的基础。</target>
        </trans-unit>
        <trans-unit id="7c023b3703738247136fd6b3e082be811c39b62e" translate="yes" xml:space="preserve">
          <source>The only downside to this code is that it requires a round trip to the browser: the browser requested the show action with &lt;code&gt;/books/1&lt;/code&gt; and the controller finds that there are no books, so the controller sends out a 302 redirect response to the browser telling it to go to &lt;code&gt;/books/&lt;/code&gt;, the browser complies and sends a new request back to the controller asking now for the &lt;code&gt;index&lt;/code&gt; action, the controller then gets all the books in the database and renders the index template, sending it back down to the browser which then shows it on your screen.</source>
          <target state="translated">该代码的唯一缺点是需要往返于浏览器：浏览器使用 &lt;code&gt;/books/1&lt;/code&gt; 请求show操作，并且控制器发现没有书籍，因此控制器向浏览器发送302重定向响应告诉它转到 &lt;code&gt;/books/&lt;/code&gt; ，浏览器进行编译，然后向控制器发送新请求，要求立即执行 &lt;code&gt;index&lt;/code&gt; 操作，然后控制器获取数据库中的所有书籍并呈现索引模板，然后将其发送回给浏览器，然后将其显示在屏幕上。</target>
        </trans-unit>
        <trans-unit id="fc98b0333a36a5de22e2fad582904083f06df014" translate="yes" xml:space="preserve">
          <source>The only exception in &lt;a href=&quot;activemodel&quot;&gt;&lt;code&gt;ActiveModel&lt;/code&gt;&lt;/a&gt; for &lt;a href=&quot;../../activerecord&quot;&gt;&lt;code&gt;ActiveRecord&lt;/code&gt;&lt;/a&gt; is the use of self.build instead of self.new.</source>
          <target state="translated">唯一的例外中&lt;a href=&quot;activemodel&quot;&gt; &lt;code&gt;ActiveModel&lt;/code&gt; &lt;/a&gt;的&lt;a href=&quot;../../activerecord&quot;&gt; &lt;code&gt;ActiveRecord&lt;/code&gt; 的&lt;/a&gt;是利用self.build代替self.new的。</target>
        </trans-unit>
        <trans-unit id="e864bfdb02d383ce40daeb3ce7e75a9c7a05ef9f" translate="yes" xml:space="preserve">
          <source>The only exception in &lt;a href=&quot;activemodel&quot;&gt;ActiveModel&lt;/a&gt; for &lt;a href=&quot;../../activerecord&quot;&gt;ActiveRecord&lt;/a&gt; is the use of self.build instead of self.new.</source>
          <target state="translated">&lt;a href=&quot;activemodel&quot;&gt;ActiveModel&lt;/a&gt;中的&lt;a href=&quot;../../activerecord&quot;&gt;ActiveRecord&lt;/a&gt;唯一例外是使用self.build而不是self.new。</target>
        </trans-unit>
        <trans-unit id="34c0aabafc22ecd298ab851ec0d24c56c1e88a3c" translate="yes" xml:space="preserve">
          <source>The only folder seen by the world as-is. Contains static files and compiled assets.</source>
          <target state="translated">世界唯一能看到的文件夹,保持原样。包含静态文件和编译后的资产。</target>
        </trans-unit>
        <trans-unit id="663af767fd7a7f252ce4ee85857ca02667951d37" translate="yes" xml:space="preserve">
          <source>The only option specific to &lt;code&gt;link_to&lt;/code&gt; (&lt;code&gt;:method&lt;/code&gt;) is used as follows:</source>
          <target state="translated">特定于 &lt;code&gt;link_to&lt;/code&gt; （ &lt;code&gt;:method&lt;/code&gt; ）的唯一选项如下：</target>
        </trans-unit>
        <trans-unit id="7c0ff2b98d6f31ee4756bfd1d58b0f4832f27608" translate="yes" xml:space="preserve">
          <source>The only way to explicitly not use the connection information in &lt;code&gt;ENV['DATABASE_URL']&lt;/code&gt; is to specify an explicit URL connection using the &lt;code&gt;&quot;url&quot;&lt;/code&gt; sub key:</source>
          <target state="translated">显式不使用 &lt;code&gt;ENV['DATABASE_URL']&lt;/code&gt; 的连接信息的唯一方法是使用 &lt;code&gt;&quot;url&quot;&lt;/code&gt; 子键指定显式URL连接：</target>
        </trans-unit>
        <trans-unit id="485f1b08d0393f65ac194833dc19f2f4b02d18c0" translate="yes" xml:space="preserve">
          <source>The option &lt;code&gt;:prefix&lt;/code&gt; adds a prefix to the name of the generated method. This may be handy for example to get a better name:</source>
          <target state="translated">&lt;code&gt;:prefix&lt;/code&gt; 选项为生成的方法的名称添加前缀。例如，使用一个更好的名字可能会很方便：</target>
        </trans-unit>
        <trans-unit id="d676be4f5f3aec25fb5d02ebd5821b65122eba01" translate="yes" xml:space="preserve">
          <source>The option &lt;code&gt;:private&lt;/code&gt; changes methods scope:</source>
          <target state="translated">&lt;code&gt;:private&lt;/code&gt; 选项可更改方法范围：</target>
        </trans-unit>
        <trans-unit id="ebf24d67cdabeb37ae32a041724d968a479a51ca" translate="yes" xml:space="preserve">
          <source>The option &lt;code&gt;:separator&lt;/code&gt; can be a regexp:</source>
          <target state="translated">&lt;code&gt;:separator&lt;/code&gt; 选项可以是一个正则表达式：</target>
        </trans-unit>
        <trans-unit id="0490cc17857480b9ef81752f108a7a4d9fbadfb9" translate="yes" xml:space="preserve">
          <source>The option &lt;code&gt;include_root_in_json&lt;/code&gt; controls the top-level behavior of &lt;code&gt;as_json&lt;/code&gt;. If &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;as_json&lt;/code&gt; will emit a single root node named after the object's type. The default value for &lt;code&gt;include_root_in_json&lt;/code&gt; option is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">选项 &lt;code&gt;include_root_in_json&lt;/code&gt; 控制 &lt;code&gt;as_json&lt;/code&gt; 的顶级行为。如果为 &lt;code&gt;true&lt;/code&gt; ，则 &lt;code&gt;as_json&lt;/code&gt; 将发出一个以对象类型命名的根节点。 &lt;code&gt;include_root_in_json&lt;/code&gt; 选项的默认值为 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0ce777a5e57cdf17270d4c689d41bf2c6a2b14b4" translate="yes" xml:space="preserve">
          <source>The option symbols for setting cookies are:</source>
          <target state="translated">设置Cookie的选项符号是:</target>
        </trans-unit>
        <trans-unit id="bc84187c74ec254bde3266c466aa3c582e0b4eff" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;:lock&lt;/code&gt; flag option allows you to lock the reloaded record:</source>
          <target state="translated">可选的 &lt;code&gt;:lock&lt;/code&gt; 标志选项使您可以锁定重新加载的记录：</target>
        </trans-unit>
        <trans-unit id="336ab459b6485d2886e181144760cc2ad7abeb56" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;if:&lt;/code&gt; argument accepts a truthy/falsy value or an object that responds to &lt;code&gt;.call&lt;/code&gt;. If truthy, then matching warnings will be allowed. If falsey then the method yields to the block without allowing the warning.</source>
          <target state="translated">可选的 &lt;code&gt;if:&lt;/code&gt; 参数接受一个truthy / falsy值或一个对象，该响应 &lt;code&gt;.call&lt;/code&gt; 。如果为真，则将允许匹配警告。如果为假，则该方法在不允许警告的情况下屈服于该块。</target>
        </trans-unit>
        <trans-unit id="ecb1b69daa018b38b7e714147d617a0beace3731" translate="yes" xml:space="preserve">
          <source>The optional envs given as argument and the hash with group dependencies;</source>
          <target state="translated">作为参数给定的可选envs和带有组依赖关系的哈希。</target>
        </trans-unit>
        <trans-unit id="8bad16bbf06e5c49b47b6289efd545cfe8573f00" translate="yes" xml:space="preserve">
          <source>The options &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;finish&lt;/code&gt; are especially useful if you want multiple workers dealing with the same processing queue. You can make worker 1 handle all the records between id 1 and 9999 and worker 2 handle from 10000 and beyond by setting the &lt;code&gt;:start&lt;/code&gt; and &lt;code&gt;:finish&lt;/code&gt; option on each worker.</source>
          <target state="translated">如果您希望多个工作人员处理同一处理队列，则选项 &lt;code&gt;start&lt;/code&gt; 和 &lt;code&gt;finish&lt;/code&gt; 特别有用。通过在每个工作程序上设置 &lt;code&gt;:start&lt;/code&gt; 和 &lt;code&gt;:finish&lt;/code&gt; 选项，可以使工作程序1处理id 1和9999之间的所有记录，使工作程序2处理10000及以后的记录。</target>
        </trans-unit>
        <trans-unit id="fedec4d892fc12eab521b8368ec8823d40ac4794" translate="yes" xml:space="preserve">
          <source>The options for &lt;a href=&quot;atomfeedhelper#method-i-atom_feed&quot;&gt;#atom_feed&lt;/a&gt; are:</source>
          <target state="translated">&lt;a href=&quot;atomfeedhelper#method-i-atom_feed&quot;&gt;#atom_feed&lt;/a&gt;的选项为：</target>
        </trans-unit>
        <trans-unit id="a0057ee5f702ab7519d47406e8c77a7e336b856d" translate="yes" xml:space="preserve">
          <source>The options for &lt;a href=&quot;atomfeedhelper#method-i-atom_feed&quot;&gt;&lt;code&gt;atom_feed&lt;/code&gt;&lt;/a&gt; are:</source>
          <target state="translated">&lt;a href=&quot;atomfeedhelper#method-i-atom_feed&quot;&gt; &lt;code&gt;atom_feed&lt;/code&gt; &lt;/a&gt;的选项为：</target>
        </trans-unit>
        <trans-unit id="41953f0040392b7d0f4ad2663cc42a50b8be8ed0" translate="yes" xml:space="preserve">
          <source>The options hash is passed to the underlying cache implementation.</source>
          <target state="translated">选项哈希被传递给底层缓存实现。</target>
        </trans-unit>
        <trans-unit id="92b1bd4dfe279a0b6d6f24784cc22f88f3542d92" translate="yes" xml:space="preserve">
          <source>The options map directly to &lt;a href=&quot;https://github.com/janko-m/image_processing&quot;&gt;ImageProcessing&lt;/a&gt; commands.</source>
          <target state="translated">这些选项直接映射到&lt;a href=&quot;https://github.com/janko-m/image_processing&quot;&gt;ImageProcessing&lt;/a&gt;命令。</target>
        </trans-unit>
        <trans-unit id="b81cb3f36e09679bafae42dc7251254763394afc" translate="yes" xml:space="preserve">
          <source>The options provided when calling `errors#add`</source>
          <target state="translated">调用 &quot;errors#add &quot;时提供的选项。</target>
        </trans-unit>
        <trans-unit id="7eeb5a5bc634b08fc4f1b6083706e1781ce77e46" translate="yes" xml:space="preserve">
          <source>The options version of redirect allows you to supply only the parts of the URL which need to change, it also supports interpolation of the path similar to the first example.</source>
          <target state="translated">重定向的选项版本允许你只提供URL中需要更改的部分,它也支持类似第一个例子的路径插值。</target>
        </trans-unit>
        <trans-unit id="45cc4dd11762c701415947a3cd200605db900701" translate="yes" xml:space="preserve">
          <source>The order in which files are eager loaded is undefined.</source>
          <target state="translated">文件急于加载的顺序是未定义的。</target>
        </trans-unit>
        <trans-unit id="338f8ced7409f9b6ec13ebf9eab9b58b6549e163" translate="yes" xml:space="preserve">
          <source>The order in which helpers from more than one directory are loaded has changed in Rails 4.0. Previously, they were gathered and then sorted alphabetically. After upgrading to Rails 4.0, helpers will preserve the order of loaded directories and will be sorted alphabetically only within each directory. Unless you explicitly use the &lt;code&gt;helpers_path&lt;/code&gt; parameter, this change will only impact the way of loading helpers from engines. If you rely on the ordering, you should check if correct methods are available after upgrade. If you would like to change the order in which engines are loaded, you can use &lt;code&gt;config.railties_order=&lt;/code&gt; method.</source>
          <target state="translated">在Rails 4.0中，从多个目录中加载帮助程序的顺序已更改。以前，它们是收集在一起的，然后按字母顺序排序。升级到Rails 4.0后，助手将保留加载目录的顺序，并且仅在每个目录中按字母顺序排序。除非您明确使用 &lt;code&gt;helpers_path&lt;/code&gt; 参数，否则此更改将仅影响从引擎加载助手的方式。如果您依赖订购，则应检查升级后是否可以使用正确的方法。如果要更改引擎的加载顺序，可以使用 &lt;code&gt;config.railties_order=&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="7f79a6fadd87c66fa259266c738bf34142097f62" translate="yes" xml:space="preserve">
          <source>The order in which jobs are processed can be configured differently depending on the adapter.</source>
          <target state="translated">根据适配器的不同,可以配置不同的作业处理顺序。</target>
        </trans-unit>
        <trans-unit id="4660c5ab3c3d9ae3dd6bf0c0e1eaefdf8ef89ec0" translate="yes" xml:space="preserve">
          <source>The order in which these classes are returned is unspecified.</source>
          <target state="translated">这些类的返回顺序是没有规定的。</target>
        </trans-unit>
        <trans-unit id="80069d6fee26801de2e5e79b49b962b023fa71f9" translate="yes" xml:space="preserve">
          <source>The order of the parts getting inserted is determined by the &lt;code&gt;:parts_order&lt;/code&gt; inside of the &lt;code&gt;ActionMailer::Base.default&lt;/code&gt; method.</source>
          <target state="translated">插入零件的顺序由 &lt;code&gt;ActionMailer::Base.default&lt;/code&gt; 方法内的 &lt;code&gt;:parts_order&lt;/code&gt; 确定。</target>
        </trans-unit>
        <trans-unit id="e2922c4f0610a60fd83d95bc4625e590fe1de4c8" translate="yes" xml:space="preserve">
          <source>The other common option to configure is the log tags applied to the per-connection logger. Here's an example that uses the user account id if available, else &quot;no-account&quot; while tagging:</source>
          <target state="translated">另一个常见的配置选项是应用于每个连接记录器的日志标签。这里有一个例子,如果有用户账户id,则使用用户账户id,否则在标记时使用 &quot;no-account&quot;。</target>
        </trans-unit>
        <trans-unit id="b590272dbc4291a5ec0f0a787d5da3c74a48aa22" translate="yes" xml:space="preserve">
          <source>The other option for compressing CSS if you have the sass-rails gem installed is</source>
          <target state="translated">如果你安装了sass-rails gem,压缩CSS的另一个选项是</target>
        </trans-unit>
        <trans-unit id="8f9ca12326137875e63ad6771e8cba598bbeb967" translate="yes" xml:space="preserve">
          <source>The output tempfile is opened in the directory returned by &lt;a href=&quot;previewer#method-i-tmpdir&quot;&gt;&lt;code&gt;tmpdir&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">输出临时文件在&lt;a href=&quot;previewer#method-i-tmpdir&quot;&gt; &lt;code&gt;tmpdir&lt;/code&gt; &lt;/a&gt;返回的目录中打开。</target>
        </trans-unit>
        <trans-unit id="196e3e845bbd8998ec86973e62e45a7a873a74bc" translate="yes" xml:space="preserve">
          <source>The output tempfile is opened in the directory returned by &lt;a href=&quot;previewer#method-i-tmpdir&quot;&gt;tmpdir&lt;/a&gt;.</source>
          <target state="translated">输出临时文件在&lt;a href=&quot;previewer#method-i-tmpdir&quot;&gt;tmpdir&lt;/a&gt;返回的目录中打开。</target>
        </trans-unit>
        <trans-unit id="781ad50fc530a421e9d27dbfa906b4aebe4123b2" translate="yes" xml:space="preserve">
          <source>The parameters in the forms are accessible in controllers according to their name nesting. So inputs named &lt;code&gt;title&lt;/code&gt; and &lt;code&gt;post[title]&lt;/code&gt; are accessible as &lt;code&gt;params[:title]&lt;/code&gt; and &lt;code&gt;params[:post][:title]&lt;/code&gt; respectively.</source>
          <target state="translated">表单中的参数可根据其名称嵌套在控制器中访问。因此，分别以 &lt;code&gt;params[:title]&lt;/code&gt; 和 &lt;code&gt;params[:post][:title]&lt;/code&gt; 形式访问名为 &lt;code&gt;title&lt;/code&gt; 和 &lt;code&gt;post[title]&lt;/code&gt; 输入。</target>
        </trans-unit>
        <trans-unit id="7acce9bd0f8ebeb41299d3c5d39790821251f354" translate="yes" xml:space="preserve">
          <source>The params hash has a nested person value, which can therefore be accessed with &lt;code&gt;params[:person]&lt;/code&gt; in the controller.</source>
          <target state="translated">params哈希具有嵌套的person值，因此可以在控制器中使用 &lt;code&gt;params[:person]&lt;/code&gt; 进行访问。</target>
        </trans-unit>
        <trans-unit id="b1f382907f48466d6409760d407191f01637a0f9" translate="yes" xml:space="preserve">
          <source>The params object created when this form is submitted would look like:</source>
          <target state="translated">提交此表格时创建的params对象会是这样的。</target>
        </trans-unit>
        <trans-unit id="a22d4f278f8aeadd352f595fa70b33907e1f9099" translate="yes" xml:space="preserve">
          <source>The parent namespace, &quot;A&quot;, may not reflect nesting at a given spot.</source>
          <target state="translated">父名空间 &quot;A &quot;可能无法反映在某一位置的嵌套。</target>
        </trans-unit>
        <trans-unit id="6ea5a8450dc660e2360062956f4fc310b23802e1" translate="yes" xml:space="preserve">
          <source>The parent of top-level and anonymous modules is &lt;a href=&quot;object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">顶级和匿名模块的父级是&lt;a href=&quot;object&quot;&gt; &lt;code&gt;Object&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fa88e48a48c300647e152fdf64f231b79f2e6cac" translate="yes" xml:space="preserve">
          <source>The parent of top-level and anonymous modules is &lt;a href=&quot;object&quot;&gt;Object&lt;/a&gt;.</source>
          <target state="translated">顶级和匿名模块的父级是&lt;a href=&quot;object&quot;&gt;Object&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e70e4385028599bc0890d172e091f651173988f3" translate="yes" xml:space="preserve">
          <source>The path prefix for the routes.</source>
          <target state="translated">途径的路径前缀。</target>
        </trans-unit>
        <trans-unit id="8a2dd5a0b629cf6bb84f63e15d0a368551d1b4f3" translate="yes" xml:space="preserve">
          <source>The path to the schema cache dump file for a database. If omitted, the filename will be read from ENV or a default will be derived.</source>
          <target state="translated">数据库的模式缓存转储文件的路径。如果省略,文件名将从ENV中读取,或者导出默认值。</target>
        </trans-unit>
        <trans-unit id="8b49906b65248bb2a02d7efa1852cdde693d1597" translate="yes" xml:space="preserve">
          <source>The pattern used to match explicit dependencies is &lt;code&gt;/# Template
Dependency: (\S+)/&lt;/code&gt;, so it's important that you type it out just so. You can only declare one template dependency per line.</source>
          <target state="translated">用来匹配显式依赖项的模式是 &lt;code&gt;/# Template Dependency: (\S+)/&lt;/code&gt; ，因此键入正确的模式非常重要。每行只能声明一个模板依赖项。</target>
        </trans-unit>
        <trans-unit id="a9e9c2775512158c82915ce14fd279245dc64fea" translate="yes" xml:space="preserve">
          <source>The payload (described in future sections)</source>
          <target state="translated">有效载荷(在今后的章节中说明)</target>
        </trans-unit>
        <trans-unit id="202c79dce79999d668dd4c269eaef15bd452360a" translate="yes" xml:space="preserve">
          <source>The payload (described in previous sections)</source>
          <target state="translated">有效载荷(前几节所述)</target>
        </trans-unit>
        <trans-unit id="19698fc3977432b8ba532562866f2175617a2f1e" translate="yes" xml:space="preserve">
          <source>The permitted scalar types are &lt;code&gt;String&lt;/code&gt;, &lt;code&gt;Symbol&lt;/code&gt;, &lt;code&gt;NilClass&lt;/code&gt;, &lt;code&gt;Numeric&lt;/code&gt;, &lt;code&gt;TrueClass&lt;/code&gt;, &lt;code&gt;FalseClass&lt;/code&gt;, &lt;code&gt;Date&lt;/code&gt;, &lt;code&gt;Time&lt;/code&gt;, &lt;code&gt;DateTime&lt;/code&gt;, &lt;code&gt;StringIO&lt;/code&gt;, &lt;code&gt;IO&lt;/code&gt;, &lt;code&gt;ActionDispatch::Http::UploadedFile&lt;/code&gt;, and &lt;code&gt;Rack::Test::UploadedFile&lt;/code&gt;.</source>
          <target state="translated">允许的标量类型为 &lt;code&gt;String&lt;/code&gt; ， &lt;code&gt;Symbol&lt;/code&gt; ， &lt;code&gt;NilClass&lt;/code&gt; ， &lt;code&gt;Numeric&lt;/code&gt; ， &lt;code&gt;TrueClass&lt;/code&gt; ， &lt;code&gt;FalseClass&lt;/code&gt; ， &lt;code&gt;Date&lt;/code&gt; ， &lt;code&gt;Time&lt;/code&gt; ， &lt;code&gt;DateTime&lt;/code&gt; ， &lt;code&gt;StringIO&lt;/code&gt; ， &lt;code&gt;IO&lt;/code&gt; ， &lt;code&gt;ActionDispatch::Http::UploadedFile&lt;/code&gt; 和 &lt;code&gt;Rack::Test::UploadedFile&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0d9fe577f207f6e519a775e2220ac855388fee63" translate="yes" xml:space="preserve">
          <source>The phrase &amp;ldquo;Updating salaries&amp;hellip;&amp;rdquo; would then be printed, along with the benchmark for the block when the block completes.</source>
          <target state="translated">块完成后，将打印短语&amp;ldquo;正在更新薪水&amp;hellip;&amp;hellip;&amp;rdquo;以及该块的基准。</target>
        </trans-unit>
        <trans-unit id="211a16b14e6131fc9047c75ee343534532a31b7c" translate="yes" xml:space="preserve">
          <source>The pool first tries to gain ownership of all connections. If unable to do so within a timeout interval (default duration is &lt;code&gt;spec.config[:checkout_timeout] * 2&lt;/code&gt; seconds), then the pool forcefully clears the cache and reloads connections without any regard for other connection owning threads.</source>
          <target state="translated">池首先尝试获得所有连接的所有权。如果无法在超时间隔（默认持续时间为 &lt;code&gt;spec.config[:checkout_timeout] * 2&lt;/code&gt; 秒）内这样做，则该池将强制清除缓存并重新加载连接，而无需考虑其他拥有连接的线程。</target>
        </trans-unit>
        <trans-unit id="b737fd02684471a726d9203f4d5534cf0b4a32c7" translate="yes" xml:space="preserve">
          <source>The pool first tries to gain ownership of all connections. If unable to do so within a timeout interval (default duration is &lt;code&gt;spec.config[:checkout_timeout] * 2&lt;/code&gt; seconds), then the pool is forcefully disconnected without any regard for other connection owning threads.</source>
          <target state="translated">池首先尝试获得所有连接的所有权。如果无法在超时间隔（默认持续时间为 &lt;code&gt;spec.config[:checkout_timeout] * 2&lt;/code&gt; 秒）内这样做，则将池强制断开连接，而不考虑其他拥有连接的线程。</target>
        </trans-unit>
        <trans-unit id="043ef0651a5185dbb1d4310ac69dd97001b88323" translate="yes" xml:space="preserve">
          <source>The pool first tries to gain ownership of all connections. If unable to do so within a timeout interval (default duration is &lt;code&gt;spec.db_config.checkout_timeout * 2&lt;/code&gt; seconds), then the pool forcefully clears the cache and reloads connections without any regard for other connection owning threads.</source>
          <target state="translated">池首先尝试获得所有连接的所有权。如果无法在超时间隔（默认持续时间为 &lt;code&gt;spec.db_config.checkout_timeout * 2&lt;/code&gt; 秒）内执行此操作，则池将强制清除高速缓存并重新加载连接，而无需考虑其他拥有连接的线程。</target>
        </trans-unit>
        <trans-unit id="928e74f739977016b03bc6c121a2e6a2302ec5ff" translate="yes" xml:space="preserve">
          <source>The pool first tries to gain ownership of all connections. If unable to do so within a timeout interval (default duration is &lt;code&gt;spec.db_config.checkout_timeout * 2&lt;/code&gt; seconds), then the pool is forcefully disconnected without any regard for other connection owning threads.</source>
          <target state="translated">池首先尝试获得所有连接的所有权。如果无法在超时间隔（默认持续时间为 &lt;code&gt;spec.db_config.checkout_timeout * 2&lt;/code&gt; 秒）内执行此操作，则将强制断开连接池，而不考虑其他拥有连接的线程。</target>
        </trans-unit>
        <trans-unit id="0b9aa36314226d9fc2457ceacd68160dd0193c9a" translate="yes" xml:space="preserve">
          <source>The popular Apache web server has an option called DocumentRoot. This is the home directory of the web site, everything in this directory tree will be served by the web server. If there are files with a certain file name extension, the code in it will be executed when requested (might require some options to be set). Examples for this are PHP and CGI files. Now think of a situation where an attacker uploads a file &quot;file.cgi&quot; with code in it, which will be executed when someone downloads the file.</source>
          <target state="translated">流行的Apache网站服务器有一个选项叫做DocumentRoot。这是网站的主目录,这个目录树中的所有内容都将由Web服务器提供服务。如果有某个文件名扩展名的文件,当请求时,其中的代码将被执行(可能需要设置一些选项)。这方面的例子是PHP和CGI文件。现在想一想,攻击者上传了一个文件 &quot;file.cgi&quot;,里面有代码,当有人下载这个文件时,这个文件就会被执行。</target>
        </trans-unit>
        <trans-unit id="dbdce44c77c959bd4862bc5a859508ac636ef124" translate="yes" xml:space="preserve">
          <source>The port number (integer) used for the request.</source>
          <target state="translated">用于请求的端口号(整数)。</target>
        </trans-unit>
        <trans-unit id="b079d046ffb4ec9ded1b387f3e0010827c056b99" translate="yes" xml:space="preserve">
          <source>The possible length constraint options are:</source>
          <target state="translated">可能的长度限制选项是:</target>
        </trans-unit>
        <trans-unit id="4fce22dc56bb380decb3337ee172999502454fa4" translate="yes" xml:space="preserve">
          <source>The power of the &lt;code&gt;validates&lt;/code&gt; method comes when using custom validators and default validators in one call for a given attribute.</source>
          <target state="translated">当在给定属性的一次调用中使用自定义验证器和默认验证器时， &lt;code&gt;validates&lt;/code&gt; 方法的功能将发挥作用。</target>
        </trans-unit>
        <trans-unit id="b6c43b0561e55dd6178731da78ad85e3a4b6c1e1" translate="yes" xml:space="preserve">
          <source>The precedence between model names is calculated using the &lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt; operator for &lt;code&gt;String&lt;/code&gt;. This means that if the strings are of different lengths, and the strings are equal when compared up to the shortest length, then the longer string is considered of higher lexical precedence than the shorter one. For example, one would expect the tables &quot;paper_boxes&quot; and &quot;papers&quot; to generate a join table name of &quot;papers_paper_boxes&quot; because of the length of the name &quot;paper_boxes&quot;, but it in fact generates a join table name of &quot;paper_boxes_papers&quot; (because the underscore '_' is lexicographically &lt;em&gt;less&lt;/em&gt; than 's' in common encodings).</source>
          <target state="translated">模型名称之间的优先级使用 &lt;code&gt;String&lt;/code&gt; 的 &lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt; 运算符计算。这意味着，如果字符串的长度不同，并且在比较最短长度的字符串时相等，则较长的字符串被认为比较短的字符串具有更高的词法优先级。例如，由于名称&amp;ldquo; paper_boxes&amp;rdquo;的长度，可能希望表&amp;ldquo; paper_boxes&amp;rdquo;和&amp;ldquo; papers&amp;rdquo;生成联接表名称&amp;ldquo; papers_paper_boxes&amp;rdquo;，但实际上它会生成联接表名称&amp;ldquo; paper_boxes_papers&amp;rdquo;（因为下划线&amp;ldquo;_&amp;rdquo;是字典顺序&lt;em&gt;少&lt;/em&gt;比在常用编码的'）。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="62344c6f40c22e3ba498eca199d54186aace22e0" translate="yes" xml:space="preserve">
          <source>The predicate &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/DateTime.html#method-i-utc-3F&quot;&gt;&lt;code&gt;utc?&lt;/code&gt;&lt;/a&gt; says whether the receiver has UTC as its time zone:</source>
          <target state="translated">谓词&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/DateTime.html#method-i-utc-3F&quot;&gt; &lt;code&gt;utc?&lt;/code&gt; &lt;/a&gt;说明接收方是否将UTC作为其时区：</target>
        </trans-unit>
        <trans-unit id="15001a85859fd6f531e3d41dbeae196b33a737ca" translate="yes" xml:space="preserve">
          <source>The predicate &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Enumerable.html#method-i-exclude-3F&quot;&gt;&lt;code&gt;exclude?&lt;/code&gt;&lt;/a&gt; tests whether a given object does &lt;strong&gt;not&lt;/strong&gt; belong to the collection. It is the negation of the built-in &lt;code&gt;include?&lt;/code&gt;:</source>
          <target state="translated">谓词&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Enumerable.html#method-i-exclude-3F&quot;&gt; &lt;code&gt;exclude?&lt;/code&gt; &lt;/a&gt;测试给定对象是否&lt;strong&gt;不&lt;/strong&gt;属于该集合。是内置的否定 &lt;code&gt;include?&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="91f64f61b5bae382f5c6be5cf79dd8734e286cba" translate="yes" xml:space="preserve">
          <source>The predicate &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Object.html#method-i-in-3F&quot;&gt;&lt;code&gt;in?&lt;/code&gt;&lt;/a&gt; tests if an object is included in another object. An &lt;code&gt;ArgumentError&lt;/code&gt; exception will be raised if the argument passed does not respond to &lt;code&gt;include?&lt;/code&gt;.</source>
          <target state="translated">谓词&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Object.html#method-i-in-3F&quot;&gt; &lt;code&gt;in?&lt;/code&gt; &lt;/a&gt;测试一个对象是否包含在另一个对象中。一个 &lt;code&gt;ArgumentError&lt;/code&gt; 将引发异常，如果通过不响应的参数 &lt;code&gt;include?&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1623bdf3d6d99614a33905e28305018e8da2ea92" translate="yes" xml:space="preserve">
          <source>The predicate &lt;code&gt;exclude?&lt;/code&gt; tests whether a given object does &lt;strong&gt;not&lt;/strong&gt; belong to the collection. It is the negation of the built-in &lt;code&gt;include?&lt;/code&gt;:</source>
          <target state="translated">谓词 &lt;code&gt;exclude?&lt;/code&gt; 测试给定对象是否&lt;strong&gt;不&lt;/strong&gt;属于该集合。它是对内置 &lt;code&gt;include?&lt;/code&gt; 的否定吗？：</target>
        </trans-unit>
        <trans-unit id="d30534585d78db0e871015ad6fc7ba29234362ff" translate="yes" xml:space="preserve">
          <source>The predicate &lt;code&gt;in?&lt;/code&gt; tests if an object is included in another object. An &lt;code&gt;ArgumentError&lt;/code&gt; exception will be raised if the argument passed does not respond to &lt;code&gt;include?&lt;/code&gt;.</source>
          <target state="translated">谓词 &lt;code&gt;in?&lt;/code&gt; 测试一个对象是否包含在另一个对象中。一个 &lt;code&gt;ArgumentError&lt;/code&gt; 将引发异常，如果通过不响应的参数 &lt;code&gt;include?&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="51cc5e243f6ab35d21893ecf5f94e037441bc436" translate="yes" xml:space="preserve">
          <source>The predicate &lt;code&gt;utc?&lt;/code&gt; says whether the receiver has UTC as its time zone:</source>
          <target state="translated">谓词 &lt;code&gt;utc?&lt;/code&gt; 说明接收方是否将UTC作为其时区：</target>
        </trans-unit>
        <trans-unit id="b750834b37ac4d51943f62e9387ff28a0575c379" translate="yes" xml:space="preserve">
          <source>The predicate for strings uses the Unicode-aware character class &lt;code&gt;[:space:]&lt;/code&gt;, so for example U+2029 (paragraph separator) is considered to be whitespace.</source>
          <target state="translated">字符串的谓词使用可识别Unicode的字符类 &lt;code&gt;[:space:]&lt;/code&gt; ，因此，例如U + 2029（段落分隔符）被视为空白。</target>
        </trans-unit>
        <trans-unit id="dc6a93f70839243fa9e1d8408e34e2544f70a727" translate="yes" xml:space="preserve">
          <source>The preferred method of outputting text in your views is to use the &amp;lt;%= &amp;ldquo;text&amp;rdquo; %&amp;gt; eRuby syntax. The regular &lt;em&gt;puts&lt;/em&gt; and &lt;em&gt;print&lt;/em&gt; methods do not operate as expected in an eRuby code block. If you absolutely must output text within a non-output code block (i.e., &amp;lt;% %&amp;gt;), you can use the concat method.</source>
          <target state="translated">在视图中输出文本的首选方法是使用&amp;lt;％=&amp;ldquo; text&amp;rdquo;％&amp;gt; eRuby语法。常规的&lt;em&gt;puts&lt;/em&gt;和&lt;em&gt;print&lt;/em&gt;方法在eRuby代码块中无法按预期运行。如果绝对必须在非输出代码块（即&amp;lt;％％&amp;gt;）中输出文本，则可以使用concat方法。</target>
        </trans-unit>
        <trans-unit id="746374f648c11779fb7595faf543aa73a11667ec" translate="yes" xml:space="preserve">
          <source>The prefix is a generation timestamp (in UTC).</source>
          <target state="translated">前缀是一个生成时间戳(以UTC为单位)。</target>
        </trans-unit>
        <trans-unit id="d2dc8c1fb9d9a6e930ad3ad1f1962e294f759976" translate="yes" xml:space="preserve">
          <source>The prefix string to prepend to every table name.</source>
          <target state="translated">每个表名的前缀字符串。</target>
        </trans-unit>
        <trans-unit id="c8eb84352de12fc2e14e658df97f8e1dd7fc6ae7" translate="yes" xml:space="preserve">
          <source>The prefix type that will be prepended to every primary key column name. The options are &lt;code&gt;:table_name&lt;/code&gt; and &lt;code&gt;:table_name_with_underscore&lt;/code&gt;. If the first is specified, the Product class will look for &amp;ldquo;productid&amp;rdquo; instead of &amp;ldquo;id&amp;rdquo; as the primary column. If the latter is specified, the Product class will look for &amp;ldquo;product_id&amp;rdquo; instead of &amp;ldquo;id&amp;rdquo;. Remember that this is a global setting for all Active Records.</source>
          <target state="translated">将在每个主键列名称之前添加的前缀类型。选项是 &lt;code&gt;:table_name&lt;/code&gt; 和 &lt;code&gt;:table_name_with_underscore&lt;/code&gt; 。如果指定了第一个，则Product类将查找&amp;ldquo; productid&amp;rdquo;而不是&amp;ldquo; id&amp;rdquo;作为主列。如果指定了后者，则Product类将查找&amp;ldquo; product_id&amp;rdquo;而不是&amp;ldquo; id&amp;rdquo;。请记住，这是所有活动记录的全局设置。</target>
        </trans-unit>
        <trans-unit id="76608f27ed33c279c84f9724f718d27ff86e52f7" translate="yes" xml:space="preserve">
          <source>The previous example generates &lt;code&gt;address_street&lt;/code&gt; rather than &lt;code&gt;street&lt;/code&gt;.</source>
          <target state="translated">前面的示例生成 &lt;code&gt;address_street&lt;/code&gt; 而不是 &lt;code&gt;street&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bf79e4462cb7c0cd7769f456bd8a2b2988b51b2b" translate="yes" xml:space="preserve">
          <source>The previous sections did not use the Rails form helpers at all. While you can craft the input names yourself and pass them directly to helpers such as &lt;code&gt;text_field_tag&lt;/code&gt; Rails also provides higher level support. The two tools at your disposal here are the name parameter to &lt;code&gt;form_with&lt;/code&gt; and &lt;code&gt;fields_for&lt;/code&gt; and the &lt;code&gt;:index&lt;/code&gt; option that helpers take.</source>
          <target state="translated">前面的部分完全没有使用Rails表单帮助器。虽然您可以自己制作输入名称并将其直接传递给诸如 &lt;code&gt;text_field_tag&lt;/code&gt; 的助手，但Rails也提供了更高级别的支持。您可以使用的两个工具是 &lt;code&gt;form_with&lt;/code&gt; 和 &lt;code&gt;fields_for&lt;/code&gt; 的名称参数以及助手使用的 &lt;code&gt;:index&lt;/code&gt; 选项。</target>
        </trans-unit>
        <trans-unit id="e0e9047f925fbf67d1eb6f9a1ed3d116890223cc" translate="yes" xml:space="preserve">
          <source>The primary goal of the function &lt;code&gt;exec_app&lt;/code&gt; is to execute your app's &lt;code&gt;bin/rails&lt;/code&gt;. If the current directory does not have a &lt;code&gt;bin/rails&lt;/code&gt;, it will navigate upwards until it finds a &lt;code&gt;bin/rails&lt;/code&gt; executable. Thus one can invoke a &lt;code&gt;rails&lt;/code&gt; command from anywhere inside a rails application.</source>
          <target state="translated">函数 &lt;code&gt;exec_app&lt;/code&gt; 的主要目标是执行应用程序的 &lt;code&gt;bin/rails&lt;/code&gt; 。如果当前目录没有 &lt;code&gt;bin/rails&lt;/code&gt; ，它将向上导航直到找到 &lt;code&gt;bin/rails&lt;/code&gt; 可执行文件。因此，可以从rails应用程序内的任何位置调用 &lt;code&gt;rails&lt;/code&gt; 命令。</target>
        </trans-unit>
        <trans-unit id="374e971dc3ced2698c6060ed9d03807d33897f25" translate="yes" xml:space="preserve">
          <source>The primary key column name on &lt;code&gt;to_table&lt;/code&gt;. Defaults to &lt;code&gt;id&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;to_table&lt;/code&gt; 上的主键列名称。默认为 &lt;code&gt;id&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bac5ab3487ebac7ba2d2d20e1ec39fd6f57a8550" translate="yes" xml:space="preserve">
          <source>The primary key may auto-increment on each create, even if it fails. This can accelerate the problem of running out of integers, if the underlying table is still stuck on a primary key of type int (note: All Rails apps since 5.1+ have defaulted to bigint, which is not liable to this problem).</source>
          <target state="translated">主键可能会在每次创建时自动递增,即使失败也是如此。如果底层表仍然停留在int类型的主键上,这可能会加速整数用完的问题(注意:从5.1+开始,所有的Rails应用都默认为bigint,不存在这个问题)。</target>
        </trans-unit>
        <trans-unit id="0e4104a011a461fd57d9f8ef9c0cc4734f38d19d" translate="yes" xml:space="preserve">
          <source>The primary operation of &lt;code&gt;Model.find(options)&lt;/code&gt; can be summarized as:</source>
          <target state="translated">&lt;code&gt;Model.find(options)&lt;/code&gt; 的主要操作可以概括为：</target>
        </trans-unit>
        <trans-unit id="355491ae17fbdee22c249344fd63c33317a6c2c6" translate="yes" xml:space="preserve">
          <source>The primary options are:</source>
          <target state="translated">主要选择有:</target>
        </trans-unit>
        <trans-unit id="1db357e331d3a9a64b5d07b7e285558b9301de2f" translate="yes" xml:space="preserve">
          <source>The problem with purely abstract classes is that all concrete subclasses must persist all the shared attributes themselves in their own tables (also known as class-table inheritance). This makes it hard to do queries across the hierarchy. For example, imagine you have the following hierarchy:</source>
          <target state="translated">纯抽象类的问题是,所有具体的子类必须将所有共享属性自己持久化在自己的表中(也就是所谓的类表继承)。这就很难进行跨层次的查询。例如,想象你有以下层次结构。</target>
        </trans-unit>
        <trans-unit id="e4fa3e65aa6bbe33b99dacd08bdbeb417dc2f95b" translate="yes" xml:space="preserve">
          <source>The procedure to autoload constant &lt;code&gt;C&lt;/code&gt; in an arbitrary situation is as follows:</source>
          <target state="translated">在任意情况下自动加载常数 &lt;code&gt;C&lt;/code&gt; 的过程如下：</target>
        </trans-unit>
        <trans-unit id="8040e6c9ad1dcfe9ba2350e5dae6e0ddc3828236" translate="yes" xml:space="preserve">
          <source>The process of &quot;internationalization&quot; usually means to abstract all strings and other locale specific bits (such as date or currency formats) out of your application. The process of &quot;localization&quot; means to provide translations and localized formats for these bits.&lt;sup id=&quot;footnote-1-ref&quot;&gt;&lt;a href=&quot;#footnote-1&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;</source>
          <target state="translated">&amp;ldquo;国际化&amp;rdquo;过程通常意味着从您的应用程序中抽象出所有字符串和其他特定于语言环境的位（例如日期或货币格式）。&amp;ldquo;本地化&amp;rdquo;过程意味着为这些位提供翻译和本地化格式。&lt;sup id=&quot;footnote-1-ref&quot;&gt;&lt;a href=&quot;#footnote-1&quot;&gt;1个&lt;/a&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="bab12b63d1f444a4baf98767b36d0c0acab0c884" translate="yes" xml:space="preserve">
          <source>The process should go as follows:</source>
          <target state="translated">这个过程应该如下:</target>
        </trans-unit>
        <trans-unit id="d247badcf31b8cb60f802528ca9ec9615802ad61" translate="yes" xml:space="preserve">
          <source>The program should report its version.</source>
          <target state="translated">该程序应报告其版本。</target>
        </trans-unit>
        <trans-unit id="39be8745f83c23f980e50b68440fb75f28893215" translate="yes" xml:space="preserve">
          <source>The project class now has the following methods (and more) to ease the traversal and manipulation of its relationships:</source>
          <target state="translated">现在,项目类有以下方法(还有更多)来简化对其关系的遍历和操作。</target>
        </trans-unit>
        <trans-unit id="9549fd7af922ed428621dcdb95af872afc58b4e3" translate="yes" xml:space="preserve">
          <source>The provided regexp will be wrapped with both anchors (&lt;code&gt;\A&lt;/code&gt; and &lt;code&gt;\z&lt;/code&gt;) so it must match the entire hostname. &lt;code&gt;/product.com/&lt;/code&gt;, for example, once anchored, would fail to match &lt;code&gt;www.product.com&lt;/code&gt;.</source>
          <target state="translated">提供的regexp将使用两个锚点（ &lt;code&gt;\A&lt;/code&gt; 和 &lt;code&gt;\z&lt;/code&gt; ）进行包装，因此它必须与整个主机名匹配。 &lt;code&gt;/product.com/&lt;/code&gt; ，例如，一旦固定，就无法匹配 &lt;code&gt;www.product.com&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a2aa13204d8f2986d4eaf321a39937bb7daefb6c" translate="yes" xml:space="preserve">
          <source>The proxy class returned when calling mb_chars. You can use this accessor to configure your own proxy class so you can support other encodings. See the &lt;a href=&quot;multibyte/chars&quot;&gt;&lt;code&gt;ActiveSupport::Multibyte::Chars&lt;/code&gt;&lt;/a&gt; implementation for an example how to do this.</source>
          <target state="translated">调用mb_chars时返回的代理类。您可以使用此访问器来配置自己的代理类，以便支持其他编码。有关如何执行此操作的示例，请参见&lt;a href=&quot;multibyte/chars&quot;&gt; &lt;code&gt;ActiveSupport::Multibyte::Chars&lt;/code&gt; &lt;/a&gt;实现。</target>
        </trans-unit>
        <trans-unit id="35e6836db7b86f1636ec6a98ca72c3104147db64" translate="yes" xml:space="preserve">
          <source>The proxy class returned when calling mb_chars. You can use this accessor to configure your own proxy class so you can support other encodings. See the &lt;a href=&quot;multibyte/chars&quot;&gt;ActiveSupport::Multibyte::Chars&lt;/a&gt; implementation for an example how to do this.</source>
          <target state="translated">调用mb_chars时返回的代理类。您可以使用此访问器来配置自己的代理类，以便支持其他编码。有关如何执行此操作的示例，请参见&lt;a href=&quot;multibyte/chars&quot;&gt;ActiveSupport :: Multibyte :: Chars&lt;/a&gt;实现。</target>
        </trans-unit>
        <trans-unit id="2db1dccdc41ae63a5d769078a53e229b53f03007" translate="yes" xml:space="preserve">
          <source>The proxy objects that control the access to associations can be extended through anonymous modules. This is especially beneficial for adding new finders, creators, and other factory-type methods that are only used as part of this association.</source>
          <target state="translated">控制关联访问的代理对象可以通过匿名模块进行扩展。这对于添加新的查找器、创建者和其他只作为这个关联的一部分使用的工厂型方法特别有利。</target>
        </trans-unit>
        <trans-unit id="cb2ef0a3f23683b82b3a7fc76ce94b0e0f988d66" translate="yes" xml:space="preserve">
          <source>The public API of the i18n framework - a Ruby module with public methods that define how the library works</source>
          <target state="translated">i18n框架的公共API--一个Ruby模块,它的公共方法定义了库的工作方式。</target>
        </trans-unit>
        <trans-unit id="e2f3f6bc15534a07027a580fb53a5ce807cb0522" translate="yes" xml:space="preserve">
          <source>The public controller methods &lt;code&gt;respond_to&lt;/code&gt; may be called with a block that is used to define responses to different mime-types, e.g. for &lt;code&gt;respond_to&lt;/code&gt; :</source>
          <target state="translated">公共控制器方法 &lt;code&gt;respond_to&lt;/code&gt; 可以与被用于定义到不同的MIME类型，例如用于响应的块被称为 &lt;code&gt;respond_to&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="e523c677a1876a5d7712fcdf44f31a3393f986ba" translate="yes" xml:space="preserve">
          <source>The public path that Sprockets uses by default is &lt;code&gt;/assets&lt;/code&gt;.</source>
          <target state="translated">Sprockets默认使用的公共路径是 &lt;code&gt;/assets&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b1c15f7c37361e4d62cc7d2ebb86fe446e3f202b" translate="yes" xml:space="preserve">
          <source>The purpose of debugging.</source>
          <target state="translated">调试的目的。</target>
        </trans-unit>
        <trans-unit id="bc7610d0ca7ba5f46a29cc2aff958d13007d672d" translate="yes" xml:space="preserve">
          <source>The purpose of this setup would be that the application uses the class that corresponds to the environment via &lt;code&gt;AUTH_SERVICE&lt;/code&gt;. In development mode &lt;code&gt;MockedAuthService&lt;/code&gt; gets autoloaded when the initializer runs. Let's suppose we do some requests, change its implementation, and hit the application again. To our surprise the changes are not reflected. Why?</source>
          <target state="translated">该设置的目的是使应用程序通过 &lt;code&gt;AUTH_SERVICE&lt;/code&gt; 使用与环境相对应的类。在开发模式下，初始化程序运行时， &lt;code&gt;MockedAuthService&lt;/code&gt; 将自动加载。假设我们执行一些请求，更改其实现，然后再次运行该应用程序。令我们惊讶的是，这些变化没有得到体现。为什么？</target>
        </trans-unit>
        <trans-unit id="3b96e7010ad0263400b2ad5355a0f3d1d24d9569" translate="yes" xml:space="preserve">
          <source>The query string part of the URL, i.e., everything after &quot;?&quot;.</source>
          <target state="translated">URL的查询字符串部分,即&quot;?&quot;之后的所有内容。</target>
        </trans-unit>
        <trans-unit id="963ede72d0dfa198743a61a0942634ecdbed773d" translate="yes" xml:space="preserve">
          <source>The query string strategy has several disadvantages:</source>
          <target state="translated">查询字符串策略有几个缺点。</target>
        </trans-unit>
        <trans-unit id="9447d2ea713bcd10ab52cda886cd6cbf5d593b22" translate="yes" xml:space="preserve">
          <source>The rails commands that manipulate migrations and your schema.</source>
          <target state="translated">操纵迁移和模式的rails命令。</target>
        </trans-unit>
        <trans-unit id="211b65c121c2996e58957eb6dd2511f01b18717b" translate="yes" xml:space="preserve">
          <source>The raw value provided as the second parameter when calling `errors#add`</source>
          <target state="translated">调用`errors#add`时作为第二个参数提供的原始值。</target>
        </trans-unit>
        <trans-unit id="4e2911d154a61b6a5ba76018adc402ed58605ab3" translate="yes" xml:space="preserve">
          <source>The reason for this is that during development you'd usually want your views to still render even though a translation is missing.</source>
          <target state="translated">原因是在开发过程中,你通常会希望你的视图在缺少翻译的情况下仍然能够呈现。</target>
        </trans-unit>
        <trans-unit id="78dd8f5116b3d8b957ca4166352d82a58bb88405" translate="yes" xml:space="preserve">
          <source>The reason is that autoloading is triggered for the singleton class, which is anonymous, and as &lt;a href=&quot;#generic-procedure&quot;&gt;we saw before&lt;/a&gt;, Rails only checks the top-level namespace in that edge case.</source>
          <target state="translated">原因是单例类触发了自动加载，该类是匿名的，并且正如&lt;a href=&quot;#generic-procedure&quot;&gt;我们之前所见&lt;/a&gt;，Rails仅在这种情况下检查顶级名称空间。</target>
        </trans-unit>
        <trans-unit id="fbbbe01fb4a2a4d9cb2a8c25e4df69ba3ef590b0" translate="yes" xml:space="preserve">
          <source>The reason most people use Rails is that it provides a set of defaults that allows developers to get up and running quickly, without having to make a lot of trivial decisions.</source>
          <target state="translated">大多数人使用Rails的原因是,它提供了一套默认设置,让开发人员可以快速上手,无需做很多琐碎的决定。</target>
        </trans-unit>
        <trans-unit id="25facf3920d52f7ea5f36c7e93e4e595a2175805" translate="yes" xml:space="preserve">
          <source>The reason why we added &lt;code&gt;@article = Article.new&lt;/code&gt; in the &lt;code&gt;ArticlesController&lt;/code&gt; is that otherwise &lt;code&gt;@article&lt;/code&gt; would be &lt;code&gt;nil&lt;/code&gt; in our view, and calling &lt;code&gt;@article.errors.any?&lt;/code&gt; would throw an error.</source>
          <target state="translated">我们在 &lt;code&gt;ArticlesController&lt;/code&gt; 中添加 &lt;code&gt;@article = Article.new&lt;/code&gt; 的原因是，否则我们认为 &lt;code&gt;@article&lt;/code&gt; 将 &lt;code&gt;nil&lt;/code&gt; ，并调用 &lt;code&gt;@article.errors.any?&lt;/code&gt; 会抛出一个错误。</target>
        </trans-unit>
        <trans-unit id="cec56727dcf557c3b63bdfe82a9a3a16d8e16121" translate="yes" xml:space="preserve">
          <source>The rebroadcast will be received by all connected clients, &lt;em&gt;including&lt;/em&gt; the client that sent the message. Note that params are the same as they were when you subscribed to the channel.</source>
          <target state="translated">所有连接的客户端（&lt;em&gt;包括&lt;/em&gt;发送消息的客户端）都将接收重新广播。请注意，参数与您订阅频道时的参数相同。</target>
        </trans-unit>
        <trans-unit id="34a3cd9fd5339aaaefab9615beb498916c347532" translate="yes" xml:space="preserve">
          <source>The redirection happens as a &lt;code&gt;302 Found&lt;/code&gt; header unless otherwise specified using the &lt;code&gt;:status&lt;/code&gt; option:</source>
          <target state="translated">除非使用 &lt;code&gt;:status&lt;/code&gt; 选项指定，否则重定向将以 &lt;code&gt;302 Found&lt;/code&gt; 标头的形式发生：</target>
        </trans-unit>
        <trans-unit id="6fc33772c67a94f60777ad03a5f62d48d81352f8" translate="yes" xml:space="preserve">
          <source>The reference column type. Defaults to &lt;code&gt;:bigint&lt;/code&gt;.</source>
          <target state="translated">参考列的类型。默认为 &lt;code&gt;:bigint&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d9352b43be8aa84da2f638620572a5ccea912a66" translate="yes" xml:space="preserve">
          <source>The referrer information is pulled from the HTTP &lt;code&gt;Referer&lt;/code&gt; (sic) header on the request. This is an optional header and its presence on the request is subject to browser security settings and user preferences. If the request is missing this header, the &lt;code&gt;fallback_location&lt;/code&gt; will be used.</source>
          <target state="translated">引荐信息从HTTP拉出 &lt;code&gt;Referer&lt;/code&gt; 所述请求（原文如此）报头。这是一个可选的标头，其在请求中的存在受浏览器安全设置和用户首选项的约束。如果请求缺少此标头，则将使用 &lt;code&gt;fallback_location&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="eb49b45c4a2d1a85d2d9af882862e039d5010fcc" translate="yes" xml:space="preserve">
          <source>The rendered template is &lt;code&gt;people/_labelling_form&lt;/code&gt; and the local variable referencing the form builder is called &lt;code&gt;labelling_form&lt;/code&gt;.</source>
          <target state="translated">呈现的模板为 &lt;code&gt;people/_labelling_form&lt;/code&gt; ，引用表单构建器的局部变量称为 &lt;code&gt;labelling_form&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a94255df270ad824d9d83b0a6f7b7ff760d009d7" translate="yes" xml:space="preserve">
          <source>The request body is an &lt;code&gt;IO&lt;/code&gt; input stream. If the RAW_POST_DATA environment variable is already set, wrap it in a StringIO.</source>
          <target state="translated">请求主体是 &lt;code&gt;IO&lt;/code&gt; 输入流。如果已经设置了RAW_POST_DATA环境变量，则将其包装在StringIO中。</target>
        </trans-unit>
        <trans-unit id="63f684b0b47877c550e81776857431c7164bacd0" translate="yes" xml:space="preserve">
          <source>The request body is an IO input stream. If the RAW_POST_DATA environment variable is already set, wrap it in a StringIO.</source>
          <target state="translated">请求体是一个IO输入流。如果已经设置了RAW_POST_DATA环境变量,则用StringIO包装。</target>
        </trans-unit>
        <trans-unit id="5618400bb0c662f7a9044a9e92d762488642b3ee" translate="yes" xml:space="preserve">
          <source>The request object contains a lot of useful information about the request coming in from the client. To get a full list of the available methods, refer to the &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionDispatch/Request.html&quot;&gt;Rails API documentation&lt;/a&gt; and &lt;a href=&quot;https://www.rubydoc.info/github/rack/rack/Rack/Request&quot;&gt;Rack Documentation&lt;/a&gt;. Among the properties that you can access on this object are:</source>
          <target state="translated">请求对象包含许多有关来自客户端的请求的有用信息。要获取可用方法的完整列表，请参考&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionDispatch/Request.html&quot;&gt;Rails API文档&lt;/a&gt;和&lt;a href=&quot;https://www.rubydoc.info/github/rack/rack/Rack/Request&quot;&gt;Rack文档&lt;/a&gt;。您可以访问此对象的属性包括：</target>
        </trans-unit>
        <trans-unit id="447adfed7e1b075f5907827838b9d68713be5f5a" translate="yes" xml:space="preserve">
          <source>The request that initiated the WebSocket connection is available here. This gives access to the environment, cookies, etc.</source>
          <target state="translated">启动WebSocket连接的请求可在此获得。这可以访问环境、cookies等。</target>
        </trans-unit>
        <trans-unit id="2ebe4d5fe508222930c3bc355f953f8b7e69a836" translate="yes" xml:space="preserve">
          <source>The request that the response is responding to.</source>
          <target state="translated">响应的请求。</target>
        </trans-unit>
        <trans-unit id="8c0d63c0e9b70807564233148a1c2dbdea492502" translate="yes" xml:space="preserve">
          <source>The request to this asset is then served by the Sprockets gem.</source>
          <target state="translated">然后,对该资产的请求由Sprockets gem服务。</target>
        </trans-unit>
        <trans-unit id="a13bac9dbc4228aac718c2160238ae2f74224f6d" translate="yes" xml:space="preserve">
          <source>The request variant is a specialization of the request format, like &lt;code&gt;:tablet&lt;/code&gt;, &lt;code&gt;:phone&lt;/code&gt;, or &lt;code&gt;:desktop&lt;/code&gt;.</source>
          <target state="translated">request变量是请求格式的一种特殊形式，例如 &lt;code&gt;:tablet&lt;/code&gt; ， &lt;code&gt;:phone&lt;/code&gt; 或 &lt;code&gt;:desktop&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dcb52832bce02225033e7ae0b7180e0e9aa6ae0c" translate="yes" xml:space="preserve">
          <source>The requirements for implementing &lt;a href=&quot;dirty&quot;&gt;&lt;code&gt;ActiveModel::Dirty&lt;/code&gt;&lt;/a&gt; are:</source>
          <target state="translated">实现&lt;a href=&quot;dirty&quot;&gt; &lt;code&gt;ActiveModel::Dirty&lt;/code&gt; &lt;/a&gt;的要求是：</target>
        </trans-unit>
        <trans-unit id="1c6f31a993c883608b49486cf93c169ad92d6226" translate="yes" xml:space="preserve">
          <source>The requirements for implementing &lt;a href=&quot;dirty&quot;&gt;ActiveModel::Dirty&lt;/a&gt; are:</source>
          <target state="translated">实现&lt;a href=&quot;dirty&quot;&gt;ActiveModel :: Dirty&lt;/a&gt;的要求是：</target>
        </trans-unit>
        <trans-unit id="c89ab6641453bcf8d055aa8bc68cd2cd8cab4f65" translate="yes" xml:space="preserve">
          <source>The requirements to implement &lt;code&gt;ActiveModel::AttributeMethods&lt;/code&gt; are to:</source>
          <target state="translated">实现 &lt;code&gt;ActiveModel::AttributeMethods&lt;/code&gt; 的要求是：</target>
        </trans-unit>
        <trans-unit id="b8decea92879d37a4f7c7d58ad76e94662a99ef0" translate="yes" xml:space="preserve">
          <source>The resolution of a constant could depend on load order, the definition of a class or module object could depend on load order, there was edge cases with singleton classes, oftentimes you had to use &lt;code&gt;require_dependency&lt;/code&gt; as a workaround, .... The guide for &lt;code&gt;classic&lt;/code&gt; mode documents &lt;a href=&quot;autoloading_and_reloading_constants_classic_mode#common-gotchas&quot;&gt;these issues&lt;/a&gt;.</source>
          <target state="translated">常量的解析度可能取决于加载顺序，类或模块对象的定义可能取决于加载顺序，单例类存在边缘情况，通常您必须使用 &lt;code&gt;require_dependency&lt;/code&gt; 作为解决方法，.... &lt;code&gt;classic&lt;/code&gt; 模式记录了&lt;a href=&quot;autoloading_and_reloading_constants_classic_mode#common-gotchas&quot;&gt;这些问题&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="300f2949996e658ac115ccea16fe17506d448ce0" translate="yes" xml:space="preserve">
          <source>The resolver class defines when the application should switch (i.e. read from the primary if a write occurred less than 2 seconds ago) and a resolver context class that sets a value that helps the resolver class decide when to switch.</source>
          <target state="translated">resolver类定义了应用程序应该在什么时候切换(即如果写发生在不到2秒前,则从primary读取)和一个resolver上下文类,该类设置了一个值,帮助resolver类决定何时切换。</target>
        </trans-unit>
        <trans-unit id="15f2c7d083db22a8119db70913a3db4aaad993bc" translate="yes" xml:space="preserve">
          <source>The resource and all segments will now route to /postings instead of /posts.</source>
          <target state="translated">资源和所有的段现在将路由到/postings而不是/posts。</target>
        </trans-unit>
        <trans-unit id="beaa87f3d21ecbfe45641f3a86ee4784a14c6812" translate="yes" xml:space="preserve">
          <source>The response code of the request.</source>
          <target state="translated">请求的响应代码。</target>
        </trans-unit>
        <trans-unit id="0c493831110ba9d815114c381b8f94946676425e" translate="yes" xml:space="preserve">
          <source>The response object is not usually used directly, but is built up during the execution of the action and rendering of the data that is being sent back to the user, but sometimes - like in an after filter - it can be useful to access the response directly. Some of these accessor methods also have setters, allowing you to change their values. To get a full list of the available methods, refer to the &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionDispatch/Response.html&quot;&gt;Rails API documentation&lt;/a&gt; and &lt;a href=&quot;https://www.rubydoc.info/github/rack/rack/Rack/Response&quot;&gt;Rack Documentation&lt;/a&gt;.</source>
          <target state="translated">响应对象通常不直接使用，而是在执行操作和呈现要发送回用户的数据的过程中建立的，但是有时（例如在after过滤器中）访问响应是有用的直。其中一些访问器方法也具有设置器，使您可以更改其值。要获取可用方法的完整列表，请参考&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionDispatch/Response.html&quot;&gt;Rails API文档&lt;/a&gt;和&lt;a href=&quot;https://www.rubydoc.info/github/rack/rack/Rack/Response&quot;&gt;Rack文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cbf34bbcf94a3cd1f50b6c287697c3d57ed72cb5" translate="yes" xml:space="preserve">
          <source>The rest of &lt;code&gt;config/application.rb&lt;/code&gt; defines the configuration for the &lt;code&gt;Rails::Application&lt;/code&gt; which will be used once the application is fully initialized. When &lt;code&gt;config/application.rb&lt;/code&gt; has finished loading Rails and defined the application namespace, we go back to &lt;code&gt;config/environment.rb&lt;/code&gt;. Here, the application is initialized with &lt;code&gt;Rails.application.initialize!&lt;/code&gt;, which is defined in &lt;code&gt;rails/application.rb&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;config/application.rb&lt;/code&gt; 的其余部分定义了 &lt;code&gt;Rails::Application&lt;/code&gt; 的配置，将在应用程序完全初始化后使用。当 &lt;code&gt;config/application.rb&lt;/code&gt; 完成加载Rails并定义了应用程序名称空间后，我们回到 &lt;code&gt;config/environment.rb&lt;/code&gt; 。在这里，应用程序使用 &lt;code&gt;Rails.application.initialize!&lt;/code&gt; 初始化！，它在 &lt;code&gt;rails/application.rb&lt;/code&gt; 中定义。</target>
        </trans-unit>
        <trans-unit id="effb5614fd27c25befd2c6d1b8f3efd5ba7fd3b2" translate="yes" xml:space="preserve">
          <source>The rest of this guide describes the mechanisms Rails uses to make it &quot;mostly ignorable&quot;, and how extensions and applications with special needs can use them.</source>
          <target state="translated">本指南的其余部分介绍了Rails用来使其 &quot;大部分可忽略 &quot;的机制,以及有特殊需求的扩展和应用如何使用它们。</target>
        </trans-unit>
        <trans-unit id="74aecee2b54888a4b816d341feda0b0331477ef2" translate="yes" xml:space="preserve">
          <source>The result after rendering is:</source>
          <target state="translated">渲染后的结果是。</target>
        </trans-unit>
        <trans-unit id="dcd568ad6b005de288f75e8fe0668cc29b612d27" translate="yes" xml:space="preserve">
          <source>The result is marked as HTML-safe, but it is escaped by default, unless &lt;code&gt;:escape&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;. Care should be taken if &lt;code&gt;text&lt;/code&gt; contains HTML tags or entities, because truncation may produce invalid HTML (such as unbalanced or incomplete tags).</source>
          <target state="translated">结果标记为HTML安全，但默认情况下会转义，除非 &lt;code&gt;:escape&lt;/code&gt; 为 &lt;code&gt;false&lt;/code&gt; 。如果 &lt;code&gt;text&lt;/code&gt; 包含HTML标记或实体，则应格外小心，因为截断可能会产生无效的HTML（例如，不平衡或不完整的标记）。</target>
        </trans-unit>
        <trans-unit id="a25ad2e87bf95b7cfc6b0056a7f16420a069ff66" translate="yes" xml:space="preserve">
          <source>The result may contain alphanumeric characters except 0, O, I and l.</source>
          <target state="translated">结果可能包含除0、O、I和l以外的字母数字字符。</target>
        </trans-unit>
        <trans-unit id="59041e876a7fc33927f1114587cb2013250c8716" translate="yes" xml:space="preserve">
          <source>The result of rendering this page into the supplied layout would be this HTML:</source>
          <target state="translated">将此页面渲染成所提供的布局的结果将是这样的HTML。</target>
        </trans-unit>
        <trans-unit id="ce4233cf4e68b15da2f7f962c3aa058e81e088f1" translate="yes" xml:space="preserve">
          <source>The result should be something like this:</source>
          <target state="translated">结果应该是这样的。</target>
        </trans-unit>
        <trans-unit id="346e462e239bdd14b4a628c87f5eadb465a3a2fa" translate="yes" xml:space="preserve">
          <source>The result will contain alphanumeric characters in lowercase.</source>
          <target state="translated">结果将包含小写的字母数字字符。</target>
        </trans-unit>
        <trans-unit id="0adb8a1307684faa2f86601a21cfe31f030157a8" translate="yes" xml:space="preserve">
          <source>The result won't be a list of projects (because there is no project with an empty name), but a list of user names and their password. So hopefully you encrypted the passwords in the database! The only problem for the attacker is, that the number of columns has to be the same in both queries. That's why the second query includes a list of ones (1), which will be always the value 1, in order to match the number of columns in the first query.</source>
          <target state="translated">结果不会是一个项目的列表(因为没有一个项目的名字是空的),而是一个用户名和密码的列表。所以,希望你对数据库中的密码进行了加密。对于攻击者来说,唯一的问题是,两个查询中的列数必须是相同的。这就是为什么第二个查询包含一个1的列表,它的值总是1,以匹配第一个查询中的列数。</target>
        </trans-unit>
        <trans-unit id="e70fb1c2729e8458de00d32c3591467e2d7aa855" translate="yes" xml:space="preserve">
          <source>The resulting &lt;code&gt;Mail::Message&lt;/code&gt; will have the following in its header:</source>
          <target state="translated">生成的 &lt;code&gt;Mail::Message&lt;/code&gt; 的标头中将包含以下内容：</target>
        </trans-unit>
        <trans-unit id="99d61cd3773bc4d60f3270a01f2095c107751685" translate="yes" xml:space="preserve">
          <source>The resulting HTML is:</source>
          <target state="translated">由此产生的HTML是:</target>
        </trans-unit>
        <trans-unit id="71c86b5736b5204e9f35c1743a129c5e2694ebf0" translate="yes" xml:space="preserve">
          <source>The resulting output from our &lt;code&gt;form_with&lt;/code&gt; call will look like:</source>
          <target state="translated">我们的 &lt;code&gt;form_with&lt;/code&gt; 调用的结果输出如下所示：</target>
        </trans-unit>
        <trans-unit id="291698672d11962c8bb088e3306823ab4309b2d4" translate="yes" xml:space="preserve">
          <source>The retrieved record may vary depending on the database engine.</source>
          <target state="translated">检索到的记录可能因数据库引擎的不同而不同。</target>
        </trans-unit>
        <trans-unit id="9f55e694c225f295d0bdcccba3be020d10a4d8fa" translate="yes" xml:space="preserve">
          <source>The return of capture is the string generated by the block. For Example:</source>
          <target state="translated">捕获的返回是块生成的字符串。例如</target>
        </trans-unit>
        <trans-unit id="4ddd68cea8d0fe03eb2943356aa27557616b7f05" translate="yes" xml:space="preserve">
          <source>The return value from the block passed to &lt;code&gt;direct&lt;/code&gt; must be a valid set of arguments for &lt;code&gt;url_for&lt;/code&gt; which will actually build the URL string. This can be one of the following:</source>
          <target state="translated">传递给 &lt;code&gt;direct&lt;/code&gt; 的块的返回值必须是 &lt;code&gt;url_for&lt;/code&gt; 的有效参数集，该参数实际上将构建URL字符串。可以是以下之一：</target>
        </trans-unit>
        <trans-unit id="154e88df68e99f69cd0b483c47a5ada31a856800" translate="yes" xml:space="preserve">
          <source>The return value of &lt;code&gt;to_param&lt;/code&gt; should &lt;strong&gt;not&lt;/strong&gt; be escaped:</source>
          <target state="translated">的返回值 &lt;code&gt;to_param&lt;/code&gt; 应该&lt;strong&gt;不&lt;/strong&gt;被转义：</target>
        </trans-unit>
        <trans-unit id="c3147580f8522c424243090e61bbb85df53db8c8" translate="yes" xml:space="preserve">
          <source>The return value of the block must be a valid argument for the &lt;code&gt;url_for&lt;/code&gt; method. So, you can pass a valid string URL, Hash, Array, an Active Model instance, or an Active Model class.</source>
          <target state="translated">该块的返回值必须是 &lt;code&gt;url_for&lt;/code&gt; 方法的有效参数。因此，您可以传递有效的字符串URL，哈希，数组，活动模型实例或活动模型类。</target>
        </trans-unit>
        <trans-unit id="d7ebe9022d127f36d9e15723d5e55359c15a6093" translate="yes" xml:space="preserve">
          <source>The return value of this method will be returned from &lt;a href=&quot;../../activerecord/attributemethods/read#method-i-read_attribute&quot;&gt;&lt;code&gt;ActiveRecord::AttributeMethods::Read#read_attribute&lt;/code&gt;&lt;/a&gt;. See also: &lt;a href=&quot;value#method-i-cast_value&quot;&gt;&lt;code&gt;Value#cast_value&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">该方法的返回值将从&lt;a href=&quot;../../activerecord/attributemethods/read#method-i-read_attribute&quot;&gt; &lt;code&gt;ActiveRecord::AttributeMethods::Read#read_attribute&lt;/code&gt; &lt;/a&gt;。另请参阅：&lt;a href=&quot;value#method-i-cast_value&quot;&gt; &lt;code&gt;Value#cast_value&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="712cb04b5cda0c9344ce367414c9f233585347f5" translate="yes" xml:space="preserve">
          <source>The return value of this method will be returned from &lt;a href=&quot;../../activerecord/attributemethods/read#method-i-read_attribute&quot;&gt;ActiveRecord::AttributeMethods::Read#read_attribute&lt;/a&gt;. See also: &lt;a href=&quot;value#method-i-cast_value&quot;&gt;#cast_value&lt;/a&gt;.</source>
          <target state="translated">该方法的返回值将从&lt;a href=&quot;../../activerecord/attributemethods/read#method-i-read_attribute&quot;&gt;ActiveRecord :: AttributeMethods :: Read＃read_attribute中返回&lt;/a&gt;。另请参阅：&lt;a href=&quot;value#method-i-cast_value&quot;&gt;#cast_value&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="baf87def1ba1a7cea81f7ae68bf2ac6b989f6b22" translate="yes" xml:space="preserve">
          <source>The return value of this method will implement the interface described by &lt;a href=&quot;../../activemodel/type/value&quot;&gt;&lt;code&gt;ActiveModel::Type::Value&lt;/code&gt;&lt;/a&gt; (though the object itself may not subclass it).</source>
          <target state="translated">此方法的返回值将实现&lt;a href=&quot;../../activemodel/type/value&quot;&gt; &lt;code&gt;ActiveModel::Type::Value&lt;/code&gt; &lt;/a&gt;描述的接口（尽管对象本身可能不会将其子类化）。</target>
        </trans-unit>
        <trans-unit id="02d062788bd9bee681b003f51a10c4ddc35a0f20" translate="yes" xml:space="preserve">
          <source>The return value of this method will implement the interface described by &lt;a href=&quot;../../activemodel/type/value&quot;&gt;ActiveModel::Type::Value&lt;/a&gt; (though the object itself may not subclass it).</source>
          <target state="translated">此方法的返回值将实现&lt;a href=&quot;../../activemodel/type/value&quot;&gt;ActiveModel :: Type :: Value&lt;/a&gt;描述的接口（尽管对象本身可能不会将其子类化）。</target>
        </trans-unit>
        <trans-unit id="fc938c5063fc1ebd08656f7dd09cbe35e6bc81af" translate="yes" xml:space="preserve">
          <source>The returned relation implements the Null &lt;a href=&quot;../object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt; pattern. It is an object with defined null behavior and always returns an empty array of records without querying the database.</source>
          <target state="translated">返回的关系实现Null &lt;a href=&quot;../object&quot;&gt; &lt;code&gt;Object&lt;/code&gt; &lt;/a&gt;模式。它是具有已定义的空行为的对象，并且始终返回空的记录数组，而不查询数据库。</target>
        </trans-unit>
        <trans-unit id="8151c4f5afe49e75a934b72f81a8df8a8e3d9b5f" translate="yes" xml:space="preserve">
          <source>The returned relation implements the Null &lt;a href=&quot;../object&quot;&gt;Object&lt;/a&gt; pattern. It is an object with defined null behavior and always returns an empty array of records without querying the database.</source>
          <target state="translated">返回的关系实现Null &lt;a href=&quot;../object&quot;&gt;Object&lt;/a&gt;模式。这是一个具有定义为空行为的对象，并且始终返回空的记录数组，而不查询数据库。</target>
        </trans-unit>
        <trans-unit id="2f6d33ea1cddf31651da115f43de80616f27f4f9" translate="yes" xml:space="preserve">
          <source>The reverse of &lt;a href=&quot;inflector#method-i-pluralize&quot;&gt;&lt;code&gt;pluralize&lt;/code&gt;&lt;/a&gt;, returns the singular form of a word in a string.</source>
          <target state="translated">的反向&lt;a href=&quot;inflector#method-i-pluralize&quot;&gt; &lt;code&gt;pluralize&lt;/code&gt; &lt;/a&gt;，返回字符串中的一个单词的单数形式。</target>
        </trans-unit>
        <trans-unit id="a8a176bf29706fa37ad63399ebcd21c506e08a48" translate="yes" xml:space="preserve">
          <source>The reverse of &lt;a href=&quot;inflector#method-i-pluralize&quot;&gt;pluralize&lt;/a&gt;, returns the singular form of a word in a string.</source>
          <target state="translated">的反向&lt;a href=&quot;inflector#method-i-pluralize&quot;&gt;变复数&lt;/a&gt;，返回字符串中的一个单词的单数形式。</target>
        </trans-unit>
        <trans-unit id="f0c5f4b12a37e16bfe4b06dcf4213f26c624b861" translate="yes" xml:space="preserve">
          <source>The reverse of &lt;code&gt;camelize&lt;/code&gt;. Makes an underscored, lowercase form from the expression in the string.</source>
          <target state="translated">的反向 &lt;code&gt;camelize&lt;/code&gt; 。根据字符串中的表达式制作带下划线的小写形式。</target>
        </trans-unit>
        <trans-unit id="49c3882be12d0dbab48454dd420e872739fa4014" translate="yes" xml:space="preserve">
          <source>The reverse of &lt;code&gt;pluralize&lt;/code&gt;, returns the singular form of a word in a string.</source>
          <target state="translated">的反向 &lt;code&gt;pluralize&lt;/code&gt; ，返回字符串中的一个单词的单数形式。</target>
        </trans-unit>
        <trans-unit id="5a2f5d042f75acbe0f3e7548eed90e866ea9799c" translate="yes" xml:space="preserve">
          <source>The rightmost argument to &lt;code&gt;form_for&lt;/code&gt; is an optional hash of options -</source>
          <target state="translated">&lt;code&gt;form_for&lt;/code&gt; 最右边的参数是options的可选哈希-</target>
        </trans-unit>
        <trans-unit id="a9a9612e7634415916c2149adc277d52fac00916" translate="yes" xml:space="preserve">
          <source>The root node reflects the class name of the first element in plural if all elements belong to the same type and that's not Hash:</source>
          <target state="translated">如果所有元素都属于同一类型,而且不是Hash,那么根节点反映的是第一个元素的复数的类名。</target>
        </trans-unit>
        <trans-unit id="f5bc1d31e8e66c06bdb0658b08aafa634967a8a0" translate="yes" xml:space="preserve">
          <source>The route above declares that &lt;code&gt;GET /articles&lt;/code&gt; requests are mapped to the &lt;code&gt;index&lt;/code&gt; action of &lt;code&gt;ArticlesController&lt;/code&gt;.</source>
          <target state="translated">上面的路由声明 &lt;code&gt;GET /articles&lt;/code&gt; 请求已映射到 &lt;code&gt;ArticlesController&lt;/code&gt; 的 &lt;code&gt;index&lt;/code&gt; 操作。</target>
        </trans-unit>
        <trans-unit id="924c9739d75001033fe4a310f64ac55258d3feec" translate="yes" xml:space="preserve">
          <source>The route key also considers if the noun is uncountable and, in such cases, automatically appends _index.</source>
          <target state="translated">路由键还会考虑名词是否不可数,在这种情况下,会自动追加_index。</target>
        </trans-unit>
        <trans-unit id="f42ca910b8cf2641923a9b3307cb94acee7c74ce" translate="yes" xml:space="preserve">
          <source>The route name (if any)</source>
          <target state="translated">途径名称(如有)</target>
        </trans-unit>
        <trans-unit id="d73914cf8b9c98e84c8b82ff0505113e4b8e3e02" translate="yes" xml:space="preserve">
          <source>The route now exists, but the controller that this route goes to does not. To create it, run this command from the application root:</source>
          <target state="translated">现在路由已经存在,但该路由所指向的控制器却不存在。要创建途径,请在应用程序根目录下运行此命令。</target>
        </trans-unit>
        <trans-unit id="ce667ab0870037991d8f31a5b132c6137e6613ea" translate="yes" xml:space="preserve">
          <source>The route now exists, but the controller that this route goes to does not. To create it, run this command from the engine root:</source>
          <target state="translated">现在路由已经存在,但这个路由所去的控制器却不存在。要创建它,请在引擎根目录下运行这个命令。</target>
        </trans-unit>
        <trans-unit id="9b9c1a0a0514b0f65210493280e8a71f86fdbca5" translate="yes" xml:space="preserve">
          <source>The route's action.</source>
          <target state="translated">航线的行动。</target>
        </trans-unit>
        <trans-unit id="163a12e69171016995c19135436c2a61402b497f" translate="yes" xml:space="preserve">
          <source>The route's controller.</source>
          <target state="translated">航线的控制器。</target>
        </trans-unit>
        <trans-unit id="9ea35eca50e9266731ea2e3982089ae64656d971" translate="yes" xml:space="preserve">
          <source>The routes for your application or engine live in the file &lt;code&gt;config/routes.rb&lt;/code&gt; and typically looks like this:</source>
          <target state="translated">您的应用程序或引擎的路由位于 &lt;code&gt;config/routes.rb&lt;/code&gt; 文件中，通常如下所示：</target>
        </trans-unit>
        <trans-unit id="d98c7c75f450c601067f23fdeb5247891ee46349" translate="yes" xml:space="preserve">
          <source>The routing module provides URL rewriting in native Ruby. It's a way to redirect incoming requests to controllers and actions. This replaces mod_rewrite rules. Best of all, Rails' Routing works with any web server. Routes are defined in &lt;code&gt;config/routes.rb&lt;/code&gt;.</source>
          <target state="translated">路由模块提供本机Ruby中的URL重写。这是一种将传入请求重定向到控制器和操作的方法。这将替换mod_rewrite规则。最重要的是，Rails的路由可与任何Web服务器一起使用。路由在 &lt;code&gt;config/routes.rb&lt;/code&gt; 中定义。</target>
        </trans-unit>
        <trans-unit id="43b869ffdbb23efddcd2f11588a9dd772e5b663c" translate="yes" xml:space="preserve">
          <source>The routing parameters for the route</source>
          <target state="translated">途径的路由参数</target>
        </trans-unit>
        <trans-unit id="5c1e7a884f603d0cb7012c9790df3b850851f848" translate="yes" xml:space="preserve">
          <source>The row is simply removed with an SQL &lt;code&gt;DELETE&lt;/code&gt; statement on the record's primary key, and no callbacks are executed.</source>
          <target state="translated">只需在记录的主键上使用SQL &lt;code&gt;DELETE&lt;/code&gt; 语句删除该行，就不会执行任何回调。</target>
        </trans-unit>
        <trans-unit id="57647ca6535b32390105386b22f168aaa4fd171c" translate="yes" xml:space="preserve">
          <source>The safety bit is lost always, no matter whether the transformation actually changed something.</source>
          <target state="translated">无论转型是否真的改变了什么,安全位总是丢失。</target>
        </trans-unit>
        <trans-unit id="aefe907ee6913d67f5922b327093209a576a180b" translate="yes" xml:space="preserve">
          <source>The same as &lt;code&gt;content_for&lt;/code&gt; but when used with streaming flushes straight back to the layout. In other words, if you want to concatenate several times to the same buffer when rendering a given template, you should use &lt;code&gt;content_for&lt;/code&gt;, if not, use &lt;code&gt;provide&lt;/code&gt; to tell the layout to stop looking for more contents.</source>
          <target state="translated">与 &lt;code&gt;content_for&lt;/code&gt; 相同，但与流一起使用时，会直接冲回到布局。换句话说，如果你想几次串联到同一个缓冲的渲染给定模板的时候，你应该使用 &lt;code&gt;content_for&lt;/code&gt; ，如果没有，使用 &lt;code&gt;provide&lt;/code&gt; 告诉布局停止寻找更多的内容。</target>
        </trans-unit>
        <trans-unit id="9953b98c64e5ffc7f405323c6a791708f94ff6a1" translate="yes" xml:space="preserve">
          <source>The same format can be used to set carbon copy (Cc:) and blind carbon copy (Bcc:) recipients, by using the &lt;code&gt;:cc&lt;/code&gt; and &lt;code&gt;:bcc&lt;/code&gt; keys respectively.</source>
          <target state="translated">通过分别使用 &lt;code&gt;:cc&lt;/code&gt; 和 &lt;code&gt;:bcc&lt;/code&gt; 键，可以使用相同的格式设置抄送（Cc :)和密抄送（Bcc :)收件人。</target>
        </trans-unit>
        <trans-unit id="2e706e64542efdac4f02a3ddcdaaa1983b14beed" translate="yes" xml:space="preserve">
          <source>The same migration could also have been written without using &lt;code&gt;revert&lt;/code&gt; but this would have involved a few more steps: reversing the order of &lt;code&gt;create_table&lt;/code&gt; and &lt;code&gt;reversible&lt;/code&gt;, replacing &lt;code&gt;create_table&lt;/code&gt; by &lt;code&gt;drop_table&lt;/code&gt;, and finally replacing &lt;code&gt;up&lt;/code&gt; by &lt;code&gt;down&lt;/code&gt; and vice-versa. This is all taken care of by &lt;code&gt;revert&lt;/code&gt;.</source>
          <target state="translated">同样的迁移也已被写入没有使用 &lt;code&gt;revert&lt;/code&gt; 但是这会牵涉到几个步骤：颠倒的顺序 &lt;code&gt;create_table&lt;/code&gt; 和 &lt;code&gt;reversible&lt;/code&gt; ，更换 &lt;code&gt;create_table&lt;/code&gt; 通过 &lt;code&gt;drop_table&lt;/code&gt; ，终于取代 &lt;code&gt;up&lt;/code&gt; 由 &lt;code&gt;down&lt;/code&gt; ，反之亦然。这全部通过还 &lt;code&gt;revert&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ae2cbbfb58ef1b4d1438f7be95f11bb462578b7d" translate="yes" xml:space="preserve">
          <source>The same remarks about ordering made above apply. In particular, you can specify individual files and they are compiled in the order specified. For example, you might concatenate three CSS files together this way:</source>
          <target state="translated">上面关于顺序的说明同样适用。特别是,你可以指定单个文件,它们会按照指定的顺序进行编译。例如,你可以用这种方式将三个CSS文件连在一起。</target>
        </trans-unit>
        <trans-unit id="f697c996741525baca91a161ef79961528f0bca1" translate="yes" xml:space="preserve">
          <source>The same works with &lt;code&gt;javascript_include_tag&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;javascript_include_tag&lt;/code&gt; 同样适用：</target>
        </trans-unit>
        <trans-unit id="a2261c96796ab795ed35937e8774ef8812b143b7" translate="yes" xml:space="preserve">
          <source>The schema above declares a table with two columns: &lt;code&gt;id&lt;/code&gt; and &lt;code&gt;name&lt;/code&gt;. Each row of this table represents a certain product with these two parameters. Thus, you would be able to write code like the following:</source>
          <target state="translated">上面的架构声明了一个包含两列的表： &lt;code&gt;id&lt;/code&gt; 和 &lt;code&gt;name&lt;/code&gt; 。该表的每一行代表具有这两个参数的某个产品。因此，您将能够编写如下代码：</target>
        </trans-unit>
        <trans-unit id="902eca9fb9857fe6b9624eac04a7cecf345099d8" translate="yes" xml:space="preserve">
          <source>The schema dumper adds two additional configuration options:</source>
          <target state="translated">模式跳线增加了两个额外的配置选项。</target>
        </trans-unit>
        <trans-unit id="ffc159d804a9b963f31a83ad9fbb61b806f8e16a" translate="yes" xml:space="preserve">
          <source>The schema still contains `category`, but now the model omits it, so any meta-driven code or schema caching will not attempt to use the column:</source>
          <target state="translated">模式仍然包含 &quot;category&quot;,但现在模型省略了它,所以任何元驱动的代码或模式缓存将不会尝试使用该列。</target>
        </trans-unit>
        <trans-unit id="0c53c10237ef4bddb7676d2ae3b7456838e0a982" translate="yes" xml:space="preserve">
          <source>The screenshot will be displayed in your console, if supported.</source>
          <target state="translated">如果支持的话,截图将显示在你的控制台中。</target>
        </trans-unit>
        <trans-unit id="abfd5ddb1b891ad695041019063c671d48b40a8e" translate="yes" xml:space="preserve">
          <source>The search, telephone, date, time, color, datetime, datetime-local, month, week, URL, email, number, and range inputs are HTML5 controls. If you require your app to have a consistent experience in older browsers, you will need an HTML5 polyfill (provided by CSS and/or JavaScript). There is definitely &lt;a href=&quot;https://github.com/Modernizr/Modernizr/wiki/HTML5-Cross-Browser-Polyfills&quot;&gt;no shortage of solutions for this&lt;/a&gt;, although a popular tool at the moment is &lt;a href=&quot;https://modernizr.com/&quot;&gt;Modernizr&lt;/a&gt;, which provides a simple way to add functionality based on the presence of detected HTML5 features.</source>
          <target state="translated">搜索，电话，日期，时间，颜色，日期时间，本地日期时间，月，周，URL，电子邮件，数字和范围输入是HTML5控件。如果您要求您的应用在旧版浏览器中具有一致的体验，则需要HTML5 polyfill（由CSS和/或JavaScript提供）。尽管目前流行的工具是&lt;a href=&quot;https://modernizr.com/&quot;&gt;Modernizr&lt;/a&gt;，但绝对&lt;a href=&quot;https://github.com/Modernizr/Modernizr/wiki/HTML5-Cross-Browser-Polyfills&quot;&gt;不乏解决方案&lt;/a&gt;，它基于检测到的HTML5功能提供了一种简单的方法来添加功能。</target>
        </trans-unit>
        <trans-unit id="d921cbf4d775ce5249e42b24eb44f85bf4cbff38" translate="yes" xml:space="preserve">
          <source>The second argument indicates whether the callback is to be run &lt;code&gt;:before&lt;/code&gt;, &lt;code&gt;:after&lt;/code&gt;, or &lt;code&gt;:around&lt;/code&gt; the event. If omitted, &lt;code&gt;:before&lt;/code&gt; is assumed. This means the first example above can also be written as:</source>
          <target state="translated">第二个参数指示是否要在事件 &lt;code&gt;:before&lt;/code&gt; 运行：before， &lt;code&gt;:after&lt;/code&gt; 或 &lt;code&gt;:around&lt;/code&gt; 。如果省略，则假定 &lt;code&gt;:before&lt;/code&gt; 。这意味着上面的第一个示例也可以写成：</target>
        </trans-unit>
        <trans-unit id="9af4d188053d675b615bd09c5b2ebeed2870fe55" translate="yes" xml:space="preserve">
          <source>The second argument, &lt;code&gt;indent_string&lt;/code&gt;, specifies which indent string to use. The default is &lt;code&gt;nil&lt;/code&gt;, which tells the method to make a guess by peeking at the first indented line, and fallback to a space if there is none.</source>
          <target state="translated">第二个参数 &lt;code&gt;indent_string&lt;/code&gt; ，指定要使用的缩进字符串。缺省值为 &lt;code&gt;nil&lt;/code&gt; ，它告诉该方法通过偷看第一条缩进行进行猜测，如果没有则回退到一个空格。</target>
        </trans-unit>
        <trans-unit id="4cb8c9f7b08002ccee566978dd1cbdbd3f7197a5" translate="yes" xml:space="preserve">
          <source>The second argument, &lt;code&gt;indent_string&lt;/code&gt;, specifies which indent string to use. The default is &lt;code&gt;nil&lt;/code&gt;, which tells the method to make an educated guess peeking at the first indented line, and fallback to a space if there is none.</source>
          <target state="translated">第二个参数 &lt;code&gt;indent_string&lt;/code&gt; ，指定要使用的缩进字符串。缺省值为 &lt;code&gt;nil&lt;/code&gt; ，它告诉该方法在第一个缩进行处进行有根据的猜测，如果没有则回退到空格。</target>
        </trans-unit>
        <trans-unit id="b0c1c629ea994f2987ea56b45bca30e917233746" translate="yes" xml:space="preserve">
          <source>The second feature of the asset pipeline is asset minification or compression. For CSS files, this is done by removing whitespace and comments. For JavaScript, more complex processes can be applied. You can choose from a set of built in options or specify your own.</source>
          <target state="translated">资产管道的第二个功能是资产最小化或压缩。对于CSS文件,这是通过删除空白和注释来实现的。对于JavaScript,可以应用更复杂的过程。你可以从一组内置的选项中选择,也可以指定你自己的选项。</target>
        </trans-unit>
        <trans-unit id="fe9a2783619d59158ecacd99966e8ff4873dee03" translate="yes" xml:space="preserve">
          <source>The second line can safely access the &quot;type&quot; key, and let the user to pass either &lt;code&gt;:type&lt;/code&gt; or &quot;type&quot;.</source>
          <target state="translated">第二行可以安全地访问&amp;ldquo; type&amp;rdquo;键，并允许用户传递 &lt;code&gt;:type&lt;/code&gt; 或&amp;ldquo; type&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="c5b46933582d278e942545f1f09e4e2181c0c75a" translate="yes" xml:space="preserve">
          <source>The second line can safely access the &lt;code&gt;:params&lt;/code&gt; key, and let the user to pass either &lt;code&gt;:params&lt;/code&gt; or &quot;params&quot;.</source>
          <target state="translated">第二行可以安全地访问 &lt;code&gt;:params&lt;/code&gt; 键，并允许用户传递 &lt;code&gt;:params&lt;/code&gt; 或&amp;ldquo; params&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="87370f63b750b398e3d1d2d4d7ac881a34411734" translate="yes" xml:space="preserve">
          <source>The second render just defines the partial template we want to render, &lt;code&gt;comments/form&lt;/code&gt;. Rails is smart enough to spot the forward slash in that string and realize that you want to render the &lt;code&gt;_form.html.erb&lt;/code&gt; file in the &lt;code&gt;app/views/comments&lt;/code&gt; directory.</source>
          <target state="translated">第二个渲染只定义了我们要渲染的部分模板， &lt;code&gt;comments/form&lt;/code&gt; 。Rails足够聪明，可以在该字符串中发现正斜杠，并意识到要在 &lt;code&gt;app/views/comments&lt;/code&gt; 目录中呈现 &lt;code&gt;_form.html.erb&lt;/code&gt; 文件。</target>
        </trans-unit>
        <trans-unit id="95d2464bf033dbb44e211484579e31d9b961dbc8" translate="yes" xml:space="preserve">
          <source>The second time the same query is run against the database, it's not actually going to hit the database. The first time the result is returned from the query it is stored in the query cache (in memory) and the second time it's pulled from memory.</source>
          <target state="translated">第二次对着数据库运行同样的查询,其实是不会打到数据库的。第一次查询返回的结果会存储在查询缓存中(内存中),第二次就会从内存中拉出来。</target>
        </trans-unit>
        <trans-unit id="8ff3ec58f06e1cf34a733e22ed5738cc9d78e9b3" translate="yes" xml:space="preserve">
          <source>The second validation declares that a &lt;code&gt;body&lt;/code&gt; value must also be present. Additionally, it declares that the &lt;code&gt;body&lt;/code&gt; value must be at least 10 characters long.</source>
          <target state="translated">第二次验证声明还必须存在一个 &lt;code&gt;body&lt;/code&gt; 值。此外，它声明 &lt;code&gt;body&lt;/code&gt; 值必须至少为10个字符长。</target>
        </trans-unit>
        <trans-unit id="3efc4a8e9d7945b1d7f7a23ba4380c75006156f2" translate="yes" xml:space="preserve">
          <source>The second way is to use a class (actually, any object that responds to the right methods will do) to handle the filtering. This is useful in cases that are more complex and cannot be implemented in a readable and reusable way using the two other methods. As an example, you could rewrite the login filter again to use a class:</source>
          <target state="translated">第二种方法是使用一个类(实际上,任何响应正确方法的对象都可以)来处理过滤。这在一些比较复杂的情况下是很有用的,而且不能用另外两种方法以可读和可重用的方式实现。举个例子,你可以再次重写登录过滤器,使用一个类。</target>
        </trans-unit>
        <trans-unit id="61a71f83c97ed525d6c4921cbda3d9a74c8be32f" translate="yes" xml:space="preserve">
          <source>The second way is using a block:</source>
          <target state="translated">第二种方式是使用块。</target>
        </trans-unit>
        <trans-unit id="ee3dafb008288f3fc62bfe8b4c6a215bc537e4d7" translate="yes" xml:space="preserve">
          <source>The second way to declare a many-to-many relationship is to use &lt;code&gt;has_many :through&lt;/code&gt;. This makes the association indirectly, through a join model:</source>
          <target state="translated">声明多对多关系的第二种方法是使用 &lt;code&gt;has_many :through&lt;/code&gt; 。这通过联接模型间接建立关联：</target>
        </trans-unit>
        <trans-unit id="5be71a74ba22ce6b2dedd769c1778c19f8234b4b" translate="yes" xml:space="preserve">
          <source>The secrets kept in credentials file are accessible via &lt;code&gt;Rails.application.credentials&lt;/code&gt;. For example, with the following decrypted &lt;code&gt;config/credentials.yml.enc&lt;/code&gt;:</source>
          <target state="translated">可通过 &lt;code&gt;Rails.application.credentials&lt;/code&gt; 访问凭证文件中保存的机密。例如，使用以下解密的 &lt;code&gt;config/credentials.yml.enc&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="c32777ba2c91a6de93a05febdd555f4b3337b2e7" translate="yes" xml:space="preserve">
          <source>The section &lt;em&gt;Customizing Inflections&lt;/em&gt; below documents ways to override this default.</source>
          <target state="translated">下面的&amp;ldquo;&lt;em&gt;自定义变形&lt;/em&gt;&amp;rdquo;部分介绍了替代此默认设置的方法。</target>
        </trans-unit>
        <trans-unit id="3ab74d6898ce4ece91f996260f25f8432949724d" translate="yes" xml:space="preserve">
          <source>The section about session fixation introduced the problem of maintained sessions. An attacker maintaining a session every five minutes can keep the session alive forever, although you are expiring sessions. A simple solution for this would be to add a &lt;code&gt;created_at&lt;/code&gt; column to the sessions table. Now you can delete sessions that were created a long time ago. Use this line in the sweep method above:</source>
          <target state="translated">关于会话固定的部分介绍了维护会话的问题。尽管您正在终止会话，但每五分钟维护一次会话的攻击者可以使该会话永远存在。一个简单的解决方案是在会话表中添加 &lt;code&gt;created_at&lt;/code&gt; 列。现在，您可以删除很久以前创建的会话。在上面的扫描方法中使用以下行：</target>
        </trans-unit>
        <trans-unit id="1f6120da2c879830bdb45596b1660515dc2d88c6" translate="yes" xml:space="preserve">
          <source>The security landscape shifts and it is important to keep up to date, because missing a new vulnerability can be catastrophic. You can find additional resources about (Rails) security here:</source>
          <target state="translated">安全环境不断变化,保持更新很重要,因为错过一个新的漏洞可能是灾难性的。你可以在这里找到关于(Rails)安全的其他资源。</target>
        </trans-unit>
        <trans-unit id="7126ad7da26114aa98cd24f05b132e044ab649ab" translate="yes" xml:space="preserve">
          <source>The selects are prepared for multi-parameter assignment to an Active Record object.</source>
          <target state="translated">选择是为多参数分配到活动记录对象而准备的。</target>
        </trans-unit>
        <trans-unit id="67fc72ff072f14ae4ea568c8c44418a72eccad87" translate="yes" xml:space="preserve">
          <source>The server can be run on a different port using the &lt;code&gt;-p&lt;/code&gt; option. The default development environment can be changed using &lt;code&gt;-e&lt;/code&gt;.</source>
          <target state="translated">可以使用 &lt;code&gt;-p&lt;/code&gt; 选项在其他端口上运行服务器。可以使用 &lt;code&gt;-e&lt;/code&gt; 更改默认的开发环境。</target>
        </trans-unit>
        <trans-unit id="f626801485519e4714c541015bc3033414f53387" translate="yes" xml:space="preserve">
          <source>The server sends a response containing the HTML back to the browser.</source>
          <target state="translated">服务器向浏览器发送包含HTML的响应。</target>
        </trans-unit>
        <trans-unit id="6f096bb4e5d5d5c6145e30b812288136686222e7" translate="yes" xml:space="preserve">
          <source>The setup in Rails allows you to easily change how the switching is done and what parameters it's based on. Let's say you want to use a cookie instead of a session to decide when to swap connections. You can write your own class:</source>
          <target state="translated">Rails中的设置可以让你轻松地改变交换的方式以及它所基于的参数。比方说,你想用cookie而不是session来决定何时交换连接。你可以写一个自己的类。</target>
        </trans-unit>
        <trans-unit id="bf940f74e13a7a42bdf13e37d4c4acbb4d699793" translate="yes" xml:space="preserve">
          <source>The show action in the above controller would have all parameter values encoded as ASCII-8BIT. This is useful in the case where an application must handle data but encoding of the data is unknown, like file system data.</source>
          <target state="translated">上述控制器中的show动作将把所有参数值编码为ASCII-8BIT。这在应用程序必须处理数据但数据编码未知的情况下很有用,比如文件系统数据。</target>
        </trans-unit>
        <trans-unit id="9fb10354b4e9f1b98e97daca2e9598a177524248" translate="yes" xml:space="preserve">
          <source>The signed ID is also used to create stable URLs for the blob through the BlobsController.</source>
          <target state="translated">签名的ID也用于通过BlobsController为blob创建稳定的URL。</target>
        </trans-unit>
        <trans-unit id="ce32a93e4064970c8546be14bb4215b30b4ef348" translate="yes" xml:space="preserve">
          <source>The simplest rule of thumb is that you should set up a &lt;code&gt;has_many :through&lt;/code&gt; relationship if you need to work with the relationship model as an independent entity. If you don't need to do anything with the relationship model, it may be simpler to set up a &lt;code&gt;has_and_belongs_to_many&lt;/code&gt; relationship (though you'll need to remember to create the joining table in the database).</source>
          <target state="translated">最简单的经验法则是，如果需要将关系模型作为独立实体使用，则应设置 &lt;code&gt;has_many :through&lt;/code&gt; 关系。如果您不需要对关系模型做任何事情，则设置 &lt;code&gt;has_and_belongs_to_many&lt;/code&gt; 关系可能更简单（尽管您需要记住要在数据库中创建联接表）。</target>
        </trans-unit>
        <trans-unit id="20504bd60dd726d82fcb6ff496945b67c5bac04a" translate="yes" xml:space="preserve">
          <source>The simplest template that would work in this case would be one located at &lt;code&gt;app/views/articles/new.html.erb&lt;/code&gt;. The extension of this file name is important: the first extension is the &lt;em&gt;format&lt;/em&gt; of the template, and the second extension is the &lt;em&gt;handler&lt;/em&gt; that will be used to render the template. Rails is attempting to find a template called &lt;code&gt;articles/new&lt;/code&gt; within &lt;code&gt;app/views&lt;/code&gt; for the application. The format for this template can only be &lt;code&gt;html&lt;/code&gt; and the default handler for HTML is &lt;code&gt;erb&lt;/code&gt;. Rails uses other handlers for other formats. &lt;code&gt;builder&lt;/code&gt; handler is used to build XML templates and &lt;code&gt;coffee&lt;/code&gt; handler uses CoffeeScript to build JavaScript templates. Since you want to create a new HTML form, you will be using the &lt;code&gt;ERB&lt;/code&gt; language which is designed to embed Ruby in HTML.</source>
          <target state="translated">在这种情况下，最简单的模板将是位于 &lt;code&gt;app/views/articles/new.html.erb&lt;/code&gt; 的模板。该文件名的扩展名很重要：第一个扩展名是模板的&lt;em&gt;格式&lt;/em&gt;，第二个扩展名是将用于呈现模板的&lt;em&gt;处理程序&lt;/em&gt;。 Rails试图在该应用程序的应用 &lt;code&gt;app/views&lt;/code&gt; 找到一个名为 &lt;code&gt;articles/new&lt;/code&gt; 的模板。该模板的格式只能是 &lt;code&gt;html&lt;/code&gt; ，HTML的默认处理程序是 &lt;code&gt;erb&lt;/code&gt; 。 Rails将其他处理程序用于其他格式。 &lt;code&gt;builder&lt;/code&gt; 处理程序用于构建XML模板和 &lt;code&gt;coffee&lt;/code&gt; 处理程序使用CoffeeScript构建JavaScript模板。由于您要创建新的HTML表单，因此将使用 &lt;code&gt;ERB&lt;/code&gt; 语言，该语言旨在将Ruby嵌入HTML中。</target>
        </trans-unit>
        <trans-unit id="29e2b5e147c1b372744d171d51ecfd514b5b40e6" translate="yes" xml:space="preserve">
          <source>The solution to this is best to &lt;em&gt;process media files asynchronously&lt;/em&gt;: Save the media file and schedule a processing request in the database. A second process will handle the processing of the file in the background.</source>
          <target state="translated">解决方案最好是&lt;em&gt;异步处理媒体文件&lt;/em&gt;：保存媒体文件并在数据库中安排处理请求。第二个过程将在后台处理文件。</target>
        </trans-unit>
        <trans-unit id="fcaaa7261c7e1496228fcd0f857e65f05c064de9" translate="yes" xml:space="preserve">
          <source>The speak action simply uses the Chat::Room object that was created when the channel was first subscribed to by the consumer when that subscriber wants to say something in the room.</source>
          <target state="translated">当消费者第一次订阅频道时,当该订阅者想在房间里说些什么时,说话的动作就会简单地使用该频道创建的Chat::Room对象。</target>
        </trans-unit>
        <trans-unit id="1bdd39fb0d2e38471f75ef10005c947a24983c76" translate="yes" xml:space="preserve">
          <source>The special syntax &lt;code&gt;:id&lt;/code&gt; tells rails that this route expects an &lt;code&gt;:id&lt;/code&gt; parameter, which in our case will be the id of the article.</source>
          <target state="translated">特殊语法 &lt;code&gt;:id&lt;/code&gt; 告诉Rails，该路由需要一个 &lt;code&gt;:id&lt;/code&gt; 参数，在我们的情况下，该参数将为文章的ID。</target>
        </trans-unit>
        <trans-unit id="e9e8a45a7c799b646c1a99d6f999c5114cf4bf41" translate="yes" xml:space="preserve">
          <source>The specified URL will then be passed a &lt;a href=&quot;../../file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; object containing the selected file, or if the field was left blank, a StringIO object.</source>
          <target state="translated">然后，将向指定的URL传递一个包含所选文件的&lt;a href=&quot;../../file&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt;对象，或者如果该字段保留为空白，则传递一个StringIO对象。</target>
        </trans-unit>
        <trans-unit id="d21a3746c58b2424072639a95cdac84836fee217" translate="yes" xml:space="preserve">
          <source>The specified URL will then be passed a &lt;a href=&quot;../../file&quot;&gt;File&lt;/a&gt; object containing the selected file, or if the field was left blank, a StringIO object.</source>
          <target state="translated">然后，将向指定的URL传递一个包含所选文件的&lt;a href=&quot;../../file&quot;&gt;File&lt;/a&gt;对象，或者如果该字段保留为空白，则传递一个StringIO对象。</target>
        </trans-unit>
        <trans-unit id="2a90b5c619bbc6a71675b667b03350ade98a639f" translate="yes" xml:space="preserve">
          <source>The standard set of helper methods for form building are located in the &lt;code&gt;field_helpers&lt;/code&gt; class attribute.</source>
          <target state="translated">用于表单构建的标准帮助方法集位于 &lt;code&gt;field_helpers&lt;/code&gt; 类属性中。</target>
        </trans-unit>
        <trans-unit id="4d57b2839976977694e926113e1db0d9b1557222" translate="yes" xml:space="preserve">
          <source>The status code can either be a standard &lt;a href=&quot;https://www.iana.org/assignments/http-status-codes&quot;&gt;HTTP Status code&lt;/a&gt; as an integer, or a symbol representing the downcased, underscored and symbolized description. Note that the status code must be a 3xx HTTP code, or redirection will not occur.</source>
          <target state="translated">状态码可以是标准的&lt;a href=&quot;https://www.iana.org/assignments/http-status-codes&quot;&gt;HTTP状态码&lt;/a&gt;（整数形式），也可以是代表小写，下划线和符号化描述的符号。请注意，状态代码必须是3xx HTTP代码，否则将不会发生重定向。</target>
        </trans-unit>
        <trans-unit id="dab910766bcf61ff2b6b105149ac996ae15cafe0" translate="yes" xml:space="preserve">
          <source>The stored attribute names can be retrieved using .stored_attributes.</source>
          <target state="translated">存储的属性名可以使用.sedicated_attributes来检索。</target>
        </trans-unit>
        <trans-unit id="47747cd71d2b363e8477e4247c0b31b077637c9e" translate="yes" xml:space="preserve">
          <source>The string of characters in the middle is a template tree digest. It is a hash digest computed based on the contents of the view fragment you are caching. If you change the view fragment (e.g., the HTML changes), the digest will change, expiring the existing file.</source>
          <target state="translated">中间的字符串是一个模板树摘要。它是基于您正在缓存的视图片段的内容计算的哈希摘要。如果你改变了视图片段(例如,HTML改变了),摘要就会改变,使现有的文件过期。</target>
        </trans-unit>
        <trans-unit id="06fa98d1baa28477f3254b368c8fb59ce8ee67d7" translate="yes" xml:space="preserve">
          <source>The string pairs &amp;ldquo;key=value&amp;rdquo; that conform the query string are sorted lexicographically in ascending order.</source>
          <target state="translated">符合查询字符串的字符串对&amp;ldquo; key = value&amp;rdquo;按字典顺序升序排序。</target>
        </trans-unit>
        <trans-unit id="64f19a2a1cf8db7cc04037d9a665651ea6cfea93" translate="yes" xml:space="preserve">
          <source>The strong parameter API was designed with the most common use cases in mind. It is not meant as a silver bullet to handle all of your parameter filtering problems. However, you can easily mix the API with your own code to adapt to your situation.</source>
          <target state="translated">强参数API的设计是考虑到最常见的使用情况。它并不意味着是处理所有参数过滤问题的银弹。然而,您可以很容易地将API与您自己的代码混合,以适应您的情况。</target>
        </trans-unit>
        <trans-unit id="a2d753308a3640e6bb4732791ff859ebc9145332" translate="yes" xml:space="preserve">
          <source>The submit button is automatically given an appropriate text value.</source>
          <target state="translated">提交按钮会被自动赋予一个适当的文本值。</target>
        </trans-unit>
        <trans-unit id="64aeaa7e8af743f68b89426602efeec47b839e41" translate="yes" xml:space="preserve">
          <source>The suffix string to append to every table name.</source>
          <target state="translated">要附加到每个表名的后缀字符串。</target>
        </trans-unit>
        <trans-unit id="c231da1b10c4104be616e8c614640770820e58c1" translate="yes" xml:space="preserve">
          <source>The sum of an empty collection is zero by default, but this is customizable:</source>
          <target state="translated">空集合的总和默认为零,但这是可以自定义的。</target>
        </trans-unit>
        <trans-unit id="e0f6f599baf2275dfb5a4aa872b6058539d06ebe" translate="yes" xml:space="preserve">
          <source>The sum of an empty receiver can be customized in this form as well:</source>
          <target state="translated">空接收器的和也可以用这种形式自定义。</target>
        </trans-unit>
        <trans-unit id="85b2addcb5be78afc0c6fb0986c7aafdb8dd27d1" translate="yes" xml:space="preserve">
          <source>The system has been designed to having you go through the &lt;a href=&quot;many&quot;&gt;&lt;code&gt;ActiveStorage::Attached::Many&lt;/code&gt;&lt;/a&gt; proxy that provides the dynamic proxy to the associations and factory methods, like &lt;code&gt;#attach&lt;/code&gt;.</source>
          <target state="translated">该系统旨在让您通过&lt;a href=&quot;many&quot;&gt; &lt;code&gt;ActiveStorage::Attached::Many&lt;/code&gt; &lt;/a&gt;代理，该代理为关联和工厂方法提供动态代理，例如 &lt;code&gt;#attach&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1980a1d02d3b53fd80ac4e2d7c492dc10cf6c43f" translate="yes" xml:space="preserve">
          <source>The system has been designed to having you go through the &lt;a href=&quot;many&quot;&gt;ActiveStorage::Attached::Many&lt;/a&gt; proxy that provides the dynamic proxy to the associations and factory methods, like &lt;code&gt;#attach&lt;/code&gt;.</source>
          <target state="translated">该系统旨在让您通过&lt;a href=&quot;many&quot;&gt;ActiveStorage :: Attached :: Many&lt;/a&gt;代理，该代理为关联和工厂方法提供动态代理，例如 &lt;code&gt;#attach&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="88383070a5f80fa3b1e58808f444a7e943270336" translate="yes" xml:space="preserve">
          <source>The system has been designed to having you go through the &lt;a href=&quot;one&quot;&gt;&lt;code&gt;ActiveStorage::Attached::One&lt;/code&gt;&lt;/a&gt; proxy that provides the dynamic proxy to the associations and factory methods, like &lt;code&gt;attach&lt;/code&gt;.</source>
          <target state="translated">该系统旨在让您通过&lt;a href=&quot;one&quot;&gt; &lt;code&gt;ActiveStorage::Attached::One&lt;/code&gt; &lt;/a&gt;代理，它为关联和工厂方法提供动态代理，例如 &lt;code&gt;attach&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c6ebe8a2a1f772cd708e9b2d8a544a7d7601a8a9" translate="yes" xml:space="preserve">
          <source>The system has been designed to having you go through the &lt;a href=&quot;one&quot;&gt;ActiveStorage::Attached::One&lt;/a&gt; proxy that provides the dynamic proxy to the associations and factory methods, like &lt;code&gt;attach&lt;/code&gt;.</source>
          <target state="translated">该系统旨在让您通过&lt;a href=&quot;one&quot;&gt;ActiveStorage :: Attached :: One&lt;/a&gt;代理，它为关联和工厂方法提供动态代理，例如 &lt;code&gt;attach&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ffb7d9e85d8c423cb49ef35ffe1f58ff36aea978" translate="yes" xml:space="preserve">
          <source>The system test directory holds system tests, which are used for full browser testing of your application. System tests allow you to test your application the way your users experience it and help you test your JavaScript as well. System tests inherit from Capybara and perform in browser tests for your application.</source>
          <target state="translated">系统测试目录中保存着系统测试,这些测试用于对您的应用程序进行全面的浏览器测试。系统测试可以让您以用户体验的方式测试您的应用程序,也可以帮助您测试您的JavaScript。系统测试继承自Capybara,并为您的应用程序执行浏览器内测试。</target>
        </trans-unit>
        <trans-unit id="6c61cb8c1e81d7702d9e362c4a46ecd45bc1e6ec" translate="yes" xml:space="preserve">
          <source>The table name for &lt;code&gt;Blog::Post&lt;/code&gt; should be &lt;code&gt;blog_posts&lt;/code&gt; due to the existence of the method &lt;code&gt;Blog.table_name_prefix&lt;/code&gt;. However, if &lt;code&gt;app/models/blog/post.rb&lt;/code&gt; is executed before &lt;code&gt;app/models/blog.rb&lt;/code&gt; is, Active Record is not aware of the existence of such method, and assumes the table is &lt;code&gt;posts&lt;/code&gt;.</source>
          <target state="translated">表名 &lt;code&gt;Blog::Post&lt;/code&gt; 应该是 &lt;code&gt;blog_posts&lt;/code&gt; 由于该方法存在 &lt;code&gt;Blog.table_name_prefix&lt;/code&gt; 。但是，如果在执行 &lt;code&gt;app/models/blog.rb&lt;/code&gt; 之前执行了 &lt;code&gt;app/models/blog/post.rb&lt;/code&gt; ，则Active Record将不知道这种方法的存在，并假定该表为 &lt;code&gt;posts&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e226fbd01d0f3a577c7b4944a32ddf8e19e4f6ff" translate="yes" xml:space="preserve">
          <source>The tables for these classes could look something like:</source>
          <target state="translated">这些类的表格可以是这样的。</target>
        </trans-unit>
        <trans-unit id="b607a63d813d085dd13611c891d91b17902f9714" translate="yes" xml:space="preserve">
          <source>The tag builder respects &lt;a href=&quot;https://www.w3.org/TR/html5/syntax.html#void-elements&quot;&gt;HTML5 void elements&lt;/a&gt; if no content is passed, and omits closing tags for those elements.</source>
          <target state="translated">如果未传递任何内容，则标记构建器将尊重&lt;a href=&quot;https://www.w3.org/TR/html5/syntax.html#void-elements&quot;&gt;HTML5 void元素&lt;/a&gt;，并省略这些元素的结束标记。</target>
        </trans-unit>
        <trans-unit id="675b6b8a4bce863060710a5c9d10379e1bb08bad" translate="yes" xml:space="preserve">
          <source>The target can be anything callable within the object, e.g. instance variables, methods, constants, etc.</source>
          <target state="translated">目标可以是对象中任何可调用的东西,例如实例变量、方法、常量等。</target>
        </trans-unit>
        <trans-unit id="baa685d8cc36701c6d0f85459c13777a362b6065" translate="yes" xml:space="preserve">
          <source>The target can be anything callable within the object, e.g. instance variables, methods, constants, etc. Only the public methods of the target are delegated.</source>
          <target state="translated">target可以是对象中任何可调用的东西,例如实例变量、方法、常量等。只有目标的公共方法才可以委托。</target>
        </trans-unit>
        <trans-unit id="6ccd69b0632a038b4775e1137e3438272e0689a3" translate="yes" xml:space="preserve">
          <source>The target method must be public, otherwise it will raise &lt;code&gt;NoMethodError&lt;/code&gt;.</source>
          <target state="translated">目标方法必须是公共的，否则将引发 &lt;code&gt;NoMethodError&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="97e918c05349a4e966ec6c625bebb25ec81486ac" translate="yes" xml:space="preserve">
          <source>The technique Sprockets uses for fingerprinting is to insert a hash of the content into the name, usually at the end. For example a CSS file &lt;code&gt;global.css&lt;/code&gt;</source>
          <target state="translated">Sprockets用于指纹识别的技术通常是在结尾处将内容的哈希值插入名称中。例如CSS文件 &lt;code&gt;global.css&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0a5e1b46915f509c3c7c7826ece3ecda8e4ab7d6" translate="yes" xml:space="preserve">
          <source>The tempfile is automatically closed and unlinked after the given block is executed.</source>
          <target state="translated">在执行完指定的块后,tempfile会自动关闭并解除链接。</target>
        </trans-unit>
        <trans-unit id="08851009cfd2022992ccb98a459841a4bbcf4922" translate="yes" xml:space="preserve">
          <source>The tempfile's name is prefixed with &lt;code&gt;ActiveStorage-&lt;/code&gt; and the blob's ID. Its extension matches that of the blob.</source>
          <target state="translated">临时文件的名称以 &lt;code&gt;ActiveStorage-&lt;/code&gt; 和blob的ID 为前缀。它的扩展名与Blob的扩展名匹配。</target>
        </trans-unit>
        <trans-unit id="fcda92529a81d9af722ac3cb13fb8f8768ff4cb9" translate="yes" xml:space="preserve">
          <source>The template digest that's added to the cache key is computed by taking an MD5 of the contents of the entire template file. This ensures that your caches will automatically expire when you change the template file.</source>
          <target state="translated">添加到缓存密钥的模板摘要是通过对整个模板文件的内容进行MD5计算的。这就保证了你的缓存会在你修改模板文件时自动失效。</target>
        </trans-unit>
        <trans-unit id="ba538c4449760474d7d60b4c54d76929d5f7fcb3" translate="yes" xml:space="preserve">
          <source>The template will be looked always in &lt;code&gt;app/views/layouts/&lt;/code&gt; folder. But you can point &lt;code&gt;layouts&lt;/code&gt; folder direct also. &lt;code&gt;layout &quot;layouts/demo&quot;&lt;/code&gt; is the same as &lt;code&gt;layout
&quot;demo&quot;&lt;/code&gt;.</source>
          <target state="translated">模板将始终在 &lt;code&gt;app/views/layouts/&lt;/code&gt; 文件夹中显示。但是您也可以直接指向 &lt;code&gt;layouts&lt;/code&gt; 文件夹。 &lt;code&gt;layout &quot;layouts/demo&quot;&lt;/code&gt; 与 &lt;code&gt;layout &quot;demo&quot;&lt;/code&gt; 相同。</target>
        </trans-unit>
        <trans-unit id="5c5c794abecdd21cff9c4b0a0fde1a6849f77b0f" translate="yes" xml:space="preserve">
          <source>The template will be rendered in a Rack environment which is accessible through ActionController::Renderer#env. You can set it up in two ways:</source>
          <target state="translated">模板将在Rack环境中渲染,可以通过ActionController::Renderer#env访问。你可以通过两种方式进行设置。</target>
        </trans-unit>
        <trans-unit id="2cf77bf1c65d71615e432d7b152984771af2f9e1" translate="yes" xml:space="preserve">
          <source>The test adapter should be used only in testing. Along with &lt;code&gt;ActionCable::TestHelper&lt;/code&gt; it makes a great tool to test your Rails application.</source>
          <target state="translated">测试适配器应仅在测试中使用。与 &lt;code&gt;ActionCable::TestHelper&lt;/code&gt; 一起，它是测试Rails应用程序的好工具。</target>
        </trans-unit>
        <trans-unit id="e2f52f540be30e96ad7b0037c64acc9126cfb2d3" translate="yes" xml:space="preserve">
          <source>The test adapter should be used only in testing. Along with &lt;code&gt;ActiveJob::TestCase&lt;/code&gt; and &lt;code&gt;ActiveJob::TestHelper&lt;/code&gt; it makes a great tool to test your Rails application.</source>
          <target state="translated">测试适配器应仅在测试中使用。与 &lt;code&gt;ActiveJob::TestCase&lt;/code&gt; 和 &lt;code&gt;ActiveJob::TestHelper&lt;/code&gt; 它是测试Rails应用程序的好工具。</target>
        </trans-unit>
        <trans-unit id="975aa4be50774a60cf43702b38d9d5f31ba89b40" translate="yes" xml:space="preserve">
          <source>The test for the controller</source>
          <target state="translated">控制器的测试</target>
        </trans-unit>
        <trans-unit id="00a7467e10ff3f397084acc632df42c027f23243" translate="yes" xml:space="preserve">
          <source>The test runner also provides a lot of other features like failing fast, deferring test output at the end of test run and so on. Check the documentation of the test runner as follows:</source>
          <target state="translated">测试运行器还提供了很多其他的功能,比如快速失败、测试运行结束时推迟测试输出等。查看测试运行器的文档如下。</target>
        </trans-unit>
        <trans-unit id="b6c69ad7de8325a76cdfff0549a2a13fb995582e" translate="yes" xml:space="preserve">
          <source>The test runner also provides a lot of other features like failing fast, deferring test output at the end of the test run and so on. Check the documentation of the test runner as follows:</source>
          <target state="translated">测试运行器还提供了很多其他的功能,比如快速失败,在测试运行结束时推迟测试输出等等。查看测试运行器的文档如下。</target>
        </trans-unit>
        <trans-unit id="640507b7858ee7a8ef9198521e54b0f566518fb9" translate="yes" xml:space="preserve">
          <source>The test should see that there is an &lt;code&gt;h1&lt;/code&gt; on the articles index page and pass.</source>
          <target state="translated">测试应该看到在商品索引页面上存在一个 &lt;code&gt;h1&lt;/code&gt; 并通过。</target>
        </trans-unit>
        <trans-unit id="9b2cf1c313b916f77748246680f4fd2104331502" translate="yes" xml:space="preserve">
          <source>The test will have the following name:</source>
          <target state="translated">该测试将有以下名称:</target>
        </trans-unit>
        <trans-unit id="72797504f4efb0607c366b3726d9a06008557676" translate="yes" xml:space="preserve">
          <source>The testing environment will automatically load all the fixtures into the database before each test. To ensure consistent data, the environment deletes the fixtures before running the load.</source>
          <target state="translated">在每次测试之前,测试环境会自动将所有夹具加载到数据库中。为了确保数据的一致性,环境会在运行加载之前删除夹具。</target>
        </trans-unit>
        <trans-unit id="29f0e86770cb31aee986bbcb60bab0de0e063a64" translate="yes" xml:space="preserve">
          <source>The third argument, &lt;code&gt;indent_empty_lines&lt;/code&gt;, is a flag that says whether empty lines should be indented. Default is false.</source>
          <target state="translated">第三个参数 &lt;code&gt;indent_empty_lines&lt;/code&gt; 是一个标志，指示是否应缩进空行。默认为false。</target>
        </trans-unit>
        <trans-unit id="416d9d9d95fa737fdf9ecf9dd097599dc8c9c7ef" translate="yes" xml:space="preserve">
          <source>The third feature of the asset pipeline is it allows coding assets via a higher-level language, with precompilation down to the actual assets. Supported languages include Sass for CSS, CoffeeScript for JavaScript, and ERB for both by default.</source>
          <target state="translated">资产管道的第三个特点是它允许通过更高级别的语言对资产进行编码,预编译到实际的资产。支持的语言包括CSS的Sass,JavaScript的CoffeeScript,默认情况下两者都支持ERB。</target>
        </trans-unit>
        <trans-unit id="11060f387f51981fd82ede832f35a1656221d2dc" translate="yes" xml:space="preserve">
          <source>The third line can safely access the &lt;code&gt;:input&lt;/code&gt; key, and let the user to pass either &lt;code&gt;:input&lt;/code&gt; or &quot;input&quot;.</source>
          <target state="translated">第三行可以安全地访问 &lt;code&gt;:input&lt;/code&gt; 键，并允许用户传递 &lt;code&gt;:input&lt;/code&gt; 或&amp;ldquo; input&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="f12ece5923a813434343679094fa85482f7f8059" translate="yes" xml:space="preserve">
          <source>The threaded parallelization uses minitest's parallel executor directly. The processes parallelization uses a Ruby DRb server.</source>
          <target state="translated">线程并行化直接使用minitest的并行执行器。进程并行化使用Ruby DRb服务器。</target>
        </trans-unit>
        <trans-unit id="6511e3596ea3977b98718f56e83ca7b2c0af377b" translate="yes" xml:space="preserve">
          <source>The threats against web applications include user account hijacking, bypass of access control, reading or modifying sensitive data, or presenting fraudulent content. Or an attacker might be able to install a Trojan horse program or unsolicited e-mail sending software, aim at financial enrichment, or cause brand name damage by modifying company resources. In order to prevent attacks, minimize their impact and remove points of attack, first of all, you have to fully understand the attack methods in order to find the correct countermeasures. That is what this guide aims at.</source>
          <target state="translated">针对网络应用的威胁包括劫持用户账户、绕过访问控制、读取或修改敏感数据,或呈现欺诈性内容。或者攻击者可能会安装木马程序或不请自来的电子邮件发送软件,以敛财为目的,或者通过修改公司资源造成品牌损害。为了防止攻击,将攻击的影响降到最低,消除攻击点,首先要充分了解攻击方式,才能找到正确的应对措施。这就是本指南的目的。</target>
        </trans-unit>
        <trans-unit id="31848326716b8e439bd35853912f7581c2cf69c2" translate="yes" xml:space="preserve">
          <source>The three of them return &lt;code&gt;nil&lt;/code&gt; for blank receivers.</source>
          <target state="translated">对于空白接收器，它们三个返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a86c8236c7a4aa22941361c064142983f59ef501" translate="yes" xml:space="preserve">
          <source>The time is parsed using Time.parse method. If &lt;code&gt;form&lt;/code&gt; is :local, then the time is in the system timezone. If the date part is missing then the current date is used and if the time part is missing then it is assumed to be 00:00:00.</source>
          <target state="translated">使用Time.parse方法分析时间。如果 &lt;code&gt;form&lt;/code&gt; 为：local，则时间为系统时区。如果缺少日期部分，则使用当前日期；如果缺少时间部分，则假定为00:00:00。</target>
        </trans-unit>
        <trans-unit id="1da1a16a7b055aacdbe4a5e837bd0b5a8550d320" translate="yes" xml:space="preserve">
          <source>The timeline of Rails' initialization sequence.</source>
          <target state="translated">Rails初始化序列的时间轴。</target>
        </trans-unit>
        <trans-unit id="d6194f3b2f582790fad265e80912cb271ac73c7b" translate="yes" xml:space="preserve">
          <source>The token parameter is named &lt;code&gt;authenticity_token&lt;/code&gt; by default. The name and value of this token must be added to every layout that renders forms by including &lt;code&gt;csrf_meta_tags&lt;/code&gt; in the HTML &lt;code&gt;head&lt;/code&gt;.</source>
          <target state="translated">默认情况下，令牌参数命名为 &lt;code&gt;authenticity_token&lt;/code&gt; 。必须通过在HTML &lt;code&gt;head&lt;/code&gt; 包含 &lt;code&gt;csrf_meta_tags&lt;/code&gt; ，将此令牌的名称和值添加到呈现表单的每个布局中。</target>
        </trans-unit>
        <trans-unit id="05d8eb590d8e83077814240b2a170f555b1863fe" translate="yes" xml:space="preserve">
          <source>The top portion of the index page displays the users. The bottom portion provides a form to create a new user.</source>
          <target state="translated">索引页面的顶部显示用户。底部提供了一个创建新用户的表格。</target>
        </trans-unit>
        <trans-unit id="e7aaa0ff7f838941cf4d13f0243ddae8be9664af" translate="yes" xml:space="preserve">
          <source>The trailing '_id' can be kept and capitalized by setting the optional parameter &lt;code&gt;keep_id_suffix&lt;/code&gt; to true (default is false).</source>
          <target state="translated">通过将可选参数 &lt;code&gt;keep_id_suffix&lt;/code&gt; 设置为true（默认值为false），可以保留尾部的'_id'并将其大写。</target>
        </trans-unit>
        <trans-unit id="a346915612a785e701fb8aa4fb88d6d804e10964" translate="yes" xml:space="preserve">
          <source>The trailing '_id' can be kept and capitalized by setting the optional parameter &lt;code&gt;keep_id_suffix&lt;/code&gt; to true. By default, this parameter is false.</source>
          <target state="translated">通过将可选参数 &lt;code&gt;keep_id_suffix&lt;/code&gt; 设置为true，可以保留尾部的'_id'并将其大写。默认情况下，此参数为false。</target>
        </trans-unit>
        <trans-unit id="aec6fc5c9914c772cee6cc49f306e3312005d4e1" translate="yes" xml:space="preserve">
          <source>The trailing '_id','Id'.. can be kept and capitalized by setting the optional parameter &lt;code&gt;keep_id_suffix&lt;/code&gt; to true. By default, this parameter is false.</source>
          <target state="translated">通过将可选参数 &lt;code&gt;keep_id_suffix&lt;/code&gt; 设置为true，可以保留尾随的'_id'，'Id'..并将其大写。默认情况下，此参数为false。</target>
        </trans-unit>
        <trans-unit id="c4c9ed39b42fbbb24c8e1e3654de7fd488fd5d48" translate="yes" xml:space="preserve">
          <source>The translated model name, translated attribute name, and value are always available for interpolation as &lt;code&gt;model&lt;/code&gt;, &lt;code&gt;attribute&lt;/code&gt; and &lt;code&gt;value&lt;/code&gt; respectively.</source>
          <target state="translated">转换后的模型名称，转换后的属性名称和值始终可分别作为 &lt;code&gt;model&lt;/code&gt; ， &lt;code&gt;attribute&lt;/code&gt; 和 &lt;code&gt;value&lt;/code&gt; 进行插值。</target>
        </trans-unit>
        <trans-unit id="0c206e712ab9262a624613a14bf5a4614f215afa" translate="yes" xml:space="preserve">
          <source>The translation denoted as &lt;code&gt;:one&lt;/code&gt; is regarded as singular, and the &lt;code&gt;:other&lt;/code&gt; is used as plural. If the count is zero, and a &lt;code&gt;:zero&lt;/code&gt; entry is present, then it will be used instead of &lt;code&gt;:other&lt;/code&gt;.</source>
          <target state="translated">表示为 &lt;code&gt;:one&lt;/code&gt; 的翻译被视为单数，而 &lt;code&gt;:other&lt;/code&gt; 被用作复数。如果计数为零，并且存在 &lt;code&gt;:zero&lt;/code&gt; 条目，则将使用它代替 &lt;code&gt;:other&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="817e4fce66d44b8da035cb559bc61fa24de4f850" translate="yes" xml:space="preserve">
          <source>The trick to adding these back in is that, by default, they are passed &lt;code&gt;session_options&lt;/code&gt; when added (including the session key), so you can't just add a &lt;code&gt;session_store.rb&lt;/code&gt; initializer, add &lt;code&gt;use ActionDispatch::Session::CookieStore&lt;/code&gt; and have sessions functioning as usual. (To be clear: sessions may work, but your session options will be ignored - i.e the session key will default to &lt;code&gt;_session_id&lt;/code&gt;)</source>
          <target state="translated">重新添加这些内容的技巧是，默认情况下，它们在添加时会通过 &lt;code&gt;session_options&lt;/code&gt; 传递（包括会话密钥），因此您不仅可以添加 &lt;code&gt;session_store.rb&lt;/code&gt; 初始化程序，还可以 &lt;code&gt;use ActionDispatch::Session::CookieStore&lt;/code&gt; 并具有会话正常运行。（要明确：会话可能有效，但是您的会话选项将被忽略-即会话密钥将默认为 &lt;code&gt;_session_id&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="1eaffe2233ce31e6bda12ed1e808ce2e1055683f" translate="yes" xml:space="preserve">
          <source>The truncated text ends with the &lt;code&gt;:omission&lt;/code&gt; string, defaulting to &amp;ldquo;&amp;hellip;&amp;rdquo;, for a total length not exceeding &lt;code&gt;bytesize&lt;/code&gt;.</source>
          <target state="translated">截断的文本以 &lt;code&gt;:omission&lt;/code&gt; &lt;code&gt;bytesize&lt;/code&gt; 字符串结尾，默认为&amp;ldquo;&amp;hellip;&amp;rdquo;，总长度不超过bytesize。</target>
        </trans-unit>
        <trans-unit id="3ef5f4d61a4d21cbfd235b66e8b63c8804fdf71b" translate="yes" xml:space="preserve">
          <source>The two basic structures are arrays and hashes. Hashes mirror the syntax used for accessing the value in &lt;code&gt;params&lt;/code&gt;. For example, if a form contains:</source>
          <target state="translated">两个基本结构是数组和哈希。哈希反映了用于访问 &lt;code&gt;params&lt;/code&gt; 中的值的语法。例如，如果表单包含：</target>
        </trans-unit>
        <trans-unit id="4ae6f1958803c95c5af96cee2de8ca60e298f229" translate="yes" xml:space="preserve">
          <source>The two dashes start a comment ignoring everything after it. So the query returns all records from the projects table including those blind to the user. This is because the condition is true for all records.</source>
          <target state="translated">两个破折号开始的注释忽略了后面的所有内容。因此,查询将返回项目表中的所有记录,包括那些对用户来说是盲目的记录。这是因为条件对所有记录都是真的。</target>
        </trans-unit>
        <trans-unit id="8942bbf1653c1d3d11b11a9b73ae3e0919f325ce" translate="yes" xml:space="preserve">
          <source>The two files we'll focus on are the migration file (&lt;code&gt;db/migrate/&amp;lt;timestamp&amp;gt;_create_articles.rb&lt;/code&gt;) and the model file (&lt;code&gt;app/models/article.rb&lt;/code&gt;).</source>
          <target state="translated">我们将重点关注的两个文件是迁移文件（ &lt;code&gt;db/migrate/&amp;lt;timestamp&amp;gt;_create_articles.rb&lt;/code&gt; ）和模型文件（ &lt;code&gt;app/models/article.rb&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="26baf66a5c5cf8b3ca15d0abd849a6180bb33678" translate="yes" xml:space="preserve">
          <source>The two lines following the request are to handle the redirect we setup when creating a new article.</source>
          <target state="translated">请求后面的两行是为了处理我们在创建新文章时设置的重定向。</target>
        </trans-unit>
        <trans-unit id="6b101fb80aec1c9c2ab48a863fb3cea6d938460e" translate="yes" xml:space="preserve">
          <source>The two main methods for testing your routes:</source>
          <target state="translated">测试路线的两种主要方法。</target>
        </trans-unit>
        <trans-unit id="baed0bf9298ec8701b9fbc2d0adf2775a8c9d6ae" translate="yes" xml:space="preserve">
          <source>The two relations must be structurally compatible: they must be scoping the same model, and they must differ only by &lt;a href=&quot;querymethods#method-i-where&quot;&gt;&lt;code&gt;where&lt;/code&gt;&lt;/a&gt; (if no &lt;a href=&quot;querymethods#method-i-group&quot;&gt;&lt;code&gt;group&lt;/code&gt;&lt;/a&gt; has been defined) or &lt;a href=&quot;querymethods#method-i-having&quot;&gt;&lt;code&gt;having&lt;/code&gt;&lt;/a&gt; (if a &lt;a href=&quot;querymethods#method-i-group&quot;&gt;&lt;code&gt;group&lt;/code&gt;&lt;/a&gt; is present).</source>
          <target state="translated">两种关系在结构上必须兼容：它们必须在同一模型中确定范围，并且它们的区别仅在于&lt;a href=&quot;querymethods#method-i-where&quot;&gt; &lt;code&gt;where&lt;/code&gt; &lt;/a&gt;（如果未定义&lt;a href=&quot;querymethods#method-i-group&quot;&gt; &lt;code&gt;group&lt;/code&gt; &lt;/a&gt;）或&lt;a href=&quot;querymethods#method-i-having&quot;&gt; &lt;code&gt;having&lt;/code&gt; &lt;/a&gt;（如果存在&lt;a href=&quot;querymethods#method-i-group&quot;&gt; &lt;code&gt;group&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="4df240969de79c63294f13e9b45064ab12e90f94" translate="yes" xml:space="preserve">
          <source>The two relations must be structurally compatible: they must be scoping the same model, and they must differ only by &lt;a href=&quot;querymethods#method-i-where&quot;&gt;where&lt;/a&gt; (if no &lt;a href=&quot;querymethods#method-i-group&quot;&gt;group&lt;/a&gt; has been defined) or &lt;a href=&quot;querymethods#method-i-having&quot;&gt;having&lt;/a&gt; (if a &lt;a href=&quot;querymethods#method-i-group&quot;&gt;group&lt;/a&gt; is present). Neither relation may have a &lt;a href=&quot;querymethods#method-i-limit&quot;&gt;limit&lt;/a&gt;, &lt;a href=&quot;querymethods#method-i-offset&quot;&gt;offset&lt;/a&gt;, or &lt;a href=&quot;querymethods#method-i-distinct&quot;&gt;distinct&lt;/a&gt; set.</source>
          <target state="translated">两个关系必须结构兼容：它们必须被确定范围相同的模型，并且它们必须区别仅由&lt;a href=&quot;querymethods#method-i-where&quot;&gt;其中&lt;/a&gt;（如果没有&lt;a href=&quot;querymethods#method-i-group&quot;&gt;组&lt;/a&gt;已定义）或&lt;a href=&quot;querymethods#method-i-having&quot;&gt;具有&lt;/a&gt;（如果一个&lt;a href=&quot;querymethods#method-i-group&quot;&gt;基团&lt;/a&gt;存在的话）。两个关系都不能具有&lt;a href=&quot;querymethods#method-i-limit&quot;&gt;limit&lt;/a&gt;，&lt;a href=&quot;querymethods#method-i-offset&quot;&gt;offset&lt;/a&gt;或&lt;a href=&quot;querymethods#method-i-distinct&quot;&gt;distinct&lt;/a&gt;集合。</target>
        </trans-unit>
        <trans-unit id="4429a5c939dc6aca1139441991d565996b91dd6d" translate="yes" xml:space="preserve">
          <source>The type detected by Active Record can be overridden.</source>
          <target state="translated">活动记录检测到的类型可以被覆盖。</target>
        </trans-unit>
        <trans-unit id="d6e1bcdf615211277f7abc9c829db95fcf59969a" translate="yes" xml:space="preserve">
          <source>The type of an attribute is given the opportunity to change how dirty tracking is performed. The methods &lt;code&gt;changed?&lt;/code&gt; and &lt;code&gt;changed_in_place?&lt;/code&gt; will be called from &lt;a href=&quot;../../activemodel/dirty&quot;&gt;&lt;code&gt;ActiveModel::Dirty&lt;/code&gt;&lt;/a&gt;. See the documentation for those methods in &lt;a href=&quot;../../activemodel/type/value&quot;&gt;&lt;code&gt;ActiveModel::Type::Value&lt;/code&gt;&lt;/a&gt; for more details.</source>
          <target state="translated">属性的类型有机会更改执行脏跟踪的方式。方法 &lt;code&gt;changed?&lt;/code&gt; 和 &lt;code&gt;changed_in_place?&lt;/code&gt; 将从&lt;a href=&quot;../../activemodel/dirty&quot;&gt; &lt;code&gt;ActiveModel::Dirty&lt;/code&gt; &lt;/a&gt;调用。有关更多详细信息，请参见&lt;a href=&quot;../../activemodel/type/value&quot;&gt; &lt;code&gt;ActiveModel::Type::Value&lt;/code&gt; &lt;/a&gt;有关这些方法的文档。</target>
        </trans-unit>
        <trans-unit id="1f0b9cf1c4d9c3eca3e4a428a0c7fa3e8066b238" translate="yes" xml:space="preserve">
          <source>The type of an attribute is given the opportunity to change how dirty tracking is performed. The methods &lt;code&gt;changed?&lt;/code&gt; and &lt;code&gt;changed_in_place?&lt;/code&gt; will be called from &lt;a href=&quot;../../activemodel/dirty&quot;&gt;ActiveModel::Dirty&lt;/a&gt;. See the documentation for those methods in &lt;a href=&quot;../../activemodel/type/value&quot;&gt;ActiveModel::Type::Value&lt;/a&gt; for more details.</source>
          <target state="translated">属性的类型有机会更改执行脏跟踪的方式。方法 &lt;code&gt;changed?&lt;/code&gt; 和 &lt;code&gt;changed_in_place?&lt;/code&gt; 将从&lt;a href=&quot;../../activemodel/dirty&quot;&gt;ActiveModel :: Dirty&lt;/a&gt;调用。有关更多详细信息，请参见&lt;a href=&quot;../../activemodel/type/value&quot;&gt;ActiveModel :: Type :: Value中&lt;/a&gt;有关这些方法的文档。</target>
        </trans-unit>
        <trans-unit id="ffc82cbd0e859aed8de76a61e8169992477d9bfa" translate="yes" xml:space="preserve">
          <source>The type of error, defaults to `:invalid` unless specified</source>
          <target state="translated">错误类型,除非指定,否则默认为`:无效`。</target>
        </trans-unit>
        <trans-unit id="927059acf7f717dfa1ace58934a018ae273d21bc" translate="yes" xml:space="preserve">
          <source>The types &lt;code&gt;inet&lt;/code&gt; and &lt;code&gt;cidr&lt;/code&gt; are mapped to Ruby &lt;a href=&quot;https://ruby-doc.org/stdlib-2.2.2/libdoc/ipaddr/rdoc/IPAddr.html&quot;&gt;&lt;code&gt;IPAddr&lt;/code&gt;&lt;/a&gt; objects. The &lt;code&gt;macaddr&lt;/code&gt; type is mapped to normal text.</source>
          <target state="translated">&lt;code&gt;inet&lt;/code&gt; 和 &lt;code&gt;cidr&lt;/code&gt; 类型映射到Ruby &lt;a href=&quot;https://ruby-doc.org/stdlib-2.2.2/libdoc/ipaddr/rdoc/IPAddr.html&quot;&gt; &lt;code&gt;IPAddr&lt;/code&gt; &lt;/a&gt;对象。该 &lt;code&gt;macaddr&lt;/code&gt; 类型映射到普通文本。</target>
        </trans-unit>
        <trans-unit id="a226f5fad36d407ad5aa4429e81676ae87fdbd65" translate="yes" xml:space="preserve">
          <source>The types &lt;code&gt;inet&lt;/code&gt; and &lt;code&gt;cidr&lt;/code&gt; are mapped to Ruby &lt;a href=&quot;https://ruby-doc.org/stdlib-2.5.0/libdoc/ipaddr/rdoc/IPAddr.html&quot;&gt;&lt;code&gt;IPAddr&lt;/code&gt;&lt;/a&gt; objects. The &lt;code&gt;macaddr&lt;/code&gt; type is mapped to normal text.</source>
          <target state="translated">&lt;code&gt;inet&lt;/code&gt; 和 &lt;code&gt;cidr&lt;/code&gt; 类型映射到Ruby &lt;a href=&quot;https://ruby-doc.org/stdlib-2.5.0/libdoc/ipaddr/rdoc/IPAddr.html&quot;&gt; &lt;code&gt;IPAddr&lt;/code&gt; &lt;/a&gt;对象。该 &lt;code&gt;macaddr&lt;/code&gt; 类型映射到普通文本。</target>
        </trans-unit>
        <trans-unit id="b0861f73b8db3082acb47c4ea15e2a6f8e772b26" translate="yes" xml:space="preserve">
          <source>The typical route is to just dump everything in a monolithic class, perhaps with a comment, as a least-bad alternative. Using modules in separate files means tedious sifting to get a big-picture view.</source>
          <target state="translated">典型的方法是把所有的东西都转储到一个单片类中,也许加上一个注释,作为一个最不坏的选择。在单独的文件中使用模块意味着要通过繁琐的筛选才能得到一个全局性的视图。</target>
        </trans-unit>
        <trans-unit id="cc0073e1d3239a9024667d104757ce1e2361f109" translate="yes" xml:space="preserve">
          <source>The underlying body, as a streamable object.</source>
          <target state="translated">底层主体,作为一个可流转的对象。</target>
        </trans-unit>
        <trans-unit id="504117b27c360308482a63dde448944374808b20" translate="yes" xml:space="preserve">
          <source>The underlying table must have the relevant columns defined with unique constraints.</source>
          <target state="translated">基础表必须有相关的列定义,并有唯一的约束条件。</target>
        </trans-unit>
        <trans-unit id="fdf93057400271c1f0b768430268fc455455f04a" translate="yes" xml:space="preserve">
          <source>The unique request id can be used to trace a request end-to-end and would typically end up being part of log files from multiple pieces of the stack.</source>
          <target state="translated">唯一的请求id可以用来跟踪一个请求的端到端,通常会最终成为堆栈中多个片段的日志文件的一部分。</target>
        </trans-unit>
        <trans-unit id="44345e0f37696053af8dfe1ad08931d4ee884fed" translate="yes" xml:space="preserve">
          <source>The unique request id is either based on the X-Request-Id header in the request, which would typically be generated by a firewall, load balancer, or the web server, or, if this header is not available, a random uuid. If the header is accepted from the outside world, we sanitize it to a max of 255 chars and alphanumeric and dashes only.</source>
          <target state="translated">唯一的请求ID是基于请求中的X-Request-Id头(通常由防火墙、负载平衡器或Web服务器生成),或者,如果这个头不可用,则是一个随机的uuid。如果请求头是由外部世界接受的,我们会将请求头的字符数控制在255个以内,并且只包含字母数字和破折号。</target>
        </trans-unit>
        <trans-unit id="c4127c0166c14c885baf6d19dcdb9fce72629288" translate="yes" xml:space="preserve">
          <source>The upside of long-lived channel instances is that you can use instance variables to keep reference to objects that future subscriber requests can interact with. Here's a quick example:</source>
          <target state="translated">长寿命通道实例的好处是,你可以使用实例变量来保持对未来订阅者请求可以交互的对象的引用。下面是一个快速的例子。</target>
        </trans-unit>
        <trans-unit id="f05b9f48f977cb2b8245e6965144965f6f98f067" translate="yes" xml:space="preserve">
          <source>The use of &lt;code&gt;write_attribute&lt;/code&gt; to write to the field in model is just one example of how a plugin can interact with the model, and will not always be the right method to use. For example, you could also use:</source>
          <target state="translated">使用 &lt;code&gt;write_attribute&lt;/code&gt; 写入模型中的字段只是插件如何与模型进行交互的一个示例，并且不一定总是正确的使用方法。例如，您还可以使用：</target>
        </trans-unit>
        <trans-unit id="8ba3a56d5e7efe66d3fab380043aeea55b8e7b0a" translate="yes" xml:space="preserve">
          <source>The use of extra attributes on the join table in a &lt;code&gt;has_and_belongs_to_many&lt;/code&gt; association is deprecated. If you require this sort of complex behavior on the table that joins two models in a many-to-many relationship, you should use a &lt;code&gt;has_many :through&lt;/code&gt; association instead of &lt;code&gt;has_and_belongs_to_many&lt;/code&gt;.</source>
          <target state="translated">在 &lt;code&gt;has_and_belongs_to_many&lt;/code&gt; 关联中，不建议在联接表上使用额外的属性。如果在以多对多关系连接两个模型的表上需要这种复杂的行为，则应使用 &lt;code&gt;has_many :through&lt;/code&gt; 关联而不是 &lt;code&gt;has_and_belongs_to_many&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="687066842fc8ecd4fa47ae8968fd256f5e45ada4" translate="yes" xml:space="preserve">
          <source>The user buys something.</source>
          <target state="translated">用户买东西。</target>
        </trans-unit>
        <trans-unit id="7c62bd30e184568bef1e6d0ac16046c9a736c174" translate="yes" xml:space="preserve">
          <source>The user can also specify the encoding via a comment on the first line of the template (# encoding: NAME-OF-ENCODING). This will work with any template engine, as we process out the encoding comment before passing the source on to the template engine, leaving a blank line in its stead.</source>
          <target state="translated">用户也可以通过模板第一行的注释来指定编码(#encoding:NAME-OF-ENCODING)。这将适用于任何模板引擎,因为我们在将源码传递给模板引擎之前,会先处理掉编码注释,然后留下一行空白。</target>
        </trans-unit>
        <trans-unit id="826ca47e57f18b11478c16bdc6bb3633f987bcfe" translate="yes" xml:space="preserve">
          <source>The user can override this default by passing a block to the layout:</source>
          <target state="translated">用户可以通过向布局传递一个块来覆盖这个默认值。</target>
        </trans-unit>
        <trans-unit id="719dce192492bacd8bcefcb5f6b709f528c266da" translate="yes" xml:space="preserve">
          <source>The user has their original credit back.</source>
          <target state="translated">用户原有的信用已经恢复。</target>
        </trans-unit>
        <trans-unit id="c6fa6bc3d4150b5cc2b951fee14c9d1cabd21a92" translate="yes" xml:space="preserve">
          <source>The user is &lt;em&gt;held accountable for the results&lt;/em&gt; of the interaction.</source>
          <target state="translated">用户要对交互&lt;em&gt;结果&lt;/em&gt;负责。</target>
        </trans-unit>
        <trans-unit id="3e076b48f1c86983855eb3347dba2080e3709d89" translate="yes" xml:space="preserve">
          <source>The user takes the cookie from the first step (which they previously copied) and replaces the current cookie in the browser.</source>
          <target state="translated">用户从第一步中取出cookie(他们之前复制的),并在浏览器中替换当前cookie。</target>
        </trans-unit>
        <trans-unit id="0c221d372386ae6055b0803819195b0d89fb89dc" translate="yes" xml:space="preserve">
          <source>The validation happens by performing an SQL query into the model's table, searching for an existing record with the same value in that attribute.</source>
          <target state="translated">验证是通过对模型的表执行SQL查询,搜索该属性中具有相同值的现有记录来实现的。</target>
        </trans-unit>
        <trans-unit id="210fb69772009d42d4971aa88ccf3a4132e9cbb3" translate="yes" xml:space="preserve">
          <source>The validation only runs when all the &lt;code&gt;:if&lt;/code&gt; conditions and none of the &lt;code&gt;:unless&lt;/code&gt; conditions are evaluated to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">验证仅在所有 &lt;code&gt;:if&lt;/code&gt; 条件且所有 &lt;code&gt;:unless&lt;/code&gt; 条件均未评估为 &lt;code&gt;true&lt;/code&gt; 时运行。</target>
        </trans-unit>
        <trans-unit id="22d922531e256f36a7805e905aa5612d4cc33f30" translate="yes" xml:space="preserve">
          <source>The validation process on save can be skipped by passing &lt;code&gt;validate:
false&lt;/code&gt;. The validation context can be changed by passing &lt;code&gt;context: context&lt;/code&gt;. The regular &lt;a href=&quot;persistence#method-i-save&quot;&gt;ActiveRecord::Base#save&lt;/a&gt; method is replaced with this when the validations module is mixed in, which it is by default.</source>
          <target state="translated">可以通过传递 &lt;code&gt;validate: false&lt;/code&gt; 来跳过保存时的验证过程。可以通过传递 &lt;code&gt;context: context&lt;/code&gt; 来更改验证上下文。混入验证模块时，默认的方法是用常规&lt;a href=&quot;persistence#method-i-save&quot;&gt;ActiveRecord :: Base＃save&lt;/a&gt;方法替换该方法。</target>
        </trans-unit>
        <trans-unit id="8999b1ed1a41ae9c57579e07e860b4efcd1722c6" translate="yes" xml:space="preserve">
          <source>The validators hash can also handle regular expressions, ranges, arrays and strings in shortcut form.</source>
          <target state="translated">验证器哈希还可以处理正则表达式、范围、数组和字符串的快捷形式。</target>
        </trans-unit>
        <trans-unit id="74bda52d12b9a29a5adb328b6d0e82b42dd08d0d" translate="yes" xml:space="preserve">
          <source>The value for &lt;code&gt;i18n.transliterate.rule&lt;/code&gt; can be a simple &lt;a href=&quot;../hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt; that maps characters to ASCII approximations as shown above, or, for more complex requirements, a Proc:</source>
          <target state="translated">&lt;code&gt;i18n.transliterate.rule&lt;/code&gt; 的值可以是一个简单的&lt;a href=&quot;../hash&quot;&gt; &lt;code&gt;Hash&lt;/code&gt; &lt;/a&gt;，可以将字符映射到ASCII近似值，如上所示，或者对于更复杂的要求，可以使用Proc：</target>
        </trans-unit>
        <trans-unit id="ddc6ecf56ce207f86d9a65f068b01ae48ef8f30f" translate="yes" xml:space="preserve">
          <source>The value for &lt;code&gt;i18n.transliterate.rule&lt;/code&gt; can be a simple &lt;a href=&quot;../hash&quot;&gt;Hash&lt;/a&gt; that maps characters to ASCII approximations as shown above, or, for more complex requirements, a Proc:</source>
          <target state="translated">&lt;code&gt;i18n.transliterate.rule&lt;/code&gt; 的值可以是一个简单的&lt;a href=&quot;../hash&quot;&gt;Hash&lt;/a&gt;，可以将字符映射到ASCII近似值（如上所示），或者对于更复杂的要求，可以使用Proc：</target>
        </trans-unit>
        <trans-unit id="4529e2d3c40915fd4c9132c578e7597ed49f3db5" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;autoload_paths&lt;/code&gt; can be inspected. In a just-generated application it is (edited):</source>
          <target state="translated">可以检查 &lt;code&gt;autoload_paths&lt;/code&gt; 的值。在刚刚生成的应用程序中，它是（已编辑）：</target>
        </trans-unit>
        <trans-unit id="cd0a00e0a081899b611799d0f44fe6f9726d2a6e" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;params[:ids]&lt;/code&gt; will now be &lt;code&gt;[&quot;1&quot;, &quot;2&quot;, &quot;3&quot;]&lt;/code&gt;. Note that parameter values are always strings; Rails makes no attempt to guess or cast the type.</source>
          <target state="translated">现在 &lt;code&gt;params[:ids]&lt;/code&gt; 的值将为 &lt;code&gt;[&quot;1&quot;, &quot;2&quot;, &quot;3&quot;]&lt;/code&gt; 。请注意，参数值始终是字符串。Rails不会尝试猜测或强制转换类型。</target>
        </trans-unit>
        <trans-unit id="7ee55d30d007ee20fa020330bcd60d746465c7ba" translate="yes" xml:space="preserve">
          <source>The value will be assigned to instance variable &lt;code&gt;@options&lt;/code&gt;.</source>
          <target state="translated">该值将分配给实例变量 &lt;code&gt;@options&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="be17b91d3b4e674a03379a9cbc0828c572860985" translate="yes" xml:space="preserve">
          <source>The values are first processed by SHA256, so that we don't leak length info via timing attacks.</source>
          <target state="translated">首先对数值进行SHA256处理,这样我们就不会通过定时攻击泄露长度信息。</target>
        </trans-unit>
        <trans-unit id="f7668455a149f8036f8739030b9a40a0d03c8dfc" translate="yes" xml:space="preserve">
          <source>The values compared should be of fixed length, such as strings that have already been processed by HMAC. Raises in case of length mismatch.</source>
          <target state="translated">比较的值应该是固定长度的,比如已经被HMAC处理过的字符串。如果出现长度不匹配的情况,则发出警报。</target>
        </trans-unit>
        <trans-unit id="c3de7898cf5037e5a00562c2e793081732841dfe" translate="yes" xml:space="preserve">
          <source>The values of the hash here being the arguments or options passed to the specific git command. As per the final example shown here, multiple git commands can be specified at a time, but the order of their running is not guaranteed to be the same as the order that they were specified in.</source>
          <target state="translated">这里的哈希值是传递给特定git命令的参数或选项。按照最后一个例子,可以同时指定多个git命令,但不能保证它们的运行顺序与指定的顺序相同。</target>
        </trans-unit>
        <trans-unit id="7922ad0c81f69985a50e0d574592935e9fe97a2f" translate="yes" xml:space="preserve">
          <source>The variable &lt;code&gt;f&lt;/code&gt; yielded to the block is a &lt;a href=&quot;formbuilder&quot;&gt;&lt;code&gt;FormBuilder&lt;/code&gt;&lt;/a&gt; object that incorporates the knowledge about the model object represented by &lt;code&gt;:person&lt;/code&gt; passed to &lt;code&gt;form_for&lt;/code&gt;. Methods defined on the &lt;a href=&quot;formbuilder&quot;&gt;&lt;code&gt;FormBuilder&lt;/code&gt;&lt;/a&gt; are used to generate fields bound to this model. Thus, for example,</source>
          <target state="translated">产生给该块的变量 &lt;code&gt;f&lt;/code&gt; 是一个&lt;a href=&quot;formbuilder&quot;&gt; &lt;code&gt;FormBuilder&lt;/code&gt; &lt;/a&gt;对象，该对象包含有关传递给 &lt;code&gt;form_for&lt;/code&gt; 的 &lt;code&gt;:person&lt;/code&gt; 表示的模型对象的知识。在&lt;a href=&quot;formbuilder&quot;&gt; &lt;code&gt;FormBuilder&lt;/code&gt; &lt;/a&gt;上定义的方法用于生成绑定到此模型的字段。因此，例如</target>
        </trans-unit>
        <trans-unit id="51738102e906fea5a59e8e5aa4f95a26d7b4e6ee" translate="yes" xml:space="preserve">
          <source>The variable &lt;code&gt;f&lt;/code&gt; yielded to the block is a &lt;a href=&quot;formbuilder&quot;&gt;FormBuilder&lt;/a&gt; object that incorporates the knowledge about the model object represented by &lt;code&gt;:person&lt;/code&gt; passed to &lt;code&gt;form_for&lt;/code&gt;. Methods defined on the &lt;a href=&quot;formbuilder&quot;&gt;FormBuilder&lt;/a&gt; are used to generate fields bound to this model. Thus, for example,</source>
          <target state="translated">产生给该块的变量 &lt;code&gt;f&lt;/code&gt; 是一个&lt;a href=&quot;formbuilder&quot;&gt;FormBuilder&lt;/a&gt;对象，其中包含有关传递给 &lt;code&gt;form_for&lt;/code&gt; 的 &lt;code&gt;:person&lt;/code&gt; 表示的模型对象的知识。在&lt;a href=&quot;formbuilder&quot;&gt;FormBuilder&lt;/a&gt;上定义的方法用于生成绑定到此模型的字段。因此，例如</target>
        </trans-unit>
        <trans-unit id="c9a81f628645aa415b2032ec2f5f389b9a451d86" translate="yes" xml:space="preserve">
          <source>The variables inside the displayed list will be printed with their values after you move in the stack. To stop displaying a variable use &lt;code&gt;undisplay n&lt;/code&gt; where &lt;em&gt;n&lt;/em&gt; is the variable number (1 in the last example).</source>
          <target state="translated">在堆栈中移动后，将显示显示列表中的变量及其值。要停止显示变量，请取消 &lt;code&gt;undisplay n&lt;/code&gt; ，其中&lt;em&gt;n&lt;/em&gt;是变量号（在上一个示例中为1）。</target>
        </trans-unit>
        <trans-unit id="f2073f8b2673f5d9daba21618df8968535a36ee3" translate="yes" xml:space="preserve">
          <source>The various connection pools are managed by a single instance of &lt;a href=&quot;connectionhandler&quot;&gt;&lt;code&gt;ConnectionHandler&lt;/code&gt;&lt;/a&gt; accessible via &lt;a href=&quot;../core#method-c-connection_handler&quot;&gt;&lt;code&gt;ActiveRecord::Base.connection_handler&lt;/code&gt;&lt;/a&gt;. All Active Record models use this handler to determine the connection pool that they should use.</source>
          <target state="translated">各种连接池由&lt;a href=&quot;connectionhandler&quot;&gt; &lt;code&gt;ConnectionHandler&lt;/code&gt; &lt;/a&gt;的单个实例管理，可通过&lt;a href=&quot;../core#method-c-connection_handler&quot;&gt; &lt;code&gt;ActiveRecord::Base.connection_handler&lt;/code&gt; &lt;/a&gt;访问。所有Active Record模型都使用此处理程序来确定它们应使用的连接池。</target>
        </trans-unit>
        <trans-unit id="30e5bd030892b4a852e2c3cbc8b86634a728d26f" translate="yes" xml:space="preserve">
          <source>The various connection pools are managed by a single instance of &lt;a href=&quot;connectionhandler&quot;&gt;ConnectionHandler&lt;/a&gt; accessible via &lt;a href=&quot;../core#method-c-connection_handler&quot;&gt;ActiveRecord::Core.connection_handler&lt;/a&gt;. All Active Record models use this handler to determine the connection pool that they should use.</source>
          <target state="translated">各种连接池由&lt;a href=&quot;connectionhandler&quot;&gt;ConnectionHandler&lt;/a&gt;的单个实例管理，可通过&lt;a href=&quot;../core#method-c-connection_handler&quot;&gt;ActiveRecord :: Core.connection_handler&lt;/a&gt;访问。所有Active Record模型都使用此处理程序来确定它们应使用的连接池。</target>
        </trans-unit>
        <trans-unit id="c5f5cf73bffa3d14b9dcf19ce3a4d326d20b7af7" translate="yes" xml:space="preserve">
          <source>The verifier instance that all signed ids are generated and verified from. By default, it'll be initialized with the class-level &lt;code&gt;signed_id_verifier_secret&lt;/code&gt;, which within Rails comes from the &lt;a href=&quot;../../rails#method-c-application&quot;&gt;&lt;code&gt;Rails.application&lt;/code&gt;&lt;/a&gt;.key_generator. By default, it's SHA256 for the digest and JSON for the serialization.</source>
          <target state="translated">生成并签名的所有签名ID的验证程序实例。默认情况下，它将使用类级别的 &lt;code&gt;signed_id_verifier_secret&lt;/code&gt; 进行初始化，它在Rails中来自&lt;a href=&quot;../../rails#method-c-application&quot;&gt; &lt;code&gt;Rails.application&lt;/code&gt; &lt;/a&gt; .key_generator。默认情况下，摘要使用SHA256，序列化使用JSON。</target>
        </trans-unit>
        <trans-unit id="3ba65a91e27bd5bcb67a20448455ea6160bacbdd" translate="yes" xml:space="preserve">
          <source>The version column used for optimistic locking. Defaults to &lt;code&gt;lock_version&lt;/code&gt;.</source>
          <target state="translated">用于乐观锁定的版本列。默认为 &lt;code&gt;lock_version&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d0edb9fdea3de462fd0a58773839cce4a4acbae7" translate="yes" xml:space="preserve">
          <source>The version number in which the deprecated behavior will be removed, by default.</source>
          <target state="translated">默认情况下,删除被废弃行为的版本号。</target>
        </trans-unit>
        <trans-unit id="4fba4be43b3a2433eb37357ca2a053469838a20b" translate="yes" xml:space="preserve">
          <source>The version of your Node.js runtime should be printed out. Make sure it's greater than 8.16.0.</source>
          <target state="translated">你的Node.js运行时的版本应该被打印出来。确保它的版本大于8.16.0。</target>
        </trans-unit>
        <trans-unit id="9fdf6561d827cf69682ee0db6a81ad972d2a8482" translate="yes" xml:space="preserve">
          <source>The very first migration related rails command you will use will probably be &lt;code&gt;bin/rails db:migrate&lt;/code&gt;. In its most basic form it just runs the &lt;code&gt;change&lt;/code&gt; or &lt;code&gt;up&lt;/code&gt; method for all the migrations that have not yet been run. If there are no such migrations, it exits. It will run these migrations in order based on the date of the migration.</source>
          <target state="translated">您将使用的第一个与迁移相关的rails命令可能是 &lt;code&gt;bin/rails db:migrate&lt;/code&gt; 。它以其最基本的形式仅对尚未运行的所有迁移运行 &lt;code&gt;change&lt;/code&gt; 或 &lt;code&gt;up&lt;/code&gt; 方法。如果没有此类迁移，则退出。它将根据迁移日期按顺序运行这些迁移。</target>
        </trans-unit>
        <trans-unit id="ac0230161de62aae504a0f81a584296cdc0e8222" translate="yes" xml:space="preserve">
          <source>The very first migration related rails command you will use will probably be &lt;code&gt;rails db:migrate&lt;/code&gt;. In its most basic form it just runs the &lt;code&gt;change&lt;/code&gt; or &lt;code&gt;up&lt;/code&gt; method for all the migrations that have not yet been run. If there are no such migrations, it exits. It will run these migrations in order based on the date of the migration.</source>
          <target state="translated">您将使用的第一个与迁移相关的rails命令可能是 &lt;code&gt;rails db:migrate&lt;/code&gt; 。它以其最基本的形式仅对尚未运行的所有迁移运行 &lt;code&gt;change&lt;/code&gt; 或 &lt;code&gt;up&lt;/code&gt; 方法。如果没有此类迁移，则退出。它将根据迁移日期按顺序运行这些迁移。</target>
        </trans-unit>
        <trans-unit id="ac2a3b8ac588e6c7d35fe808ffcfdd151ce9cc02" translate="yes" xml:space="preserve">
          <source>The video tag also supports all of the &lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt; HTML options through the HTML options hash, including:</source>
          <target state="translated">video标签还通过HTML options哈希支持所有 &lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt; HTML选项，包括：</target>
        </trans-unit>
        <trans-unit id="119b909af465377a2dafbbc8a03ac551f389a7b4" translate="yes" xml:space="preserve">
          <source>The view class must have the following methods:</source>
          <target state="translated">视图类必须有以下方法。</target>
        </trans-unit>
        <trans-unit id="1d2a88b0bc833aa9900595087d57dd20bf6b3e79" translate="yes" xml:space="preserve">
          <source>The view will contain a form similar to the one we used when creating new articles. Create a file called &lt;code&gt;app/views/articles/edit.html.erb&lt;/code&gt; and make it look as follows:</source>
          <target state="translated">该视图将包含与我们创建新文章时使用的表单类似的表单。创建一个名为 &lt;code&gt;app/views/articles/edit.html.erb&lt;/code&gt; 的文件,并使其如下所示：</target>
        </trans-unit>
        <trans-unit id="6c158899320feee2e97c385d2ee14ec4ce40aa6d" translate="yes" xml:space="preserve">
          <source>The way it works is that, when the link is activated, it constructs a hidden form in the document with the &quot;action&quot; attribute corresponding to &quot;href&quot; value of the link, and the method corresponding to &lt;code&gt;data-method&lt;/code&gt; value, and submits that form.</source>
          <target state="translated">它的工作方式是：激活链接后，它会在文档中构造一个隐藏的表单，该表单具有与链接的&amp;ldquo; href&amp;rdquo;值相对应的&amp;ldquo; action&amp;rdquo;属性以及与 &lt;code&gt;data-method&lt;/code&gt; 值相对应的方法，然后提交该隐藏表单形成。</target>
        </trans-unit>
        <trans-unit id="1e18e70ccf9ed0f548a5db54192832822b7a0ad9" translate="yes" xml:space="preserve">
          <source>The way this is done is to add a non-guessable token which is only known to your server to each request. This way, if a request comes in without the proper token, it will be denied access.</source>
          <target state="translated">这样做的方法是在每个请求中添加一个不可猜测的标记,这个标记只有你的服务器知道。这样,如果一个请求没有合适的令牌,它将被拒绝访问。</target>
        </trans-unit>
        <trans-unit id="b7c78eda0eacbc05a4fde40017411e78c31cd0e1" translate="yes" xml:space="preserve">
          <source>The web application at &lt;code&gt;www.webapp.com&lt;/code&gt; verifies the user information in the corresponding session hash and destroys the project with the ID 1. It then returns a result page which is an unexpected result for the browser, so it will not display the image.</source>
          <target state="translated">&lt;code&gt;www.webapp.com&lt;/code&gt; 上的Web应用程序将验证相应会话哈希中的用户信息，并销毁ID为1的项目。然后，它返回结果页，该结果页对于浏览器而言是意外结果，因此将不显示图像。</target>
        </trans-unit>
        <trans-unit id="9f0bf503400b87f8f940d1752feec19d755672a8" translate="yes" xml:space="preserve">
          <source>The whole callback chain is wrapped in a transaction. If any callback raises an exception, the execution chain gets halted and a ROLLBACK is issued. To intentionally stop a chain use:</source>
          <target state="translated">整个回调链被包裹在一个事务中。如果任何回调引发异常,执行链就会停止,并发出ROLLBACK。要有意地停止一个链,可以使用:</target>
        </trans-unit>
        <trans-unit id="422946e01cb3a5446cf46834bea23043acb43072" translate="yes" xml:space="preserve">
          <source>The word will be pluralized using rules defined for the locale (you must define your own inflection rules for languages other than English). See &lt;a href=&quot;../../activesupport/inflector#method-i-pluralize&quot;&gt;&lt;code&gt;ActiveSupport::Inflector.pluralize&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">该单词将使用为区域设置定义的规则来复数（您必须为英语以外的其他语言定义自己的变形规则）。参见&lt;a href=&quot;../../activesupport/inflector#method-i-pluralize&quot;&gt; &lt;code&gt;ActiveSupport::Inflector.pluralize&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="304e04fad05e0c4f4a61a9fc6958560aa376e82f" translate="yes" xml:space="preserve">
          <source>The word will be pluralized using rules defined for the locale (you must define your own inflection rules for languages other than English). See &lt;a href=&quot;../../activesupport/inflector#method-i-pluralize&quot;&gt;ActiveSupport::Inflector#pluralize&lt;/a&gt;</source>
          <target state="translated">该单词将使用为区域设置定义的规则来复数（您必须为英语以外的其他语言定义自己的变形规则）。参见&lt;a href=&quot;../../activesupport/inflector#method-i-pluralize&quot;&gt;ActiveSupport :: Inflector＃pluralize&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8b90a1b189ff4eaf81ed82bbe6e50b03aaabd418" translate="yes" xml:space="preserve">
          <source>The worker pool is used to run connection callbacks and channel actions in isolation from the server's main thread. Action Cable allows the application to configure the number of simultaneously processed threads in the worker pool.</source>
          <target state="translated">工作池用于与服务器的主线程隔离运行连接回调和通道动作。动作缆允许应用程序配置工人池中同时处理的线程数量。</target>
        </trans-unit>
        <trans-unit id="5a227e6c2220ef5acd6b50d07b084d078961f053" translate="yes" xml:space="preserve">
          <source>The worker pool is where we run connection callbacks and channel actions. We do as little as possible on the server's main thread. The worker pool is an executor service that's backed by a pool of threads working from a task queue. The thread pool size maxes out at 4 worker threads by default. Tune the size yourself with &lt;code&gt;config.action_cable.worker_pool_size&lt;/code&gt;.</source>
          <target state="translated">工作池是我们运行连接回调和通道操作的地方。我们在服务器的主线程上做的越少越好。工作池是一个执行程序服务，由任务队列中工作的线程池支持。默认情况下，线程池大小最大为4个工作线程。使用 &lt;code&gt;config.action_cable.worker_pool_size&lt;/code&gt; 自己调整大小。</target>
        </trans-unit>
        <trans-unit id="4071a60de007bb344068973d53b28d0026839c89" translate="yes" xml:space="preserve">
          <source>The worms exploit a hole in Yahoo's HTML/JavaScript filter, which usually filters all targets and onload attributes from tags (because there can be JavaScript). The filter is applied only once, however, so the onload attribute with the worm code stays in place. This is a good example why restricted list filters are never complete and why it is hard to allow HTML/JavaScript in a web application.</source>
          <target state="translated">蠕虫利用了雅虎的HTML/JavaScript过滤器中的一个漏洞,该过滤器通常会过滤标签中的所有目标和onload属性(因为可能有JavaScript)。然而,该过滤器只应用一次,所以带有蠕虫代码的onload属性会留在原地。这就是一个很好的例子,为什么限制列表过滤器永远不完整,为什么很难在Web应用程序中允许HTML/JavaScript。</target>
        </trans-unit>
        <trans-unit id="381cfbd9c2dd9fecda0a80c5cba63a031cfacf42" translate="yes" xml:space="preserve">
          <source>Then &lt;code&gt;User.human_attribute_name(&quot;role.admin&quot;)&lt;/code&gt; will return &quot;Admin&quot;.</source>
          <target state="translated">然后， &lt;code&gt;User.human_attribute_name(&quot;role.admin&quot;)&lt;/code&gt; 将返回&amp;ldquo; Admin&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="69726d22ecf072f07dd132a5079e2db0487c5a16" translate="yes" xml:space="preserve">
          <source>Then &lt;code&gt;User.model_name.human(count: 2)&lt;/code&gt; will return &quot;Customers&quot;. With &lt;code&gt;count: 1&lt;/code&gt; or without params will return &quot;Customer&quot;.</source>
          <target state="translated">然后 &lt;code&gt;User.model_name.human(count: 2)&lt;/code&gt; 将返回&amp;ldquo;客户&amp;rdquo;。带 &lt;code&gt;count: 1&lt;/code&gt; 或不带参数将返回&amp;ldquo;客户&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="ce1ac48f704be117e0c440eeff8da490a84e2fdd" translate="yes" xml:space="preserve">
          <source>Then &lt;code&gt;User.model_name.human&lt;/code&gt; will return &quot;Customer&quot; and &lt;code&gt;User.human_attribute_name(&quot;login&quot;)&lt;/code&gt; will return &quot;Handle&quot;.</source>
          <target state="translated">然后， &lt;code&gt;User.model_name.human&lt;/code&gt; 将返回&amp;ldquo;客户&amp;rdquo;，而 &lt;code&gt;User.human_attribute_name(&quot;login&quot;)&lt;/code&gt; 将返回&amp;ldquo;句柄&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="a1dcc9b3170af9168677c16003802ad10b7a65fa" translate="yes" xml:space="preserve">
          <source>Then &lt;code&gt;parse_options&lt;/code&gt; is defined like this:</source>
          <target state="translated">然后， &lt;code&gt;parse_options&lt;/code&gt; 的定义如下：</target>
        </trans-unit>
        <trans-unit id="23a50ecef846d168f5924b2581ba4253e1d79ec9" translate="yes" xml:space="preserve">
          <source>Then Action View will look first in this directory when resolving views.</source>
          <target state="translated">那么Action View在解析视图的时候会先在这个目录下寻找。</target>
        </trans-unit>
        <trans-unit id="459d1a5ee37a5dfc347ac0b9db5a24592e3778ee" translate="yes" xml:space="preserve">
          <source>Then Active Record will look for messages in this order:</source>
          <target state="translated">然后Active Record会按照这个顺序寻找消息。</target>
        </trans-unit>
        <trans-unit id="3d4d27ddd244a8a4ebabec05bc03c56676658e3a" translate="yes" xml:space="preserve">
          <source>Then any written signed cookies will be digested with SHA256. Old cookies that were written with SHA1 can still be read, and if accessed will be written with the new digest so they're upgraded and won't be invalid when you remove the rotation.</source>
          <target state="translated">那么任何写好的签名cookie都会用SHA256消化。用SHA1写的旧Cookie仍然可以被读取,如果访问会用新的摘要来写,这样它们就升级了,不会在你删除轮换时失效。</target>
        </trans-unit>
        <trans-unit id="85e3645699a57b500a4fac14d2ba27a49c74a6f7" translate="yes" xml:space="preserve">
          <source>Then define a list of methods that you want callbacks attached to:</source>
          <target state="translated">然后定义一个你想要回调的方法列表。</target>
        </trans-unit>
        <trans-unit id="4f510685cd652852a1e3efa690ea6956f7bcdfdb" translate="yes" xml:space="preserve">
          <source>Then do the same for the &lt;code&gt;app/views/articles/edit.html.erb&lt;/code&gt; view:</source>
          <target state="translated">然后对 &lt;code&gt;app/views/articles/edit.html.erb&lt;/code&gt; 视图执行相同的操作：</target>
        </trans-unit>
        <trans-unit id="35dfdb159823060f46838dd038413c533e538e9c" translate="yes" xml:space="preserve">
          <source>Then ensure that this file is loaded at the top of your &lt;code&gt;config/application.rb&lt;/code&gt; (or in your &lt;code&gt;Gemfile&lt;/code&gt;) and it will automatically load models, controllers and helpers inside &lt;code&gt;app&lt;/code&gt;, load routes at &lt;code&gt;config/routes.rb&lt;/code&gt;, load locales at &lt;code&gt;config/locales/*&lt;/code&gt;, and load tasks at &lt;code&gt;lib/tasks/*&lt;/code&gt;.</source>
          <target state="translated">然后，确保该文件是在你的顶部加载 &lt;code&gt;config/application.rb&lt;/code&gt; （或在您 &lt;code&gt;Gemfile&lt;/code&gt; ），它会自动加载模型，控制器和内部助手 &lt;code&gt;app&lt;/code&gt; 的，负载的路由 &lt;code&gt;config/routes.rb&lt;/code&gt; ，负载区域设置在 &lt;code&gt;config/locales/*&lt;/code&gt; ，并在 &lt;code&gt;lib/tasks/*&lt;/code&gt; 加载任务。</target>
        </trans-unit>
        <trans-unit id="ce0a816131af5b4f10ba7dd68f10732047901d7d" translate="yes" xml:space="preserve">
          <source>Then gradually rotate the old values out by adding them as fallbacks. Any message generated with the old values will then work until the rotation is removed.</source>
          <target state="translated">然后通过添加旧值作为后备值,逐渐将其旋转出来。任何用旧值生成的消息都将发挥作用,直到旋转被移除。</target>
        </trans-unit>
        <trans-unit id="c25ba8a4f5f2e80428305d964bd1bf9df12698c9" translate="yes" xml:space="preserve">
          <source>Then in the view any form using &lt;code&gt;form_for&lt;/code&gt; will be an instance of the specified form builder:</source>
          <target state="translated">然后，在视图中，任何使用 &lt;code&gt;form_for&lt;/code&gt; 的表单都将是指定表单构建器的实例：</target>
        </trans-unit>
        <trans-unit id="ef7bc07bcc95fd9eba906b05a01efc5367db71e6" translate="yes" xml:space="preserve">
          <source>Then in the view, you can call it like any class method:</source>
          <target state="translated">然后在视图中,你可以像任何类方法一样调用它。</target>
        </trans-unit>
        <trans-unit id="e1a2120982b7267dfa978e50b64a59538c9064c3" translate="yes" xml:space="preserve">
          <source>Then in your class, you can use the &lt;code&gt;before_create&lt;/code&gt;, &lt;code&gt;after_create&lt;/code&gt; and &lt;code&gt;around_create&lt;/code&gt; methods, just as you would in an Active Record model.</source>
          <target state="translated">然后在你的类，你可以使用 &lt;code&gt;before_create&lt;/code&gt; ， &lt;code&gt;after_create&lt;/code&gt; 和 &lt;code&gt;around_create&lt;/code&gt; 方法，就像你在一个活动记录模式。</target>
        </trans-unit>
        <trans-unit id="aebe8891b52bd362b7f19f07d1a47dc194ca8c95" translate="yes" xml:space="preserve">
          <source>Then in your view, you can just reference &lt;code&gt;attachments&lt;/code&gt; as a hash and specify which attachment you want to show, calling &lt;code&gt;url&lt;/code&gt; on it and then passing the result into the &lt;code&gt;image_tag&lt;/code&gt; method:</source>
          <target state="translated">然后，在您的视图中，您可以将 &lt;code&gt;attachments&lt;/code&gt; 作为哈希引用，并指定要显示的附件，在其上调用 &lt;code&gt;url&lt;/code&gt; ，然后将结果传递给 &lt;code&gt;image_tag&lt;/code&gt; 方法：</target>
        </trans-unit>
        <trans-unit id="237fe237773a0ec739fb4cc8e5c87bcf8fa12ec0" translate="yes" xml:space="preserve">
          <source>Then make sure that all your job classes inherit from it.</source>
          <target state="translated">然后确保你所有的工作类都能继承它。</target>
        </trans-unit>
        <trans-unit id="4d121a9048cc21ad12c6bc9dfcf50d1c0c7ed200" translate="yes" xml:space="preserve">
          <source>Then make sure that all your models inherit from it.</source>
          <target state="translated">然后确保你所有的模型都能继承它。</target>
        </trans-unit>
        <trans-unit id="5c028a05387b465e3194a93caa32b7f4e2825e9e" translate="yes" xml:space="preserve">
          <source>Then models can swap connections manually via the &lt;code&gt;connected_to&lt;/code&gt; API. If using sharding both a &lt;code&gt;role&lt;/code&gt; and &lt;code&gt;shard&lt;/code&gt; must be passed:</source>
          <target state="translated">然后，模型可以通过 &lt;code&gt;connected_to&lt;/code&gt; API手动交换连接。如果使用分片既有 &lt;code&gt;role&lt;/code&gt; 和 &lt;code&gt;shard&lt;/code&gt; 必须通过：</target>
        </trans-unit>
        <trans-unit id="e9c05622c9e2375d881f99cefdba0de66f0a8aab" translate="yes" xml:space="preserve">
          <source>Then new join models are automatically created for the newly associated objects. If some that existed previously are now missing, then their join rows are automatically deleted.</source>
          <target state="translated">然后为新关联的对象自动创建新的连接模型。如果之前存在的一些对象现在不见了,那么它们的连接行就会被自动删除。</target>
        </trans-unit>
        <trans-unit id="8bb78d3088ec4a03fb4ba35f504b631634a22413" translate="yes" xml:space="preserve">
          <source>Then refer to this field in the form for the model:</source>
          <target state="translated">然后在表格中参考这个字段来做模型。</target>
        </trans-unit>
        <trans-unit id="01700a39e23b7ab78877badc25228c5133bf399d" translate="yes" xml:space="preserve">
          <source>Then run &lt;code&gt;bundle&lt;/code&gt; to install the gem.</source>
          <target state="translated">然后运行 &lt;code&gt;bundle&lt;/code&gt; 安装gem。</target>
        </trans-unit>
        <trans-unit id="3c797d8f24c8628794ae46f0798a2a8a395d237f" translate="yes" xml:space="preserve">
          <source>Then set up a mailbox:</source>
          <target state="translated">然后设置一个邮箱。</target>
        </trans-unit>
        <trans-unit id="b23cf8584845218e3a92147b3fe0ba5780c2bf36" translate="yes" xml:space="preserve">
          <source>Then that same purpose must be passed when verifying to get the data back out:</source>
          <target state="translated">那么在验证的时候也必须通过同样的目的,才能把数据拿回来。</target>
        </trans-unit>
        <trans-unit id="32681196fa4394258a9f0ddbaa6841d13623c56b" translate="yes" xml:space="preserve">
          <source>Then the &lt;code&gt;click_on &quot;New Article&quot;&lt;/code&gt; will find the &quot;New Article&quot; button on the index page. This will redirect the browser to &lt;code&gt;/articles/new&lt;/code&gt;.</source>
          <target state="translated">然后， &lt;code&gt;click_on &quot;New Article&quot;&lt;/code&gt; 将在索引页面上找到&amp;ldquo;新文章&amp;rdquo;按钮。这会将浏览器重定向到 &lt;code&gt;/articles/new&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c3adef20432b6b66fe2ce80984aa12cb32aa026a" translate="yes" xml:space="preserve">
          <source>Then the fun begins!</source>
          <target state="translated">然后,有趣的事情就开始了!</target>
        </trans-unit>
        <trans-unit id="62bc07d8aa975b0496a50ba872658d371c63aa06" translate="yes" xml:space="preserve">
          <source>Then the messages can be verified and returned up to the expire time. Thereafter, the &lt;code&gt;verified&lt;/code&gt; method returns &lt;code&gt;nil&lt;/code&gt; while &lt;code&gt;verify&lt;/code&gt; raises &lt;code&gt;ActiveSupport::MessageVerifier::InvalidSignature&lt;/code&gt;.</source>
          <target state="translated">然后可以验证消息并返回到到期时间。此后， &lt;code&gt;verified&lt;/code&gt; 方法返回 &lt;code&gt;nil&lt;/code&gt; ,而 &lt;code&gt;verify&lt;/code&gt; 引发 &lt;code&gt;ActiveSupport::MessageVerifier::InvalidSignature&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="13f7c19977b2cebec1e9a82e2e3042c127ffb695" translate="yes" xml:space="preserve">
          <source>Then the messages can be verified and returned up to the expire time. Thereafter, verifying returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">然后可以验证消息并返回到到期时间。此后，验证返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="37db38f09873e69b0d0d19b6cd96ccbb3c4b339b" translate="yes" xml:space="preserve">
          <source>Then the preview will be available in http://localhost:3000/rails/mailers/user_mailer/welcome_email.</source>
          <target state="translated">然后在http://localhost:3000/rails/mailers/user_mailer/welcome_email,就可以预览了。</target>
        </trans-unit>
        <trans-unit id="369ed4a7ad9c26f1140c7972a5560f133f03519c" translate="yes" xml:space="preserve">
          <source>Then the returned token is &lt;code&gt;&quot;abc&quot;&lt;/code&gt;, and the options are &lt;code&gt;{nonce: &quot;def&quot;}&lt;/code&gt;</source>
          <target state="translated">然后返回的令牌为 &lt;code&gt;&quot;abc&quot;&lt;/code&gt; ，选项为 &lt;code&gt;{nonce: &quot;def&quot;}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="366a0275143580828d7dd35a9ff6892eaaf5f9a4" translate="yes" xml:space="preserve">
          <source>Then the test will fill in the title and body of the article with the specified text. Once the fields are filled in, &quot;Create Article&quot; is clicked on which will send a POST request to create the new article in the database.</source>
          <target state="translated">然后测试会用指定的文字填写文章的标题和正文。字段填写完毕后,点击 &quot;创建文章&quot;,将发送一个POST请求,在数据库中创建新的文章。</target>
        </trans-unit>
        <trans-unit id="10a63abca550fb5d05522c45d27747f0e9db193b" translate="yes" xml:space="preserve">
          <source>Then the view, to display our message (in &lt;code&gt;app/views/greetings/hello.html.erb&lt;/code&gt;):</source>
          <target state="translated">然后是视图，以显示我们的消息（在 &lt;code&gt;app/views/greetings/hello.html.erb&lt;/code&gt; 中）：</target>
        </trans-unit>
        <trans-unit id="ddfd5408dd5dd26d25099c7e83d85cdbe7fac7a2" translate="yes" xml:space="preserve">
          <source>Then we need to update &lt;code&gt;ApplicationRecord&lt;/code&gt; to be aware of our new replica.</source>
          <target state="translated">然后，我们需要更新 &lt;code&gt;ApplicationRecord&lt;/code&gt; 以了解我们的新副本。</target>
        </trans-unit>
        <trans-unit id="098660123aac14d41b15d67b877d80ee14982a13" translate="yes" xml:space="preserve">
          <source>Then you can add an automatic nonce value by passing &lt;code&gt;nonce: true&lt;/code&gt; as part of &lt;code&gt;html_options&lt;/code&gt;. Example:</source>
          <target state="translated">然后，您可以通过将 &lt;code&gt;nonce: true&lt;/code&gt; 作为 &lt;code&gt;html_options&lt;/code&gt; 的一部分传递来添加自动的nonce值。例：</target>
        </trans-unit>
        <trans-unit id="0d37c70958344a9839a6342d4c9fc86d22db17b4" translate="yes" xml:space="preserve">
          <source>Then you can change &lt;code&gt;app/views/articles/show.html.erb&lt;/code&gt; to look like the following:</source>
          <target state="translated">然后，您可以将 &lt;code&gt;app/views/articles/show.html.erb&lt;/code&gt; 更改为如下所示：</target>
        </trans-unit>
        <trans-unit id="1f03061ab10bf02c25498814f574e5e40f393c87" translate="yes" xml:space="preserve">
          <source>Then you could create special views like &lt;code&gt;app/views/articles/show.expert.html.erb&lt;/code&gt; that would only be displayed to expert users.</source>
          <target state="translated">然后，您可以创建仅显示给专家用户的特殊视图，例如 &lt;code&gt;app/views/articles/show.expert.html.erb&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="496beabd3e4e458cf277bd0998b3a81e387ea7cd" translate="yes" xml:space="preserve">
          <source>Then you could do:</source>
          <target state="translated">那么你可以做。</target>
        </trans-unit>
        <trans-unit id="9063c5f74d1b74e7ea62cc04b8a5984d7224827c" translate="yes" xml:space="preserve">
          <source>Then you make the &lt;code&gt;app/views/articles/show.html.erb&lt;/code&gt; look like the following:</source>
          <target state="translated">然后，使 &lt;code&gt;app/views/articles/show.html.erb&lt;/code&gt; 如下所示：</target>
        </trans-unit>
        <trans-unit id="0ca1e0676acb4662d0e6ee4f9143d236d7763d5d" translate="yes" xml:space="preserve">
          <source>Then you start the server using a binstub in &lt;code&gt;bin/cable&lt;/code&gt; ala:</source>
          <target state="translated">然后，使用 &lt;code&gt;bin/cable&lt;/code&gt; ala中的binstub启动服务器：</target>
        </trans-unit>
        <trans-unit id="87783a1bba48c17b1a2f3223b471f53bb6f44608" translate="yes" xml:space="preserve">
          <source>Then you would create your own channel classes. For example, you could have a &lt;code&gt;ChatChannel&lt;/code&gt; and an &lt;code&gt;AppearanceChannel&lt;/code&gt;:</source>
          <target state="translated">然后，您将创建自己的频道类。例如，您可能有一个 &lt;code&gt;ChatChannel&lt;/code&gt; 和 &lt;code&gt;AppearanceChannel&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="5b8b29d981a70edce615391b418603f900f0fc23" translate="yes" xml:space="preserve">
          <source>Then your library can be eager loaded by simply calling:</source>
          <target state="translated">然后你的库可以通过简单的调用来急切地加载。</target>
        </trans-unit>
        <trans-unit id="9c669580c7cd4aecaf4436886d6487f9c2355d6f" translate="yes" xml:space="preserve">
          <source>Then, elsewhere in your Rails application, you can broadcast to such a room by calling &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionCable/Server/Broadcasting.html#method-i-broadcast&quot;&gt;&lt;code&gt;broadcast&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">然后，在Rails应用程序的其他位置，您可以通过调用&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionCable/Server/Broadcasting.html#method-i-broadcast&quot;&gt; &lt;code&gt;broadcast&lt;/code&gt; &lt;/a&gt;广播到这样的房间：</target>
        </trans-unit>
        <trans-unit id="e48472de2f53d5ecda6546f6dd9503f542948c68" translate="yes" xml:space="preserve">
          <source>Then, if you want webrat to be invoked, just supply:</source>
          <target state="translated">然后,如果你想让webrat被调用,只要提供。</target>
        </trans-unit>
        <trans-unit id="70a620085ffad4cda58d1cc705b7621b4c3d6b03" translate="yes" xml:space="preserve">
          <source>Then, in another template or layout, this code would render both links in order:</source>
          <target state="translated">然后,在另一个模板或布局中,这段代码将按顺序呈现两个链接。</target>
        </trans-unit>
        <trans-unit id="1ee33242fa8dc35c52b38b93dd261d062e831523" translate="yes" xml:space="preserve">
          <source>Then, in another template or layout, this code would render only the last link:</source>
          <target state="translated">然后,在另一个模板或布局中,这段代码将只呈现最后一个链接。</target>
        </trans-unit>
        <trans-unit id="c02759babbfbed3b2ce9248b83250e3d9c6e304d" translate="yes" xml:space="preserve">
          <source>Then, in another view, you could to do something like this:</source>
          <target state="translated">然后,在另一个角度,你可以做这样的事情。</target>
        </trans-unit>
        <trans-unit id="2428dd5467214a1330f0142642a33f223e8adb27" translate="yes" xml:space="preserve">
          <source>Then, in any view rendered by &lt;code&gt;EventsController&lt;/code&gt;, the &lt;code&gt;format_time&lt;/code&gt; method can be called:</source>
          <target state="translated">然后，在 &lt;code&gt;EventsController&lt;/code&gt; 呈现的任何视图中，可以调用 &lt;code&gt;format_time&lt;/code&gt; 方法：</target>
        </trans-unit>
        <trans-unit id="c65e9c4deed32989d4d5a92327af12701fec9bd3" translate="yes" xml:space="preserve">
          <source>Then, in our &lt;code&gt;index&lt;/code&gt; action template (&lt;code&gt;app/views/articles/index.html.erb&lt;/code&gt;) we would use the &lt;code&gt;archived?&lt;/code&gt; method to avoid displaying any article that is archived:</source>
          <target state="translated">然后，在我们的 &lt;code&gt;index&lt;/code&gt; 操作模板（ &lt;code&gt;app/views/articles/index.html.erb&lt;/code&gt; ）中，我们将使用 &lt;code&gt;archived?&lt;/code&gt; 避免显示任何已归档文章的方法：</target>
        </trans-unit>
        <trans-unit id="6ab1405302d62c1ecddf63d2dc2d85296feb34ca" translate="yes" xml:space="preserve">
          <source>Then, in your application's configuration, you can specify the service to use like this:</source>
          <target state="translated">然后,在你的应用程序的配置中,你可以像这样指定要使用的服务。</target>
        </trans-unit>
        <trans-unit id="57185357f15f4a8fb2cd8be83b26417c031c473e" translate="yes" xml:space="preserve">
          <source>Then, one asserts whether the current state is as expected. &amp;ldquo;State&amp;rdquo; can be anything: the controller's HTTP response, the database contents, etc.</source>
          <target state="translated">然后，断言当前状态是否符合预期。&amp;ldquo;状态&amp;rdquo;可以是任何内容：控制器的HTTP响应，数据库内容等。</target>
        </trans-unit>
        <trans-unit id="482ca65ca763b7b0baddca14580910c2d6413532" translate="yes" xml:space="preserve">
          <source>Then, one asserts whether the current state is as expected. &amp;ldquo;State&amp;rdquo; can be anything: transmitted messages, subscribed streams, etc.</source>
          <target state="translated">然后，断言当前状态是否符合预期。&amp;ldquo;状态&amp;rdquo;可以是任何内容：传输的消息，订阅的流等。</target>
        </trans-unit>
        <trans-unit id="031870965fb348d4c11e251e9555a1156c075b8c" translate="yes" xml:space="preserve">
          <source>There also may be a case where you have a database that you don't always want to connect to on application boot but may need for a slow query or analytics. After defining that database in the &lt;code&gt;database.yml&lt;/code&gt; you can connect by passing a database argument to &lt;code&gt;connected_to&lt;/code&gt;</source>
          <target state="translated">在某些情况下，您可能并不总是希望在应用程序启动时连接到数据库，但可能需要进行缓慢的查询或分析。在定义该数据库后 &lt;code&gt;database.yml&lt;/code&gt; 你可以通过数据库参数连接 &lt;code&gt;connected_to&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3bb2b87b49ad713bc9166e86cd1da2325e0969a0" translate="yes" xml:space="preserve">
          <source>There are &lt;code&gt;public&lt;/code&gt;, &lt;code&gt;private&lt;/code&gt; and &lt;code&gt;protected&lt;/code&gt; methods in Ruby, but only &lt;code&gt;public&lt;/code&gt; methods can be actions for controllers. For more details check out &lt;a href=&quot;http://www.ruby-doc.org/docs/ProgrammingRuby/&quot;&gt;Programming Ruby&lt;/a&gt;.</source>
          <target state="translated">Ruby中有 &lt;code&gt;public&lt;/code&gt; ， &lt;code&gt;private&lt;/code&gt; 和 &lt;code&gt;protected&lt;/code&gt; 方法，但是只有 &lt;code&gt;public&lt;/code&gt; 方法才可以成为控制器的操作。有关更多详细信息，请查看&lt;a href=&quot;http://www.ruby-doc.org/docs/ProgrammingRuby/&quot;&gt;Ruby编程&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="19b00caa5f3ff7b3b669683c7dea0b0d4f09835e" translate="yes" xml:space="preserve">
          <source>There are Valgrind tools that can automatically detect many memory management and threading bugs, and profile your programs in detail. For example, if a C extension in the interpreter calls &lt;code&gt;malloc()&lt;/code&gt; but doesn't properly call &lt;code&gt;free()&lt;/code&gt;, this memory won't be available until the app terminates.</source>
          <target state="translated">有Valgrind工具可以自动检测许多内存管理和线程错误，并详细描述程序。例如，如果解释器中的C扩展调用 &lt;code&gt;malloc()&lt;/code&gt; 但未正确调用 &lt;code&gt;free()&lt;/code&gt; ，则在应用终止之前，该内存将不可用。</target>
        </trans-unit>
        <trans-unit id="9b00b3df83e32e888bc604425fec394ee693ccd7" translate="yes" xml:space="preserve">
          <source>There are a couple of new configuration settings that you should add to your development environment:</source>
          <target state="translated">有几个新的配置设置,你应该添加到你的开发环境中。</target>
        </trans-unit>
        <trans-unit id="164be5c17020dc109dc9be858a8e3b603db5fe38" translate="yes" xml:space="preserve">
          <source>There are a couple of things to notice in the above example. We need to make sure to close the response stream. Forgetting to close the stream will leave the socket open forever. We also have to set the content type to &lt;code&gt;text/event-stream&lt;/code&gt; before we write to the response stream. This is because headers cannot be written after the response has been committed (when &lt;code&gt;response.committed?&lt;/code&gt; returns a truthy value), which occurs when you &lt;code&gt;write&lt;/code&gt; or &lt;code&gt;commit&lt;/code&gt; the response stream.</source>
          <target state="translated">上面的示例中有两点需要注意。我们需要确保关闭响应流。忘记关闭流将使套接字永远打开。在写入响应流之前，我们还必须将内容类型设置为 &lt;code&gt;text/event-stream&lt;/code&gt; stream。这是因为在提交 &lt;code&gt;response.committed?&lt;/code&gt; （当response.committed？返回真实值）后无法写入标头，这是在 &lt;code&gt;write&lt;/code&gt; 或 &lt;code&gt;commit&lt;/code&gt; 响应流时发生的。</target>
        </trans-unit>
        <trans-unit id="0c768baf5fd448c75d1de2436abdaa5e34da7465" translate="yes" xml:space="preserve">
          <source>There are a few caveats with this module. You &lt;strong&gt;cannot&lt;/strong&gt; write headers after the response has been committed (Response#committed? will return truthy). Calling &lt;code&gt;write&lt;/code&gt; or &lt;code&gt;close&lt;/code&gt; on the response stream will cause the response object to be committed. Make sure all headers are set before calling write or close on your stream.</source>
          <target state="translated">此模块有一些警告。提交响应后，您&lt;strong&gt;将无法&lt;/strong&gt;编写标头（Response＃committed？将返回true）。在响应流上调用 &lt;code&gt;write&lt;/code&gt; 或 &lt;code&gt;close&lt;/code&gt; 将导致响应对象被提交。在流上调用write或close之前，请确保已设置所有标头。</target>
        </trans-unit>
        <trans-unit id="4bad24b22c7cae4c6a61de5d3108af1db11f82d6" translate="yes" xml:space="preserve">
          <source>There are a few commands that are absolutely critical to your everyday usage of Rails. In the order of how much you'll probably use them are:</source>
          <target state="translated">有几个命令对你日常使用Rails是绝对重要的。按照你可能会用到的程度,它们的顺序是。</target>
        </trans-unit>
        <trans-unit id="e56663a6abdb097299bc4197150b89e3d7d69945" translate="yes" xml:space="preserve">
          <source>There are a few configuration options available in Active Support:</source>
          <target state="translated">在Active Support中有一些配置选项。</target>
        </trans-unit>
        <trans-unit id="e637e4147c84d8dceeb2b213377ec66714ac9891" translate="yes" xml:space="preserve">
          <source>There are a few major changes related to JSON handling in Rails 4.1.</source>
          <target state="translated">在Rails 4.1中,有一些与JSON处理有关的重大变化。</target>
        </trans-unit>
        <trans-unit id="aec8cfbde75f8f1d463fce1d466fe8064fa5e4a5" translate="yes" xml:space="preserve">
          <source>There are a few more steps to be carried out before our application works with the addition of &lt;code&gt;status&lt;/code&gt; column. First, let's run the following migrations to add &lt;code&gt;status&lt;/code&gt; to &lt;code&gt;Articles&lt;/code&gt; and &lt;code&gt;Comments&lt;/code&gt;:</source>
          <target state="translated">在添加 &lt;code&gt;status&lt;/code&gt; 栏之前，我们的应用程序还需要执行一些其他步骤。首先，让我们运行以下迁移以将 &lt;code&gt;status&lt;/code&gt; 添加到&amp;ldquo; &lt;code&gt;Articles&lt;/code&gt; 和 &lt;code&gt;Comments&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="c564b1ac7e5320df2899d4761623e9c54d1bfc41" translate="yes" xml:space="preserve">
          <source>There are a few special &lt;code&gt;html_options&lt;/code&gt;:</source>
          <target state="translated">有一些特殊的 &lt;code&gt;html_options&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="09097833af7a7785ff0289cc3e4cd9f30ec67ede" translate="yes" xml:space="preserve">
          <source>There are a few steps to get up and running with I18n support for a Rails application.</source>
          <target state="translated">有几个步骤可以让Rails应用程序支持I18n并开始运行。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
