<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="rails">
    <body>
      <group id="rails">
        <trans-unit id="ec0f10698082c93db66cc3bacc7c4262043d5c37" translate="yes" xml:space="preserve">
          <source>Monitor</source>
          <target state="translated">Monitor</target>
        </trans-unit>
        <trans-unit id="541d63743d11a8fb491dae7ec4b904d23e530d3d" translate="yes" xml:space="preserve">
          <source>More Complete Examples</source>
          <target state="translated">更完整的例子</target>
        </trans-unit>
        <trans-unit id="ba11e265967ffc1fc5eb1bfd1733a7bc95484fe4" translate="yes" xml:space="preserve">
          <source>More Differences</source>
          <target state="translated">更多差异</target>
        </trans-unit>
        <trans-unit id="ba917a0f4aba99c86e775d91895afeb4b93ff99a" translate="yes" xml:space="preserve">
          <source>More advanced use of the command line is focused around finding useful (even surprising at times) options in the utilities, and fitting those to your needs and specific work flow. Listed here are some tricks up Rails' sleeve.</source>
          <target state="translated">更高级的命令行使用集中于在实用程序中找到有用的(有时甚至是令人惊讶的)选项,并将这些选项适合你的需求和特定的工作流程。以下是Rails的一些技巧。</target>
        </trans-unit>
        <trans-unit id="383f0e0e882a4dc2683b66372e6aa52e3a75f04b" translate="yes" xml:space="preserve">
          <source>More examples</source>
          <target state="translated">更多例子</target>
        </trans-unit>
        <trans-unit id="80a6b992b86c1ba7e1983d83fe134aaae1109b0e" translate="yes" xml:space="preserve">
          <source>More information about migrations can be found in the &lt;a href=&quot;active_record_migrations&quot;&gt;Migrations&lt;/a&gt; guide.</source>
          <target state="translated">有关迁移的更多信息，请参见《&lt;a href=&quot;active_record_migrations&quot;&gt;迁移&lt;/a&gt;指南》。</target>
        </trans-unit>
        <trans-unit id="3ed35b03edc8d1bfacf529e6c1db32d37eb5e37f" translate="yes" xml:space="preserve">
          <source>More information can be found in &lt;a href=&quot;core/classmethods#method-i-set&quot;&gt;&lt;code&gt;ActiveJob::Core::ClassMethods#set&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">可以在&lt;a href=&quot;core/classmethods#method-i-set&quot;&gt; &lt;code&gt;ActiveJob::Core::ClassMethods#set&lt;/code&gt; &lt;/a&gt;找到更多信息。</target>
        </trans-unit>
        <trans-unit id="b6053fd77164aa71fabc62e1525d3a4af41ecd65" translate="yes" xml:space="preserve">
          <source>More information can be found in &lt;a href=&quot;core/classmethods#method-i-set&quot;&gt;ActiveJob::Core::ClassMethods#set&lt;/a&gt;</source>
          <target state="translated">可以在&lt;a href=&quot;core/classmethods#method-i-set&quot;&gt;ActiveJob :: Core :: ClassMethods＃set中&lt;/a&gt;找到更多信息。</target>
        </trans-unit>
        <trans-unit id="1a85b705b6839888932e068d061c266aa144e7aa" translate="yes" xml:space="preserve">
          <source>More precisely, if the web server is running and application files have been modified, Rails unloads all autoloaded constants just before the next request is processed. That way, application classes or modules used during that request are going to be autoloaded, thus picking up their current implementation in the file system.</source>
          <target state="translated">更准确地说,如果Web服务器正在运行,并且应用程序文件已经被修改,Rails会在处理下一个请求之前卸载所有自动加载的常量。这样一来,在该请求中使用的应用类或模块就会被自动加载,从而在文件系统中获取它们当前的实现。</target>
        </trans-unit>
        <trans-unit id="3a7a86c3c7bb6f061ed4b7dd4612a07ea2e55494" translate="yes" xml:space="preserve">
          <source>More reading:</source>
          <target state="translated">更多的阅读。</target>
        </trans-unit>
        <trans-unit id="1bc0107abee30f824ef23a770858703e03f38a74" translate="yes" xml:space="preserve">
          <source>Moreover, &lt;code&gt;Kernel#require&lt;/code&gt; loads files once, but development is much more smooth if code gets refreshed when it changes without restarting the server. It would be nice to be able to use &lt;code&gt;Kernel#load&lt;/code&gt; in development, and &lt;code&gt;Kernel#require&lt;/code&gt; in production.</source>
          <target state="translated">而且， &lt;code&gt;Kernel#require&lt;/code&gt; 一次加载文件，但是如果更改代码而无需重新启动服务器就可以刷新代码，则开发会更加顺畅。能够在开发中使用 &lt;code&gt;Kernel#load&lt;/code&gt; ，在生产中使用 &lt;code&gt;Kernel#require&lt;/code&gt; 会很好。</target>
        </trans-unit>
        <trans-unit id="d327e6ec6a6af69476c66c4050cf30edbe14a000" translate="yes" xml:space="preserve">
          <source>Moreover, it gracefully handles module dependencies. Given a &lt;code&gt;Foo&lt;/code&gt; module and a &lt;code&gt;Bar&lt;/code&gt; module which depends on the former, we would typically write the following:</source>
          <target state="translated">而且，它可以优雅地处理模块依赖性。给定一个依赖于前者的 &lt;code&gt;Foo&lt;/code&gt; 模块和 &lt;code&gt;Bar&lt;/code&gt; 模块，我们通常将编写以下内容：</target>
        </trans-unit>
        <trans-unit id="1336dbab8404ab8354f8b7e595d9f9da94e52e6a" translate="yes" xml:space="preserve">
          <source>Moreover, since the test class extends from &lt;code&gt;ActionView::TestCase&lt;/code&gt;, you have access to Rails' helper methods such as &lt;code&gt;link_to&lt;/code&gt; or &lt;code&gt;pluralize&lt;/code&gt;.</source>
          <target state="translated">此外，由于测试类是从 &lt;code&gt;ActionView::TestCase&lt;/code&gt; 扩展而来的，因此您可以访问Rails的帮助器方法，例如 &lt;code&gt;link_to&lt;/code&gt; 或 &lt;code&gt;pluralize&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="88b40b9cf93fa0667fdbc7fa5d068e722af43930" translate="yes" xml:space="preserve">
          <source>Most CDNs will cache contents of an asset based on the complete URL. This means that a request to</source>
          <target state="translated">大多数CDN会根据完整的URL来缓存资产的内容。这意味着,一个对</target>
        </trans-unit>
        <trans-unit id="f008a7d63f26d69778b0b37e05dd3fcfe81eed47" translate="yes" xml:space="preserve">
          <source>Most WYSIWYG editors are wrappers around HTML&amp;rsquo;s &lt;code&gt;contenteditable&lt;/code&gt; and &lt;code&gt;execCommand&lt;/code&gt; APIs, designed by Microsoft to support live editing of web pages in Internet Explorer 5.5, and &lt;a href=&quot;https://blog.whatwg.org/the-road-to-html-5-contenteditable#history&quot;&gt;eventually reverse-engineered&lt;/a&gt; and copied by other browsers.</source>
          <target state="translated">大多数WYSIWYG编辑器都是HTML的 &lt;code&gt;contenteditable&lt;/code&gt; 和 &lt;code&gt;execCommand&lt;/code&gt; API的包装，这些API由Microsoft设计，以支持Internet Explorer 5.5中的网页的实时编辑，并&lt;a href=&quot;https://blog.whatwg.org/the-road-to-html-5-contenteditable#history&quot;&gt;最终&lt;/a&gt;由其他浏览器进行反向工程和复制。</target>
        </trans-unit>
        <trans-unit id="ab978ad55eb3ed14757f1864bfc815a255aea29c" translate="yes" xml:space="preserve">
          <source>Most applications need to keep track of state for users that interact with the application. This could be the contents of a shopping basket, or the user id of the currently logged in user. This kind of user-specific state can be stored in the session.</source>
          <target state="translated">大多数应用程序都需要跟踪与应用程序交互的用户的状态,这可能是购物篮的内容,或当前登录用户的用户ID。这可能是购物篮的内容,或者是当前登录用户的用户ID。这种用户特定的状态可以存储在会话中。</target>
        </trans-unit>
        <trans-unit id="133d632a5c7bc56c3f2c19e3db9d200e367fc939" translate="yes" xml:space="preserve">
          <source>Most bots are really dumb. They crawl the web and put their spam into every form's field they can find. Negative CAPTCHAs take advantage of that and include a &quot;honeypot&quot; field in the form which will be hidden from the human user by CSS or JavaScript.</source>
          <target state="translated">大多数机器人真的很笨。它们会在网络上爬行,并把它们的垃圾邮件放到它们能找到的每一个表单的字段中。负面验证码利用了这一点,在表单中包含了一个 &quot;蜜罐 &quot;字段,它将通过CSS或JavaScript对人类用户进行隐藏。</target>
        </trans-unit>
        <trans-unit id="bf0776721a91b86a474e68e52f939aa617b046e9" translate="yes" xml:space="preserve">
          <source>Most commonly, the streamed broadcast is sent straight to the subscriber on the client-side. The channel just acts as a connector between the two parties (the broadcaster and the channel subscriber). Here's an example of a channel that allows subscribers to get all new comments on a given page:</source>
          <target state="translated">最常见的是,流媒体广播是直接发送到客户端的用户。频道只是作为双方(广播者和频道订阅者)之间的连接器。下面是一个频道的例子,它可以让订阅者获得某个页面上的所有新评论。</target>
        </trans-unit>
        <trans-unit id="6bc330b7ded91a1d90bd743f5169cca15ece50bb" translate="yes" xml:space="preserve">
          <source>Most databases don't support true nested transactions. At the time of writing, the only database that supports true nested transactions that we're aware of, is MS-SQL.</source>
          <target state="translated">大多数数据库不支持真正的嵌套事务。在写这篇文章的时候,据我们所知,唯一支持真正嵌套事务的数据库是MS-SQL。</target>
        </trans-unit>
        <trans-unit id="58ceee0a51c6eda13292b80b4053139906be4f6b" translate="yes" xml:space="preserve">
          <source>Most databases don't support true nested transactions. At the time of writing, the only database that we're aware of that supports true nested transactions, is MS-SQL. Because of this, Active Record emulates nested transactions by using savepoints on MySQL and PostgreSQL. See &lt;a href=&quot;https://dev.mysql.com/doc/refman/5.7/en/savepoint.html&quot;&gt;dev.mysql.com/doc/refman/5.7/en/savepoint.html&lt;/a&gt; for more information about savepoints.</source>
          <target state="translated">大多数数据库不支持真正的嵌套事务。在撰写本文时，我们知道的唯一支持真正的嵌套事务的数据库是MS-SQL。因此，Active Record通过在MySQL和PostgreSQL上使用保存点来模拟嵌套事务。有关保存点的更多信息，请参见&lt;a href=&quot;https://dev.mysql.com/doc/refman/5.7/en/savepoint.html&quot;&gt;dev.mysql.com/doc/refman/5.7/en/savepoint.html&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="559241ef317795a676c6fda0598b936471fba822" translate="yes" xml:space="preserve">
          <source>Most databases don't support true nested transactions. At the time of writing, the only database that we're aware of that supports true nested transactions, is MS-SQL. Because of this, Active Record emulates nested transactions by using savepoints. See &lt;a href=&quot;https://dev.mysql.com/doc/refman/en/savepoint.html&quot;&gt;dev.mysql.com/doc/refman/en/savepoint.html&lt;/a&gt; for more information about savepoints.</source>
          <target state="translated">大多数数据库不支持真正的嵌套事务。在撰写本文时，我们知道的唯一支持真正的嵌套事务的数据库是MS-SQL。因此，Active Record通过使用保存点来模拟嵌套事务。有关保存点的更多信息，请参见&lt;a href=&quot;https://dev.mysql.com/doc/refman/en/savepoint.html&quot;&gt;dev.mysql.com/doc/refman/en/savepoint.html&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="523cf2e23b0af5d149ca0c1cf81d6fcdfeb6bb03" translate="yes" xml:space="preserve">
          <source>Most important of these are of course the controller, located at &lt;code&gt;app/controllers/welcome_controller.rb&lt;/code&gt; and the view, located at &lt;code&gt;app/views/welcome/index.html.erb&lt;/code&gt;.</source>
          <target state="translated">其中最重要的当然是位于 &lt;code&gt;app/controllers/welcome_controller.rb&lt;/code&gt; 的控制器和位于 &lt;code&gt;app/views/welcome/index.html.erb&lt;/code&gt; 的视图。</target>
        </trans-unit>
        <trans-unit id="206cc7806b5824567f552027393f40e4e3d5b31f" translate="yes" xml:space="preserve">
          <source>Most likely your application is going to contain bugs or otherwise throw an exception that needs to be handled. For example, if the user follows a link to a resource that no longer exists in the database, Active Record will throw the &lt;code&gt;ActiveRecord::RecordNotFound&lt;/code&gt; exception.</source>
          <target state="translated">您的应用程序很可能会包含错误或以其他方式引发需要处理的异常。例如，如果用户跟踪到数据库中不再存在的资源的链接，则Active Record将抛出 &lt;code&gt;ActiveRecord::RecordNotFound&lt;/code&gt; 异常。</target>
        </trans-unit>
        <trans-unit id="1d53cfefc19e9e67195ba8f79217ade0838cd9b3" translate="yes" xml:space="preserve">
          <source>Most methods expect a &lt;code&gt;number&lt;/code&gt; argument, and will return it unchanged if can't be converted into a valid number.</source>
          <target state="translated">大多数方法都希望使用 &lt;code&gt;number&lt;/code&gt; 参数，如果无法将其转换为有效数字，则会返回原样。</target>
        </trans-unit>
        <trans-unit id="eccfd56b24b3d8bc52ff7d0ed06cbf4578f063b0" translate="yes" xml:space="preserve">
          <source>Most of the adapters support multiple queues. With Active Job you can schedule the job to run on a specific queue:</source>
          <target state="translated">大多数适配器支持多个队列。使用Active Job,您可以将作业安排在特定队列上运行。</target>
        </trans-unit>
        <trans-unit id="1e655e97128927bac82c4977add5f48a088fef9a" translate="yes" xml:space="preserve">
          <source>Most of the methods in the adapter are useful during migrations. Most notably, the instance methods provided by &lt;a href=&quot;schemastatements&quot;&gt;&lt;code&gt;SchemaStatements&lt;/code&gt;&lt;/a&gt; are very useful.</source>
          <target state="translated">适配器中的大多数方法在迁移过程中很有用。最值得注意的是，&lt;a href=&quot;schemastatements&quot;&gt; &lt;code&gt;SchemaStatements&lt;/code&gt; &lt;/a&gt;提供的实例方法非常有用。</target>
        </trans-unit>
        <trans-unit id="fee7e8c5aedcd813f43d22b5dfb2bc83dced0847" translate="yes" xml:space="preserve">
          <source>Most of the methods in the adapter are useful during migrations. Most notably, the instance methods provided by &lt;a href=&quot;schemastatements&quot;&gt;SchemaStatements&lt;/a&gt; are very useful.</source>
          <target state="translated">适配器中的大多数方法在迁移期间很有用。最值得注意的是，&lt;a href=&quot;schemastatements&quot;&gt;SchemaStatements&lt;/a&gt;提供的实例方法非常有用。</target>
        </trans-unit>
        <trans-unit id="48b34b3aab7d85bd74d4b838155569578ab804d8" translate="yes" xml:space="preserve">
          <source>Most of the queries here are happening in the controller. In order to benefit from streaming you would want to rewrite it as:</source>
          <target state="translated">这里的大部分查询都发生在控制器中。为了从流媒体中获益,你会想把它重写成:。</target>
        </trans-unit>
        <trans-unit id="497bca5cc5e9c844d37444e5315fa4c8d45fc350" translate="yes" xml:space="preserve">
          <source>Most people don't clear out the cookies after working at a public terminal. So if the last user didn't log out of a web application, you would be able to use it as this user. Provide the user with a &lt;em&gt;log-out button&lt;/em&gt; in the web application, and &lt;em&gt;make it prominent&lt;/em&gt;.</source>
          <target state="translated">在公共终端工作后，大多数人不会清除cookie。因此，如果最后一个用户没有注销Web应用程序，则可以以该用户的身份使用它。为用户提供Web应用程序中的&lt;em&gt;注销按钮&lt;/em&gt;，并&lt;em&gt;使其突出显示&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="571b335d230721224ba2cc7dd94150881d920e90" translate="yes" xml:space="preserve">
          <source>Most template dependencies can be derived from calls to &lt;code&gt;render&lt;/code&gt; in the template itself. Here are some examples of render calls that &lt;code&gt;ActionView::Digestor&lt;/code&gt; knows how to decode:</source>
          <target state="translated">大多数模板依赖项可以从对模板本身进行 &lt;code&gt;render&lt;/code&gt; 调用中得出。以下是一些 &lt;code&gt;ActionView::Digestor&lt;/code&gt; 知道如何解码的渲染调用示例：</target>
        </trans-unit>
        <trans-unit id="5e4bf900addd8f529d8a91a4897d35ae99eedb25" translate="yes" xml:space="preserve">
          <source>Most template dependencies can be derived from calls to render in the template itself. Here are some examples of render calls that Cache Digests knows how to decode:</source>
          <target state="translated">大部分的模板依赖性都可以从模板本身的render调用中得到。下面是一些Cache Digests知道如何解码的渲染调用的例子。</target>
        </trans-unit>
        <trans-unit id="b723d7488a6748257fd951690affee4ed1b12a30" translate="yes" xml:space="preserve">
          <source>Most text helpers that generate HTML output sanitize the given input by default, but do not escape it. This means HTML tags will appear in the page but all malicious code will be removed. Let's look at some examples using the &lt;code&gt;simple_format&lt;/code&gt; method:</source>
          <target state="translated">默认情况下，大多数生成HTML输出的文本助手都会清理给定的输入，但不会对其进行转义。这意味着HTML标记将出现在页面中，但是所有恶意代码都将被删除。让我们来看一些使用 &lt;code&gt;simple_format&lt;/code&gt; 方法的示例：</target>
        </trans-unit>
        <trans-unit id="6c4acaae05139d290e7eb7c3702ecdfb4740715e" translate="yes" xml:space="preserve">
          <source>Most times you only care about the data itself. Here is a shortcut to just get the data.</source>
          <target state="translated">大多数时候你只关心数据本身。这里有一个捷径,只需获取数据即可。</target>
        </trans-unit>
        <trans-unit id="5be95de95c3a694cdfaa9b01f941d8b4d82957f5" translate="yes" xml:space="preserve">
          <source>Mount a Rack-based application to be used within the application.</source>
          <target state="translated">挂载一个基于机架的应用程序,以便在应用程序中使用。</target>
        </trans-unit>
        <trans-unit id="e66103f0e1c609f714c07a70bc4e128e09dc1a34" translate="yes" xml:space="preserve">
          <source>Mount priority</source>
          <target state="translated">挂载优先权</target>
        </trans-unit>
        <trans-unit id="65e4ece6255d32204ed3ced596b87d73f3245e49" translate="yes" xml:space="preserve">
          <source>Mounting the Engine</source>
          <target state="translated">安装发动机</target>
        </trans-unit>
        <trans-unit id="68e27a2147826a19a93ca554aefc33b75b0f0e77" translate="yes" xml:space="preserve">
          <source>Move to the latest patch version after your current version.</source>
          <target state="translated">移动到最新的补丁版本后,你当前的版本。</target>
        </trans-unit>
        <trans-unit id="69755f4dfaa3969fcb5b25c274c95fbd2193790b" translate="yes" xml:space="preserve">
          <source>Move to the latest patch version of the next minor version.</source>
          <target state="translated">移动到下一个小版本的最新补丁版本。</target>
        </trans-unit>
        <trans-unit id="567bb626e54c5a63b6fa8bf66c31f36df6d87141" translate="yes" xml:space="preserve">
          <source>Much like &lt;code&gt;form_with&lt;/code&gt; a &lt;a href=&quot;formbuilder&quot;&gt;&lt;code&gt;FormBuilder&lt;/code&gt;&lt;/a&gt; instance associated with the scope or model is yielded, so any generated field names are prefixed with either the passed scope or the scope inferred from the &lt;code&gt;:model&lt;/code&gt;.</source>
          <target state="translated">与产生与范围或模型相关联的&lt;a href=&quot;formbuilder&quot;&gt; &lt;code&gt;FormBuilder&lt;/code&gt; &lt;/a&gt;实例的 &lt;code&gt;form_with&lt;/code&gt; 非常相似，因此任何生成的字段名称都以传递的范围或从 &lt;code&gt;:model&lt;/code&gt; 推断的范围为前缀。</target>
        </trans-unit>
        <trans-unit id="4f2a29dbde4926cfbfe6b23506f21556494d10f9" translate="yes" xml:space="preserve">
          <source>Much like &lt;code&gt;form_with&lt;/code&gt; a &lt;a href=&quot;formbuilder&quot;&gt;FormBuilder&lt;/a&gt; instance associated with the scope or model is yielded, so any generated field names are prefixed with either the passed scope or the scope inferred from the &lt;code&gt;:model&lt;/code&gt;.</source>
          <target state="translated">与产生与范围或模型关联的&lt;a href=&quot;formbuilder&quot;&gt;FormBuilder&lt;/a&gt;实例的 &lt;code&gt;form_with&lt;/code&gt; 非常相似，因此任何生成的字段名称都以传递的范围或从 &lt;code&gt;:model&lt;/code&gt; 推断的范围为前缀。</target>
        </trans-unit>
        <trans-unit id="4c669cfe6f565d5e96b459b6a859e113771af92a" translate="yes" xml:space="preserve">
          <source>Much of Action Controller's functionality is implemented as Middlewares. The following list explains the purpose of each of them:</source>
          <target state="translated">Action Controller的大部分功能都是以中间件的形式实现的。下面的列表解释了每个中间件的目的。</target>
        </trans-unit>
        <trans-unit id="fdad3ac6d447afe1cd48c10de24f4c825fd91666" translate="yes" xml:space="preserve">
          <source>MultiJSON has reached its &lt;a href=&quot;https://github.com/rails/rails/pull/10576&quot;&gt;end-of-life&lt;/a&gt; and has been removed from Rails.</source>
          <target state="translated">MultiJSON已到&lt;a href=&quot;https://github.com/rails/rails/pull/10576&quot;&gt;使用寿命&lt;/a&gt;，并且已从Rails中删除。</target>
        </trans-unit>
        <trans-unit id="577e584a04dfea954500058f69395d5b90b186e3" translate="yes" xml:space="preserve">
          <source>Multibyte</source>
          <target state="translated">Multibyte</target>
        </trans-unit>
        <trans-unit id="44b3146bc43b4204d4d02b6c17400bdc44be353f" translate="yes" xml:space="preserve">
          <source>Multibyte proxy</source>
          <target state="translated">多字节代理</target>
        </trans-unit>
        <trans-unit id="dbfe775843033ba1d1d04a0b95553ec396faea3b" translate="yes" xml:space="preserve">
          <source>Multibyte::Chars</source>
          <target state="translated">Multibyte::Chars</target>
        </trans-unit>
        <trans-unit id="a77c779095fcad786d63d02ed4f10da364a918f8" translate="yes" xml:space="preserve">
          <source>Multibyte::Chars#compose</source>
          <target state="translated">Multibyte::Chars#compose</target>
        </trans-unit>
        <trans-unit id="3a71236f57c99aa27508902711cb5b914367a5af" translate="yes" xml:space="preserve">
          <source>Multibyte::Chars#decompose</source>
          <target state="translated">Multibyte::Chars#decompose</target>
        </trans-unit>
        <trans-unit id="c3aed8a0bd7f2e27cc61c4584bdef95c2754574b" translate="yes" xml:space="preserve">
          <source>Multibyte::Chars#grapheme_length</source>
          <target state="translated">Multibyte::Chars#grapheme_length</target>
        </trans-unit>
        <trans-unit id="2cb346ad51d1b8e1ab5d6fdd3b0e315e78fe54d3" translate="yes" xml:space="preserve">
          <source>Multibyte::Chars#limit</source>
          <target state="translated">Multibyte::Chars#limit</target>
        </trans-unit>
        <trans-unit id="edb500693690502b4ce906e2d6de066647b583de" translate="yes" xml:space="preserve">
          <source>Multibyte::Chars#method_missing</source>
          <target state="translated">Multibyte::Chars#method_missing</target>
        </trans-unit>
        <trans-unit id="c9aff960c5a6365bbe220c67d92ca35bf231b25f" translate="yes" xml:space="preserve">
          <source>Multibyte::Chars#normalize</source>
          <target state="translated">Multibyte::Chars#normalize</target>
        </trans-unit>
        <trans-unit id="61fd0c3d0704b5be2b2ddc64f01f05d3cdfae11e" translate="yes" xml:space="preserve">
          <source>Multibyte::Chars#respond_to_missing?</source>
          <target state="translated">Multibyte::Chars#respond_to_missing?</target>
        </trans-unit>
        <trans-unit id="fcac9f6b46e0d66cd3b2e48b54cb4838d98b1d70" translate="yes" xml:space="preserve">
          <source>Multibyte::Chars#reverse</source>
          <target state="translated">Multibyte::Chars#reverse</target>
        </trans-unit>
        <trans-unit id="29c57575d0fe497cfc6df410d77261ee859bff5c" translate="yes" xml:space="preserve">
          <source>Multibyte::Chars#slice!</source>
          <target state="translated">Multibyte::Chars#slice!</target>
        </trans-unit>
        <trans-unit id="60924aa309b322723072e8b5d1d25f3bfc84f185" translate="yes" xml:space="preserve">
          <source>Multibyte::Chars#split</source>
          <target state="translated">Multibyte::Chars#split</target>
        </trans-unit>
        <trans-unit id="c54415b49d5dd255e971711f05c0921ca91f9567" translate="yes" xml:space="preserve">
          <source>Multibyte::Chars#tidy_bytes</source>
          <target state="translated">Multibyte::Chars#tidy_bytes</target>
        </trans-unit>
        <trans-unit id="5696a1b68036edfea1149f28955c5171aaa066dd" translate="yes" xml:space="preserve">
          <source>Multibyte::Chars#titlecase</source>
          <target state="translated">Multibyte::Chars#titlecase</target>
        </trans-unit>
        <trans-unit id="29562d818637c005447d41a14c53e35ca819d736" translate="yes" xml:space="preserve">
          <source>Multibyte::Chars#titleize</source>
          <target state="translated">Multibyte::Chars#titleize</target>
        </trans-unit>
        <trans-unit id="3c0ba0b40fbfb06c8ff8eb5ac6b1a814a13abe65" translate="yes" xml:space="preserve">
          <source>Multibyte::Chars#to_s</source>
          <target state="translated">Multibyte::Chars#to_s</target>
        </trans-unit>
        <trans-unit id="4e507c3e7ade2459ad387acbc199ef65753f44e1" translate="yes" xml:space="preserve">
          <source>Multibyte::Chars#to_str</source>
          <target state="translated">Multibyte::Chars#to_str</target>
        </trans-unit>
        <trans-unit id="e0852a435607775956151f2d12a44d374e367131" translate="yes" xml:space="preserve">
          <source>Multibyte::Chars#wrapped_string</source>
          <target state="translated">Multibyte::Chars#wrapped_string</target>
        </trans-unit>
        <trans-unit id="f1b49e7f7cacefac11c721baed55601e72598ac0" translate="yes" xml:space="preserve">
          <source>Multibyte::Chars::consumes?</source>
          <target state="translated">Multibyte::Chars::consumes?</target>
        </trans-unit>
        <trans-unit id="25b5a149fcfab95d5e9ac1f6c3bc6b238d1a76b6" translate="yes" xml:space="preserve">
          <source>Multibyte::Chars::new</source>
          <target state="translated">Multibyte::Chars::new</target>
        </trans-unit>
        <trans-unit id="dd207e116a1881d14e8755e2dd8afad68ca66404" translate="yes" xml:space="preserve">
          <source>Multibyte::Unicode</source>
          <target state="translated">Multibyte::Unicode</target>
        </trans-unit>
        <trans-unit id="99e5ba7441254093fd472ba8b48bd5cf04210a9c" translate="yes" xml:space="preserve">
          <source>Multibyte::Unicode#compose</source>
          <target state="translated">Multibyte::Unicode#compose</target>
        </trans-unit>
        <trans-unit id="6a9bf80aa3e8755c3b8785c2e82d94106dafbbea" translate="yes" xml:space="preserve">
          <source>Multibyte::Unicode#decompose</source>
          <target state="translated">Multibyte::Unicode#decompose</target>
        </trans-unit>
        <trans-unit id="3ab6d7fd74955bfcdd88d1183d496821920971c7" translate="yes" xml:space="preserve">
          <source>Multibyte::Unicode#default_normalization_form</source>
          <target state="translated">Multibyte::Unicode#default_normalization_form</target>
        </trans-unit>
        <trans-unit id="2f590db3a14c669921995363de50c9aa7b62f029" translate="yes" xml:space="preserve">
          <source>Multibyte::Unicode#normalize</source>
          <target state="translated">Multibyte::Unicode#normalize</target>
        </trans-unit>
        <trans-unit id="497c9088f01c7ac11114f3ce775aac42f7b50b8c" translate="yes" xml:space="preserve">
          <source>Multibyte::Unicode#pack_graphemes</source>
          <target state="translated">Multibyte::Unicode#pack_graphemes</target>
        </trans-unit>
        <trans-unit id="93ea9b938b0c09536d97df26cee8e9d7797e904e" translate="yes" xml:space="preserve">
          <source>Multibyte::Unicode#tidy_bytes</source>
          <target state="translated">Multibyte::Unicode#tidy_bytes</target>
        </trans-unit>
        <trans-unit id="f24dbeb8438b74efbec9b1765decb2e0a554ecd2" translate="yes" xml:space="preserve">
          <source>Multibyte::Unicode#unpack_graphemes</source>
          <target state="translated">Multibyte::Unicode#unpack_graphemes</target>
        </trans-unit>
        <trans-unit id="8478db7c1329df5939eeb843202273bc3ca6f4fd" translate="yes" xml:space="preserve">
          <source>Multibyte::proxy_class</source>
          <target state="translated">Multibyte::proxy_class</target>
        </trans-unit>
        <trans-unit id="5b6a01d724fec572618c3d6bbaca05853b8359ee" translate="yes" xml:space="preserve">
          <source>Multibyte::proxy_class=</source>
          <target state="translated">Multibyte::proxy_class=</target>
        </trans-unit>
        <trans-unit id="1c0b905d64b0517973b54b47221309dc3ae10f49" translate="yes" xml:space="preserve">
          <source>Multipart Emails</source>
          <target state="translated">多段式电子邮件</target>
        </trans-unit>
        <trans-unit id="bb49c6706b5ec72ba15cb3e74cd18b230c613911" translate="yes" xml:space="preserve">
          <source>Multipart messages can also be used implicitly because Action Mailer will automatically detect and use multipart templates, where each template is named after the name of the action, followed by the content type. Each such detected template will be added to the message, as a separate part.</source>
          <target state="translated">多部分邮件也可以隐式使用,因为Action Mailer会自动检测和使用多部分模板,每个模板都以动作名称命名,然后是内容类型。每个这样的检测到的模板都会被添加到邮件中,作为一个单独的部分。</target>
        </trans-unit>
        <trans-unit id="5afb1cbb87b4c678f1749be244babe3f86a208c0" translate="yes" xml:space="preserve">
          <source>Multiple Applications</source>
          <target state="translated">多种应用</target>
        </trans-unit>
        <trans-unit id="be88eb95f46dc97a706ddd49f5cd1af0da18459d" translate="yes" xml:space="preserve">
          <source>Multiple Conditions for Callbacks</source>
          <target state="translated">回调的多个条件</target>
        </trans-unit>
        <trans-unit id="08c54482647fa51932f62b990e2f89b4da939bdd" translate="yes" xml:space="preserve">
          <source>Multiple Databases with Active Record</source>
          <target state="translated">多数据库与活动记录</target>
        </trans-unit>
        <trans-unit id="2f1749c5f39d08135c935affc6ac69182f5bb4c0" translate="yes" xml:space="preserve">
          <source>Multiple delegates to the same target are allowed:</source>
          <target state="translated">允许对同一目标进行多个委托。</target>
        </trans-unit>
        <trans-unit id="38f3de59be21ca6540293770d2cd9c3d3037f833" translate="yes" xml:space="preserve">
          <source>Multiple joins:</source>
          <target state="translated">多个附件。</target>
        </trans-unit>
        <trans-unit id="20aff80eb14d75fd5040fa242c1b2eceb165bbca" translate="yes" xml:space="preserve">
          <source>Multiple primary databases and a replica for each</source>
          <target state="translated">多个主数据库,每个数据库有一个副本。</target>
        </trans-unit>
        <trans-unit id="1226f9211654c62fbd0f20c3a9246d880bbd4293" translate="yes" xml:space="preserve">
          <source>Multiple writer databases and a replica for each</source>
          <target state="translated">多个写作者数据库,每个数据库有一个副本。</target>
        </trans-unit>
        <trans-unit id="eee06ae209cee3e1793aab88b680177467f7df6f" translate="yes" xml:space="preserve">
          <source>Multiplies this &lt;a href=&quot;duration&quot;&gt;&lt;code&gt;Duration&lt;/code&gt;&lt;/a&gt; by a &lt;a href=&quot;../numeric&quot;&gt;&lt;code&gt;Numeric&lt;/code&gt;&lt;/a&gt; and returns a new &lt;a href=&quot;duration&quot;&gt;&lt;code&gt;Duration&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">将此&lt;a href=&quot;duration&quot;&gt; &lt;code&gt;Duration&lt;/code&gt; &lt;/a&gt;乘以&lt;a href=&quot;../numeric&quot;&gt; &lt;code&gt;Numeric&lt;/code&gt; &lt;/a&gt;然后返回一个新的&lt;a href=&quot;duration&quot;&gt; &lt;code&gt;Duration&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="951e59425d6c39d5b290427731b5200017ee438a" translate="yes" xml:space="preserve">
          <source>Multiplies this &lt;a href=&quot;duration&quot;&gt;Duration&lt;/a&gt; by a &lt;a href=&quot;../numeric&quot;&gt;Numeric&lt;/a&gt; and returns a new &lt;a href=&quot;duration&quot;&gt;Duration&lt;/a&gt;.</source>
          <target state="translated">将此&lt;a href=&quot;duration&quot;&gt;持续时间&lt;/a&gt;乘以&lt;a href=&quot;../numeric&quot;&gt;数值，&lt;/a&gt;然后返回一个新的&lt;a href=&quot;duration&quot;&gt;Duration&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="05ad5edf0857ae96f7e8e591fea83fc0be2cbb1d" translate="yes" xml:space="preserve">
          <source>Mutator methods called on Relation</source>
          <target state="translated">在Relation上调用的Mutator方法</target>
        </trans-unit>
        <trans-unit id="deaa0c393a6613972aaccbf1fecfdad67aa21e88" translate="yes" xml:space="preserve">
          <source>MySQL</source>
          <target state="translated">MySQL</target>
        </trans-unit>
        <trans-unit id="04f6be056c62007ce171d677af3018f64ae6643c" translate="yes" xml:space="preserve">
          <source>MySQL doesn't support DDL transactions. If you perform a DDL operation, then any created savepoints will be automatically released. For example, if you've created a savepoint, then you execute a CREATE TABLE statement, then the savepoint that was created will be automatically released.</source>
          <target state="translated">MySQL不支持DDL事务。如果你执行了DDL操作,那么任何创建的保存点都会被自动释放。例如,如果你已经创建了一个保存点,然后执行CREATE TABLE语句,那么创建的保存点将被自动释放。</target>
        </trans-unit>
        <trans-unit id="27c321d50bbcd9b5772400c058a31390e2decc62" translate="yes" xml:space="preserve">
          <source>MySQL: &lt;a href=&quot;https://dev.mysql.com/doc/refman/5.7/en/explain-output.html&quot;&gt;EXPLAIN Output Format&lt;/a&gt;</source>
          <target state="translated">MySQL：&lt;a href=&quot;https://dev.mysql.com/doc/refman/5.7/en/explain-output.html&quot;&gt;EXPLAIN输出格式&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bdfb725f6f0e69817041da42add99b5bdb995776" translate="yes" xml:space="preserve">
          <source>MySQL: &lt;a href=&quot;https://dev.mysql.com/doc/refman/en/explain-output.html&quot;&gt;EXPLAIN Output Format&lt;/a&gt;</source>
          <target state="translated">MySQL：&lt;a href=&quot;https://dev.mysql.com/doc/refman/en/explain-output.html&quot;&gt;EXPLAIN输出格式&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="09679f1a4e7693179ccf0966910ba55b4da55040" translate="yes" xml:space="preserve">
          <source>MySQL: &lt;code&gt;:precision&lt;/code&gt; [1..63], &lt;code&gt;:scale&lt;/code&gt; [0..30]. Default is (10,0).</source>
          <target state="translated">MySQL：： &lt;code&gt;:precision&lt;/code&gt; [1..63] 、 &lt;code&gt;:scale&lt;/code&gt; [0..30]。默认值为（10,0）。</target>
        </trans-unit>
        <trans-unit id="9f6ce4a25a9c51664b4dcdfc725f8eefd86a4c19" translate="yes" xml:space="preserve">
          <source>MySpace blocked many tags, but allowed CSS. So the worm's author put JavaScript into CSS like this:</source>
          <target state="translated">MySpace屏蔽了很多标签,但允许CSS。于是蠕虫的作者就把JavaScript放到了CSS中,就像这样。</target>
        </trans-unit>
        <trans-unit id="06ec39473e78b6ba391da473c04b8788442c949f" translate="yes" xml:space="preserve">
          <source>N/A: The adapter does not run in a separate process, and therefore doesn't support retries.</source>
          <target state="translated">N/A:适配器没有在单独的进程中运行,因此不支持重试。</target>
        </trans-unit>
        <trans-unit id="9089a789f0069c4bce0cc6730a22c574fd4aa9e0" translate="yes" xml:space="preserve">
          <source>N/A: The adapter does not support queuing, and therefore sorting them.</source>
          <target state="translated">不适用:适配器不支持排队,因此不支持对它们进行排序。</target>
        </trans-unit>
        <trans-unit id="a0fcee9ccee4f7f243b5a494a4b2459fafb9c16a" translate="yes" xml:space="preserve">
          <source>N/A: The adapter does not support queuing.</source>
          <target state="translated">不适用:适配器不支持排队。</target>
        </trans-unit>
        <trans-unit id="90355c194c9abb6ca5245c0286a948195ec867f6" translate="yes" xml:space="preserve">
          <source>N/A: This adapter does not run in a separate process, and therefore timeout is unsupported.</source>
          <target state="translated">N/A:该适配器不在单独的进程中运行,因此不支持超时。</target>
        </trans-unit>
        <trans-unit id="e0aabc7fc6e90c4c16eb42d4f9847ec6f8b51711" translate="yes" xml:space="preserve">
          <source>NAME_COMPILABLE_REGEXP</source>
          <target state="translated">NAME_COMPILABLE_REGEXP</target>
        </trans-unit>
        <trans-unit id="364b0ae6cebce8b9b4faf58d96a008e3e0acd1b0" translate="yes" xml:space="preserve">
          <source>NATIVE_DATABASE_TYPES</source>
          <target state="translated">NATIVE_DATABASE_TYPES</target>
        </trans-unit>
        <trans-unit id="34b8b86577c6bd56c6ad5b564be28cd2f908903d" translate="yes" xml:space="preserve">
          <source>NB: The output may still contain unescaped '&amp;lt;', '&amp;gt;', '&amp;amp;' characters and confuse browsers.</source>
          <target state="translated">注意：输出可能仍然包含未转义的'&amp;lt;'，'&amp;gt;'，'＆'字符，并使浏览器混乱。</target>
        </trans-unit>
        <trans-unit id="66aabd91fc41cc4635aad94dc77d93a0e2eac67b" translate="yes" xml:space="preserve">
          <source>NEW</source>
          <target state="translated">NEW</target>
        </trans-unit>
        <trans-unit id="dadac5bcf4c6b4db403b0dcea4d07dd23acca6ba" translate="yes" xml:space="preserve">
          <source>NORMALIZATION_FORMS</source>
          <target state="translated">NORMALIZATION_FORMS</target>
        </trans-unit>
        <trans-unit id="5050fdd648c2c3c100230e8520feff151e76b22f" translate="yes" xml:space="preserve">
          <source>NOT Conditions</source>
          <target state="translated">NOT条件</target>
        </trans-unit>
        <trans-unit id="6f4c044303492a84dc9ba161a054727b65adabe0" translate="yes" xml:space="preserve">
          <source>NOTE! Unless told otherwise, Rails expects an action to render a template with the same name, contained in a folder named after its controller. If this controller is an API responding with 204 (No Content), which does not require a template, then this error will occur when trying to access it via browser, since we expect an HTML template to be rendered for such requests. If that's the case, carry on.</source>
          <target state="translated">注意!除非另有说明,否则Rails期望动作会渲染一个同名的模板,该模板包含在以其控制器命名的文件夹中。如果这个控制器是一个响应204(No Content)的API,它不需要模板,那么当试图通过浏览器访问它时,就会出现这个错误,因为我们期望为这类请求渲染一个HTML模板。如果是这样的话,请继续。</target>
        </trans-unit>
        <trans-unit id="b1514b2ceda44e8e38aab4c4cd4e588f35b833e1" translate="yes" xml:space="preserve">
          <source>NOTE: &lt;a href=&quot;test&quot;&gt;&lt;code&gt;Test&lt;/code&gt;&lt;/a&gt; adapter extends the &lt;code&gt;ActionCable::SubscriptionsAdapter::Async&lt;/code&gt; adapter, so it could be used in system tests too.</source>
          <target state="translated">注意：&lt;a href=&quot;test&quot;&gt; &lt;code&gt;Test&lt;/code&gt; &lt;/a&gt;适配器扩展了 &lt;code&gt;ActionCable::SubscriptionsAdapter::Async&lt;/code&gt; 适配器，因此它也可以在系统测试中使用。</target>
        </trans-unit>
        <trans-unit id="53c9b907d5e9772f96c352467530121723a24dcc" translate="yes" xml:space="preserve">
          <source>NOTE: &lt;a href=&quot;test&quot;&gt;Test&lt;/a&gt; adapter extends the &lt;code&gt;ActionCable::SubscriptionsAdapter::Async&lt;/code&gt; adapter, so it could be used in system tests too.</source>
          <target state="translated">注意：&lt;a href=&quot;test&quot;&gt;测试&lt;/a&gt;适配器扩展了 &lt;code&gt;ActionCable::SubscriptionsAdapter::Async&lt;/code&gt; 适配器，因此它也可以在系统测试中使用。</target>
        </trans-unit>
        <trans-unit id="82b300c91ff4f01a70796137110481c8c73e629a" translate="yes" xml:space="preserve">
          <source>NOTE: &lt;code&gt;method_name&lt;/code&gt; passed to &lt;a href=&quot;callbacks#method-i-define_model_callbacks&quot;&gt;#define_model_callbacks&lt;/a&gt; must not end with &lt;code&gt;!&lt;/code&gt;, &lt;code&gt;?&lt;/code&gt; or &lt;code&gt;=&lt;/code&gt;.</source>
          <target state="translated">注意：传递给&lt;a href=&quot;callbacks#method-i-define_model_callbacks&quot;&gt;#define_model_callbacks的&lt;/a&gt; &lt;code&gt;method_name&lt;/code&gt; 不能以 &lt;code&gt;!&lt;/code&gt; 结尾。， &lt;code&gt;?&lt;/code&gt; 或 &lt;code&gt;=&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b1f01e821d2105736464d9a1834f5f53a57aca84" translate="yes" xml:space="preserve">
          <source>NOTE: &lt;code&gt;method_name&lt;/code&gt; passed to &lt;a href=&quot;callbacks#method-i-define_model_callbacks&quot;&gt;&lt;code&gt;define_model_callbacks&lt;/code&gt;&lt;/a&gt; must not end with &lt;code&gt;!&lt;/code&gt;, &lt;code&gt;?&lt;/code&gt; or &lt;code&gt;=&lt;/code&gt;.</source>
          <target state="translated">注意：传递给&lt;a href=&quot;callbacks#method-i-define_model_callbacks&quot;&gt; &lt;code&gt;define_model_callbacks&lt;/code&gt; 的&lt;/a&gt; &lt;code&gt;method_name&lt;/code&gt; 不能以 &lt;code&gt;!&lt;/code&gt; 结尾。， &lt;code&gt;?&lt;/code&gt; 或 &lt;code&gt;=&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="db0ce667a0ad77170e45745c759f9a92c263c9f7" translate="yes" xml:space="preserve">
          <source>NOTE: By its nature, batch processing is subject to race conditions if other processes are modifying the database.</source>
          <target state="translated">注意:就其性质而言,如果其他进程正在修改数据库,批处理会受到竞赛条件的影响。</target>
        </trans-unit>
        <trans-unit id="77b33c7bf4dc36bae9675fcf16d7f5676777c7ff" translate="yes" xml:space="preserve">
          <source>NOTE: Calling &lt;code&gt;validate&lt;/code&gt; multiple times on the same method will overwrite previous definitions.</source>
          <target state="translated">注意：在同一方法上多次调用 &lt;code&gt;validate&lt;/code&gt; 将覆盖以前的定义。</target>
        </trans-unit>
        <trans-unit id="c1244e2875a89e59d59e46c3fbb7b9c9041b6c73" translate="yes" xml:space="preserve">
          <source>NOTE: Calling the same callback multiple times will overwrite previous callback definitions.</source>
          <target state="translated">注意:多次调用同一个回调会覆盖之前的回调定义。</target>
        </trans-unit>
        <trans-unit id="459a5611b4fb3651cbcf5fb40048074d44f62f2e" translate="yes" xml:space="preserve">
          <source>NOTE: Discarded selects will default to 1. So if no month select is available, January will be assumed.</source>
          <target state="translated">注意:丢弃的选择将默认为1。因此,如果没有可用的月份选择,将假定为1月。</target>
        </trans-unit>
        <trans-unit id="35bb5d930d5344ab9c4661a4a291c03f392618bf" translate="yes" xml:space="preserve">
          <source>NOTE: Each nesting level will merge inherited defaults in addition to their own.</source>
          <target state="translated">注意:每个嵌套层除了自己的默认值外,还会合并继承的默认值。</target>
        </trans-unit>
        <trans-unit id="e780dd9cbb0eaceca23a69ca7ca982d3efb3e44a" translate="yes" xml:space="preserve">
          <source>NOTE: If you are going to iterate through each record, you should call each_record on the yielded BatchEnumerator:</source>
          <target state="translated">注意:如果你要遍历每条记录,你应该在产生的BatchEnumerator上调用each_record。</target>
        </trans-unit>
        <trans-unit id="c165b1ec162ea38175fc46f3bdc9c823fddf560e" translate="yes" xml:space="preserve">
          <source>NOTE: If you are using structured database data types (e.g. PostgreSQL &lt;code&gt;hstore&lt;/code&gt;/&lt;code&gt;json&lt;/code&gt;, or MySQL 5.7+ &lt;code&gt;json&lt;/code&gt;) there is no need for the serialization provided by .store. Simply use .store_accessor instead to generate the accessor methods. Be aware that these columns use a string keyed hash and do not allow access using a symbol.</source>
          <target state="translated">注意：如果您使用结构化数据库数据类型（例如PostgreSQL &lt;code&gt;hstore&lt;/code&gt; / &lt;code&gt;json&lt;/code&gt; 或MySQL 5.7+ &lt;code&gt;json&lt;/code&gt; ），则不需要.store提供的序列化。只需使用.store_accessor即可生成访问器方法。请注意，这些列使用字符串键哈希，并且不允许使用符号进行访问。</target>
        </trans-unit>
        <trans-unit id="9110f77a80c94aa7c9d01ac9563f7305028fc714" translate="yes" xml:space="preserve">
          <source>NOTE: If you are using structured database data types (eg. PostgreSQL &lt;code&gt;hstore&lt;/code&gt;/&lt;code&gt;json&lt;/code&gt;, or MySQL 5.7+ &lt;code&gt;json&lt;/code&gt;) there is no need for the serialization provided by .store. Simply use .store_accessor instead to generate the accessor methods. Be aware that these columns use a string keyed hash and do not allow access using a symbol.</source>
          <target state="translated">注意：如果您使用结构化数据库数据类型（例如PostgreSQL &lt;code&gt;hstore&lt;/code&gt; / &lt;code&gt;json&lt;/code&gt; 或MySQL 5.7+ &lt;code&gt;json&lt;/code&gt; ），则不需要.store 提供的序列化。只需使用.store_accessor即可生成访问器方法。请注意，这些列使用字符串键哈希，并且不允许使用符号进行访问。</target>
        </trans-unit>
        <trans-unit id="d5aa3f2e463dee8d6a93b822667caffdd28ed89f" translate="yes" xml:space="preserve">
          <source>NOTE: It's not possible to set the order. That is automatically set to ascending on the primary key (&amp;ldquo;id ASC&amp;rdquo;) to make the batch ordering consistent. Therefore the primary key must be orderable, e.g. an integer or a string.</source>
          <target state="translated">注意：无法设置顺序。它会自动设置为在主键（&amp;ldquo; id ASC&amp;rdquo;）上升序以使批次排序保持一致。因此，主键必须是可排序的，例如整数或字符串。</target>
        </trans-unit>
        <trans-unit id="dde7531f52bc0c757ff3d34c5fe675032ed0dc59" translate="yes" xml:space="preserve">
          <source>NOTE: It's not possible to set the order. That is automatically set to ascending on the primary key (&amp;ldquo;id ASC&amp;rdquo;) to make the batch ordering work. This also means that this method only works when the primary key is orderable (e.g. an integer or string).</source>
          <target state="translated">注意：无法设置顺序。它会自动设置为主键（&amp;ldquo; id ASC&amp;rdquo;）升序以使批量订购生效。这也意味着该方法仅在主键可排序（例如整数或字符串）时才有效。</target>
        </trans-unit>
        <trans-unit id="29f14cc49202f0a1b0bb8a6f8ce37815657aef23" translate="yes" xml:space="preserve">
          <source>NOTE: Must be subscribed.</source>
          <target state="translated">注:必须订阅。</target>
        </trans-unit>
        <trans-unit id="6dc6141be1468034c8070346d640d8a829f5f57d" translate="yes" xml:space="preserve">
          <source>NOTE: Only the option tags are returned, you have to wrap this call in a regular HTML select tag.</source>
          <target state="translated">注意:只有选项标签会被返回,你必须用一个常规的HTML选择标签来包装这个调用。</target>
        </trans-unit>
        <trans-unit id="23e989d5cf34d6bf2d00ade49c344f06feede155" translate="yes" xml:space="preserve">
          <source>NOTE: Order can be ascending (:asc) or descending (:desc). It is automatically set to ascending on the primary key (&amp;ldquo;id ASC&amp;rdquo;). This also means that this method only works when the primary key is orderable (e.g. an integer or string).</source>
          <target state="translated">注意：顺序可以升序（：asc）或降序（：desc）。它会自动设置为主键（&amp;ldquo; id ASC&amp;rdquo;）升序。这也意味着该方法仅在主键是可排序的（例如整数或字符串）时才有效。</target>
        </trans-unit>
        <trans-unit id="6943a719f65fb990d18007df480f8c42cd9b18c1" translate="yes" xml:space="preserve">
          <source>NOTE: Other URL helpers can be called in the block but be careful not to invoke your custom URL helper again otherwise it will result in a stack overflow error.</source>
          <target state="translated">注意:可以在区块中调用其他URL助手,但注意不要再次调用你的自定义URL助手,否则会导致堆栈溢出错误。</target>
        </trans-unit>
        <trans-unit id="b156bf73ae0bbaecb78b98c9bfa46bc9edd1b4e2" translate="yes" xml:space="preserve">
          <source>NOTE: Ruby 2.4 and later support native Unicode case mappings:</source>
          <target state="translated">注:Ruby 2.4及以后的版本支持本地Unicode大小写映射。</target>
        </trans-unit>
        <trans-unit id="d739e914d4cbb746ba24e8856710882ef4ceb321" translate="yes" xml:space="preserve">
          <source>NOTE: The :local timezone is Ruby's &lt;strong&gt;process&lt;/strong&gt; timezone, i.e. ENV.</source>
          <target state="translated">注意：：local时区是Ruby的&lt;strong&gt;处理&lt;/strong&gt;时区，即ENV。</target>
        </trans-unit>
        <trans-unit id="70a7e32800af02b9f8831a9f78781ff3e3c0fa4e" translate="yes" xml:space="preserve">
          <source>NOTE: The &lt;code&gt;direct&lt;/code&gt; method can't be used inside of a scope block such as &lt;code&gt;namespace&lt;/code&gt; or &lt;code&gt;scope&lt;/code&gt; and will raise an error if it detects that it is.</source>
          <target state="translated">注意： &lt;code&gt;direct&lt;/code&gt; 方法不能在诸如 &lt;code&gt;namespace&lt;/code&gt; 或 &lt;code&gt;scope&lt;/code&gt; 之类的范围块内使用，如果检测到它，则会引发错误。</target>
        </trans-unit>
        <trans-unit id="84504c0e05d0a3bcbefa67ca6b2d127e74bce741" translate="yes" xml:space="preserve">
          <source>NOTE: The &lt;code&gt;resolve&lt;/code&gt; method can't be used inside of a scope block such as &lt;code&gt;namespace&lt;/code&gt; or &lt;code&gt;scope&lt;/code&gt; and will raise an error if it detects that it is.</source>
          <target state="translated">注意： &lt;code&gt;resolve&lt;/code&gt; 方法不能在诸如 &lt;code&gt;namespace&lt;/code&gt; 或 &lt;code&gt;scope&lt;/code&gt; 之类的范围块内使用，如果检测到它，则会引发错误。</target>
        </trans-unit>
        <trans-unit id="2e424a8b8f539c8c51767bfb36b1996ecd86b6d7" translate="yes" xml:space="preserve">
          <source>NOTE: The HTML options &lt;code&gt;disabled&lt;/code&gt;, &lt;code&gt;readonly&lt;/code&gt;, and &lt;code&gt;multiple&lt;/code&gt; can all be treated as booleans. So specifying &lt;code&gt;disabled: true&lt;/code&gt; will give &lt;code&gt;disabled=&quot;disabled&quot;&lt;/code&gt;.</source>
          <target state="translated">注意：HTML选项 &lt;code&gt;disabled&lt;/code&gt; ， &lt;code&gt;readonly&lt;/code&gt; 和 &lt;code&gt;multiple&lt;/code&gt; 都可以视为布尔值。因此，指定 &lt;code&gt;disabled: true&lt;/code&gt; 将给出 &lt;code&gt;disabled=&quot;disabled&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4273e9c86cc14cbdf878c0d79b4f8635103aeab2" translate="yes" xml:space="preserve">
          <source>NOTE: The default validations with the exception of &lt;code&gt;uniqueness&lt;/code&gt; will work. For example, if you want to check for &lt;code&gt;uniqueness&lt;/code&gt; with &lt;code&gt;hstore&lt;/code&gt; you will need to use a custom validation to handle it.</source>
          <target state="translated">注意： &lt;code&gt;uniqueness&lt;/code&gt; 以外的默认验证将起作用。例如，如果要使用 &lt;code&gt;hstore&lt;/code&gt; 检查 &lt;code&gt;uniqueness&lt;/code&gt; ，则需要使用自定义验证来处理它。</target>
        </trans-unit>
        <trans-unit id="ec2abfcf21d7eecb069b20fd390f5d0cd5e855b1" translate="yes" xml:space="preserve">
          <source>NOTE: The formatting and content of this middleware's output is intended for human consumption, and should be expected to change between releases.</source>
          <target state="translated">注意:该中间件的输出格式和内容是供人使用的,在不同的版本之间应该会有变化。</target>
        </trans-unit>
        <trans-unit id="df6a3d05f48d5164f01397df599343fc4f7b977f" translate="yes" xml:space="preserve">
          <source>NOTE: The returned records are in the same order as the ids you provide. If you want the results to be sorted by database, you can use &lt;a href=&quot;querymethods#method-i-where&quot;&gt;&lt;code&gt;ActiveRecord::QueryMethods#where&lt;/code&gt;&lt;/a&gt; method and provide an explicit &lt;a href=&quot;querymethods#method-i-order&quot;&gt;&lt;code&gt;ActiveRecord::QueryMethods#order&lt;/code&gt;&lt;/a&gt; option. But &lt;a href=&quot;querymethods#method-i-where&quot;&gt;&lt;code&gt;ActiveRecord::QueryMethods#where&lt;/code&gt;&lt;/a&gt; method doesn't raise &lt;a href=&quot;recordnotfound&quot;&gt;&lt;code&gt;ActiveRecord::RecordNotFound&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">注意：返回的记录与您提供的ID的顺序相同。如果希望按数据库对结果进行排序，则可以使用&lt;a href=&quot;querymethods#method-i-where&quot;&gt; &lt;code&gt;ActiveRecord::QueryMethods#where&lt;/code&gt; &lt;/a&gt;方法，并提供一个显式的&lt;a href=&quot;querymethods#method-i-order&quot;&gt; &lt;code&gt;ActiveRecord::QueryMethods#order&lt;/code&gt; &lt;/a&gt;选项。但是&lt;a href=&quot;querymethods#method-i-where&quot;&gt; &lt;code&gt;ActiveRecord::QueryMethods#where&lt;/code&gt; &lt;/a&gt;方法不会引发&lt;a href=&quot;recordnotfound&quot;&gt; &lt;code&gt;ActiveRecord::RecordNotFound&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ba561ebdca75e4e27ed2d7158136f74d0787b8fb" translate="yes" xml:space="preserve">
          <source>NOTE: The returned records are in the same order as the ids you provide. If you want the results to be sorted by database, you can use &lt;a href=&quot;querymethods#method-i-where&quot;&gt;ActiveRecord::QueryMethods#where&lt;/a&gt; method and provide an explicit &lt;a href=&quot;querymethods#method-i-order&quot;&gt;ActiveRecord::QueryMethods#order&lt;/a&gt; option. But &lt;a href=&quot;querymethods#method-i-where&quot;&gt;ActiveRecord::QueryMethods#where&lt;/a&gt; method doesn't raise &lt;a href=&quot;recordnotfound&quot;&gt;ActiveRecord::RecordNotFound&lt;/a&gt;.</source>
          <target state="translated">注意：返回的记录与您提供的ID的顺序相同。如果希望按数据库对结果进行排序，则可以使用&lt;a href=&quot;querymethods#method-i-where&quot;&gt;ActiveRecord :: QueryMethods＃where&lt;/a&gt;方法并提供一个显式的&lt;a href=&quot;querymethods#method-i-order&quot;&gt;ActiveRecord :: QueryMethods＃order&lt;/a&gt;选项。但是&lt;a href=&quot;querymethods#method-i-where&quot;&gt;ActiveRecord :: QueryMethods＃where&lt;/a&gt;方法不会引发&lt;a href=&quot;recordnotfound&quot;&gt;ActiveRecord :: RecordNotFound&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d051f3032ec6e426d27e0a95cae128b377cb5dff" translate="yes" xml:space="preserve">
          <source>NOTE: There is no &lt;code&gt;key_will_change!&lt;/code&gt; method for accessors, use &lt;code&gt;store_will_change!&lt;/code&gt; instead.</source>
          <target state="translated">注意：没有 &lt;code&gt;key_will_change!&lt;/code&gt; 访问器的方法，请使用 &lt;code&gt;store_will_change!&lt;/code&gt; 代替。</target>
        </trans-unit>
        <trans-unit id="762c4a804d75ee92e1459fdc1f1254495115d31d" translate="yes" xml:space="preserve">
          <source>NOTE: This approach has been deprecated for end-user code in favor of &lt;a href=&quot;../module#method-i-thread_mattr_accessor&quot;&gt;thread_mattr_accessor&lt;/a&gt; and friends. Please use that approach instead.</source>
          <target state="translated">注意：不建议最终用户使用此方法，而建议使用&lt;a href=&quot;../module#method-i-thread_mattr_accessor&quot;&gt;thread_mattr_accessor&lt;/a&gt;和朋友。请改用这种方法。</target>
        </trans-unit>
        <trans-unit id="d0de1ac13c80a92b6f77a642c82b1dcfb7e1d9e9" translate="yes" xml:space="preserve">
          <source>NOTE: This check is performed only if &lt;code&gt;password_confirmation&lt;/code&gt; is not &lt;code&gt;nil&lt;/code&gt;. To require confirmation, make sure to add a presence check for the confirmation attribute:</source>
          <target state="translated">注意：仅当 &lt;code&gt;password_confirmation&lt;/code&gt; 不为 &lt;code&gt;nil&lt;/code&gt; 时,才执行此检查。要要求确认，请确保为确认属性添加状态检查：</target>
        </trans-unit>
        <trans-unit id="84dd77619c472769d8bdcac15ddd778d56672d39" translate="yes" xml:space="preserve">
          <source>NOTE: This custom behavior only applies to simple polymorphic URLs where a single model instance is passed and not more complicated forms, e.g:</source>
          <target state="translated">注意:这种自定义行为只适用于传递单个模型实例的简单多态URL,而不适用于更复杂的形式,如</target>
        </trans-unit>
        <trans-unit id="951ec43c360ce92554228518ef500aed9eae55c6" translate="yes" xml:space="preserve">
          <source>NOTE: This validation will not fail if the association hasn't been assigned. If you want to ensure that the association is both present and guaranteed to be valid, you also need to use &lt;a href=&quot;classmethods#method-i-validates_presence_of&quot;&gt;validates_presence_of&lt;/a&gt;.</source>
          <target state="translated">注意：如果尚未分配关联，则此验证不会失败。如果要确保关联既存在又保证有效，则还需要使用&lt;a href=&quot;classmethods#method-i-validates_presence_of&quot;&gt;validates_presence_of&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e4e81557c5494f5f1a9d85acc000f2a8822047be" translate="yes" xml:space="preserve">
          <source>NOTE: This validation will not fail while using it with an association if the latter was assigned but not valid. If you want to ensure that it is both present and valid, you also need to use &lt;a href=&quot;classmethods#method-i-validates_associated&quot;&gt;validates_associated&lt;/a&gt;.</source>
          <target state="translated">注意：如果已将关联与关联一起使用，但此验证无效，则验证不会失败。如果要确保它既存在又有效，则还需要使用&lt;a href=&quot;classmethods#method-i-validates_associated&quot;&gt;validates_associated&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d5f9e20a8fba6546eac5061bae525520123d4e92" translate="yes" xml:space="preserve">
          <source>NOTE: This won't affect any &lt;code&gt;ActiveSupport::TimeWithZone&lt;/code&gt; objects that have already been created, e.g. any model timestamp attributes that have been read before the block will remain in the application's default timezone.</source>
          <target state="translated">注意：这不会影响已经创建的任何 &lt;code&gt;ActiveSupport::TimeWithZone&lt;/code&gt; 对象，例如，在块之前读取的任何模型时间戳属性都将保留在应用程序的默认时区中。</target>
        </trans-unit>
        <trans-unit id="01485856ed54cb882a5920d009b94f662f247905" translate="yes" xml:space="preserve">
          <source>NOTE: You cannot call class methods implicitly inside of with_options. You can access these methods using the class name instead:</source>
          <target state="translated">注意:你不能在with_options中隐式调用类方法。你可以使用类名来访问这些方法。</target>
        </trans-unit>
        <trans-unit id="001af184a34c3b7f841644c2049b13fde9247dcf" translate="yes" xml:space="preserve">
          <source>NOTE: queue_classic supports job scheduling since version 3.1. For older versions you can use the queue_classic-later gem.</source>
          <target state="translated">注意:queue_classic从3.1版本开始支持作业调度。对于旧版本,你可以使用queue_classic-later gem。</target>
        </trans-unit>
        <trans-unit id="fa2e3aa9db1f23e790f7456ee1a1e5d29681ed24" translate="yes" xml:space="preserve">
          <source>NOT_NULL_VIOLATION</source>
          <target state="translated">NOT_NULL_VIOLATION</target>
        </trans-unit>
        <trans-unit id="d2a96aa7908b40b3466fee80b9d1ee30c01975eb" translate="yes" xml:space="preserve">
          <source>NO_CACHE</source>
          <target state="translated">NO_CACHE</target>
        </trans-unit>
        <trans-unit id="00b1f4e9b252474c44034ab40ad8a0aa89bcea94" translate="yes" xml:space="preserve">
          <source>NO_CONTENT_CODES</source>
          <target state="translated">NO_CONTENT_CODES</target>
        </trans-unit>
        <trans-unit id="150876396a763bfc0cea64c9d8c23622329252d0" translate="yes" xml:space="preserve">
          <source>NO_STORE</source>
          <target state="translated">NO_STORE</target>
        </trans-unit>
        <trans-unit id="d21e27fa2aab628c195a197ed9f03845aeb79542" translate="yes" xml:space="preserve">
          <source>NULL_ORIGIN_MESSAGE</source>
          <target state="translated">NULL_ORIGIN_MESSAGE</target>
        </trans-unit>
        <trans-unit id="99a01813d236bc88b0d2843edbc671a623558b8d" translate="yes" xml:space="preserve">
          <source>NUMERIC_VALUE_OUT_OF_RANGE</source>
          <target state="translated">NUMERIC_VALUE_OUT_OF_RANGE</target>
        </trans-unit>
        <trans-unit id="70baa5f2e3ea149d3efba73d8ae1136c8b2465d4" translate="yes" xml:space="preserve">
          <source>Name of gem where method is deprecated</source>
          <target state="translated">方法被废弃的 gem 的名称</target>
        </trans-unit>
        <trans-unit id="32e659ad4b09e8447ec3181bf0a4d92b88b4c1c6" translate="yes" xml:space="preserve">
          <source>Name of the channel class</source>
          <target state="translated">通道类的名称</target>
        </trans-unit>
        <trans-unit id="71a2fbae76fe99fa8a275b3c0d7d46236e5b55a9" translate="yes" xml:space="preserve">
          <source>Name of the mailer class</source>
          <target state="translated">邮件类的名称</target>
        </trans-unit>
        <trans-unit id="031346423a1b0ce1d227b1b30affcb044013a924" translate="yes" xml:space="preserve">
          <source>Name of the middleware</source>
          <target state="translated">中间件名称</target>
        </trans-unit>
        <trans-unit id="78457f7d39785050562a7dff3d2e99a2e0e79866" translate="yes" xml:space="preserve">
          <source>Name of the operation</source>
          <target state="translated">业务名称</target>
        </trans-unit>
        <trans-unit id="03122e3a5b21f57d2d883c6a0a49357e202d911c" translate="yes" xml:space="preserve">
          <source>Name of the service</source>
          <target state="translated">服务名称</target>
        </trans-unit>
        <trans-unit id="485336a1ad820f743cd287405e70730b21d6ded3" translate="yes" xml:space="preserve">
          <source>Name of the store class</source>
          <target state="translated">商店类的名称</target>
        </trans-unit>
        <trans-unit id="1c4922e237a35b808877d9a82e3b4f1d76a9d175" translate="yes" xml:space="preserve">
          <source>Name#!~</source>
          <target state="translated">Name#!~</target>
        </trans-unit>
        <trans-unit id="e792f5520042a09fdd9b5e1e673cfeee3c77200f" translate="yes" xml:space="preserve">
          <source>Name#&amp;lt;=&amp;gt;</source>
          <target state="translated">Name#&amp;lt;=&amp;gt;</target>
        </trans-unit>
        <trans-unit id="1179728f0d5f43d5293a76a78366464d8a60734c" translate="yes" xml:space="preserve">
          <source>Name#==</source>
          <target state="translated">Name#==</target>
        </trans-unit>
        <trans-unit id="72068bf4dc62054d1aa334d91a8f73f1a4df79d4" translate="yes" xml:space="preserve">
          <source>Name#===</source>
          <target state="translated">Name#===</target>
        </trans-unit>
        <trans-unit id="7e2c499ce65cfd2fc2c0d8d2ec1ae1cf9580ba97" translate="yes" xml:space="preserve">
          <source>Name#=~</source>
          <target state="translated">Name#=~</target>
        </trans-unit>
        <trans-unit id="e3a602bd022b88eb5fde04d80ef58513bf53d879" translate="yes" xml:space="preserve">
          <source>Name#cache_key</source>
          <target state="translated">Name#cache_key</target>
        </trans-unit>
        <trans-unit id="4681debcf82ac876bdf9bce21fce76c198d4aa93" translate="yes" xml:space="preserve">
          <source>Name#collection</source>
          <target state="translated">Name#collection</target>
        </trans-unit>
        <trans-unit id="ddf13fdc6f4b9d40165f558c9f93bad094528b73" translate="yes" xml:space="preserve">
          <source>Name#element</source>
          <target state="translated">Name#element</target>
        </trans-unit>
        <trans-unit id="463ae0c60d41feba7ad71200788dc4337d894175" translate="yes" xml:space="preserve">
          <source>Name#eql?</source>
          <target state="translated">Name#eql?</target>
        </trans-unit>
        <trans-unit id="98daf91647588f6bd7efd46dce99631c206bb5c1" translate="yes" xml:space="preserve">
          <source>Name#human</source>
          <target state="translated">Name#human</target>
        </trans-unit>
        <trans-unit id="c97e546358582b5a5ba1ea7bdf50be71b53e922b" translate="yes" xml:space="preserve">
          <source>Name#i18n_key</source>
          <target state="translated">Name#i18n_key</target>
        </trans-unit>
        <trans-unit id="c22528385d14458160cc452921eaab5c5a7bdce5" translate="yes" xml:space="preserve">
          <source>Name#match?</source>
          <target state="translated">Name#match?</target>
        </trans-unit>
        <trans-unit id="eee58f9d0bbf2eb7debc13e44da843d09fd29e93" translate="yes" xml:space="preserve">
          <source>Name#name</source>
          <target state="translated">Name#name</target>
        </trans-unit>
        <trans-unit id="18b2ab85207f22841861f5f4e4e3c8548355b26c" translate="yes" xml:space="preserve">
          <source>Name#param_key</source>
          <target state="translated">Name#param_key</target>
        </trans-unit>
        <trans-unit id="d7cc97c1964b5845cb4a881ef26f71711ce1bde7" translate="yes" xml:space="preserve">
          <source>Name#plural</source>
          <target state="translated">Name#plural</target>
        </trans-unit>
        <trans-unit id="c5f2701a378862cb6c909900693c993cdb5a070a" translate="yes" xml:space="preserve">
          <source>Name#route_key</source>
          <target state="translated">Name#route_key</target>
        </trans-unit>
        <trans-unit id="ea2815d1e3255ea3fe84eecd0b1534fda2f22333" translate="yes" xml:space="preserve">
          <source>Name#singular</source>
          <target state="translated">Name#singular</target>
        </trans-unit>
        <trans-unit id="3f1cb4167052af9701bd98eaab092beb46b304fb" translate="yes" xml:space="preserve">
          <source>Name#singular_route_key</source>
          <target state="translated">Name#singular_route_key</target>
        </trans-unit>
        <trans-unit id="5a69bdd1ef58b83bac730aaf7e46814d70697147" translate="yes" xml:space="preserve">
          <source>Name#to_s</source>
          <target state="translated">Name#to_s</target>
        </trans-unit>
        <trans-unit id="7ce74ccf007c0a9889745b2a5abd494e855bfcfa" translate="yes" xml:space="preserve">
          <source>Name#to_str</source>
          <target state="translated">Name#to_str</target>
        </trans-unit>
        <trans-unit id="055abe0c93806fd5fddede2eb9dd54fec55fd4c4" translate="yes" xml:space="preserve">
          <source>Name::new</source>
          <target state="translated">Name::new</target>
        </trans-unit>
        <trans-unit id="552b247919a3a4142c7193f3218e6c006dc56731" translate="yes" xml:space="preserve">
          <source>NameError</source>
          <target state="translated">NameError</target>
        </trans-unit>
        <trans-unit id="cd2bcf0c29669d641e5e068f2807dc580ed514d4" translate="yes" xml:space="preserve">
          <source>NameError#missing_name</source>
          <target state="translated">NameError#missing_name</target>
        </trans-unit>
        <trans-unit id="6519308d40a377cea33b21720a5e1eee430463f7" translate="yes" xml:space="preserve">
          <source>NameError#missing_name?</source>
          <target state="translated">NameError#missing_name?</target>
        </trans-unit>
        <trans-unit id="83cd88833f32f706e162e5b2c5207612273bba68" translate="yes" xml:space="preserve">
          <source>Named Route Helper</source>
          <target state="translated">指定路线助手</target>
        </trans-unit>
        <trans-unit id="6243d7a9ebe509fa90d17fc1dec58ea6b19bcd3f" translate="yes" xml:space="preserve">
          <source>Named routes</source>
          <target state="translated">名义路线</target>
        </trans-unit>
        <trans-unit id="fb73760ca2f5e5b7055b35a7dfc2d2a936f9ee3d" translate="yes" xml:space="preserve">
          <source>Named scopes can also have extensions, just as with &lt;a href=&quot;../../associations/classmethods#method-i-has_many&quot;&gt;has_many&lt;/a&gt; declarations:</source>
          <target state="translated">就像&lt;a href=&quot;../../associations/classmethods#method-i-has_many&quot;&gt;has_many&lt;/a&gt;声明一样，命名范围也可以具有扩展名：</target>
        </trans-unit>
        <trans-unit id="c53b64fd17c082e6beb4e1aca64ab7d44f35aa7e" translate="yes" xml:space="preserve">
          <source>Namespace isolation to &lt;code&gt;config/routes.rb&lt;/code&gt;:</source>
          <target state="translated">命名空间与 &lt;code&gt;config/routes.rb&lt;/code&gt; 的隔离：</target>
        </trans-unit>
        <trans-unit id="79e8ca566bc6852923638a4ac14a1f95414dd757" translate="yes" xml:space="preserve">
          <source>Namespace isolation to &lt;code&gt;lib/blorgh/engine.rb&lt;/code&gt;:</source>
          <target state="translated">命名空间隔离到 &lt;code&gt;lib/blorgh/engine.rb&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="2d56b45380481a0442803331c3b08a5174717f0e" translate="yes" xml:space="preserve">
          <source>Namespaces are supported. The following calls include &lt;code&gt;Foo::BarHelper&lt;/code&gt;:</source>
          <target state="translated">支持命名空间。以下调用包括 &lt;code&gt;Foo::BarHelper&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="8b4617b659a51d0b5756991a46730570511eef04" translate="yes" xml:space="preserve">
          <source>Naming</source>
          <target state="translated">Naming</target>
        </trans-unit>
        <trans-unit id="8af56df8a9cb35f56b67edd6d269d4e86defc0d0" translate="yes" xml:space="preserve">
          <source>Naming Conventions</source>
          <target state="translated">命名惯例</target>
        </trans-unit>
        <trans-unit id="3c2aa7c616223e41c395f07cffdda74786d5855d" translate="yes" xml:space="preserve">
          <source>Naming Routes</source>
          <target state="translated">命名路线</target>
        </trans-unit>
        <trans-unit id="727e70bd9d31b16f99e09131ffa84f73d9c0cdab" translate="yes" xml:space="preserve">
          <source>Naming conflicts of this kind are rare in practice, but if one occurs, &lt;code&gt;require_dependency&lt;/code&gt; provides a solution by ensuring that the constant needed to trigger the heuristic is defined in the conflicting place.</source>
          <target state="translated">这种命名冲突在实践中很少见，但是如果发生冲突， &lt;code&gt;require_dependency&lt;/code&gt; 通过确保在冲突的地方定义触发启发式算法所需的常量来提供一种解决方案。</target>
        </trans-unit>
        <trans-unit id="003199f690943e090431ea9315afa6128057cf84" translate="yes" xml:space="preserve">
          <source>Naming#model_name</source>
          <target state="translated">Naming#model_name</target>
        </trans-unit>
        <trans-unit id="37b2dfaa964981c5857c8884cc0c8a3ba035ecb2" translate="yes" xml:space="preserve">
          <source>Naming::param_key</source>
          <target state="translated">Naming::param_key</target>
        </trans-unit>
        <trans-unit id="15a5e01708eab09298595ec3df33c78823c5effa" translate="yes" xml:space="preserve">
          <source>Naming::plural</source>
          <target state="translated">Naming::plural</target>
        </trans-unit>
        <trans-unit id="e94910e8a8fee93c260867ec51d1f9417720d305" translate="yes" xml:space="preserve">
          <source>Naming::route_key</source>
          <target state="translated">Naming::route_key</target>
        </trans-unit>
        <trans-unit id="b08cbd482856c7e71807d58479b402a5eb900c01" translate="yes" xml:space="preserve">
          <source>Naming::singular</source>
          <target state="translated">Naming::singular</target>
        </trans-unit>
        <trans-unit id="e81567d4f4bc1b7dbbb3dc05722255fd642072fd" translate="yes" xml:space="preserve">
          <source>Naming::singular_route_key</source>
          <target state="translated">Naming::singular_route_key</target>
        </trans-unit>
        <trans-unit id="607b36733fc1c205aa141382646fa32e1828d2be" translate="yes" xml:space="preserve">
          <source>Naming::uncountable?</source>
          <target state="translated">Naming::uncountable?</target>
        </trans-unit>
        <trans-unit id="c7fccf3309993cfc8b035745c98b4d3c7546b8da" translate="yes" xml:space="preserve">
          <source>Neither of these rails commands do anything you could not do with &lt;code&gt;db:migrate&lt;/code&gt;. They are simply more convenient, since you do not need to explicitly specify the version to migrate to.</source>
          <target state="translated">这些rails命令都不能执行 &lt;code&gt;db:migrate&lt;/code&gt; 无法完成的任何操作。它们更加方便，因为您无需显式指定要迁移到的版本。</target>
        </trans-unit>
        <trans-unit id="adf5561db875bd103af28bb2ff6b642ea0049140" translate="yes" xml:space="preserve">
          <source>Neither of these rails commands do anything you could not do with &lt;code&gt;db:migrate&lt;/code&gt;. They are there for convenience, since you do not need to explicitly specify the version to migrate to.</source>
          <target state="translated">这些rails命令都不能执行 &lt;code&gt;db:migrate&lt;/code&gt; 无法完成的任何操作。它们在这里是为了方便，因为您无需显式指定要迁移到的版本。</target>
        </trans-unit>
        <trans-unit id="e509697d698a7906a469d4a7b75c6a68f919eb56" translate="yes" xml:space="preserve">
          <source>Nested Associations</source>
          <target state="translated">嵌套协会</target>
        </trans-unit>
        <trans-unit id="7fba4d7bfc8f67d21d0ab22eb56f0af865916a65" translate="yes" xml:space="preserve">
          <source>Nested Attributes Examples</source>
          <target state="translated">嵌套属性示例</target>
        </trans-unit>
        <trans-unit id="4c468c4b63e979418047fd8eb368f74fa116c4f0" translate="yes" xml:space="preserve">
          <source>Nested Forms</source>
          <target state="translated">嵌套表格</target>
        </trans-unit>
        <trans-unit id="248022a870eb27897fa53e16452caafdbdabcf57" translate="yes" xml:space="preserve">
          <source>Nested Resources</source>
          <target state="translated">嵌套资源</target>
        </trans-unit>
        <trans-unit id="a886336ca42a0ed213b8b9ef83363bbd6b3472ac" translate="yes" xml:space="preserve">
          <source>Nested attribute writers are normal setter methods named after an association. The most common way of defining these writers is either with &lt;code&gt;accepts_nested_attributes_for&lt;/code&gt; in a model definition or by defining a method with the proper name. For example: the attribute writer for the association &lt;code&gt;:address&lt;/code&gt; is called &lt;code&gt;address_attributes=&lt;/code&gt;.</source>
          <target state="translated">嵌套属性编写器是以关联命名的普通设置方法。定义这些编写器的最常见方法是在模型定义中使用 &lt;code&gt;accepts_nested_attributes_for&lt;/code&gt; 或通过使用适当名称定义方法。例如：关联 &lt;code&gt;:address&lt;/code&gt; 的属性 &lt;code&gt;address_attributes=&lt;/code&gt; 器称为address_attributes =。</target>
        </trans-unit>
        <trans-unit id="8dba121940b3381c7ce96a44cb7145f206ea973c" translate="yes" xml:space="preserve">
          <source>Nested attributes allow you to save attributes on associated records through the parent. By default nested attribute updating is turned off and you can enable it using the &lt;a href=&quot;classmethods#method-i-accepts_nested_attributes_for&quot;&gt;#accepts_nested_attributes_for&lt;/a&gt; class method. When you enable nested attributes an attribute writer is defined on the model.</source>
          <target state="translated">嵌套属性允许您通过父级将属性保存在关联记录上。默认情况下，嵌套属性更新处于关闭状态，您可以使用&lt;a href=&quot;classmethods#method-i-accepts_nested_attributes_for&quot;&gt;#accepts_nested_attributes_for&lt;/a&gt;类方法启用它。启用嵌套属性时，将在模型上定义属性编写器。</target>
        </trans-unit>
        <trans-unit id="06dc580c13292fd55390e8a982f7a12ab899090b" translate="yes" xml:space="preserve">
          <source>Nested attributes allow you to save attributes on associated records through the parent. By default nested attribute updating is turned off and you can enable it using the &lt;a href=&quot;classmethods#method-i-accepts_nested_attributes_for&quot;&gt;&lt;code&gt;accepts_nested_attributes_for&lt;/code&gt;&lt;/a&gt; class method. When you enable nested attributes an attribute writer is defined on the model.</source>
          <target state="translated">嵌套属性使您可以通过父级将属性保存在关联记录上。默认情况下，嵌套属性更新处于关闭状态，您可以使用&lt;a href=&quot;classmethods#method-i-accepts_nested_attributes_for&quot;&gt; &lt;code&gt;accepts_nested_attributes_for&lt;/code&gt; &lt;/a&gt;类方法启用它。启用嵌套属性时，将在模型上定义属性编写器。</target>
        </trans-unit>
        <trans-unit id="76f1637e9c296faeb50bd64d9b1abd9662cb9a3a" translate="yes" xml:space="preserve">
          <source>Nested attributes for an associated collection can also be passed in the form of a hash of hashes instead of an array of hashes:</source>
          <target state="translated">关联集合的嵌套属性也可以以哈希的形式传递,而不是哈希数组。</target>
        </trans-unit>
        <trans-unit id="4a35878c09308aa9049fa9b9a6d7c7e15c3dfe08" translate="yes" xml:space="preserve">
          <source>Nested classes are given table names prefixed by the singular form of the parent's table name. Enclosing modules are not considered.</source>
          <target state="translated">嵌套类的表名是以父表名的单数形式为前缀的。封闭模块不在考虑之列。</target>
        </trans-unit>
        <trans-unit id="63f019e717e0ab6a9f532990a577c18fa3ae04dc" translate="yes" xml:space="preserve">
          <source>Nested joins:</source>
          <target state="translated">嵌套连接。</target>
        </trans-unit>
        <trans-unit id="c66f56f1f5c5f4b1c4c4c05d227838c7dc604645" translate="yes" xml:space="preserve">
          <source>Nested resources and/or namespaces are also supported, as illustrated in the example:</source>
          <target state="translated">如实例所示,还支持嵌套资源和/或命名空间。</target>
        </trans-unit>
        <trans-unit id="ca2f14466890989a0ffb68ac10638261362707cc" translate="yes" xml:space="preserve">
          <source>Nested routes allow you to capture this relationship in your routing. In this case, you could include this route declaration:</source>
          <target state="translated">嵌套路由允许你在路由中捕获这种关系。在这种情况下,你可以包含这个路由声明。</target>
        </trans-unit>
        <trans-unit id="127f49081f658cece5f3811cf0dc1334ffa1512f" translate="yes" xml:space="preserve">
          <source>Nested transactions</source>
          <target state="translated">嵌套交易</target>
        </trans-unit>
        <trans-unit id="c835d6d0c484ded0471029d4ba8a6d1f070134ea" translate="yes" xml:space="preserve">
          <source>Nested transactions support</source>
          <target state="translated">支持嵌套交易</target>
        </trans-unit>
        <trans-unit id="f06563daf6842a8e082fd4615e320fc869bb69d9" translate="yes" xml:space="preserve">
          <source>Nesting</source>
          <target state="translated">Nesting</target>
        </trans-unit>
        <trans-unit id="091718b4816f1f70d7c2f882eaebf502f50ff1e1" translate="yes" xml:space="preserve">
          <source>Nesting and Qualified Constants</source>
          <target state="translated">嵌套和限定常量</target>
        </trans-unit>
        <trans-unit id="4970c28f364d041c28f5d5ff2bc88daf1a13ad01" translate="yes" xml:space="preserve">
          <source>Network Address Types</source>
          <target state="translated">网络地址类型</target>
        </trans-unit>
        <trans-unit id="4e76369081894cf103d91859c60296711dc576f5" translate="yes" xml:space="preserve">
          <source>Network traffic is mostly based on the limited Western alphabet, so new character encodings, such as Unicode, emerged, to transmit characters in other languages. But, this is also a threat to web applications, as malicious code can be hidden in different encodings that the web browser might be able to process, but the web application might not. Here is an attack vector in UTF-8 encoding:</source>
          <target state="translated">网络流量主要是基于有限的西方字母,所以出现了新的字符编码,比如Unicode,来传输其他语言的字符。但是,这对网络应用来说也是一种威胁,因为恶意代码可以隐藏在不同的编码中,网络浏览器可能能够处理,但网络应用可能无法处理。下面是一个UTF-8编码的攻击载体。</target>
        </trans-unit>
        <trans-unit id="9e4bdcfda250e0eb886b5666e1dc9ecfd1c81c93" translate="yes" xml:space="preserve">
          <source>Nevertheless, integration tests may want to inspect controller responses in more detail, and that's when Response can be useful for application developers. &lt;code&gt;Integration&lt;/code&gt; test methods such as ActionDispatch::Integration::Session#get and ActionDispatch::Integration::Session#post return objects of type &lt;a href=&quot;testresponse&quot;&gt;&lt;code&gt;TestResponse&lt;/code&gt;&lt;/a&gt; (which are of course also of type Response).</source>
          <target state="translated">但是，集成测试可能希望更详细地检查控制器响应，这就是响应对应用程序开发人员有用的时候。 &lt;code&gt;Integration&lt;/code&gt; 测试方法，例如ActionDispatch :: Integration :: Session＃get和ActionDispatch :: Integration :: Session＃post返回类型为&lt;a href=&quot;testresponse&quot;&gt; &lt;code&gt;TestResponse&lt;/code&gt; 的&lt;/a&gt;对象（当然，它们也为Response类型）。</target>
        </trans-unit>
        <trans-unit id="869ed4b7fdab7fee2a402b5ed8ba08fa65a80dda" translate="yes" xml:space="preserve">
          <source>Nevertheless, integration tests may want to inspect controller responses in more detail, and that's when Response can be useful for application developers. Integration test methods such as &lt;a href=&quot;integration/requesthelpers#method-i-get&quot;&gt;ActionDispatch::Integration::RequestHelpers#get&lt;/a&gt; and &lt;a href=&quot;integration/requesthelpers#method-i-post&quot;&gt;ActionDispatch::Integration::RequestHelpers#post&lt;/a&gt; return objects of type &lt;a href=&quot;testresponse&quot;&gt;TestResponse&lt;/a&gt; (which are of course also of type Response).</source>
          <target state="translated">但是，集成测试可能希望更详细地检查控制器响应，这就是响应对应用程序开发人员有用的时候。集成测试方法，例如&lt;a href=&quot;integration/requesthelpers#method-i-get&quot;&gt;ActionDispatch :: Integration :: RequestHelpers＃get&lt;/a&gt;和&lt;a href=&quot;integration/requesthelpers#method-i-post&quot;&gt;ActionDispatch :: Integration :: RequestHelpers＃post&lt;/a&gt;返回类型为&lt;a href=&quot;testresponse&quot;&gt;TestResponse的&lt;/a&gt;对象（当然，它们也属于Response类型）。</target>
        </trans-unit>
        <trans-unit id="025519ea3f483eb11a3c8608b8a731eee0947b1b" translate="yes" xml:space="preserve">
          <source>New Features</source>
          <target state="translated">新功能</target>
        </trans-unit>
        <trans-unit id="59f7814b9783bf405ce9a2b8a2eb91a07086d026" translate="yes" xml:space="preserve">
          <source>New Framework Defaults</source>
          <target state="translated">新框架默认值</target>
        </trans-unit>
        <trans-unit id="b5ef8f1886747fec7c06f3960b7cf02d2cd47dae" translate="yes" xml:space="preserve">
          <source>New Rails applications no longer generate functional style controller tests and they should only be used for backward compatibility. Integration style controller tests perform actual requests, whereas functional style controller tests merely simulate a request. Besides, integration tests are as fast as functional tests and provide lot of helpers such as &lt;code&gt;as&lt;/code&gt;, &lt;code&gt;parsed_body&lt;/code&gt; for effective testing of controller actions including even &lt;a href=&quot;api&quot;&gt;&lt;code&gt;API&lt;/code&gt;&lt;/a&gt; endpoints.</source>
          <target state="translated">新的Rails应用程序不再生成功能样式控制器测试，而应仅将它们用于向后兼容。集成样式控制器测试执行实际的请求，而功能样式控制器测试仅模拟一个请求。此外，集成测试是一样快，功能测试，并提供大量的助手如 &lt;code&gt;as&lt;/code&gt; ， &lt;code&gt;parsed_body&lt;/code&gt; 的控制器操作的有效的测试，甚至包括&lt;a href=&quot;api&quot;&gt; &lt;code&gt;API&lt;/code&gt; &lt;/a&gt;端点。</target>
        </trans-unit>
        <trans-unit id="82c45ae6d5b92c7fc2da8f10d18dfa0aa37127c7" translate="yes" xml:space="preserve">
          <source>New Rails applications no longer generate functional style controller tests and they should only be used for backward compatibility. Integration style controller tests perform actual requests, whereas functional style controller tests merely simulate a request. Besides, integration tests are as fast as functional tests and provide lot of helpers such as &lt;code&gt;as&lt;/code&gt;, &lt;code&gt;parsed_body&lt;/code&gt; for effective testing of controller actions including even &lt;a href=&quot;api&quot;&gt;API&lt;/a&gt; endpoints.</source>
          <target state="translated">新的Rails应用程序不再生成功能样式控制器测试，而应仅用于向后兼容。集成样式控制器测试执行实际请求，而功能样式控制器测试仅模拟请求。此外，集成测试是一样快，功能测试，并提供大量的助手如 &lt;code&gt;as&lt;/code&gt; ， &lt;code&gt;parsed_body&lt;/code&gt; 的控制器操作的有效的测试，甚至包括&lt;a href=&quot;api&quot;&gt;API&lt;/a&gt;端点。</target>
        </trans-unit>
        <trans-unit id="7cf53ae5b6704e72f88c820669c6bc32c67a8631" translate="yes" xml:space="preserve">
          <source>New Rails projects are configured to use this implementation in development environment by default.</source>
          <target state="translated">新的Rails项目默认配置为在开发环境中使用该实现。</target>
        </trans-unit>
        <trans-unit id="c95d63982a47c2016210ea389140872807a5f6e4" translate="yes" xml:space="preserve">
          <source>New applications should use &lt;code&gt;zeitwerk&lt;/code&gt; mode (which is the default), and applications being upgrade are strongly encouraged to migrate to &lt;code&gt;zeitwerk&lt;/code&gt; mode. Please check the &lt;a href=&quot;upgrading_ruby_on_rails#autoloading&quot;&gt;&lt;em&gt;Upgrading Ruby on Rails&lt;/em&gt;&lt;/a&gt; guide for details.</source>
          <target state="translated">新应用程序应使用 &lt;code&gt;zeitwerk&lt;/code&gt; 模式（默认设置），强烈建议升级的应用程序迁移到 &lt;code&gt;zeitwerk&lt;/code&gt; 模式。请查看&lt;a href=&quot;upgrading_ruby_on_rails#autoloading&quot;&gt;&lt;em&gt;升级Ruby on Rails&lt;/em&gt;&lt;/a&gt;指南以了解详细信息。</target>
        </trans-unit>
        <trans-unit id="0c893b28bccafb88f76f9633609b9c93a062f23a" translate="yes" xml:space="preserve">
          <source>New applications will include these lines commented out in the production.rb.</source>
          <target state="translated">新的应用程序将包括这些在production.rb中注释出来的行。</target>
        </trans-unit>
        <trans-unit id="4943683ac5afab318415394f93a1c063933cd2e1" translate="yes" xml:space="preserve">
          <source>New features are only added to the master branch and will not be made available in point releases.</source>
          <target state="translated">新功能只添加到主分支,不会在点发布中提供。</target>
        </trans-unit>
        <trans-unit id="ccaf4b4268072c64d096dcb7ec72db000a572a03" translate="yes" xml:space="preserve">
          <source>New features, may contain API changes (Serve as major versions of Semver). Breaking changes are paired with deprecation notices in the previous minor or major release.</source>
          <target state="translated">新功能,可能包含API变化(作为Semver的主要版本)。突破性的变化与上一个次要或主要版本中的废弃通知相匹配。</target>
        </trans-unit>
        <trans-unit id="6c84fb1c0af34488ee6f00a9554a1204b67cf86b" translate="yes" xml:space="preserve">
          <source>New features, will likely contain API changes. The difference between Rails' minor and major releases is the magnitude of breaking changes, and usually reserved for special occasions.</source>
          <target state="translated">新功能,将可能包含API的变化。Rails的次要版本和主要版本的区别在于突破性变化的幅度,通常保留在特殊场合。</target>
        </trans-unit>
        <trans-unit id="850c22852ead9d4a27eec9acc5dd2785ed98f6a9" translate="yes" xml:space="preserve">
          <source>New objects can be instantiated as either empty (pass no construction parameter) or pre-set with attributes but not yet saved (pass a hash with key names matching the associated table column names). In both instances, valid attribute keys are determined by the column names of the associated table &amp;ndash; hence you can't have attributes that aren't part of the table columns.</source>
          <target state="translated">可以将新对象实例化为空（不传递任何构造参数）或使用属性进行预置但尚未保存（传递具有与关联的表列名匹配的键名的散列）。在这两种情况下，有效的属性键均由关联表的列名确定&amp;ndash;因此，您不能拥有不属于表列的属性。</target>
        </trans-unit>
        <trans-unit id="58e4f9e6427a21080bbdeb14fdcf91252bfb5031" translate="yes" xml:space="preserve">
          <source>New rules are added at the top. So in the example above, the irregular rule for octopus will now be the first of the pluralization and singularization rules that is runs. This guarantees that your rules run before any of the rules that may already have been loaded.</source>
          <target state="translated">新的规则会在顶部添加。因此,在上面的例子中,章鱼的不规则规则规则现在将成为复数化和单数化规则中第一个运行的规则。这保证了您的规则在任何已经加载的规则之前运行。</target>
        </trans-unit>
        <trans-unit id="e5b6589f6e1b2065a2343b20e9cdbdd4af676bc1" translate="yes" xml:space="preserve">
          <source>Next the message contains &lt;code&gt;request.formats&lt;/code&gt; which specifies the format of template to be served in response. It is set to &lt;code&gt;text/html&lt;/code&gt; as we requested this page via browser, so Rails is looking for an HTML template.</source>
          <target state="translated">接下来，该消息包含 &lt;code&gt;request.formats&lt;/code&gt; ，它指定要响应的模板的格式。当我们通过浏览器请求此页面时，它设置为 &lt;code&gt;text/html&lt;/code&gt; ，因此Rails正在寻找HTML模板。</target>
        </trans-unit>
        <trans-unit id="6767b8acbd10fc0b00f829278ae1fa51ceecbf6f" translate="yes" xml:space="preserve">
          <source>Next we need to &lt;em&gt;internationalize&lt;/em&gt; our application by abstracting every locale-specific element. Finally, we need to &lt;em&gt;localize&lt;/em&gt; it by providing necessary translations for these abstracts.</source>
          <target state="translated">接下来，我们需要通过抽象每个特定于语言环境的元素来使我们的应用程序&lt;em&gt;国际化&lt;/em&gt;。最后，我们需要通过为这些摘要提供必要的翻译来对其进行&lt;em&gt;本地化&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="109a21d6ff6f2d60ba3c1008a17050d0acac596e" translate="yes" xml:space="preserve">
          <source>Next, let's look at our first assertion:</source>
          <target state="translated">接下来,我们来看看我们的第一个论断。</target>
        </trans-unit>
        <trans-unit id="7ca4fd27013d4638016458828bb8bcf5542d52ea" translate="yes" xml:space="preserve">
          <source>Next, pass the &lt;code&gt;:pool_size&lt;/code&gt; and/or &lt;code&gt;:pool_timeout&lt;/code&gt; options when configuring the cache store:</source>
          <target state="translated">接下来，在配置缓存存储时传递 &lt;code&gt;:pool_size&lt;/code&gt; 和/或 &lt;code&gt;:pool_timeout&lt;/code&gt; 选项：</target>
        </trans-unit>
        <trans-unit id="313433b09f8307e7e5ca150e5483eea4b6548eb6" translate="yes" xml:space="preserve">
          <source>Next, the &lt;code&gt;scaffold_controller&lt;/code&gt; generator is invoked, generating a controller called &lt;code&gt;Blorgh::ArticlesController&lt;/code&gt; (at &lt;code&gt;app/controllers/blorgh/articles_controller.rb&lt;/code&gt;) and its related views at &lt;code&gt;app/views/blorgh/articles&lt;/code&gt;. This generator also generates tests for the controller (&lt;code&gt;test/controllers/blorgh/articles_controller_test.rb&lt;/code&gt; and &lt;code&gt;test/system/blorgh/articles_test.rb&lt;/code&gt;) and a helper (&lt;code&gt;app/helpers/blorgh/articles_helper.rb&lt;/code&gt;).</source>
          <target state="translated">接下来，调用 &lt;code&gt;scaffold_controller&lt;/code&gt; 生成器，生成一个名为 &lt;code&gt;Blorgh::ArticlesController&lt;/code&gt; 的控制器（位于 &lt;code&gt;app/controllers/blorgh/articles_controller.rb&lt;/code&gt; ）及其相关视图，位于 &lt;code&gt;app/views/blorgh/articles&lt;/code&gt; 。该生成器还会为控制器（ &lt;code&gt;test/controllers/blorgh/articles_controller_test.rb&lt;/code&gt; 和 &lt;code&gt;test/system/blorgh/articles_test.rb&lt;/code&gt; ）和辅助 &lt;code&gt;app/helpers/blorgh/articles_helper.rb&lt;/code&gt; （app / helpers / blorgh / articles_helper.rb）生成测试。</target>
        </trans-unit>
        <trans-unit id="40bc064bdc43c09c7cef9fb43ea119e01e614001" translate="yes" xml:space="preserve">
          <source>Next, the &lt;code&gt;test_unit&lt;/code&gt; generator is invoked for this model, generating a model test at &lt;code&gt;test/models/blorgh/article_test.rb&lt;/code&gt; (rather than &lt;code&gt;test/models/article_test.rb&lt;/code&gt;) and a fixture at &lt;code&gt;test/fixtures/blorgh/articles.yml&lt;/code&gt; (rather than &lt;code&gt;test/fixtures/articles.yml&lt;/code&gt;).</source>
          <target state="translated">接下来，为此模型调用 &lt;code&gt;test_unit&lt;/code&gt; 生成器，在 &lt;code&gt;test/models/blorgh/article_test.rb&lt;/code&gt; （而不是 &lt;code&gt;test/models/article_test.rb&lt;/code&gt; ）生成模型测试，并在 &lt;code&gt;test/fixtures/blorgh/articles.yml&lt;/code&gt; 生成夹具（而不是 &lt;code&gt;test/fixtures/articles.yml&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="652c33338cb22e43de7f0560517c2ebd49ae8f39" translate="yes" xml:space="preserve">
          <source>Next, the partial that this line will render needs to exist. Create a new directory at &lt;code&gt;app/views/blorgh/comments&lt;/code&gt; and in it a new file called &lt;code&gt;_form.html.erb&lt;/code&gt; which has this content to create the required partial:</source>
          <target state="translated">接下来，该行将要呈现的部分内容必须存在。在 &lt;code&gt;app/views/blorgh/comments&lt;/code&gt; 中创建一个新目录，并在其中创建一个名为 &lt;code&gt;_form.html.erb&lt;/code&gt; 的新文件，该文件具有以下内容，可用于创建所需的局部文件：</target>
        </trans-unit>
        <trans-unit id="acf9d80ade823a9926ce223f831b819c233b8f93" translate="yes" xml:space="preserve">
          <source>Next, there needs to be a form so that comments can be created on an article. To add this, put this line underneath the call to &lt;code&gt;render @article.comments&lt;/code&gt; in &lt;code&gt;app/views/blorgh/articles/show.html.erb&lt;/code&gt;:</source>
          <target state="translated">接下来，需要有一种表单，以便可以在文章上创建评论。要添加此代码，请将此行放在在 &lt;code&gt;app/views/blorgh/articles/show.html.erb&lt;/code&gt; 中 &lt;code&gt;render @article.comments&lt;/code&gt; 的调用下面：</target>
        </trans-unit>
        <trans-unit id="5ff2d584c2e41a9b0f9b33f4ba937921760355d0" translate="yes" xml:space="preserve">
          <source>Next, we need to create the &lt;code&gt;update&lt;/code&gt; action in &lt;code&gt;app/controllers/articles_controller.rb&lt;/code&gt;. Add it between the &lt;code&gt;create&lt;/code&gt; action and the &lt;code&gt;private&lt;/code&gt; method:</source>
          <target state="translated">接下来，我们需要在 &lt;code&gt;app/controllers/articles_controller.rb&lt;/code&gt; 中创建 &lt;code&gt;update&lt;/code&gt; 操作。将其添加到 &lt;code&gt;create&lt;/code&gt; 操作和 &lt;code&gt;private&lt;/code&gt; 方法之间：</target>
        </trans-unit>
        <trans-unit id="f4802c4e596e6d343d4a0852de355df71a877078" translate="yes" xml:space="preserve">
          <source>Next, we need to update our &lt;code&gt;Blorgh::ArticleController#article_params&lt;/code&gt; method to permit the new form parameter:</source>
          <target state="translated">接下来，我们需要更新 &lt;code&gt;Blorgh::ArticleController#article_params&lt;/code&gt; 方法以允许新的表单参数：</target>
        </trans-unit>
        <trans-unit id="06fff06f79987e2925e5b74dcec7e5507faadd75" translate="yes" xml:space="preserve">
          <source>Next, we need to update our &lt;code&gt;Blorgh::ArticlesController#article_params&lt;/code&gt; method to permit the new form parameter:</source>
          <target state="translated">接下来，我们需要更新 &lt;code&gt;Blorgh::ArticlesController#article_params&lt;/code&gt; 方法以允许新的表单参数：</target>
        </trans-unit>
        <trans-unit id="15a60c317f25c93fd22981b24bd2d350ba9acf0c" translate="yes" xml:space="preserve">
          <source>Next, we will generate the Car model that inherits from Vehicle. For this, we can use the &lt;code&gt;--parent=PARENT&lt;/code&gt; option, which will generate a model that inherits from the specified parent and without equivalent migration (since the table already exists).</source>
          <target state="translated">接下来，我们将生成从Vehicle继承的Car模型。为此，我们可以使用 &lt;code&gt;--parent=PARENT&lt;/code&gt; 选项，该选项将生成一个模型，该模型从指定的父对象继承而无需进行等效迁移（因为该表已经存在）。</target>
        </trans-unit>
        <trans-unit id="e35efe3520fc6014820c61a3334ada013d78945e" translate="yes" xml:space="preserve">
          <source>Next, we will generate the three models that inherit from Vehicle. For this, we can use the &lt;code&gt;--parent=PARENT&lt;/code&gt; option, which will generate a model that inherits from the specified parent and without equivalent migration (since the table already exists).</source>
          <target state="translated">接下来，我们将生成从Vehicle继承的三个模型。为此，我们可以使用 &lt;code&gt;--parent=PARENT&lt;/code&gt; 选项，该选项将生成一个模型，该模型从指定的父对象继承而无需进行等效迁移（因为该表已经存在）。</target>
        </trans-unit>
        <trans-unit id="599b45c8b1a4abe02f50f7999c00f774c6c961f6" translate="yes" xml:space="preserve">
          <source>Next, you have to tell Rails where your actual home page is located.</source>
          <target state="translated">接下来,你必须告诉Rails你真正的主页在哪里。</target>
        </trans-unit>
        <trans-unit id="21536ceec565955083fa95fe3b89d4e6ea3c5479" translate="yes" xml:space="preserve">
          <source>Nice!</source>
          <target state="translated">Nice!</target>
        </trans-unit>
        <trans-unit id="4b8add796b363b6597a08923490d74903e475356" translate="yes" xml:space="preserve">
          <source>Nil values can be cached.</source>
          <target state="translated">可以缓存无值。</target>
        </trans-unit>
        <trans-unit id="15e1d872b31958c396eaac1d61b9e46aa2f5531f" translate="yes" xml:space="preserve">
          <source>NilClass</source>
          <target state="translated">NilClass</target>
        </trans-unit>
        <trans-unit id="7714fef354b8c1d34f1ea5bdaf4f7461127e5c71" translate="yes" xml:space="preserve">
          <source>NilClass#try</source>
          <target state="translated">NilClass#try</target>
        </trans-unit>
        <trans-unit id="44d04e33768b6d74220565215cdeaf0ed068ca29" translate="yes" xml:space="preserve">
          <source>NilClass#try!</source>
          <target state="translated">NilClass#try!</target>
        </trans-unit>
        <trans-unit id="740f91509e986665a00d7ba80ec5edfc9035eb72" translate="yes" xml:space="preserve">
          <source>No CORS configuration is required for the Disk service since it shares your app&amp;rsquo;s origin.</source>
          <target state="translated">磁盘服务不需要CORS配置，因为它共享您的应用程序的来源。</target>
        </trans-unit>
        <trans-unit id="158227f6a11ceb02d0183bb376e17da5f25f7553" translate="yes" xml:space="preserve">
          <source>No args - Returns &lt;code&gt;false&lt;/code&gt; if the relation is empty, &lt;code&gt;true&lt;/code&gt; otherwise.</source>
          <target state="translated">No args- 如果关系为空，则返回 &lt;code&gt;false&lt;/code&gt; ，否则返回 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8a3f27db7e37442a5e3cfabfca8ff608e7a3a15c" translate="yes" xml:space="preserve">
          <source>No expiry is set on cache entries by default. Redis is expected to be configured with an eviction policy that automatically deletes least-recently or -frequently used keys when it reaches max memory. See &lt;a href=&quot;https://redis.io/topics/lru-cache&quot;&gt;redis.io/topics/lru-cache&lt;/a&gt; for cache server setup.</source>
          <target state="translated">默认情况下，未对缓存条目设置有效期限。预计Redis将配置有逐出策略，该策略将在达到最大内存时自动删除最近最少使用或最常用的密钥。有关缓存服务器设置，请参见&lt;a href=&quot;https://redis.io/topics/lru-cache&quot;&gt;redis.io/topics/lru-cache&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ecec418cda521616578d32392c1ebbdd160c1be8" translate="yes" xml:space="preserve">
          <source>No further processing</source>
          <target state="translated">无进一步处理</target>
        </trans-unit>
        <trans-unit id="db97ed13f2ed7f611f5ba31f10f0d82c2012ecc9" translate="yes" xml:space="preserve">
          <source>No namespace is set by default. Provide one if the Redis cache server is shared with other apps: &lt;code&gt;namespace: 'myapp-cache'&lt;/code&gt;.</source>
          <target state="translated">默认情况下未设置名称空间。如果Redis缓存服务器与其他应用共享，请提供一个： &lt;code&gt;namespace: 'myapp-cache'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2870967411d1177319bcb2013fe0d0d70d0c373c" translate="yes" xml:space="preserve">
          <source>No query is performed if the relation is loaded; the given record is compared to the records in memory. If the relation is unloaded, an efficient existence query is performed, as in &lt;a href=&quot;findermethods#method-i-exists-3F&quot;&gt;&lt;code&gt;exists?&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果该关系已加载，则不执行任何查询；否则，将不执行任何查询。将给定的记录与内存中的记录进行比较。如果该关系已卸载，则执行有效的存在查询，如&lt;a href=&quot;findermethods#method-i-exists-3F&quot;&gt; &lt;code&gt;exists?&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="221a5c8be43af1725cb6eacac4221d7dd3fe4e70" translate="yes" xml:space="preserve">
          <source>No: Does not allow the priority of jobs to be configured.</source>
          <target state="translated">否:不允许配置作业的优先级。</target>
        </trans-unit>
        <trans-unit id="a2a5882be7f25ccecdb39e6626a88b6d1f4e5100" translate="yes" xml:space="preserve">
          <source>No: The adapter does not allow the number of retries to be configured.</source>
          <target state="translated">否:适配器不允许配置重试次数。</target>
        </trans-unit>
        <trans-unit id="c462fcdbca133972f704e7fdc3ae4c7b6599f666" translate="yes" xml:space="preserve">
          <source>No: The adapter does not allow the priority of jobs to be configured.</source>
          <target state="translated">否:适配器不允许配置作业的优先级。</target>
        </trans-unit>
        <trans-unit id="f1ad6734478cb826e9104f29f3625932ace44a8f" translate="yes" xml:space="preserve">
          <source>No: The adapter does not allow the timeout of jobs to be configured.</source>
          <target state="translated">否:适配器不允许配置作业的超时。</target>
        </trans-unit>
        <trans-unit id="16763f29fae6d620d661620376b81b8978bfbd1d" translate="yes" xml:space="preserve">
          <source>No: The adapter will run jobs at the next opportunity and cannot use perform_later.</source>
          <target state="translated">否:适配器将在下一个机会运行作业,不能使用 perform_later。</target>
        </trans-unit>
        <trans-unit id="255548651b6f315ea8148ee71a1dcca3c1b3706e" translate="yes" xml:space="preserve">
          <source>No: The job is run in the same process.</source>
          <target state="translated">否:该作业在同一进程中运行。</target>
        </trans-unit>
        <trans-unit id="444ea91c7df550f94f3d747738c1f1a3466e0cc6" translate="yes" xml:space="preserve">
          <source>NoMethodError</source>
          <target state="translated">NoMethodError</target>
        </trans-unit>
        <trans-unit id="7bdb712b7ee9cb1572c977c6c62388b01305f84f" translate="yes" xml:space="preserve">
          <source>NoTouching</source>
          <target state="translated">NoTouching</target>
        </trans-unit>
        <trans-unit id="4409378f8e0b176c22d8f84d1d9f6e7b19f6bf2f" translate="yes" xml:space="preserve">
          <source>NoTouching#no_touching?</source>
          <target state="translated">NoTouching#no_touching?</target>
        </trans-unit>
        <trans-unit id="c47a7fa1d4ed36caf76d6aae9c8337d194a32586" translate="yes" xml:space="preserve">
          <source>NoTouching::ClassMethods</source>
          <target state="translated">NoTouching::ClassMethods</target>
        </trans-unit>
        <trans-unit id="ba98193055fdb0c7813315b4239b68f38d2b05af" translate="yes" xml:space="preserve">
          <source>NoTouching::ClassMethods#no_touching</source>
          <target state="translated">NoTouching::ClassMethods#no_touching</target>
        </trans-unit>
        <trans-unit id="10b3493287f831e81a438811a1ffba01f8cec4b7" translate="yes" xml:space="preserve">
          <source>Node.js</source>
          <target state="translated">Node.js</target>
        </trans-unit>
        <trans-unit id="ef59dd33658fd629a399aabbada1e44d1143840c" translate="yes" xml:space="preserve">
          <source>Noisy syntax.</source>
          <target state="translated">嘈杂的语法。</target>
        </trans-unit>
        <trans-unit id="a0542163c0ba3f59fb289f1dc9e8dba5d3af2730" translate="yes" xml:space="preserve">
          <source>Non-Resourceful Routes</source>
          <target state="translated">非资源性路线</target>
        </trans-unit>
        <trans-unit id="c55db06fa97f077282c5464f82b0f22e2389c4ca" translate="yes" xml:space="preserve">
          <source>Non-resourceful routes</source>
          <target state="translated">非资源型路线</target>
        </trans-unit>
        <trans-unit id="fd0b7793c252e73868462c36c6ba36d9dd714b74" translate="yes" xml:space="preserve">
          <source>Non-significant zeros after the decimal separator are stripped out by default (set &lt;code&gt;:strip_insignificant_zeros&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; to change that):</source>
          <target state="translated">默认情况下，小数点分隔符后的非有效零被去除（将 &lt;code&gt;:strip_insignificant_zeros&lt;/code&gt; 设置为 &lt;code&gt;false&lt;/code&gt; 可以将其更改）：</target>
        </trans-unit>
        <trans-unit id="6eef6648406c333a4035cd5e60d0bf2ecf2606d7" translate="yes" xml:space="preserve">
          <source>None</source>
          <target state="translated">None</target>
        </trans-unit>
        <trans-unit id="356a42c934b09cbbe5bf46e0b7b4b0ced1bcb0a1" translate="yes" xml:space="preserve">
          <source>Normal callbacks hook into the life cycle of Active Record objects, allowing you to work with those objects at various points. For example, you can use a &lt;code&gt;:before_save&lt;/code&gt; callback to cause something to happen just before an object is saved.</source>
          <target state="translated">正常的回调连接到Active Record对象的生命周期，从而使您可以在各个点上使用这些对象。例如，您可以使用 &lt;code&gt;:before_save&lt;/code&gt; 回调使仅在保存对象之前发生某些事情。</target>
        </trans-unit>
        <trans-unit id="0a13e9d32efa4b424c6392e61c6acc0eb80b45b5" translate="yes" xml:space="preserve">
          <source>Normal use:</source>
          <target state="translated">正常使用。</target>
        </trans-unit>
        <trans-unit id="1ab70b8dd2f6d458c3ed264ce52d8181dab57e68" translate="yes" xml:space="preserve">
          <source>Normalize args by converting &lt;code&gt;render &quot;foo&quot;&lt;/code&gt; to &lt;code&gt;render :action =&amp;gt; &quot;foo&quot;&lt;/code&gt; and &lt;code&gt;render
&quot;foo/bar&quot;&lt;/code&gt; to &lt;code&gt;render :file =&amp;gt;
&quot;foo/bar&quot;&lt;/code&gt;.</source>
          <target state="translated">通过将 &lt;code&gt;render &quot;foo&quot;&lt;/code&gt; 转换为 &lt;code&gt;render :action =&amp;gt; &quot;foo&quot;&lt;/code&gt; 和 &lt;code&gt;render &quot;foo/bar&quot;&lt;/code&gt; 为 &lt;code&gt;render :file =&amp;gt; &quot;foo/bar&quot;&lt;/code&gt; 来规范化args 。</target>
        </trans-unit>
        <trans-unit id="76ebf82afd9f2e7f802d7312d3d247b17cb36365" translate="yes" xml:space="preserve">
          <source>Normalize options.</source>
          <target state="translated">规范化选项。</target>
        </trans-unit>
        <trans-unit id="cfe63d1d809fb134b05b3d5638fd48aa6ce84994" translate="yes" xml:space="preserve">
          <source>Normalizes arguments, options and then delegates &lt;a href=&quot;rendering#method-i-render_to_body&quot;&gt;#render_to_body&lt;/a&gt; and sticks the result in &lt;code&gt;self.response_body&lt;/code&gt;.</source>
          <target state="translated">规范化参数，选项，然后委派&lt;a href=&quot;rendering#method-i-render_to_body&quot;&gt;#render_to_body&lt;/a&gt;并将结果粘贴在 &lt;code&gt;self.response_body&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="4c34340e1f59b977fa03f74950eb939084626d08" translate="yes" xml:space="preserve">
          <source>Normalizes arguments, options and then delegates &lt;a href=&quot;rendering#method-i-render_to_body&quot;&gt;&lt;code&gt;render_to_body&lt;/code&gt;&lt;/a&gt; and sticks the result in &lt;code&gt;self.response_body&lt;/code&gt;.</source>
          <target state="translated">规范化参数，选项，然后委派&lt;a href=&quot;rendering#method-i-render_to_body&quot;&gt; &lt;code&gt;render_to_body&lt;/code&gt; &lt;/a&gt;并将结果 &lt;code&gt;self.response_body&lt;/code&gt; 在self.response_body中。</target>
        </trans-unit>
        <trans-unit id="6b8d8521ec1f363e13523415591e2d1d5a9b1bbc" translate="yes" xml:space="preserve">
          <source>Normally Rails ignores duplicate parameter names. If the parameter name contains an empty set of square brackets &lt;code&gt;[]&lt;/code&gt; then they will be accumulated in an array. If you wanted users to be able to input multiple phone numbers, you could place this in the form:</source>
          <target state="translated">通常，Rails会忽略重复的参数名称。如果参数名称包含一组空的方括号 &lt;code&gt;[]&lt;/code&gt; ,则它们将累积在数组中。如果希望用户能够输入多个电话号码，则可以将其放在以下形式中：</target>
        </trans-unit>
        <trans-unit id="247f896aa006f08e05bcedcbde424ceee9131fe0" translate="yes" xml:space="preserve">
          <source>Normally Rails ignores duplicate parameter names. If the parameter name ends with an empty set of square brackets &lt;code&gt;[]&lt;/code&gt; then they will be accumulated in an array. If you wanted users to be able to input multiple phone numbers, you could place this in the form:</source>
          <target state="translated">通常，Rails会忽略重复的参数名称。如果参数名称以空的方括号 &lt;code&gt;[]&lt;/code&gt; 结尾，则它们将累积在数组中。如果希望用户能够输入多个电话号码，则可以将其放置在以下形式中：</target>
        </trans-unit>
        <trans-unit id="f08e0da51423cc8cb2840120eee1ece651d5987b" translate="yes" xml:space="preserve">
          <source>Normally when you create controllers, helpers and models inside an engine, they are treated as if they were created inside the application itself. This means that all helpers and named routes from the application will be available to your engine's controllers as well.</source>
          <target state="translated">通常当你在引擎中创建控制器、辅助程序和模型时,它们会被当作是在应用程序中创建的。这意味着所有来自应用程序的帮助程序和命名的路由也会被引擎的控制器所使用。</target>
        </trans-unit>
        <trans-unit id="5ef9f817caabf9bb9efcc4d6d589e7a64ec3f630" translate="yes" xml:space="preserve">
          <source>Normally, &lt;code&gt;ApplicationController&lt;/code&gt; is the only controller that inherits from &lt;code&gt;ActionController::API&lt;/code&gt;. All other controllers in turn inherit from &lt;code&gt;ApplicationController&lt;/code&gt;.</source>
          <target state="translated">通常， &lt;code&gt;ApplicationController&lt;/code&gt; 是唯一从 &lt;code&gt;ActionController::API&lt;/code&gt; 继承的控制器。所有其他控制器又继承自 &lt;code&gt;ApplicationController&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b1813582ee34406c4e4de37d56648ffafa91b226" translate="yes" xml:space="preserve">
          <source>Normally, this mechanism is used on a per-client basis. The cache middleware allows us to share this caching mechanism across clients. We can enable cross-client caching in the call to &lt;code&gt;stale?&lt;/code&gt;:</source>
          <target state="translated">通常，此机制是基于每个客户端使用的。缓存中间件使我们可以在客户端之间共享此缓存机制。我们可以在对 &lt;code&gt;stale?&lt;/code&gt; 的调用中启用跨客户端缓存吗？：</target>
        </trans-unit>
        <trans-unit id="8f8bb15dfb81f5ed071f554d571757b2eb818782" translate="yes" xml:space="preserve">
          <source>Normally, you do not have to call this method directly at all. Use the &lt;code&gt;create_and_upload!&lt;/code&gt; class method instead. If you do use this method directly, make sure you are using it on a persisted &lt;a href=&quot;blob&quot;&gt;&lt;code&gt;Blob&lt;/code&gt;&lt;/a&gt; as otherwise another blob's data might get overwritten on the service.</source>
          <target state="translated">通常，您根本不必直接调用此方法。使用 &lt;code&gt;create_and_upload!&lt;/code&gt; 类方法代替。如果确实直接使用此方法，请确保在持久化的&lt;a href=&quot;blob&quot;&gt; &lt;code&gt;Blob&lt;/code&gt; &lt;/a&gt;上使用它，否则另一个Blob的数据可能会在服务上被覆盖。</target>
        </trans-unit>
        <trans-unit id="997531dd7ea0389626b86133c48895591fcda728" translate="yes" xml:space="preserve">
          <source>Normally, you do not have to call this method directly at all. Use the factory class methods of &lt;code&gt;build_after_upload&lt;/code&gt; and &lt;code&gt;create_after_upload!&lt;/code&gt;.</source>
          <target state="translated">通常，您根本不必直接调用此方法。使用 &lt;code&gt;build_after_upload&lt;/code&gt; 和 &lt;code&gt;create_after_upload!&lt;/code&gt; 的工厂类方法！。</target>
        </trans-unit>
        <trans-unit id="cf5007b07c89f0ace0d40e4bbc19ce4ffe7536c3" translate="yes" xml:space="preserve">
          <source>Not all migrations change the schema. Some just fix the data:</source>
          <target state="translated">并非所有的迁移都会改变模式。有些只是修复数据。</target>
        </trans-unit>
        <trans-unit id="2fca96ad94b6af17e7dbcc07cff7f6d533f7b221" translate="yes" xml:space="preserve">
          <source>Not all web servers support streaming out-of-the-box. You need to check the instructions for each of them.</source>
          <target state="translated">并非所有的网络服务器都支持开箱即用的流媒体。你需要查看每个服务器的说明。</target>
        </trans-unit>
        <trans-unit id="06657b8133ea9b4e185fb080234e3a0364fad6ca" translate="yes" xml:space="preserve">
          <source>Not very DRY, eh? We can fix this by using events instead. We'll add a &lt;code&gt;data-*&lt;/code&gt; attribute to our link, and then bind a handler to the click event of every link that has that attribute:</source>
          <target state="translated">不是很干，是吗？我们可以改用事件来解决。我们将向链接添加 &lt;code&gt;data-*&lt;/code&gt; 属性，然后将处理程序绑定到具有该属性的每个链接的click事件：</target>
        </trans-unit>
        <trans-unit id="8a01dd84a7593bdb2c8fb765b3146a0f514f25b7" translate="yes" xml:space="preserve">
          <source>NotNullViolation</source>
          <target state="translated">NotNullViolation</target>
        </trans-unit>
        <trans-unit id="9e126b084c1db58a37584261f9012e35f671ac72" translate="yes" xml:space="preserve">
          <source>Notably, the Rails routing system calls &lt;code&gt;to_param&lt;/code&gt; on models to get a value for the &lt;code&gt;:id&lt;/code&gt; placeholder. &lt;code&gt;ActiveRecord::Base#to_param&lt;/code&gt; returns the &lt;code&gt;id&lt;/code&gt; of a model, but you can redefine that method in your models. For example, given</source>
          <target state="translated">值得注意的是，Rails路由系统在模型上调用 &lt;code&gt;to_param&lt;/code&gt; 以获得 &lt;code&gt;:id&lt;/code&gt; 占位符的值。 &lt;code&gt;ActiveRecord::Base#to_param&lt;/code&gt; 返回模型的 &lt;code&gt;id&lt;/code&gt; ，但是您可以在模型中重新定义该方法。例如，给定</target>
        </trans-unit>
        <trans-unit id="3ae806db7c0984a3428e2d88329b2a10cf8332e7" translate="yes" xml:space="preserve">
          <source>Note about replacing already defined headers:</source>
          <target state="translated">关于替换已经定义的标题的说明。</target>
        </trans-unit>
        <trans-unit id="c095fd5765c7e05c2ff1778309b8fa41345203ed" translate="yes" xml:space="preserve">
          <source>Note also that destroying a record preserves its ID in the model instance, so deleted models are still comparable.</source>
          <target state="translated">还需要注意的是,销毁一条记录会保留它在模型实例中的ID,所以被删除的模型还是可以比较的。</target>
        </trans-unit>
        <trans-unit id="7694cc2f1f0145560dfa9380500275db32ac89c8" translate="yes" xml:space="preserve">
          <source>Note an object is not required to implement all APIs in order to work with Action Pack. This module only intends to provide guidance in case you want all features out of the box.</source>
          <target state="translated">请注意,一个对象不需要实现所有的API才能与Action Pack一起工作。这个模块只是为了提供指导,以防您想获得所有的功能。</target>
        </trans-unit>
        <trans-unit id="d151fd14b51016b3cc7c384691610fb0bb532780" translate="yes" xml:space="preserve">
          <source>Note here that the routes are drawn upon the &lt;code&gt;Blorgh::Engine&lt;/code&gt; object rather than the &lt;code&gt;YourApp::Application&lt;/code&gt; class. This is so that the engine routes are confined to the engine itself and can be mounted at a specific point as shown in the &lt;a href=&quot;#test-directory&quot;&gt;test directory&lt;/a&gt; section. It also causes the engine's routes to be isolated from those routes that are within the application. The &lt;a href=&quot;#routes&quot;&gt;Routes&lt;/a&gt; section of this guide describes it in detail.</source>
          <target state="translated">请注意，路由是在 &lt;code&gt;Blorgh::Engine&lt;/code&gt; 对象而不是 &lt;code&gt;YourApp::Application&lt;/code&gt; 类上绘制的。这样一来，引擎路线就限于引擎本身，并且可以安装在特定位置，如&lt;a href=&quot;#test-directory&quot;&gt;测试目录&lt;/a&gt;部分所示。这还会使引擎的路线与应用程序内的那些路线隔离。本指南的&amp;ldquo; &lt;a href=&quot;#routes&quot;&gt;路线&amp;rdquo;&lt;/a&gt;部分对其进行了详细说明。</target>
        </trans-unit>
        <trans-unit id="24c5cab7750f2ca8837b173b4a826ddf4d2d4cca" translate="yes" xml:space="preserve">
          <source>Note in particular that truncation takes into account the length of the omission string.</source>
          <target state="translated">需要特别注意的是,截断时要考虑到省略字符串的长度。</target>
        </trans-unit>
        <trans-unit id="78b28b6681145d5417ac3c0780f932b9f655ecb1" translate="yes" xml:space="preserve">
          <source>Note in the previous example only one key was symbolized.</source>
          <target state="translated">请注意,在前面的例子中只象征了一个键。</target>
        </trans-unit>
        <trans-unit id="2cf0874701acc0cffe506f4241beac6925cd1806" translate="yes" xml:space="preserve">
          <source>Note in the previous example that increments may be negative.</source>
          <target state="translated">请注意,在前面的例子中,增量可能是负数。</target>
        </trans-unit>
        <trans-unit id="e9212787e26354a3c8b4c889cac5d5888c2c0c12" translate="yes" xml:space="preserve">
          <source>Note that &quot;%0d%0a&quot; is URL-encoded for &quot;\r\n&quot; which is a carriage-return and line-feed (CRLF) in Ruby. So the resulting HTTP header for the second example will be the following because the second Location header field overwrites the first.</source>
          <target state="translated">请注意,&quot;%0d%0a &quot;是URL编码的&quot;\r\n&quot;,在Ruby中是一个回车和换行(CRLF)。所以第二个例子的HTTP头会是下面的,因为第二个Location头会覆盖第一个。</target>
        </trans-unit>
        <trans-unit id="c66d170fe2e3fe3157ac0fda9773660aea982fef" translate="yes" xml:space="preserve">
          <source>Note that &amp;ldquo;TRUNCATE&amp;rdquo; is also a MySQL DDL statement!</source>
          <target state="translated">注意，&amp;ldquo; TRUNCATE&amp;rdquo;也是MySQL DDL语句！</target>
        </trans-unit>
        <trans-unit id="8c4c2b62825cd7958528fd2b7d9a56ab165a975a" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;../nestedattributes/classmethods#method-i-accepts_nested_attributes_for&quot;&gt;&lt;code&gt;NestedAttributes::ClassMethods#accepts_nested_attributes_for&lt;/code&gt;&lt;/a&gt; sets &lt;code&gt;:autosave&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">注意&lt;a href=&quot;../nestedattributes/classmethods#method-i-accepts_nested_attributes_for&quot;&gt; &lt;code&gt;NestedAttributes::ClassMethods#accepts_nested_attributes_for&lt;/code&gt; &lt;/a&gt;将 &lt;code&gt;:autosave&lt;/code&gt; autosave设置为 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a44c012e2aa14d3cf71de66005ce218c80932da4" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;../nestedattributes/classmethods#method-i-accepts_nested_attributes_for&quot;&gt;ActiveRecord::NestedAttributes::ClassMethods#accepts_nested_attributes_for&lt;/a&gt; sets &lt;code&gt;:autosave&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">注意，&lt;a href=&quot;../nestedattributes/classmethods#method-i-accepts_nested_attributes_for&quot;&gt;ActiveRecord :: NestedAttributes :: ClassMethods＃accepts_nested_attributes_for&lt;/a&gt;将 &lt;code&gt;:autosave&lt;/code&gt; autosave设置为 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="665fc2c9ac295036d5b41cca93f31cb2679d5b58" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;api&quot;&gt;&lt;code&gt;API&lt;/code&gt;&lt;/a&gt; only applications don't include this module or a session middleware by default, and so don't require CSRF protection to be configured.</source>
          <target state="translated">请注意，默认情况下，仅&lt;a href=&quot;api&quot;&gt; &lt;code&gt;API&lt;/code&gt; &lt;/a&gt;应用程序不包含此模块或会话中间件，因此不需要配置CSRF保护。</target>
        </trans-unit>
        <trans-unit id="38923273a1ac5388fdafcc0d052b80b100edca09" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;formbuilder#method-i-fields_for&quot;&gt;#fields_for&lt;/a&gt; will automatically generate a hidden field to store the ID of the record. There are circumstances where this hidden field is not needed and you can pass &lt;code&gt;include_id: false&lt;/code&gt; to prevent &lt;a href=&quot;formbuilder#method-i-fields_for&quot;&gt;#fields_for&lt;/a&gt; from rendering it automatically.</source>
          <target state="translated">请注意，&lt;a href=&quot;formbuilder#method-i-fields_for&quot;&gt;＃fields_for&lt;/a&gt;将自动生成一个隐藏字段来存储记录的ID。在某些情况下，不需要此隐藏字段，您可以传递 &lt;code&gt;include_id: false&lt;/code&gt; 以防止&lt;a href=&quot;formbuilder#method-i-fields_for&quot;&gt;#fields_for&lt;/a&gt;自动呈现它。</target>
        </trans-unit>
        <trans-unit id="369d34c452a0924a66d60a14807dc6912723427b" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;formbuilder#method-i-fields_for&quot;&gt;&lt;code&gt;fields_for&lt;/code&gt;&lt;/a&gt; will automatically generate a hidden field to store the ID of the record. There are circumstances where this hidden field is not needed and you can pass &lt;code&gt;include_id: false&lt;/code&gt; to prevent &lt;a href=&quot;formbuilder#method-i-fields_for&quot;&gt;&lt;code&gt;fields_for&lt;/code&gt;&lt;/a&gt; from rendering it automatically.</source>
          <target state="translated">请注意，&lt;a href=&quot;formbuilder#method-i-fields_for&quot;&gt; &lt;code&gt;fields_for&lt;/code&gt; &lt;/a&gt;将自动生成一个隐藏字段以存储记录的ID。在某些情况下，不需要此隐藏字段，您可以传递 &lt;code&gt;include_id: false&lt;/code&gt; 以防止&lt;a href=&quot;formbuilder#method-i-fields_for&quot;&gt; &lt;code&gt;fields_for&lt;/code&gt; &lt;/a&gt;自动呈现它。</target>
        </trans-unit>
        <trans-unit id="58fa56f7cb58d6bceba0d8992232bc1ce70dad69" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;formhelper#method-i-fields_for&quot;&gt;#fields_for&lt;/a&gt; will automatically generate a hidden field to store the ID of the record. There are circumstances where this hidden field is not needed and you can pass &lt;code&gt;include_id: false&lt;/code&gt; to prevent &lt;a href=&quot;formhelper#method-i-fields_for&quot;&gt;#fields_for&lt;/a&gt; from rendering it automatically.</source>
          <target state="translated">请注意，&lt;a href=&quot;formhelper#method-i-fields_for&quot;&gt;＃fields_for&lt;/a&gt;将自动生成一个隐藏字段来存储记录的ID。在某些情况下，不需要此隐藏字段，您可以传递 &lt;code&gt;include_id: false&lt;/code&gt; 以防止&lt;a href=&quot;formhelper#method-i-fields_for&quot;&gt;#fields_for&lt;/a&gt;自动呈现它。</target>
        </trans-unit>
        <trans-unit id="db52c8295caa155c6a4c02476acb794c6f44402f" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;formhelper#method-i-fields_for&quot;&gt;&lt;code&gt;fields_for&lt;/code&gt;&lt;/a&gt; will automatically generate a hidden field to store the ID of the record. There are circumstances where this hidden field is not needed and you can pass &lt;code&gt;include_id: false&lt;/code&gt; to prevent &lt;a href=&quot;formhelper#method-i-fields_for&quot;&gt;&lt;code&gt;fields_for&lt;/code&gt;&lt;/a&gt; from rendering it automatically.</source>
          <target state="translated">请注意，&lt;a href=&quot;formhelper#method-i-fields_for&quot;&gt; &lt;code&gt;fields_for&lt;/code&gt; &lt;/a&gt;将自动生成一个隐藏字段以存储记录的ID。在某些情况下，不需要此隐藏字段，您可以传递 &lt;code&gt;include_id: false&lt;/code&gt; 以防止&lt;a href=&quot;formhelper#method-i-fields_for&quot;&gt; &lt;code&gt;fields_for&lt;/code&gt; &lt;/a&gt;自动呈现它。</target>
        </trans-unit>
        <trans-unit id="8d6baf90f202a6f42a23fe78dcfdfc40689608ba" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;https://github.com/guard/listen#issues--limitations&quot;&gt;some setups are unsupported&lt;/a&gt;.</source>
          <target state="translated">请注意，&lt;a href=&quot;https://github.com/guard/listen#issues--limitations&quot;&gt;某些设置不受支持&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a8b8ef8e6c7fa666e58bf31c01e9fc50f8306bd1" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;querymethods#method-i-includes&quot;&gt;&lt;code&gt;includes&lt;/code&gt;&lt;/a&gt; works with association names while &lt;a href=&quot;querymethods#method-i-references&quot;&gt;&lt;code&gt;references&lt;/code&gt;&lt;/a&gt; needs the actual table name.</source>
          <target state="translated">请注意，&lt;a href=&quot;querymethods#method-i-includes&quot;&gt; &lt;code&gt;includes&lt;/code&gt; &lt;/a&gt;具有关联名称的作品，而&lt;a href=&quot;querymethods#method-i-references&quot;&gt; &lt;code&gt;references&lt;/code&gt; &lt;/a&gt;需要实际的表名称。</target>
        </trans-unit>
        <trans-unit id="73d319a82de5469887e65f4e1b3e5b326d201bb0" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;querymethods#method-i-includes&quot;&gt;includes&lt;/a&gt; works with association names while &lt;a href=&quot;querymethods#method-i-references&quot;&gt;references&lt;/a&gt; needs the actual table name.</source>
          <target state="translated">请注意，&lt;a href=&quot;querymethods#method-i-includes&quot;&gt;包括&lt;/a&gt;具有关联名称的作品，而&lt;a href=&quot;querymethods#method-i-references&quot;&gt;引用&lt;/a&gt;需要实际的表名称。</target>
        </trans-unit>
        <trans-unit id="2fc790da857a2db72a54644ec80ca81a48894c76" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;schemastatements#method-i-create_join_table&quot;&gt;&lt;code&gt;create_join_table&lt;/code&gt;&lt;/a&gt; does not create any indices by default; you can use its block form to do so yourself:</source>
          <target state="translated">请注意，默认情况下&lt;a href=&quot;schemastatements#method-i-create_join_table&quot;&gt; &lt;code&gt;create_join_table&lt;/code&gt; &lt;/a&gt;不会创建任何索引。您可以自己使用其块形式来这样做：</target>
        </trans-unit>
        <trans-unit id="d8e687fc1dc77b6bcff094a5807d77a44d345aed" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;schemastatements#method-i-create_join_table&quot;&gt;create_join_table&lt;/a&gt; does not create any indices by default; you can use its block form to do so yourself:</source>
          <target state="translated">请注意，默认情况下&lt;a href=&quot;schemastatements#method-i-create_join_table&quot;&gt;create_join_table&lt;/a&gt;不会创建任何索引。您可以使用其块形式自己进行操作：</target>
        </trans-unit>
        <trans-unit id="23bdc84508523e0b51533fa029acb1aad34f1ad8" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;%0d%0a&lt;/code&gt; is URL-encoded for &lt;code&gt;\r\n&lt;/code&gt; which is a carriage-return and line-feed (CRLF) in Ruby. So the resulting HTTP header for the second example will be the following because the second Location header field overwrites the first.</source>
          <target state="translated">请注意， &lt;code&gt;%0d%0a&lt;/code&gt; 是 &lt;code&gt;\r\n&lt;/code&gt; URL编码，它是Ruby中的回车和换行（CRLF）。因此，第二个示例的结果HTTP标头将如下所示，因为第二个Location标头字段覆盖了第一个标头字段。</target>
        </trans-unit>
        <trans-unit id="7c811d3f55dffacb3921985a1c74934b15a7fe8d" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;:controller&lt;/code&gt;, &lt;code&gt;:action&lt;/code&gt; and &lt;code&gt;:id&lt;/code&gt; are interpreted as URL query parameters and thus available through &lt;code&gt;params&lt;/code&gt; in an action.</source>
          <target state="translated">注意 &lt;code&gt;:controller&lt;/code&gt; ， &lt;code&gt;:action&lt;/code&gt; 和 &lt;code&gt;:id&lt;/code&gt; 被解释为URL查询参数，因此可以通过操作中的 &lt;code&gt;params&lt;/code&gt; 来使用。</target>
        </trans-unit>
        <trans-unit id="dc3176ed2b3dd187522e4366e6d013975d35837d" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;:dependent&lt;/code&gt; is implemented using Rails' callback system, which works by processing callbacks in order. Therefore, other callbacks declared either before or after the &lt;code&gt;:dependent&lt;/code&gt; option can affect what it does.</source>
          <target state="translated">注意 &lt;code&gt;:dependent&lt;/code&gt; 是使用Rails的回调系统实现的，该系统通过按顺序处理回调来工作。因此，在 &lt;code&gt;:dependent&lt;/code&gt; 选项之前或之后声明的其他回调可能会影响其功能。</target>
        </trans-unit>
        <trans-unit id="61ee456413f64827d2ca2c628715ca0ad954c218" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;:dependent&lt;/code&gt; option is ignored for &lt;a href=&quot;classmethods#method-i-has_one&quot;&gt;&lt;code&gt;has_one&lt;/code&gt;&lt;/a&gt;&lt;code&gt;:through&lt;/code&gt; associations.</source>
          <target state="translated">请注意，&lt;a href=&quot;classmethods#method-i-has_one&quot;&gt; &lt;code&gt;has_one&lt;/code&gt; &lt;/a&gt; &lt;code&gt;:through&lt;/code&gt; 关联将忽略 &lt;code&gt;:dependent&lt;/code&gt; 选项。</target>
        </trans-unit>
        <trans-unit id="27ce03a2af56f6db4c7888f2270689c9d52b7eb4" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;:dependent&lt;/code&gt; option is ignored for &lt;a href=&quot;classmethods#method-i-has_one&quot;&gt;has_one&lt;/a&gt;&lt;code&gt;:through&lt;/code&gt; associations.</source>
          <target state="translated">请注意，&lt;a href=&quot;classmethods#method-i-has_one&quot;&gt;has_one &lt;/a&gt; &lt;code&gt;:through&lt;/code&gt; 关联将忽略 &lt;code&gt;:dependent&lt;/code&gt; 选项。</target>
        </trans-unit>
        <trans-unit id="325dbc5769cb675d6be42dbd169dff67360c0183" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;:dependent&lt;/code&gt; option is ignored when using &lt;code&gt;:through&lt;/code&gt; option.</source>
          <target state="translated">注意 &lt;code&gt;:dependent&lt;/code&gt; 使用 &lt;code&gt;:through&lt;/code&gt; 选项时，：dependent选项将被忽略。</target>
        </trans-unit>
        <trans-unit id="dc0da45d44e4ef2c4f7a2df800102b6112ec456b" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;:if&lt;/code&gt; has priority over &lt;code&gt;:except&lt;/code&gt; in case they are used together.</source>
          <target state="translated">注意 &lt;code&gt;:if&lt;/code&gt; 优先于：if， &lt;code&gt;:except&lt;/code&gt; 一起使用。</target>
        </trans-unit>
        <trans-unit id="7a64c122b47cf95270a43e85eeebf6bb50d00438" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;:only&lt;/code&gt; has priority over &lt;code&gt;:if&lt;/code&gt; in case they are used together.</source>
          <target state="translated">注意 &lt;code&gt;:if&lt;/code&gt; 一起使用， &lt;code&gt;:only&lt;/code&gt; 优先于：if。</target>
        </trans-unit>
        <trans-unit id="565db700fe7dd945135cedb2356482108c2bba25" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;ActiveModel::Validations&lt;/code&gt; automatically adds an &lt;code&gt;errors&lt;/code&gt; method to your instances initialized with a new &lt;code&gt;ActiveModel::Errors&lt;/code&gt; object, so there is no need for you to do this manually.</source>
          <target state="translated">注意， &lt;code&gt;ActiveModel::Validations&lt;/code&gt; 自动向您的实例添加一个 &lt;code&gt;errors&lt;/code&gt; 方法，该实例使用新的 &lt;code&gt;ActiveModel::Errors&lt;/code&gt; 对象初始化，因此您无需手动执行此操作。</target>
        </trans-unit>
        <trans-unit id="82ddc1fd214cfcde0937046ec7f0683ab8c3bf5c" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;autosave: false&lt;/code&gt; is not same as not declaring &lt;code&gt;:autosave&lt;/code&gt;. When the &lt;code&gt;:autosave&lt;/code&gt; option is not present then new association records are saved but the updated association records are not saved.</source>
          <target state="translated">请注意， &lt;code&gt;autosave: false&lt;/code&gt; 与未声明 &lt;code&gt;:autosave&lt;/code&gt; 相同。如果 &lt;code&gt;:autosave&lt;/code&gt; 选项不存在，则将保存新的关联记录，但不会保存更新的关联记录。</target>
        </trans-unit>
        <trans-unit id="76f8d19661e649fb882e69053f8d42ed894a3438" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;classify&lt;/code&gt; returns a class name as a string. You can get the actual class object by invoking &lt;code&gt;constantize&lt;/code&gt; on it, explained next.</source>
          <target state="translated">请注意， &lt;code&gt;classify&lt;/code&gt; 将类名作为字符串返回。您可以通过在其上调用 &lt;code&gt;constantize&lt;/code&gt; 来获得实际的类对象，这将在下面进行解释。</target>
        </trans-unit>
        <trans-unit id="c8d80f72f917064aa72f4120b7e0525fbac8be68" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;classify&lt;/code&gt; returns a class name as a string. You can get the actual class object invoking &lt;code&gt;constantize&lt;/code&gt; on it, explained next.</source>
          <target state="translated">请注意， &lt;code&gt;classify&lt;/code&gt; 将类名作为字符串返回。您可以在其上调用实际的类对象，以对其进行 &lt;code&gt;constantize&lt;/code&gt; 量化，如下所述。</target>
        </trans-unit>
        <trans-unit id="e8826cfe8cd304f02e5cc7fd9cd0269556f124f1" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;connected_to&lt;/code&gt; with a role will look up an existing connection and switch using the connection specification name. This means that if you pass an unknown role like &lt;code&gt;connected_to(role: :nonexistent)&lt;/code&gt; you will get an error that says &lt;code&gt;ActiveRecord::ConnectionNotEstablished (No connection pool for 'ActiveRecord::Base' found for the 'nonexistent' role.)&lt;/code&gt;</source>
          <target state="translated">请注意，具有角色的 &lt;code&gt;connected_to&lt;/code&gt; 将查找现有连接，并使用连接规范名称进行切换。这意味着，如果您传递一个未知角色，例如 &lt;code&gt;connected_to(role: :nonexistent)&lt;/code&gt; 您将收到一条错误消息，提示 &lt;code&gt;ActiveRecord::ConnectionNotEstablished (No connection pool for 'ActiveRecord::Base' found for the 'nonexistent' role.)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c6c01f02771dd2025c81366f7b4ab305fdcf9eff" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;connected_to&lt;/code&gt; with a role will look up an existing connection and switch using the connection specification name. This means that if you pass an unknown role like &lt;code&gt;connected_to(role: :nonexistent)&lt;/code&gt; you will get an error that says &lt;code&gt;ActiveRecord::ConnectionNotEstablished (No connection pool with 'AnimalsBase' found
for the 'nonexistent' role.)&lt;/code&gt;</source>
          <target state="translated">请注意，具有角色的 &lt;code&gt;connected_to&lt;/code&gt; 将查找现有连接，并使用连接规范名称进行切换。这意味着，如果您传递一个未知角色，例如 &lt;code&gt;connected_to(role: :nonexistent)&lt;/code&gt; &lt;code&gt;ActiveRecord::ConnectionNotEstablished (No connection pool with 'AnimalsBase' found for the 'nonexistent' role.)&lt;/code&gt; ），您将收到一条错误消息，提示ActiveRecord :: ConnectionNotEstablished（未为&amp;ldquo;不存在&amp;rdquo;的角色找到带有&amp;ldquo; AnimalsBase&amp;rdquo;的连接池。）</target>
        </trans-unit>
        <trans-unit id="d25a94880736f451c356dfd25b8f9700646689b1" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;content_for&lt;/code&gt; concatenates (default) the blocks it is given for a particular identifier in order. For example:</source>
          <target state="translated">请注意， &lt;code&gt;content_for&lt;/code&gt; 按顺序串联（默认）为特定标识符提供的块。例如：</target>
        </trans-unit>
        <trans-unit id="f709bc03cc9989b690018bd7796015bd85e42d21" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;deliver_later&lt;/code&gt; will execute your method from the background job.</source>
          <target state="translated">请注意， &lt;code&gt;deliver_later&lt;/code&gt; 将在后台作业中执行您的方法。</target>
        </trans-unit>
        <trans-unit id="ace384731e2681d12d2903467f1e2b7abe234a6d" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;reverse_update&lt;/code&gt; has no bang.</source>
          <target state="translated">请注意， &lt;code&gt;reverse_update&lt;/code&gt; 没有爆炸。</target>
        </trans-unit>
        <trans-unit id="6d41aeffaefbf99cbff2faf9bf36f1aca03dbce1" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;save&lt;/code&gt; also has the ability to skip validations if passed &lt;code&gt;validate:
false&lt;/code&gt; as an argument. This technique should be used with caution.</source>
          <target state="translated">请注意，如果传递了 &lt;code&gt;validate: false&lt;/code&gt; 作为参数，则 &lt;code&gt;save&lt;/code&gt; 还可以跳过验证。应谨慎使用此技术。</target>
        </trans-unit>
        <trans-unit id="9b7d5cbfbac8088c113bb0b0c3ed27a94993f432" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;touch&lt;/code&gt; must be used on a persisted object, or else an &lt;a href=&quot;activerecorderror&quot;&gt;&lt;code&gt;ActiveRecordError&lt;/code&gt;&lt;/a&gt; will be thrown. For example:</source>
          <target state="translated">请注意，必须在持久对象上使用 &lt;code&gt;touch&lt;/code&gt; ，否则将抛出&lt;a href=&quot;activerecorderror&quot;&gt; &lt;code&gt;ActiveRecordError&lt;/code&gt; &lt;/a&gt;。例如：</target>
        </trans-unit>
        <trans-unit id="5f9f6fa6da45470fd512ddf42d74032a3e93aecc" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;touch&lt;/code&gt; must be used on a persisted object, or else an &lt;a href=&quot;activerecorderror&quot;&gt;ActiveRecordError&lt;/a&gt; will be thrown. For example:</source>
          <target state="translated">请注意，必须在持久对象上使用 &lt;code&gt;touch&lt;/code&gt; ，否则将抛出&lt;a href=&quot;activerecorderror&quot;&gt;ActiveRecordError&lt;/a&gt;。例如：</target>
        </trans-unit>
        <trans-unit id="75b7777607c65a529660c21ee27ce9672d7f3d16" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;try&lt;/code&gt; will swallow no-method errors, returning nil instead. If you want to protect against typos, use &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Object.html#method-i-try-21&quot;&gt;&lt;code&gt;try!&lt;/code&gt;&lt;/a&gt; instead:</source>
          <target state="translated">请注意， &lt;code&gt;try&lt;/code&gt; 将吞没无方法错误，而是返回nil。如果要防止输入错误，请&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Object.html#method-i-try-21&quot;&gt; &lt;code&gt;try!&lt;/code&gt; &lt;/a&gt;使用！反而：</target>
        </trans-unit>
        <trans-unit id="b9543a285676c6581ed0cdcd17dc85dccd1e4f6a" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;try&lt;/code&gt; will swallow no-method errors, returning nil instead. If you want to protect against typos, use &lt;code&gt;try!&lt;/code&gt; instead:</source>
          <target state="translated">请注意， &lt;code&gt;try&lt;/code&gt; 将吞并无方法错误，而是返回nil。如果要防止输入错误，请 &lt;code&gt;try!&lt;/code&gt; 使用！代替：</target>
        </trans-unit>
        <trans-unit id="723edf597c0f2c3bfba4a36a28e7ff66ad9453dc" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;where(...)&lt;/code&gt; returns a relation, not an array like the old finders. If you require an &lt;code&gt;Array&lt;/code&gt;, use &lt;code&gt;where(...).to_a&lt;/code&gt;.</source>
          <target state="translated">请注意， &lt;code&gt;where(...)&lt;/code&gt; 返回一个关系，而不是像旧的查找程序那样的数组。如果需要 &lt;code&gt;Array&lt;/code&gt; ，请使用 &lt;code&gt;where(...).to_a&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="89aeb743b6e9b920399d003494bf2bc2791d70d4" translate="yes" xml:space="preserve">
          <source>Note that &lt;em&gt;cross-site scripting (XSS) vulnerabilities bypass all CSRF protections&lt;/em&gt;. XSS gives the attacker access to all elements on a page, so they can read the CSRF security token from a form or directly submit the form. Read &lt;a href=&quot;#cross-site-scripting-xss&quot;&gt;more about XSS&lt;/a&gt; later.</source>
          <target state="translated">请注意，&lt;em&gt;跨站点脚本（XSS）漏洞绕过了所有CSRF保护&lt;/em&gt;。XSS使攻击者可以访问页面上的所有元素，因此他们可以从表单读取CSRF安全令牌或直接提交表单。稍后阅读&lt;a href=&quot;#cross-site-scripting-xss&quot;&gt;有关XSS的更多信息&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7947c734a16dab7b02f65f3261e5ec81aacc1fd7" translate="yes" xml:space="preserve">
          <source>Note that Active Record models will automatically detect their primary key. This can be avoided by using &lt;a href=&quot;../attributemethods/primarykey/classmethods#method-i-primary_key-3D&quot;&gt;self.primary_key=&lt;/a&gt; on the model to define the key explicitly.</source>
          <target state="translated">请注意，Active Record模型将自动检测其主键。可以通过在模型上使用&lt;a href=&quot;../attributemethods/primarykey/classmethods#method-i-primary_key-3D&quot;&gt;self.primary_key =&lt;/a&gt;明确定义密钥来避免这种情况。</target>
        </trans-unit>
        <trans-unit id="22356cd337b0c6c9dab8adae88cbd559bed7ad97" translate="yes" xml:space="preserve">
          <source>Note that an &quot;around&quot; filter also wraps rendering. In particular, if in the example above, the view itself reads from the database (e.g. via a scope), it will do so within the transaction and thus present the data to preview.</source>
          <target state="translated">请注意,&quot;周围 &quot;过滤器也包裹着渲染。特别是,如果在上面的例子中,视图本身从数据库中读取数据(例如通过作用域),它将在事务中进行读取,从而将数据呈现给预览。</target>
        </trans-unit>
        <trans-unit id="d9752283d4766c4457e128a0a519b849a1dfc3e0" translate="yes" xml:space="preserve">
          <source>Note that an &quot;around&quot; filter also wraps rendering. In particular, in the example above, if the view itself reads from the database (e.g. via a scope), it will do so within the transaction and thus present the data to preview.</source>
          <target state="translated">请注意,&quot;周围 &quot;过滤器也包裹着渲染。特别是,在上面的例子中,如果视图本身从数据库中读取数据(例如通过作用域),它将在事务中进行读取,从而将数据呈现给预览。</target>
        </trans-unit>
        <trans-unit id="33c38c998a3ea7a672e44bb1c497e9aae87c43e8" translate="yes" xml:space="preserve">
          <source>Note that an object instantiated with &lt;code&gt;new&lt;/code&gt; will not report errors even if it's technically invalid, because validations are automatically run only when the object is saved, such as with the &lt;code&gt;create&lt;/code&gt; or &lt;code&gt;save&lt;/code&gt; methods.</source>
          <target state="translated">请注意，使用 &lt;code&gt;new&lt;/code&gt; 实例化的对象即使在技术上无效也不会报告错误，因为仅当保存对象（例如，使用 &lt;code&gt;create&lt;/code&gt; 或 &lt;code&gt;save&lt;/code&gt; 方法）时，验证才会自动运行。</target>
        </trans-unit>
        <trans-unit id="6f1c15a9adf9cf7aefea6b6a4f52f3bdd59c79b7" translate="yes" xml:space="preserve">
          <source>Note that anything marked as an identifier will automatically create a delegate by the same name on any channel instances created off the connection.</source>
          <target state="translated">请注意,任何标记为标识符的东西都会自动在连接外创建的任何通道实例上创建一个同名的委托。</target>
        </trans-unit>
        <trans-unit id="f40e349444c4026fd16949229b30604f440850f5" translate="yes" xml:space="preserve">
          <source>Note that appending directly to &lt;code&gt;I18n.load_path&lt;/code&gt; instead of to the application's configured i18n will &lt;em&gt;not&lt;/em&gt; override translations from external gems.</source>
          <target state="translated">请注意，直接附加到 &lt;code&gt;I18n.load_path&lt;/code&gt; 而不是附加到应用程序配置的i18n&lt;em&gt;不会&lt;/em&gt;覆盖来自外部gem的转换。</target>
        </trans-unit>
        <trans-unit id="5cf442486084fb72e4ad77056cb08bfbaed774fb" translate="yes" xml:space="preserve">
          <source>Note that appending directly to &lt;code&gt;I18n.load_paths&lt;/code&gt; instead of to the application's configured i18n will &lt;em&gt;not&lt;/em&gt; override translations from external gems.</source>
          <target state="translated">请注意，直接附加到 &lt;code&gt;I18n.load_paths&lt;/code&gt; 而不是附加到应用程序配置的i18n &lt;em&gt;不会&lt;/em&gt;覆盖来自外部gem的转换。</target>
        </trans-unit>
        <trans-unit id="e8e8087a6dd1f253f818fe2957d00759d30903a1" translate="yes" xml:space="preserve">
          <source>Note that autosave will only trigger for already-persisted association records if the records themselves have been changed. This is to protect against &lt;code&gt;SystemStackError&lt;/code&gt; caused by circular association validations. The one exception is if a custom validation context is used, in which case the validations will always fire on the associated records.</source>
          <target state="translated">请注意，如果记录本身已更改，则自动保存将仅对已经存在的关联记录触发。这是为了防止循环关联验证引起的 &lt;code&gt;SystemStackError&lt;/code&gt; 。一个例外是如果使用自定义验证上下文，在这种情况下，验证将始终在关联的记录上进行。</target>
        </trans-unit>
        <trans-unit id="46a4821ec5868bd38360ccd2974f3d24f5c11f98" translate="yes" xml:space="preserve">
          <source>Note that basic authentication is insecure over unencrypted HTTP. An attacker that intercepts cleartext requests to the Postmark ingress can learn its password. You should only use the Postmark ingress over HTTPS.</source>
          <target state="translated">请注意,基本认证在未加密的HTTP上是不安全的。拦截到Postmark入口的明文请求的攻击者可以学习它的密码。你应该只在HTTPS上使用Postmark ingress。</target>
        </trans-unit>
        <trans-unit id="5374749430d739cb1e5e2cfb76a02f30988ae462" translate="yes" xml:space="preserve">
          <source>Note that basic authentication is insecure over unencrypted HTTP. An attacker that intercepts cleartext requests to the SendGrid ingress can learn its password. You should only use the SendGrid ingress over HTTPS.</source>
          <target state="translated">请注意,基本的认证在未加密的HTTP上是不安全的。拦截到SendGrid入口的明文请求的攻击者可以得知其密码。你应该只在HTTPS上使用SendGrid入口。</target>
        </trans-unit>
        <trans-unit id="57ec50d8410464d568b5c05fc066b0c1779894de" translate="yes" xml:space="preserve">
          <source>Note that basic authentication is insecure over unencrypted HTTP. An attacker that intercepts cleartext requests to the ingress can learn its password. You should only use this ingress over HTTPS.</source>
          <target state="translated">请注意,基本认证在未加密的HTTP上是不安全的。拦截到入口的明文请求的攻击者可以得知其密码。你应该只在HTTPS上使用这个入口。</target>
        </trans-unit>
        <trans-unit id="78dbd1cc164b82b4dcb8b006687d565c7961a7a4" translate="yes" xml:space="preserve">
          <source>Note that being unreachable does not imply being anonymous:</source>
          <target state="translated">注意,无法联系并不意味着匿名。</target>
        </trans-unit>
        <trans-unit id="e8d3ecb667ba792a097afde3710779d973b5d3cf" translate="yes" xml:space="preserve">
          <source>Note that building your own string from user input may expose your application to injection attacks if not done properly. As an alternative, it is recommended to use one of the following methods.</source>
          <target state="translated">请注意,如果操作不当,从用户输入中构建自己的字符串可能会使你的应用程序受到注入攻击。作为一种替代方法,建议使用以下方法之一。</target>
        </trans-unit>
        <trans-unit id="88c3e83adab9320795c50aab4d553ec7f849c321" translate="yes" xml:space="preserve">
          <source>Note that changing your secret_key_base will invalidate all existing session. Additionally, you should take care to make sure you are not relying on the ability to decode signed cookies generated by your app in external applications or JavaScript before changing it.</source>
          <target state="translated">请注意,更改您的secret_key_base将使所有现有会话无效。此外,在更改之前,您应该注意确保您不依赖于外部应用程序或JavaScript中由您的应用程序生成的签名cookie的解码能力。</target>
        </trans-unit>
        <trans-unit id="6df0738b3ba5e7544dc16135160c562824d55adc" translate="yes" xml:space="preserve">
          <source>Note that checking for uniqueness using something like &lt;code&gt;include?&lt;/code&gt; is subject to race conditions. Do not attempt to use &lt;code&gt;include?&lt;/code&gt; to enforce distinctness in an association. For instance, using the article example from above, the following code would be racy because multiple users could be attempting this at the same time:</source>
          <target state="translated">请注意，使用诸如 &lt;code&gt;include?&lt;/code&gt; 类的内容检查唯一性。受比赛条件的影响。不要尝试使用 &lt;code&gt;include?&lt;/code&gt; 加强关联中的独特性。例如，使用上面的文章示例，下面的代码将很合理，因为多个用户可能同时尝试这样做：</target>
        </trans-unit>
        <trans-unit id="ae15203738a3a52937b4eae19c6cd23f7d2a5d67" translate="yes" xml:space="preserve">
          <source>Note that core extensions define &lt;code&gt;Hash#with_indifferent_access&lt;/code&gt;:</source>
          <target state="translated">请注意，核心扩展定义了 &lt;code&gt;Hash#with_indifferent_access&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="aab3b21d54b61763e1564b0cc5ab99fbc9bfb2e4" translate="yes" xml:space="preserve">
          <source>Note that if a query matches multiple records, &lt;code&gt;find_by&lt;/code&gt; will fetch only the first one and ignore the others (see the &lt;code&gt;LIMIT 1&lt;/code&gt; statement above).</source>
          <target state="translated">请注意，如果查询匹配多个记录，则 &lt;code&gt;find_by&lt;/code&gt; 将仅获取第一个记录，而忽略其他记录（请参见上面的 &lt;code&gt;LIMIT 1&lt;/code&gt; 语句）。</target>
        </trans-unit>
        <trans-unit id="4f44b8fe38600ce94c3eb35df237f1de437ac4de" translate="yes" xml:space="preserve">
          <source>Note that if the target is not &lt;code&gt;nil&lt;/code&gt; then the call is attempted regardless of the &lt;code&gt;:allow_nil&lt;/code&gt; option, and thus an exception is still raised if said object does not respond to the method:</source>
          <target state="translated">请注意，如果目标不是 &lt;code&gt;nil&lt;/code&gt; ,则无论 &lt;code&gt;:allow_nil&lt;/code&gt; 选项如何，都将尝试调用，因此，如果所述对象不响应该方法，则仍会引发异常：</target>
        </trans-unit>
        <trans-unit id="b72ef2b72c287b15edb8d7e8e3522050aa85ca8a" translate="yes" xml:space="preserve">
          <source>Note that if you do not specify the &lt;code&gt;:inverse_of&lt;/code&gt; option, then Active Record will try to automatically guess the inverse association based on heuristics.</source>
          <target state="translated">请注意，如果您未指定 &lt;code&gt;:inverse_of&lt;/code&gt; 选项，则Active Record将尝试根据启发式方法自动猜测逆向关联。</target>
        </trans-unit>
        <trans-unit id="5dbde3470700eeb4eeaddf252a725a2d26c26cf8" translate="yes" xml:space="preserve">
          <source>Note that if you return a path without a leading slash then the URL is prefixed with the current SCRIPT_NAME environment variable. This is typically '/' but may be different in a mounted engine or where the application is deployed to a subdirectory of a website.</source>
          <target state="translated">请注意,如果您返回的路径没有前导斜线,那么URL会以当前的SCRIPT_NAME环境变量作为前缀。这通常是'/',但在挂载的引擎中,或在应用程序部署到网站的子目录中,可能会有所不同。</target>
        </trans-unit>
        <trans-unit id="c61f8e19cb72840c59ad034d835c6608ba8ae691" translate="yes" xml:space="preserve">
          <source>Note that if you use &lt;code&gt;permit&lt;/code&gt; in a key that points to a hash, it won't allow all the hash. You also need to specify which attributes inside the hash should be permitted.</source>
          <target state="translated">请注意，如果您在指向散列的键中使用 &lt;code&gt;permit&lt;/code&gt; ，则将不允许所有散列。您还需要指定散列内的哪些属性应被允许。</target>
        </trans-unit>
        <trans-unit id="1fc227d776d965752397dbfd3f1acdf5bc6a2ed1" translate="yes" xml:space="preserve">
          <source>Note that if you want to immediately require dependencies when the engine is required, you should require them before the engine's initialization. For example:</source>
          <target state="translated">需要注意的是,如果你想在需要引擎的时候立即要求依赖,你应该在引擎初始化之前要求它们。例如</target>
        </trans-unit>
        <trans-unit id="aa297c0fe95f42b1a1cac85dbe866912a193d048" translate="yes" xml:space="preserve">
          <source>Note that in that case &lt;code&gt;module_parent&lt;/code&gt; returns &lt;code&gt;Object&lt;/code&gt;.</source>
          <target state="translated">请注意，在这种情况下， &lt;code&gt;module_parent&lt;/code&gt; 返回 &lt;code&gt;Object&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="01b4e173af86d46b015dbb7131d2e90d6a871b4b" translate="yes" xml:space="preserve">
          <source>Note that in that case &lt;code&gt;module_parent_name&lt;/code&gt; returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">请注意，在这种情况下， &lt;code&gt;module_parent_name&lt;/code&gt; 返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="29d18aa10fe13a77b68f28afe44d33a98a83b983" translate="yes" xml:space="preserve">
          <source>Note that in the above example, to disallow the creation of a plain &lt;code&gt;Polygon&lt;/code&gt;, you should use &lt;code&gt;validates :type, presence:
true&lt;/code&gt;, instead of setting it as an abstract class. This way, &lt;code&gt;Polygon&lt;/code&gt; will stay in the hierarchy, and Active Record will continue to correctly derive the table name.</source>
          <target state="translated">请注意，在上面的示例中，要禁止创建普通的 &lt;code&gt;Polygon&lt;/code&gt; ，应使用 &lt;code&gt;validates :type, presence: true&lt;/code&gt; ，而不是将其设置为抽象类。这样， &lt;code&gt;Polygon&lt;/code&gt; 将保留在层次结构中，并且Active Record将继续正确地导出表名称。</target>
        </trans-unit>
        <trans-unit id="37ee3be5d2ed36a645c1e37b3a6a3854e08fb2cc" translate="yes" xml:space="preserve">
          <source>Note that interceptors need to be registered both with &lt;code&gt;register_interceptor&lt;/code&gt; and &lt;code&gt;register_preview_interceptor&lt;/code&gt; if they should operate on both sending and previewing emails.</source>
          <target state="translated">请注意，如果拦截器应同时用于发送和预览电子邮件，则必须同时向 &lt;code&gt;register_interceptor&lt;/code&gt; 和 &lt;code&gt;register_preview_interceptor&lt;/code&gt; 注册。</target>
        </trans-unit>
        <trans-unit id="e002c10e961f1c824fc07296b73d779cf5dde89f" translate="yes" xml:space="preserve">
          <source>Note that it also means that associations marked for destruction won't be destroyed directly. They will however still be marked for destruction.</source>
          <target state="translated">请注意,这也意味着标记为销毁的社团不会被直接销毁。但是,它们仍然会被标记为销毁。</target>
        </trans-unit>
        <trans-unit id="f3a0409f0e1222b726a5d13c3e9b75b2f1cb2598" translate="yes" xml:space="preserve">
          <source>Note that it handles both ASCII and Unicode whitespace.</source>
          <target state="translated">请注意,它可以处理ASCII和Unicode的空白。</target>
        </trans-unit>
        <trans-unit id="072cbc6561b444de9cb58baa2b73bc9a7f982077" translate="yes" xml:space="preserve">
          <source>Note that it is also possible to assign a flash message as part of the redirection. You can assign &lt;code&gt;:notice&lt;/code&gt;, &lt;code&gt;:alert&lt;/code&gt; or the general purpose &lt;code&gt;:flash&lt;/code&gt;:</source>
          <target state="translated">请注意，也可以分配Flash消息作为重定向的一部分。您可以分配 &lt;code&gt;:notice&lt;/code&gt; ， &lt;code&gt;:alert&lt;/code&gt; 或通用的 &lt;code&gt;:flash&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="dcc3e916a86372cb28ffccd804eefdd6ebdbdcff" translate="yes" xml:space="preserve">
          <source>Note that it's still possible to generate a race condition in the database in the same way that &lt;a href=&quot;../validations/classmethods#method-i-validates_uniqueness_of&quot;&gt;validates_uniqueness_of&lt;/a&gt; can. You're encouraged to add a unique index in the database to deal with this even more unlikely scenario.</source>
          <target state="translated">请注意，仍然可以以&lt;a href=&quot;../validations/classmethods#method-i-validates_uniqueness_of&quot;&gt;validates_uniqueness_of&lt;/a&gt;可以的相同方式在数据库中生成竞争条件。建议您在数据库中添加一个唯一索引，以处理这种更不可能的情况。</target>
        </trans-unit>
        <trans-unit id="4109a799327f6050b01b125eed5872d092866ad4" translate="yes" xml:space="preserve">
          <source>Note that keys are treated differently than &lt;a href=&quot;activesupport/hashwithindifferentaccess&quot;&gt;&lt;code&gt;HashWithIndifferentAccess&lt;/code&gt;&lt;/a&gt;, meaning that string and symbol keys will not match.</source>
          <target state="translated">请注意，键的处理方式不同于&lt;a href=&quot;activesupport/hashwithindifferentaccess&quot;&gt; &lt;code&gt;HashWithIndifferentAccess&lt;/code&gt; &lt;/a&gt;，这意味着字符串和符号键将不匹配。</target>
        </trans-unit>
        <trans-unit id="1cce95eb30e93b5a6838836fe15a98374b38e1be" translate="yes" xml:space="preserve">
          <source>Note that keys are treated differently than &lt;a href=&quot;activesupport/hashwithindifferentaccess&quot;&gt;HashWithIndifferentAccess&lt;/a&gt;, meaning that string and symbol keys will not match.</source>
          <target state="translated">请注意，键的处理方式不同于&lt;a href=&quot;activesupport/hashwithindifferentaccess&quot;&gt;HashWithIndifferentAccess&lt;/a&gt;，这意味着字符串和符号键将不匹配。</target>
        </trans-unit>
        <trans-unit id="ad94e60a7f2b7c1f49651af5196003959035f01b" translate="yes" xml:space="preserve">
          <source>Note that negative CAPTCHAs are only effective against dumb bots and won't suffice to protect critical applications from targeted bots. Still, the negative and positive CAPTCHAs can be combined to increase the performance, e.g., if the &quot;honeypot&quot; field is not empty (bot detected), you won't need to verify the positive CAPTCHA, which would require an HTTPS request to Google ReCaptcha before computing the response.</source>
          <target state="translated">请注意,消极的验证码只对哑巴机器人有效,不足以保护关键应用免受目标机器人的攻击。不过,消极验证码和积极验证码还是可以结合起来提高性能,例如,如果 &quot;honeypot &quot;字段不是空的(检测到僵尸),你就不需要验证积极验证码,这就需要在计算响应之前向Google ReCaptcha发出HTTPS请求。</target>
        </trans-unit>
        <trans-unit id="b604cb6faa93098b0d6c2b2506cc1683cb7ae6ca" translate="yes" xml:space="preserve">
          <source>Note that new records are different from any other record by definition, unless the other record is the receiver itself. Besides, if you fetch existing records with &lt;code&gt;select&lt;/code&gt; and leave the ID out, you're on your own, this predicate will return false.</source>
          <target state="translated">请注意，根据定义，新记录与任何其他记录都不同，除非其他记录是接收者本身。此外，如果您使用 &lt;code&gt;select&lt;/code&gt; 来获取现有记录并保留ID，则您自己使用，则该谓词将返回false。</target>
        </trans-unit>
        <trans-unit id="22c983e77149090556408a4b167a572de601b14a" translate="yes" xml:space="preserve">
          <source>Note that now there can be more than one router in your application, and it's better to avoid passing requests through many routers. Consider this situation:</source>
          <target state="translated">注意,现在你的应用中可以有多个路由器,最好避免通过多个路由器传递请求。考虑一下这种情况。</target>
        </trans-unit>
        <trans-unit id="bb19839e635e04134fc7b559e09ccea24da6e26b" translate="yes" xml:space="preserve">
          <source>Note that numbers are not mentioned. In particular, 0 and 0.0 are &lt;strong&gt;not&lt;/strong&gt; blank.</source>
          <target state="translated">请注意，未提及数字。特别是0和0.0 &lt;strong&gt;不能为&lt;/strong&gt;空。</target>
        </trans-unit>
        <trans-unit id="a7419129c6af853c63a695a7e5692fb54165cfa7" translate="yes" xml:space="preserve">
          <source>Note that partials are not supported to be rendered with streaming, so in such cases, we just wrap them in an array.</source>
          <target state="translated">需要注意的是,不支持用流媒体渲染partials,所以在这种情况下,我们只需要将它们包裹在一个数组中。</target>
        </trans-unit>
        <trans-unit id="1d8ce99c954ddc9604f86aea355eee9cdf6e8de2" translate="yes" xml:space="preserve">
          <source>Note that passing custom disallowed types will override the default types, which are &lt;code&gt;Symbol&lt;/code&gt; and YAML.</source>
          <target state="translated">请注意，传递自定义的不允许类型将覆盖默认类型，即 &lt;code&gt;Symbol&lt;/code&gt; 和YAML。</target>
        </trans-unit>
        <trans-unit id="ae24f5949134ca75ea07bd1f7b2e67eacecdb162" translate="yes" xml:space="preserve">
          <source>Note that passing custom disallowed types will override the default types, which are Symbol and YAML.</source>
          <target state="translated">请注意,传递自定义的不允许类型将覆盖默认类型,即Symbol和YAML。</target>
        </trans-unit>
        <trans-unit id="b84d9529ac53faf44afee2779503602281d1a9c0" translate="yes" xml:space="preserve">
          <source>Note that running the &lt;code&gt;db:migrate&lt;/code&gt; command also invokes the &lt;code&gt;db:schema:dump&lt;/code&gt; command, which will update your &lt;code&gt;db/schema.rb&lt;/code&gt; file to match the structure of your database.</source>
          <target state="translated">请注意，运行 &lt;code&gt;db:migrate&lt;/code&gt; 命令还会调用 &lt;code&gt;db:schema:dump&lt;/code&gt; 命令，该命令将更新 &lt;code&gt;db/schema.rb&lt;/code&gt; 文件以匹配数据库的结构。</target>
        </trans-unit>
        <trans-unit id="41ece01fe72a7508a1b0c964b1a65ee164b23bb9" translate="yes" xml:space="preserve">
          <source>Note that setting the UUID primary key default value to &lt;code&gt;nil&lt;/code&gt; will require you to assure that you always provide a UUID value before saving a record (as primary keys cannot be &lt;code&gt;nil&lt;/code&gt;). This might be done via the &lt;code&gt;SecureRandom.uuid&lt;/code&gt; method and a &lt;code&gt;before_save&lt;/code&gt; callback, for instance.</source>
          <target state="translated">请注意，将UUID主键默认值设置为 &lt;code&gt;nil&lt;/code&gt; 将需要您确保在保存记录之前始终提供UUID值（因为主键不能为 &lt;code&gt;nil&lt;/code&gt; ）。例如，这可以通过 &lt;code&gt;SecureRandom.uuid&lt;/code&gt; 方法和 &lt;code&gt;before_save&lt;/code&gt; 回调来完成。</target>
        </trans-unit>
        <trans-unit id="289fcb6dd0c2e250498b73e7a017f254410a24ff" translate="yes" xml:space="preserve">
          <source>Note that some databases are configured to perform case-insensitive searches anyway.</source>
          <target state="translated">请注意,有些数据库被配置为执行不区分大小写的搜索。</target>
        </trans-unit>
        <trans-unit id="350f976200592f01983e5260d34b1c6c064ed87c" translate="yes" xml:space="preserve">
          <source>Note that some of the migrations may be skipped if a migration with the same name already exists in application. In such a situation you must decide whether to leave that migration or rename the migration in the application and rerun copying migrations.</source>
          <target state="translated">请注意,如果应用程序中已经存在同名迁移,则可能会跳过某些迁移。在这种情况下,您必须决定是保留该迁移,还是在应用程序中重新命名迁移,然后重新运行复制迁移。</target>
        </trans-unit>
        <trans-unit id="56eed9c041b6163206a5e9b6cdce438725ed6596" translate="yes" xml:space="preserve">
          <source>Note that the +do end+ syntax for the redirect block wouldn't work, as Ruby would pass the block to &lt;code&gt;get&lt;/code&gt; instead of &lt;code&gt;redirect&lt;/code&gt;. Use &lt;code&gt;{ ... }&lt;/code&gt; instead.</source>
          <target state="translated">请注意，重定向块的+ do end +语法不起作用，因为Ruby将传递该块以 &lt;code&gt;get&lt;/code&gt; 而不是 &lt;code&gt;redirect&lt;/code&gt; 。请改用 &lt;code&gt;{ ... }&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0b42c6a4a4341fd9958532c716f1eb5ee92beecb" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;:as&lt;/code&gt; option given to mount takes the &lt;code&gt;engine_name&lt;/code&gt; as default, so most of the time you can simply omit it.</source>
          <target state="translated">注意，指定给mount 的 &lt;code&gt;:as&lt;/code&gt; 选项默认使用 &lt;code&gt;engine_name&lt;/code&gt; ，因此大多数时候您可以简单地忽略它。</target>
        </trans-unit>
        <trans-unit id="7a468e9d4e4a4f9bded222303b80c21107fd3a82" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;:autosave&lt;/code&gt; option is automatically enabled on every association that &lt;a href=&quot;classmethods#method-i-accepts_nested_attributes_for&quot;&gt;#accepts_nested_attributes_for&lt;/a&gt; is used for.</source>
          <target state="translated">请注意，在&lt;a href=&quot;classmethods#method-i-accepts_nested_attributes_for&quot;&gt;#accepts_nested_attributes_for&lt;/a&gt;用于的每个关联上都会自动启用 &lt;code&gt;:autosave&lt;/code&gt; 选项。</target>
        </trans-unit>
        <trans-unit id="79d9df15e5b15a29b5f9331ea392518b5e21c328" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;:autosave&lt;/code&gt; option is automatically enabled on every association that &lt;a href=&quot;classmethods#method-i-accepts_nested_attributes_for&quot;&gt;&lt;code&gt;accepts_nested_attributes_for&lt;/code&gt;&lt;/a&gt; is used for.</source>
          <target state="translated">注意 &lt;code&gt;:autosave&lt;/code&gt; 选项在使用了&lt;a href=&quot;classmethods#method-i-accepts_nested_attributes_for&quot;&gt; &lt;code&gt;accepts_nested_attributes_for&lt;/code&gt; 的&lt;/a&gt;每个关联上自动启用。</target>
        </trans-unit>
        <trans-unit id="a9f9248fbb6cde034e039397fee13f9a82a3513e" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;projects_attributes=&lt;/code&gt; writer method is in fact required for &lt;a href=&quot;formbuilder#method-i-fields_for&quot;&gt;#fields_for&lt;/a&gt; to correctly identify &lt;code&gt;:projects&lt;/code&gt; as a collection, and the correct indices to be set in the form markup.</source>
          <target state="translated">请注意，实际上&lt;a href=&quot;formbuilder#method-i-fields_for&quot;&gt;#projects_for&lt;/a&gt;需要使用 &lt;code&gt;projects_attributes=&lt;/code&gt; writer方法才能正确地将 &lt;code&gt;:projects&lt;/code&gt; 标识为一个集合，并在表单标记中设置正确的索引。</target>
        </trans-unit>
        <trans-unit id="114bb58c314f2b8afeaf68327a1ff48a67af8edf" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;projects_attributes=&lt;/code&gt; writer method is in fact required for &lt;a href=&quot;formbuilder#method-i-fields_for&quot;&gt;&lt;code&gt;fields_for&lt;/code&gt;&lt;/a&gt; to correctly identify &lt;code&gt;:projects&lt;/code&gt; as a collection, and the correct indices to be set in the form markup.</source>
          <target state="translated">注意，实际上，&lt;a href=&quot;formbuilder#method-i-fields_for&quot;&gt; &lt;code&gt;fields_for&lt;/code&gt; &lt;/a&gt;需要使用 &lt;code&gt;projects_attributes=&lt;/code&gt; writer方法才能正确地将 &lt;code&gt;:projects&lt;/code&gt; 标识为一个集合，并在表单标记中设置正确的索引。</target>
        </trans-unit>
        <trans-unit id="bba717142b3857ce76f41cd84a25f35a3e8fb25a" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;projects_attributes=&lt;/code&gt; writer method is in fact required for &lt;a href=&quot;formhelper#method-i-fields_for&quot;&gt;#fields_for&lt;/a&gt; to correctly identify &lt;code&gt;:projects&lt;/code&gt; as a collection, and the correct indices to be set in the form markup.</source>
          <target state="translated">请注意，实际上&lt;a href=&quot;formhelper#method-i-fields_for&quot;&gt;#projects_for&lt;/a&gt;需要使用 &lt;code&gt;projects_attributes=&lt;/code&gt; writer方法才能正确地将 &lt;code&gt;:projects&lt;/code&gt; 标识为一个集合，并在表单标记中设置正确的索引。</target>
        </trans-unit>
        <trans-unit id="7d8668f5eb710bd6a65908c913b5ec27fb10b34e" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;projects_attributes=&lt;/code&gt; writer method is in fact required for &lt;a href=&quot;formhelper#method-i-fields_for&quot;&gt;&lt;code&gt;fields_for&lt;/code&gt;&lt;/a&gt; to correctly identify &lt;code&gt;:projects&lt;/code&gt; as a collection, and the correct indices to be set in the form markup.</source>
          <target state="translated">注意，实际上，&lt;a href=&quot;formhelper#method-i-fields_for&quot;&gt; &lt;code&gt;fields_for&lt;/code&gt; &lt;/a&gt;需要使用 &lt;code&gt;projects_attributes=&lt;/code&gt; writer方法才能正确地将 &lt;code&gt;:projects&lt;/code&gt; 标识为一个集合，并在表单标记中设置正确的索引。</target>
        </trans-unit>
        <trans-unit id="68fe7c790c83e9c2b8372df6432ade06d4a90302" translate="yes" xml:space="preserve">
          <source>Note that the MD5 is taken of the entire template file, not just what's within the cache do/end call. So it's possible that changing something outside of that call will still expire the cache.</source>
          <target state="translated">请注意,MD5是取自整个模板文件,而不仅仅是缓存do/end调用中的内容。所以,在调用之外的地方改变一些东西仍然有可能会使缓存过期。</target>
        </trans-unit>
        <trans-unit id="a9d218f2ca0876e04a64af92cc587d9b53ea48ef" translate="yes" xml:space="preserve">
          <source>Note that the above code is database-agnostic: it will run in MySQL, PostgreSQL, Oracle, and others. You can learn more about migrations in the &lt;a href=&quot;active_record_migrations&quot;&gt;Active Record Migrations guide&lt;/a&gt;.</source>
          <target state="translated">请注意，上述代码与数据库无关：它将在MySQL，PostgreSQL，Oracle和其他版本中运行。您可以在&lt;a href=&quot;active_record_migrations&quot;&gt;Active Record迁移指南中&lt;/a&gt;了解有关迁移的更多信息。</target>
        </trans-unit>
        <trans-unit id="71620954de70d1be268160bad4cd86ec4e084773" translate="yes" xml:space="preserve">
          <source>Note that the closing tag cannot be of the style &lt;code&gt;-%&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">请注意，结束标记不能为 &lt;code&gt;-%&amp;gt;&lt;/code&gt; 样式。</target>
        </trans-unit>
        <trans-unit id="6e7d6c161996279e55e9a7f8cd6bc7d438276479" translate="yes" xml:space="preserve">
          <source>Note that the default error messages are plural (e.g., &quot;is too short (minimum is %{count} characters)&quot;). For this reason, when &lt;code&gt;:minimum&lt;/code&gt; is 1 you should provide a custom message or use &lt;code&gt;presence: true&lt;/code&gt; instead. When &lt;code&gt;:in&lt;/code&gt; or &lt;code&gt;:within&lt;/code&gt; have a lower limit of 1, you should either provide a custom message or call &lt;code&gt;presence&lt;/code&gt; prior to &lt;code&gt;length&lt;/code&gt;.</source>
          <target state="translated">请注意，默认错误消息为复数形式（例如，&amp;ldquo;太短（最少为％{count}个字符）&amp;rdquo;）。因此，当 &lt;code&gt;:minimum&lt;/code&gt; 为1时，您应该提供自定义消息或使用 &lt;code&gt;presence: true&lt;/code&gt; 代替。当 &lt;code&gt;:in&lt;/code&gt; 或 &lt;code&gt;:within&lt;/code&gt; 的下限为1时，您应该在 &lt;code&gt;length&lt;/code&gt; 之前提供自定义消息或呼叫 &lt;code&gt;presence&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="686dd5a3681eb94aa1b29e89f703ca327c41ee3d" translate="yes" xml:space="preserve">
          <source>Note that the default error messages are plural (e.g., &quot;is too short (minimum is %{count} characters)&quot;). For this reason, when &lt;code&gt;:minimum&lt;/code&gt; is 1 you should provide a personalized message or use &lt;code&gt;presence: true&lt;/code&gt; instead. When &lt;code&gt;:in&lt;/code&gt; or &lt;code&gt;:within&lt;/code&gt; have a lower limit of 1, you should either provide a personalized message or call &lt;code&gt;presence&lt;/code&gt; prior to &lt;code&gt;length&lt;/code&gt;.</source>
          <target state="translated">请注意，默认错误消息为复数形式（例如，&amp;ldquo;太短（最少为％{count}个字符）&amp;rdquo;）。因此，当 &lt;code&gt;:minimum&lt;/code&gt; 为1时，您应该提供个性化消息或使用 &lt;code&gt;presence: true&lt;/code&gt; 代替。当 &lt;code&gt;:in&lt;/code&gt; 或 &lt;code&gt;:within&lt;/code&gt; 的下限为1时，您应该在 &lt;code&gt;length&lt;/code&gt; 之前提供个性化消息或呼叫 &lt;code&gt;presence&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f1f0fde9874f69ccb2896442786f865a18ee23ff" translate="yes" xml:space="preserve">
          <source>Note that the endpoint, default values, and submit button label are tailored for &lt;code&gt;@person&lt;/code&gt;. That works that way because the involved helpers know whether the resource is a new record or not, and generate HTML accordingly.</source>
          <target state="translated">请注意，端点，默认值和提交按钮标签是针对 &lt;code&gt;@person&lt;/code&gt; 量身定制的。之所以这样工作是因为参与的助手知道资源是否为新记录，并相应地生成HTML。</target>
        </trans-unit>
        <trans-unit id="88b5d730eba76cc27fd97c8d6e638a4e37441c7b" translate="yes" xml:space="preserve">
          <source>Note that the filter in this case uses &lt;code&gt;send&lt;/code&gt; because the &lt;code&gt;logged_in?&lt;/code&gt; method is private and the filter does not run in the scope of the controller. This is not the recommended way to implement this particular filter, but in more simple cases it might be useful.</source>
          <target state="translated">请注意，在这种情况下，过滤器使用 &lt;code&gt;send&lt;/code&gt; ,因为 &lt;code&gt;logged_in?&lt;/code&gt; 方法是私有的，并且过滤器不在控制器范围内运行。这不是建议的实现此特定过滤器的方法，但是在更简单的情况下，它可能会很有用。</target>
        </trans-unit>
        <trans-unit id="74eb99d06a69d4b54123aca3dbb5b9ad46d3f318" translate="yes" xml:space="preserve">
          <source>Note that the filter in this case uses &lt;code&gt;send&lt;/code&gt; because the &lt;code&gt;logged_in?&lt;/code&gt; method is private and the filter does not run in the scope of the controller. This is not the recommended way to implement this particular filter, but in simpler cases it might be useful.</source>
          <target state="translated">请注意，在这种情况下，过滤器使用 &lt;code&gt;send&lt;/code&gt; ,因为 &lt;code&gt;logged_in?&lt;/code&gt; 方法是私有的，并且过滤器不在控制器范围内运行。这不是建议的实现此特定过滤器的方法，但在较简单的情况下，它可能会很有用。</target>
        </trans-unit>
        <trans-unit id="ec7678e438c40cc3477299adc32378f068a1ddef" translate="yes" xml:space="preserve">
          <source>Note that the implicit render done by ActionController detects if &lt;code&gt;render&lt;/code&gt; has been called, so the following will work without errors:</source>
          <target state="translated">请注意，由ActionController完成的隐式渲染会检测是否已调用 &lt;code&gt;render&lt;/code&gt; ，因此以下内容将正常工作：</target>
        </trans-unit>
        <trans-unit id="be5be3e7764ae5644163769bf7cfc5d6fd2d1a1e" translate="yes" xml:space="preserve">
          <source>Note that the model is &lt;em&gt;not&lt;/em&gt; yet removed from the database:</source>
          <target state="translated">需要注意的是该模型&lt;em&gt;没有&lt;/em&gt;尚未从数据库中删除：</target>
        </trans-unit>
        <trans-unit id="954907bb7af2f55cb897a52cdad3e0923f08a201" translate="yes" xml:space="preserve">
          <source>Note that the model will &lt;em&gt;not&lt;/em&gt; be destroyed until the parent is saved.</source>
          <target state="translated">请注意，在保存父模型之前，&lt;em&gt;不会&lt;/em&gt;破坏模型。</target>
        </trans-unit>
        <trans-unit id="02a01b211c29bd75de844342e9c04d4a40fbfccc" translate="yes" xml:space="preserve">
          <source>Note that the partial layout has access to the local &lt;code&gt;article&lt;/code&gt; variable that was passed into the &lt;code&gt;render&lt;/code&gt; call. However, unlike application-wide layouts, partial layouts still have the underscore prefix.</source>
          <target state="translated">请注意，部分布局可以访问传递到 &lt;code&gt;render&lt;/code&gt; 调用中的本地 &lt;code&gt;article&lt;/code&gt; 变量。但是，与应用程序范围的布局不同，部分布局仍具有下划线前缀。</target>
        </trans-unit>
        <trans-unit id="4c3e84c4e2bb503561ce5906bf724d8b22651774" translate="yes" xml:space="preserve">
          <source>Note that the prefix takes scopes into account as well, so relations between &lt;code&gt;Catalog::Category&lt;/code&gt; and &lt;code&gt;Catalog::Product&lt;/code&gt; or &lt;code&gt;Catalog::Category&lt;/code&gt; and &lt;code&gt;CatalogProduct&lt;/code&gt; need to be updated similarly.</source>
          <target state="translated">请注意，前缀也考虑了范围，因此 &lt;code&gt;Catalog::Category&lt;/code&gt; 和 &lt;code&gt;Catalog::Product&lt;/code&gt; 或 &lt;code&gt;Catalog::Category&lt;/code&gt; 和 &lt;code&gt;CatalogProduct&lt;/code&gt; 之间的关系也需要类似地更新。</target>
        </trans-unit>
        <trans-unit id="3f0b56e9abd80e969b8d26b5222d80ad053541d7" translate="yes" xml:space="preserve">
          <source>Note that the proc/lambda is evaluated right at the start of the mail message generation, so if you set something in the default hash using a proc, and then set the same thing inside of your mailer method, it will get overwritten by the mailer method.</source>
          <target state="translated">需要注意的是,proc/lambda会在邮件消息生成之初就被评估,所以如果你使用proc在默认哈希中设置了一些东西,然后在你的mailer方法中设置了同样的东西,它将被mailer方法覆盖。</target>
        </trans-unit>
        <trans-unit id="4e5c95326e028fed2d2db8bde9be22b9c550d75e" translate="yes" xml:space="preserve">
          <source>Note that the proxy is rendered under a different view context. This may cause incorrect behaviour with capture methods. Consider using &lt;a href=&quot;../../abstractcontroller/helpers/classmethods#method-i-helper&quot;&gt;helper&lt;/a&gt; instead when using &lt;code&gt;capture&lt;/code&gt;.</source>
          <target state="translated">请注意，代理是在不同的视图上下文下呈现的。这可能会导致捕获方法出现错误行为。使用 &lt;code&gt;capture&lt;/code&gt; 时，请考虑使用&lt;a href=&quot;../../abstractcontroller/helpers/classmethods#method-i-helper&quot;&gt;helper&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="35d1d39da63c97db09a691dee40a2f72872404f2" translate="yes" xml:space="preserve">
          <source>Note that the request method is not verified.</source>
          <target state="translated">需要注意的是,请求方式没有经过验证。</target>
        </trans-unit>
        <trans-unit id="fcc36a612f1887cd847fa353befaf752f6184ff5" translate="yes" xml:space="preserve">
          <source>Note that the request method is not verified. The different methods are available to make the tests more expressive.</source>
          <target state="translated">注意,请求方法没有经过验证。不同的方法可以让测试更有表现力。</target>
        </trans-unit>
        <trans-unit id="a17d9050880b0000053a7919d1eaaab1da7ea52f" translate="yes" xml:space="preserve">
          <source>Note that the return value of validation methods is not relevant. It's not possible to halt the validate callback chain.</source>
          <target state="translated">注意,验证方法的返回值与此无关。不能停止验证回调链。</target>
        </trans-unit>
        <trans-unit id="6264af4b7ec518a4c0d4264b64656418078b121d" translate="yes" xml:space="preserve">
          <source>Note that the usec for the time passed will be set to 0 to prevent rounding errors with external services, like MySQL (which will round instead of floor, leading to off-by-one-second errors).</source>
          <target state="translated">请注意,通过的时间的usec将被设置为0,以防止外部服务的四舍五入错误,如MySQL(它将四舍五入而不是地板,导致偏离一秒的错误)。</target>
        </trans-unit>
        <trans-unit id="09aeb0d119ddd40cd5438bcd1ca87c38a2dc4212" translate="yes" xml:space="preserve">
          <source>Note that the validator is initialized only once for the whole application life cycle, and not on each validation run.</source>
          <target state="translated">请注意,验证器在整个应用程序生命周期中只初始化一次,而不是在每次验证运行时初始化。</target>
        </trans-unit>
        <trans-unit id="46848172b64a0977b58ec6feefd30b9073bc4ca6" translate="yes" xml:space="preserve">
          <source>Note that the validator will be initialized &lt;em&gt;only once&lt;/em&gt; for the whole application life cycle, and not on each validation run, so be careful about using instance variables inside it.</source>
          <target state="translated">请注意，在整个应用程序生命周期中，验证器只会初始化&lt;em&gt;一次&lt;/em&gt;，而不是在每次验证运行时都初始化&lt;em&gt;一次&lt;/em&gt;，因此请注意在其中使用实例变量。</target>
        </trans-unit>
        <trans-unit id="9dafb7ab1f43dd01f8c7c62c8b916b3286eee444" translate="yes" xml:space="preserve">
          <source>Note that these methods do not strictly require &lt;code&gt;Post&lt;/code&gt; to be a subclass of &lt;a href=&quot;../activerecord/base&quot;&gt;&lt;code&gt;ActiveRecord::Base&lt;/code&gt;&lt;/a&gt;. Any &lt;code&gt;Post&lt;/code&gt; class will work as long as its instances respond to &lt;code&gt;to_key&lt;/code&gt; and &lt;code&gt;model_name&lt;/code&gt;, given that &lt;code&gt;model_name&lt;/code&gt; responds to &lt;code&gt;param_key&lt;/code&gt;. For instance:</source>
          <target state="translated">请注意，这些方法并不严格要求 &lt;code&gt;Post&lt;/code&gt; 为&lt;a href=&quot;../activerecord/base&quot;&gt; &lt;code&gt;ActiveRecord::Base&lt;/code&gt; &lt;/a&gt;的子类。任何 &lt;code&gt;Post&lt;/code&gt; 只要类将作为它的实例回应 &lt;code&gt;to_key&lt;/code&gt; 和 &lt;code&gt;model_name&lt;/code&gt; ，因为 &lt;code&gt;model_name&lt;/code&gt; 响应 &lt;code&gt;param_key&lt;/code&gt; 。例如：</target>
        </trans-unit>
        <trans-unit id="ae0dd2d063090bea5af276a745916be1df9fd6a9" translate="yes" xml:space="preserve">
          <source>Note that these methods do not strictly require &lt;code&gt;Post&lt;/code&gt; to be a subclass of &lt;a href=&quot;../activerecord/base&quot;&gt;ActiveRecord::Base&lt;/a&gt;. Any &lt;code&gt;Post&lt;/code&gt; class will work as long as its instances respond to &lt;code&gt;to_key&lt;/code&gt; and &lt;code&gt;model_name&lt;/code&gt;, given that &lt;code&gt;model_name&lt;/code&gt; responds to &lt;code&gt;param_key&lt;/code&gt;. For instance:</source>
          <target state="translated">请注意，这些方法并不严格要求 &lt;code&gt;Post&lt;/code&gt; 为&lt;a href=&quot;../activerecord/base&quot;&gt;ActiveRecord :: Base&lt;/a&gt;的子类。任何 &lt;code&gt;Post&lt;/code&gt; 只要类将作为它的实例回应 &lt;code&gt;to_key&lt;/code&gt; 和 &lt;code&gt;model_name&lt;/code&gt; ，因为 &lt;code&gt;model_name&lt;/code&gt; 响应 &lt;code&gt;param_key&lt;/code&gt; 。例如：</target>
        </trans-unit>
        <trans-unit id="bc9001a2a86f3ffa7a896a66019a9acaefea21e1" translate="yes" xml:space="preserve">
          <source>Note that this conversion makes some assumptions about the duration of some periods, e.g. months are always 1/12 of year and years are 365.2425 days:</source>
          <target state="translated">请注意,这种换算方式对某些时期的持续时间做了一些假设,例如,月总是一年的1/12,年是365.2425天。</target>
        </trans-unit>
        <trans-unit id="77cc080b11bb02e1e002cb526197387a11eb18f5" translate="yes" xml:space="preserve">
          <source>Note that this is simply 'syntactic sugar' for defining an actual class method:</source>
          <target state="translated">请注意,这只是定义一个实际类方法的 &quot;语法糖&quot;。</target>
        </trans-unit>
        <trans-unit id="b0ebd4a9a6512094d1e187bcc14bccbc19a4f2eb" translate="yes" xml:space="preserve">
          <source>Note that this method actually runs the queries, since the results of some are needed by the next ones when eager loading is going on.</source>
          <target state="translated">请注意,这个方法实际上是在运行查询,因为当急切加载时,一些查询的结果是下一个查询所需要的。</target>
        </trans-unit>
        <trans-unit id="400d486fc3da7592d3e9fa738dc428190cc7b83a" translate="yes" xml:space="preserve">
          <source>Note that this module is completely decoupled from HTTP - the only requirement is a valid &lt;code&gt;_routes&lt;/code&gt; implementation.</source>
          <target state="translated">请注意，此模块与HTTP完全分离-唯一的要求是有效的 &lt;code&gt;_routes&lt;/code&gt; 实现。</target>
        </trans-unit>
        <trans-unit id="6a867944d9d1c972ce2678c23acf249fcb7f57d6" translate="yes" xml:space="preserve">
          <source>Note that this only protects you against the most common mistake when using the format validator - you always need to keep in mind that ^ and $ match the &lt;strong&gt;line&lt;/strong&gt; beginning and line end in Ruby, and not the beginning and end of a string.</source>
          <target state="translated">请注意，这仅在使用格式验证器时保护您避免最常见的错误-您始终要记住^和$匹配Ruby 中的&lt;strong&gt;行首&lt;/strong&gt;和行尾，而不匹配字符串的开头和结尾。</target>
        </trans-unit>
        <trans-unit id="40e976053cd24cf89ca5afb4e56aca4c1a475bf8" translate="yes" xml:space="preserve">
          <source>Note that this option was added as a security measure, to ensure user input cannot be used as locale information unless it is previously known. Therefore, it's recommended not to disable this option unless you have a strong reason for doing so.</source>
          <target state="translated">请注意,这个选项是作为一项安全措施添加的,以确保用户输入的信息不能被用作locale信息,除非它是事先知道的。因此,建议不要禁用这个选项,除非你有强烈的理由这样做。</target>
        </trans-unit>
        <trans-unit id="dcd7cad2f920a22df3327dba7bec9bcba84d5107" translate="yes" xml:space="preserve">
          <source>Note that this option will not affect Active Support callbacks since they never halted the chain when any value was returned.</source>
          <target state="translated">请注意,这个选项不会影响Active Support回调,因为当任何值被返回时,它们从未停止过链。</target>
        </trans-unit>
        <trans-unit id="fbd22df73644dceb2d81a8d497944e60fc8cb29d" translate="yes" xml:space="preserve">
          <source>Note that this protects you only from automatic bots, targeted tailor-made bots cannot be stopped by this. So &lt;em&gt;negative CAPTCHAs might not be good to protect login forms&lt;/em&gt;.</source>
          <target state="translated">请注意，这只能保护您免受自动漫游器的侵害，因此无法阻止有针对性的量身定制的漫游器。因此，&lt;em&gt;否定的验证码可能不利于保护登录表单&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="1c8f134d1a5ae3dfb5037cd0d0c9a0e0c1fbc96d" translate="yes" xml:space="preserve">
          <source>Note that this will also delete records marked as &lt;a href=&quot;core#method-i-readonly-3F&quot;&gt;#readonly?&lt;/a&gt;.</source>
          <target state="translated">请注意，这还将删除标记为&lt;a href=&quot;core#method-i-readonly-3F&quot;&gt;#readonly？的&lt;/a&gt;记录。。</target>
        </trans-unit>
        <trans-unit id="620da313e90e0691449cfa180d7b0fbfd2313d4c" translate="yes" xml:space="preserve">
          <source>Note that this will clear anything that is being used to validate the model for both the &lt;code&gt;validates_with&lt;/code&gt; and &lt;code&gt;validate&lt;/code&gt; methods. It clears the validators that are created with an invocation of &lt;code&gt;validates_with&lt;/code&gt; and the callbacks that are set by an invocation of &lt;code&gt;validate&lt;/code&gt;.</source>
          <target state="translated">请注意，这将清除所有用于验证 &lt;code&gt;validates_with&lt;/code&gt; 和 &lt;code&gt;validate&lt;/code&gt; 方法的模型的内容。它将清除通过 &lt;code&gt;validates_with&lt;/code&gt; 调用创建的验证器以及由 &lt;code&gt;validate&lt;/code&gt; 调用设置的回调。</target>
        </trans-unit>
        <trans-unit id="59556d783955e645825d2046dcb1ae4013692a97" translate="yes" xml:space="preserve">
          <source>Note that to create a variant it's necessary to download the entire blob file from the service. Because of this process, you also want to be considerate about when the variant is actually processed. You shouldn't be processing variants inline in a template, for example. Delay the processing to an on-demand controller, like the one provided in &lt;a href=&quot;representationscontroller&quot;&gt;ActiveStorage::RepresentationsController&lt;/a&gt;.</source>
          <target state="translated">请注意，要创建变体，必须从服务中下载整个blob文件。由于这一过程，您还希望考虑何时实际处理变体。例如，您不应在模板中内联处理变体。将处理延迟到按需控制器，例如&lt;a href=&quot;representationscontroller&quot;&gt;ActiveStorage :: RepresentationsController中&lt;/a&gt;提供的控制器。</target>
        </trans-unit>
        <trans-unit id="4d39e8f3493c6dc9309106568079112d38562f43" translate="yes" xml:space="preserve">
          <source>Note that to create a variant it's necessary to download the entire blob file from the service. Because of this process, you also want to be considerate about when the variant is actually processed. You shouldn't be processing variants inline in a template, for example. Delay the processing to an on-demand controller, like the one provided in ActiveStorage::RepresentationsController.</source>
          <target state="translated">请注意,要创建一个变体,必须从服务中下载整个blob文件。因为这个过程,你也要考虑到变体实际处理的时间。例如,你不应该在模板中在线处理变体。将处理延迟到一个按需控制器,比如ActiveStorage::RepresentationsController中提供的控制器。</target>
        </trans-unit>
        <trans-unit id="5bd0b997f03075f0fd5f7d6476535e63dc8ab0e2" translate="yes" xml:space="preserve">
          <source>Note that unless you have a specific reason to do so, you should prefer using &lt;code&gt;before_action&lt;/code&gt; rather than &lt;code&gt;after_action&lt;/code&gt; in your Action Mailer classes so that headers are parsed properly.</source>
          <target state="translated">请注意，除非有特殊原因，否则您应该在Action Mailer类中更喜欢使用 &lt;code&gt;before_action&lt;/code&gt; 而不是 &lt;code&gt;after_action&lt;/code&gt; ，以便可以正确解析头。</target>
        </trans-unit>
        <trans-unit id="c297a0082106a309bccb2c304dff13f9d16faac5" translate="yes" xml:space="preserve">
          <source>Note that we define the change that we want to happen moving forward in time. Before this migration is run, there will be no table. After, the table will exist. Active Record knows how to reverse this migration as well: if we roll this migration back, it will remove the table.</source>
          <target state="translated">请注意,我们定义了我们希望发生的变化,在时间上向前移动。在运行这个迁移之前,将没有表。之后,表将存在。Active Record也知道如何逆转这个迁移:如果我们将这个迁移回滚,它将删除这个表。</target>
        </trans-unit>
        <trans-unit id="2e926ed7e503e22b4111ceb30ccb88dce58134ae" translate="yes" xml:space="preserve">
          <source>Note that we don't have explicit render at the end of the index action in accordance with &quot;convention over configuration&quot; principle. The rule is that if you do not explicitly render something at the end of a controller action, Rails will automatically look for the &lt;code&gt;action_name.html.erb&lt;/code&gt; template in the controller's view path and render it. So in this case, Rails will render the &lt;code&gt;app/views/books/index.html.erb&lt;/code&gt; file.</source>
          <target state="translated">请注意，按照&amp;ldquo;约定优于配置&amp;rdquo;的原则，在索引操作的末尾没有显式呈现。规则是，如果您未在控制器操作结束时显式渲染某些内容，Rails会在控制器的视图路径中自动查找 &lt;code&gt;action_name.html.erb&lt;/code&gt; 模板并进行渲染。因此，在这种情况下，Rails将呈现 &lt;code&gt;app/views/books/index.html.erb&lt;/code&gt; 文件。</target>
        </trans-unit>
        <trans-unit id="fc309473d6129fce9427ca4ffd7a719d23d30f2b" translate="yes" xml:space="preserve">
          <source>Note that we needed to instantiate a new &lt;code&gt;PictureFileCallbacks&lt;/code&gt; object, since we declared our callback as an instance method. This is particularly useful if the callbacks make use of the state of the instantiated object. Often, however, it will make more sense to declare the callbacks as class methods:</source>
          <target state="translated">请注意，由于我们将回调声明为实例方法，因此需要实例化新的 &lt;code&gt;PictureFileCallbacks&lt;/code&gt; 对象。如果回调使用实例化对象的状态，则这特别有用。但是，通常将回调声明为类方法会更有意义：</target>
        </trans-unit>
        <trans-unit id="2f078fa0d6abee21360b3c264683efe5cc570183" translate="yes" xml:space="preserve">
          <source>Note that we used Mime for the csv mime type as it comes with Rails. For a custom renderer, you'll need to register a mime type with &lt;code&gt;Mime::Type.register&lt;/code&gt;.</source>
          <target state="translated">请注意，Rails附带的csv mime类型使用了Mime。对于自定义渲染器，您需要向 &lt;code&gt;Mime::Type.register&lt;/code&gt; 注册一个mime类型。</target>
        </trans-unit>
        <trans-unit id="493e11f2139307e1b857ae2583c8a70294f296ed" translate="yes" xml:space="preserve">
          <source>Note that when an array is used, the implicit mapping from the values to database integers is derived from the order the values appear in the array. In the example, &lt;code&gt;:active&lt;/code&gt; is mapped to &lt;code&gt;0&lt;/code&gt; as it's the first element, and &lt;code&gt;:archived&lt;/code&gt; is mapped to &lt;code&gt;1&lt;/code&gt;. In general, the &lt;code&gt;i&lt;/code&gt;-th element is mapped to &lt;code&gt;i-1&lt;/code&gt; in the database.</source>
          <target state="translated">请注意，使用数组时，从值到数据库整数的隐式映射是根据值在数组中出现的顺序得出的。在示例中， &lt;code&gt;:active&lt;/code&gt; 被映射为 &lt;code&gt;0&lt;/code&gt; ,因为它是第一个元素，而 &lt;code&gt;:archived&lt;/code&gt; 被映射为 &lt;code&gt;1&lt;/code&gt; 。通常，第 &lt;code&gt;i&lt;/code&gt; 个元素在数据库中映射到 &lt;code&gt;i-1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a00c8ea81b965636b156aa7e6e263970a293bd34" translate="yes" xml:space="preserve">
          <source>Note that while for session values you can set the key to &lt;code&gt;nil&lt;/code&gt;, to delete a cookie value you should use &lt;code&gt;cookies.delete(:key)&lt;/code&gt;.</source>
          <target state="translated">请注意，对于会话值，您可以将键设置为 &lt;code&gt;nil&lt;/code&gt; ，要删除cookie值，应使用 &lt;code&gt;cookies.delete(:key)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c316595d7f1cc476b48b9d06316e2c4531c197bc" translate="yes" xml:space="preserve">
          <source>Note that while for session values you set the key to &lt;code&gt;nil&lt;/code&gt;, to delete a cookie value you should use &lt;code&gt;cookies.delete(:key)&lt;/code&gt;.</source>
          <target state="translated">请注意，将会话值设置为 &lt;code&gt;nil&lt;/code&gt; 时，要删除cookie值，应使用 &lt;code&gt;cookies.delete(:key)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="375abaf21583ac20acd9292c3b8eefbb701bc9fb" translate="yes" xml:space="preserve">
          <source>Note that you can define &lt;code&gt;perform&lt;/code&gt; with as many arguments as you want.</source>
          <target state="translated">请注意，您可以定义任意数量的参数来 &lt;code&gt;perform&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="88cfa3abeb2458e86a60f8ec1b460db8fb10e9dc" translate="yes" xml:space="preserve">
          <source>Note that you can define your own XML parameter parser which would allow you to describe multiple entities in a single request (i.e., by wrapping them all in a single root node), but if you just go with the flow and accept Rails' defaults, life will be much easier.</source>
          <target state="translated">请注意,你可以定义你自己的XML参数解析器,这将允许你在一个请求中描述多个实体(即通过将它们全部包裹在一个根节点中),但如果你只是随波逐流,接受Rails的默认值,生活将变得更加简单。</target>
        </trans-unit>
        <trans-unit id="94fcc4bd31806b338f29c759262bfc0f506b7150" translate="yes" xml:space="preserve">
          <source>Note that you cannot pass a &lt;code&gt;Numeric&lt;/code&gt; value to &lt;code&gt;time_ago_in_words&lt;/code&gt;.</source>
          <target state="translated">请注意，您不能将 &lt;code&gt;Numeric&lt;/code&gt; 传递给 &lt;code&gt;time_ago_in_words&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="15c7bb86a644e7c14c0fe1129c9177d3ba3b4c4c" translate="yes" xml:space="preserve">
          <source>Note that you don't need to add a &lt;code&gt;content&lt;/code&gt; field to your &lt;code&gt;messages&lt;/code&gt; table.</source>
          <target state="translated">请注意，您不需要在 &lt;code&gt;messages&lt;/code&gt; 表中添加 &lt;code&gt;content&lt;/code&gt; 字段。</target>
        </trans-unit>
        <trans-unit id="1f1061c05c09718d57e4b98d385870b473c4dab2" translate="yes" xml:space="preserve">
          <source>Note that you must specify the extension of the image.</source>
          <target state="translated">请注意,您必须指定图像的扩展。</target>
        </trans-unit>
        <trans-unit id="dae165417f9c9af178cba47577008af33ab94075" translate="yes" xml:space="preserve">
          <source>Note that your database must support the raw SQL, that you pass in to the &lt;code&gt;lock&lt;/code&gt; method.</source>
          <target state="translated">请注意，您的数据库必须支持传递给 &lt;code&gt;lock&lt;/code&gt; 方法的原始SQL 。</target>
        </trans-unit>
        <trans-unit id="fbe12ac2a13ce2a7fd2002400594427d3dac75d7" translate="yes" xml:space="preserve">
          <source>Note that, by default, &lt;code&gt;ActiveModel::Model&lt;/code&gt; implements &lt;code&gt;persisted?&lt;/code&gt; to return &lt;code&gt;false&lt;/code&gt;, which is the most common case. You may want to override it in your class to simulate a different scenario:</source>
          <target state="translated">请注意，默认情况下， &lt;code&gt;ActiveModel::Model&lt;/code&gt; 实现是否 &lt;code&gt;persisted?&lt;/code&gt; 返回 &lt;code&gt;false&lt;/code&gt; ，这是最常见的情况。您可能要在类中重写它，以模拟其他情况：</target>
        </trans-unit>
        <trans-unit id="c4cd0cb42d00d8cf72a3e4771ba48575883bef6c" translate="yes" xml:space="preserve">
          <source>Note that, in accordance with &lt;code&gt;form_with&lt;/code&gt; conventions, the field names in the two forms above will also differ. That is, the field name in the first form will be &lt;code&gt;person[picture]&lt;/code&gt; (accessible via &lt;code&gt;params[:person][:picture]&lt;/code&gt;), and the field name in the second form will be just &lt;code&gt;picture&lt;/code&gt; (accessible via &lt;code&gt;params[:picture]&lt;/code&gt;).</source>
          <target state="translated">请注意，根据 &lt;code&gt;form_with&lt;/code&gt; 约定，上述两种形式的字段名称也将有所不同。也就是说，第一种形式的字段名称将为 &lt;code&gt;person[picture]&lt;/code&gt; （可通过 &lt;code&gt;params[:person][:picture]&lt;/code&gt; ），第二种形式的字段名称将仅为 &lt;code&gt;picture&lt;/code&gt; （可通过 &lt;code&gt;params[:picture]&lt;/code&gt; 访问））。</target>
        </trans-unit>
        <trans-unit id="6c0eb83f0bd048cfc7a18f5b34d2c2a7f0774a58" translate="yes" xml:space="preserve">
          <source>Note the &lt;code&gt;data-remote=&quot;true&quot;&lt;/code&gt;. Now, the form will be submitted by Ajax rather than by the browser's normal submit mechanism.</source>
          <target state="translated">注意 &lt;code&gt;data-remote=&quot;true&quot;&lt;/code&gt; 。现在，该表单将由Ajax提交，而不是由浏览器的常规提交机制提交。</target>
        </trans-unit>
        <trans-unit id="9c1859ac871cf8a9f915bb5ab32044e4e003fbbe" translate="yes" xml:space="preserve">
          <source>Note the following caveats:</source>
          <target state="translated">请注意以下注意事项:</target>
        </trans-unit>
        <trans-unit id="0b50c32f894b15a18965fc17ad0b160bd64ca480" translate="yes" xml:space="preserve">
          <source>Note the subtle difference between the two: &lt;code&gt;assert_routing&lt;/code&gt; tests that a URL fits options while &lt;code&gt;assert_recognizes&lt;/code&gt; tests that a URL breaks into parameters properly.</source>
          <target state="translated">注意两者之间的细微差别： &lt;code&gt;assert_routing&lt;/code&gt; 测试URL是否适合选项，而 &lt;code&gt;assert_recognizes&lt;/code&gt; 测试URL是否正确分解为参数。</target>
        </trans-unit>
        <trans-unit id="64a72b7714830d8e8def9655dd5179990d52e442" translate="yes" xml:space="preserve">
          <source>Note you can't append with &lt;code&gt;atomic_write&lt;/code&gt;.</source>
          <target state="translated">请注意，您不能附加 &lt;code&gt;atomic_write&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e012da3c873f5e7f25a227356956d77d8cbb45da" translate="yes" xml:space="preserve">
          <source>Note, all the attributes for all the cases are kept in the same table. Read more: &lt;a href=&quot;https://www.martinfowler.com/eaaCatalog/singleTableInheritance.html&quot;&gt;www.martinfowler.com/eaaCatalog/singleTableInheritance.html&lt;/a&gt;</source>
          <target state="translated">注意，所有案例的所有属性都保存在同一表中。了解更多：&lt;a href=&quot;https://www.martinfowler.com/eaaCatalog/singleTableInheritance.html&quot;&gt;www.martinfowler.com/eaaCatalog/singleTableInheritance.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0e23d909c309df5b8483a6d80a959b1e4ab0714c" translate="yes" xml:space="preserve">
          <source>Note, however, the extra bit at the top of that action:</source>
          <target state="translated">不过,请注意,这个动作的顶端多了一点。</target>
        </trans-unit>
        <trans-unit id="a11bc31bbee6149856fb4cc76f9292762b870e2b" translate="yes" xml:space="preserve">
          <source>Note, if data was written with the &lt;code&gt;:expires_in&lt;/code&gt; or &lt;code&gt;:version&lt;/code&gt; options, both of these conditions are applied before the data is returned.</source>
          <target state="translated">注意，如果使用 &lt;code&gt;:expires_in&lt;/code&gt; 或 &lt;code&gt;:version&lt;/code&gt; 选项写入数据，则在返回数据之前将同时应用这两个条件。</target>
        </trans-unit>
        <trans-unit id="173438e96ca17bd100e0efb41be6765ffc5dc263" translate="yes" xml:space="preserve">
          <source>Note, the &lt;code&gt;only: &amp;lt;type&amp;gt;&lt;/code&gt; hash will apply to all callbacks defined on that method call. To get around this you can call the &lt;a href=&quot;callbacks#method-i-define_model_callbacks&quot;&gt;#define_model_callbacks&lt;/a&gt; method as many times as you need.</source>
          <target state="translated">注意， &lt;code&gt;only: &amp;lt;type&amp;gt;&lt;/code&gt; 哈希将应用于该方法调用上定义的所有回调。为了解决这个问题，您可以根据需要多次调用&lt;a href=&quot;callbacks#method-i-define_model_callbacks&quot;&gt;#define_model_callbacks&lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="1d812865558d117bdf49f2b3d5ad28d74e27b13f" translate="yes" xml:space="preserve">
          <source>Note, the &lt;code&gt;only: &amp;lt;type&amp;gt;&lt;/code&gt; hash will apply to all callbacks defined on that method call. To get around this you can call the &lt;a href=&quot;callbacks#method-i-define_model_callbacks&quot;&gt;&lt;code&gt;define_model_callbacks&lt;/code&gt;&lt;/a&gt; method as many times as you need.</source>
          <target state="translated">注意， &lt;code&gt;only: &amp;lt;type&amp;gt;&lt;/code&gt; 哈希将应用于该方法调用上定义的所有回调。为了解决这个问题，您可以根据&lt;a href=&quot;callbacks#method-i-define_model_callbacks&quot;&gt; &lt;code&gt;define_model_callbacks&lt;/code&gt; &lt;/a&gt;多次调用define_model_callbacks方法。</target>
        </trans-unit>
        <trans-unit id="e730840f4cf0c423b310013d1509281bf488401d" translate="yes" xml:space="preserve">
          <source>Note, this method will return nil if ActiveRecord::Base.cache_versioning is set to &lt;code&gt;false&lt;/code&gt; (which it is by default until Rails 6.0).</source>
          <target state="translated">注意，如果ActiveRecord :: Base.cache_versioning设置为 &lt;code&gt;false&lt;/code&gt; （在Rails 6.0之前是默认值），此方法将返回nil 。</target>
        </trans-unit>
        <trans-unit id="b45a3f550d439e7107e510c56807fa2b019b9caf" translate="yes" xml:space="preserve">
          <source>Note, this method will return nil if ActiveRecord::Base.cache_versioning is set to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">注意，如果ActiveRecord :: Base.cache_versioning设置为 &lt;code&gt;false&lt;/code&gt; ，则此方法将返回nil 。</target>
        </trans-unit>
        <trans-unit id="ed3444d2211e13b8f88da9fc93d4c1ee9b636bb8" translate="yes" xml:space="preserve">
          <source>Note, you should use &lt;code&gt;return false&lt;/code&gt; to prevent an event for &lt;code&gt;jquery-ujs&lt;/code&gt; and &lt;code&gt;event.preventDefault()&lt;/code&gt; for &lt;code&gt;rails-ujs&lt;/code&gt;.</source>
          <target state="translated">请注意，您应该使用 &lt;code&gt;return false&lt;/code&gt; 以防止事件 &lt;code&gt;jquery-ujs&lt;/code&gt; 和 &lt;code&gt;event.preventDefault()&lt;/code&gt; 用于 &lt;code&gt;rails-ujs&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c86af99f3964446c447ca9ff5afc05885736a4b0" translate="yes" xml:space="preserve">
          <source>Note, you should use &lt;code&gt;return false&lt;/code&gt; to prevent event for &lt;code&gt;jquery-ujs&lt;/code&gt; and &lt;code&gt;e.preventDefault()&lt;/code&gt; for &lt;code&gt;rails-ujs&lt;/code&gt;</source>
          <target state="translated">请注意，您应该使用 &lt;code&gt;return false&lt;/code&gt; 以防止事件 &lt;code&gt;jquery-ujs&lt;/code&gt; 和 &lt;code&gt;e.preventDefault()&lt;/code&gt; 用于 &lt;code&gt;rails-ujs&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="91573f6985f0c4b16cbd786a58cd14db5f991daf" translate="yes" xml:space="preserve">
          <source>Note: &lt;code&gt;:id&lt;/code&gt; is always present.</source>
          <target state="translated">注意：： &lt;code&gt;:id&lt;/code&gt; 始终存在。</target>
        </trans-unit>
        <trans-unit id="62cada94601411d3b4156a354a18714f3cfb615f" translate="yes" xml:space="preserve">
          <source>Note: &lt;code&gt;MySQL&lt;/code&gt; only supports index order from 8.0.1 onwards (earlier versions accepted the syntax but ignored it).</source>
          <target state="translated">注意： &lt;code&gt;MySQL&lt;/code&gt; 从8.0.1开始仅支持索引顺序（早期版本接受该语法，但忽略了该语法）。</target>
        </trans-unit>
        <trans-unit id="8634df8460327a401d547cd66d1daa13389930f3" translate="yes" xml:space="preserve">
          <source>Note: &lt;code&gt;yield&lt;/code&gt; can still be used to retrieve the stored content, but calling &lt;code&gt;yield&lt;/code&gt; doesn't work in helper modules, while &lt;code&gt;content_for&lt;/code&gt; does.</source>
          <target state="translated">注意： &lt;code&gt;yield&lt;/code&gt; 仍然可以用于检索存储的内容，但是在助手模块中调用 &lt;code&gt;yield&lt;/code&gt; 无效，而 &lt;code&gt;content_for&lt;/code&gt; 则可以。</target>
        </trans-unit>
        <trans-unit id="8da99924f8d120d0211cdf5e26cda8c8a164764e" translate="yes" xml:space="preserve">
          <source>Note: Acronyms that are passed to &lt;code&gt;pluralize&lt;/code&gt; will no longer be recognized, since the acronym will not occur as a delimited unit in the pluralized result. To work around this, you must specify the pluralized form as an acronym as well:</source>
          <target state="translated">注意：传递给 &lt;code&gt;pluralize&lt;/code&gt; 的首字母缩写将不再被识别，因为首字母缩写在复数结果中不会作为分隔单位出现。要变通解决此问题，您还必须指定复数形式作为首字母缩写词：</target>
        </trans-unit>
        <trans-unit id="cc77ba91f6d6dff22900edccd870686c14ce0dec" translate="yes" xml:space="preserve">
          <source>Note: Although it is often much faster than the alternative, &lt;a href=&quot;classmethods#method-i-destroy&quot;&gt;&lt;code&gt;destroy&lt;/code&gt;&lt;/a&gt;, skipping callbacks might bypass business logic in your application that ensures referential integrity or performs other essential jobs.</source>
          <target state="translated">注意：尽管它通常比替代方法快得多，但&lt;a href=&quot;classmethods#method-i-destroy&quot;&gt; &lt;code&gt;destroy&lt;/code&gt; &lt;/a&gt;，skip回调可能会绕过应用程序中的业务逻辑，以确保引用完整性或执行其他重要工作。</target>
        </trans-unit>
        <trans-unit id="8a8c7e5a63f17d1875bad1c59c527c97a6dd626d" translate="yes" xml:space="preserve">
          <source>Note: Although it is often much faster than the alternative, &lt;a href=&quot;classmethods#method-i-destroy&quot;&gt;destroy&lt;/a&gt;, skipping callbacks might bypass business logic in your application that ensures referential integrity or performs other essential jobs.</source>
          <target state="translated">注意：尽管它通常比替代方法快得多，但是&lt;a href=&quot;classmethods#method-i-destroy&quot;&gt;destroy&lt;/a&gt;，skip回调可能会绕过应用程序中的业务逻辑，以确保引用完整性或执行其他重要工作。</target>
        </trans-unit>
        <trans-unit id="4e9ece58e771c7dc934cee4b84518319fbbf0ee9" translate="yes" xml:space="preserve">
          <source>Note: As Active Record callbacks are not triggered, this method will not automatically update &lt;code&gt;updated_at&lt;/code&gt;/&lt;code&gt;updated_on&lt;/code&gt; columns.</source>
          <target state="translated">注意：由于未触发Active Record回调，因此此方法将不会自动更新 &lt;code&gt;updated_at&lt;/code&gt; / &lt;code&gt;updated_on&lt;/code&gt; 列。</target>
        </trans-unit>
        <trans-unit id="b382d38463c4b9772db0f0e4f20597ea1d44539b" translate="yes" xml:space="preserve">
          <source>Note: Fixtures are unordered. If you want ordered fixtures, use the omap YAML type. See &lt;a href=&quot;http://yaml.org/type/omap.html&quot;&gt;yaml.org/type/omap.html&lt;/a&gt; for the specification. You will need ordered fixtures when you have foreign key constraints on keys in the same table. This is commonly needed for tree structures. Example:</source>
          <target state="translated">注意：灯具是无序的。如果要订购灯具，请使用omap YAML类型。有关规范，请参见&lt;a href=&quot;http://yaml.org/type/omap.html&quot;&gt;yaml.org/type/omap.html&lt;/a&gt;。当您在同一表中的键上具有外键约束时，将需要订购的固定装置。这对于树结构通常是必需的。例：</target>
        </trans-unit>
        <trans-unit id="6bdee0660c95430cdd80faf743049e2449f20e2c" translate="yes" xml:space="preserve">
          <source>Note: Fixtures are unordered. If you want ordered fixtures, use the omap YAML type. See &lt;a href=&quot;https://yaml.org/type/omap.html&quot;&gt;yaml.org/type/omap.html&lt;/a&gt; for the specification. You will need ordered fixtures when you have foreign key constraints on keys in the same table. This is commonly needed for tree structures. Example:</source>
          <target state="translated">注意：灯具是无序的。如果要订购灯具，请使用omap YAML类型。有关规范，请参见&lt;a href=&quot;https://yaml.org/type/omap.html&quot;&gt;yaml.org/type/omap.html&lt;/a&gt;。当您在同一表中的键上具有外键约束时，将需要订购的固定装置。这对于树结构通常是必需的。例子：</target>
        </trans-unit>
        <trans-unit id="e3f911ece33a8889898f780391535eeae25b4645" translate="yes" xml:space="preserve">
          <source>Note: If the day is not included as an option but the month is, the day will be set to the 1st to ensure that all month choices are valid.</source>
          <target state="translated">注意:如果日期不包括在选项中,但月份包括在选项中,则日期将被设置为1号,以确保所有月份的选择是有效的。</target>
        </trans-unit>
        <trans-unit id="5c365c37375888e18bc3f7fffc3e3409ead7ea82" translate="yes" xml:space="preserve">
          <source>Note: Instantiation, callback execution, and deletion of each record can be time consuming when you're removing many records at once. It generates at least one SQL &lt;code&gt;DELETE&lt;/code&gt; query per record (or possibly more, to enforce your callbacks). If you want to delete many rows quickly, without concern for their associations or callbacks, use &lt;a href=&quot;relation#method-i-delete_all&quot;&gt;&lt;code&gt;delete_all&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">注意：一次删除多个记录时，实例化，回调执行和删除每个记录可能很耗时。它每条记录至少生成一个SQL &lt;code&gt;DELETE&lt;/code&gt; 查询（或者可能更多，以强制执行回调）。如果要快速删除许多行，而不用担心它们的关联或回调，请使用&lt;a href=&quot;relation#method-i-delete_all&quot;&gt; &lt;code&gt;delete_all&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="455ad7b304457d0818b156a5d5a258e87af23432" translate="yes" xml:space="preserve">
          <source>Note: Instantiation, callback execution, and deletion of each record can be time consuming when you're removing many records at once. It generates at least one SQL &lt;code&gt;DELETE&lt;/code&gt; query per record (or possibly more, to enforce your callbacks). If you want to delete many rows quickly, without concern for their associations or callbacks, use &lt;a href=&quot;relation#method-i-delete_all&quot;&gt;delete_all&lt;/a&gt; instead.</source>
          <target state="translated">注意：一次删除多个记录时，实例化，回调执行和删除每个记录可能很耗时。它每条记录至少生成一个SQL &lt;code&gt;DELETE&lt;/code&gt; 查询（或者可能更多，以强制执行回调）。如果要快速删除许多行，而不用担心它们的关联或回调，请使用&lt;a href=&quot;relation#method-i-delete_all&quot;&gt;delete_all&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="acacd3efece89a8db79dda6270478358ee24035b" translate="yes" xml:space="preserve">
          <source>Note: Joining, eager loading and preloading of these associations is not possible. These operations happen before instance creation and the scope will be called with a &lt;code&gt;nil&lt;/code&gt; argument.</source>
          <target state="translated">注意：无法加入，渴望加载和预加载这些关联。这些操作发生在实例创建之前，并且将使用 &lt;code&gt;nil&lt;/code&gt; 参数调用作用域。</target>
        </trans-unit>
        <trans-unit id="308e33031d5f89bc20b7a0f4592db047a4d56233" translate="yes" xml:space="preserve">
          <source>Note: MySQL only supports index order from 8.0.1 onwards (earlier versions accepted the syntax but ignored it).</source>
          <target state="translated">注意:MySQL只支持8.0.1以后的索引顺序(早期版本接受该语法但忽略了它)。</target>
        </trans-unit>
        <trans-unit id="2c2f8f1f61d9a03d6edf900890dd17a404d9fe19" translate="yes" xml:space="preserve">
          <source>Note: Not supported by &lt;code&gt;MySQL&lt;/code&gt;.</source>
          <target state="translated">注意： &lt;code&gt;MySQL&lt;/code&gt; 不支持。</target>
        </trans-unit>
        <trans-unit id="124f350c136512944ed0f6dcf73a12862c334ad1" translate="yes" xml:space="preserve">
          <source>Note: Partial indexes are only supported for PostgreSQL and SQLite 3.8.0+.</source>
          <target state="translated">注意:部分索引只支持PostgreSQL和SQLite 3.8.0+。</target>
        </trans-unit>
        <trans-unit id="42fb334b409ac2f28567a18c3f74b4bcf9726af2" translate="yes" xml:space="preserve">
          <source>Note: Partial indexes are only supported for PostgreSQL and SQLite.</source>
          <target state="translated">注意:部分索引只支持PostgreSQL和SQLite。</target>
        </trans-unit>
        <trans-unit id="c0d6873d18327e72cbed60ce10d25503c5b6ff17" translate="yes" xml:space="preserve">
          <source>Note: SQLite doesn't support index length.</source>
          <target state="translated">注意:SQLite不支持索引长度。</target>
        </trans-unit>
        <trans-unit id="2dfc9a11d5d1fa70f8585fb64a2db0c1f6ce0546" translate="yes" xml:space="preserve">
          <source>Note: SSEs are not currently supported by IE. However, they are supported by Chrome, Firefox, Opera, and Safari.</source>
          <target state="translated">注意:目前IE不支持SSE。但是,Chrome、Firefox、Opera和Safari都支持。</target>
        </trans-unit>
        <trans-unit id="edebfe049fe010222ebf5af3b99dfdb7bfb59cc1" translate="yes" xml:space="preserve">
          <source>Note: Since Rails doesn't know which database is the replica for your writer you will need to add this to the abstract class after you're done.</source>
          <target state="translated">注意:由于Rails不知道哪个数据库是你的writer的副本,你需要在完成后将其添加到抽象类中。</target>
        </trans-unit>
        <trans-unit id="1d7c763a29b125ebac02b340adfd08afb47105eb" translate="yes" xml:space="preserve">
          <source>Note: The &lt;code&gt;attachable_type=&lt;/code&gt; method is being called when assigning an &lt;code&gt;attachable&lt;/code&gt;. The &lt;code&gt;class_name&lt;/code&gt; of the &lt;code&gt;attachable&lt;/code&gt; is passed as a &lt;a href=&quot;../../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">注意：分配 &lt;code&gt;attachable&lt;/code&gt; 时，将调用 &lt;code&gt;attachable_type=&lt;/code&gt; 方法。所述 &lt;code&gt;class_name&lt;/code&gt; 所述的 &lt;code&gt;attachable&lt;/code&gt; 作为被传递&lt;a href=&quot;../../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c86cc9acd3cc4679a14049283572db943a13a4c8" translate="yes" xml:space="preserve">
          <source>Note: The &lt;code&gt;attachable_type=&lt;/code&gt; method is being called when assigning an &lt;code&gt;attachable&lt;/code&gt;. The &lt;code&gt;class_name&lt;/code&gt; of the &lt;code&gt;attachable&lt;/code&gt; is passed as a &lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt;.</source>
          <target state="translated">注意：分配 &lt;code&gt;attachable&lt;/code&gt; 时，将调用 &lt;code&gt;attachable_type=&lt;/code&gt; 方法。所述 &lt;code&gt;class_name&lt;/code&gt; 所述的 &lt;code&gt;attachable&lt;/code&gt; 作为被传递&lt;a href=&quot;../../string&quot;&gt;字符串&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b32677b2c1945dcf62d2c8edf09310b4dc2135f1" translate="yes" xml:space="preserve">
          <source>Note: The adapter provided by this method must provide some additional methods from those expected of a standard &lt;code&gt;ActiveJob::QueueAdapter&lt;/code&gt; in order to be used with the active job test helpers. Refer to &lt;code&gt;ActiveJob::QueueAdapters::TestAdapter&lt;/code&gt;.</source>
          <target state="translated">注意：此方法提供的适配器必须提供标准 &lt;code&gt;ActiveJob::QueueAdapter&lt;/code&gt; 期望的方法之外的一些其他方法，以便与活动作业测试助手一起使用。请参考 &lt;code&gt;ActiveJob::QueueAdapters::TestAdapter&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="db49b8fb43e5b880d2e4b216b1307840d408a679" translate="yes" xml:space="preserve">
          <source>Note: The new instance will share a link to the same attributes as the original class. Therefore the sti column value will still be the same. Any change to the attributes on either instance will affect both instances. If you want to change the sti column as well, use &lt;a href=&quot;persistence#method-i-becomes-21&quot;&gt;&lt;code&gt;becomes!&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">注意：新实例将共享一个指向与原始类相同属性的链接。因此，sti列值将仍然相同。任何一个实例上的属性的任何更改都将影响两个实例。如果您还想更改sti列，请使用&lt;a href=&quot;persistence#method-i-becomes-21&quot;&gt; &lt;code&gt;becomes!&lt;/code&gt; &lt;/a&gt;反而。</target>
        </trans-unit>
        <trans-unit id="856990d094574273e23f235fcf21d1ef8d7d3679" translate="yes" xml:space="preserve">
          <source>Note: The new instance will share a link to the same attributes as the original class. Therefore the sti column value will still be the same. Any change to the attributes on either instance will affect both instances. If you want to change the sti column as well, use &lt;a href=&quot;persistence#method-i-becomes-21&quot;&gt;becomes!&lt;/a&gt; instead.</source>
          <target state="translated">注意：新实例将共享一个指向与原始类相同属性的链接。因此，sti列的值将仍然相同。任何一个实例上的属性的任何更改都会影响两个实例。如果您还想更改sti列，请使用&lt;a href=&quot;persistence#method-i-becomes-21&quot;&gt;！&lt;/a&gt;代替。</target>
        </trans-unit>
        <trans-unit id="e495b3a8620060a6500fb583012fa4372f4b9ce5" translate="yes" xml:space="preserve">
          <source>Note: The old instance's sti column value will be changed too, as both objects share the same set of attributes.</source>
          <target state="translated">注意:旧实例的sti列值也会被改变,因为两个对象共享同一组属性。</target>
        </trans-unit>
        <trans-unit id="da5de37a9fe710621b520911dc22e6273fdacef4" translate="yes" xml:space="preserve">
          <source>Note: The precision is the total number of significant digits, and the scale is the number of digits that can be stored following the decimal point. For example, the number 123.45 has a precision of 5 and a scale of 2. A decimal with a precision of 5 and a scale of 2 can range from -999.99 to 999.99.</source>
          <target state="translated">注:精度是指有意义的数字总数,比例是指小数点后面可以存储的数字数。例如,数字123.45的精度为5,比例为2,精度为5的小数,比例为2的小数可以从-999.99到999.99。</target>
        </trans-unit>
        <trans-unit id="7e51e35c9bfbf1212b52250689598e0b6edbcfee" translate="yes" xml:space="preserve">
          <source>Note: This also works for the methods in &lt;a href=&quot;formoptionshelper&quot;&gt;&lt;code&gt;FormOptionsHelper&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;datehelper&quot;&gt;&lt;code&gt;DateHelper&lt;/code&gt;&lt;/a&gt; that are designed to work with an object as base, like &lt;a href=&quot;formoptionshelper#method-i-collection_select&quot;&gt;&lt;code&gt;FormOptionsHelper#collection_select&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;datehelper#method-i-datetime_select&quot;&gt;&lt;code&gt;DateHelper#datetime_select&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">注意：这也适用于&lt;a href=&quot;formoptionshelper&quot;&gt; &lt;code&gt;FormOptionsHelper&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;datehelper&quot;&gt; &lt;code&gt;DateHelper&lt;/code&gt; &lt;/a&gt;中设计为以对象作为基础的方法，例如&lt;a href=&quot;formoptionshelper#method-i-collection_select&quot;&gt; &lt;code&gt;FormOptionsHelper#collection_select&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;datehelper#method-i-datetime_select&quot;&gt; &lt;code&gt;DateHelper#datetime_select&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f9065955578098ed0bb8bd025f933ad59c21c6e6" translate="yes" xml:space="preserve">
          <source>Note: This also works for the methods in &lt;a href=&quot;formoptionshelper&quot;&gt;FormOptionsHelper&lt;/a&gt; and &lt;a href=&quot;datehelper&quot;&gt;DateHelper&lt;/a&gt; that are designed to work with an object as base, like &lt;a href=&quot;formoptionshelper#method-i-collection_select&quot;&gt;ActionView::Helpers::FormOptionsHelper#collection_select&lt;/a&gt; and &lt;a href=&quot;datehelper#method-i-datetime_select&quot;&gt;ActionView::Helpers::DateHelper#datetime_select&lt;/a&gt;.</source>
          <target state="translated">注意：这也适用于&lt;a href=&quot;formoptionshelper&quot;&gt;FormOptionsHelper&lt;/a&gt;和&lt;a href=&quot;datehelper&quot;&gt;DateHelper&lt;/a&gt;中的设计为以对象为基础的方法，例如&lt;a href=&quot;formoptionshelper#method-i-collection_select&quot;&gt;ActionView :: Helpers :: FormOptionsHelper＃collection_select&lt;/a&gt;和&lt;a href=&quot;datehelper#method-i-datetime_select&quot;&gt;ActionView :: Helpers :: DateHelper＃datetime_select&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c2352219e415aacb6ef215e56a9cd402e35a6e9a" translate="yes" xml:space="preserve">
          <source>Note: This assertion is simply a shortcut for:</source>
          <target state="translated">注:这个论断只是一个快捷方式。</target>
        </trans-unit>
        <trans-unit id="ef0e993df538909451f4951854e2341a7ebc0570" translate="yes" xml:space="preserve">
          <source>Note: This is an optimization of &lt;code&gt;Enumerable#excluding&lt;/code&gt; that uses &lt;code&gt;Array#-&lt;/code&gt; instead of &lt;code&gt;Array#reject&lt;/code&gt; for performance reasons.</source>
          <target state="translated">注意：这是对 &lt;code&gt;Enumerable#excluding&lt;/code&gt; 的优化，出于性能原因，该优化使用 &lt;code&gt;Array#-&lt;/code&gt; 而不是 &lt;code&gt;Array#reject&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="863ca249317e9c0dbb645dce430c3cd0b6faa965" translate="yes" xml:space="preserve">
          <source>Note: This is purely a browser performance optimization and is not meant for server load balancing. See &lt;a href=&quot;https://www.die.net/musings/page_load_time&quot;&gt;www.die.net/musings/page_load_time&lt;/a&gt;/ for background and &lt;a href=&quot;https://www.browserscope.org/?category=network&quot;&gt;www.browserscope.org/?category=network&lt;/a&gt; for connection limit data.</source>
          <target state="translated">注意：这纯粹是浏览器性能的优化，并不意味着服务器负载平衡。有关背景，请参见&lt;a href=&quot;https://www.die.net/musings/page_load_time&quot;&gt;www.die.net/musings/page_load_time/&lt;/a&gt;，有关连接限制数据，请参见&lt;a href=&quot;https://www.browserscope.org/?category=network&quot;&gt;www.browserscope.org/?category=network&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4a3287c1634d93a72d137f0d950e3c604c3df357" translate="yes" xml:space="preserve">
          <source>Note: To turn off all caching provided by Action Controller, set</source>
          <target state="translated">注意:要关闭Action Controller提供的所有缓存,请设置</target>
        </trans-unit>
        <trans-unit id="5b440437b3604be9608bede173ea6d8501bdfdc8" translate="yes" xml:space="preserve">
          <source>Note: Updating a large number of records will run an UPDATE query for each record, which may cause a performance issue. When running callbacks is not needed for each record update, it is preferred to use &lt;a href=&quot;../relation#method-i-update_all&quot;&gt;update_all&lt;/a&gt; for updating all records in a single query.</source>
          <target state="translated">注意：更新大量记录将为每个记录运行UPDATE查询，这可能会导致性能问题。当每个记录更新都不需要运行回调时，最好使用&lt;a href=&quot;../relation#method-i-update_all&quot;&gt;update_all&lt;/a&gt;在单个查询中更新所有记录。</target>
        </trans-unit>
        <trans-unit id="62b50481c99d023afaf5455de8ac79fe5a963dac" translate="yes" xml:space="preserve">
          <source>Note: You can't pass in a condition as a string (like &lt;code&gt;name =
'Jamie'&lt;/code&gt;), since it would be sanitized and then queried against the primary key column, like &lt;code&gt;id = 'name =
\'Jamie\''&lt;/code&gt;.</source>
          <target state="translated">注意：您不能以字符串形式传递条件（例如 &lt;code&gt;name = 'Jamie'&lt;/code&gt; ），因为它将被清理然后针对主键列进行查询，例如 &lt;code&gt;id = 'name = \'Jamie\''&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0d75342d001759e22c93da271a1e94d775d9beba" translate="yes" xml:space="preserve">
          <source>Note: not all valid &lt;a href=&quot;querymethods#method-i-select&quot;&gt;Relation#select&lt;/a&gt; expressions are valid &lt;a href=&quot;calculations#method-i-count&quot;&gt;&lt;code&gt;count&lt;/code&gt;&lt;/a&gt; expressions. The specifics differ between databases. In invalid cases, an error from the database is thrown.</source>
          <target state="translated">注意：并非所有有效的&lt;a href=&quot;querymethods#method-i-select&quot;&gt;Relation＃select&lt;/a&gt;表达式都是有效的&lt;a href=&quot;calculations#method-i-count&quot;&gt; &lt;code&gt;count&lt;/code&gt; &lt;/a&gt;表达式。不同数据库之间的细节有所不同。在无效情况下，将引发数据库错误。</target>
        </trans-unit>
        <trans-unit id="9e95bdc13adc134c9b83e94f1ac9f03cf6cfc487" translate="yes" xml:space="preserve">
          <source>Note: not all valid &lt;a href=&quot;querymethods#method-i-select&quot;&gt;Relation#select&lt;/a&gt; expressions are valid &lt;a href=&quot;calculations#method-i-count&quot;&gt;count&lt;/a&gt; expressions. The specifics differ between databases. In invalid cases, an error from the database is thrown.</source>
          <target state="translated">注意：并非所有有效的&lt;a href=&quot;querymethods#method-i-select&quot;&gt;Relation＃select&lt;/a&gt;表达式都是有效的&lt;a href=&quot;calculations#method-i-count&quot;&gt;count&lt;/a&gt;表达式。数据库之间的细节有所不同。在无效情况下，将引发数据库错误。</target>
        </trans-unit>
        <trans-unit id="711fa045d5bab865319e265bf87d0a98a6d2ee1b" translate="yes" xml:space="preserve">
          <source>Note: only supported by &lt;code&gt;MySQL&lt;/code&gt;.</source>
          <target state="translated">注意：仅 &lt;code&gt;MySQL&lt;/code&gt; 支持。</target>
        </trans-unit>
        <trans-unit id="cb90894dfb9810668140dd5abc132702407b2049" translate="yes" xml:space="preserve">
          <source>Note: only supported by MySQL.</source>
          <target state="translated">注:仅由MySQL支持。</target>
        </trans-unit>
        <trans-unit id="11012fa2ff042b2ccc5930b6e83ce185707b0ecd" translate="yes" xml:space="preserve">
          <source>Note: only supported by PostgreSQL</source>
          <target state="translated">注:只支持PostgreSQL</target>
        </trans-unit>
        <trans-unit id="e98240c921e487203c2cf455698f4a0b6816698a" translate="yes" xml:space="preserve">
          <source>Note: only supported by PostgreSQL and &lt;code&gt;MySQL&lt;/code&gt;</source>
          <target state="translated">注意：仅受PostgreSQL和 &lt;code&gt;MySQL&lt;/code&gt; 支持</target>
        </trans-unit>
        <trans-unit id="b979edd03dc476656559cc41b1e4a6d868f05723" translate="yes" xml:space="preserve">
          <source>Note: only supported by PostgreSQL and MySQL</source>
          <target state="translated">注:只支持PostgreSQL和MySQL</target>
        </trans-unit>
        <trans-unit id="d4570c3579af0b879f140c7b30b54ae99eeeb839" translate="yes" xml:space="preserve">
          <source>Note: only supported by PostgreSQL.</source>
          <target state="translated">注:仅PostgreSQL支持。</target>
        </trans-unit>
        <trans-unit id="9a83e4f90833243e0c6406c5f754ff630641257d" translate="yes" xml:space="preserve">
          <source>Note: this feature is not available with the threaded parallelization.</source>
          <target state="translated">注意:线程并行化时,此功能不可用。</target>
        </trans-unit>
        <trans-unit id="205d08dcd8d151326e23421d0d1ac6edc18b3313" translate="yes" xml:space="preserve">
          <source>Note: use &lt;code&gt;\A&lt;/code&gt; and &lt;code&gt;\z&lt;/code&gt; to match the start and end of the string, &lt;code&gt;^&lt;/code&gt; and &lt;code&gt;$&lt;/code&gt; match the start/end of a line.</source>
          <target state="translated">注意：使用 &lt;code&gt;\A&lt;/code&gt; 和 &lt;code&gt;\z&lt;/code&gt; 匹配字符串的开头和结尾， &lt;code&gt;^&lt;/code&gt; 和 &lt;code&gt;$&lt;/code&gt; 匹配行的开头/结尾。</target>
        </trans-unit>
        <trans-unit id="773ff38978dbfe8d2f1950aaff40b3a6289527ac" translate="yes" xml:space="preserve">
          <source>Note: when using &lt;code&gt;controller&lt;/code&gt;, the route is simply named after the method you call on the block parameter rather than map.</source>
          <target state="translated">注意：使用 &lt;code&gt;controller&lt;/code&gt; 时，路由仅以您在block参数上调用的方法命名，而不是map。</target>
        </trans-unit>
        <trans-unit id="70440046a3dc2e079f23ee1c57dfa76669b732aa" translate="yes" xml:space="preserve">
          <source>Notes</source>
          <target state="translated">Notes</target>
        </trans-unit>
        <trans-unit id="186ee9e469f8ca1542732840e3e0f13195377443" translate="yes" xml:space="preserve">
          <source>Notice how the &lt;code&gt;edit&lt;/code&gt; and &lt;code&gt;update&lt;/code&gt; actions resemble the &lt;code&gt;new&lt;/code&gt; and &lt;code&gt;create&lt;/code&gt; actions.</source>
          <target state="translated">请注意， &lt;code&gt;edit&lt;/code&gt; 和 &lt;code&gt;update&lt;/code&gt; 操作与 &lt;code&gt;new&lt;/code&gt; 操作和 &lt;code&gt;create&lt;/code&gt; 操作的相似之处。</target>
        </trans-unit>
        <trans-unit id="39429a684161fc0c5605d56b46f44c1c03d8efe8" translate="yes" xml:space="preserve">
          <source>Notice how the short-style &lt;code&gt;form_with&lt;/code&gt; invocation is conveniently the same, regardless of the record being new or existing. Record identification is smart enough to figure out if the record is new by asking &lt;code&gt;record.new_record?&lt;/code&gt;. It also selects the correct path to submit to, and the name based on the class of the object.</source>
          <target state="translated">请注意，无论记录是新记录还是现有记录，简短形式的 &lt;code&gt;form_with&lt;/code&gt; 调用都是如何方便地相同的。记录标识足够聪明，可以通过询问 &lt;code&gt;record.new_record?&lt;/code&gt; 来确定记录是否为新记录。。它还根据对象的类别选择要提交的正确路径和名称。</target>
        </trans-unit>
        <trans-unit id="75bd1184347256b109b4e2f947e344ffd54e712e" translate="yes" xml:space="preserve">
          <source>Notice how the short-style &lt;code&gt;form_with&lt;/code&gt; invocation is conveniently the same, regardless of the record being new or existing. Record identification is smart enough to figure out if the record is new by asking &lt;code&gt;record.persisted?&lt;/code&gt;. It also selects the correct path to submit to, and the name based on the class of the object.</source>
          <target state="translated">请注意，无论记录是新记录还是现有记录，简短形式的 &lt;code&gt;form_with&lt;/code&gt; 调用都是如何方便地相同的。记录识别足够聪明，可以通过询问 &lt;code&gt;record.persisted?&lt;/code&gt; 来确定记录是否为新记录。。它还根据对象的类别选择要提交的正确路径和名称。</target>
        </trans-unit>
        <trans-unit id="5b4ecc2e4f41f048a095e5f69279b44bdb2f223b" translate="yes" xml:space="preserve">
          <source>Notice that &amp;ldquo;rails:generators:test_unit&amp;rdquo; could be loaded as well, what &lt;code&gt;Rails&lt;/code&gt; looks for is the first and last parts of the namespace. This is what allows any test framework to hook into &lt;code&gt;Rails&lt;/code&gt; as long as it provides any of the hooks above.</source>
          <target state="translated">注意，也可以加载&amp;ldquo; rails：generators：test_unit&amp;rdquo;， &lt;code&gt;Rails&lt;/code&gt; 寻找的是名称空间的第一部分和最后一部分。只要它提供上面的任何挂钩，这就是允许任何测试框架挂钩到 &lt;code&gt;Rails&lt;/code&gt; 的原因。</target>
        </trans-unit>
        <trans-unit id="db0f7457358771ccbf92d92a4d763b28aca85961" translate="yes" xml:space="preserve">
          <source>Notice that &amp;ldquo;rails:generators:test_unit&amp;rdquo; could be loaded as well, what Rails looks for is the first and last parts of the namespace. This is what allows any test framework to hook into Rails as long as it provides any of the hooks above.</source>
          <target state="translated">注意，也可以加载&amp;ldquo; rails：generators：test_unit&amp;rdquo;，Rails寻找的是名称空间的第一部分和最后一部分。只要它提供上述任何挂钩，这就是允许任何测试框架挂钩到Rails的原因。</target>
        </trans-unit>
        <trans-unit id="8ea40f338b226864feab0df23f1c0706c1e21c74" translate="yes" xml:space="preserve">
          <source>Notice that :stream only works with templates. &lt;code&gt;Rendering&lt;/code&gt; :json or :xml with :stream won't work.</source>
          <target state="translated">注意：：stream仅适用于模板。用：stream &lt;code&gt;Rendering&lt;/code&gt; ：json或：xml无效。</target>
        </trans-unit>
        <trans-unit id="c5549615aaa370893e3ea8fcbb7c259a1259ddcf" translate="yes" xml:space="preserve">
          <source>Notice that :stream only works with templates. Rendering :json or :xml with :stream won't work.</source>
          <target state="translated">注意:stream只对模板有效。用 :stream 渲染 :json 或 :xml 将无法工作。</target>
        </trans-unit>
        <trans-unit id="320e974e71e96a6cbd1aead6a719dcffd232a3a4" translate="yes" xml:space="preserve">
          <source>Notice that &lt;code&gt;action_methods.include?(&quot;foo&quot;)&lt;/code&gt; may return false and &lt;code&gt;available_action?(&quot;foo&quot;)&lt;/code&gt; returns true because this method considers actions that are also available through other means, for example, implicit render ones.</source>
          <target state="translated">请注意， &lt;code&gt;action_methods.include?(&quot;foo&quot;)&lt;/code&gt; 可能返回false， &lt;code&gt;available_action?(&quot;foo&quot;)&lt;/code&gt; 返回true，因为此方法考虑的操作也可以通过其他方式（例如隐式渲染）获得。</target>
        </trans-unit>
        <trans-unit id="fe43ee640ff6bcab6590900f5e5cb91b851fec67" translate="yes" xml:space="preserve">
          <source>Notice that in this example we used the &lt;code&gt;cache_key_with_version&lt;/code&gt; method, so the resulting cache key will be something like &lt;code&gt;products/233-20140225082222765838000/competing_price&lt;/code&gt;. &lt;code&gt;cache_key_with_version&lt;/code&gt; generates a string based on the model's class name, &lt;code&gt;id&lt;/code&gt;, and &lt;code&gt;updated_at&lt;/code&gt; attributes. This is a common convention and has the benefit of invalidating the cache whenever the product is updated. In general, when you use low-level caching for instance level information, you need to generate a cache key.</source>
          <target state="translated">请注意，在此示例中，我们使用了 &lt;code&gt;cache_key_with_version&lt;/code&gt; 方法，因此，生成的缓存键将类似于 &lt;code&gt;products/233-20140225082222765838000/competing_price&lt;/code&gt; 。 &lt;code&gt;cache_key_with_version&lt;/code&gt; 根据模型的类名， &lt;code&gt;id&lt;/code&gt; 和 &lt;code&gt;updated_at&lt;/code&gt; 属性生成一个字符串。这是一个通用约定，并且具有在每次更新产品时使缓存无效的好处。通常，将低级缓存用于实例级信息时，需要生成一个缓存键。</target>
        </trans-unit>
        <trans-unit id="335c6423429f476890129005da902f572747e332" translate="yes" xml:space="preserve">
          <source>Notice that inside the &lt;code&gt;create&lt;/code&gt; action we use &lt;code&gt;render&lt;/code&gt; instead of &lt;code&gt;redirect_to&lt;/code&gt; when &lt;code&gt;save&lt;/code&gt; returns &lt;code&gt;false&lt;/code&gt;. The &lt;code&gt;render&lt;/code&gt; method is used so that the &lt;code&gt;@article&lt;/code&gt; object is passed back to the &lt;code&gt;new&lt;/code&gt; template when it is rendered. This rendering is done within the same request as the form submission, whereas the &lt;code&gt;redirect_to&lt;/code&gt; will tell the browser to issue another request.</source>
          <target state="translated">注意，在 &lt;code&gt;create&lt;/code&gt; 动作中，当 &lt;code&gt;save&lt;/code&gt; 返回 &lt;code&gt;false&lt;/code&gt; 时，我们使用 &lt;code&gt;render&lt;/code&gt; 而不是 &lt;code&gt;redirect_to&lt;/code&gt; 。使用 &lt;code&gt;render&lt;/code&gt; 方法，以便在渲染 &lt;code&gt;@article&lt;/code&gt; 对象时将其传递回 &lt;code&gt;new&lt;/code&gt; 模板。呈现是在与表单提交相同的请求内完成的，而 &lt;code&gt;redirect_to&lt;/code&gt; 将告诉浏览器发出另一个请求。</target>
        </trans-unit>
        <trans-unit id="200ef77ed6574c244c4ae9bf1d5933c2dfdd03d7" translate="yes" xml:space="preserve">
          <source>Notice that no &lt;code&gt;:id&lt;/code&gt; parameter was provided to the first &lt;code&gt;url_for&lt;/code&gt; call and the helper used the one from the route's path. Any path parameter implicitly used by &lt;code&gt;url_for&lt;/code&gt; can always be overwritten like shown on the last &lt;code&gt;url_for&lt;/code&gt; calls.</source>
          <target state="translated">请注意，没有为第一个 &lt;code&gt;url_for&lt;/code&gt; 调用提供 &lt;code&gt;:id&lt;/code&gt; 参数，并且帮助程序使用了路由路径中的参数。 &lt;code&gt;url_for&lt;/code&gt; 隐式使用的任何路径参数始终可以像最近的 &lt;code&gt;url_for&lt;/code&gt; 调用中所示那样被覆盖。</target>
        </trans-unit>
        <trans-unit id="519aa6a6e5d6afab6a7e2eb41a4439a4f9329106" translate="yes" xml:space="preserve">
          <source>Notice that only &lt;em&gt;one&lt;/em&gt; migration was copied over here. This is because the first two migrations were copied over the first time this command was run.</source>
          <target state="translated">请注意，此处仅复制了&lt;em&gt;一个&lt;/em&gt;迁移。这是因为前两次迁移是在第一次运行此命令时复制的。</target>
        </trans-unit>
        <trans-unit id="419d31f54a68e03dee82c2e50065319e6a66420a" translate="yes" xml:space="preserve">
          <source>Notice that the appropriate option was automatically marked &lt;code&gt;selected=&quot;selected&quot;&lt;/code&gt;. Since this select box was bound to a model, we didn't need to specify a &lt;code&gt;:selected&lt;/code&gt; argument!</source>
          <target state="translated">请注意，相应的选项已自动标记为 &lt;code&gt;selected=&quot;selected&quot;&lt;/code&gt; 。由于此选择框已绑定到模型，因此我们无需指定 &lt;code&gt;:selected&lt;/code&gt; 参数！</target>
        </trans-unit>
        <trans-unit id="df50d170a97756a976395374fdf8c24cc9971e57" translate="yes" xml:space="preserve">
          <source>Notice that the third parameter, the options array, is the same kind of argument you pass to &lt;code&gt;options_for_select&lt;/code&gt;. One advantage here is that you don't have to worry about pre-selecting the correct city if the user already has one - Rails will do this for you by reading from the &lt;code&gt;@person.city_id&lt;/code&gt; attribute.</source>
          <target state="translated">注意，第三个参数options数组与传递给 &lt;code&gt;options_for_select&lt;/code&gt; 的参数类型相同。这里的一个优点是，如果用户已经拥有一个城市，则不必担心预先选择正确的城市-Rails会通过读取 &lt;code&gt;@person.city_id&lt;/code&gt; 属性为您完成此操作。</target>
        </trans-unit>
        <trans-unit id="1908ba1c531a2b8259e8a292905b0338f0a4c049" translate="yes" xml:space="preserve">
          <source>Notice that when you add a path using &lt;code&gt;add&lt;/code&gt;, the path object created already contains the path with the same path value given to &lt;code&gt;add&lt;/code&gt;. In some situations, you may not want this behavior, so you can give &lt;code&gt;:with&lt;/code&gt; as option.</source>
          <target state="translated">请注意，当使用 &lt;code&gt;add&lt;/code&gt; 添加路径时，创建的路径对象已经包含具有与 &lt;code&gt;add&lt;/code&gt; 相同的路径值的路径。在某些情况下，您可能不希望出现这种情况，因此可以给 &lt;code&gt;:with&lt;/code&gt; 作为选项。</target>
        </trans-unit>
        <trans-unit id="0e96537918e8234317029fed3fe4ff72457100b0" translate="yes" xml:space="preserve">
          <source>Notice that, when the form is submitted, there will be no single value in the &lt;code&gt;params&lt;/code&gt; hash that contains the full date. Instead, there will be several values with special names like &lt;code&gt;&quot;birth_date(1i)&quot;&lt;/code&gt;. Active Record knows how to assemble these specially-named values into a full date or time, based on the declared type of the model attribute. So we can pass &lt;code&gt;params[:person]&lt;/code&gt; to e.g. &lt;code&gt;Person.new&lt;/code&gt; or &lt;code&gt;Person#update&lt;/code&gt; just like we would if the form used a single field to represent the full date.</source>
          <target state="translated">请注意，提交表单时， &lt;code&gt;params&lt;/code&gt; 哈希中将没有包含完整日期的单个值。取而代之的是，会有几个带有特殊名称的值，例如 &lt;code&gt;&quot;birth_date(1i)&quot;&lt;/code&gt; 。Active Record知道如何根据模型属性的声明类型将这些特殊命名的值组合为一个完整的日期或时间。因此，我们可以将 &lt;code&gt;params[:person]&lt;/code&gt; 传递给例如 &lt;code&gt;Person.new&lt;/code&gt; 或 &lt;code&gt;Person#update&lt;/code&gt; ，就像表单使用单个字段表示完整日期一样。</target>
        </trans-unit>
        <trans-unit id="44c8b7d455b3180c88c20d2969451f82d99fc72d" translate="yes" xml:space="preserve">
          <source>Notice the 'E' in the output. It denotes a test with error.</source>
          <target state="translated">注意输出中的'E'。它表示一个有错误的测试。</target>
        </trans-unit>
        <trans-unit id="87b70343665b3497b68b2af72f1fe352646fe9bf" translate="yes" xml:space="preserve">
          <source>Notice the &lt;code&gt;category&lt;/code&gt; key of the &lt;code&gt;first&lt;/code&gt; article found in &lt;code&gt;fixtures/articles.yml&lt;/code&gt; has a value of &lt;code&gt;about&lt;/code&gt;. This tells Rails to load the category &lt;code&gt;about&lt;/code&gt; found in &lt;code&gt;fixtures/categories.yml&lt;/code&gt;.</source>
          <target state="translated">注意，在 &lt;code&gt;fixtures/articles.yml&lt;/code&gt; 中找到的 &lt;code&gt;first&lt;/code&gt; 篇文章的 &lt;code&gt;category&lt;/code&gt; 关键字的值 &lt;code&gt;about&lt;/code&gt; 。这告诉Rails加载类 &lt;code&gt;about&lt;/code&gt; 在发现 &lt;code&gt;fixtures/categories.yml&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f050ea2079c865a020ea6021b3e47525fb921cf9" translate="yes" xml:space="preserve">
          <source>Notice the &lt;code&gt;format.js&lt;/code&gt; in the &lt;code&gt;respond_to&lt;/code&gt; block: that allows the controller to respond to your Ajax request. You then have a corresponding &lt;code&gt;app/views/users/create.js.erb&lt;/code&gt; view file that generates the actual JavaScript code that will be sent and executed on the client side.</source>
          <target state="translated">注意 &lt;code&gt;format.js&lt;/code&gt; 在 &lt;code&gt;respond_to&lt;/code&gt; 代码块：允许控制器响应您的Ajax请求。然后，您将拥有一个相应的 &lt;code&gt;app/views/users/create.js.erb&lt;/code&gt; 视图文件，该文件会生成实际的JavaScript代码，这些代码将在客户端发送和执行。</target>
        </trans-unit>
        <trans-unit id="da94c85a23270499590d74673ddcfe2ffd4b3938" translate="yes" xml:space="preserve">
          <source>Notice the &lt;code&gt;only_path: true&lt;/code&gt; part. This is because &lt;a href=&quot;urlfor&quot;&gt;&lt;code&gt;UrlFor&lt;/code&gt;&lt;/a&gt; has no information about the website hostname that your Rails app is serving. So if you want to include the hostname as well, then you must also pass the &lt;code&gt;:host&lt;/code&gt; argument:</source>
          <target state="translated">请注意 &lt;code&gt;only_path: true&lt;/code&gt; 部分。这是因为&lt;a href=&quot;urlfor&quot;&gt; &lt;code&gt;UrlFor&lt;/code&gt; &lt;/a&gt;没有有关Rails应用程序正在服务的网站主机名的信息。因此，如果您还想包括主机名，那么还必须传递 &lt;code&gt;:host&lt;/code&gt; 参数：</target>
        </trans-unit>
        <trans-unit id="679dcd5834f1e3b85618c3828ff5a6c00ccaf1be" translate="yes" xml:space="preserve">
          <source>Notice the &lt;code&gt;only_path: true&lt;/code&gt; part. This is because &lt;a href=&quot;urlfor&quot;&gt;UrlFor&lt;/a&gt; has no information about the website hostname that your Rails app is serving. So if you want to include the hostname as well, then you must also pass the &lt;code&gt;:host&lt;/code&gt; argument:</source>
          <target state="translated">注意 &lt;code&gt;only_path: true&lt;/code&gt; 部分。这是因为&lt;a href=&quot;urlfor&quot;&gt;UrlFor&lt;/a&gt;没有有关Rails应用程序正在服务的网站主机名的信息。因此，如果还要包含主机名，则还必须传递 &lt;code&gt;:host&lt;/code&gt; 参数：</target>
        </trans-unit>
        <trans-unit id="e55f230dbbf5a74dbcd7017f3fcdd6a43cc06c8b" translate="yes" xml:space="preserve">
          <source>Notice we're starting to see some duplication in these three tests, they both access the same Article fixture data. We can D.R.Y. this up by using the &lt;code&gt;setup&lt;/code&gt; and &lt;code&gt;teardown&lt;/code&gt; methods provided by &lt;code&gt;ActiveSupport::Callbacks&lt;/code&gt;.</source>
          <target state="translated">注意，我们开始在这三个测试中看到一些重复，它们都访问相同的Article夹具数据。我们可以使用 &lt;code&gt;ActiveSupport::Callbacks&lt;/code&gt; 提供的 &lt;code&gt;setup&lt;/code&gt; 和 &lt;code&gt;teardown&lt;/code&gt; 方法来对此进行干燥。</target>
        </trans-unit>
        <trans-unit id="753a22b2eb617204efee4644795034b8ace1ee14" translate="yes" xml:space="preserve">
          <source>Notifications</source>
          <target state="translated">Notifications</target>
        </trans-unit>
        <trans-unit id="8c8eaaf882c955457360616271c1ee8f60912482" translate="yes" xml:space="preserve">
          <source>Notifies the logs that the request has begun. After the request is complete, flushes all the logs.</source>
          <target state="translated">通知日志,请求已经开始。请求完成后,刷新所有日志。</target>
        </trans-unit>
        <trans-unit id="b083a26e6e8d5c85e90f954d51b377ab9d6cb915" translate="yes" xml:space="preserve">
          <source>Now &lt;code&gt;@articles&lt;/code&gt; is included in the instance variables, because the line defining it was executed.</source>
          <target state="translated">现在 &lt;code&gt;@articles&lt;/code&gt; 包含在实例变量中，因为定义它的行已执行。</target>
        </trans-unit>
        <trans-unit id="1b042097ab2d91df48ebb6afa5f5c762fbec1027" translate="yes" xml:space="preserve">
          <source>Now add a rotation for the old SHA1 digest so existing cookies are seamlessly upgraded to the new SHA256 digest.</source>
          <target state="translated">现在为旧的SHA1摘要添加一个轮换,这样现有的cookie就可以无缝升级到新的SHA256摘要。</target>
        </trans-unit>
        <trans-unit id="c41bff3fa5ccfd1232f6ff1584724f94b31f90aa" translate="yes" xml:space="preserve">
          <source>Now all of the following will produce the expected join queries using &lt;code&gt;INNER JOIN&lt;/code&gt;:</source>
          <target state="translated">现在，以下所有内容都将使用 &lt;code&gt;INNER JOIN&lt;/code&gt; 产生预期的联接查询：</target>
        </trans-unit>
        <trans-unit id="20b7f51321bce2db86858d9563944349508848d5" translate="yes" xml:space="preserve">
          <source>Now all you have to do is change that timestamp when the helper method changes.</source>
          <target state="translated">现在你要做的就是在帮助者方法改变的时候改变这个时间戳。</target>
        </trans-unit>
        <trans-unit id="7fa3370358927296e6f19b98512db3f680400c6c" translate="yes" xml:space="preserve">
          <source>Now if we execute &lt;code&gt;@todo = @user.todos.create&lt;/code&gt; then the &lt;code&gt;@todo&lt;/code&gt; record's &lt;code&gt;user_id&lt;/code&gt; value will be the &lt;code&gt;guid&lt;/code&gt; value of &lt;code&gt;@user&lt;/code&gt;.</source>
          <target state="translated">现在，如果我们执行 &lt;code&gt;@todo = @user.todos.create&lt;/code&gt; 那么 &lt;code&gt;@todo&lt;/code&gt; 记录的 &lt;code&gt;user_id&lt;/code&gt; 值将是 &lt;code&gt;@user&lt;/code&gt; 的 &lt;code&gt;guid&lt;/code&gt; 值。</target>
        </trans-unit>
        <trans-unit id="be04c0ceb80dcbf0f5dc7603a36d5f8eb4fa4974" translate="yes" xml:space="preserve">
          <source>Now if we run our tests, we should see it pass:</source>
          <target state="translated">现在如果我们运行我们的测试,我们应该看到它通过。</target>
        </trans-unit>
        <trans-unit id="786773a8b554b8bb590eedf207af886d2f83e1b8" translate="yes" xml:space="preserve">
          <source>Now if you go to http://localhost:3000/articles you will see a list of all the articles that you have created.</source>
          <target state="translated">现在如果你去http://localhost:3000/articles,你会看到你所创建的所有文章的列表。</target>
        </trans-unit>
        <trans-unit id="1ab2226544af01e8b9dc9c006fa565e96f7bfd6d" translate="yes" xml:space="preserve">
          <source>Now if you try to create a new article, you will be greeted with a basic HTTP Authentication challenge:</source>
          <target state="translated">现在,如果你试图创建一个新的文章,你会收到一个基本的HTTP认证挑战。</target>
        </trans-unit>
        <trans-unit id="02e279c3aab36157f4c5efb237f845b1ef1d7aec" translate="yes" xml:space="preserve">
          <source>Now it &lt;em&gt;is&lt;/em&gt; removed from the database:</source>
          <target state="translated">现在，它&lt;em&gt;是&lt;/em&gt;从数据库中删除：</target>
        </trans-unit>
        <trans-unit id="5a02a8ec468f1bdf1e925cf94532d06e0367288b" translate="yes" xml:space="preserve">
          <source>Now it does this instead:</source>
          <target state="translated">现在它却这样做了。</target>
        </trans-unit>
        <trans-unit id="f7d061bef62245b1ff344a1120ecc9711baf3295" translate="yes" xml:space="preserve">
          <source>Now it is possible to create an instance of &lt;code&gt;Person&lt;/code&gt; and set attributes using &lt;code&gt;from_json&lt;/code&gt;.</source>
          <target state="translated">现在可以创建一个 &lt;code&gt;Person&lt;/code&gt; 实例并使用 &lt;code&gt;from_json&lt;/code&gt; 设置属性。</target>
        </trans-unit>
        <trans-unit id="fe05d7f983e2d38c65ce6aec823f42b31eef96f0" translate="yes" xml:space="preserve">
          <source>Now it's possible to access attributes from the database through the value objects instead. If you choose to name the composition the same as the attribute's name, it will be the only way to access that attribute. That's the case with our &lt;code&gt;balance&lt;/code&gt; attribute. You interact with the value objects just like you would with any other attribute:</source>
          <target state="translated">现在，可以通过值对象访问数据库中的属性。如果选择使用与属性名称相同的名称来命名合成，则它将是访问该属性的唯一方法。我们的 &lt;code&gt;balance&lt;/code&gt; 属性就是这种情况。您可以与值对象进行交互，就像使用任何其他属性一样：</target>
        </trans-unit>
        <trans-unit id="a0e723b1bc4f979da3f44583460af0278ed8ce41" translate="yes" xml:space="preserve">
          <source>Now it's time to explore your application. A good place to start is by asking the debugger for help. Type: &lt;code&gt;help&lt;/code&gt;</source>
          <target state="translated">现在是时候探索您的应用程序了。一个很好的起点是向调试器寻求帮助。类型： &lt;code&gt;help&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5c36aeda334567b9baa41e06b510c8356bcd1cd8" translate="yes" xml:space="preserve">
          <source>Now let's add a link at the bottom of &lt;code&gt;app/views/articles/show.html.erb&lt;/code&gt; so that we can delete an article from its own page:</source>
          <target state="translated">现在，让我们在 &lt;code&gt;app/views/articles/show.html.erb&lt;/code&gt; 的底部添加一个链接，以便我们可以从其自己的页面中删除文章：</target>
        </trans-unit>
        <trans-unit id="d346dc9770f3e643ac5bd68ca3943f083eeb299b" translate="yes" xml:space="preserve">
          <source>Now let's open that file and write our first assertion:</source>
          <target state="translated">现在让我们打开这个文件,写下我们的第一个断言。</target>
        </trans-unit>
        <trans-unit id="1cae19a080fb992409b81b543049cc89e8ba18c3" translate="yes" xml:space="preserve">
          <source>Now let's set &lt;code&gt;distinct&lt;/code&gt;:</source>
          <target state="translated">现在让我们设置 &lt;code&gt;distinct&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="5b9c7c93bfb7eceac813cc301b7376f2f1f280a2" translate="yes" xml:space="preserve">
          <source>Now let's test the flow for creating a new article in our blog.</source>
          <target state="translated">现在让我们测试一下在博客中创建新文章的流程。</target>
        </trans-unit>
        <trans-unit id="33fd0b45cc2d594e81d58237663c5baec9a5d5f1" translate="yes" xml:space="preserve">
          <source>Now our generator can be invoked as follows:</source>
          <target state="translated">现在我们的生成器可以调用如下。</target>
        </trans-unit>
        <trans-unit id="ce6dc94f4dbd0d8d43c18c69be65ff332773fa5b" translate="yes" xml:space="preserve">
          <source>Now people will only need to go to the root of the engine to see all the articles, rather than visiting &lt;code&gt;/articles&lt;/code&gt;. This means that instead of &lt;code&gt;http://localhost:3000/blorgh/articles&lt;/code&gt;, you only need to go to &lt;code&gt;http://localhost:3000/blorgh&lt;/code&gt; now.</source>
          <target state="translated">现在，人们只需要进入引擎的根目录即可查看所有文章，而无需访问 &lt;code&gt;/articles&lt;/code&gt; 。这意味着您现在只需访问 &lt;code&gt;http://localhost:3000/blorgh&lt;/code&gt; 即可代替 &lt;code&gt;http://localhost:3000/blorgh/articles&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5c83a55a45b2f01ea698594c8b3e1ad5455f11bf" translate="yes" xml:space="preserve">
          <source>Now routes such as &lt;code&gt;/posts/1&lt;/code&gt; will no longer be valid, but &lt;code&gt;/posts/1.1&lt;/code&gt; will be. The &lt;code&gt;id&lt;/code&gt; parameter must match the constraint passed in for this example.</source>
          <target state="translated">现在，例如 &lt;code&gt;/posts/1&lt;/code&gt; 之类的路由将不再有效，但 &lt;code&gt;/posts/1.1&lt;/code&gt; 将有效。该 &lt;code&gt;id&lt;/code&gt; 参数必须在这个例子中传入的约束相匹配。</target>
        </trans-unit>
        <trans-unit id="6a4dcaaa6423147b18b2f6af18138b7623923251" translate="yes" xml:space="preserve">
          <source>Now that the engine can create new articles, it only makes sense to add commenting functionality as well. To do this, you'll need to generate a comment model, a comment controller, and then modify the articles scaffold to display comments and allow people to create new ones.</source>
          <target state="translated">既然引擎可以创建新的文章,那么把评论功能也添加进去就很有意义了。要做到这一点,你需要生成一个评论模型、一个评论控制器,然后修改文章脚手架来显示评论并允许人们创建新的评论。</target>
        </trans-unit>
        <trans-unit id="0c44fc71b44ba9309c0138d0b212288263a8e6f9" translate="yes" xml:space="preserve">
          <source>Now that we have a new database, let's set up the connection model. In order to use the new database we need to create a new abstract class and connect to the animals databases.</source>
          <target state="translated">现在我们有了一个新的数据库,让我们建立连接模型。为了使用新数据库,我们需要创建一个新的抽象类,并连接到动物数据库。</target>
        </trans-unit>
        <trans-unit id="11605a07ad419c26e10776711e573a3cc8abc17e" translate="yes" xml:space="preserve">
          <source>Now that we have a new database, let's set up the model. In order to use the new database we need to create a new abstract class and connect to the animals databases.</source>
          <target state="translated">现在我们有了一个新的数据库,让我们来设置模型。为了使用新的数据库,我们需要创建一个新的抽象类并连接到动物数据库。</target>
        </trans-unit>
        <trans-unit id="2f8046c8539acb5480a428fc7d6605e3ecb484cf" translate="yes" xml:space="preserve">
          <source>Now that we have a user model to play with, we will edit the &lt;code&gt;app/controllers/users_controller.rb&lt;/code&gt; file, make it instruct the &lt;code&gt;UserMailer&lt;/code&gt; to deliver an email to the newly created user by editing the create action and inserting a call to &lt;code&gt;UserMailer.with(user: @user).welcome_email&lt;/code&gt; right after the user is successfully saved.</source>
          <target state="translated">现在我们有了一个用户模型，我们将编辑 &lt;code&gt;app/controllers/users_controller.rb&lt;/code&gt; 文件，使其通过编辑create动作并插入对 &lt;code&gt;UserMailer.with(user: @user).welcome_email&lt;/code&gt; 的调用来指示 &lt;code&gt;UserMailer&lt;/code&gt; 将电子邮件发送给新创建的用户。成功保存用户后立即使用（user：@user）.welcome_email。</target>
        </trans-unit>
        <trans-unit id="732e32122270aef4b9252cc8512ef28b55fe61ee" translate="yes" xml:space="preserve">
          <source>Now that we have a user model to play with, we will just edit the &lt;code&gt;app/controllers/users_controller.rb&lt;/code&gt; make it instruct the &lt;code&gt;UserMailer&lt;/code&gt; to deliver an email to the newly created user by editing the create action and inserting a call to &lt;code&gt;UserMailer.with(user: @user).welcome_email&lt;/code&gt; right after the user is successfully saved.</source>
          <target state="translated">现在我们有了一个可以使用的用户模型，我们只需编辑 &lt;code&gt;app/controllers/users_controller.rb&lt;/code&gt; ,使其通过编辑create动作并插入对 &lt;code&gt;UserMailer.with(user: @user).welcome_email&lt;/code&gt; 的调用来指示 &lt;code&gt;UserMailer&lt;/code&gt; 向新创建的用户发送电子邮件。（用户：@user）.welcome_email，保存成功后立即发送。</target>
        </trans-unit>
        <trans-unit id="08df1c22724db06d31f5eb1a44dd158696e53cf7" translate="yes" xml:space="preserve">
          <source>Now that we have articles and comments working, take a look at the &lt;code&gt;app/views/articles/show.html.erb&lt;/code&gt; template. It is getting long and awkward. We can use partials to clean it up.</source>
          <target state="translated">现在我们已经有了文章和评论，请看一下 &lt;code&gt;app/views/articles/show.html.erb&lt;/code&gt; 模板。它变得漫长而尴尬。我们可以使用局部函数来清理它。</target>
        </trans-unit>
        <trans-unit id="f7a57569c29b3772ca2726e0da0891ffdcc0c35a" translate="yes" xml:space="preserve">
          <source>Now that we have made the controller and view, we need to tell Rails when we want &quot;Hello, Rails!&quot; to show up. In our case, we want it to show up when we navigate to the root URL of our site, http://localhost:3000. At the moment, &quot;Welcome aboard&quot; is occupying that spot.</source>
          <target state="translated">现在我们已经完成了控制器和视图的制作,我们需要告诉Rails什么时候会出现 &quot;Hello,Rails!&quot;。在我们的例子中,我们希望它在我们导航到网站的根网址http://localhost:3000 时显示出来。目前,&quot;Welcome aboard &quot;占据了这个位置。</target>
        </trans-unit>
        <trans-unit id="c78bf8c3d9d311c23bfefc91cd38fcc387615966" translate="yes" xml:space="preserve">
          <source>Now that we have the &lt;code&gt;database.yml&lt;/code&gt; and the new model set up it's time to create the databases. Rails 6.0 ships with all the rails tasks you need to use multiple databases in Rails.</source>
          <target state="translated">现在我们有了 &lt;code&gt;database.yml&lt;/code&gt; 和新模型，现在该创建数据库了。Rails 6.0附带了所有Rails任务，您需要在Rails中使用多个数据库。</target>
        </trans-unit>
        <trans-unit id="3658b4e2bb9053598deec9119146b32737b682f1" translate="yes" xml:space="preserve">
          <source>Now that you have a module that modifies the input data, it's time to register it as a preprocessor for your mime type.</source>
          <target state="translated">现在你已经有了一个修改输入数据的模块,是时候把它注册为mime类型的预处理器了。</target>
        </trans-unit>
        <trans-unit id="1e3f00f9dc7d411f9b208e29217940a44d10cc9f" translate="yes" xml:space="preserve">
          <source>Now that you've seen how generators can be used &lt;em&gt;inside&lt;/em&gt; an application, did you know they can also be used to &lt;em&gt;generate&lt;/em&gt; applications too? This kind of generator is referred to as a &quot;template&quot;. This is a brief overview of the Templates API. For detailed documentation see the &lt;a href=&quot;rails_application_templates&quot;&gt;Rails Application Templates guide&lt;/a&gt;.</source>
          <target state="translated">既然您已经了解了如何&lt;em&gt;在&lt;/em&gt;应用程序&lt;em&gt;内部&lt;/em&gt;使用生成器，您是否知道它们也可以用于&lt;em&gt;生成&lt;/em&gt;应用程序？这种生成器称为&amp;ldquo;模板&amp;rdquo;。这是Templates API的简要概述。有关详细文档，请参见《&lt;a href=&quot;rails_application_templates&quot;&gt;Rails应用程序模板指南》&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9b78e5d03ac7a3268586ac2691c80bb6bf5d06b9" translate="yes" xml:space="preserve">
          <source>Now that you've seen how to create a controller, an action, and a view, let's create something with a bit more substance.</source>
          <target state="translated">现在你已经看到了如何创建一个控制器、一个动作和一个视图,让我们来创建一些更有内容的东西。</target>
        </trans-unit>
        <trans-unit id="c42baaa9718f13d5c8222d8c8a7cd9c934c39cef" translate="yes" xml:space="preserve">
          <source>Now that you've seen your first Rails application, you should feel free to update it and experiment on your own.</source>
          <target state="translated">现在你已经看到了你的第一个Rails应用,你应该自由地更新它,并在你自己的基础上进行试验。</target>
        </trans-unit>
        <trans-unit id="4ebf0a06c02ac9ca1316bd4928cbe3c564c0f180" translate="yes" xml:space="preserve">
          <source>Now the behavior is clear, that we are only using the connection information in &lt;code&gt;ENV['DATABASE_URL']&lt;/code&gt;.</source>
          <target state="translated">现在的行为很明显，我们只在 &lt;code&gt;ENV['DATABASE_URL']&lt;/code&gt; 使用连接信息。</target>
        </trans-unit>
        <trans-unit id="b49ba3604f078f72baacf288b548a11038388574" translate="yes" xml:space="preserve">
          <source>Now the header can pick up on the &lt;code&gt;@page_title&lt;/code&gt; variable and use it for outputting a title tag:</source>
          <target state="translated">现在，标题可以使用 &lt;code&gt;@page_title&lt;/code&gt; 变量，并将其用于输出标题标签：</target>
        </trans-unit>
        <trans-unit id="2e18d36f17b1d90839ac5dcdbcb33a0e9b504751" translate="yes" xml:space="preserve">
          <source>Now the test should pass. Let us verify by running the test again:</source>
          <target state="translated">现在测试应该通过了。让我们通过再次运行测试来验证。</target>
        </trans-unit>
        <trans-unit id="778539dc21c575db8a2ca83a7cff62a7c06e5c4c" translate="yes" xml:space="preserve">
          <source>Now the user can request to get a PDF version of a client just by adding &quot;.pdf&quot; to the URL:</source>
          <target state="translated">现在,用户只需在URL中添加&quot;.pdf&quot;,就可以要求获得客户端的PDF版本。</target>
        </trans-unit>
        <trans-unit id="a84530ec9df04e7cc3d58660fb582a3729c51d42" translate="yes" xml:space="preserve">
          <source>Now to get this test to pass we can add a model level validation for the &lt;em&gt;title&lt;/em&gt; field.</source>
          <target state="translated">现在，要使此测试通过，我们可以为&lt;em&gt;标题&lt;/em&gt;字段添加模型级别的验证。</target>
        </trans-unit>
        <trans-unit id="bdb3107b7872fa0e6980316eb5e2a631d7af22a4" translate="yes" xml:space="preserve">
          <source>Now we can interact with the table using our model.</source>
          <target state="translated">现在,我们可以使用我们的模型与表格进行交互。</target>
        </trans-unit>
        <trans-unit id="d3a958ea46193df5a82d613575f59b32d9769fb6" translate="yes" xml:space="preserve">
          <source>Now we can see our &quot;Hello, Rails!&quot; text when we visit http://localhost:3000, confirming that the &lt;code&gt;root&lt;/code&gt; route is also mapped to the &lt;code&gt;index&lt;/code&gt; action of &lt;code&gt;ArticlesController&lt;/code&gt;.</source>
          <target state="translated">现在我们可以看到&amp;ldquo; Hello，Rails！&amp;rdquo; 当我们访问http：// localhost：3000时输入文本，确认 &lt;code&gt;root&lt;/code&gt; 路由也已映射到 &lt;code&gt;ArticlesController&lt;/code&gt; 的 &lt;code&gt;index&lt;/code&gt; 操作。</target>
        </trans-unit>
        <trans-unit id="6b6c5e52a2403642e17d46449214a4ddd4e65765" translate="yes" xml:space="preserve">
          <source>Now we can see the article when we visit http://localhost:3000/articles/1!</source>
          <target state="translated">现在我们访问http://localhost:3000/articles/1,就可以看到文章了!</target>
        </trans-unit>
        <trans-unit id="188b483bccd4381f8ec9c5e1a3d636878fd9e47c" translate="yes" xml:space="preserve">
          <source>Now we can see the new description by invoking &lt;code&gt;--help&lt;/code&gt; on the new generator. The second way to add a description is by creating a file named &lt;code&gt;USAGE&lt;/code&gt; in the same directory as our generator. We are going to do that in the next step.</source>
          <target state="translated">现在，我们可以通过在新生成器上调用 &lt;code&gt;--help&lt;/code&gt; 来查看新描述。添加描述的第二种方法是在与生成器相同的目录中创建一个名为 &lt;code&gt;USAGE&lt;/code&gt; 的文件。我们将在下一步中执行此操作。</target>
        </trans-unit>
        <trans-unit id="417969e5c8e508f01b009c421da4c0a0d5501235" translate="yes" xml:space="preserve">
          <source>Now we can use &lt;code&gt;Relation#merge&lt;/code&gt; to merge in the &lt;code&gt;created_in_time_range&lt;/code&gt; scope:</source>
          <target state="translated">现在，我们可以使用 &lt;code&gt;Relation#merge&lt;/code&gt; merge在 &lt;code&gt;created_in_time_range&lt;/code&gt; 范围内进行合并：</target>
        </trans-unit>
        <trans-unit id="2e8c1cf15d98c430fe3bb86da45effb16f18c7e1" translate="yes" xml:space="preserve">
          <source>Now we move on to the &quot;C&quot; (Create) of CRUD. Typically, in web applications, creating a new resource is a multi-step process. First, the user requests a form to fill out. Then, the user submits the form. If there are no errors, then the resource is created and some kind of confirmation is displayed. Else, the form is redisplayed with error messages, and the process is repeated.</source>
          <target state="translated">现在,我们继续讨论CRUD的 &quot;C&quot;(Create)。通常,在Web应用中,创建一个新的资源是一个多步骤的过程。首先,用户请求填写一个表单。然后,用户提交表单。如果没有错误,那么资源就被创建,并显示某种确认。否则,表单将重新显示错误信息,并重复该过程。</target>
        </trans-unit>
        <trans-unit id="dddc1e5eddf99199ed2f4f24b64350725bf5572a" translate="yes" xml:space="preserve">
          <source>Now we're going to add a system test to our blog application. We'll demonstrate writing a system test by visiting the index page and creating a new blog article.</source>
          <target state="translated">现在我们要给我们的博客应用添加一个系统测试。我们将通过访问索引页和创建新的博客文章来演示编写系统测试。</target>
        </trans-unit>
        <trans-unit id="6b1be2e7a39917788e5f531bf999ce9e2f7f2121" translate="yes" xml:space="preserve">
          <source>Now what if that number could vary, say as an argument from somewhere? The find would then take the form:</source>
          <target state="translated">现在,如果这个数字可以变化,比如说作为来自某个地方的论据呢?那么这个发现就会变成这样的形式:</target>
        </trans-unit>
        <trans-unit id="bd19300ee7bde487c7b46e35b59d4d10c498b143" translate="yes" xml:space="preserve">
          <source>Now what if that title could vary, say as an argument from somewhere? The find would then take the form:</source>
          <target state="translated">现在如果这个标题可以变化,比如说作为来自某处的论据呢?那么这个发现就会采取这样的形式。</target>
        </trans-unit>
        <trans-unit id="be9be071256fdc4d57319b64f14682dd8cf34cb5" translate="yes" xml:space="preserve">
          <source>Now when a new request for the index action is processed, the layout will vary depending on whether the person accessing is logged in or not.</source>
          <target state="translated">现在,当一个新的索引操作请求被处理时,布局将根据访问者是否登录而有所不同。</target>
        </trans-unit>
        <trans-unit id="0c0ba2bf78d8878cf9ee6fce1e060d440d88a4de" translate="yes" xml:space="preserve">
          <source>Now when your application serves an asset in production, the CDN will store the asset for up to a year. Since most CDNs also cache headers of the request, this &lt;code&gt;Cache-Control&lt;/code&gt; will be passed along to all future browsers seeking this asset, the browser then knows that it can store this asset for a very long time before needing to re-request it.</source>
          <target state="translated">现在，当您的应用程序在生产中使用资产时，CDN将存储资产长达一年。由于大多数CDN还会缓存请求的标头，因此该 &lt;code&gt;Cache-Control&lt;/code&gt; 会传递给所有将来寻求该资产的浏览器，然后浏览器知道它可以存储此资产很长时间，然后才需要重新请求它。</target>
        </trans-unit>
        <trans-unit id="7397dca47478e57252a6d04e34f47f3cce91cb32" translate="yes" xml:space="preserve">
          <source>Now with all the pieces in place, an action will take place that will associate an author - represented by a record in the &lt;code&gt;users&lt;/code&gt; table - with an article, represented by the &lt;code&gt;blorgh_articles&lt;/code&gt; table from the engine.</source>
          <target state="translated">现在所有部分都准备就绪，将执行一个动作，该动作将作者（由 &lt;code&gt;users&lt;/code&gt; 表中的记录表示）与作者与引擎中的 &lt;code&gt;blorgh_articles&lt;/code&gt; 表表示的文章相关联。</target>
        </trans-unit>
        <trans-unit id="f4861027a7a7732f007bb28f69aa885ad4bd3bb6" translate="yes" xml:space="preserve">
          <source>Now you can access a serialized Hash of your object using the &lt;code&gt;serializable_hash&lt;/code&gt; method.</source>
          <target state="translated">现在，您可以使用 &lt;code&gt;serializable_hash&lt;/code&gt; 方法访问对象的序列化Hash 。</target>
        </trans-unit>
        <trans-unit id="bbd491ea2cb97bc75ae16420f9d81e845ecc38d4" translate="yes" xml:space="preserve">
          <source>Now you can add articles and comments to your blog and have them show up in the right places.</source>
          <target state="translated">现在你可以将文章和评论添加到你的博客中,并让它们显示在正确的位置。</target>
        </trans-unit>
        <trans-unit id="a63f6b7032dcb040af6139789b42742fda3dbb90" translate="yes" xml:space="preserve">
          <source>Now you can create the necessary database tables in your testing database by navigating to your dummy app and migrating the database. First, run:</source>
          <target state="translated">现在,您可以通过导航到您的虚拟应用程序并迁移数据库,在测试数据库中创建必要的数据库表。首先,运行。</target>
        </trans-unit>
        <trans-unit id="1b509fba0e74de20ecdb10b71addfc8cad75a3af" translate="yes" xml:space="preserve">
          <source>Now you can display an image inside your email.</source>
          <target state="translated">现在,你可以在你的电子邮件中显示图像。</target>
        </trans-unit>
        <trans-unit id="1e04b515bb030c9b6a664234a0b6eaa9a8d60e0d" translate="yes" xml:space="preserve">
          <source>Now you can have different transliterations for each locale:</source>
          <target state="translated">现在,您可以为每个地区提供不同的翻译。</target>
        </trans-unit>
        <trans-unit id="eab971757273773013b3ebe215faa414d52873bf" translate="yes" xml:space="preserve">
          <source>Now you can list a bunch of entries, call +Entry#title+, and polymorphism will provide you with the answer.</source>
          <target state="translated">现在你可以列出一堆条目,调用+条目#title+,多态会给你提供答案。</target>
        </trans-unit>
        <trans-unit id="a57d5608f4f021228ff74f81e7c98fcad5341756" translate="yes" xml:space="preserve">
          <source>Now you can listen to this event with:</source>
          <target state="translated">现在你可以听这个事件与。</target>
        </trans-unit>
        <trans-unit id="fc952f88284ef46aa74b35dfcd65bb65ac57e4b3" translate="yes" xml:space="preserve">
          <source>Now you can mount your engine in application's routes just like that:</source>
          <target state="translated">现在,你可以把你的引擎安装在应用程序的路由中,就像这样。</target>
        </trans-unit>
        <trans-unit id="7ccd6733a35b358bf2c7b29305f2ea242bc88d8b" translate="yes" xml:space="preserve">
          <source>Now you can mount your engine in application's routes:</source>
          <target state="translated">现在,你可以在应用程序的路由中安装你的引擎。</target>
        </trans-unit>
        <trans-unit id="0cca2a620bb0efd6c8b31ea33601ec518093b64d" translate="yes" xml:space="preserve">
          <source>Now you can see even more output in the console from running the tests:</source>
          <target state="translated">现在你可以在控制台中看到更多运行测试的输出。</target>
        </trans-unit>
        <trans-unit id="ef124558e731720d7cd6ee04cfa0fa14595c87e3" translate="yes" xml:space="preserve">
          <source>Now you can simply do:</source>
          <target state="translated">现在你可以简单地做到。</target>
        </trans-unit>
        <trans-unit id="97015d7f10515896d46f145fc9b204e09622e272" translate="yes" xml:space="preserve">
          <source>Now you can try running all the tests and they should pass.</source>
          <target state="translated">现在你可以尝试运行所有的测试,它们应该会通过。</target>
        </trans-unit>
        <trans-unit id="a1f2c06b04c1d3ffade749660a4a8d51b3ca9356" translate="yes" xml:space="preserve">
          <source>Now you should know where you are in the running trace and be able to print the available variables. But let's continue and move on with the application execution.</source>
          <target state="translated">现在你应该知道你在运行跟踪中的位置,并且能够打印可用的变量。但让我们继续,继续进行应用程序的执行。</target>
        </trans-unit>
        <trans-unit id="87bb8627d78df2d32264c8cfee94fb35d59902db" translate="yes" xml:space="preserve">
          <source>Now you'll get a nice error message when saving an article without a title when you attempt to do just that on the new article form http://localhost:3000/articles/new:</source>
          <target state="translated">现在,当你试图在新的文章表格中保存没有标题的文章时,你会得到一个漂亮的错误信息,http://localhost:3000/articles/new。</target>
        </trans-unit>
        <trans-unit id="6c963ec9ca58ea98b17b6c7555bcaae882d53c98" translate="yes" xml:space="preserve">
          <source>Now, &lt;code&gt;Engine&lt;/code&gt; will get only requests that were not handled by &lt;code&gt;Application&lt;/code&gt;.</source>
          <target state="translated">现在， &lt;code&gt;Engine&lt;/code&gt; 将仅获得 &lt;code&gt;Application&lt;/code&gt; 未处理的请求。</target>
        </trans-unit>
        <trans-unit id="203cf7090ffd765e9f27dc2ab3d7d30952df1c61" translate="yes" xml:space="preserve">
          <source>Now, a &lt;code&gt;GET&lt;/code&gt; request to &lt;code&gt;/photos&lt;/code&gt; would succeed, but a &lt;code&gt;POST&lt;/code&gt; request to &lt;code&gt;/photos&lt;/code&gt; (which would ordinarily be routed to the &lt;code&gt;create&lt;/code&gt; action) will fail.</source>
          <target state="translated">现在，对 &lt;code&gt;/photos&lt;/code&gt; 的 &lt;code&gt;GET&lt;/code&gt; 请求将会成功，但是对 &lt;code&gt;/photos&lt;/code&gt; 的 &lt;code&gt;POST&lt;/code&gt; 请求（通常会路由到 &lt;code&gt;create&lt;/code&gt; 操作）将失败。</target>
        </trans-unit>
        <trans-unit id="af62ed7bdece7af2a862042c75463d54724457e7" translate="yes" xml:space="preserve">
          <source>Now, add another link in &lt;code&gt;app/views/articles/new.html.erb&lt;/code&gt;, underneath the form, to go back to the &lt;code&gt;index&lt;/code&gt; action:</source>
          <target state="translated">现在，在表单下方的 &lt;code&gt;app/views/articles/new.html.erb&lt;/code&gt; 中添加另一个链接，以返回到 &lt;code&gt;index&lt;/code&gt; 操作：</target>
        </trans-unit>
        <trans-unit id="8e12adc83e98da965b0202dae25d3e358044f67f" translate="yes" xml:space="preserve">
          <source>Now, create a new file &lt;code&gt;app/views/articles/show.html.erb&lt;/code&gt; with the following content:</source>
          <target state="translated">现在，创建一个新文件 &lt;code&gt;app/views/articles/show.html.erb&lt;/code&gt; ，内容如下：</target>
        </trans-unit>
        <trans-unit id="ab84c9773432db7232bd695fe13dcece6e69f43e" translate="yes" xml:space="preserve">
          <source>Now, if the current user is a special user, they'll get a special layout when viewing a product.</source>
          <target state="translated">现在,如果当前用户是特殊用户,他们在查看产品时将获得特殊的布局。</target>
        </trans-unit>
        <trans-unit id="d155cc0c54a8c1103fe54c9484e37a19028bfcab" translate="yes" xml:space="preserve">
          <source>Now, if you POST to &lt;code&gt;/posts/:id&lt;/code&gt;, it will route to the &lt;code&gt;create_comment&lt;/code&gt; action. A GET on the same URL will route to the &lt;code&gt;show&lt;/code&gt; action.</source>
          <target state="translated">现在，如果您发布到 &lt;code&gt;/posts/:id&lt;/code&gt; ，它将路由到 &lt;code&gt;create_comment&lt;/code&gt; 操作。在相同URL上的GET将路由到 &lt;code&gt;show&lt;/code&gt; 操作。</target>
        </trans-unit>
        <trans-unit id="fd01ddc663c761677d7838ff6ebae0d36785cd0e" translate="yes" xml:space="preserve">
          <source>Now, if you create a Comment scaffold, you will see that the shoulda generators are being invoked, and at the end, they are just falling back to TestUnit generators:</source>
          <target state="translated">现在,如果你创建一个Comment脚手架,你会看到shoulda生成器正在被调用,而在最后,它们只是回落到TestUnit生成器。</target>
        </trans-unit>
        <trans-unit id="48e2d05fe59b341a812b4b192d936fbdab98a334" translate="yes" xml:space="preserve">
          <source>Now, if you noticed, we first wrote a test which fails for a desired functionality, then we wrote some code which adds the functionality and finally we ensured that our test passes. This approach to software development is referred to as &lt;a href=&quot;http://c2.com/cgi/wiki?TestDrivenDevelopment&quot;&gt;&lt;em&gt;Test-Driven Development&lt;/em&gt; (TDD)&lt;/a&gt;.</source>
          <target state="translated">现在，如果您注意到了，我们首先编写了一个未能实现所需功能的测试，然后编写了一些添加功能的代码，最后确保测试通过。这种软件开发方法称为&lt;a href=&quot;http://c2.com/cgi/wiki?TestDrivenDevelopment&quot;&gt;&lt;em&gt;测试驱动开发&lt;/em&gt;（TDD）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="27b8380c7a32dfa3423cdfea7f660ff2643ddae5" translate="yes" xml:space="preserve">
          <source>Now, let's update the &lt;code&gt;app/views/articles/new.html.erb&lt;/code&gt; view to use this new partial, rewriting it completely:</source>
          <target state="translated">现在，让我们更新 &lt;code&gt;app/views/articles/new.html.erb&lt;/code&gt; 视图以使用这个新的部分，完全重写它：</target>
        </trans-unit>
        <trans-unit id="217df5a8b404551ff72f541302f83740782a2f6c" translate="yes" xml:space="preserve">
          <source>Now, suppose we wanted to add a new book for an existing author. We'd need to do something like this:</source>
          <target state="translated">现在,假设我们想为一个现有的作者添加一本新书。我们需要做这样的事情。</target>
        </trans-unit>
        <trans-unit id="11c9105ae03fd512b3df4b1b95b94556311d85ad" translate="yes" xml:space="preserve">
          <source>Now, the &lt;code&gt;LoginsController&lt;/code&gt;'s &lt;code&gt;new&lt;/code&gt; and &lt;code&gt;create&lt;/code&gt; actions will work as before without requiring the user to be logged in. The &lt;code&gt;:only&lt;/code&gt; option is used to skip this filter only for these actions, and there is also an &lt;code&gt;:except&lt;/code&gt; option which works the other way. These options can be used when adding filters too, so you can add a filter which only runs for selected actions in the first place.</source>
          <target state="translated">现在， &lt;code&gt;LoginsController&lt;/code&gt; 的 &lt;code&gt;new&lt;/code&gt; 和 &lt;code&gt;create&lt;/code&gt; 行动将工作之前，而不需要用户先登录的。 &lt;code&gt;:only&lt;/code&gt; 选项用于跳过此过滤器只对这些行动，并且还有一个 &lt;code&gt;:except&lt;/code&gt; 其运作的其他选项方式。这些选项也可以在添加过滤器时使用，因此您可以添加仅首先对选定操作运行的过滤器。</target>
        </trans-unit>
        <trans-unit id="622fed2ef3f7a6ad2876c081d2afd526d0fbaa2b" translate="yes" xml:space="preserve">
          <source>Now, we can remove the duplicated logic from each model and instead include our new &lt;code&gt;Visible&lt;/code&gt; module:</source>
          <target state="translated">现在，我们可以从每个模型中删除重复的逻辑，而包括新的 &lt;code&gt;Visible&lt;/code&gt; 模块：</target>
        </trans-unit>
        <trans-unit id="6dbcfc0b858782509a12208646a29cda7e06af98" translate="yes" xml:space="preserve">
          <source>Now, when &lt;code&gt;Topic#destroy&lt;/code&gt; is run only &lt;code&gt;destroy_author&lt;/code&gt; is called. When &lt;code&gt;Reply#destroy&lt;/code&gt; is run, both &lt;code&gt;destroy_author&lt;/code&gt; and &lt;code&gt;destroy_readers&lt;/code&gt; are called.</source>
          <target state="translated">现在，当运行 &lt;code&gt;Topic#destroy&lt;/code&gt; 时，仅 &lt;code&gt;destroy_author&lt;/code&gt; 。当 &lt;code&gt;Reply#destroy&lt;/code&gt; 中运行时， &lt;code&gt;destroy_author&lt;/code&gt; 和 &lt;code&gt;destroy_readers&lt;/code&gt; 被调用。</target>
        </trans-unit>
        <trans-unit id="c9f281387742abe67e917f18111764c49c4a38a8" translate="yes" xml:space="preserve">
          <source>Now, when the helper generator is invoked and TestUnit is configured as the test framework, it will try to invoke both &lt;code&gt;Rails::TestUnitGenerator&lt;/code&gt; and &lt;code&gt;TestUnit::MyHelperGenerator&lt;/code&gt;. Since none of those are defined, we can tell our generator to invoke &lt;code&gt;TestUnit::Generators::HelperGenerator&lt;/code&gt; instead, which is defined since it's a Rails generator. To do that, we just need to add:</source>
          <target state="translated">现在，当调用辅助生成器并将TestUnit配置为测试框架时，它将尝试调用 &lt;code&gt;Rails::TestUnitGenerator&lt;/code&gt; 和 &lt;code&gt;TestUnit::MyHelperGenerator&lt;/code&gt; 。由于这些都没有定义，因此我们可以告诉生成器改为调用 &lt;code&gt;TestUnit::Generators::HelperGenerator&lt;/code&gt; ，它是Rails生成器，因此已定义。为此，我们只需要添加：</target>
        </trans-unit>
        <trans-unit id="738f4ee5f2fdec6e2acb7a14ba46229776b15fe5" translate="yes" xml:space="preserve">
          <source>Now, when this view is rendered, it will show an error message which tells you that the translations for the keys &lt;code&gt;:hello_world&lt;/code&gt; and &lt;code&gt;:hello_flash&lt;/code&gt; are missing.</source>
          <target state="translated">现在，呈现此视图时，它将显示一条错误消息，告诉您 &lt;code&gt;:hello_world&lt;/code&gt; 和 &lt;code&gt;:hello_flash&lt;/code&gt; 键的翻译丢失。</target>
        </trans-unit>
        <trans-unit id="d961b6eae818de7e713f0e8ff2517e62b85cc0f1" translate="yes" xml:space="preserve">
          <source>Now, when you add the &lt;code&gt;_destroy&lt;/code&gt; key to the attributes hash, with a value that evaluates to &lt;code&gt;true&lt;/code&gt;, you will destroy the associated model:</source>
          <target state="translated">现在，将 &lt;code&gt;_destroy&lt;/code&gt; 键添加到属性哈希中，其值的计算结果为 &lt;code&gt;true&lt;/code&gt; ，则将销毁关联的模型：</target>
        </trans-unit>
        <trans-unit id="0e48bab7662e8b7cbf063bf165fef96ea50592a7" translate="yes" xml:space="preserve">
          <source>Now, when you call the &lt;code&gt;books_path&lt;/code&gt; method you should get &lt;code&gt;&quot;/en/books&quot;&lt;/code&gt; (for the default locale). A URL like &lt;code&gt;http://localhost:3001/nl/books&lt;/code&gt; should load the Dutch locale, then, and following calls to &lt;code&gt;books_path&lt;/code&gt; should return &lt;code&gt;&quot;/nl/books&quot;&lt;/code&gt; (because the locale changed).</source>
          <target state="translated">现在，当您调用 &lt;code&gt;books_path&lt;/code&gt; 方法时，您应该获得 &lt;code&gt;&quot;/en/books&quot;&lt;/code&gt; （用于默认语言环境）。像 &lt;code&gt;http://localhost:3001/nl/books&lt;/code&gt; 这样的URL 应该会加载荷兰语区域设置，然后在对 &lt;code&gt;books_path&lt;/code&gt; 的调用之后应该返回 &lt;code&gt;&quot;/nl/books&quot;&lt;/code&gt; （因为更改了区域设置）。</target>
        </trans-unit>
        <trans-unit id="19855c7053a8ed3b95df3cc097e2804353c5dd70" translate="yes" xml:space="preserve">
          <source>Now, when you use a form element with the &lt;code&gt;_destroy&lt;/code&gt; parameter, with a value that evaluates to &lt;code&gt;true&lt;/code&gt;, you will destroy the associated model (e.g. 1, '1', true, or 'true'):</source>
          <target state="translated">现在，当您将表单元素与 &lt;code&gt;_destroy&lt;/code&gt; 参数一起使用，并且其值的值为 &lt;code&gt;true&lt;/code&gt; 时，您将销毁关联的模型（例如1，&amp;ldquo; 1&amp;rdquo;，true或&amp;ldquo; true&amp;rdquo;）：</target>
        </trans-unit>
        <trans-unit id="dce4fc5d00e68ba3c104ef525a4771ac4977bf97" translate="yes" xml:space="preserve">
          <source>Now, when you use a form element with the &lt;code&gt;_destroy&lt;/code&gt; parameter, with a value that evaluates to &lt;code&gt;true&lt;/code&gt;, you will destroy the associated model (eg. 1, '1', true, or 'true'):</source>
          <target state="translated">现在，当您将表单元素与 &lt;code&gt;_destroy&lt;/code&gt; 参数一起使用，并且其值的值为 &lt;code&gt;true&lt;/code&gt; 时，您将销毁关联的模型（例如1，&amp;ldquo; 1&amp;rdquo;，true或&amp;ldquo; true&amp;rdquo;）：</target>
        </trans-unit>
        <trans-unit id="c809e2c5ebb44a808f82d543f4edd794de0e3536" translate="yes" xml:space="preserve">
          <source>Now, you can use the &lt;code&gt;my_engine&lt;/code&gt; helper inside your application:</source>
          <target state="translated">现在，您可以在应用程序内部使用 &lt;code&gt;my_engine&lt;/code&gt; 帮助器：</target>
        </trans-unit>
        <trans-unit id="4766e0bf16611e8438a6d53eae97d9cadc5e5fec" translate="yes" xml:space="preserve">
          <source>Null Relation</source>
          <target state="translated">虚无关系</target>
        </trans-unit>
        <trans-unit id="6bfcf0cddffdd3930b31edb810e7c1a87b793877" translate="yes" xml:space="preserve">
          <source>NullContentTypeHeader</source>
          <target state="translated">NullContentTypeHeader</target>
        </trans-unit>
        <trans-unit id="350e7d8f18b3ca80dc7b075c15a357bcc83872b7" translate="yes" xml:space="preserve">
          <source>Number of partials fetched from cache</source>
          <target state="translated">从缓存中获取的partials数量。</target>
        </trans-unit>
        <trans-unit id="cba15084808a7129a67b592d7bb6d70a61b0c406" translate="yes" xml:space="preserve">
          <source>Number of records that instantiated</source>
          <target state="translated">实例化的记录数量</target>
        </trans-unit>
        <trans-unit id="098c6454bdf4bbfd58663e390aac0c78846ac19f" translate="yes" xml:space="preserve">
          <source>Number of times this job has been executed (which increments on every retry, like after an exception).</source>
          <target state="translated">这个作业被执行的次数(每次重试都会递增,比如发生异常后)。</target>
        </trans-unit>
        <trans-unit id="5a4142ed71d8bb3054e10546418ff4a5622d023e" translate="yes" xml:space="preserve">
          <source>NumberHelper</source>
          <target state="translated">NumberHelper</target>
        </trans-unit>
        <trans-unit id="e8a3239000961222e1a51d13b52ce2170d11bf3c" translate="yes" xml:space="preserve">
          <source>NumberHelper#number_to_currency</source>
          <target state="translated">NumberHelper#number_to_currency</target>
        </trans-unit>
        <trans-unit id="555aef064435c32aa56c039a2f381ca70e713e6f" translate="yes" xml:space="preserve">
          <source>NumberHelper#number_to_delimited</source>
          <target state="translated">NumberHelper#number_to_delimited</target>
        </trans-unit>
        <trans-unit id="2dd770bd60283e3854630a4d0d8df6af7bd610ac" translate="yes" xml:space="preserve">
          <source>NumberHelper#number_to_human</source>
          <target state="translated">NumberHelper#number_to_human</target>
        </trans-unit>
        <trans-unit id="1fea276bc8c34fa1c7fdb9af9f635fa51c1df32c" translate="yes" xml:space="preserve">
          <source>NumberHelper#number_to_human_size</source>
          <target state="translated">NumberHelper#number_to_human_size</target>
        </trans-unit>
        <trans-unit id="163d0b5ad6620cb0466941a558c9a8e6395ad76a" translate="yes" xml:space="preserve">
          <source>NumberHelper#number_to_percentage</source>
          <target state="translated">NumberHelper#number_to_percentage</target>
        </trans-unit>
        <trans-unit id="3032cb4f231eabf9b822856e17819cc9c788b1b4" translate="yes" xml:space="preserve">
          <source>NumberHelper#number_to_phone</source>
          <target state="translated">NumberHelper#number_to_phone</target>
        </trans-unit>
        <trans-unit id="0f6e1785b3fe36f01f15a022f1a3f306675fc079" translate="yes" xml:space="preserve">
          <source>NumberHelper#number_to_rounded</source>
          <target state="translated">NumberHelper#number_to_rounded</target>
        </trans-unit>
        <trans-unit id="30a62380404b3b267a5c4e21b5e111455d09031e" translate="yes" xml:space="preserve">
          <source>Numeric</source>
          <target state="translated">Numeric</target>
        </trans-unit>
        <trans-unit id="12952380314ef25dafac5a0d3d04de5fd7fb9c09" translate="yes" xml:space="preserve">
          <source>Numeric#byte</source>
          <target state="translated">Numeric#byte</target>
        </trans-unit>
        <trans-unit id="0ddc3e9e09e8db25e967665e786a23d0a466a10b" translate="yes" xml:space="preserve">
          <source>Numeric#day</source>
          <target state="translated">Numeric#day</target>
        </trans-unit>
        <trans-unit id="dd3c906dfbdea7498b422ab9b53b0b7717f9aafb" translate="yes" xml:space="preserve">
          <source>Numeric#days</source>
          <target state="translated">Numeric#days</target>
        </trans-unit>
        <trans-unit id="5cd1ac9a871955b8caf1eb6d97ffd59c4cb670fc" translate="yes" xml:space="preserve">
          <source>Numeric#hour</source>
          <target state="translated">Numeric#hour</target>
        </trans-unit>
        <trans-unit id="3b25fa4cb288ad452bbae28d5073d2083b0bf7d1" translate="yes" xml:space="preserve">
          <source>Numeric#week</source>
          <target state="translated">Numeric#week</target>
        </trans-unit>
        <trans-unit id="65454a128af7fcaafe8438725972801b014cf09f" translate="yes" xml:space="preserve">
          <source>NumericWithFormat</source>
          <target state="translated">NumericWithFormat</target>
        </trans-unit>
        <trans-unit id="ee86027f7732f7a471be8d5533de0f308291513a" translate="yes" xml:space="preserve">
          <source>NumericWithFormat#to_s</source>
          <target state="translated">NumericWithFormat#to_s</target>
        </trans-unit>
        <trans-unit id="af80f83e91cb2acf5105c5c35c83d3f1e00891aa" translate="yes" xml:space="preserve">
          <source>OK! Now let's add a timestamp to the view, so we can demo the &lt;strong&gt;date/time localization&lt;/strong&gt; feature as well. To localize the time format you pass the Time object to &lt;code&gt;I18n.l&lt;/code&gt; or (preferably) use Rails' &lt;code&gt;#l&lt;/code&gt; helper. You can pick a format by passing the &lt;code&gt;:format&lt;/code&gt; option - by default the &lt;code&gt;:default&lt;/code&gt; format is used.</source>
          <target state="translated">好！现在让我们向视图添加时间戳，以便我们也可以演示&lt;strong&gt;日期/时间本地化&lt;/strong&gt;功能。要本地化时间格式，请将Time对象传递给 &lt;code&gt;I18n.l&lt;/code&gt; 或（最好）使用Rails的 &lt;code&gt;#l&lt;/code&gt; 帮助器。您可以通过传递 &lt;code&gt;:format&lt;/code&gt; 选项来选择一种格式-默认情况下，使用 &lt;code&gt;:default&lt;/code&gt; 格式。</target>
        </trans-unit>
        <trans-unit id="34925fb12c571f21781ddda3d56ad6f2dbfb5eef" translate="yes" xml:space="preserve">
          <source>OK! Now you've initialized I18n support for your Ruby on Rails application and told it which locale to use and how to preserve it between requests.</source>
          <target state="translated">好了!现在你已经为你的Ruby on Rails应用程序初始化了I18n支持,并告诉它使用哪种语言,以及如何在请求之间保留它。现在你已经初始化了对Ruby on Rails应用程序的I18n支持,并告诉它要使用哪种语言,以及如何在请求之间保留它。</target>
        </trans-unit>
        <trans-unit id="d3f5ef0a7a41f4b5fa47c99b3d228787fec02b73" translate="yes" xml:space="preserve">
          <source>ONE_AS_ONE</source>
          <target state="translated">ONE_AS_ONE</target>
        </trans-unit>
        <trans-unit id="5b8e5d05306b818cd2c3ac786d2bf461455a0998" translate="yes" xml:space="preserve">
          <source>OPTION_AS_ERROR_MESSAGE</source>
          <target state="translated">OPTION_AS_ERROR_MESSAGE</target>
        </trans-unit>
        <trans-unit id="a4f0a12e44c14fb9d2ef8fa325826433a689af64" translate="yes" xml:space="preserve">
          <source>OR Conditions</source>
          <target state="translated">或条件</target>
        </trans-unit>
        <trans-unit id="6673abff0e25535a62fa142e46784d8906594513" translate="yes" xml:space="preserve">
          <source>ORDER_IGNORE_MESSAGE</source>
          <target state="translated">ORDER_IGNORE_MESSAGE</target>
        </trans-unit>
        <trans-unit id="c8210fd944bd4d72ef2903592cc6cc8d86ecac8c" translate="yes" xml:space="preserve">
          <source>ORIG_ARGV</source>
          <target state="translated">ORIG_ARGV</target>
        </trans-unit>
        <trans-unit id="ce95b74a7293928d321b45eeb0f7c306f65f50ed" translate="yes" xml:space="preserve">
          <source>Obfuscation</source>
          <target state="translated">Obfuscation</target>
        </trans-unit>
        <trans-unit id="2883f191bc5ebfdc16c0813eff659b35363ea69b" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="translated">Object</target>
        </trans-unit>
        <trans-unit id="4ad73191edfacc818048e43fbc454750d4108003" translate="yes" xml:space="preserve">
          <source>Object ID of the connection object</source>
          <target state="translated">连接对象的对象ID</target>
        </trans-unit>
        <trans-unit id="c42e56fb93a2d54b07af5e3e41ea98848a0a41a5" translate="yes" xml:space="preserve">
          <source>Object Relational Mapping</source>
          <target state="translated">对象关系映射</target>
        </trans-unit>
        <trans-unit id="782f438afdfb9026987c9473bad03c906cfd0f60" translate="yes" xml:space="preserve">
          <source>Object#in?</source>
          <target state="translated">Object#in?</target>
        </trans-unit>
        <trans-unit id="4577f031b57b33b7448915bf92f1c64db21a412a" translate="yes" xml:space="preserve">
          <source>Object#try</source>
          <target state="translated">Object#try</target>
        </trans-unit>
        <trans-unit id="c7179c7e846b1bd1edbe3601ad7107bcadbe4c20" translate="yes" xml:space="preserve">
          <source>Object#try!</source>
          <target state="translated">Object#try!</target>
        </trans-unit>
        <trans-unit id="8dde3eba34db3a98fea0cf0d796447bbd2b08546" translate="yes" xml:space="preserve">
          <source>Objects will &lt;em&gt;always&lt;/em&gt; be removed from the database, ignoring the &lt;code&gt;:dependent&lt;/code&gt; option.</source>
          <target state="translated">将&lt;em&gt;始终&lt;/em&gt;从数据库中删除对象，而忽略 &lt;code&gt;:dependent&lt;/code&gt; 选项。</target>
        </trans-unit>
        <trans-unit id="77ca99176e0a69f92635c323c9ee512f8f14ada0" translate="yes" xml:space="preserve">
          <source>Objects will be deleted if they're associated with &lt;code&gt;dependent: :destroy&lt;/code&gt;, just like &lt;code&gt;dependent: :delete_all&lt;/code&gt;.</source>
          <target state="translated">如果对象与 &lt;code&gt;dependent: :destroy&lt;/code&gt; 相关联，则它们将被删除，就像 &lt;code&gt;dependent: :delete_all&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="01833b16e8925d797ee8b329aeb71e620190951f" translate="yes" xml:space="preserve">
          <source>Objects you pass in are expected to return a compliant object from a call to &lt;code&gt;to_model&lt;/code&gt;. It is perfectly fine for &lt;code&gt;to_model&lt;/code&gt; to return &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="translated">传递给您的对象应该从 &lt;code&gt;to_model&lt;/code&gt; 的调用返回兼容的对象。 &lt;code&gt;to_model&lt;/code&gt; 返回 &lt;code&gt;self&lt;/code&gt; 很好。</target>
        </trans-unit>
        <trans-unit id="46252b9dc1831ea83a33362e66afebb86d2829cc" translate="yes" xml:space="preserve">
          <source>Observe in the previous example that consecutive separators result in empty arrays.</source>
          <target state="translated">在前面的例子中观察到,连续的分隔符会导致空数组。</target>
        </trans-unit>
        <trans-unit id="693db33a45a855769a9f6c58107b187af35b357a" translate="yes" xml:space="preserve">
          <source>Observers give you access to the email message after it has been sent. An observer class must implement the &lt;code&gt;:delivered_email(message)&lt;/code&gt; method, which will be called after the email is sent.</source>
          <target state="translated">发送电子邮件后，观察者可让您访问该电子邮件。观察者类必须实现 &lt;code&gt;:delivered_email(message)&lt;/code&gt; 方法，该方法将在发送电子邮件后调用。</target>
        </trans-unit>
        <trans-unit id="b7d87645b295e2af8697514a4ed7e203d9756fec" translate="yes" xml:space="preserve">
          <source>Observing Emails</source>
          <target state="translated">观察电子邮件</target>
        </trans-unit>
        <trans-unit id="6a768711003c1ef2dc5501f4971819a6899578df" translate="yes" xml:space="preserve">
          <source>Observing and Intercepting Mails</source>
          <target state="translated">观察和拦截邮件</target>
        </trans-unit>
        <trans-unit id="0aca28a7f797bbddbbd6a37fd849e0be2ba581ec" translate="yes" xml:space="preserve">
          <source>Obtain a row lock on this record. Reloads the record to obtain the requested lock. Pass an SQL locking clause to append the end of the SELECT statement or pass true for &amp;ldquo;FOR UPDATE&amp;rdquo; (the default, an exclusive row lock). Returns the locked record.</source>
          <target state="translated">获取此记录上的行锁。重新加载记录以获得请求的锁。传递一个SQL锁定子句以附加SELECT语句的末尾，或者为&amp;ldquo; FOR UPDATE&amp;rdquo;传递真（默认，排它行锁定）。返回锁定的记录。</target>
        </trans-unit>
        <trans-unit id="6b4ae6d585a88c7d20f2576d348e9bfc2db75cee" translate="yes" xml:space="preserve">
          <source>Obtaining (checking out) a connection</source>
          <target state="translated">获取(检查)连接</target>
        </trans-unit>
        <trans-unit id="e58dee129363861edbe872680dfc6fe4570a8245" translate="yes" xml:space="preserve">
          <source>Obviously, you'll want to be a bit more sophisticated than that, but it's a start.</source>
          <target state="translated">很显然,你想比这更复杂一些,但这是一个开始。</target>
        </trans-unit>
        <trans-unit id="0d21c185b8ddd71aeb92646342d282b983be3fe4" translate="yes" xml:space="preserve">
          <source>Occasionally you may need to explicitly eager_load by using &lt;code&gt;Rails
.application.eager_load!&lt;/code&gt; in the setup of your tests -- this might occur if your &lt;a href=&quot;https://stackoverflow.com/questions/25796409/in-rails-how-can-i-eager-load-all-code-before-a-specific-rspec-test&quot;&gt;tests involve multithreading&lt;/a&gt;.</source>
          <target state="translated">有时，您可能需要使用 &lt;code&gt;Rails .application.eager_load!&lt;/code&gt; 来显式eager_load ！在测试设置中-如果您的&lt;a href=&quot;https://stackoverflow.com/questions/25796409/in-rails-how-can-i-eager-load-all-code-before-a-specific-rspec-test&quot;&gt;测试涉及多线程，&lt;/a&gt;则可能会发生这种情况。</target>
        </trans-unit>
        <trans-unit id="175826294ba674ea84cf26b6bb6839a682114a0a" translate="yes" xml:space="preserve">
          <source>Occasionally you need to display just a single date component such as a year or a month. Rails provides a series of helpers for this, one for each component &lt;code&gt;select_year&lt;/code&gt;, &lt;code&gt;select_month&lt;/code&gt;, &lt;code&gt;select_day&lt;/code&gt;, &lt;code&gt;select_hour&lt;/code&gt;, &lt;code&gt;select_minute&lt;/code&gt;, &lt;code&gt;select_second&lt;/code&gt;. These helpers are fairly straightforward. By default they will generate an input field named after the time component (for example, &quot;year&quot; for &lt;code&gt;select_year&lt;/code&gt;, &quot;month&quot; for &lt;code&gt;select_month&lt;/code&gt; etc.) although this can be overridden with the &lt;code&gt;:field_name&lt;/code&gt; option. The &lt;code&gt;:prefix&lt;/code&gt; option works in the same way that it does for &lt;code&gt;select_date&lt;/code&gt; and &lt;code&gt;select_time&lt;/code&gt; and has the same default value.</source>
          <target state="translated">有时，您只需要显示一个日期部分，例如一年或一个月。 Rails为此提供了一系列帮助程序，每个组件 &lt;code&gt;select_year&lt;/code&gt; 一个select_year， &lt;code&gt;select_month&lt;/code&gt; ， &lt;code&gt;select_day&lt;/code&gt; ， &lt;code&gt;select_hour&lt;/code&gt; ， &lt;code&gt;select_minute&lt;/code&gt; 和 &lt;code&gt;select_second&lt;/code&gt; 。这些助手非常简单。默认情况下，它们将生成一个以时间部分命名的输入字段（例如，&amp;ldquo; &lt;code&gt;select_year&lt;/code&gt; year&amp;rdquo;代表select_year，&amp;ldquo; month&amp;rdquo;代表 &lt;code&gt;select_month&lt;/code&gt; 等），尽管可以使用 &lt;code&gt;:field_name&lt;/code&gt; 选项覆盖。的 &lt;code&gt;:prefix&lt;/code&gt; 选项的工作以同样的方式，它确实为 &lt;code&gt;select_date&lt;/code&gt; 和 &lt;code&gt;select_time&lt;/code&gt; 并具有相同的默认值。</target>
        </trans-unit>
        <trans-unit id="3cbff9964263e47edad93b998a04c0380c6b4f06" translate="yes" xml:space="preserve">
          <source>Occasionally you will make a mistake when writing a migration. If you have already run the migration, then you cannot just edit the migration and run the migration again: Rails thinks it has already run the migration and so will do nothing when you run &lt;code&gt;bin/rails db:migrate&lt;/code&gt;. You must rollback the migration (for example with &lt;code&gt;bin/rails db:rollback&lt;/code&gt;), edit your migration, and then run &lt;code&gt;bin/rails db:migrate&lt;/code&gt; to run the corrected version.</source>
          <target state="translated">有时候，在编写迁移文件时会犯一个错误。如果您已经运行了迁移，则不能只编辑迁移并再次运行迁移：Rails认为它已经运行了迁移，因此在运行 &lt;code&gt;bin/rails db:migrate&lt;/code&gt; 时将不执行任何操作。您必须回滚迁移（例如，使用 &lt;code&gt;bin/rails db:rollback&lt;/code&gt; ），编辑迁移，然后运行 &lt;code&gt;bin/rails db:migrate&lt;/code&gt; 来运行更正的版本。</target>
        </trans-unit>
        <trans-unit id="ba3bbd9b2013f62289bec19ff77a0ab1e6d379ac" translate="yes" xml:space="preserve">
          <source>Occasionally you will make a mistake when writing a migration. If you have already run the migration, then you cannot just edit the migration and run the migration again: Rails thinks it has already run the migration and so will do nothing when you run &lt;code&gt;rails db:migrate&lt;/code&gt;. You must rollback the migration (for example with &lt;code&gt;rails db:rollback&lt;/code&gt;), edit your migration, and then run &lt;code&gt;rails db:migrate&lt;/code&gt; to run the corrected version.</source>
          <target state="translated">有时，编写迁移文件时会出错。如果您已经运行了迁移，则不能只编辑迁移并再次运行迁移：Rails认为它已经运行了迁移，因此在运行 &lt;code&gt;rails db:migrate&lt;/code&gt; 时将不执行任何操作。您必须回滚迁移（例如，使用 &lt;code&gt;rails db:rollback&lt;/code&gt; ），编辑迁移，然后运行 &lt;code&gt;rails db:migrate&lt;/code&gt; 来运行更正的版本。</target>
        </trans-unit>
        <trans-unit id="10e792bd00a99b3e1f974aa939eaac10eb676be3" translate="yes" xml:space="preserve">
          <source>Of course, calculating timestamps is no fun, so Active Record provides a generator to handle making it for you:</source>
          <target state="translated">当然,计算时间戳并不是一件有趣的事情,所以Active Record提供了一个生成器来为你处理制作时间戳。</target>
        </trans-unit>
        <trans-unit id="cc4010c4ad109e781e24b28c96b213ace81b2b52" translate="yes" xml:space="preserve">
          <source>Of course, if the application eager loads on boot, that is already accomplished. When it does not, it is in practice enough to instantiate the existing types in the database, which in development or test modes is usually fine. One way to do that is to throw this module into the &lt;code&gt;lib&lt;/code&gt; directory:</source>
          <target state="translated">当然，如果应用程序渴望在启动时加载，则已经完成。如果不是这样，实际上在实例化数据库中的现有类型就足够了，在开发或测试模式下通常可以。一种方法是将这个模块放入 &lt;code&gt;lib&lt;/code&gt; 目录：</target>
        </trans-unit>
        <trans-unit id="8e4b613f1200debf00104a7d9324fd9bb7922e4b" translate="yes" xml:space="preserve">
          <source>Of course, the Rails boot process also glues together all registered components. For example, the Rails boot process is what uses your &lt;code&gt;config/database.yml&lt;/code&gt; file when configuring Active Record.</source>
          <target state="translated">当然，Rails引导过程还将所有已注册的组件粘合在一起。例如，在配置Active Record时，Rails引导过程就是使用 &lt;code&gt;config/database.yml&lt;/code&gt; 文件的过程。</target>
        </trans-unit>
        <trans-unit id="78f92e1f3e6228f262ba831d9d821b07d9bd0ab6" translate="yes" xml:space="preserve">
          <source>Of course, the most common way of specifying a layout is still just as a plain template name:</source>
          <target state="translated">当然,最常见的指定布局的方式还是只是作为一个普通的模板名称。</target>
        </trans-unit>
        <trans-unit id="518c11a35f81fb097eea3275505af4254f7da8d6" translate="yes" xml:space="preserve">
          <source>Of course, this example is anything but elaborate and doesn't improve on the default exception handling at all, but once you can catch all those exceptions you're free to do whatever you want with them. For example, you could create custom exception classes that will be thrown when a user doesn't have access to a certain section of your application:</source>
          <target state="translated">当然,这个例子并不详细,也没有对默认的异常处理进行任何改进,但是一旦你可以捕获所有这些异常,你就可以自由地对它们做任何你想做的事情。例如,你可以创建自定义的异常类,当用户无法访问你的应用程序的某个部分时,就会抛出这些异常。</target>
        </trans-unit>
        <trans-unit id="a33df8426a8a4b2ff3fed3a9cec145eb8ee044bb" translate="yes" xml:space="preserve">
          <source>Of course, using &lt;code&gt;require&lt;/code&gt; in autoloaded files to load ordinary 3rd party libraries is fine, and Rails is able to distinguish their constants, they are not marked as autoloaded.</source>
          <target state="translated">当然，在自动加载的文件中使用 &lt;code&gt;require&lt;/code&gt; 加载普通的第三方库很好，并且Rails能够区分它们的常量，它们不会标记为自动加载。</target>
        </trans-unit>
        <trans-unit id="ccee0e956089abbe7c4e00b4b79e0eefe175e9a6" translate="yes" xml:space="preserve">
          <source>Of course, you can also query them directly if the scopes don't fit your needs:</source>
          <target state="translated">当然,如果范围不符合你的需求,你也可以直接查询他们。</target>
        </trans-unit>
        <trans-unit id="23e9f48eed74793bb1697af713aaddf96ce9e867" translate="yes" xml:space="preserve">
          <source>Of course, you can use the more advanced constraints available in non-resourceful routes in this context.</source>
          <target state="translated">当然,你可以在这种情况下使用非资源型路由中可用的更高级的约束。</target>
        </trans-unit>
        <trans-unit id="38b952fd703726662a492bf2933dece70330fa1e" translate="yes" xml:space="preserve">
          <source>Of course, you need to take special care of the root URL (usually &quot;homepage&quot; or &quot;dashboard&quot;) of your application. A URL like &lt;code&gt;http://localhost:3001/nl&lt;/code&gt; will not work automatically, because the &lt;code&gt;root to: &quot;books#index&quot;&lt;/code&gt; declaration in your &lt;code&gt;routes.rb&lt;/code&gt; doesn't take locale into account. (And rightly so: there's only one &quot;root&quot; URL.)</source>
          <target state="translated">当然，您需要特别注意应用程序的根URL（通常是&amp;ldquo;主页&amp;rdquo;或&amp;ldquo;仪表板&amp;rdquo;）。像 &lt;code&gt;http://localhost:3001/nl&lt;/code&gt; 这样的URL 不会自动工作，因为您的 &lt;code&gt;routes.rb&lt;/code&gt; 中的 &lt;code&gt;root to: &quot;books#index&quot;&lt;/code&gt; 声明未考虑语言环境。（正确的是：只有一个&amp;ldquo;根&amp;rdquo; URL。）</target>
        </trans-unit>
        <trans-unit id="522e1ee3f7c0d77499dec3f1d397d0900efa532e" translate="yes" xml:space="preserve">
          <source>Of course, you need to take special care of the root URL (usually &quot;homepage&quot; or &quot;dashboard&quot;) of your application. A URL like &lt;code&gt;http://localhost:3001/nl&lt;/code&gt; will not work automatically, because the &lt;code&gt;root to: &quot;dashboard#index&quot;&lt;/code&gt; declaration in your &lt;code&gt;routes.rb&lt;/code&gt; doesn't take locale into account. (And rightly so: there's only one &quot;root&quot; URL.)</source>
          <target state="translated">当然，您需要特别注意应用程序的根URL（通常是&amp;ldquo;主页&amp;rdquo;或&amp;ldquo;仪表板&amp;rdquo;）。像 &lt;code&gt;http://localhost:3001/nl&lt;/code&gt; 之类的URL将不会自动运行，因为您的 &lt;code&gt;routes.rb&lt;/code&gt; 中的 &lt;code&gt;root to: &quot;dashboard#index&quot;&lt;/code&gt; 声明的根目录未考虑语言环境。（正确的是：只有一个&amp;ldquo;根&amp;rdquo; URL。）</target>
        </trans-unit>
        <trans-unit id="1a2dba64e87728235370f20557710affb44af9dc" translate="yes" xml:space="preserve">
          <source>Official Rack Website</source>
          <target state="translated">Rack官方网站</target>
        </trans-unit>
        <trans-unit id="dd1d49fae73e799baf2444a358616e40cdcf62fa" translate="yes" xml:space="preserve">
          <source>Official Ruby Programming Language website</source>
          <target state="translated">Ruby编程语言官方网站</target>
        </trans-unit>
        <trans-unit id="95620979d30f60c5618328e75a5e42f4e93f415d" translate="yes" xml:space="preserve">
          <source>Often this can be simplified by passing just the name of the model object to &lt;code&gt;fields_for&lt;/code&gt; -</source>
          <target state="translated">通常，可以通过仅将模型对象的名称传递给 &lt;code&gt;fields_for&lt;/code&gt; 来简化此操作 -</target>
        </trans-unit>
        <trans-unit id="dfc8dea3503f3da65ac428e919d1bcc1e3dbca07" translate="yes" xml:space="preserve">
          <source>Often, additional reloading actions need to be performed either just before or just after the Class Unload, so the Reloader also provides &lt;code&gt;before_class_unload&lt;/code&gt; and &lt;code&gt;after_class_unload&lt;/code&gt; callbacks.</source>
          <target state="translated">通常，需要在类卸载之前或之后执行其他重新加载操作，因此，重新加载器还提供了 &lt;code&gt;before_class_unload&lt;/code&gt; 和 &lt;code&gt;after_class_unload&lt;/code&gt; 回调。</target>
        </trans-unit>
        <trans-unit id="ce7d9d2ca9708d829304177ad2e9e5cc2ad978ed" translate="yes" xml:space="preserve">
          <source>Often, we want to generate a set of choices in a form from a collection of objects. For example, when we want the user to choose from cities in our database, and we have a &lt;code&gt;City&lt;/code&gt; model like:</source>
          <target state="translated">通常，我们希望从一组对象中以一种形式生成一组选择。例如，当我们希望用户从数据库中的城市中进行选择时，我们具有一个 &lt;code&gt;City&lt;/code&gt; 模型，例如：</target>
        </trans-unit>
        <trans-unit id="c84fafe478eddda3091745c0f9518cebab98a91f" translate="yes" xml:space="preserve">
          <source>Old Migrations</source>
          <target state="translated">旧移民</target>
        </trans-unit>
        <trans-unit id="24bb13ed52b652c3b72cf88a37fbba09f3ebf2a2" translate="yes" xml:space="preserve">
          <source>Omitted params are not checked for a match.</source>
          <target state="translated">遗漏的参数不会被检查匹配。</target>
        </trans-unit>
        <trans-unit id="241c63c8293a4785c5d54a58bad0cc5b1e258e85" translate="yes" xml:space="preserve">
          <source>On Active Record models with no &lt;code&gt;:include&lt;/code&gt; or &lt;code&gt;:exclude&lt;/code&gt; option set, it will only wrap the parameters returned by the class method &lt;code&gt;attribute_names&lt;/code&gt;.</source>
          <target state="translated">在未设置 &lt;code&gt;:include&lt;/code&gt; 或 &lt;code&gt;:exclude&lt;/code&gt; 选项的Active Record模型中，它将仅包装类方法 &lt;code&gt;attribute_names&lt;/code&gt; 返回的参数。</target>
        </trans-unit>
        <trans-unit id="598560785c247f274acc5c4070fa99bda2929e8b" translate="yes" xml:space="preserve">
          <source>On Linux and macOS no additional gems are needed, but some are required &lt;a href=&quot;https://github.com/guard/listen#on-bsd&quot;&gt;for *BSD&lt;/a&gt; and &lt;a href=&quot;https://github.com/guard/listen#on-windows&quot;&gt;for Windows&lt;/a&gt;.</source>
          <target state="translated">在Linux和macOS上，不需要其他的gem，但是&lt;a href=&quot;https://github.com/guard/listen#on-bsd&quot;&gt;* BSD&lt;/a&gt;和&lt;a href=&quot;https://github.com/guard/listen#on-windows&quot;&gt;Windows&lt;/a&gt;需要一些gem 。</target>
        </trans-unit>
        <trans-unit id="cb7e9843bd82c1dece41d7312bfec068efcb57d0" translate="yes" xml:space="preserve">
          <source>On Load hooks are the API that allow you to hook into this initialization process without violating the load contract with Rails. This will also mitigate boot performance degradation and avoid conflicts.</source>
          <target state="translated">On Load hooks是允许你在不违反与Rails的负载合约的情况下,钩入这个初始化过程的API。这也将减轻启动性能下降并避免冲突。</target>
        </trans-unit>
        <trans-unit id="872c870642d0d9df40e9bfdbae27a194c26c0aa3" translate="yes" xml:space="preserve">
          <source>On a collection that is ordered using &lt;code&gt;order&lt;/code&gt;, &lt;code&gt;first&lt;/code&gt; will return the first record ordered by the specified attribute for &lt;code&gt;order&lt;/code&gt;.</source>
          <target state="translated">在使用 &lt;code&gt;order&lt;/code&gt; 排序的集合上， &lt;code&gt;first&lt;/code&gt; 将返回由 &lt;code&gt;order&lt;/code&gt; 的指定属性排序的第一条记录。</target>
        </trans-unit>
        <trans-unit id="0750b86b4eede7e1e2ca1d1769894bc80255bcf4" translate="yes" xml:space="preserve">
          <source>On a collection that is ordered using &lt;code&gt;order&lt;/code&gt;, &lt;code&gt;last&lt;/code&gt; will return the last record ordered by the specified attribute for &lt;code&gt;order&lt;/code&gt;.</source>
          <target state="translated">在使用 &lt;code&gt;order&lt;/code&gt; 排序的集合上， &lt;code&gt;last&lt;/code&gt; 将返回由 &lt;code&gt;order&lt;/code&gt; 的指定属性排序的最后一条记录。</target>
        </trans-unit>
        <trans-unit id="5a2467f7374b9793dc3ba2d4e7642f2c8e5375ca" translate="yes" xml:space="preserve">
          <source>On a development machine you can then have your tests running with whatever is fastest (ideally &lt;code&gt;config.eager_load = false&lt;/code&gt;).</source>
          <target state="translated">然后，您可以在开发机器上以最快的速度运行测试（理想情况下 &lt;code&gt;config.eager_load = false&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="a44ed84ddb9890ee1584a9f13e6252cda115659d" translate="yes" xml:space="preserve">
          <source>On databases that support transactions with statements that change the schema, migrations are wrapped in a transaction. If the database does not support this then when a migration fails the parts of it that succeeded will not be rolled back. You will have to rollback the changes that were made by hand.</source>
          <target state="translated">在支持带有改变模式的语句的事务的数据库中,迁移被包裹在一个事务中。如果数据库不支持这样做,那么当迁移失败时,成功的部分将不会被回滚。你将不得不回滚手工进行的更改。</target>
        </trans-unit>
        <trans-unit id="c47764139884e82b7760d1abdd50920217d5e2f8" translate="yes" xml:space="preserve">
          <source>On initialization, the &lt;a href=&quot;activemodel&quot;&gt;&lt;code&gt;ActiveModel&lt;/code&gt;&lt;/a&gt; accepts the instance name that will receive the calls:</source>
          <target state="translated">在初始化时，&lt;a href=&quot;activemodel&quot;&gt; &lt;code&gt;ActiveModel&lt;/code&gt; &lt;/a&gt;接受将接收调用的实例名称：</target>
        </trans-unit>
        <trans-unit id="4699ab936180f05f03c55b16dc89707b9176ceab" translate="yes" xml:space="preserve">
          <source>On initialization, the &lt;a href=&quot;activemodel&quot;&gt;ActiveModel&lt;/a&gt; accepts the instance name that will receive the calls:</source>
          <target state="translated">初始化时，&lt;a href=&quot;activemodel&quot;&gt;ActiveModel&lt;/a&gt;接受将接收调用的实例名称：</target>
        </trans-unit>
        <trans-unit id="3677477a5da402fcf2a3027549647c384b11c412" translate="yes" xml:space="preserve">
          <source>On pages generated by &lt;code&gt;NewsController&lt;/code&gt;, you want to hide the top menu and add a right menu:</source>
          <target state="translated">在 &lt;code&gt;NewsController&lt;/code&gt; 生成的页面上，您想隐藏顶部菜单并添加一个右键菜单：</target>
        </trans-unit>
        <trans-unit id="e3978129c990bfbab0ce7685859285114469c81e" translate="yes" xml:space="preserve">
          <source>On reload, &lt;code&gt;MockedGateway&lt;/code&gt; is reloaded, but &lt;code&gt;$PAYMENT_GATEWAY&lt;/code&gt; is not updated because initializers only run on boot. Therefore, it won't reflect the changes.</source>
          <target state="translated">重新加载时，将重新加载 &lt;code&gt;MockedGateway&lt;/code&gt; ，但不会更新 &lt;code&gt;$PAYMENT_GATEWAY&lt;/code&gt; 因为初始化程序仅在引导时运行。因此，它不会反映更改。</target>
        </trans-unit>
        <trans-unit id="de926fabb5507cf2933e374222b53742ae1be3df" translate="yes" xml:space="preserve">
          <source>On shared hosts, Apache sometimes doesn't pass authentication headers to FCGI instances. If your environment matches this description and you cannot authenticate, try this rule in your Apache setup:</source>
          <target state="translated">在共享主机上,Apache有时不会将认证头文件传递给FCGI实例。如果你的环境符合这个描述,而你又无法进行身份验证,请在你的Apache设置中尝试这个规则。</target>
        </trans-unit>
        <trans-unit id="140918e50b4e7ad423def44526255934da360a32" translate="yes" xml:space="preserve">
          <source>On the contrary, if &lt;code&gt;ApplicationController&lt;/code&gt; is unknown, the constant is considered missing and an autoload is going to be attempted by Rails.</source>
          <target state="translated">相反，如果 &lt;code&gt;ApplicationController&lt;/code&gt; 是未知的，则认为该常量丢失，并且Rails将尝试自动加载。</target>
        </trans-unit>
        <trans-unit id="c30fcff3ad290c7e2077c5cfff2182462066e036" translate="yes" xml:space="preserve">
          <source>On the first request the assets are compiled and cached as outlined in &lt;a href=&quot;#assets-cache-store&quot;&gt;Assets Cache Store&lt;/a&gt;, and the manifest names used in the helpers are altered to include the SHA256 hash.</source>
          <target state="translated">在第一个请求上，资产将按照&lt;a href=&quot;#assets-cache-store&quot;&gt;Assets Cache Store中的&lt;/a&gt;概述进行编译和缓存，并且更改辅助程序中使用的清单名称以包括SHA256哈希。</target>
        </trans-unit>
        <trans-unit id="fe29c24a5a157c6c342e90762e65fd621a7bd0ef" translate="yes" xml:space="preserve">
          <source>On the first request the assets are compiled and cached as outlined in development above, and the manifest names used in the helpers are altered to include the SHA256 hash.</source>
          <target state="translated">在第一个请求中,资产被编译和缓存,就像上面开发中所概述的那样,并且帮助程序中使用的清单名称被改变为包括SHA256哈希。</target>
        </trans-unit>
        <trans-unit id="2678d1eb020d93b21282ea2cf8ee0358c77e86bb" translate="yes" xml:space="preserve">
          <source>On the last line of the block is a call to &lt;code&gt;t.timestamps&lt;/code&gt;. This method defines two additional columns named &lt;code&gt;created_at&lt;/code&gt; and &lt;code&gt;updated_at&lt;/code&gt;. As we will see, Rails will manage these for us, setting the values when we create or update a model object.</source>
          <target state="translated">在该块的最后一行是对 &lt;code&gt;t.timestamps&lt;/code&gt; 的调用。此方法定义了另外两个名为 &lt;code&gt;created_at&lt;/code&gt; 和 &lt;code&gt;updated_at&lt;/code&gt; 列。正如我们将看到的，Rails将为我们管理这些，在创建或更新模型对象时设置值。</target>
        </trans-unit>
        <trans-unit id="1dc09fb3938a1c14c6c6718858f7b5cf8ec6c494" translate="yes" xml:space="preserve">
          <source>On the other hand, &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/DateTime.html#method-i-advance&quot;&gt;&lt;code&gt;advance&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/DateTime.html#method-i-change&quot;&gt;&lt;code&gt;change&lt;/code&gt;&lt;/a&gt; are also defined and support more options, they are documented below.</source>
          <target state="translated">另一方面，还定义了&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/DateTime.html#method-i-advance&quot;&gt; &lt;code&gt;advance&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/DateTime.html#method-i-change&quot;&gt; &lt;code&gt;change&lt;/code&gt; &lt;/a&gt;，并支持更多选项，如下所述。</target>
        </trans-unit>
        <trans-unit id="cf7885ae34fbf360b8d8a78a1dba62e8f9926afe" translate="yes" xml:space="preserve">
          <source>On the other hand, &lt;code&gt;advance&lt;/code&gt; and &lt;code&gt;change&lt;/code&gt; are also defined and support more options, they are documented below.</source>
          <target state="translated">另一方面，还定义了 &lt;code&gt;advance&lt;/code&gt; 和 &lt;code&gt;change&lt;/code&gt; ，并支持更多选项，如下所述。</target>
        </trans-unit>
        <trans-unit id="fbb58821191368609ffb6e4a4ecef873588437b9" translate="yes" xml:space="preserve">
          <source>On the other hand, some calls need to be changed to make caching work properly. For instance, if you're passing a custom collection, you'll need to change:</source>
          <target state="translated">另一方面,需要改变一些调用来使缓存正常工作。例如,如果你正在传递一个自定义的集合,你需要改变。</target>
        </trans-unit>
        <trans-unit id="93f46accb2f7cefa982f2385fd4474294bc9c94e" translate="yes" xml:space="preserve">
          <source>On the other hand, when multiple conditions define whether or not a validation should happen, an &lt;code&gt;Array&lt;/code&gt; can be used. Moreover, you can apply both &lt;code&gt;:if&lt;/code&gt; and &lt;code&gt;:unless&lt;/code&gt; to the same validation.</source>
          <target state="translated">另一方面，当多个条件定义是否应该进行验证时，可以使用 &lt;code&gt;Array&lt;/code&gt; 。此外，您可以将 &lt;code&gt;:if&lt;/code&gt; 和 &lt;code&gt;:unless&lt;/code&gt; 应用于同一验证。</target>
        </trans-unit>
        <trans-unit id="2c276557e9fbc03eb8cd74022dd70a23fd6917d1" translate="yes" xml:space="preserve">
          <source>On top of the collections, you have the complete URL that a given action redirected to available in &lt;code&gt;redirect_to_url&lt;/code&gt;.</source>
          <target state="translated">在集合的顶部，您可以在 &lt;code&gt;redirect_to_url&lt;/code&gt; 中获得给定操作重定向到的完整URL 。</target>
        </trans-unit>
        <trans-unit id="fd06efef0d17c2ad10c85691f22c4e0b376101b5" translate="yes" xml:space="preserve">
          <source>Once &lt;code&gt;config/boot.rb&lt;/code&gt; has finished, the next file that is required is &lt;code&gt;rails/commands&lt;/code&gt;, which helps in expanding aliases. In the current case, the &lt;code&gt;ARGV&lt;/code&gt; array simply contains &lt;code&gt;server&lt;/code&gt; which will be passed over:</source>
          <target state="translated">一旦 &lt;code&gt;config/boot.rb&lt;/code&gt; 已经完成，所需的下一个文件是 &lt;code&gt;rails/commands&lt;/code&gt; ，这有助于扩大别名。在当前情况下， &lt;code&gt;ARGV&lt;/code&gt; 阵列仅包含将通过的 &lt;code&gt;server&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="b7c485a6e3178c1fb597f4c90ba8fa66c72ba125" translate="yes" xml:space="preserve">
          <source>Once a &lt;a href=&quot;classmethods#method-i-composed_of&quot;&gt;&lt;code&gt;composed_of&lt;/code&gt;&lt;/a&gt; relationship is specified for a model, records can be loaded from the database by specifying an instance of the value object in the conditions hash. The following example finds all customers with &lt;code&gt;address_street&lt;/code&gt; equal to &amp;ldquo;May Street&amp;rdquo; and &lt;code&gt;address_city&lt;/code&gt; equal to &amp;ldquo;Chicago&amp;rdquo;:</source>
          <target state="translated">一旦为模型指定了&lt;a href=&quot;classmethods#method-i-composed_of&quot;&gt; &lt;code&gt;composed_of&lt;/code&gt; &lt;/a&gt;关系，就可以通过在条件哈希中指定值对象的实例从数据库中加载记录。以下示例查找所有 &lt;code&gt;address_street&lt;/code&gt; 等于&amp;ldquo; May Street&amp;rdquo;且 &lt;code&gt;address_city&lt;/code&gt; 等于&amp;ldquo; Chicago&amp;rdquo;的客户：</target>
        </trans-unit>
        <trans-unit id="32abcc0a8a37ed0baf8f7b2bb77797ece6faa56f" translate="yes" xml:space="preserve">
          <source>Once a &lt;a href=&quot;classmethods#method-i-composed_of&quot;&gt;composed_of&lt;/a&gt; relationship is specified for a model, records can be loaded from the database by specifying an instance of the value object in the conditions hash. The following example finds all customers with &lt;code&gt;address_street&lt;/code&gt; equal to &amp;ldquo;May Street&amp;rdquo; and &lt;code&gt;address_city&lt;/code&gt; equal to &amp;ldquo;Chicago&amp;rdquo;:</source>
          <target state="translated">一旦为模型指定了&lt;a href=&quot;classmethods#method-i-composed_of&quot;&gt;composition_of&lt;/a&gt;关系，就可以通过在条件哈希中指定值对象的实例从数据库中加载记录。以下示例查找所有 &lt;code&gt;address_street&lt;/code&gt; 等于&amp;ldquo; May Street&amp;rdquo;且 &lt;code&gt;address_city&lt;/code&gt; 等于&amp;ldquo; Chicago&amp;rdquo;的客户：</target>
        </trans-unit>
        <trans-unit id="eb700a2f08bb886db26d24fcc7aeb84fcb61bf3e" translate="yes" xml:space="preserve">
          <source>Once a file has been uploaded, there are a multitude of potential tasks, ranging from where to store the files (on Disk, Amazon S3, etc), associating them with models, resizing image files, and generating thumbnails, etc. &lt;a href=&quot;active_storage_overview&quot;&gt;Active Storage&lt;/a&gt; is designed to assist with these tasks.</source>
          <target state="translated">上载文件后，将有许多潜在的任务，包括文件的存储位置（在磁盘，Amazon S3等上），将它们与模型相关联，调整图像文件的大小以及生成缩略图等&lt;a href=&quot;active_storage_overview&quot;&gt;。ActiveStorage&lt;/a&gt;是旨在协助完成这些任务。</target>
        </trans-unit>
        <trans-unit id="9ae845b5ac74396339357b98d0fbe2f8795db5fa" translate="yes" xml:space="preserve">
          <source>Once a mailer action and template are defined, you can deliver your message or defer its creation and delivery for later:</source>
          <target state="translated">一旦定义了邮件发送动作和模板,您就可以发送您的邮件,或者将其创建和发送推迟到以后。</target>
        </trans-unit>
        <trans-unit id="b684bfa426d4701425f18ff80e07c01638bd0c35" translate="yes" xml:space="preserve">
          <source>Once an Active Record object has been retrieved, its attributes can be modified and it can be saved to the database.</source>
          <target state="translated">一旦一个活动记录对象被检索到,它的属性就可以被修改,并且可以保存到数据库中。</target>
        </trans-unit>
        <trans-unit id="9f0fb844d06a05cbbf389493b98ebd0a77466fc8" translate="yes" xml:space="preserve">
          <source>Once our chunk of behavior starts pushing the scroll-to-understand-it boundary, we give in and move it to a separate file. At this size, the increased overhead can be a reasonable tradeoff even if it reduces our at-a-glance perception of how things work.</source>
          <target state="translated">一旦我们的行为块开始推动滚动到理解它的边界,我们就会放弃并将其移动到一个单独的文件中。在这种大小下,增加的开销是合理的权衡,即使它降低了我们对事物工作的一目了然的感知。</target>
        </trans-unit>
        <trans-unit id="9d6f741183f1515d1f5d59eb9b0930fde6a4d1c6" translate="yes" xml:space="preserve">
          <source>Once the &lt;code&gt;InboundEmail&lt;/code&gt; has reached the status of being either &lt;code&gt;delivered&lt;/code&gt;, &lt;code&gt;failed&lt;/code&gt;, or &lt;code&gt;bounced&lt;/code&gt;, it'll count as having been &lt;code&gt;#processed?&lt;/code&gt;. Once processed, the &lt;code&gt;InboundEmail&lt;/code&gt; will be scheduled for automatic incineration at a later point.</source>
          <target state="translated">一旦 &lt;code&gt;InboundEmail&lt;/code&gt; 达到 &lt;code&gt;delivered&lt;/code&gt; ， &lt;code&gt;failed&lt;/code&gt; 或 &lt;code&gt;bounced&lt;/code&gt; ，它将被视为已被 &lt;code&gt;#processed?&lt;/code&gt; 。处理后，将安排 &lt;code&gt;InboundEmail&lt;/code&gt; 在以后自动焚化。</target>
        </trans-unit>
        <trans-unit id="3aaa0edd16747144273d0ecd37353ec152bf6c37" translate="yes" xml:space="preserve">
          <source>Once users with SHA1 digested signed cookies should no longer have a chance to have their cookies rewritten, remove the rotation.</source>
          <target state="translated">一旦用户使用SHA1消化签名的Cookie应该没有机会再让他们的Cookie被改写,删除轮换。</target>
        </trans-unit>
        <trans-unit id="281c76c1b19423718ff2464b5623c5a6fb716258" translate="yes" xml:space="preserve">
          <source>Once we have made the new comment, we send the user back to the original article using the &lt;code&gt;article_path(@article)&lt;/code&gt; helper. As we have already seen, this calls the &lt;code&gt;show&lt;/code&gt; action of the &lt;code&gt;ArticlesController&lt;/code&gt; which in turn renders the &lt;code&gt;show.html.erb&lt;/code&gt; template. This is where we want the comment to show, so let's add that to the &lt;code&gt;app/views/articles/show.html.erb&lt;/code&gt;.</source>
          <target state="translated">做出新评论后，我们将使用 &lt;code&gt;article_path(@article)&lt;/code&gt; 帮助程序将用户送回原始文章。正如我们已经看到的那样，这调用了 &lt;code&gt;ArticlesController&lt;/code&gt; 的 &lt;code&gt;show&lt;/code&gt; 动作，该动作又呈现了 &lt;code&gt;show.html.erb&lt;/code&gt; 模板。这是我们要显示评论的地方，所以我们将其添加到 &lt;code&gt;app/views/articles/show.html.erb&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bb223775171386c6c0a22f5de44dc3f9db8c2839" translate="yes" xml:space="preserve">
          <source>Once you have configured your server and your CDN when you serve a webpage that has an asset:</source>
          <target state="translated">一旦你配置了你的服务器和CDN,当你服务于一个有资产的网页时。</target>
        </trans-unit>
        <trans-unit id="e3b19612cb485d184e45f8395a5657419dbf087f" translate="yes" xml:space="preserve">
          <source>Once you have created your migration using one of the generators it's time to get to work!</source>
          <target state="translated">一旦你使用其中一个生成器创建了你的迁移,就可以开始工作了!</target>
        </trans-unit>
        <trans-unit id="fe8af5f46a77f239597c4362061aa7aecb214d4a" translate="yes" xml:space="preserve">
          <source>Once you have this unique index, attempting to add the article to a person twice will raise an &lt;code&gt;ActiveRecord::RecordNotUnique&lt;/code&gt; error:</source>
          <target state="translated">一旦有了该唯一索引，尝试将文章两次添加到某人时，将引发 &lt;code&gt;ActiveRecord::RecordNotUnique&lt;/code&gt; 错误：</target>
        </trans-unit>
        <trans-unit id="05e500386e8888e50bcaafff45919de6c32f66f2" translate="yes" xml:space="preserve">
          <source>Once you've configured the application server, you must proxy requests to it by configuring your web server appropriately. For example your NGINX config may include:</source>
          <target state="translated">一旦你配置了应用服务器,你必须通过配置你的Web服务器来代理请求。例如,你的NGINX配置可能会包括。</target>
        </trans-unit>
        <trans-unit id="76d9ad0fe6675cc2a1a974cc2bfe7c1f295677c2" translate="yes" xml:space="preserve">
          <source>Once you've created a model and added validations, if that model is created via a web form, you probably want to display an error message when one of the validations fail.</source>
          <target state="translated">一旦您创建了一个模型并添加了验证,如果该模型是通过Web表单创建的,您可能希望在其中一个验证失败时显示一个错误消息。</target>
        </trans-unit>
        <trans-unit id="664bf9ff587f9b7229629113c738857030c6de27" translate="yes" xml:space="preserve">
          <source>Once your README is solid, go through and add rdoc comments to all of the methods that developers will use. It's also customary to add &lt;code&gt;#:nodoc:&lt;/code&gt; comments to those parts of the code that are not included in the public API.</source>
          <target state="translated">自述文件扎实之后，请遍历并将rdoc注释添加至开发人员将使用的所有方法。通常，在公共API中未包含的代码部分添加 &lt;code&gt;#:nodoc:&lt;/code&gt; 注释。</target>
        </trans-unit>
        <trans-unit id="7cdd6eb4ac963f5c83d7049e92388c653554b164" translate="yes" xml:space="preserve">
          <source>Once your comments are good to go, navigate to your plugin directory and run:</source>
          <target state="translated">一旦你的评论是好的,导航到你的插件目录并运行。</target>
        </trans-unit>
        <trans-unit id="06b89364f39a831c161354043334591a09417103" translate="yes" xml:space="preserve">
          <source>Once your plugin is stable and you are ready to deploy, do everyone else a favor and document it! Luckily, writing documentation for your plugin is easy.</source>
          <target state="translated">一旦你的插件是稳定的,你已经准备好部署,帮大家一个忙,并记录它! 幸运的是,为你的插件编写文档很容易。</target>
        </trans-unit>
        <trans-unit id="60cd3e1b38563fd269488b075cfb5c9ad562a629" translate="yes" xml:space="preserve">
          <source>One article can have many comments.</source>
          <target state="translated">一篇文章可以有很多评论。</target>
        </trans-unit>
        <trans-unit id="5c46ab4cd5b6744ee339c80d8a6f96dc75c460ad" translate="yes" xml:space="preserve">
          <source>One can additionally pass a hash as an argument to unscope specific &lt;code&gt;:where&lt;/code&gt; values. This is done by passing a hash with a single key-value pair. The key should be &lt;code&gt;:where&lt;/code&gt; and the value should be the where value to unscope. For example:</source>
          <target state="translated">还可以将散列作为参数传递给取消范围特定的 &lt;code&gt;:where&lt;/code&gt; 值。这是通过传递具有单个键值对的散列来完成的。密钥应为 &lt;code&gt;:where&lt;/code&gt; ，而值应为要取消作用域的where值。例如：</target>
        </trans-unit>
        <trans-unit id="4930c9beef86b19c8b6f488e0dbc23b3e8f631e4" translate="yes" xml:space="preserve">
          <source>One common task is to inspect the contents of a variable. Rails provides three different ways to do this:</source>
          <target state="translated">一个常见的任务是检查一个变量的内容。Rails提供了三种不同的方法来完成这个任务。</target>
        </trans-unit>
        <trans-unit id="e459071ea49b553ce1ea05c61b3cf666f45e7e9e" translate="yes" xml:space="preserve">
          <source>One could think about doing some &lt;a href=&quot;#require-dependency&quot;&gt;&lt;code&gt;require_dependency&lt;/code&gt;&lt;/a&gt; calls in an initializer to make sure certain constants are loaded upfront, for example as an attempt to address the &lt;a href=&quot;#autoloading-and-sti&quot;&gt;gotcha with STIs&lt;/a&gt;.</source>
          <target state="translated">可以考虑在初始化程序中进行一些&lt;a href=&quot;#require-dependency&quot;&gt; &lt;code&gt;require_dependency&lt;/code&gt; &lt;/a&gt;调用，以确保预先加载了某些常量，例如，尝试&lt;a href=&quot;#autoloading-and-sti&quot;&gt;用STI&lt;/a&gt;解决问题。</target>
        </trans-unit>
        <trans-unit id="ed948b58a36bf16e3900d341f4b7a15b389baad5" translate="yes" xml:space="preserve">
          <source>One exception is the &lt;a href=&quot;../rollback&quot;&gt;&lt;code&gt;ActiveRecord::Rollback&lt;/code&gt;&lt;/a&gt; exception, which will trigger a ROLLBACK when raised, but not be re-raised by the transaction block.</source>
          <target state="translated">一个异常是&lt;a href=&quot;../rollback&quot;&gt; &lt;code&gt;ActiveRecord::Rollback&lt;/code&gt; &lt;/a&gt;异常，它在引发时将触发ROLLBACK，但不会由事务块重新引发。</target>
        </trans-unit>
        <trans-unit id="cc22f527fe95efb8d4c108c9990bb666b0e1b55d" translate="yes" xml:space="preserve">
          <source>One exception is the &lt;a href=&quot;../rollback&quot;&gt;ActiveRecord::Rollback&lt;/a&gt; exception, which will trigger a ROLLBACK when raised, but not be re-raised by the transaction block.</source>
          <target state="translated">一个异常是&lt;a href=&quot;../rollback&quot;&gt;ActiveRecord :: Rollback&lt;/a&gt;异常，它在引发时将触发ROLLBACK，但不会由事务块重新引发。</target>
        </trans-unit>
        <trans-unit id="470be94c0a730bbafb8f17dd2546bbba150b60bf" translate="yes" xml:space="preserve">
          <source>One final thing is that the &lt;code&gt;articles&lt;/code&gt; resource for this engine should be the root of the engine. Whenever someone goes to the root path where the engine is mounted, they should be shown a list of articles. This can be made to happen if this line is inserted into the &lt;code&gt;config/routes.rb&lt;/code&gt; file inside the engine:</source>
          <target state="translated">最后一件事是，该引擎的 &lt;code&gt;articles&lt;/code&gt; 资源应该是引擎的根。每当有人到达安装引擎的根路径时，应向他们显示文章列表。如果将此行插入到引擎内部的 &lt;code&gt;config/routes.rb&lt;/code&gt; 文件中，则会发生这种情况：</target>
        </trans-unit>
        <trans-unit id="a0402b4436a00e695f872e750277a2c085d1e020" translate="yes" xml:space="preserve">
          <source>One important caveat is that &lt;code&gt;default_scope&lt;/code&gt; will be prepended in &lt;code&gt;scope&lt;/code&gt; and &lt;code&gt;where&lt;/code&gt; conditions.</source>
          <target state="translated">一个重要的警告是 &lt;code&gt;default_scope&lt;/code&gt; 将预先考虑 &lt;code&gt;scope&lt;/code&gt; ，并 &lt;code&gt;where&lt;/code&gt; 的条件。</target>
        </trans-unit>
        <trans-unit id="246e3b48455f1d814518444a63e1c43b2a9f76d1" translate="yes" xml:space="preserve">
          <source>One key consideration for successfully internationalizing an application is to avoid making incorrect assumptions about grammar rules when abstracting localized code. Grammar rules that seem fundamental in one locale may not hold true in another one.</source>
          <target state="translated">成功实现应用程序国际化的一个关键考虑因素是,在抽象本地化代码时,避免对语法规则做出错误的假设。在一种语言环境中看似基本的语法规则在另一种语言环境中可能并不适用。</target>
        </trans-unit>
        <trans-unit id="f46bc5971c53449743e1084790d667e812021e1a" translate="yes" xml:space="preserve">
          <source>One last feature about generators which is quite useful for plugin generators is fallbacks. For example, imagine that you want to add a feature on top of TestUnit like &lt;a href=&quot;https://github.com/thoughtbot/shoulda&quot;&gt;shoulda&lt;/a&gt; does. Since TestUnit already implements all generators required by Rails and shoulda just wants to overwrite part of it, there is no need for shoulda to reimplement some generators again, it can simply tell Rails to use a &lt;code&gt;TestUnit&lt;/code&gt; generator if none was found under the &lt;code&gt;Shoulda&lt;/code&gt; namespace.</source>
          <target state="translated">关于生成器的最后一个功能（对插件生成器非常有用）是后备。例如，假设您要添加的TestUnit顶部的功能，就如同&lt;a href=&quot;https://github.com/thoughtbot/shoulda&quot;&gt;早该&lt;/a&gt;做。由于TestUnit已经实现了Rails所需的所有生成器，并且shoulda只想覆盖其中的一部分，因此，无需 &lt;code&gt;Shoulda&lt;/code&gt; 重新实现某些生成器，它可以简单地告诉Rails 如果在Shoulda命名空间下找不到 &lt;code&gt;TestUnit&lt;/code&gt; 生成器。</target>
        </trans-unit>
        <trans-unit id="5e7d88f87768ec37728cb502a78042ec7cf07282" translate="yes" xml:space="preserve">
          <source>One more example: Calling the &lt;code&gt;:create&lt;/code&gt; action to create a new article, passing in text for the &lt;code&gt;title&lt;/code&gt; in &lt;code&gt;params&lt;/code&gt;, as JSON request:</source>
          <target state="translated">再举一个例子：调用 &lt;code&gt;:create&lt;/code&gt; 动作创建一个新文章，将 &lt;code&gt;title&lt;/code&gt; 中的文本作为JSON请求传递给 &lt;code&gt;params&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="f76431a8dde340b2752187d0362cbab4d1a2a066" translate="yes" xml:space="preserve">
          <source>One of the most basic forms you see on the web is a search form. This form contains:</source>
          <target state="translated">你在网络上看到的最基本的形式之一就是搜索形式。这个表单包含:</target>
        </trans-unit>
        <trans-unit id="5c95f415ebc17087356f0093b18162c4379df3d6" translate="yes" xml:space="preserve">
          <source>One of the most common jobs in a modern web application is sending emails outside of the request-response cycle, so the user doesn't have to wait on it. Active Job is integrated with Action Mailer so you can easily send emails asynchronously:</source>
          <target state="translated">现代Web应用程序中最常见的工作之一是在请求-响应周期之外发送电子邮件,这样用户就不必等待了。Active Job与Action Mailer集成在一起,因此您可以轻松地异步发送电子邮件。</target>
        </trans-unit>
        <trans-unit id="3a82e02c89534b4ce708fde1e165b76a228bb4c9" translate="yes" xml:space="preserve">
          <source>One of the options for compressing CSS is YUI. The &lt;a href=&quot;https://yui.github.io/yuicompressor/css.html&quot;&gt;YUI CSS compressor&lt;/a&gt; provides minification.</source>
          <target state="translated">压缩CSS的选项之一是YUI。该&lt;a href=&quot;https://yui.github.io/yuicompressor/css.html&quot;&gt;YUI CSS压缩机&lt;/a&gt;提供缩小。</target>
        </trans-unit>
        <trans-unit id="a4251f3c32016070331a0f392559cfb61e10e484" translate="yes" xml:space="preserve">
          <source>One option you have is to set the locale from the domain name where your application runs. For example, we want &lt;code&gt;www.example.com&lt;/code&gt; to load the English (or default) locale, and &lt;code&gt;www.example.es&lt;/code&gt; to load the Spanish locale. Thus the &lt;em&gt;top-level domain name&lt;/em&gt; is used for locale setting. This has several advantages:</source>
          <target state="translated">您拥有的一种选择是从应用程序运行所在的域名设置语言环境。例如，我们希望 &lt;code&gt;www.example.com&lt;/code&gt; 加载英语（或默认）语言环境，而 &lt;code&gt;www.example.es&lt;/code&gt; 加载西班牙语言环境。因此，&lt;em&gt;顶级域名&lt;/em&gt;用于区域设置。这有几个优点：</target>
        </trans-unit>
        <trans-unit id="64fc2fa5bac989aa066db43eaa04574b09961fcd" translate="yes" xml:space="preserve">
          <source>One possibility is to set the expiry time-stamp of the cookie with the session ID. However the client can edit cookies that are stored in the web browser so expiring sessions on the server is safer. Here is an example of how to &lt;em&gt;expire sessions in a database table&lt;/em&gt;. Call &lt;code&gt;Session.sweep(&quot;20 minutes&quot;)&lt;/code&gt; to expire sessions that were used longer than 20 minutes ago.</source>
          <target state="translated">一种可能性是使用会话ID设置cookie的到期时间戳。但是，客户端可以编辑存储在Web浏览器中的cookie，因此在服务器上过期会话更为安全。这是一个有关如何使&lt;em&gt;数据库表中的会话到期&lt;/em&gt;的示例。调用 &lt;code&gt;Session.sweep(&quot;20 minutes&quot;)&lt;/code&gt; 使使用时间超过20分钟的会话失效。</target>
        </trans-unit>
        <trans-unit id="68b0cd63505ae7d2b6a8ce1dba053ca4c7b65211" translate="yes" xml:space="preserve">
          <source>One real use case example would be to rotate a basic auth credentials:</source>
          <target state="translated">一个真实的用例是旋转一个基本的认证证书。</target>
        </trans-unit>
        <trans-unit id="fca890416fb094b3ddfd3cf8fb7b195c7d30af1f" translate="yes" xml:space="preserve">
          <source>One reason you may wish to call this method explicitly is between queries that ask the database to randomize results. Otherwise the cache would see the same SQL query and repeatedly return the same result each time, silently undermining the randomness you were expecting.</source>
          <target state="translated">您可能希望显式调用此方法的一个原因是在要求数据库随机化结果的查询之间。否则缓存会看到相同的SQL查询,并且每次重复返回相同的结果,默默地破坏了你所期望的随机性。</target>
        </trans-unit>
        <trans-unit id="1061b56869ce9ecfe7b946f0d5d4545fb2d2e66c" translate="yes" xml:space="preserve">
          <source>One should restart the entire transaction if an &lt;a href=&quot;../statementinvalid&quot;&gt;&lt;code&gt;ActiveRecord::StatementInvalid&lt;/code&gt;&lt;/a&gt; occurred.</source>
          <target state="translated">如果发生&lt;a href=&quot;../statementinvalid&quot;&gt; &lt;code&gt;ActiveRecord::StatementInvalid&lt;/code&gt; &lt;/a&gt;则应重新启动整个事务。</target>
        </trans-unit>
        <trans-unit id="f09ce296cc38437a13514732993c15e3e11a75f8" translate="yes" xml:space="preserve">
          <source>One should restart the entire transaction if an &lt;a href=&quot;../statementinvalid&quot;&gt;ActiveRecord::StatementInvalid&lt;/a&gt; occurred.</source>
          <target state="translated">如果发生&lt;a href=&quot;../statementinvalid&quot;&gt;ActiveRecord :: StatementInvalid，&lt;/a&gt;则应重新启动整个事务。</target>
        </trans-unit>
        <trans-unit id="88484856dcbc8c0609510a8e6e9274137c98f286" translate="yes" xml:space="preserve">
          <source>One such application server you can use is &lt;a href=&quot;https://bogomips.org/unicorn/&quot;&gt;Unicorn&lt;/a&gt; to run behind a reverse proxy.</source>
          <target state="translated">您可以使用的一种这样的应用程序服务器是&lt;a href=&quot;https://bogomips.org/unicorn/&quot;&gt;Unicorn&lt;/a&gt;，可以在反向代理后面运行。</target>
        </trans-unit>
        <trans-unit id="e37bddf42c0d0970c5b853c0883f240cfcd7e97c" translate="yes" xml:space="preserve">
          <source>One way to avoid deep nesting (as recommended above) is to generate the collection actions scoped under the parent, so as to get a sense of the hierarchy, but to not nest the member actions. In other words, to only build routes with the minimal amount of information to uniquely identify the resource, like this:</source>
          <target state="translated">避免深度嵌套的一种方法(如上文所推荐的)是在父类下生成范围内的集合动作,这样可以获得层次感,但不要嵌套成员动作。换句话说,只构建具有最小信息量的路由,以唯一标识资源,比如这样。</target>
        </trans-unit>
        <trans-unit id="430a9e43756de70083d399ed83ba156a19e29b44" translate="yes" xml:space="preserve">
          <source>One way to avoid this is to &lt;code&gt;unscope&lt;/code&gt; the includes:</source>
          <target state="translated">避免这种情况的一种方法是 &lt;code&gt;unscope&lt;/code&gt; 包括的范围：</target>
        </trans-unit>
        <trans-unit id="a4925d61b004a9041a23947e53a1641d645c142e" translate="yes" xml:space="preserve">
          <source>One way to check the headers are cached properly in your CDN is by using &lt;a href=&quot;https://explainshell.com/explain?cmd=curl+-I+http%3A%2F%2Fwww.example.com&quot;&gt;curl&lt;/a&gt;. You can request the headers from both your server and your CDN to verify they are the same:</source>
          <target state="translated">检查header是否正确缓存在CDN中的一种方法是使用&lt;a href=&quot;https://explainshell.com/explain?cmd=curl+-I+http%3A%2F%2Fwww.example.com&quot;&gt;curl&lt;/a&gt;。您可以从服务器和CDN请求标头，以验证它们是否相同：</target>
        </trans-unit>
        <trans-unit id="86d261fa582670a8e042e910d33f5f376cfb98bf" translate="yes" xml:space="preserve">
          <source>One way to use partials is to treat them as the equivalent of subroutines: as a way to move details out of a view so that you can grasp what's going on more easily. For example, you might have a view that looked like this:</source>
          <target state="translated">使用partials的一种方法是把它们当作相当于子程序的东西:作为一种把细节从视图中移出的方法,这样你就可以更容易地掌握正在发生的事情。例如,你可能有一个看起来像这样的视图。</target>
        </trans-unit>
        <trans-unit id="10c415290a3667c6831ad121a2104951591264e2" translate="yes" xml:space="preserve">
          <source>One way to use partials is to treat them as the equivalent of subroutines; a way to move details out of a view so that you can grasp what's going on more easily. For example, you might have a view that looks like this:</source>
          <target state="translated">使用partials的一种方法是把它们当作相当于子程序的东西;一种把细节从视图中移出的方法,这样你就可以更容易地掌握正在发生的事情。例如,你可能有一个看起来像这样的视图。</target>
        </trans-unit>
        <trans-unit id="964ce9a18a0f2d237ce83f269c1ef2f591a32a27" translate="yes" xml:space="preserve">
          <source>One-to-many</source>
          <target state="translated">One-to-many</target>
        </trans-unit>
        <trans-unit id="dfba1b36f2cfd7ce46bc5a8cfbc0d7290fb9c82e" translate="yes" xml:space="preserve">
          <source>One-to-many Example</source>
          <target state="translated">一对多实例</target>
        </trans-unit>
        <trans-unit id="261f46f06dea79f5ef7997cf1cc6cb23aeabfbd2" translate="yes" xml:space="preserve">
          <source>One-to-one</source>
          <target state="translated">One-to-one</target>
        </trans-unit>
        <trans-unit id="19832bb6d166dd4f18d0ac476a6edbfe61d74927" translate="yes" xml:space="preserve">
          <source>One-to-one Example</source>
          <target state="translated">一对一实例</target>
        </trans-unit>
        <trans-unit id="bd135e9223295b1a34af00dc168625632ddce4ef" translate="yes" xml:space="preserve">
          <source>One-to-one associations</source>
          <target state="translated">一对一协会</target>
        </trans-unit>
        <trans-unit id="d88f2fb493481e9ef2424236dfa3c3110a1024a0" translate="yes" xml:space="preserve">
          <source>Only GET and HEAD requests are served. POST and other HTTP methods are handed off to the main app.</source>
          <target state="translated">只服务于GET和HEAD请求。POST和其他HTTP方法都交给主应用程序。</target>
        </trans-unit>
        <trans-unit id="33cf6a3be534018b9353cc94282a82862a2fa988" translate="yes" xml:space="preserve">
          <source>Only bug fixes, no API changes, no new features. Except as necessary for security fixes.</source>
          <target state="translated">只有bug修复,没有api改动,没有新功能。除了必要的安全修复。</target>
        </trans-unit>
        <trans-unit id="d34302dff8ebb28f6311974ae0500fbaf9ce0fa8" translate="yes" xml:space="preserve">
          <source>Only displays the screenshot path. This is the default value.</source>
          <target state="translated">只显示截图路径。这是默认值。</target>
        </trans-unit>
        <trans-unit id="742072d9be1eda7528ca794b5657d960ee0b2371" translate="yes" xml:space="preserve">
          <source>Only equality, range, and subset checking are possible with Hash conditions.</source>
          <target state="translated">只有平等、范围和子集检查可以用Hash条件。</target>
        </trans-unit>
        <trans-unit id="35ff5e0d2029e0e75fc3fc44ee87d6b8c8264d5a" translate="yes" xml:space="preserve">
          <source>Only files in the root directory are served; path traversal is denied.</source>
          <target state="translated">只为根目录下的文件提供服务;拒绝路径遍历。</target>
        </trans-unit>
        <trans-unit id="8ea92c339437a1c8e9e5808873fb7ac4143f27fa" translate="yes" xml:space="preserve">
          <source>Only generate routes for the given actions.</source>
          <target state="translated">只为给定的动作生成路径。</target>
        </trans-unit>
        <trans-unit id="ca99a5d2669d6851ee378f86d51ad62b685bfa3c" translate="yes" xml:space="preserve">
          <source>Only long-running &quot;top level&quot; processes should invoke the Reloader, because if it determines a reload is needed, it will block until all other threads have completed any Executor invocations.</source>
          <target state="translated">只有长期运行的 &quot;顶层 &quot;进程才应该调用Reloader,因为如果它确定需要重载,它会阻塞,直到所有其他线程完成任何Executor的调用。</target>
        </trans-unit>
        <trans-unit id="307f86dd0241c519ac2a2916c2c14365af45ecd6" translate="yes" xml:space="preserve">
          <source>Only one console can be rendered per request. Otherwise &lt;code&gt;web-console&lt;/code&gt; will raise an error on the second &lt;code&gt;console&lt;/code&gt; invocation.</source>
          <target state="translated">每个请求只能呈现一个控制台。否则， &lt;code&gt;web-console&lt;/code&gt; 将在第二次 &lt;code&gt;console&lt;/code&gt; 调用时引发错误。</target>
        </trans-unit>
        <trans-unit id="2e46e99ce898fa5c16055d4175c91c423d5eb141" translate="yes" xml:space="preserve">
          <source>Only one thread may load or unload at a time, and to do either, it must wait until no other threads are running application code. If a thread is waiting to perform a load, it doesn't prevent other threads from loading (in fact, they'll cooperate, and each perform their queued load in turn, before all resuming running together).</source>
          <target state="translated">一次只能有一个线程进行加载或卸载,要想进行任何一个加载,必须等到没有其他线程在运行应用代码。如果一个线程在等待执行加载,并不妨碍其他线程加载(事实上,它们会合作,各自依次执行它们的队列加载,然后再全部恢复一起运行)。</target>
        </trans-unit>
        <trans-unit id="c0ef82ab895b3dc529ae273b0f6382d3b4a29356" translate="yes" xml:space="preserve">
          <source>Only permitted scalars pass the filter. For example, given</source>
          <target state="translated">只有允许的标量才会通过过滤器。例如,给定</target>
        </trans-unit>
        <trans-unit id="b9344c8916cbe73a1ce3670d6a11a8abeb404e3a" translate="yes" xml:space="preserve">
          <source>Only public methods are callable as actions. It is a best practice to lower the visibility of methods (with &lt;code&gt;private&lt;/code&gt; or &lt;code&gt;protected&lt;/code&gt;) which are not intended to be actions, like auxiliary methods or filters.</source>
          <target state="translated">只有公共方法才能作为操作调用。最佳做法是降低不打算用作操作的方法（ &lt;code&gt;private&lt;/code&gt; 方法或 &lt;code&gt;protected&lt;/code&gt; 方法）的可见性，例如辅助方法或过滤器。</target>
        </trans-unit>
        <trans-unit id="d8ab6c3748240960e305c2097c949a0547062fd6" translate="yes" xml:space="preserve">
          <source>Only supplied params will be matched.</source>
          <target state="translated">只有提供的参数才会被匹配。</target>
        </trans-unit>
        <trans-unit id="380e223700816b88abe0b7deb99ebafb3ebebb51" translate="yes" xml:space="preserve">
          <source>Only supported on the &lt;code&gt;MySQL&lt;/code&gt; and PostgreSQL adapter, ignored elsewhere.</source>
          <target state="translated">仅在 &lt;code&gt;MySQL&lt;/code&gt; 和PostgreSQL适配器上受支持，在其他地方被忽略。</target>
        </trans-unit>
        <trans-unit id="41e93b5d895bc12656b7b6de1a04216e25563fc5" translate="yes" xml:space="preserve">
          <source>Only supported on the MySQL and PostgreSQL adapter, ignored elsewhere.</source>
          <target state="translated">只在MySQL和PostgreSQL适配器上支持,其他地方忽略。</target>
        </trans-unit>
        <trans-unit id="7108ad7c547043fec67334a0fc4cd6553fa6d275" translate="yes" xml:space="preserve">
          <source>Only the &lt;code&gt;optgroup&lt;/code&gt; and &lt;code&gt;option&lt;/code&gt; tags are returned, so you still have to wrap the output in an appropriate &lt;code&gt;select&lt;/code&gt; tag.</source>
          <target state="translated">仅返回 &lt;code&gt;optgroup&lt;/code&gt; 和 &lt;code&gt;option&lt;/code&gt; 标记，因此您仍然必须将输出包装在适当的 &lt;code&gt;select&lt;/code&gt; 标记中。</target>
        </trans-unit>
        <trans-unit id="22c30b7d7ef2840e2f43312cf613f3a108641d2a" translate="yes" xml:space="preserve">
          <source>Only the &lt;code&gt;option&lt;/code&gt; tags are returned, you have to wrap this call in a regular HTML &lt;code&gt;select&lt;/code&gt; tag.</source>
          <target state="translated">仅返回 &lt;code&gt;option&lt;/code&gt; 标签，您必须将此调用包装在常规HTML &lt;code&gt;select&lt;/code&gt; 标签中。</target>
        </trans-unit>
        <trans-unit id="36c97789a02eb54c6346a54b044513164e1d31d2" translate="yes" xml:space="preserve">
          <source>Only the directory notation is supported. Specifying the controller with Ruby constant notation (e.g. &lt;code&gt;controller: 'Admin::UserPermissions'&lt;/code&gt;) can lead to routing problems and results in a warning.</source>
          <target state="translated">仅支持目录符号。用Ruby常数表示法指定控制器（例如， &lt;code&gt;controller: 'Admin::UserPermissions'&lt;/code&gt; ）可能会导致路由问题并导致警告。</target>
        </trans-unit>
        <trans-unit id="f293a9b728eca5c422b1c90cc270c6c7c359207c" translate="yes" xml:space="preserve">
          <source>Only the directory notation is supported. Specifying the controller with Ruby constant notation (eg. &lt;code&gt;controller: 'Admin::UserPermissions'&lt;/code&gt;) can lead to routing problems and results in a warning.</source>
          <target state="translated">仅支持目录符号。用Ruby常数表示法指定控制器（例如 &lt;code&gt;controller: 'Admin::UserPermissions'&lt;/code&gt; ）可能会导致路由问题并导致警告。</target>
        </trans-unit>
        <trans-unit id="b5e66c7fa1859400ed2d95ed4cac3113bddf009f" translate="yes" xml:space="preserve">
          <source>Only the latest release series will receive bug fixes. When enough bugs are fixed and its deemed worthy to release a new gem, this is the branch it happens from.</source>
          <target state="translated">只有最新的版本系列才会收到bug修复。当修复了足够多的bug,并且认为值得发布一个新的 gem 时,这个分支就会发生。</target>
        </trans-unit>
        <trans-unit id="7d4ced645bf45d22038b24432f2481e5ff66d1f6" translate="yes" xml:space="preserve">
          <source>Only useful if the &lt;code&gt;:autosave&lt;/code&gt; option on the parent is enabled for this associated model.</source>
          <target state="translated">仅在为此关联模型启用父 &lt;code&gt;:autosave&lt;/code&gt; 上的：autosave选项时才有用。</target>
        </trans-unit>
        <trans-unit id="d3a44af13cbb71470ce7f94311d2355d7c2907d1" translate="yes" xml:space="preserve">
          <source>Opaque based on digest of secret key</source>
          <target state="translated">基于秘钥摘要的不透明。</target>
        </trans-unit>
        <trans-unit id="9dcd96383cc8de5fbb7b0490f160fcf0708a8d1e" translate="yes" xml:space="preserve">
          <source>Open &lt;code&gt;app/views/welcome/index.html.erb&lt;/code&gt; and modify it as follows:</source>
          <target state="translated">打开 &lt;code&gt;app/views/welcome/index.html.erb&lt;/code&gt; 并进行如下修改：</target>
        </trans-unit>
        <trans-unit id="5e5febdcd8c7fe18a9d53035d58afbd18e5a23de" translate="yes" xml:space="preserve">
          <source>Open a new session instance. If a block is given, the new session is yielded to the block before being returned.</source>
          <target state="translated">打开一个新的会话实例。如果给定了一个块,新的会话在被返回之前会被让渡给该块。</target>
        </trans-unit>
        <trans-unit id="3de22d522f2006b25c0bcecd1a2ef1748833ee69" translate="yes" xml:space="preserve">
          <source>Open the &lt;code&gt;app/views/welcome/index.html.erb&lt;/code&gt; file in your text editor. Delete all of the existing code in the file, and replace it with the following single line of code:</source>
          <target state="translated">在文本编辑器中打开 &lt;code&gt;app/views/welcome/index.html.erb&lt;/code&gt; 文件。删除文件中所有现有的代码，并将其替换为以下单行代码：</target>
        </trans-unit>
        <trans-unit id="02e3daa19d6d3cf34179e2e9bbb764f5410786c3" translate="yes" xml:space="preserve">
          <source>Open the file &lt;code&gt;config/routes.rb&lt;/code&gt; in your editor.</source>
          <target state="translated">在编辑器中打开文件 &lt;code&gt;config/routes.rb&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7dca4768f25a21ed4853295312eaa6669f3aa6c5" translate="yes" xml:space="preserve">
          <source>Open up a command line prompt. On macOS open Terminal.app, on Windows choose &quot;Run&quot; from your Start menu and type 'cmd.exe'. Any commands prefaced with a dollar sign &lt;code&gt;$&lt;/code&gt; should be run in the command line. Verify that you have a current version of Ruby installed:</source>
          <target state="translated">打开命令行提示符。在macOS上，打开Terminal.app，在Windows上，从&amp;ldquo;开始&amp;rdquo;菜单中选择&amp;ldquo;运行&amp;rdquo;，然后键入&amp;ldquo; cmd.exe&amp;rdquo;。任何以美元符号 &lt;code&gt;$&lt;/code&gt; 开头的命令都应在命令行中运行。确认您已安装最新版本的Ruby：</target>
        </trans-unit>
        <trans-unit id="86bdc2a13b041c56a678da3c47890ae868206eb0" translate="yes" xml:space="preserve">
          <source>Open up a command line prompt. On macOS open Terminal.app; on Windows choose &quot;Run&quot; from your Start menu and type &lt;code&gt;cmd.exe&lt;/code&gt;. Any commands prefaced with a dollar sign &lt;code&gt;$&lt;/code&gt; should be run in the command line. Verify that you have a current version of Ruby installed:</source>
          <target state="translated">打开命令行提示符。在macOS上打开Terminal.app;在Windows上，从&amp;ldquo;开始&amp;rdquo;菜单中选择&amp;ldquo;运行&amp;rdquo;，然后键入 &lt;code&gt;cmd.exe&lt;/code&gt; 。任何以美元符号 &lt;code&gt;$&lt;/code&gt; 开头的命令都应在命令行中运行。确认您已安装最新版本的Ruby：</target>
        </trans-unit>
        <trans-unit id="14e9f7d79c40866ef09256da578e53ce9fdfbd93" translate="yes" xml:space="preserve">
          <source>OpenSSLCipherError</source>
          <target state="translated">OpenSSLCipherError</target>
        </trans-unit>
        <trans-unit id="1764bd75f367f984cde9cc7a149bc71b74585fdf" translate="yes" xml:space="preserve">
          <source>Opens a new tempfile in &lt;a href=&quot;downloading#method-i-tempdir&quot;&gt;tempdir&lt;/a&gt; and copies blob data into it. Yields the tempfile.</source>
          <target state="translated">在&lt;a href=&quot;downloading#method-i-tempdir&quot;&gt;tempdir中&lt;/a&gt;打开一个新的tempfile 并将blob数据复制到其中。产生临时文件。</target>
        </trans-unit>
        <trans-unit id="3865e51eb9f5969b8c0e66213c28ed627ca736e5" translate="yes" xml:space="preserve">
          <source>Opt in to the new default behavior by setting &lt;code&gt;config.active_storage.replace_on_assign_to_many&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;. The old behavior will be deprecated in Rails 6.1 and removed in a subsequent release.</source>
          <target state="translated">通过将 &lt;code&gt;config.active_storage.replace_on_assign_to_many&lt;/code&gt; 设置为 &lt;code&gt;true&lt;/code&gt; 来启用新的默认行为。旧行为将在Rails 6.1中弃用，并在后续发行版中删除。</target>
        </trans-unit>
        <trans-unit id="778c618117429ef2dedad8c828b71d5371cf6e0f" translate="yes" xml:space="preserve">
          <source>Optimistic Locking</source>
          <target state="translated">乐观的锁定</target>
        </trans-unit>
        <trans-unit id="02b4d21eac77f9a198165f97088f163752a3a876" translate="yes" xml:space="preserve">
          <source>Optimistic locking allows multiple users to access the same record for edits, and assumes a minimum of conflicts with the data. It does this by checking whether another process has made changes to a record since it was opened. An &lt;code&gt;ActiveRecord::StaleObjectError&lt;/code&gt; exception is thrown if that has occurred and the update is ignored.</source>
          <target state="translated">乐观锁定允许多个用户访问同一记录进行编辑，并假定与数据的冲突最少。它通过检查自打开记录以来是否有其他进程对记录进行了更改来执行此操作。一个 &lt;code&gt;ActiveRecord::StaleObjectError&lt;/code&gt; 如果已发生异常被抛出，并且更新被忽略。</target>
        </trans-unit>
        <trans-unit id="440efb9593998e73e042de8d5c13a39973de6702" translate="yes" xml:space="preserve">
          <source>Optimize caching</source>
          <target state="translated">优化缓存</target>
        </trans-unit>
        <trans-unit id="5d109ee234bd237eb8e8affab4902dda9120464f" translate="yes" xml:space="preserve">
          <source>Opting Out</source>
          <target state="translated">选择退出</target>
        </trans-unit>
        <trans-unit id="e31d972229de381b461860014dd710856361917a" translate="yes" xml:space="preserve">
          <source>Option</source>
          <target state="translated">Option</target>
        </trans-unit>
        <trans-unit id="7bd1d4d5e812e0b7f35050f21e80c418d4c57944" translate="yes" xml:space="preserve">
          <source>Option &lt;code&gt;:dependent =&amp;gt; :restrict&lt;/code&gt; has been removed from &lt;code&gt;belongs_to&lt;/code&gt;. If you want to prevent deleting the object if there are any associated objects, you can set &lt;code&gt;:dependent =&amp;gt; :destroy&lt;/code&gt; and return &lt;code&gt;false&lt;/code&gt; after checking for existence of association from any of the associated object's destroy callbacks.</source>
          <target state="translated">选项 &lt;code&gt;:dependent =&amp;gt; :restrict&lt;/code&gt; 已从 &lt;code&gt;belongs_to&lt;/code&gt; 中删除。如果要防止在有任何关联对象的情况下删除该对象，则可以设置 &lt;code&gt;:dependent =&amp;gt; :destroy&lt;/code&gt; 并在从任何关联对象的destroy回调中检查是否存在关联后返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="50371dc72490b25b93552e7d1508d1aaab544e6d" translate="yes" xml:space="preserve">
          <source>Option Groups</source>
          <target state="translated">选项组</target>
        </trans-unit>
        <trans-unit id="e90caa34c648ca28307163b49f20388699c1c8bb" translate="yes" xml:space="preserve">
          <source>Option Tags from a Collection of Arbitrary Objects</source>
          <target state="translated">任意对象集合中的期权标签。</target>
        </trans-unit>
        <trans-unit id="e460ab9059f609299a4f0391c888d23b7f0608d5" translate="yes" xml:space="preserve">
          <source>Option examples:</source>
          <target state="translated">选项示例:</target>
        </trans-unit>
        <trans-unit id="46865efd2e3d2d4f8219e6a941cb11286e86fada" translate="yes" xml:space="preserve">
          <source>Option to encode &lt;code&gt;BigDecimal&lt;/code&gt; objects as numbers instead of strings</source>
          <target state="translated">选择将 &lt;code&gt;BigDecimal&lt;/code&gt; 对象编码为数字而不是字符串</target>
        </trans-unit>
        <trans-unit id="69c339ec350a719390694866ea431c63a56be5b7" translate="yes" xml:space="preserve">
          <source>Optionally provide a Hash of credentials instead of a keyfile path:</source>
          <target state="translated">可选择提供证书的哈希值,而不是密钥文件路径。</target>
        </trans-unit>
        <trans-unit id="f7350253ff699685bca9e1cd76f42967abc3f13e" translate="yes" xml:space="preserve">
          <source>Optionally provide client and upload options:</source>
          <target state="translated">可选择提供客户端和上传选项。</target>
        </trans-unit>
        <trans-unit id="6bf5da9c080bee3a8142586c412aa39971137eee" translate="yes" xml:space="preserve">
          <source>Options</source>
          <target state="translated">Options</target>
        </trans-unit>
        <trans-unit id="e4d76dd552da264fbd8e54798493528d066d02e5" translate="yes" xml:space="preserve">
          <source>Options (conditions)</source>
          <target state="translated">选项(条件)</target>
        </trans-unit>
        <trans-unit id="48c5131188beb296ea713be70b28310e57cba19e" translate="yes" xml:space="preserve">
          <source>Options Extraction</source>
          <target state="translated">选项提取</target>
        </trans-unit>
        <trans-unit id="74f705646e3b59d91301d39cc8bd9297b7ea126a" translate="yes" xml:space="preserve">
          <source>Options applying to all assets</source>
          <target state="translated">适用于所有资产的选择</target>
        </trans-unit>
        <trans-unit id="cad7db2ddf2757e883ec8b8dac1c23428f0a5f28" translate="yes" xml:space="preserve">
          <source>Options are passed to the underlying cache implementation.</source>
          <target state="translated">选项被传递给底层的缓存实现。</target>
        </trans-unit>
        <trans-unit id="3d5cd85068734c29bbb9be8ed9b5362af5558f84" translate="yes" xml:space="preserve">
          <source>Options are passed to the underlying cache implementation. For example:</source>
          <target state="translated">选项被传递给底层缓存实现。例如:</target>
        </trans-unit>
        <trans-unit id="8886b381a94f23a6e9af413e4bc25e8fb76941b3" translate="yes" xml:space="preserve">
          <source>Options are:</source>
          <target state="translated">选项有:</target>
        </trans-unit>
        <trans-unit id="bc30f96776b234df9f8ca32270e650d3093fcef1" translate="yes" xml:space="preserve">
          <source>Options may also be used by concerns defined in a block by accepting a block parameter. So, using a block, you might do something as simple as limit the actions available on certain resources, passing standard resource options through the concern:</source>
          <target state="translated">选项也可以由在块中定义的关注通过接受块参数来使用。因此,使用一个块,你可以做一些简单的事情,比如限制某些资源的可用操作,通过关注传递标准资源选项。</target>
        </trans-unit>
        <trans-unit id="208dc3d066da1d162c0b160a18e93bcc147bb701" translate="yes" xml:space="preserve">
          <source>Options passed to fetch will be merged with the payload when writing to the store</source>
          <target state="translated">传递给fetch的选项将在写入存储空间时与有效载荷合并。</target>
        </trans-unit>
        <trans-unit id="13471d65e3d4b8c4006e33f8b92e1a0c32cbcc49" translate="yes" xml:space="preserve">
          <source>Options passed to fetch will be merged with the payload.</source>
          <target state="translated">传递给fetch的选项将与有效载荷合并。</target>
        </trans-unit>
        <trans-unit id="bdd0b506837a990803d8edf137f2934329835748" translate="yes" xml:space="preserve">
          <source>Options:</source>
          <target state="translated">Options:</target>
        </trans-unit>
        <trans-unit id="ad3fd1b2e2af3b184336a3df7528447495096cac" translate="yes" xml:space="preserve">
          <source>Or a URL:</source>
          <target state="translated">或一个网址。</target>
        </trans-unit>
        <trans-unit id="a3bc0242c5a25d6a0347f3cd2adf504a9a8659e2" translate="yes" xml:space="preserve">
          <source>Or a collection to be used:</source>
          <target state="translated">或者是要用的收藏。</target>
        </trans-unit>
        <trans-unit id="c3e798b02ecc9f5ce86d6a37704149b2bd459266" translate="yes" xml:space="preserve">
          <source>Or consider deleting an author, and ensuring that all of its books get deleted as well:</source>
          <target state="translated">或者考虑删除一个作者,并确保其所有的书也被删除。</target>
        </trans-unit>
        <trans-unit id="bb3a2413eccaa37c9edca7d7508e154b05c37f49" translate="yes" xml:space="preserve">
          <source>Or equivalently, if &lt;code&gt;TenderloveMigration&lt;/code&gt; is defined as in the documentation for Migration:</source>
          <target state="translated">或等效地，如果在迁移文档中定义了 &lt;code&gt;TenderloveMigration&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="83d46f7649085a0fc5bd6642728d7255f64346fb" translate="yes" xml:space="preserve">
          <source>Or even multiple scope parameters. For example, making sure that a teacher can only be on the schedule once per semester for a particular class.</source>
          <target state="translated">甚至多个范围参数。例如,确定一个老师每学期只能上一次某门课的课表。</target>
        </trans-unit>
        <trans-unit id="4775e203194ef68c0ffff0b45e0260781cbe7d36" translate="yes" xml:space="preserve">
          <source>Or even to render a special view:</source>
          <target state="translated">甚至呈现出一种特殊的景象。</target>
        </trans-unit>
        <trans-unit id="fcf071d5d4043c8f993b4afe346faf72c15a6d61" translate="yes" xml:space="preserve">
          <source>Or if the format is json:</source>
          <target state="translated">或者如果格式是json。</target>
        </trans-unit>
        <trans-unit id="28ad3309395a57ea267e47d84de8180ed1521394" translate="yes" xml:space="preserve">
          <source>Or in a view:</source>
          <target state="translated">或在一个观点。</target>
        </trans-unit>
        <trans-unit id="1f13b33e63742fa01f4b9868b2094bcb1f7b7f66" translate="yes" xml:space="preserve">
          <source>Or in the &lt;code&gt;Initializer&lt;/code&gt; section, add &lt;em&gt;any&lt;/em&gt; of the following</source>
          <target state="translated">或在&amp;ldquo; &lt;code&gt;Initializer&lt;/code&gt; 部分中，添加以下&lt;em&gt;任何&lt;/em&gt;一项</target>
        </trans-unit>
        <trans-unit id="b05b4787f0b112e93549bd08dd3c395127fe3054" translate="yes" xml:space="preserve">
          <source>Or on a relation:</source>
          <target state="translated">或在关系上。</target>
        </trans-unit>
        <trans-unit id="dd960357e2da48b048bf1b0f86562d2ec982a889" translate="yes" xml:space="preserve">
          <source>Or on an association consisting of &lt;code&gt;Article&lt;/code&gt; objects:</source>
          <target state="translated">或在由 &lt;code&gt;Article&lt;/code&gt; 对象组成的关联上：</target>
        </trans-unit>
        <trans-unit id="0ab5c4590547794ec7e0f2f7c1e5ea69636d74fa" translate="yes" xml:space="preserve">
          <source>Or on an association consisting of &lt;code&gt;Book&lt;/code&gt; objects:</source>
          <target state="translated">或在由 &lt;code&gt;Book&lt;/code&gt; 对象组成的关联中：</target>
        </trans-unit>
        <trans-unit id="9c76bf3671450a6e5c1752c98d78e3e9357ea980" translate="yes" xml:space="preserve">
          <source>Or ordering by multiple fields:</source>
          <target state="translated">或按多个字段排序。</target>
        </trans-unit>
        <trans-unit id="353ed84771564a4d91061f6b253d2d768af09ea7" translate="yes" xml:space="preserve">
          <source>Or pass &lt;code&gt;instance_accessor: false&lt;/code&gt;, to omit both instance methods.</source>
          <target state="translated">或传递 &lt;code&gt;instance_accessor: false&lt;/code&gt; ，以省略两个实例方法。</target>
        </trans-unit>
        <trans-unit id="38d614a80bf893429ce0e36be6a4449bc948530a" translate="yes" xml:space="preserve">
          <source>Or similarly:</source>
          <target state="translated">或类似。</target>
        </trans-unit>
        <trans-unit id="feb96942494fc6e6e25d0e604bc699226c9dcdc9" translate="yes" xml:space="preserve">
          <source>Or the attacker places the code into the onmouseover event handler of an image:</source>
          <target state="translated">或者攻击者将代码放入图像的onmouseover事件处理程序中。</target>
        </trans-unit>
        <trans-unit id="262059292b81bef2d8cda70b0d63b5f36908f7fe" translate="yes" xml:space="preserve">
          <source>Or to decrypt with a file, that should be version control ignored, relative to &lt;code&gt;Rails.root&lt;/code&gt;:</source>
          <target state="translated">或使用相对于 &lt;code&gt;Rails.root&lt;/code&gt; 的文件解密，该文件应忽略版本控制：</target>
        </trans-unit>
        <trans-unit id="99e051f74960fbfe6c295f8f87ebe121ad9175f6" translate="yes" xml:space="preserve">
          <source>Or we can run a single test file by passing the &lt;code&gt;bin/rails test&lt;/code&gt; command the filename containing the test cases.</source>
          <target state="translated">或者，我们可以通过向 &lt;code&gt;bin/rails test&lt;/code&gt; 命令传递包含测试用例的文件名来运行单个测试文件。</target>
        </trans-unit>
        <trans-unit id="9dbccef96008262323edcfb1744318c09d39a853" translate="yes" xml:space="preserve">
          <source>Or we can run a single test file by passing the &lt;code&gt;rails test&lt;/code&gt; command the filename containing the test cases.</source>
          <target state="translated">或者，我们可以通过将包含测试用例的文件名传递给 &lt;code&gt;rails test&lt;/code&gt; 命令来运行单个测试文件。</target>
        </trans-unit>
        <trans-unit id="f4e4c5e6da356d13d896e512ce82a61a1cb72041" translate="yes" xml:space="preserve">
          <source>Or with a block where self points to the current record to be validated:</source>
          <target state="translated">或者用一个块,自我指向当前要验证的记录。</target>
        </trans-unit>
        <trans-unit id="e55fad0f3a803ecc0ba8d73b4df09ad1bcaf83a4" translate="yes" xml:space="preserve">
          <source>Or you can insert a middleware to exact position by using indexes. For example, if you want to insert &lt;code&gt;Magical::Unicorns&lt;/code&gt; middleware on top of the stack, you can do it, like so:</source>
          <target state="translated">或者，您可以使用索引将中间件插入到正确的位置。例如，如果要在堆栈顶部插入 &lt;code&gt;Magical::Unicorns&lt;/code&gt; 中间件，则可以这样做，如下所示：</target>
        </trans-unit>
        <trans-unit id="86788b76f62cc7d80ba88d052aa89714577b6e5b" translate="yes" xml:space="preserve">
          <source>Or you can remove them.</source>
          <target state="translated">或者你可以删除它们。</target>
        </trans-unit>
        <trans-unit id="0f4aa987b22d11cbdd89561b2a3cf032b29fb407" translate="yes" xml:space="preserve">
          <source>Or you can set an array of locales as fallback, like so:</source>
          <target state="translated">或者你可以设置一个locales数组作为后备,就像这样。</target>
        </trans-unit>
        <trans-unit id="a790a45649781a5473f7e61e6f5b7a3f6f9a4f75" translate="yes" xml:space="preserve">
          <source>Or you can set different fallbacks for locales individually. For example, if you want to use &lt;code&gt;:tr&lt;/code&gt; for &lt;code&gt;:az&lt;/code&gt; and &lt;code&gt;:de&lt;/code&gt;, &lt;code&gt;:en&lt;/code&gt; for &lt;code&gt;:da&lt;/code&gt; as fallbacks, you can do it, like so:</source>
          <target state="translated">或者，您可以分别为区域设置不同的备用。例如，如果您想将 &lt;code&gt;:tr&lt;/code&gt; 用作 &lt;code&gt;:az&lt;/code&gt; 和 &lt;code&gt;:de&lt;/code&gt; ， &lt;code&gt;:en&lt;/code&gt; 用作 &lt;code&gt;:da&lt;/code&gt; 作为后备，则可以这样做，如下所示：</target>
        </trans-unit>
        <trans-unit id="ee000edaf91e9f280fa400956381a99a973a4786" translate="yes" xml:space="preserve">
          <source>Or you can use other HTTP headers to convey other information:</source>
          <target state="translated">或者你也可以使用其他的HTTP头来传递其他信息。</target>
        </trans-unit>
        <trans-unit id="82f92b3302dc3f5a54ed01bf773c005412f4d003" translate="yes" xml:space="preserve">
          <source>Or, &quot;whaaat my tests are failing!!!?&quot; or &quot;my &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; widget is busted!!&quot;</source>
          <target state="translated">或者，&amp;ldquo;我的测试失败了！！？&amp;rdquo; 或&amp;ldquo;我的 &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; 小部件被破坏！&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="c171a1fe27ebc7177e93b906ec6c9ad27b66b172" translate="yes" xml:space="preserve">
          <source>Or, if you aren't using a &lt;code&gt;FormBuilder&lt;/code&gt;, add the data attribute directly:</source>
          <target state="translated">或者，如果您不使用 &lt;code&gt;FormBuilder&lt;/code&gt; ，则直接添加data属性：</target>
        </trans-unit>
        <trans-unit id="2aaf9fe84593f20cc47e6587390b0fadf8b7846e" translate="yes" xml:space="preserve">
          <source>Or, in English: &quot;return a Book object for all books with reviews&quot;. Note that you will see duplicate books if a book has more than one review. If you want unique books, you can use &lt;code&gt;Book.joins(:reviews).distinct&lt;/code&gt;.</source>
          <target state="translated">或者，用英语：&amp;ldquo;为所有带有评论的书返回一个Book对象&amp;rdquo;。请注意，如果一本书有多个评论，您将看到重复的书。如果需要独特的书籍，可以使用 &lt;code&gt;Book.joins(:reviews).distinct&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="476fef55382549404628dd1d71367f3e6a2b7ced" translate="yes" xml:space="preserve">
          <source>Or, in English: &quot;return a Category object for all categories with articles&quot;. Note that you will see duplicate categories if more than one article has the same category. If you want unique categories, you can use &lt;code&gt;Category.joins(:articles).distinct&lt;/code&gt;.</source>
          <target state="translated">或者，用英语：&amp;ldquo;为带有文章的所有类别返回一个类别对象&amp;rdquo;。请注意，如果多个文章具有相同的类别，您将看到重复的类别。如果需要唯一的类别，可以使用 &lt;code&gt;Category.joins(:articles).distinct&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c9608eda96f81a2096cfa4b308ac3d2afb82fef9" translate="yes" xml:space="preserve">
          <source>Or, in English: &quot;return all articles that have a category and at least one comment&quot;. Note again that articles with multiple comments will show up multiple times.</source>
          <target state="translated">或者,用英语说:&quot;return all articles that have category and least one comment&quot;。&quot;返回所有有类别和至少一条评论的文章&quot;。再次注意,有多条评论的文章将多次显示。</target>
        </trans-unit>
        <trans-unit id="6846db36a33012faef67bdc5fc41c96e2233a4b3" translate="yes" xml:space="preserve">
          <source>Or, in English: &quot;return all articles that have a comment made by a guest.&quot;</source>
          <target state="translated">或者,在英语中,&quot;return all articles that have been comment made by guest.&quot;返回所有有客人评论的文章&quot;</target>
        </trans-unit>
        <trans-unit id="9be092c6e092fa1f27e558ecd28eb6c1f6a549ac" translate="yes" xml:space="preserve">
          <source>Or, in English: &quot;return all authors that have books with reviews &lt;em&gt;and&lt;/em&gt; have been ordered by a customer, and the suppliers for those books.&quot;</source>
          <target state="translated">或者，用英语：&amp;ldquo;退回所有带有带有评论&lt;em&gt;并&lt;/em&gt;已被客户订购的书的作者，以及这些书的供应商。&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="a62eedb27d5a1899f69128a8be44388186d68970" translate="yes" xml:space="preserve">
          <source>Or, in English: &quot;return all books that have a review by a customer.&quot;</source>
          <target state="translated">或者,在英语中,&quot;return all books that have review by customer.&quot;退回所有有顾客评论的书&quot;</target>
        </trans-unit>
        <trans-unit id="4b560452812f904f8fe11986dffdc9f0661574f5" translate="yes" xml:space="preserve">
          <source>Or, in English: &quot;return all books with their author that have at least one review&quot;. Note again that books with multiple reviews will show up multiple times.</source>
          <target state="translated">或者,在英语中,&quot;return all books with their author that have least one review&quot;。&quot;退回所有有至少一个评论的作者的书&quot;。再次注意,有多条评论的书会多次出现。</target>
        </trans-unit>
        <trans-unit id="ea5f7ab50058274eb7f14d4b850aaad262badbd2" translate="yes" xml:space="preserve">
          <source>Or, in English: &quot;return all categories that have articles, where those articles have a comment made by a guest, and where those articles also have a tag.&quot;</source>
          <target state="translated">或者,用英语说,&quot;return all categories that have articles,where those articles have comment made by guest,and where those articles also have tag.&quot;返回所有有文章的分类,这些文章有客人的评论,这些文章也有标签。&quot;</target>
        </trans-unit>
        <trans-unit id="9c9be6657aea6e25a56e81a0b77ef30c9fd852c7" translate="yes" xml:space="preserve">
          <source>Or, using a callable object, you might implement something more specific to your application, which would be out of place in your routes file.</source>
          <target state="translated">或者,使用一个可调用的对象,你可能会实现一些更具体的应用,这在你的路由文件中是不合适的。</target>
        </trans-unit>
        <trans-unit id="9b2b0e8fe92771485e96ea339005a73e1f1d256f" translate="yes" xml:space="preserve">
          <source>Oracle: &lt;code&gt;:precision&lt;/code&gt; [1..38], &lt;code&gt;:scale&lt;/code&gt; [-84..127]. Default is (38,0).</source>
          <target state="translated">Oracle：： &lt;code&gt;:precision&lt;/code&gt; [1..38] 、 &lt;code&gt;:scale&lt;/code&gt; [-84..127]。默认值为（38,0）。</target>
        </trans-unit>
        <trans-unit id="3651320b8674613f1874c7fdd0151b4d0caedaba" translate="yes" xml:space="preserve">
          <source>OrderedHash</source>
          <target state="translated">OrderedHash</target>
        </trans-unit>
        <trans-unit id="8011702c2353e126a49a6909828570d332ce0c1b" translate="yes" xml:space="preserve">
          <source>OrderedHash#encode_with</source>
          <target state="translated">OrderedHash#encode_with</target>
        </trans-unit>
        <trans-unit id="00187da59bc0549040ca22c6603641dd7b7c952c" translate="yes" xml:space="preserve">
          <source>OrderedHash#extractable_options?</source>
          <target state="translated">OrderedHash#extractable_options?</target>
        </trans-unit>
        <trans-unit id="6459274eb159c4da482aed019c1a1b2df265595f" translate="yes" xml:space="preserve">
          <source>OrderedHash#nested_under_indifferent_access</source>
          <target state="translated">OrderedHash#nested_under_indifferent_access</target>
        </trans-unit>
        <trans-unit id="454162ee6ad7c6804ac28d9ea0b805e972c8f02b" translate="yes" xml:space="preserve">
          <source>OrderedHash#reject</source>
          <target state="translated">OrderedHash#reject</target>
        </trans-unit>
        <trans-unit id="239ff10b89ec8d7a91930001365d2af62f0e790d" translate="yes" xml:space="preserve">
          <source>OrderedHash#select</source>
          <target state="translated">OrderedHash#select</target>
        </trans-unit>
        <trans-unit id="f842169a6bbeb6d81c0c2659957a8ebd9b2f8d29" translate="yes" xml:space="preserve">
          <source>OrderedHash#to_yaml_type</source>
          <target state="translated">OrderedHash#to_yaml_type</target>
        </trans-unit>
        <trans-unit id="7ac247c4a7d84979677baf43b00743777812d609" translate="yes" xml:space="preserve">
          <source>OrderedOptions</source>
          <target state="translated">OrderedOptions</target>
        </trans-unit>
        <trans-unit id="6a56f6d0f3acca66eed843d6d3ec368da741c8ba" translate="yes" xml:space="preserve">
          <source>OrderedOptions#[]</source>
          <target state="translated">OrderedOptions#[]</target>
        </trans-unit>
        <trans-unit id="8295c4a54919052ef905cb9a1e90615db5da4f1d" translate="yes" xml:space="preserve">
          <source>OrderedOptions#[]=</source>
          <target state="translated">OrderedOptions#[]=</target>
        </trans-unit>
        <trans-unit id="4dfb747ca0c1f786f335009acb94d658467406ef" translate="yes" xml:space="preserve">
          <source>OrderedOptions#method_missing</source>
          <target state="translated">OrderedOptions#method_missing</target>
        </trans-unit>
        <trans-unit id="9e0731663e518cae644526e87a0f07ce6e06da60" translate="yes" xml:space="preserve">
          <source>OrderedOptions#respond_to_missing?</source>
          <target state="translated">OrderedOptions#respond_to_missing?</target>
        </trans-unit>
        <trans-unit id="d3ed86c1334d74f0ae883f47feef902d83b9d8c6" translate="yes" xml:space="preserve">
          <source>Ordering</source>
          <target state="translated">Ordering</target>
        </trans-unit>
        <trans-unit id="fab2cdcb0be97dcee2dba5e417fb9055f1882f2e" translate="yes" xml:space="preserve">
          <source>Ordering callbacks</source>
          <target state="translated">订购回调</target>
        </trans-unit>
        <trans-unit id="c3e0fa2a51ddf9d54aad39d4773739860c37c59c" translate="yes" xml:space="preserve">
          <source>Ordering of test cases</source>
          <target state="translated">测试用例的顺序</target>
        </trans-unit>
        <trans-unit id="b1c96a0c3f44b5348309abe5683ccb9be1ee4720" translate="yes" xml:space="preserve">
          <source>Ordinal returns the suffix used to denote the position in an ordered sequence such as 1st, 2nd, 3rd, 4th.</source>
          <target state="translated">Ordinal 返回用于表示有序序列中的位置的后缀,如第1、第2、第3、第4。</target>
        </trans-unit>
        <trans-unit id="234ebf34ca83ec1a7ef1b9c727705d802ebcb2ad" translate="yes" xml:space="preserve">
          <source>Ordinalize turns a number into an ordinal string used to denote the position in an ordered sequence such as 1st, 2nd, 3rd, 4th.</source>
          <target state="translated">Ordinalize将一个数字变成一个序数字符串,用来表示一个有序序列中的位置,如1、2、3、4。</target>
        </trans-unit>
        <trans-unit id="8236fc5a62a8a4a8a0f05fa3a4f168d16b4015ef" translate="yes" xml:space="preserve">
          <source>Organization of Locale Files</source>
          <target state="translated">本地文件的组织</target>
        </trans-unit>
        <trans-unit id="d18e01afbf0e5b1eeb3efa3d549e66dfa5015f34" translate="yes" xml:space="preserve">
          <source>Other &lt;a href=&quot;helpers&quot;&gt;&lt;code&gt;Helpers&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">其他&lt;a href=&quot;helpers&quot;&gt; &lt;code&gt;Helpers&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e4e880b1de182f244bb77847d912e987df78ccc8" translate="yes" xml:space="preserve">
          <source>Other &lt;a href=&quot;helpers&quot;&gt;Helpers&lt;/a&gt;</source>
          <target state="translated">其他&lt;a href=&quot;helpers&quot;&gt;帮手&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="eebb2f9cdc2951c739e98100dec8f3363c3a726b" translate="yes" xml:space="preserve">
          <source>Other Components</source>
          <target state="translated">其他组件</target>
        </trans-unit>
        <trans-unit id="fae03cc5ec3db05ad91a565c0f5d8f4fd2384cdc" translate="yes" xml:space="preserve">
          <source>Other Configurations</source>
          <target state="translated">其他配置</target>
        </trans-unit>
        <trans-unit id="625a1d396eaa80f4cad2a3b6a932959b98568e22" translate="yes" xml:space="preserve">
          <source>Other Gem Dependencies</source>
          <target state="translated">其他宝石依赖性</target>
        </trans-unit>
        <trans-unit id="f54c0ef7fb66478fc86f1826784d079a09bd05d7" translate="yes" xml:space="preserve">
          <source>Other Helpers of Interest</source>
          <target state="translated">其他感兴趣的帮助者</target>
        </trans-unit>
        <trans-unit id="7ae765936f631daf3aee7c8cda3fdea24003782b" translate="yes" xml:space="preserve">
          <source>Other Middleware</source>
          <target state="translated">其他中间件</target>
        </trans-unit>
        <trans-unit id="e9a64990a17e005b82e9a7862ca72e618bda5a31" translate="yes" xml:space="preserve">
          <source>Other Resources</source>
          <target state="translated">其他资源</target>
        </trans-unit>
        <trans-unit id="9886dff852162d7b391293133a1dfac4eb182bc5" translate="yes" xml:space="preserve">
          <source>Other Security Considerations</source>
          <target state="translated">其他安全考虑因素</target>
        </trans-unit>
        <trans-unit id="97b234d8e57efd5e0d141a802475bd8db710c26d" translate="yes" xml:space="preserve">
          <source>Other Ways to Use Filters</source>
          <target state="translated">使用过滤器的其他方法</target>
        </trans-unit>
        <trans-unit id="0d5f4f72132946c433741e5405bc096c29b477e1" translate="yes" xml:space="preserve">
          <source>Other authentication methods are available for Rails applications. Two popular authentication add-ons for Rails are the &lt;a href=&quot;https://github.com/plataformatec/devise&quot;&gt;Devise&lt;/a&gt; rails engine and the &lt;a href=&quot;https://github.com/binarylogic/authlogic&quot;&gt;Authlogic&lt;/a&gt; gem, along with a number of others.</source>
          <target state="translated">其他身份验证方法可用于Rails应用程序。两个流行的Rails身份验证附加组件是&lt;a href=&quot;https://github.com/plataformatec/devise&quot;&gt;Devise&lt;/a&gt; rails引擎和&lt;a href=&quot;https://github.com/binarylogic/authlogic&quot;&gt;Authlogic&lt;/a&gt; gem，以及其他一些附加组件。</target>
        </trans-unit>
        <trans-unit id="4f7a2a9b3af338ac1accecdfa4a69534e1ad2e17" translate="yes" xml:space="preserve">
          <source>Other blocking operations performed inside the Executor block (which includes all application code), however, can needlessly retain the &lt;code&gt;running&lt;/code&gt; lock. If another thread encounters a constant it must autoload, this can cause a deadlock.</source>
          <target state="translated">但是，在Executor块内执行的其他阻止操作（包括所有应用程序代码）可以不必要地保留 &lt;code&gt;running&lt;/code&gt; 锁。如果另一个线程遇到常量，则必须自动加载，这可能导致死锁。</target>
        </trans-unit>
        <trans-unit id="830c52bd0dcd294842be90215c1c713085511837" translate="yes" xml:space="preserve">
          <source>Other engines, such as Devise, handle this a little differently by making you specify custom helpers (such as &lt;code&gt;devise_for&lt;/code&gt;) in the routes. These helpers do exactly the same thing, mounting pieces of the engines's functionality at a pre-defined path which may be customizable.</source>
          <target state="translated">通过使您在路由中指定自定义帮助程序（例如 &lt;code&gt;devise_for&lt;/code&gt; ），其他引擎（例如Devise）会对此处理有所不同。这些助手所做的事情完全相同，将引擎功能部分安装在可以自定义的预定路径上。</target>
        </trans-unit>
        <trans-unit id="1e7d830fa844d239fe825fcb4fdd3552dbd8bbb9" translate="yes" xml:space="preserve">
          <source>Other form controls worth mentioning are text areas, hidden fields, password fields, number fields, date and time fields, and many more:</source>
          <target state="translated">其他值得一提的表单控件还有文本区域、隐藏字段、密码字段、数字字段、日期和时间字段等等。</target>
        </trans-unit>
        <trans-unit id="8acffdfa21f8bb476a3cdcd269b91fe48dbb8dfd" translate="yes" xml:space="preserve">
          <source>Other form controls worth mentioning are textareas, password fields, hidden fields, search fields, telephone fields, date fields, time fields, color fields, datetime-local fields, month fields, week fields, URL fields, email fields, number fields, and range fields:</source>
          <target state="translated">其他值得一提的表单控件还有textareas、密码字段、隐藏字段、搜索字段、电话字段、日期字段、时间字段、颜色字段、日期时间-本地字段、月份字段、星期字段、URL字段、电子邮件字段、数字字段和范围字段。</target>
        </trans-unit>
        <trans-unit id="d6b50fdb143f86261971aa63def42c427f9c9d35" translate="yes" xml:space="preserve">
          <source>Other helpers use the &lt;code&gt;_tag&lt;/code&gt; suffix to indicate whether a helper is a barebones helper or one that operates on model objects. With dates and times, &lt;code&gt;select_date&lt;/code&gt;, &lt;code&gt;select_time&lt;/code&gt; and &lt;code&gt;select_datetime&lt;/code&gt; are the barebones helpers, &lt;code&gt;date_select&lt;/code&gt;, &lt;code&gt;time_select&lt;/code&gt; and &lt;code&gt;datetime_select&lt;/code&gt; are the equivalent model object helpers.</source>
          <target state="translated">其他助手使用 &lt;code&gt;_tag&lt;/code&gt; 后缀指示助手是准系统助手还是对模型对象进行操作的助手。对于日期和时间， &lt;code&gt;select_date&lt;/code&gt; ， &lt;code&gt;select_time&lt;/code&gt; 和 &lt;code&gt;select_datetime&lt;/code&gt; 是准系统助手， &lt;code&gt;date_select&lt;/code&gt; ， &lt;code&gt;time_select&lt;/code&gt; 和 &lt;code&gt;datetime_select&lt;/code&gt; 是等效的模型对象助手。</target>
        </trans-unit>
        <trans-unit id="f2cab26bf4d959d62d893f5250b7f6098ab6bd08" translate="yes" xml:space="preserve">
          <source>Other names simply map to a parameter as in the case of &lt;code&gt;:id&lt;/code&gt;.</source>
          <target state="translated">其他名称就像 &lt;code&gt;:id&lt;/code&gt; 一样简单地映射到参数。</target>
        </trans-unit>
        <trans-unit id="f15c76b7bfea78e807b8afdf64ed8d6b9ef0d4c1" translate="yes" xml:space="preserve">
          <source>Other namespaces can be added to the root element:</source>
          <target state="translated">其他命名空间可以添加到根元素中。</target>
        </trans-unit>
        <trans-unit id="9561c9165412cff7550a46ff709053bba06eb3b4" translate="yes" xml:space="preserve">
          <source>Other options will be handled by the specific cache store implementation. Internally, &lt;a href=&quot;store#method-i-fetch&quot;&gt;&lt;code&gt;fetch&lt;/code&gt;&lt;/a&gt; calls read_entry, and calls write_entry on a cache miss. &lt;code&gt;options&lt;/code&gt; will be passed to the &lt;a href=&quot;store#method-i-read&quot;&gt;&lt;code&gt;read&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;store#method-i-write&quot;&gt;&lt;code&gt;write&lt;/code&gt;&lt;/a&gt; calls.</source>
          <target state="translated">其他选项将由特定的缓存存储区实现处理。在内部，&lt;a href=&quot;store#method-i-fetch&quot;&gt; &lt;code&gt;fetch&lt;/code&gt; &lt;/a&gt;调用read_entry，并在高速缓存未命中时调用write_entry。 &lt;code&gt;options&lt;/code&gt; 将被传递给&lt;a href=&quot;store#method-i-read&quot;&gt; &lt;code&gt;read&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;store#method-i-write&quot;&gt; &lt;code&gt;write&lt;/code&gt; &lt;/a&gt;调用。</target>
        </trans-unit>
        <trans-unit id="9bac31dd685f18ba9e6e1193d5c12c6e7fadab12" translate="yes" xml:space="preserve">
          <source>Other options will be handled by the specific cache store implementation. Internally, &lt;a href=&quot;store#method-i-fetch&quot;&gt;fetch&lt;/a&gt; calls read_entry, and calls write_entry on a cache miss. &lt;code&gt;options&lt;/code&gt; will be passed to the &lt;a href=&quot;store#method-i-read&quot;&gt;read&lt;/a&gt; and &lt;a href=&quot;store#method-i-write&quot;&gt;write&lt;/a&gt; calls.</source>
          <target state="translated">其他选项将由特定的缓存存储实现实现。在内部，&lt;a href=&quot;store#method-i-fetch&quot;&gt;fetch&lt;/a&gt;调用read_entry，并在高速缓存未命中时调用write_entry。 &lt;code&gt;options&lt;/code&gt; 将被传递给&lt;a href=&quot;store#method-i-read&quot;&gt;读取&lt;/a&gt;和&lt;a href=&quot;store#method-i-write&quot;&gt;写入&lt;/a&gt;调用。</target>
        </trans-unit>
        <trans-unit id="599ffbd6e95e9102a19874cfc765e0666e6a5f25" translate="yes" xml:space="preserve">
          <source>Other options:</source>
          <target state="translated">其他选择:</target>
        </trans-unit>
        <trans-unit id="5b3332c9f3937213720f845d4ac9ee1edb90cf9d" translate="yes" xml:space="preserve">
          <source>Other plugins may add additional modules. You can get a list of all modules included into &lt;code&gt;ActionController::API&lt;/code&gt; in the rails console:</source>
          <target state="translated">其他插件可能会添加其他模块。您可以在rails控制台中获取 &lt;code&gt;ActionController::API&lt;/code&gt; 中包含的所有模块的列表：</target>
        </trans-unit>
        <trans-unit id="a36e24362db8d00a039fa3e864e49bf3c4a454d4" translate="yes" xml:space="preserve">
          <source>Other plugins, including Active Record, may add additional middleware. In general, these middleware are agnostic to the type of application you are building, and make sense in an API-only Rails application.</source>
          <target state="translated">其他插件(包括 Active Record)可能会添加额外的中间件。一般来说,这些中间件与您正在构建的应用程序类型无关,并且在仅有 API 的 Rails 应用程序中是有意义的。</target>
        </trans-unit>
        <trans-unit id="aedf6a5786c078a2cfdc5f48960cfa1333f86471" translate="yes" xml:space="preserve">
          <source>Other popular testing approaches and plugins.</source>
          <target state="translated">其他流行的测试方法和插件。</target>
        </trans-unit>
        <trans-unit id="a47f5a683ca5a39d9b1514343c124845320bb602" translate="yes" xml:space="preserve">
          <source>Others remove columns when they migrate up instead of down:</source>
          <target state="translated">还有一些人在向上迁移而不是向下迁移的时候,会删除列。</target>
        </trans-unit>
        <trans-unit id="37ac804a990007dc6304805bea8e1b38b1a18234" translate="yes" xml:space="preserve">
          <source>Otherwise accepts the same options as text_field_tag.</source>
          <target state="translated">否则接受与text_field_tag相同的选项。</target>
        </trans-unit>
        <trans-unit id="85f9f1958a60e4e904e41cbb2365f4dbd85d71ac" translate="yes" xml:space="preserve">
          <source>Otherwise raises &lt;code&gt;ActionController::ParameterMissing&lt;/code&gt;:</source>
          <target state="translated">否则引发 &lt;code&gt;ActionController::ParameterMissing&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="ffdd72cc23a2041167e980413c8165ef15604bd4" translate="yes" xml:space="preserve">
          <source>Otherwise the root element is &amp;ldquo;objects&amp;rdquo;:</source>
          <target state="translated">否则，根元素是&amp;ldquo;对象&amp;rdquo;：</target>
        </trans-unit>
        <trans-unit id="d5cd5b915cbdb8da5ee2ba3178987d2c61bb672d" translate="yes" xml:space="preserve">
          <source>Otherwise you'll get this error:</source>
          <target state="translated">否则你会得到这个错误。</target>
        </trans-unit>
        <trans-unit id="54580cb3434b8b0cdd18cab31cb152aae8e86621" translate="yes" xml:space="preserve">
          <source>Otherwise, a node with &lt;code&gt;key&lt;/code&gt; as tag is created with a string representation of &lt;code&gt;value&lt;/code&gt; as text node. If &lt;code&gt;value&lt;/code&gt; is &lt;code&gt;nil&lt;/code&gt; an attribute &quot;nil&quot; set to &quot;true&quot; is added. Unless the option &lt;code&gt;:skip_types&lt;/code&gt; exists and is true, an attribute &quot;type&quot; is added as well according to the following mapping:</source>
          <target state="translated">否则，将创建一个 &lt;code&gt;key&lt;/code&gt; 为标记的节点，其 &lt;code&gt;value&lt;/code&gt; 的字符串表示形式为文本节点。如果 &lt;code&gt;value&lt;/code&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则添加设置为&amp;ldquo; true&amp;rdquo;的属性&amp;ldquo; nil&amp;rdquo;。除非存在 &lt;code&gt;:skip_types&lt;/code&gt; 选项且该选项为true，否则还将根据以下映射添加属性&amp;ldquo; type&amp;rdquo;：</target>
        </trans-unit>
        <trans-unit id="b654bd32ac21eaac826fe8d3e81294668380e3d9" translate="yes" xml:space="preserve">
          <source>Otherwise, a node with &lt;code&gt;key&lt;/code&gt; as tag is created with a string representation of &lt;code&gt;value&lt;/code&gt; as text node. If &lt;code&gt;value&lt;/code&gt; is &lt;code&gt;nil&lt;/code&gt; an attribute &amp;ldquo;nil&amp;rdquo; set to &amp;ldquo;true&amp;rdquo; is added. Unless the option &lt;code&gt;:skip_types&lt;/code&gt; exists and is true, an attribute &amp;ldquo;type&amp;rdquo; is added as well according to the following mapping:</source>
          <target state="translated">否则，将创建一个 &lt;code&gt;key&lt;/code&gt; 为标记的节点，其 &lt;code&gt;value&lt;/code&gt; 的字符串表示形式为文本节点。如果 &lt;code&gt;value&lt;/code&gt; 为 &lt;code&gt;nil&lt;/code&gt; ，则添加属性&amp;ldquo; nil&amp;rdquo;设置为&amp;ldquo; true&amp;rdquo;。除非存在 &lt;code&gt;:skip_types&lt;/code&gt; 选项且该选项为true，否则还将根据以下映射添加属性&amp;ldquo; type&amp;rdquo;：</target>
        </trans-unit>
        <trans-unit id="6083cf987607089d6d26e0ce040a8e773f89b71c" translate="yes" xml:space="preserve">
          <source>Otherwise, a partial is rendered using the second parameter as the locals hash.</source>
          <target state="translated">否则,将使用第二个参数作为locals哈希来渲染一个局部。</target>
        </trans-unit>
        <trans-unit id="4ff985b48294c27e9963776306b1e5656a018dd5" translate="yes" xml:space="preserve">
          <source>Otherwise, an array with the argument as its single element is returned.</source>
          <target state="translated">否则,将返回一个以参数为单元素的数组。</target>
        </trans-unit>
        <trans-unit id="0a46a92c0871a1f545a82e3e2650b051d10a817f" translate="yes" xml:space="preserve">
          <source>Otherwise, if the argument responds to &lt;code&gt;to_ary&lt;/code&gt; it is invoked, and if the value of &lt;code&gt;to_ary&lt;/code&gt; is not &lt;code&gt;nil&lt;/code&gt;, it is returned.</source>
          <target state="translated">否则，如果参数响应 &lt;code&gt;to_ary&lt;/code&gt; ,它将被调用；如果 &lt;code&gt;to_ary&lt;/code&gt; 的值不为 &lt;code&gt;nil&lt;/code&gt; ，则将其返回。</target>
        </trans-unit>
        <trans-unit id="72b84b854ca5bed9f78d1e328de5b12c40f1d7d3" translate="yes" xml:space="preserve">
          <source>Otherwise, if the argument responds to &lt;code&gt;to_ary&lt;/code&gt; it is invoked, and its result returned.</source>
          <target state="translated">否则，如果参数响应 &lt;code&gt;to_ary&lt;/code&gt; ,它将被调用并返回其结果。</target>
        </trans-unit>
        <trans-unit id="414d32a57c350caae7ff14388456d7ee72359586" translate="yes" xml:space="preserve">
          <source>Otherwise, in every request Rails walks the application tree to check if anything has changed.</source>
          <target state="translated">否则,在每个请求中,Rails都会走遍应用树,检查是否有任何变化。</target>
        </trans-unit>
        <trans-unit id="8f36700a4ed306bdca5493ebd8253ef6986e00cf" translate="yes" xml:space="preserve">
          <source>Otherwise, returns an array with the argument as its single element.</source>
          <target state="translated">否则,返回一个以参数为单元素的数组。</target>
        </trans-unit>
        <trans-unit id="3485420d5e1b49bbbeba6112829799e07b174463" translate="yes" xml:space="preserve">
          <source>Otherwise, the method re-raises the first exception found:</source>
          <target state="translated">否则,该方法会重新引发第一个发现的异常。</target>
        </trans-unit>
        <trans-unit id="79c9b95f925ab45cf4a279e41a46a5994bcadf92" translate="yes" xml:space="preserve">
          <source>Otherwise, the value received as argument, which defaults to &lt;code&gt;nil&lt;/code&gt;, is the separator:</source>
          <target state="translated">否则，作为参数接收的值（默认为 &lt;code&gt;nil&lt;/code&gt; ）是分隔符：</target>
        </trans-unit>
        <trans-unit id="16fc7af248b36a9a8b5a66debb1f5e507999577d" translate="yes" xml:space="preserve">
          <source>Our &lt;code&gt;edit&lt;/code&gt; form will look the same as our &lt;code&gt;new&lt;/code&gt; form. Even the code will be the same, thanks to the Rails form builder and resourceful routing. The form builder automatically configures the form to make the appropriate kind of request, based on whether the model object has been previously saved.</source>
          <target state="translated">我们的 &lt;code&gt;edit&lt;/code&gt; 表单将与我们的 &lt;code&gt;new&lt;/code&gt; 表单相同。得益于Rails表单构建器和资源丰富的路由，即使代码也一样。表单构建器会根据是否先前保存了模型对象，自动将表单配置为发出适当类型的请求。</target>
        </trans-unit>
        <trans-unit id="64d5bd4dc7bbb64daeee7999f816b10fc1419a87" translate="yes" xml:space="preserve">
          <source>Our &lt;code&gt;edit&lt;/code&gt; page looks very similar to the &lt;code&gt;new&lt;/code&gt; page; in fact, they both share the same code for displaying the form. Let's remove this duplication by using a view partial. By convention, partial files are prefixed with an underscore.</source>
          <target state="translated">我们的 &lt;code&gt;edit&lt;/code&gt; 页面看起来与 &lt;code&gt;new&lt;/code&gt; 页面非常相似。实际上，它们共享用于显示表单的相同代码。让我们通过使用局部视图来删除此重复项。按照约定，部分文件带有下划线前缀。</target>
        </trans-unit>
        <trans-unit id="2e2ce9b9e13fd8245af3e94ec150aa030c6a70af" translate="yes" xml:space="preserve">
          <source>Our Rails application receives this request.</source>
          <target state="translated">我们的Rails应用收到这个请求。</target>
        </trans-unit>
        <trans-unit id="82eeec9fd8f73f99fcc6143ff8b19533c75db304" translate="yes" xml:space="preserve">
          <source>Our Rubyist instinct quickly sees some redundancy in there: If classes were defined in files matching their name, couldn't their loading be automated somehow? We could save scanning the file for dependencies, which is brittle.</source>
          <target state="translated">我们的Rubyist本能很快就发现了其中的一些冗余。如果类被定义在与它们的名字相匹配的文件中,就不能以某种方式自动加载它们吗?我们可以省去扫描文件中的依赖关系,而这是很脆弱的。</target>
        </trans-unit>
        <trans-unit id="c6e45b9cc1b4d086cee8e2c7013c2bc9acac8f0d" translate="yes" xml:space="preserve">
          <source>Our new generator is quite simple: it inherits from &lt;code&gt;Rails::Generators::Base&lt;/code&gt; and has one method definition. When a generator is invoked, each public method in the generator is executed sequentially in the order that it is defined. Finally, we invoke the &lt;code&gt;create_file&lt;/code&gt; method that will create a file at the given destination with the given content. If you are familiar with the Rails Application Templates API, you'll feel right at home with the new generators API.</source>
          <target state="translated">我们的新生成器非常简单：它继承自 &lt;code&gt;Rails::Generators::Base&lt;/code&gt; 并具有一个方法定义。调用生成器时，生成器中的每个公共方法都按照定义的顺序依次执行。最后，我们调用 &lt;code&gt;create_file&lt;/code&gt; 方法，该方法将在给定的目的地使用给定的内容创建一个文件。如果您熟悉Rails应用程序模板API，那么使用新的Generators API会让您感到宾至如归。</target>
        </trans-unit>
        <trans-unit id="b1bd646f38a3eef656ac0e0c5c2bb44de5157d99" translate="yes" xml:space="preserve">
          <source>Our test should now look something as what follows. Disregard the other tests for now, we're leaving them out for brevity.</source>
          <target state="translated">我们的测试现在应该是如下的样子。暂时不考虑其他测试,为了简洁起见,我们就不说了。</target>
        </trans-unit>
        <trans-unit id="95461b950981122aa65ad0a7032ed4e287b96375" translate="yes" xml:space="preserve">
          <source>Out of the box, only &lt;code&gt;:json&lt;/code&gt; is supported. But for any custom MIME types you've registered, you can add your own encoders with:</source>
          <target state="translated">开箱即用，仅支持 &lt;code&gt;:json&lt;/code&gt; 。但是对于您已注册的任何自定义MIME类型，您可以使用以下方法添加自己的编码器：</target>
        </trans-unit>
        <trans-unit id="d9cc29509d84069896dfef67f7c4cab5f0313961" translate="yes" xml:space="preserve">
          <source>Output Safety</source>
          <target state="translated">输出安全</target>
        </trans-unit>
        <trans-unit id="e6e28eb9764c2a5229fdbe174f04f0ae264c0938" translate="yes" xml:space="preserve">
          <source>Output the contents of a file in the template's &lt;code&gt;source_path&lt;/code&gt;, usually a README.</source>
          <target state="translated">在模板的 &lt;code&gt;source_path&lt;/code&gt; 中输出文件的内容，通常是自述文件。</target>
        </trans-unit>
        <trans-unit id="f3c8c95c5e534bcd2ea0034a0d83177efa6923f4" translate="yes" xml:space="preserve">
          <source>Output:</source>
          <target state="translated">Output:</target>
        </trans-unit>
        <trans-unit id="db12a660e44a55964f23231b7a5be02a5431ac7b" translate="yes" xml:space="preserve">
          <source>Outputs a deprecation warning to the output configured by &lt;code&gt;ActiveSupport::Deprecation.behavior&lt;/code&gt;.</source>
          <target state="translated">将弃用警告输出到 &lt;code&gt;ActiveSupport::Deprecation.behavior&lt;/code&gt; 配置的输出。</target>
        </trans-unit>
        <trans-unit id="5073681bae3f53719b2d119a4e559576cfc4e4cc" translate="yes" xml:space="preserve">
          <source>Outputs a select box like:</source>
          <target state="translated">输出一个选择框,如。</target>
        </trans-unit>
        <trans-unit id="a799df6908de749cf99e44f989a579ffc9e4173f" translate="yes" xml:space="preserve">
          <source>Outputs select boxes like:</source>
          <target state="translated">输出选择框如。</target>
        </trans-unit>
        <trans-unit id="bd45310d7cdd6bf8d77dab304bf862ac96670313" translate="yes" xml:space="preserve">
          <source>Outputs text along with how long it took to run its block. If the block returns an integer it assumes it is the number of rows affected.</source>
          <target state="translated">输出文本以及运行其块的时间。如果该代码块返回一个整数,则假定它是受影响的行数。</target>
        </trans-unit>
        <trans-unit id="6ee76fa98a639a0ac269010b7032639b0a171647" translate="yes" xml:space="preserve">
          <source>Outputs:</source>
          <target state="translated">Outputs:</target>
        </trans-unit>
        <trans-unit id="2cad32653578534c0fce4b84f3d17dfe365988ae" translate="yes" xml:space="preserve">
          <source>Outside of a Rails application, manipulate &lt;code&gt;ActiveStorage.analyzers&lt;/code&gt; instead.</source>
          <target state="translated">在Rails应用程序之外，请改用 &lt;code&gt;ActiveStorage.analyzers&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cf990db8f5aef3dcee23798a692bb46525a2324f" translate="yes" xml:space="preserve">
          <source>Outside of a Rails application, modify &lt;code&gt;ActiveStorage.previewers&lt;/code&gt; instead.</source>
          <target state="translated">在Rails应用程序之外，请修改 &lt;code&gt;ActiveStorage.previewers&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9eb06d2788e90ddfe556348a6c5937f5f35cd508" translate="yes" xml:space="preserve">
          <source>Override &lt;code&gt;AbstractController::Base#process_action&lt;/code&gt; to run the &lt;code&gt;process_action&lt;/code&gt; callbacks around the normal behavior.</source>
          <target state="translated">重写 &lt;code&gt;AbstractController::Base#process_action&lt;/code&gt; 以围绕正常行为运行 &lt;code&gt;process_action&lt;/code&gt; 回调。</target>
        </trans-unit>
        <trans-unit id="53e94313642caff82ab1212d6d182d25d760d8ec" translate="yes" xml:space="preserve">
          <source>Override Rack's &lt;a href=&quot;request#method-i-GET&quot;&gt;#GET&lt;/a&gt; method to support indifferent access.</source>
          <target state="translated">覆盖Rack的&lt;a href=&quot;request#method-i-GET&quot;&gt;#GET&lt;/a&gt;方法以支持不同的访问。</target>
        </trans-unit>
        <trans-unit id="f2a531a0ffbd70dccc6aed08cbd3243abf2efc00" translate="yes" xml:space="preserve">
          <source>Override Rack's &lt;a href=&quot;request#method-i-GET&quot;&gt;&lt;code&gt;GET&lt;/code&gt;&lt;/a&gt; method to support indifferent access.</source>
          <target state="translated">覆盖Rack的&lt;a href=&quot;request#method-i-GET&quot;&gt; &lt;code&gt;GET&lt;/code&gt; &lt;/a&gt;方法以支持不同的访问。</target>
        </trans-unit>
        <trans-unit id="f7919d6c7900a9ba2c6cb14bf7e61b2f06e55d0e" translate="yes" xml:space="preserve">
          <source>Override Rack's &lt;a href=&quot;request#method-i-POST&quot;&gt;#POST&lt;/a&gt; method to support indifferent access.</source>
          <target state="translated">覆盖Rack的&lt;a href=&quot;request#method-i-POST&quot;&gt;#POST&lt;/a&gt;方法以支持不同的访问。</target>
        </trans-unit>
        <trans-unit id="59c44bd820667c81a8ab50744c4e43e903e079ce" translate="yes" xml:space="preserve">
          <source>Override Rack's &lt;a href=&quot;request#method-i-POST&quot;&gt;&lt;code&gt;POST&lt;/code&gt;&lt;/a&gt; method to support indifferent access.</source>
          <target state="translated">覆盖Rack的&lt;a href=&quot;request#method-i-POST&quot;&gt; &lt;code&gt;POST&lt;/code&gt; &lt;/a&gt;方法以支持不同的访问。</target>
        </trans-unit>
        <trans-unit id="6ed186c4c96af29b90fa2e8ff78f11527c0c5d78" translate="yes" xml:space="preserve">
          <source>Override the default form builder for all views rendered by this controller and any of its descendants. Accepts a subclass of &lt;code&gt;ActionView::Helpers::FormBuilder&lt;/code&gt;.</source>
          <target state="translated">覆盖此控制器及其任何后代呈现的所有视图的默认表单构建器。接受 &lt;code&gt;ActionView::Helpers::FormBuilder&lt;/code&gt; 的子类。</target>
        </trans-unit>
        <trans-unit id="571d157055fbe9494924014185113ca02f5063d6" translate="yes" xml:space="preserve">
          <source>Override the template to digest by passing &lt;code&gt;:template&lt;/code&gt; to &lt;code&gt;fresh_when&lt;/code&gt; and &lt;code&gt;stale?&lt;/code&gt; calls. For example:</source>
          <target state="translated">通过将 &lt;code&gt;:template&lt;/code&gt; 传递给 &lt;code&gt;fresh_when&lt;/code&gt; 和 &lt;code&gt;stale?&lt;/code&gt; 来覆盖要消化的模板？电话。例如：</target>
        </trans-unit>
        <trans-unit id="659843aa814204b022a832480caa1f4343072659" translate="yes" xml:space="preserve">
          <source>Override this method if you want to customize when detailed exceptions must be shown. This method is only called when &lt;code&gt;consider_all_requests_local&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;. By default, it returns &lt;code&gt;false&lt;/code&gt;, but someone may set it to &lt;code&gt;request.local?&lt;/code&gt; so local requests in production still show the detailed exception pages.</source>
          <target state="translated">如果要自定义必须显示详细异常的时间，请重写此方法。仅当 &lt;code&gt;consider_all_requests_local&lt;/code&gt; 为 &lt;code&gt;false&lt;/code&gt; 时才调用此方法。默认情况下，它返回 &lt;code&gt;false&lt;/code&gt; ，但是有人可以将其设置为 &lt;code&gt;request.local?&lt;/code&gt; 。因此生产环境中的本地请求仍会显示详细的异常页面。</target>
        </trans-unit>
        <trans-unit id="c42a76cfef9d5dca0685def9c9a30426da14b5d6" translate="yes" xml:space="preserve">
          <source>Override this method in a concrete subclass. Have it return a &lt;a href=&quot;../hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt; of metadata.</source>
          <target state="translated">在一个具体的子类中重写此方法。让它返回元数据的&lt;a href=&quot;../hash&quot;&gt; &lt;code&gt;Hash&lt;/code&gt; &lt;/a&gt;值。</target>
        </trans-unit>
        <trans-unit id="c5cbba4c825939538cd3c4052d8c629401395619" translate="yes" xml:space="preserve">
          <source>Override this method in a concrete subclass. Have it return a &lt;a href=&quot;../hash&quot;&gt;Hash&lt;/a&gt; of metadata.</source>
          <target state="translated">在一个具体的子类中重写此方法。让它返回元数据的&lt;a href=&quot;../hash&quot;&gt;哈希&lt;/a&gt;值。</target>
        </trans-unit>
        <trans-unit id="ccda585cbf2158ac6aae0522f1b4ebe6798fdc6e" translate="yes" xml:space="preserve">
          <source>Override this method in a concrete subclass. Have it yield an attachable preview image (i.e. anything accepted by &lt;a href=&quot;attached/one#method-i-attach&quot;&gt;&lt;code&gt;ActiveStorage::Attached::One#attach&lt;/code&gt;&lt;/a&gt;). Pass the additional options to the underlying blob that is created.</source>
          <target state="translated">在一个具体的子类中重写此方法。使它产生可&lt;a href=&quot;attached/one#method-i-attach&quot;&gt; &lt;code&gt;ActiveStorage::Attached::One#attach&lt;/code&gt; &lt;/a&gt;预览图像（即ActiveStorage :: Attached :: One＃attach接受的任何图像）。将其他选项传递给创建的基础Blob。</target>
        </trans-unit>
        <trans-unit id="7012fde9def053cf38f8839597f7a9e51474af2c" translate="yes" xml:space="preserve">
          <source>Override this method in a concrete subclass. Have it yield an attachable preview image (i.e. anything accepted by &lt;a href=&quot;attached/one#method-i-attach&quot;&gt;ActiveStorage::Attached::One#attach&lt;/a&gt;).</source>
          <target state="translated">在一个具体的子类中重写此方法。使它产生可&lt;a href=&quot;attached/one#method-i-attach&quot;&gt;附加的&lt;/a&gt;预览图像（即ActiveStorage :: Attached :: One＃attach接受的任何图像）。</target>
        </trans-unit>
        <trans-unit id="ea62c6865b9d12d1a6525780dd25898deabdfa91" translate="yes" xml:space="preserve">
          <source>Override this method in a module to change the default behavior.</source>
          <target state="translated">在模块中重写此方法以改变默认行为。</target>
        </trans-unit>
        <trans-unit id="1e4dfdfb3026247d292bbe54b879d99d5ae0cba6" translate="yes" xml:space="preserve">
          <source>Override this method in subclasses with validation logic, adding errors to the records &lt;code&gt;errors&lt;/code&gt; array where necessary.</source>
          <target state="translated">使用验证逻辑在子类中重写此方法，并在必要时向记录 &lt;code&gt;errors&lt;/code&gt; 数组添加错误。</target>
        </trans-unit>
        <trans-unit id="2dd08da67482a0c2c313df115f9a10cc17fc9d73" translate="yes" xml:space="preserve">
          <source>Override to return the quoted table name for assignment. Defaults to table quoting.</source>
          <target state="translated">覆盖返回引用的表名进行赋值。缺省为表的引号。</target>
        </trans-unit>
        <trans-unit id="a6e61b07bdd533dfaaa49e91b7ff70db783ff858" translate="yes" xml:space="preserve">
          <source>Override to turn off referential integrity while executing &lt;code&gt;&amp;amp;block&lt;/code&gt;.</source>
          <target state="translated">在执行 &lt;code&gt;&amp;amp;block&lt;/code&gt; 时重写以关闭参照完整性。</target>
        </trans-unit>
        <trans-unit id="c9a21b54296187abac059d1a77a2e0b1268dbb78" translate="yes" xml:space="preserve">
          <source>Overrides &lt;a href=&quot;../../abstractcontroller/base#method-i-controller_path&quot;&gt;&lt;code&gt;AbstractController::Base#controller_path&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">重写&lt;a href=&quot;../../abstractcontroller/base#method-i-controller_path&quot;&gt; &lt;code&gt;AbstractController::Base#controller_path&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="88fb530427339453796067daade2efe913742636" translate="yes" xml:space="preserve">
          <source>Overrides may be organized in a dedicated directory &lt;code&gt;app/overrides&lt;/code&gt; that is preloaded in a &lt;code&gt;to_prepare&lt;/code&gt; callback.</source>
          <target state="translated">替代可以在专用目录 &lt;code&gt;app/overrides&lt;/code&gt; 组织/替代，该应用预装在 &lt;code&gt;to_prepare&lt;/code&gt; 回调中。</target>
        </trans-unit>
        <trans-unit id="10c12a7eb4d3f6a7bc6548f5bd29111edbbe19f4" translate="yes" xml:space="preserve">
          <source>Overrides the application config to specify if an error should be raised when an order is present in the relation.</source>
          <target state="translated">覆盖应用程序配置,指定当关系中出现订单时,是否应该引发错误。</target>
        </trans-unit>
        <trans-unit id="dee469c249d0b808f02f56c8e00d57f1ac89da78" translate="yes" xml:space="preserve">
          <source>Overrides the default inspect method with a human readable one, e.g., &amp;ldquo;Mon, 21 Feb 2005 14:30:00 +0000&amp;rdquo;.</source>
          <target state="translated">用人类可读的方法覆盖默认检查方法，例如&amp;ldquo; Mon，21 Feb 2005 14:30:00 +0000&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="f7e80c9f4d92d1acebc7a3aa867dcf62d6b13f32" translate="yes" xml:space="preserve">
          <source>Overrides the default inspect method with a human readable one, e.g., &amp;ldquo;Mon, 21 Feb 2005&amp;rdquo;</source>
          <target state="translated">用人类可读的方法覆盖默认的检查方法，例如&amp;ldquo; 2005年2月21日星期一&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="bdcc150066449639a774339b07b0656ab30c52b4" translate="yes" xml:space="preserve">
          <source>Overrides the default resource identifier &lt;code&gt;:id&lt;/code&gt; (name of the dynamic segment used to generate the routes). You can access that segment from your controller using &lt;code&gt;params[&amp;lt;:param&amp;gt;]&lt;/code&gt;. In your router:</source>
          <target state="translated">覆盖默认资源标识符 &lt;code&gt;:id&lt;/code&gt; （用于生成路由的动态网段的名称）。您可以使用 &lt;code&gt;params[&amp;lt;:param&amp;gt;]&lt;/code&gt; 从控制器访问该段。在您的路由器中：</target>
        </trans-unit>
        <trans-unit id="ca9f6506fa932787a54e9bdb193b09d95399befe" translate="yes" xml:space="preserve">
          <source>Overriding Conditions</source>
          <target state="translated">覆盖条件</target>
        </trans-unit>
        <trans-unit id="3270cba4a12bbee17dc198df863938fcecb8dccb" translate="yes" xml:space="preserve">
          <source>Overriding Models and Controllers</source>
          <target state="translated">覆盖模型和控制器</target>
        </trans-unit>
        <trans-unit id="9d6c57d88b0469224ce074af29a7bb1cc5f9520c" translate="yes" xml:space="preserve">
          <source>Overriding Named Route Parameters</source>
          <target state="translated">覆盖命名路由参数</target>
        </trans-unit>
        <trans-unit id="89b862244aeff64fb478f03c9520e3820b7d2020" translate="yes" xml:space="preserve">
          <source>Overriding Views</source>
          <target state="translated">覆盖意见</target>
        </trans-unit>
        <trans-unit id="b01ade22900da9d817f3e960e0000a5a3809c736" translate="yes" xml:space="preserve">
          <source>Overriding case equality method so that it returns true for &lt;a href=&quot;activesupport/timewithzone&quot;&gt;&lt;code&gt;ActiveSupport::TimeWithZone&lt;/code&gt;&lt;/a&gt; instances</source>
          <target state="translated">覆盖大小写相等方法，以便为&lt;a href=&quot;activesupport/timewithzone&quot;&gt; &lt;code&gt;ActiveSupport::TimeWithZone&lt;/code&gt; &lt;/a&gt;实例返回true</target>
        </trans-unit>
        <trans-unit id="92c315e5288623e3b3ed038cc018c03e7cfb2a7b" translate="yes" xml:space="preserve">
          <source>Overriding case equality method so that it returns true for &lt;a href=&quot;activesupport/timewithzone&quot;&gt;ActiveSupport::TimeWithZone&lt;/a&gt; instances</source>
          <target state="translated">覆盖大小写相等方法，以便为&lt;a href=&quot;activesupport/timewithzone&quot;&gt;ActiveSupport :: TimeWithZone&lt;/a&gt;实例返回true</target>
        </trans-unit>
        <trans-unit id="f70e9816d1335e9ecac8ce4349ea6c1acacddced" translate="yes" xml:space="preserve">
          <source>Overriding generated methods</source>
          <target state="translated">覆盖生成的方法</target>
        </trans-unit>
        <trans-unit id="6d3b8c946ae9aa45abae96fe1f8735ec71a9507a" translate="yes" xml:space="preserve">
          <source>Overriding the &lt;code&gt;new&lt;/code&gt; and &lt;code&gt;edit&lt;/code&gt; Segments</source>
          <target state="translated">覆盖 &lt;code&gt;new&lt;/code&gt; 和 &lt;code&gt;edit&lt;/code&gt; 细分</target>
        </trans-unit>
        <trans-unit id="90e0d2c47827d98e652a159081209b6e9461aaa1" translate="yes" xml:space="preserve">
          <source>Overriding the Named Route Helpers</source>
          <target state="translated">覆盖已命名的路由助手</target>
        </trans-unit>
        <trans-unit id="669e0882b1c84525a463608f90e7d793dfd9fb15" translate="yes" xml:space="preserve">
          <source>Overriding the Naming Conventions</source>
          <target state="translated">覆盖命名公约</target>
        </trans-unit>
        <trans-unit id="022551d0b5cfff55add0a874e764a3914ba97024" translate="yes" xml:space="preserve">
          <source>Overriding the Singular Form</source>
          <target state="translated">覆盖单数形式</target>
        </trans-unit>
        <trans-unit id="2366865074e7efbeee7afe7de989a0887b46048f" translate="yes" xml:space="preserve">
          <source>Overriding the default service is done the same way as &lt;code&gt;has_one_attached&lt;/code&gt;, by using the &lt;code&gt;service&lt;/code&gt; option:</source>
          <target state="translated">通过使用 &lt;code&gt;service&lt;/code&gt; 选项，覆盖默认服务的方法与 &lt;code&gt;has_one_attached&lt;/code&gt; 相同：</target>
        </trans-unit>
        <trans-unit id="c57a79f08c0cfc90c7aa58ae5662e09a1242045c" translate="yes" xml:space="preserve">
          <source>Overview of Other Built-In Methods that Provide I18n Support</source>
          <target state="translated">提供I18n支持的其他内置方法概述</target>
        </trans-unit>
        <trans-unit id="250f8698775adafaacdd138110b24ac4b3a25c5d" translate="yes" xml:space="preserve">
          <source>Overview of helpers provided by Action View</source>
          <target state="translated">Action View提供的帮助程序概述</target>
        </trans-unit>
        <trans-unit id="79d8fe12b72857cd0d717cc558336c7470d3bf78" translate="yes" xml:space="preserve">
          <source>Overview of the I18n API Features</source>
          <target state="translated">I18n API功能概述</target>
        </trans-unit>
        <trans-unit id="f0b72a670aa3d37fcd434591b7a0698af5c095d1" translate="yes" xml:space="preserve">
          <source>Overview: How the Pieces Fit Together</source>
          <target state="translated">概述。各个部分如何结合在一起</target>
        </trans-unit>
        <trans-unit id="e58468af38728c26a2326850cb6e380597f34497" translate="yes" xml:space="preserve">
          <source>Overwrite &lt;a href=&quot;classmethods#method-i-modules_for_helpers&quot;&gt;#modules_for_helpers&lt;/a&gt; to accept :all as argument, which loads all helpers in helpers_path.</source>
          <target state="translated">覆盖&lt;a href=&quot;classmethods#method-i-modules_for_helpers&quot;&gt;#modules_for_helpers&lt;/a&gt;以接受：all作为参数，这会将所有帮助程序加载到helpers_path中。</target>
        </trans-unit>
        <trans-unit id="dd4a30fb6d3f3241d8540ee8efd968d3c88d68d8" translate="yes" xml:space="preserve">
          <source>Overwrite &lt;a href=&quot;classmethods#method-i-modules_for_helpers&quot;&gt;&lt;code&gt;modules_for_helpers&lt;/code&gt;&lt;/a&gt; to accept :all as argument, which loads all helpers in helpers_path.</source>
          <target state="translated">覆盖&lt;a href=&quot;classmethods#method-i-modules_for_helpers&quot;&gt; &lt;code&gt;modules_for_helpers&lt;/code&gt; &lt;/a&gt;以接受：all作为参数，这会将所有帮助程序加载到helpers_path中。</target>
        </trans-unit>
        <trans-unit id="377113a11fffe769ccb21030e23f3ed12c9cdb39" translate="yes" xml:space="preserve">
          <source>Overwrite if you use another logger in your log subscriber.</source>
          <target state="translated">如果你在你的日志订阅者中使用了另一个日志记录器,就会被覆盖。</target>
        </trans-unit>
        <trans-unit id="fd91ce0a15e301cc12092b4fb7d5d20f779176cd" translate="yes" xml:space="preserve">
          <source>Overwrites &lt;a href=&quot;renderinghelper#method-i-_layout_for&quot;&gt;#_layout_for&lt;/a&gt; in the context object so it supports the case a block is passed to a partial. Returns the contents that are yielded to a layout, given a name or a block.</source>
          <target state="translated">覆盖上下文对象中的&lt;a href=&quot;renderinghelper#method-i-_layout_for&quot;&gt;#_layout_for&lt;/a&gt;，以便支持将块传递给局部对象的情况。返回给定名称或块的布局内容。</target>
        </trans-unit>
        <trans-unit id="972e63970b01609ddcc511be0abbc2c963f93908" translate="yes" xml:space="preserve">
          <source>Overwrites &lt;a href=&quot;renderinghelper#method-i-_layout_for&quot;&gt;&lt;code&gt;_layout_for&lt;/code&gt;&lt;/a&gt; in the context object so it supports the case a block is passed to a partial. Returns the contents that are yielded to a layout, given a name or a block.</source>
          <target state="translated">覆盖上下文对象中的&lt;a href=&quot;renderinghelper#method-i-_layout_for&quot;&gt; &lt;code&gt;_layout_for&lt;/code&gt; &lt;/a&gt;，因此它支持将块传递给局部对象的情况。返回给定名称或块的布局内容。</target>
        </trans-unit>
        <trans-unit id="67b0fe5a4f794163b7967149d7e9e868c0d3c372" translate="yes" xml:space="preserve">
          <source>Overwriting default accessors</source>
          <target state="translated">覆盖默认的存取器</target>
        </trans-unit>
        <trans-unit id="632cbb4fc12f547a9fb541687f690a1c40922419" translate="yes" xml:space="preserve">
          <source>PAIR_RE</source>
          <target state="translated">PAIR_RE</target>
        </trans-unit>
        <trans-unit id="aee8bc7166d89a34266bdcdf618cc34eff0a73e4" translate="yes" xml:space="preserve">
          <source>PARAMETERS_KEY</source>
          <target state="translated">PARAMETERS_KEY</target>
        </trans-unit>
        <trans-unit id="03894bbce303c9f9c81bfff9b4f44824921f46bc" translate="yes" xml:space="preserve">
          <source>PARAMETER_SEPARATOR_REGEXP</source>
          <target state="translated">PARAMETER_SEPARATOR_REGEXP</target>
        </trans-unit>
        <trans-unit id="f121cf6b1467678cdd4035a2748dc437b3974eab" translate="yes" xml:space="preserve">
          <source>PARTS</source>
          <target state="translated">PARTS</target>
        </trans-unit>
        <trans-unit id="783c9e559f81aabe784bd2a18a361eb09fab2dd9" translate="yes" xml:space="preserve">
          <source>PARTS_IN_SECONDS</source>
          <target state="translated">PARTS_IN_SECONDS</target>
        </trans-unit>
        <trans-unit id="49563801c516b55fcf9b36b38aa49d7fa71d1757" translate="yes" xml:space="preserve">
          <source>PATCH/PUT</source>
          <target state="translated">PATCH/PUT</target>
        </trans-unit>
        <trans-unit id="bcb7b622110501134d7fc62face8b2201ad5830b" translate="yes" xml:space="preserve">
          <source>PATCH/PUT update</source>
          <target state="translated">PATCH/PUT更新</target>
        </trans-unit>
        <trans-unit id="84c16d6a502dba6bf2d3fee213424d5d6bfb7b62" translate="yes" xml:space="preserve">
          <source>PATTERN</source>
          <target state="translated">PATTERN</target>
        </trans-unit>
        <trans-unit id="74d229d608de046fae2425ce1bf3de88fe485b7c" translate="yes" xml:space="preserve">
          <source>PERMITTED_OPTIONS</source>
          <target state="translated">PERMITTED_OPTIONS</target>
        </trans-unit>
        <trans-unit id="fd6908029161a849d74ee36b9f60d2b8ba2c087c" translate="yes" xml:space="preserve">
          <source>PERMITTED_SCALAR_TYPES</source>
          <target state="translated">PERMITTED_SCALAR_TYPES</target>
        </trans-unit>
        <trans-unit id="7e72115c5e8184f1664db535ffd560b5c9313d19" translate="yes" xml:space="preserve">
          <source>PER_ENTRY_OVERHEAD</source>
          <target state="translated">PER_ENTRY_OVERHEAD</target>
        </trans-unit>
        <trans-unit id="3f6cfaca9cb2539631de34afb5b2889fb12e4df1" translate="yes" xml:space="preserve">
          <source>PETABYTE</source>
          <target state="translated">PETABYTE</target>
        </trans-unit>
        <trans-unit id="31be469709fb845b0652caa330c99da8dd3e968e" translate="yes" xml:space="preserve">
          <source>POLICY</source>
          <target state="translated">POLICY</target>
        </trans-unit>
        <trans-unit id="61ff81c30aa3c76e78afea62b2e3bd1dfa49e854" translate="yes" xml:space="preserve">
          <source>POST</source>
          <target state="translated">POST</target>
        </trans-unit>
        <trans-unit id="6558fd6a36a1d6db28cadd3ec21faf8102d63e2f" translate="yes" xml:space="preserve">
          <source>POST create</source>
          <target state="translated">POST创建</target>
        </trans-unit>
        <trans-unit id="4dcb288a15db232057a84beb4f11f41994519e90" translate="yes" xml:space="preserve">
          <source>POST create PATCH/PUT update</source>
          <target state="translated">POST创建PATCH/PUT更新</target>
        </trans-unit>
        <trans-unit id="7d3be5984ced74e5dc11668f62d29dfe705b3a55" translate="yes" xml:space="preserve">
          <source>POST()&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">POST（）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="64b8158d7ad4f6f15e1f37ea3bf9e1c7336f2b59" translate="yes" xml:space="preserve">
          <source>PRECISIONS</source>
          <target state="translated">PRECISIONS</target>
        </trans-unit>
        <trans-unit id="4d6909ebad0e685a6888b06fc446e18b7c06dc51" translate="yes" xml:space="preserve">
          <source>PRECOMPRESSED</source>
          <target state="translated">PRECOMPRESSED</target>
        </trans-unit>
        <trans-unit id="f812723c15ec2dcd8ff1e0f5c3451028487d137f" translate="yes" xml:space="preserve">
          <source>PREFIXED_PARTIAL_NAMES</source>
          <target state="translated">PREFIXED_PARTIAL_NAMES</target>
        </trans-unit>
        <trans-unit id="12ad8dab5ed4cd63c77c46353e2a61ae6d4c644c" translate="yes" xml:space="preserve">
          <source>PRE_CONTENT_STRINGS</source>
          <target state="translated">PRE_CONTENT_STRINGS</target>
        </trans-unit>
        <trans-unit id="b0b7ba4666a92774e0d1afe02f2e20982b307a35" translate="yes" xml:space="preserve">
          <source>PRIVATE</source>
          <target state="translated">PRIVATE</target>
        </trans-unit>
        <trans-unit id="3503939d8cdf2bedfbf2dc57507b92d04a3bc5f7" translate="yes" xml:space="preserve">
          <source>PROTECTED_IVARS</source>
          <target state="translated">PROTECTED_IVARS</target>
        </trans-unit>
        <trans-unit id="6fcc917173ee9015a6560e3977ce67bc97156a09" translate="yes" xml:space="preserve">
          <source>PROTOCOL_REGEXP</source>
          <target state="translated">PROTOCOL_REGEXP</target>
        </trans-unit>
        <trans-unit id="d1785ca28c3a4d29a6edef1520c544b838a93db3" translate="yes" xml:space="preserve">
          <source>PUBLIC</source>
          <target state="translated">PUBLIC</target>
        </trans-unit>
        <trans-unit id="0595753673b07a799cea5ec4da8674a00ed89291" translate="yes" xml:space="preserve">
          <source>Page Caching</source>
          <target state="translated">页面缓存</target>
        </trans-unit>
        <trans-unit id="f0aee076e25e3e98bd0dba60b5e41a072af0fb2b" translate="yes" xml:space="preserve">
          <source>Page Caching cannot be used for actions that have before filters - for example, pages that require authentication. This is where Action Caching comes in. Action Caching works like Page Caching except the incoming web request hits the Rails stack so that before filters can be run on it before the cache is served. This allows authentication and other restrictions to be run while still serving the result of the output from a cached copy.</source>
          <target state="translated">页面缓存不能用于之前有过滤器的动作--例如,需要认证的页面。这就是Action Caching的用武之地。动作缓存的工作原理与页面缓存类似,只是传入的 Web 请求会进入 Rails 堆栈,以便在缓存服务之前对其运行过滤器。这就允许在运行认证和其他限制的同时,仍能提供缓存副本的输出结果。</target>
        </trans-unit>
        <trans-unit id="29df9fff8fa01468100d5eb51c3265997a1d99f1" translate="yes" xml:space="preserve">
          <source>Page Caching has been removed from Rails 4. See the &lt;a href=&quot;https://github.com/rails/actionpack-page_caching&quot;&gt;actionpack-page_caching gem&lt;/a&gt;.</source>
          <target state="translated">页面缓存已从Rails 4中删除。请参阅&lt;a href=&quot;https://github.com/rails/actionpack-page_caching&quot;&gt;actionpack-page_caching gem&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9299d5eeb4a18817fc53da773b387a9845a190f9" translate="yes" xml:space="preserve">
          <source>Page Change Events</source>
          <target state="translated">页面变更事件</target>
        </trans-unit>
        <trans-unit id="01c14f44cdf9f738128c66f96575d2dd9d6b7f5a" translate="yes" xml:space="preserve">
          <source>Page caching is a Rails mechanism which allows the request for a generated page to be fulfilled by the web server (i.e. Apache or NGINX) without having to go through the entire Rails stack. While this is super fast it can't be applied to every situation (such as pages that need authentication). Also, because the web server is serving a file directly from the filesystem you will need to implement cache expiration.</source>
          <target state="translated">页面缓存是一种Rails机制,它允许生成页面的请求由Web服务器(即Apache或NGINX)来完成,而无需通过整个Rails堆栈。虽然这个速度超快,但并不能适用于所有情况(比如需要认证的页面)。另外,由于Web服务器是直接从文件系统中服务于文件,你需要实现缓存过期。</target>
        </trans-unit>
        <trans-unit id="b1355b7be3ad2f138ebc1eaaef9d3a2877e2d5df" translate="yes" xml:space="preserve">
          <source>Pairs passed to &lt;code&gt;options_for_select&lt;/code&gt; should have the text first and the value second, however with &lt;code&gt;options_from_collection_for_select&lt;/code&gt; should have the value method first and the text method second.</source>
          <target state="translated">传递给 &lt;code&gt;options_for_select&lt;/code&gt; 的对应该首先具有文本，其次是值，但是使用 &lt;code&gt;options_from_collection_for_select&lt;/code&gt; 时,应首先具有值方法，其次是文本方法。</target>
        </trans-unit>
        <trans-unit id="25f56d90fcfd17280003892c8ccacdb0fa403726" translate="yes" xml:space="preserve">
          <source>Parallel Testing</source>
          <target state="translated">并行测试</target>
        </trans-unit>
        <trans-unit id="1d3e4a56ef085e1f6d530ebe735f2ea7925d261c" translate="yes" xml:space="preserve">
          <source>Parallel Testing with Processes</source>
          <target state="translated">流程的并行测试</target>
        </trans-unit>
        <trans-unit id="c2e7444f10c0b930c425af0461c5337c0b53c120" translate="yes" xml:space="preserve">
          <source>Parallel Testing with Threads</source>
          <target state="translated">线程并行测试</target>
        </trans-unit>
        <trans-unit id="b18e876b783f6455ea0fddc8eaea682e4a6fbe1a" translate="yes" xml:space="preserve">
          <source>Parallel testing allows you to parallelize your test suite. While forking processes is the default method, threading is supported as well. Running tests in parallel reduces the time it takes your entire test suite to run.</source>
          <target state="translated">并行测试允许您对测试套件进行并行化。虽然分叉进程是默认的方法,但也支持线程。并行运行测试可以减少整个测试套件的运行时间。</target>
        </trans-unit>
        <trans-unit id="221ea1b12f42a6a55d52bf6d5cfb5d76a78f81ff" translate="yes" xml:space="preserve">
          <source>Parallel testing with processes</source>
          <target state="translated">流程的并行测试</target>
        </trans-unit>
        <trans-unit id="412eec413ecf3c1ff121f0f86e087c63e0b7be10" translate="yes" xml:space="preserve">
          <source>Parallel testing with threads</source>
          <target state="translated">用线程进行并行测试</target>
        </trans-unit>
        <trans-unit id="e0f805c34e06e0feba3fb69efbb9cb3d55153146" translate="yes" xml:space="preserve">
          <source>Parallelizes the test suite.</source>
          <target state="translated">并行化测试套件。</target>
        </trans-unit>
        <trans-unit id="fefc67d1ca265fb5dd938addc782a0f34fb195c8" translate="yes" xml:space="preserve">
          <source>Parameter Parsing: Want to specify your parameters as JSON instead of as a URL-encoded String? No problem. Rails will decode the JSON for you and make it available in &lt;code&gt;params&lt;/code&gt;. Want to use nested URL-encoded parameters? That works too.</source>
          <target state="translated">参数解析：是否想将参数指定为JSON而不是URL编码的字符串？没问题。Rails将为您解码JSON，并使其在 &lt;code&gt;params&lt;/code&gt; 中可用。是否要使用嵌套的URL编码参数？那也行。</target>
        </trans-unit>
        <trans-unit id="a4a66d075c1503c51aadb896d837605da65392cc" translate="yes" xml:space="preserve">
          <source>Parameter Restriction</source>
          <target state="translated">参数限制</target>
        </trans-unit>
        <trans-unit id="645e054aea0b8233084b6a4f61680bab34d2428f" translate="yes" xml:space="preserve">
          <source>ParameterEncoding</source>
          <target state="translated">ParameterEncoding</target>
        </trans-unit>
        <trans-unit id="a84f9e17c4c0631589680174cc3e50ef9744ee53" translate="yes" xml:space="preserve">
          <source>ParameterEncoding::ClassMethods</source>
          <target state="translated">ParameterEncoding::ClassMethods</target>
        </trans-unit>
        <trans-unit id="c4546575f6e6e13dd391577e8055ad2c8233977e" translate="yes" xml:space="preserve">
          <source>ParameterEncoding::ClassMethods#skip_parameter_encoding</source>
          <target state="translated">ParameterEncoding::ClassMethods#skip_parameter_encoding</target>
        </trans-unit>
        <trans-unit id="657e4a6a1c074a4e23682d693297aea2064d2dbf" translate="yes" xml:space="preserve">
          <source>ParameterFilter</source>
          <target state="translated">ParameterFilter</target>
        </trans-unit>
        <trans-unit id="62a290ca1e0d0831e035465b2ba78943075494d5" translate="yes" xml:space="preserve">
          <source>ParameterFilter#filter</source>
          <target state="translated">ParameterFilter#filter</target>
        </trans-unit>
        <trans-unit id="c28ae4e19bb8f01350e8f3a9d3681587e383e7bb" translate="yes" xml:space="preserve">
          <source>ParameterFilter#filter_param</source>
          <target state="translated">ParameterFilter#filter_param</target>
        </trans-unit>
        <trans-unit id="174a1e1695c688a92704938e6aa11599667c0087" translate="yes" xml:space="preserve">
          <source>ParameterFilter::new</source>
          <target state="translated">ParameterFilter::new</target>
        </trans-unit>
        <trans-unit id="ef431435b7dcd18d8b61cdea7d42c6f296555c0e" translate="yes" xml:space="preserve">
          <source>Parameterized</source>
          <target state="translated">Parameterized</target>
        </trans-unit>
        <trans-unit id="39bf4bba6d2b87fb7a1fe0b7be92684d011ea736" translate="yes" xml:space="preserve">
          <source>Parameterized::ClassMethods</source>
          <target state="translated">Parameterized::ClassMethods</target>
        </trans-unit>
        <trans-unit id="d4a34bc12e1078cadb12179769f431b961f03fa7" translate="yes" xml:space="preserve">
          <source>Parameterized::ClassMethods#with</source>
          <target state="translated">Parameterized::ClassMethods#with</target>
        </trans-unit>
        <trans-unit id="a975eea30db9fa05003e3b5097688bd49ec7e01b" translate="yes" xml:space="preserve">
          <source>Parameters</source>
          <target state="translated">Parameters</target>
        </trans-unit>
        <trans-unit id="61a639e77013711aef323a1dc00bfc9a22c768a9" translate="yes" xml:space="preserve">
          <source>Parameters Filtering</source>
          <target state="translated">参数过滤</target>
        </trans-unit>
        <trans-unit id="381c775599d6e4185d4410725809e360928357cd" translate="yes" xml:space="preserve">
          <source>Parameters:</source>
          <target state="translated">Parameters:</target>
        </trans-unit>
        <trans-unit id="2a96b0e3284e6cb9c0de64adf5c031b8d904a8d2" translate="yes" xml:space="preserve">
          <source>ParamsWrapper</source>
          <target state="translated">ParamsWrapper</target>
        </trans-unit>
        <trans-unit id="07979ab9cd724370034eba3a2315e1ecd2327fa9" translate="yes" xml:space="preserve">
          <source>ParamsWrapper#process_action</source>
          <target state="translated">ParamsWrapper#process_action</target>
        </trans-unit>
        <trans-unit id="44cde84177e024385d8e799bbce04ac7b46e62ca" translate="yes" xml:space="preserve">
          <source>ParamsWrapper::ClassMethods</source>
          <target state="translated">ParamsWrapper::ClassMethods</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
