<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="rails">
    <body>
      <group id="rails">
        <trans-unit id="8822e7479c039c5402d81b609e4dd3d63c51d641" translate="yes" xml:space="preserve">
          <source>Also, to keep it simple, the articles form will have a new text field called &lt;code&gt;author_name&lt;/code&gt;, where users can elect to put their name. The engine will then take this name and either create a new &lt;code&gt;User&lt;/code&gt; object from it, or find one that already has that name. The engine will then associate the article with the found or created &lt;code&gt;User&lt;/code&gt; object.</source>
          <target state="translated">另外，为简单 &lt;code&gt;author_name&lt;/code&gt; ，文章表单将具有一个名为author_name的新文本字段，用户可以在其中选择输入其姓名。然后，引擎将使用此名称，并从中创建一个新的 &lt;code&gt;User&lt;/code&gt; 对象，或者找到已经具有该名称的对象。然后，引擎会将文章与找到或创建的 &lt;code&gt;User&lt;/code&gt; 对象相关联。</target>
        </trans-unit>
        <trans-unit id="932a0b31da6ccb6b29b151b7f7bae5b336e3e4c3" translate="yes" xml:space="preserve">
          <source>Also, you can pass a block to &lt;code&gt;cattr_*&lt;/code&gt; to set up the attribute with a default value:</source>
          <target state="translated">另外，您可以将一个块传递给 &lt;code&gt;cattr_*&lt;/code&gt; 以使用默认值设置属性：</target>
        </trans-unit>
        <trans-unit id="064689478ac4a1157d022e4f703845b2d6ae5af4" translate="yes" xml:space="preserve">
          <source>Alternative cache stores.</source>
          <target state="translated">备用的缓存库。</target>
        </trans-unit>
        <trans-unit id="b6688e18c368b0e4150bd5558ccf7cd1ad92731d" translate="yes" xml:space="preserve">
          <source>Alternatively you can use one of the other syntaxes:</source>
          <target state="translated">或者你也可以使用其他的语法。</target>
        </trans-unit>
        <trans-unit id="11d4e5be119bc3381a944084d22048f170cc5514" translate="yes" xml:space="preserve">
          <source>Alternatively you may ask for a second parameter &lt;code&gt;request&lt;/code&gt;. That one is particularly useful for serving assets from an SSL-protected page. The example proc below disables asset hosting for HTTPS connections, while still sending assets for plain HTTP requests from asset hosts. If you don't have SSL certificates for each of the asset hosts this technique allows you to avoid warnings in the client about mixed media. Note that the &lt;code&gt;request&lt;/code&gt; parameter might not be supplied, e.g. when the assets are precompiled with the command `bin/rails assets:precompile`. Make sure to use a &lt;code&gt;Proc&lt;/code&gt; instead of a lambda, since a &lt;code&gt;Proc&lt;/code&gt; allows missing parameters and sets them to &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">或者，您可以要求第二个参数 &lt;code&gt;request&lt;/code&gt; 。这对于从受SSL保护的页面提供资产特别有用。下面的示例proc禁用了HTTPS连接的资产托管，同时仍然为资产主机发出的纯HTTP请求发送资产。如果每个资产主机都没有SSL证书，则可以使用此技术避免在客户端中出现有关混合媒体的警告。请注意，例如，当使用&amp;ldquo; bin / rails asset：precompile&amp;rdquo;命令对资产进行预编译时，可能不会提供 &lt;code&gt;request&lt;/code&gt; 参数。确保使用 &lt;code&gt;Proc&lt;/code&gt; 而不是lambda，因为 &lt;code&gt;Proc&lt;/code&gt; 允许丢失参数并将其设置为 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c3387884dc8c5aea48323a7ca12c254719b8376a" translate="yes" xml:space="preserve">
          <source>Alternatively you may ask for a second parameter &lt;code&gt;request&lt;/code&gt;. That one is particularly useful for serving assets from an SSL-protected page. The example proc below disables asset hosting for HTTPS connections, while still sending assets for plain HTTP requests from asset hosts. If you don't have SSL certificates for each of the asset hosts this technique allows you to avoid warnings in the client about mixed media. Note that the &lt;code&gt;request&lt;/code&gt; parameter might not be supplied, e.g. when the assets are precompiled with the command `rails assets:precompile`. Make sure to use a &lt;code&gt;Proc&lt;/code&gt; instead of a lambda, since a &lt;code&gt;Proc&lt;/code&gt; allows missing parameters and sets them to &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">或者，您可以要求第二个参数 &lt;code&gt;request&lt;/code&gt; 。该选项对于从受SSL保护的页面提供资产特别有用。下面的示例proc禁用了HTTPS连接的资产托管，同时仍然为资产主机发出的纯HTTP请求发送资产。如果每个资产主机都没有SSL证书，则可以使用此技术避免在客户端中出现有关混合媒体的警告。注意，例如，当使用&amp;ldquo; rails asset：precompile&amp;rdquo;命令对资产进行预编译时，可能不会提供 &lt;code&gt;request&lt;/code&gt; 参数。确保使用 &lt;code&gt;Proc&lt;/code&gt; 而不是lambda，因为 &lt;code&gt;Proc&lt;/code&gt; 允许丢失参数并将其设置为 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d019e5041c7aef54caf0250ad119f01ad03b4c4a" translate="yes" xml:space="preserve">
          <source>Alternatively, &lt;code&gt;:reject_if&lt;/code&gt; also accepts a symbol for using methods:</source>
          <target state="translated">另外， &lt;code&gt;:reject_if&lt;/code&gt; 也接受使用符号：</target>
        </trans-unit>
        <trans-unit id="506480a7c3b1cef9f36d0d85242c106fb5f713d1" translate="yes" xml:space="preserve">
          <source>Alternatively, a request for a file with an SHA256 hash such as &lt;code&gt;public/assets/rails-f90d8a84c707a8dc923fca1ca1895ae8ed0a09237f6992015fef1e11be77c023.png&lt;/code&gt; is treated the same way. How these hashes are generated is covered in the &lt;a href=&quot;#in-production&quot;&gt;In Production&lt;/a&gt; section later on in this guide.</source>
          <target state="translated">或者，以相同的方式处理对具有SHA256哈希的文件的请求，例如 &lt;code&gt;public/assets/rails-f90d8a84c707a8dc923fca1ca1895ae8ed0a09237f6992015fef1e11be77c023.png&lt;/code&gt; 。在本指南后面的&amp;ldquo; &lt;a href=&quot;#in-production&quot;&gt;生产中&amp;rdquo;&lt;/a&gt;部分将介绍如何生成这些哈希。</target>
        </trans-unit>
        <trans-unit id="ce46533f456bf612a832ba81b0998d54e7b96c36" translate="yes" xml:space="preserve">
          <source>Alternatively, calling &lt;code&gt;to_yaml&lt;/code&gt; on any object converts it to YAML. You can pass this converted object into the &lt;code&gt;simple_format&lt;/code&gt; helper method to format the output. This is how &lt;code&gt;debug&lt;/code&gt; does its magic.</source>
          <target state="translated">或者，在任何对象上调用 &lt;code&gt;to_yaml&lt;/code&gt; 会将其转换为YAML。您可以将此转换后的对象传递给 &lt;code&gt;simple_format&lt;/code&gt; 帮助器方法以格式化输出。这就是 &lt;code&gt;debug&lt;/code&gt; 如何发挥其魔力的方法。</target>
        </trans-unit>
        <trans-unit id="8e9210118bd21db03ac2c463fb8311acda3dfb04" translate="yes" xml:space="preserve">
          <source>Alternatively, if &lt;code&gt;return&lt;/code&gt; is preferred it is recommended to explicitly define a method:</source>
          <target state="translated">另外，如果首选 &lt;code&gt;return&lt;/code&gt; ，建议显式定义一个方法：</target>
        </trans-unit>
        <trans-unit id="cf54744a5c0a7732a11a63ff046fddaa15227b5c" translate="yes" xml:space="preserve">
          <source>Alternatively, provide the password in the &lt;code&gt;RAILS_INBOUND_EMAIL_PASSWORD&lt;/code&gt; environment variable.</source>
          <target state="translated">或者，在 &lt;code&gt;RAILS_INBOUND_EMAIL_PASSWORD&lt;/code&gt; 环境变量中提供密码。</target>
        </trans-unit>
        <trans-unit id="600ca619a831471263008848cc06bb698543e17b" translate="yes" xml:space="preserve">
          <source>Alternatively, provide your API key in the &lt;code&gt;MAILGUN_INGRESS_API_KEY&lt;/code&gt; environment variable.</source>
          <target state="translated">或者，在 &lt;code&gt;MAILGUN_INGRESS_API_KEY&lt;/code&gt; 环境变量中提供您的API密钥。</target>
        </trans-unit>
        <trans-unit id="f86151a292e1bf0329654018146494323651b855" translate="yes" xml:space="preserve">
          <source>Alternatively, provide your API key in the &lt;code&gt;MANDRILL_INGRESS_API_KEY&lt;/code&gt; environment variable.</source>
          <target state="translated">或者，在 &lt;code&gt;MANDRILL_INGRESS_API_KEY&lt;/code&gt; 环境变量中提供您的API密钥。</target>
        </trans-unit>
        <trans-unit id="13ea1baa5061548749cb2016bbfa1dbbce34e39c" translate="yes" xml:space="preserve">
          <source>Alternatively, provide your Signing key in the &lt;code&gt;MAILGUN_INGRESS_SIGNING_KEY&lt;/code&gt; environment variable.</source>
          <target state="translated">或者，在 &lt;code&gt;MAILGUN_INGRESS_SIGNING_KEY&lt;/code&gt; 环境变量中提供您的签名密钥。</target>
        </trans-unit>
        <trans-unit id="4c374e692389e4818e01848b228382e028cea90a" translate="yes" xml:space="preserve">
          <source>Alternatively, the separate gem &lt;a href=&quot;https://github.com/svenfuchs/rails-i18n&quot;&gt;rails-i18n&lt;/a&gt; can be used to provide a fuller set of locale-specific pluralization rules.</source>
          <target state="translated">或者，可以使用单独的gem &lt;a href=&quot;https://github.com/svenfuchs/rails-i18n&quot;&gt;rails-i18n&lt;/a&gt;提供一组完整的特定于语言环境的复数规则。</target>
        </trans-unit>
        <trans-unit id="6294d7bb15b0a2eb5804b0892583a0eaff889cf3" translate="yes" xml:space="preserve">
          <source>Alternatively, you can add prefixes to your path without using a separate directory by using &lt;code&gt;scope&lt;/code&gt;. &lt;code&gt;scope&lt;/code&gt; takes additional options which apply to all enclosed routes.</source>
          <target state="translated">另外，您可以通过使用 &lt;code&gt;scope&lt;/code&gt; 将前缀添加到路径中，而无需使用单独的目录。 &lt;code&gt;scope&lt;/code&gt; 采用了适用于所有封闭路线的其他选项。</target>
        </trans-unit>
        <trans-unit id="e35c2ddbab3eb650e79ea140974f7362bc05ae29" translate="yes" xml:space="preserve">
          <source>Alternatively, you can also do it through the &lt;code&gt;config&lt;/code&gt; method on the &lt;code&gt;Rails.application&lt;/code&gt; object:</source>
          <target state="translated">另外，您也可以通过 &lt;code&gt;Rails.application&lt;/code&gt; 对象上的 &lt;code&gt;config&lt;/code&gt; 方法来执行此操作：</target>
        </trans-unit>
        <trans-unit id="4df3a74dcc4244a9eec9eff76488c406fb9f536b" translate="yes" xml:space="preserve">
          <source>Alternatively, you can benefit from Bundler's Rake tasks. You can see a full list with the following:</source>
          <target state="translated">另外,您也可以从Bundler的Rake任务中获益。您可以通过以下内容查看完整的列表。</target>
        </trans-unit>
        <trans-unit id="39d8eaf6edb369da758978e27bc2ce0ec4f78c96" translate="yes" xml:space="preserve">
          <source>Alternatively, you can call &lt;code&gt;ActionController::Base.cache_store&lt;/code&gt; outside of a configuration block.</source>
          <target state="translated">另外，您可以在配置块之外调用 &lt;code&gt;ActionController::Base.cache_store&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a95bc602130dbdf4785d2f023a30a4d3e9de8676" translate="yes" xml:space="preserve">
          <source>Alternatively, you can exert more control over the asset host by setting &lt;code&gt;asset_host&lt;/code&gt; to a proc like this:</source>
          <target state="translated">另外，您可以通过将 &lt;code&gt;asset_host&lt;/code&gt; 设置为以下过程来对资产宿主施加更多控制：</target>
        </trans-unit>
        <trans-unit id="bac7d3c95e0ea38693ed85d93db7c937bf777346" translate="yes" xml:space="preserve">
          <source>Alternatively, you can pass a &lt;a href=&quot;../../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; formatted as an ISO8601 date as the values for &amp;ldquo;min&amp;rdquo; and &amp;ldquo;max.&amp;rdquo;</source>
          <target state="translated">或者，您可以将格式为ISO8601日期的&lt;a href=&quot;../../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;传递为&amp;ldquo; min&amp;rdquo;和&amp;ldquo; max&amp;rdquo;的值。</target>
        </trans-unit>
        <trans-unit id="aba13fe82733fa1012342b874c8504a5be33a3a4" translate="yes" xml:space="preserve">
          <source>Alternatively, you can pass a &lt;a href=&quot;../../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; formatted as an ISO8601 datetime as the values for &amp;ldquo;min&amp;rdquo; and &amp;ldquo;max.&amp;rdquo;</source>
          <target state="translated">或者，您可以将格式为ISO8601日期时间的&lt;a href=&quot;../../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;传递为&amp;ldquo; min&amp;rdquo;和&amp;ldquo; max&amp;rdquo;的值。</target>
        </trans-unit>
        <trans-unit id="77be55c33cc0df24b7f208d448ca8a1176b645f5" translate="yes" xml:space="preserve">
          <source>Alternatively, you can pass a &lt;a href=&quot;../../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; formatted as an ISO8601 time as the values for &amp;ldquo;min&amp;rdquo; and &amp;ldquo;max.&amp;rdquo;</source>
          <target state="translated">或者，您可以将格式为ISO8601时间的&lt;a href=&quot;../../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;传递为&amp;ldquo; min&amp;rdquo;和&amp;ldquo; max&amp;rdquo;的值。</target>
        </trans-unit>
        <trans-unit id="1d14dd2c7b4bc7808037fe5d6f883da3a305e078" translate="yes" xml:space="preserve">
          <source>Alternatively, you can pass a &lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt; formatted as an ISO8601 date as the values for &amp;ldquo;min&amp;rdquo; and &amp;ldquo;max.&amp;rdquo;</source>
          <target state="translated">或者，您可以将格式为ISO8601日期的&lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt;传递为&amp;ldquo; min&amp;rdquo;和&amp;ldquo; max&amp;rdquo;的值。</target>
        </trans-unit>
        <trans-unit id="b970f2e9e47cf727b96f6b291904d4ecd3de570e" translate="yes" xml:space="preserve">
          <source>Alternatively, you can pass a &lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt; formatted as an ISO8601 datetime as the values for &amp;ldquo;min&amp;rdquo; and &amp;ldquo;max.&amp;rdquo;</source>
          <target state="translated">或者，您可以将格式为ISO8601日期时间的&lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt;传递为&amp;ldquo; min&amp;rdquo;和&amp;ldquo; max&amp;rdquo;的值。</target>
        </trans-unit>
        <trans-unit id="1843c65d7f93e8e6c9b161c7d5d4ab49f3527e7e" translate="yes" xml:space="preserve">
          <source>Alternatively, you can pass a &lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt; formatted as an ISO8601 time as the values for &amp;ldquo;min&amp;rdquo; and &amp;ldquo;max.&amp;rdquo;</source>
          <target state="translated">或者，您可以将格式为ISO8601时间的&lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt;传递为&amp;ldquo; min&amp;rdquo;和&amp;ldquo; max&amp;rdquo;的值。</target>
        </trans-unit>
        <trans-unit id="46d994de18dcb4424d7f73af5989f8aeb6722eed" translate="yes" xml:space="preserve">
          <source>Alternatively, you can pass just the model object itself (if the first argument isn't a string or symbol &lt;code&gt;fields_for&lt;/code&gt; will realize that the name has been omitted) -</source>
          <target state="translated">另外，您可以只传递模型对象本身（如果第一个参数不是字符串或符号， &lt;code&gt;fields_for&lt;/code&gt; 将意识到名称已被省略）-</target>
        </trans-unit>
        <trans-unit id="03e74004f79cbb0769cabb44ead0328304de2507" translate="yes" xml:space="preserve">
          <source>Alternatively, you can require that the specified attribute does &lt;em&gt;not&lt;/em&gt; match the regular expression by using the &lt;code&gt;:without&lt;/code&gt; option.</source>
          <target state="translated">或者，您可以使用 &lt;code&gt;:without&lt;/code&gt; 选项来要求指定的属性与正则表达式&lt;em&gt;不&lt;/em&gt;匹配。</target>
        </trans-unit>
        <trans-unit id="c74ed37974af9761b14afb51a0a1b6bb9751228d" translate="yes" xml:space="preserve">
          <source>Alternatively, you can require that the specified attribute does &lt;em&gt;not&lt;/em&gt; match the regular expression:</source>
          <target state="translated">或者，您可以要求指定的属性与正则表达式&lt;em&gt;不&lt;/em&gt;匹配：</target>
        </trans-unit>
        <trans-unit id="02fa63dba7b9231ffc821d00c3f6770c77528ee6" translate="yes" xml:space="preserve">
          <source>Alternatively, you can use &lt;code&gt;up&lt;/code&gt; and &lt;code&gt;down&lt;/code&gt; instead of &lt;code&gt;change&lt;/code&gt;:</source>
          <target state="translated">另外，您也可以使用 &lt;code&gt;up&lt;/code&gt; 和 &lt;code&gt;down&lt;/code&gt; 的，而不是 &lt;code&gt;change&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="ffeb89ebe394e9e4de0de3a35b1e0ee25693abc6" translate="yes" xml:space="preserve">
          <source>Alternatively, you can use named placeholders in the template, and pass a hash as the second element of the array. The names in the template are replaced with the corresponding values from the hash.</source>
          <target state="translated">或者,你可以在模板中使用命名的占位符,并传递一个哈希作为数组的第二个元素。模板中的名字会被哈希中的相应值所取代。</target>
        </trans-unit>
        <trans-unit id="a1be13b744d42af3ba5eca039b4637c1bb328279" translate="yes" xml:space="preserve">
          <source>Alternatively, you may enable auto-instantiation of the fixture data. For instance, take the following tests:</source>
          <target state="translated">另外,您也可以启用夹具数据的自动实例化。例如,进行以下测试。</target>
        </trans-unit>
        <trans-unit id="c85c58dec99e5ab948d510b95570ff7548c7b434" translate="yes" xml:space="preserve">
          <source>Alternatively:</source>
          <target state="translated">Alternatively:</target>
        </trans-unit>
        <trans-unit id="8330245fbd82c88299072c1db969e6b8ea8db2e7" translate="yes" xml:space="preserve">
          <source>Alternatives for &lt;a href=&quot;findermethods#method-i-find&quot;&gt;&lt;code&gt;find&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;findermethods#method-i-find&quot;&gt; &lt;code&gt;find&lt;/code&gt; &lt;/a&gt;替代品</target>
        </trans-unit>
        <trans-unit id="dc93bbc3fcccbd4661f045660167badf54caa846" translate="yes" xml:space="preserve">
          <source>Alternatives for &lt;a href=&quot;findermethods#method-i-find&quot;&gt;find&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;findermethods#method-i-find&quot;&gt;寻找&lt;/a&gt;替代品</target>
        </trans-unit>
        <trans-unit id="1051bb47b242ca4a25c1f10906ef7d10d2214704" translate="yes" xml:space="preserve">
          <source>Alternatives like</source>
          <target state="translated">替代产品如</target>
        </trans-unit>
        <trans-unit id="d399a34b4a48bad3999fab2100e76eece5ab70d3" translate="yes" xml:space="preserve">
          <source>Alters the string by removing all occurrences of the patterns.</source>
          <target state="translated">通过删除所有模式的出现来改变字符串。</target>
        </trans-unit>
        <trans-unit id="6b1368e75be63c14a632c66b6e96aed6a097a4eb" translate="yes" xml:space="preserve">
          <source>Although Active Record does not provide all the tools for working directly with such features, the &lt;code&gt;execute&lt;/code&gt; method can be used to execute arbitrary SQL.</source>
          <target state="translated">尽管Active Record并未提供直接使用这些功能的所有工具，但 &lt;code&gt;execute&lt;/code&gt; 方法可用于执行任意SQL。</target>
        </trans-unit>
        <trans-unit id="e2053f9f6a4dd494510b296468d595a7da3d3753" translate="yes" xml:space="preserve">
          <source>Although all secondary services receive uploads, downloads are always handled by the primary service.</source>
          <target state="translated">虽然所有的辅助服务都会接收上传,但下载总是由主服务处理。</target>
        </trans-unit>
        <trans-unit id="5c9f620f93b54edfbbedf5df7fb1f2782fc9dabd" translate="yes" xml:space="preserve">
          <source>Although in the above example it looks as though this method returns an array, it actually returns a relation object and can have other query methods appended to it, such as the other methods in &lt;a href=&quot;querymethods&quot;&gt;&lt;code&gt;ActiveRecord::QueryMethods&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">尽管在上面的示例中，该方法看起来好像返回了一个数组，但实际上它返回了一个关系对象，并且可以在其上附加其他查询方法，例如&lt;a href=&quot;querymethods&quot;&gt; &lt;code&gt;ActiveRecord::QueryMethods&lt;/code&gt; &lt;/a&gt;的其他方法。</target>
        </trans-unit>
        <trans-unit id="c6af68214d4b6d2a9f9190d3c42c110f5c45fff9" translate="yes" xml:space="preserve">
          <source>Although in the above example it looks as though this method returns an array, it actually returns a relation object and can have other query methods appended to it, such as the other methods in &lt;a href=&quot;querymethods&quot;&gt;ActiveRecord::QueryMethods&lt;/a&gt;.</source>
          <target state="translated">尽管在上面的示例中，该方法看起来好像返回了一个数组，但实际上它返回了一个关系对象，并且可以在其上附加其他查询方法，例如&lt;a href=&quot;querymethods&quot;&gt;ActiveRecord :: QueryMethods中&lt;/a&gt;的其他方法。</target>
        </trans-unit>
        <trans-unit id="d2c61865def204ad9641e16916cabf7d68077c64" translate="yes" xml:space="preserve">
          <source>Although the &lt;code&gt;:counter_cache&lt;/code&gt; option is specified on the model that includes the &lt;code&gt;belongs_to&lt;/code&gt; declaration, the actual column must be added to the &lt;em&gt;associated&lt;/em&gt; (&lt;code&gt;has_many&lt;/code&gt;) model. In the case above, you would need to add a column named &lt;code&gt;books_count&lt;/code&gt; to the &lt;code&gt;Author&lt;/code&gt; model.</source>
          <target state="translated">尽管 &lt;code&gt;:counter_cache&lt;/code&gt; 选项是在包含 &lt;code&gt;belongs_to&lt;/code&gt; 声明的模型上指定的，但实际的列必须添加到&lt;em&gt;关联的&lt;/em&gt;（ &lt;code&gt;has_many&lt;/code&gt; ）模型中。在上述情况下，您将需要一个名为列添加 &lt;code&gt;books_count&lt;/code&gt; 到 &lt;code&gt;Author&lt;/code&gt; 的模型。</target>
        </trans-unit>
        <trans-unit id="6f45253b781987ecda3717333d386df11d9c4116" translate="yes" xml:space="preserve">
          <source>Although the same partial will be rendered into both views, Action View's submit helper will return &quot;Create Zone&quot; for the new action and &quot;Update Zone&quot; for the edit action.</source>
          <target state="translated">虽然相同的局部将被渲染到两个视图中,但Action View的提交助手将为新动作返回 &quot;创建区域&quot;,为编辑动作返回 &quot;更新区域&quot;。</target>
        </trans-unit>
        <trans-unit id="6839456ef7ff57a6b95cdb36a6c2af34e0c31689" translate="yes" xml:space="preserve">
          <source>Although the usage and purpose of &lt;code&gt;fields_for&lt;/code&gt; is similar to &lt;code&gt;form_for&lt;/code&gt;'s, its method signature is slightly different. Like &lt;code&gt;form_for&lt;/code&gt;, it yields a &lt;a href=&quot;formbuilder&quot;&gt;&lt;code&gt;FormBuilder&lt;/code&gt;&lt;/a&gt; object associated with a particular model object to a block, and within the block allows methods to be called on the builder to generate fields associated with the model object. Fields may reflect a model object in two ways - how they are named (hence how submitted values appear within the &lt;code&gt;params&lt;/code&gt; hash in the controller) and what default values are shown when the form the fields appear in is first displayed. In order for both of these features to be specified independently, both an object name (represented by either a symbol or string) and the object itself can be passed to the method separately -</source>
          <target state="translated">尽管 &lt;code&gt;fields_for&lt;/code&gt; 的用法和目的与 &lt;code&gt;form_for&lt;/code&gt; 的相似，但其方法签名略有不同。像 &lt;code&gt;form_for&lt;/code&gt; 一样，它将与特定模型对象关联的&lt;a href=&quot;formbuilder&quot;&gt; &lt;code&gt;FormBuilder&lt;/code&gt; &lt;/a&gt;对象生成到一个块，并且在该块内允许在构建器上调用方法以生成与该模型对象关联的字段。字段可以两种方式反映模型对象-字段的命名方式（因此，提交的值如何在 &lt;code&gt;params&lt;/code&gt; 出现控制器中的哈希值）以及字段首次显示时所显示的默认值。为了分别指定这两个功能，可以将对象名称（用符号或字符串表示）和对象本身分别传递给方法-</target>
        </trans-unit>
        <trans-unit id="b35662f569f6d6fb78f283ce2762701d72ea31ac" translate="yes" xml:space="preserve">
          <source>Although the usage and purpose of &lt;code&gt;fields_for&lt;/code&gt; is similar to &lt;code&gt;form_for&lt;/code&gt;'s, its method signature is slightly different. Like &lt;code&gt;form_for&lt;/code&gt;, it yields a &lt;a href=&quot;formbuilder&quot;&gt;FormBuilder&lt;/a&gt; object associated with a particular model object to a block, and within the block allows methods to be called on the builder to generate fields associated with the model object. Fields may reflect a model object in two ways - how they are named (hence how submitted values appear within the &lt;code&gt;params&lt;/code&gt; hash in the controller) and what default values are shown when the form the fields appear in is first displayed. In order for both of these features to be specified independently, both an object name (represented by either a symbol or string) and the object itself can be passed to the method separately -</source>
          <target state="translated">尽管 &lt;code&gt;fields_for&lt;/code&gt; 的用法和目的与 &lt;code&gt;form_for&lt;/code&gt; 相似，但其方法签名略有不同。像 &lt;code&gt;form_for&lt;/code&gt; 一样，它将与特定模型对象关联的&lt;a href=&quot;formbuilder&quot;&gt;FormBuilder&lt;/a&gt;对象生成到一个块，并且在该块内允许在构建器上调用方法以生成与该模型对象关联的字段。字段可以两种方式反映模型对象-字段的命名方式（因此，提交的值在 &lt;code&gt;params&lt;/code&gt; 控制器中的哈希值）以及字段首次显示时所显示的默认值。为了分别指定这两个功能，可以将对象名称（用符号或字符串表示）和对象本身分别传递给方法-</target>
        </trans-unit>
        <trans-unit id="f58673481a6258cedbfd064cbf8c110b4596545b" translate="yes" xml:space="preserve">
          <source>Although this command ignores most &lt;code&gt;options&lt;/code&gt; and the block if one is given, it can be helpful to provide these in a migration's &lt;code&gt;change&lt;/code&gt; method so it can be reverted. In that case, &lt;code&gt;options&lt;/code&gt; and the block will be used by &lt;a href=&quot;schemastatements#method-i-create_table&quot;&gt;&lt;code&gt;create_table&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">尽管此命令会忽略大多数 &lt;code&gt;options&lt;/code&gt; 和给出的块（如果已给出），但是在迁移的 &lt;code&gt;change&lt;/code&gt; 方法中提供这些选项将很有帮助，因此可以将其还原。在这种情况下，&lt;a href=&quot;schemastatements#method-i-create_table&quot;&gt; &lt;code&gt;create_table&lt;/code&gt; &lt;/a&gt;将使用 &lt;code&gt;options&lt;/code&gt; 和该块。</target>
        </trans-unit>
        <trans-unit id="0932c62cb0abea26ba175202348bb2faca25c2b6" translate="yes" xml:space="preserve">
          <source>Although this command ignores most &lt;code&gt;options&lt;/code&gt; and the block if one is given, it can be helpful to provide these in a migration's &lt;code&gt;change&lt;/code&gt; method so it can be reverted. In that case, &lt;code&gt;options&lt;/code&gt; and the block will be used by &lt;a href=&quot;schemastatements#method-i-create_table&quot;&gt;create_table&lt;/a&gt;.</source>
          <target state="translated">尽管此命令将忽略大多数 &lt;code&gt;options&lt;/code&gt; 和给出的块（如果已给出），但在迁移的 &lt;code&gt;change&lt;/code&gt; 方法中提供这些选项将很有帮助，因此可以将其还原。在这种情况下，&lt;a href=&quot;schemastatements#method-i-create_table&quot;&gt;create_table&lt;/a&gt;将使用 &lt;code&gt;options&lt;/code&gt; 和该块。</target>
        </trans-unit>
        <trans-unit id="d8558c24064c2b40fab6955cdfdb7aab2c5d03c6" translate="yes" xml:space="preserve">
          <source>Although this command ignores most &lt;code&gt;options&lt;/code&gt; and the block if one is given, it can be helpful to provide these in a migration's &lt;code&gt;change&lt;/code&gt; method so it can be reverted. In that case, &lt;code&gt;options&lt;/code&gt; and the block will be used by create_table.</source>
          <target state="translated">尽管此命令将忽略大多数 &lt;code&gt;options&lt;/code&gt; 和给出的块（如果已给出），但在迁移的 &lt;code&gt;change&lt;/code&gt; 方法中提供这些选项将很有帮助，因此可以将其还原。在这种情况下，create_table将使用 &lt;code&gt;options&lt;/code&gt; 和块。</target>
        </trans-unit>
        <trans-unit id="233df4c553b902eb726c879b585c38c74fe72482" translate="yes" xml:space="preserve">
          <source>Although this command ignores the block if one is given, it can be helpful to provide one in a migration's &lt;code&gt;change&lt;/code&gt; method so it can be reverted. In that case, the block will be used by &lt;a href=&quot;schemastatements#method-i-create_join_table&quot;&gt;&lt;code&gt;create_join_table&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">尽管如果给出了该命令，该命令将忽略该块，但是在迁移的 &lt;code&gt;change&lt;/code&gt; 方法中提供一个块可能会有所帮助，以便可以将其还原。在这种情况下，该块将由&lt;a href=&quot;schemastatements#method-i-create_join_table&quot;&gt; &lt;code&gt;create_join_table&lt;/code&gt; 使用&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="205d9c798140afb0c736fae9f7d5f5aa30ff778b" translate="yes" xml:space="preserve">
          <source>Although this command ignores the block if one is given, it can be helpful to provide one in a migration's &lt;code&gt;change&lt;/code&gt; method so it can be reverted. In that case, the block will be used by &lt;a href=&quot;schemastatements#method-i-create_join_table&quot;&gt;create_join_table&lt;/a&gt;.</source>
          <target state="translated">尽管如果给出了该命令，该命令将忽略该块，但是在迁移的 &lt;code&gt;change&lt;/code&gt; 方法中提供一个可能会有所帮助，以便可以将其还原。在这种情况下，该块将由&lt;a href=&quot;schemastatements#method-i-create_join_table&quot;&gt;create_join_table使用&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="288af6d1637fb39626dd5e03813b6a6332c21149" translate="yes" xml:space="preserve">
          <source>Although you can still use regular method definitions, using the &lt;code&gt;test&lt;/code&gt; macro allows for a more readable test name.</source>
          <target state="translated">尽管您仍然可以使用常规方法定义，但是使用 &lt;code&gt;test&lt;/code&gt; 宏可以使可读性更高的测试名称。</target>
        </trans-unit>
        <trans-unit id="ee7e82529b52759124aa3fae9267c55f14e921f9" translate="yes" xml:space="preserve">
          <source>Always specify an expected compiled filename that ends with &lt;code&gt;.js&lt;/code&gt; or &lt;code&gt;.css&lt;/code&gt;, even if you want to add Sass or CoffeeScript files to the precompile array.</source>
          <target state="translated">即使您要将Sass或CoffeeScript文件添加到预编译数组中，也始终要指定以 &lt;code&gt;.js&lt;/code&gt; 或 &lt;code&gt;.css&lt;/code&gt; 结尾的预期编译文件名。</target>
        </trans-unit>
        <trans-unit id="a4ebc1ec3200a16433b9a3cc85b9d24f41cb1cfd" translate="yes" xml:space="preserve">
          <source>Always use labels for checkbox and radio buttons. They associate text with a specific option and, by expanding the clickable region, make it easier for users to click the inputs.</source>
          <target state="translated">总是为复选框和单选按钮使用标签。它们将文本与特定的选项相关联,并通过扩大可点击区域,使用户更容易点击输入。</target>
        </trans-unit>
        <trans-unit id="183a0aecfea069bba7a6f8ed964d800ce79dde8c" translate="yes" xml:space="preserve">
          <source>Amazon S3 Service</source>
          <target state="translated">亚马逊S3服务</target>
        </trans-unit>
        <trans-unit id="cdcd6171f4f3f839c73b73ae94e1f86d9a222c13" translate="yes" xml:space="preserve">
          <source>Amount spent executing database queries in ms</source>
          <target state="translated">执行数据库查询所花费的金额(毫秒)</target>
        </trans-unit>
        <trans-unit id="8e1a15b64cf5ba0bcc3e321279672c95a142fd04" translate="yes" xml:space="preserve">
          <source>Amount spent in view in ms</source>
          <target state="translated">查看中花费的金额(毫秒)</target>
        </trans-unit>
        <trans-unit id="d8dfebb216d4503983c9e8201c9fe32194b1d5d9" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;../actiondispatch/testresponse&quot;&gt;&lt;code&gt;ActionDispatch::TestResponse&lt;/code&gt;&lt;/a&gt; object, representing the response of the last HTTP response. In the above example, &lt;code&gt;@response&lt;/code&gt; becomes valid after calling &lt;code&gt;post&lt;/code&gt;. If the various assert methods are not sufficient, then you may use this object to inspect the HTTP response in detail.</source>
          <target state="translated">一个&lt;a href=&quot;../actiondispatch/testresponse&quot;&gt; &lt;code&gt;ActionDispatch::TestResponse&lt;/code&gt; &lt;/a&gt;对象，代表上一个HTTP响应的响应。在上面的示例中， &lt;code&gt;@response&lt;/code&gt; 在调用 &lt;code&gt;post&lt;/code&gt; 之后变为有效。如果各种断言方法还不够，则可以使用此对象详细检查HTTP响应。</target>
        </trans-unit>
        <trans-unit id="64af822b0234ea3b66ef9618d8847d407fadbb55" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;../actiondispatch/testresponse&quot;&gt;ActionDispatch::TestResponse&lt;/a&gt; object, representing the response of the last HTTP response. In the above example, &lt;code&gt;@response&lt;/code&gt; becomes valid after calling &lt;code&gt;post&lt;/code&gt;. If the various assert methods are not sufficient, then you may use this object to inspect the HTTP response in detail.</source>
          <target state="translated">一个&lt;a href=&quot;../actiondispatch/testresponse&quot;&gt;ActionDispatch :: TestResponse&lt;/a&gt;对象，代表上一个HTTP响应的响应。在上面的示例中， &lt;code&gt;@response&lt;/code&gt; 在调用 &lt;code&gt;post&lt;/code&gt; 之后生效。如果各种断言方法还不够，则可以使用此对象详细检查HTTP响应。</target>
        </trans-unit>
        <trans-unit id="d5cfc5d07037703b41035f409b5b2fff1e813a6f" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;../transactionisolationerror&quot;&gt;&lt;code&gt;ActiveRecord::TransactionIsolationError&lt;/code&gt;&lt;/a&gt; will be raised if:</source>
          <target state="translated">一个&lt;a href=&quot;../transactionisolationerror&quot;&gt; &lt;code&gt;ActiveRecord::TransactionIsolationError&lt;/code&gt; &lt;/a&gt;将提高，如果：</target>
        </trans-unit>
        <trans-unit id="5d7b6fcdd348c921edd7a828b11c0a080026a217" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;../transactionisolationerror&quot;&gt;ActiveRecord::TransactionIsolationError&lt;/a&gt; will be raised if:</source>
          <target state="translated">一个&lt;a href=&quot;../transactionisolationerror&quot;&gt;ActiveRecord的:: TransactionIsolationError&lt;/a&gt;将提高，如果：</target>
        </trans-unit>
        <trans-unit id="b5e777b3992ac5dceac5bf40ad1efe38cd9d91f5" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;api&quot;&gt;&lt;code&gt;API&lt;/code&gt;&lt;/a&gt; Controller is different from a normal controller in the sense that by default it doesn't include a number of features that are usually required by browser access only: layouts and templates rendering, flash, assets, and so on. This makes the entire controller stack thinner, suitable for &lt;a href=&quot;api&quot;&gt;&lt;code&gt;API&lt;/code&gt;&lt;/a&gt; applications. It doesn't mean you won't have such features if you need them: they're all available for you to include in your application, they're just not part of the default &lt;a href=&quot;api&quot;&gt;&lt;code&gt;API&lt;/code&gt;&lt;/a&gt; controller stack.</source>
          <target state="translated">一个&lt;a href=&quot;api&quot;&gt; &lt;code&gt;API&lt;/code&gt; &lt;/a&gt;控制器是在这个意义上正常的控制器不同，默认情况下它不包括一定数量的通常是由浏览器访问所需的功能只：布局和模板渲染，动画，资产，等等。这使整个控制器堆栈更薄，适合&lt;a href=&quot;api&quot;&gt; &lt;code&gt;API&lt;/code&gt; &lt;/a&gt;应用程序。这并不意味着您就不需要这些功能：可以将它们全部包含在应用程序中，它们也不是默认&lt;a href=&quot;api&quot;&gt; &lt;code&gt;API&lt;/code&gt; &lt;/a&gt;控制器堆栈的一部分。</target>
        </trans-unit>
        <trans-unit id="3e9511428e7b4d5f4dc56958cd180fec9bece568" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;api&quot;&gt;API&lt;/a&gt; Controller is different from a normal controller in the sense that by default it doesn't include a number of features that are usually required by browser access only: layouts and templates rendering, flash, assets, and so on. This makes the entire controller stack thinner, suitable for &lt;a href=&quot;api&quot;&gt;API&lt;/a&gt; applications. It doesn't mean you won't have such features if you need them: they're all available for you to include in your application, they're just not part of the default &lt;a href=&quot;api&quot;&gt;API&lt;/a&gt; controller stack.</source>
          <target state="translated">一个&lt;a href=&quot;api&quot;&gt;API&lt;/a&gt;控制器是在这个意义上正常的控制器不同，默认情况下它不包括一定数量的通常是由浏览器访问所需的功能只：布局和模板渲染，动画，资产，等等。这使整个控制器堆栈更薄，适用于&lt;a href=&quot;api&quot;&gt;API&lt;/a&gt;应用程序。这并不意味着您将不需要这些功能：可以将它们全部包含在应用程序中，它们也不是默认&lt;a href=&quot;api&quot;&gt;API&lt;/a&gt;控制器堆栈的一部分。</target>
        </trans-unit>
        <trans-unit id="efa4fd96637dbaf7c6dc8cb512964325347b6d38" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;engine&quot;&gt;&lt;code&gt;Engine&lt;/code&gt;&lt;/a&gt; with the responsibility of coordinating the whole boot process.</source>
          <target state="translated">一个负责协调整个引导过程的&lt;a href=&quot;engine&quot;&gt; &lt;code&gt;Engine&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="10eb42b036d3e99c1674443304c8df5f4c13b91b" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;engine&quot;&gt;Engine&lt;/a&gt; with the responsibility of coordinating the whole boot process.</source>
          <target state="translated">一个负责协调整个引导过程的&lt;a href=&quot;engine&quot;&gt;引擎&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="71a3b2277830b920dbe01ccb5d36348daf857bdf" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;#{prefix}attribute#{suffix}&lt;/code&gt; instance method must exist and accept at least the &lt;code&gt;attr&lt;/code&gt; argument.</source>
          <target state="translated">一个 &lt;code&gt;#{prefix}attribute#{suffix}&lt;/code&gt; 实例方法必须存在，并接受至少 &lt;code&gt;attr&lt;/code&gt; 说法。</target>
        </trans-unit>
        <trans-unit id="48c3a3e26f7fb75c14aaa5598957fa20a98f7695" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;ActionCable::Channel::ConnectionStub&lt;/code&gt;, representing the current HTTP connection.</source>
          <target state="translated">一个 &lt;code&gt;ActionCable::Channel::ConnectionStub&lt;/code&gt; ，表示当前的HTTP连接。</target>
        </trans-unit>
        <trans-unit id="04057077cce2368c5c60d36b0e2270879c53f0f9" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;ArgumentError&lt;/code&gt; will be raised if the callback has not already been set (unless the &lt;code&gt;:raise&lt;/code&gt; option is set to &lt;code&gt;false&lt;/code&gt;).</source>
          <target state="translated">一个 &lt;code&gt;ArgumentError&lt;/code&gt; 将提高，如果回调已不是集（除非 &lt;code&gt;:raise&lt;/code&gt; 选项设置为 &lt;code&gt;false&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="c4cbdfe0eaa619bdf79c9be50bd4408d69c2ef58" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;app&lt;/code&gt; directory tree</source>
          <target state="translated">一个 &lt;code&gt;app&lt;/code&gt; 目录树</target>
        </trans-unit>
        <trans-unit id="fbc3dc6cf6ab2edca0b550f018603ee041dc3db6" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;attribute#{suffix}&lt;/code&gt; instance method must exist and accept at least the &lt;code&gt;attr&lt;/code&gt; argument.</source>
          <target state="translated">一个 &lt;code&gt;attribute#{suffix}&lt;/code&gt; 实例方法必须存在并接受至少 &lt;code&gt;attr&lt;/code&gt; 参数。</target>
        </trans-unit>
        <trans-unit id="609238ab6ef0db65a23a14d0d31d5590e9fa5ad8" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;attributes&lt;/code&gt; hash must be defined and should contain any attributes you need to be serialized. &lt;code&gt;Attributes&lt;/code&gt; must be strings, not symbols. When called, serializable hash will use instance methods that match the name of the attributes hash's keys. In order to override this behavior, take a look at the private method &lt;code&gt;read_attribute_for_serialization&lt;/code&gt;.</source>
          <target state="translated">必须定义 &lt;code&gt;attributes&lt;/code&gt; 哈希，并且该哈希必须包含您需要序列化的所有属性。 &lt;code&gt;Attributes&lt;/code&gt; 必须是字符串，而不是符号。调用时，可序列化的哈希将使用与属性哈希的键的名称匹配的实例方法。为了覆盖此行为，请查看私有方法 &lt;code&gt;read_attribute_for_serialization&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b97da42e0dd436bedc6082a8ee54939c542fd04c" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;attributes&lt;/code&gt; hash must be defined and should contain any attributes you need to be serialized. Attributes must be strings, not symbols. When called, serializable hash will use instance methods that match the name of the attributes hash's keys. In order to override this behavior, take a look at the private method &lt;code&gt;read_attribute_for_serialization&lt;/code&gt;.</source>
          <target state="translated">必须定义 &lt;code&gt;attributes&lt;/code&gt; 哈希，并且该哈希必须包含您需要序列化的所有属性。属性必须是字符串，而不是符号。调用时，可序列化的哈希将使用与属性哈希的键名匹配的实例方法。为了覆盖此行为，请查看私有方法 &lt;code&gt;read_attribute_for_serialization&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="48e15f80cff50d9b9deddfa5fc767b4539a8eea9" translate="yes" xml:space="preserve">
          <source>An API application (using &lt;code&gt;ActionController::API&lt;/code&gt;) comes with the following controller modules by default:</source>
          <target state="translated">默认情况下，API应用程序（使用 &lt;code&gt;ActionController::API&lt;/code&gt; ）随附以下控制器模块：</target>
        </trans-unit>
        <trans-unit id="9126ba3a4cce820ac887f382c15c3363dfd277f7" translate="yes" xml:space="preserve">
          <source>An API application comes with the following middleware by default:</source>
          <target state="translated">一个API应用程序默认带有以下中间件。</target>
        </trans-unit>
        <trans-unit id="47310594d1c1444d29ca8ec8d1e03ed759fba099" translate="yes" xml:space="preserve">
          <source>An Account class declares &lt;code&gt;has_one :beneficiary&lt;/code&gt;, which will add:</source>
          <target state="translated">Account类声明 &lt;code&gt;has_one :beneficiary&lt;/code&gt; ，它将添加：</target>
        </trans-unit>
        <trans-unit id="7f6c483b84e1d0b78d980d52aa136ba875b13b56" translate="yes" xml:space="preserve">
          <source>An ActionCable::Channel::ConnectionStub, representing the current HTTP connection.</source>
          <target state="translated">一个ActionCable::Channel::ConnectionStub,代表当前的HTTP连接。</target>
        </trans-unit>
        <trans-unit id="fe3243af3779b75396edc5789265c04b8eb9e0f2" translate="yes" xml:space="preserve">
          <source>An ActionController::TestRequest, representing the current HTTP request. You can modify this object before sending the HTTP request. For example, you might want to set some session properties before sending a GET request.</source>
          <target state="translated">一个ActionController::TestRequest,代表当前的HTTP请求。你可以在发送HTTP请求之前修改这个对象。例如,你可能想在发送GET请求之前设置一些会话属性。</target>
        </trans-unit>
        <trans-unit id="bfa118d553da36ca813aef197d24f148233ee97e" translate="yes" xml:space="preserve">
          <source>An Active Model class</source>
          <target state="translated">一个活动模型类</target>
        </trans-unit>
        <trans-unit id="95bf0de79678e9be4be7219adffb0664fe8b49ad" translate="yes" xml:space="preserve">
          <source>An Active Model instance</source>
          <target state="translated">一个活动模型实例</target>
        </trans-unit>
        <trans-unit id="1d5b170c935a1e4e0c48d69a1a07869c91bcabf2" translate="yes" xml:space="preserve">
          <source>An Introduction to Ajax</source>
          <target state="translated">Ajax简介</target>
        </trans-unit>
        <trans-unit id="6d8f0a00dfd1a6a8515259153ae449cc766b1c20" translate="yes" xml:space="preserve">
          <source>An abstract cache store class. There are multiple cache store implementations, each having its own additional features. See the classes under the &lt;a href=&quot;../cache&quot;&gt;&lt;code&gt;ActiveSupport::Cache&lt;/code&gt;&lt;/a&gt; module, e.g. &lt;a href=&quot;memcachestore&quot;&gt;&lt;code&gt;ActiveSupport::Cache::MemCacheStore&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;memcachestore&quot;&gt;&lt;code&gt;MemCacheStore&lt;/code&gt;&lt;/a&gt; is currently the most popular cache store for large production websites.</source>
          <target state="translated">抽象的缓存存储库类。有多种高速缓存存储实现，每种实现都有其自己的附加功能。请参阅&lt;a href=&quot;../cache&quot;&gt; &lt;code&gt;ActiveSupport::Cache&lt;/code&gt; &lt;/a&gt;模块下的类，例如&lt;a href=&quot;memcachestore&quot;&gt; &lt;code&gt;ActiveSupport::Cache::MemCacheStore&lt;/code&gt; &lt;/a&gt;。&lt;a href=&quot;memcachestore&quot;&gt; &lt;code&gt;MemCacheStore&lt;/code&gt; &lt;/a&gt;是当前用于大型生产网站的最受欢迎的缓存存储。</target>
        </trans-unit>
        <trans-unit id="dd75fa6c1747caff9d68263a57ee799aebc9b9ad" translate="yes" xml:space="preserve">
          <source>An abstract cache store class. There are multiple cache store implementations, each having its own additional features. See the classes under the &lt;a href=&quot;../cache&quot;&gt;ActiveSupport::Cache&lt;/a&gt; module, e.g. &lt;a href=&quot;memcachestore&quot;&gt;ActiveSupport::Cache::MemCacheStore&lt;/a&gt;. &lt;a href=&quot;memcachestore&quot;&gt;MemCacheStore&lt;/a&gt; is currently the most popular cache store for large production websites.</source>
          <target state="translated">抽象的缓存存储库类。有多种缓存存储实现，每种实现都有其自己的附加功能。请参阅&lt;a href=&quot;../cache&quot;&gt;ActiveSupport :: Cache&lt;/a&gt;模块下的类，例如&lt;a href=&quot;memcachestore&quot;&gt;ActiveSupport :: Cache :: MemCacheStore&lt;/a&gt;。&lt;a href=&quot;memcachestore&quot;&gt;MemCacheStore&lt;/a&gt;当前是大型生产网站上最流行的缓存存储。</target>
        </trans-unit>
        <trans-unit id="82e56178259fd4c2afba8ab51759c64d2c6a89b2" translate="yes" xml:space="preserve">
          <source>An action may contain only a single render or a single redirect. Attempting to try to do either again will result in a DoubleRenderError:</source>
          <target state="translated">一个动作可能只包含一个渲染或一个重定向。试图再次尝试做任何一个动作都会导致DoubleRenderError。</target>
        </trans-unit>
        <trans-unit id="e1b39aec52c022acdb3b81e18c38b938d5920801" translate="yes" xml:space="preserve">
          <source>An alternative and cleaner syntax is to nest the hash conditions:</source>
          <target state="translated">另一种更简洁的语法是嵌套哈希条件。</target>
        </trans-unit>
        <trans-unit id="41a6b64c928bd4529f3c47e595f1af06735cc622" translate="yes" xml:space="preserve">
          <source>An application with authenticated users may allow users to set a locale preference through the application's interface. With this approach, a user's selected locale preference is persisted in the database and used to set the locale for authenticated requests by that user.</source>
          <target state="translated">具有已认证用户的应用程序可以允许用户通过应用程序的界面设置语言环境偏好。通过这种方法,用户所选择的语言环境偏好将被保存在数据库中,并用于为该用户的认证请求设置语言环境。</target>
        </trans-unit>
        <trans-unit id="b37150341cfe0055b97fea3f0a77bf2b46d5c218" translate="yes" xml:space="preserve">
          <source>An arbitrary expression is passed in and evaluated.</source>
          <target state="translated">传入一个任意的表达式并进行评估。</target>
        </trans-unit>
        <trans-unit id="ce2871a260e968148a5a6075488b3a7a158ece5f" translate="yes" xml:space="preserve">
          <source>An arbitrary positive or negative difference can be specified. The default is &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">可以指定任意正或负差。默认值为 &lt;code&gt;1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="703ececf802bee63e6c27785f0adbbd344b8027c" translate="yes" xml:space="preserve">
          <source>An array may also be specified, to support testing multiple jobs.</source>
          <target state="translated">也可以指定一个数组,以支持测试多个作业。</target>
        </trans-unit>
        <trans-unit id="f2487b39ff86b650b7c39f579710e3a4f654d508" translate="yes" xml:space="preserve">
          <source>An array may be used in the hash to use the SQL IN operator:</source>
          <target state="translated">在哈希中可以使用一个数组来使用SQL IN操作符。</target>
        </trans-unit>
        <trans-unit id="b0ae95521e84dbcb739025cd5d6836b4c8c63876" translate="yes" xml:space="preserve">
          <source>An array of expressions can also be passed in and evaluated.</source>
          <target state="translated">也可以传入一个表达式数组并进行评估。</target>
        </trans-unit>
        <trans-unit id="9db2c71ae41649fadb1ac027e6204b9220e1a06b" translate="yes" xml:space="preserve">
          <source>An array of two elements. Exception class name and the message</source>
          <target state="translated">一个由两个元素组成的数组。异常类名称和信息</target>
        </trans-unit>
        <trans-unit id="ff25251f6d361fa6c505e64391ac2bcdbf59cca2" translate="yes" xml:space="preserve">
          <source>An array, which is passed to &lt;code&gt;polymorphic_url&lt;/code&gt;</source>
          <target state="translated">一个数组，该数组传递给 &lt;code&gt;polymorphic_url&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1c14bc3b2c9eb8cc4778bbc97a6f1479fe6bdeef" translate="yes" xml:space="preserve">
          <source>An assertion is a line of code that evaluates an object (or expression) for expected results. For example, an assertion can check:</source>
          <target state="translated">断言是对一个对象(或表达式)的预期结果进行评估的一行代码。例如,一个断言可以检查:</target>
        </trans-unit>
        <trans-unit id="82144a15cab2fb2b04087cbe69c034b85727b7ff" translate="yes" xml:space="preserve">
          <source>An easy solution to this caveat is to qualify the constant:</source>
          <target state="translated">解决这个注意事项的一个简单办法就是对常量进行限定。</target>
        </trans-unit>
        <trans-unit id="429846076bc81e0b3d15cfb4a7341407c2e32529" translate="yes" xml:space="preserve">
          <source>An elegant way to factor duplication out of options passed to a series of method calls. Each method called in the block, with the block variable as the receiver, will have its options merged with the default &lt;code&gt;options&lt;/code&gt; hash provided. Each method called on the block variable must take an options hash as its final argument.</source>
          <target state="translated">从传递给一系列方法调用的选项中考虑重复的一种优雅方法。以block变量作为接收器的块中调用的每个方法，其选项都将与提供的默认 &lt;code&gt;options&lt;/code&gt; 哈希值合并。在block变量上调用的每个方法都必须将选项哈希作为其最终参数。</target>
        </trans-unit>
        <trans-unit id="91007101e1dc6286c507986d58f3e5295880ff11" translate="yes" xml:space="preserve">
          <source>An email was delivered.</source>
          <target state="translated">一封邮件已经送达。</target>
        </trans-unit>
        <trans-unit id="1231ff3c6dc8f3796fa7e3eabc335ce5df113fcc" translate="yes" xml:space="preserve">
          <source>An email was generated.</source>
          <target state="translated">产生了一封邮件。</target>
        </trans-unit>
        <trans-unit id="80981f3e02ed84c81984e235545aec9e30f1bce8" translate="yes" xml:space="preserve">
          <source>An email was received.</source>
          <target state="translated">收到一封邮件。</target>
        </trans-unit>
        <trans-unit id="aa705901b74700a214d11ce3748f77c5e7c10017" translate="yes" xml:space="preserve">
          <source>An engine can also be a &lt;code&gt;Rack&lt;/code&gt; application. It can be useful if you have a &lt;code&gt;Rack&lt;/code&gt; application that you would like to provide with some of the &lt;code&gt;Engine&lt;/code&gt;'s features.</source>
          <target state="translated">引擎也可以是 &lt;code&gt;Rack&lt;/code&gt; 应用程序。如果您要为 &lt;code&gt;Rack&lt;/code&gt; 应用程序提供一些 &lt;code&gt;Engine&lt;/code&gt; 的功能，这将很有用。</target>
        </trans-unit>
        <trans-unit id="4faed36cb02bfb3db6d3986a87133363508fc3f4" translate="yes" xml:space="preserve">
          <source>An engine can also be a Rack application. It can be useful if you have a Rack application that you would like to wrap with &lt;code&gt;Engine&lt;/code&gt; and provide with some of the &lt;code&gt;Engine&lt;/code&gt;'s features.</source>
          <target state="translated">引擎也可以是Rack应用程序。如果您有一个Rack应用程序，希望与 &lt;code&gt;Engine&lt;/code&gt; 一起包装并提供一些 &lt;code&gt;Engine&lt;/code&gt; 的功能，这将很有用。</target>
        </trans-unit>
        <trans-unit id="b948b42d2038104c755c3fabe7e10379912ee255" translate="yes" xml:space="preserve">
          <source>An engine is nothing more than a railtie with some initializers already set. And since &lt;code&gt;Rails::Application&lt;/code&gt; is an engine, the same configuration described here can be used in both.</source>
          <target state="translated">引擎不过是已经设置了一些初始值设定项的Railtie。而且由于 &lt;code&gt;Rails::Application&lt;/code&gt; 是引擎，因此在这两者中都可以使用此处描述的相同配置。</target>
        </trans-unit>
        <trans-unit id="915542669aa3fbb47ec23ba8ee856956dc5d12f3" translate="yes" xml:space="preserve">
          <source>An entry point is a vulnerable URL and its parameters where an attacker can start an attack.</source>
          <target state="translated">入口点是指一个易受攻击的URL及其参数,攻击者可以在这里开始攻击。</target>
        </trans-unit>
        <trans-unit id="5b704e2ca559c8ca453a7f22a109a21b4f76f0d3" translate="yes" xml:space="preserve">
          <source>An enum lets you define an Array of values for an attribute and refer to them by name. The actual value stored in the database is an integer that has been mapped to one of the values.</source>
          <target state="translated">枚举可以让你为一个属性定义一个值的数组,并通过名称来引用它们。存储在数据库中的实际值是一个被映射到其中一个值的整数。</target>
        </trans-unit>
        <trans-unit id="19a65a0568922d7cb77801c6dc450f1590e7b1bd" translate="yes" xml:space="preserve">
          <source>An equivalent way of setting up this association this would be:</source>
          <target state="translated">相当于建立这个协会的方式这将是。</target>
        </trans-unit>
        <trans-unit id="7d07ac5842611c982505a07903b0023378596723" translate="yes" xml:space="preserve">
          <source>An error message can be specified.</source>
          <target state="translated">可以指定错误信息。</target>
        </trans-unit>
        <trans-unit id="b4a09acc84ac95bc376800c65bfda8451de1cb14" translate="yes" xml:space="preserve">
          <source>An error occurred. An &lt;code&gt;alert&lt;/code&gt; will display unless this event is canceled.</source>
          <target state="translated">发生错误。一个 &lt;code&gt;alert&lt;/code&gt; 将显示，除非该事件被取消。</target>
        </trans-unit>
        <trans-unit id="0b6fcab48cccc464b1ea84c011f8deef68358e9b" translate="yes" xml:space="preserve">
          <source>An example broadcasting for this channel looks like so:</source>
          <target state="translated">这个频道的广播例子是这样的。</target>
        </trans-unit>
        <trans-unit id="7209540ead51f233cb495d9ad952ad842db9b9bc" translate="yes" xml:space="preserve">
          <source>An example of calling where query method on the relation:</source>
          <target state="translated">在关系上调用where查询方法的一个例子。</target>
        </trans-unit>
        <trans-unit id="681617eb73507741689a47e5e99396b87df5713a" translate="yes" xml:space="preserve">
          <source>An example of use would be this.</source>
          <target state="translated">一个使用的例子是这样的。</target>
        </trans-unit>
        <trans-unit id="f7094f6136ea5c5da38e4a8ed6025a5ae4248659" translate="yes" xml:space="preserve">
          <source>An example would be Active Record log subscriber responsible for logging queries:</source>
          <target state="translated">一个例子就是负责记录查询的Active Record日志订阅者。</target>
        </trans-unit>
        <trans-unit id="baf0885bbe4f5079cdabeb1d1ebf713a0fa0510d" translate="yes" xml:space="preserve">
          <source>An example would be adding the following to your appropriate &lt;code&gt;config/environments/$RAILS_ENV.rb&lt;/code&gt; file:</source>
          <target state="translated">例如，将以下内容添加到适当的 &lt;code&gt;config/environments/$RAILS_ENV.rb&lt;/code&gt; 文件中：</target>
        </trans-unit>
        <trans-unit id="7bc31ff778b5c06dffb5c1a37768e57ab2c5736a" translate="yes" xml:space="preserve">
          <source>An example would be an Active Record subscriber responsible for collecting statistics about queries:</source>
          <target state="translated">一个例子是一个活动记录的订阅者,负责收集有关查询的统计数据。</target>
        </trans-unit>
        <trans-unit id="787c37772c48f9cbea5e238d243ed3a7d6432e13" translate="yes" xml:space="preserve">
          <source>An expected place for this code would be &lt;code&gt;lib/constraints&lt;/code&gt;.</source>
          <target state="translated">此代码的预期位置是 &lt;code&gt;lib/constraints&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a624963754fdabf720fcb72b7811406c8562d222" translate="yes" xml:space="preserve">
          <source>An extension name can be specified manually with &lt;code&gt;extname&lt;/code&gt;.</source>
          <target state="translated">可以使用 &lt;code&gt;extname&lt;/code&gt; 手动指定扩展名。</target>
        </trans-unit>
        <trans-unit id="d987daed1a1a03d497c6bea2dd15c780d9eb7cc8" translate="yes" xml:space="preserve">
          <source>An identifier for a Rails TimeZone object (e.g., &amp;ldquo;Eastern &lt;a href=&quot;time&quot;&gt;&lt;code&gt;Time&lt;/code&gt;&lt;/a&gt; (US &amp;amp; Canada)&amp;rdquo;, &lt;code&gt;-5.hours&lt;/code&gt;).</source>
          <target state="translated">Rails TimeZone对象的标识符（例如，&amp;ldquo;东部&lt;a href=&quot;time&quot;&gt; &lt;code&gt;Time&lt;/code&gt; &lt;/a&gt;（美国和加拿大）&amp;rdquo;，- &lt;code&gt;-5.hours&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="5f656abf10d46f51ee257808d9948ca36b77faea" translate="yes" xml:space="preserve">
          <source>An identifier for a Rails TimeZone object (e.g., &amp;ldquo;Eastern &lt;a href=&quot;time&quot;&gt;Time&lt;/a&gt; (US &amp;amp; Canada)&amp;rdquo;, &lt;code&gt;-5.hours&lt;/code&gt;).</source>
          <target state="translated">Rails TimeZone对象的标识符（例如，&amp;ldquo;东部&lt;a href=&quot;time&quot;&gt;时间&lt;/a&gt;（美国和加拿大）&amp;rdquo;，- &lt;code&gt;-5.hours&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="61ea51372b306f8635d8b27a58245aa576729ca9" translate="yes" xml:space="preserve">
          <source>An identifier for a TZInfo::Timezone object (e.g., &amp;ldquo;America/New_York&amp;rdquo;).</source>
          <target state="translated">TZInfo :: Timezone对象的标识符（例如，&amp;ldquo; America / New_York&amp;rdquo;）。</target>
        </trans-unit>
        <trans-unit id="02ec55c089b14a3585368466df961a79c7a6f8fb" translate="yes" xml:space="preserve">
          <source>An implementation might choose not to accept a previously used nonce or a previously used digest, in order to protect against a replay attack. Or, an implementation might choose to use one-time nonces or digests for POST, PUT, or PATCH requests and a time-stamp for GET requests. For more details on the issues involved see Section 4 of this document.</source>
          <target state="translated">为了防止重放攻击,一个实现可能会选择不接受以前使用过的nonce或以前使用过的摘要,或者,一个实现可能会选择对POST、PUT或PATCH请求使用一次性nonce或摘要,对GET请求使用时间戳。或者,实现可以选择对POST、PUT或PATCH请求使用一次性nonce或摘要,对GET请求使用时间戳。关于所涉及问题的更多细节,请参见本文档的第4节。</target>
        </trans-unit>
        <trans-unit id="021f0b23930b40ad6f47d2b9f7332c38a58d7e04" translate="yes" xml:space="preserve">
          <source>An important caveat with going through &lt;a href=&quot;classmethods#method-i-has_one&quot;&gt;&lt;code&gt;has_one&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;classmethods#method-i-has_many&quot;&gt;&lt;code&gt;has_many&lt;/code&gt;&lt;/a&gt; associations on the join model is that these associations are &lt;strong&gt;read-only&lt;/strong&gt;. For example, the following would not work following the previous example:</source>
          <target state="translated">在联接模型上经历&lt;a href=&quot;classmethods#method-i-has_one&quot;&gt; &lt;code&gt;has_one&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;classmethods#method-i-has_many&quot;&gt; &lt;code&gt;has_many&lt;/code&gt; &lt;/a&gt;关联的一个重要警告是，这些关联是&lt;strong&gt;只读的&lt;/strong&gt;。例如，下面的示例将不起作用：</target>
        </trans-unit>
        <trans-unit id="5e45c6709c1d9f30b70da78366b15abe084f78bc" translate="yes" xml:space="preserve">
          <source>An important caveat with going through &lt;a href=&quot;classmethods#method-i-has_one&quot;&gt;has_one&lt;/a&gt; or &lt;a href=&quot;classmethods#method-i-has_many&quot;&gt;has_many&lt;/a&gt; associations on the join model is that these associations are &lt;strong&gt;read-only&lt;/strong&gt;. For example, the following would not work following the previous example:</source>
          <target state="translated">在联接模型上经历&lt;a href=&quot;classmethods#method-i-has_one&quot;&gt;has_one&lt;/a&gt;或&lt;a href=&quot;classmethods#method-i-has_many&quot;&gt;has_many&lt;/a&gt;关联的一个重要警告是，这些关联是&lt;strong&gt;只读的&lt;/strong&gt;。例如，下面的示例将不起作用：</target>
        </trans-unit>
        <trans-unit id="f48952689b60b2504e34eef24671946bb56a9131" translate="yes" xml:space="preserve">
          <source>An incoming path of &lt;code&gt;/photos/1/2&lt;/code&gt; will be dispatched to the &lt;code&gt;show&lt;/code&gt; action of the &lt;code&gt;PhotosController&lt;/code&gt;. &lt;code&gt;params[:id]&lt;/code&gt; will be &lt;code&gt;&quot;1&quot;&lt;/code&gt;, and &lt;code&gt;params[:user_id]&lt;/code&gt; will be &lt;code&gt;&quot;2&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;/photos/1/2&lt;/code&gt; 的输入路径将分派到 &lt;code&gt;PhotosController&lt;/code&gt; 的 &lt;code&gt;show&lt;/code&gt; 动作。 &lt;code&gt;params[:id]&lt;/code&gt; 将为 &lt;code&gt;&quot;1&quot;&lt;/code&gt; ， &lt;code&gt;params[:user_id]&lt;/code&gt; 将为 &lt;code&gt;&quot;2&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3cf662d81e10266a8db7c553c4c539d7e040f909" translate="yes" xml:space="preserve">
          <source>An incoming path of &lt;code&gt;/photos/1?user_id=2&lt;/code&gt; will be dispatched to the &lt;code&gt;show&lt;/code&gt; action of the &lt;code&gt;Photos&lt;/code&gt; controller. &lt;code&gt;params&lt;/code&gt; will be &lt;code&gt;{ controller: 'photos', action: 'show', id: '1', user_id: '2' }&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;/photos/1?user_id=2&lt;/code&gt; 的输入路径将被分派到 &lt;code&gt;Photos&lt;/code&gt; 控制器的 &lt;code&gt;show&lt;/code&gt; 操作。 &lt;code&gt;params&lt;/code&gt; 将是 &lt;code&gt;{ controller: 'photos', action: 'show', id: '1', user_id: '2' }&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="faeb68b4a4796a96c78a23c60df9594f35c0307b" translate="yes" xml:space="preserve">
          <source>An instance method &lt;code&gt;#{prefix}attribute&lt;/code&gt; must exist and accept at least the &lt;code&gt;attr&lt;/code&gt; argument.</source>
          <target state="translated">实例方法 &lt;code&gt;#{prefix}attribute&lt;/code&gt; 必须存在并且至少接受 &lt;code&gt;attr&lt;/code&gt; 参数。</target>
        </trans-unit>
        <trans-unit id="017e391b1ee1f88800aadd08478d5c74e9acc848" translate="yes" xml:space="preserve">
          <source>An instance of &lt;a href=&quot;timewithzone&quot;&gt;&lt;code&gt;ActiveSupport::TimeWithZone&lt;/code&gt;&lt;/a&gt; is never blank</source>
          <target state="translated">&lt;a href=&quot;timewithzone&quot;&gt; &lt;code&gt;ActiveSupport::TimeWithZone&lt;/code&gt; &lt;/a&gt;的实例永远不会为空</target>
        </trans-unit>
        <trans-unit id="9702b8d9b17bf32d2f576a1776973ea07491eafc" translate="yes" xml:space="preserve">
          <source>An instance of &lt;a href=&quot;timewithzone&quot;&gt;ActiveSupport::TimeWithZone&lt;/a&gt; is never blank</source>
          <target state="translated">&lt;a href=&quot;timewithzone&quot;&gt;ActiveSupport :: TimeWithZone&lt;/a&gt;的实例永远不会为空</target>
        </trans-unit>
        <trans-unit id="b313482dd0aa360a15f2e3b0a70276836cceb9e6" translate="yes" xml:space="preserve">
          <source>An instance of a view class. The default view class is &lt;a href=&quot;base&quot;&gt;&lt;code&gt;ActionView::Base&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">视图类的实例。默认的视图类是&lt;a href=&quot;base&quot;&gt; &lt;code&gt;ActionView::Base&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6281505a38d65e59f9549898829fa376cd18c2ed" translate="yes" xml:space="preserve">
          <source>An instance of a view class. The default view class is &lt;a href=&quot;base&quot;&gt;ActionView::Base&lt;/a&gt;.</source>
          <target state="translated">视图类的实例。默认的视图类是&lt;a href=&quot;base&quot;&gt;ActionView :: Base&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a49225953183575a62284ed972504207deff0da3" translate="yes" xml:space="preserve">
          <source>An instance of the current channel, created when you call `subscribe`.</source>
          <target state="translated">当前频道的一个实例,当你调用`subscribe`时创建。</target>
        </trans-unit>
        <trans-unit id="d9245f7b975e305a7da863ff7509653bf5d48a71" translate="yes" xml:space="preserve">
          <source>An instance of this class represents a set of requests and responses performed sequentially by a test process. Because you can instantiate multiple sessions and run them side-by-side, you can also mimic (to some limited extent) multiple simultaneous users interacting with your system.</source>
          <target state="translated">该类的一个实例代表了一组由测试进程依次执行的请求和响应。因为您可以实例化多个会话并将它们并排运行,所以您也可以模仿(在一定程度上)多个同时用户与您的系统进行交互。</target>
        </trans-unit>
        <trans-unit id="ab747a1239a6f9921b4a47cc616e57a49546903b" translate="yes" xml:space="preserve">
          <source>An instance of this configuration object is available via ActionCable.server.config, which allows you to tweak Action Cable configuration in a Rails config initializer.</source>
          <target state="translated">这个配置对象的实例可以通过ActionCable.server.config获得,它允许你在Rails配置初始化器中调整Action Cable配置。</target>
        </trans-unit>
        <trans-unit id="b0949181bf547ce058b3b5c6b9e76d124615c2ac" translate="yes" xml:space="preserve">
          <source>An integration test spans multiple controllers and actions, tying them all together to ensure they work together as expected. It tests more completely than either unit or functional tests do, exercising the entire stack, from the dispatcher to the database.</source>
          <target state="translated">集成测试跨越多个控制器和动作,将它们联系在一起,以确保它们按照预期工作。它的测试比单元测试或功能测试更全面,对从调度器到数据库的整个栈进行测试。</target>
        </trans-unit>
        <trans-unit id="f3818656bfc08f991c1faaf17bc182adb3d9f800" translate="yes" xml:space="preserve">
          <source>An interceptor class must implement the &lt;code&gt;:delivering_email(message)&lt;/code&gt; method which will be called before the email is sent, allowing you to make modifications to the email before it hits the delivery agents. Your class should make any needed modifications directly to the passed in &lt;code&gt;Mail::Message&lt;/code&gt; instance.</source>
          <target state="translated">拦截器类必须实现 &lt;code&gt;:delivering_email(message)&lt;/code&gt; 方法，该方法将在发送电子邮件之前被调用，从而使您可以在电子邮件到达传递代理之前对其进行修改。您的类应直接对传入的 &lt;code&gt;Mail::Message&lt;/code&gt; 实例进行任何必要的修改。</target>
        </trans-unit>
        <trans-unit id="0c1790e6614558382d29369c62c3f295e30c44e3" translate="yes" xml:space="preserve">
          <source>An object becomes dirty when it has gone through one or more changes to its attributes and has not been saved. &lt;code&gt;ActiveModel::Dirty&lt;/code&gt; gives the ability to check whether an object has been changed or not. It also has attribute based accessor methods. Let's consider a Person class with attributes &lt;code&gt;first_name&lt;/code&gt; and &lt;code&gt;last_name&lt;/code&gt;:</source>
          <target state="translated">当对象对其属性进行一项或多项更改且尚未保存时，该对象将变脏。 &lt;code&gt;ActiveModel::Dirty&lt;/code&gt; 使您能够检查对象是否已更改。它还具有基于属性的访问器方法。让我们考虑一个具有 &lt;code&gt;first_name&lt;/code&gt; 和 &lt;code&gt;last_name&lt;/code&gt; 属性的Person类：</target>
        </trans-unit>
        <trans-unit id="bbed7a7ec7a3d636bb64095b0bf2d42b8029ccd0" translate="yes" xml:space="preserve">
          <source>An object is blank if it's false, empty, or a whitespace string. For example, &lt;code&gt;nil&lt;/code&gt;, '', ' ', [], {}, and &lt;code&gt;false&lt;/code&gt; are all blank.</source>
          <target state="translated">如果对象为假，空或空白字符串，则该对象为空白。例如， &lt;code&gt;nil&lt;/code&gt; ，''，''，[]，{}和 &lt;code&gt;false&lt;/code&gt; 均为空白。</target>
        </trans-unit>
        <trans-unit id="56859184427dcafe779bb958577942f3ca9f3c75" translate="yes" xml:space="preserve">
          <source>An object is not required to implement all APIs in order to work with Action Pack. This module only intends to provide guidance in case you want all features out of the box.</source>
          <target state="translated">一个对象不需要实现所有的API才能与Action Pack一起工作。本模块只是为了在您想要获得所有功能的情况下提供指导。</target>
        </trans-unit>
        <trans-unit id="1173db127e8c1085e991d1134aa470ee9cf0bd6a" translate="yes" xml:space="preserve">
          <source>An object is present if it's not blank.</source>
          <target state="translated">如果一个对象不是空白的,那么它就是存在的。</target>
        </trans-unit>
        <trans-unit id="6020f0c4092877d735efbeebebc138fb6284a4c7" translate="yes" xml:space="preserve">
          <source>An object passed as the first argument to &lt;code&gt;subscriptions.create&lt;/code&gt; becomes the params hash in the cable channel. The keyword &lt;code&gt;channel&lt;/code&gt; is required:</source>
          <target state="translated">作为第一个参数传递给 &lt;code&gt;subscriptions.create&lt;/code&gt; 的对象将成为电缆通道中的params哈希。关键字 &lt;code&gt;channel&lt;/code&gt; 是必需的：</target>
        </trans-unit>
        <trans-unit id="226f64254fbdf18436d348bcfa4559a4fba57b50" translate="yes" xml:space="preserve">
          <source>An observer class must implement the &lt;code&gt;:delivered_email(message)&lt;/code&gt; method which will be called once for every email sent after the email has been sent.</source>
          <target state="translated">观察者类必须实现 &lt;code&gt;:delivered_email(message)&lt;/code&gt; 方法，该方法将在发送电子邮件后为每个发送的电子邮件调用一次。</target>
        </trans-unit>
        <trans-unit id="034d541c977c4d51ea3b33f55137b86499dbe7f9" translate="yes" xml:space="preserve">
          <source>An optional namespace can be passed to enclose key names:</source>
          <target state="translated">可以传递一个可选的命名空间来包围键名。</target>
        </trans-unit>
        <trans-unit id="513235f1dafdb4cc352aa025de32c78cc8e8afe2" translate="yes" xml:space="preserve">
          <source>An outlet for the core developers so that they don't have to include every cool new feature under the sun.</source>
          <target state="translated">为核心开发者提供一个出口,这样他们就不必将所有酷炫的新功能都包含在太阳底下。</target>
        </trans-unit>
        <trans-unit id="c4688ac51a6a796e753012ff5793b496f358f993" translate="yes" xml:space="preserve">
          <source>An overview of all previews is accessible at &lt;code&gt;http://localhost:3000/rails/mailers&lt;/code&gt; on a running development server instance.</source>
          <target state="translated">可在运行的开发服务器实例上的 &lt;code&gt;http://localhost:3000/rails/mailers&lt;/code&gt; 上访问所有预览的概述。</target>
        </trans-unit>
        <trans-unit id="c2914b6cdb7d8e34e50fa526041cc9480abd350c" translate="yes" xml:space="preserve">
          <source>Analogously to &lt;code&gt;DateTime&lt;/code&gt;, the predicates &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/DateAndTime/Calculations.html#method-i-past-3F&quot;&gt;&lt;code&gt;past?&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/DateAndTime/Calculations.html#method-i-future-3F&quot;&gt;&lt;code&gt;future?&lt;/code&gt;&lt;/a&gt; are relative to &lt;code&gt;Time.current&lt;/code&gt;.</source>
          <target state="translated">类似于 &lt;code&gt;DateTime&lt;/code&gt; ，谓词&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/DateAndTime/Calculations.html#method-i-past-3F&quot;&gt; &lt;code&gt;past?&lt;/code&gt; &lt;/a&gt;，以及&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/DateAndTime/Calculations.html#method-i-future-3F&quot;&gt; &lt;code&gt;future?&lt;/code&gt; &lt;/a&gt;相对于 &lt;code&gt;Time.current&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="def3533065fdb74b768fde103c4d1e3a7a235a2e" translate="yes" xml:space="preserve">
          <source>Analogously to &lt;code&gt;DateTime&lt;/code&gt;, the predicates &lt;code&gt;past?&lt;/code&gt;, and &lt;code&gt;future?&lt;/code&gt; are relative to &lt;code&gt;Time.current&lt;/code&gt;.</source>
          <target state="translated">类似于 &lt;code&gt;DateTime&lt;/code&gt; ，谓词 &lt;code&gt;past?&lt;/code&gt; ，以及 &lt;code&gt;future?&lt;/code&gt; 相对于 &lt;code&gt;Time.current&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4d386c871c4481f1a6249f23bfb2943e7fae3a8a" translate="yes" xml:space="preserve">
          <source>Analogously, &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/DateAndTime/Calculations.html#method-i-all_week&quot;&gt;&lt;code&gt;all_week&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/DateAndTime/Calculations.html#method-i-all_month&quot;&gt;&lt;code&gt;all_month&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/DateAndTime/Calculations.html#method-i-all_quarter&quot;&gt;&lt;code&gt;all_quarter&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/DateAndTime/Calculations.html#method-i-all_year&quot;&gt;&lt;code&gt;all_year&lt;/code&gt;&lt;/a&gt; all serve the purpose of generating time ranges.</source>
          <target state="translated">类似地，&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/DateAndTime/Calculations.html#method-i-all_week&quot;&gt; &lt;code&gt;all_week&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/DateAndTime/Calculations.html#method-i-all_month&quot;&gt; &lt;code&gt;all_month&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/DateAndTime/Calculations.html#method-i-all_quarter&quot;&gt; &lt;code&gt;all_quarter&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/DateAndTime/Calculations.html#method-i-all_year&quot;&gt; &lt;code&gt;all_year&lt;/code&gt; &lt;/a&gt;均用于生成时间范围。</target>
        </trans-unit>
        <trans-unit id="b3e3e5afc64dc86ef84e024025f5d914671e9036" translate="yes" xml:space="preserve">
          <source>Analogously, &lt;code&gt;all_week&lt;/code&gt;, &lt;code&gt;all_month&lt;/code&gt;, &lt;code&gt;all_quarter&lt;/code&gt; and &lt;code&gt;all_year&lt;/code&gt; all serve the purpose of generating time ranges.</source>
          <target state="translated">类似地， &lt;code&gt;all_week&lt;/code&gt; ， &lt;code&gt;all_month&lt;/code&gt; ， &lt;code&gt;all_quarter&lt;/code&gt; 和 &lt;code&gt;all_year&lt;/code&gt; 均用于生成时间范围。</target>
        </trans-unit>
        <trans-unit id="948e2792eb41053cc55e5c43aae0e92f1a0a8a7d" translate="yes" xml:space="preserve">
          <source>Analysis requires the &lt;code&gt;mini_magick&lt;/code&gt; gem. Video analysis also requires the &lt;a href=&quot;https://www.ffmpeg.org/&quot;&gt;FFmpeg&lt;/a&gt; library, which you must include separately.</source>
          <target state="translated">分析需要 &lt;code&gt;mini_magick&lt;/code&gt; 宝石。视频分析还需要&lt;a href=&quot;https://www.ffmpeg.org/&quot;&gt;FFmpeg&lt;/a&gt;库，您必须单独包括它。</target>
        </trans-unit>
        <trans-unit id="818412f172acd3b11e6998060f2d8dc1183d9f2c" translate="yes" xml:space="preserve">
          <source>AnalyzeJob</source>
          <target state="translated">AnalyzeJob</target>
        </trans-unit>
        <trans-unit id="5a24ea3b7439261babc1707fab76619cba3d0593" translate="yes" xml:space="preserve">
          <source>AnalyzeJob#perform</source>
          <target state="translated">AnalyzeJob#perform</target>
        </trans-unit>
        <trans-unit id="bd47f3ad7f992d90cdd54fb281376f97c5fde0aa" translate="yes" xml:space="preserve">
          <source>Analyzer</source>
          <target state="translated">Analyzer</target>
        </trans-unit>
        <trans-unit id="db3401c6a6cec3caef8ee6a3f58fa77e1f4555a9" translate="yes" xml:space="preserve">
          <source>Analyzer#blob</source>
          <target state="translated">Analyzer#blob</target>
        </trans-unit>
        <trans-unit id="8b1e6ff00962b2e721d9945041eec9145c9500a2" translate="yes" xml:space="preserve">
          <source>Analyzer#download_blob_to_tempfile</source>
          <target state="translated">Analyzer#download_blob_to_tempfile</target>
        </trans-unit>
        <trans-unit id="c0dbc8274d6a9dbe39b9dc170faf9642cc3973ba" translate="yes" xml:space="preserve">
          <source>Analyzer#logger</source>
          <target state="translated">Analyzer#logger</target>
        </trans-unit>
        <trans-unit id="14ae44f18bf8c80cc87b752d2c498ccbd4f6a1b1" translate="yes" xml:space="preserve">
          <source>Analyzer#metadata</source>
          <target state="translated">Analyzer#metadata</target>
        </trans-unit>
        <trans-unit id="0402089da77b6c2529153cc2f8808321dc2c90cc" translate="yes" xml:space="preserve">
          <source>Analyzer#tmpdir</source>
          <target state="translated">Analyzer#tmpdir</target>
        </trans-unit>
        <trans-unit id="b04ac0a977fa284108484f61b8beb195114c8312" translate="yes" xml:space="preserve">
          <source>Analyzer::ImageAnalyzer</source>
          <target state="translated">Analyzer::ImageAnalyzer</target>
        </trans-unit>
        <trans-unit id="bef340b28684edde55a0a0203927578e830ee826" translate="yes" xml:space="preserve">
          <source>Analyzer::ImageAnalyzer#metadata</source>
          <target state="translated">Analyzer::ImageAnalyzer#metadata</target>
        </trans-unit>
        <trans-unit id="0818f9c97a3cffa81cb4951423834e962cf1fb27" translate="yes" xml:space="preserve">
          <source>Analyzer::ImageAnalyzer::accept?</source>
          <target state="translated">Analyzer::ImageAnalyzer::accept?</target>
        </trans-unit>
        <trans-unit id="232d2bd46881fa1143ad1853b6ebe1d49ce6da42" translate="yes" xml:space="preserve">
          <source>Analyzer::VideoAnalyzer</source>
          <target state="translated">Analyzer::VideoAnalyzer</target>
        </trans-unit>
        <trans-unit id="73469489740fb32eacdaa8259420dd8ac0ac234b" translate="yes" xml:space="preserve">
          <source>Analyzer::VideoAnalyzer#metadata</source>
          <target state="translated">Analyzer::VideoAnalyzer#metadata</target>
        </trans-unit>
        <trans-unit id="efac7f2d4f3c6300d588b86627c5c64e5ffb14d9" translate="yes" xml:space="preserve">
          <source>Analyzer::VideoAnalyzer::accept?</source>
          <target state="translated">Analyzer::VideoAnalyzer::accept?</target>
        </trans-unit>
        <trans-unit id="79bc0989b0ab10f334b8baef78a0edcfdfc419a9" translate="yes" xml:space="preserve">
          <source>Analyzer::accept?</source>
          <target state="translated">Analyzer::accept?</target>
        </trans-unit>
        <trans-unit id="74c784c5b65f68fd9f74ae3b0a6e1a6243231b85" translate="yes" xml:space="preserve">
          <source>Analyzer::new</source>
          <target state="translated">Analyzer::new</target>
        </trans-unit>
        <trans-unit id="7bd1b53299ce69453f3cf7d375da5af3b5edcb2a" translate="yes" xml:space="preserve">
          <source>Analyzing Files</source>
          <target state="translated">分析文件</target>
        </trans-unit>
        <trans-unit id="65676eb23f2a8686dfffe119fd20ac5203dad8d7" translate="yes" xml:space="preserve">
          <source>And a bang version &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Hash.html#method-i-reverse_merge-21&quot;&gt;&lt;code&gt;reverse_merge!&lt;/code&gt;&lt;/a&gt; that performs the merge in place:</source>
          <target state="translated">和轰隆版本&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Hash.html#method-i-reverse_merge-21&quot;&gt; &lt;code&gt;reverse_merge!&lt;/code&gt; &lt;/a&gt;执行合并的地方：</target>
        </trans-unit>
        <trans-unit id="ac5ba8d4c867060fdebc202f28c44c0fdf174c5c" translate="yes" xml:space="preserve">
          <source>And a bang version &lt;code&gt;reverse_merge!&lt;/code&gt; that performs the merge in place:</source>
          <target state="translated">和轰隆版本 &lt;code&gt;reverse_merge!&lt;/code&gt; 执行原位合并：</target>
        </trans-unit>
        <trans-unit id="7e4171c3bdffdb26a7fd32d8f66212ed41a8b30b" translate="yes" xml:space="preserve">
          <source>And a database.yml that looked like this:</source>
          <target state="translated">还有一个数据库.yml,看起来像这样。</target>
        </trans-unit>
        <trans-unit id="595cea7e2555fe38c4d7afff7be37e8a94bffa35" translate="yes" xml:space="preserve">
          <source>And due to a bug in (Ruby and) Rails up to version 2.1.2 (excluding it), a hacker may inject arbitrary header fields; for example like this:</source>
          <target state="translated">而由于(Ruby和)Rails在2.1.2版本(不包括它)之前的一个bug,黑客可能会注入任意的头字段;比如像这样。</target>
        </trans-unit>
        <trans-unit id="f31d91cbe29cc866f690612166b3dfc017f0c29d" translate="yes" xml:space="preserve">
          <source>And finally display the sanitized rich text on a page:</source>
          <target state="translated">最后在页面上显示经过消毒的富文本。</target>
        </trans-unit>
        <trans-unit id="96ce6cf0c70ca3e361ab657cd6c850ca930e7b6e" translate="yes" xml:space="preserve">
          <source>And finally they can also be removed from the stack completely:</source>
          <target state="translated">最后还可以将它们从堆栈中完全移除。</target>
        </trans-unit>
        <trans-unit id="89473ff8599e40e8adb8d50812d4a23166114f03" translate="yes" xml:space="preserve">
          <source>And finally, display the sanitized rich text on a page:</source>
          <target state="translated">最后,在页面上显示经过消毒的富文本。</target>
        </trans-unit>
        <trans-unit id="27f787c4e2486445700fdecaf4905b97df140bd1" translate="yes" xml:space="preserve">
          <source>And finally, if you want to have all Active Support available just issue:</source>
          <target state="translated">最后,如果你想拥有所有的主动支持,只要发。</target>
        </trans-unit>
        <trans-unit id="745432022992336245971d3f4c4f9cb7415fb950" translate="yes" xml:space="preserve">
          <source>And for a new record</source>
          <target state="translated">而对于一个新的记录</target>
        </trans-unit>
        <trans-unit id="f6377f0765d9d19d07c04789be12a1238c2d66a2" translate="yes" xml:space="preserve">
          <source>And here's how our app looks so far:</source>
          <target state="translated">这是我们的应用目前的样子。</target>
        </trans-unit>
        <trans-unit id="7893df81ac8fb9f6972b93bb15866f00b3ee3dfd" translate="yes" xml:space="preserve">
          <source>And in order to use this feature, you need to configure your application with this:</source>
          <target state="translated">而为了使用这个功能,你需要用这个配置你的应用程序。</target>
        </trans-unit>
        <trans-unit id="e9a06b4a8c92a171caadd2dedfaef9ecf4fe0071" translate="yes" xml:space="preserve">
          <source>And in our pirate translations file let's add a time format (it's already there in Rails' defaults for English):</source>
          <target state="translated">在我们的盗版翻译文件中,让我们添加一个时间格式(在Rails的英文默认值中已经有了)。</target>
        </trans-unit>
        <trans-unit id="5a267ae50b0be349e0f04ac296183af9fa02f517" translate="yes" xml:space="preserve">
          <source>And it will be wrapped into a nested hash with the key name matching the controller's name. For example, if you're posting to &lt;code&gt;UsersController&lt;/code&gt;, your new &lt;code&gt;params&lt;/code&gt; hash will look like this:</source>
          <target state="translated">并将其包装到嵌套哈希中，其密钥名称与控制器名称匹配。例如，如果要发布到 &lt;code&gt;UsersController&lt;/code&gt; ，则新的 &lt;code&gt;params&lt;/code&gt; 哈希将如下所示：</target>
        </trans-unit>
        <trans-unit id="bda725e240a6b3dad65fed6669dec52d3189f59a" translate="yes" xml:space="preserve">
          <source>And it will generate the following helper file in &lt;code&gt;app/helpers&lt;/code&gt;:</source>
          <target state="translated">它将在 &lt;code&gt;app/helpers&lt;/code&gt; 中生成以下帮助文件：</target>
        </trans-unit>
        <trans-unit id="518b20e7e473e9b6dd3a9e27575f62ee434fab5f" translate="yes" xml:space="preserve">
          <source>And it's finally registered as:</source>
          <target state="translated">而它最终注册为。</target>
        </trans-unit>
        <trans-unit id="b5409d90b46cdd472f5a4736089ee28d56d37efb" translate="yes" xml:space="preserve">
          <source>And last but not least, any kind of discussion regarding Ruby on Rails documentation is very welcome on the &lt;a href=&quot;https://discuss.rubyonrails.org/c/rubyonrails-docs&quot;&gt;rubyonrails-docs mailing list&lt;/a&gt;.</source>
          <target state="translated">最后但并非最不重要的一点是，在&lt;a href=&quot;https://discuss.rubyonrails.org/c/rubyonrails-docs&quot;&gt;rubyonrails-docs邮件列表&lt;/a&gt;上，非常欢迎有关Ruby on Rails文档的任何讨论。</target>
        </trans-unit>
        <trans-unit id="19191b81d3211772fe74f18deeb81b420dbbc7f8" translate="yes" xml:space="preserve">
          <source>And last but not least, any kind of discussion regarding Ruby on Rails documentation is very welcome on the &lt;a href=&quot;https://groups.google.com/forum/#!forum/rubyonrails-docs&quot;&gt;rubyonrails-docs mailing list&lt;/a&gt;.</source>
          <target state="translated">最后但并非最不重要的一点是，在&lt;a href=&quot;https://groups.google.com/forum/#!forum/rubyonrails-docs&quot;&gt;rubyonrails-docs邮件列表&lt;/a&gt;上非常欢迎进行有关Ruby on Rails文档的任何讨论。</target>
        </trans-unit>
        <trans-unit id="3a0c22d8f4c3ed893af5f86c0c7c65311177e2c4" translate="yes" xml:space="preserve">
          <source>And let's execute our generator:</source>
          <target state="translated">让我们执行我们的发电机。</target>
        </trans-unit>
        <trans-unit id="0a3e48a60746f6b847d997fa0fbe9c121a13a5e1" translate="yes" xml:space="preserve">
          <source>And more</source>
          <target state="translated">还有更多</target>
        </trans-unit>
        <trans-unit id="02d81b24ae8df9dfe0b26f2d70a2aad195ac4434" translate="yes" xml:space="preserve">
          <source>And now if you inspect the middleware stack, you'll find that &lt;code&gt;Rack::Runtime&lt;/code&gt; is not a part of it.</source>
          <target state="translated">现在，如果您检查中间件堆栈，您会发现 &lt;code&gt;Rack::Runtime&lt;/code&gt; 不属于其中。</target>
        </trans-unit>
        <trans-unit id="21ff835ac272843eb4192ba3ebfc5e63c12cfa32" translate="yes" xml:space="preserve">
          <source>And now it will look for all templates at &amp;ldquo;app/views/notifications&amp;rdquo; with name &amp;ldquo;another&amp;rdquo;.</source>
          <target state="translated">现在，它将在名称为&amp;ldquo; another&amp;rdquo;的&amp;ldquo; app / views / notifications&amp;rdquo;中查找所有模板。</target>
        </trans-unit>
        <trans-unit id="fc1167044f03255a2d813851ebece93b28c6b5da" translate="yes" xml:space="preserve">
          <source>And now it will look up at:</source>
          <target state="translated">而现在它将仰望在。</target>
        </trans-unit>
        <trans-unit id="e041bb85f2b214f8de245b421fefdc540c546745" translate="yes" xml:space="preserve">
          <source>And now let's change the generator to copy this template when invoked:</source>
          <target state="translated">而现在让我们改变生成器,在调用时复制这个模板。</target>
        </trans-unit>
        <trans-unit id="09368816c079c249d6a47c0dada1990a9e90f39d" translate="yes" xml:space="preserve">
          <source>And now let's inject another query using the UNION statement:</source>
          <target state="translated">现在让我们使用UNION语句注入另一个查询。</target>
        </trans-unit>
        <trans-unit id="6cda80e4322e54279a7ecd7a7aeb35323844b2ce" translate="yes" xml:space="preserve">
          <source>And now you can re-run scaffold for another resource and see it generating tests as well!</source>
          <target state="translated">现在,您可以为另一个资源重新运行scaffold,并看到它也在生成测试。</target>
        </trans-unit>
        <trans-unit id="7538a4c5e2dfb9433ce2692690666211f9434fb5" translate="yes" xml:space="preserve">
          <source>And now, let's create a very similar &lt;code&gt;app/views/articles/edit.html.erb&lt;/code&gt;:</source>
          <target state="translated">现在，让我们创建一个非常相似的 &lt;code&gt;app/views/articles/edit.html.erb&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="3d5bf3ad697b9cabef85049f5b5b16cb7087ca44" translate="yes" xml:space="preserve">
          <source>And now, we'll create a view that has a &lt;code&gt;content_for&lt;/code&gt; call that creates the &lt;code&gt;script&lt;/code&gt; identifier.</source>
          <target state="translated">现在，我们将创建一个具有 &lt;code&gt;content_for&lt;/code&gt; 调用的视图，该视图创建 &lt;code&gt;script&lt;/code&gt; 标识符。</target>
        </trans-unit>
        <trans-unit id="8fb1ac5d71b0ed84ba46bda8fb74bf03d9c72cfa" translate="yes" xml:space="preserve">
          <source>And of course you can just create a bare object and specify the attributes after the fact:</source>
          <target state="translated">当然你也可以直接创建一个裸体对象,事后再指定属性。</target>
        </trans-unit>
        <trans-unit id="e9be704d7dde18fee412434cd31f49cb7bc083ee" translate="yes" xml:space="preserve">
          <source>And sometimes you need to do something in SQL not abstracted directly by migrations:</source>
          <target state="translated">而有时你需要在SQL中做一些不被迁移直接抽象的事情。</target>
        </trans-unit>
        <trans-unit id="0968f99e8a66f9dc2e8c80ff088bcc247c3a5c67" translate="yes" xml:space="preserve">
          <source>And start the server:</source>
          <target state="translated">并启动服务器。</target>
        </trans-unit>
        <trans-unit id="362ef8e6d5d72fdb45ff448cd93a5a262550135b" translate="yes" xml:space="preserve">
          <source>And that's it! We can now list, show, create, update, and delete articles! InCRUDable!</source>
          <target state="translated">就是这样!我们现在可以列表、显示、创建、更新和删除文章了。我们现在可以列出、显示、创建、更新和删除文章了! InCRUDable!</target>
        </trans-unit>
        <trans-unit id="27c8eec1f3f2539ac7150d1d9885131a846d53e0" translate="yes" xml:space="preserve">
          <source>And the final result would be:</source>
          <target state="translated">而最终的结果将是:</target>
        </trans-unit>
        <trans-unit id="9e317f4be07ae8250be417f32f69dd747ba94960" translate="yes" xml:space="preserve">
          <source>And the following in your routes file:</source>
          <target state="translated">并在你的路由文件中加入以下内容。</target>
        </trans-unit>
        <trans-unit id="b9c998cf24aeeb4c3b5c2b9b95d0faff8e3cb1d6" translate="yes" xml:space="preserve">
          <source>And the lookup is exactly the same as previously:</source>
          <target state="translated">而查找的方法和之前完全一样。</target>
        </trans-unit>
        <trans-unit id="b59aab99401059e5025b8f1d346541d01ee7aa88" translate="yes" xml:space="preserve">
          <source>And the most popular injection attack methods.</source>
          <target state="translated">而最流行的注射攻击方法。</target>
        </trans-unit>
        <trans-unit id="34557c8387a1a1ec804f85c8a330f57346921578" translate="yes" xml:space="preserve">
          <source>And then ask again for the instance_variables:</source>
          <target state="translated">然后再问一下instance_variables。</target>
        </trans-unit>
        <trans-unit id="99320d2b05370139f0bc0620c7aef4c56c3874b1" translate="yes" xml:space="preserve">
          <source>And then finally, add the view for this action, located at &lt;code&gt;app/views/articles/index.html.erb&lt;/code&gt;:</source>
          <target state="translated">最后，在 &lt;code&gt;app/views/articles/index.html.erb&lt;/code&gt; 中添加此操作的视图：</target>
        </trans-unit>
        <trans-unit id="92bd0fda482ac8e17d79dc3db175608b94706442" translate="yes" xml:space="preserve">
          <source>And then on our page:</source>
          <target state="translated">然后在我们的页面上。</target>
        </trans-unit>
        <trans-unit id="b6517c22e8954c8bb72bf7186761f6e1112a15d9" translate="yes" xml:space="preserve">
          <source>And then pass it to the middleware:</source>
          <target state="translated">然后传给中间件。</target>
        </trans-unit>
        <trans-unit id="e870fccfe1dc4f38cd9f2a99897a8122b420f3a4" translate="yes" xml:space="preserve">
          <source>And then to reference the image in the view, you create a &lt;code&gt;welcome.html.erb&lt;/code&gt; file and make a call to &lt;code&gt;image_tag&lt;/code&gt; passing in the attachment you want to display and then call &lt;code&gt;url&lt;/code&gt; on the attachment to get the relative content id path for the image source:</source>
          <target state="translated">然后，要引用视图中的图像，请创建一个 &lt;code&gt;welcome.html.erb&lt;/code&gt; 文件，并调用 &lt;code&gt;image_tag&lt;/code&gt; 并传递要显示的附件，然后在附件上调用 &lt;code&gt;url&lt;/code&gt; 以获取图像的相对内容ID路径资源：</target>
        </trans-unit>
        <trans-unit id="cdaef48ebe2f36692bb01fd97c2e4f354fff4916" translate="yes" xml:space="preserve">
          <source>And then to route requests to your metal controller, you would add something like this to &lt;code&gt;config/routes.rb&lt;/code&gt;:</source>
          <target state="translated">然后将请求路由到您的金属控制器，您可以在 &lt;code&gt;config/routes.rb&lt;/code&gt; 中添加如下内容：</target>
        </trans-unit>
        <trans-unit id="059296e56746c84a697af8dfd937d5673d5e60f8" translate="yes" xml:space="preserve">
          <source>And then you have content pages that look like this:</source>
          <target state="translated">然后你有内容页,看起来像这样。</target>
        </trans-unit>
        <trans-unit id="fa029c52345a89a953d5aa6e1d94ab05ad06fc08" translate="yes" xml:space="preserve">
          <source>And this will give you a single &lt;code&gt;Order&lt;/code&gt; object for each date where there are orders in the database.</source>
          <target state="translated">这将为您在数据库中存在订单的每个日期提供一个 &lt;code&gt;Order&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="85c9a2e868e4cbdc149ea58e74cf0e356517bc51" translate="yes" xml:space="preserve">
          <source>And thus it found the first user in the database, returned it, and logged them in. You can find out more about it in &lt;a href=&quot;http://www.rorsecurity.info/2007/10/28/restful_authentication-login-security/&quot;&gt;this blog post&lt;/a&gt;. &lt;em&gt;It is advisable to update your plug-ins from time to time&lt;/em&gt;. Moreover, you can review your application to find more flaws like this.</source>
          <target state="translated">因此，它在数据库中找到了第一个用户，将其返回并登录。您可以在&lt;a href=&quot;http://www.rorsecurity.info/2007/10/28/restful_authentication-login-security/&quot;&gt;此博客文章中&lt;/a&gt;找到有关它的更多信息。&lt;em&gt;建议您不时更新插件&lt;/em&gt;。此外，您可以查看您的应用程序以找到更多类似的缺陷。</target>
        </trans-unit>
        <trans-unit id="1faf1644f8e7efb113633cdfe252ad8221df903c" translate="yes" xml:space="preserve">
          <source>And to remove browser related middleware,</source>
          <target state="translated">并删除浏览器相关的中间件。</target>
        </trans-unit>
        <trans-unit id="9958a37db53beb8fa92d5fd218d50f51c60730a1" translate="yes" xml:space="preserve">
          <source>And use it on initialization:</source>
          <target state="translated">并在初始化时使用。</target>
        </trans-unit>
        <trans-unit id="9f47a0be5f3646e19e602563e84baf40d17cc8df" translate="yes" xml:space="preserve">
          <source>And we'll also add one to the &lt;code&gt;app/views/articles/show.html.erb&lt;/code&gt; template as well, so that there's also an &quot;Edit&quot; link on an article's page. Add this at the bottom of the template:</source>
          <target state="translated">而且，我们还将在 &lt;code&gt;app/views/articles/show.html.erb&lt;/code&gt; 模板中添加一个，以便在文章页面上也有一个&amp;ldquo;编辑&amp;rdquo;链接。将其添加到模板的底部：</target>
        </trans-unit>
        <trans-unit id="32744f352d6f012def4712c82f4cc0fbaf68ebb9" translate="yes" xml:space="preserve">
          <source>And when we want to fetch all articles from the database, we can call &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveRecord/Scoping/Named/ClassMethods.html#method-i-all&quot;&gt;&lt;code&gt;all&lt;/code&gt;&lt;/a&gt; on the model:</source>
          <target state="translated">当我们想从数据库中获取所有文章时，可以在模型上调用&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveRecord/Scoping/Named/ClassMethods.html#method-i-all&quot;&gt; &lt;code&gt;all&lt;/code&gt; &lt;/a&gt;文章：</target>
        </trans-unit>
        <trans-unit id="092a6d09f8ded1009088e04a69778ba787e57ea0" translate="yes" xml:space="preserve">
          <source>And you can tell the method not to fill the last group by passing &lt;code&gt;false&lt;/code&gt;:</source>
          <target state="translated">您可以通过传递 &lt;code&gt;false&lt;/code&gt; 来告诉该方法不要填充最后一组：</target>
        </trans-unit>
        <trans-unit id="4f154c150c8033d3c6d7f1b5a2b3085a0c4a9cc6" translate="yes" xml:space="preserve">
          <source>And you can tell the method not to fill the last group passing &lt;code&gt;false&lt;/code&gt;:</source>
          <target state="translated">您可以告诉该方法不要填充通过 &lt;code&gt;false&lt;/code&gt; 的最后一组：</target>
        </trans-unit>
        <trans-unit id="d34b56be33f5de1e0b2600099638365318dc3a54" translate="yes" xml:space="preserve">
          <source>And you can tell the method not to fill the smaller groups by passing &lt;code&gt;false&lt;/code&gt;:</source>
          <target state="translated">您可以通过传递 &lt;code&gt;false&lt;/code&gt; 来告诉该方法不要填充较小的组：</target>
        </trans-unit>
        <trans-unit id="da330cfd8215d193518fc5e26c1dc915f334ccf3" translate="yes" xml:space="preserve">
          <source>And you can tell the method not to fill the smaller groups passing &lt;code&gt;false&lt;/code&gt;:</source>
          <target state="translated">而且您可以告诉该方法不要填充通过 &lt;code&gt;false&lt;/code&gt; 的较小组：</target>
        </trans-unit>
        <trans-unit id="981b8eb3723a6a22844ea0e85d2ac2bcbccdc9fc" translate="yes" xml:space="preserve">
          <source>And you execute this:</source>
          <target state="translated">而你执行这个。</target>
        </trans-unit>
        <trans-unit id="57771ccaee349d99f5dc9f16ed42c3902d7bc28f" translate="yes" xml:space="preserve">
          <source>And you have a view file &lt;code&gt;app/views/books/index.html.erb&lt;/code&gt;:</source>
          <target state="translated">并且您有一个视图文件 &lt;code&gt;app/views/books/index.html.erb&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="5d934750def48cd934e58f23e94d392e1ac84c0a" translate="yes" xml:space="preserve">
          <source>And you then change your &lt;code&gt;find_signed&lt;/code&gt; calls to require this new purpose. Any old signed ids that were not created with the purpose will no longer find the record.</source>
          <target state="translated">然后，您可以更改 &lt;code&gt;find_signed&lt;/code&gt; 调用以要求此新目的。没有为此目的创建的任何旧的已签名ID将不再找到该记录。</target>
        </trans-unit>
        <trans-unit id="7066be8d5ceb59227ad5809605a4f27514242ec7" translate="yes" xml:space="preserve">
          <source>And, assuming that you're sending the data to &lt;code&gt;CompaniesController&lt;/code&gt;, it would then be wrapped within the &lt;code&gt;:company&lt;/code&gt; key like this:</source>
          <target state="translated">并且，假设您要将数据发送到 &lt;code&gt;CompaniesController&lt;/code&gt; ，则将其包装在 &lt;code&gt;:company&lt;/code&gt; 键中，如下所示：</target>
        </trans-unit>
        <trans-unit id="788818bf93424ed61c63c23e1763739fd4dea702" translate="yes" xml:space="preserve">
          <source>And, like this (xml-encoded):</source>
          <target state="translated">而且,像这样(xml编码)。</target>
        </trans-unit>
        <trans-unit id="f961efd7f9adc12f7a5a877046e131839f5bfb8d" translate="yes" xml:space="preserve">
          <source>Angle (degrees)</source>
          <target state="translated">角度(度)</target>
        </trans-unit>
        <trans-unit id="5428bbb2f94b1d3fbad5f97d71ad1c378a58b34b" translate="yes" xml:space="preserve">
          <source>Annotate file inputs with the direct upload URL.</source>
          <target state="translated">用直接上传的URL对文件输入进行注释。</target>
        </trans-unit>
        <trans-unit id="4574abd03aa9ebe09a81801e83c4380695f6b70f" translate="yes" xml:space="preserve">
          <source>Annotations are looked for in comments and modulus whitespace they have to start with the tag optionally followed by a colon. Everything up to the end of the line (or closing &lt;code&gt;ERB&lt;/code&gt; comment tag) is considered to be their text.</source>
          <target state="translated">在注释和模数空白中查找注释，注释必须以标签开头，并可选地以冒号开头。直到行尾（或结束 &lt;code&gt;ERB&lt;/code&gt; 注释标签）的所有内容均视为其文本。</target>
        </trans-unit>
        <trans-unit id="2cab2793405dc7c7b5b5a7a4d1177926e39f76fa" translate="yes" xml:space="preserve">
          <source>Annotations are looked for in comments and modulus whitespace they have to start with the tag optionally followed by a colon. Everything up to the end of the line (or closing ERB comment tag) is considered to be their text.</source>
          <target state="translated">注释是在注释和模数空白中寻找的,它们必须以标签开始,后面有一个冒号。到行末的所有内容(或结束的ERB注释标签)都被认为是它们的文本。</target>
        </trans-unit>
        <trans-unit id="36b12e399b834ef279a67c3c219f71209ed9693b" translate="yes" xml:space="preserve">
          <source>Annoyingly, the code for prepared statements whose return value may have changed is FEATURE_NOT_SUPPORTED.</source>
          <target state="translated">令人恼火的是,对于返回值可能已经改变的准备好的语句,其代码是FEATURE_NOT_SUPPORTED。</target>
        </trans-unit>
        <trans-unit id="9bed5104004c5fe4e3e46673da174472bff1360a" translate="yes" xml:space="preserve">
          <source>Anonymous</source>
          <target state="translated">Anonymous</target>
        </trans-unit>
        <trans-unit id="4981d4a06cbde17af95421e4b6daf06e134bad14" translate="yes" xml:space="preserve">
          <source>Another (additional) approach is to store the file names in the database and name the files on the disk after the ids in the database. This is also a good approach to avoid possible code in an uploaded file to be executed. The attachment_fu plugin does this in a similar way.</source>
          <target state="translated">另一种(额外的)方法是将文件名存储在数据库中,并以数据库中的id命名磁盘上的文件。这也是一个很好的方法,可以避免上传的文件中可能会有代码被执行。attachment_fu插件也用类似的方法来实现。</target>
        </trans-unit>
        <trans-unit id="f8d1793587187740c146a3a420691a2c592ca156" translate="yes" xml:space="preserve">
          <source>Another class of security vulnerabilities surrounds the use of redirection and files in web applications.</source>
          <target state="translated">另一类安全漏洞围绕着网络应用中重定向和文件的使用。</target>
        </trans-unit>
        <trans-unit id="296ef714adc2b41fd3592491791896f4881c9e55" translate="yes" xml:space="preserve">
          <source>Another common case is a select tag for a &lt;code&gt;belongs_to&lt;/code&gt;-associated object.</source>
          <target state="translated">另一个常见的情况是一个名为 &lt;code&gt;belongs_to&lt;/code&gt; 相关对象的选择标签。</target>
        </trans-unit>
        <trans-unit id="95d6339e7bef3199c5524137e1bad98b30b78f6e" translate="yes" xml:space="preserve">
          <source>Another common use case is optimistic locking handling:</source>
          <target state="translated">另一个常见的用例是乐观的锁定处理。</target>
        </trans-unit>
        <trans-unit id="5a3ca699f5f175075f94072d2432dd6dd9258f43" translate="yes" xml:space="preserve">
          <source>Another countermeasure is to &lt;em&gt;save user-specific properties in the session&lt;/em&gt;, verify them every time a request comes in, and deny access, if the information does not match. Such properties could be the remote IP address or the user agent (the web browser name), though the latter is less user-specific. When saving the IP address, you have to bear in mind that there are Internet service providers or large organizations that put their users behind proxies. &lt;em&gt;These might change over the course of a session&lt;/em&gt;, so these users will not be able to use your application, or only in a limited way.</source>
          <target state="translated">另一个对策是&lt;em&gt;将用户特定的属性保存在会话中&lt;/em&gt;，每次请求进入时都对它们进行验证，如果信息不匹配，则拒绝访问。这样的属性可以是远程IP地址或用户代理（Web浏览器名称），尽管后者不是特定于用户的。保存IP地址时，必须记住，有Internet服务提供商或大型组织将其用户置于代理之后。&lt;em&gt;这些可能会在会话过程中发生变化&lt;/em&gt;，因此这些用户将无法使用您的应用程序，或者只能以有限的方式使用您的应用程序。</target>
        </trans-unit>
        <trans-unit id="44a6e1b148ccfb7428d10ec8db15bbf5790eef6e" translate="yes" xml:space="preserve">
          <source>Another example changed Google Adsense's e-mail address and password. If the victim was logged into Google Adsense, the administration interface for Google advertisement campaigns, an attacker could change the credentials of the victim.</source>
          <target state="translated">另一个例子改变了Google Adsense的电子邮件地址和密码。如果受害者登录谷歌广告活动的管理界面Google Adsense,攻击者就可以改变受害者的凭证。</target>
        </trans-unit>
        <trans-unit id="1b52142aef8fce9a89974e920663c521ee6664d7" translate="yes" xml:space="preserve">
          <source>Another example is this code from &lt;code&gt;ActiveRecord::ConnectionAdapters::AbstractAdapter&lt;/code&gt; where &lt;code&gt;@logger&lt;/code&gt; could be &lt;code&gt;nil&lt;/code&gt;. You can see that the code uses &lt;code&gt;try&lt;/code&gt; and avoids an unnecessary check.</source>
          <target state="translated">另一个示例是来自 &lt;code&gt;ActiveRecord::ConnectionAdapters::AbstractAdapter&lt;/code&gt; 代码，其中 &lt;code&gt;@logger&lt;/code&gt; 可能为 &lt;code&gt;nil&lt;/code&gt; 。您可以看到该代码使用 &lt;code&gt;try&lt;/code&gt; 并避免了不必要的检查。</target>
        </trans-unit>
        <trans-unit id="21b4dd997e771fdd98953a48fb5eb9f113fa1a81" translate="yes" xml:space="preserve">
          <source>Another example where the default behavior is less desirable is the Rails TranslationHelper which provides the method &lt;code&gt;#t&lt;/code&gt; (as well as &lt;code&gt;#translate&lt;/code&gt;). When a &lt;code&gt;MissingTranslationData&lt;/code&gt; exception occurs in this context, the helper wraps the message into a span with the CSS class &lt;code&gt;translation_missing&lt;/code&gt;.</source>
          <target state="translated">默认行为不太理想的另一个示例是Rails TranslationHelper，它提供了方法 &lt;code&gt;#t&lt;/code&gt; （以及 &lt;code&gt;#translate&lt;/code&gt; ）。当在此上下文中发生 &lt;code&gt;MissingTranslationData&lt;/code&gt; 异常时，帮助程序将消息包装到带有CSS类 &lt;code&gt;translation_missing&lt;/code&gt; 的跨度中。</target>
        </trans-unit>
        <trans-unit id="9388a59772473216b3ff66341786e954aef069db" translate="yes" xml:space="preserve">
          <source>Another example would be if you wanted multiple workers handling the same processing queue. You could have each worker handle 10000 records by setting the appropriate &lt;code&gt;:start&lt;/code&gt; and &lt;code&gt;:finish&lt;/code&gt; options on each worker.</source>
          <target state="translated">另一个示例是，如果您希望多个工作人员处理同一处理队列。通过在每个工作程序上设置适当的 &lt;code&gt;:start&lt;/code&gt; 和 &lt;code&gt;:finish&lt;/code&gt; 选项，可以使每个工作程序处理10000条记录。</target>
        </trans-unit>
        <trans-unit id="a0a079d3f25aec6a8b51a9cf05a44a2099482d3a" translate="yes" xml:space="preserve">
          <source>Another example, using Concurrent Ruby:</source>
          <target state="translated">另一个例子,使用Concurrent Ruby。</target>
        </trans-unit>
        <trans-unit id="ba89e6553191a616a3868ad90ce19cb625053773" translate="yes" xml:space="preserve">
          <source>Another example: Calling the &lt;code&gt;:update&lt;/code&gt; action for the last &lt;code&gt;Article&lt;/code&gt;, passing in new text for the &lt;code&gt;title&lt;/code&gt; in &lt;code&gt;params&lt;/code&gt;, as an Ajax request:</source>
          <target state="translated">另一个示例：调用最后一个 &lt;code&gt;Article&lt;/code&gt; 的 &lt;code&gt;:update&lt;/code&gt; 动作，以 &lt;code&gt;params&lt;/code&gt; 的形式传递 &lt;code&gt;title&lt;/code&gt; 新文本，作为Ajax请求：</target>
        </trans-unit>
        <trans-unit id="19d166434b5323fa0140ff4e2f19d11a2449262b" translate="yes" xml:space="preserve">
          <source>Another important feature of a blog is being able to delete spam comments. To do this, we need to implement a link of some sort in the view and a &lt;code&gt;destroy&lt;/code&gt; action in the &lt;code&gt;CommentsController&lt;/code&gt;.</source>
          <target state="translated">博客的另一个重要功能是能够删除垃圾邮件评论。为此，我们需要在视图中实现某种链接，并在 &lt;code&gt;CommentsController&lt;/code&gt; 中实现 &lt;code&gt;destroy&lt;/code&gt; 操作。</target>
        </trans-unit>
        <trans-unit id="7e1f1e584fde14b790e1c8551c795986f5205a62" translate="yes" xml:space="preserve">
          <source>Another longer example would be:</source>
          <target state="translated">另一个较长的例子是:</target>
        </trans-unit>
        <trans-unit id="a36adb9414f36654e91b2ff5c70b722a8859fd7b" translate="yes" xml:space="preserve">
          <source>Another option is to include the full filename of the partial to render.</source>
          <target state="translated">另一个选择是包含要渲染的部分的完整文件名。</target>
        </trans-unit>
        <trans-unit id="e644d53e2d884e363e4da285036483f6f3a6a521" translate="yes" xml:space="preserve">
          <source>Another popular attack is to spam your web application, your blog, or forum to propagate malicious XSS. Of course, the attacker has to know the URL structure, but most Rails URLs are quite straightforward or they will be easy to find out, if it is an open-source application's admin interface. The attacker may even do 1,000 lucky guesses by just including malicious IMG-tags which try every possible combination.</source>
          <target state="translated">另一种流行的攻击方式是向你的Web应用、你的博客或论坛发送垃圾邮件来传播恶意XSS。当然,攻击者必须知道URL结构,但大多数Rails的URL都很简单,或者说如果是开源应用的管理界面,他们会很容易发现。攻击者甚至可能会做1000个幸运的猜测,只需包含恶意的IMG-tags,就可以尝试所有可能的组合。</target>
        </trans-unit>
        <trans-unit id="7977f52aeb40ea96164ae222484fbb68c4f11060" translate="yes" xml:space="preserve">
          <source>Another potential pitfall is too many calls to &lt;code&gt;Logger&lt;/code&gt; in your code:</source>
          <target state="translated">另一个潜在的陷阱是您的代码中对 &lt;code&gt;Logger&lt;/code&gt; 的调用过多：</target>
        </trans-unit>
        <trans-unit id="434bf69924a5681180c80b8fabdd21b26b1b9ff7" translate="yes" xml:space="preserve">
          <source>Another problem for the worm's author was the &lt;a href=&quot;#cross-site-request-forgery-csrf&quot;&gt;CSRF security tokens&lt;/a&gt;. Without them he couldn't send a friend request over POST. He got around it by sending a GET to the page right before adding a user and parsing the result for the CSRF token.</source>
          <target state="translated">蠕虫作者的另一个问题是&lt;a href=&quot;#cross-site-request-forgery-csrf&quot;&gt;CSRF安全令牌&lt;/a&gt;。没有他们，他无法通过POST发送好友请求。他通过在添加用户并解析CSRF令牌的结果之前立即向页面发送GET来解决此问题。</target>
        </trans-unit>
        <trans-unit id="fc1c0536e6b3ba630e5b3972063fae2330b52415" translate="yes" xml:space="preserve">
          <source>Another proof-of-concept webmail worm is Nduja, a cross-domain worm for four Italian webmail services. Find more details on &lt;a href=&quot;http://www.xssed.com/news/37/Nduja_Connection_A_cross_webmail_worm_XWW/&quot;&gt;Rosario Valotta's paper&lt;/a&gt;. Both webmail worms have the goal to harvest email addresses, something a criminal hacker could make money with.</source>
          <target state="translated">另一个概念验证的Webmail蠕虫是Nduja，它是一种针对四个意大利webmail服务的跨域蠕虫。在&lt;a href=&quot;http://www.xssed.com/news/37/Nduja_Connection_A_cross_webmail_worm_XWW/&quot;&gt;Rosario Valotta的论文中&lt;/a&gt;找到更多详细信息。两种网络邮件蠕虫的目标都是收集电子邮件地址，这是犯罪黑客可以利用其赚钱的方式。</target>
        </trans-unit>
        <trans-unit id="87062da571b1a551ffbe6c86bed821ae7dc53e47" translate="yes" xml:space="preserve">
          <source>Another redirection and self-contained XSS attack works in Firefox and Opera by the use of the data protocol. This protocol displays its contents directly in the browser and can be anything from HTML or JavaScript to entire images:</source>
          <target state="translated">另一种重定向和自带的XSS攻击在Firefox和Opera中通过使用数据协议工作。该协议直接在浏览器中显示其内容,可以是任何东西,从HTML或JavaScript到整个图像。</target>
        </trans-unit>
        <trans-unit id="214173980004244970ca05428d46a302e364b822" translate="yes" xml:space="preserve">
          <source>Another situation in which you may find this gotcha is subclassing reloadable classes in a place that is not reloaded:</source>
          <target state="translated">另一种你可能会发现这个漏洞的情况是将可重载类子类化在一个不重载的地方。</target>
        </trans-unit>
        <trans-unit id="0a22884921d6627303a9076edec93b8aa878e401" translate="yes" xml:space="preserve">
          <source>Another use case of this gotcha is subclassing reloadable classes in a place that is not reloaded:</source>
          <target state="translated">这个漏洞的另一个用例是将可重载类子类化在一个不重载的地方。</target>
        </trans-unit>
        <trans-unit id="bd00ade71e528a1d50bcb4052c8e9b3084516869" translate="yes" xml:space="preserve">
          <source>Another useful method for displaying object values is &lt;code&gt;inspect&lt;/code&gt;, especially when working with arrays or hashes. This will print the object value as a string. For example:</source>
          <target state="translated">显示对象值的另一种有用方法是 &lt;code&gt;inspect&lt;/code&gt; ，尤其是在处理数组或哈希时。这会将对象值打印为字符串。例如：</target>
        </trans-unit>
        <trans-unit id="d1bc936718b502665649df2790bbd13968baa05d" translate="yes" xml:space="preserve">
          <source>Another way to handle returning responses to an HTTP request is with &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionController/Redirecting.html#method-i-redirect_to&quot;&gt;&lt;code&gt;redirect_to&lt;/code&gt;&lt;/a&gt;. As you've seen, &lt;code&gt;render&lt;/code&gt; tells Rails which view (or other asset) to use in constructing a response. The &lt;code&gt;redirect_to&lt;/code&gt; method does something completely different: it tells the browser to send a new request for a different URL. For example, you could redirect from wherever you are in your code to the index of photos in your application with this call:</source>
          <target state="translated">处理对HTTP请求的返回响应的另一种方法是&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionController/Redirecting.html#method-i-redirect_to&quot;&gt; &lt;code&gt;redirect_to&lt;/code&gt; &lt;/a&gt;。如您所见， &lt;code&gt;render&lt;/code&gt; 告诉Rails在构造响应时使用哪个视图（或其他资产）。该 &lt;code&gt;redirect_to&lt;/code&gt; 的方法做了完全不同：它告诉浏览器发送一个不同的URL的新请求。例如，您可以通过以下调用从代码中的任何位置重定向到应用程序中的照片索引：</target>
        </trans-unit>
        <trans-unit id="9f72cb4cba26fdb6875c4d68df0c4c2b83b783f3" translate="yes" xml:space="preserve">
          <source>Another way to handle returning responses to an HTTP request is with &lt;code&gt;redirect_to&lt;/code&gt;. As you've seen, &lt;code&gt;render&lt;/code&gt; tells Rails which view (or other asset) to use in constructing a response. The &lt;code&gt;redirect_to&lt;/code&gt; method does something completely different: it tells the browser to send a new request for a different URL. For example, you could redirect from wherever you are in your code to the index of photos in your application with this call:</source>
          <target state="translated">处理对HTTP请求的返回响应的另一种方法是 &lt;code&gt;redirect_to&lt;/code&gt; 。如您所见， &lt;code&gt;render&lt;/code&gt; 告诉Rails在构造响应时使用哪个视图（或其他资产）。该 &lt;code&gt;redirect_to&lt;/code&gt; 的方法做了完全不同：它告诉浏览器发送一个不同的URL的新请求。例如，您可以通过以下调用从代码中的任何位置重定向到应用程序中的照片索引：</target>
        </trans-unit>
        <trans-unit id="90e2224cd79dd568ad37161b8ff61f1843dc7b06" translate="yes" xml:space="preserve">
          <source>Any &lt;code&gt;Rails::Engine&lt;/code&gt; is also a &lt;code&gt;Rails::Railtie&lt;/code&gt;, so the same methods (like &lt;code&gt;rake_tasks&lt;/code&gt; and &lt;code&gt;generators&lt;/code&gt;) and configuration options that are available in railties can also be used in engines.</source>
          <target state="translated">任何 &lt;code&gt;Rails::Engine&lt;/code&gt; 也是 &lt;code&gt;Rails::Railtie&lt;/code&gt; ，因此在 &lt;code&gt;rake_tasks&lt;/code&gt; 中可用的相同方法（例如rake_tasks和 &lt;code&gt;generators&lt;/code&gt; ）和配置选项也可以在引擎中使用。</target>
        </trans-unit>
        <trans-unit id="fc0cba422f23e685f83167ec68f2a954df7ba6c7" translate="yes" xml:space="preserve">
          <source>Any additional arguments will be passed to the corresponding cache store class's constructor:</source>
          <target state="translated">任何额外的参数将被传递给相应的缓存存储类的构造函数。</target>
        </trans-unit>
        <trans-unit id="9040763e74dfdbbf20a5180de3023c0b56551efb" translate="yes" xml:space="preserve">
          <source>Any additional options passed to this method are put on the end of the line:</source>
          <target state="translated">传递给本方法的任何附加选项都会放在行尾。</target>
        </trans-unit>
        <trans-unit id="bab93b94aa204ee7976995cd5990651aa0394a9e" translate="yes" xml:space="preserve">
          <source>Any class can disallow duplication by removing &lt;code&gt;dup&lt;/code&gt; and &lt;code&gt;clone&lt;/code&gt; or raising exceptions from them. Thus only &lt;code&gt;rescue&lt;/code&gt; can tell whether a given arbitrary object is duplicable. &lt;code&gt;duplicable?&lt;/code&gt; depends on the hard-coded list above, but it is much faster than &lt;code&gt;rescue&lt;/code&gt;. Use it only if you know the hard-coded list is enough in your use case.</source>
          <target state="translated">任何类都可以通过删除 &lt;code&gt;dup&lt;/code&gt; 和 &lt;code&gt;clone&lt;/code&gt; 或从中引发异常来禁止重复。因此，只有 &lt;code&gt;rescue&lt;/code&gt; 才能告诉给定的任意对象是否可复制。 &lt;code&gt;duplicable?&lt;/code&gt; 取决于上面的硬编码列表，但是它比 &lt;code&gt;rescue&lt;/code&gt; 快得多。仅当您知道用例中的硬编码列表足够时，才使用它。</target>
        </trans-unit>
        <trans-unit id="895228262bba3923dd9bb246561ee6ee24a108e7" translate="yes" xml:space="preserve">
          <source>Any class that includes &lt;code&gt;ActiveModel::Model&lt;/code&gt; can be used with &lt;code&gt;form_for&lt;/code&gt;, &lt;code&gt;render&lt;/code&gt; and any other Action View helper methods, just like Active Record objects.</source>
          <target state="translated">任何包含 &lt;code&gt;ActiveModel::Model&lt;/code&gt; 都可以与 &lt;code&gt;form_for&lt;/code&gt; ， &lt;code&gt;render&lt;/code&gt; 和其他任何Action View帮助器方法一起使用，就像Active Record对象一样。</target>
        </trans-unit>
        <trans-unit id="fe08220363772889d327671041259d268e99e468" translate="yes" xml:space="preserve">
          <source>Any class that includes &lt;code&gt;ActiveModel::Model&lt;/code&gt; can be used with &lt;code&gt;form_with&lt;/code&gt;, &lt;code&gt;render&lt;/code&gt; and any other Action View helper methods, just like Active Record objects.</source>
          <target state="translated">任何包含 &lt;code&gt;ActiveModel::Model&lt;/code&gt; 都可以与 &lt;code&gt;form_with&lt;/code&gt; ， &lt;code&gt;render&lt;/code&gt; 和其他任何Action View帮助器方法一起使用，就像Active Record对象一样。</target>
        </trans-unit>
        <trans-unit id="80d3763697251827a823381957734bef5b290653" translate="yes" xml:space="preserve">
          <source>Any class that inherits from &lt;a href=&quot;validator&quot;&gt;&lt;code&gt;ActiveModel::Validator&lt;/code&gt;&lt;/a&gt; must implement a method called &lt;code&gt;validate&lt;/code&gt; which accepts a &lt;code&gt;record&lt;/code&gt;.</source>
          <target state="translated">从&lt;a href=&quot;validator&quot;&gt; &lt;code&gt;ActiveModel::Validator&lt;/code&gt; &lt;/a&gt;继承的任何类都必须实现一个称为 &lt;code&gt;validate&lt;/code&gt; 的方法，该方法接受 &lt;code&gt;record&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c29f543fcb29dfd26ee46f0bf4b1f4a2d8e203fa" translate="yes" xml:space="preserve">
          <source>Any class that inherits from &lt;a href=&quot;validator&quot;&gt;ActiveModel::Validator&lt;/a&gt; must implement a method called &lt;code&gt;validate&lt;/code&gt; which accepts a &lt;code&gt;record&lt;/code&gt;.</source>
          <target state="translated">从&lt;a href=&quot;validator&quot;&gt;ActiveModel :: Validator&lt;/a&gt;继承的任何类都必须实现一个称为 &lt;code&gt;validate&lt;/code&gt; 的方法，该方法接受 &lt;code&gt;record&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d7f60c12344f951755fc60c43f7cc2bdff003b38" translate="yes" xml:space="preserve">
          <source>Any collection renders will find those cached templates when attempting to read multiple templates at once.</source>
          <target state="translated">当试图一次读取多个模板时,任何集合渲染都会找到这些缓存的模板。</target>
        </trans-unit>
        <trans-unit id="f0817ecfcf4759b2a8a4660c36057fce8fcdab01" translate="yes" xml:space="preserve">
          <source>Any exception that is not &lt;code&gt;ActiveRecord::Rollback&lt;/code&gt; or &lt;code&gt;ActiveRecord::RecordInvalid&lt;/code&gt; will be re-raised by Rails after the callback chain is halted. Raising an exception other than &lt;code&gt;ActiveRecord::Rollback&lt;/code&gt; or &lt;code&gt;ActiveRecord::RecordInvalid&lt;/code&gt; may break code that does not expect methods like &lt;code&gt;save&lt;/code&gt; and &lt;code&gt;update&lt;/code&gt; (which normally try to return &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;) to raise an exception.</source>
          <target state="translated">在回调链暂停后，Rails将重新引发任何非 &lt;code&gt;ActiveRecord::Rollback&lt;/code&gt; 或 &lt;code&gt;ActiveRecord::RecordInvalid&lt;/code&gt; 异常。引发除 &lt;code&gt;ActiveRecord::Rollback&lt;/code&gt; 或 &lt;code&gt;ActiveRecord::RecordInvalid&lt;/code&gt; 之外的异常可能会破坏不希望 &lt;code&gt;save&lt;/code&gt; 和 &lt;code&gt;update&lt;/code&gt; （通常尝试返回 &lt;code&gt;true&lt;/code&gt; 或 &lt;code&gt;false&lt;/code&gt; ）之类的方法引发异常的代码。</target>
        </trans-unit>
        <trans-unit id="90a63fee9f5fe89b993ea58c0374adff1113c8f0" translate="yes" xml:space="preserve">
          <source>Any exceptions that are not configured will be mapped to 500 Internal Server Error.</source>
          <target state="translated">任何未配置的异常都将被映射为500内部服务器错误。</target>
        </trans-unit>
        <trans-unit id="f13c8b73e33764e6e4f758c21e792fb1d77d8d01" translate="yes" xml:space="preserve">
          <source>Any existing second level directories called &lt;code&gt;app/*/concerns&lt;/code&gt; in the application and engines.</source>
          <target state="translated">应用程序和引擎中任何称为 &lt;code&gt;app/*/concerns&lt;/code&gt; 的现有二级目录。</target>
        </trans-unit>
        <trans-unit id="98b5c8b1c158b9749acd547a6a20bfb85465473f" translate="yes" xml:space="preserve">
          <source>Any expression can be evaluated in the current context. To evaluate an expression, just type it!</source>
          <target state="translated">任何表达式都可以在当前上下文中进行评估。要评估一个表达式,只需键入它</target>
        </trans-unit>
        <trans-unit id="bcc64fd5ba668d460bd823aaaf4869c3007546a6" translate="yes" xml:space="preserve">
          <source>Any extra options you want appended to the columns definition.</source>
          <target state="translated">任何你想要附加到列定义中的额外选项。</target>
        </trans-unit>
        <trans-unit id="747a37eecbfe67ba4fca6b27ee8b96c96c378a67" translate="yes" xml:space="preserve">
          <source>Any extra options you want appended to the table definition.</source>
          <target state="translated">任何你想附加到表格定义的额外选项。</target>
        </trans-unit>
        <trans-unit id="a61ef8e3d11e87e2d87f0425f12740678d983562" translate="yes" xml:space="preserve">
          <source>Any fixture labeled &amp;ldquo;DEFAULTS&amp;rdquo; is safely ignored.</source>
          <target state="translated">安全标记为&amp;ldquo; DEFAULTS&amp;rdquo;的任何灯具都将被忽略。</target>
        </trans-unit>
        <trans-unit id="632465efc9a710329985c9cb4c0e0b932c984ce4" translate="yes" xml:space="preserve">
          <source>Any fixtures labeled &amp;ldquo;_fixture&amp;rdquo; are safely ignored.</source>
          <target state="translated">所有标有&amp;ldquo; _fixture&amp;rdquo;的灯具都会被安全忽略。</target>
        </trans-unit>
        <trans-unit id="6bca88a91e99c92ef1758f70300f8d1ff5839d0e" translate="yes" xml:space="preserve">
          <source>Any further options are used as connection parameters to libpq. See &lt;a href=&quot;https://www.postgresql.org/docs/current/static/libpq-connect.html&quot;&gt;www.postgresql.org/docs/current/static/libpq-connect.html&lt;/a&gt; for the list of parameters.</source>
          <target state="translated">任何其他选项都用作libpq的连接参数。有关参数列表，请参见&lt;a href=&quot;https://www.postgresql.org/docs/current/static/libpq-connect.html&quot;&gt;www.postgresql.org/docs/current/static/libpq-connect.html&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b63abf56dd47935db8416ede958e0cb9fea8d134" translate="yes" xml:space="preserve">
          <source>Any key in &lt;code&gt;Time::DATE_FORMATS&lt;/code&gt; can be used. See active_support/core_ext/time/conversions.rb.</source>
          <target state="translated">可以使用 &lt;code&gt;Time::DATE_FORMATS&lt;/code&gt; 任何键。请参阅active_support / core_ext / time / conversions.rb。</target>
        </trans-unit>
        <trans-unit id="092c573a958b201881e56383eabf2eb665f35848" translate="yes" xml:space="preserve">
          <source>Any key value pair passed to &lt;code&gt;with&lt;/code&gt; just becomes the &lt;code&gt;params&lt;/code&gt; for the mailer action. So &lt;code&gt;with(user: @user, account: @user.account)&lt;/code&gt; makes &lt;code&gt;params[:user]&lt;/code&gt; and &lt;code&gt;params[:account]&lt;/code&gt; available in the mailer action. Just like controllers have params.</source>
          <target state="translated">传递给任何键值对 &lt;code&gt;with&lt;/code&gt; 刚成为 &lt;code&gt;params&lt;/code&gt; 邮件程序动作。所以 &lt;code&gt;with(user: @user, account: @user.account)&lt;/code&gt; 使得 &lt;code&gt;params[:user]&lt;/code&gt; 和 &lt;code&gt;params[:account]&lt;/code&gt; 在邮件动作可用。就像控制器具有参数一样。</target>
        </trans-unit>
        <trans-unit id="3ec397b6489ca572df9057bfa6ecca308770b158" translate="yes" xml:space="preserve">
          <source>Any method defined within a class inherited from &lt;code&gt;Minitest::Test&lt;/code&gt; (which is the superclass of &lt;code&gt;ActiveSupport::TestCase&lt;/code&gt;) that begins with &lt;code&gt;test_&lt;/code&gt; is simply called a test. So, methods defined as &lt;code&gt;test_password&lt;/code&gt; and &lt;code&gt;test_valid_password&lt;/code&gt; are legal test names and are run automatically when the test case is run.</source>
          <target state="translated">从 &lt;code&gt;Minitest::Test&lt;/code&gt; （这是 &lt;code&gt;ActiveSupport::TestCase&lt;/code&gt; 的超类）继承的类中定义的任何以 &lt;code&gt;test_&lt;/code&gt; 开头的方法都简称为测试。因此，定义为 &lt;code&gt;test_password&lt;/code&gt; 和 &lt;code&gt;test_valid_password&lt;/code&gt; 的方法是合法的测试名称，并且在运行测试用例时会自动运行。</target>
        </trans-unit>
        <trans-unit id="99a01859dc891d92317b2f86ce49ce9bc10a87ef" translate="yes" xml:space="preserve">
          <source>Any method with a block will be treated as an XML markup tag with nested markup in the block. For example, the following:</source>
          <target state="translated">任何带有块的方法将被视为XML标记标签,块中有嵌套标记。例如,如下所示。</target>
        </trans-unit>
        <trans-unit id="34f2ef6d703dbe07a63efb0d5b96c6eafb03e153" translate="yes" xml:space="preserve">
          <source>Any necessary compressors or minifiers must be available on your development system.</source>
          <target state="translated">任何必要的压缩机或迷你机必须在你的开发系统上可用。</target>
        </trans-unit>
        <trans-unit id="f99b626382f4fe62954ccf45eb278c3f26a5ad39" translate="yes" xml:space="preserve">
          <source>Any of these middleware can be added via:</source>
          <target state="translated">这些中间件都可以通过。</target>
        </trans-unit>
        <trans-unit id="9fd97b9942853df83146c6e29b6f4a479aa1c576" translate="yes" xml:space="preserve">
          <source>Any one request will check out a connection the first time it requires access to the database. At the end of the request it will check the connection back in. This means that the additional connection slot will be available again for the next request in the queue.</source>
          <target state="translated">任何一个请求在第一次需要访问数据库的时候,都会检查出一个连接。在请求结束时,它将把连接签回。这意味着,额外的连接槽将为队列中的下一个请求再次提供。</target>
        </trans-unit>
        <trans-unit id="ae758a669d181fe98ecce103d96ba6b1584ce735" translate="yes" xml:space="preserve">
          <source>Any options not seen here are passed on as params with the URL.</source>
          <target state="translated">这里没有看到的任何选项都会作为params与URL一起传递。</target>
        </trans-unit>
        <trans-unit id="100cfbdd904d08e4fdc477c67f22003aa42e836f" translate="yes" xml:space="preserve">
          <source>Any other key (&lt;code&gt;:controller&lt;/code&gt;, &lt;code&gt;:action&lt;/code&gt;, etc.) given to &lt;code&gt;url_for&lt;/code&gt; is forwarded to the Routes module.</source>
          <target state="translated">给予 &lt;code&gt;url_for&lt;/code&gt; 的任何其他键（ &lt;code&gt;:controller&lt;/code&gt; ， &lt;code&gt;:action&lt;/code&gt; 等）都转发到Routes模块。</target>
        </trans-unit>
        <trans-unit id="f082166332dcb4697df3194df46dee18d8078c52" translate="yes" xml:space="preserve">
          <source>Any other key creates standard HTML attributes for the tag.</source>
          <target state="translated">其他任何键都可以为标签创建标准的HTML属性。</target>
        </trans-unit>
        <trans-unit id="896a2b5935c2ed3bb98372cf10e9dd9f07f975e7" translate="yes" xml:space="preserve">
          <source>Any other key creates standard HTML options for the tag.</source>
          <target state="translated">其他任何键都可以为该标签创建标准的HTML选项。</target>
        </trans-unit>
        <trans-unit id="95b58064bc2fdc9e9165fd7b22071c6a3f0628a8" translate="yes" xml:space="preserve">
          <source>Any routing helpers can be used inside a concern. If using a callable, they're accessible from the &lt;a href=&quot;../mapper&quot;&gt;&lt;code&gt;Mapper&lt;/code&gt;&lt;/a&gt; that's passed to &lt;code&gt;call&lt;/code&gt;.</source>
          <target state="translated">任何路由帮助程序都可以在关注区域内使用。如果使用callable，则可以从传递给 &lt;code&gt;call&lt;/code&gt; 的&lt;a href=&quot;../mapper&quot;&gt; &lt;code&gt;Mapper&lt;/code&gt; &lt;/a&gt;中访问它们。</target>
        </trans-unit>
        <trans-unit id="b6de4d08bdb3e242934400970a9378b053293903" translate="yes" xml:space="preserve">
          <source>Any routing helpers can be used inside a concern. If using a callable, they're accessible from the &lt;a href=&quot;../mapper&quot;&gt;Mapper&lt;/a&gt; that's passed to &lt;code&gt;call&lt;/code&gt;.</source>
          <target state="translated">可以在关注区域内使用任何路由助手。如果使用callable，则可以从传递给 &lt;code&gt;call&lt;/code&gt; 的&lt;a href=&quot;../mapper&quot;&gt;Mapper&lt;/a&gt;中访问它们。</target>
        </trans-unit>
        <trans-unit id="a273eb1ae3272b8187ae8742bad7e54ec7886379" translate="yes" xml:space="preserve">
          <source>Any subsequent condition chained to the returned relation will continue generating an empty relation and will not fire any query to the database.</source>
          <target state="translated">任何后续的条件链到返回的关系上,将继续生成一个空的关系,并且不会向数据库发起任何查询。</target>
        </trans-unit>
        <trans-unit id="2a6049cd54a970a22295b92ae63ef6b6b5e3bfb3" translate="yes" xml:space="preserve">
          <source>Any top-level configs are also accessible directly on the return value:</source>
          <target state="translated">任何顶层配置也可以直接在返回值上访问。</target>
        </trans-unit>
        <trans-unit id="7c856e2856c6340535692a32e52ef4476ff38aaf" translate="yes" xml:space="preserve">
          <source>Any user connecting from the 192.168.* range will be able to see this resource, where as any user connecting outside of this range will be told there is no such route.</source>
          <target state="translated">任何从192.168.*范围内连接的用户都能看到这个资源,而在这个范围外连接的用户会被告知没有这个路由。</target>
        </trans-unit>
        <trans-unit id="807e84c82047c2adbf011e020db2837b36538ea9" translate="yes" xml:space="preserve">
          <source>Apache and NGINX support this option, which can be enabled in &lt;code&gt;config/environments/production.rb&lt;/code&gt;:</source>
          <target state="translated">Apache和NGINX支持此选项，可以在 &lt;code&gt;config/environments/production.rb&lt;/code&gt; 中启用该选项：</target>
        </trans-unit>
        <trans-unit id="92f693a94a78adc61a389ef355dc0da63b7621a0" translate="yes" xml:space="preserve">
          <source>Append a callback after actions. See &lt;a href=&quot;classmethods#method-i-_insert_callbacks&quot;&gt;#_insert_callbacks&lt;/a&gt; for parameter details.</source>
          <target state="translated">操作后附加回调。有关参数的详细信息，请参见&lt;a href=&quot;classmethods#method-i-_insert_callbacks&quot;&gt;#_insert_callbacks&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fe30a6c2dfa4276805ef98d881aeb6506cd8a44f" translate="yes" xml:space="preserve">
          <source>Append a callback after actions. See &lt;a href=&quot;classmethods#method-i-_insert_callbacks&quot;&gt;&lt;code&gt;_insert_callbacks&lt;/code&gt;&lt;/a&gt; for parameter details.</source>
          <target state="translated">操作后附加回调。有关参数的详细信息，请参见&lt;a href=&quot;classmethods#method-i-_insert_callbacks&quot;&gt; &lt;code&gt;_insert_callbacks&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f55e63c2501950a220db44d3d6f1770fa120c39c" translate="yes" xml:space="preserve">
          <source>Append a callback around actions. See &lt;a href=&quot;classmethods#method-i-_insert_callbacks&quot;&gt;#_insert_callbacks&lt;/a&gt; for parameter details.</source>
          <target state="translated">在操作周围附加回调。有关参数的详细信息，请参见&lt;a href=&quot;classmethods#method-i-_insert_callbacks&quot;&gt;#_insert_callbacks&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1f4d3da67559a1196178f373a9c86d01d7f37413" translate="yes" xml:space="preserve">
          <source>Append a callback around actions. See &lt;a href=&quot;classmethods#method-i-_insert_callbacks&quot;&gt;&lt;code&gt;_insert_callbacks&lt;/code&gt;&lt;/a&gt; for parameter details.</source>
          <target state="translated">在操作周围附加回调。有关参数的详细信息，请参见&lt;a href=&quot;classmethods#method-i-_insert_callbacks&quot;&gt; &lt;code&gt;_insert_callbacks&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2b11a26e2efe43e1b131b47f3b12b7c6623aa4af" translate="yes" xml:space="preserve">
          <source>Append a callback before actions. See &lt;a href=&quot;classmethods#method-i-_insert_callbacks&quot;&gt;#_insert_callbacks&lt;/a&gt; for parameter details.</source>
          <target state="translated">在操作前附加回调。有关参数的详细信息，请参见&lt;a href=&quot;classmethods#method-i-_insert_callbacks&quot;&gt;#_insert_callbacks&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="632a7b253f26733567e76422ff0043898ec5ad62" translate="yes" xml:space="preserve">
          <source>Append a callback before actions. See &lt;a href=&quot;classmethods#method-i-_insert_callbacks&quot;&gt;&lt;code&gt;_insert_callbacks&lt;/code&gt;&lt;/a&gt; for parameter details.</source>
          <target state="translated">在操作前附加回调。有关参数的详细信息，请参见&lt;a href=&quot;classmethods#method-i-_insert_callbacks&quot;&gt; &lt;code&gt;_insert_callbacks&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="002d3162cc7153dccd2aa4b6e58c1c6d865c8089" translate="yes" xml:space="preserve">
          <source>Append a path to the list of view paths for the current &lt;code&gt;LookupContext&lt;/code&gt;.</source>
          <target state="translated">将路径添加到当前 &lt;code&gt;LookupContext&lt;/code&gt; 的视图路径列表中。</target>
        </trans-unit>
        <trans-unit id="5e08442cac8cb2c37ca7eb067e6c28f3007563f2" translate="yes" xml:space="preserve">
          <source>Append a path to the list of view paths for this controller.</source>
          <target state="translated">为该控制器的视图路径列表添加一个路径。</target>
        </trans-unit>
        <trans-unit id="04d686393a33d85169beec50f8a66be98257efeb" translate="yes" xml:space="preserve">
          <source>Append view path</source>
          <target state="translated">添加视图路径</target>
        </trans-unit>
        <trans-unit id="fe4c8537cd822766fe35f849b23fc68e9ade2cf6" translate="yes" xml:space="preserve">
          <source>Appends &lt;code&gt;:datetime&lt;/code&gt; columns &lt;code&gt;:created_at&lt;/code&gt; and &lt;code&gt;:updated_at&lt;/code&gt; to the table. See &lt;a href=&quot;schemastatements#method-i-add_timestamps&quot;&gt;connection.add_timestamps&lt;/a&gt;</source>
          <target state="translated">将 &lt;code&gt;:datetime&lt;/code&gt; 列 &lt;code&gt;:created_at&lt;/code&gt; 和 &lt;code&gt;:updated_at&lt;/code&gt; 追加到表中。参见&lt;a href=&quot;schemastatements#method-i-add_timestamps&quot;&gt;connection.add_timestamps&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bc5217668bf1ba3173072c7bb92e01544869a1e1" translate="yes" xml:space="preserve">
          <source>Appends a column or columns of a specified type.</source>
          <target state="translated">添加指定类型的一列或多列。</target>
        </trans-unit>
        <trans-unit id="66b56a405fd75f53590e046301cee418ecc773d5" translate="yes" xml:space="preserve">
          <source>Appends a primary key definition to the table definition. Can be called multiple times, but this is probably not a good idea.</source>
          <target state="translated">将主键定义添加到表定义中。可以多次调用,但这可能不是一个好主意。</target>
        </trans-unit>
        <trans-unit id="27450eb1a7c0dbef988e80fa77e8ee4a651bef66" translate="yes" xml:space="preserve">
          <source>Applicable layout</source>
          <target state="translated">适用布局</target>
        </trans-unit>
        <trans-unit id="91dbd124ce11e1ed2e068a2aa6cee2f2cc944e16" translate="yes" xml:space="preserve">
          <source>Application Templates</source>
          <target state="translated">申请模板</target>
        </trans-unit>
        <trans-unit id="8c50563c8816864a2a49b4974245e2e3c7ad8cc1" translate="yes" xml:space="preserve">
          <source>Application log files.</source>
          <target state="translated">应用日志文件。</target>
        </trans-unit>
        <trans-unit id="92c9b4334f29578d20715567b6ea2a48fe88d1b5" translate="yes" xml:space="preserve">
          <source>Application mailboxes need to overwrite the &lt;code&gt;#process&lt;/code&gt; method, which is invoked by the framework after callbacks have been run. The callbacks available are: &lt;code&gt;before_processing&lt;/code&gt;, &lt;code&gt;after_processing&lt;/code&gt;, and &lt;code&gt;around_processing&lt;/code&gt;. The primary use case is ensure certain preconditions to processing are fulfilled using &lt;code&gt;before_processing&lt;/code&gt; callbacks.</source>
          <target state="translated">应用程序邮箱需要覆盖 &lt;code&gt;#process&lt;/code&gt; 方法，该方法在运行回调后由框架调用。可用的回调为： &lt;code&gt;before_processing&lt;/code&gt; ， &lt;code&gt;after_processing&lt;/code&gt; 和 &lt;code&gt;around_processing&lt;/code&gt; 。主要用例是使用 &lt;code&gt;before_processing&lt;/code&gt; 回调确保满足处理的某些前提条件。</target>
        </trans-unit>
        <trans-unit id="42eb92e5b04afdc64b4ddbd76227afc879d313a0" translate="yes" xml:space="preserve">
          <source>Application templates are simple Ruby files containing DSL for adding gems, initializers, etc. to your freshly created Rails project or an existing Rails project.</source>
          <target state="translated">应用程序模板是简单的Ruby文件,包含DSL,用于向新创建的Rails项目或现有的Rails项目添加宝石、初始化器等。</target>
        </trans-unit>
        <trans-unit id="015a148d628019e99a0941f3f79b5220da0872f5" translate="yes" xml:space="preserve">
          <source>Application templates are simple Ruby files containing DSL for adding gems/initializers etc. to your freshly created Rails project or an existing Rails project.</source>
          <target state="translated">应用程序模板是简单的Ruby文件,包含DSL,用于向新创建的Rails项目或现有的Rails项目添加gems/initializers等。</target>
        </trans-unit>
        <trans-unit id="48d0644b87e288e4cf84e49f909e5c6db54119ab" translate="yes" xml:space="preserve">
          <source>Applications and engines have flexible path configuration, meaning that you are not required to place your controllers at &lt;code&gt;app/controllers&lt;/code&gt;, but in any place which you find convenient.</source>
          <target state="translated">应用程序和引擎具有灵活的路径配置，这意味着您无需将控制器放置在 &lt;code&gt;app/controllers&lt;/code&gt; 上，而是放置在您认为方便的任何位置。</target>
        </trans-unit>
        <trans-unit id="6eb7bbbc98593ab371efcb08a427aff62452efea" translate="yes" xml:space="preserve">
          <source>Applications can load Rails 6 defaults and still use the classic autoloader by setting &lt;code&gt;config.autoloader&lt;/code&gt; this way:</source>
          <target state="translated">应用程序可以通过以下方式设置 &lt;code&gt;config.autoloader&lt;/code&gt; 来加载Rails 6的默认值，并且仍然使用经典的自动加载器：</target>
        </trans-unit>
        <trans-unit id="25ac1daa72fd385aba134cd55937ded64f3d09af" translate="yes" xml:space="preserve">
          <source>Applications can load Rails 6 defaults and still use the classic autoloader this way:</source>
          <target state="translated">应用程序可以通过这种方式加载Rails 6默认值并仍然使用经典的自动加载器。</target>
        </trans-unit>
        <trans-unit id="2326f1841ef8d371eac35b472a5692a9d085f942" translate="yes" xml:space="preserve">
          <source>Applications can safely autoload constants during boot using a reloader callback:</source>
          <target state="translated">应用程序可以在启动过程中使用reloader回调安全地自动加载常量。</target>
        </trans-unit>
        <trans-unit id="b4c7d58e31644c3191925c7408b715a25bfa7bcd" translate="yes" xml:space="preserve">
          <source>Applications cannot join across databases. Rails 6.1 will support using &lt;code&gt;has_many&lt;/code&gt; relationships and creating 2 queries instead of joining, but Rails 6.0 will require you to split the joins into 2 selects manually.</source>
          <target state="translated">应用程序无法跨数据库加入。Rails 6.1将支持使用 &lt;code&gt;has_many&lt;/code&gt; 关系并创建2个查询而不是联接，但是Rails 6.0将要求您手动将联接拆分为2个选择。</target>
        </trans-unit>
        <trans-unit id="737df8640f9140e71268eb21d4489ffe4ecd0051" translate="yes" xml:space="preserve">
          <source>Applications created before Rails 4.1 uses &lt;code&gt;Marshal&lt;/code&gt; to serialize cookie values into the signed and encrypted cookie jars. If you want to use the new &lt;code&gt;JSON&lt;/code&gt;-based format in your application, you can add an initializer file with the following content:</source>
          <target state="translated">在Rails 4.1之前创建的应用程序使用 &lt;code&gt;Marshal&lt;/code&gt; 将Cookie值序列化到签名和加密的Cookie罐中。如果要在应用程序中使用新的基于 &lt;code&gt;JSON&lt;/code&gt; 的格式，则可以添加具有以下内容的初始化程序文件：</target>
        </trans-unit>
        <trans-unit id="79397517d7ed06789b55b3ad1ed2a394440a888c" translate="yes" xml:space="preserve">
          <source>Applies human inflection rules to the argument.</source>
          <target state="translated">将人的拐弯抹角规则运用到论证中。</target>
        </trans-unit>
        <trans-unit id="7590214154595f1ce006dbf49c05747a3052ed3c" translate="yes" xml:space="preserve">
          <source>Applies the transformations to the source image in &lt;code&gt;file&lt;/code&gt;, producing a target image in the specified &lt;code&gt;format&lt;/code&gt;. Yields an open Tempfile containing the target image. Closes and unlinks the output tempfile after yielding to the given block. Returns the result of the block.</source>
          <target state="translated">将转换应用于 &lt;code&gt;file&lt;/code&gt; 的源图像，以指定 &lt;code&gt;format&lt;/code&gt; 生成目标图像。产生一个包含目标图像的打开的临时文件。屈服到给定的块后，关闭并取消链接输出临时文件。返回块的结果。</target>
        </trans-unit>
        <trans-unit id="de4057a0dbf5c0d958ce4de3528a2f0db5a8a3be" translate="yes" xml:space="preserve">
          <source>Applying a default scope</source>
          <target state="translated">应用默认范围</target>
        </trans-unit>
        <trans-unit id="ce5e5792e97fe5c7861d6ae9b29cf5a25cc0e70a" translate="yes" xml:space="preserve">
          <source>Argument</source>
          <target state="translated">Argument</target>
        </trans-unit>
        <trans-unit id="41ed7b8f7c8e97d4eaa49d91cf5d985f2894e409" translate="yes" xml:space="preserve">
          <source>ArgumentError</source>
          <target state="translated">ArgumentError</target>
        </trans-unit>
        <trans-unit id="cbb9fa252e60809efa55a7ad83aea5438ef56753" translate="yes" xml:space="preserve">
          <source>Arguments</source>
          <target state="translated">Arguments</target>
        </trans-unit>
        <trans-unit id="d8ab9bae72f54c47c61ee715bbcb3eee179ae91e" translate="yes" xml:space="preserve">
          <source>Arguments and blocks are forwarded to the method if invoked:</source>
          <target state="translated">如果被调用,参数和区块将被转发到该方法。</target>
        </trans-unit>
        <trans-unit id="9007dc5a1e7f98f29e33b1c870113c2bc3e3d80e" translate="yes" xml:space="preserve">
          <source>Arguments can be passed as well.</source>
          <target state="translated">也可以传递参数。</target>
        </trans-unit>
        <trans-unit id="5b0130266938a2f219eb55284a7dc186022f489b" translate="yes" xml:space="preserve">
          <source>Arguments#deserialize</source>
          <target state="translated">Arguments#deserialize</target>
        </trans-unit>
        <trans-unit id="0cdc88a08282d061ca5c576ff3d8ac9f61c98fef" translate="yes" xml:space="preserve">
          <source>Arguments#serialize</source>
          <target state="translated">Arguments#serialize</target>
        </trans-unit>
        <trans-unit id="6b1ab738e993418781d7362d5c6a17cd4906d438" translate="yes" xml:space="preserve">
          <source>Around callbacks can access the return value from the event, if it wasn't halted, from the &lt;code&gt;yield&lt;/code&gt; call.</source>
          <target state="translated">围绕回调可以从 &lt;code&gt;yield&lt;/code&gt; 调用访问事件的返回值（如果未暂停）。</target>
        </trans-unit>
        <trans-unit id="107004472b7ba4e5e31f3082ee1fb5a1239eec61" translate="yes" xml:space="preserve">
          <source>Array</source>
          <target state="translated">Array</target>
        </trans-unit>
        <trans-unit id="39d600b0b05680a51c82205ca347fd5c89eae457" translate="yes" xml:space="preserve">
          <source>Array Conditions</source>
          <target state="translated">阵列条件</target>
        </trans-unit>
        <trans-unit id="90a3d73cdd3eaab03f510126409155ba94843a00" translate="yes" xml:space="preserve">
          <source>Array parameters do not play well with the &lt;code&gt;check_box&lt;/code&gt; helper. According to the HTML specification unchecked checkboxes submit no value. However it is often convenient for a checkbox to always submit a value. The &lt;code&gt;check_box&lt;/code&gt; helper fakes this by creating an auxiliary hidden input with the same name. If the checkbox is unchecked only the hidden input is submitted and if it is checked then both are submitted but the value submitted by the checkbox takes precedence.</source>
          <target state="translated">数组参数在 &lt;code&gt;check_box&lt;/code&gt; 助手中不能很好地发挥作用。根据HTML规范，未选中的复选框不提交任何值。但是，复选框始终提交值通常很方便。该 &lt;code&gt;check_box&lt;/code&gt; 助手通过创建具有相同名称的辅助隐藏输入假货这一点。如果未选中此复选框，则仅提交隐藏的输入；如果选中，则将同时提交隐藏的输入，但该复选框提交的值优先。</target>
        </trans-unit>
        <trans-unit id="8aa18d40a847fa324661d5b0c7537ac0fa7ed320" translate="yes" xml:space="preserve">
          <source>Array#from</source>
          <target state="translated">Array#from</target>
        </trans-unit>
        <trans-unit id="bc3010fe583647c7919473d57f5f4d8c438d7931" translate="yes" xml:space="preserve">
          <source>Array#to</source>
          <target state="translated">Array#to</target>
        </trans-unit>
        <trans-unit id="974c5cd21a18eeebb9fe7afa2db481bcf8e21ede" translate="yes" xml:space="preserve">
          <source>Array#to_s</source>
          <target state="translated">Array#to_s</target>
        </trans-unit>
        <trans-unit id="d8aa636face291ad98cb3ac4e7f1f03f6f3c6761" translate="yes" xml:space="preserve">
          <source>Array::wrap</source>
          <target state="translated">Array::wrap</target>
        </trans-unit>
        <trans-unit id="5b29e93cf0d3bc2e47cc82a3d50f07160c433076" translate="yes" xml:space="preserve">
          <source>ArrayInquirer</source>
          <target state="translated">ArrayInquirer</target>
        </trans-unit>
        <trans-unit id="49aac392830c96361cc47cf85f75f0f2aa0ad15a" translate="yes" xml:space="preserve">
          <source>ArrayInquirer#any?</source>
          <target state="translated">ArrayInquirer#any?</target>
        </trans-unit>
        <trans-unit id="cfa2ec7b7ba3aed914022b42ca03a253bb0dd1d7" translate="yes" xml:space="preserve">
          <source>Arrays return the result of applying &lt;code&gt;to_query&lt;/code&gt; to each element with &lt;code&gt;key[]&lt;/code&gt; as key, and join the result with &quot;&amp;amp;&quot;:</source>
          <target state="translated">数组以 &lt;code&gt;key[]&lt;/code&gt; 作为键， &lt;code&gt;to_query&lt;/code&gt; 每个元素应用to_query的结果返回，并以&amp;ldquo;＆&amp;rdquo; 联接结果：</target>
        </trans-unit>
        <trans-unit id="1bdf60a88ab84584ba618bf980318d3eeffad890" translate="yes" xml:space="preserve">
          <source>ArticlesController#new is missing a template for request formats: text/html</source>
          <target state="translated">ArticlesController#new缺少一个请求格式的模板:text/html。</target>
        </trans-unit>
        <trans-unit id="fce66f32e961dafe13f965839b0f58df4f453aca" translate="yes" xml:space="preserve">
          <source>As &lt;a href=&quot;#constant-reloading&quot;&gt;we saw earlier&lt;/a&gt;, Rails removes autoloaded constants, but &lt;code&gt;AUTH_SERVICE&lt;/code&gt; stores the original class object. Stale, non-reachable using the original constant, but perfectly functional.</source>
          <target state="translated">正如&lt;a href=&quot;#constant-reloading&quot;&gt;我们前面所看到的&lt;/a&gt;，Rails的自动加载的常量移除了，但是 &lt;code&gt;AUTH_SERVICE&lt;/code&gt; 存储原始类对象。陈旧，使用原始常量不可访问，但功能完善。</target>
        </trans-unit>
        <trans-unit id="1b2a0db8994c0599cf38483e904012a74e680e34" translate="yes" xml:space="preserve">
          <source>As &lt;a href=&quot;#resolution-algorithm-for-qualified-constants&quot;&gt;we saw before&lt;/a&gt;, Ruby looks up the constant in &lt;code&gt;Hotel&lt;/code&gt; and its ancestors. If &lt;code&gt;app/models/image.rb&lt;/code&gt; has been loaded but &lt;code&gt;app/models/hotel/image.rb&lt;/code&gt; hasn't, Ruby does not find &lt;code&gt;Image&lt;/code&gt; in &lt;code&gt;Hotel&lt;/code&gt;, but it does in &lt;code&gt;Object&lt;/code&gt;:</source>
          <target state="translated">正如&lt;a href=&quot;#resolution-algorithm-for-qualified-constants&quot;&gt;我们之前看到的&lt;/a&gt;，Ruby在 &lt;code&gt;Hotel&lt;/code&gt; 及其祖先中查找常量。如果已加载 &lt;code&gt;app/models/image.rb&lt;/code&gt; 但未加载 &lt;code&gt;app/models/hotel/image.rb&lt;/code&gt; ，则Ruby 在 &lt;code&gt;Hotel&lt;/code&gt; 中找不到 &lt;code&gt;Image&lt;/code&gt; ，但在 &lt;code&gt;Object&lt;/code&gt; 中找到Image：</target>
        </trans-unit>
        <trans-unit id="e45f9ecdfbdd6bc4f665a3fda21039d3da4df7b2" translate="yes" xml:space="preserve">
          <source>As &lt;code&gt;Lambdas&lt;/code&gt; are a type of &lt;code&gt;Proc&lt;/code&gt;, they can also be used to write inline conditions in a shorter way.</source>
          <target state="translated">由于 &lt;code&gt;Lambdas&lt;/code&gt; 是 &lt;code&gt;Proc&lt;/code&gt; 的一种，因此它们也可以用于以较短的方式编写内联条件。</target>
        </trans-unit>
        <trans-unit id="4d5aa856952681cee14eda2ff5b2c7e466c7ef79" translate="yes" xml:space="preserve">
          <source>As &lt;code&gt;client&lt;/code&gt; is explicitly set to be a readonly object, the above code will raise an &lt;code&gt;ActiveRecord::ReadOnlyRecord&lt;/code&gt; exception when calling &lt;code&gt;client.save&lt;/code&gt; with an updated value of &lt;em&gt;visits&lt;/em&gt;.</source>
          <target state="translated">由于将 &lt;code&gt;client&lt;/code&gt; 明确设置为只读对象，因此当使用更新后的&lt;em&gt;visits&lt;/em&gt;值调用 &lt;code&gt;client.save&lt;/code&gt; 时，以上代码将引发 &lt;code&gt;ActiveRecord::ReadOnlyRecord&lt;/code&gt; 异常。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cd8c3e7092c8cc226ca5a873e27b45b18025c029" translate="yes" xml:space="preserve">
          <source>As &lt;code&gt;customer&lt;/code&gt; is explicitly set to be a readonly object, the above code will raise an &lt;code&gt;ActiveRecord::ReadOnlyRecord&lt;/code&gt; exception when calling &lt;code&gt;customer.save&lt;/code&gt; with an updated value of &lt;em&gt;visits&lt;/em&gt;.</source>
          <target state="translated">由于将 &lt;code&gt;customer&lt;/code&gt; 明确地设置为只读对象，因此当使用更新后的&lt;em&gt;visits&lt;/em&gt;值调用 &lt;code&gt;customer.save&lt;/code&gt; 时，以上代码将引发 &lt;code&gt;ActiveRecord::ReadOnlyRecord&lt;/code&gt; 异常。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7806f57e12aba2e4b8a04ae69dce8d19a67cb4a8" translate="yes" xml:space="preserve">
          <source>As Action Mailer now uses the &lt;a href=&quot;https://github.com/mikel/mail&quot;&gt;Mail gem&lt;/a&gt;, this becomes as simple as adding to your &lt;code&gt;config/environments/$RAILS_ENV.rb&lt;/code&gt; file:</source>
          <target state="translated">由于Action Mailer现在使用&lt;a href=&quot;https://github.com/mikel/mail&quot;&gt;Mail gem&lt;/a&gt;，这就像添加到 &lt;code&gt;config/environments/$RAILS_ENV.rb&lt;/code&gt; 文件中一样简单：</target>
        </trans-unit>
        <trans-unit id="eb344d5bfdf31ad5f3ef47143ba9f10faa616af9" translate="yes" xml:space="preserve">
          <source>As JSON Patch was only recently made into an RFC, there aren't a lot of great Ruby libraries yet. Aaron Patterson's &lt;a href=&quot;https://github.com/tenderlove/hana&quot;&gt;hana&lt;/a&gt; is one such gem, but doesn't have full support for the last few changes in the specification.</source>
          <target state="translated">由于JSON Patch仅在最近才被制成RFC，因此还没有很多出色的Ruby库。亚伦&amp;middot;帕特森（Aaron Patterson）的&lt;a href=&quot;https://github.com/tenderlove/hana&quot;&gt;hana&lt;/a&gt;就是这样的瑰宝，但并未完全支持规范中的最后几处更改。</target>
        </trans-unit>
        <trans-unit id="fd09f1deacc922c5a7a2fd34fc9d1e4a37a889be" translate="yes" xml:space="preserve">
          <source>As a consequence &lt;code&gt;false&lt;/code&gt; can't be a used as a padding value.</source>
          <target state="translated">因此，不能将 &lt;code&gt;false&lt;/code&gt; 用作填充值。</target>
        </trans-unit>
        <trans-unit id="978fab2edffbbf943f36dd76b9dd13f9947e4113" translate="yes" xml:space="preserve">
          <source>As a consequence &lt;code&gt;false&lt;/code&gt; can't be used as a padding value.</source>
          <target state="translated">因此，不能将 &lt;code&gt;false&lt;/code&gt; 用作填充值。</target>
        </trans-unit>
        <trans-unit id="cc4e21d318a8d6456d7cfeaa3ad3761f9d0f2563" translate="yes" xml:space="preserve">
          <source>As a consequence changes to the database are not seen outside your connection until the operation is complete. For example, if you try to update the index of a search engine in &lt;code&gt;after_save&lt;/code&gt; the indexer won't see the updated record. The &lt;a href=&quot;classmethods#method-i-after_commit&quot;&gt;&lt;code&gt;after_commit&lt;/code&gt;&lt;/a&gt; callback is the only one that is triggered once the update is committed. See below.</source>
          <target state="translated">因此，在操作完成之前，不会在连接外部看到对数据库的更改。例如，如果您尝试在 &lt;code&gt;after_save&lt;/code&gt; 中更新搜索引擎的索引，则索引器将看不到更新的记录。该&lt;a href=&quot;classmethods#method-i-after_commit&quot;&gt; &lt;code&gt;after_commit&lt;/code&gt; &lt;/a&gt;回调是唯一的一次更新承诺被触发。见下文。</target>
        </trans-unit>
        <trans-unit id="871bb7f86bab2f234269f1f3ec13896710f76ca1" translate="yes" xml:space="preserve">
          <source>As a consequence changes to the database are not seen outside your connection until the operation is complete. For example, if you try to update the index of a search engine in &lt;code&gt;after_save&lt;/code&gt; the indexer won't see the updated record. The &lt;a href=&quot;classmethods#method-i-after_commit&quot;&gt;after_commit&lt;/a&gt; callback is the only one that is triggered once the update is committed. See below.</source>
          <target state="translated">因此，在操作完成之前，不会在连接外部看到对数据库的更改。例如，如果您尝试在 &lt;code&gt;after_save&lt;/code&gt; 中更新搜索引擎的索引，则索引器将看不到更新的记录。该&lt;a href=&quot;classmethods#method-i-after_commit&quot;&gt;after_commit&lt;/a&gt;回调是唯一的一次更新承诺被触发。见下文。</target>
        </trans-unit>
        <trans-unit id="5210bfd39f0744fb11e489d2e376ae7b372c717c" translate="yes" xml:space="preserve">
          <source>As a convenience you can instead pass the symbol &lt;code&gt;:all_blank&lt;/code&gt; which will create a proc that will reject records where all the attributes are blank excluding any value for &lt;code&gt;_destroy&lt;/code&gt;.</source>
          <target state="translated">为方便起见，您可以改为传递符号 &lt;code&gt;:all_blank&lt;/code&gt; ，该符号将创建一个proc，该proc将拒绝所有属性为空白（不包括 &lt;code&gt;_destroy&lt;/code&gt; 的任何值）的记录。</target>
        </trans-unit>
        <trans-unit id="42133647110aa0789770745f1de429a6b8778382" translate="yes" xml:space="preserve">
          <source>As a general rule the final input name is the concatenation of the name given to &lt;code&gt;fields_for&lt;/code&gt;/&lt;code&gt;form_with&lt;/code&gt;, the index value, and the name of the attribute. You can also pass an &lt;code&gt;:index&lt;/code&gt; option directly to helpers such as &lt;code&gt;text_field&lt;/code&gt;, but it is usually less repetitive to specify this at the form builder level rather than on individual input controls.</source>
          <target state="translated">通常，最后的输入名称是将给 &lt;code&gt;fields_for&lt;/code&gt; / &lt;code&gt;form_with&lt;/code&gt; 的名称，索引值和属性名称的串联。您还可以将 &lt;code&gt;:index&lt;/code&gt; 选项直接传递给诸如 &lt;code&gt;text_field&lt;/code&gt; 之类的助手，但是通常在表单构建器级别而不是在单个输入控件上指定此选项的重复性较低。</target>
        </trans-unit>
        <trans-unit id="54f5508b32771224f92bfa8d962813d495da5654" translate="yes" xml:space="preserve">
          <source>As a rule of thumb you can think of &lt;code&gt;camelize&lt;/code&gt; as the inverse of &lt;a href=&quot;inflector#method-i-underscore&quot;&gt;&lt;code&gt;underscore&lt;/code&gt;&lt;/a&gt;, though there are cases where that does not hold:</source>
          <target state="translated">根据经验，您可以将 &lt;code&gt;camelize&lt;/code&gt; 视为&lt;a href=&quot;inflector#method-i-underscore&quot;&gt; &lt;code&gt;underscore&lt;/code&gt; &lt;/a&gt;的反义词，尽管在某些情况下，驼峰不成立：</target>
        </trans-unit>
        <trans-unit id="18bc38e1aa02677cf68d29a9b6e18c55987f72b2" translate="yes" xml:space="preserve">
          <source>As a rule of thumb you can think of &lt;code&gt;camelize&lt;/code&gt; as the inverse of &lt;a href=&quot;inflector#method-i-underscore&quot;&gt;underscore&lt;/a&gt;, though there are cases where that does not hold:</source>
          <target state="translated">根据经验，您可以将 &lt;code&gt;camelize&lt;/code&gt; 视为&lt;a href=&quot;inflector#method-i-underscore&quot;&gt;下划线&lt;/a&gt;的反面，尽管在某些情况下，驼峰不成立：</target>
        </trans-unit>
        <trans-unit id="bc1c846d3b3564d985e4700d1aad12a375eb77c2" translate="yes" xml:space="preserve">
          <source>As a rule of thumb you can think of &lt;code&gt;camelize&lt;/code&gt; as the inverse of &lt;code&gt;underscore&lt;/code&gt;, though there are cases where that does not hold: &lt;code&gt;&quot;SSLError&quot;.underscore.camelize&lt;/code&gt; gives back &lt;code&gt;&quot;SslError&quot;&lt;/code&gt;. To support cases such as this, Active Support allows you to specify acronyms in &lt;code&gt;config/initializers/inflections.rb&lt;/code&gt;:</source>
          <target state="translated">根据经验，您可以将 &lt;code&gt;camelize&lt;/code&gt; 视为 &lt;code&gt;underscore&lt;/code&gt; 的反义词，尽管在某些情况下不成立： &lt;code&gt;&quot;SSLError&quot;.underscore.camelize&lt;/code&gt; 会返回 &lt;code&gt;&quot;SslError&quot;&lt;/code&gt; 。为了支持这种情况，Active Support允许您在 &lt;code&gt;config/initializers/inflections.rb&lt;/code&gt; 中指定首字母缩写词：</target>
        </trans-unit>
        <trans-unit id="6b28fa957e3a6d21f0fa3844c7f1c68b1b497165" translate="yes" xml:space="preserve">
          <source>As a rule of thumb you can think of &lt;code&gt;underscore&lt;/code&gt; as the inverse of &lt;a href=&quot;inflector#method-i-camelize&quot;&gt;&lt;code&gt;camelize&lt;/code&gt;&lt;/a&gt;, though there are cases where that does not hold:</source>
          <target state="translated">根据经验，您可以将 &lt;code&gt;underscore&lt;/code&gt; 视为&lt;a href=&quot;inflector#method-i-camelize&quot;&gt; &lt;code&gt;camelize&lt;/code&gt; &lt;/a&gt;的倒数，尽管在某些情况下，下划线不成立：</target>
        </trans-unit>
        <trans-unit id="d4287e5286028f6a062516536c91b72df8c2816a" translate="yes" xml:space="preserve">
          <source>As a rule of thumb you can think of &lt;code&gt;underscore&lt;/code&gt; as the inverse of &lt;a href=&quot;inflector#method-i-camelize&quot;&gt;camelize&lt;/a&gt;, though there are cases where that does not hold:</source>
          <target state="translated">根据经验，您可以将 &lt;code&gt;underscore&lt;/code&gt; 视为&lt;a href=&quot;inflector#method-i-camelize&quot;&gt;驼色&lt;/a&gt;的倒数，尽管在某些情况下，下划线不成立：</target>
        </trans-unit>
        <trans-unit id="febeb91dccc3f8b8cc0004ee11b11a433ae5ac59" translate="yes" xml:space="preserve">
          <source>As a rule of thumb you can think of &lt;code&gt;underscore&lt;/code&gt; as the inverse of &lt;code&gt;camelize&lt;/code&gt;, though there are cases where that does not hold. For example, &lt;code&gt;&quot;SSLError&quot;.underscore.camelize&lt;/code&gt; gives back &lt;code&gt;&quot;SslError&quot;&lt;/code&gt;.</source>
          <target state="translated">根据经验，您可以将 &lt;code&gt;underscore&lt;/code&gt; 视为 &lt;code&gt;camelize&lt;/code&gt; 的倒数，尽管在某些情况下下划线不成立。例如， &lt;code&gt;&quot;SSLError&quot;.underscore.camelize&lt;/code&gt; 会返回 &lt;code&gt;&quot;SslError&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a8fbb5479318c21e7787167f08deff0929c51faa" translate="yes" xml:space="preserve">
          <source>As a rule of thumb you can think of this method as the one that transforms paths into Ruby class or module names, where slashes separate namespaces:</source>
          <target state="translated">作为一个经验法则,你可以认为这个方法是将路径转换为Ruby类或模块名的方法,其中斜线分开了命名空间。</target>
        </trans-unit>
        <trans-unit id="da8ea48025dafcb5caacc5c52d2567979a601f60" translate="yes" xml:space="preserve">
          <source>As a rule of thumb you should be using &lt;code&gt;date_select&lt;/code&gt; when working with model objects and &lt;code&gt;select_date&lt;/code&gt; in other cases, such as a search form which filters results by date.</source>
          <target state="translated">根据经验，在处理模型对象时应使用 &lt;code&gt;date_select&lt;/code&gt; ，在其他情况下应使用 &lt;code&gt;select_date&lt;/code&gt; ，例如按日期过滤结果的搜索表单。</target>
        </trans-unit>
        <trans-unit id="f78c0d7f4f7367080307886bd86e3089ef5a6d31" translate="yes" xml:space="preserve">
          <source>As a rule of thumb, &lt;code&gt;tableize&lt;/code&gt; returns the table name that corresponds to a given model for simple cases. The actual implementation in Active Record is not straight &lt;code&gt;tableize&lt;/code&gt; indeed, because it also demodulizes the class name and checks a few options that may affect the returned string.</source>
          <target state="translated">根据经验， &lt;code&gt;tableize&lt;/code&gt; 返回的表名称与简单情况下的给定模型相对应。实际上，Active Record中的实际实现不是直接 &lt;code&gt;tableize&lt;/code&gt; ，因为它还会解调类名并检查一些可能影响返回的字符串的选项。</target>
        </trans-unit>
        <trans-unit id="05991f3b5b01a4c92571582d478e2d27b97d6d79" translate="yes" xml:space="preserve">
          <source>As a rule of thumb, except perhaps for concatenation as explained above, any method that may change a string gives you an unsafe string. These are &lt;code&gt;downcase&lt;/code&gt;, &lt;code&gt;gsub&lt;/code&gt;, &lt;code&gt;strip&lt;/code&gt;, &lt;code&gt;chomp&lt;/code&gt;, &lt;code&gt;underscore&lt;/code&gt;, etc.</source>
          <target state="translated">根据经验，除可能如上所述的串联外，任何可能更改字符串的方法都会为您提供不安全的字符串。这些是 &lt;code&gt;downcase&lt;/code&gt; ， &lt;code&gt;gsub&lt;/code&gt; ， &lt;code&gt;strip&lt;/code&gt; ， &lt;code&gt;chomp&lt;/code&gt; ， &lt;code&gt;underscore&lt;/code&gt; 等。</target>
        </trans-unit>
        <trans-unit id="848d93dfd437ae891451140ea370709066d45986" translate="yes" xml:space="preserve">
          <source>As a second step, &lt;em&gt;it is good practice to escape all output of the application&lt;/em&gt;, especially when re-displaying user input, which hasn't been input-filtered (as in the search form example earlier on). &lt;em&gt;Use &lt;code&gt;escapeHTML()&lt;/code&gt; (or its alias &lt;code&gt;h()&lt;/code&gt;) method&lt;/em&gt; to replace the HTML input characters &amp;amp;, &quot;, &amp;lt;, and &amp;gt; by their uninterpreted representations in HTML (&lt;code&gt;&amp;amp;amp;&lt;/code&gt;, &lt;code&gt;&amp;amp;quot;&lt;/code&gt;, &lt;code&gt;&amp;amp;lt;&lt;/code&gt;, and &lt;code&gt;&amp;amp;gt;&lt;/code&gt;).</source>
          <target state="translated">第二步，&lt;em&gt;优良作法是转义应用程序的所有输出&lt;/em&gt;，尤其是在重新显示尚未经过输入过滤的用户输入时（如前面的搜索表单示例中所示）。&lt;em&gt;使用 &lt;code&gt;escapeHTML()&lt;/code&gt; （或其别名 &lt;code&gt;h()&lt;/code&gt; ）方法&lt;/em&gt;将HTML输入字符＆，&amp;ldquo;，&amp;lt;和&amp;gt;替换为HTML中未解释的表示形式（ &lt;code&gt;&amp;amp;amp;&lt;/code&gt; ， &lt;code&gt;&amp;amp;quot;&lt;/code&gt; ， &lt;code&gt;&amp;amp;lt;&lt;/code&gt; 和 &lt;code&gt;&amp;amp;gt;&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="572c22a3af9f76cc84d2ae77be0a43ab9fb474b9" translate="yes" xml:space="preserve">
          <source>As a second step, &lt;em&gt;it is good practice to escape all output of the application&lt;/em&gt;, especially when re-displaying user input, which hasn't been input-filtered (as in the search form example earlier on). &lt;em&gt;Use &lt;code&gt;escapeHTML()&lt;/code&gt; (or its alias &lt;code&gt;h()&lt;/code&gt;) method&lt;/em&gt; to replace the HTML input characters &lt;code&gt;&amp;amp;&lt;/code&gt;, &lt;code&gt;&quot;&lt;/code&gt;, &lt;code&gt;&amp;lt;&lt;/code&gt;, and &lt;code&gt;&amp;gt;&lt;/code&gt; by their uninterpreted representations in HTML (&lt;code&gt;&amp;amp;amp;&lt;/code&gt;, &lt;code&gt;&amp;amp;quot;&lt;/code&gt;, &lt;code&gt;&amp;amp;lt;&lt;/code&gt;, and &lt;code&gt;&amp;amp;gt;&lt;/code&gt;).</source>
          <target state="translated">第二步，&lt;em&gt;好的做法是转义应用程序的所有输出&lt;/em&gt;，尤其是在重新显示尚未经过输入过滤的用户输入时（如前面的搜索表单示例中所示）。&lt;em&gt;使用 &lt;code&gt;escapeHTML()&lt;/code&gt; （或其别名 &lt;code&gt;h()&lt;/code&gt; ）方法&lt;/em&gt;，以取代HTML输入字符 &lt;code&gt;&amp;amp;&lt;/code&gt; ， &lt;code&gt;&quot;&lt;/code&gt; ， &lt;code&gt;&amp;lt;&lt;/code&gt; ，和 &lt;code&gt;&amp;gt;&lt;/code&gt; 通过在HTML的未解释的表示（ &lt;code&gt;&amp;amp;amp;&lt;/code&gt; ， &lt;code&gt;&amp;amp;quot;&lt;/code&gt; ， &lt;code&gt;&amp;amp;lt;&lt;/code&gt; 和 &lt;code&gt;&amp;amp;gt;&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="fd2eb5ce0ff90cbf274f3290d8393e02b1aa366b" translate="yes" xml:space="preserve">
          <source>As a shortcut you can append [] to the name and omit the &lt;code&gt;:index&lt;/code&gt; option. This is the same as specifying &lt;code&gt;index: address.id&lt;/code&gt; so</source>
          <target state="translated">作为快捷方式，您可以在名称后附加[]并省略 &lt;code&gt;:index&lt;/code&gt; 选项。这是等同于指定 &lt;code&gt;index: address.id&lt;/code&gt; 所以</target>
        </trans-unit>
        <trans-unit id="c7c8d257489f5dec127eb8cc5b9e6da63262267e" translate="yes" xml:space="preserve">
          <source>As a user you should always only access the public methods on the I18n module, but it is useful to know about the capabilities of the backend.</source>
          <target state="translated">作为用户,你应该始终只访问I18n模块上的公共方法,但了解后台的功能是很有用的。</target>
        </trans-unit>
        <trans-unit id="ae2bffcd80ad7a904d6a000333a9eb42b67f771c" translate="yes" xml:space="preserve">
          <source>As above, you can perform this step using</source>
          <target state="translated">如上所述,您可以使用</target>
        </trans-unit>
        <trans-unit id="3c169eebb65a0dc7751fe9e15a52c0a6b52f4bf1" translate="yes" xml:space="preserve">
          <source>As always, what has been generated for you is just a starting point. You can add or remove from it as you see fit by editing the &lt;code&gt;db/migrate/YYYYMMDDHHMMSS_add_details_to_products.rb&lt;/code&gt; file.</source>
          <target state="translated">与往常一样，为您生成的只是一个起点。通过编辑 &lt;code&gt;db/migrate/YYYYMMDDHHMMSS_add_details_to_products.rb&lt;/code&gt; 文件，可以根据需要添加或删除该文件。</target>
        </trans-unit>
        <trans-unit id="49a66638caaaeac9017e763814029163b0ada233" translate="yes" xml:space="preserve">
          <source>As an application grows in popularity and usage you'll need to scale the application to support your new users and their data. One way in which your application may need to scale is on the database level. Rails now has support for multiple databases so you don't have to store your data all in one place.</source>
          <target state="translated">随着应用程序的普及和使用量的增长,您需要对应用程序进行扩展,以支持您的新用户和他们的数据。您的应用程序可能需要扩展的一种方式是在数据库层面。Rails现在支持多个数据库,因此您不必将数据全部存储在一个地方。</target>
        </trans-unit>
        <trans-unit id="cfbfc3637b2401e7d7f07a33b49c110d0e3c9ca8" translate="yes" xml:space="preserve">
          <source>As an engine can now be a &lt;code&gt;Rack&lt;/code&gt; endpoint, it can also have a middleware stack. The usage is exactly the same as in &lt;code&gt;Application&lt;/code&gt;:</source>
          <target state="translated">由于引擎现在可以是 &lt;code&gt;Rack&lt;/code&gt; 端点，因此它也可以具有中间件堆栈。用法与 &lt;code&gt;Application&lt;/code&gt; 中的用法完全相同：</target>
        </trans-unit>
        <trans-unit id="0be13fc2d6c8e291f18f7f0160fbd62c2d45aee1" translate="yes" xml:space="preserve">
          <source>As an engine can now be a Rack endpoint, it can also have a middleware stack. The usage is exactly the same as in &lt;code&gt;Application&lt;/code&gt;:</source>
          <target state="translated">由于引擎现在可以是Rack端点，因此它也可以具有中间件堆栈。用法与 &lt;code&gt;Application&lt;/code&gt; 中的用法完全相同：</target>
        </trans-unit>
        <trans-unit id="322431d4fff3b6c16382b112c3f322499cd725d4" translate="yes" xml:space="preserve">
          <source>As an example, here's some CoffeeScript code that makes an Ajax request using the jQuery library:</source>
          <target state="translated">举个例子,这里有一些CoffeeScript代码,它使用jQuery库进行Ajax请求。</target>
        </trans-unit>
        <trans-unit id="b9108155eb487d63d6df7bfe66cc1aac56f07d48" translate="yes" xml:space="preserve">
          <source>As an example, here's some JavaScript code that makes an Ajax request:</source>
          <target state="translated">举个例子,这里有一些Ajax请求的JavaScript代码。</target>
        </trans-unit>
        <trans-unit id="a1c81cbcb40aaf345b740df8519e71029b74eb58" translate="yes" xml:space="preserve">
          <source>As an example, if a user goes to &lt;code&gt;/clients/new&lt;/code&gt; in your application to add a new client, Rails will create an instance of &lt;code&gt;ClientsController&lt;/code&gt; and call its &lt;code&gt;new&lt;/code&gt; method. Note that the empty method from the example above would work just fine because Rails will by default render the &lt;code&gt;new.html.erb&lt;/code&gt; view unless the action says otherwise. By creating a new &lt;code&gt;Client&lt;/code&gt;, the &lt;code&gt;new&lt;/code&gt; method can make a &lt;code&gt;@client&lt;/code&gt; instance variable accessible in the view:</source>
          <target state="translated">例如，如果用户在应用程序中转到 &lt;code&gt;/clients/new&lt;/code&gt; 来添加新客户端，Rails将创建 &lt;code&gt;ClientsController&lt;/code&gt; 的实例并调用其 &lt;code&gt;new&lt;/code&gt; 方法。请注意，上面示例中的empty方法可以很好地工作，因为Rails默认情况下将呈现 &lt;code&gt;new.html.erb&lt;/code&gt; 视图，除非操作另有说明。通过创建新的 &lt;code&gt;Client&lt;/code&gt; ， &lt;code&gt;new&lt;/code&gt; 方法可以使 &lt;code&gt;@client&lt;/code&gt; 实例变量在视图中可访问：</target>
        </trans-unit>
        <trans-unit id="a89b7ed305cce2bba8f4d9128f3734f04ffc05c6" translate="yes" xml:space="preserve">
          <source>As an example, if you want to add mobile emulation on chrome, you'll have to create an instance of selenium's &lt;code&gt;Chrome::Options&lt;/code&gt; object and add capabilities with a block.</source>
          <target state="translated">例如，如果要在chrome上添加移动设备仿真，则必须创建selenium的 &lt;code&gt;Chrome::Options&lt;/code&gt; 对象的实例，并使用块添加功能。</target>
        </trans-unit>
        <trans-unit id="2f2e1153cc5562787f27faed9361684633c75692" translate="yes" xml:space="preserve">
          <source>As an example, suppose you want to use an authentication token that has been issued in advance to perform authentication and access. Implementing token authentication with Rails is quite easy and only requires using one method, &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionController/HttpAuthentication/Token/ControllerMethods.html#method-i-authenticate_or_request_with_http_token&quot;&gt;&lt;code&gt;authenticate_or_request_with_http_token&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">例如，假设您要使用预先发行的身份验证令牌来执行身份验证和访问。使用Rails实施令牌认证非常容易，只需要使用一种方法&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionController/HttpAuthentication/Token/ControllerMethods.html#method-i-authenticate_or_request_with_http_token&quot;&gt; &lt;code&gt;authenticate_or_request_with_http_token&lt;/code&gt; 即可&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7771be3ad6618d1e0d94bce4ed053f3590951435" translate="yes" xml:space="preserve">
          <source>As described earlier, by placing the gem in the &lt;code&gt;Gemfile&lt;/code&gt; it will be loaded when Rails is loaded. It will first require &lt;code&gt;lib/blorgh.rb&lt;/code&gt; from the engine, then &lt;code&gt;lib/blorgh/engine.rb&lt;/code&gt;, which is the file that defines the major pieces of functionality for the engine.</source>
          <target state="translated">如前所述，通过将gem放置在 &lt;code&gt;Gemfile&lt;/code&gt; 中，将在加载Rails时加载它。它首先需要 &lt;code&gt;lib/blorgh.rb&lt;/code&gt; 从发动机，然后 &lt;code&gt;lib/blorgh/engine.rb&lt;/code&gt; ，这是文件，它定义功能的主要部分发动机。</target>
        </trans-unit>
        <trans-unit id="07b46f16780f38dc083e322b01fc0638d6c964b4" translate="yes" xml:space="preserve">
          <source>As discussed in &lt;a href=&quot;http://blog.gingerlime.com/2012/rails-ip-spoofing-vulnerabilities-and-protection/&quot;&gt;this post about Rails IP Spoofing&lt;/a&gt;, while the first IP in the list is likely to be the &amp;ldquo;originating&amp;rdquo; IP, it could also have been set by the client maliciously.</source>
          <target state="translated">如&lt;a href=&quot;http://blog.gingerlime.com/2012/rails-ip-spoofing-vulnerabilities-and-protection/&quot;&gt;本篇有关Rails IP欺骗的文章所述&lt;/a&gt;，虽然列表中的第一个IP可能是&amp;ldquo;原始&amp;rdquo; IP，但它也可能是客户端恶意设置的。</target>
        </trans-unit>
        <trans-unit id="5579318f3fe9815e52c355eebbc09e560b74a7d4" translate="yes" xml:space="preserve">
          <source>As discussed in &lt;a href=&quot;https://blog.gingerlime.com/2012/rails-ip-spoofing-vulnerabilities-and-protection/&quot;&gt;this post about Rails IP Spoofing&lt;/a&gt;, while the first IP in the list is likely to be the &amp;ldquo;originating&amp;rdquo; IP, it could also have been set by the client maliciously.</source>
          <target state="translated">如&lt;a href=&quot;https://blog.gingerlime.com/2012/rails-ip-spoofing-vulnerabilities-and-protection/&quot;&gt;本篇有关Rails IP欺骗的文章所述&lt;/a&gt;，虽然列表中的第一个IP可能是&amp;ldquo;原始&amp;rdquo; IP，但它也可能是客户端恶意设置的。</target>
        </trans-unit>
        <trans-unit id="76c5d22a92165282916323792eeefcace55f6049" translate="yes" xml:space="preserve">
          <source>As explained in the previous section, a cached file will expire if the value of &lt;code&gt;updated_at&lt;/code&gt; changes for a record on which the cached file directly depends. However, this will not expire any cache the fragment is nested within.</source>
          <target state="translated">如上一节中所述，如果对于缓存文件直接依赖的记录， &lt;code&gt;updated_at&lt;/code&gt; 的值发生更改，则缓存文件将过期。但是，这不会使片段嵌套在其中的任何缓存失效。</target>
        </trans-unit>
        <trans-unit id="5b814b7f43f182879906a11dd08eb8936e509ec3" translate="yes" xml:space="preserve">
          <source>As for collection caching, if the partial template doesn't start with a clean cache call, you can still benefit from collection caching by adding a special comment format anywhere in the template, like:</source>
          <target state="translated">至于集合缓存,如果部分模板没有从干净的缓存调用开始,你仍然可以通过在模板中的任何地方添加特殊的注释格式,比如,从集合缓存中获益。</target>
        </trans-unit>
        <trans-unit id="e404022b392d33ab0c724a438c42aa60565dad90" translate="yes" xml:space="preserve">
          <source>As is the case with normal Hash objects, you can access the values by referencing the keys by string. You can also reference them by symbol name. For example:</source>
          <target state="translated">就像普通的Hash对象一样,你可以通过字符串引用键来访问值。你也可以通过符号名来引用它们。比如说</target>
        </trans-unit>
        <trans-unit id="e6a1dc83119bf0209ff7849bc93d70daad803843" translate="yes" xml:space="preserve">
          <source>As long as &lt;code&gt;MyRackApp&lt;/code&gt; responds to &lt;code&gt;call&lt;/code&gt; and returns a &lt;code&gt;[status, headers, body]&lt;/code&gt;, the router won't know the difference between the Rack application and an action. This is an appropriate use of &lt;code&gt;via: :all&lt;/code&gt;, as you will want to allow your Rack application to handle all verbs as it considers appropriate.</source>
          <target state="translated">只要 &lt;code&gt;MyRackApp&lt;/code&gt; 响应 &lt;code&gt;call&lt;/code&gt; 并返回 &lt;code&gt;[status, headers, body]&lt;/code&gt; ，路由器就不会知道Rack应用程序和操作之间的区别。这是一个适当使用 &lt;code&gt;via: :all&lt;/code&gt; ，你会希望让您的机架应用程序来处理，因为它认为适当的所有动词。</target>
        </trans-unit>
        <trans-unit id="b76508618ca0e44b46da4fa5dfac03fca7a13172" translate="yes" xml:space="preserve">
          <source>As mentioned, the final HTML output is a composition of three Rails elements: &lt;code&gt;Templates&lt;/code&gt;, &lt;code&gt;Partials&lt;/code&gt; and &lt;code&gt;Layouts&lt;/code&gt;. Below is a brief overview of each of them.</source>
          <target state="translated">如前所述，最终的HTML输出由三个Rails元素组成： &lt;code&gt;Templates&lt;/code&gt; ， &lt;code&gt;Partials&lt;/code&gt; 和 &lt;code&gt;Layouts&lt;/code&gt; 。以下是它们的简要概述。</target>
        </trans-unit>
        <trans-unit id="42284c611fb38e89cd537092326c51b1022b9d98" translate="yes" xml:space="preserve">
          <source>As noted at the top, Rails doesn't (yet) support sharding. We had to do a lot of work to support multiple databases for Rails 6.0. The lack of support for sharding isn't an oversight, but does require additional work that didn't make it in for 6.0. For now if you need sharding it may be advisable to continue using one of the many gems that supports this.</source>
          <target state="translated">如上文所述,Rails还不支持sharding。为了支持Rails 6.0的多数据库,我们做了很多工作。缺乏对sharding的支持并不是一个疏忽,但确实需要额外的工作,而这些工作并没有在6.0中实现。目前,如果你需要分片,建议你继续使用众多支持分片的 gem 中的一个。</target>
        </trans-unit>
        <trans-unit id="50f444c079452c9aca7e5d6045a2ee8783185a88" translate="yes" xml:space="preserve">
          <source>As of July 15, 2014, Google increased &lt;a href=&quot;https://support.google.com/accounts/answer/6010255&quot;&gt;its security measures&lt;/a&gt; and now blocks attempts from apps it deems less secure. You can change your Gmail settings &lt;a href=&quot;https://www.google.com/settings/security/lesssecureapps&quot;&gt;here&lt;/a&gt; to allow the attempts. If your Gmail account has 2-factor authentication enabled, then you will need to set an &lt;a href=&quot;https://myaccount.google.com/apppasswords&quot;&gt;app password&lt;/a&gt; and use that instead of your regular password. Alternatively, you can use another ESP to send email by replacing 'smtp.gmail.com' above with the address of your provider.</source>
          <target state="translated">自2014年7月15日起，Google加强&lt;a href=&quot;https://support.google.com/accounts/answer/6010255&quot;&gt;了安全措施&lt;/a&gt;，现在阻止了它认为不太安全的应用程序的尝试。您可以&lt;a href=&quot;https://www.google.com/settings/security/lesssecureapps&quot;&gt;在此处&lt;/a&gt;更改Gmail设置以允许尝试。如果您的Gmail帐户启用了2要素身份验证，则需要设置一个&lt;a href=&quot;https://myaccount.google.com/apppasswords&quot;&gt;应用密码，&lt;/a&gt;并使用该密码代替常规密码。或者，您可以使用其他ESP发送电子邮件，方法是将上面的&amp;ldquo; smtp.gmail.com&amp;rdquo;替换为提供商的地址。</target>
        </trans-unit>
        <trans-unit id="b4159b01b63d30b9c369c641e31180edac519b32" translate="yes" xml:space="preserve">
          <source>As of Rails 5.1 and the new &lt;code&gt;rails-ujs&lt;/code&gt;, the parameters &lt;code&gt;data, status, xhr&lt;/code&gt; have been bundled into &lt;code&gt;event.detail&lt;/code&gt;. For information about the previously used &lt;code&gt;jquery-ujs&lt;/code&gt; in Rails 5 and earlier, read the &lt;a href=&quot;https://github.com/rails/jquery-ujs/wiki/ajax&quot;&gt;&lt;code&gt;jquery-ujs&lt;/code&gt; wiki&lt;/a&gt;.</source>
          <target state="translated">从Rails 5.1和新的 &lt;code&gt;rails-ujs&lt;/code&gt; 开始，参数 &lt;code&gt;data, status, xhr&lt;/code&gt; 已捆绑到 &lt;code&gt;event.detail&lt;/code&gt; 中。有关Rails 5和更早版本中先前使用的 &lt;code&gt;jquery-ujs&lt;/code&gt; 的信息，请阅读&lt;a href=&quot;https://github.com/rails/jquery-ujs/wiki/ajax&quot;&gt; &lt;code&gt;jquery-ujs&lt;/code&gt; Wiki&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1dbfef3605dbfbd4c777b4d43d00af1647429240" translate="yes" xml:space="preserve">
          <source>As of Ruby 2.5, most objects can be duplicated via &lt;code&gt;dup&lt;/code&gt; or &lt;code&gt;clone&lt;/code&gt;:</source>
          <target state="translated">从Ruby 2.5开始，大多数对象都可以通过 &lt;code&gt;dup&lt;/code&gt; 或 &lt;code&gt;clone&lt;/code&gt; 复制：</target>
        </trans-unit>
        <trans-unit id="6a0ebce1393a4c3957093f4aa372eb30a9027565" translate="yes" xml:space="preserve">
          <source>As of tzinfo 2, &lt;a href=&quot;timezone#method-i-utc_to_local&quot;&gt;&lt;code&gt;utc_to_local&lt;/code&gt;&lt;/a&gt; returns a &lt;a href=&quot;../time&quot;&gt;&lt;code&gt;Time&lt;/code&gt;&lt;/a&gt; with a non-zero utc_offset. See the `utc_to_local_returns_utc_offset_times` config for more info.</source>
          <target state="translated">从tzinfo 2开始，&lt;a href=&quot;timezone#method-i-utc_to_local&quot;&gt; &lt;code&gt;utc_to_local&lt;/code&gt; &lt;/a&gt;返回utc_offset非零的&lt;a href=&quot;../time&quot;&gt; &lt;code&gt;Time&lt;/code&gt; &lt;/a&gt;。有关更多信息，请参见`utc_to_local_returns_utc_offset_times`配置。</target>
        </trans-unit>
        <trans-unit id="1668ff9aff9e0e0fea2db893582288681ad73625" translate="yes" xml:space="preserve">
          <source>As part of this solution, &lt;strong&gt;every static string in the Rails framework&lt;/strong&gt; - e.g. Active Record validation messages, time and date formats - &lt;strong&gt;has been internationalized&lt;/strong&gt;. &lt;em&gt;Localization&lt;/em&gt; of a Rails application means defining translated values for these strings in desired languages.</source>
          <target state="translated">作为此解决方案的一部分，&lt;strong&gt;Rails框架中的每个静态字符串&lt;/strong&gt;（例如Active Record验证消息，时间和日期格式&lt;strong&gt;）都已国际化&lt;/strong&gt;。Rails应用程序的&lt;em&gt;本地化&lt;/em&gt;意味着以所需的语言为这些字符串定义翻译后的值。</target>
        </trans-unit>
        <trans-unit id="04c30c540934d9cbcba32b513d2f97f0bb0f3094" translate="yes" xml:space="preserve">
          <source>As requests to store files progress.</source>
          <target state="translated">随着存储文件请求的进展。</target>
        </trans-unit>
        <trans-unit id="700af20dd21a3c7867b192a3d196c372215d5657" translate="yes" xml:space="preserve">
          <source>As seen below, in case there are multiple transactional callbacks the order is reversed.</source>
          <target state="translated">如下图所示,在有多个事务性回调的情况下,顺序是相反的。</target>
        </trans-unit>
        <trans-unit id="fa82ac107612ff76d05507ab54867915e2442060" translate="yes" xml:space="preserve">
          <source>As seen in the example above, the &lt;code&gt;authenticate_or_request_with_http_digest&lt;/code&gt; block takes only one argument - the username. And the block returns the password. Returning &lt;code&gt;false&lt;/code&gt; or &lt;code&gt;nil&lt;/code&gt; from the &lt;code&gt;authenticate_or_request_with_http_digest&lt;/code&gt; will cause authentication failure.</source>
          <target state="translated">如上例所示， &lt;code&gt;authenticate_or_request_with_http_digest&lt;/code&gt; 块仅接受一个参数-用户名。然后该块返回密码。从 &lt;code&gt;authenticate_or_request_with_http_digest&lt;/code&gt; 返回 &lt;code&gt;false&lt;/code&gt; 或 &lt;code&gt;nil&lt;/code&gt; 将导致身份验证失败。</target>
        </trans-unit>
        <trans-unit id="b9fdf18db8e50e41fe08a9ea7f5368766c4b5026" translate="yes" xml:space="preserve">
          <source>As seen in the example above, the &lt;code&gt;authenticate_or_request_with_http_token&lt;/code&gt; block takes two arguments - the token and a &lt;code&gt;Hash&lt;/code&gt; containing the options that were parsed from the HTTP &lt;code&gt;Authorization&lt;/code&gt; header. The block should return &lt;code&gt;true&lt;/code&gt; if the authentication is successful. Returning &lt;code&gt;false&lt;/code&gt; or &lt;code&gt;nil&lt;/code&gt; on it will cause an authentication failure.</source>
          <target state="translated">如上面的示例所示， &lt;code&gt;authenticate_or_request_with_http_token&lt;/code&gt; 块采用两个参数-令牌和包含从HTTP &lt;code&gt;Authorization&lt;/code&gt; 标头解析的选项的 &lt;code&gt;Hash&lt;/code&gt; 。如果身份验证成功，则该块应返回 &lt;code&gt;true&lt;/code&gt; 。返回 &lt;code&gt;false&lt;/code&gt; 或 &lt;code&gt;nil&lt;/code&gt; 会导致身份验证失败。</target>
        </trans-unit>
        <trans-unit id="6476f1d583a409723fa24c65fb474b2563f80fd3" translate="yes" xml:space="preserve">
          <source>As seen in the previous sections of this guide, &lt;code&gt;yield&lt;/code&gt; is a very powerful tool for cleaning up your layouts. Keep in mind that it's pure Ruby, so you can use it almost everywhere. For example, we can use it to DRY up form layout definitions for several similar resources:</source>
          <target state="translated">如本指南前面各节所示， &lt;code&gt;yield&lt;/code&gt; 是清理布局的非常强大的工具。请记住，它是纯Ruby，因此您几乎可以在任何地方使用它。例如，我们可以使用它来干燥几种相似资源的表单布局定义：</target>
        </trans-unit>
        <trans-unit id="41a998bf545cf7ac79e36f92840e312dc82fe1d2" translate="yes" xml:space="preserve">
          <source>As shown in the example, you can also combine standard validations with your own custom validators.</source>
          <target state="translated">如示例所示,您还可以将标准验证与您自己的自定义验证器相结合。</target>
        </trans-unit>
        <trans-unit id="9b81ab0434db611c3a6cb9544afda4d8af67058c" translate="yes" xml:space="preserve">
          <source>As shown, &lt;code&gt;Rails::Command&lt;/code&gt; displays the help output automatically if the &lt;code&gt;args&lt;/code&gt; are empty.</source>
          <target state="translated">如图所示，如果 &lt;code&gt;args&lt;/code&gt; 为空， &lt;code&gt;Rails::Command&lt;/code&gt; 会自动显示帮助输出。</target>
        </trans-unit>
        <trans-unit id="2fe2f085a9ad08a418328d4cab4d26cd6cb7c0f3" translate="yes" xml:space="preserve">
          <source>As shown, &lt;code&gt;Rails::Command&lt;/code&gt; displays the help output automatically if the &lt;code&gt;namespace&lt;/code&gt; is empty.</source>
          <target state="translated">如图所示，如果 &lt;code&gt;namespace&lt;/code&gt; 为空， &lt;code&gt;Rails::Command&lt;/code&gt; 会自动显示帮助输出。</target>
        </trans-unit>
        <trans-unit id="74ac29acd39fe1eac8cc183e68839bc3a415758c" translate="yes" xml:space="preserve">
          <source>As soon as your application calls the &lt;code&gt;byebug&lt;/code&gt; method, the debugger will be started in a debugger shell inside the terminal window where you launched your application server, and you will be placed at the debugger's prompt &lt;code&gt;(byebug)&lt;/code&gt;. Before the prompt, the code around the line that is about to be run will be displayed and the current line will be marked by '=&amp;gt;', like this:</source>
          <target state="translated">一旦您的应用程序调用 &lt;code&gt;byebug&lt;/code&gt; 方法，调试器将在您启动应用程序服务器的终端窗口内的调试器外壳中启动，并将您置于调试器的提示 &lt;code&gt;(byebug)&lt;/code&gt; 。在出现提示之前，将显示将要运行的行周围的代码，并且当前行将以&amp;ldquo; =&amp;gt;&amp;rdquo;标记，如下所示：</target>
        </trans-unit>
        <trans-unit id="7af5227c886b4fa7dee03ebac57bef9eae82b0e2" translate="yes" xml:space="preserve">
          <source>As the &lt;code&gt;:asset_host&lt;/code&gt; usually is consistent across the application you can configure it globally in &lt;code&gt;config/application.rb&lt;/code&gt;:</source>
          <target state="translated">由于 &lt;code&gt;:asset_host&lt;/code&gt; 通常在整个应用程序中是一致的，因此您可以在 &lt;code&gt;config/application.rb&lt;/code&gt; 中进行全局配置：</target>
        </trans-unit>
        <trans-unit id="e18d8e605b36095824c0dcfb5ad95b72ddfaf4d3" translate="yes" xml:space="preserve">
          <source>As the &lt;code&gt;:host&lt;/code&gt; usually is consistent across the application you can configure it globally in &lt;code&gt;config/application.rb&lt;/code&gt;:</source>
          <target state="translated">由于 &lt;code&gt;:host&lt;/code&gt; 通常在整个应用程序中是一致的，因此您可以在 &lt;code&gt;config/application.rb&lt;/code&gt; 中进行全局配置：</target>
        </trans-unit>
        <trans-unit id="d676b0d9dfb5c06d033bac209b5edcbacd0b41d4" translate="yes" xml:space="preserve">
          <source>As the cache will grow until the disk is full, it is recommended to periodically clear out old entries.</source>
          <target state="translated">由于缓存会不断增加,直到磁盘满为止,建议定期清除旧条目。</target>
        </trans-unit>
        <trans-unit id="ba700c6e8680691a955ccc1d8ef9269d6fd597ea" translate="yes" xml:space="preserve">
          <source>As the earlier example depicts, the class &lt;code&gt;ActiveSupport::Notifications::Event&lt;/code&gt; is able to take the arguments as they come and provide an object-oriented interface to that data.</source>
          <target state="translated">如前面的示例所示，类 &lt;code&gt;ActiveSupport::Notifications::Event&lt;/code&gt; 可以在参数传入时为其提供参数，并为该数据提供面向对象的接口。</target>
        </trans-unit>
        <trans-unit id="b84410bcd93b53d7c240dcb758b67a3cf5de6cb3" translate="yes" xml:space="preserve">
          <source>As the example depicts, the &lt;code&gt;:db&lt;/code&gt; format generates a &lt;code&gt;BETWEEN&lt;/code&gt; SQL clause. That is used by Active Record in its support for range values in conditions.</source>
          <target state="translated">如示例所示， &lt;code&gt;:db&lt;/code&gt; 格式生成一个 &lt;code&gt;BETWEEN&lt;/code&gt; SQL子句。Active Record在支持条件中的范围值时使用它。</target>
        </trans-unit>
        <trans-unit id="67795cd1ba3292e1528b1c6a753fac5b57ea24fa" translate="yes" xml:space="preserve">
          <source>As the name implies, this only generates option tags. To generate a working select box you would need to use &lt;code&gt;collection_select&lt;/code&gt;:</source>
          <target state="translated">顾名思义，这只会生成选项标签。要生成一个有效的选择框，您需要使用 &lt;code&gt;collection_select&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="f8c341fdfd07315b6563473bfdd5c0daf9a141ee" translate="yes" xml:space="preserve">
          <source>As the new trap session is unused, the web application will require the user to authenticate.</source>
          <target state="translated">由于新的陷阱会话未被使用,Web应用程序将要求用户进行验证。</target>
        </trans-unit>
        <trans-unit id="823d088b814fd96ec65ce0c58bd7dfd595eb6b32" translate="yes" xml:space="preserve">
          <source>As the previous example shows, Active Support knows some irregular plurals and uncountable nouns. Built-in rules can be extended in &lt;code&gt;config/initializers/inflections.rb&lt;/code&gt;. This file is generated by default, by the &lt;code&gt;rails new&lt;/code&gt; command and has instructions in comments.</source>
          <target state="translated">如前面的示例所示，Active Support知道一些不规则的复数形式和不可数的名词。内置规则可以在 &lt;code&gt;config/initializers/inflections.rb&lt;/code&gt; 中扩展。默认情况下，此文件由 &lt;code&gt;rails new&lt;/code&gt; 命令生成，并在注释中包含说明。</target>
        </trans-unit>
        <trans-unit id="360e87b5f5cd116382abf325e4a21eaec8495182" translate="yes" xml:space="preserve">
          <source>As the proc is evaluated in the context of the object, it is also possible to write this as:</source>
          <target state="translated">由于proc是在对象的上下文中评估的,所以也可以写成。</target>
        </trans-unit>
        <trans-unit id="68747ee73b3d0b655254bf96aefe3df4772071f0" translate="yes" xml:space="preserve">
          <source>As this is a standard call to &lt;code&gt;image_tag&lt;/code&gt; you can pass in an options hash after the attachment URL as you could for any other image:</source>
          <target state="translated">由于这是对 &lt;code&gt;image_tag&lt;/code&gt; 的标准调用，因此您可以像对待其他任何图像一样在附件URL后传递一个选项哈希：</target>
        </trans-unit>
        <trans-unit id="cc3e8d7ab6046938e019ad8229da9d6378235d94" translate="yes" xml:space="preserve">
          <source>As usual you need to &lt;a href=&quot;action_controller_overview#strong-parameters&quot;&gt;declare the permitted parameters&lt;/a&gt; in the controller before you pass them to the model:</source>
          <target state="translated">通常，您需要先在控制器中&lt;a href=&quot;action_controller_overview#strong-parameters&quot;&gt;声明允许的参数&lt;/a&gt;，然后再将它们传递给模型：</target>
        </trans-unit>
        <trans-unit id="b0c78d93a102c108b693f5ab9ce50e9e2e55ca21" translate="yes" xml:space="preserve">
          <source>As we are using Action View's &lt;code&gt;image_tag&lt;/code&gt; method, you can pass in any other options you want:</source>
          <target state="translated">在使用Action View的 &lt;code&gt;image_tag&lt;/code&gt; 方法时，您可以传入所需的任何其他选项：</target>
        </trans-unit>
        <trans-unit id="9202d26f7ebdac1b1c46b79b85dc7b8aa2793581" translate="yes" xml:space="preserve">
          <source>As we did before, we need to add the &lt;code&gt;show&lt;/code&gt; action in &lt;code&gt;app/controllers/articles_controller.rb&lt;/code&gt; and its respective view.</source>
          <target state="translated">和之前一样，我们需要在 &lt;code&gt;app/controllers/articles_controller.rb&lt;/code&gt; 及其相应的视图中添加 &lt;code&gt;show&lt;/code&gt; 动作。</target>
        </trans-unit>
        <trans-unit id="17f4b7b61ae1a008faa61405cc58ada4c9dc24fb" translate="yes" xml:space="preserve">
          <source>As we have seen in the output of &lt;code&gt;rails routes&lt;/code&gt;, the route for &lt;code&gt;show&lt;/code&gt; action is as follows:</source>
          <target state="translated">正如我们在 &lt;code&gt;rails routes&lt;/code&gt; 输出中所看到的， &lt;code&gt;show&lt;/code&gt; action 的路线如下：</target>
        </trans-unit>
        <trans-unit id="69e3ea4c0f28a905001bd47f5598ec27a4a77199" translate="yes" xml:space="preserve">
          <source>As we have seen, creating a resource is a multi-step process. Handling invalid user input is another step of that process. Rails provides a feature called &lt;em&gt;validations&lt;/em&gt; to help us deal with invalid user input. Validations are rules that are checked before a model object is saved. If any of the checks fail, the save will be aborted, and appropriate error messages will be added to the &lt;code&gt;errors&lt;/code&gt; attribute of the model object.</source>
          <target state="translated">如我们所见，创建资源是一个多步骤的过程。处理无效的用户输入是该过程的另一步骤。Rails提供了一项称为&lt;em&gt;验证&lt;/em&gt;的功能，以帮助我们处理无效的用户输入。验证是在保存模型对象之前检查的规则。如果任何检查失败，则保存将被中止，并且适当的错误消息将添加到模型对象的 &lt;code&gt;errors&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="7b7a74748b56fa4d6e8c917b25fec8402965e131" translate="yes" xml:space="preserve">
          <source>As we saw before, &lt;code&gt;require_dependency&lt;/code&gt; loads files in an autoloading-friendly way. Normally, though, such a call does not make sense in an initializer.</source>
          <target state="translated">如前所述， &lt;code&gt;require_dependency&lt;/code&gt; 以一种易于自动加载的方式加载文件。但是，通常，这样的调用在初始化程序中没有意义。</target>
        </trans-unit>
        <trans-unit id="d7c75566e741872b90d0633203062c233772b633" translate="yes" xml:space="preserve">
          <source>As we'll see later, &lt;code&gt;@article.save&lt;/code&gt; returns a boolean indicating whether the article was saved or not.</source>
          <target state="translated">稍后我们将看到， &lt;code&gt;@article.save&lt;/code&gt; 返回一个布尔值，指示是否保存了文章。</target>
        </trans-unit>
        <trans-unit id="9d1e7d842944fc88fde5e21da62654389532b1b7" translate="yes" xml:space="preserve">
          <source>As we've just seen, &lt;code&gt;rails generate model&lt;/code&gt; created a &lt;em&gt;database migration&lt;/em&gt; file inside the &lt;code&gt;db/migrate&lt;/code&gt; directory. Migrations are Ruby classes that are designed to make it simple to create and modify database tables. Rails uses rake commands to run migrations, and it's possible to undo a migration after it's been applied to your database. Migration filenames include a timestamp to ensure that they're processed in the order that they were created.</source>
          <target state="translated">如我们所见， &lt;code&gt;rails generate model&lt;/code&gt; 在 &lt;code&gt;db/migrate&lt;/code&gt; 目录中创建了一个&lt;em&gt;数据库迁移&lt;/em&gt;文件。迁移是Ruby类，旨在简化创建和修改数据库表的过程。 Rails使用rake命令来运行迁移，并且可以在将迁移应用到数据库后撤消迁移。迁移文件名包含一个时间戳，以确保按创建顺序对其进行处理。</target>
        </trans-unit>
        <trans-unit id="fee0a2c2298c5b8780938ada043bcb6115485d5d" translate="yes" xml:space="preserve">
          <source>As with &lt;code&gt;ApplicationCable::Connection&lt;/code&gt;, you can also use &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveSupport/Rescuable/ClassMethods.html#method-i-rescue_from&quot;&gt;&lt;code&gt;rescue_from&lt;/code&gt;&lt;/a&gt; on a specific channel to handle raised exceptions:</source>
          <target state="translated">与 &lt;code&gt;ApplicationCable::Connection&lt;/code&gt; ，您也可以在特定通道上使用&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveSupport/Rescuable/ClassMethods.html#method-i-rescue_from&quot;&gt; &lt;code&gt;rescue_from&lt;/code&gt; &lt;/a&gt;来处理引发的异常：</target>
        </trans-unit>
        <trans-unit id="433fb4851a566734f8e0e8c4f6e2e58e5ea62686" translate="yes" xml:space="preserve">
          <source>As with &lt;code&gt;Mail.new&lt;/code&gt;, you can also use a block parameter to define the parts of the message:</source>
          <target state="translated">与 &lt;code&gt;Mail.new&lt;/code&gt; 一样，您还可以使用block参数来定义消息的各个部分：</target>
        </trans-unit>
        <trans-unit id="56ffbad359e90af26849edea10a5a2a6d80e4d87" translate="yes" xml:space="preserve">
          <source>As with &lt;code&gt;check_box&lt;/code&gt;, the second parameter to &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionView/Helpers/FormBuilder.html#method-i-radio_button&quot;&gt;&lt;code&gt;radio_button&lt;/code&gt;&lt;/a&gt; is the value of the input. Because these two radio buttons share the same name (&lt;code&gt;age&lt;/code&gt;), the user will only be able to select one of them, and &lt;code&gt;params[:age]&lt;/code&gt; will contain either &lt;code&gt;&quot;child&quot;&lt;/code&gt; or &lt;code&gt;&quot;adult&quot;&lt;/code&gt;.</source>
          <target state="translated">如同 &lt;code&gt;check_box&lt;/code&gt; ，所述第二参数&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionView/Helpers/FormBuilder.html#method-i-radio_button&quot;&gt; &lt;code&gt;radio_button&lt;/code&gt; &lt;/a&gt;是输入的值。因为这两个单选按钮具有相同的名称（ &lt;code&gt;age&lt;/code&gt; ），所以用户将只能选择其中一个，并且 &lt;code&gt;params[:age]&lt;/code&gt; 将包含 &lt;code&gt;&quot;child&quot;&lt;/code&gt; 或 &lt;code&gt;&quot;adult&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3a1218c72b3e55b6f7fe6d41f5a13bfe5d5469f8" translate="yes" xml:space="preserve">
          <source>As with &lt;code&gt;check_box_tag&lt;/code&gt;, the second parameter to &lt;code&gt;radio_button_tag&lt;/code&gt; is the value of the input. Because these two radio buttons share the same name (&lt;code&gt;age&lt;/code&gt;), the user will only be able to select one of them, and &lt;code&gt;params[:age]&lt;/code&gt; will contain either &lt;code&gt;&quot;child&quot;&lt;/code&gt; or &lt;code&gt;&quot;adult&quot;&lt;/code&gt;.</source>
          <target state="translated">如同 &lt;code&gt;check_box_tag&lt;/code&gt; ，所述第二参数 &lt;code&gt;radio_button_tag&lt;/code&gt; 是输入的值。由于这两个单选按钮具有相同的名称（ &lt;code&gt;age&lt;/code&gt; ），因此用户只能选择其中一个，并且 &lt;code&gt;params[:age]&lt;/code&gt; 将包含 &lt;code&gt;&quot;child&quot;&lt;/code&gt; 或 &lt;code&gt;&quot;adult&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bbbd81c9b0fcce84b0ec245aed7a7ed37d633b42" translate="yes" xml:space="preserve">
          <source>As with other helpers, if you were to use the &lt;code&gt;collection_select&lt;/code&gt; helper on a form builder scoped to the &lt;code&gt;@person&lt;/code&gt; object, the syntax would be:</source>
          <target state="translated">与其他帮助程序一样，如果要在范围为 &lt;code&gt;@person&lt;/code&gt; 对象的表单构建器上使用 &lt;code&gt;collection_select&lt;/code&gt; 帮助程序，则语法为：</target>
        </trans-unit>
        <trans-unit id="d0ea4f3866ff951e182830f5d7abaad2e177673f" translate="yes" xml:space="preserve">
          <source>As with other helpers, if you were to use the &lt;code&gt;select&lt;/code&gt; helper on a form builder scoped to the &lt;code&gt;@person&lt;/code&gt; object, the syntax would be:</source>
          <target state="translated">与其他帮助程序一样，如果要在范围为 &lt;code&gt;@person&lt;/code&gt; 对象的表单构建器上使用 &lt;code&gt;select&lt;/code&gt; 帮助程序，则语法为：</target>
        </trans-unit>
        <trans-unit id="22e57718377c275fe0af216744f818657f95d067" translate="yes" xml:space="preserve">
          <source>As with plural resources, the same helpers ending in &lt;code&gt;_url&lt;/code&gt; will also include the host, port, and path prefix.</source>
          <target state="translated">与复数资源一样，以 &lt;code&gt;_url&lt;/code&gt; 结尾的相同帮助程序还将包括主机，端口和路径前缀。</target>
        </trans-unit>
        <trans-unit id="36c99306758b4661655b000a514600f47c28be2b" translate="yes" xml:space="preserve">
          <source>As with pure Ruby, within the body of a direct descendant of &lt;code&gt;BasicObject&lt;/code&gt; use always absolute constant paths:</source>
          <target state="translated">与纯Ruby一样，在 &lt;code&gt;BasicObject&lt;/code&gt; 的直接后代主体中始终使用绝对常量路径：</target>
        </trans-unit>
        <trans-unit id="e9f8c6f907060ec030182ecb80acba33e65ac7be" translate="yes" xml:space="preserve">
          <source>As with the &lt;code&gt;welcome&lt;/code&gt; controller, we will need to add a route so that Rails knows where we would like to navigate to see &lt;code&gt;comments&lt;/code&gt;. Open up the &lt;code&gt;config/routes.rb&lt;/code&gt; file again, and edit it as follows:</source>
          <target state="translated">与 &lt;code&gt;welcome&lt;/code&gt; 控制器一样，我们将需要添加一条路线，以便Rails知道要导航到的地方以查看 &lt;code&gt;comments&lt;/code&gt; 。再次打开 &lt;code&gt;config/routes.rb&lt;/code&gt; 文件，并进行如下编辑：</target>
        </trans-unit>
        <trans-unit id="26de0511939bac759bde473e09a4169aa6e88f9d" translate="yes" xml:space="preserve">
          <source>As with validations, we can also make the calling of a callback method conditional on the satisfaction of a given predicate. We can do this using the &lt;code&gt;:if&lt;/code&gt; and &lt;code&gt;:unless&lt;/code&gt; options, which can take a symbol, a &lt;code&gt;Proc&lt;/code&gt; or an &lt;code&gt;Array&lt;/code&gt;. You may use the &lt;code&gt;:if&lt;/code&gt; option when you want to specify under which conditions the callback &lt;strong&gt;should&lt;/strong&gt; be called. If you want to specify the conditions under which the callback &lt;strong&gt;should not&lt;/strong&gt; be called, then you may use the &lt;code&gt;:unless&lt;/code&gt; option.</source>
          <target state="translated">与验证一样，我们还可以使回调方法的调用以给定谓词的满足为条件。我们可以使用 &lt;code&gt;:if&lt;/code&gt; 和 &lt;code&gt;:unless&lt;/code&gt; 选项来执行此操作，这些选项可以使用符号， &lt;code&gt;Proc&lt;/code&gt; 或 &lt;code&gt;Array&lt;/code&gt; 。要指定在何种条件下&lt;strong&gt;应&lt;/strong&gt;调用回调，可以使用 &lt;code&gt;:if&lt;/code&gt; 选项。如果要指定&lt;strong&gt;不&lt;/strong&gt;应该调用回调的条件，则可以使用 &lt;code&gt;:unless&lt;/code&gt; 选项。&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="af009de2333dff008f6361432f68d15586de0d4d" translate="yes" xml:space="preserve">
          <source>As you can pass in any header, you need to either quote the header as a string, or pass it in as an underscored symbol, so the following will work:</source>
          <target state="translated">因为你可以传入任何头,所以你需要将头引用为字符串,或者以下划线符号的形式传入,所以下面的内容就可以了。</target>
        </trans-unit>
        <trans-unit id="69f22f1d3cb3a75700e653a1d95d9aa97a48dfe2" translate="yes" xml:space="preserve">
          <source>As you can see above the &lt;code&gt;default_scope&lt;/code&gt; is being merged in both &lt;code&gt;scope&lt;/code&gt; and &lt;code&gt;where&lt;/code&gt; conditions.</source>
          <target state="translated">如上所示， &lt;code&gt;default_scope&lt;/code&gt; 在合并 &lt;code&gt;scope&lt;/code&gt; 和 &lt;code&gt;where&lt;/code&gt; 条件中都被合并。</target>
        </trans-unit>
        <trans-unit id="47b4db16a5ab953a8b7f73a60a03eb6a0e7b5ac5" translate="yes" xml:space="preserve">
          <source>As you can see in the previous example if a key is found in both hashes the value in the one in the argument wins.</source>
          <target state="translated">正如你在前面的例子中所看到的,如果在两个哈希中都找到了一个键,那么在参数中的那个键的值就会获胜。</target>
        </trans-unit>
        <trans-unit id="e6ee8cf7f8ef16d4158b4cedd75f13bfcd318191" translate="yes" xml:space="preserve">
          <source>As you can see the integration test involves multiple controllers and exercises the entire stack from database to dispatcher. In addition you can have multiple session instances open simultaneously in a test and extend those instances with assertion methods to create a very powerful testing DSL (domain-specific language) just for your application.</source>
          <target state="translated">正如你所看到的,集成测试涉及多个控制器,并锻炼了从数据库到调度器的整个栈。此外,您可以在一个测试中同时打开多个会话实例,并通过断言方法扩展这些实例,为您的应用程序创建一个非常强大的测试DSL(特定领域语言)。</target>
        </trans-unit>
        <trans-unit id="d903ad4b744c6ea87f2436d610666d7fc55a366c" translate="yes" xml:space="preserve">
          <source>As you can see, after duplicating the &lt;code&gt;Array&lt;/code&gt; instance, we got another object, therefore we can modify it and the original object will stay unchanged. This is not true for array's elements, however. Since &lt;code&gt;dup&lt;/code&gt; does not make a deep copy, the string inside the array is still the same object.</source>
          <target state="translated">如您所见，在复制 &lt;code&gt;Array&lt;/code&gt; 实例后，我们得到了另一个对象，因此我们可以对其进行修改，并且原始对象将保持不变。但是，这不适用于数组的元素。由于 &lt;code&gt;dup&lt;/code&gt; 不会进行深层复制，因此数组内的字符串仍然是同一对象。</target>
        </trans-unit>
        <trans-unit id="0fd5956d9a685c32dd34e42cd1b1d7cda295464f" translate="yes" xml:space="preserve">
          <source>As you can see, after duplicating the &lt;code&gt;Array&lt;/code&gt; instance, we got another object, therefore we can modify it and the original object will stay unchanged. This is not true for array's elements, however. Since &lt;code&gt;dup&lt;/code&gt; does not make deep copy, the string inside the array is still the same object.</source>
          <target state="translated">如您所见，在复制 &lt;code&gt;Array&lt;/code&gt; 实例后，我们得到了另一个对象，因此我们可以对其进行修改，并且原始对象将保持不变。但是，这不适用于数组的元素。由于 &lt;code&gt;dup&lt;/code&gt; 不会进行深层复制，因此数组内部的字符串仍然是同一对象。</target>
        </trans-unit>
        <trans-unit id="44b110bbdfd536c19e5739bc9bffe4e902ea85e3" translate="yes" xml:space="preserve">
          <source>As you can see, neither &lt;code&gt;Message&lt;/code&gt; nor &lt;code&gt;Comment&lt;/code&gt; are meant to stand alone. Crucial metadata for both classes resides in the &lt;code&gt;Entry&lt;/code&gt; &amp;ldquo;superclass&amp;rdquo;. But the &lt;code&gt;Entry&lt;/code&gt; absolutely can stand alone in terms of querying capacity in particular. You can now easily do things like:</source>
          <target state="translated">如您所见，&amp;ldquo; &lt;code&gt;Message&lt;/code&gt; 或&amp;ldquo; &lt;code&gt;Comment&lt;/code&gt; 都不是独立存在的。这两个类的关键元数据都​​位于 &lt;code&gt;Entry&lt;/code&gt; &amp;ldquo;超类&amp;rdquo;中。但是，就查询能力而言， &lt;code&gt;Entry&lt;/code&gt; 绝对可以独立存在。您现在可以轻松地执行以下操作：</target>
        </trans-unit>
        <trans-unit id="c9b718a021380d30d49c76b97822b0fb74ac0b77" translate="yes" xml:space="preserve">
          <source>As you can see, our validation lets us know that our &lt;code&gt;Person&lt;/code&gt; is not valid without a &lt;code&gt;name&lt;/code&gt; attribute. The second &lt;code&gt;Person&lt;/code&gt; will not be persisted to the database.</source>
          <target state="translated">如您所见，我们的验证使我们知道没有 &lt;code&gt;name&lt;/code&gt; 属性，我们的 &lt;code&gt;Person&lt;/code&gt; 是无效的。第二 &lt;code&gt;Person&lt;/code&gt; 将不会保留到数据库中。</target>
        </trans-unit>
        <trans-unit id="5f446b6bef164694f228944bdfaf65500429b356" translate="yes" xml:space="preserve">
          <source>As you can see, the &lt;code&gt;:locals&lt;/code&gt; hash is shared between both the partial and its layout.</source>
          <target state="translated">如您所见， &lt;code&gt;:locals&lt;/code&gt; 哈希在部分及其布局之间共享。</target>
        </trans-unit>
        <trans-unit id="d7e7f5e745cf7b13145b84eaecf8003970a1700d" translate="yes" xml:space="preserve">
          <source>As you can see, the first part of the array is an SQL fragment with question marks. The sanitized versions of the variables in the second part of the array replace the question marks. Or you can pass a hash for the same result:</source>
          <target state="translated">正如你所看到的,数组的第一部分是一个带有问号的SQL片段。数组第二部分中的变量的消毒版本取代了问号。或者你也可以通过一个哈希来得到同样的结果。</target>
        </trans-unit>
        <trans-unit id="b170482feb5fb938154b26231149661c861f6cac" translate="yes" xml:space="preserve">
          <source>As you can see, this is a fairly deep architectural stack. There's a lot of new terminology to identify the new pieces, and on top of that, you're dealing with both client and server side reflections of each unit.</source>
          <target state="translated">正如你所看到的,这是一个相当深的架构栈。有很多新的术语来识别新的部件,除此之外,你还要处理每个单元的客户端和服务器端反映。</target>
        </trans-unit>
        <trans-unit id="5a3dd915169aeba04316600dc7270e213d37db9a" translate="yes" xml:space="preserve">
          <source>As you can see, you can generate mailers just like you use other generators with Rails.</source>
          <target state="translated">正如你所看到的,你可以像使用其他Rails的生成器一样生成邮件。</target>
        </trans-unit>
        <trans-unit id="796ac5ab74991663e24e1fa59e7ccc1fcfb9e9c9" translate="yes" xml:space="preserve">
          <source>As you can see, you can only initialize an app once. The initializers are run through the &lt;code&gt;run_initializers&lt;/code&gt; method which is defined in &lt;code&gt;railties/lib/rails/initializable.rb&lt;/code&gt;:</source>
          <target state="translated">如您所见，您只能初始化一个应用程序一次。初始化程序通过在 &lt;code&gt;railties/lib/rails/initializable.rb&lt;/code&gt; 中定义的 &lt;code&gt;run_initializers&lt;/code&gt; 方法运行：</target>
        </trans-unit>
        <trans-unit id="a4ac58ec818e677db88d2d91e31864963a9f59fa" translate="yes" xml:space="preserve">
          <source>As you may have figured out, all of the variables that you can access from a controller are displayed. This list is dynamically updated as you execute code. For example, run the next line using &lt;code&gt;next&lt;/code&gt; (you'll learn more about this command later in this guide).</source>
          <target state="translated">您可能已经发现，将显示您可以从控制器访问的所有变量。执行代码时，此列表将动态更新。例如，使用 &lt;code&gt;next&lt;/code&gt; 运行下一行（您将在本指南的后面部分中详细了解此命令）。</target>
        </trans-unit>
        <trans-unit id="3a2d0e7d31e6a167175cc6701dfd0d0112dbfe07" translate="yes" xml:space="preserve">
          <source>As you may know, some functions, such as ActionController::Base#url_for and &lt;a href=&quot;../../actionview/helpers/urlhelper#method-i-link_to&quot;&gt;&lt;code&gt;ActionView::Helpers::UrlHelper#link_to&lt;/code&gt;&lt;/a&gt;, can generate URLs given a set of parameters. For example, you've probably had the chance to write code like this in one of your views:</source>
          <target state="translated">如您所知，某些函数（例如ActionController :: Base＃url_for和&lt;a href=&quot;../../actionview/helpers/urlhelper#method-i-link_to&quot;&gt; &lt;code&gt;ActionView::Helpers::UrlHelper#link_to&lt;/code&gt; &lt;/a&gt;）可以在给定一组参数的情况下生成URL。例如，您可能有机会在其中一种视图中编写了这样的代码：</target>
        </trans-unit>
        <trans-unit id="59d1ffdde9810d861ced6d5f21d5cc6554cecbf7" translate="yes" xml:space="preserve">
          <source>As you may know, some functions, such as ActionController::Base#url_for and &lt;a href=&quot;../../actionview/helpers/urlhelper#method-i-link_to&quot;&gt;ActionView::Helpers::UrlHelper#link_to&lt;/a&gt;, can generate URLs given a set of parameters. For example, you've probably had the chance to write code like this in one of your views:</source>
          <target state="translated">如您所知，某些函数（例如ActionController :: Base＃url_for和&lt;a href=&quot;../../actionview/helpers/urlhelper#method-i-link_to&quot;&gt;ActionView :: Helpers :: UrlHelper＃link_to&lt;/a&gt;）可以在给定一组参数的情况下生成URL。例如，您可能有机会在其中一种视图中编写了这样的代码：</target>
        </trans-unit>
        <trans-unit id="b12229f9796946747f4a2418bacc8a08a848a37c" translate="yes" xml:space="preserve">
          <source>As you probably know, when &lt;code&gt;require&lt;/code&gt; gets a relative file name:</source>
          <target state="translated">您可能知道， &lt;code&gt;require&lt;/code&gt; 何时获得相对文件名：</target>
        </trans-unit>
        <trans-unit id="b7aba5ba450ed32e67f8e6c09bd2bcbc68e20c65" translate="yes" xml:space="preserve">
          <source>As you see the proc takes a &lt;code&gt;source&lt;/code&gt; parameter. That's a string with the absolute path of the asset, for example &amp;ldquo;/assets/rails.png&amp;rdquo;.</source>
          <target state="translated">如您所见，该proc带有一个 &lt;code&gt;source&lt;/code&gt; 参数。这是带有资产绝对路径的字符串，例如&amp;ldquo; /assets/rails.png&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="71b9103e738f5df875e081a2afb44216fe21e409" translate="yes" xml:space="preserve">
          <source>As you see, in both cases the top level key is the locale. &lt;code&gt;:foo&lt;/code&gt; is a namespace key and &lt;code&gt;:bar&lt;/code&gt; is the key for the translation &quot;baz&quot;.</source>
          <target state="translated">如您所见，在这两种情况下，顶级键都是语言环境。 &lt;code&gt;:foo&lt;/code&gt; 是名称空间键，而 &lt;code&gt;:bar&lt;/code&gt; 是翻译&amp;ldquo; baz&amp;rdquo;的键。</target>
        </trans-unit>
        <trans-unit id="2af30a8c6cb54f9facd0c5b84864a74bac3684ca" translate="yes" xml:space="preserve">
          <source>As you see, the HTML reflects knowledge about the resource in several spots, like the path the form should be submitted to, or the names of the input fields.</source>
          <target state="translated">正如你所看到的,HTML在几个地方反映了关于资源的知识,比如表单应该提交的路径,或者输入字段的名称。</target>
        </trans-unit>
        <trans-unit id="5f922e331fe2a0f83730738c5a9928baa2d8ed56" translate="yes" xml:space="preserve">
          <source>As you see, this algorithm is simpler than the one for relative constants. In particular, the nesting plays no role here, and modules are not special-cased, if neither they nor their ancestors have the constants, &lt;code&gt;Object&lt;/code&gt; is &lt;strong&gt;not&lt;/strong&gt; checked.</source>
          <target state="translated">如您所见，该算法比相对常数算法更简单。尤其是嵌套在这里扮演任何作用，和模块并不特例，如果他们及他们的祖先有常量， &lt;code&gt;Object&lt;/code&gt; 是&lt;strong&gt;不&lt;/strong&gt;检查。</target>
        </trans-unit>
        <trans-unit id="05f768adb9f3a44ac40a711d6b8c2fb6e95f8839" translate="yes" xml:space="preserve">
          <source>As you see, we use the output embeddings for the render methods. The render call itself will just return a string holding the result of the rendering. The output embedding writes it to the current template.</source>
          <target state="translated">如你所见,我们为渲染方法使用了输出嵌入。渲染调用本身只会返回一个持有渲染结果的字符串。输出嵌入将其写入当前模板。</target>
        </trans-unit>
        <trans-unit id="10b302c7ea005362fb9c41bac3ac29a2d228c2de" translate="yes" xml:space="preserve">
          <source>As you start registering new callbacks for your models, they will be queued for execution. This queue will include all your model's validations, the registered callbacks, and the database operation to be executed.</source>
          <target state="translated">当您开始为您的模型注册新的回调时,它们将被排队执行。这个队列将包括您的所有模型的验证、注册的回调和要执行的数据库操作。</target>
        </trans-unit>
        <trans-unit id="89de86c0d645e35ff788c13cfa22a075c067fad4" translate="yes" xml:space="preserve">
          <source>As you've already seen, the &lt;code&gt;:message&lt;/code&gt; option lets you specify the message that will be added to the &lt;code&gt;errors&lt;/code&gt; collection when validation fails. When this option is not used, Active Record will use the respective default error message for each validation helper. The &lt;code&gt;:message&lt;/code&gt; option accepts a &lt;code&gt;String&lt;/code&gt; or &lt;code&gt;Proc&lt;/code&gt;.</source>
          <target state="translated">如您所见， &lt;code&gt;:message&lt;/code&gt; 选项使您可以指定验证失败时将添加到 &lt;code&gt;errors&lt;/code&gt; 集合的消息。如果不使用此选项，则Active Record将为每个验证助手使用各自的默认错误消息。的 &lt;code&gt;:message&lt;/code&gt; 选项接受 &lt;code&gt;String&lt;/code&gt; 或 &lt;code&gt;Proc&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9ecabb29f9f2e1d1d6fc7722d5f62068caabda67" translate="yes" xml:space="preserve">
          <source>Assert state, e.g. identifiers, has been assigned.</source>
          <target state="translated">断言状态,如标识符,已经分配。</target>
        </trans-unit>
        <trans-unit id="a3f59e35cabc5b86319600422de6c2d7a4bea0e2" translate="yes" xml:space="preserve">
          <source>Asserting Time Arguments in Jobs</source>
          <target state="translated">在Jobs中断言时间参数</target>
        </trans-unit>
        <trans-unit id="e03dc251be8fa0a9d0f75257a00fcb55f9bed839" translate="yes" xml:space="preserve">
          <source>Assertion</source>
          <target state="translated">Assertion</target>
        </trans-unit>
        <trans-unit id="8321c09d7a42e19c8077b322b70f3f866cc56ce5" translate="yes" xml:space="preserve">
          <source>Assertion that the block should not raise an exception.</source>
          <target state="translated">断言该区块不应引发异常。</target>
        </trans-unit>
        <trans-unit id="8ac3a81afe9ede915485071aa9e94d85eba3cb0d" translate="yes" xml:space="preserve">
          <source>Assertion that the numeric result of evaluating an expression is not changed before and after invoking the passed in block.</source>
          <target state="translated">断言评估表达式的数值结果在调用传入块前后不会改变。</target>
        </trans-unit>
        <trans-unit id="eb7e880b427780488c18b5d10a3b3bb37593cdcc" translate="yes" xml:space="preserve">
          <source>Assertion that the result of evaluating an expression is changed before and after invoking the passed in block.</source>
          <target state="translated">断言评估表达式的结果在调用传入块前后发生了变化。</target>
        </trans-unit>
        <trans-unit id="dd8b5d85dd1b683f74bb4a07ec663a01d3378b35" translate="yes" xml:space="preserve">
          <source>Assertion that the result of evaluating an expression is not changed before and after invoking the passed in block.</source>
          <target state="translated">断言在调用传递进来的块前后,对表达式的评估结果不会改变。</target>
        </trans-unit>
        <trans-unit id="174cc02df86cdd4dcdbea630546e22b88917b4be" translate="yes" xml:space="preserve">
          <source>AssertionResponse</source>
          <target state="translated">AssertionResponse</target>
        </trans-unit>
        <trans-unit id="6082ca316127148643a9c22af937322b27e1131b" translate="yes" xml:space="preserve">
          <source>AssertionResponse#code</source>
          <target state="translated">AssertionResponse#code</target>
        </trans-unit>
        <trans-unit id="4ef2dabfcc61dd25f3e3ad65b3df0a8bf4a0405c" translate="yes" xml:space="preserve">
          <source>AssertionResponse#code_and_name</source>
          <target state="translated">AssertionResponse#code_and_name</target>
        </trans-unit>
        <trans-unit id="4d69b772fb07ae97331a8f6db5f20f534dcd6b26" translate="yes" xml:space="preserve">
          <source>AssertionResponse#name</source>
          <target state="translated">AssertionResponse#name</target>
        </trans-unit>
        <trans-unit id="1c3afebb31d6865fc894624fefea409dc4d643d0" translate="yes" xml:space="preserve">
          <source>AssertionResponse::new</source>
          <target state="translated">AssertionResponse::new</target>
        </trans-unit>
        <trans-unit id="616b5f7baeed526db1b968af6558865148f337e6" translate="yes" xml:space="preserve">
          <source>Asserts that a specific email has been enqueued, optionally matching arguments.</source>
          <target state="translated">断言一个特定的邮件已经被enqueued,可选择匹配参数。</target>
        </trans-unit>
        <trans-unit id="6a8e8f9937a7209bdfdf1b109e57d3aef6ac336a" translate="yes" xml:space="preserve">
          <source>Asserts that an expression is not truthy. Passes if &lt;code&gt;object&lt;/code&gt; is &lt;code&gt;nil&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;. &amp;ldquo;Truthy&amp;rdquo; means &amp;ldquo;considered true in a conditional&amp;rdquo; like &lt;code&gt;if foo&lt;/code&gt;.</source>
          <target state="translated">断言一个表达不真实。如果 &lt;code&gt;object&lt;/code&gt; 为 &lt;code&gt;nil&lt;/code&gt; 或 &lt;code&gt;false&lt;/code&gt; ,则通过。&amp;ldquo; Truthy&amp;rdquo;的意思是&amp;ldquo;有条件地认为是正确的&amp;rdquo;，就像 &lt;code&gt;if foo&lt;/code&gt; 一样。</target>
        </trans-unit>
        <trans-unit id="28ce71cbe9e649c0c7b7b2216c9c6487f0c2f94e" translate="yes" xml:space="preserve">
          <source>Asserts that no emails are enqueued for later delivery.</source>
          <target state="translated">申明没有邮件被排队等待以后发送。</target>
        </trans-unit>
        <trans-unit id="b24d372973a315283c4234129c6b3baff234a82e" translate="yes" xml:space="preserve">
          <source>Asserts that no emails have been sent.</source>
          <target state="translated">声称没有发送电子邮件。</target>
        </trans-unit>
        <trans-unit id="86d568d68ad00b95ea76b3925b3841adc3a2817b" translate="yes" xml:space="preserve">
          <source>Asserts that no jobs are enqueued to a specific queue by passing &lt;code&gt;:queue&lt;/code&gt; option</source>
          <target state="translated">通过传递 &lt;code&gt;:queue&lt;/code&gt; 选项，断言没有作业排入特定队列</target>
        </trans-unit>
        <trans-unit id="114b0f4e4231b86035ef8e1ce3a4e6aa2b3d06ee" translate="yes" xml:space="preserve">
          <source>Asserts that no jobs except specific class are enqueued by passing &lt;code&gt;:except&lt;/code&gt; option.</source>
          <target state="translated">通过传递 &lt;code&gt;:except&lt;/code&gt; 选项，断言除特定类外没有其他作业入队。</target>
        </trans-unit>
        <trans-unit id="6e56a2d1222d239aede12d9d07ef4ac82b567206" translate="yes" xml:space="preserve">
          <source>Asserts that no jobs have been enqueued.</source>
          <target state="translated">申明没有工作被排队。</target>
        </trans-unit>
        <trans-unit id="795479306efa8196af094893ba17f8e65f6f8ba4" translate="yes" xml:space="preserve">
          <source>Asserts that no jobs have been performed.</source>
          <target state="translated">声称没有进行任何工作。</target>
        </trans-unit>
        <trans-unit id="73fc5f645560c6e3cc3a20d665ad30ec2a8fb479" translate="yes" xml:space="preserve">
          <source>Asserts that no jobs of a specific kind are enqueued by passing &lt;code&gt;:only&lt;/code&gt; option.</source>
          <target state="translated">通过传递 &lt;code&gt;:only&lt;/code&gt; 选项，声明没有特定种类的作业入队。</target>
        </trans-unit>
        <trans-unit id="f25027e68530503c8960967caa9bb661fa12d16b" translate="yes" xml:space="preserve">
          <source>Asserts that no messages have been sent to the stream.</source>
          <target state="translated">断言没有任何消息被发送至该流。</target>
        </trans-unit>
        <trans-unit id="5d1915cb2285c621877cfaaee99ce2aa23ffaf9e" translate="yes" xml:space="preserve">
          <source>Asserts that no streams have been started.</source>
          <target state="translated">申明没有启动任何流。</target>
        </trans-unit>
        <trans-unit id="7252afbb0d4ad695b11943ef163ca4d05fb95369" translate="yes" xml:space="preserve">
          <source>Asserts that path and options match both ways; in other words, it verifies that &lt;code&gt;path&lt;/code&gt; generates &lt;code&gt;options&lt;/code&gt; and then that &lt;code&gt;options&lt;/code&gt; generates &lt;code&gt;path&lt;/code&gt;. This essentially combines &lt;code&gt;assert_recognizes&lt;/code&gt; and &lt;code&gt;assert_generates&lt;/code&gt; into one step.</source>
          <target state="translated">断言路径和选项都匹配；换句话说，它验证 &lt;code&gt;path&lt;/code&gt; 生成 &lt;code&gt;options&lt;/code&gt; ，然后验证 &lt;code&gt;options&lt;/code&gt; 生成 &lt;code&gt;path&lt;/code&gt; 。这实质上将 &lt;code&gt;assert_recognizes&lt;/code&gt; 和 &lt;code&gt;assert_generates&lt;/code&gt; 组合为一个步骤。</target>
        </trans-unit>
        <trans-unit id="1e5cde7ea8cc9697a563309defa5e77fd1b67095" translate="yes" xml:space="preserve">
          <source>Asserts that the connection is rejected (via &lt;code&gt;reject_unauthorized_connection&lt;/code&gt;).</source>
          <target state="translated">断言连接被拒绝（通过 &lt;code&gt;reject_unauthorized_connection&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="2801d50772843b07f363eb2e02321533a0295333" translate="yes" xml:space="preserve">
          <source>Asserts that the job has been enqueued with the given arguments.</source>
          <target state="translated">断言该作业已与给定参数一起排队。</target>
        </trans-unit>
        <trans-unit id="02c34d3ed60df5f2d9423be765257cfda339ee04" translate="yes" xml:space="preserve">
          <source>Asserts that the job has been performed with the given arguments.</source>
          <target state="translated">断言该工作已与给定的参数一起执行。</target>
        </trans-unit>
        <trans-unit id="df4f7b8d3218d881a6cf4911d2b8fbb25cabcc17" translate="yes" xml:space="preserve">
          <source>Asserts that the number of broadcasted messages to the stream matches the given number.</source>
          <target state="translated">断言向流广播的消息数量与给定数量相符。</target>
        </trans-unit>
        <trans-unit id="0520d3c1cb7a3060b2d9ee166f6dc52c1fd11b0d" translate="yes" xml:space="preserve">
          <source>Asserts that the number of emails enqueued for later delivery matches the given number.</source>
          <target state="translated">申明等待以后投递的邮件数量与给定数量相符。</target>
        </trans-unit>
        <trans-unit id="4d40d221ed8e996eacca8b21815ca54a4453086e" translate="yes" xml:space="preserve">
          <source>Asserts that the number of emails sent matches the given number.</source>
          <target state="translated">申明发送的邮件数量与给定数量相符。</target>
        </trans-unit>
        <trans-unit id="d28dcfbad327f7998c24206b03f86f7f18340751" translate="yes" xml:space="preserve">
          <source>Asserts that the number of enqueued jobs matches the given number.</source>
          <target state="translated">断言已排队的作业数量与给定数量相符。</target>
        </trans-unit>
        <trans-unit id="a828f8be352c15701f5329061ba564759bc1f794" translate="yes" xml:space="preserve">
          <source>Asserts that the number of performed jobs matches the given number. If no block is passed, &lt;code&gt;perform_enqueued_jobs&lt;/code&gt; must be called around or after the job call.</source>
          <target state="translated">断言已执行的作业数与给定的数目匹配。如果未传递任何块，则必须在作业调用前后或之后调用 &lt;code&gt;perform_enqueued_jobs&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7d7a0dd9d31cda3dea2ce6fb79cfdf0ab1feea49" translate="yes" xml:space="preserve">
          <source>Asserts that the numeric result of evaluating an expression is not changed before and after invoking the passed in block.</source>
          <target state="translated">申明在调用传递进来的块前后,评估表达式的数值结果不会改变。</target>
        </trans-unit>
        <trans-unit id="5611cceca62d45889bff5a78da7815be3913ba71" translate="yes" xml:space="preserve">
          <source>Asserts that the provided options can be used to generate the provided path. This is the inverse of &lt;code&gt;assert_recognizes&lt;/code&gt;. The &lt;code&gt;extras&lt;/code&gt; parameter is used to tell the request the names and values of additional request parameters that would be in a query string. The &lt;code&gt;message&lt;/code&gt; parameter allows you to specify a custom error message for assertion failures.</source>
          <target state="translated">断言提供的选项可用于生成提供的路径。这是 &lt;code&gt;assert_recognizes&lt;/code&gt; 的反函数。该 &lt;code&gt;extras&lt;/code&gt; 的参数是用来告诉请求的其他请求参数，这将是在查询字符串的名称和值。该 &lt;code&gt;message&lt;/code&gt; 参数允许您指定断言失败自定义错误消息。</target>
        </trans-unit>
        <trans-unit id="8e6f21446d189a1ede69b7dc1dfc21063f902a48" translate="yes" xml:space="preserve">
          <source>Asserts that the provided options can be used to generate the provided path. This is the inverse of assert_recognizes. The extras parameter is used to tell the request the names and values of additional request parameters that would be in a query string. The message parameter allows you to specify a custom error message for assertion failures.</source>
          <target state="translated">断言所提供的选项可以用来生成所提供的路径,这是 assert_recognizes 的倒数。这是assert_recognizes的反义词。extras参数用于告诉请求中附加的请求参数的名称和值,这些参数将在查询字符串中出现。message参数允许你为断言失败指定一个自定义的错误信息。</target>
        </trans-unit>
        <trans-unit id="799009a720b683fc071320bd3f59978f571e28be" translate="yes" xml:space="preserve">
          <source>Asserts that the redirection options passed in match those of the redirect called in the latest action. This match can be partial, such that &lt;code&gt;assert_redirected_to(controller: &quot;weblog&quot;)&lt;/code&gt; will also match the redirection of &lt;code&gt;redirect_to(controller: &quot;weblog&quot;,
action: &quot;show&quot;)&lt;/code&gt; and so on.</source>
          <target state="translated">断言传入的重定向选项与最新操作中调用的重定向选项匹配。此匹配可以是部分匹配，以便 &lt;code&gt;assert_redirected_to(controller: &quot;weblog&quot;)&lt;/code&gt; 也将匹配 &lt;code&gt;redirect_to(controller: &quot;weblog&quot;, action: &quot;show&quot;)&lt;/code&gt; 的重定向，依此类推。</target>
        </trans-unit>
        <trans-unit id="d93754e4a28cd44220495403122737b568640d74" translate="yes" xml:space="preserve">
          <source>Asserts that the redirection options passed in match those of the redirect called in the latest action. This match can be partial, such that &lt;code&gt;assert_redirected_to(controller: &quot;weblog&quot;)&lt;/code&gt; will also match the redirection of &lt;code&gt;redirect_to(controller: &quot;weblog&quot;, action: &quot;show&quot;)&lt;/code&gt; and so on. You can also pass named routes such as &lt;code&gt;assert_redirected_to root_path&lt;/code&gt; and Active Record objects such as &lt;code&gt;assert_redirected_to @article&lt;/code&gt;.</source>
          <target state="translated">断言传入的重定向选项与最新操作中调用的重定向选项匹配。此匹配可以是部分匹配，以便 &lt;code&gt;assert_redirected_to(controller: &quot;weblog&quot;)&lt;/code&gt; 也将匹配 &lt;code&gt;redirect_to(controller: &quot;weblog&quot;, action: &quot;show&quot;)&lt;/code&gt; 的重定向，依此类推。您还可以将命名路由（例如 &lt;code&gt;assert_redirected_to root_path&lt;/code&gt; 传递到root_path，并传递Active Record对象（例如 &lt;code&gt;assert_redirected_to @article&lt;/code&gt; )。</target>
        </trans-unit>
        <trans-unit id="251b35000b5ed84874dd9962287ec632fd555952" translate="yes" xml:space="preserve">
          <source>Asserts that the response comes with a specific status code. You can specify &lt;code&gt;:success&lt;/code&gt; to indicate 200-299, &lt;code&gt;:redirect&lt;/code&gt; to indicate 300-399, &lt;code&gt;:missing&lt;/code&gt; to indicate 404, or &lt;code&gt;:error&lt;/code&gt; to match the 500-599 range. You can also pass an explicit status number or its symbolic equivalent. For more information, see &lt;a href=&quot;http://rubydoc.info/github/rack/rack/master/Rack/Utils#HTTP_STATUS_CODES-constant&quot;&gt;full list of status codes&lt;/a&gt; and how their &lt;a href=&quot;https://rubydoc.info/github/rack/rack/master/Rack/Utils#SYMBOL_TO_STATUS_CODE-constant&quot;&gt;mapping&lt;/a&gt; works.</source>
          <target state="translated">断言该响应带有特定的状态码。您可以指定 &lt;code&gt;:success&lt;/code&gt; 表示200-299， &lt;code&gt;:redirect&lt;/code&gt; 表示300-399， &lt;code&gt;:missing&lt;/code&gt; 表示404，或 &lt;code&gt;:error&lt;/code&gt; 匹配500-599范围。您还可以传递一个明确的状态编号或其符号等效形式。有关更多信息，请参见&lt;a href=&quot;http://rubydoc.info/github/rack/rack/master/Rack/Utils#HTTP_STATUS_CODES-constant&quot;&gt;状态码的完整列表&lt;/a&gt;以及它们的&lt;a href=&quot;https://rubydoc.info/github/rack/rack/master/Rack/Utils#SYMBOL_TO_STATUS_CODE-constant&quot;&gt;映射&lt;/a&gt;方式。</target>
        </trans-unit>
        <trans-unit id="70a03af2f67edf6c9913c134be58c65dbaf253e8" translate="yes" xml:space="preserve">
          <source>Asserts that the response is a redirect to a URL matching the given options.</source>
          <target state="translated">申明响应是重定向到与给定选项相匹配的URL。</target>
        </trans-unit>
        <trans-unit id="bee583344b19205a1da456033841b301e862ea96" translate="yes" xml:space="preserve">
          <source>Asserts that the response is a redirect to a URL matching the given options. You can also pass named routes such as &lt;code&gt;assert_redirected_to root_path&lt;/code&gt; and Active Record objects such as &lt;code&gt;assert_redirected_to @article&lt;/code&gt;.</source>
          <target state="translated">断言该响应是对与给定选项匹配的URL的重定向。您还可以将诸如 &lt;code&gt;assert_redirected_to root_path&lt;/code&gt; 命名路由传递到root_path，以及诸如assert_redirected_to @ article之类的Active Record对象 &lt;code&gt;assert_redirected_to @article&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="845b6ed054bd005b9bed8fca1b571a3a5ca39780" translate="yes" xml:space="preserve">
          <source>Asserts that the response is one of the following types:</source>
          <target state="translated">申明响应是下列类型之一:</target>
        </trans-unit>
        <trans-unit id="dcc69d5da4f10b2f5eeec88880d209624dd9eaf6" translate="yes" xml:space="preserve">
          <source>Asserts that the routing of the given &lt;code&gt;path&lt;/code&gt; was handled correctly and that the parsed options (given in the &lt;code&gt;expected_options&lt;/code&gt; hash) match &lt;code&gt;path&lt;/code&gt;. Basically, it asserts that Rails recognizes the route given by &lt;code&gt;expected_options&lt;/code&gt;.</source>
          <target state="translated">断言给定 &lt;code&gt;path&lt;/code&gt; 的路由已正确处理，并且解析的选项（在 &lt;code&gt;expected_options&lt;/code&gt; 哈希中给出）与 &lt;code&gt;path&lt;/code&gt; 匹配。基本上，它声称，Rails的识别由给定的路线 &lt;code&gt;expected_options&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8d76e958d7ce7417afa4e81e74e476881c4ff4e2" translate="yes" xml:space="preserve">
          <source>Asserts that the routing of the given path was handled correctly and that the parsed options (given in the expected_options hash) match path. Basically, it asserts that Rails recognizes the route given by expected_options.</source>
          <target state="translated">断言给定路径的路由处理正确,并且解析的选项(在 expected_options 哈希中给出)与路径匹配。基本上,它表明 Rails 识别了 expected_options 给出的路由。</target>
        </trans-unit>
        <trans-unit id="0a14ce552f84cf8e1776f5a0c8fb246391b8f1ef" translate="yes" xml:space="preserve">
          <source>Asserts that the specified message has been sent to the stream.</source>
          <target state="translated">断言指定的消息已经被发送到流中。</target>
        </trans-unit>
        <trans-unit id="241431334301cf0c935bb2b89b10ff5c89572279" translate="yes" xml:space="preserve">
          <source>Asserts that the specified stream for a model has started.</source>
          <target state="translated">断言一个模型的指定流已经开始。</target>
        </trans-unit>
        <trans-unit id="3109e8e7cfaa12918cbb6cb8af1f0b01b9d45315" translate="yes" xml:space="preserve">
          <source>Asserts that the specified stream has been started.</source>
          <target state="translated">说明指定的流已经启动。</target>
        </trans-unit>
        <trans-unit id="8737582c0b46bf74cdd2440925f93f619d942444" translate="yes" xml:space="preserve">
          <source>Asserts the number of times a job except specific class was enqueued by passing &lt;code&gt;:except&lt;/code&gt; option.</source>
          <target state="translated">通过传递 &lt;code&gt;:except&lt;/code&gt; 选项，使除特定类之外的作业入队的次数。</target>
        </trans-unit>
        <trans-unit id="cef469fa1e3b9402f6826d9bd2d636cd07ed6cac" translate="yes" xml:space="preserve">
          <source>Asserts the number of times a job is enqueued to a specific queue by passing &lt;code&gt;:queue&lt;/code&gt; option.</source>
          <target state="translated">通过传递 &lt;code&gt;:queue&lt;/code&gt; 选项，确定将作业加入特定队列的次数。</target>
        </trans-unit>
        <trans-unit id="48cac74cc4658590a36d78cf2b6964edc3047953" translate="yes" xml:space="preserve">
          <source>Asserts the number of times a specific job was enqueued by passing &lt;code&gt;:only&lt;/code&gt; option.</source>
          <target state="translated">通过传递 &lt;code&gt;:only&lt;/code&gt; 选项，确定特定作业入队的次数。</target>
        </trans-unit>
        <trans-unit id="3da2e20fa937a580b429e543a9a9d0d9a1633abe" translate="yes" xml:space="preserve">
          <source>Asset Organization</source>
          <target state="translated">资产组织</target>
        </trans-unit>
        <trans-unit id="c480828bba2e4d5f7643f8f3dc0e506c28057b37" translate="yes" xml:space="preserve">
          <source>Asset Tag Helpers</source>
          <target state="translated">资产标签助手</target>
        </trans-unit>
        <trans-unit id="71779543a399a1e715fc688a5c467608f20f75bf" translate="yes" xml:space="preserve">
          <source>Asset manifest files (&lt;code&gt;application.js&lt;/code&gt; and &lt;code&gt;application.css&lt;/code&gt;)</source>
          <target state="translated">资产清单文件（ &lt;code&gt;application.js&lt;/code&gt; 和 &lt;code&gt;application.css&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="424951e01de2adbb09604297e498100317946b52" translate="yes" xml:space="preserve">
          <source>Asset manifest files (&lt;code&gt;blorgh_manifest.js&lt;/code&gt; and &lt;code&gt;application.css&lt;/code&gt;)</source>
          <target state="translated">资产清单文件（ &lt;code&gt;blorgh_manifest.js&lt;/code&gt; 和 &lt;code&gt;application.css&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="cc3befc3fe4e274bfd326cb348516caffe61fa06" translate="yes" xml:space="preserve">
          <source>Asset tag helpers provide methods for generating HTML that link views to feeds, JavaScript, stylesheets, images, videos, and audios. There are six asset tag helpers available in Rails:</source>
          <target state="translated">资产标签帮助程序提供了生成HTML的方法,这些方法将视图链接到feeds、JavaScript、样式表、图像、视频和音频。Rails中有六个资产标签助手。</target>
        </trans-unit>
        <trans-unit id="82426b07f1205c57b259c7289d7e0d91edacc57d" translate="yes" xml:space="preserve">
          <source>Asset tags</source>
          <target state="translated">资产标签</target>
        </trans-unit>
        <trans-unit id="4e422102084cf0b63cf0b32ba3f2ac548d6a1ccb" translate="yes" xml:space="preserve">
          <source>AssetTagHelper</source>
          <target state="translated">AssetTagHelper</target>
        </trans-unit>
        <trans-unit id="20e338624cee29d0effead85b0dd0e70de783b4c" translate="yes" xml:space="preserve">
          <source>Assets</source>
          <target state="translated">Assets</target>
        </trans-unit>
        <trans-unit id="4807d8936dcabbe42f5d09c4a76c10d52316a3ca" translate="yes" xml:space="preserve">
          <source>Assets (images that are part of your app):</source>
          <target state="translated">资产(作为您的应用程序一部分的图像)。</target>
        </trans-unit>
        <trans-unit id="9b82e850f7ed2dedffa7681c8fec24b5075d5ae3" translate="yes" xml:space="preserve">
          <source>Assets Cache Store</source>
          <target state="translated">资产缓存存储</target>
        </trans-unit>
        <trans-unit id="43f8ca5024ee3def5b460c4759d286dcedb4b047" translate="yes" xml:space="preserve">
          <source>Assets are compiled and cached on the first request after the server is started. Sprockets sets a &lt;code&gt;must-revalidate&lt;/code&gt; Cache-Control HTTP header to reduce request overhead on subsequent requests - on these the browser gets a 304 (Not Modified) response.</source>
          <target state="translated">服务器启动后，资产将在第一个请求上进行编译和缓存。Sprockets设置了一个 &lt;code&gt;must-revalidate&lt;/code&gt; Cache-Control HTTP标头，以减少后续请求的请求开销-在这些请求上，浏览器获得304（未修改）响应。</target>
        </trans-unit>
        <trans-unit id="ed311885928b78d2e132748c587ac6b68bebff3e" translate="yes" xml:space="preserve">
          <source>Assets can also come from external sources in the form of gems.</source>
          <target state="translated">资产也可以以宝石的形式来自外部。</target>
        </trans-unit>
        <trans-unit id="575362e0119c49b760169c0e4ff2b71bf03ac5fb" translate="yes" xml:space="preserve">
          <source>Assets can still be placed in the &lt;code&gt;public&lt;/code&gt; hierarchy. Any assets under &lt;code&gt;public&lt;/code&gt; will be served as static files by the application or web server when &lt;code&gt;config.public_file_server.enabled&lt;/code&gt; is set to true. You should use &lt;code&gt;app/assets&lt;/code&gt; for files that must undergo some pre-processing before they are served.</source>
          <target state="translated">资产仍然可以放在 &lt;code&gt;public&lt;/code&gt; 层次结构中。当 &lt;code&gt;config.public_file_server.enabled&lt;/code&gt; 设置为true 时， &lt;code&gt;public&lt;/code&gt; 或应用程序下的任何资产都将由应用程序或Web服务器用作静态文件。您应将应用 &lt;code&gt;app/assets&lt;/code&gt; 用于必须经过一些预处理才能提供的文件。</target>
        </trans-unit>
        <trans-unit id="c8b15055138c6bf376b16682a1f5e6d5dedbbc61" translate="yes" xml:space="preserve">
          <source>Assets inside subdirectories can also be accessed.</source>
          <target state="translated">子目录内的资产也可以被访问。</target>
        </trans-unit>
        <trans-unit id="b640cafe5e08bc8647db8a302e7b35141ceb8421" translate="yes" xml:space="preserve">
          <source>Assets within an engine work in an identical way to a full application. Because the engine class inherits from &lt;code&gt;Rails::Engine&lt;/code&gt;, the application will know to look up assets in the engine's &lt;code&gt;app/assets&lt;/code&gt; and &lt;code&gt;lib/assets&lt;/code&gt; directories.</source>
          <target state="translated">引擎中的资产以与完整应用程序相同的方式工作。由于引擎类继承自 &lt;code&gt;Rails::Engine&lt;/code&gt; ，因此应用程序将知道在引擎的 &lt;code&gt;app/assets&lt;/code&gt; 和 &lt;code&gt;lib/assets&lt;/code&gt; 目录中查找资产。</target>
        </trans-unit>
        <trans-unit id="f36160ada1806cf8654fd17482714f39ca8bc19a" translate="yes" xml:space="preserve">
          <source>Assign a hash to set additional options:</source>
          <target state="translated">指定一个哈希值来设置其他选项。</target>
        </trans-unit>
        <trans-unit id="23661c754858d9e05d60f1c9c39cb3a4ade78993" translate="yes" xml:space="preserve">
          <source>Assigning an object to a &lt;a href=&quot;classmethods#method-i-belongs_to&quot;&gt;&lt;code&gt;belongs_to&lt;/code&gt;&lt;/a&gt; association does not save the object, since the foreign key field belongs on the parent. It does not save the parent either.</source>
          <target state="translated">由于外键字段属于父级，因此将对象分配给&lt;a href=&quot;classmethods#method-i-belongs_to&quot;&gt; &lt;code&gt;belongs_to&lt;/code&gt; &lt;/a&gt;关联不会保存该对象。它也不会保存父项。</target>
        </trans-unit>
        <trans-unit id="a1179401c06dfc9070dee60cbe79263243cd91b9" translate="yes" xml:space="preserve">
          <source>Assigning an object to a &lt;a href=&quot;classmethods#method-i-belongs_to&quot;&gt;belongs_to&lt;/a&gt; association does not save the object, since the foreign key field belongs on the parent. It does not save the parent either.</source>
          <target state="translated">由于外键字段属于父级，因此将对象分配给&lt;a href=&quot;classmethods#method-i-belongs_to&quot;&gt;belongs_to&lt;/a&gt;关联不会保存该对象。它也不会保存父项。</target>
        </trans-unit>
        <trans-unit id="22b79a1167b4a8147526510f10e82f87d319cc38" translate="yes" xml:space="preserve">
          <source>Assigning an object to a &lt;a href=&quot;classmethods#method-i-has_one&quot;&gt;&lt;code&gt;has_one&lt;/code&gt;&lt;/a&gt; association automatically saves that object and the object being replaced (if there is one), in order to update their foreign keys - except if the parent object is unsaved (&lt;code&gt;new_record? == true&lt;/code&gt;).</source>
          <target state="translated">将对象分配给&lt;a href=&quot;classmethods#method-i-has_one&quot;&gt; &lt;code&gt;has_one&lt;/code&gt; &lt;/a&gt;关联会自动保存该对象和要替换的对象（如果有），以更新 &lt;code&gt;new_record? == true&lt;/code&gt; 键-除非父对象未保存（new_record？== true）。</target>
        </trans-unit>
        <trans-unit id="f04a5aaf47a8dbea34254ff8291125ada81a1e9c" translate="yes" xml:space="preserve">
          <source>Assigning an object to a &lt;a href=&quot;classmethods#method-i-has_one&quot;&gt;has_one&lt;/a&gt; association automatically saves that object and the object being replaced (if there is one), in order to update their foreign keys - except if the parent object is unsaved (&lt;code&gt;new_record? == true&lt;/code&gt;).</source>
          <target state="translated">将对象分配给&lt;a href=&quot;classmethods#method-i-has_one&quot;&gt;has_one&lt;/a&gt;关联会自动保存该对象和要替换的对象（如果有），以更新 &lt;code&gt;new_record? == true&lt;/code&gt; 键-除非父对象未保存（new_record？== true）。</target>
        </trans-unit>
        <trans-unit id="fe80d1c27b8b2ddb327824d81a459e71b8999e9e" translate="yes" xml:space="preserve">
          <source>Assigning an object to a &lt;code&gt;belongs_to&lt;/code&gt; association does &lt;em&gt;not&lt;/em&gt; automatically save the object. It does not save the associated object either.</source>
          <target state="translated">分配对象为 &lt;code&gt;belongs_to&lt;/code&gt; 的关联也&lt;em&gt;不会&lt;/em&gt;自动保存对象。它也不会保存关联的对象。</target>
        </trans-unit>
        <trans-unit id="75aa11c043182cc29574c7b61e34819e6da7d769" translate="yes" xml:space="preserve">
          <source>Assigning the same value leaves the attribute unchanged:</source>
          <target state="translated">赋予相同的值,使该属性保持不变。</target>
        </trans-unit>
        <trans-unit id="7f83901a85f7bf7a16bcd377a78eec351875f13f" translate="yes" xml:space="preserve">
          <source>Assigns a new value to the hash:</source>
          <target state="translated">给哈希分配一个新的值。</target>
        </trans-unit>
        <trans-unit id="cc8c860cebff96ebc97cdbe7836446b62d8c6648" translate="yes" xml:space="preserve">
          <source>Assigns a value to a given &lt;code&gt;key&lt;/code&gt;. The given key may still get filtered out when &lt;code&gt;permit&lt;/code&gt; is called.</source>
          <target state="translated">为给定 &lt;code&gt;key&lt;/code&gt; 分配一个值。调用 &lt;code&gt;permit&lt;/code&gt; ，给定的密钥仍可能被过滤掉。</target>
        </trans-unit>
        <trans-unit id="846f1cf94e7c0c5bba5f3f7b5e48921a06599bda" translate="yes" xml:space="preserve">
          <source>Assigns the associate object, extracts the primary key, and sets it as the foreign key. No modification or deletion of existing records takes place.</source>
          <target state="translated">分配关联对象,提取主键,并将其设置为外键。不对现有记录进行修改或删除。</target>
        </trans-unit>
        <trans-unit id="e4866a9aed99dfa401e209c1fbfb98021ac8ea79" translate="yes" xml:space="preserve">
          <source>Assigns the associate object, extracts the primary key, sets it as the foreign key, and saves the associate object. To avoid database inconsistencies, permanently deletes an existing associated object when assigning a new one, even if the new one isn't saved to database.</source>
          <target state="translated">分配关联对象,提取主键,设置为外键,并保存关联对象。为了避免数据库不一致,在分配新的关联对象时,永久删除已有的关联对象,即使新的关联对象没有保存到数据库中。</target>
        </trans-unit>
        <trans-unit id="104413f90bc51bef155c95e5de877b9f0cab0ba3" translate="yes" xml:space="preserve">
          <source>Assigns the given &lt;code&gt;value&lt;/code&gt; to the &lt;code&gt;params&lt;/code&gt; hash. If &lt;code&gt;value&lt;/code&gt; is a &lt;a href=&quot;../hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt;, this will create an &lt;a href=&quot;parameters&quot;&gt;&lt;code&gt;ActionController::Parameters&lt;/code&gt;&lt;/a&gt; object that has been instantiated with the given &lt;code&gt;value&lt;/code&gt; hash.</source>
          <target state="translated">分配给 &lt;code&gt;value&lt;/code&gt; 到 &lt;code&gt;params&lt;/code&gt; 哈希值。如果 &lt;code&gt;value&lt;/code&gt; 是&lt;a href=&quot;../hash&quot;&gt; &lt;code&gt;Hash&lt;/code&gt; &lt;/a&gt;，这将创建一个已经用给定 &lt;code&gt;value&lt;/code&gt; hash实例化的&lt;a href=&quot;parameters&quot;&gt; &lt;code&gt;ActionController::Parameters&lt;/code&gt; &lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="6168f81b3ce044cf7a902995bf7b8eeb931a3db0" translate="yes" xml:space="preserve">
          <source>Assigns the given &lt;code&gt;value&lt;/code&gt; to the &lt;code&gt;params&lt;/code&gt; hash. If &lt;code&gt;value&lt;/code&gt; is a &lt;a href=&quot;../hash&quot;&gt;Hash&lt;/a&gt;, this will create an &lt;a href=&quot;parameters&quot;&gt;ActionController::Parameters&lt;/a&gt; object that has been instantiated with the given &lt;code&gt;value&lt;/code&gt; hash.</source>
          <target state="translated">分配给 &lt;code&gt;value&lt;/code&gt; 到 &lt;code&gt;params&lt;/code&gt; 哈希值。如果 &lt;code&gt;value&lt;/code&gt; 是&lt;a href=&quot;../hash&quot;&gt;Hash&lt;/a&gt;，这将创建一个已经用给定 &lt;code&gt;value&lt;/code&gt; hash 实例化的&lt;a href=&quot;parameters&quot;&gt;ActionController :: Parameters&lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="8abd1b6c14048ddd4ceee1f5140e3b2b501b8962" translate="yes" xml:space="preserve">
          <source>Assigns to &lt;code&gt;attribute&lt;/code&gt; the boolean opposite of &lt;code&gt;attribute?&lt;/code&gt;. So if the predicate returns &lt;code&gt;true&lt;/code&gt; the attribute will become &lt;code&gt;false&lt;/code&gt;. This method toggles directly the underlying value without calling any setter. Returns &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="translated">将 &lt;code&gt;attribute&lt;/code&gt; 分配给属性的布尔对数 &lt;code&gt;attribute?&lt;/code&gt; 。因此，如果谓词返回 &lt;code&gt;true&lt;/code&gt; ,则该属性将变为 &lt;code&gt;false&lt;/code&gt; 。此方法直接切换基础值，而无需调用任何设置器。返回 &lt;code&gt;self&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c72945749385be780e1ff93b0c6e79836b6dea42" translate="yes" xml:space="preserve">
          <source>Associating Models</source>
          <target state="translated">关联模型</target>
        </trans-unit>
        <trans-unit id="0f9711bd4cc1073b62c824f205a8c17a582b71e1" translate="yes" xml:space="preserve">
          <source>Association Callbacks</source>
          <target state="translated">协会回调</target>
        </trans-unit>
        <trans-unit id="67bf427d43e7ba5b92d4f1404db07212dd7bf1c4" translate="yes" xml:space="preserve">
          <source>Association Extensions</source>
          <target state="translated">协会扩展部分</target>
        </trans-unit>
        <trans-unit id="a9f65af72d0c9114a2535c7209f0e9b0b65e67a5" translate="yes" xml:space="preserve">
          <source>Association Join Models</source>
          <target state="translated">协会加盟模式</target>
        </trans-unit>
        <trans-unit id="c96e91903f0acc7060a2c305ac881776ccd83069" translate="yes" xml:space="preserve">
          <source>Association callbacks</source>
          <target state="translated">协会回调</target>
        </trans-unit>
        <trans-unit id="d40ff042fa9271ca1103b4b4a5b410f7aaac9558" translate="yes" xml:space="preserve">
          <source>Association callbacks are similar to normal callbacks, but they are triggered by events in the life cycle of a collection. There are four available association callbacks:</source>
          <target state="translated">关联回调与普通回调类似,但它们是由集合生命周期中的事件触发的。有四个可用的关联回调。</target>
        </trans-unit>
        <trans-unit id="507e264ef6f5688f4711427b8f4b562a94d08625" translate="yes" xml:space="preserve">
          <source>Association extensions</source>
          <target state="translated">协会扩展</target>
        </trans-unit>
        <trans-unit id="2a03e66c4a9d168f37431a6544333034610fe69e" translate="yes" xml:space="preserve">
          <source>Association methods are generated in a module included into the model class, making overrides easy. The original generated method can thus be called with &lt;code&gt;super&lt;/code&gt;:</source>
          <target state="translated">关联方法是在模型类中包含的模块中生成的，从而使重写变得容易。因此，可以使用 &lt;code&gt;super&lt;/code&gt; 调用原始生成的方法：</target>
        </trans-unit>
        <trans-unit id="fccd76e5c1f3c1fd49745909599369921a04c3a3" translate="yes" xml:space="preserve">
          <source>Association with autosave option defines several callbacks on your model (around_save, before_save, after_create, after_update). Please note that callbacks are executed in the order they were defined in model. You should avoid modifying the association content before autosave callbacks are executed. Placing your callbacks after associations is usually a good practice.</source>
          <target state="translated">关联自动保存选项在您的模型上定义了几个回调(about_save,before_save,after_create,after_update)。请注意,回调是按照它们在模型中定义的顺序执行的。你应该避免在自动保存回调执行之前修改关联内容。将您的回调放置在关联之后通常是一个好的做法。</target>
        </trans-unit>
        <trans-unit id="376268ad021304a677ee3420ccf94c75e3bce49b" translate="yes" xml:space="preserve">
          <source>Association with autosave option defines several callbacks on your model (before_save, after_create, after_update). Please note that callbacks are executed in the order they were defined in model. You should avoid modifying the association content, before autosave callbacks are executed. Placing your callbacks after associations is usually a good practice.</source>
          <target state="translated">与自动保存选项的关联定义了几个模型上的回调(before_save,after_create,after_update)。请注意,回调是按照它们在模型中定义的顺序执行的。在自动保存回调被执行之前,你应该避免修改关联内容。将回调放在关联之后通常是一个好的做法。</target>
        </trans-unit>
        <trans-unit id="8457d5bdb5bd1aa337e106692d35c63706f5bd92" translate="yes" xml:space="preserve">
          <source>Associations are a set of macro-like class methods for tying objects together through foreign keys. They express relationships like &amp;ldquo;Project has one Project Manager&amp;rdquo; or &amp;ldquo;Project belongs to a Portfolio&amp;rdquo;. Each macro adds a number of methods to the class which are specialized according to the collection or association symbol and the options hash. It works much the same way as Ruby's own &lt;code&gt;attr*&lt;/code&gt; methods.</source>
          <target state="translated">关联是用于通过外键将对象绑定在一起的一组类似于宏的类方法。他们表示&amp;ldquo;项目有一个项目经理&amp;rdquo;或&amp;ldquo;项目属于投资组合&amp;rdquo;之类的关系。每个宏都向类添加许多方法，这些方法根据集合或关联符号和选项哈希值进行专门化。它的工作方式与Ruby自己的 &lt;code&gt;attr*&lt;/code&gt; 方法相同。</target>
        </trans-unit>
        <trans-unit id="1577fcfd3070a513e1c8c703accdc21cbb1b51b0" translate="yes" xml:space="preserve">
          <source>Associations are built from &lt;code&gt;Relation&lt;/code&gt; objects, and you can use the &lt;a href=&quot;../relation&quot;&gt;&lt;code&gt;Relation&lt;/code&gt;&lt;/a&gt; syntax to customize them. For example, to add a condition:</source>
          <target state="translated">关联是从 &lt;code&gt;Relation&lt;/code&gt; 对象构建的，您可以使用&lt;a href=&quot;../relation&quot;&gt; &lt;code&gt;Relation&lt;/code&gt; &lt;/a&gt;语法自定义它们。例如，要添加条件：</target>
        </trans-unit>
        <trans-unit id="2569f2087c5f7f30e2a2b2f66147fd3d6250d3ce" translate="yes" xml:space="preserve">
          <source>Associations are built from &lt;code&gt;Relation&lt;/code&gt; objects, and you can use the &lt;a href=&quot;../relation&quot;&gt;Relation&lt;/a&gt; syntax to customize them. For example, to add a condition:</source>
          <target state="translated">关联是从 &lt;code&gt;Relation&lt;/code&gt; 对象构建的，您可以使用&lt;a href=&quot;../relation&quot;&gt;Relation&lt;/a&gt;语法来自定义它们。例如，添加条件：</target>
        </trans-unit>
        <trans-unit id="82dcdcabd8bcd9ee8aa189ff6c389734ca1ad9d0" translate="yes" xml:space="preserve">
          <source>Associations are extremely useful, but they are not magic. You are responsible for maintaining your database schema to match your associations. In practice, this means two things, depending on what sort of associations you are creating. For &lt;code&gt;belongs_to&lt;/code&gt; associations you need to create foreign keys, and for &lt;code&gt;has_and_belongs_to_many&lt;/code&gt; associations you need to create the appropriate join table.</source>
          <target state="translated">关联非常有用，但不是魔术。您负责维护数据库架构以匹配您的关联。实际上，这取决于您要创建的关联类型，有两件事。对于 &lt;code&gt;belongs_to&lt;/code&gt; 关联，您需要创建外键，对于 &lt;code&gt;has_and_belongs_to_many&lt;/code&gt; 关联，您需要创建适当的联接表。</target>
        </trans-unit>
        <trans-unit id="65a645ecf9a092f048f4af2f54ab2e0827e07bee" translate="yes" xml:space="preserve">
          <source>Associations are implemented using macro-style calls, so that you can declaratively add features to your models. For example, by declaring that one model &lt;code&gt;belongs_to&lt;/code&gt; another, you instruct Rails to maintain &lt;a href=&quot;https://en.wikipedia.org/wiki/Unique_key&quot;&gt;Primary Key&lt;/a&gt;-&lt;a href=&quot;https://en.wikipedia.org/wiki/Foreign_key&quot;&gt;Foreign Key&lt;/a&gt; information between instances of the two models, and you also get a number of utility methods added to your model.</source>
          <target state="translated">关联是使用宏样式调用实现的，因此您可以声明性地向模型添加功能。例如，通过声明一个模型 &lt;code&gt;belongs_to&lt;/code&gt; 另一个模型，您指示Rails 在两个模型的实例之间维护&amp;ldquo; &lt;a href=&quot;https://en.wikipedia.org/wiki/Unique_key&quot;&gt;主键&lt;/a&gt; - &lt;a href=&quot;https://en.wikipedia.org/wiki/Foreign_key&quot;&gt;外键&amp;rdquo;&lt;/a&gt;信息，并且还向模型添加了许多实用程序方法。</target>
        </trans-unit>
        <trans-unit id="8671f12ade895d89e49a44c0d05e6bc216f3b54e" translate="yes" xml:space="preserve">
          <source>Associations compute the name of the corresponding default associated class using this method:</source>
          <target state="translated">关联使用本方法计算对应的默认关联类的名称。</target>
        </trans-unit>
        <trans-unit id="f2d43a4fee6cfc8718d7cb5511bca0e9f5fdd043" translate="yes" xml:space="preserve">
          <source>Associations use this method to infer foreign keys, for example &lt;code&gt;has_one&lt;/code&gt; and &lt;code&gt;has_many&lt;/code&gt; do this:</source>
          <target state="translated">关联使用此方法来推断外键，例如 &lt;code&gt;has_one&lt;/code&gt; 和 &lt;code&gt;has_many&lt;/code&gt; 可以这样做：</target>
        </trans-unit>
        <trans-unit id="8cfaee58c319dc44ed2f02d5ec109a1b1f246355" translate="yes" xml:space="preserve">
          <source>Assume we have a controller for dealing with articles &lt;code&gt;app/controllers/articles_controller.rb&lt;/code&gt;:</source>
          <target state="translated">假设我们有一个控制器来处理文章 &lt;code&gt;app/controllers/articles_controller.rb&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="415d205fbba7a3ca2e9f6ed5310c0f4ae82cb829" translate="yes" xml:space="preserve">
          <source>Assumes self represents an offset from UTC in seconds (as returned from Time#utc_offset) and turns this into an +HH:MM formatted string.</source>
          <target state="translated">假设self表示与UTC的偏移量,以秒为单位(从Time#utc_offset返回),并将其变成+HH:MM格式的字符串。</target>
        </trans-unit>
        <trans-unit id="dc4368ed235f63665bb4bd347adb8fb36e8c8d3c" translate="yes" xml:space="preserve">
          <source>Assumes that &lt;code&gt;str&lt;/code&gt; is a time in the time zone &lt;code&gt;self&lt;/code&gt;, unless &lt;code&gt;format&lt;/code&gt; includes an explicit time zone. (This is the same behavior as &lt;code&gt;parse&lt;/code&gt;.) In either case, the returned &lt;a href=&quot;timewithzone&quot;&gt;&lt;code&gt;TimeWithZone&lt;/code&gt;&lt;/a&gt; has the timezone of &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="translated">假定 &lt;code&gt;str&lt;/code&gt; 是时区 &lt;code&gt;self&lt;/code&gt; 中的时间，除非 &lt;code&gt;format&lt;/code&gt; 包含显式时区。（这与 &lt;code&gt;parse&lt;/code&gt; 相同。）在两种情况下，返回的&lt;a href=&quot;timewithzone&quot;&gt; &lt;code&gt;TimeWithZone&lt;/code&gt; &lt;/a&gt;的时区均为 &lt;code&gt;self&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4c30922d8bdf58e7321540cc22d6ed6a871322f1" translate="yes" xml:space="preserve">
          <source>Assumes that &lt;code&gt;str&lt;/code&gt; is a time in the time zone &lt;code&gt;self&lt;/code&gt;, unless &lt;code&gt;format&lt;/code&gt; includes an explicit time zone. (This is the same behavior as &lt;code&gt;parse&lt;/code&gt;.) In either case, the returned &lt;a href=&quot;timewithzone&quot;&gt;TimeWithZone&lt;/a&gt; has the timezone of &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="translated">假定 &lt;code&gt;str&lt;/code&gt; 是时区 &lt;code&gt;self&lt;/code&gt; 中的时间，除非 &lt;code&gt;format&lt;/code&gt; 包含显式时区。（这与 &lt;code&gt;parse&lt;/code&gt; 相同。）在两种情况下，返回的&lt;a href=&quot;timewithzone&quot;&gt;TimeWithZone&lt;/a&gt;的时区均为 &lt;code&gt;self&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6aa9982687172de44a9e7b173a37a1cd50cd2032" translate="yes" xml:space="preserve">
          <source>Assuming that the &lt;code&gt;@customer&lt;/code&gt; instance variable contains an instance of the &lt;code&gt;Customer&lt;/code&gt; model, this will use &lt;code&gt;_customer.html.erb&lt;/code&gt; to render it and will pass the local variable &lt;code&gt;customer&lt;/code&gt; into the partial which will refer to the &lt;code&gt;@customer&lt;/code&gt; instance variable in the parent view.</source>
          <target state="translated">假设 &lt;code&gt;@customer&lt;/code&gt; 实例变量包含 &lt;code&gt;Customer&lt;/code&gt; 模型的实例，它将使用 &lt;code&gt;_customer.html.erb&lt;/code&gt; 呈现它，并将局部变量 &lt;code&gt;customer&lt;/code&gt; 传递到在父视图中引用 &lt;code&gt;@customer&lt;/code&gt; 实例变量的局部变量中。</target>
        </trans-unit>
        <trans-unit id="baa4870d34fb291877d9aae3a8e9b9ccebb2abcc" translate="yes" xml:space="preserve">
          <source>Assuming the person had two addresses, with ids 23 and 45 this would create output similar to this:</source>
          <target state="translated">假设这个人有两个地址,id为23和45,就会产生类似这样的输出。</target>
        </trans-unit>
        <trans-unit id="1f616513713ac00bdfc7a82c195c067f69e41d07" translate="yes" xml:space="preserve">
          <source>Assuming we have a model that's been saved in an instance variable named &lt;code&gt;@article&lt;/code&gt;, it looks like this:</source>
          <target state="translated">假设我们有一个保存在名为 &lt;code&gt;@article&lt;/code&gt; 的实例变量中的模型，它看起来像这样：</target>
        </trans-unit>
        <trans-unit id="db37f55867798c63094a75db06886660e91436bf" translate="yes" xml:space="preserve">
          <source>Async</source>
          <target state="translated">Async</target>
        </trans-unit>
        <trans-unit id="f9659456b5eb8e513f93a92ff94e03fd54e830a4" translate="yes" xml:space="preserve">
          <source>Async and Inline Queue Adapters</source>
          <target state="translated">异步和内联队列适配器</target>
        </trans-unit>
        <trans-unit id="ae1595310a3433939a63801e79c23e4d6e106b9f" translate="yes" xml:space="preserve">
          <source>At any given place in the code, let's define &lt;em&gt;cref&lt;/em&gt; to be the first element of the nesting if it is not empty, or &lt;code&gt;Object&lt;/code&gt; otherwise.</source>
          <target state="translated">在代码的任何给定位置，如果不为空，则将&lt;em&gt;cref&lt;/em&gt;定义为嵌套的第一个元素，否则将其定义为 &lt;code&gt;Object&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="15a51622eaee0734d0b13c7e612b3a621fe8da93" translate="yes" xml:space="preserve">
          <source>At any given time,</source>
          <target state="translated">在任何时候。</target>
        </trans-unit>
        <trans-unit id="73d252187724d00eec63067a22320360b3a4246c" translate="yes" xml:space="preserve">
          <source>At any time you can call the &lt;code&gt;backtrace&lt;/code&gt; command (or its alias &lt;code&gt;where&lt;/code&gt;) to print the backtrace of the application. This can be very helpful to know how you got where you are. If you ever wondered about how you got somewhere in your code, then &lt;code&gt;backtrace&lt;/code&gt; will supply the answer.</source>
          <target state="translated">您可以随时调用 &lt;code&gt;backtrace&lt;/code&gt; 命令（或其别名 &lt;code&gt;where&lt;/code&gt; ）以打印应用程序的回溯。这对于知道自己的位置很有帮助。如果您想知道如何在代码中找到某个位置，那么 &lt;code&gt;backtrace&lt;/code&gt; 将提供答案。</target>
        </trans-unit>
        <trans-unit id="868e89efcdbe74ff9ea25814a4d315861f339fcf" translate="yes" xml:space="preserve">
          <source>At its simplest, you simply extend &lt;code&gt;IntegrationTest&lt;/code&gt; and write your tests using the get/post methods:</source>
          <target state="translated">最简单的说，您只需扩展 &lt;code&gt;IntegrationTest&lt;/code&gt; 并使用get / post方法编写测试：</target>
        </trans-unit>
        <trans-unit id="a361125fb4fbbac3393c44668c7bc6141fbcce90" translate="yes" xml:space="preserve">
          <source>At rendering time, the content page is computed and then inserted in the layout, like this:</source>
          <target state="translated">在渲染时,计算出内容页,然后插入布局中,像这样。</target>
        </trans-unit>
        <trans-unit id="cfb6878a99ba42541c32b854b239ddbb1b663506" translate="yes" xml:space="preserve">
          <source>At the moment, http://localhost:3000 still displays &quot;Yay! You're on Rails!&quot;. Let's display our &quot;Hello, Rails!&quot; text at http://localhost:3000 as well. To do so, we will add a route that maps the &lt;em&gt;root path&lt;/em&gt; of our application to the appropriate controller and action.</source>
          <target state="translated">此刻，http：// localhost：3000仍然显示&amp;ldquo;是！您正在使用Rails！&amp;rdquo;。让我们展示我们的&amp;ldquo; Hello，Rails！&amp;rdquo; 以及http：// localhost：3000上的文本。为此，我们将添加一条路由，将我们的应用程序的&lt;em&gt;根路径&lt;/em&gt;映射到适当的控制器和操作。</target>
        </trans-unit>
        <trans-unit id="63918f350126a6fbab4e6966769e660cf833a155" translate="yes" xml:space="preserve">
          <source>At the root of this brand new engine's directory lives a &lt;code&gt;blorgh.gemspec&lt;/code&gt; file. When you include the engine into an application later on, you will do so with this line in the Rails application's &lt;code&gt;Gemfile&lt;/code&gt;:</source>
          <target state="translated">在这个全新引擎目录的根目录下有一个 &lt;code&gt;blorgh.gemspec&lt;/code&gt; 文件。稍后将引擎包含在应用程序中时，您将在Rails应用程序的 &lt;code&gt;Gemfile&lt;/code&gt; 中使用以下代码：</target>
        </trans-unit>
        <trans-unit id="e1d98f3fcacfbfb4aa0a3a26a62de52cb8ca105e" translate="yes" xml:space="preserve">
          <source>At this point &lt;code&gt;app&lt;/code&gt; is the Rails app itself (a middleware), and what happens next is Rack will call all the provided middlewares:</source>
          <target state="translated">此时， &lt;code&gt;app&lt;/code&gt; 就是Rails应用程序本身（中间件），接下来发生的事情是Rack将调用所有提供的中间件：</target>
        </trans-unit>
        <trans-unit id="dc1d88078405cb811033d72259655b8ef9df5fb2" translate="yes" xml:space="preserve">
          <source>At this point our Articles controller tests the &lt;code&gt;:index&lt;/code&gt; as well as &lt;code&gt;:new&lt;/code&gt; and &lt;code&gt;:create&lt;/code&gt; actions. What about dealing with existing data?</source>
          <target state="translated">此时，我们的Articles控制器将测试 &lt;code&gt;:index&lt;/code&gt; 以及 &lt;code&gt;:new&lt;/code&gt; 和 &lt;code&gt;:create&lt;/code&gt; 动作。如何处理现有数据？</target>
        </trans-unit>
        <trans-unit id="396525adb3990621767284df9acc8b43096c1146" translate="yes" xml:space="preserve">
          <source>At this point you should have a good overview about how I18n support in Ruby on Rails works and are ready to start translating your project.</source>
          <target state="translated">在这一点上,你应该对Ruby on Rails中的I18n支持如何工作有一个很好的概述,并准备好开始翻译你的项目。</target>
        </trans-unit>
        <trans-unit id="922b650a82f07bfa2b25f9945612db60f9c56ca6" translate="yes" xml:space="preserve">
          <source>At this point, the implementation of &lt;code&gt;server.run&lt;/code&gt; will depend on the server you're using. For example, if you were using Puma, here's what the &lt;code&gt;run&lt;/code&gt; method would look like:</source>
          <target state="translated">此时， &lt;code&gt;server.run&lt;/code&gt; 的实现将取决于您使用的服务器。例如，如果您使用的是Puma，则 &lt;code&gt;run&lt;/code&gt; 方法如下所示：</target>
        </trans-unit>
        <trans-unit id="8a2d2551bbd7dd529bf95f5947daed29e4b4f28f" translate="yes" xml:space="preserve">
          <source>At this point, you can use a rails command to run the migration:</source>
          <target state="translated">此时,你可以使用rails命令来运行迁移。</target>
        </trans-unit>
        <trans-unit id="e7eb011511312aa701349857cfe6a9615c3793a6" translate="yes" xml:space="preserve">
          <source>At this prompt, we can initialize a new &lt;code&gt;Article&lt;/code&gt; object:</source>
          <target state="translated">在此提示下，我们可以初始化一个新的 &lt;code&gt;Article&lt;/code&gt; 对象：</target>
        </trans-unit>
        <trans-unit id="b46ad3346316a4070cad7302dc40ff18c2a7fbec" translate="yes" xml:space="preserve">
          <source>At this time the following features are supported:</source>
          <target state="translated">目前支持以下功能:</target>
        </trans-unit>
        <trans-unit id="7079ee4fb1d90674cad1ec87e53d9f41d4d9ec63" translate="yes" xml:space="preserve">
          <source>AtomFeedHelper</source>
          <target state="translated">AtomFeedHelper</target>
        </trans-unit>
        <trans-unit id="0656492771402d27747fef9674375d2d5e7219c6" translate="yes" xml:space="preserve">
          <source>Attach the subscriber to a namespace.</source>
          <target state="translated">将用户连接到一个命名空间。</target>
        </trans-unit>
        <trans-unit id="8e632ceca60fb0073d34c20f41f299f07e6c1ae6" translate="yes" xml:space="preserve">
          <source>Attached</source>
          <target state="translated">Attached</target>
        </trans-unit>
        <trans-unit id="62d40c334298f906f3b446222b09acb573c547f3" translate="yes" xml:space="preserve">
          <source>Attached#name</source>
          <target state="translated">Attached#name</target>
        </trans-unit>
        <trans-unit id="1389a248b2886ce6bfc65517f310da84e132d8fd" translate="yes" xml:space="preserve">
          <source>Attached#record</source>
          <target state="translated">Attached#record</target>
        </trans-unit>
        <trans-unit id="89c8a7e0542edfefb9e545f63876a77527c9a7e4" translate="yes" xml:space="preserve">
          <source>Attached::Many</source>
          <target state="translated">Attached::Many</target>
        </trans-unit>
        <trans-unit id="b3ac6a5eb91783882ece96cb867743540db2730c" translate="yes" xml:space="preserve">
          <source>Attached::Many#attach</source>
          <target state="translated">Attached::Many#attach</target>
        </trans-unit>
        <trans-unit id="aa10d766d3ceba8b0631da851153d884ad552593" translate="yes" xml:space="preserve">
          <source>Attached::Many#attached?</source>
          <target state="translated">Attached::Many#attached?</target>
        </trans-unit>
        <trans-unit id="839addeace76f4872768e5c41ba0a3220b0a7913" translate="yes" xml:space="preserve">
          <source>Attached::Many#attachments</source>
          <target state="translated">Attached::Many#attachments</target>
        </trans-unit>
        <trans-unit id="1f1f7289d001f8be2a3a9acaa7bb29376cd5891a" translate="yes" xml:space="preserve">
          <source>Attached::Many#blobs</source>
          <target state="translated">Attached::Many#blobs</target>
        </trans-unit>
        <trans-unit id="8a7039808aceb5b74421beb2ca031b78cd7d9b32" translate="yes" xml:space="preserve">
          <source>Attached::Many#detach</source>
          <target state="translated">Attached::Many#detach</target>
        </trans-unit>
        <trans-unit id="8cad7368e8caad4b1f14c4cab2c7295312685398" translate="yes" xml:space="preserve">
          <source>Attached::Many#purge</source>
          <target state="translated">Attached::Many#purge</target>
        </trans-unit>
        <trans-unit id="cb110bef7bba68749cc246cb418f1ce00bedeea7" translate="yes" xml:space="preserve">
          <source>Attached::Many#purge_later</source>
          <target state="translated">Attached::Many#purge_later</target>
        </trans-unit>
        <trans-unit id="a8307aba9611ea8cbf4034f0c019e53a4cfe7af3" translate="yes" xml:space="preserve">
          <source>Attached::Model</source>
          <target state="translated">Attached::Model</target>
        </trans-unit>
        <trans-unit id="0eabdfb54b24243882ab6c038bd53684a60a4467" translate="yes" xml:space="preserve">
          <source>Attached::Model#has_many_attached</source>
          <target state="translated">Attached::Model#has_many_attached</target>
        </trans-unit>
        <trans-unit id="5ba25c29e84891b925791bddc772b148538443eb" translate="yes" xml:space="preserve">
          <source>Attached::Model#has_one_attached</source>
          <target state="translated">Attached::Model#has_one_attached</target>
        </trans-unit>
        <trans-unit id="d9b6510329bf2d33e2bdd526348d327442b93aa9" translate="yes" xml:space="preserve">
          <source>Attached::Model#purge</source>
          <target state="translated">Attached::Model#purge</target>
        </trans-unit>
        <trans-unit id="3c5e5816c55b74ede7e57b5139846ee291079da1" translate="yes" xml:space="preserve">
          <source>Attached::Model#purge_later</source>
          <target state="translated">Attached::Model#purge_later</target>
        </trans-unit>
        <trans-unit id="5b56aedf7e47c78f6b9f05d1bb4a541815e0c830" translate="yes" xml:space="preserve">
          <source>Attached::One</source>
          <target state="translated">Attached::One</target>
        </trans-unit>
        <trans-unit id="58a17d2a597b18f8afb4105f64ab258a515b9d3e" translate="yes" xml:space="preserve">
          <source>Attached::One#attach</source>
          <target state="translated">Attached::One#attach</target>
        </trans-unit>
        <trans-unit id="883ca8059f3065edd375db2cdf9716d6db9b3d89" translate="yes" xml:space="preserve">
          <source>Attached::One#attached?</source>
          <target state="translated">Attached::One#attached?</target>
        </trans-unit>
        <trans-unit id="da15e187465378d68a0b7b2d00fd1c7b1b39a02a" translate="yes" xml:space="preserve">
          <source>Attached::One#attachment</source>
          <target state="translated">Attached::One#attachment</target>
        </trans-unit>
        <trans-unit id="11424233e768847d3266423079cdc824e54208cd" translate="yes" xml:space="preserve">
          <source>Attached::One#blank?</source>
          <target state="translated">Attached::One#blank?</target>
        </trans-unit>
        <trans-unit id="8ae3a7bed37ab4f0defad6c15f0f48aad669f682" translate="yes" xml:space="preserve">
          <source>Attached::One#detach</source>
          <target state="translated">Attached::One#detach</target>
        </trans-unit>
        <trans-unit id="685ab8ae18a2351e0b0ea6fbda8cbd9a89c86730" translate="yes" xml:space="preserve">
          <source>Attached::One#purge</source>
          <target state="translated">Attached::One#purge</target>
        </trans-unit>
        <trans-unit id="93453d44fdaae67b5b80ab7708f96e27937e77b4" translate="yes" xml:space="preserve">
          <source>Attached::One#purge_later</source>
          <target state="translated">Attached::One#purge_later</target>
        </trans-unit>
        <trans-unit id="d977d1420192c1c019baf7a4f25181e58df91f97" translate="yes" xml:space="preserve">
          <source>Attached::new</source>
          <target state="translated">Attached::new</target>
        </trans-unit>
        <trans-unit id="6d534afdf781f4bb515241843aae7bdf7eb19229" translate="yes" xml:space="preserve">
          <source>Attaches an &lt;code&gt;attachable&lt;/code&gt; to the record.</source>
          <target state="translated">附加一个 &lt;code&gt;attachable&lt;/code&gt; 到记录。</target>
        </trans-unit>
        <trans-unit id="f3b1bd044860d8ace5531413441b90f181c11e3b" translate="yes" xml:space="preserve">
          <source>Attaches one or more &lt;code&gt;attachables&lt;/code&gt; to the record.</source>
          <target state="translated">将一个或多个 &lt;code&gt;attachables&lt;/code&gt; 连接到记录。</target>
        </trans-unit>
        <trans-unit id="93907acaebb9ed407168f8b419d2d0b1e943d01b" translate="yes" xml:space="preserve">
          <source>Attaches the stored job data to the current instance. Receives a hash returned from &lt;code&gt;serialize&lt;/code&gt;</source>
          <target state="translated">将存储的作业数据附加到当前实例。接收从 &lt;code&gt;serialize&lt;/code&gt; 返回的哈希</target>
        </trans-unit>
        <trans-unit id="e9472dd2fad9bf83e3c90525254c0933d6f08f21" translate="yes" xml:space="preserve">
          <source>Attaching File/IO Objects</source>
          <target state="translated">附加文件/IO对象</target>
        </trans-unit>
        <trans-unit id="09c820291ba1639c344cae2eb54113a53189698b" translate="yes" xml:space="preserve">
          <source>Attaching Files to Records</source>
          <target state="translated">将文件附加到记录上</target>
        </trans-unit>
        <trans-unit id="83a56249e5cff48f561d2d725143f1fc2eb3228c" translate="yes" xml:space="preserve">
          <source>Attachment</source>
          <target state="translated">Attachment</target>
        </trans-unit>
        <trans-unit id="6f4d6538d20f508f6906574ab58775678fda96a8" translate="yes" xml:space="preserve">
          <source>Attachment#purge</source>
          <target state="translated">Attachment#purge</target>
        </trans-unit>
        <trans-unit id="fddcd3b8491309fcfa9d3c0fd749b5dd0bf16741" translate="yes" xml:space="preserve">
          <source>Attachment#purge_later</source>
          <target state="translated">Attachment#purge_later</target>
        </trans-unit>
        <trans-unit id="6771ade6e8965a499bc298107ffb52e9a18dd7e3" translate="yes" xml:space="preserve">
          <source>Attachments</source>
          <target state="translated">Attachments</target>
        </trans-unit>
        <trans-unit id="e95e35565ccccafd79bc85a03303d1a910140170" translate="yes" xml:space="preserve">
          <source>Attachments also have access to all methods from &lt;a href=&quot;blob&quot;&gt;&lt;code&gt;ActiveStorage::Blob&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">附件还可以访问&lt;a href=&quot;blob&quot;&gt; &lt;code&gt;ActiveStorage::Blob&lt;/code&gt; &lt;/a&gt;所有方法。</target>
        </trans-unit>
        <trans-unit id="f42fa310d306f581dd200948e59b22d9cea5f0d8" translate="yes" xml:space="preserve">
          <source>Attachments associate records with blobs. Usually that's a one record-many blobs relationship, but it is possible to associate many different records with the same blob. A foreign-key constraint on the attachments table prevents blobs from being purged if they&amp;rsquo;re still attached to any records.</source>
          <target state="translated">附件将记录与Blob相关联。通常，这是一个多记录的记录关系，但是有可能将许多不同的记录与同一记录相关联。附件表上的外键约束可防止blob如果仍附加到任何记录，则将其清除。</target>
        </trans-unit>
        <trans-unit id="cd7c0b6e99f8f68f29c55a617dd9e10085a728fd" translate="yes" xml:space="preserve">
          <source>Attempts to create a record with the given attributes in a table that has a unique constraint on one or several of its columns. If a row already exists with one or several of these unique constraints, the exception such an insertion would normally raise is caught, and the existing record with those attributes is found using &lt;a href=&quot;findermethods#method-i-find_by-21&quot;&gt;find_by!&lt;/a&gt;.</source>
          <target state="translated">试图在表中创建具有给定属性的记录，该记录对其一个或多个列具有唯一约束。如果已经存在带有一个或多个这些唯一约束的行，则将捕获通常会引发这种插入的异常，并使用&lt;a href=&quot;findermethods#method-i-find_by-21&quot;&gt;find_by&lt;/a&gt;找到具有这些属性的现有记录！。</target>
        </trans-unit>
        <trans-unit id="587f835fecd96d5490a5dea755f90b63854d73a8" translate="yes" xml:space="preserve">
          <source>Attempts to create a record with the given attributes in a table that has a unique constraint on one or several of its columns. If a row already exists with one or several of these unique constraints, the exception such an insertion would normally raise is caught, and the existing record with those attributes is found using find_by!.</source>
          <target state="translated">试图在表的一列或几列上有唯一约束的表中创建一条具有给定属性的记录。如果一行已经存在一个或几个这样的唯一约束条件,那么这样的插入通常会引起异常,并且使用find_by!找到带有这些属性的现有记录。</target>
        </trans-unit>
        <trans-unit id="a26452d452a6006a8c2ef8e3dfe6ca22ff936fb1" translate="yes" xml:space="preserve">
          <source>Attempts to pluralize the &lt;code&gt;singular&lt;/code&gt; word unless &lt;code&gt;count&lt;/code&gt; is 1. If &lt;code&gt;plural&lt;/code&gt; is supplied, it will use that when count is &amp;gt; 1, otherwise it will use the Inflector to determine the plural form for the given locale, which defaults to I18n.locale</source>
          <target state="translated">除非 &lt;code&gt;count&lt;/code&gt; 为1，否则尝试对 &lt;code&gt;singular&lt;/code&gt; 进行复数。如果提供了 &lt;code&gt;plural&lt;/code&gt; ，则当count&amp;gt; 1时将使用单数词，否则将使用Inflector确定给定语言环境的复数形式，默认为I18n.locale</target>
        </trans-unit>
        <trans-unit id="e200c03111bac7ec9ec64f747c24ef0750a645c4" translate="yes" xml:space="preserve">
          <source>Attempts to save the record just like &lt;a href=&quot;validations#method-i-save&quot;&gt;ActiveRecord::Base#save&lt;/a&gt; but will raise an &lt;a href=&quot;recordinvalid&quot;&gt;&lt;code&gt;ActiveRecord::RecordInvalid&lt;/code&gt;&lt;/a&gt; exception instead of returning &lt;code&gt;false&lt;/code&gt; if the record is not valid.</source>
          <target state="translated">尝试像&lt;a href=&quot;validations#method-i-save&quot;&gt;ActiveRecord :: Base＃save&lt;/a&gt;一样保存记录，但是会引发&lt;a href=&quot;recordinvalid&quot;&gt; &lt;code&gt;ActiveRecord::RecordInvalid&lt;/code&gt; &lt;/a&gt;异常，而不是如果记录无效则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b31e144d6ebf723a73b4ca38cdf4803d78ea6fcc" translate="yes" xml:space="preserve">
          <source>Attempts to save the record just like &lt;a href=&quot;validations#method-i-save&quot;&gt;ActiveRecord::Base#save&lt;/a&gt; but will raise an &lt;a href=&quot;recordinvalid&quot;&gt;ActiveRecord::RecordInvalid&lt;/a&gt; exception instead of returning &lt;code&gt;false&lt;/code&gt; if the record is not valid.</source>
          <target state="translated">尝试像&lt;a href=&quot;validations#method-i-save&quot;&gt;ActiveRecord :: Base＃save&lt;/a&gt;一样保存记录，但是会引发&lt;a href=&quot;recordinvalid&quot;&gt;ActiveRecord :: RecordInvalid&lt;/a&gt;异常，而不是如果记录无效则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a086d942884a301b827479029ba19c2746237425" translate="yes" xml:space="preserve">
          <source>Attribute</source>
          <target state="translated">Attribute</target>
        </trans-unit>
        <trans-unit id="c1cc84dd516c4d9f904650ad60b1c8220808971b" translate="yes" xml:space="preserve">
          <source>Attribute Methods</source>
          <target state="translated">属性方法</target>
        </trans-unit>
        <trans-unit id="a3acf6ee3669ec0cace5b972a9483639da64b10a" translate="yes" xml:space="preserve">
          <source>Attribute query methods</source>
          <target state="translated">属性查询方法</target>
        </trans-unit>
        <trans-unit id="b8460031022d281a771f177fac04a6a17a6a2b3c" translate="yes" xml:space="preserve">
          <source>Attribute that keeps track of converted arrays, if any, to avoid double looping in the common use case permit + mass-assignment. Defined in a method to instantiate it only if needed.</source>
          <target state="translated">属性,用于跟踪转换后的数组(如果有的话),以避免在常见的使用情况下许可+质量分配的双重循环。在方法中定义,只有在需要时才会实例化它。</target>
        </trans-unit>
        <trans-unit id="6e1f402c935c188fda2ea7b958c12a212f9a3dd0" translate="yes" xml:space="preserve">
          <source>Attribute#has_rich_text</source>
          <target state="translated">Attribute#has_rich_text</target>
        </trans-unit>
        <trans-unit id="6468d126d56ad4b3d743b3b3bf44322d88e95d3a" translate="yes" xml:space="preserve">
          <source>AttributeAssignment</source>
          <target state="translated">AttributeAssignment</target>
        </trans-unit>
        <trans-unit id="b82e62a1cf7f3c870cdc4feea7b568a87d484d5e" translate="yes" xml:space="preserve">
          <source>AttributeAssignment#assign_attributes</source>
          <target state="translated">AttributeAssignment#assign_attributes</target>
        </trans-unit>
        <trans-unit id="a9da9116d74f50a609e3363f4336824b1dc8789a" translate="yes" xml:space="preserve">
          <source>AttributeAssignment#attributes=</source>
          <target state="translated">AttributeAssignment#attributes=</target>
        </trans-unit>
        <trans-unit id="03740362ee6cffa006356a99c20d197d620ff727" translate="yes" xml:space="preserve">
          <source>AttributeMethods</source>
          <target state="translated">AttributeMethods</target>
        </trans-unit>
        <trans-unit id="81cbf61753dda49d30ecf4b5ca4378e08a88a294" translate="yes" xml:space="preserve">
          <source>AttributeMethods#attribute_missing</source>
          <target state="translated">AttributeMethods#attribute_missing</target>
        </trans-unit>
        <trans-unit id="571b3f26f91f08044caf599c3ddc0b6906c81d82" translate="yes" xml:space="preserve">
          <source>AttributeMethods#method_missing</source>
          <target state="translated">AttributeMethods#method_missing</target>
        </trans-unit>
        <trans-unit id="ef9afb01b89c255126253d60ec6d973d29c1dcb9" translate="yes" xml:space="preserve">
          <source>AttributeMethods#respond_to?</source>
          <target state="translated">AttributeMethods#respond_to?</target>
        </trans-unit>
        <trans-unit id="61928b454fd5f05fafa5a648b22b514335d93cd8" translate="yes" xml:space="preserve">
          <source>AttributeMethods#respond_to_without_attributes?</source>
          <target state="translated">AttributeMethods#respond_to_without_attributes?</target>
        </trans-unit>
        <trans-unit id="085646afade2a3a196129e97ba8a72d29cfbf208" translate="yes" xml:space="preserve">
          <source>AttributeMethods::ClassMethods</source>
          <target state="translated">AttributeMethods::ClassMethods</target>
        </trans-unit>
        <trans-unit id="9a34bdf8fed2fb0fe2a3e5712779520845bdc726" translate="yes" xml:space="preserve">
          <source>AttributeMethods::ClassMethods#alias_attribute</source>
          <target state="translated">AttributeMethods::ClassMethods#alias_attribute</target>
        </trans-unit>
        <trans-unit id="400740a178000992adf086f138b8cdbf506770cd" translate="yes" xml:space="preserve">
          <source>AttributeMethods::ClassMethods#attribute_alias</source>
          <target state="translated">AttributeMethods::ClassMethods#attribute_alias</target>
        </trans-unit>
        <trans-unit id="fe6ddf02285147e25e9a6e4165eab5d85bdecf6e" translate="yes" xml:space="preserve">
          <source>AttributeMethods::ClassMethods#attribute_alias?</source>
          <target state="translated">AttributeMethods::ClassMethods#attribute_alias?</target>
        </trans-unit>
        <trans-unit id="779108de3a1241ec5ed29ac863cfa0e4406d9e58" translate="yes" xml:space="preserve">
          <source>AttributeMethods::ClassMethods#attribute_method_affix</source>
          <target state="translated">AttributeMethods::ClassMethods#attribute_method_affix</target>
        </trans-unit>
        <trans-unit id="06ca2e29e4bfa7cb581ea72192728464066de9fc" translate="yes" xml:space="preserve">
          <source>AttributeMethods::ClassMethods#attribute_method_prefix</source>
          <target state="translated">AttributeMethods::ClassMethods#attribute_method_prefix</target>
        </trans-unit>
        <trans-unit id="f86f6c8aeff4b4907d0eb427df428d12abb02079" translate="yes" xml:space="preserve">
          <source>AttributeMethods::ClassMethods#attribute_method_suffix</source>
          <target state="translated">AttributeMethods::ClassMethods#attribute_method_suffix</target>
        </trans-unit>
        <trans-unit id="0970249a112289f368e6e2b45a81fafb93a62ac2" translate="yes" xml:space="preserve">
          <source>AttributeMethods::ClassMethods#define_attribute_method</source>
          <target state="translated">AttributeMethods::ClassMethods#define_attribute_method</target>
        </trans-unit>
        <trans-unit id="ad6ba241b39e5542e0aea449a1e8b5452c21eab1" translate="yes" xml:space="preserve">
          <source>AttributeMethods::ClassMethods#define_attribute_methods</source>
          <target state="translated">AttributeMethods::ClassMethods#define_attribute_methods</target>
        </trans-unit>
        <trans-unit id="201f1394867fc3f3f97cdc7b9bd7e03704a4c646" translate="yes" xml:space="preserve">
          <source>AttributeMethods::ClassMethods#undefine_attribute_methods</source>
          <target state="translated">AttributeMethods::ClassMethods#undefine_attribute_methods</target>
        </trans-unit>
        <trans-unit id="a6652617f2c799eb11ee727b16c5646c48af6905" translate="yes" xml:space="preserve">
          <source>Attributes</source>
          <target state="translated">Attributes</target>
        </trans-unit>
        <trans-unit id="3593917c9e4cf99993e91196dd29a880770166ba" translate="yes" xml:space="preserve">
          <source>Attributes do not need to be backed by a database column.</source>
          <target state="translated">属性不需要由数据库列来支持。</target>
        </trans-unit>
        <trans-unit id="b5030566c4a5d4475e181733a9d1060532fadedd" translate="yes" xml:space="preserve">
          <source>Attributes::ClassMethods</source>
          <target state="translated">Attributes::ClassMethods</target>
        </trans-unit>
        <trans-unit id="5bad13a55b52cfdb36cfd597c6a30e2479335526" translate="yes" xml:space="preserve">
          <source>Attributes::ClassMethods#attribute</source>
          <target state="translated">Attributes::ClassMethods#attribute</target>
        </trans-unit>
        <trans-unit id="328d1f8f2a6a0f286b557039958c5e06206b83cc" translate="yes" xml:space="preserve">
          <source>Attributes::ClassMethods#attribute_names</source>
          <target state="translated">Attributes::ClassMethods#attribute_names</target>
        </trans-unit>
        <trans-unit id="ed8ac3130c59cf8e6aa53a8cb117a1d0b8ee860e" translate="yes" xml:space="preserve">
          <source>Authenticate with HTTP &lt;a href=&quot;../digest&quot;&gt;&lt;code&gt;Digest&lt;/code&gt;&lt;/a&gt;, returns true or false</source>
          <target state="translated">使用HTTP &lt;a href=&quot;../digest&quot;&gt; &lt;code&gt;Digest&lt;/code&gt; 进行&lt;/a&gt;身份验证，返回true或false</target>
        </trans-unit>
        <trans-unit id="1c25f8e5d94b88e80b5316dcaee6232b577ae824" translate="yes" xml:space="preserve">
          <source>Authenticate with HTTP &lt;a href=&quot;../digest&quot;&gt;Digest&lt;/a&gt;, returns true or false</source>
          <target state="translated">使用HTTP &lt;a href=&quot;../digest&quot;&gt;Digest进行&lt;/a&gt;身份验证，返回true或false</target>
        </trans-unit>
        <trans-unit id="499c0a6ae500684ed58292397bb780f01eb3db11" translate="yes" xml:space="preserve">
          <source>Authenticates requests by validating their signatures.</source>
          <target state="translated">通过验证签名来验证请求。</target>
        </trans-unit>
        <trans-unit id="681ee1dfde38a5c5a6126303263b1e73e91d59a7" translate="yes" xml:space="preserve">
          <source>Authenticates requests using HTTP basic access authentication. The username is always &lt;code&gt;actionmailbox&lt;/code&gt;, and the password is read from the application's encrypted credentials or an environment variable. See the Usage section below.</source>
          <target state="translated">使用HTTP基本访问身份验证对请求进行身份验证。用户名始终为 &lt;code&gt;actionmailbox&lt;/code&gt; ，密码是从应用程序的加密凭据或环境变量中读取的。请参阅下面的用法部分。</target>
        </trans-unit>
        <trans-unit id="d2a52548bd0852b99153ddd79a1f550f70674c7d" translate="yes" xml:space="preserve">
          <source>Authors</source>
          <target state="translated">Authors</target>
        </trans-unit>
        <trans-unit id="66eda6c9340afc8890a555b3acc498d5102b0fee" translate="yes" xml:space="preserve">
          <source>Auto encoding header values</source>
          <target state="translated">自动编码头值</target>
        </trans-unit>
        <trans-unit id="6d742219a1916d7ea572270128c90d11e1124659" translate="yes" xml:space="preserve">
          <source>Auto-generated methods</source>
          <target state="translated">自动生成的方法</target>
        </trans-unit>
        <trans-unit id="ea04e081022a840b9a4961637f619588f136770b" translate="yes" xml:space="preserve">
          <source>Autofilled &lt;a href=&quot;timestamp&quot;&gt;&lt;code&gt;Timestamp&lt;/code&gt;&lt;/a&gt; Columns</source>
          <target state="translated">自动填充的&lt;a href=&quot;timestamp&quot;&gt; &lt;code&gt;Timestamp&lt;/code&gt; &lt;/a&gt;列</target>
        </trans-unit>
        <trans-unit id="ff61b24e9bd2730acaf8369ffb6afbc18881f156" translate="yes" xml:space="preserve">
          <source>Autofilled &lt;a href=&quot;timestamp&quot;&gt;Timestamp&lt;/a&gt; Columns</source>
          <target state="translated">自动填充的&lt;a href=&quot;timestamp&quot;&gt;时间戳&lt;/a&gt;列</target>
        </trans-unit>
        <trans-unit id="93f6173a5f6c7a618f6c18ee2ec81361e57509cb" translate="yes" xml:space="preserve">
          <source>Autofilled timestamp columns</source>
          <target state="translated">自动填写时间戳栏</target>
        </trans-unit>
        <trans-unit id="c2e779e790c1d4dc28d4326306803dbf362b481e" translate="yes" xml:space="preserve">
          <source>Autoload</source>
          <target state="translated">Autoload</target>
        </trans-unit>
        <trans-unit id="976d01b8c7c0081171dd2364b5d49206d3ed9e8e" translate="yes" xml:space="preserve">
          <source>Autoload Paths</source>
          <target state="translated">自动加载路径</target>
        </trans-unit>
        <trans-unit id="a7d41bda6667e2eac5b9610fa36e07e48224a25e" translate="yes" xml:space="preserve">
          <source>Autoload paths</source>
          <target state="translated">自动加载路径</target>
        </trans-unit>
        <trans-unit id="4187092df21ebb5653e311705908daa20517e5e6" translate="yes" xml:space="preserve">
          <source>Autoload paths are added to &lt;code&gt;$LOAD_PATH&lt;/code&gt; by default. However, Zeitwerk uses absolute file names internally, and your application should not issue &lt;code&gt;require&lt;/code&gt; calls for autoloadable files, so those directories are actually not needed there. You can opt-out with this flag:</source>
          <target state="translated">默认情况下，自动加载路径会添加到 &lt;code&gt;$LOAD_PATH&lt;/code&gt; 。但是，Zeitwerk在内部使用绝对文件名，因此您的应用程序不应对可自动加载的文件发出 &lt;code&gt;require&lt;/code&gt; 调用，因此实际上并不需要这些目录。您可以选择退出此标志：</target>
        </trans-unit>
        <trans-unit id="44bfe76c8f9b7161e179ace1145449892b50b026" translate="yes" xml:space="preserve">
          <source>Autoload paths are called &lt;em&gt;root directories&lt;/em&gt; in Zeitwerk documentation, but we'll stay with &quot;autoload path&quot; in this guide.</source>
          <target state="translated">自动加载路径在Zeitwerk文档中称为&lt;em&gt;根目录&lt;/em&gt;，但在本指南中我们将继续使用&amp;ldquo;自动加载路径&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="5778fbadfdcce5526c3994f39a87ec543c2e3537" translate="yes" xml:space="preserve">
          <source>Autoload paths automatically pick any custom directories under &lt;code&gt;app&lt;/code&gt;. For example, if your application has &lt;code&gt;app/presenters&lt;/code&gt;, or &lt;code&gt;app/services&lt;/code&gt;, etc., they are added to autoload paths.</source>
          <target state="translated">自动加载路径会自动选择 &lt;code&gt;app&lt;/code&gt; 下的所有自定义目录。例如，如果您的应用程序具有 &lt;code&gt;app/presenters&lt;/code&gt; 或 &lt;code&gt;app/services&lt;/code&gt; 等，它们将被添加到自动加载路径。</target>
        </trans-unit>
        <trans-unit id="34d7646dfb584221400e8c5a9ac37977b0a0e74e" translate="yes" xml:space="preserve">
          <source>Autoload#autoload</source>
          <target state="translated">Autoload#autoload</target>
        </trans-unit>
        <trans-unit id="f0aab6fc398db2e5e92d777b5f75c5b337155d05" translate="yes" xml:space="preserve">
          <source>Autoload#autoload_at</source>
          <target state="translated">Autoload#autoload_at</target>
        </trans-unit>
        <trans-unit id="aa0101c19439d3b82ed342209e3f01d0146fee34" translate="yes" xml:space="preserve">
          <source>Autoload#autoload_under</source>
          <target state="translated">Autoload#autoload_under</target>
        </trans-unit>
        <trans-unit id="14087a65cc1e3dc403050da222f6dc0c48634df8" translate="yes" xml:space="preserve">
          <source>Autoload#autoloads</source>
          <target state="translated">Autoload#autoloads</target>
        </trans-unit>
        <trans-unit id="d3b8774067ff67daa030fd5b1844925877ca31bf" translate="yes" xml:space="preserve">
          <source>Autoload#eager_autoload</source>
          <target state="translated">Autoload#eager_autoload</target>
        </trans-unit>
        <trans-unit id="476d5ddab22d6728a0454a78c45bac394a6cb28b" translate="yes" xml:space="preserve">
          <source>Autoload#eager_load!</source>
          <target state="translated">Autoload#eager_load!</target>
        </trans-unit>
        <trans-unit id="3fa81ba949fafdad4688aed6d9380f82976ca9d7" translate="yes" xml:space="preserve">
          <source>Autoloading</source>
          <target state="translated">Autoloading</target>
        </trans-unit>
        <trans-unit id="7eb2f782a52a6a44926887186eaa3366d0559231" translate="yes" xml:space="preserve">
          <source>Autoloading &lt;code&gt;ApplicationController&lt;/code&gt; looks directly under the directories of &lt;code&gt;autoload_paths&lt;/code&gt; because the nesting in that spot is empty. The situation of &lt;code&gt;Post&lt;/code&gt; is different, the nesting in that line is &lt;code&gt;[PostsController]&lt;/code&gt; and support for namespaces comes into play.</source>
          <target state="translated">自动加载 &lt;code&gt;ApplicationController&lt;/code&gt; 直接在 &lt;code&gt;autoload_paths&lt;/code&gt; 目录下查找，因为该位置的嵌套为空。 &lt;code&gt;Post&lt;/code&gt; 的情况有所不同，该行中的嵌套是 &lt;code&gt;[PostsController]&lt;/code&gt; ,并且开始支持名称空间。</target>
        </trans-unit>
        <trans-unit id="6b46259d25a99931ef4429cb20b0b0dd80202338" translate="yes" xml:space="preserve">
          <source>Autoloading Algorithms</source>
          <target state="translated">自动加载算法</target>
        </trans-unit>
        <trans-unit id="a174db4cf6fb7bfefa81636d26be1e7cda7daf2e" translate="yes" xml:space="preserve">
          <source>Autoloading Availability</source>
          <target state="translated">自动加载可用性</target>
        </trans-unit>
        <trans-unit id="2992ae7235d9b4f9cb6da0e81721d9192afe7fd8" translate="yes" xml:space="preserve">
          <source>Autoloading and &lt;code&gt;require&lt;/code&gt;</source>
          <target state="translated">自动加载并 &lt;code&gt;require&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a722403584f07efd8ce02703bdf7a4024c3dc464" translate="yes" xml:space="preserve">
          <source>Autoloading and Initializers</source>
          <target state="translated">自动加载和初始化器</target>
        </trans-unit>
        <trans-unit id="dd4cbc97fe810120bacd6972e92725e0307f7f44" translate="yes" xml:space="preserve">
          <source>Autoloading and Reloading Constants</source>
          <target state="translated">自动加载和重新加载常数</target>
        </trans-unit>
        <trans-unit id="1ebf8c64997fd1ab5fb993060eec87b7963e0413" translate="yes" xml:space="preserve">
          <source>Autoloading and Reloading Constants (Classic Mode)</source>
          <target state="translated">自动加载和重新加载常数(经典模式)。</target>
        </trans-unit>
        <trans-unit id="a36dae2c36591f19e018498888df9b217b238c7c" translate="yes" xml:space="preserve">
          <source>Autoloading and Reloading Constants (Zeitwerk Mode)</source>
          <target state="translated">自动加载和重新加载常数(Zeitwerk模式)</target>
        </trans-unit>
        <trans-unit id="89fb506b62afb863c31998a41bd7850ea8aef782" translate="yes" xml:space="preserve">
          <source>Autoloading and STI</source>
          <target state="translated">自动加载和科技创新</target>
        </trans-unit>
        <trans-unit id="4018c02c540f32a63769cbd886fb3221512fce9e" translate="yes" xml:space="preserve">
          <source>Autoloading in &lt;code&gt;BasicObject&lt;/code&gt;</source>
          <target state="translated">在 &lt;code&gt;BasicObject&lt;/code&gt; 中自动加载</target>
        </trans-unit>
        <trans-unit id="e9f7cf7cbd47bfbe4ad35280f16fc02f2bed49f1" translate="yes" xml:space="preserve">
          <source>Autoloading in the Test Environment</source>
          <target state="translated">测试环境中的自动加载</target>
        </trans-unit>
        <trans-unit id="7cd9577824fac1b217392adae4e1dba3b6a3b3a2" translate="yes" xml:space="preserve">
          <source>Autoloading is Disabled After Booting in the Production Environment</source>
          <target state="translated">在生产环境中启动后,自动加载被禁用。</target>
        </trans-unit>
        <trans-unit id="4415cd33e743b5524681160460fa571940c150f3" translate="yes" xml:space="preserve">
          <source>Autoloading is now disabled after booting in the production environment by default.</source>
          <target state="translated">在生产环境中启动后,自动加载现在默认为禁用。</target>
        </trans-unit>
        <trans-unit id="f33512af71b53d9f24d0a1199e4aed7e114adc56" translate="yes" xml:space="preserve">
          <source>Autoloading keeps track of autoloaded constants. Reloading is implemented by removing them all from their respective classes and modules using &lt;code&gt;Module#remove_const&lt;/code&gt;. That way, when the code goes on, those constants are going to be unknown again, and files reloaded on demand.</source>
          <target state="translated">自动加载跟踪自动加载的常量。通过使用 &lt;code&gt;Module#remove_const&lt;/code&gt; 将它们全部从各自的类和模块中删除，可以实现重新加载。这样，当代码继续执行时，这些常数将再次变得未知，并且文件将按需重新加载。</target>
        </trans-unit>
        <trans-unit id="25204c9db7f68110bc30240bbedadb04680e2194" translate="yes" xml:space="preserve">
          <source>Autoloading modes</source>
          <target state="translated">自动加载模式</target>
        </trans-unit>
        <trans-unit id="8be881438739aa39d43140edd102b8f089145a3a" translate="yes" xml:space="preserve">
          <source>Autoloading when the application boots</source>
          <target state="translated">应用程序启动时自动加载</target>
        </trans-unit>
        <trans-unit id="a5ac554c50bb070398899db8d39aa9a9113fcd75" translate="yes" xml:space="preserve">
          <source>Autoloading within Singleton Classes</source>
          <target state="translated">在Singleton类中自动加载</target>
        </trans-unit>
        <trans-unit id="562d6a16180d0ad35edaf5718c6447fcce4c58d7" translate="yes" xml:space="preserve">
          <source>Autoloading, reloading, and eager loading</source>
          <target state="translated">自动装填、重新装填和急切装填。</target>
        </trans-unit>
        <trans-unit id="e04696079e7df7626b6d5f756a2134238ddcfcaf" translate="yes" xml:space="preserve">
          <source>Automatic Concurrency</source>
          <target state="translated">自动并发</target>
        </trans-unit>
        <trans-unit id="2054994a61a34a725170e5ba7eb90b59c833cad5" translate="yes" xml:space="preserve">
          <source>Automatic Modules</source>
          <target state="translated">自动模块</target>
        </trans-unit>
        <trans-unit id="564b362bcda882d81d1936d5c12b3c5c0b5e7572" translate="yes" xml:space="preserve">
          <source>Automatic connection switching for the model you're working with</source>
          <target state="translated">自动切换您正在使用的模型的连接。</target>
        </trans-unit>
        <trans-unit id="5380f670ada2102805ff57e5a550cbf3d9a200ad" translate="yes" xml:space="preserve">
          <source>Automatic conversion to HTML safe translate text is only available from the &lt;code&gt;translate&lt;/code&gt; view helper method.</source>
          <target state="translated">自动转换为HTML安全转换文本仅可从 &lt;code&gt;translate&lt;/code&gt; 视图帮助器方法中获得。</target>
        </trans-unit>
        <trans-unit id="fffce4ccaf2382b77835e4d14cce41f0faf1e777" translate="yes" xml:space="preserve">
          <source>Automatic deletion of join models is direct, no destroy callbacks are triggered.</source>
          <target state="translated">直接自动删除加入模型,不触发销毁回调。</target>
        </trans-unit>
        <trans-unit id="3616e41a4f97ade3651233c28c0989523241d066" translate="yes" xml:space="preserve">
          <source>Automatic disabling</source>
          <target state="translated">自动停用</target>
        </trans-unit>
        <trans-unit id="bd6f19d17a1faadd4e5ff75d64c7137453e02d39" translate="yes" xml:space="preserve">
          <source>Automatic swapping between the primary and replica depending on the HTTP verb and recent writes</source>
          <target state="translated">根据HTTP动词和最近的写入情况,自动在主数据和副本之间进行交换。</target>
        </trans-unit>
        <trans-unit id="b343b22e2db6479f95b86a2c37a0afa3578e00af" translate="yes" xml:space="preserve">
          <source>Automatic swapping between the writer and replica depending on the HTTP verb and recent writes</source>
          <target state="translated">根据HTTP动词和最近的写入情况,自动在写入者和复制者之间进行交换。</target>
        </trans-unit>
        <trans-unit id="e4b79b674e33666349f1874120137a56a543e8e7" translate="yes" xml:space="preserve">
          <source>Automatic swapping for horizontal sharding</source>
          <target state="translated">自动交换水平分片</target>
        </trans-unit>
        <trans-unit id="c1db44ed6812cdd876dd4a25aef67afda835d700" translate="yes" xml:space="preserve">
          <source>Automatic switching allows the application to switch from the primary to replica or replica to primary based on the HTTP verb and whether there was a recent write.</source>
          <target state="translated">自动切换允许应用程序根据HTTP动词和最近是否有写,从主服务器切换到副本或副本到主服务器。</target>
        </trans-unit>
        <trans-unit id="f27361a10aa12e6c8be05fd77ff538375f3f3367" translate="yes" xml:space="preserve">
          <source>Automatic switching allows the application to switch from the writer to replica or replica to writer based on the HTTP verb and whether there was a recent write.</source>
          <target state="translated">自动切换允许应用程序根据HTTP动词和最近是否有写入,从写入器切换到复制器或复制器到写入器。</target>
        </trans-unit>
        <trans-unit id="c90e6c8d1a84feb4f78e747c0c0d811c5cadd1b8" translate="yes" xml:space="preserve">
          <source>Automatic translation scoping by partial is only available from the &lt;code&gt;translate&lt;/code&gt; view helper method.</source>
          <target state="translated">仅通过&amp;ldquo; &lt;code&gt;translate&lt;/code&gt; 视图帮助器&amp;rdquo;方法可以使用按部分自动翻译作用域。</target>
        </trans-unit>
        <trans-unit id="32ce27fbf195ec2e139ebc10751a2013fcdfffca" translate="yes" xml:space="preserve">
          <source>Available Assertions</source>
          <target state="translated">可用的断言</target>
        </trans-unit>
        <trans-unit id="9f73d5afeacc68e362bb63f9bbe84c084bec644b" translate="yes" xml:space="preserve">
          <source>Available Callbacks</source>
          <target state="translated">可用回调</target>
        </trans-unit>
        <trans-unit id="0c4dd9f352feec23703acfe4789c5912451509c7" translate="yes" xml:space="preserve">
          <source>Available Configuration Hooks</source>
          <target state="translated">可用的配置钩子</target>
        </trans-unit>
        <trans-unit id="3b2fdd97a32809830b6fd0048316a7f1bf86fea4" translate="yes" xml:space="preserve">
          <source>Available Hooks</source>
          <target state="translated">可用钩子</target>
        </trans-unit>
        <trans-unit id="4bfefa887bf599d997e3ef85c7d4c684e2f959bf" translate="yes" xml:space="preserve">
          <source>Available Load Hooks</source>
          <target state="translated">可用的吊钩</target>
        </trans-unit>
        <trans-unit id="51b4f34cf294112f56388fbf398c1adcb83fd76d" translate="yes" xml:space="preserve">
          <source>Available Request Types for Functional Tests</source>
          <target state="translated">功能测试的请求类型</target>
        </trans-unit>
        <trans-unit id="36af02284187018311542e1342b5f89d0ae67c03" translate="yes" xml:space="preserve">
          <source>Available behaviors:</source>
          <target state="translated">可用的行为。</target>
        </trans-unit>
        <trans-unit id="7da4c36a54ae7a349bf4428686c3741afe2a7fa3" translate="yes" xml:space="preserve">
          <source>Available callbacks</source>
          <target state="translated">可用回调</target>
        </trans-unit>
        <trans-unit id="2f7899655285d735a9395d321f4c1c351403478b" translate="yes" xml:space="preserve">
          <source>Available options are (none of these exists by default):</source>
          <target state="translated">可用的选项有(默认情况下不存在这些选项)。</target>
        </trans-unit>
        <trans-unit id="a5325c58f3190f03981f3d4b6e263a0fcae8b5bc" translate="yes" xml:space="preserve">
          <source>Available options are:</source>
          <target state="translated">可用的选项有:</target>
        </trans-unit>
        <trans-unit id="16bc214f55aca2e186451b1063742b5e7d1c0d60" translate="yes" xml:space="preserve">
          <source>Available so that &lt;a href=&quot;timezone&quot;&gt;&lt;code&gt;TimeZone&lt;/code&gt;&lt;/a&gt; instances respond like TZInfo::Timezone instances.</source>
          <target state="translated">可用，以便&lt;a href=&quot;timezone&quot;&gt; &lt;code&gt;TimeZone&lt;/code&gt; &lt;/a&gt;实例像TZInfo :: Timezone实例一样响应。</target>
        </trans-unit>
        <trans-unit id="f9aa5f6262d2afb5b1051cad712d719b7b837433" translate="yes" xml:space="preserve">
          <source>Available so that &lt;a href=&quot;timezone&quot;&gt;TimeZone&lt;/a&gt; instances respond like TZInfo::Timezone instances.</source>
          <target state="translated">可用，以便&lt;a href=&quot;timezone&quot;&gt;TimeZone&lt;/a&gt;实例像TZInfo :: Timezone实例一样响应。</target>
        </trans-unit>
        <trans-unit id="8c69fad5dcb600f5296509eb398388d406d7a59b" translate="yes" xml:space="preserve">
          <source>Available transformations</source>
          <target state="translated">可用的转换</target>
        </trans-unit>
        <trans-unit id="78cb2598327e5eb1d8f02ad1fa42087d1cb42048" translate="yes" xml:space="preserve">
          <source>Available transformations are:</source>
          <target state="translated">可用的转换有:</target>
        </trans-unit>
        <trans-unit id="15f86c051ecf0b64e5f8cdc8c689552f42595942" translate="yes" xml:space="preserve">
          <source>Average</source>
          <target state="translated">Average</target>
        </trans-unit>
        <trans-unit id="afaec9bd052e633fb3f59594afd22101e69c6859" translate="yes" xml:space="preserve">
          <source>Avoid N+1 queries</source>
          <target state="translated">避免N+1次查询</target>
        </trans-unit>
        <trans-unit id="3d2b349b0651876505c2b42b8c65b9625cad4489" translate="yes" xml:space="preserve">
          <source>Avoid loading Rails Frameworks</source>
          <target state="translated">避免加载Rails框架</target>
        </trans-unit>
        <trans-unit id="c34b3a58cbbc2881b6cd091bf62f0f9ec0fc2cf4" translate="yes" xml:space="preserve">
          <source>Avoid loading Rails frameworks with Load and Configuration Hooks</source>
          <target state="translated">避免使用加载和配置钩子加载Rails框架。</target>
        </trans-unit>
        <trans-unit id="642182c393722575f3adbbcf890bd3ee42b01561" translate="yes" xml:space="preserve">
          <source>Avoid processing previews synchronously in views. Instead, link to a controller action that processes them on demand. Active Storage provides one, but you may want to create your own (for example, if you need authentication). Here&amp;rsquo;s how to use the built-in version:</source>
          <target state="translated">避免在视图中同步处理预览。而是链接到按需处理它们的控制器操作。Active Storage提供了一种，但是您可能要创建自己的（例如，如果需要身份验证）。这是使用内置版本的方法：</target>
        </trans-unit>
        <trans-unit id="26f8d8968d57841685d22ee1c212b2fc7f6e8260" translate="yes" xml:space="preserve">
          <source>Avoid updating or saving attributes in callbacks. For example, don't call &lt;code&gt;update(attribute: &quot;value&quot;)&lt;/code&gt; within a callback. This can alter the state of the model and may result in unexpected side effects during commit. Instead, you can safely assign values directly (for example, &lt;code&gt;self.attribute = &quot;value&quot;&lt;/code&gt;) in &lt;code&gt;before_create&lt;/code&gt; / &lt;code&gt;before_update&lt;/code&gt; or earlier callbacks.</source>
          <target state="translated">避免在回调中更新或保存属性。例如，不要在回调中调用 &lt;code&gt;update(attribute: &quot;value&quot;)&lt;/code&gt; 。这可能会更改模型的状态，并可能在提交期间导致意外的副作用。相反，您可以在 &lt;code&gt;before_create&lt;/code&gt; / &lt;code&gt;before_update&lt;/code&gt; 或更早的回调中安全地直接分配值（例如 &lt;code&gt;self.attribute = &quot;value&quot;&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="c387fd31de75a58d0b8bf5c46d8589635ed174fd" translate="yes" xml:space="preserve">
          <source>Avoiding Name Collisions</source>
          <target state="translated">避免名称冲突</target>
        </trans-unit>
        <trans-unit id="9ff3c65b4ff1c7c91d3f9100694c630bd5914457" translate="yes" xml:space="preserve">
          <source>Avoiding name collisions</source>
          <target state="translated">避免名称冲突</target>
        </trans-unit>
        <trans-unit id="12fd3c591f58ceb79de737a85c034595413e536e" translate="yes" xml:space="preserve">
          <source>Awkward, right? We could pull the function definition out of the click handler, and turn it a function:</source>
          <target state="translated">尴尬吧?我们可以把函数定义从点击处理程序中抽出来,然后把它变成一个函数。</target>
        </trans-unit>
        <trans-unit id="673463e69a25accb3c683fd49bec899923c12309" translate="yes" xml:space="preserve">
          <source>Awkward, right? We could pull the function definition out of the click handler, and turn it into CoffeeScript:</source>
          <target state="translated">尴尬吧?我们可以将函数定义从点击处理程序中提取出来,并将其转化为CoffeeScript。</target>
        </trans-unit>
        <trans-unit id="8be047249054a549905610e33f85dfa07d51c1e5" translate="yes" xml:space="preserve">
          <source>Azure Storage</source>
          <target state="translated">Azure存储</target>
        </trans-unit>
        <trans-unit id="10f92cffcf1fc3e4eaff53ef13abff56cc63453e" translate="yes" xml:space="preserve">
          <source>BASE36_ALPHABET</source>
          <target state="translated">BASE36_ALPHABET</target>
        </trans-unit>
        <trans-unit id="4e49107074d61735f9f5ca6499b3ee753b534435" translate="yes" xml:space="preserve">
          <source>BASE58_ALPHABET</source>
          <target state="translated">BASE58_ALPHABET</target>
        </trans-unit>
        <trans-unit id="062a1f98ddb38e836c564b72119a3db1e8ff832e" translate="yes" xml:space="preserve">
          <source>BCC addresses of the mail</source>
          <target state="translated">邮件的BCC地址</target>
        </trans-unit>
        <trans-unit id="16512b6a8848e5ffed5954f0d247e95c9db877f5" translate="yes" xml:space="preserve">
          <source>BCrypt hash function can handle maximum 72 bytes, and if we pass password of length more than 72 bytes it ignores extra characters. Hence need to put a restriction on password length.</source>
          <target state="translated">BCrypt哈希函数最多可以处理72字节,如果我们传递的密码长度超过72字节,它就会忽略额外的字符。因此需要对密码的长度进行限制。</target>
        </trans-unit>
        <trans-unit id="a9414ab04c2bdab21e6b6d136628a187e0dfaa4c" translate="yes" xml:space="preserve">
          <source>BLACK</source>
          <target state="translated">BLACK</target>
        </trans-unit>
        <trans-unit id="6fa32eb0aecb85330ce033e004ee7885d149cd60" translate="yes" xml:space="preserve">
          <source>BLANK_RE</source>
          <target state="translated">BLANK_RE</target>
        </trans-unit>
        <trans-unit id="c4f8490d87d22bb11f7e9b82a4a72913b3d84d06" translate="yes" xml:space="preserve">
          <source>BLUE</source>
          <target state="translated">BLUE</target>
        </trans-unit>
        <trans-unit id="7f5468283ffb5e8bbed87d8fba2648d355d1d029" translate="yes" xml:space="preserve">
          <source>BOLD</source>
          <target state="translated">BOLD</target>
        </trans-unit>
        <trans-unit id="b95d5d0fd82e817510e17b67e4dff4aa9a5ce753" translate="yes" xml:space="preserve">
          <source>BOOLEAN_ATTRIBUTES</source>
          <target state="translated">BOOLEAN_ATTRIBUTES</target>
        </trans-unit>
        <trans-unit id="27b5046463060aaa74714a515614d734e3c6f049" translate="yes" xml:space="preserve">
          <source>BROWSER_LIKE_ACCEPTS</source>
          <target state="translated">BROWSER_LIKE_ACCEPTS</target>
        </trans-unit>
        <trans-unit id="5964fab5c3386b4e4eb9864a5b4ca0a9b4ff3223" translate="yes" xml:space="preserve">
          <source>BUTTON_TAG_METHOD_VERBS</source>
          <target state="translated">BUTTON_TAG_METHOD_VERBS</target>
        </trans-unit>
        <trans-unit id="cf236754d646f6b76a99ee847de9bc7a2116f061" translate="yes" xml:space="preserve">
          <source>Back in &lt;code&gt;ArticlesController&lt;/code&gt;, we need to change the &lt;code&gt;create&lt;/code&gt; action to use the new &lt;code&gt;Article&lt;/code&gt; model to save the data in the database. Open &lt;code&gt;app/controllers/articles_controller.rb&lt;/code&gt; and change the &lt;code&gt;create&lt;/code&gt; action to look like this:</source>
          <target state="translated">回到 &lt;code&gt;ArticlesController&lt;/code&gt; ，我们需要更改 &lt;code&gt;create&lt;/code&gt; 动作以使用新的 &lt;code&gt;Article&lt;/code&gt; 模型将数据保存在数据库中。打开 &lt;code&gt;app/controllers/articles_controller.rb&lt;/code&gt; 并更改 &lt;code&gt;create&lt;/code&gt; 动作，如下所示：</target>
        </trans-unit>
        <trans-unit id="b83119198e033dfab17f972ab6fcf3182966a684" translate="yes" xml:space="preserve">
          <source>Back to &lt;code&gt;config/environment.rb&lt;/code&gt;</source>
          <target state="translated">返回 &lt;code&gt;config/environment.rb&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="81c871ed1924278a5daf0383a5034b99b3e89927" translate="yes" xml:space="preserve">
          <source>Backburner</source>
          <target state="translated">Backburner</target>
        </trans-unit>
        <trans-unit id="34f110511fb75cb9a439e457bbbe43821e046099" translate="yes" xml:space="preserve">
          <source>Backburner adapter for Active Job</source>
          <target state="translated">主动任务的Backburner适配器</target>
        </trans-unit>
        <trans-unit id="534054bdb32a57cede7122e7b6fdce61148ed216" translate="yes" xml:space="preserve">
          <source>Backburner is a beanstalkd-powered job queue that can handle a very high volume of jobs. You create background jobs and place them on multiple work queues to be processed later. Read more about Backburner &lt;a href=&quot;https://github.com/nesquena/backburner&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">Backburner是由beantalkd驱动的作业队列，可以处理非常大量的作业。您创建后台作业，并将其放置在多个工作队列中，以便稍后处理。&lt;a href=&quot;https://github.com/nesquena/backburner&quot;&gt;在此处&lt;/a&gt;阅读有关Backburner的更多信息。</target>
        </trans-unit>
        <trans-unit id="b3776d63ad7b7a84bfe20d9c6d4a53a2b25d0e43" translate="yes" xml:space="preserve">
          <source>Backends</source>
          <target state="translated">Backends</target>
        </trans-unit>
        <trans-unit id="4f01b201bfc2cd6d3d886e183749d3c60bea57aa" translate="yes" xml:space="preserve">
          <source>Backends Features</source>
          <target state="translated">后台功能</target>
        </trans-unit>
        <trans-unit id="907c3be6b0ec77e15554c5638d2db70ea8c0e315" translate="yes" xml:space="preserve">
          <source>BacktraceCleaner</source>
          <target state="translated">BacktraceCleaner</target>
        </trans-unit>
        <trans-unit id="1061f74e6b6d0a0c577fe219b37379861e2dad3c" translate="yes" xml:space="preserve">
          <source>BacktraceCleaner#add_filter</source>
          <target state="translated">BacktraceCleaner#add_filter</target>
        </trans-unit>
        <trans-unit id="fa87a5ba9f02bf91d23b5f58c92f1b3c2c556f09" translate="yes" xml:space="preserve">
          <source>BacktraceCleaner#add_silencer</source>
          <target state="translated">BacktraceCleaner#add_silencer</target>
        </trans-unit>
        <trans-unit id="4451f25c6ec3c4c761978ae68fe9288aaee3ec08" translate="yes" xml:space="preserve">
          <source>BacktraceCleaner#clean</source>
          <target state="translated">BacktraceCleaner#clean</target>
        </trans-unit>
        <trans-unit id="7afd58c1e8b3c18d9fc32fb462e4f55078c5973a" translate="yes" xml:space="preserve">
          <source>BacktraceCleaner#filter</source>
          <target state="translated">BacktraceCleaner#filter</target>
        </trans-unit>
        <trans-unit id="1c04cd47389cf5efd3831611a1e77e12c438d5e5" translate="yes" xml:space="preserve">
          <source>BacktraceCleaner#remove_filters!</source>
          <target state="translated">BacktraceCleaner#remove_filters!</target>
        </trans-unit>
        <trans-unit id="15b57b82ccebad1b6a62ab2b49a9baf93742ad1b" translate="yes" xml:space="preserve">
          <source>BacktraceCleaner#remove_silencers!</source>
          <target state="translated">BacktraceCleaner#remove_silencers!</target>
        </trans-unit>
        <trans-unit id="20da332a8ebcaaedb283b4a9865d80f3d8811676" translate="yes" xml:space="preserve">
          <source>BacktraceCleaner::new</source>
          <target state="translated">BacktraceCleaner::new</target>
        </trans-unit>
        <trans-unit id="5b42ac3bacb1386ed8645492df2282d773f15933" translate="yes" xml:space="preserve">
          <source>Backtraces often include many lines that are not relevant for the context under review. This makes it hard to find the signal amongst the backtrace noise, and adds debugging time. With a &lt;a href=&quot;backtracecleaner&quot;&gt;&lt;code&gt;BacktraceCleaner&lt;/code&gt;&lt;/a&gt;, filters and silencers are used to remove the noisy lines, so that only the most relevant lines remain.</source>
          <target state="translated">回溯通常包含许多与所检查的上下文无关的行。这使得很难在回溯噪声中找到信号，并增加了调试时间。使用&lt;a href=&quot;backtracecleaner&quot;&gt; &lt;code&gt;BacktraceCleaner&lt;/code&gt; 时&lt;/a&gt;，可以使用过滤器和消音器除去嘈杂的线路，以便仅保留最相关的线路。</target>
        </trans-unit>
        <trans-unit id="0a9f20074dc82611526899697ae2997094af024f" translate="yes" xml:space="preserve">
          <source>Backtraces often include many lines that are not relevant for the context under review. This makes it hard to find the signal amongst the backtrace noise, and adds debugging time. With a &lt;a href=&quot;backtracecleaner&quot;&gt;BacktraceCleaner&lt;/a&gt;, filters and silencers are used to remove the noisy lines, so that only the most relevant lines remain.</source>
          <target state="translated">回溯通常包含许多与所检查的上下文无关的行。这使得很难在回溯噪声中找到信号，并增加了调试时间。使用&lt;a href=&quot;backtracecleaner&quot;&gt;BacktraceCleaner时&lt;/a&gt;，可以使用过滤器和消音器除去嘈杂的线路，以便仅保留最相关的线路。</target>
        </trans-unit>
        <trans-unit id="fa33d557dc6e8a8a4e62b0bb691fdf84359cf4b6" translate="yes" xml:space="preserve">
          <source>Barebones Helpers</source>
          <target state="translated">赤子之心</target>
        </trans-unit>
        <trans-unit id="375c012ed7a59a31890125a6f4b37c45212c0928" translate="yes" xml:space="preserve">
          <source>Base#action_methods</source>
          <target state="translated">Base#action_methods</target>
        </trans-unit>
        <trans-unit id="e311e3dae5dd72db3a6bf46bd8274ea5e838d2fe" translate="yes" xml:space="preserve">
          <source>Base#action_name</source>
          <target state="translated">Base#action_name</target>
        </trans-unit>
        <trans-unit id="c5cfe01df4db0097e675b528824c284d4ef361c1" translate="yes" xml:space="preserve">
          <source>Base#attachments</source>
          <target state="translated">Base#attachments</target>
        </trans-unit>
        <trans-unit id="0cb8443f4291fd8a41dfa1a53b995e9b402488b3" translate="yes" xml:space="preserve">
          <source>Base#available_action?</source>
          <target state="translated">Base#available_action?</target>
        </trans-unit>
        <trans-unit id="6bd29b3ca9fe425eb1230cc048ccad187253215d" translate="yes" xml:space="preserve">
          <source>Base#bounce_with</source>
          <target state="translated">Base#bounce_with</target>
        </trans-unit>
        <trans-unit id="4e89ec37a039af70e764c3e0e19619ac97ce5f70" translate="yes" xml:space="preserve">
          <source>Base#compiled_method_container</source>
          <target state="translated">Base#compiled_method_container</target>
        </trans-unit>
        <trans-unit id="00b52f00712dcb8f1666e437989df8c0e5d2ffe2" translate="yes" xml:space="preserve">
          <source>Base#controller_path</source>
          <target state="translated">Base#controller_path</target>
        </trans-unit>
        <trans-unit id="c2ed62eabcbae95341d9cba7d0c361a4f7e699ae" translate="yes" xml:space="preserve">
          <source>Base#default_i18n_subject</source>
          <target state="translated">Base#default_i18n_subject</target>
        </trans-unit>
        <trans-unit id="d37ff6f4b8396aeb7b76f376fb1a3aa8a0d05518" translate="yes" xml:space="preserve">
          <source>Base#formats</source>
          <target state="translated">Base#formats</target>
        </trans-unit>
        <trans-unit id="4c23a360bea5c578220a6b9a67147f128c60fba8" translate="yes" xml:space="preserve">
          <source>Base#headers</source>
          <target state="translated">Base#headers</target>
        </trans-unit>
        <trans-unit id="74921f1ad6aead937da3416b20801a3f4a376bc6" translate="yes" xml:space="preserve">
          <source>Base#in_rendering_context</source>
          <target state="translated">Base#in_rendering_context</target>
        </trans-unit>
        <trans-unit id="1d59e843cdc677b01467db652a9fd6bbdd2644a2" translate="yes" xml:space="preserve">
          <source>Base#inbound_email</source>
          <target state="translated">Base#inbound_email</target>
        </trans-unit>
        <trans-unit id="6c681b01d3c39caf86ca5a3c3977277641bb59ec" translate="yes" xml:space="preserve">
          <source>Base#lookup_context</source>
          <target state="translated">Base#lookup_context</target>
        </trans-unit>
        <trans-unit id="c38e5120e6a933d3b7df826b8e635b626ade1045" translate="yes" xml:space="preserve">
          <source>Base#mail</source>
          <target state="translated">Base#mail</target>
        </trans-unit>
        <trans-unit id="9384f0f769f92095bc20aef9504bcf240533554f" translate="yes" xml:space="preserve">
          <source>Base#mailer_name</source>
          <target state="translated">Base#mailer_name</target>
        </trans-unit>
        <trans-unit id="f9d4c9fca70cfd384dae0b4448d7b2015e1a775f" translate="yes" xml:space="preserve">
          <source>Base#performed?</source>
          <target state="translated">Base#performed?</target>
        </trans-unit>
        <trans-unit id="182c9d498630daeaf39ac1a374369cbe652988c3" translate="yes" xml:space="preserve">
          <source>Base#process</source>
          <target state="translated">Base#process</target>
        </trans-unit>
        <trans-unit id="13661f485b1dd1c327a03179c438fcd3a249003a" translate="yes" xml:space="preserve">
          <source>Base#request</source>
          <target state="translated">Base#request</target>
        </trans-unit>
        <trans-unit id="49e0a2a7139f08d3043136140a591336e2162fbb" translate="yes" xml:space="preserve">
          <source>Base#response</source>
          <target state="translated">Base#response</target>
        </trans-unit>
        <trans-unit id="3e96a7b7a26ff067210ebd8711b30b5c36d241c3" translate="yes" xml:space="preserve">
          <source>Base#response_body</source>
          <target state="translated">Base#response_body</target>
        </trans-unit>
        <trans-unit id="684a8e55048112994f91ef9526560fec3494e135" translate="yes" xml:space="preserve">
          <source>Base#set_content_type</source>
          <target state="translated">Base#set_content_type</target>
        </trans-unit>
        <trans-unit id="da2adcb465595deeebc18e37dd8cdef58f114ff6" translate="yes" xml:space="preserve">
          <source>Base#view_renderer</source>
          <target state="translated">Base#view_renderer</target>
        </trans-unit>
        <trans-unit id="48f904c756e1ee547be4a2d326b9d4df6ac17830" translate="yes" xml:space="preserve">
          <source>Base::abstract</source>
          <target state="translated">Base::abstract</target>
        </trans-unit>
        <trans-unit id="cc352050973106a5ef28e73533d1fb7a8f26a730" translate="yes" xml:space="preserve">
          <source>Base::abstract!</source>
          <target state="translated">Base::abstract!</target>
        </trans-unit>
        <trans-unit id="8609fa35a18a58f1244d09ff544322176e84af6c" translate="yes" xml:space="preserve">
          <source>Base::abstract?</source>
          <target state="translated">Base::abstract?</target>
        </trans-unit>
        <trans-unit id="a07f71455878bb999fc949f8bbe3164ae4352569" translate="yes" xml:space="preserve">
          <source>Base::action_methods</source>
          <target state="translated">Base::action_methods</target>
        </trans-unit>
        <trans-unit id="cf494bf361513391af1c5e8e3f12119079c33bc1" translate="yes" xml:space="preserve">
          <source>Base::cache_template_loading</source>
          <target state="translated">Base::cache_template_loading</target>
        </trans-unit>
        <trans-unit id="fe27b55b855a64f4faeb3ba9f55e0e5131b1bc24" translate="yes" xml:space="preserve">
          <source>Base::cache_template_loading=</source>
          <target state="translated">Base::cache_template_loading=</target>
        </trans-unit>
        <trans-unit id="227621b446fbc5177c301dfb217b2ad3e587e546" translate="yes" xml:space="preserve">
          <source>Base::clear_action_methods!</source>
          <target state="translated">Base::clear_action_methods!</target>
        </trans-unit>
        <trans-unit id="e2f51416171e0640c8fa2c7c5f3714c665d7cd07" translate="yes" xml:space="preserve">
          <source>Base::controller_path</source>
          <target state="translated">Base::controller_path</target>
        </trans-unit>
        <trans-unit id="c9645de23d55e14922f2d301efd67bcaad9cd2f8" translate="yes" xml:space="preserve">
          <source>Base::default</source>
          <target state="translated">Base::default</target>
        </trans-unit>
        <trans-unit id="ce5f1a60f76f0a05aee62a5744575c5e2beff0be" translate="yes" xml:space="preserve">
          <source>Base::default_options=</source>
          <target state="translated">Base::default_options=</target>
        </trans-unit>
        <trans-unit id="c17688b07bc2fad690d664be2568ef90353ba3e0" translate="yes" xml:space="preserve">
          <source>Base::internal_methods</source>
          <target state="translated">Base::internal_methods</target>
        </trans-unit>
        <trans-unit id="b3f7054eebf163a2d8c1c6c36b4c2353ffa77a8b" translate="yes" xml:space="preserve">
          <source>Base::mailer_name</source>
          <target state="translated">Base::mailer_name</target>
        </trans-unit>
        <trans-unit id="7fcf407717aaacb7857ed621900c3687691f2380" translate="yes" xml:space="preserve">
          <source>Base::method_added</source>
          <target state="translated">Base::method_added</target>
        </trans-unit>
        <trans-unit id="40963defaaa9b28933eaf72f480bf95572c47198" translate="yes" xml:space="preserve">
          <source>Base::new</source>
          <target state="translated">Base::new</target>
        </trans-unit>
        <trans-unit id="e4a2077b9383f0c8d8a57346b65cd94734ade94e" translate="yes" xml:space="preserve">
          <source>Base::receive</source>
          <target state="translated">Base::receive</target>
        </trans-unit>
        <trans-unit id="8f5dc0eb99ddad212c6622c8e739aacdeb91727e" translate="yes" xml:space="preserve">
          <source>Base::register_interceptor</source>
          <target state="translated">Base::register_interceptor</target>
        </trans-unit>
        <trans-unit id="9caf16596a77f58de5eb22b9bd501de9975412dc" translate="yes" xml:space="preserve">
          <source>Base::register_interceptors</source>
          <target state="translated">Base::register_interceptors</target>
        </trans-unit>
        <trans-unit id="939120360df0ee3affb0d8a18fe4a6d0e4318b6f" translate="yes" xml:space="preserve">
          <source>Base::register_observer</source>
          <target state="translated">Base::register_observer</target>
        </trans-unit>
        <trans-unit id="06ab69d15fe42d5fdac77b7360de8410ad09ff71" translate="yes" xml:space="preserve">
          <source>Base::register_observers</source>
          <target state="translated">Base::register_observers</target>
        </trans-unit>
        <trans-unit id="fd40f87e945e999573c0d3071612410a821b1d0b" translate="yes" xml:space="preserve">
          <source>Base::supports_path?</source>
          <target state="translated">Base::supports_path?</target>
        </trans-unit>
        <trans-unit id="b8e1a62819cfcd04128acc95b2f747b81beb3155" translate="yes" xml:space="preserve">
          <source>Base::unregister_interceptor</source>
          <target state="translated">Base::unregister_interceptor</target>
        </trans-unit>
        <trans-unit id="4dfed71b1c39d644e8f09d1407896fd69baa6aef" translate="yes" xml:space="preserve">
          <source>Base::unregister_interceptors</source>
          <target state="translated">Base::unregister_interceptors</target>
        </trans-unit>
        <trans-unit id="fdd25aae6227f4beea9f604b7cecabb8d5ec2485" translate="yes" xml:space="preserve">
          <source>Base::unregister_observer</source>
          <target state="translated">Base::unregister_observer</target>
        </trans-unit>
        <trans-unit id="2e301451342aa1a0cfabc9b0c4ac0ef795924dcb" translate="yes" xml:space="preserve">
          <source>Base::unregister_observers</source>
          <target state="translated">Base::unregister_observers</target>
        </trans-unit>
        <trans-unit id="3c40492a0dab2b4c634f3e08dabe0a659023487d" translate="yes" xml:space="preserve">
          <source>Base::without_modules</source>
          <target state="translated">Base::without_modules</target>
        </trans-unit>
        <trans-unit id="b217417f8ade7eeef1ffc4b3ee10a4083040d9c5" translate="yes" xml:space="preserve">
          <source>BaseController</source>
          <target state="translated">BaseController</target>
        </trans-unit>
        <trans-unit id="e553d923f564455ff43620929aee3223d197ecd7" translate="yes" xml:space="preserve">
          <source>Based on the above example, the subscribers of this channel will get whatever data is put into the, let's say, &lt;code&gt;comments_for_45&lt;/code&gt; broadcasting as soon as it's put there.</source>
          <target state="translated">根据上面的示例，此频道的订户将把放置在其中的任何数据（例如， &lt;code&gt;comments_for_45&lt;/code&gt; 广播）放入其中。</target>
        </trans-unit>
        <trans-unit id="1f356b23d4ea952d7069a240305dcc3f49cf628e" translate="yes" xml:space="preserve">
          <source>Basic &lt;a href=&quot;metal#method-i-url_for&quot;&gt;#url_for&lt;/a&gt; that can be overridden for more robust functionality.</source>
          <target state="translated">基本的&lt;a href=&quot;metal#method-i-url_for&quot;&gt;#url_for&lt;/a&gt;可以被覆盖以获得更强大的功能。</target>
        </trans-unit>
        <trans-unit id="7729b8cc301ee9ca1e5fb153e077560402e264c8" translate="yes" xml:space="preserve">
          <source>Basic &lt;a href=&quot;metal#method-i-url_for&quot;&gt;&lt;code&gt;url_for&lt;/code&gt;&lt;/a&gt; that can be overridden for more robust functionality.</source>
          <target state="translated">基本&lt;a href=&quot;metal#method-i-url_for&quot;&gt; &lt;code&gt;url_for&lt;/code&gt; &lt;/a&gt;可以被覆盖以获得更强大的功能。</target>
        </trans-unit>
        <trans-unit id="1d7840b08e10434e110bce3eaf01fc3db578812b" translate="yes" xml:space="preserve">
          <source>Basic Authentication</source>
          <target state="translated">基本认证</target>
        </trans-unit>
        <trans-unit id="849ea12fa0a6d20a31c7f74ac328669c8eac099f" translate="yes" xml:space="preserve">
          <source>Basic Caching</source>
          <target state="translated">基本缓存</target>
        </trans-unit>
        <trans-unit id="fe9d4d6903c7ac3542b2ccc456e660b132226da5" translate="yes" xml:space="preserve">
          <source>Basic Structures</source>
          <target state="translated">基本结构</target>
        </trans-unit>
        <trans-unit id="20b19d89ef0aed3f2d4f1afed1d3f801c6b85aa5" translate="yes" xml:space="preserve">
          <source>Basic example</source>
          <target state="translated">基本例子</target>
        </trans-unit>
        <trans-unit id="f382d74ea61e17c6d328d05dccff557575e5b389" translate="yes" xml:space="preserve">
          <source>Basic knowledge of relational database management systems (RDBMS) and structured query language (SQL) is helpful in order to fully understand Active Record. Please refer to &lt;a href=&quot;https://www.w3schools.com/sql/default.asp&quot;&gt;this tutorial&lt;/a&gt; (or &lt;a href=&quot;http://www.sqlcourse.com/&quot;&gt;this one&lt;/a&gt;) or study them by other means if you would like to learn more.</source>
          <target state="translated">关系数据库管理系统（RDBMS）和结构化查询语言（SQL）的基础知识有助于全面了解Active Record。请参见&lt;a href=&quot;https://www.w3schools.com/sql/default.asp&quot;&gt;本教程&lt;/a&gt;（或&lt;a href=&quot;http://www.sqlcourse.com/&quot;&gt;这一个&lt;/a&gt;），或者通过其他方式学习他们，如果你想了解更多信息。</target>
        </trans-unit>
        <trans-unit id="6f0e5325e32134dcafcfb324412a467d07e460c0" translate="yes" xml:space="preserve">
          <source>Basic types (&lt;code&gt;NilClass&lt;/code&gt;, &lt;code&gt;String&lt;/code&gt;, &lt;code&gt;Integer&lt;/code&gt;, &lt;code&gt;Float&lt;/code&gt;, &lt;code&gt;BigDecimal&lt;/code&gt;, &lt;code&gt;TrueClass&lt;/code&gt;, &lt;code&gt;FalseClass&lt;/code&gt;)</source>
          <target state="translated">基本类型（ &lt;code&gt;NilClass&lt;/code&gt; ， &lt;code&gt;String&lt;/code&gt; ， &lt;code&gt;Integer&lt;/code&gt; ， &lt;code&gt;Float&lt;/code&gt; ， &lt;code&gt;BigDecimal&lt;/code&gt; ， &lt;code&gt;TrueClass&lt;/code&gt; ， &lt;code&gt;FalseClass&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="2748fa0ed1a815c4ef78fdc11be77bba36b711c2" translate="yes" xml:space="preserve">
          <source>Basic, Digest, and Token Authentication: Rails comes with out-of-the-box support for three kinds of HTTP authentication.</source>
          <target state="translated">Basic、Digest 和 Token 认证。Rails开箱即支持三种HTTP认证。</target>
        </trans-unit>
        <trans-unit id="b1fe19370a0775e7f6fe60baa64e80b58c0895a9" translate="yes" xml:space="preserve">
          <source>BasicObject</source>
          <target state="translated">BasicObject</target>
        </trans-unit>
        <trans-unit id="221bca2d148b0d0e8838e8b0060011bbd6540587" translate="yes" xml:space="preserve">
          <source>Be aware that because the type column is an attribute on the record every new subclass will instantly be marked as dirty and the type column will be included in the list of changed attributes on the record. This is different from non Single Table Inheritance(STI) classes:</source>
          <target state="translated">请注意,因为类型列是记录上的一个属性,所以每个新的子类都会立即被标记为dirty,并且类型列会被包含在记录上的更改属性列表中。这与非单表继承(STI)类不同。</target>
        </trans-unit>
        <trans-unit id="8e4bd57efae1a1fe437bfddc6ce012d8166b2bab" translate="yes" xml:space="preserve">
          <source>Be aware that some resources, while still excellent, cover older versions of Ruby, and may not include some syntax that you will see in day-to-day development with Rails.</source>
          <target state="translated">请注意,有些资源虽然仍然很好,但却涵盖了Ruby的旧版本,而且可能不包括你在Rails的日常开发中会看到的一些语法。</target>
        </trans-unit>
        <trans-unit id="70aa7849eb504bf9c07c7a1932de11af61c3c9c2" translate="yes" xml:space="preserve">
          <source>Be aware that some resources, while still excellent, cover versions of Ruby as old as 1.6, and commonly 1.8, and will not include some syntax that you will see in day-to-day development with Rails.</source>
          <target state="translated">请注意,有些资源虽然仍然很好,但却涵盖了Ruby的1.6版本,通常是1.8版本,而且不会包含你在Rails的日常开发中会看到的一些语法。</target>
        </trans-unit>
        <trans-unit id="2e0909fff00b24909ce18b83501fc8f0f24db92d" translate="yes" xml:space="preserve">
          <source>Be aware that, when given in the &lt;code&gt;Array&lt;/code&gt; format, &lt;code&gt;default_scope&lt;/code&gt; query arguments cannot be converted to a &lt;code&gt;Hash&lt;/code&gt; for default attribute assignment. E.g.:</source>
          <target state="translated">请注意，当以 &lt;code&gt;Array&lt;/code&gt; 格式给出时， &lt;code&gt;default_scope&lt;/code&gt; 查询参数不能转换为用于默认属性分配的 &lt;code&gt;Hash&lt;/code&gt; 。例如：</target>
        </trans-unit>
        <trans-unit id="2faa87e7ea85c26498f769492cf25a453b1e1c98" translate="yes" xml:space="preserve">
          <source>Be careful because this also means you're initializing a model object with only the fields that you've selected. If you attempt to access a field except &lt;code&gt;id&lt;/code&gt; that is not in the initialized record you'll receive:</source>
          <target state="translated">请注意，因为这也意味着您仅使用选定的字段来初始化模型对象。如果您尝试访问未包含在初始化记录中的 &lt;code&gt;id&lt;/code&gt; 以外的字段，则会收到：</target>
        </trans-unit>
        <trans-unit id="35c2d48e416e85a403337ba02395acf385887c8e" translate="yes" xml:space="preserve">
          <source>Be careful because this also means you're initializing a model object with only the fields that you've selected. If you attempt to access a field that is not in the initialized record you'll receive:</source>
          <target state="translated">要小心,因为这也意味着你只用你选择的字段来初始化一个模型对象。如果您试图访问一个不在初始化记录中的字段,您将收到:。</target>
        </trans-unit>
        <trans-unit id="59a32b6bb43173d6a527b6b817a9b30fc6c9ce08" translate="yes" xml:space="preserve">
          <source>Be careful because this opens the door to arbitrary input. In this case, &lt;code&gt;permit&lt;/code&gt; ensures values in the returned structure are permitted scalars and filters out anything else.</source>
          <target state="translated">注意，因为这为任意输入打开了大门。在这种情况下， &lt;code&gt;permit&lt;/code&gt; 确保返回的结构中的值是允许的标量，并过滤掉其他任何内容。</target>
        </trans-unit>
        <trans-unit id="030f51bb92aa5ae8a3b18ffa3dfebfa089e5fa0c" translate="yes" xml:space="preserve">
          <source>Be careful to sanitize the path parameter if it is coming from a web page. &lt;code&gt;send_file(params[:path])&lt;/code&gt; allows a malicious user to download any file on your server.</source>
          <target state="translated">如果路径参数来自网页，请谨慎处理。 &lt;code&gt;send_file(params[:path])&lt;/code&gt; 允许恶意用户下载服务器上的任何文件。</target>
        </trans-unit>
        <trans-unit id="9ecda37e980467d768a8bfffb1da32c255f0f749" translate="yes" xml:space="preserve">
          <source>Be careful when using data coming from the client (params, cookies, etc.) to locate the file on disk, as this is a security risk that might allow someone to gain access to files they are not meant to.</source>
          <target state="translated">当使用来自客户端的数据(params、cookie等)来定位磁盘上的文件时,要小心谨慎,因为这是一个安全风险,可能会让人访问他们不应该访问的文件。</target>
        </trans-unit>
        <trans-unit id="9a3e05169abda0bcdb051a78c3ae51438591cab7" translate="yes" xml:space="preserve">
          <source>Be careful when using the older argument style, as an extra literal hash is needed:</source>
          <target state="translated">使用旧的参数样式时要小心,因为需要一个额外的文字哈希。</target>
        </trans-unit>
        <trans-unit id="6ead1f640942e8fe8801f87804b55d59092bdeb9" translate="yes" xml:space="preserve">
          <source>Be sure to look at the documentation of those specific classes for more information.</source>
          <target state="translated">请务必查看这些特定类的文档以获得更多信息。</target>
        </trans-unit>
        <trans-unit id="72eaff06e3602b38f11760f6dab14baffdb8a174" translate="yes" xml:space="preserve">
          <source>Be sure to read the &lt;a href=&quot;https://nginx.org/en/docs/&quot;&gt;NGINX documentation&lt;/a&gt; for the most up-to-date information.</source>
          <target state="translated">请务必阅读&lt;a href=&quot;https://nginx.org/en/docs/&quot;&gt;NGINX文档&lt;/a&gt;以获取最新信息。</target>
        </trans-unit>
        <trans-unit id="66cfdf2a980141a0d9ad0e6769bc83f470812b73" translate="yes" xml:space="preserve">
          <source>Be sure to specify the same class as the &lt;code&gt;value_method&lt;/code&gt; when specifying selected or disabled options. Failure to do this will produce undesired results. Example:</source>
          <target state="translated">指定选定或禁用的选项时，请确保指定与 &lt;code&gt;value_method&lt;/code&gt; 相同的类。不这样做会产生不良结果。例：</target>
        </trans-unit>
        <trans-unit id="5a6dbedc11172f1d5b04a251e1dbfd64482062db" translate="yes" xml:space="preserve">
          <source>Because &lt;a href=&quot;cookiestore&quot;&gt;&lt;code&gt;CookieStore&lt;/code&gt;&lt;/a&gt; extends Rack::Session::Abstract::Persisted, many of the options described there can be used to customize the session cookie that is generated. For example:</source>
          <target state="translated">由于&lt;a href=&quot;cookiestore&quot;&gt; &lt;code&gt;CookieStore&lt;/code&gt; &lt;/a&gt;扩展了Rack :: Session :: Abstract :: Persisted，因此此处描述的许多选项可用于自定义生成的会话Cookie。例如：</target>
        </trans-unit>
        <trans-unit id="b7c7b12e7d961d7da34597cee8ca83ae237dfdc9" translate="yes" xml:space="preserve">
          <source>Because &lt;a href=&quot;cookiestore&quot;&gt;CookieStore&lt;/a&gt; extends Rack::Session::Abstract::Persisted, many of the options described there can be used to customize the session cookie that is generated. For example:</source>
          <target state="translated">由于&lt;a href=&quot;cookiestore&quot;&gt;CookieStore&lt;/a&gt;扩展了Rack :: Session :: Abstract :: Persisted，因此此处描述的许多选项都可以用于自定义生成的会话Cookie。例如：</target>
        </trans-unit>
        <trans-unit id="30a5131845c3216a67c8ccc8a543e7aca63b6fe3" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;ActionDispatch::SystemTestCase&lt;/code&gt; is a shim between Capybara and Rails, any driver that is supported by Capybara is supported by system tests as long as you include the required gems and files.</source>
          <target state="translated">因为 &lt;code&gt;ActionDispatch::SystemTestCase&lt;/code&gt; 是Capybara和Rails之间的填充程序，所以只要您包含必需的gem和文件，系统测试就可以支持Capybara支持的任何驱动程序。</target>
        </trans-unit>
        <trans-unit id="e720139c6d33d2393cf4fa1aebb3fea383426ca3" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;Rails::Application&lt;/code&gt; inherits from &lt;code&gt;Rails::Railtie&lt;/code&gt; (indirectly), you can use the &lt;code&gt;initializer&lt;/code&gt; method in &lt;code&gt;config/application.rb&lt;/code&gt; to define initializers for the application.</source>
          <target state="translated">因为 &lt;code&gt;Rails::Application&lt;/code&gt; 继承自 &lt;code&gt;Rails::Railtie&lt;/code&gt; ，所以可以使用 &lt;code&gt;config/application.rb&lt;/code&gt; 中的 &lt;code&gt;initializer&lt;/code&gt; 方法来定义应用程序的初始化程序。</target>
        </trans-unit>
        <trans-unit id="06998ca6310237a9999773e96a918141bf6229f6" translate="yes" xml:space="preserve">
          <source>Because Rails controllers generally share code for things like authentication and accessing session variables, they inherit from &lt;code&gt;ApplicationController&lt;/code&gt; by default. Rails engines, however are scoped to run independently from the main application, so each engine gets a scoped &lt;code&gt;ApplicationController&lt;/code&gt;. This namespace prevents code collisions, but often engine controllers need to access methods in the main application's &lt;code&gt;ApplicationController&lt;/code&gt;. An easy way to provide this access is to change the engine's scoped &lt;code&gt;ApplicationController&lt;/code&gt; to inherit from the main application's &lt;code&gt;ApplicationController&lt;/code&gt;. For our Blorgh engine this would be done by changing &lt;code&gt;app/controllers/blorgh/application_controller.rb&lt;/code&gt; to look like:</source>
          <target state="translated">由于Rails控制器通常共享用于身份验证和访问会话变量之类的代码，因此默认情况下它们从 &lt;code&gt;ApplicationController&lt;/code&gt; 继承。但是，Rails引擎的作用域是独立于主应用程序运行，因此每个引擎都有一个作用域的 &lt;code&gt;ApplicationController&lt;/code&gt; 。这个名称空间可以防止代码冲突，但是引擎控制器通常需要访问主应用程序的 &lt;code&gt;ApplicationController&lt;/code&gt; 中的方法。提供此访问权限的一种简单方法是将引擎的作用域 &lt;code&gt;ApplicationController&lt;/code&gt; 更改为从主应用程序的 &lt;code&gt;ApplicationController&lt;/code&gt; 继承。对于我们的Blorgh引擎，可以通过更改 &lt;code&gt;app/controllers/blorgh/application_controller.rb&lt;/code&gt; 来完成 看起来像：</target>
        </trans-unit>
        <trans-unit id="ec7a3d4eac0133e388925aeffc1dae7c7d1a806c" translate="yes" xml:space="preserve">
          <source>Because every application handles this kind of thing differently, Rails does not include any view helpers to help you generate these messages directly. However, due to the rich number of methods Rails gives you to interact with validations in general, it's fairly easy to build your own. In addition, when generating a scaffold, Rails will put some ERB into the &lt;code&gt;_form.html.erb&lt;/code&gt; that it generates that displays the full list of errors on that model.</source>
          <target state="translated">因为每个应用程序对这种事情的处理方式都不相同，所以Rails不包含任何视图助手来帮助您直接生成这些消息。但是，由于Rails提供了大量的方法，因此通常可以与验证进行交互，因此构建自己的方法相当容易。另外，在生成支架时，Rails会将一些ERB放入它生成的 &lt;code&gt;_form.html.erb&lt;/code&gt; 中，以显示该模型上的错误的完整列表。</target>
        </trans-unit>
        <trans-unit id="8fc2430053fb5a47931921da232a59ea45d6ec76" translate="yes" xml:space="preserve">
          <source>Because every application handles this kind of thing differently, Rails does not include any view helpers to help you generate these messages directly. However, due to the rich number of methods Rails gives you to interact with validations in general, you can build your own. In addition, when generating a scaffold, Rails will put some ERB into the &lt;code&gt;_form.html.erb&lt;/code&gt; that it generates that displays the full list of errors on that model.</source>
          <target state="translated">因为每个应用程序对这种事情的处理方式都不相同，所以Rails不包含任何视图助手来帮助您直接生成这些消息。但是，由于Rails提供了大量与验证交互的方法，因此您可以构建自己的验证。另外，在生成支架时，Rails会将一些ERB放入它生成的 &lt;code&gt;_form.html.erb&lt;/code&gt; 中，以显示该模型上的错误的完整列表。</target>
        </trans-unit>
        <trans-unit id="a867b2a6962f519bdeca9ed4f9eaa0f52c9997c4" translate="yes" xml:space="preserve">
          <source>Because it relies on &lt;code&gt;url_for&lt;/code&gt;, &lt;code&gt;link_to&lt;/code&gt; supports both older-style controller/action/id arguments and newer RESTful routes. Current Rails style favors RESTful routes whenever possible, so base your application on resources and use</source>
          <target state="translated">因为它依赖于 &lt;code&gt;url_for&lt;/code&gt; ，所以 &lt;code&gt;link_to&lt;/code&gt; 支持较旧样式的controller / action / id参数和较新的RESTful路由。当前的Rails风格尽可能支持RESTful路由，因此您的应用程序基于资源和使用</target>
        </trans-unit>
        <trans-unit id="9966d531a4c5fdc9bfda4d712e067930db3e5689" translate="yes" xml:space="preserve">
          <source>Because it relies on the index information from the database &lt;code&gt;:unique_by&lt;/code&gt; is recommended to be paired with Active Record's schema_cache.</source>
          <target state="translated">因为它依赖于数据库中的索引信息，所以建议将 &lt;code&gt;:unique_by&lt;/code&gt; 与Active Record的schema_cache配对。</target>
        </trans-unit>
        <trans-unit id="c1ec1ab86808178f948933e58dc2edab0caade62" translate="yes" xml:space="preserve">
          <source>Because of Unobtrusive JavaScript, the Rails &quot;Ajax helpers&quot; are actually in two parts: the JavaScript half and the Ruby half.</source>
          <target state="translated">因为Unobtrusive JavaScript的缘故,Rails的 &quot;Ajax助手 &quot;其实分为两部分:一半是JavaScript,一半是Ruby。</target>
        </trans-unit>
        <trans-unit id="4647714862cdc3e0d96dd2b7ca190224c548ed10" translate="yes" xml:space="preserve">
          <source>Because of that, it is not a good idea to autoload constants on application initialization.</source>
          <target state="translated">正因为如此,在应用程序初始化时自动加载常量不是一个好主意。</target>
        </trans-unit>
        <trans-unit id="3a2327fba79580533b4d74ad10fe2d12d1c5c87f" translate="yes" xml:space="preserve">
          <source>Because of the modular nature of the testing framework, it is possible to create your own assertions. In fact, that's exactly what Rails does. It includes some specialized assertions to make your life easier.</source>
          <target state="translated">由于测试框架的模块化特性,可以创建自己的断言。事实上,这正是Rails所做的。它包括一些专门的断言,让你的生活更轻松。</target>
        </trans-unit>
        <trans-unit id="9f0c14d4074af7ab463fd2136d643f6539d3c349" translate="yes" xml:space="preserve">
          <source>Because of the way that Ruby does constant lookup you may run into a situation where your engine controller is inheriting from the main application controller and not your engine's application controller. Ruby is able to resolve the &lt;code&gt;ApplicationController&lt;/code&gt; constant, and therefore the autoloading mechanism is not triggered. See the section &lt;a href=&quot;autoloading_and_reloading_constants#when-constants-aren-t-missed&quot;&gt;When Constants Aren't Missed&lt;/a&gt; of the &lt;a href=&quot;autoloading_and_reloading_constants&quot;&gt;Autoloading and Reloading Constants&lt;/a&gt; guide for further details. The best way to prevent this from happening is to use &lt;code&gt;require_dependency&lt;/code&gt; to ensure that the engine's application controller is loaded. For example:</source>
          <target state="translated">由于Ruby不断进行查询的方式，您可能会遇到引擎控制器继承自主应用程序控制器而不是引擎应用程序控制器的情况。 Ruby能够解析 &lt;code&gt;ApplicationController&lt;/code&gt; 常量，因此不会触发自动加载机制。请参见&lt;a href=&quot;autoloading_and_reloading_constants#when-constants-aren-t-missed&quot;&gt;当常量不错过&lt;/a&gt;了的&lt;a href=&quot;autoloading_and_reloading_constants&quot;&gt;自动加载和重装常量&lt;/a&gt;指导进一步的细节。防止这种情况发生的最好方法是使用 &lt;code&gt;require_dependency&lt;/code&gt; 以确保加载了引擎的应用程序控制器。例如：</target>
        </trans-unit>
        <trans-unit id="81971a9778e7ce2b86a13ff8a8c4bc6f5444ced2" translate="yes" xml:space="preserve">
          <source>Because of the way that Ruby does constant lookup you may run into a situation where your engine controller is inheriting from the main application controller and not your engine's application controller. Ruby is able to resolve the &lt;code&gt;ApplicationController&lt;/code&gt; constant, and therefore the autoloading mechanism is not triggered. See the section &lt;a href=&quot;autoloading_and_reloading_constants_classic_mode#when-constants-aren-t-missed&quot;&gt;When Constants Aren't Missed&lt;/a&gt;. The best way to prevent this from happening is to use &lt;code&gt;require_dependency&lt;/code&gt; to ensure that the engine's application controller is loaded. For example:</source>
          <target state="translated">由于Ruby进行常量查找的方式，您可能会遇到引擎控制器继承自主应用程序控制器而不是引擎应用程序控制器的情况。Ruby能够解析 &lt;code&gt;ApplicationController&lt;/code&gt; 常量，因此不会触发自动加载机制。请参阅&amp;ldquo;&lt;a href=&quot;autoloading_and_reloading_constants_classic_mode#when-constants-aren-t-missed&quot;&gt;不遗漏常量&lt;/a&gt;&amp;rdquo;一节。防止这种情况发生的最好方法是使用 &lt;code&gt;require_dependency&lt;/code&gt; 以确保加载了引擎的应用程序控制器。例如：</target>
        </trans-unit>
        <trans-unit id="23169a9b2d9e1c5dc4de9b85636cce7266ee35d8" translate="yes" xml:space="preserve">
          <source>Because of this behavior you cannot use any of the &lt;code&gt;*_path&lt;/code&gt; helpers inside of an email. Instead you will need to use the associated &lt;code&gt;*_url&lt;/code&gt; helper. For example instead of using</source>
          <target state="translated">因此，您不能在电子邮件中使用任何 &lt;code&gt;*_path&lt;/code&gt; 帮助器。相反，您将需要使用关联的 &lt;code&gt;*_url&lt;/code&gt; 帮助器。例如代替使用</target>
        </trans-unit>
        <trans-unit id="e727a35a6d6fa4bb2d3c57078f7ad67894827271" translate="yes" xml:space="preserve">
          <source>Because of this, most web applications will display a generic error message &quot;user name or password not correct&quot;, if one of these are not correct. If it said &quot;the user name you entered has not been found&quot;, an attacker could automatically compile a list of user names.</source>
          <target state="translated">正因为如此,如果其中有一条不正确,大多数Web应用程序会显示一个通用的错误信息 &quot;用户名或密码不正确&quot;。如果说 &quot;没有找到你输入的用户名&quot;,攻击者就可以自动编制一个用户名列表。</target>
        </trans-unit>
        <trans-unit id="318064160baec1034df6e5aa23d3c6371ca8a695" translate="yes" xml:space="preserve">
          <source>Because requesting various HTTP verbs with a single action has security implications, you must either specify the actions in the via options or use one of the &lt;a href=&quot;httphelpers&quot;&gt;&lt;code&gt;HttpHelpers&lt;/code&gt;&lt;/a&gt; instead &lt;code&gt;match&lt;/code&gt;</source>
          <target state="translated">由于各种请求HTTP动词用单行动带来了安全隐患，则必须在通过选择指定的操作或使用的一个&lt;a href=&quot;httphelpers&quot;&gt; &lt;code&gt;HttpHelpers&lt;/code&gt; &lt;/a&gt;代替 &lt;code&gt;match&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="908ba7cdc92d1a69805da00e59ab9d376b779455" translate="yes" xml:space="preserve">
          <source>Because requesting various HTTP verbs with a single action has security implications, you must either specify the actions in the via options or use one of the &lt;a href=&quot;httphelpers&quot;&gt;HttpHelpers&lt;/a&gt; instead &lt;code&gt;match&lt;/code&gt;</source>
          <target state="translated">由于各种请求HTTP动词用单行动带来了安全隐患，则必须在通过选择指定的操作或使用的一个&lt;a href=&quot;httphelpers&quot;&gt;HttpHelpers&lt;/a&gt;代替 &lt;code&gt;match&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="16a5e80e523d0473c8f3749750a4ef284a8314a1" translate="yes" xml:space="preserve">
          <source>Because schema files are commonly used to create new databases, it is strongly recommended that you check your schema file into source control.</source>
          <target state="translated">因为模式文件通常用于创建新的数据库,所以强烈建议你将你的模式文件检查到源控制中。</target>
        </trans-unit>
        <trans-unit id="13443a7680d7ec88680920b0c0c627048b2dfa83" translate="yes" xml:space="preserve">
          <source>Because submitting forms with HTTP methods other than GET and POST isn't widely supported across browsers, all other HTTP methods are actually sent over POST with the intended method indicated in the &lt;code&gt;_method&lt;/code&gt; parameter. Rails automatically detects and compensates for this.</source>
          <target state="translated">由于跨浏览器不广泛支持使用GET和POST以外的HTTP方法提交表单，因此，所有其他HTTP方法实际上都是通过POST发送的，方法是 &lt;code&gt;_method&lt;/code&gt; 参数中指定的方法。Rails会自动检测并对此进行补偿。</target>
        </trans-unit>
        <trans-unit id="51dc3dbf358f9c481107b8615d8e38570402d686" translate="yes" xml:space="preserve">
          <source>Because the &lt;code&gt;default_locale&lt;/code&gt; hasn't changed, translations use the &lt;code&gt;:en&lt;/code&gt; locale and the response renders the english strings:</source>
          <target state="translated">因为 &lt;code&gt;default_locale&lt;/code&gt; 没有改变，所以翻译使用 &lt;code&gt;:en&lt;/code&gt; 区域设置，并且响应呈现英语字符串：</target>
        </trans-unit>
        <trans-unit id="4d880daaea2369c3038e718c9922aff8c3202105" translate="yes" xml:space="preserve">
          <source>Because the &lt;code&gt;has_many&lt;/code&gt; is defined inside a class that is inside the &lt;code&gt;Blorgh&lt;/code&gt; module, Rails will know that you want to use the &lt;code&gt;Blorgh::Comment&lt;/code&gt; model for these objects, so there's no need to specify that using the &lt;code&gt;:class_name&lt;/code&gt; option here.</source>
          <target state="translated">因为 &lt;code&gt;has_many&lt;/code&gt; 是在 &lt;code&gt;Blorgh&lt;/code&gt; 模块内部的类中定义的，所以Rails知道您想对这些对象使用 &lt;code&gt;Blorgh::Comment&lt;/code&gt; 模型，因此无需在此处使用 &lt;code&gt;:class_name&lt;/code&gt; 选项进行指定。</target>
        </trans-unit>
        <trans-unit id="e5e656aec056f4fb76fde58e80955c56e73cf954" translate="yes" xml:space="preserve">
          <source>Because the code will be the same, we're going to factor it out into a shared view called a &lt;em&gt;partial&lt;/em&gt;. Let's create &lt;code&gt;app/views/articles/_form.html.erb&lt;/code&gt; with the following contents:</source>
          <target state="translated">因为代码是相同的，所以我们将其分解到称为&lt;em&gt;partial&lt;/em&gt;的共享视图中。让我们创建具有以下内容的 &lt;code&gt;app/views/articles/_form.html.erb&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="94f730380a3d056c7afb2228ec6d386218c10f74" translate="yes" xml:space="preserve">
          <source>Because the generated param begins with the record's &lt;code&gt;id&lt;/code&gt;, it is suitable for passing to &lt;code&gt;find&lt;/code&gt;. In a controller, for example:</source>
          <target state="translated">由于生成的参数以记录的 &lt;code&gt;id&lt;/code&gt; 开头，因此适合传递 &lt;code&gt;find&lt;/code&gt; 。在控制器中，例如：</target>
        </trans-unit>
        <trans-unit id="18c830452f8fdb170bad1a89b1e573874c42f67e" translate="yes" xml:space="preserve">
          <source>Because the object is not yet stored in the database, the SQL generated looks like this:</source>
          <target state="translated">因为对象还没有存储在数据库中,所以生成的SQL是这样的。</target>
        </trans-unit>
        <trans-unit id="207cfeebcece35de9441ba829a80f6d8d8ef5bc7" translate="yes" xml:space="preserve">
          <source>Because the router uses the HTTP verb and URL to match inbound requests, four URLs map to seven different actions.</source>
          <target state="translated">因为路由器使用HTTP动词和URL来匹配入站请求,四个URL映射到七个不同的操作。</target>
        </trans-unit>
        <trans-unit id="17cb2a896ede26fa41a40fc6b070d96e2525adf4" translate="yes" xml:space="preserve">
          <source>Because these APIs were never fully specified or documented, and because WYSIWYG HTML editors are enormous in scope, each browser's implementation has its own set of bugs and quirks, and JavaScript developers are left to resolve the inconsistencies.</source>
          <target state="translated">由于这些API从来没有被完全指定或文档化,而且所见即所得的HTML编辑器范围巨大,每个浏览器的实现都有自己的一套bug和怪癖,JavaScript开发人员只能解决这些不一致的地方。</target>
        </trans-unit>
        <trans-unit id="b858462d2d453584119063f4f49ca3a3e4e2d0c0" translate="yes" xml:space="preserve">
          <source>Because these overrides are not referenced by your Rails application itself, Rails' autoloading system will not kick in and load your overrides. This means that you need to require them yourself.</source>
          <target state="translated">由于Rails应用本身并不引用这些重载,所以Rails的自动加载系统不会启动并加载您的重载。这意味着您需要自己要求它们。</target>
        </trans-unit>
        <trans-unit id="105657bd45b1c77a9b31b12f9bd5d3b248e7b8a8" translate="yes" xml:space="preserve">
          <source>Because you might want to use the same controller for a singular route (&lt;code&gt;/account&lt;/code&gt;) and a plural route (&lt;code&gt;/accounts/45&lt;/code&gt;), singular resources map to plural controllers. So that, for example, &lt;code&gt;resource :photo&lt;/code&gt; and &lt;code&gt;resources :photos&lt;/code&gt; creates both singular and plural routes that map to the same controller (&lt;code&gt;PhotosController&lt;/code&gt;).</source>
          <target state="translated">因为您可能希望对单个路由（ &lt;code&gt;/account&lt;/code&gt; ）和多个路由（ &lt;code&gt;/accounts/45&lt;/code&gt; ）使用相同的控制器，所以单个资源映射到多个控制器。这样，例如， &lt;code&gt;resource :photo&lt;/code&gt; 和 &lt;code&gt;resources :photos&lt;/code&gt; 会创建映射到同一控制器（ &lt;code&gt;PhotosController&lt;/code&gt; ）的单数和复数路由。</target>
        </trans-unit>
        <trans-unit id="76038c087039c40b7b7284e3c2ef010433a7bf3c" translate="yes" xml:space="preserve">
          <source>Because you're working in the development environment by default, this command will apply to the database defined in the &lt;code&gt;development&lt;/code&gt; section of your &lt;code&gt;config/database.yml&lt;/code&gt; file. If you would like to execute migrations in another environment, for instance in production, you must explicitly pass it when invoking the command: &lt;code&gt;rails db:migrate RAILS_ENV=production&lt;/code&gt;.</source>
          <target state="translated">因为默认情况下您在开发环境中工作，所以此命令将应用于 &lt;code&gt;config/database.yml&lt;/code&gt; 文件的 &lt;code&gt;development&lt;/code&gt; 部分中定义的数据库。如果要在其他环境中（例如在生产环境中）执行迁移，则必须在调用以下命令时显式地传递它： &lt;code&gt;rails db:migrate RAILS_ENV=production&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e949293bb3141d39921183faafd54e8bcb4089c2" translate="yes" xml:space="preserve">
          <source>Becomes:</source>
          <target state="translated">Becomes:</target>
        </trans-unit>
        <trans-unit id="07e60e3f83c2002b71e20f051396d5abfba1a658" translate="yes" xml:space="preserve">
          <source>Before &lt;code&gt;form_with&lt;/code&gt; was introduced in Rails 5.1 its functionality used to be split between &lt;a href=&quot;https://api.rubyonrails.org/v5.2/classes/ActionView/Helpers/FormTagHelper.html#method-i-form_tag&quot;&gt;&lt;code&gt;form_tag&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://api.rubyonrails.org/v5.2/classes/ActionView/Helpers/FormHelper.html#method-i-form_for&quot;&gt;&lt;code&gt;form_for&lt;/code&gt;&lt;/a&gt;. Both are now soft-deprecated. Documentation on their usage can be found in &lt;a href=&quot;https://guides.rubyonrails.org/v5.2/form_helpers.html&quot;&gt;older versions of this guide&lt;/a&gt;.</source>
          <target state="translated">在Rails 5.1中引入 &lt;code&gt;form_with&lt;/code&gt; 之前，其功能曾经在&lt;a href=&quot;https://api.rubyonrails.org/v5.2/classes/ActionView/Helpers/FormTagHelper.html#method-i-form_tag&quot;&gt; &lt;code&gt;form_tag&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;https://api.rubyonrails.org/v5.2/classes/ActionView/Helpers/FormHelper.html#method-i-form_for&quot;&gt; &lt;code&gt;form_for&lt;/code&gt; &lt;/a&gt;之间进行拆分。两者现在都已被软弃用。有关其用法的文档可在&lt;a href=&quot;https://guides.rubyonrails.org/v5.2/form_helpers.html&quot;&gt;本指南的旧版本中&lt;/a&gt;找到。</target>
        </trans-unit>
        <trans-unit id="545653a2c89d898acc0569e3f9fcc83a512936a8" translate="yes" xml:space="preserve">
          <source>Before &lt;code&gt;form_with&lt;/code&gt; was introduced in Rails 5.1 its functionality used to be split between &lt;code&gt;form_tag&lt;/code&gt; and &lt;code&gt;form_for&lt;/code&gt;. Both are now soft-deprecated. Documentation on their usage can be found in &lt;a href=&quot;https://guides.rubyonrails.org/v5.2/form_helpers.html&quot;&gt;older versions of this guide&lt;/a&gt;.</source>
          <target state="translated">在Rails 5.1中引入 &lt;code&gt;form_with&lt;/code&gt; 之前，其功能曾经在 &lt;code&gt;form_tag&lt;/code&gt; 和 &lt;code&gt;form_for&lt;/code&gt; 之间进行拆分。两者现在都已弃用。有关其用法的文档可在&lt;a href=&quot;https://guides.rubyonrails.org/v5.2/form_helpers.html&quot;&gt;本指南的旧版本中&lt;/a&gt;找到。</target>
        </trans-unit>
        <trans-unit id="12627681aa34b60f834bdbb239cdfeea9abab3d0" translate="yes" xml:space="preserve">
          <source>Before and around callbacks are called in the order that they are set; after callbacks are called in the reverse order.</source>
          <target state="translated">在回调前和回调周围,按照设置的顺序调用;在回调后,按照相反的顺序调用。</target>
        </trans-unit>
        <trans-unit id="2fdc910d76e3932d8df3d5739e154250f1c98a2c" translate="yes" xml:space="preserve">
          <source>Before attempting to upgrade an existing application, you should be sure you have a good reason to upgrade. You need to balance several factors: the need for new features, the increasing difficulty of finding support for old code, and your available time and skills, to name a few.</source>
          <target state="translated">在尝试升级现有的应用程序之前,你应该确定你有一个很好的理由来升级。你需要平衡几个因素:对新功能的需求,为旧代码寻找支持的难度越来越大,以及你的可用时间和技能,等等。</target>
        </trans-unit>
        <trans-unit id="c786675ac78dac6c58b8e805179d7e0c0f3d52a5" translate="yes" xml:space="preserve">
          <source>Before entering the wrapped block, the Reloader will check whether the running application needs to be reloaded -- for example, because a model's source file has been modified. If it determines a reload is required, it will wait until it's safe, and then do so, before continuing. When the application is configured to always reload regardless of whether any changes are detected, the reload is instead performed at the end of the block.</source>
          <target state="translated">在进入封装块之前,Reloader会检查正在运行的应用程序是否需要重新加载--例如,因为模型的源文件已经被修改。如果它确定需要重载,它将等到安全后再继续。当应用程序被配置为无论是否检测到任何更改都会重载时,重载将在块的最后执行。</target>
        </trans-unit>
        <trans-unit id="92cc49e1a63e26fcb03606431c4cf021fd28643c" translate="yes" xml:space="preserve">
          <source>Before making a request to store a file.</source>
          <target state="translated">在提出存储文件的请求之前。</target>
        </trans-unit>
        <trans-unit id="96bad9625d528f015a284057725eb2d7c03a9c2d" translate="yes" xml:space="preserve">
          <source>Before making a request to your application for direct upload metadata.</source>
          <target state="translated">在向您的申请提出直接上传元数据的请求之前。</target>
        </trans-unit>
        <trans-unit id="d54209975d6e366779eb34c6aa47bd36f14c7b0e" translate="yes" xml:space="preserve">
          <source>Before saving an Active Record object, Rails runs your validations. If these validations produce any errors, Rails does not save the object.</source>
          <target state="translated">在保存 Active Record 对象之前,Rails 会运行您的验证。如果这些验证产生任何错误,Rails就不会保存对象。</target>
        </trans-unit>
        <trans-unit id="54b1eb3df12f690efeb009de1e9d194c02e9747c" translate="yes" xml:space="preserve">
          <source>Before the interceptor can do its job you need to register it using &lt;code&gt;register_interceptor&lt;/code&gt;. You can do this in an initializer file like &lt;code&gt;config/initializers/sandbox_email_interceptor.rb&lt;/code&gt;:</source>
          <target state="translated">在拦截器执行其工作之前，您需要使用 &lt;code&gt;register_interceptor&lt;/code&gt; 对其进行注册。您可以在类似 &lt;code&gt;config/initializers/sandbox_email_interceptor.rb&lt;/code&gt; 的初始化文件中执行此操作：</target>
        </trans-unit>
        <trans-unit id="fd483032d7ea0c68b6f2b1b22679305976657178" translate="yes" xml:space="preserve">
          <source>Before the interceptor can do its job you need to register it with the Action Mailer framework. You can do this in an initializer file &lt;code&gt;config/initializers/sandbox_email_interceptor.rb&lt;/code&gt;</source>
          <target state="translated">在拦截器执行其工作之前，您需要在Action Mailer框架中注册它。您可以在初始化文件 &lt;code&gt;config/initializers/sandbox_email_interceptor.rb&lt;/code&gt; 中进行此操作</target>
        </trans-unit>
        <trans-unit id="61bbc428198e4eed1b347c0bc85e5c8e08c372fe" translate="yes" xml:space="preserve">
          <source>Before the request is sent.</source>
          <target state="translated">在发送请求之前。</target>
        </trans-unit>
        <trans-unit id="85655d1730f3271e69fdc17495cf3a5e4534d688" translate="yes" xml:space="preserve">
          <source>Before the whole ajax business.</source>
          <target state="translated">在整个ajax业务之前。</target>
        </trans-unit>
        <trans-unit id="af606de8bea1b7291f8e6d37069a8c5b33d63bb5" translate="yes" xml:space="preserve">
          <source>Before we customize our workflow, let's first see what our scaffold looks like:</source>
          <target state="translated">在定制工作流程之前,我们先来看看我们的脚手架是什么样子的。</target>
        </trans-unit>
        <trans-unit id="9448bd23e0d779c107e02e8dc01496d49981e1e6" translate="yes" xml:space="preserve">
          <source>Before we dig into more details, let's talk about how validations fit into the big picture of your application.</source>
          <target state="translated">在我们深入了解更多细节之前,我们先来谈谈验证如何融入到你的应用程序的大局中。</target>
        </trans-unit>
        <trans-unit id="64fb9e4dcc61f277a71d85fd7082b915f88e59db" translate="yes" xml:space="preserve">
          <source>Before we go on, let's see our brand new generator description:</source>
          <target state="translated">在继续之前,我们先来看看我们全新的生成器描述。</target>
        </trans-unit>
        <trans-unit id="1f2f3246d7575514388863a9eaa261e40a36cb93" translate="yes" xml:space="preserve">
          <source>Before you install Rails, you should check to make sure that your system has the proper prerequisites installed. These include Ruby and SQLite3.</source>
          <target state="translated">在安装Rails之前,你应该检查一下你的系统是否已经安装了适当的先决条件,包括Ruby和SQLite3。其中包括Ruby和SQLite3。</target>
        </trans-unit>
        <trans-unit id="485d3ff15ea1a8e586a239f8d45022ce1d601ac9" translate="yes" xml:space="preserve">
          <source>Before you install Rails, you should check to make sure that your system has the proper prerequisites installed. These include:</source>
          <target state="translated">在安装Rails之前,你应该检查一下你的系统是否已经安装了适当的先决条件。这些前提条件包括:</target>
        </trans-unit>
        <trans-unit id="842beb51ca9c5417a27f472386d0e0d52dcc074f" translate="yes" xml:space="preserve">
          <source>Before:</source>
          <target state="translated">Before:</target>
        </trans-unit>
        <trans-unit id="8cf0b865ce0821948992d3642584fcb7e901151e" translate="yes" xml:space="preserve">
          <source>Begins a transaction.</source>
          <target state="translated">开始交易。</target>
        </trans-unit>
        <trans-unit id="76b32e11c19446e1dbace2daddb66ca46e38e9b0" translate="yes" xml:space="preserve">
          <source>Begins the transaction (and turns off auto-committing).</source>
          <target state="translated">开始交易(并关闭自动提交)。</target>
        </trans-unit>
        <trans-unit id="cecbd7657f04c4c0e06cb767937c491048185d4a" translate="yes" xml:space="preserve">
          <source>Begins the transaction with the isolation level set. Raises an error by default; adapters that support setting the isolation level should implement this method.</source>
          <target state="translated">以设置的隔离级别开始事务。默认情况下会引发一个错误;支持设置隔离级别的适配器应该实现这个方法。</target>
        </trans-unit>
        <trans-unit id="7f9cabf9e7571243022125db750278f3a3262e72" translate="yes" xml:space="preserve">
          <source>Being an &lt;code&gt;ActiveSupport::Notifications&lt;/code&gt; consumer, &lt;code&gt;ActiveSupport::LogSubscriber&lt;/code&gt; exposes a simple interface to check if instrumented code raises an exception. It is common to log a different message in case of an error, and this can be achieved by extending the previous example:</source>
          <target state="translated">作为 &lt;code&gt;ActiveSupport::Notifications&lt;/code&gt; 使用者， &lt;code&gt;ActiveSupport::LogSubscriber&lt;/code&gt; 公开了一个简单的界面来检查所检测的代码是否引发异常。发生错误时，通常会记录不同的消息，这可以通过扩展前面的示例来实现：</target>
        </trans-unit>
        <trans-unit id="7a4d9b5038b06d02476b832e69dbc48e5e679e43" translate="yes" xml:space="preserve">
          <source>Below each database statement you can see arrows pointing to the specific source filename (and line number) of the method that resulted in a database call. This can help you identify and address performance problems caused by N+1 queries: single database queries that generates multiple additional queries.</source>
          <target state="translated">在每条数据库语句下面,你可以看到箭头指向导致数据库调用的方法的具体源文件名(和行号)。这可以帮助你识别和解决N+1查询引起的性能问题:单个数据库查询,产生多个附加查询。</target>
        </trans-unit>
        <trans-unit id="cbce83db6f9a124adce655f5fe4dcbe863f14635" translate="yes" xml:space="preserve">
          <source>Below is a comprehensive list of all the initializers found in Rails in the order that they are defined (and therefore run in, unless otherwise stated).</source>
          <target state="translated">以下是 Rails 中所有初始化器的完整列表,按照它们被定义的顺序排列(除非另有说明,否则以它们的顺序运行)。</target>
        </trans-unit>
        <trans-unit id="f18490fdbfcdd7f60245bd307197c940895bab95" translate="yes" xml:space="preserve">
          <source>Below is a full-length RSS example actually used on Basecamp:</source>
          <target state="translated">下面是一个在Basecamp上实际使用的完整的RSS例子。</target>
        </trans-unit>
        <trans-unit id="cda90971ef992e478bbe678d30eaa7f8de07a67a" translate="yes" xml:space="preserve">
          <source>Below is a list of the subscription adapters available for end users.</source>
          <target state="translated">以下是可供终端用户使用的订阅适配器列表。</target>
        </trans-unit>
        <trans-unit id="8d63719ab6fb0ad6cf999e2c7170b6bcc2826f99" translate="yes" xml:space="preserve">
          <source>Below lists scenarios that apply to &lt;code&gt;asset_path&lt;/code&gt; whether or not you're using the asset pipeline.</source>
          <target state="translated">下面列出了无论您是否使用资产管道都适用于 &lt;code&gt;asset_path&lt;/code&gt; 的方案。</target>
        </trans-unit>
        <trans-unit id="9ed99e75a9b04f273de29c9fef2bd3fb53d2e2de" translate="yes" xml:space="preserve">
          <source>Benchmark</source>
          <target state="translated">Benchmark</target>
        </trans-unit>
        <trans-unit id="b1c5a3d2419b25693490862e8a8d7af395160a5e" translate="yes" xml:space="preserve">
          <source>Benchmark::ms</source>
          <target state="translated">Benchmark::ms</target>
        </trans-unit>
        <trans-unit id="61c7d2483623bf49a95324c835eeeea3d896ceed" translate="yes" xml:space="preserve">
          <source>BenchmarkHelper</source>
          <target state="translated">BenchmarkHelper</target>
        </trans-unit>
        <trans-unit id="ab531d87837a41431e7812354e2bb816e9f86a50" translate="yes" xml:space="preserve">
          <source>Benchmarkable</source>
          <target state="translated">Benchmarkable</target>
        </trans-unit>
        <trans-unit id="bf16fd62f23795238d1a429513c931501554ad9e" translate="yes" xml:space="preserve">
          <source>Benchmarkable#benchmark</source>
          <target state="translated">Benchmarkable#benchmark</target>
        </trans-unit>
        <trans-unit id="37cb47e161f37d441638b3086246ee8f23aeed8f" translate="yes" xml:space="preserve">
          <source>Besides &lt;code&gt;:only_integer&lt;/code&gt;, this helper also accepts the following options to add constraints to acceptable values:</source>
          <target state="translated">除了 &lt;code&gt;:only_integer&lt;/code&gt; 之外，此帮助器还接受以下选项以将约束添加到可接受的值：</target>
        </trans-unit>
        <trans-unit id="c47bcc3d8b6c01cc2afac065bdf4bbff07cbf5d3" translate="yes" xml:space="preserve">
          <source>Besides &lt;code&gt;change_column&lt;/code&gt;, the &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-change_column_null&quot;&gt;&lt;code&gt;change_column_null&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-change_column_default&quot;&gt;&lt;code&gt;change_column_default&lt;/code&gt;&lt;/a&gt; methods are used specifically to change a not null constraint and default values of a column.</source>
          <target state="translated">除了 &lt;code&gt;change_column&lt;/code&gt; 之外，&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-change_column_null&quot;&gt; &lt;code&gt;change_column_null&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-change_column_default&quot;&gt; &lt;code&gt;change_column_default&lt;/code&gt; &lt;/a&gt;方法还专门用于更改列的非null约束和默认值。</target>
        </trans-unit>
        <trans-unit id="2f8fcc5301064d4d18d8e8349dd2ca12262510fc" translate="yes" xml:space="preserve">
          <source>Besides &lt;code&gt;change_column&lt;/code&gt;, the &lt;code&gt;change_column_null&lt;/code&gt; and &lt;code&gt;change_column_default&lt;/code&gt; methods are used specifically to change a not null constraint and default values of a column.</source>
          <target state="translated">除了 &lt;code&gt;change_column&lt;/code&gt; 之外， &lt;code&gt;change_column_null&lt;/code&gt; 和 &lt;code&gt;change_column_default&lt;/code&gt; 方法还专门用于更改列的非null约束和默认值。</target>
        </trans-unit>
        <trans-unit id="98fb889f2003486a07da5a074831b5a6181704ef" translate="yes" xml:space="preserve">
          <source>Besides providing the same configuration as &lt;a href=&quot;engine&quot;&gt;&lt;code&gt;Rails::Engine&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;railtie&quot;&gt;&lt;code&gt;Rails::Railtie&lt;/code&gt;&lt;/a&gt;, the application object has several specific configurations, for example &amp;ldquo;cache_classes&amp;rdquo;, &amp;ldquo;consider_all_requests_local&amp;rdquo;, &amp;ldquo;filter_parameters&amp;rdquo;, &amp;ldquo;logger&amp;rdquo; and so forth.</source>
          <target state="translated">除了提供与&lt;a href=&quot;engine&quot;&gt; &lt;code&gt;Rails::Engine&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;railtie&quot;&gt; &lt;code&gt;Rails::Railtie&lt;/code&gt; &lt;/a&gt;相同的配置外，应用程序对象还具有几种特定的配置，例如&amp;ldquo; cache_classes&amp;rdquo;，&amp;ldquo; consider_all_requests_local&amp;rdquo;，&amp;ldquo; filter_parameters&amp;rdquo;，&amp;ldquo; logger&amp;rdquo;等。</target>
        </trans-unit>
        <trans-unit id="b273b9e310b9983e2ceca1f1acae2be6dadbf579" translate="yes" xml:space="preserve">
          <source>Besides providing the same configuration as &lt;a href=&quot;engine&quot;&gt;Rails::Engine&lt;/a&gt; and &lt;a href=&quot;railtie&quot;&gt;Rails::Railtie&lt;/a&gt;, the application object has several specific configurations, for example &amp;ldquo;cache_classes&amp;rdquo;, &amp;ldquo;consider_all_requests_local&amp;rdquo;, &amp;ldquo;filter_parameters&amp;rdquo;, &amp;ldquo;logger&amp;rdquo; and so forth.</source>
          <target state="translated">除了提供与&lt;a href=&quot;engine&quot;&gt;Rails :: Engine&lt;/a&gt;和&lt;a href=&quot;railtie&quot;&gt;Rails :: Railtie&lt;/a&gt;相同的配置之外，该应用程序对象还具有几种特定的配置，例如&amp;ldquo; cache_classes&amp;rdquo;，&amp;ldquo; consider_all_requests_local&amp;rdquo;，&amp;ldquo; filter_parameters&amp;rdquo;，&amp;ldquo; logger&amp;rdquo;等。</target>
        </trans-unit>
        <trans-unit id="2da3343850e81078f39f15d9792eada74f620161" translate="yes" xml:space="preserve">
          <source>Besides that, it is &lt;em&gt;important to know what you are doing when building response headers partly based on user input.&lt;/em&gt; For example you want to redirect the user back to a specific page. To do that you introduced a &quot;referer&quot; field in a form to redirect to the given address:</source>
          <target state="translated">除此之外，&lt;em&gt;了解部分基于用户输入的响应标头时您正在做什么&lt;/em&gt;很&lt;em&gt;重要。&lt;/em&gt;例如，您想将用户重定向回特定页面。为此，您在表单中引入了&amp;ldquo;引荐来源&amp;rdquo;字段以重定向到给定地址：</target>
        </trans-unit>
        <trans-unit id="94d2a0b179f3c04d0eabddc912fd9ef0b6136018" translate="yes" xml:space="preserve">
          <source>Besides that, one can use &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Hash.html#method-i-deep_stringify_keys&quot;&gt;&lt;code&gt;deep_stringify_keys&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Hash.html#method-i-deep_stringify_keys-21&quot;&gt;&lt;code&gt;deep_stringify_keys!&lt;/code&gt;&lt;/a&gt; to stringify all the keys in the given hash and all the hashes nested in it. An example of the result is:</source>
          <target state="translated">除此之外，还可以使用&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Hash.html#method-i-deep_stringify_keys&quot;&gt; &lt;code&gt;deep_stringify_keys&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Hash.html#method-i-deep_stringify_keys-21&quot;&gt; &lt;code&gt;deep_stringify_keys!&lt;/code&gt; &lt;/a&gt;对给定哈希值和嵌套在其中的所有哈希值中的所有键进行字符串化处理。结果的示例是：</target>
        </trans-unit>
        <trans-unit id="d2fd2411f885cbbaa67bb284ace9018d15a70cd2" translate="yes" xml:space="preserve">
          <source>Besides that, one can use &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Hash.html#method-i-deep_symbolize_keys&quot;&gt;&lt;code&gt;deep_symbolize_keys&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Hash.html#method-i-deep_symbolize_keys-21&quot;&gt;&lt;code&gt;deep_symbolize_keys!&lt;/code&gt;&lt;/a&gt; to symbolize all the keys in the given hash and all the hashes nested in it. An example of the result is:</source>
          <target state="translated">除此之外，还可以使用&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Hash.html#method-i-deep_symbolize_keys&quot;&gt; &lt;code&gt;deep_symbolize_keys&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/Hash.html#method-i-deep_symbolize_keys-21&quot;&gt; &lt;code&gt;deep_symbolize_keys!&lt;/code&gt; &lt;/a&gt;表示给定哈希中的所有键以及嵌套在其中的所有哈希。结果的示例是：</target>
        </trans-unit>
        <trans-unit id="8545eb43f2284081f46fb7f0c8953acca8bd63e1" translate="yes" xml:space="preserve">
          <source>Besides that, one can use &lt;code&gt;deep_stringify_keys&lt;/code&gt; and &lt;code&gt;deep_stringify_keys!&lt;/code&gt; to stringify all the keys in the given hash and all the hashes nested into it. An example of the result is:</source>
          <target state="translated">除此之外，还可以使用 &lt;code&gt;deep_stringify_keys&lt;/code&gt; 和 &lt;code&gt;deep_stringify_keys!&lt;/code&gt; 对给定哈希值和嵌套在其中的所有哈希值中的所有键进行字符串化处理。结果的示例是：</target>
        </trans-unit>
        <trans-unit id="214e4b29afd4f83b2e93b3009d2f09bb58dfcb40" translate="yes" xml:space="preserve">
          <source>Besides that, one can use &lt;code&gt;deep_symbolize_keys&lt;/code&gt; and &lt;code&gt;deep_symbolize_keys!&lt;/code&gt; to symbolize all the keys in the given hash and all the hashes nested into it. An example of the result is:</source>
          <target state="translated">除此之外，还可以使用 &lt;code&gt;deep_symbolize_keys&lt;/code&gt; 和 &lt;code&gt;deep_symbolize_keys!&lt;/code&gt; 表示给定哈希中的所有键以及嵌套在其中的所有哈希。结果的示例是：</target>
        </trans-unit>
        <trans-unit id="dc1d2796081e7e123cf618a79177fc8b8f7db0a7" translate="yes" xml:space="preserve">
          <source>Besides the &lt;code&gt;Railtie&lt;/code&gt; configuration which is shared across the application, in a &lt;code&gt;Rails::Engine&lt;/code&gt; you can access &lt;code&gt;autoload_paths&lt;/code&gt;, &lt;code&gt;eager_load_paths&lt;/code&gt; and &lt;code&gt;autoload_once_paths&lt;/code&gt;, which, differently from a &lt;code&gt;Railtie&lt;/code&gt;, are scoped to the current engine.</source>
          <target state="translated">除了在应用程序之间共享的 &lt;code&gt;Railtie&lt;/code&gt; 配置之外，在 &lt;code&gt;Rails::Engine&lt;/code&gt; 您还可以访问 &lt;code&gt;autoload_paths&lt;/code&gt; ， &lt;code&gt;eager_load_paths&lt;/code&gt; 和 &lt;code&gt;autoload_once_paths&lt;/code&gt; ，这与 &lt;code&gt;Railtie&lt;/code&gt; 不同，它们的作用域是当前引擎。</target>
        </trans-unit>
        <trans-unit id="aab16ad223bf98798817cb7f4151913493253843" translate="yes" xml:space="preserve">
          <source>Besides the overwritable callback methods, it's also possible to register callbacks through the use of the callback macros. Their main advantage is that the macros add behavior into a callback queue that is kept intact down through an inheritance hierarchy.</source>
          <target state="translated">除了可覆盖的回调方法,还可以通过使用回调宏来注册回调。它们的主要优点是,宏将行为添加到回调队列中,通过继承层次结构向下保持完整。</target>
        </trans-unit>
        <trans-unit id="ca2aa23b00cdcad389a549b63fca4775d0be28a0" translate="yes" xml:space="preserve">
          <source>Besides the overwritable callback methods, it's also possible to register callbacks through the use of the callback macros. Their main advantage is that the macros add behavior into a callback queue that is kept intact through an inheritance hierarchy.</source>
          <target state="translated">除了可覆盖的回调方法,还可以通过使用回调宏来注册回调。它们的主要优点是,宏将行为添加到回调队列中,通过继承层次结构保持完整。</target>
        </trans-unit>
        <trans-unit id="21156cd53a58551456986b2a836ef2e22d98636a" translate="yes" xml:space="preserve">
          <source>Besides the standard &lt;code&gt;assets/*&lt;/code&gt; paths, additional (fully qualified) paths can be added to the pipeline in &lt;code&gt;config/initializers/assets.rb&lt;/code&gt;. For example:</source>
          <target state="translated">除了标准 &lt;code&gt;assets/*&lt;/code&gt; 路径之外，还可以在 &lt;code&gt;config/initializers/assets.rb&lt;/code&gt; 中将其他（完全限定）路径添加到管道中。例如：</target>
        </trans-unit>
        <trans-unit id="93c5a13cb41e0090ea6481efce8635ed8f60c844" translate="yes" xml:space="preserve">
          <source>Besides these usual middleware, you can add your own by using the &lt;code&gt;config.middleware.use&lt;/code&gt; method:</source>
          <target state="translated">除了这些常用的中间件之外，您还可以使用 &lt;code&gt;config.middleware.use&lt;/code&gt; 方法添加自己的中间件：</target>
        </trans-unit>
        <trans-unit id="e5ebfc34b1b26031e69dcc5440a8100e93afd306" translate="yes" xml:space="preserve">
          <source>Besides using &amp;ldquo;DEFAULTS&amp;rdquo;, you can also specify what fixtures will be ignored by setting &amp;ldquo;ignore&amp;rdquo; in &amp;ldquo;_fixture&amp;rdquo; section.</source>
          <target state="translated">除了使用&amp;ldquo; DEFAULTS&amp;rdquo;外，您还可以通过在&amp;ldquo; _fixture&amp;rdquo;部分中设置&amp;ldquo; ignore&amp;rdquo;来指定要忽略的灯具。</target>
        </trans-unit>
        <trans-unit id="efb3be83bd096c085ea66d166340ff1dbac9ea78" translate="yes" xml:space="preserve">
          <source>Beware of configurations like</source>
          <target state="translated">小心以下配置</target>
        </trans-unit>
        <trans-unit id="3f40c83c125e2729add8d9adae11da2d6301551c" translate="yes" xml:space="preserve">
          <source>Bi-directional Associations</source>
          <target state="translated">双向关联</target>
        </trans-unit>
        <trans-unit id="00caaf1ca5c6603e4daf7784ab89b990d28e81b3" translate="yes" xml:space="preserve">
          <source>Bi-directional associations</source>
          <target state="translated">双向联系</target>
        </trans-unit>
        <trans-unit id="92438720ccb09a8bc6b241c5b27a00fb72144c25" translate="yes" xml:space="preserve">
          <source>BigInteger</source>
          <target state="translated">BigInteger</target>
        </trans-unit>
        <trans-unit id="66639f7d455dd71faa9147f5d69e5ce885d8bebd" translate="yes" xml:space="preserve">
          <source>Binary</source>
          <target state="translated">Binary</target>
        </trans-unit>
        <trans-unit id="cde7d7e61529b7ae189c0763f21d8d4410fe2064" translate="yes" xml:space="preserve">
          <source>Bind parameters</source>
          <target state="translated">绑定参数</target>
        </trans-unit>
        <trans-unit id="494b23be585e2de38fd7c056357b7c026bef5fad" translate="yes" xml:space="preserve">
          <source>Binding a Form to an Object</source>
          <target state="translated">将表单绑定到对象</target>
        </trans-unit>
        <trans-unit id="e1ec8af5ed0ac3706706e7ca0257fb8472997bd9" translate="yes" xml:space="preserve">
          <source>Bit String Types</source>
          <target state="translated">位串类型</target>
        </trans-unit>
        <trans-unit id="5b568c1cb1f852ea2c03b68238b8fcca647d77e2" translate="yes" xml:space="preserve">
          <source>Bite-sized separation of concerns</source>
          <target state="translated">分清关切事项的大小</target>
        </trans-unit>
        <trans-unit id="205071dffbd46bb5d063897ef7efc85392333d51" translate="yes" xml:space="preserve">
          <source>Blob#audio?</source>
          <target state="translated">Blob#audio?</target>
        </trans-unit>
        <trans-unit id="c0f2e5379fe8f9e9b75ea79286523ea934bffbee" translate="yes" xml:space="preserve">
          <source>Blob#delete</source>
          <target state="translated">Blob#delete</target>
        </trans-unit>
        <trans-unit id="9f7aeeabc9608a7ac413662a854375f21e08ac0d" translate="yes" xml:space="preserve">
          <source>Blob#download</source>
          <target state="translated">Blob#download</target>
        </trans-unit>
        <trans-unit id="551cda9c9f08f35bee9b38fd7ca0f206df1ad8da" translate="yes" xml:space="preserve">
          <source>Blob#filename</source>
          <target state="translated">Blob#filename</target>
        </trans-unit>
        <trans-unit id="062577b47bd61636fd48a4da0b2cacc173fbd426" translate="yes" xml:space="preserve">
          <source>Blob#image?</source>
          <target state="translated">Blob#image?</target>
        </trans-unit>
        <trans-unit id="1a615dbc6ac1b528463c96c4c0d85da171d09499" translate="yes" xml:space="preserve">
          <source>Blob#key</source>
          <target state="translated">Blob#key</target>
        </trans-unit>
        <trans-unit id="6f6874ae3b2e04411de9ef49300a521a64c511e7" translate="yes" xml:space="preserve">
          <source>Blob#open</source>
          <target state="translated">Blob#open</target>
        </trans-unit>
        <trans-unit id="461c5b7e462d5d34f2018fe8df6f9dfde7473f25" translate="yes" xml:space="preserve">
          <source>Blob#purge</source>
          <target state="translated">Blob#purge</target>
        </trans-unit>
        <trans-unit id="8057966b9902bfb47c709f89bb8c52c3985e3092" translate="yes" xml:space="preserve">
          <source>Blob#purge_later</source>
          <target state="translated">Blob#purge_later</target>
        </trans-unit>
        <trans-unit id="a1b14a8d320d930b469d6a28afcc8b9dd347c79f" translate="yes" xml:space="preserve">
          <source>Blob#service_headers_for_direct_upload</source>
          <target state="translated">Blob#service_headers_for_direct_upload</target>
        </trans-unit>
        <trans-unit id="cc0289228c4a049664a83df09fb12c63b4921c50" translate="yes" xml:space="preserve">
          <source>Blob#service_url</source>
          <target state="translated">Blob#service_url</target>
        </trans-unit>
        <trans-unit id="02355ecb60f2141e333df20e5d691ec0d5c9afb1" translate="yes" xml:space="preserve">
          <source>Blob#service_url_for_direct_upload</source>
          <target state="translated">Blob#service_url_for_direct_upload</target>
        </trans-unit>
        <trans-unit id="362c4c414702a744987ca294e1506e200a1595f1" translate="yes" xml:space="preserve">
          <source>Blob#signed_id</source>
          <target state="translated">Blob#signed_id</target>
        </trans-unit>
        <trans-unit id="255279f90ecffe1a02e8b5ee3248cf30ffa88c3d" translate="yes" xml:space="preserve">
          <source>Blob#text?</source>
          <target state="translated">Blob#text?</target>
        </trans-unit>
        <trans-unit id="897ee09a33aac5a498a01550ae49c0188fd56704" translate="yes" xml:space="preserve">
          <source>Blob#upload</source>
          <target state="translated">Blob#upload</target>
        </trans-unit>
        <trans-unit id="15057224bf777f3a288148cf8f86da801cbf1f10" translate="yes" xml:space="preserve">
          <source>Blob#video?</source>
          <target state="translated">Blob#video?</target>
        </trans-unit>
        <trans-unit id="6fd4d098cec060ec874c59bdef537fd96dc16b61" translate="yes" xml:space="preserve">
          <source>Blob::Analyzable</source>
          <target state="translated">Blob::Analyzable</target>
        </trans-unit>
        <trans-unit id="9c1fd8002446938076feb90864262fe6c339d90e" translate="yes" xml:space="preserve">
          <source>Blob::Analyzable#analyze</source>
          <target state="translated">Blob::Analyzable#analyze</target>
        </trans-unit>
        <trans-unit id="b1489080533fb50a06a9d00386131e20f9c76830" translate="yes" xml:space="preserve">
          <source>Blob::Analyzable#analyze_later</source>
          <target state="translated">Blob::Analyzable#analyze_later</target>
        </trans-unit>
        <trans-unit id="bf6d294fd2b51394dbe6cfed00e9a8801f3f88a9" translate="yes" xml:space="preserve">
          <source>Blob::Analyzable#analyzed?</source>
          <target state="translated">Blob::Analyzable#analyzed?</target>
        </trans-unit>
        <trans-unit id="9cce94030261fa09b1ac6e88485076cd9c5ed278" translate="yes" xml:space="preserve">
          <source>Blob::Representable</source>
          <target state="translated">Blob::Representable</target>
        </trans-unit>
        <trans-unit id="09f9bffe6fb87bbf452510982d2455607f9093fa" translate="yes" xml:space="preserve">
          <source>Blob::Representable#preview</source>
          <target state="translated">Blob::Representable#preview</target>
        </trans-unit>
        <trans-unit id="c7c04d7f40a5d6f44cc5c249f0a4b5cb3e437fbb" translate="yes" xml:space="preserve">
          <source>Blob::Representable#previewable?</source>
          <target state="translated">Blob::Representable#previewable?</target>
        </trans-unit>
        <trans-unit id="d0ebd2dcd0d1df27f1b9a5b4d8df9983a8266e37" translate="yes" xml:space="preserve">
          <source>Blob::Representable#representable?</source>
          <target state="translated">Blob::Representable#representable?</target>
        </trans-unit>
        <trans-unit id="ad296e55f203a0159a85ad82d638c761761aa405" translate="yes" xml:space="preserve">
          <source>Blob::Representable#representation</source>
          <target state="translated">Blob::Representable#representation</target>
        </trans-unit>
        <trans-unit id="f91393b361dc460a92b8e08b1040fd88d7f96bd0" translate="yes" xml:space="preserve">
          <source>Blob::Representable#variable?</source>
          <target state="translated">Blob::Representable#variable?</target>
        </trans-unit>
        <trans-unit id="a9f010d40020c6bfdbfefb34d563ca6551c7016f" translate="yes" xml:space="preserve">
          <source>Blob::Representable#variant</source>
          <target state="translated">Blob::Representable#variant</target>
        </trans-unit>
        <trans-unit id="eb3f2c7f44600307c9b1d1eda69f0dc33e70aa0f" translate="yes" xml:space="preserve">
          <source>Blob::build_after_upload</source>
          <target state="translated">Blob::build_after_upload</target>
        </trans-unit>
        <trans-unit id="f7b39f785df5648619be5fcd6f09e23692041334" translate="yes" xml:space="preserve">
          <source>Blob::create_after_upload!</source>
          <target state="translated">Blob::create_after_upload!</target>
        </trans-unit>
        <trans-unit id="4ab8dd4f5cc417b4eef20203324810a7b0cfab8d" translate="yes" xml:space="preserve">
          <source>Blob::create_before_direct_upload!</source>
          <target state="translated">Blob::create_before_direct_upload!</target>
        </trans-unit>
        <trans-unit id="4c904b51f9f8216fa16c6efc56f81c6bf405d9f8" translate="yes" xml:space="preserve">
          <source>Blob::find_signed</source>
          <target state="translated">Blob::find_signed</target>
        </trans-unit>
        <trans-unit id="5465f9647c35ce9168216bde522e726d2ad6c7da" translate="yes" xml:space="preserve">
          <source>Blob::generate_unique_secure_token</source>
          <target state="translated">Blob::generate_unique_secure_token</target>
        </trans-unit>
        <trans-unit id="9ca19de4a7dd7c7132b16051d0812df797cb1369" translate="yes" xml:space="preserve">
          <source>Blobs are intended to be immutable in as-so-far as their reference to a specific file goes. You're allowed to update a blob's metadata on a subsequent pass, but you should not update the key or change the uploaded file. If you need to create a derivative or otherwise change the blob, simply create a new blob and purge the old one.</source>
          <target state="translated">Blob的目的是不可改变的,因为它们对特定文件的引用是不可改变的。你可以在后续的传递中更新一个blob的元数据,但你不应该更新密钥或改变上传的文件。如果你需要创建一个衍生物或以其他方式改变blob,只需创建一个新的blob并清除旧的。</target>
        </trans-unit>
        <trans-unit id="a854d4455429804c5c9b3fe43297cfec95f5dc00" translate="yes" xml:space="preserve">
          <source>BlobsController</source>
          <target state="translated">BlobsController</target>
        </trans-unit>
        <trans-unit id="b2329837c803e87699d4ca14c33c780ec8f32032" translate="yes" xml:space="preserve">
          <source>BlobsController#show</source>
          <target state="translated">BlobsController#show</target>
        </trans-unit>
        <trans-unit id="557758c8174336d6369c72e1c97a88e6c9ef1fba" translate="yes" xml:space="preserve">
          <source>Block Parameters</source>
          <target state="translated">块参数</target>
        </trans-unit>
        <trans-unit id="c105cc5dcc58a17f4df8de56aee738e2affa3ce3" translate="yes" xml:space="preserve">
          <source>Block form</source>
          <target state="translated">块状</target>
        </trans-unit>
        <trans-unit id="87fed2a8d44961d99d69ac5ed105137f7b3ab238" translate="yes" xml:space="preserve">
          <source>Block form, with shorthand</source>
          <target state="translated">块状,有速记</target>
        </trans-unit>
        <trans-unit id="bc86d3933fd780e0de8527decc560ab444e91b5a" translate="yes" xml:space="preserve">
          <source>Blocks and ignores any exception passed as argument if raised within the block.</source>
          <target state="translated">屏蔽并忽略任何作为参数传递的异常,如果是在块中提出的。</target>
        </trans-unit>
        <trans-unit id="dc0fdc434d42e79f807c0abff3555a02772c809b" translate="yes" xml:space="preserve">
          <source>Blog::Engine.load_seed</source>
          <target state="translated">Blog::Engine.load_seed</target>
        </trans-unit>
        <trans-unit id="e27a5cc1456d9d83ae27e658d8cec24c9f939fe3" translate="yes" xml:space="preserve">
          <source>Bob browses a message board and views a post from a hacker where there is a crafted HTML image element. The element references a command in Bob's project management application, rather than an image file: &lt;code&gt;&amp;lt;img src=&quot;http://www.webapp.com/project/1/destroy&quot;&amp;gt;&lt;/code&gt;</source>
          <target state="translated">鲍勃浏览留言板并查看来自黑客的帖子，其中包含精心制作的HTML图像元素。该元素引用Bob的项目管理应用程序中的命令，而不是图像文件： &lt;code&gt;&amp;lt;img src=&quot;http://www.webapp.com/project/1/destroy&quot;&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b4022afa55f9be446626514bc35ad446e21a73c5" translate="yes" xml:space="preserve">
          <source>Bob doesn't notice the attack - but a few days later he finds out that project number one is gone.</source>
          <target state="translated">鲍勃并没有注意到这次攻击--但几天后,他发现一号项目不见了。</target>
        </trans-unit>
        <trans-unit id="d8dc330cd94b38663a068b0a6e6888f78ac2225a" translate="yes" xml:space="preserve">
          <source>Bob's session at &lt;code&gt;www.webapp.com&lt;/code&gt; is still alive, because he didn't log out a few minutes ago.</source>
          <target state="translated">Bob在 &lt;code&gt;www.webapp.com&lt;/code&gt; 上的会话仍然有效，因为他几分钟前没有注销。</target>
        </trans-unit>
        <trans-unit id="9ceebac60b7316be982d3af3f57d4ebc374e06a4" translate="yes" xml:space="preserve">
          <source>Book, ScaryBook and GoodBook will all use the same connection pool to &amp;ldquo;library_db&amp;rdquo; while Author, BankAccount, and any other models you create will use the default connection pool to &amp;ldquo;my_application&amp;rdquo;.</source>
          <target state="translated">Book，ScaryBook和GoodBook都将对&amp;ldquo; library_db&amp;rdquo;使用相同的连接池，而Author，BankAccount和您创建的任何其他模型都将对&amp;ldquo; my_application&amp;rdquo;使用默认连接池。</target>
        </trans-unit>
        <trans-unit id="b76ff4906f33c2dd97ddd929b9662ba8cac6174c" translate="yes" xml:space="preserve">
          <source>Boolean</source>
          <target state="translated">Boolean</target>
        </trans-unit>
        <trans-unit id="3257a1cf164a185295a19a39c20a7d45dfb48804" translate="yes" xml:space="preserve">
          <source>Boolean hooks</source>
          <target state="translated">布尔钩子</target>
        </trans-unit>
        <trans-unit id="a2e5b8bbbb9aea3028b29ecd4d2f7ebded715eb5" translate="yes" xml:space="preserve">
          <source>Boolean to anchor a &lt;code&gt;match&lt;/code&gt; pattern. Default is true. When set to false, the pattern matches any request prefixed with the given path.</source>
          <target state="translated">布尔值以锚定 &lt;code&gt;match&lt;/code&gt; 模式。默认为true。设置为false时，该模式将匹配以给定路径为前缀的任何请求。</target>
        </trans-unit>
        <trans-unit id="a387f88ccec79b881befdd016fd4a1542c94b2a3" translate="yes" xml:space="preserve">
          <source>Booting process</source>
          <target state="translated">开机过程</target>
        </trans-unit>
        <trans-unit id="0f3cdb97cafb8d382ef2a9a51b6459ca14a7428d" translate="yes" xml:space="preserve">
          <source>Bootsnap</source>
          <target state="translated">Bootsnap</target>
        </trans-unit>
        <trans-unit id="3f52d991339eb605a8bb20e3530ef3385f78c68e" translate="yes" xml:space="preserve">
          <source>Bootsnap should be at least version 1.4.2.</source>
          <target state="translated">Bootsnap应该至少是1.4.2版本。</target>
        </trans-unit>
        <trans-unit id="ba98b2298a4f99c1a5f946cf1a466dec784a8eaf" translate="yes" xml:space="preserve">
          <source>Both &lt;a href=&quot;../persistence#method-i-save&quot;&gt;#save&lt;/a&gt; and &lt;a href=&quot;../persistence#method-i-destroy&quot;&gt;#destroy&lt;/a&gt; come wrapped in a transaction that ensures that whatever you do in validations or callbacks will happen under its protected cover. So you can use validations to check for values that the transaction depends on or you can raise exceptions in the callbacks to rollback, including &lt;code&gt;after_*&lt;/code&gt; callbacks.</source>
          <target state="translated">无论&lt;a href=&quot;../persistence#method-i-save&quot;&gt;#save&lt;/a&gt;和&lt;a href=&quot;../persistence#method-i-destroy&quot;&gt;#destroy&lt;/a&gt;进来包裹在一个交易，确保，无论你在验证或回调做将其保护盖下发生。因此，您可以使用验证来检查事务所依赖的值，也可以在回滚的回调（包括 &lt;code&gt;after_*&lt;/code&gt; 回调）中引发异常。</target>
        </trans-unit>
        <trans-unit id="157db79c19de4ef2600c830de151e35019c09b78" translate="yes" xml:space="preserve">
          <source>Both &lt;code&gt;ActionController::Base&lt;/code&gt; and &lt;code&gt;ActionController::API&lt;/code&gt; include &lt;code&gt;ActionController::Renderers::All&lt;/code&gt;, making all renderers available in the controller. See &lt;code&gt;Renderers::RENDERERS&lt;/code&gt; and &lt;code&gt;Renderers.add&lt;/code&gt;.</source>
          <target state="translated">双方 &lt;code&gt;ActionController::Base&lt;/code&gt; 和 &lt;code&gt;ActionController::API&lt;/code&gt; 包括 &lt;code&gt;ActionController::Renderers::All&lt;/code&gt; ，使得控制器中可用的所有渲染器。参见 &lt;code&gt;Renderers::RENDERERS&lt;/code&gt; 和 &lt;code&gt;Renderers.add&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8f1722a92dd8d1338653ed4eebeea1daf12b85dd" translate="yes" xml:space="preserve">
          <source>Both &lt;code&gt;has_many&lt;/code&gt; and &lt;code&gt;has_many :through&lt;/code&gt; dependencies default to the &lt;code&gt;:delete_all&lt;/code&gt; strategy if the &lt;code&gt;:dependent&lt;/code&gt; option is set to &lt;code&gt;:destroy&lt;/code&gt;. Records are not instantiated and callbacks will not be fired.</source>
          <target state="translated">双方 &lt;code&gt;has_many&lt;/code&gt; 和 &lt;code&gt;has_many :through&lt;/code&gt; 依赖默认为 &lt;code&gt;:delete_all&lt;/code&gt; 策略如果 &lt;code&gt;:dependent&lt;/code&gt; 选项设置为 &lt;code&gt;:destroy&lt;/code&gt; 。记录不会实例化，并且不会触发回调。</target>
        </trans-unit>
        <trans-unit id="9c449a1ef47562c98d0448717ef51832fa3ca22b" translate="yes" xml:space="preserve">
          <source>Both &lt;code&gt;next_week&lt;/code&gt; and &lt;code&gt;prev_week&lt;/code&gt; work as expected when &lt;code&gt;Date.beginning_of_week&lt;/code&gt; or &lt;code&gt;config.beginning_of_week&lt;/code&gt; are set.</source>
          <target state="translated">无论 &lt;code&gt;next_week&lt;/code&gt; 和 &lt;code&gt;prev_week&lt;/code&gt; 当预期工作 &lt;code&gt;Date.beginning_of_week&lt;/code&gt; 或 &lt;code&gt;config.beginning_of_week&lt;/code&gt; 设置。</target>
        </trans-unit>
        <trans-unit id="02bae45efe6ec46063b3b1f636a983705608e04f" translate="yes" xml:space="preserve">
          <source>Both &lt;code&gt;trix&lt;/code&gt; and &lt;code&gt;@rails/actiontext&lt;/code&gt; should be required in your JavaScript pack.</source>
          <target state="translated">无论 &lt;code&gt;trix&lt;/code&gt; 和 &lt;code&gt;@rails/actiontext&lt;/code&gt; 应该在你的JavaScript包是必需的。</target>
        </trans-unit>
        <trans-unit id="c616db3741cb94f149aa5385fa6daf80636bcc43" translate="yes" xml:space="preserve">
          <source>Both calls delete the affected posts all at once with a single DELETE statement. If you need to destroy dependent associations or call your &lt;code&gt;before_*&lt;/code&gt; or &lt;code&gt;after_destroy&lt;/code&gt; callbacks, use the &lt;a href=&quot;relation#method-i-destroy_all&quot;&gt;&lt;code&gt;destroy_all&lt;/code&gt;&lt;/a&gt; method instead.</source>
          <target state="translated">这两个调用都使用单个DELETE语句一次删除所有受影响的帖子。如果您需要销毁相关联的关联或调用 &lt;code&gt;before_*&lt;/code&gt; 或 &lt;code&gt;after_destroy&lt;/code&gt; 回调，请使用&lt;a href=&quot;relation#method-i-destroy_all&quot;&gt; &lt;code&gt;destroy_all&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="bfbde4b4ac193db335adf055e0fc97e17822d93d" translate="yes" xml:space="preserve">
          <source>Both calls delete the affected posts all at once with a single DELETE statement. If you need to destroy dependent associations or call your &lt;code&gt;before_*&lt;/code&gt; or &lt;code&gt;after_destroy&lt;/code&gt; callbacks, use the &lt;a href=&quot;relation#method-i-destroy_all&quot;&gt;destroy_all&lt;/a&gt; method instead.</source>
          <target state="translated">两个调用都使用单个DELETE语句一次删除所有受影响的帖子。如果需要销毁相关联的关联或调用 &lt;code&gt;before_*&lt;/code&gt; 或 &lt;code&gt;after_destroy&lt;/code&gt; 回调，请使用&lt;a href=&quot;relation#method-i-destroy_all&quot;&gt;destroy_all&lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="8db04ae9d0d3c476f1fd3f74ac1626f7f8ce6ff6" translate="yes" xml:space="preserve">
          <source>Both express a 1-1 relationship. The difference is mostly where to place the foreign key, which goes on the table for the class declaring the &lt;a href=&quot;classmethods#method-i-belongs_to&quot;&gt;&lt;code&gt;belongs_to&lt;/code&gt;&lt;/a&gt; relationship.</source>
          <target state="translated">两者都表示1-1关系。所不同的是大多是在哪里放置外键，这那张表类声明&lt;a href=&quot;classmethods#method-i-belongs_to&quot;&gt; &lt;code&gt;belongs_to&lt;/code&gt; 的&lt;/a&gt;关系。</target>
        </trans-unit>
        <trans-unit id="6556bf08884e4feb1db798537f2593fa18135073" translate="yes" xml:space="preserve">
          <source>Both express a 1-1 relationship. The difference is mostly where to place the foreign key, which goes on the table for the class declaring the &lt;a href=&quot;classmethods#method-i-belongs_to&quot;&gt;belongs_to&lt;/a&gt; relationship.</source>
          <target state="translated">两者都表示1-1关系。所不同的是大多是在哪里放置外键，这那张表类声明&lt;a href=&quot;classmethods#method-i-belongs_to&quot;&gt;belongs_to的&lt;/a&gt;关系。</target>
        </trans-unit>
        <trans-unit id="4beceb001434626ae6adf3ec55abf2131e329d65" translate="yes" xml:space="preserve">
          <source>Both families of helpers use the same core set of functions to generate the individual select tags and so both accept largely the same options. In particular, by default Rails will generate year options 5 years either side of the current year. If this is not an appropriate range, the &lt;code&gt;:start_year&lt;/code&gt; and &lt;code&gt;:end_year&lt;/code&gt; options override this. For an exhaustive list of the available options, refer to the &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionView/Helpers/DateHelper.html&quot;&gt;API documentation&lt;/a&gt;.</source>
          <target state="translated">这两个助手族使用相同的核心功能集来生成单独的选择标签，因此它们都接受大致相同的选项。特别是，默认情况下，Rails会在当年的每一年的5年内生成年份选项。如果这不是合适的范围，则 &lt;code&gt;:start_year&lt;/code&gt; 和 &lt;code&gt;:end_year&lt;/code&gt; 选项将覆盖此范围。有关可用选项的详尽列表，请参阅&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionView/Helpers/DateHelper.html&quot;&gt;API文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d19803df257990e27b0da1ef75889f77ce28322e" translate="yes" xml:space="preserve">
          <source>Both kinds of dependencies will be installed when &lt;code&gt;bundle install&lt;/code&gt; is run inside of the application. The development dependencies for the gem will only be used when the development and tests for the engine are running.</source>
          <target state="translated">当 &lt;code&gt;bundle install&lt;/code&gt; 在应用程序内部运行时，将同时安装两种依赖项。gem的开发依赖项仅在引擎的开发和测试运行时使用。</target>
        </trans-unit>
        <trans-unit id="42c69f94db1c4042ee89f322592fa9cd7514f1b8" translate="yes" xml:space="preserve">
          <source>Both methods will list all of your routes, in the same order that they appear in &lt;code&gt;config/routes.rb&lt;/code&gt;. For each route, you'll see:</source>
          <target state="translated">两种方法都将按照在 &lt;code&gt;config/routes.rb&lt;/code&gt; 中出现的顺序列出所有路由。对于每条路线，您都会看到：</target>
        </trans-unit>
        <trans-unit id="63609044abb9db54754b71e4785875c492df400d" translate="yes" xml:space="preserve">
          <source>Both of these constraints are addressed by the Load Interlock. It keeps track of which threads are currently running application code, loading a class, or unloading autoloaded constants.</source>
          <target state="translated">这两个约束条件都由加载联锁解决。它跟踪当前哪个线程正在运行应用程序代码、加载类或卸载自动加载的常量。</target>
        </trans-unit>
        <trans-unit id="3e73f0b91f7733e0d67e21b4ce943d28d334dffe" translate="yes" xml:space="preserve">
          <source>Both of these families of helpers will create a series of select boxes for the different components (year, month, day etc.).</source>
          <target state="translated">这两个助手家族将为不同的组件(年、月、日等)创建一系列选择框。</target>
        </trans-unit>
        <trans-unit id="8585c9e981d0bbb7ca5b65fa3f1b89b6322a46b3" translate="yes" xml:space="preserve">
          <source>Both the &lt;code&gt;:only&lt;/code&gt; and &lt;code&gt;:except&lt;/code&gt; condition can accept an arbitrary number of method references, so #&lt;code&gt;except: [ :rss,
:text_only ]&lt;/code&gt; is valid, as is &lt;code&gt;except: :rss&lt;/code&gt;.</source>
          <target state="translated">无论是 &lt;code&gt;:only&lt;/code&gt; 和 &lt;code&gt;:except&lt;/code&gt; 条件可以接受方法引用的任意数量，所以＃ &lt;code&gt;except: [ :rss, :text_only ]&lt;/code&gt; 是有效的，因为是 &lt;code&gt;except: :rss&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8a674c5c01638ab003945e8f913a75835278d340" translate="yes" xml:space="preserve">
          <source>Both the &lt;code&gt;matches?&lt;/code&gt; method and the lambda gets the &lt;code&gt;request&lt;/code&gt; object as an argument.</source>
          <target state="translated">这两场 &lt;code&gt;matches?&lt;/code&gt; 方法，lambda获取 &lt;code&gt;request&lt;/code&gt; 对象作为参数。</target>
        </trans-unit>
        <trans-unit id="4ffd2c626f16ba9f4b0edea3564f62690de75bb9" translate="yes" xml:space="preserve">
          <source>Bottom line: &lt;strong&gt;do not cache reloadable classes or modules&lt;/strong&gt;.</source>
          <target state="translated">底线：&lt;strong&gt;不要缓存可重载的类或模块&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="67effde6e5543ec42ad977ea468b55fee4ba5825" translate="yes" xml:space="preserve">
          <source>Bounced: Rejected processing by the specific mailbox and bounced to sender.</source>
          <target state="translated">退件。被特定邮箱拒绝处理,被退回给发件人。</target>
        </trans-unit>
        <trans-unit id="b211b44c8fef9c4e7e80724ee05ec6bb360ac928" translate="yes" xml:space="preserve">
          <source>Bound Parameters</source>
          <target state="translated">边界参数</target>
        </trans-unit>
        <trans-unit id="176f666b9ceb8a408e7145f144ac1be75be57ba2" translate="yes" xml:space="preserve">
          <source>Breaking up &lt;em&gt;very&lt;/em&gt; large route file into multiple small ones:</source>
          <target state="translated">将&lt;em&gt;非常&lt;/em&gt;大的路由文件分成多个小文件：</target>
        </trans-unit>
        <trans-unit id="21a8752f2df54d656b09cd2a499cb3a3403ec7ca" translate="yes" xml:space="preserve">
          <source>Breakpoints</source>
          <target state="translated">Breakpoints</target>
        </trans-unit>
        <trans-unit id="c1583d017da577c338d4fd7b493f26c41dd6a0d6" translate="yes" xml:space="preserve">
          <source>Broadcast a hash directly to a named &lt;code&gt;broadcasting&lt;/code&gt;. This will later be JSON encoded.</source>
          <target state="translated">将哈希直接广播到命名 &lt;code&gt;broadcasting&lt;/code&gt; 。稍后将使用JSON编码。</target>
        </trans-unit>
        <trans-unit id="4b3c51f07aabe1b52a98a6c8cadc29b6b35a71e9" translate="yes" xml:space="preserve">
          <source>Broadcast a hash to a unique broadcasting for this &lt;code&gt;model&lt;/code&gt; in this channel.</source>
          <target state="translated">在此频道中将此 &lt;code&gt;model&lt;/code&gt; 的哈希值广播到唯一广播。</target>
        </trans-unit>
        <trans-unit id="fdbdbf3e4a5bd910928cd6eac7eefe4156582d0b" translate="yes" xml:space="preserve">
          <source>Broadcast content to a web notification channel instance from elsewhere in your application:</source>
          <target state="translated">将内容从应用程序的其他地方广播到网络通知通道实例。</target>
        </trans-unit>
        <trans-unit id="ba459229366746c447e3cdf752eb917433152cfe" translate="yes" xml:space="preserve">
          <source>Broadcasting</source>
          <target state="translated">Broadcasting</target>
        </trans-unit>
        <trans-unit id="812680167704b98ee980a8c5e61493bdcd1cb45f" translate="yes" xml:space="preserve">
          <source>Broadcastings</source>
          <target state="translated">Broadcastings</target>
        </trans-unit>
        <trans-unit id="0e9cb843d094b3978b52e51e7f4b7821940d49fd" translate="yes" xml:space="preserve">
          <source>Broadcastings are purely an online queue and time-dependent. If a consumer is not streaming (subscribed to a given channel), they'll not get the broadcast should they connect later.</source>
          <target state="translated">广播是纯粹的在线队列和时间依赖性。如果消费者没有流媒体(订阅某个频道),他们以后连接时就不会收到广播。</target>
        </trans-unit>
        <trans-unit id="30471433380fc894eed956523e21927189b002fb" translate="yes" xml:space="preserve">
          <source>Broadcasts are called elsewhere in your Rails application:</source>
          <target state="translated">广播在Rails应用程序的其他地方被调用。</target>
        </trans-unit>
        <trans-unit id="1b12cd6f22e74bf11b60058c812151276e67a6d7" translate="yes" xml:space="preserve">
          <source>Browsers open a limited number of simultaneous connections to a single host. The exact number varies by browser and version. This limit may cause some asset downloads to wait for previous assets to finish before they can begin. You can use the &lt;code&gt;%d&lt;/code&gt; wildcard in the &lt;code&gt;asset_host&lt;/code&gt; to distribute the requests over four hosts. For example, &lt;code&gt;assets%d.example.com&lt;/code&gt; will spread the asset requests over &amp;ldquo;assets0.example.com&amp;rdquo;, &amp;hellip;, &amp;ldquo;assets3.example.com&amp;rdquo;.</source>
          <target state="translated">浏览器打开到单个主机的有限数量的同时连接。确切数字因浏览器和版本而异。此限制可能导致某些资产下载等待先前的资产完成才能开始。您可以使用 &lt;code&gt;asset_host&lt;/code&gt; 中的 &lt;code&gt;%d&lt;/code&gt; 通配符在四个主机上分配请求。例如， &lt;code&gt;assets%d.example.com&lt;/code&gt; 将在&amp;ldquo; assets0.example.com&amp;rdquo;，&amp;ldquo;&amp;hellip;&amp;rdquo;，&amp;ldquo; assets3.example.com&amp;rdquo;上传播资产请求。</target>
        </trans-unit>
        <trans-unit id="8f3e3b7cf657210643fad7a1a3f201fb5c1638b9" translate="yes" xml:space="preserve">
          <source>Browsers request pages from Rails by making a request for a URL using a specific HTTP method, such as &lt;code&gt;GET&lt;/code&gt;, &lt;code&gt;POST&lt;/code&gt;, &lt;code&gt;PATCH&lt;/code&gt;, &lt;code&gt;PUT&lt;/code&gt; and &lt;code&gt;DELETE&lt;/code&gt;. Each method is a request to perform an operation on the resource. A resource route maps a number of related requests to actions in a single controller.</source>
          <target state="translated">浏览器通过使用特定的HTTP方法（例如 &lt;code&gt;GET&lt;/code&gt; ， &lt;code&gt;POST&lt;/code&gt; ， &lt;code&gt;PATCH&lt;/code&gt; ， &lt;code&gt;PUT&lt;/code&gt; 和 &lt;code&gt;DELETE&lt;/code&gt; )请求URL来从Rails请求页面。每种方法都是对资源执行操作的请求。资源路由将多个相关请求映射到单个控制器中的动作。</target>
        </trans-unit>
        <trans-unit id="121e9c72fc76e149b6990a1a650936fe1bf5d4ff" translate="yes" xml:space="preserve">
          <source>Brute-Forcing Accounts</source>
          <target state="translated">粗暴强迫账户</target>
        </trans-unit>
        <trans-unit id="57a6465f9c4b12d9c6da8b9fa760e0daef844727" translate="yes" xml:space="preserve">
          <source>Bug Fixes</source>
          <target state="translated">错误修复</target>
        </trans-unit>
        <trans-unit id="d631c511049dac068175f2ccdb0b406277501f5c" translate="yes" xml:space="preserve">
          <source>Build ISO 8601 &lt;a href=&quot;duration&quot;&gt;&lt;code&gt;Duration&lt;/code&gt;&lt;/a&gt; string for this duration. The &lt;code&gt;precision&lt;/code&gt; parameter can be used to limit seconds' precision of duration.</source>
          <target state="translated">为此持续时间构建ISO 8601&lt;a href=&quot;duration&quot;&gt; &lt;code&gt;Duration&lt;/code&gt; &lt;/a&gt;字符串。的 &lt;code&gt;precision&lt;/code&gt; 参数可以用来限制秒的持续时间的精确度。</target>
        </trans-unit>
        <trans-unit id="0f5d6570f9fe202eec4029000763d6918fc8cda7" translate="yes" xml:space="preserve">
          <source>Build ISO 8601 &lt;a href=&quot;duration&quot;&gt;Duration&lt;/a&gt; string for this duration. The &lt;code&gt;precision&lt;/code&gt; parameter can be used to limit seconds' precision of duration.</source>
          <target state="translated">为此持续时间构建ISO 8601 &lt;a href=&quot;duration&quot;&gt;持续时间&lt;/a&gt;字符串。的 &lt;code&gt;precision&lt;/code&gt; 参数可以用来限制秒的持续时间的精确度。</target>
        </trans-unit>
        <trans-unit id="4759bf14d7a511508e86c343c934894b6e8db533" translate="yes" xml:space="preserve">
          <source>Builder</source>
          <target state="translated">Builder</target>
        </trans-unit>
        <trans-unit id="55e5ed524737f95204f143641c71fd9be3bac1af" translate="yes" xml:space="preserve">
          <source>Builder templates are a more programmatic alternative to &lt;code&gt;ERB&lt;/code&gt;. They are especially useful for generating XML content. An XmlMarkup object named &lt;code&gt;xml&lt;/code&gt; is automatically made available to templates with a &lt;code&gt;.builder&lt;/code&gt; extension.</source>
          <target state="translated">Builder模板是 &lt;code&gt;ERB&lt;/code&gt; 的更具编程性的替代方案。它们对于生成XML内容特别有用。名为 &lt;code&gt;xml&lt;/code&gt; 的XmlMarkup对象会自动提供给扩展名为 &lt;code&gt;.builder&lt;/code&gt; 的模板。</target>
        </trans-unit>
        <trans-unit id="19356ab0a221fb2d10911be2c1c5a857849a9ebd" translate="yes" xml:space="preserve">
          <source>Builder templates are a more programmatic alternative to ERB. They are especially useful for generating XML content. An XmlMarkup object named &lt;code&gt;xml&lt;/code&gt; is automatically made available to templates with a &lt;code&gt;.builder&lt;/code&gt; extension.</source>
          <target state="translated">构建器模板是ERB的更具编程性的替代方案。它们对于生成XML内容特别有用。名为 &lt;code&gt;xml&lt;/code&gt; 的XmlMarkup对象会自动提供给扩展名为 &lt;code&gt;.builder&lt;/code&gt; 的模板。</target>
        </trans-unit>
        <trans-unit id="029de9b54b3fd776589e260c54563469ca8dd1ed" translate="yes" xml:space="preserve">
          <source>Building Complex Forms</source>
          <target state="translated">复杂的建筑形式</target>
        </trans-unit>
        <trans-unit id="0a44f284741faa0296f69ce7c46a39a0e20336ba" translate="yes" xml:space="preserve">
          <source>Building HTML tags</source>
          <target state="translated">构建HTML标签</target>
        </trans-unit>
        <trans-unit id="00ada69adb195101fca28695c5c9f66d664a15bd" translate="yes" xml:space="preserve">
          <source>Building a custom instrumentation implementation.</source>
          <target state="translated">建立一个定制的仪器实施。</target>
        </trans-unit>
        <trans-unit id="a97efcc24af3a481182c1e93ed2c74be783ae79a" translate="yes" xml:space="preserve">
          <source>Building your own conditions as pure strings can leave you vulnerable to SQL injection exploits. For example, &lt;code&gt;Book.where(&quot;title LIKE '%#{params[:title]}%'&quot;)&lt;/code&gt; is not safe. See the next section for the preferred way to handle conditions using an array.</source>
          <target state="translated">将自己的条件构建为纯字符串可能会使您容易受到SQL注入漏洞的攻击。例如， &lt;code&gt;Book.where(&quot;title LIKE '%#{params[:title]}%'&quot;)&lt;/code&gt; 不安全。有关使用数组处理条件的首选方法，请参见下一节。</target>
        </trans-unit>
        <trans-unit id="dccfc2f6526c4a206c337ca5c77e29c20c7bc817" translate="yes" xml:space="preserve">
          <source>Building your own conditions as pure strings can leave you vulnerable to SQL injection exploits. For example, &lt;code&gt;Client.where(&quot;first_name LIKE '%#{params[:first_name]}%'&quot;)&lt;/code&gt; is not safe. See the next section for the preferred way to handle conditions using an array.</source>
          <target state="translated">将自己的条件构建为纯字符串可能会使您容易受到SQL注入漏洞的攻击。例如， &lt;code&gt;Client.where(&quot;first_name LIKE '%#{params[:first_name]}%'&quot;)&lt;/code&gt; 不安全。有关使用数组处理条件的首选方法，请参见下一部分。</target>
        </trans-unit>
        <trans-unit id="3c9666134672c8d310e0a76a56ba47182838b385" translate="yes" xml:space="preserve">
          <source>Builds HTML5 compliant tags with a tag proxy. Every tag can be built with:</source>
          <target state="translated">通过标签代理构建符合HTML5的标签。每一个标签都可以用以下方式构建。</target>
        </trans-unit>
        <trans-unit id="12e723533e5b52f30b272a06846fcab7d2fa8419" translate="yes" xml:space="preserve">
          <source>Builds a &lt;a href=&quot;hash&quot;&gt;&lt;code&gt;Hash&lt;/code&gt;&lt;/a&gt; from XML just like &lt;code&gt;Hash.from_xml&lt;/code&gt;, but also allows &lt;code&gt;Symbol&lt;/code&gt; and YAML.</source>
          <target state="translated">就像 &lt;code&gt;Hash.from_xml&lt;/code&gt; 一样，从XML构建&lt;a href=&quot;hash&quot;&gt; &lt;code&gt;Hash&lt;/code&gt; &lt;/a&gt;，但也允许 &lt;code&gt;Symbol&lt;/code&gt; 和YAML。</target>
        </trans-unit>
        <trans-unit id="2d9994b780d6f13d3baf0395941a33e0f0851cf2" translate="yes" xml:space="preserve">
          <source>Builds a &lt;a href=&quot;hash&quot;&gt;Hash&lt;/a&gt; from XML just like &lt;code&gt;Hash.from_xml&lt;/code&gt;, but also allows Symbol and YAML.</source>
          <target state="translated">就像 &lt;code&gt;Hash.from_xml&lt;/code&gt; 一样，从XML 构建&lt;a href=&quot;hash&quot;&gt;Hash&lt;/a&gt;，但是也允许Symbol和YAML。</target>
        </trans-unit>
        <trans-unit id="b3948cdfeec5d7084c46054833c1854395ab2ad5" translate="yes" xml:space="preserve">
          <source>Builds a &lt;code&gt;QC::Queue&lt;/code&gt; object to schedule jobs on.</source>
          <target state="translated">构建一个 &lt;code&gt;QC::Queue&lt;/code&gt; 对象以安排作业。</target>
        </trans-unit>
        <trans-unit id="7998e59d701a8696fc25146f2f6266408261fbbd" translate="yes" xml:space="preserve">
          <source>Built-in Helpers</source>
          <target state="translated">内置助手</target>
        </trans-unit>
        <trans-unit id="a8efa9c49ad21edaf36e22b1b0e7e5aaddcc1511" translate="yes" xml:space="preserve">
          <source>Built-in ingress commands are available for these popular SMTP servers:</source>
          <target state="translated">这些流行的SMTP服务器都有内置的入口命令。</target>
        </trans-unit>
        <trans-unit id="8f05a85abb427f1fa4982472f3e2195fcae1dbd0" translate="yes" xml:space="preserve">
          <source>But if &lt;code&gt;Hotel::Services&lt;/code&gt; is not known, Rails is not able to autoload it, the application raises &lt;code&gt;NameError&lt;/code&gt;.</source>
          <target state="translated">但是，如果不知道 &lt;code&gt;Hotel::Services&lt;/code&gt; ，Rails无法自动加载它，则应用程序将引发 &lt;code&gt;NameError&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="320b072e513e0c67ae1816fc8dcaa8b884d8ab2f" translate="yes" xml:space="preserve">
          <source>But if not having a profile yet is fine and should not be an error condition:</source>
          <target state="translated">但如果还没有配置文件也可以,应该不是错误条件。</target>
        </trans-unit>
        <trans-unit id="defecf77c4c7a77e61a98c22395f1cf97f6f20ca" translate="yes" xml:space="preserve">
          <source>But instead of generating a model directly (which we'll be doing later), let's set up a scaffold. A &lt;strong&gt;scaffold&lt;/strong&gt; in Rails is a full set of model, database migration for that model, controller to manipulate it, views to view and manipulate the data, and a test suite for each of the above.</source>
          <target state="translated">但是，让我们建立一个脚手架，而不是直接生成模型（稍后再做）。甲&lt;strong&gt;支架&lt;/strong&gt;在Rails是全套模型，对于模型数据库迁移，控制器的操纵它，视图来查看和操作的数据，和一个测试套件在上述各的。</target>
        </trans-unit>
        <trans-unit id="61f5605e4f7727504890183a3048024a317b5b59" translate="yes" xml:space="preserve">
          <source>But only if it hasn't been required before, which would be the case in &lt;code&gt;bin/rails server&lt;/code&gt; but &lt;strong&gt;wouldn't&lt;/strong&gt; be the case with Passenger.</source>
          <target state="translated">但只有当它以前没有，这将是在需要的情况下 &lt;code&gt;bin/rails server&lt;/code&gt; ，但&lt;strong&gt;不会&lt;/strong&gt;与乘客的情况。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
