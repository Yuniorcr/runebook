<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="rails">
    <body>
      <group id="rails">
        <trans-unit id="a9ccc58789e06b5780acca188cdfd5ea8c3ea857" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;capture&lt;/code&gt; method allows you to extract part of a template into a variable. You can then use this variable anywhere in your templates or layout.</source>
          <target state="translated">该 &lt;code&gt;capture&lt;/code&gt; 方法允许你提取模板的一部分到一个变量。然后，您可以在模板或布局中的任何位置使用此变量。</target>
        </trans-unit>
        <trans-unit id="4de7f88df38279a3722cff216b9b16c2e45b9e77" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;change&lt;/code&gt; method is the primary way of writing migrations. It works for the majority of cases, where Active Record knows how to reverse the migration automatically. Currently, the &lt;code&gt;change&lt;/code&gt; method supports only these migration definitions:</source>
          <target state="translated">的 &lt;code&gt;change&lt;/code&gt; 的方法是写入迁移的主要方式。它适用于大多数情况，其中Active Record知道如何自动撤消迁移。当前， &lt;code&gt;change&lt;/code&gt; 方法仅支持以下迁移定义：</target>
        </trans-unit>
        <trans-unit id="52363d1f5d46bcb294b35d60ee3388ba22f43eac" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;clear&lt;/code&gt; method is used when you intentionally want to clear all the messages in the &lt;code&gt;errors&lt;/code&gt; collection. Of course, calling &lt;code&gt;errors.clear&lt;/code&gt; upon an invalid object won't actually make it valid: the &lt;code&gt;errors&lt;/code&gt; collection will now be empty, but the next time you call &lt;code&gt;valid?&lt;/code&gt; or any method that tries to save this object to the database, the validations will run again. If any of the validations fail, the &lt;code&gt;errors&lt;/code&gt; collection will be filled again.</source>
          <target state="translated">该 &lt;code&gt;clear&lt;/code&gt; 方法被用来当您有意以清除所有消息 &lt;code&gt;errors&lt;/code&gt; 集合。当然，在无效对象上调用 &lt;code&gt;errors.clear&lt;/code&gt; 并不会使其真正有效： &lt;code&gt;errors&lt;/code&gt; 集合现在为空，但是下次调用 &lt;code&gt;valid?&lt;/code&gt; 或任何尝试将此对象保存到数据库的方法，验证将再次运行。如果任何验证失败，则将再次填充 &lt;code&gt;errors&lt;/code&gt; 集合。</target>
        </trans-unit>
        <trans-unit id="747426e03fbb67e61fd2ae08fcc3cfb653a768ab" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;collection&amp;lt;&amp;lt;&lt;/code&gt; method adds one or more objects to the collection by creating records in the join table.</source>
          <target state="translated">该 &lt;code&gt;collection&amp;lt;&amp;lt;&lt;/code&gt; 方法，通过在创建记录添加一个或多个对象的集合连接表。</target>
        </trans-unit>
        <trans-unit id="52c2e305157f0a7acd1f52b19c909ce36a4af12d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;collection&amp;lt;&amp;lt;&lt;/code&gt; method adds one or more objects to the collection by setting their foreign keys to the primary key of the calling model.</source>
          <target state="translated">通过将 &lt;code&gt;collection&amp;lt;&amp;lt;&lt;/code&gt; 的外键设​​置为调用模型的主键，collection &amp;lt;&amp;lt;方法将一个或多个对象添加到集合中。</target>
        </trans-unit>
        <trans-unit id="0bda4b98ab37ef84ebed66286bb597e3970c7422" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;collection.build&lt;/code&gt; method returns a new object of the associated type. This object will be instantiated from the passed attributes, and the link through the join table will be created, but the associated object will &lt;em&gt;not&lt;/em&gt; yet be saved.</source>
          <target state="translated">该 &lt;code&gt;collection.build&lt;/code&gt; 方法返回关联的类型的新对象。这个对象将从通过属性来实例化，并通过链接连接表将被创建，但相关的对象将&lt;em&gt;不&lt;/em&gt;尚未被保存。</target>
        </trans-unit>
        <trans-unit id="da44299648048b8c8fd4e652c2a5ca454c468e1c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;collection.build&lt;/code&gt; method returns a single or array of new objects of the associated type. The object(s) will be instantiated from the passed attributes, and the link through their foreign key will be created, but the associated objects will &lt;em&gt;not&lt;/em&gt; yet be saved.</source>
          <target state="translated">该 &lt;code&gt;collection.build&lt;/code&gt; 方法返回单个或相关联的类型的新对象的阵列。对象（S）将根据传入的属性被实例化，并通过他们的外键的链接将被创建，但相关的对象将&lt;em&gt;不&lt;/em&gt;尚未被保存。</target>
        </trans-unit>
        <trans-unit id="c64eb83a83c405a15636c5df770868b792e1feb6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;collection.clear&lt;/code&gt; method removes all objects from the collection according to the strategy specified by the &lt;code&gt;dependent&lt;/code&gt; option. If no option is given, it follows the default strategy. The default strategy for &lt;code&gt;has_many :through&lt;/code&gt; associations is &lt;code&gt;delete_all&lt;/code&gt;, and for &lt;code&gt;has_many&lt;/code&gt; associations is to set the foreign keys to &lt;code&gt;NULL&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;collection.clear&lt;/code&gt; 方法根据由指定的策略从集合中删除所有对象 &lt;code&gt;dependent&lt;/code&gt; 选项。如果未提供任何选项，它将遵循默认策略。 &lt;code&gt;has_many :through&lt;/code&gt; 关联的默认策略是 &lt;code&gt;delete_all&lt;/code&gt; ， &lt;code&gt;has_many&lt;/code&gt; 关联的默认策略是将外键设置为 &lt;code&gt;NULL&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e57955c9268a65980fe9cbdb9519ca7edb4fda95" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;collection.clear&lt;/code&gt; method removes every object from the collection by deleting the rows from the joining table. This does not destroy the associated objects.</source>
          <target state="translated">该 &lt;code&gt;collection.clear&lt;/code&gt; 方法通过从连接表中删除的行从集合中删除每个对象。这不会破坏关联的对象。</target>
        </trans-unit>
        <trans-unit id="79aea364e14abf64ed5b39bad446dff98746df59" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;collection.create&lt;/code&gt; method returns a new object of the associated type. This object will be instantiated from the passed attributes, the link through the join table will be created, and, once it passes all of the validations specified on the associated model, the associated object &lt;em&gt;will&lt;/em&gt; be saved.</source>
          <target state="translated">该 &lt;code&gt;collection.create&lt;/code&gt; 方法返回相关联的类型的新对象。该对象将从传递的属性实例化，将创建通过联接表的链接，并且一旦它通过了在关联模型上指定的所有验证，&lt;em&gt;则将&lt;/em&gt;保存关联的对象。</target>
        </trans-unit>
        <trans-unit id="1f1d86ca6c46c7edff29fe46d1d4bf565405a9f8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;collection.create&lt;/code&gt; method returns a single or array of new objects of the associated type. The object(s) will be instantiated from the passed attributes, the link through its foreign key will be created, and, once it passes all of the validations specified on the associated model, the associated object &lt;em&gt;will&lt;/em&gt; be saved.</source>
          <target state="translated">该 &lt;code&gt;collection.create&lt;/code&gt; 方法返回单个或相关联的类型的新对象的阵列。这些对象将从传递的属性中实例化，创建通过其外键的链接，并且一旦它通过了在关联模型上指定的所有验证，&lt;em&gt;则将&lt;/em&gt;保存关联的对象。</target>
        </trans-unit>
        <trans-unit id="3f94a02d5529be33dd9be69fd479c955d67ac228" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;collection.delete&lt;/code&gt; method removes one or more objects from the collection by deleting records in the join table. This does not destroy the objects.</source>
          <target state="translated">该 &lt;code&gt;collection.delete&lt;/code&gt; 方法，通过在删除记录从集合中删除一个或多个对象连接表。这不会破坏对象。</target>
        </trans-unit>
        <trans-unit id="d1cff808e84834ec38fabb007acbd37987ea6cd4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;collection.delete&lt;/code&gt; method removes one or more objects from the collection by setting their foreign keys to &lt;code&gt;NULL&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;collection.delete&lt;/code&gt; 方法，通过它们的外键设置为从集合中删除一个或多个对象 &lt;code&gt;NULL&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e024fd3e84ada74d6a57d4ac8f10d7498ff038cf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;collection.destroy&lt;/code&gt; method removes one or more objects from the collection by deleting records in the join table. This does not destroy the objects.</source>
          <target state="translated">该 &lt;code&gt;collection.destroy&lt;/code&gt; 方法，通过在删除记录从集合中删除一个或多个对象连接表。这不会破坏对象。</target>
        </trans-unit>
        <trans-unit id="86960d901693f692a364bb363e848dfc5b9ad8ab" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;collection.destroy&lt;/code&gt; method removes one or more objects from the collection by running &lt;code&gt;destroy&lt;/code&gt; on each object.</source>
          <target state="translated">该 &lt;code&gt;collection.destroy&lt;/code&gt; 方法通过运行从集合中删除一个或多个物体 &lt;code&gt;destroy&lt;/code&gt; 每个对象上。</target>
        </trans-unit>
        <trans-unit id="dccf6e678bc8fa88ffc5ac217bb601392c83279d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;collection.empty?&lt;/code&gt; method returns &lt;code&gt;true&lt;/code&gt; if the collection does not contain any associated objects.</source>
          <target state="translated">该 &lt;code&gt;collection.empty?&lt;/code&gt; 如果集合不包含任何关联的对象，则方法返回 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2078c200f57bc84e51d0e94e10a5f288f37d2bd1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;collection.exists?&lt;/code&gt; method checks whether an object meeting the supplied conditions exists in the collection. It uses the same syntax and options as &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveRecord/FinderMethods.html#method-i-exists-3F&quot;&gt;&lt;code&gt;ActiveRecord::Base.exists?&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">该 &lt;code&gt;collection.exists?&lt;/code&gt; 方法检查集合中是否存在满足提供条件的对象。它使用与&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveRecord/FinderMethods.html#method-i-exists-3F&quot;&gt; &lt;code&gt;ActiveRecord::Base.exists?&lt;/code&gt; &lt;/a&gt;相同的语法和选项。。</target>
        </trans-unit>
        <trans-unit id="0f39d9f47ccaaecc0652f9871a10515043c71e24" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;collection.find&lt;/code&gt; method finds objects within the collection. It uses the same syntax and options as &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveRecord/FinderMethods.html#method-i-find&quot;&gt;&lt;code&gt;ActiveRecord::Base.find&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;collection.find&lt;/code&gt; 方法在集合中查找对象。它使用与&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveRecord/FinderMethods.html#method-i-find&quot;&gt; &lt;code&gt;ActiveRecord::Base.find&lt;/code&gt; &lt;/a&gt;相同的语法和选项。</target>
        </trans-unit>
        <trans-unit id="7bf6cbd5227f99cf9aafbac09b4cee01b2d29f9f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;collection.reload&lt;/code&gt; method returns a Relation of all of the associated objects, forcing a database read. If there are no associated objects, it returns an empty Relation.</source>
          <target state="translated">该 &lt;code&gt;collection.reload&lt;/code&gt; 方法返回所有关联的对象的关系，迫使数据库读取。如果没有关联的对象，则返回一个空的Relation。</target>
        </trans-unit>
        <trans-unit id="5b6961f00cdeaf4f39851a5c526f17f9d49e753c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;collection.size&lt;/code&gt; method returns the number of objects in the collection.</source>
          <target state="translated">该 &lt;code&gt;collection.size&lt;/code&gt; 方法返回集合中的对象的数量。</target>
        </trans-unit>
        <trans-unit id="73b01b4a44936bdc17f5df3c4b75af136e09f5e6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;collection.where&lt;/code&gt; method finds objects within the collection based on the conditions supplied but the objects are loaded lazily meaning that the database is queried only when the object(s) are accessed.</source>
          <target state="translated">该 &lt;code&gt;collection.where&lt;/code&gt; 方法的发现基于提供条件的集合中的对象，但对象被加载懒惰地这意味着当所述对象（多个）访问的数据库只询问。</target>
        </trans-unit>
        <trans-unit id="18fdcd242505e917fac431cfc51df7e21bfaeaf2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;collection&lt;/code&gt; method returns a Relation of all of the associated objects. If there are no associated objects, it returns an empty Relation.</source>
          <target state="translated">该 &lt;code&gt;collection&lt;/code&gt; 方法返回所有关联的对象的关系。如果没有关联的对象，则返回一个空的Relation。</target>
        </trans-unit>
        <trans-unit id="bfaaefd4db4f3cd04e948d95b96abdd865effecd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;collection=&lt;/code&gt; method makes the collection contain only the supplied objects, by adding and deleting as appropriate. The changes are persisted to the database.</source>
          <target state="translated">该 &lt;code&gt;collection=&lt;/code&gt; 方法使集合仅包含所提供的目的，通过添加和删除适当。所做的更改将保存到数据库中。</target>
        </trans-unit>
        <trans-unit id="d37e627506324620457a4e0665ed9847e99698ce" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;collection_select&lt;/code&gt;, &lt;code&gt;select&lt;/code&gt; and &lt;code&gt;time_zone_select&lt;/code&gt; methods take an &lt;code&gt;options&lt;/code&gt; parameter, a hash:</source>
          <target state="translated">该 &lt;code&gt;collection_select&lt;/code&gt; ， &lt;code&gt;select&lt;/code&gt; 和 &lt;code&gt;time_zone_select&lt;/code&gt; 方法需要一个 &lt;code&gt;options&lt;/code&gt; 参数，哈希表：</target>
        </trans-unit>
        <trans-unit id="42b13ad548b39d592b9e016b4ba688178912bda7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;collection_singular_ids&lt;/code&gt; method returns an array of the ids of the objects in the collection.</source>
          <target state="translated">该 &lt;code&gt;collection_singular_ids&lt;/code&gt; 方法返回集合中的对象的id的阵列。</target>
        </trans-unit>
        <trans-unit id="b23d977aaa3c3719b6d91d2ec216cbcb0f193d0f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;collection_singular_ids=&lt;/code&gt; method makes the collection contain only the objects identified by the supplied primary key values, by adding and deleting as appropriate. The changes are persisted to the database.</source>
          <target state="translated">该 &lt;code&gt;collection_singular_ids=&lt;/code&gt; 方法使收集包含通过添加和删除酌情通过所供给的主键值标识，只有对象。所做的更改将保存到数据库中。</target>
        </trans-unit>
        <trans-unit id="e952b938d58d6084d7b7f0b5dd92fc081db2f4b7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;comment_counter&lt;/code&gt; local variable is given to us by the &lt;code&gt;&amp;lt;%= render
@article.comments %&amp;gt;&lt;/code&gt; call, which will define it automatically and increment the counter as it iterates through each comment. It's used in this example to display a small number next to each comment when it's created.</source>
          <target state="translated">&lt;code&gt;&amp;lt;%= render @article.comments %&amp;gt;&lt;/code&gt; 调用为我们提供了 &lt;code&gt;comment_counter&lt;/code&gt; 局部变量，该变量将自动定义它，并在遍历每个注释时递增计数器。在本示例中，在创建每个注释时将其显示为一个较小的数字。</target>
        </trans-unit>
        <trans-unit id="b5a18ffd54b8d06fa059d1aa72036ea6be911b7c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;comments&lt;/code&gt; resource here will have the following routes generated for it:</source>
          <target state="translated">这里的 &lt;code&gt;comments&lt;/code&gt; 资源将为其生成以下路由：</target>
        </trans-unit>
        <trans-unit id="bcddb145915983f232e89d8b60105fdad174ef82" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;config.assets.compress&lt;/code&gt; option should be changed to &lt;code&gt;config.assets.js_compressor&lt;/code&gt; like so for instance:</source>
          <target state="translated">例如，应将 &lt;code&gt;config.assets.compress&lt;/code&gt; 选项更改为 &lt;code&gt;config.assets.js_compressor&lt;/code&gt; ，例如：</target>
        </trans-unit>
        <trans-unit id="81ea9d1a743856ce330b80944082aed773e77cd3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;config/database.yml&lt;/code&gt; file can contain ERB tags &lt;code&gt;&amp;lt;%= %&amp;gt;&lt;/code&gt;. Anything in the tags will be evaluated as Ruby code. You can use this to pull out data from an environment variable or to perform calculations to generate the needed connection information.</source>
          <target state="translated">的 &lt;code&gt;config/database.yml&lt;/code&gt; 文件可以包含ERB标签 &lt;code&gt;&amp;lt;%= %&amp;gt;&lt;/code&gt; 。标签中的所有内容都将被评估为Ruby代码。您可以使用它从环境变量中提取数据或执行计算以生成所需的连接信息。</target>
        </trans-unit>
        <trans-unit id="6b5b26498ab5ce6ae7e3eaf238a18e4fe8751e40" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;config/database.yml&lt;/code&gt; file contains sections for three different environments in which Rails can run by default:</source>
          <target state="translated">在 &lt;code&gt;config/database.yml&lt;/code&gt; 文件包含在Rails可以在默认情况下运行三个不同的环境部分：</target>
        </trans-unit>
        <trans-unit id="fbb767edbee15e6b4db32c2ef7f30c52f1f8b7aa" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;console&lt;/code&gt; command lets you interact with your Rails application from the command line. On the underside, &lt;code&gt;rails console&lt;/code&gt; uses IRB, so if you've ever used it, you'll be right at home. This is useful for testing out quick ideas with code and changing data server-side without touching the website.</source>
          <target state="translated">使用 &lt;code&gt;console&lt;/code&gt; 命令可以从命令行与Rails应用程序进行交互。在下面， &lt;code&gt;rails console&lt;/code&gt; 使用IRB，因此，如果您曾经使用过它，那么您将在家中。这对于使用代码测试快速构想以及更改服务器端数据而无需访问网站很有用。</target>
        </trans-unit>
        <trans-unit id="cf7909e4645ce0f8e3bc57c99609c96524b74007" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;content_for&lt;/code&gt; method allows you to insert content into a named &lt;code&gt;yield&lt;/code&gt; block in your layout. For example, this view would work with the layout that you just saw:</source>
          <target state="translated">该 &lt;code&gt;content_for&lt;/code&gt; 方法允许你插入内容到一个名为 &lt;code&gt;yield&lt;/code&gt; 在你的布局块。例如，此视图将与您刚刚看到的布局一起使用：</target>
        </trans-unit>
        <trans-unit id="b57aacef775f5d5de17020f91a0370ba1db4293c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;content_for&lt;/code&gt; method is very helpful when your layout contains distinct regions such as sidebars and footers that should get their own blocks of content inserted. It's also useful for inserting tags that load page-specific JavaScript or css files into the header of an otherwise generic layout.</source>
          <target state="translated">该 &lt;code&gt;content_for&lt;/code&gt; 方法是非常有帮助的当你的布局包含不同的区域，如侧栏和页脚，应该让自己的插入内容块。对于将标签加载页面特定的JavaScript或CSS文件插入其他通用布局的标头中，这也很有用。</target>
        </trans-unit>
        <trans-unit id="4ee85edc9c6c2aca0740d9a87c79c1479e3bb5d0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;create_association&lt;/code&gt; method returns a new object of the associated type. This object will be instantiated from the passed attributes, the link through its foreign key will be set, and, once it passes all of the validations specified on the associated model, the associated object &lt;em&gt;will&lt;/em&gt; be saved.</source>
          <target state="translated">该 &lt;code&gt;create_association&lt;/code&gt; 方法返回关联的类型的新对象。该对象将从传递的属性中实例化，通过其外键的链接将被设置，并且一旦它通过了在关联模型上指定的所有验证，关联对象&lt;em&gt;将&lt;/em&gt;被保存。</target>
        </trans-unit>
        <trans-unit id="15fecea2b55267fcd907c56315c3dd462ead23df" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;create_association&lt;/code&gt; method returns a new object of the associated type. This object will be instantiated from the passed attributes, the link through this object's foreign key will be set, and, once it passes all of the validations specified on the associated model, the associated object &lt;em&gt;will&lt;/em&gt; be saved.</source>
          <target state="translated">该 &lt;code&gt;create_association&lt;/code&gt; 方法返回关联的类型的新对象。该对象将从传递的属性中实例化，通过该对象的外键的链接将被设置，并且一旦它通过了在关联模型上指定的所有验证，关联对象&lt;em&gt;就会&lt;/em&gt;被保存。</target>
        </trans-unit>
        <trans-unit id="415ddd2cfe56689235d4b9ff68703679c48f943a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;create_table&lt;/code&gt; method is one of the most fundamental, but most of the time, will be generated for you from using a model or scaffold generator. A typical use would be</source>
          <target state="translated">该 &lt;code&gt;create_table&lt;/code&gt; 方法是最根本的一个，但大多数的时候，会为你使用一个模型或支架发生器产生。典型的用途是</target>
        </trans-unit>
        <trans-unit id="4c057485bb8f81f79e0625b19f3e5ee882e09353" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;custom_proxies&lt;/code&gt; argument can take an &lt;a href=&quot;../array&quot;&gt;Array&lt;/a&gt; of string, IPAddr, or Regexp objects which will be used instead of &lt;code&gt;TRUSTED_PROXIES&lt;/code&gt;. If a single string, IPAddr, or Regexp object is provided, it will be used in addition to &lt;code&gt;TRUSTED_PROXIES&lt;/code&gt;. Any proxy setup will put the value you want in the middle (or at the beginning) of the X-Forwarded-For list, with your proxy servers after it. If your proxies aren't removed, pass them in via the &lt;code&gt;custom_proxies&lt;/code&gt; parameter. That way, the middleware will ignore those IP addresses, and return the one that you want.</source>
          <target state="translated">所述 &lt;code&gt;custom_proxies&lt;/code&gt; 参数可以采取一个&lt;a href=&quot;../array&quot;&gt;阵列&lt;/a&gt;串，这将被用来代替IPADDR，或正则表达式的对象 &lt;code&gt;TRUSTED_PROXIES&lt;/code&gt; 。如果提供了单个字符串，IPAddr或Regexp对象，则除了 &lt;code&gt;TRUSTED_PROXIES&lt;/code&gt; 还将使用它。任何代理设置都会将您想要的值放在X-Forwarded-For列表的中间（或开头），之后是代理服务器。如果未删除代理，请通过 &lt;code&gt;custom_proxies&lt;/code&gt; 参数将其传递。这样，中间件将忽略那些IP地址，并返回您想要的IP地址。</target>
        </trans-unit>
        <trans-unit id="c41ad3da2e0319cfebdab41da97da525b45dbc0c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;database.yml&lt;/code&gt; looks like this:</source>
          <target state="translated">该 &lt;code&gt;database.yml&lt;/code&gt; 的这个样子的：</target>
        </trans-unit>
        <trans-unit id="7d1859ca9424072fe323d72e6dd2599b2ab66287" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;database&lt;/code&gt; argument for &lt;code&gt;connected_to&lt;/code&gt; will take a symbol or a config hash.</source>
          <target state="translated">&lt;code&gt;connected_to&lt;/code&gt; 的 &lt;code&gt;database&lt;/code&gt; 参数将使用符号或配置哈希。</target>
        </trans-unit>
        <trans-unit id="db3d724cfc4019016e901b91b11e52305a4a8714" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;db/schema.rb&lt;/code&gt; or &lt;code&gt;db/structure.sql&lt;/code&gt; is a snapshot of the current state of your database and is the authoritative source for rebuilding that database. This makes it possible to delete old migration files.</source>
          <target state="translated">该 &lt;code&gt;db/schema.rb&lt;/code&gt; 或 &lt;code&gt;db/structure.sql&lt;/code&gt; 是你的数据库的当前状态的快照，并为重建该数据库的权威来源。这样就可以删除旧的迁移文件。</target>
        </trans-unit>
        <trans-unit id="3959eb49c6c937e7b51e91468daafd97372bf861" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;db:migrate:redo&lt;/code&gt; command is a shortcut for doing a rollback and then migrating back up again. As with the &lt;code&gt;db:rollback&lt;/code&gt; command, you can use the &lt;code&gt;STEP&lt;/code&gt; parameter if you need to go more than one version back, for example:</source>
          <target state="translated">该 &lt;code&gt;db:migrate:redo&lt;/code&gt; 命令是执行回滚，然后迁移回再升一个快捷方式。与 &lt;code&gt;db:rollback&lt;/code&gt; 命令一样，如果需要返回多个版本，则可以使用 &lt;code&gt;STEP&lt;/code&gt; 参数，例如：</target>
        </trans-unit>
        <trans-unit id="75cef429e1feebd2a6d33d0cbdbdbdc2ea720667" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;debug&lt;/code&gt; helper will return a &amp;lt;pre&amp;gt; tag that renders the object using the YAML format. This will generate human-readable data from any object. For example, if you have this code in a view:</source>
          <target state="translated">的 &lt;code&gt;debug&lt;/code&gt; 辅助将返回一个&amp;lt;pre&amp;gt;标记呈现使用YAML格式的对象。这将从任何对象生成人类可读的数据。例如，如果您在视图中有以下代码：</target>
        </trans-unit>
        <trans-unit id="b493d0854984f2584246afbcb36a7be9ece90272" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;deep_dup&lt;/code&gt; method returns a deep copy of a given object. Normally, when you &lt;code&gt;dup&lt;/code&gt; an object that contains other objects, Ruby does not &lt;code&gt;dup&lt;/code&gt; them, so it creates a shallow copy of the object. If you have an array with a string, for example, it will look like this:</source>
          <target state="translated">该 &lt;code&gt;deep_dup&lt;/code&gt; 方法返回给定对象的深层副本。通常，当你 &lt;code&gt;dup&lt;/code&gt; 包含其它对象的对象，Ruby没有 &lt;code&gt;dup&lt;/code&gt; 他们，所以它创建对象的浅拷贝。例如，如果您有一个带有字符串的数组，它将看起来像这样：</target>
        </trans-unit>
        <trans-unit id="d355c3365b621ded8bdfdde3fa1040a426821f06" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;default&lt;/code&gt; and &lt;code&gt;scope&lt;/code&gt; keywords are reserved and can't be used as variable names. If used, an &lt;code&gt;I18n::ReservedInterpolationKey&lt;/code&gt; exception is raised. If a translation expects an interpolation variable, but this has not been passed to &lt;code&gt;#translate&lt;/code&gt;, an &lt;code&gt;I18n::MissingInterpolationArgument&lt;/code&gt; exception is raised.</source>
          <target state="translated">在 &lt;code&gt;default&lt;/code&gt; 和 &lt;code&gt;scope&lt;/code&gt; 的关键字是保留的，不能用作变量名。如果使用，则会引发 &lt;code&gt;I18n::ReservedInterpolationKey&lt;/code&gt; 异常。如果转换需要插值变量，但尚未将其传递给 &lt;code&gt;#translate&lt;/code&gt; ，则会引发 &lt;code&gt;I18n::MissingInterpolationArgument&lt;/code&gt; 异常。</target>
        </trans-unit>
        <trans-unit id="0efd92da2bceb986cab71b9630a216f1f94a3f4c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;default_scope&lt;/code&gt; is also applied while creating/building a record when the scope arguments are given as a &lt;code&gt;Hash&lt;/code&gt;. It is not applied while updating a record. E.g.:</source>
          <target state="translated">该 &lt;code&gt;default_scope&lt;/code&gt; 也被应用在创建/建立记录时的范围给出参数作为一个 &lt;code&gt;Hash&lt;/code&gt; 。更新记录时不应用。例如：</target>
        </trans-unit>
        <trans-unit id="f2d51c1146ecac1b7522a33b089ece83ff01d819" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;defaults&lt;/code&gt; parameter is unused.</source>
          <target state="translated">的 &lt;code&gt;defaults&lt;/code&gt; 参数是未使用的。</target>
        </trans-unit>
        <trans-unit id="10515ea55b6aaa14662e42d4f249c7bdf7584ed9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;delegate&lt;/code&gt; macro accepts several methods:</source>
          <target state="translated">该 &lt;code&gt;delegate&lt;/code&gt; 宏接受几种方法：</target>
        </trans-unit>
        <trans-unit id="d9862d702a5231c262fe75d4cdd615251c770144" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;delete&lt;/code&gt; method in collection associations can now receive &lt;code&gt;Integer&lt;/code&gt; or &lt;code&gt;String&lt;/code&gt; arguments as record ids, besides records, pretty much like the &lt;code&gt;destroy&lt;/code&gt; method does. Previously it raised &lt;code&gt;ActiveRecord::AssociationTypeMismatch&lt;/code&gt; for such arguments. From Rails 4.0 on &lt;code&gt;delete&lt;/code&gt; automatically tries to find the records matching the given ids before deleting them.</source>
          <target state="translated">现在，集合关联中的 &lt;code&gt;delete&lt;/code&gt; 方法可以将 &lt;code&gt;Integer&lt;/code&gt; 或 &lt;code&gt;String&lt;/code&gt; 参数作为记录ID 接收，除了记录之外，还与 &lt;code&gt;destroy&lt;/code&gt; 方法非常相似。以前，它为此类参数引发了 &lt;code&gt;ActiveRecord::AssociationTypeMismatch&lt;/code&gt; 。从Rails 4.0开始， &lt;code&gt;delete&lt;/code&gt; 自动尝试查找与给定ID匹配的记录，然后再将其删除。</target>
        </trans-unit>
        <trans-unit id="6252c621b15137a9455c19049b370dfca7fa87ec" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;delete&lt;/code&gt; routing method should be used for routes that destroy resources. If this was left as a typical &lt;code&gt;get&lt;/code&gt; route, it could be possible for people to craft malicious URLs like this:</source>
          <target state="translated">该 &lt;code&gt;delete&lt;/code&gt; 路由方法应该用于那些破坏资源的路线。如果将其作为典型的 &lt;code&gt;get&lt;/code&gt; 路线，则人们可能会制作出如下所示的恶意网址：</target>
        </trans-unit>
        <trans-unit id="b37ac1a053bd42ff87ff2e12ac547bf6084b7ab5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;descendants&lt;/code&gt; method returns all classes that are &lt;code&gt;&amp;lt;&lt;/code&gt; than its receiver:</source>
          <target state="translated">所述 &lt;code&gt;descendants&lt;/code&gt; 方法返回是所有类 &lt;code&gt;&amp;lt;&lt;/code&gt; 比其接收机：</target>
        </trans-unit>
        <trans-unit id="11d85c3ba681016840334511693e1c6850e3d79c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;destroy&lt;/code&gt; action redirects to the application's &lt;code&gt;root_url&lt;/code&gt;, where the message will be displayed. Note that it's entirely up to the next action to decide what, if anything, it will do with what the previous action put in the flash. It's conventional to display any error alerts or notices from the flash in the application's layout:</source>
          <target state="translated">在 &lt;code&gt;destroy&lt;/code&gt; 行动重定向到应用程序的 &lt;code&gt;root_url&lt;/code&gt; ，将在其中显示的消息。请注意，完全由下一个动作决定什么（如果有的话）将与上一个动作放入闪存中的行为有关。通常在应用程序的布局中显示来自闪存的任何错误警报或通知：</target>
        </trans-unit>
        <trans-unit id="c21e61cb7247256721b1b304dc61c75bbdff3a81" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;destroy&lt;/code&gt; action will find the article we are looking at, locate the comment within the &lt;code&gt;@article.comments&lt;/code&gt; collection, and then remove it from the database and send us back to the show action for the article.</source>
          <target state="translated">在 &lt;code&gt;destroy&lt;/code&gt; 行动会发现我们正在寻找在文章中，找到内的评论 &lt;code&gt;@article.comments&lt;/code&gt; 集合，然后从数据库中删除它，并给我们发回表演动作的文章。</target>
        </trans-unit>
        <trans-unit id="6a254d60cd7f9d05012eea0abcf72cf44d6a965e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;development&lt;/code&gt; environment is used on your development/local computer as you interact manually with the application.</source>
          <target state="translated">当您与应用程序手动交互时， &lt;code&gt;development&lt;/code&gt; 环境将在开发/本地计算机上使用。</target>
        </trans-unit>
        <trans-unit id="793dd0d609355dd91493a40856db4e7bac65ca4b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;div_radio_button&lt;/code&gt; code from above can now be used as follows:</source>
          <target state="translated">上面的 &lt;code&gt;div_radio_button&lt;/code&gt; 代码现在可以按以下方式使用：</target>
        </trans-unit>
        <trans-unit id="04d3819f2490117215396990c85b6d2c2099121e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;download_pdf&lt;/code&gt; action in the example above will call a private method which actually generates the PDF document and returns it as a string. This string will then be streamed to the client as a file download and a filename will be suggested to the user. Sometimes when streaming files to the user, you may not want them to download the file. Take images, for example, which can be embedded into HTML pages. To tell the browser a file is not meant to be downloaded, you can set the &lt;code&gt;:disposition&lt;/code&gt; option to &quot;inline&quot;. The opposite and default value for this option is &quot;attachment&quot;.</source>
          <target state="translated">上例中的 &lt;code&gt;download_pdf&lt;/code&gt; 操作将调用一个私有方法，该方法实际上会生成PDF文档并将其作为字符串返回。然后，此字符串将作为文件下载流传输到客户端，并向用户建议文件名。有时，当向用户流式传输文件时，您可能不希望他们下载文件。例如，拍摄可以嵌入HTML页面的图像。要告诉浏览器文件不打算下载，可以将 &lt;code&gt;:disposition&lt;/code&gt; 选项设置为&amp;ldquo; inline&amp;rdquo;。此选项的相反默认值是&amp;ldquo;附件&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="302a65d72eda980fa138b8f99f35f1838dd35a0b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;enum&lt;/code&gt; macro maps an integer column to a set of possible values.</source>
          <target state="translated">该 &lt;code&gt;enum&lt;/code&gt; 宏一个整数列映射到一组可能值。</target>
        </trans-unit>
        <trans-unit id="680d859d659528ea29dc798cbd6d7fb95120da45" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;errors.full_messages&lt;/code&gt; method (or its equivalent, &lt;code&gt;errors.to_a&lt;/code&gt;) returns the error messages in a user-friendly format, with the capitalized attribute name prepended to each message, as shown in the examples below.</source>
          <target state="translated">该 &lt;code&gt;errors.full_messages&lt;/code&gt; 方法（或其等效， &lt;code&gt;errors.to_a&lt;/code&gt; ）以用户友好的格式返回错误消息，与前置到每个消息，如下面实施例中的大写属性名称。</target>
        </trans-unit>
        <trans-unit id="3be084dae615fd05f276a20e304dbd1661339942" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;exclusion&lt;/code&gt; helper has an option &lt;code&gt;:in&lt;/code&gt; that receives the set of values that will not be accepted for the validated attributes. The &lt;code&gt;:in&lt;/code&gt; option has an alias called &lt;code&gt;:within&lt;/code&gt; that you can use for the same purpose, if you'd like to. This example uses the &lt;code&gt;:message&lt;/code&gt; option to show how you can include the attribute's value. For full options to the message argument please see the &lt;a href=&quot;#message&quot;&gt;message documentation&lt;/a&gt;.</source>
          <target state="translated">在 &lt;code&gt;exclusion&lt;/code&gt; 助手有一个选项 &lt;code&gt;:in&lt;/code&gt; 接收组不通过认证的属性所接受的值。的 &lt;code&gt;:in&lt;/code&gt; 选项称为一个别名 &lt;code&gt;:within&lt;/code&gt; ，你可以使用同样的目的，如果你想。本示例使用 &lt;code&gt;:message&lt;/code&gt; 选项显示如何包含属性的值。有关message参数的完整选项，请参阅&lt;a href=&quot;#message&quot;&gt;消息文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="027d9be8c0f72dc7f6ad32ab9c17f75b4b37a3e2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;exists?&lt;/code&gt; method also takes multiple values, but the catch is that it will return &lt;code&gt;true&lt;/code&gt; if any one of those records exists.</source>
          <target state="translated">该 &lt;code&gt;exists?&lt;/code&gt; 方法也采用多个值，但要注意的是，如果其中任何一条记录存在，它将返回 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4fb4ebc6ce4fc6fd7fa99d5a532549a67f6bb54e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;extending&lt;/code&gt; method specifies a named module to extend the association proxy. Association extensions are discussed in detail &lt;a href=&quot;#association-extensions&quot;&gt;later in this guide&lt;/a&gt;.</source>
          <target state="translated">的 &lt;code&gt;extending&lt;/code&gt; 方法指定了名为模块以延长的关联代理。关联扩展将&lt;a href=&quot;#association-extensions&quot;&gt;在本指南的后面&lt;/a&gt;部分详细讨论。</target>
        </trans-unit>
        <trans-unit id="54a74e3ec495e190713f8a3009fabb5c19b1430e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;extension&lt;/code&gt; argument allows you to pass a block into a &lt;a href=&quot;classmethods#method-i-has_and_belongs_to_many&quot;&gt;#has_and_belongs_to_many&lt;/a&gt; association. This is useful for adding new finders, creators and other factory-type methods to be used as part of the association.</source>
          <target state="translated">该 &lt;code&gt;extension&lt;/code&gt; 参数允许块传递到一个&lt;a href=&quot;classmethods#method-i-has_and_belongs_to_many&quot;&gt;#has_and_belongs_to_many&lt;/a&gt;关联。这对于添加新的查找器，创建者和其他工厂类型方法（用作关联的一部分）很有用。</target>
        </trans-unit>
        <trans-unit id="9a1f2ffe32fde6785207ea099518f4814d3bc55b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;extension&lt;/code&gt; argument allows you to pass a block into a &lt;a href=&quot;classmethods#method-i-has_many&quot;&gt;#has_many&lt;/a&gt; association. This is useful for adding new finders, creators and other factory-type methods to be used as part of the association.</source>
          <target state="translated">使用 &lt;code&gt;extension&lt;/code&gt; 参数可以将一个块传递到&lt;a href=&quot;classmethods#method-i-has_many&quot;&gt;#has_many&lt;/a&gt;关联中。这对于添加新的查找器，创建者和其他工厂类型方法（用作关联的一部分）很有用。</target>
        </trans-unit>
        <trans-unit id="2f5d5c953a2fbc0f3b6e6dfcf6e85f31dcd54aaf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;extras&lt;/code&gt; hash allows you to specify options that would normally be provided as a query string to the action. The &lt;code&gt;message&lt;/code&gt; parameter allows you to specify a custom error message to display upon failure.</source>
          <target state="translated">该 &lt;code&gt;extras&lt;/code&gt; 散列允许你指定，通常会作为查询字符串的行动提供的选项。该 &lt;code&gt;message&lt;/code&gt; 参数允许您指定自定义错误消息，显示故障时。</target>
        </trans-unit>
        <trans-unit id="cb1895a4603c8d1474d1635c3d4d969d69334d7a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;fields_for&lt;/code&gt; yields a form builder. The parameters' name will be what &lt;code&gt;accepts_nested_attributes_for&lt;/code&gt; expects. For example, when creating a user with 2 addresses, the submitted parameters would look like:</source>
          <target state="translated">该 &lt;code&gt;fields_for&lt;/code&gt; 产生一个表单生成器。参数的名称将是 &lt;code&gt;accepts_nested_attributes_for&lt;/code&gt; 期望的名称。例如，当创建一个具有2个地址的用户时，提交的参数将如下所示：</target>
        </trans-unit>
        <trans-unit id="799c5f4334b11a22099289d7df13055f9c21a6bb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;find&lt;/code&gt; method will raise an &lt;code&gt;ActiveRecord::RecordNotFound&lt;/code&gt; exception if no matching record is found.</source>
          <target state="translated">该 &lt;code&gt;find&lt;/code&gt; 的方法将引发 &lt;code&gt;ActiveRecord::RecordNotFound&lt;/code&gt; 如果没有匹配的记录被发现异常。</target>
        </trans-unit>
        <trans-unit id="1533c80d477480d7066aa763788f092fca9e885a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;find&lt;/code&gt; method will raise an &lt;code&gt;ActiveRecord::RecordNotFound&lt;/code&gt; exception unless a matching record is found for &lt;strong&gt;all&lt;/strong&gt; of the supplied primary keys.</source>
          <target state="translated">该 &lt;code&gt;find&lt;/code&gt; 的方法将引发 &lt;code&gt;ActiveRecord::RecordNotFound&lt;/code&gt; 除非匹配的记录，发现异常&lt;strong&gt;所有&lt;/strong&gt;提供的主键。</target>
        </trans-unit>
        <trans-unit id="63b6a2239c4baaf6fda412a24e05cc4530881b20" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;find_by!&lt;/code&gt; method behaves exactly like &lt;code&gt;find_by&lt;/code&gt;, except that it will raise &lt;code&gt;ActiveRecord::RecordNotFound&lt;/code&gt; if no matching record is found. For example:</source>
          <target state="translated">该 &lt;code&gt;find_by!&lt;/code&gt; 方法的行为与 &lt;code&gt;find_by&lt;/code&gt; 完全相同，除了如果找不到匹配的记录，它将引发 &lt;code&gt;ActiveRecord::RecordNotFound&lt;/code&gt; 。例如：</target>
        </trans-unit>
        <trans-unit id="20e937bb20da5bd568c6dd7d794226eb2667add3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;find_by&lt;/code&gt; method finds the first record matching some conditions. For example:</source>
          <target state="translated">该 &lt;code&gt;find_by&lt;/code&gt; 方法找到的第一个记录匹配在某些条件。例如：</target>
        </trans-unit>
        <trans-unit id="4ad4e5671336f3d13dac0a9ba0003917813c7ffd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;find_by_*&lt;/code&gt; and &lt;code&gt;find_by_*!&lt;/code&gt; methods are dynamic finders generated automatically for every attribute. Learn more about them at the &lt;a href=&quot;active_record_querying#dynamic-finders&quot;&gt;Dynamic finders section&lt;/a&gt;</source>
          <target state="translated">该 &lt;code&gt;find_by_*&lt;/code&gt; 和 &lt;code&gt;find_by_*!&lt;/code&gt; 方法是为每个属性自动生成的动态查找器。在&amp;ldquo; &lt;a href=&quot;active_record_querying#dynamic-finders&quot;&gt;动态查找器&amp;rdquo;部分&lt;/a&gt;了解有关它们的更多信息</target>
        </trans-unit>
        <trans-unit id="12f7cd64b69f5769cebd13d0d9ee39bd4203da76" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;find_each&lt;/code&gt; and &lt;code&gt;find_in_batches&lt;/code&gt; methods are intended for use in the batch processing of a large number of records that wouldn't fit in memory all at once. If you just need to loop over a thousand records the regular find methods are the preferred option.</source>
          <target state="translated">该 &lt;code&gt;find_each&lt;/code&gt; 和 &lt;code&gt;find_in_batches&lt;/code&gt; 方法适用于在大量记录的批处理使用，将不适合在内存中的一次。如果只需要循环一千条记录，则首选常规查找方法。</target>
        </trans-unit>
        <trans-unit id="117c36d726970df8a08e1c3d127237f2e2e5bc62" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;find_each&lt;/code&gt; method retrieves records in batches and then yields &lt;em&gt;each&lt;/em&gt; one to the block. In the following example, &lt;code&gt;find_each&lt;/code&gt; retrieves users in batches of 1000 and yields them to the block one by one:</source>
          <target state="translated">该 &lt;code&gt;find_each&lt;/code&gt; 方法检索分批记录，然后产生&lt;em&gt;每&lt;/em&gt;一个到该块。在下面的示例中， &lt;code&gt;find_each&lt;/code&gt; 批量检索1000个用户，并将它们逐块释放到块中：</target>
        </trans-unit>
        <trans-unit id="5fd7bc75c818774b29b3aa8e727f31bb56804fd3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;find_in_batches&lt;/code&gt; method accepts the same options as &lt;code&gt;find_each&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;find_in_batches&lt;/code&gt; 方法接受相同的选项 &lt;code&gt;find_each&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dd7b4cacd74f1745152d358909ca6b5f582de89e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;find_in_batches&lt;/code&gt; method is similar to &lt;code&gt;find_each&lt;/code&gt;, since both retrieve batches of records. The difference is that &lt;code&gt;find_in_batches&lt;/code&gt; yields &lt;em&gt;batches&lt;/em&gt; to the block as an array of models, instead of individually. The following example will yield to the supplied block an array of up to 1000 invoices at a time, with the final block containing any remaining invoices:</source>
          <target state="translated">该 &lt;code&gt;find_in_batches&lt;/code&gt; 方法类似于 &lt;code&gt;find_each&lt;/code&gt; ，因为这两种检索记录批次。不同的是， &lt;code&gt;find_in_batches&lt;/code&gt; 产量&lt;em&gt;批次&lt;/em&gt;到该块作为模型的阵列，而不是单独地。以下示例将一次最多提供1000个发票的数组到所提供的块中，最后一个块包含所有剩余的发票：</target>
        </trans-unit>
        <trans-unit id="6159f520e181d7df651dcb14058e80d760f3616c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;find_or_create_by&lt;/code&gt; method checks whether a record with the specified attributes exists. If it doesn't, then &lt;code&gt;create&lt;/code&gt; is called. Let's see an example.</source>
          <target state="translated">该 &lt;code&gt;find_or_create_by&lt;/code&gt; 方法检查是否具有指定属性的记录存在。如果不是，则调用 &lt;code&gt;create&lt;/code&gt; 。让我们来看一个例子。</target>
        </trans-unit>
        <trans-unit id="78010177e32b144c3eb611cb4727270fa751e68a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;find_or_initialize_by&lt;/code&gt; method will work just like &lt;code&gt;find_or_create_by&lt;/code&gt; but it will call &lt;code&gt;new&lt;/code&gt; instead of &lt;code&gt;create&lt;/code&gt;. This means that a new model instance will be created in memory but won't be saved to the database. Continuing with the &lt;code&gt;find_or_create_by&lt;/code&gt; example, we now want the client named 'Nick':</source>
          <target state="translated">该 &lt;code&gt;find_or_initialize_by&lt;/code&gt; 方法将工作就像 &lt;code&gt;find_or_create_by&lt;/code&gt; 但它会调用 &lt;code&gt;new&lt;/code&gt; ，而不是 &lt;code&gt;create&lt;/code&gt; 。这意味着将在内存中创建一个新的模型实例，但不会将其保存到数据库中。继续执行 &lt;code&gt;find_or_create_by&lt;/code&gt; 示例，我们现在想要名为&amp;ldquo; Nick&amp;rdquo;的客户端：</target>
        </trans-unit>
        <trans-unit id="d5bfb14e15cd31edc4264528b391597824a39d14" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;first!&lt;/code&gt; method behaves exactly like &lt;code&gt;first&lt;/code&gt;, except that it will raise &lt;code&gt;ActiveRecord::RecordNotFound&lt;/code&gt; if no matching record is found.</source>
          <target state="translated">在 &lt;code&gt;first!&lt;/code&gt; 方法的行为与 &lt;code&gt;first&lt;/code&gt; 完全相同，不同之处在于，如果找不到匹配的记录，它将引发 &lt;code&gt;ActiveRecord::RecordNotFound&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6a1a13d1386958cd6c653bb308bb0491ae16eb9d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;first&lt;/code&gt; method finds the first record ordered by primary key (default). For example:</source>
          <target state="translated">所述 &lt;code&gt;first&lt;/code&gt; 方法找到由主键（默认）订购的第一个记录。例如：</target>
        </trans-unit>
        <trans-unit id="f0fb551b67c343e2cbfc70d0613f5d2b8370f1a8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;first&lt;/code&gt; method returns &lt;code&gt;nil&lt;/code&gt; if no matching record is found and no exception will be raised.</source>
          <target state="translated">在 &lt;code&gt;first&lt;/code&gt; 方法返回 &lt;code&gt;nil&lt;/code&gt; ，如果没有匹配的记录，没有发现任何异常将得到提升。</target>
        </trans-unit>
        <trans-unit id="ea5ce53b46ae0e7a449d83e1f68edbcaa2b0afff" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;force_ssl&lt;/code&gt; method on controllers has been deprecated and will be removed in Rails 6.1. You are encouraged to enable &lt;code&gt;config.force_ssl&lt;/code&gt; to enforce HTTPS connections throughout your application. If you need to exempt certain endpoints from redirection, you can use &lt;code&gt;config.ssl_options&lt;/code&gt; to configure that behavior.</source>
          <target state="translated">控制器上的 &lt;code&gt;force_ssl&lt;/code&gt; 方法已被弃用，并将在Rails 6.1中删除。鼓励您启用 &lt;code&gt;config.force_ssl&lt;/code&gt; 以在整个应用程序中实施HTTPS连接。如果需要使某些端点免于重定向，则可以使用 &lt;code&gt;config.ssl_options&lt;/code&gt; 配置该行为。</target>
        </trans-unit>
        <trans-unit id="344b9c8a8ca4e68f1a7c0f83112c009f61ba5ac2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;form_authenticity_token&lt;/code&gt; generates a valid authentication token. That's useful in places where Rails does not add it automatically, like in custom Ajax calls.</source>
          <target state="translated">该 &lt;code&gt;form_authenticity_token&lt;/code&gt; 产生一个有效的身份验证令牌。这在Rails不会自动添加的地方很有用，例如在自定义Ajax调用中。</target>
        </trans-unit>
        <trans-unit id="83c8cda0a7befe81fa34ed9e2be2e9caffacbb87" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;form_with&lt;/code&gt; method automatically includes the model id as a hidden field in the form. This is used to maintain the correlation between the form data and its associated model. Some ORM systems do not use IDs on nested models so in this case you want to be able to disable the hidden id.</source>
          <target state="translated">该 &lt;code&gt;form_with&lt;/code&gt; 方法自动包括模型id作为在形式的隐藏字段。这用于维护表单数据及其关联模型之间的相关性。某些ORM系统在嵌套模型上不使用ID，因此在这种情况下，您希望能够禁用隐藏的ID。</target>
        </trans-unit>
        <trans-unit id="69b130065a1e0f0936a7a4c2a9440c1ccdf9ed14" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;form_with&lt;/code&gt; method yields a &lt;strong&gt;form builder&lt;/strong&gt; object (the &lt;code&gt;f&lt;/code&gt; variable).</source>
          <target state="translated">该 &lt;code&gt;form_with&lt;/code&gt; 方法产生一个&lt;strong&gt;形式生成器&lt;/strong&gt;对象（ &lt;code&gt;f&lt;/code&gt; 变量）。</target>
        </trans-unit>
        <trans-unit id="44b683ea2740c611d87c006631f44e94224b00ed" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;get&lt;/code&gt; method kicks off the web request and populates the results into the &lt;code&gt;@response&lt;/code&gt;. It can accept up to 6 arguments:</source>
          <target state="translated">该 &lt;code&gt;get&lt;/code&gt; 方法揭开序幕的Web请求，并填充结果到 &lt;code&gt;@response&lt;/code&gt; 。它最多可以接受6个参数：</target>
        </trans-unit>
        <trans-unit id="684e7970be410bc1763730f6ba7c50c76eba1826" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;given_day_in_next_week&lt;/code&gt; defaults to the beginning of the week which is determined by &lt;code&gt;Date.beginning_of_week&lt;/code&gt; or &lt;code&gt;config.beginning_of_week&lt;/code&gt; when set.</source>
          <target state="translated">给定的 &lt;code&gt;given_day_in_next_week&lt;/code&gt; 默认为一周的开始，设置时由 &lt;code&gt;Date.beginning_of_week&lt;/code&gt; 或 &lt;code&gt;config.beginning_of_week&lt;/code&gt; 确定。</target>
        </trans-unit>
        <trans-unit id="fd64719a3e7570f62505c4a5411d3c9a04fdcb58" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;group&lt;/code&gt; method supplies an attribute name to group the result set by, using a &lt;code&gt;GROUP BY&lt;/code&gt; clause in the finder SQL.</source>
          <target state="translated">该 &lt;code&gt;group&lt;/code&gt; 方法通过提供一个属性名称组的结果集，使用 &lt;code&gt;GROUP BY&lt;/code&gt; 在取景器SQL子句。</target>
        </trans-unit>
        <trans-unit id="7bccb856953557417d83909f7ee9f194969cc46d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;has_and_belongs_to_many&lt;/code&gt; Association</source>
          <target state="translated">该 &lt;code&gt;has_and_belongs_to_many&lt;/code&gt; 协会</target>
        </trans-unit>
        <trans-unit id="990ad7e13d9022e01031f9bf91820b53a9d094e5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;has_and_belongs_to_many&lt;/code&gt; association creates a many-to-many relationship with another model. In database terms, this associates two classes via an intermediate join table that includes foreign keys referring to each of the classes.</source>
          <target state="translated">该 &lt;code&gt;has_and_belongs_to_many&lt;/code&gt; 联创与其他模型许多一对多的关系。用数据库术语来说，这通过一个中间联接表将两个类关联起来，该中间联接表包括引用每个类的外键。</target>
        </trans-unit>
        <trans-unit id="cffbff7161adc30713ca9ac8aa68e31364d2c6ba" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;has_and_belongs_to_many&lt;/code&gt; association supports these options:</source>
          <target state="translated">该 &lt;code&gt;has_and_belongs_to_many&lt;/code&gt; 协会支持这些选项：</target>
        </trans-unit>
        <trans-unit id="4c339ffc43e59d5b7bac471326071768bad11a0a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;has_many :through&lt;/code&gt; Association</source>
          <target state="translated">该 &lt;code&gt;has_many :through&lt;/code&gt; 协会</target>
        </trans-unit>
        <trans-unit id="0320dc713b5b5162baacb06b3460aea3196f3d92" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;has_many :through&lt;/code&gt; association is also useful for setting up &quot;shortcuts&quot; through nested &lt;code&gt;has_many&lt;/code&gt; associations. For example, if a document has many sections, and a section has many paragraphs, you may sometimes want to get a simple collection of all paragraphs in the document. You could set that up this way:</source>
          <target state="translated">该 &lt;code&gt;has_many :through&lt;/code&gt; 联想也是通过嵌套设置&amp;ldquo;快捷键&amp;rdquo;有用 &lt;code&gt;has_many&lt;/code&gt; 关联。例如，如果一个文档有很多节，而一个节有很多段落，则有时您可能希望获得文档中所有段落的简单集合。您可以这样设置：</target>
        </trans-unit>
        <trans-unit id="91762b98054d56233edda898e227d94549207b8e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;has_many&lt;/code&gt; Association</source>
          <target state="translated">该 &lt;code&gt;has_many&lt;/code&gt; 协会</target>
        </trans-unit>
        <trans-unit id="f5f8222264d2a934b6a2f0314860a01f8c5dd183" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;has_many&lt;/code&gt; association creates a one-to-many relationship with another model. In database terms, this association says that the other class will have a foreign key that refers to instances of this class.</source>
          <target state="translated">该 &lt;code&gt;has_many&lt;/code&gt; 协会创建了另一个模型一到一对多的关系。用数据库术语来说，该关联表示另一个类将具有一个引用该类实例的外键。</target>
        </trans-unit>
        <trans-unit id="cd4c76225002c233fb6f5aaa5ed1cb5cb57aa2e6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;has_many&lt;/code&gt; association supports these options:</source>
          <target state="translated">该 &lt;code&gt;has_many&lt;/code&gt; 协会支持这些选项：</target>
        </trans-unit>
        <trans-unit id="988b6859618033e3bb9a1f92e122ae95323801aa" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;has_many_attached&lt;/code&gt; macro sets up a one-to-many relationship between records and files. Each record can have many files attached to it.</source>
          <target state="translated">该 &lt;code&gt;has_many_attached&lt;/code&gt; 宏设置了记录和文件之间的一个一对多的关系。每条记录可以附加许多文件。</target>
        </trans-unit>
        <trans-unit id="bd6ec3cb173d0126311c08fe199fe6a9dfaad806" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;has_one :through&lt;/code&gt; Association</source>
          <target state="translated">该 &lt;code&gt;has_one :through&lt;/code&gt; 协会</target>
        </trans-unit>
        <trans-unit id="17ffb0a0d0319348df4ab2443529d1f4904e218e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;has_one&lt;/code&gt; Association</source>
          <target state="translated">该 &lt;code&gt;has_one&lt;/code&gt; 协会</target>
        </trans-unit>
        <trans-unit id="747dba40bbb7c673870bd76088956d8cb5402a92" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;has_one&lt;/code&gt; association creates a one-to-one match with another model. In database terms, this association says that the other class contains the foreign key. If this class contains the foreign key, then you should use &lt;code&gt;belongs_to&lt;/code&gt; instead.</source>
          <target state="translated">该 &lt;code&gt;has_one&lt;/code&gt; 协会创建了一个一对一的比赛与其他模型。用数据库术语来说，该关联表示另一个类包含外键。如果此类包含外键，则应改为使用 &lt;code&gt;belongs_to&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c993fa09f4ebc59995e28ea1df0b80627218145e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;has_one&lt;/code&gt; association supports these options:</source>
          <target state="translated">该 &lt;code&gt;has_one&lt;/code&gt; 协会支持这些选项：</target>
        </trans-unit>
        <trans-unit id="97b25b608327cbb38067515dd761a2bb2b7b5c97" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;has_one_attached&lt;/code&gt; macro sets up a one-to-one mapping between records and files. Each record can have one file attached to it.</source>
          <target state="translated">该 &lt;code&gt;has_one_attached&lt;/code&gt; 宏设置了记录和文件之间的一个一对一的映射。每个记录可以附加一个文件。</target>
        </trans-unit>
        <trans-unit id="16c2a4f91819f8b86c509d7a07ac7d73161aa050" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;head&lt;/code&gt; method can be used to send responses with only headers to the browser. The &lt;code&gt;head&lt;/code&gt; method accepts a number or symbol (see &lt;a href=&quot;#the-status-option&quot;&gt;reference table&lt;/a&gt;) representing an HTTP status code. The options argument is interpreted as a hash of header names and values. For example, you can return only an error header:</source>
          <target state="translated">该 &lt;code&gt;head&lt;/code&gt; 的方法可以用来发送仅头到浏览器的响应。所述 &lt;code&gt;head&lt;/code&gt; 方法接受数字或符号（见&lt;a href=&quot;#the-status-option&quot;&gt;参考表&lt;/a&gt;）表示的HTTP状态代码。options参数被解释为标题名称和值的哈希。例如，您只能返回错误标头：</target>
        </trans-unit>
        <trans-unit id="b8293b26d129f95bbddddfcb98829fe4fda5149e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;helper&lt;/code&gt; class method can take a series of helper module names, a block, or both.</source>
          <target state="translated">该 &lt;code&gt;helper&lt;/code&gt; 类方法可以采取一系列辅助模块名称，块，或两者兼而有之。</target>
        </trans-unit>
        <trans-unit id="f21d9b5aa0da0f73ed93d8f9453e61e0eeb514e8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;helpers&lt;/code&gt;, &lt;code&gt;mailers&lt;/code&gt;, and &lt;code&gt;models&lt;/code&gt; directories are meant to hold tests for view helpers, mailers, and models, respectively. The &lt;code&gt;channels&lt;/code&gt; directory is meant to hold tests for Action Cable connection and channels. The &lt;code&gt;controllers&lt;/code&gt; directory is meant to hold tests for controllers, routes, and views. The &lt;code&gt;integration&lt;/code&gt; directory is meant to hold tests for interactions between controllers.</source>
          <target state="translated">该 &lt;code&gt;helpers&lt;/code&gt; ， &lt;code&gt;mailers&lt;/code&gt; 和 &lt;code&gt;models&lt;/code&gt; 目录是为了分别保持视图助手，邮寄和模型测试。该 &lt;code&gt;channels&lt;/code&gt; 目录是为了保持测试行动电缆连接和渠道。该 &lt;code&gt;controllers&lt;/code&gt; 目录是为了保持测试的控制器，路线和意见。该 &lt;code&gt;integration&lt;/code&gt; 目录是为了保持测试的控制器之间的相互作用。</target>
        </trans-unit>
        <trans-unit id="16e1462ad66cf4f6068f520debadf44e4c54fe3e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;image_tag&lt;/code&gt; helper builds an HTML &lt;code&gt;&amp;lt;img /&amp;gt;&lt;/code&gt; tag to the specified file. By default, files are loaded from &lt;code&gt;public/images&lt;/code&gt;.</source>
          <target state="translated">所述 &lt;code&gt;image_tag&lt;/code&gt; 辅助建立的HTML &lt;code&gt;&amp;lt;img /&amp;gt;&lt;/code&gt; 标记到指定的文件。默认情况下，文件是从 &lt;code&gt;public/images&lt;/code&gt; 加载的。</target>
        </trans-unit>
        <trans-unit id="925aed193e567156d3b8bff8e407b7d17dcd02c9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;inclusion&lt;/code&gt; helper has an option &lt;code&gt;:in&lt;/code&gt; that receives the set of values that will be accepted. The &lt;code&gt;:in&lt;/code&gt; option has an alias called &lt;code&gt;:within&lt;/code&gt; that you can use for the same purpose, if you'd like to. The previous example uses the &lt;code&gt;:message&lt;/code&gt; option to show how you can include the attribute's value. For full options please see the &lt;a href=&quot;#message&quot;&gt;message documentation&lt;/a&gt;.</source>
          <target state="translated">该 &lt;code&gt;inclusion&lt;/code&gt; 助手有一个选项 &lt;code&gt;:in&lt;/code&gt; 接收组将被接受的值。的 &lt;code&gt;:in&lt;/code&gt; 选项称为一个别名 &lt;code&gt;:within&lt;/code&gt; ，你可以使用同样的目的，如果你想。前面的示例使用 &lt;code&gt;:message&lt;/code&gt; 选项显示如何包含属性的值。有关完整选项，请参阅&lt;a href=&quot;#message&quot;&gt;消息文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d77d8e7832ddfe4407eeae4a6fbbf808f4ad4747" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;indent!&lt;/code&gt; method performs indentation in-place.</source>
          <target state="translated">该 &lt;code&gt;indent!&lt;/code&gt; 方法执行就位缩进。</target>
        </trans-unit>
        <trans-unit id="b5f94b3d78b6eb65988b0f525e0dd3017e47aeff" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;info&lt;/code&gt; hash is optional, and if given is used to define metadata about the current schema (currently, only the schema's version):</source>
          <target state="translated">该 &lt;code&gt;info&lt;/code&gt; 哈希值是可选的，如果给用于定义有关当前模式（目前，只有架构的版本）的元数据：</target>
        </trans-unit>
        <trans-unit id="d6043a5ac1dd3bda69ff91de1e86b4cbd79537d9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;initialize!&lt;/code&gt; method looks like this:</source>
          <target state="translated">在 &lt;code&gt;initialize!&lt;/code&gt; 方法看起来像这样：</target>
        </trans-unit>
        <trans-unit id="e815e929a8a1b21e10c40e9bae542b99fe343fcc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;initialize&lt;/code&gt; method in &lt;code&gt;Rack::Server&lt;/code&gt; simply sets a couple of variables:</source>
          <target state="translated">&lt;code&gt;Rack::Server&lt;/code&gt; 的 &lt;code&gt;initialize&lt;/code&gt; 方法只需设置几个变量：</target>
        </trans-unit>
        <trans-unit id="8d933a4dec33afb4edf7cb6141c5ca44070aed0f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;initialize&lt;/code&gt; method of &lt;code&gt;Rack::Builder&lt;/code&gt; will take the block here and execute it within an instance of &lt;code&gt;Rack::Builder&lt;/code&gt;. This is where the majority of the initialization process of Rails happens. The &lt;code&gt;require&lt;/code&gt; line for &lt;code&gt;config/environment.rb&lt;/code&gt; in &lt;code&gt;config.ru&lt;/code&gt; is the first to run:</source>
          <target state="translated">&lt;code&gt;Rack::Builder&lt;/code&gt; 的 &lt;code&gt;initialize&lt;/code&gt; 方法将在此处获取代码块，并在 &lt;code&gt;Rack::Builder&lt;/code&gt; 的实例中执行该代码块。这是大多数Rails初始化过程发生的地方。在 &lt;code&gt;require&lt;/code&gt; 对线路 &lt;code&gt;config/environment.rb&lt;/code&gt; 在 &lt;code&gt;config.ru&lt;/code&gt; 是第一次运行：</target>
        </trans-unit>
        <trans-unit id="eb8cf7bc7fde4ca0f2119f95fa23bd1458b04a97" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;initializer&lt;/code&gt; method takes three arguments with the first being the name for the initializer and the second being an options hash (not shown here) and the third being a block. The &lt;code&gt;:before&lt;/code&gt; key in the options hash can be specified to specify which initializer this new initializer must run before, and the &lt;code&gt;:after&lt;/code&gt; key will specify which initializer to run this initializer &lt;em&gt;after&lt;/em&gt;.</source>
          <target state="translated">所述 &lt;code&gt;initializer&lt;/code&gt; 方法有三个参数与第一个是名称为初始值设定，第二个是一个选项散列（在此未示出）和第三个是一个块。的 &lt;code&gt;:before&lt;/code&gt; 可以指定在选项哈希键来指定初始化这个新的初始化必须在运行，并且 &lt;code&gt;:after&lt;/code&gt; 按键会指定初始化运行这个初始化&lt;em&gt;之后&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="0cbb628221c6b56bd4cc12f278d4d7ec1fad447e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;inquiry&lt;/code&gt; method converts a string into a &lt;code&gt;StringInquirer&lt;/code&gt; object making equality checks prettier.</source>
          <target state="translated">该 &lt;code&gt;inquiry&lt;/code&gt; 方法的字符串转换成 &lt;code&gt;StringInquirer&lt;/code&gt; 对象进行平等检查漂亮。</target>
        </trans-unit>
        <trans-unit id="4368356824c1f90a719a11b26d9d2b80cca5b47a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ip_spoofing_check&lt;/code&gt; option is on by default. When on, an exception is raised if it looks like the client is trying to lie about its own IP address. It makes sense to turn off this check on sites aimed at non-IP clients (like WAP devices), or behind proxies that set headers in an incorrect or confusing way (like AWS ELB).</source>
          <target state="translated">该 &lt;code&gt;ip_spoofing_check&lt;/code&gt; 选项默认是打开的。启用后，如果客户端似乎在撒谎自己的IP地址，则会引发异常。在针对非IP客户端（例如WAP设备）或以错误或令人困惑的方式设置标头的代理之后的站点（例如AWS ELB）之后，关闭此检查很有意义。</target>
        </trans-unit>
        <trans-unit id="b09401c9b414a2395b8d42f97438cccb9d785a4e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;isolate_namespace&lt;/code&gt; method here deserves special notice. This call is responsible for isolating the controllers, models, routes, and other things into their own namespace, away from similar components inside the application. Without this, there is a possibility that the engine's components could &quot;leak&quot; into the application, causing unwanted disruption, or that important engine components could be overridden by similarly named things within the application. One of the examples of such conflicts is helpers. Without calling &lt;code&gt;isolate_namespace&lt;/code&gt;, the engine's helpers would be included in an application's controllers.</source>
          <target state="translated">这里的 &lt;code&gt;isolate_namespace&lt;/code&gt; 方法值得特别注意。该调用负责将控制器，模型，路由和其他事物隔离到其自己的名称空间中，从而与应用程序内的类似组件隔离开来。否则，引擎的组件可能会&amp;ldquo;泄漏&amp;rdquo;到应用程序中，从而导致不必要的中断，或者重要的引擎组件可能会被应用程序中类似名称的内容所覆盖。此类冲突的例子之一是助手。如果不调用 &lt;code&gt;isolate_namespace&lt;/code&gt; ，则引擎的帮助程序将包含在应用程序的控制器中。</target>
        </trans-unit>
        <trans-unit id="210734494bd9582718be117c54236d0ce2f71684" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;javascript_include_tag&lt;/code&gt; helper returns an HTML &lt;code&gt;script&lt;/code&gt; tag for each source provided.</source>
          <target state="translated">该 &lt;code&gt;javascript_include_tag&lt;/code&gt; 助手返回一个HTML &lt;code&gt;script&lt;/code&gt; 用于提供每个源标签。</target>
        </trans-unit>
        <trans-unit id="395b2f4e52dd2af3fff86366e9d256770074e3a4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;key&lt;/code&gt; argument can also respond to &lt;code&gt;cache_key&lt;/code&gt; or &lt;code&gt;to_param&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;key&lt;/code&gt; 参数还可以应对 &lt;code&gt;cache_key&lt;/code&gt; 或 &lt;code&gt;to_param&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3d196e27638d0ab8144821979efc4319dd575947" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;last!&lt;/code&gt; method behaves exactly like &lt;code&gt;last&lt;/code&gt;, except that it will raise &lt;code&gt;ActiveRecord::RecordNotFound&lt;/code&gt; if no matching record is found.</source>
          <target state="translated">在 &lt;code&gt;last!&lt;/code&gt; 方法的行为与 &lt;code&gt;last&lt;/code&gt; 完全相同，不同之处在于，如果找不到匹配的记录，它将引发 &lt;code&gt;ActiveRecord::RecordNotFound&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e4f7263f68aef61de417c358848e682be43e5c06" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;last&lt;/code&gt; method finds the last record ordered by primary key (default). For example:</source>
          <target state="translated">在 &lt;code&gt;last&lt;/code&gt; 方法找到的主键（默认）订购的最后一个记录。例如：</target>
        </trans-unit>
        <trans-unit id="64d5bd344522049e769fc7e252235d647288a734" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;last&lt;/code&gt; method returns &lt;code&gt;nil&lt;/code&gt; if no matching record is found and no exception will be raised.</source>
          <target state="translated">在 &lt;code&gt;last&lt;/code&gt; 方法返回 &lt;code&gt;nil&lt;/code&gt; ，如果没有匹配的记录，没有发现任何异常将得到提升。</target>
        </trans-unit>
        <trans-unit id="a629205deccecaae41339c758aaf5cab1094b60f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;limit&lt;/code&gt; may be anything that can evaluate to a string via to_s. It should look like an integer, or an Arel SQL literal.</source>
          <target state="translated">该 &lt;code&gt;limit&lt;/code&gt; 可以是任何可以评估通过to_s字符串。它看起来应该像整数或Arel SQL文字。</target>
        </trans-unit>
        <trans-unit id="6863f1f9bdb068d9211a342efe3ace4921baf955" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;limit&lt;/code&gt; method lets you restrict the total number of objects that will be fetched through an association.</source>
          <target state="translated">使用 &lt;code&gt;limit&lt;/code&gt; 方法可以限制将通过关联获取的对象总数。</target>
        </trans-unit>
        <trans-unit id="93dafc5d57f7c4f2df3b95398b538516ed45fdb1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;link_to&lt;/code&gt; method is one of Rails' built-in view helpers. It creates a hyperlink based on text to display and where to go - in this case, to the path for articles.</source>
          <target state="translated">该 &lt;code&gt;link_to&lt;/code&gt; 方法是Rails的内置视图助手之一。它根据要显示的文字和要创建的位置创建超链接-在这种情况下，指向文章的路径。</target>
        </trans-unit>
        <trans-unit id="d2ef0bb7823f7404afca03b304638d73f26532cd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;mail&lt;/code&gt; method, if not passed a block, will inspect your views and send all the views with the same name as the method, so the above action would send the &lt;code&gt;welcome.text.erb&lt;/code&gt; view file as well as the &lt;code&gt;welcome.html.erb&lt;/code&gt; view file in a &lt;code&gt;multipart/alternative&lt;/code&gt; email.</source>
          <target state="translated">该 &lt;code&gt;mail&lt;/code&gt; 的方法，如果不通过一个块，将检查你的意见，并与同名的方法把所有的意见，因此，上述行动将发送 &lt;code&gt;welcome.text.erb&lt;/code&gt; 视图文件以及与 &lt;code&gt;welcome.html.erb&lt;/code&gt; 查看包含 &lt;code&gt;multipart/alternative&lt;/code&gt; 电子邮件的文件。</target>
        </trans-unit>
        <trans-unit id="64bef344d8bafd389738a69f91f6d48578dbc8d3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;marshal_dump&lt;/code&gt; and &lt;code&gt;_dump&lt;/code&gt; methods are exempt from delegation due to possible interference when calling &lt;code&gt;Marshal.dump(object)&lt;/code&gt;, should the delegation target method of &lt;code&gt;object&lt;/code&gt; add or remove instance variables.</source>
          <target state="translated">该 &lt;code&gt;marshal_dump&lt;/code&gt; 和 &lt;code&gt;_dump&lt;/code&gt; 调用时方法都来自代表团由于可能的干扰豁免 &lt;code&gt;Marshal.dump(object)&lt;/code&gt; ，应代表团目标方法 &lt;code&gt;object&lt;/code&gt; 添加或删除实例变量。</target>
        </trans-unit>
        <trans-unit id="2dda7e6e1d7a859abcdcd7093c062fa329eb30a5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;mass_assignment_sanitizer&lt;/code&gt; configuration setting should also be added to &lt;code&gt;config/environments/test.rb&lt;/code&gt;:</source>
          <target state="translated">所述 &lt;code&gt;mass_assignment_sanitizer&lt;/code&gt; 配置设置也应加入到 &lt;code&gt;config/environments/test.rb&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="1d2229bad9d20be4d5c14231e078e5bed654f193" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;message&lt;/code&gt; parameter allows you to pass in an error message that is displayed upon failure.</source>
          <target state="translated">该 &lt;code&gt;message&lt;/code&gt; 参数，可以让你在被失败时显示错误消息传递。</target>
        </trans-unit>
        <trans-unit id="c4692d88e80909e2abfa7e56cbda2dce78df9f4d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;module_parent&lt;/code&gt; method on a nested named module returns the module that contains its corresponding constant:</source>
          <target state="translated">嵌套命名模块上的 &lt;code&gt;module_parent&lt;/code&gt; 方法返回包含其相应常量的模块：</target>
        </trans-unit>
        <trans-unit id="b955e08bb61f3588b54c4779732b1848ec4f0c42" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;module_parent_name&lt;/code&gt; method on a nested named module returns the fully qualified name of the module that contains its corresponding constant:</source>
          <target state="translated">嵌套命名模块上的 &lt;code&gt;module_parent_name&lt;/code&gt; 方法返回包含其相应常量的模块的标准名称：</target>
        </trans-unit>
        <trans-unit id="e110b06f1da8ca5b78b8c4e2e0e1c08716055da2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;namespace&lt;/code&gt; scope will automatically add &lt;code&gt;:as&lt;/code&gt; as well as &lt;code&gt;:module&lt;/code&gt; and &lt;code&gt;:path&lt;/code&gt; prefixes.</source>
          <target state="translated">该 &lt;code&gt;namespace&lt;/code&gt; 范围会自动添加 &lt;code&gt;:as&lt;/code&gt; 还有 &lt;code&gt;:module&lt;/code&gt; 和 &lt;code&gt;:path&lt;/code&gt; 前缀。</target>
        </trans-unit>
        <trans-unit id="ca791e115afb12d1675478a6b277d337d19197b4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;new&lt;/code&gt; action is now creating a new instance variable called &lt;code&gt;@article&lt;/code&gt;, and you'll see why that is in just a few moments.</source>
          <target state="translated">现在， &lt;code&gt;new&lt;/code&gt; 操作将创建一个名为 &lt;code&gt;@article&lt;/code&gt; 的新实例变量，您将在短时间内看到为什么这样做。</target>
        </trans-unit>
        <trans-unit id="5dbe1c959706ba4c12410c4ae5ad42676358e85f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;none&lt;/code&gt; method returns a chainable relation with no records. Any subsequent conditions chained to the returned relation will continue generating empty relations. This is useful in scenarios where you need a chainable response to a method or a scope that could return zero results.</source>
          <target state="translated">在 &lt;code&gt;none&lt;/code&gt; 方法返回没有记录的可链接关系。链接到返回关系的任何后续条件将继续生成空关系。在需要对可能返回零结果的方法或范围进行可链式响应的情况下，这很有用。</target>
        </trans-unit>
        <trans-unit id="8aef3a8817f4235a86b882fb368e88d769094dc6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;number_to_currency&lt;/code&gt;, &lt;code&gt;number_with_precision&lt;/code&gt;, &lt;code&gt;number_to_percentage&lt;/code&gt;, &lt;code&gt;number_with_delimiter&lt;/code&gt;, and &lt;code&gt;number_to_human_size&lt;/code&gt; helpers use the number format settings located in the &lt;a href=&quot;https://github.com/rails/rails/blob/master/activesupport/lib/active_support/locale/en.yml#L37&quot;&gt;number&lt;/a&gt; scope.</source>
          <target state="translated">该 &lt;code&gt;number_to_currency&lt;/code&gt; ， &lt;code&gt;number_with_precision&lt;/code&gt; ， &lt;code&gt;number_to_percentage&lt;/code&gt; ， &lt;code&gt;number_with_delimiter&lt;/code&gt; 和 &lt;code&gt;number_to_human_size&lt;/code&gt; 助手使用位于数字格式设置&lt;a href=&quot;https://github.com/rails/rails/blob/master/activesupport/lib/active_support/locale/en.yml#L37&quot;&gt;数量&lt;/a&gt;范围。</target>
        </trans-unit>
        <trans-unit id="eb2caecbac1e3a41d5817cf394dd84287443eb03" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;object&lt;/code&gt; option can be used to directly specify which object is rendered into the partial; useful when the template's object is elsewhere (e.g. in a different instance variable or in a local variable).</source>
          <target state="translated">的 &lt;code&gt;object&lt;/code&gt; 选项可用于直接指定哪个对象被渲染到部分; 当模板的对象位于其他位置（例如，在不同的实例变量或局部变量中）时，此选项很有用。</target>
        </trans-unit>
        <trans-unit id="15dc0abfaa617e737b51863f4174d38cbd829c38" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;offset&lt;/code&gt; method lets you specify the starting offset for fetching objects via an association. For example, &lt;code&gt;-&amp;gt; { offset(11) }&lt;/code&gt; will skip the first 11 records.</source>
          <target state="translated">该 &lt;code&gt;offset&lt;/code&gt; 方法可以指定为起点通过关联获取对象的偏移。例如， &lt;code&gt;-&amp;gt; { offset(11) }&lt;/code&gt; 将跳过前11条记录。</target>
        </trans-unit>
        <trans-unit id="77c1c66e8d05e9af003c64e1262319407e478374" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;offset&lt;/code&gt; method lets you specify the starting offset for fetching objects via an association. For example, if you set &lt;code&gt;offset(11)&lt;/code&gt;, it will skip the first 11 records.</source>
          <target state="translated">该 &lt;code&gt;offset&lt;/code&gt; 方法可以指定为起点通过关联获取对象的偏移。例如，如果设置 &lt;code&gt;offset(11)&lt;/code&gt; ，它将跳过前11条记录。</target>
        </trans-unit>
        <trans-unit id="82334672065635b4f19c688accdc8a95575615a5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;options&lt;/code&gt; hash accepts the same keys as &lt;a href=&quot;schemastatements#method-i-add_foreign_key&quot;&gt;#add_foreign_key&lt;/a&gt; with an addition of</source>
          <target state="translated">该 &lt;code&gt;options&lt;/code&gt; 哈希接受相同的密钥&lt;a href=&quot;schemastatements#method-i-add_foreign_key&quot;&gt;#add_foreign_key&lt;/a&gt;有加</target>
        </trans-unit>
        <trans-unit id="77f26f90bfe39c40f22dd7d79c62cd21ab2dd6b0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;options&lt;/code&gt; hash accepts the same keys as SchemaStatements#add_foreign_key.</source>
          <target state="translated">该 &lt;code&gt;options&lt;/code&gt; 哈希接受相同的密钥SchemaStatements＃add_foreign_key。</target>
        </trans-unit>
        <trans-unit id="233878fefa4f6993f4e6f5ec1818e5bb0379fab5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;options&lt;/code&gt; hash accepts the same options as &lt;code&gt;url_for&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;options&lt;/code&gt; 哈希接受相同的选项 &lt;code&gt;url_for&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1bef9f9982c6deff18008de93564cb624e7ea8c8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;options&lt;/code&gt; hash can be used with attributes with no value like (&lt;code&gt;disabled&lt;/code&gt; and &lt;code&gt;readonly&lt;/code&gt;), which you can give a value of true in the &lt;code&gt;options&lt;/code&gt; hash. You can use symbols or strings for the attribute names.</source>
          <target state="translated">该 &lt;code&gt;options&lt;/code&gt; 哈希可以用像（没有值的属性可以使用 &lt;code&gt;disabled&lt;/code&gt; 和 &lt;code&gt;readonly&lt;/code&gt; ），你可以在给true值 &lt;code&gt;options&lt;/code&gt; 哈希值。您可以使用符号或字符串作为属性名称。</target>
        </trans-unit>
        <trans-unit id="f258ac1e3cd63f1069683f25d07a803b0e381bdf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;options&lt;/code&gt; hash can include the following keys:</source>
          <target state="translated">该 &lt;code&gt;options&lt;/code&gt; 哈希可以包括以下键：</target>
        </trans-unit>
        <trans-unit id="88b2044b2765a19a12f430e88806032c881746a3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;options&lt;/code&gt; hash is passed downwards:</source>
          <target state="translated">该 &lt;code&gt;options&lt;/code&gt; 哈希向下通过：</target>
        </trans-unit>
        <trans-unit id="52b8a463e8a7b937f0e298a783a9634891e4d51e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;options&lt;/code&gt; parameter takes a hash with any of these keys: &lt;code&gt;:years&lt;/code&gt;, &lt;code&gt;:months&lt;/code&gt;, &lt;code&gt;:weeks&lt;/code&gt;, &lt;code&gt;:days&lt;/code&gt;, &lt;code&gt;:hours&lt;/code&gt;, &lt;code&gt;:minutes&lt;/code&gt;, &lt;code&gt;:seconds&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;options&lt;/code&gt; 参数采取任何与这些键的哈希： &lt;code&gt;:years&lt;/code&gt; ， &lt;code&gt;:months&lt;/code&gt; ， &lt;code&gt;:weeks&lt;/code&gt; ， &lt;code&gt;:days&lt;/code&gt; ， &lt;code&gt;:hours&lt;/code&gt; ， &lt;code&gt;:minutes&lt;/code&gt; ， &lt;code&gt;:seconds&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5159943b41f8754e74b0dcfeee4e2c01bede8a26" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;options[:config]&lt;/code&gt; value defaults to &lt;code&gt;config.ru&lt;/code&gt; which contains this:</source>
          <target state="translated">的 &lt;code&gt;options[:config]&lt;/code&gt; 值默认为 &lt;code&gt;config.ru&lt;/code&gt; 包含该：</target>
        </trans-unit>
        <trans-unit id="81355a8a084d3ec1d4336bde462d2bfcb0e6803f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;order&lt;/code&gt; method dictates the order in which associated objects will be received (in the syntax used by an SQL &lt;code&gt;ORDER BY&lt;/code&gt; clause).</source>
          <target state="translated">的 &lt;code&gt;order&lt;/code&gt; 方法使然，其中相关联的对象将被接收的顺序（在由SQL中使用的语法 &lt;code&gt;ORDER BY&lt;/code&gt; 子句）。</target>
        </trans-unit>
        <trans-unit id="0f58260847673fd06f904238242c4986e4cabccb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;parallelize_setup&lt;/code&gt; method is called right after the processes are forked. The &lt;code&gt;parallelize_teardown&lt;/code&gt; method is called right before the processes are closed.</source>
          <target state="translated">在分叉进程之后立即调用 &lt;code&gt;parallelize_setup&lt;/code&gt; 方法。该 &lt;code&gt;parallelize_teardown&lt;/code&gt; 进程被关闭之前方法被调用的权利。</target>
        </trans-unit>
        <trans-unit id="99d07f59c39ca0960a8e1e3fd108379947f6f596" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;params&lt;/code&gt; hash is not limited to one-dimensional keys and values. It can contain nested arrays and hashes. To send an array of values, append an empty pair of square brackets &quot;[]&quot; to the key name:</source>
          <target state="translated">所述 &lt;code&gt;params&lt;/code&gt; 散列不限于一维的键和值。它可以包含嵌套数组和哈希。要发送值数组，请在键名称后附加一对空的方括号&amp;ldquo; []&amp;rdquo;：</target>
        </trans-unit>
        <trans-unit id="dc658a3f446cb8a8a972e259ffe7e8b1d0c86ff0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;params&lt;/code&gt; hash will always contain the &lt;code&gt;:controller&lt;/code&gt; and &lt;code&gt;:action&lt;/code&gt; keys, but you should use the methods &lt;code&gt;controller_name&lt;/code&gt; and &lt;code&gt;action_name&lt;/code&gt; instead to access these values. Any other parameters defined by the routing, such as &lt;code&gt;:id&lt;/code&gt;, will also be available. As an example, consider a listing of clients where the list can show either active or inactive clients. We can add a route which captures the &lt;code&gt;:status&lt;/code&gt; parameter in a &quot;pretty&quot; URL:</source>
          <target state="translated">该 &lt;code&gt;params&lt;/code&gt; 哈希总是包含 &lt;code&gt;:controller&lt;/code&gt; 和 &lt;code&gt;:action&lt;/code&gt; 按键，但你应该使用的方法 &lt;code&gt;controller_name&lt;/code&gt; 和 &lt;code&gt;action_name&lt;/code&gt; ，而不是访问这些值。路由定义的任何其他参数，例如 &lt;code&gt;:id&lt;/code&gt; ，也将可用。例如，考虑一个客户端列表，该列表可以显示活动或不活动的客户端。我们可以添加一个在&amp;ldquo;漂亮&amp;rdquo; URL中捕获 &lt;code&gt;:status&lt;/code&gt; 参数的路由：</target>
        </trans-unit>
        <trans-unit id="ebe6591f871aeb257c13a5ccdbc3912607f65b19" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;params&lt;/code&gt; object acts like a Hash, but lets you use symbols and strings interchangeably as keys.</source>
          <target state="translated">该 &lt;code&gt;params&lt;/code&gt; 对象就像一个哈希，但可让您使用符号和字符串是可互换使用的密钥。</target>
        </trans-unit>
        <trans-unit id="8ffa62b0f52258df4b98f9c2d2c5c49d327c41e3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;params&lt;/code&gt; will also include any parameters from the query string. For example, with this route:</source>
          <target state="translated">该 &lt;code&gt;params&lt;/code&gt; 还将包括来自查询字符串的任何参数。例如，使用以下路线：</target>
        </trans-unit>
        <trans-unit id="460759985e7c91f3604cb13e28098a536fedbec9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;prefix&lt;/code&gt; change makes Sprockets use a different URL for serving assets in development mode, and pass all requests to Sprockets. The prefix is still set to &lt;code&gt;/assets&lt;/code&gt; in the production environment. Without this change, the application would serve the precompiled assets from &lt;code&gt;/assets&lt;/code&gt; in development, and you would not see any local changes until you compile assets again.</source>
          <target state="translated">该 &lt;code&gt;prefix&lt;/code&gt; 的变化使得链轮使用不同的网址，在开发模式服务资产，并传递给链轮所有请求。在生产环境中，前缀仍设置为 &lt;code&gt;/assets&lt;/code&gt; 。如果没有此更改，该应用程序将为开发中的 &lt;code&gt;/assets&lt;/code&gt; 提供预编译的资产，并且您将看不到任何本地更改，除非您再次编译资产。</target>
        </trans-unit>
        <trans-unit id="d191a69b7f80bba0c53acf74330c66d5f3045a7c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;presence&lt;/code&gt; method returns its receiver if &lt;code&gt;present?&lt;/code&gt;, and &lt;code&gt;nil&lt;/code&gt; otherwise. It is useful for idioms like this:</source>
          <target state="translated">如果 &lt;code&gt;presence&lt;/code&gt; 方法会返回其接收者 &lt;code&gt;present?&lt;/code&gt; ，否则为 &lt;code&gt;nil&lt;/code&gt; 。对于这样的成语很有用：</target>
        </trans-unit>
        <trans-unit id="30aac7526a4d04e818ddc2edd7f3e6feeabd5821" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;production&lt;/code&gt; environment is used when you deploy your application for the world to use.</source>
          <target state="translated">在 &lt;code&gt;production&lt;/code&gt; 时，您部署，为世界使用的应用环境中使用。</target>
        </trans-unit>
        <trans-unit id="6b2604ea7c0d6684b35fc204cfb671e038ba1657" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;protected_attributes&lt;/code&gt; gem is no longer supported in Rails 5.</source>
          <target state="translated">该 &lt;code&gt;protected_attributes&lt;/code&gt; 宝石不再Rails的支持5。</target>
        </trans-unit>
        <trans-unit id="a8019779e958edd656a6bbbb8f4e51c5112725eb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;rails db:migrate&lt;/code&gt; command needs to be run here to ensure that our application has the &lt;code&gt;users&lt;/code&gt; table for future use.</source>
          <target state="translated">该 &lt;code&gt;rails db:migrate&lt;/code&gt; 命令需要在这里运行，以确保我们的应用程序的 &lt;code&gt;users&lt;/code&gt; 以备将来使用表。</target>
        </trans-unit>
        <trans-unit id="5d810de5c7cf4f0510f5cb85c0a4fc14508e6078" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;rails db:reset&lt;/code&gt; command will drop the database and set it up again. This is functionally equivalent to &lt;code&gt;rails db:drop db:setup&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;rails db:reset&lt;/code&gt; 命令将删除数据库并重新设置。这在功能上等效于 &lt;code&gt;rails db:drop db:setup&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a745961032af95b5ffc9718dee6cf39a9435fe19" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;rails db:setup&lt;/code&gt; command will create the database, load the schema, and initialize it with the seed data.</source>
          <target state="translated">该 &lt;code&gt;rails db:setup&lt;/code&gt; 命令将创建数据库，加载架构，并与种子数据初始化。</target>
        </trans-unit>
        <trans-unit id="f753b17b3a855c5b955535febb622c728d3a01a5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;rails generate&lt;/code&gt; command uses templates to create a whole lot of things. Running &lt;code&gt;rails generate&lt;/code&gt; by itself gives a list of available generators:</source>
          <target state="translated">该 &lt;code&gt;rails generate&lt;/code&gt; 命令使用模板创建了一大堆东西。自身运行的 &lt;code&gt;rails generate&lt;/code&gt; 了可用发生器的列表：</target>
        </trans-unit>
        <trans-unit id="e10bc93faabcae783aad93be82a9263c515fe6a1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;rails server&lt;/code&gt; command launches a web server named Puma which comes bundled with Rails. You'll use this any time you want to access your application through a web browser.</source>
          <target state="translated">在 &lt;code&gt;rails server&lt;/code&gt; 命令启动名为彪马Web服务器附带了Rails的捆绑。您随时可以通过网络浏览器访问应用程序。</target>
        </trans-unit>
        <trans-unit id="856e7d1a72bb43c8034a0eeba1725262865a59b9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;rails&lt;/code&gt; in the command &lt;code&gt;rails server&lt;/code&gt; is a ruby executable in your load path. This executable contains the following lines:</source>
          <target state="translated">该 &lt;code&gt;rails&lt;/code&gt; 在命令中 &lt;code&gt;rails server&lt;/code&gt; 在您的负载路径红宝石可执行文件。该可执行文件包含以下几行：</target>
        </trans-unit>
        <trans-unit id="f73a8a72ff4008b41a69bd7ae69aa453d80578d4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;raw&lt;/code&gt; helper calls &lt;code&gt;html_safe&lt;/code&gt; for you:</source>
          <target state="translated">该 &lt;code&gt;raw&lt;/code&gt; 助手来电 &lt;code&gt;html_safe&lt;/code&gt; 为您提供：</target>
        </trans-unit>
        <trans-unit id="4ff579f13be9f5a047f32881693454aef1037470" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;render&lt;/code&gt; helper can also cache individual templates rendered for a collection. It can even one up the previous example with &lt;code&gt;each&lt;/code&gt; by reading all cache templates at once instead of one by one. This is done by passing &lt;code&gt;cached: true&lt;/code&gt; when rendering the collection:</source>
          <target state="translated">该 &lt;code&gt;render&lt;/code&gt; 助手还可以缓存呈现为一个集合个体的模板。它甚至可以一次读取所有缓存模板，而不是一个一个地读取每个缓存模板，从而使 &lt;code&gt;each&lt;/code&gt; 例子更上一层楼。这是通过在呈现集合时传递 &lt;code&gt;cached: true&lt;/code&gt; 来完成的：</target>
        </trans-unit>
        <trans-unit id="165f3b8f711d92b6cd136faa486fafc9b24bb7c7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;render&lt;/code&gt; method can do without a view completely, if you're willing to use the &lt;code&gt;:inline&lt;/code&gt; option to supply ERB as part of the method call. This is perfectly valid:</source>
          <target state="translated">该 &lt;code&gt;render&lt;/code&gt; 方法，不设窗户可以做到完全，如果你愿意使用 &lt;code&gt;:inline&lt;/code&gt; 选项供应ERB作为方法调用的一部分。这是完全正确的：</target>
        </trans-unit>
        <trans-unit id="733a882de1c1e6400a9cfd13f2c40a35ce15c94c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;render&lt;/code&gt; method here is taking a very simple hash with a key of &lt;code&gt;:plain&lt;/code&gt; and value of &lt;code&gt;params[:article].inspect&lt;/code&gt;. The &lt;code&gt;params&lt;/code&gt; method is the object which represents the parameters (or fields) coming in from the form. The &lt;code&gt;params&lt;/code&gt; method returns an &lt;code&gt;ActionController::Parameters&lt;/code&gt; object, which allows you to access the keys of the hash using either strings or symbols. In this situation, the only parameters that matter are the ones from the form.</source>
          <target state="translated">这里的 &lt;code&gt;render&lt;/code&gt; 方法使用非常简单的哈希值，其键值为 &lt;code&gt;:plain&lt;/code&gt; 和 &lt;code&gt;params[:article].inspect&lt;/code&gt; 。该 &lt;code&gt;params&lt;/code&gt; 方法是代表参数（或场）从表单来的对象。该 &lt;code&gt;params&lt;/code&gt; 方法返回 &lt;code&gt;ActionController::Parameters&lt;/code&gt; 对象，它可以访问使用字符串或符号的散列的密钥。在这种情况下，唯一重要的参数就是表单中的参数。</target>
        </trans-unit>
        <trans-unit id="215859271da22edb5037c0e406abee5b2136db7b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;reorder&lt;/code&gt; method overrides the default scope order. For example:</source>
          <target state="translated">该 &lt;code&gt;reorder&lt;/code&gt; 方法覆盖默认范围顺序。例如：</target>
        </trans-unit>
        <trans-unit id="82d41c6ec3db0472c61f038efb37182e6f5618fa" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;request&lt;/code&gt; Object</source>
          <target state="translated">该 &lt;code&gt;request&lt;/code&gt; 对象</target>
        </trans-unit>
        <trans-unit id="4cde4b61de54df6c90bf6be6006a2191eeb28f5d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;require_tree&lt;/code&gt; directive tells Sprockets to recursively include &lt;em&gt;all&lt;/em&gt; JavaScript files in the specified directory into the output. These paths must be specified relative to the manifest file. You can also use the &lt;code&gt;require_directory&lt;/code&gt; directive which includes all JavaScript files only in the directory specified, without recursion.</source>
          <target state="translated">该 &lt;code&gt;require_tree&lt;/code&gt; 指令告诉链轮递归包括&lt;em&gt;所有&lt;/em&gt;在指定目录到输出JavaScript文件。必须相对于清单文件指定这些路径。您也可以使用 &lt;code&gt;require_directory&lt;/code&gt; 指令，该指令仅在指定目录中包含所有JavaScript文件，而无需递归。</target>
        </trans-unit>
        <trans-unit id="bcb8dba4bd5390bf4a1e6a4ef6c8f64056e4c8a7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;reselect&lt;/code&gt; method overrides an existing select statement. For example:</source>
          <target state="translated">该 &lt;code&gt;reselect&lt;/code&gt; 方法重写现有的select语句。例如：</target>
        </trans-unit>
        <trans-unit id="511dd58b52c6e6960c4e97f83646beb31c3362f7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;resolve&lt;/code&gt; method allows customizing polymorphic mapping of models. For example:</source>
          <target state="translated">该 &lt;code&gt;resolve&lt;/code&gt; 方法允许定制的机型多态映射。例如：</target>
        </trans-unit>
        <trans-unit id="719208d2b6dc747a9f7d5a078cd40cb087cd1d1f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;response&lt;/code&gt; Object</source>
          <target state="translated">该 &lt;code&gt;response&lt;/code&gt; 对象</target>
        </trans-unit>
        <trans-unit id="afd966c2717d53315097ee93b83209f36ff780fd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;reverse_order&lt;/code&gt; method reverses the ordering clause if specified.</source>
          <target state="translated">该 &lt;code&gt;reverse_order&lt;/code&gt; 如果指定的方法将反转排序子句。</target>
        </trans-unit>
        <trans-unit id="6178a7a6ac2036a9eff7c4ec9e4e239cdf56392b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;revert&lt;/code&gt; method also accepts a block of instructions to reverse. This could be useful to revert selected parts of previous migrations. For example, let's imagine that &lt;code&gt;ExampleMigration&lt;/code&gt; is committed and it is later decided it would be best to use Active Record validations, in place of the &lt;code&gt;CHECK&lt;/code&gt; constraint, to verify the zipcode.</source>
          <target state="translated">该 &lt;code&gt;revert&lt;/code&gt; 方法还接受指令，以扭转的块。这对于还原先前迁移的选定部分可能很有用。例如，让我们假设 &lt;code&gt;ExampleMigration&lt;/code&gt; 已提交，然后决定最好使用Active Record验证代替 &lt;code&gt;CHECK&lt;/code&gt; 约束来验证邮政编码。</target>
        </trans-unit>
        <trans-unit id="974d37374d8c671ae8578960538e6a04b18e04d2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;revert&lt;/code&gt; method can be helpful when writing a new migration to undo previous migrations in whole or in part (see &lt;a href=&quot;#reverting-previous-migrations&quot;&gt;Reverting Previous Migrations&lt;/a&gt; above).</source>
          <target state="translated">当编写新迁移以全部或部分撤消先前的迁移时， &lt;code&gt;revert&lt;/code&gt; 方法可能会很有用（请参阅上面的&amp;ldquo; &lt;a href=&quot;#reverting-previous-migrations&quot;&gt;还原先前的迁移&amp;rdquo;&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="9d205c768adeae2ccae3ad6686e3cb7311fe2147" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;rewhere&lt;/code&gt; method overrides an existing, named where condition. For example:</source>
          <target state="translated">该 &lt;code&gt;rewhere&lt;/code&gt; 方法可以覆盖现有的命名WHERE条件。例如：</target>
        </trans-unit>
        <trans-unit id="bb49cc4771c30e552fbd32c7086499f40195d7a8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;root&lt;/code&gt; route only routes &lt;code&gt;GET&lt;/code&gt; requests to the action.</source>
          <target state="translated">该 &lt;code&gt;root&lt;/code&gt; 路径只有路线 &lt;code&gt;GET&lt;/code&gt; 请求的行动。</target>
        </trans-unit>
        <trans-unit id="a6ed7f28279db3db360582e45431b41c1011f54e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;run_initializers&lt;/code&gt; code itself is tricky. What Rails is doing here is traversing all the class ancestors looking for those that respond to an &lt;code&gt;initializers&lt;/code&gt; method. It then sorts the ancestors by name, and runs them. For example, the &lt;code&gt;Engine&lt;/code&gt; class will make all the engines available by providing an &lt;code&gt;initializers&lt;/code&gt; method on them.</source>
          <target state="translated">该 &lt;code&gt;run_initializers&lt;/code&gt; 代码本身是棘手的。Rails在这里所做的事情是遍历所有类祖先，以寻找那些对 &lt;code&gt;initializers&lt;/code&gt; 方法做出响应的祖先。然后，按名称对祖先进行排序，然后运行它们。例如， &lt;code&gt;Engine&lt;/code&gt; 类通过在引擎上提供 &lt;code&gt;initializers&lt;/code&gt; 方法来使所有引擎可用。</target>
        </trans-unit>
        <trans-unit id="029bbe250a2a951e17d3262b18bb5fb66ea4e28c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;sass-rails&lt;/code&gt; gem is automatically used for CSS compression if included in the &lt;code&gt;Gemfile&lt;/code&gt; and no &lt;code&gt;config.assets.css_compressor&lt;/code&gt; option is set.</source>
          <target state="translated">如果 &lt;code&gt;sass-rails&lt;/code&gt; gem包含在 &lt;code&gt;Gemfile&lt;/code&gt; 中,并且未设置 &lt;code&gt;config.assets.css_compressor&lt;/code&gt; 选项，它将自动用于CSS压缩。</target>
        </trans-unit>
        <trans-unit id="d45c792f31fe05e604435719cd4e528a90aadad4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;select&lt;/code&gt; method lets you override the SQL &lt;code&gt;SELECT&lt;/code&gt; clause that is used to retrieve data about the associated object. By default, Rails retrieves all columns.</source>
          <target state="translated">通过 &lt;code&gt;select&lt;/code&gt; 方法，您可以覆盖用于检索有关关联对象的数据的SQL &lt;code&gt;SELECT&lt;/code&gt; 子句。默认情况下，Rails检索所有列。</target>
        </trans-unit>
        <trans-unit id="470ede3c07878b0d5ce0cac029155fb229ceb42a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;select&lt;/code&gt; method lets you override the SQL &lt;code&gt;SELECT&lt;/code&gt; clause that is used to retrieve data about the associated objects. By default, Rails retrieves all columns.</source>
          <target state="translated">通过 &lt;code&gt;select&lt;/code&gt; 方法，您可以覆盖用于检索有关关联对象的数据的SQL &lt;code&gt;SELECT&lt;/code&gt; 子句。默认情况下，Rails检索所有列。</target>
        </trans-unit>
        <trans-unit id="b01a0de3c555c240ce70e23c379248155e06194a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;select_*&lt;/code&gt; family of helpers take as their first argument an instance of &lt;code&gt;Date&lt;/code&gt;, &lt;code&gt;Time&lt;/code&gt;, or &lt;code&gt;DateTime&lt;/code&gt; that is used as the currently selected value. You may omit this parameter, in which case the current date is used. For example:</source>
          <target state="translated">该 &lt;code&gt;select_*&lt;/code&gt; 佣工家庭采取作为他们的第一个参数的一个实例 &lt;code&gt;Date&lt;/code&gt; ， &lt;code&gt;Time&lt;/code&gt; 或 &lt;code&gt;DateTime&lt;/code&gt; 被用作当前所选的值。您可以省略此参数，在这种情况下，将使用当前日期。例如：</target>
        </trans-unit>
        <trans-unit id="0aefbcedb30dbd6567f5253a1883f41b650dd429" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;selected&lt;/code&gt; parameter must be either &lt;code&gt;nil&lt;/code&gt;, or a string that names an &lt;a href=&quot;../../activesupport/timezone&quot;&gt;ActiveSupport::TimeZone&lt;/a&gt;.</source>
          <target state="translated">在 &lt;code&gt;selected&lt;/code&gt; 参数必须是 &lt;code&gt;nil&lt;/code&gt; ，或者一个字符串，命名一个&lt;a href=&quot;../../activesupport/timezone&quot;&gt;的ActiveSupport ::时区&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fe848ea6858d33fcfc6cf7ec8404c22fe8dfbfa7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;send_early_hints&lt;/code&gt; method accepts a hash of links as follows:</source>
          <target state="translated">该 &lt;code&gt;send_early_hints&lt;/code&gt; 方法接受的链接哈希如下：</target>
        </trans-unit>
        <trans-unit id="c9bcd16a96b262d3703aada51fe66fc8fe1da0c4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;set_author&lt;/code&gt; method in the &lt;code&gt;Blorgh::Article&lt;/code&gt; model should also use this class:</source>
          <target state="translated">&lt;code&gt;Blorgh::Article&lt;/code&gt; 模型中的 &lt;code&gt;set_author&lt;/code&gt; 方法也应使用此类：</target>
        </trans-unit>
        <trans-unit id="9679ebab247813d491583d5018968660c55b1778" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;shallow&lt;/code&gt; method of the DSL creates a scope inside of which every nesting is shallow. This generates the same routes as the previous example:</source>
          <target state="translated">DSL 的 &lt;code&gt;shallow&lt;/code&gt; 方法创建了一个范围，在该范围内每个嵌套都是浅层的。生成的路由与前面的示例相同：</target>
        </trans-unit>
        <trans-unit id="9e78e6f176cdc03622a61cf9b3a5939510e015d7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;size&lt;/code&gt; method returns the total number of error messages for the object.</source>
          <target state="translated">的 &lt;code&gt;size&lt;/code&gt; 方法返回对象的错误消息的总数。</target>
        </trans-unit>
        <trans-unit id="3f18ffe49ae279bf3e247c1494d4d00a3a47c779" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;sql&lt;/code&gt; parameter is a full SQL query as a string. It will be called as is; there will be no database agnostic conversions performed. This should be a last resort because using database-specific terms will lock you into using that particular database engine, or require you to change your call if you switch engines.</source>
          <target state="translated">在 &lt;code&gt;sql&lt;/code&gt; 参数是一个完整的SQL查询语句的字符串。它将被原样调用；不会执行任何与数据库无关的转换。这应该是最后的选择，因为使用特定于数据库的术语将使您无法使用该特定的数据库引擎，或者如果您切换引擎，则需要更改呼叫。</target>
        </trans-unit>
        <trans-unit id="23aaaa02a8a9386d5ad24467ff74665edeeaf0b9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;stylesheet_link_tag&lt;/code&gt; helper returns an HTML &lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt; tag for each source provided.</source>
          <target state="translated">所述 &lt;code&gt;stylesheet_link_tag&lt;/code&gt; 辅助返回一个HTML &lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt; 对于提供的每个源标记。</target>
        </trans-unit>
        <trans-unit id="194dc076a7d69a7c21f87fdbade43b55cb03d20f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;subclasses&lt;/code&gt; method returns the subclasses of the receiver:</source>
          <target state="translated">的 &lt;code&gt;subclasses&lt;/code&gt; 方法返回接收器的子类：</target>
        </trans-unit>
        <trans-unit id="f1fb13cdbd34f03a4ed8b6202e3d52f897527006" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;subscribe&lt;/code&gt; method returns a subscriber object:</source>
          <target state="translated">的 &lt;code&gt;subscribe&lt;/code&gt; 方法返回订户对象：</target>
        </trans-unit>
        <trans-unit id="4813ab4f370a4419f11fbfacb67109254c7695b4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;super&lt;/code&gt; method will call &lt;code&gt;Rack::Server.start&lt;/code&gt; which begins its definition like this:</source>
          <target state="translated">该 &lt;code&gt;super&lt;/code&gt; 方法将调用 &lt;code&gt;Rack::Server.start&lt;/code&gt; 它开始它的定义是这样的：</target>
        </trans-unit>
        <trans-unit id="039af7b58f5bcb13ffe0355e617b6f338974c393" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;t.references&lt;/code&gt; line creates an integer column called &lt;code&gt;article_id&lt;/code&gt;, an index for it, and a foreign key constraint that points to the &lt;code&gt;id&lt;/code&gt; column of the &lt;code&gt;articles&lt;/code&gt; table. Go ahead and run the migration:</source>
          <target state="translated">&lt;code&gt;t.references&lt;/code&gt; 行创建一个名为 &lt;code&gt;article_id&lt;/code&gt; 的整数列，为其创建索引，并指定一个指向 &lt;code&gt;articles&lt;/code&gt; 表的 &lt;code&gt;id&lt;/code&gt; 列的外键约束。继续并运行迁移：</target>
        </trans-unit>
        <trans-unit id="552b36d59c2f885f1540170dd6ce5d223e1ad9f3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;take!&lt;/code&gt; method behaves exactly like &lt;code&gt;take&lt;/code&gt;, except that it will raise &lt;code&gt;ActiveRecord::RecordNotFound&lt;/code&gt; if no matching record is found.</source>
          <target state="translated">该 &lt;code&gt;take!&lt;/code&gt; 方法的行为与 &lt;code&gt;take&lt;/code&gt; 完全相同，不同之处在于，如果找不到匹配的记录，它将引发 &lt;code&gt;ActiveRecord::RecordNotFound&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3d867d8e76972eed1ca32771f86e357e8946bbff" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;take&lt;/code&gt; method retrieves a record without any implicit ordering. For example:</source>
          <target state="translated">该 &lt;code&gt;take&lt;/code&gt; 方法检索，没有任何隐含的排序记录。例如：</target>
        </trans-unit>
        <trans-unit id="ab23d40b84da426b638ca1624e56d7bbde28a7b9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;take&lt;/code&gt; method returns &lt;code&gt;nil&lt;/code&gt; if no record is found and no exception will be raised.</source>
          <target state="translated">该 &lt;code&gt;take&lt;/code&gt; 方法返回 &lt;code&gt;nil&lt;/code&gt; ，如果没有记录被发现，没有将引发异常。</target>
        </trans-unit>
        <trans-unit id="83836a7d3a3d29f487e62b58a8e7d0c925e91944" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;take_screenshot&lt;/code&gt; helper method can be included anywhere in your tests to take a screenshot of the browser.</source>
          <target state="translated">该 &lt;code&gt;take_screenshot&lt;/code&gt; 辅助方法，可以包含在测试中的任何地方采取了浏览器的截图。</target>
        </trans-unit>
        <trans-unit id="186f978915d5da16498fc2a31ce5738b6e7a61d3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;target&lt;/code&gt; result set is not loaded until needed. For example,</source>
          <target state="translated">该 &lt;code&gt;target&lt;/code&gt; 结果集不加载，直到需要。例如，</target>
        </trans-unit>
        <trans-unit id="d6caaddc3c48d3dbe705a48fef1cd8c4ce0ede76" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;test&lt;/code&gt; directory is where tests for the engine will go. To test the engine, there is a cut-down version of a Rails application embedded within it at &lt;code&gt;test/dummy&lt;/code&gt;. This application will mount the engine in the &lt;code&gt;test/dummy/config/routes.rb&lt;/code&gt; file:</source>
          <target state="translated">该 &lt;code&gt;test&lt;/code&gt; 目录是发动机测试将去。为了测试引擎，在 &lt;code&gt;test/dummy&lt;/code&gt; 中嵌入了一个Rails应用程序的简化版本。此应用程序会将引擎安装在 &lt;code&gt;test/dummy/config/routes.rb&lt;/code&gt; 文件中：</target>
        </trans-unit>
        <trans-unit id="b71371631fafbfc0ff3a4609264ec18900eb44ad" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;test&lt;/code&gt; directory should be treated like a typical Rails testing environment, allowing for unit, functional, and integration tests.</source>
          <target state="translated">该 &lt;code&gt;test&lt;/code&gt; 目录应该像一个典型的Rails测试环境，允许单元，功能测试和集成测试进行治疗。</target>
        </trans-unit>
        <trans-unit id="5004018241d9fedd09f648b2beaf6672bc5926c8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;test&lt;/code&gt; environment is used when running automated tests.</source>
          <target state="translated">该 &lt;code&gt;test&lt;/code&gt; 运行自动化测试时的环境中使用。</target>
        </trans-unit>
        <trans-unit id="cd770f311d6bb1e03d0ab6b309f15428d9f10e15" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;test_helper.rb&lt;/code&gt; file holds the default configuration for your tests.</source>
          <target state="translated">该 &lt;code&gt;test_helper.rb&lt;/code&gt; 中的文件保存为您测试的默认配置。</target>
        </trans-unit>
        <trans-unit id="b45bff0931d256831572e50dafddadbd42b3679c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;tmp:&lt;/code&gt; namespaced commands will help you clear and create the &lt;code&gt;Rails.root/tmp&lt;/code&gt; directory:</source>
          <target state="translated">该 &lt;code&gt;tmp:&lt;/code&gt; 命名空间的命令将帮助您清除并创建 &lt;code&gt;Rails.root/tmp&lt;/code&gt; 目录：</target>
        </trans-unit>
        <trans-unit id="1ea0aa9f98de14affd66ef910261ea292d087ab3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;to_s&lt;/code&gt; method from the Time class can be wrapped in a helper method to display a custom message if a Time object is blank:</source>
          <target state="translated">如果Time对象为空，则可以将Time类中的 &lt;code&gt;to_s&lt;/code&gt; 方法包装在帮助器方法中，以显示自定义消息：</target>
        </trans-unit>
        <trans-unit id="48dfe3a8392aaf7467b50e78ee4608869d75ff1b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;translate&lt;/code&gt; method also takes a &lt;code&gt;:scope&lt;/code&gt; option which can contain one or more additional keys that will be used to specify a &quot;namespace&quot; or scope for a translation key:</source>
          <target state="translated">该 &lt;code&gt;translate&lt;/code&gt; 方法也需要一个 &lt;code&gt;:scope&lt;/code&gt; 可包含将用于指定翻译键&amp;ldquo;命名空间&amp;rdquo;或范围的一个或多个附加键的选项：</target>
        </trans-unit>
        <trans-unit id="0e7b91934dd423361fe5b4d7f4c04cecdccaab4e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;traps&lt;/code&gt; association on &lt;code&gt;Dungeon&lt;/code&gt; and the &lt;code&gt;dungeon&lt;/code&gt; association on &lt;code&gt;Trap&lt;/code&gt; are the inverse of each other, and the inverse of the &lt;code&gt;dungeon&lt;/code&gt; association on &lt;code&gt;EvilWizard&lt;/code&gt; is the &lt;code&gt;evil_wizard&lt;/code&gt; association on &lt;code&gt;Dungeon&lt;/code&gt; (and vice-versa). By default, Active Record can guess the inverse of the association based on the name of the class. The result is the following:</source>
          <target state="translated">所述 &lt;code&gt;traps&lt;/code&gt; 上关联 &lt;code&gt;Dungeon&lt;/code&gt; 和 &lt;code&gt;dungeon&lt;/code&gt; 上关联 &lt;code&gt;Trap&lt;/code&gt; 是彼此的逆，并且逆 &lt;code&gt;dungeon&lt;/code&gt; 上关联 &lt;code&gt;EvilWizard&lt;/code&gt; 是 &lt;code&gt;evil_wizard&lt;/code&gt; 上关联 &lt;code&gt;Dungeon&lt;/code&gt; （反之亦然）。默认情况下，Active Record可以根据类的名称猜测关联的逆关系。结果如下：</target>
        </trans-unit>
        <trans-unit id="3b608af069145d7a1a229cd8736c90ecbb1e2808" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;type&lt;/code&gt; and &lt;code&gt;options&lt;/code&gt; parameters will be ignored if present. It can be helpful to provide these in a migration's &lt;code&gt;change&lt;/code&gt; method so it can be reverted. In that case, &lt;code&gt;type&lt;/code&gt; and &lt;code&gt;options&lt;/code&gt; will be used by &lt;a href=&quot;schemastatements#method-i-add_column&quot;&gt;add_column&lt;/a&gt;. Indexes on the column are automatically removed.</source>
          <target state="translated">如果存在，则 &lt;code&gt;type&lt;/code&gt; 和 &lt;code&gt;options&lt;/code&gt; 参数将被忽略。在迁移的 &lt;code&gt;change&lt;/code&gt; 方法中提供这些内容可能会有所帮助，以便可以还原它。在这种情况下， &lt;code&gt;type&lt;/code&gt; 和 &lt;code&gt;options&lt;/code&gt; 将由&lt;a href=&quot;schemastatements#method-i-add_column&quot;&gt;add_column使用&lt;/a&gt;。列上的索引会自动删除。</target>
        </trans-unit>
        <trans-unit id="74f20ebf68e4d50c0c1c19380093127edbdf2148" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;type&lt;/code&gt; parameter is normally one of the migrations native types, which is one of the following: &lt;code&gt;:primary_key&lt;/code&gt;, &lt;code&gt;:string&lt;/code&gt;, &lt;code&gt;:text&lt;/code&gt;, &lt;code&gt;:integer&lt;/code&gt;, &lt;code&gt;:bigint&lt;/code&gt;, &lt;code&gt;:float&lt;/code&gt;, &lt;code&gt;:decimal&lt;/code&gt;, &lt;code&gt;:numeric&lt;/code&gt;, &lt;code&gt;:datetime&lt;/code&gt;, &lt;code&gt;:time&lt;/code&gt;, &lt;code&gt;:date&lt;/code&gt;, &lt;code&gt;:binary&lt;/code&gt;, &lt;code&gt;:boolean&lt;/code&gt;.</source>
          <target state="translated">所述 &lt;code&gt;type&lt;/code&gt; 参数通常是迁移本地类型，它是下列之一的一种： &lt;code&gt;:primary_key&lt;/code&gt; ， &lt;code&gt;:string&lt;/code&gt; ， &lt;code&gt;:text&lt;/code&gt; ， &lt;code&gt;:integer&lt;/code&gt; ， &lt;code&gt;:bigint&lt;/code&gt; ， &lt;code&gt;:float&lt;/code&gt; ， &lt;code&gt;:decimal&lt;/code&gt; ， &lt;code&gt;:numeric&lt;/code&gt; ， &lt;code&gt;:datetime&lt;/code&gt; ， &lt;code&gt;:time&lt;/code&gt; ， &lt;code&gt;:date&lt;/code&gt; ， &lt;code&gt;:binary&lt;/code&gt; ， &lt;code&gt;:boolean&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="909c1e2f7e1700ca721bfb300acd87916d137b8c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;users&lt;/code&gt; resource here will have the following routes generated for it:</source>
          <target state="translated">这里的 &lt;code&gt;users&lt;/code&gt; 资源将为其生成以下路由：</target>
        </trans-unit>
        <trans-unit id="7b64979286dc25c90c1549f6b8c3de8ea8f19a2c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;valid?&lt;/code&gt; method will verify that the errors collection is empty, so your custom validation methods should add errors to it when you wish validation to fail:</source>
          <target state="translated">在 &lt;code&gt;valid?&lt;/code&gt; 方法将验证错误集合为空，因此当您希望验证失败时，您的自定义验证方法应向其中添加错误：</target>
        </trans-unit>
        <trans-unit id="51da5d2d391d1141e0b796d1f1e389987efeacf9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;validates_with&lt;/code&gt; helper takes a class, or a list of classes to use for validation. There is no default error message for &lt;code&gt;validates_with&lt;/code&gt;. You must manually add errors to the record's errors collection in the validator class.</source>
          <target state="translated">该 &lt;code&gt;validates_with&lt;/code&gt; 助手负责一类，或者类的列表要用于验证。没有 &lt;code&gt;validates_with&lt;/code&gt; 的默认错误消息。您必须在验证器类中手动将错误添加到记录的错误集合中。</target>
        </trans-unit>
        <trans-unit id="7223765fdb4392dac5134b286d36fda58b5447c7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;var&lt;/code&gt; method is the most convenient way to show variables and their values. Let's have &lt;code&gt;byebug&lt;/code&gt; help us with it.</source>
          <target state="translated">该 &lt;code&gt;var&lt;/code&gt; 方法是显示变量及其值最便捷的方式。让我们的 &lt;code&gt;byebug&lt;/code&gt; 帮助我们解决这个问题。</target>
        </trans-unit>
        <trans-unit id="db56453ade5f0bcdfd93cb86efe38e07aeea201a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;video_tag&lt;/code&gt; helper builds an HTML 5 &lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt; tag to the specified file. By default, files are loaded from &lt;code&gt;public/videos&lt;/code&gt;.</source>
          <target state="translated">所述 &lt;code&gt;video_tag&lt;/code&gt; 辅助构建一个HTML 5 &lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt; 标签到指定的文件。默认情况下，文件是从 &lt;code&gt;public/videos&lt;/code&gt; 加载的。</target>
        </trans-unit>
        <trans-unit id="786f5cd577d9cf7c08731cfd3c22f2b4d08a4b01" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;where&lt;/code&gt; method allows you to specify conditions to limit the records returned, representing the &lt;code&gt;WHERE&lt;/code&gt;-part of the SQL statement. Conditions can either be specified as a string, array, or hash.</source>
          <target state="translated">在 &lt;code&gt;where&lt;/code&gt; 方法允许你指定的条件来限制返回的记录，代表 &lt;code&gt;WHERE&lt;/code&gt; 双组分的SQL语句。条件可以指定为字符串，数组或哈希。</target>
        </trans-unit>
        <trans-unit id="05a4f9cbdfb67dd3d7071bbe8edd4c8495a28fff" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;where&lt;/code&gt; method lets you specify the conditions that the associated object must meet.</source>
          <target state="translated">使用 &lt;code&gt;where&lt;/code&gt; 方法可以指定关联对象必须满足的条件。</target>
        </trans-unit>
        <trans-unit id="c19f48c1a86ef523c124f8954e3c372f6c11764a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;write&lt;/code&gt; and &lt;code&gt;fetch&lt;/code&gt; methods on this cache accept two additional options that take advantage of features specific to memcached. You can specify &lt;code&gt;:raw&lt;/code&gt; to send a value directly to the server with no serialization. The value must be a string or number. You can use memcached direct operations like &lt;code&gt;increment&lt;/code&gt; and &lt;code&gt;decrement&lt;/code&gt; only on raw values. You can also specify &lt;code&gt;:unless_exist&lt;/code&gt; if you don't want memcached to overwrite an existing entry.</source>
          <target state="translated">此缓存上的 &lt;code&gt;write&lt;/code&gt; 和 &lt;code&gt;fetch&lt;/code&gt; 方法接受两个附加选项，这些选项利用了memcached特有的功能。您可以指定 &lt;code&gt;:raw&lt;/code&gt; 将值直接发送到服务器，而无需序列化。该值必须是字符串或数字。您只能对原始值使用memcached直接操作，例如 &lt;code&gt;increment&lt;/code&gt; 和 &lt;code&gt;decrement&lt;/code&gt; 。如果不想让memcached覆盖现有条目，也可以指定 &lt;code&gt;:unless_exist&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="afa4bfe437a4fc0805dd6be42774dd49262312e4" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;nesting&lt;/em&gt; at any given place is the collection of enclosing nested class and module objects outwards. The nesting at any given place can be inspected with &lt;code&gt;Module.nesting&lt;/code&gt;. For example, in the previous example, the nesting at (1) is</source>
          <target state="translated">在任何给定位置的&lt;em&gt;嵌套&lt;/em&gt;都是向外嵌套嵌套的类和模块对象的集合。可以使用 &lt;code&gt;Module.nesting&lt;/code&gt; 检查任何给定位置的嵌套。例如，在前面的示例中，在（1）处的嵌套是</target>
        </trans-unit>
        <trans-unit id="c5a3ef47071c621cb202c268e30836a0a9eec39c" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;translations load path&lt;/strong&gt; (&lt;code&gt;I18n.load_path&lt;/code&gt;) is an array of paths to files that will be loaded automatically. Configuring this path allows for customization of translations directory structure and file naming scheme.</source>
          <target state="translated">的&lt;strong&gt;翻译负载路径&lt;/strong&gt;（ &lt;code&gt;I18n.load_path&lt;/code&gt; ）是路径的数组到将被自动加载文件。配置此路径可以自定义翻译目录结构和文件命名方案。</target>
        </trans-unit>
        <trans-unit id="86d5174bea0411f873c2bb5dd4bc4ed345931f0a" translate="yes" xml:space="preserve">
          <source>The API has the same methods as &lt;a href=&quot;../../activerecord&quot;&gt;ActiveRecord&lt;/a&gt;, but each method returns a string that matches the ORM API.</source>
          <target state="translated">该API与&lt;a href=&quot;../../activerecord&quot;&gt;ActiveRecord的&lt;/a&gt;方法相同，但是每个方法都返回一个与ORM API匹配的字符串。</target>
        </trans-unit>
        <trans-unit id="55e793a2888b49a29894bdca339ead6c9fe679c8" translate="yes" xml:space="preserve">
          <source>The Accept header to send.</source>
          <target state="translated">要发送的接受头。</target>
        </trans-unit>
        <trans-unit id="6d5f016001371703e3307c75f0487c4b68163b8b" translate="yes" xml:space="preserve">
          <source>The Action Cable JavaScript package has been converted from CoffeeScript to ES2015, and we now publish the source code in the npm distribution.</source>
          <target state="translated">Action Cable JavaScript包已经从CoffeeScript转换为ES2015,我们现在在npm发行版中发布源代码。</target>
        </trans-unit>
        <trans-unit id="d4cdb1176348337a161b520cc8ddf9d538ca5295" translate="yes" xml:space="preserve">
          <source>The Action Cable server implements the Rack socket hijacking API, thereby allowing the use of a multithreaded pattern for managing connections internally, irrespective of whether the application server is multi-threaded or not.</source>
          <target state="translated">Action Cable服务器实现了Rack套接字劫持API,从而允许使用多线程模式来管理内部的连接,而不管应用服务器是否是多线程。</target>
        </trans-unit>
        <trans-unit id="8c476dfe6844359be0597b529c523d1db0da895f" translate="yes" xml:space="preserve">
          <source>The Active Record Pattern</source>
          <target state="translated">活动记录模式</target>
        </trans-unit>
        <trans-unit id="c991c23e383794b1a2ce5fb6ec92d816927cb078" translate="yes" xml:space="preserve">
          <source>The Active Record pattern implements &lt;a href=&quot;https://en.wikipedia.org/wiki/Method_chaining&quot;&gt;Method Chaining&lt;/a&gt;, which allow us to use multiple Active Record methods together in a simple and straightforward way.</source>
          <target state="translated">Active Record模式实现了&lt;a href=&quot;https://en.wikipedia.org/wiki/Method_chaining&quot;&gt;Method Chaining&lt;/a&gt;，该方法允许我们以简单明了的方式一起使用多个Active Record方法。</target>
        </trans-unit>
        <trans-unit id="0878293154da66102be3276c6af12ef4384d6b2d" translate="yes" xml:space="preserve">
          <source>The Active Record way claims that intelligence belongs in your models, not in the database. As such, features such as triggers or constraints, which push some of that intelligence back into the database, are not heavily used.</source>
          <target state="translated">主动记录的方式声称智能属于你的模型,而不是数据库。因此,诸如触发器或约束等功能并没有被大量使用,这些功能将部分智能推回到数据库中。</target>
        </trans-unit>
        <trans-unit id="437d5c829ecb969158193552a1e5f1fcea031bd9" translate="yes" xml:space="preserve">
          <source>The Article model is directly available to users of the application, so - following the best practices for developing with Rails - you should declare it &lt;strong&gt;a resource&lt;/strong&gt;:</source>
          <target state="translated">Article模型直接可用于应用程序的用户，因此-遵循使用Rails开发的最佳实践-您应将其声明&lt;strong&gt;为资源&lt;/strong&gt;：</target>
        </trans-unit>
        <trans-unit id="62aeb8f445266c127d5322b7e3e47469fab89364" translate="yes" xml:space="preserve">
          <source>The Asset Pipeline</source>
          <target state="translated">资产管道</target>
        </trans-unit>
        <trans-unit id="bf015d4f3767ea2825797ed8725414de46523dc4" translate="yes" xml:space="preserve">
          <source>The Async adapter runs jobs with an in-process thread pool.</source>
          <target state="translated">Async适配器使用进程内线程池运行作业。</target>
        </trans-unit>
        <trans-unit id="fa08b5bc17bc0e5cf864e09a2b41bfab03da6a03" translate="yes" xml:space="preserve">
          <source>The Atom spec defines five elements (content rights title subtitle summary) which may directly contain xhtml content if type: 'xhtml' is specified as an attribute. If so, this helper will take care of the enclosing div and xhtml namespace declaration. Example usage:</source>
          <target state="translated">Atom规范定义了五个元素(内容权限标题副标题摘要),如果指定type:'xhtml'作为属性,这些元素可以直接包含xhtml内容。如果是这样的话,这个帮助程序将负责外层的div和xhtml命名空间声明。使用示例。</target>
        </trans-unit>
        <trans-unit id="f2059d1c5a7ee7ea550ab849fa2357509e7e68c2" translate="yes" xml:space="preserve">
          <source>The Basic Configuration</source>
          <target state="translated">基本配置</target>
        </trans-unit>
        <trans-unit id="7e1ba6fb909a534eed2ef634c34f5b5fb5818eb5" translate="yes" xml:space="preserve">
          <source>The Basics of Creating Rails Plugins</source>
          <target state="translated">创建Rails插件的基础知识</target>
        </trans-unit>
        <trans-unit id="cd15cbd8be53475b1988d013b85b6bbc6577b599" translate="yes" xml:space="preserve">
          <source>The CDN you provisioned should give you a custom subdomain for your application such as &lt;code&gt;mycdnsubdomain.fictional-cdn.com&lt;/code&gt; (note fictional-cdn.com is not a valid CDN provider at the time of this writing). Now that you have configured your CDN server, you need to tell browsers to use your CDN to grab assets instead of your Rails server directly. You can do this by configuring Rails to set your CDN as the asset host instead of using a relative path. To set your asset host in Rails, you need to set &lt;code&gt;config.action_controller.asset_host&lt;/code&gt; in &lt;code&gt;config/environments/production.rb&lt;/code&gt;:</source>
          <target state="translated">您配置的CDN应该为您的应用程序提供一个自定义的子域，例如 &lt;code&gt;mycdnsubdomain.fictional-cdn.com&lt;/code&gt; （请注意，在撰写本文时，fictional-cdn.com不是有效的CDN提供程序）。现在，您已经配置了CDN服务器，您需要告诉浏览器使用CDN来获取资产，而不是直接使用Rails服务器。您可以通过配置Rails来将CDN设置为资产宿主，而不是使用相对路径来做到这一点。要在Rails中设置资产主机，您需要在 &lt;code&gt;config/environments/production.rb&lt;/code&gt; 中设置 &lt;code&gt;config.action_controller.asset_host&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="6cea6c7fe74b0f93c1f9ab54fa152d0c2e279f8e" translate="yes" xml:space="preserve">
          <source>The Chars object tries to be as interchangeable with &lt;a href=&quot;string&quot;&gt;String&lt;/a&gt; objects as possible: sorting and comparing between &lt;a href=&quot;string&quot;&gt;String&lt;/a&gt; and Char work like expected. The bang! methods change the internal string representation in the Chars object. Interoperability problems can be resolved easily with a &lt;code&gt;to_s&lt;/code&gt; call.</source>
          <target state="translated">Chars对象尝试与&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;对象尽可能地互换：在&lt;a href=&quot;string&quot;&gt;String&lt;/a&gt;和Char工作之间进行排序和比较，正如预期的那样。爆炸！方法更改Chars对象中的内部字符串表示形式。互操作性问题可以通过 &lt;code&gt;to_s&lt;/code&gt; 调用轻松解决。</target>
        </trans-unit>
        <trans-unit id="03e12ed22cac9637ee0a620316efab5b04dd783a" translate="yes" xml:space="preserve">
          <source>The Comment model</source>
          <target state="translated">评论模式</target>
        </trans-unit>
        <trans-unit id="61562e3418ad09bfee7afa928e1cdff150afeb86" translate="yes" xml:space="preserve">
          <source>The Comments controller</source>
          <target state="translated">评论控制器</target>
        </trans-unit>
        <trans-unit id="238e63febc701a9b94f9f64b1bc7f8600b013b00" translate="yes" xml:space="preserve">
          <source>The Configuration instance used to configure the Rails environment</source>
          <target state="translated">用于配置Rails环境的配置实例。</target>
        </trans-unit>
        <trans-unit id="26a1adaa03161aa757dfdd7900a0e22880fc1a32" translate="yes" xml:space="preserve">
          <source>The Context</source>
          <target state="translated">背景</target>
        </trans-unit>
        <trans-unit id="650fce6a189ad476c932744182820a86cd85c4ed" translate="yes" xml:space="preserve">
          <source>The Controller</source>
          <target state="translated">主计长</target>
        </trans-unit>
        <trans-unit id="e37cd191bc90ccf488a78e204b6fc81493a5691d" translate="yes" xml:space="preserve">
          <source>The CookieStore can store around 4kB of data - much less than the others - but this is usually enough. Storing large amounts of data in the session is discouraged no matter which session store your application uses. You should especially avoid storing complex objects (anything other than basic Ruby objects, the most common example being model instances) in the session, as the server might not be able to reassemble them between requests, which will result in an error.</source>
          <target state="translated">CookieStore可以存储大约4kB的数据--比其他数据少得多--但这通常已经足够了。无论你的应用程序使用哪种会话存储,都不鼓励在会话中存储大量的数据。你应该特别避免在会话中存储复杂的对象(除了基本的Ruby对象之外的任何东西,最常见的例子是模型实例),因为服务器可能无法在请求之间重新组合它们,这将导致一个错误。</target>
        </trans-unit>
        <trans-unit id="388ca69f840860706f49139a7e82fe3c50fa738a" translate="yes" xml:space="preserve">
          <source>The DOM class convention is to use the singular form of an object or class.</source>
          <target state="translated">DOM类的惯例是使用对象或类的单数形式。</target>
        </trans-unit>
        <trans-unit id="b84555bfbd95f52af7de1fb3b917316088e87148" translate="yes" xml:space="preserve">
          <source>The DOM id convention is to use the singular form of an object or class with the id following an underscore. If no id is found, prefix with &amp;ldquo;new_&amp;rdquo; instead.</source>
          <target state="translated">DOM id约定是使用对象或类的单数形式，其ID后跟下划线。如果未找到ID，请使用&amp;ldquo; new_&amp;rdquo;作为前缀。</target>
        </trans-unit>
        <trans-unit id="014b99805115373da3292429d6b5602d56b4cc92" translate="yes" xml:space="preserve">
          <source>The Default 500 and 404 Templates</source>
          <target state="translated">默认的500和404模板</target>
        </trans-unit>
        <trans-unit id="abd403f7a8d76d19d9bb9d3ded23ba251e716e1e" translate="yes" xml:space="preserve">
          <source>The Executor always has important work to do, like database connection management. When &lt;code&gt;cache_classes&lt;/code&gt; and &lt;code&gt;eager_load&lt;/code&gt; are both true (&lt;code&gt;production&lt;/code&gt;), no autoloading or class reloading will occur, so it does not need the Load Interlock. If either of those are false (&lt;code&gt;development&lt;/code&gt;), then the Executor will use the Load Interlock to ensure constants are only loaded when it is safe.</source>
          <target state="translated">执行器总是要做重要的工作，例如数据库连接管理。当 &lt;code&gt;cache_classes&lt;/code&gt; 和 &lt;code&gt;eager_load&lt;/code&gt; 都为true（ &lt;code&gt;production&lt;/code&gt; ）时，将不会自动加载或重新加载类，因此不需要加载互锁。如果其中任何一个为false（ &lt;code&gt;development&lt;/code&gt; ），则执行程序将使用Load Interlock来确保仅在安全时加载常量。</target>
        </trans-unit>
        <trans-unit id="75336e82f6983b96195933e136772c6606001209" translate="yes" xml:space="preserve">
          <source>The Executor automatically acquires a &lt;code&gt;running&lt;/code&gt; lock for the duration of its block, and autoload knows when to upgrade to a &lt;code&gt;load&lt;/code&gt; lock, and switch back to &lt;code&gt;running&lt;/code&gt; again afterwards.</source>
          <target state="translated">执行器在其块的持续时间内自动获取 &lt;code&gt;running&lt;/code&gt; 锁，自动加载知道何时升级到 &lt;code&gt;load&lt;/code&gt; 锁，然后再切换回 &lt;code&gt;running&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e9f08908119107f5db3031447da1ce37388431b6" translate="yes" xml:space="preserve">
          <source>The Executor consists of two callbacks: &lt;code&gt;to_run&lt;/code&gt; and &lt;code&gt;to_complete&lt;/code&gt;. The Run callback is called before the application code, and the Complete callback is called after.</source>
          <target state="translated">执行程序包含两个回调： &lt;code&gt;to_run&lt;/code&gt; 和 &lt;code&gt;to_complete&lt;/code&gt; 。在应用程序代码之前调用Run回调，然后在应用程序代码之后调用Complete回调。</target>
        </trans-unit>
        <trans-unit id="45a617537bd07da4443c0b99fc8d1f05a6994528" translate="yes" xml:space="preserve">
          <source>The Executor is safely re-entrant; if it is already active on the current thread, &lt;code&gt;wrap&lt;/code&gt; is a no-op.</source>
          <target state="translated">执行者可以安全地重新进入；如果它在当前线程上已经处于活动状态，则 &lt;code&gt;wrap&lt;/code&gt; 为空操作。</target>
        </trans-unit>
        <trans-unit id="8fb3b8ff046a74e5630fe92937b42561babff75e" translate="yes" xml:space="preserve">
          <source>The Executor will put the current thread into &lt;code&gt;running&lt;/code&gt; mode in the Load Interlock. This operation will block temporarily if another thread is currently either autoloading a constant or unloading/reloading the application.</source>
          <target state="translated">执行程序将在&amp;ldquo;加载互锁&amp;rdquo; 中将当前线程置于 &lt;code&gt;running&lt;/code&gt; 模式。如果另一个线程当前正在自动加载常量或正在卸载/重新加载应用程序，则此操作将暂时阻塞。</target>
        </trans-unit>
        <trans-unit id="2505bfbdb161d7a745f8f681afd58a70fea8e2e1" translate="yes" xml:space="preserve">
          <source>The Flash</source>
          <target state="translated">闪电侠</target>
        </trans-unit>
        <trans-unit id="acb817e66f48334fcea25df1629a6dc4c5749d27" translate="yes" xml:space="preserve">
          <source>The Gartner Group, however, estimates that 75% of attacks are at the web application layer, and found out &quot;that out of 300 audited sites, 97% are vulnerable to attack&quot;. This is because web applications are relatively easy to attack, as they are simple to understand and manipulate, even by the lay person.</source>
          <target state="translated">但Gartner集团估计,75%的攻击是在Web应用层,并发现 &quot;在300个被审计的网站中,97%的网站容易受到攻击&quot;。这是因为网络应用程序比较容易被攻击,因为它们很容易理解和操作,即使是普通人也能理解。</target>
        </trans-unit>
        <trans-unit id="72c8a581a8b0fe9bb67d895a76de753b4c5d3c55" translate="yes" xml:space="preserve">
          <source>The HTML generated for this would be (modulus formatting):</source>
          <target state="translated">为此生成的HTML将是(模数格式)。</target>
        </trans-unit>
        <trans-unit id="5edfbd463ec7bca173f09112f6284f3dbbc7cfb4" translate="yes" xml:space="preserve">
          <source>The HTML generated for this would be:</source>
          <target state="translated">为此生成的HTML将是:</target>
        </trans-unit>
        <trans-unit id="50f731bf3cc87314f9c9f75bec0eb8bea16e0b6f" translate="yes" xml:space="preserve">
          <source>The HTML specification says unchecked check boxes are not successful, and thus web browsers do not send them. Unfortunately this introduces a gotcha: if an &lt;code&gt;Invoice&lt;/code&gt; model has a &lt;code&gt;paid&lt;/code&gt; flag, and in the form that edits a paid invoice the user unchecks its check box, no &lt;code&gt;paid&lt;/code&gt; parameter is sent. So, any mass-assignment idiom like</source>
          <target state="translated">HTML规范说未选中的复选框不成功，因此Web浏览器不会发送它们。不幸的是，这引入了一个陷阱：如果 &lt;code&gt;Invoice&lt;/code&gt; 模型具有已 &lt;code&gt;paid&lt;/code&gt; 标志，并且用户以编辑已付款发票的形式取消选中其复选框，则不会发送已 &lt;code&gt;paid&lt;/code&gt; 参数。因此，任何大规模分配习语</target>
        </trans-unit>
        <trans-unit id="561b8f280fcf9fe1d7be986e8c7bf7171b53ad45" translate="yes" xml:space="preserve">
          <source>The HTML specification says when &lt;code&gt;multiple&lt;/code&gt; parameter passed to select and all options got deselected web browsers do not send any value to server. Unfortunately this introduces a gotcha: if an &lt;code&gt;User&lt;/code&gt; model has many &lt;code&gt;roles&lt;/code&gt; and have &lt;code&gt;role_ids&lt;/code&gt; accessor, and in the form that edits roles of the user the user deselects all roles from &lt;code&gt;role_ids&lt;/code&gt; multiple select box, no &lt;code&gt;role_ids&lt;/code&gt; parameter is sent. So, any mass-assignment idiom like</source>
          <target state="translated">HTML规范说，当传递 &lt;code&gt;multiple&lt;/code&gt; 参数以选择并且所有选项都取消选择时，Web浏览器不会向服务器发送任何值。不幸的是，这引入了一个陷阱：如果 &lt;code&gt;User&lt;/code&gt; 模型具有多个 &lt;code&gt;roles&lt;/code&gt; 并且具有 &lt;code&gt;role_ids&lt;/code&gt; 访问器，并且以编辑用户角色的形式，用户从 &lt;code&gt;role_ids&lt;/code&gt; 多个选择框中取消选择所有角色，则不会发送 &lt;code&gt;role_ids&lt;/code&gt; 参数。因此，任何大规模分配习语</target>
        </trans-unit>
        <trans-unit id="3f0041908b4b4bfd5dd709624c1e43cb18c24394" translate="yes" xml:space="preserve">
          <source>The HTML specification says when nothing is selected on a collection of radio buttons web browsers do not send any value to server. Unfortunately this introduces a gotcha: if a &lt;code&gt;User&lt;/code&gt; model has a &lt;code&gt;category_id&lt;/code&gt; field and in the form no category is selected, no &lt;code&gt;category_id&lt;/code&gt; parameter is sent. So, any strong parameters idiom like:</source>
          <target state="translated">HTML规范指出，当在单选按钮集合上未选择任何内容时，Web浏览器不会向服务器发送任何值。不幸的是，这引入了一个陷阱：如果 &lt;code&gt;User&lt;/code&gt; 模型具有 &lt;code&gt;category_id&lt;/code&gt; 字段并且未选择任何 &lt;code&gt;category_id&lt;/code&gt; ，则不会发送category_id参数。因此，任何强大的参数习惯用法都像这样：</target>
        </trans-unit>
        <trans-unit id="f9671636efea31cc6fb67c1628270deba9f54723" translate="yes" xml:space="preserve">
          <source>The HTTP method used for the request.</source>
          <target state="translated">请求使用的HTTP方法。</target>
        </trans-unit>
        <trans-unit id="8438c391a65a4d84a0a1b9361d30e878c7739074" translate="yes" xml:space="preserve">
          <source>The HTTP protocol basically provides two main types of requests - GET and POST (DELETE, PUT, and PATCH should be used like POST). The World Wide Web Consortium (W3C) provides a checklist for choosing HTTP GET or POST:</source>
          <target state="translated">HTTP协议基本上提供了两种主要的请求类型--GET和POST(DELETE、PUT和PATCH应该像POST一样使用)。万维网联盟(W3C)提供了一个选择HTTP GET或POST的检查表。</target>
        </trans-unit>
        <trans-unit id="f6151c5f4ec17089bb792c86658138e1ec1847e3" translate="yes" xml:space="preserve">
          <source>The HTTP status code for the response, like 200 for a successful request or 404 for file not found.</source>
          <target state="translated">响应的HTTP状态码,比如200表示请求成功,404表示未找到文件。</target>
        </trans-unit>
        <trans-unit id="00d3a26093b532d414271679dbec9e6e2a73f34f" translate="yes" xml:space="preserve">
          <source>The HTTP status code.</source>
          <target state="translated">HTTP状态码。</target>
        </trans-unit>
        <trans-unit id="c869f06c0412e1c18b764dcdd4db3189abeed4c4" translate="yes" xml:space="preserve">
          <source>The HTTP verb used (if the route doesn't respond to all verbs)</source>
          <target state="translated">使用的HTTP动词(如果路由没有响应所有动词的话</target>
        </trans-unit>
        <trans-unit id="58b72fee534ffa7b9863e14bb030a14129cf1689" translate="yes" xml:space="preserve">
          <source>The I18n API defines the following exceptions that will be raised by backends when the corresponding unexpected conditions occur:</source>
          <target state="translated">I18n API定义了以下异常,当发生相应的意外情况时,后端会引发异常。</target>
        </trans-unit>
        <trans-unit id="3f776bc1e6f04254a055047cf44eb1ce42e19b30" translate="yes" xml:space="preserve">
          <source>The I18n API described in this guide is primarily intended for translating interface strings. If you are looking to translate model content (e.g. blog posts), you will need a different solution to help with this.</source>
          <target state="translated">本指南中描述的 I18n API 主要用于翻译接口字符串。如果你想翻译模型内容(如博客文章),你将需要一个不同的解决方案来帮助你。</target>
        </trans-unit>
        <trans-unit id="b84fdeefd4f3de8bdbe34a4d9309382548aacc9a" translate="yes" xml:space="preserve">
          <source>The I18n API will catch all of these exceptions when they are thrown in the backend and pass them to the default_exception_handler method. This method will re-raise all exceptions except for &lt;code&gt;MissingTranslationData&lt;/code&gt; exceptions. When a &lt;code&gt;MissingTranslationData&lt;/code&gt; exception has been caught, it will return the exception's error message string containing the missing key/scope.</source>
          <target state="translated">当将这些异常抛出到后端时，I18n API将捕获所有这些异常并将它们传递给default_exception_handler方法。此方法将重新引发除 &lt;code&gt;MissingTranslationData&lt;/code&gt; 异常之外的所有异常。当 &lt;code&gt;MissingTranslationData&lt;/code&gt; 异常被抓住了，它会返回一个包含丢失的钥匙/范围异常的错误消息字符串。</target>
        </trans-unit>
        <trans-unit id="5176c661f763c5f64792b55880936106ad4867fd" translate="yes" xml:space="preserve">
          <source>The I18n gem provides a Pluralization backend that can be used to enable locale-specific rules. Include it to the Simple backend, then add the localized pluralization algorithms to translation store, as &lt;code&gt;i18n.plural.rule&lt;/code&gt;.</source>
          <target state="translated">I18n gem提供了可用于启用特定于语言环境的规则的多元化后端。将其包括在Simple后端中，然后将本地化的复数算法添加到翻译存储中，如 &lt;code&gt;i18n.plural.rule&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1ffc295b865af5f7e8df8aa5588c7c113e36461b" translate="yes" xml:space="preserve">
          <source>The I18n library will use &lt;strong&gt;English&lt;/strong&gt; as a &lt;strong&gt;default locale&lt;/strong&gt;, i.e. if a different locale is not set, &lt;code&gt;:en&lt;/code&gt; will be used for looking up translations.</source>
          <target state="translated">I18n库将使用&lt;strong&gt;英语&lt;/strong&gt;作为&lt;strong&gt;默认语言环境&lt;/strong&gt;，即，如果未设置其他语言环境，则 &lt;code&gt;:en&lt;/code&gt; 将用于查找翻译。</target>
        </trans-unit>
        <trans-unit id="78001ab8dd2e74a370f820afc118839e328baae4" translate="yes" xml:space="preserve">
          <source>The IP address of the client making the request can be used to infer the client's region and thus their locale. Services such as &lt;a href=&quot;http://www.maxmind.com/app/geolitecountry&quot;&gt;GeoIP Lite Country&lt;/a&gt; or gems like &lt;a href=&quot;https://github.com/alexreisner/geocoder&quot;&gt;geocoder&lt;/a&gt; can be used to implement this approach.</source>
          <target state="translated">发出请求的客户端的IP地址可用于推断客户端的区域，从而推断其区域。服务，如&lt;a href=&quot;http://www.maxmind.com/app/geolitecountry&quot;&gt;GeoIP的精简版国家&lt;/a&gt;或宝石像&lt;a href=&quot;https://github.com/alexreisner/geocoder&quot;&gt;地理编码器&lt;/a&gt;可以用来实现这种方法。</target>
        </trans-unit>
        <trans-unit id="d3fc261360a76b743e82f1c59ab21837cd1b4510" translate="yes" xml:space="preserve">
          <source>The IP address of the client.</source>
          <target state="translated">客户端的IP地址。</target>
        </trans-unit>
        <trans-unit id="805cd68838c38454ac0296fdd39138c33d07b47f" translate="yes" xml:space="preserve">
          <source>The JSON encoder in Rails 4.1 has been rewritten to take advantage of the JSON gem. For most applications, this should be a transparent change. However, as part of the rewrite, the following features have been removed from the encoder:</source>
          <target state="translated">Rails 4.1 中的 JSON 编码器已经重新编写,以利用 JSON gem 的优势。对于大多数应用来说,这应该是一个透明的变化。然而,作为重写的一部分,以下功能已从编码器中删除。</target>
        </trans-unit>
        <trans-unit id="6ee74dcd0b48fe9d8a0549d0dab99caf52bc54d5" translate="yes" xml:space="preserve">
          <source>The Load Interlock allows autoloading and reloading to be enabled in a multi-threaded runtime environment.</source>
          <target state="translated">加载联锁允许在多线程运行时环境中启用自动加载和重新加载。</target>
        </trans-unit>
        <trans-unit id="0066f1020e13839690b68171c9c79efdae49082e" translate="yes" xml:space="preserve">
          <source>The Logger</source>
          <target state="translated">记录仪</target>
        </trans-unit>
        <trans-unit id="eb1d2ad016c09651c6e672d3bbec314bb16cc9f9" translate="yes" xml:space="preserve">
          <source>The Low-Down on Fixtures</source>
          <target state="translated">固定装置的低调</target>
        </trans-unit>
        <trans-unit id="4efd89956b023e4f734c9e7b62864d1e8137e6b7" translate="yes" xml:space="preserve">
          <source>The MIME type of the HTTP request, such as Mime.</source>
          <target state="translated">HTTP请求的MIME类型,如Mime。</target>
        </trans-unit>
        <trans-unit id="acd24d6d5cb6a9f5800a5ffad9287bdc4bb26ccf" translate="yes" xml:space="preserve">
          <source>The MySQL adapter adds one additional configuration option:</source>
          <target state="translated">MySQL适配器增加了一个额外的配置选项。</target>
        </trans-unit>
        <trans-unit id="3c84e45d278374333357b9276a241aca8efccd8b" translate="yes" xml:space="preserve">
          <source>The Object Life Cycle</source>
          <target state="translated">对象生命周期</target>
        </trans-unit>
        <trans-unit id="98f2bbb0f67f9b09d323527720d93b69faf00d50" translate="yes" xml:space="preserve">
          <source>The Overall Architecture of the Library</source>
          <target state="translated">图书馆的整体结构</target>
        </trans-unit>
        <trans-unit id="2e6caff8462f9eed2c3308f7ae4c782815a5a81f" translate="yes" xml:space="preserve">
          <source>The PostgreSQL adapter adds one additional configuration option:</source>
          <target state="translated">PostgreSQL适配器增加了一个额外的配置选项。</target>
        </trans-unit>
        <trans-unit id="797285a5529ca40d8ceaff9e2ba1aca92e64887a" translate="yes" xml:space="preserve">
          <source>The PostgreSQL adapter uses Active Record's connection pool, and thus the application's &lt;code&gt;config/database.yml&lt;/code&gt; database configuration, for its connection. This may change in the future. &lt;a href=&quot;https://github.com/rails/rails/issues/27214&quot;&gt;#27214&lt;/a&gt;</source>
          <target state="translated">PostgreSQL适配器使用Active Record的连接池以及应用程序的 &lt;code&gt;config/database.yml&lt;/code&gt; 数据库配置进行连接。将来可能会改变。&lt;a href=&quot;https://github.com/rails/rails/issues/27214&quot;&gt;＃27214&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="82edc0df5cb4ce3a1e8a8538ebb647f5bf208d63" translate="yes" xml:space="preserve">
          <source>The PostgreSQL adapter works with the native C (&lt;a href=&quot;https://bitbucket.org/ged/ruby-pg&quot;&gt;bitbucket.org/ged/ruby-pg&lt;/a&gt;) driver.</source>
          <target state="translated">PostgreSQL适配器与本机C（&lt;a href=&quot;https://bitbucket.org/ged/ruby-pg&quot;&gt;bitbucket.org/ged/ruby-pg&lt;/a&gt;）驱动程序一起使用。</target>
        </trans-unit>
        <trans-unit id="cbc823aa9daad3a923502fbafa41a04a8554d952" translate="yes" xml:space="preserve">
          <source>The Public I18n API</source>
          <target state="translated">公共I18n API</target>
        </trans-unit>
        <trans-unit id="4ee35b8c1b691b08db3bdbe0256144ced1cee71d" translate="yes" xml:space="preserve">
          <source>The Purpose of Active Job</source>
          <target state="translated">积极工作的目的</target>
        </trans-unit>
        <trans-unit id="823c1a0091442b782c0e1668bc5aaf1b4f1f90f5" translate="yes" xml:space="preserve">
          <source>The Purpose of the Rails Router</source>
          <target state="translated">Rails路由器的用途</target>
        </trans-unit>
        <trans-unit id="51c22eed0065efc3555e03456648dab85e559aef" translate="yes" xml:space="preserve">
          <source>The Query String</source>
          <target state="translated">查询字符串</target>
        </trans-unit>
        <trans-unit id="035bae956c3ed41d7d32de1e706edbb0e2eb039c" translate="yes" xml:space="preserve">
          <source>The Rails Advanced Command Line</source>
          <target state="translated">Rails高级命令行</target>
        </trans-unit>
        <trans-unit id="04795c00f3224f73f84948a0c1b60589db3b1a7b" translate="yes" xml:space="preserve">
          <source>The Rails Command Line</source>
          <target state="translated">Rails命令行</target>
        </trans-unit>
        <trans-unit id="88a3d15a4e54b01428b036ceb885418ae6638e2b" translate="yes" xml:space="preserve">
          <source>The Rails Executor separates application code from framework code: any time the framework invokes code you've written in your application, it will be wrapped by the Executor.</source>
          <target state="translated">Rails Executor 将应用程序代码与框架代码分开:当框架调用您在应用程序中编写的代码时,它将被 Executor 封装。</target>
        </trans-unit>
        <trans-unit id="2f680a004274bb183c69fa22ff0ed3836a4e7d58" translate="yes" xml:space="preserve">
          <source>The Rails Initialization Process</source>
          <target state="translated">Rails初始化过程</target>
        </trans-unit>
        <trans-unit id="40b90d2be490ac85e4afd082c51767a902a0b57e" translate="yes" xml:space="preserve">
          <source>The Rails Test Runner</source>
          <target state="translated">Rails Test Runner</target>
        </trans-unit>
        <trans-unit id="e21e7573f446b6773b246324ac22155fda204953" translate="yes" xml:space="preserve">
          <source>The Rails core team has stated patches for the inflections library will not be accepted in order to avoid breaking legacy applications which may be relying on errant inflections. If you discover an incorrect inflection and require it for your application or wish to define rules for languages other than English, please correct or add them yourself (explained below).</source>
          <target state="translated">Rails 核心团队已经声明,为了避免破坏可能依赖错误语汇的遗留应用程序,将不接受语汇库的补丁。如果您发现了一个不正确的转折,并需要在您的应用程序中使用,或者希望定义除英语以外的其他语言的规则,请自行更正或添加(如下所述)。</target>
        </trans-unit>
        <trans-unit id="ff87ad6b1e96b780f28e55c9eebab32afd566d1a" translate="yes" xml:space="preserve">
          <source>The Rails environment;</source>
          <target state="translated">Rails环境。</target>
        </trans-unit>
        <trans-unit id="95ee7e0b9ac7f4840ef97ae6dc2dad314a98ae35" translate="yes" xml:space="preserve">
          <source>The Rails framework components use these tools to manage their own concurrency needs too.</source>
          <target state="translated">Rails框架组件也使用这些工具来管理自己的并发需求。</target>
        </trans-unit>
        <trans-unit id="d74133a805ebbdaee19ace506605a8d40d4ea5f7" translate="yes" xml:space="preserve">
          <source>The Rails framework encourages RESTful design of your applications, which means you'll be making a lot of &quot;PATCH&quot;, &quot;PUT&quot;, and &quot;DELETE&quot; requests (besides &quot;GET&quot; and &quot;POST&quot;). However, most browsers &lt;em&gt;don't support&lt;/em&gt; methods other than &quot;GET&quot; and &quot;POST&quot; when it comes to submitting forms.</source>
          <target state="translated">Rails框架鼓励对应用程序进行RESTful设计，这意味着您将提出很多&amp;ldquo; PATCH&amp;rdquo;，&amp;ldquo; PUT&amp;rdquo;和&amp;ldquo; DELETE&amp;rdquo;请求（&amp;ldquo; GET&amp;rdquo;和&amp;ldquo; POST&amp;rdquo;之外）。但是，大多数浏览器在提交表单时&lt;em&gt;都不支持&lt;/em&gt; &amp;ldquo; GET&amp;rdquo;和&amp;ldquo; POST&amp;rdquo;以外的方法。</target>
        </trans-unit>
        <trans-unit id="ca74aea3b00b63d989ab4ef5c91331bc9e61c181" translate="yes" xml:space="preserve">
          <source>The Rails framework provides a large number of helpers for working with assets, dates, forms, numbers and model objects, to name a few. These helpers are available to all templates by default.</source>
          <target state="translated">Rails框架提供了大量的帮助程序,用于处理资产、日期、表单、数字和模型对象等。这些辅助工具默认情况下对所有模板都是可用的。</target>
        </trans-unit>
        <trans-unit id="c41247006949c5d3d9f932c821a6c3cf8f4698c7" translate="yes" xml:space="preserve">
          <source>The Rails logger is still not ready in &lt;code&gt;config/application.rb&lt;/code&gt;, but it is in initializers:</source>
          <target state="translated">Rails记录器尚未在 &lt;code&gt;config/application.rb&lt;/code&gt; 中准备好，但在初始化器中：</target>
        </trans-unit>
        <trans-unit id="a733d5d1f65b90aaed94e807b50100a618408998" translate="yes" xml:space="preserve">
          <source>The Rails package has several tools to help create and apply migrations.</source>
          <target state="translated">Rails软件包有几个工具可以帮助创建和应用迁移。</target>
        </trans-unit>
        <trans-unit id="593159354abcc7d9d78af190a120bc0af6170627" translate="yes" xml:space="preserve">
          <source>The Rails philosophy includes two major guiding principles:</source>
          <target state="translated">Rails哲学包括两大指导原则。</target>
        </trans-unit>
        <trans-unit id="cda932bf81a4b19c4d705c223d0b8a2d173cc1f3" translate="yes" xml:space="preserve">
          <source>The Rails router recognizes URLs and dispatches them to a controller's action, or to a Rack application. It can also generate paths and URLs, avoiding the need to hardcode strings in your views.</source>
          <target state="translated">Rails 路由器可以识别 URL,并将其发送到控制器的动作或 Rack 应用程序。它还可以生成路径和URL,避免了在视图中硬编码字符串的需要。</target>
        </trans-unit>
        <trans-unit id="9a8a034a3468de652837bb7bef00583aaa629f6d" translate="yes" xml:space="preserve">
          <source>The Rails team strongly encourages you to write your CoffeeScript (and JavaScript) in this style, and you can expect that many libraries will also follow this pattern.</source>
          <target state="translated">Rails团队强烈鼓励你用这种风格来编写CoffeeScript(和JavaScript),你可以期待许多库也会遵循这种模式。</target>
        </trans-unit>
        <trans-unit id="9a826a423a820b9f720b5b58cbba295c504f9247" translate="yes" xml:space="preserve">
          <source>The Rails templates API is easy to understand. Here's an example of a typical Rails template:</source>
          <target state="translated">Rails模板的API很容易理解。下面是一个典型的Rails模板的例子。</target>
        </trans-unit>
        <trans-unit id="632b26a07949b11988987eee440a5719dc26a9d8" translate="yes" xml:space="preserve">
          <source>The Redis adapter requires users to provide a URL pointing to the Redis server. Additionally, a &lt;code&gt;channel_prefix&lt;/code&gt; may be provided to avoid channel name collisions when using the same Redis server for multiple applications. See the &lt;a href=&quot;https://redis.io/topics/pubsub#database-amp-scoping&quot;&gt;Redis PubSub documentation&lt;/a&gt; for more details.</source>
          <target state="translated">Redis适配器要求用户提供指向Redis服务器的URL。此外，当为多个应用程序使用同一Redis服务器时，可以提供 &lt;code&gt;channel_prefix&lt;/code&gt; 来避免频道名称冲突。有关更多详细信息，请参见&lt;a href=&quot;https://redis.io/topics/pubsub#database-amp-scoping&quot;&gt;Redis PubSub文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3c704b7ebbdeafd48ffdd5317faa6e6b92774c98" translate="yes" xml:space="preserve">
          <source>The Redis cache store takes advantage of Redis support for automatic eviction when it reaches max memory, allowing it to behave much like a Memcached cache server.</source>
          <target state="translated">Redis缓存存储利用Redis的支持,当它达到最大内存时自动驱逐,使它的行为很像Memcached缓存服务器。</target>
        </trans-unit>
        <trans-unit id="3afd49deda20ee111e85e89523cd5f862cb2d618" translate="yes" xml:space="preserve">
          <source>The Reloader also provides &lt;code&gt;to_run&lt;/code&gt; and &lt;code&gt;to_complete&lt;/code&gt; callbacks; they are invoked at the same points as those of the Executor, but only when the current execution has initiated an application reload. When no reload is deemed necessary, the Reloader will invoke the wrapped block with no other callbacks.</source>
          <target state="translated">&lt;code&gt;to_run&lt;/code&gt; 还提供了to_run和 &lt;code&gt;to_complete&lt;/code&gt; 回调。它们在与执行器相同的位置被调用，但仅在当前执行已启动应用程序重新加载时才被调用。如果认为没有必要重新加载，则Reloader将调用包装的块，而无需其他回调。</target>
        </trans-unit>
        <trans-unit id="27f7a0ffc99388b49237665de5ff68303700f136" translate="yes" xml:space="preserve">
          <source>The Reloader is only suitable where a long-running framework-level process repeatedly calls into application code, such as for a web server or job queue. Rails automatically wraps web requests and Active Job workers, so you'll rarely need to invoke the Reloader for yourself. Always consider whether the Executor is a better fit for your use case.</source>
          <target state="translated">Reloader只适用于一个长期运行的框架级进程反复调用到应用程序代码的情况,比如Web服务器或作业队列。Rails会自动封装Web请求和Active Job worker,因此您很少需要自己调用Reloader。一定要考虑Executor是否更适合你的用例。</target>
        </trans-unit>
        <trans-unit id="c4920f22e9905615d85ce18cbe0e6bf2d8b790db" translate="yes" xml:space="preserve">
          <source>The Reloader only checks for file changes when &lt;code&gt;cache_classes&lt;/code&gt; is false and &lt;code&gt;reload_classes_only_on_change&lt;/code&gt; is true (which is the default in the &lt;code&gt;development&lt;/code&gt; environment).</source>
          <target state="translated">仅当 &lt;code&gt;cache_classes&lt;/code&gt; 为false且 &lt;code&gt;reload_classes_only_on_change&lt;/code&gt; 为true 时，Reloader才检查文件更改（这是 &lt;code&gt;development&lt;/code&gt; 环境中的默认设置）。</target>
        </trans-unit>
        <trans-unit id="3d92ef5461af56707e01485e0f7ae7d305f30718" translate="yes" xml:space="preserve">
          <source>The Request and Response Objects</source>
          <target state="translated">请求和响应对象</target>
        </trans-unit>
        <trans-unit id="ac77713566ecac234db86f07a2d605d8bef7929a" translate="yes" xml:space="preserve">
          <source>The Ruby I18n (shorthand for &lt;em&gt;internationalization&lt;/em&gt;) gem which is shipped with Ruby on Rails (starting from Rails 2.2) provides an easy-to-use and extensible framework for &lt;strong&gt;translating your application to a single custom language&lt;/strong&gt; other than English or for &lt;strong&gt;providing multi-language support&lt;/strong&gt; in your application.</source>
          <target state="translated">Ruby on Rails附带的Ruby I18n（&lt;em&gt;国际化&lt;/em&gt;简写）gem（从Rails 2.2开始）提供了一个易于使用且可扩展的框架，用于&lt;strong&gt;将您的应用程序翻译为&lt;/strong&gt;英语以外&lt;strong&gt;的单一自定义语言&lt;/strong&gt;或&lt;strong&gt;提供多语言&lt;/strong&gt;在您的应用程序中&lt;strong&gt;提供支持&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="42aacfdd276ea141df87aa8835afc941f3ccc4c6" translate="yes" xml:space="preserve">
          <source>The Ruby I18n framework provides you with all necessary means for internationalization/localization of your Rails application. You may, also use various gems available to add additional functionality or features. See the &lt;a href=&quot;https://github.com/svenfuchs/rails-i18n&quot;&gt;rails-i18n gem&lt;/a&gt; for more information.</source>
          <target state="translated">Ruby I18n框架为Rails应用程序的国际化/本地化提供了所有必要的手段。您也可以使用各种可用的宝石来添加其他功能。有关更多信息，请参见&lt;a href=&quot;https://github.com/svenfuchs/rails-i18n&quot;&gt;rails-i18n gem&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8e337110e0c683f629e6bb18b30ce5e3b59cc397" translate="yes" xml:space="preserve">
          <source>The Ruby side of things is built on top of &lt;a href=&quot;https://github.com/faye/websocket-driver-ruby&quot;&gt;websocket-driver&lt;/a&gt;, &lt;a href=&quot;https://github.com/celluloid/nio4r&quot;&gt;nio4r&lt;/a&gt;, and &lt;a href=&quot;https://github.com/ruby-concurrency/concurrent-ruby&quot;&gt;concurrent-ruby&lt;/a&gt;.</source>
          <target state="translated">Ruby的一面是在&lt;a href=&quot;https://github.com/faye/websocket-driver-ruby&quot;&gt;websocket-driver&lt;/a&gt;，&lt;a href=&quot;https://github.com/celluloid/nio4r&quot;&gt;nio4r&lt;/a&gt;和current &lt;a href=&quot;https://github.com/ruby-concurrency/concurrent-ruby&quot;&gt;-ruby &lt;/a&gt;之上构建的。</target>
        </trans-unit>
        <trans-unit id="6b6723a4f8c0d953e73e03aae1b14fc27c7512db" translate="yes" xml:space="preserve">
          <source>The SQL block comment delimiters, &amp;ldquo;/*&amp;rdquo; and &amp;ldquo;*/&amp;rdquo;, will be added automatically.</source>
          <target state="translated">SQL块注释定界符&amp;ldquo; / *&amp;rdquo;和&amp;ldquo; * /&amp;rdquo;将自动添加。</target>
        </trans-unit>
        <trans-unit id="a3ff3f0c959e89d4d9826baccc445991894a616c" translate="yes" xml:space="preserve">
          <source>The SQL equivalent of the above is:</source>
          <target state="translated">上述SQL的等价物是。</target>
        </trans-unit>
        <trans-unit id="48ee3db9f90bca3492f769cd0e217a07c48877b5" translate="yes" xml:space="preserve">
          <source>The SQL generated by this method looks like this:</source>
          <target state="translated">这个方法生成的SQL是这样的。</target>
        </trans-unit>
        <trans-unit id="3c52f2acac81f8672d8952a4c611589f1d6d04f3" translate="yes" xml:space="preserve">
          <source>The SQL query used by this find call will be somewhat like:</source>
          <target state="translated">这个查找调用所使用的SQL查询将有点像。</target>
        </trans-unit>
        <trans-unit id="8ec1b1bcef208ca24dd0a059757079680286748f" translate="yes" xml:space="preserve">
          <source>The SQL standard says the default scale should be 0, &lt;code&gt;:scale&lt;/code&gt; &amp;lt;= &lt;code&gt;:precision&lt;/code&gt;, and makes no comments about the requirements of &lt;code&gt;:precision&lt;/code&gt;.</source>
          <target state="translated">SQL标准说默认的小数位数应为0， &lt;code&gt;:scale&lt;/code&gt; &amp;lt;= &lt;code&gt;:precision&lt;/code&gt; ，不对 &lt;code&gt;:precision&lt;/code&gt; 的要求发表任何评论。</target>
        </trans-unit>
        <trans-unit id="82f607296c32433c4cb7befd9993fe8cccfea80b" translate="yes" xml:space="preserve">
          <source>The SQL that would be executed would be something like this:</source>
          <target state="translated">要执行的SQL是这样的。</target>
        </trans-unit>
        <trans-unit id="c1f6c9e636ac2a9f9ff0f0206994c40e67707fdf" translate="yes" xml:space="preserve">
          <source>The SQL that would be executed:</source>
          <target state="translated">要执行的SQL。</target>
        </trans-unit>
        <trans-unit id="8143ba5cf6e9b775e16dedc348918b2663c90343" translate="yes" xml:space="preserve">
          <source>The SQLite3 adapter works SQLite 3.6.16 or newer with the sqlite3-ruby drivers (available as gem from &lt;a href=&quot;https://rubygems.org/gems/sqlite3&quot;&gt;rubygems.org/gems/sqlite3&lt;/a&gt;).</source>
          <target state="translated">SQLite3适配器可与sqlite3-ruby驱动程序一起使用SQLite 3.6.16或更高版本（可从&lt;a href=&quot;https://rubygems.org/gems/sqlite3&quot;&gt;rubygems.org/gems/sqlite3&lt;/a&gt;获得gem ）。</target>
        </trans-unit>
        <trans-unit id="e8f7e80a80f6468d8f9ae5d5de949af73d120a75" translate="yes" xml:space="preserve">
          <source>The SanitizeHelper module provides a set of methods for scrubbing text of undesired HTML elements.</source>
          <target state="translated">SanitizeHelper模块提供了一组用于擦除不受欢迎的HTML元素的方法。</target>
        </trans-unit>
        <trans-unit id="69b4e4cb76edfd97771ce996cb3f21bee81207c1" translate="yes" xml:space="preserve">
          <source>The Select and Option Tags</source>
          <target state="translated">选择和选项标签</target>
        </trans-unit>
        <trans-unit id="fd5aaa349d586181e9c831d5189a8981895b58d8" translate="yes" xml:space="preserve">
          <source>The Shell</source>
          <target state="translated">壳牌</target>
        </trans-unit>
        <trans-unit id="ccd5038386b0375e4cca123c96f2d46e26ad35c9" translate="yes" xml:space="preserve">
          <source>The Simple backend shipped with Active Support allows you to store translations in both plain Ruby and YAML format.&lt;sup id=&quot;footnote-2-ref&quot;&gt;&lt;a href=&quot;#footnote-2&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;</source>
          <target state="translated">Active Support附带的Simple后端允许您以纯Ruby和YAML格式存储翻译。&lt;sup id=&quot;footnote-2-ref&quot;&gt;&lt;a href=&quot;#footnote-2&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="44f540d6a81a77dfe961b48b208b2e50861d6943" translate="yes" xml:space="preserve">
          <source>The Test Database</source>
          <target state="translated">测试数据库</target>
        </trans-unit>
        <trans-unit id="4551ad2147cfbe96a34eb24767274883e46642f9" translate="yes" xml:space="preserve">
          <source>The Test Environment</source>
          <target state="translated">测试环境</target>
        </trans-unit>
        <trans-unit id="7b8b577799c7cd20afbbb4c696c99be3f86d5986" translate="yes" xml:space="preserve">
          <source>The Three Hashes of the Apocalypse</source>
          <target state="translated">启示录的三个哈希。</target>
        </trans-unit>
        <trans-unit id="074d2bba09f66b0ffbe5affc5c1d5beed0e1ee24" translate="yes" xml:space="preserve">
          <source>The Turbolinks gem.</source>
          <target state="translated">Turbolinks宝石。</target>
        </trans-unit>
        <trans-unit id="889fe8495df2cc2ff8ba2185e5e0df25779c0bf2" translate="yes" xml:space="preserve">
          <source>The Types of Associations</source>
          <target state="translated">协会的类型</target>
        </trans-unit>
        <trans-unit id="118d27c20bdd84af2faa31057e475c43ad77fd11" translate="yes" xml:space="preserve">
          <source>The UNION statement connects two SQL queries and returns the data in one set. An attacker can use it to read arbitrary data from the database. Let's take the example from above:</source>
          <target state="translated">UNION语句将两个SQL查询连接起来,并将数据返回到一个集合中。攻击者可以利用它从数据库中读取任意数据。我们以上面的例子为例。</target>
        </trans-unit>
        <trans-unit id="c67be5b4a37fd08a53752aa322ac424ca3d80813" translate="yes" xml:space="preserve">
          <source>The URI of the controller action you are requesting. This can be in the form of a string or a route helper (e.g. &lt;code&gt;articles_url&lt;/code&gt;).</source>
          <target state="translated">您请求的控制器操作的URI。这可以是字符串或路由帮助器的形式（例如， &lt;code&gt;articles_url&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="1a09ce01af578355210f828c8be6872f13ef3ec2" translate="yes" xml:space="preserve">
          <source>The URL pattern to match</source>
          <target state="translated">匹配的URL模式</target>
        </trans-unit>
        <trans-unit id="224ff9feebc0dca5825aaec3ef51c1cbb6fd7b32" translate="yes" xml:space="preserve">
          <source>The URL the client is being redirected to, if any.</source>
          <target state="translated">客户端被重定向到的URL,如果有的话。</target>
        </trans-unit>
        <trans-unit id="30bc92ff4cc52c0f2fe25a6261b7a8aa165e6769" translate="yes" xml:space="preserve">
          <source>The URL will be http://localhost:3000/greetings/hello.</source>
          <target state="translated">URL将是http://localhost:3000/greetings/hello。</target>
        </trans-unit>
        <trans-unit id="7e2c09e26eec62441ea0fb0a75f4fa90c6807fb2" translate="yes" xml:space="preserve">
          <source>The Update Task</source>
          <target state="translated">更新任务</target>
        </trans-unit>
        <trans-unit id="e66d0a1d165c09f974cce4589624585a59b072f3" translate="yes" xml:space="preserve">
          <source>The Upgrade Process</source>
          <target state="translated">升级过程</target>
        </trans-unit>
        <trans-unit id="ee6880520f2ade45dd630ac080bcb6b84b14bdab" translate="yes" xml:space="preserve">
          <source>The WebSocket server doesn't have access to the session, but it has access to the cookies. This can be used when you need to handle authentication. You can see one way of doing that with Devise in this &lt;a href=&quot;https://greg.molnar.io/blog/actioncable-devise-authentication/&quot;&gt;article&lt;/a&gt;.</source>
          <target state="translated">WebSocket服务器无权访问会话，但有权访问cookie。当您需要处理身份验证时可以使用它。您可以在&lt;a href=&quot;https://greg.molnar.io/blog/actioncable-devise-authentication/&quot;&gt;本文中&lt;/a&gt;看到使用Devise做到这一点的一种方法。</target>
        </trans-unit>
        <trans-unit id="4d90a33c3b15a9fe985897b10c527204739b11d6" translate="yes" xml:space="preserve">
          <source>The X-Sendfile header is a directive to the web server to ignore the response from the application, and instead serve a specified file from disk. This option is off by default, but can be enabled if your server supports it. When enabled, this passes responsibility for serving the file to the web server, which is faster. Have a look at &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionController/DataStreaming.html#method-i-send_file&quot;&gt;send_file&lt;/a&gt; on how to use this feature.</source>
          <target state="translated">X-Sendfile标头是Web服务器的指令，可忽略来自应用程序的响应，而是从磁盘提供指定文件。该选项默认情况下处于关闭状态，但如果您的服务器支持，则可以启用。启用后，这会将将文件提供给Web服务器的责任转嫁给Web服务器，速度更快。看一下&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionController/DataStreaming.html#method-i-send_file&quot;&gt;send_file&lt;/a&gt;如何使用此功能。</target>
        </trans-unit>
        <trans-unit id="e2e6b86fdb23fbddf5d458a1e31cd113b26be790" translate="yes" xml:space="preserve">
          <source>The XML serializer of models uses this method to dasherize node names:</source>
          <target state="translated">模型的XML序列化器使用此方法对节点名称进行虚化。</target>
        </trans-unit>
        <trans-unit id="4d4d9cc06a5435e5a861665944f1af59ae407b13" translate="yes" xml:space="preserve">
          <source>The Zeitwerk instances managing your application are available at</source>
          <target state="translated">管理您的应用程序的Zeitwerk实例可在以下网址获得。</target>
        </trans-unit>
        <trans-unit id="99d7379157f8fd9c44a683315c173317d4abe69d" translate="yes" xml:space="preserve">
          <source>The `&amp;ldquo;%{attribute} %{message}&amp;rdquo;` error format can be overridden with either</source>
          <target state="translated">错误格式&amp;ldquo;％{attribute}％{message}&amp;rdquo;会被其中一种覆盖</target>
        </trans-unit>
        <trans-unit id="6ac7566800fde6c78d2fde9cdc964d45f3dba592" translate="yes" xml:space="preserve">
          <source>The ability to access a params hash.</source>
          <target state="translated">能够访问params哈希。</target>
        </trans-unit>
        <trans-unit id="99a9c260613085a62b40ef65baea6234d501c155" translate="yes" xml:space="preserve">
          <source>The ability to utilise layouts and partials.</source>
          <target state="translated">利用布局和参数的能力。</target>
        </trans-unit>
        <trans-unit id="9299e4fd9a1abfa8cd0b3397ccd93dbb30b79799" translate="yes" xml:space="preserve">
          <source>The above allows you to do:</source>
          <target state="translated">上面允许你做。</target>
        </trans-unit>
        <trans-unit id="f7f61b78ae6248f37388b0ba18d1c9a120df9947" translate="yes" xml:space="preserve">
          <source>The above are a subset of assertions that minitest supports. For an exhaustive &amp;amp; more up-to-date list, please check &lt;a href=&quot;http://docs.seattlerb.org/minitest/&quot;&gt;Minitest API documentation&lt;/a&gt;, specifically &lt;a href=&quot;http://docs.seattlerb.org/minitest/Minitest/Assertions.html&quot;&gt;&lt;code&gt;Minitest::Assertions&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">以上是最小支持的断言的子集。有关详尽且最新的列表，请查看&lt;a href=&quot;http://docs.seattlerb.org/minitest/&quot;&gt;Minitest API文档&lt;/a&gt;，尤其是&lt;a href=&quot;http://docs.seattlerb.org/minitest/Minitest/Assertions.html&quot;&gt; &lt;code&gt;Minitest::Assertions&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e96c640d214ad6ce3629349ac57901dd79560eba" translate="yes" xml:space="preserve">
          <source>The above are the entry points to the framework, so they are responsible for ensuring their respective threads are protected, and deciding whether a reload is necessary. Other components only need to use the Executor when they spawn additional threads.</source>
          <target state="translated">以上是框架的入口点,所以它们负责确保各自的线程受到保护,并决定是否需要重载。其他组件只有在产生额外线程时才需要使用Executor。</target>
        </trans-unit>
        <trans-unit id="5aeaeb2946270f1ca3880251f48504cd2adb8b8b" translate="yes" xml:space="preserve">
          <source>The above calls to &lt;a href=&quot;classmethods#method-i-scope&quot;&gt;scope&lt;/a&gt; define class methods &lt;code&gt;Shirt.red&lt;/code&gt; and &lt;code&gt;Shirt.dry_clean_only&lt;/code&gt;. &lt;code&gt;Shirt.red&lt;/code&gt;, in effect, represents the query &lt;code&gt;Shirt.where(color: 'red')&lt;/code&gt;.</source>
          <target state="translated">上面对&lt;a href=&quot;classmethods#method-i-scope&quot;&gt;范围的&lt;/a&gt;调用定义了类方法 &lt;code&gt;Shirt.red&lt;/code&gt; 和 &lt;code&gt;Shirt.dry_clean_only&lt;/code&gt; 。 &lt;code&gt;Shirt.red&lt;/code&gt; 实际上代表查询 &lt;code&gt;Shirt.where(color: 'red')&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="333dc05e53733069b4c66544cc0447cb09af75f4" translate="yes" xml:space="preserve">
          <source>The above code creates a new method &lt;code&gt;div_radio_button&lt;/code&gt; which wraps a div around the new radio button. Note that when options are passed in, you must call &lt;code&gt;objectify_options&lt;/code&gt; in order for the model object to get correctly passed to the method. If &lt;code&gt;objectify_options&lt;/code&gt; is not called, then the newly created helper will not be linked back to the model.</source>
          <target state="translated">上面的代码创建了一个新的 &lt;code&gt;div_radio_button&lt;/code&gt; 方法，该方法将div包裹在新的单选按钮周围。请注意，在传递选项时，必须调用 &lt;code&gt;objectify_options&lt;/code&gt; 才能使模型对象正确传递给方法。如果未调用 &lt;code&gt;objectify_options&lt;/code&gt; ，则新创建的帮助程序将不会链接回模型。</target>
        </trans-unit>
        <trans-unit id="5d46ac95b0d8d36f9261f2a5ca369c3866c13669" translate="yes" xml:space="preserve">
          <source>The above code sends the next line only after the singer has completed the previous line.</source>
          <target state="translated">上面的代码是在歌手完成上一行之后才发送下一行。</target>
        </trans-unit>
        <trans-unit id="803eb105f9f7cbc0c7e4e1643e3cb6b23529dfb8" translate="yes" xml:space="preserve">
          <source>The above code will execute just &lt;strong&gt;2&lt;/strong&gt; queries, as opposed to &lt;strong&gt;11&lt;/strong&gt; queries in the previous case:</source>
          <target state="translated">上面的代码将仅执行&lt;strong&gt;2个&lt;/strong&gt;查询，而在前面的情况下为&lt;strong&gt;11个&lt;/strong&gt;查询：</target>
        </trans-unit>
        <trans-unit id="8cd4efb617a7fc9e41e0c91d777b42961eaabd0a" translate="yes" xml:space="preserve">
          <source>The above code will keep a persistent connection with the browser and send 100 messages of &lt;code&gt;&quot;hello world\n&quot;&lt;/code&gt;, each one second apart.</source>
          <target state="translated">上面的代码将与浏览器保持持久连接，并发送100条 &lt;code&gt;&quot;hello world\n&quot;&lt;/code&gt; 消息，每秒钟间隔一秒。</target>
        </trans-unit>
        <trans-unit id="06ed41b8974172e2024fe67cddd4885b67fed26a" translate="yes" xml:space="preserve">
          <source>The above code will load all the comments and all of their associated authors and gravatars. You can mix and match any combination of symbols, arrays, and hashes to retrieve the associations you want to load.</source>
          <target state="translated">上面的代码将加载所有的评论和所有相关的作者和gravatars。你可以混合和匹配任何符号、数组和哈希的组合来检索你想要加载的关联。</target>
        </trans-unit>
        <trans-unit id="5008900696401673bf09ac6edc201e88c7f704eb" translate="yes" xml:space="preserve">
          <source>The above code will put the following line into &lt;code&gt;Gemfile&lt;/code&gt;:</source>
          <target state="translated">上面的代码会将以下行放入 &lt;code&gt;Gemfile&lt;/code&gt; 中：</target>
        </trans-unit>
        <trans-unit id="f3cfad1c129d3cb4168ebeef7de404377a78ae6b" translate="yes" xml:space="preserve">
          <source>The above code will render something like this:</source>
          <target state="translated">上面的代码将呈现这样的情况。</target>
        </trans-unit>
        <trans-unit id="cda7b27130cd0d8392911a7c1b552935b99feae1" translate="yes" xml:space="preserve">
          <source>The above command creates a new root object and adds &amp;ldquo;app/controllers&amp;rdquo; as a path. This means we can get a &lt;code&gt;Rails::Paths::Path&lt;/code&gt; object back like below:</source>
          <target state="translated">上面的命令创建一个新的根对象，并添加&amp;ldquo; app / controllers&amp;rdquo;作为路径。这意味着我们可以像下面这样获得一个 &lt;code&gt;Rails::Paths::Path&lt;/code&gt; 对象：</target>
        </trans-unit>
        <trans-unit id="21adbcdcc9c588834a54ae91663e685f9573a361" translate="yes" xml:space="preserve">
          <source>The above creates &lt;code&gt;lib/tasks/bootstrap.rake&lt;/code&gt; with a &lt;code&gt;boot:strap&lt;/code&gt; rake task.</source>
          <target state="translated">上面使用 &lt;code&gt;boot:strap&lt;/code&gt; rake任务创建了 &lt;code&gt;lib/tasks/bootstrap.rake&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9b2052de2e0ef8a9f9937a0b6634c8b93020776e" translate="yes" xml:space="preserve">
          <source>The above example will now change /posts/new to /posts/brand_new.</source>
          <target state="translated">上面的例子将把/posts/new改为/posts/brand_new。</target>
        </trans-unit>
        <trans-unit id="c40abd9828061ab6077a0eac3687cfc218a726b6" translate="yes" xml:space="preserve">
          <source>The above inputs would result in &lt;code&gt;params[:start_date]&lt;/code&gt; being a hash with keys &lt;code&gt;:year&lt;/code&gt;, &lt;code&gt;:month&lt;/code&gt;, &lt;code&gt;:day&lt;/code&gt;. To get an actual &lt;code&gt;Date&lt;/code&gt;, &lt;code&gt;Time&lt;/code&gt;, or &lt;code&gt;DateTime&lt;/code&gt; object you would have to extract these values and pass them to the appropriate constructor, for example:</source>
          <target state="translated">上面的输入将导致 &lt;code&gt;params[:start_date]&lt;/code&gt; 是一个键为 &lt;code&gt;:year&lt;/code&gt; ， &lt;code&gt;:month&lt;/code&gt; ， &lt;code&gt;:day&lt;/code&gt; 的哈希。要获取实际的 &lt;code&gt;Date&lt;/code&gt; ， &lt;code&gt;Time&lt;/code&gt; 或 &lt;code&gt;DateTime&lt;/code&gt; 对象，您必须提取这些值并将它们传递给适当的构造函数，例如：</target>
        </trans-unit>
        <trans-unit id="66cda868f6fc20fd14d5b7af309fe1788514078b" translate="yes" xml:space="preserve">
          <source>The above is equivalent to:</source>
          <target state="translated">以上相当于:</target>
        </trans-unit>
        <trans-unit id="9b11b94e39c8ebd45d8aa9d1e8b8fa0034a1b4bd" translate="yes" xml:space="preserve">
          <source>The above method can be placed in the &lt;code&gt;ApplicationController&lt;/code&gt; and will be called when a CSRF token is not present or is incorrect on a non-GET request.</source>
          <target state="translated">上面的方法可以放置在 &lt;code&gt;ApplicationController&lt;/code&gt; 中，当CSRF令牌不存在或在非GET请求上不正确时将被调用。</target>
        </trans-unit>
        <trans-unit id="084842552bdf468007e85432716d1181acbd4e51" translate="yes" xml:space="preserve">
          <source>The above migration creates a method named &lt;code&gt;change&lt;/code&gt; which will be called when you run this migration. The action defined in this method is also reversible, which means Rails knows how to reverse the change made by this migration, in case you want to reverse it later. When you run this migration it will create an &lt;code&gt;articles&lt;/code&gt; table with one string column and a text column. It also creates two timestamp fields to allow Rails to track article creation and update times.</source>
          <target state="translated">上面的迁移创建了一个名为 &lt;code&gt;change&lt;/code&gt; 的方法，该方法将在您运行此迁移时调用。此方法中定义的操作也是可逆的，这意味着Rails知道如何逆转此迁移所做的更改，以防日后要逆转。运行此迁移时，它将创建带有一个字符串列和一个文本列的 &lt;code&gt;articles&lt;/code&gt; 表。它还创建了两个时间戳字段，以允许Rails跟踪文章的创建和更新时间。</target>
        </trans-unit>
        <trans-unit id="2081bff9ce4c1de0f2a3baa9acaa7e3aa193a443" translate="yes" xml:space="preserve">
          <source>The above returns &lt;code&gt;false&lt;/code&gt; if the &lt;code&gt;clients&lt;/code&gt; table is empty and &lt;code&gt;true&lt;/code&gt; otherwise.</source>
          <target state="translated">如果 &lt;code&gt;clients&lt;/code&gt; 表为空，则以上返回 &lt;code&gt;false&lt;/code&gt; ,否则返回 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="87a2259ed564f17322e9e93ec92fc820ba4abdaa" translate="yes" xml:space="preserve">
          <source>The above returns &lt;code&gt;true&lt;/code&gt; if there is at least one client with the &lt;code&gt;first_name&lt;/code&gt; 'Ryan' and &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">如果至少有一个具有 &lt;code&gt;first_name&lt;/code&gt; 'Ryan '的客户端，则以上返回 &lt;code&gt;true&lt;/code&gt; ,否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="741a44e0eadfb12bb82ba1bc8ee02c6ee7e16594" translate="yes" xml:space="preserve">
          <source>The above session produces the following SQL for a MySQL backend:</source>
          <target state="translated">上面的会话为MySQL后端产生了以下SQL。</target>
        </trans-unit>
        <trans-unit id="eb79507ca343976d6fe284ecb89e3baf8c55aa6c" translate="yes" xml:space="preserve">
          <source>The above should generate:</source>
          <target state="translated">以上应产生。</target>
        </trans-unit>
        <trans-unit id="a7d55be777d62e8c226bb4dc4fa51a123043fd58" translate="yes" xml:space="preserve">
          <source>The above three ways of rendering (rendering another template within the controller, rendering a template within another controller, and rendering an arbitrary file on the file system) are actually variants of the same action.</source>
          <target state="translated">以上三种渲染方式(在控制器内渲染另一个模板、在另一个控制器内渲染一个模板、在文件系统上渲染一个任意文件)其实是同一个动作的变种。</target>
        </trans-unit>
        <trans-unit id="4a2c5591869abf4b65b38276a779f93ca75e3f8b" translate="yes" xml:space="preserve">
          <source>The above will start a cable server on port 28080.</source>
          <target state="translated">以上将在28080端口启动有线电视服务器。</target>
        </trans-unit>
        <trans-unit id="4718acd5158219e392bc97351223f6f32d152dcf" translate="yes" xml:space="preserve">
          <source>The acronym, however, must occur as a delimited unit and not be part of another word for conversions to recognize it:</source>
          <target state="translated">然而,该缩写必须作为一个分隔单位出现,而不是作为另一个词的一部分,以便转换识别。</target>
        </trans-unit>
        <trans-unit id="4dfee46b00dea4df8ec13bc55371a4aa2ff5b5f8" translate="yes" xml:space="preserve">
          <source>The action</source>
          <target state="translated">行动</target>
        </trans-unit>
        <trans-unit id="c8a70bf93b527ef8019fa644660d5f525054e6c7" translate="yes" xml:space="preserve">
          <source>The actual URL in this example will be encoded as &quot;/clients?ids%5b%5d=1&amp;amp;ids%5b%5d=2&amp;amp;ids%5b%5d=3&quot; as the &quot;[&quot; and &quot;]&quot; characters are not allowed in URLs. Most of the time you don't have to worry about this because the browser will encode it for you, and Rails will decode it automatically, but if you ever find yourself having to send those requests to the server manually you should keep this in mind.</source>
          <target state="translated">此示例中的实际URL将被编码为&amp;ldquo; / clients？ids％5b％5d = 1＆ids％5b％5d = 2＆ids％5b％5d = 3&amp;rdquo;，因为URL中不允许使用&amp;ldquo; [&amp;rdquo;和&amp;ldquo;]&amp;rdquo;字符。大多数时候，您不必担心，因为浏览器会为您编码，而Rails会自动对其进行解码，但是如果您发现自己必须手动将这些请求发送到服务器，则应记住这一点。 。</target>
        </trans-unit>
        <trans-unit id="0bc31e7fe5c26aa453e3b9b806025004a0d38777" translate="yes" xml:space="preserve">
          <source>The actual action names aren't changed by this option. The two paths shown would still route to the &lt;code&gt;new&lt;/code&gt; and &lt;code&gt;edit&lt;/code&gt; actions.</source>
          <target state="translated">此选项不会更改实际的操作名称。显示的两条路径仍将路由到 &lt;code&gt;new&lt;/code&gt; 和 &lt;code&gt;edit&lt;/code&gt; 动作。</target>
        </trans-unit>
        <trans-unit id="2c8f767e536a7eab6c28a28ee958f2354a95ab65" translate="yes" xml:space="preserve">
          <source>The actual before_action that is used to verify the CSRF token. Don't override this directly. Provide your own forgery protection strategy instead. If you override, you'll disable same-origin &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; verification.</source>
          <target state="translated">用于验证CSRF令牌的实际before_action。不要直接覆盖它。而是提供您自己的伪造保护策略。如果覆盖，则将禁用同源 &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; 验证。</target>
        </trans-unit>
        <trans-unit id="d3421f7b3e0e5c676942813e39ba280bb8ec3251" translate="yes" xml:space="preserve">
          <source>The actual file is accessible via the &lt;code&gt;tempfile&lt;/code&gt; accessor, though some of its interface is available directly for convenience.</source>
          <target state="translated">可以通过 &lt;code&gt;tempfile&lt;/code&gt; 访问器访问实际文件，尽管为方便起见，可以直接使用其某些接口。</target>
        </trans-unit>
        <trans-unit id="1d860e48de9b9205aa74ce3904d07501023b838f" translate="yes" xml:space="preserve">
          <source>The actual incineration is done via the &lt;code&gt;IncinerationJob&lt;/code&gt; that's scheduled to run after &lt;code&gt;config.action_mailbox.incinerate_after&lt;/code&gt; time. This value is by default set to &lt;code&gt;30.days&lt;/code&gt;, but you can change it in your production.rb configuration. (Note that this far-future incineration scheduling relies on your job queue being able to hold jobs for that long.)</source>
          <target state="translated">实际的焚化通过计划在 &lt;code&gt;config.action_mailbox.incinerate_after&lt;/code&gt; 时间之后运行的 &lt;code&gt;IncinerationJob&lt;/code&gt; 完成。默认情况下，此值设置为 &lt;code&gt;30.days&lt;/code&gt; ，但是您可以在production.rb配置中更改它。（请注意，这种远距离的焚化计划取决于您的作业队列能够保持该作业时间这么长。）</target>
        </trans-unit>
        <trans-unit id="b535db32f4b8e6c49f06a143c6d9848467dd2543" translate="yes" xml:space="preserve">
          <source>The actual method that is called is determined by calling method_for_action. If no method can handle the action, then an &lt;a href=&quot;actionnotfound&quot;&gt;AbstractController::ActionNotFound&lt;/a&gt; error is raised.</source>
          <target state="translated">实际调用的方法是通过调用method_for_action确定的。如果没有方法可以处理该操作，则会引发&lt;a href=&quot;actionnotfound&quot;&gt;AbstractController :: ActionNotFound&lt;/a&gt;错误。</target>
        </trans-unit>
        <trans-unit id="3a63053bbf82b11790da7704223ce0765d21dc88" translate="yes" xml:space="preserve">
          <source>The actual rendering is done by nested classes of the module &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionView/Template/Handlers.html&quot;&gt;&lt;code&gt;ActionView::Template::Handlers&lt;/code&gt;&lt;/a&gt;. This guide does not dig into that process, but it's important to know that the file extension on your view controls the choice of template handler.</source>
          <target state="translated">实际渲染是通过&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionView/Template/Handlers.html&quot;&gt; &lt;code&gt;ActionView::Template::Handlers&lt;/code&gt; &lt;/a&gt;模块的嵌套类完成的。本指南不会深入探讨该过程，但重要的是要知道视图上的文件扩展名可以控制模板处理程序的选择。</target>
        </trans-unit>
        <trans-unit id="2eace6d8c317af052d4a9ce36f70996f4f18477c" translate="yes" xml:space="preserve">
          <source>The adapter does not support setting the isolation level</source>
          <target state="translated">适配器不支持设置隔离等级。</target>
        </trans-unit>
        <trans-unit id="f58fae5bb8a41020e3e5cc9b2cc0494b730cb5f4" translate="yes" xml:space="preserve">
          <source>The adapter uses a &lt;a href=&quot;https://github.com/ruby-concurrency/concurrent-ruby&quot;&gt;Concurrent Ruby&lt;/a&gt; thread pool to schedule and execute jobs. Since jobs share a single thread pool, long-running jobs will block short-lived jobs. Fine for dev/test; bad for production.</source>
          <target state="translated">适配器使用&lt;a href=&quot;https://github.com/ruby-concurrency/concurrent-ruby&quot;&gt;并发Ruby&lt;/a&gt;线程池来调度和执行作业。由于作业共享一个线程池，因此长时间运行的作业将阻止短暂的作业。适用于开发/测试；对生产不利。</target>
        </trans-unit>
        <trans-unit id="5ed49990b114649e9cf864cab935d54f830e410f" translate="yes" xml:space="preserve">
          <source>The adapters will add their own data as well.</source>
          <target state="translated">适配器也会添加自己的数据。</target>
        </trans-unit>
        <trans-unit id="f8d0cf85bdd1178136b864d2a0322afc33f58b8d" translate="yes" xml:space="preserve">
          <source>The added &lt;code&gt;password_confirmation&lt;/code&gt; attribute is virtual; it exists only as an in-memory attribute for validating the password. To achieve this, the validation adds accessors to the model for the confirmation attribute.</source>
          <target state="translated">添加的 &lt;code&gt;password_confirmation&lt;/code&gt; 属性是虚拟的；它仅作为用于验证密码的内存属性存在。为此，验证将访问器添加到模型中用于确认属性。</target>
        </trans-unit>
        <trans-unit id="9cbba5c44f15bf44eb1bb7c847d1598bf89ac630" translate="yes" xml:space="preserve">
          <source>The advantage of Russian doll caching is that if a single product is updated, all the other inner fragments can be reused when regenerating the outer fragment.</source>
          <target state="translated">俄罗斯娃娃缓存的优势在于,如果更新了单个产品,在重新生成外部碎片时,其他所有的内部碎片都可以重复使用。</target>
        </trans-unit>
        <trans-unit id="7508b7e3879dc7eed43e6755794e11a2266cc714" translate="yes" xml:space="preserve">
          <source>The algorithm for pluralizations in &lt;code&gt;:en&lt;/code&gt; is as simple as:</source>
          <target state="translated">&lt;code&gt;:en&lt;/code&gt; 中的复数算法很简单：</target>
        </trans-unit>
        <trans-unit id="d95f184af6a22fac572c69661f48cdfc6fc482d3" translate="yes" xml:space="preserve">
          <source>The answer is that it is assumed that deletion on an association is about removing the &lt;em&gt;link&lt;/em&gt; between the owner and the associated object(s), rather than necessarily the associated objects themselves. So with &lt;a href=&quot;classmethods#method-i-has_and_belongs_to_many&quot;&gt;has_and_belongs_to_many&lt;/a&gt; and &lt;a href=&quot;classmethods#method-i-has_many&quot;&gt;has_many&lt;/a&gt;&lt;code&gt;:through&lt;/code&gt;, the join records will be deleted, but the associated records won't.</source>
          <target state="translated">答案是，假定删除关联是关于删除所有者和关联对象（而不是关联对象本身）之间的&lt;em&gt;链接&lt;/em&gt;。因此，使用&lt;a href=&quot;classmethods#method-i-has_and_belongs_to_many&quot;&gt;has_and_belongs_to_many&lt;/a&gt;和&lt;a href=&quot;classmethods#method-i-has_many&quot;&gt;has_many &lt;/a&gt; &lt;code&gt;:through&lt;/code&gt; ，将删除联接记录，但不会删除关联的记录。</target>
        </trans-unit>
        <trans-unit id="353bd424fd13e095ac75fc42f9927d735d0d1c2f" translate="yes" xml:space="preserve">
          <source>The appearance example was all about exposing server functionality to client-side invocation over the WebSocket connection. But the great thing about WebSockets is that it's a two-way street. So now let's show an example where the server invokes an action on the client.</source>
          <target state="translated">这个外观示例就是通过WebSocket连接将服务器功能暴露给客户端调用。但WebSocket的伟大之处在于它是双向的。因此,现在让我们展示一个服务器在客户端调用操作的例子。</target>
        </trans-unit>
        <trans-unit id="8fde979a35183a10d65ad95dba16fa9e6c002a01" translate="yes" xml:space="preserve">
          <source>The application is also responsible for setting up and executing the booting process. From the moment you require &amp;ldquo;config/application.rb&amp;rdquo; in your app, the booting process goes like this:</source>
          <target state="translated">该应用程序还负责设置和执行引导过程。从您在应用程序中需要&amp;ldquo; config / application.rb&amp;rdquo;的那一刻起，启动过程就是这样：</target>
        </trans-unit>
        <trans-unit id="3d0a1ecb7f1256fe4d16764400ce4d4d5314c359" translate="yes" xml:space="preserve">
          <source>The application object is also responsible for holding the routes and reloading routes whenever the files change in development.</source>
          <target state="translated">应用对象还负责持有路由,并在开发中每当文件发生变化时,就会重新加载路由。</target>
        </trans-unit>
        <trans-unit id="d6a741da9207ca1806a38069676ef5f5dd1bcfc7" translate="yes" xml:space="preserve">
          <source>The application template is evaluated in the context of a &lt;code&gt;Rails::Generators::AppGenerator&lt;/code&gt; instance. It uses the &lt;code&gt;apply&lt;/code&gt; action provided by &lt;a href=&quot;https://github.com/erikhuda/thor/blob/master/lib/thor/actions.rb#L207&quot;&gt;Thor&lt;/a&gt;. This means you can extend and change the instance to match your needs.</source>
          <target state="translated">在 &lt;code&gt;Rails::Generators::AppGenerator&lt;/code&gt; 实例的上下文中评估应用程序模板。它使用&lt;a href=&quot;https://github.com/erikhuda/thor/blob/master/lib/thor/actions.rb#L207&quot;&gt;Thor&lt;/a&gt;提供的 &lt;code&gt;apply&lt;/code&gt; 操作。这意味着您可以扩展和更改实例以满足您的需求。</target>
        </trans-unit>
        <trans-unit id="57608d3d8a63da3b4eeb802f9cffbdf520f3d3af" translate="yes" xml:space="preserve">
          <source>The argument &lt;em&gt;n&lt;/em&gt; specifies the length of the random string to be generated.</source>
          <target state="translated">参数&lt;em&gt;n&lt;/em&gt;指定要生成的随机字符串的长度。</target>
        </trans-unit>
        <trans-unit id="a5de69b46e606eb78424a600549646ba791e34a5" translate="yes" xml:space="preserve">
          <source>The argument can be either an &lt;code&gt;ActiveSupport::HashWithIndifferentAccess&lt;/code&gt; or a regular &lt;code&gt;Hash&lt;/code&gt;. In either case the merge respects the semantics of indifferent access.</source>
          <target state="translated">该参数可以是 &lt;code&gt;ActiveSupport::HashWithIndifferentAccess&lt;/code&gt; 或常规 &lt;code&gt;Hash&lt;/code&gt; 。无论哪种情况，合并都遵循无差别访问的语义。</target>
        </trans-unit>
        <trans-unit id="5c30784dd868d0b2a3de1d8c041fd8b543b7be28" translate="yes" xml:space="preserve">
          <source>The argument passed to the block is a special kind of builder for this collection, which has the ability to generate the label and check box for the current item in the collection, with proper text and value. Using it, you can change the label and check box display order or even use the label as wrapper, as in the example above.</source>
          <target state="translated">传递给该块的参数是一种特殊的构建器,它具有为集合中的当前项目生成标签和复选框的功能,并具有适当的文本和值。利用它,你可以改变标签和复选框的显示顺序,甚至可以像上面的例子一样,将标签作为包装物。</target>
        </trans-unit>
        <trans-unit id="a1e3d901aa2a402261442ec2c7ebd8329f10aa33" translate="yes" xml:space="preserve">
          <source>The argument passed to the block is a special kind of builder for this collection, which has the ability to generate the label and radio button for the current item in the collection, with proper text and value. Using it, you can change the label and radio button display order or even use the label as wrapper, as in the example above.</source>
          <target state="translated">传递给块的参数是一种特殊的构建器,它具有为集合中的当前项目生成标签和单选按钮的能力,并具有适当的文本和值。使用它,你可以改变标签和单选按钮的显示顺序,甚至可以像上面的例子一样,将标签作为包装。</target>
        </trans-unit>
        <trans-unit id="f1a9576f4a2b223a09361d11dd1dc6b658ae1532" translate="yes" xml:space="preserve">
          <source>The argument to the method can also be an array of fields.</source>
          <target state="translated">该方法的参数也可以是一个字段数组。</target>
        </trans-unit>
        <trans-unit id="2d61b8b36e01219e1fd275a42844d956d215f5ac" translate="yes" xml:space="preserve">
          <source>The arguments</source>
          <target state="translated">论点</target>
        </trans-unit>
        <trans-unit id="355e19400456a3fe1f26ca11cc6c7b7a8ecf2d0d" translate="yes" xml:space="preserve">
          <source>The array of autoload paths can be extended by mutating &lt;code&gt;config.autoload_paths&lt;/code&gt;, in &lt;code&gt;config/application.rb&lt;/code&gt;, but nowadays this is discouraged.</source>
          <target state="translated">的自动加载路径的阵列可通过突变被扩展 &lt;code&gt;config.autoload_paths&lt;/code&gt; ，在 &lt;code&gt;config/application.rb&lt;/code&gt; ，但现在这是气馁。</target>
        </trans-unit>
        <trans-unit id="943fbe6c6be26526a4abc96639fa39121c1412ac" translate="yes" xml:space="preserve">
          <source>The array of names of environments where destructive actions should be prohibited. By default, the value is &lt;code&gt;[&quot;production&quot;]&lt;/code&gt;.</source>
          <target state="translated">应当禁止破坏性操作的环境名称的数组。默认情况下，值为 &lt;code&gt;[&quot;production&quot;]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a30865759f8ba34ea99a4762dc963aa4ce5642fe" translate="yes" xml:space="preserve">
          <source>The array or hash form is only available in model instances. You can try &lt;code&gt;sanitize_sql()&lt;/code&gt; elsewhere. &lt;em&gt;Make it a habit to think about the security consequences when using an external string in SQL&lt;/em&gt;.</source>
          <target state="translated">数组或哈希表形式仅在模型实例中可用。您可以在其他地方尝试 &lt;code&gt;sanitize_sql()&lt;/code&gt; 。&lt;em&gt;在SQL中使用外部字符串时，养成考虑安全后果的习惯&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="ea4e3572396cf97dec471b476f6e4fb172527901" translate="yes" xml:space="preserve">
          <source>The assertion is useful to test side effects. The passed block can be anything that can be converted to string with to_s.</source>
          <target state="translated">这个断言对测试副作用很有用。通过的块可以是任何可以用to_s转换为字符串的东西。</target>
        </trans-unit>
        <trans-unit id="c93d658e05dd9a1c5eae6aef5c9a16bc9ced6067" translate="yes" xml:space="preserve">
          <source>The asset pipeline automatically evaluates ERB. This means if you add an &lt;code&gt;erb&lt;/code&gt; extension to a CSS asset (for example, &lt;code&gt;application.css.erb&lt;/code&gt;), then helpers like &lt;code&gt;asset_path&lt;/code&gt; are available in your CSS rules:</source>
          <target state="translated">资产管道会自动评估ERB。这意味着，如果将 &lt;code&gt;erb&lt;/code&gt; 扩展名添加到CSS资产（例如 &lt;code&gt;application.css.erb&lt;/code&gt; ），则CSS规则 &lt;code&gt;asset_path&lt;/code&gt; 提供诸如asset_path之类的帮助器：</target>
        </trans-unit>
        <trans-unit id="0a3011fda96b1ca8753841bf3b898af6dbd4f057" translate="yes" xml:space="preserve">
          <source>The asset pipeline is implemented by the &lt;a href=&quot;https://github.com/rails/sprockets-rails&quot;&gt;sprockets-rails&lt;/a&gt; gem, and is enabled by default. You can disable it while creating a new application by passing the &lt;code&gt;--skip-sprockets&lt;/code&gt; option.</source>
          <target state="translated">资产管道是由&lt;a href=&quot;https://github.com/rails/sprockets-rails&quot;&gt;sprockets-rails&lt;/a&gt; gem实现的，并且默认情况下处于启用状态。您可以通过 &lt;code&gt;--skip-sprockets&lt;/code&gt; 选项在创建新应用程序时禁用它。</target>
        </trans-unit>
        <trans-unit id="f878c6151e69b269ab4433fa5848e5efa53bde9b" translate="yes" xml:space="preserve">
          <source>The asset pipeline provides a framework to concatenate and minify or compress JavaScript and CSS assets. It also adds the ability to write these assets in other languages and pre-processors such as CoffeeScript, Sass, and ERB. It allows assets in your application to be automatically combined with assets from other gems.</source>
          <target state="translated">资产流水线提供了一个框架来连接和最小化或压缩JavaScript和CSS资产。它还增加了用其他语言和预处理器(如CoffeeScript、Sass和ERB)编写这些资产的能力。它允许你的应用程序中的资产与其他宝石中的资产自动结合。</target>
        </trans-unit>
        <trans-unit id="77a3d803d07d408010feccc57fa433b773c69c13" translate="yes" xml:space="preserve">
          <source>The asset pipeline requires the following additions:</source>
          <target state="translated">资产管道需要增加以下内容:</target>
        </trans-unit>
        <trans-unit id="020ec0a3484e16c339a2ef064894893cf7244347" translate="yes" xml:space="preserve">
          <source>The asset tag helpers do &lt;em&gt;not&lt;/em&gt; verify the existence of the assets at the specified locations; they simply assume that you know what you're doing and generate the link.</source>
          <target state="translated">资产标签助手&lt;em&gt;不&lt;/em&gt;验证指定位置的资产是否存在；他们只是假设您知道自己在做什么并生成链接。</target>
        </trans-unit>
        <trans-unit id="0fc7be0de976ccd2622628358c16d6f5f67c7961" translate="yes" xml:space="preserve">
          <source>The association methods module is included immediately after the generated attributes methods module, meaning an association will override the methods for an attribute with the same name.</source>
          <target state="translated">关联方法模块紧随生成的属性方法模块之后,意味着一个关联将覆盖同名属性的方法。</target>
        </trans-unit>
        <trans-unit id="e55dd8733ce7e8c29594190c08e43e1a9e8c9dd8" translate="yes" xml:space="preserve">
          <source>The async adapter is intended for development/testing and should not be used in production.</source>
          <target state="translated">该异步适配器旨在用于开发/测试,不应用于生产。</target>
        </trans-unit>
        <trans-unit id="3e1a7da90bdc196924fb861662b91e7b9e28a1e0" translate="yes" xml:space="preserve">
          <source>The attacker creates a valid session ID: They load the login page of the web application where they want to fix the session, and take the session ID in the cookie from the response (see number 1 and 2 in the image).</source>
          <target state="translated">攻击者创建了一个有效的会话ID:他们加载他们想要修复会话的Web应用程序的登录页面,并从响应的Cookie中获取会话ID(见图中数字1和2)。</target>
        </trans-unit>
        <trans-unit id="4be31d12233318ca5b32a5c7576e0a8a66ea7e83" translate="yes" xml:space="preserve">
          <source>The attacker forces the user's browser into using this session ID (see number 3 in the image). As you may not change a cookie of another domain (because of the same origin policy), the attacker has to run a JavaScript from the domain of the target web application. Injecting the JavaScript code into the application by XSS accomplishes this attack. Here is an example: &lt;code&gt;&amp;lt;script&amp;gt;document.cookie=&quot;_session_id=16d5b78abb28e3d6206b60f22a03c8d9&quot;;&amp;lt;/script&amp;gt;&lt;/code&gt;. Read more about XSS and injection later on.</source>
          <target state="translated">攻击者强迫用户的浏览器使用此会话ID（请参阅图中的数字3）。由于您可能不会更改另一个域的Cookie（由于相同的原始策略），因此攻击者必须从目标Web应用程序的域中运行JavaScript。通过XSS将JavaScript代码注入应用程序即可完成此攻击。这是一个示例： &lt;code&gt;&amp;lt;script&amp;gt;document.cookie=&quot;_session_id=16d5b78abb28e3d6206b60f22a03c8d9&quot;;&amp;lt;/script&amp;gt;&lt;/code&gt; 。稍后再阅读有关XSS和注入的更多信息。</target>
        </trans-unit>
        <trans-unit id="472aaec9cf17ab5457945e279dd6b89369f1abcb" translate="yes" xml:space="preserve">
          <source>The attacker lures the victim to the infected page with the JavaScript code. By viewing the page, the victim's browser will change the session ID to the trap session ID.</source>
          <target state="translated">攻击者用JavaScript代码引诱受害者进入被感染的页面。受害者的浏览器通过浏览该页面,会将会话ID改为陷阱会话ID。</target>
        </trans-unit>
        <trans-unit id="1d7484930a38883801baf19ed274c8a6f14ef377" translate="yes" xml:space="preserve">
          <source>The attribute is also allowed on form submit buttons. This allows you to customize the warning message depending on the button which was activated. In this case, you should &lt;strong&gt;not&lt;/strong&gt; have &lt;code&gt;data-confirm&lt;/code&gt; on the form itself.</source>
          <target state="translated">表单提交按钮上也允许该属性。这使您可以根据激活的按钮来自定义警告消息。在这种情况下，你应该&lt;strong&gt;不会&lt;/strong&gt;有 &lt;code&gt;data-confirm&lt;/code&gt; 表单本身。</target>
        </trans-unit>
        <trans-unit id="6e7ba74405d043fac8cffb4688e871995459f16e" translate="yes" xml:space="preserve">
          <source>The attribute name must be a valid method name in Ruby.</source>
          <target state="translated">属性名必须是Ruby中有效的方法名。</target>
        </trans-unit>
        <trans-unit id="19f710237a4cdfb777c8c502e54db11bea3253d7" translate="yes" xml:space="preserve">
          <source>The attribute writer is named after the association, which means that in the following example, two new methods are added to your model:</source>
          <target state="translated">属性编写者以关联命名,这意味着在下面的例子中,两个新方法被添加到你的模型中。</target>
        </trans-unit>
        <trans-unit id="b1adaffe133610f0521b942bc7e0a2ed64cf70bf" translate="yes" xml:space="preserve">
          <source>The autoloading &lt;code&gt;zeitwerk&lt;/code&gt; mode is enabled by default in Rails 6 applications running on CRuby:</source>
          <target state="translated">默认情况下，在CRuby上运行的Rails 6应用程序中启用自动加载 &lt;code&gt;zeitwerk&lt;/code&gt; 模式：</target>
        </trans-unit>
        <trans-unit id="51a5f61ccda015537358800f0ed14b17759b5b24" translate="yes" xml:space="preserve">
          <source>The automatic connection switching in Rails is relatively primitive and deliberately doesn't do a whole lot. The goal was a system that demonstrated how to do automatic connection switching that was flexible enough to be customizable by app developers.</source>
          <target state="translated">Rails中的自动连接切换是比较原始的,而且故意不做很多事情。我们的目标是建立一个系统,展示如何进行自动连接切换,并且这个系统足够灵活,可以让应用开发者进行定制。</target>
        </trans-unit>
        <trans-unit id="cd498d8f00a55adbd388db8254946597ced7c8ea" translate="yes" xml:space="preserve">
          <source>The automatic guessing of the inverse association uses a heuristic based on the name of the class, so it may not work for all associations, especially the ones with non-standard names.</source>
          <target state="translated">逆向关联的自动猜测使用的是基于类名的启发式,所以可能并不是对所有的关联都有效,尤其是那些非标准名称的关联。</target>
        </trans-unit>
        <trans-unit id="fca70fc363db0694103c1c3ee5d464d957e1244a" translate="yes" xml:space="preserve">
          <source>The auxiliary file is written in a standard directory for temporary files, but you can pass a directory of your choice as second argument.</source>
          <target state="translated">辅助文件是写在一个标准的临时文件目录下,但你可以传递一个你选择的目录作为第二个参数。</target>
        </trans-unit>
        <trans-unit id="6b0da80781abc5c9cb6bed2a2370dad19e10b560" translate="yes" xml:space="preserve">
          <source>The available log levels are: &lt;code&gt;:debug&lt;/code&gt;, &lt;code&gt;:info&lt;/code&gt;, &lt;code&gt;:warn&lt;/code&gt;, &lt;code&gt;:error&lt;/code&gt;, &lt;code&gt;:fatal&lt;/code&gt;, and &lt;code&gt;:unknown&lt;/code&gt;, corresponding to the log level numbers from 0 up to 5, respectively. To change the default log level, use</source>
          <target state="translated">可用的日志级别为：： &lt;code&gt;:debug&lt;/code&gt; ， &lt;code&gt;:info&lt;/code&gt; ， &lt;code&gt;:warn&lt;/code&gt; ， &lt;code&gt;:error&lt;/code&gt; ， &lt;code&gt;:fatal&lt;/code&gt; 和 &lt;code&gt;:unknown&lt;/code&gt; ，分别对应于从0到5的日志级别编号。要更改默认日志级别，请使用</target>
        </trans-unit>
        <trans-unit id="fca1ba2bb526fb57febfb060696498224cd1049e" translate="yes" xml:space="preserve">
          <source>The available paths in an engine are:</source>
          <target state="translated">引擎中可用的路径有:</target>
        </trans-unit>
        <trans-unit id="bb8d0fec98ef93ac9f78e7dfd28d986dc0cd2738" translate="yes" xml:space="preserve">
          <source>The available services are:</source>
          <target state="translated">现有的服务有:</target>
        </trans-unit>
        <trans-unit id="ef6b1867b4c9436cd93c4b9cfa16ca0f109c4dea" translate="yes" xml:space="preserve">
          <source>The available variables are the same as if you were running the code line by line. After all, that's what debugging is.</source>
          <target state="translated">可用的变量和你逐行运行代码是一样的。毕竟,这才是调试的目的。</target>
        </trans-unit>
        <trans-unit id="3e6568f0d6fca19e054683295306fc2923394571" translate="yes" xml:space="preserve">
          <source>The backend lazy-loads these translations when a translation is looked up for the first time. This backend can be swapped with something else even after translations have already been announced.</source>
          <target state="translated">后台在第一次查询译文时,会将这些译文进行懒加载。即使在翻译已经公布之后,这个后端也可以和其他东西交换。</target>
        </trans-unit>
        <trans-unit id="0ad438901d54f922f7e3a38fbb64669716721c2e" translate="yes" xml:space="preserve">
          <source>The bang versions (e.g. &lt;code&gt;save!&lt;/code&gt;) raise an exception if the record is invalid. The non-bang versions don't: &lt;code&gt;save&lt;/code&gt; and &lt;code&gt;update&lt;/code&gt; return &lt;code&gt;false&lt;/code&gt;, and &lt;code&gt;create&lt;/code&gt; just returns the object.</source>
          <target state="translated">如果记录无效，则爆炸版本（例如， &lt;code&gt;save!&lt;/code&gt; ）引发异常。非爆炸版本不会： &lt;code&gt;save&lt;/code&gt; 并 &lt;code&gt;update&lt;/code&gt; 返回 &lt;code&gt;false&lt;/code&gt; ，而 &lt;code&gt;create&lt;/code&gt; 仅返回对象。</target>
        </trans-unit>
        <trans-unit id="62d4d2b30d3f29b1f5a9302fcfcde5019f96fad5" translate="yes" xml:space="preserve">
          <source>The base class for all Action Mailbox ingress controllers.</source>
          <target state="translated">所有Action Mailbox入口控制器的基类。</target>
        </trans-unit>
        <trans-unit id="fd76dbe2c67c754bf19c5b00612085a2ebb4cc46" translate="yes" xml:space="preserve">
          <source>The base class for all Active Storage controllers.</source>
          <target state="translated">所有Active Storage控制器的基础类。</target>
        </trans-unit>
        <trans-unit id="b0359296c2d971bb520b61869223dc237fbef902" translate="yes" xml:space="preserve">
          <source>The base class for all application mailboxes. Not intended to be inherited from directly. Inherit from &lt;code&gt;ApplicationMailbox&lt;/code&gt; instead, as that's where the app-specific routing is configured. This routing is specified in the following ways:</source>
          <target state="translated">所有应用程序邮箱的基类。不打算直接继承。而是从 &lt;code&gt;ApplicationMailbox&lt;/code&gt; 继承，因为在那里配置了应用程序特定的路由。通过以下方式指定此路由：</target>
        </trans-unit>
        <trans-unit id="0514ba9362faf5e557150c734ea710fda9e209d8" translate="yes" xml:space="preserve">
          <source>The basename of the file in the client.</source>
          <target state="translated">客户端中文件的基名。</target>
        </trans-unit>
        <trans-unit id="354bf92980b650e2e529e6489176a97f3181b18f" translate="yes" xml:space="preserve">
          <source>The basic idea is that &lt;code&gt;:only =&amp;gt; :index&lt;/code&gt; gets converted to &lt;code&gt;:if =&amp;gt; proc {|c| c.action_name == &quot;index&quot; }&lt;/code&gt;.</source>
          <target state="translated">基本思想是 &lt;code&gt;:only =&amp;gt; :index&lt;/code&gt; 被转换为 &lt;code&gt;:if =&amp;gt; proc {|c| c.action_name == &quot;index&quot; }&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3341838bd6d04f628d28e8b08b6c39bd9610e33a" translate="yes" xml:space="preserve">
          <source>The basic idea is that given</source>
          <target state="translated">基本思路是,给定</target>
        </trans-unit>
        <trans-unit id="97784f6c14c00e72c6eeaa70b198d4868255bce2" translate="yes" xml:space="preserve">
          <source>The basic principles of MVC (Model, View, Controller) and RESTful design.</source>
          <target state="translated">MVC(Model、View、Controller)和RESTful设计的基本原理。</target>
        </trans-unit>
        <trans-unit id="3b73c2346832dbfb68e3f58b0769a3474d8edbcf" translate="yes" xml:space="preserve">
          <source>The basics of Ajax.</source>
          <target state="translated">Ajax的基础知识。</target>
        </trans-unit>
        <trans-unit id="139e7c28bc4fac9ee5dfd3a3d5d10a14eb9708cf" translate="yes" xml:space="preserve">
          <source>The beauty of system testing is that it is similar to integration testing in that it tests the user's interaction with your controller, model, and view, but system testing is much more robust and actually tests your application as if a real user were using it. Going forward, you can test anything that the user themselves would do in your application such as commenting, deleting articles, publishing draft articles, etc.</source>
          <target state="translated">系统测试的好处是,它类似于集成测试,因为它测试用户与你的控制器、模型和视图的交互,但系统测试更强大,实际上是在测试你的应用程序,就像一个真正的用户在使用它一样。往后,你可以测试任何用户自己会在你的应用程序中做的事情,比如评论、删除文章、发布文章草稿等。</target>
        </trans-unit>
        <trans-unit id="a2a45f963646700d1f65d81d8560e98bd6909900" translate="yes" xml:space="preserve">
          <source>The benefits of the asset pipeline.</source>
          <target state="translated">资产管道的好处。</target>
        </trans-unit>
        <trans-unit id="9f5df1eea74d738dad34595b55bcf14eb6952a3a" translate="yes" xml:space="preserve">
          <source>The best &lt;em&gt;solution against it is not to store this kind of data in a session, but in the database&lt;/em&gt;. In this case store the credit in the database and the logged_in_user_id in the session.</source>
          <target state="translated">对此的最佳&lt;em&gt;解决方案不是将此类数据存储在会话中，而是存储在数据库中&lt;/em&gt;。在这种情况下，将信用额度存储在数据库中，将logging_in_user_id存储在会话中。</target>
        </trans-unit>
        <trans-unit id="7b8ad0381a4c987306f2cb168ce73b88e410de21" translate="yes" xml:space="preserve">
          <source>The best place to add a module is in your &lt;code&gt;ApplicationController&lt;/code&gt;, but you can also add modules to individual controllers.</source>
          <target state="translated">添加模块的最佳位置是在 &lt;code&gt;ApplicationController&lt;/code&gt; 中，但您也可以将模块添加到单个控制器中。</target>
        </trans-unit>
        <trans-unit id="c4b5ed9443e66b3e0110749709b60139c3380001" translate="yes" xml:space="preserve">
          <source>The best way to be sure that your application still works after upgrading is to have good test coverage before you start the process. If you don't have automated tests that exercise the bulk of your application, you'll need to spend time manually exercising all the parts that have changed. In the case of a Rails upgrade, that will mean every single piece of functionality in the application. Do yourself a favor and make sure your test coverage is good &lt;em&gt;before&lt;/em&gt; you start an upgrade.</source>
          <target state="translated">确保您的应用程序在升级后仍能正常工作的最佳方法是在开始该过程之前进行良好的测试。如果您没有用于执行大量应用程序的自动化测试，则需要花时间手动执行所有已更改的部分。对于Rails升级，这意味着应用程序中的每一项功能。帮自己一个忙，&lt;em&gt;在&lt;/em&gt;开始升级&lt;em&gt;之前，&lt;/em&gt;请确保您的测试覆盖范围良好。</target>
        </trans-unit>
        <trans-unit id="a3d872feade1acb29bcd57807ca7d41970991f9d" translate="yes" xml:space="preserve">
          <source>The best way to follow what the loaders are doing is to inspect their activity.</source>
          <target state="translated">跟踪装载机工作的最好方法是检查他们的活动。</target>
        </trans-unit>
        <trans-unit id="7cfb77e11e82da7663f457bc5a1147bff6a3dfe2" translate="yes" xml:space="preserve">
          <source>The best way to read this guide is to follow it step by step. All steps are essential to run this example application and no additional code or steps are needed.</source>
          <target state="translated">阅读本指南的最好方法是一步一步地按照它来做。所有步骤都是运行这个示例应用程序所必需的,不需要额外的代码或步骤。</target>
        </trans-unit>
        <trans-unit id="a2b50ab89ed47c343fdd3e342181514c408e3d5d" translate="yes" xml:space="preserve">
          <source>The best way to use this is by doing recyclable key-based cache expiration on top of a cache store like Memcached or Redis that'll automatically kick out old entries.</source>
          <target state="translated">最好的使用方法是在Memcached或Redis这样的缓存存储上面做可回收的基于密钥的缓存到期,会自动踢掉旧的条目。</target>
        </trans-unit>
        <trans-unit id="71772b8fb2f4b466d969e8e4d46babbcf646c9f3" translate="yes" xml:space="preserve">
          <source>The best way to work around this problem is to add a unique index to the database table using &lt;a href=&quot;../connectionadapters/schemastatements#method-i-add_index&quot;&gt;connection.add_index&lt;/a&gt;. In the rare case that a race condition occurs, the database will guarantee the field's uniqueness.</source>
          <target state="translated">解决此问题的最佳方法是使用&lt;a href=&quot;../connectionadapters/schemastatements#method-i-add_index&quot;&gt;connection.add_index&lt;/a&gt;向数据库表添加唯一索引。在极少数情况下发生竞争情况，数据库将保证该字段的唯一性。</target>
        </trans-unit>
        <trans-unit id="adb17d60435cd58ba82f08adc8591fefc01e70ee" translate="yes" xml:space="preserve">
          <source>The block argument of the &lt;code&gt;initializer&lt;/code&gt; method is the instance of the application itself, and so we can access the configuration on it by using the &lt;code&gt;config&lt;/code&gt; method as done in the example.</source>
          <target state="translated">&lt;code&gt;initializer&lt;/code&gt; 方法的block参数是应用程序本身的实例，因此我们可以使用 &lt;code&gt;config&lt;/code&gt; 方法访问该示例上的配置，如示例所示。</target>
        </trans-unit>
        <trans-unit id="caaa4fd86f379445e99ffabab0eee855f27afa89" translate="yes" xml:space="preserve">
          <source>The block form supports filtering. If the &lt;code&gt;:only&lt;/code&gt; option is specified, then only the listed job(s) will not be performed.</source>
          <target state="translated">块形式支持过滤。如果指定 &lt;code&gt;:only&lt;/code&gt; 选项，则仅执行列出的作业。</target>
        </trans-unit>
        <trans-unit id="26d5b2739dfdb39220eba018836ffc384a52f3e7" translate="yes" xml:space="preserve">
          <source>The block in the &lt;code&gt;subscribe&lt;/code&gt; call gets the name of the event, start timestamp, end timestamp, a string with a unique identifier for that event's instrumenter (something like &amp;ldquo;535801666f04d0298cd6&amp;rdquo;), and a hash with the payload, in that order.</source>
          <target state="translated">&lt;code&gt;subscribe&lt;/code&gt; 调用中的块获取事件的名称，开始时间戳记，结束时间戳记，具有该事件的检测程序唯一标识符的字符串（类似于&amp;ldquo; 535801666f04d0298cd6&amp;rdquo;），以及带有有效负载的哈希。</target>
        </trans-unit>
        <trans-unit id="1cc5d52d9718a61420c1b73dd368fe9cb04a4603" translate="yes" xml:space="preserve">
          <source>The block receives the following arguments:</source>
          <target state="translated">该块接收以下参数。</target>
        </trans-unit>
        <trans-unit id="c5f3cc776a881a65a70477c8470d7ee47f5932e1" translate="yes" xml:space="preserve">
          <source>The block receives the record, the attribute's name, and the attribute's value. You can do anything you like to check for valid data within the block. If your validation fails, you should add an error message to the model, therefore making it invalid.</source>
          <target state="translated">块接收记录、属性的名称和属性的值。你可以做任何你喜欢的事情来检查块内的有效数据。如果你的验证失败,你应该在模型中添加一个错误信息,因此使其无效。</target>
        </trans-unit>
        <trans-unit id="3dc7e6fbe0f58390efcaaa176ed65f3ad8037794" translate="yes" xml:space="preserve">
          <source>The block syntax also allows you to customize the part headers if desired:</source>
          <target state="translated">如果需要的话,块语法还允许您自定义部件标题。</target>
        </trans-unit>
        <trans-unit id="80bfc2cdef2492355bfa550b3bf082d136bf5e1e" translate="yes" xml:space="preserve">
          <source>The block syntax is also useful in providing information specific to a part:</source>
          <target state="translated">块语法在提供一个零件的特定信息方面也很有用。</target>
        </trans-unit>
        <trans-unit id="61669ac19ca4302d41af19d88cf28cfd8b55fefc" translate="yes" xml:space="preserve">
          <source>The block version of redirect allows for the easy encapsulation of any logic associated with the redirect in question. Either the params and request are supplied as arguments, or just params, depending of how many arguments your block accepts. A string is required as a return value.</source>
          <target state="translated">重定向的块版本允许轻松封装任何与重定向相关的逻辑。params和request可以作为参数提供,也可以只提供参数,这取决于你的块接受多少参数。返回值需要一个字符串。</target>
        </trans-unit>
        <trans-unit id="73a19852ff729852791eb4cf72a4ea37280b2756" translate="yes" xml:space="preserve">
          <source>The block will be passed an instance of &lt;code&gt;&amp;lt;Driver&amp;gt;::Options&lt;/code&gt; where you can define the capabilities you want. Please refer to your driver documentation to learn about supported options.</source>
          <target state="translated">该块将传递 &lt;code&gt;&amp;lt;Driver&amp;gt;::Options&lt;/code&gt; 的实例，您可以在其中定义所需的功能。请参考驱动程序文档以了解支持的选项。</target>
        </trans-unit>
        <trans-unit id="0aa523374f201c463856cfce5f5635f277140ee6" translate="yes" xml:space="preserve">
          <source>The block will be run without doing anything. All database statements that happen within the block are effectively appended to the already open database transaction.</source>
          <target state="translated">该块将在不做任何事情的情况下运行。所有在该块中发生的数据库语句都会被有效地附加到已经打开的数据库事务中。</target>
        </trans-unit>
        <trans-unit id="40ae4060cc10353f22b7cd78ee03f141631014ca" translate="yes" xml:space="preserve">
          <source>The block will only be executed if the client is being created. The second time we run this code, the block will be ignored.</source>
          <target state="translated">只有在创建客户端时,才会执行该块。当我们第二次运行这段代码时,该块将被忽略。</target>
        </trans-unit>
        <trans-unit id="be97ed4602139a7a506baea761907565044556e5" translate="yes" xml:space="preserve">
          <source>The bottom form will call the &lt;code&gt;create&lt;/code&gt; action on the &lt;code&gt;UsersController&lt;/code&gt;. Because the form's remote option is set to true, the request will be posted to the &lt;code&gt;UsersController&lt;/code&gt; as an Ajax request, looking for JavaScript. In order to serve that request, the &lt;code&gt;create&lt;/code&gt; action of your controller would look like this:</source>
          <target state="translated">底部的表单将在 &lt;code&gt;UsersController&lt;/code&gt; 上调用 &lt;code&gt;create&lt;/code&gt; 动作。因为表单的remote选项设置为true，所以该请求将作为Ajax请求发布到 &lt;code&gt;UsersController&lt;/code&gt; ，以查找JavaScript。为了满足该请求，控制器的 &lt;code&gt;create&lt;/code&gt; 动作应如下所示：</target>
        </trans-unit>
        <trans-unit id="9dd9e979a08fdef32b1d7a6d2105255de16e8948" translate="yes" xml:space="preserve">
          <source>The builder methods &lt;code&gt;label&lt;/code&gt; and &lt;code&gt;check_box&lt;/code&gt; also accept extra HTML options:</source>
          <target state="translated">构建器方法的 &lt;code&gt;label&lt;/code&gt; 和 &lt;code&gt;check_box&lt;/code&gt; 也接受额外的HTML选项：</target>
        </trans-unit>
        <trans-unit id="7c57627e121234f1b558999cf69b228dc10eb497" translate="yes" xml:space="preserve">
          <source>The builder methods &lt;code&gt;label&lt;/code&gt; and &lt;code&gt;radio_button&lt;/code&gt; also accept extra HTML options:</source>
          <target state="translated">构建器方法 &lt;code&gt;label&lt;/code&gt; 和 &lt;code&gt;radio_button&lt;/code&gt; 还接受其他HTML选项：</target>
        </trans-unit>
        <trans-unit id="a589cc48c0ceff9cfef89e767e0c28b3788894fc" translate="yes" xml:space="preserve">
          <source>The built-in previewers rely on third-party system libraries. Specifically, the built-in video previewer requires &lt;a href=&quot;https://www.ffmpeg.org&quot;&gt;FFmpeg&lt;/a&gt;. Two PDF previewers are provided: one requires &lt;a href=&quot;https://poppler.freedesktop.org&quot;&gt;Poppler&lt;/a&gt;, and the other requires &lt;a href=&quot;https://mupdf.com&quot;&gt;muPDF&lt;/a&gt; (version 1.8 or newer). To preview PDFs, install either Poppler or muPDF.</source>
          <target state="translated">内置的预览器依赖于第三方系统库。具体来说，内置视频预览器需要&lt;a href=&quot;https://www.ffmpeg.org&quot;&gt;FFmpeg&lt;/a&gt;。提供了两个PDF预览器：一个需要&lt;a href=&quot;https://poppler.freedesktop.org&quot;&gt;Poppler&lt;/a&gt;，另一个需要&lt;a href=&quot;https://mupdf.com&quot;&gt;muPDF&lt;/a&gt;（1.8或更高版本）。要预览PDF，请安装Poppler或muPDF。</target>
        </trans-unit>
        <trans-unit id="d0db978acd87eba4fe90cf76850afede1a41cfca" translate="yes" xml:space="preserve">
          <source>The bundled ActiveRecord::ConnectionAdapters distinguish unique index constraint errors from other types of database errors by throwing an &lt;a href=&quot;../recordnotunique&quot;&gt;ActiveRecord::RecordNotUnique&lt;/a&gt; exception. For other adapters you will have to parse the (database-specific) exception message to detect such a case.</source>
          <target state="translated">捆绑的ActiveRecord :: ConnectionAdapters通过抛出&lt;a href=&quot;../recordnotunique&quot;&gt;ActiveRecord :: RecordNotUnique&lt;/a&gt;异常将唯一索引约束错误与其他类型的数据库错误区分开。对于其他适配器，您将必须解析（特定于数据库）异常消息以检测这种情况。</target>
        </trans-unit>
        <trans-unit id="9af11b8b548eca91a377d8c9d48134b4d4aba9da" translate="yes" xml:space="preserve">
          <source>The cable servers can be separated from your normal application server. It's still a Rack application, but it is its own Rack application. The recommended basic setup is as follows:</source>
          <target state="translated">电缆服务器可以和普通应用服务器分开。它仍然是一个Rack应用,但它是自己的Rack应用。推荐的基本设置如下。</target>
        </trans-unit>
        <trans-unit id="dc4f7d12feba94bbfb7fa24ce8fc851cb8a3c09e" translate="yes" xml:space="preserve">
          <source>The caching method changed between Rails 3.x and 4.0. You should &lt;a href=&quot;https://guides.rubyonrails.org/caching_with_rails.html#activesupport-cache-store&quot;&gt;change the cache namespace&lt;/a&gt; and roll out with a cold cache.</source>
          <target state="translated">在Rails 3.x和4.0之间更改了缓存方法。您应该&lt;a href=&quot;https://guides.rubyonrails.org/caching_with_rails.html#activesupport-cache-store&quot;&gt;更改缓存名称空间&lt;/a&gt;并使用冷缓存进行部署。</target>
        </trans-unit>
        <trans-unit id="940974ebea639855c356755dfb99ea6a3861125c" translate="yes" xml:space="preserve">
          <source>The call &lt;code&gt;str.first(n)&lt;/code&gt; is equivalent to &lt;code&gt;str.to(n-1)&lt;/code&gt; if &lt;code&gt;n&lt;/code&gt; &amp;gt; 0, and returns an empty string for &lt;code&gt;n&lt;/code&gt; == 0.</source>
          <target state="translated">如果 &lt;code&gt;n&lt;/code&gt; &amp;gt; 0，则调用 &lt;code&gt;str.first(n)&lt;/code&gt; 等同于 &lt;code&gt;str.to(n-1)&lt;/code&gt; ，并为 &lt;code&gt;n&lt;/code&gt; == 0 返回空字符串。</target>
        </trans-unit>
        <trans-unit id="833c68ae0ff28d5dc9c986e34e3da0f69c98f213" translate="yes" xml:space="preserve">
          <source>The call &lt;code&gt;str.last(n)&lt;/code&gt; is equivalent to &lt;code&gt;str.from(-n)&lt;/code&gt; if &lt;code&gt;n&lt;/code&gt; &amp;gt; 0, and returns an empty string for &lt;code&gt;n&lt;/code&gt; == 0.</source>
          <target state="translated">如果 &lt;code&gt;n&lt;/code&gt; &amp;gt; 0，则调用 &lt;code&gt;str.last(n)&lt;/code&gt; 等效于 &lt;code&gt;str.from(-n)&lt;/code&gt; ，并为 &lt;code&gt;n&lt;/code&gt; == 0 返回空字符串。</target>
        </trans-unit>
        <trans-unit id="1bd262d49ac02ad093f21a4c44e0f8d9da2a38d1" translate="yes" xml:space="preserve">
          <source>The call to &lt;code&gt;stale?&lt;/code&gt; will compare the &lt;code&gt;If-Modified-Since&lt;/code&gt; header in the request with &lt;code&gt;@post.updated_at&lt;/code&gt;. If the header is newer than the last modified, this action will return a &quot;304 Not Modified&quot; response. Otherwise, it will render the response and include a &lt;code&gt;Last-Modified&lt;/code&gt; header in it.</source>
          <target state="translated">呼吁 &lt;code&gt;stale?&lt;/code&gt; 会将请求中的 &lt;code&gt;If-Modified-Since&lt;/code&gt; 标头与 &lt;code&gt;@post.updated_at&lt;/code&gt; 。如果标题比上次修改的标题新，则此操作将返回&amp;ldquo; 304 Not Modified&amp;rdquo;响应。否则，它将呈现响应并在其中包含 &lt;code&gt;Last-Modified&lt;/code&gt; 标头。</target>
        </trans-unit>
        <trans-unit id="bec300411ed42dc8fd8c704fa67d4cdaa9736042" translate="yes" xml:space="preserve">
          <source>The callback can be specified as a symbol naming an instance method; as a proc, lambda, or block; or as an object that responds to a certain method determined by the &lt;code&gt;:scope&lt;/code&gt; argument to &lt;code&gt;define_callbacks&lt;/code&gt;.</source>
          <target state="translated">可以将回调指定为命名实例方法的符号。作为proc，lambda或块；或作为对由 &lt;code&gt;:scope&lt;/code&gt; 参数确定的特定方法做出响应的对象，这些方法对 &lt;code&gt;define_callbacks&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c0144d847fe6227e22630e607a1ac2c22b100548" translate="yes" xml:space="preserve">
          <source>The callback chain is accessible via the &lt;code&gt;_*_callbacks&lt;/code&gt; method on an object. Active Model Callbacks support &lt;code&gt;:before&lt;/code&gt;, &lt;code&gt;:after&lt;/code&gt; and &lt;code&gt;:around&lt;/code&gt; as values for the &lt;code&gt;kind&lt;/code&gt; property. The &lt;code&gt;kind&lt;/code&gt; property defines what part of the chain the callback runs in.</source>
          <target state="translated">通过对象上的 &lt;code&gt;_*_callbacks&lt;/code&gt; 方法可以访问回调链。活动模型回调支持 &lt;code&gt;:before&lt;/code&gt; ， &lt;code&gt;:after&lt;/code&gt; 和 &lt;code&gt;:around&lt;/code&gt; 作为 &lt;code&gt;kind&lt;/code&gt; 属性的值。该 &lt;code&gt;kind&lt;/code&gt; 属性定义哪些链的一部分回调中运行。</target>
        </trans-unit>
        <trans-unit id="ced64514dadc85e7a45902c82df5f158760ecefb" translate="yes" xml:space="preserve">
          <source>The callback objects have methods named after the callback called with the record as the only parameter, such as:</source>
          <target state="translated">回调对象的方法以被调用的回调命名,并以记录为唯一参数,如。</target>
        </trans-unit>
        <trans-unit id="fdbd9eccba5bd5b7285092c65f704cd90f4be3f3" translate="yes" xml:space="preserve">
          <source>The callback only runs when all the &lt;code&gt;:if&lt;/code&gt; conditions and none of the &lt;code&gt;:unless&lt;/code&gt; conditions are evaluated to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">回调仅在所有 &lt;code&gt;:if&lt;/code&gt; 条件且所有 &lt;code&gt;:unless&lt;/code&gt; 条件均未评估为 &lt;code&gt;true&lt;/code&gt; 时运行。</target>
        </trans-unit>
        <trans-unit id="77e7c816645fffb0a5b04100cbb7d18b7fb9b070" translate="yes" xml:space="preserve">
          <source>The callbacks gets executed even if &lt;code&gt;--skip-bundle&lt;/code&gt; and/or &lt;code&gt;--skip-spring&lt;/code&gt; has been passed.</source>
          <target state="translated">即使已传递 &lt;code&gt;--skip-bundle&lt;/code&gt; 和/或 &lt;code&gt;--skip-spring&lt;/code&gt; ,也会执行回调。</target>
        </trans-unit>
        <trans-unit id="97f831f93b6a1f8242aab9535f18bc367e2e8fb6" translate="yes" xml:space="preserve">
          <source>The capitalization of the first word can be turned off by setting the &lt;code&gt;:capitalize&lt;/code&gt; option to false (default is true).</source>
          <target state="translated">通过将 &lt;code&gt;:capitalize&lt;/code&gt; 选项设置为false（默认为true），可以关闭第一个单词的大写。</target>
        </trans-unit>
        <trans-unit id="35068c0b99fe0172d1d7159a2e5bf5702ff3b360" translate="yes" xml:space="preserve">
          <source>The capitalization of the first word can be turned off by setting the optional parameter &lt;code&gt;capitalize&lt;/code&gt; to false. By default, this parameter is true.</source>
          <target state="translated">通过将可选参数 &lt;code&gt;capitalize&lt;/code&gt; 设置为false，可以关闭第一个单词的大写。默认情况下，此参数为true。</target>
        </trans-unit>
        <trans-unit id="7505289652865a62f15db2bf2880fe217d91218d" translate="yes" xml:space="preserve">
          <source>The capture method can be used in ERB templates&amp;hellip;</source>
          <target state="translated">捕获方法可用于ERB模板中&amp;hellip;</target>
        </trans-unit>
        <trans-unit id="68c2dbb421ebf30117a200669e773362d65e7054" translate="yes" xml:space="preserve">
          <source>The capture method extracts part of a template as a &lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt; object. You can then use this object anywhere in your templates, layout, or helpers.</source>
          <target state="translated">capture方法将模板的一部分提取为&lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt;对象。然后，您可以在模板，布局或助手中的任何位置使用此对象。</target>
        </trans-unit>
        <trans-unit id="a6038704237cf96642934bb442e0da7a55ec883a" translate="yes" xml:space="preserve">
          <source>The captured variable can then be used anywhere else.</source>
          <target state="translated">捕获的变量就可以在其他地方使用。</target>
        </trans-unit>
        <trans-unit id="7a7cca56328d52d2a11596166f75f3e5651a8081" translate="yes" xml:space="preserve">
          <source>The channel has been instructed to stream everything that arrives at &lt;code&gt;web_notifications:1&lt;/code&gt; directly to the client by invoking the &lt;code&gt;received&lt;/code&gt; callback.</source>
          <target state="translated">已指示该通道通过调用 &lt;code&gt;received&lt;/code&gt; 回调将到达 &lt;code&gt;web_notifications:1&lt;/code&gt; 的所有内容直接流式传输到客户端。</target>
        </trans-unit>
        <trans-unit id="4b9de0a84a384ce524e586226d5b0f40e2186f22" translate="yes" xml:space="preserve">
          <source>The channel has been instructed to stream everything that arrives at &lt;code&gt;web_notifications:1&lt;/code&gt; directly to the client by invoking the &lt;code&gt;received&lt;/code&gt; callback. The data passed as argument is the hash sent as the second parameter to the server-side broadcast call, JSON encoded for the trip across the wire and unpacked for the data argument arriving as &lt;code&gt;received&lt;/code&gt;.</source>
          <target state="translated">已指示该通道通过调用 &lt;code&gt;received&lt;/code&gt; 回调将到达 &lt;code&gt;web_notifications:1&lt;/code&gt; 的所有内容直接流式传输到客户端。作为参数传递的数据是作为第二个参数发送到服务器端广播调用的哈希，JSON编码用于跨线路传输，并解压缩以作为 &lt;code&gt;received&lt;/code&gt; 的数据参数到达。</target>
        </trans-unit>
        <trans-unit id="6baa8358f54c0de7f5162dbaeb03235b5c79ab40" translate="yes" xml:space="preserve">
          <source>The channel provides the basic structure of grouping behavior into logical units when communicating over the WebSocket connection. You can think of a channel like a form of controller, but one that's capable of pushing content to the subscriber in addition to simply responding to the subscriber's direct requests.</source>
          <target state="translated">当通过 WebSocket 连接进行通信时,通道提供了将行为分组为逻辑单元的基本结构。您可以将通道想象成一种控制器的形式,但它除了能够简单地响应用户的直接请求外,还能够将内容推送给用户。</target>
        </trans-unit>
        <trans-unit id="c6d579397c5bdac0fe33ecdf6e2a0cdff8bc330e" translate="yes" xml:space="preserve">
          <source>The character set being used for the response. Default is &quot;utf-8&quot;.</source>
          <target state="translated">用于响应的字符集。默认为 &quot;utf-8&quot;。</target>
        </trans-unit>
        <trans-unit id="71882d36ed0d03f3e65d077d09fd3ffab83a0a54" translate="yes" xml:space="preserve">
          <source>The charset of the response. HTML wants to know the encoding of the content you're giving them, so we need to send that along.</source>
          <target state="translated">响应的字符集。HTML想要知道你给他们的内容的编码,所以我们需要把它发送过来。</target>
        </trans-unit>
        <trans-unit id="65188e551d2286e8dce2576c678a2674897adda4" translate="yes" xml:space="preserve">
          <source>The cipher text and initialization vector are base64 encoded and returned to you.</source>
          <target state="translated">密码文本和初始化向量是base64编码的,并返回给你。</target>
        </trans-unit>
        <trans-unit id="b673759369e7231ead32eb00ab425afce042f51f" translate="yes" xml:space="preserve">
          <source>The class &lt;code&gt;DateTime&lt;/code&gt; is a subclass of &lt;code&gt;Date&lt;/code&gt; so by loading &lt;code&gt;active_support/core_ext/date/calculations.rb&lt;/code&gt; you inherit these methods and their aliases, except that they will always return datetimes.</source>
          <target state="translated">类 &lt;code&gt;DateTime&lt;/code&gt; 是的子类， &lt;code&gt;Date&lt;/code&gt; ，以便通过加载 &lt;code&gt;active_support/core_ext/date/calculations.rb&lt;/code&gt; 你继承这些方法和它们的别名，但他们总是返回日期时间。</target>
        </trans-unit>
        <trans-unit id="6968c660131cb878dd7653f49687204b7db61a98" translate="yes" xml:space="preserve">
          <source>The class &lt;strong&gt;is&lt;/strong&gt; defined in &lt;code&gt;Rack::Server&lt;/code&gt;, but is overwritten in &lt;code&gt;Rails::Server&lt;/code&gt; to take different arguments. Its &lt;code&gt;parse!&lt;/code&gt; method looks like this:</source>
          <target state="translated">该类&lt;strong&gt;被&lt;/strong&gt;定义 &lt;code&gt;Rack::Server&lt;/code&gt; ，但在被覆盖 &lt;code&gt;Rails::Server&lt;/code&gt; 采取不同的参数。它的 &lt;code&gt;parse!&lt;/code&gt; 方法看起来像这样：</target>
        </trans-unit>
        <trans-unit id="2d9472e83f43b35d872e4a578ebf8461fa5e4488" translate="yes" xml:space="preserve">
          <source>The class object following a &lt;code&gt;class&lt;/code&gt; keyword gets pushed when its body is executed, and popped after it.</source>
          <target state="translated">执行 &lt;code&gt;class&lt;/code&gt; 关键字之后的class对象在执行其主体时会被推送，并在其后弹出。</target>
        </trans-unit>
        <trans-unit id="af86f952fa9511ca82932ee1393dc187d0ec2258" translate="yes" xml:space="preserve">
          <source>The class of the object that will be serialized.</source>
          <target state="translated">将被序列化的对象的类。</target>
        </trans-unit>
        <trans-unit id="55a3142b2051edb930ee46b026db101e1fddf3f3" translate="yes" xml:space="preserve">
          <source>The code evaluating &lt;code&gt;Hotel::Image&lt;/code&gt; needs to make sure &lt;code&gt;app/models/hotel/image.rb&lt;/code&gt; has been loaded, possibly with &lt;code&gt;require_dependency&lt;/code&gt;.</source>
          <target state="translated">评估 &lt;code&gt;Hotel::Image&lt;/code&gt; 的代码需要确保已加载 &lt;code&gt;app/models/hotel/image.rb&lt;/code&gt; ，并可能带有 &lt;code&gt;require_dependency&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f2abcc6222e668f83e74fb7940530a8065dda4e1" translate="yes" xml:space="preserve">
          <source>The code executed within &lt;code&gt;after_commit&lt;/code&gt; or &lt;code&gt;after_rollback&lt;/code&gt; callbacks is itself not enclosed within a transaction.</source>
          <target state="translated">在 &lt;code&gt;after_commit&lt;/code&gt; 或 &lt;code&gt;after_rollback&lt;/code&gt; 回调中执行的代码本身未包含在事务中。</target>
        </trans-unit>
        <trans-unit id="d8f19278505fd168de6c555f502a1dfd0b17e712" translate="yes" xml:space="preserve">
          <source>The code is equivalent to:</source>
          <target state="translated">该代码相当于:</target>
        </trans-unit>
        <trans-unit id="b0315c0a4d2c5d7db5ad3c357745a96d7a8f7a40" translate="yes" xml:space="preserve">
          <source>The coder</source>
          <target state="translated">编码员</target>
        </trans-unit>
        <trans-unit id="9d50665bddf50354931c2dafee55e08156cf93ff" translate="yes" xml:space="preserve">
          <source>The collection of join models can be managed via the &lt;a href=&quot;#has-many-association-reference&quot;&gt;&lt;code&gt;has_many&lt;/code&gt; association methods&lt;/a&gt;. For example, if you assign:</source>
          <target state="translated">可以通过&lt;a href=&quot;#has-many-association-reference&quot;&gt; &lt;code&gt;has_many&lt;/code&gt; 关联方法&lt;/a&gt;来管理联接模型的集合。例如，如果您分配：</target>
        </trans-unit>
        <trans-unit id="ffc68b1561cf18b53a6825ca34ebd3013c124934" translate="yes" xml:space="preserve">
          <source>The collection proxy returned by &lt;code&gt;blog.posts&lt;/code&gt; is built from a &lt;code&gt;:has_many&lt;/code&gt;&lt;code&gt;association&lt;/code&gt;, and delegates to a collection of posts as the &lt;code&gt;target&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;blog.posts&lt;/code&gt; 返回的集合代理是通过 &lt;code&gt;:has_many&lt;/code&gt; &lt;code&gt;association&lt;/code&gt; 构建的，并委托给 &lt;code&gt;target&lt;/code&gt; 集合作为帖子。</target>
        </trans-unit>
        <trans-unit id="6182787d0262c6c7b1359fe37e373545a1c0bed3" translate="yes" xml:space="preserve">
          <source>The command &lt;code&gt;catch exception-name&lt;/code&gt; (or just &lt;code&gt;cat exception-name&lt;/code&gt;) can be used to intercept an exception of type &lt;em&gt;exception-name&lt;/em&gt; when there would otherwise be no handler for it.</source>
          <target state="translated">当没有其他处理程序时，可以使用命令 &lt;code&gt;catch exception-name&lt;/code&gt; （或仅 &lt;code&gt;cat exception-name&lt;/code&gt; ）来拦截类型为&lt;em&gt;exception-name的异常&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="80da790259c679e4e01e02f3c1ec2a6cdb498e07" translate="yes" xml:space="preserve">
          <source>The command also generates a &lt;code&gt;.sprockets-manifest-randomhex.json&lt;/code&gt; (where &lt;code&gt;randomhex&lt;/code&gt; is a 16-byte random hex string) that contains a list with all your assets and their respective fingerprints. This is used by the Rails helper methods to avoid handing the mapping requests back to Sprockets. A typical manifest file looks like:</source>
          <target state="translated">该命令还会生成一个 &lt;code&gt;.sprockets-manifest-randomhex.json&lt;/code&gt; （其中 &lt;code&gt;randomhex&lt;/code&gt; 是16字节随机十六进制字符串），其中包含一个列表，其中包含您的所有资产及其各自的指纹。Rails的辅助方法使用它来避免将映射请求传递回Sprockets。典型的清单文件如下所示：</target>
        </trans-unit>
        <trans-unit id="bc549bd20274f0695384007247bbbda10162ffc6" translate="yes" xml:space="preserve">
          <source>The command is:</source>
          <target state="translated">命令是:</target>
        </trans-unit>
        <trans-unit id="fa70b028a21d0022e10ac55779cf6987002c2c13" translate="yes" xml:space="preserve">
          <source>The command line arguments are accessed through the &lt;code&gt;options&lt;/code&gt; method inside the generator class. e.g:</source>
          <target state="translated">命令行参数是通过generator类中的 &lt;code&gt;options&lt;/code&gt; 方法访问的。例如：</target>
        </trans-unit>
        <trans-unit id="d2883a7196ed191d0b1930e857380aaceb624c12" translate="yes" xml:space="preserve">
          <source>The comments resource here will have the following routes generated for it:</source>
          <target state="translated">这里的评论资源将有以下路径为其生成。</target>
        </trans-unit>
        <trans-unit id="1ca196984fa3076e444df6fe8fba096623852a03" translate="yes" xml:space="preserve">
          <source>The common admin interface works like this: it's located at &lt;a href=&quot;http://www.example.com/admin&quot;&gt;www.example.com/admin&lt;/a&gt;, may be accessed only if the admin flag is set in the User model, re-displays user input and allows the admin to delete/add/edit whatever data desired. Here are some thoughts about this:</source>
          <target state="translated">通用管理界面的工作方式如下：它位于&lt;a href=&quot;http://www.example.com/admin&quot;&gt;www.example.com/admin&lt;/a&gt;，只有在用户模型中设置了admin标志，重新显示用户输入并允许管理员删除/添加/编辑任何内容时，才可以访问所需数据。这里有一些想法：</target>
        </trans-unit>
        <trans-unit id="cbc2f83d5a1ad109565a4d74b0b6682016333b02" translate="yes" xml:space="preserve">
          <source>The complete &lt;code&gt;ArticlesController&lt;/code&gt; in the &lt;code&gt;app/controllers/articles_controller.rb&lt;/code&gt; file should now look like this:</source>
          <target state="translated">完整 &lt;code&gt;ArticlesController&lt;/code&gt; 在 &lt;code&gt;app/controllers/articles_controller.rb&lt;/code&gt; 文件现在应该是这样的：</target>
        </trans-unit>
        <trans-unit id="99863ff5886b28045cd1462c63f145b1dd9d863d" translate="yes" xml:space="preserve">
          <source>The complete key</source>
          <target state="translated">完整的钥匙</target>
        </trans-unit>
        <trans-unit id="e53929ec98b2233f0d54281d4c3c091285f783c3" translate="yes" xml:space="preserve">
          <source>The complete path</source>
          <target state="translated">完整的路径</target>
        </trans-unit>
        <trans-unit id="1c27854a720a25987ef08e89474e0a1a6ecf7142" translate="yes" xml:space="preserve">
          <source>The compressor config settings for CSS and JavaScript also take any object. This object must have a &lt;code&gt;compress&lt;/code&gt; method that takes a string as the sole argument and it must return a string.</source>
          <target state="translated">CSS和JavaScript的压缩器配置设置也可以使用任何对象。该对象必须具有将字符串作为唯一参数的 &lt;code&gt;compress&lt;/code&gt; 方法，并且必须返回字符串。</target>
        </trans-unit>
        <trans-unit id="ba08f59113b11226b0617d5a0de72beaf8f9a124" translate="yes" xml:space="preserve">
          <source>The concept of sessions in Rails, what to put in there and popular attack methods.</source>
          <target state="translated">Rails中session的概念,放什么在里面以及流行的攻击方法。</target>
        </trans-unit>
        <trans-unit id="d5de646b54e2f7c5029b74a8b4e4fa98d6731e57" translate="yes" xml:space="preserve">
          <source>The concepts of database migrations, validations, and callbacks.</source>
          <target state="translated">数据库迁移、验证和回调的概念。</target>
        </trans-unit>
        <trans-unit id="0aac594320228947fb8fa734325687d3f3454def" translate="yes" xml:space="preserve">
          <source>The concern object, if supplied, should respond to &lt;code&gt;call&lt;/code&gt;, which will receive two parameters:</source>
          <target state="translated">关注对象（如果提供）应该响应 &lt;code&gt;call&lt;/code&gt; ，它将接收两个参数：</target>
        </trans-unit>
        <trans-unit id="a63f0d5d4473dcccd1b3ca31ae61a55113c2a709" translate="yes" xml:space="preserve">
          <source>The console autoloads, the test suite autoloads, and of course the application autoloads.</source>
          <target state="translated">控制台自动加载,测试套件自动加载,当然还有应用程序自动加载。</target>
        </trans-unit>
        <trans-unit id="aabbadbe522f11b3d0d499a83d76f7386f175280" translate="yes" xml:space="preserve">
          <source>The console executes pure Ruby code: You can define and instantiate custom classes, create new models, and inspect variables.</source>
          <target state="translated">控制台执行纯Ruby代码。你可以定义和实例化自定义类,创建新的模型,并检查变量。</target>
        </trans-unit>
        <trans-unit id="7220a786640255689868500968affcdf580ec6d9" translate="yes" xml:space="preserve">
          <source>The constant &lt;code&gt;A&lt;/code&gt; may no longer exist, some code could have removed it from &lt;code&gt;Object&lt;/code&gt;.</source>
          <target state="translated">常数 &lt;code&gt;A&lt;/code&gt; 可能不再存在，某些代码可能已将其从 &lt;code&gt;Object&lt;/code&gt; 中删除。</target>
        </trans-unit>
        <trans-unit id="1b63f60bb1f9563c7247d9bacbad6fe17817b660" translate="yes" xml:space="preserve">
          <source>The constant WidgetsController can be resolved from the name. The following code will resolve the constant:</source>
          <target state="translated">常量WidgetsController可以从名称中解析出来。下面的代码将解析该常量。</target>
        </trans-unit>
        <trans-unit id="674c1279d8b2dacd6774e80d3eac1f6f865f5df4" translate="yes" xml:space="preserve">
          <source>The constant is looked up in the parent and its ancestors. In Ruby &amp;gt;= 2.5, &lt;code&gt;Object&lt;/code&gt; is skipped if present among the ancestors. &lt;code&gt;Kernel&lt;/code&gt; and &lt;code&gt;BasicObject&lt;/code&gt; are still checked though.</source>
          <target state="translated">在父级及其祖先中查找常量。在Ruby&amp;gt; = 2.5中，如果祖先之间存在 &lt;code&gt;Object&lt;/code&gt; ，则将跳过Object。虽然仍然检查 &lt;code&gt;Kernel&lt;/code&gt; 和 &lt;code&gt;BasicObject&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="082b680fd1c3b37550d012a6b71e24a4e0b9e577" translate="yes" xml:space="preserve">
          <source>The constraint name. Defaults to &lt;code&gt;fk_rails_&amp;lt;identifier&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">约束名称。默认为 &lt;code&gt;fk_rails_&amp;lt;identifier&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a2e3639f8fef012d7a8c083c1d6181192ee280b5" translate="yes" xml:space="preserve">
          <source>The consumer can optionally take an argument that specifies the URL to connect to. This can be a string, or a function that returns a string that will be called when the WebSocket is opened.</source>
          <target state="translated">消费者可以选择接受一个指定要连接的 URL 的参数。这可以是一个字符串,也可以是一个返回将在 WebSocket 打开时调用的字符串的函数。</target>
        </trans-unit>
        <trans-unit id="20f6ba7495c1ca28ab054f3520e5fac50e367c5d" translate="yes" xml:space="preserve">
          <source>The content type of the response.</source>
          <target state="translated">响应的内容类型。</target>
        </trans-unit>
        <trans-unit id="e5c334ab1d810760f26bd9954ec98a6cbf41eef3" translate="yes" xml:space="preserve">
          <source>The content type requested by the client.</source>
          <target state="translated">客户端要求的内容类型。</target>
        </trans-unit>
        <trans-unit id="6e881217ecc3145c8db968851552e51cd8f45bf0" translate="yes" xml:space="preserve">
          <source>The contents of the block, and therefore the string interpolation, are only evaluated if debug is enabled. This performance savings are only really noticeable with large amounts of logging, but it's a good practice to employ.</source>
          <target state="translated">块的内容,以及字符串插值,只有在启用调试时才会被评估。这种性能上的节省只有在大量的日志记录时才会真正明显,但这是一个很好的做法。</target>
        </trans-unit>
        <trans-unit id="7d621c311adb11f8027c2dcc7b29dc66f7c07bdd" translate="yes" xml:space="preserve">
          <source>The contents of the nonce are implementation dependent. The quality of the implementation depends on a good choice. A nonce might, for example, be constructed as the base 64 encoding of</source>
          <target state="translated">nonce的内容取决于实现。实现的质量取决于一个好的选择。例如,一个nonce可以被构造为以下的基数64编码</target>
        </trans-unit>
        <trans-unit id="79cd1b7501b6b6f01a8ed691037aa929e5a70570" translate="yes" xml:space="preserve">
          <source>The controller generator is expecting parameters in the form of &lt;code&gt;generate controller ControllerName action1 action2&lt;/code&gt;. Let's make a &lt;code&gt;Greetings&lt;/code&gt; controller with an action of &lt;strong&gt;hello&lt;/strong&gt;, which will say something nice to us.</source>
          <target state="translated">控制器生成器期望 &lt;code&gt;generate controller ControllerName action1 action2&lt;/code&gt; 形式的参数。让我们用&lt;strong&gt;hello&lt;/strong&gt;动作创建一个 &lt;code&gt;Greetings&lt;/code&gt; 控制器，它会对我们说些好话。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f8e08338cd0b1efee95e6b15a145de00ca8c2592" translate="yes" xml:space="preserve">
          <source>The controller generator will then try to invoke the following generators:</source>
          <target state="translated">然后,控制器生成器将尝试调用以下生成器。</target>
        </trans-unit>
        <trans-unit id="04cae75b5b556346c3da0fc2b55f4f5406e79d74" translate="yes" xml:space="preserve">
          <source>The controller instance that will be tested.</source>
          <target state="translated">要测试的控制器实例。</target>
        </trans-unit>
        <trans-unit id="ba4e4a23e337dd486854ab7fd4de7b5b21c9ce42" translate="yes" xml:space="preserve">
          <source>The controller name</source>
          <target state="translated">控制器名称</target>
        </trans-unit>
        <trans-unit id="52b3d62a80b893c0af96954722743dc733ac244f" translate="yes" xml:space="preserve">
          <source>The controller naming convention differs from the naming convention of models, which are expected to be named in singular form.</source>
          <target state="translated">控制器的命名惯例与模型的命名惯例不同,模型的命名要采用单数形式。</target>
        </trans-unit>
        <trans-unit id="a90a98546ad209e6f30fc6ff251c11291addd85d" translate="yes" xml:space="preserve">
          <source>The controller specifies a form builder as its default:</source>
          <target state="translated">控制器指定一个表单构建器作为其默认值。</target>
        </trans-unit>
        <trans-unit id="7be5224e20df3dc10e5cf3e8d85eaa5d4b308f70" translate="yes" xml:space="preserve">
          <source>The controller would receive the form data again in &lt;code&gt;params[:person]&lt;/code&gt;, ready to be passed to &lt;code&gt;Person#update&lt;/code&gt;:</source>
          <target state="translated">控制器将再次在 &lt;code&gt;params[:person]&lt;/code&gt; 接收表单数据，准备将其传递给 &lt;code&gt;Person#update&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="e93c04fcb7f426a21bc3c650cf6a666d160cdd94" translate="yes" xml:space="preserve">
          <source>The cookie is then automatically sent to the connection instance when a new connection is attempted, and you use that to set the &lt;code&gt;current_user&lt;/code&gt;. By identifying the connection by this same current user, you're also ensuring that you can later retrieve all open connections by a given user (and potentially disconnect them all if the user is deleted or unauthorized).</source>
          <target state="translated">然后，当尝试建立新的连接时，该cookie会自动发送到该连接实例，您可以使用它来设置 &lt;code&gt;current_user&lt;/code&gt; 。通过标识同一位当前用户的连接，您还可以确保以后可以检索给定用户的所有打开的连接（如果删除或未授权用户，则有可能断开所有连接）。</target>
        </trans-unit>
        <trans-unit id="3b978663c88fcd057d23578b5892ec1015819225" translate="yes" xml:space="preserve">
          <source>The cookie jar used for storage is automatically configured to be the best possible option given your application's configuration.</source>
          <target state="translated">用于存储的cookie jar会自动配置为给定你的应用程序配置的最佳选项。</target>
        </trans-unit>
        <trans-unit id="a1a69e495ad347de251d66e9dc711b0b85146a28" translate="yes" xml:space="preserve">
          <source>The cookies being read are the ones received along with the request, the cookies being written will be sent out with the response. Reading a cookie does not get the cookie object itself back, just the value it holds.</source>
          <target state="translated">读取的cookie是和请求一起收到的,写入的cookie将和响应一起发送出去。读取cookie不会得到cookie对象本身,只是得到它所持有的值。</target>
        </trans-unit>
        <trans-unit id="d2ec0a6c857355d2a77edc69892b6454accdc087" translate="yes" xml:space="preserve">
          <source>The cookies of the request that initiated the WebSocket connection. Useful for performing authorization checks.</source>
          <target state="translated">启动 WebSocket 连接的请求的 Cookie。用于执行授权检查。</target>
        </trans-unit>
        <trans-unit id="d24e6f7bfad20509e5ec611cc5185e0596d388f6" translate="yes" xml:space="preserve">
          <source>The core features of Active Storage require the following permissions: &lt;code&gt;s3:ListBucket&lt;/code&gt;, &lt;code&gt;s3:PutObject&lt;/code&gt;, &lt;code&gt;s3:GetObject&lt;/code&gt;, and &lt;code&gt;s3:DeleteObject&lt;/code&gt;. If you have additional upload options configured such as setting ACLs then additional permissions may be required.</source>
          <target state="translated">Active Storage的核心功能需要以下权限： &lt;code&gt;s3:ListBucket&lt;/code&gt; ， &lt;code&gt;s3:PutObject&lt;/code&gt; ， &lt;code&gt;s3:GetObject&lt;/code&gt; 和 &lt;code&gt;s3:DeleteObject&lt;/code&gt; 。如果您配置了其他上传选项（例如设置ACL），则可能需要其他权限。</target>
        </trans-unit>
        <trans-unit id="89dba8ea66f6ccf7268e1acbe6bfce7be69806f0" translate="yes" xml:space="preserve">
          <source>The core method of this helper, &lt;code&gt;form_for&lt;/code&gt;, gives you the ability to create a form for a model instance; for example, let's say that you have a model Person and want to create a new instance of it:</source>
          <target state="translated">该帮助程序的核心方法 &lt;code&gt;form_for&lt;/code&gt; ，使您能够为模型实例创建表单。例如，假设您有一个模型Person并想为其创建一个新实例：</target>
        </trans-unit>
        <trans-unit id="22182258bb24434e2f5ce14455e2da22cd0f35b3" translate="yes" xml:space="preserve">
          <source>The corresponding migration might look like this:</source>
          <target state="translated">相应的迁移可能是这样的。</target>
        </trans-unit>
        <trans-unit id="5e2f3e193087bef642d879558a359d9a7d2b3b7c" translate="yes" xml:space="preserve">
          <source>The corresponding route helper would be &lt;code&gt;publisher_magazine_photo_url&lt;/code&gt;, requiring you to specify objects at all three levels. Indeed, this situation is confusing enough that a popular &lt;a href=&quot;http://weblog.jamisbuck.org/2007/2/5/nesting-resources&quot;&gt;article&lt;/a&gt; by Jamis Buck proposes a rule of thumb for good Rails design:</source>
          <target state="translated">相应的路由帮助程序将是 &lt;code&gt;publisher_magazine_photo_url&lt;/code&gt; ，要求您在所有三个级别上指定对象。的确，这种情况令人困惑，贾米斯&amp;middot;巴克（Jamis Buck）的一则热门&lt;a href=&quot;http://weblog.jamisbuck.org/2007/2/5/nesting-resources&quot;&gt;文章&lt;/a&gt;提出了关于好的Rails设计的经验法则：</target>
        </trans-unit>
        <trans-unit id="d600c0a250e0928ac6de22ac20a4fbd9eca881c9" translate="yes" xml:space="preserve">
          <source>The corresponding view &lt;code&gt;app/views/articles/new.html.erb&lt;/code&gt; using &lt;code&gt;form_with&lt;/code&gt; looks like this:</source>
          <target state="translated">使用 &lt;code&gt;form_with&lt;/code&gt; 的相应视图 &lt;code&gt;app/views/articles/new.html.erb&lt;/code&gt; 如下所示：</target>
        </trans-unit>
        <trans-unit id="6a577608768a71c2c08295f75630ffb78a1a65cf" translate="yes" xml:space="preserve">
          <source>The currency unit and number formatting of the current locale will be used unless otherwise specified in the provided options. No currency conversion is performed. If the user is given a way to change their locale, they will also be able to change the relative value of the currency displayed with this helper. If your application will ever support multiple locales, you may want to specify a constant &lt;code&gt;:locale&lt;/code&gt; option or consider using a library capable of currency conversion.</source>
          <target state="translated">除非提供的选项中另有指定，否则将使用当前语言环境的货币单位和数字格式。不执行货币换算。如果为用户提供了一种更改其语言环境的方法，则他们也将能够更改与此助手一起显示的货币的相对价值。如果您的应用程序将支持多种语言环境，则可能需要指定一个常量 &lt;code&gt;:locale&lt;/code&gt; 选项或考虑使用能够进行货币转换的库。</target>
        </trans-unit>
        <trans-unit id="88858758e548e1fb8c2e4b0554808d46b298c330" translate="yes" xml:space="preserve">
          <source>The current frame is marked with &lt;code&gt;--&amp;gt;&lt;/code&gt;. You can move anywhere you want in this trace (thus changing the context) by using the &lt;code&gt;frame n&lt;/code&gt; command, where &lt;em&gt;n&lt;/em&gt; is the specified frame number. If you do that, &lt;code&gt;byebug&lt;/code&gt; will display your new context.</source>
          <target state="translated">当前帧用 &lt;code&gt;--&amp;gt;&lt;/code&gt; 标记。您可以使用 &lt;code&gt;frame n&lt;/code&gt; 命令移动此跟踪中所需的任何位置（从而更改上下文），其中&lt;em&gt;n&lt;/em&gt;是指定的帧号。如果这样做， &lt;code&gt;byebug&lt;/code&gt; 将显示您的新上下文。</target>
        </trans-unit>
        <trans-unit id="de70478027d378d1cfe8224088c01c2644f724e1" translate="yes" xml:space="preserve">
          <source>The current iteration of the partial.</source>
          <target state="translated">当前迭代的局部。</target>
        </trans-unit>
        <trans-unit id="6268442757ea009174f8acb5e84aea3dd8362229" translate="yes" xml:space="preserve">
          <source>The current object being rendered, as well as the object_counter, will be available as local variables inside the layout template under the same names as available in the partial.</source>
          <target state="translated">当前正在渲染的对象以及object_counter将作为布局模板内的局部变量,其名称与局部变量相同。</target>
        </trans-unit>
        <trans-unit id="092a267cca37a3c80e64302819266668fd7ce2e6" translate="yes" xml:space="preserve">
          <source>The current release series and the next most recent one will receive patches and new versions in case of a security issue.</source>
          <target state="translated">当前发布的系列版本和下一个最新版本会在出现安全问题时收到补丁和新版本。</target>
        </trans-unit>
        <trans-unit id="37fe7ad050bfe08450ff7b69abfaee12f63ea922" translate="yes" xml:space="preserve">
          <source>The custom &lt;a href=&quot;formbuilder&quot;&gt;FormBuilder&lt;/a&gt; class is automatically merged with the options of a nested &lt;a href=&quot;formhelper#method-i-fields_for&quot;&gt;#fields_for&lt;/a&gt; call, unless it's explicitly set.</source>
          <target state="translated">除非显式设置，否则自定义&lt;a href=&quot;formbuilder&quot;&gt;FormBuilder&lt;/a&gt;类将自动与嵌套的&lt;a href=&quot;formhelper#method-i-fields_for&quot;&gt;#fields_for&lt;/a&gt;调用的选项合并。</target>
        </trans-unit>
        <trans-unit id="680d7ec1de33e8fa716b48ba4e0e304e4df83a85" translate="yes" xml:space="preserve">
          <source>The custom &lt;a href=&quot;formbuilder&quot;&gt;FormBuilder&lt;/a&gt; class is automatically merged with the options of a nested &lt;code&gt;fields&lt;/code&gt; call, unless it's explicitly set.</source>
          <target state="translated">除非显式设置，否则自定义&lt;a href=&quot;formbuilder&quot;&gt;FormBuilder&lt;/a&gt;类将自动与嵌套 &lt;code&gt;fields&lt;/code&gt; 调用的选项合并。</target>
        </trans-unit>
        <trans-unit id="49271f8c4deb70ba6d14f37c6d32084ffa8bbedf" translate="yes" xml:space="preserve">
          <source>The customer class now has the following methods to manipulate the value objects:</source>
          <target state="translated">客户类现在有以下方法来操作值对象。</target>
        </trans-unit>
        <trans-unit id="eb5d4b3c92a99df5c5226c0136446a9d44e487fa" translate="yes" xml:space="preserve">
          <source>The debugger can also help you if you want to learn about the Rails source code but don't know where to start. Just debug any request to your application and use this guide to learn how to move from the code you have written into the underlying Rails code.</source>
          <target state="translated">如果你想了解Rails源代码,但不知道从哪里开始,调试器也可以帮助你。只需调试任何对你的应用程序的请求,并使用本指南来学习如何从你写的代码转移到底层Rails代码中。</target>
        </trans-unit>
        <trans-unit id="b5935b676f3b260677cf3404e8139a226e615c40" translate="yes" xml:space="preserve">
          <source>The debugger can list, stop, resume, and switch between running threads by using the &lt;code&gt;thread&lt;/code&gt; command (or the abbreviated &lt;code&gt;th&lt;/code&gt;). This command has a handful of options:</source>
          <target state="translated">调试器可以使用 &lt;code&gt;thread&lt;/code&gt; 命令（或缩写为 &lt;code&gt;th&lt;/code&gt; ）列出，停止，恢复和在正在运行的线程之间切换。此命令有几个选项：</target>
        </trans-unit>
        <trans-unit id="40c1b56945614754ba8bcd9b896199640af123be" translate="yes" xml:space="preserve">
          <source>The debugger creates a context when a stopping point or an event is reached. The context has information about the suspended program which enables the debugger to inspect the frame stack, evaluate variables from the perspective of the debugged program, and know the place where the debugged program is stopped.</source>
          <target state="translated">当达到一个停止点或事件时,调试器会创建一个上下文。该上下文有关于暂停程序的信息,使调试器能够检查帧栈,从被调试程序的角度评估变量,并知道被调试程序停止的地方。</target>
        </trans-unit>
        <trans-unit id="21886789df11ea9338c71bc1e713dc0ce0b78495" translate="yes" xml:space="preserve">
          <source>The declaration can also include an &lt;code&gt;options&lt;/code&gt; hash to specialize the behavior of the association.</source>
          <target state="translated">该声明还可以包含一个 &lt;code&gt;options&lt;/code&gt; 哈希，以专门化关联的行为。</target>
        </trans-unit>
        <trans-unit id="49199abadcd9f974ed88dc3d7ccd19edc4680383" translate="yes" xml:space="preserve">
          <source>The declaration may include an &lt;code&gt;options&lt;/code&gt; hash to specialize the behavior of the association.</source>
          <target state="translated">该声明可以包括一个 &lt;code&gt;options&lt;/code&gt; 哈希，以专门化关联的行为。</target>
        </trans-unit>
        <trans-unit id="2ab15d11218b04ab1e55edd9e2351474404876f9" translate="yes" xml:space="preserve">
          <source>The default &lt;a href=&quot;api&quot;&gt;API&lt;/a&gt; Controller stack includes all renderers, which means you can use &lt;code&gt;render :json&lt;/code&gt; and brothers freely in your controllers. Keep in mind that templates are not going to be rendered, so you need to ensure your controller is calling either &lt;code&gt;render&lt;/code&gt; or &lt;code&gt;redirect_to&lt;/code&gt; in all actions, otherwise it will return 204 No Content.</source>
          <target state="translated">默认的&lt;a href=&quot;api&quot;&gt;API&lt;/a&gt; Controller堆栈包括所有渲染器，这意味着您可以在控制器中自由使用 &lt;code&gt;render :json&lt;/code&gt; 和brothers。请记住，将不会渲染模板，因此您需要确保控制器在所有操作中都调用 &lt;code&gt;render&lt;/code&gt; 或 &lt;code&gt;redirect_to&lt;/code&gt; ，否则它将返回204 No Content。</target>
        </trans-unit>
        <trans-unit id="dc90e3304a747d9958eb86ef66ce3055efc93b4d" translate="yes" xml:space="preserve">
          <source>The default &lt;a href=&quot;chars&quot;&gt;Chars&lt;/a&gt; implementation assumes that the encoding of the string is UTF-8, if you want to handle different encodings you can write your own multibyte string handler and configure it through &lt;a href=&quot;../multibyte#method-c-proxy_class&quot;&gt;ActiveSupport::Multibyte.proxy_class&lt;/a&gt;.</source>
          <target state="translated">默认的&lt;a href=&quot;chars&quot;&gt;Chars&lt;/a&gt;实现假定字符串的编码为UTF-8，如果要处理不同的编码，则可以编写自己的多字节字符串处理程序，并通过&lt;a href=&quot;../multibyte#method-c-proxy_class&quot;&gt;ActiveSupport :: Multibyte.proxy_class&lt;/a&gt;对其进行配置。</target>
        </trans-unit>
        <trans-unit id="b0d39dd78e8545ab21333b000c8adbc3abe6b759" translate="yes" xml:space="preserve">
          <source>The default &lt;a href=&quot;connectionpool&quot;&gt;ConnectionPool&lt;/a&gt; maximum size is 5.</source>
          <target state="translated">默认的&lt;a href=&quot;connectionpool&quot;&gt;ConnectionPool&lt;/a&gt;最大大小为5。</target>
        </trans-unit>
        <trans-unit id="417f6a3218aa19f90d2676b492b9137303dbd659" translate="yes" xml:space="preserve">
          <source>The default &lt;code&gt;en.yml&lt;/code&gt; locale in this directory contains a sample pair of translation strings:</source>
          <target state="translated">此目录中的默认 &lt;code&gt;en.yml&lt;/code&gt; 语言环境包含一对翻译字符串示例：</target>
        </trans-unit>
        <trans-unit id="b0d259d82af709edf493880239feb894d39f182f" translate="yes" xml:space="preserve">
          <source>The default Content-Type and Content-Disposition headers are set to download arbitrary binary files in as many browsers as possible. IE versions 4, 5, 5.5, and 6 are all known to have a variety of quirks (especially when downloading over SSL).</source>
          <target state="translated">默认的Content-Type和Content-Disposition头的设置是为了在尽可能多的浏览器中下载任意的二进制文件。众所周知,IE 4、5、5.5和6版本都有各种怪癖(特别是在通过SSL下载时)。</target>
        </trans-unit>
        <trans-unit id="db07404c73b8a2a45b04e8b6ffb034a810331405" translate="yes" xml:space="preserve">
          <source>The default Rails log level is &lt;code&gt;debug&lt;/code&gt; in all environments.</source>
          <target state="translated">在所有环境中，默认的Rails日志级别均为 &lt;code&gt;debug&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="38a0c4e49d718aec7078c57bc4c8099a64d09f22" translate="yes" xml:space="preserve">
          <source>The default XML builder is a fresh instance of &lt;code&gt;Builder::XmlMarkup&lt;/code&gt;. You can configure your own builder via the &lt;code&gt;:builder&lt;/code&gt; option. The method also accepts options like &lt;code&gt;:dasherize&lt;/code&gt; and friends, they are forwarded to the builder:</source>
          <target state="translated">默认的XML构建器是 &lt;code&gt;Builder::XmlMarkup&lt;/code&gt; 的新实例。您可以通过 &lt;code&gt;:builder&lt;/code&gt; 选项配置自己的构建器。该方法还接受 &lt;code&gt;:dasherize&lt;/code&gt; 和friends之类的选项，它们会转发给构建器：</target>
        </trans-unit>
        <trans-unit id="4ff911b45d3f05d4d40816676a3ed43ffe82d1a8" translate="yes" xml:space="preserve">
          <source>The default XML builder is a fresh instance of &lt;code&gt;Builder::XmlMarkup&lt;/code&gt;. You can configure your own builder with the &lt;code&gt;:builder&lt;/code&gt; option. The method also accepts options like &lt;code&gt;:dasherize&lt;/code&gt; and friends, they are forwarded to the builder.</source>
          <target state="translated">默认的XML构建器是 &lt;code&gt;Builder::XmlMarkup&lt;/code&gt; 的新实例。您可以使用 &lt;code&gt;:builder&lt;/code&gt; 选项配置自己的生成器。该方法还接受 &lt;code&gt;:dasherize&lt;/code&gt; 和friends之类的选项，它们会转发给构建器。</target>
        </trans-unit>
        <trans-unit id="fdfbcaff28aa74fc6b3972d42c3a0b707432a40f" translate="yes" xml:space="preserve">
          <source>The default behavior can be changed by setting the config options to a custom class:</source>
          <target state="translated">可以通过将配置选项设置为自定义类来改变默认行为。</target>
        </trans-unit>
        <trans-unit id="964deb4deb137c72b1a8c946cd6ea798ee2b77c0" translate="yes" xml:space="preserve">
          <source>The default configuration for Rails 6</source>
          <target state="translated">Rails 6的默认配置</target>
        </trans-unit>
        <trans-unit id="e5118e78e0f72e8d201c79ffa5ee19f3bb74d601" translate="yes" xml:space="preserve">
          <source>The default confirmation uses a JavaScript confirm dialog, but you can customize this by listening to the &lt;code&gt;confirm&lt;/code&gt; event, which is fired just before the confirmation window appears to the user. To cancel this default confirmation, have the confirm handler to return &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">默认确认使用JavaScript确认对话框，但是您可以通过侦听 &lt;code&gt;confirm&lt;/code&gt; 事件来自定义该事件，该事件在确认窗口出现在用户面前之前触发。要取消此默认确认，请使Confirm处理程序返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6bbe748864f65ace153e63b32d9fb9aae5ccc443" translate="yes" xml:space="preserve">
          <source>The default error message for &lt;code&gt;validates_associated&lt;/code&gt; is &lt;em&gt;&quot;is invalid&quot;&lt;/em&gt;. Note that each associated object will contain its own &lt;code&gt;errors&lt;/code&gt; collection; errors do not bubble up to the calling model.</source>
          <target state="translated">&lt;code&gt;validates_associated&lt;/code&gt; 的默认错误消息是&lt;em&gt;&amp;ldquo;无效&amp;rdquo;&lt;/em&gt;。请注意，每个关联的对象将包含其自己的 &lt;code&gt;errors&lt;/code&gt; 集合；错误不会上升到调用模型。</target>
        </trans-unit>
        <trans-unit id="867423ae48db625181e81d46b4c69e62f28c825d" translate="yes" xml:space="preserve">
          <source>The default error message for this helper is &lt;em&gt;&quot;doesn't match confirmation&quot;&lt;/em&gt;.</source>
          <target state="translated">此帮助程序的默认错误消息是&lt;em&gt;&amp;ldquo;与确认不匹配&amp;rdquo;&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="191962cf0a53a5a6e818b0f1aca5743ac55311d9" translate="yes" xml:space="preserve">
          <source>The default error message for this helper is &lt;em&gt;&quot;is not included in the list&quot;&lt;/em&gt;.</source>
          <target state="translated">此帮助程序的默认错误消息是&lt;em&gt;&amp;ldquo;未包含在列表中&amp;rdquo;&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="c1fb5c5ae103bf01f69e90eaa63675b328ed1a1c" translate="yes" xml:space="preserve">
          <source>The default error message is &lt;em&gt;&quot;has already been taken&quot;&lt;/em&gt;.</source>
          <target state="translated">默认错误消息是&lt;em&gt;&amp;ldquo;已被使用&amp;rdquo;&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="9457ef49196b5a4950348b7a27e4d880cb9c20c8" translate="yes" xml:space="preserve">
          <source>The default error message is &lt;em&gt;&quot;is invalid&quot;&lt;/em&gt;.</source>
          <target state="translated">默认错误消息是&lt;em&gt;&amp;ldquo;无效&amp;rdquo;&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="ba637f7bfb2bf214d7ab58eb7fa9d57e04657f8f" translate="yes" xml:space="preserve">
          <source>The default error message is &lt;em&gt;&quot;is not a number&quot;&lt;/em&gt;.</source>
          <target state="translated">默认错误消息是&lt;em&gt;&amp;ldquo;不是数字&amp;rdquo;&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="9335fb9ba4197c3649d79cacccddab3b123bd729" translate="yes" xml:space="preserve">
          <source>The default error message is &lt;em&gt;&quot;is reserved&quot;&lt;/em&gt;.</source>
          <target state="translated">默认错误消息是&lt;em&gt;&amp;ldquo;保留&amp;rdquo;&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="7f4903f326fc4f8f3dc2774dfae143f7d309b858" translate="yes" xml:space="preserve">
          <source>The default error message is &lt;em&gt;&quot;must be blank&quot;&lt;/em&gt;.</source>
          <target state="translated">默认错误消息是&lt;em&gt;&amp;ldquo;必须为空&amp;rdquo;&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="0e1ac826384501a459391f77dccc506bc756093f" translate="yes" xml:space="preserve">
          <source>The default error messages depend on the type of length validation being performed. You can personalize these messages using the &lt;code&gt;:wrong_length&lt;/code&gt;, &lt;code&gt;:too_long&lt;/code&gt;, and &lt;code&gt;:too_short&lt;/code&gt; options and &lt;code&gt;%{count}&lt;/code&gt; as a placeholder for the number corresponding to the length constraint being used. You can still use the &lt;code&gt;:message&lt;/code&gt; option to specify an error message.</source>
          <target state="translated">默认错误消息取决于所执行的长度验证的类型。您可以使用 &lt;code&gt;:wrong_length&lt;/code&gt; ， &lt;code&gt;:too_long&lt;/code&gt; 和 &lt;code&gt;:too_short&lt;/code&gt; 选项以及 &lt;code&gt;%{count}&lt;/code&gt; 作为与所使用的长度限制相对应的数字的占位符，来个性化这些消息。您仍然可以使用 &lt;code&gt;:message&lt;/code&gt; 选项指定错误消息。</target>
        </trans-unit>
        <trans-unit id="b13f3a7afb4a9725957b1897d9ead715643512bb" translate="yes" xml:space="preserve">
          <source>The default implementation does nothing; the implementation should be overridden by concrete adapters.</source>
          <target state="translated">默认的实现什么都不做,应该由具体的适配器来覆盖实现。</target>
        </trans-unit>
        <trans-unit id="3e74ab6be939a5c78f62ad5e60efb485ede92294" translate="yes" xml:space="preserve">
          <source>The default inheritance column name is &lt;code&gt;type&lt;/code&gt;, which means it's a reserved word inside Active Record. To be able to use single-table inheritance with another column name, or to use the column &lt;code&gt;type&lt;/code&gt; in your own model for something else, you can set &lt;code&gt;inheritance_column&lt;/code&gt;:</source>
          <target state="translated">默认继承列名称为 &lt;code&gt;type&lt;/code&gt; ，这意味着它是Active Record中的保留字。为了能够将单表继承与另一个列名一起使用，或者将自己的模型中的列 &lt;code&gt;type&lt;/code&gt; 用于其他用途，可以设置 &lt;code&gt;inheritance_column&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="5b04d3ac6d07f3c41ce5d77eae396450a01409f4" translate="yes" xml:space="preserve">
          <source>The default is 5 minutes.</source>
          <target state="translated">默认为5分钟。</target>
        </trans-unit>
        <trans-unit id="1b67e281a2d48140c816abd25a470778ff77b5bf" translate="yes" xml:space="preserve">
          <source>The default is &lt;code&gt;/rails/active_storage&lt;/code&gt;.</source>
          <target state="translated">默认值为 &lt;code&gt;/rails/active_storage&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c3000af20082800ed1719b2c75850c9c000fd27e" translate="yes" xml:space="preserve">
          <source>The default locale is used for all translations unless &lt;code&gt;I18n.locale=&lt;/code&gt; or &lt;code&gt;I18n.with_locale&lt;/code&gt; is used.</source>
          <target state="translated">除非使用 &lt;code&gt;I18n.locale=&lt;/code&gt; 或 &lt;code&gt;I18n.with_locale&lt;/code&gt; ,否则所有翻译均使用默认语言环境。</target>
        </trans-unit>
        <trans-unit id="bdea9edbdc10997d0fc7eb472e80325679677f90" translate="yes" xml:space="preserve">
          <source>The default locale loading mechanism in Rails does not load locale files in nested dictionaries, like we have here. So, for this to work, we must explicitly tell Rails to look further:</source>
          <target state="translated">Rails中默认的locale加载机制不会像我们这里一样,加载嵌套字典中的locale文件。因此,要想让这个机制发挥作用,我们必须明确告诉 Rails 进一步查找。</target>
        </trans-unit>
        <trans-unit id="0c2d50ec5de29e7e39e2abf4cdda42eed22420e0" translate="yes" xml:space="preserve">
          <source>The default location for the manifest is the root of the location specified in &lt;code&gt;config.assets.prefix&lt;/code&gt; ('/assets' by default).</source>
          <target state="translated">清单的默认位置是 &lt;code&gt;config.assets.prefix&lt;/code&gt; 中指定的位置的根（默认为'/ assets'）。</target>
        </trans-unit>
        <trans-unit id="f81c8358ebf064bc1b12157c51e2df2cc81232bf" translate="yes" xml:space="preserve">
          <source>The default locations are: the &lt;code&gt;images&lt;/code&gt;, &lt;code&gt;javascripts&lt;/code&gt; and &lt;code&gt;stylesheets&lt;/code&gt; directories under the &lt;code&gt;app/assets&lt;/code&gt; folder, but these subdirectories are not special - any path under &lt;code&gt;assets/*&lt;/code&gt; will be searched.</source>
          <target state="translated">默认位置是： &lt;code&gt;app/assets&lt;/code&gt; 文件夹下的 &lt;code&gt;images&lt;/code&gt; ， &lt;code&gt;javascripts&lt;/code&gt; 和 &lt;code&gt;stylesheets&lt;/code&gt; 目录，但是这些子目录并不特殊- &lt;code&gt;assets/*&lt;/code&gt; 下的任何路径都将被搜索。</target>
        </trans-unit>
        <trans-unit id="1c2b4eace4f7484f211975650ac9a2dae6cb21cb" translate="yes" xml:space="preserve">
          <source>The default mailer queue name is &lt;code&gt;mailers&lt;/code&gt;. This configuration option allows you to globally change the queue name. Set the following in your config:</source>
          <target state="translated">默认邮件队列名称是 &lt;code&gt;mailers&lt;/code&gt; 。此配置选项使您可以全局更改队列名称。在您的配置中设置以下内容：</target>
        </trans-unit>
        <trans-unit id="d40a6c3b3003507f3c7ed2c5fd5c5f76c65efea7" translate="yes" xml:space="preserve">
          <source>The default matcher for compiling files includes &lt;code&gt;application.js&lt;/code&gt;, &lt;code&gt;application.css&lt;/code&gt; and all non-JS/CSS files (this will include all image assets automatically) from &lt;code&gt;app/assets&lt;/code&gt; folders including your gems:</source>
          <target state="translated">编译文件的默认匹配器包括 &lt;code&gt;application.js&lt;/code&gt; &lt;code&gt;app/assets&lt;/code&gt; 文件夹中的application.js， &lt;code&gt;application.css&lt;/code&gt; 和所有非JS / CSS文件（这将自动包括所有图像资产），包括您的gems：</target>
        </trans-unit>
        <trans-unit id="ed073a8405e9ab34fc3dac43c68ab0a495c2a384" translate="yes" xml:space="preserve">
          <source>The default middlewares shown here (and some others) are each summarized in the &lt;a href=&quot;#internal-middleware-stack&quot;&gt;Internal Middlewares&lt;/a&gt; section, below.</source>
          <target state="translated">此处显示的默认中间件（和其他一些中间件）在下面的&lt;a href=&quot;#internal-middleware-stack&quot;&gt;内部中间件&lt;/a&gt;部分中进行了汇总。</target>
        </trans-unit>
        <trans-unit id="8a3c7bfab60bb2a9340081d984047c607d31607f" translate="yes" xml:space="preserve">
          <source>The default normalization used for operations that require normalization. It can be set to any of the normalizations in &lt;a href=&quot;unicode#NORMALIZATION_FORMS&quot;&gt;NORMALIZATION_FORMS&lt;/a&gt;.</source>
          <target state="translated">用于需要规范化的操作的默认规范化。可以将其设置为&lt;a href=&quot;unicode#NORMALIZATION_FORMS&quot;&gt;NORMALIZATION_FORMS中的&lt;/a&gt;任何规范化。</target>
        </trans-unit>
        <trans-unit id="8a301994a79c75534c49b79a61a4664b4e721cdd" translate="yes" xml:space="preserve">
          <source>The default parallelization method is to fork processes using Ruby's DRb system. The processes are forked based on the number of workers provided. The default number is the actual core count on the machine you are on, but can be changed by the number passed to the parallelize method.</source>
          <target state="translated">默认的并行化方法是使用Ruby的DRb系统来分叉进程。进程是根据提供的worker数量进行分叉的,默认的数量是你所在的机器上的实际核心数,但可以通过传递给parallelize方法的数量来改变。默认的数量是你所在机器上的实际核心数,但可以通过传递给并行化方法的数量来改变。</target>
        </trans-unit>
        <trans-unit id="f767b8f5ac6c561f9d1d4776585774fb62693a4e" translate="yes" xml:space="preserve">
          <source>The default parallelization method is to fork processes. If you'd like to use threads instead you can pass &lt;code&gt;with: :threads&lt;/code&gt; to the &lt;code&gt;parallelize&lt;/code&gt; method. Note the threaded parallelization does not create multiple database and will not work with system tests at this time.</source>
          <target state="translated">默认的并行化方法是派生进程。如果您想使用线程，则可以将 &lt;code&gt;with: :threads&lt;/code&gt; 传递给 &lt;code&gt;parallelize&lt;/code&gt; 方法。请注意，线程并行化不会创建多个数据库，并且此时将无法使用系统测试。</target>
        </trans-unit>
        <trans-unit id="1b1d81ea25551b6dbe82955f22e7b61026f6857f" translate="yes" xml:space="preserve">
          <source>The default query string in Rails 2.x is based on the modification time of the files. When assets are deployed to a cluster, there is no guarantee that the timestamps will be the same, resulting in different values being used depending on which server handles the request.</source>
          <target state="translated">Rails 2.x中默认的查询字符串是基于文件的修改时间。当资产部署到集群时,无法保证时间戳相同,导致根据处理请求的服务器不同而使用不同的值。</target>
        </trans-unit>
        <trans-unit id="147c7acadfc41f5f5e59a90b1e7884d58638c717" translate="yes" xml:space="preserve">
          <source>The default queue name prefix delimiter is '_'. This can be changed by setting &lt;code&gt;config.active_job.queue_name_delimiter&lt;/code&gt; in &lt;code&gt;application.rb&lt;/code&gt;:</source>
          <target state="translated">默认队列名称前缀定界符为&amp;ldquo; _&amp;rdquo;。这可以通过在 &lt;code&gt;application.rb&lt;/code&gt; 中设置 &lt;code&gt;config.active_job.queue_name_delimiter&lt;/code&gt; 来更改：</target>
        </trans-unit>
        <trans-unit id="8552b825d22023630bc90a85bfa0ff7ef0a73f83" translate="yes" xml:space="preserve">
          <source>The default sanitizer is Rails::Html::SafeListSanitizer. See &lt;a href=&quot;https://github.com/rails/rails-html-sanitizer&quot;&gt;Rails HTML Sanitizers&lt;/a&gt; for more information.</source>
          <target state="translated">默认的消毒剂是Rails :: Html :: SafeListSanitizer。有关更多信息，请参见&lt;a href=&quot;https://github.com/rails/rails-html-sanitizer&quot;&gt;Rails HTML Sanitizers&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b2016ca14211876c1edaa8337a906e443cb4b6a4" translate="yes" xml:space="preserve">
          <source>The default serializer for new applications is &lt;code&gt;:json&lt;/code&gt;. For compatibility with old applications with existing cookies, &lt;code&gt;:marshal&lt;/code&gt; is used when &lt;code&gt;serializer&lt;/code&gt; option is not specified.</source>
          <target state="translated">新应用程序的默认序列化器是 &lt;code&gt;:json&lt;/code&gt; 。为了与具有现有cookie的旧应用程序兼容，如果未指定 &lt;code&gt;serializer&lt;/code&gt; 选项，则使用 &lt;code&gt;:marshal&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f47159673cb495ccbabe040b7bed54c0ab255c7c" translate="yes" xml:space="preserve">
          <source>The default setting is &lt;code&gt;true&lt;/code&gt;, which uses the partial at &lt;code&gt;/admin/articles/_article.erb&lt;/code&gt;. Setting the value to &lt;code&gt;false&lt;/code&gt; would render &lt;code&gt;/articles/_article.erb&lt;/code&gt;, which is the same behavior as rendering from a non-namespaced controller such as &lt;code&gt;ArticlesController&lt;/code&gt;.</source>
          <target state="translated">默认设置为 &lt;code&gt;true&lt;/code&gt; ，它使用 &lt;code&gt;/admin/articles/_article.erb&lt;/code&gt; 的部分设置。将值设置为 &lt;code&gt;false&lt;/code&gt; 将会渲染 &lt;code&gt;/articles/_article.erb&lt;/code&gt; ，这与从非命名空间控制器（如 &lt;code&gt;ArticlesController&lt;/code&gt; )进行渲染的行为相同。</target>
        </trans-unit>
        <trans-unit id="515503b563ee9a5bbb4ae3beb0127d46d8fa5713" translate="yes" xml:space="preserve">
          <source>The default settings are Selenium, using Chrome, with a screen size of 1400x1400.</source>
          <target state="translated">默认设置为Selenium,使用Chrome浏览器,屏幕大小为1400x1400。</target>
        </trans-unit>
        <trans-unit id="c5f8f103612c80ac874538744f53c5fe3b5cd267" translate="yes" xml:space="preserve">
          <source>The default sum of an empty list is zero. You can override this default:</source>
          <target state="translated">空列表的默认和为零。你可以覆盖这个默认值。</target>
        </trans-unit>
        <trans-unit id="071a72da76e5b74a031c70449265c7fa7a2297fe" translate="yes" xml:space="preserve">
          <source>The default terminator halts the chain when a callback throws &lt;code&gt;:abort&lt;/code&gt;.</source>
          <target state="translated">当回调抛出 &lt;code&gt;:abort&lt;/code&gt; 时，默认终止符将终止链。</target>
        </trans-unit>
        <trans-unit id="4697708713aa6085f40190002f8d6e33c97a56cf" translate="yes" xml:space="preserve">
          <source>The default test stub in &lt;code&gt;test/models/article_test.rb&lt;/code&gt; looks like this:</source>
          <target state="translated">&lt;code&gt;test/models/article_test.rb&lt;/code&gt; 中的默认测试存根看起来像这样：</target>
        </trans-unit>
        <trans-unit id="6a1270eb0f735549a1008a4527b95f164d8e96ac" translate="yes" xml:space="preserve">
          <source>The default trusted IPs list simply includes IP addresses that are guaranteed by the IP specification to be private addresses. Those will not be the ultimate client IP in production, and so are discarded. See &lt;a href=&quot;https://en.wikipedia.org/wiki/Private_network&quot;&gt;en.wikipedia.org/wiki/Private_network&lt;/a&gt; for details.</source>
          <target state="translated">默认的受信任IP列表仅包含IP规范保证为私有地址的IP地址。这些将不是生产中的最终客户端IP，因此将被丢弃。有关详细信息，请参见&lt;a href=&quot;https://en.wikipedia.org/wiki/Private_network&quot;&gt;en.wikipedia.org/wiki/Private_network&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="23f60753d7620ad7eea0f11cae021bf7e9adc787" translate="yes" xml:space="preserve">
          <source>The default value for &lt;code&gt;include_root&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;. You can change it to &lt;code&gt;true&lt;/code&gt; if the given &lt;a href=&quot;json&quot;&gt;JSON&lt;/a&gt; string includes a single root node.</source>
          <target state="translated">为默认值 &lt;code&gt;include_root&lt;/code&gt; 是 &lt;code&gt;false&lt;/code&gt; 。如果给定的&lt;a href=&quot;json&quot;&gt;JSON&lt;/a&gt;字符串包含单个根节点，则可以将其更改为 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2995a2cd89ccb1c807ab761506e22c3579641b10" translate="yes" xml:space="preserve">
          <source>The default value is generated by trying to call &lt;code&gt;strftime&lt;/code&gt; with &amp;ldquo;%T.%L&amp;rdquo; on the object's value. It is still possible to override that by passing the &amp;ldquo;value&amp;rdquo; option.</source>
          <target state="translated">通过尝试使用对象值的&amp;ldquo;％T.％L&amp;rdquo; 调用 &lt;code&gt;strftime&lt;/code&gt; 来生成默认值。仍然可以通过传递&amp;ldquo;值&amp;rdquo;选项来覆盖它。</target>
        </trans-unit>
        <trans-unit id="fce923ebd77135ee6e5a64fb412ca563cbb9a2f4" translate="yes" xml:space="preserve">
          <source>The default value is generated by trying to call &lt;code&gt;strftime&lt;/code&gt; with &amp;ldquo;%Y-%m&amp;rdquo; on the object's value, which makes it behave as expected for instances of &lt;a href=&quot;../../datetime&quot;&gt;DateTime&lt;/a&gt; and &lt;a href=&quot;../../activesupport/timewithzone&quot;&gt;ActiveSupport::TimeWithZone&lt;/a&gt;.</source>
          <target state="translated">通过尝试在对象的值上使用&amp;ldquo;％Y-％m&amp;rdquo; 调用 &lt;code&gt;strftime&lt;/code&gt; 来生成默认值，这使得它对于&lt;a href=&quot;../../datetime&quot;&gt;DateTime&lt;/a&gt;和&lt;a href=&quot;../../activesupport/timewithzone&quot;&gt;ActiveSupport :: TimeWithZone&lt;/a&gt;实例具有预期的行为。</target>
        </trans-unit>
        <trans-unit id="51b813ed49344540ac2076972a7ceaf113ab8138" translate="yes" xml:space="preserve">
          <source>The default value is generated by trying to call &lt;code&gt;strftime&lt;/code&gt; with &amp;ldquo;%Y-%m-%d&amp;rdquo; on the object's value, which makes it behave as expected for instances of &lt;a href=&quot;../../datetime&quot;&gt;DateTime&lt;/a&gt; and &lt;a href=&quot;../../activesupport/timewithzone&quot;&gt;ActiveSupport::TimeWithZone&lt;/a&gt;. You can still override that by passing the &amp;ldquo;value&amp;rdquo; option explicitly, e.g.</source>
          <target state="translated">通过尝试在对象的值上使用&amp;ldquo;％Y-％m-％d&amp;rdquo; 调用 &lt;code&gt;strftime&lt;/code&gt; 来生成默认值，这使其对于&lt;a href=&quot;../../datetime&quot;&gt;DateTime&lt;/a&gt;和&lt;a href=&quot;../../activesupport/timewithzone&quot;&gt;ActiveSupport :: TimeWithZone&lt;/a&gt;实例具有预期的行为。您仍然可以通过显式传递&amp;ldquo;值&amp;rdquo;选项来覆盖它，例如</target>
        </trans-unit>
        <trans-unit id="155f523aa7dab7eaef4a73cf5262806f48843b57" translate="yes" xml:space="preserve">
          <source>The default value is generated by trying to call &lt;code&gt;strftime&lt;/code&gt; with &amp;ldquo;%Y-%m-%dT%T&amp;rdquo; on the object's value, which makes it behave as expected for instances of &lt;a href=&quot;../../datetime&quot;&gt;DateTime&lt;/a&gt; and &lt;a href=&quot;../../activesupport/timewithzone&quot;&gt;ActiveSupport::TimeWithZone&lt;/a&gt;.</source>
          <target state="translated">通过尝试在对象的值上使用&amp;ldquo;％Y-％m-％dT％T&amp;rdquo; 调用 &lt;code&gt;strftime&lt;/code&gt; 来生成默认值，这使它对于&lt;a href=&quot;../../datetime&quot;&gt;DateTime&lt;/a&gt;和&lt;a href=&quot;../../activesupport/timewithzone&quot;&gt;ActiveSupport :: TimeWithZone&lt;/a&gt;实例具有预期的行为。</target>
        </trans-unit>
        <trans-unit id="5e75e0fbb28eddbbcf15907c13cd835044074f14" translate="yes" xml:space="preserve">
          <source>The default value is generated by trying to call &lt;code&gt;strftime&lt;/code&gt; with &amp;ldquo;%Y-W%W&amp;rdquo; on the object's value, which makes it behave as expected for instances of &lt;a href=&quot;../../datetime&quot;&gt;DateTime&lt;/a&gt; and &lt;a href=&quot;../../activesupport/timewithzone&quot;&gt;ActiveSupport::TimeWithZone&lt;/a&gt;.</source>
          <target state="translated">通过尝试在对象的值上使用&amp;ldquo;％YW％W&amp;rdquo; 调用 &lt;code&gt;strftime&lt;/code&gt; 来生成默认值，这使得它对于&lt;a href=&quot;../../datetime&quot;&gt;DateTime&lt;/a&gt;和&lt;a href=&quot;../../activesupport/timewithzone&quot;&gt;ActiveSupport :: TimeWithZone&lt;/a&gt;实例具有预期的行为。</target>
        </trans-unit>
        <trans-unit id="302a80951efeb150725e12d390b168e285d9d6c7" translate="yes" xml:space="preserve">
          <source>The defaults for these options can be localized, their keys are:</source>
          <target state="translated">这些选项的默认值是可以本地化的,它们的键是。</target>
        </trans-unit>
        <trans-unit id="1405dbd52b41e365289863e28f99fa1bd2332eb9" translate="yes" xml:space="preserve">
          <source>The delay of the retry</source>
          <target state="translated">重试的延迟</target>
        </trans-unit>
        <trans-unit id="0ddcccd9c048d80e5af182b551f880e6af315c21" translate="yes" xml:space="preserve">
          <source>The delegated method must be public on the target, otherwise it will raise &lt;code&gt;NoMethodError&lt;/code&gt;.</source>
          <target state="translated">委托的方法必须在目标上是公共的，否则它将引发 &lt;code&gt;NoMethodError&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4b09ac1b3fc3753d4f13bde06b487a8da159ea06" translate="yes" xml:space="preserve">
          <source>The delegated methods are public by default. Pass &lt;code&gt;private:
true&lt;/code&gt; to change that.</source>
          <target state="translated">默认情况下，委托方法是公共的。通过 &lt;code&gt;private: true&lt;/code&gt; 即可更改。</target>
        </trans-unit>
        <trans-unit id="b561c6d24076a191c3806cfbab4b44dc868d9533" translate="yes" xml:space="preserve">
          <source>The dependent &lt;a href=&quot;richtext&quot;&gt;RichText&lt;/a&gt; model will also automatically process attachments links as sent via the Trix-powered editor. These attachments are associated with the &lt;a href=&quot;richtext&quot;&gt;RichText&lt;/a&gt; model using Active Storage.</source>
          <target state="translated">依赖的&lt;a href=&quot;richtext&quot;&gt;RichText&lt;/a&gt;模型还将自动处理通过Trix支持的编辑器发送的附件链接。这些附件使用Active Storage 与&lt;a href=&quot;richtext&quot;&gt;RichText&lt;/a&gt;模型关联。</target>
        </trans-unit>
        <trans-unit id="7b896f7775194663df7f16876df2a84f94b10d3b" translate="yes" xml:space="preserve">
          <source>The deprecated constant now returns the same object as the new one rather than a proxy object, so it can be used transparently in &lt;code&gt;rescue&lt;/code&gt; blocks etc.</source>
          <target state="translated">现在，已弃用的常量将返回与新对象相同的对象，而不是代理对象，因此可以在 &lt;code&gt;rescue&lt;/code&gt; 块等中透明地使用它。</target>
        </trans-unit>
        <trans-unit id="036245d5d96624f479702d772eb72dcb5e11e8c4" translate="yes" xml:space="preserve">
          <source>The deprecation warning</source>
          <target state="translated">废弃警告</target>
        </trans-unit>
        <trans-unit id="296534b4b5c0114d9b09d904b18e264419c9274a" translate="yes" xml:space="preserve">
          <source>The desired result can be accomplished by wrapping the known-safe string in Arel.sql:</source>
          <target state="translated">通过在Arel.sql中包装已知的安全字符串,可以达到预期的结果。</target>
        </trans-unit>
        <trans-unit id="f01e3ce935b75a14bcd55aaf7d5d0bb040f17e93" translate="yes" xml:space="preserve">
          <source>The differences with &lt;code&gt;Kernel#Array&lt;/code&gt; explained above apply to the rest of &lt;code&gt;object&lt;/code&gt;s.</source>
          <target state="translated">上面说明的与 &lt;code&gt;Kernel#Array&lt;/code&gt; 的区别适用于 &lt;code&gt;object&lt;/code&gt; s 的其余部分。</target>
        </trans-unit>
        <trans-unit id="f4f7d49b1ac826abef81ba5b39c283b9cef02d95" translate="yes" xml:space="preserve">
          <source>The different ways of debugging.</source>
          <target state="translated">调试的不同方式。</target>
        </trans-unit>
        <trans-unit id="4e465a9e2c0e5bd338b7983c7a2d3ecf29038df0" translate="yes" xml:space="preserve">
          <source>The digest will be generated using &lt;code&gt;virtual_path:&lt;/code&gt; if it is provided.</source>
          <target state="translated">摘要将使用 &lt;code&gt;virtual_path:&lt;/code&gt; 生成（如果提供）。</target>
        </trans-unit>
        <trans-unit id="87e9e845de388090f6fedfdef8cbb1972b1b0d42" translate="yes" xml:space="preserve">
          <source>The digestor can be bypassed by passing skip_digest: true as an option to the cache call:</source>
          <target state="translated">通过传递 skip_digest:true 作为缓存调用的一个选项,可以绕过消化器。</target>
        </trans-unit>
        <trans-unit id="c9880525eeb47dcc8b1a61a667bcb1ac06388bf9" translate="yes" xml:space="preserve">
          <source>The directives that work in JavaScript files also work in stylesheets (though obviously including stylesheets rather than JavaScript files). The &lt;code&gt;require_tree&lt;/code&gt; directive in a CSS manifest works the same way as the JavaScript one, requiring all stylesheets from the current directory.</source>
          <target state="translated">适用于JavaScript文件的指令也适用于样式表（尽管显然包括样式表而不是JavaScript文件）。CSS清单中的 &lt;code&gt;require_tree&lt;/code&gt; 指令与JavaScript指令的工作方式相同，要求当前目录中的所有样式表。</target>
        </trans-unit>
        <trans-unit id="213bb5462a19fb4d16c75c50df8bd7cb3bb8fb11" translate="yes" xml:space="preserve">
          <source>The directory &lt;code&gt;test/mailers/previews&lt;/code&gt;.</source>
          <target state="translated">目录 &lt;code&gt;test/mailers/previews&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="db0a97cd4a13a2cce5468ae004d2f87eec98fccd" translate="yes" xml:space="preserve">
          <source>The distinction is in where you place the foreign key (it goes on the table for the class declaring the &lt;code&gt;belongs_to&lt;/code&gt; association), but you should give some thought to the actual meaning of the data as well. The &lt;code&gt;has_one&lt;/code&gt; relationship says that one of something is yours - that is, that something points back to you. For example, it makes more sense to say that a supplier owns an account than that an account owns a supplier. This suggests that the correct relationships are like this:</source>
          <target state="translated">区别在于放置外键的位置（该类在表上声明了 &lt;code&gt;belongs_to&lt;/code&gt; 关联的表上），但是您也应该考虑一下数据的实际含义。该 &lt;code&gt;has_one&lt;/code&gt; 关系说的事情之一就是你的-也就是说，点的东西还给你。例如，说一个供应商拥有一个帐户比说一个账户拥有一个供应商更有意义。这表明正确的关系是这样的：</target>
        </trans-unit>
        <trans-unit id="985c59a63de601354797a9003df4ab4f40409519" translate="yes" xml:space="preserve">
          <source>The documentation for &lt;code&gt;PermitScrubber&lt;/code&gt; and &lt;code&gt;TargetScrubber&lt;/code&gt; explains how you can gain complete control over when and how elements should be stripped.</source>
          <target state="translated">&lt;code&gt;PermitScrubber&lt;/code&gt; 和 &lt;code&gt;TargetScrubber&lt;/code&gt; 的文档说明了如何完全控制何时应该剥离元素以及如何剥离元素。</target>
        </trans-unit>
        <trans-unit id="7a30f95b69b46783ce610879e86f95b33971917c" translate="yes" xml:space="preserve">
          <source>The driver name is a required argument for &lt;code&gt;driven_by&lt;/code&gt;. The optional arguments that can be passed to &lt;code&gt;driven_by&lt;/code&gt; are &lt;code&gt;:using&lt;/code&gt; for the browser (this will only be used by Selenium), &lt;code&gt;:screen_size&lt;/code&gt; to change the size of the screen for screenshots, and &lt;code&gt;:options&lt;/code&gt; which can be used to set options supported by the driver.</source>
          <target state="translated">驱动程序名称是 &lt;code&gt;driven_by&lt;/code&gt; 的必需参数。可以传递给 &lt;code&gt;driven_by&lt;/code&gt; 的可选参数包括 &lt;code&gt;:using&lt;/code&gt; 用于浏览器（仅Selenium将使用） &lt;code&gt;:screen_size&lt;/code&gt; 更改屏幕截图的屏幕大小；以及 &lt;code&gt;:options&lt;/code&gt; （可用于设置受支持的选项）司机。</target>
        </trans-unit>
        <trans-unit id="4997e6afb5b4fcd0fc1edb4cdc05bfb0a531e68e" translate="yes" xml:space="preserve">
          <source>The easiest way to add custom validators for validating individual attributes is with the convenient &lt;code&gt;ActiveModel::EachValidator&lt;/code&gt;.</source>
          <target state="translated">添加用于验证单个属性的自定义验证器的最简单方法是使用便捷的 &lt;code&gt;ActiveModel::EachValidator&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="98faafe30a9e70db0e0977f135231c7feded8674" translate="yes" xml:space="preserve">
          <source>The easiest way to add custom validators for validating individual attributes is with the convenient &lt;code&gt;ActiveModel::EachValidator&lt;/code&gt;. In this case, the custom validator class must implement a &lt;code&gt;validate_each&lt;/code&gt; method which takes three arguments: record, attribute, and value. These correspond to the instance, the attribute to be validated, and the value of the attribute in the passed instance.</source>
          <target state="translated">添加用于验证单个属性的自定义验证器的最简单方法是使用便捷的 &lt;code&gt;ActiveModel::EachValidator&lt;/code&gt; 。在这种情况下，自定义验证器类必须实现一个 &lt;code&gt;validate_each&lt;/code&gt; 方法，该方法采用三个参数：记录，属性和值。这些对应于实例，要验证的属性以及传递的实例中的属性值。</target>
        </trans-unit>
        <trans-unit id="91e62d62a76a3d0d1a18977f96d9d5517a4cc465" translate="yes" xml:space="preserve">
          <source>The easiest way to do that is to throw</source>
          <target state="translated">最简单的方法是抛出</target>
        </trans-unit>
        <trans-unit id="67abd7985beb12edf1df94d4e24d4ac0499aedde" translate="yes" xml:space="preserve">
          <source>The easiest way to see functional tests in action is to generate a controller using the scaffold generator:</source>
          <target state="translated">最简单的方法是使用脚手架生成器生成一个控制器来查看功能测试的运行情况。</target>
        </trans-unit>
        <trans-unit id="71f9b218d0a717f2a34e6fb5f6eed95f85739bd8" translate="yes" xml:space="preserve">
          <source>The easiest way to work with Rails is to store all external data as UTF-8. If you don't, Ruby libraries and Rails will often be able to convert your native data into UTF-8, but this doesn't always work reliably, so you're better off ensuring that all external data is UTF-8.</source>
          <target state="translated">使用Rails最简单的方法是将所有外部数据存储为UTF-8。如果你不这样做,Ruby库和Rails通常能够将你的本地数据转换为UTF-8,但这并不总是可靠地工作,所以你最好确保所有外部数据都是UTF-8。</target>
        </trans-unit>
        <trans-unit id="de8bad23dcd8917481e25590ac072420ea7cda7e" translate="yes" xml:space="preserve">
          <source>The encoded form of the mail</source>
          <target state="translated">邮件的编码形式</target>
        </trans-unit>
        <trans-unit id="603d901a7533f7d4b81087cd4d5da75a04f6dc77" translate="yes" xml:space="preserve">
          <source>The engine contains migrations for the &lt;code&gt;blorgh_articles&lt;/code&gt; and &lt;code&gt;blorgh_comments&lt;/code&gt; table which need to be created in the application's database so that the engine's models can query them correctly. To copy these migrations into the application run the following command from the application's root:</source>
          <target state="translated">该引擎包含需要在应用程序数据库中创建的 &lt;code&gt;blorgh_articles&lt;/code&gt; 和 &lt;code&gt;blorgh_comments&lt;/code&gt; 表的迁移，以便引擎的模型可以正确查询它们。要将这些迁移复制到应用程序中，请从应用程序的根目录运行以下命令：</target>
        </trans-unit>
        <trans-unit id="2465fb9cdbf0b80704e99d5b2da49be290d0b4c9" translate="yes" xml:space="preserve">
          <source>The engine is unable to find the partial required for rendering the comments. Rails looks first in the application's (&lt;code&gt;test/dummy&lt;/code&gt;) &lt;code&gt;app/views&lt;/code&gt; directory and then in the engine's &lt;code&gt;app/views&lt;/code&gt; directory. When it can't find it, it will throw this error. The engine knows to look for &lt;code&gt;blorgh/comments/_comment&lt;/code&gt; because the model object it is receiving is from the &lt;code&gt;Blorgh::Comment&lt;/code&gt; class.</source>
          <target state="translated">引擎找不到呈现注释所需的部分内容。Rails首先在应用程序的（ &lt;code&gt;test/dummy&lt;/code&gt; ） &lt;code&gt;app/views&lt;/code&gt; 目录中查找，然后在引擎的 &lt;code&gt;app/views&lt;/code&gt; 目录中查找。当找不到它时，它将引发此错误。引擎知道要查找 &lt;code&gt;blorgh/comments/_comment&lt;/code&gt; ,因为它接收的模型对象来自 &lt;code&gt;Blorgh::Comment&lt;/code&gt; 类。</target>
        </trans-unit>
        <trans-unit id="ea6b332efc300c274b97a32b7ce8d8e009ab65ef" translate="yes" xml:space="preserve">
          <source>The engine that this guide covers provides submitting articles and commenting functionality and follows a similar thread to the &lt;a href=&quot;getting_started&quot;&gt;Getting Started Guide&lt;/a&gt;, with some new twists.</source>
          <target state="translated">本指南涵盖的引擎提供提交文章和评论功能，并遵循与《&lt;a href=&quot;getting_started&quot;&gt;入门指南》&lt;/a&gt;类似的主题，但有一些新的变化。</target>
        </trans-unit>
        <trans-unit id="d7b01cfd4565a85c2dbb4f19156a363391250255" translate="yes" xml:space="preserve">
          <source>The engine that will be created in this guide will be called &quot;blorgh&quot;. This engine will provide blogging functionality to its host applications, allowing for new articles and comments to be created. At the beginning of this guide, you will be working solely within the engine itself, but in later sections you'll see how to hook it into an application.</source>
          <target state="translated">本指南中将要创建的引擎将被称为 &quot;blorgh&quot;。这个引擎将为其主机应用程序提供博客功能,允许创建新文章和评论。在本指南的一开始,你将只在引擎本身中工作,但在后面的章节中,你将看到如何将它挂到一个应用程序中。</target>
        </trans-unit>
        <trans-unit id="527b2aac30ef582fdc0a45802b88ee7ae5e7ffc7" translate="yes" xml:space="preserve">
          <source>The entire URL used for the request.</source>
          <target state="translated">用于请求的整个URL。</target>
        </trans-unit>
        <trans-unit id="d99c9a66d0b0be0a02769838a20ac0b1925f5311" translate="yes" xml:space="preserve">
          <source>The entire callback chain of a &lt;a href=&quot;persistence#method-i-save&quot;&gt;#save&lt;/a&gt;, &lt;a href=&quot;persistence#method-i-save-21&quot;&gt;#save!&lt;/a&gt;, or &lt;a href=&quot;persistence#method-i-destroy&quot;&gt;#destroy&lt;/a&gt; call runs within a transaction. That includes &lt;code&gt;after_*&lt;/code&gt; hooks. If everything goes fine a COMMIT is executed once the chain has been completed.</source>
          <target state="translated"># &lt;a href=&quot;persistence#method-i-save&quot;&gt;save&lt;/a&gt;，# &lt;a href=&quot;persistence#method-i-save-21&quot;&gt;save！&lt;/a&gt;的整个回调链。或&lt;a href=&quot;persistence#method-i-destroy&quot;&gt;#destroy&lt;/a&gt;调用在事务内运行。这包括 &lt;code&gt;after_*&lt;/code&gt; 钩子。如果一切顺利，则在链完成后将执行COMMIT。</target>
        </trans-unit>
        <trans-unit id="f16e4fc1970700778bf53ca3a20a8ccb854a9165" translate="yes" xml:space="preserve">
          <source>The environment variable RAILS_GROUPS;</source>
          <target state="translated">环境变量RAILS_GROUPS。</target>
        </trans-unit>
        <trans-unit id="47fccb458c4924179eb7ab520146ad2f2e5b5da5" translate="yes" xml:space="preserve">
          <source>The equivalent YAML file would look like this:</source>
          <target state="translated">相应的YAML文件会是这样的。</target>
        </trans-unit>
        <trans-unit id="46b064b6decece00517a4ae80500c5b520897a0b" translate="yes" xml:space="preserve">
          <source>The errata for the &lt;code&gt;PATCH&lt;/code&gt; verb &lt;a href=&quot;http://www.rfc-editor.org/errata_search.php?rfc=5789&quot;&gt;specifies that a 'diff' media type should be used with &lt;code&gt;PATCH&lt;/code&gt;&lt;/a&gt;. One such format is &lt;a href=&quot;https://tools.ietf.org/html/rfc6902&quot;&gt;JSON Patch&lt;/a&gt;. While Rails does not support JSON Patch natively, it's easy enough to add support:</source>
          <target state="translated">用于勘误 &lt;code&gt;PATCH&lt;/code&gt; 动词&lt;a href=&quot;http://www.rfc-editor.org/errata_search.php?rfc=5789&quot;&gt;，一个&amp;ldquo;差异&amp;rdquo;的媒体类型应与使用指定 &lt;code&gt;PATCH&lt;/code&gt; &lt;/a&gt;。一种这样的格式是&lt;a href=&quot;https://tools.ietf.org/html/rfc6902&quot;&gt;JSON Patch&lt;/a&gt;。尽管Rails本身不支持JSON Patch，但添加支持很容易：</target>
        </trans-unit>
        <trans-unit id="517f5495378b09403c3a338eae8b0225a24b8aff" translate="yes" xml:space="preserve">
          <source>The error that caused the discard</source>
          <target state="translated">导致丢弃的错误</target>
        </trans-unit>
        <trans-unit id="202c080109e967ceac7ed5f3b20a32c657e5c762" translate="yes" xml:space="preserve">
          <source>The error that caused the retry</source>
          <target state="translated">导致重试的错误</target>
        </trans-unit>
        <trans-unit id="4e43b8e70ed522e58308259bcdb4debbfad5afa2" translate="yes" xml:space="preserve">
          <source>The escaping performed in this method is identical to those performed in the Active Support JSON encoder when &lt;code&gt;ActiveSupport.escape_html_entities_in_json&lt;/code&gt; is set to true. Because this transformation is idempotent, this helper can be applied even if &lt;code&gt;ActiveSupport.escape_html_entities_in_json&lt;/code&gt; is already true.</source>
          <target state="translated">当 &lt;code&gt;ActiveSupport.escape_html_entities_in_json&lt;/code&gt; 设置为true 时，在此方法中执行的转义与在Active Support JSON编码器中执行的转义相同。因为此转换是幂等的，所以即使 &lt;code&gt;ActiveSupport.escape_html_entities_in_json&lt;/code&gt; 已经为true ，也可以应用此助手。</target>
        </trans-unit>
        <trans-unit id="f6cd9b6aa0872547b71e432f2132c47e1b23d564" translate="yes" xml:space="preserve">
          <source>The eval() function is a nightmare for restricted list input filters, as it allows the style attribute to hide the word &quot;innerHTML&quot;:</source>
          <target state="translated">eval()函数对于受限列表输入过滤器来说是个噩梦,因为它允许样式属性隐藏 &quot;innerHTML &quot;这个词。</target>
        </trans-unit>
        <trans-unit id="3970e1a2fc0e3743d76d2b4beaa13f39ba8d4504" translate="yes" xml:space="preserve">
          <source>The example above generates &amp;ldquo;&lt;a href=&quot;http://assets1.example.com&quot;&gt;assets1.example.com&lt;/a&gt;&amp;rdquo; and &amp;ldquo;&lt;a href=&quot;http://assets2.example.com&quot;&gt;assets2.example.com&lt;/a&gt;&amp;rdquo;. This option is useful for example if you need fewer/more than four hosts, custom host names, etc.</source>
          <target state="translated">上面的示例生成&amp;ldquo; &lt;a href=&quot;http://assets1.example.com&quot;&gt;asset1.example.com&lt;/a&gt; &amp;rdquo;和&amp;ldquo; &lt;a href=&quot;http://assets2.example.com&quot;&gt;asset2.example.com&lt;/a&gt; &amp;rdquo;。例如，如果您需要少于/多于四个主机，自定义主机名等，则此选项很有用。</target>
        </trans-unit>
        <trans-unit id="dd5763a2636a74bdb09de576f848b626740d358c" translate="yes" xml:space="preserve">
          <source>The example above uses a custom environment called &quot;staging&quot; for a production like server but for testing purposes. You can read &lt;a href=&quot;configuring#creating-rails-environments&quot;&gt;Creating Rails environments&lt;/a&gt; for more information about custom Rails environments.</source>
          <target state="translated">上面的示例将一个称为&amp;ldquo;登台&amp;rdquo;的自定义环境用于服务器之类的产品，但用于测试目的。您可以阅读&lt;a href=&quot;configuring#creating-rails-environments&quot;&gt;创建Rails环境&lt;/a&gt;以获取有关定制Rails环境的更多信息。</target>
        </trans-unit>
        <trans-unit id="ecb3184dee5c579a473cebc5475c09e72e149629" translate="yes" xml:space="preserve">
          <source>The example above will create a test framework option and will invoke a generator based on the user supplied value.</source>
          <target state="translated">上面的例子将创建一个测试框架选项,并将根据用户提供的值调用一个生成器。</target>
        </trans-unit>
        <trans-unit id="344add1bda36def193aec6a1db38dc0ecd133c78" translate="yes" xml:space="preserve">
          <source>The example of partial use describes a familiar pattern where a template needs to iterate over an array and render a sub template for each of the elements. This pattern has been implemented as a single method that accepts an array and renders a partial by the same name as the elements contained within. So the three-lined example in &amp;ldquo;Using partials&amp;rdquo; can be rewritten with a single line:</source>
          <target state="translated">部分使用的示例描述了一种熟悉的模式，其中模板需要遍历数组并为每个元素呈现一个子模板。此模式已实现为单个方法，该方法接受数组并以与包含在其中的元素相同的名称呈现部分视图。因此，可以使用单行重写&amp;ldquo;使用局部&amp;rdquo;中的三行示例：</target>
        </trans-unit>
        <trans-unit id="513e1d35af00b7b4857d0001cb9d96cd14237d06" translate="yes" xml:space="preserve">
          <source>The examples above put files under the application's &lt;code&gt;lib&lt;/code&gt; because said directory belongs to &lt;code&gt;$LOAD_PATH&lt;/code&gt;.</source>
          <target state="translated">上面的示例将文件放在应用程序的 &lt;code&gt;lib&lt;/code&gt; 下，因为该目录属于 &lt;code&gt;$LOAD_PATH&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1c74c9a07fb4e60ccadc9e321e8eb5e6ad8dd588" translate="yes" xml:space="preserve">
          <source>The examples above show that &lt;code&gt;in_groups&lt;/code&gt; fills some groups with a trailing &lt;code&gt;nil&lt;/code&gt; element as needed. A group can get at most one of these extra elements, the rightmost one if any. And the groups that have them are always the last ones.</source>
          <target state="translated">上面的示例显示 &lt;code&gt;in_groups&lt;/code&gt; 根据需要用尾随 &lt;code&gt;nil&lt;/code&gt; 元素填充某些组。一组最多可以获得这些额外元素中的一个，如果有的话，最右边的一个。拥有他们的团体永远是最后一个。</target>
        </trans-unit>
        <trans-unit id="61162445c5595b6fb1ee7e3f0721291476b564b0" translate="yes" xml:space="preserve">
          <source>The examples below use &lt;code&gt;$&lt;/code&gt; to represent your terminal prompt in a UNIX-like OS, though it may have been customized to appear differently. If you are using Windows, your prompt will look something like &lt;code&gt;c:\source_code&amp;gt;&lt;/code&gt;</source>
          <target state="translated">下面的示例使用 &lt;code&gt;$&lt;/code&gt; 表示类似UNIX的操作系统中的终端提示，尽管可能已对其进行了自定义以使其外观有所不同。如果使用Windows，则提示符将类似于 &lt;code&gt;c:\source_code&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="13335fd46e437958bd49212b4d657196ad9ffa75" translate="yes" xml:space="preserve">
          <source>The exceptions &lt;a href=&quot;adapternotspecified&quot;&gt;AdapterNotSpecified&lt;/a&gt;, &lt;a href=&quot;adapternotfound&quot;&gt;AdapterNotFound&lt;/a&gt; and &lt;code&gt;ArgumentError&lt;/code&gt; may be returned on an error.</source>
          <target state="translated">例外&lt;a href=&quot;adapternotspecified&quot;&gt;AdapterNotSpecified&lt;/a&gt;，&lt;a href=&quot;adapternotfound&quot;&gt;AdapterNotFound&lt;/a&gt;并 &lt;code&gt;ArgumentError&lt;/code&gt; 可能在错误被退回。</target>
        </trans-unit>
        <trans-unit id="2268f470fa1e4f224984a46fe5b66988eea0dd2c" translate="yes" xml:space="preserve">
          <source>The execution context of a block passed to &lt;code&gt;Class.new&lt;/code&gt; or &lt;code&gt;Module.new&lt;/code&gt; is not entirely equivalent to the one of the body of the definitions using the &lt;code&gt;class&lt;/code&gt; and &lt;code&gt;module&lt;/code&gt; keywords. But both idioms result in the same constant assignment.</source>
          <target state="translated">传递给 &lt;code&gt;Class.new&lt;/code&gt; 或 &lt;code&gt;Module.new&lt;/code&gt; 的块的执行上下文并不完全等同于使用 &lt;code&gt;class&lt;/code&gt; 和 &lt;code&gt;module&lt;/code&gt; 关键字的定义主体之一。但是，这两个习惯用法都会导致相同的常量分配。</target>
        </trans-unit>
        <trans-unit id="d1560f51490992d361bd33ce4f84967240b07850" translate="yes" xml:space="preserve">
          <source>The execution of each test method stops as soon as any error or an assertion failure is encountered, and the test suite continues with the next method. All test methods are executed in random order. The &lt;a href=&quot;configuring#configuring-active-support&quot;&gt;&lt;code&gt;config.active_support.test_order&lt;/code&gt; option&lt;/a&gt; can be used to configure test order.</source>
          <target state="translated">一旦遇到任何错误或断言失败，每个测试方法的执行就会停止，测试套件将继续使用下一个方法。所有测试方法均以随机顺序执行。该&lt;a href=&quot;configuring#configuring-active-support&quot;&gt; &lt;code&gt;config.active_support.test_order&lt;/code&gt; 选项&lt;/a&gt;可以用来配置测试顺序。</target>
        </trans-unit>
        <trans-unit id="86f2a88639b58b6dc320a26b779f9c83492793d1" translate="yes" xml:space="preserve">
          <source>The face attribute must be in the object and it cannot be blank or marked for destruction.</source>
          <target state="translated">面部属性必须在对象中,不能是空白或标记销毁。</target>
        </trans-unit>
        <trans-unit id="cd2e2325522f51d93172fabd30184210ad6758e4" translate="yes" xml:space="preserve">
          <source>The field name can also be a string:</source>
          <target state="translated">字段名也可以是一个字符串。</target>
        </trans-unit>
        <trans-unit id="c23f5a2d4fe414d9b9dccdb276434ede248d4038" translate="yes" xml:space="preserve">
          <source>The file &lt;code&gt;railties/lib/rails/cli&lt;/code&gt; in turn calls &lt;code&gt;Rails::AppLoader.exec_app&lt;/code&gt;.</source>
          <target state="translated">文件 &lt;code&gt;railties/lib/rails/cli&lt;/code&gt; 依次调用 &lt;code&gt;Rails::AppLoader.exec_app&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bac5d2c07bdf6dfba37a9dd229fabf112d19ceeb" translate="yes" xml:space="preserve">
          <source>The file extensions used on an asset determine what preprocessing is applied. When a controller or a scaffold is generated with the default Rails gemset, a CoffeeScript file and a SCSS file are generated in place of a regular JavaScript and CSS file. The example used before was a controller called &quot;projects&quot;, which generated an &lt;code&gt;app/assets/stylesheets/projects.scss&lt;/code&gt; file.</source>
          <target state="translated">资产上使用的文件扩展名确定要应用的预处理。当使用默认的Rails宝石集生成控制器或支架时，将生成CoffeeScript文件和SCSS文件来代替常规的JavaScript和CSS文件。之前使用的示例是一个名为&amp;ldquo; projects&amp;rdquo;的控制器，该控制器生成了一个 &lt;code&gt;app/assets/stylesheets/projects.scss&lt;/code&gt; 文件。</target>
        </trans-unit>
        <trans-unit id="693c5053c620072ba87006436392f9198d81b36c" translate="yes" xml:space="preserve">
          <source>The files or configs can also be encrypted with a custom key. To decrypt with a key in the &lt;code&gt;ENV&lt;/code&gt;, use:</source>
          <target state="translated">也可以使用自定义密钥对文件或配置进行加密。要使用 &lt;code&gt;ENV&lt;/code&gt; 中的密钥解密，请使用：</target>
        </trans-unit>
        <trans-unit id="79590c5db1b2aa3e6f7401ef520c2cc7cf875c50" translate="yes" xml:space="preserve">
          <source>The final caveat is that your actions are executed in a separate thread than the main thread. Make sure your actions are thread safe, and this shouldn't be a problem (don't share state across threads, etc).</source>
          <target state="translated">最后要注意的是,你的操作是在一个独立的线程中执行的,而不是在主线程中。确保你的动作是线程安全的,这应该不是问题(不要跨线程共享状态等)。</target>
        </trans-unit>
        <trans-unit id="421c547ed96034c7fdf98ebd07b149c41367cd02" translate="yes" xml:space="preserve">
          <source>The final result would be:</source>
          <target state="translated">最后的结果将是:</target>
        </trans-unit>
        <trans-unit id="b6e8a878c6d566279c79dabab5729cf9f687141e" translate="yes" xml:space="preserve">
          <source>The fingerprinting behavior is controlled by the &lt;code&gt;config.assets.digest&lt;/code&gt; initialization option (which defaults to &lt;code&gt;true&lt;/code&gt;).</source>
          <target state="translated">指纹行为由 &lt;code&gt;config.assets.digest&lt;/code&gt; 初始化选项（默认为 &lt;code&gt;true&lt;/code&gt; ）控制。</target>
        </trans-unit>
        <trans-unit id="0e5b88eb961587020694ec62f77f764be5c16bf8" translate="yes" xml:space="preserve">
          <source>The first &lt;code&gt;link_to&lt;/code&gt; will generate &amp;ldquo;/profile&amp;rdquo; but the second will generate the standard polymorphic URL of &amp;ldquo;/admin/users/1&amp;rdquo;.</source>
          <target state="translated">第一个 &lt;code&gt;link_to&lt;/code&gt; 将生成&amp;ldquo; / profile&amp;rdquo;，但是第二个link_to将生成标准的多态URL&amp;ldquo; / admin / users / 1&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="cd20ffb3e2140e1113ddfc3b288c6aa57e901460" translate="yes" xml:space="preserve">
          <source>The first and last part used to find the generator to be invoked are guessed based on class invokes &lt;a href=&quot;base#method-c-hook_for&quot;&gt;::hook_for&lt;/a&gt;, as noticed in the example above. This can be customized with two options: :in and :as.</source>
          <target state="translated">如上例所示，根据类&lt;a href=&quot;base#method-c-hook_for&quot;&gt;invokes :: hook_for&lt;/a&gt;猜测用于查找要调用的生成器的第一部分和最后一部分。可以使用以下两个选项来自定义：：in和：as。</target>
        </trans-unit>
        <trans-unit id="6b2feec48312de884813c60913a1cd3ef59e3f70" translate="yes" xml:space="preserve">
          <source>The first argument to &lt;code&gt;options_for_select&lt;/code&gt; is a nested array where each element has two elements: option text (city name) and option value (city id). The option value is what will be submitted to your controller. Often this will be the id of a corresponding database object but this does not have to be the case.</source>
          <target state="translated">&lt;code&gt;options_for_select&lt;/code&gt; 的第一个参数是一个嵌套数组，其中每个元素都有两个元素：选项文本（城市名称）和选项值（城市ID）。选项值是将提交给您的控制器的值。通常，这将是相应数据库对象的ID，但这不是必须的。</target>
        </trans-unit>
        <trans-unit id="c35a6654821cab50b0d48eb9aec811dba267ad71" translate="yes" xml:space="preserve">
          <source>The first example shows &lt;code&gt;in_groups_of&lt;/code&gt; fills the last group with as many &lt;code&gt;nil&lt;/code&gt; elements as needed to have the requested size. You can change this padding value using the second optional argument:</source>
          <target state="translated">第一个示例显示 &lt;code&gt;in_groups_of&lt;/code&gt; 为最后一个组填充所需数量的 &lt;code&gt;nil&lt;/code&gt; 元素，以具有请求的大小。您可以使用第二个可选参数来更改此填充值：</target>
        </trans-unit>
        <trans-unit id="4f47fe60e70f182e1be5811a83b6e1289320cec3" translate="yes" xml:space="preserve">
          <source>The first feature of the pipeline is to concatenate assets, which can reduce the number of requests that a browser makes to render a web page. Web browsers are limited in the number of requests that they can make in parallel, so fewer requests can mean faster loading for your application.</source>
          <target state="translated">管道的第一个功能是连接资产,这可以减少浏览器渲染网页的请求数量。网络浏览器可以并行发出的请求数量是有限的,因此较少的请求意味着您的应用程序加载速度更快。</target>
        </trans-unit>
        <trans-unit id="a7fda4a618b934b655302ec63bac10bfdaa3385c" translate="yes" xml:space="preserve">
          <source>The first form</source>
          <target state="translated">第一种形式</target>
        </trans-unit>
        <trans-unit id="c779e7cdfc5b1f836df5b6e50b3fb3f8e6ec3015" translate="yes" xml:space="preserve">
          <source>The first is to use a block directly with the *_action methods. The block receives the controller as an argument. The &lt;code&gt;require_login&lt;/code&gt; filter from above could be rewritten to use a block:</source>
          <target state="translated">第一种是直接使用* _action方法使用块。该块接收控制器作为参数。上面的 &lt;code&gt;require_login&lt;/code&gt; 过滤器可以重写为使用一个块：</target>
        </trans-unit>
        <trans-unit id="decf5a49fc6e6d01f58f977387f90ce1c0e78cbb" translate="yes" xml:space="preserve">
          <source>The first option doesn't require any client-side JavaScript integration, and can be used by any other back-end service that deals with files. The second option is faster, since you're not using your own server as a staging point for uploads, and can work with deployments like Heroku that do not provide large amounts of disk space.</source>
          <target state="translated">第一个选项不需要任何客户端JavaScript集成,可以被任何其他处理文件的后端服务使用。第二种方案速度更快,因为你不使用自己的服务器作为上传的中转站,可以与Heroku这样不提供大量磁盘空间的部署一起使用。</target>
        </trans-unit>
        <trans-unit id="3018e7bc52b5fa1b4994063800ecfef2cab4f995" translate="yes" xml:space="preserve">
          <source>The first parameter specifies which value should be selected and can either be an instance of a &lt;code&gt;Date&lt;/code&gt;, &lt;code&gt;Time&lt;/code&gt;, or &lt;code&gt;DateTime&lt;/code&gt;, in which case the relevant component will be extracted, or a numerical value. For example:</source>
          <target state="translated">第一个参数指定应选择的值，并且可以是 &lt;code&gt;Date&lt;/code&gt; ， &lt;code&gt;Time&lt;/code&gt; 或 &lt;code&gt;DateTime&lt;/code&gt; 的实例，在这种情况下，将提取相关组件或数值。例如：</target>
        </trans-unit>
        <trans-unit id="9f933693c0140825dd1f189e2779b8fe6cb715c9" translate="yes" xml:space="preserve">
          <source>The first parameter to &lt;code&gt;check_box_tag&lt;/code&gt;, of course, is the name of the input. The second parameter, naturally, is the value of the input. This value will be included in the form data (and be present in &lt;code&gt;params&lt;/code&gt;) when the checkbox is checked.</source>
          <target state="translated">当然， &lt;code&gt;check_box_tag&lt;/code&gt; 的第一个参数是输入的名称。第二个参数自然是输入值。选中此复选框后，此值将包含在表单数据中（并存在于 &lt;code&gt;params&lt;/code&gt; 中）。</target>
        </trans-unit>
        <trans-unit id="ceab9ee28778e0cd198e4bb4c0d9830c53ea674c" translate="yes" xml:space="preserve">
          <source>The first question a lot of people have when thinking about building a JSON API using Rails is: &quot;isn't using Rails to spit out some JSON overkill? Shouldn't I just use something like Sinatra?&quot;.</source>
          <target state="translated">很多人在考虑使用Rails构建JSON API的时候,第一个问题就是。&quot;用Rails来吐出一些JSON不是太夸张了吗?&quot; &quot;我是不是应该用Sinatra之类的东西?我是不是应该用Sinatra这样的东西?&quot;。</target>
        </trans-unit>
        <trans-unit id="dbb1590aff8add787236e67ae78ae8bec4308b59" translate="yes" xml:space="preserve">
          <source>The first step is to call &lt;code&gt;visit articles_path&lt;/code&gt;. This will take the test to the articles index page.</source>
          <target state="translated">第一步是调用 &lt;code&gt;visit articles_path&lt;/code&gt; 。这会将测试带到文章索引页面。</target>
        </trans-unit>
        <trans-unit id="a5f38744e3441897f904e05dbaada4d430125ad6" translate="yes" xml:space="preserve">
          <source>The first step is to create a file at &lt;code&gt;lib/generators/initializer_generator.rb&lt;/code&gt; with the following content:</source>
          <target state="translated">第一步是在 &lt;code&gt;lib/generators/initializer_generator.rb&lt;/code&gt; 中创建一个文件，内容如下：</target>
        </trans-unit>
        <trans-unit id="7647b789ce905eead162df1c2d4deef59320a6d1" translate="yes" xml:space="preserve">
          <source>The first step is to update the README file with detailed information about how to use your plugin. A few key things to include are:</source>
          <target state="translated">第一步是更新README文件,详细介绍如何使用你的插件。需要包含的几个关键内容是</target>
        </trans-unit>
        <trans-unit id="59c512882e34836962c0651a7f7bce0b3070c1e6" translate="yes" xml:space="preserve">
          <source>The first step to avoid this is to make sure all &quot;destructive&quot; actions (create, update, and destroy) can only be accessed with non-GET requests. If you're following RESTful conventions you're already doing this. However, a malicious site can still send a non-GET request to your site quite easily, and that's where the request forgery protection comes in. As the name says, it protects from forged requests.</source>
          <target state="translated">避免这种情况的第一步是确保所有的 &quot;破坏性 &quot;操作(创建、更新和销毁)只能通过非GET请求来访问。如果你遵循RESTful惯例,你已经做到了这一点。然而,一个恶意网站仍然可以很容易地向你的网站发送非GET请求,这就是请求伪造保护的作用。顾名思义,它可以防止伪造的请求。</target>
        </trans-unit>
        <trans-unit id="5109762b5d7c74ae179ab67654f35f303d74031b" translate="yes" xml:space="preserve">
          <source>The first step we'll take is adding an &lt;code&gt;edit&lt;/code&gt; action to the &lt;code&gt;ArticlesController&lt;/code&gt;, generally between the &lt;code&gt;new&lt;/code&gt; and &lt;code&gt;create&lt;/code&gt; actions, as shown:</source>
          <target state="translated">我们将采取的第一步是将 &lt;code&gt;edit&lt;/code&gt; 动作添加到 &lt;code&gt;ArticlesController&lt;/code&gt; ，通常在 &lt;code&gt;new&lt;/code&gt; 和 &lt;code&gt;create&lt;/code&gt; 动作之间，如下所示：</target>
        </trans-unit>
        <trans-unit id="ca590be262eb1b3454e67886b520ae65c0895075" translate="yes" xml:space="preserve">
          <source>The first thing that the scaffold generator does is invoke the &lt;code&gt;active_record&lt;/code&gt; generator, which generates a migration and a model for the resource. Note here, however, that the migration is called &lt;code&gt;create_blorgh_articles&lt;/code&gt; rather than the usual &lt;code&gt;create_articles&lt;/code&gt;. This is due to the &lt;code&gt;isolate_namespace&lt;/code&gt; method called in the &lt;code&gt;Blorgh::Engine&lt;/code&gt; class's definition. The model here is also namespaced, being placed at &lt;code&gt;app/models/blorgh/article.rb&lt;/code&gt; rather than &lt;code&gt;app/models/article.rb&lt;/code&gt; due to the &lt;code&gt;isolate_namespace&lt;/code&gt; call within the &lt;code&gt;Engine&lt;/code&gt; class.</source>
          <target state="translated">脚手架生成器要做的第一件事是调用 &lt;code&gt;active_record&lt;/code&gt; 生成器，该生成器为资源生成迁移和模型。但是请注意，该迁移称为 &lt;code&gt;create_blorgh_articles&lt;/code&gt; ,而不是通常的 &lt;code&gt;create_articles&lt;/code&gt; 。这是由于在 &lt;code&gt;Blorgh::Engine&lt;/code&gt; 类的定义中调用了 &lt;code&gt;isolate_namespace&lt;/code&gt; 方法。由于 &lt;code&gt;Engine&lt;/code&gt; 类中的 &lt;code&gt;isolate_namespace&lt;/code&gt; 调用，此处的模型也具有命名空间，放置在 &lt;code&gt;app/models/blorgh/article.rb&lt;/code&gt; 而非 &lt;code&gt;app/models/article.rb&lt;/code&gt; 处。</target>
        </trans-unit>
        <trans-unit id="bf247db1b15a4a0665a1fff0a86d0b8b870286c8" translate="yes" xml:space="preserve">
          <source>The first thing to generate for a blog engine is the &lt;code&gt;Article&lt;/code&gt; model and related controller. To quickly generate this, you can use the Rails scaffold generator.</source>
          <target state="translated">为博客引擎生成的第一件事是 &lt;code&gt;Article&lt;/code&gt; 模型和相关的控制器。要快速生成此文件，可以使用Rails支架生成器。</target>
        </trans-unit>
        <trans-unit id="67ac826f249d2df18239a1cdc76f0b3ffea39836" translate="yes" xml:space="preserve">
          <source>The first thing we'll want to do is create a new Rails application by running the &lt;code&gt;rails new&lt;/code&gt; command after installing Rails.</source>
          <target state="translated">我们要做的第一件事是在安装Rails之后通过运行 &lt;code&gt;rails new&lt;/code&gt; 命令创建一个新的Rails应用程序。</target>
        </trans-unit>
        <trans-unit id="0ee7285a99cf6559d8f8b5329c15cff3b597d8f9" translate="yes" xml:space="preserve">
          <source>The first timestamp (&lt;code&gt;[timestamp_1]&lt;/code&gt;) will be the current time, and the second timestamp (&lt;code&gt;[timestamp_2]&lt;/code&gt;) will be the current time plus a second. The reason for this is so that the migrations for the engine are run after any existing migrations in the application.</source>
          <target state="translated">第一个时间戳（ &lt;code&gt;[timestamp_1]&lt;/code&gt; ）将是当前时间，第二个时间戳（ &lt;code&gt;[timestamp_2]&lt;/code&gt; ）将是当前时间加一秒。这样做的原因是，引擎的迁移在应用程序中任何现有的迁移之后运行。</target>
        </trans-unit>
        <trans-unit id="3e6b2570d51c28085531d230e84b5d63f1e48272" translate="yes" xml:space="preserve">
          <source>The first two characters (&amp;ldquo;&amp;gt;) are required in case the exception happens while rendering attributes for a given tag. You can check the real cause for the exception in your logger.</source>
          <target state="translated">如果在呈现给定标签的属性时发生异常，则需要前两个字符（&amp;ldquo;&amp;gt;&amp;rdquo;）。您可以在记录器中检查导致异常的真正原因。</target>
        </trans-unit>
        <trans-unit id="72aa6535de6074bb6bd46b9d2d9f30007e42e7a1" translate="yes" xml:space="preserve">
          <source>The first way uses a &lt;a href=&quot;classmethods#method-i-has_many&quot;&gt;has_many&lt;/a&gt; association with the &lt;code&gt;:through&lt;/code&gt; option and a join model, so there are two stages of associations.</source>
          <target state="translated">第一种方法将&lt;a href=&quot;classmethods#method-i-has_many&quot;&gt;has_many&lt;/a&gt;关联与 &lt;code&gt;:through&lt;/code&gt; 选项和连接模型一起使用，因此有两个关联阶段。</target>
        </trans-unit>
        <trans-unit id="c9cd0c75ac26aeaf1392bf739898212b29b06c34" translate="yes" xml:space="preserve">
          <source>The first_name attribute must be in the object and it cannot be blank.</source>
          <target state="translated">first_name属性必须在对象中,不能为空。</target>
        </trans-unit>
        <trans-unit id="7f7deeb91723eb6307c03873779ac20d588eb92a" translate="yes" xml:space="preserve">
          <source>The first_name attribute must be in the object and it must be blank.</source>
          <target state="translated">first_name属性必须在对象中,且必须为空白。</target>
        </trans-unit>
        <trans-unit id="55bef31fcee581ecc39fbeffc0faa4743f90075a" translate="yes" xml:space="preserve">
          <source>The flash is a special part of the session which is cleared with each request. This means that values stored there will only be available in the next request, which is useful for passing error messages etc.</source>
          <target state="translated">flash是会话的一个特殊部分,每次请求都会被清除。这意味着存储在那里的值只有在下一个请求中才能使用,这对传递错误信息等很有用。</target>
        </trans-unit>
        <trans-unit id="89b509889e32d8f793986316afbb6c7d8a102d1b" translate="yes" xml:space="preserve">
          <source>The flash provides a way to pass temporary primitive-types (String, &lt;a href=&quot;../array&quot;&gt;Array&lt;/a&gt;, &lt;a href=&quot;../hash&quot;&gt;Hash&lt;/a&gt;) between actions. Anything you place in the flash will be exposed to the very next action and then cleared out. This is a great way of doing notices and alerts, such as a create action that sets &lt;code&gt;flash[:notice] = &quot;Post
successfully created&quot;&lt;/code&gt; before redirecting to a display action that can then expose the flash to its template. Actually, that exposure is automatically done.</source>
          <target state="translated">Flash提供了一种在动作之间传递临时原始类型（String，&lt;a href=&quot;../array&quot;&gt;Array&lt;/a&gt;，&lt;a href=&quot;../hash&quot;&gt;Hash&lt;/a&gt;）的方法。您放置在闪光灯中的任何东西都将暴露于下一个动作，然后清除。这是一种执行通知和警报的好方法，例如，将create &lt;code&gt;flash[:notice] = &quot;Post successfully created&quot;&lt;/code&gt; 设置为flash [：notice] =&amp;ldquo;成功完成发布&amp;rdquo;，然后将其重定向到可以将Flash暴露给其模板的显示操作。实际上，曝光是自动完成的。</target>
        </trans-unit>
        <trans-unit id="d6361541543365d2f737ca6fb21692e2f0f63b28" translate="yes" xml:space="preserve">
          <source>The following are methods available for both generators and templates for Rails.</source>
          <target state="translated">以下是Rails的生成器和模板可用的方法。</target>
        </trans-unit>
        <trans-unit id="ffee53ad3ec5b77a2f9a08d7a6e4adedc900dee5" translate="yes" xml:space="preserve">
          <source>The following bundled adapters throw the &lt;a href=&quot;../recordnotunique&quot;&gt;ActiveRecord::RecordNotUnique&lt;/a&gt; exception:</source>
          <target state="translated">以下捆绑的适配器引发&lt;a href=&quot;../recordnotunique&quot;&gt;ActiveRecord :: RecordNotUnique&lt;/a&gt;异常：</target>
        </trans-unit>
        <trans-unit id="4f1c96675ae6b9570b50e212e3ae027ef8570ca5" translate="yes" xml:space="preserve">
          <source>The following calculation methods have edge cases in October 1582, since days 5..14 just do not exist. This guide does not document their behavior around those days for brevity, but it is enough to say that they do what you would expect. That is, &lt;code&gt;Date.new(1582, 10, 4).tomorrow&lt;/code&gt; returns &lt;code&gt;Date.new(1582, 10, 15)&lt;/code&gt; and so on. Please check &lt;code&gt;test/core_ext/date_ext_test.rb&lt;/code&gt; in the Active Support test suite for expected behavior.</source>
          <target state="translated">下面的计算方法在1582年10月存在边缘情况，因为第5..14天就不存在了。为了简洁起见，本指南并未记录这些日子的行为，但足以说明他们做了您期望的事情。也就是说， &lt;code&gt;Date.new(1582, 10, 4).tomorrow&lt;/code&gt; 返回 &lt;code&gt;Date.new(1582, 10, 15)&lt;/code&gt; ，依此类推。请检查Active Support测试套件中的 &lt;code&gt;test/core_ext/date_ext_test.rb&lt;/code&gt; 以获取预期的行为。</target>
        </trans-unit>
        <trans-unit id="70d4c9f719378844b4409a52323353064e172572" translate="yes" xml:space="preserve">
          <source>The following changes are meant for upgrading your application to Rails 3.1.12, the last 3.1.x version of Rails.</source>
          <target state="translated">以下改动是为了将您的应用程序升级到 Rails 3.1.12,即 Rails 的最新 3.1.x 版本。</target>
        </trans-unit>
        <trans-unit id="a21909e1f363f954735463d953a47620a34d0ecc" translate="yes" xml:space="preserve">
          <source>The following changes are meant for upgrading your application to Rails 4.0.</source>
          <target state="translated">以下改动是为了将您的应用程序升级到 Rails 4.0。</target>
        </trans-unit>
        <trans-unit id="1f4eba11712b688c04dbd32d2ec745a16224dc68" translate="yes" xml:space="preserve">
          <source>The following changes are meant for upgrading your application to the latest 3.2.x version of Rails.</source>
          <target state="translated">以下改动是为了将您的应用程序升级到最新的3.2.x版本的Rails。</target>
        </trans-unit>
        <trans-unit id="5a17e0ad99303eed4359cff4d8da7d88c45ebc56" translate="yes" xml:space="preserve">
          <source>The following checks can also be supplied with a proc or a symbol which corresponds to a method:</source>
          <target state="translated">下面的检查也可以用proc或对应于方法的符号来提供。</target>
        </trans-unit>
        <trans-unit id="46a28b7e917344b9bee0503c9f816514c89eeea1" translate="yes" xml:space="preserve">
          <source>The following code summarizes the situation:</source>
          <target state="translated">以下代码总结了这一情况。</target>
        </trans-unit>
        <trans-unit id="c281ebe2a035df9fc9b458fe9d16552fd19ecc0a" translate="yes" xml:space="preserve">
          <source>The following concrete subclasses are included in Active Storage:</source>
          <target state="translated">下列具体的子类包含在Active Storage中。</target>
        </trans-unit>
        <trans-unit id="96657eda8232590db12df6e4e53baab705d4dc34" translate="yes" xml:space="preserve">
          <source>The following configuration options are best made in one of the environment files (environment.rb, production.rb, etc...)</source>
          <target state="translated">以下配置选项最好在其中一个环境文件中进行(environment.rb、production.rb等...)。</target>
        </trans-unit>
        <trans-unit id="30177bc5b6729d79742e2ee030efdfe4f950f932" translate="yes" xml:space="preserve">
          <source>The following configuration would queue the given job on the &lt;code&gt;production_high_priority&lt;/code&gt; queue when run in production:</source>
          <target state="translated">在生产环境中运行时，以下配置将给定作业在 &lt;code&gt;production_high_priority&lt;/code&gt; 队列中排队：</target>
        </trans-unit>
        <trans-unit id="48b002c00bb39650ea2c3d72da1338bb50128142" translate="yes" xml:space="preserve">
          <source>The following configuration would queue the provided job on the &lt;code&gt;video_server.low_priority&lt;/code&gt; queue:</source>
          <target state="translated">以下配置会将提供的作业放在 &lt;code&gt;video_server.low_priority&lt;/code&gt; 队列中：</target>
        </trans-unit>
        <trans-unit id="5f452617bef02933cc7f6d371891f371f7e4b779" translate="yes" xml:space="preserve">
          <source>The following example demonstrates an extension which can be used with or without Rails.</source>
          <target state="translated">下面的例子演示了一个可以与Rails一起使用或不使用Rails的扩展。</target>
        </trans-unit>
        <trans-unit id="99962e504be8e6840c8589ad9d05120d1cb4146f" translate="yes" xml:space="preserve">
          <source>The following features are not (yet) supported:</source>
          <target state="translated">目前还不支持以下功能。</target>
        </trans-unit>
        <trans-unit id="013180286a901d766bcc39db17dc989369dbd41a" translate="yes" xml:space="preserve">
          <source>The following form allows a user to create a &lt;code&gt;Person&lt;/code&gt; and its associated addresses.</source>
          <target state="translated">以下形式允许用户创建一个 &lt;code&gt;Person&lt;/code&gt; 及其相关地址。</target>
        </trans-unit>
        <trans-unit id="bc83f277cf7da9fe5a7029905b527298a6aa3ec1" translate="yes" xml:space="preserve">
          <source>The following format is for legacy syntax support. It will be deprecated in future versions of Rails.</source>
          <target state="translated">下面的格式是对传统语法的支持。在未来的Rails版本中,它将被废弃。</target>
        </trans-unit>
        <trans-unit id="d8548d239e9c484f9cc69b4404f594147009b4fe" translate="yes" xml:space="preserve">
          <source>The following full app-like example demonstrates how to use a Current class to facilitate easy access to the global, per-request attributes without passing them deeply around everywhere:</source>
          <target state="translated">下面的完整应用样例演示了如何使用Current类来方便地访问全局的、每个请求的属性,而不需要把它们深深地传遍各地。</target>
        </trans-unit>
        <trans-unit id="58d425cd8d652b864ae1fe65a46c847b1c3552b2" translate="yes" xml:space="preserve">
          <source>The following is a list of the most commonly used methods. Please refer to the &lt;code&gt;ActiveModel::Errors&lt;/code&gt; documentation for a list of all the available methods.</source>
          <target state="translated">以下是最常用的方法列表。请参阅 &lt;code&gt;ActiveModel::Errors&lt;/code&gt; 文档以获取所有可用方法的列表。</target>
        </trans-unit>
        <trans-unit id="12aabb098cae3591d87c543791e9cbc757195d40" translate="yes" xml:space="preserve">
          <source>The following is an excerpt from the &lt;a href=&quot;http://www.symantec.com/security_response/writeup.jsp?docid=2006-061211-4111-99&amp;amp;tabid=1&quot;&gt;Js.Yamanner@m&lt;/a&gt; Yahoo! Mail &lt;a href=&quot;http://groovin.net/stuff/yammer.txt&quot;&gt;worm&lt;/a&gt;. It appeared on June 11, 2006 and was the first webmail interface worm:</source>
          <target state="translated">以下摘录自&lt;a href=&quot;http://www.symantec.com/security_response/writeup.jsp?docid=2006-061211-4111-99&amp;amp;tabid=1&quot;&gt;Js.Yamanner@m&lt;/a&gt; Yahoo! 邮件&lt;a href=&quot;http://groovin.net/stuff/yammer.txt&quot;&gt;蠕虫&lt;/a&gt;。它出现在2006年6月11日，是第一个Webmail接口蠕虫：</target>
        </trans-unit>
        <trans-unit id="579d8c42dd4ef8c57843a057efd4713ac1241a02" translate="yes" xml:space="preserve">
          <source>The following is only a brief overview summary of the helpers available in Action View. It's recommended that you review the &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionView/Helpers.html&quot;&gt;API Documentation&lt;/a&gt;, which covers all of the helpers in more detail, but this should serve as a good starting point.</source>
          <target state="translated">以下只是Action View中可用的助手的简要概述。建议您阅读&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionView/Helpers.html&quot;&gt;API文档&lt;/a&gt;，其中更详细地介绍了所有帮助程序，但这应该是一个很好的起点。</target>
        </trans-unit>
        <trans-unit id="d28f8549e31b151dd0222afe166ac626a4278627" translate="yes" xml:space="preserve">
          <source>The following line enables YUI compression, and requires the &lt;code&gt;yui-compressor&lt;/code&gt; gem.</source>
          <target state="translated">以下行启用YUI压缩，并需要 &lt;code&gt;yui-compressor&lt;/code&gt; gem。</target>
        </trans-unit>
        <trans-unit id="f47cec262f30e06d8f4686db19c2d636b84a9271" translate="yes" xml:space="preserve">
          <source>The following line invokes &lt;code&gt;uglifier&lt;/code&gt; for JavaScript compression.</source>
          <target state="translated">以下行调用 &lt;code&gt;uglifier&lt;/code&gt; 进行JavaScript压缩。</target>
        </trans-unit>
        <trans-unit id="3a19c4339274251eb0bf0254401868be2ad510d0" translate="yes" xml:space="preserve">
          <source>The following methods are only implemented in &lt;code&gt;active_support/core_ext/date_time/calculations.rb&lt;/code&gt; as they only make sense when used with a &lt;code&gt;DateTime&lt;/code&gt; instance:</source>
          <target state="translated">以下方法仅在 &lt;code&gt;active_support/core_ext/date_time/calculations.rb&lt;/code&gt; 中实现,因为它们仅在与 &lt;code&gt;DateTime&lt;/code&gt; 实例一起使用时才有意义：</target>
        </trans-unit>
        <trans-unit id="f43faaf33bf2c0cdf7480bc0b867a519fa0ab48b" translate="yes" xml:space="preserve">
          <source>The following methods are reimplemented so you do &lt;strong&gt;not&lt;/strong&gt; need to load &lt;code&gt;active_support/core_ext/date/calculations.rb&lt;/code&gt; for these ones:</source>
          <target state="translated">下面的方法是重新实现，这样你就&lt;strong&gt;不会&lt;/strong&gt;需要负载 &lt;code&gt;active_support/core_ext/date/calculations.rb&lt;/code&gt; 这些的：</target>
        </trans-unit>
        <trans-unit id="3a5dee795f797c6e7d2a27bbce6ab149fb9ee6ba" translate="yes" xml:space="preserve">
          <source>The following methods for retrieval and query of a single associated object will be added:</source>
          <target state="translated">将增加以下方法,用于检索和查询单个关联对象。</target>
        </trans-unit>
        <trans-unit id="d5783a97e1eb9d3a76a908a48921fa3c38071460" translate="yes" xml:space="preserve">
          <source>The following methods return a &lt;code&gt;Time&lt;/code&gt; object if possible, otherwise a &lt;code&gt;DateTime&lt;/code&gt;. If set, they honor the user time zone.</source>
          <target state="translated">以下方法在可能的情况下返回 &lt;code&gt;Time&lt;/code&gt; 对象，否则返回 &lt;code&gt;DateTime&lt;/code&gt; 。如果设置，它们将遵守用户时区。</target>
        </trans-unit>
        <trans-unit id="657070cc7bdd9e1b035ac61f00a01849f933d950" translate="yes" xml:space="preserve">
          <source>The following methods skip validations, and will save the object to the database regardless of its validity. They should be used with caution.</source>
          <target state="translated">以下方法跳过了验证,无论对象是否有效,都会将其保存到数据库中。请谨慎使用这些方法。</target>
        </trans-unit>
        <trans-unit id="1f465129a4fb90e4527101bf731f2963373a56d8" translate="yes" xml:space="preserve">
          <source>The following methods trigger callbacks:</source>
          <target state="translated">以下方法会触发回调。</target>
        </trans-unit>
        <trans-unit id="cfbc7fa8f557720dad3b43f60910ef4eb36a6082" translate="yes" xml:space="preserve">
          <source>The following methods trigger validations, and will save the object to the database only if the object is valid:</source>
          <target state="translated">以下方法会触发验证,只有当对象有效时,才会将对象保存到数据库中。</target>
        </trans-unit>
        <trans-unit id="36cf22b1fa5b113b06014631879e53072ca8ace1" translate="yes" xml:space="preserve">
          <source>The following migration will remove the table 'horses' and create the table 'apples' on the way up, and the reverse on the way down.</source>
          <target state="translated">下面的迁移将删除表 &quot;马&quot;,并在上行时创建表 &quot;苹果&quot;,下行时则相反。</target>
        </trans-unit>
        <trans-unit id="e4d77afab2cb5c0e79177397fed4c21c74e5e9f3" translate="yes" xml:space="preserve">
          <source>The following options are accepted:</source>
          <target state="translated">接受以下选项:</target>
        </trans-unit>
        <trans-unit id="07868184f0badaae70ea74815fedb13374262579" translate="yes" xml:space="preserve">
          <source>The following sections give the details of each type of association, including the methods that they add and the options that you can use when declaring an association.</source>
          <target state="translated">下面的章节给出了每一种关联类型的细节,包括它们所添加的方法以及在声明关联时可以使用的选项。</target>
        </trans-unit>
        <trans-unit id="2562708af49a0bfce89266564bd6292133c83b57" translate="yes" xml:space="preserve">
          <source>The following sections outline the primary methods provided by the API:</source>
          <target state="translated">以下部分概述了API提供的主要方法。</target>
        </trans-unit>
        <trans-unit id="609de3a69e18bad3684cc06e831d02068915f957" translate="yes" xml:space="preserve">
          <source>The following setup steps are common to both examples:</source>
          <target state="translated">下面的设置步骤对两个例子都是通用的。</target>
        </trans-unit>
        <trans-unit id="68ac9096c207d6e6fc7e824e70e5b3e0bab909e1" translate="yes" xml:space="preserve">
          <source>The following symbols are special:</source>
          <target state="translated">以下符号为特殊符号。</target>
        </trans-unit>
        <trans-unit id="9ff0dc756e7049a9d9d1160dc09667c5d872c2b2" translate="yes" xml:space="preserve">
          <source>The following two forms both upload a file.</source>
          <target state="translated">以下两种形式都是上传文件。</target>
        </trans-unit>
        <trans-unit id="1b73d642411f485e10316d22f8c12e0959b92a7e" translate="yes" xml:space="preserve">
          <source>The following validations are added automatically:</source>
          <target state="translated">以下验证是自动添加的。</target>
        </trans-unit>
        <trans-unit id="392904f5f0a66b4200b7691949066a9831c1859a" translate="yes" xml:space="preserve">
          <source>The following values are considered to be blank in a Rails application:</source>
          <target state="translated">在Rails应用中,以下值被认为是空白。</target>
        </trans-unit>
        <trans-unit id="deee9509446ecf108a516105821dd5478062ac54" translate="yes" xml:space="preserve">
          <source>The foreign key column name on &lt;code&gt;from_table&lt;/code&gt;. Defaults to &lt;code&gt;to_table.singularize + &quot;_id&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;from_table&lt;/code&gt; 上的外键列名称。默认为 &lt;code&gt;to_table.singularize + &quot;_id&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3326729145fe6394d473ee7cb8400c3bea60f441" translate="yes" xml:space="preserve">
          <source>The foreign key will be named after the following pattern: &lt;code&gt;fk_rails_&amp;lt;identifier&amp;gt;&lt;/code&gt;. &lt;code&gt;identifier&lt;/code&gt; is a 10 character long string which is deterministically generated from the &lt;code&gt;from_table&lt;/code&gt; and &lt;code&gt;column&lt;/code&gt;. A custom name can be specified with the &lt;code&gt;:name&lt;/code&gt; option.</source>
          <target state="translated">外键将以以下模式命名： &lt;code&gt;fk_rails_&amp;lt;identifier&amp;gt;&lt;/code&gt; 。 &lt;code&gt;identifier&lt;/code&gt; 是一个10字符长的字符串，它是从 &lt;code&gt;from_table&lt;/code&gt; 和 &lt;code&gt;column&lt;/code&gt; 确定地生成的。可以使用 &lt;code&gt;:name&lt;/code&gt; 选项指定自定义名称。</target>
        </trans-unit>
        <trans-unit id="090e93106d4fe15776dd64af77237f6b9a5104b9" translate="yes" xml:space="preserve">
          <source>The form builder used also determines what happens when you do</source>
          <target state="translated">所使用的表单构建器也决定了当你做了</target>
        </trans-unit>
        <trans-unit id="60342ada4ced98a39f41de5586ec3ad3944ed28b" translate="yes" xml:space="preserve">
          <source>The form needs to use a different URL in order to go somewhere else. This can be done quite simply with the &lt;code&gt;:url&lt;/code&gt; option of &lt;code&gt;form_with&lt;/code&gt;. Typically in Rails, the action that is used for new form submissions like this is called &quot;create&quot;, and so the form should be pointed to that action.</source>
          <target state="translated">表单需要使用其他URL才能到达其他地方。这可以通过 &lt;code&gt;form_with&lt;/code&gt; 的 &lt;code&gt;:url&lt;/code&gt; 选项非常简单地完成。通常在Rails中，用于这种新表单提交的操作称为&amp;ldquo;创建&amp;rdquo;，因此表单应指向该操作。</target>
        </trans-unit>
        <trans-unit id="db75dbcbdc0e093bbfc719f467a241d7e67a2520" translate="yes" xml:space="preserve">
          <source>The form will be making a &lt;code&gt;POST&lt;/code&gt; request to &lt;code&gt;/articles/:article_id/comments&lt;/code&gt;, which will correspond with the &lt;code&gt;create&lt;/code&gt; action in &lt;code&gt;Blorgh::CommentsController&lt;/code&gt;. This action needs to be created, which can be done by putting the following lines inside the class definition in &lt;code&gt;app/controllers/blorgh/comments_controller.rb&lt;/code&gt;:</source>
          <target state="translated">表单将向 &lt;code&gt;/articles/:article_id/comments&lt;/code&gt; 发出 &lt;code&gt;POST&lt;/code&gt; 请求，该请求将与 &lt;code&gt;Blorgh::CommentsController&lt;/code&gt; 的 &lt;code&gt;create&lt;/code&gt; 动作相对应。需要创建此操作，可以通过 &lt;code&gt;app/controllers/blorgh/comments_controller.rb&lt;/code&gt; 放入app / controllers / blorgh / comments_controller.rb中的类定义中来完成：</target>
        </trans-unit>
        <trans-unit id="7fbb9ae7852d624b58a411bef42e33a47388b020" translate="yes" xml:space="preserve">
          <source>The form's authenticity parameter. Override to provide your own.</source>
          <target state="translated">表格的真实性参数。覆盖提供自己的参数。</target>
        </trans-unit>
        <trans-unit id="3a13d407b622c23af95f052897df47515f94470f" translate="yes" xml:space="preserve">
          <source>The format of a fixture file looks like this:</source>
          <target state="translated">夹具文件的格式是这样的。</target>
        </trans-unit>
        <trans-unit id="2f7cb81c43eb0277bcb09abdbdfa4f95cbea41c6" translate="yes" xml:space="preserve">
          <source>The format of the schema dump generated by Rails is controlled by the &lt;code&gt;config.active_record.schema_format&lt;/code&gt; setting in &lt;code&gt;config/application.rb&lt;/code&gt;. By default, the format is &lt;code&gt;:ruby&lt;/code&gt;, but can also be set to &lt;code&gt;:sql&lt;/code&gt;.</source>
          <target state="translated">Rails生成的模式转储的格式由 &lt;code&gt;config/application.rb&lt;/code&gt; 中的 &lt;code&gt;config.active_record.schema_format&lt;/code&gt; 设置控制。默认情况下，格式为 &lt;code&gt;:ruby&lt;/code&gt; ，但也可以设置为 &lt;code&gt;:sql&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b2bcbf7d68f15e27fc0dd857f9971c15c0d46bd3" translate="yes" xml:space="preserve">
          <source>The former is the main one. The latter is there mostly for backwards compatibility reasons, in case the application has something in &lt;code&gt;config.autoload_once_paths&lt;/code&gt; (this is discouraged nowadays).</source>
          <target state="translated">前者是主要的。后者主要是出于向后兼容性的原因，以防应用程序在 &lt;code&gt;config.autoload_once_paths&lt;/code&gt; 中包含某些内容（如今不建议使用）。</target>
        </trans-unit>
        <trans-unit id="82fadfffe8a017d8cc4cbac60f0f81c907522668" translate="yes" xml:space="preserve">
          <source>The full list of options for the plugin generator may be seen by typing:</source>
          <target state="translated">完整的插件生成器选项列表可以通过键入来查看。</target>
        </trans-unit>
        <trans-unit id="d4bde2b1b890d3a726aec51e0fcf264cdac863fa" translate="yes" xml:space="preserve">
          <source>The full request object is available via the request accessor and is primarily used to query for HTTP headers:</source>
          <target state="translated">通过请求访问器可以获得完整的请求对象,主要用于查询HTTP头信息。</target>
        </trans-unit>
        <trans-unit id="15558a932ce7d5ec8c2377322dcd833861fe3a97" translate="yes" xml:space="preserve">
          <source>The full set of methods that can be used in this block are as follows:</source>
          <target state="translated">本块可使用的全部方法如下。</target>
        </trans-unit>
        <trans-unit id="46bd57d06a4ef9cdd161560d193f0e40b2eb8282" translate="yes" xml:space="preserve">
          <source>The general layout of a Rails application.</source>
          <target state="translated">Rails应用的总体布局。</target>
        </trans-unit>
        <trans-unit id="e7eeed51b86202389059cb757e688e04f990154f" translate="yes" xml:space="preserve">
          <source>The generated ID for a given label is constant, so we can discover any fixture's ID without loading anything, as long as we know the label.</source>
          <target state="translated">给定标签的生成ID是恒定的,所以只要我们知道标签,就可以在不加载任何东西的情况下发现任何灯具的ID。</target>
        </trans-unit>
        <trans-unit id="c89bd0c48d5da0f02788cadbf5279ad7b0b6ae74" translate="yes" xml:space="preserve">
          <source>The generated attributes are escaped by default. This can be disabled using &lt;code&gt;escape_attributes&lt;/code&gt;.</source>
          <target state="translated">默认情况下，将对生成的属性进行转义。可以使用 &lt;code&gt;escape_attributes&lt;/code&gt; 禁用它。</target>
        </trans-unit>
        <trans-unit id="83ab849c0e0913321228afc5541b5041a5ce971d" translate="yes" xml:space="preserve">
          <source>The generated model inherits from &lt;code&gt;ApplicationMailer&lt;/code&gt; which in turn inherits from &lt;code&gt;ActionMailer::Base&lt;/code&gt;. A mailer model defines methods used to generate an email message. In these methods, you can setup variables to be used in the mailer views, options on the mail itself such as the &lt;code&gt;:from&lt;/code&gt; address, and attachments.</source>
          <target state="translated">生成的模型继承自 &lt;code&gt;ApplicationMailer&lt;/code&gt; ，后者又继承自 &lt;code&gt;ActionMailer::Base&lt;/code&gt; 。邮件程序模型定义用于生成电子邮件的方法。在这些方法中，您可以设置要在邮件视图中使用的变量，邮件本身的选项，例如 &lt;code&gt;:from&lt;/code&gt; 地址和附件。</target>
        </trans-unit>
        <trans-unit id="9642127f67417f40c4b17b7ca6fba9837a5b3709" translate="yes" xml:space="preserve">
          <source>The generated model will look like this:</source>
          <target state="translated">生成的模型会是这样的。</target>
        </trans-unit>
        <trans-unit id="8ebb94072c2ba22e483813ad1a85b01320851bc6" translate="yes" xml:space="preserve">
          <source>The generation of the reader instance method can be prevented by setting &lt;code&gt;:instance_reader&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; and the generation of the writer instance method can be prevented by setting &lt;code&gt;:instance_writer&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt;. Generation of both methods can be prevented by setting &lt;code&gt;:instance_accessor&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt;. In all cases, the value must be exactly &lt;code&gt;false&lt;/code&gt; and not any false value.</source>
          <target state="translated">读取器的实例方法的生成可以通过设置能够防止 &lt;code&gt;:instance_reader&lt;/code&gt; 到 &lt;code&gt;false&lt;/code&gt; ，并且可以通过设置能够防止写入器的实例方法的产生 &lt;code&gt;:instance_writer&lt;/code&gt; 到 &lt;code&gt;false&lt;/code&gt; 。可以通过将 &lt;code&gt;:instance_accessor&lt;/code&gt; 设置为 &lt;code&gt;false&lt;/code&gt; 来防止两种方法的生成。在所有情况下，该值都必须完全为 &lt;code&gt;false&lt;/code&gt; 而不是任何假值。</target>
        </trans-unit>
        <trans-unit id="d4bf2ad59eb23553637bb6ad74e918f26165d9a9" translate="yes" xml:space="preserve">
          <source>The generation of the reader instance method can be prevented by setting the option &lt;code&gt;:instance_reader&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">可以通过将选项 &lt;code&gt;:instance_reader&lt;/code&gt; 设置为 &lt;code&gt;false&lt;/code&gt; 来防止生成读取器实例方法。</target>
        </trans-unit>
        <trans-unit id="96923220f999eee1905ec339692e505269b44e49" translate="yes" xml:space="preserve">
          <source>The generation of the writer instance method can be prevented by setting the option &lt;code&gt;:instance_writer&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">通过将选项 &lt;code&gt;:instance_writer&lt;/code&gt; 设置为 &lt;code&gt;false&lt;/code&gt; 可以防止writer实例方法的生成。</target>
        </trans-unit>
        <trans-unit id="03b7c6a99d34c4aaf65fc166f48dc469d58dfbbc" translate="yes" xml:space="preserve">
          <source>The generator checks that there exist the directories for models, controllers, helpers, layouts, functional and unit tests, stylesheets, creates the views, controller, model and database migration for HighScore (creating the &lt;code&gt;high_scores&lt;/code&gt; table and fields), takes care of the route for the &lt;strong&gt;resource&lt;/strong&gt;, and new tests for everything.</source>
          <target state="translated">生成器检查是否存在模型，控制器，助手，布局，功能和单元测试，样式表的目录，为 &lt;code&gt;high_scores&lt;/code&gt; 创建视图，控制器，模型和数据库迁移（创建high_scores表和字段），并处理路由对于&lt;strong&gt;资源&lt;/strong&gt;，对于一切新的测试。</target>
        </trans-unit>
        <trans-unit id="7b39f749f99948f5914a83edc800a368fad145a9" translate="yes" xml:space="preserve">
          <source>The generators you can use to create them.</source>
          <target state="translated">你可以使用的生成器来创建它们。</target>
        </trans-unit>
        <trans-unit id="4a11e822e465e85b59074ad8222bc49591cdfb25" translate="yes" xml:space="preserve">
          <source>The goals of testing your mailer classes are to ensure that:</source>
          <target state="translated">测试你的邮件类的目标是确保。</target>
        </trans-unit>
        <trans-unit id="362978286aa17bd104be42963df61dd594f4d276" translate="yes" xml:space="preserve">
          <source>The guides for earlier releases: &lt;a href=&quot;https://guides.rubyonrails.org/v5.2/&quot;&gt;Rails 5.2&lt;/a&gt;, &lt;a href=&quot;https://guides.rubyonrails.org/v5.1/&quot;&gt;Rails 5.1&lt;/a&gt;, &lt;a href=&quot;https://guides.rubyonrails.org/v5.0/&quot;&gt;Rails 5.0&lt;/a&gt;, &lt;a href=&quot;https://guides.rubyonrails.org/v4.2/&quot;&gt;Rails 4.2&lt;/a&gt;, &lt;a href=&quot;https://guides.rubyonrails.org/v4.1/&quot;&gt;Rails 4.1&lt;/a&gt;, &lt;a href=&quot;https://guides.rubyonrails.org/v4.0/&quot;&gt;Rails 4.0&lt;/a&gt;, &lt;a href=&quot;https://guides.rubyonrails.org/v3.2/&quot;&gt;Rails 3.2&lt;/a&gt;, &lt;a href=&quot;https://guides.rubyonrails.org/v3.1/&quot;&gt;Rails 3.1&lt;/a&gt;, &lt;a href=&quot;https://guides.rubyonrails.org/v3.0/&quot;&gt;Rails 3.0&lt;/a&gt;, and &lt;a href=&quot;https://guides.rubyonrails.org/v2.3/&quot;&gt;Rails 2.3&lt;/a&gt;.</source>
          <target state="translated">较早版本的指南：&lt;a href=&quot;https://guides.rubyonrails.org/v5.2/&quot;&gt;Rails 5.2&lt;/a&gt;，&lt;a href=&quot;https://guides.rubyonrails.org/v5.1/&quot;&gt;Rails 5.1&lt;/a&gt;，&lt;a href=&quot;https://guides.rubyonrails.org/v5.0/&quot;&gt;Rails 5.0&lt;/a&gt;，&lt;a href=&quot;https://guides.rubyonrails.org/v4.2/&quot;&gt;Rails 4.2&lt;/a&gt;，&lt;a href=&quot;https://guides.rubyonrails.org/v4.1/&quot;&gt;Rails 4.1&lt;/a&gt;，&lt;a href=&quot;https://guides.rubyonrails.org/v4.0/&quot;&gt;Rails 4.0&lt;/a&gt;，&lt;a href=&quot;https://guides.rubyonrails.org/v3.2/&quot;&gt;Rails 3.2&lt;/a&gt;，&lt;a href=&quot;https://guides.rubyonrails.org/v3.1/&quot;&gt;Rails 3.1&lt;/a&gt;，&lt;a href=&quot;https://guides.rubyonrails.org/v3.0/&quot;&gt;Rails 3.0&lt;/a&gt;和&lt;a href=&quot;https://guides.rubyonrails.org/v2.3/&quot;&gt;Rails 2.3&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0769462d4182a8d7e15fc285a42e4195eb77d38c" translate="yes" xml:space="preserve">
          <source>The hash keys are the attribute names, and the hash values are the original attribute values in the database (as opposed to the in-memory values about to be saved).</source>
          <target state="translated">哈希键是属性名,哈希值是数据库中的原始属性值(而不是即将保存的内存值)。</target>
        </trans-unit>
        <trans-unit id="058d050ee7d540ed9e563b384b80cef28a9d82ce" translate="yes" xml:space="preserve">
          <source>The hash passed to the mail method allows you to specify any header that a &lt;code&gt;Mail::Message&lt;/code&gt; will accept (any valid email header including optional fields).</source>
          <target state="translated">传递给mail方法的哈希值使您可以指定 &lt;code&gt;Mail::Message&lt;/code&gt; 将接受的任何标头（任何有效的电子邮件标头，包括可选字段）。</target>
        </trans-unit>
        <trans-unit id="6f5c290181dabdf6559a851bcac9bcc0636e995f" translate="yes" xml:space="preserve">
          <source>The helper gets the name of the favicon file as first argument, which defaults to &amp;ldquo;favicon.ico&amp;rdquo;, and also supports &lt;code&gt;:rel&lt;/code&gt; and &lt;code&gt;:type&lt;/code&gt; options to override their defaults, &amp;ldquo;shortcut icon&amp;rdquo; and &amp;ldquo;image/x-icon&amp;rdquo; respectively:</source>
          <target state="translated">帮助程序将favicon文件的名称作为第一个参数，默认为&amp;ldquo; favicon.ico&amp;rdquo;，并且还支持 &lt;code&gt;:rel&lt;/code&gt; 和 &lt;code&gt;:type&lt;/code&gt; 选项以覆盖其默认设置，分别是&amp;ldquo;快捷方式图标&amp;rdquo;和&amp;ldquo; image / x-icon&amp;rdquo;：</target>
        </trans-unit>
        <trans-unit id="c8f3b49cd9e3cb6be9a8ff2c3fb102ef6cfdd129" translate="yes" xml:space="preserve">
          <source>The helper inside &lt;code&gt;app/helpers/blorgh/articles_helper.rb&lt;/code&gt; is also namespaced:</source>
          <target state="translated">助手里面 &lt;code&gt;app/helpers/blorgh/articles_helper.rb&lt;/code&gt; 也被命名空间：</target>
        </trans-unit>
        <trans-unit id="3b93bd5de48450a8776f0c3f464e327c151c1f12" translate="yes" xml:space="preserve">
          <source>The helper method &lt;code&gt;full_messages&lt;/code&gt; uses &lt;code&gt;humanize&lt;/code&gt; as a fallback to include attribute names:</source>
          <target state="translated">辅助方法 &lt;code&gt;full_messages&lt;/code&gt; 使用 &lt;code&gt;humanize&lt;/code&gt; 作为后备，以包括属性名称：</target>
        </trans-unit>
        <trans-unit id="c03db03c2478cc4beefab4ef9e28af6f4d551a14" translate="yes" xml:space="preserve">
          <source>The helper methods called on the form builder are identical to the model object helpers except that it is not necessary to specify which object is being edited since this is already managed by the form builder.</source>
          <target state="translated">在表单构建器上调用的帮助方法与模型对象帮助方法相同,只是不需要指定正在编辑的对象,因为这已经由表单构建器管理。</target>
        </trans-unit>
        <trans-unit id="48e6e57e3a5816d496cf9346b7b10113bd662a20" translate="yes" xml:space="preserve">
          <source>The hooks inside the Rails framework for instrumentation.</source>
          <target state="translated">Rails框架内部的钩子,用于工具化。</target>
        </trans-unit>
        <trans-unit id="4b21621570d8c2b68888621ecdd2bf376d3c4875" translate="yes" xml:space="preserve">
          <source>The hooks lookup is similar as above:</source>
          <target state="translated">钩子的查找与上面类似。</target>
        </trans-unit>
        <trans-unit id="465f83962e2239cb19550b0b54f391531039b74a" translate="yes" xml:space="preserve">
          <source>The hostname used for this request.</source>
          <target state="translated">本次请求使用的主机名。</target>
        </trans-unit>
        <trans-unit id="df619d8c4ceafae7f4ef07c3343b96da7296ae57" translate="yes" xml:space="preserve">
          <source>The hostname used in the last request.</source>
          <target state="translated">上次请求中使用的主机名。</target>
        </trans-unit>
        <trans-unit id="d729a8f7d6c2e7248811f11389969b4f75002255" translate="yes" xml:space="preserve">
          <source>The hostname's first &lt;code&gt;n&lt;/code&gt; segments, starting from the right (the TLD).</source>
          <target state="translated">主机名的前 &lt;code&gt;n&lt;/code&gt; 个分段，从右侧（TLD）开始。</target>
        </trans-unit>
        <trans-unit id="42fa67d833d76b1422c347fe803ccf6a40acbd46" translate="yes" xml:space="preserve">
          <source>The i18n library takes a &lt;strong&gt;pragmatic approach&lt;/strong&gt; to locale keys (after &lt;a href=&quot;https://groups.google.com/forum/#!topic/rails-i18n/FN7eLH2-lHA&quot;&gt;some discussion&lt;/a&gt;), including only the &lt;em&gt;locale&lt;/em&gt; (&quot;language&quot;) part, like &lt;code&gt;:en&lt;/code&gt;, &lt;code&gt;:pl&lt;/code&gt;, not the &lt;em&gt;region&lt;/em&gt; part, like &lt;code&gt;:en-US&lt;/code&gt; or &lt;code&gt;:en-GB&lt;/code&gt;, which are traditionally used for separating &quot;languages&quot; and &quot;regional setting&quot; or &quot;dialects&quot;. Many international applications use only the &quot;language&quot; element of a locale such as &lt;code&gt;:cs&lt;/code&gt;, &lt;code&gt;:th&lt;/code&gt;, or &lt;code&gt;:es&lt;/code&gt; (for Czech, Thai, and Spanish). However, there are also regional differences within different language groups that may be important. For instance, in the &lt;code&gt;:en-US&lt;/code&gt; locale you would have $ as a currency symbol, while in &lt;code&gt;:en-GB&lt;/code&gt;, you would have &amp;pound;. Nothing stops you from separating regional and other settings in this way: you just have to provide full &quot;English - United Kingdom&quot; locale in a &lt;code&gt;:en-GB&lt;/code&gt; dictionary.</source>
          <target state="translated">i18n库采用&lt;strong&gt;务实的方法&lt;/strong&gt;来处理区域设置键（经过&lt;a href=&quot;https://groups.google.com/forum/#!topic/rails-i18n/FN7eLH2-lHA&quot;&gt;一番讨论&lt;/a&gt;），仅包括&lt;em&gt;区域设置&lt;/em&gt;（&amp;ldquo;语言&amp;rdquo;）部分，如 &lt;code&gt;:en&lt;/code&gt; ， &lt;code&gt;:pl&lt;/code&gt; ，而不包括&lt;em&gt;区域&lt;/em&gt;部分，如 &lt;code&gt;:en-US&lt;/code&gt; 或 &lt;code&gt;:en-GB&lt;/code&gt; 。传统上用于分隔&amp;ldquo;语言&amp;rdquo;和&amp;ldquo;区域设置&amp;rdquo;或&amp;ldquo;方言&amp;rdquo;。许多国际应用程序仅使用语言环境的&amp;ldquo;语言&amp;rdquo;元素，例如 &lt;code&gt;:cs&lt;/code&gt; ， &lt;code&gt;:th&lt;/code&gt; 或 &lt;code&gt;:es&lt;/code&gt; （对于捷克语，泰语和西班牙语）。但是，在不同语言组中也可能存在重要的地区差异。例如，在 &lt;code&gt;:en-US&lt;/code&gt; 语言环境中，您将$作为货币符号，而在 &lt;code&gt;:en-GB&lt;/code&gt; 中，您将具有&amp;pound;。没有什么能阻止您以这种方式分隔区域设置和其他设置：您只需要在 &lt;code&gt;:en-GB&lt;/code&gt; 词典中提供完整的&amp;ldquo;英语-英国&amp;rdquo;语言环境即可。</target>
        </trans-unit>
        <trans-unit id="7f53afb305af92309a3fdf213ca6a51b59f8138a" translate="yes" xml:space="preserve">
          <source>The idea of a parent namespace is at the core of the autoloading algorithms and helps explain and understand their motivation intuitively, but as you see that metaphor leaks easily. Given an edge case to reason about, take always into account that by &quot;parent namespace&quot; the guide means exactly that specific string derivation.</source>
          <target state="translated">父名空间的概念是自动加载算法的核心,有助于直观地解释和理解其动机,但正如你所看到的那样,这种隐喻很容易泄露。给定一个边缘案例进行推理,要始终考虑到指南中所说的 &quot;父命名空间 &quot;正是指那个特定的字符串推导。</target>
        </trans-unit>
        <trans-unit id="5f19b540681118fdd893c06bdeb7c6925c5febfb" translate="yes" xml:space="preserve">
          <source>The immutable requirement is enforced by Active Record by freezing any object assigned as a value object. Attempting to change it afterwards will result in a &lt;code&gt;RuntimeError&lt;/code&gt;.</source>
          <target state="translated">Active Record通过冻结分配为值对象的任何对象来强制执行不可变要求。之后尝试更改它会导致 &lt;code&gt;RuntimeError&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="54381883e6c09b4dc43d4ac46bee21b9cc5395a7" translate="yes" xml:space="preserve">
          <source>The implicit block given to &lt;code&gt;link_to_unless_current&lt;/code&gt; is evaluated if the current action is the action given. So, if we had a comments page and wanted to render a &amp;ldquo;Go Back&amp;rdquo; link instead of a link to the comments page, we could do something like this&amp;hellip;</source>
          <target state="translated">如果当前动作是给定的动作，则会评估给定 &lt;code&gt;link_to_unless_current&lt;/code&gt; 的隐式块。因此，如果我们有一个评论页面，并且想要呈现&amp;ldquo;返回&amp;rdquo;链接而不是指向评论页面的链接，我们可以做这样的事情&amp;hellip;&amp;hellip;</target>
        </trans-unit>
        <trans-unit id="ae13bd63f4cdb460db67da0c75a77a0f55f7ea5c" translate="yes" xml:space="preserve">
          <source>The inbound emails are turned into &lt;code&gt;InboundEmail&lt;/code&gt; records using Active Record and feature lifecycle tracking, storage of the original email on cloud storage via Active Storage, and responsible data handling with on-by-default incineration.</source>
          <target state="translated">使用Active Record和功能生命周期跟踪将入站电子邮件转换为 &lt;code&gt;InboundEmail&lt;/code&gt; 记录，通过Active Storage将原始电子邮件存储在云存储上，并通过默认焚化进行负责的数据处理。</target>
        </trans-unit>
        <trans-unit id="869236c95820445e727ad51587da6b23b472304d" translate="yes" xml:space="preserve">
          <source>The index view (&lt;code&gt;app/views/users/index.html.erb&lt;/code&gt;) contains:</source>
          <target state="translated">索引视图（ &lt;code&gt;app/views/users/index.html.erb&lt;/code&gt; ）包含：</target>
        </trans-unit>
        <trans-unit id="b32f9511f66640e563df5e34e2c7c0a6fab3ddf3" translate="yes" xml:space="preserve">
          <source>The index will be named after the table and the column name(s), unless you pass &lt;code&gt;:name&lt;/code&gt; as an option.</source>
          <target state="translated">索引将以表和列名命名，除非您通过 &lt;code&gt;:name&lt;/code&gt; 作为选项。</target>
        </trans-unit>
        <trans-unit id="648e623dacab4b9af4b014df64075bd0547875ce" translate="yes" xml:space="preserve">
          <source>The initializer wants to create a &lt;code&gt;BellX1::FlightModel&lt;/code&gt; and nesting has &lt;code&gt;BellX1&lt;/code&gt;, that looks good. But if the default flight model is loaded and the one for the Bell-X1 is not, the interpreter is able to resolve the top-level &lt;code&gt;FlightModel&lt;/code&gt; and autoloading is thus not triggered for &lt;code&gt;BellX1::FlightModel&lt;/code&gt;.</source>
          <target state="translated">初始化程序要创建一个 &lt;code&gt;BellX1::FlightModel&lt;/code&gt; 并且嵌套具有 &lt;code&gt;BellX1&lt;/code&gt; ，看起来不错。但是，如果加载了默认的飞行模型，但没有加载Bell-X1的模型，则解释器能够解析顶级 &lt;code&gt;FlightModel&lt;/code&gt; ，因此不会为 &lt;code&gt;BellX1::FlightModel&lt;/code&gt; 触发自动加载。</target>
        </trans-unit>
        <trans-unit id="7c80d611760f565bf27d46366137ae2e4fd9731f" translate="yes" xml:space="preserve">
          <source>The instrumentation API provided by Active Support allows developers to provide hooks which other developers may hook into. There are several of these within the &lt;a href=&quot;#rails-framework-hooks&quot;&gt;Rails framework&lt;/a&gt;. With this API, developers can choose to be notified when certain events occur inside their application or another piece of Ruby code.</source>
          <target state="translated">Active Support提供的工具API允许开发人员提供其他开发人员可以挂钩的挂钩。在&lt;a href=&quot;#rails-framework-hooks&quot;&gt;Rails框架中&lt;/a&gt;有几种。使用此API，开发人员可以选择在其应用程序或另一段Ruby代码内部发生某些事件时得到通知。</target>
        </trans-unit>
        <trans-unit id="44b71bf98dd0cdf4cb43c535aaee7d46af03287d" translate="yes" xml:space="preserve">
          <source>The intended use case for this method is to escape JSON strings before including them inside a script tag to avoid XSS vulnerability:</source>
          <target state="translated">该方法的预期用例是在将JSON字符串包含在脚本标签中之前对其进行转义,以避免XSS漏洞。</target>
        </trans-unit>
        <trans-unit id="79f2c35a7b9a90149c8abcd1a54d9b8fc7aa6157" translate="yes" xml:space="preserve">
          <source>The interaction &lt;em&gt;changes the state&lt;/em&gt; of the resource in a way that the user would perceive (e.g., a subscription to a service), or</source>
          <target state="translated">交互以用户会感知的方式（例如，对服务的订阅）&lt;em&gt;更改&lt;/em&gt;资源&lt;em&gt;状态&lt;/em&gt;，或者</target>
        </trans-unit>
        <trans-unit id="a5762c80b87c2c4c3a9e18dfd534cadedd2d6b35" translate="yes" xml:space="preserve">
          <source>The interaction is more &lt;em&gt;like a question&lt;/em&gt; (i.e., it is a safe operation such as a query, read operation, or lookup).</source>
          <target state="translated">交互更像&lt;em&gt;是一个问题&lt;/em&gt;（即，它是一种安全的操作，例如查询，读取操作或查找）。</target>
        </trans-unit>
        <trans-unit id="7962fec553e1f444a5bd713ae1675baca557a15e" translate="yes" xml:space="preserve">
          <source>The interaction is more &lt;em&gt;like an order&lt;/em&gt;, or</source>
          <target state="translated">互动&lt;em&gt;更像是订单&lt;/em&gt;，或者</target>
        </trans-unit>
        <trans-unit id="95f3d55c11448516ef4cf2c075e8257c9652b19b" translate="yes" xml:space="preserve">
          <source>The interesting part for a Rails app is the last line, &lt;code&gt;server.run&lt;/code&gt;. Here we encounter the &lt;code&gt;wrapped_app&lt;/code&gt; method again, which this time we're going to explore more (even though it was executed before, and thus memoized by now).</source>
          <target state="translated">Rails应用程序有趣的部分是最后一行 &lt;code&gt;server.run&lt;/code&gt; 。在这里，我们再次遇到了 &lt;code&gt;wrapped_app&lt;/code&gt; 方法，这一次我们将进行更多的探索（即使它是以前执行的，因此现在已经被记住了）。</target>
        </trans-unit>
        <trans-unit id="b459fda0fb539be04b0a909ef219de4e5a2b39af" translate="yes" xml:space="preserve">
          <source>The interpretation of a parent namespace when thinking about classes and modules is tricky though. Let's consider a module M named &quot;A::B&quot;:</source>
          <target state="translated">不过在考虑类和模块时,对父名空间的解释是很棘手的。让我们考虑一个名为 &quot;A::B &quot;的模块M。</target>
        </trans-unit>
        <trans-unit id="b088dc4a33ac210d77c1458749a93ed8bf4c34fc" translate="yes" xml:space="preserve">
          <source>The inverse of &lt;code&gt;String#include?&lt;/code&gt;. Returns true if the string does not include the other string.</source>
          <target state="translated">&lt;code&gt;String#include?&lt;/code&gt; 的反函数？。如果字符串不包含其他字符串，则返回true。</target>
        </trans-unit>
        <trans-unit id="d3b045c64486cd3543aa4c92eac840cd5ff4ee1a" translate="yes" xml:space="preserve">
          <source>The inverse of &lt;code&gt;pluralize&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;pluralize&lt;/code&gt; 的逆：</target>
        </trans-unit>
        <trans-unit id="5dd1404e8fb1e4a2f3428a87a501d557bbc475c1" translate="yes" xml:space="preserve">
          <source>The join table should not have a primary key or a model associated with it. You must manually generate the join table with a migration such as this:</source>
          <target state="translated">连接表不应该有主键或与之相关的模型。你必须用这样的迁移方式手动生成连接表。</target>
        </trans-unit>
        <trans-unit id="052d7b38c38526d06bad1945b5b98f5f66c7d437" translate="yes" xml:space="preserve">
          <source>The key for the error message in this case is &lt;code&gt;:blank&lt;/code&gt;. Active Record will look up this key in the namespaces:</source>
          <target state="translated">在这种情况下，错误消息的密钥是 &lt;code&gt;:blank&lt;/code&gt; 。Active Record将在名称空间中查找此键：</target>
        </trans-unit>
        <trans-unit id="a03e001b53b8dfaae3a1107e4ec8266dabdface7" translate="yes" xml:space="preserve">
          <source>The keys must be the fixture names, that coincide with the short paths to the fixture files.</source>
          <target state="translated">键必须是夹具名称,与夹具文件的短路径一致。</target>
        </trans-unit>
        <trans-unit id="1d3e3365229f6940a1c09a4628bdc8177d9404b5" translate="yes" xml:space="preserve">
          <source>The keys of the &lt;code&gt;:addresses_attributes&lt;/code&gt; hash are unimportant, they need merely be different for each address.</source>
          <target state="translated">&lt;code&gt;:addresses_attributes&lt;/code&gt; 哈希的关键字并不重要，每个地址只需要不同即可。</target>
        </trans-unit>
        <trans-unit id="437996ad7c0e04b8e7fa0c7a7527aa0f661baec9" translate="yes" xml:space="preserve">
          <source>The keys of the hash which is the value for &lt;code&gt;:posts_attributes&lt;/code&gt; are ignored in this case. However, it is not allowed to use &lt;code&gt;'id'&lt;/code&gt; or &lt;code&gt;:id&lt;/code&gt; for one of such keys, otherwise the hash will be wrapped in an array and interpreted as an attribute hash for a single post.</source>
          <target state="translated">在这种情况下，将忽略作为 &lt;code&gt;:posts_attributes&lt;/code&gt; 值的哈希键。但是，不允许对其中一个键使用 &lt;code&gt;'id'&lt;/code&gt; 或 &lt;code&gt;:id&lt;/code&gt; ，否则哈希将包装在数组中并解释为单个帖子的属性哈希。</target>
        </trans-unit>
        <trans-unit id="bff0237eaabfc7db91da8d08231c80475092cb7e" translate="yes" xml:space="preserve">
          <source>The keys used in a cache can be any object that responds to either &lt;code&gt;cache_key&lt;/code&gt; or &lt;code&gt;to_param&lt;/code&gt;. You can implement the &lt;code&gt;cache_key&lt;/code&gt; method on your classes if you need to generate custom keys. Active Record will generate keys based on the class name and record id.</source>
          <target state="translated">高速缓存中使用的键可以是任何响应 &lt;code&gt;cache_key&lt;/code&gt; 或 &lt;code&gt;to_param&lt;/code&gt; 的对象。如果需要生成自定义键，则可以在类上实现 &lt;code&gt;cache_key&lt;/code&gt; 方法。Active Record将基于类名称和记录ID生成密钥。</target>
        </trans-unit>
        <trans-unit id="f7776f2c4b88c4d6b494aa2092d34ebd03edd32c" translate="yes" xml:space="preserve">
          <source>The keys you use on &lt;code&gt;Rails.cache&lt;/code&gt; will not be the same as those actually used with the storage engine. They may be modified with a namespace or altered to fit technology backend constraints. This means, for instance, that you can't save values with &lt;code&gt;Rails.cache&lt;/code&gt; and then try to pull them out with the &lt;code&gt;dalli&lt;/code&gt; gem. However, you also don't need to worry about exceeding the memcached size limit or violating syntax rules.</source>
          <target state="translated">您在 &lt;code&gt;Rails.cache&lt;/code&gt; 上使用的密钥将与存储引擎实际使用的密钥不同。可以使用名称空间对其进行修改，也可以对其进行更改以适合技术后端约束。例如，这意味着您无法使用 &lt;code&gt;Rails.cache&lt;/code&gt; 保存值，然后尝试使用 &lt;code&gt;dalli&lt;/code&gt; gem 将其拉出。但是，您也不必担心超出内存缓存大小限制或违反语法规则。</target>
        </trans-unit>
        <trans-unit id="9a7613a9e24c1242511419e1adb78550681bc52d" translate="yes" xml:space="preserve">
          <source>The keyword arguments :from and :to can be given to specify the expected initial value and the expected value after the block was executed.</source>
          <target state="translated">关键字参数:from和:to可以用来指定预期的初始值和块执行后的预期值。</target>
        </trans-unit>
        <trans-unit id="f3349b4c7e79a27feec027e09eaaf6fe241addad" translate="yes" xml:space="preserve">
          <source>The label of the current fixture is always available as a column value:</source>
          <target state="translated">当前灯具的标签总是作为一个列值可用。</target>
        </trans-unit>
        <trans-unit id="5a7bea3f7592b166f30ea2c09e8e9abb723ec914" translate="yes" xml:space="preserve">
          <source>The last characters will be replaced with the &lt;code&gt;:omission&lt;/code&gt; string (defaults to &amp;ldquo;&amp;hellip;&amp;rdquo;) for a total length not exceeding &lt;code&gt;length&lt;/code&gt;:</source>
          <target state="translated">最后一个字符将被 &lt;code&gt;:omission&lt;/code&gt; 字符串替换（默认为&amp;ldquo;&amp;hellip;&amp;rdquo;），总长度不超过 &lt;code&gt;length&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="e5104bffaf01d4231666775a1d668f8d8ffd8c52" translate="yes" xml:space="preserve">
          <source>The last characters will be replaced with the &lt;code&gt;:omission&lt;/code&gt; string (defaults to &amp;ldquo;&amp;hellip;&amp;rdquo;):</source>
          <target state="translated">最后一个字符将被 &lt;code&gt;:omission&lt;/code&gt; 字符串替换（默认为&amp;ldquo;&amp;hellip;&amp;rdquo;）：</target>
        </trans-unit>
        <trans-unit id="5b1fbe78e9957e7cf09f70c95db9866dfc8c504c" translate="yes" xml:space="preserve">
          <source>The last line ought to save the through record (a &lt;code&gt;Tagging&lt;/code&gt;). This will only work if the &lt;code&gt;:inverse_of&lt;/code&gt; is set:</source>
          <target state="translated">最后一行应保存通过记录（一个 &lt;code&gt;Tagging&lt;/code&gt; ）。仅当设置 &lt;code&gt;:inverse_of&lt;/code&gt; 时,此方法才有效：</target>
        </trans-unit>
        <trans-unit id="67a572e784d49a5e26efa0baf5210771e08bc0d2" translate="yes" xml:space="preserve">
          <source>The last point is easily explained with some enumerables:</source>
          <target state="translated">最后一点用一些列举法很容易解释。</target>
        </trans-unit>
        <trans-unit id="6bf06164b55dbf97e284223c0efd4152256ea1e6" translate="yes" xml:space="preserve">
          <source>The last point is particularly worth comparing for some enumerables:</source>
          <target state="translated">最后一点是特别值得比较的一些列子。</target>
        </trans-unit>
        <trans-unit id="c184c4cc81fa679b5807f802db648819174c0a80" translate="yes" xml:space="preserve">
          <source>The last three methods are required in your object for &lt;code&gt;Errors&lt;/code&gt; to be able to generate error messages correctly and also handle multiple languages. Of course, if you extend your object with &lt;code&gt;ActiveModel::Translation&lt;/code&gt; you will not need to implement the last two. Likewise, using &lt;code&gt;ActiveModel::Validations&lt;/code&gt; will handle the validation related methods for you.</source>
          <target state="translated">对象中需要使用后三种方法才能使 &lt;code&gt;Errors&lt;/code&gt; 正确生成错误消息并处理多种语言。当然，如果使用 &lt;code&gt;ActiveModel::Translation&lt;/code&gt; 扩展对象，则无需实现最后两个。同样，使用 &lt;code&gt;ActiveModel::Validations&lt;/code&gt; 将为您处理与验证相关的方法。</target>
        </trans-unit>
        <trans-unit id="01d4583e92db9c0607227e88af967aeb5072f75c" translate="yes" xml:space="preserve">
          <source>The latter is a shortcut for:</source>
          <target state="translated">后者是一种快捷方式。</target>
        </trans-unit>
        <trans-unit id="d60eb064146a6c7d8808535fb46ffe1d06c0ef35" translate="yes" xml:space="preserve">
          <source>The layout will be rendered together with the partial for each item in the collection. The current object and object_counter variables will be available in the layout as well, the same way they are within the partial.</source>
          <target state="translated">布局将和局部变量一起呈现在集合中的每个项目上。当前的对象和object_counter变量也将在布局中可用,就像它们在局部中一样。</target>
        </trans-unit>
        <trans-unit id="f284415c6d146c7afcb0672e6e0f0abf85ffd823" translate="yes" xml:space="preserve">
          <source>The library as a whole can be accessed in the application manifest like so:</source>
          <target state="translated">库作为一个整体可以在应用程序清单中这样访问。</target>
        </trans-unit>
        <trans-unit id="fba58133a93884c30ef1d3cc05d18c16fa410026" translate="yes" xml:space="preserve">
          <source>The life cycle of Active Record objects.</source>
          <target state="translated">活动记录对象的生命周期。</target>
        </trans-unit>
        <trans-unit id="92a217a341fa19e51932070fc99d9da0f3f4d7cb" translate="yes" xml:space="preserve">
          <source>The link looks innocent to visitors, but when it's clicked, it will execute the JavaScript function &quot;exploit_code&quot; or any other JavaScript the attacker provides.</source>
          <target state="translated">该链接在访问者看来是无辜的,但当它被点击时,它将执行JavaScript函数 &quot;exploit_code &quot;或攻击者提供的任何其他JavaScript。</target>
        </trans-unit>
        <trans-unit id="140864c4a27c61fd406b6f614287fbce60f18f97" translate="yes" xml:space="preserve">
          <source>The list of columns names the model should ignore. Ignored columns won't have attribute accessors defined, and won't be referenced in SQL queries.</source>
          <target state="translated">模型应该忽略的列名列表。忽略的列不会定义属性访问器,也不会在SQL查询中被引用。</target>
        </trans-unit>
        <trans-unit id="e01fcb5edebcaa447ba52d13d4044f5a0666630b" translate="yes" xml:space="preserve">
          <source>The load path must be specified before any translations are looked up. To change the default locale from an initializer instead of &lt;code&gt;config/application.rb&lt;/code&gt;:</source>
          <target state="translated">查找任何翻译之前，必须指定加载路径。要从初始化程序而不是 &lt;code&gt;config/application.rb&lt;/code&gt; 更改默认语言环境：</target>
        </trans-unit>
        <trans-unit id="b91abe0a3bab1667a08a85ecc6e8da70adbd94e0" translate="yes" xml:space="preserve">
          <source>The local variables passed to sub templates can be accessed as a hash using the &lt;code&gt;local_assigns&lt;/code&gt; hash. This lets you access the variables as:</source>
          <target state="translated">可以使用 &lt;code&gt;local_assigns&lt;/code&gt; 哈希将传递给子模板的局部变量作为哈希进行访问。这使您可以按以下方式访问变量：</target>
        </trans-unit>
        <trans-unit id="d2dceed55b6b0e02bd26ebf3baea2208a19abe67" translate="yes" xml:space="preserve">
          <source>The locale can be either set pseudo-globally to &lt;code&gt;I18n.locale&lt;/code&gt; (which uses &lt;code&gt;Thread.current&lt;/code&gt; like, e.g., &lt;code&gt;Time.zone&lt;/code&gt;) or can be passed as an option to &lt;code&gt;#translate&lt;/code&gt; and &lt;code&gt;#localize&lt;/code&gt;.</source>
          <target state="translated">区域设置可以是组伪全局到 &lt;code&gt;I18n.locale&lt;/code&gt; （使用 &lt;code&gt;Thread.current&lt;/code&gt; 等，例如 &lt;code&gt;Time.zone&lt;/code&gt; ），或可作为一种选择要传递 &lt;code&gt;#translate&lt;/code&gt; 和 &lt;code&gt;#localize&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="413c8092d1383ea347a5974fbaadfa780f3120e9" translate="yes" xml:space="preserve">
          <source>The locale can be set in an &lt;code&gt;around_action&lt;/code&gt; in the &lt;code&gt;ApplicationController&lt;/code&gt;:</source>
          <target state="translated">可以在 &lt;code&gt;ApplicationController&lt;/code&gt; 的 &lt;code&gt;around_action&lt;/code&gt; 中设置语言环境：</target>
        </trans-unit>
        <trans-unit id="daf31176920b1d84600a05b4b96e3cdf806b6a98" translate="yes" xml:space="preserve">
          <source>The locale can be set using one of many different approaches.</source>
          <target state="translated">可以使用许多不同的方法之一来设置区域。</target>
        </trans-unit>
        <trans-unit id="dacee22f44c5ce441593543b2c1e7a3944349db1" translate="yes" xml:space="preserve">
          <source>The locale is an &lt;em&gt;obvious&lt;/em&gt; part of the URL.</source>
          <target state="translated">语言环境是URL 的&lt;em&gt;明显&lt;/em&gt;部分。</target>
        </trans-unit>
        <trans-unit id="7cbd4a2a8191fc3188f26e69e32667e5d3e6d197" translate="yes" xml:space="preserve">
          <source>The log files on &lt;a href=&quot;http://www.attacker.com&quot;&gt;www.attacker.com&lt;/a&gt; will read like this:</source>
          <target state="translated">&lt;a href=&quot;http://www.attacker.com&quot;&gt;www.attacker.com&lt;/a&gt;上的日志文件将如下所示：</target>
        </trans-unit>
        <trans-unit id="cc00365603b4266cf1c98299376d51ed6a9302f8" translate="yes" xml:space="preserve">
          <source>The lookup in this case for test_unit as input is:</source>
          <target state="translated">在这种情况下,作为输入的test_unit的查找是。</target>
        </trans-unit>
        <trans-unit id="dc77ccb96283466ad3dd5c3db6e697992a0f4424" translate="yes" xml:space="preserve">
          <source>The lookup order for an &lt;code&gt;admin/products#index&lt;/code&gt; action will be:</source>
          <target state="translated">&lt;code&gt;admin/products#index&lt;/code&gt; 操作的查找顺序为：</target>
        </trans-unit>
        <trans-unit id="89708913768e17e0f4e9ebf21fe3c90dedbbdee1" translate="yes" xml:space="preserve">
          <source>The loop is set up using regular embedding tags (&lt;code&gt;&amp;lt;% %&amp;gt;&lt;/code&gt;) and the name is inserted using the output embedding tags (&lt;code&gt;&amp;lt;%= %&amp;gt;&lt;/code&gt;). Note that this is not just a usage suggestion: regular output functions such as &lt;code&gt;print&lt;/code&gt; and &lt;code&gt;puts&lt;/code&gt; won't be rendered to the view with ERB templates. So this would be wrong:</source>
          <target state="translated">使用常规嵌入标记（ &lt;code&gt;&amp;lt;% %&amp;gt;&lt;/code&gt; ）设置循环，并使用输出嵌入标记（ &lt;code&gt;&amp;lt;%= %&amp;gt;&lt;/code&gt; ）插入名称。请注意，这不仅仅是一种用法建议：常规的输出功能（例如 &lt;code&gt;print&lt;/code&gt; 和 &lt;code&gt;puts&lt;/code&gt; 将不会使用ERB模板呈现到视图中。因此，这将是错误的：</target>
        </trans-unit>
        <trans-unit id="dc30761df747a5ac678de0e1485ab435952394e1" translate="yes" xml:space="preserve">
          <source>The loop is setup in regular embedding tags &lt;code&gt;&amp;lt;% %&amp;gt;&lt;/code&gt;, and the name is written using the output embedding tag &lt;code&gt;&amp;lt;%=
%&amp;gt;&lt;/code&gt;. Note that this is not just a usage suggestion. Regular output functions like print or puts won't work with ERB templates. So this would be wrong:</source>
          <target state="translated">循环是在常规嵌入标记 &lt;code&gt;&amp;lt;% %&amp;gt;&lt;/code&gt; ，并且名称是使用输出嵌入标记 &lt;code&gt;&amp;lt;%= %&amp;gt;&lt;/code&gt; 写入的。请注意，这不仅仅是使用建议。常规输出功能（如打印或放置）不适用于ERB模板。因此，这将是错误的：</target>
        </trans-unit>
        <trans-unit id="4782d45cb3bff384195fc3fa74f6ae6e493a63ea" translate="yes" xml:space="preserve">
          <source>The macro &lt;code&gt;attr_internal&lt;/code&gt; is a synonym for &lt;code&gt;attr_internal_accessor&lt;/code&gt;:</source>
          <target state="translated">宏 &lt;code&gt;attr_internal&lt;/code&gt; 是一个同义词 &lt;code&gt;attr_internal_accessor&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="a2f7c6d14cf5071e8ad6bb4bd27649a2b165b18f" translate="yes" xml:space="preserve">
          <source>The macro &lt;code&gt;delegate&lt;/code&gt; offers an easy way to forward methods.</source>
          <target state="translated">宏 &lt;code&gt;delegate&lt;/code&gt; 提供了一种简单的方法转发方法。</target>
        </trans-unit>
        <trans-unit id="415498318beba7b40f9b5611af8461964ca6a83e" translate="yes" xml:space="preserve">
          <source>The macro receives one or more method names (specified as symbols or strings) and the name of the target object via the &lt;code&gt;:to&lt;/code&gt; option (also a symbol or string).</source>
          <target state="translated">宏通过 &lt;code&gt;:to&lt;/code&gt; 选项（也可以是符号或字符串）接收一个或多个方法名称（指定为符号或字符串）和目标对象的名称。</target>
        </trans-unit>
        <trans-unit id="60baf372c6c437b91d26d4adf2d9c721e5ed9c08" translate="yes" xml:space="preserve">
          <source>The macro-style class methods can also receive a block. Consider using this style if the code inside your block is so short that it fits in a single line. For example, you could send metrics for every job enqueued:</source>
          <target state="translated">宏式类方法也可以接收一个块。如果你的区块里面的代码很短,以至于可以放在一行中,可以考虑使用这种风格。例如,你可以为每一个被查询的作业发送指标。</target>
        </trans-unit>
        <trans-unit id="ae8d13b0e4b30afca687a27a2a6bcee77b82e1f5" translate="yes" xml:space="preserve">
          <source>The macro-style class methods can also receive a block. Consider using this style if the code inside your block is so short that it fits in a single line:</source>
          <target state="translated">宏风格的类方法也可以接收一个块。如果你的块里面的代码很短,可以用一行来表示,可以考虑使用这种风格。</target>
        </trans-unit>
        <trans-unit id="7bf8a2a68d5bb7d9bdce0e3db1b7396a5f8c4dbe" translate="yes" xml:space="preserve">
          <source>The macros &lt;code&gt;cattr_reader&lt;/code&gt;, &lt;code&gt;cattr_writer&lt;/code&gt;, and &lt;code&gt;cattr_accessor&lt;/code&gt; are analogous to their &lt;code&gt;attr_*&lt;/code&gt; counterparts but for classes. They initialize a class variable to &lt;code&gt;nil&lt;/code&gt; unless it already exists, and generate the corresponding class methods to access it:</source>
          <target state="translated">&lt;code&gt;cattr_reader&lt;/code&gt; ， &lt;code&gt;cattr_writer&lt;/code&gt; 和 &lt;code&gt;cattr_accessor&lt;/code&gt; 宏类似于 &lt;code&gt;attr_*&lt;/code&gt; 对应的宏，但用于类。他们将一个类变量初始化为 &lt;code&gt;nil&lt;/code&gt; ,除非它已经存在，并生成相应的类方法来访问它：</target>
        </trans-unit>
        <trans-unit id="75c1b4fe1ccf8d7f2c382dea52c838eafc63998f" translate="yes" xml:space="preserve">
          <source>The macros &lt;code&gt;mattr_reader&lt;/code&gt;, &lt;code&gt;mattr_writer&lt;/code&gt;, and &lt;code&gt;mattr_accessor&lt;/code&gt; are the same as the &lt;code&gt;cattr_*&lt;/code&gt; macros defined for class. In fact, the &lt;code&gt;cattr_*&lt;/code&gt; macros are just aliases for the &lt;code&gt;mattr_*&lt;/code&gt; macros. Check &lt;a href=&quot;#class-attributes&quot;&gt;Class Attributes&lt;/a&gt;.</source>
          <target state="translated">宏 &lt;code&gt;mattr_reader&lt;/code&gt; ， &lt;code&gt;mattr_writer&lt;/code&gt; 和 &lt;code&gt;mattr_accessor&lt;/code&gt; 与为类定义的 &lt;code&gt;cattr_*&lt;/code&gt; 宏相同。事实上， &lt;code&gt;cattr_*&lt;/code&gt; 宏是对于刚刚别名 &lt;code&gt;mattr_*&lt;/code&gt; 宏。检查&lt;a href=&quot;#class-attributes&quot;&gt;类属性&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="58b4dccf4abf64be6b0a0ec46a36c74305dc1844" translate="yes" xml:space="preserve">
          <source>The main body of the view will always render into the unnamed &lt;code&gt;yield&lt;/code&gt;. To render content into a named &lt;code&gt;yield&lt;/code&gt;, you use the &lt;code&gt;content_for&lt;/code&gt; method.</source>
          <target state="translated">视图的主体将始终呈现为未命名的 &lt;code&gt;yield&lt;/code&gt; 。要将内容呈现为命名的 &lt;code&gt;yield&lt;/code&gt; ，请使用 &lt;code&gt;content_for&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="79f6a395f84dfa52f266c952a76eb19193188b76" translate="yes" xml:space="preserve">
          <source>The main form helper is &lt;code&gt;form_with&lt;/code&gt;.</source>
          <target state="translated">主要的表单帮助器是 &lt;code&gt;form_with&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7fc515176450fdd7cbfab7c1b8954dc09f9c2dce" translate="yes" xml:space="preserve">
          <source>The main method that creates the message and renders the email templates. There are two ways to call this method, with a block, or without a block.</source>
          <target state="translated">创建邮件并渲染邮件模板的主要方法。有两种方法可以调用这个方法,有块,或者没有块。</target>
        </trans-unit>
        <trans-unit id="495929d2ad1e03b5a3e61a6dfafb4d72fa178b9c" translate="yes" xml:space="preserve">
          <source>The main methods to call are &lt;code&gt;read&lt;/code&gt;, &lt;code&gt;write&lt;/code&gt;, &lt;code&gt;delete&lt;/code&gt;, &lt;code&gt;exist?&lt;/code&gt;, and &lt;code&gt;fetch&lt;/code&gt;. The fetch method takes a block and will either return an existing value from the cache, or evaluate the block and write the result to the cache if no value exists.</source>
          <target state="translated">调用的主要方法是 &lt;code&gt;read&lt;/code&gt; ， &lt;code&gt;write&lt;/code&gt; ， &lt;code&gt;delete&lt;/code&gt; ，是否 &lt;code&gt;exist?&lt;/code&gt; 和 &lt;code&gt;fetch&lt;/code&gt; 。fetch方法使用一个块，并将从高速缓存中返回一个现有值，或者评估该块并将结果（如果不存在任何值）写入高速缓存。</target>
        </trans-unit>
        <trans-unit id="14c39f5026611e3921bac887dbcc489606e1d7f4" translate="yes" xml:space="preserve">
          <source>The main objective of most attackers is to make money. The underground prices for stolen bank login accounts range from 0.5%-10% of account balance, $0.5-$30 for credit card numbers ($20-$60 with full details), $0.1-$1.5 for identities (Name, SSN &amp;amp; DOB), $20-$50 for retailer accounts, and $6-$10 for cloud service provider accounts, according to the &lt;a href=&quot;https://www.symantec.com/content/dam/symantec/docs/reports/istr-22-2017-en.pdf&quot;&gt;Symantec Internet Security Threat Report (2017)&lt;/a&gt;.</source>
          <target state="translated">大多数攻击者的主要目标是赚钱。被盗的银行登录帐户的地下价格范围为帐户余额的0.5％-10％，信用卡号为$ 0.5- $ 30（完整信息为$ 20- $ 60），身份（名称，SSN和DOB）为$ 0.1- $ 1.5，$ 20-根据《&lt;a href=&quot;https://www.symantec.com/content/dam/symantec/docs/reports/istr-22-2017-en.pdf&quot;&gt;Symantec Internet Security威胁报告（2017）》&lt;/a&gt;，零售商帐户为50美元，云服务提供商帐户为6-10美元。</target>
        </trans-unit>
        <trans-unit id="21599ae78681ea4faf08ff08a657288956a915b6" translate="yes" xml:space="preserve">
          <source>The main point is to ensure that all Rails apps will have a job infrastructure in place. We can then have framework features and other gems build on top of that, without having to worry about API differences between various job runners such as Delayed Job and Resque. Picking your queuing backend becomes more of an operational concern, then. And you'll be able to switch between them without having to rewrite your jobs.</source>
          <target state="translated">主要是确保所有的Rails应用都会有一个job基础设施。然后,我们可以让框架功能和其他gems构建在上面,而不必担心Delayed Job和Resque等各种作业运行器之间的API差异。那么,选择你的排队后端就更多的成为了一个操作上的问题。而且你将能够在它们之间进行切换,而不必重写你的作业。</target>
        </trans-unit>
        <trans-unit id="71619b344378d256ebf3fdb56f4d5efbf0440f8d" translate="yes" xml:space="preserve">
          <source>The main purpose of Rails' migration feature is to issue commands that modify the schema using a consistent process. Migrations can also be used to add or modify data. This is useful in an existing database that can't be destroyed and recreated, such as a production database.</source>
          <target state="translated">Rails的迁移功能的主要目的是发出命令,使用一致的流程修改模式。迁移也可以用来添加或修改数据。这在无法销毁和重新创建的现有数据库中非常有用,例如生产数据库。</target>
        </trans-unit>
        <trans-unit id="9f79a2a93cfc18ecc7090835c969528751a32baa" translate="yes" xml:space="preserve">
          <source>The matcher (and other members of the precompile array; see below) is applied to final compiled file names. This means anything that compiles to JS/CSS is excluded, as well as raw JS/CSS files; for example, &lt;code&gt;.coffee&lt;/code&gt; and &lt;code&gt;.scss&lt;/code&gt; files are &lt;strong&gt;not&lt;/strong&gt; automatically included as they compile to JS/CSS.</source>
          <target state="translated">匹配器（和预编译数组的其他成员；请参见下文）将应用于最终的编译文件名。这意味着不包括任何可编译为JS / CSS的文件以及原始JS / CSS文件。例如， &lt;code&gt;.coffee&lt;/code&gt; 和 &lt;code&gt;.scss&lt;/code&gt; 文件&lt;strong&gt;不会&lt;/strong&gt;自动为它们编译成JS / CSS包括在内。</target>
        </trans-unit>
        <trans-unit id="5a5326dc8382eb380da680fd49ebf42711f48794" translate="yes" xml:space="preserve">
          <source>The maximum length of a password is 72 (required by &lt;code&gt;bcrypt&lt;/code&gt; on which ActiveModel::SecurePassword depends)</source>
          <target state="translated">密码的最大长度为72（ActiveModel :: SecurePassword所依赖的 &lt;code&gt;bcrypt&lt;/code&gt; 要求）</target>
        </trans-unit>
        <trans-unit id="efc00f941fcc8767657069623c7b30577861e458" translate="yes" xml:space="preserve">
          <source>The message identifies which template is missing. In this case, it's the &lt;code&gt;articles/new&lt;/code&gt; template. Rails will first look for this template. If not found, then it will attempt to load a template called &lt;code&gt;application/new&lt;/code&gt;, because the &lt;code&gt;ArticlesController&lt;/code&gt; inherits from &lt;code&gt;ApplicationController&lt;/code&gt;.</source>
          <target state="translated">该消息标识缺少哪个模板。在这种情况下，它是 &lt;code&gt;articles/new&lt;/code&gt; 模板。Rails首先会寻找该模板。如果未找到，则它将尝试加载名为 &lt;code&gt;application/new&lt;/code&gt; 的模板，因为 &lt;code&gt;ArticlesController&lt;/code&gt; 继承自 &lt;code&gt;ApplicationController&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="687ac77baf1c88b97b2fe37f68e7a236164e70b0" translate="yes" xml:space="preserve">
          <source>The message is signed with the &lt;code&gt;MessageVerifier&lt;/code&gt;'s secret. Without knowing the secret, the original value cannot be extracted from the message.</source>
          <target state="translated">该消息使用 &lt;code&gt;MessageVerifier&lt;/code&gt; 的秘密进行签名。在不知道秘密的情况下，无法从消息中提取原始值。</target>
        </trans-unit>
        <trans-unit id="093a0fd1eecb6d23d318f6fc14f9ed0c2e8da44c" translate="yes" xml:space="preserve">
          <source>The messages are available in the @logger instance, which is a logger with limited powers (it actually does not send anything to your output), and you can collect them doing @logger.logged(level), where level is the level used in logging, like info, debug, warn and so on.</source>
          <target state="translated">这些消息可以在@logger实例中获得,它是一个权力有限的记录器(实际上它不会向你的输出发送任何东西),你可以做@logger.logged(level)来收集这些消息,其中level是用于记录的级别,比如info、debug、warning等等。</target>
        </trans-unit>
        <trans-unit id="e32772287becf00004ac3c06bca75256d6389810" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;Array#deep_dup&lt;/code&gt; duplicates itself and all objects inside recursively with Active Support method &lt;code&gt;Object#deep_dup&lt;/code&gt;. It works like &lt;code&gt;Array#map&lt;/code&gt; with sending &lt;code&gt;deep_dup&lt;/code&gt; method to each object inside.</source>
          <target state="translated">&lt;code&gt;Array#deep_dup&lt;/code&gt; 方法使用Active Support方法 &lt;code&gt;Object#deep_dup&lt;/code&gt; 递归地复制自身和其中的所有对象。它就像 &lt;code&gt;Array#map&lt;/code&gt; 一样，向每个内部对象发送 &lt;code&gt;deep_dup&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="c1e33e74fb4fd7f607ac4ec9c062ba47e1d98a83" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;Array.wrap&lt;/code&gt; wraps its argument in an array unless it is already an array (or array-like).</source>
          <target state="translated">除非方法已经是数组（或类似数组的方法）， &lt;code&gt;Array.wrap&lt;/code&gt; 方法会将其参数包装在数组中。</target>
        </trans-unit>
        <trans-unit id="d6b82f431ad6d4eddf847396d46b04b6fd616ec1" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;Hash#deep_dup&lt;/code&gt; duplicates itself and all keys and values inside recursively with Active Support method &lt;code&gt;Object#deep_dup&lt;/code&gt;. It works like &lt;code&gt;Enumerator#each_with_object&lt;/code&gt; with sending &lt;code&gt;deep_dup&lt;/code&gt; method to each pair inside.</source>
          <target state="translated">&lt;code&gt;Hash#deep_dup&lt;/code&gt; 方法使用Active Support方法 &lt;code&gt;Object#deep_dup&lt;/code&gt; 递归地复制自身以及其中的所有键和值。就像 &lt;code&gt;Enumerator#each_with_object&lt;/code&gt; 一样，向每个内部对发送 &lt;code&gt;deep_dup&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="7de965296f37e83a90fa8fad4aeb58775b5f8602" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;Hash#to_query&lt;/code&gt; accepts an optional namespace for the keys:</source>
          <target state="translated">方法 &lt;code&gt;Hash#to_query&lt;/code&gt; 接受键的可选名称空间：</target>
        </trans-unit>
        <trans-unit id="d0eeaa0bdef1015a3d295e8021c903df196a0661" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;Range#overlaps?&lt;/code&gt; says whether any two given ranges have non-void intersection:</source>
          <target state="translated">方法 &lt;code&gt;Range#overlaps?&lt;/code&gt; 表示是否有两个给定范围具有非无效交集：</target>
        </trans-unit>
        <trans-unit id="2179f3488c189a7d1b1ae889f5df7a90d0add093" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;acts_like?&lt;/code&gt; provides a way to check whether some class acts like some other class based on a simple convention: a class that provides the same interface as &lt;code&gt;String&lt;/code&gt; defines</source>
          <target state="translated">方法 &lt;code&gt;acts_like?&lt;/code&gt; 提供一种方法来根据简单约定检查某些类是否像其他类一样工作：提供与 &lt;code&gt;String&lt;/code&gt; 定义相同的接口的类</target>
        </trans-unit>
        <trans-unit id="3f8c125e2741bd24b350323c120868d16ec18dbf" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;advance&lt;/code&gt; advances first one month, and then one day, the result is:</source>
          <target state="translated">该方法 &lt;code&gt;advance&lt;/code&gt; 一个月，然后进行一天，结果为：</target>
        </trans-unit>
        <trans-unit id="552f54883f3f33b594f06d41ba5b2220bba8453d" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;ago&lt;/code&gt; receives a number of seconds as argument and returns a timestamp those many seconds ago from midnight:</source>
          <target state="translated">该方法 &lt;code&gt;ago&lt;/code&gt; 收到了几秒钟作为参数，并返回了午夜之前几秒钟的时间戳：</target>
        </trans-unit>
        <trans-unit id="8f2e4acf7ddddd85645952fc4aa279e137c99b5a" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;all_day&lt;/code&gt; returns a range representing the whole day of the current time.</source>
          <target state="translated">&lt;code&gt;all_day&lt;/code&gt; 方法返回一个表示当前时间的全天范围。</target>
        </trans-unit>
        <trans-unit id="541b5c428abe6077b2427df44c06151cabbe2505" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;assert_valid_keys&lt;/code&gt; receives an arbitrary number of arguments, and checks whether the receiver has any key outside that white list. If it does &lt;code&gt;ArgumentError&lt;/code&gt; is raised.</source>
          <target state="translated">方法 &lt;code&gt;assert_valid_keys&lt;/code&gt; 接收任意数量的参数，并检查接收方是否在该白名单之外有任何密钥。如果这样做，则会引发 &lt;code&gt;ArgumentError&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="91964bd2587b244f8090ac94f24f6de56fc458e7" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;beginning_of_day&lt;/code&gt; returns a timestamp at the beginning of the day (00:00:00):</source>
          <target state="translated">该方法 &lt;code&gt;beginning_of_day&lt;/code&gt; 返回在一天（00:00:00）开始时的时间戳：</target>
        </trans-unit>
        <trans-unit id="e085bbffe1ea485f880a3af6f70c393c243f7720" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;beginning_of_hour&lt;/code&gt; returns a timestamp at the beginning of the hour (hh:00:00):</source>
          <target state="translated">该方法 &lt;code&gt;beginning_of_hour&lt;/code&gt; 在小时（：00：00 HH）的开始返回一个时间戳：</target>
        </trans-unit>
        <trans-unit id="f577d04c9de8bcd3e4d8ba5950192cbedbcd4c33" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;beginning_of_minute&lt;/code&gt; returns a timestamp at the beginning of the minute (hh:mm:00):</source>
          <target state="translated">方法 &lt;code&gt;beginning_of_minute&lt;/code&gt; 返回分钟的开始时间戳（hh：mm：00）：</target>
        </trans-unit>
        <trans-unit id="c36a6bddcb246413376decd5b3e385ac52a3c55d" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;camelize&lt;/code&gt; returns its receiver in camel case:</source>
          <target state="translated">&lt;code&gt;camelize&lt;/code&gt; 方法在骆驼的情况下返回其接收者：</target>
        </trans-unit>
        <trans-unit id="50d58e637eefa0c2f54a8097a5a26358508ed881" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;change&lt;/code&gt; allows you to get a new date which is the same as the receiver except for the given year, month, or day:</source>
          <target state="translated">&lt;code&gt;change&lt;/code&gt; 方法可以使您获得一个与接收者相同的新日期，但给定的年，月或日除外：</target>
        </trans-unit>
        <trans-unit id="c1693ffe243f5ff35dd83e523a87b2b0e6b7ce09" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;change&lt;/code&gt; allows you to get a new datetime which is the same as the receiver except for the given options, which may include &lt;code&gt;:year&lt;/code&gt;, &lt;code&gt;:month&lt;/code&gt;, &lt;code&gt;:day&lt;/code&gt;, &lt;code&gt;:hour&lt;/code&gt;, &lt;code&gt;:min&lt;/code&gt;, &lt;code&gt;:sec&lt;/code&gt;, &lt;code&gt;:offset&lt;/code&gt;, &lt;code&gt;:start&lt;/code&gt;:</source>
          <target state="translated">方法 &lt;code&gt;change&lt;/code&gt; 允许您获得与接收者相同的新日期时间，除了给定的选项，其中可能包括 &lt;code&gt;:year&lt;/code&gt; ， &lt;code&gt;:month&lt;/code&gt; ， &lt;code&gt;:day&lt;/code&gt; ， &lt;code&gt;:hour&lt;/code&gt; ， &lt;code&gt;:min&lt;/code&gt; ， &lt;code&gt;:sec&lt;/code&gt; ， &lt;code&gt;:offset&lt;/code&gt; ， &lt;code&gt;:start&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="c90aa7f827d4f56fea49a7ae34641b299c94c4bd" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;class_attribute&lt;/code&gt; declares one or more inheritable class attributes that can be overridden at any level down the hierarchy.</source>
          <target state="translated">方法 &lt;code&gt;class_attribute&lt;/code&gt; 声明一个或多个可继承的类属性，这些属性可以在层次结构中的任何级别上被覆盖。</target>
        </trans-unit>
        <trans-unit id="c9e96da64b1b8279c4e0994f0fb0a8adae7dac72" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;classify&lt;/code&gt; is the inverse of &lt;code&gt;tableize&lt;/code&gt;. It gives you the class name corresponding to a table name:</source>
          <target state="translated">&lt;code&gt;classify&lt;/code&gt; 方法是 &lt;code&gt;tableize&lt;/code&gt; 的逆方法。它为您提供与表名相对应的类名：</target>
        </trans-unit>
        <trans-unit id="078c50f28bde0d9e8cd63a6c910aaaf2320cfc2f" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;constantize&lt;/code&gt; resolves the constant reference expression in its receiver:</source>
          <target state="translated">&lt;code&gt;constantize&lt;/code&gt; 量化方法在其接收器中解析常量引用表达式：</target>
        </trans-unit>
        <trans-unit id="357988408dbb70c115cb0dfc7514cae03b651c01" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;dasherize&lt;/code&gt; replaces the underscores in the receiver with dashes:</source>
          <target state="translated">&lt;code&gt;dasherize&lt;/code&gt; 方法用破折号替换接收器中的下划线：</target>
        </trans-unit>
        <trans-unit id="e211c70f6c4329e28772a26b56c394e16d3ce068" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;deep_merge!&lt;/code&gt; performs a deep merge in place.</source>
          <target state="translated">方法 &lt;code&gt;deep_merge!&lt;/code&gt; 执行适当的深度合并。</target>
        </trans-unit>
        <trans-unit id="d78f3750e4c5052b90fcbd5bea5e723036a174b5" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;end_of_day&lt;/code&gt; returns a timestamp at the end of the day (23:59:59):</source>
          <target state="translated">&lt;code&gt;end_of_day&lt;/code&gt; 方法在一天结束时（23:59:59）返回时间戳：</target>
        </trans-unit>
        <trans-unit id="d46bf9d09c3a7c7fd408440a7e9a40f95118e29f" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;end_of_hour&lt;/code&gt; returns a timestamp at the end of the hour (hh:59:59):</source>
          <target state="translated">方法 &lt;code&gt;end_of_hour&lt;/code&gt; 返回小时结束时的时间戳（hh：59：59）：</target>
        </trans-unit>
        <trans-unit id="de74d561fab3abfbd50e4756cde750b0a3935f48" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;end_of_minute&lt;/code&gt; returns a timestamp at the end of the minute (hh:mm:59):</source>
          <target state="translated">方法 &lt;code&gt;end_of_minute&lt;/code&gt; 在分钟结束时（hh：mm：59）返回时间戳：</target>
        </trans-unit>
        <trans-unit id="0b221ae8dbe130744caad5199d2d97fbc76c565f" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;except&lt;/code&gt; returns a hash with the keys in the argument list removed, if present:</source>
          <target state="translated">该方法 &lt;code&gt;except&lt;/code&gt; 返回一个散列，其中删除了参数列表中的键（如果存在）：</target>
        </trans-unit>
        <trans-unit id="aaf6f40b5a5a4af9d91c806cce7c3bbcea4835d2" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;extract!&lt;/code&gt; removes and returns the elements for which the block returns a true value. If no block is given, an Enumerator is returned instead.</source>
          <target state="translated">方法 &lt;code&gt;extract!&lt;/code&gt; 删除并返回该块为其返回真值的元素。如果没有给出块，则返回一个枚举器。</target>
        </trans-unit>
        <trans-unit id="99ed6b8b4541116327e8d0e7a6633713b0532871" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;extract!&lt;/code&gt; removes and returns the key/value pairs matching the given keys.</source>
          <target state="translated">方法 &lt;code&gt;extract!&lt;/code&gt; 删除并返回与给定键匹配的键/值对。</target>
        </trans-unit>
        <trans-unit id="ea9f782cf4d463d7fa0c6babbe898a4179c215a0" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;extract!&lt;/code&gt; returns the same subclass of Hash, that the receiver is.</source>
          <target state="translated">方法 &lt;code&gt;extract!&lt;/code&gt; 返回与接收者相同的Hash子类。</target>
        </trans-unit>
        <trans-unit id="2ff5d88d672e86390c7f851883bc096da7e53d01" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;foreign_key&lt;/code&gt; gives a foreign key column name from a class name. To do so it demodulizes, underscores, and adds &quot;_id&quot;:</source>
          <target state="translated">&lt;code&gt;foreign_key&lt;/code&gt; 方法从类名称中给出外键列名称。为此，它解调，加下划线并添加&amp;ldquo; _id&amp;rdquo;：</target>
        </trans-unit>
        <trans-unit id="e7a5c875313a703800a91a074d810febde910dd4" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;humanize&lt;/code&gt; tweaks an attribute name for display to end users.</source>
          <target state="translated">该方法 &lt;code&gt;humanize&lt;/code&gt; 调整属性名称以显示给最终用户。</target>
        </trans-unit>
        <trans-unit id="fb26c0817d6731204de3f5269480a99a26d221bd" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;in_groups&lt;/code&gt; splits an array into a certain number of groups. The method returns an array with the groups:</source>
          <target state="translated">&lt;code&gt;in_groups&lt;/code&gt; 方法将数组拆分为一定数量的组。该方法返回具有组的数组：</target>
        </trans-unit>
        <trans-unit id="bcda912a9181a0c10cda3df95ea77faada8fc3fd" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;in_groups_of&lt;/code&gt; splits an array into consecutive groups of a certain size. It returns an array with the groups:</source>
          <target state="translated">&lt;code&gt;in_groups_of&lt;/code&gt; 方法将数组拆分为一定大小的连续组。它返回带有组的数组：</target>
        </trans-unit>
        <trans-unit id="435c8a187b47719a1cd22951879b4182144227d5" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;index_by&lt;/code&gt; generates a hash with the elements of an enumerable indexed by some key.</source>
          <target state="translated">方法 &lt;code&gt;index_by&lt;/code&gt; 生成具有由某个键索引的可枚举元素的哈希。</target>
        </trans-unit>
        <trans-unit id="da8b1a27cc1c31e946af6fde23476e92ede82db2" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;index_with&lt;/code&gt; generates a hash with the elements of an enumerable as keys. The value is either a passed default or returned in a block.</source>
          <target state="translated">方法 &lt;code&gt;index_with&lt;/code&gt; 生成一个以枚举的元素为键的哈希。该值可以是传递的默认值，也可以是在块中返回的值。</target>
        </trans-unit>
        <trans-unit id="d1f20a3ddef2c375b761522691412f7214b57d0f" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;instance_values&lt;/code&gt; returns a hash that maps instance variable names without &quot;@&quot; to their corresponding values. Keys are strings:</source>
          <target state="translated">方法 &lt;code&gt;instance_values&lt;/code&gt; 返回一个散列，该散列将没有&amp;ldquo; @&amp;rdquo;的实例变量名称映射到其对应的值。键是字符串：</target>
        </trans-unit>
        <trans-unit id="c321602f17827d8217a980646e121648d496bb1c" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;instance_variable_names&lt;/code&gt; returns an array. Each name includes the &quot;@&quot; sign.</source>
          <target state="translated">方法 &lt;code&gt;instance_variable_names&lt;/code&gt; 返回一个数组。每个名称都包含&amp;ldquo; @&amp;rdquo;符号。</target>
        </trans-unit>
        <trans-unit id="20ff505780bbd3782af13427c34a1855014975cb" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;many?&lt;/code&gt; is shorthand for &lt;code&gt;collection.size &amp;gt; 1&lt;/code&gt;:</source>
          <target state="translated">方法 &lt;code&gt;many?&lt;/code&gt; 是 &lt;code&gt;collection.size &amp;gt; 1&lt;/code&gt; 简写：</target>
        </trans-unit>
        <trans-unit id="bb55847e5bf51aa79a7903f73ec506aacf7196a6" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;module_parents&lt;/code&gt; calls &lt;code&gt;module_parent&lt;/code&gt; on the receiver and upwards until &lt;code&gt;Object&lt;/code&gt; is reached. The chain is returned in an array, from bottom to top:</source>
          <target state="translated">方法 &lt;code&gt;module_parents&lt;/code&gt; 在接收器上向上调用 &lt;code&gt;module_parent&lt;/code&gt; ，直到到达 &lt;code&gt;Object&lt;/code&gt; 为止。该链从下至上以数组形式返回：</target>
        </trans-unit>
        <trans-unit id="6089bffe83adf640f1613660fa0462ada9ab1360" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;multiline?&lt;/code&gt; says whether a regexp has the &lt;code&gt;/m&lt;/code&gt; flag set, that is, whether the dot matches newlines.</source>
          <target state="translated">方法 &lt;code&gt;multiline?&lt;/code&gt; 表示正则表达式是否设置了 &lt;code&gt;/m&lt;/code&gt; 标志，即点是否与换行符匹配。</target>
        </trans-unit>
        <trans-unit id="b85ea67c1af5da35bcf6a98d0598b5cd5fe12943" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;multiple_of?&lt;/code&gt; tests whether an integer is multiple of the argument:</source>
          <target state="translated">方法 &lt;code&gt;multiple_of?&lt;/code&gt; 测试整数是否为参数的倍数：</target>
        </trans-unit>
        <trans-unit id="f15df0993a61ed439f2d1c9e3f00efd157cf7c77" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;next_week&lt;/code&gt; receives a symbol with a day name in English (default is the thread local &lt;code&gt;Date.beginning_of_week&lt;/code&gt;, or &lt;code&gt;config.beginning_of_week&lt;/code&gt;, or &lt;code&gt;:monday&lt;/code&gt;) and it returns the date corresponding to that day.</source>
          <target state="translated">方法 &lt;code&gt;next_week&lt;/code&gt; 接收带有英文日期名称的符号（默认为本地线程 &lt;code&gt;Date.beginning_of_week&lt;/code&gt; 或 &lt;code&gt;config.beginning_of_week&lt;/code&gt; 或 &lt;code&gt;:monday&lt;/code&gt; ），并返回与该日期相对应的日期。</target>
        </trans-unit>
        <trans-unit id="a33b8ded9323df6fd86cb09ff5d011f7e28769a0" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;ordinal&lt;/code&gt; returns the ordinal suffix string corresponding to the receiver integer:</source>
          <target state="translated">&lt;code&gt;ordinal&lt;/code&gt; 方法返回与接收方整数对应的序数后缀字符串：</target>
        </trans-unit>
        <trans-unit id="d1761b81eab5a13ce24b2d3f37ede256550af29c" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;ordinalize&lt;/code&gt; returns the ordinal string corresponding to the receiver integer. In comparison, note that the &lt;code&gt;ordinal&lt;/code&gt; method returns &lt;strong&gt;only&lt;/strong&gt; the suffix string.</source>
          <target state="translated">&lt;code&gt;ordinalize&lt;/code&gt; 方法返回与接收方整数相对应的序数字符串。相比之下，请注意， &lt;code&gt;ordinal&lt;/code&gt; 方法&lt;strong&gt;仅&lt;/strong&gt;返回后缀字符串。</target>
        </trans-unit>
        <trans-unit id="97392ecc57bbe19c9ee47fe2e7e60d101f006c2d" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;parameterize&lt;/code&gt; normalizes its receiver in a way that can be used in pretty URLs.</source>
          <target state="translated">&lt;code&gt;parameterize&lt;/code&gt; 化方法以一种可以在漂亮的URL中使用的方式对其接收器进行规范化。</target>
        </trans-unit>
        <trans-unit id="6e7420cd00a473a7a6d8483f9261f0ddfd51a128" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;pluck&lt;/code&gt; returns an array based on the given key:</source>
          <target state="translated">&lt;code&gt;pluck&lt;/code&gt; 方法基于给定的键返回一个数组：</target>
        </trans-unit>
        <trans-unit id="9ee6516c7f56f1ba0ed077fbc2e7db598686ac08" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;pluralize&lt;/code&gt; returns the plural of its receiver:</source>
          <target state="translated">&lt;code&gt;pluralize&lt;/code&gt; 方法返回其接收者的复数：</target>
        </trans-unit>
        <trans-unit id="41bb7c4e58183037bcfd42551f575ed0b14097d0" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;present?&lt;/code&gt; is equivalent to &lt;code&gt;!blank?&lt;/code&gt;. This example is taken from &lt;code&gt;ActionDispatch::Http::Cache::Response&lt;/code&gt;:</source>
          <target state="translated">该方法 &lt;code&gt;present?&lt;/code&gt; 等于 &lt;code&gt;!blank?&lt;/code&gt; 。这个例子来自 &lt;code&gt;ActionDispatch::Http::Cache::Response&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="b91d6be6b7e138a340af57a72512784b971a9ee1" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;prev_week&lt;/code&gt; is analogous:</source>
          <target state="translated">方法 &lt;code&gt;prev_week&lt;/code&gt; 类似于：</target>
        </trans-unit>
        <trans-unit id="f12cfe07736bb5bbc05da705235c306e033463f5" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;redefine_method&lt;/code&gt; prevents such a potential warning, removing the existing method before if needed.</source>
          <target state="translated">方法 &lt;code&gt;redefine_method&lt;/code&gt; 防止了这种潜在的警告，如果需要，请先删除现有方法。</target>
        </trans-unit>
        <trans-unit id="dd8539a782376af5d21222e2cb75190799a1d16b" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;remove&lt;/code&gt; will remove all occurrences of the pattern:</source>
          <target state="translated">&lt;code&gt;remove&lt;/code&gt; 方法将删除所有出现的模式：</target>
        </trans-unit>
        <trans-unit id="387ce0f8010addda4cde39eee52ccea1d12762fd" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;reverse_update&lt;/code&gt; is an alias for &lt;code&gt;reverse_merge!&lt;/code&gt;, explained above.</source>
          <target state="translated">方法 &lt;code&gt;reverse_update&lt;/code&gt; 是reverse_merge的别名 &lt;code&gt;reverse_merge!&lt;/code&gt; ，如上所述。</target>
        </trans-unit>
        <trans-unit id="ff4b75d9e257aba1e8fc283a1b01585233e460b4" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;seconds_since_midnight&lt;/code&gt; returns the number of seconds since midnight:</source>
          <target state="translated">&lt;code&gt;seconds_since_midnight&lt;/code&gt; 方法返回自午夜以来的秒数：</target>
        </trans-unit>
        <trans-unit id="4a0dfce079234958f39d2ac44a20f44086af21e6" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;slice!&lt;/code&gt; replaces the hash with only the given keys and returns a hash containing the removed key/value pairs.</source>
          <target state="translated">方法 &lt;code&gt;slice!&lt;/code&gt; 仅用给定的键替换哈希，并返回包含已删除键/值对的哈希。</target>
        </trans-unit>
        <trans-unit id="115efaa72ec871de6e14307a19a958b113979000" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;split&lt;/code&gt; divides an array by a separator and returns the resulting chunks.</source>
          <target state="translated">该方法 &lt;code&gt;split&lt;/code&gt; 用分隔符对数组进行划分，并返回结果块​​。</target>
        </trans-unit>
        <trans-unit id="706387e27a1798aff7654f080c37fe4327344e38" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;squish&lt;/code&gt; strips leading and trailing whitespace, and substitutes runs of whitespace with a single space each:</source>
          <target state="translated">该方法 &lt;code&gt;squish&lt;/code&gt; 前导空格和尾随空格，并用单个空格替换空白行：</target>
        </trans-unit>
        <trans-unit id="f0869d8f033f9cae7ed0fb46925e26e58694dd80" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;stringify_keys&lt;/code&gt; returns a hash that has a stringified version of the keys in the receiver. It does so by sending &lt;code&gt;to_s&lt;/code&gt; to them:</source>
          <target state="translated">方法 &lt;code&gt;stringify_keys&lt;/code&gt; 返回一个哈希值，该哈希值具有接收方中密钥的字符串化版本。通过向他们发送 &lt;code&gt;to_s&lt;/code&gt; 来做到这一点：</target>
        </trans-unit>
        <trans-unit id="a2a91721cba9308202438adc6d39cc57e1518bfd" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;strip_heredoc&lt;/code&gt; strips indentation in heredocs.</source>
          <target state="translated">方法 &lt;code&gt;strip_heredoc&lt;/code&gt; 去除heredocs中的缩进。</target>
        </trans-unit>
        <trans-unit id="c0907a71fc4ec4c8ff7e86f4c1da60f559bdf3f6" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;sum&lt;/code&gt; adds the elements of an enumerable:</source>
          <target state="translated">&lt;code&gt;sum&lt;/code&gt; 方法增加了一个可枚举的元素：</target>
        </trans-unit>
        <trans-unit id="bcd37680102e0da1447d329b81f3e01b33deeae9" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;symbolize_keys&lt;/code&gt; returns a hash that has a symbolized version of the keys in the receiver, where possible. It does so by sending &lt;code&gt;to_sym&lt;/code&gt; to them:</source>
          <target state="translated">如果可能，方法 &lt;code&gt;symbolize_keys&lt;/code&gt; 返回一个哈希值，该哈希值具有接收器中密钥的符号版本。通过向他们发送 &lt;code&gt;to_sym&lt;/code&gt; 来做到这一点：</target>
        </trans-unit>
        <trans-unit id="bd6b9963429952cd5d8efa1a81a122b83c576304" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;tableize&lt;/code&gt; is &lt;code&gt;underscore&lt;/code&gt; followed by &lt;code&gt;pluralize&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;tableize&lt;/code&gt; 的方法是 &lt;code&gt;underscore&lt;/code&gt; 然后是 &lt;code&gt;pluralize&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4811f4d445cab7099f3493b7e741d51ccb0dfb69" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;titleize&lt;/code&gt; capitalizes the words in the receiver:</source>
          <target state="translated">&lt;code&gt;titleize&lt;/code&gt; 化方法将接收方中的单词大写：</target>
        </trans-unit>
        <trans-unit id="b25ddab50687e5e7168c2e3221c5982ea48aaa35" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;to_formatted_s&lt;/code&gt; acts like &lt;code&gt;to_s&lt;/code&gt; by default.</source>
          <target state="translated">默认情况下，方法 &lt;code&gt;to_formatted_s&lt;/code&gt; 的行为类似于 &lt;code&gt;to_s&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2800ff6f2b96de9b72d620a5f58ae1e0841c919b" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;to_s&lt;/code&gt; provides a default specifier of &quot;F&quot;. This means that a simple call to &lt;code&gt;to_s&lt;/code&gt; will result in floating point representation instead of engineering notation:</source>
          <target state="translated">方法 &lt;code&gt;to_s&lt;/code&gt; 提供默认的说明符&amp;ldquo; F&amp;rdquo;。这意味着对 &lt;code&gt;to_s&lt;/code&gt; 的简单调用将导致浮点表示而不是工程表示法：</target>
        </trans-unit>
        <trans-unit id="b7c050e5958ce1fe8f9c1bab0bac53bdcf120f3c" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;to_sentence&lt;/code&gt; turns an array into a string containing a sentence that enumerates its items:</source>
          <target state="translated">方法 &lt;code&gt;to_sentence&lt;/code&gt; 将数组转换为字符串，该字符串包含一个枚举其项的句子：</target>
        </trans-unit>
        <trans-unit id="2524a9e324636fcdd082cb9a29ef299c0ddea118" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;to_xml&lt;/code&gt; returns a string containing an XML representation of its receiver:</source>
          <target state="translated">方法 &lt;code&gt;to_xml&lt;/code&gt; 返回一个字符串，该字符串包含其接收者的XML表示形式：</target>
        </trans-unit>
        <trans-unit id="59c0bc92f01100a9cc031a421d333b37a09ddef7" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;truncate&lt;/code&gt; returns a copy of its receiver truncated after a given &lt;code&gt;length&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;truncate&lt;/code&gt; 方法返回给定 &lt;code&gt;length&lt;/code&gt; 后被截断的接收者的副本：</target>
        </trans-unit>
        <trans-unit id="b1562a387389afb4f581f9b1a1ebd89caf5ecb3c" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;truncate_words&lt;/code&gt; returns a copy of its receiver truncated after a given number of words:</source>
          <target state="translated">&lt;code&gt;truncate_words&lt;/code&gt; 方法返回给定数目的单词后被截断的接收者的副本：</target>
        </trans-unit>
        <trans-unit id="770445ffcdb5e5d9f57ab10d842bffa5bd0051ec" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;underscore&lt;/code&gt; goes the other way around, from camel case to paths:</source>
          <target state="translated">方法 &lt;code&gt;underscore&lt;/code&gt; 从驼峰到路径都是相反的：</target>
        </trans-unit>
        <trans-unit id="c982543515f1362bd3befc11f73b8e85e6f34c9f" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;utc&lt;/code&gt; gives you the same datetime in the receiver expressed in UTC.</source>
          <target state="translated">&lt;code&gt;utc&lt;/code&gt; 方法为您提供了以UTC表示的接收器中相同的日期时间。</target>
        </trans-unit>
        <trans-unit id="a3ce902d2fa93d5680d9025389c8b3d49da865a6" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;weeks_ago&lt;/code&gt; works analogously for weeks:</source>
          <target state="translated">类似的方法 &lt;code&gt;weeks_ago&lt;/code&gt; 工作数周：</target>
        </trans-unit>
        <trans-unit id="2e30119f0c67cfd57bce9d6914c30134d947806b" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;welcome_email&lt;/code&gt; returns an &lt;code&gt;ActionMailer::MessageDelivery&lt;/code&gt; object which can then just be told &lt;code&gt;deliver_now&lt;/code&gt; or &lt;code&gt;deliver_later&lt;/code&gt; to send itself out. The &lt;code&gt;ActionMailer::MessageDelivery&lt;/code&gt; object is just a wrapper around a &lt;code&gt;Mail::Message&lt;/code&gt;. If you want to inspect, alter, or do anything else with the &lt;code&gt;Mail::Message&lt;/code&gt; object you can access it with the &lt;code&gt;message&lt;/code&gt; method on the &lt;code&gt;ActionMailer::MessageDelivery&lt;/code&gt; object.</source>
          <target state="translated">方法 &lt;code&gt;welcome_email&lt;/code&gt; 返回一个 &lt;code&gt;ActionMailer::MessageDelivery&lt;/code&gt; 对象，然后可以告诉该对象 &lt;code&gt;deliver_now&lt;/code&gt; 或 &lt;code&gt;deliver_later&lt;/code&gt; 将自身发送出去。该 &lt;code&gt;ActionMailer::MessageDelivery&lt;/code&gt; 对象只是围绕着一个包装 &lt;code&gt;Mail::Message&lt;/code&gt; 。如果要检查，更改或对 &lt;code&gt;Mail::Message&lt;/code&gt; 对象进行其他操作，则可以使用 &lt;code&gt;ActionMailer::MessageDelivery&lt;/code&gt; 对象上的 &lt;code&gt;message&lt;/code&gt; 方法访问它。</target>
        </trans-unit>
        <trans-unit id="143476ef54c29a1ec148780dbea92c40c0a25b4e" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;with_indifferent_access&lt;/code&gt; returns an &lt;code&gt;ActiveSupport::HashWithIndifferentAccess&lt;/code&gt; out of its receiver:</source>
          <target state="translated">方法 &lt;code&gt;with_indifferent_access&lt;/code&gt; 从其接收者返回 &lt;code&gt;ActiveSupport::HashWithIndifferentAccess&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="376cd7ee7cb616a24d413450adee82f6527d2b4f" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;with_options&lt;/code&gt; provides a way to factor out common options in a series of method calls.</source>
          <target state="translated">&lt;code&gt;with_options&lt;/code&gt; 方法提供了一种在一系列方法调用中排除常见选项的方法。</target>
        </trans-unit>
        <trans-unit id="d918b0efff2157c8c8e66e095e36340c8d9725bb" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;without&lt;/code&gt; returns a copy of an enumerable with the specified elements removed:</source>
          <target state="translated">&lt;code&gt;without&lt;/code&gt; 该方法将返回已删除指定元素的枚举的副本：</target>
        </trans-unit>
        <trans-unit id="749ed452302f0bfc6da535e793254e8dd6d7ddc2" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;years_ago&lt;/code&gt; receives a number of years and returns the same date those many years ago:</source>
          <target state="translated">&lt;code&gt;years_ago&lt;/code&gt; 方法接收若干年并返回许多年前的同一日期：</target>
        </trans-unit>
        <trans-unit id="4eaf50f86f012b22cbcfd5d0712981b9b5c8c600" translate="yes" xml:space="preserve">
          <source>The method accepts an optional fourth argument to replace existing &lt;code&gt;NULL&lt;/code&gt;s with some other value. Use that one when enabling the constraint if needed, since otherwise those rows would not be valid.</source>
          <target state="translated">该方法接受可选的第四个参数，以将现有 &lt;code&gt;NULL&lt;/code&gt; 替换为其他值。如果需要，在启用约束时使用那个，否则这些行将无效。</target>
        </trans-unit>
        <trans-unit id="72a3e85771e7d5da34d4a62058419ff2db1527a9" translate="yes" xml:space="preserve">
          <source>The method arguments are symbols which correspond to the names of the methods which should be unscoped. The valid arguments are given in &lt;a href=&quot;querymethods#VALID_UNSCOPING_VALUES&quot;&gt;VALID_UNSCOPING_VALUES&lt;/a&gt;. The method can also be called with multiple arguments. For example:</source>
          <target state="translated">方法参数是符号，它们对应于应不受作用域限制的方法名称。有效参数在&lt;a href=&quot;querymethods#VALID_UNSCOPING_VALUES&quot;&gt;VALID_UNSCOPING_VALUES&lt;/a&gt;中给出。也可以使用多个参数来调用该方法。例如：</target>
        </trans-unit>
        <trans-unit id="f29811b2344f3c781cc85f6126a7eba350e8f54e" translate="yes" xml:space="preserve">
          <source>The method can be used in several slightly different ways, depending on how much you wish to rely on Rails to infer automatically from the model how the form should be constructed. For a generic model object, a form can be created by passing &lt;code&gt;form_for&lt;/code&gt; a string or symbol representing the object we are concerned with:</source>
          <target state="translated">该方法可以以几种略有不同的方式使用，具体取决于您希望依靠Rails从模型中自动推断出应该如何构造表单的方式。对于通用模型对象，可以通过传递 &lt;code&gt;form_for&lt;/code&gt; 表示我们关注的对象的字符串或符号来创建表单：</target>
        </trans-unit>
        <trans-unit id="df59aa5f4379b6a7b3027cf6de35b290d184f6f8" translate="yes" xml:space="preserve">
          <source>The method must be public in the target.</source>
          <target state="translated">该方法在目标中必须是公共的。</target>
        </trans-unit>
        <trans-unit id="0ea58e33d4325a5441c0ed44a3d6618cc3feba41" translate="yes" xml:space="preserve">
          <source>The method name is generated by replacing spaces with underscores. The result does not need to be a valid Ruby identifier though, the name may contain punctuation characters etc. That's because in Ruby technically any string may be a method name. This may require use of &lt;code&gt;define_method&lt;/code&gt; and &lt;code&gt;send&lt;/code&gt; calls to function properly, but formally there's little restriction on the name.</source>
          <target state="translated">方法名称是通过用下划线替换空格来生成的。但是，结果不必是有效的Ruby标识符，该名称可以包含标点符号等。这是因为从技术上讲，在Ruby中，任何字符串都可以是方法名称。这可能需要使用 &lt;code&gt;define_method&lt;/code&gt; 并 &lt;code&gt;send&lt;/code&gt; 调用才能正常运行，但是在形式上对名称几乎没有限制。</target>
        </trans-unit>
        <trans-unit id="3f48950e7a1291930ff3ceba91618afc3d58f76d" translate="yes" xml:space="preserve">
          <source>The method reference callbacks work by specifying a protected or private method available in the object, like this:</source>
          <target state="translated">方法引用回调通过指定对象中可用的protected或private方法来工作,像这样。</target>
        </trans-unit>
        <trans-unit id="4c103e976f66c3afee2e0a77e51963a42f30a430" translate="yes" xml:space="preserve">
          <source>The method reference is the preferred approach to variable layouts and is used like this:</source>
          <target state="translated">方法引用是变量布局的首选方法,使用方法是这样的。</target>
        </trans-unit>
        <trans-unit id="0177f2d4e9121bd990bbdc6e21ee4939f478d0b6" translate="yes" xml:space="preserve">
          <source>The method simply stores an error message in the flash and redirects to the login form if the user is not logged in. If a &quot;before&quot; filter renders or redirects, the action will not run. If there are additional filters scheduled to run after that filter, they are also cancelled.</source>
          <target state="translated">该方法只是在flash中存储一个错误信息,如果用户没有登录,则重定向到登录表单。如果 &quot;之前 &quot;的过滤器渲染或重定向,该动作将不会运行。如果在该过滤器之后还有其他过滤器计划运行,它们也会被取消。</target>
        </trans-unit>
        <trans-unit id="e51ca83b78ed3a96cbc5befd362957c1169c765e" translate="yes" xml:space="preserve">
          <source>The method understands qualified table names:</source>
          <target state="translated">该方法可以理解限定表名。</target>
        </trans-unit>
        <trans-unit id="c350fc830645f9176dfd3818099b11ae3983bdbf" translate="yes" xml:space="preserve">
          <source>The method will also ensure an HTTP &lt;a href=&quot;../date&quot;&gt;Date&lt;/a&gt; header for client compatibility.</source>
          <target state="translated">该方法还将确保HTTP &lt;a href=&quot;../date&quot;&gt;Date&lt;/a&gt;标头可实现客户端兼容性。</target>
        </trans-unit>
        <trans-unit id="c7c7f5ee384fe2044ad32d25e79e26d5f3aa690a" translate="yes" xml:space="preserve">
          <source>The methods &lt;code&gt;Range#===&lt;/code&gt;, &lt;code&gt;Range#include?&lt;/code&gt;, and &lt;code&gt;Range#cover?&lt;/code&gt; say whether some value falls between the ends of a given instance:</source>
          <target state="translated">方法 &lt;code&gt;Range#===&lt;/code&gt; ， &lt;code&gt;Range#include?&lt;/code&gt; 和 &lt;code&gt;Range#cover?&lt;/code&gt; 说出某个值是否落在给定实例的两端之间：</target>
        </trans-unit>
        <trans-unit id="d9a7edd36cd3f87a9ac106594572cc990797d90a" translate="yes" xml:space="preserve">
          <source>The methods &lt;code&gt;beginning_of_month&lt;/code&gt; and &lt;code&gt;end_of_month&lt;/code&gt; return the dates for the beginning and end of the month:</source>
          <target state="translated">该方法 &lt;code&gt;beginning_of_month&lt;/code&gt; 和 &lt;code&gt;end_of_month&lt;/code&gt; 回报月的开始和结束日期：</target>
        </trans-unit>
        <trans-unit id="b082ddf7d0327c04320194626ffb003ed515c178" translate="yes" xml:space="preserve">
          <source>The methods &lt;code&gt;beginning_of_quarter&lt;/code&gt; and &lt;code&gt;end_of_quarter&lt;/code&gt; return the dates for the beginning and end of the quarter of the receiver's calendar year:</source>
          <target state="translated">该方法 &lt;code&gt;beginning_of_quarter&lt;/code&gt; 和 &lt;code&gt;end_of_quarter&lt;/code&gt; 返回的日期开始和接收器的历年季度末：</target>
        </trans-unit>
        <trans-unit id="d9a727e15831861050a8ad7462355064dc28ab58" translate="yes" xml:space="preserve">
          <source>The methods &lt;code&gt;beginning_of_week&lt;/code&gt; and &lt;code&gt;end_of_week&lt;/code&gt; return the dates for the beginning and end of the week, respectively. Weeks are assumed to start on Monday, but that can be changed passing an argument, setting thread local &lt;code&gt;Date.beginning_of_week&lt;/code&gt; or &lt;code&gt;config.beginning_of_week&lt;/code&gt;.</source>
          <target state="translated">该方法 &lt;code&gt;beginning_of_week&lt;/code&gt; 和 &lt;code&gt;end_of_week&lt;/code&gt; 分别返回一周的开始和结束的日期。假设周从星期一开始，但是可以通过传递参数，设置线程本地 &lt;code&gt;Date.beginning_of_week&lt;/code&gt; 或 &lt;code&gt;config.beginning_of_week&lt;/code&gt; 来更改。</target>
        </trans-unit>
        <trans-unit id="bc61fc2dcfd38d754ffc1b03fdf37a7ac79771a6" translate="yes" xml:space="preserve">
          <source>The methods &lt;code&gt;beginning_of_year&lt;/code&gt; and &lt;code&gt;end_of_year&lt;/code&gt; return the dates for the beginning and end of the year:</source>
          <target state="translated">该方法 &lt;code&gt;beginning_of_year&lt;/code&gt; 和 &lt;code&gt;end_of_year&lt;/code&gt; 换取一年的开始和结束日期：</target>
        </trans-unit>
        <trans-unit id="c93442f75ad37d78087c0cd7de4798ce7440226e" translate="yes" xml:space="preserve">
          <source>The methods &lt;code&gt;monday&lt;/code&gt; and &lt;code&gt;sunday&lt;/code&gt; return the dates for the previous Monday and next Sunday, respectively.</source>
          <target state="translated">&lt;code&gt;monday&lt;/code&gt; 和 &lt;code&gt;sunday&lt;/code&gt; 方法分别返回上一个星期一和下一个星期日的日期。</target>
        </trans-unit>
        <trans-unit id="101e739f5a98fcc8679ad2d254272635b35eb22b" translate="yes" xml:space="preserve">
          <source>The methods &lt;code&gt;months_ago&lt;/code&gt; and &lt;code&gt;months_since&lt;/code&gt; work analogously for months:</source>
          <target state="translated">方法 &lt;code&gt;months_ago&lt;/code&gt; 和 &lt;code&gt;months_since&lt;/code&gt; 类似地工作了几个月：</target>
        </trans-unit>
        <trans-unit id="a57bf9a6a89002a3c34cc6c1d424b2ec54e1d27a" translate="yes" xml:space="preserve">
          <source>The methods &lt;code&gt;second&lt;/code&gt;, &lt;code&gt;third&lt;/code&gt;, &lt;code&gt;fourth&lt;/code&gt;, and &lt;code&gt;fifth&lt;/code&gt; return the corresponding element, as do &lt;code&gt;second_to_last&lt;/code&gt; and &lt;code&gt;third_to_last&lt;/code&gt; (&lt;code&gt;first&lt;/code&gt; and &lt;code&gt;last&lt;/code&gt; are built-in). Thanks to social wisdom and positive constructiveness all around, &lt;code&gt;forty_two&lt;/code&gt; is also available.</source>
          <target state="translated">所述方法 &lt;code&gt;second&lt;/code&gt; ， &lt;code&gt;third&lt;/code&gt; ， &lt;code&gt;fourth&lt;/code&gt; ，和 &lt;code&gt;fifth&lt;/code&gt; 返回相应的元件，因为这样做 &lt;code&gt;second_to_last&lt;/code&gt; 和 &lt;code&gt;third_to_last&lt;/code&gt; （ &lt;code&gt;first&lt;/code&gt; 和 &lt;code&gt;last&lt;/code&gt; 是内置的）。多亏了社会的智慧和积极的建设性，也有四 &lt;code&gt;forty_two&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="302a64dec0c184391c6bcb15ca258c399575c5b1" translate="yes" xml:space="preserve">
          <source>The methods &lt;code&gt;silence_warnings&lt;/code&gt; and &lt;code&gt;enable_warnings&lt;/code&gt; change the value of &lt;code&gt;$VERBOSE&lt;/code&gt; accordingly for the duration of their block, and reset it afterwards:</source>
          <target state="translated">方法 &lt;code&gt;silence_warnings&lt;/code&gt; 和 &lt;code&gt;enable_warnings&lt;/code&gt; 在块的持续时间内相应地更改 &lt;code&gt;$VERBOSE&lt;/code&gt; 的值，然后将其重置：</target>
        </trans-unit>
        <trans-unit id="10ee15491942712a1e41b76c89b0f5f1b22a509f" translate="yes" xml:space="preserve">
          <source>The methods &lt;code&gt;to_date&lt;/code&gt;, &lt;code&gt;to_time&lt;/code&gt;, and &lt;code&gt;to_datetime&lt;/code&gt; are basically convenience wrappers around &lt;code&gt;Date._parse&lt;/code&gt;:</source>
          <target state="translated">方法 &lt;code&gt;to_date&lt;/code&gt; ， &lt;code&gt;to_time&lt;/code&gt; 和 &lt;code&gt;to_datetime&lt;/code&gt; 基本上是 &lt;code&gt;Date._parse&lt;/code&gt; 周围的方便包装器：</target>
        </trans-unit>
        <trans-unit id="cbe25a0862b8a2b5ae25688ccd92978edff13bd7" translate="yes" xml:space="preserve">
          <source>The methods &lt;code&gt;to_options&lt;/code&gt; and &lt;code&gt;to_options!&lt;/code&gt; are respectively aliases of &lt;code&gt;symbolize_keys&lt;/code&gt; and &lt;code&gt;symbolize_keys!&lt;/code&gt;.</source>
          <target state="translated">方法 &lt;code&gt;to_options&lt;/code&gt; 和 &lt;code&gt;to_options!&lt;/code&gt; 分别是 &lt;code&gt;symbolize_keys&lt;/code&gt; 和 &lt;code&gt;symbolize_keys!&lt;/code&gt; 别名！。</target>
        </trans-unit>
        <trans-unit id="28acdf93546eacce94f3d9bcd3f859094ac99119" translate="yes" xml:space="preserve">
          <source>The methods Active Record provides to manipulate your database.</source>
          <target state="translated">Active Record提供的方法可以操作你的数据库。</target>
        </trans-unit>
        <trans-unit id="e01fbc4ac2e1415be0e05e3a36a4769e572ae738" translate="yes" xml:space="preserve">
          <source>The methods are:</source>
          <target state="translated">这些方法是:</target>
        </trans-unit>
        <trans-unit id="85ead67c11e5371c2a532edbb9f016817232ba42" translate="yes" xml:space="preserve">
          <source>The methods that are available for generators are covered in the &lt;a href=&quot;#generator-methods&quot;&gt;final section&lt;/a&gt; of this guide.</source>
          <target state="translated">本指南的&lt;a href=&quot;#generator-methods&quot;&gt;最后一部分&lt;/a&gt;介绍了可用于发电机的方法。</target>
        </trans-unit>
        <trans-unit id="632757f8db9c26f8fc3f69acc6499d156989d659" translate="yes" xml:space="preserve">
          <source>The migration DSL has been expanded to support foreign key definitions. If you've been using the Foreigner gem, you might want to consider removing it. Note that the foreign key support of Rails is a subset of Foreigner. This means that not every Foreigner definition can be fully replaced by its Rails migration DSL counterpart.</source>
          <target state="translated">迁移DSL已经扩展到支持外键定义。如果你一直在使用Foreigner gem,你可能要考虑将其删除。请注意,Rails的外键支持是Foreigner的一个子集。这意味着并非每个Foreigner定义都能完全被Rails迁移DSL对应的定义所取代。</target>
        </trans-unit>
        <trans-unit id="064ad71d72802cf5173a957b04d66eaf6ae10a67" translate="yes" xml:space="preserve">
          <source>The migration method &lt;code&gt;create_join_table&lt;/code&gt; creates an HABTM (has and belongs to many) join table. A typical use would be:</source>
          <target state="translated">迁移方法 &lt;code&gt;create_join_table&lt;/code&gt; 创建一个HABTM（具有并属于多个）连接表。典型的用法是：</target>
        </trans-unit>
        <trans-unit id="46f69d5e49bda7d74e75c9f40f69e27e28ae44b1" translate="yes" xml:space="preserve">
          <source>The migration procedure is as follows:</source>
          <target state="translated">迁移程序如下:</target>
        </trans-unit>
        <trans-unit id="ab24c1cdb4bc14a36f9680163589fdc69716d944" translate="yes" xml:space="preserve">
          <source>The migration requires that we &lt;strong&gt;migrate&lt;/strong&gt;, that is, run some Ruby code (living in that &lt;code&gt;20130717151933_create_high_scores.rb&lt;/code&gt;) to modify the schema of our database. Which database? The SQLite3 database that Rails will create for you when we run the &lt;code&gt;rails db:migrate&lt;/code&gt; command. We'll talk more about that command below.</source>
          <target state="translated">迁移要求我们进行&lt;strong&gt;迁移&lt;/strong&gt;，即运行一些Ruby代码（位于 &lt;code&gt;20130717151933_create_high_scores.rb&lt;/code&gt; 中）来修改数据库的架构。哪个数据库？当我们运行 &lt;code&gt;rails db:migrate&lt;/code&gt; 命令时，Rails将为您创建的SQLite3数据库。我们将在下面详细讨论该命令。</target>
        </trans-unit>
        <trans-unit id="106794560ae8481f1f8e790f3f30a20620d4b2b3" translate="yes" xml:space="preserve">
          <source>The migration version, migration file name, migration class name are available as instance variables in the template to be rendered.</source>
          <target state="translated">迁移版本、迁移文件名、迁移类名在要渲染的模板中可作为实例变量。</target>
        </trans-unit>
        <trans-unit id="264fdcd063a5b992cffc029bb74fd19a7ee3ecc8" translate="yes" xml:space="preserve">
          <source>The migrations paths for a database configuration. If the &lt;code&gt;migrations_paths&lt;/code&gt; key is present in the config, &lt;code&gt;migrations_paths&lt;/code&gt; will return its value.</source>
          <target state="translated">数据库配置的迁移路径。如果配置中存在 &lt;code&gt;migrations_paths&lt;/code&gt; 键，则 &lt;code&gt;migrations_paths&lt;/code&gt; 将返回其值。</target>
        </trans-unit>
        <trans-unit id="1ffa60f96218aefefa017b3600936d844a777339" translate="yes" xml:space="preserve">
          <source>The model and scaffold generators will create migrations appropriate for adding a new model. This migration will already contain instructions for creating the relevant table. If you tell Rails what columns you want, then statements for adding these columns will also be created. For example, running:</source>
          <target state="translated">模型和脚手架生成器将创建适合添加新模型的迁移。这个迁移将已经包含创建相关表的说明。如果你告诉Rails你想要什么列,那么也会创建用于添加这些列的语句。例如,运行</target>
        </trans-unit>
        <trans-unit id="249b19b94a2baf19802b3a383ce518c8761e1284" translate="yes" xml:space="preserve">
          <source>The model class method &lt;code&gt;accepts_nested_attributes_for&lt;/code&gt; allows you to update and destroy associated records. This is based on the &lt;code&gt;id&lt;/code&gt; and &lt;code&gt;_destroy&lt;/code&gt; parameters:</source>
          <target state="translated">模型类方法 &lt;code&gt;accepts_nested_attributes_for&lt;/code&gt; 允许您更新和销毁关联的记录。这基于 &lt;code&gt;id&lt;/code&gt; 和 &lt;code&gt;_destroy&lt;/code&gt; 参数：</target>
        </trans-unit>
        <trans-unit id="e14cc259f2fce88b090eb2cb7128b471b333c1e8" translate="yes" xml:space="preserve">
          <source>The model file, &lt;code&gt;app/models/article.rb&lt;/code&gt; is about as simple as it can get:</source>
          <target state="translated">模型文件 &lt;code&gt;app/models/article.rb&lt;/code&gt; 尽可能简单：</target>
        </trans-unit>
        <trans-unit id="eba21083dc8e4e9c25ca1f480fd47c8b083c4073" translate="yes" xml:space="preserve">
          <source>The module object following a &lt;code&gt;module&lt;/code&gt; keyword gets pushed when its body is executed, and popped after it.</source>
          <target state="translated">&lt;code&gt;module&lt;/code&gt; 关键字后面的模块对象在执行其主体时会被推送，并在其后弹出。</target>
        </trans-unit>
        <trans-unit id="83bfde6905a12029da10ae0302da14e944a33572" translate="yes" xml:space="preserve">
          <source>The more generic form can also be used:</source>
          <target state="translated">也可以使用更通用的形式。</target>
        </trans-unit>
        <trans-unit id="8749a8b69f507a203077616aca924230b98cbb6b" translate="yes" xml:space="preserve">
          <source>The more prepared statements in use: the more memory your database will require. If your PostgreSQL database is hitting memory limits, try lowering &lt;code&gt;statement_limit&lt;/code&gt; or disabling prepared statements.</source>
          <target state="translated">使用的准备语句越多：数据库将需要更多的内存。如果您的PostgreSQL数据库达到内存限制，请尝试降低 &lt;code&gt;statement_limit&lt;/code&gt; 或禁用准备好的语句。</target>
        </trans-unit>
        <trans-unit id="559aa9c854f2130ef8fac1dca2f96f39aeb3d7e4" translate="yes" xml:space="preserve">
          <source>The most common XSS language is of course the most popular client-side scripting language JavaScript, often in combination with HTML. &lt;em&gt;Escaping user input is essential&lt;/em&gt;.</source>
          <target state="translated">当然，最常见的XSS语言是最流行的客户端脚本语言JavaScript，通常与HTML结合使用。&lt;em&gt;转义用户输入至关重要&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="a394aaf66692ca993ee720ec89c38286621984ad" translate="yes" xml:space="preserve">
          <source>The most common commands of the &lt;code&gt;db:&lt;/code&gt; rails namespace are &lt;code&gt;migrate&lt;/code&gt; and &lt;code&gt;create&lt;/code&gt;, and it will pay off to try out all of the migration rails commands (&lt;code&gt;up&lt;/code&gt;, &lt;code&gt;down&lt;/code&gt;, &lt;code&gt;redo&lt;/code&gt;, &lt;code&gt;reset&lt;/code&gt;). &lt;code&gt;rails db:version&lt;/code&gt; is useful when troubleshooting, telling you the current version of the database.</source>
          <target state="translated">在最常用的命令 &lt;code&gt;db:&lt;/code&gt; 轨命名空间的 &lt;code&gt;migrate&lt;/code&gt; 和 &lt;code&gt;create&lt;/code&gt; ，它会还清尝试所有的迁移轨命令（ &lt;code&gt;up&lt;/code&gt; ， &lt;code&gt;down&lt;/code&gt; ， &lt;code&gt;redo&lt;/code&gt; ， &lt;code&gt;reset&lt;/code&gt; ）。 &lt;code&gt;rails db:version&lt;/code&gt; 在进行故障排除时非常有用，它可以告诉您数据库的当前版本。</target>
        </trans-unit>
        <trans-unit id="2d09f26c4b080f0da2d9b5d96ee1a38b054f08f7" translate="yes" xml:space="preserve">
          <source>The most common entry points are message posts, user comments, and guest books, but project titles, document names, and search result pages have also been vulnerable - just about everywhere where the user can input data. But the input does not necessarily have to come from input boxes on web sites, it can be in any URL parameter - obvious, hidden or internal. Remember that the user may intercept any traffic. Applications or client-site proxies make it easy to change requests. There are also other attack vectors like banner advertisements.</source>
          <target state="translated">最常见的入口点是留言帖、用户评论和留言簿,但项目标题、文档名称和搜索结果页面也存在漏洞--几乎所有用户可以输入数据的地方。但输入的数据不一定来自于网站上的输入框,它可以在任何URL参数中--明显的、隐藏的或内部的。请记住,用户可能拦截任何流量。应用程序或客户端-网站代理使其很容易改变请求。还有其他攻击载体,如横幅广告。</target>
        </trans-unit>
        <trans-unit id="445653008345676d9901d54b1dd03fc1df7ab282" translate="yes" xml:space="preserve">
          <source>The most common parameter that a user might tamper with, is the id parameter, as in &lt;code&gt;http://www.domain.com/project/1&lt;/code&gt;, whereas 1 is the id. It will be available in params in the controller. There, you will most likely do something like this:</source>
          <target state="translated">用户可能会篡改的最常见参数是id参数，例如 &lt;code&gt;http://www.domain.com/project/1&lt;/code&gt; ，而1是id。它将在控制器的参数中可用。在那里，您很可能会执行以下操作：</target>
        </trans-unit>
        <trans-unit id="539024df1130477692163b826318e13606156156" translate="yes" xml:space="preserve">
          <source>The most common usage pattern for this method is probably in a migration, when just after creating a table you want to populate it with some default values, eg:</source>
          <target state="translated">这个方法最常见的使用模式可能是在迁移过程中,当刚创建完一个表,你就想用一些默认值来填充它,比如说。</target>
        </trans-unit>
        <trans-unit id="53c94369ca312f2c571a25a01b217c63a4032152" translate="yes" xml:space="preserve">
          <source>The most effective countermeasure is to &lt;em&gt;issue a new session identifier&lt;/em&gt; and declare the old one invalid after a successful login. That way, an attacker cannot use the fixed session identifier. This is a good countermeasure against session hijacking, as well. Here is how to create a new session in Rails:</source>
          <target state="translated">最有效的对策是在成功登录后&lt;em&gt;发出新的会话标识符&lt;/em&gt;并声明旧的&lt;em&gt;会话标识符&lt;/em&gt;无效。这样，攻击者无法使用固定的会话标识符。这也是防止会话劫持的好措施。这是在Rails中创建新会话的方法：</target>
        </trans-unit>
        <trans-unit id="ed10c5c1398c3d0f83d0fb9826f7a006d60d6b58" translate="yes" xml:space="preserve">
          <source>The most efficient way to implement low-level caching is using the &lt;code&gt;Rails.cache.fetch&lt;/code&gt; method. This method does both reading and writing to the cache. When passed only a single argument, the key is fetched and value from the cache is returned. If a block is passed, that block will be executed in the event of a cache miss. The return value of the block will be written to the cache under the given cache key, and that return value will be returned. In case of cache hit, the cached value will be returned without executing the block.</source>
          <target state="translated">实现低级缓存的最有效方法是使用 &lt;code&gt;Rails.cache.fetch&lt;/code&gt; 方法。此方法同时读取和写入高速缓存。仅传递单个参数时，将获取键并返回缓存中的值。如果传递了一个块，则在高速缓存未命中时将执行该块。该块的返回值将在给定的缓存键下写入到缓存中，并将返回该返回值。如果发生高速缓存命中，则将返回高速缓存的值，而不执行该块。</target>
        </trans-unit>
        <trans-unit id="1bf4622040a1d5fcf3d59cf7f1f8b690e8a3cdf9" translate="yes" xml:space="preserve">
          <source>The most generic helper is &lt;code&gt;select_tag&lt;/code&gt;, which - as the name implies - simply generates the &lt;code&gt;SELECT&lt;/code&gt; tag that encapsulates an options string:</source>
          <target state="translated">最通用的帮助器是 &lt;code&gt;select_tag&lt;/code&gt; ，顾名思义，它只是生成封装了选项字符串的 &lt;code&gt;SELECT&lt;/code&gt; 标记：</target>
        </trans-unit>
        <trans-unit id="0509ac0ca8c10723fb1e7121e2ee0f87534275c0" translate="yes" xml:space="preserve">
          <source>The most generic way to jump to another datetime is &lt;code&gt;advance&lt;/code&gt;. This method receives a hash with keys &lt;code&gt;:years&lt;/code&gt;, &lt;code&gt;:months&lt;/code&gt;, &lt;code&gt;:weeks&lt;/code&gt;, &lt;code&gt;:days&lt;/code&gt;, &lt;code&gt;:hours&lt;/code&gt;, &lt;code&gt;:minutes&lt;/code&gt;, and &lt;code&gt;:seconds&lt;/code&gt;, and returns a datetime advanced as much as the present keys indicate.</source>
          <target state="translated">跳转到另一个日期时间的最通用方法是 &lt;code&gt;advance&lt;/code&gt; 。此方法接收具有键 &lt;code&gt;:years&lt;/code&gt; ， &lt;code&gt;:months&lt;/code&gt; ， &lt;code&gt;:weeks&lt;/code&gt; ， &lt;code&gt;:days&lt;/code&gt; ， &lt;code&gt;:hours&lt;/code&gt; ， &lt;code&gt;:minutes&lt;/code&gt; 和 &lt;code&gt;:seconds&lt;/code&gt; 的哈希，并返回与当前键指示的日期时间相同的日期时间。</target>
        </trans-unit>
        <trans-unit id="12e7e7cea726db9dc19377303f26cc2abd058530" translate="yes" xml:space="preserve">
          <source>The most generic way to jump to other days is &lt;code&gt;advance&lt;/code&gt;. This method receives a hash with keys &lt;code&gt;:years&lt;/code&gt;, &lt;code&gt;:months&lt;/code&gt;, &lt;code&gt;:weeks&lt;/code&gt;, &lt;code&gt;:days&lt;/code&gt;, and returns a date advanced as much as the present keys indicate:</source>
          <target state="translated">过渡到其他日子最通用的方法是 &lt;code&gt;advance&lt;/code&gt; 。此方法接收具有键 &lt;code&gt;:years&lt;/code&gt; ， &lt;code&gt;:months&lt;/code&gt; ， &lt;code&gt;:weeks&lt;/code&gt; ， &lt;code&gt;:days&lt;/code&gt; 的哈希，并返回与当前键指示的日期一样高的日期：</target>
        </trans-unit>
        <trans-unit id="ab1db0eb26e081fb619f5c2ecda6a3dfcb20b5b0" translate="yes" xml:space="preserve">
          <source>The most important methods of the I18n API are:</source>
          <target state="translated">I18n API最重要的方法是:</target>
        </trans-unit>
        <trans-unit id="de5193516e477d3a63bb08f8e687e1bad99cf2fe" translate="yes" xml:space="preserve">
          <source>The most lightweight way to get &lt;code&gt;blank?&lt;/code&gt; is to cherry-pick the file that defines it.</source>
          <target state="translated">最轻巧的方式来获得 &lt;code&gt;blank?&lt;/code&gt; 是挑选定义它的文件。</target>
        </trans-unit>
        <trans-unit id="deaa5c007cdde26cbe743db657315259b43d7a47" translate="yes" xml:space="preserve">
          <source>The most significant part of the reloading process is the Class Unload, where all autoloaded classes are removed, ready to be loaded again. This will occur immediately before either the Run or Complete callback, depending on the &lt;code&gt;reload_classes_only_on_change&lt;/code&gt; setting.</source>
          <target state="translated">重新加载过程中最重要的部分是类卸载，其中所有自动加载的类都已删除，准备再次加载。根据 &lt;code&gt;reload_classes_only_on_change&lt;/code&gt; 设置，这将在Run或Complete回调之前立即发生。</target>
        </trans-unit>
        <trans-unit id="f22b7e6bbaf30a8c9243fc72a0dbaa5e651e526a" translate="yes" xml:space="preserve">
          <source>The most simple negative CAPTCHA is one hidden honeypot field. On the server side, you will check the value of the field: If it contains any text, it must be a bot. Then, you can either ignore the post or return a positive result, but not saving the post to the database. This way the bot will be satisfied and moves on.</source>
          <target state="translated">最简单的负面验证码就是一个隐藏的蜜罐字段。在服务器端,你会检查该字段的值。如果它包含任何文本,它必须是一个机器人。然后,你可以忽略这个帖子,或者返回一个肯定的结果,但不把这个帖子保存到数据库。这样机器人就会满意并继续前进。</target>
        </trans-unit>
        <trans-unit id="5b08222207f915df820834ca331365d73b1692b3" translate="yes" xml:space="preserve">
          <source>The most usual way of setting (and passing) the locale would be to include it in URL params, as we did in the &lt;code&gt;I18n.with_locale(params[:locale], &amp;amp;action)&lt;/code&gt;&lt;em&gt;around_action&lt;/em&gt; in the first example. We would like to have URLs like &lt;code&gt;www.example.com/books?locale=ja&lt;/code&gt; or &lt;code&gt;www.example.com/ja/books&lt;/code&gt; in this case.</source>
          <target state="translated">设置（和传递）语言环境的最常用方法是将其包含在URL参数中，就像在第一个示例中的 &lt;code&gt;I18n.with_locale(params[:locale], &amp;amp;action)&lt;/code&gt; &lt;em&gt;around_action&lt;/em&gt;中&lt;em&gt;所做的&lt;/em&gt;那样。在这种情况下，我们希望使用类似 &lt;code&gt;www.example.com/books?locale=ja&lt;/code&gt; 或 &lt;code&gt;www.example.com/ja/books&lt;/code&gt; 之类的URL 。</target>
        </trans-unit>
        <trans-unit id="7e572f11bc576cfa35e26cdda3779b627b91359a" translate="yes" xml:space="preserve">
          <source>The mysql2 and postgresql adapters support setting the transaction isolation level.</source>
          <target state="translated">mysql2和postgresql适配器支持设置事务隔离级别。</target>
        </trans-unit>
        <trans-unit id="7abd2783257ce5c418b69249f67d3cccad19bd9b" translate="yes" xml:space="preserve">
          <source>The name is assumed to be the one of a top-level constant, no matter whether it starts with &amp;ldquo;::&amp;rdquo; or not. No lexical context is taken into account:</source>
          <target state="translated">无论名称是否以&amp;ldquo; ::&amp;rdquo;开头，都假定该名称是顶级常量之一。没有考虑任何词法上下文：</target>
        </trans-unit>
        <trans-unit id="7682be9c1ac3480a8408c4e7c8381256b4759439" translate="yes" xml:space="preserve">
          <source>The name may be given as a symbol or string. A symbol is tested against the bare constant name, a string is against the fully qualified constant name.</source>
          <target state="translated">名称可以是符号或字符串。符号是根据裸常数名进行测试,字符串是根据完全限定的常数名进行测试。</target>
        </trans-unit>
        <trans-unit id="ff2cc46757b67b828a3611568ef0999be93f8863" translate="yes" xml:space="preserve">
          <source>The name of children nodes is by default the name of the root node singularized. In the examples above we've seen &quot;contributor&quot; and &quot;object&quot;. The option &lt;code&gt;:children&lt;/code&gt; allows you to set these node names.</source>
          <target state="translated">子节点的名称默认情况下是单数的根节点的名称。在上面的示例中，我们看到了&amp;ldquo;贡献者&amp;rdquo;和&amp;ldquo;对象&amp;rdquo;。 &lt;code&gt;:children&lt;/code&gt; 选项允许您设置这些节点名称。</target>
        </trans-unit>
        <trans-unit id="9c6ce84bb5ee288c0d73a45b947b0bd4d166718a" translate="yes" xml:space="preserve">
          <source>The name of the column records are ordered by if no explicit order clause is used during an ordered finder call. If not set the primary key is used.</source>
          <target state="translated">如果在 ordered finder 调用期间没有使用显式的 order 子句,则列记录的名称被排序。如果没有设置,则使用主键。</target>
        </trans-unit>
        <trans-unit id="2d5cd10d5efb705d95ff6ef881164cb30052e176" translate="yes" xml:space="preserve">
          <source>The name of the event</source>
          <target state="translated">活动名称</target>
        </trans-unit>
        <trans-unit id="99cde37466813b73e8fdf6722f4504527670a021" translate="yes" xml:space="preserve">
          <source>The name of the file is passed as an argument, and the method yields a file handle opened for writing. Once the block is done &lt;code&gt;atomic_write&lt;/code&gt; closes the file handle and completes its job.</source>
          <target state="translated">文件名作为参数传递，该方法产生一个打开的文件句柄以进行写入。一旦完成该块， &lt;code&gt;atomic_write&lt;/code&gt; 将关闭文件句柄并完成其工作。</target>
        </trans-unit>
        <trans-unit id="0521ba09d337a2d778bfca23d5ae64a4f07775ab" translate="yes" xml:space="preserve">
          <source>The name of the internal metadata table. By default, the value is &lt;code&gt;&quot;ar_internal_metadata&quot;&lt;/code&gt;.</source>
          <target state="translated">内部元数据表的名称。默认情况下，值为 &lt;code&gt;&quot;ar_internal_metadata&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="87b9d571692332990b0d9ecc4d38d8bf64d75f30" translate="yes" xml:space="preserve">
          <source>The name of the other model is pluralized when declaring a &lt;code&gt;has_many&lt;/code&gt; association.</source>
          <target state="translated">声明 &lt;code&gt;has_many&lt;/code&gt; 关联时，另一个模型的名称是复数的。</target>
        </trans-unit>
        <trans-unit id="fae05eeb96ed23d05d4d24f0db744b426f26af4b" translate="yes" xml:space="preserve">
          <source>The name of the primary key, if one is to be added automatically. Defaults to &lt;code&gt;id&lt;/code&gt;. If &lt;code&gt;:id&lt;/code&gt; is false, then this option is ignored.</source>
          <target state="translated">主键的名称（如果要自动添加）。默认为 &lt;code&gt;id&lt;/code&gt; 。如果 &lt;code&gt;:id&lt;/code&gt; 为false，则忽略此选项。</target>
        </trans-unit>
        <trans-unit id="da0fc804bd180d28e2d8888d63d2769586922e81" translate="yes" xml:space="preserve">
          <source>The name of the schema migrations table. By default, the value is &lt;code&gt;&quot;schema_migrations&quot;&lt;/code&gt;.</source>
          <target state="translated">模式迁移表的名称。默认情况下，值为 &lt;code&gt;&quot;schema_migrations&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e6c80f6f8b2cab6f8d72af40fb12b078c9f2364a" translate="yes" xml:space="preserve">
          <source>The name of the table that contains the referenced primary key.</source>
          <target state="translated">包含引用的主键的表的名称。</target>
        </trans-unit>
        <trans-unit id="7b4e2235c7c60d1a2f073929cfea99b7c7914199" translate="yes" xml:space="preserve">
          <source>The name used to generate routing helpers.</source>
          <target state="translated">用于生成路由帮助程序的名称。</target>
        </trans-unit>
        <trans-unit id="3964abe7f918479b2abff91c768cdbbc000a3785" translate="yes" xml:space="preserve">
          <source>The namespace for :controller.</source>
          <target state="translated">:controller的命名空间。</target>
        </trans-unit>
        <trans-unit id="c0a61dcbd71b123c4388becd07a60ebdedcd55c9" translate="yes" xml:space="preserve">
          <source>The naming convention of controllers in Rails favors pluralization of the last word in the controller's name, although it is not strictly required (e.g. &lt;code&gt;ApplicationController&lt;/code&gt;). For example, &lt;code&gt;ClientsController&lt;/code&gt; is preferable to &lt;code&gt;ClientController&lt;/code&gt;, &lt;code&gt;SiteAdminsController&lt;/code&gt; is preferable to &lt;code&gt;SiteAdminController&lt;/code&gt; or &lt;code&gt;SitesAdminsController&lt;/code&gt;, and so on.</source>
          <target state="translated">尽管并非严格要求，但Rails中控制器的命名约定有利于控制器名称中最后一个单词的复数（例如， &lt;code&gt;ApplicationController&lt;/code&gt; ）。例如， &lt;code&gt;ClientsController&lt;/code&gt; 优于 &lt;code&gt;ClientController&lt;/code&gt; ， &lt;code&gt;SiteAdminsController&lt;/code&gt; 优于 &lt;code&gt;SiteAdminController&lt;/code&gt; 或 &lt;code&gt;SitesAdminsController&lt;/code&gt; ，依此类推。</target>
        </trans-unit>
        <trans-unit id="da43aa56708a046e9d919ba08558af7f2b7c90f6" translate="yes" xml:space="preserve">
          <source>The native Range#=== behavior is untouched.</source>
          <target state="translated">原生的Range#===行为不受影响。</target>
        </trans-unit>
        <trans-unit id="01d960ee2f543130c2fa5e0f4bbe3a7d3b4d5d58" translate="yes" xml:space="preserve">
          <source>The native Range#cover? behavior is untouched.</source>
          <target state="translated">原生的Range#cover?行为不受影响。</target>
        </trans-unit>
        <trans-unit id="addd76f14ed86b37f8794f1949371e30871af465" translate="yes" xml:space="preserve">
          <source>The native Range#include? behavior is untouched.</source>
          <target state="translated">原生的Range#include?行为不受影响。</target>
        </trans-unit>
        <trans-unit id="955570bf5e30a267b95e2b19e01795ab5b90fe19" translate="yes" xml:space="preserve">
          <source>The negative of the &lt;code&gt;Enumerable#include?&lt;/code&gt;. Returns &lt;code&gt;true&lt;/code&gt; if the collection does not include the object.</source>
          <target state="translated">&lt;code&gt;Enumerable#include?&lt;/code&gt; 的负数？。如果集合不包含该对象，则返回 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="aa592105289e44cdc2fe7058b0d283c263374192" translate="yes" xml:space="preserve">
          <source>The nesting at the top-level of code interpreted by &lt;code&gt;Kernel#load&lt;/code&gt; is empty unless the &lt;code&gt;load&lt;/code&gt; call receives a true value as second argument, in which case a newly created anonymous module is pushed by Ruby.</source>
          <target state="translated">除非 &lt;code&gt;load&lt;/code&gt; 调用将真实值作为第二个参数，否则由 &lt;code&gt;Kernel#load&lt;/code&gt; 解释的代码的顶级嵌套为空，在这种情况下，Ruby将推入一个新创建的匿名模块。</target>
        </trans-unit>
        <trans-unit id="44f681ce3d5bf281490d9093acabc279f90b97b0" translate="yes" xml:space="preserve">
          <source>The nesting in (3) consists of two module objects:</source>
          <target state="translated">(3)中的嵌套由两个模块对象组成。</target>
        </trans-unit>
        <trans-unit id="1f2776db1df9e895a5437fc06cd98a8e3f712806" translate="yes" xml:space="preserve">
          <source>The nesting is an internal stack maintained by the interpreter, and it gets modified according to these rules:</source>
          <target state="translated">嵌套是由解释器维护的内部栈,它会根据这些规则得到修改。</target>
        </trans-unit>
        <trans-unit id="d8132f087b3a3c8f4dbbe4d6d5c2d07c8a3b1719" translate="yes" xml:space="preserve">
          <source>The new Rails version might have different configuration defaults than the previous version. However, after following the steps described above, your application would still run with configuration defaults from the &lt;em&gt;previous&lt;/em&gt; Rails version. That's because the value for &lt;code&gt;config.load_defaults&lt;/code&gt; in &lt;code&gt;config/application.rb&lt;/code&gt; has not been changed yet.</source>
          <target state="translated">新的Rails版本可能具有与先前版本不同的默认配置。但是，按照上述步骤操作后，您的应用程序仍将使用&lt;em&gt;先前&lt;/em&gt; Rails版本的配置默认值运行。这是因为该值 &lt;code&gt;config.load_defaults&lt;/code&gt; 中 &lt;code&gt;config/application.rb&lt;/code&gt; 尚未改变。</target>
        </trans-unit>
        <trans-unit id="5cd4f4aaeecefdcd80f1ff388b96a1c0963cfd34" translate="yes" xml:space="preserve">
          <source>The new adjusted credit value is stored in the session.</source>
          <target state="translated">新的调整后的信用值被存储在会话中。</target>
        </trans-unit>
        <trans-unit id="3236ac103406c4313c28858fa0a2054906ffe321" translate="yes" xml:space="preserve">
          <source>The new configuration point</source>
          <target state="translated">新配置点</target>
        </trans-unit>
        <trans-unit id="0da16999f13727907b8b87c6035cd8e31952aef2" translate="yes" xml:space="preserve">
          <source>The new instance is yielded to the passed block. Typically the block will create some routes using &lt;code&gt;set.draw { match ... }&lt;/code&gt;:</source>
          <target state="translated">新实例将产生给传递的块。通常，该块将使用 &lt;code&gt;set.draw { match ... }&lt;/code&gt; 创建一些路由：</target>
        </trans-unit>
        <trans-unit id="361f89f47f1ce3ba7058a4305e31979330927e55" translate="yes" xml:space="preserve">
          <source>The new method, &lt;code&gt;update&lt;/code&gt;, is used when you want to update a record that already exists, and it accepts a hash containing the attributes that you want to update. As before, if there was an error updating the article we want to show the form back to the user.</source>
          <target state="translated">当您要更新已存在的记录时，将使用新方法 &lt;code&gt;update&lt;/code&gt; ，它接受包含要更新的属性的哈希。和以前一样，如果更新文章时出错，我们希望将表单显示给用户。</target>
        </trans-unit>
        <trans-unit id="6412348bc9179e1b6361749c95aec125c2d79269" translate="yes" xml:space="preserve">
          <source>The new record might not be saved to the database; that depends on whether validations passed or not (just like &lt;code&gt;create&lt;/code&gt;).</source>
          <target state="translated">新记录可能不会保存到数据库；这取决于验证是否通过（就像 &lt;code&gt;create&lt;/code&gt; 一样）。</target>
        </trans-unit>
        <trans-unit id="74f8325afa2e53ab911c7dd3a1bd0b5d96aac1df" translate="yes" xml:space="preserve">
          <source>The new version updates &lt;code&gt;sanitize&lt;/code&gt;, so it can take a &lt;code&gt;Loofah::Scrubber&lt;/code&gt; for powerful scrubbing. &lt;a href=&quot;https://github.com/flavorjones/loofah#loofahscrubber&quot;&gt;See some examples of scrubbers here&lt;/a&gt;.</source>
          <target state="translated">新版本更新了 &lt;code&gt;sanitize&lt;/code&gt; ，因此可以使用 &lt;code&gt;Loofah::Scrubber&lt;/code&gt; 进行强大的清理。&lt;a href=&quot;https://github.com/flavorjones/loofah#loofahscrubber&quot;&gt;在此处查看洗涤器的一些示例&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d1894e9581c114e574d8b39a2616de5b78a0f089" translate="yes" xml:space="preserve">
          <source>The next customization on the workflow will be to stop generating stylesheet and test fixture files for scaffolds altogether. We can achieve that by changing our configuration to the following:</source>
          <target state="translated">下一个对工作流的定制将是完全停止为脚手架生成样式表和测试夹具文件。我们可以通过将我们的配置改为以下内容来实现。</target>
        </trans-unit>
        <trans-unit id="c8b49bfc24f4c677b6906642f014ecee042d3e62" translate="yes" xml:space="preserve">
          <source>The next level is to simply load all extensions to &lt;code&gt;Object&lt;/code&gt;. As a rule of thumb, extensions to &lt;code&gt;SomeClass&lt;/code&gt; are available in one shot by loading &lt;code&gt;active_support/core_ext/some_class&lt;/code&gt;.</source>
          <target state="translated">下一步是简单地将所有扩展加载到 &lt;code&gt;Object&lt;/code&gt; 。根据经验，可以通过加载 &lt;code&gt;active_support/core_ext/some_class&lt;/code&gt; 一次性获得 &lt;code&gt;SomeClass&lt;/code&gt; 的扩展。</target>
        </trans-unit>
        <trans-unit id="b6a1f1dbc7d882abfb6cfb4b67d27a4e28897661" translate="yes" xml:space="preserve">
          <source>The next line in &lt;code&gt;config/application.rb&lt;/code&gt; is:</source>
          <target state="translated">&lt;code&gt;config/application.rb&lt;/code&gt; 中的下一行是：</target>
        </trans-unit>
        <trans-unit id="890dcab656e3faff6f378319839d5ff9b37f86c6" translate="yes" xml:space="preserve">
          <source>The next problem was MySpace filtering the word &quot;javascript&quot;, so the author used &quot;java&amp;lt;NEWLINE&amp;gt;script&quot; to get around this:</source>
          <target state="translated">下一个问题是MySpace过滤了&amp;ldquo; javascript&amp;rdquo;一词，因此作者使用&amp;ldquo; java &amp;lt;NEWLINE&amp;gt; script&amp;rdquo;来解决此问题：</target>
        </trans-unit>
        <trans-unit id="86ab928a1a7619a09a73390e50d76a97c8e90778" translate="yes" xml:space="preserve">
          <source>The next step is to make the class that represents a &lt;code&gt;User&lt;/code&gt; in the application customizable for the engine. This is because that class may not always be &lt;code&gt;User&lt;/code&gt;, as previously explained. To make this setting customizable, the engine will have a configuration setting called &lt;code&gt;author_class&lt;/code&gt; that will be used to specify which class represents users inside the application.</source>
          <target state="translated">下一步是使代表 &lt;code&gt;User&lt;/code&gt; 的类在应用程序中为引擎可定制。这是因为如前所述，该类可能并不总是 &lt;code&gt;User&lt;/code&gt; 。为了使此设置可自定义，引擎将具有一个名为 &lt;code&gt;author_class&lt;/code&gt; 的配置设置，该设置将用于指定哪个类代表应用程序内的用户。</target>
        </trans-unit>
        <trans-unit id="79e3f57a1b3ee60f1474c6b0b6b6f30307fee9e6" translate="yes" xml:space="preserve">
          <source>The next step is to switch the &lt;code&gt;Blorgh::Article&lt;/code&gt; model over to this new setting. Change the &lt;code&gt;belongs_to&lt;/code&gt; association inside this model (&lt;code&gt;app/models/blorgh/article.rb&lt;/code&gt;) to this:</source>
          <target state="translated">下一步是将 &lt;code&gt;Blorgh::Article&lt;/code&gt; 模型切换到此新设置。将此模型（ &lt;code&gt;app/models/blorgh/article.rb&lt;/code&gt; ）内的 &lt;code&gt;belongs_to&lt;/code&gt; 关联更改为：</target>
        </trans-unit>
        <trans-unit id="665b7f33f63099c0b1cea4b1fb4ebac3b0e2d737" translate="yes" xml:space="preserve">
          <source>The next thing that changes in isolated engines is the behavior of routes. Normally, when you namespace your controllers, you also need to namespace the related routes. With an isolated engine, the engine's namespace is automatically applied, so you don't need to specify it explicitly in your routes:</source>
          <target state="translated">在隔离引擎中,接下来改变的是路由的行为。通常情况下,当你给控制器命名空间时,你也需要给相关的路由命名空间。在隔离引擎中,引擎的命名空间是自动应用的,所以你不需要在路由中明确指定它。</target>
        </trans-unit>
        <trans-unit id="93d819b142e381f44914883470304c3b40e5adf1" translate="yes" xml:space="preserve">
          <source>The nonce is opaque to the client. Composed of &lt;a href=&quot;../../time&quot;&gt;Time&lt;/a&gt;, and hash of &lt;a href=&quot;../../time&quot;&gt;Time&lt;/a&gt; with secret key from the Rails session secret generated upon creation of project. Ensures the time cannot be modified by client.</source>
          <target state="translated">随机数对客户端是不透明的。由&lt;a href=&quot;../../time&quot;&gt;时间&lt;/a&gt;和哈希&lt;a href=&quot;../../time&quot;&gt;时间&lt;/a&gt;与在创建项目所产生的Rails的会话密钥的密钥。确保时间不能被客户端修改。</target>
        </trans-unit>
        <trans-unit id="d6afe7561df1d98a902707f851ee94efab958e53" translate="yes" xml:space="preserve">
          <source>The number in the middle is the &lt;code&gt;product_id&lt;/code&gt; followed by the timestamp value in the &lt;code&gt;updated_at&lt;/code&gt; attribute of the product record. Rails uses the timestamp value to make sure it is not serving stale data. If the value of &lt;code&gt;updated_at&lt;/code&gt; has changed, a new key will be generated. Then Rails will write a new cache to that key, and the old cache written to the old key will never be used again. This is called key-based expiration.</source>
          <target state="translated">中间的数字是 &lt;code&gt;product_id&lt;/code&gt; ,后跟产品记录的 &lt;code&gt;updated_at&lt;/code&gt; 属性中的时间戳记值。Rails使用时间戳记值来确保它不提供过时的数据。如果 &lt;code&gt;updated_at&lt;/code&gt; 的值已更改，将生成一个新密钥。然后，Rails将向该键写入新的缓存，并且写入旧键的旧缓存将不再使用。这称为基于密钥的到期。</target>
        </trans-unit>
        <trans-unit id="8ee1df042709719100df6be6c3b0a3fd04dc19b3" translate="yes" xml:space="preserve">
          <source>The number of arguments in the signature must match. If the object responds to the method the call is attempted and &lt;code&gt;ArgumentError&lt;/code&gt; is still raised in case of argument mismatch.</source>
          <target state="translated">签名中的参数数量必须匹配。如果对象响应该方法，则会尝试调用，并且在参数不匹配的情况下仍会引发 &lt;code&gt;ArgumentError&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="505e9d95ab3606901bc6ffa80ead6b281f7cb035" translate="yes" xml:space="preserve">
          <source>The number of iterations that will be done by the partial.</source>
          <target state="translated">部分要做的迭代次数。</target>
        </trans-unit>
        <trans-unit id="038422c23b9cb97bfa4b6a6b66a4d0be0680f470" translate="yes" xml:space="preserve">
          <source>The number of workers passed is the number of times the process will be forked. You may want to parallelize your local test suite differently from your CI, so an environment variable is provided to be able to easily change the number of workers a test run should use:</source>
          <target state="translated">通过的工作者数量是指进程将被分叉的次数。您可能希望以不同于CI的方式并行化您的本地测试套件,因此提供了一个环境变量,以便能够轻松地改变测试运行应该使用的工人数量。</target>
        </trans-unit>
        <trans-unit id="33d090a4862daa4700aeb1957ac30a3aad04f48a" translate="yes" xml:space="preserve">
          <source>The number of workers passed to &lt;code&gt;parallelize&lt;/code&gt; determines the number of threads the tests will use. You may want to parallelize your local test suite differently from your CI, so an environment variable is provided to be able to easily change the number of workers a test run should use:</source>
          <target state="translated">传递给 &lt;code&gt;parallelize&lt;/code&gt; 的工作程序数量决定了测试将使用的线程数量。您可能希望以不同于CI的方式并行化本地测试套件，因此提供了一个环境变量，以便可以轻松更改测试运行应使用的工作程序数量：</target>
        </trans-unit>
        <trans-unit id="bec8710416db3a7f64fed68d9b0b0bf55970a04e" translate="yes" xml:space="preserve">
          <source>The object in the &lt;code&gt;params&lt;/code&gt; hash is an instance of &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionDispatch/Http/UploadedFile.html&quot;&gt;&lt;code&gt;ActionDispatch::Http::UploadedFile&lt;/code&gt;&lt;/a&gt;. The following snippet saves the uploaded file in &lt;code&gt;#{Rails.root}/public/uploads&lt;/code&gt; under the same name as the original file.</source>
          <target state="translated">&lt;code&gt;params&lt;/code&gt; 哈希中的对象是&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionDispatch/Http/UploadedFile.html&quot;&gt; &lt;code&gt;ActionDispatch::Http::UploadedFile&lt;/code&gt; &lt;/a&gt;的实例。以下代码段将上传的文件以与原始文件相同的名称保存在 &lt;code&gt;#{Rails.root}/public/uploads&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="638d1c2387bff55fda430b14e4440039041a5b60" translate="yes" xml:space="preserve">
          <source>The object passed as &lt;code&gt;:model&lt;/code&gt; in &lt;code&gt;form_with&lt;/code&gt; controls the key used in &lt;code&gt;params&lt;/code&gt; to access the form's values. Here the name is &lt;code&gt;article&lt;/code&gt; and so all the inputs have names of the form &lt;code&gt;article[attribute_name]&lt;/code&gt;. Accordingly, in the &lt;code&gt;create&lt;/code&gt; action &lt;code&gt;params[:article]&lt;/code&gt; will be a hash with keys &lt;code&gt;:title&lt;/code&gt; and &lt;code&gt;:body&lt;/code&gt;. You can read more about the significance of input names in chapter &lt;a href=&quot;#understanding-parameter-naming-conventions&quot;&gt;Understanding Parameter Naming Conventions&lt;/a&gt; of this guide.</source>
          <target state="translated">在 &lt;code&gt;form_with&lt;/code&gt; 中作为 &lt;code&gt;:model&lt;/code&gt; 传递的对象控制在 &lt;code&gt;params&lt;/code&gt; 中使用的键以访问表单的值。这里的名称是 &lt;code&gt;article&lt;/code&gt; ，因此所有输入都具有 &lt;code&gt;article[attribute_name]&lt;/code&gt; 形式的名称。因此，在 &lt;code&gt;create&lt;/code&gt; 动作中， &lt;code&gt;params[:article]&lt;/code&gt; 将是带有键 &lt;code&gt;:title&lt;/code&gt; 和 &lt;code&gt;:body&lt;/code&gt; 的哈希。您可以在本指南的&lt;a href=&quot;#understanding-parameter-naming-conventions&quot;&gt;了解参数命名约定&lt;/a&gt;一章中了解有关输入名称的含义的更多信息。</target>
        </trans-unit>
        <trans-unit id="3db7e74818e7069b61951f9db787751ef0935d02" translate="yes" xml:space="preserve">
          <source>The object returned is a relation, which can be further extended.</source>
          <target state="translated">返回的对象是一个关系,可以进一步扩展。</target>
        </trans-unit>
        <trans-unit id="7ebeb64ea392c06389da82d15b57e2dc0fb1998e" translate="yes" xml:space="preserve">
          <source>The object yielded by &lt;code&gt;fields_for&lt;/code&gt; is a form builder like the one yielded by &lt;code&gt;form_with&lt;/code&gt;.</source>
          <target state="translated">由 &lt;code&gt;fields_for&lt;/code&gt; 产生的对象是一个表单生成器，类似于由 &lt;code&gt;form_with&lt;/code&gt; 产生的对象。</target>
        </trans-unit>
        <trans-unit id="57072ad448de4139f9cc538a750565d5bae03dd9" translate="yes" xml:space="preserve">
          <source>The object yielded by &lt;code&gt;form_with&lt;/code&gt; and &lt;code&gt;fields_for&lt;/code&gt; is an instance of &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionView/Helpers/FormBuilder.html&quot;&gt;&lt;code&gt;ActionView::Helpers::FormBuilder&lt;/code&gt;&lt;/a&gt;. Form builders encapsulate the notion of displaying form elements for a single object. While you can write helpers for your forms in the usual way, you can also create subclass &lt;code&gt;ActionView::Helpers::FormBuilder&lt;/code&gt; and add the helpers there. For example:</source>
          <target state="translated">由 &lt;code&gt;form_with&lt;/code&gt; 和 &lt;code&gt;fields_for&lt;/code&gt; 产生的对象是&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionView/Helpers/FormBuilder.html&quot;&gt; &lt;code&gt;ActionView::Helpers::FormBuilder&lt;/code&gt; &lt;/a&gt;的实例。表单构建器封装了显示单个对象的表单元素的概念。虽然可以用通常的方式为表单编写帮助程序，但也可以创建子类 &lt;code&gt;ActionView::Helpers::FormBuilder&lt;/code&gt; 并在其中添加帮助程序。例如：</target>
        </trans-unit>
        <trans-unit id="3de27dfed2e4c78b35ecc58982517007c169ac2a" translate="yes" xml:space="preserve">
          <source>The only ActiveStorage service that provides this hook so far is GCS.</source>
          <target state="translated">到目前为止,唯一提供这个钩子的ActiveStorage服务是GCS。</target>
        </trans-unit>
        <trans-unit id="caaae6a0029374b4c88ed2f441090956efc2faaa" translate="yes" xml:space="preserve">
          <source>The only catch with using the SCM options is that you have to make your application's directory first, then initialize your SCM, then you can run the &lt;code&gt;rails new&lt;/code&gt; command to generate the basis of your app.</source>
          <target state="translated">使用SCM选项的唯一陷阱是，您必须首先创建应用程序的目录，然后初始化SCM，然后才能运行 &lt;code&gt;rails new&lt;/code&gt; 命令来生成应用程序的基础。</target>
        </trans-unit>
        <trans-unit id="7c023b3703738247136fd6b3e082be811c39b62e" translate="yes" xml:space="preserve">
          <source>The only downside to this code is that it requires a round trip to the browser: the browser requested the show action with &lt;code&gt;/books/1&lt;/code&gt; and the controller finds that there are no books, so the controller sends out a 302 redirect response to the browser telling it to go to &lt;code&gt;/books/&lt;/code&gt;, the browser complies and sends a new request back to the controller asking now for the &lt;code&gt;index&lt;/code&gt; action, the controller then gets all the books in the database and renders the index template, sending it back down to the browser which then shows it on your screen.</source>
          <target state="translated">该代码的唯一缺点是需要往返于浏览器：浏览器使用 &lt;code&gt;/books/1&lt;/code&gt; 请求show操作，并且控制器发现没有书籍，因此控制器向浏览器发送302重定向响应告诉它转到 &lt;code&gt;/books/&lt;/code&gt; ，浏览器进行编译，然后向控制器发送新请求，要求立即执行 &lt;code&gt;index&lt;/code&gt; 操作，然后控制器获取数据库中的所有书籍并呈现索引模板，然后将其发送回给浏览器，然后将其显示在屏幕上。</target>
        </trans-unit>
        <trans-unit id="e864bfdb02d383ce40daeb3ce7e75a9c7a05ef9f" translate="yes" xml:space="preserve">
          <source>The only exception in &lt;a href=&quot;activemodel&quot;&gt;ActiveModel&lt;/a&gt; for &lt;a href=&quot;../../activerecord&quot;&gt;ActiveRecord&lt;/a&gt; is the use of self.build instead of self.new.</source>
          <target state="translated">&lt;a href=&quot;activemodel&quot;&gt;ActiveModel&lt;/a&gt;中的&lt;a href=&quot;../../activerecord&quot;&gt;ActiveRecord&lt;/a&gt;唯一例外是使用self.build而不是self.new。</target>
        </trans-unit>
        <trans-unit id="34c0aabafc22ecd298ab851ec0d24c56c1e88a3c" translate="yes" xml:space="preserve">
          <source>The only folder seen by the world as-is. Contains static files and compiled assets.</source>
          <target state="translated">世界唯一能看到的文件夹,保持原样。包含静态文件和编译后的资产。</target>
        </trans-unit>
        <trans-unit id="663af767fd7a7f252ce4ee85857ca02667951d37" translate="yes" xml:space="preserve">
          <source>The only option specific to &lt;code&gt;link_to&lt;/code&gt; (&lt;code&gt;:method&lt;/code&gt;) is used as follows:</source>
          <target state="translated">特定于 &lt;code&gt;link_to&lt;/code&gt; （ &lt;code&gt;:method&lt;/code&gt; ）的唯一选项如下：</target>
        </trans-unit>
        <trans-unit id="7c0ff2b98d6f31ee4756bfd1d58b0f4832f27608" translate="yes" xml:space="preserve">
          <source>The only way to explicitly not use the connection information in &lt;code&gt;ENV['DATABASE_URL']&lt;/code&gt; is to specify an explicit URL connection using the &lt;code&gt;&quot;url&quot;&lt;/code&gt; sub key:</source>
          <target state="translated">显式不使用 &lt;code&gt;ENV['DATABASE_URL']&lt;/code&gt; 的连接信息的唯一方法是使用 &lt;code&gt;&quot;url&quot;&lt;/code&gt; 子键指定显式URL连接：</target>
        </trans-unit>
        <trans-unit id="485f1b08d0393f65ac194833dc19f2f4b02d18c0" translate="yes" xml:space="preserve">
          <source>The option &lt;code&gt;:prefix&lt;/code&gt; adds a prefix to the name of the generated method. This may be handy for example to get a better name:</source>
          <target state="translated">&lt;code&gt;:prefix&lt;/code&gt; 选项为生成的方法的名称添加前缀。例如，使用一个更好的名字可能会很方便：</target>
        </trans-unit>
        <trans-unit id="d676be4f5f3aec25fb5d02ebd5821b65122eba01" translate="yes" xml:space="preserve">
          <source>The option &lt;code&gt;:private&lt;/code&gt; changes methods scope:</source>
          <target state="translated">&lt;code&gt;:private&lt;/code&gt; 选项可更改方法范围：</target>
        </trans-unit>
        <trans-unit id="ebf24d67cdabeb37ae32a041724d968a479a51ca" translate="yes" xml:space="preserve">
          <source>The option &lt;code&gt;:separator&lt;/code&gt; can be a regexp:</source>
          <target state="translated">&lt;code&gt;:separator&lt;/code&gt; 选项可以是一个正则表达式：</target>
        </trans-unit>
        <trans-unit id="0490cc17857480b9ef81752f108a7a4d9fbadfb9" translate="yes" xml:space="preserve">
          <source>The option &lt;code&gt;include_root_in_json&lt;/code&gt; controls the top-level behavior of &lt;code&gt;as_json&lt;/code&gt;. If &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;as_json&lt;/code&gt; will emit a single root node named after the object's type. The default value for &lt;code&gt;include_root_in_json&lt;/code&gt; option is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">选项 &lt;code&gt;include_root_in_json&lt;/code&gt; 控制 &lt;code&gt;as_json&lt;/code&gt; 的顶级行为。如果为 &lt;code&gt;true&lt;/code&gt; ，则 &lt;code&gt;as_json&lt;/code&gt; 将发出一个以对象类型命名的根节点。 &lt;code&gt;include_root_in_json&lt;/code&gt; 选项的默认值为 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0ce777a5e57cdf17270d4c689d41bf2c6a2b14b4" translate="yes" xml:space="preserve">
          <source>The option symbols for setting cookies are:</source>
          <target state="translated">设置Cookie的选项符号是:</target>
        </trans-unit>
        <trans-unit id="bc84187c74ec254bde3266c466aa3c582e0b4eff" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;:lock&lt;/code&gt; flag option allows you to lock the reloaded record:</source>
          <target state="translated">可选的 &lt;code&gt;:lock&lt;/code&gt; 标志选项使您可以锁定重新加载的记录：</target>
        </trans-unit>
        <trans-unit id="ecb1b69daa018b38b7e714147d617a0beace3731" translate="yes" xml:space="preserve">
          <source>The optional envs given as argument and the hash with group dependencies;</source>
          <target state="translated">作为参数给定的可选envs和带有组依赖关系的哈希。</target>
        </trans-unit>
        <trans-unit id="8bad16bbf06e5c49b47b6289efd545cfe8573f00" translate="yes" xml:space="preserve">
          <source>The options &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;finish&lt;/code&gt; are especially useful if you want multiple workers dealing with the same processing queue. You can make worker 1 handle all the records between id 1 and 9999 and worker 2 handle from 10000 and beyond by setting the &lt;code&gt;:start&lt;/code&gt; and &lt;code&gt;:finish&lt;/code&gt; option on each worker.</source>
          <target state="translated">如果您希望多个工作人员处理同一处理队列，则选项 &lt;code&gt;start&lt;/code&gt; 和 &lt;code&gt;finish&lt;/code&gt; 特别有用。通过在每个工作程序上设置 &lt;code&gt;:start&lt;/code&gt; 和 &lt;code&gt;:finish&lt;/code&gt; 选项，可以使工作程序1处理id 1和9999之间的所有记录，使工作程序2处理10000及以后的记录。</target>
        </trans-unit>
        <trans-unit id="fedec4d892fc12eab521b8368ec8823d40ac4794" translate="yes" xml:space="preserve">
          <source>The options for &lt;a href=&quot;atomfeedhelper#method-i-atom_feed&quot;&gt;#atom_feed&lt;/a&gt; are:</source>
          <target state="translated">&lt;a href=&quot;atomfeedhelper#method-i-atom_feed&quot;&gt;#atom_feed&lt;/a&gt;的选项为：</target>
        </trans-unit>
        <trans-unit id="41953f0040392b7d0f4ad2663cc42a50b8be8ed0" translate="yes" xml:space="preserve">
          <source>The options hash is passed to the underlying cache implementation.</source>
          <target state="translated">选项哈希被传递给底层缓存实现。</target>
        </trans-unit>
        <trans-unit id="92b1bd4dfe279a0b6d6f24784cc22f88f3542d92" translate="yes" xml:space="preserve">
          <source>The options map directly to &lt;a href=&quot;https://github.com/janko-m/image_processing&quot;&gt;ImageProcessing&lt;/a&gt; commands.</source>
          <target state="translated">这些选项直接映射到&lt;a href=&quot;https://github.com/janko-m/image_processing&quot;&gt;ImageProcessing&lt;/a&gt;命令。</target>
        </trans-unit>
        <trans-unit id="7eeb5a5bc634b08fc4f1b6083706e1781ce77e46" translate="yes" xml:space="preserve">
          <source>The options version of redirect allows you to supply only the parts of the URL which need to change, it also supports interpolation of the path similar to the first example.</source>
          <target state="translated">重定向的选项版本允许你只提供URL中需要更改的部分,它也支持类似第一个例子的路径插值。</target>
        </trans-unit>
        <trans-unit id="45cc4dd11762c701415947a3cd200605db900701" translate="yes" xml:space="preserve">
          <source>The order in which files are eager loaded is undefined.</source>
          <target state="translated">文件急于加载的顺序是未定义的。</target>
        </trans-unit>
        <trans-unit id="338f8ced7409f9b6ec13ebf9eab9b58b6549e163" translate="yes" xml:space="preserve">
          <source>The order in which helpers from more than one directory are loaded has changed in Rails 4.0. Previously, they were gathered and then sorted alphabetically. After upgrading to Rails 4.0, helpers will preserve the order of loaded directories and will be sorted alphabetically only within each directory. Unless you explicitly use the &lt;code&gt;helpers_path&lt;/code&gt; parameter, this change will only impact the way of loading helpers from engines. If you rely on the ordering, you should check if correct methods are available after upgrade. If you would like to change the order in which engines are loaded, you can use &lt;code&gt;config.railties_order=&lt;/code&gt; method.</source>
          <target state="translated">在Rails 4.0中，从多个目录中加载帮助程序的顺序已更改。以前，它们是收集在一起的，然后按字母顺序排序。升级到Rails 4.0后，助手将保留加载目录的顺序，并且仅在每个目录中按字母顺序排序。除非您明确使用 &lt;code&gt;helpers_path&lt;/code&gt; 参数，否则此更改将仅影响从引擎加载助手的方式。如果您依赖订购，则应检查升级后是否可以使用正确的方法。如果要更改引擎的加载顺序，可以使用 &lt;code&gt;config.railties_order=&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="7f79a6fadd87c66fa259266c738bf34142097f62" translate="yes" xml:space="preserve">
          <source>The order in which jobs are processed can be configured differently depending on the adapter.</source>
          <target state="translated">根据适配器的不同,可以配置不同的作业处理顺序。</target>
        </trans-unit>
        <trans-unit id="4660c5ab3c3d9ae3dd6bf0c0e1eaefdf8ef89ec0" translate="yes" xml:space="preserve">
          <source>The order in which these classes are returned is unspecified.</source>
          <target state="translated">这些类的返回顺序是没有规定的。</target>
        </trans-unit>
        <trans-unit id="80069d6fee26801de2e5e79b49b962b023fa71f9" translate="yes" xml:space="preserve">
          <source>The order of the parts getting inserted is determined by the &lt;code&gt;:parts_order&lt;/code&gt; inside of the &lt;code&gt;ActionMailer::Base.default&lt;/code&gt; method.</source>
          <target state="translated">插入零件的顺序由 &lt;code&gt;ActionMailer::Base.default&lt;/code&gt; 方法内的 &lt;code&gt;:parts_order&lt;/code&gt; 确定。</target>
        </trans-unit>
        <trans-unit id="e2922c4f0610a60fd83d95bc4625e590fe1de4c8" translate="yes" xml:space="preserve">
          <source>The other common option to configure is the log tags applied to the per-connection logger. Here's an example that uses the user account id if available, else &quot;no-account&quot; while tagging:</source>
          <target state="translated">另一个常见的配置选项是应用于每个连接记录器的日志标签。这里有一个例子,如果有用户账户id,则使用用户账户id,否则在标记时使用 &quot;no-account&quot;。</target>
        </trans-unit>
        <trans-unit id="b590272dbc4291a5ec0f0a787d5da3c74a48aa22" translate="yes" xml:space="preserve">
          <source>The other option for compressing CSS if you have the sass-rails gem installed is</source>
          <target state="translated">如果你安装了sass-rails gem,压缩CSS的另一个选项是</target>
        </trans-unit>
        <trans-unit id="196e3e845bbd8998ec86973e62e45a7a873a74bc" translate="yes" xml:space="preserve">
          <source>The output tempfile is opened in the directory returned by &lt;a href=&quot;previewer#method-i-tmpdir&quot;&gt;tmpdir&lt;/a&gt;.</source>
          <target state="translated">输出临时文件在&lt;a href=&quot;previewer#method-i-tmpdir&quot;&gt;tmpdir&lt;/a&gt;返回的目录中打开。</target>
        </trans-unit>
        <trans-unit id="781ad50fc530a421e9d27dbfa906b4aebe4123b2" translate="yes" xml:space="preserve">
          <source>The parameters in the forms are accessible in controllers according to their name nesting. So inputs named &lt;code&gt;title&lt;/code&gt; and &lt;code&gt;post[title]&lt;/code&gt; are accessible as &lt;code&gt;params[:title]&lt;/code&gt; and &lt;code&gt;params[:post][:title]&lt;/code&gt; respectively.</source>
          <target state="translated">表单中的参数可根据其名称嵌套在控制器中访问。因此，分别以 &lt;code&gt;params[:title]&lt;/code&gt; 和 &lt;code&gt;params[:post][:title]&lt;/code&gt; 形式访问名为 &lt;code&gt;title&lt;/code&gt; 和 &lt;code&gt;post[title]&lt;/code&gt; 输入。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
