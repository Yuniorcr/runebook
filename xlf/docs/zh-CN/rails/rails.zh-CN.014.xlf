<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="rails">
    <body>
      <group id="rails">
        <trans-unit id="b37b81146f80a1a4919ec9c9b0e5d0cd85718f8c" translate="yes" xml:space="preserve">
          <source>Keep in mind that removing these middlewares will remove support for certain features in Action Controller.</source>
          <target state="translated">请记住,移除这些中间件将移除对Action Controller中某些功能的支持。</target>
        </trans-unit>
        <trans-unit id="f3cd42ebc58551029cf6d64890f34636b5f605b0" translate="yes" xml:space="preserve">
          <source>Keep in mind the order of these preprocessors is important. For example, if you called your JavaScript file &lt;code&gt;app/assets/javascripts/projects.erb.coffee&lt;/code&gt; then it would be processed with the CoffeeScript interpreter first, which wouldn't understand ERB and therefore you would run into problems.</source>
          <target state="translated">请记住，这些预处理器的顺序很重要。例如，如果您调用JavaScript文件 &lt;code&gt;app/assets/javascripts/projects.erb.coffee&lt;/code&gt; ，则将首先使用CoffeeScript解释器对其进行处理，因为它不了解ERB，因此会遇到问题。</target>
        </trans-unit>
        <trans-unit id="38b50dd97691ece4d75030debc9d7c69689f4370" translate="yes" xml:space="preserve">
          <source>Keep in mind, of course, that anything generated with these commands inside of an engine that has &lt;code&gt;isolate_namespace&lt;/code&gt; in the &lt;code&gt;Engine&lt;/code&gt; class will be namespaced.</source>
          <target state="translated">当然，请记住，在 &lt;code&gt;Engine&lt;/code&gt; 类中具有 &lt;code&gt;isolate_namespace&lt;/code&gt; 的引擎内部使用这些命令生成的任何内容都将被命名空间。</target>
        </trans-unit>
        <trans-unit id="811c5671e6f72a16320e58794cbdd505a4a8bfdd" translate="yes" xml:space="preserve">
          <source>Keep your master key safe. Do not commit your master key.</source>
          <target state="translated">妥善保管您的主钥匙。不要将你的主钥匙投入。</target>
        </trans-unit>
        <trans-unit id="5c3ffafd6d0bd987a08e86445a216acb025e6c9e" translate="yes" xml:space="preserve">
          <source>Keeping the Postman in Check</source>
          <target state="translated">管好邮差</target>
        </trans-unit>
        <trans-unit id="56d925c36d2e941d2af29d231d5dbe9ae819ce7d" translate="yes" xml:space="preserve">
          <source>Keeps an array of all the emails sent out through the Action Mailer with delivery_method :test. Most useful for unit and functional testing.</source>
          <target state="translated">保存通过Action Mailer发送的所有邮件的数组,其中delivery_method :test。对单元测试和功能测试最有用。</target>
        </trans-unit>
        <trans-unit id="37bcbef0779247a6b500aae75580d306dd7aad75" translate="yes" xml:space="preserve">
          <source>Keeps either the entire current flash or a specific flash entry available for the next action:</source>
          <target state="translated">保持整个当前闪光灯或特定的闪光灯条目供下一个操作使用。</target>
        </trans-unit>
        <trans-unit id="74808d3df030e992e7b9444241625147986487c1" translate="yes" xml:space="preserve">
          <source>Kernel</source>
          <target state="translated">Kernel</target>
        </trans-unit>
        <trans-unit id="c67dd20ee842986086a0a915ddc2a279490130ed" translate="yes" xml:space="preserve">
          <source>Key</source>
          <target state="translated">Key</target>
        </trans-unit>
        <trans-unit id="dccff3da927cfa30d8263467f25f4099d890d528" translate="yes" xml:space="preserve">
          <source>Key aspects of Ruby constants</source>
          <target state="translated">Ruby常量的主要方面</target>
        </trans-unit>
        <trans-unit id="bd612611d70de311a74efc2fb60fd72bd02e7463" translate="yes" xml:space="preserve">
          <source>Key prefix</source>
          <target state="translated">钥匙前缀</target>
        </trans-unit>
        <trans-unit id="1fd3bb93252c4e7c505b9a33e3f33adbbb95274d" translate="yes" xml:space="preserve">
          <source>Key used in the store</source>
          <target state="translated">店内使用的钥匙</target>
        </trans-unit>
        <trans-unit id="74018238351de8a4b5f41ef51f98e3f2c94d5837" translate="yes" xml:space="preserve">
          <source>KeyError</source>
          <target state="translated">KeyError</target>
        </trans-unit>
        <trans-unit id="74b7794756029ab4d216c6b5291e0a3c6b00afdc" translate="yes" xml:space="preserve">
          <source>KeyGenerator</source>
          <target state="translated">KeyGenerator</target>
        </trans-unit>
        <trans-unit id="38565bb17684d112a156b97c9fd4c097d914dfef" translate="yes" xml:space="preserve">
          <source>KeyGenerator#generate_key</source>
          <target state="translated">KeyGenerator#generate_key</target>
        </trans-unit>
        <trans-unit id="5e8529f8277cb52ad5e090f3e1129a3e4596b4ad" translate="yes" xml:space="preserve">
          <source>KeyGenerator::new</source>
          <target state="translated">KeyGenerator::new</target>
        </trans-unit>
        <trans-unit id="759dc506a4c9361dcdcf96ba09aab32ce67fc6aa" translate="yes" xml:space="preserve">
          <source>Keys are Rails &lt;a href=&quot;timezone&quot;&gt;TimeZone&lt;/a&gt; names, values are TZInfo identifiers.</source>
          <target state="translated">键是Rails &lt;a href=&quot;timezone&quot;&gt;TimeZone&lt;/a&gt;名称，值是TZInfo标识符。</target>
        </trans-unit>
        <trans-unit id="7c91d792d7d8ea478b77ee4fc93f40db3edb4c80" translate="yes" xml:space="preserve">
          <source>Keys are always translated into Strings and are case sensitive. When an object is specified as a key and has a &lt;code&gt;cache_key&lt;/code&gt; method defined, this method will be called to define the key. Otherwise, the &lt;code&gt;to_param&lt;/code&gt; method will be called. Hashes and Arrays can also be used as keys. The elements will be delimited by slashes, and the elements within a &lt;a href=&quot;../../hash&quot;&gt;Hash&lt;/a&gt; will be sorted by key so they are consistent.</source>
          <target state="translated">键始终转换为字符串，并且区分大小写。当将对象指定为键并定义了 &lt;code&gt;cache_key&lt;/code&gt; 方法时，将调用此方法来定义键。否则，将调用 &lt;code&gt;to_param&lt;/code&gt; 方法。哈希和数组也可以用作键。元素将由斜杠定界，并且&lt;a href=&quot;../../hash&quot;&gt;哈希中&lt;/a&gt;的元素将按键排序，以便它们保持一致。</target>
        </trans-unit>
        <trans-unit id="ed45856e9e6ecb02a978d31d54e643eb027da025" translate="yes" xml:space="preserve">
          <source>Keys are truncated with their own SHA2 digest if they exceed 1kB</source>
          <target state="translated">如果密钥超过1kB,则用自己的SHA2摘要截断。</target>
        </trans-unit>
        <trans-unit id="6dade8eae87c393093fe35456b0c0546385b2018" translate="yes" xml:space="preserve">
          <source>Keys should normally be unique. If the block returns the same value for different elements no collection is built for that key. The last item will win.</source>
          <target state="translated">键通常应该是唯一的。如果块对不同元素返回相同的值,则不会为该键建立集合。最后一项将获胜。</target>
        </trans-unit>
        <trans-unit id="3c4171878f85224ae8e8085027502b35e802765f" translate="yes" xml:space="preserve">
          <source>Keys with a '_html' suffix and keys named 'html' are marked as HTML safe. When you use them in views the HTML will not be escaped.</source>
          <target state="translated">后缀为'_html'的键和名为'html'的键被标记为HTML安全键。当你在视图中使用它们时,HTML将不会被转义。</target>
        </trans-unit>
        <trans-unit id="603962661dd677bfb30ebbf245488be607df467b" translate="yes" xml:space="preserve">
          <source>Knowing this, you can combine &lt;code&gt;select_tag&lt;/code&gt; and &lt;code&gt;options_for_select&lt;/code&gt; to achieve the desired, complete markup:</source>
          <target state="translated">知道了这一点，您可以结合使用 &lt;code&gt;select_tag&lt;/code&gt; 和 &lt;code&gt;options_for_select&lt;/code&gt; 以获得所需的完整标记：</target>
        </trans-unit>
        <trans-unit id="b9c048acd3b4935270bc39bf7303395a77e3c631" translate="yes" xml:space="preserve">
          <source>LAST_MODIFIED</source>
          <target state="translated">LAST_MODIFIED</target>
        </trans-unit>
        <trans-unit id="096c41c788487a970ec074e54230e758c0f4c4b5" translate="yes" xml:space="preserve">
          <source>LOCALHOST</source>
          <target state="translated">LOCALHOST</target>
        </trans-unit>
        <trans-unit id="40c3322b3b3d0d946724fe784d34663629e1932a" translate="yes" xml:space="preserve">
          <source>LOCATION</source>
          <target state="translated">LOCATION</target>
        </trans-unit>
        <trans-unit id="f7b234a238285a1f43faf56fe04f8eca0e8187cd" translate="yes" xml:space="preserve">
          <source>LOCK_NOT_AVAILABLE</source>
          <target state="translated">LOCK_NOT_AVAILABLE</target>
        </trans-unit>
        <trans-unit id="098eeaebc4158474bc2be818c08af354bd7af4d9" translate="yes" xml:space="preserve">
          <source>LOOKUP</source>
          <target state="translated">LOOKUP</target>
        </trans-unit>
        <trans-unit id="eea76aa993177151ffe54751f3710090c41018a2" translate="yes" xml:space="preserve">
          <source>Label references for associations (belongs_to, has_one, has_many)</source>
          <target state="translated">关联的标签引用(belongs_to,has_one,has_many)</target>
        </trans-unit>
        <trans-unit id="ef1b43b180145d1655abe2acaac47486dfdc28a0" translate="yes" xml:space="preserve">
          <source>Last configurable block to run. Called after frameworks initialize.</source>
          <target state="translated">最后运行的可配置块。在框架初始化后调用。</target>
        </trans-unit>
        <trans-unit id="091fde44725196b0d7b6b7ede88ee30e526d8fe4" translate="yes" xml:space="preserve">
          <source>Last time we left when the &lt;code&gt;app&lt;/code&gt; method was being defined:</source>
          <target state="translated">上次我们在定义 &lt;code&gt;app&lt;/code&gt; 方法时离开：</target>
        </trans-unit>
        <trans-unit id="510f1240320c0b4245e6973ae63e21990f3c7f94" translate="yes" xml:space="preserve">
          <source>Lastly an &lt;code&gt;after_find&lt;/code&gt; and &lt;code&gt;after_initialize&lt;/code&gt; callback is triggered for each object that is found and instantiated by a finder, with &lt;code&gt;after_initialize&lt;/code&gt; being triggered after new objects are instantiated as well.</source>
          <target state="translated">最后，为查找器发现并实例化的每个对象触发一次 &lt;code&gt;after_find&lt;/code&gt; 和 &lt;code&gt;after_initialize&lt;/code&gt; 回调，在实例化新对象之后也触发 &lt;code&gt;after_initialize&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a8edffefe23a3b0069154ba211dceaa5589a707c" translate="yes" xml:space="preserve">
          <source>Lastly, for new primary databases you need to set the &lt;code&gt;migrations_paths&lt;/code&gt; to the directory where you will store migrations for that database. We'll look more at &lt;code&gt;migrations_paths&lt;/code&gt; later on in this guide.</source>
          <target state="translated">最后，对于新的主数据库，您需要将 &lt;code&gt;migrations_paths&lt;/code&gt; 设置为将存储该数据库迁移的目录。我们将看到更多的 &lt;code&gt;migrations_paths&lt;/code&gt; 后来此指南中。</target>
        </trans-unit>
        <trans-unit id="e11ef8043bdfd5d2effaa0c4ccffaea4aff10bd1" translate="yes" xml:space="preserve">
          <source>Lastly, simple content can be passed as a parameter:</source>
          <target state="translated">最后,简单的内容可以作为参数传递。</target>
        </trans-unit>
        <trans-unit id="b1a487af9f0197f34ab23417574667b914a550ec" translate="yes" xml:space="preserve">
          <source>Lastly, the &lt;code&gt;app/views&lt;/code&gt; directory contains a &lt;code&gt;layouts&lt;/code&gt; folder, which contains a file at &lt;code&gt;blorgh/application.html.erb&lt;/code&gt;. This file allows you to specify a layout for the engine. If this engine is to be used as a stand-alone engine, then you would add any customization to its layout in this file, rather than the application's &lt;code&gt;app/views/layouts/application.html.erb&lt;/code&gt; file.</source>
          <target state="translated">最后， &lt;code&gt;app/views&lt;/code&gt; 目录包含一个 &lt;code&gt;layouts&lt;/code&gt; 文件夹，该文件夹包含一个位于 &lt;code&gt;blorgh/application.html.erb&lt;/code&gt; 的文件。该文件允许您指定引擎的布局。如果要将此引擎用作独立引擎，则可以在此文件（而不是应用程序的 &lt;code&gt;app/views/layouts/application.html.erb&lt;/code&gt; 文件）中为其布局添加任何自定义项。</target>
        </trans-unit>
        <trans-unit id="cf0e45525464dbd04e79c657faf5c6b2fb11c005" translate="yes" xml:space="preserve">
          <source>Lastly, you can use sprintf-style % escapes in the template. This works slightly differently than the previous methods; you are responsible for ensuring that the values in the template are properly quoted. The values are passed to the connector for quoting, but the caller is responsible for ensuring they are enclosed in quotes in the resulting SQL. After quoting, the values are inserted using the same escapes as the Ruby core method &lt;code&gt;Kernel::sprintf&lt;/code&gt;.</source>
          <target state="translated">最后，您可以在模板中使用sprintf样式的％转义符。这与以前的方法略有不同。您有责任确保正确引用模板中的值。这些值将传递到连接器以进行引用，但是调用者负责确保将它们包含在结果SQL中的引号中。引用后，使用与Ruby核心方法 &lt;code&gt;Kernel::sprintf&lt;/code&gt; 相同的转义符插入值。</target>
        </trans-unit>
        <trans-unit id="392c8854d0981f89d43dab619acc0d260db6fa94" translate="yes" xml:space="preserve">
          <source>Later, when the body of the module definition is interpreted, a new entry is created in the constant table of the module object stored in the &lt;code&gt;Colors&lt;/code&gt; constant. That entry maps the name &quot;RED&quot; to the string &quot;0xff0000&quot;.</source>
          <target state="translated">稍后，当解释模块定义的主体时，将在 &lt;code&gt;Colors&lt;/code&gt; 常量中存储的模块对象的常量表中创建一个新条目。该条目将名称&amp;ldquo; RED&amp;rdquo;映射到字符串&amp;ldquo; 0xff0000&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="bec266232611c1ccc105a2b7fb87e8c1a59a2eca" translate="yes" xml:space="preserve">
          <source>Launch the web server again if you stopped it to generate the controller (&lt;code&gt;rails
server&lt;/code&gt;) and navigate to http://localhost:3000 in your browser. You'll see the &quot;Hello, Rails!&quot; message you put into &lt;code&gt;app/views/welcome/index.html.erb&lt;/code&gt;, indicating that this new route is indeed going to &lt;code&gt;WelcomeController&lt;/code&gt;'s &lt;code&gt;index&lt;/code&gt; action and is rendering the view correctly.</source>
          <target state="translated">如果您停止了Web服务器以生成控制器（ &lt;code&gt;rails server&lt;/code&gt; ），然后再次启动它，并在浏览器中导航到http：// localhost：3000。您会看到&amp;ldquo;你好，Rails！&amp;rdquo; 您输入到 &lt;code&gt;app/views/welcome/index.html.erb&lt;/code&gt; 中的消息，表明此新路线确实将进入 &lt;code&gt;WelcomeController&lt;/code&gt; 的 &lt;code&gt;index&lt;/code&gt; 操作并正确呈现了视图。</target>
        </trans-unit>
        <trans-unit id="af9e4ca75455ed36ae5cba0ec03de1506f297609" translate="yes" xml:space="preserve">
          <source>Launch!</source>
          <target state="translated">Launch!</target>
        </trans-unit>
        <trans-unit id="3b232ddd1deabfdc739b7f19ed66f965ea3e4797" translate="yes" xml:space="preserve">
          <source>Layers additional behavior on &lt;a href=&quot;time#method-c-at&quot;&gt;::at&lt;/a&gt; so that &lt;a href=&quot;activesupport/timewithzone&quot;&gt;ActiveSupport::TimeWithZone&lt;/a&gt; and &lt;a href=&quot;datetime&quot;&gt;DateTime&lt;/a&gt; instances can be used when called with a single argument</source>
          <target state="translated">在&lt;a href=&quot;time#method-c-at&quot;&gt;:: at&lt;/a&gt;上分层附加行为，以便在通过单个参数调用时可以使用&lt;a href=&quot;activesupport/timewithzone&quot;&gt;ActiveSupport :: TimeWithZone&lt;/a&gt;和&lt;a href=&quot;datetime&quot;&gt;DateTime&lt;/a&gt;实例</target>
        </trans-unit>
        <trans-unit id="450c7c23c31cb0b2f54d83184ce79687a2b74fa0" translate="yes" xml:space="preserve">
          <source>Layers additional behavior on &lt;a href=&quot;time#method-i-eql-3F&quot;&gt;#eql?&lt;/a&gt; so that &lt;a href=&quot;activesupport/timewithzone&quot;&gt;ActiveSupport::TimeWithZone&lt;/a&gt; instances can be eql? to an equivalent &lt;a href=&quot;time&quot;&gt;Time&lt;/a&gt;</source>
          <target state="translated">在&lt;a href=&quot;time#method-i-eql-3F&quot;&gt;#eql&lt;/a&gt;上叠加其他行为？这样&lt;a href=&quot;activesupport/timewithzone&quot;&gt;ActiveSupport :: TimeWithZone&lt;/a&gt;实例可以是eql？到等效&lt;a href=&quot;time&quot;&gt;时间&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7d321d86ff6cc58af6defb3f60342a2302fa2218" translate="yes" xml:space="preserve">
          <source>Layers additional behavior on DateTime#&amp;lt;=&amp;gt; so that &lt;a href=&quot;time&quot;&gt;Time&lt;/a&gt; and &lt;a href=&quot;activesupport/timewithzone&quot;&gt;ActiveSupport::TimeWithZone&lt;/a&gt; instances can be compared with a &lt;a href=&quot;datetime&quot;&gt;DateTime&lt;/a&gt;.</source>
          <target state="translated">在DateTime＃&amp;lt;=&amp;gt;上分层其他行为，以便可以将&lt;a href=&quot;time&quot;&gt;Time&lt;/a&gt;和&lt;a href=&quot;activesupport/timewithzone&quot;&gt;ActiveSupport :: TimeWithZone&lt;/a&gt;实例与&lt;a href=&quot;datetime&quot;&gt;DateTime&lt;/a&gt;进行比较。</target>
        </trans-unit>
        <trans-unit id="29c255a938da046a574f295ca103dddf42d32232" translate="yes" xml:space="preserve">
          <source>Layers additional behavior on Time#&amp;lt;=&amp;gt; so that &lt;a href=&quot;datetime&quot;&gt;DateTime&lt;/a&gt; and &lt;a href=&quot;activesupport/timewithzone&quot;&gt;ActiveSupport::TimeWithZone&lt;/a&gt; instances can be chronologically compared with a &lt;a href=&quot;time&quot;&gt;Time&lt;/a&gt;</source>
          <target state="translated">在Time＃&amp;lt;=&amp;gt;上分层其他行为，以便可以按时间顺序将&lt;a href=&quot;datetime&quot;&gt;DateTime&lt;/a&gt;和&lt;a href=&quot;activesupport/timewithzone&quot;&gt;ActiveSupport :: TimeWithZone&lt;/a&gt;实例与&lt;a href=&quot;time&quot;&gt;时间&lt;/a&gt;进行比较</target>
        </trans-unit>
        <trans-unit id="8daa234f4e9273cda7590ab2e63f033cc2e446cd" translate="yes" xml:space="preserve">
          <source>Laying down the groundwork</source>
          <target state="translated">奠定基础</target>
        </trans-unit>
        <trans-unit id="ddc2e0175464c8ae5a4d0b334ec3310ddf23aae7" translate="yes" xml:space="preserve">
          <source>Layout assignment</source>
          <target state="translated">布局分配</target>
        </trans-unit>
        <trans-unit id="01655ad5977ee9d7376ffb682322087942af96db" translate="yes" xml:space="preserve">
          <source>Layout declarations cascade downward in the hierarchy, and more specific layout declarations always override more general ones. For example:</source>
          <target state="translated">布局声明在层次结构中逐级向下,更具体的布局声明总是覆盖更一般的声明。例如:</target>
        </trans-unit>
        <trans-unit id="28e6f54e33a1151bfd4c7cc4affd14df3525f2db" translate="yes" xml:space="preserve">
          <source>Layouts</source>
          <target state="translated">Layouts</target>
        </trans-unit>
        <trans-unit id="9c2227b01890429dea82f0435c986a7de2991348" translate="yes" xml:space="preserve">
          <source>Layouts and Rendering in Rails</source>
          <target state="translated">Rails中的布局和渲染</target>
        </trans-unit>
        <trans-unit id="5e792861fadd8548975876f8194dfffbf0cb481c" translate="yes" xml:space="preserve">
          <source>Layouts can be used to render a common view template around the results of Rails controller actions. Typically, a Rails application will have a couple of layouts that pages will be rendered within. For example, a site might have one layout for a logged in user and another for the marketing or sales side of the site. The logged in user layout might include top-level navigation that should be present across many controller actions. The sales layout for a SaaS app might include top-level navigation for things like &quot;Pricing&quot; and &quot;Contact Us&quot; pages. You would expect each layout to have a different look and feel. You can read about layouts in more detail in the &lt;a href=&quot;layouts_and_rendering&quot;&gt;Layouts and Rendering in Rails&lt;/a&gt; guide.</source>
          <target state="translated">布局可用于围绕Rails控制器操作的结果呈现公共视图模板。通常，Rails应用程序将具有几个页面将在其中呈现的布局。例如，一个网站可能具有一个布局用于登录用户，而另一布局用于该站点的市场营销或销售。登录的用户布局可能包含应该在许多控制器操作中出现的顶级导航。 SaaS应用程序的销售布局可能包括顶级导航，例如&amp;ldquo;定价&amp;rdquo;和&amp;ldquo;联系我们&amp;rdquo;页面。您可能希望每种布局都有不同的外观。您可以&lt;a href=&quot;layouts_and_rendering&quot;&gt;在《 Rails&lt;/a&gt;中的布局和渲染》指南中详细了解布局。</target>
        </trans-unit>
        <trans-unit id="48470ed7993d797dbe5e8d27e23dd9a217c53643" translate="yes" xml:space="preserve">
          <source>Layouts specified at the controller level support the &lt;code&gt;:only&lt;/code&gt; and &lt;code&gt;:except&lt;/code&gt; options. These options take either a method name, or an array of method names, corresponding to method names within the controller:</source>
          <target state="translated">在控制器级别指定的布局支持 &lt;code&gt;:only&lt;/code&gt; 和 &lt;code&gt;:except&lt;/code&gt; 选项。这些选项采用与控制器内的方法名称相对应的方法名称或方法名称数组：</target>
        </trans-unit>
        <trans-unit id="e27583837c86c78aaebaf82c394f36c53e1ccbcf" translate="yes" xml:space="preserve">
          <source>Layouts#action_has_layout?</source>
          <target state="translated">Layouts#action_has_layout?</target>
        </trans-unit>
        <trans-unit id="f7cade8c906e9d8975259c8d26198e469b8c71e4" translate="yes" xml:space="preserve">
          <source>Layouts::ClassMethods</source>
          <target state="translated">Layouts::ClassMethods</target>
        </trans-unit>
        <trans-unit id="5617eb863672173bd45cabc2c17a35b9e442eed4" translate="yes" xml:space="preserve">
          <source>Layouts::ClassMethods#layout</source>
          <target state="translated">Layouts::ClassMethods#layout</target>
        </trans-unit>
        <trans-unit id="dab591e309e317fa64fcc8cc09c071b74932d444" translate="yes" xml:space="preserve">
          <source>Lazily load TZInfo::Timezone instances only when they're needed.</source>
          <target state="translated">只有在需要的时候才懒得加载TZInfo::Timezone实例。</target>
        </trans-unit>
        <trans-unit id="4acd3d668558126efd2cfb5861479b741fa7210e" translate="yes" xml:space="preserve">
          <source>LazyLoadHooks</source>
          <target state="translated">LazyLoadHooks</target>
        </trans-unit>
        <trans-unit id="05f23ec34b8f5c1c142321cf9fb3a41254f5ed9b" translate="yes" xml:space="preserve">
          <source>LazyLoadHooks#on_load</source>
          <target state="translated">LazyLoadHooks#on_load</target>
        </trans-unit>
        <trans-unit id="43d15a08d31d62de7b68ddb2009b76398fc6fafd" translate="yes" xml:space="preserve">
          <source>LazyLoadHooks#run_load_hooks</source>
          <target state="translated">LazyLoadHooks#run_load_hooks</target>
        </trans-unit>
        <trans-unit id="f56145331f8573663f749e0585fba9bafdedf906" translate="yes" xml:space="preserve">
          <source>Leading colons would make the first segment absolute rather than relative: &lt;code&gt;::Billing::Invoice&lt;/code&gt;. That would force &lt;code&gt;Billing&lt;/code&gt; to be looked up only as a top-level constant.</source>
          <target state="translated">前导冒号会使第一部分定为绝对而非相对 &lt;code&gt;::Billing::Invoice&lt;/code&gt; 。这将迫使 &lt;code&gt;Billing&lt;/code&gt; 只被视为顶级常量。</target>
        </trans-unit>
        <trans-unit id="0205f20e6f02e7e5bf0f090188c3352d3378c901" translate="yes" xml:space="preserve">
          <source>Lean on the protect_from_forgery declaration to mark which actions are due for same-origin request verification. If protect_from_forgery is enabled on an action, this before_action flags its after_action to verify that JavaScript responses are for XHR requests, ensuring they follow the browser's same-origin policy.</source>
          <target state="translated">倚靠 protect_from_forgery 声明来标记哪些动作应该进行同源请求验证。如果在一个动作上启用了protect_from_forgery,那么这个before_action就会标记它的after_action来验证JavaScript响应是否为XHR请求,确保它们遵循浏览器的同源策略。</target>
        </trans-unit>
        <trans-unit id="d80449c77af0b47c205fab1563e049bc44130805" translate="yes" xml:space="preserve">
          <source>Learn more about &lt;a href=&quot;security#custom-credentials&quot;&gt;managing credentials later in this guide&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;security#custom-credentials&quot;&gt;稍后在本指南中&lt;/a&gt;了解有关管理凭据的更多信息</target>
        </trans-unit>
        <trans-unit id="5120024867e2bd45c0226da8ee5ccca4d252aa19" translate="yes" xml:space="preserve">
          <source>Learn more about &lt;code&gt;redirect_to&lt;/code&gt; and what options you have in &lt;a href=&quot;redirecting&quot;&gt;ActionController::Redirecting&lt;/a&gt;.</source>
          <target state="translated">了解有关 &lt;code&gt;redirect_to&lt;/code&gt; 以及&lt;a href=&quot;redirecting&quot;&gt;ActionController :: Redirecting中&lt;/a&gt;具有哪些选项的更多信息。</target>
        </trans-unit>
        <trans-unit id="2680ad714bae01fb2a75924986c28aa6fbc21993" translate="yes" xml:space="preserve">
          <source>Learn more about CSRF attacks and securing your application in the &lt;a href=&quot;https://guides.rubyonrails.org/security.html&quot;&gt;Ruby on Rails Security Guide&lt;/a&gt;.</source>
          <target state="translated">在&lt;a href=&quot;https://guides.rubyonrails.org/security.html&quot;&gt;Ruby on Rails安全指南中&lt;/a&gt;了解有关CSRF攻击和保护应用程序的更多信息。</target>
        </trans-unit>
        <trans-unit id="d03a367fb887c4a017cd9d70d02779563c3dfabe" translate="yes" xml:space="preserve">
          <source>Learn more about Unobtrusive JavaScript on &lt;a href=&quot;working_with_javascript_in_rails&quot;&gt;Working With JavaScript in Rails&lt;/a&gt; guide.</source>
          <target state="translated">&lt;a href=&quot;working_with_javascript_in_rails&quot;&gt;在Rails&lt;/a&gt;指南中了解有关使用JavaScript的更多信息。</target>
        </trans-unit>
        <trans-unit id="49a7c9654d7d32bf1a7434e36ba31c8a9d52bd04" translate="yes" xml:space="preserve">
          <source>Learn more about credentials with &lt;code&gt;rails credentials:help&lt;/code&gt;.</source>
          <target state="translated">了解更多有关带有 &lt;code&gt;rails credentials:help&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6087ad887326b13b7e705f0f5b49332398028b13" translate="yes" xml:space="preserve">
          <source>Learn more about other session storages in &lt;a href=&quot;action_controller_overview#session&quot;&gt;Action Controller Overview Guide&lt;/a&gt;.</source>
          <target state="translated">在&lt;a href=&quot;action_controller_overview#session&quot;&gt;《 Action Controller概述指南》中&lt;/a&gt;了解有关其他会话存储的更多信息。</target>
        </trans-unit>
        <trans-unit id="a361189388c27c3316f9ffe0894462c23768bd0d" translate="yes" xml:space="preserve">
          <source>Learning Rack</source>
          <target state="translated">学习架</target>
        </trans-unit>
        <trans-unit id="4004c46012ce2e74f00d47a6df53669577458d0c" translate="yes" xml:space="preserve">
          <source>Leaving the hash off gives the wrong link:</source>
          <target state="translated">把哈希值去掉,就会出现错误的链接。</target>
        </trans-unit>
        <trans-unit id="57cabcc429f05e3d4a452b279c39df253df905c9" translate="yes" xml:space="preserve">
          <source>Legacy syntax</source>
          <target state="translated">遗留语法</target>
        </trans-unit>
        <trans-unit id="78d8e5ae3e5b6af734ef6545182637310d10213b" translate="yes" xml:space="preserve">
          <source>Let &lt;a href=&quot;proxyobject&quot;&gt;ActiveSupport::ProxyObject&lt;/a&gt; at least raise exceptions.</source>
          <target state="translated">让&lt;a href=&quot;proxyobject&quot;&gt;ActiveSupport :: ProxyObject&lt;/a&gt;至少引发异常。</target>
        </trans-unit>
        <trans-unit id="a72602d5db80600fb59df54bed6dd5174594a0dd" translate="yes" xml:space="preserve">
          <source>Let us also move that new comment section out to its own partial. Again, you create a file &lt;code&gt;app/views/comments/_form.html.erb&lt;/code&gt; containing:</source>
          <target state="translated">让我们还将新的评论部分移到它自己的部分。同样，您将创建一个文件 &lt;code&gt;app/views/comments/_form.html.erb&lt;/code&gt; ,其中包含：</target>
        </trans-unit>
        <trans-unit id="96a0635a516af1771ae2eb32708ac151fe4aaaf8" translate="yes" xml:space="preserve">
          <source>Let us modify &lt;code&gt;test_should_create_article&lt;/code&gt; test in &lt;code&gt;articles_controller_test.rb&lt;/code&gt; so that all our test pass:</source>
          <target state="translated">让我们修改 &lt;code&gt;test_should_create_article&lt;/code&gt; 试验 &lt;code&gt;articles_controller_test.rb&lt;/code&gt; 让我们所有的测试流程：</target>
        </trans-unit>
        <trans-unit id="dab4c465b3545675931666804e362f8235200f4c" translate="yes" xml:space="preserve">
          <source>Let us run this newly added test (where &lt;code&gt;6&lt;/code&gt; is the number of line where the test is defined).</source>
          <target state="translated">让我们运行这个新添加的测试（其中 &lt;code&gt;6&lt;/code&gt; 是定义测试的行数）。</target>
        </trans-unit>
        <trans-unit id="b9fcf90507f73f5eb8f58f17d19d3ae4f2f9910f" translate="yes" xml:space="preserve">
          <source>Let's add a method called &lt;code&gt;welcome_email&lt;/code&gt;, that will send an email to the user's registered email address:</source>
          <target state="translated">让我们添加一个名为 &lt;code&gt;welcome_email&lt;/code&gt; 的方法，该方法会将电子邮件发送到用户的注册电子邮件地址：</target>
        </trans-unit>
        <trans-unit id="79e1f74aa6ec7b5a5077c8b42b57bd04f8515dc5" translate="yes" xml:space="preserve">
          <source>Let's add a replica for the primary, a new writer called animals and a replica for that as well. To do this we need to change our &lt;code&gt;database.yml&lt;/code&gt; from a 2-tier to a 3-tier config.</source>
          <target state="translated">让我们为主要对象添加一个副本，一个称为动物的新作者，并为其添加一个副本。为此，我们需要将 &lt;code&gt;database.yml&lt;/code&gt; 从2层配置更改为3层配置。</target>
        </trans-unit>
        <trans-unit id="b48e65eb47d949d7844ff9e16bf80abf6b052f5f" translate="yes" xml:space="preserve">
          <source>Let's add an integration test to our blog application. We'll start with a basic workflow of creating a new blog article, to verify that everything is working properly.</source>
          <target state="translated">让我们为我们的博客应用添加一个集成测试。我们将从创建一个新的博客文章的基本工作流程开始,来验证一切是否正常工作。</target>
        </trans-unit>
        <trans-unit id="6e3f79475457cf9a5f2a016839cf6a8e669854a2" translate="yes" xml:space="preserve">
          <source>Let's add links to the other views as well, starting with adding this &quot;New Article&quot; link to &lt;code&gt;app/views/articles/index.html.erb&lt;/code&gt;, placing it above the &lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt; tag:</source>
          <target state="translated">让我们也添加到其他视图的链接，首先将此&amp;ldquo;新文章&amp;rdquo;链接添加到 &lt;code&gt;app/views/articles/index.html.erb&lt;/code&gt; ，然后将其放置在 &lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt; 标记上方：</target>
        </trans-unit>
        <trans-unit id="dc3ecee55d65665c35f62547c455cc419b0dc82d" translate="yes" xml:space="preserve">
          <source>Let's also make a text part for this email. Not all clients prefer HTML emails, and so sending both is best practice. To do this, create a file called &lt;code&gt;welcome_email.text.erb&lt;/code&gt; in &lt;code&gt;app/views/user_mailer/&lt;/code&gt;:</source>
          <target state="translated">让我们为该电子邮件添加文本部分。并非所有客户都喜欢HTML电子邮件，因此最好同时发送这两种电子邮件。为此，请在 &lt;code&gt;app/views/user_mailer/&lt;/code&gt; 创建一个名为 &lt;code&gt;welcome_email.text.erb&lt;/code&gt; 的文件：</target>
        </trans-unit>
        <trans-unit id="6dfb10465abe14397694d1ef3fbb975786f3e93d" translate="yes" xml:space="preserve">
          <source>Let's analyze an example to really understand what that means. While common abuses of language like &quot;the &lt;code&gt;String&lt;/code&gt; class&quot; are convenient, the exposition is going to be precise here for didactic purposes.</source>
          <target state="translated">让我们分析一个示例以真正理解其含义。尽管常见的滥用语言（例如&amp;ldquo; &lt;code&gt;String&lt;/code&gt; 类&amp;rdquo;）很方便，但出于教学目的，这里的说明将很精确。</target>
        </trans-unit>
        <trans-unit id="f4ce79534391e97d4f4aa9c82cc741ad12c8def6" translate="yes" xml:space="preserve">
          <source>Let's assume we want to deploy our application to &quot;/app1&quot;. Rails needs to know this directory to generate the appropriate routes:</source>
          <target state="translated">假设我们想把应用部署到&quot;/app1&quot;。Rails需要知道这个目录来生成相应的路由。</target>
        </trans-unit>
        <trans-unit id="71b6809eee4e5ad984a6e18c3317f2e1911b1c3f" translate="yes" xml:space="preserve">
          <source>Let's break out some more monkeys and pirates.</source>
          <target state="translated">让我们再多出一些猴子和海盗。</target>
        </trans-unit>
        <trans-unit id="0175bd3560f981f045ac3204ff11ccf5cd1e0c8f" translate="yes" xml:space="preserve">
          <source>Let's break this test down so we can understand it.</source>
          <target state="translated">我们来分析一下这个测试,以便我们能够理解它。</target>
        </trans-unit>
        <trans-unit id="d411cec433d62e9e5131196fc3d8ca677b9020c5" translate="yes" xml:space="preserve">
          <source>Let's consider</source>
          <target state="translated">让我们考虑一下</target>
        </trans-unit>
        <trans-unit id="6a2b72ee8dfb84cee80a7035dfdbf117386402d2" translate="yes" xml:space="preserve">
          <source>Let's consider a flight simulator. The application has a default flight model</source>
          <target state="translated">让我们考虑一个飞行模拟器。该应用程序有一个默认的飞行模型</target>
        </trans-unit>
        <trans-unit id="c00ee8b2221f13d18a00305aa785cc9bb52f8574" translate="yes" xml:space="preserve">
          <source>Let's consider the following module definition:</source>
          <target state="translated">让我们考虑以下模块定义。</target>
        </trans-unit>
        <trans-unit id="c26c7d6fe559c363e03a6bd3159ae8ce188a0ff1" translate="yes" xml:space="preserve">
          <source>Let's create a simple Rails application to step through each of these commands in context.</source>
          <target state="translated">让我们创建一个简单的Rails应用程序,在上下文中逐步完成这些命令。</target>
        </trans-unit>
        <trans-unit id="b1fa58a55971fd9e23ddeee23e8c1d0c89153587" translate="yes" xml:space="preserve">
          <source>Let's imagine that users in some application have login information in the &lt;code&gt;User&lt;/code&gt; model but name and other data in a separate &lt;code&gt;Profile&lt;/code&gt; model:</source>
          <target state="translated">假设某些应用程序中的 &lt;code&gt;User&lt;/code&gt; 在User模型中具有登录信息，但在单独的 &lt;code&gt;Profile&lt;/code&gt; 模型中具有名称和其他数据：</target>
        </trans-unit>
        <trans-unit id="21a5e444a84811bf545d3f94d479c8b239f38e28" translate="yes" xml:space="preserve">
          <source>Let's implement the flash message now in our controller. Our &lt;code&gt;:create&lt;/code&gt; action should now look like this:</source>
          <target state="translated">让我们现在在控制器中实现Flash消息。我们的 &lt;code&gt;:create&lt;/code&gt; 动作现在应如下所示：</target>
        </trans-unit>
        <trans-unit id="b51c46ffa72a597d58c3017405a3b8080b7928f4" translate="yes" xml:space="preserve">
          <source>Let's introduce now a subclass of &lt;code&gt;Rectangle&lt;/code&gt;:</source>
          <target state="translated">现在让我们介绍 &lt;code&gt;Rectangle&lt;/code&gt; 的子类：</target>
        </trans-unit>
        <trans-unit id="cd40f9d2fe4074d731d624f45d324731e74d0541" translate="yes" xml:space="preserve">
          <source>Let's look at the code below:</source>
          <target state="translated">我们来看看下面的代码。</target>
        </trans-unit>
        <trans-unit id="7588d79a31b685899386a77630023f4aad3bc947" translate="yes" xml:space="preserve">
          <source>Let's look at the full error message again:</source>
          <target state="translated">我们再来看看完整的错误信息。</target>
        </trans-unit>
        <trans-unit id="db255fe389309039f7483e2c79350e7b43e7b7d4" translate="yes" xml:space="preserve">
          <source>Let's make our own controller with the controller generator. But what command should we use? Let's ask the generator:</source>
          <target state="translated">让我们用控制器生成器来制作我们自己的控制器。但是我们应该用什么命令呢?让我们问问生成器吧。</target>
        </trans-unit>
        <trans-unit id="f10ea4f39f4b33b53a25bba08b9359f1fcad5b86" translate="yes" xml:space="preserve">
          <source>Let's make the HABTM fixture go away.</source>
          <target state="translated">让我们让HABTM的固定装置消失。</target>
        </trans-unit>
        <trans-unit id="af3c0983643d82f65dfb7da47772af56e8bae72d" translate="yes" xml:space="preserve">
          <source>Let's say the &lt;code&gt;users&lt;/code&gt; table has &lt;code&gt;id&lt;/code&gt; as the primary_key but it also has a &lt;code&gt;guid&lt;/code&gt; column. The requirement is that the &lt;code&gt;todos&lt;/code&gt; table should hold the &lt;code&gt;guid&lt;/code&gt; column value as the foreign key and not &lt;code&gt;id&lt;/code&gt; value. This can be achieved like this:</source>
          <target state="translated">假设 &lt;code&gt;users&lt;/code&gt; 表的 &lt;code&gt;id&lt;/code&gt; 为primary_key，但也有一个 &lt;code&gt;guid&lt;/code&gt; 列。要求是 &lt;code&gt;todos&lt;/code&gt; 表应将 &lt;code&gt;guid&lt;/code&gt; 列值作为外键而不是 &lt;code&gt;id&lt;/code&gt; 值。可以这样实现：</target>
        </trans-unit>
        <trans-unit id="8aaa8fd90fd44344aa5ea74de6918d0b560e4441" translate="yes" xml:space="preserve">
          <source>Let's say we have an application with a single primary database and we need to add a new database for some new tables we're adding. The name of the new database will be &quot;animals&quot;.</source>
          <target state="translated">比方说,我们有一个应用程序,有一个单一的主数据库,我们需要为我们添加的一些新表添加一个新的数据库。新数据库的名称将是 &quot;动物&quot;。</target>
        </trans-unit>
        <trans-unit id="e62d2d4961a0889a900d5b7d7deb016aa106cbd4" translate="yes" xml:space="preserve">
          <source>Let's say we're displaying an article on a page which should be wrapped in a &lt;code&gt;div&lt;/code&gt; for display purposes. Firstly, we'll create a new &lt;code&gt;Article&lt;/code&gt;:</source>
          <target state="translated">假设我们要在页面上显示文章，该文章应该包装在 &lt;code&gt;div&lt;/code&gt; 中以用于显示。首先，我们将创建一个新的 &lt;code&gt;Article&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="8579674d7daf7815627e340f71121460d49e4cb2" translate="yes" xml:space="preserve">
          <source>Let's say we're in the &lt;code&gt;http://www.example.com/products&lt;/code&gt; action with method POST in case of invalid product.</source>
          <target state="translated">假设我们在商品无效的情况下使用POST方法进入 &lt;code&gt;http://www.example.com/products&lt;/code&gt; 操作。</target>
        </trans-unit>
        <trans-unit id="8aec0ccffe5b428a6cb21a91e46b9704b1b5f7fb" translate="yes" xml:space="preserve">
          <source>Let's say we're in the &lt;code&gt;http://www.example.com/shop/checkout?order=desc&amp;amp;page=1&lt;/code&gt; action.</source>
          <target state="translated">假设我们正在 &lt;code&gt;http://www.example.com/shop/checkout?order=desc&amp;amp;page=1&lt;/code&gt; 操作中。</target>
        </trans-unit>
        <trans-unit id="f3e0d2a71301db441896e1ffdd4d512f4c884fe7" translate="yes" xml:space="preserve">
          <source>Let's say you have a &lt;em&gt;BooksController&lt;/em&gt; in your application. Your &lt;em&gt;index&lt;/em&gt; action renders content in &lt;code&gt;app/views/books/index.html.erb&lt;/code&gt; template. When you put a &lt;em&gt;localized variant&lt;/em&gt; of this template: &lt;code&gt;index.es.html.erb&lt;/code&gt; in the same directory, Rails will render content in this template, when the locale is set to &lt;code&gt;:es&lt;/code&gt;. When the locale is set to the default locale, the generic &lt;code&gt;index.html.erb&lt;/code&gt; view will be used. (Future Rails versions may well bring this &lt;em&gt;automagic&lt;/em&gt; localization to assets in &lt;code&gt;public&lt;/code&gt;, etc.)</source>
          <target state="translated">假设您的应用程序中有一个&lt;em&gt;BooksController&lt;/em&gt;。您的&lt;em&gt;索引&lt;/em&gt;操作会在 &lt;code&gt;app/views/books/index.html.erb&lt;/code&gt; 模板中呈现内容。当您将此模板的&lt;em&gt;本地化变体&lt;/em&gt;： &lt;code&gt;index.es.html.erb&lt;/code&gt; 放在同一目录中时，当语言环境设置为 &lt;code&gt;:es&lt;/code&gt; 时，Rails将在此模板中呈现内容。当语言环境设置为默认语言环境时，将使用通用 &lt;code&gt;index.html.erb&lt;/code&gt; 视图。（Future Rails版本很可能将这种&lt;em&gt;自动的&lt;/em&gt;本地化带入 &lt;code&gt;public&lt;/code&gt; 资产等）</target>
        </trans-unit>
        <trans-unit id="46e0bd3737a3ceb5c11cdc9352d2399ab7de05d4" translate="yes" xml:space="preserve">
          <source>Let's say you have a navigation menu&amp;hellip;</source>
          <target state="translated">假设您有一个导航菜单...</target>
        </trans-unit>
        <trans-unit id="177e78ab7407be2c090f5ae68f3c072dc96edece" translate="yes" xml:space="preserve">
          <source>Let's say you like using &lt;code&gt;Object#not_nil?&lt;/code&gt; and &lt;code&gt;Object#not_blank?&lt;/code&gt;:</source>
          <target state="translated">假设您喜欢使用 &lt;code&gt;Object#not_nil?&lt;/code&gt; 和 &lt;code&gt;Object#not_blank?&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="c9cd3934a0abc016ddefcdb09c99e8dd9ccffe99" translate="yes" xml:space="preserve">
          <source>Let's see for example the definition of the &lt;code&gt;caches_action&lt;/code&gt; controller macro:</source>
          <target state="translated">让我们来看例如 &lt;code&gt;caches_action&lt;/code&gt; 控制器宏的定义：</target>
        </trans-unit>
        <trans-unit id="dda5f06059ddbf981e8fa7bfde1dfc2d0115a597" translate="yes" xml:space="preserve">
          <source>Let's see how Rails autoloads the &lt;code&gt;Post&lt;/code&gt; constant in the &lt;code&gt;PostsController&lt;/code&gt; above assuming the application has a &lt;code&gt;Post&lt;/code&gt; model defined in &lt;code&gt;app/models/post.rb&lt;/code&gt;.</source>
          <target state="translated">假设应用程序具有在 &lt;code&gt;app/models/post.rb&lt;/code&gt; 中定义的 &lt;code&gt;Post&lt;/code&gt; 模型，让我们看看Rails如何在上述 &lt;code&gt;PostsController&lt;/code&gt; 中自动加载 &lt;code&gt;Post&lt;/code&gt; 常量。</target>
        </trans-unit>
        <trans-unit id="1212c891c1276d0d0922365aee5189e87122dcb9" translate="yes" xml:space="preserve">
          <source>Let's see the interface Rails created for us.</source>
          <target state="translated">我们来看看Rails为我们创建的界面。</target>
        </trans-unit>
        <trans-unit id="7c9f75a14a6a8fa84a573b0eb3a6e227e9516c06" translate="yes" xml:space="preserve">
          <source>Let's see what a &lt;code&gt;--git&lt;/code&gt; option and a &lt;code&gt;--database=postgresql&lt;/code&gt; option will do for us:</source>
          <target state="translated">让我们看看 &lt;code&gt;--git&lt;/code&gt; 选项和 &lt;code&gt;--database=postgresql&lt;/code&gt; 选项将为我们做什么：</target>
        </trans-unit>
        <trans-unit id="2463f5acabbb86e1902e7e40a13ca91e4485de9b" translate="yes" xml:space="preserve">
          <source>Let's start by adding this assertion to our &lt;code&gt;test_should_create_article&lt;/code&gt; test:</source>
          <target state="translated">首先，将以下断言添加到我们的 &lt;code&gt;test_should_create_article&lt;/code&gt; 测试中：</target>
        </trans-unit>
        <trans-unit id="679242afe97967bee95cf933ac25ed6b6adeee4c" translate="yes" xml:space="preserve">
          <source>Let's start to boot and initialize the app. A Rails application is usually started by running &lt;code&gt;rails console&lt;/code&gt; or &lt;code&gt;rails server&lt;/code&gt;.</source>
          <target state="translated">让我们开始启动并初始化应用程序。通常，通过运行 &lt;code&gt;rails console&lt;/code&gt; 或 &lt;code&gt;rails server&lt;/code&gt; 来启动Rails应用程序。</target>
        </trans-unit>
        <trans-unit id="26bbb36043b4b51caaf53b4eb429bbb3cd71c66a" translate="yes" xml:space="preserve">
          <source>Let's suppose that you were making a Karaoke machine and a user wants to get the lyrics for a particular song. Each &lt;code&gt;Song&lt;/code&gt; has a particular number of lines and each line takes time &lt;code&gt;num_beats&lt;/code&gt; to finish singing.</source>
          <target state="translated">假设您正在制作卡拉OK机，并且用户想要获取特定歌曲的歌词。每首 &lt;code&gt;Song&lt;/code&gt; 都有特定的行数，每行需要 &lt;code&gt;num_beats&lt;/code&gt; 时间才能完成演唱。</target>
        </trans-unit>
        <trans-unit id="b39773d51d4340138e114edc90a5ea57419ae99d" translate="yes" xml:space="preserve">
          <source>Let's suppose the following snippet creates a class (rather than reopening it):</source>
          <target state="translated">让我们假设下面的代码段创建一个类(而不是重新打开它)。</target>
        </trans-unit>
        <trans-unit id="57e26fc7533f565888b3ecfca314d023ce8533a2" translate="yes" xml:space="preserve">
          <source>Let's suppose we have these class definitions:</source>
          <target state="translated">假设我们有这些类的定义。</target>
        </trans-unit>
        <trans-unit id="a4090c16fa4ca8c22ac98f2731e3303c82f681b4" translate="yes" xml:space="preserve">
          <source>Let's suppose you are creating a generator that needs to invoke the controller generator from test unit. Your first attempt is:</source>
          <target state="translated">假设你正在创建一个需要从测试单元调用控制器生成器的生成器。你的第一次尝试是:</target>
        </trans-unit>
        <trans-unit id="b8d8dd280572f4245c2f9798e4cf4307d53e5d5a" translate="yes" xml:space="preserve">
          <source>Let's take a look at one such test, &lt;code&gt;test_should_get_index&lt;/code&gt; from the file &lt;code&gt;articles_controller_test.rb&lt;/code&gt;.</source>
          <target state="translated">让我们看一下一个这样的测试， &lt;code&gt;test_should_get_index&lt;/code&gt; 来自 &lt;code&gt;articles_controller_test.rb&lt;/code&gt; 文件的test_should_get_index。</target>
        </trans-unit>
        <trans-unit id="fb7b003a2624199393e36191ea09f4b342435f64" translate="yes" xml:space="preserve">
          <source>Let's take a look at some of the things that Rails provides out of the box that are still applicable to API applications.</source>
          <target state="translated">让我们来看看Rails提供的一些开箱即用的东西,它们仍然适用于API应用。</target>
        </trans-unit>
        <trans-unit id="563872689b7d13f35f84ce3e7c9d9cb69f5f4742" translate="yes" xml:space="preserve">
          <source>Let's take a look at what Rails does by default when creating a new resource using the scaffold generator:</source>
          <target state="translated">让我们来看看Rails在使用脚手架生成器创建新资源时的默认操作。</target>
        </trans-unit>
        <trans-unit id="2b61280695474ba2f4d47ae92ae0ee897d8bc51b" translate="yes" xml:space="preserve">
          <source>Let's take for example this non-persisted object.</source>
          <target state="translated">我们以这个非persisted对象为例。</target>
        </trans-unit>
        <trans-unit id="97b75242b93becb500d73edfceaaad470ab7fc77" translate="yes" xml:space="preserve">
          <source>Let's talk about unit tests. Unit tests are code that tests and makes assertions about code. In unit testing, we take a little part of code, say a method of a model, and test its inputs and outputs. Unit tests are your friend. The sooner you make peace with the fact that your quality of life will drastically increase when you unit test your code, the better. Seriously. Please visit &lt;a href=&quot;https://guides.rubyonrails.org/testing.html&quot;&gt;the testing guide&lt;/a&gt; for an in-depth look at unit testing.</source>
          <target state="translated">让我们谈谈单元测试。单元测试是测试并声明代码的代码。在单元测试中，我们仅使用一小部分代码（例如模型的方法），并测试其输入和输出。单元测试是您的朋友。当您对单元代码进行单元测试时，您越早能使生活质量急剧提高这一事实就越令人安心。说真的 请访问&lt;a href=&quot;https://guides.rubyonrails.org/testing.html&quot;&gt;测试指南&lt;/a&gt;以深入了解单元测试。</target>
        </trans-unit>
        <trans-unit id="fd189d590d8b1b050d1f34adacad7d94c39e61b0" translate="yes" xml:space="preserve">
          <source>Let's use the act of logging out as an example. The controller can send a message which will be displayed to the user on the next request:</source>
          <target state="translated">我们以注销行为为例。控制器可以发送一条消息,该消息将在下一次请求时显示给用户。</target>
        </trans-unit>
        <trans-unit id="1a7302ab1c8547352066ed26da2374047cdadc44" translate="yes" xml:space="preserve">
          <source>Let's wire up the &lt;code&gt;create&lt;/code&gt; in &lt;code&gt;app/controllers/comments_controller.rb&lt;/code&gt;:</source>
          <target state="translated">让我们线了 &lt;code&gt;create&lt;/code&gt; 在 &lt;code&gt;app/controllers/comments_controller.rb&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="992a5765c7ceef439caa841de820744520c02dab" translate="yes" xml:space="preserve">
          <source>Let's write a test for the &lt;code&gt;:show&lt;/code&gt; action:</source>
          <target state="translated">让我们为 &lt;code&gt;:show&lt;/code&gt; 动作编写一个测试：</target>
        </trans-unit>
        <trans-unit id="6388e2763a8787438175ea44759b7a341170f551" translate="yes" xml:space="preserve">
          <source>Lets you selectively disable calls to &lt;code&gt;touch&lt;/code&gt; for the duration of a block.</source>
          <target state="translated">允许您在一个块的持续时间内有选择地禁用 &lt;code&gt;touch&lt;/code&gt; 功能。</target>
        </trans-unit>
        <trans-unit id="8acbdbc31bdc854cb88cd725315b1b68aca7a0e7" translate="yes" xml:space="preserve">
          <source>Licensed under the Creative Commons Attribution-ShareAlike 4.0 International License.</source>
          <target state="translated">根据知识共享署名-相同方式共享4.0国际许可证授权。</target>
        </trans-unit>
        <trans-unit id="58fd3b1b83cc7fc933d72fe934bdb6e534441281" translate="yes" xml:space="preserve">
          <source>Licensed under the MIT License.</source>
          <target state="translated">根据麻省理工学院许可证授权。</target>
        </trans-unit>
        <trans-unit id="90c56b68f39e7603a156bfa82a13c020a53c399d" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;collectionproxy#method-i-create&quot;&gt;create&lt;/a&gt;, except that if the record is invalid, raises an exception.</source>
          <target state="translated">与&lt;a href=&quot;collectionproxy#method-i-create&quot;&gt;create&lt;/a&gt;一样，不同之处在于如果记录无效，则会引发异常。</target>
        </trans-unit>
        <trans-unit id="f82455ed657d40dfabb8a5dd6261584322dd09d7" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;findermethods#method-i-find_by&quot;&gt;find_by&lt;/a&gt;, except that if no record is found, raises an &lt;a href=&quot;recordnotfound&quot;&gt;ActiveRecord::RecordNotFound&lt;/a&gt; error.</source>
          <target state="translated">与&lt;a href=&quot;findermethods#method-i-find_by&quot;&gt;find_by相似&lt;/a&gt;，不同之处在于如果未找到任何记录，则会引发&lt;a href=&quot;recordnotfound&quot;&gt;ActiveRecord :: RecordNotFound&lt;/a&gt;错误。</target>
        </trans-unit>
        <trans-unit id="1a36c87f81f627d65cc615f8ae7a9afdbe70794c" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;relation#method-i-create_or_find_by&quot;&gt;create_or_find_by&lt;/a&gt;, but calls &lt;a href=&quot;persistence/classmethods#method-i-create-21&quot;&gt;create!&lt;/a&gt; so an exception is raised if the created record is invalid.</source>
          <target state="translated">类似于&lt;a href=&quot;relation#method-i-create_or_find_by&quot;&gt;create_or_find_by&lt;/a&gt;，但是调用可以&lt;a href=&quot;persistence/classmethods#method-i-create-21&quot;&gt;创建！&lt;/a&gt;因此，如果创建的记录无效，则会引发异常。</target>
        </trans-unit>
        <trans-unit id="838678c204cb7edc7ae37ac099a5e73f3f667073" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;relation#method-i-find_or_create_by&quot;&gt;find_or_create_by&lt;/a&gt;, but calls &lt;a href=&quot;persistence/classmethods#method-i-create-21&quot;&gt;create!&lt;/a&gt; so an exception is raised if the created record is invalid.</source>
          <target state="translated">类似于&lt;a href=&quot;relation#method-i-find_or_create_by&quot;&gt;find_or_create_by&lt;/a&gt;，但是调用可以&lt;a href=&quot;persistence/classmethods#method-i-create-21&quot;&gt;创建！&lt;/a&gt;因此，如果创建的记录无效，则会引发异常。</target>
        </trans-unit>
        <trans-unit id="f8856f0a8b7199b002c8122ad2fcd4604b1d6719" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;relation#method-i-find_or_create_by&quot;&gt;find_or_create_by&lt;/a&gt;, but calls new instead of &lt;a href=&quot;persistence/classmethods#method-i-create&quot;&gt;create&lt;/a&gt;.</source>
          <target state="translated">类似于&lt;a href=&quot;relation#method-i-find_or_create_by&quot;&gt;find_or_create_by&lt;/a&gt;，但是调用new而不是&lt;a href=&quot;persistence/classmethods#method-i-create&quot;&gt;create&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="981e81b63a865974c1cebae7d45b847c46d0c320" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;distance_of_time_in_words&lt;/code&gt;, but where &lt;code&gt;to_time&lt;/code&gt; is fixed to &lt;code&gt;Time.now&lt;/code&gt;.</source>
          <target state="translated">像 &lt;code&gt;distance_of_time_in_words&lt;/code&gt; 一样，但是 &lt;code&gt;to_time&lt;/code&gt; 固定为 &lt;code&gt;Time.now&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dd2abf706df47832d72f8c321855ea5fb7e3691b" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;merge&lt;/code&gt; but the other way around: Merges the receiver into the argument and returns a new hash with indifferent access as result:</source>
          <target state="translated">像 &lt;code&gt;merge&lt;/code&gt; 一样，但也有另一种方式：将接收者合并到参数中，并返回一个新的哈希，其结果是访问无关紧要：</target>
        </trans-unit>
        <trans-unit id="1945f3936ef206114971a0591dc706d5e224d076" translate="yes" xml:space="preserve">
          <source>Like Action Controller, each mailer class has a corresponding view directory in which each method of the class looks for a template with its name.</source>
          <target state="translated">和Action Controller一样,每个邮件类都有一个对应的视图目录,在这个目录中,该类的每个方法都会寻找一个带名字的模板。</target>
        </trans-unit>
        <trans-unit id="8ffafe203ca6452b9469b0ee8ef3f5bd66cb64c9" translate="yes" xml:space="preserve">
          <source>Like all of the other components of an engine, the assets should be namespaced. This means that if you have an asset called &lt;code&gt;style.css&lt;/code&gt;, it should be placed at &lt;code&gt;app/assets/stylesheets/[engine name]/style.css&lt;/code&gt;, rather than &lt;code&gt;app/assets/stylesheets/style.css&lt;/code&gt;. If this asset isn't namespaced, there is a possibility that the host application could have an asset named identically, in which case the application's asset would take precedence and the engine's one would be ignored.</source>
          <target state="translated">与引擎的所有其他组件一样，资产应被命名。这意味着，如果您有一个名为 &lt;code&gt;style.css&lt;/code&gt; 的资产，则应将其放置在 &lt;code&gt;app/assets/stylesheets/[engine name]/style.css&lt;/code&gt; ，而不是 &lt;code&gt;app/assets/stylesheets/style.css&lt;/code&gt; 中。如果此资产没有命名空间，则主机应用程序可能具有名称相同的资产，在这种情况下，该应用程序的资产将优先，而引擎的资产将被忽略。</target>
        </trans-unit>
        <trans-unit id="9d575f43f40942a50e4f39a888b719fa5e7f6f38" translate="yes" xml:space="preserve">
          <source>Like all other validations, &lt;code&gt;validates_with&lt;/code&gt; takes the &lt;code&gt;:if&lt;/code&gt;, &lt;code&gt;:unless&lt;/code&gt; and &lt;code&gt;:on&lt;/code&gt; options. If you pass any other options, it will send those options to the validator class as &lt;code&gt;options&lt;/code&gt;:</source>
          <target state="translated">像所有其他验证一样， &lt;code&gt;validates_with&lt;/code&gt; 采用 &lt;code&gt;:if&lt;/code&gt; ， &lt;code&gt;:unless&lt;/code&gt; 和 &lt;code&gt;:on&lt;/code&gt; 选项。如果您传递任何其他选项，它将把这些选项作为 &lt;code&gt;options&lt;/code&gt; 发送到验证器类：</target>
        </trans-unit>
        <trans-unit id="01fcd4d2ae4700b5f2465b1ff92871077189f820" translate="yes" xml:space="preserve">
          <source>Like an &lt;code&gt;image_tag&lt;/code&gt; you can supply a path, either absolute, or relative to the &lt;code&gt;public/videos&lt;/code&gt; directory. Additionally you can specify the &lt;code&gt;size: &quot;#{width}x#{height}&quot;&lt;/code&gt; option just like an &lt;code&gt;image_tag&lt;/code&gt;. Video tags can also have any of the HTML options specified at the end (&lt;code&gt;id&lt;/code&gt;, &lt;code&gt;class&lt;/code&gt; et al).</source>
          <target state="translated">就像 &lt;code&gt;image_tag&lt;/code&gt; 一样，您可以提供绝对路径或相对于 &lt;code&gt;public/videos&lt;/code&gt; 目录的路径。另外，您可以指定 &lt;code&gt;size: &quot;#{width}x#{height}&quot;&lt;/code&gt; 选项，就像 &lt;code&gt;image_tag&lt;/code&gt; 一样。视频标签还可以在末尾指定任何HTML选项（ &lt;code&gt;id&lt;/code&gt; ， &lt;code&gt;class&lt;/code&gt; 等）。</target>
        </trans-unit>
        <trans-unit id="2ebbef68061adecb878f7d42134a495f64524522" translate="yes" xml:space="preserve">
          <source>Like everything else in your Rails application, you can test your routes. Route tests reside in &lt;code&gt;test/controllers/&lt;/code&gt; or are part of controller tests.</source>
          <target state="translated">像Rails应用程序中的其他所有内容一样，您可以测试路线。路由测试位于 &lt;code&gt;test/controllers/&lt;/code&gt; 或者是控制器测试的一部分。</target>
        </trans-unit>
        <trans-unit id="aee8e6aaa6eb1e9d33d334a7bfe242f7cc49970c" translate="yes" xml:space="preserve">
          <source>Like interceptors, you need to register observers with the Action Mailer framework. You can do this in an initializer file &lt;code&gt;config/initializers/email_delivery_observer.rb&lt;/code&gt;</source>
          <target state="translated">与拦截器一样，您需要向Action Mailer框架注册观察者。您可以在初始化文件 &lt;code&gt;config/initializers/email_delivery_observer.rb&lt;/code&gt; 中进行此操作</target>
        </trans-unit>
        <trans-unit id="91c20106ed1d5b3e7ee5eb18cac235356a844f06" translate="yes" xml:space="preserve">
          <source>Like other &lt;code&gt;before_*&lt;/code&gt; callbacks if &lt;code&gt;before_validation&lt;/code&gt; throws &lt;code&gt;:abort&lt;/code&gt; then &lt;code&gt;valid?&lt;/code&gt; will not be called.</source>
          <target state="translated">与其他 &lt;code&gt;before_*&lt;/code&gt; 回调类似，如果 &lt;code&gt;before_validation&lt;/code&gt; 抛出 &lt;code&gt;:abort&lt;/code&gt; 则 &lt;code&gt;valid?&lt;/code&gt; 不会被调用。</target>
        </trans-unit>
        <trans-unit id="5dd204ef14d7b85ee67171cb097475f1e6871271" translate="yes" xml:space="preserve">
          <source>Like the &lt;code&gt;remove_column&lt;/code&gt; and &lt;code&gt;add_column&lt;/code&gt; Rails provides the &lt;code&gt;change_column&lt;/code&gt; migration method.</source>
          <target state="translated">像 &lt;code&gt;remove_column&lt;/code&gt; 和 &lt;code&gt;add_column&lt;/code&gt; 一样，Rails提供了 &lt;code&gt;change_column&lt;/code&gt; 迁移方法。</target>
        </trans-unit>
        <trans-unit id="36d6a2738d70d70feb17c5c4ce6fb8a243819c54" translate="yes" xml:space="preserve">
          <source>Like the &lt;code&gt;video_tag&lt;/code&gt;, the &lt;code&gt;audio_tag&lt;/code&gt; has special options:</source>
          <target state="translated">像 &lt;code&gt;video_tag&lt;/code&gt; 一样， &lt;code&gt;audio_tag&lt;/code&gt; 也具有特殊的选项：</target>
        </trans-unit>
        <trans-unit id="e66a5dc476fc73af9f8055914d8ed515c1102014" translate="yes" xml:space="preserve">
          <source>Like the Active Record methods, the callback chain is aborted as soon as one of the methods throws &lt;code&gt;:abort&lt;/code&gt;.</source>
          <target state="translated">像Active Record方法一样，一旦其中一种方法抛出 &lt;code&gt;:abort&lt;/code&gt; ，回调链就会中止。</target>
        </trans-unit>
        <trans-unit id="06becc0802c58a331912f0807cf74457815d184a" translate="yes" xml:space="preserve">
          <source>Like the Executor, the Reloader also wraps application code. If the Executor is not already active on the current thread, the Reloader will invoke it for you, so you only need to call one. This also guarantees that everything the Reloader does, including all its callback invocations, occurs wrapped inside the Executor.</source>
          <target state="translated">和Executor一样,Reloader也会封装应用代码。如果当前线程中的Executor还未激活,Reloader将为你调用它,所以你只需要调用一个。这也保证了Reloader所做的一切,包括它的所有回调调用,都是在Executor内部进行封装的。</target>
        </trans-unit>
        <trans-unit id="366f425cd5b9e6652a38ac7f7aa971788b88b9e8" translate="yes" xml:space="preserve">
          <source>Like the other examples, this will behave similarly to a class method.</source>
          <target state="translated">像其他的例子一样,这将与类方法的行为相似。</target>
        </trans-unit>
        <trans-unit id="ebba6a2344880667e5d34781e11c86287eaa9d87" translate="yes" xml:space="preserve">
          <source>Like with Hash#merge in the standard library, a block can be provided to merge values:</source>
          <target state="translated">和标准库中的Hash#merge一样,可以提供一个块来合并值。</target>
        </trans-unit>
        <trans-unit id="fb4789449468fc495b47f2645508781ca736af5a" translate="yes" xml:space="preserve">
          <source>Like with any blog, our readers will create their comments directly after reading the article, and once they have added their comment, will be sent back to the article show page to see their comment now listed. Due to this, our &lt;code&gt;CommentsController&lt;/code&gt; is there to provide a method to create comments and delete spam comments when they arrive.</source>
          <target state="translated">与任何博客一样，我们的读者将在阅读文章后直接创建他们的评论，一旦他们添加了评论，就会被发送回文章显示页面以查看现在列出的评论。因此，我们的 &lt;code&gt;CommentsController&lt;/code&gt; 可以提供一种创建评论并在垃圾评论到达时将其删除的方法。</target>
        </trans-unit>
        <trans-unit id="ff5496f02f2e70dd87939f4f922ad6359b435663" translate="yes" xml:space="preserve">
          <source>Likewise, if a message has no purpose it won't be returned when verifying with a specific purpose.</source>
          <target state="translated">同样,如果一条消息没有目的,在用特定目的验证时也不会被返回。</target>
        </trans-unit>
        <trans-unit id="7f9f56dc5d9dac067cad8e9787f85e70aa8451e2" translate="yes" xml:space="preserve">
          <source>Likewise, in the controller</source>
          <target state="translated">同样,在控制器中</target>
        </trans-unit>
        <trans-unit id="9043e4d4d1671a725ba2238469203640ef3b4115" translate="yes" xml:space="preserve">
          <source>Likewise, once retrieved an Active Record object can be destroyed which removes it from the database.</source>
          <target state="translated">同样,一旦检索到一个活动记录对象,就可以将其从数据库中删除。</target>
        </trans-unit>
        <trans-unit id="1e39e2da3e09996465c4f4ce0479cc61d8bd528e" translate="yes" xml:space="preserve">
          <source>Limit and Offset</source>
          <target state="translated">极限和偏移</target>
        </trans-unit>
        <trans-unit id="4f68bad7da836e631fb2248fb1abb438211c676f" translate="yes" xml:space="preserve">
          <source>Limit the set of zones provided by TZInfo to a meaningful subset of 134 zones.</source>
          <target state="translated">将 TZInfo 提供的区段集限制为 134 个区段的有意义子集。</target>
        </trans-unit>
        <trans-unit id="1605fb4368464e150eb13ea430ef0ff67931d853" translate="yes" xml:space="preserve">
          <source>Limits are honored, and if present there is no requirement for the batch size, it can be less than, equal, or greater than the limit.</source>
          <target state="translated">限额是兑现的,如果存在对批量大小没有要求,可以小于、等于或大于限额。</target>
        </trans-unit>
        <trans-unit id="7d2bb2ad6044f129fa674c47902d971b813e5412" translate="yes" xml:space="preserve">
          <source>Limits are honored, and if present there is no requirement for the batch size: it can be less than, equal to, or greater than the limit.</source>
          <target state="translated">限值是被尊重的,如果存在,则对批次大小没有要求:可以小于、等于或大于限值。</target>
        </trans-unit>
        <trans-unit id="a0453458ad839bba5dbe50a404dd500b022d2db6" translate="yes" xml:space="preserve">
          <source>Limits the byte size of the string to a number of bytes without breaking characters. Usable when the storage for a string is limited for some reason.</source>
          <target state="translated">将字符串的字节大小限制为一定数量的字节,而不破坏字符。当字符串的存储空间因某种原因受到限制时,可以使用。</target>
        </trans-unit>
        <trans-unit id="8717faa36eea1d1c7661ae98c71e5bedde325942" translate="yes" xml:space="preserve">
          <source>Linking to Files</source>
          <target state="translated">链接到文件</target>
        </trans-unit>
        <trans-unit id="e2ae7cc433871751f8c4fe89e1a46b8934cd7aac" translate="yes" xml:space="preserve">
          <source>Lint Tests</source>
          <target state="translated">绒毛测试</target>
        </trans-unit>
        <trans-unit id="a1464f7beeb518a1b885870631c7f3a94b56fd43" translate="yes" xml:space="preserve">
          <source>List all validators that are being used to validate a specific attribute.</source>
          <target state="translated">列出所有用于验证特定属性的验证器。</target>
        </trans-unit>
        <trans-unit id="9756c11c70cc0c3e6447ead1a20c3b8bfd39a733" translate="yes" xml:space="preserve">
          <source>List all validators that are being used to validate the model using &lt;code&gt;validates_with&lt;/code&gt; method.</source>
          <target state="translated">使用 &lt;code&gt;validates_with&lt;/code&gt; 方法列出用于验证模型的所有验证器。</target>
        </trans-unit>
        <trans-unit id="0f3720ccefa495f1f67d13bfaf93c2c1ac631f1f" translate="yes" xml:space="preserve">
          <source>List of Free Programming Books</source>
          <target state="translated">免费编程书籍列表</target>
        </trans-unit>
        <trans-unit id="407b7ccb6a8ea464943a7436167fbbcc36291043" translate="yes" xml:space="preserve">
          <source>List of HTTP request methods from the following RFCs: Hypertext Transfer Protocol &amp;ndash; HTTP/1.1 (&lt;a href=&quot;https://www.ietf.org/rfc/rfc2616.txt&quot;&gt;www.ietf.org/rfc/rfc2616.txt&lt;/a&gt;) HTTP Extensions for Distributed Authoring &amp;ndash; WEBDAV (&lt;a href=&quot;https://www.ietf.org/rfc/rfc2518.txt&quot;&gt;www.ietf.org/rfc/rfc2518.txt&lt;/a&gt;) Versioning Extensions to WebDAV (&lt;a href=&quot;https://www.ietf.org/rfc/rfc3253.txt&quot;&gt;www.ietf.org/rfc/rfc3253.txt&lt;/a&gt;) Ordered Collections Protocol (WebDAV) (&lt;a href=&quot;https://www.ietf.org/rfc/rfc3648.txt&quot;&gt;www.ietf.org/rfc/rfc3648.txt&lt;/a&gt;) Web Distributed Authoring and Versioning (WebDAV) Access Control Protocol (&lt;a href=&quot;https://www.ietf.org/rfc/rfc3744.txt&quot;&gt;www.ietf.org/rfc/rfc3744.txt&lt;/a&gt;) Web Distributed Authoring and Versioning (WebDAV) SEARCH (&lt;a href=&quot;https://www.ietf.org/rfc/rfc5323.txt&quot;&gt;www.ietf.org/rfc/rfc5323.txt&lt;/a&gt;) Calendar Extensions to WebDAV (&lt;a href=&quot;https://www.ietf.org/rfc/rfc4791.txt&quot;&gt;www.ietf.org/rfc/rfc4791.txt&lt;/a&gt;) PATCH &lt;a href=&quot;../method&quot;&gt;Method&lt;/a&gt; for HTTP (&lt;a href=&quot;https://www.ietf.org/rfc/rfc5789.txt&quot;&gt;www.ietf.org/rfc/rfc5789.txt&lt;/a&gt;)</source>
          <target state="translated">来自以下RFC的HTTP请求方法列表：超文本传输​​协议&amp;ndash; HTTP / 1.1（&lt;a href=&quot;https://www.ietf.org/rfc/rfc2616.txt&quot;&gt;www.ietf.org/rfc/rfc2616.txt&lt;/a&gt;）分布式创作的HTTP扩展&amp;ndash; WEBDAV（&lt;a href=&quot;https://www.ietf.org/rfc/rfc2518.txt&quot;&gt;www.ietf.org/rfc/rfc2518.txt&lt;/a&gt;） WebDAV的版本扩展（&lt;a href=&quot;https://www.ietf.org/rfc/rfc3253.txt&quot;&gt;www.ietf.org/rfc/rfc3253.txt&lt;/a&gt;）有序集合协议（WebDAV）（&lt;a href=&quot;https://www.ietf.org/rfc/rfc3648.txt&quot;&gt;www.ietf.org/rfc/rfc3648.txt&lt;/a&gt;）Web分布式创作和版本控制（WebDAV）访问控制协议（&lt;a href=&quot;https://www.ietf.org/rfc/rfc3744.txt&quot;&gt;www。 ietf.org/rfc/rfc3744.txt&lt;/a&gt;）Web分布式创作和版本控制（WebDAV）搜索（&lt;a href=&quot;https://www.ietf.org/rfc/rfc5323.txt&quot;&gt;www.ietf.org/rfc/rfc5323.txt&lt;/a&gt;）日历扩展到的WebDAV（&lt;a href=&quot;https://www.ietf.org/rfc/rfc4791.txt&quot;&gt;www.ietf.org/rfc/rfc4791.txt&lt;/a&gt;）PATCH HTTP &lt;a href=&quot;../method&quot;&gt;方法&lt;/a&gt;（&lt;a href=&quot;https://www.ietf.org/rfc/rfc5789.txt&quot;&gt;www.ietf.org/rfc/rfc5789.txt&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="e99b9b6b4d6ae76f036d8dca5b804e70b84aaf44" translate="yes" xml:space="preserve">
          <source>Listing Existing Routes</source>
          <target state="translated">列出现有路线</target>
        </trans-unit>
        <trans-unit id="a3bd4dc53839cb5b27fe373d0c90296d3ac3ae04" translate="yes" xml:space="preserve">
          <source>Listing all articles</source>
          <target state="translated">列出所有文章</target>
        </trans-unit>
        <trans-unit id="f0de68777e9549b34e900beb10c9ee85fb7009c4" translate="yes" xml:space="preserve">
          <source>Live Compilation</source>
          <target state="translated">现场合集</target>
        </trans-unit>
        <trans-unit id="e87779f8c44830dda0afa1d38923843e3867f226" translate="yes" xml:space="preserve">
          <source>Live Streaming of Arbitrary Data</source>
          <target state="translated">任意数据的实时流媒体</target>
        </trans-unit>
        <trans-unit id="1de45b5aa2fca7905d7dc09902ec0937f54991cc" translate="yes" xml:space="preserve">
          <source>Live#process</source>
          <target state="translated">Live#process</target>
        </trans-unit>
        <trans-unit id="6b673d9f50ed21fc6d9ccf9a74fec9716a0a7c34" translate="yes" xml:space="preserve">
          <source>Live#response_body=</source>
          <target state="translated">Live#response_body=</target>
        </trans-unit>
        <trans-unit id="1f8628696f61ead3bad365dcf9e48ec45e356b1a" translate="yes" xml:space="preserve">
          <source>Live::SSE</source>
          <target state="translated">Live::SSE</target>
        </trans-unit>
        <trans-unit id="e80cbd3ad532e9de26e75dec756d632ae670e179" translate="yes" xml:space="preserve">
          <source>Live::SSE#close</source>
          <target state="translated">Live::SSE#close</target>
        </trans-unit>
        <trans-unit id="6ca07fe7ffa55271abd157aad738f9c911eccd09" translate="yes" xml:space="preserve">
          <source>Live::SSE#write</source>
          <target state="translated">Live::SSE#write</target>
        </trans-unit>
        <trans-unit id="2002f9ba4a5ddf3e6317fd5214f79f817a7c0f7b" translate="yes" xml:space="preserve">
          <source>Live::SSE::new</source>
          <target state="translated">Live::SSE::new</target>
        </trans-unit>
        <trans-unit id="0856eaf6a58aba3e18f24940f49d7a541bb5fbf7" translate="yes" xml:space="preserve">
          <source>Load Balancing Replicas</source>
          <target state="translated">负载均衡副本</target>
        </trans-unit>
        <trans-unit id="3f211060ae86ba78f9cf3ddbf2e12e4cdd937256" translate="yes" xml:space="preserve">
          <source>Load Interlock</source>
          <target state="translated">负载联锁</target>
        </trans-unit>
        <trans-unit id="3b57c97e1176888fbdd46c4bd908ef2a819c9b3e" translate="yes" xml:space="preserve">
          <source>Load Rails generators and invoke the registered hooks. Check &lt;code&gt;Rails::Railtie.generators&lt;/code&gt; for more info.</source>
          <target state="translated">加载Rails生成器并调用已注册的钩子。检查 &lt;code&gt;Rails::Railtie.generators&lt;/code&gt; 以获得更多信息。</target>
        </trans-unit>
        <trans-unit id="90e7e9635304b55840a29eb4e6fe7f20cc9f5fa9" translate="yes" xml:space="preserve">
          <source>Load Rails runner and invoke the registered hooks. Check &lt;code&gt;Rails::Railtie.runner&lt;/code&gt; for more info.</source>
          <target state="translated">加载Rails运行程序并调用已注册的钩子。检查 &lt;code&gt;Rails::Railtie.runner&lt;/code&gt; 以获取更多信息。</target>
        </trans-unit>
        <trans-unit id="7f519035b4f9c4608d417cc7916003ffcfb5efb6" translate="yes" xml:space="preserve">
          <source>Load Rake, railties tasks and invoke the registered hooks. Check &lt;code&gt;Rails::Railtie.rake_tasks&lt;/code&gt; for more info.</source>
          <target state="translated">加载Rake，railties任务并调用已注册的钩子。检查 &lt;code&gt;Rails::Railtie.rake_tasks&lt;/code&gt; 了解更多信息。</target>
        </trans-unit>
        <trans-unit id="248737ce5d09b3292262076a9f3ec47f2b88e069" translate="yes" xml:space="preserve">
          <source>Load balancing replicas</source>
          <target state="translated">负载平衡副本</target>
        </trans-unit>
        <trans-unit id="5b040245677803bf954f78cdd2af2a4400d98afd" translate="yes" xml:space="preserve">
          <source>Load console and invoke the registered hooks. Check &lt;code&gt;Rails::Railtie.console&lt;/code&gt; for more info.</source>
          <target state="translated">加载控制台并调用注册的挂钩。检查 &lt;code&gt;Rails::Railtie.console&lt;/code&gt; 以获得更多信息。</target>
        </trans-unit>
        <trans-unit id="1cc55c2158b1ec32df371ef3e42b70f4ecfbd7e5" translate="yes" xml:space="preserve">
          <source>Load data from db/seeds.rb file. It can be used in to load engines' seeds, e.g.:</source>
          <target state="translated">从db/seeds.rb文件中加载数据。它可以用于加载引擎的种子,例如:。</target>
        </trans-unit>
        <trans-unit id="c9ec4dd9e6e9589e6eb04e8827dc323ba0606dc6" translate="yes" xml:space="preserve">
          <source>Load the fixture data into the table</source>
          <target state="translated">将夹具数据加载到表中</target>
        </trans-unit>
        <trans-unit id="46559e0eb7289033adcb2334be83299e56fb790b" translate="yes" xml:space="preserve">
          <source>LoadError</source>
          <target state="translated">LoadError</target>
        </trans-unit>
        <trans-unit id="c6a9492b638a409f67b0d9e982b3e7d774ce79be" translate="yes" xml:space="preserve">
          <source>LoadError#is_missing?</source>
          <target state="translated">LoadError#is_missing?</target>
        </trans-unit>
        <trans-unit id="680b0dbdca06c127414899a3ee820eac94b1b989" translate="yes" xml:space="preserve">
          <source>Loading Mechanism</source>
          <target state="translated">装载机制</target>
        </trans-unit>
        <trans-unit id="2ee3534a3ee9902cefe30be9a319bf71af143f92" translate="yes" xml:space="preserve">
          <source>Loading Rails</source>
          <target state="translated">装载轨道</target>
        </trans-unit>
        <trans-unit id="b6d4e36c8ec129c107705cec5ce7a52230bcbdac" translate="yes" xml:space="preserve">
          <source>Loading Rake Tasks and &lt;a href=&quot;generators&quot;&gt;Generators&lt;/a&gt;</source>
          <target state="translated">加载耙任务和&lt;a href=&quot;generators&quot;&gt;生成器&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dc26c6048f64ac1b38aa517f836e37fbf66e2c1d" translate="yes" xml:space="preserve">
          <source>Loading nested relationships is possible using a Hash:</source>
          <target state="translated">使用Hash可以加载嵌套关系。</target>
        </trans-unit>
        <trans-unit id="6a2179426c96029e473583f4db63f8591c481484" translate="yes" xml:space="preserve">
          <source>Loading priority</source>
          <target state="translated">加载优先级</target>
        </trans-unit>
        <trans-unit id="f97bb749d00e9d8d7b4d3cd28987c05e88b7ce8e" translate="yes" xml:space="preserve">
          <source>Loads and returns the entire raw configuration of database from values stored in &lt;code&gt;config/database.yml&lt;/code&gt;.</source>
          <target state="translated">从 &lt;code&gt;config/database.yml&lt;/code&gt; 中存储的值加载并返回数据库的整个原始配置。</target>
        </trans-unit>
        <trans-unit id="96e2841f795c120ab7abbb2a3ce3f19e15e77e86" translate="yes" xml:space="preserve">
          <source>Local Precompilation</source>
          <target state="translated">当地预编</target>
        </trans-unit>
        <trans-unit id="1c19411016a1397c6d7b57cf20afdd1da2dd9035" translate="yes" xml:space="preserve">
          <source>Local cache. Hot in-memory primary cache within block/middleware scope.</source>
          <target state="translated">本地缓存。在块/中间件范围内的热内存主缓存。</target>
        </trans-unit>
        <trans-unit id="ba7f74c4406ac9a4770f83a94dfa9c053e17cdd8" translate="yes" xml:space="preserve">
          <source>Local compilation allows you to commit the compiled files into source control, and deploy as normal.</source>
          <target state="translated">本地编译允许你将编译后的文件提交到源码控制中,并像正常的部署一样。</target>
        </trans-unit>
        <trans-unit id="f55dab02536ee16f582d5325dacc099456f85791" translate="yes" xml:space="preserve">
          <source>Locales.</source>
          <target state="translated">Locales.</target>
        </trans-unit>
        <trans-unit id="90074f8117f03461acc7b696a5b8d3dccb4b250b" translate="yes" xml:space="preserve">
          <source>Localization can also be based purely on the translation of the attribute-name (if you are using &lt;a href=&quot;../../activerecord&quot;&gt;ActiveRecord&lt;/a&gt;):</source>
          <target state="translated">本地化也可以纯粹基于属性名称的转换（如果使用&lt;a href=&quot;../../activerecord&quot;&gt;ActiveRecord&lt;/a&gt;）：</target>
        </trans-unit>
        <trans-unit id="a3a34118a7f1edcd0e1c47f55d3079c60385b677" translate="yes" xml:space="preserve">
          <source>Localized Views</source>
          <target state="translated">本地化观点</target>
        </trans-unit>
        <trans-unit id="4c03678b420b8bf20d3d6c624f864ad7ee683883" translate="yes" xml:space="preserve">
          <source>Locate a specific time zone object. If the argument is a string, it is interpreted to mean the name of the timezone to locate. If it is a numeric value it is either the hour offset, or the second offset, of the timezone to find. (The first one with that offset will be returned.) Returns &lt;code&gt;nil&lt;/code&gt; if no such time zone is known to the system.</source>
          <target state="translated">找到一个特定的时区对象。如果参数是字符串，则将其解释为要定位的时区的名称。如果是数字值，则为要查找的时区的小时偏移量或第二个偏移量。（将返回具有该偏移量的第一个。）如果系统不知道这样的时区，则返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="eb05c96a9e2a4707170d9c3b8a23447c38f4cffd" translate="yes" xml:space="preserve">
          <source>Locations for Initialization Code</source>
          <target state="translated">初始化代码的位置</target>
        </trans-unit>
        <trans-unit id="710ae4ff639eebf3d4df032ac4c7f3a3743c7b07" translate="yes" xml:space="preserve">
          <source>LockWaitTimeout</source>
          <target state="translated">LockWaitTimeout</target>
        </trans-unit>
        <trans-unit id="70835a0129c110391e7f829d841581f090cc206d" translate="yes" xml:space="preserve">
          <source>Locking Records for Update</source>
          <target state="translated">锁定记录以便更新</target>
        </trans-unit>
        <trans-unit id="df60e973a265b7d703153225e3ca5b47b7d40460" translate="yes" xml:space="preserve">
          <source>Locking is helpful for preventing race conditions when updating records in the database and ensuring atomic updates.</source>
          <target state="translated">锁定有助于防止数据库中更新记录时出现竞赛条件,保证原子更新。</target>
        </trans-unit>
        <trans-unit id="8f4169d04da897048c43e4c9684fc2f239bde026" translate="yes" xml:space="preserve">
          <source>Locking::Optimistic</source>
          <target state="translated">Locking::Optimistic</target>
        </trans-unit>
        <trans-unit id="2f864ade87e4b991694ad9e9afa97f92ae24daed" translate="yes" xml:space="preserve">
          <source>Locking::Optimistic::ClassMethods</source>
          <target state="translated">Locking::Optimistic::ClassMethods</target>
        </trans-unit>
        <trans-unit id="efc6084f6c49058a0f0ef20343618f9318154bab" translate="yes" xml:space="preserve">
          <source>Locking::Optimistic::ClassMethods#locking_column</source>
          <target state="translated">Locking::Optimistic::ClassMethods#locking_column</target>
        </trans-unit>
        <trans-unit id="08b053fe703a6fda9c517d44062753cd85d1e48b" translate="yes" xml:space="preserve">
          <source>Locking::Optimistic::ClassMethods#locking_column=</source>
          <target state="translated">Locking::Optimistic::ClassMethods#locking_column=</target>
        </trans-unit>
        <trans-unit id="8b926b531b9aed70e598004702c9afc9ff288d3b" translate="yes" xml:space="preserve">
          <source>Locking::Optimistic::ClassMethods#locking_enabled?</source>
          <target state="translated">Locking::Optimistic::ClassMethods#locking_enabled?</target>
        </trans-unit>
        <trans-unit id="a93398134569361708a52f98f356d046e6d55882" translate="yes" xml:space="preserve">
          <source>Locking::Optimistic::ClassMethods#reset_locking_column</source>
          <target state="translated">Locking::Optimistic::ClassMethods#reset_locking_column</target>
        </trans-unit>
        <trans-unit id="c589b468cf024c9825b7795a069b9d21a6f97377" translate="yes" xml:space="preserve">
          <source>Locking::Optimistic::ClassMethods#update_counters</source>
          <target state="translated">Locking::Optimistic::ClassMethods#update_counters</target>
        </trans-unit>
        <trans-unit id="be460ffa012cbe0430d2f9788757f594528a1561" translate="yes" xml:space="preserve">
          <source>Locking::Pessimistic</source>
          <target state="translated">Locking::Pessimistic</target>
        </trans-unit>
        <trans-unit id="d06e7be0414bb22dece5eb8c8424c6ced1994179" translate="yes" xml:space="preserve">
          <source>Locking::Pessimistic#lock!</source>
          <target state="translated">Locking::Pessimistic#lock!</target>
        </trans-unit>
        <trans-unit id="0feea6ff63eb300cd3671f76b7c22268524140de" translate="yes" xml:space="preserve">
          <source>Locking::Pessimistic#with_lock</source>
          <target state="translated">Locking::Pessimistic#with_lock</target>
        </trans-unit>
        <trans-unit id="1666df53d33ece6d245d229a5b15f3cd95f66b69" translate="yes" xml:space="preserve">
          <source>Log Filtering</source>
          <target state="translated">日志过滤</target>
        </trans-unit>
        <trans-unit id="0797e5297ca5c23288b5154f0d790da08cf46509" translate="yes" xml:space="preserve">
          <source>Log Levels</source>
          <target state="translated">对数水平</target>
        </trans-unit>
        <trans-unit id="7f1c49dd337173f24af84a17222b9b4d40ebbf67" translate="yes" xml:space="preserve">
          <source>Log all deprecation warnings to +$stderr+.</source>
          <target state="translated">将所有的弃用警告记录到+$stderr+。</target>
        </trans-unit>
        <trans-unit id="8341546ec1ee881b75ca43bb8090792a0d48ce20" translate="yes" xml:space="preserve">
          <source>Log all deprecation warnings to &lt;code&gt;Rails.logger&lt;/code&gt;.</source>
          <target state="translated">将所有弃用警告记录到 &lt;code&gt;Rails.logger&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="c2d2e22437d49b9714bdc19ff30351f11a7a7a74" translate="yes" xml:space="preserve">
          <source>Log subscriber also has some helpers to deal with logging and automatically flushes all logs when the request finishes (via &lt;code&gt;action_dispatch.callback&lt;/code&gt; notification) in a Rails environment.</source>
          <target state="translated">日志订阅服务器还具有一些帮助处理日志的助手，并在Rails环境中（通过 &lt;code&gt;action_dispatch.callback&lt;/code&gt; 通知）完成请求后自动刷新所有日志。</target>
        </trans-unit>
        <trans-unit id="c5250cfa995360aa285147b0f1c57abc6ca7f730" translate="yes" xml:space="preserve">
          <source>Log tags (&lt;code&gt;taggers&lt;/code&gt;) can be an &lt;a href=&quot;../../array&quot;&gt;Array&lt;/a&gt; containing: methods that the &lt;code&gt;request&lt;/code&gt; object responds to, objects that respond to &lt;code&gt;to_s&lt;/code&gt; or Proc objects that accept an instance of the &lt;code&gt;request&lt;/code&gt; object.</source>
          <target state="translated">日志标记（ &lt;code&gt;taggers&lt;/code&gt; ）可以是一个&lt;a href=&quot;../../array&quot;&gt;Array，&lt;/a&gt;包含以下内容： &lt;code&gt;request&lt;/code&gt; 对象响应的方法，响应 &lt;code&gt;to_s&lt;/code&gt; 的对象或接受 &lt;code&gt;request&lt;/code&gt; 对象实例的Proc 对象。</target>
        </trans-unit>
        <trans-unit id="5a90aa65e0a6658543600ca7e1e91262921df2de" translate="yes" xml:space="preserve">
          <source>LogSubscriber</source>
          <target state="translated">LogSubscriber</target>
        </trans-unit>
        <trans-unit id="218d5e774207d1d66e3f9b66f20bd4af3471f172" translate="yes" xml:space="preserve">
          <source>LogSubscriber#deliver</source>
          <target state="translated">LogSubscriber#deliver</target>
        </trans-unit>
        <trans-unit id="55af923ea33dff98ca7c168da85d23e80fa5317c" translate="yes" xml:space="preserve">
          <source>LogSubscriber#logger</source>
          <target state="translated">LogSubscriber#logger</target>
        </trans-unit>
        <trans-unit id="7a2411179d17d59f93aad508af303050b741fa32" translate="yes" xml:space="preserve">
          <source>LogSubscriber#process</source>
          <target state="translated">LogSubscriber#process</target>
        </trans-unit>
        <trans-unit id="6bf53002539406558cd714c6ef5bf62042b5b8a6" translate="yes" xml:space="preserve">
          <source>LogSubscriber#receive</source>
          <target state="translated">LogSubscriber#receive</target>
        </trans-unit>
        <trans-unit id="8432c24573f3f89fad60802fe8eddf1da6315768" translate="yes" xml:space="preserve">
          <source>Logger</source>
          <target state="translated">Logger</target>
        </trans-unit>
        <trans-unit id="676b4fcb697f154bd5a7bc122e393a6385de5014" translate="yes" xml:space="preserve">
          <source>Logger::Formatter</source>
          <target state="translated">Logger::Formatter</target>
        </trans-unit>
        <trans-unit id="3d9e60c602c970a2f5c3509958b4089cbf8c68d1" translate="yes" xml:space="preserve">
          <source>Logger::SimpleFormatter</source>
          <target state="translated">Logger::SimpleFormatter</target>
        </trans-unit>
        <trans-unit id="4d7ad5706deb8532d7eec04b8aa18ef1f42c1a43" translate="yes" xml:space="preserve">
          <source>Logger::SimpleFormatter#call</source>
          <target state="translated">Logger::SimpleFormatter#call</target>
        </trans-unit>
        <trans-unit id="a9707eb17132476d73754f320250ed9502fdf44d" translate="yes" xml:space="preserve">
          <source>Logger::logger_outputs_to?</source>
          <target state="translated">Logger::logger_outputs_to?</target>
        </trans-unit>
        <trans-unit id="d0005f516a11a16bb48bbeb76e0cb73c796b70a7" translate="yes" xml:space="preserve">
          <source>Logger::new</source>
          <target state="translated">Logger::new</target>
        </trans-unit>
        <trans-unit id="f18d79bc26224d883a29b68180c11a40752a2aac" translate="yes" xml:space="preserve">
          <source>LoggerSilence</source>
          <target state="translated">LoggerSilence</target>
        </trans-unit>
        <trans-unit id="8b290acfc10cb27d57e006dd5e54594619754a64" translate="yes" xml:space="preserve">
          <source>LoggerSilence#silence</source>
          <target state="translated">LoggerSilence#silence</target>
        </trans-unit>
        <trans-unit id="57003616863fe634c645e342ee9080681e419c5f" translate="yes" xml:space="preserve">
          <source>Logging</source>
          <target state="translated">Logging</target>
        </trans-unit>
        <trans-unit id="da23089c20adecce3364e2fd63f0e5cb8ece4167" translate="yes" xml:space="preserve">
          <source>Logging will always have a small impact on the performance of your Rails app, particularly when logging to disk. Additionally, there are a few subtleties:</source>
          <target state="translated">日志总是会对Rails应用的性能产生一点影响,尤其是在将日志记录到磁盘时。此外,还有一些微妙的地方。</target>
        </trans-unit>
        <trans-unit id="6d8dba556a702c4b2b02fff1697dced0aa887dad" translate="yes" xml:space="preserve">
          <source>Logging: Rails applications log every request, with a level of verbosity appropriate for the current mode. Rails logs in development include information about the request environment, database queries, and basic performance information.</source>
          <target state="translated">日志记录。Rails应用会记录每一个请求,并以适合当前模式的简洁程度进行记录。开发中的Rails日志包括有关请求环境、数据库查询和基本性能信息。</target>
        </trans-unit>
        <trans-unit id="f431dc40465ac4a9323987ccc7c60a2626bcb38a" translate="yes" xml:space="preserve">
          <source>Long-lived channels (and connections) also mean you're responsible for ensuring that the data is fresh. If you hold a reference to a user record, but the name is changed while that reference is held, you may be sending stale data if you don't take precautions to avoid it.</source>
          <target state="translated">长时间的通道(和连接)也意味着你有责任确保数据是新鲜的。如果你持有一个用户记录的引用,但在持有该引用的同时,名称也发生了变化,如果你不采取预防措施来避免,你可能会发送陈旧的数据。</target>
        </trans-unit>
        <trans-unit id="3fa5015243d6b37528285498fd3134e805a65d33" translate="yes" xml:space="preserve">
          <source>Looking at this output, it's easy to understand how generators work in Rails 3.0 and above. The scaffold generator doesn't actually generate anything, it just invokes others to do the work. This allows us to add/replace/remove any of those invocations. For instance, the scaffold generator invokes the scaffold_controller generator, which invokes erb, test_unit and helper generators. Since each generator has a single responsibility, they are easy to reuse, avoiding code duplication.</source>
          <target state="translated">看了这个输出,很容易理解Rails 3.0及以上版本的生成器是如何工作的。脚手架生成器实际上并不生成任何东西,它只是调用他人来完成工作。这允许我们添加/替换/删除任何这些调用。例如,脚手架生成器会调用scaffold_controller生成器,而scaffold_controller会调用erb、test_unit和helper生成器。由于每个生成器只有一个责任,所以它们很容易重用,避免代码重复。</target>
        </trans-unit>
        <trans-unit id="b887769549ff1debdc02faa3b40f3f606879358e" translate="yes" xml:space="preserve">
          <source>Looking up Translations</source>
          <target state="translated">查找翻译</target>
        </trans-unit>
        <trans-unit id="d34434162cf0ffe0f5e7c53841247432498ca42c" translate="yes" xml:space="preserve">
          <source>Looping through a collection of records from the database (using the &lt;a href=&quot;scoping/named/classmethods#method-i-all&quot;&gt;ActiveRecord::Scoping::Named::ClassMethods#all&lt;/a&gt; method, for example) is very inefficient since it will try to instantiate all the objects at once.</source>
          <target state="translated">循环遍历数据库中的记录集合（例如，使用&lt;a href=&quot;scoping/named/classmethods#method-i-all&quot;&gt;ActiveRecord :: Scoping :: Named :: ClassMethods＃all&lt;/a&gt;方法）效率很低，因为它将尝试立即实例化所有对象。</target>
        </trans-unit>
        <trans-unit id="89de374ab7a4be82c038987469668c6f701d3cc7" translate="yes" xml:space="preserve">
          <source>Looping through a collection of records from the database (using the &lt;code&gt;all&lt;/code&gt; method, for example) is very inefficient since it will try to instantiate all the objects at once.</source>
          <target state="translated">循环遍历数据库中的记录集合（例如，使用 &lt;code&gt;all&lt;/code&gt; 方法）效率很低，因为它将尝试立即实例化所有对象。</target>
        </trans-unit>
        <trans-unit id="d216bdf358444e1a0d5e9711e1c686d79571b539" translate="yes" xml:space="preserve">
          <source>Low-Level Caching</source>
          <target state="translated">低级缓存</target>
        </trans-unit>
        <trans-unit id="81eda5632cd54c811f36d9ec9e372ab5faaf038f" translate="yes" xml:space="preserve">
          <source>MAGENTA</source>
          <target state="translated">MAGENTA</target>
        </trans-unit>
        <trans-unit id="b315cd523ae2ef826dbad53529ba6c9c2ad21ff1" translate="yes" xml:space="preserve">
          <source>MAPPING</source>
          <target state="translated">MAPPING</target>
        </trans-unit>
        <trans-unit id="65124a8cda19a4bdcf3161683856e5c9f03eeb50" translate="yes" xml:space="preserve">
          <source>MAX_COOKIE_SIZE</source>
          <target state="translated">MAX_COOKIE_SIZE</target>
        </trans-unit>
        <trans-unit id="9df6c8ec33fd4d7a7eea5fc38ce44524546bce63" translate="yes" xml:space="preserve">
          <source>MAX_ID</source>
          <target state="translated">MAX_ID</target>
        </trans-unit>
        <trans-unit id="ba4091290416138086fb56a894f148cffa494206" translate="yes" xml:space="preserve">
          <source>MAX_KEY_BYTESIZE</source>
          <target state="translated">MAX_KEY_BYTESIZE</target>
        </trans-unit>
        <trans-unit id="284fa63eb59eba7c9e2cd98118f61b0726b934ae" translate="yes" xml:space="preserve">
          <source>MAX_PASSWORD_LENGTH_ALLOWED</source>
          <target state="translated">MAX_PASSWORD_LENGTH_ALLOWED</target>
        </trans-unit>
        <trans-unit id="a98cf28ee66a521605286ef7bf41c421cac7c060" translate="yes" xml:space="preserve">
          <source>MEGABYTE</source>
          <target state="translated">MEGABYTE</target>
        </trans-unit>
        <trans-unit id="8d4dcd2d8fbee8ff07ff7bc53114f0c434eeec56" translate="yes" xml:space="preserve">
          <source>MESSAGE_OPTIONS</source>
          <target state="translated">MESSAGE_OPTIONS</target>
        </trans-unit>
        <trans-unit id="495e45b5da0f07a933bcae72c50ae91eeb20d3f5" translate="yes" xml:space="preserve">
          <source>MIME_NAME</source>
          <target state="translated">MIME_NAME</target>
        </trans-unit>
        <trans-unit id="4a5aa456e74d55cddbb3f26a2e5b910c10b728c1" translate="yes" xml:space="preserve">
          <source>MIME_PARAMETER</source>
          <target state="translated">MIME_PARAMETER</target>
        </trans-unit>
        <trans-unit id="aa9e2c39cad2ac07dfa73810c9f0172f4c586568" translate="yes" xml:space="preserve">
          <source>MIME_PARAMETER_KEY</source>
          <target state="translated">MIME_PARAMETER_KEY</target>
        </trans-unit>
        <trans-unit id="dcefa2aeec7b7e6e08532fde0a1d873266cb4c02" translate="yes" xml:space="preserve">
          <source>MIME_PARAMETER_VALUE</source>
          <target state="translated">MIME_PARAMETER_VALUE</target>
        </trans-unit>
        <trans-unit id="0c7239873afa3db6794c6cf12a208d9718befee7" translate="yes" xml:space="preserve">
          <source>MIME_REGEXP</source>
          <target state="translated">MIME_REGEXP</target>
        </trans-unit>
        <trans-unit id="468bfc8881876f60b1992fde5e9b6af946206e43" translate="yes" xml:space="preserve">
          <source>MINUTES_IN_QUARTER_YEAR</source>
          <target state="translated">MINUTES_IN_QUARTER_YEAR</target>
        </trans-unit>
        <trans-unit id="1a14e5831f85aa97e54c26370015ca312d486468" translate="yes" xml:space="preserve">
          <source>MINUTES_IN_THREE_QUARTERS_YEAR</source>
          <target state="translated">MINUTES_IN_THREE_QUARTERS_YEAR</target>
        </trans-unit>
        <trans-unit id="ac3a71bb010a31611bf5406bed00ef6e011aa34b" translate="yes" xml:space="preserve">
          <source>MINUTES_IN_YEAR</source>
          <target state="translated">MINUTES_IN_YEAR</target>
        </trans-unit>
        <trans-unit id="479396de59be987e42108d35e44f4b59dc1b4a9e" translate="yes" xml:space="preserve">
          <source>MODULES</source>
          <target state="translated">MODULES</target>
        </trans-unit>
        <trans-unit id="3bc34b9230133df1f9971deec3f33546dc36b624" translate="yes" xml:space="preserve">
          <source>MULTI_VALUE_METHODS</source>
          <target state="translated">MULTI_VALUE_METHODS</target>
        </trans-unit>
        <trans-unit id="d82bb796085b36f19aa29833ac03dc6a50644efe" translate="yes" xml:space="preserve">
          <source>MUST_REVALIDATE</source>
          <target state="translated">MUST_REVALIDATE</target>
        </trans-unit>
        <trans-unit id="a8c694c348d74ec772f1e8f64d687c8999e1e811" translate="yes" xml:space="preserve">
          <source>Mail will automatically Base64 encode an attachment. If you want something different, encode your content and pass in the encoded content and encoding in a &lt;code&gt;Hash&lt;/code&gt; to the &lt;code&gt;attachments&lt;/code&gt; method.</source>
          <target state="translated">邮件将自动对Base64编码的附件。如果您需要其他内容，请对内容进行编码，然后将编码后的内容和 &lt;code&gt;Hash&lt;/code&gt; 中的编码传递给 &lt;code&gt;attachments&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="c55ad5c93794819374aa38d68902e3c966dcc117" translate="yes" xml:space="preserve">
          <source>MailHelper</source>
          <target state="translated">MailHelper</target>
        </trans-unit>
        <trans-unit id="3d95a627cdb107ff69b030371d1e7e8b4c10935f" translate="yes" xml:space="preserve">
          <source>MailHelper#attachments</source>
          <target state="translated">MailHelper#attachments</target>
        </trans-unit>
        <trans-unit id="b2f5e480ba0bee4286f1cc3a4ca5a963f43cfe63" translate="yes" xml:space="preserve">
          <source>MailHelper#block_format</source>
          <target state="translated">MailHelper#block_format</target>
        </trans-unit>
        <trans-unit id="7ae23fe551aca162ae1c5589d602a1df8e671748" translate="yes" xml:space="preserve">
          <source>MailHelper#format_paragraph</source>
          <target state="translated">MailHelper#format_paragraph</target>
        </trans-unit>
        <trans-unit id="fb236b1746e1802c3a0b73e9683c6ab41ac24d0b" translate="yes" xml:space="preserve">
          <source>MailHelper#mailer</source>
          <target state="translated">MailHelper#mailer</target>
        </trans-unit>
        <trans-unit id="3e8ee2a92d3b7f52814ab5089a1ff9eee1297fd1" translate="yes" xml:space="preserve">
          <source>MailHelper#message</source>
          <target state="translated">MailHelper#message</target>
        </trans-unit>
        <trans-unit id="f70ea59698ce3b86d3b1359815b6b8b662a4785d" translate="yes" xml:space="preserve">
          <source>Mailer Filters abort further processing if body is set to a non-nil value.</source>
          <target state="translated">如果body被设置为非零值,则邮件过滤器中止进一步处理。</target>
        </trans-unit>
        <trans-unit id="13980201fa07cfc07994ed387ca6379609fdff0c" translate="yes" xml:space="preserve">
          <source>Mailer Models</source>
          <target state="translated">邮递员型号</target>
        </trans-unit>
        <trans-unit id="680a61c5f502dd97082db34df71463ef11e26d1f" translate="yes" xml:space="preserve">
          <source>Mailer Testing</source>
          <target state="translated">邮件测试</target>
        </trans-unit>
        <trans-unit id="a21c64ba416f2ab2281167ae92a45b9bf82d97e2" translate="yes" xml:space="preserve">
          <source>Mailer Views</source>
          <target state="translated">邮件浏览量</target>
        </trans-unit>
        <trans-unit id="68e337f3658a60fb99f830ff9b6e79e91a43f276" translate="yes" xml:space="preserve">
          <source>Mailer test cases obtain the mailer being tested from the name of the test class using &lt;code&gt;constantize&lt;/code&gt;:</source>
          <target state="translated">邮件程序测试用例使用 &lt;code&gt;constantize&lt;/code&gt; 从测试类的名称中获取要测试的邮件程序：</target>
        </trans-unit>
        <trans-unit id="44df4fb76daaa7b1a6be96a25c78d05f88becb98" translate="yes" xml:space="preserve">
          <source>Mailer views</source>
          <target state="translated">邮递员意见</target>
        </trans-unit>
        <trans-unit id="587b49cee9e902b2a9c917c758289cbced65c031" translate="yes" xml:space="preserve">
          <source>Mailer views are located in the &lt;code&gt;app/views/name_of_mailer_class&lt;/code&gt; directory. The specific mailer view is known to the class because its name is the same as the mailer method. In our example from above, our mailer view for the &lt;code&gt;welcome_email&lt;/code&gt; method will be in &lt;code&gt;app/views/user_mailer/welcome_email.html.erb&lt;/code&gt; for the HTML version and &lt;code&gt;welcome_email.text.erb&lt;/code&gt; for the plain text version.</source>
          <target state="translated">邮件程序视图位于 &lt;code&gt;app/views/name_of_mailer_class&lt;/code&gt; 目录中。该类知道特定的邮件视图，因为它的名称与邮件方法相同。在上面的示例中，用于 &lt;code&gt;welcome_email&lt;/code&gt; 方法的邮件视图在HTML版本的 &lt;code&gt;app/views/user_mailer/welcome_email.html.erb&lt;/code&gt; 中，在纯文本版本的 &lt;code&gt;welcome_email.text.erb&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="36be81ab1542c937801f33caaded349a9bc4127c" translate="yes" xml:space="preserve">
          <source>Mailers are really just another way to render a view. Instead of rendering a view and sending it over the HTTP protocol, they are just sending it out through the email protocols instead. Due to this, it makes sense to just have your controller tell the Mailer to send an email when a user is successfully created.</source>
          <target state="translated">邮件发送器其实只是渲染视图的另一种方式。它们不是渲染一个视图并通过HTTP协议发送,而是通过电子邮件协议发送。由于这一点,当用户成功创建时,让你的控制器告诉Mailer发送电子邮件是有意义的。</target>
        </trans-unit>
        <trans-unit id="64de1eb796e4922fd13819de6eaab4dcdb1d7c9b" translate="yes" xml:space="preserve">
          <source>Mailers have methods called &quot;actions&quot; and they use views to structure their content. Where a controller generates content like HTML to send back to the client, a Mailer creates a message to be delivered via email.</source>
          <target state="translated">Mailer有被称为 &quot;动作 &quot;的方法,它们使用视图来结构它们的内容。控制器会生成像HTML这样的内容来回传给客户端,而Mailer则会创建一个消息来通过电子邮件发送。</target>
        </trans-unit>
        <trans-unit id="16066075c5a83dca0ba2cea04fba9274abb07b0e" translate="yes" xml:space="preserve">
          <source>Mailgun</source>
          <target state="translated">Mailgun</target>
        </trans-unit>
        <trans-unit id="8b66a1c9fbdcaa52fb90bc5d0058e4dd90be7b68" translate="yes" xml:space="preserve">
          <source>Main Features</source>
          <target state="translated">主要特点</target>
        </trans-unit>
        <trans-unit id="ae266dfc442b5ec385b4338560900eb345c499d9" translate="yes" xml:space="preserve">
          <source>Main render entry point shared by Action View and Action Controller.</source>
          <target state="translated">由动作视图和动作控制器共享的主要渲染入口点。</target>
        </trans-unit>
        <trans-unit id="089471884fb865229f0f9111a9377f8fb353d285" translate="yes" xml:space="preserve">
          <source>Maintaining the test database schema</source>
          <target state="translated">维护测试数据库模式</target>
        </trans-unit>
        <trans-unit id="f8fa33a721957f371e84c8dd9e6fb8b01c0321b1" translate="yes" xml:space="preserve">
          <source>Maintenance Policy</source>
          <target state="translated">维护政策</target>
        </trans-unit>
        <trans-unit id="58d6b980b33f53ac06a743ee46e99cae645364df" translate="yes" xml:space="preserve">
          <source>Maintenance Policy for Ruby on Rails</source>
          <target state="translated">Ruby on Rails的维护政策</target>
        </trans-unit>
        <trans-unit id="252157b41e8c33085114f9d5bae78ff87bf6ade9" translate="yes" xml:space="preserve">
          <source>Make &lt;code&gt;ApplicationController&lt;/code&gt; inherit from &lt;code&gt;ActionController::API&lt;/code&gt; instead of &lt;code&gt;ActionController::Base&lt;/code&gt;. As with middleware, this will leave out any Action Controller modules that provide functionalities primarily used by browser applications.</source>
          <target state="translated">使 &lt;code&gt;ApplicationController&lt;/code&gt; 继承自 &lt;code&gt;ActionController::API&lt;/code&gt; 而不是 &lt;code&gt;ActionController::Base&lt;/code&gt; 。与中间件一样，这将省略所有提供主要由浏览器应用程序使用的功能的Action Controller模块。</target>
        </trans-unit>
        <trans-unit id="3ad5d449d0548ace3647803d555c0dbbae48a281" translate="yes" xml:space="preserve">
          <source>Make a temporary table.</source>
          <target state="translated">做一张临时桌子。</target>
        </trans-unit>
        <trans-unit id="306b5c693bdfd1595e76e9e9d059f004a98367a8" translate="yes" xml:space="preserve">
          <source>Make an entry in Rails routing file &lt;code&gt;config/routes.rb&lt;/code&gt;</source>
          <target state="translated">在Rails路由文件 &lt;code&gt;config/routes.rb&lt;/code&gt; 中输入一个条目</target>
        </trans-unit>
        <trans-unit id="8b69db2b39800a827d6f6168d3c1a20938083839" translate="yes" xml:space="preserve">
          <source>Make periodic timers no-op</source>
          <target state="translated">使周期性定时器成为无操作的</target>
        </trans-unit>
        <trans-unit id="8399eb539601add9de2d3f82842b56234c0d1f9c" translate="yes" xml:space="preserve">
          <source>Make sure that you declare the database column used for the serialized store as a text, so there's plenty of room.</source>
          <target state="translated">确保将用于序列化存储的数据库列声明为文本,所以有足够的空间。</target>
        </trans-unit>
        <trans-unit id="c4ac7a454c98bda90c921a3bff6938498dfb3fc2" translate="yes" xml:space="preserve">
          <source>Make sure the lock version column gets updated when counters are updated.</source>
          <target state="translated">确保当计数器更新时,锁定版本列得到更新。</target>
        </trans-unit>
        <trans-unit id="57fdc5e6a8181b505e4377c235dcdba10ccefd2b" translate="yes" xml:space="preserve">
          <source>Make sure to check the modules included in &lt;code&gt;ActionController::Base&lt;/code&gt; if you want to use any other functionality that is not provided by &lt;code&gt;ActionController::API&lt;/code&gt; out of the box.</source>
          <target state="translated">如果要立即使用 &lt;code&gt;ActionController::API&lt;/code&gt; 不提供的任何其他功能，请确保检查 &lt;code&gt;ActionController::Base&lt;/code&gt; 包含的模块。</target>
        </trans-unit>
        <trans-unit id="1b94a75acb3e2883ef72226f00cf1c8e7c27ad3d" translate="yes" xml:space="preserve">
          <source>Make sure to configure your server to support these options following the instructions in the &lt;code&gt;Rack::Sendfile&lt;/code&gt; documentation.</source>
          <target state="translated">确保按照 &lt;code&gt;Rack::Sendfile&lt;/code&gt; 文档中的说明将服务器配置为支持这些选项。</target>
        </trans-unit>
        <trans-unit id="5efdeaf7a8b12f96eb5dc7d68b2ffffb447d6f56" translate="yes" xml:space="preserve">
          <source>Make sure to specify the correct server location in each of your environment config files:</source>
          <target state="translated">确保在每个环境配置文件中指定正确的服务器位置。</target>
        </trans-unit>
        <trans-unit id="8899c331bcf7e348bccc244aac252dc6bbce4cdd" translate="yes" xml:space="preserve">
          <source>Make sure to use &lt;code&gt;and return&lt;/code&gt; instead of &lt;code&gt;&amp;amp;&amp;amp; return&lt;/code&gt; because &lt;code&gt;&amp;amp;&amp;amp; return&lt;/code&gt; will not work due to the operator precedence in the Ruby Language.</source>
          <target state="translated">确保使用 &lt;code&gt;and return&lt;/code&gt; 而不是 &lt;code&gt;&amp;amp;&amp;amp; return&lt;/code&gt; ,因为 &lt;code&gt;&amp;amp;&amp;amp; return&lt;/code&gt; 由于Ruby语言中的运算符优先级而无法使用。</target>
        </trans-unit>
        <trans-unit id="fc7e11f912ac4bdebcc08be41ef772e521bd6ac6" translate="yes" xml:space="preserve">
          <source>Make sure you are comparing Flash message keys against strings.</source>
          <target state="translated">确保你正在将Flash信息键与字符串进行比较。</target>
        </trans-unit>
        <trans-unit id="16e768995acffc826fe3508921661c1719fc07d8" translate="yes" xml:space="preserve">
          <source>Make sure your queuing backend &quot;listens&quot; on your queue name. For some backends you need to specify the queues to listen to.</source>
          <target state="translated">确保你的队列后端 &quot;监听 &quot;你的队列名。对于一些后端,你需要指定要监听的队列。</target>
        </trans-unit>
        <trans-unit id="5682e0cf408b02c5d4877c6049064b81b83869ac" translate="yes" xml:space="preserve">
          <source>Make the following changes to your &lt;code&gt;Gemfile&lt;/code&gt;.</source>
          <target state="translated">对您的 &lt;code&gt;Gemfile&lt;/code&gt; 进行以下更改。</target>
        </trans-unit>
        <trans-unit id="f964d093f2f5ad4e04fb5d1cac5dfe5b45964069" translate="yes" xml:space="preserve">
          <source>Makes a unique &lt;code&gt;X-Request-Id&lt;/code&gt; header available to the response and enables the &lt;code&gt;ActionDispatch::Request#request_id&lt;/code&gt; method.</source>
          <target state="translated">使唯一的 &lt;code&gt;X-Request-Id&lt;/code&gt; 标头可用于响应，并启用 &lt;code&gt;ActionDispatch::Request#request_id&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="5036c3834983c0c5d0a51b922a33316cf1efabc5" translate="yes" xml:space="preserve">
          <source>Makes a unique request id available to the &lt;code&gt;action_dispatch.request_id&lt;/code&gt; env variable (which is then accessible through &lt;code&gt;ActionDispatch::Request#request_id&lt;/code&gt; or the alias &lt;code&gt;ActionDispatch::Request#uuid&lt;/code&gt;) and sends the same id to the client via the X-Request-Id header.</source>
          <target state="translated">使对 &lt;code&gt;action_dispatch.request_id&lt;/code&gt; env变量可用的唯一请求ID （然后可通过 &lt;code&gt;ActionDispatch::Request#request_id&lt;/code&gt; 或别名 &lt;code&gt;ActionDispatch::Request#uuid&lt;/code&gt; ），并通过X-Request-Id将相同的ID发送给客户端标头。</target>
        </trans-unit>
        <trans-unit id="77c87d6f8d7b1bbc1e4b64d6ed3fcf1eeab45281" translate="yes" xml:space="preserve">
          <source>Makes an underscored, lowercase form from the expression in the string.</source>
          <target state="translated">从字符串中的表达式中生成一个下划线的小写形式。</target>
        </trans-unit>
        <trans-unit id="3cd3cc6959800f15a2205416f9bd7058de795420" translate="yes" xml:space="preserve">
          <source>Makes it dead easy to do HTTP &lt;a href=&quot;httpauthentication/basic&quot;&gt;Basic&lt;/a&gt;, &lt;a href=&quot;httpauthentication/digest&quot;&gt;Digest&lt;/a&gt; and &lt;a href=&quot;httpauthentication/token&quot;&gt;Token&lt;/a&gt; authentication.</source>
          <target state="translated">使HTTP &lt;a href=&quot;httpauthentication/basic&quot;&gt;Basic&lt;/a&gt;，&lt;a href=&quot;httpauthentication/digest&quot;&gt;Digest&lt;/a&gt;和&lt;a href=&quot;httpauthentication/token&quot;&gt;Token&lt;/a&gt;身份验证变得非常简单。</target>
        </trans-unit>
        <trans-unit id="bab5116953faf0be205b9fc2c28dd2778e91ac89" translate="yes" xml:space="preserve">
          <source>Makes it dead easy to do HTTP &lt;a href=&quot;token&quot;&gt;Token&lt;/a&gt; authentication.</source>
          <target state="translated">使HTTP &lt;a href=&quot;token&quot;&gt;令牌&lt;/a&gt;认证变得非常简单。</target>
        </trans-unit>
        <trans-unit id="82d90853a9285a97be64f6ddfab56da7048dd4ea" translate="yes" xml:space="preserve">
          <source>Makes it dead easy to do HTTP Basic authentication.</source>
          <target state="translated">使得HTTP Basic认证变得非常容易。</target>
        </trans-unit>
        <trans-unit id="248ffebb944238814419305b57452011f6e8a054" translate="yes" xml:space="preserve">
          <source>Makes it dead easy to do HTTP Digest authentication.</source>
          <target state="translated">使得它很容易进行HTTP Digest认证。</target>
        </trans-unit>
        <trans-unit id="9b65162648b93cf813417157560cc2b1670a2db9" translate="yes" xml:space="preserve">
          <source>Makes it possible for the RemoteConnection to disconnect a specific connection.</source>
          <target state="translated">使得 RemoteConnection 可以断开特定的连接。</target>
        </trans-unit>
        <trans-unit id="dba69823998a36ac20a883dc8e6f67040b179324" translate="yes" xml:space="preserve">
          <source>Making Select Boxes with Ease</source>
          <target state="translated">轻松制作选择框</target>
        </trans-unit>
        <trans-unit id="cb01187942b0742e6351609b7735a6adcf73fc33" translate="yes" xml:space="preserve">
          <source>Making Your Library or Gem a Pre-Processor</source>
          <target state="translated">让您的库或宝石成为一个预处理程序</target>
        </trans-unit>
        <trans-unit id="8205e9d586c3493e6f60cebf5165f64f9b3c019e" translate="yes" xml:space="preserve">
          <source>Making messages expire</source>
          <target state="translated">使信息过期</target>
        </trans-unit>
        <trans-unit id="a5ba6a079e12e18c361a6a47933e07e1a7228504" translate="yes" xml:space="preserve">
          <source>Manage &lt;code&gt;Gemfile&lt;/code&gt; indentation for a DSL action block</source>
          <target state="translated">管理DSL操作块的 &lt;code&gt;Gemfile&lt;/code&gt; 缩进</target>
        </trans-unit>
        <trans-unit id="b2aee73bd2e79677bed872d3980e254bec42f2c5" translate="yes" xml:space="preserve">
          <source>Managing dependencies</source>
          <target state="translated">管理依赖性</target>
        </trans-unit>
        <trans-unit id="4c4e0450a210ba7947ca44f072542be4cd2bbf6e" translate="yes" xml:space="preserve">
          <source>Managing the Locale across Requests</source>
          <target state="translated">跨请求管理地域</target>
        </trans-unit>
        <trans-unit id="5e0b984f07b1075591ab1d0a27cd0c92e4a47a76" translate="yes" xml:space="preserve">
          <source>Mandrill</source>
          <target state="translated">Mandrill</target>
        </trans-unit>
        <trans-unit id="2d88b61ea857089a4c533daa1a9cf98822177551" translate="yes" xml:space="preserve">
          <source>Manifest Files and Directives</source>
          <target state="translated">舱单文件和指令</target>
        </trans-unit>
        <trans-unit id="38d94fc9b2424981345aad47073ff6221d182b79" translate="yes" xml:space="preserve">
          <source>Manipulating session and cookie variables</source>
          <target state="translated">操作会话和cookie变量</target>
        </trans-unit>
        <trans-unit id="6f5bab837311ddf9a2bc63d03a1cd96d18a19ce8" translate="yes" xml:space="preserve">
          <source>Manual Unsubscription</source>
          <target state="translated">手动退订</target>
        </trans-unit>
        <trans-unit id="e7686ebdb95a27789f53732e864b2cf3e21d13ff" translate="yes" xml:space="preserve">
          <source>Manually check out a connection from the pool with &lt;a href=&quot;connectionpool#method-i-checkout&quot;&gt;ActiveRecord::Base.connection_pool.checkout&lt;/a&gt;. You are responsible for returning this connection to the pool when finished by calling &lt;a href=&quot;connectionpool#method-i-checkin&quot;&gt;ActiveRecord::Base.connection_pool.checkin(connection)&lt;/a&gt;.</source>
          <target state="translated">使用&lt;a href=&quot;connectionpool#method-i-checkout&quot;&gt;ActiveRecord :: Base.connection_pool.checkout&lt;/a&gt;从池中手动检出连接。您有责任通过调用&lt;a href=&quot;connectionpool#method-i-checkin&quot;&gt;ActiveRecord :: Base.connection_pool.checkin（connection）&lt;/a&gt;将此连接返回到池中。</target>
        </trans-unit>
        <trans-unit id="047b759d8afa6da4ea87a2a2059a77060daca4cd" translate="yes" xml:space="preserve">
          <source>Many apps grow beyond simple forms editing a single object. For example, when creating a &lt;code&gt;Person&lt;/code&gt; you might want to allow the user to (on the same form) create multiple address records (home, work, etc.). When later editing that person the user should be able to add, remove, or amend addresses as necessary.</source>
          <target state="translated">许多应用程序超越了简单的表单编辑单个对象的范围。例如，在创建 &lt;code&gt;Person&lt;/code&gt; 您可能希望允许用户（以相同的形式）创建多个地址记录（家庭，工作等）。以后编辑该人时，用户应该能够根据需要添加，删除或修改地址。</target>
        </trans-unit>
        <trans-unit id="c51aa84e06e0d4cb20eb010b07acb0a782ae7e1b" translate="yes" xml:space="preserve">
          <source>Many cross-site scripting (XSS) exploits aim at obtaining the user's cookie. You'll read &lt;a href=&quot;#cross-site-scripting-xss&quot;&gt;more about XSS&lt;/a&gt; later.</source>
          <target state="translated">许多跨站点脚本（XSS）攻击旨在获取用户的cookie。您稍后将阅读&lt;a href=&quot;#cross-site-scripting-xss&quot;&gt;有关XSS的更多信息&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="94760ac5345671c21adf55c326e4bc74930f068c" translate="yes" xml:space="preserve">
          <source>Many modern web servers can be used as a proxy server to balance third-party elements such as caching servers or application servers.</source>
          <target state="translated">许多现代Web服务器可以作为代理服务器来平衡第三方元素,如缓存服务器或应用服务器。</target>
        </trans-unit>
        <trans-unit id="68dea1c5c75caa39cba7ba14014f2517fbc6048c" translate="yes" xml:space="preserve">
          <source>Many of Action Dispatcher's internal components are implemented as Rack middlewares. &lt;code&gt;Rails::Application&lt;/code&gt; uses &lt;code&gt;ActionDispatch::MiddlewareStack&lt;/code&gt; to combine various internal and external middlewares to form a complete Rails Rack application.</source>
          <target state="translated">Action Dispatcher的许多内部组件都作为Rack中间件实现。 &lt;code&gt;Rails::Application&lt;/code&gt; 使用 &lt;code&gt;ActionDispatch::MiddlewareStack&lt;/code&gt; 来组合各种内部和外部中间件，以形成一个完整的Rails Rack应用程序。</target>
        </trans-unit>
        <trans-unit id="5023dcf79d2fffe404c655626656b9c927384425" translate="yes" xml:space="preserve">
          <source>Many web applications allow users to upload files. &lt;em&gt;File names, which the user may choose (partly), should always be filtered&lt;/em&gt; as an attacker could use a malicious file name to overwrite any file on the server. If you store file uploads at /var/www/uploads, and the user enters a file name like &quot;../../../etc/passwd&quot;, it may overwrite an important file. Of course, the Ruby interpreter would need the appropriate permissions to do so - one more reason to run web servers, database servers, and other programs as a less privileged Unix user.</source>
          <target state="translated">许多Web应用程序都允许用户上传文件。&lt;em&gt;用户可能会选择（部分）选择的文件名，&lt;/em&gt;因为攻击者可能会使用恶意文件名覆盖服务器上的任何文件。如果将文件上载存储在/ var / www / uploads，并且用户输入的文件名如&amp;ldquo; ../../../etc/passwd&amp;rdquo;，则可能会覆盖重要文件。当然，Ruby解释器将需要适当的权限才能这样做-还有一个理由以特权较低的Unix用户身份运行Web服务器，数据库服务器和其他程序。</target>
        </trans-unit>
        <trans-unit id="c23c36ee0702008b369b29fb802016cb8c1b8277" translate="yes" xml:space="preserve">
          <source>Many web applications have an authentication system: a user provides a user name and password, the web application checks them and stores the corresponding user id in the session hash. From now on, the session is valid. On every request the application will load the user, identified by the user id in the session, without the need for new authentication. The session ID in the cookie identifies the session.</source>
          <target state="translated">很多网络应用都有一个认证系统:用户提供用户名和密码,网络应用会对其进行检查,并将相应的用户id存储在session hash中。从现在开始,这个会话就是有效的。在每次请求时,应用程序将加载由会话中的用户id识别的用户,而无需进行新的认证。在cookie中的session ID识别会话。</target>
        </trans-unit>
        <trans-unit id="19390742e5806874fd7fb49160ecbeb01caa65a9" translate="yes" xml:space="preserve">
          <source>Many web applications make it easy to hijack user accounts. Why not be different and make it more difficult?.</source>
          <target state="translated">很多网络应用都能轻松劫持用户账号。为什么不与众不同,增加难度呢?</target>
        </trans-unit>
        <trans-unit id="24891e5f043d78206edf6518d0d3d35f7785b4f3" translate="yes" xml:space="preserve">
          <source>Many-to-many</source>
          <target state="translated">Many-to-many</target>
        </trans-unit>
        <trans-unit id="c9a42937cf22ca82b4cf9b49a17e155274e834d4" translate="yes" xml:space="preserve">
          <source>Maps asset types to public directory.</source>
          <target state="translated">将资产类型映射到公共目录。</target>
        </trans-unit>
        <trans-unit id="2186a94f3e5893663ec64cffa3a2c9ffa5b5e277" translate="yes" xml:space="preserve">
          <source>MariaDB: &lt;a href=&quot;https://mariadb.com/kb/en/mariadb/explain/&quot;&gt;EXPLAIN&lt;/a&gt;</source>
          <target state="translated">MariaDB的：&lt;a href=&quot;https://mariadb.com/kb/en/mariadb/explain/&quot;&gt;EXPLAIN&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ab2e377998906eb21e2af5cfe084f2169f9ad123" translate="yes" xml:space="preserve">
          <source>Mark a key as being a connection identifier index that can then be used to find the specific connection again later. Common identifiers are current_user and current_account, but could be anything, really.</source>
          <target state="translated">将一个键标记为连接标识符索引,然后可以用于以后再次查找特定的连接。常见的标识符是current_user和current_account,但也可以是任何东西,真的。</target>
        </trans-unit>
        <trans-unit id="77e548ab7cc8720a986d43ffb76f2e1373d171ea" translate="yes" xml:space="preserve">
          <source>Marks a string as trusted safe. It will be inserted into HTML with no additional escaping performed. It is your responsibility to ensure that the string contains no malicious content. This method is equivalent to the &lt;code&gt;raw&lt;/code&gt; helper in views. It is recommended that you use &lt;code&gt;sanitize&lt;/code&gt; instead of this method. It should never be called on user input.</source>
          <target state="translated">将字符串标记为受信任的安全。它将被插入到HTML中，而不会执行其他转义。您有责任确保字符串不包含恶意内容。此方法等效于视图中的 &lt;code&gt;raw&lt;/code&gt; 帮助器。建议您使用 &lt;code&gt;sanitize&lt;/code&gt; 代替此方法。永远不要在用户输入上调用它。</target>
        </trans-unit>
        <trans-unit id="4cf7916b5b85729b16a8ae8093bdc4715dd95f4d" translate="yes" xml:space="preserve">
          <source>Marks the entire flash or a single flash entry to be discarded by the end of the current action:</source>
          <target state="translated">标记整个闪光灯或单个闪光灯条目在当前操作结束时被丢弃。</target>
        </trans-unit>
        <trans-unit id="762795e51673105df0f06e3d6f3f9189f42b1615" translate="yes" xml:space="preserve">
          <source>Marks the named method as intended to be redefined, if it exists. Suppresses the Ruby method redefinition warning. Prefer &lt;a href=&quot;module#method-i-redefine_method&quot;&gt;redefine_method&lt;/a&gt; where possible.</source>
          <target state="translated">将命名方法标记为打算重新定义（如果存在）。禁止Ruby方法重定义警告。身高&lt;a href=&quot;module#method-i-redefine_method&quot;&gt;redefine_method&lt;/a&gt;在可能的情况。</target>
        </trans-unit>
        <trans-unit id="0475c3dda41d22daed4981fee4af23c1b9ef4ff1" translate="yes" xml:space="preserve">
          <source>Marks this record as read only.</source>
          <target state="translated">将此记录标记为只读。</target>
        </trans-unit>
        <trans-unit id="b36e9ee63716f8133557ba3c2a06919d8f961b9c" translate="yes" xml:space="preserve">
          <source>Marks this record to be destroyed as part of the parent's save transaction. This does &lt;em&gt;not&lt;/em&gt; actually destroy the record instantly, rather child record will be destroyed when &lt;code&gt;parent.save&lt;/code&gt; is called.</source>
          <target state="translated">将此记录标记为作为父级保存事务的一部分被销毁。这实际上并&lt;em&gt;不能&lt;/em&gt;立即销毁记录，而是在调用 &lt;code&gt;parent.save&lt;/code&gt; 时会销毁子记录。</target>
        </trans-unit>
        <trans-unit id="567a561a163f9443feee81023bbb6e3d3d856e7d" translate="yes" xml:space="preserve">
          <source>Mask value of &lt;code&gt;params&lt;/code&gt; if key matches one of filters.</source>
          <target state="translated">面膜的价值 &lt;code&gt;params&lt;/code&gt; 如果密钥相匹配的过滤器之一。</target>
        </trans-unit>
        <trans-unit id="cb3cb3e44a313e8943d59b0c6c633a46ac1ce5d8" translate="yes" xml:space="preserve">
          <source>Masked Authenticity Tokens</source>
          <target state="translated">遮蔽的真实性令牌</target>
        </trans-unit>
        <trans-unit id="5c1e45d56c039093f8a35ab45a70a26ca3d2a641" translate="yes" xml:space="preserve">
          <source>Matches a URL pattern to one or more routes.</source>
          <target state="translated">将一个URL模式与一个或多个路由进行匹配。</target>
        </trans-unit>
        <trans-unit id="dcd37a0f5706371522de514ef180c0fb66ebe5cb" translate="yes" xml:space="preserve">
          <source>Matches a URL pattern to one or more routes. For more information, see &lt;a href=&quot;base#method-i-match&quot;&gt;match&lt;/a&gt;.</source>
          <target state="translated">将网址格式与一个或多个路由匹配。有关更多信息，请参见&lt;a href=&quot;base#method-i-match&quot;&gt;match&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cc8477b206cc55c328a42daa3a110d5a902da25e" translate="yes" xml:space="preserve">
          <source>Matches an exception to a handler based on the exception class.</source>
          <target state="translated">根据异常类将异常匹配到一个处理程序。</target>
        </trans-unit>
        <trans-unit id="392aa4613bb333a2cb618b83882099e4b8d3329d" translate="yes" xml:space="preserve">
          <source>Matching URLs will be marked as '[FILTERED]'.</source>
          <target state="translated">匹配的URL将被标记为'[FILTERED]'。</target>
        </trans-unit>
        <trans-unit id="a8df2fec28d8948a0326722029c7492b88ee4fbe" translate="yes" xml:space="preserve">
          <source>Maximum</source>
          <target state="translated">Maximum</target>
        </trans-unit>
        <trans-unit id="ea0fd428175d5a7f6c71193bfd0cb7d518663243" translate="yes" xml:space="preserve">
          <source>Media type of response.</source>
          <target state="translated">媒体类型的反应。</target>
        </trans-unit>
        <trans-unit id="4d5f48e858447d5b8bf7bc81648942a5d44922e8" translate="yes" xml:space="preserve">
          <source>Memoizes the value returned by &lt;a href=&quot;getip#method-i-calculate_ip&quot;&gt;calculate_ip&lt;/a&gt; and returns it for &lt;a href=&quot;../request&quot;&gt;ActionDispatch::Request&lt;/a&gt; to use.</source>
          <target state="translated">记住由&lt;a href=&quot;getip#method-i-calculate_ip&quot;&gt;calculate_ip&lt;/a&gt;返回的值，并将其返回以供&lt;a href=&quot;../request&quot;&gt;ActionDispatch :: Request&lt;/a&gt;使用。</target>
        </trans-unit>
        <trans-unit id="5f53a17ddcd691ca1e78252051c126d13cd160ee" translate="yes" xml:space="preserve">
          <source>Merge conflicts can occur in your schema file when two branches modify schema. To resolve these conflicts run &lt;code&gt;rails db:migrate&lt;/code&gt; to regenerate the schema file.</source>
          <target state="translated">当两个分支修改架构时，架构文件中可能发生合并冲突。要解决这些冲突，请运行 &lt;code&gt;rails db:migrate&lt;/code&gt; 重新生成架构文件。</target>
        </trans-unit>
        <trans-unit id="226be574fbe2fe077103b611adc4a492e6b6acbc" translate="yes" xml:space="preserve">
          <source>Merges in the conditions from &lt;code&gt;other&lt;/code&gt;, if &lt;code&gt;other&lt;/code&gt; is an &lt;a href=&quot;relation&quot;&gt;ActiveRecord::Relation&lt;/a&gt;. Returns an array representing the intersection of the resulting records with &lt;code&gt;other&lt;/code&gt;, if &lt;code&gt;other&lt;/code&gt; is an array.</source>
          <target state="translated">合并 &lt;code&gt;other&lt;/code&gt; 条件（如果 &lt;code&gt;other&lt;/code&gt; 条件为&lt;a href=&quot;relation&quot;&gt;ActiveRecord :: Relation）&lt;/a&gt;。返回一个数组，该数组表示结果记录与 &lt;code&gt;other&lt;/code&gt; 的交集（如果 &lt;code&gt;other&lt;/code&gt; 是数组）。</target>
        </trans-unit>
        <trans-unit id="9d078dcba4eea635c17ac1cc07c092528c89cf22" translate="yes" xml:space="preserve">
          <source>Merges the caller into &lt;code&gt;other_hash&lt;/code&gt;. For example,</source>
          <target state="translated">将调用者合并到 &lt;code&gt;other_hash&lt;/code&gt; 中。例如，</target>
        </trans-unit>
        <trans-unit id="d9d98f104e303f9cf5ba6cad0f2e8b90cc2ed8ec" translate="yes" xml:space="preserve">
          <source>Merges the errors from &lt;code&gt;other&lt;/code&gt;.</source>
          <target state="translated">合并 &lt;code&gt;other&lt;/code&gt; 错误。</target>
        </trans-unit>
        <trans-unit id="40de0d4de887a374168bf79e72c7aa0fa4594d6e" translate="yes" xml:space="preserve">
          <source>Merging</source>
          <target state="translated">Merging</target>
        </trans-unit>
        <trans-unit id="30998fc7b14825bfe3e591f38ea1804d33fd195e" translate="yes" xml:space="preserve">
          <source>Merging of scopes</source>
          <target state="translated">合并范围</target>
        </trans-unit>
        <trans-unit id="39479ff33f15bab6f4bff70fe02746b486a928cb" translate="yes" xml:space="preserve">
          <source>MessageDelivery</source>
          <target state="translated">MessageDelivery</target>
        </trans-unit>
        <trans-unit id="2ca3a9f4c5c006a148b7a9932578ec19923bc9f1" translate="yes" xml:space="preserve">
          <source>MessageDelivery#deliver_later</source>
          <target state="translated">MessageDelivery#deliver_later</target>
        </trans-unit>
        <trans-unit id="d58a2072f2c00bcf994136544ed0881f4277955c" translate="yes" xml:space="preserve">
          <source>MessageDelivery#deliver_later!</source>
          <target state="translated">MessageDelivery#deliver_later!</target>
        </trans-unit>
        <trans-unit id="7dc2404b1df899d54d5d918418a7a861a6fd98d7" translate="yes" xml:space="preserve">
          <source>MessageDelivery#deliver_now</source>
          <target state="translated">MessageDelivery#deliver_now</target>
        </trans-unit>
        <trans-unit id="f694e10fbd9555697b01757d6c268f0aba5cf7e5" translate="yes" xml:space="preserve">
          <source>MessageDelivery#deliver_now!</source>
          <target state="translated">MessageDelivery#deliver_now!</target>
        </trans-unit>
        <trans-unit id="d815799b8048b0698d61637622c9b59c5a136e80" translate="yes" xml:space="preserve">
          <source>MessageDelivery#message</source>
          <target state="translated">MessageDelivery#message</target>
        </trans-unit>
        <trans-unit id="ebbce05309872298d3a6ebb2dc89bd5f0a10e93b" translate="yes" xml:space="preserve">
          <source>MessageDelivery#processed?</source>
          <target state="translated">MessageDelivery#processed?</target>
        </trans-unit>
        <trans-unit id="00bd198ba5bc0785f66eced2f7b32668155ba43b" translate="yes" xml:space="preserve">
          <source>MessageEncryptor</source>
          <target state="translated">MessageEncryptor</target>
        </trans-unit>
        <trans-unit id="75851ac20320d046daeb57638d6439c136973683" translate="yes" xml:space="preserve">
          <source>MessageEncryptor#decrypt_and_verify</source>
          <target state="translated">MessageEncryptor#decrypt_and_verify</target>
        </trans-unit>
        <trans-unit id="ec3605655c1dd7df73e97bee16ca0dc06fa4ba72" translate="yes" xml:space="preserve">
          <source>MessageEncryptor#encrypt_and_sign</source>
          <target state="translated">MessageEncryptor#encrypt_and_sign</target>
        </trans-unit>
        <trans-unit id="f92a218377d645f9092dd4c876aaced4944bc4c6" translate="yes" xml:space="preserve">
          <source>MessageEncryptor::key_len</source>
          <target state="translated">MessageEncryptor::key_len</target>
        </trans-unit>
        <trans-unit id="8f1e28e8dce828703d5d80714ec5189d685ade59" translate="yes" xml:space="preserve">
          <source>MessageEncryptor::new</source>
          <target state="translated">MessageEncryptor::new</target>
        </trans-unit>
        <trans-unit id="2fd13a09c7dae2fdbec9311749e402b4ff60c103" translate="yes" xml:space="preserve">
          <source>MessageVerifier</source>
          <target state="translated">MessageVerifier</target>
        </trans-unit>
        <trans-unit id="0a4d6d879f6d4797c6c59a17b65975130fee0209" translate="yes" xml:space="preserve">
          <source>MessageVerifier#generate</source>
          <target state="translated">MessageVerifier#generate</target>
        </trans-unit>
        <trans-unit id="42f90315126a3917fcfb263375bb71bc0a0a0dc4" translate="yes" xml:space="preserve">
          <source>MessageVerifier#valid_message?</source>
          <target state="translated">MessageVerifier#valid_message?</target>
        </trans-unit>
        <trans-unit id="81f77bbedd728547b52ddc40c7f614824f70a36b" translate="yes" xml:space="preserve">
          <source>MessageVerifier#verified</source>
          <target state="translated">MessageVerifier#verified</target>
        </trans-unit>
        <trans-unit id="cb9c675c988d965998ae45b5d73c7f5308bc24f7" translate="yes" xml:space="preserve">
          <source>MessageVerifier#verify</source>
          <target state="translated">MessageVerifier#verify</target>
        </trans-unit>
        <trans-unit id="faade315455c305d9bb171bc107ea83f06e6fa63" translate="yes" xml:space="preserve">
          <source>MessageVerifier::new</source>
          <target state="translated">MessageVerifier::new</target>
        </trans-unit>
        <trans-unit id="90acb406947db8913ac9b53b7532764ff4fcc59e" translate="yes" xml:space="preserve">
          <source>Metal</source>
          <target state="translated">Metal</target>
        </trans-unit>
        <trans-unit id="38196d8520f1d9e342a790c7baee91ba05b7857a" translate="yes" xml:space="preserve">
          <source>Metal#controller_name</source>
          <target state="translated">Metal#controller_name</target>
        </trans-unit>
        <trans-unit id="edb271c6ba74584a5e95fc8a592017e04d034cfe" translate="yes" xml:space="preserve">
          <source>Metal#params</source>
          <target state="translated">Metal#params</target>
        </trans-unit>
        <trans-unit id="e25845eba96b1c6cec462f426fe2054f763d5f7e" translate="yes" xml:space="preserve">
          <source>Metal#params=</source>
          <target state="translated">Metal#params=</target>
        </trans-unit>
        <trans-unit id="ae198879fd9a7f794c7ff37117ecdd787966071f" translate="yes" xml:space="preserve">
          <source>Metal#performed?</source>
          <target state="translated">Metal#performed?</target>
        </trans-unit>
        <trans-unit id="645752c91da4af331d632112e2ff95adf8ceb3d4" translate="yes" xml:space="preserve">
          <source>Metal#reset_session</source>
          <target state="translated">Metal#reset_session</target>
        </trans-unit>
        <trans-unit id="0c1d3d5f890bdd4021fc1683c03282ae40e4b4db" translate="yes" xml:space="preserve">
          <source>Metal#response_body=</source>
          <target state="translated">Metal#response_body=</target>
        </trans-unit>
        <trans-unit id="2592810200ac0ea7cdb516839b5733b45cd7157a" translate="yes" xml:space="preserve">
          <source>Metal#url_for</source>
          <target state="translated">Metal#url_for</target>
        </trans-unit>
        <trans-unit id="5d5a5e7489ce45c5bc7bbfce6515f09fc97fbd9c" translate="yes" xml:space="preserve">
          <source>Metal::action</source>
          <target state="translated">Metal::action</target>
        </trans-unit>
        <trans-unit id="e2a4b21df305be1783c72a1f50c97c1f1d4985a7" translate="yes" xml:space="preserve">
          <source>Metal::controller_name</source>
          <target state="translated">Metal::controller_name</target>
        </trans-unit>
        <trans-unit id="ce79f003cf7ea40ba89e57e2a796360ffd946624" translate="yes" xml:space="preserve">
          <source>Metal::dispatch</source>
          <target state="translated">Metal::dispatch</target>
        </trans-unit>
        <trans-unit id="182ff2b0bc20e306864bb84402eee07193eb45a1" translate="yes" xml:space="preserve">
          <source>Metal::make_response!</source>
          <target state="translated">Metal::make_response!</target>
        </trans-unit>
        <trans-unit id="d382f96858a788760f261e666e4f85ff97426a6b" translate="yes" xml:space="preserve">
          <source>Metal::middleware</source>
          <target state="translated">Metal::middleware</target>
        </trans-unit>
        <trans-unit id="3ed079e8835c2f9c9c9047fad46dd8ccfe5f55f6" translate="yes" xml:space="preserve">
          <source>Metal::new</source>
          <target state="translated">Metal::new</target>
        </trans-unit>
        <trans-unit id="2f72e572e61260367af8b52a4e688488474b8e83" translate="yes" xml:space="preserve">
          <source>Metal::use</source>
          <target state="translated">Metal::use</target>
        </trans-unit>
        <trans-unit id="88306943fea7e76f9cd57cae0ea6d8b32d2e8434" translate="yes" xml:space="preserve">
          <source>Method</source>
          <target state="translated">Method</target>
        </trans-unit>
        <trans-unit id="f2a980d54dbcb57ac4454a805bc48519eb1f3e32" translate="yes" xml:space="preserve">
          <source>Method Delegation</source>
          <target state="translated">方法委托</target>
        </trans-unit>
        <trans-unit id="dcddcbb57206eaf4559c31c460763d2d6db31a20" translate="yes" xml:space="preserve">
          <source>Methods and Actions</source>
          <target state="translated">方法和行动</target>
        </trans-unit>
        <trans-unit id="666268e79826afdec3fff0264016e94ef5b766ab" translate="yes" xml:space="preserve">
          <source>Methods are not duplicable:</source>
          <target state="translated">方法是不可重复的。</target>
        </trans-unit>
        <trans-unit id="481f07082abcea98f240ee7383772b4988e84273" translate="yes" xml:space="preserve">
          <source>Methods can be delegated to instance variables, class variables, or constants by providing them as a symbols:</source>
          <target state="translated">方法可以通过以符号的形式提供给实例变量、类变量或常量。</target>
        </trans-unit>
        <trans-unit id="3419a2570908db81b298d7c6d51f10df0e243219" translate="yes" xml:space="preserve">
          <source>Methods defined in Active Record fixtures</source>
          <target state="translated">在活动记录夹具中定义的方法</target>
        </trans-unit>
        <trans-unit id="8e227abc813f4dbe34a05c0e54629b2a9e2fc5be" translate="yes" xml:space="preserve">
          <source>Methods for sending arbitrary data and for streaming files to the browser, instead of rendering.</source>
          <target state="translated">用于发送任意数据和流文件到浏览器的方法,而不是渲染。</target>
        </trans-unit>
        <trans-unit id="d3ae077b906176fdf43ee4e5fa066f1c0a49b9ee" translate="yes" xml:space="preserve">
          <source>Methods must return a &lt;code&gt;Mail::Message&lt;/code&gt; object which can be generated by calling the mailer method without the additional &lt;code&gt;deliver_now&lt;/code&gt; / &lt;code&gt;deliver_later&lt;/code&gt;. The location of the mailer previews directory can be configured using the &lt;code&gt;preview_path&lt;/code&gt; option which has a default of &lt;code&gt;test/mailers/previews&lt;/code&gt;:</source>
          <target state="translated">方法必须返回一个 &lt;code&gt;Mail::Message&lt;/code&gt; 对象，可以通过调用mailer方法来生成该对象，而无需额外的 &lt;code&gt;deliver_now&lt;/code&gt; / &lt;code&gt;deliver_later&lt;/code&gt; 。可以使用 &lt;code&gt;preview_path&lt;/code&gt; 选项配置邮件程序预览目录的位置，该选项的默认值为 &lt;code&gt;test/mailers/previews&lt;/code&gt; previews：</target>
        </trans-unit>
        <trans-unit id="a445a0c958f699e2d42015e88db5478fad019eca" translate="yes" xml:space="preserve">
          <source>Methods provided by Thor are not covered this guide and can be found in &lt;a href=&quot;http://rdoc.info/github/erikhuda/thor/master/Thor/Actions.html&quot;&gt;Thor's documentation&lt;/a&gt;</source>
          <target state="translated">Thor所提供的方法未在本指南中涵盖，可以在&lt;a href=&quot;http://rdoc.info/github/erikhuda/thor/master/Thor/Actions.html&quot;&gt;Thor的文档中&lt;/a&gt;找到</target>
        </trans-unit>
        <trans-unit id="337d33d863058e0d37f9eac0f10f65d2f777c208" translate="yes" xml:space="preserve">
          <source>Methods that operate on collections are also aware of the hierarchy. For example, &lt;code&gt;Polygon.all&lt;/code&gt; returns all the records of the table, because all rectangles and triangles are polygons. Active Record takes care of returning instances of their corresponding class in the result set.</source>
          <target state="translated">对集合进行操作的方法也知道层次结构。例如， &lt;code&gt;Polygon.all&lt;/code&gt; 返回表的所有记录，因为所有矩形和三角形都是多边形。Active Record负责返回结果集中其相应类的实例。</target>
        </trans-unit>
        <trans-unit id="67cf221c8b87e3529b8c224fef7556811903e14a" translate="yes" xml:space="preserve">
          <source>Methods to create form controls are called &lt;strong&gt;on&lt;/strong&gt; the form builder object &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="translated">方法来创建窗体控件称为&lt;strong&gt;上&lt;/strong&gt;表单生成器对象 &lt;code&gt;f&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5de9d6fe8584b29709979d39884dc53d6c96e3a5" translate="yes" xml:space="preserve">
          <source>Methods will be added for retrieval and query for a single associated object, for which this object holds an id:</source>
          <target state="translated">将增加方法对单个关联对象进行检索和查询,这个对象拥有一个id。</target>
        </trans-unit>
        <trans-unit id="5eb00c057aeacb4083ac81ba9b645b27dc753532" translate="yes" xml:space="preserve">
          <source>Microsoft Azure Storage Service</source>
          <target state="translated">微软Azure存储服务</target>
        </trans-unit>
        <trans-unit id="b7507320067b372700f147199bfa6970bc4f77db" translate="yes" xml:space="preserve">
          <source>Middleware class can be inserted as a Rack handler to be local cache for the duration of request.</source>
          <target state="translated">中间件类可以作为一个Rack处理程序插入,在请求期间作为本地缓存。</target>
        </trans-unit>
        <trans-unit id="bf3312ce9eeb6125a88289fa4cc849222be8b06d" translate="yes" xml:space="preserve">
          <source>Middleware stack</source>
          <target state="translated">中间件栈</target>
        </trans-unit>
        <trans-unit id="9d38520e4d12785ebcf01316593660ab8608f5f2" translate="yes" xml:space="preserve">
          <source>Middleware that determines which database connection to use in a multiple database application.</source>
          <target state="translated">决定在多数据库应用程序中使用哪种数据库连接的中间件。</target>
        </trans-unit>
        <trans-unit id="563b6e9338739fba0218b72d657c3e48b84a5b78" translate="yes" xml:space="preserve">
          <source>Middleware::DatabaseSelector</source>
          <target state="translated">Middleware::DatabaseSelector</target>
        </trans-unit>
        <trans-unit id="8f269630c3fc0cbd7d46cc52b6ce2aee1bcbefa6" translate="yes" xml:space="preserve">
          <source>Middleware::DatabaseSelector#call</source>
          <target state="translated">Middleware::DatabaseSelector#call</target>
        </trans-unit>
        <trans-unit id="1ba8c8c9800962e37f6e1230fd89f8279c0728a5" translate="yes" xml:space="preserve">
          <source>Middleware::DatabaseSelector#context_klass</source>
          <target state="translated">Middleware::DatabaseSelector#context_klass</target>
        </trans-unit>
        <trans-unit id="01598e7d668159cced3b5d431bd75f29396ede41" translate="yes" xml:space="preserve">
          <source>Middleware::DatabaseSelector#options</source>
          <target state="translated">Middleware::DatabaseSelector#options</target>
        </trans-unit>
        <trans-unit id="155690df2c425380b1967de734857d9dbea0bb2b" translate="yes" xml:space="preserve">
          <source>Middleware::DatabaseSelector#resolver_klass</source>
          <target state="translated">Middleware::DatabaseSelector#resolver_klass</target>
        </trans-unit>
        <trans-unit id="0336e69fa320a456f7b839c7f9ef95e94d2ba03a" translate="yes" xml:space="preserve">
          <source>Middleware::DatabaseSelector::new</source>
          <target state="translated">Middleware::DatabaseSelector::new</target>
        </trans-unit>
        <trans-unit id="33b6b00c01da2bce5880337e4154f952b0cf5e1a" translate="yes" xml:space="preserve">
          <source>MiddlewareStack::InstrumentationProxy</source>
          <target state="translated">MiddlewareStack::InstrumentationProxy</target>
        </trans-unit>
        <trans-unit id="ce6014a5f10c8a7e1157c5ffac9afecce96ff840" translate="yes" xml:space="preserve">
          <source>MiddlewareStack::InstrumentationProxy#call</source>
          <target state="translated">MiddlewareStack::InstrumentationProxy#call</target>
        </trans-unit>
        <trans-unit id="5f8a75a366d8e0cf285b8df25b529ff4733f3dcd" translate="yes" xml:space="preserve">
          <source>MiddlewareStack::InstrumentationProxy::new</source>
          <target state="translated">MiddlewareStack::InstrumentationProxy::new</target>
        </trans-unit>
        <trans-unit id="27e0622c20c96144720c72ae273895e1f0116ee8" translate="yes" xml:space="preserve">
          <source>Middlewares</source>
          <target state="translated">Middlewares</target>
        </trans-unit>
        <trans-unit id="c36c34173f49fa742f965209eed50d88aaff346c" translate="yes" xml:space="preserve">
          <source>Middlewares are loaded once and are not monitored for changes. You will have to restart the server for changes to be reflected in the running application.</source>
          <target state="translated">中间件只加载一次,不监控变化。您必须重新启动服务器,才能在运行的应用程序中反映变化。</target>
        </trans-unit>
        <trans-unit id="282f075c796a3d6b9e95474b434c7581a2396fb7" translate="yes" xml:space="preserve">
          <source>Middlewares can also be completely swapped out and replaced with others:</source>
          <target state="translated">中间件也可以完全换掉,换成其他的。</target>
        </trans-unit>
        <trans-unit id="77bcdd2131896dea63742df165ba47d28766a503" translate="yes" xml:space="preserve">
          <source>Middlewares that need to manipulate the body won't work with streaming. You should disable those middlewares whenever streaming in development or production. For instance, &lt;code&gt;Rack::Bug&lt;/code&gt; won't work when streaming as it needs to inject contents in the HTML body.</source>
          <target state="translated">需要操纵主体的中间件不能与流一起使用。在开发或生产中进行流式传输时，应禁用这些中间件。例如， &lt;code&gt;Rack::Bug&lt;/code&gt; 在流式传输时将不起作用，因为它需要在HTML主体中注入内容。</target>
        </trans-unit>
        <trans-unit id="d0628fa131fd3749ca6f8ae87cbb36a3fdf7a395" translate="yes" xml:space="preserve">
          <source>Might want a shorter timeout depending on whether the request is a PATCH, PUT, or POST, and if the client is a browser or web service. Can be much shorter if the Stale directive is implemented. This would allow a user to use new nonce without prompting the user again for their username and password.</source>
          <target state="translated">可能需要更短的超时时间,这取决于请求是PATCH、PUT还是POST,以及客户端是浏览器还是Web服务。如果实现了Stale指令,时间可以更短。这将允许用户使用新的nonce,而无需再次提示用户输入用户名和密码。</target>
        </trans-unit>
        <trans-unit id="de063e32dc06a43a0af8ea312ac86d212f940f81" translate="yes" xml:space="preserve">
          <source>Migrate away from MultiJSON by using &lt;code&gt;obj.to_json&lt;/code&gt;, and &lt;code&gt;JSON.parse(str)&lt;/code&gt; instead.</source>
          <target state="translated">改用 &lt;code&gt;obj.to_json&lt;/code&gt; 和 &lt;code&gt;JSON.parse(str)&lt;/code&gt; 从MultiJSON迁移。</target>
        </trans-unit>
        <trans-unit id="849cf5dbd007a2e8d456dd72aa453236b2c87bd3" translate="yes" xml:space="preserve">
          <source>Migration Overview</source>
          <target state="translated">迁移概述</target>
        </trans-unit>
        <trans-unit id="c10689ae3fc90ca5bd5d3afa879fe03daf018267" translate="yes" xml:space="preserve">
          <source>Migration to create the comments table in your database (your name will include a different timestamp)</source>
          <target state="translated">迁移到您的数据库中创建评论表(您的名字将包含不同的时间戳)。</target>
        </trans-unit>
        <trans-unit id="df5bd8ca322d93957c7101e41c22684019c85ff5" translate="yes" xml:space="preserve">
          <source>MigrationProxy</source>
          <target state="translated">MigrationProxy</target>
        </trans-unit>
        <trans-unit id="dca984afd74a0089c1d5a5816e4de2e8d46a60b5" translate="yes" xml:space="preserve">
          <source>Migrations</source>
          <target state="translated">Migrations</target>
        </trans-unit>
        <trans-unit id="92fa499d9dbdc22d3d47a8967f65d9b91f5e16f5" translate="yes" xml:space="preserve">
          <source>Migrations &amp;amp; seed data</source>
          <target state="translated">迁移和种子数据</target>
        </trans-unit>
        <trans-unit id="add41b9c7d182bf31f14e478e595fffc9cc6dbbf" translate="yes" xml:space="preserve">
          <source>Migrations and Seed Data</source>
          <target state="translated">迁移和种子数据</target>
        </trans-unit>
        <trans-unit id="57a43495bb4f9921561af4c2e6643f541818d776" translate="yes" xml:space="preserve">
          <source>Migrations are a convenient way to &lt;a href=&quot;https://en.wikipedia.org/wiki/Schema_migration&quot;&gt;alter your database schema over time&lt;/a&gt; in a consistent and easy way. They use a Ruby DSL so that you don't have to write SQL by hand, allowing your schema and changes to be database independent.</source>
          <target state="translated">迁移是一种方便，一致且简便的方式，可以&lt;a href=&quot;https://en.wikipedia.org/wiki/Schema_migration&quot;&gt;随着时间的推移更改数据库架构&lt;/a&gt;。他们使用Ruby DSL，因此您不必手工编写SQL，从而使架构和更改独立于数据库。</target>
        </trans-unit>
        <trans-unit id="35eb283061f63c9f2d9c8759c68d4c4790d997dd" translate="yes" xml:space="preserve">
          <source>Migrations are a feature of Active Record that allows you to evolve your database schema over time. Rather than write schema modifications in pure SQL, migrations allow you to use an easy Ruby DSL to describe changes to your tables.</source>
          <target state="translated">Migrations是Active Record的一个功能,它允许您随着时间的推移而发展您的数据库模式。迁移不是用纯SQL编写模式修改,而是允许您使用一个简单的Ruby DSL来描述您的表的变化。</target>
        </trans-unit>
        <trans-unit id="ae5636cafa88975771a82a06eb973872d54fc377" translate="yes" xml:space="preserve">
          <source>Migrations are currently supported in MySQL, PostgreSQL, SQLite, SQL Server, and Oracle (all supported databases except DB2).</source>
          <target state="translated">目前支持在MySQL、PostgreSQL、SQLite、SQL Server和Oracle中进行迁移(除DB2外的所有支持数据库)。</target>
        </trans-unit>
        <trans-unit id="dd0a5b8c9fe431987a19d0d866524897437e203c" translate="yes" xml:space="preserve">
          <source>Migrations are stored as files in the &lt;code&gt;db/migrate&lt;/code&gt; directory, one for each migration class. The name of the file is of the form &lt;code&gt;YYYYMMDDHHMMSS_create_products.rb&lt;/code&gt;, that is to say a UTC timestamp identifying the migration followed by an underscore followed by the name of the migration. The name of the migration class (CamelCased version) should match the latter part of the file name. For example &lt;code&gt;20080906120000_create_products.rb&lt;/code&gt; should define class &lt;code&gt;CreateProducts&lt;/code&gt; and &lt;code&gt;20080906120001_add_details_to_products.rb&lt;/code&gt; should define &lt;code&gt;AddDetailsToProducts&lt;/code&gt;. Rails uses this timestamp to determine which migration should be run and in what order, so if you're copying a migration from another application or generate a file yourself, be aware of its position in the order.</source>
          <target state="translated">迁移作为文件存储在 &lt;code&gt;db/migrate&lt;/code&gt; 目录中，每个迁移类一个。文件名的格式为 &lt;code&gt;YYYYMMDDHHMMSS_create_products.rb&lt;/code&gt; ，也就是说，UTC时间戳记标识了迁移，并在其后带有下划线和迁移名。迁移类的名称（CamelCased版本）应与文件名的后半部分匹配。例如， &lt;code&gt;20080906120000_create_products.rb&lt;/code&gt; 应该定义类 &lt;code&gt;CreateProducts&lt;/code&gt; ,而 &lt;code&gt;20080906120001_add_details_to_products.rb&lt;/code&gt; 应该定义 &lt;code&gt;AddDetailsToProducts&lt;/code&gt; 。Rails使用此时间戳来确定应以哪种顺序运行迁移，因此，如果要从另一个应用程序复制迁移或自己生成文件，请注意其在顺序中的位置。</target>
        </trans-unit>
        <trans-unit id="d26d12943d7d80825abca46a5dc3235ea3ec50a2" translate="yes" xml:space="preserve">
          <source>Migrations can manage the evolution of a schema used by several physical databases. It's a solution to the common problem of adding a field to make a new feature work in your local database, but being unsure of how to push that change to other developers and to the production server. With migrations, you can describe the transformations in self-contained classes that can be checked into version control systems and executed against another database that might be one, two, or five versions behind.</source>
          <target state="translated">迁移可以管理多个物理数据库使用的模式的演变。它是一个常见问题的解决方案,即添加一个字段以使一个新功能在本地数据库中工作,但不确定如何将该变化推送给其他开发人员和生产服务器。通过迁移,你可以在自足的类中描述变换,这些类可以被检查到版本控制系统中,并针对可能落后一个、两个或五个版本的另一个数据库执行。</target>
        </trans-unit>
        <trans-unit id="f94ebd9500c999984b8945609bc2df7a540d229d" translate="yes" xml:space="preserve">
          <source>Migrations for multiple databases should live in their own folders prefixed with the name of the database key in the configuration.</source>
          <target state="translated">多个数据库的迁移应该存在自己的文件夹中,前缀为配置中的数据库键的名称。</target>
        </trans-unit>
        <trans-unit id="86a3425e7c377c2db63091c03252f49164c0a2bc" translate="yes" xml:space="preserve">
          <source>Migrations, mighty as they may be, are not the authoritative source for your database schema. Your database remains the authoritative source. By default, Rails generates &lt;code&gt;db/schema.rb&lt;/code&gt; which attempts to capture the current state of your database schema.</source>
          <target state="translated">迁移（尽管可能如此）并非数据库架构的权威来源。您的数据库仍然是权威来源。默认情况下，Rails生成 &lt;code&gt;db/schema.rb&lt;/code&gt; ，它试图捕获数据库模式的当前状态。</target>
        </trans-unit>
        <trans-unit id="1e3979049ac0db93535e487d19b907375014fe97" translate="yes" xml:space="preserve">
          <source>Mime</source>
          <target state="translated">Mime</target>
        </trans-unit>
        <trans-unit id="837a9cd6761dcbf9f4cc0d2283bc69ff6d49162f" translate="yes" xml:space="preserve">
          <source>Mime::Type</source>
          <target state="translated">Mime::Type</target>
        </trans-unit>
        <trans-unit id="3d541a2228a89762108026001dee109145d47890" translate="yes" xml:space="preserve">
          <source>Mime::[]</source>
          <target state="translated">Mime::[]</target>
        </trans-unit>
        <trans-unit id="0926e3a2597b119bebc1a1fce3d223f29ed8f149" translate="yes" xml:space="preserve">
          <source>Mime::fetch</source>
          <target state="translated">Mime::fetch</target>
        </trans-unit>
        <trans-unit id="050981c2f1d2b6a48d219c1eccf7c86033e0e849" translate="yes" xml:space="preserve">
          <source>MimeResponds</source>
          <target state="translated">MimeResponds</target>
        </trans-unit>
        <trans-unit id="8b545c051d507c480dba95bf413fce8705988b77" translate="yes" xml:space="preserve">
          <source>MimeResponds#respond_to</source>
          <target state="translated">MimeResponds#respond_to</target>
        </trans-unit>
        <trans-unit id="6f5a075fbf5fd5c483250378da86ae9b313d0b5e" translate="yes" xml:space="preserve">
          <source>MimeResponds::Collector</source>
          <target state="translated">MimeResponds::Collector</target>
        </trans-unit>
        <trans-unit id="dd15e78a286dc1fcb96a6d760a8accbea04d2f46" translate="yes" xml:space="preserve">
          <source>MimeResponds::Collector#all</source>
          <target state="translated">MimeResponds::Collector#all</target>
        </trans-unit>
        <trans-unit id="3186ed947655e8e13c11d197e22b057a3b826b5a" translate="yes" xml:space="preserve">
          <source>MimeResponds::Collector#any</source>
          <target state="translated">MimeResponds::Collector#any</target>
        </trans-unit>
        <trans-unit id="077fae0e3039a4b3ba6f06a7b2493faf6bc94149" translate="yes" xml:space="preserve">
          <source>MimeResponds::Collector#custom</source>
          <target state="translated">MimeResponds::Collector#custom</target>
        </trans-unit>
        <trans-unit id="0a408c565a901345e13710dce8b46ddc83596604" translate="yes" xml:space="preserve">
          <source>MimeResponds::Collector#format</source>
          <target state="translated">MimeResponds::Collector#format</target>
        </trans-unit>
        <trans-unit id="d7d7238b3edbaa05ba30c1b8de1d6eae8196c62e" translate="yes" xml:space="preserve">
          <source>MimeResponds::Collector#negotiate_format</source>
          <target state="translated">MimeResponds::Collector#negotiate_format</target>
        </trans-unit>
        <trans-unit id="a43f44c574ab0f660ef86ec6284e21f6a15123a3" translate="yes" xml:space="preserve">
          <source>MimeResponds::Collector#response</source>
          <target state="translated">MimeResponds::Collector#response</target>
        </trans-unit>
        <trans-unit id="c94b172f9c46140e4befb5a3b40843c333dc1bd0" translate="yes" xml:space="preserve">
          <source>MimeResponds::Collector::new</source>
          <target state="translated">MimeResponds::Collector::new</target>
        </trans-unit>
        <trans-unit id="5d398eef3ecc3ea6a161734581d0bd3d920b64d8" translate="yes" xml:space="preserve">
          <source>Minimum</source>
          <target state="translated">Minimum</target>
        </trans-unit>
        <trans-unit id="16596f8408b40402e03fb1fa1fea448e6247038b" translate="yes" xml:space="preserve">
          <source>Minitest::Test</source>
          <target state="translated">Minitest::Test</target>
        </trans-unit>
        <trans-unit id="74043cd8393b54dc6043472a59ad52bfb062b30d" translate="yes" xml:space="preserve">
          <source>Mirror Service</source>
          <target state="translated">镜像服务</target>
        </trans-unit>
        <trans-unit id="5f2cbd107037ed23248e5058a7a64cd6bae05468" translate="yes" xml:space="preserve">
          <source>Miscellaneous</source>
          <target state="translated">Miscellaneous</target>
        </trans-unit>
        <trans-unit id="432aa1daa28e69ab50b92351f6f2af0a95b10677" translate="yes" xml:space="preserve">
          <source>MismatchedForeignKey</source>
          <target state="translated">MismatchedForeignKey</target>
        </trans-unit>
        <trans-unit id="df53296b1d6061c27762beb02feb56a79d980fe5" translate="yes" xml:space="preserve">
          <source>MismatchedForeignKey::new</source>
          <target state="translated">MismatchedForeignKey::new</target>
        </trans-unit>
        <trans-unit id="c9027d21a516adb82b35423ae731d466f68685dd" translate="yes" xml:space="preserve">
          <source>Missing routes keys may be filled in from the current request's parameters (e.g. &lt;code&gt;:controller&lt;/code&gt;, &lt;code&gt;:action&lt;/code&gt;, &lt;code&gt;:id&lt;/code&gt; and any other parameters that are placed in the path). Given that the current action has been reached through &lt;code&gt;GET
/users/1&lt;/code&gt;:</source>
          <target state="translated">可以从当前请求的参数（例如 &lt;code&gt;:controller&lt;/code&gt; ， &lt;code&gt;:action&lt;/code&gt; ， &lt;code&gt;:id&lt;/code&gt; 和放置在路径中的任何其他参数）填充缺少的路由键。鉴于已经通过 &lt;code&gt;GET /users/1&lt;/code&gt; 实现了当前操作：</target>
        </trans-unit>
        <trans-unit id="41937a7bc85765db9aca03191382c7b168e9b5f0" translate="yes" xml:space="preserve">
          <source>Mix this module into your controller, and all actions in that controller will be able to stream data to the client as it's written.</source>
          <target state="translated">将此模块混合到你的控制器中,该控制器中的所有操作都能在写好后将数据流传到客户端。</target>
        </trans-unit>
        <trans-unit id="605c579c268184680eec501755fbbe56698c9acc" translate="yes" xml:space="preserve">
          <source>Mix-in noise exiled to its own file:</source>
          <target state="translated">混入的噪音被放逐到自己的文件中。</target>
        </trans-unit>
        <trans-unit id="8d259b78f39d0db65eeb3909e9dfd3052b08bc7c" translate="yes" xml:space="preserve">
          <source>Mixing in this module allows you to define the events in the object's life cycle that will support callbacks (via &lt;code&gt;ClassMethods.define_callbacks&lt;/code&gt;), set the instance methods, procs, or callback objects to be called (via &lt;code&gt;ClassMethods.set_callback&lt;/code&gt;), and run the installed callbacks at the appropriate times (via &lt;code&gt;run_callbacks&lt;/code&gt;).</source>
          <target state="translated">混合使用此模块，您可以定义对象生命周期中的事件，这些事件将支持回调（通过 &lt;code&gt;ClassMethods.define_callbacks&lt;/code&gt; ），设置要调用的实例方法，procs或回调对象（通过 &lt;code&gt;ClassMethods.set_callback&lt;/code&gt; ）并运行已安装在适当的时间回调（通过 &lt;code&gt;run_callbacks&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="6bf1644fb9edca063e6ffc86e4f90c94f369309b" translate="yes" xml:space="preserve">
          <source>Mixing with other form helpers</source>
          <target state="translated">与其他表格助手混合使用</target>
        </trans-unit>
        <trans-unit id="3d28be03faf876ad49209848ad7be7b220d78b7e" translate="yes" xml:space="preserve">
          <source>Mobile Safari looks for a different link tag, pointing to an image that will be used if you add the page to the home screen of an iOS device. The following call would generate such a tag:</source>
          <target state="translated">移动Safari寻找一个不同的链接标签,指向一张图片,如果你将页面添加到iOS设备的主屏幕上,就会使用该图片。下面的调用将生成这样一个标签。</target>
        </trans-unit>
        <trans-unit id="68c2cc7f0ceaa3e499ecb4db331feb4debbbcc23" translate="yes" xml:space="preserve">
          <source>Model</source>
          <target state="translated">Model</target>
        </trans-unit>
        <trans-unit id="995901a6d05be888b514f03ce152df52987cf9d7" translate="yes" xml:space="preserve">
          <source>Model / Class</source>
          <target state="translated">型号/等级</target>
        </trans-unit>
        <trans-unit id="506e58da3784558b9ced4bdec6bcfcf767fb21fa" translate="yes" xml:space="preserve">
          <source>Model Class - Singular with the first letter of each word capitalized (e.g., &lt;code&gt;BookClub&lt;/code&gt;).</source>
          <target state="translated">模型类-单数，每个单词的首字母大写（例如 &lt;code&gt;BookClub&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="12bcd30f814db80cb1f7e7a2796b829953df4af8" translate="yes" xml:space="preserve">
          <source>Model Generators</source>
          <target state="translated">模型发电机</target>
        </trans-unit>
        <trans-unit id="33ac27d1e8badd8f928fc67c97f045d911339e91" translate="yes" xml:space="preserve">
          <source>Model Object Helpers</source>
          <target state="translated">模型对象帮助器</target>
        </trans-unit>
        <trans-unit id="d52c41ee4ca421219a75e5a69582d944082143e0" translate="yes" xml:space="preserve">
          <source>Model Testing</source>
          <target state="translated">模型测试</target>
        </trans-unit>
        <trans-unit id="4ec9ebd42f054a98c3da4bc4a0a86ee8eda11c19" translate="yes" xml:space="preserve">
          <source>Model attributes have a reader, a writer, and a predicate. You can alias a model attribute having the corresponding three methods defined for you in one shot. As in other aliasing methods, the new name is the first argument, and the old name is the second (one mnemonic is that they go in the same order as if you did an assignment):</source>
          <target state="translated">模型属性有一个读者、一个写者和一个谓词。你可以一气呵成地别名一个模型属性有相应的三个方法为你定义。和其他别名方法一样,新名称是第一个参数,旧名称是第二个参数(有一个记忆点是,它们的顺序和你做赋值一样)。</target>
        </trans-unit>
        <trans-unit id="55122a12c64767a82f2b9a00f00e2eb10873a428" translate="yes" xml:space="preserve">
          <source>Model tests are used to test the various models of your application.</source>
          <target state="translated">模型测试用于测试应用程序的各种模型。</target>
        </trans-unit>
        <trans-unit id="2b6825ada8068d617c4713f563e77b48935cfc12" translate="yes" xml:space="preserve">
          <source>Model tests don't have their own superclass like &lt;code&gt;ActionMailer::TestCase&lt;/code&gt; instead they inherit from &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveSupport/TestCase.html&quot;&gt;&lt;code&gt;ActiveSupport::TestCase&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">模型测试没有像 &lt;code&gt;ActionMailer::TestCase&lt;/code&gt; 这样的自身超类，而是从&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveSupport/TestCase.html&quot;&gt; &lt;code&gt;ActiveSupport::TestCase&lt;/code&gt; &lt;/a&gt;继承。</target>
        </trans-unit>
        <trans-unit id="2f48817ab34d92bde58ab86f2f428072514122ae" translate="yes" xml:space="preserve">
          <source>Model#persisted?</source>
          <target state="translated">Model#persisted?</target>
        </trans-unit>
        <trans-unit id="4e64f33abdbac5e5ff3f2e0c7fa34b64c6f354dd" translate="yes" xml:space="preserve">
          <source>Model::new</source>
          <target state="translated">Model::new</target>
        </trans-unit>
        <trans-unit id="a5db1f719d035d2f86dd53bc73b31dd5d8068fa4" translate="yes" xml:space="preserve">
          <source>ModelSchema</source>
          <target state="translated">ModelSchema</target>
        </trans-unit>
        <trans-unit id="d441ba5c7e24f4a6db2f90c5e92148cb34f38781" translate="yes" xml:space="preserve">
          <source>ModelSchema::ClassMethods</source>
          <target state="translated">ModelSchema::ClassMethods</target>
        </trans-unit>
        <trans-unit id="f0c7506bc80fe2b9aa98f1bff85e0301e077fb1c" translate="yes" xml:space="preserve">
          <source>ModelSchema::ClassMethods#column_defaults</source>
          <target state="translated">ModelSchema::ClassMethods#column_defaults</target>
        </trans-unit>
        <trans-unit id="e4b875e3ee3c2296967f7855c30256163a85c06b" translate="yes" xml:space="preserve">
          <source>ModelSchema::ClassMethods#column_names</source>
          <target state="translated">ModelSchema::ClassMethods#column_names</target>
        </trans-unit>
        <trans-unit id="00b3898ec2cd08cbe44ab0fc9d248fb3e907a774" translate="yes" xml:space="preserve">
          <source>ModelSchema::ClassMethods#columns</source>
          <target state="translated">ModelSchema::ClassMethods#columns</target>
        </trans-unit>
        <trans-unit id="8a528d813dbaef3873723d8e3064d1398a98f18b" translate="yes" xml:space="preserve">
          <source>ModelSchema::ClassMethods#content_columns</source>
          <target state="translated">ModelSchema::ClassMethods#content_columns</target>
        </trans-unit>
        <trans-unit id="30ca4105a6f05ea7297f11d83896095972184c21" translate="yes" xml:space="preserve">
          <source>ModelSchema::ClassMethods#ignored_columns</source>
          <target state="translated">ModelSchema::ClassMethods#ignored_columns</target>
        </trans-unit>
        <trans-unit id="1226cd6aa58cebf7a5e070fb6137578c208b0802" translate="yes" xml:space="preserve">
          <source>ModelSchema::ClassMethods#ignored_columns=</source>
          <target state="translated">ModelSchema::ClassMethods#ignored_columns=</target>
        </trans-unit>
        <trans-unit id="ebe513fb11fd20dba0ba645e2edd6ed770f802f4" translate="yes" xml:space="preserve">
          <source>ModelSchema::ClassMethods#inheritance_column</source>
          <target state="translated">ModelSchema::ClassMethods#inheritance_column</target>
        </trans-unit>
        <trans-unit id="39d4c5f29d57690fb20af6be5053214a278517c1" translate="yes" xml:space="preserve">
          <source>ModelSchema::ClassMethods#inheritance_column=</source>
          <target state="translated">ModelSchema::ClassMethods#inheritance_column=</target>
        </trans-unit>
        <trans-unit id="638056b926ae5b5e9d04d40a36348eeff37ec51b" translate="yes" xml:space="preserve">
          <source>ModelSchema::ClassMethods#initialize_load_schema_monitor</source>
          <target state="translated">ModelSchema::ClassMethods#initialize_load_schema_monitor</target>
        </trans-unit>
        <trans-unit id="cfdf8706cebcfc8f7edbfa7e020989f53119191c" translate="yes" xml:space="preserve">
          <source>ModelSchema::ClassMethods#next_sequence_value</source>
          <target state="translated">ModelSchema::ClassMethods#next_sequence_value</target>
        </trans-unit>
        <trans-unit id="b3de9d78e61cce1bfb45aebe65dee739fec0c3b6" translate="yes" xml:space="preserve">
          <source>ModelSchema::ClassMethods#prefetch_primary_key?</source>
          <target state="translated">ModelSchema::ClassMethods#prefetch_primary_key?</target>
        </trans-unit>
        <trans-unit id="5c638cca0496e75fa8bdd3ef760687b62143bd87" translate="yes" xml:space="preserve">
          <source>ModelSchema::ClassMethods#protected_environments</source>
          <target state="translated">ModelSchema::ClassMethods#protected_environments</target>
        </trans-unit>
        <trans-unit id="b49a9d0078e1a6b59d5626d3edb9b0be56f14a2e" translate="yes" xml:space="preserve">
          <source>ModelSchema::ClassMethods#protected_environments=</source>
          <target state="translated">ModelSchema::ClassMethods#protected_environments=</target>
        </trans-unit>
        <trans-unit id="df0f9208df053b27a067b113784578798515de75" translate="yes" xml:space="preserve">
          <source>ModelSchema::ClassMethods#quoted_table_name</source>
          <target state="translated">ModelSchema::ClassMethods#quoted_table_name</target>
        </trans-unit>
        <trans-unit id="34aa90a1129948e9f4a0488047f67ef89969c5fc" translate="yes" xml:space="preserve">
          <source>ModelSchema::ClassMethods#reset_column_information</source>
          <target state="translated">ModelSchema::ClassMethods#reset_column_information</target>
        </trans-unit>
        <trans-unit id="4ec0770a96fdf697248442b1010e45ec5cc2648a" translate="yes" xml:space="preserve">
          <source>ModelSchema::ClassMethods#sequence_name</source>
          <target state="translated">ModelSchema::ClassMethods#sequence_name</target>
        </trans-unit>
        <trans-unit id="8aac7e2479a471101f94603dc47c6282e17718d1" translate="yes" xml:space="preserve">
          <source>ModelSchema::ClassMethods#sequence_name=</source>
          <target state="translated">ModelSchema::ClassMethods#sequence_name=</target>
        </trans-unit>
        <trans-unit id="32b16c33fdddfbf58ef1861aeb3e5fa24adc6132" translate="yes" xml:space="preserve">
          <source>ModelSchema::ClassMethods#table_exists?</source>
          <target state="translated">ModelSchema::ClassMethods#table_exists?</target>
        </trans-unit>
        <trans-unit id="2daf3196846b82ba6ce8254246befb81255884e0" translate="yes" xml:space="preserve">
          <source>ModelSchema::ClassMethods#table_name</source>
          <target state="translated">ModelSchema::ClassMethods#table_name</target>
        </trans-unit>
        <trans-unit id="17d64cbc84f6a89f2fb5594f6be6487222648148" translate="yes" xml:space="preserve">
          <source>ModelSchema::ClassMethods#table_name=</source>
          <target state="translated">ModelSchema::ClassMethods#table_name=</target>
        </trans-unit>
        <trans-unit id="b7be56821c21245487af1e9e89268a7fa3a26889" translate="yes" xml:space="preserve">
          <source>ModelSchema::ClassMethods#type_for_attribute</source>
          <target state="translated">ModelSchema::ClassMethods#type_for_attribute</target>
        </trans-unit>
        <trans-unit id="1bece6f5eaebefa7dd968a26fca03b1c68c0cca3" translate="yes" xml:space="preserve">
          <source>ModelSchema::implicit_order_column</source>
          <target state="translated">ModelSchema::implicit_order_column</target>
        </trans-unit>
        <trans-unit id="fb87d535030cc77f6eea99000bb3cea45e1edc55" translate="yes" xml:space="preserve">
          <source>ModelSchema::implicit_order_column=</source>
          <target state="translated">ModelSchema::implicit_order_column=</target>
        </trans-unit>
        <trans-unit id="431e95ad2f8f90f99412581d3cd5dfe16abee564" translate="yes" xml:space="preserve">
          <source>ModelSchema::internal_metadata_table_name</source>
          <target state="translated">ModelSchema::internal_metadata_table_name</target>
        </trans-unit>
        <trans-unit id="98b6b1f31f822ce45ba0cb29e89ac6123c8d48f4" translate="yes" xml:space="preserve">
          <source>ModelSchema::internal_metadata_table_name=</source>
          <target state="translated">ModelSchema::internal_metadata_table_name=</target>
        </trans-unit>
        <trans-unit id="8590c49fd4bb679ea3badb5e84d0a0953bbbd833" translate="yes" xml:space="preserve">
          <source>ModelSchema::pluralize_table_names</source>
          <target state="translated">ModelSchema::pluralize_table_names</target>
        </trans-unit>
        <trans-unit id="ebcf9310ab2b6b0318d091ceb7b1c703c0ac45b7" translate="yes" xml:space="preserve">
          <source>ModelSchema::pluralize_table_names=</source>
          <target state="translated">ModelSchema::pluralize_table_names=</target>
        </trans-unit>
        <trans-unit id="b43262e7c70a6f23fc2c45ec6b8a726355f76039" translate="yes" xml:space="preserve">
          <source>ModelSchema::primary_key_prefix_type</source>
          <target state="translated">ModelSchema::primary_key_prefix_type</target>
        </trans-unit>
        <trans-unit id="6c1cb907a3190d2cb95d00e64613bae792025c7c" translate="yes" xml:space="preserve">
          <source>ModelSchema::primary_key_prefix_type=</source>
          <target state="translated">ModelSchema::primary_key_prefix_type=</target>
        </trans-unit>
        <trans-unit id="de67ebceb5546c59b706f434213517811df93916" translate="yes" xml:space="preserve">
          <source>ModelSchema::schema_migrations_table_name</source>
          <target state="translated">ModelSchema::schema_migrations_table_name</target>
        </trans-unit>
        <trans-unit id="39ef611dd8b38aff324d220142a154c1bc699e95" translate="yes" xml:space="preserve">
          <source>ModelSchema::schema_migrations_table_name=</source>
          <target state="translated">ModelSchema::schema_migrations_table_name=</target>
        </trans-unit>
        <trans-unit id="a9efeee47a5a06ca364ef4cb85ffe51ec9687c6d" translate="yes" xml:space="preserve">
          <source>ModelSchema::table_name_prefix</source>
          <target state="translated">ModelSchema::table_name_prefix</target>
        </trans-unit>
        <trans-unit id="8f5e531aa919cbc02fa58144c8b391e2dc8af1fa" translate="yes" xml:space="preserve">
          <source>ModelSchema::table_name_prefix=</source>
          <target state="translated">ModelSchema::table_name_prefix=</target>
        </trans-unit>
        <trans-unit id="6c66134e0c6448bba29b0fc5c80c6bc88daf08db" translate="yes" xml:space="preserve">
          <source>ModelSchema::table_name_suffix</source>
          <target state="translated">ModelSchema::table_name_suffix</target>
        </trans-unit>
        <trans-unit id="33b6803388ddcb50e4870abc9e5cad2d62b56c1d" translate="yes" xml:space="preserve">
          <source>ModelSchema::table_name_suffix=</source>
          <target state="translated">ModelSchema::table_name_suffix=</target>
        </trans-unit>
        <trans-unit id="f3798f81c7b6fecad2cbfec741314f8a66c0eca3" translate="yes" xml:space="preserve">
          <source>Models</source>
          <target state="translated">Models</target>
        </trans-unit>
        <trans-unit id="30f7aa9f7fd11d6341a4cf482eb7088bbc806644" translate="yes" xml:space="preserve">
          <source>Models in Rails use a singular name, and their corresponding database tables use a plural name. Rails provides a generator for creating models, which most Rails developers tend to use when creating new models. To create the new model, run this command in your terminal:</source>
          <target state="translated">Rails中的模型使用单数名称,其对应的数据库表使用复数名称。Rails提供了一个创建模型的生成器,大多数Rails开发人员在创建新模型时往往会使用这个生成器。要创建新的模型,请在终端运行这个命令。</target>
        </trans-unit>
        <trans-unit id="212e02f4daf070220d134976d698fbfd6435b031" translate="yes" xml:space="preserve">
          <source>Models uploaded files.</source>
          <target state="translated">模型上传的文件。</target>
        </trans-unit>
        <trans-unit id="e3ea079ded57effba0d3c11311c33855f14ee35e" translate="yes" xml:space="preserve">
          <source>Modification</source>
          <target state="translated">Modification</target>
        </trans-unit>
        <trans-unit id="2625f3c6940984f6f3e4268c2479f099c0bbd324" translate="yes" xml:space="preserve">
          <source>Modifying code is generally straightforward. If you have a line of code that refers to a Rails framework such as &lt;code&gt;ActiveRecord::Base&lt;/code&gt; you can wrap that code in an &lt;code&gt;on_load&lt;/code&gt; hook.</source>
          <target state="translated">修改代码通常很简单。如果您有一行代码引用诸如 &lt;code&gt;ActiveRecord::Base&lt;/code&gt; 类的Rails框架，则可以将该代码包装在 &lt;code&gt;on_load&lt;/code&gt; 挂钩中。</target>
        </trans-unit>
        <trans-unit id="0b313c3c2650f892a30a82cbbbbfb0962b6ae7b5" translate="yes" xml:space="preserve">
          <source>Modifying code to use &lt;code&gt;on_load&lt;/code&gt; hooks</source>
          <target state="translated">修改代码以使用 &lt;code&gt;on_load&lt;/code&gt; 挂钩</target>
        </trans-unit>
        <trans-unit id="b8ff02892916ff59f7fbd4e617fccd01f6bca576" translate="yes" xml:space="preserve">
          <source>Module</source>
          <target state="translated">Module</target>
        </trans-unit>
        <trans-unit id="35f34b19ff60e68c68b8e81cf54c250dd275712f" translate="yes" xml:space="preserve">
          <source>Module::Concerning</source>
          <target state="translated">Module::Concerning</target>
        </trans-unit>
        <trans-unit id="9d4eba0f3d95edee88947f6d524fd5959c3a0997" translate="yes" xml:space="preserve">
          <source>Module::DelegationError</source>
          <target state="translated">Module::DelegationError</target>
        </trans-unit>
        <trans-unit id="04e9462c0ff02bb9032b92abd45881a3c7e15fb7" translate="yes" xml:space="preserve">
          <source>Modules</source>
          <target state="translated">Modules</target>
        </trans-unit>
        <trans-unit id="ec0f10698082c93db66cc3bacc7c4262043d5c37" translate="yes" xml:space="preserve">
          <source>Monitor</source>
          <target state="translated">Monitor</target>
        </trans-unit>
        <trans-unit id="541d63743d11a8fb491dae7ec4b904d23e530d3d" translate="yes" xml:space="preserve">
          <source>More Complete Examples</source>
          <target state="translated">更完整的例子</target>
        </trans-unit>
        <trans-unit id="ba917a0f4aba99c86e775d91895afeb4b93ff99a" translate="yes" xml:space="preserve">
          <source>More advanced use of the command line is focused around finding useful (even surprising at times) options in the utilities, and fitting those to your needs and specific work flow. Listed here are some tricks up Rails' sleeve.</source>
          <target state="translated">更高级的命令行使用集中于在实用程序中找到有用的(有时甚至是令人惊讶的)选项,并将这些选项适合你的需求和特定的工作流程。以下是Rails的一些技巧。</target>
        </trans-unit>
        <trans-unit id="383f0e0e882a4dc2683b66372e6aa52e3a75f04b" translate="yes" xml:space="preserve">
          <source>More examples</source>
          <target state="translated">更多例子</target>
        </trans-unit>
        <trans-unit id="80a6b992b86c1ba7e1983d83fe134aaae1109b0e" translate="yes" xml:space="preserve">
          <source>More information about migrations can be found in the &lt;a href=&quot;active_record_migrations&quot;&gt;Migrations&lt;/a&gt; guide.</source>
          <target state="translated">有关迁移的更多信息，请参见《&lt;a href=&quot;active_record_migrations&quot;&gt;迁移&lt;/a&gt;指南》。</target>
        </trans-unit>
        <trans-unit id="b6053fd77164aa71fabc62e1525d3a4af41ecd65" translate="yes" xml:space="preserve">
          <source>More information can be found in &lt;a href=&quot;core/classmethods#method-i-set&quot;&gt;ActiveJob::Core::ClassMethods#set&lt;/a&gt;</source>
          <target state="translated">可以在&lt;a href=&quot;core/classmethods#method-i-set&quot;&gt;ActiveJob :: Core :: ClassMethods＃set中&lt;/a&gt;找到更多信息。</target>
        </trans-unit>
        <trans-unit id="1a85b705b6839888932e068d061c266aa144e7aa" translate="yes" xml:space="preserve">
          <source>More precisely, if the web server is running and application files have been modified, Rails unloads all autoloaded constants just before the next request is processed. That way, application classes or modules used during that request are going to be autoloaded, thus picking up their current implementation in the file system.</source>
          <target state="translated">更准确地说,如果Web服务器正在运行,并且应用程序文件已经被修改,Rails会在处理下一个请求之前卸载所有自动加载的常量。这样一来,在该请求中使用的应用类或模块就会被自动加载,从而在文件系统中获取它们当前的实现。</target>
        </trans-unit>
        <trans-unit id="3a7a86c3c7bb6f061ed4b7dd4612a07ea2e55494" translate="yes" xml:space="preserve">
          <source>More reading:</source>
          <target state="translated">更多的阅读。</target>
        </trans-unit>
        <trans-unit id="1bc0107abee30f824ef23a770858703e03f38a74" translate="yes" xml:space="preserve">
          <source>Moreover, &lt;code&gt;Kernel#require&lt;/code&gt; loads files once, but development is much more smooth if code gets refreshed when it changes without restarting the server. It would be nice to be able to use &lt;code&gt;Kernel#load&lt;/code&gt; in development, and &lt;code&gt;Kernel#require&lt;/code&gt; in production.</source>
          <target state="translated">而且， &lt;code&gt;Kernel#require&lt;/code&gt; 一次加载文件，但是如果更改代码而无需重新启动服务器就可以刷新代码，则开发会更加顺畅。能够在开发中使用 &lt;code&gt;Kernel#load&lt;/code&gt; ，在生产中使用 &lt;code&gt;Kernel#require&lt;/code&gt; 会很好。</target>
        </trans-unit>
        <trans-unit id="d327e6ec6a6af69476c66c4050cf30edbe14a000" translate="yes" xml:space="preserve">
          <source>Moreover, it gracefully handles module dependencies. Given a &lt;code&gt;Foo&lt;/code&gt; module and a &lt;code&gt;Bar&lt;/code&gt; module which depends on the former, we would typically write the following:</source>
          <target state="translated">而且，它可以优雅地处理模块依赖性。给定一个依赖于前者的 &lt;code&gt;Foo&lt;/code&gt; 模块和 &lt;code&gt;Bar&lt;/code&gt; 模块，我们通常将编写以下内容：</target>
        </trans-unit>
        <trans-unit id="1336dbab8404ab8354f8b7e595d9f9da94e52e6a" translate="yes" xml:space="preserve">
          <source>Moreover, since the test class extends from &lt;code&gt;ActionView::TestCase&lt;/code&gt;, you have access to Rails' helper methods such as &lt;code&gt;link_to&lt;/code&gt; or &lt;code&gt;pluralize&lt;/code&gt;.</source>
          <target state="translated">此外，由于测试类是从 &lt;code&gt;ActionView::TestCase&lt;/code&gt; 扩展而来的，因此您可以访问Rails的帮助器方法，例如 &lt;code&gt;link_to&lt;/code&gt; 或 &lt;code&gt;pluralize&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="88b40b9cf93fa0667fdbc7fa5d068e722af43930" translate="yes" xml:space="preserve">
          <source>Most CDNs will cache contents of an asset based on the complete URL. This means that a request to</source>
          <target state="translated">大多数CDN会根据完整的URL来缓存资产的内容。这意味着,一个对</target>
        </trans-unit>
        <trans-unit id="f008a7d63f26d69778b0b37e05dd3fcfe81eed47" translate="yes" xml:space="preserve">
          <source>Most WYSIWYG editors are wrappers around HTML&amp;rsquo;s &lt;code&gt;contenteditable&lt;/code&gt; and &lt;code&gt;execCommand&lt;/code&gt; APIs, designed by Microsoft to support live editing of web pages in Internet Explorer 5.5, and &lt;a href=&quot;https://blog.whatwg.org/the-road-to-html-5-contenteditable#history&quot;&gt;eventually reverse-engineered&lt;/a&gt; and copied by other browsers.</source>
          <target state="translated">大多数WYSIWYG编辑器都是HTML的 &lt;code&gt;contenteditable&lt;/code&gt; 和 &lt;code&gt;execCommand&lt;/code&gt; API的包装，这些API由Microsoft设计，以支持Internet Explorer 5.5中的网页的实时编辑，并&lt;a href=&quot;https://blog.whatwg.org/the-road-to-html-5-contenteditable#history&quot;&gt;最终&lt;/a&gt;由其他浏览器进行反向工程和复制。</target>
        </trans-unit>
        <trans-unit id="ab978ad55eb3ed14757f1864bfc815a255aea29c" translate="yes" xml:space="preserve">
          <source>Most applications need to keep track of state for users that interact with the application. This could be the contents of a shopping basket, or the user id of the currently logged in user. This kind of user-specific state can be stored in the session.</source>
          <target state="translated">大多数应用程序都需要跟踪与应用程序交互的用户的状态,这可能是购物篮的内容,或当前登录用户的用户ID。这可能是购物篮的内容,或者是当前登录用户的用户ID。这种用户特定的状态可以存储在会话中。</target>
        </trans-unit>
        <trans-unit id="133d632a5c7bc56c3f2c19e3db9d200e367fc939" translate="yes" xml:space="preserve">
          <source>Most bots are really dumb. They crawl the web and put their spam into every form's field they can find. Negative CAPTCHAs take advantage of that and include a &quot;honeypot&quot; field in the form which will be hidden from the human user by CSS or JavaScript.</source>
          <target state="translated">大多数机器人真的很笨。它们会在网络上爬行,并把它们的垃圾邮件放到它们能找到的每一个表单的字段中。负面验证码利用了这一点,在表单中包含了一个 &quot;蜜罐 &quot;字段,它将通过CSS或JavaScript对人类用户进行隐藏。</target>
        </trans-unit>
        <trans-unit id="bf0776721a91b86a474e68e52f939aa617b046e9" translate="yes" xml:space="preserve">
          <source>Most commonly, the streamed broadcast is sent straight to the subscriber on the client-side. The channel just acts as a connector between the two parties (the broadcaster and the channel subscriber). Here's an example of a channel that allows subscribers to get all new comments on a given page:</source>
          <target state="translated">最常见的是,流媒体广播是直接发送到客户端的用户。频道只是作为双方(广播者和频道订阅者)之间的连接器。下面是一个频道的例子,它可以让订阅者获得某个页面上的所有新评论。</target>
        </trans-unit>
        <trans-unit id="6bc330b7ded91a1d90bd743f5169cca15ece50bb" translate="yes" xml:space="preserve">
          <source>Most databases don't support true nested transactions. At the time of writing, the only database that supports true nested transactions that we're aware of, is MS-SQL.</source>
          <target state="translated">大多数数据库不支持真正的嵌套事务。在写这篇文章的时候,据我们所知,唯一支持真正嵌套事务的数据库是MS-SQL。</target>
        </trans-unit>
        <trans-unit id="58ceee0a51c6eda13292b80b4053139906be4f6b" translate="yes" xml:space="preserve">
          <source>Most databases don't support true nested transactions. At the time of writing, the only database that we're aware of that supports true nested transactions, is MS-SQL. Because of this, Active Record emulates nested transactions by using savepoints on MySQL and PostgreSQL. See &lt;a href=&quot;https://dev.mysql.com/doc/refman/5.7/en/savepoint.html&quot;&gt;dev.mysql.com/doc/refman/5.7/en/savepoint.html&lt;/a&gt; for more information about savepoints.</source>
          <target state="translated">大多数数据库不支持真正的嵌套事务。在撰写本文时，我们知道的唯一支持真正的嵌套事务的数据库是MS-SQL。因此，Active Record通过在MySQL和PostgreSQL上使用保存点来模拟嵌套事务。有关保存点的更多信息，请参见&lt;a href=&quot;https://dev.mysql.com/doc/refman/5.7/en/savepoint.html&quot;&gt;dev.mysql.com/doc/refman/5.7/en/savepoint.html&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="523cf2e23b0af5d149ca0c1cf81d6fcdfeb6bb03" translate="yes" xml:space="preserve">
          <source>Most important of these are of course the controller, located at &lt;code&gt;app/controllers/welcome_controller.rb&lt;/code&gt; and the view, located at &lt;code&gt;app/views/welcome/index.html.erb&lt;/code&gt;.</source>
          <target state="translated">其中最重要的当然是位于 &lt;code&gt;app/controllers/welcome_controller.rb&lt;/code&gt; 的控制器和位于 &lt;code&gt;app/views/welcome/index.html.erb&lt;/code&gt; 的视图。</target>
        </trans-unit>
        <trans-unit id="206cc7806b5824567f552027393f40e4e3d5b31f" translate="yes" xml:space="preserve">
          <source>Most likely your application is going to contain bugs or otherwise throw an exception that needs to be handled. For example, if the user follows a link to a resource that no longer exists in the database, Active Record will throw the &lt;code&gt;ActiveRecord::RecordNotFound&lt;/code&gt; exception.</source>
          <target state="translated">您的应用程序很可能会包含错误或以其他方式引发需要处理的异常。例如，如果用户跟踪到数据库中不再存在的资源的链接，则Active Record将抛出 &lt;code&gt;ActiveRecord::RecordNotFound&lt;/code&gt; 异常。</target>
        </trans-unit>
        <trans-unit id="1d53cfefc19e9e67195ba8f79217ade0838cd9b3" translate="yes" xml:space="preserve">
          <source>Most methods expect a &lt;code&gt;number&lt;/code&gt; argument, and will return it unchanged if can't be converted into a valid number.</source>
          <target state="translated">大多数方法都希望使用 &lt;code&gt;number&lt;/code&gt; 参数，如果无法将其转换为有效数字，则会返回原样。</target>
        </trans-unit>
        <trans-unit id="eccfd56b24b3d8bc52ff7d0ed06cbf4578f063b0" translate="yes" xml:space="preserve">
          <source>Most of the adapters support multiple queues. With Active Job you can schedule the job to run on a specific queue:</source>
          <target state="translated">大多数适配器支持多个队列。使用Active Job,您可以将作业安排在特定队列上运行。</target>
        </trans-unit>
        <trans-unit id="fee7e8c5aedcd813f43d22b5dfb2bc83dced0847" translate="yes" xml:space="preserve">
          <source>Most of the methods in the adapter are useful during migrations. Most notably, the instance methods provided by &lt;a href=&quot;schemastatements&quot;&gt;SchemaStatements&lt;/a&gt; are very useful.</source>
          <target state="translated">适配器中的大多数方法在迁移期间很有用。最值得注意的是，&lt;a href=&quot;schemastatements&quot;&gt;SchemaStatements&lt;/a&gt;提供的实例方法非常有用。</target>
        </trans-unit>
        <trans-unit id="48b34b3aab7d85bd74d4b838155569578ab804d8" translate="yes" xml:space="preserve">
          <source>Most of the queries here are happening in the controller. In order to benefit from streaming you would want to rewrite it as:</source>
          <target state="translated">这里的大部分查询都发生在控制器中。为了从流媒体中获益,你会想把它重写成:。</target>
        </trans-unit>
        <trans-unit id="497bca5cc5e9c844d37444e5315fa4c8d45fc350" translate="yes" xml:space="preserve">
          <source>Most people don't clear out the cookies after working at a public terminal. So if the last user didn't log out of a web application, you would be able to use it as this user. Provide the user with a &lt;em&gt;log-out button&lt;/em&gt; in the web application, and &lt;em&gt;make it prominent&lt;/em&gt;.</source>
          <target state="translated">在公共终端工作后，大多数人不会清除cookie。因此，如果最后一个用户没有注销Web应用程序，则可以以该用户的身份使用它。为用户提供Web应用程序中的&lt;em&gt;注销按钮&lt;/em&gt;，并&lt;em&gt;使其突出显示&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="571b335d230721224ba2cc7dd94150881d920e90" translate="yes" xml:space="preserve">
          <source>Most template dependencies can be derived from calls to &lt;code&gt;render&lt;/code&gt; in the template itself. Here are some examples of render calls that &lt;code&gt;ActionView::Digestor&lt;/code&gt; knows how to decode:</source>
          <target state="translated">大多数模板依赖项可以从对模板本身进行 &lt;code&gt;render&lt;/code&gt; 调用中得出。以下是一些 &lt;code&gt;ActionView::Digestor&lt;/code&gt; 知道如何解码的渲染调用示例：</target>
        </trans-unit>
        <trans-unit id="5e4bf900addd8f529d8a91a4897d35ae99eedb25" translate="yes" xml:space="preserve">
          <source>Most template dependencies can be derived from calls to render in the template itself. Here are some examples of render calls that Cache Digests knows how to decode:</source>
          <target state="translated">大部分的模板依赖性都可以从模板本身的render调用中得到。下面是一些Cache Digests知道如何解码的渲染调用的例子。</target>
        </trans-unit>
        <trans-unit id="b723d7488a6748257fd951690affee4ed1b12a30" translate="yes" xml:space="preserve">
          <source>Most text helpers that generate HTML output sanitize the given input by default, but do not escape it. This means HTML tags will appear in the page but all malicious code will be removed. Let's look at some examples using the &lt;code&gt;simple_format&lt;/code&gt; method:</source>
          <target state="translated">默认情况下，大多数生成HTML输出的文本助手都会清理给定的输入，但不会对其进行转义。这意味着HTML标记将出现在页面中，但是所有恶意代码都将被删除。让我们来看一些使用 &lt;code&gt;simple_format&lt;/code&gt; 方法的示例：</target>
        </trans-unit>
        <trans-unit id="6c4acaae05139d290e7eb7c3702ecdfb4740715e" translate="yes" xml:space="preserve">
          <source>Most times you only care about the data itself. Here is a shortcut to just get the data.</source>
          <target state="translated">大多数时候你只关心数据本身。这里有一个捷径,只需获取数据即可。</target>
        </trans-unit>
        <trans-unit id="5be95de95c3a694cdfaa9b01f941d8b4d82957f5" translate="yes" xml:space="preserve">
          <source>Mount a Rack-based application to be used within the application.</source>
          <target state="translated">挂载一个基于机架的应用程序,以便在应用程序中使用。</target>
        </trans-unit>
        <trans-unit id="e66103f0e1c609f714c07a70bc4e128e09dc1a34" translate="yes" xml:space="preserve">
          <source>Mount priority</source>
          <target state="translated">挂载优先权</target>
        </trans-unit>
        <trans-unit id="65e4ece6255d32204ed3ced596b87d73f3245e49" translate="yes" xml:space="preserve">
          <source>Mounting the Engine</source>
          <target state="translated">安装发动机</target>
        </trans-unit>
        <trans-unit id="68e27a2147826a19a93ca554aefc33b75b0f0e77" translate="yes" xml:space="preserve">
          <source>Move to the latest patch version after your current version.</source>
          <target state="translated">移动到最新的补丁版本后,你当前的版本。</target>
        </trans-unit>
        <trans-unit id="69755f4dfaa3969fcb5b25c274c95fbd2193790b" translate="yes" xml:space="preserve">
          <source>Move to the latest patch version of the next minor version.</source>
          <target state="translated">移动到下一个小版本的最新补丁版本。</target>
        </trans-unit>
        <trans-unit id="4f2a29dbde4926cfbfe6b23506f21556494d10f9" translate="yes" xml:space="preserve">
          <source>Much like &lt;code&gt;form_with&lt;/code&gt; a &lt;a href=&quot;formbuilder&quot;&gt;FormBuilder&lt;/a&gt; instance associated with the scope or model is yielded, so any generated field names are prefixed with either the passed scope or the scope inferred from the &lt;code&gt;:model&lt;/code&gt;.</source>
          <target state="translated">与产生与范围或模型关联的&lt;a href=&quot;formbuilder&quot;&gt;FormBuilder&lt;/a&gt;实例的 &lt;code&gt;form_with&lt;/code&gt; 非常相似，因此任何生成的字段名称都以传递的范围或从 &lt;code&gt;:model&lt;/code&gt; 推断的范围为前缀。</target>
        </trans-unit>
        <trans-unit id="4c669cfe6f565d5e96b459b6a859e113771af92a" translate="yes" xml:space="preserve">
          <source>Much of Action Controller's functionality is implemented as Middlewares. The following list explains the purpose of each of them:</source>
          <target state="translated">Action Controller的大部分功能都是以中间件的形式实现的。下面的列表解释了每个中间件的目的。</target>
        </trans-unit>
        <trans-unit id="fdad3ac6d447afe1cd48c10de24f4c825fd91666" translate="yes" xml:space="preserve">
          <source>MultiJSON has reached its &lt;a href=&quot;https://github.com/rails/rails/pull/10576&quot;&gt;end-of-life&lt;/a&gt; and has been removed from Rails.</source>
          <target state="translated">MultiJSON已到&lt;a href=&quot;https://github.com/rails/rails/pull/10576&quot;&gt;使用寿命&lt;/a&gt;，并且已从Rails中删除。</target>
        </trans-unit>
        <trans-unit id="577e584a04dfea954500058f69395d5b90b186e3" translate="yes" xml:space="preserve">
          <source>Multibyte</source>
          <target state="translated">Multibyte</target>
        </trans-unit>
        <trans-unit id="44b3146bc43b4204d4d02b6c17400bdc44be353f" translate="yes" xml:space="preserve">
          <source>Multibyte proxy</source>
          <target state="translated">多字节代理</target>
        </trans-unit>
        <trans-unit id="dbfe775843033ba1d1d04a0b95553ec396faea3b" translate="yes" xml:space="preserve">
          <source>Multibyte::Chars</source>
          <target state="translated">Multibyte::Chars</target>
        </trans-unit>
        <trans-unit id="a77c779095fcad786d63d02ed4f10da364a918f8" translate="yes" xml:space="preserve">
          <source>Multibyte::Chars#compose</source>
          <target state="translated">Multibyte::Chars#compose</target>
        </trans-unit>
        <trans-unit id="3a71236f57c99aa27508902711cb5b914367a5af" translate="yes" xml:space="preserve">
          <source>Multibyte::Chars#decompose</source>
          <target state="translated">Multibyte::Chars#decompose</target>
        </trans-unit>
        <trans-unit id="c3aed8a0bd7f2e27cc61c4584bdef95c2754574b" translate="yes" xml:space="preserve">
          <source>Multibyte::Chars#grapheme_length</source>
          <target state="translated">Multibyte::Chars#grapheme_length</target>
        </trans-unit>
        <trans-unit id="2cb346ad51d1b8e1ab5d6fdd3b0e315e78fe54d3" translate="yes" xml:space="preserve">
          <source>Multibyte::Chars#limit</source>
          <target state="translated">Multibyte::Chars#limit</target>
        </trans-unit>
        <trans-unit id="edb500693690502b4ce906e2d6de066647b583de" translate="yes" xml:space="preserve">
          <source>Multibyte::Chars#method_missing</source>
          <target state="translated">Multibyte::Chars#method_missing</target>
        </trans-unit>
        <trans-unit id="c9aff960c5a6365bbe220c67d92ca35bf231b25f" translate="yes" xml:space="preserve">
          <source>Multibyte::Chars#normalize</source>
          <target state="translated">Multibyte::Chars#normalize</target>
        </trans-unit>
        <trans-unit id="61fd0c3d0704b5be2b2ddc64f01f05d3cdfae11e" translate="yes" xml:space="preserve">
          <source>Multibyte::Chars#respond_to_missing?</source>
          <target state="translated">Multibyte::Chars#respond_to_missing?</target>
        </trans-unit>
        <trans-unit id="fcac9f6b46e0d66cd3b2e48b54cb4838d98b1d70" translate="yes" xml:space="preserve">
          <source>Multibyte::Chars#reverse</source>
          <target state="translated">Multibyte::Chars#reverse</target>
        </trans-unit>
        <trans-unit id="29c57575d0fe497cfc6df410d77261ee859bff5c" translate="yes" xml:space="preserve">
          <source>Multibyte::Chars#slice!</source>
          <target state="translated">Multibyte::Chars#slice!</target>
        </trans-unit>
        <trans-unit id="60924aa309b322723072e8b5d1d25f3bfc84f185" translate="yes" xml:space="preserve">
          <source>Multibyte::Chars#split</source>
          <target state="translated">Multibyte::Chars#split</target>
        </trans-unit>
        <trans-unit id="c54415b49d5dd255e971711f05c0921ca91f9567" translate="yes" xml:space="preserve">
          <source>Multibyte::Chars#tidy_bytes</source>
          <target state="translated">Multibyte::Chars#tidy_bytes</target>
        </trans-unit>
        <trans-unit id="5696a1b68036edfea1149f28955c5171aaa066dd" translate="yes" xml:space="preserve">
          <source>Multibyte::Chars#titlecase</source>
          <target state="translated">Multibyte::Chars#titlecase</target>
        </trans-unit>
        <trans-unit id="29562d818637c005447d41a14c53e35ca819d736" translate="yes" xml:space="preserve">
          <source>Multibyte::Chars#titleize</source>
          <target state="translated">Multibyte::Chars#titleize</target>
        </trans-unit>
        <trans-unit id="3c0ba0b40fbfb06c8ff8eb5ac6b1a814a13abe65" translate="yes" xml:space="preserve">
          <source>Multibyte::Chars#to_s</source>
          <target state="translated">Multibyte::Chars#to_s</target>
        </trans-unit>
        <trans-unit id="4e507c3e7ade2459ad387acbc199ef65753f44e1" translate="yes" xml:space="preserve">
          <source>Multibyte::Chars#to_str</source>
          <target state="translated">Multibyte::Chars#to_str</target>
        </trans-unit>
        <trans-unit id="e0852a435607775956151f2d12a44d374e367131" translate="yes" xml:space="preserve">
          <source>Multibyte::Chars#wrapped_string</source>
          <target state="translated">Multibyte::Chars#wrapped_string</target>
        </trans-unit>
        <trans-unit id="f1b49e7f7cacefac11c721baed55601e72598ac0" translate="yes" xml:space="preserve">
          <source>Multibyte::Chars::consumes?</source>
          <target state="translated">Multibyte::Chars::consumes?</target>
        </trans-unit>
        <trans-unit id="25b5a149fcfab95d5e9ac1f6c3bc6b238d1a76b6" translate="yes" xml:space="preserve">
          <source>Multibyte::Chars::new</source>
          <target state="translated">Multibyte::Chars::new</target>
        </trans-unit>
        <trans-unit id="dd207e116a1881d14e8755e2dd8afad68ca66404" translate="yes" xml:space="preserve">
          <source>Multibyte::Unicode</source>
          <target state="translated">Multibyte::Unicode</target>
        </trans-unit>
        <trans-unit id="99e5ba7441254093fd472ba8b48bd5cf04210a9c" translate="yes" xml:space="preserve">
          <source>Multibyte::Unicode#compose</source>
          <target state="translated">Multibyte::Unicode#compose</target>
        </trans-unit>
        <trans-unit id="6a9bf80aa3e8755c3b8785c2e82d94106dafbbea" translate="yes" xml:space="preserve">
          <source>Multibyte::Unicode#decompose</source>
          <target state="translated">Multibyte::Unicode#decompose</target>
        </trans-unit>
        <trans-unit id="3ab6d7fd74955bfcdd88d1183d496821920971c7" translate="yes" xml:space="preserve">
          <source>Multibyte::Unicode#default_normalization_form</source>
          <target state="translated">Multibyte::Unicode#default_normalization_form</target>
        </trans-unit>
        <trans-unit id="2f590db3a14c669921995363de50c9aa7b62f029" translate="yes" xml:space="preserve">
          <source>Multibyte::Unicode#normalize</source>
          <target state="translated">Multibyte::Unicode#normalize</target>
        </trans-unit>
        <trans-unit id="497c9088f01c7ac11114f3ce775aac42f7b50b8c" translate="yes" xml:space="preserve">
          <source>Multibyte::Unicode#pack_graphemes</source>
          <target state="translated">Multibyte::Unicode#pack_graphemes</target>
        </trans-unit>
        <trans-unit id="93ea9b938b0c09536d97df26cee8e9d7797e904e" translate="yes" xml:space="preserve">
          <source>Multibyte::Unicode#tidy_bytes</source>
          <target state="translated">Multibyte::Unicode#tidy_bytes</target>
        </trans-unit>
        <trans-unit id="f24dbeb8438b74efbec9b1765decb2e0a554ecd2" translate="yes" xml:space="preserve">
          <source>Multibyte::Unicode#unpack_graphemes</source>
          <target state="translated">Multibyte::Unicode#unpack_graphemes</target>
        </trans-unit>
        <trans-unit id="8478db7c1329df5939eeb843202273bc3ca6f4fd" translate="yes" xml:space="preserve">
          <source>Multibyte::proxy_class</source>
          <target state="translated">Multibyte::proxy_class</target>
        </trans-unit>
        <trans-unit id="5b6a01d724fec572618c3d6bbaca05853b8359ee" translate="yes" xml:space="preserve">
          <source>Multibyte::proxy_class=</source>
          <target state="translated">Multibyte::proxy_class=</target>
        </trans-unit>
        <trans-unit id="1c0b905d64b0517973b54b47221309dc3ae10f49" translate="yes" xml:space="preserve">
          <source>Multipart Emails</source>
          <target state="translated">多段式电子邮件</target>
        </trans-unit>
        <trans-unit id="bb49c6706b5ec72ba15cb3e74cd18b230c613911" translate="yes" xml:space="preserve">
          <source>Multipart messages can also be used implicitly because Action Mailer will automatically detect and use multipart templates, where each template is named after the name of the action, followed by the content type. Each such detected template will be added to the message, as a separate part.</source>
          <target state="translated">多部分邮件也可以隐式使用,因为Action Mailer会自动检测和使用多部分模板,每个模板都以动作名称命名,然后是内容类型。每个这样的检测到的模板都会被添加到邮件中,作为一个单独的部分。</target>
        </trans-unit>
        <trans-unit id="5afb1cbb87b4c678f1749be244babe3f86a208c0" translate="yes" xml:space="preserve">
          <source>Multiple Applications</source>
          <target state="translated">多种应用</target>
        </trans-unit>
        <trans-unit id="be88eb95f46dc97a706ddd49f5cd1af0da18459d" translate="yes" xml:space="preserve">
          <source>Multiple Conditions for Callbacks</source>
          <target state="translated">回调的多个条件</target>
        </trans-unit>
        <trans-unit id="08c54482647fa51932f62b990e2f89b4da939bdd" translate="yes" xml:space="preserve">
          <source>Multiple Databases with Active Record</source>
          <target state="translated">多数据库与活动记录</target>
        </trans-unit>
        <trans-unit id="2f1749c5f39d08135c935affc6ac69182f5bb4c0" translate="yes" xml:space="preserve">
          <source>Multiple delegates to the same target are allowed:</source>
          <target state="translated">允许对同一目标进行多个委托。</target>
        </trans-unit>
        <trans-unit id="38f3de59be21ca6540293770d2cd9c3d3037f833" translate="yes" xml:space="preserve">
          <source>Multiple joins:</source>
          <target state="translated">多个附件。</target>
        </trans-unit>
        <trans-unit id="20aff80eb14d75fd5040fa242c1b2eceb165bbca" translate="yes" xml:space="preserve">
          <source>Multiple primary databases and a replica for each</source>
          <target state="translated">多个主数据库,每个数据库有一个副本。</target>
        </trans-unit>
        <trans-unit id="951e59425d6c39d5b290427731b5200017ee438a" translate="yes" xml:space="preserve">
          <source>Multiplies this &lt;a href=&quot;duration&quot;&gt;Duration&lt;/a&gt; by a &lt;a href=&quot;../numeric&quot;&gt;Numeric&lt;/a&gt; and returns a new &lt;a href=&quot;duration&quot;&gt;Duration&lt;/a&gt;.</source>
          <target state="translated">将此&lt;a href=&quot;duration&quot;&gt;持续时间&lt;/a&gt;乘以&lt;a href=&quot;../numeric&quot;&gt;数值，&lt;/a&gt;然后返回一个新的&lt;a href=&quot;duration&quot;&gt;Duration&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="05ad5edf0857ae96f7e8e591fea83fc0be2cbb1d" translate="yes" xml:space="preserve">
          <source>Mutator methods called on Relation</source>
          <target state="translated">在Relation上调用的Mutator方法</target>
        </trans-unit>
        <trans-unit id="04f6be056c62007ce171d677af3018f64ae6643c" translate="yes" xml:space="preserve">
          <source>MySQL doesn't support DDL transactions. If you perform a DDL operation, then any created savepoints will be automatically released. For example, if you've created a savepoint, then you execute a CREATE TABLE statement, then the savepoint that was created will be automatically released.</source>
          <target state="translated">MySQL不支持DDL事务。如果你执行了DDL操作,那么任何创建的保存点都会被自动释放。例如,如果你已经创建了一个保存点,然后执行CREATE TABLE语句,那么创建的保存点将被自动释放。</target>
        </trans-unit>
        <trans-unit id="27c321d50bbcd9b5772400c058a31390e2decc62" translate="yes" xml:space="preserve">
          <source>MySQL: &lt;a href=&quot;https://dev.mysql.com/doc/refman/5.7/en/explain-output.html&quot;&gt;EXPLAIN Output Format&lt;/a&gt;</source>
          <target state="translated">MySQL：&lt;a href=&quot;https://dev.mysql.com/doc/refman/5.7/en/explain-output.html&quot;&gt;EXPLAIN输出格式&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="09679f1a4e7693179ccf0966910ba55b4da55040" translate="yes" xml:space="preserve">
          <source>MySQL: &lt;code&gt;:precision&lt;/code&gt; [1..63], &lt;code&gt;:scale&lt;/code&gt; [0..30]. Default is (10,0).</source>
          <target state="translated">MySQL：： &lt;code&gt;:precision&lt;/code&gt; [1..63] 、 &lt;code&gt;:scale&lt;/code&gt; [0..30]。默认值为（10,0）。</target>
        </trans-unit>
        <trans-unit id="9f6ce4a25a9c51664b4dcdfc725f8eefd86a4c19" translate="yes" xml:space="preserve">
          <source>MySpace blocked many tags, but allowed CSS. So the worm's author put JavaScript into CSS like this:</source>
          <target state="translated">MySpace屏蔽了很多标签,但允许CSS。于是蠕虫的作者就把JavaScript放到了CSS中,就像这样。</target>
        </trans-unit>
        <trans-unit id="06ec39473e78b6ba391da473c04b8788442c949f" translate="yes" xml:space="preserve">
          <source>N/A: The adapter does not run in a separate process, and therefore doesn't support retries.</source>
          <target state="translated">N/A:适配器没有在单独的进程中运行,因此不支持重试。</target>
        </trans-unit>
        <trans-unit id="9089a789f0069c4bce0cc6730a22c574fd4aa9e0" translate="yes" xml:space="preserve">
          <source>N/A: The adapter does not support queuing, and therefore sorting them.</source>
          <target state="translated">不适用:适配器不支持排队,因此不支持对它们进行排序。</target>
        </trans-unit>
        <trans-unit id="a0fcee9ccee4f7f243b5a494a4b2459fafb9c16a" translate="yes" xml:space="preserve">
          <source>N/A: The adapter does not support queuing.</source>
          <target state="translated">不适用:适配器不支持排队。</target>
        </trans-unit>
        <trans-unit id="90355c194c9abb6ca5245c0286a948195ec867f6" translate="yes" xml:space="preserve">
          <source>N/A: This adapter does not run in a separate process, and therefore timeout is unsupported.</source>
          <target state="translated">N/A:该适配器不在单独的进程中运行,因此不支持超时。</target>
        </trans-unit>
        <trans-unit id="e0aabc7fc6e90c4c16eb42d4f9847ec6f8b51711" translate="yes" xml:space="preserve">
          <source>NAME_COMPILABLE_REGEXP</source>
          <target state="translated">NAME_COMPILABLE_REGEXP</target>
        </trans-unit>
        <trans-unit id="364b0ae6cebce8b9b4faf58d96a008e3e0acd1b0" translate="yes" xml:space="preserve">
          <source>NATIVE_DATABASE_TYPES</source>
          <target state="translated">NATIVE_DATABASE_TYPES</target>
        </trans-unit>
        <trans-unit id="34b8b86577c6bd56c6ad5b564be28cd2f908903d" translate="yes" xml:space="preserve">
          <source>NB: The output may still contain unescaped '&amp;lt;', '&amp;gt;', '&amp;amp;' characters and confuse browsers.</source>
          <target state="translated">注意：输出可能仍然包含未转义的'&amp;lt;'，'&amp;gt;'，'＆'字符，并使浏览器混乱。</target>
        </trans-unit>
        <trans-unit id="66aabd91fc41cc4635aad94dc77d93a0e2eac67b" translate="yes" xml:space="preserve">
          <source>NEW</source>
          <target state="translated">NEW</target>
        </trans-unit>
        <trans-unit id="dadac5bcf4c6b4db403b0dcea4d07dd23acca6ba" translate="yes" xml:space="preserve">
          <source>NORMALIZATION_FORMS</source>
          <target state="translated">NORMALIZATION_FORMS</target>
        </trans-unit>
        <trans-unit id="5050fdd648c2c3c100230e8520feff151e76b22f" translate="yes" xml:space="preserve">
          <source>NOT Conditions</source>
          <target state="translated">NOT条件</target>
        </trans-unit>
        <trans-unit id="6f4c044303492a84dc9ba161a054727b65adabe0" translate="yes" xml:space="preserve">
          <source>NOTE! Unless told otherwise, Rails expects an action to render a template with the same name, contained in a folder named after its controller. If this controller is an API responding with 204 (No Content), which does not require a template, then this error will occur when trying to access it via browser, since we expect an HTML template to be rendered for such requests. If that's the case, carry on.</source>
          <target state="translated">注意!除非另有说明,否则Rails期望动作会渲染一个同名的模板,该模板包含在以其控制器命名的文件夹中。如果这个控制器是一个响应204(No Content)的API,它不需要模板,那么当试图通过浏览器访问它时,就会出现这个错误,因为我们期望为这类请求渲染一个HTML模板。如果是这样的话,请继续。</target>
        </trans-unit>
        <trans-unit id="53c9b907d5e9772f96c352467530121723a24dcc" translate="yes" xml:space="preserve">
          <source>NOTE: &lt;a href=&quot;test&quot;&gt;Test&lt;/a&gt; adapter extends the &lt;code&gt;ActionCable::SubscriptionsAdapter::Async&lt;/code&gt; adapter, so it could be used in system tests too.</source>
          <target state="translated">注意：&lt;a href=&quot;test&quot;&gt;测试&lt;/a&gt;适配器扩展了 &lt;code&gt;ActionCable::SubscriptionsAdapter::Async&lt;/code&gt; 适配器，因此它也可以在系统测试中使用。</target>
        </trans-unit>
        <trans-unit id="82b300c91ff4f01a70796137110481c8c73e629a" translate="yes" xml:space="preserve">
          <source>NOTE: &lt;code&gt;method_name&lt;/code&gt; passed to &lt;a href=&quot;callbacks#method-i-define_model_callbacks&quot;&gt;#define_model_callbacks&lt;/a&gt; must not end with &lt;code&gt;!&lt;/code&gt;, &lt;code&gt;?&lt;/code&gt; or &lt;code&gt;=&lt;/code&gt;.</source>
          <target state="translated">注意：传递给&lt;a href=&quot;callbacks#method-i-define_model_callbacks&quot;&gt;#define_model_callbacks的&lt;/a&gt; &lt;code&gt;method_name&lt;/code&gt; 不能以 &lt;code&gt;!&lt;/code&gt; 结尾。， &lt;code&gt;?&lt;/code&gt; 或 &lt;code&gt;=&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="db0ce667a0ad77170e45745c759f9a92c263c9f7" translate="yes" xml:space="preserve">
          <source>NOTE: By its nature, batch processing is subject to race conditions if other processes are modifying the database.</source>
          <target state="translated">注意:就其性质而言,如果其他进程正在修改数据库,批处理会受到竞赛条件的影响。</target>
        </trans-unit>
        <trans-unit id="77b33c7bf4dc36bae9675fcf16d7f5676777c7ff" translate="yes" xml:space="preserve">
          <source>NOTE: Calling &lt;code&gt;validate&lt;/code&gt; multiple times on the same method will overwrite previous definitions.</source>
          <target state="translated">注意：在同一方法上多次调用 &lt;code&gt;validate&lt;/code&gt; 将覆盖以前的定义。</target>
        </trans-unit>
        <trans-unit id="c1244e2875a89e59d59e46c3fbb7b9c9041b6c73" translate="yes" xml:space="preserve">
          <source>NOTE: Calling the same callback multiple times will overwrite previous callback definitions.</source>
          <target state="translated">注意:多次调用同一个回调会覆盖之前的回调定义。</target>
        </trans-unit>
        <trans-unit id="459a5611b4fb3651cbcf5fb40048074d44f62f2e" translate="yes" xml:space="preserve">
          <source>NOTE: Discarded selects will default to 1. So if no month select is available, January will be assumed.</source>
          <target state="translated">注意:丢弃的选择将默认为1。因此,如果没有可用的月份选择,将假定为1月。</target>
        </trans-unit>
        <trans-unit id="35bb5d930d5344ab9c4661a4a291c03f392618bf" translate="yes" xml:space="preserve">
          <source>NOTE: Each nesting level will merge inherited defaults in addition to their own.</source>
          <target state="translated">注意:每个嵌套层除了自己的默认值外,还会合并继承的默认值。</target>
        </trans-unit>
        <trans-unit id="e780dd9cbb0eaceca23a69ca7ca982d3efb3e44a" translate="yes" xml:space="preserve">
          <source>NOTE: If you are going to iterate through each record, you should call each_record on the yielded BatchEnumerator:</source>
          <target state="translated">注意:如果你要遍历每条记录,你应该在产生的BatchEnumerator上调用each_record。</target>
        </trans-unit>
        <trans-unit id="9110f77a80c94aa7c9d01ac9563f7305028fc714" translate="yes" xml:space="preserve">
          <source>NOTE: If you are using structured database data types (eg. PostgreSQL &lt;code&gt;hstore&lt;/code&gt;/&lt;code&gt;json&lt;/code&gt;, or MySQL 5.7+ &lt;code&gt;json&lt;/code&gt;) there is no need for the serialization provided by .store. Simply use .store_accessor instead to generate the accessor methods. Be aware that these columns use a string keyed hash and do not allow access using a symbol.</source>
          <target state="translated">注意：如果您使用结构化数据库数据类型（例如PostgreSQL &lt;code&gt;hstore&lt;/code&gt; / &lt;code&gt;json&lt;/code&gt; 或MySQL 5.7+ &lt;code&gt;json&lt;/code&gt; ），则不需要.store 提供的序列化。只需使用.store_accessor即可生成访问器方法。请注意，这些列使用字符串键哈希，并且不允许使用符号进行访问。</target>
        </trans-unit>
        <trans-unit id="d5aa3f2e463dee8d6a93b822667caffdd28ed89f" translate="yes" xml:space="preserve">
          <source>NOTE: It's not possible to set the order. That is automatically set to ascending on the primary key (&amp;ldquo;id ASC&amp;rdquo;) to make the batch ordering consistent. Therefore the primary key must be orderable, e.g. an integer or a string.</source>
          <target state="translated">注意：无法设置顺序。它会自动设置为在主键（&amp;ldquo; id ASC&amp;rdquo;）上升序以使批次排序保持一致。因此，主键必须是可排序的，例如整数或字符串。</target>
        </trans-unit>
        <trans-unit id="dde7531f52bc0c757ff3d34c5fe675032ed0dc59" translate="yes" xml:space="preserve">
          <source>NOTE: It's not possible to set the order. That is automatically set to ascending on the primary key (&amp;ldquo;id ASC&amp;rdquo;) to make the batch ordering work. This also means that this method only works when the primary key is orderable (e.g. an integer or string).</source>
          <target state="translated">注意：无法设置顺序。它会自动设置为主键（&amp;ldquo; id ASC&amp;rdquo;）升序以使批量订购生效。这也意味着该方法仅在主键可排序（例如整数或字符串）时才有效。</target>
        </trans-unit>
        <trans-unit id="29f14cc49202f0a1b0bb8a6f8ce37815657aef23" translate="yes" xml:space="preserve">
          <source>NOTE: Must be subscribed.</source>
          <target state="translated">注:必须订阅。</target>
        </trans-unit>
        <trans-unit id="6dc6141be1468034c8070346d640d8a829f5f57d" translate="yes" xml:space="preserve">
          <source>NOTE: Only the option tags are returned, you have to wrap this call in a regular HTML select tag.</source>
          <target state="translated">注意:只有选项标签会被返回,你必须用一个常规的HTML选择标签来包装这个调用。</target>
        </trans-unit>
        <trans-unit id="6943a719f65fb990d18007df480f8c42cd9b18c1" translate="yes" xml:space="preserve">
          <source>NOTE: Other URL helpers can be called in the block but be careful not to invoke your custom URL helper again otherwise it will result in a stack overflow error.</source>
          <target state="translated">注意:可以在区块中调用其他URL助手,但注意不要再次调用你的自定义URL助手,否则会导致堆栈溢出错误。</target>
        </trans-unit>
        <trans-unit id="b156bf73ae0bbaecb78b98c9bfa46bc9edd1b4e2" translate="yes" xml:space="preserve">
          <source>NOTE: Ruby 2.4 and later support native Unicode case mappings:</source>
          <target state="translated">注:Ruby 2.4及以后的版本支持本地Unicode大小写映射。</target>
        </trans-unit>
        <trans-unit id="d739e914d4cbb746ba24e8856710882ef4ceb321" translate="yes" xml:space="preserve">
          <source>NOTE: The :local timezone is Ruby's &lt;strong&gt;process&lt;/strong&gt; timezone, i.e. ENV.</source>
          <target state="translated">注意：：local时区是Ruby的&lt;strong&gt;处理&lt;/strong&gt;时区，即ENV。</target>
        </trans-unit>
        <trans-unit id="70a7e32800af02b9f8831a9f78781ff3e3c0fa4e" translate="yes" xml:space="preserve">
          <source>NOTE: The &lt;code&gt;direct&lt;/code&gt; method can't be used inside of a scope block such as &lt;code&gt;namespace&lt;/code&gt; or &lt;code&gt;scope&lt;/code&gt; and will raise an error if it detects that it is.</source>
          <target state="translated">注意： &lt;code&gt;direct&lt;/code&gt; 方法不能在诸如 &lt;code&gt;namespace&lt;/code&gt; 或 &lt;code&gt;scope&lt;/code&gt; 之类的范围块内使用，如果检测到它，则会引发错误。</target>
        </trans-unit>
        <trans-unit id="84504c0e05d0a3bcbefa67ca6b2d127e74bce741" translate="yes" xml:space="preserve">
          <source>NOTE: The &lt;code&gt;resolve&lt;/code&gt; method can't be used inside of a scope block such as &lt;code&gt;namespace&lt;/code&gt; or &lt;code&gt;scope&lt;/code&gt; and will raise an error if it detects that it is.</source>
          <target state="translated">注意： &lt;code&gt;resolve&lt;/code&gt; 方法不能在诸如 &lt;code&gt;namespace&lt;/code&gt; 或 &lt;code&gt;scope&lt;/code&gt; 之类的范围块内使用，如果检测到它，则会引发错误。</target>
        </trans-unit>
        <trans-unit id="2e424a8b8f539c8c51767bfb36b1996ecd86b6d7" translate="yes" xml:space="preserve">
          <source>NOTE: The HTML options &lt;code&gt;disabled&lt;/code&gt;, &lt;code&gt;readonly&lt;/code&gt;, and &lt;code&gt;multiple&lt;/code&gt; can all be treated as booleans. So specifying &lt;code&gt;disabled: true&lt;/code&gt; will give &lt;code&gt;disabled=&quot;disabled&quot;&lt;/code&gt;.</source>
          <target state="translated">注意：HTML选项 &lt;code&gt;disabled&lt;/code&gt; ， &lt;code&gt;readonly&lt;/code&gt; 和 &lt;code&gt;multiple&lt;/code&gt; 都可以视为布尔值。因此，指定 &lt;code&gt;disabled: true&lt;/code&gt; 将给出 &lt;code&gt;disabled=&quot;disabled&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4273e9c86cc14cbdf878c0d79b4f8635103aeab2" translate="yes" xml:space="preserve">
          <source>NOTE: The default validations with the exception of &lt;code&gt;uniqueness&lt;/code&gt; will work. For example, if you want to check for &lt;code&gt;uniqueness&lt;/code&gt; with &lt;code&gt;hstore&lt;/code&gt; you will need to use a custom validation to handle it.</source>
          <target state="translated">注意： &lt;code&gt;uniqueness&lt;/code&gt; 以外的默认验证将起作用。例如，如果要使用 &lt;code&gt;hstore&lt;/code&gt; 检查 &lt;code&gt;uniqueness&lt;/code&gt; ，则需要使用自定义验证来处理它。</target>
        </trans-unit>
        <trans-unit id="ec2abfcf21d7eecb069b20fd390f5d0cd5e855b1" translate="yes" xml:space="preserve">
          <source>NOTE: The formatting and content of this middleware's output is intended for human consumption, and should be expected to change between releases.</source>
          <target state="translated">注意:该中间件的输出格式和内容是供人使用的,在不同的版本之间应该会有变化。</target>
        </trans-unit>
        <trans-unit id="ba561ebdca75e4e27ed2d7158136f74d0787b8fb" translate="yes" xml:space="preserve">
          <source>NOTE: The returned records are in the same order as the ids you provide. If you want the results to be sorted by database, you can use &lt;a href=&quot;querymethods#method-i-where&quot;&gt;ActiveRecord::QueryMethods#where&lt;/a&gt; method and provide an explicit &lt;a href=&quot;querymethods#method-i-order&quot;&gt;ActiveRecord::QueryMethods#order&lt;/a&gt; option. But &lt;a href=&quot;querymethods#method-i-where&quot;&gt;ActiveRecord::QueryMethods#where&lt;/a&gt; method doesn't raise &lt;a href=&quot;recordnotfound&quot;&gt;ActiveRecord::RecordNotFound&lt;/a&gt;.</source>
          <target state="translated">注意：返回的记录与您提供的ID的顺序相同。如果希望按数据库对结果进行排序，则可以使用&lt;a href=&quot;querymethods#method-i-where&quot;&gt;ActiveRecord :: QueryMethods＃where&lt;/a&gt;方法并提供一个显式的&lt;a href=&quot;querymethods#method-i-order&quot;&gt;ActiveRecord :: QueryMethods＃order&lt;/a&gt;选项。但是&lt;a href=&quot;querymethods#method-i-where&quot;&gt;ActiveRecord :: QueryMethods＃where&lt;/a&gt;方法不会引发&lt;a href=&quot;recordnotfound&quot;&gt;ActiveRecord :: RecordNotFound&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d051f3032ec6e426d27e0a95cae128b377cb5dff" translate="yes" xml:space="preserve">
          <source>NOTE: There is no &lt;code&gt;key_will_change!&lt;/code&gt; method for accessors, use &lt;code&gt;store_will_change!&lt;/code&gt; instead.</source>
          <target state="translated">注意：没有 &lt;code&gt;key_will_change!&lt;/code&gt; 访问器的方法，请使用 &lt;code&gt;store_will_change!&lt;/code&gt; 代替。</target>
        </trans-unit>
        <trans-unit id="762c4a804d75ee92e1459fdc1f1254495115d31d" translate="yes" xml:space="preserve">
          <source>NOTE: This approach has been deprecated for end-user code in favor of &lt;a href=&quot;../module#method-i-thread_mattr_accessor&quot;&gt;thread_mattr_accessor&lt;/a&gt; and friends. Please use that approach instead.</source>
          <target state="translated">注意：不建议最终用户使用此方法，而建议使用&lt;a href=&quot;../module#method-i-thread_mattr_accessor&quot;&gt;thread_mattr_accessor&lt;/a&gt;和朋友。请改用这种方法。</target>
        </trans-unit>
        <trans-unit id="d0de1ac13c80a92b6f77a642c82b1dcfb7e1d9e9" translate="yes" xml:space="preserve">
          <source>NOTE: This check is performed only if &lt;code&gt;password_confirmation&lt;/code&gt; is not &lt;code&gt;nil&lt;/code&gt;. To require confirmation, make sure to add a presence check for the confirmation attribute:</source>
          <target state="translated">注意：仅当 &lt;code&gt;password_confirmation&lt;/code&gt; 不为 &lt;code&gt;nil&lt;/code&gt; 时,才执行此检查。要要求确认，请确保为确认属性添加状态检查：</target>
        </trans-unit>
        <trans-unit id="84dd77619c472769d8bdcac15ddd778d56672d39" translate="yes" xml:space="preserve">
          <source>NOTE: This custom behavior only applies to simple polymorphic URLs where a single model instance is passed and not more complicated forms, e.g:</source>
          <target state="translated">注意:这种自定义行为只适用于传递单个模型实例的简单多态URL,而不适用于更复杂的形式,如</target>
        </trans-unit>
        <trans-unit id="951ec43c360ce92554228518ef500aed9eae55c6" translate="yes" xml:space="preserve">
          <source>NOTE: This validation will not fail if the association hasn't been assigned. If you want to ensure that the association is both present and guaranteed to be valid, you also need to use &lt;a href=&quot;classmethods#method-i-validates_presence_of&quot;&gt;validates_presence_of&lt;/a&gt;.</source>
          <target state="translated">注意：如果尚未分配关联，则此验证不会失败。如果要确保关联既存在又保证有效，则还需要使用&lt;a href=&quot;classmethods#method-i-validates_presence_of&quot;&gt;validates_presence_of&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e4e81557c5494f5f1a9d85acc000f2a8822047be" translate="yes" xml:space="preserve">
          <source>NOTE: This validation will not fail while using it with an association if the latter was assigned but not valid. If you want to ensure that it is both present and valid, you also need to use &lt;a href=&quot;classmethods#method-i-validates_associated&quot;&gt;validates_associated&lt;/a&gt;.</source>
          <target state="translated">注意：如果已将关联与关联一起使用，但此验证无效，则验证不会失败。如果要确保它既存在又有效，则还需要使用&lt;a href=&quot;classmethods#method-i-validates_associated&quot;&gt;validates_associated&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d5f9e20a8fba6546eac5061bae525520123d4e92" translate="yes" xml:space="preserve">
          <source>NOTE: This won't affect any &lt;code&gt;ActiveSupport::TimeWithZone&lt;/code&gt; objects that have already been created, e.g. any model timestamp attributes that have been read before the block will remain in the application's default timezone.</source>
          <target state="translated">注意：这不会影响已经创建的任何 &lt;code&gt;ActiveSupport::TimeWithZone&lt;/code&gt; 对象，例如，在块之前读取的任何模型时间戳属性都将保留在应用程序的默认时区中。</target>
        </trans-unit>
        <trans-unit id="01485856ed54cb882a5920d009b94f662f247905" translate="yes" xml:space="preserve">
          <source>NOTE: You cannot call class methods implicitly inside of with_options. You can access these methods using the class name instead:</source>
          <target state="translated">注意:你不能在with_options中隐式调用类方法。你可以使用类名来访问这些方法。</target>
        </trans-unit>
        <trans-unit id="001af184a34c3b7f841644c2049b13fde9247dcf" translate="yes" xml:space="preserve">
          <source>NOTE: queue_classic supports job scheduling since version 3.1. For older versions you can use the queue_classic-later gem.</source>
          <target state="translated">注意:queue_classic从3.1版本开始支持作业调度。对于旧版本,你可以使用queue_classic-later gem。</target>
        </trans-unit>
        <trans-unit id="fa2e3aa9db1f23e790f7456ee1a1e5d29681ed24" translate="yes" xml:space="preserve">
          <source>NOT_NULL_VIOLATION</source>
          <target state="translated">NOT_NULL_VIOLATION</target>
        </trans-unit>
        <trans-unit id="d2a96aa7908b40b3466fee80b9d1ee30c01975eb" translate="yes" xml:space="preserve">
          <source>NO_CACHE</source>
          <target state="translated">NO_CACHE</target>
        </trans-unit>
        <trans-unit id="00b1f4e9b252474c44034ab40ad8a0aa89bcea94" translate="yes" xml:space="preserve">
          <source>NO_CONTENT_CODES</source>
          <target state="translated">NO_CONTENT_CODES</target>
        </trans-unit>
        <trans-unit id="d21e27fa2aab628c195a197ed9f03845aeb79542" translate="yes" xml:space="preserve">
          <source>NULL_ORIGIN_MESSAGE</source>
          <target state="translated">NULL_ORIGIN_MESSAGE</target>
        </trans-unit>
        <trans-unit id="99a01813d236bc88b0d2843edbc671a623558b8d" translate="yes" xml:space="preserve">
          <source>NUMERIC_VALUE_OUT_OF_RANGE</source>
          <target state="translated">NUMERIC_VALUE_OUT_OF_RANGE</target>
        </trans-unit>
        <trans-unit id="70baa5f2e3ea149d3efba73d8ae1136c8b2465d4" translate="yes" xml:space="preserve">
          <source>Name of gem where method is deprecated</source>
          <target state="translated">方法被废弃的 gem 的名称</target>
        </trans-unit>
        <trans-unit id="32e659ad4b09e8447ec3181bf0a4d92b88b4c1c6" translate="yes" xml:space="preserve">
          <source>Name of the channel class</source>
          <target state="translated">通道类的名称</target>
        </trans-unit>
        <trans-unit id="71a2fbae76fe99fa8a275b3c0d7d46236e5b55a9" translate="yes" xml:space="preserve">
          <source>Name of the mailer class</source>
          <target state="translated">邮件类的名称</target>
        </trans-unit>
        <trans-unit id="031346423a1b0ce1d227b1b30affcb044013a924" translate="yes" xml:space="preserve">
          <source>Name of the middleware</source>
          <target state="translated">中间件名称</target>
        </trans-unit>
        <trans-unit id="78457f7d39785050562a7dff3d2e99a2e0e79866" translate="yes" xml:space="preserve">
          <source>Name of the operation</source>
          <target state="translated">业务名称</target>
        </trans-unit>
        <trans-unit id="03122e3a5b21f57d2d883c6a0a49357e202d911c" translate="yes" xml:space="preserve">
          <source>Name of the service</source>
          <target state="translated">服务名称</target>
        </trans-unit>
        <trans-unit id="1c4922e237a35b808877d9a82e3b4f1d76a9d175" translate="yes" xml:space="preserve">
          <source>Name#!~</source>
          <target state="translated">Name#!~</target>
        </trans-unit>
        <trans-unit id="e792f5520042a09fdd9b5e1e673cfeee3c77200f" translate="yes" xml:space="preserve">
          <source>Name#&amp;lt;=&amp;gt;</source>
          <target state="translated">Name#&amp;lt;=&amp;gt;</target>
        </trans-unit>
        <trans-unit id="1179728f0d5f43d5293a76a78366464d8a60734c" translate="yes" xml:space="preserve">
          <source>Name#==</source>
          <target state="translated">Name#==</target>
        </trans-unit>
        <trans-unit id="72068bf4dc62054d1aa334d91a8f73f1a4df79d4" translate="yes" xml:space="preserve">
          <source>Name#===</source>
          <target state="translated">Name#===</target>
        </trans-unit>
        <trans-unit id="7e2c499ce65cfd2fc2c0d8d2ec1ae1cf9580ba97" translate="yes" xml:space="preserve">
          <source>Name#=~</source>
          <target state="translated">Name#=~</target>
        </trans-unit>
        <trans-unit id="e3a602bd022b88eb5fde04d80ef58513bf53d879" translate="yes" xml:space="preserve">
          <source>Name#cache_key</source>
          <target state="translated">Name#cache_key</target>
        </trans-unit>
        <trans-unit id="4681debcf82ac876bdf9bce21fce76c198d4aa93" translate="yes" xml:space="preserve">
          <source>Name#collection</source>
          <target state="translated">Name#collection</target>
        </trans-unit>
        <trans-unit id="ddf13fdc6f4b9d40165f558c9f93bad094528b73" translate="yes" xml:space="preserve">
          <source>Name#element</source>
          <target state="translated">Name#element</target>
        </trans-unit>
        <trans-unit id="463ae0c60d41feba7ad71200788dc4337d894175" translate="yes" xml:space="preserve">
          <source>Name#eql?</source>
          <target state="translated">Name#eql?</target>
        </trans-unit>
        <trans-unit id="98daf91647588f6bd7efd46dce99631c206bb5c1" translate="yes" xml:space="preserve">
          <source>Name#human</source>
          <target state="translated">Name#human</target>
        </trans-unit>
        <trans-unit id="c97e546358582b5a5ba1ea7bdf50be71b53e922b" translate="yes" xml:space="preserve">
          <source>Name#i18n_key</source>
          <target state="translated">Name#i18n_key</target>
        </trans-unit>
        <trans-unit id="c22528385d14458160cc452921eaab5c5a7bdce5" translate="yes" xml:space="preserve">
          <source>Name#match?</source>
          <target state="translated">Name#match?</target>
        </trans-unit>
        <trans-unit id="eee58f9d0bbf2eb7debc13e44da843d09fd29e93" translate="yes" xml:space="preserve">
          <source>Name#name</source>
          <target state="translated">Name#name</target>
        </trans-unit>
        <trans-unit id="18b2ab85207f22841861f5f4e4e3c8548355b26c" translate="yes" xml:space="preserve">
          <source>Name#param_key</source>
          <target state="translated">Name#param_key</target>
        </trans-unit>
        <trans-unit id="d7cc97c1964b5845cb4a881ef26f71711ce1bde7" translate="yes" xml:space="preserve">
          <source>Name#plural</source>
          <target state="translated">Name#plural</target>
        </trans-unit>
        <trans-unit id="c5f2701a378862cb6c909900693c993cdb5a070a" translate="yes" xml:space="preserve">
          <source>Name#route_key</source>
          <target state="translated">Name#route_key</target>
        </trans-unit>
        <trans-unit id="ea2815d1e3255ea3fe84eecd0b1534fda2f22333" translate="yes" xml:space="preserve">
          <source>Name#singular</source>
          <target state="translated">Name#singular</target>
        </trans-unit>
        <trans-unit id="3f1cb4167052af9701bd98eaab092beb46b304fb" translate="yes" xml:space="preserve">
          <source>Name#singular_route_key</source>
          <target state="translated">Name#singular_route_key</target>
        </trans-unit>
        <trans-unit id="5a69bdd1ef58b83bac730aaf7e46814d70697147" translate="yes" xml:space="preserve">
          <source>Name#to_s</source>
          <target state="translated">Name#to_s</target>
        </trans-unit>
        <trans-unit id="7ce74ccf007c0a9889745b2a5abd494e855bfcfa" translate="yes" xml:space="preserve">
          <source>Name#to_str</source>
          <target state="translated">Name#to_str</target>
        </trans-unit>
        <trans-unit id="055abe0c93806fd5fddede2eb9dd54fec55fd4c4" translate="yes" xml:space="preserve">
          <source>Name::new</source>
          <target state="translated">Name::new</target>
        </trans-unit>
        <trans-unit id="552b247919a3a4142c7193f3218e6c006dc56731" translate="yes" xml:space="preserve">
          <source>NameError</source>
          <target state="translated">NameError</target>
        </trans-unit>
        <trans-unit id="cd2bcf0c29669d641e5e068f2807dc580ed514d4" translate="yes" xml:space="preserve">
          <source>NameError#missing_name</source>
          <target state="translated">NameError#missing_name</target>
        </trans-unit>
        <trans-unit id="6519308d40a377cea33b21720a5e1eee430463f7" translate="yes" xml:space="preserve">
          <source>NameError#missing_name?</source>
          <target state="translated">NameError#missing_name?</target>
        </trans-unit>
        <trans-unit id="83cd88833f32f706e162e5b2c5207612273bba68" translate="yes" xml:space="preserve">
          <source>Named Route Helper</source>
          <target state="translated">指定路线助手</target>
        </trans-unit>
        <trans-unit id="6243d7a9ebe509fa90d17fc1dec58ea6b19bcd3f" translate="yes" xml:space="preserve">
          <source>Named routes</source>
          <target state="translated">名义路线</target>
        </trans-unit>
        <trans-unit id="fb73760ca2f5e5b7055b35a7dfc2d2a936f9ee3d" translate="yes" xml:space="preserve">
          <source>Named scopes can also have extensions, just as with &lt;a href=&quot;../../associations/classmethods#method-i-has_many&quot;&gt;has_many&lt;/a&gt; declarations:</source>
          <target state="translated">就像&lt;a href=&quot;../../associations/classmethods#method-i-has_many&quot;&gt;has_many&lt;/a&gt;声明一样，命名范围也可以具有扩展名：</target>
        </trans-unit>
        <trans-unit id="c53b64fd17c082e6beb4e1aca64ab7d44f35aa7e" translate="yes" xml:space="preserve">
          <source>Namespace isolation to &lt;code&gt;config/routes.rb&lt;/code&gt;:</source>
          <target state="translated">命名空间与 &lt;code&gt;config/routes.rb&lt;/code&gt; 的隔离：</target>
        </trans-unit>
        <trans-unit id="79e8ca566bc6852923638a4ac14a1f95414dd757" translate="yes" xml:space="preserve">
          <source>Namespace isolation to &lt;code&gt;lib/blorgh/engine.rb&lt;/code&gt;:</source>
          <target state="translated">命名空间隔离到 &lt;code&gt;lib/blorgh/engine.rb&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="8b4617b659a51d0b5756991a46730570511eef04" translate="yes" xml:space="preserve">
          <source>Naming</source>
          <target state="translated">Naming</target>
        </trans-unit>
        <trans-unit id="8af56df8a9cb35f56b67edd6d269d4e86defc0d0" translate="yes" xml:space="preserve">
          <source>Naming Conventions</source>
          <target state="translated">命名惯例</target>
        </trans-unit>
        <trans-unit id="3c2aa7c616223e41c395f07cffdda74786d5855d" translate="yes" xml:space="preserve">
          <source>Naming Routes</source>
          <target state="translated">命名路线</target>
        </trans-unit>
        <trans-unit id="727e70bd9d31b16f99e09131ffa84f73d9c0cdab" translate="yes" xml:space="preserve">
          <source>Naming conflicts of this kind are rare in practice, but if one occurs, &lt;code&gt;require_dependency&lt;/code&gt; provides a solution by ensuring that the constant needed to trigger the heuristic is defined in the conflicting place.</source>
          <target state="translated">这种命名冲突在实践中很少见，但是如果发生冲突， &lt;code&gt;require_dependency&lt;/code&gt; 通过确保在冲突的地方定义触发启发式算法所需的常量来提供一种解决方案。</target>
        </trans-unit>
        <trans-unit id="003199f690943e090431ea9315afa6128057cf84" translate="yes" xml:space="preserve">
          <source>Naming#model_name</source>
          <target state="translated">Naming#model_name</target>
        </trans-unit>
        <trans-unit id="37b2dfaa964981c5857c8884cc0c8a3ba035ecb2" translate="yes" xml:space="preserve">
          <source>Naming::param_key</source>
          <target state="translated">Naming::param_key</target>
        </trans-unit>
        <trans-unit id="15a5e01708eab09298595ec3df33c78823c5effa" translate="yes" xml:space="preserve">
          <source>Naming::plural</source>
          <target state="translated">Naming::plural</target>
        </trans-unit>
        <trans-unit id="e94910e8a8fee93c260867ec51d1f9417720d305" translate="yes" xml:space="preserve">
          <source>Naming::route_key</source>
          <target state="translated">Naming::route_key</target>
        </trans-unit>
        <trans-unit id="b08cbd482856c7e71807d58479b402a5eb900c01" translate="yes" xml:space="preserve">
          <source>Naming::singular</source>
          <target state="translated">Naming::singular</target>
        </trans-unit>
        <trans-unit id="e81567d4f4bc1b7dbbb3dc05722255fd642072fd" translate="yes" xml:space="preserve">
          <source>Naming::singular_route_key</source>
          <target state="translated">Naming::singular_route_key</target>
        </trans-unit>
        <trans-unit id="607b36733fc1c205aa141382646fa32e1828d2be" translate="yes" xml:space="preserve">
          <source>Naming::uncountable?</source>
          <target state="translated">Naming::uncountable?</target>
        </trans-unit>
        <trans-unit id="c7fccf3309993cfc8b035745c98b4d3c7546b8da" translate="yes" xml:space="preserve">
          <source>Neither of these rails commands do anything you could not do with &lt;code&gt;db:migrate&lt;/code&gt;. They are simply more convenient, since you do not need to explicitly specify the version to migrate to.</source>
          <target state="translated">这些rails命令都不能执行 &lt;code&gt;db:migrate&lt;/code&gt; 无法完成的任何操作。它们更加方便，因为您无需显式指定要迁移到的版本。</target>
        </trans-unit>
        <trans-unit id="e509697d698a7906a469d4a7b75c6a68f919eb56" translate="yes" xml:space="preserve">
          <source>Nested Associations</source>
          <target state="translated">嵌套协会</target>
        </trans-unit>
        <trans-unit id="7fba4d7bfc8f67d21d0ab22eb56f0af865916a65" translate="yes" xml:space="preserve">
          <source>Nested Attributes Examples</source>
          <target state="translated">嵌套属性示例</target>
        </trans-unit>
        <trans-unit id="4c468c4b63e979418047fd8eb368f74fa116c4f0" translate="yes" xml:space="preserve">
          <source>Nested Forms</source>
          <target state="translated">嵌套表格</target>
        </trans-unit>
        <trans-unit id="248022a870eb27897fa53e16452caafdbdabcf57" translate="yes" xml:space="preserve">
          <source>Nested Resources</source>
          <target state="translated">嵌套资源</target>
        </trans-unit>
        <trans-unit id="a886336ca42a0ed213b8b9ef83363bbd6b3472ac" translate="yes" xml:space="preserve">
          <source>Nested attribute writers are normal setter methods named after an association. The most common way of defining these writers is either with &lt;code&gt;accepts_nested_attributes_for&lt;/code&gt; in a model definition or by defining a method with the proper name. For example: the attribute writer for the association &lt;code&gt;:address&lt;/code&gt; is called &lt;code&gt;address_attributes=&lt;/code&gt;.</source>
          <target state="translated">嵌套属性编写器是以关联命名的普通设置方法。定义这些编写器的最常见方法是在模型定义中使用 &lt;code&gt;accepts_nested_attributes_for&lt;/code&gt; 或通过使用适当名称定义方法。例如：关联 &lt;code&gt;:address&lt;/code&gt; 的属性 &lt;code&gt;address_attributes=&lt;/code&gt; 器称为address_attributes =。</target>
        </trans-unit>
        <trans-unit id="8dba121940b3381c7ce96a44cb7145f206ea973c" translate="yes" xml:space="preserve">
          <source>Nested attributes allow you to save attributes on associated records through the parent. By default nested attribute updating is turned off and you can enable it using the &lt;a href=&quot;classmethods#method-i-accepts_nested_attributes_for&quot;&gt;#accepts_nested_attributes_for&lt;/a&gt; class method. When you enable nested attributes an attribute writer is defined on the model.</source>
          <target state="translated">嵌套属性允许您通过父级将属性保存在关联记录上。默认情况下，嵌套属性更新处于关闭状态，您可以使用&lt;a href=&quot;classmethods#method-i-accepts_nested_attributes_for&quot;&gt;#accepts_nested_attributes_for&lt;/a&gt;类方法启用它。启用嵌套属性时，将在模型上定义属性编写器。</target>
        </trans-unit>
        <trans-unit id="76f1637e9c296faeb50bd64d9b1abd9662cb9a3a" translate="yes" xml:space="preserve">
          <source>Nested attributes for an associated collection can also be passed in the form of a hash of hashes instead of an array of hashes:</source>
          <target state="translated">关联集合的嵌套属性也可以以哈希的形式传递,而不是哈希数组。</target>
        </trans-unit>
        <trans-unit id="4a35878c09308aa9049fa9b9a6d7c7e15c3dfe08" translate="yes" xml:space="preserve">
          <source>Nested classes are given table names prefixed by the singular form of the parent's table name. Enclosing modules are not considered.</source>
          <target state="translated">嵌套类的表名是以父表名的单数形式为前缀的。封闭模块不在考虑之列。</target>
        </trans-unit>
        <trans-unit id="63f019e717e0ab6a9f532990a577c18fa3ae04dc" translate="yes" xml:space="preserve">
          <source>Nested joins:</source>
          <target state="translated">嵌套连接。</target>
        </trans-unit>
        <trans-unit id="c66f56f1f5c5f4b1c4c4c05d227838c7dc604645" translate="yes" xml:space="preserve">
          <source>Nested resources and/or namespaces are also supported, as illustrated in the example:</source>
          <target state="translated">如实例所示,还支持嵌套资源和/或命名空间。</target>
        </trans-unit>
        <trans-unit id="ca2f14466890989a0ffb68ac10638261362707cc" translate="yes" xml:space="preserve">
          <source>Nested routes allow you to capture this relationship in your routing. In this case, you could include this route declaration:</source>
          <target state="translated">嵌套路由允许你在路由中捕获这种关系。在这种情况下,你可以包含这个路由声明。</target>
        </trans-unit>
        <trans-unit id="127f49081f658cece5f3811cf0dc1334ffa1512f" translate="yes" xml:space="preserve">
          <source>Nested transactions</source>
          <target state="translated">嵌套交易</target>
        </trans-unit>
        <trans-unit id="c835d6d0c484ded0471029d4ba8a6d1f070134ea" translate="yes" xml:space="preserve">
          <source>Nested transactions support</source>
          <target state="translated">支持嵌套交易</target>
        </trans-unit>
        <trans-unit id="f06563daf6842a8e082fd4615e320fc869bb69d9" translate="yes" xml:space="preserve">
          <source>Nesting</source>
          <target state="translated">Nesting</target>
        </trans-unit>
        <trans-unit id="091718b4816f1f70d7c2f882eaebf502f50ff1e1" translate="yes" xml:space="preserve">
          <source>Nesting and Qualified Constants</source>
          <target state="translated">嵌套和限定常量</target>
        </trans-unit>
        <trans-unit id="4970c28f364d041c28f5d5ff2bc88daf1a13ad01" translate="yes" xml:space="preserve">
          <source>Network Address Types</source>
          <target state="translated">网络地址类型</target>
        </trans-unit>
        <trans-unit id="4e76369081894cf103d91859c60296711dc576f5" translate="yes" xml:space="preserve">
          <source>Network traffic is mostly based on the limited Western alphabet, so new character encodings, such as Unicode, emerged, to transmit characters in other languages. But, this is also a threat to web applications, as malicious code can be hidden in different encodings that the web browser might be able to process, but the web application might not. Here is an attack vector in UTF-8 encoding:</source>
          <target state="translated">网络流量主要是基于有限的西方字母,所以出现了新的字符编码,比如Unicode,来传输其他语言的字符。但是,这对网络应用来说也是一种威胁,因为恶意代码可以隐藏在不同的编码中,网络浏览器可能能够处理,但网络应用可能无法处理。下面是一个UTF-8编码的攻击载体。</target>
        </trans-unit>
        <trans-unit id="869ed4b7fdab7fee2a402b5ed8ba08fa65a80dda" translate="yes" xml:space="preserve">
          <source>Nevertheless, integration tests may want to inspect controller responses in more detail, and that's when Response can be useful for application developers. Integration test methods such as &lt;a href=&quot;integration/requesthelpers#method-i-get&quot;&gt;ActionDispatch::Integration::RequestHelpers#get&lt;/a&gt; and &lt;a href=&quot;integration/requesthelpers#method-i-post&quot;&gt;ActionDispatch::Integration::RequestHelpers#post&lt;/a&gt; return objects of type &lt;a href=&quot;testresponse&quot;&gt;TestResponse&lt;/a&gt; (which are of course also of type Response).</source>
          <target state="translated">但是，集成测试可能希望更详细地检查控制器响应，这就是响应对应用程序开发人员有用的时候。集成测试方法，例如&lt;a href=&quot;integration/requesthelpers#method-i-get&quot;&gt;ActionDispatch :: Integration :: RequestHelpers＃get&lt;/a&gt;和&lt;a href=&quot;integration/requesthelpers#method-i-post&quot;&gt;ActionDispatch :: Integration :: RequestHelpers＃post&lt;/a&gt;返回类型为&lt;a href=&quot;testresponse&quot;&gt;TestResponse的&lt;/a&gt;对象（当然，它们也属于Response类型）。</target>
        </trans-unit>
        <trans-unit id="025519ea3f483eb11a3c8608b8a731eee0947b1b" translate="yes" xml:space="preserve">
          <source>New Features</source>
          <target state="translated">新功能</target>
        </trans-unit>
        <trans-unit id="59f7814b9783bf405ce9a2b8a2eb91a07086d026" translate="yes" xml:space="preserve">
          <source>New Framework Defaults</source>
          <target state="translated">新框架默认值</target>
        </trans-unit>
        <trans-unit id="82c45ae6d5b92c7fc2da8f10d18dfa0aa37127c7" translate="yes" xml:space="preserve">
          <source>New Rails applications no longer generate functional style controller tests and they should only be used for backward compatibility. Integration style controller tests perform actual requests, whereas functional style controller tests merely simulate a request. Besides, integration tests are as fast as functional tests and provide lot of helpers such as &lt;code&gt;as&lt;/code&gt;, &lt;code&gt;parsed_body&lt;/code&gt; for effective testing of controller actions including even &lt;a href=&quot;api&quot;&gt;API&lt;/a&gt; endpoints.</source>
          <target state="translated">新的Rails应用程序不再生成功能样式控制器测试，而应仅用于向后兼容。集成样式控制器测试执行实际请求，而功能样式控制器测试仅模拟请求。此外，集成测试是一样快，功能测试，并提供大量的助手如 &lt;code&gt;as&lt;/code&gt; ， &lt;code&gt;parsed_body&lt;/code&gt; 的控制器操作的有效的测试，甚至包括&lt;a href=&quot;api&quot;&gt;API&lt;/a&gt;端点。</target>
        </trans-unit>
        <trans-unit id="7cf53ae5b6704e72f88c820669c6bc32c67a8631" translate="yes" xml:space="preserve">
          <source>New Rails projects are configured to use this implementation in development environment by default.</source>
          <target state="translated">新的Rails项目默认配置为在开发环境中使用该实现。</target>
        </trans-unit>
        <trans-unit id="0c893b28bccafb88f76f9633609b9c93a062f23a" translate="yes" xml:space="preserve">
          <source>New applications will include these lines commented out in the production.rb.</source>
          <target state="translated">新的应用程序将包括这些在production.rb中注释出来的行。</target>
        </trans-unit>
        <trans-unit id="4943683ac5afab318415394f93a1c063933cd2e1" translate="yes" xml:space="preserve">
          <source>New features are only added to the master branch and will not be made available in point releases.</source>
          <target state="translated">新功能只添加到主分支,不会在点发布中提供。</target>
        </trans-unit>
        <trans-unit id="ccaf4b4268072c64d096dcb7ec72db000a572a03" translate="yes" xml:space="preserve">
          <source>New features, may contain API changes (Serve as major versions of Semver). Breaking changes are paired with deprecation notices in the previous minor or major release.</source>
          <target state="translated">新功能,可能包含API变化(作为Semver的主要版本)。突破性的变化与上一个次要或主要版本中的废弃通知相匹配。</target>
        </trans-unit>
        <trans-unit id="6c84fb1c0af34488ee6f00a9554a1204b67cf86b" translate="yes" xml:space="preserve">
          <source>New features, will likely contain API changes. The difference between Rails' minor and major releases is the magnitude of breaking changes, and usually reserved for special occasions.</source>
          <target state="translated">新功能,将可能包含API的变化。Rails的次要版本和主要版本的区别在于突破性变化的幅度,通常保留在特殊场合。</target>
        </trans-unit>
        <trans-unit id="850c22852ead9d4a27eec9acc5dd2785ed98f6a9" translate="yes" xml:space="preserve">
          <source>New objects can be instantiated as either empty (pass no construction parameter) or pre-set with attributes but not yet saved (pass a hash with key names matching the associated table column names). In both instances, valid attribute keys are determined by the column names of the associated table &amp;ndash; hence you can't have attributes that aren't part of the table columns.</source>
          <target state="translated">可以将新对象实例化为空（不传递任何构造参数）或使用属性进行预置但尚未保存（传递具有与关联的表列名匹配的键名的散列）。在这两种情况下，有效的属性键均由关联表的列名确定&amp;ndash;因此，您不能拥有不属于表列的属性。</target>
        </trans-unit>
        <trans-unit id="58e4f9e6427a21080bbdeb14fdcf91252bfb5031" translate="yes" xml:space="preserve">
          <source>New rules are added at the top. So in the example above, the irregular rule for octopus will now be the first of the pluralization and singularization rules that is runs. This guarantees that your rules run before any of the rules that may already have been loaded.</source>
          <target state="translated">新的规则会在顶部添加。因此,在上面的例子中,章鱼的不规则规则规则现在将成为复数化和单数化规则中第一个运行的规则。这保证了您的规则在任何已经加载的规则之前运行。</target>
        </trans-unit>
        <trans-unit id="e5b6589f6e1b2065a2343b20e9cdbdd4af676bc1" translate="yes" xml:space="preserve">
          <source>Next the message contains &lt;code&gt;request.formats&lt;/code&gt; which specifies the format of template to be served in response. It is set to &lt;code&gt;text/html&lt;/code&gt; as we requested this page via browser, so Rails is looking for an HTML template.</source>
          <target state="translated">接下来，该消息包含 &lt;code&gt;request.formats&lt;/code&gt; ，它指定要响应的模板的格式。当我们通过浏览器请求此页面时，它设置为 &lt;code&gt;text/html&lt;/code&gt; ，因此Rails正在寻找HTML模板。</target>
        </trans-unit>
        <trans-unit id="6767b8acbd10fc0b00f829278ae1fa51ceecbf6f" translate="yes" xml:space="preserve">
          <source>Next we need to &lt;em&gt;internationalize&lt;/em&gt; our application by abstracting every locale-specific element. Finally, we need to &lt;em&gt;localize&lt;/em&gt; it by providing necessary translations for these abstracts.</source>
          <target state="translated">接下来，我们需要通过抽象每个特定于语言环境的元素来使我们的应用程序&lt;em&gt;国际化&lt;/em&gt;。最后，我们需要通过为这些摘要提供必要的翻译来对其进行&lt;em&gt;本地化&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="109a21d6ff6f2d60ba3c1008a17050d0acac596e" translate="yes" xml:space="preserve">
          <source>Next, let's look at our first assertion:</source>
          <target state="translated">接下来,我们来看看我们的第一个论断。</target>
        </trans-unit>
        <trans-unit id="313433b09f8307e7e5ca150e5483eea4b6548eb6" translate="yes" xml:space="preserve">
          <source>Next, the &lt;code&gt;scaffold_controller&lt;/code&gt; generator is invoked, generating a controller called &lt;code&gt;Blorgh::ArticlesController&lt;/code&gt; (at &lt;code&gt;app/controllers/blorgh/articles_controller.rb&lt;/code&gt;) and its related views at &lt;code&gt;app/views/blorgh/articles&lt;/code&gt;. This generator also generates tests for the controller (&lt;code&gt;test/controllers/blorgh/articles_controller_test.rb&lt;/code&gt; and &lt;code&gt;test/system/blorgh/articles_test.rb&lt;/code&gt;) and a helper (&lt;code&gt;app/helpers/blorgh/articles_helper.rb&lt;/code&gt;).</source>
          <target state="translated">接下来，调用 &lt;code&gt;scaffold_controller&lt;/code&gt; 生成器，生成一个名为 &lt;code&gt;Blorgh::ArticlesController&lt;/code&gt; 的控制器（位于 &lt;code&gt;app/controllers/blorgh/articles_controller.rb&lt;/code&gt; ）及其相关视图，位于 &lt;code&gt;app/views/blorgh/articles&lt;/code&gt; 。该生成器还会为控制器（ &lt;code&gt;test/controllers/blorgh/articles_controller_test.rb&lt;/code&gt; 和 &lt;code&gt;test/system/blorgh/articles_test.rb&lt;/code&gt; ）和辅助 &lt;code&gt;app/helpers/blorgh/articles_helper.rb&lt;/code&gt; （app / helpers / blorgh / articles_helper.rb）生成测试。</target>
        </trans-unit>
        <trans-unit id="40bc064bdc43c09c7cef9fb43ea119e01e614001" translate="yes" xml:space="preserve">
          <source>Next, the &lt;code&gt;test_unit&lt;/code&gt; generator is invoked for this model, generating a model test at &lt;code&gt;test/models/blorgh/article_test.rb&lt;/code&gt; (rather than &lt;code&gt;test/models/article_test.rb&lt;/code&gt;) and a fixture at &lt;code&gt;test/fixtures/blorgh/articles.yml&lt;/code&gt; (rather than &lt;code&gt;test/fixtures/articles.yml&lt;/code&gt;).</source>
          <target state="translated">接下来，为此模型调用 &lt;code&gt;test_unit&lt;/code&gt; 生成器，在 &lt;code&gt;test/models/blorgh/article_test.rb&lt;/code&gt; （而不是 &lt;code&gt;test/models/article_test.rb&lt;/code&gt; ）生成模型测试，并在 &lt;code&gt;test/fixtures/blorgh/articles.yml&lt;/code&gt; 生成夹具（而不是 &lt;code&gt;test/fixtures/articles.yml&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="652c33338cb22e43de7f0560517c2ebd49ae8f39" translate="yes" xml:space="preserve">
          <source>Next, the partial that this line will render needs to exist. Create a new directory at &lt;code&gt;app/views/blorgh/comments&lt;/code&gt; and in it a new file called &lt;code&gt;_form.html.erb&lt;/code&gt; which has this content to create the required partial:</source>
          <target state="translated">接下来，该行将要呈现的部分内容必须存在。在 &lt;code&gt;app/views/blorgh/comments&lt;/code&gt; 中创建一个新目录，并在其中创建一个名为 &lt;code&gt;_form.html.erb&lt;/code&gt; 的新文件，该文件具有以下内容，可用于创建所需的局部文件：</target>
        </trans-unit>
        <trans-unit id="acf9d80ade823a9926ce223f831b819c233b8f93" translate="yes" xml:space="preserve">
          <source>Next, there needs to be a form so that comments can be created on an article. To add this, put this line underneath the call to &lt;code&gt;render @article.comments&lt;/code&gt; in &lt;code&gt;app/views/blorgh/articles/show.html.erb&lt;/code&gt;:</source>
          <target state="translated">接下来，需要有一种表单，以便可以在文章上创建评论。要添加此代码，请将此行放在在 &lt;code&gt;app/views/blorgh/articles/show.html.erb&lt;/code&gt; 中 &lt;code&gt;render @article.comments&lt;/code&gt; 的调用下面：</target>
        </trans-unit>
        <trans-unit id="5ff2d584c2e41a9b0f9b33f4ba937921760355d0" translate="yes" xml:space="preserve">
          <source>Next, we need to create the &lt;code&gt;update&lt;/code&gt; action in &lt;code&gt;app/controllers/articles_controller.rb&lt;/code&gt;. Add it between the &lt;code&gt;create&lt;/code&gt; action and the &lt;code&gt;private&lt;/code&gt; method:</source>
          <target state="translated">接下来，我们需要在 &lt;code&gt;app/controllers/articles_controller.rb&lt;/code&gt; 中创建 &lt;code&gt;update&lt;/code&gt; 操作。将其添加到 &lt;code&gt;create&lt;/code&gt; 操作和 &lt;code&gt;private&lt;/code&gt; 方法之间：</target>
        </trans-unit>
        <trans-unit id="f4802c4e596e6d343d4a0852de355df71a877078" translate="yes" xml:space="preserve">
          <source>Next, we need to update our &lt;code&gt;Blorgh::ArticleController#article_params&lt;/code&gt; method to permit the new form parameter:</source>
          <target state="translated">接下来，我们需要更新 &lt;code&gt;Blorgh::ArticleController#article_params&lt;/code&gt; 方法以允许新的表单参数：</target>
        </trans-unit>
        <trans-unit id="e35efe3520fc6014820c61a3334ada013d78945e" translate="yes" xml:space="preserve">
          <source>Next, we will generate the three models that inherit from Vehicle. For this, we can use the &lt;code&gt;--parent=PARENT&lt;/code&gt; option, which will generate a model that inherits from the specified parent and without equivalent migration (since the table already exists).</source>
          <target state="translated">接下来，我们将生成从Vehicle继承的三个模型。为此，我们可以使用 &lt;code&gt;--parent=PARENT&lt;/code&gt; 选项，该选项将生成一个模型，该模型从指定的父对象继承而无需进行等效迁移（因为该表已经存在）。</target>
        </trans-unit>
        <trans-unit id="599b45c8b1a4abe02f50f7999c00f774c6c961f6" translate="yes" xml:space="preserve">
          <source>Next, you have to tell Rails where your actual home page is located.</source>
          <target state="translated">接下来,你必须告诉Rails你真正的主页在哪里。</target>
        </trans-unit>
        <trans-unit id="4b8add796b363b6597a08923490d74903e475356" translate="yes" xml:space="preserve">
          <source>Nil values can be cached.</source>
          <target state="translated">可以缓存无值。</target>
        </trans-unit>
        <trans-unit id="15e1d872b31958c396eaac1d61b9e46aa2f5531f" translate="yes" xml:space="preserve">
          <source>NilClass</source>
          <target state="translated">NilClass</target>
        </trans-unit>
        <trans-unit id="7714fef354b8c1d34f1ea5bdaf4f7461127e5c71" translate="yes" xml:space="preserve">
          <source>NilClass#try</source>
          <target state="translated">NilClass#try</target>
        </trans-unit>
        <trans-unit id="44d04e33768b6d74220565215cdeaf0ed068ca29" translate="yes" xml:space="preserve">
          <source>NilClass#try!</source>
          <target state="translated">NilClass#try!</target>
        </trans-unit>
        <trans-unit id="158227f6a11ceb02d0183bb376e17da5f25f7553" translate="yes" xml:space="preserve">
          <source>No args - Returns &lt;code&gt;false&lt;/code&gt; if the relation is empty, &lt;code&gt;true&lt;/code&gt; otherwise.</source>
          <target state="translated">No args- 如果关系为空，则返回 &lt;code&gt;false&lt;/code&gt; ，否则返回 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8a3f27db7e37442a5e3cfabfca8ff608e7a3a15c" translate="yes" xml:space="preserve">
          <source>No expiry is set on cache entries by default. Redis is expected to be configured with an eviction policy that automatically deletes least-recently or -frequently used keys when it reaches max memory. See &lt;a href=&quot;https://redis.io/topics/lru-cache&quot;&gt;redis.io/topics/lru-cache&lt;/a&gt; for cache server setup.</source>
          <target state="translated">默认情况下，未对缓存条目设置有效期限。预计Redis将配置有逐出策略，该策略将在达到最大内存时自动删除最近最少使用或最常用的密钥。有关缓存服务器设置，请参见&lt;a href=&quot;https://redis.io/topics/lru-cache&quot;&gt;redis.io/topics/lru-cache&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ecec418cda521616578d32392c1ebbdd160c1be8" translate="yes" xml:space="preserve">
          <source>No further processing</source>
          <target state="translated">无进一步处理</target>
        </trans-unit>
        <trans-unit id="db97ed13f2ed7f611f5ba31f10f0d82c2012ecc9" translate="yes" xml:space="preserve">
          <source>No namespace is set by default. Provide one if the Redis cache server is shared with other apps: &lt;code&gt;namespace: 'myapp-cache'&lt;/code&gt;.</source>
          <target state="translated">默认情况下未设置名称空间。如果Redis缓存服务器与其他应用共享，请提供一个： &lt;code&gt;namespace: 'myapp-cache'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="221a5c8be43af1725cb6eacac4221d7dd3fe4e70" translate="yes" xml:space="preserve">
          <source>No: Does not allow the priority of jobs to be configured.</source>
          <target state="translated">否:不允许配置作业的优先级。</target>
        </trans-unit>
        <trans-unit id="16763f29fae6d620d661620376b81b8978bfbd1d" translate="yes" xml:space="preserve">
          <source>No: The adapter will run jobs at the next opportunity and cannot use perform_later.</source>
          <target state="translated">否:适配器将在下一个机会运行作业,不能使用 perform_later。</target>
        </trans-unit>
        <trans-unit id="255548651b6f315ea8148ee71a1dcca3c1b3706e" translate="yes" xml:space="preserve">
          <source>No: The job is run in the same process.</source>
          <target state="translated">否:该作业在同一进程中运行。</target>
        </trans-unit>
        <trans-unit id="444ea91c7df550f94f3d747738c1f1a3466e0cc6" translate="yes" xml:space="preserve">
          <source>NoMethodError</source>
          <target state="translated">NoMethodError</target>
        </trans-unit>
        <trans-unit id="7bdb712b7ee9cb1572c977c6c62388b01305f84f" translate="yes" xml:space="preserve">
          <source>NoTouching</source>
          <target state="translated">NoTouching</target>
        </trans-unit>
        <trans-unit id="4409378f8e0b176c22d8f84d1d9f6e7b19f6bf2f" translate="yes" xml:space="preserve">
          <source>NoTouching#no_touching?</source>
          <target state="translated">NoTouching#no_touching?</target>
        </trans-unit>
        <trans-unit id="c47a7fa1d4ed36caf76d6aae9c8337d194a32586" translate="yes" xml:space="preserve">
          <source>NoTouching::ClassMethods</source>
          <target state="translated">NoTouching::ClassMethods</target>
        </trans-unit>
        <trans-unit id="ba98193055fdb0c7813315b4239b68f38d2b05af" translate="yes" xml:space="preserve">
          <source>NoTouching::ClassMethods#no_touching</source>
          <target state="translated">NoTouching::ClassMethods#no_touching</target>
        </trans-unit>
        <trans-unit id="ef59dd33658fd629a399aabbada1e44d1143840c" translate="yes" xml:space="preserve">
          <source>Noisy syntax.</source>
          <target state="translated">嘈杂的语法。</target>
        </trans-unit>
        <trans-unit id="a0542163c0ba3f59fb289f1dc9e8dba5d3af2730" translate="yes" xml:space="preserve">
          <source>Non-Resourceful Routes</source>
          <target state="translated">非资源性路线</target>
        </trans-unit>
        <trans-unit id="c55db06fa97f077282c5464f82b0f22e2389c4ca" translate="yes" xml:space="preserve">
          <source>Non-resourceful routes</source>
          <target state="translated">非资源型路线</target>
        </trans-unit>
        <trans-unit id="fd0b7793c252e73868462c36c6ba36d9dd714b74" translate="yes" xml:space="preserve">
          <source>Non-significant zeros after the decimal separator are stripped out by default (set &lt;code&gt;:strip_insignificant_zeros&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; to change that):</source>
          <target state="translated">默认情况下，小数点分隔符后的非有效零被去除（将 &lt;code&gt;:strip_insignificant_zeros&lt;/code&gt; 设置为 &lt;code&gt;false&lt;/code&gt; 可以将其更改）：</target>
        </trans-unit>
        <trans-unit id="6eef6648406c333a4035cd5e60d0bf2ecf2606d7" translate="yes" xml:space="preserve">
          <source>None</source>
          <target state="translated">None</target>
        </trans-unit>
        <trans-unit id="356a42c934b09cbbe5bf46e0b7b4b0ced1bcb0a1" translate="yes" xml:space="preserve">
          <source>Normal callbacks hook into the life cycle of Active Record objects, allowing you to work with those objects at various points. For example, you can use a &lt;code&gt;:before_save&lt;/code&gt; callback to cause something to happen just before an object is saved.</source>
          <target state="translated">正常的回调连接到Active Record对象的生命周期，从而使您可以在各个点上使用这些对象。例如，您可以使用 &lt;code&gt;:before_save&lt;/code&gt; 回调使仅在保存对象之前发生某些事情。</target>
        </trans-unit>
        <trans-unit id="0a13e9d32efa4b424c6392e61c6acc0eb80b45b5" translate="yes" xml:space="preserve">
          <source>Normal use:</source>
          <target state="translated">正常使用。</target>
        </trans-unit>
        <trans-unit id="1ab70b8dd2f6d458c3ed264ce52d8181dab57e68" translate="yes" xml:space="preserve">
          <source>Normalize args by converting &lt;code&gt;render &quot;foo&quot;&lt;/code&gt; to &lt;code&gt;render :action =&amp;gt; &quot;foo&quot;&lt;/code&gt; and &lt;code&gt;render
&quot;foo/bar&quot;&lt;/code&gt; to &lt;code&gt;render :file =&amp;gt;
&quot;foo/bar&quot;&lt;/code&gt;.</source>
          <target state="translated">通过将 &lt;code&gt;render &quot;foo&quot;&lt;/code&gt; 转换为 &lt;code&gt;render :action =&amp;gt; &quot;foo&quot;&lt;/code&gt; 和 &lt;code&gt;render &quot;foo/bar&quot;&lt;/code&gt; 为 &lt;code&gt;render :file =&amp;gt; &quot;foo/bar&quot;&lt;/code&gt; 来规范化args 。</target>
        </trans-unit>
        <trans-unit id="76ebf82afd9f2e7f802d7312d3d247b17cb36365" translate="yes" xml:space="preserve">
          <source>Normalize options.</source>
          <target state="translated">规范化选项。</target>
        </trans-unit>
        <trans-unit id="cfe63d1d809fb134b05b3d5638fd48aa6ce84994" translate="yes" xml:space="preserve">
          <source>Normalizes arguments, options and then delegates &lt;a href=&quot;rendering#method-i-render_to_body&quot;&gt;#render_to_body&lt;/a&gt; and sticks the result in &lt;code&gt;self.response_body&lt;/code&gt;.</source>
          <target state="translated">规范化参数，选项，然后委派&lt;a href=&quot;rendering#method-i-render_to_body&quot;&gt;#render_to_body&lt;/a&gt;并将结果粘贴在 &lt;code&gt;self.response_body&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="6b8d8521ec1f363e13523415591e2d1d5a9b1bbc" translate="yes" xml:space="preserve">
          <source>Normally Rails ignores duplicate parameter names. If the parameter name contains an empty set of square brackets &lt;code&gt;[]&lt;/code&gt; then they will be accumulated in an array. If you wanted users to be able to input multiple phone numbers, you could place this in the form:</source>
          <target state="translated">通常，Rails会忽略重复的参数名称。如果参数名称包含一组空的方括号 &lt;code&gt;[]&lt;/code&gt; ,则它们将累积在数组中。如果希望用户能够输入多个电话号码，则可以将其放在以下形式中：</target>
        </trans-unit>
        <trans-unit id="f08e0da51423cc8cb2840120eee1ece651d5987b" translate="yes" xml:space="preserve">
          <source>Normally when you create controllers, helpers and models inside an engine, they are treated as if they were created inside the application itself. This means that all helpers and named routes from the application will be available to your engine's controllers as well.</source>
          <target state="translated">通常当你在引擎中创建控制器、辅助程序和模型时,它们会被当作是在应用程序中创建的。这意味着所有来自应用程序的帮助程序和命名的路由也会被引擎的控制器所使用。</target>
        </trans-unit>
        <trans-unit id="5ef9f817caabf9bb9efcc4d6d589e7a64ec3f630" translate="yes" xml:space="preserve">
          <source>Normally, &lt;code&gt;ApplicationController&lt;/code&gt; is the only controller that inherits from &lt;code&gt;ActionController::API&lt;/code&gt;. All other controllers in turn inherit from &lt;code&gt;ApplicationController&lt;/code&gt;.</source>
          <target state="translated">通常， &lt;code&gt;ApplicationController&lt;/code&gt; 是唯一从 &lt;code&gt;ActionController::API&lt;/code&gt; 继承的控制器。所有其他控制器又继承自 &lt;code&gt;ApplicationController&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b1813582ee34406c4e4de37d56648ffafa91b226" translate="yes" xml:space="preserve">
          <source>Normally, this mechanism is used on a per-client basis. The cache middleware allows us to share this caching mechanism across clients. We can enable cross-client caching in the call to &lt;code&gt;stale?&lt;/code&gt;:</source>
          <target state="translated">通常，此机制是基于每个客户端使用的。缓存中间件使我们可以在客户端之间共享此缓存机制。我们可以在对 &lt;code&gt;stale?&lt;/code&gt; 的调用中启用跨客户端缓存吗？：</target>
        </trans-unit>
        <trans-unit id="997531dd7ea0389626b86133c48895591fcda728" translate="yes" xml:space="preserve">
          <source>Normally, you do not have to call this method directly at all. Use the factory class methods of &lt;code&gt;build_after_upload&lt;/code&gt; and &lt;code&gt;create_after_upload!&lt;/code&gt;.</source>
          <target state="translated">通常，您根本不必直接调用此方法。使用 &lt;code&gt;build_after_upload&lt;/code&gt; 和 &lt;code&gt;create_after_upload!&lt;/code&gt; 的工厂类方法！。</target>
        </trans-unit>
        <trans-unit id="cf5007b07c89f0ace0d40e4bbc19ce4ffe7536c3" translate="yes" xml:space="preserve">
          <source>Not all migrations change the schema. Some just fix the data:</source>
          <target state="translated">并非所有的迁移都会改变模式。有些只是修复数据。</target>
        </trans-unit>
        <trans-unit id="2fca96ad94b6af17e7dbcc07cff7f6d533f7b221" translate="yes" xml:space="preserve">
          <source>Not all web servers support streaming out-of-the-box. You need to check the instructions for each of them.</source>
          <target state="translated">并非所有的网络服务器都支持开箱即用的流媒体。你需要查看每个服务器的说明。</target>
        </trans-unit>
        <trans-unit id="06657b8133ea9b4e185fb080234e3a0364fad6ca" translate="yes" xml:space="preserve">
          <source>Not very DRY, eh? We can fix this by using events instead. We'll add a &lt;code&gt;data-*&lt;/code&gt; attribute to our link, and then bind a handler to the click event of every link that has that attribute:</source>
          <target state="translated">不是很干，是吗？我们可以改用事件来解决。我们将向链接添加 &lt;code&gt;data-*&lt;/code&gt; 属性，然后将处理程序绑定到具有该属性的每个链接的click事件：</target>
        </trans-unit>
        <trans-unit id="8a01dd84a7593bdb2c8fb765b3146a0f514f25b7" translate="yes" xml:space="preserve">
          <source>NotNullViolation</source>
          <target state="translated">NotNullViolation</target>
        </trans-unit>
        <trans-unit id="9e126b084c1db58a37584261f9012e35f671ac72" translate="yes" xml:space="preserve">
          <source>Notably, the Rails routing system calls &lt;code&gt;to_param&lt;/code&gt; on models to get a value for the &lt;code&gt;:id&lt;/code&gt; placeholder. &lt;code&gt;ActiveRecord::Base#to_param&lt;/code&gt; returns the &lt;code&gt;id&lt;/code&gt; of a model, but you can redefine that method in your models. For example, given</source>
          <target state="translated">值得注意的是，Rails路由系统在模型上调用 &lt;code&gt;to_param&lt;/code&gt; 以获得 &lt;code&gt;:id&lt;/code&gt; 占位符的值。 &lt;code&gt;ActiveRecord::Base#to_param&lt;/code&gt; 返回模型的 &lt;code&gt;id&lt;/code&gt; ，但是您可以在模型中重新定义该方法。例如，给定</target>
        </trans-unit>
        <trans-unit id="3ae806db7c0984a3428e2d88329b2a10cf8332e7" translate="yes" xml:space="preserve">
          <source>Note about replacing already defined headers:</source>
          <target state="translated">关于替换已经定义的标题的说明。</target>
        </trans-unit>
        <trans-unit id="c095fd5765c7e05c2ff1778309b8fa41345203ed" translate="yes" xml:space="preserve">
          <source>Note also that destroying a record preserves its ID in the model instance, so deleted models are still comparable.</source>
          <target state="translated">还需要注意的是,销毁一条记录会保留它在模型实例中的ID,所以被删除的模型还是可以比较的。</target>
        </trans-unit>
        <trans-unit id="7694cc2f1f0145560dfa9380500275db32ac89c8" translate="yes" xml:space="preserve">
          <source>Note an object is not required to implement all APIs in order to work with Action Pack. This module only intends to provide guidance in case you want all features out of the box.</source>
          <target state="translated">请注意,一个对象不需要实现所有的API才能与Action Pack一起工作。这个模块只是为了提供指导,以防您想获得所有的功能。</target>
        </trans-unit>
        <trans-unit id="d151fd14b51016b3cc7c384691610fb0bb532780" translate="yes" xml:space="preserve">
          <source>Note here that the routes are drawn upon the &lt;code&gt;Blorgh::Engine&lt;/code&gt; object rather than the &lt;code&gt;YourApp::Application&lt;/code&gt; class. This is so that the engine routes are confined to the engine itself and can be mounted at a specific point as shown in the &lt;a href=&quot;#test-directory&quot;&gt;test directory&lt;/a&gt; section. It also causes the engine's routes to be isolated from those routes that are within the application. The &lt;a href=&quot;#routes&quot;&gt;Routes&lt;/a&gt; section of this guide describes it in detail.</source>
          <target state="translated">请注意，路由是在 &lt;code&gt;Blorgh::Engine&lt;/code&gt; 对象而不是 &lt;code&gt;YourApp::Application&lt;/code&gt; 类上绘制的。这样一来，引擎路线就限于引擎本身，并且可以安装在特定位置，如&lt;a href=&quot;#test-directory&quot;&gt;测试目录&lt;/a&gt;部分所示。这还会使引擎的路线与应用程序内的那些路线隔离。本指南的&amp;ldquo; &lt;a href=&quot;#routes&quot;&gt;路线&amp;rdquo;&lt;/a&gt;部分对其进行了详细说明。</target>
        </trans-unit>
        <trans-unit id="24c5cab7750f2ca8837b173b4a826ddf4d2d4cca" translate="yes" xml:space="preserve">
          <source>Note in particular that truncation takes into account the length of the omission string.</source>
          <target state="translated">需要特别注意的是,截断时要考虑到省略字符串的长度。</target>
        </trans-unit>
        <trans-unit id="78b28b6681145d5417ac3c0780f932b9f655ecb1" translate="yes" xml:space="preserve">
          <source>Note in the previous example only one key was symbolized.</source>
          <target state="translated">请注意,在前面的例子中只象征了一个键。</target>
        </trans-unit>
        <trans-unit id="2cf0874701acc0cffe506f4241beac6925cd1806" translate="yes" xml:space="preserve">
          <source>Note in the previous example that increments may be negative.</source>
          <target state="translated">请注意,在前面的例子中,增量可能是负数。</target>
        </trans-unit>
        <trans-unit id="e9212787e26354a3c8b4c889cac5d5888c2c0c12" translate="yes" xml:space="preserve">
          <source>Note that &quot;%0d%0a&quot; is URL-encoded for &quot;\r\n&quot; which is a carriage-return and line-feed (CRLF) in Ruby. So the resulting HTTP header for the second example will be the following because the second Location header field overwrites the first.</source>
          <target state="translated">请注意,&quot;%0d%0a &quot;是URL编码的&quot;\r\n&quot;,在Ruby中是一个回车和换行(CRLF)。所以第二个例子的HTTP头会是下面的,因为第二个Location头会覆盖第一个。</target>
        </trans-unit>
        <trans-unit id="c66d170fe2e3fe3157ac0fda9773660aea982fef" translate="yes" xml:space="preserve">
          <source>Note that &amp;ldquo;TRUNCATE&amp;rdquo; is also a MySQL DDL statement!</source>
          <target state="translated">注意，&amp;ldquo; TRUNCATE&amp;rdquo;也是MySQL DDL语句！</target>
        </trans-unit>
        <trans-unit id="a44c012e2aa14d3cf71de66005ce218c80932da4" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;../nestedattributes/classmethods#method-i-accepts_nested_attributes_for&quot;&gt;ActiveRecord::NestedAttributes::ClassMethods#accepts_nested_attributes_for&lt;/a&gt; sets &lt;code&gt;:autosave&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">注意，&lt;a href=&quot;../nestedattributes/classmethods#method-i-accepts_nested_attributes_for&quot;&gt;ActiveRecord :: NestedAttributes :: ClassMethods＃accepts_nested_attributes_for&lt;/a&gt;将 &lt;code&gt;:autosave&lt;/code&gt; autosave设置为 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="38923273a1ac5388fdafcc0d052b80b100edca09" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;formbuilder#method-i-fields_for&quot;&gt;#fields_for&lt;/a&gt; will automatically generate a hidden field to store the ID of the record. There are circumstances where this hidden field is not needed and you can pass &lt;code&gt;include_id: false&lt;/code&gt; to prevent &lt;a href=&quot;formbuilder#method-i-fields_for&quot;&gt;#fields_for&lt;/a&gt; from rendering it automatically.</source>
          <target state="translated">请注意，&lt;a href=&quot;formbuilder#method-i-fields_for&quot;&gt;＃fields_for&lt;/a&gt;将自动生成一个隐藏字段来存储记录的ID。在某些情况下，不需要此隐藏字段，您可以传递 &lt;code&gt;include_id: false&lt;/code&gt; 以防止&lt;a href=&quot;formbuilder#method-i-fields_for&quot;&gt;#fields_for&lt;/a&gt;自动呈现它。</target>
        </trans-unit>
        <trans-unit id="58fa56f7cb58d6bceba0d8992232bc1ce70dad69" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;formhelper#method-i-fields_for&quot;&gt;#fields_for&lt;/a&gt; will automatically generate a hidden field to store the ID of the record. There are circumstances where this hidden field is not needed and you can pass &lt;code&gt;include_id: false&lt;/code&gt; to prevent &lt;a href=&quot;formhelper#method-i-fields_for&quot;&gt;#fields_for&lt;/a&gt; from rendering it automatically.</source>
          <target state="translated">请注意，&lt;a href=&quot;formhelper#method-i-fields_for&quot;&gt;＃fields_for&lt;/a&gt;将自动生成一个隐藏字段来存储记录的ID。在某些情况下，不需要此隐藏字段，您可以传递 &lt;code&gt;include_id: false&lt;/code&gt; 以防止&lt;a href=&quot;formhelper#method-i-fields_for&quot;&gt;#fields_for&lt;/a&gt;自动呈现它。</target>
        </trans-unit>
        <trans-unit id="8d6baf90f202a6f42a23fe78dcfdfc40689608ba" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;https://github.com/guard/listen#issues--limitations&quot;&gt;some setups are unsupported&lt;/a&gt;.</source>
          <target state="translated">请注意，&lt;a href=&quot;https://github.com/guard/listen#issues--limitations&quot;&gt;某些设置不受支持&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="73d319a82de5469887e65f4e1b3e5b326d201bb0" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;querymethods#method-i-includes&quot;&gt;includes&lt;/a&gt; works with association names while &lt;a href=&quot;querymethods#method-i-references&quot;&gt;references&lt;/a&gt; needs the actual table name.</source>
          <target state="translated">请注意，&lt;a href=&quot;querymethods#method-i-includes&quot;&gt;包括&lt;/a&gt;具有关联名称的作品，而&lt;a href=&quot;querymethods#method-i-references&quot;&gt;引用&lt;/a&gt;需要实际的表名称。</target>
        </trans-unit>
        <trans-unit id="d8e687fc1dc77b6bcff094a5807d77a44d345aed" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;schemastatements#method-i-create_join_table&quot;&gt;create_join_table&lt;/a&gt; does not create any indices by default; you can use its block form to do so yourself:</source>
          <target state="translated">请注意，默认情况下&lt;a href=&quot;schemastatements#method-i-create_join_table&quot;&gt;create_join_table&lt;/a&gt;不会创建任何索引。您可以使用其块形式自己进行操作：</target>
        </trans-unit>
        <trans-unit id="7c811d3f55dffacb3921985a1c74934b15a7fe8d" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;:controller&lt;/code&gt;, &lt;code&gt;:action&lt;/code&gt; and &lt;code&gt;:id&lt;/code&gt; are interpreted as URL query parameters and thus available through &lt;code&gt;params&lt;/code&gt; in an action.</source>
          <target state="translated">注意 &lt;code&gt;:controller&lt;/code&gt; ， &lt;code&gt;:action&lt;/code&gt; 和 &lt;code&gt;:id&lt;/code&gt; 被解释为URL查询参数，因此可以通过操作中的 &lt;code&gt;params&lt;/code&gt; 来使用。</target>
        </trans-unit>
        <trans-unit id="dc3176ed2b3dd187522e4366e6d013975d35837d" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;:dependent&lt;/code&gt; is implemented using Rails' callback system, which works by processing callbacks in order. Therefore, other callbacks declared either before or after the &lt;code&gt;:dependent&lt;/code&gt; option can affect what it does.</source>
          <target state="translated">注意 &lt;code&gt;:dependent&lt;/code&gt; 是使用Rails的回调系统实现的，该系统通过按顺序处理回调来工作。因此，在 &lt;code&gt;:dependent&lt;/code&gt; 选项之前或之后声明的其他回调可能会影响其功能。</target>
        </trans-unit>
        <trans-unit id="27ce03a2af56f6db4c7888f2270689c9d52b7eb4" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;:dependent&lt;/code&gt; option is ignored for &lt;a href=&quot;classmethods#method-i-has_one&quot;&gt;has_one&lt;/a&gt;&lt;code&gt;:through&lt;/code&gt; associations.</source>
          <target state="translated">请注意，&lt;a href=&quot;classmethods#method-i-has_one&quot;&gt;has_one &lt;/a&gt; &lt;code&gt;:through&lt;/code&gt; 关联将忽略 &lt;code&gt;:dependent&lt;/code&gt; 选项。</target>
        </trans-unit>
        <trans-unit id="325dbc5769cb675d6be42dbd169dff67360c0183" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;:dependent&lt;/code&gt; option is ignored when using &lt;code&gt;:through&lt;/code&gt; option.</source>
          <target state="translated">注意 &lt;code&gt;:dependent&lt;/code&gt; 使用 &lt;code&gt;:through&lt;/code&gt; 选项时，：dependent选项将被忽略。</target>
        </trans-unit>
        <trans-unit id="dc0da45d44e4ef2c4f7a2df800102b6112ec456b" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;:if&lt;/code&gt; has priority over &lt;code&gt;:except&lt;/code&gt; in case they are used together.</source>
          <target state="translated">注意 &lt;code&gt;:if&lt;/code&gt; 优先于：if， &lt;code&gt;:except&lt;/code&gt; 一起使用。</target>
        </trans-unit>
        <trans-unit id="7a64c122b47cf95270a43e85eeebf6bb50d00438" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;:only&lt;/code&gt; has priority over &lt;code&gt;:if&lt;/code&gt; in case they are used together.</source>
          <target state="translated">注意 &lt;code&gt;:if&lt;/code&gt; 一起使用， &lt;code&gt;:only&lt;/code&gt; 优先于：if。</target>
        </trans-unit>
        <trans-unit id="565db700fe7dd945135cedb2356482108c2bba25" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;ActiveModel::Validations&lt;/code&gt; automatically adds an &lt;code&gt;errors&lt;/code&gt; method to your instances initialized with a new &lt;code&gt;ActiveModel::Errors&lt;/code&gt; object, so there is no need for you to do this manually.</source>
          <target state="translated">注意， &lt;code&gt;ActiveModel::Validations&lt;/code&gt; 自动向您的实例添加一个 &lt;code&gt;errors&lt;/code&gt; 方法，该实例使用新的 &lt;code&gt;ActiveModel::Errors&lt;/code&gt; 对象初始化，因此您无需手动执行此操作。</target>
        </trans-unit>
        <trans-unit id="82ddc1fd214cfcde0937046ec7f0683ab8c3bf5c" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;autosave: false&lt;/code&gt; is not same as not declaring &lt;code&gt;:autosave&lt;/code&gt;. When the &lt;code&gt;:autosave&lt;/code&gt; option is not present then new association records are saved but the updated association records are not saved.</source>
          <target state="translated">请注意， &lt;code&gt;autosave: false&lt;/code&gt; 与未声明 &lt;code&gt;:autosave&lt;/code&gt; 相同。如果 &lt;code&gt;:autosave&lt;/code&gt; 选项不存在，则将保存新的关联记录，但不会保存更新的关联记录。</target>
        </trans-unit>
        <trans-unit id="c8d80f72f917064aa72f4120b7e0525fbac8be68" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;classify&lt;/code&gt; returns a class name as a string. You can get the actual class object invoking &lt;code&gt;constantize&lt;/code&gt; on it, explained next.</source>
          <target state="translated">请注意， &lt;code&gt;classify&lt;/code&gt; 将类名作为字符串返回。您可以在其上调用实际的类对象，以对其进行 &lt;code&gt;constantize&lt;/code&gt; 量化，如下所述。</target>
        </trans-unit>
        <trans-unit id="c6c01f02771dd2025c81366f7b4ab305fdcf9eff" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;connected_to&lt;/code&gt; with a role will look up an existing connection and switch using the connection specification name. This means that if you pass an unknown role like &lt;code&gt;connected_to(role: :nonexistent)&lt;/code&gt; you will get an error that says &lt;code&gt;ActiveRecord::ConnectionNotEstablished (No connection pool with 'AnimalsBase' found
for the 'nonexistent' role.)&lt;/code&gt;</source>
          <target state="translated">请注意，具有角色的 &lt;code&gt;connected_to&lt;/code&gt; 将查找现有连接，并使用连接规范名称进行切换。这意味着，如果您传递一个未知角色，例如 &lt;code&gt;connected_to(role: :nonexistent)&lt;/code&gt; &lt;code&gt;ActiveRecord::ConnectionNotEstablished (No connection pool with 'AnimalsBase' found for the 'nonexistent' role.)&lt;/code&gt; ），您将收到一条错误消息，提示ActiveRecord :: ConnectionNotEstablished（未为&amp;ldquo;不存在&amp;rdquo;的角色找到带有&amp;ldquo; AnimalsBase&amp;rdquo;的连接池。）</target>
        </trans-unit>
        <trans-unit id="d25a94880736f451c356dfd25b8f9700646689b1" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;content_for&lt;/code&gt; concatenates (default) the blocks it is given for a particular identifier in order. For example:</source>
          <target state="translated">请注意， &lt;code&gt;content_for&lt;/code&gt; 按顺序串联（默认）为特定标识符提供的块。例如：</target>
        </trans-unit>
        <trans-unit id="f709bc03cc9989b690018bd7796015bd85e42d21" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;deliver_later&lt;/code&gt; will execute your method from the background job.</source>
          <target state="translated">请注意， &lt;code&gt;deliver_later&lt;/code&gt; 将在后台作业中执行您的方法。</target>
        </trans-unit>
        <trans-unit id="ace384731e2681d12d2903467f1e2b7abe234a6d" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;reverse_update&lt;/code&gt; has no bang.</source>
          <target state="translated">请注意， &lt;code&gt;reverse_update&lt;/code&gt; 没有爆炸。</target>
        </trans-unit>
        <trans-unit id="6d41aeffaefbf99cbff2faf9bf36f1aca03dbce1" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;save&lt;/code&gt; also has the ability to skip validations if passed &lt;code&gt;validate:
false&lt;/code&gt; as an argument. This technique should be used with caution.</source>
          <target state="translated">请注意，如果传递了 &lt;code&gt;validate: false&lt;/code&gt; 作为参数，则 &lt;code&gt;save&lt;/code&gt; 还可以跳过验证。应谨慎使用此技术。</target>
        </trans-unit>
        <trans-unit id="5f9f6fa6da45470fd512ddf42d74032a3e93aecc" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;touch&lt;/code&gt; must be used on a persisted object, or else an &lt;a href=&quot;activerecorderror&quot;&gt;ActiveRecordError&lt;/a&gt; will be thrown. For example:</source>
          <target state="translated">请注意，必须在持久对象上使用 &lt;code&gt;touch&lt;/code&gt; ，否则将抛出&lt;a href=&quot;activerecorderror&quot;&gt;ActiveRecordError&lt;/a&gt;。例如：</target>
        </trans-unit>
        <trans-unit id="b9543a285676c6581ed0cdcd17dc85dccd1e4f6a" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;try&lt;/code&gt; will swallow no-method errors, returning nil instead. If you want to protect against typos, use &lt;code&gt;try!&lt;/code&gt; instead:</source>
          <target state="translated">请注意， &lt;code&gt;try&lt;/code&gt; 将吞并无方法错误，而是返回nil。如果要防止输入错误，请 &lt;code&gt;try!&lt;/code&gt; 使用！代替：</target>
        </trans-unit>
        <trans-unit id="723edf597c0f2c3bfba4a36a28e7ff66ad9453dc" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;where(...)&lt;/code&gt; returns a relation, not an array like the old finders. If you require an &lt;code&gt;Array&lt;/code&gt;, use &lt;code&gt;where(...).to_a&lt;/code&gt;.</source>
          <target state="translated">请注意， &lt;code&gt;where(...)&lt;/code&gt; 返回一个关系，而不是像旧的查找程序那样的数组。如果需要 &lt;code&gt;Array&lt;/code&gt; ，请使用 &lt;code&gt;where(...).to_a&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="89aeb743b6e9b920399d003494bf2bc2791d70d4" translate="yes" xml:space="preserve">
          <source>Note that &lt;em&gt;cross-site scripting (XSS) vulnerabilities bypass all CSRF protections&lt;/em&gt;. XSS gives the attacker access to all elements on a page, so they can read the CSRF security token from a form or directly submit the form. Read &lt;a href=&quot;#cross-site-scripting-xss&quot;&gt;more about XSS&lt;/a&gt; later.</source>
          <target state="translated">请注意，&lt;em&gt;跨站点脚本（XSS）漏洞绕过了所有CSRF保护&lt;/em&gt;。XSS使攻击者可以访问页面上的所有元素，因此他们可以从表单读取CSRF安全令牌或直接提交表单。稍后阅读&lt;a href=&quot;#cross-site-scripting-xss&quot;&gt;有关XSS的更多信息&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7947c734a16dab7b02f65f3261e5ec81aacc1fd7" translate="yes" xml:space="preserve">
          <source>Note that Active Record models will automatically detect their primary key. This can be avoided by using &lt;a href=&quot;../attributemethods/primarykey/classmethods#method-i-primary_key-3D&quot;&gt;self.primary_key=&lt;/a&gt; on the model to define the key explicitly.</source>
          <target state="translated">请注意，Active Record模型将自动检测其主键。可以通过在模型上使用&lt;a href=&quot;../attributemethods/primarykey/classmethods#method-i-primary_key-3D&quot;&gt;self.primary_key =&lt;/a&gt;明确定义密钥来避免这种情况。</target>
        </trans-unit>
        <trans-unit id="22356cd337b0c6c9dab8adae88cbd559bed7ad97" translate="yes" xml:space="preserve">
          <source>Note that an &quot;around&quot; filter also wraps rendering. In particular, if in the example above, the view itself reads from the database (e.g. via a scope), it will do so within the transaction and thus present the data to preview.</source>
          <target state="translated">请注意,&quot;周围 &quot;过滤器也包裹着渲染。特别是,如果在上面的例子中,视图本身从数据库中读取数据(例如通过作用域),它将在事务中进行读取,从而将数据呈现给预览。</target>
        </trans-unit>
        <trans-unit id="33c38c998a3ea7a672e44bb1c497e9aae87c43e8" translate="yes" xml:space="preserve">
          <source>Note that an object instantiated with &lt;code&gt;new&lt;/code&gt; will not report errors even if it's technically invalid, because validations are automatically run only when the object is saved, such as with the &lt;code&gt;create&lt;/code&gt; or &lt;code&gt;save&lt;/code&gt; methods.</source>
          <target state="translated">请注意，使用 &lt;code&gt;new&lt;/code&gt; 实例化的对象即使在技术上无效也不会报告错误，因为仅当保存对象（例如，使用 &lt;code&gt;create&lt;/code&gt; 或 &lt;code&gt;save&lt;/code&gt; 方法）时，验证才会自动运行。</target>
        </trans-unit>
        <trans-unit id="6f1c15a9adf9cf7aefea6b6a4f52f3bdd59c79b7" translate="yes" xml:space="preserve">
          <source>Note that anything marked as an identifier will automatically create a delegate by the same name on any channel instances created off the connection.</source>
          <target state="translated">请注意,任何标记为标识符的东西都会自动在连接外创建的任何通道实例上创建一个同名的委托。</target>
        </trans-unit>
        <trans-unit id="5cf442486084fb72e4ad77056cb08bfbaed774fb" translate="yes" xml:space="preserve">
          <source>Note that appending directly to &lt;code&gt;I18n.load_paths&lt;/code&gt; instead of to the application's configured i18n will &lt;em&gt;not&lt;/em&gt; override translations from external gems.</source>
          <target state="translated">请注意，直接附加到 &lt;code&gt;I18n.load_paths&lt;/code&gt; 而不是附加到应用程序配置的i18n &lt;em&gt;不会&lt;/em&gt;覆盖来自外部gem的转换。</target>
        </trans-unit>
        <trans-unit id="46a4821ec5868bd38360ccd2974f3d24f5c11f98" translate="yes" xml:space="preserve">
          <source>Note that basic authentication is insecure over unencrypted HTTP. An attacker that intercepts cleartext requests to the Postmark ingress can learn its password. You should only use the Postmark ingress over HTTPS.</source>
          <target state="translated">请注意,基本认证在未加密的HTTP上是不安全的。拦截到Postmark入口的明文请求的攻击者可以学习它的密码。你应该只在HTTPS上使用Postmark ingress。</target>
        </trans-unit>
        <trans-unit id="5374749430d739cb1e5e2cfb76a02f30988ae462" translate="yes" xml:space="preserve">
          <source>Note that basic authentication is insecure over unencrypted HTTP. An attacker that intercepts cleartext requests to the SendGrid ingress can learn its password. You should only use the SendGrid ingress over HTTPS.</source>
          <target state="translated">请注意,基本的认证在未加密的HTTP上是不安全的。拦截到SendGrid入口的明文请求的攻击者可以得知其密码。你应该只在HTTPS上使用SendGrid入口。</target>
        </trans-unit>
        <trans-unit id="57ec50d8410464d568b5c05fc066b0c1779894de" translate="yes" xml:space="preserve">
          <source>Note that basic authentication is insecure over unencrypted HTTP. An attacker that intercepts cleartext requests to the ingress can learn its password. You should only use this ingress over HTTPS.</source>
          <target state="translated">请注意,基本认证在未加密的HTTP上是不安全的。拦截到入口的明文请求的攻击者可以得知其密码。你应该只在HTTPS上使用这个入口。</target>
        </trans-unit>
        <trans-unit id="78dbd1cc164b82b4dcb8b006687d565c7961a7a4" translate="yes" xml:space="preserve">
          <source>Note that being unreachable does not imply being anonymous:</source>
          <target state="translated">注意,无法联系并不意味着匿名。</target>
        </trans-unit>
        <trans-unit id="e8d3ecb667ba792a097afde3710779d973b5d3cf" translate="yes" xml:space="preserve">
          <source>Note that building your own string from user input may expose your application to injection attacks if not done properly. As an alternative, it is recommended to use one of the following methods.</source>
          <target state="translated">请注意,如果操作不当,从用户输入中构建自己的字符串可能会使你的应用程序受到注入攻击。作为一种替代方法,建议使用以下方法之一。</target>
        </trans-unit>
        <trans-unit id="88c3e83adab9320795c50aab4d553ec7f849c321" translate="yes" xml:space="preserve">
          <source>Note that changing your secret_key_base will invalidate all existing session. Additionally, you should take care to make sure you are not relying on the ability to decode signed cookies generated by your app in external applications or JavaScript before changing it.</source>
          <target state="translated">请注意,更改您的secret_key_base将使所有现有会话无效。此外,在更改之前,您应该注意确保您不依赖于外部应用程序或JavaScript中由您的应用程序生成的签名cookie的解码能力。</target>
        </trans-unit>
        <trans-unit id="6df0738b3ba5e7544dc16135160c562824d55adc" translate="yes" xml:space="preserve">
          <source>Note that checking for uniqueness using something like &lt;code&gt;include?&lt;/code&gt; is subject to race conditions. Do not attempt to use &lt;code&gt;include?&lt;/code&gt; to enforce distinctness in an association. For instance, using the article example from above, the following code would be racy because multiple users could be attempting this at the same time:</source>
          <target state="translated">请注意，使用诸如 &lt;code&gt;include?&lt;/code&gt; 类的内容检查唯一性。受比赛条件的影响。不要尝试使用 &lt;code&gt;include?&lt;/code&gt; 加强关联中的独特性。例如，使用上面的文章示例，下面的代码将很合理，因为多个用户可能同时尝试这样做：</target>
        </trans-unit>
        <trans-unit id="ae15203738a3a52937b4eae19c6cd23f7d2a5d67" translate="yes" xml:space="preserve">
          <source>Note that core extensions define &lt;code&gt;Hash#with_indifferent_access&lt;/code&gt;:</source>
          <target state="translated">请注意，核心扩展定义了 &lt;code&gt;Hash#with_indifferent_access&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="aab3b21d54b61763e1564b0cc5ab99fbc9bfb2e4" translate="yes" xml:space="preserve">
          <source>Note that if a query matches multiple records, &lt;code&gt;find_by&lt;/code&gt; will fetch only the first one and ignore the others (see the &lt;code&gt;LIMIT 1&lt;/code&gt; statement above).</source>
          <target state="translated">请注意，如果查询匹配多个记录，则 &lt;code&gt;find_by&lt;/code&gt; 将仅获取第一个记录，而忽略其他记录（请参见上面的 &lt;code&gt;LIMIT 1&lt;/code&gt; 语句）。</target>
        </trans-unit>
        <trans-unit id="4f44b8fe38600ce94c3eb35df237f1de437ac4de" translate="yes" xml:space="preserve">
          <source>Note that if the target is not &lt;code&gt;nil&lt;/code&gt; then the call is attempted regardless of the &lt;code&gt;:allow_nil&lt;/code&gt; option, and thus an exception is still raised if said object does not respond to the method:</source>
          <target state="translated">请注意，如果目标不是 &lt;code&gt;nil&lt;/code&gt; ,则无论 &lt;code&gt;:allow_nil&lt;/code&gt; 选项如何，都将尝试调用，因此，如果所述对象不响应该方法，则仍会引发异常：</target>
        </trans-unit>
        <trans-unit id="b72ef2b72c287b15edb8d7e8e3522050aa85ca8a" translate="yes" xml:space="preserve">
          <source>Note that if you do not specify the &lt;code&gt;:inverse_of&lt;/code&gt; option, then Active Record will try to automatically guess the inverse association based on heuristics.</source>
          <target state="translated">请注意，如果您未指定 &lt;code&gt;:inverse_of&lt;/code&gt; 选项，则Active Record将尝试根据启发式方法自动猜测逆向关联。</target>
        </trans-unit>
        <trans-unit id="5dbde3470700eeb4eeaddf252a725a2d26c26cf8" translate="yes" xml:space="preserve">
          <source>Note that if you return a path without a leading slash then the URL is prefixed with the current SCRIPT_NAME environment variable. This is typically '/' but may be different in a mounted engine or where the application is deployed to a subdirectory of a website.</source>
          <target state="translated">请注意,如果您返回的路径没有前导斜线,那么URL会以当前的SCRIPT_NAME环境变量作为前缀。这通常是'/',但在挂载的引擎中,或在应用程序部署到网站的子目录中,可能会有所不同。</target>
        </trans-unit>
        <trans-unit id="c61f8e19cb72840c59ad034d835c6608ba8ae691" translate="yes" xml:space="preserve">
          <source>Note that if you use &lt;code&gt;permit&lt;/code&gt; in a key that points to a hash, it won't allow all the hash. You also need to specify which attributes inside the hash should be permitted.</source>
          <target state="translated">请注意，如果您在指向散列的键中使用 &lt;code&gt;permit&lt;/code&gt; ，则将不允许所有散列。您还需要指定散列内的哪些属性应被允许。</target>
        </trans-unit>
        <trans-unit id="1fc227d776d965752397dbfd3f1acdf5bc6a2ed1" translate="yes" xml:space="preserve">
          <source>Note that if you want to immediately require dependencies when the engine is required, you should require them before the engine's initialization. For example:</source>
          <target state="translated">需要注意的是,如果你想在需要引擎的时候立即要求依赖,你应该在引擎初始化之前要求它们。例如</target>
        </trans-unit>
        <trans-unit id="aa297c0fe95f42b1a1cac85dbe866912a193d048" translate="yes" xml:space="preserve">
          <source>Note that in that case &lt;code&gt;module_parent&lt;/code&gt; returns &lt;code&gt;Object&lt;/code&gt;.</source>
          <target state="translated">请注意，在这种情况下， &lt;code&gt;module_parent&lt;/code&gt; 返回 &lt;code&gt;Object&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="01b4e173af86d46b015dbb7131d2e90d6a871b4b" translate="yes" xml:space="preserve">
          <source>Note that in that case &lt;code&gt;module_parent_name&lt;/code&gt; returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">请注意，在这种情况下， &lt;code&gt;module_parent_name&lt;/code&gt; 返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="29d18aa10fe13a77b68f28afe44d33a98a83b983" translate="yes" xml:space="preserve">
          <source>Note that in the above example, to disallow the creation of a plain &lt;code&gt;Polygon&lt;/code&gt;, you should use &lt;code&gt;validates :type, presence:
true&lt;/code&gt;, instead of setting it as an abstract class. This way, &lt;code&gt;Polygon&lt;/code&gt; will stay in the hierarchy, and Active Record will continue to correctly derive the table name.</source>
          <target state="translated">请注意，在上面的示例中，要禁止创建普通的 &lt;code&gt;Polygon&lt;/code&gt; ，应使用 &lt;code&gt;validates :type, presence: true&lt;/code&gt; ，而不是将其设置为抽象类。这样， &lt;code&gt;Polygon&lt;/code&gt; 将保留在层次结构中，并且Active Record将继续正确地导出表名称。</target>
        </trans-unit>
        <trans-unit id="37ee3be5d2ed36a645c1e37b3a6a3854e08fb2cc" translate="yes" xml:space="preserve">
          <source>Note that interceptors need to be registered both with &lt;code&gt;register_interceptor&lt;/code&gt; and &lt;code&gt;register_preview_interceptor&lt;/code&gt; if they should operate on both sending and previewing emails.</source>
          <target state="translated">请注意，如果拦截器应同时用于发送和预览电子邮件，则必须同时向 &lt;code&gt;register_interceptor&lt;/code&gt; 和 &lt;code&gt;register_preview_interceptor&lt;/code&gt; 注册。</target>
        </trans-unit>
        <trans-unit id="e002c10e961f1c824fc07296b73d779cf5dde89f" translate="yes" xml:space="preserve">
          <source>Note that it also means that associations marked for destruction won't be destroyed directly. They will however still be marked for destruction.</source>
          <target state="translated">请注意,这也意味着标记为销毁的社团不会被直接销毁。但是,它们仍然会被标记为销毁。</target>
        </trans-unit>
        <trans-unit id="f3a0409f0e1222b726a5d13c3e9b75b2f1cb2598" translate="yes" xml:space="preserve">
          <source>Note that it handles both ASCII and Unicode whitespace.</source>
          <target state="translated">请注意,它可以处理ASCII和Unicode的空白。</target>
        </trans-unit>
        <trans-unit id="072cbc6561b444de9cb58baa2b73bc9a7f982077" translate="yes" xml:space="preserve">
          <source>Note that it is also possible to assign a flash message as part of the redirection. You can assign &lt;code&gt;:notice&lt;/code&gt;, &lt;code&gt;:alert&lt;/code&gt; or the general purpose &lt;code&gt;:flash&lt;/code&gt;:</source>
          <target state="translated">请注意，也可以分配Flash消息作为重定向的一部分。您可以分配 &lt;code&gt;:notice&lt;/code&gt; ， &lt;code&gt;:alert&lt;/code&gt; 或通用的 &lt;code&gt;:flash&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="dcc3e916a86372cb28ffccd804eefdd6ebdbdcff" translate="yes" xml:space="preserve">
          <source>Note that it's still possible to generate a race condition in the database in the same way that &lt;a href=&quot;../validations/classmethods#method-i-validates_uniqueness_of&quot;&gt;validates_uniqueness_of&lt;/a&gt; can. You're encouraged to add a unique index in the database to deal with this even more unlikely scenario.</source>
          <target state="translated">请注意，仍然可以以&lt;a href=&quot;../validations/classmethods#method-i-validates_uniqueness_of&quot;&gt;validates_uniqueness_of&lt;/a&gt;可以的相同方式在数据库中生成竞争条件。建议您在数据库中添加一个唯一索引，以处理这种更不可能的情况。</target>
        </trans-unit>
        <trans-unit id="1cce95eb30e93b5a6838836fe15a98374b38e1be" translate="yes" xml:space="preserve">
          <source>Note that keys are treated differently than &lt;a href=&quot;activesupport/hashwithindifferentaccess&quot;&gt;HashWithIndifferentAccess&lt;/a&gt;, meaning that string and symbol keys will not match.</source>
          <target state="translated">请注意，键的处理方式不同于&lt;a href=&quot;activesupport/hashwithindifferentaccess&quot;&gt;HashWithIndifferentAccess&lt;/a&gt;，这意味着字符串和符号键将不匹配。</target>
        </trans-unit>
        <trans-unit id="ad94e60a7f2b7c1f49651af5196003959035f01b" translate="yes" xml:space="preserve">
          <source>Note that negative CAPTCHAs are only effective against dumb bots and won't suffice to protect critical applications from targeted bots. Still, the negative and positive CAPTCHAs can be combined to increase the performance, e.g., if the &quot;honeypot&quot; field is not empty (bot detected), you won't need to verify the positive CAPTCHA, which would require an HTTPS request to Google ReCaptcha before computing the response.</source>
          <target state="translated">请注意,消极的验证码只对哑巴机器人有效,不足以保护关键应用免受目标机器人的攻击。不过,消极验证码和积极验证码还是可以结合起来提高性能,例如,如果 &quot;honeypot &quot;字段不是空的(检测到僵尸),你就不需要验证积极验证码,这就需要在计算响应之前向Google ReCaptcha发出HTTPS请求。</target>
        </trans-unit>
        <trans-unit id="b604cb6faa93098b0d6c2b2506cc1683cb7ae6ca" translate="yes" xml:space="preserve">
          <source>Note that new records are different from any other record by definition, unless the other record is the receiver itself. Besides, if you fetch existing records with &lt;code&gt;select&lt;/code&gt; and leave the ID out, you're on your own, this predicate will return false.</source>
          <target state="translated">请注意，根据定义，新记录与任何其他记录都不同，除非其他记录是接收者本身。此外，如果您使用 &lt;code&gt;select&lt;/code&gt; 来获取现有记录并保留ID，则您自己使用，则该谓词将返回false。</target>
        </trans-unit>
        <trans-unit id="22c983e77149090556408a4b167a572de601b14a" translate="yes" xml:space="preserve">
          <source>Note that now there can be more than one router in your application, and it's better to avoid passing requests through many routers. Consider this situation:</source>
          <target state="translated">注意,现在你的应用中可以有多个路由器,最好避免通过多个路由器传递请求。考虑一下这种情况。</target>
        </trans-unit>
        <trans-unit id="bb19839e635e04134fc7b559e09ccea24da6e26b" translate="yes" xml:space="preserve">
          <source>Note that numbers are not mentioned. In particular, 0 and 0.0 are &lt;strong&gt;not&lt;/strong&gt; blank.</source>
          <target state="translated">请注意，未提及数字。特别是0和0.0 &lt;strong&gt;不能为&lt;/strong&gt;空。</target>
        </trans-unit>
        <trans-unit id="a7419129c6af853c63a695a7e5692fb54165cfa7" translate="yes" xml:space="preserve">
          <source>Note that partials are not supported to be rendered with streaming, so in such cases, we just wrap them in an array.</source>
          <target state="translated">需要注意的是,不支持用流媒体渲染partials,所以在这种情况下,我们只需要将它们包裹在一个数组中。</target>
        </trans-unit>
        <trans-unit id="ae24f5949134ca75ea07bd1f7b2e67eacecdb162" translate="yes" xml:space="preserve">
          <source>Note that passing custom disallowed types will override the default types, which are Symbol and YAML.</source>
          <target state="translated">请注意,传递自定义的不允许类型将覆盖默认类型,即Symbol和YAML。</target>
        </trans-unit>
        <trans-unit id="b84d9529ac53faf44afee2779503602281d1a9c0" translate="yes" xml:space="preserve">
          <source>Note that running the &lt;code&gt;db:migrate&lt;/code&gt; command also invokes the &lt;code&gt;db:schema:dump&lt;/code&gt; command, which will update your &lt;code&gt;db/schema.rb&lt;/code&gt; file to match the structure of your database.</source>
          <target state="translated">请注意，运行 &lt;code&gt;db:migrate&lt;/code&gt; 命令还会调用 &lt;code&gt;db:schema:dump&lt;/code&gt; 命令，该命令将更新 &lt;code&gt;db/schema.rb&lt;/code&gt; 文件以匹配数据库的结构。</target>
        </trans-unit>
        <trans-unit id="41ece01fe72a7508a1b0c964b1a65ee164b23bb9" translate="yes" xml:space="preserve">
          <source>Note that setting the UUID primary key default value to &lt;code&gt;nil&lt;/code&gt; will require you to assure that you always provide a UUID value before saving a record (as primary keys cannot be &lt;code&gt;nil&lt;/code&gt;). This might be done via the &lt;code&gt;SecureRandom.uuid&lt;/code&gt; method and a &lt;code&gt;before_save&lt;/code&gt; callback, for instance.</source>
          <target state="translated">请注意，将UUID主键默认值设置为 &lt;code&gt;nil&lt;/code&gt; 将需要您确保在保存记录之前始终提供UUID值（因为主键不能为 &lt;code&gt;nil&lt;/code&gt; ）。例如，这可以通过 &lt;code&gt;SecureRandom.uuid&lt;/code&gt; 方法和 &lt;code&gt;before_save&lt;/code&gt; 回调来完成。</target>
        </trans-unit>
        <trans-unit id="289fcb6dd0c2e250498b73e7a017f254410a24ff" translate="yes" xml:space="preserve">
          <source>Note that some databases are configured to perform case-insensitive searches anyway.</source>
          <target state="translated">请注意,有些数据库被配置为执行不区分大小写的搜索。</target>
        </trans-unit>
        <trans-unit id="350f976200592f01983e5260d34b1c6c064ed87c" translate="yes" xml:space="preserve">
          <source>Note that some of the migrations may be skipped if a migration with the same name already exists in application. In such a situation you must decide whether to leave that migration or rename the migration in the application and rerun copying migrations.</source>
          <target state="translated">请注意,如果应用程序中已经存在同名迁移,则可能会跳过某些迁移。在这种情况下,您必须决定是保留该迁移,还是在应用程序中重新命名迁移,然后重新运行复制迁移。</target>
        </trans-unit>
        <trans-unit id="56eed9c041b6163206a5e9b6cdce438725ed6596" translate="yes" xml:space="preserve">
          <source>Note that the +do end+ syntax for the redirect block wouldn't work, as Ruby would pass the block to &lt;code&gt;get&lt;/code&gt; instead of &lt;code&gt;redirect&lt;/code&gt;. Use &lt;code&gt;{ ... }&lt;/code&gt; instead.</source>
          <target state="translated">请注意，重定向块的+ do end +语法不起作用，因为Ruby将传递该块以 &lt;code&gt;get&lt;/code&gt; 而不是 &lt;code&gt;redirect&lt;/code&gt; 。请改用 &lt;code&gt;{ ... }&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0b42c6a4a4341fd9958532c716f1eb5ee92beecb" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;:as&lt;/code&gt; option given to mount takes the &lt;code&gt;engine_name&lt;/code&gt; as default, so most of the time you can simply omit it.</source>
          <target state="translated">注意，指定给mount 的 &lt;code&gt;:as&lt;/code&gt; 选项默认使用 &lt;code&gt;engine_name&lt;/code&gt; ，因此大多数时候您可以简单地忽略它。</target>
        </trans-unit>
        <trans-unit id="7a468e9d4e4a4f9bded222303b80c21107fd3a82" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;:autosave&lt;/code&gt; option is automatically enabled on every association that &lt;a href=&quot;classmethods#method-i-accepts_nested_attributes_for&quot;&gt;#accepts_nested_attributes_for&lt;/a&gt; is used for.</source>
          <target state="translated">请注意，在&lt;a href=&quot;classmethods#method-i-accepts_nested_attributes_for&quot;&gt;#accepts_nested_attributes_for&lt;/a&gt;用于的每个关联上都会自动启用 &lt;code&gt;:autosave&lt;/code&gt; 选项。</target>
        </trans-unit>
        <trans-unit id="a9f9248fbb6cde034e039397fee13f9a82a3513e" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;projects_attributes=&lt;/code&gt; writer method is in fact required for &lt;a href=&quot;formbuilder#method-i-fields_for&quot;&gt;#fields_for&lt;/a&gt; to correctly identify &lt;code&gt;:projects&lt;/code&gt; as a collection, and the correct indices to be set in the form markup.</source>
          <target state="translated">请注意，实际上&lt;a href=&quot;formbuilder#method-i-fields_for&quot;&gt;#projects_for&lt;/a&gt;需要使用 &lt;code&gt;projects_attributes=&lt;/code&gt; writer方法才能正确地将 &lt;code&gt;:projects&lt;/code&gt; 标识为一个集合，并在表单标记中设置正确的索引。</target>
        </trans-unit>
        <trans-unit id="bba717142b3857ce76f41cd84a25f35a3e8fb25a" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;projects_attributes=&lt;/code&gt; writer method is in fact required for &lt;a href=&quot;formhelper#method-i-fields_for&quot;&gt;#fields_for&lt;/a&gt; to correctly identify &lt;code&gt;:projects&lt;/code&gt; as a collection, and the correct indices to be set in the form markup.</source>
          <target state="translated">请注意，实际上&lt;a href=&quot;formhelper#method-i-fields_for&quot;&gt;#projects_for&lt;/a&gt;需要使用 &lt;code&gt;projects_attributes=&lt;/code&gt; writer方法才能正确地将 &lt;code&gt;:projects&lt;/code&gt; 标识为一个集合，并在表单标记中设置正确的索引。</target>
        </trans-unit>
        <trans-unit id="68fe7c790c83e9c2b8372df6432ade06d4a90302" translate="yes" xml:space="preserve">
          <source>Note that the MD5 is taken of the entire template file, not just what's within the cache do/end call. So it's possible that changing something outside of that call will still expire the cache.</source>
          <target state="translated">请注意,MD5是取自整个模板文件,而不仅仅是缓存do/end调用中的内容。所以,在调用之外的地方改变一些东西仍然有可能会使缓存过期。</target>
        </trans-unit>
        <trans-unit id="a9d218f2ca0876e04a64af92cc587d9b53ea48ef" translate="yes" xml:space="preserve">
          <source>Note that the above code is database-agnostic: it will run in MySQL, PostgreSQL, Oracle, and others. You can learn more about migrations in the &lt;a href=&quot;active_record_migrations&quot;&gt;Active Record Migrations guide&lt;/a&gt;.</source>
          <target state="translated">请注意，上述代码与数据库无关：它将在MySQL，PostgreSQL，Oracle和其他版本中运行。您可以在&lt;a href=&quot;active_record_migrations&quot;&gt;Active Record迁移指南中&lt;/a&gt;了解有关迁移的更多信息。</target>
        </trans-unit>
        <trans-unit id="71620954de70d1be268160bad4cd86ec4e084773" translate="yes" xml:space="preserve">
          <source>Note that the closing tag cannot be of the style &lt;code&gt;-%&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">请注意，结束标记不能为 &lt;code&gt;-%&amp;gt;&lt;/code&gt; 样式。</target>
        </trans-unit>
        <trans-unit id="686dd5a3681eb94aa1b29e89f703ca327c41ee3d" translate="yes" xml:space="preserve">
          <source>Note that the default error messages are plural (e.g., &quot;is too short (minimum is %{count} characters)&quot;). For this reason, when &lt;code&gt;:minimum&lt;/code&gt; is 1 you should provide a personalized message or use &lt;code&gt;presence: true&lt;/code&gt; instead. When &lt;code&gt;:in&lt;/code&gt; or &lt;code&gt;:within&lt;/code&gt; have a lower limit of 1, you should either provide a personalized message or call &lt;code&gt;presence&lt;/code&gt; prior to &lt;code&gt;length&lt;/code&gt;.</source>
          <target state="translated">请注意，默认错误消息为复数形式（例如，&amp;ldquo;太短（最少为％{count}个字符）&amp;rdquo;）。因此，当 &lt;code&gt;:minimum&lt;/code&gt; 为1时，您应该提供个性化消息或使用 &lt;code&gt;presence: true&lt;/code&gt; 代替。当 &lt;code&gt;:in&lt;/code&gt; 或 &lt;code&gt;:within&lt;/code&gt; 的下限为1时，您应该在 &lt;code&gt;length&lt;/code&gt; 之前提供个性化消息或呼叫 &lt;code&gt;presence&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f1f0fde9874f69ccb2896442786f865a18ee23ff" translate="yes" xml:space="preserve">
          <source>Note that the endpoint, default values, and submit button label are tailored for &lt;code&gt;@person&lt;/code&gt;. That works that way because the involved helpers know whether the resource is a new record or not, and generate HTML accordingly.</source>
          <target state="translated">请注意，端点，默认值和提交按钮标签是针对 &lt;code&gt;@person&lt;/code&gt; 量身定制的。之所以这样工作是因为参与的助手知道资源是否为新记录，并相应地生成HTML。</target>
        </trans-unit>
        <trans-unit id="88b5d730eba76cc27fd97c8d6e638a4e37441c7b" translate="yes" xml:space="preserve">
          <source>Note that the filter in this case uses &lt;code&gt;send&lt;/code&gt; because the &lt;code&gt;logged_in?&lt;/code&gt; method is private and the filter does not run in the scope of the controller. This is not the recommended way to implement this particular filter, but in more simple cases it might be useful.</source>
          <target state="translated">请注意，在这种情况下，过滤器使用 &lt;code&gt;send&lt;/code&gt; ,因为 &lt;code&gt;logged_in?&lt;/code&gt; 方法是私有的，并且过滤器不在控制器范围内运行。这不是建议的实现此特定过滤器的方法，但是在更简单的情况下，它可能会很有用。</target>
        </trans-unit>
        <trans-unit id="ec7678e438c40cc3477299adc32378f068a1ddef" translate="yes" xml:space="preserve">
          <source>Note that the implicit render done by ActionController detects if &lt;code&gt;render&lt;/code&gt; has been called, so the following will work without errors:</source>
          <target state="translated">请注意，由ActionController完成的隐式渲染会检测是否已调用 &lt;code&gt;render&lt;/code&gt; ，因此以下内容将正常工作：</target>
        </trans-unit>
        <trans-unit id="be5be3e7764ae5644163769bf7cfc5d6fd2d1a1e" translate="yes" xml:space="preserve">
          <source>Note that the model is &lt;em&gt;not&lt;/em&gt; yet removed from the database:</source>
          <target state="translated">需要注意的是该模型&lt;em&gt;没有&lt;/em&gt;尚未从数据库中删除：</target>
        </trans-unit>
        <trans-unit id="954907bb7af2f55cb897a52cdad3e0923f08a201" translate="yes" xml:space="preserve">
          <source>Note that the model will &lt;em&gt;not&lt;/em&gt; be destroyed until the parent is saved.</source>
          <target state="translated">请注意，在保存父模型之前，&lt;em&gt;不会&lt;/em&gt;破坏模型。</target>
        </trans-unit>
        <trans-unit id="02a01b211c29bd75de844342e9c04d4a40fbfccc" translate="yes" xml:space="preserve">
          <source>Note that the partial layout has access to the local &lt;code&gt;article&lt;/code&gt; variable that was passed into the &lt;code&gt;render&lt;/code&gt; call. However, unlike application-wide layouts, partial layouts still have the underscore prefix.</source>
          <target state="translated">请注意，部分布局可以访问传递到 &lt;code&gt;render&lt;/code&gt; 调用中的本地 &lt;code&gt;article&lt;/code&gt; 变量。但是，与应用程序范围的布局不同，部分布局仍具有下划线前缀。</target>
        </trans-unit>
        <trans-unit id="4c3e84c4e2bb503561ce5906bf724d8b22651774" translate="yes" xml:space="preserve">
          <source>Note that the prefix takes scopes into account as well, so relations between &lt;code&gt;Catalog::Category&lt;/code&gt; and &lt;code&gt;Catalog::Product&lt;/code&gt; or &lt;code&gt;Catalog::Category&lt;/code&gt; and &lt;code&gt;CatalogProduct&lt;/code&gt; need to be updated similarly.</source>
          <target state="translated">请注意，前缀也考虑了范围，因此 &lt;code&gt;Catalog::Category&lt;/code&gt; 和 &lt;code&gt;Catalog::Product&lt;/code&gt; 或 &lt;code&gt;Catalog::Category&lt;/code&gt; 和 &lt;code&gt;CatalogProduct&lt;/code&gt; 之间的关系也需要类似地更新。</target>
        </trans-unit>
        <trans-unit id="3f0b56e9abd80e969b8d26b5222d80ad053541d7" translate="yes" xml:space="preserve">
          <source>Note that the proc/lambda is evaluated right at the start of the mail message generation, so if you set something in the default hash using a proc, and then set the same thing inside of your mailer method, it will get overwritten by the mailer method.</source>
          <target state="translated">需要注意的是,proc/lambda会在邮件消息生成之初就被评估,所以如果你使用proc在默认哈希中设置了一些东西,然后在你的mailer方法中设置了同样的东西,它将被mailer方法覆盖。</target>
        </trans-unit>
        <trans-unit id="35d1d39da63c97db09a691dee40a2f72872404f2" translate="yes" xml:space="preserve">
          <source>Note that the request method is not verified.</source>
          <target state="translated">需要注意的是,请求方式没有经过验证。</target>
        </trans-unit>
        <trans-unit id="fcc36a612f1887cd847fa353befaf752f6184ff5" translate="yes" xml:space="preserve">
          <source>Note that the request method is not verified. The different methods are available to make the tests more expressive.</source>
          <target state="translated">注意,请求方法没有经过验证。不同的方法可以让测试更有表现力。</target>
        </trans-unit>
        <trans-unit id="a17d9050880b0000053a7919d1eaaab1da7ea52f" translate="yes" xml:space="preserve">
          <source>Note that the return value of validation methods is not relevant. It's not possible to halt the validate callback chain.</source>
          <target state="translated">注意,验证方法的返回值与此无关。不能停止验证回调链。</target>
        </trans-unit>
        <trans-unit id="6264af4b7ec518a4c0d4264b64656418078b121d" translate="yes" xml:space="preserve">
          <source>Note that the usec for the time passed will be set to 0 to prevent rounding errors with external services, like MySQL (which will round instead of floor, leading to off-by-one-second errors).</source>
          <target state="translated">请注意,通过的时间的usec将被设置为0,以防止外部服务的四舍五入错误,如MySQL(它将四舍五入而不是地板,导致偏离一秒的错误)。</target>
        </trans-unit>
        <trans-unit id="09aeb0d119ddd40cd5438bcd1ca87c38a2dc4212" translate="yes" xml:space="preserve">
          <source>Note that the validator is initialized only once for the whole application life cycle, and not on each validation run.</source>
          <target state="translated">请注意,验证器在整个应用程序生命周期中只初始化一次,而不是在每次验证运行时初始化。</target>
        </trans-unit>
        <trans-unit id="46848172b64a0977b58ec6feefd30b9073bc4ca6" translate="yes" xml:space="preserve">
          <source>Note that the validator will be initialized &lt;em&gt;only once&lt;/em&gt; for the whole application life cycle, and not on each validation run, so be careful about using instance variables inside it.</source>
          <target state="translated">请注意，在整个应用程序生命周期中，验证器只会初始化&lt;em&gt;一次&lt;/em&gt;，而不是在每次验证运行时都初始化&lt;em&gt;一次&lt;/em&gt;，因此请注意在其中使用实例变量。</target>
        </trans-unit>
        <trans-unit id="ae0dd2d063090bea5af276a745916be1df9fd6a9" translate="yes" xml:space="preserve">
          <source>Note that these methods do not strictly require &lt;code&gt;Post&lt;/code&gt; to be a subclass of &lt;a href=&quot;../activerecord/base&quot;&gt;ActiveRecord::Base&lt;/a&gt;. Any &lt;code&gt;Post&lt;/code&gt; class will work as long as its instances respond to &lt;code&gt;to_key&lt;/code&gt; and &lt;code&gt;model_name&lt;/code&gt;, given that &lt;code&gt;model_name&lt;/code&gt; responds to &lt;code&gt;param_key&lt;/code&gt;. For instance:</source>
          <target state="translated">请注意，这些方法并不严格要求 &lt;code&gt;Post&lt;/code&gt; 为&lt;a href=&quot;../activerecord/base&quot;&gt;ActiveRecord :: Base&lt;/a&gt;的子类。任何 &lt;code&gt;Post&lt;/code&gt; 只要类将作为它的实例回应 &lt;code&gt;to_key&lt;/code&gt; 和 &lt;code&gt;model_name&lt;/code&gt; ，因为 &lt;code&gt;model_name&lt;/code&gt; 响应 &lt;code&gt;param_key&lt;/code&gt; 。例如：</target>
        </trans-unit>
        <trans-unit id="bc9001a2a86f3ffa7a896a66019a9acaefea21e1" translate="yes" xml:space="preserve">
          <source>Note that this conversion makes some assumptions about the duration of some periods, e.g. months are always 1/12 of year and years are 365.2425 days:</source>
          <target state="translated">请注意,这种换算方式对某些时期的持续时间做了一些假设,例如,月总是一年的1/12,年是365.2425天。</target>
        </trans-unit>
        <trans-unit id="77cc080b11bb02e1e002cb526197387a11eb18f5" translate="yes" xml:space="preserve">
          <source>Note that this is simply 'syntactic sugar' for defining an actual class method:</source>
          <target state="translated">请注意,这只是定义一个实际类方法的 &quot;语法糖&quot;。</target>
        </trans-unit>
        <trans-unit id="b0ebd4a9a6512094d1e187bcc14bccbc19a4f2eb" translate="yes" xml:space="preserve">
          <source>Note that this method actually runs the queries, since the results of some are needed by the next ones when eager loading is going on.</source>
          <target state="translated">请注意,这个方法实际上是在运行查询,因为当急切加载时,一些查询的结果是下一个查询所需要的。</target>
        </trans-unit>
        <trans-unit id="400d486fc3da7592d3e9fa738dc428190cc7b83a" translate="yes" xml:space="preserve">
          <source>Note that this module is completely decoupled from HTTP - the only requirement is a valid &lt;code&gt;_routes&lt;/code&gt; implementation.</source>
          <target state="translated">请注意，此模块与HTTP完全分离-唯一的要求是有效的 &lt;code&gt;_routes&lt;/code&gt; 实现。</target>
        </trans-unit>
        <trans-unit id="6a867944d9d1c972ce2678c23acf249fcb7f57d6" translate="yes" xml:space="preserve">
          <source>Note that this only protects you against the most common mistake when using the format validator - you always need to keep in mind that ^ and $ match the &lt;strong&gt;line&lt;/strong&gt; beginning and line end in Ruby, and not the beginning and end of a string.</source>
          <target state="translated">请注意，这仅在使用格式验证器时保护您避免最常见的错误-您始终要记住^和$匹配Ruby 中的&lt;strong&gt;行首&lt;/strong&gt;和行尾，而不匹配字符串的开头和结尾。</target>
        </trans-unit>
        <trans-unit id="40e976053cd24cf89ca5afb4e56aca4c1a475bf8" translate="yes" xml:space="preserve">
          <source>Note that this option was added as a security measure, to ensure user input cannot be used as locale information unless it is previously known. Therefore, it's recommended not to disable this option unless you have a strong reason for doing so.</source>
          <target state="translated">请注意,这个选项是作为一项安全措施添加的,以确保用户输入的信息不能被用作locale信息,除非它是事先知道的。因此,建议不要禁用这个选项,除非你有强烈的理由这样做。</target>
        </trans-unit>
        <trans-unit id="dcd7cad2f920a22df3327dba7bec9bcba84d5107" translate="yes" xml:space="preserve">
          <source>Note that this option will not affect Active Support callbacks since they never halted the chain when any value was returned.</source>
          <target state="translated">请注意,这个选项不会影响Active Support回调,因为当任何值被返回时,它们从未停止过链。</target>
        </trans-unit>
        <trans-unit id="fbd22df73644dceb2d81a8d497944e60fc8cb29d" translate="yes" xml:space="preserve">
          <source>Note that this protects you only from automatic bots, targeted tailor-made bots cannot be stopped by this. So &lt;em&gt;negative CAPTCHAs might not be good to protect login forms&lt;/em&gt;.</source>
          <target state="translated">请注意，这只能保护您免受自动漫游器的侵害，因此无法阻止有针对性的量身定制的漫游器。因此，&lt;em&gt;否定的验证码可能不利于保护登录表单&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="1c8f134d1a5ae3dfb5037cd0d0c9a0e0c1fbc96d" translate="yes" xml:space="preserve">
          <source>Note that this will also delete records marked as &lt;a href=&quot;core#method-i-readonly-3F&quot;&gt;#readonly?&lt;/a&gt;.</source>
          <target state="translated">请注意，这还将删除标记为&lt;a href=&quot;core#method-i-readonly-3F&quot;&gt;#readonly？的&lt;/a&gt;记录。。</target>
        </trans-unit>
        <trans-unit id="620da313e90e0691449cfa180d7b0fbfd2313d4c" translate="yes" xml:space="preserve">
          <source>Note that this will clear anything that is being used to validate the model for both the &lt;code&gt;validates_with&lt;/code&gt; and &lt;code&gt;validate&lt;/code&gt; methods. It clears the validators that are created with an invocation of &lt;code&gt;validates_with&lt;/code&gt; and the callbacks that are set by an invocation of &lt;code&gt;validate&lt;/code&gt;.</source>
          <target state="translated">请注意，这将清除所有用于验证 &lt;code&gt;validates_with&lt;/code&gt; 和 &lt;code&gt;validate&lt;/code&gt; 方法的模型的内容。它将清除通过 &lt;code&gt;validates_with&lt;/code&gt; 调用创建的验证器以及由 &lt;code&gt;validate&lt;/code&gt; 调用设置的回调。</target>
        </trans-unit>
        <trans-unit id="59556d783955e645825d2046dcb1ae4013692a97" translate="yes" xml:space="preserve">
          <source>Note that to create a variant it's necessary to download the entire blob file from the service. Because of this process, you also want to be considerate about when the variant is actually processed. You shouldn't be processing variants inline in a template, for example. Delay the processing to an on-demand controller, like the one provided in &lt;a href=&quot;representationscontroller&quot;&gt;ActiveStorage::RepresentationsController&lt;/a&gt;.</source>
          <target state="translated">请注意，要创建变体，必须从服务中下载整个blob文件。由于这一过程，您还希望考虑何时实际处理变体。例如，您不应在模板中内联处理变体。将处理延迟到按需控制器，例如&lt;a href=&quot;representationscontroller&quot;&gt;ActiveStorage :: RepresentationsController中&lt;/a&gt;提供的控制器。</target>
        </trans-unit>
        <trans-unit id="5bd0b997f03075f0fd5f7d6476535e63dc8ab0e2" translate="yes" xml:space="preserve">
          <source>Note that unless you have a specific reason to do so, you should prefer using &lt;code&gt;before_action&lt;/code&gt; rather than &lt;code&gt;after_action&lt;/code&gt; in your Action Mailer classes so that headers are parsed properly.</source>
          <target state="translated">请注意，除非有特殊原因，否则您应该在Action Mailer类中更喜欢使用 &lt;code&gt;before_action&lt;/code&gt; 而不是 &lt;code&gt;after_action&lt;/code&gt; ，以便可以正确解析头。</target>
        </trans-unit>
        <trans-unit id="c297a0082106a309bccb2c304dff13f9d16faac5" translate="yes" xml:space="preserve">
          <source>Note that we define the change that we want to happen moving forward in time. Before this migration is run, there will be no table. After, the table will exist. Active Record knows how to reverse this migration as well: if we roll this migration back, it will remove the table.</source>
          <target state="translated">请注意,我们定义了我们希望发生的变化,在时间上向前移动。在运行这个迁移之前,将没有表。之后,表将存在。Active Record也知道如何逆转这个迁移:如果我们将这个迁移回滚,它将删除这个表。</target>
        </trans-unit>
        <trans-unit id="2e926ed7e503e22b4111ceb30ccb88dce58134ae" translate="yes" xml:space="preserve">
          <source>Note that we don't have explicit render at the end of the index action in accordance with &quot;convention over configuration&quot; principle. The rule is that if you do not explicitly render something at the end of a controller action, Rails will automatically look for the &lt;code&gt;action_name.html.erb&lt;/code&gt; template in the controller's view path and render it. So in this case, Rails will render the &lt;code&gt;app/views/books/index.html.erb&lt;/code&gt; file.</source>
          <target state="translated">请注意，按照&amp;ldquo;约定优于配置&amp;rdquo;的原则，在索引操作的末尾没有显式呈现。规则是，如果您未在控制器操作结束时显式渲染某些内容，Rails会在控制器的视图路径中自动查找 &lt;code&gt;action_name.html.erb&lt;/code&gt; 模板并进行渲染。因此，在这种情况下，Rails将呈现 &lt;code&gt;app/views/books/index.html.erb&lt;/code&gt; 文件。</target>
        </trans-unit>
        <trans-unit id="fc309473d6129fce9427ca4ffd7a719d23d30f2b" translate="yes" xml:space="preserve">
          <source>Note that we needed to instantiate a new &lt;code&gt;PictureFileCallbacks&lt;/code&gt; object, since we declared our callback as an instance method. This is particularly useful if the callbacks make use of the state of the instantiated object. Often, however, it will make more sense to declare the callbacks as class methods:</source>
          <target state="translated">请注意，由于我们将回调声明为实例方法，因此需要实例化新的 &lt;code&gt;PictureFileCallbacks&lt;/code&gt; 对象。如果回调使用实例化对象的状态，则这特别有用。但是，通常将回调声明为类方法会更有意义：</target>
        </trans-unit>
        <trans-unit id="2f078fa0d6abee21360b3c264683efe5cc570183" translate="yes" xml:space="preserve">
          <source>Note that we used Mime for the csv mime type as it comes with Rails. For a custom renderer, you'll need to register a mime type with &lt;code&gt;Mime::Type.register&lt;/code&gt;.</source>
          <target state="translated">请注意，Rails附带的csv mime类型使用了Mime。对于自定义渲染器，您需要向 &lt;code&gt;Mime::Type.register&lt;/code&gt; 注册一个mime类型。</target>
        </trans-unit>
        <trans-unit id="493e11f2139307e1b857ae2583c8a70294f296ed" translate="yes" xml:space="preserve">
          <source>Note that when an array is used, the implicit mapping from the values to database integers is derived from the order the values appear in the array. In the example, &lt;code&gt;:active&lt;/code&gt; is mapped to &lt;code&gt;0&lt;/code&gt; as it's the first element, and &lt;code&gt;:archived&lt;/code&gt; is mapped to &lt;code&gt;1&lt;/code&gt;. In general, the &lt;code&gt;i&lt;/code&gt;-th element is mapped to &lt;code&gt;i-1&lt;/code&gt; in the database.</source>
          <target state="translated">请注意，使用数组时，从值到数据库整数的隐式映射是根据值在数组中出现的顺序得出的。在示例中， &lt;code&gt;:active&lt;/code&gt; 被映射为 &lt;code&gt;0&lt;/code&gt; ,因为它是第一个元素，而 &lt;code&gt;:archived&lt;/code&gt; 被映射为 &lt;code&gt;1&lt;/code&gt; 。通常，第 &lt;code&gt;i&lt;/code&gt; 个元素在数据库中映射到 &lt;code&gt;i-1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c316595d7f1cc476b48b9d06316e2c4531c197bc" translate="yes" xml:space="preserve">
          <source>Note that while for session values you set the key to &lt;code&gt;nil&lt;/code&gt;, to delete a cookie value you should use &lt;code&gt;cookies.delete(:key)&lt;/code&gt;.</source>
          <target state="translated">请注意，将会话值设置为 &lt;code&gt;nil&lt;/code&gt; 时，要删除cookie值，应使用 &lt;code&gt;cookies.delete(:key)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="375abaf21583ac20acd9292c3b8eefbb701bc9fb" translate="yes" xml:space="preserve">
          <source>Note that you can define &lt;code&gt;perform&lt;/code&gt; with as many arguments as you want.</source>
          <target state="translated">请注意，您可以定义任意数量的参数来 &lt;code&gt;perform&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="88cfa3abeb2458e86a60f8ec1b460db8fb10e9dc" translate="yes" xml:space="preserve">
          <source>Note that you can define your own XML parameter parser which would allow you to describe multiple entities in a single request (i.e., by wrapping them all in a single root node), but if you just go with the flow and accept Rails' defaults, life will be much easier.</source>
          <target state="translated">请注意,你可以定义你自己的XML参数解析器,这将允许你在一个请求中描述多个实体(即通过将它们全部包裹在一个根节点中),但如果你只是随波逐流,接受Rails的默认值,生活将变得更加简单。</target>
        </trans-unit>
        <trans-unit id="94fcc4bd31806b338f29c759262bfc0f506b7150" translate="yes" xml:space="preserve">
          <source>Note that you cannot pass a &lt;code&gt;Numeric&lt;/code&gt; value to &lt;code&gt;time_ago_in_words&lt;/code&gt;.</source>
          <target state="translated">请注意，您不能将 &lt;code&gt;Numeric&lt;/code&gt; 传递给 &lt;code&gt;time_ago_in_words&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1f1061c05c09718d57e4b98d385870b473c4dab2" translate="yes" xml:space="preserve">
          <source>Note that you must specify the extension of the image.</source>
          <target state="translated">请注意,您必须指定图像的扩展。</target>
        </trans-unit>
        <trans-unit id="fbe12ac2a13ce2a7fd2002400594427d3dac75d7" translate="yes" xml:space="preserve">
          <source>Note that, by default, &lt;code&gt;ActiveModel::Model&lt;/code&gt; implements &lt;code&gt;persisted?&lt;/code&gt; to return &lt;code&gt;false&lt;/code&gt;, which is the most common case. You may want to override it in your class to simulate a different scenario:</source>
          <target state="translated">请注意，默认情况下， &lt;code&gt;ActiveModel::Model&lt;/code&gt; 实现是否 &lt;code&gt;persisted?&lt;/code&gt; 返回 &lt;code&gt;false&lt;/code&gt; ，这是最常见的情况。您可能要在类中重写它，以模拟其他情况：</target>
        </trans-unit>
        <trans-unit id="6c0eb83f0bd048cfc7a18f5b34d2c2a7f0774a58" translate="yes" xml:space="preserve">
          <source>Note the &lt;code&gt;data-remote=&quot;true&quot;&lt;/code&gt;. Now, the form will be submitted by Ajax rather than by the browser's normal submit mechanism.</source>
          <target state="translated">注意 &lt;code&gt;data-remote=&quot;true&quot;&lt;/code&gt; 。现在，该表单将由Ajax提交，而不是由浏览器的常规提交机制提交。</target>
        </trans-unit>
        <trans-unit id="0b50c32f894b15a18965fc17ad0b160bd64ca480" translate="yes" xml:space="preserve">
          <source>Note the subtle difference between the two: &lt;code&gt;assert_routing&lt;/code&gt; tests that a URL fits options while &lt;code&gt;assert_recognizes&lt;/code&gt; tests that a URL breaks into parameters properly.</source>
          <target state="translated">注意两者之间的细微差别： &lt;code&gt;assert_routing&lt;/code&gt; 测试URL是否适合选项，而 &lt;code&gt;assert_recognizes&lt;/code&gt; 测试URL是否正确分解为参数。</target>
        </trans-unit>
        <trans-unit id="64a72b7714830d8e8def9655dd5179990d52e442" translate="yes" xml:space="preserve">
          <source>Note you can't append with &lt;code&gt;atomic_write&lt;/code&gt;.</source>
          <target state="translated">请注意，您不能附加 &lt;code&gt;atomic_write&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e012da3c873f5e7f25a227356956d77d8cbb45da" translate="yes" xml:space="preserve">
          <source>Note, all the attributes for all the cases are kept in the same table. Read more: &lt;a href=&quot;https://www.martinfowler.com/eaaCatalog/singleTableInheritance.html&quot;&gt;www.martinfowler.com/eaaCatalog/singleTableInheritance.html&lt;/a&gt;</source>
          <target state="translated">注意，所有案例的所有属性都保存在同一表中。了解更多：&lt;a href=&quot;https://www.martinfowler.com/eaaCatalog/singleTableInheritance.html&quot;&gt;www.martinfowler.com/eaaCatalog/singleTableInheritance.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0e23d909c309df5b8483a6d80a959b1e4ab0714c" translate="yes" xml:space="preserve">
          <source>Note, however, the extra bit at the top of that action:</source>
          <target state="translated">不过,请注意,这个动作的顶端多了一点。</target>
        </trans-unit>
        <trans-unit id="a11bc31bbee6149856fb4cc76f9292762b870e2b" translate="yes" xml:space="preserve">
          <source>Note, if data was written with the &lt;code&gt;:expires_in&lt;/code&gt; or &lt;code&gt;:version&lt;/code&gt; options, both of these conditions are applied before the data is returned.</source>
          <target state="translated">注意，如果使用 &lt;code&gt;:expires_in&lt;/code&gt; 或 &lt;code&gt;:version&lt;/code&gt; 选项写入数据，则在返回数据之前将同时应用这两个条件。</target>
        </trans-unit>
        <trans-unit id="173438e96ca17bd100e0efb41be6765ffc5dc263" translate="yes" xml:space="preserve">
          <source>Note, the &lt;code&gt;only: &amp;lt;type&amp;gt;&lt;/code&gt; hash will apply to all callbacks defined on that method call. To get around this you can call the &lt;a href=&quot;callbacks#method-i-define_model_callbacks&quot;&gt;#define_model_callbacks&lt;/a&gt; method as many times as you need.</source>
          <target state="translated">注意， &lt;code&gt;only: &amp;lt;type&amp;gt;&lt;/code&gt; 哈希将应用于该方法调用上定义的所有回调。为了解决这个问题，您可以根据需要多次调用&lt;a href=&quot;callbacks#method-i-define_model_callbacks&quot;&gt;#define_model_callbacks&lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="e730840f4cf0c423b310013d1509281bf488401d" translate="yes" xml:space="preserve">
          <source>Note, this method will return nil if ActiveRecord::Base.cache_versioning is set to &lt;code&gt;false&lt;/code&gt; (which it is by default until Rails 6.0).</source>
          <target state="translated">注意，如果ActiveRecord :: Base.cache_versioning设置为 &lt;code&gt;false&lt;/code&gt; （在Rails 6.0之前是默认值），此方法将返回nil 。</target>
        </trans-unit>
        <trans-unit id="c86af99f3964446c447ca9ff5afc05885736a4b0" translate="yes" xml:space="preserve">
          <source>Note, you should use &lt;code&gt;return false&lt;/code&gt; to prevent event for &lt;code&gt;jquery-ujs&lt;/code&gt; and &lt;code&gt;e.preventDefault()&lt;/code&gt; for &lt;code&gt;rails-ujs&lt;/code&gt;</source>
          <target state="translated">请注意，您应该使用 &lt;code&gt;return false&lt;/code&gt; 以防止事件 &lt;code&gt;jquery-ujs&lt;/code&gt; 和 &lt;code&gt;e.preventDefault()&lt;/code&gt; 用于 &lt;code&gt;rails-ujs&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="91573f6985f0c4b16cbd786a58cd14db5f991daf" translate="yes" xml:space="preserve">
          <source>Note: &lt;code&gt;:id&lt;/code&gt; is always present.</source>
          <target state="translated">注意：： &lt;code&gt;:id&lt;/code&gt; 始终存在。</target>
        </trans-unit>
        <trans-unit id="8634df8460327a401d547cd66d1daa13389930f3" translate="yes" xml:space="preserve">
          <source>Note: &lt;code&gt;yield&lt;/code&gt; can still be used to retrieve the stored content, but calling &lt;code&gt;yield&lt;/code&gt; doesn't work in helper modules, while &lt;code&gt;content_for&lt;/code&gt; does.</source>
          <target state="translated">注意： &lt;code&gt;yield&lt;/code&gt; 仍然可以用于检索存储的内容，但是在助手模块中调用 &lt;code&gt;yield&lt;/code&gt; 无效，而 &lt;code&gt;content_for&lt;/code&gt; 则可以。</target>
        </trans-unit>
        <trans-unit id="8da99924f8d120d0211cdf5e26cda8c8a164764e" translate="yes" xml:space="preserve">
          <source>Note: Acronyms that are passed to &lt;code&gt;pluralize&lt;/code&gt; will no longer be recognized, since the acronym will not occur as a delimited unit in the pluralized result. To work around this, you must specify the pluralized form as an acronym as well:</source>
          <target state="translated">注意：传递给 &lt;code&gt;pluralize&lt;/code&gt; 的首字母缩写将不再被识别，因为首字母缩写在复数结果中不会作为分隔单位出现。要变通解决此问题，您还必须指定复数形式作为首字母缩写词：</target>
        </trans-unit>
        <trans-unit id="8a8c7e5a63f17d1875bad1c59c527c97a6dd626d" translate="yes" xml:space="preserve">
          <source>Note: Although it is often much faster than the alternative, &lt;a href=&quot;classmethods#method-i-destroy&quot;&gt;destroy&lt;/a&gt;, skipping callbacks might bypass business logic in your application that ensures referential integrity or performs other essential jobs.</source>
          <target state="translated">注意：尽管它通常比替代方法快得多，但是&lt;a href=&quot;classmethods#method-i-destroy&quot;&gt;destroy&lt;/a&gt;，skip回调可能会绕过应用程序中的业务逻辑，以确保引用完整性或执行其他重要工作。</target>
        </trans-unit>
        <trans-unit id="4e9ece58e771c7dc934cee4b84518319fbbf0ee9" translate="yes" xml:space="preserve">
          <source>Note: As Active Record callbacks are not triggered, this method will not automatically update &lt;code&gt;updated_at&lt;/code&gt;/&lt;code&gt;updated_on&lt;/code&gt; columns.</source>
          <target state="translated">注意：由于未触发Active Record回调，因此此方法将不会自动更新 &lt;code&gt;updated_at&lt;/code&gt; / &lt;code&gt;updated_on&lt;/code&gt; 列。</target>
        </trans-unit>
        <trans-unit id="b382d38463c4b9772db0f0e4f20597ea1d44539b" translate="yes" xml:space="preserve">
          <source>Note: Fixtures are unordered. If you want ordered fixtures, use the omap YAML type. See &lt;a href=&quot;http://yaml.org/type/omap.html&quot;&gt;yaml.org/type/omap.html&lt;/a&gt; for the specification. You will need ordered fixtures when you have foreign key constraints on keys in the same table. This is commonly needed for tree structures. Example:</source>
          <target state="translated">注意：灯具是无序的。如果要订购灯具，请使用omap YAML类型。有关规范，请参见&lt;a href=&quot;http://yaml.org/type/omap.html&quot;&gt;yaml.org/type/omap.html&lt;/a&gt;。当您在同一表中的键上具有外键约束时，将需要订购的固定装置。这对于树结构通常是必需的。例：</target>
        </trans-unit>
        <trans-unit id="e3f911ece33a8889898f780391535eeae25b4645" translate="yes" xml:space="preserve">
          <source>Note: If the day is not included as an option but the month is, the day will be set to the 1st to ensure that all month choices are valid.</source>
          <target state="translated">注意:如果日期不包括在选项中,但月份包括在选项中,则日期将被设置为1号,以确保所有月份的选择是有效的。</target>
        </trans-unit>
        <trans-unit id="455ad7b304457d0818b156a5d5a258e87af23432" translate="yes" xml:space="preserve">
          <source>Note: Instantiation, callback execution, and deletion of each record can be time consuming when you're removing many records at once. It generates at least one SQL &lt;code&gt;DELETE&lt;/code&gt; query per record (or possibly more, to enforce your callbacks). If you want to delete many rows quickly, without concern for their associations or callbacks, use &lt;a href=&quot;relation#method-i-delete_all&quot;&gt;delete_all&lt;/a&gt; instead.</source>
          <target state="translated">注意：一次删除多个记录时，实例化，回调执行和删除每个记录可能很耗时。它每条记录至少生成一个SQL &lt;code&gt;DELETE&lt;/code&gt; 查询（或者可能更多，以强制执行回调）。如果要快速删除许多行，而不用担心它们的关联或回调，请使用&lt;a href=&quot;relation#method-i-delete_all&quot;&gt;delete_all&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="acacd3efece89a8db79dda6270478358ee24035b" translate="yes" xml:space="preserve">
          <source>Note: Joining, eager loading and preloading of these associations is not possible. These operations happen before instance creation and the scope will be called with a &lt;code&gt;nil&lt;/code&gt; argument.</source>
          <target state="translated">注意：无法加入，渴望加载和预加载这些关联。这些操作发生在实例创建之前，并且将使用 &lt;code&gt;nil&lt;/code&gt; 参数调用作用域。</target>
        </trans-unit>
        <trans-unit id="308e33031d5f89bc20b7a0f4592db047a4d56233" translate="yes" xml:space="preserve">
          <source>Note: MySQL only supports index order from 8.0.1 onwards (earlier versions accepted the syntax but ignored it).</source>
          <target state="translated">注意:MySQL只支持8.0.1以后的索引顺序(早期版本接受该语法但忽略了它)。</target>
        </trans-unit>
        <trans-unit id="124f350c136512944ed0f6dcf73a12862c334ad1" translate="yes" xml:space="preserve">
          <source>Note: Partial indexes are only supported for PostgreSQL and SQLite 3.8.0+.</source>
          <target state="translated">注意:部分索引只支持PostgreSQL和SQLite 3.8.0+。</target>
        </trans-unit>
        <trans-unit id="c0d6873d18327e72cbed60ce10d25503c5b6ff17" translate="yes" xml:space="preserve">
          <source>Note: SQLite doesn't support index length.</source>
          <target state="translated">注意:SQLite不支持索引长度。</target>
        </trans-unit>
        <trans-unit id="2dfc9a11d5d1fa70f8585fb64a2db0c1f6ce0546" translate="yes" xml:space="preserve">
          <source>Note: SSEs are not currently supported by IE. However, they are supported by Chrome, Firefox, Opera, and Safari.</source>
          <target state="translated">注意:目前IE不支持SSE。但是,Chrome、Firefox、Opera和Safari都支持。</target>
        </trans-unit>
        <trans-unit id="c86cc9acd3cc4679a14049283572db943a13a4c8" translate="yes" xml:space="preserve">
          <source>Note: The &lt;code&gt;attachable_type=&lt;/code&gt; method is being called when assigning an &lt;code&gt;attachable&lt;/code&gt;. The &lt;code&gt;class_name&lt;/code&gt; of the &lt;code&gt;attachable&lt;/code&gt; is passed as a &lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt;.</source>
          <target state="translated">注意：分配 &lt;code&gt;attachable&lt;/code&gt; 时，将调用 &lt;code&gt;attachable_type=&lt;/code&gt; 方法。所述 &lt;code&gt;class_name&lt;/code&gt; 所述的 &lt;code&gt;attachable&lt;/code&gt; 作为被传递&lt;a href=&quot;../../string&quot;&gt;字符串&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b32677b2c1945dcf62d2c8edf09310b4dc2135f1" translate="yes" xml:space="preserve">
          <source>Note: The adapter provided by this method must provide some additional methods from those expected of a standard &lt;code&gt;ActiveJob::QueueAdapter&lt;/code&gt; in order to be used with the active job test helpers. Refer to &lt;code&gt;ActiveJob::QueueAdapters::TestAdapter&lt;/code&gt;.</source>
          <target state="translated">注意：此方法提供的适配器必须提供标准 &lt;code&gt;ActiveJob::QueueAdapter&lt;/code&gt; 期望的方法之外的一些其他方法，以便与活动作业测试助手一起使用。请参考 &lt;code&gt;ActiveJob::QueueAdapters::TestAdapter&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="856990d094574273e23f235fcf21d1ef8d7d3679" translate="yes" xml:space="preserve">
          <source>Note: The new instance will share a link to the same attributes as the original class. Therefore the sti column value will still be the same. Any change to the attributes on either instance will affect both instances. If you want to change the sti column as well, use &lt;a href=&quot;persistence#method-i-becomes-21&quot;&gt;becomes!&lt;/a&gt; instead.</source>
          <target state="translated">注意：新实例将共享一个指向与原始类相同属性的链接。因此，sti列的值将仍然相同。任何一个实例上的属性的任何更改都会影响两个实例。如果您还想更改sti列，请使用&lt;a href=&quot;persistence#method-i-becomes-21&quot;&gt;！&lt;/a&gt;代替。</target>
        </trans-unit>
        <trans-unit id="e495b3a8620060a6500fb583012fa4372f4b9ce5" translate="yes" xml:space="preserve">
          <source>Note: The old instance's sti column value will be changed too, as both objects share the same set of attributes.</source>
          <target state="translated">注意:旧实例的sti列值也会被改变,因为两个对象共享同一组属性。</target>
        </trans-unit>
        <trans-unit id="da5de37a9fe710621b520911dc22e6273fdacef4" translate="yes" xml:space="preserve">
          <source>Note: The precision is the total number of significant digits, and the scale is the number of digits that can be stored following the decimal point. For example, the number 123.45 has a precision of 5 and a scale of 2. A decimal with a precision of 5 and a scale of 2 can range from -999.99 to 999.99.</source>
          <target state="translated">注:精度是指有意义的数字总数,比例是指小数点后面可以存储的数字数。例如,数字123.45的精度为5,比例为2,精度为5的小数,比例为2的小数可以从-999.99到999.99。</target>
        </trans-unit>
        <trans-unit id="f9065955578098ed0bb8bd025f933ad59c21c6e6" translate="yes" xml:space="preserve">
          <source>Note: This also works for the methods in &lt;a href=&quot;formoptionshelper&quot;&gt;FormOptionsHelper&lt;/a&gt; and &lt;a href=&quot;datehelper&quot;&gt;DateHelper&lt;/a&gt; that are designed to work with an object as base, like &lt;a href=&quot;formoptionshelper#method-i-collection_select&quot;&gt;ActionView::Helpers::FormOptionsHelper#collection_select&lt;/a&gt; and &lt;a href=&quot;datehelper#method-i-datetime_select&quot;&gt;ActionView::Helpers::DateHelper#datetime_select&lt;/a&gt;.</source>
          <target state="translated">注意：这也适用于&lt;a href=&quot;formoptionshelper&quot;&gt;FormOptionsHelper&lt;/a&gt;和&lt;a href=&quot;datehelper&quot;&gt;DateHelper&lt;/a&gt;中的设计为以对象为基础的方法，例如&lt;a href=&quot;formoptionshelper#method-i-collection_select&quot;&gt;ActionView :: Helpers :: FormOptionsHelper＃collection_select&lt;/a&gt;和&lt;a href=&quot;datehelper#method-i-datetime_select&quot;&gt;ActionView :: Helpers :: DateHelper＃datetime_select&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c2352219e415aacb6ef215e56a9cd402e35a6e9a" translate="yes" xml:space="preserve">
          <source>Note: This assertion is simply a shortcut for:</source>
          <target state="translated">注:这个论断只是一个快捷方式。</target>
        </trans-unit>
        <trans-unit id="ef0e993df538909451f4951854e2341a7ebc0570" translate="yes" xml:space="preserve">
          <source>Note: This is an optimization of &lt;code&gt;Enumerable#excluding&lt;/code&gt; that uses &lt;code&gt;Array#-&lt;/code&gt; instead of &lt;code&gt;Array#reject&lt;/code&gt; for performance reasons.</source>
          <target state="translated">注意：这是对 &lt;code&gt;Enumerable#excluding&lt;/code&gt; 的优化，出于性能原因，该优化使用 &lt;code&gt;Array#-&lt;/code&gt; 而不是 &lt;code&gt;Array#reject&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="863ca249317e9c0dbb645dce430c3cd0b6faa965" translate="yes" xml:space="preserve">
          <source>Note: This is purely a browser performance optimization and is not meant for server load balancing. See &lt;a href=&quot;https://www.die.net/musings/page_load_time&quot;&gt;www.die.net/musings/page_load_time&lt;/a&gt;/ for background and &lt;a href=&quot;https://www.browserscope.org/?category=network&quot;&gt;www.browserscope.org/?category=network&lt;/a&gt; for connection limit data.</source>
          <target state="translated">注意：这纯粹是浏览器性能的优化，并不意味着服务器负载平衡。有关背景，请参见&lt;a href=&quot;https://www.die.net/musings/page_load_time&quot;&gt;www.die.net/musings/page_load_time/&lt;/a&gt;，有关连接限制数据，请参见&lt;a href=&quot;https://www.browserscope.org/?category=network&quot;&gt;www.browserscope.org/?category=network&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4a3287c1634d93a72d137f0d950e3c604c3df357" translate="yes" xml:space="preserve">
          <source>Note: To turn off all caching provided by Action Controller, set</source>
          <target state="translated">注意:要关闭Action Controller提供的所有缓存,请设置</target>
        </trans-unit>
        <trans-unit id="5b440437b3604be9608bede173ea6d8501bdfdc8" translate="yes" xml:space="preserve">
          <source>Note: Updating a large number of records will run an UPDATE query for each record, which may cause a performance issue. When running callbacks is not needed for each record update, it is preferred to use &lt;a href=&quot;../relation#method-i-update_all&quot;&gt;update_all&lt;/a&gt; for updating all records in a single query.</source>
          <target state="translated">注意：更新大量记录将为每个记录运行UPDATE查询，这可能会导致性能问题。当每个记录更新都不需要运行回调时，最好使用&lt;a href=&quot;../relation#method-i-update_all&quot;&gt;update_all&lt;/a&gt;在单个查询中更新所有记录。</target>
        </trans-unit>
        <trans-unit id="62b50481c99d023afaf5455de8ac79fe5a963dac" translate="yes" xml:space="preserve">
          <source>Note: You can't pass in a condition as a string (like &lt;code&gt;name =
'Jamie'&lt;/code&gt;), since it would be sanitized and then queried against the primary key column, like &lt;code&gt;id = 'name =
\'Jamie\''&lt;/code&gt;.</source>
          <target state="translated">注意：您不能以字符串形式传递条件（例如 &lt;code&gt;name = 'Jamie'&lt;/code&gt; ），因为它将被清理然后针对主键列进行查询，例如 &lt;code&gt;id = 'name = \'Jamie\''&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9e95bdc13adc134c9b83e94f1ac9f03cf6cfc487" translate="yes" xml:space="preserve">
          <source>Note: not all valid &lt;a href=&quot;querymethods#method-i-select&quot;&gt;Relation#select&lt;/a&gt; expressions are valid &lt;a href=&quot;calculations#method-i-count&quot;&gt;count&lt;/a&gt; expressions. The specifics differ between databases. In invalid cases, an error from the database is thrown.</source>
          <target state="translated">注意：并非所有有效的&lt;a href=&quot;querymethods#method-i-select&quot;&gt;Relation＃select&lt;/a&gt;表达式都是有效的&lt;a href=&quot;calculations#method-i-count&quot;&gt;count&lt;/a&gt;表达式。数据库之间的细节有所不同。在无效情况下，将引发数据库错误。</target>
        </trans-unit>
        <trans-unit id="cb90894dfb9810668140dd5abc132702407b2049" translate="yes" xml:space="preserve">
          <source>Note: only supported by MySQL.</source>
          <target state="translated">注:仅由MySQL支持。</target>
        </trans-unit>
        <trans-unit id="11012fa2ff042b2ccc5930b6e83ce185707b0ecd" translate="yes" xml:space="preserve">
          <source>Note: only supported by PostgreSQL</source>
          <target state="translated">注:只支持PostgreSQL</target>
        </trans-unit>
        <trans-unit id="b979edd03dc476656559cc41b1e4a6d868f05723" translate="yes" xml:space="preserve">
          <source>Note: only supported by PostgreSQL and MySQL</source>
          <target state="translated">注:只支持PostgreSQL和MySQL</target>
        </trans-unit>
        <trans-unit id="d4570c3579af0b879f140c7b30b54ae99eeeb839" translate="yes" xml:space="preserve">
          <source>Note: only supported by PostgreSQL.</source>
          <target state="translated">注:仅PostgreSQL支持。</target>
        </trans-unit>
        <trans-unit id="9a83e4f90833243e0c6406c5f754ff630641257d" translate="yes" xml:space="preserve">
          <source>Note: this feature is not available with the threaded parallelization.</source>
          <target state="translated">注意:线程并行化时,此功能不可用。</target>
        </trans-unit>
        <trans-unit id="205d08dcd8d151326e23421d0d1ac6edc18b3313" translate="yes" xml:space="preserve">
          <source>Note: use &lt;code&gt;\A&lt;/code&gt; and &lt;code&gt;\z&lt;/code&gt; to match the start and end of the string, &lt;code&gt;^&lt;/code&gt; and &lt;code&gt;$&lt;/code&gt; match the start/end of a line.</source>
          <target state="translated">注意：使用 &lt;code&gt;\A&lt;/code&gt; 和 &lt;code&gt;\z&lt;/code&gt; 匹配字符串的开头和结尾， &lt;code&gt;^&lt;/code&gt; 和 &lt;code&gt;$&lt;/code&gt; 匹配行的开头/结尾。</target>
        </trans-unit>
        <trans-unit id="773ff38978dbfe8d2f1950aaff40b3a6289527ac" translate="yes" xml:space="preserve">
          <source>Note: when using &lt;code&gt;controller&lt;/code&gt;, the route is simply named after the method you call on the block parameter rather than map.</source>
          <target state="translated">注意：使用 &lt;code&gt;controller&lt;/code&gt; 时，路由仅以您在block参数上调用的方法命名，而不是map。</target>
        </trans-unit>
        <trans-unit id="70440046a3dc2e079f23ee1c57dfa76669b732aa" translate="yes" xml:space="preserve">
          <source>Notes</source>
          <target state="translated">Notes</target>
        </trans-unit>
        <trans-unit id="39429a684161fc0c5605d56b46f44c1c03d8efe8" translate="yes" xml:space="preserve">
          <source>Notice how the short-style &lt;code&gt;form_with&lt;/code&gt; invocation is conveniently the same, regardless of the record being new or existing. Record identification is smart enough to figure out if the record is new by asking &lt;code&gt;record.new_record?&lt;/code&gt;. It also selects the correct path to submit to, and the name based on the class of the object.</source>
          <target state="translated">请注意，无论记录是新记录还是现有记录，简短形式的 &lt;code&gt;form_with&lt;/code&gt; 调用都是如何方便地相同的。记录标识足够聪明，可以通过询问 &lt;code&gt;record.new_record?&lt;/code&gt; 来确定记录是否为新记录。。它还根据对象的类别选择要提交的正确路径和名称。</target>
        </trans-unit>
        <trans-unit id="db0f7457358771ccbf92d92a4d763b28aca85961" translate="yes" xml:space="preserve">
          <source>Notice that &amp;ldquo;rails:generators:test_unit&amp;rdquo; could be loaded as well, what Rails looks for is the first and last parts of the namespace. This is what allows any test framework to hook into Rails as long as it provides any of the hooks above.</source>
          <target state="translated">注意，也可以加载&amp;ldquo; rails：generators：test_unit&amp;rdquo;，Rails寻找的是名称空间的第一部分和最后一部分。只要它提供上述任何挂钩，这就是允许任何测试框架挂钩到Rails的原因。</target>
        </trans-unit>
        <trans-unit id="c5549615aaa370893e3ea8fcbb7c259a1259ddcf" translate="yes" xml:space="preserve">
          <source>Notice that :stream only works with templates. Rendering :json or :xml with :stream won't work.</source>
          <target state="translated">注意:stream只对模板有效。用 :stream 渲染 :json 或 :xml 将无法工作。</target>
        </trans-unit>
        <trans-unit id="320e974e71e96a6cbd1aead6a719dcffd232a3a4" translate="yes" xml:space="preserve">
          <source>Notice that &lt;code&gt;action_methods.include?(&quot;foo&quot;)&lt;/code&gt; may return false and &lt;code&gt;available_action?(&quot;foo&quot;)&lt;/code&gt; returns true because this method considers actions that are also available through other means, for example, implicit render ones.</source>
          <target state="translated">请注意， &lt;code&gt;action_methods.include?(&quot;foo&quot;)&lt;/code&gt; 可能返回false， &lt;code&gt;available_action?(&quot;foo&quot;)&lt;/code&gt; 返回true，因为此方法考虑的操作也可以通过其他方式（例如隐式渲染）获得。</target>
        </trans-unit>
        <trans-unit id="fe43ee640ff6bcab6590900f5e5cb91b851fec67" translate="yes" xml:space="preserve">
          <source>Notice that in this example we used the &lt;code&gt;cache_key_with_version&lt;/code&gt; method, so the resulting cache key will be something like &lt;code&gt;products/233-20140225082222765838000/competing_price&lt;/code&gt;. &lt;code&gt;cache_key_with_version&lt;/code&gt; generates a string based on the model's class name, &lt;code&gt;id&lt;/code&gt;, and &lt;code&gt;updated_at&lt;/code&gt; attributes. This is a common convention and has the benefit of invalidating the cache whenever the product is updated. In general, when you use low-level caching for instance level information, you need to generate a cache key.</source>
          <target state="translated">请注意，在此示例中，我们使用了 &lt;code&gt;cache_key_with_version&lt;/code&gt; 方法，因此，生成的缓存键将类似于 &lt;code&gt;products/233-20140225082222765838000/competing_price&lt;/code&gt; 。 &lt;code&gt;cache_key_with_version&lt;/code&gt; 根据模型的类名， &lt;code&gt;id&lt;/code&gt; 和 &lt;code&gt;updated_at&lt;/code&gt; 属性生成一个字符串。这是一个通用约定，并且具有在每次更新产品时使缓存无效的好处。通常，将低级缓存用于实例级信息时，需要生成一个缓存键。</target>
        </trans-unit>
        <trans-unit id="335c6423429f476890129005da902f572747e332" translate="yes" xml:space="preserve">
          <source>Notice that inside the &lt;code&gt;create&lt;/code&gt; action we use &lt;code&gt;render&lt;/code&gt; instead of &lt;code&gt;redirect_to&lt;/code&gt; when &lt;code&gt;save&lt;/code&gt; returns &lt;code&gt;false&lt;/code&gt;. The &lt;code&gt;render&lt;/code&gt; method is used so that the &lt;code&gt;@article&lt;/code&gt; object is passed back to the &lt;code&gt;new&lt;/code&gt; template when it is rendered. This rendering is done within the same request as the form submission, whereas the &lt;code&gt;redirect_to&lt;/code&gt; will tell the browser to issue another request.</source>
          <target state="translated">注意，在 &lt;code&gt;create&lt;/code&gt; 动作中，当 &lt;code&gt;save&lt;/code&gt; 返回 &lt;code&gt;false&lt;/code&gt; 时，我们使用 &lt;code&gt;render&lt;/code&gt; 而不是 &lt;code&gt;redirect_to&lt;/code&gt; 。使用 &lt;code&gt;render&lt;/code&gt; 方法，以便在渲染 &lt;code&gt;@article&lt;/code&gt; 对象时将其传递回 &lt;code&gt;new&lt;/code&gt; 模板。呈现是在与表单提交相同的请求内完成的，而 &lt;code&gt;redirect_to&lt;/code&gt; 将告诉浏览器发出另一个请求。</target>
        </trans-unit>
        <trans-unit id="200ef77ed6574c244c4ae9bf1d5933c2dfdd03d7" translate="yes" xml:space="preserve">
          <source>Notice that no &lt;code&gt;:id&lt;/code&gt; parameter was provided to the first &lt;code&gt;url_for&lt;/code&gt; call and the helper used the one from the route's path. Any path parameter implicitly used by &lt;code&gt;url_for&lt;/code&gt; can always be overwritten like shown on the last &lt;code&gt;url_for&lt;/code&gt; calls.</source>
          <target state="translated">请注意，没有为第一个 &lt;code&gt;url_for&lt;/code&gt; 调用提供 &lt;code&gt;:id&lt;/code&gt; 参数，并且帮助程序使用了路由路径中的参数。 &lt;code&gt;url_for&lt;/code&gt; 隐式使用的任何路径参数始终可以像最近的 &lt;code&gt;url_for&lt;/code&gt; 调用中所示那样被覆盖。</target>
        </trans-unit>
        <trans-unit id="519aa6a6e5d6afab6a7e2eb41a4439a4f9329106" translate="yes" xml:space="preserve">
          <source>Notice that only &lt;em&gt;one&lt;/em&gt; migration was copied over here. This is because the first two migrations were copied over the first time this command was run.</source>
          <target state="translated">请注意，此处仅复制了&lt;em&gt;一个&lt;/em&gt;迁移。这是因为前两次迁移是在第一次运行此命令时复制的。</target>
        </trans-unit>
        <trans-unit id="df50d170a97756a976395374fdf8c24cc9971e57" translate="yes" xml:space="preserve">
          <source>Notice that the third parameter, the options array, is the same kind of argument you pass to &lt;code&gt;options_for_select&lt;/code&gt;. One advantage here is that you don't have to worry about pre-selecting the correct city if the user already has one - Rails will do this for you by reading from the &lt;code&gt;@person.city_id&lt;/code&gt; attribute.</source>
          <target state="translated">注意，第三个参数options数组与传递给 &lt;code&gt;options_for_select&lt;/code&gt; 的参数类型相同。这里的一个优点是，如果用户已经拥有一个城市，则不必担心预先选择正确的城市-Rails会通过读取 &lt;code&gt;@person.city_id&lt;/code&gt; 属性为您完成此操作。</target>
        </trans-unit>
        <trans-unit id="1908ba1c531a2b8259e8a292905b0338f0a4c049" translate="yes" xml:space="preserve">
          <source>Notice that when you add a path using &lt;code&gt;add&lt;/code&gt;, the path object created already contains the path with the same path value given to &lt;code&gt;add&lt;/code&gt;. In some situations, you may not want this behavior, so you can give &lt;code&gt;:with&lt;/code&gt; as option.</source>
          <target state="translated">请注意，当使用 &lt;code&gt;add&lt;/code&gt; 添加路径时，创建的路径对象已经包含具有与 &lt;code&gt;add&lt;/code&gt; 相同的路径值的路径。在某些情况下，您可能不希望出现这种情况，因此可以给 &lt;code&gt;:with&lt;/code&gt; 作为选项。</target>
        </trans-unit>
        <trans-unit id="44c8b7d455b3180c88c20d2969451f82d99fc72d" translate="yes" xml:space="preserve">
          <source>Notice the 'E' in the output. It denotes a test with error.</source>
          <target state="translated">注意输出中的'E'。它表示一个有错误的测试。</target>
        </trans-unit>
        <trans-unit id="87b70343665b3497b68b2af72f1fe352646fe9bf" translate="yes" xml:space="preserve">
          <source>Notice the &lt;code&gt;category&lt;/code&gt; key of the &lt;code&gt;first&lt;/code&gt; article found in &lt;code&gt;fixtures/articles.yml&lt;/code&gt; has a value of &lt;code&gt;about&lt;/code&gt;. This tells Rails to load the category &lt;code&gt;about&lt;/code&gt; found in &lt;code&gt;fixtures/categories.yml&lt;/code&gt;.</source>
          <target state="translated">注意，在 &lt;code&gt;fixtures/articles.yml&lt;/code&gt; 中找到的 &lt;code&gt;first&lt;/code&gt; 篇文章的 &lt;code&gt;category&lt;/code&gt; 关键字的值 &lt;code&gt;about&lt;/code&gt; 。这告诉Rails加载类 &lt;code&gt;about&lt;/code&gt; 在发现 &lt;code&gt;fixtures/categories.yml&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f050ea2079c865a020ea6021b3e47525fb921cf9" translate="yes" xml:space="preserve">
          <source>Notice the &lt;code&gt;format.js&lt;/code&gt; in the &lt;code&gt;respond_to&lt;/code&gt; block: that allows the controller to respond to your Ajax request. You then have a corresponding &lt;code&gt;app/views/users/create.js.erb&lt;/code&gt; view file that generates the actual JavaScript code that will be sent and executed on the client side.</source>
          <target state="translated">注意 &lt;code&gt;format.js&lt;/code&gt; 在 &lt;code&gt;respond_to&lt;/code&gt; 代码块：允许控制器响应您的Ajax请求。然后，您将拥有一个相应的 &lt;code&gt;app/views/users/create.js.erb&lt;/code&gt; 视图文件，该文件会生成实际的JavaScript代码，这些代码将在客户端发送和执行。</target>
        </trans-unit>
        <trans-unit id="679dcd5834f1e3b85618c3828ff5a6c00ccaf1be" translate="yes" xml:space="preserve">
          <source>Notice the &lt;code&gt;only_path: true&lt;/code&gt; part. This is because &lt;a href=&quot;urlfor&quot;&gt;UrlFor&lt;/a&gt; has no information about the website hostname that your Rails app is serving. So if you want to include the hostname as well, then you must also pass the &lt;code&gt;:host&lt;/code&gt; argument:</source>
          <target state="translated">注意 &lt;code&gt;only_path: true&lt;/code&gt; 部分。这是因为&lt;a href=&quot;urlfor&quot;&gt;UrlFor&lt;/a&gt;没有有关Rails应用程序正在服务的网站主机名的信息。因此，如果还要包含主机名，则还必须传递 &lt;code&gt;:host&lt;/code&gt; 参数：</target>
        </trans-unit>
        <trans-unit id="e55f230dbbf5a74dbcd7017f3fcdd6a43cc06c8b" translate="yes" xml:space="preserve">
          <source>Notice we're starting to see some duplication in these three tests, they both access the same Article fixture data. We can D.R.Y. this up by using the &lt;code&gt;setup&lt;/code&gt; and &lt;code&gt;teardown&lt;/code&gt; methods provided by &lt;code&gt;ActiveSupport::Callbacks&lt;/code&gt;.</source>
          <target state="translated">注意，我们开始在这三个测试中看到一些重复，它们都访问相同的Article夹具数据。我们可以使用 &lt;code&gt;ActiveSupport::Callbacks&lt;/code&gt; 提供的 &lt;code&gt;setup&lt;/code&gt; 和 &lt;code&gt;teardown&lt;/code&gt; 方法来对此进行干燥。</target>
        </trans-unit>
        <trans-unit id="753a22b2eb617204efee4644795034b8ace1ee14" translate="yes" xml:space="preserve">
          <source>Notifications</source>
          <target state="translated">Notifications</target>
        </trans-unit>
        <trans-unit id="8c8eaaf882c955457360616271c1ee8f60912482" translate="yes" xml:space="preserve">
          <source>Notifies the logs that the request has begun. After the request is complete, flushes all the logs.</source>
          <target state="translated">通知日志,请求已经开始。请求完成后,刷新所有日志。</target>
        </trans-unit>
        <trans-unit id="b083a26e6e8d5c85e90f954d51b377ab9d6cb915" translate="yes" xml:space="preserve">
          <source>Now &lt;code&gt;@articles&lt;/code&gt; is included in the instance variables, because the line defining it was executed.</source>
          <target state="translated">现在 &lt;code&gt;@articles&lt;/code&gt; 包含在实例变量中，因为定义它的行已执行。</target>
        </trans-unit>
        <trans-unit id="1b042097ab2d91df48ebb6afa5f5c762fbec1027" translate="yes" xml:space="preserve">
          <source>Now add a rotation for the old SHA1 digest so existing cookies are seamlessly upgraded to the new SHA256 digest.</source>
          <target state="translated">现在为旧的SHA1摘要添加一个轮换,这样现有的cookie就可以无缝升级到新的SHA256摘要。</target>
        </trans-unit>
        <trans-unit id="c41bff3fa5ccfd1232f6ff1584724f94b31f90aa" translate="yes" xml:space="preserve">
          <source>Now all of the following will produce the expected join queries using &lt;code&gt;INNER JOIN&lt;/code&gt;:</source>
          <target state="translated">现在，以下所有内容都将使用 &lt;code&gt;INNER JOIN&lt;/code&gt; 产生预期的联接查询：</target>
        </trans-unit>
        <trans-unit id="20b7f51321bce2db86858d9563944349508848d5" translate="yes" xml:space="preserve">
          <source>Now all you have to do is change that timestamp when the helper method changes.</source>
          <target state="translated">现在你要做的就是在帮助者方法改变的时候改变这个时间戳。</target>
        </trans-unit>
        <trans-unit id="7fa3370358927296e6f19b98512db3f680400c6c" translate="yes" xml:space="preserve">
          <source>Now if we execute &lt;code&gt;@todo = @user.todos.create&lt;/code&gt; then the &lt;code&gt;@todo&lt;/code&gt; record's &lt;code&gt;user_id&lt;/code&gt; value will be the &lt;code&gt;guid&lt;/code&gt; value of &lt;code&gt;@user&lt;/code&gt;.</source>
          <target state="translated">现在，如果我们执行 &lt;code&gt;@todo = @user.todos.create&lt;/code&gt; 那么 &lt;code&gt;@todo&lt;/code&gt; 记录的 &lt;code&gt;user_id&lt;/code&gt; 值将是 &lt;code&gt;@user&lt;/code&gt; 的 &lt;code&gt;guid&lt;/code&gt; 值。</target>
        </trans-unit>
        <trans-unit id="be04c0ceb80dcbf0f5dc7603a36d5f8eb4fa4974" translate="yes" xml:space="preserve">
          <source>Now if we run our tests, we should see it pass:</source>
          <target state="translated">现在如果我们运行我们的测试,我们应该看到它通过。</target>
        </trans-unit>
        <trans-unit id="786773a8b554b8bb590eedf207af886d2f83e1b8" translate="yes" xml:space="preserve">
          <source>Now if you go to http://localhost:3000/articles you will see a list of all the articles that you have created.</source>
          <target state="translated">现在如果你去http://localhost:3000/articles,你会看到你所创建的所有文章的列表。</target>
        </trans-unit>
        <trans-unit id="1ab2226544af01e8b9dc9c006fa565e96f7bfd6d" translate="yes" xml:space="preserve">
          <source>Now if you try to create a new article, you will be greeted with a basic HTTP Authentication challenge:</source>
          <target state="translated">现在,如果你试图创建一个新的文章,你会收到一个基本的HTTP认证挑战。</target>
        </trans-unit>
        <trans-unit id="02e279c3aab36157f4c5efb237f845b1ef1d7aec" translate="yes" xml:space="preserve">
          <source>Now it &lt;em&gt;is&lt;/em&gt; removed from the database:</source>
          <target state="translated">现在，它&lt;em&gt;是&lt;/em&gt;从数据库中删除：</target>
        </trans-unit>
        <trans-unit id="f7d061bef62245b1ff344a1120ecc9711baf3295" translate="yes" xml:space="preserve">
          <source>Now it is possible to create an instance of &lt;code&gt;Person&lt;/code&gt; and set attributes using &lt;code&gt;from_json&lt;/code&gt;.</source>
          <target state="translated">现在可以创建一个 &lt;code&gt;Person&lt;/code&gt; 实例并使用 &lt;code&gt;from_json&lt;/code&gt; 设置属性。</target>
        </trans-unit>
        <trans-unit id="fe05d7f983e2d38c65ce6aec823f42b31eef96f0" translate="yes" xml:space="preserve">
          <source>Now it's possible to access attributes from the database through the value objects instead. If you choose to name the composition the same as the attribute's name, it will be the only way to access that attribute. That's the case with our &lt;code&gt;balance&lt;/code&gt; attribute. You interact with the value objects just like you would with any other attribute:</source>
          <target state="translated">现在，可以通过值对象访问数据库中的属性。如果选择使用与属性名称相同的名称来命名合成，则它将是访问该属性的唯一方法。我们的 &lt;code&gt;balance&lt;/code&gt; 属性就是这种情况。您可以与值对象进行交互，就像使用任何其他属性一样：</target>
        </trans-unit>
        <trans-unit id="a0e723b1bc4f979da3f44583460af0278ed8ce41" translate="yes" xml:space="preserve">
          <source>Now it's time to explore your application. A good place to start is by asking the debugger for help. Type: &lt;code&gt;help&lt;/code&gt;</source>
          <target state="translated">现在是时候探索您的应用程序了。一个很好的起点是向调试器寻求帮助。类型： &lt;code&gt;help&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d346dc9770f3e643ac5bd68ca3943f083eeb299b" translate="yes" xml:space="preserve">
          <source>Now let's open that file and write our first assertion:</source>
          <target state="translated">现在让我们打开这个文件,写下我们的第一个断言。</target>
        </trans-unit>
        <trans-unit id="1cae19a080fb992409b81b543049cc89e8ba18c3" translate="yes" xml:space="preserve">
          <source>Now let's set &lt;code&gt;distinct&lt;/code&gt;:</source>
          <target state="translated">现在让我们设置 &lt;code&gt;distinct&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="5b9c7c93bfb7eceac813cc301b7376f2f1f280a2" translate="yes" xml:space="preserve">
          <source>Now let's test the flow for creating a new article in our blog.</source>
          <target state="translated">现在让我们测试一下在博客中创建新文章的流程。</target>
        </trans-unit>
        <trans-unit id="33fd0b45cc2d594e81d58237663c5baec9a5d5f1" translate="yes" xml:space="preserve">
          <source>Now our generator can be invoked as follows:</source>
          <target state="translated">现在我们的生成器可以调用如下。</target>
        </trans-unit>
        <trans-unit id="ce6dc94f4dbd0d8d43c18c69be65ff332773fa5b" translate="yes" xml:space="preserve">
          <source>Now people will only need to go to the root of the engine to see all the articles, rather than visiting &lt;code&gt;/articles&lt;/code&gt;. This means that instead of &lt;code&gt;http://localhost:3000/blorgh/articles&lt;/code&gt;, you only need to go to &lt;code&gt;http://localhost:3000/blorgh&lt;/code&gt; now.</source>
          <target state="translated">现在，人们只需要进入引擎的根目录即可查看所有文章，而无需访问 &lt;code&gt;/articles&lt;/code&gt; 。这意味着您现在只需访问 &lt;code&gt;http://localhost:3000/blorgh&lt;/code&gt; 即可代替 &lt;code&gt;http://localhost:3000/blorgh/articles&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5c83a55a45b2f01ea698594c8b3e1ad5455f11bf" translate="yes" xml:space="preserve">
          <source>Now routes such as &lt;code&gt;/posts/1&lt;/code&gt; will no longer be valid, but &lt;code&gt;/posts/1.1&lt;/code&gt; will be. The &lt;code&gt;id&lt;/code&gt; parameter must match the constraint passed in for this example.</source>
          <target state="translated">现在，例如 &lt;code&gt;/posts/1&lt;/code&gt; 之类的路由将不再有效，但 &lt;code&gt;/posts/1.1&lt;/code&gt; 将有效。该 &lt;code&gt;id&lt;/code&gt; 参数必须在这个例子中传入的约束相匹配。</target>
        </trans-unit>
        <trans-unit id="6a4dcaaa6423147b18b2f6af18138b7623923251" translate="yes" xml:space="preserve">
          <source>Now that the engine can create new articles, it only makes sense to add commenting functionality as well. To do this, you'll need to generate a comment model, a comment controller, and then modify the articles scaffold to display comments and allow people to create new ones.</source>
          <target state="translated">既然引擎可以创建新的文章,那么把评论功能也添加进去就很有意义了。要做到这一点,你需要生成一个评论模型、一个评论控制器,然后修改文章脚手架来显示评论并允许人们创建新的评论。</target>
        </trans-unit>
        <trans-unit id="11605a07ad419c26e10776711e573a3cc8abc17e" translate="yes" xml:space="preserve">
          <source>Now that we have a new database, let's set up the model. In order to use the new database we need to create a new abstract class and connect to the animals databases.</source>
          <target state="translated">现在我们有了一个新的数据库,让我们来设置模型。为了使用新的数据库,我们需要创建一个新的抽象类并连接到动物数据库。</target>
        </trans-unit>
        <trans-unit id="732e32122270aef4b9252cc8512ef28b55fe61ee" translate="yes" xml:space="preserve">
          <source>Now that we have a user model to play with, we will just edit the &lt;code&gt;app/controllers/users_controller.rb&lt;/code&gt; make it instruct the &lt;code&gt;UserMailer&lt;/code&gt; to deliver an email to the newly created user by editing the create action and inserting a call to &lt;code&gt;UserMailer.with(user: @user).welcome_email&lt;/code&gt; right after the user is successfully saved.</source>
          <target state="translated">现在我们有了一个可以使用的用户模型，我们只需编辑 &lt;code&gt;app/controllers/users_controller.rb&lt;/code&gt; ,使其通过编辑create动作并插入对 &lt;code&gt;UserMailer.with(user: @user).welcome_email&lt;/code&gt; 的调用来指示 &lt;code&gt;UserMailer&lt;/code&gt; 向新创建的用户发送电子邮件。（用户：@user）.welcome_email，保存成功后立即发送。</target>
        </trans-unit>
        <trans-unit id="08df1c22724db06d31f5eb1a44dd158696e53cf7" translate="yes" xml:space="preserve">
          <source>Now that we have articles and comments working, take a look at the &lt;code&gt;app/views/articles/show.html.erb&lt;/code&gt; template. It is getting long and awkward. We can use partials to clean it up.</source>
          <target state="translated">现在我们已经有了文章和评论，请看一下 &lt;code&gt;app/views/articles/show.html.erb&lt;/code&gt; 模板。它变得漫长而尴尬。我们可以使用局部函数来清理它。</target>
        </trans-unit>
        <trans-unit id="f7a57569c29b3772ca2726e0da0891ffdcc0c35a" translate="yes" xml:space="preserve">
          <source>Now that we have made the controller and view, we need to tell Rails when we want &quot;Hello, Rails!&quot; to show up. In our case, we want it to show up when we navigate to the root URL of our site, http://localhost:3000. At the moment, &quot;Welcome aboard&quot; is occupying that spot.</source>
          <target state="translated">现在我们已经完成了控制器和视图的制作,我们需要告诉Rails什么时候会出现 &quot;Hello,Rails!&quot;。在我们的例子中,我们希望它在我们导航到网站的根网址http://localhost:3000 时显示出来。目前,&quot;Welcome aboard &quot;占据了这个位置。</target>
        </trans-unit>
        <trans-unit id="c78bf8c3d9d311c23bfefc91cd38fcc387615966" translate="yes" xml:space="preserve">
          <source>Now that we have the &lt;code&gt;database.yml&lt;/code&gt; and the new model set up it's time to create the databases. Rails 6.0 ships with all the rails tasks you need to use multiple databases in Rails.</source>
          <target state="translated">现在我们有了 &lt;code&gt;database.yml&lt;/code&gt; 和新模型，现在该创建数据库了。Rails 6.0附带了所有Rails任务，您需要在Rails中使用多个数据库。</target>
        </trans-unit>
        <trans-unit id="3658b4e2bb9053598deec9119146b32737b682f1" translate="yes" xml:space="preserve">
          <source>Now that you have a module that modifies the input data, it's time to register it as a preprocessor for your mime type.</source>
          <target state="translated">现在你已经有了一个修改输入数据的模块,是时候把它注册为mime类型的预处理器了。</target>
        </trans-unit>
        <trans-unit id="1e3f00f9dc7d411f9b208e29217940a44d10cc9f" translate="yes" xml:space="preserve">
          <source>Now that you've seen how generators can be used &lt;em&gt;inside&lt;/em&gt; an application, did you know they can also be used to &lt;em&gt;generate&lt;/em&gt; applications too? This kind of generator is referred to as a &quot;template&quot;. This is a brief overview of the Templates API. For detailed documentation see the &lt;a href=&quot;rails_application_templates&quot;&gt;Rails Application Templates guide&lt;/a&gt;.</source>
          <target state="translated">既然您已经了解了如何&lt;em&gt;在&lt;/em&gt;应用程序&lt;em&gt;内部&lt;/em&gt;使用生成器，您是否知道它们也可以用于&lt;em&gt;生成&lt;/em&gt;应用程序？这种生成器称为&amp;ldquo;模板&amp;rdquo;。这是Templates API的简要概述。有关详细文档，请参见《&lt;a href=&quot;rails_application_templates&quot;&gt;Rails应用程序模板指南》&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9b78e5d03ac7a3268586ac2691c80bb6bf5d06b9" translate="yes" xml:space="preserve">
          <source>Now that you've seen how to create a controller, an action, and a view, let's create something with a bit more substance.</source>
          <target state="translated">现在你已经看到了如何创建一个控制器、一个动作和一个视图,让我们来创建一些更有内容的东西。</target>
        </trans-unit>
        <trans-unit id="c42baaa9718f13d5c8222d8c8a7cd9c934c39cef" translate="yes" xml:space="preserve">
          <source>Now that you've seen your first Rails application, you should feel free to update it and experiment on your own.</source>
          <target state="translated">现在你已经看到了你的第一个Rails应用,你应该自由地更新它,并在你自己的基础上进行试验。</target>
        </trans-unit>
        <trans-unit id="4ebf0a06c02ac9ca1316bd4928cbe3c564c0f180" translate="yes" xml:space="preserve">
          <source>Now the behavior is clear, that we are only using the connection information in &lt;code&gt;ENV['DATABASE_URL']&lt;/code&gt;.</source>
          <target state="translated">现在的行为很明显，我们只在 &lt;code&gt;ENV['DATABASE_URL']&lt;/code&gt; 使用连接信息。</target>
        </trans-unit>
        <trans-unit id="b49ba3604f078f72baacf288b548a11038388574" translate="yes" xml:space="preserve">
          <source>Now the header can pick up on the &lt;code&gt;@page_title&lt;/code&gt; variable and use it for outputting a title tag:</source>
          <target state="translated">现在，标题可以使用 &lt;code&gt;@page_title&lt;/code&gt; 变量，并将其用于输出标题标签：</target>
        </trans-unit>
        <trans-unit id="2e18d36f17b1d90839ac5dcdbcb33a0e9b504751" translate="yes" xml:space="preserve">
          <source>Now the test should pass. Let us verify by running the test again:</source>
          <target state="translated">现在测试应该通过了。让我们通过再次运行测试来验证。</target>
        </trans-unit>
        <trans-unit id="778539dc21c575db8a2ca83a7cff62a7c06e5c4c" translate="yes" xml:space="preserve">
          <source>Now the user can request to get a PDF version of a client just by adding &quot;.pdf&quot; to the URL:</source>
          <target state="translated">现在,用户只需在URL中添加&quot;.pdf&quot;,就可以要求获得客户端的PDF版本。</target>
        </trans-unit>
        <trans-unit id="a84530ec9df04e7cc3d58660fb582a3729c51d42" translate="yes" xml:space="preserve">
          <source>Now to get this test to pass we can add a model level validation for the &lt;em&gt;title&lt;/em&gt; field.</source>
          <target state="translated">现在，要使此测试通过，我们可以为&lt;em&gt;标题&lt;/em&gt;字段添加模型级别的验证。</target>
        </trans-unit>
        <trans-unit id="188b483bccd4381f8ec9c5e1a3d636878fd9e47c" translate="yes" xml:space="preserve">
          <source>Now we can see the new description by invoking &lt;code&gt;--help&lt;/code&gt; on the new generator. The second way to add a description is by creating a file named &lt;code&gt;USAGE&lt;/code&gt; in the same directory as our generator. We are going to do that in the next step.</source>
          <target state="translated">现在，我们可以通过在新生成器上调用 &lt;code&gt;--help&lt;/code&gt; 来查看新描述。添加描述的第二种方法是在与生成器相同的目录中创建一个名为 &lt;code&gt;USAGE&lt;/code&gt; 的文件。我们将在下一步中执行此操作。</target>
        </trans-unit>
        <trans-unit id="dddc1e5eddf99199ed2f4f24b64350725bf5572a" translate="yes" xml:space="preserve">
          <source>Now we're going to add a system test to our blog application. We'll demonstrate writing a system test by visiting the index page and creating a new blog article.</source>
          <target state="translated">现在我们要给我们的博客应用添加一个系统测试。我们将通过访问索引页和创建新的博客文章来演示编写系统测试。</target>
        </trans-unit>
        <trans-unit id="6b1be2e7a39917788e5f531bf999ce9e2f7f2121" translate="yes" xml:space="preserve">
          <source>Now what if that number could vary, say as an argument from somewhere? The find would then take the form:</source>
          <target state="translated">现在,如果这个数字可以变化,比如说作为来自某个地方的论据呢?那么这个发现就会变成这样的形式:</target>
        </trans-unit>
        <trans-unit id="be9be071256fdc4d57319b64f14682dd8cf34cb5" translate="yes" xml:space="preserve">
          <source>Now when a new request for the index action is processed, the layout will vary depending on whether the person accessing is logged in or not.</source>
          <target state="translated">现在,当一个新的索引操作请求被处理时,布局将根据访问者是否登录而有所不同。</target>
        </trans-unit>
        <trans-unit id="0c0ba2bf78d8878cf9ee6fce1e060d440d88a4de" translate="yes" xml:space="preserve">
          <source>Now when your application serves an asset in production, the CDN will store the asset for up to a year. Since most CDNs also cache headers of the request, this &lt;code&gt;Cache-Control&lt;/code&gt; will be passed along to all future browsers seeking this asset, the browser then knows that it can store this asset for a very long time before needing to re-request it.</source>
          <target state="translated">现在，当您的应用程序在生产中使用资产时，CDN将存储资产长达一年。由于大多数CDN还会缓存请求的标头，因此该 &lt;code&gt;Cache-Control&lt;/code&gt; 会传递给所有将来寻求该资产的浏览器，然后浏览器知道它可以存储此资产很长时间，然后才需要重新请求它。</target>
        </trans-unit>
        <trans-unit id="7397dca47478e57252a6d04e34f47f3cce91cb32" translate="yes" xml:space="preserve">
          <source>Now with all the pieces in place, an action will take place that will associate an author - represented by a record in the &lt;code&gt;users&lt;/code&gt; table - with an article, represented by the &lt;code&gt;blorgh_articles&lt;/code&gt; table from the engine.</source>
          <target state="translated">现在所有部分都准备就绪，将执行一个动作，该动作将作者（由 &lt;code&gt;users&lt;/code&gt; 表中的记录表示）与作者与引擎中的 &lt;code&gt;blorgh_articles&lt;/code&gt; 表表示的文章相关联。</target>
        </trans-unit>
        <trans-unit id="f4861027a7a7732f007bb28f69aa885ad4bd3bb6" translate="yes" xml:space="preserve">
          <source>Now you can access a serialized Hash of your object using the &lt;code&gt;serializable_hash&lt;/code&gt; method.</source>
          <target state="translated">现在，您可以使用 &lt;code&gt;serializable_hash&lt;/code&gt; 方法访问对象的序列化Hash 。</target>
        </trans-unit>
        <trans-unit id="bbd491ea2cb97bc75ae16420f9d81e845ecc38d4" translate="yes" xml:space="preserve">
          <source>Now you can add articles and comments to your blog and have them show up in the right places.</source>
          <target state="translated">现在你可以将文章和评论添加到你的博客中,并让它们显示在正确的位置。</target>
        </trans-unit>
        <trans-unit id="a63f6b7032dcb040af6139789b42742fda3dbb90" translate="yes" xml:space="preserve">
          <source>Now you can create the necessary database tables in your testing database by navigating to your dummy app and migrating the database. First, run:</source>
          <target state="translated">现在,您可以通过导航到您的虚拟应用程序并迁移数据库,在测试数据库中创建必要的数据库表。首先,运行。</target>
        </trans-unit>
        <trans-unit id="1b509fba0e74de20ecdb10b71addfc8cad75a3af" translate="yes" xml:space="preserve">
          <source>Now you can display an image inside your email.</source>
          <target state="translated">现在,你可以在你的电子邮件中显示图像。</target>
        </trans-unit>
        <trans-unit id="1e04b515bb030c9b6a664234a0b6eaa9a8d60e0d" translate="yes" xml:space="preserve">
          <source>Now you can have different transliterations for each locale:</source>
          <target state="translated">现在,您可以为每个地区提供不同的翻译。</target>
        </trans-unit>
        <trans-unit id="a57d5608f4f021228ff74f81e7c98fcad5341756" translate="yes" xml:space="preserve">
          <source>Now you can listen to this event with:</source>
          <target state="translated">现在你可以听这个事件与。</target>
        </trans-unit>
        <trans-unit id="fc952f88284ef46aa74b35dfcd65bb65ac57e4b3" translate="yes" xml:space="preserve">
          <source>Now you can mount your engine in application's routes just like that:</source>
          <target state="translated">现在,你可以把你的引擎安装在应用程序的路由中,就像这样。</target>
        </trans-unit>
        <trans-unit id="0cca2a620bb0efd6c8b31ea33601ec518093b64d" translate="yes" xml:space="preserve">
          <source>Now you can see even more output in the console from running the tests:</source>
          <target state="translated">现在你可以在控制台中看到更多运行测试的输出。</target>
        </trans-unit>
        <trans-unit id="ef124558e731720d7cd6ee04cfa0fa14595c87e3" translate="yes" xml:space="preserve">
          <source>Now you can simply do:</source>
          <target state="translated">现在你可以简单地做到。</target>
        </trans-unit>
        <trans-unit id="97015d7f10515896d46f145fc9b204e09622e272" translate="yes" xml:space="preserve">
          <source>Now you can try running all the tests and they should pass.</source>
          <target state="translated">现在你可以尝试运行所有的测试,它们应该会通过。</target>
        </trans-unit>
        <trans-unit id="a1f2c06b04c1d3ffade749660a4a8d51b3ca9356" translate="yes" xml:space="preserve">
          <source>Now you should know where you are in the running trace and be able to print the available variables. But let's continue and move on with the application execution.</source>
          <target state="translated">现在你应该知道你在运行跟踪中的位置,并且能够打印可用的变量。但让我们继续,继续进行应用程序的执行。</target>
        </trans-unit>
        <trans-unit id="87bb8627d78df2d32264c8cfee94fb35d59902db" translate="yes" xml:space="preserve">
          <source>Now you'll get a nice error message when saving an article without a title when you attempt to do just that on the new article form http://localhost:3000/articles/new:</source>
          <target state="translated">现在,当你试图在新的文章表格中保存没有标题的文章时,你会得到一个漂亮的错误信息,http://localhost:3000/articles/new。</target>
        </trans-unit>
        <trans-unit id="6c963ec9ca58ea98b17b6c7555bcaae882d53c98" translate="yes" xml:space="preserve">
          <source>Now, &lt;code&gt;Engine&lt;/code&gt; will get only requests that were not handled by &lt;code&gt;Application&lt;/code&gt;.</source>
          <target state="translated">现在， &lt;code&gt;Engine&lt;/code&gt; 将仅获得 &lt;code&gt;Application&lt;/code&gt; 未处理的请求。</target>
        </trans-unit>
        <trans-unit id="203cf7090ffd765e9f27dc2ab3d7d30952df1c61" translate="yes" xml:space="preserve">
          <source>Now, a &lt;code&gt;GET&lt;/code&gt; request to &lt;code&gt;/photos&lt;/code&gt; would succeed, but a &lt;code&gt;POST&lt;/code&gt; request to &lt;code&gt;/photos&lt;/code&gt; (which would ordinarily be routed to the &lt;code&gt;create&lt;/code&gt; action) will fail.</source>
          <target state="translated">现在，对 &lt;code&gt;/photos&lt;/code&gt; 的 &lt;code&gt;GET&lt;/code&gt; 请求将会成功，但是对 &lt;code&gt;/photos&lt;/code&gt; 的 &lt;code&gt;POST&lt;/code&gt; 请求（通常会路由到 &lt;code&gt;create&lt;/code&gt; 操作）将失败。</target>
        </trans-unit>
        <trans-unit id="af62ed7bdece7af2a862042c75463d54724457e7" translate="yes" xml:space="preserve">
          <source>Now, add another link in &lt;code&gt;app/views/articles/new.html.erb&lt;/code&gt;, underneath the form, to go back to the &lt;code&gt;index&lt;/code&gt; action:</source>
          <target state="translated">现在，在表单下方的 &lt;code&gt;app/views/articles/new.html.erb&lt;/code&gt; 中添加另一个链接，以返回到 &lt;code&gt;index&lt;/code&gt; 操作：</target>
        </trans-unit>
        <trans-unit id="8e12adc83e98da965b0202dae25d3e358044f67f" translate="yes" xml:space="preserve">
          <source>Now, create a new file &lt;code&gt;app/views/articles/show.html.erb&lt;/code&gt; with the following content:</source>
          <target state="translated">现在，创建一个新文件 &lt;code&gt;app/views/articles/show.html.erb&lt;/code&gt; ，内容如下：</target>
        </trans-unit>
        <trans-unit id="ab84c9773432db7232bd695fe13dcece6e69f43e" translate="yes" xml:space="preserve">
          <source>Now, if the current user is a special user, they'll get a special layout when viewing a product.</source>
          <target state="translated">现在,如果当前用户是特殊用户,他们在查看产品时将获得特殊的布局。</target>
        </trans-unit>
        <trans-unit id="d155cc0c54a8c1103fe54c9484e37a19028bfcab" translate="yes" xml:space="preserve">
          <source>Now, if you POST to &lt;code&gt;/posts/:id&lt;/code&gt;, it will route to the &lt;code&gt;create_comment&lt;/code&gt; action. A GET on the same URL will route to the &lt;code&gt;show&lt;/code&gt; action.</source>
          <target state="translated">现在，如果您发布到 &lt;code&gt;/posts/:id&lt;/code&gt; ，它将路由到 &lt;code&gt;create_comment&lt;/code&gt; 操作。在相同URL上的GET将路由到 &lt;code&gt;show&lt;/code&gt; 操作。</target>
        </trans-unit>
        <trans-unit id="fd01ddc663c761677d7838ff6ebae0d36785cd0e" translate="yes" xml:space="preserve">
          <source>Now, if you create a Comment scaffold, you will see that the shoulda generators are being invoked, and at the end, they are just falling back to TestUnit generators:</source>
          <target state="translated">现在,如果你创建一个Comment脚手架,你会看到shoulda生成器正在被调用,而在最后,它们只是回落到TestUnit生成器。</target>
        </trans-unit>
        <trans-unit id="48e2d05fe59b341a812b4b192d936fbdab98a334" translate="yes" xml:space="preserve">
          <source>Now, if you noticed, we first wrote a test which fails for a desired functionality, then we wrote some code which adds the functionality and finally we ensured that our test passes. This approach to software development is referred to as &lt;a href=&quot;http://c2.com/cgi/wiki?TestDrivenDevelopment&quot;&gt;&lt;em&gt;Test-Driven Development&lt;/em&gt; (TDD)&lt;/a&gt;.</source>
          <target state="translated">现在，如果您注意到了，我们首先编写了一个未能实现所需功能的测试，然后编写了一些添加功能的代码，最后确保测试通过。这种软件开发方法称为&lt;a href=&quot;http://c2.com/cgi/wiki?TestDrivenDevelopment&quot;&gt;&lt;em&gt;测试驱动开发&lt;/em&gt;（TDD）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="27b8380c7a32dfa3423cdfea7f660ff2643ddae5" translate="yes" xml:space="preserve">
          <source>Now, let's update the &lt;code&gt;app/views/articles/new.html.erb&lt;/code&gt; view to use this new partial, rewriting it completely:</source>
          <target state="translated">现在，让我们更新 &lt;code&gt;app/views/articles/new.html.erb&lt;/code&gt; 视图以使用这个新的部分，完全重写它：</target>
        </trans-unit>
        <trans-unit id="217df5a8b404551ff72f541302f83740782a2f6c" translate="yes" xml:space="preserve">
          <source>Now, suppose we wanted to add a new book for an existing author. We'd need to do something like this:</source>
          <target state="translated">现在,假设我们想为一个现有的作者添加一本新书。我们需要做这样的事情。</target>
        </trans-unit>
        <trans-unit id="11c9105ae03fd512b3df4b1b95b94556311d85ad" translate="yes" xml:space="preserve">
          <source>Now, the &lt;code&gt;LoginsController&lt;/code&gt;'s &lt;code&gt;new&lt;/code&gt; and &lt;code&gt;create&lt;/code&gt; actions will work as before without requiring the user to be logged in. The &lt;code&gt;:only&lt;/code&gt; option is used to skip this filter only for these actions, and there is also an &lt;code&gt;:except&lt;/code&gt; option which works the other way. These options can be used when adding filters too, so you can add a filter which only runs for selected actions in the first place.</source>
          <target state="translated">现在， &lt;code&gt;LoginsController&lt;/code&gt; 的 &lt;code&gt;new&lt;/code&gt; 和 &lt;code&gt;create&lt;/code&gt; 行动将工作之前，而不需要用户先登录的。 &lt;code&gt;:only&lt;/code&gt; 选项用于跳过此过滤器只对这些行动，并且还有一个 &lt;code&gt;:except&lt;/code&gt; 其运作的其他选项方式。这些选项也可以在添加过滤器时使用，因此您可以添加仅首先对选定操作运行的过滤器。</target>
        </trans-unit>
        <trans-unit id="6dbcfc0b858782509a12208646a29cda7e06af98" translate="yes" xml:space="preserve">
          <source>Now, when &lt;code&gt;Topic#destroy&lt;/code&gt; is run only &lt;code&gt;destroy_author&lt;/code&gt; is called. When &lt;code&gt;Reply#destroy&lt;/code&gt; is run, both &lt;code&gt;destroy_author&lt;/code&gt; and &lt;code&gt;destroy_readers&lt;/code&gt; are called.</source>
          <target state="translated">现在，当运行 &lt;code&gt;Topic#destroy&lt;/code&gt; 时，仅 &lt;code&gt;destroy_author&lt;/code&gt; 。当 &lt;code&gt;Reply#destroy&lt;/code&gt; 中运行时， &lt;code&gt;destroy_author&lt;/code&gt; 和 &lt;code&gt;destroy_readers&lt;/code&gt; 被调用。</target>
        </trans-unit>
        <trans-unit id="c9f281387742abe67e917f18111764c49c4a38a8" translate="yes" xml:space="preserve">
          <source>Now, when the helper generator is invoked and TestUnit is configured as the test framework, it will try to invoke both &lt;code&gt;Rails::TestUnitGenerator&lt;/code&gt; and &lt;code&gt;TestUnit::MyHelperGenerator&lt;/code&gt;. Since none of those are defined, we can tell our generator to invoke &lt;code&gt;TestUnit::Generators::HelperGenerator&lt;/code&gt; instead, which is defined since it's a Rails generator. To do that, we just need to add:</source>
          <target state="translated">现在，当调用辅助生成器并将TestUnit配置为测试框架时，它将尝试调用 &lt;code&gt;Rails::TestUnitGenerator&lt;/code&gt; 和 &lt;code&gt;TestUnit::MyHelperGenerator&lt;/code&gt; 。由于这些都没有定义，因此我们可以告诉生成器改为调用 &lt;code&gt;TestUnit::Generators::HelperGenerator&lt;/code&gt; ，它是Rails生成器，因此已定义。为此，我们只需要添加：</target>
        </trans-unit>
        <trans-unit id="738f4ee5f2fdec6e2acb7a14ba46229776b15fe5" translate="yes" xml:space="preserve">
          <source>Now, when this view is rendered, it will show an error message which tells you that the translations for the keys &lt;code&gt;:hello_world&lt;/code&gt; and &lt;code&gt;:hello_flash&lt;/code&gt; are missing.</source>
          <target state="translated">现在，呈现此视图时，它将显示一条错误消息，告诉您 &lt;code&gt;:hello_world&lt;/code&gt; 和 &lt;code&gt;:hello_flash&lt;/code&gt; 键的翻译丢失。</target>
        </trans-unit>
        <trans-unit id="d961b6eae818de7e713f0e8ff2517e62b85cc0f1" translate="yes" xml:space="preserve">
          <source>Now, when you add the &lt;code&gt;_destroy&lt;/code&gt; key to the attributes hash, with a value that evaluates to &lt;code&gt;true&lt;/code&gt;, you will destroy the associated model:</source>
          <target state="translated">现在，将 &lt;code&gt;_destroy&lt;/code&gt; 键添加到属性哈希中，其值的计算结果为 &lt;code&gt;true&lt;/code&gt; ，则将销毁关联的模型：</target>
        </trans-unit>
        <trans-unit id="0e48bab7662e8b7cbf063bf165fef96ea50592a7" translate="yes" xml:space="preserve">
          <source>Now, when you call the &lt;code&gt;books_path&lt;/code&gt; method you should get &lt;code&gt;&quot;/en/books&quot;&lt;/code&gt; (for the default locale). A URL like &lt;code&gt;http://localhost:3001/nl/books&lt;/code&gt; should load the Dutch locale, then, and following calls to &lt;code&gt;books_path&lt;/code&gt; should return &lt;code&gt;&quot;/nl/books&quot;&lt;/code&gt; (because the locale changed).</source>
          <target state="translated">现在，当您调用 &lt;code&gt;books_path&lt;/code&gt; 方法时，您应该获得 &lt;code&gt;&quot;/en/books&quot;&lt;/code&gt; （用于默认语言环境）。像 &lt;code&gt;http://localhost:3001/nl/books&lt;/code&gt; 这样的URL 应该会加载荷兰语区域设置，然后在对 &lt;code&gt;books_path&lt;/code&gt; 的调用之后应该返回 &lt;code&gt;&quot;/nl/books&quot;&lt;/code&gt; （因为更改了区域设置）。</target>
        </trans-unit>
        <trans-unit id="dce4fc5d00e68ba3c104ef525a4771ac4977bf97" translate="yes" xml:space="preserve">
          <source>Now, when you use a form element with the &lt;code&gt;_destroy&lt;/code&gt; parameter, with a value that evaluates to &lt;code&gt;true&lt;/code&gt;, you will destroy the associated model (eg. 1, '1', true, or 'true'):</source>
          <target state="translated">现在，当您将表单元素与 &lt;code&gt;_destroy&lt;/code&gt; 参数一起使用，并且其值的值为 &lt;code&gt;true&lt;/code&gt; 时，您将销毁关联的模型（例如1，&amp;ldquo; 1&amp;rdquo;，true或&amp;ldquo; true&amp;rdquo;）：</target>
        </trans-unit>
        <trans-unit id="c809e2c5ebb44a808f82d543f4edd794de0e3536" translate="yes" xml:space="preserve">
          <source>Now, you can use the &lt;code&gt;my_engine&lt;/code&gt; helper inside your application:</source>
          <target state="translated">现在，您可以在应用程序内部使用 &lt;code&gt;my_engine&lt;/code&gt; 帮助器：</target>
        </trans-unit>
        <trans-unit id="4766e0bf16611e8438a6d53eae97d9cadc5e5fec" translate="yes" xml:space="preserve">
          <source>Null Relation</source>
          <target state="translated">虚无关系</target>
        </trans-unit>
        <trans-unit id="6bfcf0cddffdd3930b31edb810e7c1a87b793877" translate="yes" xml:space="preserve">
          <source>NullContentTypeHeader</source>
          <target state="translated">NullContentTypeHeader</target>
        </trans-unit>
        <trans-unit id="350e7d8f18b3ca80dc7b075c15a357bcc83872b7" translate="yes" xml:space="preserve">
          <source>Number of partials fetched from cache</source>
          <target state="translated">从缓存中获取的partials数量。</target>
        </trans-unit>
        <trans-unit id="cba15084808a7129a67b592d7bb6d70a61b0c406" translate="yes" xml:space="preserve">
          <source>Number of records that instantiated</source>
          <target state="translated">实例化的记录数量</target>
        </trans-unit>
        <trans-unit id="098c6454bdf4bbfd58663e390aac0c78846ac19f" translate="yes" xml:space="preserve">
          <source>Number of times this job has been executed (which increments on every retry, like after an exception).</source>
          <target state="translated">这个作业被执行的次数(每次重试都会递增,比如发生异常后)。</target>
        </trans-unit>
        <trans-unit id="5a4142ed71d8bb3054e10546418ff4a5622d023e" translate="yes" xml:space="preserve">
          <source>NumberHelper</source>
          <target state="translated">NumberHelper</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
