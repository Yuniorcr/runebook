<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="rails">
    <body>
      <group id="rails">
        <trans-unit id="41605890c3eea5d388ea84f23ae720211a781c79" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;Firm#clients&lt;/code&gt; is called, it will in turn call &lt;code&gt;MyApplication::Business::Client.find_all_by_firm_id(firm.id)&lt;/code&gt;. If you want to associate with a class in another module scope, this can be done by specifying the complete class name.</source>
          <target state="translated">当调用 &lt;code&gt;Firm#clients&lt;/code&gt; 时，它将依次调用 &lt;code&gt;MyApplication::Business::Client.find_all_by_firm_id(firm.id)&lt;/code&gt; 。如果要与另一个模块作用域中的类关联，可以通过指定完整的类名来完成。</target>
        </trans-unit>
        <trans-unit id="ecb5ad115aab997cdcdad384c9aa0f0d2155d59a" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;cache_classes&lt;/code&gt; is true (in &lt;code&gt;production&lt;/code&gt;, by default), the Reloader is only a pass-through to the Executor.</source>
          <target state="translated">当 &lt;code&gt;cache_classes&lt;/code&gt; 为true时（默认为 &lt;code&gt;production&lt;/code&gt; ），Reloader只是对Executor的传递。</target>
        </trans-unit>
        <trans-unit id="de9ecae7d4aedf350a48e00d3f786b9eae87dbb4" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;config.cache_classes&lt;/code&gt; is false Rails is able to reload autoloaded constants.</source>
          <target state="translated">当 &lt;code&gt;config.cache_classes&lt;/code&gt; 为false时，Rails可以重新加载自动加载的常量。</target>
        </trans-unit>
        <trans-unit id="d5ac98cde8a9c7b5ad55e445c81a57c693b787b5" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;instance_eval&lt;/code&gt; is called using a string argument, the singleton class of the receiver is pushed to the nesting of the eval'ed code. When &lt;code&gt;class_eval&lt;/code&gt; or &lt;code&gt;module_eval&lt;/code&gt; is called using a string argument, the receiver is pushed to the nesting of the eval'ed code.</source>
          <target state="translated">当使用字符串参数调用 &lt;code&gt;instance_eval&lt;/code&gt; 时，接收者的单例类将推入已评估代码的嵌套。当使用字符串参数调用 &lt;code&gt;class_eval&lt;/code&gt; 或 &lt;code&gt;module_eval&lt;/code&gt; 时，接收器被推到已评估代码的嵌套中。</target>
        </trans-unit>
        <trans-unit id="d604f2ba57c7f4ab3e3d2e92c260b23aa55646b8" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;params[:token]&lt;/code&gt; is one of: &lt;code&gt;[nil]&lt;/code&gt;, &lt;code&gt;[nil, nil, ...]&lt;/code&gt; or &lt;code&gt;['foo', nil]&lt;/code&gt; it will bypass the test for &lt;code&gt;nil&lt;/code&gt;, but &lt;code&gt;IS NULL&lt;/code&gt; or &lt;code&gt;IN ('foo', NULL)&lt;/code&gt; where clauses still will be added to the SQL query.</source>
          <target state="translated">当 &lt;code&gt;params[:token]&lt;/code&gt; 是以下其中之一： &lt;code&gt;[nil]&lt;/code&gt; ， &lt;code&gt;[nil, nil, ...]&lt;/code&gt; 或 &lt;code&gt;['foo', nil]&lt;/code&gt; ，它将绕过 &lt;code&gt;nil&lt;/code&gt; 的测试，但是 &lt;code&gt;IS NULL&lt;/code&gt; 或 &lt;code&gt;IN ('foo', NULL)&lt;/code&gt; where子句仍将添加到SQL查询中。</target>
        </trans-unit>
        <trans-unit id="2a6fc1e5b3e599bcf86d8000d184dc66fd92c8f3" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;post&lt;/code&gt; is a new, unsaved &lt;a href=&quot;../activerecord/base&quot;&gt;ActiveRecord::Base&lt;/a&gt; instance, the resulting HTML is:</source>
          <target state="translated">如果 &lt;code&gt;post&lt;/code&gt; 是一个新的未保存的&lt;a href=&quot;../activerecord/base&quot;&gt;ActiveRecord :: Base&lt;/a&gt;实例，则结果HTML为：</target>
        </trans-unit>
        <trans-unit id="68ed8553a98f4495cbdea9061fec5d6841574b6c" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;post&lt;/code&gt; is a persisted &lt;a href=&quot;../activerecord/base&quot;&gt;ActiveRecord::Base&lt;/a&gt; instance, the resulting HTML is:</source>
          <target state="translated">当 &lt;code&gt;post&lt;/code&gt; 是一个持久的&lt;a href=&quot;../activerecord/base&quot;&gt;ActiveRecord :: Base&lt;/a&gt;实例时，结果HTML为：</target>
        </trans-unit>
        <trans-unit id="42064b8ffcf21cb5045f2193a0984deeb4ccfddf" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;require APP_PATH&lt;/code&gt; is executed, &lt;code&gt;config/application.rb&lt;/code&gt; is loaded (recall that &lt;code&gt;APP_PATH&lt;/code&gt; is defined in &lt;code&gt;bin/rails&lt;/code&gt;). This file exists in your application and it's free for you to change based on your needs.</source>
          <target state="translated">当执行 &lt;code&gt;require APP_PATH&lt;/code&gt; 时，将加载 &lt;code&gt;config/application.rb&lt;/code&gt; （回想一下 &lt;code&gt;APP_PATH&lt;/code&gt; 是在 &lt;code&gt;bin/rails&lt;/code&gt; 中定义的）。该文件存在于您的应用程序中，您可以根据需要免费进行更改。</target>
        </trans-unit>
        <trans-unit id="fa838158cc71c78374e57b1723bece69410843eb" translate="yes" xml:space="preserve">
          <source>When &lt;strong&gt;not&lt;/strong&gt; to use transactional tests:</source>
          <target state="translated">什么时候&lt;strong&gt;不&lt;/strong&gt;使用事务测试：</target>
        </trans-unit>
        <trans-unit id="d7b1bda2a58d174ea810859d51cd678ae4e0f051" translate="yes" xml:space="preserve">
          <source>When Constants aren't Missed</source>
          <target state="translated">当常量没有被遗漏时</target>
        </trans-unit>
        <trans-unit id="b987e3f67db3099102472ac50072723653dc5969" translate="yes" xml:space="preserve">
          <source>When Does Validation Happen?</source>
          <target state="translated">什么时候进行验证?</target>
        </trans-unit>
        <trans-unit id="1133542f262fa103eb88b9fe1c69121d20a64a09" translate="yes" xml:space="preserve">
          <source>When Helpers aren't Enough</source>
          <target state="translated">当帮手不够用的时候</target>
        </trans-unit>
        <trans-unit id="11eee985b0136d59e745e36c37d356e920c9bbcf" translate="yes" xml:space="preserve">
          <source>When Rails looks for a view to render, it will first look in the &lt;code&gt;app/views&lt;/code&gt; directory of the application. If it cannot find the view there, it will check in the &lt;code&gt;app/views&lt;/code&gt; directories of all engines that have this directory.</source>
          <target state="translated">当Rails寻找要渲染的视图时，它将首先在 &lt;code&gt;app/views&lt;/code&gt; 目录中寻找。如果找不到该视图，它将检入具有该目录的所有引擎的 &lt;code&gt;app/views&lt;/code&gt; 目录。</target>
        </trans-unit>
        <trans-unit id="c7d3853f40dac2c4fa5ae322fed6fa24ff33482a" translate="yes" xml:space="preserve">
          <source>When Rails renders a view as a response, it does so by combining the view with the current layout, using the rules for finding the current layout that were covered earlier in this guide. Within a layout, you have access to three tools for combining different bits of output to form the overall response:</source>
          <target state="translated">当 Rails 将视图渲染为响应时,它通过将视图与当前布局结合起来,使用本指南前面介绍的查找当前布局的规则来实现。在布局中,您可以使用三种工具来组合不同的输出位,以形成整体响应。</target>
        </trans-unit>
        <trans-unit id="f32da9525b7cb6ebcf7f93c63528caea80eed46e" translate="yes" xml:space="preserve">
          <source>When a &lt;code&gt;:default&lt;/code&gt; option is given, its value will be returned if the translation is missing:</source>
          <target state="translated">当 &lt;code&gt;:default&lt;/code&gt; 选项，则如果转换丢失它的值将返回：</target>
        </trans-unit>
        <trans-unit id="0f7eb70af8a06669de852f629b5d18beba1b942b" translate="yes" xml:space="preserve">
          <source>When a &lt;code&gt;:return_path&lt;/code&gt; is specified as header, that value will be used as the 'envelope from' address for the Mail message. Setting this is useful when you want delivery notifications sent to a different address than the one in &lt;code&gt;:from&lt;/code&gt;. Mail will actually use the &lt;code&gt;:return_path&lt;/code&gt; in preference to the &lt;code&gt;:sender&lt;/code&gt; in preference to the &lt;code&gt;:from&lt;/code&gt; field for the 'envelope from' value.</source>
          <target state="translated">当 &lt;code&gt;:return_path&lt;/code&gt; 指定为标题时，该值将用作Mail消息的&amp;ldquo;信封来源&amp;rdquo;地址。如果要将递送通知发送到与 &lt;code&gt;:from&lt;/code&gt; 中的地址不同的地址，设置此选项很有用。对于'envelope from'值，邮件实际上将优先使用 &lt;code&gt;:return_path&lt;/code&gt; 而不是 &lt;code&gt;:sender&lt;/code&gt; 而不是 &lt;code&gt;:from&lt;/code&gt; 字段。</target>
        </trans-unit>
        <trans-unit id="a8105326923043b365e08c71ce28876f358e7f50" translate="yes" xml:space="preserve">
          <source>When a class is inherited, wrap its helper module in a new module. This ensures that the parent class's module can be changed independently of the child class's.</source>
          <target state="translated">当一个类被继承时,将它的帮助模块包裹在一个新的模块中。这样可以保证父类的模块可以独立于子类的模块进行修改。</target>
        </trans-unit>
        <trans-unit id="65b0333e26bcdaef4fddab7b81cd22fffa35068b" translate="yes" xml:space="preserve">
          <source>When a collection is used you might want to know the index of each object into the array. For this purpose, the &lt;code&gt;index&lt;/code&gt; method is available in the &lt;a href=&quot;formbuilder&quot;&gt;FormBuilder&lt;/a&gt; object.</source>
          <target state="translated">使用集合时，您可能想知道每个对象在数组中的索引。为此，在&lt;a href=&quot;formbuilder&quot;&gt;FormBuilder&lt;/a&gt;对象中可以使用 &lt;code&gt;index&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="db055eb2fbed21e712fa380c71143bcce644d605" translate="yes" xml:space="preserve">
          <source>When a consumer is subscribed to a channel, they act as a subscriber. This connection is called a subscription. Incoming messages are then routed to these channel subscriptions based on an identifier sent by the cable consumer.</source>
          <target state="translated">当消费者订阅了一个频道时,他们就充当了订阅者的角色。这种连接称为订阅。然后,根据有线电视消费者发送的标识符,将传入的信息路由到这些频道订阅。</target>
        </trans-unit>
        <trans-unit id="410628c7b26e721f89bfd4c0364a59a9a9b8002b" translate="yes" xml:space="preserve">
          <source>When a file is referenced from a manifest or a helper, Sprockets searches the three default asset locations for it.</source>
          <target state="translated">当一个文件从清单或帮助程序中引用时,Sprockets会搜索它的三个默认资产位置。</target>
        </trans-unit>
        <trans-unit id="3a83d7cd53f1eeccbfd68de91ac606ff3e139e15" translate="yes" xml:space="preserve">
          <source>When a filename is unique and based on its content, HTTP headers can be set to encourage caches everywhere (whether at CDNs, at ISPs, in networking equipment, or in web browsers) to keep their own copy of the content. When the content is updated, the fingerprint will change. This will cause the remote clients to request a new copy of the content. This is generally known as &lt;em&gt;cache busting&lt;/em&gt;.</source>
          <target state="translated">当文件名是唯一的并且基于其内容时，可以设置HTTP标头以鼓励各地（无论是CDN，ISP，网络设备还是Web浏览器）的高速缓存保留其自己的内容副本。当内容更新时，指纹将改变。这将导致远程客户端请求内容的新副本。这通常称为&lt;em&gt;缓存清除&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="093e715b75fc7b3b00b7781d7f7b99331d680a52" translate="yes" xml:space="preserve">
          <source>When a form is submitted, the fields of the form are sent to Rails as &lt;em&gt;parameters&lt;/em&gt;. These parameters can then be referenced inside the controller actions, typically to perform a particular task. To see what these parameters look like, change the &lt;code&gt;create&lt;/code&gt; action to this:</source>
          <target state="translated">提交表单后，表单的字段将作为&lt;em&gt;参数&lt;/em&gt;发送到Rails 。这些参数然后可以在控制器动作中被引用，通常用于执行特定任务。要查看这些参数的外观，请将 &lt;code&gt;create&lt;/code&gt; 操作更改为：</target>
        </trans-unit>
        <trans-unit id="2f99a952576340381cc7c8b72b783fe60a51cd03" translate="yes" xml:space="preserve">
          <source>When a job will stop after the allotted time.</source>
          <target state="translated">什么时候作业会在规定的时间后停止。</target>
        </trans-unit>
        <trans-unit id="47a10ae32bc492a25c391696790dcbdd14867fdb" translate="yes" xml:space="preserve">
          <source>When a module acts as a namespace, Rails does not require the application to define a file for it, a directory matching the namespace is enough.</source>
          <target state="translated">当一个模块作为一个命名空间时,Rails不需要应用程序为其定义一个文件,只要有一个与命名空间相匹配的目录即可。</target>
        </trans-unit>
        <trans-unit id="b37fbe65cbed0100a86dd0277240e3a1a49959ad" translate="yes" xml:space="preserve">
          <source>When a new value is assigned to the value object, the default assumption is that the new value is an instance of the value class. Specifying a custom converter allows the new value to be automatically converted to an instance of value class if necessary.</source>
          <target state="translated">当一个新的值被分配给值对象时,默认的假设是新的值是值类的实例。指定一个自定义的转换器可以在必要时将新值自动转换为值类的实例。</target>
        </trans-unit>
        <trans-unit id="d17efb02bdf333d4201ab4386115537e51935af5" translate="yes" xml:space="preserve">
          <source>When a partial is called with a collection, the individual instances of the partial have access to the member of the collection being rendered via a variable named after the partial. In this case, the partial is &lt;code&gt;_product&lt;/code&gt;, and within it you can refer to &lt;code&gt;product&lt;/code&gt; to get the collection member that is being rendered.</source>
          <target state="translated">当用集合调用一个局部对象时，该局部对象的各个实例可以通过以该局部对象命名的变量访问正在呈现的集合成员。在这种情况下，partial是 &lt;code&gt;_product&lt;/code&gt; ，在其中可以引用 &lt;code&gt;product&lt;/code&gt; 来获取要呈现的集合成员。</target>
        </trans-unit>
        <trans-unit id="5d73bf4db2c8093e12ad4b4dfae7f16e8d5c0f8e" translate="yes" xml:space="preserve">
          <source>When a partial is called with a pluralized collection, then the individual instances of the partial have access to the member of the collection being rendered via a variable named after the partial. In this case, the partial is &lt;code&gt;_product&lt;/code&gt;, and within the &lt;code&gt;_product&lt;/code&gt; partial, you can refer to &lt;code&gt;product&lt;/code&gt; to get the instance that is being rendered.</source>
          <target state="translated">当用多元化集合调用一个局部对象时，该局部对象的各个实例就可以通过以该局部对象命名的变量访问正在呈现的集合成员。在这种情况下，partial是 &lt;code&gt;_product&lt;/code&gt; ，在 &lt;code&gt;_product&lt;/code&gt; partial内，您可以引用 &lt;code&gt;product&lt;/code&gt; 来获取正在渲染的实例。</target>
        </trans-unit>
        <trans-unit id="f39992ffab310773016de4ae16e119d4f3ef6fde" translate="yes" xml:space="preserve">
          <source>When a pattern points to an internal route, the route's &lt;code&gt;:action&lt;/code&gt; and &lt;code&gt;:controller&lt;/code&gt; should be set in options or hash shorthand. Examples:</source>
          <target state="translated">当模式指向内部路由时，应在选项或哈希简写中设置路由的 &lt;code&gt;:action&lt;/code&gt; 和 &lt;code&gt;:controller&lt;/code&gt; 。例子：</target>
        </trans-unit>
        <trans-unit id="d4ab5e1feb0228f13d0ebd292af1d464d4c79b13" translate="yes" xml:space="preserve">
          <source>When a qualified constant is missing Rails does not look for it in the parent namespaces. But there is a caveat: when a constant is missing, Rails is unable to tell if the trigger was a relative reference or a qualified one.</source>
          <target state="translated">当缺少限定常量时,Rails 不会在父命名空间中查找它。但有一个注意事项:当常量缺失时,Rails 无法判断触发器是相对引用还是限定常量。</target>
        </trans-unit>
        <trans-unit id="27bc79f48b10ec6934d4d228032504fd460f4e90" translate="yes" xml:space="preserve">
          <source>When a release series is no longer supported, it's your own responsibility to deal with bugs and security issues. We may provide backports of the fixes and publish them to git, however there will be no new versions released. If you are not comfortable maintaining your own versions, you should upgrade to a supported version.</source>
          <target state="translated">当一个版本系列不再被支持时,处理错误和安全问题是您自己的责任。我们可能会提供修复的后传,并将其发布到git上,但是不会发布新的版本。如果你不习惯维护自己的版本,你应该升级到支持的版本。</target>
        </trans-unit>
        <trans-unit id="6c50ecc1b47c70aebbcf03234a67c3f0b56c25f2" translate="yes" xml:space="preserve">
          <source>When a request comes to an unauthorized host, the &lt;code&gt;response_app&lt;/code&gt; application will be executed and rendered. If no &lt;code&gt;response_app&lt;/code&gt; is given, a default one will run, which responds with +403 Forbidden+.</source>
          <target state="translated">当请求到达未授权的主机时， &lt;code&gt;response_app&lt;/code&gt; 应用程序将被执行并呈现。如果没有给出 &lt;code&gt;response_app&lt;/code&gt; ，则将运行默认值，它以+403 Forbidden +响应。</target>
        </trans-unit>
        <trans-unit id="82bb35f20851e06f50472b64d213eaad90cc7c48" translate="yes" xml:space="preserve">
          <source>When a request with a content type other than HTML is made, this middleware will attempt to convert error information into the appropriate response type.</source>
          <target state="translated">当请求的内容类型不是HTML时,这个中间件会尝试将错误信息转换为适当的响应类型。</target>
        </trans-unit>
        <trans-unit id="517d76f819bb6ac72268abf44b74a18225441e00" translate="yes" xml:space="preserve">
          <source>When a subscription is initiated the &lt;code&gt;subscribed&lt;/code&gt; callback gets fired and we take that opportunity to say &quot;the current user has indeed appeared&quot;. That appear/disappear API could be backed by Redis, a database, or whatever else.</source>
          <target state="translated">启动 &lt;code&gt;subscribed&lt;/code&gt; 将触发订阅的回调，我们借此机会说&amp;ldquo;当前用户确实出现了&amp;rdquo;。出现/消失的API可以由Redis，数据库或其他任何支持。</target>
        </trans-unit>
        <trans-unit id="46be056b7bb212e4882bc1b3ca519ec092c2235e" translate="yes" xml:space="preserve">
          <source>When a test fails you are presented with the corresponding backtrace. By default Rails filters that backtrace and will only print lines relevant to your application. This eliminates the framework noise and helps to focus on your code. However there are situations when you want to see the full backtrace. Set the &lt;code&gt;-b&lt;/code&gt; (or &lt;code&gt;--backtrace&lt;/code&gt;) argument to enable this behavior:</source>
          <target state="translated">如果测试失败，则会显示相应的回溯。默认情况下，Rails过滤器回溯并仅打印与您的应用程序相关的行。这消除了框架噪音，并有助于将重点放在您的代码上。但是，在某些情况下，您想查看完整的回溯。设置 &lt;code&gt;-b&lt;/code&gt; （或 &lt;code&gt;--backtrace&lt;/code&gt; ）参数以启用此行为：</target>
        </trans-unit>
        <trans-unit id="a8f7b75337c6c90b31a864530ae969168d43e53c" translate="yes" xml:space="preserve">
          <source>When a transaction completes, the &lt;code&gt;after_commit&lt;/code&gt; or &lt;code&gt;after_rollback&lt;/code&gt; callbacks are called for all models created, updated, or destroyed within that transaction. However, if an exception is raised within one of these callbacks, the exception will bubble up and any remaining &lt;code&gt;after_commit&lt;/code&gt; or &lt;code&gt;after_rollback&lt;/code&gt; methods will &lt;em&gt;not&lt;/em&gt; be executed. As such, if your callback code could raise an exception, you'll need to rescue it and handle it within the callback in order to allow other callbacks to run.</source>
          <target state="translated">当事务完成时，将 &lt;code&gt;after_commit&lt;/code&gt; 事务中创建，更新或销毁的所有模型调用after_commit或 &lt;code&gt;after_rollback&lt;/code&gt; 回调。但是，如果在这些回调之一中引发异常，则该异常将冒泡，并且将&lt;em&gt;不&lt;/em&gt;执行任何剩余的 &lt;code&gt;after_commit&lt;/code&gt; 或 &lt;code&gt;after_rollback&lt;/code&gt; 方法。因此，如果您的回调代码可能引发异常，则需要对其进行挽救并在回调中对其进行处理，以允许其他回调运行。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fec11cf7cef455597d0fea69199acdc63584007c" translate="yes" xml:space="preserve">
          <source>When a video's angle is 90 or 270 degrees, its width and height are automatically swapped for convenience.</source>
          <target state="translated">当视频的角度为90度或270度时,其宽度和高度会自动交换,以方便使用。</target>
        </trans-unit>
        <trans-unit id="44e47728d8eed681af01d4ab229a8b1135c4e4de" translate="yes" xml:space="preserve">
          <source>When address is already an association on a Person you can use &lt;code&gt;accepts_nested_attributes_for&lt;/code&gt; to define the writer method for you:</source>
          <target state="translated">如果address已经是一个Person上的关联，则可以使用 &lt;code&gt;accepts_nested_attributes_for&lt;/code&gt; 为您定义writer方法：</target>
        </trans-unit>
        <trans-unit id="3cd2086a1b0cba5d4227cd7ce42c1dffd2edf811" translate="yes" xml:space="preserve">
          <source>When an association accepts nested attributes &lt;code&gt;fields_for&lt;/code&gt; renders its block once for every element of the association. In particular, if a person has no addresses it renders nothing. A common pattern is for the controller to build one or more empty children so that at least one set of fields is shown to the user. The example below would result in 2 sets of address fields being rendered on the new person form.</source>
          <target state="translated">当关联接受嵌套属性时， &lt;code&gt;fields_for&lt;/code&gt; 为关联的每个元素渲染一次其块。特别是，如果一个人没有地址，它什么也不会呈现。控制器的一种常见模式是构建一个或多个空子代，以便向用户显示至少一组字段。下面的示例将导致在新人员表单上呈现2组地址字段。</target>
        </trans-unit>
        <trans-unit id="8c6778ca993e7fb8d310fdba9bef5c6944ce5d24" translate="yes" xml:space="preserve">
          <source>When an engine is created, it may want to use specific classes from an application to provide links between the pieces of the engine and the pieces of the application. In the case of the &lt;code&gt;blorgh&lt;/code&gt; engine, making articles and comments have authors would make a lot of sense.</source>
          <target state="translated">创建引擎时，它可能希望使用应用程序中的特定类来提供引擎各部分与应用程序各部分之间的链接。对于 &lt;code&gt;blorgh&lt;/code&gt; 引擎，使文章和评论具有作者意义将非常有意义。</target>
        </trans-unit>
        <trans-unit id="a531f830fd5d38c431c5b5b6d58bba01c2ebd943" translate="yes" xml:space="preserve">
          <source>When an engine is generated, there is a smaller dummy application created inside it at &lt;code&gt;test/dummy&lt;/code&gt;. This application is used as a mounting point for the engine, to make testing the engine extremely simple. You may extend this application by generating controllers, models, or views from within the directory, and then use those to test your engine.</source>
          <target state="translated">生成引擎时，将在 &lt;code&gt;test/dummy&lt;/code&gt; 内创建一个较小的虚拟应用程序。该应用程序用作发动机的安装点，从而使发动机的测试非常简单。您可以通过在目录内生成控制器，模型或视图，然后使用它们来测试引擎来扩展此应用程序。</target>
        </trans-unit>
        <trans-unit id="d02cb8feda2c7d4d869b434ea0356c2bc384a7c0" translate="yes" xml:space="preserve">
          <source>When an exception occurs which is caught by a &lt;code&gt;rescue_from&lt;/code&gt; directive, the exception object is passed to the handler. The handler can be a method or a &lt;code&gt;Proc&lt;/code&gt; object passed to the &lt;code&gt;:with&lt;/code&gt; option. You can also use a block directly instead of an explicit &lt;code&gt;Proc&lt;/code&gt; object.</source>
          <target state="translated">当发生由 &lt;code&gt;rescue_from&lt;/code&gt; 指令捕获的异常时，该异常对象将传递到处理程序。处理程序可以是传递给 &lt;code&gt;:with&lt;/code&gt; 选项的方法或 &lt;code&gt;Proc&lt;/code&gt; 对象。您也可以直接使用块而不是显式的 &lt;code&gt;Proc&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="27b413cc6bfb42269e4b37a26330397aa974f8d4" translate="yes" xml:space="preserve">
          <source>When an explicit locale has not been set for a request (e.g. via one of the above methods), an application should attempt to infer the desired locale.</source>
          <target state="translated">当一个请求没有设置明确的locale时(例如通过上述方法之一),应用程序应该尝试推断所需的locale。</target>
        </trans-unit>
        <trans-unit id="0f3b923bc9a98ef57e075d022602da002f65e8f7" translate="yes" xml:space="preserve">
          <source>When autoloading is involved that plot has a twist. Let's consider:</source>
          <target state="translated">当涉及到自动装药时,这个情节就有了转折。我们来考虑一下。</target>
        </trans-unit>
        <trans-unit id="95d1211c06a95edfb62d3673bf1d5b11507f616b" translate="yes" xml:space="preserve">
          <source>When building decorators, a common pattern may emerge:</source>
          <target state="translated">在建设装饰公司时,可能会出现一个共同的模式。</target>
        </trans-unit>
        <trans-unit id="7ddc118102a2df45430da56de781f7d1788b340c" translate="yes" xml:space="preserve">
          <source>When called without arguments like this, it creates a form tag which, when submitted, will POST to the current page. For instance, assuming the current page is a home page, the generated HTML will look like this:</source>
          <target state="translated">在没有参数的情况下调用时,它会创建一个表单标签,当提交时,表单标签会POST到当前页面。例如,假设当前页面是一个主页,生成的HTML就会像这样。</target>
        </trans-unit>
        <trans-unit id="7d558b5178024952a4702e0e3a494603a7807cd8" translate="yes" xml:space="preserve">
          <source>When called, this middleware renders an error page. By default if an HTML response is expected it will render static error pages from the &lt;code&gt;/public&lt;/code&gt; directory. For example when this middleware receives a 500 response it will render the template found in &lt;code&gt;/public/500.html&lt;/code&gt;. If an internationalized locale is set, this middleware will attempt to render the template in &lt;code&gt;/public/500.&amp;lt;locale&amp;gt;.html&lt;/code&gt;. If an internationalized template is not found it will fall back on &lt;code&gt;/public/500.html&lt;/code&gt;.</source>
          <target state="translated">调用时，此中间件将显示错误页面。默认情况下，如果期望HTML响应，它将从 &lt;code&gt;/public&lt;/code&gt; 目录呈现静态错误页面。例如，当此中间件收到500响应时，它将呈现在 &lt;code&gt;/public/500.html&lt;/code&gt; 中找到的模板。如果设置了国际化的语言环境，则此中间件将尝试在 &lt;code&gt;/public/500.&amp;lt;locale&amp;gt;.html&lt;/code&gt; 中呈现模板。如果找不到国际化的模板，它将退回到 &lt;code&gt;/public/500.html&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f361d7ff00bda7f2b49159bc5b0ef1a05c5c964d" translate="yes" xml:space="preserve">
          <source>When calling &lt;code&gt;deliver_later&lt;/code&gt; the job will be placed under &lt;code&gt;mailers&lt;/code&gt; queue. Make sure Active Job adapter support it otherwise the job may be silently ignored preventing email delivery. You can change that by specifying &lt;code&gt;config.action_mailer.deliver_later_queue_name&lt;/code&gt; option.</source>
          <target state="translated">当调用 &lt;code&gt;deliver_later&lt;/code&gt; 时，作业将被置于 &lt;code&gt;mailers&lt;/code&gt; 队列下。确保活动作业适配器支持它，否则该作业可能会被忽略，从而阻止电子邮件传递。您可以通过指定 &lt;code&gt;config.action_mailer.deliver_later_queue_name&lt;/code&gt; 选项来更改它。</target>
        </trans-unit>
        <trans-unit id="929b6c40e495358f8b1160edc86328ec93728648" translate="yes" xml:space="preserve">
          <source>When changing Rails versions, it's best to move slowly, one minor version at a time, in order to make good use of the deprecation warnings. Rails version numbers are in the form Major.Minor.Patch. Major and Minor versions are allowed to make changes to the public API, so this may cause errors in your application. Patch versions only include bug fixes, and don't change any public API.</source>
          <target state="translated">在更换Rails版本时,最好是慢慢来,一个小版本一个小版本地走,这样才能很好地利用废弃警告。Rails版本号的形式是Major.Minor.Patch。Major和Minor版本允许对公共API进行修改,所以这可能会导致你的应用程序出现错误。补丁版本只包括bug修复,而不改变任何公共API。</target>
        </trans-unit>
        <trans-unit id="34238df080e6a5cfae780e683e67c205193765f5" translate="yes" xml:space="preserve">
          <source>When clicked, the link background will become red. Here's the problem: what happens when we have lots of JavaScript we want to execute on a click?</source>
          <target state="translated">当点击时,链接背景会变成红色。问题是:当我们有很多JavaScript想要在点击时执行时,会发生什么?</target>
        </trans-unit>
        <trans-unit id="6ef8408a71e03ecbe3aac398eefeee9c64914a20" translate="yes" xml:space="preserve">
          <source>When configuring the &lt;code&gt;test&lt;/code&gt; environment for autoloading you might consider multiple factors.</source>
          <target state="translated">将 &lt;code&gt;test&lt;/code&gt; 环境配置为自动加载时，您可能会考虑多个因素。</target>
        </trans-unit>
        <trans-unit id="b6ae7ca2599adb1f87be08fe0e4e172580497a3d" translate="yes" xml:space="preserve">
          <source>When configuring your Postmark inbound webhook, be sure to check the box labeled &lt;strong&gt;&quot;Include raw email content in JSON payload&quot;&lt;/strong&gt;. Action Mailbox needs the raw email content to work.</source>
          <target state="translated">在配置邮戳入站Webhook时，请确保选中标有&lt;strong&gt;&amp;ldquo;在JSON负载中包括原始电子邮件内容&amp;rdquo;&lt;/strong&gt;的框。操作邮箱需要原始电子邮件内容才能工作。</target>
        </trans-unit>
        <trans-unit id="2c40bf6a467e35380e4edf11154e7773adc3d2ff" translate="yes" xml:space="preserve">
          <source>When configuring your SendGrid Inbound Parse webhook, be sure to check the box labeled &lt;strong&gt;&amp;ldquo;Post the raw, full MIME message.&amp;rdquo;&lt;/strong&gt; Action Mailbox needs the raw MIME message to work.</source>
          <target state="translated">在配置SendGrid入站解析Webhook时，请确保选中标记为&lt;strong&gt;&amp;ldquo;发布原始的完整MIME消息&amp;rdquo;&lt;/strong&gt;的框&lt;strong&gt;。&lt;/strong&gt;操作邮箱需要原始MIME消息才能起作用。</target>
        </trans-unit>
        <trans-unit id="f218c77c4940672ba31dc8ded45b3cc5d8fa4572" translate="yes" xml:space="preserve">
          <source>When creating a new Rails application, you have the option to specify what kind of database and what kind of source code management system your application is going to use. This will save you a few minutes, and certainly many keystrokes.</source>
          <target state="translated">当创建一个新的Rails应用时,你可以选择指定你的应用要使用什么样的数据库和什么样的源代码管理系统。这将为您节省几分钟的时间,当然也会节省许多按键。</target>
        </trans-unit>
        <trans-unit id="e9bae614244da7533a35eb8e4eb7a4f149a69779" translate="yes" xml:space="preserve">
          <source>When dealing with RESTful resources, calls to &lt;code&gt;form_with&lt;/code&gt; can get significantly easier if you rely on &lt;strong&gt;record identification&lt;/strong&gt;. In short, you can just pass the model instance and have Rails figure out model name and the rest:</source>
          <target state="translated">处理RESTful资源时，如果您依赖&lt;strong&gt;记录标识&lt;/strong&gt;，则对 &lt;code&gt;form_with&lt;/code&gt; 的调用会变得非常容易。简而言之，您可以只传递模型实例，让Rails找出模型名称，然后剩下的：&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f9cbf419b397994f77e57affce52747f18aedb28" translate="yes" xml:space="preserve">
          <source>When debug mode is off, Sprockets concatenates and runs the necessary preprocessors on all files. With debug mode turned off the manifest above would generate instead:</source>
          <target state="translated">当调试模式关闭时,Sprockets会对所有文件进行连接并运行必要的预处理程序。当调试模式关闭时,会生成上面的清单。</target>
        </trans-unit>
        <trans-unit id="5e35e7320b44ac9f92b15f8950da01751493dd08" translate="yes" xml:space="preserve">
          <source>When declared inside a class, as above, the callback methods will receive the model object as a parameter. We can now use the callback class in the model:</source>
          <target state="translated">当在类里面声明时,如上所述,回调方法将接收模型对象作为参数。现在我们可以在模型中使用回调类。</target>
        </trans-unit>
        <trans-unit id="0788fdd6c49cccb2a9ec8bd7ea3e83153cf6270f" translate="yes" xml:space="preserve">
          <source>When defining an around callback remember to yield to the block, otherwise it won't be executed:</source>
          <target state="translated">在定义about回调的时候记得要让步给块,否则不会被执行。</target>
        </trans-unit>
        <trans-unit id="cbfb05990ebfffabdad9ac3a12caad63565a0002" translate="yes" xml:space="preserve">
          <source>When doing this, ensure you are not using the &lt;code&gt;require_tree&lt;/code&gt; directive, as that will result in your assets being included more than once.</source>
          <target state="translated">执行此操作时，请确保未使用 &lt;code&gt;require_tree&lt;/code&gt; 指令，因为这将导致资产被多次包含。</target>
        </trans-unit>
        <trans-unit id="54305ed8cd0aa2c64b695c8e2f0d63caa435cc37" translate="yes" xml:space="preserve">
          <source>When duplicate connection information is provided the environment variable will take precedence:</source>
          <target state="translated">当提供重复的连接信息时,将以环境变量为准。</target>
        </trans-unit>
        <trans-unit id="4727f5a8410697bbd8a1f36c9b02433d1ad69c46" translate="yes" xml:space="preserve">
          <source>When enqueuing jobs with the Inline adapter the job will be executed immediately.</source>
          <target state="translated">当使用Inline适配器对作业进行enqueuing时,作业将被立即执行。</target>
        </trans-unit>
        <trans-unit id="a2f96ac519b47600178682ec0e7f8abcbfd3029d" translate="yes" xml:space="preserve">
          <source>When filtering user input file names, &lt;em&gt;don't try to remove malicious parts&lt;/em&gt;. Think of a situation where the web application removes all &quot;../&quot; in a file name and an attacker uses a string such as &quot;....//&quot; - the result will be &quot;../&quot;. It is best to use a permitted list approach, which &lt;em&gt;checks for the validity of a file name with a set of accepted characters&lt;/em&gt;. This is opposed to a restricted list approach which attempts to remove not allowed characters. In case it isn't a valid file name, reject it (or replace not accepted characters), but don't remove them. Here is the file name sanitizer from the &lt;a href=&quot;https://github.com/technoweenie/attachment_fu/tree/master&quot;&gt;attachment_fu plugin&lt;/a&gt;:</source>
          <target state="translated">过滤用户输入文件名时，&lt;em&gt;请勿尝试删除恶意部分&lt;/em&gt;。考虑一下Web应用程序删除文件名中所有&amp;ldquo; ../&amp;rdquo;并且攻击者使用诸如&amp;ldquo; .... //&amp;rdquo;之类的字符串的情况-结果将为&amp;ldquo; ../&amp;rdquo;。最好使用允许列表方法，该方法&lt;em&gt;使用一组接受的字符检查文件名的有效性&lt;/em&gt;。这与尝试删除不允许的字符的受限列表方法相反。如果它不是有效的文件名，请拒绝它（或替换不接受的字符），但不要删除它们。这是&lt;a href=&quot;https://github.com/technoweenie/attachment_fu/tree/master&quot;&gt;attachment_fu插件&lt;/a&gt;的文件名消毒剂：</target>
        </trans-unit>
        <trans-unit id="20a7725639da7c2ab0cf7cc73f24cd5fab4b4075" translate="yes" xml:space="preserve">
          <source>When generating an application or scaffold, an &lt;code&gt;application_system_test_case.rb&lt;/code&gt; file will also be generated containing the base class for system testing. This is where you can change the driver, add Capybara settings, and other configuration for your system tests.</source>
          <target state="translated">生成应用程序或支架时，还将生成一个 &lt;code&gt;application_system_test_case.rb&lt;/code&gt; 文件，其中包含用于系统测试的基类。在这里，您可以更改驱动程序，添加Capybara设置以及其他用于系统测试的配置。</target>
        </trans-unit>
        <trans-unit id="171e2b74c3512a07e35d273bf34823c7229aa24d" translate="yes" xml:space="preserve">
          <source>When given a block, the value for duplicated keys will be determined by the result of invoking the block with the duplicated key, the value in the receiver, and the value in &lt;code&gt;other_hash&lt;/code&gt;. The rules for duplicated keys follow the semantics of indifferent access:</source>
          <target state="translated">当给定一个块时，重复密钥的值将由调用具有重复密钥的块的结果，接收者中的值以及 &lt;code&gt;other_hash&lt;/code&gt; 中的值确定。重复键的规则遵循无差异访问的语义：</target>
        </trans-unit>
        <trans-unit id="fb04eb174c25e8b718537376f3b6f3c9ad9748ca" translate="yes" xml:space="preserve">
          <source>When given an array of keys, the method tries to require each one of them in order. If it succeeds, an array with the respective return values is returned:</source>
          <target state="translated">当给定一个键数组时,该方法尝试按顺序要求其中的每一个键。如果成功,则返回一个包含相应返回值的数组。</target>
        </trans-unit>
        <trans-unit id="31c5028a74e83f5e9fea82c41a646f0c16557e15" translate="yes" xml:space="preserve">
          <source>When including &lt;code&gt;ActiveModel::Model&lt;/code&gt; you get some features like:</source>
          <target state="translated">当包含 &lt;code&gt;ActiveModel::Model&lt;/code&gt; 您将获得一些功能，例如：</target>
        </trans-unit>
        <trans-unit id="c8ef7117cabbadf2c53fb61926df6184d640299d" translate="yes" xml:space="preserve">
          <source>When initializing a new &lt;code&gt;has_one&lt;/code&gt; or &lt;code&gt;belongs_to&lt;/code&gt; association you must use the &lt;code&gt;build_&lt;/code&gt; prefix to build the association, rather than the &lt;code&gt;association.build&lt;/code&gt; method that would be used for &lt;code&gt;has_many&lt;/code&gt; or &lt;code&gt;has_and_belongs_to_many&lt;/code&gt; associations. To create one, use the &lt;code&gt;create_&lt;/code&gt; prefix.</source>
          <target state="translated">当初始化一个新 &lt;code&gt;has_one&lt;/code&gt; 或 &lt;code&gt;belongs_to&lt;/code&gt; 的关联中，你必须使用 &lt;code&gt;build_&lt;/code&gt; 前缀建立关联，而不是 &lt;code&gt;association.build&lt;/code&gt; 将被用于方法 &lt;code&gt;has_many&lt;/code&gt; 或 &lt;code&gt;has_and_belongs_to_many&lt;/code&gt; 协会。要创建一个，请使用 &lt;code&gt;create_&lt;/code&gt; 前缀。</target>
        </trans-unit>
        <trans-unit id="c9cc83fef594a450e9bd45e4b43b2542c9912a67" translate="yes" xml:space="preserve">
          <source>When initializing the cache, you need to specify the addresses for all memcached servers in your cluster. If none are specified, it will assume memcached is running on localhost on the default port, but this is not an ideal setup for larger sites.</source>
          <target state="translated">当初始化缓存时,你需要指定集群中所有memcached服务器的地址。如果没有指定任何地址,它将假设memcached在默认端口的localhost上运行,但这对于大型站点来说不是一个理想的设置。</target>
        </trans-unit>
        <trans-unit id="21153002f1b35f396473c36c4c32f8827a54add3" translate="yes" xml:space="preserve">
          <source>When interpolated into a string, the &lt;code&gt;:to&lt;/code&gt; option should become an expression that evaluates to the object the method is delegated to. Typically a string or symbol. Such an expression is evaluated in the context of the receiver:</source>
          <target state="translated">当插入到一个字符串中时， &lt;code&gt;:to&lt;/code&gt; 选项应该成为一个表达式，该表达式的结果是将方法委派给的对象。通常是字符串或符号。这样的表达式是在接收方的上下文中评估的：</target>
        </trans-unit>
        <trans-unit id="5470f35c45a0b9fbe439c8e7e26e024c76999446" translate="yes" xml:space="preserve">
          <source>When it comes to streaming, exceptions get a bit more complicated. This happens because part of the template was already rendered and streamed to the client, making it impossible to render a whole exception page.</source>
          <target state="translated">当涉及到流式传输时,异常会变得更复杂一些。这是因为部分模板已经渲染并流式传输到客户端,使得无法渲染整个异常页面。</target>
        </trans-unit>
        <trans-unit id="15011c1a35de584879bbf122d408a90c297a652e" translate="yes" xml:space="preserve">
          <source>When it's time to invalidate all fragments, simply change the string constant. Or, progressively roll out the cache invalidation using a computed value:</source>
          <target state="translated">当需要对所有碎片进行无效化时,只需改变字符串常量即可。或者,使用计算值逐步推出缓存无效化。</target>
        </trans-unit>
        <trans-unit id="732b3b920b50dde825e80483861e26dbb9485868" translate="yes" xml:space="preserve">
          <source>When joining tables, nested hashes or keys written in the form 'table_name.column_name' can be used to qualify the table name of a particular condition. For instance:</source>
          <target state="translated">在连接表时,可以使用写成'table_name.column_name'形式的嵌套哈希或键来限定特定条件的表名。比如说</target>
        </trans-unit>
        <trans-unit id="36782d41f0e6909fb0305cf00cb7a5a2510f57ec" translate="yes" xml:space="preserve">
          <source>When localizing a string, it goes through the lookup returned by this method, which is used in &lt;a href=&quot;name#method-i-human&quot;&gt;ActiveModel::Name#human&lt;/a&gt;, &lt;a href=&quot;errors#method-i-full_messages&quot;&gt;ActiveModel::Errors#full_messages&lt;/a&gt; and &lt;a href=&quot;translation#method-i-human_attribute_name&quot;&gt;#human_attribute_name&lt;/a&gt;.</source>
          <target state="translated">本地化字符串时，它将经历此方法返回的查找，该方法用于&lt;a href=&quot;name#method-i-human&quot;&gt;ActiveModel :: Name＃human&lt;/a&gt;，&lt;a href=&quot;errors#method-i-full_messages&quot;&gt;ActiveModel :: Errors＃full_messages&lt;/a&gt;和&lt;a href=&quot;translation#method-i-human_attribute_name&quot;&gt;#human_attribute_name中&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3204df2e49d38ad052e7face8980be4cd4bd55ff" translate="yes" xml:space="preserve">
          <source>When looking at database query output in logs, it may not be immediately clear why multiple database queries are triggered when a single method is called:</source>
          <target state="translated">在查看日志中的数据库查询输出时,可能无法立即清楚为什么在调用一个方法时,会触发多个数据库查询。</target>
        </trans-unit>
        <trans-unit id="f0d62965d358178f31ae12631754e5a5b9986db3" translate="yes" xml:space="preserve">
          <source>When making Date comparisons using methods which honor the user time zone, make sure to use &lt;code&gt;Date.current&lt;/code&gt; and not &lt;code&gt;Date.today&lt;/code&gt;. There are cases where the user time zone might be in the future compared to the system time zone, which &lt;code&gt;Date.today&lt;/code&gt; uses by default. This means &lt;code&gt;Date.today&lt;/code&gt; may equal &lt;code&gt;Date.yesterday&lt;/code&gt;.</source>
          <target state="translated">使用符合用户时区的方法进行日期比较时，请确保使用 &lt;code&gt;Date.current&lt;/code&gt; 而不是 &lt;code&gt;Date.today&lt;/code&gt; 。在某些情况下，与系统时区相比，将来的用户时区可能在将来， &lt;code&gt;Date.today&lt;/code&gt; 默认使用系统时区。这意味着 &lt;code&gt;Date.today&lt;/code&gt; 可以等于 &lt;code&gt;Date.yesterday&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="182fe9f584042629e662549bc62eda6c1306cd4f" translate="yes" xml:space="preserve">
          <source>When making Time comparisons using methods which honor the user time zone, make sure to use &lt;code&gt;Time.current&lt;/code&gt; instead of &lt;code&gt;Time.now&lt;/code&gt;. There are cases where the user time zone might be in the future compared to the system time zone, which &lt;code&gt;Time.now&lt;/code&gt; uses by default. This means &lt;code&gt;Time.now.to_date&lt;/code&gt; may equal &lt;code&gt;Date.yesterday&lt;/code&gt;.</source>
          <target state="translated">使用符合用户时区的方法进行时间比较时，请确保使用 &lt;code&gt;Time.current&lt;/code&gt; 而不是 &lt;code&gt;Time.now&lt;/code&gt; 。在某些情况下，与系统时区相比，将来的用户时区可能在将来， &lt;code&gt;Time.now&lt;/code&gt; 默认使用系统时区。这意味着 &lt;code&gt;Time.now.to_date&lt;/code&gt; 可以等于 &lt;code&gt;Date.yesterday&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4420b2c9d76a662f8aed87346d58567d0040ea5e" translate="yes" xml:space="preserve">
          <source>When multiple conditions define whether or not a callback should happen, an &lt;code&gt;Array&lt;/code&gt; can be used. Moreover, you can apply both &lt;code&gt;:if&lt;/code&gt; and &lt;code&gt;:unless&lt;/code&gt; to the same callback.</source>
          <target state="translated">当多个条件定义是否应进行回调时，可以使用 &lt;code&gt;Array&lt;/code&gt; 。此外，您可以将 &lt;code&gt;:if&lt;/code&gt; 和 &lt;code&gt;:unless&lt;/code&gt; 应用于同一回调。</target>
        </trans-unit>
        <trans-unit id="1b8a610925f0c3b503423af9b066022fca0684aa" translate="yes" xml:space="preserve">
          <source>When name is &lt;code&gt;nil&lt;/code&gt; the href is presented instead</source>
          <target state="translated">名称为 &lt;code&gt;nil&lt;/code&gt; 时,将显示href</target>
        </trans-unit>
        <trans-unit id="e91339d6410a878b5e2d9c46d6318924123dc0c7" translate="yes" xml:space="preserve">
          <source>When naming inputs, Rails uses certain conventions that make it possible to submit parameters with non-scalar values such as arrays or hashes, which will also be accessible in &lt;code&gt;params&lt;/code&gt;. You can read more about them in chapter &lt;a href=&quot;#understanding-parameter-naming-conventions&quot;&gt;Understanding Parameter Naming Conventions&lt;/a&gt; of this guide. For details on the precise usage of these helpers, please refer to the &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionView/Helpers/FormTagHelper.html&quot;&gt;API documentation&lt;/a&gt;.</source>
          <target state="translated">在命名输入时，Rails使用某些约定，使得可以提交具有非标量值的参数，例如数组或哈希值，这些 &lt;code&gt;params&lt;/code&gt; 也可以在params中进行访问。您可以在本指南的&lt;a href=&quot;#understanding-parameter-naming-conventions&quot;&gt;了解参数命名约定&lt;/a&gt;一章中阅读有关它们的更多信息。有关这些助手的确切用法的详细信息，请参阅&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionView/Helpers/FormTagHelper.html&quot;&gt;API文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="27d558318f7fdb9b4dde99a730939dfc2ac49a87" translate="yes" xml:space="preserve">
          <source>When no selection is made for a collection of checkboxes most web browsers will not send any value.</source>
          <target state="translated">当没有对复选框的集合进行选择时,大多数Web浏览器将不会发送任何值。</target>
        </trans-unit>
        <trans-unit id="1ab35f254b9872b97e7346dd7b3e9939210e3177" translate="yes" xml:space="preserve">
          <source>When not passing a block, &lt;code&gt;form_with&lt;/code&gt; just generates an opening form tag.</source>
          <target state="translated">当不传递块时， &lt;code&gt;form_with&lt;/code&gt; 只会生成一个开始表单标签。</target>
        </trans-unit>
        <trans-unit id="4391bc5627801574e1970dfeab4d7b8f8e157900" translate="yes" xml:space="preserve">
          <source>When on a line that only contains whitespaces except for the tag, &lt;code&gt;&amp;lt;% %&amp;gt;&lt;/code&gt; suppresses leading and trailing whitespace, including the trailing newline. &lt;code&gt;&amp;lt;% %&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;%-
-%&amp;gt;&lt;/code&gt; are the same. Note however that &lt;code&gt;&amp;lt;%= %&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;%= -%&amp;gt;&lt;/code&gt; are different: only the latter removes trailing whitespaces.</source>
          <target state="translated">在仅包含除标记之外的空白的行上时， &lt;code&gt;&amp;lt;% %&amp;gt;&lt;/code&gt; 抑制前导和尾随空格，包括尾随换行符。 &lt;code&gt;&amp;lt;% %&amp;gt;&lt;/code&gt; 和 &lt;code&gt;&amp;lt;%- -%&amp;gt;&lt;/code&gt; 相同。但是请注意， &lt;code&gt;&amp;lt;%= %&amp;gt;&lt;/code&gt; 和 &lt;code&gt;&amp;lt;%= -%&amp;gt;&lt;/code&gt; 是不同的：只有后者会删除结尾的空格。</target>
        </trans-unit>
        <trans-unit id="07550e1614de1257d5b75cb073ce9b4e6299fae2" translate="yes" xml:space="preserve">
          <source>When one thread is performing an autoload by evaluating the class definition from the appropriate file, it is important no other thread encounters a reference to the partially-defined constant.</source>
          <target state="translated">当一个线程通过评估适当文件中的类定义来执行自动加载时,重要的是其他线程不会遇到对部分定义常量的引用。</target>
        </trans-unit>
        <trans-unit id="17e6a6b3c6f808c0039f14caf87b36d411c2c169" translate="yes" xml:space="preserve">
          <source>When one types a Rails command, &lt;code&gt;invoke&lt;/code&gt; tries to lookup a command for the given namespace and executes the command if found.</source>
          <target state="translated">当键入Rails命令时， &lt;code&gt;invoke&lt;/code&gt; 会尝试查找给定名称空间的命令并执行找到的命令。</target>
        </trans-unit>
        <trans-unit id="cf742f090390a0f02b0ce9ba50fcd9df17f41dbd" translate="yes" xml:space="preserve">
          <source>When our views change, they should bubble up into HTTP cache freshness and bust browser caches. So the template digest for the current action is automatically included in the ETag.</source>
          <target state="translated">当我们的视图发生变化时,应该会冒出HTTP缓存的新鲜感,破除浏览器缓存。所以当前动作的模板摘要会自动包含在ETag中。</target>
        </trans-unit>
        <trans-unit id="4d6cc4ebab8cbea8e9bec435029b0cc80c22167e" translate="yes" xml:space="preserve">
          <source>When parallelizing tests, Active Record automatically handles creating a database and loading the schema into the database for each process. The databases will be suffixed with the number corresponding to the worker. For example, if you have 2 workers the tests will create &lt;code&gt;test-database-0&lt;/code&gt; and &lt;code&gt;test-database-1&lt;/code&gt; respectively.</source>
          <target state="translated">在并行化测试时，Active Record会自动处理创建数据库并将每个过程的架构加载到数据库中的过程。数据库后缀有与工作人员相对应的编号。例如，如果您有2名工作人员，则测试将分别创建 &lt;code&gt;test-database-0&lt;/code&gt; 和 &lt;code&gt;test-database-1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="386e54a11d7894ceb241faf51dd51687c5eddd76" translate="yes" xml:space="preserve">
          <source>When parsing POSTed data, Rails will take into account the special &lt;code&gt;_method&lt;/code&gt; parameter and act as if the HTTP method was the one specified inside it (&quot;PATCH&quot; in this example).</source>
          <target state="translated">解析POST数据时，Rails将考虑特殊的 &lt;code&gt;_method&lt;/code&gt; 参数，并充当HTTP方法是其中指定的方法（在此示例中为&amp;ldquo; PATCH&amp;rdquo;）。</target>
        </trans-unit>
        <trans-unit id="6ccab1ce91695d166bf7b6ebf2be12918d421aa7" translate="yes" xml:space="preserve">
          <source>When passed a single key, if it exists and its associated value is either present or the singleton &lt;code&gt;false&lt;/code&gt;, returns said value:</source>
          <target state="translated">传递单个键时，如果它存在并且其关联值存在或单例为 &lt;code&gt;false&lt;/code&gt; ，则返回所述值：</target>
        </trans-unit>
        <trans-unit id="42ecdce598e1a1b517ab03063f52f17adaf8d02d" translate="yes" xml:space="preserve">
          <source>When passed a symbol or a name of a method, returns an array of errors for the method.</source>
          <target state="translated">当传递一个符号或方法名时,返回该方法的错误数组。</target>
        </trans-unit>
        <trans-unit id="8cc70913884840c6eaf84f856d5e8338c613a836" translate="yes" xml:space="preserve">
          <source>When passing a record or a collection, you can still set the public header:</source>
          <target state="translated">当传递一条记录或一个集合时,你仍然可以设置公共头。</target>
        </trans-unit>
        <trans-unit id="a61def479b1ce6035bbef76e52b0c928dda28638" translate="yes" xml:space="preserve">
          <source>When passing paths, the &amp;ldquo;.js&amp;rdquo; extension is optional. If you do not want &amp;ldquo;.js&amp;rdquo; appended to the path &lt;code&gt;extname: false&lt;/code&gt; can be set on the options.</source>
          <target state="translated">传递路径时，&amp;ldquo;。js&amp;rdquo;扩展名是可选的。如果您不希望在路径 &lt;code&gt;extname: false&lt;/code&gt; 后面附加&amp;ldquo; .js&amp;rdquo; ：可以在选项上设置false。</target>
        </trans-unit>
        <trans-unit id="78fcffbe94f8eacc7f1b3b0a8df898345f4e48ec" translate="yes" xml:space="preserve">
          <source>When performing requests, we will have &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionDispatch/Integration/RequestHelpers.html&quot;&gt;&lt;code&gt;ActionDispatch::Integration::RequestHelpers&lt;/code&gt;&lt;/a&gt; available for our use.</source>
          <target state="translated">执行请求时，我们将提供&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionDispatch/Integration/RequestHelpers.html&quot;&gt; &lt;code&gt;ActionDispatch::Integration::RequestHelpers&lt;/code&gt; &lt;/a&gt;供我们使用。</target>
        </trans-unit>
        <trans-unit id="67b89614790b85e86b08b28c635a1a044a407e78" translate="yes" xml:space="preserve">
          <source>When possible, provide a content type as well. Active Storage attempts to determine a file&amp;rsquo;s content type from its data. It falls back to the content type you provide if it can&amp;rsquo;t do that.</source>
          <target state="translated">尽可能提供一种内容类型。Active Storage尝试根据其数据确定文件的内容类型。如果无法做到，它会退回到您提供的内容类型。</target>
        </trans-unit>
        <trans-unit id="c96208501864eca9c09cb8cc6ccbece8bff38c2f" translate="yes" xml:space="preserve">
          <source>When projects is already an association on Person you can use &lt;code&gt;accepts_nested_attributes_for&lt;/code&gt; to define the writer method for you:</source>
          <target state="translated">如果项目已经是Person上的关联，则可以使用 &lt;code&gt;accepts_nested_attributes_for&lt;/code&gt; 为您定义writer方法：</target>
        </trans-unit>
        <trans-unit id="ba6fa77835b3dec6c4f379bfa15a6defc7001262" translate="yes" xml:space="preserve">
          <source>When queries are executed on this model, the SQL query will now look something like this:</source>
          <target state="translated">当在这个模型上执行查询时,现在的SQL查询将看起来像这样。</target>
        </trans-unit>
        <trans-unit id="d60f4c8aad35e00e7d1642bf6b8db6e25bc32f09" translate="yes" xml:space="preserve">
          <source>When rendering a collection of objects that each use the same partial, a &lt;code&gt;:cached&lt;/code&gt; option can be passed.</source>
          <target state="translated">呈现每个都使用相同部分的对象的集合时，可以传递 &lt;code&gt;:cached&lt;/code&gt; 选项。</target>
        </trans-unit>
        <trans-unit id="a0fa4aa98c1b62b43d95bf731af559fa0b68eaa9" translate="yes" xml:space="preserve">
          <source>When rendering a different template than the default controller/action style, you can indicate which digest to include in the ETag:</source>
          <target state="translated">当渲染与默认控制器/动作风格不同的模板时,你可以指定在ETag中包含哪个摘要。</target>
        </trans-unit>
        <trans-unit id="95fe1139da26016e8da0c826a650092ec79e4cf8" translate="yes" xml:space="preserve">
          <source>When rendering a response, the controller needs to resolve where the different views are located. By default it only looks inside the &lt;code&gt;app/views&lt;/code&gt; directory.</source>
          <target state="translated">呈现响应时，控制器需要解析不同视图的位置。默认情况下，它仅在 &lt;code&gt;app/views&lt;/code&gt; 目录中显示。</target>
        </trans-unit>
        <trans-unit id="cf5735336e93556233fa4334342425e5e525f1e1" translate="yes" xml:space="preserve">
          <source>When rendering collections it is also possible to use the &lt;code&gt;:layout&lt;/code&gt; option:</source>
          <target state="translated">渲染集合时，也可以使用 &lt;code&gt;:layout&lt;/code&gt; 选项：</target>
        </trans-unit>
        <trans-unit id="a62a05f7e0ee3863dc973fd63fcca4cad2ab7fd6" translate="yes" xml:space="preserve">
          <source>When running in the production environment, all &lt;code&gt;ActiveRecord::RecordNotFound&lt;/code&gt; errors render the 404 error page. Unless you need a custom behavior you don't need to handle this.</source>
          <target state="translated">在生产环境中运行时，所有 &lt;code&gt;ActiveRecord::RecordNotFound&lt;/code&gt; 错误都会呈现404错误页面。除非您需要自定义行为，否则不需要处理。</target>
        </trans-unit>
        <trans-unit id="791c45da2f328ee388ff3d71e5f4389e38b51d55" translate="yes" xml:space="preserve">
          <source>When running multi-user, multi-account applications, it's often useful to be able to filter the logs using some custom rules. &lt;code&gt;TaggedLogging&lt;/code&gt; in Active Support helps you do exactly that by stamping log lines with subdomains, request ids, and anything else to aid debugging such applications.</source>
          <target state="translated">在运行多用户，多帐户应用程序时，使用一些自定义规则过滤日志通常很有用。Active Support中的 &lt;code&gt;TaggedLogging&lt;/code&gt; 通过在日志行中标记子域，请求ID以及其他任何有助于调试此类应用程序的标记，可以帮助您准确地做到这一点。</target>
        </trans-unit>
        <trans-unit id="aae8fecbf54922b5571bcbb8179a8367f934650c" translate="yes" xml:space="preserve">
          <source>When serializing job arguments, &lt;code&gt;Time&lt;/code&gt;, &lt;code&gt;DateTime&lt;/code&gt;, and &lt;code&gt;ActiveSupport::TimeWithZone&lt;/code&gt; lose microsecond precision. This means comparing deserialized time with actual time doesn't always work. To compensate for the loss of precision, &lt;code&gt;assert_enqueued_with&lt;/code&gt; and &lt;code&gt;assert_performed_with&lt;/code&gt; will remove microseconds from time objects in argument assertions.</source>
          <target state="translated">序列化作业参数时， &lt;code&gt;Time&lt;/code&gt; ， &lt;code&gt;DateTime&lt;/code&gt; 和 &lt;code&gt;ActiveSupport::TimeWithZone&lt;/code&gt; 失去微秒级的精度。这意味着将反序列化时间与实际时间进行比较并不总是可行。为了补偿精度的损失， &lt;code&gt;assert_enqueued_with&lt;/code&gt; 和 &lt;code&gt;assert_performed_with&lt;/code&gt; 将从参数断言中的时间对象中删除微秒。</target>
        </trans-unit>
        <trans-unit id="bf299144eb46d9647384489cddda7b32dc47767e" translate="yes" xml:space="preserve">
          <source>When set to &lt;code&gt;true&lt;/code&gt;, the association will also have its presence validated. This will validate the association itself, not the id. You can use &lt;code&gt;:inverse_of&lt;/code&gt; to avoid an extra query during validation.</source>
          <target state="translated">设置为 &lt;code&gt;true&lt;/code&gt; 时，关联也将得到验证。这将验证关联本身，而不是ID。您可以使用 &lt;code&gt;:inverse_of&lt;/code&gt; 避免在验证期间进行额外的查询。</target>
        </trans-unit>
        <trans-unit id="20846b814204321ae2eed85dfed04e95603da159" translate="yes" xml:space="preserve">
          <source>When set to &lt;code&gt;true&lt;/code&gt;, the association will also have its presence validated. This will validate the association itself, not the id. You can use &lt;code&gt;:inverse_of&lt;/code&gt; to avoid an extra query during validation. NOTE: &lt;code&gt;required&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt; by default and is deprecated. If you don't want to have association presence validated, use &lt;code&gt;optional: true&lt;/code&gt;.</source>
          <target state="translated">设置为 &lt;code&gt;true&lt;/code&gt; 时，关联也将得到验证。这将验证关联本身，而不是ID。您可以使用 &lt;code&gt;:inverse_of&lt;/code&gt; 避免在验证期间进行额外的查询。注意： &lt;code&gt;required&lt;/code&gt; 默认情况下设置为 &lt;code&gt;true&lt;/code&gt; ，不建议使用。如果您不想验证关联状态，请使用 &lt;code&gt;optional: true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bb83dd910637372d85f8d30b1df8845b034c1a0d" translate="yes" xml:space="preserve">
          <source>When set to &lt;code&gt;true&lt;/code&gt;, the association will not have its presence validated.</source>
          <target state="translated">设置为 &lt;code&gt;true&lt;/code&gt; 时，将不验证关联的存在。</target>
        </trans-unit>
        <trans-unit id="cecab59522ddd49c5b6ea86ba4586a86ac20cc67" translate="yes" xml:space="preserve">
          <source>When set to &lt;code&gt;true&lt;/code&gt;, validates new objects added to association when saving the parent object. &lt;code&gt;false&lt;/code&gt; by default. If you want to ensure associated objects are revalidated on every update, use &lt;code&gt;validates_associated&lt;/code&gt;.</source>
          <target state="translated">设置为 &lt;code&gt;true&lt;/code&gt; 时，将在保存父对象时验证添加到关联的新对象。默认为 &lt;code&gt;false&lt;/code&gt; 。如果要确保在每次更新时重新验证关联的对象，请使用 &lt;code&gt;validates_associated&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b2f7a1e9af1a9fd24d65e6a24424b0c810c04a35" translate="yes" xml:space="preserve">
          <source>When set to &lt;code&gt;true&lt;/code&gt;, validates new objects added to association when saving the parent object. &lt;code&gt;true&lt;/code&gt; by default. If you want to ensure associated objects are revalidated on every update, use &lt;code&gt;validates_associated&lt;/code&gt;.</source>
          <target state="translated">设置为 &lt;code&gt;true&lt;/code&gt; 时，将在保存父对象时验证添加到关联的新对象。默认为 &lt;code&gt;true&lt;/code&gt; 。如果要确保在每次更新时重新验证关联的对象，请使用 &lt;code&gt;validates_associated&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="285a271475735e10d3693520ecd463cdb0088977" translate="yes" xml:space="preserve">
          <source>When something is logged, it's printed into the corresponding log if the log level of the message is equal to or higher than the configured log level. If you want to know the current log level, you can call the &lt;code&gt;Rails.logger.level&lt;/code&gt; method.</source>
          <target state="translated">记录某些内容后，如果消息的日志级别等于或高于配置的日志级别，则会将其打印到相应的日志中。如果您想知道当前的日志级别，可以调用 &lt;code&gt;Rails.logger.level&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="fa7aeb0b5c02ad6002367e96937d55c193718a81" translate="yes" xml:space="preserve">
          <source>When static assets are deployed with each new release of code, the mtime (time of last modification) of &lt;em&gt;all&lt;/em&gt; these files changes, forcing all remote clients to fetch them again, even when the content of those assets has not changed.</source>
          <target state="translated">在每个新版本的代码中部署静态资产时，&lt;em&gt;所有&lt;/em&gt;这些文件的mtime（上次修改时间）&lt;em&gt;都会&lt;/em&gt;更改，从而即使所有资产的内容未更改，也迫使所有远程客户端再次获取它们。</target>
        </trans-unit>
        <trans-unit id="a709f6cd6f87ce4425874e809c66acd8a9e2f6b5" translate="yes" xml:space="preserve">
          <source>When streaming, rendering happens top-down instead of inside-out. Rails starts with the layout, and the template is rendered later, when its &lt;code&gt;yield&lt;/code&gt; is reached.</source>
          <target state="translated">流式传输时，渲染从上到下而不是由内而外进行。Rails从布局开始，然后在达到其 &lt;code&gt;yield&lt;/code&gt; 时渲染模板。</target>
        </trans-unit>
        <trans-unit id="a713e9eefe2daa9c26308c8814d6c2565dbf470e" translate="yes" xml:space="preserve">
          <source>When streaming, the HTTP headers are sent to the client right before it renders the first line. This means that, modifying headers, cookies, session or flash after the template starts rendering will not propagate to the client.</source>
          <target state="translated">当流式传输时,HTTP头文件在客户端渲染第一行之前就会被发送到客户端。这意味着,在模板开始渲染后修改头文件、cookies、session或flash将不会传播到客户端。</target>
        </trans-unit>
        <trans-unit id="15e603a50cb2fa61234ad23bb2ebaf34ced3a456" translate="yes" xml:space="preserve">
          <source>When tests are run in your application, the default order is now &lt;code&gt;:random&lt;/code&gt; instead of &lt;code&gt;:sorted&lt;/code&gt;. Use the following config option to set it back to &lt;code&gt;:sorted&lt;/code&gt;.</source>
          <target state="translated">当在您的应用程序中运行测试时，默认顺序现在是 &lt;code&gt;:random&lt;/code&gt; 而不是 &lt;code&gt;:sorted&lt;/code&gt; 。使用以下配置选项将其设置回 &lt;code&gt;:sorted&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a4c9df729de86ddceb1b4f87751c8b46a6a9eb54" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;mail&lt;/code&gt; method will be triggered, it will send a multipart email with an attachment, properly nested with the top level being &lt;code&gt;multipart/mixed&lt;/code&gt; and the first part being a &lt;code&gt;multipart/alternative&lt;/code&gt; containing the plain text and HTML email messages.</source>
          <target state="translated">当 &lt;code&gt;mail&lt;/code&gt; 的方法将被触发，它将发送一个多部分电子邮件中的附件，正确嵌套与顶部电平是 &lt;code&gt;multipart/mixed&lt;/code&gt; 和第一部分是一个 &lt;code&gt;multipart/alternative&lt;/code&gt; 包含纯文本和HTML电子邮件消息。</target>
        </trans-unit>
        <trans-unit id="2eb9453ad50f7b7d4d1fb54ec22d8a449c593f67" translate="yes" xml:space="preserve">
          <source>When the Asset Pipeline is enabled, you can pass the name of your manifest as source, and include other JavaScript or CoffeeScript files inside the manifest.</source>
          <target state="translated">当启用Asset Pipeline时,您可以将您的manifest名称作为源文件传递,并在manifest中包含其他JavaScript或CoffeeScript文件。</target>
        </trans-unit>
        <trans-unit id="1b970a97d04d63419556c66bdfcc532b2efd48b2" translate="yes" xml:space="preserve">
          <source>When the application is asked to render the view for &lt;code&gt;Blorgh::ArticlesController&lt;/code&gt;'s index action, it will first look for the path &lt;code&gt;app/views/blorgh/articles/index.html.erb&lt;/code&gt; within the application. If it cannot find it, it will look inside the engine.</source>
          <target state="translated">当要求应用程序呈现 &lt;code&gt;Blorgh::ArticlesController&lt;/code&gt; 的index操作的视图时，它将首先在 &lt;code&gt;app/views/blorgh/articles/index.html.erb&lt;/code&gt; 查找路径app / views / blorgh / articles / index.html.erb。如果找不到，它将查看引擎内部。</target>
        </trans-unit>
        <trans-unit id="db4799df64ca1dcd4c792d93182586efacab4966" translate="yes" xml:space="preserve">
          <source>When the application runs, code is reloaded when something relevant to this logic changes. In order to do that, Rails monitors a number of things:</source>
          <target state="translated">当应用程序运行时,当与此逻辑相关的东西发生变化时,代码会被重新加载。为了做到这一点,Rails会监控一些东西。</target>
        </trans-unit>
        <trans-unit id="260fc480713cfdb067c87451b2b5eda43352c152" translate="yes" xml:space="preserve">
          <source>When the argument is a module it will be included directly in the template class.</source>
          <target state="translated">当参数是一个模块时,它将直接包含在模板类中。</target>
        </trans-unit>
        <trans-unit id="5482e88f34e07ab2326f172a94af14b0cd057adb" translate="yes" xml:space="preserve">
          <source>When the argument is a string or symbol, the method will provide the &amp;ldquo;_helper&amp;rdquo; suffix, require the file and include the module in the template class. The second form illustrates how to include custom helpers when working with namespaced controllers, or other cases where the file containing the helper definition is not in one of Rails' standard load paths:</source>
          <target state="translated">当参数是字符串或符号时，该方法将提供&amp;ldquo; _helper&amp;rdquo;后缀，需要文件并将模块包含在模板类中。第二种形式说明了在使用命名空间的控制器时或在其他情况下（其中包含帮助程序定义的文件不在Rails的标准加载路径之一中），如何包括自定义帮助程序：</target>
        </trans-unit>
        <trans-unit id="378a2916b068d742add2441701916dcb54b38163" translate="yes" xml:space="preserve">
          <source>When the browser hits the variant URL, Active Storage will lazily transform the original blob into the specified format and redirect to its new service location.</source>
          <target state="translated">当浏览器点击变体URL时,Active Storage会将原来的blob懒惰地转换为指定的格式,并重定向到其新的服务位置。</target>
        </trans-unit>
        <trans-unit id="676e4bdc78a617bf7aa4548f630661440ce29563" translate="yes" xml:space="preserve">
          <source>When the built-in validation helpers are not enough for your needs, you can write your own validators or validation methods as you prefer.</source>
          <target state="translated">当内置的验证助手不能满足你的需求时,你可以根据自己的喜好编写自己的验证器或验证方法。</target>
        </trans-unit>
        <trans-unit id="a2837507b9624d59f21336f5201fef362c53c6c2" translate="yes" xml:space="preserve">
          <source>When the consumer is subscribed to a channel, they act as a subscriber. The connection between the subscriber and the channel is, surprise-surprise, called a subscription. A consumer can act as a subscriber to a given channel any number of times. For example, a consumer could subscribe to multiple chat rooms at the same time. (And remember that a physical user may have multiple consumers, one per tab/device open to your connection).</source>
          <target state="translated">当消费者订阅了一个频道时,他们就充当了一个订阅者。订阅者和频道之间的联系,出人意料地称为订阅。一个消费者可以任意多次充当某个频道的订阅者。例如,一个消费者可以同时订阅多个聊天室。请记住,一个物理用户可能有多个消费者,每个标签/设备打开你的连接都有一个)。</target>
        </trans-unit>
        <trans-unit id="08c1f080fa868d0dc65a3e92b05e644521a7a8f2" translate="yes" xml:space="preserve">
          <source>When the database catches such a duplicate insertion, &lt;a href=&quot;../persistence#method-i-save&quot;&gt;ActiveRecord::Base#save&lt;/a&gt; will raise an &lt;a href=&quot;../statementinvalid&quot;&gt;ActiveRecord::StatementInvalid&lt;/a&gt; exception. You can either choose to let this error propagate (which will result in the default Rails exception page being shown), or you can catch it and restart the transaction (e.g. by telling the user that the title already exists, and asking them to re-enter the title). This technique is also known as &lt;a href=&quot;https://en.wikipedia.org/wiki/Optimistic_concurrency_control&quot;&gt;optimistic concurrency control&lt;/a&gt;.</source>
          <target state="translated">当数据库捕获到这样的重复插入时，&lt;a href=&quot;../persistence#method-i-save&quot;&gt;ActiveRecord :: Base＃save&lt;/a&gt;将引发&lt;a href=&quot;../statementinvalid&quot;&gt;ActiveRecord :: StatementInvalid&lt;/a&gt;异常。您可以选择传播此错误（这将导致显示默认的Rails异常页面），也可以捕获该错误并重新启动事务（例如，通过告诉用户标题已经存在，并要求他们重新执行该操作）。输入标题）。此技术也称为&lt;a href=&quot;https://en.wikipedia.org/wiki/Optimistic_concurrency_control&quot;&gt;乐观并发控制&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c3d10d0b67944606bbf84d84657fd8833d52fa75" translate="yes" xml:space="preserve">
          <source>When the entirety of &lt;code&gt;ActiveRecord::Base&lt;/code&gt; has been evaluated then &lt;code&gt;run_load_hooks&lt;/code&gt; is invoked. The very last line of &lt;code&gt;ActiveRecord::Base&lt;/code&gt; is:</source>
          <target state="translated">当整个 &lt;code&gt;ActiveRecord::Base&lt;/code&gt; 都经过评估后，将调用 &lt;code&gt;run_load_hooks&lt;/code&gt; 。 &lt;code&gt;ActiveRecord::Base&lt;/code&gt; 最后一行是：</target>
        </trans-unit>
        <trans-unit id="422630819249f956534b779adb6f4307fb00599d" translate="yes" xml:space="preserve">
          <source>When the gem is ready to be shared as a formal release, it can be published to &lt;a href=&quot;https://rubygems.org&quot;&gt;RubyGems&lt;/a&gt;. For more information about publishing gems to RubyGems, see: &lt;a href=&quot;https://guides.rubygems.org/publishing&quot;&gt;Publishing your gem&lt;/a&gt;.</source>
          <target state="translated">当gem准备好作为正式版本共享时，可以将其发布到&lt;a href=&quot;https://rubygems.org&quot;&gt;RubyGems&lt;/a&gt;。有关&lt;a href=&quot;https://guides.rubygems.org/publishing&quot;&gt;将gem&lt;/a&gt;发布到RubyGems的更多信息，请参见：发布gem。</target>
        </trans-unit>
        <trans-unit id="ca8e8098061fe7102515b4e24f13a7b3f1e6e76e" translate="yes" xml:space="preserve">
          <source>When the given key starts with a period, it will be scoped by the current controller and action. So if you call &lt;code&gt;translate(&quot;.foo&quot;)&lt;/code&gt; from &lt;code&gt;PeopleController#index&lt;/code&gt;, it will convert the call to &lt;code&gt;I18n.translate(&quot;people.index.foo&quot;)&lt;/code&gt;. This makes it less repetitive to translate many keys within the same controller / action and gives you a simple framework for scoping them consistently.</source>
          <target state="translated">当给定键以句点开头时，它将由当前控制器和操作确定范围。因此，如果您从 &lt;code&gt;PeopleController#index&lt;/code&gt; 调用 &lt;code&gt;translate(&quot;.foo&quot;)&lt;/code&gt; ，它将把调用转换为 &lt;code&gt;I18n.translate(&quot;people.index.foo&quot;)&lt;/code&gt; 。这使得在同一控制器/动作内转换许多键的重复性降低，并为您提供了一个简单的框架来一致地对其范围进行界定。</target>
        </trans-unit>
        <trans-unit id="ea259506fa511d510d5f7fa7670a54218a8c79d5" translate="yes" xml:space="preserve">
          <source>When the last argument in a method call is a hash, except perhaps for a &lt;code&gt;&amp;amp;block&lt;/code&gt; argument, Ruby allows you to omit the brackets:</source>
          <target state="translated">当方法调用中的最后一个参数是哈希（可能是 &lt;code&gt;&amp;amp;block&lt;/code&gt; 参数除外）时，Ruby允许您省略括号：</target>
        </trans-unit>
        <trans-unit id="12545d7515c6d63a5db9182d71904c4e4fab09ca" translate="yes" xml:space="preserve">
          <source>When the last parameter is a hash you can add HTML attributes using that parameter.</source>
          <target state="translated">当最后一个参数是哈希时,你可以使用该参数添加HTML属性。</target>
        </trans-unit>
        <trans-unit id="bf6007b2e68be61ceb0427f05c55bafd6c256da1" translate="yes" xml:space="preserve">
          <source>When the last parameter is a hash you can add HTML attributes using that parameter. The following options are supported:</source>
          <target state="translated">当最后一个参数是哈希值时,你可以使用该参数添加HTML属性。支持以下选项。</target>
        </trans-unit>
        <trans-unit id="2b41f1be1c7087182da7de749c694b9cfa2ecc07" translate="yes" xml:space="preserve">
          <source>When the object belonging to the current scope has a nested attribute writer for a certain attribute, &lt;a href=&quot;formbuilder#method-i-fields_for&quot;&gt;#fields_for&lt;/a&gt; will yield a new scope for that attribute. This allows you to create forms that set or change the attributes of a parent object and its associations in one go.</source>
          <target state="translated">当属于当前作用域的对象具有某个属性的嵌套属性&lt;a href=&quot;formbuilder#method-i-fields_for&quot;&gt;编写器&lt;/a&gt;时，＃fields_for将为该属性产生一个新的作用域。这使您可以创建一次设置或更改父对象及其关联属性的表单。</target>
        </trans-unit>
        <trans-unit id="43b4d4f68f35067a68486f6156453dd0dd1c156c" translate="yes" xml:space="preserve">
          <source>When the object belonging to the current scope has a nested attribute writer for a certain attribute, &lt;a href=&quot;formhelper#method-i-fields_for&quot;&gt;#fields_for&lt;/a&gt; will yield a new scope for that attribute. This allows you to create forms that set or change the attributes of a parent object and its associations in one go.</source>
          <target state="translated">当属于当前作用域的对象具有某个属性的嵌套属性&lt;a href=&quot;formhelper#method-i-fields_for&quot;&gt;编写器&lt;/a&gt;时，＃fields_for将为该属性产生一个新的作用域。这使您可以创建一次设置或更改父对象及其关联属性的表单。</target>
        </trans-unit>
        <trans-unit id="9b6f50abd27ef5e05e0d2d41e13070af1e3c3e01" translate="yes" xml:space="preserve">
          <source>When the record is created, a check is performed to make sure that no record exists in the database with the given value for the specified attribute (that maps to a column). When the record is updated, the same check is made but disregarding the record itself.</source>
          <target state="translated">当创建记录时,会进行检查,以确保数据库中不存在指定属性(映射到列)的给定值的记录。当更新记录时,也会进行同样的检查,但不考虑记录本身。</target>
        </trans-unit>
        <trans-unit id="4fdd5dbf88da212d54d7996a4200b2e95741e792" translate="yes" xml:space="preserve">
          <source>When the request is sent.</source>
          <target state="translated">当请求发出后。</target>
        </trans-unit>
        <trans-unit id="62f219c0f8398de2e626fa1f93eb10f510907641" translate="yes" xml:space="preserve">
          <source>When the request is stopped.</source>
          <target state="translated">当请求被停止时。</target>
        </trans-unit>
        <trans-unit id="63f62d63a6f59689b6b6f4791fccac92fd89e087" translate="yes" xml:space="preserve">
          <source>When the schema format is set to &lt;code&gt;:sql&lt;/code&gt;, the database structure will be dumped using a tool specific to the database into &lt;code&gt;db/structure.sql&lt;/code&gt;. For example, for PostgreSQL, the &lt;code&gt;pg_dump&lt;/code&gt; utility is used. For MySQL and MariaDB, this file will contain the output of &lt;code&gt;SHOW CREATE TABLE&lt;/code&gt; for the various tables.</source>
          <target state="translated">将模式格式设置为 &lt;code&gt;:sql&lt;/code&gt; 时，将使用特定于数据库的工具将数据库结构转储到 &lt;code&gt;db/structure.sql&lt;/code&gt; 中。例如，对于PostgreSQL，使用 &lt;code&gt;pg_dump&lt;/code&gt; 实用程序。对于MySQL和MariaDB，此文件将包含各个表的 &lt;code&gt;SHOW CREATE TABLE&lt;/code&gt; 的输出。</target>
        </trans-unit>
        <trans-unit id="a30507125724fbe0dca731711306a19afc5738c4" translate="yes" xml:space="preserve">
          <source>When this form is submitted, it is going to attempt to perform a &lt;code&gt;POST&lt;/code&gt; request to a route of &lt;code&gt;/articles/:article_id/comments&lt;/code&gt; within the engine. This route doesn't exist at the moment, but can be created by changing the &lt;code&gt;resources :articles&lt;/code&gt; line inside &lt;code&gt;config/routes.rb&lt;/code&gt; into these lines:</source>
          <target state="translated">提交此表单后，它将尝试对引擎内的 &lt;code&gt;/articles/:article_id/comments&lt;/code&gt; 路由执行 &lt;code&gt;POST&lt;/code&gt; 请求。该路由目前尚不存在，但是可以通过将 &lt;code&gt;config/routes.rb&lt;/code&gt; 中的 &lt;code&gt;resources :articles&lt;/code&gt; 行更改为以下几行来创建：</target>
        </trans-unit>
        <trans-unit id="8527fa37b89b52967c21e362867b58fb687fe771" translate="yes" xml:space="preserve">
          <source>When this form is submitted, the value of &lt;code&gt;params[:client]&lt;/code&gt; will be &lt;code&gt;{ &quot;name&quot; =&amp;gt; &quot;Acme&quot;, &quot;phone&quot; =&amp;gt; &quot;12345&quot;, &quot;address&quot; =&amp;gt; { &quot;postcode&quot; =&amp;gt; &quot;12345&quot;, &quot;city&quot; =&amp;gt; &quot;Carrot City&quot; } }&lt;/code&gt;. Note the nested hash in &lt;code&gt;params[:client][:address]&lt;/code&gt;.</source>
          <target state="translated">提交此表单后， &lt;code&gt;params[:client]&lt;/code&gt; 的值将为 &lt;code&gt;{ &quot;name&quot; =&amp;gt; &quot;Acme&quot;, &quot;phone&quot; =&amp;gt; &quot;12345&quot;, &quot;address&quot; =&amp;gt; { &quot;postcode&quot; =&amp;gt; &quot;12345&quot;, &quot;city&quot; =&amp;gt; &quot;Carrot City&quot; } }&lt;/code&gt; 。注意 &lt;code&gt;params[:client][:address]&lt;/code&gt; 的嵌套哈希。</target>
        </trans-unit>
        <trans-unit id="713fdaa616285532f53ce5f52f4c42a15742e3f3" translate="yes" xml:space="preserve">
          <source>When this is passed to &lt;code&gt;Person.new&lt;/code&gt; (or &lt;code&gt;update&lt;/code&gt;), Active Record spots that these parameters should all be used to construct the &lt;code&gt;birth_date&lt;/code&gt; attribute and uses the suffixed information to determine in which order it should pass these parameters to functions such as &lt;code&gt;Date.civil&lt;/code&gt;.</source>
          <target state="translated">当将其传递给 &lt;code&gt;Person.new&lt;/code&gt; （或 &lt;code&gt;update&lt;/code&gt; ）时，Active Record会发现所有这些参数都应用于构造 &lt;code&gt;birth_date&lt;/code&gt; 属性，并使用后缀信息来确定将这些参数传递给 &lt;code&gt;Date.civil&lt;/code&gt; 等函数的顺序。。</target>
        </trans-unit>
        <trans-unit id="5637384c5bf05a84dadb8afe90fbed21e946fbd9" translate="yes" xml:space="preserve">
          <source>When this module is prepended to &lt;a href=&quot;../relation&quot;&gt;ActiveRecord::Relation&lt;/a&gt; and &lt;code&gt;config.active_record.warn_on_records_fetched_greater_than&lt;/code&gt; is set to an integer, if the number of records a query returns is greater than the value of &lt;code&gt;warn_on_records_fetched_greater_than&lt;/code&gt;, a warning is logged. This allows for the detection of queries that return a large number of records, which could cause memory bloat.</source>
          <target state="translated">当此模块附加到&lt;a href=&quot;../relation&quot;&gt;ActiveRecord :: Relation&lt;/a&gt;并将 &lt;code&gt;config.active_record.warn_on_records_fetched_greater_than&lt;/code&gt; 设置为整数时，如果查询返回的记录数大于 &lt;code&gt;warn_on_records_fetched_greater_than&lt;/code&gt; 的值，则会记录一条警告。这样可以检测到返回大量记录的查询，这可能会导致内存膨胀。</target>
        </trans-unit>
        <trans-unit id="61ec2000fed5ac679019a969ff38716d02ad4c22" translate="yes" xml:space="preserve">
          <source>When this option is true, digests will be generated for asset URLs.</source>
          <target state="translated">当该选项为真时,将为资产URL生成摘要。</target>
        </trans-unit>
        <trans-unit id="5ceec3c5ef7698aea4335dc1a569310eecfc0aaf" translate="yes" xml:space="preserve">
          <source>When to use streaming</source>
          <target state="translated">何时使用流媒体</target>
        </trans-unit>
        <trans-unit id="2b3a3ff7100bf25d424256bb7e806c38c57941f7" translate="yes" xml:space="preserve">
          <source>When triggered by an explicit context, validations are run for that context, as well as any validations &lt;em&gt;without&lt;/em&gt; a context.</source>
          <target state="translated">当由显式上下文触发时，将对该上下文以及&lt;em&gt;没有&lt;/em&gt;上下文的所有验证运行验证。</target>
        </trans-unit>
        <trans-unit id="3687cc97b1d8b2790cb22a60d6cfa1c6c8550b56" translate="yes" xml:space="preserve">
          <source>When upgrading from Rails 4.2 to Rails 5.0, you need to create an &lt;code&gt;application_job.rb&lt;/code&gt; file in &lt;code&gt;app/jobs/&lt;/code&gt; and add the following content:</source>
          <target state="translated">从Rails 4.2升级到Rails 5.0时，您需要在 &lt;code&gt;app/jobs/&lt;/code&gt; 创建一个 &lt;code&gt;application_job.rb&lt;/code&gt; 文件，并添加以下内容：</target>
        </trans-unit>
        <trans-unit id="f4cd617710b955c629cd9f25420790186c053edd" translate="yes" xml:space="preserve">
          <source>When upgrading from Rails 4.2 to Rails 5.0, you need to create an &lt;code&gt;application_record.rb&lt;/code&gt; file in &lt;code&gt;app/models/&lt;/code&gt; and add the following content:</source>
          <target state="translated">从Rails 4.2升级到Rails 5.0时，您需要在 &lt;code&gt;app/models/&lt;/code&gt; 创建一个 &lt;code&gt;application_record.rb&lt;/code&gt; 文件，并添加以下内容：</target>
        </trans-unit>
        <trans-unit id="0966045c9b81868d24e938999d7ec5852ec8ee0c" translate="yes" xml:space="preserve">
          <source>When used with the &lt;code&gt;collection_select&lt;/code&gt; helper, &lt;code&gt;:disabled&lt;/code&gt; can also be a Proc that identifies those options that should be disabled.</source>
          <target state="translated">当与 &lt;code&gt;collection_select&lt;/code&gt; 辅助程序一起使用时， &lt;code&gt;:disabled&lt;/code&gt; 也可以是Proc来标识应禁用的那些选项。</target>
        </trans-unit>
        <trans-unit id="11dae9c62c610f253df5843ae0d6f53bdb545fd8" translate="yes" xml:space="preserve">
          <source>When using &lt;code&gt;html:&lt;/code&gt; option, HTML entities will be escaped if the string is not composed with &lt;code&gt;html_safe&lt;/code&gt;-aware APIs.</source>
          <target state="translated">使用 &lt;code&gt;html:&lt;/code&gt; 选项时，如果字符串不是由 &lt;code&gt;html_safe&lt;/code&gt; 感知的 API 组成的，则HTML实体将被转义。</target>
        </trans-unit>
        <trans-unit id="db16016376dc96afd4491510e8e049bff9ee8050" translate="yes" xml:space="preserve">
          <source>When using &lt;code&gt;magazine_ad_path&lt;/code&gt;, you can pass in instances of &lt;code&gt;Magazine&lt;/code&gt; and &lt;code&gt;Ad&lt;/code&gt; instead of the numeric IDs:</source>
          <target state="translated">使用 &lt;code&gt;magazine_ad_path&lt;/code&gt; 时，可以传入 &lt;code&gt;Magazine&lt;/code&gt; 和 &lt;code&gt;Ad&lt;/code&gt; 实例，而不要传入数字ID：</target>
        </trans-unit>
        <trans-unit id="017d65dd8bdfe943a8612df98eaa80e2a46cc0f1" translate="yes" xml:space="preserve">
          <source>When using &lt;code&gt;url_for&lt;/code&gt; you'll need to provide the &lt;code&gt;:host&lt;/code&gt;, &lt;code&gt;:controller&lt;/code&gt;, and &lt;code&gt;:action&lt;/code&gt;:</source>
          <target state="translated">使用 &lt;code&gt;url_for&lt;/code&gt; 时,您需要提供 &lt;code&gt;:host&lt;/code&gt; ， &lt;code&gt;:controller&lt;/code&gt; 和 &lt;code&gt;:action&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="e1b38e046cff72828f38a2605f844684774dd156" translate="yes" xml:space="preserve">
          <source>When using Ruby 2.4, you can preserve the timezone of the receiver when calling &lt;code&gt;to_time&lt;/code&gt;.</source>
          <target state="translated">使用Ruby 2.4时，可以在调用 &lt;code&gt;to_time&lt;/code&gt; 时保留接收者的时区。</target>
        </trans-unit>
        <trans-unit id="b2ad0cd2e495bae106cf61d19d1f42023aed5125" translate="yes" xml:space="preserve">
          <source>When using a custom coder (e.g. &lt;code&gt;serialize :metadata, JSON&lt;/code&gt;), assigning &lt;code&gt;nil&lt;/code&gt; to a serialized attribute will save it to the database as &lt;code&gt;NULL&lt;/code&gt; instead of passing the &lt;code&gt;nil&lt;/code&gt; value through the coder (e.g. &lt;code&gt;&quot;null&quot;&lt;/code&gt; when using the &lt;code&gt;JSON&lt;/code&gt; coder).</source>
          <target state="translated">使用自定义编码器（例如 &lt;code&gt;serialize :metadata, JSON&lt;/code&gt; ）时，将 &lt;code&gt;nil&lt;/code&gt; 分配给序列化的属性会将其保存为 &lt;code&gt;NULL&lt;/code&gt; ,而不是通过编码器传递 &lt;code&gt;nil&lt;/code&gt; 值（例如，使用 &lt;code&gt;JSON&lt;/code&gt; 编码器时为 &lt;code&gt;&quot;null&quot;&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="66cfcf22b3c676a6997ffa9902a30809f2d3184d" translate="yes" xml:space="preserve">
          <source>When using a nested association, you will not be able to modify the association because there is not enough information to know what modification to make. For example, if you tried to add a &lt;code&gt;Commenter&lt;/code&gt; in the example above, there would be no way to tell how to set up the intermediate &lt;code&gt;Post&lt;/code&gt; and &lt;code&gt;Comment&lt;/code&gt; objects.</source>
          <target state="translated">使用嵌套关联时，将无法修改关联，因为没有足够的信息来知道要进行哪些修改。例如，如果您尝试在上面的示例中添加一个 &lt;code&gt;Commenter&lt;/code&gt; ，将无法告诉您如何设置中间的 &lt;code&gt;Post&lt;/code&gt; 和 &lt;code&gt;Comment&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="9fb14fc1ba31f4e1ea9e37cf65b0238fc88da75d" translate="yes" xml:space="preserve">
          <source>When using a replica database you need to add a &lt;code&gt;replica: true&lt;/code&gt; entry to the replica in the &lt;code&gt;database.yml&lt;/code&gt;. This is because Rails otherwise has no way of knowing which one is a replica and which one is the primary.</source>
          <target state="translated">当使用副本数据库，您需要添加一个 &lt;code&gt;replica: true&lt;/code&gt; 进入的副本 &lt;code&gt;database.yml&lt;/code&gt; 。这是因为，否则，Rails无法知道哪个是副本，哪个是主要副本。</target>
        </trans-unit>
        <trans-unit id="1491a0d8a6ea33ff245dd6cc7c74ca7d3bdbc45d" translate="yes" xml:space="preserve">
          <source>When using a symbol for &lt;code&gt;cast_type&lt;/code&gt;, extra options are forwarded to the constructor of the type object.</source>
          <target state="translated">将符号用于 &lt;code&gt;cast_type&lt;/code&gt; 时，其他选项将转发到type对象的构造函数。</target>
        </trans-unit>
        <trans-unit id="7370c9863746c973185e4c2a5aad9ffcbde16aef" translate="yes" xml:space="preserve">
          <source>When using a threaded web server, such as the default Puma, multiple HTTP requests will be served simultaneously, with each request provided its own controller instance.</source>
          <target state="translated">当使用线程式Web服务器(如默认的Puma)时,将同时服务多个HTTP请求,每个请求都提供自己的控制器实例。</target>
        </trans-unit>
        <trans-unit id="44b21096e69b68ae4ff5c6383c48e95d27e538c4" translate="yes" xml:space="preserve">
          <source>When using another library to make Ajax calls, it is necessary to add the security token as a default header for Ajax calls in your library. To get the token:</source>
          <target state="translated">当使用其他库进行Ajax调用时,需要在你的库中添加安全令牌作为Ajax调用的默认头。要获取令牌。</target>
        </trans-unit>
        <trans-unit id="3ebd1d3db42111fdba613c33ce7d2d94e6e89e29" translate="yes" xml:space="preserve">
          <source>When using asset precompilation, you will need to ensure that your controller assets will be precompiled when loading them on a per page basis. By default &lt;code&gt;.coffee&lt;/code&gt; and &lt;code&gt;.scss&lt;/code&gt; files will not be precompiled on their own. See &lt;a href=&quot;#precompiling-assets&quot;&gt;Precompiling Assets&lt;/a&gt; for more information on how precompiling works.</source>
          <target state="translated">使用资产预编译时，您需要确保在按页面加载它们时将对控制器资产进行预编译。默认情况下， &lt;code&gt;.coffee&lt;/code&gt; 和 &lt;code&gt;.scss&lt;/code&gt; 文件将不会对自己进行预编译。有关&lt;a href=&quot;#precompiling-assets&quot;&gt;预编译&lt;/a&gt;如何工作的更多信息，请参见预编译资产。</target>
        </trans-unit>
        <trans-unit id="5e3736fbf61b5ba2e5b61df2c03d5c15a2c2c6e8" translate="yes" xml:space="preserve">
          <source>When using inheritance in your models, it will check all the inherited models too, but only if the model itself hasn't been found. Say you have &lt;code&gt;class Admin &amp;lt; User; end&lt;/code&gt; and you wanted the translation for the &lt;code&gt;:blank&lt;/code&gt; error message for the &lt;code&gt;title&lt;/code&gt; attribute, it looks for these translations:</source>
          <target state="translated">在模型中使用继承时，它也会检查所有继承的模型，但前提是未找到模型本身。假设您有 &lt;code&gt;class Admin &amp;lt; User; end&lt;/code&gt; 并且您想要翻译 &lt;code&gt;title&lt;/code&gt; 属性的 &lt;code&gt;:blank&lt;/code&gt; 错误消息，它将查找以下翻译：</target>
        </trans-unit>
        <trans-unit id="ad68c2e0fd6a9cc9b32d54966fe897b7b3e7a663" translate="yes" xml:space="preserve">
          <source>When using multiple databases there are a few important settings.</source>
          <target state="translated">当使用多个数据库时,有几个重要的设置。</target>
        </trans-unit>
        <trans-unit id="c2364174d18c390a48a043b75041eb38d23b38b9" translate="yes" xml:space="preserve">
          <source>When using multiple parameters in the conditions, it can easily become hard to read exactly what the fourth or fifth question mark is supposed to represent. In those cases, you can resort to named bind variables instead. That's done by replacing the question marks with symbols and supplying a hash with values for the matching symbol keys:</source>
          <target state="translated">当在条件中使用多个参数时,很容易变得难以读懂第四或第五个问号到底应该代表什么。在这些情况下,你可以采用命名绑定变量来代替。这是通过用符号代替问号,并为匹配的符号键提供一个哈希值来实现的。</target>
        </trans-unit>
        <trans-unit id="1a92868f0bdbc6ee725f49daf538aa57784a0acf" translate="yes" xml:space="preserve">
          <source>When using named routes you only need to supply the &lt;code&gt;:host&lt;/code&gt;:</source>
          <target state="translated">使用命名路由时，只需提供 &lt;code&gt;:host&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="380f02f26ca07a28e8e80366b0d2586600dd0133" translate="yes" xml:space="preserve">
          <source>When using shortcut form, ranges and arrays are passed to your validator's initializer as &lt;code&gt;options[:in]&lt;/code&gt; while other types including regular expressions and strings are passed as &lt;code&gt;options[:with]&lt;/code&gt;.</source>
          <target state="translated">使用快捷方式时，范围和数组作为 &lt;code&gt;options[:in]&lt;/code&gt; 传递到验证程序的初始化程序，而其他类型（包括正则表达式和字符串）作为 &lt;code&gt;options[:with]&lt;/code&gt; 传递。</target>
        </trans-unit>
        <trans-unit id="0002d8ab620faf67f450aa23ebca8349745f6f90" translate="yes" xml:space="preserve">
          <source>When using strings to specify conditions, you can use any operator available from the database. While this provides the most flexibility, you can also unintentionally introduce dependencies on the underlying database. If your code is intended for general consumption, test with multiple database backends.</source>
          <target state="translated">当使用字符串来指定条件时,你可以使用数据库中任何可用的操作符。虽然这提供了最大的灵活性,但你也可能无意中引入对底层数据库的依赖性。如果你的代码打算用于一般消费,请使用多个数据库后端进行测试。</target>
        </trans-unit>
        <trans-unit id="ca09c0bc8773dca87f2fd48691931414f6b466b1" translate="yes" xml:space="preserve">
          <source>When using the &lt;code&gt;:json&lt;/code&gt; or &lt;code&gt;:hybrid&lt;/code&gt; serializer, you should beware that not all Ruby objects can be serialized as JSON. For example, &lt;code&gt;Date&lt;/code&gt; and &lt;code&gt;Time&lt;/code&gt; objects will be serialized as strings, and &lt;code&gt;Hash&lt;/code&gt;es will have their keys stringified.</source>
          <target state="translated">当使用 &lt;code&gt;:json&lt;/code&gt; 或 &lt;code&gt;:hybrid&lt;/code&gt; 序列化程序时，应注意并非所有Ruby对象都可以序列化为JSON。例如， &lt;code&gt;Date&lt;/code&gt; 和 &lt;code&gt;Time&lt;/code&gt; 对象将被序列化为字符串，并且 &lt;code&gt;Hash&lt;/code&gt; 的密钥将被字符串化。</target>
        </trans-unit>
        <trans-unit id="20d3e495122f477e133c87b59e2aea2cc57d5348" translate="yes" xml:space="preserve">
          <source>When using the Classic Autoloader in Rails 6 application it is recommended to set concurrency level to 1 in development environment, for the web servers and background processors, due to the thread-safety concerns.</source>
          <target state="translated">当在Rails 6应用中使用Classic Autoloader时,出于线程安全的考虑,建议在开发环境中将Web服务器和后台处理器的并发级别设置为1。</target>
        </trans-unit>
        <trans-unit id="cdc6da640abf279c493c0e43610fe41c683757b7" translate="yes" xml:space="preserve">
          <source>When using the asset pipeline, paths to assets must be re-written and &lt;code&gt;sass-rails&lt;/code&gt; provides &lt;code&gt;-url&lt;/code&gt; and &lt;code&gt;-path&lt;/code&gt; helpers (hyphenated in Sass, underscored in Ruby) for the following asset classes: image, font, video, audio, JavaScript and stylesheet.</source>
          <target state="translated">使用资产管道时，必须重新编写资产路径，并且 &lt;code&gt;sass-rails&lt;/code&gt; 为以下资产类别提供 &lt;code&gt;-url&lt;/code&gt; 和 &lt;code&gt;-path&lt;/code&gt; 帮助器（在Sass中带连字符，在Ruby中加划线）：图像，字体，视频，音频，JavaScript和样式表。</target>
        </trans-unit>
        <trans-unit id="19a526ec41e2633f2f7889f448da649f747f6ac6" translate="yes" xml:space="preserve">
          <source>When using the database key a new connection will be established every time.</source>
          <target state="translated">当使用数据库密钥时,每次都会建立一个新的连接。</target>
        </trans-unit>
        <trans-unit id="fb3c1f35688ed259e0ceb699a164024618bbc3c5" translate="yes" xml:space="preserve">
          <source>When using the default coder, assigning &lt;code&gt;nil&lt;/code&gt; to a serialized attribute will save it to the database as &lt;code&gt;NULL&lt;/code&gt; instead of passing the &lt;code&gt;nil&lt;/code&gt; value through YAML (&lt;code&gt;&quot;--- \n...\n&quot;&lt;/code&gt;).</source>
          <target state="translated">使用默认编码器时，将 &lt;code&gt;nil&lt;/code&gt; 分配给序列化属性会将其保存为 &lt;code&gt;NULL&lt;/code&gt; ,而不是通过YAML（ &lt;code&gt;&quot;--- \n...\n&quot;&lt;/code&gt; ）传递 &lt;code&gt;nil&lt;/code&gt; 值。</target>
        </trans-unit>
        <trans-unit id="af2a017883c23b5ded137a7ee4fa376812adb77b" translate="yes" xml:space="preserve">
          <source>When using this method, you list the cache dependency as the name of the cache, like so:</source>
          <target state="translated">当使用这个方法时,你把缓存的依赖关系列为缓存的名称,像这样。</target>
        </trans-unit>
        <trans-unit id="cd1ed42a69d5abca994e03a762f9b39e917bd1c2" translate="yes" xml:space="preserve">
          <source>When we execute &lt;code&gt;@user.todos.create&lt;/code&gt; then the &lt;code&gt;@todo&lt;/code&gt; record will have its &lt;code&gt;user_id&lt;/code&gt; value as the &lt;code&gt;guid&lt;/code&gt; value of &lt;code&gt;@user&lt;/code&gt;.</source>
          <target state="translated">当我们执行 &lt;code&gt;@user.todos.create&lt;/code&gt; 那么 &lt;code&gt;@todo&lt;/code&gt; 记录将有其 &lt;code&gt;user_id&lt;/code&gt; 的值作为 &lt;code&gt;guid&lt;/code&gt; 值 &lt;code&gt;@user&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="025a348a1d5325c407bced341d83c2791ef953d2" translate="yes" xml:space="preserve">
          <source>When we visit our root path, we should see &lt;code&gt;welcome/index.html.erb&lt;/code&gt; rendered for the view. So this assertion should pass.</source>
          <target state="translated">当我们访问我们的根路径时，我们应该看到为视图渲染了 &lt;code&gt;welcome/index.html.erb&lt;/code&gt; 。因此，该断言应该通过。</target>
        </trans-unit>
        <trans-unit id="76475c3e53fb811104dd4f40813664a40e46ad21" translate="yes" xml:space="preserve">
          <source>When working around this exception, caution should be taken to avoid SQL injection vulnerabilities when passing user-provided values to query methods. Known-safe values can be passed to query methods by wrapping them in Arel.sql.</source>
          <target state="translated">绕过这个异常时,在将用户提供的值传递给查询方法时,应注意避免SQL注入漏洞。通过将已知安全值封装在Arel.sql中,可以将其传递给查询方法。</target>
        </trans-unit>
        <trans-unit id="9ab16691251998d9f14a5223d0184ac4c8f6ae83" translate="yes" xml:space="preserve">
          <source>When working with an &lt;code&gt;InboundEmail&lt;/code&gt;, you'll usually interact with the parsed version of the source, which is available as a &lt;code&gt;Mail&lt;/code&gt; object from &lt;code&gt;#mail&lt;/code&gt;. But you can also access the raw source directly using the &lt;code&gt;#source&lt;/code&gt; method.</source>
          <target state="translated">使用 &lt;code&gt;InboundEmail&lt;/code&gt; 时，通常将与源的已解析版本进行交互，该源可以从 &lt;code&gt;#mail&lt;/code&gt; 作为 &lt;code&gt;Mail&lt;/code&gt; 对象获得。但是，您也可以使用 &lt;code&gt;#source&lt;/code&gt; 方法直接访问原始资源。</target>
        </trans-unit>
        <trans-unit id="d8e0cd5ad81b1bf0cf8abdf91ad1c3b12109168e" translate="yes" xml:space="preserve">
          <source>When writing CoffeeScript, you'll often want to do some sort of processing upon page load. With jQuery, you'd write something like this:</source>
          <target state="translated">当编写CoffeeScript时,你经常会想在页面加载时做一些处理。使用jQuery,你可以写这样的东西。</target>
        </trans-unit>
        <trans-unit id="7f04c2bf6f9fc7a6c84938114eb5353de0afb89b" translate="yes" xml:space="preserve">
          <source>When writing applications using other programming languages or frameworks, it may be necessary to write a lot of configuration code. This is particularly true for ORM frameworks in general. However, if you follow the conventions adopted by Rails, you'll need to write very little configuration (in some cases no configuration at all) when creating Active Record models. The idea is that if you configure your applications in the very same way most of the time then this should be the default way. Thus, explicit configuration would be needed only in those cases where you can't follow the standard convention.</source>
          <target state="translated">当使用其他编程语言或框架编写应用程序时,可能需要编写大量的配置代码。这对于一般的ORM框架来说尤其如此。然而,如果您遵循Rails采用的惯例,那么在创建Active Record模型时,您只需要编写很少的配置(在某些情况下根本不需要配置)。我们的想法是,如果你在大多数时候都以相同的方式配置你的应用程序,那么这应该是默认的方式。因此,只有在您不能遵循标准惯例的情况下,才需要明确的配置。</target>
        </trans-unit>
        <trans-unit id="c81b02a41e7976013a324547ba2d04433175fd73" translate="yes" xml:space="preserve">
          <source>When writing conditional callbacks, it is possible to mix both &lt;code&gt;:if&lt;/code&gt; and &lt;code&gt;:unless&lt;/code&gt; in the same callback declaration:</source>
          <target state="translated">编写条件回调时，可以在同一回调声明中混合使用 &lt;code&gt;:if&lt;/code&gt; 和 &lt;code&gt;:unless&lt;/code&gt; if，除非：</target>
        </trans-unit>
        <trans-unit id="728f464aff492a837e056143a56f1056162db752" translate="yes" xml:space="preserve">
          <source>When you are defining an attribute in a class that is meant to be subclassed, name collisions are a risk. That's remarkably important for libraries.</source>
          <target state="translated">当你在一个要被子类化的类中定义一个属性时,名称碰撞是一个风险。这对于库来说是非常重要的。</target>
        </trans-unit>
        <trans-unit id="3ac9d42051228151bf15569009b27b9dfbb51a9f" translate="yes" xml:space="preserve">
          <source>When you are ready, you can opt into the new behavior and remove the deprecation warning by adding the following configuration to your &lt;code&gt;config/application.rb&lt;/code&gt;:</source>
          <target state="translated">准备就绪后，可以通过将以下配置添加到 &lt;code&gt;config/application.rb&lt;/code&gt; 来选择新行为并删除弃用警告：</target>
        </trans-unit>
        <trans-unit id="48b837488c330810fddfb63739e09169aca21ef7" translate="yes" xml:space="preserve">
          <source>When you are using the default SimpleStore shipped with the i18n library, dictionaries are stored in plain-text files on the disk. Putting translations for all parts of your application in one file per locale could be hard to manage. You can store these files in a hierarchy which makes sense to you.</source>
          <target state="translated">当你使用i18n库中默认的SimpleStore时,字典被存储在磁盘上的纯文本文件中。将应用程序所有部分的翻译放在每个语言的一个文件中可能很难管理。您可以将这些文件存储在一个您认为合理的层次结构中。</target>
        </trans-unit>
        <trans-unit id="13f5f6ea85c88ff7173250734145358c89b44798" translate="yes" xml:space="preserve">
          <source>When you assign an object to a &lt;code&gt;has_and_belongs_to_many&lt;/code&gt; association, that object is automatically saved (in order to update the join table). If you assign multiple objects in one statement, then they are all saved.</source>
          <target state="translated">将对象分配给 &lt;code&gt;has_and_belongs_to_many&lt;/code&gt; 关联时，该对象将自动保存（以更新联接表）。如果在一个语句中分配多个对象，则将全部保存。</target>
        </trans-unit>
        <trans-unit id="40cc54d23b859b7d8dd47d2fdf6d8c0c515b8b38" translate="yes" xml:space="preserve">
          <source>When you assign an object to a &lt;code&gt;has_many&lt;/code&gt; association, that object is automatically saved (in order to update its foreign key). If you assign multiple objects in one statement, then they are all saved.</source>
          <target state="translated">将对象分配给 &lt;code&gt;has_many&lt;/code&gt; 关联时，该对象将自动保存（以更新其外键）。如果在一个语句中分配多个对象，则将全部保存。</target>
        </trans-unit>
        <trans-unit id="d5d88c9a358d929ad656545a471225303c27562d" translate="yes" xml:space="preserve">
          <source>When you assign an object to a &lt;code&gt;has_one&lt;/code&gt; association, that object is automatically saved (in order to update its foreign key). In addition, any object being replaced is also automatically saved, because its foreign key will change too.</source>
          <target state="translated">将对象分配给 &lt;code&gt;has_one&lt;/code&gt; 关联时，该对象将自动保存（以更新其外键）。此外，任何被替换的对象也会自动保存，因为其外键也会更改。</target>
        </trans-unit>
        <trans-unit id="cb58c38c5d9ba326b83c93060c2f50e0c886ecb4" translate="yes" xml:space="preserve">
          <source>When you build forms to external resources sometimes you need to set an authenticity token or just render a form without it, for example when you submit data to a payment gateway number and types of fields could be limited.</source>
          <target state="translated">当你向外部资源构建表单时,有时你需要设置一个真实性令牌,或者只是渲染一个没有真实性令牌的表单,例如当你向支付网关提交数据时,可能会限制字段的数量和类型。</target>
        </trans-unit>
        <trans-unit id="eaa6dd50de12b00ae1e2570dc7f66cede65bfe2f" translate="yes" xml:space="preserve">
          <source>When you call &lt;code&gt;form_with&lt;/code&gt;, you pass it an identifying scope for this form. In this case, it's the symbol &lt;code&gt;:article&lt;/code&gt;. This tells the &lt;code&gt;form_with&lt;/code&gt; helper what this form is for. Inside the block for this method, the &lt;code&gt;FormBuilder&lt;/code&gt; object - represented by &lt;code&gt;form&lt;/code&gt; - is used to build two labels and two text fields, one each for the title and text of an article. Finally, a call to &lt;code&gt;submit&lt;/code&gt; on the &lt;code&gt;form&lt;/code&gt; object will create a submit button for the form.</source>
          <target state="translated">调用 &lt;code&gt;form_with&lt;/code&gt; 时，您将为此表单传递一个标识范围。在这种情况下，它是符号 &lt;code&gt;:article&lt;/code&gt; 。这告诉 &lt;code&gt;form_with&lt;/code&gt; 帮助程序此表单的用途。在此方法的块内， &lt;code&gt;FormBuilder&lt;/code&gt; 对象（由 &lt;code&gt;form&lt;/code&gt; 表示）用于构建两个标签和两个文本字段，每个用于标题和文本。最后，调用 &lt;code&gt;form&lt;/code&gt; 对象上的 &lt;code&gt;submit&lt;/code&gt; 将为表单创建一个提交按钮。</target>
        </trans-unit>
        <trans-unit id="164fb4bc57ab2cae80aa356518aa4e1f45cc7e82" translate="yes" xml:space="preserve">
          <source>When you call the &lt;code&gt;mail&lt;/code&gt; method now, Action Mailer will detect the two templates (text and HTML) and automatically generate a &lt;code&gt;multipart/alternative&lt;/code&gt; email.</source>
          <target state="translated">当您立即调用 &lt;code&gt;mail&lt;/code&gt; 方法时，Action Mailer将检测两个模板（文本和HTML）并自动生成 &lt;code&gt;multipart/alternative&lt;/code&gt; 电子邮件。</target>
        </trans-unit>
        <trans-unit id="2ec8a2d934f28f30151d8d95376b3c2c89935d0f" translate="yes" xml:space="preserve">
          <source>When you create an application using the &lt;code&gt;rails&lt;/code&gt; command, you are in fact using a Rails generator. After that, you can get a list of all available generators by just invoking &lt;code&gt;rails generate&lt;/code&gt;:</source>
          <target state="translated">使用 &lt;code&gt;rails&lt;/code&gt; 命令创建应用程序时，实际上是在使用Rails生成器。在这之后，你可以通过调用刚刚获得所有可用发电机的列表 &lt;code&gt;rails generate&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="8122aab495d508cf61370cd81b097cc041707e34" translate="yes" xml:space="preserve">
          <source>When you declare a &lt;code&gt;belongs_to&lt;/code&gt; association, the declaring class automatically gains 6 methods related to the association:</source>
          <target state="translated">在声明一个 &lt;code&gt;belongs_to&lt;/code&gt; 关联时，声明类自动获得与该关联相关的6种方法：</target>
        </trans-unit>
        <trans-unit id="ed854a43c1df9ccf0837945691953a839d721e32" translate="yes" xml:space="preserve">
          <source>When you declare a &lt;code&gt;belongs_to&lt;/code&gt; association, you need to create foreign keys as appropriate. For example, consider this model:</source>
          <target state="translated">当您声明一个 &lt;code&gt;belongs_to&lt;/code&gt; 关联时，您需要适当地创建外键。例如，考虑以下模型：</target>
        </trans-unit>
        <trans-unit id="16a82322212b07c1bf8d15873a0ef6fa9784264b" translate="yes" xml:space="preserve">
          <source>When you declare a &lt;code&gt;has_and_belongs_to_many&lt;/code&gt; association, the declaring class automatically gains 17 methods related to the association:</source>
          <target state="translated">当您声明 &lt;code&gt;has_and_belongs_to_many&lt;/code&gt; 关联时，声明类自动获得与该关联相关的17种方法：</target>
        </trans-unit>
        <trans-unit id="dbe729b1b61664db952c464879352a04f4fdb8fa" translate="yes" xml:space="preserve">
          <source>When you declare a &lt;code&gt;has_many&lt;/code&gt; association, the declaring class automatically gains 17 methods related to the association:</source>
          <target state="translated">声明 &lt;code&gt;has_many&lt;/code&gt; 关联时，声明类自动获得与该关联相关的17个方法：</target>
        </trans-unit>
        <trans-unit id="ad523f8be1b969c520b411e526dcaa9329b70c0f" translate="yes" xml:space="preserve">
          <source>When you declare a &lt;code&gt;has_one&lt;/code&gt; association, the declaring class automatically gains 6 methods related to the association:</source>
          <target state="translated">声明 &lt;code&gt;has_one&lt;/code&gt; 关联时，声明类自动获得与该关联相关的6种方法：</target>
        </trans-unit>
        <trans-unit id="4c43ccb45142afa17595a75a2f9e619fc1269678" translate="yes" xml:space="preserve">
          <source>When you define an &lt;code&gt;after_rollback&lt;/code&gt; or &lt;code&gt;after_commit&lt;/code&gt; callback, you will receive a deprecation warning about this upcoming change. When you are ready, you can opt into the new behavior and remove the deprecation warning by adding following configuration to your &lt;code&gt;config/application.rb&lt;/code&gt;:</source>
          <target state="translated">当您定义 &lt;code&gt;after_rollback&lt;/code&gt; 或 &lt;code&gt;after_commit&lt;/code&gt; 回调时，您将收到有关此即将发生的更改的弃用警告。准备就绪后，可以选择新行为并通过在 &lt;code&gt;config/application.rb&lt;/code&gt; 中添加以下配置来删除弃用警告：</target>
        </trans-unit>
        <trans-unit id="6e4683fcfa3e636acd0df81676786bea25eee21d" translate="yes" xml:space="preserve">
          <source>When you delete migration files in the &lt;code&gt;db/migrate/&lt;/code&gt; directory, any environment where &lt;code&gt;rails db:migrate&lt;/code&gt; was run when those files still existed will hold a reference to the migration timestamp specific to them inside an internal Rails database table named &lt;code&gt;schema_migrations&lt;/code&gt;. This table is used to keep track of whether migrations have been executed in a specific environment.</source>
          <target state="translated">当您删除 &lt;code&gt;db/migrate/&lt;/code&gt; 目录中的迁移文件时，在这些文件仍然存在的情况下运行 &lt;code&gt;rails db:migrate&lt;/code&gt; 的任何环境都将在内部Rails数据库表 &lt;code&gt;schema_migrations&lt;/code&gt; 中保存对它们特定的迁移时间戳的引用。该表用于跟踪是否已在特定环境中执行迁移。</target>
        </trans-unit>
        <trans-unit id="97488d66ab8a75a0b31ccd700b2165a6fd379ba7" translate="yes" xml:space="preserve">
          <source>When you do &lt;code&gt;Firm.create(name: &quot;37signals&quot;)&lt;/code&gt;, this record will be saved in the companies table with type = &amp;ldquo;Firm&amp;rdquo;. You can then fetch this row again using &lt;code&gt;Company.where(name:
'37signals').first&lt;/code&gt; and it will return a Firm object.</source>
          <target state="translated">当您执行 &lt;code&gt;Firm.create(name: &quot;37signals&quot;)&lt;/code&gt; ，此记录将以类型=&amp;ldquo; Firm&amp;rdquo;保存在company表中。然后，您可以使用 &lt;code&gt;Company.where(name: '37signals').first&lt;/code&gt; 再次获取该行，它将返回一个Firm对象。</target>
        </trans-unit>
        <trans-unit id="7c33623daf4146c68a08be23150893f7d701c758" translate="yes" xml:space="preserve">
          <source>When you do want to actually produce the variant needed, call &lt;code&gt;processed&lt;/code&gt;. This will check that the variant has already been processed and uploaded to the service, and, if so, just return that. Otherwise it will perform the transformations, upload the variant to the service, and return itself again. Example:</source>
          <target state="translated">当您确实想产生所需的变体时，请调用 &lt;code&gt;processed&lt;/code&gt; 。这将检查变体是否已经被处理并上传到服务，如果是，则将其返回。否则它将执行转换，将变体上载到服务，然后再次返回自身。例：</target>
        </trans-unit>
        <trans-unit id="59e6968f10af94ead46f8157d3682dc82088d387" translate="yes" xml:space="preserve">
          <source>When you don't pass an explicit receiver, it executes the whole block in merging options context:</source>
          <target state="translated">当你不传递一个显式接收器时,它会在合并选项上下文中执行整个块。</target>
        </trans-unit>
        <trans-unit id="46a664655305ddaf507a67c7d44695f78b9398ce" translate="yes" xml:space="preserve">
          <source>When you generate a new application or scaffold, an &lt;code&gt;application_system_test_case.rb&lt;/code&gt; file is created in the test directory. This is where all the configuration for your system tests should live.</source>
          <target state="translated">生成新的应用程序或支架时，将在测试目录中创建一个 &lt;code&gt;application_system_test_case.rb&lt;/code&gt; 文件。这是系统测试的所有配置都应该存在的地方。</target>
        </trans-unit>
        <trans-unit id="1c4e5dd6da78cdbd5a4025ef6673c0fb25cb5835" translate="yes" xml:space="preserve">
          <source>When you generate a scaffold or a controller, Rails also generates a Cascading Style Sheet file (or SCSS file if &lt;code&gt;sass-rails&lt;/code&gt; is in the &lt;code&gt;Gemfile&lt;/code&gt;) for that controller. Additionally, when generating a scaffold, Rails generates the file &lt;code&gt;scaffolds.css&lt;/code&gt; (or &lt;code&gt;scaffolds.scss&lt;/code&gt; if &lt;code&gt;sass-rails&lt;/code&gt; is in the &lt;code&gt;Gemfile&lt;/code&gt;.)</source>
          <target state="translated">当您生成支架或控制器时，Rails还将为该控制器生成一个层叠样式表文件（如果 &lt;code&gt;Gemfile&lt;/code&gt; &lt;code&gt;sass-rails&lt;/code&gt; 在Gemfile中，则为 SCSS文件）。此外，生成的支架时，滑轨生成文件 &lt;code&gt;scaffolds.css&lt;/code&gt; （或 &lt;code&gt;scaffolds.scss&lt;/code&gt; 如果 &lt;code&gt;sass-rails&lt;/code&gt; 处于 &lt;code&gt;Gemfile&lt;/code&gt; 中）。</target>
        </trans-unit>
        <trans-unit id="869d09bef8fd7c0c3f6ce3ae85e7689e46af2ecd" translate="yes" xml:space="preserve">
          <source>When you refresh http://localhost:3000/articles/new you'll now see that the page has a title. The route, controller, action, and view are now working harmoniously! It's time to create the form for a new article.</source>
          <target state="translated">当你刷新http://localhost:3000/articles/new,你会发现页面有了标题。路由、控制器、动作和视图现在都能和谐地工作了。现在是时候为一篇新文章创建表单了。</target>
        </trans-unit>
        <trans-unit id="b81c4679ec859a8f47d58ccc2181600474890e26" translate="yes" xml:space="preserve">
          <source>When you run &lt;code&gt;bin/test&lt;/code&gt;, you should see the following:</source>
          <target state="translated">运行 &lt;code&gt;bin/test&lt;/code&gt; 时，应该看到以下内容：</target>
        </trans-unit>
        <trans-unit id="a3b0b98159de1a0d6b61faad2fb45ce4dc35fb59" translate="yes" xml:space="preserve">
          <source>When you run &lt;code&gt;bin/test&lt;/code&gt;, you should see the tests all pass:</source>
          <target state="translated">运行 &lt;code&gt;bin/test&lt;/code&gt; 时，您应该看到测试全部通过：</target>
        </trans-unit>
        <trans-unit id="f054c504d9e717e351147f39eae29293dda4c305" translate="yes" xml:space="preserve">
          <source>When you run &lt;code&gt;rails generate initializer core_extensions&lt;/code&gt; Rails requires these files in turn until one is found:</source>
          <target state="translated">当您运行 &lt;code&gt;rails generate initializer core_extensions&lt;/code&gt; Rails依次需要这些文件，直到找到一个为止：</target>
        </trans-unit>
        <trans-unit id="ccdabdd3d8a1a9117922bafc7cfe0dd647387889" translate="yes" xml:space="preserve">
          <source>When you set up a regular route, you supply a series of symbols that Rails maps to parts of an incoming HTTP request. For example, consider this route:</source>
          <target state="translated">当您设置常规路由时,您提供了一系列符号,Rails将这些符号映射到传入的HTTP请求的部分。例如,考虑这个路由。</target>
        </trans-unit>
        <trans-unit id="ebee4ff4fdde5b9e938ea1e0ab298136d546e4d5" translate="yes" xml:space="preserve">
          <source>When you specify a class option, the default value for that attribute will be a new instance of that class.</source>
          <target state="translated">当你指定一个类选项时,该属性的默认值将是该类的一个新实例。</target>
        </trans-unit>
        <trans-unit id="20d401d6683ead2b42845f21ffeebbd5a302bb31" translate="yes" xml:space="preserve">
          <source>When you specify an association, there is usually an association on the associated model that specifies the same relationship in reverse. For example, with the following models:</source>
          <target state="translated">当你指定一个关联时,关联模型上通常会有一个关联,反向指定相同的关系。例如,与以下模型。</target>
        </trans-unit>
        <trans-unit id="2a6ef0056c03967a40f23f720860ed8422f58716" translate="yes" xml:space="preserve">
          <source>When you start debugging your application, you will be placed in different contexts as you go through the different parts of the stack.</source>
          <target state="translated">当你开始调试你的应用程序时,你将被放置在不同的上下文中,因为你经历了堆栈的不同部分。</target>
        </trans-unit>
        <trans-unit id="bde9d5f2d35e6559b94125d7a15f4526570fc799" translate="yes" xml:space="preserve">
          <source>When you type &lt;code&gt;http://localhost:3000&lt;/code&gt; into your browser's address bar and hit 'Go', the browser (your 'client') makes a request to the server. It parses the response, then fetches all associated assets, like JavaScript files, stylesheets and images. It then assembles the page. If you click a link, it does the same process: fetch the page, fetch the assets, put it all together, show you the results. This is called the 'request response cycle'.</source>
          <target state="translated">当您在浏览器的地址栏中键入 &lt;code&gt;http://localhost:3000&lt;/code&gt; 并单击&amp;ldquo;转到&amp;rdquo;时，浏览器（您的&amp;ldquo;客户端&amp;rdquo;）会向服务器发出请求。它解析响应，然后获取所有关联的资产，例如JavaScript文件，样式表和图像。然后组装页面。如果单击链接，将执行相同的过程：获取页面，获取资产，将所有内容放在一起，向您显示结果。这称为&amp;ldquo;请求响应周期&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="fbf2f51471775cbe8ec9ea81c68e945798f4fb87" translate="yes" xml:space="preserve">
          <source>When you upgrade from Rails 4.2 to Rails 5.0, returning &lt;code&gt;false&lt;/code&gt; in those kind of callbacks will still halt the callback chain, but you will receive a deprecation warning about this upcoming change.</source>
          <target state="translated">当您从Rails 4.2升级到Rails 5.0时，在此类回调中返回 &lt;code&gt;false&lt;/code&gt; 仍将中断回调链，但是您将收到有关此即将发生的更改的弃用警告。</target>
        </trans-unit>
        <trans-unit id="ce3f49c5a9ef97c317811c0adf8b24ae2e11d9fe" translate="yes" xml:space="preserve">
          <source>When you use the &lt;code&gt;send_file&lt;/code&gt; method inside a Rails controller, it sets the &lt;code&gt;X-Sendfile&lt;/code&gt; header. &lt;code&gt;Rack::Sendfile&lt;/code&gt; is responsible for actually sending the file.</source>
          <target state="translated">当您在Rails控制器中使用 &lt;code&gt;send_file&lt;/code&gt; 方法时，它将设置 &lt;code&gt;X-Sendfile&lt;/code&gt; 标头。 &lt;code&gt;Rack::Sendfile&lt;/code&gt; 负责实际发送文件。</target>
        </trans-unit>
        <trans-unit id="1f8acc8f165d1eaa8b523c76b77a253c16a8412f" translate="yes" xml:space="preserve">
          <source>When you want to call a method on an object only if it is not &lt;code&gt;nil&lt;/code&gt;, the simplest way to achieve it is with conditional statements, adding unnecessary clutter. The alternative is to use &lt;code&gt;try&lt;/code&gt;. &lt;code&gt;try&lt;/code&gt; is like &lt;code&gt;Object#send&lt;/code&gt; except that it returns &lt;code&gt;nil&lt;/code&gt; if sent to &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">仅当对象不为 &lt;code&gt;nil&lt;/code&gt; 时才想调用该方法时，最简单的方法是使用条件语句，这会增加不必要的混乱。替代方法是使用 &lt;code&gt;try&lt;/code&gt; 。 &lt;code&gt;try&lt;/code&gt; 就像是 &lt;code&gt;Object#send&lt;/code&gt; 只不过它返回 &lt;code&gt;nil&lt;/code&gt; ，如果发送到 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ebe444966be6c53b906104cbaa8d66974529520e" translate="yes" xml:space="preserve">
          <source>When you want to save it to the database, just call &lt;code&gt;save&lt;/code&gt;:</source>
          <target state="translated">要将其保存到数据库中时，只需调用 &lt;code&gt;save&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="9679effbbd348e915c57597e117e7cc6cb0b08c0" translate="yes" xml:space="preserve">
          <source>When you're not sharing any code within the format, you can simplify defining variants using the inline syntax:</source>
          <target state="translated">当你在格式内不共享任何代码时,你可以使用内联语法简化定义变体。</target>
        </trans-unit>
        <trans-unit id="fe6642b55d946062c55f84fa54981eebbbebf362" translate="yes" xml:space="preserve">
          <source>When you're using STI (single-table inheritance) with your models, you can't rely on record identification on a subclass if only their parent class is declared a resource. You will have to specify &lt;code&gt;:url&lt;/code&gt;, and &lt;code&gt;:scope&lt;/code&gt; (the model name) explicitly.</source>
          <target state="translated">在模型中使用STI（单表继承）时，如果仅将其父类声明为资源，则不能依赖子类的记录标识。您将必须明确指定 &lt;code&gt;:url&lt;/code&gt; 和 &lt;code&gt;:scope&lt;/code&gt; （型号名称）。</target>
        </trans-unit>
        <trans-unit id="e767b9d29c718b4529dde90bff5a9a9f50f45fe3" translate="yes" xml:space="preserve">
          <source>When you're using the flash, it's generally used as a conditional on the view. This means the content of the view depends on the flash. Which in turn means that the ETag for a response should be computed with the content of the flash in mind. This does that by including the content of the flash as a component in the ETag that's generated for a response.</source>
          <target state="translated">当你在使用flash的时候,一般都是作为视图的条件来使用的。这意味着视图的内容取决于flash。这反过来又意味着,在计算响应的ETag时应该考虑到flash的内容。这就是通过将flash的内容作为一个组件包含在为响应生成的ETag中来实现的。</target>
        </trans-unit>
        <trans-unit id="2419ec26681d2a042ad7890cfc0ae5349da6ef3e" translate="yes" xml:space="preserve">
          <source>When your Rails application receives an incoming request for:</source>
          <target state="translated">当您的Rails应用程序收到一个传入的请求时,您的Rails应用程序就会。</target>
        </trans-unit>
        <trans-unit id="b845f5784fbe1b995c2a6848e69096864fa27699" translate="yes" xml:space="preserve">
          <source>When your application receives its first request to this page, Rails will write a new cache entry with a unique key. A key looks something like this:</source>
          <target state="translated">当您的应用程序收到对该页面的第一个请求时,Rails 会用一个独特的 key 写一个新的缓存条目。一个键看起来像这样。</target>
        </trans-unit>
        <trans-unit id="7ae5e91279598923cb321d1228b42d97c7d86e1c" translate="yes" xml:space="preserve">
          <source>When your code is behaving in unexpected ways, you can try printing to logs or the console to diagnose the problem. Unfortunately, there are times when this sort of error tracking is not effective in finding the root cause of a problem. When you actually need to journey into your running source code, the debugger is your best companion.</source>
          <target state="translated">当你的代码表现得出乎意料时,你可以尝试打印到日志或控制台来诊断问题。不幸的是,有些时候,这种错误跟踪并不能有效地找到问题的根源。当你真正需要前往你正在运行的源代码时,调试器是你最好的伙伴。</target>
        </trans-unit>
        <trans-unit id="bda221b7f1c1720cd4c59a2f7ad9d2e8e7f15264" translate="yes" xml:space="preserve">
          <source>When your models are additionally using inheritance then the messages are looked up in the inheritance chain.</source>
          <target state="translated">当你的模型另外使用继承的时候,那么消息就会在继承链中查找。</target>
        </trans-unit>
        <trans-unit id="7a353e2b115d12d337b6f6f4eb9d0776ee5f3b8a" translate="yes" xml:space="preserve">
          <source>Whenever Rails sees that the internal value of an option being generated matches this value, it will add the &lt;code&gt;selected&lt;/code&gt; attribute to that option.</source>
          <target state="translated">每当Rails看到正在生成的选项的内部值与此值匹配时，就会将 &lt;code&gt;selected&lt;/code&gt; 属性添加到该选项。</target>
        </trans-unit>
        <trans-unit id="2c22f0a718ae1833492a4aa8d0f2fa9791a01239" translate="yes" xml:space="preserve">
          <source>Whenever the user is allowed to pass (parts of) the URL for redirection, it is possibly vulnerable. The most obvious attack would be to redirect users to a fake web application which looks and feels exactly as the original one. This so-called phishing attack works by sending an unsuspicious link in an email to the users, injecting the link by XSS in the web application or putting the link into an external site. It is unsuspicious, because the link starts with the URL to the web application and the URL to the malicious site is hidden in the redirection parameter: &lt;a href=&quot;http://www.example.com/site/redirect?to=www.attacker.com&quot;&gt;http://www.example.com/site/redirect?to=www.attacker.com&lt;/a&gt;. Here is an example of a legacy action:</source>
          <target state="translated">只要允许用户传递URL（的一部分）进行重定向，它就很容易受到攻击。最明显的攻击是将用户重定向到伪造的Web应用程序，该应用程序的外观和感觉与原始应用程序完全相同。这种所谓的网络钓鱼攻击是通过向用户发送电子邮件中的不可信链接，通过XSS在Web应用程序中注入链接或将链接放入外部站点来实现的。这是毫无疑问的，因为该链接以指向Web应用程序的URL开头，并且指向恶意站点的URL隐藏在重定向参数中：&lt;a href=&quot;http://www.example.com/site/redirect?to=www.attacker.com&quot;&gt;http&lt;/a&gt; : //www.example.com/site/redirect? to=www.attacker.com 。这是旧操作的示例：</target>
        </trans-unit>
        <trans-unit id="bc0d4cf1cf59423fe9009dbb43b8c242face6a8a" translate="yes" xml:space="preserve">
          <source>Where &lt;code&gt;&amp;lt;attribute&amp;gt;&lt;/code&gt; is the attribute you asked for. The &lt;code&gt;id&lt;/code&gt; method will not raise the &lt;code&gt;ActiveRecord::MissingAttributeError&lt;/code&gt;, so just be careful when working with associations because they need the &lt;code&gt;id&lt;/code&gt; method to function properly.</source>
          <target state="translated">其中 &lt;code&gt;&amp;lt;attribute&amp;gt;&lt;/code&gt; 是您要求的属性。该 &lt;code&gt;id&lt;/code&gt; 的方法不会提高 &lt;code&gt;ActiveRecord::MissingAttributeError&lt;/code&gt; ，与各协会工作时，所以要小心，因为他们需要的 &lt;code&gt;id&lt;/code&gt; 的方法来正常运行。</target>
        </trans-unit>
        <trans-unit id="dc5b1184716c4aa509982bd4144d580b5c5090f5" translate="yes" xml:space="preserve">
          <source>Where &lt;code&gt;@document = Document.find(params[:id])&lt;/code&gt; and &lt;code&gt;@comment = Comment.new&lt;/code&gt;.</source>
          <target state="translated">其中 &lt;code&gt;@document = Document.find(params[:id])&lt;/code&gt; 和 &lt;code&gt;@comment = Comment.new&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="630719e48d4bfb3c213e28dc49a696ef565260fd" translate="yes" xml:space="preserve">
          <source>Where &lt;code&gt;@document = Document.find(params[:id])&lt;/code&gt;.</source>
          <target state="translated">其中 &lt;code&gt;@document = Document.find(params[:id])&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="09f2188d3f99b86c66b2904368987ac4755f07dc" translate="yes" xml:space="preserve">
          <source>Where &lt;code&gt;param_encoder&lt;/code&gt; defines how the params should be encoded and &lt;code&gt;response_parser&lt;/code&gt; defines how the response body should be parsed through &lt;code&gt;parsed_body&lt;/code&gt;.</source>
          <target state="translated">其中 &lt;code&gt;param_encoder&lt;/code&gt; 定义应如何编码参数， &lt;code&gt;response_parser&lt;/code&gt; 定义应如何通过 &lt;code&gt;parsed_body&lt;/code&gt; 解析响应主体。</target>
        </trans-unit>
        <trans-unit id="711c57f445c6ba37efbd613d810b8b02a1d2f9b2" translate="yes" xml:space="preserve">
          <source>Where different files are required by the boot sequence.</source>
          <target state="translated">如果启动序列需要不同的文件。</target>
        </trans-unit>
        <trans-unit id="b383219238b74df182bca03af2be60732306af0f" translate="yes" xml:space="preserve">
          <source>Where is a Given Autoload Triggered?</source>
          <target state="translated">指定的自动加载在哪里被触发?</target>
        </trans-unit>
        <trans-unit id="9684da1350da426516e1f9c0f4d222729aacc28a" translate="yes" xml:space="preserve">
          <source>Where possible, prefer &lt;code&gt;wrap&lt;/code&gt;.</source>
          <target state="translated">在可能的情况下，最好使用 &lt;code&gt;wrap&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="90ccad0a7f6f447de287f19be40451cd5cc7c457" translate="yes" xml:space="preserve">
          <source>Where the deprecation came from</source>
          <target state="translated">从哪里来的废止</target>
        </trans-unit>
        <trans-unit id="cb51e44d283a54cce4eb3a11c3f93da75a2054cf" translate="yes" xml:space="preserve">
          <source>Whereas for an existing table, it might look like this:</source>
          <target state="translated">而对于一个现有的表,它可能是这样的。</target>
        </trans-unit>
        <trans-unit id="a606b9ee89ce92b8b1fe80fe03dfcea2bdb46053" translate="yes" xml:space="preserve">
          <source>Whether a one-to-one or one-to-many style form builder will be yielded depends on whether the normal reader method returns a &lt;em&gt;single&lt;/em&gt; object or an &lt;em&gt;array&lt;/em&gt; of objects.</source>
          <target state="translated">产生一对一样式还是一对多样式的表单生成器取决于普通的读取器方法返回&lt;em&gt;单个&lt;/em&gt;对象还是对象&lt;em&gt;数组&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="5cfb0f473d6e2c39d849373d914053ed3accb240" translate="yes" xml:space="preserve">
          <source>Whether an additional &lt;code&gt;_type&lt;/code&gt; column should be added. Defaults to false.</source>
          <target state="translated">是否应添加其他 &lt;code&gt;_type&lt;/code&gt; 列。默认为false。</target>
        </trans-unit>
        <trans-unit id="377ed4dce20d3262b60586a077e6f1e9a655802a" translate="yes" xml:space="preserve">
          <source>Whether delivery of this message is performed or not</source>
          <target state="translated">是否执行该信息的传递</target>
        </trans-unit>
        <trans-unit id="707944ef603c96a8f983086d1b09ebbc3c97dc21" translate="yes" xml:space="preserve">
          <source>Whether or not errors should be raised if the email fails to be delivered. This only works if the external email server is configured for immediate delivery.</source>
          <target state="translated">如果电子邮件未能送达,是否应该发出错误。只有当外部电子邮件服务器被配置为立即发送时,该选项才会生效。</target>
        </trans-unit>
        <trans-unit id="17c8ca51793d6084fc1a82afdf18760bc96c7380" translate="yes" xml:space="preserve">
          <source>Whether the column allows nulls. Defaults to true.</source>
          <target state="translated">该列是否允许空值。默认为true。</target>
        </trans-unit>
        <trans-unit id="05c3fee19a974111fa7506a08df68f29fb4ba473" translate="yes" xml:space="preserve">
          <source>Whether to automatically add a primary key column. Defaults to true. Join tables for &lt;a href=&quot;../associations/classmethods#method-i-has_and_belongs_to_many&quot;&gt;ActiveRecord::Base.has_and_belongs_to_many&lt;/a&gt; should set it to false.</source>
          <target state="translated">是否自动添加主键列。默认为true。&lt;a href=&quot;../associations/classmethods#method-i-has_and_belongs_to_many&quot;&gt;ActiveRecord :: Base.has_and_belongs_to_many的&lt;/a&gt;联接表应将其设置为false。</target>
        </trans-unit>
        <trans-unit id="d492c04afc4a5e9b28b6c98b83037b0f73faa754" translate="yes" xml:space="preserve">
          <source>Whether to print a backtrace along with the warning.</source>
          <target state="translated">是否在警告的同时打印回溯。</target>
        </trans-unit>
        <trans-unit id="044267609b9e2af9e168fb11303f2e04f2afcc62" translate="yes" xml:space="preserve">
          <source>Whether to print a message (silent mode)</source>
          <target state="translated">是否打印信息(静音模式)</target>
        </trans-unit>
        <trans-unit id="85cdd85cd5a0d312a5bc61b03a7d14dd40c3fd7a" translate="yes" xml:space="preserve">
          <source>Which Constants Have Been Autoloaded?</source>
          <target state="translated">哪些常量已经被自动加载?</target>
        </trans-unit>
        <trans-unit id="44975897bac66ee81456ff845b5c4cfaef405d16" translate="yes" xml:space="preserve">
          <source>Which allows you to quickly change your code to:</source>
          <target state="translated">这让你可以快速的将你的代码改成。</target>
        </trans-unit>
        <trans-unit id="dfd42080986ebe8f42efa80ee9acd153fbfcc07e" translate="yes" xml:space="preserve">
          <source>Which are then automatically available to the view:</source>
          <target state="translated">哪些就会自动提供给查看。</target>
        </trans-unit>
        <trans-unit id="70ed05e9fe979dea75cdfb0d39d9338a537b0f68" translate="yes" xml:space="preserve">
          <source>Which attributes have changed?</source>
          <target state="translated">哪些属性发生了变化?</target>
        </trans-unit>
        <trans-unit id="bbc3aa1484bfc575cc8022101786270eed1c28d6" translate="yes" xml:space="preserve">
          <source>Which in turn renders this view:</source>
          <target state="translated">这又渲染了这个观点。</target>
        </trans-unit>
        <trans-unit id="3550af04ce4cdba3de5085c8ca4b0eb59bfe7c34" translate="yes" xml:space="preserve">
          <source>Which is approximately the same as writing this:</source>
          <target state="translated">这和写这个大约是一样的。</target>
        </trans-unit>
        <trans-unit id="ef899c65508c2169a5ab932765b510c390e0e7b5" translate="yes" xml:space="preserve">
          <source>Which is not the desired lookup. You can change it by providing the :as option:</source>
          <target state="translated">这不是你想要的查找方式。你可以通过提供:as选项来改变它。</target>
        </trans-unit>
        <trans-unit id="773f331a034a6994f65198f476b78134a7871354" translate="yes" xml:space="preserve">
          <source>Which is what we expected. We can now tell scaffold to use our new helper generator by editing &lt;code&gt;config/application.rb&lt;/code&gt; once again:</source>
          <target state="translated">这是我们所期望的。现在，我们可以再次编辑 &lt;code&gt;config/application.rb&lt;/code&gt; 来告诉scaffold使用新的辅助生成器：</target>
        </trans-unit>
        <trans-unit id="e4f021bcea7ce82f3994d96e4eb9ee4b7be56dbc" translate="yes" xml:space="preserve">
          <source>Which means: &quot;return all authors with their count of posts, whether or not they have any posts at all&quot;</source>
          <target state="translated">这意味着:&quot;返回所有作者的帖子数,无论他们是否有任何帖子&quot;</target>
        </trans-unit>
        <trans-unit id="06dbe543f6a658cb185a9151eaa8103808649f61" translate="yes" xml:space="preserve">
          <source>Which one you use is really a matter of style and convention, but the rule of thumb is to use the simplest one that makes sense for the code you are writing.</source>
          <target state="translated">使用哪种方法其实是一个风格和习惯的问题,但经验法则是使用最简单的方法,这样对你正在写的代码才有意义。</target>
        </trans-unit>
        <trans-unit id="3631991286d3139c1de9a41ef4982f8e5d886ce2" translate="yes" xml:space="preserve">
          <source>Which produces:</source>
          <target state="translated">这就产生了:</target>
        </trans-unit>
        <trans-unit id="eb8d6e059ec60b567436efa763d6ea1befe48471" translate="yes" xml:space="preserve">
          <source>Which provides you with the full standard validation stack that you know from Active Record:</source>
          <target state="translated">它为你提供了完整的标准验证栈,你从Active Record中了解到。</target>
        </trans-unit>
        <trans-unit id="fd3a3d542d4bc90b3f4c1841760539b30c13ec8e" translate="yes" xml:space="preserve">
          <source>Which then will result in</source>
          <target state="translated">这将导致</target>
        </trans-unit>
        <trans-unit id="f33472b10165ce8ea92306d6246af46d215e4ed8" translate="yes" xml:space="preserve">
          <source>Which will (if it had both a &lt;code&gt;welcome.text.erb&lt;/code&gt; and &lt;code&gt;welcome.html.erb&lt;/code&gt; template in the view directory), send a complete &lt;code&gt;multipart/mixed&lt;/code&gt; email with two parts, the first part being a &lt;code&gt;multipart/alternative&lt;/code&gt; with the text and HTML email parts inside, and the second being a &lt;code&gt;application/pdf&lt;/code&gt; with a Base64 encoded copy of the file.pdf book with the filename &lt;code&gt;free_book.pdf&lt;/code&gt;.</source>
          <target state="translated">它将（如果它在视图目录中同时具有 &lt;code&gt;welcome.text.erb&lt;/code&gt; 和 &lt;code&gt;welcome.html.erb&lt;/code&gt; 模板），则发送完整的由两部分组成的 &lt;code&gt;multipart/mixed&lt;/code&gt; 电子邮件，第一部分是包含文本和HTML 的 &lt;code&gt;multipart/alternative&lt;/code&gt; 电子邮件部分，第二个是 &lt;code&gt;application/pdf&lt;/code&gt; 其中包含file.pdf书籍的Base64编码副本，文件 &lt;code&gt;free_book.pdf&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a29c23638fe9267ee418398803d58ab9385fb1c6" translate="yes" xml:space="preserve">
          <source>Which will execute:</source>
          <target state="translated">这将执行。</target>
        </trans-unit>
        <trans-unit id="4584b968ef8035bde2a7e704853bd070950acfde" translate="yes" xml:space="preserve">
          <source>Which will render a &lt;code&gt;multipart/alternative&lt;/code&gt; email with &lt;code&gt;text/plain&lt;/code&gt; and &lt;code&gt;text/html&lt;/code&gt; parts.</source>
          <target state="translated">它将呈现包含 &lt;code&gt;text/plain&lt;/code&gt; &lt;code&gt;text/html&lt;/code&gt; 和文本/ html部分的 &lt;code&gt;multipart/alternative&lt;/code&gt; 电子邮件。</target>
        </trans-unit>
        <trans-unit id="f4b437e2a757f07a96f3bfea1607d0cbe8dba1b9" translate="yes" xml:space="preserve">
          <source>Which will then result in the following:</source>
          <target state="translated">这将导致以下结果:</target>
        </trans-unit>
        <trans-unit id="4456171cd4cc8074d8af762f53b44a9a7090c527" translate="yes" xml:space="preserve">
          <source>Which would produce:</source>
          <target state="translated">这将产生:</target>
        </trans-unit>
        <trans-unit id="290e790bf6faaea91abdd44de8d4ac5d40ed764a" translate="yes" xml:space="preserve">
          <source>Which would provide you with:</source>
          <target state="translated">这将为你提供:</target>
        </trans-unit>
        <trans-unit id="5615d4442d1bffa921b43a242c0716146447b868" translate="yes" xml:space="preserve">
          <source>While &lt;code&gt;form_with&lt;/code&gt; uses a &lt;a href=&quot;formbuilder&quot;&gt;FormBuilder&lt;/a&gt; object it's possible to mix and match the stand-alone &lt;a href=&quot;formhelper&quot;&gt;FormHelper&lt;/a&gt; methods and methods from FormTagHelper:</source>
          <target state="translated">虽然 &lt;code&gt;form_with&lt;/code&gt; 使用&lt;a href=&quot;formbuilder&quot;&gt;FormBuilder&lt;/a&gt;对象，但可以混合并匹配独立的&lt;a href=&quot;formhelper&quot;&gt;FormHelper&lt;/a&gt;方法和FormTagHelper中的方法：</target>
        </trans-unit>
        <trans-unit id="d09898f0950964f8cd539cf8e470c95a79351fb1" translate="yes" xml:space="preserve">
          <source>While &lt;code&gt;indent_string&lt;/code&gt; is typically one space or tab, it may be any string.</source>
          <target state="translated">尽管 &lt;code&gt;indent_string&lt;/code&gt; 通常是一个空格或制表符，但它可以是任何字符串。</target>
        </trans-unit>
        <trans-unit id="f0648e73508d98ce9948771ae9ff3139d98f150d" translate="yes" xml:space="preserve">
          <source>While &lt;code&gt;send_data&lt;/code&gt; works just fine, if you are creating a RESTful application having separate actions for file downloads is usually not necessary. In REST terminology, the PDF file from the example above can be considered just another representation of the client resource. Rails provides an easy and quite sleek way of doing &quot;RESTful downloads&quot;. Here's how you can rewrite the example so that the PDF download is a part of the &lt;code&gt;show&lt;/code&gt; action, without any streaming:</source>
          <target state="translated">尽管 &lt;code&gt;send_data&lt;/code&gt; 可以正常工作，但是如果创建的是RESTful应用程序，则通常无需对文件下载进行单独的操作。用REST术语，可以将以上示例中的PDF文件视为客户端资源的另一种表示形式。Rails提供了一种简单而流畅的方式来进行&amp;ldquo; RESTful下载&amp;rdquo;。您可以通过以下方式重写示例，以使PDF下载成为 &lt;code&gt;show&lt;/code&gt; 操作的一部分，而无需任何流式处理：</target>
        </trans-unit>
        <trans-unit id="a6b071055ebfe5d2a68d7bcacb175353242234a9" translate="yes" xml:space="preserve">
          <source>While Rails supports numbering of initializer file names for load ordering purposes, a better technique is to place any code that need to load in a specific order within the same file. This reduces file name churn, makes dependencies more explicit, and can help surface new concepts within your application.</source>
          <target state="translated">虽然 Rails 支持对初始化器文件名进行编号,以达到加载排序的目的,但更好的技术是将所有需要加载的代码按特定顺序放在同一个文件中。这可以减少文件名的混乱,使依赖关系更加明确,并有助于在您的应用程序中发现新的概念。</target>
        </trans-unit>
        <trans-unit id="79f2cfa8d6e7362df1260664b1c3801080f3405c" translate="yes" xml:space="preserve">
          <source>While Rails tries to do most of the work for you there are still some steps you'll need to do to get your application ready for multiple databases.</source>
          <target state="translated">虽然Rails试图为您完成大部分工作,但您仍然需要采取一些步骤,以使您的应用程序为多个数据库做好准备。</target>
        </trans-unit>
        <trans-unit id="93790c8337c44cc473c652d5bb369213f682d787" translate="yes" xml:space="preserve">
          <source>While Rails uses intelligent defaults that will work well in most situations, there may be times when you want to customize the behavior of the &lt;code&gt;belongs_to&lt;/code&gt; association reference. Such customizations can easily be accomplished by passing options and scope blocks when you create the association. For example, this association uses two such options:</source>
          <target state="translated">尽管Rails使用的智能默认值在大多数情况下都可以正常工作，但是有时您可能希望自定义 &lt;code&gt;belongs_to&lt;/code&gt; 关联引用的行为。创建关联时，可以通过传递选项和作用域块来轻松实现此类自定义。例如，此关联使用两个这样的选项：</target>
        </trans-unit>
        <trans-unit id="ce00d1e69418d733da1a6debee500af28c199a35" translate="yes" xml:space="preserve">
          <source>While Rails uses intelligent defaults that will work well in most situations, there may be times when you want to customize the behavior of the &lt;code&gt;has_and_belongs_to_many&lt;/code&gt; association reference. Such customizations can easily be accomplished by passing options when you create the association. For example, this association uses two such options:</source>
          <target state="translated">尽管Rails使用智能默认值在大多数情况下都能正常工作，但有时您可能希望自定义 &lt;code&gt;has_and_belongs_to_many&lt;/code&gt; 关联引用的行为。创建关联时，可以通过传递选项来轻松实现此类自定义。例如，此关联使用两个这样的选项：</target>
        </trans-unit>
        <trans-unit id="55870d2f7ea017e1232e597872c82fb8b5918dd0" translate="yes" xml:space="preserve">
          <source>While Rails uses intelligent defaults that will work well in most situations, there may be times when you want to customize the behavior of the &lt;code&gt;has_many&lt;/code&gt; association reference. Such customizations can easily be accomplished by passing options when you create the association. For example, this association uses two such options:</source>
          <target state="translated">尽管Rails使用智能默认值在大多数情况下都能正常工作，但是有时您可能希望自定义 &lt;code&gt;has_many&lt;/code&gt; 关联引用的行为。创建关联时，可以通过传递选项来轻松实现此类自定义。例如，此关联使用两个这样的选项：</target>
        </trans-unit>
        <trans-unit id="cceb89d24af228ef365c7347311cea1b5314922b" translate="yes" xml:space="preserve">
          <source>While Rails uses intelligent defaults that will work well in most situations, there may be times when you want to customize the behavior of the &lt;code&gt;has_one&lt;/code&gt; association reference. Such customizations can easily be accomplished by passing options when you create the association. For example, this association uses two such options:</source>
          <target state="translated">尽管Rails使用智能默认值在大多数情况下都能正常工作，但有时您可能希望自定义 &lt;code&gt;has_one&lt;/code&gt; 关联引用的行为。创建关联时，可以通过传递选项来轻松实现此类自定义。例如，此关联使用两个这样的选项：</target>
        </trans-unit>
        <trans-unit id="f675fd2794cf3e97a6a37913e5e53468953275f6" translate="yes" xml:space="preserve">
          <source>While a CDN is described as being good for caching assets, in reality caches the entire request. This includes the body of the asset as well as any headers. The most important one being &lt;code&gt;Cache-Control&lt;/code&gt; which tells the CDN (and web browsers) how to cache contents. This means that if someone requests an asset that does not exist &lt;code&gt;/assets/i-dont-exist.png&lt;/code&gt; and your Rails application returns a 404, then your CDN will likely cache the 404 page if a valid &lt;code&gt;Cache-Control&lt;/code&gt; header is present.</source>
          <target state="translated">虽然CDN被描述为适合缓存资产，但实际上可以缓存整个请求。这包括资产的主体以及任何标题。最重要的是 &lt;code&gt;Cache-Control&lt;/code&gt; ，它告诉CDN（和Web浏览器）如何缓存内容。这意味着，如果有人请求不存在的资产 &lt;code&gt;/assets/i-dont-exist.png&lt;/code&gt; 并且您的Rails应用程序返回404，那么如果存在有效的 &lt;code&gt;Cache-Control&lt;/code&gt; 标头，则您的CDN可能会缓存404页面。</target>
        </trans-unit>
        <trans-unit id="c854cc5ae403c51c09fc46e865852b80b7105c01" translate="yes" xml:space="preserve">
          <source>While applications should stick to that interface, the actual Zeitwerk loader object can be accessed as</source>
          <target state="translated">虽然应用程序应该坚持使用该接口,但实际的Zeitwerk加载器对象可以被访问为</target>
        </trans-unit>
        <trans-unit id="224e6f8bb06b6abc629c5879b0e0841576ac3fe5" translate="yes" xml:space="preserve">
          <source>While constants are trivial in most programming languages, they are a rich topic in Ruby.</source>
          <target state="translated">虽然常量在大多数编程语言中是微不足道的,但在Ruby中却是一个丰富的话题。</target>
        </trans-unit>
        <trans-unit id="036d9032d77f439369551baaa0b9f2de113ffef6" translate="yes" xml:space="preserve">
          <source>While executing the given block, the recorded will be in reverting mode. All commands recorded will end up being recorded reverted and in reverse order. For example:</source>
          <target state="translated">当执行给定的程序块时,记录的内容将进入还原模式,所有记录的命令将以相反的顺序被还原。所有记录的命令都将被还原,并以相反的顺序记录。例如,在执行给定的程序块时,所有记录的命令都会被还原,并且顺序相反。</target>
        </trans-unit>
        <trans-unit id="0b70ce16096579aa5e925a4c792e06ceb933d95c" translate="yes" xml:space="preserve">
          <source>While if it did it the other way around the result would be different:</source>
          <target state="translated">而如果反过来做,结果就不一样了。</target>
        </trans-unit>
        <trans-unit id="f979419e932afa8e68d008b3e1ab37cd29aa2517" translate="yes" xml:space="preserve">
          <source>While in a small application, this added latency might not be a problem, it is something to think about if response time is a concern. We can demonstrate one way to handle this with a contrived example:</source>
          <target state="translated">虽然在一个小的应用中,这种增加的延迟可能不是问题,但如果响应时间是一个问题,那就需要考虑了。我们可以用一个人为的例子来演示处理这个问题的一种方法。</target>
        </trans-unit>
        <trans-unit id="e1a7831a520be794fae3c9d9191a28b283a7e2ca" translate="yes" xml:space="preserve">
          <source>While it's not required you might want to add foreign key constraints to &lt;a href=&quot;#active-record-and-referential-integrity&quot;&gt;guarantee referential integrity&lt;/a&gt;.</source>
          <target state="translated">尽管这不是必需的，但您可能需要添加外键约束以&lt;a href=&quot;#active-record-and-referential-integrity&quot;&gt;确保引用完整性&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="afecea99fad666297024ea84b5aa5cd03c83d6cd" translate="yes" xml:space="preserve">
          <source>While it's strongly recommended that you use key-based cache expiration (see links in CacheHelper for more information), it is also possible to manually expire caches. For example:</source>
          <target state="translated">虽然强烈建议你使用基于密钥的缓存过期(更多信息请参见CacheHelper中的链接),但也可以手动过期缓存。例如</target>
        </trans-unit>
        <trans-unit id="6c3dc422b84d760b26a9eea8036290acf5307153" translate="yes" xml:space="preserve">
          <source>While the default routes and helpers generated by &lt;code&gt;resources :articles&lt;/code&gt; will usually serve you well, you may want to customize them in some way. Rails allows you to customize virtually any generic part of the resourceful helpers.</source>
          <target state="translated">尽管由 &lt;code&gt;resources :articles&lt;/code&gt; article生成的默认路由和帮助程序通常可以为您提供良好的服务，但是您可能希望以某种方式对其进行自定义。Rails允许您自定义资源丰富的帮助程序的几乎所有常规部分。</target>
        </trans-unit>
        <trans-unit id="d989e21059962a67b936bb165b05550f5f5204d6" translate="yes" xml:space="preserve">
          <source>While the most common way to use filters is by creating private methods and using *_action to add them, there are two other ways to do the same thing.</source>
          <target state="translated">虽然最常见的使用过滤器的方法是通过创建私有方法并使用*_action来添加它们,但还有两种方法可以做同样的事情。</target>
        </trans-unit>
        <trans-unit id="f90be4399bcd34e5b04c6a8dc5053f9fc06be654" translate="yes" xml:space="preserve">
          <source>While these column names are optional, they are in fact reserved by Active Record. Steer clear of reserved keywords unless you want the extra functionality. For example, &lt;code&gt;type&lt;/code&gt; is a reserved keyword used to designate a table using Single Table Inheritance (STI). If you are not using STI, try an analogous keyword like &quot;context&quot;, that may still accurately describe the data you are modeling.</source>
          <target state="translated">这些列名称是可选的，但实际上它们是Active Record保留的。除非您需要其他功能，否则请避免使用保留的关键字。例如， &lt;code&gt;type&lt;/code&gt; 是用于使用单表继承（STI）来指定表的保留关键字。如果您不使用STI，请尝试使用类似&amp;ldquo; context&amp;rdquo;的类似关键字，该关键字仍可以准确地描述您正在建模的数据。</target>
        </trans-unit>
        <trans-unit id="3829b8bb4b55dc17a4b6a7e2276f46b250ae4873" translate="yes" xml:space="preserve">
          <source>While this creates the subscription, the functionality needed to respond to received data will be described later on.</source>
          <target state="translated">虽然这样就创建了订阅,但对收到的数据进行响应所需的功能将在后面介绍。</target>
        </trans-unit>
        <trans-unit id="2e2f8c9ad37d011518527ddb615ec4c389722f38" translate="yes" xml:space="preserve">
          <source>While this is an increase in comfort it is far from perfect. If &lt;code&gt;Person&lt;/code&gt; has many attributes to edit then we would be repeating the name of the edited object many times. What we want to do is somehow bind a form to a model object, which is exactly what &lt;code&gt;form_with&lt;/code&gt; with &lt;code&gt;:model&lt;/code&gt; does.</source>
          <target state="translated">虽然这增加了舒适度，但却远非完美。如果 &lt;code&gt;Person&lt;/code&gt; 具有许多要编辑的属性，那么我们将多次重复被编辑对象的名称。我们想要做的就是以某种方式将表单绑定到模型对象，这正是 &lt;code&gt;form_with&lt;/code&gt; 和 &lt;code&gt;:model&lt;/code&gt; 所做的。</target>
        </trans-unit>
        <trans-unit id="af9162b567e7ccd9709565023087ccc802dfc61e" translate="yes" xml:space="preserve">
          <source>While we avoid the race condition between SELECT -&amp;gt; INSERT from &lt;a href=&quot;relation#method-i-find_or_create_by&quot;&gt;find_or_create_by&lt;/a&gt;, we actually have another race condition between INSERT -&amp;gt; SELECT, which can be triggered if a DELETE between those two statements is run by another client. But for most applications, that's a significantly less likely condition to hit.</source>
          <target state="translated">尽管我们避免了&lt;a href=&quot;relation#method-i-find_or_create_by&quot;&gt;find_or_create_by中&lt;/a&gt; SELECT-&amp;gt; INSERT之间的竞争条件，但实际上，我们在INSERT- &amp;gt; SELECT之间还有另一个竞争条件，如果这两个语句之间的DELETE由另一个客户端运行，则可以触发该竞争条件。但是对于大多数应用程序而言，这种情况发生的可能性要小得多。</target>
        </trans-unit>
        <trans-unit id="525d589d595b7b8807dd7eb8f0c3e0db904df25d" translate="yes" xml:space="preserve">
          <source>While working with &lt;code&gt;Polygon&lt;/code&gt; you do not need to be aware of all its descendants, because anything in the table is by definition a polygon, but when working with subclasses Active Record needs to be able to enumerate the types it is looking for. Let's see an example.</source>
          <target state="translated">在使用 &lt;code&gt;Polygon&lt;/code&gt; 时,您不需要知道其所有后代，因为表中的任何内容都是定义为多边形的，但是在使用子类时，Active Record需要能够枚举其要查找的类型。让我们来看一个例子。</target>
        </trans-unit>
        <trans-unit id="10ca2304c5436d2eedf4c9b8b44bc81f63147f5d" translate="yes" xml:space="preserve">
          <source>While you are here, change the Hickwall and Wickwall models so that they know that they are supposed to act like yaffles.</source>
          <target state="translated">当你在这里的时候,改变Hickwall和Wickwall模型,让他们知道,他们应该像雅弗尔一样行动。</target>
        </trans-unit>
        <trans-unit id="0c6c26e8f9bd26f5186077569aa13edc15f86912" translate="yes" xml:space="preserve">
          <source>While you can setup as many rotations as you'd like it's not common to have many rotations going at any one time.</source>
          <target state="translated">虽然你可以设置尽可能多的旋转,但在任何时候都不会有很多旋转。</target>
        </trans-unit>
        <trans-unit id="87e1ea61c9a1c54528d71d3a4ab31bebde1708c7" translate="yes" xml:space="preserve">
          <source>While you could obviously build these up in terms of existing Rack middleware, this list demonstrates that the default Rails middleware stack provides a lot of value, even if you're &quot;just generating JSON&quot;.</source>
          <target state="translated">虽然你很明显可以用现有的Rack中间件来构建这些东西,但这个列表表明,默认的Rails中间件堆栈提供了很多价值,即使你 &quot;只是生成JSON&quot;。</target>
        </trans-unit>
        <trans-unit id="45681547956f9f5c6b82580cfc860375a7abb060" translate="yes" xml:space="preserve">
          <source>While you should usually use resourceful routing, there are still many places where the simpler routing is more appropriate. There's no need to try to shoehorn every last piece of your application into a resourceful framework if that's not a good fit.</source>
          <target state="translated">虽然你通常应该使用资源丰富的路由,但还是有很多地方更适合使用简单的路由。如果不适合的话,没有必要试图将你的应用程序的最后一个部分都塞进资源丰富的框架中。</target>
        </trans-unit>
        <trans-unit id="7f1f40e553d7069f8daf618021ec20ecbe50f53f" translate="yes" xml:space="preserve">
          <source>Whilst the final section of this guide doesn't cover how to generate the most awesome template known to man, it will take you through the methods available at your disposal so that you can develop it yourself. These same methods are also available for generators.</source>
          <target state="translated">虽然本指南的最后一节并不涉及如何生成人类已知的最棒的模板,但它将带你了解可用的方法,以便你可以自己开发它。这些同样的方法也可用于生成器。</target>
        </trans-unit>
        <trans-unit id="701dfc11e1dae3ffe96a98471b3b0487d935a5e7" translate="yes" xml:space="preserve">
          <source>Why Associations?</source>
          <target state="translated">为什么是协会?</target>
        </trans-unit>
        <trans-unit id="d5c58acc9f909b668f11453a210cd84b3a1c03d6" translate="yes" xml:space="preserve">
          <source>Why Use Rails for JSON APIs?</source>
          <target state="translated">为什么使用Rails做JSON API?</target>
        </trans-unit>
        <trans-unit id="e17582dabb3d0d2d831afcca55a5f0ed7faca185" translate="yes" xml:space="preserve">
          <source>Why Use Validations?</source>
          <target state="translated">为什么要使用验证?</target>
        </trans-unit>
        <trans-unit id="f5747762903b01a1fead86e6ac747f334d8116be" translate="yes" xml:space="preserve">
          <source>Why Write Tests for your Rails Applications?</source>
          <target state="translated">为什么要为Rails应用编写测试?</target>
        </trans-unit>
        <trans-unit id="585c960e42dfb2ab8e2ee37cf9fd2412214d3ddd" translate="yes" xml:space="preserve">
          <source>Why do you have to bother? The ability to grab and automatically assign all controller parameters to your model in one shot makes the programmer's job easier, but this convenience also allows malicious use. What if a request to the server was crafted to look like a new article form submit but also included extra fields with values that violated your application's integrity? They would be 'mass assigned' into your model and then into the database along with the good stuff - potentially breaking your application or worse.</source>
          <target state="translated">为什么要这么麻烦呢?一次性抓取并自动将所有控制器参数分配给你的模型的能力让程序员的工作变得更容易,但这种便利性也允许恶意使用。如果对服务器的请求被制作成看起来像一个新的文章表单提交,但也包括额外的字段,其值违反了你的应用程序的完整性,那会怎样?它们会被 &quot;大量分配 &quot;到你的模型中,然后和好的东西一起进入数据库--有可能破坏你的应用程序或更糟。</target>
        </trans-unit>
        <trans-unit id="e73a0adf49ce87cd4425cf968e3b325d32771834" translate="yes" xml:space="preserve">
          <source>Width (pixels)</source>
          <target state="translated">宽度(像素)</target>
        </trans-unit>
        <trans-unit id="5105ea248c9d8b78c6ce0a0e71bc7142f5f3becc" translate="yes" xml:space="preserve">
          <source>Wildcard segments can occur anywhere in a route. For example:</source>
          <target state="translated">通配符段可以出现在途径的任何地方。例如:</target>
        </trans-unit>
        <trans-unit id="96a2439d5c9d1d9d35a8bdb658068485b593bcb9" translate="yes" xml:space="preserve">
          <source>Will be a completely different cache from</source>
          <target state="translated">将是一个完全不同的缓存,与</target>
        </trans-unit>
        <trans-unit id="106d426620d8566fec8d5ffe2324e041059666ee" translate="yes" xml:space="preserve">
          <source>Will load a file named &lt;code&gt;hotels/hotel.erb&lt;/code&gt;.</source>
          <target state="translated">将加载名为 &lt;code&gt;hotels/hotel.erb&lt;/code&gt; 的文件。</target>
        </trans-unit>
        <trans-unit id="be2aec11575f04e992e11f7ecbb99b860fde279e" translate="yes" xml:space="preserve">
          <source>Will load a file named &lt;code&gt;hotels/hotel.html.erb&lt;/code&gt; in any file mime type, for example you could include this partial in a JavaScript file.</source>
          <target state="translated">将以任何文件MIME类型加载名为 &lt;code&gt;hotels/hotel.html.erb&lt;/code&gt; 的文件，例如，您可以将此部分包含在JavaScript文件中。</target>
        </trans-unit>
        <trans-unit id="3f5d9587d86aa8f131bedd2a2c29c74b77cc5864" translate="yes" xml:space="preserve">
          <source>Will look for all templates at &amp;ldquo;app/views/notifier&amp;rdquo; with name &amp;ldquo;welcome&amp;rdquo;. If no welcome template exists, it will raise an ActionView::MissingTemplate error.</source>
          <target state="translated">将在名称为&amp;ldquo; welcome&amp;rdquo;的&amp;ldquo; app / views / notifier&amp;rdquo;中查找所有模板。如果不存在欢迎模板，它将引发ActionView :: MissingTemplate错误。</target>
        </trans-unit>
        <trans-unit id="a511d21ddc2477b7e4db799930f4b3274becd963" translate="yes" xml:space="preserve">
          <source>Will not select a person with the id of 1 because 1 (an &lt;a href=&quot;../../integer&quot;&gt;Integer&lt;/a&gt;) is not the same as '1' (a string)</source>
          <target state="translated">不会选择ID为1的人，因为1（一个&lt;a href=&quot;../../integer&quot;&gt;Integer&lt;/a&gt;）与&amp;ldquo; 1&amp;rdquo;（一个字符串）不同</target>
        </trans-unit>
        <trans-unit id="15bf6e6c56c7f0247f98be0f4834f6d0bea4985e" translate="yes" xml:space="preserve">
          <source>Will render the HTML part using the &lt;code&gt;my_layout.html.erb&lt;/code&gt; file and the text part with the usual &lt;code&gt;user_mailer.text.erb&lt;/code&gt; file if it exists.</source>
          <target state="translated">如果存在，将使用 &lt;code&gt;my_layout.html.erb&lt;/code&gt; 文件渲染HTML部分，并使用常规的 &lt;code&gt;user_mailer.text.erb&lt;/code&gt; 文件渲染文本部分。</target>
        </trans-unit>
        <trans-unit id="87ab8fe8130e40e084dc4e1c213c1ca1bb051613" translate="yes" xml:space="preserve">
          <source>Will render:</source>
          <target state="translated">会呈现。</target>
        </trans-unit>
        <trans-unit id="dd07977c08c15c544f1e45f48b43633fe8ce4463" translate="yes" xml:space="preserve">
          <source>Will the next call to &lt;code&gt;save&lt;/code&gt; have any changes to persist?</source>
          <target state="translated">下次 &lt;code&gt;save&lt;/code&gt; 呼叫将保留任何更改吗？</target>
        </trans-unit>
        <trans-unit id="3783b5cf7b592b9f78fe413667bc0788566f1a31" translate="yes" xml:space="preserve">
          <source>Will this attribute change the next time we save?</source>
          <target state="translated">下次保存时,这个属性会不会改变?</target>
        </trans-unit>
        <trans-unit id="1601014ac633600b6b9ba81f913d6f429285c110" translate="yes" xml:space="preserve">
          <source>Will throw an error, but this will work:</source>
          <target state="translated">会抛出一个错误,但这将工作。</target>
        </trans-unit>
        <trans-unit id="c775cc11120c15229b8e90ea44ac8b2189edf99d" translate="yes" xml:space="preserve">
          <source>With &lt;a href=&quot;classmethods#method-i-has_and_belongs_to_many&quot;&gt;has_and_belongs_to_many&lt;/a&gt; and &lt;a href=&quot;classmethods#method-i-has_many&quot;&gt;has_many&lt;/a&gt;&lt;code&gt;:through&lt;/code&gt;, if you want to delete the associated records themselves, you can always do something along the lines of &lt;code&gt;person.tasks.each(&amp;amp;:destroy)&lt;/code&gt;.</source>
          <target state="translated">使用&lt;a href=&quot;classmethods#method-i-has_and_belongs_to_many&quot;&gt;has_and_belongs_to_many&lt;/a&gt;和&lt;a href=&quot;classmethods#method-i-has_many&quot;&gt;has_many &lt;/a&gt; &lt;code&gt;:through&lt;/code&gt; ，如果要自己删除关联的记录，则始终可以按照 &lt;code&gt;person.tasks.each(&amp;amp;:destroy)&lt;/code&gt; 的方式进行操作。</target>
        </trans-unit>
        <trans-unit id="923d698daee78d80a70a33dab6292adb7b0804be" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;:allow_nil&lt;/code&gt; the call &lt;code&gt;user.name&lt;/code&gt; returns &lt;code&gt;nil&lt;/code&gt; if the user has no profile.</source>
          <target state="translated">使用 &lt;code&gt;:allow_nil&lt;/code&gt; ，如果用户没有配置文件，则调用 &lt;code&gt;user.name&lt;/code&gt; 返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="365f01465dda17cc57132d71e3bf1f2a1a675651" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;Module#delegate_missing_to&lt;/code&gt;, the above is condensed to:</source>
          <target state="translated">使用 &lt;code&gt;Module#delegate_missing_to&lt;/code&gt; ，以上内容浓缩为：</target>
        </trans-unit>
        <trans-unit id="7ee2f0e11ee11d6ce2ebdf11a3ca34cdd5a84b84" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;include_seconds: true&lt;/code&gt; and the difference &amp;lt; 1 minute 29 seconds:</source>
          <target state="translated">使用 &lt;code&gt;include_seconds: true&lt;/code&gt; 和时差&amp;lt;1分钟29秒：</target>
        </trans-unit>
        <trans-unit id="4e9f6a4883af8e8d982955f5e0b36dc14883f1ff" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;through: :sections&lt;/code&gt; specified, Rails will now understand:</source>
          <target state="translated">随着 &lt;code&gt;through: :sections&lt;/code&gt; 指定时，Rails现在明白了：</target>
        </trans-unit>
        <trans-unit id="3c3685a2391d0c5d200af26ede11572aa831707d" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;touch&lt;/code&gt; set to &lt;code&gt;true&lt;/code&gt;, any action which changes &lt;code&gt;updated_at&lt;/code&gt; for a game record will also change it for the associated product, thereby expiring the cache.</source>
          <target state="translated">将 &lt;code&gt;touch&lt;/code&gt; 设置为 &lt;code&gt;true&lt;/code&gt; 时，任何更改游戏记录的 &lt;code&gt;updated_at&lt;/code&gt; 的操作也将针对关联产品对其进行更改，从而使缓存过期。</target>
        </trans-unit>
        <trans-unit id="14bb11e834530581b942be6e9e4f0f905ef611cc" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;try&lt;/code&gt;</source>
          <target state="translated">随着 &lt;code&gt;try&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2c1b48450d1e24f30f292cc318744103511f70f9" translate="yes" xml:space="preserve">
          <source>With Active Record associations, we can streamline these - and other - operations by declaratively telling Rails that there is a connection between the two models. Here's the revised code for setting up authors and books:</source>
          <target state="translated">通过Active Record关联,我们可以通过声明性地告诉Rails这两个模型之间存在联系,从而简化这些--以及其他--操作。下面是设置作者和书籍的修订代码。</target>
        </trans-unit>
        <trans-unit id="df4d76cd89805d3bf61785ff792b3b15203da6e7" translate="yes" xml:space="preserve">
          <source>With a block which is passed with the current record to be validated:</source>
          <target state="translated">与一个块,它与当前的记录一起传递给验证。</target>
        </trans-unit>
        <trans-unit id="d74a775b525e9452218cc4abddc3b9df4a1283b5" translate="yes" xml:space="preserve">
          <source>With a normal, plain-old Rails application, your URLs will generally follow the pattern of http://(host)/(controller)/(action), and a URL like http://(host)/(controller) will hit the &lt;strong&gt;index&lt;/strong&gt; action of that controller.</source>
          <target state="translated">对于普通的，普通的Rails应用程序，您的URL通常将遵循http：//（host）/（controller）/（action）的模式，而类似http：//（host）/（controller）的URL将点击该控制器的&lt;strong&gt;索引&lt;/strong&gt;动作。</target>
        </trans-unit>
        <trans-unit id="28823126a203741bc3475e525b6819485f646608" translate="yes" xml:space="preserve">
          <source>With a regular &lt;a href=&quot;classmethods#method-i-has_many&quot;&gt;has_many&lt;/a&gt; there is no distinction between the &amp;ldquo;associated records&amp;rdquo; and the &amp;ldquo;link&amp;rdquo;, so there is only one choice for what gets deleted.</source>
          <target state="translated">使用常规&lt;a href=&quot;classmethods#method-i-has_many&quot;&gt;has_many时&lt;/a&gt;，&amp;ldquo;关联记录&amp;rdquo;和&amp;ldquo;链接&amp;rdquo;之间没有区别，因此删除内容只有一个选择。</target>
        </trans-unit>
        <trans-unit id="7bb0fb90180dd0bfb344cee86094cf11085d82ff" translate="yes" xml:space="preserve">
          <source>With an inline module:</source>
          <target state="translated">有一个内联模块。</target>
        </trans-unit>
        <trans-unit id="8cfd3740d4a26a52ded3694f1a15d93ce3428a9f" translate="yes" xml:space="preserve">
          <source>With just three commands we whipped up a Rails server listening on port 3000. Go to your browser and open http://localhost:3000, you will see a basic Rails app running.</source>
          <target state="translated">只用了三个命令,我们就建立了一个监听端口为3000的Rails服务器。进入浏览器,打开http://localhost:3000,你会看到一个基本的Rails应用在运行。</target>
        </trans-unit>
        <trans-unit id="d6061e0fa2f1ac3150f97850f3468fa725d52643" translate="yes" xml:space="preserve">
          <source>With layouts, you can flip it around and have the common structure know where to insert changing content. This means that the header and footer are only mentioned in one place, like this:</source>
          <target state="translated">有了布局,你可以翻开它,让共同的结构知道在哪里插入变化的内容。这意味着页眉和页脚只在一个地方提到,像这样。</target>
        </trans-unit>
        <trans-unit id="ad8fc9a12fc103f21678ea0a5a689c2080e82660" translate="yes" xml:space="preserve">
          <source>With most of the options to &lt;code&gt;render&lt;/code&gt;, the rendered content is displayed as part of the current layout. You'll learn more about layouts and how to use them later in this guide.</source>
          <target state="translated">使用大多数 &lt;code&gt;render&lt;/code&gt; 选项，渲染的内容将显示为当前布局的一部分。您将在本指南的后面部分详细了解布局以及如何使用它们。</target>
        </trans-unit>
        <trans-unit id="cdae58ca0292cbd0152512d2011e72b5d2704c4f" translate="yes" xml:space="preserve">
          <source>With no further work, &lt;code&gt;rails server&lt;/code&gt; will run our new shiny Rails app:</source>
          <target state="translated">没有进一步的工作， &lt;code&gt;rails server&lt;/code&gt; 将运行我们新的闪亮的Rails应用程序：</target>
        </trans-unit>
        <trans-unit id="ebb4cf01fc0054b91d91820fd6991877cee5c5a6" translate="yes" xml:space="preserve">
          <source>With strong parameters, Action Controller parameters are forbidden to be used in Active Model mass assignments until they have been permitted. This means that you'll have to make a conscious decision about which attributes to permit for mass update. This is a better security practice to help prevent accidentally allowing users to update sensitive model attributes.</source>
          <target state="translated">有了强参数,Action Controller参数在被允许之前,是禁止在Active Model大规模分配中使用的。这意味着您必须有意识地决定允许哪些属性进行大规模更新。这是一个更好的安全实践,有助于防止意外地允许用户更新敏感的模型属性。</target>
        </trans-unit>
        <trans-unit id="ae4abb4d46921b4b2b425be5baccd64bbecc7fbf" translate="yes" xml:space="preserve">
          <source>With such an engine, everything that is inside the &lt;code&gt;MyEngine&lt;/code&gt; module will be isolated from the application.</source>
          <target state="translated">使用这样的引擎， &lt;code&gt;MyEngine&lt;/code&gt; 模块内部的所有内容都将与应用程序隔离。</target>
        </trans-unit>
        <trans-unit id="ff4e39b39bb18ef6c521d1eab5523984c5801456" translate="yes" xml:space="preserve">
          <source>With that command we told Rails that we want an &lt;code&gt;Article&lt;/code&gt; model, together with a &lt;em&gt;title&lt;/em&gt; attribute of type string, and a &lt;em&gt;text&lt;/em&gt; attribute of type text. Those attributes are automatically added to the &lt;code&gt;articles&lt;/code&gt; table in the database and mapped to the &lt;code&gt;Article&lt;/code&gt; model.</source>
          <target state="translated">使用该命令，我们告诉Rails我们想要一个 &lt;code&gt;Article&lt;/code&gt; 模型，以及一个string类型的&lt;em&gt;title&lt;/em&gt;属性和一个&lt;em&gt;text&lt;/em&gt;类型的&lt;em&gt;text&lt;/em&gt;属性。这些属性会自动添加到数据库的 &lt;code&gt;articles&lt;/code&gt; 表中，并映射到 &lt;code&gt;Article&lt;/code&gt; 模型。</target>
        </trans-unit>
        <trans-unit id="704e2bb9dccc32a9de191a9528ae22eb0b73ce7e" translate="yes" xml:space="preserve">
          <source>With that configuration you get a user's name via their profile, &lt;code&gt;user.profile.name&lt;/code&gt;, but it could be handy to still be able to access such attribute directly:</source>
          <target state="translated">通过该配置，您可以通过其个人资料 &lt;code&gt;user.profile.name&lt;/code&gt; 来获得用户名，但是仍然可以直接访问此类属性很方便：</target>
        </trans-unit>
        <trans-unit id="a52dcf6596891564caba4d273bdba3772d7ecec1" translate="yes" xml:space="preserve">
          <source>With the &lt;a href=&quot;https://github.com/rails/spring&quot;&gt;Spring&lt;/a&gt; pre-loader (included with new Rails apps), you ideally keep &lt;code&gt;config.eager_load = false&lt;/code&gt; as per development. Sometimes you may end up with a hybrid configuration (&lt;code&gt;config.eager_load = true&lt;/code&gt;, &lt;code&gt;config.cache_classes = true&lt;/code&gt; AND &lt;code&gt;config.enable_dependency_loading = true&lt;/code&gt;), see &lt;a href=&quot;https://github.com/rails/spring/issues/519#issuecomment-348324369&quot;&gt;spring issue&lt;/a&gt;. However it might be simpler to keep the same configuration as development, and work out whatever it is that is causing autoloading to fail (perhaps by the results of your CI test results).</source>
          <target state="translated">使用&lt;a href=&quot;https://github.com/rails/spring&quot;&gt;Spring&lt;/a&gt;预加载器（包括在新的Rails应用程序中），理想情况下，根据开发，您可以使 &lt;code&gt;config.eager_load = false&lt;/code&gt; 。有时您可能会得到混合配置（ &lt;code&gt;config.eager_load = true&lt;/code&gt; ， &lt;code&gt;config.cache_classes = true&lt;/code&gt; 和 &lt;code&gt;config.enable_dependency_loading = true&lt;/code&gt; ），请参见&lt;a href=&quot;https://github.com/rails/spring/issues/519#issuecomment-348324369&quot;&gt;spring issue&lt;/a&gt;。但是，保持与开发相同的配置并解决导致自动加载失败的任何原因（可能是通过CI测试结果的结果），可能会更简单。</target>
        </trans-unit>
        <trans-unit id="5914b2485302c73118389946cece6c3fc3468659" translate="yes" xml:space="preserve">
          <source>With the &lt;code&gt;:as&lt;/code&gt; option we can specify a different name for said local variable. For example, if we wanted it to be &lt;code&gt;user&lt;/code&gt; instead of &lt;code&gt;account&lt;/code&gt; we'd do:</source>
          <target state="translated">使用 &lt;code&gt;:as&lt;/code&gt; 选项，我们可以为上述局部变量指定一个不同的名称。例如，如果我们希望它成为 &lt;code&gt;user&lt;/code&gt; 而不是 &lt;code&gt;account&lt;/code&gt; 我们应该这样做：</target>
        </trans-unit>
        <trans-unit id="d21d9ba3a34d1b240fa8781560edfaa4e29fc6a1" translate="yes" xml:space="preserve">
          <source>With the &lt;code&gt;app&lt;/code&gt; method you can access named route helpers, as well as do requests.</source>
          <target state="translated">使用 &lt;code&gt;app&lt;/code&gt; 方法，您可以访问命名的路由助手以及请求。</target>
        </trans-unit>
        <trans-unit id="ea82bf7769cdfa07eedb989bcea27fe7e89080bb" translate="yes" xml:space="preserve">
          <source>With the &lt;code&gt;as&lt;/code&gt; option we can specify a different name for the said local variable. For example, if we wanted it to be &lt;code&gt;item&lt;/code&gt; instead of &lt;code&gt;product&lt;/code&gt; we would do:</source>
          <target state="translated">使用 &lt;code&gt;as&lt;/code&gt; 选项，我们可以为所述局部变量指定其他名称。例如，如果我们希望它成为 &lt;code&gt;item&lt;/code&gt; 而不是 &lt;code&gt;product&lt;/code&gt; 我们将这样做：</target>
        </trans-unit>
        <trans-unit id="1a3a7ab03d7454ff02fb5e76d8ba1cc1b05875fb" translate="yes" xml:space="preserve">
          <source>With the &lt;code&gt;default_options&lt;/code&gt; set to this:</source>
          <target state="translated">将 &lt;code&gt;default_options&lt;/code&gt; 设置为此：</target>
        </trans-unit>
        <trans-unit id="a02b074ceadbf67fcac505cbc260df3198bbc054" translate="yes" xml:space="preserve">
          <source>With the &lt;code&gt;helper&lt;/code&gt; method it is possible to access Rails and your application's helpers.</source>
          <target state="translated">使用 &lt;code&gt;helper&lt;/code&gt; 方法可以访问Rails和应用程序的助手。</target>
        </trans-unit>
        <trans-unit id="cf0fa2c264a67dd7674e1c11a20e219a9e9ec77c" translate="yes" xml:space="preserve">
          <source>With the &lt;code&gt;human_attribute_name&lt;/code&gt; method, you can transform attribute names into a more human-readable format. The human-readable format is defined in your locale file(s).</source>
          <target state="translated">使用 &lt;code&gt;human_attribute_name&lt;/code&gt; 方法，可以将属性名称转换为更易于理解的格式。在您的语言环境文件中定义了人类可读的格式。</target>
        </trans-unit>
        <trans-unit id="3fc0248a613e3fac57f5f4e1457c0e50d2c32619" translate="yes" xml:space="preserve">
          <source>With the &lt;code&gt;new&lt;/code&gt; method defined in &lt;code&gt;ArticlesController&lt;/code&gt;, if you refresh http://localhost:3000/articles/new you'll see another error:</source>
          <target state="translated">使用 &lt;code&gt;ArticlesController&lt;/code&gt; 中定义的 &lt;code&gt;new&lt;/code&gt; 方法，如果刷新http：// localhost：3000 / articles / new，则会看到另一个错误：</target>
        </trans-unit>
        <trans-unit id="99f6a59c47c1f87b127ead7a16aabfc85069e8ec" translate="yes" xml:space="preserve">
          <source>With the &lt;code&gt;scope&lt;/code&gt; option, you can define a custom scope for Rails to look up the translation.</source>
          <target state="translated">使用 &lt;code&gt;scope&lt;/code&gt; 选项，可以为Rails定义自定义范围以查找翻译。</target>
        </trans-unit>
        <trans-unit id="30b0881eb4c62b30f963e362db4eff5cff20f1bf" translate="yes" xml:space="preserve">
          <source>With the &lt;code&gt;server&lt;/code&gt; command, Rails will further run the following code:</source>
          <target state="translated">使用 &lt;code&gt;server&lt;/code&gt; 命令，Rails将进一步运行以下代码：</target>
        </trans-unit>
        <trans-unit id="4c45ce69c72a6e867e0a593e006c34b5339530de" translate="yes" xml:space="preserve">
          <source>With the Asset Pipeline the :cache and :concat options aren't used anymore, delete these options from your views.</source>
          <target state="translated">在资产管道中,不再使用:cache和:concat选项,请从视图中删除这些选项。</target>
        </trans-unit>
        <trans-unit id="8593b03dcee2c84e7bde22901f7640aad1cba2df" translate="yes" xml:space="preserve">
          <source>With the Chain backend, you could use the Active Record backend and fall back to the (default) Simple backend:</source>
          <target state="translated">有了Chain后端,你可以使用Active Record后端,并回落到(默认的)Simple后端。</target>
        </trans-unit>
        <trans-unit id="3c76771f6e6ce039c23f672dfaea7d481f76e253" translate="yes" xml:space="preserve">
          <source>With the above example, the bang and predicate methods along with the associated scopes are now prefixed and/or suffixed accordingly:</source>
          <target state="translated">通过上述例子,bang和谓词方法以及相关的作用域现在都有相应的前缀和/或后缀。</target>
        </trans-unit>
        <trans-unit id="8cc0edd1be0ce12780e04d7868d363a44cdc3527" translate="yes" xml:space="preserve">
          <source>With the advent of client-side frameworks, more developers are using Rails to build a back-end that is shared between their web application and other native applications.</source>
          <target state="translated">随着客户端框架的出现,越来越多的开发者使用Rails来构建他们的Web应用和其他原生应用之间共享的后端。</target>
        </trans-unit>
        <trans-unit id="b04e41a47fa5954745441a7a1a418081b22e7934" translate="yes" xml:space="preserve">
          <source>With the asset pipeline</source>
          <target state="translated">有了资产管道</target>
        </trans-unit>
        <trans-unit id="7104c52d914cc37216c41f270cf166d50e723b74" translate="yes" xml:space="preserve">
          <source>With the class method &lt;code&gt;File.atomic_write&lt;/code&gt; you can write to a file in a way that will prevent any reader from seeing half-written content.</source>
          <target state="translated">使用类方法 &lt;code&gt;File.atomic_write&lt;/code&gt; ,您可以以一种防止任何读者看到半写内容的方式写入文件。</target>
        </trans-unit>
        <trans-unit id="f1aebad76c66b784de886a599843d99d4a7e7815" translate="yes" xml:space="preserve">
          <source>With the code in this form, there will likely be a problem if the &lt;code&gt;@book&lt;/code&gt; variable is &lt;code&gt;nil&lt;/code&gt;. Remember, a &lt;code&gt;render :action&lt;/code&gt; doesn't run any code in the target action, so nothing will set up the &lt;code&gt;@books&lt;/code&gt; variable that the &lt;code&gt;index&lt;/code&gt; view will probably require. One way to fix this is to redirect instead of rendering:</source>
          <target state="translated">使用这种形式的代码，如果 &lt;code&gt;@book&lt;/code&gt; 变量为 &lt;code&gt;nil&lt;/code&gt; ，则可能会出现问题。请记住， &lt;code&gt;render :action&lt;/code&gt; 不会在目标动作中运行任何代码，因此不会设置 &lt;code&gt;index&lt;/code&gt; 视图可能需要的 &lt;code&gt;@books&lt;/code&gt; 变量。解决此问题的一种方法是重定向而不是渲染：</target>
        </trans-unit>
        <trans-unit id="3ecd2bd8a99cc40d5d99d0c4c42297e9c0b39ccd" translate="yes" xml:space="preserve">
          <source>With the default configuration for Rails 6.0, assigning to a collection of attachments replaces existing files instead of appending to them. This matches Active Record behavior when assigning to a collection association:</source>
          <target state="translated">在 Rails 6.0 的默认配置中,分配给附件集合的内容会替换现有的文件,而不是追加到它们上面。这与分配给集合关联时的Active Record行为相匹配。</target>
        </trans-unit>
        <trans-unit id="e79f2da8d571f971fa1f3fcebbb46af49b9670a4" translate="yes" xml:space="preserve">
          <source>With the form and its associated route defined, you will be able to fill in the form and then click the submit button to begin the process of creating a new article, so go ahead and do that. When you submit the form, you should see a familiar error:</source>
          <target state="translated">在定义了表单及其相关的路径后,你就可以填写表单,然后点击提交按钮,开始创建新文章的过程,所以请继续这样做。当你提交表单时,你应该会看到一个熟悉的错误。</target>
        </trans-unit>
        <trans-unit id="2404776220fce42b52f446e20ae883e04e47c3d3" translate="yes" xml:space="preserve">
          <source>With the model in hand, you can turn your attention to creating a matching controller. Again, we'll use the same generator we used before:</source>
          <target state="translated">有了模型之后,你可以把注意力转移到创建一个匹配的控制器上。再次,我们将使用我们之前使用的同一个生成器。</target>
        </trans-unit>
        <trans-unit id="45dc33f5a322ca9495b1bbd4c1c32a69aa4ebb1b" translate="yes" xml:space="preserve">
          <source>With the validation now in place, when you call &lt;code&gt;@article.save&lt;/code&gt; on an invalid article, it will return &lt;code&gt;false&lt;/code&gt;. If you open &lt;code&gt;app/controllers/articles_controller.rb&lt;/code&gt; again, you'll notice that we don't check the result of calling &lt;code&gt;@article.save&lt;/code&gt; inside the &lt;code&gt;create&lt;/code&gt; action. If &lt;code&gt;@article.save&lt;/code&gt; fails in this situation, we need to show the form back to the user. To do this, change the &lt;code&gt;new&lt;/code&gt; and &lt;code&gt;create&lt;/code&gt; actions inside &lt;code&gt;app/controllers/articles_controller.rb&lt;/code&gt; to these:</source>
          <target state="translated">现在有了验证，当您对无效的文章调用 &lt;code&gt;@article.save&lt;/code&gt; 时，它将返回 &lt;code&gt;false&lt;/code&gt; 。如果你打开 &lt;code&gt;app/controllers/articles_controller.rb&lt;/code&gt; 一遍，你会发现，我们不检查调用的结果 &lt;code&gt;@article.save&lt;/code&gt; 内部 &lt;code&gt;create&lt;/code&gt; 行动。如果在这种情况下 &lt;code&gt;@article.save&lt;/code&gt; 失败，我们需要将表单显示给用户。为此，请更改 &lt;code&gt;new&lt;/code&gt; 并在 &lt;code&gt;app/controllers/articles_controller.rb&lt;/code&gt; 中 &lt;code&gt;create&lt;/code&gt; 操作：</target>
        </trans-unit>
        <trans-unit id="71fb1f76fb9fa209e3325ea1dd78ec807ece3983" translate="yes" xml:space="preserve">
          <source>With these declarations, asking for the value of &lt;code&gt;@author.books.size&lt;/code&gt; requires making a call to the database to perform a &lt;code&gt;COUNT(*)&lt;/code&gt; query. To avoid this call, you can add a counter cache to the &lt;em&gt;belonging&lt;/em&gt; model:</source>
          <target state="translated">使用这些声明，要求 &lt;code&gt;@author.books.size&lt;/code&gt; 的值要求对数据库进行调用以执行 &lt;code&gt;COUNT(*)&lt;/code&gt; 查询。为了避免发生此调用，可以将计数器缓存添加到&lt;em&gt;所属&lt;/em&gt;模型中：</target>
        </trans-unit>
        <trans-unit id="88a0b5dc5714af395cfe75e6e04697d43baa0c16" translate="yes" xml:space="preserve">
          <source>With this approach you will not get a &lt;code&gt;Routing Error&lt;/code&gt; when accessing your resources such as &lt;code&gt;http://localhost:3001/books&lt;/code&gt; without a locale. This is useful for when you want to use the default locale when one is not specified.</source>
          <target state="translated">使用这种方法，在访问没有语言环境的资源（例如 &lt;code&gt;http://localhost:3001/books&lt;/code&gt; )时，不会收到&amp;ldquo; &lt;code&gt;Routing Error&lt;/code&gt; 。当您要在未指定默认语言环境的情况下使用默认语言环境时，这很有用。</target>
        </trans-unit>
        <trans-unit id="7ed8b7234e673e3344b8cfbdc09a5c72e9cdf871" translate="yes" xml:space="preserve">
          <source>With this cache store, multiple server processes on the same host can share a cache. This cache store is appropriate for low to medium traffic sites that are served off one or two hosts. Server processes running on different hosts could share a cache by using a shared file system, but that setup is not recommended.</source>
          <target state="translated">通过这个缓存存储,同一主机上的多个服务器进程可以共享一个缓存。这种缓存存储适合于低到中等流量的网站,由一台或两台主机提供服务。在不同主机上运行的服务器进程可以通过使用共享文件系统来共享缓存,但不推荐这种设置。</target>
        </trans-unit>
        <trans-unit id="55ed787ba517af84e729abd0a8e5ba84740b0645" translate="yes" xml:space="preserve">
          <source>With this change, creating a new book for a particular author is easier:</source>
          <target state="translated">有了这个变化,为某个作者创建新书就更容易了。</target>
        </trans-unit>
        <trans-unit id="752c40992932234254549520abfb4735580f354e" translate="yes" xml:space="preserve">
          <source>With this change, you can access an instance of the &lt;code&gt;@products&lt;/code&gt; collection as the &lt;code&gt;item&lt;/code&gt; local variable within the partial.</source>
          <target state="translated">通过此更改，您可以将 &lt;code&gt;@products&lt;/code&gt; 集合的实例作为局部中的 &lt;code&gt;item&lt;/code&gt; 局部变量进行访问。</target>
        </trans-unit>
        <trans-unit id="fdcba96a5de6785f05d39a5732d409c3a3eafe57" translate="yes" xml:space="preserve">
          <source>With this change, you should finally be able to create new articles. Visit http://localhost:3000/articles/new and give it a try!</source>
          <target state="translated">有了这个变化,你应该终于可以创建新的文章了。请访问http://localhost:3000/articles/new,并尝试一下。</target>
        </trans-unit>
        <trans-unit id="7047fc442cc7b1b30d3b2c365d2f6b3aa9f51eb4" translate="yes" xml:space="preserve">
          <source>With this code, the browser will make a fresh request for the index page, the code in the &lt;code&gt;index&lt;/code&gt; method will run, and all will be well.</source>
          <target state="translated">使用此代码，浏览器将重新请求索引页面， &lt;code&gt;index&lt;/code&gt; 方法中的代码将运行，并且一切都会好起来。</target>
        </trans-unit>
        <trans-unit id="0d4c9d7ae1f73420016d1bc31d16955b28c3793a" translate="yes" xml:space="preserve">
          <source>With this declaration, Rails will keep the cache value up to date, and then return that value in response to the &lt;code&gt;size&lt;/code&gt; method.</source>
          <target state="translated">使用此声明，Rails将使高速缓存值保持最新，然后响应 &lt;code&gt;size&lt;/code&gt; 方法返回该值。</target>
        </trans-unit>
        <trans-unit id="a0b2ed02c4d64db6cf19ab13f87db358a64b99ba" translate="yes" xml:space="preserve">
          <source>With this declaration, all of the views in the entire application will use &lt;code&gt;app/views/layouts/main.html.erb&lt;/code&gt; for their layout.</source>
          <target state="translated">使用此声明，整个应用程序中的所有视图将使用 &lt;code&gt;app/views/layouts/main.html.erb&lt;/code&gt; 进行布局。</target>
        </trans-unit>
        <trans-unit id="fc393ae12058c0813c491d21314a7d56967db2a2" translate="yes" xml:space="preserve">
          <source>With this declaration, all of the views rendered by the &lt;code&gt;ProductsController&lt;/code&gt; will use &lt;code&gt;app/views/layouts/inventory.html.erb&lt;/code&gt; as their layout.</source>
          <target state="translated">有了此声明， &lt;code&gt;ProductsController&lt;/code&gt; 呈现的所有视图都将使用 &lt;code&gt;app/views/layouts/inventory.html.erb&lt;/code&gt; 作为其布局。</target>
        </trans-unit>
        <trans-unit id="a710048f9d10a6cbec587e5457d4681878042f13" translate="yes" xml:space="preserve">
          <source>With this declaration, the &lt;code&gt;product&lt;/code&gt; layout would be used for everything but the &lt;code&gt;rss&lt;/code&gt; and &lt;code&gt;index&lt;/code&gt; methods.</source>
          <target state="translated">使用此声明， &lt;code&gt;product&lt;/code&gt; 布局将用于除 &lt;code&gt;rss&lt;/code&gt; 和 &lt;code&gt;index&lt;/code&gt; 方法之外的所有内容。</target>
        </trans-unit>
        <trans-unit id="e296a2071dcd49c3299304fac5613063fc553fc5" translate="yes" xml:space="preserve">
          <source>With this in place, you can create namespaced controllers that inherit from &lt;code&gt;AdminsController&lt;/code&gt;. The filter will thus be run for all actions in those controllers, protecting them with HTTP basic authentication.</source>
          <target state="translated">有了这个，您可以创建从 &lt;code&gt;AdminsController&lt;/code&gt; 继承的命名空间控制器。因此，将针对这些控制器中的所有操作运行筛选器，并使用HTTP基本身份验证保护它们。</target>
        </trans-unit>
        <trans-unit id="aaf4c5e752b4b9989114d84ef7e41fc3a2de19b5" translate="yes" xml:space="preserve">
          <source>With this set of variants Rails will look for the following set of templates and use the first that exists.</source>
          <target state="translated">有了这组变体,Rails会寻找以下一组模板,并使用存在的第一个模板。</target>
        </trans-unit>
        <trans-unit id="c1b823c3416974f021a7aa71e0174be5add44932" translate="yes" xml:space="preserve">
          <source>With this setup, you can retrieve &lt;code&gt;@employee.subordinates&lt;/code&gt; and &lt;code&gt;@employee.manager&lt;/code&gt;.</source>
          <target state="translated">通过此设置，您可以检索 &lt;code&gt;@employee.subordinates&lt;/code&gt; 和 &lt;code&gt;@employee.manager&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e341d5d07cad4b1c8a97491f82d5a23b0c9c304d" translate="yes" xml:space="preserve">
          <source>With web page defacement an attacker can do a lot of things, for example, present false information or lure the victim on the attackers web site to steal the cookie, login credentials, or other sensitive data. The most popular way is to include code from external sources by iframes:</source>
          <target state="translated">通过网页污损,攻击者可以做很多事情,例如,呈现虚假信息或引诱受害者在攻击者的网站上窃取cookie、登录凭证或其他敏感数据。最流行的方法是通过iframe包含来自外部的代码。</target>
        </trans-unit>
        <trans-unit id="899714a8d6f08076d9655040a4f75e83ab04e73e" translate="yes" xml:space="preserve">
          <source>Within &lt;code&gt;lib/blorgh/engine.rb&lt;/code&gt; is the base class for the engine:</source>
          <target state="translated">在 &lt;code&gt;lib/blorgh/engine.rb&lt;/code&gt; 中是引擎的基类：</target>
        </trans-unit>
        <trans-unit id="e7927191a9c86f6f47c20a970363d08745671702" translate="yes" xml:space="preserve">
          <source>Within an ERB template, Ruby code can be included using both &lt;code&gt;&amp;lt;% %&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;%= %&amp;gt;&lt;/code&gt; tags. The &lt;code&gt;&amp;lt;% %&amp;gt;&lt;/code&gt; tags are used to execute Ruby code that does not return anything, such as conditions, loops, or blocks, and the &lt;code&gt;&amp;lt;%= %&amp;gt;&lt;/code&gt; tags are used when you want output.</source>
          <target state="translated">在ERB模板中，可以使用 &lt;code&gt;&amp;lt;% %&amp;gt;&lt;/code&gt; 和 &lt;code&gt;&amp;lt;%= %&amp;gt;&lt;/code&gt; 标签同时包含Ruby代码。在 &lt;code&gt;&amp;lt;% %&amp;gt;&lt;/code&gt; 标签被用来执行Ruby代码不返回任何东西，如条件，循环，或块，和 &lt;code&gt;&amp;lt;%= %&amp;gt;&lt;/code&gt; 当你想输出标签使用。</target>
        </trans-unit>
        <trans-unit id="fcd0c36b686f151fcc9568da3ed027519222a666" translate="yes" xml:space="preserve">
          <source>Within an autoload path, file names must match the constants they define as documented &lt;a href=&quot;https://github.com/fxn/zeitwerk#file-structure&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">在自动加载路径中，文件名必须与它们&lt;a href=&quot;https://github.com/fxn/zeitwerk#file-structure&quot;&gt;在此处&lt;/a&gt;定义的常量相匹配。</target>
        </trans-unit>
        <trans-unit id="ac08c4d562b6eaae10bb9de92923362d9f42b476" translate="yes" xml:space="preserve">
          <source>Within an engine, there may come a time where you wish to use things such as initializers, internationalization, or other configuration options. The great news is that these things are entirely possible, because a Rails engine shares much the same functionality as a Rails application. In fact, a Rails application's functionality is actually a superset of what is provided by engines!</source>
          <target state="translated">在一个引擎中,你可能会希望使用诸如初始化器、国际化或其他配置选项等东西。好消息是,这些事情是完全可以实现的,因为Rails引擎与Rails应用共享相同的功能。事实上,Rails应用的功能实际上是引擎所提供的功能的超集。</target>
        </trans-unit>
        <trans-unit id="28690244620e2395540df3d6e2805350ccbe25a2" translate="yes" xml:space="preserve">
          <source>Within the &lt;code&gt;app/assets&lt;/code&gt; directory, there are the &lt;code&gt;images&lt;/code&gt;, &lt;code&gt;javascripts&lt;/code&gt; and &lt;code&gt;stylesheets&lt;/code&gt; directories which, again, you should be familiar with due to their similarity to an application. One difference here, however, is that each directory contains a sub-directory with the engine name. Because this engine is going to be namespaced, its assets should be too.</source>
          <target state="translated">在 &lt;code&gt;app/assets&lt;/code&gt; 目录中，有 &lt;code&gt;images&lt;/code&gt; ， &lt;code&gt;javascripts&lt;/code&gt; 和 &lt;code&gt;stylesheets&lt;/code&gt; 目录，由于它们与应用程序相似，因此您应该再次熟悉它们。但是，这里的区别是每个目录都包含一个带有引擎名称的子目录。因为此引擎将要命名空间，所以它的资产也应该是。</target>
        </trans-unit>
        <trans-unit id="cdc776e72d88011129a378e5e481f20e38194c73" translate="yes" xml:space="preserve">
          <source>Within the &lt;code&gt;app/controllers&lt;/code&gt; directory there is a &lt;code&gt;blorgh&lt;/code&gt; directory that contains a file called &lt;code&gt;application_controller.rb&lt;/code&gt;. This file will provide any common functionality for the controllers of the engine. The &lt;code&gt;blorgh&lt;/code&gt; directory is where the other controllers for the engine will go. By placing them within this namespaced directory, you prevent them from possibly clashing with identically-named controllers within other engines or even within the application.</source>
          <target state="translated">在 &lt;code&gt;app/controllers&lt;/code&gt; 目录中，有一个 &lt;code&gt;blorgh&lt;/code&gt; 目录，其中包含一个名为 &lt;code&gt;application_controller.rb&lt;/code&gt; 的文件。该文件将为引擎的控制器提供任何常用功能。该 &lt;code&gt;blorgh&lt;/code&gt; 目录是其他控制器发动机会去。通过将它们放在此命名空间目录中，可以防止它们与其他引擎甚至应用程序中名称相同的控制器发生冲突。</target>
        </trans-unit>
        <trans-unit id="8024b0b139f594c07317e9d46dbe87ca01c300ad" translate="yes" xml:space="preserve">
          <source>Within the &lt;code&gt;app/helpers&lt;/code&gt; directory there is a &lt;code&gt;blorgh&lt;/code&gt; directory that contains a file called &lt;code&gt;application_helper.rb&lt;/code&gt;. This file will provide any common functionality for the helpers of the engine. The &lt;code&gt;blorgh&lt;/code&gt; directory is where the other helpers for the engine will go. By placing them within this namespaced directory, you prevent them from possibly clashing with identically-named route helpers within other engines or even within the application.</source>
          <target state="translated">在 &lt;code&gt;app/helpers&lt;/code&gt; 目录中，有一个 &lt;code&gt;blorgh&lt;/code&gt; 目录，其中包含一个名为 &lt;code&gt;application_helper.rb&lt;/code&gt; 的文件。该文件将为引擎的助手提供任何常用功能。该 &lt;code&gt;blorgh&lt;/code&gt; 目录是其他佣工发动机会去。通过将它们放在此命名空间目录中，可以防止它们与其他引擎甚至应用程序中同名的路由帮助程序发生冲突。</target>
        </trans-unit>
        <trans-unit id="d8a7e9f92834d114f6a93d39f859d586ead44d86" translate="yes" xml:space="preserve">
          <source>Within the &lt;code&gt;app/jobs&lt;/code&gt; directory there is a &lt;code&gt;blorgh&lt;/code&gt; directory that contains a file called &lt;code&gt;application_job.rb&lt;/code&gt;. This file will provide any common functionality for the jobs of the engine. The &lt;code&gt;blorgh&lt;/code&gt; directory is where the other jobs for the engine will go. By placing them within this namespaced directory, you prevent them from possibly clashing with identically-named jobs within other engines or even within the application.</source>
          <target state="translated">在 &lt;code&gt;app/jobs&lt;/code&gt; 目录中，有一个 &lt;code&gt;blorgh&lt;/code&gt; 目录，其中包含一个名为 &lt;code&gt;application_job.rb&lt;/code&gt; 的文件。该文件将为引擎的工作提供任何常用功能。该 &lt;code&gt;blorgh&lt;/code&gt; 目录是其他工作的引擎会去。通过将它们放在此命名空间目录中，可以防止它们与其他引擎甚至应用程序中的同名作业冲突。</target>
        </trans-unit>
        <trans-unit id="540ac329ed1554e8636c996d3e85e1f831cb95a9" translate="yes" xml:space="preserve">
          <source>Within the &lt;code&gt;app/mailers&lt;/code&gt; directory there is a &lt;code&gt;blorgh&lt;/code&gt; directory that contains a file called &lt;code&gt;application_mailer.rb&lt;/code&gt;. This file will provide any common functionality for the mailers of the engine. The &lt;code&gt;blorgh&lt;/code&gt; directory is where the other mailers for the engine will go. By placing them within this namespaced directory, you prevent them from possibly clashing with identically-named mailers within other engines or even within the application.</source>
          <target state="translated">在 &lt;code&gt;app/mailers&lt;/code&gt; 目录中，有一个 &lt;code&gt;blorgh&lt;/code&gt; 目录，其中包含一个名为 &lt;code&gt;application_mailer.rb&lt;/code&gt; 的文件。该文件将为引擎的邮件程序提供任何常用功能。该 &lt;code&gt;blorgh&lt;/code&gt; 目录是其他邮件程序发动机将去。通过将它们放在此命名空间目录中，可以防止它们与其他引擎甚至应用程序中的同名邮件程序发生冲突。</target>
        </trans-unit>
        <trans-unit id="101e6dd13d99d77eea5e41319ee8c9964e420f4f" translate="yes" xml:space="preserve">
          <source>Within the &lt;code&gt;customer&lt;/code&gt; partial, the &lt;code&gt;customer&lt;/code&gt; variable will refer to &lt;code&gt;@new_customer&lt;/code&gt; from the parent view.</source>
          <target state="translated">在 &lt;code&gt;customer&lt;/code&gt; 部分中， &lt;code&gt;customer&lt;/code&gt; 变量将从父视图引用 &lt;code&gt;@new_customer&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c25a818286e5fb24aa89232efa2698d3358957c7" translate="yes" xml:space="preserve">
          <source>Within the Ruby on Rails framework, there are a number of hooks provided for common events. These are detailed below.</source>
          <target state="translated">在Ruby on Rails框架中,为常见事件提供了许多钩子。下面将详细介绍这些事件。</target>
        </trans-unit>
        <trans-unit id="09a3c042711d0b97ad6d99c9ef5e8c2ddae9dac4" translate="yes" xml:space="preserve">
          <source>Within the block of member routes, each route name specifies the HTTP verb that will be recognized. You can use &lt;code&gt;get&lt;/code&gt;, &lt;code&gt;patch&lt;/code&gt;, &lt;code&gt;put&lt;/code&gt;, &lt;code&gt;post&lt;/code&gt;, or &lt;code&gt;delete&lt;/code&gt; here . If you don't have multiple &lt;code&gt;member&lt;/code&gt; routes, you can also pass &lt;code&gt;:on&lt;/code&gt; to a route, eliminating the block:</source>
          <target state="translated">在成员路由块中，每个路由名称指定将被识别的HTTP动词。您可以在此处使用 &lt;code&gt;get&lt;/code&gt; ， &lt;code&gt;patch&lt;/code&gt; ， &lt;code&gt;put&lt;/code&gt; ， &lt;code&gt;post&lt;/code&gt; 或 &lt;code&gt;delete&lt;/code&gt; 。如果您没有多个 &lt;code&gt;member&lt;/code&gt; 路线，则也可以将 &lt;code&gt;:on&lt;/code&gt; 传递给一条路线，从而消除障碍：</target>
        </trans-unit>
        <trans-unit id="df90ef0557839e06b278a6e6491f0c912e330c70" translate="yes" xml:space="preserve">
          <source>Within the context of a layout, &lt;code&gt;yield&lt;/code&gt; identifies a section where content from the view should be inserted. The simplest way to use this is to have a single &lt;code&gt;yield&lt;/code&gt;, into which the entire contents of the view currently being rendered is inserted:</source>
          <target state="translated">在布局的上下文中， &lt;code&gt;yield&lt;/code&gt; 标识应插入视图内容的部分。最简单的方法是使用单个 &lt;code&gt;yield&lt;/code&gt; ，将当前呈现的视图的全部内容插入其中：</target>
        </trans-unit>
        <trans-unit id="3ac99994965f8ec25e456f0f95d73c7b9afd819a" translate="yes" xml:space="preserve">
          <source>Within the mailer method, you have access to the following methods:</source>
          <target state="translated">在mailer方法中,你可以访问以下方法。</target>
        </trans-unit>
        <trans-unit id="2cb0ba994527636d101910f0140b5f58db5e8c22" translate="yes" xml:space="preserve">
          <source>Without &lt;code&gt;try&lt;/code&gt;</source>
          <target state="translated">不用 &lt;code&gt;try&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="36df043df8c53225e2af5a06a49aa1243a98cd00" translate="yes" xml:space="preserve">
          <source>Without &lt;code&gt;with_options&lt;/code&gt;, this code contains duplication:</source>
          <target state="translated">没有 &lt;code&gt;with_options&lt;/code&gt; ，此代码包含重复项：</target>
        </trans-unit>
        <trans-unit id="c1b3cd30124d02f50ea647a1dd486bab141c4243" translate="yes" xml:space="preserve">
          <source>Without any &lt;code&gt;options&lt;/code&gt;, the returned &lt;a href=&quot;../../hash&quot;&gt;Hash&lt;/a&gt; will include all the model's attributes.</source>
          <target state="translated">如果没有任何 &lt;code&gt;options&lt;/code&gt; ，则返回的&lt;a href=&quot;../../hash&quot;&gt;哈希&lt;/a&gt;将包含模型的所有属性。</target>
        </trans-unit>
        <trans-unit id="a949a7f7f400928464609a2db9ce9a968bb45f22" translate="yes" xml:space="preserve">
          <source>Without getting too much into the details, the resolution algorithm for relative constant references goes like this:</source>
          <target state="translated">细节就不多说了,相对常量引用的解析算法是这样的。</target>
        </trans-unit>
        <trans-unit id="b5bcca139a2666fb0ea6ecd4854edaba7bcd3f95" translate="yes" xml:space="preserve">
          <source>Without the asset pipeline (&lt;code&gt;skip_pipeline: true&lt;/code&gt;)</source>
          <target state="translated">没有资产管道（ &lt;code&gt;skip_pipeline: true&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="c200537e6376c18b52f8c90e81ccdd31725ef299" translate="yes" xml:space="preserve">
          <source>Without web-service support, an action which collects the data for displaying a list of people might look something like this:</source>
          <target state="translated">如果没有web服务的支持,一个收集数据以显示人员列表的动作可能会是这样的。</target>
        </trans-unit>
        <trans-unit id="e47daa7a6731608211a6729ba435943b8d544c06" translate="yes" xml:space="preserve">
          <source>Work in progress</source>
          <target state="translated">进展中的工作</target>
        </trans-unit>
        <trans-unit id="4614fcbf9fd7328da6193e2e58395ba0c0fcdf6f" translate="yes" xml:space="preserve">
          <source>Worker Pool Configuration</source>
          <target state="translated">工人池配置</target>
        </trans-unit>
        <trans-unit id="d804d4849f526c1d55df6cfddcedf18304809d28" translate="yes" xml:space="preserve">
          <source>Working with Action Mailbox in development</source>
          <target state="translated">在开发中使用行动邮箱</target>
        </trans-unit>
        <trans-unit id="4fce12f21c55e836453dd95303ee0ec1141dc76e" translate="yes" xml:space="preserve">
          <source>Working with JavaScript in Rails</source>
          <target state="translated">在Rails中使用JavaScript</target>
        </trans-unit>
        <trans-unit id="f7d8062e05cb6917f270cd5b2f4c3f4167cfd778" translate="yes" xml:space="preserve">
          <source>Working with Keys</source>
          <target state="translated">与钥匙一起工作</target>
        </trans-unit>
        <trans-unit id="423d601a56f7002003c22e452aa9298b0a15a594" translate="yes" xml:space="preserve">
          <source>Working with Validation Errors</source>
          <target state="translated">处理验证错误</target>
        </trans-unit>
        <trans-unit id="e32fdd98629bee206ab48fa01296302158ae8e70" translate="yes" xml:space="preserve">
          <source>Works great alongside individual template fragment caching. For instance if the template the collection renders is cached like:</source>
          <target state="translated">与单个模板片段缓存一起使用,效果很好。比如如果集合渲染的模板被缓存成这样。</target>
        </trans-unit>
        <trans-unit id="6929247e0d26981b97b6c1af52ca96ede25f128b" translate="yes" xml:space="preserve">
          <source>Works in two unique ways.</source>
          <target state="translated">以两种独特的方式工作。</target>
        </trans-unit>
        <trans-unit id="bb96ff4d5fc708a690532720678fd4d366e2df11" translate="yes" xml:space="preserve">
          <source>Works in two ways.</source>
          <target state="translated">在两个方面发挥作用。</target>
        </trans-unit>
        <trans-unit id="fcce9dc70ef1d9c562399bbfce24e465358caa53" translate="yes" xml:space="preserve">
          <source>Works just like &lt;code&gt;String#split&lt;/code&gt;, with the exception that the items in the resulting list are &lt;a href=&quot;chars&quot;&gt;Chars&lt;/a&gt; instances instead of &lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt;. This makes chaining methods easier.</source>
          <target state="translated">就像 &lt;code&gt;String#split&lt;/code&gt; 一样工作，除了结果列表中的项目是&lt;a href=&quot;chars&quot;&gt;Chars&lt;/a&gt;实例而不是&lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt;。这使链接方法更加容易。</target>
        </trans-unit>
        <trans-unit id="8f9c23fd443cf0afd037d08db21e204ab4250a37" translate="yes" xml:space="preserve">
          <source>Works like &lt;code&gt;String#slice!&lt;/code&gt;, but returns an instance of &lt;a href=&quot;chars&quot;&gt;Chars&lt;/a&gt;, or &lt;code&gt;nil&lt;/code&gt; if the string was not modified. The string will not be modified if the range given is out of bounds</source>
          <target state="translated">像 &lt;code&gt;String#slice!&lt;/code&gt; ，但回报的一个实例&lt;a href=&quot;chars&quot;&gt;个字符&lt;/a&gt;，或 &lt;code&gt;nil&lt;/code&gt; 如果字符串没有被修改。如果给定范围超出范围，则不会修改该字符串</target>
        </trans-unit>
        <trans-unit id="08c458beabcbe34f4667c55b97e644bb2ec0002d" translate="yes" xml:space="preserve">
          <source>Works like &lt;code&gt;table_name_prefix=&lt;/code&gt;, but appends instead of prepends (set to &amp;ldquo;_basecamp&amp;rdquo; gives &amp;ldquo;projects_basecamp&amp;rdquo;, &amp;ldquo;people_basecamp&amp;rdquo;). By default, the suffix is the empty string.</source>
          <target state="translated">就像 &lt;code&gt;table_name_prefix=&lt;/code&gt; 一样工作，但是附加而不是附加（设置为&amp;ldquo; _basecamp&amp;rdquo;给出&amp;ldquo; projects_basecamp&amp;rdquo;，&amp;ldquo; people_basecamp&amp;rdquo;）。默认情况下，后缀为空字符串。</target>
        </trans-unit>
        <trans-unit id="551deaf59edd74216bd324bebcfaf057b3f2449b" translate="yes" xml:space="preserve">
          <source>Would create &lt;code&gt;after_create&lt;/code&gt;, &lt;code&gt;before_update&lt;/code&gt; and &lt;code&gt;around_destroy&lt;/code&gt; methods only.</source>
          <target state="translated">仅创建 &lt;code&gt;after_create&lt;/code&gt; ， &lt;code&gt;before_update&lt;/code&gt; 和 &lt;code&gt;around_destroy&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="6e85e2af16fe60fec4da3886c7087d08ec680aad" translate="yes" xml:space="preserve">
          <source>Would only create the &lt;code&gt;after_create&lt;/code&gt; and &lt;code&gt;before_create&lt;/code&gt; callback methods in your class.</source>
          <target state="translated">只会在您的类中创建 &lt;code&gt;after_create&lt;/code&gt; 和 &lt;code&gt;before_create&lt;/code&gt; 回调方法。</target>
        </trans-unit>
        <trans-unit id="f19be442525da0ff86e071f2ca9f6a92eae2ec07" translate="yes" xml:space="preserve">
          <source>Wrap block with namespace of current application if namespace exists and is not skipped</source>
          <target state="translated">如果存在命名空间且未被跳过,则用当前应用程序的命名空间包装块。</target>
        </trans-unit>
        <trans-unit id="7604bdf393682bd93e95a7e101d8923e9046e984" translate="yes" xml:space="preserve">
          <source>Wrapper around &lt;a href=&quot;persistence#method-i-becomes&quot;&gt;becomes&lt;/a&gt; that also changes the instance's sti column value. This is especially useful if you want to persist the changed class in your database.</source>
          <target state="translated">包装器&lt;a href=&quot;persistence#method-i-becomes&quot;&gt;变得&lt;/a&gt;也改变了实例的sti列值。如果要在数据库中保留更改的类，这特别有用。</target>
        </trans-unit>
        <trans-unit id="b3380f24a5c496c07105616ea483701fb364b420" translate="yes" xml:space="preserve">
          <source>Wrapper around &lt;a href=&quot;persistence#method-i-decrement&quot;&gt;decrement&lt;/a&gt; that writes the update to the database. Only &lt;code&gt;attribute&lt;/code&gt; is updated; the record itself is not saved. This means that any other modified attributes will still be dirty. &lt;a href=&quot;validations&quot;&gt;Validations&lt;/a&gt; and callbacks are skipped. Supports the &lt;code&gt;touch&lt;/code&gt; option from &lt;code&gt;update_counters&lt;/code&gt;, see that for more. Returns &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="translated">围绕&lt;a href=&quot;persistence#method-i-decrement&quot;&gt;减量的&lt;/a&gt;包装程序，将更新写入数据库。仅 &lt;code&gt;attribute&lt;/code&gt; 被更新；记录本身不会保存。这意味着任何其他修改的属性仍将是脏的。&lt;a href=&quot;validations&quot;&gt;验证&lt;/a&gt;和回调将被跳过。支持 &lt;code&gt;update_counters&lt;/code&gt; 的 &lt;code&gt;touch&lt;/code&gt; 选项，有关更多信息，请参见。返回 &lt;code&gt;self&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c51113d47afe8594e08f7f258c40c22adc8b643e" translate="yes" xml:space="preserve">
          <source>Wrapper around &lt;a href=&quot;persistence#method-i-increment&quot;&gt;increment&lt;/a&gt; that writes the update to the database. Only &lt;code&gt;attribute&lt;/code&gt; is updated; the record itself is not saved. This means that any other modified attributes will still be dirty. &lt;a href=&quot;validations&quot;&gt;Validations&lt;/a&gt; and callbacks are skipped. Supports the &lt;code&gt;touch&lt;/code&gt; option from &lt;code&gt;update_counters&lt;/code&gt;, see that for more. Returns &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="translated">围绕&lt;a href=&quot;persistence#method-i-increment&quot;&gt;增量的&lt;/a&gt;包装，将更新写入数据库。仅 &lt;code&gt;attribute&lt;/code&gt; 被更新；记录本身不会保存。这意味着任何其他修改的属性仍将是脏的。&lt;a href=&quot;validations&quot;&gt;验证&lt;/a&gt;和回调将被跳过。支持 &lt;code&gt;update_counters&lt;/code&gt; 的 &lt;code&gt;touch&lt;/code&gt; 选项，有关更多信息，请参见。返回 &lt;code&gt;self&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b5d88209faf04493f90eae8dca5acdf92397f6cf" translate="yes" xml:space="preserve">
          <source>Wrapper around &lt;a href=&quot;persistence#method-i-toggle&quot;&gt;toggle&lt;/a&gt; that saves the record. This method differs from its non-bang version in the sense that it passes through the attribute setter. Saving is not subjected to validation checks. Returns &lt;code&gt;true&lt;/code&gt; if the record could be saved.</source>
          <target state="translated">环绕&lt;a href=&quot;persistence#method-i-toggle&quot;&gt;开关的&lt;/a&gt;包装器可保存记录。此方法在通过属性设置器的意义上不同于其非爆炸式版本。保存不受验证检查。如果可以保存记录，则返回 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ef840afcddbb0c72a9932bf338567231c320f6c4" translate="yes" xml:space="preserve">
          <source>Wrapping</source>
          <target state="translated">Wrapping</target>
        </trans-unit>
        <trans-unit id="43dd0ed74dbdb250c8008544118eb48c5dbeb102" translate="yes" xml:space="preserve">
          <source>Wrapping a string in this class gives you a prettier way to test for equality. The value returned by &lt;code&gt;Rails.env&lt;/code&gt; is wrapped in a &lt;a href=&quot;stringinquirer&quot;&gt;StringInquirer&lt;/a&gt; object, so instead of calling this:</source>
          <target state="translated">在此类中包装字符串可为您提供一种更漂亮的测试相等性的方法。 &lt;code&gt;Rails.env&lt;/code&gt; 返回的值包装在&lt;a href=&quot;stringinquirer&quot;&gt;StringInquirer&lt;/a&gt;对象中，因此不要调用此方法：</target>
        </trans-unit>
        <trans-unit id="2a9d59058867927203b8562603da5227b2231449" translate="yes" xml:space="preserve">
          <source>Wrapping an array in an &lt;code&gt;ArrayInquirer&lt;/code&gt; gives a friendlier way to check its string-like contents:</source>
          <target state="translated">在 &lt;code&gt;ArrayInquirer&lt;/code&gt; 中包装一个数组提供了一种更友好的方式来检查其类似于字符串的内容：</target>
        </trans-unit>
        <trans-unit id="a94541e9999f3d999b5e33ccbd1138471317d95f" translate="yes" xml:space="preserve">
          <source>Wrapping application code</source>
          <target state="translated">包裹应用程序代码</target>
        </trans-unit>
        <trans-unit id="b8546ef965d0098d62f53abe18a65583f04caac6" translate="yes" xml:space="preserve">
          <source>Wraps &lt;a href=&quot;datehelper#method-i-date_select&quot;&gt;ActionView::Helpers::DateHelper#date_select&lt;/a&gt; for form builders:</source>
          <target state="translated">为表单构建器包装&lt;a href=&quot;datehelper#method-i-date_select&quot;&gt;ActionView :: Helpers :: DateHelper＃date_select&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="3cb0b493cf0247474aa94af1cef803b0b8320280" translate="yes" xml:space="preserve">
          <source>Wraps &lt;a href=&quot;datehelper#method-i-datetime_select&quot;&gt;ActionView::Helpers::DateHelper#datetime_select&lt;/a&gt; for form builders:</source>
          <target state="translated">为表单构建器包装&lt;a href=&quot;datehelper#method-i-datetime_select&quot;&gt;ActionView :: Helpers :: DateHelper＃datetime_select&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="385465a8b6eeb833d7279f5ec9bc90eb4063ea6c" translate="yes" xml:space="preserve">
          <source>Wraps &lt;a href=&quot;datehelper#method-i-time_select&quot;&gt;ActionView::Helpers::DateHelper#time_select&lt;/a&gt; for form builders:</source>
          <target state="translated">为表单构建器包装&lt;a href=&quot;datehelper#method-i-time_select&quot;&gt;ActionView :: Helpers :: DateHelper＃time_select&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="b9fa0a568625a132b9ec88aba24db72173427dde" translate="yes" xml:space="preserve">
          <source>Wraps &lt;a href=&quot;formhelper#method-i-color_field&quot;&gt;ActionView::Helpers::FormHelper#color_field&lt;/a&gt; for form builders:</source>
          <target state="translated">为表单构建器包装&lt;a href=&quot;formhelper#method-i-color_field&quot;&gt;ActionView :: Helpers :: FormHelper＃color_field&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="abc8e80e95b190630bbde1da2244afa1f37391f1" translate="yes" xml:space="preserve">
          <source>Wraps &lt;a href=&quot;formhelper#method-i-date_field&quot;&gt;ActionView::Helpers::FormHelper#date_field&lt;/a&gt; for form builders:</source>
          <target state="translated">为表单生成器包装&lt;a href=&quot;formhelper#method-i-date_field&quot;&gt;ActionView :: Helpers :: FormHelper＃date_field&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="df621530085ff8f3fb269f5fe6e03e3b5cc5b177" translate="yes" xml:space="preserve">
          <source>Wraps &lt;a href=&quot;formhelper#method-i-datetime_field&quot;&gt;ActionView::Helpers::FormHelper#datetime_field&lt;/a&gt; for form builders:</source>
          <target state="translated">为表单构建器包装&lt;a href=&quot;formhelper#method-i-datetime_field&quot;&gt;ActionView :: Helpers :: FormHelper＃datetime_field&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="f2d9fd316bbc91af402ff9794ab1848b00af1da6" translate="yes" xml:space="preserve">
          <source>Wraps &lt;a href=&quot;formhelper#method-i-datetime_local_field&quot;&gt;ActionView::Helpers::FormHelper#datetime_local_field&lt;/a&gt; for form builders:</source>
          <target state="translated">为表单构建器包装&lt;a href=&quot;formhelper#method-i-datetime_local_field&quot;&gt;ActionView :: Helpers :: FormHelper＃datetime_local_field&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="6c111aeb0c914f76126c84455977b6b21767f394" translate="yes" xml:space="preserve">
          <source>Wraps &lt;a href=&quot;formhelper#method-i-email_field&quot;&gt;ActionView::Helpers::FormHelper#email_field&lt;/a&gt; for form builders:</source>
          <target state="translated">为表单构建器包装&lt;a href=&quot;formhelper#method-i-email_field&quot;&gt;ActionView :: Helpers :: FormHelper＃email_field&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="d68a01e0ae1f4266a6ca2b32d7cc3e2e13daac93" translate="yes" xml:space="preserve">
          <source>Wraps &lt;a href=&quot;formhelper#method-i-month_field&quot;&gt;ActionView::Helpers::FormHelper#month_field&lt;/a&gt; for form builders:</source>
          <target state="translated">为表单构建器包装&lt;a href=&quot;formhelper#method-i-month_field&quot;&gt;ActionView :: Helpers :: FormHelper＃month_field&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="a0530a1ed29cd691567dc08770d74a79f6ef8376" translate="yes" xml:space="preserve">
          <source>Wraps &lt;a href=&quot;formhelper#method-i-number_field&quot;&gt;ActionView::Helpers::FormHelper#number_field&lt;/a&gt; for form builders:</source>
          <target state="translated">为表单构建器包装&lt;a href=&quot;formhelper#method-i-number_field&quot;&gt;ActionView :: Helpers :: FormHelper＃number_field&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="0d258f57456406303cd9a3524c0273a483e71734" translate="yes" xml:space="preserve">
          <source>Wraps &lt;a href=&quot;formhelper#method-i-password_field&quot;&gt;ActionView::Helpers::FormHelper#password_field&lt;/a&gt; for form builders:</source>
          <target state="translated">为表单构建器包装&lt;a href=&quot;formhelper#method-i-password_field&quot;&gt;ActionView :: Helpers :: FormHelper＃password_field&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="ba95f0fce3e8352510f2d251a53e7aebbe4a3d45" translate="yes" xml:space="preserve">
          <source>Wraps &lt;a href=&quot;formhelper#method-i-phone_field&quot;&gt;ActionView::Helpers::FormHelper#phone_field&lt;/a&gt; for form builders:</source>
          <target state="translated">为表单构建器包装&lt;a href=&quot;formhelper#method-i-phone_field&quot;&gt;ActionView :: Helpers :: FormHelper＃phone_field&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="726da350a0cae9d4a97178353e5e135f04b0944c" translate="yes" xml:space="preserve">
          <source>Wraps &lt;a href=&quot;formhelper#method-i-range_field&quot;&gt;ActionView::Helpers::FormHelper#range_field&lt;/a&gt; for form builders:</source>
          <target state="translated">为表单构建器包装&lt;a href=&quot;formhelper#method-i-range_field&quot;&gt;ActionView :: Helpers :: FormHelper＃range_field&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="aa14b9e3b7b4fd2cb708de9fe14ef247df1077a2" translate="yes" xml:space="preserve">
          <source>Wraps &lt;a href=&quot;formhelper#method-i-search_field&quot;&gt;ActionView::Helpers::FormHelper#search_field&lt;/a&gt; for form builders:</source>
          <target state="translated">为表单构建器包装&lt;a href=&quot;formhelper#method-i-search_field&quot;&gt;ActionView :: Helpers :: FormHelper＃search_field&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="93711269091d6ee4ae4bed09d71f7cc7ccaf337d" translate="yes" xml:space="preserve">
          <source>Wraps &lt;a href=&quot;formhelper#method-i-telephone_field&quot;&gt;ActionView::Helpers::FormHelper#telephone_field&lt;/a&gt; for form builders:</source>
          <target state="translated">为表单构建器包装&lt;a href=&quot;formhelper#method-i-telephone_field&quot;&gt;ActionView :: Helpers :: FormHelper＃telephone_field&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="b7e05db2fc287814d5334b48a6af7536243ee466" translate="yes" xml:space="preserve">
          <source>Wraps &lt;a href=&quot;formhelper#method-i-text_area&quot;&gt;ActionView::Helpers::FormHelper#text_area&lt;/a&gt; for form builders:</source>
          <target state="translated">为表单构建器包装&lt;a href=&quot;formhelper#method-i-text_area&quot;&gt;ActionView :: Helpers :: FormHelper＃text_area&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="efd630ed291c186a928c7d08a9ac8c06bc17cde8" translate="yes" xml:space="preserve">
          <source>Wraps &lt;a href=&quot;formhelper#method-i-text_field&quot;&gt;ActionView::Helpers::FormHelper#text_field&lt;/a&gt; for form builders:</source>
          <target state="translated">为表单构建器包装&lt;a href=&quot;formhelper#method-i-text_field&quot;&gt;ActionView :: Helpers :: FormHelper＃text_field&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="1018138a0f7f235ecf2024dc4d5b3253f519d56e" translate="yes" xml:space="preserve">
          <source>Wraps &lt;a href=&quot;formhelper#method-i-time_field&quot;&gt;ActionView::Helpers::FormHelper#time_field&lt;/a&gt; for form builders:</source>
          <target state="translated">为表单构建器包装&lt;a href=&quot;formhelper#method-i-time_field&quot;&gt;ActionView :: Helpers :: FormHelper＃time_field&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="40b64a8571a2ceaceec1f7a1dc73be2ac2359c33" translate="yes" xml:space="preserve">
          <source>Wraps &lt;a href=&quot;formhelper#method-i-url_field&quot;&gt;ActionView::Helpers::FormHelper#url_field&lt;/a&gt; for form builders:</source>
          <target state="translated">为表单构建器包装&lt;a href=&quot;formhelper#method-i-url_field&quot;&gt;ActionView :: Helpers :: FormHelper＃url_field&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="e8247e204371996bbffddeb185a48d4d448f125c" translate="yes" xml:space="preserve">
          <source>Wraps &lt;a href=&quot;formhelper#method-i-week_field&quot;&gt;ActionView::Helpers::FormHelper#week_field&lt;/a&gt; for form builders:</source>
          <target state="translated">为表单构建器包装&lt;a href=&quot;formhelper#method-i-week_field&quot;&gt;ActionView :: Helpers :: FormHelper＃week_field&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="2bb5a2017932c52fe20a2a7c980bb7673660fece" translate="yes" xml:space="preserve">
          <source>Wraps &lt;a href=&quot;formoptionshelper#method-i-collection_check_boxes&quot;&gt;ActionView::Helpers::FormOptionsHelper#collection_check_boxes&lt;/a&gt; for form builders:</source>
          <target state="translated">为表单构建器包装&lt;a href=&quot;formoptionshelper#method-i-collection_check_boxes&quot;&gt;ActionView :: Helpers :: FormOptionsHelper＃collection_check_boxes&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="5ab8cb6a2146fe56a6d49ca18abeab078836ab0d" translate="yes" xml:space="preserve">
          <source>Wraps &lt;a href=&quot;formoptionshelper#method-i-collection_radio_buttons&quot;&gt;ActionView::Helpers::FormOptionsHelper#collection_radio_buttons&lt;/a&gt; for form builders:</source>
          <target state="translated">为表单构建器包装&lt;a href=&quot;formoptionshelper#method-i-collection_radio_buttons&quot;&gt;ActionView :: Helpers :: FormOptionsHelper＃collection_radio_buttons&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="5802d755104febf0289e4b4e174b6887e54fb201" translate="yes" xml:space="preserve">
          <source>Wraps &lt;a href=&quot;formoptionshelper#method-i-collection_select&quot;&gt;ActionView::Helpers::FormOptionsHelper#collection_select&lt;/a&gt; for form builders:</source>
          <target state="translated">为表格构建器包装&lt;a href=&quot;formoptionshelper#method-i-collection_select&quot;&gt;ActionView :: Helpers :: FormOptionsHelper＃collection_select&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="afe6b2c463baf222ad914938611e70a33d5ca397" translate="yes" xml:space="preserve">
          <source>Wraps &lt;a href=&quot;formoptionshelper#method-i-grouped_collection_select&quot;&gt;ActionView::Helpers::FormOptionsHelper#grouped_collection_select&lt;/a&gt; for form builders:</source>
          <target state="translated">为表单构建器包装&lt;a href=&quot;formoptionshelper#method-i-grouped_collection_select&quot;&gt;ActionView :: Helpers :: FormOptionsHelper＃grouped_collection_select&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="d3b84ced4109844a2b10630391fa74883ed10b61" translate="yes" xml:space="preserve">
          <source>Wraps &lt;a href=&quot;formoptionshelper#method-i-select&quot;&gt;ActionView::Helpers::FormOptionsHelper#select&lt;/a&gt; for form builders:</source>
          <target state="translated">为表单构建器包装&lt;a href=&quot;formoptionshelper#method-i-select&quot;&gt;ActionView :: Helpers :: FormOptionsHelper＃select&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="879612bc032e464b5a3f5f3b598f2e6dd11a0475" translate="yes" xml:space="preserve">
          <source>Wraps &lt;a href=&quot;formoptionshelper#method-i-time_zone_select&quot;&gt;ActionView::Helpers::FormOptionsHelper#time_zone_select&lt;/a&gt; for form builders:</source>
          <target state="translated">为表单构建器包装&lt;a href=&quot;formoptionshelper#method-i-time_zone_select&quot;&gt;ActionView :: Helpers :: FormOptionsHelper＃time_zone_select&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="1938a626cd21a3680d43346c19d0d54aa23f8316" translate="yes" xml:space="preserve">
          <source>Wraps a local disk path as an Active Storage service. See &lt;a href=&quot;../service&quot;&gt;ActiveStorage::Service&lt;/a&gt; for the generic API documentation that applies to all services.</source>
          <target state="translated">将本地磁盘路径包装为Active Storage服务。有关适用于所有服务的通用API文档，请参见&lt;a href=&quot;../service&quot;&gt;ActiveStorage :: Service&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e63986ab318091b898ec944402acc6968561dae4" translate="yes" xml:space="preserve">
          <source>Wraps a set of mirror services and provides a single &lt;a href=&quot;../service&quot;&gt;ActiveStorage::Service&lt;/a&gt; object that will all have the files uploaded to them. A &lt;code&gt;primary&lt;/code&gt; service is designated to answer calls to &lt;code&gt;download&lt;/code&gt;, &lt;code&gt;exists?&lt;/code&gt;, and &lt;code&gt;url&lt;/code&gt;.</source>
          <target state="translated">包装一组镜像服务，并提供一个&lt;a href=&quot;../service&quot;&gt;ActiveStorage :: Service&lt;/a&gt;对象，所有对象都将文件上传到它们。指定了一项 &lt;code&gt;primary&lt;/code&gt; 服务来应答 &lt;code&gt;download&lt;/code&gt; 呼叫，是否 &lt;code&gt;exists?&lt;/code&gt; 和 &lt;code&gt;url&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a9ff38c87a49d8850ef64a42c7f2c3b9599e5cf4" translate="yes" xml:space="preserve">
          <source>Wraps any standard &lt;a href=&quot;logger&quot;&gt;Logger&lt;/a&gt; object to provide tagging capabilities.</source>
          <target state="translated">包装任何标准&lt;a href=&quot;logger&quot;&gt;Logger&lt;/a&gt;对象以提供标记功能。</target>
        </trans-unit>
        <trans-unit id="3d9e28efdc4f462e98b3b4d0e8e6debdb6f0d597" translate="yes" xml:space="preserve">
          <source>Wraps gem entries inside a group.</source>
          <target state="translated">将宝石条目包裹在一个组内。</target>
        </trans-unit>
        <trans-unit id="2a120fd8416c72af30bfb0298afa8ec2b8708547" translate="yes" xml:space="preserve">
          <source>Wraps gem entries inside a group:</source>
          <target state="translated">将宝石条目包裹在一个组内。</target>
        </trans-unit>
        <trans-unit id="47ded7ecd046d65a482a826d10a11d9b379018a8" translate="yes" xml:space="preserve">
          <source>Wraps its argument in an array unless it is already an array (or array-like).</source>
          <target state="translated">将其参数封装在一个数组中,除非它已经是一个数组(或类似数组)。</target>
        </trans-unit>
        <trans-unit id="35b87ade3707e7464cbbfbd66840c975454f01c7" translate="yes" xml:space="preserve">
          <source>Wraps the &lt;code&gt;text&lt;/code&gt; into lines no longer than &lt;code&gt;line_width&lt;/code&gt; width. This method breaks on the first whitespace character that does not exceed &lt;code&gt;line_width&lt;/code&gt; (which is 80 by default).</source>
          <target state="translated">将 &lt;code&gt;text&lt;/code&gt; 包装成不超过 &lt;code&gt;line_width&lt;/code&gt; width的行。此方法在不超过 &lt;code&gt;line_width&lt;/code&gt; （默认值为80）的第一个空格字符处中断。</target>
        </trans-unit>
        <trans-unit id="908f1855e9a175b431fa0948765ecc2bbf6dbb0a" translate="yes" xml:space="preserve">
          <source>Wraps the Amazon Simple Storage &lt;a href=&quot;../service&quot;&gt;Service&lt;/a&gt; (S3) as an Active Storage service. See &lt;a href=&quot;../service&quot;&gt;ActiveStorage::Service&lt;/a&gt; for the generic API documentation that applies to all services.</source>
          <target state="translated">将Amazon Simple Storage &lt;a href=&quot;../service&quot;&gt;Service&lt;/a&gt;（S3）包装为Active Storage服务。有关适用于所有服务的通用API文档，请参见&lt;a href=&quot;../service&quot;&gt;ActiveStorage :: Service&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="91f330be9930c6bbd3bad639e7a2850098b71004" translate="yes" xml:space="preserve">
          <source>Wraps the Google Cloud Storage as an Active Storage service. See &lt;a href=&quot;../service&quot;&gt;ActiveStorage::Service&lt;/a&gt; for the generic API documentation that applies to all services.</source>
          <target state="translated">将Google Cloud Storage包装为Active Storage服务。有关适用于所有服务的通用API文档，请参见&lt;a href=&quot;../service&quot;&gt;ActiveStorage :: Service&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="eea889ef160e7a8e7cc5d7cd8b5b8f2bfeb11933" translate="yes" xml:space="preserve">
          <source>Wraps the Microsoft Azure Storage &lt;a href=&quot;../blob&quot;&gt;Blob&lt;/a&gt;&lt;a href=&quot;../service&quot;&gt;Service&lt;/a&gt; as an Active Storage service. See &lt;a href=&quot;../service&quot;&gt;ActiveStorage::Service&lt;/a&gt; for the generic API documentation that applies to all services.</source>
          <target state="translated">将Microsoft Azure存储&lt;a href=&quot;../blob&quot;&gt;Blob &lt;/a&gt;&lt;a href=&quot;../service&quot;&gt;服务&lt;/a&gt;包装为活动存储服务。有关适用于所有服务的通用API文档，请参见&lt;a href=&quot;../service&quot;&gt;ActiveStorage :: Service&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5f7314ba35229d2d6949855adee7605590569bb6" translate="yes" xml:space="preserve">
          <source>Wraps the array in an &lt;code&gt;ArrayInquirer&lt;/code&gt; object, which gives a friendlier way to check its string-like contents.</source>
          <target state="translated">将数组包装在 &lt;code&gt;ArrayInquirer&lt;/code&gt; 对象中，这提供了一种更友好的方式来检查其类似于字符串的内容。</target>
        </trans-unit>
        <trans-unit id="81572172471a96d13378b8323c3c37046b2a5f21" translate="yes" xml:space="preserve">
          <source>Wraps the current string in the &lt;code&gt;ActiveSupport::StringInquirer&lt;/code&gt; class, which gives you a prettier way to test for equality.</source>
          <target state="translated">将当前字符串包装在 &lt;code&gt;ActiveSupport::StringInquirer&lt;/code&gt; 类中，这为您提供了一种测试是否相等的更漂亮方法。</target>
        </trans-unit>
        <trans-unit id="84d5d582a608648a96ea4621ede51988a4a6da6c" translate="yes" xml:space="preserve">
          <source>Wraps the original exception raised as &lt;code&gt;cause&lt;/code&gt;.</source>
          <target state="translated">包装作为引发原始异常 &lt;code&gt;cause&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="53ef5f4e0b6b2bfb8419cf2be8f0535872435866" translate="yes" xml:space="preserve">
          <source>Wraps the parameters hash into a nested hash. This will allow clients to submit requests without having to specify any root elements.</source>
          <target state="translated">将参数哈希包装成一个嵌套的哈希。这将允许客户端在提交请求时无需指定任何根元素。</target>
        </trans-unit>
        <trans-unit id="fc6346cafe5f99f56a9f0e0b81d0cbdac64edc4d" translate="yes" xml:space="preserve">
          <source>Wraps the passed block in a transaction, locking the object before yielding. You can pass the SQL locking clause as argument (see &lt;code&gt;lock!&lt;/code&gt;).</source>
          <target state="translated">将传递的块包装在事务中，在屈服之前锁定对象。您可以将SQL锁定子句作为参数传递（请参见 &lt;code&gt;lock!&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="4011b4083b52da51ac34e29a3547b20cd6b8eb1c" translate="yes" xml:space="preserve">
          <source>Wraps the underlying database error as &lt;code&gt;cause&lt;/code&gt;.</source>
          <target state="translated">将基础数据库错误包装为 &lt;code&gt;cause&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4dda1f021c3168caac40baf568641d062401b7df" translate="yes" xml:space="preserve">
          <source>Write tests and make sure they pass.</source>
          <target state="translated">编写测试并确保其通过。</target>
        </trans-unit>
        <trans-unit id="7c529c079bc11447cc397e2b9b0627ac412a7895" translate="yes" xml:space="preserve">
          <source>Write to a file atomically. Useful for situations where you don't want other processes or threads to see half-written files.</source>
          <target state="translated">以原子方式写入文件。对于不想让其他进程或线程看到半写的文件的情况很有用。</target>
        </trans-unit>
        <trans-unit id="f1b9d8ffa0afae0650e6ec9c0d7fa945b89ac225" translate="yes" xml:space="preserve">
          <source>Writes &lt;code&gt;content&lt;/code&gt; to the location signified by &lt;code&gt;key&lt;/code&gt; (see &lt;code&gt;expire_fragment&lt;/code&gt; for acceptable formats).</source>
          <target state="translated">将 &lt;code&gt;content&lt;/code&gt; 写入由 &lt;code&gt;key&lt;/code&gt; 表示的位置（有关可接受的格式，请参见 &lt;code&gt;expire_fragment&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="88a71074d1bf85388e2492cd854f7144f6359eef" translate="yes" xml:space="preserve">
          <source>Writes the value to the cache, with the key.</source>
          <target state="translated">将该值写入缓存,键。</target>
        </trans-unit>
        <trans-unit id="29ea0226f4054f1c523a78567eab72f958b90ffb" translate="yes" xml:space="preserve">
          <source>Writing a Migration</source>
          <target state="translated">撰写移民报告</target>
        </trans-unit>
        <trans-unit id="993646e6d67c9e02f757b9fe3ac2b4ef64f3daf9" translate="yes" xml:space="preserve">
          <source>Writing an object will convert it into standard &lt;a href=&quot;sse&quot;&gt;SSE&lt;/a&gt; format with whatever options you have configured. You may choose to set the following options:</source>
          <target state="translated">编写对象将使用您配置的任何选项将其转换为标准&lt;a href=&quot;sse&quot;&gt;SSE&lt;/a&gt;格式。您可以选择设置以下选项：</target>
        </trans-unit>
        <trans-unit id="ff0144beabe2e0bec6eced06f50b85e8f1d25a2f" translate="yes" xml:space="preserve">
          <source>Writing value objects</source>
          <target state="translated">写值对象</target>
        </trans-unit>
        <trans-unit id="9ce4ba672dbfa70c136d86802b2038833d699c47" translate="yes" xml:space="preserve">
          <source>X-Sendfile Headers</source>
          <target state="translated">X-发送文件头</target>
        </trans-unit>
        <trans-unit id="fd7680c35859b5777f85041c7c4cf5302a762162" translate="yes" xml:space="preserve">
          <source>XML Serialization</source>
          <target state="translated">XML序列化</target>
        </trans-unit>
        <trans-unit id="09e6645d471494bf5a688d21ef32c01395d65e1f" translate="yes" xml:space="preserve">
          <source>XSS attacks work like this: An attacker injects some code, the web application saves it and displays it on a page, later presented to a victim. Most XSS examples simply display an alert box, but it is more powerful than that. XSS can steal the cookie, hijack the session, redirect the victim to a fake website, display advertisements for the benefit of the attacker, change elements on the web site to get confidential information or install malicious software through security holes in the web browser.</source>
          <target state="translated">XSS攻击的工作原理是这样的。攻击者注入一些代码,网络应用程序将其保存并显示在页面上,随后呈现给受害者。大多数XSS例子只是简单地显示一个警告框,但它比这更强大。XSS可以窃取cookie,劫持会话,将受害者重定向到一个假网站,为攻击者的利益显示广告,改变网站上的元素以获取机密信息,或者通过网络浏览器的安全漏洞安装恶意软件。</target>
        </trans-unit>
        <trans-unit id="09fe790f978055da103ba46b6d799eee28cfe8d9" translate="yes" xml:space="preserve">
          <source>YAML-formatted fixtures are a human-friendly way to describe your sample data. These types of fixtures have the &lt;strong&gt;.yml&lt;/strong&gt; file extension (as in &lt;code&gt;users.yml&lt;/code&gt;).</source>
          <target state="translated">YAML格式的夹具是一种人性化的方式来描述您的样本数据。这些类型的装置具有&lt;strong&gt;.yml&lt;/strong&gt;文件扩展名（如 &lt;code&gt;users.yml&lt;/code&gt; 中）。</target>
        </trans-unit>
        <trans-unit id="f83a0e54478505513704d0569e61871e8b8b37a7" translate="yes" xml:space="preserve">
          <source>YELLOW</source>
          <target state="translated">YELLOW</target>
        </trans-unit>
        <trans-unit id="0323008786597f0bc9844ace09b953639f0bbb0c" translate="yes" xml:space="preserve">
          <source>Yes: Allows the priority to be set on the job object, at the queue level or as default configuration option.</source>
          <target state="translated">是:允许在作业对象上设置优先级,在队列级别或作为默认配置选项。</target>
        </trans-unit>
        <trans-unit id="c6c15e1f21f3259d5bb359bb473bd786b29f8269" translate="yes" xml:space="preserve">
          <source>Yes: Jobs may set which queue they are run in with queue_as or by using the set method.</source>
          <target state="translated">是:作业可以使用queue_as或使用set方法设置它们运行的队列。</target>
        </trans-unit>
        <trans-unit id="9cb4f3f2291563f1705b99b0a25c67ff90b41dd8" translate="yes" xml:space="preserve">
          <source>Yes: The Number of retries can be configured globally, for each instance or on the queue. This adapter may also present failed instances of the job class that can be restarted.</source>
          <target state="translated">是:重试次数可以全局配置,为每个实例或队列配置。该适配器还可以呈现失败的作业类实例,这些实例可以重新启动。</target>
        </trans-unit>
        <trans-unit id="6e30f06a26b3a02e813bacd58a98bc9ad5629b1f" translate="yes" xml:space="preserve">
          <source>Yes: The Queue Adapter has the ability to run the job in a non-blocking manner. It either runs on a separate or forked process, or on a different thread.</source>
          <target state="translated">是的:队列适配器具有以非阻塞方式运行作业的能力。它可以在一个单独的或分叉的进程上运行,或者在不同的线程上运行。</target>
        </trans-unit>
        <trans-unit id="2dbe4eab5f8b127d4a1975d143ccbb2b6d02d074" translate="yes" xml:space="preserve">
          <source>Yes: The adapter will run the job in the future through perform_later.</source>
          <target state="translated">是:适配器将在未来通过 perform_later 运行该作业。</target>
        </trans-unit>
        <trans-unit id="dca75359fefce732c6fbc88955c6bc7662afc24e" translate="yes" xml:space="preserve">
          <source>Yields &lt;a href=&quot;relation&quot;&gt;ActiveRecord::Relation&lt;/a&gt; objects to work with a batch of records.</source>
          <target state="translated">产生&lt;a href=&quot;relation&quot;&gt;ActiveRecord :: Relation&lt;/a&gt;对象以处理一批记录。</target>
        </trans-unit>
        <trans-unit id="ca8fe1d8d4f29cf627d10de0048185d3f4f0c20b" translate="yes" xml:space="preserve">
          <source>Yields a singleton instance of &lt;a href=&quot;inflector/inflections&quot;&gt;Inflector::Inflections&lt;/a&gt; so you can specify additional inflector rules. If passed an optional locale, rules for other languages can be specified. If not specified, defaults to &lt;code&gt;:en&lt;/code&gt;. Only rules for English are provided.</source>
          <target state="translated">产生&lt;a href=&quot;inflector/inflections&quot;&gt;Inflector :: Inflections&lt;/a&gt;的单例实例，因此您可以指定其他inflector规则。如果传递了可选的语言环境，则可以指定其他语言的规则。如果未指定，则默认为 &lt;code&gt;:en&lt;/code&gt; 。仅提供英语规则。</target>
        </trans-unit>
        <trans-unit id="7af77031aa5483dc3c5212997daf7f80484e94a7" translate="yes" xml:space="preserve">
          <source>Yields an &lt;a href=&quot;../relation&quot;&gt;ActiveRecord::Relation&lt;/a&gt; object for each batch of records.</source>
          <target state="translated">为每批记录生成一个&lt;a href=&quot;../relation&quot;&gt;ActiveRecord :: Relation&lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="02825770b8ec84c175b3fcdcc219525a2e1f0ee5" translate="yes" xml:space="preserve">
          <source>Yields each batch of records that was found by the find options as an array.</source>
          <target state="translated">将find选项找到的每一批记录以数组的形式产生。</target>
        </trans-unit>
        <trans-unit id="51fafe39a620d2088ad59802643a747dcc537a48" translate="yes" xml:space="preserve">
          <source>You &lt;strong&gt;must&lt;/strong&gt; call close on your stream when you're finished, otherwise the socket may be left open forever.</source>
          <target state="translated">你&lt;strong&gt;必须&lt;/strong&gt;调用close上，当你完成了你的数据流，否则，插座可能会永远保持开放。</target>
        </trans-unit>
        <trans-unit id="294a3dd89a764318df53ccee20220897b789e1b3" translate="yes" xml:space="preserve">
          <source>You actually have a functional Rails application already. To see it, you need to start a web server on your development machine. You can do this by running the following in the &lt;code&gt;blog&lt;/code&gt; directory:</source>
          <target state="translated">实际上，您已经拥有了功能正常的Rails应用程序。要查看它，您需要在开发计算机上启动Web服务器。您可以通过在 &lt;code&gt;blog&lt;/code&gt; 目录中运行以下命令来执行此操作：</target>
        </trans-unit>
        <trans-unit id="681e3dc347a2eb528dcfb825be20348ea919af91" translate="yes" xml:space="preserve">
          <source>You also have access to three instance variables in your functional tests, after a request is made:</source>
          <target state="translated">在提出请求后,你还可以在功能测试中访问三个实例变量。</target>
        </trans-unit>
        <trans-unit id="6fc926cb3e2bf7174eb1a1092f36dc9fe8c9706e" translate="yes" xml:space="preserve">
          <source>You also have the option to call instrument without passing a block. This lets you leverage the instrumentation infrastructure for other messaging uses.</source>
          <target state="translated">你还可以选择在不传递块的情况下调用工具。这让你可以利用工具基础架构来做其他的消息传递用途。</target>
        </trans-unit>
        <trans-unit id="f2c22a22f868638afa467d3d6feaea4cfa99c333" translate="yes" xml:space="preserve">
          <source>You also need to set the &lt;code&gt;migrations_paths&lt;/code&gt; in the database configurations to tell Rails where to find the migrations.</source>
          <target state="translated">您还需要在数据库配置中设置 &lt;code&gt;migrations_paths&lt;/code&gt; ，以告知Rails在哪里找到迁移。</target>
        </trans-unit>
        <trans-unit id="14a9b0f75deaff5698b682d13079d1968adffd89" translate="yes" xml:space="preserve">
          <source>You are able to move this logic out into a class if it is too complex for routes. This class must have a &lt;code&gt;matches?&lt;/code&gt; method defined on it which either returns &lt;code&gt;true&lt;/code&gt; if the user should be given access to that route, or &lt;code&gt;false&lt;/code&gt; if the user should not.</source>
          <target state="translated">如果对于路由而言过于复杂，则可以将该逻辑移到一个类中。这个班必须有一个 &lt;code&gt;matches?&lt;/code&gt; 在其上定义的方法，如果应授予用户对该路由的访问权，则返回 &lt;code&gt;true&lt;/code&gt; ;否则，将返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3f317ca9ebd16a640cc03f2f977672b875d4231c" translate="yes" xml:space="preserve">
          <source>You are creating a nested (savepoint) transaction</source>
          <target state="translated">您正在创建一个嵌套的(保存点)事务。</target>
        </trans-unit>
        <trans-unit id="084e0a5e0164bdfaf97a83b19a81de5b853266d6" translate="yes" xml:space="preserve">
          <source>You are even able to create your own events inside your application which you can later subscribe to.</source>
          <target state="translated">你甚至可以在你的应用程序中创建你自己的事件,你以后可以订阅。</target>
        </trans-unit>
        <trans-unit id="8587767d2d0d7b672903bbd4742052bd94d0dbd3" translate="yes" xml:space="preserve">
          <source>You are guaranteed that the key is returned as a string:</source>
          <target state="translated">保证你的密钥以字符串的形式返回。</target>
        </trans-unit>
        <trans-unit id="3fe6ff6fc48c797ef8888f4f87efaa5cc97f5e6c" translate="yes" xml:space="preserve">
          <source>You are joining an existing open transaction</source>
          <target state="translated">您正在加入一个现有的开放式交易</target>
        </trans-unit>
        <trans-unit id="5e9d60da70a08f02e626d226545dfd81c92b8477" translate="yes" xml:space="preserve">
          <source>You are not free to use just any name for your associations. Because creating an association adds a method with that name to the model, it is a bad idea to give an association a name that is already used for an instance method of &lt;code&gt;ActiveRecord::Base&lt;/code&gt;. The association method would override the base method and break things. For instance, &lt;code&gt;attributes&lt;/code&gt; or &lt;code&gt;connection&lt;/code&gt; are bad names for associations.</source>
          <target state="translated">您不能随意为您的关联使用任何名称。因为创建关联会将带有该名称的方法添加到模型，所以给关联赋予已经用于 &lt;code&gt;ActiveRecord::Base&lt;/code&gt; 的实例方法的名称是一个坏主意。关联方法将覆盖基本方法并破坏事物。例如， &lt;code&gt;attributes&lt;/code&gt; 或 &lt;code&gt;connection&lt;/code&gt; 是关联的不良名称。</target>
        </trans-unit>
        <trans-unit id="104f499e65caa019db21658db26a90d7126f18e3" translate="yes" xml:space="preserve">
          <source>You are not limited to one magically generated column. For example:</source>
          <target state="translated">你不局限于一个神奇生成的列。例如:</target>
        </trans-unit>
        <trans-unit id="50cf21775cef53618cec0e58c74930981920d685" translate="yes" xml:space="preserve">
          <source>You are not limited to querying fields from a single table, you can query multiple tables as well.</source>
          <target state="translated">你不局限于查询单个表的字段,你也可以查询多个表。</target>
        </trans-unit>
        <trans-unit id="0cd7b4ce175b227dd05123992042e5800839f200" translate="yes" xml:space="preserve">
          <source>You are not limited to the seven routes that RESTful routing creates by default. If you like, you may add additional routes that apply to the collection or individual members of the collection.</source>
          <target state="translated">您并不局限于 RESTful 路由默认创建的七个路由。如果您愿意,您可以添加适用于集合或集合中单个成员的附加路由。</target>
        </trans-unit>
        <trans-unit id="f1d35ef25dd6ca63f0e6fbedd944b5f9e23aa5b8" translate="yes" xml:space="preserve">
          <source>You can access the cache by calling &lt;code&gt;Rails.cache&lt;/code&gt;.</source>
          <target state="translated">您可以通过调用 &lt;code&gt;Rails.cache&lt;/code&gt; 访问缓存。</target>
        </trans-unit>
        <trans-unit id="c530329545cd23f99f4cd2ea0c1082b3a74dad5e" translate="yes" xml:space="preserve">
          <source>You can actually specify &lt;strong&gt;any&lt;/strong&gt; association with the &lt;code&gt;:through&lt;/code&gt; option, including an association which has a &lt;code&gt;:through&lt;/code&gt; option itself. For example:</source>
          <target state="translated">您实际上可以使用 &lt;code&gt;:through&lt;/code&gt; 选项指定&lt;strong&gt;任何&lt;/strong&gt;关联，包括本身具有 &lt;code&gt;:through&lt;/code&gt; 选项的关联。例如：</target>
        </trans-unit>
        <trans-unit id="1ddc87d6feffeebc605dc575f37022baa9637660" translate="yes" xml:space="preserve">
          <source>You can add HTML attributes using the &lt;code&gt;options&lt;/code&gt;. The &lt;code&gt;options&lt;/code&gt; supports additional keys for convenience and conformance:</source>
          <target state="translated">您可以使用 &lt;code&gt;options&lt;/code&gt; 添加HTML属性。这些 &lt;code&gt;options&lt;/code&gt; 支持其他键，以方便使用和保持一致性：</target>
        </trans-unit>
        <trans-unit id="dfabdbc6eaf9706d38cb9b9efa65e26a262aaa5e" translate="yes" xml:space="preserve">
          <source>You can add a new middleware to the middleware stack using any of the following methods:</source>
          <target state="translated">您可以使用以下任何一种方法向中间件堆栈添加新的中间件。</target>
        </trans-unit>
        <trans-unit id="b6cf5b312541205d410ce6fcd4a7a38efaf6cc28" translate="yes" xml:space="preserve">
          <source>You can add an object to a collection without automatically saving it by using the &lt;code&gt;collection.build&lt;/code&gt; method (documented below).</source>
          <target state="translated">您可以使用 &lt;code&gt;collection.build&lt;/code&gt; 方法（如下所述）将对象添加到集合中，而无需自动保存它。</target>
        </trans-unit>
        <trans-unit id="73995fa477645127524d7f813ee3438c0d00dac3" translate="yes" xml:space="preserve">
          <source>You can add arbitrary attributes to the options using hashes:</source>
          <target state="translated">您可以使用哈希值向选项中添加任意属性。</target>
        </trans-unit>
        <trans-unit id="10e36c07c5d759062c598044b8b82d7f651252a8" translate="yes" xml:space="preserve">
          <source>You can add breakpoints dynamically with the command &lt;code&gt;break&lt;/code&gt; (or just &lt;code&gt;b&lt;/code&gt;). There are 3 possible ways of adding breakpoints manually:</source>
          <target state="translated">您可以使用 &lt;code&gt;break&lt;/code&gt; （或只是 &lt;code&gt;b&lt;/code&gt; ）命令动态添加断点。有3种可能的方式来手动添加断点：</target>
        </trans-unit>
        <trans-unit id="3efa5f758479db8ccd1bc617f6148e0648381644" translate="yes" xml:space="preserve">
          <source>You can add error messages that are related to the object's state as a whole, instead of being related to a specific attribute. You can use this method when you want to say that the object is invalid, no matter the values of its attributes. Since &lt;code&gt;errors[:base]&lt;/code&gt; is an array, you can simply add a string to it and it will be used as an error message.</source>
          <target state="translated">您可以添加与整个对象状态相关的错误消息，而不是与特定属性相关的消息。无论对象属性的值如何，只要您要说该对象无效，就可以使用此方法。由于 &lt;code&gt;errors[:base]&lt;/code&gt; 是一个数组，因此您可以简单地向其中添加一个字符串，它将用作错误消息。</target>
        </trans-unit>
        <trans-unit id="3ebe9a374cb043e6da2b3cab5e7454f2d1ed5a41" translate="yes" xml:space="preserve">
          <source>You can add more default directories to search from by using &lt;code&gt;config.annotations.register_directories&lt;/code&gt;. It receives a list of directory names.</source>
          <target state="translated">您可以使用 &lt;code&gt;config.annotations.register_directories&lt;/code&gt; 添加更多默认目录以进行搜索。它接收目录名称列表。</target>
        </trans-unit>
        <trans-unit id="fe38ee8171a18a570a4b5aa2fa46d1280f5d8ffd" translate="yes" xml:space="preserve">
          <source>You can add more default file extensions to search from by using &lt;code&gt;config.annotations.register_extensions&lt;/code&gt;. It receives a list of extensions with its corresponding regex to match it up.</source>
          <target state="translated">您可以使用 &lt;code&gt;config.annotations.register_extensions&lt;/code&gt; 添加更多默认文件扩展名以进行搜索。它接收带有相应正则表达式的扩展列表，以使其匹配。</target>
        </trans-unit>
        <trans-unit id="13bbfb7d06ba127f92a766fb55ae530c6c4d07a8" translate="yes" xml:space="preserve">
          <source>You can add more default tags to search for by using &lt;code&gt;config.annotations.register_tags&lt;/code&gt;. It receives a list of tags.</source>
          <target state="translated">您可以使用 &lt;code&gt;config.annotations.register_tags&lt;/code&gt; 添加更多默认标签以进行搜索。它接收标签列表。</target>
        </trans-unit>
        <trans-unit id="64413cb701d63ad6f1c3d121228bb9cc5ea07fc8" translate="yes" xml:space="preserve">
          <source>You can add your own formats to the &lt;a href=&quot;date#DATE_FORMATS&quot;&gt;Date::DATE_FORMATS&lt;/a&gt; hash. Use the format name as the hash key and either a strftime string or Proc instance that takes a date argument as the value.</source>
          <target state="translated">您可以将自己的格式添加到&lt;a href=&quot;date#DATE_FORMATS&quot;&gt;Date :: DATE_FORMATS&lt;/a&gt;哈希中。使用格式名称作为哈希键，并使用以日期参数为值的strftime字符串或Proc实例。</target>
        </trans-unit>
        <trans-unit id="fa1f024a818bd2f5895be3f48b2de7648053fbe7" translate="yes" xml:space="preserve">
          <source>You can add your own formats to the &lt;a href=&quot;time#DATE_FORMATS&quot;&gt;Time::DATE_FORMATS&lt;/a&gt; hash. Use the format name as the hash key and either a strftime string or Proc instance that takes a time argument as the value.</source>
          <target state="translated">您可以将自己的格式添加到&lt;a href=&quot;time#DATE_FORMATS&quot;&gt;Time :: DATE_FORMATS&lt;/a&gt;哈希中。使用格式名称作为哈希键，并使用以时间参数作为值的strftime字符串或Proc实例。</target>
        </trans-unit>
        <trans-unit id="e82c9b5d88c94ad8004196cf732dec9e73818d7f" translate="yes" xml:space="preserve">
          <source>You can add your own formats to the Range::RANGE_FORMATS hash. Use the format name as the hash key and a Proc instance.</source>
          <target state="translated">你可以将自己的格式添加到Range::RANGE_FORMATS哈希中。使用格式名称作为哈希键和一个Proc实例。</target>
        </trans-unit>
        <trans-unit id="007fedcd68699c59cd8841a2dc496117297ab795" translate="yes" xml:space="preserve">
          <source>You can add your own middlewares by using the &lt;code&gt;config.middleware.use&lt;/code&gt; method:</source>
          <target state="translated">您可以使用 &lt;code&gt;config.middleware.use&lt;/code&gt; 方法添加自己的中间件：</target>
        </trans-unit>
        <trans-unit id="163d9d9200f29abd2a28d7293452ec8d912e0935" translate="yes" xml:space="preserve">
          <source>You can allow users to delete associated objects by passing &lt;code&gt;allow_destroy: true&lt;/code&gt; to &lt;code&gt;accepts_nested_attributes_for&lt;/code&gt;</source>
          <target state="translated">您可以通过将 &lt;code&gt;allow_destroy: true&lt;/code&gt; 传递给 &lt;code&gt;accepts_nested_attributes_for&lt;/code&gt; 来允许用户删除关联的对象。</target>
        </trans-unit>
        <trans-unit id="a590f54852fd07188b8e55e57934c35f76d93f20" translate="yes" xml:space="preserve">
          <source>You can also add database specific timezone aware types. For example, for PostgreSQL:</source>
          <target state="translated">你也可以添加数据库特定的时区感知类型。例如,对于PostgreSQL。</target>
        </trans-unit>
        <trans-unit id="cd38e4dd8fb9d5633a5087ab09fbbc25342e067f" translate="yes" xml:space="preserve">
          <source>You can also apply a layout to a block within any template:</source>
          <target state="translated">您也可以将布局应用到任何模板中的块。</target>
        </trans-unit>
        <trans-unit id="5895348923d121440c44c4abbc0eede41b6afc79" translate="yes" xml:space="preserve">
          <source>You can also build forms using a customized &lt;a href=&quot;formbuilder&quot;&gt;FormBuilder&lt;/a&gt; class. Subclass &lt;a href=&quot;formbuilder&quot;&gt;FormBuilder&lt;/a&gt; and override or define some more helpers, then use your custom builder. For example, let's say you made a helper to automatically add labels to form inputs.</source>
          <target state="translated">您还可以使用自定义的&lt;a href=&quot;formbuilder&quot;&gt;FormBuilder&lt;/a&gt;类来构建表单。子类化&lt;a href=&quot;formbuilder&quot;&gt;FormBuilder&lt;/a&gt;并重写或定义更多帮助器，然后使用自定义构建器。例如，假设您创建了一个帮助程序，以自动将标签添加到表单输入中。</target>
        </trans-unit>
        <trans-unit id="88eafe740cfd5cc16e0ad9e9125853f19719b530" translate="yes" xml:space="preserve">
          <source>You can also call try with a block without accepting an argument, and the block will be instance_eval'ed instead:</source>
          <target state="translated">你也可以在不接受参数的情况下用block调用try,block将被instance_eval'ed代替。</target>
        </trans-unit>
        <trans-unit id="6ec906e7658edcad649751ab7a3819da46fe6b60" translate="yes" xml:space="preserve">
          <source>You can also configure your backend on a per job basis.</source>
          <target state="translated">你也可以根据每个工作配置你的后台。</target>
        </trans-unit>
        <trans-unit id="593c6cce27da04d32d7552fa299b0dd68148079b" translate="yes" xml:space="preserve">
          <source>You can also consider using the &lt;a href=&quot;https://guides.rubyonrails.org/action_view_overview.html#view-paths&quot;&gt;append_view_path&lt;/a&gt; method.</source>
          <target state="translated">您也可以考虑使用&lt;a href=&quot;https://guides.rubyonrails.org/action_view_overview.html#view-paths&quot;&gt;append_view_path&lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="5a5225acc0450d281786c2a6bcbc653bcbed1811" translate="yes" xml:space="preserve">
          <source>You can also constrain a route based on any method on the &lt;a href=&quot;action_controller_overview#the-request-object&quot;&gt;Request object&lt;/a&gt; that returns a &lt;code&gt;String&lt;/code&gt;.</source>
          <target state="translated">您还可以基于返回 &lt;code&gt;String&lt;/code&gt; 的&lt;a href=&quot;action_controller_overview#the-request-object&quot;&gt;Request对象&lt;/a&gt;上的任何方法来约束路由。</target>
        </trans-unit>
        <trans-unit id="0f8726beb95c1a65412628ce15181acc7d62c5b4" translate="yes" xml:space="preserve">
          <source>You can also create a job that will run on a specific queue:</source>
          <target state="translated">您还可以创建一个将在特定队列上运行的作业。</target>
        </trans-unit>
        <trans-unit id="fc0b5b9048af556a6ca2a3fb4cd5933ec08d2274" translate="yes" xml:space="preserve">
          <source>You can also create a layout with multiple yielding regions:</source>
          <target state="translated">您还可以创建一个具有多个屈服区域的布局。</target>
        </trans-unit>
        <trans-unit id="c52934d4b193b0806df41fff2ecf0fc3e7af744f" translate="yes" xml:space="preserve">
          <source>You can also create methods that verify the state of your models and add messages to the &lt;code&gt;errors&lt;/code&gt; collection when they are invalid. You must then register these methods by using the &lt;code&gt;validate&lt;/code&gt; (&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveModel/Validations/ClassMethods.html#method-i-validate&quot;&gt;API&lt;/a&gt;) class method, passing in the symbols for the validation methods' names.</source>
          <target state="translated">您还可以创建方法来验证模型的状态，并在无效时将消息添加到 &lt;code&gt;errors&lt;/code&gt; 集合。然后，您必须使用 &lt;code&gt;validate&lt;/code&gt; （&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveModel/Validations/ClassMethods.html#method-i-validate&quot;&gt;API&lt;/a&gt;）类方法注册这些方法，并传入验证方法名称的符号。</target>
        </trans-unit>
        <trans-unit id="dc43f298cd913d29b58cd18d7201df0039e76307" translate="yes" xml:space="preserve">
          <source>You can also define a &lt;code&gt;default_url_options&lt;/code&gt; method on individual mailers to override these default settings per-mailer.</source>
          <target state="translated">您还可以在单个邮件程序上定义 &lt;code&gt;default_url_options&lt;/code&gt; 方法，以覆盖每个邮件程序的这些默认设置。</target>
        </trans-unit>
        <trans-unit id="2166c7e47dcfe47da0426db905d2c76f779dceed" translate="yes" xml:space="preserve">
          <source>You can also define the &lt;a href=&quot;classmethods#method-i-primary_key&quot;&gt;primary_key&lt;/a&gt; method yourself:</source>
          <target state="translated">您也可以自己定义&lt;a href=&quot;classmethods#method-i-primary_key&quot;&gt;primary_key&lt;/a&gt;方法：</target>
        </trans-unit>
        <trans-unit id="7870edcf01aa2335eb862da133c5f358b3fafde4" translate="yes" xml:space="preserve">
          <source>You can also define the attributes for a model from a JSON string. However, you need to define the &lt;code&gt;attributes=&lt;/code&gt; method on your class:</source>
          <target state="translated">您还可以通过JSON字符串定义模型的属性。但是，您需要在类上定义 &lt;code&gt;attributes=&lt;/code&gt; 方法：</target>
        </trans-unit>
        <trans-unit id="d68270f39e5e1dd6c9f4f9ba28714138ef4f7a41" translate="yes" xml:space="preserve">
          <source>You can also define your own unit-quantifier names if you want to use other decimal units (eg.: 1500 becomes &amp;ldquo;1.5 kilometers&amp;rdquo;, 0.150 becomes &amp;ldquo;150 milliliters&amp;rdquo;, etc). You may define a wide range of unit quantifiers, even fractional ones (centi, deci, mili, etc).</source>
          <target state="translated">如果要使用其他十进制单位（例如：1500变为&amp;ldquo; 1.5公里&amp;rdquo;，0.150变为&amp;ldquo; 150毫升&amp;rdquo;，等等），则还可以定义自己的单位量化器名称。您可以定义各种单位量词，甚至是小数（百分号，十进制数，mili等）。</target>
        </trans-unit>
        <trans-unit id="ec67a540ecf04f925e83dae2d9b325b29e88c336" translate="yes" xml:space="preserve">
          <source>You can also disable generation of controller specific asset files by adding the following to your &lt;code&gt;config/application.rb&lt;/code&gt; configuration:</source>
          <target state="translated">您还可以通过将以下内容添加到 &lt;code&gt;config/application.rb&lt;/code&gt; 配置中来禁用控制器特定资产文件的生成：</target>
        </trans-unit>
        <trans-unit id="70be43cd51ad0026d90c3c2114db9911e0b7439f" translate="yes" xml:space="preserve">
          <source>You can also do:</source>
          <target state="translated">你也可以做。</target>
        </trans-unit>
        <trans-unit id="6d6d711b549c263f0f4cf789394c4567113eda88" translate="yes" xml:space="preserve">
          <source>You can also enable compression in development mode as a sanity check, and disable it on-demand as required for debugging.</source>
          <target state="translated">您也可以在开发模式下启用压缩作为安全检查,并根据调试需要按需禁用。</target>
        </trans-unit>
        <trans-unit id="1555d79ab7a45ab64b52328a3412cd5c3aed67c2" translate="yes" xml:space="preserve">
          <source>You can also enable or disable breakpoints:</source>
          <target state="translated">您还可以启用或禁用断点。</target>
        </trans-unit>
        <trans-unit id="94601621bafc70d30b4d4d4e57ad3b9e98890e90" translate="yes" xml:space="preserve">
          <source>You can also generate paths and URLs. If the route above is modified to be:</source>
          <target state="translated">也可以生成路径和URL。如果将上面的路径修改为。</target>
        </trans-unit>
        <trans-unit id="7fdfab1748b3303f54af7c988375556e5d299c6e" translate="yes" xml:space="preserve">
          <source>You can also go through a &lt;a href=&quot;classmethods#method-i-has_many&quot;&gt;has_many&lt;/a&gt; association on the join model:</source>
          <target state="translated">您还可以在联接模型上通过&lt;a href=&quot;classmethods#method-i-has_many&quot;&gt;has_many&lt;/a&gt;关联：</target>
        </trans-unit>
        <trans-unit id="ffdc57fa109ff75a798504677749e982013bab42" translate="yes" xml:space="preserve">
          <source>You can also have your controllers loaded from both &lt;code&gt;app/controllers&lt;/code&gt; and &lt;code&gt;lib/controllers&lt;/code&gt;:</source>
          <target state="translated">您还可以从 &lt;code&gt;app/controllers&lt;/code&gt; 和 &lt;code&gt;lib/controllers&lt;/code&gt; 加载控制器：</target>
        </trans-unit>
        <trans-unit id="05330f890fa08e1be70a287b1e1db2f33f1f3831" translate="yes" xml:space="preserve">
          <source>You can also implement a custom asset host object that responds to &lt;code&gt;call&lt;/code&gt; and takes either one or two parameters just like the proc.</source>
          <target state="translated">您还可以实现一个自定义资产宿主对象，该对象响应 &lt;code&gt;call&lt;/code&gt; 并像proc一样接受一个或两个参数。</target>
        </trans-unit>
        <trans-unit id="93188de0200f4a242854410bb5aa07db167ab390" translate="yes" xml:space="preserve">
          <source>You can also insert your own messages and benchmarks by using the &lt;code&gt;say_with_time&lt;/code&gt; method:</source>
          <target state="translated">您还可以使用 &lt;code&gt;say_with_time&lt;/code&gt; 方法插入自己的消息和基准：</target>
        </trans-unit>
        <trans-unit id="f56860c69fe27414bf6755638a4431e85472b82f" translate="yes" xml:space="preserve">
          <source>You can also inspect for an object method this way:</source>
          <target state="translated">你也可以通过这种方式检查一个对象方法。</target>
        </trans-unit>
        <trans-unit id="9a196ba61623f3e368e72d8a857180d54d954ac0" translate="yes" xml:space="preserve">
          <source>You can also just pass a record. In this case &lt;code&gt;last_modified&lt;/code&gt; will be set by calling &lt;code&gt;updated_at&lt;/code&gt; and &lt;code&gt;etag&lt;/code&gt; by passing the object itself.</source>
          <target state="translated">您也可以通过记录。在这种情况下，将通过传递对象本身来调用 &lt;code&gt;updated_at&lt;/code&gt; 和 &lt;code&gt;etag&lt;/code&gt; 来设置 &lt;code&gt;last_modified&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b50c687b6a2dbaa84c6efe63f08e4106ed401f6f" translate="yes" xml:space="preserve">
          <source>You can also opt to include controller specific stylesheets and JavaScript files only in their respective controllers using the following:</source>
          <target state="translated">你也可以选择在各自的控制器中只包含控制器特定的样式表和JavaScript文件,使用如下。</target>
        </trans-unit>
        <trans-unit id="0b18b32c427d3c94197662a067463e67add60b47" translate="yes" xml:space="preserve">
          <source>You can also override conditions using the &lt;code&gt;only&lt;/code&gt; method. For example:</source>
          <target state="translated">您也可以使用 &lt;code&gt;only&lt;/code&gt; 方法覆盖条件。例如：</target>
        </trans-unit>
        <trans-unit id="d3993b132c92af6847ba6c7ada43fe6d1b0a085c" translate="yes" xml:space="preserve">
          <source>You can also pass a &lt;code&gt;:domain&lt;/code&gt; key and specify the domain name for the cookie:</source>
          <target state="translated">您还可以传递 &lt;code&gt;:domain&lt;/code&gt; 键并指定cookie的域名：</target>
        </trans-unit>
        <trans-unit id="9cf180d42812057ba61bfc06df92eb1978c71311" translate="yes" xml:space="preserve">
          <source>You can also pass a &lt;code&gt;block&lt;/code&gt; to define criteria. The behavior is the same, it returns true if the collection based on the criteria has more than one record.</source>
          <target state="translated">您还可以传递一个 &lt;code&gt;block&lt;/code&gt; 来定义条件。行为是相同的，如果基于条件的集合具有多个记录，则返回true。</target>
        </trans-unit>
        <trans-unit id="6baf9d4b879959e98e31186cbf00924d91f717e1" translate="yes" xml:space="preserve">
          <source>You can also pass a &lt;code&gt;block&lt;/code&gt; to define criteria. The behavior is the same, it returns true if the collection based on the criteria is not empty.</source>
          <target state="translated">您还可以传递一个 &lt;code&gt;block&lt;/code&gt; 来定义条件。行为相同，如果基于条件的集合不为空，则返回true。</target>
        </trans-unit>
        <trans-unit id="c21ece5bd908c31c3f2be9f2b1001f3c36b49b19" translate="yes" xml:space="preserve">
          <source>You can also pass a block that'll be invoked if the retry attempts fail for custom logic rather than letting the exception bubble up. This block is yielded with the job instance as the first and the error instance as the second parameter.</source>
          <target state="translated">你也可以传递一个块,当重试失败时,该块将被调用,用于自定义逻辑,而不是让异常冒出来。这个块以作业实例为第一个参数,以错误实例为第二个参数来产生。</target>
        </trans-unit>
        <trans-unit id="0501fe5d6ab1d3320eeeda2da4a05d9993faee7a" translate="yes" xml:space="preserve">
          <source>You can also pass a block that'll be invoked. This block is yielded with the job instance as the first and the error instance as the second parameter.</source>
          <target state="translated">你也可以传递一个将被调用的块。这个块的第一个参数是作业实例,第二个参数是错误实例。</target>
        </trans-unit>
        <trans-unit id="fff92d73f44216c865bdaa1c606699f93bde4741" translate="yes" xml:space="preserve">
          <source>You can also pass a block to &lt;code&gt;select&lt;/code&gt; helper:</source>
          <target state="translated">您还可以传递一个块来 &lt;code&gt;select&lt;/code&gt; 助手：</target>
        </trans-unit>
        <trans-unit id="4313a70755d30d72528541a84f9eeca66772c4b2" translate="yes" xml:space="preserve">
          <source>You can also pass a block to new with the new record as argument:</source>
          <target state="translated">你也可以将一个块传递给new,并将new记录作为参数。</target>
        </trans-unit>
        <trans-unit id="79a43cec243528ea2cf7c6c94e59f5de31f9020d" translate="yes" xml:space="preserve">
          <source>You can also pass a custom timestamp column to fetch the timestamp of the last updated record.</source>
          <target state="translated">你也可以通过一个自定义的时间戳列来获取最后更新记录的时间戳。</target>
        </trans-unit>
        <trans-unit id="6a98a0f5b62680df505995dca24e4aad954506e3" translate="yes" xml:space="preserve">
          <source>You can also pass a hash into headers of header field names and values, which will then be set on the &lt;code&gt;Mail::Message&lt;/code&gt; object:</source>
          <target state="translated">您还可以将哈希传递到标头字段名称和值的标头中，然后将其设置在 &lt;code&gt;Mail::Message&lt;/code&gt; 对象上：</target>
        </trans-unit>
        <trans-unit id="f43fca077e4d9ba19cde93b566514754dd4884cd" translate="yes" xml:space="preserve">
          <source>You can also pass a list of modules:</source>
          <target state="translated">你也可以通过一个模块列表。</target>
        </trans-unit>
        <trans-unit id="0d93eb78b9fb417baad45b38f4deca34422d60cc" translate="yes" xml:space="preserve">
          <source>You can also pass a string which will expand</source>
          <target state="translated">你也可以传递一个字符串,该字符串将展开</target>
        </trans-unit>
        <trans-unit id="209e9c75edede5883cce7550ebfa07c635ca4bf4" translate="yes" xml:space="preserve">
          <source>You can also pass an explicit status number like &lt;code&gt;assert_response(501)&lt;/code&gt; or its symbolic equivalent &lt;code&gt;assert_response(:not_implemented)&lt;/code&gt;. See Rack::Utils::SYMBOL_TO_STATUS_CODE for a full list.</source>
          <target state="translated">您还可以传递一个明确的状态编号，例如 &lt;code&gt;assert_response(501)&lt;/code&gt; 或它的符号等效的 &lt;code&gt;assert_response(:not_implemented)&lt;/code&gt; 。有关完整列表，请参见Rack :: Utils :: SYMBOL_TO_STATUS_CODE。</target>
        </trans-unit>
        <trans-unit id="2d53d25fc9a44c25a3710b625ff3e7c994b643bb" translate="yes" xml:space="preserve">
          <source>You can also pass an object that responds to &lt;code&gt;maximum&lt;/code&gt;, such as a collection of active records. In this case &lt;code&gt;last_modified&lt;/code&gt; will be set by calling +maximum(:updated_at)+ on the collection (the timestamp of the most recently updated record) and the &lt;code&gt;etag&lt;/code&gt; by passing the object itself.</source>
          <target state="translated">您还可以传递一个对象，响应 &lt;code&gt;maximum&lt;/code&gt; ，如活动记录的集合。在这种情况下，将通过调用集合上的+ maximum（：updated_at）+（最新更新记录的时间戳）和 &lt;code&gt;etag&lt;/code&gt; (通过传递对象本身）来设置 &lt;code&gt;last_modified&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9e7634f61ad481b47ab734c9d2b303d881ea2183" translate="yes" xml:space="preserve">
          <source>You can also pass an object that responds to &lt;code&gt;maximum&lt;/code&gt;, such as a collection of active records. In this case &lt;code&gt;last_modified&lt;/code&gt; will be set by calling &lt;code&gt;maximum(:updated_at)&lt;/code&gt; on the collection (the timestamp of the most recently updated record) and the &lt;code&gt;etag&lt;/code&gt; by passing the object itself.</source>
          <target state="translated">您还可以传递一个对象，响应 &lt;code&gt;maximum&lt;/code&gt; ，如活动记录的集合。在这种情况下，将通过在集合（最近更新的记录的时间戳 &lt;code&gt;maximum(:updated_at)&lt;/code&gt; 上调用maximum（：updated_at）并通过传递对象本身来调用 &lt;code&gt;etag&lt;/code&gt; 来设置 &lt;code&gt;last_modified&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="29be9a263ab7fab349c724884b9de5bbb03232d5" translate="yes" xml:space="preserve">
          <source>You can also pass in &lt;code&gt;extras&lt;/code&gt; with a hash containing URL parameters that would normally be in the query string. This can be used to assert that values in the query string will end up in the params hash correctly. To test query strings you must use the extras argument because appending the query string on the path directly will not work. For example:</source>
          <target state="translated">您还可以使用包含通常在查询字符串中的URL参数的哈希值来传递 &lt;code&gt;extras&lt;/code&gt; 。这可以用来断言查询字符串中的值将正确地以params哈希结尾。要测试查询字符串，您必须使用extras参数，因为直接在路径上附加查询字符串将不起作用。例如：</target>
        </trans-unit>
        <trans-unit id="f920d50aebb2023a001843bd9c8e9d6a099f794b" translate="yes" xml:space="preserve">
          <source>You can also pass in a &lt;code&gt;layout: 'layout_name'&lt;/code&gt; option to the render call inside the format block to specify different layouts for different formats:</source>
          <target state="translated">您还可以将 &lt;code&gt;layout: 'layout_name'&lt;/code&gt; 选项传递给format块内的render调用，以为不同格式指定不同的布局：</target>
        </trans-unit>
        <trans-unit id="66d61247ce60750666d639f74ffe19c2e7082fcc" translate="yes" xml:space="preserve">
          <source>You can also pass in a TimeZone instance or string that identifies a TimeZone as an argument, and the conversion will be based on that zone instead of &lt;code&gt;Time.zone&lt;/code&gt;.</source>
          <target state="translated">您还可以传入将TimeZone标识为参数的TimeZone实例或字符串，并且转换将基于该区域而不是 &lt;code&gt;Time.zone&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ebae0cf64e77b402dfd54b9959c63099713def81" translate="yes" xml:space="preserve">
          <source>You can also pass in arbitrary local variables to any partial you are rendering with the &lt;code&gt;locals: {}&lt;/code&gt; option:</source>
          <target state="translated">您还可以使用 &lt;code&gt;locals: {}&lt;/code&gt; 选项将任意局部变量传递给要渲染的任何局部变量：</target>
        </trans-unit>
        <trans-unit id="db6035b2dd4919f23c4755c517b6757a348a84ca" translate="yes" xml:space="preserve">
          <source>You can also pass local variables into partials, making them even more powerful and flexible. For example, you can use this technique to reduce duplication between new and edit pages, while still keeping a bit of distinct content:</source>
          <target state="translated">你也可以将局部变量传递到partials中,使它们更加强大和灵活。例如,你可以使用这种技术来减少新页面和编辑页面之间的重复,同时仍然保持一点不同的内容。</target>
        </trans-unit>
        <trans-unit id="ee2f2ee18d426772792cd120169d8df3f9057ce3" translate="yes" xml:space="preserve">
          <source>You can also pass raw SQL to the &lt;code&gt;lock&lt;/code&gt; method for allowing different types of locks. For example, MySQL has an expression called &lt;code&gt;LOCK IN SHARE MODE&lt;/code&gt; where you can lock a record but still allow other queries to read it. To specify this expression just pass it in as the lock option:</source>
          <target state="translated">您还可以将原始SQL传递给 &lt;code&gt;lock&lt;/code&gt; 方法，以允许使用不同类型的锁。例如，MySQL有一个名为 &lt;code&gt;LOCK IN SHARE MODE&lt;/code&gt; 的表达式，您可以在其中锁定记录，但仍允许其他查询读取它。要指定此表达式，只需将其作为lock选项传入即可：</target>
        </trans-unit>
        <trans-unit id="132a865d7487f8497b1030ddd091e025e2dd54c3" translate="yes" xml:space="preserve">
          <source>You can also perform actions:</source>
          <target state="translated">你还可以进行操作。</target>
        </trans-unit>
        <trans-unit id="590fee298a51c66ae56d2099ae9e59d8b8170162" translate="yes" xml:space="preserve">
          <source>You can also provide a block to redirect, which receives the symbolized path parameters and the request object:</source>
          <target state="translated">你也可以提供一个块来重定向,它接收符号化的路径参数和请求对象。</target>
        </trans-unit>
        <trans-unit id="f0b26e26a654f7e037a1212c67c8dace8ce0149f" translate="yes" xml:space="preserve">
          <source>You can also provide a proc or lambda which will determine the regular expression that will be used to validate the attribute.</source>
          <target state="translated">你也可以提供一个 proc 或 lambda,它将决定用于验证属性的正则表达式。</target>
        </trans-unit>
        <trans-unit id="de1432b2b24086ab6f185d0eec31428e1c8a1f01" translate="yes" xml:space="preserve">
          <source>You can also remove the uniqueness constraint:</source>
          <target state="translated">你也可以删除唯一性约束。</target>
        </trans-unit>
        <trans-unit id="f42c641f7b164df35d8d45e59a74903d8a3f747f" translate="yes" xml:space="preserve">
          <source>You can also render a block of code within a partial layout instead of calling &lt;code&gt;yield&lt;/code&gt;. For example, if we didn't have the &lt;code&gt;_article&lt;/code&gt; partial, we could do this instead:</source>
          <target state="translated">您也可以在部分布局内渲染代码块，而不用调用 &lt;code&gt;yield&lt;/code&gt; 。例如，如果我们没有 &lt;code&gt;_article&lt;/code&gt; 部分，我们可以这样做：</target>
        </trans-unit>
        <trans-unit id="d67a51086fa97dc2d553d0adb9a201101a177590" translate="yes" xml:space="preserve">
          <source>You can also reuse dynamic segments from the match in the path to redirect to:</source>
          <target state="translated">你也可以在重定向到的路径中重复使用匹配的动态段。</target>
        </trans-unit>
        <trans-unit id="b991c91a277c514d5e0978c34b83f94fa207adc2" translate="yes" xml:space="preserve">
          <source>You can also run a particular test method from the test case by providing the &lt;code&gt;-n&lt;/code&gt; or &lt;code&gt;--name&lt;/code&gt; flag and the test's method name.</source>
          <target state="translated">您还可以通过提供 &lt;code&gt;-n&lt;/code&gt; 或 &lt;code&gt;--name&lt;/code&gt; 标志以及测试的方法名称，从测试用例中运行特定的测试方法。</target>
        </trans-unit>
        <trans-unit id="bb1f3ba141b2b9bdb8b3eb3637f73d9ae4ed5132" translate="yes" xml:space="preserve">
          <source>You can also run a test at a specific line by providing the line number.</source>
          <target state="translated">您也可以通过提供行号来运行特定行的测试。</target>
        </trans-unit>
        <trans-unit id="a4a43c37df8c7049f8ac2597eb7d63e4d215adaa" translate="yes" xml:space="preserve">
          <source>You can also run an entire directory of tests by providing the path to the directory.</source>
          <target state="translated">你也可以通过提供目录的路径来运行整个目录的测试。</target>
        </trans-unit>
        <trans-unit id="1c63351a3fb2ee629a636054253a9c980aa4028b" translate="yes" xml:space="preserve">
          <source>You can also run commands as a super-user:</source>
          <target state="translated">你也可以以超级用户的身份运行命令。</target>
        </trans-unit>
        <trans-unit id="1f67d5cd3fc082a416e6fc456577d184242964fa" translate="yes" xml:space="preserve">
          <source>You can also run commands that should abort application generation if they fail:</source>
          <target state="translated">您还可以运行如果失败就应该中止应用程序生成的命令。</target>
        </trans-unit>
        <trans-unit id="ba3dd417e4d836a4b8b1b039178daec1f8de48fa" translate="yes" xml:space="preserve">
          <source>You can also run commands with a different Rails environment:</source>
          <target state="translated">你也可以在不同的Rails环境下运行命令。</target>
        </trans-unit>
        <trans-unit id="5e6f8b9f6619e938f72d4a81883a4ff108fac07b" translate="yes" xml:space="preserve">
          <source>You can also run these validations on your own. &lt;code&gt;valid?&lt;/code&gt; triggers your validations and returns true if no errors were found in the object, and false otherwise. As you saw above:</source>
          <target state="translated">您也可以自己运行这些验证。 &lt;code&gt;valid?&lt;/code&gt; 触发您的验证，如果在对象中未发现错误，则返回true，否则返回false。如上所见：</target>
        </trans-unit>
        <trans-unit id="8ea7e508bc95dcc7fedf898a58f2e9c1b9ad6e52" translate="yes" xml:space="preserve">
          <source>You can also search for specific attachments:</source>
          <target state="translated">你也可以搜索特定的附件。</target>
        </trans-unit>
        <trans-unit id="5b6272c94e85052b06e6bd54184729336b0d3af9" translate="yes" xml:space="preserve">
          <source>You can also send a real document in the simulated HTTP request.</source>
          <target state="translated">你也可以在模拟的HTTP请求中发送一个真实的文档。</target>
        </trans-unit>
        <trans-unit id="a766289f7f4f88b39de99bcafb2f1d87f6841bdd" translate="yes" xml:space="preserve">
          <source>You can also send attachments with html template, in this case you need to add body, attachments, and custom content type like this:</source>
          <target state="translated">你也可以用html模板发送附件,在这种情况下,你需要添加正文、附件和自定义内容类型,就像这样。</target>
        </trans-unit>
        <trans-unit id="bf0a19674ee940990d8674527db7a7688a6f84ee" translate="yes" xml:space="preserve">
          <source>You can also set a plural form for model names, adding as following:</source>
          <target state="translated">模型名称也可以设置复数形式,添加如下。</target>
        </trans-unit>
        <trans-unit id="715ccf3361589bd5c0d2a7c7dca850eb0c1a28f1" translate="yes" xml:space="preserve">
          <source>You can also set an array of variants:</source>
          <target state="translated">你也可以设置一个变体阵列。</target>
        </trans-unit>
        <trans-unit id="c730e8f957a06d38c9526358ce28efc0881674df" translate="yes" xml:space="preserve">
          <source>You can also set conditions via a hash:</source>
          <target state="translated">你也可以通过哈希设置条件。</target>
        </trans-unit>
        <trans-unit id="6c1b2b2dc80c4154aa342904f384963a609b2537" translate="yes" xml:space="preserve">
          <source>You can also set generators for an application by using &lt;code&gt;config.app_generators&lt;/code&gt;:</source>
          <target state="translated">您还可以使用 &lt;code&gt;config.app_generators&lt;/code&gt; 为应用程序设置生成器：</target>
        </trans-unit>
        <trans-unit id="1dbf53c72db486b6b8e9b821c247e6d7be65923c" translate="yes" xml:space="preserve">
          <source>You can also set the answer format, like this:</source>
          <target state="translated">你也可以设置答案的格式,比如这样。</target>
        </trans-unit>
        <trans-unit id="16aae775fd6bff2c114b0b20512f42918057f86a" translate="yes" xml:space="preserve">
          <source>You can also set the strong ETag directly on the response.</source>
          <target state="translated">你也可以直接在响应上设置强ETag。</target>
        </trans-unit>
        <trans-unit id="0372b2526ba8649df791ef01acb1453abf3d7a25" translate="yes" xml:space="preserve">
          <source>You can also set this value through an &lt;a href=&quot;https://en.wikipedia.org/wiki/Environment_variable&quot;&gt;environment variable&lt;/a&gt; to make running a staging copy of your site easier:</source>
          <target state="translated">您还可以通过&lt;a href=&quot;https://en.wikipedia.org/wiki/Environment_variable&quot;&gt;环境变量&lt;/a&gt;设置此值，以使运行站点的临时副本更加容易：</target>
        </trans-unit>
        <trans-unit id="23449d1901273fcaa52068821e1371d0230c3d86" translate="yes" xml:space="preserve">
          <source>You can also set your own table name explicitly:</source>
          <target state="translated">你也可以明确设置自己的表名。</target>
        </trans-unit>
        <trans-unit id="776004ce3cb1710499a9ebf689b4de69eafba0c7" translate="yes" xml:space="preserve">
          <source>You can also setup the correct cookies before the connection request:</source>
          <target state="translated">你也可以在连接请求前设置正确的cookies。</target>
        </trans-unit>
        <trans-unit id="c9c1c7dec54552772c6a5b19a0d0eac90be289b2" translate="yes" xml:space="preserve">
          <source>You can also simulate POST, PATCH, PUT, DELETE, and HEAD requests with &lt;code&gt;post&lt;/code&gt;, &lt;code&gt;patch&lt;/code&gt;, &lt;code&gt;put&lt;/code&gt;, &lt;code&gt;delete&lt;/code&gt;, and &lt;code&gt;head&lt;/code&gt;. Example sending parameters, session and setting a flash message:</source>
          <target state="translated">您还可以使用 &lt;code&gt;post&lt;/code&gt; ， &lt;code&gt;patch&lt;/code&gt; ， &lt;code&gt;put&lt;/code&gt; ， &lt;code&gt;delete&lt;/code&gt; 和 &lt;code&gt;head&lt;/code&gt; 来模拟POST，PATCH，PUT，DELETE和HEAD请求。发送参数，会话和设置即显消息的示例：</target>
        </trans-unit>
        <trans-unit id="36b331ab104931667aeae850a2006daf7d3deed4" translate="yes" xml:space="preserve">
          <source>You can also specify a class option as the second parameter that'll raise an exception if a serialized object is retrieved as a descendant of a class not in the hierarchy.</source>
          <target state="translated">你也可以指定一个类选项作为第二个参数,如果一个序列化对象是作为一个不在层次结构中的类的后裔被检索的,那么它将引发一个异常。</target>
        </trans-unit>
        <trans-unit id="4e9413235bf821650089a7445acc32a2b9205dc6" translate="yes" xml:space="preserve">
          <source>You can also specify a second partial to be rendered between instances of the main partial by using the &lt;code&gt;:spacer_template&lt;/code&gt; option:</source>
          <target state="translated">您也可以使用 &lt;code&gt;:spacer_template&lt;/code&gt; 选项指定要在主要部分的实例之间渲染的第二部分：</target>
        </trans-unit>
        <trans-unit id="d9c3450dcdb2e38894297c7236338d823b576bfb" translate="yes" xml:space="preserve">
          <source>You can also specify a special size tag, in the format &quot;{width}x{height}&quot;:</source>
          <target state="translated">您也可以指定一个特殊的尺寸标签,格式为&quot;{width}x{height}&quot;。</target>
        </trans-unit>
        <trans-unit id="5ee137f246c4187c500992f6e71c27b6b6d8171d" translate="yes" xml:space="preserve">
          <source>You can also specify constraints as a lambda:</source>
          <target state="translated">你也可以将约束条件指定为lambda。</target>
        </trans-unit>
        <trans-unit id="d07485265f7717ffc7169dcbe4001b3c51f9720c" translate="yes" xml:space="preserve">
          <source>You can also specify constraints in a block form:</source>
          <target state="translated">你也可以用块的形式指定约束条件。</target>
        </trans-unit>
        <trans-unit id="e7477fab244a2741c739a797cdf4558b740c66b2" translate="yes" xml:space="preserve">
          <source>You can also specify default options that will be passed through to your URL helper definition, e.g:</source>
          <target state="translated">你也可以指定默认的选项,这些选项将被传递到你的URL助手定义中,如</target>
        </trans-unit>
        <trans-unit id="cc7a629d30ae40fc90f9cd416e9b95c7f65270b4" translate="yes" xml:space="preserve">
          <source>You can also specify multiple relationships, like this:</source>
          <target state="translated">你也可以指定多个关系,像这样。</target>
        </trans-unit>
        <trans-unit id="a0140d14bc466ff6029568a59cb2b6a547a84f2d" translate="yes" xml:space="preserve">
          <source>You can also specify multiple videos to play by passing an array of videos to the &lt;code&gt;video_tag&lt;/code&gt;:</source>
          <target state="translated">您还可以通过将一系列视频传递给 &lt;code&gt;video_tag&lt;/code&gt; 来指定要播放的多个视频：</target>
        </trans-unit>
        <trans-unit id="06d63b4b10be5f66849142a8644b81381e44c795" translate="yes" xml:space="preserve">
          <source>You can also specify overrides if you want by passing a hash instead of a string:</source>
          <target state="translated">你也可以通过传递一个哈希值而不是字符串来指定覆盖。</target>
        </trans-unit>
        <trans-unit id="db40d0ab564c2206fc43120faa6e242195b34334" translate="yes" xml:space="preserve">
          <source>You can also specify request cookies the same way you do in integration tests:</source>
          <target state="translated">你也可以像在集成测试中一样指定请求cookies。</target>
        </trans-unit>
        <trans-unit id="6fdd32d2675e9a8470b09e6c3dde90acf66b88b0" translate="yes" xml:space="preserve">
          <source>You can also specify that a file should be displayed inline with other HTML. This is useful if you want to display a corporate logo or a photo.</source>
          <target state="translated">你也可以指定一个文件应该和其他HTML一起显示。如果你想显示企业标志或照片,这很有用。</target>
        </trans-unit>
        <trans-unit id="3b7c90d8ebf506f5bc5206ab82f3f1b6876c14ad" translate="yes" xml:space="preserve">
          <source>You can also specify that only &lt;code&gt;datetime&lt;/code&gt; columns should be time-zone aware (while &lt;code&gt;time&lt;/code&gt; should not) by setting:</source>
          <target state="translated">您还可以通过设置来指定仅 &lt;code&gt;datetime&lt;/code&gt; 列应了解时区（而 &lt;code&gt;time&lt;/code&gt; 则不应该）：</target>
        </trans-unit>
        <trans-unit id="b95162d698781f81ee81baea4c88546fff4da27e" translate="yes" xml:space="preserve">
          <source>You can also specify the key in which the parameters should be wrapped to, and also the list of attributes it should wrap by using either &lt;code&gt;:include&lt;/code&gt; or &lt;code&gt;:exclude&lt;/code&gt; options like this:</source>
          <target state="translated">您也可以使用 &lt;code&gt;:include&lt;/code&gt; 或 &lt;code&gt;:exclude&lt;/code&gt; 选项，指定要在其中包装参数的键以及应包装的属性列表：</target>
        </trans-unit>
        <trans-unit id="04a65c9acb4d2e4854a1519e24000c89dda85b96" translate="yes" xml:space="preserve">
          <source>You can also specify the underlying connection identifiers. Here's an example test with a web notifications channel:</source>
          <target state="translated">你也可以指定底层的连接标识符。下面是一个网络通知通道的测试示例。</target>
        </trans-unit>
        <trans-unit id="4ae45a3047876964edbdb6eaa4ec016894b8b89f" translate="yes" xml:space="preserve">
          <source>You can also specify these assets as dependencies of other assets using Asset Pipeline require statements in processed files:</source>
          <target state="translated">您还可以在处理过的文件中使用资产管道需求报表将这些资产指定为其他资产的依赖关系。</target>
        </trans-unit>
        <trans-unit id="3eb089951c69a1ce81a14ee287acca750daa1673" translate="yes" xml:space="preserve">
          <source>You can also specify validations to be strict and raise &lt;code&gt;ActiveModel::StrictValidationFailed&lt;/code&gt; when the object is invalid.</source>
          <target state="translated">您还可以指定严格的验证，并在对象无效时引发 &lt;code&gt;ActiveModel::StrictValidationFailed&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="97e11679f83fc9677da8c27421a9a165b179799c" translate="yes" xml:space="preserve">
          <source>You can also step into &lt;strong&gt;irb&lt;/strong&gt; mode with the command &lt;code&gt;irb&lt;/code&gt; (of course!). This will start an irb session within the context you invoked it.</source>
          <target state="translated">您也可以使用命令 &lt;code&gt;irb&lt;/code&gt; 进入&lt;strong&gt;irb&lt;/strong&gt;模式（当然！）。这将在您调用它的上下文中启动一个irb会话。</target>
        </trans-unit>
        <trans-unit id="b77c42c9439512b16428192029c489fb37eb214f" translate="yes" xml:space="preserve">
          <source>You can also style the HTML used for embedded images and other attachments (known as blobs). On installation, Action Text will copy over a partial to &lt;code&gt;app/views/active_storage/blobs/_blob.html.erb&lt;/code&gt;, which you can specialize.</source>
          <target state="translated">您还可以设置用于嵌入式图像和其他附件的HTML的样式（称为斑点）。在安装时，动作文本将部分复制到 &lt;code&gt;app/views/active_storage/blobs/_blob.html.erb&lt;/code&gt; 中，您可以对其进行专门设置​​。</target>
        </trans-unit>
        <trans-unit id="166af9c392b94d2fe5501876b08a71f8e22ca4bf" translate="yes" xml:space="preserve">
          <source>You can also subscribe to all events whose name matches a certain regexp:</source>
          <target state="translated">您也可以订阅所有名称符合特定regexp的事件。</target>
        </trans-unit>
        <trans-unit id="c250096cd75c7ef74e25db63acf224a337447f82" translate="yes" xml:space="preserve">
          <source>You can also supply a block to &lt;a href=&quot;base#method-c-hook_for&quot;&gt;::hook_for&lt;/a&gt; to customize how the hook is going to be invoked. The block receives two arguments, an instance of the current class and the class to be invoked.</source>
          <target state="translated">您还可以为&lt;a href=&quot;base#method-c-hook_for&quot;&gt;:: hook_for&lt;/a&gt;提供一个块，以自定义如何调用该挂钩。该块接收两个参数，即当前类的实例和要调用的类。</target>
        </trans-unit>
        <trans-unit id="0411251e2e7fb3e3c16245191c68d564a416891e" translate="yes" xml:space="preserve">
          <source>You can also supply a hash of additional options, such as &lt;code&gt;:id&lt;/code&gt;, &lt;code&gt;:class&lt;/code&gt; etc.</source>
          <target state="translated">您还可以提供其他选项的哈希，例如 &lt;code&gt;:id&lt;/code&gt; ， &lt;code&gt;:class&lt;/code&gt; 等。</target>
        </trans-unit>
        <trans-unit id="be664cec1255cb066942bb0eec18ff4b192560ab" translate="yes" xml:space="preserve">
          <source>You can also supply an array of &lt;a href=&quot;../../activesupport/timezone&quot;&gt;ActiveSupport::TimeZone&lt;/a&gt; objects as &lt;code&gt;priority_zones&lt;/code&gt; so that they will be listed above the rest of the (long) list. You can use &lt;a href=&quot;../../activesupport/timezone#method-c-us_zones&quot;&gt;ActiveSupport::TimeZone.us_zones&lt;/a&gt; for a list of US time zones, &lt;a href=&quot;../../activesupport/timezone#method-c-country_zones&quot;&gt;ActiveSupport::TimeZone.country_zones&lt;/a&gt; for another country's time zones, or a Regexp to select the zones of your choice.</source>
          <target state="translated">您还可以提供&lt;a href=&quot;../../activesupport/timezone&quot;&gt;ActiveSupport :: TimeZone&lt;/a&gt;对象数组作为 &lt;code&gt;priority_zones&lt;/code&gt; ,以便将它们列在其余（长）列表的上方。您可以将&lt;a href=&quot;../../activesupport/timezone#method-c-us_zones&quot;&gt;ActiveSupport :: TimeZone.us_zones&lt;/a&gt;用于美国时区的列表，将&lt;a href=&quot;../../activesupport/timezone#method-c-country_zones&quot;&gt;ActiveSupport :: TimeZone.country_zones&lt;/a&gt;用于另一个国家的时区，或将Regexp用于选择所需的时区。</target>
        </trans-unit>
        <trans-unit id="16f8ee178035336d88c5be576f79d71723abc79a" translate="yes" xml:space="preserve">
          <source>You can also tell Rails to render with no layout at all:</source>
          <target state="translated">你也可以让Rails在没有布局的情况下进行渲染。</target>
        </trans-unit>
        <trans-unit id="1364f32148f35d02e816485f91106ef0cb1f9961" translate="yes" xml:space="preserve">
          <source>You can also test your JSON API easily by setting what the request should be encoded as:</source>
          <target state="translated">你也可以通过设置请求的编码方式来轻松测试你的JSON API。</target>
        </trans-unit>
        <trans-unit id="857477a5f408eb0b0349fbc54197727992440396" translate="yes" xml:space="preserve">
          <source>You can also unscope specific &lt;code&gt;where&lt;/code&gt; clauses. For example:</source>
          <target state="translated">您也可以取消范围特定的 &lt;code&gt;where&lt;/code&gt; 子句。例如：</target>
        </trans-unit>
        <trans-unit id="1c530f519aa65e34eac958ec7e04f3214125bff6" translate="yes" xml:space="preserve">
          <source>You can also unsubscribe by passing the name of the subscriber object. Note that this will unsubscribe all subscriptions with the given name:</source>
          <target state="translated">你也可以通过传递订阅者对象的名称来取消订阅。请注意,这将取消订阅所有给定名称的订阅。</target>
        </trans-unit>
        <trans-unit id="74c85e567de84e338e0fed11d2582027ee791b67" translate="yes" xml:space="preserve">
          <source>You can also use &lt;code&gt;ActiveRecord::Base#lock!&lt;/code&gt; method to lock one record by id. This may be better if you don't need to lock every row. Example:</source>
          <target state="translated">您也可以使用 &lt;code&gt;ActiveRecord::Base#lock!&lt;/code&gt; 通过ID锁定一条记录的方法。如果您不需要锁定每一行，则可能会更好。例：</target>
        </trans-unit>
        <trans-unit id="1fb9bf2806c04d58a7f858a30f479945a52c7fa3" translate="yes" xml:space="preserve">
          <source>You can also use &lt;code&gt;Rails::Application.config_for&lt;/code&gt; to load whole configuration files:</source>
          <target state="translated">您也可以使用 &lt;code&gt;Rails::Application.config_for&lt;/code&gt; 加载整个配置文件：</target>
        </trans-unit>
        <trans-unit id="376742689162ca42aa8bdd2630287e481cc17f27" translate="yes" xml:space="preserve">
          <source>You can also use &lt;code&gt;any?&lt;/code&gt; and &lt;code&gt;many?&lt;/code&gt; to check for existence on a model or relation.</source>
          <target state="translated">您还可以使用 &lt;code&gt;any?&lt;/code&gt; 还有 &lt;code&gt;many?&lt;/code&gt; 检查模型或关系是否存在。</target>
        </trans-unit>
        <trans-unit id="b2ca66a882b0df25a870e950e134fcfef1b77c7d" translate="yes" xml:space="preserve">
          <source>You can also use &lt;code&gt;defaults&lt;/code&gt; in a block format to define the defaults for multiple items:</source>
          <target state="translated">您也可以使用 &lt;code&gt;defaults&lt;/code&gt; 的块格式定义多个项目的默认设置：</target>
        </trans-unit>
        <trans-unit id="3bdea88e37bb457c03492c50407f33ea9ccb1fcf" translate="yes" xml:space="preserve">
          <source>You can also use &lt;code&gt;display&lt;/code&gt; to start watching variables. This is a good way of tracking the values of a variable while the execution goes on.</source>
          <target state="translated">您还可以使用 &lt;code&gt;display&lt;/code&gt; 来开始监视变量。这是在执行过程中跟踪变量值的好方法。</target>
        </trans-unit>
        <trans-unit id="01dc3fcf5b4d877cb46da0a4f1b22aeb6d872f1e" translate="yes" xml:space="preserve">
          <source>You can also use &lt;code&gt;find_or_create_by!&lt;/code&gt; to raise an exception if the new record is invalid. Validations are not covered on this guide, but let's assume for a moment that you temporarily add</source>
          <target state="translated">您也可以使用 &lt;code&gt;find_or_create_by!&lt;/code&gt; 如果新记录无效，则引发异常。验证未包含在本指南中，但让我们假设您暂时添加了</target>
        </trans-unit>
        <trans-unit id="2a8ddfbf085cd03a6387055f882f25a25ec922d9" translate="yes" xml:space="preserve">
          <source>You can also use &lt;code&gt;on:&lt;/code&gt; to define custom contexts. Custom contexts need to be triggered explicitly by passing the name of the context to &lt;code&gt;valid?&lt;/code&gt;, &lt;code&gt;invalid?&lt;/code&gt;, or &lt;code&gt;save&lt;/code&gt;.</source>
          <target state="translated">您还可以使用 &lt;code&gt;on:&lt;/code&gt; 定义自定义上下文。需要通过将上下文名称传递给 &lt;code&gt;valid?&lt;/code&gt; 名称来显式触发自定义上下文吗？， &lt;code&gt;invalid?&lt;/code&gt; 或 &lt;code&gt;save&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="798d14d81fef8d6387558ac3e22c6665496da57a" translate="yes" xml:space="preserve">
          <source>You can also use &lt;code&gt;permit&lt;/code&gt; on nested parameters, like:</source>
          <target state="translated">您还可以对嵌套参数使用 &lt;code&gt;permit&lt;/code&gt; ，例如：</target>
        </trans-unit>
        <trans-unit id="a1b300e43434a2a985b21245d5d8b7dec5ba2ca0" translate="yes" xml:space="preserve">
          <source>You can also use &lt;code&gt;silence_redefinition_of_method&lt;/code&gt; if you need to define the replacement method yourself (because you're using &lt;code&gt;delegate&lt;/code&gt;, for example).</source>
          <target state="translated">如果您需要自己定义替换方法（例如，因为使用 &lt;code&gt;delegate&lt;/code&gt; ，则也可以使用 &lt;code&gt;silence_redefinition_of_method&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cb7a9bbc2d13a338c3f24ed856d5f1ff4c719b8e" translate="yes" xml:space="preserve">
          <source>You can also use &lt;code&gt;step n&lt;/code&gt; or &lt;code&gt;next n&lt;/code&gt; to move forward &lt;code&gt;n&lt;/code&gt; steps at once.</source>
          <target state="translated">您还可以使用 &lt;code&gt;step n&lt;/code&gt; 或 &lt;code&gt;next n&lt;/code&gt; 一次向前移动 &lt;code&gt;n&lt;/code&gt; 个步骤。</target>
        </trans-unit>
        <trans-unit id="5776bf51bcfbda9d5f8a70fcc375aa18d7610b5b" translate="yes" xml:space="preserve">
          <source>You can also use &lt;code&gt;up [n]&lt;/code&gt; and &lt;code&gt;down [n]&lt;/code&gt; commands in order to change the context &lt;em&gt;n&lt;/em&gt; frames up or down the stack respectively. &lt;em&gt;n&lt;/em&gt; defaults to one. Up in this case is towards higher-numbered stack frames, and down is towards lower-numbered stack frames.</source>
          <target state="translated">您还可以使用 &lt;code&gt;up [n]&lt;/code&gt; 和 &lt;code&gt;down [n]&lt;/code&gt; 命令来分别在堆栈上或下更改&lt;em&gt;n个&lt;/em&gt;帧。&lt;em&gt;n&lt;/em&gt;默认为1。在这种情况下，向上表示编号较高的堆栈帧，向下表示编号较低的堆栈帧。</target>
        </trans-unit>
        <trans-unit id="46ab236e1334cd78dc5de23bfcc864a4cee8e826" translate="yes" xml:space="preserve">
          <source>You can also use &lt;code&gt;url_for&lt;/code&gt; with a set of objects, and Rails will automatically determine which route you want:</source>
          <target state="translated">您还可以将 &lt;code&gt;url_for&lt;/code&gt; 与一组对象一起使用，Rails会自动确定所需的路由：</target>
        </trans-unit>
        <trans-unit id="d4b1b3d12a44ac21ab78c04347d37a0c632abad9" translate="yes" xml:space="preserve">
          <source>You can also use a block and a module list:</source>
          <target state="translated">你也可以使用一个块和一个模块列表。</target>
        </trans-unit>
        <trans-unit id="a5b9df811266c3568baee5b2090fdb96d6b9b1ae" translate="yes" xml:space="preserve">
          <source>You can also use block initialization:</source>
          <target state="translated">你也可以使用块初始化。</target>
        </trans-unit>
        <trans-unit id="7a78c1f1b35988f66b88ef3c9ee5c73db28240db" translate="yes" xml:space="preserve">
          <source>You can also use custom data attributes using the &lt;code&gt;:data&lt;/code&gt; option:</source>
          <target state="translated">您也可以使用 &lt;code&gt;:data&lt;/code&gt; 选项使用自定义数据属性：</target>
        </trans-unit>
        <trans-unit id="f873b2963d942e169acfeed102ba49b3a45d80e3" translate="yes" xml:space="preserve">
          <source>You can also use custom deprecator instance:</source>
          <target state="translated">你也可以使用自定义的deprecator实例。</target>
        </trans-unit>
        <trans-unit id="0ee81600746fa33192478e72fc19b0485800bf5b" translate="yes" xml:space="preserve">
          <source>You can also use interpolation in the supplied redirect argument:</source>
          <target state="translated">你也可以在提供的重定向参数中使用插值法。</target>
        </trans-unit>
        <trans-unit id="b3a949acc50ee07f71dfe1c3d1a9a7df6af4d92d" translate="yes" xml:space="preserve">
          <source>You can also use nested &lt;code&gt;assert_select&lt;/code&gt; blocks for deeper investigation.</source>
          <target state="translated">您还可以使用嵌套的 &lt;code&gt;assert_select&lt;/code&gt; 块进行更深入的研究。</target>
        </trans-unit>
        <trans-unit id="a1aa77e14e25818ca57c4d6a138eb30cb71b0d1f" translate="yes" xml:space="preserve">
          <source>You can also use one or more strings, which will be used unchanged as SELECT fields.</source>
          <target state="translated">你也可以使用一个或多个字符串,这些字符串将作为SELECT字段不变地使用。</target>
        </trans-unit>
        <trans-unit id="546f4d7f3d470c9a8e44a9a1712c56852f1e99d2" translate="yes" xml:space="preserve">
          <source>You can also use root inside namespaces and scopes as well. For example:</source>
          <target state="translated">你也可以在命名空间和作用域内使用root。例如</target>
        </trans-unit>
        <trans-unit id="f4bba1385e41da00275e6987fca5d06e86cbafa3" translate="yes" xml:space="preserve">
          <source>You can also use the &lt;code&gt;--expanded&lt;/code&gt; option to turn on the expanded table formatting mode.</source>
          <target state="translated">您也可以使用 &lt;code&gt;--expanded&lt;/code&gt; 选项打开扩展表格式设置模式。</target>
        </trans-unit>
        <trans-unit id="209817d7b5228179eee9a35e952fb789e45fc6f3" translate="yes" xml:space="preserve">
          <source>You can also use the &lt;code&gt;yield&lt;/code&gt; syntax alongside an existing call to &lt;code&gt;yield&lt;/code&gt; in a layout. For example:</source>
          <target state="translated">您还可以将 &lt;code&gt;yield&lt;/code&gt; 语法与现有调用一起使用以在布局中 &lt;code&gt;yield&lt;/code&gt; 。例如：</target>
        </trans-unit>
        <trans-unit id="38666886312c85ce5bfbb02b67c2ae3e0a8c2f66" translate="yes" xml:space="preserve">
          <source>You can also use the alias &quot;c&quot; to invoke the console: &lt;code&gt;rails c&lt;/code&gt;.</source>
          <target state="translated">您也可以使用别名&amp;ldquo; c&amp;rdquo;来调用控制台： &lt;code&gt;rails c&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="30aedf584e03771957030a796b2072657e6228a8" translate="yes" xml:space="preserve">
          <source>You can also use the alias &quot;d&quot; to invoke the destroy command: &lt;code&gt;rails d&lt;/code&gt;.</source>
          <target state="translated">您也可以使用别名&amp;ldquo; d&amp;rdquo;来调用destroy命令： &lt;code&gt;rails d&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="aef1060eaef6f25939de4a3fab949737bf4022c3" translate="yes" xml:space="preserve">
          <source>You can also use the alias &quot;db&quot; to invoke the dbconsole: &lt;code&gt;rails db&lt;/code&gt;.</source>
          <target state="translated">您也可以使用别名&amp;ldquo; db&amp;rdquo;来调用dbconsole： &lt;code&gt;rails db&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2c2fa942ecc22150d810a33b2aaf8d2052f3efab" translate="yes" xml:space="preserve">
          <source>You can also use the alias &quot;g&quot; to invoke the generator command: &lt;code&gt;rails g&lt;/code&gt;.</source>
          <target state="translated">您也可以使用别名&amp;ldquo; g&amp;rdquo;来调用生成器命令： &lt;code&gt;rails g&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="344c94763138c637a6092f3a5717c1535de4dc5f" translate="yes" xml:space="preserve">
          <source>You can also use the alias &quot;r&quot; to invoke the runner: &lt;code&gt;rails r&lt;/code&gt;.</source>
          <target state="translated">您也可以使用别名&amp;ldquo; r&amp;rdquo;来调用跑步者： &lt;code&gt;rails r&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="48c4755ce9f45974388a3057fb100cf7db02d225" translate="yes" xml:space="preserve">
          <source>You can also use the alias &quot;s&quot; to start the server: &lt;code&gt;rails s&lt;/code&gt;.</source>
          <target state="translated">您也可以使用别名&amp;ldquo; s&amp;rdquo;启动服务器： &lt;code&gt;rails s&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0589455e3535ba6187b99f8f3b071711442fd268" translate="yes" xml:space="preserve">
          <source>You can also use the method &lt;code&gt;create_join_table&lt;/code&gt;</source>
          <target state="translated">您也可以使用方法 &lt;code&gt;create_join_table&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="06481cd97b342b15a9d4e07a3174ee03ea54afe7" translate="yes" xml:space="preserve">
          <source>You can also use the old style of migration using &lt;code&gt;up&lt;/code&gt; and &lt;code&gt;down&lt;/code&gt; methods instead of the &lt;code&gt;change&lt;/code&gt; method. The &lt;code&gt;up&lt;/code&gt; method should describe the transformation you'd like to make to your schema, and the &lt;code&gt;down&lt;/code&gt; method of your migration should revert the transformations done by the &lt;code&gt;up&lt;/code&gt; method. In other words, the database schema should be unchanged if you do an &lt;code&gt;up&lt;/code&gt; followed by a &lt;code&gt;down&lt;/code&gt;. For example, if you create a table in the &lt;code&gt;up&lt;/code&gt; method, you should drop it in the &lt;code&gt;down&lt;/code&gt; method. It is wise to perform the transformations in precisely the reverse order they were made in the &lt;code&gt;up&lt;/code&gt; method. The example in the &lt;code&gt;reversible&lt;/code&gt; section is equivalent to:</source>
          <target state="translated">您还可以使用 &lt;code&gt;up&lt;/code&gt; 和 &lt;code&gt;down&lt;/code&gt; 方法而不是 &lt;code&gt;change&lt;/code&gt; 方法来使用旧的迁移样式。在 &lt;code&gt;up&lt;/code&gt; 方法应该说明你想使你的模式转变，以及 &lt;code&gt;down&lt;/code&gt; 迁移的方法应该恢复在完成转换 &lt;code&gt;up&lt;/code&gt; 方法。换句话说，如果先执行 &lt;code&gt;up&lt;/code&gt; 然后执行 &lt;code&gt;down&lt;/code&gt; ，则数据库架构应保持不变。例如，如果在 &lt;code&gt;up&lt;/code&gt; 方法中创建表，则应在 &lt;code&gt;down&lt;/code&gt; 方法中将其删除。这是明智的，在精确他们在作了相反的顺序进行转换 &lt;code&gt;up&lt;/code&gt; 方法。 &lt;code&gt;reversible&lt;/code&gt; 部分中的示例等效于：</target>
        </trans-unit>
        <trans-unit id="4a676b5537d0cdad204fe8b34d22d53595175ca6" translate="yes" xml:space="preserve">
          <source>You can also use this method to query for multiple objects. Call the &lt;code&gt;find&lt;/code&gt; method and pass in an array of primary keys. The return will be an array containing all of the matching records for the supplied &lt;em&gt;primary keys&lt;/em&gt;. For example:</source>
          <target state="translated">您也可以使用此方法查询多个对象。调用 &lt;code&gt;find&lt;/code&gt; 方法并传入一个主键数组。返回将是一个数组，其中包含提供的&lt;em&gt;主键的&lt;/em&gt;所有匹配记录。例如：</target>
        </trans-unit>
        <trans-unit id="0286fa8996fbe2452c5fc1cf5641d44bcd9903d3" translate="yes" xml:space="preserve">
          <source>You can also use this to override routing methods defined by resources, like this:</source>
          <target state="translated">你也可以用它来覆盖资源定义的路由方法,像这样。</target>
        </trans-unit>
        <trans-unit id="7dcf98306a9b0d56da05f3f3d0811fe0b85f54bb" translate="yes" xml:space="preserve">
          <source>You can also use various finder methods on a relation for performing complex calculations:</source>
          <target state="translated">你也可以在关系上使用各种查找方法来进行复杂的计算。</target>
        </trans-unit>
        <trans-unit id="721f4de4eef3158767e13765c1928ca0df119d72" translate="yes" xml:space="preserve">
          <source>You can also use your own custom unit quantifiers:</source>
          <target state="translated">你也可以使用自己的自定义单位量化器。</target>
        </trans-unit>
        <trans-unit id="eb2b942b8a9f76d0ab836a81413851880268ada3" translate="yes" xml:space="preserve">
          <source>You can also yield multiple times in one layout and use block arguments to differentiate the sections.</source>
          <target state="translated">您也可以在一个布局中多次屈服,并使用块参数来区分部分。</target>
        </trans-unit>
        <trans-unit id="8021e8293e1aff386d79be899c2f365a244b9e79" translate="yes" xml:space="preserve">
          <source>You can append as many column name/type pairs as you want.</source>
          <target state="translated">你可以附加任意数量的列名/类型对。</target>
        </trans-unit>
        <trans-unit id="2f8d734f4a771794e94803d877e96d0f8a4e3990" translate="yes" xml:space="preserve">
          <source>You can ask for an extra confirmation of the user by adding a &lt;code&gt;data-confirm&lt;/code&gt; attribute on links and forms. The user will be presented a JavaScript &lt;code&gt;confirm()&lt;/code&gt; dialog containing the attribute's text. If the user chooses to cancel, the action doesn't take place.</source>
          <target state="translated">您可以通过在链接和表单上添加 &lt;code&gt;data-confirm&lt;/code&gt; 属性来要求用户额外确认。将向用户显示一个包含属性文本的JavaScript &lt;code&gt;confirm()&lt;/code&gt; 对话框。如果用户选择取消，则该操作不会发生。</target>
        </trans-unit>
        <trans-unit id="b0b78a8e6ea63d111186be84283beac8c767d76d" translate="yes" xml:space="preserve">
          <source>You can associate the &lt;code&gt;:if&lt;/code&gt; and &lt;code&gt;:unless&lt;/code&gt; options with a symbol corresponding to the name of a method that will get called right before validation happens. This is the most commonly used option.</source>
          <target state="translated">您可以将 &lt;code&gt;:if&lt;/code&gt; 和 &lt;code&gt;:unless&lt;/code&gt; 选项与对应于方法名称的符号关联，该名称将在验证发生之前立即被调用。这是最常用的选项。</target>
        </trans-unit>
        <trans-unit id="400f415be47e4c25de13fa369beaa9773d9ce352" translate="yes" xml:space="preserve">
          <source>You can associate the &lt;code&gt;:if&lt;/code&gt; and &lt;code&gt;:unless&lt;/code&gt; options with a symbol corresponding to the name of a predicate method that will get called right before the callback. When using the &lt;code&gt;:if&lt;/code&gt; option, the callback won't be executed if the predicate method returns false; when using the &lt;code&gt;:unless&lt;/code&gt; option, the callback won't be executed if the predicate method returns true. This is the most common option. Using this form of registration it is also possible to register several different predicates that should be called to check if the callback should be executed.</source>
          <target state="translated">您可以将 &lt;code&gt;:if&lt;/code&gt; 和 &lt;code&gt;:unless&lt;/code&gt; 选项与对应于断言方法名称的符号相关联，该方法将在回调之前被调用。使用 &lt;code&gt;:if&lt;/code&gt; 选项时，如果谓词方法返回false，则不会执行回调；使用 &lt;code&gt;:unless&lt;/code&gt; 选项时，如果谓词方法返回true，则不会执行回调。这是最常见的选择。使用这种形式的注册，还可以注册应调用以检查是否应执行回调的几个不同的谓词。</target>
        </trans-unit>
        <trans-unit id="4708e76844441658753826e265895ca038c0e53c" translate="yes" xml:space="preserve">
          <source>You can autoload and eager load from a standard structure like</source>
          <target state="translated">你可以从一个标准的结构中自动加载和急切加载,如</target>
        </trans-unit>
        <trans-unit id="5ef1a75d42a69278bba1633eb50ae9d3d2b5bbea" translate="yes" xml:space="preserve">
          <source>You can bind to the same Ajax events as &lt;code&gt;form_with&lt;/code&gt;. Here's an example. Let's assume that we have a list of articles that can be deleted with just one click. We would generate some HTML like this:</source>
          <target state="translated">您可以绑定到与 &lt;code&gt;form_with&lt;/code&gt; 相同的Ajax事件。这是一个例子。假设我们有一个列表，只需单击一下即可将其删除。我们将生成一些这样的HTML：</target>
        </trans-unit>
        <trans-unit id="c1af81cbcdabdb20560793984e8c87a4a175d70a" translate="yes" xml:space="preserve">
          <source>You can bypass the content type inference from the data by passing in &lt;code&gt;identify: false&lt;/code&gt; along with the &lt;code&gt;content_type&lt;/code&gt;.</source>
          <target state="translated">您可以通过传递 &lt;code&gt;identify: false&lt;/code&gt; 和 &lt;code&gt;content_type&lt;/code&gt; 来绕过数据的内容类型推断。</target>
        </trans-unit>
        <trans-unit id="dfe22eaa55aa3608559c680c249c14206633b6e1" translate="yes" xml:space="preserve">
          <source>You can call &lt;code&gt;destroy&lt;/code&gt; on Active Record objects when you want to delete them from the database. Note that we don't need to add a view for this action since we're redirecting to the &lt;code&gt;index&lt;/code&gt; action.</source>
          <target state="translated">您可以拨打 &lt;code&gt;destroy&lt;/code&gt; 的活动记录的对象，当你想从数据库中删除它们。请注意，由于我们将重定向到 &lt;code&gt;index&lt;/code&gt; 操作，因此无需为此操作添加视图。</target>
        </trans-unit>
        <trans-unit id="60a36b9daa5bc0dbf5a2f5c7ac3a6d38c2565d60" translate="yes" xml:space="preserve">
          <source>You can call this command on the server during deployment to create compiled versions of your assets directly on the server. See the next section for information on compiling locally.</source>
          <target state="translated">在部署期间,您可以在服务器上调用此命令,直接在服务器上创建资产的编译版本。有关本地编译的信息,请参阅下一节。</target>
        </trans-unit>
        <trans-unit id="8cc264e18dfa26b149100ab70a45e66c310ff778" translate="yes" xml:space="preserve">
          <source>You can chain methods in a statement when the previous method called returns an &lt;code&gt;ActiveRecord::Relation&lt;/code&gt;, like &lt;code&gt;all&lt;/code&gt;, &lt;code&gt;where&lt;/code&gt;, and &lt;code&gt;joins&lt;/code&gt;. Methods that return a single object (see &lt;a href=&quot;#retrieving-a-single-object&quot;&gt;Retrieving a Single Object Section&lt;/a&gt;) have to be at the end of the statement.</source>
          <target state="translated">当先前调用的方法返回 &lt;code&gt;ActiveRecord::Relation&lt;/code&gt; ，如 &lt;code&gt;all&lt;/code&gt; ， &lt;code&gt;where&lt;/code&gt; 和 &lt;code&gt;joins&lt;/code&gt; 时，可以在语句中链接方法。返回单个对象的方法（请参见&lt;a href=&quot;#retrieving-a-single-object&quot;&gt;检索单个对象节&lt;/a&gt;）必须在语句的末尾。</target>
        </trans-unit>
        <trans-unit id="dc5348485684b1a5ffee6c56f4b97ddac8266670" translate="yes" xml:space="preserve">
          <source>You can change the default locale as well as configure the translations load paths in &lt;code&gt;config/application.rb&lt;/code&gt; as follows:</source>
          <target state="translated">您可以更改默认语言环境以及在 &lt;code&gt;config/application.rb&lt;/code&gt; 中配置转换加载路径，如下所示：</target>
        </trans-unit>
        <trans-unit id="fced3db414e226a808dfe8ae367bfd41adc6dbd7" translate="yes" xml:space="preserve">
          <source>You can change this padding value using the second optional argument:</source>
          <target state="translated">你可以使用第二个可选参数改变这个padding值。</target>
        </trans-unit>
        <trans-unit id="5a409727fb6cad94d06678d3c9226a7d5b3ae1f9" translate="yes" xml:space="preserve">
          <source>You can check if &lt;code&gt;zeitwerk&lt;/code&gt; mode is enabled with</source>
          <target state="translated">您可以检查是否启用了 &lt;code&gt;zeitwerk&lt;/code&gt; 模式</target>
        </trans-unit>
        <trans-unit id="434b87f67138b677c525dcc4bb11544c6fa391ff" translate="yes" xml:space="preserve">
          <source>You can check whether a module has a name with the predicate &lt;code&gt;anonymous?&lt;/code&gt;:</source>
          <target state="translated">您可以检查模块是否具有谓词 &lt;code&gt;anonymous?&lt;/code&gt; 的名称？：</target>
        </trans-unit>
        <trans-unit id="ed29dfcd7bd39857a3c494bcd6eda545701b3369" translate="yes" xml:space="preserve">
          <source>You can checkout the service's constructor to know which keys are required.</source>
          <target state="translated">你可以检查服务的构造函数来了解需要哪些键。</target>
        </trans-unit>
        <trans-unit id="7344c62a47791c62b50f75ec0231b9bf3c9c892b" translate="yes" xml:space="preserve">
          <source>You can choose not to use the form helpers generating HTML5 date and time input fields and use the alternative date and time helpers. These date and time helpers differ from all the other form helpers in two important respects:</source>
          <target state="translated">您可以选择不使用生成 HTML5 日期和时间输入字段的表单帮助程序,而使用其他日期和时间帮助程序。这些日期和时间帮助程序在两个重要方面与所有其他表单帮助程序不同。</target>
        </trans-unit>
        <trans-unit id="5cb8b97563bb7e22184e0052cb1a4250d5b61b75" translate="yes" xml:space="preserve">
          <source>You can choose not to yield and build the response yourself, in which case the action will not be run.</source>
          <target state="translated">你可以选择不屈服,自己建立响应,在这种情况下,动作不会被运行。</target>
        </trans-unit>
        <trans-unit id="908d9eddc016a07afe6b465a7a2d2f2727d7c1c5" translate="yes" xml:space="preserve">
          <source>You can choose to have only specific callbacks by passing a hash to the &lt;code&gt;define_model_callbacks&lt;/code&gt; method.</source>
          <target state="translated">您可以通过将哈希传递给 &lt;code&gt;define_model_callbacks&lt;/code&gt; 方法来选择仅具有特定的回调。</target>
        </trans-unit>
        <trans-unit id="a7ee1d2d8ceb684a71583bc8ad3691c3dd04a0f9" translate="yes" xml:space="preserve">
          <source>You can combine any number of ImageMagick/libvips operations into a variant, as well as any macros provided by the ImageProcessing gem (such as &lt;code&gt;resize_to_limit&lt;/code&gt;):</source>
          <target state="translated">您可以将任意数量的ImageMagick / libvips操作组合成一个变体，以及ImageProcessing gem提供的任何宏（例如 &lt;code&gt;resize_to_limit&lt;/code&gt; ）：</target>
        </trans-unit>
        <trans-unit id="b306e4f64f77aba498057b984004d0e73e65dbf5" translate="yes" xml:space="preserve">
          <source>You can configure default headers in &lt;code&gt;config/application.rb&lt;/code&gt;.</source>
          <target state="translated">您可以在 &lt;code&gt;config/application.rb&lt;/code&gt; 中配置默认头。</target>
        </trans-unit>
        <trans-unit id="18eba4a7cff338d17ea9e786e668aeab6499a1c0" translate="yes" xml:space="preserve">
          <source>You can configure the name of the header that your front-end server uses for this purpose using &lt;code&gt;config.action_dispatch.x_sendfile_header&lt;/code&gt; in the appropriate environment's configuration file.</source>
          <target state="translated">您可以在适当环境的配置文件中使用 &lt;code&gt;config.action_dispatch.x_sendfile_header&lt;/code&gt; 来配置前端服务器为此目的使用的标头名称。</target>
        </trans-unit>
        <trans-unit id="0ece63c27e878a8361b4489eb6d40bef6e35535e" translate="yes" xml:space="preserve">
          <source>You can configure when this &lt;code&gt;IncinerationJob&lt;/code&gt; will be run as a time-after-processing using the &lt;code&gt;config.action_mailbox.incinerate_after&lt;/code&gt; or &lt;code&gt;ActionMailbox.incinerate_after&lt;/code&gt; setting.</source>
          <target state="translated">您可以使用 &lt;code&gt;config.action_mailbox.incinerate_after&lt;/code&gt; 或 &lt;code&gt;ActionMailbox.incinerate_after&lt;/code&gt; 设置来配置何时将 &lt;code&gt;IncinerationJob&lt;/code&gt; 作为后处理时间运行。</target>
        </trans-unit>
        <trans-unit id="0e9812112be087d43b8d72956658652b8c28dcbc" translate="yes" xml:space="preserve">
          <source>You can configure your own code through the Rails configuration object with custom configuration under either the &lt;code&gt;config.x&lt;/code&gt; namespace, or &lt;code&gt;config&lt;/code&gt; directly. The key difference between these two is that you should be using &lt;code&gt;config.x&lt;/code&gt; if you are defining &lt;em&gt;nested&lt;/em&gt; configuration (ex: &lt;code&gt;config.x.nested.hi&lt;/code&gt;), and just &lt;code&gt;config&lt;/code&gt; for &lt;em&gt;single level&lt;/em&gt; configuration (ex: &lt;code&gt;config.hello&lt;/code&gt;).</source>
          <target state="translated">您可以通过Rails配置对象使用 &lt;code&gt;config.x&lt;/code&gt; 命名空间或直接在 &lt;code&gt;config&lt;/code&gt; 下的自定义配置来配置自己的代码。两者之间的主要区别在于，如果要定义&lt;em&gt;嵌套&lt;/em&gt;配置（例如： &lt;code&gt;config.x.nested.hi&lt;/code&gt; ），则应使用 &lt;code&gt;config.x&lt;/code&gt; ；而对于&lt;em&gt;单级&lt;/em&gt;配置（例如： &lt;code&gt;config.hello&lt;/code&gt; ），则应仅使用 &lt;code&gt;config&lt;/code&gt; 。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9bb10a2ca1afaa716b633161ce454b9cf59d1458" translate="yes" xml:space="preserve">
          <source>You can consume those events and the information they provide by registering a subscriber.</source>
          <target state="translated">你可以通过注册一个订阅者来消费这些事件及其提供的信息。</target>
        </trans-unit>
        <trans-unit id="28fc5069f2e996c88ea02f608dc66bdc4c3f2faf" translate="yes" xml:space="preserve">
          <source>You can create a message with images:</source>
          <target state="translated">你可以用图像创建一个信息。</target>
        </trans-unit>
        <trans-unit id="ccb0ea1584c058cb404d81ce71fbc74723495d67" translate="yes" xml:space="preserve">
          <source>You can create a similar binding without actually creating &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; tags with the &lt;code&gt;fields_for&lt;/code&gt; helper. This is useful for editing additional model objects with the same form. For example, if you had a &lt;code&gt;Person&lt;/code&gt; model with an associated &lt;code&gt;ContactDetail&lt;/code&gt; model, you could create a form for creating both like so:</source>
          <target state="translated">您可以创建类似的绑定，而无需使用 &lt;code&gt;fields_for&lt;/code&gt; 辅助工具实际创建 &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; 标记。这对于编辑具有相同形式的其他模型对象很有用。例如，如果您有一个带有关联的 &lt;code&gt;ContactDetail&lt;/code&gt; 模型的 &lt;code&gt;Person&lt;/code&gt; 模型，则可以创建一个用于创建两者的表单，如下所示：</target>
        </trans-unit>
        <trans-unit id="cdb210c8b9da0cb133796400d028dd156b1f104b" translate="yes" xml:space="preserve">
          <source>You can create a user with an avatar:</source>
          <target state="translated">你可以创建一个有头像的用户。</target>
        </trans-unit>
        <trans-unit id="9d0834eaa206b4da17366434a303e19b92a8411d" translate="yes" xml:space="preserve">
          <source>You can create custom URL helpers directly. For example:</source>
          <target state="translated">你可以直接创建自定义URL助手。例如</target>
        </trans-unit>
        <trans-unit id="1bd4447acb3cf72d72aa5b4c1cc89e7f293915d1" translate="yes" xml:space="preserve">
          <source>You can create values for the &amp;ldquo;min&amp;rdquo; and &amp;ldquo;max&amp;rdquo; attributes by passing instances of &lt;a href=&quot;../../date&quot;&gt;Date&lt;/a&gt; or &lt;a href=&quot;../../time&quot;&gt;Time&lt;/a&gt; to the options hash.</source>
          <target state="translated">您可以通过将&lt;a href=&quot;../../date&quot;&gt;Date&lt;/a&gt;或&lt;a href=&quot;../../time&quot;&gt;Time&lt;/a&gt;实例传递给选项哈希来创建&amp;ldquo; min&amp;rdquo;和&amp;ldquo; max&amp;rdquo;属性的值。</target>
        </trans-unit>
        <trans-unit id="1443f5db5f7d5989679cfc918e2f9979a4eb1ef7" translate="yes" xml:space="preserve">
          <source>You can create your own custom &lt;a href=&quot;formbuilder&quot;&gt;FormBuilder&lt;/a&gt; templates by subclassing this class. For example:</source>
          <target state="translated">您可以通过子类化此类来创建自己的自定义&lt;a href=&quot;formbuilder&quot;&gt;FormBuilder&lt;/a&gt;模板。例如：</target>
        </trans-unit>
        <trans-unit id="847c0c3dfe1299c34282c6634d93cab64135b425" translate="yes" xml:space="preserve">
          <source>You can create your own custom cache store by simply extending &lt;code&gt;ActiveSupport::Cache::Store&lt;/code&gt; and implementing the appropriate methods. This way, you can swap in any number of caching technologies into your Rails application.</source>
          <target state="translated">您可以通过简单地扩展 &lt;code&gt;ActiveSupport::Cache::Store&lt;/code&gt; 并实现适当的方法来创建自己的自定义缓存存储。这样，您可以将任何数量的缓存技术交换到Rails应用程序中。</target>
        </trans-unit>
        <trans-unit id="a95692b18a01df2dab44496996d3192a57b471db" translate="yes" xml:space="preserve">
          <source>You can customize the name of the key or specific parameters you want to wrap by consulting the &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionController/ParamsWrapper.html&quot;&gt;API documentation&lt;/a&gt;</source>
          <target state="translated">您可以通过查阅&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionController/ParamsWrapper.html&quot;&gt;API文档来自&lt;/a&gt;定义要包装的键名或特定参数</target>
        </trans-unit>
        <trans-unit id="15053f4277702cf31c6da3089b4f0aca4bd78d93" translate="yes" xml:space="preserve">
          <source>You can declare as many callbacks as you want inside your callback classes.</source>
          <target state="translated">你可以在你的回调类中声明任意数量的回调。</target>
        </trans-unit>
        <trans-unit id="2999236cbeaededccfe70af147bd19920a56d278" translate="yes" xml:space="preserve">
          <source>You can define a scope that applies to all finders using &lt;a href=&quot;../default/classmethods#method-i-default_scope&quot;&gt;default_scope&lt;/a&gt;.</source>
          <target state="translated">您可以使用&lt;a href=&quot;../default/classmethods#method-i-default_scope&quot;&gt;default_scope&lt;/a&gt;定义适用于所有查找器的范围。</target>
        </trans-unit>
        <trans-unit id="d59e5e82b7a5e1e5ae98771157b36316ae711dfc" translate="yes" xml:space="preserve">
          <source>You can define assets for precompilation in &lt;code&gt;engine.rb&lt;/code&gt;:</source>
          <target state="translated">您可以在 &lt;code&gt;engine.rb&lt;/code&gt; 中定义要预编译的资产：</target>
        </trans-unit>
        <trans-unit id="74ccd9c23187b06ee7bd07c4a63e11d14cdcc3e1" translate="yes" xml:space="preserve">
          <source>You can define defaults in a route by supplying a hash for the &lt;code&gt;:defaults&lt;/code&gt; option. This even applies to parameters that you do not specify as dynamic segments. For example:</source>
          <target state="translated">您可以通过为 &lt;code&gt;:defaults&lt;/code&gt; 选项提供哈希值来定义路由的默认值。这甚至适用于您未指定为动态细分的参数。例如：</target>
        </trans-unit>
        <trans-unit id="b1212cb684c95901d6cab042188412b9f6e0237e" translate="yes" xml:space="preserve">
          <source>You can delete multiple rows at once by passing an &lt;a href=&quot;../../array&quot;&gt;Array&lt;/a&gt; of &lt;code&gt;id&lt;/code&gt;s.</source>
          <target state="translated">你可以通过一个删除一次多行&lt;a href=&quot;../../array&quot;&gt;阵列&lt;/a&gt;的 &lt;code&gt;id&lt;/code&gt; 秒。</target>
        </trans-unit>
        <trans-unit id="c7f8a4006cd8bbc50261d4a7acf122afae4a0f0d" translate="yes" xml:space="preserve">
          <source>You can disable forgery protection on controller by skipping the verification before_action:</source>
          <target state="translated">您可以通过跳过验证before_action来禁用控制器上的防伪保护。</target>
        </trans-unit>
        <trans-unit id="bba132a3370bf0e5506c48f46a133ee85e2b98da" translate="yes" xml:space="preserve">
          <source>You can disable incinerating processed emails by setting &lt;code&gt;config.action_mailbox.incinerate&lt;/code&gt; or &lt;code&gt;ActionMailbox.incinerate&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">您可以通过将 &lt;code&gt;config.action_mailbox.incinerate&lt;/code&gt; 或 &lt;code&gt;ActionMailbox.incinerate&lt;/code&gt; 设置为 &lt;code&gt;false&lt;/code&gt; 来禁用焚化处理过的电子邮件。</target>
        </trans-unit>
        <trans-unit id="21ab7b2870db7ee8a0dc5ac9e0224d1209c8c320" translate="yes" xml:space="preserve">
          <source>You can do file globbing as well using &lt;code&gt;@import &quot;*&quot;&lt;/code&gt;, and &lt;code&gt;@import &quot;**/*&quot;&lt;/code&gt; to add the whole tree which is equivalent to how &lt;code&gt;require_tree&lt;/code&gt; works. Check the &lt;a href=&quot;https://github.com/rails/sass-rails#features&quot;&gt;sass-rails documentation&lt;/a&gt; for more info and important caveats.</source>
          <target state="translated">您也可以使用 &lt;code&gt;@import &quot;*&quot;&lt;/code&gt; 和 &lt;code&gt;@import &quot;**/*&quot;&lt;/code&gt; 来添加文件，以添加整个树，这等效于 &lt;code&gt;require_tree&lt;/code&gt; 的工作方式。有关更多信息和重要警告，请查看&lt;a href=&quot;https://github.com/rails/sass-rails#features&quot;&gt;sass-rails文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4ed3551f4e2ffd793ede4ad5a34caa30915326dd" translate="yes" xml:space="preserve">
          <source>You can easily set your queuing backend:</source>
          <target state="translated">你可以轻松设置你的排队后台。</target>
        </trans-unit>
        <trans-unit id="ac00a334ec72005d3e87e5dcce19b0f5616f38a1" translate="yes" xml:space="preserve">
          <source>You can either specify a layout declaratively (using the layout class method) or give it the same name as your controller, and place it in &lt;code&gt;app/views/layouts&lt;/code&gt;. If a subclass does not have a layout specified, it inherits its layout using normal Ruby inheritance.</source>
          <target state="translated">您可以声明性地指定布局（使用layout类方法），也可以为其指定与控制器相同的名称，然后将其放置在 &lt;code&gt;app/views/layouts&lt;/code&gt; 中。如果子类未指定布局，则它将使用常规Ruby继承继承其布局。</target>
        </trans-unit>
        <trans-unit id="dd8d1866bc4613d9f169066174441d9a1949a69e" translate="yes" xml:space="preserve">
          <source>You can enable automatic nonce generation:</source>
          <target state="translated">您可以启用自动生成nonce。</target>
        </trans-unit>
        <trans-unit id="7972e845e798ec5e8a687a987b33e767b9ea953d" translate="yes" xml:space="preserve">
          <source>You can enable support for the faster &lt;a href=&quot;https://github.com/redis/hiredis&quot;&gt;hiredis&lt;/a&gt; connection library by additionally adding its ruby wrapper to your Gemfile:</source>
          <target state="translated">您可以通过在&lt;a href=&quot;https://github.com/redis/hiredis&quot;&gt;Gemfile中&lt;/a&gt;另外添加ruby包装器来启用对hiredis连接库的支持：</target>
        </trans-unit>
        <trans-unit id="f66bee6df38828566012ac623f395e85b750da55" translate="yes" xml:space="preserve">
          <source>You can evaluate code in the context of any object's singleton class using &lt;code&gt;class_eval&lt;/code&gt;:</source>
          <target state="translated">您可以使用 &lt;code&gt;class_eval&lt;/code&gt; 在任何对象的单例类的上下文中评估代码：</target>
        </trans-unit>
        <trans-unit id="18ba7d04c19a89a6ff17a7966569ddfc883b96b2" translate="yes" xml:space="preserve">
          <source>You can even execute ruby code written in a file with runner.</source>
          <target state="translated">你甚至可以用runner执行写在文件中的ruby代码。</target>
        </trans-unit>
        <trans-unit id="3588c5efc3cef1a33c5fcfd4d6acf71f0fb01074" translate="yes" xml:space="preserve">
          <source>You can even render plain text directly without using a template:</source>
          <target state="translated">你甚至可以不使用模板直接渲染纯文本。</target>
        </trans-unit>
        <trans-unit id="088a4bf4c5af5e73b40e716f166a4145faf3212d" translate="yes" xml:space="preserve">
          <source>You can even use Action View helpers in these views. For example:</source>
          <target state="translated">你甚至可以在这些视图中使用动作视图助手。例如</target>
        </trans-unit>
        <trans-unit id="f86b85b68fb866a85b735eb36da6b9e7a7eaddc1" translate="yes" xml:space="preserve">
          <source>You can even use an inline method, such as a Proc, to determine the layout. For example, if you pass a Proc object, the block you give the Proc will be given the &lt;code&gt;controller&lt;/code&gt; instance, so the layout can be determined based on the current request:</source>
          <target state="translated">您甚至可以使用内联方法（例如Proc）来确定布局。例如，如果您传递一个Proc对象，则将为您提供给Proc的块提供 &lt;code&gt;controller&lt;/code&gt; 实例，因此可以根据当前请求确定布局：</target>
        </trans-unit>
        <trans-unit id="e845b3c2090a3be51d3338370e812560f89dabd5" translate="yes" xml:space="preserve">
          <source>You can extend the list of supported argument types. You just need to define your own serializer:</source>
          <target state="translated">你可以扩展支持的参数类型列表。你只需要定义你自己的序列器。</target>
        </trans-unit>
        <trans-unit id="fcb63fbfd5602ad91ed6bf3e908e717c51a1a044" translate="yes" xml:space="preserve">
          <source>You can fetch values of &lt;code&gt;ActionController::Parameters&lt;/code&gt; using either &lt;code&gt;:key&lt;/code&gt; or &lt;code&gt;&quot;key&quot;&lt;/code&gt;.</source>
          <target state="translated">您可以使用 &lt;code&gt;:key&lt;/code&gt; 或 &lt;code&gt;&quot;key&quot;&lt;/code&gt; 来获取 &lt;code&gt;ActionController::Parameters&lt;/code&gt; 值。</target>
        </trans-unit>
        <trans-unit id="da172ae7799f974997c9de7f78a6159e8626493d" translate="yes" xml:space="preserve">
          <source>You can filter out sensitive request parameters from your log files by appending them to &lt;code&gt;config.filter_parameters&lt;/code&gt; in the application configuration. These parameters will be marked [FILTERED] in the log.</source>
          <target state="translated">您可以通过将日志文件中敏感的请求参数附加到应用程序配置中的 &lt;code&gt;config.filter_parameters&lt;/code&gt; 来过滤掉它们。这些参数将在日志中标记为[FILTERED]。</target>
        </trans-unit>
        <trans-unit id="6bd39b3b6e84c5ddaae1977f6c932b8e9de6ff32" translate="yes" xml:space="preserve">
          <source>You can find a list of all released Rails versions &lt;a href=&quot;https://rubygems.org/gems/rails/versions&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">您可以&lt;a href=&quot;https://rubygems.org/gems/rails/versions&quot;&gt;在此处&lt;/a&gt;找到所有已发布的Rails版本的列表。</target>
        </trans-unit>
        <trans-unit id="fb9e9b84c05471160a8d34b618702f7a9b7e1dbb" translate="yes" xml:space="preserve">
          <source>You can find detailed instructions on how to test your Action Cable functionality in the &lt;a href=&quot;testing#testing-action-cable&quot;&gt;testing guide&lt;/a&gt;.</source>
          <target state="translated">您可以在&lt;a href=&quot;testing#testing-action-cable&quot;&gt;测试指南中&lt;/a&gt;找到有关如何测试操作电缆功能的详细说明。</target>
        </trans-unit>
        <trans-unit id="ad9ea6effa872f77728082cdb3eb397a57257387" translate="yes" xml:space="preserve">
          <source>You can find detailed instructions on how to test your jobs in the &lt;a href=&quot;testing#testing-jobs&quot;&gt;testing guide&lt;/a&gt;.</source>
          <target state="translated">您可以在&lt;a href=&quot;testing#testing-jobs&quot;&gt;测试指南中&lt;/a&gt;找到有关如何测试作业的详细说明。</target>
        </trans-unit>
        <trans-unit id="e8906a55af0ccf8bec15de6b36c8a9007b1ff22f" translate="yes" xml:space="preserve">
          <source>You can find detailed instructions on how to test your mailers in the &lt;a href=&quot;testing#testing-your-mailers&quot;&gt;testing guide&lt;/a&gt;.</source>
          <target state="translated">您可以在&lt;a href=&quot;testing#testing-your-mailers&quot;&gt;测试指南中&lt;/a&gt;找到有关如何测试邮件的详细说明。</target>
        </trans-unit>
        <trans-unit id="2a2086daa0d12821a5dc56d3ca3f6bc1bcb0c96f" translate="yes" xml:space="preserve">
          <source>You can find more detailed configuration options in the &lt;a href=&quot;action_cable_overview#configuration&quot;&gt;Action Cable Overview&lt;/a&gt;.</source>
          <target state="translated">您可以在《&lt;a href=&quot;action_cable_overview#configuration&quot;&gt;操作电缆概述》中&lt;/a&gt;找到更多详细的配置选项。</target>
        </trans-unit>
        <trans-unit id="db3658e10a8bf8920f940a97bfaee2c91b193d6b" translate="yes" xml:space="preserve">
          <source>You can find more information in the &lt;a href=&quot;https://bogomips.org/unicorn/README.html&quot;&gt;Unicorn readme&lt;/a&gt; and understand the &lt;a href=&quot;https://bogomips.org/unicorn/PHILOSOPHY.html&quot;&gt;philosophy&lt;/a&gt; behind it.</source>
          <target state="translated">您可以在&lt;a href=&quot;https://bogomips.org/unicorn/README.html&quot;&gt;Unicorn自述文件中&lt;/a&gt;找到更多信息，并了解其背后的&lt;a href=&quot;https://bogomips.org/unicorn/PHILOSOPHY.html&quot;&gt;原理&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="53dc5194c4f1497615e41b2f48b3016b634275a5" translate="yes" xml:space="preserve">
          <source>You can find more sophisticated negative CAPTCHAs in Ned Batchelder's &lt;a href=&quot;http://nedbatchelder.com/text/stopbots.html&quot;&gt;blog post&lt;/a&gt;:</source>
          <target state="translated">您可以在Ned Batchelder的&lt;a href=&quot;http://nedbatchelder.com/text/stopbots.html&quot;&gt;博客文章中&lt;/a&gt;找到更复杂的否定验证码：</target>
        </trans-unit>
        <trans-unit id="dcde21463e90b3057a10a2e95bd760dceb7e424f" translate="yes" xml:space="preserve">
          <source>You can force the form to use the full array of HTTP verbs by setting</source>
          <target state="translated">你可以通过设置以下方式强制表单使用完整的HTTP动词数组</target>
        </trans-unit>
        <trans-unit id="6f46e0b091d94cc2951ed46d703398c99e1dd633" translate="yes" xml:space="preserve">
          <source>You can generate a new api Rails app:</source>
          <target state="translated">你可以生成一个新的api Rails应用。</target>
        </trans-unit>
        <trans-unit id="03e480752dd6bd7aeff2c1b715478ddaa76b7f84" translate="yes" xml:space="preserve">
          <source>You can get a list of all middleware in your application via:</source>
          <target state="translated">你可以通过以下方式获得应用程序中所有中间件的列表。</target>
        </trans-unit>
        <trans-unit id="b88fd4e3fcf250e2c92d50a5954e5de19927eb5a" translate="yes" xml:space="preserve">
          <source>You can get a list of rails commands available to you, which will often depend on your current directory, by typing &lt;code&gt;rails --help&lt;/code&gt;. Each command has a description, and should help you find the thing you need.</source>
          <target state="translated">您可以通过输入 &lt;code&gt;rails --help&lt;/code&gt; 获得可用的rails命令列表，该列表通常取决于当前目录。每个命令都有说明，应该可以帮助您找到所需的内容。</target>
        </trans-unit>
        <trans-unit id="3a9a98d5a9ee0a7180a45e34dd99ca36bf00f557" translate="yes" xml:space="preserve">
          <source>You can group tasks by placing them in namespaces:</source>
          <target state="translated">您可以通过将任务放置在命名空间中来分组。</target>
        </trans-unit>
        <trans-unit id="357521b438f8f53bf81b95ebb993053ed99112af" translate="yes" xml:space="preserve">
          <source>You can have as many manifest files as you need. For example, the &lt;code&gt;admin.css&lt;/code&gt; and &lt;code&gt;admin.js&lt;/code&gt; manifest could contain the JS and CSS files that are used for the admin section of an application.</source>
          <target state="translated">您可以根据需要拥有任意数量的清单文件。例如， &lt;code&gt;admin.css&lt;/code&gt; 和 &lt;code&gt;admin.js&lt;/code&gt; 清单可以包含用于应用程序admin部分的JS和CSS文件。</target>
        </trans-unit>
        <trans-unit id="e44c4ab0f79c1022b32dca64d05226e07ab90bff" translate="yes" xml:space="preserve">
          <source>You can help test performance with these additions to your test environment:</source>
          <target state="translated">你可以通过这些添加到你的测试环境中来帮助测试性能。</target>
        </trans-unit>
        <trans-unit id="81f6195e35fdef102557c895a278e3874c8b6cb5" translate="yes" xml:space="preserve">
          <source>You can implement it like this in your &lt;code&gt;ApplicationController&lt;/code&gt;:</source>
          <target state="translated">您可以像这样在 &lt;code&gt;ApplicationController&lt;/code&gt; 中实现它：</target>
        </trans-unit>
        <trans-unit id="dfce78de11ac4dbcec73340f3557cc033df7dc18" translate="yes" xml:space="preserve">
          <source>You can install more generators through generator gems, portions of plugins you'll undoubtedly install, and you can even create your own!</source>
          <target state="translated">你可以通过发电机宝石安装更多的发电机,部分插件你无疑会安装,你甚至可以创建自己的发电机!</target>
        </trans-unit>
        <trans-unit id="bdd77b9424f4864a1575155fa0cf0a3dae9bc9e1" translate="yes" xml:space="preserve">
          <source>You can install the rails gem by typing &lt;code&gt;gem install rails&lt;/code&gt;, if you don't have it already.</source>
          <target state="translated">您可以通过输入 &lt;code&gt;gem install rails&lt;/code&gt; 来安装rails gem（如果尚未安装的话）。</target>
        </trans-unit>
        <trans-unit id="70240e2ccc19d89f9eeed8f2bae16f7f2d747d2b" translate="yes" xml:space="preserve">
          <source>You can invoke &lt;code&gt;instance_variables&lt;/code&gt; to list all the instance variables available in your context. If you want to list all the local variables, you can do that with &lt;code&gt;local_variables&lt;/code&gt;.</source>
          <target state="translated">您可以调用 &lt;code&gt;instance_variables&lt;/code&gt; 列出上下文中可用的所有实例变量。如果要列出所有局部变量，可以使用 &lt;code&gt;local_variables&lt;/code&gt; 进行操作。</target>
        </trans-unit>
        <trans-unit id="f4e4397c0d1c11cae01b6cd2c30bc4e3f441bc04" translate="yes" xml:space="preserve">
          <source>You can just supply the raw SQL specifying the &lt;code&gt;JOIN&lt;/code&gt; clause to &lt;code&gt;joins&lt;/code&gt;:</source>
          <target state="translated">您可以只提供原始SQL，指定要 &lt;code&gt;joins&lt;/code&gt; 的 &lt;code&gt;JOIN&lt;/code&gt; 子句：</target>
        </trans-unit>
        <trans-unit id="e2e64c66b90bbe220f174d879374385d9b2b5f28" translate="yes" xml:space="preserve">
          <source>You can keep multiple services in sync by defining a mirror service. When a file is uploaded or deleted, it's done across all the mirrored services. Mirrored services can be used to facilitate a migration between services in production. You can start mirroring to the new service, copy existing files from the old service to the new, then go all-in on the new service. Define each of the services you'd like to use as described above and reference them from a mirrored service.</source>
          <target state="translated">你可以通过定义一个镜像服务来保持多个服务的同步。当一个文件被上传或删除时,会在所有的镜像服务中完成。镜像服务可以用来促进生产中服务之间的迁移。你可以开始镜像到新的服务,将现有的文件从旧的服务复制到新的服务,然后全身心地投入到新的服务中去。如上所述,定义你想使用的每个服务,并从镜像服务中引用它们。</target>
        </trans-unit>
        <trans-unit id="9972a044265c4fe232176c9470ddc2b53a3c4c49" translate="yes" xml:space="preserve">
          <source>You can learn more about how to use &lt;code&gt;Rack::Sendfile&lt;/code&gt; with popular front-ends in &lt;a href=&quot;https://www.rubydoc.info/github/rack/rack/master/Rack/Sendfile&quot;&gt;the Rack::Sendfile documentation&lt;/a&gt;.</source>
          <target state="translated">您可以在&lt;a href=&quot;https://www.rubydoc.info/github/rack/rack/master/Rack/Sendfile&quot;&gt;Rack :: Sendfile文档中&lt;/a&gt;了解有关如何将 &lt;code&gt;Rack::Sendfile&lt;/code&gt; 与流行的前端一起使用的更多信息。</target>
        </trans-unit>
        <trans-unit id="d2b2f61e2c17c9722731e06238a78b5c1cc836ab" translate="yes" xml:space="preserve">
          <source>You can learn more about querying an Active Record model in the &lt;a href=&quot;active_record_querying&quot;&gt;Active Record Query Interface&lt;/a&gt; guide.</source>
          <target state="translated">您可以在《&lt;a href=&quot;active_record_querying&quot;&gt;Active Record查询界面》&lt;/a&gt;指南中了解有关查询Active Record模型的更多信息。</target>
        </trans-unit>
        <trans-unit id="b452351515935a7415f0f181504f500e962daff9" translate="yes" xml:space="preserve">
          <source>You can learn more about validations in the &lt;a href=&quot;active_record_validations&quot;&gt;Active Record Validations guide&lt;/a&gt;.</source>
          <target state="translated">您可以在&lt;a href=&quot;active_record_validations&quot;&gt;Active Record验证指南中&lt;/a&gt;了解有关验证的更多信息。</target>
        </trans-unit>
        <trans-unit id="cde047ade8d3260a324ebda341401dec5ef6a052" translate="yes" xml:space="preserve">
          <source>You can leave out the &lt;code&gt;:on&lt;/code&gt; option, this will create the same member route except that the resource id value will be available in &lt;code&gt;params[:photo_id]&lt;/code&gt; instead of &lt;code&gt;params[:id]&lt;/code&gt;. Route helpers will also be renamed from &lt;code&gt;preview_photo_url&lt;/code&gt; and &lt;code&gt;preview_photo_path&lt;/code&gt; to &lt;code&gt;photo_preview_url&lt;/code&gt; and &lt;code&gt;photo_preview_path&lt;/code&gt;.</source>
          <target state="translated">您可以省略 &lt;code&gt;:on&lt;/code&gt; 选项，这将创建相同的成员路由，除了资源id值将在 &lt;code&gt;params[:photo_id]&lt;/code&gt; 而不是 &lt;code&gt;params[:id]&lt;/code&gt; 可用。路由助手也会从 &lt;code&gt;preview_photo_url&lt;/code&gt; 和 &lt;code&gt;preview_photo_path&lt;/code&gt; 重命名为 &lt;code&gt;photo_preview_url&lt;/code&gt; 和 &lt;code&gt;photo_preview_path&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="df0dac0c4a1e3175feba58156a49179a3e04a085" translate="yes" xml:space="preserve">
          <source>You can localize your labels based on model and attribute names. For example you can define the following in your locale (e.g. en.yml)</source>
          <target state="translated">您可以根据模型和属性名来本地化您的标签。例如,您可以在您的语言环境中定义以下内容(例如:en.yml)</target>
        </trans-unit>
        <trans-unit id="a7b0974a254b6848f10357aecb3f5f88c3308169" translate="yes" xml:space="preserve">
          <source>You can make use of this feature, e.g. when working with a large amount of static content, which would be clumsy to put inside YAML or Ruby dictionaries. Bear in mind, though, that any change you would like to do later to the template must be propagated to all of them.</source>
          <target state="translated">你可以利用这个功能,例如,当你处理大量的静态内容时,把这些内容放在YAML或Ruby字典中会很笨拙。但请记住,你以后想对模板做的任何改变都必须传播到所有的模板上。</target>
        </trans-unit>
        <trans-unit id="4c6dd4d6bf440f65061dee424ac298d56e12c085" translate="yes" xml:space="preserve">
          <source>You can manipulate objects and associations before they are saved to the database, but there is some special behavior you should be aware of, mostly involving the saving of associated objects.</source>
          <target state="translated">你可以在对象和关联保存到数据库之前对它们进行操作,但有一些特殊的行为你应该注意,主要涉及到关联对象的保存。</target>
        </trans-unit>
        <trans-unit id="2bce7400aaabcd9c4d1db4804f4e1fd23cd01cb9" translate="yes" xml:space="preserve">
          <source>You can match all verbs to a particular route using &lt;code&gt;via: :all&lt;/code&gt;:</source>
          <target state="translated">您可以使用以下命令将所有动词与特定路线匹配 &lt;code&gt;via: :all&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="e294483254a54aa8330aae52a2784dd55f7cd36d" translate="yes" xml:space="preserve">
          <source>You can mitigate these attacks (in the obvious way) by adding the &lt;strong&gt;httpOnly&lt;/strong&gt; flag to cookies, so that document.cookie may not be read by JavaScript. HTTP only cookies can be used from IE v6.SP1, Firefox v2.0.0.5, Opera 9.5, Safari 4, and Chrome 1.0.154 onwards. But other, older browsers (such as WebTV and IE 5.5 on Mac) can actually cause the page to fail to load. Be warned that cookies &lt;a href=&quot;https://www.owasp.org/index.php/HTTPOnly#Browsers_Supporting_HttpOnly&quot;&gt;will still be visible using Ajax&lt;/a&gt;, though.</source>
          <target state="translated">您可以通过在cookie中添加&lt;strong&gt;httpOnly&lt;/strong&gt;标志来缓解这些攻击（以明显的方式），以使JavaScript可能无法读取document.cookie。从IE v6.SP1，Firefox v2.0.0.5，Opera 9.5，Safari 4和Chrome 1.0.154开始可以使用仅HTTP的cookie。但是其他较旧的浏览器（例如Mac上的WebTV和IE 5.5）实际上可能导致页面无法加载。请注意，尽管&lt;a href=&quot;https://www.owasp.org/index.php/HTTPOnly#Browsers_Supporting_HttpOnly&quot;&gt;使用Ajax仍然可以看到&lt;/a&gt; Cookie 。</target>
        </trans-unit>
        <trans-unit id="ee403c2d36c2b3e8289d4b44f0e1d3a636690780" translate="yes" xml:space="preserve">
          <source>You can mix it with &lt;code&gt;from&lt;/code&gt; method and do fun things like:</source>
          <target state="translated">您可以将它与 &lt;code&gt;from&lt;/code&gt; 方法混合使用，并做一些有趣的事情：</target>
        </trans-unit>
        <trans-unit id="35f1975b1f0d5a64a6e4f81bcfcf1900ad849f14" translate="yes" xml:space="preserve">
          <source>You can mix it with &lt;code&gt;to&lt;/code&gt; method and do fun things like:</source>
          <target state="translated">您可以将其与 &lt;code&gt;to&lt;/code&gt; 方法混合使用，并做一些有趣的事情：</target>
        </trans-unit>
        <trans-unit id="7262b6b97663dcb8dfa5a08f3085907ee16ed3d2" translate="yes" xml:space="preserve">
          <source>You can modify the HTML attributes of the script tag by passing a hash as the last argument.</source>
          <target state="translated">您可以通过传递一个哈希值作为最后一个参数来修改脚本标签的HTML属性。</target>
        </trans-unit>
        <trans-unit id="19bc4f8bc9ae0bb9618408d51972163f8228339c" translate="yes" xml:space="preserve">
          <source>You can navigate to the directory that contains the plugin, run the &lt;code&gt;bundle install&lt;/code&gt; command and run the one generated test using the &lt;code&gt;bin/test&lt;/code&gt; command.</source>
          <target state="translated">您可以导航到包含插件的目录，运行 &lt;code&gt;bundle install&lt;/code&gt; 命令，并使用 &lt;code&gt;bin/test&lt;/code&gt; 命令运行一个生成的测试。</target>
        </trans-unit>
        <trans-unit id="12527ecccc43602a7ba9aee80b0558cb2aa626be" translate="yes" xml:space="preserve">
          <source>You can nest resources within other nested resources if you like. For example:</source>
          <target state="translated">如果你喜欢,你可以将资源嵌套在其他嵌套资源中。比如说</target>
        </trans-unit>
        <trans-unit id="e5b13339cf0c577697235c8e130bf416c99aaecb" translate="yes" xml:space="preserve">
          <source>You can now configure your application to check if the HTTP &lt;code&gt;Origin&lt;/code&gt; header should be checked against the site's origin as an additional CSRF defense. Set the following in your config to true:</source>
          <target state="translated">现在，您可以配置您的应用程序，以检查是否应针对站点的来源检查HTTP &lt;code&gt;Origin&lt;/code&gt; 标头，作为附加的CSRF防御。在您的配置中将以下设置为true：</target>
        </trans-unit>
        <trans-unit id="89c7f3f9b59018216b3dc63fa1aaf7a18c5478a8" translate="yes" xml:space="preserve">
          <source>You can now create, show, and list articles. Now let's add some links to navigate through pages.</source>
          <target state="translated">现在你可以创建、显示和列出文章。现在让我们添加一些链接来浏览页面。</target>
        </trans-unit>
        <trans-unit id="76d4be262fb68a4c5e963717e5a69e0cf726c82f" translate="yes" xml:space="preserve">
          <source>You can now just call the dependency once with a wildcard.</source>
          <target state="translated">现在你只需用通配符调用一次依赖关系即可。</target>
        </trans-unit>
        <trans-unit id="064dd1559492ca12147d7214ee7e7c2af3b6ea2f" translate="yes" xml:space="preserve">
          <source>You can now robustly use constant paths in class and module definitions:</source>
          <target state="translated">现在你可以在类和模块定义中稳健地使用常量路径。</target>
        </trans-unit>
        <trans-unit id="ec20829c9911f07cc5b048dc67c8b7c80b8b302c" translate="yes" xml:space="preserve">
          <source>You can now set or update attributes on the associated posts through an attribute hash for a member: include the key &lt;code&gt;:posts_attributes&lt;/code&gt; with an array of hashes of post attributes as a value.</source>
          <target state="translated">现在，您可以通过成员的属性哈希值来设置或更新关联帖子的属性：包括键 &lt;code&gt;:posts_attributes&lt;/code&gt; 并将帖子属性的哈希值数组作为值。</target>
        </trans-unit>
        <trans-unit id="937e46514426c72c2cf9b728317542791936fe31" translate="yes" xml:space="preserve">
          <source>You can now use wildcard matching for your template dependencies. For example, if you were defining your templates as such:</source>
          <target state="translated">现在,您可以对您的模板依赖关系使用通配符。例如,如果你定义你的模板是这样的。</target>
        </trans-unit>
        <trans-unit id="8abd6d3bb8b106f0fe6a56142977c39bf5114569" translate="yes" xml:space="preserve">
          <source>You can now wrap the &lt;code&gt;git&lt;/code&gt; calls in an &lt;code&gt;after_bundle&lt;/code&gt; block. It will be run after the binstubs have been generated.</source>
          <target state="translated">现在，您可以将 &lt;code&gt;git&lt;/code&gt; 调用包装在 &lt;code&gt;after_bundle&lt;/code&gt; 块中。将在生成binstub之后运行它。</target>
        </trans-unit>
        <trans-unit id="dba25fc6aea961f82aca80a6d1e712b354b5bb5a" translate="yes" xml:space="preserve">
          <source>You can obtain a safe string from a given one with the &lt;code&gt;html_safe&lt;/code&gt; method:</source>
          <target state="translated">您可以使用 &lt;code&gt;html_safe&lt;/code&gt; 方法从给定的字符串中获取安全的字符串：</target>
        </trans-unit>
        <trans-unit id="75d7db5406967c4186703fcffbf7c6e9f154722c" translate="yes" xml:space="preserve">
          <source>You can optionally provide HTML attributes as the last element of the array.</source>
          <target state="translated">你可以选择提供HTML属性作为数组的最后一个元素。</target>
        </trans-unit>
        <trans-unit id="a241d5056cfb48c0b751673be74cf53eada98f55" translate="yes" xml:space="preserve">
          <source>You can override &lt;code&gt;ActiveRecord::Base#to_param&lt;/code&gt; of a related model to construct a URL:</source>
          <target state="translated">您可以重写相关模型的 &lt;code&gt;ActiveRecord::Base#to_param&lt;/code&gt; 来构建URL：</target>
        </trans-unit>
        <trans-unit id="ca136a4a5e14d9c65355df5daa9a6c6bc337c95b" translate="yes" xml:space="preserve">
          <source>You can override &lt;code&gt;to_param&lt;/code&gt; in your model to make &lt;code&gt;user_path&lt;/code&gt; construct a path using the user's name instead of the user's id:</source>
          <target state="translated">您可以覆盖 &lt;code&gt;to_param&lt;/code&gt; 在模型制作 &lt;code&gt;user_path&lt;/code&gt; 使用用户的名称，而不是用户的ID的构建路径：</target>
        </trans-unit>
        <trans-unit id="6ed6885a113854e574054e9447686422a4a67b38" translate="yes" xml:space="preserve">
          <source>You can override the default column name by specifying a custom column name in the &lt;code&gt;counter_cache&lt;/code&gt; declaration instead of &lt;code&gt;true&lt;/code&gt;. For example, to use &lt;code&gt;count_of_books&lt;/code&gt; instead of &lt;code&gt;books_count&lt;/code&gt;:</source>
          <target state="translated">您可以通过在 &lt;code&gt;counter_cache&lt;/code&gt; 声明中指定自定义列名称（而不是 &lt;code&gt;true&lt;/code&gt; )来覆盖默认列名称。例如，使用 &lt;code&gt;count_of_books&lt;/code&gt; 代替 &lt;code&gt;books_count&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="176a21a45c9a829b01ea56d86938046e27f5e3b5" translate="yes" xml:space="preserve">
          <source>You can override the default layout conventions in your controllers by using the &lt;code&gt;layout&lt;/code&gt; declaration. For example:</source>
          <target state="translated">您可以使用 &lt;code&gt;layout&lt;/code&gt; 声明覆盖控制器中的默认布局约定。例如：</target>
        </trans-unit>
        <trans-unit id="8f1085ae0bf061ebd25b7d4073de5894f9cf01a2" translate="yes" xml:space="preserve">
          <source>You can override this view in the application by simply creating a new file at &lt;code&gt;app/views/blorgh/articles/index.html.erb&lt;/code&gt;. Then you can completely change what this view would normally output.</source>
          <target state="translated">您只需在 &lt;code&gt;app/views/blorgh/articles/index.html.erb&lt;/code&gt; 中创建一个新文件，即可在应用程序中覆盖此视图。然后，您可以完全更改此视图正常输出的内容。</target>
        </trans-unit>
        <trans-unit id="64d115393f6ebd8c83dd3ef6c7793fc1189e3e4d" translate="yes" xml:space="preserve">
          <source>You can pass &lt;code&gt;Integer&lt;/code&gt; or &lt;code&gt;String&lt;/code&gt; values, it finds the records responding to the &lt;code&gt;id&lt;/code&gt; and executes delete on them.</source>
          <target state="translated">您可以传递 &lt;code&gt;Integer&lt;/code&gt; 或 &lt;code&gt;String&lt;/code&gt; 值，它会找到响应 &lt;code&gt;id&lt;/code&gt; 的记录并对其执行删除。</target>
        </trans-unit>
        <trans-unit id="23211aa846d02d6068e8d87abeaefd5a0e4d09a7" translate="yes" xml:space="preserve">
          <source>You can pass &lt;code&gt;Integer&lt;/code&gt; or &lt;code&gt;String&lt;/code&gt; values, it finds the records responding to the &lt;code&gt;id&lt;/code&gt; and then deletes them from the database.</source>
          <target state="translated">您可以传递 &lt;code&gt;Integer&lt;/code&gt; 或 &lt;code&gt;String&lt;/code&gt; 值，它会找到响应 &lt;code&gt;id&lt;/code&gt; 的记录，然后将其从数据库中删除。</target>
        </trans-unit>
        <trans-unit id="c48ef4aa2541dfd2dfbc4737e0630b0ba8480edf" translate="yes" xml:space="preserve">
          <source>You can pass &lt;code&gt;nil&lt;/code&gt; to &lt;a href=&quot;querymethods#method-i-create_with&quot;&gt;create_with&lt;/a&gt; to reset attributes:</source>
          <target state="translated">您可以将 &lt;code&gt;nil&lt;/code&gt; 传递给&lt;a href=&quot;querymethods#method-i-create_with&quot;&gt;create_with&lt;/a&gt;以重置属性：</target>
        </trans-unit>
        <trans-unit id="d3c5a31c832817515e6bbdf64c2b4d58a9d3cc0d" translate="yes" xml:space="preserve">
          <source>You can pass a second argument &lt;code&gt;scope&lt;/code&gt; as a callable (i.e. proc or lambda) to retrieve a specific record or customize the generated query when you access the associated object.</source>
          <target state="translated">您可以传递第二个参数 &lt;code&gt;scope&lt;/code&gt; 作为可调用对象（即proc或lambda）来检索特定记录或在访问关联对象时自定义生成的查询。</target>
        </trans-unit>
        <trans-unit id="b5edb638975cda410161ada50ce4aa6f5b1e6d7a" translate="yes" xml:space="preserve">
          <source>You can pass a second argument &lt;code&gt;scope&lt;/code&gt; as a callable (i.e. proc or lambda) to retrieve a specific set of records or customize the generated query when you access the associated collection.</source>
          <target state="translated">您可以传递第二个参数 &lt;code&gt;scope&lt;/code&gt; 作为可调用对象（即proc或lambda）以检索特定的记录集或在访问关联的集合时自定义生成的查询。</target>
        </trans-unit>
        <trans-unit id="77ab48471779a54f66b267b09a1f539ef3f34929" translate="yes" xml:space="preserve">
          <source>You can pass an &lt;code&gt;options&lt;/code&gt; hash which can include the following keys:</source>
          <target state="translated">您可以传递 &lt;code&gt;options&lt;/code&gt; 哈希，其中可以包含以下键：</target>
        </trans-unit>
        <trans-unit id="fc68c3b1a86539a4b143797b0648d9c350fc2961" translate="yes" xml:space="preserve">
          <source>You can pass any HTML attributes into &lt;code&gt;html_options&lt;/code&gt;. These will be added to all created paragraphs.</source>
          <target state="translated">您可以将任何HTML属性传递到 &lt;code&gt;html_options&lt;/code&gt; 中。这些将被添加到所有创建的段落中。</target>
        </trans-unit>
        <trans-unit id="5564f43da3bc6c0cb6a53594e3155e4c71da9f08" translate="yes" xml:space="preserve">
          <source>You can pass any object as a target (e.g. Active Record model), and it would be serialized into a string under the hood.</source>
          <target state="translated">你可以传递任何对象作为目标(例如Active Record模型),它将被序列化为一个字符串。</target>
        </trans-unit>
        <trans-unit id="b74c41991081fd019cbe5d219fa081753f1cba66" translate="yes" xml:space="preserve">
          <source>You can pass anything that the session can store; you're not limited to notices and alerts:</source>
          <target state="translated">你可以通过任何会话可以存储的东西;你不限于通知和警报。</target>
        </trans-unit>
        <trans-unit id="083d645e0d981d6c8b0b4b1634448c8efe6f4bef" translate="yes" xml:space="preserve">
          <source>You can pass in a class to before_&amp;lt;type&amp;gt;, after_&amp;lt;type&amp;gt; and around_&amp;lt;type&amp;gt;, in which case the callback will call that class's &amp;lt;action&amp;gt;_&amp;lt;type&amp;gt; method passing the object that the callback is being called on.</source>
          <target state="translated">您可以将一个类传递给before_ &amp;lt;type&amp;gt;，after_ &amp;lt;type&amp;gt;和around_ &amp;lt;type&amp;gt;，在这种情况下，回调将调用该类的&amp;lt;action&amp;gt; _ &amp;lt;type&amp;gt;方法，并传递调用回调的对象。</target>
        </trans-unit>
        <trans-unit id="f8726b97b5fee3f64f0f6534825d291d419b4a20" translate="yes" xml:space="preserve">
          <source>You can pass in a numerical argument to the &lt;code&gt;first&lt;/code&gt; method to return up to that number of results. For example</source>
          <target state="translated">您可以将数字参数传递给第 &lt;code&gt;first&lt;/code&gt; 方法，以返回最多该数量的结果。例如</target>
        </trans-unit>
        <trans-unit id="91ff6479bd8cb739d62a7f4a4c580d196e357236" translate="yes" xml:space="preserve">
          <source>You can pass in a numerical argument to the &lt;code&gt;last&lt;/code&gt; method to return up to that number of results. For example</source>
          <target state="translated">您可以将数字参数传递给 &lt;code&gt;last&lt;/code&gt; 方法以返回最多该数量的结果。例如</target>
        </trans-unit>
        <trans-unit id="fa2097feac3aff0de1bd96e7b099f2dac231478b" translate="yes" xml:space="preserve">
          <source>You can pass in a numerical argument to the &lt;code&gt;take&lt;/code&gt; method to return up to that number of results. For example</source>
          <target state="translated">您可以将数字参数传递给 &lt;code&gt;take&lt;/code&gt; 方法以返回最多该数量的结果。例如</target>
        </trans-unit>
        <trans-unit id="6b7f4447cb8147641a7e84c11bd31431342872d6" translate="yes" xml:space="preserve">
          <source>You can pass in any header value that a &lt;code&gt;Mail::Message&lt;/code&gt; accepts. Out of the box, &lt;code&gt;ActionMailer::Base&lt;/code&gt; sets the following:</source>
          <target state="translated">您可以传递 &lt;code&gt;Mail::Message&lt;/code&gt; 接受的任何标头值。开箱即用， &lt;code&gt;ActionMailer::Base&lt;/code&gt; 设置以下内容：</target>
        </trans-unit>
        <trans-unit id="39c9c4d2462be1a56998de5aa4a20a93bf97d110" translate="yes" xml:space="preserve">
          <source>You can pass local variables to sub templates by using a hash with the variable names as keys and the objects as values:</source>
          <target state="translated">您可以通过使用一个以变量名为键和对象名为值的哈希来传递局部变量到子模板。</target>
        </trans-unit>
        <trans-unit id="2696c04c9fe8f3f115208acfee3d97f1328fc703" translate="yes" xml:space="preserve">
          <source>You can pass more than one symbol for each class method and the respective validations will be run in the same order as they were registered.</source>
          <target state="translated">你可以为每个类方法传递一个以上的符号,各自的验证将以与注册时相同的顺序运行。</target>
        </trans-unit>
        <trans-unit id="9c48e0af9d7313528e3a230a7ff4a3212c8cbed9" translate="yes" xml:space="preserve">
          <source>You can pass options to a polymorphic mapping - the arity for the block needs to be two as the instance is passed as the first argument, e.g:</source>
          <target state="translated">你可以将选项传递给多态映射--由于实例是作为第一个参数传递的,所以块的arity需要为2,例如:。</target>
        </trans-unit>
        <trans-unit id="ddeb1cda8fa9c9d65829e74c859b1d0683612d76" translate="yes" xml:space="preserve">
          <source>You can pass parameters from the client side to the server side when creating a subscription. For example:</source>
          <target state="translated">创建订阅时,你可以从客户端向服务器端传递参数。比如说</target>
        </trans-unit>
        <trans-unit id="822af7778fbe473b3594f616ddb7b54e05b6ec6f" translate="yes" xml:space="preserve">
          <source>You can pass specific annotations by using the &lt;code&gt;--annotations&lt;/code&gt; argument. By default, it will search for FIXME, OPTIMIZE, and TODO. Note that annotations are case sensitive.</source>
          <target state="translated">您可以使用 &lt;code&gt;--annotations&lt;/code&gt; 参数传递特定的注释。默认情况下，它将搜索FIXME，OPTIMIZE和TODO。请注意，注释区分大小写。</target>
        </trans-unit>
        <trans-unit id="c28be36744dee3e7045122eba376e828d7a805be" translate="yes" xml:space="preserve">
          <source>You can pass the block as a string to be evaluated in the context of the block. A lambda can be passed for the block as well.</source>
          <target state="translated">你可以将代码块以字符串的形式传递,以便在代码块的上下文中进行评估。也可以为代码块传递一个lambda。</target>
        </trans-unit>
        <trans-unit id="b7651f984e79d6f180b39d16b3733e7d3daef9c6" translate="yes" xml:space="preserve">
          <source>You can pass the following options to change the default behavior. If you pass an option key that doesn't exist in the list below, it will raise an &lt;code&gt;ArgumentError&lt;/code&gt;.</source>
          <target state="translated">您可以传递以下选项来更改默认行为。如果您传递下面列表中不存在的选项键，它将引发 &lt;code&gt;ArgumentError&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5cd21ed769b4575be4eb599d3ddf3dc377f79bd8" translate="yes" xml:space="preserve">
          <source>You can perform fragment caching in mailer views like in application views using the &lt;code&gt;cache&lt;/code&gt; method.</source>
          <target state="translated">您可以使用 &lt;code&gt;cache&lt;/code&gt; 方法在邮件程序视图（如应用程序视图）中执行片段缓存。</target>
        </trans-unit>
        <trans-unit id="b2fb318ffd4c22f35900e1dbe20b1576cb6210d1" translate="yes" xml:space="preserve">
          <source>You can place objects in the session by using the &lt;code&gt;session&lt;/code&gt; method, which accesses a hash:</source>
          <target state="translated">您可以使用 &lt;code&gt;session&lt;/code&gt; 方法将对象放置在会话中，该方法将访问哈希：</target>
        </trans-unit>
        <trans-unit id="64ed2cf52a086f8428ac9b8a4be32f3e63b6684d" translate="yes" xml:space="preserve">
          <source>You can precompile the assets in &lt;code&gt;app/assets&lt;/code&gt; using &lt;code&gt;rails assets:precompile&lt;/code&gt;, and remove older compiled assets using &lt;code&gt;rails assets:clean&lt;/code&gt;. The &lt;code&gt;assets:clean&lt;/code&gt; command allows for rolling deploys that may still be linking to an old asset while the new assets are being built.</source>
          <target state="translated">您可以使用 &lt;code&gt;rails assets:precompile&lt;/code&gt; 在 &lt;code&gt;app/assets&lt;/code&gt; 预编译资产，并使用 &lt;code&gt;rails assets:clean&lt;/code&gt; 删除较旧的已编译资产。该 &lt;code&gt;assets:clean&lt;/code&gt; 命令允许滚动可能仍然连接到旧的资产，而新的资产正在建设展开。</target>
        </trans-unit>
        <trans-unit id="28f39c65041ea0263f0caf27c476f6a09413830b" translate="yes" xml:space="preserve">
          <source>You can prefix routes with a named parameter also:</source>
          <target state="translated">你也可以用命名的参数给路由加前缀。</target>
        </trans-unit>
        <trans-unit id="0cbd6f1ece1f305d1c5ad9eee220c5297985dc68" translate="yes" xml:space="preserve">
          <source>You can prefix the queue name for all your jobs using &lt;code&gt;config.active_job.queue_name_prefix&lt;/code&gt; in &lt;code&gt;application.rb&lt;/code&gt;:</source>
          <target state="translated">您可以前缀使用所有作业队列名 &lt;code&gt;config.active_job.queue_name_prefix&lt;/code&gt; 在 &lt;code&gt;application.rb&lt;/code&gt; 中：</target>
        </trans-unit>
        <trans-unit id="c1f3e73931f16c89f5b3fef7cc288e64a72134c4" translate="yes" xml:space="preserve">
          <source>You can preview your email templates visually by adding a mailer preview file to the &lt;code&gt;ActionMailer::Base.preview_path&lt;/code&gt;. Since most emails do something interesting with database data, you'll need to write some scenarios to load messages with fake data:</source>
          <target state="translated">通过将邮件预览文件添加到 &lt;code&gt;ActionMailer::Base.preview_path&lt;/code&gt; 可以直观地预览电子邮件模板。由于大多数电子邮件都会对数据库数据做一些有趣的事情，因此您需要编写一些方案来加载带有伪数据的消息：</target>
        </trans-unit>
        <trans-unit id="06ec3704a9f798e0f9a5cd3de35690f5f482dc6f" translate="yes" xml:space="preserve">
          <source>You can quiet them down by setting ActiveRecord::Migration.verbose = false.</source>
          <target state="translated">你可以通过设置ActiveRecord::Migration.verbose=false让它们安静下来。</target>
        </trans-unit>
        <trans-unit id="f084bbe9af219bda931be7bf2865e8a68e13161f" translate="yes" xml:space="preserve">
          <source>You can read below about the different events that are fired dealing with remote elements inside your application.</source>
          <target state="translated">你可以在下面阅读关于处理你的应用程序中的远程元素的不同事件。</target>
        </trans-unit>
        <trans-unit id="27d9474b4755f717bb0265a25d8cd843dd71efbe" translate="yes" xml:space="preserve">
          <source>You can read more about about Cross-Site Request Forgery in &lt;a href=&quot;https://guides.rubyonrails.org/security.html#cross-site-request-forgery-csrf&quot;&gt;Security&lt;/a&gt;</source>
          <target state="translated">您可以阅读有关&lt;a href=&quot;https://guides.rubyonrails.org/security.html#cross-site-request-forgery-csrf&quot;&gt;安全性中的&lt;/a&gt;跨站点请求伪造的更多信息。</target>
        </trans-unit>
        <trans-unit id="94c7d7493d4877cc31e987dd713369b7cc438731" translate="yes" xml:space="preserve">
          <source>You can read more about each approach by clicking the modules below.</source>
          <target state="translated">你可以通过点击下面的模块阅读更多关于每种方法的信息。</target>
        </trans-unit>
        <trans-unit id="988f86ca76b71a463157427b3badc23e94374905" translate="yes" xml:space="preserve">
          <source>You can read more about partials in the &lt;a href=&quot;layouts_and_rendering&quot;&gt;Layouts and Rendering in Rails&lt;/a&gt; guide.</source>
          <target state="translated">您可以&lt;a href=&quot;layouts_and_rendering&quot;&gt;在《 Rails&lt;/a&gt;的布局和渲染》指南中阅读有关分部的更多信息。</target>
        </trans-unit>
        <trans-unit id="ed0450d2efee58423c1386b438e5f277dd52a87f" translate="yes" xml:space="preserve">
          <source>You can read more about the Rails Internationalization (I18n) API &lt;a href=&quot;i18n&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">您可以&lt;a href=&quot;i18n&quot;&gt;在此处&lt;/a&gt;阅读有关Rails国际化（I18n）API的更多信息。</target>
        </trans-unit>
        <trans-unit id="31248b64f7d2f2ee47b08cfda01dd589caf0994a" translate="yes" xml:space="preserve">
          <source>You can redirect any path to another path using the &lt;code&gt;redirect&lt;/code&gt; helper in your router:</source>
          <target state="translated">您可以使用路由器中的 &lt;code&gt;redirect&lt;/code&gt; 助手将任何路径重定向到另一路径：</target>
        </trans-unit>
        <trans-unit id="0e3a9d45289276e9157bd5f51fbca04fc79abebb" translate="yes" xml:space="preserve">
          <source>You can redirect any path to another path using the redirect helper in your router:</source>
          <target state="translated">你可以使用路由器中的重定向助手将任何路径重定向到另一个路径。</target>
        </trans-unit>
        <trans-unit id="c00654a8b78ecb694433cb0a1609f4dd587d129b" translate="yes" xml:space="preserve">
          <source>You can refer to the modules included in &lt;code&gt;ActionController::Base&lt;/code&gt; to see other features you can bring into your metal controller.</source>
          <target state="translated">您可以参考 &lt;code&gt;ActionController::Base&lt;/code&gt; 包含的模块以查看可以带入金属控制器的其他功能。</target>
        </trans-unit>
        <trans-unit id="49cbebbedc03f8fa30674cb99d892f3db4d78e93" translate="yes" xml:space="preserve">
          <source>You can reload routes if you feel you must:</source>
          <target state="translated">如果你觉得有必要,你可以重新加载路线。</target>
        </trans-unit>
        <trans-unit id="2ec601b590ebccdec5fa3b041efc3d5450322e63" translate="yes" xml:space="preserve">
          <source>You can retrieve it again through the same hash:</source>
          <target state="translated">你可以通过同样的哈希值再次检索。</target>
        </trans-unit>
        <trans-unit id="0a72d98a402df568c72f090eb52ade150eeeb6c8" translate="yes" xml:space="preserve">
          <source>You can run &lt;code&gt;rails -T&lt;/code&gt; to see all the commands you're able to run. You should see the following:</source>
          <target state="translated">您可以运行 &lt;code&gt;rails -T&lt;/code&gt; 来查看所有能够运行的命令。您应该看到以下内容：</target>
        </trans-unit>
        <trans-unit id="d8954f2507b4641f2937af84a5a6e79e846127af" translate="yes" xml:space="preserve">
          <source>You can run EXPLAIN on the queries triggered by relations. For example,</source>
          <target state="translated">你可以对关系触发的查询运行EXPLAIN。例如:</target>
        </trans-unit>
        <trans-unit id="0c4ae7ce63b7674174b7c04a7c4469ca5eb759f5" translate="yes" xml:space="preserve">
          <source>You can save these settings in an &lt;code&gt;.byebugrc&lt;/code&gt; file in your home directory. The debugger reads these global settings when it starts. For example:</source>
          <target state="translated">您可以将这些设置保存在主目录中的 &lt;code&gt;.byebugrc&lt;/code&gt; 文件中。调试器在启动时会读取这些全局设置。例如：</target>
        </trans-unit>
        <trans-unit id="bdf4a43944f9bdf40ce29ffd2a99d9b507a79c11" translate="yes" xml:space="preserve">
          <source>You can search through your routes with the grep option: -g. This outputs any routes that partially match the URL helper method name, the HTTP verb, or the URL path.</source>
          <target state="translated">你可以使用grep选项:-g来搜索你的路由。这将输出所有部分匹配 URL 助手方法名、HTTP 动词或 URL 路径的路由。</target>
        </trans-unit>
        <trans-unit id="dfbc5aaf5a5a18d2594e5a5626cdc47e6722d108" translate="yes" xml:space="preserve">
          <source>You can see all of the command line options that the Rails application builder accepts by running &lt;code&gt;rails new -h&lt;/code&gt;.</source>
          <target state="translated">您可以通过运行 &lt;code&gt;rails new -h&lt;/code&gt; 来查看Rails应用程序构建器接受的所有命令行选项。</target>
        </trans-unit>
        <trans-unit id="04788ab9f898a4ef196b13c69495ebe99cb81d66" translate="yes" xml:space="preserve">
          <source>You can see if any associated objects exist by using the &lt;code&gt;association.nil?&lt;/code&gt; method:</source>
          <target state="translated">您可以使用 &lt;code&gt;association.nil?&lt;/code&gt; 查看是否存在任何关联的对象？方法：</target>
        </trans-unit>
        <trans-unit id="32f149e6ea2e2beeb843ac2936220563ef2b2684" translate="yes" xml:space="preserve">
          <source>You can see what the engine has so far by running &lt;code&gt;rails db:migrate&lt;/code&gt; at the root of our engine to run the migration generated by the scaffold generator, and then running &lt;code&gt;rails server&lt;/code&gt; in &lt;code&gt;test/dummy&lt;/code&gt;. When you open &lt;code&gt;http://localhost:3000/blorgh/articles&lt;/code&gt; you will see the default scaffold that has been generated. Click around! You've just generated your first engine's first functions.</source>
          <target state="translated">您可以通过在引擎的根目录运行 &lt;code&gt;rails db:migrate&lt;/code&gt; 来运行脚手架生成器生成的迁移，然后在 &lt;code&gt;test/dummy&lt;/code&gt; 中运行 &lt;code&gt;rails server&lt;/code&gt; 以查看引擎到目前为止的功能。当您打开 &lt;code&gt;http://localhost:3000/blorgh/articles&lt;/code&gt; 时,您将看到已生成的默认支架。点击一下！您刚刚生成了第一个引擎的第一个功能。</target>
        </trans-unit>
        <trans-unit id="8de9152c05d75779b6225d0496b6c087fabb78c3" translate="yes" xml:space="preserve">
          <source>You can send a raw content back to the browser, without setting any content type, by using the &lt;code&gt;:body&lt;/code&gt; option to &lt;code&gt;render&lt;/code&gt;:</source>
          <target state="translated">您可以通过使用 &lt;code&gt;:body&lt;/code&gt; 选项来 &lt;code&gt;render&lt;/code&gt; 原始内容，而无需设置任何内容类型，将其发送回浏览器：</target>
        </trans-unit>
        <trans-unit id="dab63a11b5bc722cbb23363313530b897acb110a" translate="yes" xml:space="preserve">
          <source>You can send an HTML string back to the browser by using the &lt;code&gt;:html&lt;/code&gt; option to &lt;code&gt;render&lt;/code&gt;:</source>
          <target state="translated">您可以使用 &lt;code&gt;:html&lt;/code&gt; 选项 &lt;code&gt;render&lt;/code&gt; 将HTML字符串发送回浏览器：</target>
        </trans-unit>
        <trans-unit id="14a4b2b8f8eb39f0955a3505d3c14110efb88090" translate="yes" xml:space="preserve">
          <source>You can send parameters like this:</source>
          <target state="translated">你可以这样发送参数。</target>
        </trans-unit>
        <trans-unit id="4fbee11d801a3852eec1cb0969328238890f3b39" translate="yes" xml:space="preserve">
          <source>You can send plain text - with no markup at all - back to the browser by using the &lt;code&gt;:plain&lt;/code&gt; option to &lt;code&gt;render&lt;/code&gt;:</source>
          <target state="translated">您可以使用 &lt;code&gt;:plain&lt;/code&gt; 选项 &lt;code&gt;render&lt;/code&gt; ：将纯文本（完全没有标记）发送回浏览器：</target>
        </trans-unit>
        <trans-unit id="9c88bd657c6d0b8d863c008c64413e67936b6073" translate="yes" xml:space="preserve">
          <source>You can set a default value for the attribute.</source>
          <target state="translated">你可以为该属性设置一个默认值。</target>
        </trans-unit>
        <trans-unit id="83f823a5c604a701c801b3db623fc02454399589" translate="yes" xml:space="preserve">
          <source>You can set and reuse defaults in your fixtures YAML file. This is the same technique used in the &lt;code&gt;database.yml&lt;/code&gt; file to specify defaults:</source>
          <target state="translated">您可以在Fixture YAML文件中设置和重用默认值。这与 &lt;code&gt;database.yml&lt;/code&gt; 文件中用于指定缺省值的技术相同：</target>
        </trans-unit>
        <trans-unit id="6644a6ae2134bf2d3b277a18d5f63f2f7d164118" translate="yes" xml:space="preserve">
          <source>You can set custom coder to encode/decode your serialized attributes to/from different formats. JSON, YAML, Marshal are supported out of the box. Generally it can be any wrapper that provides &lt;code&gt;load&lt;/code&gt; and &lt;code&gt;dump&lt;/code&gt;.</source>
          <target state="translated">您可以设置自定义编码器，以将序列化的属性编码/解码为不同的格式。开箱即用地支持JSON，YAML，Marshal。通常，它可以是提供 &lt;code&gt;load&lt;/code&gt; 和 &lt;code&gt;dump&lt;/code&gt; 任何包装。</target>
        </trans-unit>
        <trans-unit id="0b3a5ef34eda7a02a27287551ff60bc389446846" translate="yes" xml:space="preserve">
          <source>You can set data attributes directly by passing in a data hash, but all other HTML options must be wrapped in the HTML key. Example:</source>
          <target state="translated">您可以通过传递数据哈希来直接设置数据属性,但所有其他的HTML选项都必须用HTML键来包装。例如</target>
        </trans-unit>
        <trans-unit id="39296409bcc45c4dab45dc96b4d7f40717785e55" translate="yes" xml:space="preserve">
          <source>You can set data attributes directly in a data hash, but HTML options besides id and class must be wrapped in an HTML key:</source>
          <target state="translated">你可以直接在数据哈希中设置数据属性,但除了id和class之外的HTML选项必须用HTML键包装。</target>
        </trans-unit>
        <trans-unit id="9d82d0b4e3ac695572386de4524f99f0d28eb6e4" translate="yes" xml:space="preserve">
          <source>You can set default values for any of the above headers (except &lt;code&gt;:date&lt;/code&gt;) by using the &lt;a href=&quot;base#method-c-default&quot;&gt;::default&lt;/a&gt; class method:</source>
          <target state="translated">您可以使用&lt;a href=&quot;base#method-c-default&quot;&gt;:: default&lt;/a&gt;类方法为上述任何标头（ &lt;code&gt;:date&lt;/code&gt; 除外）设置默认值：</target>
        </trans-unit>
        <trans-unit id="200b57c0abad2a29eb9e95c2554e286b02511ff2" translate="yes" xml:space="preserve">
          <source>You can set global default parameters for URL generation by defining a method called &lt;code&gt;default_url_options&lt;/code&gt; in your controller. Such a method must return a hash with the desired defaults, whose keys must be symbols:</source>
          <target state="translated">您可以通过在控制器中定义一个称为 &lt;code&gt;default_url_options&lt;/code&gt; 的方法来设置用于生成URL的全局默认参数。这样的方法必须返回具有所需默认值的哈希，其键必须是符号：</target>
        </trans-unit>
        <trans-unit id="98d63a9244fd424ce0e95585c383c5d1a9d3d9ce" translate="yes" xml:space="preserve">
          <source>You can set it to a String, a Regexp, or an array of both.</source>
          <target state="translated">你可以将它设置为一个字符串,一个Regexp,或者一个两者都有的数组。</target>
        </trans-unit>
        <trans-unit id="03c1190acff6dd1f46a718415821e23cd0cbcf85" translate="yes" xml:space="preserve">
          <source>You can set the &lt;code&gt;:autosave&lt;/code&gt; option on a &lt;a href=&quot;classmethods#method-i-has_one&quot;&gt;has_one&lt;/a&gt;, &lt;a href=&quot;classmethods#method-i-belongs_to&quot;&gt;belongs_to&lt;/a&gt;, &lt;a href=&quot;classmethods#method-i-has_many&quot;&gt;has_many&lt;/a&gt;, or &lt;a href=&quot;classmethods#method-i-has_and_belongs_to_many&quot;&gt;has_and_belongs_to_many&lt;/a&gt; association. Setting it to &lt;code&gt;true&lt;/code&gt; will &lt;em&gt;always&lt;/em&gt; save the members, whereas setting it to &lt;code&gt;false&lt;/code&gt; will &lt;em&gt;never&lt;/em&gt; save the members. More details about &lt;code&gt;:autosave&lt;/code&gt; option is available at &lt;a href=&quot;../autosaveassociation&quot;&gt;AutosaveAssociation&lt;/a&gt;.</source>
          <target state="translated">您可以在&lt;a href=&quot;classmethods#method-i-has_one&quot;&gt;has_one&lt;/a&gt;，&lt;a href=&quot;classmethods#method-i-belongs_to&quot;&gt;belongs_to&lt;/a&gt;，&lt;a href=&quot;classmethods#method-i-has_many&quot;&gt;has_many&lt;/a&gt;或&lt;a href=&quot;classmethods#method-i-has_and_belongs_to_many&quot;&gt;has_and_belongs_to_many&lt;/a&gt;关联上设置 &lt;code&gt;:autosave&lt;/code&gt; autosave选项。将其设置为 &lt;code&gt;true&lt;/code&gt; 将&lt;em&gt;始终&lt;/em&gt;保存成员，而将其设置为 &lt;code&gt;false&lt;/code&gt; 将&lt;em&gt;永远不会&lt;/em&gt;保存成员。有关 &lt;code&gt;:autosave&lt;/code&gt; 选项的更多详细信息，请参见&lt;a href=&quot;../autosaveassociation&quot;&gt;AutosaveAssociation&lt;/a&gt;。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a4dc9f1aec0840aaecfb24fe729467390fffa3d0" translate="yes" xml:space="preserve">
          <source>You can set the &lt;code&gt;RAILS_SYSTEM_TESTING_SCREENSHOT&lt;/code&gt; environment variable to control the output. Possible values are:</source>
          <target state="translated">您可以设置 &lt;code&gt;RAILS_SYSTEM_TESTING_SCREENSHOT&lt;/code&gt; 环境变量来控制输出。可能的值为：</target>
        </trans-unit>
        <trans-unit id="8a56950d93733a86d78cf00531c06d7cbbb60f82" translate="yes" xml:space="preserve">
          <source>You can set the default value from the database declaration, like:</source>
          <target state="translated">你可以从数据库声明中设置默认值,比如。</target>
        </trans-unit>
        <trans-unit id="dc9540e9fce12388cb457d2d1844ca3ec443deb8" translate="yes" xml:space="preserve">
          <source>You can set the option to &lt;code&gt;true&lt;/code&gt; for using default locale as fallback, like so:</source>
          <target state="translated">您可以将选项设置为 &lt;code&gt;true&lt;/code&gt; ,以使用默认语言环境作为后备，如下所示：</target>
        </trans-unit>
        <trans-unit id="bfd05e9aeff161745c53e0582e588df3928d35ab" translate="yes" xml:space="preserve">
          <source>You can set the variant in a &lt;code&gt;before_action&lt;/code&gt;:</source>
          <target state="translated">您可以在 &lt;code&gt;before_action&lt;/code&gt; 中设置变体：</target>
        </trans-unit>
        <trans-unit id="42f146bffc93bb7d75bb84705d28f0b2d313ca29" translate="yes" xml:space="preserve">
          <source>You can set up as many dynamic segments within a regular route as you like. Any segment will be available to the action as part of &lt;code&gt;params&lt;/code&gt;. If you set up this route:</source>
          <target state="translated">您可以根据需要在常规路线中设置尽可能多的动态细分。任何段都可以作为 &lt;code&gt;params&lt;/code&gt; 一部分用于操作。如果您设置此路线：</target>
        </trans-unit>
        <trans-unit id="cb825b898c3f8ca013236437c77464d1d1162756" translate="yes" xml:space="preserve">
          <source>You can set up generators for engines with &lt;code&gt;config.generators&lt;/code&gt; method:</source>
          <target state="translated">您可以使用 &lt;code&gt;config.generators&lt;/code&gt; 方法为引擎设置生成器：</target>
        </trans-unit>
        <trans-unit id="88e5d22065491fd65ba10273fcaaf17333e54e83" translate="yes" xml:space="preserve">
          <source>You can set up your application's default cache store by setting the &lt;code&gt;config.cache_store&lt;/code&gt; configuration option. Other parameters can be passed as arguments to the cache store's constructor:</source>
          <target state="translated">您可以通过设置 &lt;code&gt;config.cache_store&lt;/code&gt; 配置选项来设置应用程序的默认缓存存储。可以将其他参数作为参数传递给缓存存储的构造函数：</target>
        </trans-unit>
        <trans-unit id="7bc2e6f9daa90bfa579eac56d832bc85593030d7" translate="yes" xml:space="preserve">
          <source>You can specify a full path relative to the document root, or a URL, if you prefer. For example, to link to a JavaScript file that is inside a directory called &lt;code&gt;javascripts&lt;/code&gt; inside of one of &lt;code&gt;app/assets&lt;/code&gt;, &lt;code&gt;lib/assets&lt;/code&gt; or &lt;code&gt;vendor/assets&lt;/code&gt;, you would do this:</source>
          <target state="translated">您可以指定相对于文档根目录的完整路径，也可以指定URL。例如，要链接到位于 &lt;code&gt;app/assets&lt;/code&gt; ， &lt;code&gt;lib/assets&lt;/code&gt; 或 &lt;code&gt;vendor/assets&lt;/code&gt; 之一内的 &lt;code&gt;javascripts&lt;/code&gt; 目录中的JavaScript文件，您可以这样做：</target>
        </trans-unit>
        <trans-unit id="c997a00c6b426612cc8c0d877565f65c632f5c77" translate="yes" xml:space="preserve">
          <source>You can specify a full path relative to the document root, or a URL. For example, to link to a stylesheet file that is inside a directory called &lt;code&gt;stylesheets&lt;/code&gt; inside of one of &lt;code&gt;app/assets&lt;/code&gt;, &lt;code&gt;lib/assets&lt;/code&gt; or &lt;code&gt;vendor/assets&lt;/code&gt;, you would do this:</source>
          <target state="translated">您可以指定相对于文档根目录的完整路径或URL。例如，要链接到位于 &lt;code&gt;app/assets&lt;/code&gt; ， &lt;code&gt;lib/assets&lt;/code&gt; 或 &lt;code&gt;vendor/assets&lt;/code&gt; 之一内名为 &lt;code&gt;stylesheets&lt;/code&gt; 的目录内的样式表文件，请执行以下操作：</target>
        </trans-unit>
        <trans-unit id="b1fd77e93cb4f9294f065ae9e5a35a8c480b29cc" translate="yes" xml:space="preserve">
          <source>You can specify a name for any route using the &lt;code&gt;:as&lt;/code&gt; option:</source>
          <target state="translated">您可以使用 &lt;code&gt;:as&lt;/code&gt; 选项为任何路由指定名称：</target>
        </trans-unit>
        <trans-unit id="769d79e42ed90236159e53e94828cc1efc172aff" translate="yes" xml:space="preserve">
          <source>You can specify a partial to be rendered between elements via the &lt;code&gt;:spacer_template&lt;/code&gt; option. The following example will render &lt;code&gt;advertiser/_ad_divider.html.erb&lt;/code&gt; between each ad partial:</source>
          <target state="translated">您可以通过 &lt;code&gt;:spacer_template&lt;/code&gt; 选项指定要在元素之间渲染的局部。以下示例将在每个广告部分之间呈现 &lt;code&gt;advertiser/_ad_divider.html.erb&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="4c1dd4672a83f36deda67d570bf162ba208e88ed" translate="yes" xml:space="preserve">
          <source>You can specify a regular expression to define a format for a parameter.</source>
          <target state="translated">您可以指定一个正则表达式来定义一个参数的格式。</target>
        </trans-unit>
        <trans-unit id="ee3172278262bcac44f5fa75481081543b57477f" translate="yes" xml:space="preserve">
          <source>You can specify a single constraint to apply to a number of routes by using the block form:</source>
          <target state="translated">您可以使用块的形式指定一个约束条件,应用于多个途径。</target>
        </trans-unit>
        <trans-unit id="230b35d74b42e511f741a7754a12594ea78b498f" translate="yes" xml:space="preserve">
          <source>You can specify a validator type to the returned error details hash using the &lt;code&gt;errors.add&lt;/code&gt; method.</source>
          <target state="translated">您可以使用 &lt;code&gt;errors.add&lt;/code&gt; 方法为返回的错误详细信息哈希指定验证器类型。</target>
        </trans-unit>
        <trans-unit id="e49c70db1b9d10a2696fd10e6f8d3e76dbc2b95d" translate="yes" xml:space="preserve">
          <source>You can specify an alternative logger in &lt;code&gt;config/application.rb&lt;/code&gt; or any other environment file, for example:</source>
          <target state="translated">您可以在 &lt;code&gt;config/application.rb&lt;/code&gt; 或任何其他环境文件中指定备用记录器，例如：</target>
        </trans-unit>
        <trans-unit id="8022c2b80cec7e1a54e313244ae229f31233fae4" translate="yes" xml:space="preserve">
          <source>You can specify an exclamation point (&lt;code&gt;!&lt;/code&gt;) on the end of the dynamic finders to get them to raise an &lt;code&gt;ActiveRecord::RecordNotFound&lt;/code&gt; error if they do not return any records, like &lt;code&gt;Client.find_by_name!(&quot;Ryan&quot;)&lt;/code&gt;</source>
          <target state="translated">您可以在动态查找器的末尾指定一个感叹号（ &lt;code&gt;!&lt;/code&gt; ），以使它们在不返回任何记录的情况下引发 &lt;code&gt;ActiveRecord::RecordNotFound&lt;/code&gt; 错误，例如 &lt;code&gt;Client.find_by_name!(&quot;Ryan&quot;)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5bcaf6a23afbc1cfd71ed07da02c228125321b5b" translate="yes" xml:space="preserve">
          <source>You can specify callbacks using &lt;code&gt;before_action&lt;/code&gt; and &lt;code&gt;after_action&lt;/code&gt; for configuring your messages. This may be useful, for example, when you want to add default inline attachments for all messages sent out by a certain mailer class:</source>
          <target state="translated">您可以使用 &lt;code&gt;before_action&lt;/code&gt; 和 &lt;code&gt;after_action&lt;/code&gt; 指定回调以配置消息。例如，当您想为某个邮件类发送的所有邮件添加默认的内联附件时，这可能会很有用：</target>
        </trans-unit>
        <trans-unit id="e806cbaacedba114a72a445096e96b77ef949ed8" translate="yes" xml:space="preserve">
          <source>You can specify certain conditions to be removed using the &lt;code&gt;unscope&lt;/code&gt; method. For example:</source>
          <target state="translated">您可以使用 &lt;code&gt;unscope&lt;/code&gt; 方法指定要删除的某些条件。例如：</target>
        </trans-unit>
        <trans-unit id="59c0ac45efbbf1b0f8c0da9b5ef679e2ba0548f9" translate="yes" xml:space="preserve">
          <source>You can specify conditions on the joined tables using the regular &lt;a href=&quot;#array-conditions&quot;&gt;Array&lt;/a&gt; and &lt;a href=&quot;#pure-string-conditions&quot;&gt;String&lt;/a&gt; conditions. &lt;a href=&quot;#hash-conditions&quot;&gt;Hash conditions&lt;/a&gt; provide a special syntax for specifying conditions for the joined tables:</source>
          <target state="translated">您可以使用常规&lt;a href=&quot;#array-conditions&quot;&gt;Array&lt;/a&gt;和&lt;a href=&quot;#pure-string-conditions&quot;&gt;String&lt;/a&gt;条件在联接表上指定条件。&lt;a href=&quot;#hash-conditions&quot;&gt;哈希条件&lt;/a&gt;提供了一种特殊的语法，用于为联接表指定条件：</target>
        </trans-unit>
        <trans-unit id="88d33a0609f88167523a6a33b06da97823fa41d4" translate="yes" xml:space="preserve">
          <source>You can specify static segments when creating a route by not prepending a colon to a fragment:</source>
          <target state="translated">创建路由时,可以不在片段前加冒号来指定静态片段。</target>
        </trans-unit>
        <trans-unit id="f15d1b1855ffa0c6966bcf19894ae36301761577" translate="yes" xml:space="preserve">
          <source>You can specify that the callback should only be fired by a certain action with the &lt;code&gt;:on&lt;/code&gt; option:</source>
          <target state="translated">您可以使用 &lt;code&gt;:on&lt;/code&gt; 选项指定仅应由某些操作触发回调：</target>
        </trans-unit>
        <trans-unit id="6a4540680900ac571fd54d2d8e86e62fd412ccb7" translate="yes" xml:space="preserve">
          <source>You can specify the environment in which the &lt;code&gt;console&lt;/code&gt; command should operate.</source>
          <target state="translated">您可以指定 &lt;code&gt;console&lt;/code&gt; 命令应在其中运行的环境。</target>
        </trans-unit>
        <trans-unit id="ec5a8b1037527e768af254a0bbc318037d780cad" translate="yes" xml:space="preserve">
          <source>You can specify the environment in which the &lt;code&gt;runner&lt;/code&gt; command should operate using the &lt;code&gt;-e&lt;/code&gt; switch.</source>
          <target state="translated">您可以使用 &lt;code&gt;-e&lt;/code&gt; 开关指定运行 &lt;code&gt;runner&lt;/code&gt; 命令的环境。</target>
        </trans-unit>
        <trans-unit id="4cfe03657048c4c53798d60b931e985e11e7db0f" translate="yes" xml:space="preserve">
          <source>You can specify unicode character routes directly. For example:</source>
          <target state="translated">你可以直接指定unicode字符路由。例如</target>
        </trans-unit>
        <trans-unit id="3fbfc58ea22f1b51e989f343fbb9846358bdb077" translate="yes" xml:space="preserve">
          <source>You can specify unicode character routes in your router:</source>
          <target state="translated">您可以在路由器中指定unicode字符路由。</target>
        </trans-unit>
        <trans-unit id="c8ae588112efd78728d88241062da3ad101454bc" translate="yes" xml:space="preserve">
          <source>You can specify what Rails should route &amp;ldquo;/&amp;rdquo; to with the root method:</source>
          <target state="translated">您可以使用root方法指定Rails应该将&amp;ldquo; /&amp;rdquo;路由到哪些位置：</target>
        </trans-unit>
        <trans-unit id="e1ec99165aaa3e87fbf3a2efd432cd5e9ec7bfc3" translate="yes" xml:space="preserve">
          <source>You can specify what Rails should route &lt;code&gt;'/'&lt;/code&gt; to with the &lt;code&gt;root&lt;/code&gt; method:</source>
          <target state="translated">您可以使用 &lt;code&gt;root&lt;/code&gt; 方法指定Rails应该将 &lt;code&gt;'/'&lt;/code&gt; 路由到哪些位置：</target>
        </trans-unit>
        <trans-unit id="ace1e16da8fc96507e6c7c2ce5c034d1e108f9ff" translate="yes" xml:space="preserve">
          <source>You can specify what serializer to use:</source>
          <target state="translated">你可以指定使用什么序列器。</target>
        </trans-unit>
        <trans-unit id="15ba2d0dfbb31d52a876b0a3ce6534ee37349fe5" translate="yes" xml:space="preserve">
          <source>You can stack callbacks on a single event by passing them as an array:</source>
          <target state="translated">你可以通过将它们作为数组传递给一个事件来堆栈回调。</target>
        </trans-unit>
        <trans-unit id="fdeef9de4abb52721ffdb5e496cf4bffe1d8a86b" translate="yes" xml:space="preserve">
          <source>You can start a transaction and acquire the lock in one go by calling &lt;code&gt;with_lock&lt;/code&gt; with a block. The block is called from within a transaction, the object is already locked. Example:</source>
          <target state="translated">您可以通过使用一个块调用 &lt;code&gt;with_lock&lt;/code&gt; 来开始事务并一次性获得锁。从事务内调用该块，该对象已被锁定。例：</target>
        </trans-unit>
        <trans-unit id="714eff2aba7a3cbcd4eebf099c5e1ddacfa36403" translate="yes" xml:space="preserve">
          <source>You can stop execution of the Ajax request by running &lt;code&gt;event.preventDefault()&lt;/code&gt; from the handlers methods &lt;code&gt;ajax:before&lt;/code&gt; or &lt;code&gt;ajax:beforeSend&lt;/code&gt;. The &lt;code&gt;ajax:before&lt;/code&gt; event can manipulate form data before serialization and the &lt;code&gt;ajax:beforeSend&lt;/code&gt; event is useful for adding custom request headers.</source>
          <target state="translated">您可以通过从处理程序方法 &lt;code&gt;ajax:before&lt;/code&gt; 或 &lt;code&gt;ajax:beforeSend&lt;/code&gt; 运行 &lt;code&gt;event.preventDefault()&lt;/code&gt; 来停止执行Ajax请求。在 &lt;code&gt;ajax:before&lt;/code&gt; 事件可以序列化和前操纵表单数据 &lt;code&gt;ajax:beforeSend&lt;/code&gt; 事件是用于添加自定义请求头是有用的。</target>
        </trans-unit>
        <trans-unit id="e9475189fe4eb6d7c6233e9a2c54ad961d01f869" translate="yes" xml:space="preserve">
          <source>You can stop streaming from all broadcasts by calling &lt;a href=&quot;streams#method-i-stop_all_streams&quot;&gt;stop_all_streams&lt;/a&gt;.</source>
          <target state="translated">您可以通过调用&lt;a href=&quot;streams#method-i-stop_all_streams&quot;&gt;stop_all_streams&lt;/a&gt;停止所有广播的流。</target>
        </trans-unit>
        <trans-unit id="009c66c2e63d092870be55804e256d4f71057540" translate="yes" xml:space="preserve">
          <source>You can subscribe to events by passing a &lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt; to match exact event names, or by passing a Regexp to match all events that match a pattern.</source>
          <target state="translated">您可以通过传递一个&lt;a href=&quot;../string&quot;&gt;字符串&lt;/a&gt;以匹配确切的事件名称，或通过传递一个Regexp来匹配所有与模式匹配的事件来订阅事件。</target>
        </trans-unit>
        <trans-unit id="2330d33c8675bb02a254f9f9256b7011077f3f6c" translate="yes" xml:space="preserve">
          <source>You can subscribe to some event temporarily while some block runs. For example, in</source>
          <target state="translated">你可以在一些区块运行的时候,临时订阅一些事件。例如,在</target>
        </trans-unit>
        <trans-unit id="5896c30f7b54fe0e6223ab5595f4513a75023113" translate="yes" xml:space="preserve">
          <source>You can supply a &lt;code&gt;:method&lt;/code&gt; argument to specify the HTTP verb:</source>
          <target state="translated">您可以提供 &lt;code&gt;:method&lt;/code&gt; 参数来指定HTTP动词：</target>
        </trans-unit>
        <trans-unit id="d1899832d2e363abf74d557905d3c84eb6238fb6" translate="yes" xml:space="preserve">
          <source>You can supply a hash of additional HTML options:</source>
          <target state="translated">你可以提供一个附加的HTML选项的哈希。</target>
        </trans-unit>
        <trans-unit id="b92a9881bee641204a8fc8bde604a58d5dab27bb" translate="yes" xml:space="preserve">
          <source>You can supply a path to the audio file if you like:</source>
          <target state="translated">如果你愿意,你可以提供一个音频文件的路径。</target>
        </trans-unit>
        <trans-unit id="3e474e4f202f734759b978f6a597bf647c5f9707" translate="yes" xml:space="preserve">
          <source>You can supply a path to the image if you like:</source>
          <target state="translated">如果你愿意,你可以提供一个图片的路径。</target>
        </trans-unit>
        <trans-unit id="ec0e58ffa2b119e9add9c2b363b0f0afa3aa0eed" translate="yes" xml:space="preserve">
          <source>You can supply alternate text for the image which will be used if the user has images turned off in their browser. If you do not specify an alt text explicitly, it defaults to the file name of the file, capitalized and with no extension. For example, these two image tags would return the same code:</source>
          <target state="translated">您可以为图片提供备选文本,如果用户在浏览器中关闭了图片,则将使用该文本。如果您没有明确指定alt文本,则默认为文件的文件名,大写,没有扩展名。例如,这两个图像标签将返回相同的代码。</target>
        </trans-unit>
        <trans-unit id="98c87fd33789880d7e5ee418344e66e3157b70b7" translate="yes" xml:space="preserve">
          <source>You can swap an existing middleware in the middleware stack using &lt;code&gt;config.middleware.swap&lt;/code&gt;.</source>
          <target state="translated">您可以使用 &lt;code&gt;config.middleware.swap&lt;/code&gt; 交换中间件堆栈中的现有中间件。</target>
        </trans-unit>
        <trans-unit id="6a48e8591a68e13d153bad44cee1eecddb8e6fb9" translate="yes" xml:space="preserve">
          <source>You can test whether an object is compliant with the Active Model API by including &lt;code&gt;ActiveModel::Lint::Tests&lt;/code&gt; in your TestCase. It will include tests that tell you whether your object is fully compliant, or if not, which aspects of the API are not implemented.</source>
          <target state="translated">您可以通过在TestCase中包含 &lt;code&gt;ActiveModel::Lint::Tests&lt;/code&gt; 来测试对象是否符合Active Model API 。它将包括一些测试，这些测试告诉您您的对象是否完全兼容，或者如果不完全兼容，则说明API的哪些方面未实现。</target>
        </trans-unit>
        <trans-unit id="c7b575b896cc8ed791f2f81d418e235669062ba3" translate="yes" xml:space="preserve">
          <source>You can then broadcast to this channel like this:</source>
          <target state="translated">你就可以像这样广播到这个频道。</target>
        </trans-unit>
        <trans-unit id="879372112d05cea9169e5cf4927caf264a53622b" translate="yes" xml:space="preserve">
          <source>You can then broadcast to this channel using:</source>
          <target state="translated">然后,你可以使用广播到这个频道。</target>
        </trans-unit>
        <trans-unit id="5cdbea70f948d4e44c7e77c5da35fac3e8693c29" translate="yes" xml:space="preserve">
          <source>You can then declare accessors to this store that are then accessible just like any other attribute of the model. This is very helpful for easily exposing store keys to a form or elsewhere that's already built around just accessing attributes on the model.</source>
          <target state="translated">然后,您可以声明这个存储的访问器,然后就像模型的任何其他属性一样可以访问。这对于轻松地将存储键暴露给表单或其他地方是非常有帮助的,因为这些表单或其他地方已经是围绕着访问模型上的属性而建立的。</target>
        </trans-unit>
        <trans-unit id="1e2dc3c2530dda67d0db2bba3f5237f51c9d7861" translate="yes" xml:space="preserve">
          <source>You can then return to the root directory (&lt;code&gt;cd ../..&lt;/code&gt;) of your plugin and rerun the tests using &lt;code&gt;bin/test&lt;/code&gt;.</source>
          <target state="translated">然后，您可以返回到插件的根目录（ &lt;code&gt;cd ../..&lt;/code&gt; ），然后使用 &lt;code&gt;bin/test&lt;/code&gt; 重新运行测试。</target>
        </trans-unit>
        <trans-unit id="bb4815c656782ce685fa1c86a475f13f0e962ea7" translate="yes" xml:space="preserve">
          <source>You can then style this div however you'd like. The default scaffold that Rails generates, for example, adds this CSS rule:</source>
          <target state="translated">然后,你可以按照自己的意愿来为这个div设置样式。例如,Rails生成的默认脚手架就添加了这个CSS规则。</target>
        </trans-unit>
        <trans-unit id="ec6de18837f51e7ea287678797758284552c5dac" translate="yes" xml:space="preserve">
          <source>You can then submit this token as a X-CSRF-Token in your header for your Ajax requst. You do not need to add a CSRF for GET requests, only non-GET requests.</source>
          <target state="translated">然后,你可以在你的Ajax请求的头中以X-CSRF-Token的形式提交这个token。你不需要为GET请求添加CSRF,只需要为非GET请求添加。</target>
        </trans-unit>
        <trans-unit id="8160daa1935c1b5b329719d72b9061fd72d6b3fc" translate="yes" xml:space="preserve">
          <source>You can then use &lt;code&gt;content_for :not_authorized&lt;/code&gt; anywhere in your templates.</source>
          <target state="translated">然后，您可以在模板中的任何位置使用 &lt;code&gt;content_for :not_authorized&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a9f067df383a397b4c7514225034e01e0cdb4e4a" translate="yes" xml:space="preserve">
          <source>You can then use that variable anywhere else. For example:</source>
          <target state="translated">然后你可以在其他任何地方使用该变量。例如:</target>
        </trans-unit>
        <trans-unit id="3e1ddb58f1493c93408ff47a7e0d565eb8688c5f" translate="yes" xml:space="preserve">
          <source>You can think of a layout as a method that is called with a block. If the user calls &lt;code&gt;yield :some_name&lt;/code&gt;, the block, by default, returns &lt;code&gt;content_for(:some_name)&lt;/code&gt;. If the user calls simply &lt;code&gt;yield&lt;/code&gt;, the default block returns &lt;code&gt;content_for(:layout)&lt;/code&gt;.</source>
          <target state="translated">您可以将布局视为使用块调用的方法。如果用户调用 &lt;code&gt;yield :some_name&lt;/code&gt; ，则默认情况下，该块返回 &lt;code&gt;content_for(:some_name)&lt;/code&gt; 。如果用户仅调用 &lt;code&gt;yield&lt;/code&gt; ，则默认块返回 &lt;code&gt;content_for(:layout)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a1e0385f81a5a70fd9b7c55a838342e613fee85b" translate="yes" xml:space="preserve">
          <source>You can think of a polymorphic &lt;code&gt;belongs_to&lt;/code&gt; declaration as setting up an interface that any other model can use. From an instance of the &lt;code&gt;Employee&lt;/code&gt; model, you can retrieve a collection of pictures: &lt;code&gt;@employee.pictures&lt;/code&gt;.</source>
          <target state="translated">您可以将多态的 &lt;code&gt;belongs_to&lt;/code&gt; 声明视为设置任何其他模型都可以使用的接口。从 &lt;code&gt;Employee&lt;/code&gt; 模型的实例中，您可以检索图片的集合： &lt;code&gt;@employee.pictures&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0bd5154ccb7a51928333adde50e4b7d52965d37b" translate="yes" xml:space="preserve">
          <source>You can think of each migration as being a new 'version' of the database. A schema starts off with nothing in it, and each migration modifies it to add or remove tables, columns, or entries. Active Record knows how to update your schema along this timeline, bringing it from whatever point it is in the history to the latest version. Active Record will also update your &lt;code&gt;db/schema.rb&lt;/code&gt; file to match the up-to-date structure of your database.</source>
          <target state="translated">您可以将每次迁移视为数据库的新&amp;ldquo;版本&amp;rdquo;。模式一开始就没有任何内容，每次迁移都会对其进行修改以添加或删除表，列或条目。Active Record知道如何沿着该时间轴更新您的架构，从而将其从历史记录中的任何点带到最新版本。Active Record还将更新您的 &lt;code&gt;db/schema.rb&lt;/code&gt; 文件，以匹配数据库的最新结构。</target>
        </trans-unit>
        <trans-unit id="a0d43d94c64948469d0ff03eb54aa07c63741808" translate="yes" xml:space="preserve">
          <source>You can turn off debug mode by updating &lt;code&gt;config/environments/development.rb&lt;/code&gt; to include:</source>
          <target state="translated">您可以通过将 &lt;code&gt;config/environments/development.rb&lt;/code&gt; 更新为以下内容来关闭调试模式：</target>
        </trans-unit>
        <trans-unit id="2d8cc246bbdfa5a6590a8aeae918997b5c16662b" translate="yes" xml:space="preserve">
          <source>You can turn off digests by updating &lt;code&gt;config/environments/development.rb&lt;/code&gt; to include:</source>
          <target state="translated">您可以通过将 &lt;code&gt;config/environments/development.rb&lt;/code&gt; 更新为以下内容来关闭摘要：</target>
        </trans-unit>
        <trans-unit id="a312de7208c1b49165434de1e750b28852355ad8" translate="yes" xml:space="preserve">
          <source>You can turn off the automatic detection of inverse associations by setting the &lt;code&gt;:inverse_of&lt;/code&gt; option to &lt;code&gt;false&lt;/code&gt; like so:</source>
          <target state="translated">您可以通过将 &lt;code&gt;:inverse_of&lt;/code&gt; 选项设置为 &lt;code&gt;false&lt;/code&gt; 来关闭逆关联的自动检测，如下所示：</target>
        </trans-unit>
        <trans-unit id="cd3ae34adb037477068eb8fbdb44e5d9dc2bdd59" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;ActionCable.createConsumer()&lt;/code&gt; to connect to the cable server if &lt;code&gt;action_cable_meta_tag&lt;/code&gt; is invoked in the layout. Otherwise, A path is specified as first argument to &lt;code&gt;createConsumer&lt;/code&gt; (e.g. &lt;code&gt;ActionCable.createConsumer(&quot;/websocket&quot;)&lt;/code&gt;).</source>
          <target state="translated">如果在布局中调用 &lt;code&gt;action_cable_meta_tag&lt;/code&gt; ,则可以使用 &lt;code&gt;ActionCable.createConsumer()&lt;/code&gt; 连接到电缆服务器。否则，将路径指定为 &lt;code&gt;createConsumer&lt;/code&gt; 的第一个参数（例如 &lt;code&gt;ActionCable.createConsumer(&quot;/websocket&quot;)&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="a3905705cb7c87e0a5c3b9cd71bccb434f575770" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;limit&lt;/code&gt; to specify the number of records to be retrieved, and use &lt;code&gt;offset&lt;/code&gt; to specify the number of records to skip before starting to return the records. For example</source>
          <target state="translated">您可以使用 &lt;code&gt;limit&lt;/code&gt; 指定要检索的记录数，并使用 &lt;code&gt;offset&lt;/code&gt; 指定开始返回记录之前要跳过的记录数。例如</target>
        </trans-unit>
        <trans-unit id="b17c15dced72e9af3c321ded6a737aadc9b5e211" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;local_assigns&lt;/code&gt; in the sub templates to access the local variables:</source>
          <target state="translated">您可以在子模板中使用 &lt;code&gt;local_assigns&lt;/code&gt; 来访问局部变量：</target>
        </trans-unit>
        <trans-unit id="0b3603c6fb4a409b36e5080315b5be84bce109a4" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;redirect_back&lt;/code&gt; to return the user to the page they just came from. This location is pulled from the &lt;code&gt;HTTP_REFERER&lt;/code&gt; header which is not guaranteed to be set by the browser, so you must provide the &lt;code&gt;fallback_location&lt;/code&gt; to use in this case.</source>
          <target state="translated">您可以使用 &lt;code&gt;redirect_back&lt;/code&gt; 将用户返回到他们刚来自的页面。此位置是从 &lt;code&gt;HTTP_REFERER&lt;/code&gt; 标头中拉出的，浏览器不保证可以设置此标头，因此您必须提供 &lt;code&gt;fallback_location&lt;/code&gt; 以在这种情况下使用。</target>
        </trans-unit>
        <trans-unit id="aa123839737dcc8f05d94dc5cd4679b2d6a447ab" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;uuid&lt;/code&gt; type to define references in migrations:</source>
          <target state="translated">您可以使用 &lt;code&gt;uuid&lt;/code&gt; 类型在迁移中定义引用：</target>
        </trans-unit>
        <trans-unit id="deb85c11277f01b9c34fc9a09f00e0908ad4a66a" translate="yes" xml:space="preserve">
          <source>You can use Active Record's ability to rollback migrations using the &lt;code&gt;revert&lt;/code&gt; method:</source>
          <target state="translated">您可以使用Active Record的功能通过 &lt;code&gt;revert&lt;/code&gt; 方法来回滚迁移：</target>
        </trans-unit>
        <trans-unit id="dd72cb8386a48e87e825c83a5af2e145b89fbc78" translate="yes" xml:space="preserve">
          <source>You can use Hashes and Arrays of values as cache keys.</source>
          <target state="translated">你可以使用哈希值和数组值作为缓存键。</target>
        </trans-unit>
        <trans-unit id="33614f3da0a4e53131c3990a3d782f79ba2d87f7" translate="yes" xml:space="preserve">
          <source>You can use a block as well if your link target is hard to fit into the name parameter. ERB example:</source>
          <target state="translated">如果你的链接目标很难放入名称参数中,你也可以使用一个块。ERB的例子。</target>
        </trans-unit>
        <trans-unit id="2f9ac0993a207f9eef7a1bc6e0d33a7e63baf46b" translate="yes" xml:space="preserve">
          <source>You can use a shorthand syntax for rendering collections. Assuming &lt;code&gt;@products&lt;/code&gt; is a collection of &lt;code&gt;Product&lt;/code&gt; instances, you can simply write the following to produce the same result:</source>
          <target state="translated">您可以使用简写语法来渲染集合。假设 &lt;code&gt;@products&lt;/code&gt; 是 &lt;code&gt;Product&lt;/code&gt; 实例的集合，则只需编写以下代码即可产生相同的结果：</target>
        </trans-unit>
        <trans-unit id="65df486ec113987ad531024fd53520bd41fb8f7a" translate="yes" xml:space="preserve">
          <source>You can use a symbol to defer the choice of layout until a request is processed:</source>
          <target state="translated">您可以使用一个符号来推迟布局的选择,直到请求被处理。</target>
        </trans-unit>
        <trans-unit id="ef2eed113a1015bab2583c75a5e401c068b65203" translate="yes" xml:space="preserve">
          <source>You can use any of the standard &lt;a href=&quot;active_record_querying&quot;&gt;querying methods&lt;/a&gt; inside the scope block. The following ones are discussed below:</source>
          <target state="translated">您可以在scope块内使用任何标准&lt;a href=&quot;active_record_querying&quot;&gt;查询方法&lt;/a&gt;。下面讨论了以下内容：</target>
        </trans-unit>
        <trans-unit id="c8dc4e44f22551db63f254b1147f12d264967e93" translate="yes" xml:space="preserve">
          <source>You can use strings in order to customize your joins:</source>
          <target state="translated">你可以使用字符串来定制你的连接。</target>
        </trans-unit>
        <trans-unit id="926f3672f793ba1729bda3182d9656dd588acb1b" translate="yes" xml:space="preserve">
          <source>You can use subfolders to organize your initializers if you like, because Rails will look into the whole file hierarchy from the initializers folder on down.</source>
          <target state="translated">如果你愿意,你可以使用子文件夹来组织你的初始化器,因为Rails会从初始化器文件夹往下查看整个文件层次结构。</target>
        </trans-unit>
        <trans-unit id="325c49ee88395253ef3dfd761ea9d6beba373536" translate="yes" xml:space="preserve">
          <source>You can use symbols or strings for the attribute names.</source>
          <target state="translated">你可以使用符号或字符串作为属性名。</target>
        </trans-unit>
        <trans-unit id="0457253b76c8880b05f7d7998c8a4f8100fe166e" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;:_prefix&lt;/code&gt; or &lt;code&gt;:_suffix&lt;/code&gt; options when you need to define multiple enums with same values. If the passed value is &lt;code&gt;true&lt;/code&gt;, the methods are prefixed/suffixed with the name of the enum. It is also possible to supply a custom value:</source>
          <target state="translated">当需要使用相同的值定义多个枚举时，可以使用 &lt;code&gt;:_prefix&lt;/code&gt; 或 &lt;code&gt;:_suffix&lt;/code&gt; 选项。如果传递的值为 &lt;code&gt;true&lt;/code&gt; ，则该方法将以枚举的名称作为前缀/后缀。也可以提供自定义值：</target>
        </trans-unit>
        <trans-unit id="26727172aa92cce8412e9fe0802d6ad37e164927" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;:as&lt;/code&gt; option to prefix the named route helpers that Rails generates for a route. Use this option to prevent name collisions between routes using a path scope. For example:</source>
          <target state="translated">您可以使用 &lt;code&gt;:as&lt;/code&gt; 选项为Rails为路由生成的命名路由帮助程序添加前缀。使用此选项可以防止使用路径范围的路由之间发生名称冲突。例如：</target>
        </trans-unit>
        <trans-unit id="9a11f9f8cf2416f243e8db24e44e6d138b71297e" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;:constraints&lt;/code&gt; option to enforce a format for a dynamic segment:</source>
          <target state="translated">您可以使用 &lt;code&gt;:constraints&lt;/code&gt; 选项为动态段强制采用一种格式：</target>
        </trans-unit>
        <trans-unit id="345a6e11729dcf24593b45e991a36ccbd0ea3b58" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;:constraints&lt;/code&gt; option to specify a required format on the implicit &lt;code&gt;id&lt;/code&gt;. For example:</source>
          <target state="translated">您可以使用 &lt;code&gt;:constraints&lt;/code&gt; 选项在隐式 &lt;code&gt;id&lt;/code&gt; 上指定所需的格式。例如：</target>
        </trans-unit>
        <trans-unit id="31cdda9ee709b09f2a821a4da769bd06c215ed3a" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;:layout&lt;/code&gt; option to tell Rails to use a specific file as the layout for the current action:</source>
          <target state="translated">您可以使用 &lt;code&gt;:layout&lt;/code&gt; 选项告诉Rails使用特定文件作为当前操作的布局：</target>
        </trans-unit>
        <trans-unit id="54192e3538ad8ec81011221d0844600ed07bcecd" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;:location&lt;/code&gt; option to set the HTTP &lt;code&gt;Location&lt;/code&gt; header:</source>
          <target state="translated">您可以使用 &lt;code&gt;:location&lt;/code&gt; 选项设置HTTP &lt;code&gt;Location&lt;/code&gt; 标头：</target>
        </trans-unit>
        <trans-unit id="08debfd2f4f788907c2b806b7eb333b6a2acd893" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;app:template&lt;/code&gt; rails command to apply templates to an existing Rails application. The location of the template needs to be passed in via the LOCATION environment variable. Again, this can either be path to a file or a URL.</source>
          <target state="translated">您可以使用 &lt;code&gt;app:template&lt;/code&gt; rails命令将模板应用于现有的Rails应用程序。模板的位置需要通过LOCATION环境变量传递。同样，这可以是文件路径或URL。</target>
        </trans-unit>
        <trans-unit id="e3c62cef27759a9a3affddb3775aa0b23bae7e86" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;byebug&lt;/code&gt; gem to set breakpoints and step through live code in Rails. To install it, just run:</source>
          <target state="translated">您可以使用 &lt;code&gt;byebug&lt;/code&gt; gem设置断点并逐步在Rails中逐步进行实时代码。要安装它，只需运行：</target>
        </trans-unit>
        <trans-unit id="c17ef4573596abd3f5ae7dc7d061b53b7ef87b72" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;includes&lt;/code&gt; method to specify second-order associations that should be eager-loaded when this association is used.</source>
          <target state="translated">您可以使用 &lt;code&gt;includes&lt;/code&gt; 方法指定使用该关联时应立即加载的二阶关联。</target>
        </trans-unit>
        <trans-unit id="88bc5297f0fca7e8110ddaeb4fe5f54f5fdf69df" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;includes&lt;/code&gt; method to specify second-order associations that should be eager-loaded when this association is used. For example, consider these models:</source>
          <target state="translated">您可以使用 &lt;code&gt;includes&lt;/code&gt; 方法指定使用该关联时应立即加载的二阶关联。例如，考虑以下模型：</target>
        </trans-unit>
        <trans-unit id="395939bc64ca2f6c173097feb0b20408aa800e47" translate="yes" xml:space="preserve">
          <source>You can use the methods &lt;code&gt;Model.model_name.human&lt;/code&gt; and &lt;code&gt;Model.human_attribute_name(attribute)&lt;/code&gt; to transparently look up translations for your model and attribute names.</source>
          <target state="translated">您可以使用 &lt;code&gt;Model.model_name.human&lt;/code&gt; 和 &lt;code&gt;Model.human_attribute_name(attribute)&lt;/code&gt; 方法来透明地查找模型和属性名称的转换。</target>
        </trans-unit>
        <trans-unit id="477bad5f77e1edb8ece3031f817af82871b3fc4e" translate="yes" xml:space="preserve">
          <source>You can use the same string replacement techniques as you can with &lt;code&gt;ActiveRecord::QueryMethods#where&lt;/code&gt;:</source>
          <target state="translated">您可以使用与 &lt;code&gt;ActiveRecord::QueryMethods#where&lt;/code&gt; 相同的字符串替换技术：</target>
        </trans-unit>
        <trans-unit id="6ae6d7b66e316f3e6f3ed02b6e27e10217ad9cf0" translate="yes" xml:space="preserve">
          <source>You can use the same technique to localize the rescue files in your public directory. For example, setting &lt;code&gt;I18n.locale = :de&lt;/code&gt; and creating &lt;code&gt;public/500.de.html&lt;/code&gt; and &lt;code&gt;public/404.de.html&lt;/code&gt; would allow you to have localized rescue pages.</source>
          <target state="translated">您可以使用相同的技术在公共目录中本地救援文件。例如，设置 &lt;code&gt;I18n.locale = :de&lt;/code&gt; 并创建 &lt;code&gt;public/500.de.html&lt;/code&gt; 和 &lt;code&gt;public/404.de.html&lt;/code&gt; 将允许您具有本地化的救援页面。</target>
        </trans-unit>
        <trans-unit id="58f140165c81ad318674b38a86a40c849f58b0e8" translate="yes" xml:space="preserve">
          <source>You can use the signed ID of a blob to refer to it on the client side without fear of tampering. This is particularly helpful for direct uploads where the client-side needs to refer to the blob that was created ahead of the upload itself on form submission.</source>
          <target state="translated">你可以使用blob的签名ID在客户端引用它而不用担心被篡改。这对直接上传特别有帮助,因为客户端需要在表单提交时引用上传本身之前创建的blob。</target>
        </trans-unit>
        <trans-unit id="c2311419f79428af7da0c7e57a0d9e03c88ca5a8" translate="yes" xml:space="preserve">
          <source>You can use these events to show the progress of an upload.</source>
          <target state="translated">您可以使用这些事件来显示上传的进度。</target>
        </trans-unit>
        <trans-unit id="ca75ebbd6b977452e36990048ee415d2602887d6" translate="yes" xml:space="preserve">
          <source>You can use these tags in layouts or other views, although the &lt;code&gt;auto_discovery_link_tag&lt;/code&gt;, &lt;code&gt;javascript_include_tag&lt;/code&gt;, and &lt;code&gt;stylesheet_link_tag&lt;/code&gt;, are most commonly used in the &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; section of a layout.</source>
          <target state="translated">您可以在布局或其他视图中使用这些标签，尽管 &lt;code&gt;auto_discovery_link_tag&lt;/code&gt; ， &lt;code&gt;javascript_include_tag&lt;/code&gt; 和 &lt;code&gt;stylesheet_link_tag&lt;/code&gt; 在布局的 &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; 部分中最常用。</target>
        </trans-unit>
        <trans-unit id="111b92c84fa0ff04eb963111e02002c20c797f77" translate="yes" xml:space="preserve">
          <source>You can use this method when you have an HTTP response that never changes, and the browser and proxies should cache it indefinitely.</source>
          <target state="translated">当你有一个永远不会改变的HTTP响应时,你可以使用这个方法,浏览器和代理应该无限期地缓存它。</target>
        </trans-unit>
        <trans-unit id="ec396b1d9adfd1e7553de98afc968a971fbb0c60" translate="yes" xml:space="preserve">
          <source>You can use this shortcut in a controller, instead of the previous example:</source>
          <target state="translated">你可以在控制器中使用这个快捷方式,而不是前面的例子。</target>
        </trans-unit>
        <trans-unit id="509d0695e099b9cc232ce1c5a11236c795d126fe" translate="yes" xml:space="preserve">
          <source>You can view the search path by inspecting &lt;code&gt;Rails.application.config.assets.paths&lt;/code&gt; in the Rails console.</source>
          <target state="translated">您可以通过在Rails控制台中检查 &lt;code&gt;Rails.application.config.assets.paths&lt;/code&gt; 来查看搜索路径。</target>
        </trans-unit>
        <trans-unit id="fbce7abba2dc88c127ff113280159282f06c5891" translate="yes" xml:space="preserve">
          <source>You cannot override defaults via query parameters - this is for security reasons. The only defaults that can be overridden are dynamic segments via substitution in the URL path.</source>
          <target state="translated">您不能通过查询参数覆盖默认值-这是出于安全考虑。唯一可以覆盖的默认值是通过替换URL路径中的动态段。</target>
        </trans-unit>
        <trans-unit id="3fa4d915c6e34684c72dcea14b4da3ce8a251e52" translate="yes" xml:space="preserve">
          <source>You could also turn it on per controller by setting the format array to a non-empty array:</source>
          <target state="translated">你也可以通过将格式数组设置为非空数组来开启每个控制器。</target>
        </trans-unit>
        <trans-unit id="8fd3640ccf69ffc48e01247d64334c8a82ff61b8" translate="yes" xml:space="preserve">
          <source>You could also write the above &lt;code&gt;change_column_default&lt;/code&gt; migration as &lt;code&gt;change_column_default :products, :approved, false&lt;/code&gt;, but unlike the previous example, this would make your migration irreversible.</source>
          <target state="translated">您还可以将上述 &lt;code&gt;change_column_default&lt;/code&gt; 迁移写为 &lt;code&gt;change_column_default :products, :approved, false&lt;/code&gt; ，但是与前面的示例不同，这将使您的迁移不可逆。</target>
        </trans-unit>
        <trans-unit id="a3137142a630c9d51c495a82436b906489e50e79" translate="yes" xml:space="preserve">
          <source>You could specify &lt;code&gt;ASC&lt;/code&gt; or &lt;code&gt;DESC&lt;/code&gt; as well:</source>
          <target state="translated">您也可以指定 &lt;code&gt;ASC&lt;/code&gt; 或 &lt;code&gt;DESC&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="7a7a107a2ca55ada5d3da3e2756b26f816ed9752" translate="yes" xml:space="preserve">
          <source>You could use a &lt;code&gt;before_action&lt;/code&gt; to populate the mail object with defaults, delivery_method_options or insert default headers and attachments.</source>
          <target state="translated">您可以使用 &lt;code&gt;before_action&lt;/code&gt; 用默认值，delivery_method_options填充邮件对象或插入默认的标题和附件。</target>
        </trans-unit>
        <trans-unit id="12779942248601c1723a9daea3d90fc7ac0bdae8" translate="yes" xml:space="preserve">
          <source>You could use an &lt;code&gt;after_action&lt;/code&gt; to do similar setup as a &lt;code&gt;before_action&lt;/code&gt; but using instance variables set in your mailer action.</source>
          <target state="translated">你可以使用一个 &lt;code&gt;after_action&lt;/code&gt; 做类似的设置为 &lt;code&gt;before_action&lt;/code&gt; 但是使用在您的邮件操作设置实例变量。</target>
        </trans-unit>
        <trans-unit id="03c97303fc49a624b742e912bc84625c24767088" translate="yes" xml:space="preserve">
          <source>You define association callbacks by adding options to the association declaration. For example:</source>
          <target state="translated">您可以通过向关联声明添加选项来定义关联回调。例如:</target>
        </trans-unit>
        <trans-unit id="995bbbfd5324308e8d61a316b152e158c82b3be8" translate="yes" xml:space="preserve">
          <source>You do not configure Zeitwerk manually in a Rails application. Rather, you configure the application using the portable configuration points explained in this guide, and Rails translates that to Zeitwerk on your behalf.</source>
          <target state="translated">您不能在 Rails 应用程序中手动配置 Zeitwerk。相反,您使用本指南中解释的可移植配置点来配置应用程序,Rails 会代表您将其转换为 Zeitwerk。</target>
        </trans-unit>
        <trans-unit id="fc096f65f5dc0c4fb2ae13070fabb6679f3ff367" translate="yes" xml:space="preserve">
          <source>You don't have to call this method to access the attachment's methods as they are all available at the model level.</source>
          <target state="translated">你不需要调用这个方法来访问附件的方法,因为它们都在模型级别上可用。</target>
        </trans-unit>
        <trans-unit id="a731437b0289a78370d177c37028cc9f1d617bf8" translate="yes" xml:space="preserve">
          <source>You don't have to rely on the automated rendering. For example, actions that could result in the rendering of different templates will use the manual rendering methods:</source>
          <target state="translated">你不必依赖自动渲染。例如,可能导致不同模板渲染的操作将使用手动渲染方法。</target>
        </trans-unit>
        <trans-unit id="1b6095ab5d2243a43ea312660511b2b8ed43e290" translate="yes" xml:space="preserve">
          <source>You don't have to update the database configurations manually. If you look at the options of the application generator, you will see that one of the options is named &lt;code&gt;--database&lt;/code&gt;. This option allows you to choose an adapter from a list of the most used relational databases. You can even run the generator repeatedly: &lt;code&gt;cd .. &amp;amp;&amp;amp; rails new blog --database=mysql&lt;/code&gt;. When you confirm the overwriting of the &lt;code&gt;config/database.yml&lt;/code&gt; file, your application will be configured for MySQL instead of SQLite. Detailed examples of the common database connections are below.</source>
          <target state="translated">您不必手动更新数据库配置。如果查看应用程序生成器的选项，将会看到其中一个选项名为 &lt;code&gt;--database&lt;/code&gt; 。此选项使您可以从最常用的关系数据库列表中选择适配器。您甚至可以重复运行生成器： &lt;code&gt;cd .. &amp;amp;&amp;amp; rails new blog --database=mysql&lt;/code&gt; 。当您确认覆盖 &lt;code&gt;config/database.yml&lt;/code&gt; 文件时，将为MySQL（而非SQLite）配置应用程序。常见数据库连接的详细示例如下。</target>
        </trans-unit>
        <trans-unit id="4c503fae8979882e8f434075e9417d6a02f05bdc" translate="yes" xml:space="preserve">
          <source>You don't need to call &lt;code&gt;to_json&lt;/code&gt; on the object that you want to render. If you use the &lt;code&gt;:json&lt;/code&gt; option, &lt;code&gt;render&lt;/code&gt; will automatically call &lt;code&gt;to_json&lt;/code&gt; for you.</source>
          <target state="translated">您无需在要呈现的对象上调用 &lt;code&gt;to_json&lt;/code&gt; 。如果使用 &lt;code&gt;:json&lt;/code&gt; 选项， &lt;code&gt;render&lt;/code&gt; 将自动为您调用 &lt;code&gt;to_json&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1bb9d385e3f726a4bb6b3764ad9ab407a0e7c51d" translate="yes" xml:space="preserve">
          <source>You don't need to call &lt;code&gt;to_xml&lt;/code&gt; on the object that you want to render. If you use the &lt;code&gt;:xml&lt;/code&gt; option, &lt;code&gt;render&lt;/code&gt; will automatically call &lt;code&gt;to_xml&lt;/code&gt; for you.</source>
          <target state="translated">您无需在要呈现的对象上调用 &lt;code&gt;to_xml&lt;/code&gt; 。如果使用 &lt;code&gt;:xml&lt;/code&gt; 选项， &lt;code&gt;render&lt;/code&gt; 将自动为您调用 &lt;code&gt;to_xml&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="69b3e4cf1cbcff915677c14e1e9a94eecdaca575" translate="yes" xml:space="preserve">
          <source>You don't need to use these tags for regular forms as they generate their own hidden fields.</source>
          <target state="translated">你不需要在常规表单中使用这些标签,因为它们会生成自己的隐藏字段。</target>
        </trans-unit>
        <trans-unit id="40ceb12d19b0ef8aa034c118f9fa8ef660e71287" translate="yes" xml:space="preserve">
          <source>You get a concrete renderer class by invoking ActionController::Base#renderer. For example:</source>
          <target state="translated">你可以通过调用ActionController::Base#renderer得到一个具体的渲染器类。例如</target>
        </trans-unit>
        <trans-unit id="cfdb48e445061536def73272bf1dfc6ec8aa0343" translate="yes" xml:space="preserve">
          <source>You may also find incomplete content or stuff that is not up to date. Please do add any missing documentation for master. Make sure to check &lt;a href=&quot;https://edgeguides.rubyonrails.org&quot;&gt;Edge Guides&lt;/a&gt; first to verify if the issues are already fixed or not on the master branch. Check the Ruby on Rails Guides Guidelines for style and conventions.</source>
          <target state="translated">您可能还会发现内容不完整或不是最新的内容。请为母版添加任何缺少的文档。确保首先检查&lt;a href=&quot;https://edgeguides.rubyonrails.org&quot;&gt;Edge Guides&lt;/a&gt;以验证问题是否已在master分支上解决。查看Ruby on Rails指南的样式和约定。</target>
        </trans-unit>
        <trans-unit id="0ec98b7952e381ed67bd01ebe0481a6cab80bc92" translate="yes" xml:space="preserve">
          <source>You may also pass a custom stored procedure that returns a UUID or use a different UUID generation function from another library.</source>
          <target state="translated">您也可以传递一个返回UUID的自定义存储过程,或者使用其他库的不同UUID生成函数。</target>
        </trans-unit>
        <trans-unit id="fd6b10d206877ecd52ec3c3aec00575a8945a703" translate="yes" xml:space="preserve">
          <source>You may also pass block with only one argument, it will yield an event object to the block:</source>
          <target state="translated">你也可以只传递一个参数的block,它将产生一个事件对象给block。</target>
        </trans-unit>
        <trans-unit id="37a1b72ec655d357add3217cdd9f81a1320b1d22" translate="yes" xml:space="preserve">
          <source>You may also pass it multiple classes, like so:</source>
          <target state="translated">你也可以通过多类,像这样。</target>
        </trans-unit>
        <trans-unit id="57279de07432bf9089416bb8b5400a3b9da15f83" translate="yes" xml:space="preserve">
          <source>You may also set a &lt;code&gt;:reject_if&lt;/code&gt; proc to silently ignore any new record hashes if they fail to pass your criteria. For example, the previous example could be rewritten as:</source>
          <target state="translated">您还可以设置 &lt;code&gt;:reject_if&lt;/code&gt; proc以静默忽略任何新的记录哈希，如果它们无法通过您的条件。例如，前面的示例可以重写为：</target>
        </trans-unit>
        <trans-unit id="90de31e55648d20aa8c98b8f20b0cc023ece55c0" translate="yes" xml:space="preserve">
          <source>You may also set this option to &lt;code&gt;:hybrid&lt;/code&gt;, in which case Rails would transparently deserialize existing (&lt;code&gt;Marshal&lt;/code&gt;-serialized) cookies on read and re-write them in the &lt;code&gt;JSON&lt;/code&gt; format. This is useful for migrating existing applications to the &lt;code&gt;:json&lt;/code&gt; serializer.</source>
          <target state="translated">您也可以将此选项设置为 &lt;code&gt;:hybrid&lt;/code&gt; ，在这种情况下，Rails会在读取时透明地反序列化现有的（经过 &lt;code&gt;Marshal&lt;/code&gt; 序列化的）cookie，并以 &lt;code&gt;JSON&lt;/code&gt; 格式重写它们。这对于将现有应用程序迁移到 &lt;code&gt;:json&lt;/code&gt; 序列化程序很有用。</target>
        </trans-unit>
        <trans-unit id="33259156b80b5bfdbd8cd9598a9d79db22e6f180" translate="yes" xml:space="preserve">
          <source>You may also specify additional options via the &lt;code&gt;options&lt;/code&gt; argument. Setting &lt;code&gt;force: true&lt;/code&gt; forces a cache &amp;ldquo;miss,&amp;rdquo; meaning we treat the cache value as missing even if it's present. Passing a block is required when &lt;code&gt;force&lt;/code&gt; is true so this always results in a cache write.</source>
          <target state="translated">您也可以通过 &lt;code&gt;options&lt;/code&gt; 参数指定其他选项。设置 &lt;code&gt;force: true&lt;/code&gt; 强制缓存&amp;ldquo;未命中&amp;rdquo;，这意味着即使存在缓存值，我们也会将其视为丢失。当 &lt;code&gt;force&lt;/code&gt; 为true 时，需要传递一个块，因此，这始终会导致高速缓存写入。</target>
        </trans-unit>
        <trans-unit id="c7634fe68b2ce3c8af0f7a1853cbcf931466aa1d" translate="yes" xml:space="preserve">
          <source>You may also subscribe to events matching a regular expression. This enables you to subscribe to multiple events at once. Here's you could subscribe to everything from &lt;code&gt;ActionController&lt;/code&gt;.</source>
          <target state="translated">您也可以订阅与正则表达式匹配的事件。这使您可以一次订阅多个事件。您可以在这里订阅 &lt;code&gt;ActionController&lt;/code&gt; 的所有内容。</target>
        </trans-unit>
        <trans-unit id="19d40b47e9310fc15eef2212fd3d038234b38408" translate="yes" xml:space="preserve">
          <source>You may also want to configure other parameters like &lt;code&gt;:tcp_nodelay&lt;/code&gt;. Please check its documentation for more information: &lt;a href=&quot;https://bogomips.org/unicorn/Unicorn/Configurator.html#method-i-listen&quot;&gt;bogomips.org/unicorn/Unicorn/Configurator.html#method-i-listen&lt;/a&gt;</source>
          <target state="translated">您可能还需要配置其他参数，例如 &lt;code&gt;:tcp_nodelay&lt;/code&gt; 。请查看其文档以获取更多信息：&lt;a href=&quot;https://bogomips.org/unicorn/Unicorn/Configurator.html#method-i-listen&quot;&gt;bogomips.org/unicorn/Unicorn/Configurator.html#method-i-listen&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d6bdc4407ccf427d5692074c5444adce38d43ee8" translate="yes" xml:space="preserve">
          <source>You may also want to use a separate service definition for the test environment so your tests don't delete the files you create during development.</source>
          <target state="translated">你可能还想为测试环境使用一个单独的服务定义,这样你的测试就不会删除你在开发过程中创建的文件。</target>
        </trans-unit>
        <trans-unit id="2b46d7c554f865300880b6c74b1090b6ea8cb5ba" translate="yes" xml:space="preserve">
          <source>You may be deploying to more than one server, and want to avoid duplication of work.</source>
          <target state="translated">您可能会部署到多台服务器上,并希望避免重复工作。</target>
        </trans-unit>
        <trans-unit id="344a01a20857b91311da97b5df493d01253f40da" translate="yes" xml:space="preserve">
          <source>You may be doing frequent deploys that do not include asset changes.</source>
          <target state="translated">您可能会进行频繁的部署,但不包括资产变更。</target>
        </trans-unit>
        <trans-unit id="e26e2c47afa15fcf1fbbd3284f1f17989c80bd06" translate="yes" xml:space="preserve">
          <source>You may be satisfied with this. It does impact the readability of URLs, though, when the locale &quot;hangs&quot; at the end of every URL in your application. Moreover, from the architectural standpoint, locale is usually hierarchically above the other parts of the application domain: and URLs should reflect this.</source>
          <target state="translated">你可能会对此感到满意。不过,当locale &quot;挂 &quot;在你的应用程序中的每个URL的最后时,它确实会影响URL的可读性。此外,从架构的角度来看,locale通常在层次上高于应用域的其他部分:而URL应该反映这一点。</target>
        </trans-unit>
        <trans-unit id="a6b00738ff784ab1cc863581f92d467d672ab61f" translate="yes" xml:space="preserve">
          <source>You may be tempted to store the chosen locale in a &lt;em&gt;session&lt;/em&gt; or a &lt;em&gt;cookie&lt;/em&gt;. However, &lt;strong&gt;do not do this&lt;/strong&gt;. The locale should be transparent and a part of the URL. This way you won't break people's basic assumptions about the web itself: if you send a URL to a friend, they should see the same page and content as you. A fancy word for this would be that you're being &lt;a href=&quot;https://en.wikipedia.org/wiki/Representational_State_Transfer&quot;&gt;&lt;em&gt;RESTful&lt;/em&gt;&lt;/a&gt;. Read more about the RESTful approach in &lt;a href=&quot;https://www.infoq.com/articles/rest-introduction&quot;&gt;Stefan Tilkov's articles&lt;/a&gt;. Sometimes there are exceptions to this rule and those are discussed below.</source>
          <target state="translated">您可能会想将选定的语言环境存储在&lt;em&gt;会话&lt;/em&gt;或&lt;em&gt;cookie中&lt;/em&gt;。但是，&lt;strong&gt;请不要这样做&lt;/strong&gt;。语言环境应该是透明的，并且是URL的一部分。这样，您就不会破坏人们对网络本身的基本假设：如果将URL发送给朋友，他们应该会看到与您相同的页面和内容。一个恰当的说法是你是&lt;a href=&quot;https://en.wikipedia.org/wiki/Representational_State_Transfer&quot;&gt;&lt;em&gt;RESTful的&lt;/em&gt;&lt;/a&gt;。在&lt;a href=&quot;https://www.infoq.com/articles/rest-introduction&quot;&gt;Stefan Tilkov的文章中&lt;/a&gt;阅读有关RESTful方法的更多信息。有时，此规则有例外，下面将讨论这些例外。</target>
        </trans-unit>
        <trans-unit id="5909507516d8b5fe0c8badd73c539e9e4c20846c" translate="yes" xml:space="preserve">
          <source>You may declare that the parameter should be an array of permitted scalars by mapping it to an empty array:</source>
          <target state="translated">你可以通过将参数映射到一个空数组来声明参数应该是一个允许的标量数组。</target>
        </trans-unit>
        <trans-unit id="cecb87e616c0c692159c215a7d7555476f2e2e9e" translate="yes" xml:space="preserve">
          <source>You may find it convenient to eagerly require helpers in &lt;code&gt;test_helper.rb&lt;/code&gt; so your test files have implicit access to them. This can be accomplished using globbing, as follows</source>
          <target state="translated">您可能会发现在 &lt;code&gt;test_helper.rb&lt;/code&gt; 中急切需要帮助者很方便，因此您的测试文件可以隐式访问它们。可以使用globbing完成此操作，如下所示</target>
        </trans-unit>
        <trans-unit id="23c2dcbe205807d2f34f44d29df3526e483934ed" translate="yes" xml:space="preserve">
          <source>You may find that your application requires a layout that differs slightly from your regular application layout to support one particular controller. Rather than repeating the main layout and editing it, you can accomplish this by using nested layouts (sometimes called sub-templates). Here's an example:</source>
          <target state="translated">您可能会发现,您的应用程序需要一个与常规应用程序布局略有不同的布局来支持一个特定的控制器。您可以通过使用嵌套布局(有时称为子模板)来实现这一点,而不是重复主布局并编辑它。下面是一个例子。</target>
        </trans-unit>
        <trans-unit id="4682b32de0f1abe8e092a7fcb6ef33d47493cf57" translate="yes" xml:space="preserve">
          <source>You may give an optional logger level (&lt;code&gt;:debug&lt;/code&gt;, &lt;code&gt;:info&lt;/code&gt;, &lt;code&gt;:warn&lt;/code&gt;, &lt;code&gt;:error&lt;/code&gt;) as the &lt;code&gt;:level&lt;/code&gt; option. The default logger level value is &lt;code&gt;:info&lt;/code&gt;.</source>
          <target state="translated">您可以指定一个可选的记录器级别（ &lt;code&gt;:debug&lt;/code&gt; ， &lt;code&gt;:info&lt;/code&gt; ， &lt;code&gt;:warn&lt;/code&gt; ， &lt;code&gt;:error&lt;/code&gt; ）作为 &lt;code&gt;:level&lt;/code&gt; 选项。记录器级别的默认值为 &lt;code&gt;:info&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="38d1eac50e4d68925ffaa1b205514b0d70780a6a" translate="yes" xml:space="preserve">
          <source>You may not have write access to your production file system.</source>
          <target state="translated">您可能没有对生产文件系统的写权限。</target>
        </trans-unit>
        <trans-unit id="c56380de0b4a7348b159edec7f5c43ef69af5ebb" translate="yes" xml:space="preserve">
          <source>You may notice in the above code that we're using &lt;code&gt;render xml: @users&lt;/code&gt;, not &lt;code&gt;render xml: @users.to_xml&lt;/code&gt;. If the object is not a String, then Rails will automatically invoke &lt;code&gt;to_xml&lt;/code&gt; for us.</source>
          <target state="translated">您可能在上面的代码中注意到我们正在使用 &lt;code&gt;render xml: @users&lt;/code&gt; ，而不是 &lt;code&gt;render xml: @users.to_xml&lt;/code&gt; 。如果对象不是String，那么Rails将自动为我们调用 &lt;code&gt;to_xml&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="88bce85959e2e42ccb7eadfc436b236fb6ccec32" translate="yes" xml:space="preserve">
          <source>You may prefer just to load all core extensions, there is a file for that:</source>
          <target state="translated">你可能更喜欢只加载所有的核心扩展名,有一个文件。</target>
        </trans-unit>
        <trans-unit id="658a06caec21ccea99f6787eff9d8496ce25223b" translate="yes" xml:space="preserve">
          <source>You may put your initializer before or after any other initializer in the chain, as long as it is logical. Say you have 4 initializers called &quot;one&quot; through &quot;four&quot; (defined in that order) and you define &quot;four&quot; to go &lt;em&gt;before&lt;/em&gt; &quot;four&quot; but &lt;em&gt;after&lt;/em&gt; &quot;three&quot;, that just isn't logical and Rails will not be able to determine your initializer order.</source>
          <target state="translated">您可以将初始化程序放在链中任何其他初始化程序之前或之后，只要它符合逻辑即可。假设您有4个称为&amp;ldquo;一个&amp;rdquo;至&amp;ldquo;四个&amp;rdquo;的初始化程序（按此顺序定义），并且将&amp;ldquo;四个&amp;rdquo;定义为&lt;em&gt;在&lt;/em&gt; &amp;ldquo;四个&amp;rdquo; &lt;em&gt;之前&lt;/em&gt;但&lt;em&gt;在&lt;/em&gt; &amp;ldquo;三个&amp;rdquo;之后，这是不合逻辑的，Rails将无法确定您的初始化顺序。</target>
        </trans-unit>
        <trans-unit id="c92aa3b2da485663dfcb5f9dfd02990c5d522d51" translate="yes" xml:space="preserve">
          <source>You may use YAML (&lt;code&gt;.yml&lt;/code&gt;) or plain Ruby (&lt;code&gt;.rb&lt;/code&gt;) files for storing your translations in SimpleStore. YAML is the preferred option among Rails developers. However, it has one big disadvantage. YAML is very sensitive to whitespace and special characters, so the application may not load your dictionary properly. Ruby files will crash your application on first request, so you may easily find what's wrong. (If you encounter any &quot;weird issues&quot; with YAML dictionaries, try putting the relevant portion of your dictionary into a Ruby file.)</source>
          <target state="translated">您可以使用YAML（ &lt;code&gt;.yml&lt;/code&gt; ）或纯Ruby（ &lt;code&gt;.rb&lt;/code&gt; ）文件将翻译存储在SimpleStore中。YAML是Rails开发人员的首选。但是，它有一个很大的缺点。YAML对空格和特殊字符非常敏感，因此应用程序可能无法正确加载字典。Ruby文件将在第一次请求时使您的应用程序崩溃，因此您可以轻松地发现问题所在。（如果您在使用YAML字典时遇到任何&amp;ldquo;奇怪的问题&amp;rdquo;，请尝试将字典的相关部分放入Ruby文件中。）</target>
        </trans-unit>
        <trans-unit id="cbe4f200a4ef257e1c7cebae8398f253d12cd89b" translate="yes" xml:space="preserve">
          <source>You may use a type not in this list as long as it is supported by your database (for example, &amp;ldquo;polygon&amp;rdquo; in MySQL), but this will not be database agnostic and should usually be avoided.</source>
          <target state="translated">您可以使用不在此列表中的类型，只要您的数据库支持该类型即可（例如，MySQL中的&amp;ldquo; polygon&amp;rdquo;），但这不是数据库不可知的，通常应避免使用。</target>
        </trans-unit>
        <trans-unit id="7d89fe2a7b6668dace4fe3390e82c54ebee27153" translate="yes" xml:space="preserve">
          <source>You may use this to also restrict other parameters:</source>
          <target state="translated">你也可以用它来限制其他参数。</target>
        </trans-unit>
        <trans-unit id="13c8043d4ce046358e5064b3231945faef1b3e91" translate="yes" xml:space="preserve">
          <source>You may want to also use the permitted attributes in your &lt;code&gt;new&lt;/code&gt; action. This raises the problem that you can't use &lt;code&gt;require&lt;/code&gt; on the root key because, normally, it does not exist when calling &lt;code&gt;new&lt;/code&gt;:</source>
          <target state="translated">您可能还需要在 &lt;code&gt;new&lt;/code&gt; 操作中使用允许的属性。这就引起了您不能在根密钥上使用 &lt;code&gt;require&lt;/code&gt; 的问题，因为通常在调用 &lt;code&gt;new&lt;/code&gt; 时它不存在：</target>
        </trans-unit>
        <trans-unit id="05c7f53dde519660cebc46a0c02382a32bfccdca" translate="yes" xml:space="preserve">
          <source>You may want to nest cached fragments inside other cached fragments. This is called Russian doll caching.</source>
          <target state="translated">你可能想把缓存碎片嵌套在其他缓存碎片里面。这就是所谓的俄罗斯娃娃缓存。</target>
        </trans-unit>
        <trans-unit id="a19cabcd1e2a41faecc70e4a6c2527b261e026aa" translate="yes" xml:space="preserve">
          <source>You may wish to organize groups of controllers under a namespace. Most commonly, you might group a number of administrative controllers under an &lt;code&gt;Admin::&lt;/code&gt; namespace. You would place these controllers under the &lt;code&gt;app/controllers/admin&lt;/code&gt; directory, and you can group them together in your router:</source>
          <target state="translated">您可能希望在命名空间下组织控制器组。最常见的是，您可以在 &lt;code&gt;Admin::&lt;/code&gt; 名称空间下将多个管理控制器分组。您可以将这些控制器放在 &lt;code&gt;app/controllers/admin&lt;/code&gt; 目录下，并且可以将它们组合到路由器中：</target>
        </trans-unit>
        <trans-unit id="bee136a197bcb9b19a5db342a0a5d2bc79043ca5" translate="yes" xml:space="preserve">
          <source>You may wish to organize groups of controllers under a namespace. Most commonly, you might group a number of administrative controllers under an &lt;code&gt;admin&lt;/code&gt; namespace. You would place these controllers under the &lt;code&gt;app/controllers/admin&lt;/code&gt; directory, and you can group them together in your router:</source>
          <target state="translated">您可能希望在命名空间下组织控制器组。最常见的是，您可以将多个管理控制器分组在 &lt;code&gt;admin&lt;/code&gt; 名称空间下。您可以将这些控制器放在 &lt;code&gt;app/controllers/admin&lt;/code&gt; 目录下，并且可以将它们组合到路由器中：</target>
        </trans-unit>
        <trans-unit id="79af4434fc412de1d7aaaa29ca299b409ddc8570" translate="yes" xml:space="preserve">
          <source>You might be wondering why the &lt;code&gt;A&lt;/code&gt; in &lt;code&gt;Article.new&lt;/code&gt; is capitalized above, whereas most other references to articles in this guide have used lowercase. In this context, we are referring to the class named &lt;code&gt;Article&lt;/code&gt; that is defined in &lt;code&gt;app/models/article.rb&lt;/code&gt;. Class names in Ruby must begin with a capital letter.</source>
          <target state="translated">你可能会奇怪，为什么 &lt;code&gt;A&lt;/code&gt; 在 &lt;code&gt;Article.new&lt;/code&gt; 上面大写，而本指南中的文章大部分其他文献已经使用小写。在这种情况下，我们指的是在 &lt;code&gt;app/models/article.rb&lt;/code&gt; 中定义的名为 &lt;code&gt;Article&lt;/code&gt; 的类。Ruby中的类名称必须以大写字母开头。</target>
        </trans-unit>
        <trans-unit id="909ebfa8bfa9e1fc9f6c2b2e323d97fbee297631" translate="yes" xml:space="preserve">
          <source>You might want to download a blob to a file on disk so an external program (e.g. a virus scanner or media transcoder) can operate on it. Use &lt;code&gt;ActiveStorage::Blob#open&lt;/code&gt; to download a blob to a tempfile on disk:</source>
          <target state="translated">您可能需要将blob下载到磁盘上的文件中，以便可以在其上运行外部程序（例如病毒扫描程序或媒体转码器）。使用 &lt;code&gt;ActiveStorage::Blob#open&lt;/code&gt; 将Blob下载到磁盘上的临时文件中：</target>
        </trans-unit>
        <trans-unit id="57fdee87aa35bb69e12a0cc8d333df926b3c4156" translate="yes" xml:space="preserve">
          <source>You might want to render a form with a set of edit fields for each of a person's addresses. For example:</source>
          <target state="translated">你可能想为每个人的地址渲染一个带有一组编辑字段的表单。例如,你可以在表格中为每个人的地址设置一组编辑字段。</target>
        </trans-unit>
        <trans-unit id="5e58a4967e49a3b01287607700455ba8b4e9757a" translate="yes" xml:space="preserve">
          <source>You must change the following application configuration setting:</source>
          <target state="translated">您必须更改以下应用程序的设置。</target>
        </trans-unit>
        <trans-unit id="89e598c013979cc66d702aa8be0b01a998f39c7c" translate="yes" xml:space="preserve">
          <source>You must disambiguate column references for this fallback to happen, for example &lt;code&gt;order: &quot;author.name DESC&quot;&lt;/code&gt; will work but &lt;code&gt;order: &quot;name DESC&quot;&lt;/code&gt; will not.</source>
          <target state="translated">您必须消除列引用的歧义， &lt;code&gt;order: &quot;author.name DESC&quot;&lt;/code&gt; 发生此后退，例如，命令：&amp;ldquo; author.name DESC&amp;rdquo;将起作用，但 &lt;code&gt;order: &quot;name DESC&quot;&lt;/code&gt; 将不起作用。</target>
        </trans-unit>
        <trans-unit id="d15d40da003c4584611e60a5f9018503e42cb604" translate="yes" xml:space="preserve">
          <source>You must ensure any necessary compressors or minifiers are available on your development system.</source>
          <target state="translated">你必须确保你的开发系统上有任何必要的压缩器或迷你器。</target>
        </trans-unit>
        <trans-unit id="c2c1d93a4db1a16cbed88598565dc5c468a7794f" translate="yes" xml:space="preserve">
          <source>You must have an ExecJS supported runtime in order to use CoffeeScript. If you are using macOS or Windows, you have a JavaScript runtime installed in your operating system. Check &lt;a href=&quot;https://github.com/rails/execjs#readme&quot;&gt;ExecJS&lt;/a&gt; documentation to know all supported JavaScript runtimes.</source>
          <target state="translated">您必须具有ExecJS支持的运行时才能使用CoffeeScript。如果使用的是macOS或Windows，则在操作系统中安装了JavaScript运行时。查看&lt;a href=&quot;https://github.com/rails/execjs#readme&quot;&gt;ExecJS&lt;/a&gt;文档以了解所有受支持的JavaScript运行时。</target>
        </trans-unit>
        <trans-unit id="310afb0b1584715129761c5fb83b8df6523f18fd" translate="yes" xml:space="preserve">
          <source>You must not run the Capistrano deployment task that precompiles assets.</source>
          <target state="translated">您不得运行预编译资产的 Capistrano 部署任务。</target>
        </trans-unit>
        <trans-unit id="cda2f62636ed5585c586eba40dfd841bc4e34e6f" translate="yes" xml:space="preserve">
          <source>You must pass either &lt;code&gt;:with&lt;/code&gt; or &lt;code&gt;:without&lt;/code&gt; as an option. In addition, both must be a regular expression or a proc or lambda, or else an exception will be raised.</source>
          <target state="translated">您必须传递 &lt;code&gt;:with&lt;/code&gt; 或 &lt;code&gt;:without&lt;/code&gt; 作为选项。另外，两者都必须是正则表达式或proc或lambda，否则将引发异常。</target>
        </trans-unit>
        <trans-unit id="f1c6507a2f85b50f30804f7e025cd6ed8f77cdf1" translate="yes" xml:space="preserve">
          <source>You must pass the name of an instance variable, i.e. &lt;code&gt;:person&lt;/code&gt; or &lt;code&gt;&quot;person&quot;&lt;/code&gt;, not an actual instance of your model object.</source>
          <target state="translated">您必须传递实例变量的名称，即 &lt;code&gt;:person&lt;/code&gt; 或 &lt;code&gt;&quot;person&quot;&lt;/code&gt; ，而不是模型对象的实际实例。</target>
        </trans-unit>
        <trans-unit id="a3786adac7d5e07f32eb27219b520b4498e68539" translate="yes" xml:space="preserve">
          <source>You must specify a &lt;code&gt;use_renderer&lt;/code&gt;, else the &lt;code&gt;controller.renderer&lt;/code&gt; and &lt;code&gt;controller._renderers&lt;/code&gt; will be &lt;code&gt;nil&lt;/code&gt;, and the action will fail.</source>
          <target state="translated">您必须指定一个 &lt;code&gt;use_renderer&lt;/code&gt; ，否则 &lt;code&gt;controller.renderer&lt;/code&gt; 和 &lt;code&gt;controller._renderers&lt;/code&gt; 将为 &lt;code&gt;nil&lt;/code&gt; ，操作将失败。</target>
        </trans-unit>
        <trans-unit id="ae874defb20d402db844e2806d306243eb02114c" translate="yes" xml:space="preserve">
          <source>You need to change your session key to something new, or remove all sessions:</source>
          <target state="translated">你需要把你的会话密钥换成新的,或者删除所有会话。</target>
        </trans-unit>
        <trans-unit id="86b68ff3297d82cfd915fd24064c32bf506b8ccc" translate="yes" xml:space="preserve">
          <source>You need to enable the &lt;code&gt;hstore&lt;/code&gt; extension to use hstore.</source>
          <target state="translated">您需要启用 &lt;code&gt;hstore&lt;/code&gt; 扩展才能使用hstore。</target>
        </trans-unit>
        <trans-unit id="8549b48527d1d45217ab24e5173c761675e71ea3" translate="yes" xml:space="preserve">
          <source>You need to enable the &lt;code&gt;pgcrypto&lt;/code&gt; (only PostgreSQL &amp;gt;= 9.4) or &lt;code&gt;uuid-ossp&lt;/code&gt; extension to generate random UUIDs.</source>
          <target state="translated">您需要启用 &lt;code&gt;pgcrypto&lt;/code&gt; （仅PostgreSQL&amp;gt; = 9.4）或 &lt;code&gt;uuid-ossp&lt;/code&gt; 扩展以生成随机UUID。</target>
        </trans-unit>
        <trans-unit id="586a576e016642062e5a9cbaa78feb1fb88c2b52" translate="yes" xml:space="preserve">
          <source>You need to enable the &lt;code&gt;pgcrypto&lt;/code&gt; (only PostgreSQL &amp;gt;= 9.4) or &lt;code&gt;uuid-ossp&lt;/code&gt; extension to use uuid.</source>
          <target state="translated">您需要启用 &lt;code&gt;pgcrypto&lt;/code&gt; （仅PostgreSQL&amp;gt; = 9.4）或 &lt;code&gt;uuid-ossp&lt;/code&gt; 扩展才能使用uuid。</target>
        </trans-unit>
        <trans-unit id="112d00bd9d3b5f44cb4f8b8ad7fd323f750c85ac" translate="yes" xml:space="preserve">
          <source>You need to restart the server when you add new locale files.</source>
          <target state="translated">当你添加新的locale文件时,你需要重新启动服务器。</target>
        </trans-unit>
        <trans-unit id="dae9e35001eee15eb4a5bcfaeedb49da194896d7" translate="yes" xml:space="preserve">
          <source>You need to set up your connection manually to provide values for the identifiers. To do this just use:</source>
          <target state="translated">你需要手动设置你的连接来提供标识符的值。要做到这一点,只需使用。</target>
        </trans-unit>
        <trans-unit id="93d3c48196c13c0bb120cd94665188d5b4a774c1" translate="yes" xml:space="preserve">
          <source>You never instantiate your mailer class. Rather, you just call the method you defined on the class itself. All instance methods are expected to return a message object to be sent.</source>
          <target state="translated">你从来没有实例化过你的mailer类。相反,你只是调用你在类本身上定义的方法。所有的实例方法都应该返回一个要发送的消息对象。</target>
        </trans-unit>
        <trans-unit id="fa7ae451e87f25e98269c57528abcd62db2ef213" translate="yes" xml:space="preserve">
          <source>You now need to create the &lt;code&gt;create&lt;/code&gt; action within the &lt;code&gt;ArticlesController&lt;/code&gt; for this to work.</source>
          <target state="translated">现在，您需要在 &lt;code&gt;ArticlesController&lt;/code&gt; 中 &lt;code&gt;create&lt;/code&gt; 动作，此功能才能起作用。</target>
        </trans-unit>
        <trans-unit id="b2553688f398ba3088d0a662297c3ace031a2ce8" translate="yes" xml:space="preserve">
          <source>You only need to provide the &quot;host&quot;, this is the subdomain and root domain, you do not need to specify a protocol or &quot;scheme&quot; such as &lt;code&gt;http://&lt;/code&gt; or &lt;code&gt;https://&lt;/code&gt;. When a web page is requested, the protocol in the link to your asset that is generated will match how the webpage is accessed by default.</source>
          <target state="translated">您只需要提供&amp;ldquo;主机&amp;rdquo;，这是子域和根域，无需指定协议或&amp;ldquo;方案&amp;rdquo;，例如 &lt;code&gt;http://&lt;/code&gt; 或 &lt;code&gt;https://&lt;/code&gt; 。请求网页时，默认情况下，到您的资产的链接中的协议将与该网页的访问方式匹配。</target>
        </trans-unit>
        <trans-unit id="09208900c19fcd0026f3644adb2cada0d4267dce" translate="yes" xml:space="preserve">
          <source>You only need to specify the &lt;code&gt;:counter_cache&lt;/code&gt; option on the &lt;code&gt;belongs_to&lt;/code&gt; side of the association.</source>
          <target state="translated">您只需要在关联的 &lt;code&gt;belongs_to&lt;/code&gt; 一侧指定 &lt;code&gt;:counter_cache&lt;/code&gt; 选项。</target>
        </trans-unit>
        <trans-unit id="9b0f13598656caad60aee7fa8a1de2a1cd0e0dce" translate="yes" xml:space="preserve">
          <source>You probably don't want to just sit there with a filled out &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt;, though. You probably want to do something upon a successful submission. To do that, bind to the &lt;code&gt;ajax:success&lt;/code&gt; event. On failure, use &lt;code&gt;ajax:error&lt;/code&gt;. Check it out:</source>
          <target state="translated">但是，您可能不想只坐在一个填写了 &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; 的位置。您可能想在成功提交后做点什么。为此，请绑定到 &lt;code&gt;ajax:success&lt;/code&gt; 事件。如果失败，请使用 &lt;code&gt;ajax:error&lt;/code&gt; 。看看这个：</target>
        </trans-unit>
        <trans-unit id="946bb170cc9dc5c179e88a988c84173b74e22159" translate="yes" xml:space="preserve">
          <source>You probably want URLs to look like this: &lt;code&gt;http://www.example.com/en/books&lt;/code&gt; (which loads the English locale) and &lt;code&gt;http://www.example.com/nl/books&lt;/code&gt; (which loads the Dutch locale). This is achievable with the &quot;over-riding &lt;code&gt;default_url_options&lt;/code&gt;&quot; strategy from above: you just have to set up your routes with &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionDispatch/Routing/Mapper/Scoping.html&quot;&gt;&lt;code&gt;scope&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">您可能希望URL看起来像这样： &lt;code&gt;http://www.example.com/en/books&lt;/code&gt; : //www.example.com/en/books（加载英语语言环境）和 &lt;code&gt;http://www.example.com/nl/books&lt;/code&gt; （加载荷兰语言环境） 。这可以通过上面的&amp;ldquo; &lt;code&gt;default_url_options&lt;/code&gt; - default_url_options &amp;rdquo;策略来实现：您只需要使用&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionDispatch/Routing/Mapper/Scoping.html&quot;&gt; &lt;code&gt;scope&lt;/code&gt; &lt;/a&gt;设置路由：</target>
        </trans-unit>
        <trans-unit id="4def473e9350595ea54a9d7da6883721f157b150" translate="yes" xml:space="preserve">
          <source>You should always pass a callable object to the scopes defined with &lt;a href=&quot;classmethods#method-i-scope&quot;&gt;scope&lt;/a&gt;. This ensures that the scope is re-evaluated each time it is called.</source>
          <target state="translated">您应该始终将可调用对象传递给scope定义的&lt;a href=&quot;classmethods#method-i-scope&quot;&gt;范围&lt;/a&gt;。这样可以确保每次调用范围时都会对其进行重新评估。</target>
        </trans-unit>
        <trans-unit id="5e2390a2a51e68c23e3041cf6a91b23538ae355f" translate="yes" xml:space="preserve">
          <source>You should consult the documentation for your database to understand the semantics of these different levels:</source>
          <target state="translated">你应该查阅你的数据库的文档来了解这些不同级别的语义。</target>
        </trans-unit>
        <trans-unit id="db945c5d21a1088da0df3a48d0b20000acf6cde6" translate="yes" xml:space="preserve">
          <source>You should follow Rails conventions when defining your own events. The format is: &lt;code&gt;event.library&lt;/code&gt;. If your application is sending Tweets, you should create an event named &lt;code&gt;tweet.twitter&lt;/code&gt;.</source>
          <target state="translated">定义自己的事件时，应遵循Rails约定。格式为： &lt;code&gt;event.library&lt;/code&gt; 。如果您的应用程序正在发送Tweets，则应创建一个名为 &lt;code&gt;tweet.twitter&lt;/code&gt; 的事件。</target>
        </trans-unit>
        <trans-unit id="a90fa6fd9b954cf7b3f738f7025b6547e979c47e" translate="yes" xml:space="preserve">
          <source>You should have a good understanding of using the i18n library now and know how to internationalize a basic Rails application. In the following chapters, we'll cover its features in more depth.</source>
          <target state="translated">您现在应该对使用i18n库有了很好的理解,并知道如何对一个基本的Rails应用进行国际化。在下面的章节中,我们将更深入地介绍它的功能。</target>
        </trans-unit>
        <trans-unit id="21807d77344ec28f368544e34eb49a4c55de2351" translate="yes" xml:space="preserve">
          <source>You should not specify this option on a &lt;code&gt;belongs_to&lt;/code&gt; association that is connected with a &lt;code&gt;has_many&lt;/code&gt; association on the other class. Doing so can lead to orphaned records in your database.</source>
          <target state="translated">你不应该指定在此选项 &lt;code&gt;belongs_to&lt;/code&gt; 的是与连接关联 &lt;code&gt;has_many&lt;/code&gt; 对其他类的关联。这样做可能导致数据库中的孤立记录。</target>
        </trans-unit>
        <trans-unit id="166bf0e98f4e99039b079af31c92fff61f02ad10" translate="yes" xml:space="preserve">
          <source>You should not use the &lt;code&gt;match&lt;/code&gt; method in your router without specifying an HTTP method.</source>
          <target state="translated">如果未指定HTTP方法，则不应在路由器中使用 &lt;code&gt;match&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="9de9f1feb2ce83cbfdbf72efa9df8c512c0c6b16" translate="yes" xml:space="preserve">
          <source>You should put the &lt;code&gt;root&lt;/code&gt; route at the top of the file, because it is the most popular route and should be matched first.</source>
          <target state="translated">您应该将 &lt;code&gt;root&lt;/code&gt; 路由放在文件的顶部，因为它是最流行的路由，应该首先匹配。</target>
        </trans-unit>
        <trans-unit id="ad0988339f9100d2c37b366a52abb889765bceb7" translate="yes" xml:space="preserve">
          <source>You should put the root route at the top of &lt;code&gt;config/routes.rb&lt;/code&gt;, because this means it will be matched first. As this is the most popular route of most Rails applications, this is beneficial.</source>
          <target state="translated">您应该将根路由放在 &lt;code&gt;config/routes.rb&lt;/code&gt; 的顶部，因为这意味着它将首先匹配。因为这是大多数Rails应用程序中最流行的路线，所以这是有益的。</target>
        </trans-unit>
        <trans-unit id="f2532bacaa3a7fcecb1f3c7a2465a18b789a0e26" translate="yes" xml:space="preserve">
          <source>You should see:</source>
          <target state="translated">你应该看到。</target>
        </trans-unit>
        <trans-unit id="9c04c2f59cceaa4cdc2ac83c13722f942e4f26a6" translate="yes" xml:space="preserve">
          <source>You should test for things such as:</source>
          <target state="translated">你应该测试一下,比如:</target>
        </trans-unit>
        <trans-unit id="13bb18ff71b885aed7750f4ada07156428657bf4" translate="yes" xml:space="preserve">
          <source>You should use &lt;code&gt;has_many :through&lt;/code&gt; if you need validations, callbacks, or extra attributes on the join model.</source>
          <target state="translated">如果需要在连接模型上进行验证，回调或其他属性，则应使用 &lt;code&gt;has_many :through&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1cb021ef9b725031a5746f0866ab7abbc1f1ef82" translate="yes" xml:space="preserve">
          <source>You should use the &lt;code&gt;named_route_url&lt;/code&gt; style (which generates absolute URLs) and avoid using the &lt;code&gt;named_route_path&lt;/code&gt; style (which generates relative URLs), since clients reading the mail will have no concept of a current URL from which to determine a relative path.</source>
          <target state="translated">您应该使用 &lt;code&gt;named_route_url&lt;/code&gt; 样式（生成绝对URL），并避免使用 &lt;code&gt;named_route_path&lt;/code&gt; 样式（生成相对URL），因为读取邮件的客户端不会使用当前URL的概念来确定相对路径。</target>
        </trans-unit>
        <trans-unit id="fb35d285bc1ae987b173c3b463d23b792f9f050c" translate="yes" xml:space="preserve">
          <source>You should use this helper when you have two text fields that should receive exactly the same content. For example, you may want to confirm an email address or a password. This validation creates a virtual attribute whose name is the name of the field that has to be confirmed with &quot;_confirmation&quot; appended.</source>
          <target state="translated">当您有两个文本字段应该接收完全相同的内容时,您应该使用这个帮助程序。例如,您可能想确认一个电子邮件地址或密码。这个验证创建了一个虚拟属性,其名称是必须确认的字段的名称,并附加&quot;_confirmation&quot;。</target>
        </trans-unit>
        <trans-unit id="12c95256a50fc492ff84c9e12e744d099683de71" translate="yes" xml:space="preserve">
          <source>You should use this helper when your model has associations with other models and they also need to be validated. When you try to save your object, &lt;code&gt;valid?&lt;/code&gt; will be called upon each one of the associated objects.</source>
          <target state="translated">当您的模型与其他模型有关联并且也需要进行验证时，应使用此帮助程序。当您尝试保存对象时， &lt;code&gt;valid?&lt;/code&gt; 将在每个关联对象上调用。</target>
        </trans-unit>
        <trans-unit id="c80a39fbdf55175c9503194abde211aa66ef43c5" translate="yes" xml:space="preserve">
          <source>You shouldn't ever need to create a &lt;a href=&quot;timewithzone&quot;&gt;TimeWithZone&lt;/a&gt; instance directly via &lt;code&gt;new&lt;/code&gt;. Instead use methods &lt;code&gt;local&lt;/code&gt;, &lt;code&gt;parse&lt;/code&gt;, &lt;code&gt;at&lt;/code&gt; and &lt;code&gt;now&lt;/code&gt; on &lt;a href=&quot;timezone&quot;&gt;TimeZone&lt;/a&gt; instances, and &lt;code&gt;in_time_zone&lt;/code&gt; on &lt;a href=&quot;../time&quot;&gt;Time&lt;/a&gt; and &lt;a href=&quot;../datetime&quot;&gt;DateTime&lt;/a&gt; instances.</source>
          <target state="translated">您永远不需要直接通过 &lt;code&gt;new&lt;/code&gt; 创建一个&lt;a href=&quot;timewithzone&quot;&gt;TimeWithZone&lt;/a&gt;实例。而是使用方法 &lt;code&gt;local&lt;/code&gt; ， &lt;code&gt;parse&lt;/code&gt; ， &lt;code&gt;at&lt;/code&gt; 和 &lt;code&gt;now&lt;/code&gt; 的&lt;a href=&quot;timezone&quot;&gt;时区&lt;/a&gt;的情况下，和 &lt;code&gt;in_time_zone&lt;/code&gt; 的&lt;a href=&quot;../time&quot;&gt;时间&lt;/a&gt;和&lt;a href=&quot;../datetime&quot;&gt;日期时间&lt;/a&gt;的情况。</target>
        </trans-unit>
        <trans-unit id="2fa6bd88c92aceac3be552524f6ae124a1f70bc6" translate="yes" xml:space="preserve">
          <source>You specify a request-based constraint the same way that you specify a segment constraint:</source>
          <target state="translated">您指定基于请求的约束的方式与指定段约束的方式相同。</target>
        </trans-unit>
        <trans-unit id="2cf854df8722d58c35a4a6e91702b20f03d87c63" translate="yes" xml:space="preserve">
          <source>You still could pass &lt;code&gt;:include&lt;/code&gt; and &lt;code&gt;:exclude&lt;/code&gt; to set the list of attributes you want to wrap.</source>
          <target state="translated">您仍然可以传递 &lt;code&gt;:include&lt;/code&gt; 和 &lt;code&gt;:exclude&lt;/code&gt; 来设置要包装的属性列表。</target>
        </trans-unit>
        <trans-unit id="0fb1d66798c26f15f3c5b5a668b7b04c812a4335" translate="yes" xml:space="preserve">
          <source>You trigger ERB by using embeddings such as &lt;code&gt;&amp;lt;% %&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;% -%&amp;gt;&lt;/code&gt;, and &lt;code&gt;&amp;lt;%=
%&amp;gt;&lt;/code&gt;. The &lt;code&gt;&amp;lt;%= %&amp;gt;&lt;/code&gt; tag set is used when you want output. Consider the following loop for names:</source>
          <target state="translated">您可以使用诸如 &lt;code&gt;&amp;lt;% %&amp;gt;&lt;/code&gt; ， &lt;code&gt;&amp;lt;% -%&amp;gt;&lt;/code&gt; 和 &lt;code&gt;&amp;lt;%= %&amp;gt;&lt;/code&gt; 嵌入来触发ERB 。在 &lt;code&gt;&amp;lt;%= %&amp;gt;&lt;/code&gt; 当你想输出标签集被使用。考虑以下名称循环：</target>
        </trans-unit>
        <trans-unit id="3b21c9902b82c1f8dfa48fd17b8ffa085e630b50" translate="yes" xml:space="preserve">
          <source>You will also need an installation of the SQLite3 database. Many popular UNIX-like OSes ship with an acceptable version of SQLite3. On Windows, if you installed Rails through Rails Installer, you already have SQLite installed. Others can find installation instructions at the &lt;a href=&quot;https://www.sqlite.org&quot;&gt;SQLite3 website&lt;/a&gt;. Verify that it is correctly installed and in your PATH:</source>
          <target state="translated">您还将需要安装SQLite3数据库。许多流行的类似UNIX的操作系统附带了可接受的SQLite3版本。在Windows上，如果通过Rails Installer安装了Rails，则已经安装了SQLite。其他人可以在&lt;a href=&quot;https://www.sqlite.org&quot;&gt;SQLite3网站上&lt;/a&gt;找到安装说明。验证它是否已正确安装并在PATH中：</target>
        </trans-unit>
        <trans-unit id="f7d56900a000f8df591962d61753b511fd1db9c2" translate="yes" xml:space="preserve">
          <source>You will get a list of all generators that comes with Rails. If you need a detailed description of the helper generator, for example, you can simply do:</source>
          <target state="translated">你会得到一个Rails自带的所有生成器的列表。例如,如果你需要助手生成器的详细描述,你可以简单地做。</target>
        </trans-unit>
        <trans-unit id="4fbe43ca46fafab52c776d602e079677f80b3401" translate="yes" xml:space="preserve">
          <source>You will get two keys from the API, a public and a private key, which you have to put into your Rails environment. After that you can use the recaptcha_tags method in the view, and the verify_recaptcha method in the controller. Verify_recaptcha will return false if the validation fails. The problem with CAPTCHAs is that they have a negative impact on the user experience. Additionally, some visually impaired users have found certain kinds of distorted CAPTCHAs difficult to read. Still, positive CAPTCHAs are one of the best methods to prevent all kinds of bots from submitting forms.</source>
          <target state="translated">你将从API中获得两个密钥,一个公钥和一个私钥,你必须把它们放到你的Rails环境中。之后你可以在视图中使用recaptcha_tags方法,在控制器中使用verify_recaptcha方法。如果验证失败,Verify_recaptcha将返回false。CAPTCHA的问题是它们对用户体验有负面影响。此外,一些视障用户发现某些类型的扭曲的验证码难以阅读。不过,正向验证码仍然是防止各类机器人提交表单的最佳方法之一。</target>
        </trans-unit>
        <trans-unit id="239043e4b2867b8e410ffaced18e22f27a6c9224" translate="yes" xml:space="preserve">
          <source>You will have to rewrite those to the explicit form:</source>
          <target state="translated">你必须把这些改写成明文形式。</target>
        </trans-unit>
        <trans-unit id="407a52afc79c64ea6af0dd5cbc6a7e131e0d6dfc" translate="yes" xml:space="preserve">
          <source>You will need an &lt;a href=&quot;https://github.com/rails/execjs#readme&quot;&gt;ExecJS&lt;/a&gt; supported runtime in order to use &lt;code&gt;uglifier&lt;/code&gt;. If you are using macOS or Windows you have a JavaScript runtime installed in your operating system.</source>
          <target state="translated">您需要一个&lt;a href=&quot;https://github.com/rails/execjs#readme&quot;&gt;ExecJS&lt;/a&gt;支持的运行时才能使用 &lt;code&gt;uglifier&lt;/code&gt; 。如果使用的是macOS或Windows，则在操作系统中安装了JavaScript运行时。</target>
        </trans-unit>
        <trans-unit id="e999038b909701f0ea79d0c1a2de2adbf75868da" translate="yes" xml:space="preserve">
          <source>You will need to use:</source>
          <target state="translated">你将需要使用:</target>
        </trans-unit>
        <trans-unit id="e4f439a572c57f992ca29e0bcab7e21a5afce688" translate="yes" xml:space="preserve">
          <source>You will probably want to access data sent in by the user or other parameters in your controller actions. There are two kinds of parameters possible in a web application. The first are parameters that are sent as part of the URL, called query string parameters. The query string is everything after &quot;?&quot; in the URL. The second type of parameter is usually referred to as POST data. This information usually comes from an HTML form which has been filled in by the user. It's called POST data because it can only be sent as part of an HTTP POST request. Rails does not make any distinction between query string parameters and POST parameters, and both are available in the &lt;code&gt;params&lt;/code&gt; hash in your controller:</source>
          <target state="translated">您可能需要访问用户发送的数据或控制器操作中的其他参数。 Web应用程序中可能有两种参数。第一个是作为URL的一部分发送的参数，称为查询字符串参数。查询字符串是&amp;ldquo;？&amp;rdquo;之后的所有内容在网址中。第二种类型的参数通常称为POST数据。此信息通常来自用户已填写的HTML表单。之所以称为POST数据，是因为它只能作为HTTP POST请求的一部分发送。 Rails在查询字符串参数和POST参数之间没有任何区别，两者都可以在控制器的 &lt;code&gt;params&lt;/code&gt; 哈希中使用：</target>
        </trans-unit>
        <trans-unit id="291c95325d391bb9e0c57e697f868eb83dcb8c30" translate="yes" xml:space="preserve">
          <source>You will see how the token gets added as a hidden field:</source>
          <target state="translated">你将看到令牌如何被添加为隐藏字段。</target>
        </trans-unit>
        <trans-unit id="068924df98c911ca637b1f050e31796451914374" translate="yes" xml:space="preserve">
          <source>You won't ordinarily need to call this method from a Rails application. New blobs are automatically and asynchronously analyzed via &lt;a href=&quot;analyzable#method-i-analyze_later&quot;&gt;analyze_later&lt;/a&gt; when they're attached for the first time.</source>
          <target state="translated">通常，您不需要从Rails应用程序中调用此方法。第一次连接新的Blob 时，会通过&lt;a href=&quot;analyzable#method-i-analyze_later&quot;&gt;analyzer_later&lt;/a&gt;自动进行异步分析。</target>
        </trans-unit>
        <trans-unit id="b37151ff57ddfb01faa457e8cb06b5f175527329" translate="yes" xml:space="preserve">
          <source>You would need to set &lt;code&gt;CDN_HOST&lt;/code&gt; on your server to &lt;code&gt;mycdnsubdomain
.fictional-cdn.com&lt;/code&gt; for this to work.</source>
          <target state="translated">您需要设置 &lt;code&gt;CDN_HOST&lt;/code&gt; 您的服务器上 &lt;code&gt;mycdnsubdomain .fictional-cdn.com&lt;/code&gt; 这个工作。</target>
        </trans-unit>
        <trans-unit id="88337d05e336f6c9da472cfd55095f9639171480" translate="yes" xml:space="preserve">
          <source>You would probably need to map URLs like these:</source>
          <target state="translated">你可能需要映射这样的URL。</target>
        </trans-unit>
        <trans-unit id="1226e58a2bf8082400185104caa678850de0c03d" translate="yes" xml:space="preserve">
          <source>You would use &lt;code&gt;content_for&lt;/code&gt; in your template to specify the title:</source>
          <target state="translated">您将在模板中使用 &lt;code&gt;content_for&lt;/code&gt; 来指定标题：</target>
        </trans-unit>
        <trans-unit id="078c83f2452a579699d0e8d46ff4cd688c35c13c" translate="yes" xml:space="preserve">
          <source>You'd give your encryptor the new defaults:</source>
          <target state="translated">你会给你的加密器新的默认值。</target>
        </trans-unit>
        <trans-unit id="52dba8a42c7f202119984d737308c8dbd5c3668e" translate="yes" xml:space="preserve">
          <source>You'd give your verifier the new defaults:</source>
          <target state="translated">你会给你的验证者新的默认值。</target>
        </trans-unit>
        <trans-unit id="0cd302b4663a64499f6e3c4c90e8cf3212ead9bb" translate="yes" xml:space="preserve">
          <source>You'll find fixtures under your &lt;code&gt;test/fixtures&lt;/code&gt; directory. When you run &lt;code&gt;rails generate model&lt;/code&gt; to create a new model, Rails automatically creates fixture stubs in this directory.</source>
          <target state="translated">您可以在 &lt;code&gt;test/fixtures&lt;/code&gt; 目录下找到灯具。当您运行 &lt;code&gt;rails generate model&lt;/code&gt; 创建新模型时，Rails会在此目录中自动创建夹具存根。</target>
        </trans-unit>
        <trans-unit id="d528dfeb22821cdd901d790d9e428bd9f049b40c" translate="yes" xml:space="preserve">
          <source>You'll find that the output from &lt;code&gt;rails routes&lt;/code&gt; is much more readable if you widen your terminal window until the output lines don't wrap.</source>
          <target state="translated">如果扩大终端窗口直到输出行不换行，您会发现 &lt;code&gt;rails routes&lt;/code&gt; 的输出更具可读性。</target>
        </trans-unit>
        <trans-unit id="1ae862639b17cab9b4af170f3d5db0ac0d31548e" translate="yes" xml:space="preserve">
          <source>You'll need to edit &lt;code&gt;app/models/article.rb&lt;/code&gt; to add the other side of the association:</source>
          <target state="translated">您需要编辑 &lt;code&gt;app/models/article.rb&lt;/code&gt; 以添加关联的另一面：</target>
        </trans-unit>
        <trans-unit id="f232f1e75f28f65a620f68584e881b40833dd301" translate="yes" xml:space="preserve">
          <source>You'll need to use a special comment format to call those out:</source>
          <target state="translated">你需要使用一种特殊的注释格式来调用这些。</target>
        </trans-unit>
        <trans-unit id="2477e2665baa35e39014c5a501a8a262581f20eb" translate="yes" xml:space="preserve">
          <source>You'll notice that the HTML contains an &lt;code&gt;input&lt;/code&gt; element with type &lt;code&gt;hidden&lt;/code&gt;. This &lt;code&gt;input&lt;/code&gt; is important, because non-GET form cannot be successfully submitted without it. The hidden input element with the name &lt;code&gt;authenticity_token&lt;/code&gt; is a security feature of Rails called &lt;strong&gt;cross-site request forgery protection&lt;/strong&gt;, and form helpers generate it for every non-GET form (provided that this security feature is enabled). You can read more about this in the &lt;a href=&quot;security#cross-site-request-forgery-csrf&quot;&gt;Securing Rails Applications&lt;/a&gt; guide.</source>
          <target state="translated">您会注意到HTML包含类型为 &lt;code&gt;hidden&lt;/code&gt; 的 &lt;code&gt;input&lt;/code&gt; 元素。此 &lt;code&gt;input&lt;/code&gt; 很重要，因为没有它就无法成功提交非GET表单。名称为 &lt;code&gt;authenticity_token&lt;/code&gt; 的隐藏输入元素是Rails的一项安全功能，称为&lt;strong&gt;跨站点请求伪造保护&lt;/strong&gt;，表单助手将为每个非GET表单生成该元素（前提是已启用此安全功能）。您可以在《&lt;a href=&quot;security#cross-site-request-forgery-csrf&quot;&gt;保护Rails应用程序》&lt;/a&gt;指南中阅读有关此内容的更多信息。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="49ade38eb32f27dcb828cc51002b18554cc5d2b0" translate="yes" xml:space="preserve">
          <source>You'll see a bit more complexity here than you did in the controller for articles. That's a side-effect of the nesting that you've set up. Each request for a comment has to keep track of the article to which the comment is attached, thus the initial call to the &lt;code&gt;find&lt;/code&gt; method of the &lt;code&gt;Article&lt;/code&gt; model to get the article in question.</source>
          <target state="translated">您将在这里看到比在文章控制器中复杂的多。那是您设置的嵌套的副作用。每个对评论的请求都必须跟踪该评论所附加的文章，因此是对 &lt;code&gt;Article&lt;/code&gt; 模型的 &lt;code&gt;find&lt;/code&gt; 方法的初次调用以获取有问题的文章。</target>
        </trans-unit>
        <trans-unit id="40958febf05881dda4278aa60310822903c43438" translate="yes" xml:space="preserve">
          <source>You'll see something like this:</source>
          <target state="translated">你会看到这样的东西。</target>
        </trans-unit>
        <trans-unit id="525e1a7311d98bb51e6abc4336c434d09cf56bb4" translate="yes" xml:space="preserve">
          <source>You'll see the usage of some of these assertions in the next chapter.</source>
          <target state="translated">你将在下一章看到其中一些论断的用法。</target>
        </trans-unit>
        <trans-unit id="bec85ff1b139d727c2c507cfd50bbb9000e606dc" translate="yes" xml:space="preserve">
          <source>You're encouraged to help improve the quality of this guide.</source>
          <target state="translated">我们鼓励您帮助提高本指南的质量。</target>
        </trans-unit>
        <trans-unit id="9b7c6efdb452f8d502efbbeb09df1c641f6285ef" translate="yes" xml:space="preserve">
          <source>You're getting this error now because Rails expects plain actions like this one to have views associated with them to display their information. With no view available, Rails will raise an exception.</source>
          <target state="translated">您现在收到这个错误是因为 Rails 希望像这样的普通操作有与之相关的视图来显示其信息。如果没有可用的视图,Rails 将引发一个异常。</target>
        </trans-unit>
        <trans-unit id="1133865f93c26c9b51ce1b04a0ac88b5fe4d098e" translate="yes" xml:space="preserve">
          <source>You're not limited to the functionality that Rails automatically builds into association proxy objects. You can also extend these objects through anonymous modules, adding new finders, creators, or other methods. For example:</source>
          <target state="translated">您并不局限于 Rails 自动构建到关联代理对象中的功能。您还可以通过匿名模块扩展这些对象,添加新的查找器、创建者或其他方法。例如</target>
        </trans-unit>
        <trans-unit id="ebe356d8db57db3a2cacba3bc5b67f96f0b3797f" translate="yes" xml:space="preserve">
          <source>You're testing whether a transaction works correctly. Nested transactions don't commit until all parent transactions commit, particularly, the fixtures transaction which is begun in setup and rolled back in teardown. Thus, you won't be able to verify the results of your transaction until Active Record supports nested transactions or savepoints (in progress).</source>
          <target state="translated">你正在测试一个事务是否正确工作。嵌套的事务在所有的父事务提交之前不会提交,特别是在设置中开始并在撤消中回滚的固定装置事务,因此,在Active Record支持嵌套事务或保存点(进行中)之前,您无法验证您的事务的结果。因此,在Active Record支持嵌套事务或保存点(进行中)之前,您无法验证事务的结果。</target>
        </trans-unit>
        <trans-unit id="ecd9413e60f1b1d60ce3af64d44836b8a8d3bcc0" translate="yes" xml:space="preserve">
          <source>You're then responsible for dealing with the conflict by rescuing the exception and either rolling back, merging, or otherwise apply the business logic needed to resolve the conflict.</source>
          <target state="translated">然后,你负责通过拯救异常来处理冲突,并回滚、合并或以其他方式应用解决冲突所需的业务逻辑。</target>
        </trans-unit>
        <trans-unit id="c9c901b99847a9e2147df0c384a702a028151eab" translate="yes" xml:space="preserve">
          <source>You've heard that Rails promotes &quot;convention over configuration&quot;. Default rendering is an excellent example of this. By default, controllers in Rails automatically render views with names that correspond to valid routes. For example, if you have this code in your &lt;code&gt;BooksController&lt;/code&gt; class:</source>
          <target state="translated">您已经听说过Rails提倡&amp;ldquo;按惯例进行配置&amp;rdquo;。默认渲染就是一个很好的例子。默认情况下，Rails中的控制器会自动渲染名称与有效路线相对应的视图。例如，如果您的 &lt;code&gt;BooksController&lt;/code&gt; 类中包含以下代码：</target>
        </trans-unit>
        <trans-unit id="e479d211e541fe121533f550dee3e8dc3b7f0597" translate="yes" xml:space="preserve">
          <source>Your application can store small amounts of data on the client - called cookies - that will be persisted across requests and even sessions. Rails provides easy access to cookies via the &lt;code&gt;cookies&lt;/code&gt; method, which - much like the &lt;code&gt;session&lt;/code&gt; - works like a hash:</source>
          <target state="translated">您的应用程序可以在客户端上存储少量数据（称为cookie），这些数据将在请求甚至会话中持久保存。Rails通过 &lt;code&gt;cookies&lt;/code&gt; 方法提供了对cookie的轻松访问，这与 &lt;code&gt;session&lt;/code&gt; 非常类似，就像哈希一样：</target>
        </trans-unit>
        <trans-unit id="f74da06d901df969e1ca6fb2618772d35a8664dd" translate="yes" xml:space="preserve">
          <source>Your application has a session for each user in which you can store small amounts of data that will be persisted between requests. The session is only available in the controller and the view and can use one of a number of different storage mechanisms:</source>
          <target state="translated">您的应用程序为每个用户提供了一个会话,您可以在其中存储少量数据,这些数据将在请求之间持久化。会话只在控制器和视图中可用,可以使用多种不同的存储机制之一。</target>
        </trans-unit>
        <trans-unit id="f593856f75c1aad418400c6709634b66c707e1f9" translate="yes" xml:space="preserve">
          <source>Your controller will receive &lt;code&gt;params[:company]&lt;/code&gt; as &lt;code&gt;{ &quot;name&quot; =&amp;gt; &quot;acme&quot;, &quot;address&quot; =&amp;gt; &quot;123 Carrot Street&quot; }&lt;/code&gt;.</source>
          <target state="translated">控制器将接收 &lt;code&gt;params[:company]&lt;/code&gt; 如 &lt;code&gt;{ &quot;name&quot; =&amp;gt; &quot;acme&quot;, &quot;address&quot; =&amp;gt; &quot;123 Carrot Street&quot; }&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3f9ae354556926182b3731cdf55708a8c5d75f06" translate="yes" xml:space="preserve">
          <source>Your cookies will be encrypted using your apps secret_key_base. This goes a step further than signed cookies in that encrypted cookies cannot be altered or read by users. This is the default starting in Rails 4.</source>
          <target state="translated">您的 cookie 将使用您的应用程序 secret_key_base 加密。这比已签名的 cookie 更进一步,因为加密的 cookie 无法被用户更改或读取。这是Rails 4的默认设置。</target>
        </trans-unit>
        <trans-unit id="9d3ee810a41c776762a57d7b47c01334cd6a04d1" translate="yes" xml:space="preserve">
          <source>Your database does not support transactions. Every Active Record database supports transactions except MySQL MyISAM. Use InnoDB, MaxDB, or NDB instead.</source>
          <target state="translated">你的数据库不支持事务。除了MySQL MyISAM,每个Active Record数据库都支持事务。请使用InnoDB、MaxDB或NDB来代替。</target>
        </trans-unit>
        <trans-unit id="124f5e00bd1bbfbdc4278e5da2840cb0c204c415" translate="yes" xml:space="preserve">
          <source>Your database: Rails defaults to converting data from your database into UTF-8 at the boundary. However, if your database is not using UTF-8 internally, it may not be able to store all characters that your users enter. For instance, if your database is using Latin-1 internally, and your user enters a Russian, Hebrew, or Japanese character, the data will be lost forever once it enters the database. If possible, use UTF-8 as the internal storage of your database.</source>
          <target state="translated">您的数据库。Rails默认在边界处将数据库中的数据转换为UTF-8。但是,如果您的数据库内部没有使用UTF-8,那么它可能无法存储用户输入的所有字符。例如,如果您的数据库内部使用的是Latin-1,而您的用户输入的是俄语、希伯来语或日语字符,那么这些数据一旦进入数据库就会永远丢失。如果可能的话,请使用UTF-8作为数据库的内部存储。</target>
        </trans-unit>
        <trans-unit id="2938c7a03b69cd87f9b1aa212b423aa26fbaac81" translate="yes" xml:space="preserve">
          <source>Your mailer classes - like every other part of your Rails application - should be tested to ensure that they are working as expected.</source>
          <target state="translated">您的邮件发送类--就像您的Rails应用程序的其他部分一样--应该进行测试,以确保它们按照预期的方式工作。</target>
        </trans-unit>
        <trans-unit id="ab42293e29e1ffb306c1403dd95144d664853a60" translate="yes" xml:space="preserve">
          <source>Your name</source>
          <target state="translated">您的姓名</target>
        </trans-unit>
        <trans-unit id="aeeb3d354b00626c8211572d585a88e90b421995" translate="yes" xml:space="preserve">
          <source>Your own &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tags are treated as cross-origin and blocked by default, too. If you really mean to load JavaScript from &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tags, you must now explicitly skip CSRF protection on those actions.</source>
          <target state="translated">您自己的 &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; 标记也被视为跨域标记，并且默认情况下也被阻止。如果确实要从 &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; 标记加载JavaScript ，则现在必须在这些操作上显式跳过CSRF保护。</target>
        </trans-unit>
        <trans-unit id="ed49c1afbc0be867d6962c73c3c84066660bff1e" translate="yes" xml:space="preserve">
          <source>Your primary database in the development environment is &amp;ldquo;my_application&amp;rdquo; but the Book model connects to a separate database called &amp;ldquo;library_db&amp;rdquo; (this can even be a database on a different machine).</source>
          <target state="translated">开发环境中的主要数据库是&amp;ldquo; my_application&amp;rdquo;，但Book模型连接到名为&amp;ldquo; library_db&amp;rdquo;的单独数据库（甚至可以是其他计算机上的数据库）。</target>
        </trans-unit>
        <trans-unit id="e575b4b962be144e9bd0a0a34c79568704539c00" translate="yes" xml:space="preserve">
          <source>Your scope can take arguments:</source>
          <target state="translated">你的范围可以接受参数。</target>
        </trans-unit>
        <trans-unit id="76b83c70cf41d41178e75bb589de1c3057228144" translate="yes" xml:space="preserve">
          <source>Your scope can utilize conditionals:</source>
          <target state="translated">你的范围可以利用条件。</target>
        </trans-unit>
        <trans-unit id="306d334515210a72e388684c16f2cb1ad2d86345" translate="yes" xml:space="preserve">
          <source>Your tests are run under &lt;code&gt;RAILS_ENV=test&lt;/code&gt;.</source>
          <target state="translated">您的测试在 &lt;code&gt;RAILS_ENV=test&lt;/code&gt; 下运行。</target>
        </trans-unit>
        <trans-unit id="5fa3760eb9f0094663d4fa4d25f6e8e7cc58d4d5" translate="yes" xml:space="preserve">
          <source>Your text editor: Most text editors (such as TextMate), default to saving files as UTF-8. If your text editor does not, this can result in special characters that you enter in your templates (such as &amp;eacute;) to appear as a diamond with a question mark inside in the browser. This also applies to your i18n translation files. Most editors that do not already default to UTF-8 (such as some versions of Dreamweaver) offer a way to change the default to UTF-8. Do so.</source>
          <target state="translated">您的文本编辑器：大多数文本编辑器（例如TextMate）默认将文件另存为UTF-8。如果您的文本编辑器不这样做，则可能会导致您在模板中输入的特殊字符（例如&amp;eacute;）在浏览器中显示为带有问号的菱形。这也适用于您的i18n翻译文件。大多数尚未默认为UTF-8的编辑器（例如某些版本的Dreamweaver）提供了一种将默认值更改为UTF-8的方法。这样做。</target>
        </trans-unit>
        <trans-unit id="3659661b6ab9cdb12729ba743a8a4b8128b34f3f" translate="yes" xml:space="preserve">
          <source>Zap! No more fruits_monkeys.yml file. We've specified the list of fruits on George's fixture, but we could've just as easily specified a list of monkeys on each fruit. As with &lt;code&gt;belongs_to&lt;/code&gt;, Active Record reflects on the fixture's model class and discovers the &lt;code&gt;has_and_belongs_to_many&lt;/code&gt; associations.</source>
          <target state="translated">ap！没有更多的fruits_monkeys.yml文件。我们已经在George的灯具上指定了水果列表，但是我们可以很容易地在每个水果上指定猴子列表。与 &lt;code&gt;belongs_to&lt;/code&gt; 一样，Active Record反映了灯具的模型类，并发现了 &lt;code&gt;has_and_belongs_to_many&lt;/code&gt; 关联。</target>
        </trans-unit>
        <trans-unit id="4c348f27332d02b4c11176b5b52567e1c4f49b9a" translate="yes" xml:space="preserve">
          <source>Zones#in_time_zone</source>
          <target state="translated">Zones#in_time_zone</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
