<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="rails">
    <body>
      <group id="rails">
        <trans-unit id="b4eb1f22db81e623421f4d78c8138c04486725ed" translate="yes" xml:space="preserve">
          <source>Directives are processed top to bottom, but the order in which files are included by &lt;code&gt;require_tree&lt;/code&gt; is unspecified. You should not rely on any particular order among those. If you need to ensure some particular JavaScript ends up above some other in the concatenated file, require the prerequisite file first in the manifest. Note that the family of &lt;code&gt;require&lt;/code&gt; directives prevents files from being included twice in the output.</source>
          <target state="translated">指令从上到下进行处理，但未指定 &lt;code&gt;require_tree&lt;/code&gt; 包含文件的顺序。您不应该依赖其中的任何特定顺序。如果您需要确保某些特定的JavaScript在连接文件中排在其他文件之后，请首先在清单中要求先决条件文件。请注意， &lt;code&gt;require&lt;/code&gt; 指令系列可防止文件两次包含在输出中。</target>
        </trans-unit>
        <trans-unit id="9f290f0a4a7894f6f2e5ea9ddc17bd20c3b3a271" translate="yes" xml:space="preserve">
          <source>Directly purges each associated attachment (i.e. destroys the blobs and attachments and deletes the files on the service).</source>
          <target state="translated">直接清除每个相关的附件(即销毁blobs和附件,删除服务上的文件)。</target>
        </trans-unit>
        <trans-unit id="074e8c491485071db054305184670f7f3efaad65" translate="yes" xml:space="preserve">
          <source>Directly purges the attachment (i.e. destroys the blob and attachment and deletes the file on the service).</source>
          <target state="translated">直接清除附件(即销毁blob和附件并删除服务上的文件)。</target>
        </trans-unit>
        <trans-unit id="6b5a06ae49acf38c1119aa226c68fad7228b22aa" translate="yes" xml:space="preserve">
          <source>Dirty</source>
          <target state="translated">Dirty</target>
        </trans-unit>
        <trans-unit id="5314e28c647f6674bd27ef504b7dfead2c075337" translate="yes" xml:space="preserve">
          <source>Dirty Tracking</source>
          <target state="translated">肮脏的跟踪</target>
        </trans-unit>
        <trans-unit id="806298347cd2bfa1ce2d909ae52c814f7d28211a" translate="yes" xml:space="preserve">
          <source>Dirty#changed</source>
          <target state="translated">Dirty#changed</target>
        </trans-unit>
        <trans-unit id="4a31dd0dcef21170b76963107994056e3f3dce29" translate="yes" xml:space="preserve">
          <source>Dirty#changed?</source>
          <target state="translated">Dirty#changed?</target>
        </trans-unit>
        <trans-unit id="3c0a940f3bec88dc8749bead74e2f10610a3e4c4" translate="yes" xml:space="preserve">
          <source>Dirty#changed_attributes</source>
          <target state="translated">Dirty#changed_attributes</target>
        </trans-unit>
        <trans-unit id="0696c1d04634e40d3ab077d2d4e452a743986d10" translate="yes" xml:space="preserve">
          <source>Dirty#changes</source>
          <target state="translated">Dirty#changes</target>
        </trans-unit>
        <trans-unit id="d22aea57e1b1f467872376922bb0917c5f168cce" translate="yes" xml:space="preserve">
          <source>Dirty#changes_applied</source>
          <target state="translated">Dirty#changes_applied</target>
        </trans-unit>
        <trans-unit id="e230f0e74ae9ddfb3e21fa5d4f0621a3c64bad08" translate="yes" xml:space="preserve">
          <source>Dirty#clear_attribute_changes</source>
          <target state="translated">Dirty#clear_attribute_changes</target>
        </trans-unit>
        <trans-unit id="b439d124f300c2239a49117f19e10af50cc59f2c" translate="yes" xml:space="preserve">
          <source>Dirty#clear_changes_information</source>
          <target state="translated">Dirty#clear_changes_information</target>
        </trans-unit>
        <trans-unit id="2c1ce144f5746236f2e23ee1a92fa3a5cc5424f4" translate="yes" xml:space="preserve">
          <source>Dirty#previous_changes</source>
          <target state="translated">Dirty#previous_changes</target>
        </trans-unit>
        <trans-unit id="3f3d36f0180fb2c21896acd4c1072dfa536cff2b" translate="yes" xml:space="preserve">
          <source>Dirty#restore_attributes</source>
          <target state="translated">Dirty#restore_attributes</target>
        </trans-unit>
        <trans-unit id="da61075fa8af939df52ebc5bf74e9546a68e5862" translate="yes" xml:space="preserve">
          <source>Disable the query cache within the block if Active Record is configured. If it's not, it will execute the given block.</source>
          <target state="translated">如果配置了Active Record,则禁用块内的查询缓存。如果没有,它将执行给定的块。</target>
        </trans-unit>
        <trans-unit id="3f3f720da8ca4a72c19822f84d83d5d52a965943" translate="yes" xml:space="preserve">
          <source>Disable the query cache within the block.</source>
          <target state="translated">禁用区块内的查询缓存。</target>
        </trans-unit>
        <trans-unit id="88b988863775d66d79251910283f0bc9f7f3263f" translate="yes" xml:space="preserve">
          <source>Disable the transaction wrapping this migration. You can still create your own transactions even after calling disable_ddl_transaction!</source>
          <target state="translated">禁用这次迁移的事务包装。即使在调用disable_ddl_transaction之后,你仍然可以创建自己的事务。</target>
        </trans-unit>
        <trans-unit id="ac88544ec580babb05933d4d59847c9225c6b5d9" translate="yes" xml:space="preserve">
          <source>Discard the job with no attempts to retry, if the exception is raised. This is useful when the subject of the job, like an Active Record, is no longer available, and the job is thus no longer relevant.</source>
          <target state="translated">如果出现异常,则放弃该作业,不尝试重试。当作业的主题(如活动记录)不再可用,因而作业不再相关时,这很有用。</target>
        </trans-unit>
        <trans-unit id="5e8cb7f0d0a8b905999d3b03131c4a532ac2b1ae" translate="yes" xml:space="preserve">
          <source>Discarding Files Stored During Integration Tests</source>
          <target state="translated">在集成测试期间丢弃存储的文件</target>
        </trans-unit>
        <trans-unit id="71e93b55cf38f9710ed64104c4734851c488b367" translate="yes" xml:space="preserve">
          <source>Discarding Files Stored During System Tests</source>
          <target state="translated">丢弃系统测试期间存储的文件</target>
        </trans-unit>
        <trans-unit id="985c13b18ea7f277beee597abd4cdb76bdb0140e" translate="yes" xml:space="preserve">
          <source>Disconnect all connections that have been idle for at least &lt;code&gt;minimum_idle&lt;/code&gt; seconds. Connections currently checked out, or that were checked in less than &lt;code&gt;minimum_idle&lt;/code&gt; seconds ago, are unaffected.</source>
          <target state="translated">断开所有空闲时间至少为 &lt;code&gt;minimum_idle&lt;/code&gt; 秒的连接。当前已检出的连接或在少于 &lt;code&gt;minimum_idle&lt;/code&gt; 秒之前检出的连接不受影响。</target>
        </trans-unit>
        <trans-unit id="600f69f667a3d2c6a38f9fecaff31dc88f11d2bc" translate="yes" xml:space="preserve">
          <source>Disconnect all currently idle connections. Connections currently checked out are unaffected.</source>
          <target state="translated">断开所有当前闲置的连接。当前签出的连接不受影响。</target>
        </trans-unit>
        <trans-unit id="3e9fc68e96bcf4934266c1f9022d52b1db4b4720" translate="yes" xml:space="preserve">
          <source>Disconnect all the connections identified by &lt;code&gt;identifiers&lt;/code&gt; on this server or any others via &lt;a href=&quot;../remoteconnections&quot;&gt;RemoteConnections&lt;/a&gt;.</source>
          <target state="translated">通过&lt;a href=&quot;../remoteconnections&quot;&gt;RemoteConnections&lt;/a&gt;断开此服务器或其他任何服务器上由 &lt;code&gt;identifiers&lt;/code&gt; 所有连接。</target>
        </trans-unit>
        <trans-unit id="eeb7f55665c5a68589a1ee4e645cf2fe5e3d00b4" translate="yes" xml:space="preserve">
          <source>Disconnects all connections in the pool, and clears the pool.</source>
          <target state="translated">断开池中的所有连接,并清空池。</target>
        </trans-unit>
        <trans-unit id="5045bcbb54dc703d7a853a70e5b34a774b381f77" translate="yes" xml:space="preserve">
          <source>Disconnects all currently idle connections.</source>
          <target state="translated">断开所有当前空闲的连接。</target>
        </trans-unit>
        <trans-unit id="92f3295bff5c7dae748b85bc1c46491603b9df6b" translate="yes" xml:space="preserve">
          <source>Disconnects from the database if already connected, and establishes a new connection with the database. Implementors should call super if they override the default implementation.</source>
          <target state="translated">如果已经连接,则断开与数据库的连接,并与数据库建立新的连接。如果实现者覆盖了默认的实现,应该调用super。</target>
        </trans-unit>
        <trans-unit id="a1338605102b4199d641abe8b14de7ee4353fbc2" translate="yes" xml:space="preserve">
          <source>Disconnects from the database if already connected. Otherwise, this method does nothing.</source>
          <target state="translated">如果已经连接,则断开与数据库的连接。否则,本方法不做任何操作。</target>
        </trans-unit>
        <trans-unit id="72e884c95987c0195a541492a003f41ac7609afe" translate="yes" xml:space="preserve">
          <source>Disk Service</source>
          <target state="translated">磁盘服务</target>
        </trans-unit>
        <trans-unit id="bd9e3046d1cd8b205e5fd59571e246078e52b260" translate="yes" xml:space="preserve">
          <source>DiskController</source>
          <target state="translated">DiskController</target>
        </trans-unit>
        <trans-unit id="7f7eeb518139a9b1bf37e39a1f38dd1dff812091" translate="yes" xml:space="preserve">
          <source>DiskController#show</source>
          <target state="translated">DiskController#show</target>
        </trans-unit>
        <trans-unit id="6b4cfab988dc5a71f15e800c061cfcb0e3dccc2c" translate="yes" xml:space="preserve">
          <source>DiskController#update</source>
          <target state="translated">DiskController#update</target>
        </trans-unit>
        <trans-unit id="048329b198fc04ca8de185908be0ed737901eb67" translate="yes" xml:space="preserve">
          <source>Dispatched for every file after form submission.</source>
          <target state="translated">表格提交后,对每份文件进行派遣。</target>
        </trans-unit>
        <trans-unit id="1f1448ff650022f5949e9be6e704e372eb09395e" translate="yes" xml:space="preserve">
          <source>Display an image Active Record in the browser:</source>
          <target state="translated">在浏览器中显示图像活动记录。</target>
        </trans-unit>
        <trans-unit id="5e4a95704020f7bb636ad1f48f7a72bb5c71b51c" translate="yes" xml:space="preserve">
          <source>Display aspect ratio</source>
          <target state="translated">显示宽高比</target>
        </trans-unit>
        <trans-unit id="c12086044ff340c263350e01c7b7ad5a3e6b40a8" translate="yes" xml:space="preserve">
          <source>Display the screenshot in the terminal using the iTerm image protocol (&lt;a href=&quot;https://iterm2.com/documentation-images.html&quot;&gt;iterm2.com/documentation-images.html&lt;/a&gt;).</source>
          <target state="translated">使用iTerm图像协议（&lt;a href=&quot;https://iterm2.com/documentation-images.html&quot;&gt;iterm2.com/documentation-images.html&lt;/a&gt;）在终端中显示屏幕截图。</target>
        </trans-unit>
        <trans-unit id="95caa049bd552e66b10fe40a99e4cc0849d71f96" translate="yes" xml:space="preserve">
          <source>Display the screenshot in the terminal, using the terminal artifact format (&lt;a href=&quot;https://buildkite.github.io/terminal-to-html/inline-images&quot;&gt;buildkite.github.io/terminal-to-html/inline-images&lt;/a&gt;/).</source>
          <target state="translated">使用终端工件格式（&lt;a href=&quot;https://buildkite.github.io/terminal-to-html/inline-images&quot;&gt;buildkite.github.io/terminal-to-html/inline-images&lt;/a&gt; /）在终端中显示屏幕截图。</target>
        </trans-unit>
        <trans-unit id="24580b75a476c24c6f7b5252db60b04b7604b062" translate="yes" xml:space="preserve">
          <source>Displaying Validation Errors in Views</source>
          <target state="translated">在视图中显示验证错误</target>
        </trans-unit>
        <trans-unit id="e0119d22af8806e9be14fe4995620b69bc3800b3" translate="yes" xml:space="preserve">
          <source>Displays an image which when clicked will submit the form.</source>
          <target state="translated">显示图像,点击后将提交表格。</target>
        </trans-unit>
        <trans-unit id="ef214d057b5994563efee1fa4ee1276f9727c765" translate="yes" xml:space="preserve">
          <source>Dissatisfying ways to separate small concerns</source>
          <target state="translated">分开小问题的令人不满意的方法。</target>
        </trans-unit>
        <trans-unit id="878dc54e263e3e1353be293df2a3054b72f42239" translate="yes" xml:space="preserve">
          <source>Divides the array into one or more subarrays based on a delimiting &lt;code&gt;value&lt;/code&gt; or the result of an optional block.</source>
          <target state="translated">根据定界 &lt;code&gt;value&lt;/code&gt; 或可选块的结果将数组分为一个或多个子数组。</target>
        </trans-unit>
        <trans-unit id="1fa7e077d8188d9e2b6462aab01ecddeb864f8c7" translate="yes" xml:space="preserve">
          <source>Divides this &lt;a href=&quot;duration&quot;&gt;Duration&lt;/a&gt; by a &lt;a href=&quot;../numeric&quot;&gt;Numeric&lt;/a&gt; and returns a new &lt;a href=&quot;duration&quot;&gt;Duration&lt;/a&gt;.</source>
          <target state="translated">将此&lt;a href=&quot;duration&quot;&gt;持续时间&lt;/a&gt;除以&lt;a href=&quot;../numeric&quot;&gt;数值，&lt;/a&gt;然后返回新的&lt;a href=&quot;duration&quot;&gt;Duration&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="63d83cad76dcd020deea93a245483eb761cc60b5" translate="yes" xml:space="preserve">
          <source>Do not add a primary key column</source>
          <target state="translated">不要添加主键列</target>
        </trans-unit>
        <trans-unit id="bccf03cd5b773a94a97e139cbc2d2f4e2e3f0c4f" translate="yes" xml:space="preserve">
          <source>Do not put secret information in cookie-based sessions!</source>
          <target state="translated">不要把秘密信息放在基于cookie的会话中!</target>
        </trans-unit>
        <trans-unit id="7041c9ed23100cf28324bcb37c32f1e4f90e5ee8" translate="yes" xml:space="preserve">
          <source>Do not simply replace &lt;code&gt;MultiJson.dump&lt;/code&gt; and &lt;code&gt;MultiJson.load&lt;/code&gt; with &lt;code&gt;JSON.dump&lt;/code&gt; and &lt;code&gt;JSON.load&lt;/code&gt;. These JSON gem APIs are meant for serializing and deserializing arbitrary Ruby objects and are generally &lt;a href=&quot;http://www.ruby-doc.org/stdlib-2.2.2/libdoc/json/rdoc/JSON.html#method-i-load&quot;&gt;unsafe&lt;/a&gt;.</source>
          <target state="translated">不要简单地将 &lt;code&gt;MultiJson.dump&lt;/code&gt; 和 &lt;code&gt;MultiJson.load&lt;/code&gt; 替换为 &lt;code&gt;JSON.dump&lt;/code&gt; 和 &lt;code&gt;JSON.load&lt;/code&gt; 。这些JSON gem API用于序列化和反序列化任意Ruby对象，通常&lt;a href=&quot;http://www.ruby-doc.org/stdlib-2.2.2/libdoc/json/rdoc/JSON.html#method-i-load&quot;&gt;不安全&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="423a790fb2f81f1e141f9064f18c268aa9c7f227" translate="yes" xml:space="preserve">
          <source>Do nothing.</source>
          <target state="translated">什么都不要做。</target>
        </trans-unit>
        <trans-unit id="71931fe42dd5d5cf77b6022013d730db7d876044" translate="yes" xml:space="preserve">
          <source>Do take special care about the &lt;strong&gt;order of your routes&lt;/strong&gt;, so this route declaration does not &quot;eat&quot; other ones. (You may want to add it directly before the &lt;code&gt;root :to&lt;/code&gt; declaration.)</source>
          <target state="translated">请特别注意&lt;strong&gt;您的路线顺序&lt;/strong&gt;，因此此路线声明不会&amp;ldquo;吃掉&amp;rdquo;其他路线。（您可能希望将其直接添加到 &lt;code&gt;root :to&lt;/code&gt; 声明之前。）</target>
        </trans-unit>
        <trans-unit id="2a35b8c3a828c6b50ebb9d495090ca5847cf7787" translate="yes" xml:space="preserve">
          <source>Do:</source>
          <target state="translated">Do:</target>
        </trans-unit>
        <trans-unit id="5299c4c4bbc608b1017f8aaf98c39c16a982f62f" translate="yes" xml:space="preserve">
          <source>Does the X-CSRF-Token header match the form_authenticity_token?</source>
          <target state="translated">X-CSRF-Token头是否符合form_authenticity_token?</target>
        </trans-unit>
        <trans-unit id="4616d655b82557a1563b6ada483487392a6b6bb1" translate="yes" xml:space="preserve">
          <source>Does the admin really have to access the interface from everywhere in the world? Think about &lt;em&gt;limiting the login to a bunch of source IP addresses&lt;/em&gt;. Examine request.remote_ip to find out about the user's IP address. This is not bullet-proof, but a great barrier. Remember that there might be a proxy in use, though.</source>
          <target state="translated">管理员真的必须从世界各地访问该界面吗？考虑&lt;em&gt;将登录限制为一堆源IP地址&lt;/em&gt;。检查request.remote_ip以了解有关用户的IP地址。这不是防弹的，而是很大的障碍。请记住，尽管有可能正在使用代理。</target>
        </trans-unit>
        <trans-unit id="e63a5f47c8f9c32570316ad46b71a8fd20be7987" translate="yes" xml:space="preserve">
          <source>Does the database for this adapter exist?</source>
          <target state="translated">该适配器的数据库是否存在?</target>
        </trans-unit>
        <trans-unit id="90d1deae566bfa7d693ef24050436a462b52209c" translate="yes" xml:space="preserve">
          <source>Does the form_authenticity_token match the given token value from the params?</source>
          <target state="translated">form_authenticity_token是否符合params中给定的token值?</target>
        </trans-unit>
        <trans-unit id="4832ca0836824e8ab952f69938ab83ada512a9c2" translate="yes" xml:space="preserve">
          <source>Does the same as &lt;code&gt;collection.create&lt;/code&gt; above, but raises &lt;code&gt;ActiveRecord::RecordInvalid&lt;/code&gt; if the record is invalid.</source>
          <target state="translated">与上面的 &lt;code&gt;collection.create&lt;/code&gt; 相同，但是如果记录无效，则引发 &lt;code&gt;ActiveRecord::RecordInvalid&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="992465380d228cefea3189ab8b0e8919094ec651" translate="yes" xml:space="preserve">
          <source>Does the same as &lt;code&gt;collection.create&lt;/code&gt;, but raises &lt;a href=&quot;../recordinvalid&quot;&gt;ActiveRecord::RecordInvalid&lt;/a&gt; if the record is invalid.</source>
          <target state="translated">与 &lt;code&gt;collection.create&lt;/code&gt; 相同，但是如果记录无效，则引发&lt;a href=&quot;../recordinvalid&quot;&gt;ActiveRecord :: RecordInvalid&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ccbe65de8de5ac0d4679175a156ecf5dc1035815" translate="yes" xml:space="preserve">
          <source>Does the same as &lt;code&gt;collection.create&lt;/code&gt;, but raises &lt;code&gt;ActiveRecord::RecordInvalid&lt;/code&gt; if the record is invalid.</source>
          <target state="translated">与 &lt;code&gt;collection.create&lt;/code&gt; 相同，但是如果记录无效，则引发 &lt;code&gt;ActiveRecord::RecordInvalid&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="47052af571c55dab393d2f6f1f645d34bb156d6c" translate="yes" xml:space="preserve">
          <source>Does the same as &lt;code&gt;create_association&lt;/code&gt; above, but raises &lt;code&gt;ActiveRecord::RecordInvalid&lt;/code&gt; if the record is invalid.</source>
          <target state="translated">与上面的 &lt;code&gt;create_association&lt;/code&gt; 相同，但是如果记录无效，则引发 &lt;code&gt;ActiveRecord::RecordInvalid&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9d15b08c40cc88fce13f7170273a15d782fe5048" translate="yes" xml:space="preserve">
          <source>Does the same as &lt;code&gt;create_association&lt;/code&gt;, but raises &lt;a href=&quot;../recordinvalid&quot;&gt;ActiveRecord::RecordInvalid&lt;/a&gt; if the record is invalid.</source>
          <target state="translated">与 &lt;code&gt;create_association&lt;/code&gt; 相同，但是如果记录无效，则引发&lt;a href=&quot;../recordinvalid&quot;&gt;ActiveRecord :: RecordInvalid&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ddeb2ee290c38742b9b43e510c3b82f82155eb63" translate="yes" xml:space="preserve">
          <source>Does this adapter support DDL rollbacks in transactions? That is, would CREATE TABLE or ALTER TABLE get rolled back by a transaction?</source>
          <target state="translated">这个适配器是否支持事务中的DDL回滚?也就是说,CREATE TABLE或ALTER TABLE会被事务回滚吗?</target>
        </trans-unit>
        <trans-unit id="79d14ae5255075c380e0fedf0a69811123ea79b2" translate="yes" xml:space="preserve">
          <source>Does this adapter support application-enforced advisory locking?</source>
          <target state="translated">该适配器是否支持应用强化咨询锁定?</target>
        </trans-unit>
        <trans-unit id="521c79b82eb453984b8c31a94aacba983752a62c" translate="yes" xml:space="preserve">
          <source>Does this adapter support creating foreign key constraints in the same statement as creating the table?</source>
          <target state="translated">这个适配器是否支持在创建表的同一语句中创建外键约束?</target>
        </trans-unit>
        <trans-unit id="f4b2fef2175ac999a9b2964e18ef8f689172a4b7" translate="yes" xml:space="preserve">
          <source>Does this adapter support creating foreign key constraints?</source>
          <target state="translated">该适配器是否支持创建外键约束?</target>
        </trans-unit>
        <trans-unit id="82eed933778b41a1ee1c6e018e44826f2f5faa72" translate="yes" xml:space="preserve">
          <source>Does this adapter support creating indexes in the same statement as creating the table?</source>
          <target state="translated">这个适配器是否支持在创建表的同一语句中创建索引?</target>
        </trans-unit>
        <trans-unit id="7758d6decfb9df5377e0881c73b7a7ed6c5b2391" translate="yes" xml:space="preserve">
          <source>Does this adapter support creating invalid constraints?</source>
          <target state="translated">该适配器是否支持创建无效约束?</target>
        </trans-unit>
        <trans-unit id="55586e05539456e29cbf88a26b13248b1196d8b0" translate="yes" xml:space="preserve">
          <source>Does this adapter support database extensions?</source>
          <target state="translated">该适配器是否支持数据库扩展?</target>
        </trans-unit>
        <trans-unit id="9e8cbe1039a0add9d6b2533f721c67ea577d677d" translate="yes" xml:space="preserve">
          <source>Does this adapter support datetime with precision?</source>
          <target state="translated">该适配器是否支持精确的日期时间?</target>
        </trans-unit>
        <trans-unit id="4eb203ef190989c33ec085c741bcc1d4c4e2aa5b" translate="yes" xml:space="preserve">
          <source>Does this adapter support explain?</source>
          <target state="translated">这个适配器是否支持解释?</target>
        </trans-unit>
        <trans-unit id="07e38d1cba66215779c568118967106883877bb2" translate="yes" xml:space="preserve">
          <source>Does this adapter support expression indices?</source>
          <target state="translated">该适配器是否支持表达式索引?</target>
        </trans-unit>
        <trans-unit id="02bba9c451a331c226f572d1b305e4e4faf4d70f" translate="yes" xml:space="preserve">
          <source>Does this adapter support foreign/external tables?</source>
          <target state="translated">该适配器是否支持外表/外部表?</target>
        </trans-unit>
        <trans-unit id="c90c24dc39fd27e62082a5f6c3f826b60d5cf23a" translate="yes" xml:space="preserve">
          <source>Does this adapter support index sort order?</source>
          <target state="translated">该适配器是否支持索引排序顺序?</target>
        </trans-unit>
        <trans-unit id="a83aebc48f4696ed46716c6287db17548da2e36e" translate="yes" xml:space="preserve">
          <source>Does this adapter support json data type?</source>
          <target state="translated">该适配器是否支持json数据类型?</target>
        </trans-unit>
        <trans-unit id="d9416ed9b6453a25c9c484b85053f6af2467fbfd" translate="yes" xml:space="preserve">
          <source>Does this adapter support materialized views?</source>
          <target state="translated">该适配器是否支持实体化视图?</target>
        </trans-unit>
        <trans-unit id="5722017b0f72ba1cfe51b2d010bb86f92e3b32b1" translate="yes" xml:space="preserve">
          <source>Does this adapter support metadata comments on database objects (tables, columns, indexes)?</source>
          <target state="translated">该适配器是否支持数据库对象(表、列、索引)的元数据注释?</target>
        </trans-unit>
        <trans-unit id="07d8d5301c93ced72a36e7b3930cce11cc76ed86" translate="yes" xml:space="preserve">
          <source>Does this adapter support multi-value insert?</source>
          <target state="translated">该适配器是否支持多值插入?</target>
        </trans-unit>
        <trans-unit id="f9aec6bdd4ccafd4a4495ee9f61ea9a8216f28c9" translate="yes" xml:space="preserve">
          <source>Does this adapter support optimizer hints?</source>
          <target state="translated">该适配器是否支持优化器提示?</target>
        </trans-unit>
        <trans-unit id="c230d75eaaec4e347c1032f3131a8791c974f6ac" translate="yes" xml:space="preserve">
          <source>Does this adapter support partial indices?</source>
          <target state="translated">该适配器是否支持部分索引?</target>
        </trans-unit>
        <trans-unit id="fc76d299342bb4a8119f0984a43bcd3cbfd11bae" translate="yes" xml:space="preserve">
          <source>Does this adapter support savepoints?</source>
          <target state="translated">该适配器是否支持保存点?</target>
        </trans-unit>
        <trans-unit id="25c4f7a0cfd9ff804b1d9eccbb5b4e60e1f89978" translate="yes" xml:space="preserve">
          <source>Does this adapter support setting the isolation level for a transaction?</source>
          <target state="translated">该适配器是否支持设置事务的隔离级别?</target>
        </trans-unit>
        <trans-unit id="b2488593b410dd51f3e974f20beb47378ad8de34" translate="yes" xml:space="preserve">
          <source>Does this adapter support views?</source>
          <target state="translated">该适配器是否支持视图?</target>
        </trans-unit>
        <trans-unit id="eb457f9e2dca4d86ec2c43dc22d48013d4e48157" translate="yes" xml:space="preserve">
          <source>Does this adapter support virtual columns?</source>
          <target state="translated">该适配器是否支持虚拟列?</target>
        </trans-unit>
        <trans-unit id="01e3f410978a2dd64b547bb14daef20eb5d37752" translate="yes" xml:space="preserve">
          <source>Don't be fooled by security by obfuscation and JavaScript security. Developer tools let you review and change every form's hidden fields. &lt;em&gt;JavaScript can be used to validate user input data, but certainly not to prevent attackers from sending malicious requests with unexpected values&lt;/em&gt;. The Firebug addon for Mozilla Firefox logs every request and may repeat and change them. That is an easy way to bypass any JavaScript validations. And there are even client-side proxies that allow you to intercept any request and response from and to the Internet.</source>
          <target state="translated">不要被混淆和JavaScript安全性所欺骗。开发人员工具可让您查看和更改每个表单的隐藏字段。&lt;em&gt;JavaScript可用于验证用户输入数据，但肯定不能防止攻击者发送带有意外值的恶意请求&lt;/em&gt;。 Mozilla Firefox的Firebug插件会记录每个请求，并可能重复并更改它们。这是绕过所有JavaScript验证的简单方法。甚至还有客户端代理，使您可以拦截来自Internet的任何请求和响应。</target>
        </trans-unit>
        <trans-unit id="f8752af95efd5e4d0cfab547ee31b5e6899a1302" translate="yes" xml:space="preserve">
          <source>Don't create associations that have the same name as &lt;a href=&quot;../core&quot;&gt;instance methods&lt;/a&gt; of &lt;code&gt;ActiveRecord::Base&lt;/code&gt;. Since the association adds a method with that name to its model, using an association with the same name as one provided by &lt;code&gt;ActiveRecord::Base&lt;/code&gt; will override the method inherited through &lt;code&gt;ActiveRecord::Base&lt;/code&gt; and will break things. For instance, &lt;code&gt;attributes&lt;/code&gt; and &lt;code&gt;connection&lt;/code&gt; would be bad choices for association names, because those names already exist in the list of &lt;code&gt;ActiveRecord::Base&lt;/code&gt; instance methods.</source>
          <target state="translated">不要创建具有相同名称的关联&lt;a href=&quot;../core&quot;&gt;实例方法&lt;/a&gt;的 &lt;code&gt;ActiveRecord::Base&lt;/code&gt; 。由于关联将一个具有该名称的方法添加到其模型中，因此使用与 &lt;code&gt;ActiveRecord::Base&lt;/code&gt; 提供的名称相同的关联将覆盖通过 &lt;code&gt;ActiveRecord::Base&lt;/code&gt; 继承的方法，并且会破坏工作。例如， &lt;code&gt;attributes&lt;/code&gt; 和 &lt;code&gt;connection&lt;/code&gt; 对于关联名称将是错误的选择，因为这些名称已经存在于 &lt;code&gt;ActiveRecord::Base&lt;/code&gt; 实例方法的列表中。</target>
        </trans-unit>
        <trans-unit id="b7adf9bf5b3848aa98d125daf7b318a481686d96" translate="yes" xml:space="preserve">
          <source>Don't forget to call &lt;code&gt;follow_redirect!&lt;/code&gt; if you plan to make subsequent requests after a redirect is made.</source>
          <target state="translated">不要忘了打电话给 &lt;code&gt;follow_redirect!&lt;/code&gt; 如果您打算在重定向后提出后续请求。</target>
        </trans-unit>
        <trans-unit id="330ebeda4136ab1daf881b32294677ad91af413c" translate="yes" xml:space="preserve">
          <source>Don't forget to review the difference, to see if there were any unexpected changes.</source>
          <target state="translated">不要忘了复习一下,看看有没有什么意外的变化。</target>
        </trans-unit>
        <trans-unit id="2becd45658e9213c324f75d075645044e82c3a46" translate="yes" xml:space="preserve">
          <source>Don't forget to run &lt;code&gt;bundle install&lt;/code&gt; as usual. By specifying it as a gem within the &lt;code&gt;Gemfile&lt;/code&gt;, Bundler will load it as such, parsing this &lt;code&gt;blorgh.gemspec&lt;/code&gt; file and requiring a file within the &lt;code&gt;lib&lt;/code&gt; directory called &lt;code&gt;lib/blorgh.rb&lt;/code&gt;. This file requires the &lt;code&gt;blorgh/engine.rb&lt;/code&gt; file (located at &lt;code&gt;lib/blorgh/engine.rb&lt;/code&gt;) and defines a base module called &lt;code&gt;Blorgh&lt;/code&gt;.</source>
          <target state="translated">不要忘记像往常一样运行 &lt;code&gt;bundle install&lt;/code&gt; 。通过在 &lt;code&gt;Gemfile&lt;/code&gt; 中将其指定为gem ，Bundler将按此方式加载它，解析此 &lt;code&gt;blorgh.gemspec&lt;/code&gt; 文件，并在 &lt;code&gt;lib&lt;/code&gt; 目录中需要一个名为 &lt;code&gt;lib/blorgh.rb&lt;/code&gt; 的文件。该文件需要 &lt;code&gt;blorgh/engine.rb&lt;/code&gt; 文件（位于 &lt;code&gt;lib/blorgh/engine.rb&lt;/code&gt; ），并定义了一个名为 &lt;code&gt;Blorgh&lt;/code&gt; 的基本模块。</target>
        </trans-unit>
        <trans-unit id="7d9f003bd3e9c61fc1c260a584538f163bcce17c" translate="yes" xml:space="preserve">
          <source>Don't forget to update the permitted params in your controller to also include the &lt;code&gt;_destroy&lt;/code&gt; field:</source>
          <target state="translated">不要忘记将控制器中允许的参数更新为也包含 &lt;code&gt;_destroy&lt;/code&gt; 字段：</target>
        </trans-unit>
        <trans-unit id="ff5ae065f2cb39ea45953c49fcdef22bfef43fe0" translate="yes" xml:space="preserve">
          <source>Don't give a deprecation warning on inspect since test/unit and error logs rely on it for diagnostics.</source>
          <target state="translated">不要在 inspect 上给出弃用警告,因为测试/单元和错误日志都依赖于它来进行诊断。</target>
        </trans-unit>
        <trans-unit id="941eddb7c55c4b0c375a3a184895962095c1d368" translate="yes" xml:space="preserve">
          <source>Don't try to correct user input using restricted lists:</source>
          <target state="translated">不要试图使用限制列表来纠正用户的输入。</target>
        </trans-unit>
        <trans-unit id="c3183a30dfc03b03912390381fa91238dfec15d7" translate="yes" xml:space="preserve">
          <source>Don't use &lt;code&gt;require&lt;/code&gt; because it will break the automatic reloading of classes in the development environment - using &lt;code&gt;require_dependency&lt;/code&gt; ensures that classes are loaded and unloaded in the correct manner.</source>
          <target state="translated">不要使用 &lt;code&gt;require&lt;/code&gt; ,因为它会破坏开发环境中类的自动重新加载-使用 &lt;code&gt;require_dependency&lt;/code&gt; 确保以正确的方式加载和卸载类。</target>
        </trans-unit>
        <trans-unit id="f59ea55e2b3d18d8dcc54d83515207083371df21" translate="yes" xml:space="preserve">
          <source>Don't use &lt;code&gt;validates_associated&lt;/code&gt; on both ends of your associations. They would call each other in an infinite loop.</source>
          <target state="translated">不要在关联的两端都使用 &lt;code&gt;validates_associated&lt;/code&gt; 。他们将在无限循环中相互调用。</target>
        </trans-unit>
        <trans-unit id="9fe53022776b66774766532dea4b88ca825f5762" translate="yes" xml:space="preserve">
          <source>Downcases all words except acronyms.</source>
          <target state="translated">除缩略语外,所有单词均为下括号。</target>
        </trans-unit>
        <trans-unit id="0ffee85a0948187406fe4a576118f3aac488b8f4" translate="yes" xml:space="preserve">
          <source>Download a dynamically-generated tarball:</source>
          <target state="translated">下载一个动态生成的压缩包。</target>
        </trans-unit>
        <trans-unit id="9b4592f9ae45a647155e857c8bbbe5e38c83f01e" translate="yes" xml:space="preserve">
          <source>Downloading</source>
          <target state="translated">Downloading</target>
        </trans-unit>
        <trans-unit id="092aff6faf0efb6004353a9fdd25b7face9bb283" translate="yes" xml:space="preserve">
          <source>Downloading Files</source>
          <target state="translated">下载文件</target>
        </trans-unit>
        <trans-unit id="f6f7e09cc462242cb2a8eaf9478dec3e3e913e59" translate="yes" xml:space="preserve">
          <source>Downloading#download_blob_to</source>
          <target state="translated">Downloading#download_blob_to</target>
        </trans-unit>
        <trans-unit id="9420eba24a3eb5cc1b3a8c7b549697a747f3dbfd" translate="yes" xml:space="preserve">
          <source>Downloading#download_blob_to_tempfile</source>
          <target state="translated">Downloading#download_blob_to_tempfile</target>
        </trans-unit>
        <trans-unit id="61f603a55288442407db469890acaad69938c082" translate="yes" xml:space="preserve">
          <source>Downloading#tempdir</source>
          <target state="translated">Downloading#tempdir</target>
        </trans-unit>
        <trans-unit id="38e238f1297297afc206bb2a168d45779653272a" translate="yes" xml:space="preserve">
          <source>Downloading::included</source>
          <target state="translated">Downloading::included</target>
        </trans-unit>
        <trans-unit id="e7c60316725827d27462a0bc9755f23a7eac2253" translate="yes" xml:space="preserve">
          <source>Downloads the blob to a tempfile on disk. Yields the tempfile.</source>
          <target state="translated">将blob下载到磁盘的tempfile中。产生tempfile。</target>
        </trans-unit>
        <trans-unit id="f92a5809979a99336b08c0f90f150361a6c524ff" translate="yes" xml:space="preserve">
          <source>Downloads the file associated with this blob. If no block is given, the entire file is read into memory and returned. That'll use a lot of RAM for very large files. If a block is given, then the download is streamed and yielded in chunks.</source>
          <target state="translated">下载与此blob相关的文件。如果没有给定块,则整个文件被读入内存并返回。对于非常大的文件来说,这将会使用大量的内存。如果给定了一个块,那么下载是以流媒体的方式进行的,并以块的形式产生。</target>
        </trans-unit>
        <trans-unit id="a1d85eff62cd535367dee87c8baa038bad6018cd" translate="yes" xml:space="preserve">
          <source>Drops a table from the database.</source>
          <target state="translated">从数据库中删除一张表。</target>
        </trans-unit>
        <trans-unit id="dff9be90d7eaacfa8d9e37d97537fd8b0f6b87d1" translate="yes" xml:space="preserve">
          <source>Drops the database specified on the &lt;code&gt;name&lt;/code&gt; attribute and creates it again using the provided &lt;code&gt;options&lt;/code&gt;.</source>
          <target state="translated">删除在 &lt;code&gt;name&lt;/code&gt; 属性上指定的数据库，并使用提供的 &lt;code&gt;options&lt;/code&gt; 再次创建它。</target>
        </trans-unit>
        <trans-unit id="725a1a51f84be7a83ee91c813ebf831f5295bdb8" translate="yes" xml:space="preserve">
          <source>Drops the join table specified by the given arguments. See &lt;a href=&quot;schemastatements#method-i-create_join_table&quot;&gt;create_join_table&lt;/a&gt; for details.</source>
          <target state="translated">删除由给定参数指定的联接表。有关详细信息，请参见&lt;a href=&quot;schemastatements#method-i-create_join_table&quot;&gt;create_join_table&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e60267d84b1de5dc4057dce9dbe2b0040be6de44" translate="yes" xml:space="preserve">
          <source>Drops the schema for the given schema name.</source>
          <target state="translated">丢弃给定模式名称的模式。</target>
        </trans-unit>
        <trans-unit id="0972c734eebe116aadc2a5c3ecf1944c142e5f5e" translate="yes" xml:space="preserve">
          <source>Duck-types as a Date-like class. See &lt;a href=&quot;object#method-i-acts_like-3F&quot;&gt;Object#acts_like?&lt;/a&gt;.</source>
          <target state="translated">鸭子类型作为类似Date的类。看到&lt;a href=&quot;object#method-i-acts_like-3F&quot;&gt;Object＃acts_like吗？&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1b8f51aee98e5ec767758073637664b2ad081021" translate="yes" xml:space="preserve">
          <source>Duck-types as a Time-like class. See &lt;a href=&quot;object#method-i-acts_like-3F&quot;&gt;Object#acts_like?&lt;/a&gt;.</source>
          <target state="translated">鸭子类型作为类时间类。看到&lt;a href=&quot;object#method-i-acts_like-3F&quot;&gt;Object＃acts_like吗？&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a4bb023601e5dc76d0e99ed84b6bf304423e1039" translate="yes" xml:space="preserve">
          <source>Due to frequent misuse of &lt;code&gt;^&lt;/code&gt; and &lt;code&gt;$&lt;/code&gt;, you need to pass the &lt;code&gt;multiline: true&lt;/code&gt; option in case you use any of these two anchors in the provided regular expression. In most cases, you should be using &lt;code&gt;\A&lt;/code&gt; and &lt;code&gt;\z&lt;/code&gt;.</source>
          <target state="translated">由于经常滥用 &lt;code&gt;^&lt;/code&gt; 和 &lt;code&gt;$&lt;/code&gt; ，因此您需要传递 &lt;code&gt;multiline: true&lt;/code&gt; 选项，以防在提供的正则表达式中使用这两个锚点中的任何一个。在大多数情况下，应该使用 &lt;code&gt;\A&lt;/code&gt; 和 &lt;code&gt;\z&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d9695aa53dd79b40c699dc464376cf7ac0f12e78" translate="yes" xml:space="preserve">
          <source>Due to the chmod operation &lt;code&gt;atomic_write&lt;/code&gt; performs, if the target file has an ACL set on it this ACL will be recalculated/modified.</source>
          <target state="translated">由于执行chmod操作 &lt;code&gt;atomic_write&lt;/code&gt; ，如果目标文件上设置了ACL，则将重新计算/修改该ACL。</target>
        </trans-unit>
        <trans-unit id="45ca117cb0e4b5bb41602bf4205a11f1da11a5d6" translate="yes" xml:space="preserve">
          <source>Due to the migration's name and the column specification after it, Rails will automatically know that you want to add a column to a specific table and write that into the migration for you. You don't need to tell it any more than this.</source>
          <target state="translated">由于迁移的名称和后面的列规范,Rails会自动知道你要在特定的表中添加一列,并为你将其写入迁移中。你不需要告诉它更多的内容。</target>
        </trans-unit>
        <trans-unit id="34657d2a9d129225cb1e6113454ff53114ac869f" translate="yes" xml:space="preserve">
          <source>Due to the way Active Record interprets parameters in combination with the way that Rack parses query parameters it was possible to issue unexpected database queries with &lt;code&gt;IS NULL&lt;/code&gt; where clauses. As a response to that security issue (&lt;a href=&quot;https://groups.google.com/forum/#!searchin/rubyonrails-security/deep_munge/rubyonrails-security/8SA-M3as7A8/Mr9fi9X4kNgJ&quot;&gt;CVE-2012-2660&lt;/a&gt;, &lt;a href=&quot;https://groups.google.com/forum/#!searchin/rubyonrails-security/deep_munge/rubyonrails-security/jILZ34tAHF4/7x0hLH-o0-IJ&quot;&gt;CVE-2012-2694&lt;/a&gt; and &lt;a href=&quot;https://groups.google.com/forum/#!searchin/rubyonrails-security/CVE-2012-2660/rubyonrails-security/c7jT-EeN9eI/L0u4e87zYGMJ&quot;&gt;CVE-2013-0155&lt;/a&gt;) &lt;code&gt;deep_munge&lt;/code&gt; method was introduced as a solution to keep Rails secure by default.</source>
          <target state="translated">由于Active Record解释参数的方式与Rack解析查询参数的方式相结合，因此可以使用 &lt;code&gt;IS NULL&lt;/code&gt; where子句发出意外的数据库查询。作为对该安全问题（&lt;a href=&quot;https://groups.google.com/forum/#!searchin/rubyonrails-security/deep_munge/rubyonrails-security/8SA-M3as7A8/Mr9fi9X4kNgJ&quot;&gt;CVE-2012-2660&lt;/a&gt;，&lt;a href=&quot;https://groups.google.com/forum/#!searchin/rubyonrails-security/deep_munge/rubyonrails-security/jILZ34tAHF4/7x0hLH-o0-IJ&quot;&gt;CVE-2012-2694&lt;/a&gt;和&lt;a href=&quot;https://groups.google.com/forum/#!searchin/rubyonrails-security/CVE-2012-2660/rubyonrails-security/c7jT-EeN9eI/L0u4e87zYGMJ&quot;&gt;CVE-2013-0155&lt;/a&gt;）的一种响应，采用了 &lt;code&gt;deep_munge&lt;/code&gt; 方法作为默认情况下保持Rails安全的解决方案。</target>
        </trans-unit>
        <trans-unit id="45317cd6a360a890200ff4aea363b110e758e71b" translate="yes" xml:space="preserve">
          <source>Dump the fixture data into a method in case you want to access it directly</source>
          <target state="translated">将夹具数据转储到一个方法中,以防您想直接访问它。</target>
        </trans-unit>
        <trans-unit id="66109e6dfd2344936d6f58d9fcf4ae1a60c91098" translate="yes" xml:space="preserve">
          <source>Dumping schema caches for multiple databases</source>
          <target state="translated">为多个数据库转储模式缓存。</target>
        </trans-unit>
        <trans-unit id="c4f962786c318e6d8a4694c8d188f5ab8c5b1f7f" translate="yes" xml:space="preserve">
          <source>Dumps objects in &lt;a href=&quot;json&quot;&gt;JSON&lt;/a&gt; (JavaScript &lt;a href=&quot;../object&quot;&gt;Object&lt;/a&gt; Notation). See &lt;a href=&quot;http://www.json.org&quot;&gt;www.json.org&lt;/a&gt; for more info.</source>
          <target state="translated">将对象转储为&lt;a href=&quot;json&quot;&gt;JSON&lt;/a&gt;（JavaScript &lt;a href=&quot;../object&quot;&gt;对象&lt;/a&gt;表示法）。有关更多信息，请参见&lt;a href=&quot;http://www.json.org&quot;&gt;www.json.org&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="345cb96f43977963753166fc9aa0d247e48c075c" translate="yes" xml:space="preserve">
          <source>Duped objects have no id assigned and are treated as new records. Note that this is a &amp;ldquo;shallow&amp;rdquo; copy as it copies the object's attributes only, not its associations. The extent of a &amp;ldquo;deep&amp;rdquo; copy is application specific and is therefore left to the application to implement according to its need. The dup method does not preserve the timestamps (created|updated)_(at|on).</source>
          <target state="translated">重复对象没有分配ID，将被视为新记录。请注意，这是一个&amp;ldquo;浅&amp;rdquo;副本，因为它仅复制对象的属性，而不是其关联。&amp;ldquo;深层&amp;rdquo;副本的范围是特定于应用程序的，因此留给应用程序根据其需要实施。dup方法不保留（创建|更新）_（at | on）的时间戳。</target>
        </trans-unit>
        <trans-unit id="6f75681e8d81ebb045245dae8d40dea9d892c025" translate="yes" xml:space="preserve">
          <source>Duplicating</source>
          <target state="translated">Duplicating</target>
        </trans-unit>
        <trans-unit id="1370004da76fa4f3b7a5180fd5436065ef4c7d5b" translate="yes" xml:space="preserve">
          <source>Duration</source>
          <target state="translated">Duration</target>
        </trans-unit>
        <trans-unit id="09b44e3660d40c66f8f2d4e9f9c8bed5fa2546fe" translate="yes" xml:space="preserve">
          <source>Duration (seconds)</source>
          <target state="translated">持续时间(秒)</target>
        </trans-unit>
        <trans-unit id="f8dec88b87fe41fbccbc7a44d87758d45618646f" translate="yes" xml:space="preserve">
          <source>Duration#%</source>
          <target state="translated">Duration#%</target>
        </trans-unit>
        <trans-unit id="e26c0b8bbe0851187e71d403be76ae5d6cdadec0" translate="yes" xml:space="preserve">
          <source>Duration#&amp;lt;=&amp;gt;</source>
          <target state="translated">Duration#&amp;lt;=&amp;gt;</target>
        </trans-unit>
        <trans-unit id="47b2a0ced71e66f037f05eea9eba34c4bfc4047c" translate="yes" xml:space="preserve">
          <source>Duration#*</source>
          <target state="translated">Duration#*</target>
        </trans-unit>
        <trans-unit id="997836a32ab23f5be77e30da8e9e672b9c923d4c" translate="yes" xml:space="preserve">
          <source>Duration#+</source>
          <target state="translated">Duration#+</target>
        </trans-unit>
        <trans-unit id="1e2797d79930007b4f277e69a4bc95776ff8877f" translate="yes" xml:space="preserve">
          <source>Duration#-</source>
          <target state="translated">Duration#-</target>
        </trans-unit>
        <trans-unit id="6a1ca03cff6654a8b6a8412630cd8d28a34d40dc" translate="yes" xml:space="preserve">
          <source>Duration#/</source>
          <target state="translated">Duration#/</target>
        </trans-unit>
        <trans-unit id="3c45ced6dffe7e61d67b3a06fceba1a31fe1e9bf" translate="yes" xml:space="preserve">
          <source>Duration#==</source>
          <target state="translated">Duration#==</target>
        </trans-unit>
        <trans-unit id="0a32b58a5e6bc49e728f8a3b172fe6655454ddf1" translate="yes" xml:space="preserve">
          <source>Duration#after</source>
          <target state="translated">Duration#after</target>
        </trans-unit>
        <trans-unit id="42e08005c8f6dd55a8e18345de7eb6fd4af6f2b6" translate="yes" xml:space="preserve">
          <source>Duration#ago</source>
          <target state="translated">Duration#ago</target>
        </trans-unit>
        <trans-unit id="77076f5737d953772adf2e196e3616b63d884458" translate="yes" xml:space="preserve">
          <source>Duration#before</source>
          <target state="translated">Duration#before</target>
        </trans-unit>
        <trans-unit id="d1a7641f42113a3de4f450a63f1be7729fe96a03" translate="yes" xml:space="preserve">
          <source>Duration#eql?</source>
          <target state="translated">Duration#eql?</target>
        </trans-unit>
        <trans-unit id="091758cff011f04552b5f1185ede7921c6363305" translate="yes" xml:space="preserve">
          <source>Duration#from_now</source>
          <target state="translated">Duration#from_now</target>
        </trans-unit>
        <trans-unit id="b8d9e965fb3263786bc11a3d40cfc31084dad12c" translate="yes" xml:space="preserve">
          <source>Duration#hash</source>
          <target state="translated">Duration#hash</target>
        </trans-unit>
        <trans-unit id="e072a21625623681758be577fc51e03066d1fef2" translate="yes" xml:space="preserve">
          <source>Duration#iso8601</source>
          <target state="translated">Duration#iso8601</target>
        </trans-unit>
        <trans-unit id="0dfa5653e27b3b9551d177a89d8ad236ce517900" translate="yes" xml:space="preserve">
          <source>Duration#parts</source>
          <target state="translated">Duration#parts</target>
        </trans-unit>
        <trans-unit id="40d7dbec34be539f8a9731cef6c68813b00fa65f" translate="yes" xml:space="preserve">
          <source>Duration#since</source>
          <target state="translated">Duration#since</target>
        </trans-unit>
        <trans-unit id="fc8febb017d9c7ce749de3172c7a2fda17130d18" translate="yes" xml:space="preserve">
          <source>Duration#to_i</source>
          <target state="translated">Duration#to_i</target>
        </trans-unit>
        <trans-unit id="2c247e108474207d3b0f5c2ecb0c691a98b693b8" translate="yes" xml:space="preserve">
          <source>Duration#to_s</source>
          <target state="translated">Duration#to_s</target>
        </trans-unit>
        <trans-unit id="b7945de93883a969aa7283840479a5c78fb95c8a" translate="yes" xml:space="preserve">
          <source>Duration#until</source>
          <target state="translated">Duration#until</target>
        </trans-unit>
        <trans-unit id="bbdffaa148637456798694aaa0f696471c7c1db9" translate="yes" xml:space="preserve">
          <source>Duration#value</source>
          <target state="translated">Duration#value</target>
        </trans-unit>
        <trans-unit id="c2b9e389b6243b24ad43949ead5053aa6077fd7f" translate="yes" xml:space="preserve">
          <source>Duration::build</source>
          <target state="translated">Duration::build</target>
        </trans-unit>
        <trans-unit id="21341c3232d338483355ac0ed95cb9df5bcd8b5f" translate="yes" xml:space="preserve">
          <source>Duration::parse</source>
          <target state="translated">Duration::parse</target>
        </trans-unit>
        <trans-unit id="0fed9c72bd4c832820c4a574688a05097012a340" translate="yes" xml:space="preserve">
          <source>Durations can be added to and subtracted from dates:</source>
          <target state="translated">可以从日期中添加或减去持续时间。</target>
        </trans-unit>
        <trans-unit id="29e45a360779a8a0dec64360e0c21e522f6258ff" translate="yes" xml:space="preserve">
          <source>Durations can be added to and subtracted from datetimes:</source>
          <target state="translated">可以从日期时间中添加或减去持续时间。</target>
        </trans-unit>
        <trans-unit id="0d0ac3829e11b020b4656df58b2881123674c99f" translate="yes" xml:space="preserve">
          <source>Durations can be added to and subtracted from time objects:</source>
          <target state="translated">持续时间可以加到时间对象上,也可以从时间对象上减去。</target>
        </trans-unit>
        <trans-unit id="54a17512123660cd42ea021c319e5f116ad2cfb6" translate="yes" xml:space="preserve">
          <source>During the normal operation of a Rails application, objects may be created, updated, and destroyed. Active Record provides hooks into this &lt;em&gt;object life cycle&lt;/em&gt; so that you can control your application and its data.</source>
          <target state="translated">在Rails应用程序的正常运行期间，可能会创建，更新和销毁对象。Active Record提供了该&lt;em&gt;对象生命周期的&lt;/em&gt;挂钩，以便您可以控制应用程序及其数据。</target>
        </trans-unit>
        <trans-unit id="f56abd5511d0a2cff8b383170f9bbbb6e4af9d3c" translate="yes" xml:space="preserve">
          <source>During the precompilation phase an SHA256 is generated from the contents of the compiled files, and inserted into the filenames as they are written to disk. These fingerprinted names are used by the Rails helpers in place of the manifest name.</source>
          <target state="translated">在预编译阶段,会从编译文件的内容中生成一个SHA256,并在文件名写入磁盘时将其插入其中。这些指纹名称被Rails助手用来代替manifest名称。</target>
        </trans-unit>
        <trans-unit id="e4f64096177ea8a14d10eab478194cb8b568c8a4" translate="yes" xml:space="preserve">
          <source>During the processing of the inbound email, the status will be tracked. Before processing begins, the email will normally have the &lt;code&gt;pending&lt;/code&gt; status. Once processing begins, just before callbacks and the &lt;code&gt;#process&lt;/code&gt; method is called, the status is changed to &lt;code&gt;processing&lt;/code&gt;. If processing is allowed to complete, the status is changed to &lt;code&gt;delivered&lt;/code&gt;. If a bounce is triggered, then &lt;code&gt;bounced&lt;/code&gt;. If an unhandled exception is bubbled up, then &lt;code&gt;failed&lt;/code&gt;.</source>
          <target state="translated">在处理入站电子邮件期间，将跟踪状态。在开始处理之前，电子邮件通常将处于 &lt;code&gt;pending&lt;/code&gt; 状态。处理开始后，即在回调和 &lt;code&gt;#process&lt;/code&gt; 方法被调用之前，状态更改为 &lt;code&gt;processing&lt;/code&gt; 。如果允许处理完成，则状态更改为 &lt;code&gt;delivered&lt;/code&gt; 。如果触发弹跳，则 &lt;code&gt;bounced&lt;/code&gt; 。如果未处理的异常冒出，则 &lt;code&gt;failed&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c0e18d151e6c159495620ca34c70a6c5b3237e24" translate="yes" xml:space="preserve">
          <source>During the second half of 2007, there were 88 vulnerabilities reported in Mozilla browsers, 22 in Safari, 18 in IE, and 12 in Opera. The &lt;a href=&quot;http://eval.symantec.com/mktginfo/enterprise/white_papers/b-whitepaper_internet_security_threat_report_xiii_04-2008.en-us.pdf&quot;&gt;Symantec Global Internet Security threat report&lt;/a&gt; also documented 239 browser plug-in vulnerabilities in the last six months of 2007. &lt;a href=&quot;http://pandalabs.pandasecurity.com/mpack-uncovered/&quot;&gt;Mpack&lt;/a&gt; is a very active and up-to-date attack framework which exploits these vulnerabilities. For criminal hackers, it is very attractive to exploit an SQL-Injection vulnerability in a web application framework and insert malicious code in every textual table column. In April 2008 more than 510,000 sites were hacked like this, among them the British government, United Nations, and many more high profile targets.</source>
          <target state="translated">在2007年下半年，Mozilla浏览器中报告了88个漏洞，Safari中报告了22个漏洞，IE中报告了18个漏洞，Opera中报告了12个漏洞。在&lt;a href=&quot;http://eval.symantec.com/mktginfo/enterprise/white_papers/b-whitepaper_internet_security_threat_report_xiii_04-2008.en-us.pdf&quot;&gt;赛门铁克全球互联网安全威胁报告&lt;/a&gt;还记录了239浏览器插件，在过去六个月的2007年的漏洞&lt;a href=&quot;http://pandalabs.pandasecurity.com/mpack-uncovered/&quot;&gt;MPack，还将&lt;/a&gt;是一个非常活跃和最多最新攻击框架，利用这些漏洞。对于犯罪黑客而言，利用Web应用程序框架中的SQL注入漏洞并将恶意代码插入每个文本表列非常有吸引力。在2008年4月，有超过51万个站点遭到了这样的黑客攻击，其中包括英国政府，联合国以及许多其他知名目标。</target>
        </trans-unit>
        <trans-unit id="83c00f17cc1b1966754ccb154ff79ddaed600527" translate="yes" xml:space="preserve">
          <source>Dynamic Finders</source>
          <target state="translated">动态搜索器</target>
        </trans-unit>
        <trans-unit id="f68c1eed8a5b13c48c7ec75c21b7357e122568cd" translate="yes" xml:space="preserve">
          <source>Dynamic Segments</source>
          <target state="translated">动态段</target>
        </trans-unit>
        <trans-unit id="733c8456ebc6bc6df1aeb57f372f8ec7a993cccc" translate="yes" xml:space="preserve">
          <source>Dynamic attribute-based finders</source>
          <target state="translated">基于属性的动态查找器</target>
        </trans-unit>
        <trans-unit id="11ae3ba0c59f05baca348e47713ac96a99886720" translate="yes" xml:space="preserve">
          <source>Dynamic attribute-based finders are a mildly deprecated way of getting (and/or creating) objects by simple queries without turning to SQL. They work by appending the name of an attribute to &lt;code&gt;find_by_&lt;/code&gt; like &lt;code&gt;Person.find_by_user_name&lt;/code&gt;. Instead of writing &lt;code&gt;Person.find_by(user_name: user_name)&lt;/code&gt;, you can use &lt;code&gt;Person.find_by_user_name(user_name)&lt;/code&gt;.</source>
          <target state="translated">基于动态属性的查找器是通过不带SQL的简单查询获取（和/或创建）对象的一种不建议使用的方法。它们通过将属性名称附加到 &lt;code&gt;find_by_&lt;/code&gt; &lt;code&gt;Person.find_by_user_name&lt;/code&gt; 工作，例如Person.find_by_user_name。您可以使用 &lt;code&gt;Person.find_by_user_name(user_name)&lt;/code&gt; 代替编写 &lt;code&gt;Person.find_by(user_name: user_name)&lt;/code&gt; user_name）。</target>
        </trans-unit>
        <trans-unit id="a58a10333a817337c510676f32925aefaafb1c1d" translate="yes" xml:space="preserve">
          <source>Dynamic fixtures with</source>
          <target state="translated">动态夹具与</target>
        </trans-unit>
        <trans-unit id="fe41360d436a069c77566ee0b8d0ec4ea6acb912" translate="yes" xml:space="preserve">
          <source>Dynamic request matching</source>
          <target state="translated">动态请求匹配</target>
        </trans-unit>
        <trans-unit id="97aa4c35888bbc9904b7ce614b6b953ecd8e12aa" translate="yes" xml:space="preserve">
          <source>Dynamic web applications usually build pages with a variety of components not all of which have the same caching characteristics. When different parts of the page need to be cached and expired separately you can use Fragment Caching.</source>
          <target state="translated">动态的Web应用通常会构建具有各种组件的页面,并不是所有的组件都具有相同的缓存特性。当页面的不同部分需要分别缓存和过期时,你可以使用片段缓存。</target>
        </trans-unit>
        <trans-unit id="f5657fba145a29885c79e6bb48c5399dea9be007" translate="yes" xml:space="preserve">
          <source>E.g., the following first tries to translate the key &lt;code&gt;:missing&lt;/code&gt; and then the key &lt;code&gt;:also_missing.&lt;/code&gt; As both do not yield a result, the string &quot;Not here&quot; will be returned:</source>
          <target state="translated">例如，以下内容首先尝试翻译 &lt;code&gt;:missing&lt;/code&gt; 键，然后再翻译 &lt;code&gt;:also_missing.&lt;/code&gt; 键。由于两者均未产生结果，因此将返回字符串&amp;ldquo; Not here&amp;rdquo;：</target>
        </trans-unit>
        <trans-unit id="5c631f17e65e0c38b7ad57b2882c2f9148ff8b3e" translate="yes" xml:space="preserve">
          <source>EMPTY_ARRAY</source>
          <target state="translated">EMPTY_ARRAY</target>
        </trans-unit>
        <trans-unit id="22484388f6414226d6b7b69a73cac7707bd9dcdd" translate="yes" xml:space="preserve">
          <source>EMPTY_HASH</source>
          <target state="translated">EMPTY_HASH</target>
        </trans-unit>
        <trans-unit id="df04091edb728ce7c5976e8034d0309a8db5de88" translate="yes" xml:space="preserve">
          <source>ENCODED_BLANKS</source>
          <target state="translated">ENCODED_BLANKS</target>
        </trans-unit>
        <trans-unit id="123db01616ae893c74a6bce3290f05dff40b09af" translate="yes" xml:space="preserve">
          <source>ENCRYPTED_COOKIE_CIPHER</source>
          <target state="translated">ENCRYPTED_COOKIE_CIPHER</target>
        </trans-unit>
        <trans-unit id="5493fc703229265b50dd603a06ccd61b019bbe13" translate="yes" xml:space="preserve">
          <source>ENCRYPTED_COOKIE_SALT</source>
          <target state="translated">ENCRYPTED_COOKIE_SALT</target>
        </trans-unit>
        <trans-unit id="55303e0d565f956497053eebfbb90447f26d8d70" translate="yes" xml:space="preserve">
          <source>ENCRYPTED_SIGNED_COOKIE_SALT</source>
          <target state="translated">ENCRYPTED_SIGNED_COOKIE_SALT</target>
        </trans-unit>
        <trans-unit id="39a4a4584ae2892a45e34a2fc2326c7aeea651aa" translate="yes" xml:space="preserve">
          <source>ENUM values can't be dropped currently. You can read why &lt;a href=&quot;https://www.postgresql.org/message-id/29F36C7C98AB09499B1A209D48EAA615B7653DBC8A@mail2a.alliedtesting.com&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">目前无法删除ENUM值。您可以&lt;a href=&quot;https://www.postgresql.org/message-id/29F36C7C98AB09499B1A209D48EAA615B7653DBC8A@mail2a.alliedtesting.com&quot;&gt;在这里&lt;/a&gt;阅读原因。</target>
        </trans-unit>
        <trans-unit id="48b9d6e86b0b225a5a69a769d4cf524608050356" translate="yes" xml:space="preserve">
          <source>ENV_METHODS</source>
          <target state="translated">ENV_METHODS</target>
        </trans-unit>
        <trans-unit id="2859d8584ea8c10b85a549c283d13f20ca15f6d8" translate="yes" xml:space="preserve">
          <source>ERB</source>
          <target state="translated">ERB</target>
        </trans-unit>
        <trans-unit id="0e97c9043580ce7d05c27b2762984b51031e1686" translate="yes" xml:space="preserve">
          <source>ERB allows you to embed Ruby code within templates. The YAML fixture format is pre-processed with ERB when Rails loads fixtures. This allows you to use Ruby to help you generate some sample data. For example, the following code generates a thousand users:</source>
          <target state="translated">ERB允许你在模板中嵌入Ruby代码。当Rails加载夹具时,YAML夹具格式会被ERB预处理。这允许你使用Ruby来帮助你生成一些样本数据。例如,下面的代码可以生成一千个用户。</target>
        </trans-unit>
        <trans-unit id="3a5dfd275ff2454e177db7aac7dca9b213289a76" translate="yes" xml:space="preserve">
          <source>ERB::Util</source>
          <target state="translated">ERB::Util</target>
        </trans-unit>
        <trans-unit id="0896f62d6d9ccbcefd87b1eb853f6ef2fd1e70d1" translate="yes" xml:space="preserve">
          <source>ER_CANNOT_ADD_FOREIGN</source>
          <target state="translated">ER_CANNOT_ADD_FOREIGN</target>
        </trans-unit>
        <trans-unit id="163091c84801711301a8e7ad4e09e4388f6efecc" translate="yes" xml:space="preserve">
          <source>ER_CANNOT_CREATE_TABLE</source>
          <target state="translated">ER_CANNOT_CREATE_TABLE</target>
        </trans-unit>
        <trans-unit id="e7ae3550307b816e5bf924801d7c0f5632363a38" translate="yes" xml:space="preserve">
          <source>ER_DATA_TOO_LONG</source>
          <target state="translated">ER_DATA_TOO_LONG</target>
        </trans-unit>
        <trans-unit id="a292993b1dd8419979c2f30a85eb342c63f2de90" translate="yes" xml:space="preserve">
          <source>ER_DO_NOT_HAVE_DEFAULT</source>
          <target state="translated">ER_DO_NOT_HAVE_DEFAULT</target>
        </trans-unit>
        <trans-unit id="13b7cd8f7b89497549422e84d877cd1d6d418907" translate="yes" xml:space="preserve">
          <source>ER_DUP_ENTRY</source>
          <target state="translated">ER_DUP_ENTRY</target>
        </trans-unit>
        <trans-unit id="d2dad7489363846e69940863dfa0e5ebba66c4e0" translate="yes" xml:space="preserve">
          <source>ER_FK_INCOMPATIBLE_COLUMNS</source>
          <target state="translated">ER_FK_INCOMPATIBLE_COLUMNS</target>
        </trans-unit>
        <trans-unit id="7cf7ceebe2bc21aae5ffd3db898991faeeac33f9" translate="yes" xml:space="preserve">
          <source>ER_LOCK_DEADLOCK</source>
          <target state="translated">ER_LOCK_DEADLOCK</target>
        </trans-unit>
        <trans-unit id="c2ec2faad0e1eea9134946d386565fc626b7064c" translate="yes" xml:space="preserve">
          <source>ER_LOCK_WAIT_TIMEOUT</source>
          <target state="translated">ER_LOCK_WAIT_TIMEOUT</target>
        </trans-unit>
        <trans-unit id="f93bde7ed3cc79159dba18652513fd878726a1e2" translate="yes" xml:space="preserve">
          <source>ER_NOT_NULL_VIOLATION</source>
          <target state="translated">ER_NOT_NULL_VIOLATION</target>
        </trans-unit>
        <trans-unit id="7af01830eaef67599967a844de73924e514a56b1" translate="yes" xml:space="preserve">
          <source>ER_NO_REFERENCED_ROW</source>
          <target state="translated">ER_NO_REFERENCED_ROW</target>
        </trans-unit>
        <trans-unit id="071ca8ae424c8fd08f6e254281b454c4fdaee3b2" translate="yes" xml:space="preserve">
          <source>ER_NO_REFERENCED_ROW_2</source>
          <target state="translated">ER_NO_REFERENCED_ROW_2</target>
        </trans-unit>
        <trans-unit id="184734755842519c06a205bd926e709a74dd4f4d" translate="yes" xml:space="preserve">
          <source>ER_OUT_OF_RANGE</source>
          <target state="translated">ER_OUT_OF_RANGE</target>
        </trans-unit>
        <trans-unit id="7d0aee09634274bd7bfd445c6cf0c663f85170d5" translate="yes" xml:space="preserve">
          <source>ER_QUERY_INTERRUPTED</source>
          <target state="translated">ER_QUERY_INTERRUPTED</target>
        </trans-unit>
        <trans-unit id="4c2bc5f5a078b948702a23d7ed148601dde4c12b" translate="yes" xml:space="preserve">
          <source>ER_QUERY_TIMEOUT</source>
          <target state="translated">ER_QUERY_TIMEOUT</target>
        </trans-unit>
        <trans-unit id="0f1e872b7eff6185618aedbb5b85eb48ecb29dc1" translate="yes" xml:space="preserve">
          <source>ER_ROW_IS_REFERENCED</source>
          <target state="translated">ER_ROW_IS_REFERENCED</target>
        </trans-unit>
        <trans-unit id="d891596401568b0a0b64e38c1bf47ca0e392a4b4" translate="yes" xml:space="preserve">
          <source>ER_ROW_IS_REFERENCED_2</source>
          <target state="translated">ER_ROW_IS_REFERENCED_2</target>
        </trans-unit>
        <trans-unit id="70ad8b294efaedbe6a1e59add42766e2a16a26a1" translate="yes" xml:space="preserve">
          <source>ESCAPE_KEY_CHARS</source>
          <target state="translated">ESCAPE_KEY_CHARS</target>
        </trans-unit>
        <trans-unit id="1dee7dc80b0ccd9c50d4278650e1686e85cd585f" translate="yes" xml:space="preserve">
          <source>EVENT_NAME</source>
          <target state="translated">EVENT_NAME</target>
        </trans-unit>
        <trans-unit id="55f4d66e5f356667218b9a5021677bf4bac7eb0d" translate="yes" xml:space="preserve">
          <source>EXABYTE</source>
          <target state="translated">EXABYTE</target>
        </trans-unit>
        <trans-unit id="21202e46aca74d795eece8945ec8e8b1522daa55" translate="yes" xml:space="preserve">
          <source>EXCLUDE_PARAMETERS</source>
          <target state="translated">EXCLUDE_PARAMETERS</target>
        </trans-unit>
        <trans-unit id="9a673a6981a22d79b67046ad1463de973c3c163b" translate="yes" xml:space="preserve">
          <source>EXTENSION_LOOKUP</source>
          <target state="translated">EXTENSION_LOOKUP</target>
        </trans-unit>
        <trans-unit id="eca35f3afd9bb8358d3822cf7d57622041389896" translate="yes" xml:space="preserve">
          <source>Each action results in a response, which holds the headers and document to be sent to the user's browser. The actual response object is generated automatically through the use of renders and redirects and requires no user intervention.</source>
          <target state="translated">每一个动作都会产生一个响应,它包含了要发送给用户浏览器的标题和文档。实际的响应对象是通过使用渲染和重定向自动生成的,不需要用户干预。</target>
        </trans-unit>
        <trans-unit id="4af94e6f91869e51828396f28c16655ea7074187" translate="yes" xml:space="preserve">
          <source>Each channel can then again be streaming zero or more broadcastings. A broadcasting is a pubsub link where anything transmitted by the broadcaster is sent directly to the channel subscribers who are streaming that named broadcasting.</source>
          <target state="translated">然后,每个频道又可以是零或多个广播流。一个广播是一个pubsub链接,任何由广播公司传输的东西都会直接发送到正在流式传输该命名广播的频道用户。</target>
        </trans-unit>
        <trans-unit id="b34705548fe49e7f38372207cb5e35a0f5b3560e" translate="yes" xml:space="preserve">
          <source>Each comment belongs to one article.</source>
          <target state="translated">每条评论属于一篇文章。</target>
        </trans-unit>
        <trans-unit id="5804a881d5125e80dbda299575002107f234e1b2" translate="yes" xml:space="preserve">
          <source>Each consumer can in turn subscribe to multiple cable channels. Each channel encapsulates a logical unit of work, similar to what a controller does in a regular MVC setup. For example, you could have a &lt;code&gt;ChatChannel&lt;/code&gt; and an &lt;code&gt;AppearancesChannel&lt;/code&gt;, and a consumer could be subscribed to either or to both of these channels. At the very least, a consumer should be subscribed to one channel.</source>
          <target state="translated">每个消费者可以依次订阅多个有线频道。每个通道封装一个逻辑工作单元，类似于控制器在常规MVC设置中所做的工作。例如，您可能有一个 &lt;code&gt;ChatChannel&lt;/code&gt; 和 &lt;code&gt;AppearancesChannel&lt;/code&gt; ，并且消费者可以订阅这两个频道中的一个或两个。至少，消费者应该订阅一个频道。</target>
        </trans-unit>
        <trans-unit id="93e15c1febcd000e010d9dd48e40cea295711dd7" translate="yes" xml:space="preserve">
          <source>Each environment's configuration can be modified similarly. In this case, we can modify our test environment by changing the options found in &lt;code&gt;config/environments/test.rb&lt;/code&gt;.</source>
          <target state="translated">可以类似地修改每个环境的配置。在这种情况下，我们可以通过更改 &lt;code&gt;config/environments/test.rb&lt;/code&gt; 中的选项来修改测试环境。</target>
        </trans-unit>
        <trans-unit id="62fff8ae57d2602dbb6fa8fec76fb04c47b16f21" translate="yes" xml:space="preserve">
          <source>Each fixture is given a name followed by an indented list of colon-separated key/value pairs. Records are typically separated by a blank line. You can place comments in a fixture file by using the # character in the first column.</source>
          <target state="translated">每个固定装置都有一个名称,后面是一个以冒号分隔的键/值对的缩进列表。记录通常由空行分隔。您可以通过在第一列中使用#字符在夹具文件中放置注释。</target>
        </trans-unit>
        <trans-unit id="1c3c27c173a90e43c42915cf6e254e21301a97c3" translate="yes" xml:space="preserve">
          <source>Each helper accepts an arbitrary number of attribute names, so with a single line of code you can add the same kind of validation to several attributes.</source>
          <target state="translated">每个辅助程序都可以接受任意数量的属性名,所以只需一行代码就可以为多个属性添加同一种验证。</target>
        </trans-unit>
        <trans-unit id="f30a5229075bb5840d6cfd30ff769ef1b9d193fc" translate="yes" xml:space="preserve">
          <source>Each instance of the &lt;code&gt;Author&lt;/code&gt; model will have these methods:</source>
          <target state="translated">&lt;code&gt;Author&lt;/code&gt; 模型的每个实例将具有以下方法：</target>
        </trans-unit>
        <trans-unit id="c720b8fcee7bdf8bf56ea9268cd91fb8e5711bd8" translate="yes" xml:space="preserve">
          <source>Each instance of the &lt;code&gt;Book&lt;/code&gt; model will have these methods:</source>
          <target state="translated">&lt;code&gt;Book&lt;/code&gt; 模型的每个实例将具有以下方法：</target>
        </trans-unit>
        <trans-unit id="5258e30e47c48c54ba567cd490ba2893cbbe753b" translate="yes" xml:space="preserve">
          <source>Each instance of the &lt;code&gt;Part&lt;/code&gt; model will have these methods:</source>
          <target state="translated">&lt;code&gt;Part&lt;/code&gt; 模型的每个实例将具有以下方法：</target>
        </trans-unit>
        <trans-unit id="8c545528ae3300684abb7def65a58a9aa60b111c" translate="yes" xml:space="preserve">
          <source>Each instance of the &lt;code&gt;Supplier&lt;/code&gt; model will have these methods:</source>
          <target state="translated">&lt;code&gt;Supplier&lt;/code&gt; 模型的每个实例将具有以下方法：</target>
        </trans-unit>
        <trans-unit id="1f3e37ed7b979503b80c75083ac3e84e70e381f0" translate="yes" xml:space="preserve">
          <source>Each job uses the &lt;code&gt;I18n.locale&lt;/code&gt; set when the job was created. Useful if you send emails asynchronously:</source>
          <target state="translated">创建作业时，每个作业都使用 &lt;code&gt;I18n.locale&lt;/code&gt; 集。如果您异步发送电子邮件，则很有用：</target>
        </trans-unit>
        <trans-unit id="cad151b800b1ed18aac1d3d33a3047ed4e2b948c" translate="yes" xml:space="preserve">
          <source>Each of these classes include &lt;code&gt;Minitest::Assertions&lt;/code&gt;, allowing us to use all of the basic assertions in our tests.</source>
          <target state="translated">这些类中的每一个都包括 &lt;code&gt;Minitest::Assertions&lt;/code&gt; ，使我们可以在测试中使用所有基本断言。</target>
        </trans-unit>
        <trans-unit id="18cb07f68f8c34fad2542625456fd42a036202c5" translate="yes" xml:space="preserve">
          <source>Each of these fixtures has two unique identifiers: one for the database and one for the humans. Why don't we generate the primary key instead? Hashing each fixture's label yields a consistent ID:</source>
          <target state="translated">每一个固定装置都有两个唯一的标识符:一个是数据库的,一个是人类的。我们为什么不生成主键呢?对每个固定物的标签进行哈希处理,就会产生一个一致的ID。</target>
        </trans-unit>
        <trans-unit id="0c2f2c5887d7edef51d0ecbe2c5110951f923385" translate="yes" xml:space="preserve">
          <source>Each of these helpers has a corresponding &lt;code&gt;_url&lt;/code&gt; helper (such as &lt;code&gt;photos_url&lt;/code&gt;) which returns the same path prefixed with the current host, port, and path prefix.</source>
          <target state="translated">这些助手中的每一个都有一个对应的 &lt;code&gt;_url&lt;/code&gt; 助手（例如 &lt;code&gt;photos_url&lt;/code&gt; ），该助手返回以当前主机，端口和路径前缀为前缀的相同路径。</target>
        </trans-unit>
        <trans-unit id="4c8269be01f57a4aed32e59c7ef622858a221620" translate="yes" xml:space="preserve">
          <source>Each response stream creates a new thread and copies over the thread local variables from the original thread. Having too many thread local variables can negatively impact performance. Similarly, a large number of threads can also hinder performance.</source>
          <target state="translated">每个响应流都会创建一个新的线程,并将原线程的线程局部变量复制过来。拥有太多的线程局部变量会对性能产生负面影响。同样,大量的线程也会阻碍性能。</target>
        </trans-unit>
        <trans-unit id="c2074a01cf1c6e0219769d0f339b164daf1f09f8" translate="yes" xml:space="preserve">
          <source>Each thread should be wrapped before it runs application code, so if your application manually delegates work to other threads, such as via &lt;code&gt;Thread.new&lt;/code&gt; or Concurrent Ruby features that use thread pools, you should immediately wrap the block:</source>
          <target state="translated">每个线程应在运行应用程序代码之前进行包装，因此，如果您的应用程序手动将工作委托给其他线程，例如通过使用线程池的 &lt;code&gt;Thread.new&lt;/code&gt; 或Concurrent Ruby功能，则应立即包装该块：</target>
        </trans-unit>
        <trans-unit id="1ce3aba2f9aca465338abed4f26b1886f0627377" translate="yes" xml:space="preserve">
          <source>Each would be rendered and added as a separate part to the message, with the corresponding content type. The content type for the entire message is automatically set to &lt;code&gt;multipart/alternative&lt;/code&gt;, which indicates that the email contains multiple different representations of the same email body. The same instance variables defined in the action are passed to all email templates.</source>
          <target state="translated">每个都将被渲染并作为单独的部分添加到消息中，并具有相应的内容类型。整个邮件的内容类型会自动设置为 &lt;code&gt;multipart/alternative&lt;/code&gt; ，这表示电子邮件包含同一电子邮件正文的多个不同表示形式。操作中定义的相同实例变量将传递到所有电子邮件模板。</target>
        </trans-unit>
        <trans-unit id="fae80e446045ebe7e57d9510b77e77012bb01de8" translate="yes" xml:space="preserve">
          <source>Eager Loading</source>
          <target state="translated">渴望加载</target>
        </trans-unit>
        <trans-unit id="9350ecdd2c2889ca23ac2e3eec86a079599d7b75" translate="yes" xml:space="preserve">
          <source>Eager Loading Associations</source>
          <target state="translated">急切装载协会</target>
        </trans-unit>
        <trans-unit id="912165e05f8d574125a2f111ec3daa7c8830fb8b" translate="yes" xml:space="preserve">
          <source>Eager Loading Multiple Associations</source>
          <target state="translated">急于加载多个关联</target>
        </trans-unit>
        <trans-unit id="dacc7e71ce925103108adcdbefbf23f6226a4993" translate="yes" xml:space="preserve">
          <source>Eager loading is a way to find objects of a certain class and a number of named associations. It is one of the easiest ways to prevent the dreaded N+1 problem in which fetching 100 posts that each need to display their author triggers 101 database queries. Through the use of eager loading, the number of queries will be reduced from 101 to 2.</source>
          <target state="translated">急切加载是一种寻找某类对象和一些命名关联的方法。它是防止可怕的N+1问题的最简单的方法之一,在这个问题中,获取100个需要显示作者的帖子会触发101个数据库查询。通过使用急切加载,查询次数将从101次减少到2次。</target>
        </trans-unit>
        <trans-unit id="051707242050b7ebfde67a26268ece5f0f326f06" translate="yes" xml:space="preserve">
          <source>Eager loading is controlled by the flag &lt;code&gt;config.eager_load&lt;/code&gt;, which is enabled by default in &lt;code&gt;production&lt;/code&gt; mode.</source>
          <target state="translated">急切的加载由 &lt;code&gt;config.eager_load&lt;/code&gt; 标志控制，该标志在 &lt;code&gt;production&lt;/code&gt; 模式下默认启用。</target>
        </trans-unit>
        <trans-unit id="ba717ef838ccde4f2e734561435846ac76af6179" translate="yes" xml:space="preserve">
          <source>Eager loading is supported with polymorphic associations.</source>
          <target state="translated">急切的加载是支持多态关联的。</target>
        </trans-unit>
        <trans-unit id="ae90c19c57b1d094145aae31c58578781c86ea92" translate="yes" xml:space="preserve">
          <source>Eager loading is the mechanism for loading the associated records of the objects returned by &lt;code&gt;Model.find&lt;/code&gt; using as few queries as possible.</source>
          <target state="translated">急切加载是一种使用尽可能少的查询来加载 &lt;code&gt;Model.find&lt;/code&gt; 返回的对象的关联记录的机制。</target>
        </trans-unit>
        <trans-unit id="5959126d169ca15f749c39f51f377e1d35caac41" translate="yes" xml:space="preserve">
          <source>Eager loading may trigger more than one query under the hood, and some queries may need the results of previous ones. Because of that, &lt;code&gt;explain&lt;/code&gt; actually executes the query, and then asks for the query plans. For example,</source>
          <target state="translated">急于加载可能会在后台触发多个查询，并且某些查询可能需要先前查询的结果。因此， &lt;code&gt;explain&lt;/code&gt; 实际上执行查询，然后要求查询计划。例如，</target>
        </trans-unit>
        <trans-unit id="1e02e1ca91ab8dcaeb06771a8fffcb85094922e0" translate="yes" xml:space="preserve">
          <source>Eager loading of associations</source>
          <target state="translated">急于加载关联</target>
        </trans-unit>
        <trans-unit id="3258971760e0ab7ef620986fb66c6a32aa64fae5" translate="yes" xml:space="preserve">
          <source>Eager loading the application is part of the boot process, so top-level constants are fine and are still autoloaded, no need to require their files.</source>
          <target state="translated">急于加载应用程序是启动过程的一部分,所以顶层的常量是可以的,而且还是自动加载的,不需要要求其文件。</target>
        </trans-unit>
        <trans-unit id="75348415f57949afd6ea37601c49ae0a46ac7736" translate="yes" xml:space="preserve">
          <source>Early Hints is an HTTP/2 status code that indicates hints to help a client start making preparations for processing the final response.</source>
          <target state="translated">早期提示是一个HTTP/2状态码,表示提示帮助客户端开始为处理最终响应做准备。</target>
        </trans-unit>
        <trans-unit id="70dd860f4b89ba7ed69b40ce7dbdbe80449d801c" translate="yes" xml:space="preserve">
          <source>Edit the &lt;code&gt;form_with&lt;/code&gt; line inside &lt;code&gt;app/views/articles/new.html.erb&lt;/code&gt; to look like this:</source>
          <target state="translated">编辑 &lt;code&gt;app/views/articles/new.html.erb&lt;/code&gt; 中的 &lt;code&gt;form_with&lt;/code&gt; 行，如下所示：</target>
        </trans-unit>
        <trans-unit id="3b9ba1a2515114c2d31fe79b93a1d942f595ac41" translate="yes" xml:space="preserve">
          <source>Editing</source>
          <target state="translated">Editing</target>
        </trans-unit>
        <trans-unit id="423141acb5d1e4759e1da322e80d39eeb9648915" translate="yes" xml:space="preserve">
          <source>Efficiently downloads blob data into the given file.</source>
          <target state="translated">有效地下载blob数据到给定的文件中。</target>
        </trans-unit>
        <trans-unit id="ae1a2b14f7f3853248ef6cf5db788ccf2ffd3148" translate="yes" xml:space="preserve">
          <source>Either return &lt;code&gt;self&lt;/code&gt; or the time in the local system timezone depending on the setting of &lt;code&gt;ActiveSupport.to_time_preserves_timezone&lt;/code&gt;.</source>
          <target state="translated">根据 &lt;code&gt;ActiveSupport.to_time_preserves_timezone&lt;/code&gt; 的设置，返回 &lt;code&gt;self&lt;/code&gt; 或本地系统时区中的时间。</target>
        </trans-unit>
        <trans-unit id="050d1175210a40bf0844823a9bb849c662276584" translate="yes" xml:space="preserve">
          <source>Either return an instance of &lt;code&gt;Time&lt;/code&gt; with the same UTC offset as &lt;code&gt;self&lt;/code&gt; or an instance of &lt;code&gt;Time&lt;/code&gt; representing the same time in the local system timezone depending on the setting of on the setting of &lt;code&gt;ActiveSupport.to_time_preserves_timezone&lt;/code&gt;.</source>
          <target state="translated">或者返回的实例 &lt;code&gt;Time&lt;/code&gt; 使用相同的UTC偏移 &lt;code&gt;self&lt;/code&gt; 或实例 &lt;code&gt;Time&lt;/code&gt; 表示这取决于对的设定的设定本地系统时区同时 &lt;code&gt;ActiveSupport.to_time_preserves_timezone&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dc851f6f2821c7088e81374ab3e41f76054be825" translate="yes" xml:space="preserve">
          <source>Ellipsis can be customized with the &lt;code&gt;:omission&lt;/code&gt; option:</source>
          <target state="translated">省略号可以使用 &lt;code&gt;:omission&lt;/code&gt; 选项自定义：</target>
        </trans-unit>
        <trans-unit id="bc170086385405745bfe59476bba424abef09c0f" translate="yes" xml:space="preserve">
          <source>Email clients have no web context and so paths have no base URL to form complete web addresses. Thus, you should always use the &quot;_url&quot; variant of named route helpers.</source>
          <target state="translated">电子邮件客户端没有Web上下文,因此路径没有基本的URL来形成完整的Web地址。因此,你应该始终使用命名路由帮助程序的&quot;_url &quot;变体。</target>
        </trans-unit>
        <trans-unit id="7b65c2f37b13ae80b2f9b96bc1eb6692bf54810c" translate="yes" xml:space="preserve">
          <source>Emails by default are sent in plain text, so a sample view for our model example might look like this:</source>
          <target state="translated">默认情况下,电子邮件是以纯文本形式发送的,所以我们的模型示例视图可能是这样的。</target>
        </trans-unit>
        <trans-unit id="b11b2b6c93f7c7c33b6c792b7d09ff158ec677ad" translate="yes" xml:space="preserve">
          <source>Emails do not support relative path links.</source>
          <target state="translated">电子邮件不支持相对路径链接。</target>
        </trans-unit>
        <trans-unit id="d528e738b7cedb7cdacda857cfe8d8e5bf016b91" translate="yes" xml:space="preserve">
          <source>Embed in a &lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt; to clear all previous ANSI sequences.</source>
          <target state="translated">嵌入&lt;a href=&quot;../string&quot;&gt;字符串&lt;/a&gt;以清除所有以前的ANSI序列。</target>
        </trans-unit>
        <trans-unit id="28aff15ec5a0131ccfe8e7fb36403c88736cb72f" translate="yes" xml:space="preserve">
          <source>Empty objects as &lt;code&gt;{}&lt;/code&gt;, in the case of &lt;code&gt;Hash&lt;/code&gt;, or &lt;code&gt;[]&lt;/code&gt;, in the case of &lt;code&gt;Array&lt;/code&gt;, will always be persisted as null.</source>
          <target state="translated">对于 &lt;code&gt;Hash&lt;/code&gt; ，为 &lt;code&gt;{}&lt;/code&gt; 的空对象，对于 &lt;code&gt;Array&lt;/code&gt; 为 &lt;code&gt;[]&lt;/code&gt; 的空对象，将始终保留为null。</target>
        </trans-unit>
        <trans-unit id="c7b2e521b15b784152f847d902e6c37a6af2a01a" translate="yes" xml:space="preserve">
          <source>Empty strings are coerced to &lt;code&gt;nil&lt;/code&gt;</source>
          <target state="translated">空字符串被强制为 &lt;code&gt;nil&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6e73cb05c3d7d3e92f1256a6b058428b81ffc0a1" translate="yes" xml:space="preserve">
          <source>Enable the query cache within the block if Active Record is configured. If it's not, it will execute the given block.</source>
          <target state="translated">如果配置了Active Record,则启用块内的查询缓存。如果没有,它将执行给定的块。</target>
        </trans-unit>
        <trans-unit id="bafaca210bfa8c6835204ce797fd4aa8c7032dfd" translate="yes" xml:space="preserve">
          <source>Enable the query cache within the block.</source>
          <target state="translated">启用区块内的查询缓存。</target>
        </trans-unit>
        <trans-unit id="a69dbe124393f3b2fee1cd57adbc05970d926973" translate="yes" xml:space="preserve">
          <source>Enabled by default for apps that use Action View. Disable by setting</source>
          <target state="translated">对于使用 &quot;动作视图 &quot;的应用程序,默认为启用。通过设置</target>
        </trans-unit>
        <trans-unit id="4e22518c67be4eebd9680af285e8cfd3dc00ff34" translate="yes" xml:space="preserve">
          <source>Enables more predictable duck-typing on String-like classes. See &lt;code&gt;Object#acts_like?&lt;/code&gt;.</source>
          <target state="translated">在类似String的类上启用更可预测的鸭子类型。看到 &lt;code&gt;Object#acts_like?&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="954ff34b3e0e17603433776ca887130da8b4eaf8" translate="yes" xml:space="preserve">
          <source>Enables the formatting of numbers in a variety of ways.</source>
          <target state="translated">可以用多种方式实现数字的格式化。</target>
        </trans-unit>
        <trans-unit id="0aaa69584f2038f18cc582966547038c952fa725" translate="yes" xml:space="preserve">
          <source>Enables the use of byte calculations and declarations, like 45.bytes + 2.6.megabytes</source>
          <target state="translated">允许使用字节计算和声明,如45.字节+2.6.兆字节。</target>
        </trans-unit>
        <trans-unit id="898a7a613ed036a56c6dcf367702a1bad0c62b43" translate="yes" xml:space="preserve">
          <source>Enables the use of time calculations and declarations, like &lt;code&gt;4.months + 5.years&lt;/code&gt;.</source>
          <target state="translated">启用时间计算和声明，例如 &lt;code&gt;4.months + 5.years&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8a3b78a116fffa1f9bb314606c7a7722f85a5a6b" translate="yes" xml:space="preserve">
          <source>Enables the use of time calculations and declarations, like &lt;code&gt;45.minutes + 2.hours + 4.weeks&lt;/code&gt;.</source>
          <target state="translated">启用时间计算和声明，例如 &lt;code&gt;45.minutes + 2.hours + 4.weeks&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6883a433b93d4277369312ea29d8f843e7f1dd66" translate="yes" xml:space="preserve">
          <source>Enables you to run a command from the given directory. For example, if you have a copy of edge rails that you wish to symlink from your new apps, you can do this:</source>
          <target state="translated">使你能够从给定的目录中运行一个命令。例如,如果你有一个edge rails的副本,你希望从你的新应用程序中建立符号链接,你可以这样做。</target>
        </trans-unit>
        <trans-unit id="bca62f8f15ea4e3ded26846656c30bcc079d0b7d" translate="yes" xml:space="preserve">
          <source>Enabling Zeitwerk Mode</source>
          <target state="translated">启用时间工作模式</target>
        </trans-unit>
        <trans-unit id="0d1bf48adb9ae44c5d0751e8acc44c91c2f91c16" translate="yes" xml:space="preserve">
          <source>Enabling nested attributes on a one-to-one association allows you to create the member and avatar in one go:</source>
          <target state="translated">在一对一关联上启用嵌套属性,可以一次性创建会员和头像。</target>
        </trans-unit>
        <trans-unit id="61288a763c83954a689a0afacc6d57f06e742d97" translate="yes" xml:space="preserve">
          <source>Encapsulates a route, which can then be matched against an inbound_email and provide a lookup of the matching mailbox class. See examples for the different route addresses and how to use them in the &lt;code&gt;ActionMailbox::Base&lt;/code&gt; documentation.</source>
          <target state="translated">封装路由，然后可以将其与inbound_email进行匹配，并提供对匹配的邮箱类的查找。在 &lt;code&gt;ActionMailbox::Base&lt;/code&gt; 文档中，请参见有关不同路由地址以及如何使用它们的示例。</target>
        </trans-unit>
        <trans-unit id="e1c997d4f4bf08e5c5dfb7baf3b5da6f59c25036" translate="yes" xml:space="preserve">
          <source>Encapsulates a string representing a filename to provide convenient access to parts of it and sanitization. A &lt;a href=&quot;filename&quot;&gt;Filename&lt;/a&gt; instance is returned by &lt;a href=&quot;blob#method-i-filename&quot;&gt;ActiveStorage::Blob#filename&lt;/a&gt;, and is comparable so it can be used for sorting.</source>
          <target state="translated">封装一个表示文件名的字符串，以方便地访问文件名的一部分并进行清理。一个&lt;a href=&quot;filename&quot;&gt;文件名&lt;/a&gt;实例由返回&lt;a href=&quot;blob#method-i-filename&quot;&gt;ActiveStorage ::斑点＃文件名&lt;/a&gt;，并且是可比的，因此它可以被用于排序。</target>
        </trans-unit>
        <trans-unit id="771a1a79515429a88d60588cf6906dcd49f10d70" translate="yes" xml:space="preserve">
          <source>Encapsulates the interaction with the view flow so it returns the correct buffer on &lt;code&gt;yield&lt;/code&gt;. This is usually overwritten by helpers to add more behavior.</source>
          <target state="translated">封装与视图流的交互，以便在 &lt;code&gt;yield&lt;/code&gt; 时返回正确的缓冲区。通常，此方法会被助手覆盖以添加更多行为。</target>
        </trans-unit>
        <trans-unit id="5411544e5526c2370c6f87d72b3d7c79a4b244ec" translate="yes" xml:space="preserve">
          <source>Encapsulates the notion of a MIME type. Can be used at render time, for example, with:</source>
          <target state="translated">封装了MIME类型的概念。可以在渲染时使用,例如,与以下类型一起使用。</target>
        </trans-unit>
        <trans-unit id="1b0ff8bcacc045e1f56b61e351924db66e9e23a6" translate="yes" xml:space="preserve">
          <source>Encapsulates the pattern of wanting to validate a password or email address field with a confirmation.</source>
          <target state="translated">封装了想要验证密码或电子邮件地址字段与确认的模式。</target>
        </trans-unit>
        <trans-unit id="6368ea1261559c54fe45dc6c849ebe5673b7d6a7" translate="yes" xml:space="preserve">
          <source>Encapsulates the pattern of wanting to validate the acceptance of a terms of service check box (or similar agreement).</source>
          <target state="translated">封装了想要验证接受服务条款复选框(或类似协议)的模式。</target>
        </trans-unit>
        <trans-unit id="5f1ce3b628a3d4173cb84f27894888c7b8ef714f" translate="yes" xml:space="preserve">
          <source>Encapsulates the routes that live on the ApplicationMailbox and performs the actual routing when an inbound_email is received.</source>
          <target state="translated">封装活在ApplicationMailbox上的路由,并在收到inbound_email时执行实际路由。</target>
        </trans-unit>
        <trans-unit id="a0f519d92037e1831f51507835c0f23af941e1a9" translate="yes" xml:space="preserve">
          <source>Encodes the given token and options into an Authorization header value.</source>
          <target state="translated">将给定的令牌和选项编码为授权头值。</target>
        </trans-unit>
        <trans-unit id="f019e6fd7597d6e6329a49a2af01ddc32dfb45f7" translate="yes" xml:space="preserve">
          <source>Encrypt and sign a message. We need to sign the message in order to avoid padding attacks. Reference: &lt;a href=&quot;https://www.limited-entropy.com/padding-oracle-attacks&quot;&gt;www.limited-entropy.com/padding-oracle-attacks&lt;/a&gt;/.</source>
          <target state="translated">加密并签名消息。我们需要对消息进行签名，以避免填充攻击。参考：&lt;a href=&quot;https://www.limited-entropy.com/padding-oracle-attacks&quot;&gt;www.limited-entropy.com/padding-oracle-attacks/&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e5f402e6a9afe87240a69b26a03b8b5f8db7d586" translate="yes" xml:space="preserve">
          <source>EncryptedConfiguration</source>
          <target state="translated">EncryptedConfiguration</target>
        </trans-unit>
        <trans-unit id="0a28d0ed8f8d09994e6fdbb4ea59460aa2bf7bde" translate="yes" xml:space="preserve">
          <source>EncryptedConfiguration#config</source>
          <target state="translated">EncryptedConfiguration#config</target>
        </trans-unit>
        <trans-unit id="03d2c63e3f023ad51ed63c8a1ca6c7a518295ace" translate="yes" xml:space="preserve">
          <source>EncryptedConfiguration#read</source>
          <target state="translated">EncryptedConfiguration#read</target>
        </trans-unit>
        <trans-unit id="986b435d35df58d8ff4b8f1739b4db0bbf2f2e62" translate="yes" xml:space="preserve">
          <source>EncryptedConfiguration#write</source>
          <target state="translated">EncryptedConfiguration#write</target>
        </trans-unit>
        <trans-unit id="bbc3a00665f6fe4a8564a09368a7be0475b958dd" translate="yes" xml:space="preserve">
          <source>EncryptedConfiguration::new</source>
          <target state="translated">EncryptedConfiguration::new</target>
        </trans-unit>
        <trans-unit id="e08a3d5f04d5216d959301eb87e93666943f3adb" translate="yes" xml:space="preserve">
          <source>EncryptedFile</source>
          <target state="translated">EncryptedFile</target>
        </trans-unit>
        <trans-unit id="92ec6350888ffe872e05e17513441db29281fdeb" translate="yes" xml:space="preserve">
          <source>Endpoint</source>
          <target state="translated">Endpoint</target>
        </trans-unit>
        <trans-unit id="c1f65ddb75ed7d97e701168af35171410be8f9e7" translate="yes" xml:space="preserve">
          <source>Engine</source>
          <target state="translated">Engine</target>
        </trans-unit>
        <trans-unit id="e8809eda578aa991d807dd996bc36bbf039a946a" translate="yes" xml:space="preserve">
          <source>Engine model and controller classes can be extended by open classing them in the main Rails application (since model and controller classes are just Ruby classes that inherit Rails specific functionality). Open classing an Engine class redefines it for use in the main application.</source>
          <target state="translated">引擎模型和控制器类可以通过在主Rails应用中开放类来扩展(因为模型和控制器类只是继承Rails特定功能的Ruby类)。打开一个Engine类的类,可以重新定义它在主应用程序中使用。</target>
        </trans-unit>
        <trans-unit id="84e0799d2bf6142c49f0a80de2e01cd120955405" translate="yes" xml:space="preserve">
          <source>Engine setup</source>
          <target state="translated">发动机设置</target>
        </trans-unit>
        <trans-unit id="7987281d22f5a65b5d5974f63cb43bb88c300cdc" translate="yes" xml:space="preserve">
          <source>Engineering notation is still supported:</source>
          <target state="translated">仍然支持工程符号。</target>
        </trans-unit>
        <trans-unit id="b2c7104486895707b792252e4aa3edfcfeda062e" translate="yes" xml:space="preserve">
          <source>Engines are also closely related to plugins. The two share a common &lt;code&gt;lib&lt;/code&gt; directory structure, and are both generated using the &lt;code&gt;rails plugin new&lt;/code&gt; generator. The difference is that an engine is considered a &quot;full plugin&quot; by Rails (as indicated by the &lt;code&gt;--full&lt;/code&gt; option that's passed to the generator command). We'll actually be using the &lt;code&gt;--mountable&lt;/code&gt; option here, which includes all the features of &lt;code&gt;--full&lt;/code&gt;, and then some. This guide will refer to these &quot;full plugins&quot; simply as &quot;engines&quot; throughout. An engine &lt;strong&gt;can&lt;/strong&gt; be a plugin, and a plugin &lt;strong&gt;can&lt;/strong&gt; be an engine.</source>
          <target state="translated">引擎也与插件紧密相关。两者共享一个通用的 &lt;code&gt;lib&lt;/code&gt; 目录结构，并且都使用 &lt;code&gt;rails plugin new&lt;/code&gt; 生成器生成。区别在于，Rails将引擎视为&amp;ldquo;完整插件&amp;rdquo;（如传递给generator命令的 &lt;code&gt;--full&lt;/code&gt; 选项所示）。我们实际上将在这里使用 &lt;code&gt;--mountable&lt;/code&gt; 选项，其中包括 &lt;code&gt;--full&lt;/code&gt; 的所有功能，然后包括其中的一些功能。本指南通篇将这些&amp;ldquo;完整插件&amp;rdquo;简称为&amp;ldquo;引擎&amp;rdquo;。引擎&lt;strong&gt;可以&lt;/strong&gt;是插件，而插件&lt;strong&gt;可以&lt;/strong&gt;是引擎。</target>
        </trans-unit>
        <trans-unit id="6ac750367dc7050cffcd3faaf207427bd63078ca" translate="yes" xml:space="preserve">
          <source>Engines can also be isolated from their host applications. This means that an application is able to have a path provided by a routing helper such as &lt;code&gt;articles_path&lt;/code&gt; and use an engine that also provides a path also called &lt;code&gt;articles_path&lt;/code&gt;, and the two would not clash. Along with this, controllers, models and table names are also namespaced. You'll see how to do this later in this guide.</source>
          <target state="translated">引擎也可以与其主机应用程序隔离。这意味着应用程序能够具有由路由助手提供的路径（例如， &lt;code&gt;articles_path&lt;/code&gt; ),并使用引擎，该引擎还提供也称为 &lt;code&gt;articles_path&lt;/code&gt; 的路径，并且两者不会冲突。随之，控制器，模型和表名也被命名为命名空间。您将在本指南的后面部分看到如何执行此操作。</target>
        </trans-unit>
        <trans-unit id="cb3d7fb2419b44742c45c914996677dfdcd7a318" translate="yes" xml:space="preserve">
          <source>Engines can be considered miniature applications that provide functionality to their host applications. A Rails application is actually just a &quot;supercharged&quot; engine, with the &lt;code&gt;Rails::Application&lt;/code&gt; class inheriting a lot of its behavior from &lt;code&gt;Rails::Engine&lt;/code&gt;.</source>
          <target state="translated">可以将引擎视为为其主机应用程序提供功能的微型应用程序。一个Rails应用程序实际上只是一个&amp;ldquo;增压&amp;rdquo;引擎，其中 &lt;code&gt;Rails::Application&lt;/code&gt; 类从 &lt;code&gt;Rails::Engine&lt;/code&gt; 继承了许多行为。</target>
        </trans-unit>
        <trans-unit id="a649a659bd1543af196091f7856c7c10c971c309" translate="yes" xml:space="preserve">
          <source>Engines can have their own migrations. The default path for migrations is exactly the same as in application: &lt;code&gt;db/migrate&lt;/code&gt;</source>
          <target state="translated">引擎可以有自己的迁移。迁移的缺省路径与应用程序中的缺省路径完全相同： &lt;code&gt;db/migrate&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="136d2ef98b655d5da8f44caf216a8541cd4f1427" translate="yes" xml:space="preserve">
          <source>Enhance &lt;a href=&quot;../../testhelper&quot;&gt;TestHelper&lt;/a&gt; assertions to handle non-String broadcastings</source>
          <target state="translated">增强&lt;a href=&quot;../../testhelper&quot;&gt;TestHelper&lt;/a&gt;断言以处理非字符串广播</target>
        </trans-unit>
        <trans-unit id="1a3066f5ae0c7a1b5e56529f04fa52fd7f987aa6" translate="yes" xml:space="preserve">
          <source>Enqueue a &lt;code&gt;RoutingJob&lt;/code&gt; for this &lt;code&gt;InboundEmail&lt;/code&gt;.</source>
          <target state="translated">排队一个 &lt;code&gt;RoutingJob&lt;/code&gt; 这个 &lt;code&gt;InboundEmail&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="71ef37ae9be7bf0437405689a42d828d8fa44093" translate="yes" xml:space="preserve">
          <source>Enqueue a job like so:</source>
          <target state="translated">像这样申请一个作业。</target>
        </trans-unit>
        <trans-unit id="45442d2256e3bc7f8528e8f2a5c051a9242d65d5" translate="yes" xml:space="preserve">
          <source>Enqueue the Job</source>
          <target state="translated">申请作业</target>
        </trans-unit>
        <trans-unit id="4881f9c886061781c2500440829ba4300c1237cd" translate="yes" xml:space="preserve">
          <source>Enqueues an &lt;a href=&quot;../analyzejob&quot;&gt;ActiveStorage::AnalyzeJob&lt;/a&gt; which calls &lt;a href=&quot;analyzable#method-i-analyze&quot;&gt;analyze&lt;/a&gt;.</source>
          <target state="translated">入队的&lt;a href=&quot;../analyzejob&quot;&gt;ActiveStorage :: AnalyzeJob&lt;/a&gt;这就要求&lt;a href=&quot;analyzable#method-i-analyze&quot;&gt;分析&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a3e7706f9e73a451c3e016acb422f145974d825d" translate="yes" xml:space="preserve">
          <source>Enqueues an &lt;a href=&quot;purgejob&quot;&gt;ActiveStorage::PurgeJob&lt;/a&gt; to call &lt;a href=&quot;blob#method-i-purge&quot;&gt;purge&lt;/a&gt;. This is the recommended way to purge blobs from a transaction, an Active Record callback, or in any other real-time scenario.</source>
          <target state="translated">使&lt;a href=&quot;purgejob&quot;&gt;ActiveStorage :: PurgeJob排队&lt;/a&gt;以调用&lt;a href=&quot;blob#method-i-purge&quot;&gt;purge&lt;/a&gt;。这是从事务，Active Record回调或任何其他实时方案中清除Blob的推荐方法。</target>
        </trans-unit>
        <trans-unit id="b170eb18a288318712c977dc6362f9ba05a459e5" translate="yes" xml:space="preserve">
          <source>Enqueues the email to be delivered through Active Job. When the job runs it will send the email using &lt;code&gt;deliver_now!&lt;/code&gt;. That means that the message will be sent bypassing checking &lt;code&gt;perform_deliveries&lt;/code&gt; and &lt;code&gt;raise_delivery_errors&lt;/code&gt;, so use with caution.</source>
          <target state="translated">使要通过活动作业传递的电子邮件入队。作业运行时，它将使用 &lt;code&gt;deliver_now!&lt;/code&gt; 发送电子邮件！。这意味着将绕过检查 &lt;code&gt;perform_deliveries&lt;/code&gt; 和 &lt;code&gt;raise_delivery_errors&lt;/code&gt; 发送消息，因此请谨慎使用。</target>
        </trans-unit>
        <trans-unit id="7b5e7be8ece8a85487b60285ad2ba4540d17cdc4" translate="yes" xml:space="preserve">
          <source>Enqueues the email to be delivered through Active Job. When the job runs it will send the email using &lt;code&gt;deliver_now&lt;/code&gt;.</source>
          <target state="translated">使要通过活动作业传递的电子邮件入队。作业运行时，它将使用 &lt;code&gt;deliver_now&lt;/code&gt; 发送电子邮件。</target>
        </trans-unit>
        <trans-unit id="e968dd3a76a9a804382da132cbb907189e05dd3e" translate="yes" xml:space="preserve">
          <source>Enqueues the given &lt;code&gt;message&lt;/code&gt; for delivery and changes the inbound email's status to &lt;code&gt;:bounced&lt;/code&gt;.</source>
          <target state="translated">使给定的 &lt;code&gt;message&lt;/code&gt; 入队以便传递，并将入站电子邮件的状态更改为 &lt;code&gt;:bounced&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4d0689e1252dd70b1cb58b5fc757dce2a5bac316" translate="yes" xml:space="preserve">
          <source>Enqueues the job to be performed by the queue adapter.</source>
          <target state="translated">启用要由队列适配器执行的作业。</target>
        </trans-unit>
        <trans-unit id="506a2f25a01829af4d425620405d7c616d65589c" translate="yes" xml:space="preserve">
          <source>Enqueuing</source>
          <target state="translated">Enqueuing</target>
        </trans-unit>
        <trans-unit id="2a62ebec9ebb00ac5e43de63b263492bd3681589" translate="yes" xml:space="preserve">
          <source>Enqueuing#enqueue</source>
          <target state="translated">Enqueuing#enqueue</target>
        </trans-unit>
        <trans-unit id="c5aec89b4c1298faa3b90d32ae84636c6a56023d" translate="yes" xml:space="preserve">
          <source>Enqueuing::ClassMethods</source>
          <target state="translated">Enqueuing::ClassMethods</target>
        </trans-unit>
        <trans-unit id="c8a89357e7cf785997b0a4bda19476bec80d661b" translate="yes" xml:space="preserve">
          <source>Enqueuing::ClassMethods#job_or_instantiate</source>
          <target state="translated">Enqueuing::ClassMethods#job_or_instantiate</target>
        </trans-unit>
        <trans-unit id="af9f5b1cfbd96eb3ca78c660855e6e9a1dc660a3" translate="yes" xml:space="preserve">
          <source>Enqueuing::ClassMethods#perform_later</source>
          <target state="translated">Enqueuing::ClassMethods#perform_later</target>
        </trans-unit>
        <trans-unit id="2c61819644f71723d12aa60f84baffeca891dd9b" translate="yes" xml:space="preserve">
          <source>Ensure proxy class responds to all methods that underlying time instance responds to.</source>
          <target state="translated">确保代理类响应底层时间实例响应的所有方法。</target>
        </trans-unit>
        <trans-unit id="575fe304dd94c1def843a31f6ee03da0a7d7efca" translate="yes" xml:space="preserve">
          <source>Ensure that the &lt;code&gt;InboundEmail&lt;/code&gt; is automatically scheduled for later incineration if the status has been changed to &lt;code&gt;processed&lt;/code&gt;. The later incineration will be invoked at the time specified by the &lt;code&gt;ActionMailbox.incinerate_after&lt;/code&gt; time using the &lt;code&gt;IncinerationJob&lt;/code&gt;.</source>
          <target state="translated">如果状态已更改为&amp;ldquo;已 &lt;code&gt;processed&lt;/code&gt; 确保将 &lt;code&gt;InboundEmail&lt;/code&gt; 自动计划为以后进行焚化。稍后的焚化将在使用 &lt;code&gt;IncinerationJob&lt;/code&gt; 在 &lt;code&gt;ActionMailbox.incinerate_after&lt;/code&gt; 指定的时间之后调用。</target>
        </trans-unit>
        <trans-unit id="8b0952b04163d00a5ce6a4fae5eb2bbbd9cce028" translate="yes" xml:space="preserve">
          <source>Ensure you have a firm grasp of the &lt;code&gt;params&lt;/code&gt; method, as you'll use it fairly regularly. Let's consider an example URL: &lt;strong&gt;&lt;a href=&quot;http://www.example.com/?username=dhh&amp;amp;email=dhh@email.com&quot;&gt;http://www.example.com/?username=dhh&amp;amp;email=dhh@email.com&lt;/a&gt;&lt;/strong&gt;. In this URL, &lt;code&gt;params[:username]&lt;/code&gt; would equal &quot;dhh&quot; and &lt;code&gt;params[:email]&lt;/code&gt; would equal &quot;&lt;a href=&quot;mailto:dhh@email.com&quot;&gt;dhh@email.com&lt;/a&gt;&quot;.</source>
          <target state="translated">确保您对 &lt;code&gt;params&lt;/code&gt; 方法牢牢掌握，因为您会经常使用它。让我们考虑一个示例URL：&lt;strong&gt;&lt;a href=&quot;http://www.example.com/?username=dhh&amp;amp;email=dhh@email.com&quot;&gt;http&lt;/a&gt;&lt;/strong&gt; : &lt;strong&gt;//www.example.com/?username=dhh&amp;amp;email=dhh@email.com&lt;/strong&gt;。在此URL中， &lt;code&gt;params[:username]&lt;/code&gt; 等于&amp;ldquo; dhh&amp;rdquo;， &lt;code&gt;params[:email]&lt;/code&gt; 等于&amp;ldquo; &lt;a href=&quot;mailto:dhh@email.com&quot;&gt;dhh@email.com&lt;/a&gt; &amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="b72a4335a8917969a93618a97e2363f9c2a18a16" translate="yes" xml:space="preserve">
          <source>Ensure you have support for i18n.</source>
          <target state="translated">确保你有对i18n的支持。</target>
        </trans-unit>
        <trans-unit id="4c2aca24da8837584c8c4ab90b462c259e6ae73f" translate="yes" xml:space="preserve">
          <source>Ensures failure. This is useful to explicitly mark a test that isn't finished yet.</source>
          <target state="translated">确保失败。这对于明确标记一个尚未完成的测试很有用。</target>
        </trans-unit>
        <trans-unit id="1c79f14d826ff83c716eabc672c90984d32d75ba" translate="yes" xml:space="preserve">
          <source>Ensures that &lt;code&gt;expected != actual&lt;/code&gt; is true.</source>
          <target state="translated">确保 &lt;code&gt;expected != actual&lt;/code&gt; 为真。</target>
        </trans-unit>
        <trans-unit id="683a4be942171b912e181a0be2707ca5b3fc474c" translate="yes" xml:space="preserve">
          <source>Ensures that &lt;code&gt;expected == actual&lt;/code&gt; is true.</source>
          <target state="translated">确保 &lt;code&gt;expected == actual&lt;/code&gt; 为真。</target>
        </trans-unit>
        <trans-unit id="6667dd27c2ef970b5f1db88e01bf07d1c28c7c40" translate="yes" xml:space="preserve">
          <source>Ensures that &lt;code&gt;expected.equal?(actual)&lt;/code&gt; is false.</source>
          <target state="translated">确保Expected.equal &lt;code&gt;expected.equal?(actual)&lt;/code&gt; 为false。</target>
        </trans-unit>
        <trans-unit id="5448e877aa1e40111d23f8d0f97eeb25617c28bf" translate="yes" xml:space="preserve">
          <source>Ensures that &lt;code&gt;expected.equal?(actual)&lt;/code&gt; is true.</source>
          <target state="translated">确保Expected.equal &lt;code&gt;expected.equal?(actual)&lt;/code&gt; 为true。</target>
        </trans-unit>
        <trans-unit id="be824e29f4ab1167ef0dd187a6b756c2f2cb0dcb" translate="yes" xml:space="preserve">
          <source>Ensures that &lt;code&gt;obj.nil?&lt;/code&gt; is false.</source>
          <target state="translated">确保 &lt;code&gt;obj.nil?&lt;/code&gt; 是假的。</target>
        </trans-unit>
        <trans-unit id="d6e38bc450373142febc839d62dfd3f4845a7223" translate="yes" xml:space="preserve">
          <source>Ensures that &lt;code&gt;obj.nil?&lt;/code&gt; is true.</source>
          <target state="translated">确保 &lt;code&gt;obj.nil?&lt;/code&gt; 是真的。</target>
        </trans-unit>
        <trans-unit id="b870540718b2e6eb1e96afce9ada15037b2f1d9c" translate="yes" xml:space="preserve">
          <source>Ensures that &lt;code&gt;obj.predicate&lt;/code&gt; is false, e.g. &lt;code&gt;assert_not_predicate str, :empty?&lt;/code&gt;</source>
          <target state="translated">确保 &lt;code&gt;obj.predicate&lt;/code&gt; 为false，例如 &lt;code&gt;assert_not_predicate str, :empty?&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="acffc91f5c507ab6f9b45fc26eb128605f7d2484" translate="yes" xml:space="preserve">
          <source>Ensures that &lt;code&gt;obj.predicate&lt;/code&gt; is true, e.g. &lt;code&gt;assert_predicate str, :empty?&lt;/code&gt;</source>
          <target state="translated">确保 &lt;code&gt;obj.predicate&lt;/code&gt; 为true，例如 &lt;code&gt;assert_predicate str, :empty?&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="aa247983b4e92277eb89092ef5ba6705050a6afc" translate="yes" xml:space="preserve">
          <source>Ensures that &lt;code&gt;obj1.operator(obj2)&lt;/code&gt; is false.</source>
          <target state="translated">确保 &lt;code&gt;obj1.operator(obj2)&lt;/code&gt; 为false。</target>
        </trans-unit>
        <trans-unit id="eee51f35cb86ac65fa6ae356f6024f36c48e4c04" translate="yes" xml:space="preserve">
          <source>Ensures that &lt;code&gt;obj1.operator(obj2)&lt;/code&gt; is true.</source>
          <target state="translated">确保 &lt;code&gt;obj1.operator(obj2)&lt;/code&gt; 为true。</target>
        </trans-unit>
        <trans-unit id="c279b21d3cbb32ead7bc63a9b02325cac6714ba1" translate="yes" xml:space="preserve">
          <source>Ensures that &lt;code&gt;obj&lt;/code&gt; does not respond to &lt;code&gt;symbol&lt;/code&gt;.</source>
          <target state="translated">确保 &lt;code&gt;obj&lt;/code&gt; 不响应 &lt;code&gt;symbol&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7c2cb97bcc4605112501211df86ab5204ea98a04" translate="yes" xml:space="preserve">
          <source>Ensures that &lt;code&gt;obj&lt;/code&gt; is &lt;code&gt;empty?&lt;/code&gt;.</source>
          <target state="translated">确保 &lt;code&gt;obj&lt;/code&gt; 为 &lt;code&gt;empty?&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cf44d6919a55466c5ae2bb7e2a6a9627e47db0db" translate="yes" xml:space="preserve">
          <source>Ensures that &lt;code&gt;obj&lt;/code&gt; is an instance of &lt;code&gt;class&lt;/code&gt; or is descending from it.</source>
          <target state="translated">确保 &lt;code&gt;obj&lt;/code&gt; 是 &lt;code&gt;class&lt;/code&gt; 的实例或从其派生。</target>
        </trans-unit>
        <trans-unit id="598f9988c504580bc3762d8848684cd60c2bf583" translate="yes" xml:space="preserve">
          <source>Ensures that &lt;code&gt;obj&lt;/code&gt; is an instance of &lt;code&gt;class&lt;/code&gt;.</source>
          <target state="translated">确保 &lt;code&gt;obj&lt;/code&gt; 是 &lt;code&gt;class&lt;/code&gt; 的实例。</target>
        </trans-unit>
        <trans-unit id="c62cf5f2d9ada35d6c51c2ec32a04aa56bfdc69a" translate="yes" xml:space="preserve">
          <source>Ensures that &lt;code&gt;obj&lt;/code&gt; is in &lt;code&gt;collection&lt;/code&gt;.</source>
          <target state="translated">确保 &lt;code&gt;obj&lt;/code&gt; 在 &lt;code&gt;collection&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="43e8a3ea381b934279b9e2a84ae382eba12f83e1" translate="yes" xml:space="preserve">
          <source>Ensures that &lt;code&gt;obj&lt;/code&gt; is not &lt;code&gt;empty?&lt;/code&gt;.</source>
          <target state="translated">确保 &lt;code&gt;obj&lt;/code&gt; 不为 &lt;code&gt;empty?&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ae3d2416faa35633be9296271cdba60389ed4ebc" translate="yes" xml:space="preserve">
          <source>Ensures that &lt;code&gt;obj&lt;/code&gt; is not an instance of &lt;code&gt;class&lt;/code&gt; and is not descending from it.</source>
          <target state="translated">确保 &lt;code&gt;obj&lt;/code&gt; 不是 &lt;code&gt;class&lt;/code&gt; 的实例，并且不从其派生。</target>
        </trans-unit>
        <trans-unit id="3ef4d88c37c6d8556aa018846e16b06f0129285a" translate="yes" xml:space="preserve">
          <source>Ensures that &lt;code&gt;obj&lt;/code&gt; is not an instance of &lt;code&gt;class&lt;/code&gt;.</source>
          <target state="translated">确保 &lt;code&gt;obj&lt;/code&gt; 不是 &lt;code&gt;class&lt;/code&gt; 的实例。</target>
        </trans-unit>
        <trans-unit id="b34ad23d5732c4bf151bf197987c909bcbf8ff41" translate="yes" xml:space="preserve">
          <source>Ensures that &lt;code&gt;obj&lt;/code&gt; is not in &lt;code&gt;collection&lt;/code&gt;.</source>
          <target state="translated">确保 &lt;code&gt;obj&lt;/code&gt; 不在 &lt;code&gt;collection&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="0e7f59f0a85a6a7b7e30c8ddc0c06c9df431459e" translate="yes" xml:space="preserve">
          <source>Ensures that &lt;code&gt;obj&lt;/code&gt; responds to &lt;code&gt;symbol&lt;/code&gt;.</source>
          <target state="translated">确保 &lt;code&gt;obj&lt;/code&gt; 响应 &lt;code&gt;symbol&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8f3b0c4c76319bb1da181d3e068f0ee1a1574c1f" translate="yes" xml:space="preserve">
          <source>Ensures that &lt;code&gt;test&lt;/code&gt; is false.</source>
          <target state="translated">确保 &lt;code&gt;test&lt;/code&gt; 为假。</target>
        </trans-unit>
        <trans-unit id="6a9cf4c36b8c7ae83621d236404a539c7a3a094f" translate="yes" xml:space="preserve">
          <source>Ensures that &lt;code&gt;test&lt;/code&gt; is true.</source>
          <target state="translated">确保 &lt;code&gt;test&lt;/code&gt; 为真。</target>
        </trans-unit>
        <trans-unit id="4db77c7c7ef5ec762c6344d84317a5dc20b0b9b8" translate="yes" xml:space="preserve">
          <source>Ensures that a string doesn't match the regular expression.</source>
          <target state="translated">确保字符串不符合正则表达式。</target>
        </trans-unit>
        <trans-unit id="d393901cdba2fdce7454062ff766735335ce9315" translate="yes" xml:space="preserve">
          <source>Ensures that a string matches the regular expression.</source>
          <target state="translated">确保字符串符合正则表达式。</target>
        </trans-unit>
        <trans-unit id="7e008e7327e4114351b83c3079e31c70d2596bfa" translate="yes" xml:space="preserve">
          <source>Ensures that the given block doesn't raise any exceptions.</source>
          <target state="translated">确保给定的块不会引发任何异常。</target>
        </trans-unit>
        <trans-unit id="336d5bfedd1c18fdab2f37f21e8370cb24a5192f" translate="yes" xml:space="preserve">
          <source>Ensures that the given block raises one of the given exceptions.</source>
          <target state="translated">确保给定的块会引发给定的异常之一。</target>
        </trans-unit>
        <trans-unit id="0be08c2e1c4081aa38cf9d865d0172381f72d204" translate="yes" xml:space="preserve">
          <source>Ensures that the given block throws the symbol.</source>
          <target state="translated">确保给定的块抛出符号。</target>
        </trans-unit>
        <trans-unit id="2ff10787478626bd653e6bf2d182a3477c4e5a00" translate="yes" xml:space="preserve">
          <source>Ensures that the numbers &lt;code&gt;expected&lt;/code&gt; and &lt;code&gt;actual&lt;/code&gt; are not within &lt;code&gt;delta&lt;/code&gt; of each other.</source>
          <target state="translated">确保 &lt;code&gt;expected&lt;/code&gt; 的数字和 &lt;code&gt;actual&lt;/code&gt; 的数字不在彼此的 &lt;code&gt;delta&lt;/code&gt; 内。</target>
        </trans-unit>
        <trans-unit id="678ecd8183bb0fb5651361e5e6ee09f33726b956" translate="yes" xml:space="preserve">
          <source>Ensures that the numbers &lt;code&gt;expected&lt;/code&gt; and &lt;code&gt;actual&lt;/code&gt; are within &lt;code&gt;delta&lt;/code&gt; of each other.</source>
          <target state="translated">这些数字可以确保 &lt;code&gt;expected&lt;/code&gt; 和 &lt;code&gt;actual&lt;/code&gt; 有不到 &lt;code&gt;delta&lt;/code&gt; 对方。</target>
        </trans-unit>
        <trans-unit id="e91de6d54fa950dd237c482d44a1a3f976606799" translate="yes" xml:space="preserve">
          <source>Ensures that the numbers &lt;code&gt;expected&lt;/code&gt; and &lt;code&gt;actual&lt;/code&gt; don't have a relative error less than &lt;code&gt;epsilon&lt;/code&gt;.</source>
          <target state="translated">确保 &lt;code&gt;expected&lt;/code&gt; 和 &lt;code&gt;actual&lt;/code&gt; 数字的相对误差不超过 &lt;code&gt;epsilon&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4959a290fc0bb3a2fcb337cf1dd73cea2bb062be" translate="yes" xml:space="preserve">
          <source>Ensures that the numbers &lt;code&gt;expected&lt;/code&gt; and &lt;code&gt;actual&lt;/code&gt; have a relative error less than &lt;code&gt;epsilon&lt;/code&gt;.</source>
          <target state="translated">确保 &lt;code&gt;expected&lt;/code&gt; 和 &lt;code&gt;actual&lt;/code&gt; 数字的相对误差小于 &lt;code&gt;epsilon&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c3bde5efdd9870d135261a55f860a6d6cace9f5b" translate="yes" xml:space="preserve">
          <source>Enters an exclusive section, but allows dependency loading while blocked</source>
          <target state="translated">进入一个专属部分,但允许在阻塞时加载依赖关系</target>
        </trans-unit>
        <trans-unit id="6f84f289f88ff6d345a316cf81c4c074e6349dad" translate="yes" xml:space="preserve">
          <source>Entries set via &lt;code&gt;now&lt;/code&gt; are accessed the same way as standard entries: &lt;code&gt;flash['my-key']&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;now&lt;/code&gt; ，通过和标准条目相同的方式访问通过set设置的条目： &lt;code&gt;flash['my-key']&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="abab8484fb22420fea23aac7ece86fbfc8e48d3f" translate="yes" xml:space="preserve">
          <source>Enum#enum</source>
          <target state="translated">Enum#enum</target>
        </trans-unit>
        <trans-unit id="83df7a7ef8fa21dd3116045758d3e9407ca3149d" translate="yes" xml:space="preserve">
          <source>Enumerable</source>
          <target state="translated">Enumerable</target>
        </trans-unit>
        <trans-unit id="426cd02dc6e8596b4d542b66509e0ececb3dbac7" translate="yes" xml:space="preserve">
          <source>Enumerable#sum</source>
          <target state="translated">Enumerable#sum</target>
        </trans-unit>
        <trans-unit id="b0366a10ef9d6d3ef8c64dd51eeccb78bad1656a" translate="yes" xml:space="preserve">
          <source>Enumerated Types</source>
          <target state="translated">枚举类型</target>
        </trans-unit>
        <trans-unit id="f3104dd45718e6d1ac6a03b91ae67193ae8361f0" translate="yes" xml:space="preserve">
          <source>Enums</source>
          <target state="translated">Enums</target>
        </trans-unit>
        <trans-unit id="3f285368b384f623960bf30ca3091c2771355872" translate="yes" xml:space="preserve">
          <source>Environment-specific configuration files</source>
          <target state="translated">特定环境的配置文件</target>
        </trans-unit>
        <trans-unit id="a5d6845644132c12327b02ba21e2b33bca7e2a9f" translate="yes" xml:space="preserve">
          <source>Environmental Security</source>
          <target state="translated">环境安全</target>
        </trans-unit>
        <trans-unit id="74d352b7558c4fb4031084a42ffca7c0f0a3d828" translate="yes" xml:space="preserve">
          <source>Equal to &lt;code&gt;self[-2]&lt;/code&gt;.</source>
          <target state="translated">等于 &lt;code&gt;self[-2]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="38d6e00bd35a3376e7f79408f0d8e4c8fa3c3815" translate="yes" xml:space="preserve">
          <source>Equal to &lt;code&gt;self[-3]&lt;/code&gt;.</source>
          <target state="translated">等于 &lt;code&gt;self[-3]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8d951bb360b24689f80a48e47e96fd75eeaf3ec8" translate="yes" xml:space="preserve">
          <source>Equal to &lt;code&gt;self[1]&lt;/code&gt;.</source>
          <target state="translated">等于 &lt;code&gt;self[1]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1ea01ce23249ea3018734c931331b76f20f2bcc7" translate="yes" xml:space="preserve">
          <source>Equal to &lt;code&gt;self[2]&lt;/code&gt;.</source>
          <target state="translated">等于 &lt;code&gt;self[2]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ab3b100f69f609aa656dfc2e4519dc316d6fe54d" translate="yes" xml:space="preserve">
          <source>Equal to &lt;code&gt;self[3]&lt;/code&gt;.</source>
          <target state="translated">等于 &lt;code&gt;self[3]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c64569ff943ff17f37ae52541c085f3e6a96381a" translate="yes" xml:space="preserve">
          <source>Equal to &lt;code&gt;self[41]&lt;/code&gt;. Also known as accessing &amp;ldquo;the reddit&amp;rdquo;.</source>
          <target state="translated">等于 &lt;code&gt;self[41]&lt;/code&gt; 。也称为访问&amp;ldquo; reddit&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="ef798b3b89fa80546b5033762536df81ce868fab" translate="yes" xml:space="preserve">
          <source>Equal to &lt;code&gt;self[4]&lt;/code&gt;.</source>
          <target state="translated">等于 &lt;code&gt;self[4]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9529f7f73404bd0b9ea23ff594ca10bb7f129473" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;#==&lt;/code&gt;.</source>
          <target state="translated">等效于 &lt;code&gt;#==&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a44342d5dd041328124842669324242ab418d0e4" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;Array#==&lt;/code&gt;. Returns &lt;code&gt;true&lt;/code&gt; if the two arrays contain the same number of elements and if each element is equal to the corresponding element in the &lt;code&gt;other&lt;/code&gt; array, otherwise returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">等效于 &lt;code&gt;Array#==&lt;/code&gt; 。返回 &lt;code&gt;true&lt;/code&gt; 如果两个数组包含相同数量的元素，并且如果每一个元素等于在相应的元件 &lt;code&gt;other&lt;/code&gt; 阵列，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dd2a30837c0870d190c02ae372f807ee655408c3" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;String#!~&lt;/code&gt;. Match the class name against the given regexp. Returns &lt;code&gt;true&lt;/code&gt; if there is no match, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">等效于 &lt;code&gt;String#!~&lt;/code&gt; 。将类名与给定的regexp匹配。如果不匹配，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="42bd8da63398730dba38bfeeaed86357b2daddc0" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;String#&amp;lt;=&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">等效于 &lt;code&gt;String#&amp;lt;=&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b06a62f603f4b035b415575bc6e91d435c8334e3" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;String#==&lt;/code&gt;. Returns &lt;code&gt;true&lt;/code&gt; if the class name and &lt;code&gt;other&lt;/code&gt; are equal, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">等效于 &lt;code&gt;String#==&lt;/code&gt; 。如果类名和 &lt;code&gt;other&lt;/code&gt; 名相等，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8fc3a0a3e6c5f066c967122c180393d2866c4248" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;String#=~&lt;/code&gt;. Match the class name against the given regexp. Returns the position where the match starts or &lt;code&gt;nil&lt;/code&gt; if there is no match.</source>
          <target state="translated">等效于 &lt;code&gt;String#=~&lt;/code&gt; 。将类名与给定的regexp匹配。返回比赛开始的位置；如果没有比赛，则返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bd80d55c74c4aa16e8cc87c1c392fe6ac5fc11a8" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;String#eql?&lt;/code&gt;. Returns &lt;code&gt;true&lt;/code&gt; if the class name and &lt;code&gt;other&lt;/code&gt; have the same length and content, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">等价于 &lt;code&gt;String#eql?&lt;/code&gt; 。如果类名和 &lt;code&gt;other&lt;/code&gt; 类的长度和内容相同，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="71fe2b4fad96809ecf7b2fb6196123edf17f28b6" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;String#match?&lt;/code&gt;. Match the class name against the given regexp. Returns &lt;code&gt;true&lt;/code&gt; if there is a match, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">等价于 &lt;code&gt;String#match?&lt;/code&gt; 。将类名与给定的regexp匹配。如果存在匹配项，则返回 &lt;code&gt;true&lt;/code&gt; ，否则返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1a2e9b1d20bab8469979f40361921883d9b6848f" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;delete_all&lt;/code&gt;. The difference is that returns &lt;code&gt;self&lt;/code&gt;, instead of an array with the deleted objects, so methods can be chained. See &lt;code&gt;delete_all&lt;/code&gt; for more information. Note that because &lt;code&gt;delete_all&lt;/code&gt; removes records by directly running an SQL query into the database, the &lt;code&gt;updated_at&lt;/code&gt; column of the object is not changed.</source>
          <target state="translated">等效于 &lt;code&gt;delete_all&lt;/code&gt; 。区别在于返回 &lt;code&gt;self&lt;/code&gt; ，而不是包含已删除对象的数组，因此可以链接方法。有关更多信息，请参见 &lt;code&gt;delete_all&lt;/code&gt; 。请注意，因为 &lt;code&gt;delete_all&lt;/code&gt; 通过直接在数据库中运行SQL查询来删除记录，所以该对象的 &lt;code&gt;updated_at&lt;/code&gt; 列不会更改。</target>
        </trans-unit>
        <trans-unit id="c71d7ffc556e7cdbb9fa9d98e079f820949cd4c7" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;to_s&lt;/code&gt;.</source>
          <target state="translated">等效于 &lt;code&gt;to_s&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f5c6dccedce7c8297887031f9156c91f4eed4a75" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;update_columns(name =&amp;gt; value)&lt;/code&gt;.</source>
          <target state="translated">等效于 &lt;code&gt;update_columns(name =&amp;gt; value)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="701178c42cea561c9f957b4f4cd35ce1576b3b8b" translate="yes" xml:space="preserve">
          <source>Equivalent to Hash#keep_if, but returns &lt;code&gt;nil&lt;/code&gt; if no changes were made.</source>
          <target state="translated">与Hash＃keep_if等效，但如果未进行任何更改，则返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="047da798a59af25860bb890088e92344094aa749" translate="yes" xml:space="preserve">
          <source>Error generated by &lt;code&gt;delegate&lt;/code&gt; when a method is called on &lt;code&gt;nil&lt;/code&gt; and &lt;code&gt;allow_nil&lt;/code&gt; option is not used.</source>
          <target state="translated">由生成的错误 &lt;code&gt;delegate&lt;/code&gt; 当一个方法被称为上 &lt;code&gt;nil&lt;/code&gt; 和 &lt;code&gt;allow_nil&lt;/code&gt; 不使用选项。</target>
        </trans-unit>
        <trans-unit id="7b858f3888fecebf1f9b1c35a28d2802c22670ae" translate="yes" xml:space="preserve">
          <source>Error handling in transaction callbacks</source>
          <target state="translated">事务回调中的错误处理</target>
        </trans-unit>
        <trans-unit id="8207a4468e770cb82ac0bc41b74e2bdfb394055e" translate="yes" xml:space="preserve">
          <source>Error messages are first looked up in &lt;code&gt;activemodel.errors.models.MODEL.attributes.ATTRIBUTE.MESSAGE&lt;/code&gt;, if it's not there, it's looked up in &lt;code&gt;activemodel.errors.models.MODEL.MESSAGE&lt;/code&gt; and if that is not there also, it returns the translation of the default message (e.g. &lt;code&gt;activemodel.errors.messages.MESSAGE&lt;/code&gt;). The translated model name, translated attribute name and the value are available for interpolation.</source>
          <target state="translated">首先在 &lt;code&gt;activemodel.errors.models.MODEL.attributes.ATTRIBUTE.MESSAGE&lt;/code&gt; 中查找错误消息，如果不存在，则在 &lt;code&gt;activemodel.errors.models.MODEL.MESSAGE&lt;/code&gt; 中查找，如果不存在，则返回错误消息。默认消息的翻译（例如 &lt;code&gt;activemodel.errors.messages.MESSAGE&lt;/code&gt; ）。转换后的模型名称，转换后的属性名称和值可用于插值。</target>
        </trans-unit>
        <trans-unit id="805e86a8cbf628e38e4c45612c005a504009e79a" translate="yes" xml:space="preserve">
          <source>Errors</source>
          <target state="translated">Errors</target>
        </trans-unit>
        <trans-unit id="9258378e5efacba333e76765a0073ad0bf278152" translate="yes" xml:space="preserve">
          <source>Errors added to &lt;code&gt;record.errors[:base]&lt;/code&gt; relate to the state of the record as a whole, and not to a specific attribute.</source>
          <target state="translated">添加到 &lt;code&gt;record.errors[:base]&lt;/code&gt; 错误与整个记录的状态有关，而不与特定的属性有关。</target>
        </trans-unit>
        <trans-unit id="e0f90d3754a0e1215fd915f2d77646659e883042" translate="yes" xml:space="preserve">
          <source>Escape carrier returns and single and double quotes for JavaScript segments.</source>
          <target state="translated">逃逸载体回车和JavaScript段的单引号和双引号。</target>
        </trans-unit>
        <trans-unit id="0bc760285c65884937f9aa2830cbae336cf8bbfb" translate="yes" xml:space="preserve">
          <source>Escapes binary strings for bytea input to the database.</source>
          <target state="translated">将二进制字符串转义为字节码输入数据库。</target>
        </trans-unit>
        <trans-unit id="f116a1a28620fca683f1c1f63db4fd3eeca687df" translate="yes" xml:space="preserve">
          <source>Escapes carriage returns and single and double quotes for JavaScript segments.</source>
          <target state="translated">回避回车和JavaScript段的单引号和双引号。</target>
        </trans-unit>
        <trans-unit id="a65d456d7d4dc877db334711ca3d9f5b8e0f82c9" translate="yes" xml:space="preserve">
          <source>Especially for XSS, it is important to do &lt;em&gt;permitted input filtering instead of restricted&lt;/em&gt;. Permitted list filtering states the values allowed as opposed to the values not allowed. Restricted lists are never complete.</source>
          <target state="translated">特别是对于XSS，重要的是进行&lt;em&gt;允许的输入过滤而不是stricted&lt;/em&gt;。允许的列表过滤会声明允许的值，而不是不允许的值。受限列表永远不会完整。</target>
        </trans-unit>
        <trans-unit id="50919693f2d7a86b0c64b4b79d4a6db465494bdd" translate="yes" xml:space="preserve">
          <source>Establishes the connection to the database. Accepts a hash as input where the &lt;code&gt;:adapter&lt;/code&gt; key must be specified with the name of a database adapter (in lower-case) example for regular databases (MySQL, PostgreSQL, etc):</source>
          <target state="translated">建立与数据库的连接。接受哈希作为输入，其中必须使用常规数据库（MySQL，PostgreSQL等）的数据库适配器名称（小写）指定 &lt;code&gt;:adapter&lt;/code&gt; 键：</target>
        </trans-unit>
        <trans-unit id="79ca4ae748c48005395d93f3e8c50b1b92003392" translate="yes" xml:space="preserve">
          <source>EtagWithFlash</source>
          <target state="translated">EtagWithFlash</target>
        </trans-unit>
        <trans-unit id="3c36aff318b45b430a2dbdc4d3bf1027aecc2533" translate="yes" xml:space="preserve">
          <source>EtagWithTemplateDigest</source>
          <target state="translated">EtagWithTemplateDigest</target>
        </trans-unit>
        <trans-unit id="9f3953ce2ace414d71208e614028fee10db663f9" translate="yes" xml:space="preserve">
          <source>Eval the given block. All methods available to the current connection adapter are available within the block, so you can easily use the database definition DSL to build up your schema ( &lt;a href=&quot;connectionadapters/schemastatements#method-i-create_table&quot;&gt;create_table&lt;/a&gt;, &lt;a href=&quot;connectionadapters/schemastatements#method-i-add_index&quot;&gt;add_index&lt;/a&gt;, etc.).</source>
          <target state="translated">评估给定的块。该块中提供了当前连接适配器可用的所有方法，因此您可以轻松地使用数据库定义DSL来构建架构（&lt;a href=&quot;connectionadapters/schemastatements#method-i-create_table&quot;&gt;create_table&lt;/a&gt;，&lt;a href=&quot;connectionadapters/schemastatements#method-i-add_index&quot;&gt;add_index&lt;/a&gt;等）。</target>
        </trans-unit>
        <trans-unit id="b74f0e391125276c44777683d5f8f78e319245c2" translate="yes" xml:space="preserve">
          <source>Evaluate given block in context of base class, so that you can write class macros here. When you define more than one &lt;code&gt;included&lt;/code&gt; block, it raises an exception.</source>
          <target state="translated">在基类的上下文中评估给定的块，以便您可以在此处编写类宏。当您定义多个 &lt;code&gt;included&lt;/code&gt; 块时，它将引发异常。</target>
        </trans-unit>
        <trans-unit id="93d52d6df369e2b485008f62cadb0c87ec30733e" translate="yes" xml:space="preserve">
          <source>Even if the file &lt;code&gt;app/models/square.rb&lt;/code&gt; exists and defines the &lt;code&gt;Square&lt;/code&gt; class, if no code yet used that class, &lt;code&gt;Rectangle.all&lt;/code&gt; issues the query</source>
          <target state="translated">即使文件 &lt;code&gt;app/models/square.rb&lt;/code&gt; 存在并定义了 &lt;code&gt;Square&lt;/code&gt; 类，如果尚无代码使用该类，则 &lt;code&gt;Rectangle.all&lt;/code&gt; 也会发出查询</target>
        </trans-unit>
        <trans-unit id="79f0d7b2cecc676c44f9e5e5ea7efae466c11543" translate="yes" xml:space="preserve">
          <source>Even more, they are totally independent, take for instance</source>
          <target state="translated">更有甚者,它们是完全独立的,比如说</target>
        </trans-unit>
        <trans-unit id="2776d9c3f737f26c17c6800b368879c070720b93" translate="yes" xml:space="preserve">
          <source>Even though Active Record lets you specify conditions on the eager loaded associations just like &lt;code&gt;joins&lt;/code&gt;, the recommended way is to use &lt;a href=&quot;#joining-tables&quot;&gt;joins&lt;/a&gt; instead.</source>
          <target state="translated">即使Active Record允许您像 &lt;code&gt;joins&lt;/code&gt; 一样在急切加载的关联上指定条件，但推荐的方法还是改用&lt;a href=&quot;#joining-tables&quot;&gt;联接&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c34671a5f366faaadfc65a027e470773ba5973f9" translate="yes" xml:space="preserve">
          <source>Event data (&lt;code&gt;event.detail&lt;/code&gt;)</source>
          <target state="translated">事件数据（ &lt;code&gt;event.detail&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="8e10d77c1933bff4e0983cac1331b5eaa79948b7" translate="yes" xml:space="preserve">
          <source>Event name</source>
          <target state="translated">活动名称</target>
        </trans-unit>
        <trans-unit id="0dd646aaea37691c5d0eea4f57121eec7468b20b" translate="yes" xml:space="preserve">
          <source>Event target</source>
          <target state="translated">活动目标</target>
        </trans-unit>
        <trans-unit id="4f6e300b6625239223b9894fb9509005c5b82001" translate="yes" xml:space="preserve">
          <source>Evented File System Monitor</source>
          <target state="translated">事件文件系统监控</target>
        </trans-unit>
        <trans-unit id="5bd57422294ff575a67dbfa586d5637e1c132560" translate="yes" xml:space="preserve">
          <source>Every &lt;code&gt;frequency&lt;/code&gt; seconds, the reaper will call &lt;code&gt;reap&lt;/code&gt; and &lt;code&gt;flush&lt;/code&gt; on &lt;code&gt;pool&lt;/code&gt;. A reaper instantiated with a zero frequency will never reap the connection pool.</source>
          <target state="translated">每隔 &lt;code&gt;frequency&lt;/code&gt; 秒，收割者将调用 &lt;code&gt;reap&lt;/code&gt; 并在 &lt;code&gt;pool&lt;/code&gt; 上进行 &lt;code&gt;flush&lt;/code&gt; 。以零频率实例化的收割者将永远不会收获连接池。</target>
        </trans-unit>
        <trans-unit id="70eb59645531b46119ab3606d96581f576a54f36" translate="yes" xml:space="preserve">
          <source>Every HTTP response from your Rails application receives the following default security headers.</source>
          <target state="translated">来自Rails应用的每个HTTP响应都会收到以下默认安全头信息。</target>
        </trans-unit>
        <trans-unit id="3e236a2044c36be30ae89a40e83ed05a8dd292e9" translate="yes" xml:space="preserve">
          <source>Every Rails application comes with a standard set of middleware which it uses in this order in the development environment:</source>
          <target state="translated">每个Rails应用都自带一套标准的中间件,它在开发环境中使用的顺序是这样的。</target>
        </trans-unit>
        <trans-unit id="b715a6bbea612c2372e73b7bb47f6bdea0c53671" translate="yes" xml:space="preserve">
          <source>Every accessor comes with dirty tracking methods (&lt;code&gt;key_changed?&lt;/code&gt;, &lt;code&gt;key_was&lt;/code&gt; and &lt;code&gt;key_change&lt;/code&gt;) and methods to access the changes made during the last save (&lt;code&gt;saved_change_to_key?&lt;/code&gt;, &lt;code&gt;saved_change_to_key&lt;/code&gt; and &lt;code&gt;key_before_last_save&lt;/code&gt;).</source>
          <target state="translated">每个访问器都带有脏跟踪方法（ &lt;code&gt;key_changed?&lt;/code&gt; ， &lt;code&gt;key_was&lt;/code&gt; 和 &lt;code&gt;key_change&lt;/code&gt; ）和访问上次保存期间所做的更改的方法（ &lt;code&gt;saved_change_to_key?&lt;/code&gt; ， &lt;code&gt;saved_change_to_key&lt;/code&gt; 和 &lt;code&gt;key_before_last_save&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="70196de75780c9079d5bf0fcc9708526405b54ad" translate="yes" xml:space="preserve">
          <source>Every element of &lt;code&gt;config.autoload_paths&lt;/code&gt; should represent the top-level namespace (&lt;code&gt;Object&lt;/code&gt;) and they cannot be nested in consequence (with the exception of &lt;code&gt;concerns&lt;/code&gt; directories explained above).</source>
          <target state="translated">&lt;code&gt;config.autoload_paths&lt;/code&gt; 的每个元素都应表示顶级名称空间（ &lt;code&gt;Object&lt;/code&gt; ），因此不能嵌套它们（上面解释的 &lt;code&gt;concerns&lt;/code&gt; 目录除外）。</target>
        </trans-unit>
        <trans-unit id="47eec6a9966bb83778f0afb3a0dcc341f010cbb8" translate="yes" xml:space="preserve">
          <source>Every helper method dependent on &lt;code&gt;url_for&lt;/code&gt; (e.g. helpers for named routes like &lt;code&gt;root_path&lt;/code&gt; or &lt;code&gt;root_url&lt;/code&gt;, resource routes like &lt;code&gt;books_path&lt;/code&gt; or &lt;code&gt;books_url&lt;/code&gt;, etc.) will now &lt;strong&gt;automatically include the locale in the query string&lt;/strong&gt;, like this: &lt;code&gt;http://localhost:3001/?locale=ja&lt;/code&gt;.</source>
          <target state="translated">现在，每个依赖于 &lt;code&gt;url_for&lt;/code&gt; 的帮助器方法（例如，诸如 &lt;code&gt;root_path&lt;/code&gt; 或 &lt;code&gt;root_url&lt;/code&gt; 之类的命名路由的帮助器，诸如 &lt;code&gt;books_path&lt;/code&gt; 或 &lt;code&gt;books_url&lt;/code&gt; 等资源路由的帮助器）现在都将&lt;strong&gt;自动在查询字符串中包括语言环境&lt;/strong&gt;，例如： &lt;code&gt;http://localhost:3001/?locale=ja&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="33fccb879f0a7098f0b9bc519ced9f64955e93d6" translate="yes" xml:space="preserve">
          <source>Every major component of Rails (Action Mailer, Action Controller, Active Record, etc.) implements a railtie. Each of them is responsible for their own initialization. This makes Rails itself absent of any component hooks, allowing other components to be used in place of any of the Rails defaults.</source>
          <target state="translated">Rails的每个主要组件(Action Mailer、Action Controller、Active Record等)都实现了一个Railtie。它们每个组件都负责自己的初始化。这使得Rails本身没有任何组件钩子,允许使用其他组件来代替任何Rails默认的组件。</target>
        </trans-unit>
        <trans-unit id="2a8b42dba95dd6927e91b2879ccc4f50c8215de4" translate="yes" xml:space="preserve">
          <source>Every new user gets an activation code to activate their account when they get an e-mail with a link in it. After activating the account, the activation_code columns will be set to NULL in the database. If someone requested a URL like these, they would be logged in as the first activated user found in the database (and chances are that this is the administrator):</source>
          <target state="translated">每个新用户在收到带有链接的邮件时,都会得到一个激活码来激活他们的账户。激活账户后,数据库中的activation_code列会被设置为NULL。如果有人请求这样的URL,他们会以数据库中找到的第一个激活用户的身份登录(有可能是管理员)。</target>
        </trans-unit>
        <trans-unit id="732af181ae71d0774ea9ea1167c81b1f4e77b325" translate="yes" xml:space="preserve">
          <source>Every partial also has a local variable with the same name as the partial (minus the leading underscore). You can pass an object in to this local variable via the &lt;code&gt;:object&lt;/code&gt; option:</source>
          <target state="translated">每个局部变量还具有与局部变量同名的局部变量（减去前划线）。您可以通过 &lt;code&gt;:object&lt;/code&gt; 选项将一个对象传递给该局部变量：</target>
        </trans-unit>
        <trans-unit id="abc6c50a7c402432fcefdf8992692c76692ae3a1" translate="yes" xml:space="preserve">
          <source>Every test may contain one or more assertions, with no restriction as to how many assertions are allowed. Only when all the assertions are successful will the test pass.</source>
          <target state="translated">每一个测试都可以包含一个或多个断言,对允许的断言数量没有限制。只有当所有的断言都成功时,测试才算通过。</target>
        </trans-unit>
        <trans-unit id="afb8fcc25098d62457498c6eeef5b099a4fd72ef" translate="yes" xml:space="preserve">
          <source>Everything except for the &lt;code&gt;form_with&lt;/code&gt; declaration remained the same. The reason we can use this shorter, simpler &lt;code&gt;form_with&lt;/code&gt; declaration to stand in for either of the other forms is that &lt;code&gt;@article&lt;/code&gt; is a &lt;em&gt;resource&lt;/em&gt; corresponding to a full set of RESTful routes, and Rails is able to infer which URI and method to use. For more information about this use of &lt;code&gt;form_with&lt;/code&gt;, see &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionView/Helpers/FormHelper.html#method-i-form_with-label-Resource-oriented+style&quot;&gt;Resource-oriented style&lt;/a&gt;.</source>
          <target state="translated">除了 &lt;code&gt;form_with&lt;/code&gt; 声明外，其他所有内容均保持不变。我们可以使用这个更短，更简单的 &lt;code&gt;form_with&lt;/code&gt; 声明来代表其他任何形式的原因是，@ &lt;code&gt;@article&lt;/code&gt; 是与全套RESTful路由相对应的&lt;em&gt;资源&lt;/em&gt;，并且Rails能够推断要使用的URI和方法。有关 &lt;code&gt;form_with&lt;/code&gt; 用法的更多信息，请参见&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionView/Helpers/FormHelper.html#method-i-form_with-label-Resource-oriented+style&quot;&gt;面向资源的样式&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="85101b15ec72cd78eb55e176d898d4e1e83fbd2b" translate="yes" xml:space="preserve">
          <source>Everything this generator has created is neatly namespaced. The controller's class is defined within the &lt;code&gt;Blorgh&lt;/code&gt; module:</source>
          <target state="translated">该生成器创建的所有内容均经过整齐的命名空间。控制器的类在 &lt;code&gt;Blorgh&lt;/code&gt; 模块中定义：</target>
        </trans-unit>
        <trans-unit id="e682bf1d37e967f003dd3c123ff39791a431febb" translate="yes" xml:space="preserve">
          <source>Everything you need to know to install Rails and create your first application.</source>
          <target state="translated">安装Rails和创建第一个应用程序所需了解的一切。</target>
        </trans-unit>
        <trans-unit id="0f01ed56a1e32a05e5ef96e4d779f34784af9a96" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Example</target>
        </trans-unit>
        <trans-unit id="0178e103c00a74c7959443394834bae4d79d3e83" translate="yes" xml:space="preserve">
          <source>Example (for MySQL):</source>
          <target state="translated">例子(针对MySQL)。</target>
        </trans-unit>
        <trans-unit id="e4be2efc740b1d9b4cceecd671c3e3c4966cd79b" translate="yes" xml:space="preserve">
          <source>Example (for PostgreSQL with pg_hint_plan):</source>
          <target state="translated">例子(适用于PostgreSQL的pg_hint_plan)。</target>
        </trans-unit>
        <trans-unit id="6dcd3f46d09547b62bf07ba9b2943c95d53ddae3" translate="yes" xml:space="preserve">
          <source>Example 1</source>
          <target state="translated">例1</target>
        </trans-unit>
        <trans-unit id="ebb0a8154996562bf3644bd53887f39664b2c5c9" translate="yes" xml:space="preserve">
          <source>Example 1: User Appearances</source>
          <target state="translated">例1:用户外观</target>
        </trans-unit>
        <trans-unit id="1c56ea49918b9baed94cf4bc0ee9f324efc8841a" translate="yes" xml:space="preserve">
          <source>Example 2</source>
          <target state="translated">例二</target>
        </trans-unit>
        <trans-unit id="6576b29369e3a2f1e12fec8044472c7e8d7b0409" translate="yes" xml:space="preserve">
          <source>Example 2: Receiving New Web Notifications</source>
          <target state="translated">例2:接收新的网络通知</target>
        </trans-unit>
        <trans-unit id="fbf4dab701189a344fa5ab06d7b87c11a74e3da0" translate="yes" xml:space="preserve">
          <source>Example 3</source>
          <target state="translated">例三</target>
        </trans-unit>
        <trans-unit id="34ec5a67938ede7a842f9516985b65bd854fd17d" translate="yes" xml:space="preserve">
          <source>Example Action Mailer Configuration</source>
          <target state="translated">动作邮件发送器配置示例</target>
        </trans-unit>
        <trans-unit id="30d9e9e6f4ce5ea49de6402830c224a348be7a83" translate="yes" xml:space="preserve">
          <source>Example Usage:</source>
          <target state="translated">例子用法。</target>
        </trans-unit>
        <trans-unit id="0fc0ab406c6c6be47c9cd758eca5c6bb79653c3d" translate="yes" xml:space="preserve">
          <source>Example calling &lt;code&gt;create&lt;/code&gt; action and sending two params:</source>
          <target state="translated">调用 &lt;code&gt;create&lt;/code&gt; action并发送两个参数的示例：</target>
        </trans-unit>
        <trans-unit id="e70bba7d484c2062cb83575bc4b50e51410b4b39" translate="yes" xml:space="preserve">
          <source>Example controller overrides:</source>
          <target state="translated">控制器覆盖示例。</target>
        </trans-unit>
        <trans-unit id="51fb649202a15eed3306ff7c1ec71568caaab9db" translate="yes" xml:space="preserve">
          <source>Example for SQLite database:</source>
          <target state="translated">SQLite数据库的例子。</target>
        </trans-unit>
        <trans-unit id="5191ba01976154d1169b43b99803a3bad775f872" translate="yes" xml:space="preserve">
          <source>Example for deleting:</source>
          <target state="translated">删除的例子。</target>
        </trans-unit>
        <trans-unit id="7e2a6b26be4e697658b2fb7a69a0f31b77d715fd" translate="yes" xml:space="preserve">
          <source>Example for find with a lock: Imagine two concurrent transactions: each will read &lt;code&gt;person.visits == 2&lt;/code&gt;, add 1 to it, and save, resulting in two saves of &lt;code&gt;person.visits = 3&lt;/code&gt;. By locking the row, the second transaction has to wait until the first is finished; we get the expected &lt;code&gt;person.visits == 4&lt;/code&gt;.</source>
          <target state="translated">带有锁的查找示例：想象两个并发的事务：每个事务将读取 &lt;code&gt;person.visits == 2&lt;/code&gt; ，对其进行加1并保存，从而得到 &lt;code&gt;person.visits = 3&lt;/code&gt; 两次保存。通过锁定该行，第二个事务必须等到第一个事务完成为止。我们得到了预期的 &lt;code&gt;person.visits == 4&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="17853fff50896ae3c5477d3963f09af901f2878f" translate="yes" xml:space="preserve">
          <source>Example global policy:</source>
          <target state="translated">全球政策实例:</target>
        </trans-unit>
        <trans-unit id="6c300cc8e430d704d09a0ae0704e3c1499745dd7" translate="yes" xml:space="preserve">
          <source>Example object structure for use with this method:</source>
          <target state="translated">本方法使用的对象结构示例。</target>
        </trans-unit>
        <trans-unit id="27626cc2a4778547e8a7af1c8b9a390fa121d1b3" translate="yes" xml:space="preserve">
          <source>Example of a more complex migration that also needs to initialize data:</source>
          <target state="translated">一个更复杂的迁移的例子,也需要初始化数据。</target>
        </trans-unit>
        <trans-unit id="09fff215a9ba6b6b686626b5fcc8a95ec265f154" translate="yes" xml:space="preserve">
          <source>Example of a simple migration:</source>
          <target state="translated">简单迁移的例子。</target>
        </trans-unit>
        <trans-unit id="927aa803d6176a0d9095808b8905b0db1e98aec9" translate="yes" xml:space="preserve">
          <source>Example of vulnerable code that could be used by attacker, if &lt;code&gt;deep_munge&lt;/code&gt; wasn't performed is:</source>
          <target state="translated">如果未执行 &lt;code&gt;deep_munge&lt;/code&gt; ，则攻击者可能会使用易受攻击的代码的示例为：</target>
        </trans-unit>
        <trans-unit id="2e4ccc244461fd2a12825ef96a60da2329e2ce3c" translate="yes" xml:space="preserve">
          <source>Example output:</source>
          <target state="translated">产出示例:</target>
        </trans-unit>
        <trans-unit id="5ab7721397827b925456d2a147cb5704105a62a7" translate="yes" xml:space="preserve">
          <source>Example usage:</source>
          <target state="translated">使用实例。</target>
        </trans-unit>
        <trans-unit id="f26ed3ec911f99ca90b4cb4a4ac973d6436223db" translate="yes" xml:space="preserve">
          <source>Example using &lt;a href=&quot;classmethods#method-i-has_secure_token&quot;&gt;has_secure_token&lt;/a&gt;</source>
          <target state="translated">使用&lt;a href=&quot;classmethods#method-i-has_secure_token&quot;&gt;has_secure_token的&lt;/a&gt;示例</target>
        </trans-unit>
        <trans-unit id="812b1d83402bcb1ab8b20ec92d201184082f4096" translate="yes" xml:space="preserve">
          <source>Example using Active Record (which automatically includes &lt;a href=&quot;../securepassword&quot;&gt;ActiveModel::SecurePassword&lt;/a&gt;):</source>
          <target state="translated">使用Active Record（自动包含&lt;a href=&quot;../securepassword&quot;&gt;ActiveModel :: SecurePassword&lt;/a&gt;）的示例：</target>
        </trans-unit>
        <trans-unit id="33b01708809c7e2836ce9b016922604bfb27aef8" translate="yes" xml:space="preserve">
          <source>Example with &lt;code&gt;:include&lt;/code&gt; option</source>
          <target state="translated">例如具有 &lt;code&gt;:include&lt;/code&gt; 选项</target>
        </trans-unit>
        <trans-unit id="e0df306032141652ccb0779d2f6c0166f33970b4" translate="yes" xml:space="preserve">
          <source>Example with &lt;code&gt;@post.person_id =&amp;gt; 2&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;@post.person_id =&amp;gt; 2&lt;/code&gt; 示例：</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="bd36b0d2741684c20b1b7493510751e40de58c7e" translate="yes" xml:space="preserve">
          <source>Example: Calling the &lt;code&gt;:show&lt;/code&gt; action for the first &lt;code&gt;Article&lt;/code&gt;, passing in an &lt;code&gt;HTTP_REFERER&lt;/code&gt; header:</source>
          <target state="translated">示例：调用第一个 &lt;code&gt;Article&lt;/code&gt; 的 &lt;code&gt;:show&lt;/code&gt; 动作，并传入 &lt;code&gt;HTTP_REFERER&lt;/code&gt; 标头：</target>
        </trans-unit>
        <trans-unit id="eb01bf04c9a0e8a71c45816513df424f1c7ffedb" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">Examples</target>
        </trans-unit>
        <trans-unit id="9e6d3afdafda219dea96dd077bdd8227d7175d39" translate="yes" xml:space="preserve">
          <source>Examples of &lt;code&gt;in?&lt;/code&gt;:</source>
          <target state="translated">例子 &lt;code&gt;in?&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="e0087908949a85c2c707909afa0e04ab7eabd8f2" translate="yes" xml:space="preserve">
          <source>Examples of calling methods on the returned &lt;a href=&quot;batches/batchenumerator&quot;&gt;BatchEnumerator&lt;/a&gt; object:</source>
          <target state="translated">返回的&lt;a href=&quot;batches/batchenumerator&quot;&gt;BatchEnumerator&lt;/a&gt;对象上的调用方法的示例：</target>
        </trans-unit>
        <trans-unit id="7ad9f8e3aebd0e5af11c08a490079daf3efc93b9" translate="yes" xml:space="preserve">
          <source>Examples of reading:</source>
          <target state="translated">读书的例子:</target>
        </trans-unit>
        <trans-unit id="7f8a716c7dae95bed0cb5f791996789de63dfa6b" translate="yes" xml:space="preserve">
          <source>Examples of using the default rails validators:</source>
          <target state="translated">使用默认rails验证器的例子。</target>
        </trans-unit>
        <trans-unit id="87c9b736c3a5688944794a28c53aff77fea8ae2f" translate="yes" xml:space="preserve">
          <source>Examples of writing:</source>
          <target state="translated">写作的例子。</target>
        </trans-unit>
        <trans-unit id="fb3447b632f6a431215776dcf254a01001a40c4f" translate="yes" xml:space="preserve">
          <source>Examples:</source>
          <target state="translated">Examples:</target>
        </trans-unit>
        <trans-unit id="761970702b542f86fca9c972ac8eeef987d589f4" translate="yes" xml:space="preserve">
          <source>Except for hashes, given an unescaped &lt;code&gt;key&lt;/code&gt; this method constructs the part of a query string that would map such key to what &lt;code&gt;to_param&lt;/code&gt; returns. For example, given</source>
          <target state="translated">除了散列，给定未转义的 &lt;code&gt;key&lt;/code&gt; 此方法将构造查询字符串的一部分，该部分将此类键映射到 &lt;code&gt;to_param&lt;/code&gt; 返回的值。例如，给定</target>
        </trans-unit>
        <trans-unit id="8f34232b2bd714ba318a50178df210d760e21de3" translate="yes" xml:space="preserve">
          <source>Exception that can be raised to stop migrations from being rolled back. For example the following migration is not reversible. Rolling back this migration will raise an &lt;a href=&quot;irreversiblemigration&quot;&gt;ActiveRecord::IrreversibleMigration&lt;/a&gt; error.</source>
          <target state="translated">可以引发异常以阻止迁移回滚。例如，以下迁移是不可逆的。回滚此迁移将引发&lt;a href=&quot;irreversiblemigration&quot;&gt;ActiveRecord :: IrreversibleMigration&lt;/a&gt;错误。</target>
        </trans-unit>
        <trans-unit id="cd3dfbe79fda3a9d92de67b1bd4f1dc9f60ab723" translate="yes" xml:space="preserve">
          <source>Exceptions</source>
          <target state="translated">Exceptions</target>
        </trans-unit>
        <trans-unit id="0e0313971bf91b98c582cad08feed10832718358" translate="yes" xml:space="preserve">
          <source>Exceptions can be handled at the class level using the familiar &lt;code&gt;Rescuable&lt;/code&gt; approach:</source>
          <target state="translated">可以使用熟悉的 &lt;code&gt;Rescuable&lt;/code&gt; 方法在类级别处理异常：</target>
        </trans-unit>
        <trans-unit id="954bbd429f949a44be9288f30636016f8b4535e6" translate="yes" xml:space="preserve">
          <source>Exceptions raised inside exception handlers are not propagated up.</source>
          <target state="translated">异常处理程序内部引发的异常不会向上传播。</target>
        </trans-unit>
        <trans-unit id="3385200c8dbcfc96408b858080468c66bd6a4c12" translate="yes" xml:space="preserve">
          <source>Exceptions#retry_job</source>
          <target state="translated">Exceptions#retry_job</target>
        </trans-unit>
        <trans-unit id="a03eecb0afef4d2898897b050e5ff5f2a2436125" translate="yes" xml:space="preserve">
          <source>Exceptions::ClassMethods</source>
          <target state="translated">Exceptions::ClassMethods</target>
        </trans-unit>
        <trans-unit id="683c60828def65777f78b6aed19bc527642b569a" translate="yes" xml:space="preserve">
          <source>Exceptions::ClassMethods#discard_on</source>
          <target state="translated">Exceptions::ClassMethods#discard_on</target>
        </trans-unit>
        <trans-unit id="1222e1b8267ab9c9168636f14c5e97b989369e14" translate="yes" xml:space="preserve">
          <source>Exceptions::ClassMethods#retry_on</source>
          <target state="translated">Exceptions::ClassMethods#retry_on</target>
        </trans-unit>
        <trans-unit id="3e4ac9f05a188bfa180afc1802ebf7c33fea43a7" translate="yes" xml:space="preserve">
          <source>Executable Code in File Uploads</source>
          <target state="translated">文件上传中的可执行代码</target>
        </trans-unit>
        <trans-unit id="6897628c4e1cb73a8eaf2ff3d263eb775be0721f" translate="yes" xml:space="preserve">
          <source>Execute the block given if updated.</source>
          <target state="translated">如果更新,则执行给定的块。</target>
        </trans-unit>
        <trans-unit id="01ec6a328e2f9b09926b0e8220e998084ec8f969" translate="yes" xml:space="preserve">
          <source>Execute the supplied block while holding an exclusive lock, preventing any other thread from being inside a run_interlock block at the same time.</source>
          <target state="translated">在持有独占锁的情况下执行所提供的块,防止任何其他线程同时处于run_interlock块中。</target>
        </trans-unit>
        <trans-unit id="bfca9a2c493a75521cd537b362b8247dd2deaeda" translate="yes" xml:space="preserve">
          <source>Execute the supplied block while holding the Exclusive lock. If &lt;code&gt;no_wait&lt;/code&gt; is set and the lock is not immediately available, returns &lt;code&gt;nil&lt;/code&gt; without yielding. Otherwise, returns the result of the block.</source>
          <target state="translated">按住排他锁，执行提供的块。如果设置了 &lt;code&gt;no_wait&lt;/code&gt; 且锁不立即可用，则返回 &lt;code&gt;nil&lt;/code&gt; 而不屈服。否则，返回块的结果。</target>
        </trans-unit>
        <trans-unit id="41270aaed37b6c508a45a878307aac11b8bfe70a" translate="yes" xml:space="preserve">
          <source>Execute the supplied block while holding the Share lock.</source>
          <target state="translated">握住共享锁的同时执行所提供的块。</target>
        </trans-unit>
        <trans-unit id="dcf404d10f2f52490c6b84fd30ea1a42176bbd5a" translate="yes" xml:space="preserve">
          <source>Execute the supplied block without interference from any concurrent loads.</source>
          <target state="translated">执行所提供的块,不受任何并发负载的干扰。</target>
        </trans-unit>
        <trans-unit id="f5fb33e1b50f3e54af157464f3c616a7ad960ee2" translate="yes" xml:space="preserve">
          <source>Execute this migration in the named direction</source>
          <target state="translated">在指定的方向上执行这个迁移</target>
        </trans-unit>
        <trans-unit id="91834f7fd5a2006d667e02788083889a1c720d87" translate="yes" xml:space="preserve">
          <source>Executes &lt;code&gt;sql&lt;/code&gt; statement in the context of this connection using &lt;code&gt;binds&lt;/code&gt; as the bind substitutes. &lt;code&gt;name&lt;/code&gt; is logged along with the executed &lt;code&gt;sql&lt;/code&gt; statement.</source>
          <target state="translated">在此连接的上下文中，使用 &lt;code&gt;binds&lt;/code&gt; 作为绑定替代项执行 &lt;code&gt;sql&lt;/code&gt; 语句。 &lt;code&gt;name&lt;/code&gt; 与执行的 &lt;code&gt;sql&lt;/code&gt; 语句一起记录。</target>
        </trans-unit>
        <trans-unit id="483184be42fde04fcd38977a69e908d3c880cbb5" translate="yes" xml:space="preserve">
          <source>Executes a custom SQL query against your database and returns all the results. The results will be returned as an array, with the requested columns encapsulated as attributes of the model you call this method from. For example, if you call &lt;code&gt;Product.find_by_sql&lt;/code&gt;, then the results will be returned in a &lt;code&gt;Product&lt;/code&gt; object with the attributes you specified in the SQL query.</source>
          <target state="translated">对您的数据库执行自定义SQL查询并返回所有结果。结果将以数组形式返回，并将请求的列封装为您从中调用此方法的模型的属性。例如，如果调用 &lt;code&gt;Product.find_by_sql&lt;/code&gt; ，则结果将在具有您在SQL查询中指定的属性的 &lt;code&gt;Product&lt;/code&gt; 对象中返回。</target>
        </trans-unit>
        <trans-unit id="89cc0ab821805c90789117e6688667a713f2aa33" translate="yes" xml:space="preserve">
          <source>Executes a system command, capturing its binary output in a tempfile. Yields the tempfile.</source>
          <target state="translated">执行系统命令,将其二进制输出捕捉到tempfile中。产生tempfile。</target>
        </trans-unit>
        <trans-unit id="d7c18c6ad39667a00e57eee8644983c5b3f94993" translate="yes" xml:space="preserve">
          <source>Executes an INSERT query and returns the new record's ID</source>
          <target state="translated">执行INSERT查询并返回新记录的ID。</target>
        </trans-unit>
        <trans-unit id="5cdbf210ef5afaaed18c39d313a546f6024896b0" translate="yes" xml:space="preserve">
          <source>Executes an SQL statement, returning a PG::Result object on success or raising a PG::Error exception otherwise. Note: the PG::Result object is manually memory managed; if you don't need it specifically, you may want consider the &lt;code&gt;exec_query&lt;/code&gt; wrapper.</source>
          <target state="translated">执行一条SQL语句，成功返回PG :: Result对象，否则引发PG :: Error异常。注意：PG :: Result对象是手动进行内存管理的；如果您不需要它，可以考虑使用 &lt;code&gt;exec_query&lt;/code&gt; 包装器。</target>
        </trans-unit>
        <trans-unit id="1647e371073ad04a1a13783cb27d4ed9efb0eff1" translate="yes" xml:space="preserve">
          <source>Executes an arbitrary command. Just like the backticks. Let's say you want to remove the &lt;code&gt;README.rdoc&lt;/code&gt; file:</source>
          <target state="translated">执行任意命令。就像反引号一样。假设您要删除 &lt;code&gt;README.rdoc&lt;/code&gt; 文件：</target>
        </trans-unit>
        <trans-unit id="007dfd990cf4ecbe4c3ab7b43dfc8995158ac21a" translate="yes" xml:space="preserve">
          <source>Executes delete &lt;code&gt;sql&lt;/code&gt; statement in the context of this connection using &lt;code&gt;binds&lt;/code&gt; as the bind substitutes. &lt;code&gt;name&lt;/code&gt; is logged along with the executed &lt;code&gt;sql&lt;/code&gt; statement.</source>
          <target state="translated">在此连接的上下文中，使用 &lt;code&gt;binds&lt;/code&gt; 作为绑定替代项执行delete &lt;code&gt;sql&lt;/code&gt; 语句。 &lt;code&gt;name&lt;/code&gt; 与执行的 &lt;code&gt;sql&lt;/code&gt; 语句一起记录。</target>
        </trans-unit>
        <trans-unit id="68931881d00ac225254ec719704d85851a68f83e" translate="yes" xml:space="preserve">
          <source>Executes insert &lt;code&gt;sql&lt;/code&gt; statement in the context of this connection using &lt;code&gt;binds&lt;/code&gt; as the bind substitutes. &lt;code&gt;name&lt;/code&gt; is logged along with the executed &lt;code&gt;sql&lt;/code&gt; statement.</source>
          <target state="translated">在此连接的上下文中，使用 &lt;code&gt;binds&lt;/code&gt; 作为绑定替代项执行insert &lt;code&gt;sql&lt;/code&gt; 语句。 &lt;code&gt;name&lt;/code&gt; 与执行的 &lt;code&gt;sql&lt;/code&gt; 语句一起记录。</target>
        </trans-unit>
        <trans-unit id="90b3bcc7990053de6fd80b91cdd147345ff420da" translate="yes" xml:space="preserve">
          <source>Executes the SQL statement in the context of this connection and returns the raw result from the connection adapter. Note: depending on your database connector, the result returned by this method may be manually memory managed. Consider using the &lt;a href=&quot;databasestatements#method-i-exec_query&quot;&gt;#exec_query&lt;/a&gt; wrapper instead.</source>
          <target state="translated">在此连接的上下文中执行SQL语句，并从连接适配器返回原始结果。注意：根据数据库连接器的不同，此方法返回的结果可能是手动进行内存管理的。考虑改用&lt;a href=&quot;databasestatements#method-i-exec_query&quot;&gt;#exec_query&lt;/a&gt;包装器。</target>
        </trans-unit>
        <trans-unit id="1b16a352708922fde1361c6f5ed05e77b8f06fea" translate="yes" xml:space="preserve">
          <source>Executes the SQL statement in the context of this connection.</source>
          <target state="translated">在这个连接的上下文中执行SQL语句。</target>
        </trans-unit>
        <trans-unit id="c702fad82490424f3a6ffc8fe3cc79b899b4c3f8" translate="yes" xml:space="preserve">
          <source>Executes the delete statement and returns the number of rows affected.</source>
          <target state="translated">执行删除语句并返回受影响的行数。</target>
        </trans-unit>
        <trans-unit id="bc2a334164e33eaee73c9e4647e8815522a2ecf1" translate="yes" xml:space="preserve">
          <source>Executes the given block and updates the latest watched files and timestamp.</source>
          <target state="translated">执行给定的块并更新最新的监视文件和时间戳。</target>
        </trans-unit>
        <trans-unit id="2c924a499f11b325de2a53b7c642ec31ffcf166d" translate="yes" xml:space="preserve">
          <source>Executes the truncate statement.</source>
          <target state="translated">执行truncate语句。</target>
        </trans-unit>
        <trans-unit id="4466d364d92720cd14540817202f736f2af412e6" translate="yes" xml:space="preserve">
          <source>Executes the update statement and returns the number of rows affected.</source>
          <target state="translated">执行更新语句并返回受影响的行数。</target>
        </trans-unit>
        <trans-unit id="15f2d98aabc8adc4d9008469480d9e486231e2ee" translate="yes" xml:space="preserve">
          <source>Executes update &lt;code&gt;sql&lt;/code&gt; statement in the context of this connection using &lt;code&gt;binds&lt;/code&gt; as the bind substitutes. &lt;code&gt;name&lt;/code&gt; is logged along with the executed &lt;code&gt;sql&lt;/code&gt; statement.</source>
          <target state="translated">在此连接的上下文中，使用 &lt;code&gt;binds&lt;/code&gt; 作为绑定替代项执行update &lt;code&gt;sql&lt;/code&gt; 语句。 &lt;code&gt;name&lt;/code&gt; 与执行的 &lt;code&gt;sql&lt;/code&gt; 语句一起记录。</target>
        </trans-unit>
        <trans-unit id="6d525b71568c2d982f46feb96b332bedcdc6e4a0" translate="yes" xml:space="preserve">
          <source>Execution</source>
          <target state="translated">Execution</target>
        </trans-unit>
        <trans-unit id="a21e3f3c3f8823a51f9d0d7d0efa01561ee8d0d3" translate="yes" xml:space="preserve">
          <source>Execution#perform</source>
          <target state="translated">Execution#perform</target>
        </trans-unit>
        <trans-unit id="e73f2a772067808e320afde3ad3e7b591bb1106e" translate="yes" xml:space="preserve">
          <source>Execution#perform_now</source>
          <target state="translated">Execution#perform_now</target>
        </trans-unit>
        <trans-unit id="b82feace2f44d7e8e136d1688aa894120bcca0f4" translate="yes" xml:space="preserve">
          <source>Execution::ClassMethods</source>
          <target state="translated">Execution::ClassMethods</target>
        </trans-unit>
        <trans-unit id="0dfb6be09e4d57719171bc7f9dfc9a7339b0abe5" translate="yes" xml:space="preserve">
          <source>Execution::ClassMethods#perform_now</source>
          <target state="translated">Execution::ClassMethods#perform_now</target>
        </trans-unit>
        <trans-unit id="76edb34b71e328ce169115f987d077b5dc463375" translate="yes" xml:space="preserve">
          <source>ExecutionWrapper</source>
          <target state="translated">ExecutionWrapper</target>
        </trans-unit>
        <trans-unit id="d686fe386f26950f154afadef5b04cde3d9bd1d2" translate="yes" xml:space="preserve">
          <source>ExecutionWrapper#complete!</source>
          <target state="translated">ExecutionWrapper#complete!</target>
        </trans-unit>
        <trans-unit id="8e35e94100695ebe0894add8c0b165d13e019fae" translate="yes" xml:space="preserve">
          <source>ExecutionWrapper::active</source>
          <target state="translated">ExecutionWrapper::active</target>
        </trans-unit>
        <trans-unit id="7a07bc6eb55ef35e1a3806ed755a6d65a5035402" translate="yes" xml:space="preserve">
          <source>ExecutionWrapper::register_hook</source>
          <target state="translated">ExecutionWrapper::register_hook</target>
        </trans-unit>
        <trans-unit id="31ef29c701f51bca647a8057229c1b3929362595" translate="yes" xml:space="preserve">
          <source>ExecutionWrapper::run!</source>
          <target state="translated">ExecutionWrapper::run!</target>
        </trans-unit>
        <trans-unit id="1a97f1c517d7cc434872da05add840e7884afc20" translate="yes" xml:space="preserve">
          <source>ExecutionWrapper::to_complete</source>
          <target state="translated">ExecutionWrapper::to_complete</target>
        </trans-unit>
        <trans-unit id="58f732cc0de2631edbdd1055a6a16a7887f4fc52" translate="yes" xml:space="preserve">
          <source>ExecutionWrapper::to_run</source>
          <target state="translated">ExecutionWrapper::to_run</target>
        </trans-unit>
        <trans-unit id="ba4e373828555318f20b4bc288f2125acb9401f1" translate="yes" xml:space="preserve">
          <source>ExecutionWrapper::wrap</source>
          <target state="translated">ExecutionWrapper::wrap</target>
        </trans-unit>
        <trans-unit id="c1f6604b7486fef57febf39070b6b5f55ece6c6b" translate="yes" xml:space="preserve">
          <source>Executor</source>
          <target state="translated">Executor</target>
        </trans-unit>
        <trans-unit id="938eae645b4d9aee17a2e6f97d091b441944b14d" translate="yes" xml:space="preserve">
          <source>Exert &lt;a href=&quot;behavior#method-i-disconnect&quot;&gt;disconnect&lt;/a&gt; on the connection under test.</source>
          <target state="translated">发挥&lt;a href=&quot;behavior#method-i-disconnect&quot;&gt;断开&lt;/a&gt;被测连接上。</target>
        </trans-unit>
        <trans-unit id="7583a1ed65c546121bd433318e910d5ad66b5cad" translate="yes" xml:space="preserve">
          <source>Exim</source>
          <target state="translated">Exim</target>
        </trans-unit>
        <trans-unit id="a930d9f44591122f4d975fe7b76e3529ac39484f" translate="yes" xml:space="preserve">
          <source>Exim (&amp;lt;tt&amp;gt;bin/rails action_mailbox:ingress:exim)</source>
          <target state="translated">进出口（&amp;lt;tt&amp;gt; bin / rails action_mailbox：ingress：exim）</target>
        </trans-unit>
        <trans-unit id="fe7aedbd74125d3f9d4319d72241f50478b41cde" translate="yes" xml:space="preserve">
          <source>Existence of Objects</source>
          <target state="translated">对象的存在</target>
        </trans-unit>
        <trans-unit id="17ed3d19ace876055e098699c14c65fedd0f0d70" translate="yes" xml:space="preserve">
          <source>Expands all paths against the root and return all unique values.</source>
          <target state="translated">展开所有针对根的路径,并返回所有唯一的值。</target>
        </trans-unit>
        <trans-unit id="629fe0a66aeb391ad4cf93d03c6a2a7c418f8c79" translate="yes" xml:space="preserve">
          <source>Expands out the &lt;code&gt;key&lt;/code&gt; argument into a key that can be used for the cache store. Optionally accepts a namespace, and all keys will be scoped within that namespace.</source>
          <target state="translated">将 &lt;code&gt;key&lt;/code&gt; 参数扩展为可用于缓存存储的键。（可选）接受一个名称空间，并且所有键都将在该名称空间范围内。</target>
        </trans-unit>
        <trans-unit id="c629ed535f5c56361403cca4a35ab93670a1640a" translate="yes" xml:space="preserve">
          <source>Expects arguments in the same format as &lt;a href=&quot;core#method-c-new&quot;&gt;ActiveRecord::Base.new&lt;/a&gt;.</source>
          <target state="translated">期望参数采用与&lt;a href=&quot;core#method-c-new&quot;&gt;ActiveRecord :: Base.new&lt;/a&gt;相同的格式。</target>
        </trans-unit>
        <trans-unit id="1bd9cb694b0d986699fe91049b7550d968d56067" translate="yes" xml:space="preserve">
          <source>Expects arguments in the same format as &lt;a href=&quot;persistence/classmethods#method-i-create&quot;&gt;ActiveRecord::Base.create&lt;/a&gt;.</source>
          <target state="translated">期望参数采用与&lt;a href=&quot;persistence/classmethods#method-i-create&quot;&gt;ActiveRecord :: Base.create&lt;/a&gt;相同的格式。</target>
        </trans-unit>
        <trans-unit id="96e02d62e8a5b91d5d9c3f16d64b5657d5c9c445" translate="yes" xml:space="preserve">
          <source>Expects arguments in the same format as &lt;a href=&quot;persistence/classmethods#method-i-create-21&quot;&gt;ActiveRecord::Base.create!&lt;/a&gt;.</source>
          <target state="translated">期望参数采用与&lt;a href=&quot;persistence/classmethods#method-i-create-21&quot;&gt;ActiveRecord :: Base.create&lt;/a&gt;相同的格式！。</target>
        </trans-unit>
        <trans-unit id="ccb0476f83c1c801ae3e425da0a72aec98093240" translate="yes" xml:space="preserve">
          <source>Expiry in signed or encrypted cookie is now embedded in the cookies values</source>
          <target state="translated">签名或加密cookie的到期时间现在已经嵌入到cookie值中。</target>
        </trans-unit>
        <trans-unit id="185fe4cf8d580178cf4b7cb871610d34d9f1a925" translate="yes" xml:space="preserve">
          <source>Explaining how Rack works is not really in the scope of this guide. In case you are not familiar with Rack's basics, you should check out the &lt;a href=&quot;#resources&quot;&gt;Resources&lt;/a&gt; section below.</source>
          <target state="translated">解释Rack的工作原理实际上不在本指南的范围之内。如果您不熟悉Rack的基础知识，则应查看下面的&lt;a href=&quot;#resources&quot;&gt;参考资料&lt;/a&gt;部分。</target>
        </trans-unit>
        <trans-unit id="8154f4d42663882bdee3a5fa4fc8e5313298b558" translate="yes" xml:space="preserve">
          <source>Explicit block use for &lt;code&gt;ActiveSupport::Callbacks&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;ActiveSupport::Callbacks&lt;/code&gt; 显式块使用</target>
        </trans-unit>
        <trans-unit id="4bd4881d11401b91cc1ab481d555cbe8f277a4f0" translate="yes" xml:space="preserve">
          <source>Explicit dependencies</source>
          <target state="translated">明确的依赖性</target>
        </trans-unit>
        <trans-unit id="195f251241709d131b74886fa57fa568e097ef00" translate="yes" xml:space="preserve">
          <source>Explicitly passing a locale:</source>
          <target state="translated">明确传递一个locale。</target>
        </trans-unit>
        <trans-unit id="73d747d5e66b80b521d289f5f4525ebc0603783b" translate="yes" xml:space="preserve">
          <source>Expose one or more attributes within a block. Old values are returned after the block concludes. Example demonstrating the common use of needing to set Current attributes outside the request-cycle:</source>
          <target state="translated">在一个块中暴露一个或多个属性。在块结束后返回旧值。例子演示了需要在请求周期外设置Current属性的常见用法。</target>
        </trans-unit>
        <trans-unit id="ca7c9a9f809bcf6ba4f834c8fd222e6957b29427" translate="yes" xml:space="preserve">
          <source>Extend core Ruby classes like Hash and String.</source>
          <target state="translated">扩展核心Ruby类,如Hash和String。</target>
        </trans-unit>
        <trans-unit id="7cec80a7b857612410db1cd668f5560329ffb829" translate="yes" xml:space="preserve">
          <source>Extended modules for your application.</source>
          <target state="translated">为您的应用扩展模块。</target>
        </trans-unit>
        <trans-unit id="d6c5d2e4a03ba2cddcff56256d15a08a8e4baee8" translate="yes" xml:space="preserve">
          <source>Extending Core Classes</source>
          <target state="translated">扩展核心类</target>
        </trans-unit>
        <trans-unit id="3a49199cf9f2a60298769431ea7beadd4e082cbf" translate="yes" xml:space="preserve">
          <source>Extending Rails</source>
          <target state="translated">延伸轨道</target>
        </trans-unit>
        <trans-unit id="5892a4a539fbe9dba80a4e1a6e224657d13a68e8" translate="yes" xml:space="preserve">
          <source>Extends &lt;code&gt;Array#to_s&lt;/code&gt; to convert a collection of elements into a comma separated id list if &lt;code&gt;:db&lt;/code&gt; argument is given as the format.</source>
          <target state="translated">如果将 &lt;code&gt;:db&lt;/code&gt; 参数指定为格式，则扩展 &lt;code&gt;Array#to_s&lt;/code&gt; 以将元素集合转换为逗号分隔的ID列表。</target>
        </trans-unit>
        <trans-unit id="c00a094c1074622ae0260a5e7256e1c1f6969590" translate="yes" xml:space="preserve">
          <source>Extends the default Range#=== to support range comparisons.</source>
          <target state="translated">扩展默认的Range#===,支持范围比较。</target>
        </trans-unit>
        <trans-unit id="68e988bb8001f0e6eccc57d6eab580a4163fe5b8" translate="yes" xml:space="preserve">
          <source>Extends the default Range#cover? to support range comparisons.</source>
          <target state="translated">扩展默认的Range#cover? 支持范围比较。</target>
        </trans-unit>
        <trans-unit id="3a8d564936c012c67661e189ea9e54828d6624b4" translate="yes" xml:space="preserve">
          <source>Extends the default Range#include? to support range comparisons.</source>
          <target state="translated">扩展默认的Range#include? 支持范围比较。</target>
        </trans-unit>
        <trans-unit id="55510833f161abd5eeb2c81606cb9ff6dc86e9d1" translate="yes" xml:space="preserve">
          <source>Extends the module object with class/module and instance accessors for class/module attributes, just like the native attr* accessors for instance attributes, but does so on a per-thread basis.</source>
          <target state="translated">扩展模块对象,为类/模块属性提供类/模块和实例访问器,就像为实例属性提供原生attr*访问器一样,但是是以每个线程为基础的。</target>
        </trans-unit>
        <trans-unit id="ba730a47e84dfbea8c6d0ae64bfa8508dde90a37" translate="yes" xml:space="preserve">
          <source>Extends the module object with class/module and instance accessors for class/module attributes, just like the native attr* accessors for instance attributes.</source>
          <target state="translated">扩展模块对象,为类/模块属性提供类/模块和实例访问器,就像为实例属性提供原生attr*访问器一样。</target>
        </trans-unit>
        <trans-unit id="4e02948a963806f6725aeac76c7a94fd629c5eaa" translate="yes" xml:space="preserve">
          <source>Extension examples:</source>
          <target state="translated">扩展例子:</target>
        </trans-unit>
        <trans-unit id="656bcfe284e2da39c77d4fdab55b16ad3c654719" translate="yes" xml:space="preserve">
          <source>Extensions</source>
          <target state="translated">Extensions</target>
        </trans-unit>
        <trans-unit id="245394779a4b49a9b0f72ccaea15033127e0d222" translate="yes" xml:space="preserve">
          <source>Extensions can refer to the internals of the association proxy using these three attributes of the &lt;code&gt;proxy_association&lt;/code&gt; accessor:</source>
          <target state="translated">扩展可以使用 &lt;code&gt;proxy_association&lt;/code&gt; 访问器的以下三个属性来引用关联代理的内部：</target>
        </trans-unit>
        <trans-unit id="f59ce310e169376f6367a5003dfb6bdf9d85840f" translate="yes" xml:space="preserve">
          <source>Extensions to &lt;code&gt;Array&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Array&lt;/code&gt; 扩展</target>
        </trans-unit>
        <trans-unit id="c703904ec8c4731a70a494149ce0d481155eb4e9" translate="yes" xml:space="preserve">
          <source>Extensions to &lt;code&gt;BigDecimal&lt;/code&gt;</source>
          <target state="translated">扩展到 &lt;code&gt;BigDecimal&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="383a64ddac151f20917e899bed4fdfe431609f62" translate="yes" xml:space="preserve">
          <source>Extensions to &lt;code&gt;Class&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Class&lt;/code&gt; 扩展</target>
        </trans-unit>
        <trans-unit id="162d5d8dc72c0fa90cc9c84a95a7a0ed2c292be5" translate="yes" xml:space="preserve">
          <source>Extensions to &lt;code&gt;Date&lt;/code&gt;</source>
          <target state="translated">扩展 &lt;code&gt;Date&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d045e298f9da75f68fbcbc30b2d3f0db1338d708" translate="yes" xml:space="preserve">
          <source>Extensions to &lt;code&gt;DateTime&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;DateTime&lt;/code&gt; 的扩展</target>
        </trans-unit>
        <trans-unit id="3bbb83b4bbf3660bf820bd13f2655a0bf1f78080" translate="yes" xml:space="preserve">
          <source>Extensions to &lt;code&gt;Enumerable&lt;/code&gt;</source>
          <target state="translated">扩展到 &lt;code&gt;Enumerable&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="624f2a6730126a04f098b1699cdaa442b8435d4a" translate="yes" xml:space="preserve">
          <source>Extensions to &lt;code&gt;File&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;File&lt;/code&gt; 扩展名</target>
        </trans-unit>
        <trans-unit id="17e2ed99471adf8f5a891c07056c1942bcbdbde5" translate="yes" xml:space="preserve">
          <source>Extensions to &lt;code&gt;Hash&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Hash&lt;/code&gt; 扩展</target>
        </trans-unit>
        <trans-unit id="3943b8538130f07a69c81e22904da52c6e5e3598" translate="yes" xml:space="preserve">
          <source>Extensions to &lt;code&gt;Integer&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Integer&lt;/code&gt; 扩展</target>
        </trans-unit>
        <trans-unit id="061d7075edf225f14b0384f93056ab26d2169f9d" translate="yes" xml:space="preserve">
          <source>Extensions to &lt;code&gt;LoadError&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;LoadError&lt;/code&gt; 的扩展</target>
        </trans-unit>
        <trans-unit id="91833ab551593d77164eda4260cd4cef65efb401" translate="yes" xml:space="preserve">
          <source>Extensions to &lt;code&gt;Marshal&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Marshal&lt;/code&gt; 扩展</target>
        </trans-unit>
        <trans-unit id="2a81f675e29bc3bdb0f1c13a24770f0d474559dc" translate="yes" xml:space="preserve">
          <source>Extensions to &lt;code&gt;Module&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt; 扩展</target>
        </trans-unit>
        <trans-unit id="7ee9e47ab72c74bd29a9e03793f2e219ffb6794e" translate="yes" xml:space="preserve">
          <source>Extensions to &lt;code&gt;NameError&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;NameError&lt;/code&gt; 的扩展</target>
        </trans-unit>
        <trans-unit id="8e78ed8af09af2e97bd6d96722e0b5563e13b3f8" translate="yes" xml:space="preserve">
          <source>Extensions to &lt;code&gt;Numeric&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Numeric&lt;/code&gt; 扩展</target>
        </trans-unit>
        <trans-unit id="aa997262e94bff495c851061a34c497a8b3231d7" translate="yes" xml:space="preserve">
          <source>Extensions to &lt;code&gt;Range&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Range&lt;/code&gt; 扩展</target>
        </trans-unit>
        <trans-unit id="e6fdfd34da789649ff4403006f17407f462ac645" translate="yes" xml:space="preserve">
          <source>Extensions to &lt;code&gt;Regexp&lt;/code&gt;</source>
          <target state="translated">正则 &lt;code&gt;Regexp&lt;/code&gt; 扩展</target>
        </trans-unit>
        <trans-unit id="f8b6bfa42b322f64f018a6aecb78cd8d69c4a284" translate="yes" xml:space="preserve">
          <source>Extensions to &lt;code&gt;String&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; 扩展</target>
        </trans-unit>
        <trans-unit id="3968883ccd97912cb3b4f351aedd20207be3247e" translate="yes" xml:space="preserve">
          <source>Extensions to &lt;code&gt;Time&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Time&lt;/code&gt; 延伸</target>
        </trans-unit>
        <trans-unit id="7f54ed86df05d02ce0e8f2bffabf15f35f2753a5" translate="yes" xml:space="preserve">
          <source>Extensions to All Objects</source>
          <target state="translated">所有对象的扩展</target>
        </trans-unit>
        <trans-unit id="8fdb5d77c0ea69e962db331c0331d4ccd1f6e481" translate="yes" xml:space="preserve">
          <source>External dependencies</source>
          <target state="translated">外部依赖性</target>
        </trans-unit>
        <trans-unit id="28f6e88a00ce14d69d26ec23348c552c37770c9e" translate="yes" xml:space="preserve">
          <source>External redirects</source>
          <target state="translated">外部重定向</target>
        </trans-unit>
        <trans-unit id="62ce7e3a9d3fa6133806c9d4f3d1fa8786497f63" translate="yes" xml:space="preserve">
          <source>Extra options on the associations, as defined in the &lt;code&gt;AssociationReflection::INVALID_AUTOMATIC_INVERSE_OPTIONS&lt;/code&gt; constant, or a custom scope, will also prevent the association's inverse from being found automatically.</source>
          <target state="translated">在 &lt;code&gt;AssociationReflection::INVALID_AUTOMATIC_INVERSE_OPTIONS&lt;/code&gt; 常量中定义的关联上的附加选项或自定义范围，也将阻止自动找到关联的逆。</target>
        </trans-unit>
        <trans-unit id="ae07dff6f5a1fc924a4c6050b0295f323269e752" translate="yes" xml:space="preserve">
          <source>Extra parameters (event.detail)</source>
          <target state="translated">额外参数(event.detail)</target>
        </trans-unit>
        <trans-unit id="00585eb1cda77d4c4fd2d07bad0caca2dd071983" translate="yes" xml:space="preserve">
          <source>Extract the action name from the passed data and process it via the channel. The process will ensure that the action requested is a public method on the channel declared by the user (so not one of the callbacks like &lt;a href=&quot;base#method-i-subscribed&quot;&gt;subscribed&lt;/a&gt;).</source>
          <target state="translated">从传递的数据中提取动作名称，并通过通道对其进行处理。该过程将确保所请求的操作是用户声明的通道上的公共方法（因此，不会像&lt;a href=&quot;base#method-i-subscribed&quot;&gt;Subscribed&lt;/a&gt;这样的回调之一）。</target>
        </trans-unit>
        <trans-unit id="dcf232522c960197f7d5bcf61fc205d57a465555" translate="yes" xml:space="preserve">
          <source>Extract the name of the missing constant from the exception message.</source>
          <target state="translated">从异常消息中提取缺失的常量名称。</target>
        </trans-unit>
        <trans-unit id="c3c5fb3f17e9d85f7a9245cfaf12b6962f3248a0" translate="yes" xml:space="preserve">
          <source>Extracting</source>
          <target state="translated">Extracting</target>
        </trans-unit>
        <trans-unit id="fa4d6235b74145266bf8aabfe31883f9d2c5a00b" translate="yes" xml:space="preserve">
          <source>Extracting a plain old Ruby object to encapsulate it and collaborate or delegate to the original object is often a good choice, but when there's no additional state to encapsulate or we're making DSL-style declarations about the parent class, introducing new collaborators can obfuscate rather than simplify.</source>
          <target state="translated">提取一个普通的Ruby对象来封装它,并协作或委托给原始对象通常是一个不错的选择,但当没有额外的状态需要封装,或者我们要对父类进行DSL式的声明时,引入新的协作者可能会混淆而不是简化。</target>
        </trans-unit>
        <trans-unit id="427b4d9c68c51271bc839097d57764a7257fefcd" translate="yes" xml:space="preserve">
          <source>Extracting previews requires third-party applications, FFmpeg for video and muPDF for PDFs, and on macOS also XQuartz and Poppler. These libraries are not provided by Rails. You must install them yourself to use the built-in previewers. Before you install and use third-party software, make sure you understand the licensing implications of doing so.</source>
          <target state="translated">提取预览需要第三方应用程序,视频用的是FFmpeg,PDF用的是muPDF,macOS上还有XQuartz和Poppler。这些库不是由Rails提供的。您必须自己安装它们才能使用内置的预览器。在您安装和使用第三方软件之前,请确保您了解这样做的许可意义。</target>
        </trans-unit>
        <trans-unit id="b2adc3f59132ddd99117cdcbd5c98bce93c428ee" translate="yes" xml:space="preserve">
          <source>Extracts a named &lt;code&gt;association&lt;/code&gt; from the relation. The named association is first preloaded, then the individual association records are collected from the relation. Like so:</source>
          <target state="translated">从关系中提取命名的 &lt;code&gt;association&lt;/code&gt; 。首先预加载已命名的关联，然后从该关联中收集各个关联记录。像这样：</target>
        </trans-unit>
        <trans-unit id="11476d9c98f007a92c91402a99c50dd16f32e510" translate="yes" xml:space="preserve">
          <source>Extracts an excerpt from &lt;code&gt;text&lt;/code&gt; that matches the first instance of &lt;code&gt;phrase&lt;/code&gt;. The &lt;code&gt;:radius&lt;/code&gt; option expands the excerpt on each side of the first occurrence of &lt;code&gt;phrase&lt;/code&gt; by the number of characters defined in &lt;code&gt;:radius&lt;/code&gt; (which defaults to 100). If the excerpt radius overflows the beginning or end of the &lt;code&gt;text&lt;/code&gt;, then the &lt;code&gt;:omission&lt;/code&gt; option (which defaults to &amp;ldquo;&amp;hellip;&amp;rdquo;) will be prepended/appended accordingly. Use the &lt;code&gt;:separator&lt;/code&gt; option to choose the delimitation. The resulting string will be stripped in any case. If the &lt;code&gt;phrase&lt;/code&gt; isn't found, &lt;code&gt;nil&lt;/code&gt; is returned.</source>
          <target state="translated">从与 &lt;code&gt;phrase&lt;/code&gt; 第一个实例匹配的 &lt;code&gt;text&lt;/code&gt; 中摘录。的 &lt;code&gt;:radius&lt;/code&gt; 选项展开上的第一次出现的每一侧上的摘录 &lt;code&gt;phrase&lt;/code&gt; 通过在定义的字符的数量 &lt;code&gt;:radius&lt;/code&gt; （默认为100）。如果摘录半径超出了 &lt;code&gt;text&lt;/code&gt; 的开头或结尾，则 &lt;code&gt;:omission&lt;/code&gt; 选项（默认为&amp;ldquo;&amp;hellip;&amp;rdquo;）将被相应地添加/添加。使用 &lt;code&gt;:separator&lt;/code&gt; 选项选择分隔符。在任何情况下，结果字符串都将被剥离。如果找不到该 &lt;code&gt;phrase&lt;/code&gt; ，则返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a33eaf43ab612e6d64826fe1cd5a1ef2d8bd127e" translate="yes" xml:space="preserve">
          <source>Extracts and stores metadata from the file associated with this blob using a relevant analyzer. Active Storage comes with built-in analyzers for images and videos. See &lt;a href=&quot;../analyzer/imageanalyzer&quot;&gt;ActiveStorage::Analyzer::ImageAnalyzer&lt;/a&gt; and &lt;a href=&quot;../analyzer/videoanalyzer&quot;&gt;ActiveStorage::Analyzer::VideoAnalyzer&lt;/a&gt; for information about the specific attributes they extract and the third-party libraries they require.</source>
          <target state="translated">使用相关的分析器从与此Blob关联的文件中提取和存储元数据。Active Storage带有用于图像和视频的内置分析器。请参阅&lt;a href=&quot;../analyzer/imageanalyzer&quot;&gt;ActiveStorage :: Analyzer :: ImageAnalyzer&lt;/a&gt;和&lt;a href=&quot;../analyzer/videoanalyzer&quot;&gt;ActiveStorage :: Analyzer :: VideoAnalyzer，&lt;/a&gt;以获取有关它们提取的特定属性以及所需的第三方库的信息。</target>
        </trans-unit>
        <trans-unit id="a81cf921dac6df26b4828c7dac03b0c3c023b350" translate="yes" xml:space="preserve">
          <source>Extracts options from a set of arguments. Removes and returns the last element in the array if it's a hash, otherwise returns a blank hash.</source>
          <target state="translated">从一组参数中提取选项。移除并返回数组中最后一个元素(如果是哈希),否则返回一个空白的哈希。</target>
        </trans-unit>
        <trans-unit id="c322b3f9b24d20295ac483f734722ee8715992e7" translate="yes" xml:space="preserve">
          <source>Extracts the following from a video blob:</source>
          <target state="translated">从视频blob中提取以下内容。</target>
        </trans-unit>
        <trans-unit id="0f080546949418564c80bb10e5d15845f1e350a7" translate="yes" xml:space="preserve">
          <source>Extracts the nested parameter from the given &lt;code&gt;keys&lt;/code&gt; by calling &lt;code&gt;dig&lt;/code&gt; at each step. Returns &lt;code&gt;nil&lt;/code&gt; if any intermediate step is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">通过在每个步骤调用 &lt;code&gt;dig&lt;/code&gt; 从给定的 &lt;code&gt;keys&lt;/code&gt; 提取嵌套参数。返回 &lt;code&gt;nil&lt;/code&gt; 如果任何中间步骤是 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4b1137cfdea605cc4137d9b69d1f8f0bdf46f70d" translate="yes" xml:space="preserve">
          <source>Extracts width and height in pixels from an image blob.</source>
          <target state="translated">从图像blob中提取宽度和高度,单位为像素。</target>
        </trans-unit>
        <trans-unit id="61563acc9954aa655d5371c4c48196aaeaa874f7" translate="yes" xml:space="preserve">
          <source>FALSE_VALUES</source>
          <target state="translated">FALSE_VALUES</target>
        </trans-unit>
        <trans-unit id="b26991df929a633ab76ebfb72ba772665aab30a3" translate="yes" xml:space="preserve">
          <source>FILENAME_MAX_SIZE</source>
          <target state="translated">FILENAME_MAX_SIZE</target>
        </trans-unit>
        <trans-unit id="b4fbad6881a6502973f74dc6aab223ae74eaff93" translate="yes" xml:space="preserve">
          <source>FILEPATH_MAX_SIZE</source>
          <target state="translated">FILEPATH_MAX_SIZE</target>
        </trans-unit>
        <trans-unit id="212fe1c02214066f8d99afc4c17fc99bec1520c1" translate="yes" xml:space="preserve">
          <source>FIXME: We are avoiding to use alias because a bug on thor that make this method public and add it to the task list.</source>
          <target state="translated">FIXME:我们避免使用别名,因为thor上的一个bug,使得这个方法被公开并添加到任务列表中。</target>
        </trans-unit>
        <trans-unit id="4499ff78a47f7731554d3c1afe1035caa145a9f9" translate="yes" xml:space="preserve">
          <source>FOREIGN_KEY_VIOLATION</source>
          <target state="translated">FOREIGN_KEY_VIOLATION</target>
        </trans-unit>
        <trans-unit id="f7c27219f0337c970173ee182b4949d4cbf0a8e6" translate="yes" xml:space="preserve">
          <source>FORMATTED_GEMS_PATTERN</source>
          <target state="translated">FORMATTED_GEMS_PATTERN</target>
        </trans-unit>
        <trans-unit id="6921bf34079ef3387900e70753234f95f564ca4a" translate="yes" xml:space="preserve">
          <source>FROZEN_EMPTY_ARRAY</source>
          <target state="translated">FROZEN_EMPTY_ARRAY</target>
        </trans-unit>
        <trans-unit id="56c182896fc771396384cbf42a7e1f9abfd081d7" translate="yes" xml:space="preserve">
          <source>FROZEN_EMPTY_HASH</source>
          <target state="translated">FROZEN_EMPTY_HASH</target>
        </trans-unit>
        <trans-unit id="a812cd4fcfd760f2bf9199f801f6cc43f0c7c96f" translate="yes" xml:space="preserve">
          <source>Failed: An exception was raised during the specific mailbox's execution of the &lt;code&gt;#process&lt;/code&gt; method.</source>
          <target state="translated">失败：在特定邮箱执行 &lt;code&gt;#process&lt;/code&gt; 方法期间引发了异常。</target>
        </trans-unit>
        <trans-unit id="d790d7b87bd35629e0110833db400f03c9ba8086" translate="yes" xml:space="preserve">
          <source>Failing to close the response stream will leave the corresponding socket open forever. Make sure to call &lt;code&gt;close&lt;/code&gt; whenever you are using a response stream.</source>
          <target state="translated">无法关闭响应流将使相应的套接字永远打开。确保在使用响应流时调用 &lt;code&gt;close&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6e4b3d1af3371878c3957e5abeca4a4081663faf" translate="yes" xml:space="preserve">
          <source>Failsafe: Raises errors.</source>
          <target state="translated">失控安全。引起错误。</target>
        </trans-unit>
        <trans-unit id="0630b13c6ea5636c6136a1e9aa2cb3a9cda63f8f" translate="yes" xml:space="preserve">
          <source>Fallbacks allow your generators to have a single responsibility, increasing code reuse and reducing the amount of duplication.</source>
          <target state="translated">回溯允许你的生成器有一个单一的责任,增加代码的重复使用,减少重复的数量。</target>
        </trans-unit>
        <trans-unit id="46b6f4438b61c10c203ae6dcd53eb7281cbea3cc" translate="yes" xml:space="preserve">
          <source>False for method objects; true otherwise.</source>
          <target state="translated">方法对象为假,否则为真。</target>
        </trans-unit>
        <trans-unit id="0d9c2b81e82b07d10af56e40a76d70f4b979549b" translate="yes" xml:space="preserve">
          <source>FalseClass</source>
          <target state="translated">FalseClass</target>
        </trans-unit>
        <trans-unit id="5ceb155dd5ad13b2e8d1bb7fc25e250819973096" translate="yes" xml:space="preserve">
          <source>Fault tolerant. If the Redis server is unavailable, no exceptions are raised. &lt;a href=&quot;../cache&quot;&gt;Cache&lt;/a&gt; fetches are all misses and writes are dropped.</source>
          <target state="translated">容错。如果Redis服务器不可用，则不会引发异常。&lt;a href=&quot;../cache&quot;&gt;缓存&lt;/a&gt;提取全部丢失，写入被丢弃。</target>
        </trans-unit>
        <trans-unit id="c8d7677e19495f21da984fe4e2829b7ca91b27c7" translate="yes" xml:space="preserve">
          <source>Feedback</source>
          <target state="translated">Feedback</target>
        </trans-unit>
        <trans-unit id="c44774addc42c860b569f9d0d957fb465f368942" translate="yes" xml:space="preserve">
          <source>Fetches data from the cache, using the given key. If there is data in the cache with the given key, then that data is returned.</source>
          <target state="translated">使用给定的键从缓存中获取数据。如果缓存中存在给定键的数据,则返回该数据。</target>
        </trans-unit>
        <trans-unit id="f56b37f210e04d2f886a8b20294a91a0c36ce6ad" translate="yes" xml:space="preserve">
          <source>Fetches data from the cache, using the given keys. If there is data in the cache with the given keys, then that data is returned. Otherwise, the supplied block is called for each key for which there was no data, and the result will be written to the cache and returned. Therefore, you need to pass a block that returns the data to be written to the cache. If you do not want to write the cache when the cache is not found, use &lt;a href=&quot;store#method-i-read_multi&quot;&gt;read_multi&lt;/a&gt;.</source>
          <target state="translated">使用给定的键从缓存中获取数据。如果缓存中存在具有给定键的数据，则将返回该数据。否则，为每个没有数据的键调用提供的块，并将结果写入高速缓存并返回。因此，您需要传递一个返回要写入缓存的数据的块。如果不想在找不到缓存时写入缓存，请使用&lt;a href=&quot;store#method-i-read_multi&quot;&gt;read_multi&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="87da8b91604262ad6d91e4f90e37c53120c65327" translate="yes" xml:space="preserve">
          <source>Fields can be symbols or strings. Values can be single values, arrays, or ranges.</source>
          <target state="translated">字段可以是符号或字符串。值可以是单值、数组或范围。</target>
        </trans-unit>
        <trans-unit id="f8d910abe09fefcd525189ff56b85ac0cd235c45" translate="yes" xml:space="preserve">
          <source>Fields can only appear once in email headers while other fields such as &lt;code&gt;X-Anything&lt;/code&gt; can appear multiple times.</source>
          <target state="translated">字段只能在电子邮件标题中出现一次，而其他字段（例如 &lt;code&gt;X-Anything&lt;/code&gt; )可以出现多次。</target>
        </trans-unit>
        <trans-unit id="2c3cafa4db3f3e1e51b3dff4303502dbe42b7a89" translate="yes" xml:space="preserve">
          <source>File</source>
          <target state="translated">File</target>
        </trans-unit>
        <trans-unit id="95a9dfcd4100cffd3bbfdd8cd63e61e7ac690c07" translate="yes" xml:space="preserve">
          <source>File Downloads</source>
          <target state="translated">文件下载</target>
        </trans-unit>
        <trans-unit id="c09ab9ea91985578fea6798c7cff8723d2b9441b" translate="yes" xml:space="preserve">
          <source>File Uploads</source>
          <target state="translated">文件上传</target>
        </trans-unit>
        <trans-unit id="1c2c00423fba9ab231586e428829389b766aad71" translate="yes" xml:space="preserve">
          <source>File or blob exists or not</source>
          <target state="translated">文件或blob是否存在</target>
        </trans-unit>
        <trans-unit id="0ab4ebd63f13c58c61f8bd12d7686f9c91d0af5e" translate="yes" xml:space="preserve">
          <source>File/Directory</source>
          <target state="translated">File/Directory</target>
        </trans-unit>
        <trans-unit id="a096bca18609c324b5d895acd7b35f853e8aa39e" translate="yes" xml:space="preserve">
          <source>File/Folder</source>
          <target state="translated">File/Folder</target>
        </trans-unit>
        <trans-unit id="0ac6dbee4d8f540761408e72685ba06c2b71eae5" translate="yes" xml:space="preserve">
          <source>FileHandler</source>
          <target state="translated">FileHandler</target>
        </trans-unit>
        <trans-unit id="843d23f30b0e1bad8d210261eb4898e2a5ad1980" translate="yes" xml:space="preserve">
          <source>FileHandler#call</source>
          <target state="translated">FileHandler#call</target>
        </trans-unit>
        <trans-unit id="505865877caaff7ebaeded01de3d0ed28746e827" translate="yes" xml:space="preserve">
          <source>FileHandler#match?</source>
          <target state="translated">FileHandler#match?</target>
        </trans-unit>
        <trans-unit id="66cc01abca04b24b98f50188566d1f5714bb56cb" translate="yes" xml:space="preserve">
          <source>FileHandler#serve</source>
          <target state="translated">FileHandler#serve</target>
        </trans-unit>
        <trans-unit id="bcd90c2de2ada508aebed682e3dff23934c79551" translate="yes" xml:space="preserve">
          <source>FileHandler::new</source>
          <target state="translated">FileHandler::new</target>
        </trans-unit>
        <trans-unit id="e6709799f8af742671a570e2fa5b4572a7407d6a" translate="yes" xml:space="preserve">
          <source>FileSystemResolver</source>
          <target state="translated">FileSystemResolver</target>
        </trans-unit>
        <trans-unit id="2d545e8154aab736060f5e6f5d5dea2d84841bb8" translate="yes" xml:space="preserve">
          <source>FileSystemResolver#==</source>
          <target state="translated">FileSystemResolver#==</target>
        </trans-unit>
        <trans-unit id="6dc8770eca1e87a288321fdeaba2a529a8a89c5a" translate="yes" xml:space="preserve">
          <source>FileSystemResolver#eql?</source>
          <target state="translated">FileSystemResolver#eql?</target>
        </trans-unit>
        <trans-unit id="7bfdf6c2e4438489ae387e3d03fb4bf3b045831c" translate="yes" xml:space="preserve">
          <source>FileSystemResolver#path</source>
          <target state="translated">FileSystemResolver#path</target>
        </trans-unit>
        <trans-unit id="9b890d2b480b436489d9faafe444637ffa8fcf11" translate="yes" xml:space="preserve">
          <source>FileSystemResolver#to_path</source>
          <target state="translated">FileSystemResolver#to_path</target>
        </trans-unit>
        <trans-unit id="98a42bb1006433052c6bfcfdaf757c145714ec5e" translate="yes" xml:space="preserve">
          <source>FileSystemResolver#to_s</source>
          <target state="translated">FileSystemResolver#to_s</target>
        </trans-unit>
        <trans-unit id="6072fc412d41aed240094921437ffed862d5a730" translate="yes" xml:space="preserve">
          <source>FileSystemResolver::new</source>
          <target state="translated">FileSystemResolver::new</target>
        </trans-unit>
        <trans-unit id="dc862eb2b99e73bfd42412e418cbade1639d3ec2" translate="yes" xml:space="preserve">
          <source>FileUpdateChecker</source>
          <target state="translated">FileUpdateChecker</target>
        </trans-unit>
        <trans-unit id="f2e1c392711c7dae7f60483670f69ce5ad5d172f" translate="yes" xml:space="preserve">
          <source>FileUpdateChecker#execute</source>
          <target state="translated">FileUpdateChecker#execute</target>
        </trans-unit>
        <trans-unit id="dd88a118e92e658c25fca050d8629be7325f8b3f" translate="yes" xml:space="preserve">
          <source>FileUpdateChecker#execute_if_updated</source>
          <target state="translated">FileUpdateChecker#execute_if_updated</target>
        </trans-unit>
        <trans-unit id="9cb0490cf1d3845c161e299cf76d0c4751436e0e" translate="yes" xml:space="preserve">
          <source>FileUpdateChecker#updated?</source>
          <target state="translated">FileUpdateChecker#updated?</target>
        </trans-unit>
        <trans-unit id="040b287a62de3f3a857cd258b5b442c468af1083" translate="yes" xml:space="preserve">
          <source>FileUpdateChecker::new</source>
          <target state="translated">FileUpdateChecker::new</target>
        </trans-unit>
        <trans-unit id="a3cbb98ddf5ee976bc1c3be5221d66ce3ca2e867" translate="yes" xml:space="preserve">
          <source>Filename</source>
          <target state="translated">Filename</target>
        </trans-unit>
        <trans-unit id="fd38857d242d84c9b3e72ab8a5c3ca5bd1779bca" translate="yes" xml:space="preserve">
          <source>Filename#&amp;lt;=&amp;gt;</source>
          <target state="translated">Filename#&amp;lt;=&amp;gt;</target>
        </trans-unit>
        <trans-unit id="0fedeadb8d48b202c23e40399d266dc504eed29c" translate="yes" xml:space="preserve">
          <source>Filename#as_json</source>
          <target state="translated">Filename#as_json</target>
        </trans-unit>
        <trans-unit id="4c7e73304a01eb0288ffec09fb235d2c52896f90" translate="yes" xml:space="preserve">
          <source>Filename#base</source>
          <target state="translated">Filename#base</target>
        </trans-unit>
        <trans-unit id="f6785722507c0f627c2a182e45b35d36ace3e28f" translate="yes" xml:space="preserve">
          <source>Filename#extension</source>
          <target state="translated">Filename#extension</target>
        </trans-unit>
        <trans-unit id="9063ce6395ed39fc24d0cc308731acbbf8e6e6d5" translate="yes" xml:space="preserve">
          <source>Filename#extension_with_delimiter</source>
          <target state="translated">Filename#extension_with_delimiter</target>
        </trans-unit>
        <trans-unit id="d109deefe0ba0943de0aaff15204472049c0d33e" translate="yes" xml:space="preserve">
          <source>Filename#extension_without_delimiter</source>
          <target state="translated">Filename#extension_without_delimiter</target>
        </trans-unit>
        <trans-unit id="750e6669da69c9a36000d59408b9eab28fa022e2" translate="yes" xml:space="preserve">
          <source>Filename#sanitized</source>
          <target state="translated">Filename#sanitized</target>
        </trans-unit>
        <trans-unit id="47ccb2013ef431f110dc17946532bd26b9d72f55" translate="yes" xml:space="preserve">
          <source>Filename#to_json</source>
          <target state="translated">Filename#to_json</target>
        </trans-unit>
        <trans-unit id="083d553a1e09b72b176a0a03c127e29ca22911a5" translate="yes" xml:space="preserve">
          <source>Filename#to_s</source>
          <target state="translated">Filename#to_s</target>
        </trans-unit>
        <trans-unit id="e25e4318610c636210e481224b00eaba26db2d15" translate="yes" xml:space="preserve">
          <source>Filename::new</source>
          <target state="translated">Filename::new</target>
        </trans-unit>
        <trans-unit id="491d964bf519b4f588bc37ecbe5f26c90630e684" translate="yes" xml:space="preserve">
          <source>Filename::wrap</source>
          <target state="translated">Filename::wrap</target>
        </trans-unit>
        <trans-unit id="56775c15a18cc2c09aac7e08966401bd4e5ab388" translate="yes" xml:space="preserve">
          <source>Files are served from the primary service.</source>
          <target state="translated">档案从主服务处送达。</target>
        </trans-unit>
        <trans-unit id="9416aca12d73acfba38531e63e62b58118463d79" translate="yes" xml:space="preserve">
          <source>Files defining constants to be autoloaded should never be &lt;code&gt;require&lt;/code&gt;d:</source>
          <target state="translated">定义要自动加载的常量的文件永远 &lt;code&gt;require&lt;/code&gt; d：</target>
        </trans-unit>
        <trans-unit id="fc51867b9e499b3a5642e0eea0c1b39149abfdc5" translate="yes" xml:space="preserve">
          <source>Files without a template handler in their extension will be rendered using the raw handler. Previously Rails would render files using the ERB template handler.</source>
          <target state="translated">扩展名中没有模板处理程序的文件将使用原始处理程序进行渲染。以前Rails会使用ERB模板处理程序来渲染文件。</target>
        </trans-unit>
        <trans-unit id="16803118d16ec89a451d4c2d71a4dd329c1a8c8c" translate="yes" xml:space="preserve">
          <source>Filter that halted the action</source>
          <target state="translated">停止行动的过滤器</target>
        </trans-unit>
        <trans-unit id="96e578211aa295317cf257310712fa28ccd8f6c6" translate="yes" xml:space="preserve">
          <source>Filters</source>
          <target state="translated">Filters</target>
        </trans-unit>
        <trans-unit id="f31c728f71abe5347f705c917c7ed4d7dd78c919" translate="yes" xml:space="preserve">
          <source>Filters are inherited, so if you set a filter on &lt;code&gt;ApplicationController&lt;/code&gt;, it will be run on every controller in your application.</source>
          <target state="translated">过滤器是继承的，因此，如果在 &lt;code&gt;ApplicationController&lt;/code&gt; 上设置过滤器，它将在应用程序中的每个控制器上运行。</target>
        </trans-unit>
        <trans-unit id="15fab00f08ea5675ac3cad78e778d86715726a86" translate="yes" xml:space="preserve">
          <source>Filters are methods that are run &quot;before&quot;, &quot;after&quot; or &quot;around&quot; a controller action.</source>
          <target state="translated">过滤器是 &quot;在控制器动作之前&quot;、&quot;之后 &quot;或 &quot;周围 &quot;运行的方法。</target>
        </trans-unit>
        <trans-unit id="7aff3253798f95ad628c64f14a3cfff692009b0b" translate="yes" xml:space="preserve">
          <source>Filters are used to modify lines of data, while silencers are used to remove lines entirely. The typical filter use case is to remove lengthy path information from the start of each line, and view file paths relevant to the app directory instead of the file system root. The typical silencer use case is to exclude the output of a noisy library from the backtrace, so that you can focus on the rest.</source>
          <target state="translated">过滤器用于修改数据行,而消音器用于完全删除行。典型的过滤器用例是删除每行开头的冗长路径信息,并查看与应用程序目录相关的文件路径,而不是文件系统根目录。典型的消音器用例是将嘈杂的库的输出从回溯中排除,这样你就可以专注于其他的库。</target>
        </trans-unit>
        <trans-unit id="26f77a0d2e8cb3f6cb688876f1e59471a3757c58" translate="yes" xml:space="preserve">
          <source>Filters can be specified with a block or a symbol to a method in the mailer class similar to controllers.</source>
          <target state="translated">过滤器可以用一个块或一个符号来指定邮件发送器类中的一个方法,类似于控制器。</target>
        </trans-unit>
        <trans-unit id="8f3a9f32d7621c6c414177d52d0e336cdf8343bb" translate="yes" xml:space="preserve">
          <source>Finally we can assert that our response was successful and our new article is readable on the page.</source>
          <target state="translated">最后我们可以断言,我们的回复是成功的,我们的新文章在页面上是可以阅读的。</target>
        </trans-unit>
        <trans-unit id="eb42236d5e59c4075f8b7f2a9b799c55e2ae1c34" translate="yes" xml:space="preserve">
          <source>Finally, Action Mailer also supports passing &lt;code&gt;Proc&lt;/code&gt; and &lt;code&gt;Lambda&lt;/code&gt; objects into the default hash, so you can define methods that evaluate as the message is being generated:</source>
          <target state="translated">最后，Action Mailer还支持将 &lt;code&gt;Proc&lt;/code&gt; 和 &lt;code&gt;Lambda&lt;/code&gt; 对象传递到默认哈希中，因此您可以定义在生成消息时进行评估的方法：</target>
        </trans-unit>
        <trans-unit id="f575c7f442b7d2f89f790d1e32ae5186fcde00f9" translate="yes" xml:space="preserve">
          <source>Finally, add a 'Destroy' link to your &lt;code&gt;index&lt;/code&gt; action template (&lt;code&gt;app/views/articles/index.html.erb&lt;/code&gt;) to wrap everything together.</source>
          <target state="translated">最后，在您的 &lt;code&gt;index&lt;/code&gt; 操作模板（ &lt;code&gt;app/views/articles/index.html.erb&lt;/code&gt; ）中添加一个&amp;ldquo;销毁&amp;rdquo;链接，以将所有内容包装在一起。</target>
        </trans-unit>
        <trans-unit id="03cade7255b9c5fd46cf7165b884577c99295897" translate="yes" xml:space="preserve">
          <source>Finally, add a link to the &lt;code&gt;app/views/articles/show.html.erb&lt;/code&gt; template to go back to the &lt;code&gt;index&lt;/code&gt; action as well, so that people who are viewing a single article can go back and view the whole list again:</source>
          <target state="translated">最后，添加指向 &lt;code&gt;app/views/articles/show.html.erb&lt;/code&gt; 模板的链接，以返回到 &lt;code&gt;index&lt;/code&gt; 操作，以便正在查看单个文章的人可以返回并再次查看整个列表：</target>
        </trans-unit>
        <trans-unit id="139c973215dad87a3d5bd543aa0d2247a5932895" translate="yes" xml:space="preserve">
          <source>Finally, add the configuration in the relevant &lt;code&gt;config/environments/*.rb&lt;/code&gt; file:</source>
          <target state="translated">最后，在相关的 &lt;code&gt;config/environments/*.rb&lt;/code&gt; 文件中添加配置：</target>
        </trans-unit>
        <trans-unit id="b600f274b2b076b0d1f21dc2618434bf7de84584" translate="yes" xml:space="preserve">
          <source>Finally, all the above styles can be mixed together, and the &lt;code&gt;helper&lt;/code&gt; method can be invoked with a mix of &lt;code&gt;symbols&lt;/code&gt;, &lt;code&gt;strings&lt;/code&gt;, &lt;code&gt;modules&lt;/code&gt; and blocks.</source>
          <target state="translated">最后，可以将以上所有样式混合在一起，并且可以使用 &lt;code&gt;symbols&lt;/code&gt; ， &lt;code&gt;strings&lt;/code&gt; ， &lt;code&gt;modules&lt;/code&gt; 和块的混合来调用 &lt;code&gt;helper&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="ce8b02ce620cfd37bbb413ccdbc3e1a4d65357b5" translate="yes" xml:space="preserve">
          <source>Finally, an object which responds to call can be supplied to redirect, allowing you to reuse common redirect routes. The call method must accept two arguments, params and request, and return a string.</source>
          <target state="translated">最后,可以为重定向提供一个响应call的对象,允许你重用常见的重定向路由。调用方法必须接受params和request两个参数,并返回一个字符串。</target>
        </trans-unit>
        <trans-unit id="b33dc64ae26f912f4c31d8e5c4c7e6e6cf970513" translate="yes" xml:space="preserve">
          <source>Finally, assuming we have two event instances, one which has a time and one which does not, the output might look like this:</source>
          <target state="translated">最后,假设我们有两个事件实例,一个有时间,一个没有,输出可能是这样的。</target>
        </trans-unit>
        <trans-unit id="adaf661621fea24a902486be28e925bee86aae2e" translate="yes" xml:space="preserve">
          <source>Finally, create the &lt;code&gt;core_ext.rb&lt;/code&gt; file and add the &lt;code&gt;to_squawk&lt;/code&gt; method:</source>
          <target state="translated">最后，创建 &lt;code&gt;core_ext.rb&lt;/code&gt; 文件并添加 &lt;code&gt;to_squawk&lt;/code&gt; 方法：</target>
        </trans-unit>
        <trans-unit id="829c3bc35737a22372a8de554947328a06e81184" translate="yes" xml:space="preserve">
          <source>Finally, engines would not have been possible without the work of James Adam, Piotr Sarnacki, the Rails Core Team, and a number of other people. If you ever meet them, don't forget to say thanks!</source>
          <target state="translated">最后,如果没有James Adam、Piotr Sarnacki、Rails核心团队以及其他一些人的工作,引擎是不可能实现的。如果你遇到他们,别忘了说声谢谢!</target>
        </trans-unit>
        <trans-unit id="492a2b83bf4fb9e53ae20e9ed5978d21658bddcc" translate="yes" xml:space="preserve">
          <source>Finally, if a block is provided, both &lt;code&gt;create&lt;/code&gt; and &lt;code&gt;new&lt;/code&gt; will yield the new object to that block for initialization:</source>
          <target state="translated">最后，如果提供了一个块，则 &lt;code&gt;create&lt;/code&gt; 和 &lt;code&gt;new&lt;/code&gt; 都将向该块产生新对象以进行初始化：</target>
        </trans-unit>
        <trans-unit id="68a0dc62c08212c07ce612fb67c95922debebbf3" translate="yes" xml:space="preserve">
          <source>Finally, if we DON'T find a template AND the request isn't a browser page load, then we implicitly respond with &lt;code&gt;204 No
Content&lt;/code&gt;.</source>
          <target state="translated">最后，如果我们找不到模板并且请求不是浏览器页面加载，那么我们将隐式响应 &lt;code&gt;204 No Content&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3a7ed780accc2a01e9ed5109abf1108d3b018218" translate="yes" xml:space="preserve">
          <source>Finally, if you want to generate a URL to an engine's route using &lt;code&gt;polymorphic_url&lt;/code&gt;, you also need to pass the engine helper. Let's say that you want to create a form pointing to one of the engine's routes. All you need to do is pass the helper as the first element in array with attributes for URL:</source>
          <target state="translated">最后，如果您想使用 &lt;code&gt;polymorphic_url&lt;/code&gt; 生成指向引擎路线的URL ，则还需要传递引擎帮助器。假设您要创建一个指向引擎路线之一的表单。您需要做的就是将帮助程序作为具有URL属性的数组中的第一个元素传递：</target>
        </trans-unit>
        <trans-unit id="4c74e5924ea0a0e12578e9009f61ab0f0864a494" translate="yes" xml:space="preserve">
          <source>Finally, in order to use the read-only replica in your application you'll need to activate the middleware for automatic switching.</source>
          <target state="translated">最后,为了在应用程序中使用只读副本,你需要激活自动切换的中间件。</target>
        </trans-unit>
        <trans-unit id="374ad5e141477535b828a2568fde5eedbbff598e" translate="yes" xml:space="preserve">
          <source>Finally, inside &lt;code&gt;app/controllers/application_controller.rb&lt;/code&gt;, instead of:</source>
          <target state="translated">最后，在 &lt;code&gt;app/controllers/application_controller.rb&lt;/code&gt; 内部，而不是：</target>
        </trans-unit>
        <trans-unit id="8b42f2f63de029368a9c5a8e74cb6a7218001e7a" translate="yes" xml:space="preserve">
          <source>Finally, it's also possible to explicitly map the relation between attribute and database integer with a hash:</source>
          <target state="translated">最后,还可以用哈希明确映射属性和数据库整数之间的关系。</target>
        </trans-unit>
        <trans-unit id="174eb5882f8cdb973e07ead01041e26f346678b5" translate="yes" xml:space="preserve">
          <source>Finally, routes will also be isolated within the engine. This is one of the most important parts about namespacing, and is discussed later in the &lt;a href=&quot;#routes&quot;&gt;Routes&lt;/a&gt; section of this guide.</source>
          <target state="translated">最后，路线也将在引擎内隔离。这是有关命名空间的最重要部分，稍后将在本指南的&amp;ldquo; &lt;a href=&quot;#routes&quot;&gt;路线&amp;rdquo;&lt;/a&gt;部分中进行讨论。</target>
        </trans-unit>
        <trans-unit id="c71d62af8b62828279c0719617957707da219971" translate="yes" xml:space="preserve">
          <source>Finally, the &lt;code&gt;Path&lt;/code&gt; object also provides a few helpers:</source>
          <target state="translated">最后， &lt;code&gt;Path&lt;/code&gt; 对象还提供了一些帮助器：</target>
        </trans-unit>
        <trans-unit id="b943e31a4b051dd3dac93832ffdab45484a7a906" translate="yes" xml:space="preserve">
          <source>Finally, the assets for this resource are generated in one file: &lt;code&gt;app/assets/stylesheets/blorgh/articles.css&lt;/code&gt;. You'll see how to use these a little later.</source>
          <target state="translated">最后，此资源的资产在一个文件中生成： &lt;code&gt;app/assets/stylesheets/blorgh/articles.css&lt;/code&gt; 。稍后您将了解如何使用这些功能。</target>
        </trans-unit>
        <trans-unit id="7b655c7bb20789d12d470b9969c9c9dd4e90e2cc" translate="yes" xml:space="preserve">
          <source>Finally, the author's name should be displayed on the article's page. Add this code above the &quot;Title&quot; output inside &lt;code&gt;app/views/blorgh/articles/show.html.erb&lt;/code&gt;:</source>
          <target state="translated">最后，作者的姓名应显示在文章页面上。将此代码添加到 &lt;code&gt;app/views/blorgh/articles/show.html.erb&lt;/code&gt; 内的&amp;ldquo;标题&amp;rdquo;输出上方：</target>
        </trans-unit>
        <trans-unit id="9a93a8845cc26c7d2b8707a1bef04d921fedc88e" translate="yes" xml:space="preserve">
          <source>Finally, the block can take block arguments, which can be passed in by &lt;code&gt;yield&lt;/code&gt;:</source>
          <target state="translated">最后，该块可以使用块参数，可以通过 &lt;code&gt;yield&lt;/code&gt; 传递该参数：</target>
        </trans-unit>
        <trans-unit id="d07638cfce2083b47d7c947c5522bb669a962b53" translate="yes" xml:space="preserve">
          <source>Finally, the options &lt;code&gt;:if&lt;/code&gt;, &lt;code&gt;:unless&lt;/code&gt;, &lt;code&gt;:on&lt;/code&gt;, &lt;code&gt;:allow_blank&lt;/code&gt;, &lt;code&gt;:allow_nil&lt;/code&gt;, &lt;code&gt;:strict&lt;/code&gt; and &lt;code&gt;:message&lt;/code&gt; can be given to one specific validator, as a hash:</source>
          <target state="translated">最后，选项 &lt;code&gt;:if&lt;/code&gt; ， &lt;code&gt;:unless&lt;/code&gt; ， &lt;code&gt;:on&lt;/code&gt; ， &lt;code&gt;:allow_blank&lt;/code&gt; ， &lt;code&gt;:allow_nil&lt;/code&gt; ， &lt;code&gt;:strict&lt;/code&gt; 和 &lt;code&gt;:message&lt;/code&gt; 可以作为哈希值提供给一个特定的验证器：</target>
        </trans-unit>
        <trans-unit id="d9705ba4378bc87609fc055a72d8a74cfddebd70" translate="yes" xml:space="preserve">
          <source>Finally, this method supports a &lt;code&gt;:default&lt;/code&gt; option, which selects a default &lt;a href=&quot;../../activesupport/timezone&quot;&gt;ActiveSupport::TimeZone&lt;/a&gt; if the object's time zone is &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">最后，此方法支持 &lt;code&gt;:default&lt;/code&gt; 选项，如果对象的时区为 &lt;code&gt;nil&lt;/code&gt; ，则该选项将选择默认的&lt;a href=&quot;../../activesupport/timezone&quot;&gt;ActiveSupport :: TimeZone&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="478e157bff161ff6fc0168e6bf5c5951fc77bff8" translate="yes" xml:space="preserve">
          <source>Finally, we add a tag to the connection-specific logger with the name of the current user to easily distinguish their messages in the log.</source>
          <target state="translated">最后,我们在连接专用的记录器中添加一个标签,写上当前用户的名字,以便于在日志中区分他们的消息。</target>
        </trans-unit>
        <trans-unit id="bd476f1476dca89e182815a527c0f96c315ac2eb" translate="yes" xml:space="preserve">
          <source>Finally, we want to show a link to the &lt;code&gt;edit&lt;/code&gt; action in the list of all the articles, so let's add that now to &lt;code&gt;app/views/articles/index.html.erb&lt;/code&gt; to make it appear next to the &quot;Show&quot; link:</source>
          <target state="translated">最后，我们想在所有文章的列表中显示指向 &lt;code&gt;edit&lt;/code&gt; 动作的链接，所以现在将其添加到 &lt;code&gt;app/views/articles/index.html.erb&lt;/code&gt; 中，使其显示在&amp;ldquo; Show&amp;rdquo;链接旁边：</target>
        </trans-unit>
        <trans-unit id="1f0fe56a52063f1c32e1f0c72e84d01aba01b4e6" translate="yes" xml:space="preserve">
          <source>Finally, you can also pass &lt;code&gt;:before&lt;/code&gt; and &lt;code&gt;:after&lt;/code&gt; as options to &lt;code&gt;initializer&lt;/code&gt;, in case you want to couple it with a specific step in the initialization process.</source>
          <target state="translated">最后，您还可以通过 &lt;code&gt;:before&lt;/code&gt; 和 &lt;code&gt;:after&lt;/code&gt; 作为选项，以 &lt;code&gt;initializer&lt;/code&gt; ，如果你想与在初始化过程中的一个具体步骤夫妇它。</target>
        </trans-unit>
        <trans-unit id="4666eb65f50e1cd0e387ae6a5867ca372157f9df" translate="yes" xml:space="preserve">
          <source>Finally, you can indicate specific attributes of a model for which time zone conversion should not applied, for instance by setting:</source>
          <target state="translated">最后,您可以指定模型的特定属性,例如通过设置时区转换不应适用。</target>
        </trans-unit>
        <trans-unit id="c1e3c96698852416cd20a4df2f6bdb998567ffdf" translate="yes" xml:space="preserve">
          <source>Finally, you can pass true as the third argument to silence all log activity (other than the timing information) from inside the block. This is great for boiling down a noisy block to just a single statement that produces one log line:</source>
          <target state="translated">最后,你可以将true作为第三个参数,以使块内的所有日志活动(除了定时信息外)保持沉默。这对于将一个嘈杂的代码块简化为只产生一条日志线的单一语句是非常好的。</target>
        </trans-unit>
        <trans-unit id="7ba6665f9014534ac6c73918c508bb647afbbafe" translate="yes" xml:space="preserve">
          <source>Find a mailer preview by its underscored class name.</source>
          <target state="translated">通过其下划线的类名查找邮件预览。</target>
        </trans-unit>
        <trans-unit id="9c0453bf999e0278a601f80a5bbc54c2474e916d" translate="yes" xml:space="preserve">
          <source>Find by id - This can either be a specific id (1), a list of ids (1, 5, 6), or an array of ids ([5, 6, 10]). If one or more records cannot be found for the requested ids, then &lt;a href=&quot;recordnotfound&quot;&gt;ActiveRecord::RecordNotFound&lt;/a&gt; will be raised. If the primary key is an integer, find by id coerces its arguments by using &lt;code&gt;to_i&lt;/code&gt;.</source>
          <target state="translated">按ID查找-这可以是特定ID（1），ID列表（1、5、6）或ID数组（[5、6、10]）。如果找不到所请求ID的一条或多条记录，则将引发&lt;a href=&quot;recordnotfound&quot;&gt;ActiveRecord :: RecordNotFound&lt;/a&gt;。如果主键是整数，则使用 &lt;code&gt;to_i&lt;/code&gt; 通过id查找来强制其参数。</target>
        </trans-unit>
        <trans-unit id="5ce7e654217389659a73282d75bb4e56f82f26dd" translate="yes" xml:space="preserve">
          <source>Find or Build a New Object</source>
          <target state="translated">查找或建立一个新对象</target>
        </trans-unit>
        <trans-unit id="98f88643ed770b3cc049b1217652794cf03ff8ff" translate="yes" xml:space="preserve">
          <source>Find the fifth record. If no order is defined it will order by primary key.</source>
          <target state="translated">找到第五条记录。如果没有定义顺序,将按主键排序。</target>
        </trans-unit>
        <trans-unit id="091b73d8ba451d291a884bf2b22f6909b540e0b6" translate="yes" xml:space="preserve">
          <source>Find the first record (or first N records if a parameter is supplied). If no order is defined it will order by primary key.</source>
          <target state="translated">查找第一条记录(如果提供参数,则查找前N条记录)。如果没有定义顺序,则按主键排序。</target>
        </trans-unit>
        <trans-unit id="491520c3542cd99259336effa1911b49dc2ff469" translate="yes" xml:space="preserve">
          <source>Find the forty-second record. Also known as accessing &amp;ldquo;the reddit&amp;rdquo;. If no order is defined it will order by primary key.</source>
          <target state="translated">找到四十秒的记录。也称为访问&amp;ldquo; reddit&amp;rdquo;。如果未定义顺序，它将通过主键进行排序。</target>
        </trans-unit>
        <trans-unit id="c16c67b7f03eb3f75212f27b0f678b039374ad05" translate="yes" xml:space="preserve">
          <source>Find the fourth record. If no order is defined it will order by primary key.</source>
          <target state="translated">找到第四条记录。如果没有定义顺序,将按主键排序。</target>
        </trans-unit>
        <trans-unit id="28a525677ee48b8edcecfc0abd5eae8d21669011" translate="yes" xml:space="preserve">
          <source>Find the last record (or last N records if a parameter is supplied). If no order is defined it will order by primary key.</source>
          <target state="translated">查找最后一条记录(如果提供参数,则查找最后N条记录)。如果没有定义顺序,将按主键排序。</target>
        </trans-unit>
        <trans-unit id="e6539305627fc6b9587a7ac3f29111baf283a287" translate="yes" xml:space="preserve">
          <source>Find the second record. If no order is defined it will order by primary key.</source>
          <target state="translated">找到第二条记录。如果没有定义顺序,将按主键排序。</target>
        </trans-unit>
        <trans-unit id="f56b5e7d6cfa22ee40237bb41195a40b813cb901" translate="yes" xml:space="preserve">
          <source>Find the second-to-last record. If no order is defined it will order by primary key.</source>
          <target state="translated">找出第二到最后的记录。如果没有定义顺序,将按主键排序。</target>
        </trans-unit>
        <trans-unit id="846b3ffe7f4e8d5da7e6360691693a1345749b9a" translate="yes" xml:space="preserve">
          <source>Find the third record. If no order is defined it will order by primary key.</source>
          <target state="translated">找到第三条记录。如果没有定义顺序,将按主键排序。</target>
        </trans-unit>
        <trans-unit id="8197116a1029a8745a9278865919e04a5ffaced3" translate="yes" xml:space="preserve">
          <source>Find the third-to-last record. If no order is defined it will order by primary key.</source>
          <target state="translated">找到第三条到最后一条记录。如果没有定义顺序,将按主键排序。</target>
        </trans-unit>
        <trans-unit id="4dc35b9dcac7ec993dd29c15967b44ed13159220" translate="yes" xml:space="preserve">
          <source>Find with lock</source>
          <target state="translated">用锁找</target>
        </trans-unit>
        <trans-unit id="34e1ed0d804f7e3155b9832ddfe3ecf227111138" translate="yes" xml:space="preserve">
          <source>Finder methods that return a collection, such as &lt;code&gt;where&lt;/code&gt; and &lt;code&gt;group&lt;/code&gt;, return an instance of &lt;code&gt;ActiveRecord::Relation&lt;/code&gt;. Methods that find a single entity, such as &lt;code&gt;find&lt;/code&gt; and &lt;code&gt;first&lt;/code&gt;, return a single instance of the model.</source>
          <target state="translated">返回集合的Finder方法（例如 &lt;code&gt;where&lt;/code&gt; 和 &lt;code&gt;group&lt;/code&gt; ）返回 &lt;code&gt;ActiveRecord::Relation&lt;/code&gt; 的实例。查找单个实体的方法（例如 &lt;code&gt;find&lt;/code&gt; 和 &lt;code&gt;first&lt;/code&gt; ）返回模型的单个实例。</target>
        </trans-unit>
        <trans-unit id="548ae92a416c3f503fa44ebb3c9040c86fa7ea7e" translate="yes" xml:space="preserve">
          <source>Finding by SQL</source>
          <target state="translated">通过SQL查找</target>
        </trans-unit>
        <trans-unit id="08df9bdda2892c79adeb17ed89c666becf3a5b62" translate="yes" xml:space="preserve">
          <source>Finding records by a value object</source>
          <target state="translated">通过值对象查找记录</target>
        </trans-unit>
        <trans-unit id="c6563f3077a10bf44719cb63033ad802c7db05b6" translate="yes" xml:space="preserve">
          <source>Finds an associated object according to the same rules as &lt;a href=&quot;../findermethods#method-i-find&quot;&gt;ActiveRecord::FinderMethods#find&lt;/a&gt;.</source>
          <target state="translated">根据与&lt;a href=&quot;../findermethods#method-i-find&quot;&gt;ActiveRecord :: FinderMethods＃find&lt;/a&gt;相同的规则查找关联的对象。</target>
        </trans-unit>
        <trans-unit id="73cbe0c727f0fb277e048633a708d7a861c21237" translate="yes" xml:space="preserve">
          <source>Finds an associated object responding to the &lt;code&gt;id&lt;/code&gt; and that meets the condition that it has to be associated with this object. Uses the same rules as &lt;a href=&quot;../findermethods#method-i-find&quot;&gt;ActiveRecord::FinderMethods#find&lt;/a&gt;.</source>
          <target state="translated">查找一个响应该 &lt;code&gt;id&lt;/code&gt; 且满足必须与该对象关联的条件的关联对象。使用与&lt;a href=&quot;../findermethods#method-i-find&quot;&gt;ActiveRecord :: FinderMethods＃find&lt;/a&gt;相同的规则。</target>
        </trans-unit>
        <trans-unit id="4991c6478cdc94568603f1d22b24a96cea06113d" translate="yes" xml:space="preserve">
          <source>Finds an object in the collection responding to the &lt;code&gt;id&lt;/code&gt;. Uses the same rules as ActiveRecord::Base.find. Returns &lt;a href=&quot;../recordnotfound&quot;&gt;ActiveRecord::RecordNotFound&lt;/a&gt; error if the object cannot be found.</source>
          <target state="translated">在集合中找到一个响应 &lt;code&gt;id&lt;/code&gt; 的对象。使用与ActiveRecord :: Base.find相同的规则。如果找不到对象，则返回&lt;a href=&quot;../recordnotfound&quot;&gt;ActiveRecord :: RecordNotFound&lt;/a&gt;错误。</target>
        </trans-unit>
        <trans-unit id="4dba752f2d08677693987222ad7374fd301b7db3" translate="yes" xml:space="preserve">
          <source>Finds and deletes all records matching the specified conditions. This is short-hand for &lt;code&gt;relation.where(condition).delete_all&lt;/code&gt;. Returns the number of rows affected.</source>
          <target state="translated">查找并删除符合指定条件的所有记录。这是 &lt;code&gt;relation.where(condition).delete_all&lt;/code&gt; 。返回受影响的行数。</target>
        </trans-unit>
        <trans-unit id="6c968d472a5497d35d179162ebf612f74eb113fd" translate="yes" xml:space="preserve">
          <source>Finds and destroys all records matching the specified conditions. This is short-hand for &lt;code&gt;relation.where(condition).destroy_all&lt;/code&gt;. Returns the collection of objects that were destroyed.</source>
          <target state="translated">查找并销毁符合指定条件的所有记录。这是 &lt;code&gt;relation.where(condition).destroy_all&lt;/code&gt; 。返回被销毁的对象的集合。</target>
        </trans-unit>
        <trans-unit id="d6dc4976836983fd162e0a0e0e9b15168e06574a" translate="yes" xml:space="preserve">
          <source>Finds engine with given path.</source>
          <target state="translated">用给定的路径查找引擎。</target>
        </trans-unit>
        <trans-unit id="7eabf70383defe78c6d95bb2f4ebfea8bd3281c8" translate="yes" xml:space="preserve">
          <source>Finds the correct table name given an Active Record object. Uses the Active Record object's own table_name, or pre/suffix from the options passed in.</source>
          <target state="translated">查找给定Active Record对象的正确表名。使用Active Record对象自己的表名,或者从传入的选项中的前/后缀。</target>
        </trans-unit>
        <trans-unit id="feef1e8958111b8f3cc60e81be143205460c6df4" translate="yes" xml:space="preserve">
          <source>Finds the first record matching the specified conditions. There is no implied ordering so if order matters, you should specify it yourself.</source>
          <target state="translated">查找符合指定条件的第一条记录。没有隐含的顺序,所以如果顺序很重要,你应该自己指定。</target>
        </trans-unit>
        <trans-unit id="4d3a9a90d7d0edf29bf3acbe365f4193c1f082a3" translate="yes" xml:space="preserve">
          <source>Finds the first record with the given attributes, or creates a record with the attributes if one is not found:</source>
          <target state="translated">查找第一个具有给定属性的记录,如果没有找到,则创建一个具有该属性的记录。</target>
        </trans-unit>
        <trans-unit id="1100a7a70db4bed1615634a5ee2d9b3a4f05d6b7" translate="yes" xml:space="preserve">
          <source>Fingerprint will be added to the filename if config.assets.digest is set to true.</source>
          <target state="translated">如果config.assets.digest被设置为true,指纹将被添加到文件名中。</target>
        </trans-unit>
        <trans-unit id="9c6df9e50147d842fa401ced316d9e6f32c5473f" translate="yes" xml:space="preserve">
          <source>Fingerprinting fixes these problems by avoiding query strings, and by ensuring that filenames are consistent based on their content.</source>
          <target state="translated">指纹解决了这些问题,避免了查询字符串,并确保文件名基于其内容的一致性。</target>
        </trans-unit>
        <trans-unit id="5e6084437e6e2040ca3c36ea6e7383c25f524c99" translate="yes" xml:space="preserve">
          <source>Fingerprinting is a technique that makes the name of a file dependent on the contents of the file. When the file contents change, the filename is also changed. For content that is static or infrequently changed, this provides an easy way to tell whether two versions of a file are identical, even across different servers or deployment dates.</source>
          <target state="translated">指纹是一种使文件名取决于文件内容的技术。当文件内容改变时,文件名也会改变。对于静态的或不经常变化的内容,这提供了一个简单的方法来判断一个文件的两个版本是否相同,甚至在不同的服务器或部署日期。</target>
        </trans-unit>
        <trans-unit id="b9046913994857b4e35448b82a310a21f6ff0236" translate="yes" xml:space="preserve">
          <source>Fingerprinting is enabled by default for both the development and production environments. You can enable or disable it in your configuration through the &lt;code&gt;config.assets.digest&lt;/code&gt; option.</source>
          <target state="translated">默认情况下，开发和生产环境都启用了指纹识别。您可以通过 &lt;code&gt;config.assets.digest&lt;/code&gt; 选项在配置中启用或禁用它。</target>
        </trans-unit>
        <trans-unit id="8d1ef8fdbaecb63ee2b6ed896dd0d703a1090268" translate="yes" xml:space="preserve">
          <source>Fire the SQL query and retrieve the corresponding results from the database.</source>
          <target state="translated">启动SQL查询,从数据库中检索相应的结果。</target>
        </trans-unit>
        <trans-unit id="c1cac63ef7981908e32675c25d1a4cb7e30a0088" translate="yes" xml:space="preserve">
          <source>Fire up your server using &lt;code&gt;rails server&lt;/code&gt;.</source>
          <target state="translated">使用 &lt;code&gt;rails server&lt;/code&gt; 启动服务器。</target>
        </trans-unit>
        <trans-unit id="1b15caf9936cfa74e6a5bda763dfeda0d85733fb" translate="yes" xml:space="preserve">
          <source>Fired</source>
          <target state="translated">Fired</target>
        </trans-unit>
        <trans-unit id="2a84db8c8b5067e14875e0b737ffcd8c6171a2d6" translate="yes" xml:space="preserve">
          <source>First Contact</source>
          <target state="translated">第一次接触</target>
        </trans-unit>
        <trans-unit id="863e9a7269cd28886907c16a3adb00f35c657965" translate="yes" xml:space="preserve">
          <source>First additional parameter is used as the signature key for &lt;code&gt;MessageVerifier&lt;/code&gt;. This allows you to specify keys to encrypt and sign data.</source>
          <target state="translated">第一个附加参数用作 &lt;code&gt;MessageVerifier&lt;/code&gt; 的签名密钥。这使您可以指定用于加密和签名数据的密钥。</target>
        </trans-unit>
        <trans-unit id="2128360c9ec4ef8ca60516472b3542d54d6ac365" translate="yes" xml:space="preserve">
          <source>First configurable block to run. Called before any initializers are run.</source>
          <target state="translated">第一个要运行的可配置块。在运行任何初始化程序之前调用。</target>
        </trans-unit>
        <trans-unit id="9448b50087a5d19b0cb647d27cf8b4a279df40e0" translate="yes" xml:space="preserve">
          <source>First it checks for &lt;code&gt;posts_controller/post.rb&lt;/code&gt; in &lt;code&gt;autoload_paths&lt;/code&gt;:</source>
          <target state="translated">首先，它会检查 &lt;code&gt;posts_controller/post.rb&lt;/code&gt; 在 &lt;code&gt;autoload_paths&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="69c8a440e7e512cf2de9109a7d456b91bd77d107" translate="yes" xml:space="preserve">
          <source>First, add &lt;code&gt;gem 'web-console', '~&amp;gt; 2.0'&lt;/code&gt; to the &lt;code&gt;:development&lt;/code&gt; group in your &lt;code&gt;Gemfile&lt;/code&gt; and run &lt;code&gt;bundle install&lt;/code&gt; (it won't have been included when you upgraded Rails). Once it's been installed, you can simply drop a reference to the console helper (i.e., &lt;code&gt;&amp;lt;%= console %&amp;gt;&lt;/code&gt;) into any view you want to enable it for. A console will also be provided on any error page you view in your development environment.</source>
          <target state="translated">首先，在 &lt;code&gt;Gemfile&lt;/code&gt; 的 &lt;code&gt;:development&lt;/code&gt; 组中添加gem'web &lt;code&gt;gem 'web-console', '~&amp;gt; 2.0'&lt;/code&gt; 并运行 &lt;code&gt;bundle install&lt;/code&gt; （升级Rails时将不包含该包）。安装完成后，您可以简单地将对控制台帮助程序的引用（即 &lt;code&gt;&amp;lt;%= console %&amp;gt;&lt;/code&gt; ）放入要为其启用它的任何视图中。您在开发环境中查看的任何错误页面上还将提供一个控制台。</target>
        </trans-unit>
        <trans-unit id="4bb4517f6cf6252c239581e43788a114f055c45b" translate="yes" xml:space="preserve">
          <source>First, extend &lt;a href=&quot;callbacks&quot;&gt;ActiveModel::Callbacks&lt;/a&gt; from the class you are creating:</source>
          <target state="translated">首先，从要创建的类扩展&lt;a href=&quot;callbacks&quot;&gt;ActiveModel :: Callbacks&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="b6460b753e52401f8a06071b50ac9d96903bb654" translate="yes" xml:space="preserve">
          <source>First, if we DO find a template, it's rendered. Template lookup accounts for the action name, locales, format, variant, template handlers, and more (see &lt;code&gt;render&lt;/code&gt; for details).</source>
          <target state="translated">首先，如果我们确实找到了模板，则将其渲染。模板查找说明了操作名称，语言环境，格式，变体，模板处理程序等（有关详细信息，请参见 &lt;code&gt;render&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="6e7140044459c2577a8e1500aeea87640e667265" translate="yes" xml:space="preserve">
          <source>First, include &lt;a href=&quot;callbacks&quot;&gt;ActiveModel::Validations::Callbacks&lt;/a&gt; from the class you are creating:</source>
          <target state="translated">首先，包含要创建的类中的&lt;a href=&quot;callbacks&quot;&gt;ActiveModel :: Validations :: Callbacks&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="5db0606f89013bb317a55858cca353f0367242c7" translate="yes" xml:space="preserve">
          <source>First, it will ensure that any thrown &lt;code&gt;MissingTranslation&lt;/code&gt; messages will be rendered as inline spans that:</source>
          <target state="translated">首先，它将确保所有抛出的 &lt;code&gt;MissingTranslation&lt;/code&gt; 消息将被呈现为以下内容的内联跨度：</target>
        </trans-unit>
        <trans-unit id="124c07d29c8949c0c45ef452750117078d66cfbe" translate="yes" xml:space="preserve">
          <source>First, let's create a simple &lt;code&gt;User&lt;/code&gt; scaffold:</source>
          <target state="translated">首先，让我们创建一个简单的 &lt;code&gt;User&lt;/code&gt; 支架：</target>
        </trans-unit>
        <trans-unit id="527d1596e469f5fe1f51f86ad2fddf13aad401c8" translate="yes" xml:space="preserve">
          <source>First, notice that we are inheriting from &lt;code&gt;Rails::Generators::NamedBase&lt;/code&gt; instead of &lt;code&gt;Rails::Generators::Base&lt;/code&gt;. This means that our generator expects at least one argument, which will be the name of the initializer, and will be available in our code in the variable &lt;code&gt;name&lt;/code&gt;.</source>
          <target state="translated">首先，请注意，我们继承自 &lt;code&gt;Rails::Generators::NamedBase&lt;/code&gt; 而不是 &lt;code&gt;Rails::Generators::Base&lt;/code&gt; 。这意味着我们的生成器期望至少有一个参数，该参数将作为初始化程序的名称，并将在我们的代码中以变量 &lt;code&gt;name&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="eaa4f66b819d957c1cd2205f57684022146f1efc" translate="yes" xml:space="preserve">
          <source>First, one uses the &lt;code&gt;get&lt;/code&gt;, &lt;code&gt;post&lt;/code&gt;, &lt;code&gt;patch&lt;/code&gt;, &lt;code&gt;put&lt;/code&gt;, &lt;code&gt;delete&lt;/code&gt; or &lt;code&gt;head&lt;/code&gt; method to simulate an HTTP request.</source>
          <target state="translated">首先，使用 &lt;code&gt;get&lt;/code&gt; ， &lt;code&gt;post&lt;/code&gt; ， &lt;code&gt;patch&lt;/code&gt; ， &lt;code&gt;put&lt;/code&gt; ， &lt;code&gt;delete&lt;/code&gt; 或 &lt;code&gt;head&lt;/code&gt; 方法来模拟HTTP请求。</target>
        </trans-unit>
        <trans-unit id="c568a45aca6b79eb9efb04ff988e438ccab9eb4e" translate="yes" xml:space="preserve">
          <source>First, one uses the &lt;code&gt;subscribe&lt;/code&gt; method to simulate subscription creation.</source>
          <target state="translated">首先，人们使用 &lt;code&gt;subscribe&lt;/code&gt; 方法来模拟订阅的创建。</target>
        </trans-unit>
        <trans-unit id="ffc0f9a53e3c4957fd6e6f284ffe0f8c6858dfab" translate="yes" xml:space="preserve">
          <source>First, take a look at &lt;code&gt;app/models/comment.rb&lt;/code&gt;:</source>
          <target state="translated">首先，看看 &lt;code&gt;app/models/comment.rb&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="28bec0e2e79a6098e09f2effd434672e2367b710" translate="yes" xml:space="preserve">
          <source>First, the &lt;code&gt;author_name&lt;/code&gt; text field needs to be added to the &lt;code&gt;app/views/blorgh/articles/_form.html.erb&lt;/code&gt; partial inside the engine. This can be added above the &lt;code&gt;title&lt;/code&gt; field with this code:</source>
          <target state="translated">首先，需要将 &lt;code&gt;author_name&lt;/code&gt; 文本字段添加到引擎内部的 &lt;code&gt;app/views/blorgh/articles/_form.html.erb&lt;/code&gt; 部分中。可以使用以下代码将其添加到 &lt;code&gt;title&lt;/code&gt; 字段上方：</target>
        </trans-unit>
        <trans-unit id="7b7b740fab55e112a3c784c68fb18fe1d94b5077" translate="yes" xml:space="preserve">
          <source>First, the database name for the primary and replica should be the same because they contain the same data. Second, the username for the primary and replica should be different, and the replica user's permissions should be to read and not write.</source>
          <target state="translated">首先,主数据库和副本的数据库名称应该是相同的,因为它们包含相同的数据。其次,主数据库和副本的用户名应该不同,副本用户的权限应该是读而不是写。</target>
        </trans-unit>
        <trans-unit id="1468a039e189502b3dd31c3150cee48f6a6236f4" translate="yes" xml:space="preserve">
          <source>First, the engine needs to be specified inside the application's &lt;code&gt;Gemfile&lt;/code&gt;. If there isn't an application handy to test this out in, generate one using the &lt;code&gt;rails new&lt;/code&gt; command outside of the engine directory like this:</source>
          <target state="translated">首先，需要在应用程序的 &lt;code&gt;Gemfile&lt;/code&gt; 中指定引擎。如果没有方便的应用程序来进行测试，请在引擎目录外部使用 &lt;code&gt;rails new&lt;/code&gt; 命令生成一个应用程序，如下所示：</target>
        </trans-unit>
        <trans-unit id="cbc622a4646f4694023946c9dc089c090ea7d75c" translate="yes" xml:space="preserve">
          <source>First, to tell Mail to turn an attachment into an inline attachment, you just call &lt;code&gt;#inline&lt;/code&gt; on the attachments method within your Mailer:</source>
          <target state="translated">首先，要告诉Mail将附件转换为嵌入式附件，只需在Mailer中的附件方法上调用 &lt;code&gt;#inline&lt;/code&gt; 即可：</target>
        </trans-unit>
        <trans-unit id="c4c51da04699781ff96429f545394da6cb2b57fb" translate="yes" xml:space="preserve">
          <source>First, we declare that this connection can be identified by its current_user. This allows us to later be able to find all connections established for that current_user (and potentially disconnect them). You can declare as many identification indexes as you like. Declaring an identification means that an attr_accessor is automatically set for that key.</source>
          <target state="translated">首先,我们声明这个连接可以通过它的current_user来识别。这使我们以后能够找到所有为该current_user建立的连接(并有可能断开它们的连接)。你可以声明任意多的标识索引。声明一个标识意味着会自动为该键设置一个attr_accessor。</target>
        </trans-unit>
        <trans-unit id="6b68688153987d6439de8175f29c07d67a7eb9b9" translate="yes" xml:space="preserve">
          <source>First, we will make a comment partial to extract showing all the comments for the article. Create the file &lt;code&gt;app/views/comments/_comment.html.erb&lt;/code&gt; and put the following into it:</source>
          <target state="translated">首先，我们将对评论进行部分提取，以提取显示该文章的所有评论。创建文件 &lt;code&gt;app/views/comments/_comment.html.erb&lt;/code&gt; 并将以下内容放入其中：</target>
        </trans-unit>
        <trans-unit id="8bb52362b88dc56354b3f3e3e600169f5cafd5d7" translate="yes" xml:space="preserve">
          <source>First, when the &lt;code&gt;module&lt;/code&gt; keyword is processed, the interpreter creates a new entry in the constant table of the class object stored in the &lt;code&gt;Object&lt;/code&gt; constant. Said entry associates the name &quot;Colors&quot; to a newly created module object. Furthermore, the interpreter sets the name of the new module object to be the string &quot;Colors&quot;.</source>
          <target state="translated">首先，当处理 &lt;code&gt;module&lt;/code&gt; 关键字时，解释器在存储在 &lt;code&gt;Object&lt;/code&gt; 常量中的类对象的常量表中创建一个新条目。所述条目将名称&amp;ldquo;颜色&amp;rdquo;与新创建的模块对象相关联。此外，解释器将新模块对象的名称设置为字符串&amp;ldquo; Colors&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="1e1190be35c6213124c2d02d648e330fab1e14a4" translate="yes" xml:space="preserve">
          <source>First: takes a block so it can be used just like &lt;code&gt;Array#select&lt;/code&gt;.</source>
          <target state="translated">首先：占用一个块，以便可以像 &lt;code&gt;Array#select&lt;/code&gt; 一样使用它。</target>
        </trans-unit>
        <trans-unit id="edd3bdb78d6bb3eb4a0f3e13e554d2fb4983c0df" translate="yes" xml:space="preserve">
          <source>Firstly, &lt;code&gt;super&lt;/code&gt; is called which calls the &lt;code&gt;initialize&lt;/code&gt; method on &lt;code&gt;Rack::Server&lt;/code&gt;.</source>
          <target state="translated">首先，调用 &lt;code&gt;super&lt;/code&gt; ，它在 &lt;code&gt;Rack::Server&lt;/code&gt; 上调用 &lt;code&gt;initialize&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="05f798e3c3068887b6710efdd9705a38be82d573" translate="yes" xml:space="preserve">
          <source>Firstly, you need a place within the application to create a new article. A great place for that would be at &lt;code&gt;/articles/new&lt;/code&gt;. With the route already defined, requests can now be made to &lt;code&gt;/articles/new&lt;/code&gt; in the application. Navigate to http://localhost:3000/articles/new and you'll see a routing error:</source>
          <target state="translated">首先，您需要在应用程序中放置一个位置来创建新文章。一个好地方是在 &lt;code&gt;/articles/new&lt;/code&gt; 。使用已经定义的路由，现在可以向应用程序中的 &lt;code&gt;/articles/new&lt;/code&gt; 发出请求。导航到http：// localhost：3000 / articles / new，您会看到路由错误：</target>
        </trans-unit>
        <trans-unit id="1b9189d91e82e8f7905b5124c7bafaca424e6f4a" translate="yes" xml:space="preserve">
          <source>Fix tests and deprecated features.</source>
          <target state="translated">修正测试和过时的功能。</target>
        </trans-unit>
        <trans-unit id="2c32a616d9744ed6d811f633a73a67b1c4191e13" translate="yes" xml:space="preserve">
          <source>Fixture label interpolation</source>
          <target state="translated">夹具标签插值</target>
        </trans-unit>
        <trans-unit id="5765732c82bf230e595c76b18afa6b128afcee0c" translate="yes" xml:space="preserve">
          <source>Fixtures are a way of organizing data that you want to test against; in short, sample data.</source>
          <target state="translated">固定装置是组织你要测试的数据的一种方式,简而言之,就是样本数据。</target>
        </trans-unit>
        <trans-unit id="743e121f5dd2e84df8ebe7b2fe8791a6d5c189b4" translate="yes" xml:space="preserve">
          <source>Fixtures are a way of organizing test data; they reside in the &lt;code&gt;fixtures&lt;/code&gt; directory.</source>
          <target state="translated">夹具是一种组织测试数据的方法；它们位于 &lt;code&gt;fixtures&lt;/code&gt; 目录中。</target>
        </trans-unit>
        <trans-unit id="710514649f0f9c8bc09e196fb1f42dec62e101fd" translate="yes" xml:space="preserve">
          <source>Fixtures are instances of Active Record. As mentioned in point #3 above, you can access the object directly because it is automatically available as a method whose scope is local of the test case. For example:</source>
          <target state="translated">Fixtures是Active Record的实例。正如在上面的第3点中提到的,您可以直接访问该对象,因为它作为一个方法自动可用,其作用域是测试用例的本地。比如说,你可以直接访问对象,因为它自动作为一个方法,其范围是测试用例的局部。</target>
        </trans-unit>
        <trans-unit id="fea93790bd4818efe4da3235b0d6dd8cd36067ff" translate="yes" xml:space="preserve">
          <source>Fixtures are not designed to create every object that your tests need, and are best managed when only used for default data that can be applied to the common case.</source>
          <target state="translated">固定装置并不是为了创建您的测试所需要的每一个对象而设计的,当只用于可以应用于普通情况的默认数据时,固定装置是最好的管理方式。</target>
        </trans-unit>
        <trans-unit id="b0ff77a8f2eca13b03e22bfd5fbffd68987e2612" translate="yes" xml:space="preserve">
          <source>Fixtures that don't specify an ID get some extra features:</source>
          <target state="translated">没有指定ID的夹具会有一些额外的功能。</target>
        </trans-unit>
        <trans-unit id="923914245da303901960616cc70ead07d0ef00ba" translate="yes" xml:space="preserve">
          <source>Flash message keys are &lt;a href=&quot;https://github.com/rails/rails/commit/a668beffd64106a1e1fedb71cc25eaaa11baf0c1&quot;&gt;normalized to strings&lt;/a&gt;. They can still be accessed using either symbols or strings. Looping through the flash will always yield string keys:</source>
          <target state="translated">Flash消息密钥被&lt;a href=&quot;https://github.com/rails/rails/commit/a668beffd64106a1e1fedb71cc25eaaa11baf0c1&quot;&gt;标准化为字符串&lt;/a&gt;。仍然可以使用符号或字符串来访问它们。遍历闪存将始终产生字符串键：</target>
        </trans-unit>
        <trans-unit id="90530fd8e1d8bca388a24d68d18ccceb0d823f58" translate="yes" xml:space="preserve">
          <source>Flash structure changes</source>
          <target state="translated">闪光灯结构变化</target>
        </trans-unit>
        <trans-unit id="914d129a758d1e705286234c2680eac661c2ff4c" translate="yes" xml:space="preserve">
          <source>Flash::ClassMethods</source>
          <target state="translated">Flash::ClassMethods</target>
        </trans-unit>
        <trans-unit id="b16193581b3d368cbb2e12880d5c34d491ad02d5" translate="yes" xml:space="preserve">
          <source>Flash::ClassMethods#add_flash_types</source>
          <target state="translated">Flash::ClassMethods#add_flash_types</target>
        </trans-unit>
        <trans-unit id="ff2976e56a14fbd5732f9bed144d90d36fbfaaf7" translate="yes" xml:space="preserve">
          <source>Flash::FlashHash</source>
          <target state="translated">Flash::FlashHash</target>
        </trans-unit>
        <trans-unit id="90a6de1d98d934560f0f6214351ff218b25ba49f" translate="yes" xml:space="preserve">
          <source>Flash::FlashHash#[]</source>
          <target state="translated">Flash::FlashHash#[]</target>
        </trans-unit>
        <trans-unit id="a7844d6863374bb4cf63688429c357c8ec2a8f11" translate="yes" xml:space="preserve">
          <source>Flash::FlashHash#[]=</source>
          <target state="translated">Flash::FlashHash#[]=</target>
        </trans-unit>
        <trans-unit id="3b0177b63a77d61047e4eb70c2f9db3013809131" translate="yes" xml:space="preserve">
          <source>Flash::FlashHash#alert</source>
          <target state="translated">Flash::FlashHash#alert</target>
        </trans-unit>
        <trans-unit id="e66c2fb938c51adfed41f4f587380f9b48cabb53" translate="yes" xml:space="preserve">
          <source>Flash::FlashHash#alert=</source>
          <target state="translated">Flash::FlashHash#alert=</target>
        </trans-unit>
        <trans-unit id="fa87b5296a2a9e31b0cc54a0a7f5e49b37f457b8" translate="yes" xml:space="preserve">
          <source>Flash::FlashHash#clear</source>
          <target state="translated">Flash::FlashHash#clear</target>
        </trans-unit>
        <trans-unit id="21580702e8381935742b7dc79e297b81cfc6e156" translate="yes" xml:space="preserve">
          <source>Flash::FlashHash#delete</source>
          <target state="translated">Flash::FlashHash#delete</target>
        </trans-unit>
        <trans-unit id="5f9de39bd326468234a087b4180d945a6ce991f8" translate="yes" xml:space="preserve">
          <source>Flash::FlashHash#discard</source>
          <target state="translated">Flash::FlashHash#discard</target>
        </trans-unit>
        <trans-unit id="dc6d12f451b75c3cf3f67a3672b6ef450dba0428" translate="yes" xml:space="preserve">
          <source>Flash::FlashHash#each</source>
          <target state="translated">Flash::FlashHash#each</target>
        </trans-unit>
        <trans-unit id="c691c15d595052a24998640a0d5f6c0791b2ae3a" translate="yes" xml:space="preserve">
          <source>Flash::FlashHash#empty?</source>
          <target state="translated">Flash::FlashHash#empty?</target>
        </trans-unit>
        <trans-unit id="2912a95457ec9674999495b256c63e94d2a24279" translate="yes" xml:space="preserve">
          <source>Flash::FlashHash#initialize_copy</source>
          <target state="translated">Flash::FlashHash#initialize_copy</target>
        </trans-unit>
        <trans-unit id="00a8d9e3720db0924004cd134f47880f5444a242" translate="yes" xml:space="preserve">
          <source>Flash::FlashHash#keep</source>
          <target state="translated">Flash::FlashHash#keep</target>
        </trans-unit>
        <trans-unit id="3d4918dd1c695100c39b4843a2c216c104d0bbc1" translate="yes" xml:space="preserve">
          <source>Flash::FlashHash#key?</source>
          <target state="translated">Flash::FlashHash#key?</target>
        </trans-unit>
        <trans-unit id="fea881a4cb9f8765da53e3c782414fd6548172ff" translate="yes" xml:space="preserve">
          <source>Flash::FlashHash#keys</source>
          <target state="translated">Flash::FlashHash#keys</target>
        </trans-unit>
        <trans-unit id="76e6eb2a7027538c3319ca84aca9bb8cdab68e8c" translate="yes" xml:space="preserve">
          <source>Flash::FlashHash#notice</source>
          <target state="translated">Flash::FlashHash#notice</target>
        </trans-unit>
        <trans-unit id="a205f20f2db06e67952d265eb61ae9f90ce0bcc8" translate="yes" xml:space="preserve">
          <source>Flash::FlashHash#notice=</source>
          <target state="translated">Flash::FlashHash#notice=</target>
        </trans-unit>
        <trans-unit id="48d338ea5883e01b9b79b8a1fa5cd9a1d5a4cc28" translate="yes" xml:space="preserve">
          <source>Flash::FlashHash#now</source>
          <target state="translated">Flash::FlashHash#now</target>
        </trans-unit>
        <trans-unit id="05a2ed8fdc166a90a0c84cf637171e38c9c6c72b" translate="yes" xml:space="preserve">
          <source>Flash::FlashHash#now_is_loaded?</source>
          <target state="translated">Flash::FlashHash#now_is_loaded?</target>
        </trans-unit>
        <trans-unit id="34b5bc63547d6e36bf6f32dea9ff05bbc5a74f88" translate="yes" xml:space="preserve">
          <source>Flash::FlashHash#stringify_array</source>
          <target state="translated">Flash::FlashHash#stringify_array</target>
        </trans-unit>
        <trans-unit id="0a6f1001ce329b84775d32431a7a5ca102ab2824" translate="yes" xml:space="preserve">
          <source>Flash::FlashHash#to_hash</source>
          <target state="translated">Flash::FlashHash#to_hash</target>
        </trans-unit>
        <trans-unit id="18d4cbc27879bc99bd85d55d150f66570417c8db" translate="yes" xml:space="preserve">
          <source>Flash::RequestMethods</source>
          <target state="translated">Flash::RequestMethods</target>
        </trans-unit>
        <trans-unit id="e07699e7f813ba51ed1fe9a4ed1ec3efee17ea9c" translate="yes" xml:space="preserve">
          <source>Flash::RequestMethods#flash</source>
          <target state="translated">Flash::RequestMethods#flash</target>
        </trans-unit>
        <trans-unit id="4adaadbb2b4901a2d33f5c2c45ce61a5265338b4" translate="yes" xml:space="preserve">
          <source>Flash::RequestMethods#flash=</source>
          <target state="translated">Flash::RequestMethods#flash=</target>
        </trans-unit>
        <trans-unit id="e5f6c48133ba7a0375b6ea7262638e214c44eb1f" translate="yes" xml:space="preserve">
          <source>Flash::new</source>
          <target state="translated">Flash::new</target>
        </trans-unit>
        <trans-unit id="64435fd82de7b1d614dfb9844848a48b14c6cd2c" translate="yes" xml:space="preserve">
          <source>Float</source>
          <target state="translated">Float</target>
        </trans-unit>
        <trans-unit id="0d7b4882ce084594064d8a213ce7d218d38a740a" translate="yes" xml:space="preserve">
          <source>Flush all &lt;a href=&quot;logsubscriber#method-c-log_subscribers&quot;&gt;::log_subscribers&lt;/a&gt;' logger.</source>
          <target state="translated">刷新所有&lt;a href=&quot;logsubscriber#method-c-log_subscribers&quot;&gt;:: log_subscribers&lt;/a&gt;的记录器。</target>
        </trans-unit>
        <trans-unit id="6f475c6adddac90040c881f45e7ef615c0f76125" translate="yes" xml:space="preserve">
          <source>Follow a single redirect response. If the last response was not a redirect, an exception will be raised. Otherwise, the redirect is performed on the location header. Any arguments are passed to the underlying call to `get`.</source>
          <target state="translated">按照单一重定向响应。如果最后一个响应不是重定向,将引发一个异常。否则,重定向将在位置头上执行。任何参数都会传递给对`get`的底层调用。</target>
        </trans-unit>
        <trans-unit id="7b4d42135d907481dc1f27709879cbb4076cf181" translate="yes" xml:space="preserve">
          <source>Following the &lt;em&gt;convention over configuration&lt;/em&gt; philosophy, Rails I18n provides reasonable default translation strings. When different translation strings are needed, they can be overridden.</source>
          <target state="translated">遵循有关&lt;em&gt;配置原则&lt;/em&gt;的&lt;em&gt;约定&lt;/em&gt;，Rails I18n提供了合理的默认转换字符串。当需要不同的翻译字符串时，可以覆盖它们。</target>
        </trans-unit>
        <trans-unit id="35b4cbffb8d15ff81bab1ce137494ca254c6c41d" translate="yes" xml:space="preserve">
          <source>Following this convention will allow you to use the default route generators (e.g. &lt;code&gt;resources&lt;/code&gt;, etc) without needing to qualify each &lt;code&gt;:path&lt;/code&gt; or &lt;code&gt;:controller&lt;/code&gt;, and will keep named route helpers' usage consistent throughout your application. See &lt;a href=&quot;layouts_and_rendering&quot;&gt;Layouts &amp;amp; Rendering Guide&lt;/a&gt; for more details.</source>
          <target state="translated">遵循该约定，将允许您使用默认的路由生成器（例如 &lt;code&gt;resources&lt;/code&gt; 等），而无需限定每个 &lt;code&gt;:path&lt;/code&gt; 或 &lt;code&gt;:controller&lt;/code&gt; ，并将使命名路由助手在整个应用程序中的用法保持一致。有关更多详细信息，请参见&lt;a href=&quot;layouts_and_rendering&quot;&gt;布局和渲染指南&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ec0c3b76630fd745381cc215a284820af75a683a" translate="yes" xml:space="preserve">
          <source>Footnotes</source>
          <target state="translated">Footnotes</target>
        </trans-unit>
        <trans-unit id="d8042d1fa8c46f59b6ac0427027ba3251f625ac0" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;api&quot;&gt;API&lt;/a&gt; controllers, the implicit response is always &lt;code&gt;204 No Content&lt;/code&gt;.</source>
          <target state="translated">对于&lt;a href=&quot;api&quot;&gt;API&lt;/a&gt;控制器，隐式响应始终为 &lt;code&gt;204 No Content&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="845d136019bc185b8437ca6c3b5a4fda2886ba8d" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;classmethods#method-i-has_and_belongs_to_many&quot;&gt;has_and_belongs_to_many&lt;/a&gt;, &lt;code&gt;delete&lt;/code&gt; and &lt;code&gt;destroy&lt;/code&gt; are the same: they cause the records in the join table to be removed.</source>
          <target state="translated">对于&lt;a href=&quot;classmethods#method-i-has_and_belongs_to_many&quot;&gt;has_and_belongs_to_many&lt;/a&gt;， &lt;code&gt;delete&lt;/code&gt; 和 &lt;code&gt;destroy&lt;/code&gt; 相同：它们导致联接表中的记录被删除。</target>
        </trans-unit>
        <trans-unit id="2f6871afc36b5eb296d00ee92f9388f5220a04d2" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;classmethods#method-i-has_many&quot;&gt;has_many&lt;/a&gt;, &lt;code&gt;destroy&lt;/code&gt; and &lt;code&gt;destroy_all&lt;/code&gt; will always call the &lt;code&gt;destroy&lt;/code&gt; method of the record(s) being removed so that callbacks are run. However &lt;code&gt;delete&lt;/code&gt; and &lt;code&gt;delete_all&lt;/code&gt; will either do the deletion according to the strategy specified by the &lt;code&gt;:dependent&lt;/code&gt; option, or if no &lt;code&gt;:dependent&lt;/code&gt; option is given, then it will follow the default strategy. The default strategy is to do nothing (leave the foreign keys with the parent ids set), except for &lt;a href=&quot;classmethods#method-i-has_many&quot;&gt;has_many&lt;/a&gt;&lt;code&gt;:through&lt;/code&gt;, where the default strategy is &lt;code&gt;delete_all&lt;/code&gt; (delete the join records, without running their callbacks).</source>
          <target state="translated">对于&lt;a href=&quot;classmethods#method-i-has_many&quot;&gt;has_many&lt;/a&gt;， &lt;code&gt;destroy&lt;/code&gt; 和 &lt;code&gt;destroy_all&lt;/code&gt; 将始终调用要删除的记录的 &lt;code&gt;destroy&lt;/code&gt; 方法，以便运行回调。但是 &lt;code&gt;delete&lt;/code&gt; 和 &lt;code&gt;delete_all&lt;/code&gt; 将根据 &lt;code&gt;:dependent&lt;/code&gt; 选项指定的策略进行删除，或者，如果未给出 &lt;code&gt;:dependent&lt;/code&gt; 选项，则它将遵循默认策略。除了&lt;a href=&quot;classmethods#method-i-has_many&quot;&gt;has_many &lt;/a&gt; &lt;code&gt;:through&lt;/code&gt; 之外，默认策略是不执行任何操作（保留设置了父ID的外键），默认策略是 &lt;code&gt;delete_all&lt;/code&gt; （删除联接记录，而不运行它们的回调）。</target>
        </trans-unit>
        <trans-unit id="904678ef8c40284a4397b4b526da6ed401299ec8" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;has_many :through&lt;/code&gt; associations, the default deletion strategy is &lt;code&gt;:delete_all&lt;/code&gt;.</source>
          <target state="translated">对于 &lt;code&gt;has_many :through&lt;/code&gt; 关联，默认删除策略是 &lt;code&gt;:delete_all&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f1f47476879fee98e87b6542011fd00597d9910b" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;has_many&lt;/code&gt; associations, the default deletion strategy is &lt;code&gt;:nullify&lt;/code&gt;. This sets the foreign keys to &lt;code&gt;NULL&lt;/code&gt;.</source>
          <target state="translated">对于 &lt;code&gt;has_many&lt;/code&gt; 关联，默认删除策略是 &lt;code&gt;:nullify&lt;/code&gt; 。这会将外键设置为 &lt;code&gt;NULL&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="99d551518d4f38e155ebc21db3ed28e506c5c1b0" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;rails server&lt;/code&gt; the equivalent of the following command is executed:</source>
          <target state="translated">对于 &lt;code&gt;rails server&lt;/code&gt; ，将执行以下命令的等效项：</target>
        </trans-unit>
        <trans-unit id="d78e4858b6e5f03c64f70654748fbc0e9a1f8195" translate="yes" xml:space="preserve">
          <source>For &lt;em&gt;countermeasures against CSRF in administration interfaces and Intranet applications, refer to the countermeasures in the CSRF section&lt;/em&gt;.</source>
          <target state="translated">有关&lt;em&gt;管理界面和Intranet应用程序中CSRF的对策，请参阅CSRF部分中的对策&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="d207a7d4fe314030cfc83d683d2201d468256aca" translate="yes" xml:space="preserve">
          <source>For AJAX requests other than GETs, extract the &amp;ldquo;csrf-token&amp;rdquo; from the meta-tag and send as the &amp;ldquo;X-CSRF-Token&amp;rdquo; HTTP header. If you are using rails-ujs this happens automatically.</source>
          <target state="translated">对于除GET之外的AJAX请求，请从元标记中提取&amp;ldquo; csrf-token&amp;rdquo;，并将其作为&amp;ldquo; X-CSRF-Token&amp;rdquo; HTTP标头发送。如果您使用的是rails-ujs，则会自动发生。</target>
        </trans-unit>
        <trans-unit id="0b45c7c547dfe153af7b5c2bffc2318f587d77f3" translate="yes" xml:space="preserve">
          <source>For Apache:</source>
          <target state="translated">对于Apache:</target>
        </trans-unit>
        <trans-unit id="5b16c65687851e9f77536de961a201d18686a384" translate="yes" xml:space="preserve">
          <source>For NGINX:</source>
          <target state="translated">对于NGINX:</target>
        </trans-unit>
        <trans-unit id="2ee9c3eca46b810b3e5c354af5b98d30bb8322e1" translate="yes" xml:space="preserve">
          <source>For a Rails::Command::TestCommand placed in &lt;code&gt;rails/command/test_command.rb&lt;/code&gt; would return &lt;code&gt;rails/test&lt;/code&gt;.</source>
          <target state="translated">对于放置在 &lt;code&gt;rails/command/test_command.rb&lt;/code&gt; 中的Rails :: Command :: TestCommand将返回 &lt;code&gt;rails/test&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0337e09e3f5441269fd60fb9e46feba5fe0005f4" translate="yes" xml:space="preserve">
          <source>For a cache-only Redis server, set &lt;code&gt;maxmemory-policy&lt;/code&gt; to one of the variants of allkeys. Redis 4+ supports least-frequently-used eviction (&lt;code&gt;allkeys-lfu&lt;/code&gt;), an excellent default choice. Redis 3 and earlier should use least-recently-used eviction (&lt;code&gt;allkeys-lru&lt;/code&gt;).</source>
          <target state="translated">对于仅缓存的Redis服务器，请将 &lt;code&gt;maxmemory-policy&lt;/code&gt; 设置为allkey的变体之一。Redis 4+支持最少使用的逐出（ &lt;code&gt;allkeys-lfu&lt;/code&gt; ），这是一个很好的默认选择。Redis 3和更早版本应使用最近最少使用的驱逐（ &lt;code&gt;allkeys-lru&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="2705926361d3741b615af29f48a9b2d2f6a9a658" translate="yes" xml:space="preserve">
          <source>For a complete writeup of possible configurations see the &lt;a href=&quot;configuring#configuring-action-mailer&quot;&gt;Configuring Action Mailer&lt;/a&gt; in our Configuring Rails Applications guide.</source>
          <target state="translated">有关可能的配置的完整说明，请参见&lt;a href=&quot;configuring#configuring-action-mailer&quot;&gt;《&lt;/a&gt;配置Rails应用程序》指南中的&amp;ldquo; 配置动作邮件程序&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="5329458c35cd39efd8df6906876b1124af456158" translate="yes" xml:space="preserve">
          <source>For a freshly generated Rails application, this might produce something like:</source>
          <target state="translated">对于一个新生成的Rails应用,这可能会产生这样的结果。</target>
        </trans-unit>
        <trans-unit id="1d43d5cb8e17443e1207469d2744b9d253a0aaab" translate="yes" xml:space="preserve">
          <source>For a full list of all configuration options, see the &lt;code&gt;ActionCable::Server::Configuration&lt;/code&gt; class.</source>
          <target state="translated">有关所有配置选项的完整列表，请参见 &lt;code&gt;ActionCable::Server::Configuration&lt;/code&gt; 类。</target>
        </trans-unit>
        <trans-unit id="fbd474b6f355fe3d66739bb18c38b38cce6fb587" translate="yes" xml:space="preserve">
          <source>For a list of available field types for the &lt;code&gt;type&lt;/code&gt; parameter, refer to the &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-add_column&quot;&gt;API documentation&lt;/a&gt; for the add_column method for the &lt;code&gt;SchemaStatements&lt;/code&gt; module. The &lt;code&gt;index&lt;/code&gt; parameter generates a corresponding index for the column.</source>
          <target state="translated">有关 &lt;code&gt;type&lt;/code&gt; 参数的可用字段类型的列表，请参阅 &lt;code&gt;SchemaStatements&lt;/code&gt; 模块的add_column方法的&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-add_column&quot;&gt;API文档&lt;/a&gt;。所述 &lt;code&gt;index&lt;/code&gt; 参数生成用于该列对应的索引。</target>
        </trans-unit>
        <trans-unit id="a632cdfeaf0496b79aedd8c39ba65af9bbf75d4a" translate="yes" xml:space="preserve">
          <source>For a list of commands that are reversible, please see &lt;code&gt;ActiveRecord::Migration::CommandRecorder&lt;/code&gt;.</source>
          <target state="translated">有关可逆命令的列表，请参见 &lt;code&gt;ActiveRecord::Migration::CommandRecorder&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="308c98d5f29c4938d3ab80d8d4f526fffe9ff1fb" translate="yes" xml:space="preserve">
          <source>For a one-to-one association, this option allows you to specify how nested attributes are going to be used when an associated record already exists. In general, an existing record may either be updated with the new set of attribute values or be replaced by a wholly new record containing those values. By default the &lt;code&gt;:update_only&lt;/code&gt; option is &lt;code&gt;false&lt;/code&gt; and the nested attributes are used to update the existing record only if they include the record's &lt;code&gt;:id&lt;/code&gt; value. Otherwise a new record will be instantiated and used to replace the existing one. However if the &lt;code&gt;:update_only&lt;/code&gt; option is &lt;code&gt;true&lt;/code&gt;, the nested attributes are used to update the record's attributes always, regardless of whether the &lt;code&gt;:id&lt;/code&gt; is present. The option is ignored for collection associations.</source>
          <target state="translated">对于一对一关联，此选项允许您指定在关联记录已存在时如何使用嵌套属性。通常，可以使用新的属性值集更新现有记录，也可以用包含这些值的全新记录来替换现有记录。默认情况下， &lt;code&gt;:update_only&lt;/code&gt; 选项为 &lt;code&gt;false&lt;/code&gt; ，并且嵌套属性仅在包含记录的 &lt;code&gt;:id&lt;/code&gt; 值时才用于更新现有记录。否则，将实例化一条新记录并将其用于替换现有记录。但是，如果 &lt;code&gt;:update_only&lt;/code&gt; 选项为 &lt;code&gt;true&lt;/code&gt; ，则无论 &lt;code&gt;:id&lt;/code&gt; 是否使用，嵌套属性始终用于更新记录的属性。存在。对于集合关联，该选项将被忽略。</target>
        </trans-unit>
        <trans-unit id="bf4637a27cc000ab50c08001e55a209040599bf6" translate="yes" xml:space="preserve">
          <source>For all of these options, see the documentation for &lt;a href=&quot;urlfor&quot;&gt;url_for&lt;/a&gt;.</source>
          <target state="translated">有关所有这些选项，请参见&lt;a href=&quot;urlfor&quot;&gt;url_for&lt;/a&gt;的文档。</target>
        </trans-unit>
        <trans-unit id="2d526585a5f54a30a8eaef44ad2dcfe222f18618" translate="yes" xml:space="preserve">
          <source>For all other controllers, we use these heuristics to decide whether to render a template, raise an error for a missing template, or respond with &lt;code&gt;204 No Content&lt;/code&gt;:</source>
          <target state="translated">对于所有其他控制器，我们使用这些试探法来决定是渲染模板，为缺少的模板引发错误还是以 &lt;code&gt;204 No Content&lt;/code&gt; 响应：</target>
        </trans-unit>
        <trans-unit id="5f26755f9baea0b86d2c7a04cf2ea08dea99177e" translate="yes" xml:space="preserve">
          <source>For an attacker, of course, this is not useful, as the victim will see their own cookie. The next example will try to load an image from the URL &lt;a href=&quot;http://www.attacker.com/&quot;&gt;http://www.attacker.com/&lt;/a&gt; plus the cookie. Of course this URL does not exist, so the browser displays nothing. But the attacker can review their web server's access log files to see the victim's cookie.</source>
          <target state="translated">对于攻击者来说，这当然没有用，因为受害者会看到自己的cookie。下一个示例将尝试从URL &lt;a href=&quot;http://www.attacker.com/&quot;&gt;http://www.attacker.com/&lt;/a&gt;以及cookie 加载图像。当然，该URL不存在，因此浏览器什么也不显示。但是攻击者可以查看其Web服务器的访问日志文件以查看受害者的cookie。</target>
        </trans-unit>
        <trans-unit id="d5cf0aca39dc93ecd2e542900ba6ef327c3a3185" translate="yes" xml:space="preserve">
          <source>For an input of &lt;code&gt;'application'&lt;/code&gt;, returns &lt;code&gt;[Mime[:html], Mime[:js], Mime[:xml], Mime[:yaml], Mime[:atom],
Mime[:json], Mime[:rss], Mime[:url_encoded_form]&lt;/code&gt;.</source>
          <target state="translated">对于 &lt;code&gt;'application'&lt;/code&gt; 的输入，返回 &lt;code&gt;[Mime[:html], Mime[:js], Mime[:xml], Mime[:yaml], Mime[:atom], Mime[:json], Mime[:rss], Mime[:url_encoded_form]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f619e6e883062cd542c7646212939b88f9d7b987" translate="yes" xml:space="preserve">
          <source>For an input of &lt;code&gt;'text'&lt;/code&gt;, returns &lt;code&gt;[Mime[:json],
Mime[:xml], Mime[:ics], Mime[:html], Mime[:css], Mime[:csv], Mime[:js],
Mime[:yaml], Mime[:text]&lt;/code&gt;.</source>
          <target state="translated">对于 &lt;code&gt;'text'&lt;/code&gt; 的输入，返回 &lt;code&gt;[Mime[:json], Mime[:xml], Mime[:ics], Mime[:html], Mime[:css], Mime[:csv], Mime[:js], Mime[:yaml], Mime[:text]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="082dff27f19a82b3d87be40920fb464199499b2a" translate="yes" xml:space="preserve">
          <source>For any file added with &lt;code&gt;rails encrypted:edit&lt;/code&gt; call &lt;code&gt;read&lt;/code&gt; to decrypt the file with the master key. The master key is either stored in &lt;code&gt;config/master.key&lt;/code&gt; or &lt;code&gt;ENV[&quot;RAILS_MASTER_KEY&quot;]&lt;/code&gt;.</source>
          <target state="translated">对于添加了 &lt;code&gt;rails encrypted:edit&lt;/code&gt; 任何文件：edit调用 &lt;code&gt;read&lt;/code&gt; 以使用主密钥对文件解密。主密钥存储在 &lt;code&gt;config/master.key&lt;/code&gt; 或 &lt;code&gt;ENV[&quot;RAILS_MASTER_KEY&quot;]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="16d26752c642996579bf038d8c203e189752946a" translate="yes" xml:space="preserve">
          <source>For associations to reference one another by name, you can use the fixture name instead of specifying the &lt;code&gt;id:&lt;/code&gt; attribute on the associated fixtures. Rails will auto assign a primary key to be consistent between runs. For more information on this association behavior please read the &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveRecord/FixtureSet.html&quot;&gt;Fixtures API documentation&lt;/a&gt;.</source>
          <target state="translated">要使关联按名称相互引用，可以使用灯具名称，而不是在关联的灯具上指定 &lt;code&gt;id:&lt;/code&gt; 属性。Rails将自动分配一个主键，以使两次运行之间保持一致。有关此关联行为的更多信息，请阅读&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveRecord/FixtureSet.html&quot;&gt;Fixtures API文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1098f27c8ef7ae7912308db5dd97ca40b959116f" translate="yes" xml:space="preserve">
          <source>For backwards compatibility.</source>
          <target state="translated">为了向后兼容。</target>
        </trans-unit>
        <trans-unit id="ec16a42f04f744d11d0a82df5d22d4b3fd300d5d" translate="yes" xml:space="preserve">
          <source>For cases where you may want to connect to a database outside of the model, you can use &lt;code&gt;connected_to&lt;/code&gt; with a &lt;code&gt;database&lt;/code&gt; argument. The &lt;code&gt;database&lt;/code&gt; argument expects a symbol that corresponds to the database key in your config.</source>
          <target state="translated">对于您可能要连接到模型外部的数据库的情况，可以将 &lt;code&gt;connected_to&lt;/code&gt; 与 &lt;code&gt;database&lt;/code&gt; 参数一起使用。该 &lt;code&gt;database&lt;/code&gt; 的参数预计，对应于你的配置数据库密钥的象征。</target>
        </trans-unit>
        <trans-unit id="66a8616d9c6b20605c5f326d3773ea1901499627" translate="yes" xml:space="preserve">
          <source>For collections rendered such:</source>
          <target state="translated">对于这样的收藏:</target>
        </trans-unit>
        <trans-unit id="1ea9d25b8081ac747b2f34d48957ab89bdc7b74e" translate="yes" xml:space="preserve">
          <source>For content that is shared among all pages in your application, you can use partials directly from layouts.</source>
          <target state="translated">对于应用程序中所有页面之间共享的内容,您可以直接从布局中使用partials。</target>
        </trans-unit>
        <trans-unit id="8d38c6436d48efb2171e61e4ad2e08c22898571c" translate="yes" xml:space="preserve">
          <source>For convenience &lt;code&gt;class_attribute&lt;/code&gt; also defines an instance predicate which is the double negation of what the instance reader returns. In the examples above it would be called &lt;code&gt;x?&lt;/code&gt;.</source>
          <target state="translated">为了方便起见， &lt;code&gt;class_attribute&lt;/code&gt; 还定义了一个实例谓词，它是实例读取器返回值的双重否定。在上面的示例中，它将称为 &lt;code&gt;x?&lt;/code&gt; 。。</target>
        </trans-unit>
        <trans-unit id="d3ab28284918f43aedd7e55ecddc2142a68c368e" translate="yes" xml:space="preserve">
          <source>For convenience reasons, mailers provide a shortcut for ActionController::UrlFor#url_for. So within mailers, you only have to type &lt;code&gt;url_for&lt;/code&gt; instead of 'ActionController::UrlFor#url_for' in full. However, mailers don't have hostname information, and you still have to provide the &lt;code&gt;:host&lt;/code&gt; argument or set the default host that will be used in all mailers using the configuration option &lt;code&gt;config.action_mailer.default_url_options&lt;/code&gt;. For more information on &lt;a href=&quot;urlfor#method-i-url_for&quot;&gt;#url_for&lt;/a&gt; in mailers read the ActionMailer#Base documentation.</source>
          <target state="translated">为了方便起见，邮件程序提供了ActionController :: UrlFor＃url_for的快捷方式。因此，在邮件中，您只需键入 &lt;code&gt;url_for&lt;/code&gt; 而不是完整的'ActionController :: UrlFor＃url_for'。但是，邮件程序没有主机名信息，您仍然必须使用配置选项 &lt;code&gt;config.action_mailer.default_url_options&lt;/code&gt; 提供 &lt;code&gt;:host&lt;/code&gt; 参数或设置将在所有邮件程序中使用的默认主机。有关邮件中&lt;a href=&quot;urlfor#method-i-url_for&quot;&gt;#url_for的&lt;/a&gt;更多信息，请阅读ActionMailer＃Base文档。</target>
        </trans-unit>
        <trans-unit id="bd0724c7b15780dba73c5d667fdaee1258b7598b" translate="yes" xml:space="preserve">
          <source>For convenience, an instance predicate method is defined as well. To skip it, pass &lt;code&gt;instance_predicate: false&lt;/code&gt;.</source>
          <target state="translated">为了方便起见，还定义了一个实例谓词方法。要跳过它，请传递 &lt;code&gt;instance_predicate: false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6814ad5f45e05f234d12c7e5f13bb4e74c7f69a3" translate="yes" xml:space="preserve">
          <source>For creating Rails integration tests, we use the &lt;code&gt;test/integration&lt;/code&gt; directory for our application. Rails provides a generator to create an integration test skeleton for us.</source>
          <target state="translated">为了创建Rails集成测试，我们为应用程序使用 &lt;code&gt;test/integration&lt;/code&gt; 目录。Rails为我们提供了一个生成集成测试框架的生成器。</target>
        </trans-unit>
        <trans-unit id="ba11a64102f043ec9929cba436a6e2209917fd9e" translate="yes" xml:space="preserve">
          <source>For creating Rails system tests, you use the &lt;code&gt;test/system&lt;/code&gt; directory in your application. Rails provides a generator to create a system test skeleton for you.</source>
          <target state="translated">要创建Rails系统测试，请在应用程序中使用 &lt;code&gt;test/system&lt;/code&gt; 目录。Rails提供了一个生成器来为您创建系统测试框架。</target>
        </trans-unit>
        <trans-unit id="be092b7fcc3a480411e1c8129b43d20c1d0a0551" translate="yes" xml:space="preserve">
          <source>For dealing with the integration test runner, see &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionDispatch/Integration/Runner.html&quot;&gt;&lt;code&gt;ActionDispatch::Integration::Runner&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">有关处理集成测试运行器的信息，请参见&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionDispatch/Integration/Runner.html&quot;&gt; &lt;code&gt;ActionDispatch::Integration::Runner&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="80c24097fa1d78bb11621d9b5ca806a4e1837ced" translate="yes" xml:space="preserve">
          <source>For details on which formats use which options, see &lt;a href=&quot;numberhelper&quot;&gt;ActiveSupport::NumberHelper&lt;/a&gt;</source>
          <target state="translated">有关哪种格式使用哪些选项的详细信息，请参见&lt;a href=&quot;numberhelper&quot;&gt;ActiveSupport :: NumberHelper&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b00e2b8c47409365d97d4e6f528ec01bcde3521d" translate="yes" xml:space="preserve">
          <source>For each controller there is an associated directory in the &lt;code&gt;app/views&lt;/code&gt; directory which holds the template files that make up the views associated with that controller. These files are used to display the view that results from each controller action.</source>
          <target state="translated">对于每个控制器，在 &lt;code&gt;app/views&lt;/code&gt; 目录中都有一个关联的目录，其中包含构成与该控制器关联的视图的模板文件。这些文件用于显示每个控制器动作产生的视图。</target>
        </trans-unit>
        <trans-unit id="2cecb5f25de0d043523d188ca061eb02e3555352" translate="yes" xml:space="preserve">
          <source>For each hash that does &lt;em&gt;not&lt;/em&gt; have an &lt;code&gt;id&lt;/code&gt; key a new record will be instantiated, unless the hash also contains a &lt;code&gt;_destroy&lt;/code&gt; key that evaluates to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">对于已将每个哈希&lt;em&gt;不是&lt;/em&gt;有一个 &lt;code&gt;id&lt;/code&gt; 键的新记录将被实例化，除非散列还包含 &lt;code&gt;_destroy&lt;/code&gt; 关键计算结果为 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6f2d6a6cfdf650d1f7334b2020902fa0a4e0153a" translate="yes" xml:space="preserve">
          <source>For ease of comparison the examples above left out the submit button, as well as the auto generated hidden fields that enable UTF-8 support and adds an authenticity token needed for cross site request forgery protection.</source>
          <target state="translated">为了方便比较,上面的例子中没有提交按钮,以及自动生成的隐藏字段,启用UTF-8支持,并增加了跨站点请求防伪所需的真实性标记。</target>
        </trans-unit>
        <trans-unit id="7a0f62db19f30623c30bc4c5827412523d0b10d8" translate="yes" xml:space="preserve">
          <source>For enqueuing and executing jobs in production you need to set up a queuing backend, that is to say you need to decide for a 3rd-party queuing library that Rails should use. Rails itself only provides an in-process queuing system, which only keeps the jobs in RAM. If the process crashes or the machine is reset, then all outstanding jobs are lost with the default async backend. This may be fine for smaller apps or non-critical jobs, but most production apps will need to pick a persistent backend.</source>
          <target state="translated">为了在生产中实现作业的enqueuing和执行,你需要建立一个排队后端,也就是说你需要决定Rails应该使用的第三方排队库。Rails本身只提供了一个进程内排队系统,它只将作业保存在RAM中。如果进程崩溃或者机器被重置,那么所有未完成的作业都会在默认的async后台丢失。这对于较小的应用或非关键性作业来说可能没有问题,但大多数生产应用将需要选择一个持久的后端。</target>
        </trans-unit>
        <trans-unit id="eb9a20b3c2af7b1f9af89bbaaaf814a196aae626" translate="yes" xml:space="preserve">
          <source>For every WebSocket connection the Action Cable server accepts, a Connection object will be instantiated. This instance becomes the parent of all of the channel subscriptions that are created from there on. Incoming messages are then routed to these channel subscriptions based on an identifier sent by the Action Cable consumer. The Connection itself does not deal with any specific application logic beyond authentication and authorization.</source>
          <target state="translated">对于 Action Cable 服务器接受的每个 WebSocket 连接,将实例化一个 Connection 对象。这个实例将成为所有从那里开始创建的频道订阅的父对象。然后,传入的消息会根据 Action Cable 消费者发送的标识符被路由到这些频道订阅。除了认证和授权之外,连接本身并不处理任何具体的应用逻辑。</target>
        </trans-unit>
        <trans-unit id="b53bd9e5262d08ab39415e772674388f395185ec" translate="yes" xml:space="preserve">
          <source>For every field (also known as an attribute) you define in your table, Active Record provides a finder method. If you have a field called &lt;code&gt;first_name&lt;/code&gt; on your &lt;code&gt;Client&lt;/code&gt; model for example, you get &lt;code&gt;find_by_first_name&lt;/code&gt; for free from Active Record. If you have a &lt;code&gt;locked&lt;/code&gt; field on the &lt;code&gt;Client&lt;/code&gt; model, you also get &lt;code&gt;find_by_locked&lt;/code&gt; method.</source>
          <target state="translated">对于您在表中定义的每个字段（也称为属性），Active Record提供了一种查找方法。例如，如果您的 &lt;code&gt;Client&lt;/code&gt; 模型上有一个名为 &lt;code&gt;first_name&lt;/code&gt; 的字段，则可以从Active Record免费获得 &lt;code&gt;find_by_first_name&lt;/code&gt; 。如果在 &lt;code&gt;Client&lt;/code&gt; 模型上有一个 &lt;code&gt;locked&lt;/code&gt; 字段，则还将获得 &lt;code&gt;find_by_locked&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="72f825998b8ea48ba6e57af6666f388f344c45f1" translate="yes" xml:space="preserve">
          <source>For every form input, an ID attribute is generated from its name (&lt;code&gt;&quot;q&quot;&lt;/code&gt; in above example). These IDs can be very useful for CSS styling or manipulation of form controls with JavaScript.</source>
          <target state="translated">对于每个表单输入，都会从其名称（在上面的示例中为 &lt;code&gt;&quot;q&quot;&lt;/code&gt; ）生成一个ID属性。这些ID对于CSS样式或使用JavaScript操纵表单控件非常有用。</target>
        </trans-unit>
        <trans-unit id="3f1bb2d1fc0e73d106dce92978cc0b789edcdc81" translate="yes" xml:space="preserve">
          <source>For every instance of your server you create and for every worker your server spawns, you will also have a new instance of Action Cable, but the use of Redis keeps messages synced across connections.</source>
          <target state="translated">对于你创建的每一个服务器实例,以及你的服务器产生的每一个worker,你也会有一个新的Action Cable实例,但是使用Redis可以保持消息在不同的连接中同步。</target>
        </trans-unit>
        <trans-unit id="b131d46a980c58a828cd718fe23664c9b290464e" translate="yes" xml:space="preserve">
          <source>For every request, the router determines the value of the &lt;code&gt;controller&lt;/code&gt; and &lt;code&gt;action&lt;/code&gt; keys. These determine which controller and action are called. The remaining request parameters, the session (if one is available), and the full request with all the HTTP headers are made available to the action through accessor methods. Then the action is performed.</source>
          <target state="translated">对于每个请求，路由器都会确定 &lt;code&gt;controller&lt;/code&gt; 和 &lt;code&gt;action&lt;/code&gt; 键的值。这些决定了调用哪个控制器和动作。其余的请求参数，会话（如果有的话）和带有所有HTTP标头的完整请求可通过访问器方法提供给操作。然后执行该动作。</target>
        </trans-unit>
        <trans-unit id="7a9ee99a2d46a1ade9d8c8f3457e7e52a88dc82b" translate="yes" xml:space="preserve">
          <source>For every single method defined as a core extension this guide has a note that says where such a method is defined. In the case of &lt;code&gt;blank?&lt;/code&gt; the note reads:</source>
          <target state="translated">对于定义为核心扩展的每个方法，本指南都有一条注释，其中说明了定义此方法的位置。在 &lt;code&gt;blank?&lt;/code&gt; 的情况下？注释显示为：</target>
        </trans-unit>
        <trans-unit id="06b2288ca9dc28befebd61b3de5c073f19acb9b6" translate="yes" xml:space="preserve">
          <source>For example &lt;code&gt;ActionMailer::Base&lt;/code&gt; defines:</source>
          <target state="translated">例如， &lt;code&gt;ActionMailer::Base&lt;/code&gt; 定义：</target>
        </trans-unit>
        <trans-unit id="524bf3ca9dadf5f247a4e2dc9bdde0724ffacf98" translate="yes" xml:space="preserve">
          <source>For example &lt;code&gt;nil&lt;/code&gt;, &lt;code&gt;true&lt;/code&gt;, and &lt;code&gt;false&lt;/code&gt; return themselves. &lt;code&gt;Array#to_param&lt;/code&gt; calls &lt;code&gt;to_param&lt;/code&gt; on the elements and joins the result with &quot;/&quot;:</source>
          <target state="translated">例如 &lt;code&gt;nil&lt;/code&gt; ， &lt;code&gt;true&lt;/code&gt; 和 &lt;code&gt;false&lt;/code&gt; 返回自己。 &lt;code&gt;Array#to_param&lt;/code&gt; 在元素上调用 &lt;code&gt;to_param&lt;/code&gt; 并将结果与​​&amp;ldquo; /&amp;rdquo;连接：</target>
        </trans-unit>
        <trans-unit id="c413fbbe5dd9cd3a858b2b4096dbe032a4a77e73" translate="yes" xml:space="preserve">
          <source>For example a Ruby Hash providing translations can look like this:</source>
          <target state="translated">例如,一个提供翻译的Ruby Hash可以是这样的。</target>
        </trans-unit>
        <trans-unit id="170196ddc4d09ce4cda34f4c4c5ee56ae2abcd1a" translate="yes" xml:space="preserve">
          <source>For example by overwriting the &lt;code&gt;source_paths&lt;/code&gt; method to contain the location of your template. Now methods like &lt;code&gt;copy_file&lt;/code&gt; will accept relative paths to your template's location.</source>
          <target state="translated">例如，通过覆盖 &lt;code&gt;source_paths&lt;/code&gt; 方法以包含模板的位置。现在，诸如 &lt;code&gt;copy_file&lt;/code&gt; 之类的方法将接受模板位置的相对路径。</target>
        </trans-unit>
        <trans-unit id="de3e0784f50a9883d2ee2bc8d15f7c79df866699" translate="yes" xml:space="preserve">
          <source>For example if the response contains two ordered lists, each with four nested list elements then the following tests will both pass.</source>
          <target state="translated">例如,如果响应包含两个有序的列表,每个列表有四个嵌套的列表元素,那么以下测试都会通过。</target>
        </trans-unit>
        <trans-unit id="8f20c4dda23afb7d89aae13ee9bf300fad784d5b" translate="yes" xml:space="preserve">
          <source>For example in</source>
          <target state="translated">例如,在</target>
        </trans-unit>
        <trans-unit id="1b9c7d94226539f8fd01b1ea618c55e3afbb516c" translate="yes" xml:space="preserve">
          <source>For example it might be worth running your tests with an identical setup to production (&lt;code&gt;config.eager_load = true&lt;/code&gt;, &lt;code&gt;config.cache_classes = true&lt;/code&gt;) in order to catch any problems before they hit production (this is compensation for the lack of dev-prod parity). However this will slow down the boot time for individual tests on a dev machine (and is not immediately compatible with spring see below). So one possibility is to do this on a &lt;a href=&quot;https://en.wikipedia.org/wiki/Continuous_integration&quot;&gt;CI&lt;/a&gt; machine only (which should run without spring).</source>
          <target state="translated">例如，可能有必要使用与生产相同的设置来运行测试（ &lt;code&gt;config.eager_load = true&lt;/code&gt; ， &lt;code&gt;config.cache_classes = true&lt;/code&gt; ），以便在生产遇到任何问题之前就发现问题（这是对缺乏dev-prod奇偶校验的补偿） ）。但是，这将减慢开发机上单个测试的启动时间（并且与Spring不能立即兼容，请参见下文）。因此，一种可能性是仅在&lt;a href=&quot;https://en.wikipedia.org/wiki/Continuous_integration&quot;&gt;CI&lt;/a&gt;机器上执行此操作（CI机器应无弹簧运行）。</target>
        </trans-unit>
        <trans-unit id="defc1940a4dd0193e647323988081968494c879e" translate="yes" xml:space="preserve">
          <source>For example the &lt;code&gt;animals&lt;/code&gt; database would look in the &lt;code&gt;db/animals_migrate&lt;/code&gt; directory and &lt;code&gt;primary&lt;/code&gt; would look in &lt;code&gt;db/migrate&lt;/code&gt;. Rails generators now take a &lt;code&gt;--database&lt;/code&gt; option so that the file is generated in the correct directory. The command can be run like so:</source>
          <target state="translated">例如， &lt;code&gt;animals&lt;/code&gt; 数据库将在 &lt;code&gt;db/animals_migrate&lt;/code&gt; 目录中查找，而 &lt;code&gt;primary&lt;/code&gt; &lt;code&gt;db/migrate&lt;/code&gt; 将在db / migrate目录中查找。Rails生成器现在带有 &lt;code&gt;--database&lt;/code&gt; 选项，以便在正确的目录中生成文件。该命令可以这样运行：</target>
        </trans-unit>
        <trans-unit id="4164d6bdf84d42ceee89df70e0b8125f8655ce78" translate="yes" xml:space="preserve">
          <source>For example this:</source>
          <target state="translated">比如这个。</target>
        </trans-unit>
        <trans-unit id="1f34fa7be257762cd81671d8c28f862d285ae2b1" translate="yes" xml:space="preserve">
          <source>For example when you add the following translations:</source>
          <target state="translated">例如当你添加以下翻译时。</target>
        </trans-unit>
        <trans-unit id="bbdd64b6edc3015b0feb8ab4bbd89640d7033a07" translate="yes" xml:space="preserve">
          <source>For example you can define the following in your locale (e.g. en.yml).</source>
          <target state="translated">例如,你可以在你的locale中定义以下内容(例如:en.yml)。</target>
        </trans-unit>
        <trans-unit id="f60c607e3474a7900b265d55fcc3418a0e547bdd" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;Post.all&lt;/code&gt; may return Comments, Messages, and Emails by storing the record's subclass in a &lt;code&gt;type&lt;/code&gt; attribute. By calling &lt;code&gt;instantiate&lt;/code&gt; instead of &lt;code&gt;new&lt;/code&gt;, finder methods ensure they get new instances of the appropriate class for each record.</source>
          <target state="translated">例如， &lt;code&gt;Post.all&lt;/code&gt; 可以通过将记录的子类存储在 &lt;code&gt;type&lt;/code&gt; 属性中来返回评论，消息和电子邮件。通过调用 &lt;code&gt;instantiate&lt;/code&gt; 而不是 &lt;code&gt;new&lt;/code&gt; ，查找器方法确保它们为每个记录获取适当类的新实例。</target>
        </trans-unit>
        <trans-unit id="eaf66d1a44d2101e495b85580babbc259bf80ce4" translate="yes" xml:space="preserve">
          <source>For example, Action Pack uses this method to load the class that provides a certain session store:</source>
          <target state="translated">例如,Action Pack使用这个方法来加载提供某个会话存储的类。</target>
        </trans-unit>
        <trans-unit id="6154e45261d0b097d4040e06da7bb873708d6ed7" translate="yes" xml:space="preserve">
          <source>For example, Action Pack uses this method to write asset cache files like &lt;code&gt;all.css&lt;/code&gt;:</source>
          <target state="translated">例如，Action Pack使用此方法来编写资产缓存文件，例如 &lt;code&gt;all.css&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="27f7d44904c062a7f688e153aa6aa342262647e5" translate="yes" xml:space="preserve">
          <source>For example, MemCacheStore's &lt;a href=&quot;store#method-i-write&quot;&gt;write&lt;/a&gt; method supports the &lt;code&gt;:raw&lt;/code&gt; option, which tells the memcached server to store all values as strings. We can use this option with &lt;a href=&quot;store#method-i-fetch&quot;&gt;fetch&lt;/a&gt; too:</source>
          <target state="translated">例如，MemCacheStore的&lt;a href=&quot;store#method-i-write&quot;&gt;write&lt;/a&gt;方法支持 &lt;code&gt;:raw&lt;/code&gt; 选项，该选项告诉memcached服务器将所有值存储为字符串。我们也可以在&lt;a href=&quot;store#method-i-fetch&quot;&gt;获取时&lt;/a&gt;使用此选项：</target>
        </trans-unit>
        <trans-unit id="3d3d5d287bffd32896b1c0eaa3c12bd6d88e384f" translate="yes" xml:space="preserve">
          <source>For example, RedCloth translates &lt;code&gt;_test_&lt;/code&gt; to &amp;lt;em&amp;gt;test&amp;lt;em&amp;gt;, which makes the text italic. However, up to the current version 3.0.4, it is still vulnerable to XSS. Get the &lt;a href=&quot;http://www.redcloth.org&quot;&gt;all-new version 4&lt;/a&gt; that removed serious bugs. However, even that version has &lt;a href=&quot;http://www.rorsecurity.info/journal/2008/10/13/new-redcloth-security.html&quot;&gt;some security bugs&lt;/a&gt;, so the countermeasures still apply. Here is an example for version 3.0.4:</source>
          <target state="translated">例如，RedCloth将 &lt;code&gt;_test_&lt;/code&gt; 转换为&amp;lt;em&amp;gt; test &amp;lt;em&amp;gt;，这会使文本变为斜体。但是，直到当前版本3.0.4，它仍然容易受到XSS的攻击。获取删除严重错误&lt;a href=&quot;http://www.redcloth.org&quot;&gt;的全新版本4&lt;/a&gt;。但是，即使该版本也存在&lt;a href=&quot;http://www.rorsecurity.info/journal/2008/10/13/new-redcloth-security.html&quot;&gt;一些安全漏洞&lt;/a&gt;，因此对策仍然适用。这是版本3.0.4的示例：</target>
        </trans-unit>
        <trans-unit id="b12eec00a4e2551721df22edd14a78ffe57682d1" translate="yes" xml:space="preserve">
          <source>For example, Twitter uses its &lt;a href=&quot;https://developer.twitter.com/&quot;&gt;public API&lt;/a&gt; in its web application, which is built as a static site that consumes JSON resources.</source>
          <target state="translated">例如，Twitter 在其Web应用程序中使用其&lt;a href=&quot;https://developer.twitter.com/&quot;&gt;公共API&lt;/a&gt;，该Web应用程序被构建为消耗JSON资源的静态站点。</target>
        </trans-unit>
        <trans-unit id="53c9a73f0a024ecacf20e02eb9ca2d972148c7dc" translate="yes" xml:space="preserve">
          <source>For example, a controller would use it like this:</source>
          <target state="translated">例如,一个控制器会这样使用。</target>
        </trans-unit>
        <trans-unit id="f36807628302cb7f63d61ec9b00c720c3a66328e" translate="yes" xml:space="preserve">
          <source>For example, an Active Record User with the &lt;code&gt;name&lt;/code&gt; attribute has a &lt;code&gt;name?&lt;/code&gt; method that you can call to determine whether the user has a name:</source>
          <target state="translated">例如，具有 &lt;code&gt;name&lt;/code&gt; 属性的活动记录用户具有 &lt;code&gt;name?&lt;/code&gt; 您可以调用以确定用户是否具有名称的方法：</target>
        </trans-unit>
        <trans-unit id="cd8ddc78651c1fe92b18ef46e19aa0d7820ac326" translate="yes" xml:space="preserve">
          <source>For example, an extension doing any of the following would need a railtie:</source>
          <target state="translated">例如,做以下任何一项的扩展都需要一个Railtie。</target>
        </trans-unit>
        <trans-unit id="71ecf83b433a16d76fdbf6a525918a0408c7f7a4" translate="yes" xml:space="preserve">
          <source>For example, assuming &lt;code&gt;User&lt;/code&gt; is not yet loaded, the following will deadlock:</source>
          <target state="translated">例如，假设尚未加载 &lt;code&gt;User&lt;/code&gt; ，则以下内容将死锁：</target>
        </trans-unit>
        <trans-unit id="e6d6e2ba2b5ca72099050bc51954934eb60bffb4" translate="yes" xml:space="preserve">
          <source>For example, consider</source>
          <target state="translated">例如,考虑</target>
        </trans-unit>
        <trans-unit id="5720879c0c094489b8e07786876daa4b930a6b9c" translate="yes" xml:space="preserve">
          <source>For example, consider the following &lt;code&gt;Category&lt;/code&gt;, &lt;code&gt;Article&lt;/code&gt;, &lt;code&gt;Comment&lt;/code&gt;, &lt;code&gt;Guest&lt;/code&gt; and &lt;code&gt;Tag&lt;/code&gt; models:</source>
          <target state="translated">例如，考虑以下 &lt;code&gt;Category&lt;/code&gt; ， &lt;code&gt;Article&lt;/code&gt; ， &lt;code&gt;Comment&lt;/code&gt; ， &lt;code&gt;Guest&lt;/code&gt; 和 &lt;code&gt;Tag&lt;/code&gt; 模型：</target>
        </trans-unit>
        <trans-unit id="5abbc53eb87a910fb8d7fa5fdf0d4aca34fda66f" translate="yes" xml:space="preserve">
          <source>For example, consider the following model declarations:</source>
          <target state="translated">例如,考虑以下模型声明。</target>
        </trans-unit>
        <trans-unit id="44c06d067e94e94d58cc740894d6023d5a1b6889" translate="yes" xml:space="preserve">
          <source>For example, consider the following situation:</source>
          <target state="translated">例如,考虑以下情况。</target>
        </trans-unit>
        <trans-unit id="2a73be60895a600be896f0c57ef39e8b845fc9df" translate="yes" xml:space="preserve">
          <source>For example, given</source>
          <target state="translated">例如,给定</target>
        </trans-unit>
        <trans-unit id="3f70c84ca388e65cf93ecde1b7ce6555b37b8c51" translate="yes" xml:space="preserve">
          <source>For example, given a form builder:</source>
          <target state="translated">例如,给定一个表单构建器。</target>
        </trans-unit>
        <trans-unit id="5d702ce4ea2a9355c7a77e5b441c13b923ca4449" translate="yes" xml:space="preserve">
          <source>For example, given a model &lt;code&gt;User&lt;/code&gt; with attributes of &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;occupation&lt;/code&gt;, the &lt;code&gt;create&lt;/code&gt; method call will create and save a new record into the database:</source>
          <target state="translated">例如，给定一个具有 &lt;code&gt;name&lt;/code&gt; 和 &lt;code&gt;occupation&lt;/code&gt; 属性的 &lt;code&gt;User&lt;/code&gt; 模型， &lt;code&gt;create&lt;/code&gt; 方法调用将创建一个新记录并将其保存到数据库中：</target>
        </trans-unit>
        <trans-unit id="34bf18f557c03a50fd99ecfb17e5272886b2287f" translate="yes" xml:space="preserve">
          <source>For example, given we have a &lt;code&gt;users&lt;/code&gt; table with &lt;code&gt;guid&lt;/code&gt; as the primary key. If we want a separate &lt;code&gt;todos&lt;/code&gt; table to hold the foreign key &lt;code&gt;user_id&lt;/code&gt; in the &lt;code&gt;guid&lt;/code&gt; column, then we can use &lt;code&gt;primary_key&lt;/code&gt; to achieve this like so:</source>
          <target state="translated">例如，假设我们有一个 &lt;code&gt;users&lt;/code&gt; 表，其中 &lt;code&gt;guid&lt;/code&gt; 为主键。如果我们想要一个单独的 &lt;code&gt;todos&lt;/code&gt; 表在 &lt;code&gt;guid&lt;/code&gt; 列中保存外键 &lt;code&gt;user_id&lt;/code&gt; ，则可以使用 &lt;code&gt;primary_key&lt;/code&gt; 来实现此目的，如下所示：</target>
        </trans-unit>
        <trans-unit id="22c7c440681326a44ffce536da1a198f33839b8a" translate="yes" xml:space="preserve">
          <source>For example, here's a pattern of creating notifications when new comments are posted. (The notification may in turn trigger an email, a push notification, or just appear in the UI somewhere):</source>
          <target state="translated">例如,这里有一个在新评论发布时创建通知的模式。该通知可能反过来触发电子邮件、推送通知,或者只是出现在UI的某个地方)。</target>
        </trans-unit>
        <trans-unit id="8e1aca8cba6f8183d74233f15b01caf147dec177" translate="yes" xml:space="preserve">
          <source>For example, here's a small section of the &lt;code&gt;rails routes&lt;/code&gt; output for a RESTful route:</source>
          <target state="translated">例如，这是RESTful路线的 &lt;code&gt;rails routes&lt;/code&gt; 输出的一小部分：</target>
        </trans-unit>
        <trans-unit id="7f94503578c2fbc3b86e869fc30148b6a6329e29" translate="yes" xml:space="preserve">
          <source>For example, here's some code that will trigger this error:</source>
          <target state="translated">例如,这里有一些代码会触发这个错误。</target>
        </trans-unit>
        <trans-unit id="bf5d03ceef19f28d80efa1487f18c1a8d026069c" translate="yes" xml:space="preserve">
          <source>For example, if &lt;code&gt;UsersHelper&lt;/code&gt; is implemented in &lt;code&gt;app/helpers/users_helper.rb&lt;/code&gt;, the module is autoloadable, you do not need (and should not write) a &lt;code&gt;require&lt;/code&gt; call for it:</source>
          <target state="translated">例如，如果 &lt;code&gt;UsersHelper&lt;/code&gt; 中实现的 &lt;code&gt;app/helpers/users_helper.rb&lt;/code&gt; ，该模块是autoloadable，你不需要（也不应该写）一个 &lt;code&gt;require&lt;/code&gt; 调用它：</target>
        </trans-unit>
        <trans-unit id="b375441949d8cc18b809e9a7067ce453aaacc656" translate="yes" xml:space="preserve">
          <source>For example, if an initializer stores and caches a certain class object</source>
          <target state="translated">例如,如果一个初始化器存储并缓存某个类对象</target>
        </trans-unit>
        <trans-unit id="f0d467439f1634faea77923c6458790d1b88215b" translate="yes" xml:space="preserve">
          <source>For example, if the following templates exist:</source>
          <target state="translated">例如,如果存在以下模板:</target>
        </trans-unit>
        <trans-unit id="b153b66cd2b084d8e0224d5dde74d748867621b7" translate="yes" xml:space="preserve">
          <source>For example, if the user invoke the controller generator as:</source>
          <target state="translated">例如,如果用户调用控制器生成器为。</target>
        </trans-unit>
        <trans-unit id="c390bd482a93ce5733a8ce30310b3833619189c6" translate="yes" xml:space="preserve">
          <source>For example, if this code triggers autoloading</source>
          <target state="translated">例如,如果这段代码触发了自动加载程序</target>
        </trans-unit>
        <trans-unit id="9ac1d7c152b8b5872b72d15664fe6ebda91004f8" translate="yes" xml:space="preserve">
          <source>For example, if we have a &lt;code&gt;User&lt;/code&gt; model with &lt;code&gt;category_ids&lt;/code&gt; field and we have the following code in our update action:</source>
          <target state="translated">例如，如果我们有一个带 &lt;code&gt;category_ids&lt;/code&gt; 字段的 &lt;code&gt;User&lt;/code&gt; 模型，并且在更新操作中有以下代码：</target>
        </trans-unit>
        <trans-unit id="9527832e1e9fcfe3bb90b44513273f467f05cf86" translate="yes" xml:space="preserve">
          <source>For example, if you generate a &lt;code&gt;ProjectsController&lt;/code&gt;, Rails will also add a new file at &lt;code&gt;app/assets/stylesheets/projects.scss&lt;/code&gt;. By default these files will be ready to use by your application immediately using the &lt;code&gt;require_tree&lt;/code&gt; directive. See &lt;a href=&quot;#manifest-files-and-directives&quot;&gt;Manifest Files and Directives&lt;/a&gt; for more details on require_tree.</source>
          <target state="translated">例如，如果生成一个 &lt;code&gt;ProjectsController&lt;/code&gt; ，Rails还将在 &lt;code&gt;app/assets/stylesheets/projects.scss&lt;/code&gt; 中添加一个新文件。默认情况下，这些文件将可以通过 &lt;code&gt;require_tree&lt;/code&gt; 指令立即由您的应用程序使用。有关require_tree的更多详细信息，请参见&lt;a href=&quot;#manifest-files-and-directives&quot;&gt;清单文件和指令&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2e3de426c9f417afe3d71314ad675f3b5749bf7b" translate="yes" xml:space="preserve">
          <source>For example, if you have a jQuery library with many modules, which is stored in &lt;code&gt;lib/assets/javascripts/library_name&lt;/code&gt;, the file &lt;code&gt;lib/assets/javascripts/library_name/index.js&lt;/code&gt; serves as the manifest for all files in this library. This file could include a list of all the required files in order, or a simple &lt;code&gt;require_tree&lt;/code&gt; directive.</source>
          <target state="translated">例如，如果您有一个包含许多模块的jQuery库，该库存储在 &lt;code&gt;lib/assets/javascripts/library_name&lt;/code&gt; 中，则文件 &lt;code&gt;lib/assets/javascripts/library_name/index.js&lt;/code&gt; 用作该库中所有文件的清单。该文件可以按顺序包括所有必需文件的列表，也可以包括简单的 &lt;code&gt;require_tree&lt;/code&gt; 指令。</target>
        </trans-unit>
        <trans-unit id="e6ddeb14e2a35362bc4455266673f721c7a9ab04" translate="yes" xml:space="preserve">
          <source>For example, if you need to source a gem from &lt;code&gt;&quot;http://gems.github.com&quot;&lt;/code&gt;:</source>
          <target state="translated">例如，如果您需要从 &lt;code&gt;&quot;http://gems.github.com&quot;&lt;/code&gt; 宝石：</target>
        </trans-unit>
        <trans-unit id="6659ed58a0e23d309c2880738533927eaf158f0e" translate="yes" xml:space="preserve">
          <source>For example, if you want to find a collection of the dates on which orders were created:</source>
          <target state="translated">例如,如果你想找到一个订单创建日期的集合。</target>
        </trans-unit>
        <trans-unit id="9a671054948cc7afeffc8e29a1070a79e25d5ddf" translate="yes" xml:space="preserve">
          <source>For example, if you want to load &lt;code&gt;rspec-rails&lt;/code&gt; only in the &lt;code&gt;development&lt;/code&gt; and &lt;code&gt;test&lt;/code&gt; groups:</source>
          <target state="translated">例如，如果您只想在 &lt;code&gt;development&lt;/code&gt; 和 &lt;code&gt;test&lt;/code&gt; 组中加载 &lt;code&gt;rspec-rails&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="f7dd3a783227cfeb7097ea5857fe80f176b221fe" translate="yes" xml:space="preserve">
          <source>For example, if you wanted to cache each product on a page, you could use this code:</source>
          <target state="translated">例如,如果你想缓存一个页面上的每个产品,你可以使用这个代码。</target>
        </trans-unit>
        <trans-unit id="5d8f0559e6fd22508415f77cad6b8ee5d7057fed" translate="yes" xml:space="preserve">
          <source>For example, if you're getting a set of records and want to order them in ascending order by the &lt;code&gt;created_at&lt;/code&gt; field in your table:</source>
          <target state="translated">例如，如果要获取一组记录，并希望通过表中的 &lt;code&gt;created_at&lt;/code&gt; 字段以升序对它们进行排序：</target>
        </trans-unit>
        <trans-unit id="1a3f9cf891059c22ed145464705ba954596ae85f" translate="yes" xml:space="preserve">
          <source>For example, if you're in a console session and edit some file behind the scenes, the code can be reloaded with the &lt;code&gt;reload!&lt;/code&gt; command:</source>
          <target state="translated">例如，如果您在控制台会话中并在后台编辑一些文件，则可以通过重新 &lt;code&gt;reload!&lt;/code&gt; 来重新加载代码！命令：</target>
        </trans-unit>
        <trans-unit id="782fec9b21b7646dda3d0eb34ec8b2d6162d8ebb" translate="yes" xml:space="preserve">
          <source>For example, if your application depends on the gems &lt;code&gt;bj&lt;/code&gt; and &lt;code&gt;nokogiri&lt;/code&gt;:</source>
          <target state="translated">例如，如果您的应用程序依赖于宝石 &lt;code&gt;bj&lt;/code&gt; 和 &lt;code&gt;nokogiri&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="7169085c220c519e1edea4ed09c8fa931b19c7ce" translate="yes" xml:space="preserve">
          <source>For example, imagine a loop iterating over each person in &lt;code&gt;@project.people&lt;/code&gt; to generate an input tag:</source>
          <target state="translated">例如，假设有一个循环遍历 &lt;code&gt;@project.people&lt;/code&gt; 每个人以生成输入标签的循环：</target>
        </trans-unit>
        <trans-unit id="efcfb301607d26518c50a702c119e7c9a0df3c39" translate="yes" xml:space="preserve">
          <source>For example, in a controller:</source>
          <target state="translated">例如,在一个控制器中。</target>
        </trans-unit>
        <trans-unit id="f8cbf57c9587f427c012838696f67e39dc0f8fc0" translate="yes" xml:space="preserve">
          <source>For example, in a website where changes have an approval workflow an administrator could be able to preview them easily, just apply them within a transaction:</source>
          <target state="translated">例如,在一个有审批工作流的网站中,管理员可以很容易地预览它们,只需在事务中应用它们。</target>
        </trans-unit>
        <trans-unit id="e951031c44cba831fe22b1d299a3dbdd271956ba" translate="yes" xml:space="preserve">
          <source>For example, in the previous situation</source>
          <target state="translated">例如,在以前的情况下</target>
        </trans-unit>
        <trans-unit id="36d128602c2cef23c043bbcd4130bfdbe9dfb553" translate="yes" xml:space="preserve">
          <source>For example, in the resource generator, the controller should be invoked with a pluralized class name. But by default it is invoked with the same name as the resource generator, which is singular. To change this, we can give a block to customize how the controller can be invoked.</source>
          <target state="translated">例如,在资源生成器中,控制器应该用复数的类名来调用。但默认情况下,它的调用名称和资源生成器一样,是单数。为了改变这种情况,我们可以给出一个块来自定义控制器的调用方式。</target>
        </trans-unit>
        <trans-unit id="e8571fb001c03edee3f9a1dff5eb161b62067de8" translate="yes" xml:space="preserve">
          <source>For example, instead of:</source>
          <target state="translated">例如,代替:</target>
        </trans-unit>
        <trans-unit id="88b214eaacb21e54b79699baf45df9ed09ba848e" translate="yes" xml:space="preserve">
          <source>For example, let's say we have a standard application layout, but also a special page that requires certain JavaScript that the rest of the site doesn't need. We can use &lt;code&gt;content_for&lt;/code&gt; to include this JavaScript on our special page without fattening up the rest of the site.</source>
          <target state="translated">例如，假设我们有一个标准的应用程序布局，但还有一个特殊的页面，该页面需要某些JavaScript，而网站的其余部分则不需要。我们可以使用 &lt;code&gt;content_for&lt;/code&gt; 在我们的特殊页面上包含此JavaScript，而无需增加网站的其余部分。</target>
        </trans-unit>
        <trans-unit id="4a9881d30ebc25cc189703f067fb870c32f67e33" translate="yes" xml:space="preserve">
          <source>For example, let's suppose you want to place your controllers in &lt;code&gt;lib/controllers&lt;/code&gt;. You can set that as an option:</source>
          <target state="translated">例如，假设您要将控制器放置在 &lt;code&gt;lib/controllers&lt;/code&gt; 中。您可以将其设置为一个选项：</target>
        </trans-unit>
        <trans-unit id="bbedede484566197089ec444807b7fef28561224" translate="yes" xml:space="preserve">
          <source>For example, shoulda is considered a test_framework and is an extension of test_unit. However, most part of shoulda generators are similar to test_unit ones.</source>
          <target state="translated">例如,shoulda被认为是一个test_framework,是test_unit的扩展。然而,大部分的shoulda生成器和test_unit生成器是相似的。</target>
        </trans-unit>
        <trans-unit id="010460143995bd631fd29219aa3815c4c396ec21" translate="yes" xml:space="preserve">
          <source>For example, something like</source>
          <target state="translated">例如,像</target>
        </trans-unit>
        <trans-unit id="78a3ab5bfacf66d125db92261ba899909863fec8" translate="yes" xml:space="preserve">
          <source>For example, suppose that you have 5 models, with the following hierarchy:</source>
          <target state="translated">例如,假设你有5个模型,其层次结构如下。</target>
        </trans-unit>
        <trans-unit id="6bbfc9324e0a230cb4f88f2e8997c7d8401ca77a" translate="yes" xml:space="preserve">
          <source>For example, suppose that you have a User model, and that you have a &lt;code&gt;resources :users&lt;/code&gt; route. Normally, &lt;code&gt;user_path&lt;/code&gt; will construct a path with the user object's 'id' in it:</source>
          <target state="translated">例如，假设您有一个用户模型，并且有一个 &lt;code&gt;resources :users&lt;/code&gt; 路由。通常， &lt;code&gt;user_path&lt;/code&gt; 会在其中构建带有用户对象的&amp;ldquo; id&amp;rdquo;的路径：</target>
        </trans-unit>
        <trans-unit id="68db63f6b91bd3f69689a588ca99fef570cbdc01" translate="yes" xml:space="preserve">
          <source>For example, suppose you have an &lt;code&gt;ArticlesController&lt;/code&gt; with a show action. By default, calling this action will render &lt;code&gt;app/views/articles/show.html.erb&lt;/code&gt;. But if you set &lt;code&gt;I18n.locale = :de&lt;/code&gt;, then &lt;code&gt;app/views/articles/show.de.html.erb&lt;/code&gt; will be rendered instead. If the localized template isn't present, the undecorated version will be used. This means you're not required to provide localized views for all cases, but they will be preferred and used if available.</source>
          <target state="translated">例如，假设您有一个带有show动作的 &lt;code&gt;ArticlesController&lt;/code&gt; 。默认情况下，调用此操作将呈现 &lt;code&gt;app/views/articles/show.html.erb&lt;/code&gt; 。但是，如果设置 &lt;code&gt;I18n.locale = :de&lt;/code&gt; ，则将呈现 &lt;code&gt;app/views/articles/show.de.html.erb&lt;/code&gt; 。如果本地化模板不存在，将使用未修饰的版本。这意味着您不需要为所有情况都提供本地化视图，但是如果可能的话，将首选使用它们。</target>
        </trans-unit>
        <trans-unit id="c12e578c04af498b50aad3f4930bbd0596b6b9e9" translate="yes" xml:space="preserve">
          <source>For example, suppose your application has a &lt;code&gt;Message&lt;/code&gt; model. If you want each message to have many images, define the &lt;code&gt;Message&lt;/code&gt; model like this:</source>
          <target state="translated">例如，假设您的应用程序具有 &lt;code&gt;Message&lt;/code&gt; 模型。如果您希望每个消息都包含许多图像，请按以下方式定义 &lt;code&gt;Message&lt;/code&gt; 模型：</target>
        </trans-unit>
        <trans-unit id="e856ca406a28871271dfd09494fffd474135afe9" translate="yes" xml:space="preserve">
          <source>For example, suppose your application has a &lt;code&gt;User&lt;/code&gt; model. If you want each user to have an avatar, define the &lt;code&gt;User&lt;/code&gt; model like this:</source>
          <target state="translated">例如，假设您的应用程序具有 &lt;code&gt;User&lt;/code&gt; 模型。如果希望每个用户都有一个化身，请定义 &lt;code&gt;User&lt;/code&gt; 模型，如下所示：</target>
        </trans-unit>
        <trans-unit id="4845e35b532e0a6ae9c9a6d5abf067c22b3f608c" translate="yes" xml:space="preserve">
          <source>For example, take the following view:</source>
          <target state="translated">例如,采取以下观点。</target>
        </trans-unit>
        <trans-unit id="80e06363e5de0de055babf944403b3f5a3aa2393" translate="yes" xml:space="preserve">
          <source>For example, the &lt;code&gt;NetworkResource&lt;/code&gt; model has &lt;code&gt;network_address&lt;/code&gt; and &lt;code&gt;cidr_range&lt;/code&gt; attributes that should be aggregated using the &lt;code&gt;NetAddr::CIDR&lt;/code&gt; value class (&lt;a href=&quot;http://www.rubydoc.info/gems/netaddr/1.5.0/NetAddr/CIDR&quot;&gt;www.rubydoc.info/gems/netaddr/1.5.0/NetAddr/CIDR&lt;/a&gt;). The constructor for the value class is called &lt;code&gt;create&lt;/code&gt; and it expects a CIDR address string as a parameter. New values can be assigned to the value object using either another &lt;code&gt;NetAddr::CIDR&lt;/code&gt; object, a string or an array. The &lt;code&gt;:constructor&lt;/code&gt; and &lt;code&gt;:converter&lt;/code&gt; options can be used to meet these requirements:</source>
          <target state="translated">例如， &lt;code&gt;NetworkResource&lt;/code&gt; 模型具有 &lt;code&gt;network_address&lt;/code&gt; 和 &lt;code&gt;cidr_range&lt;/code&gt; 属性，应使用 &lt;code&gt;NetAddr::CIDR&lt;/code&gt; 值类（&lt;a href=&quot;http://www.rubydoc.info/gems/netaddr/1.5.0/NetAddr/CIDR&quot;&gt;www.rubydoc.info/gems/netaddr/1.5.0/NetAddr/CIDR&lt;/a&gt;）进行聚合。值类的构造函数称为 &lt;code&gt;create&lt;/code&gt; ，它期望将CIDR地址字符串作为参数。可以使用另一个 &lt;code&gt;NetAddr::CIDR&lt;/code&gt; 对象，字符串或数组将新值分配给value对象。的 &lt;code&gt;:constructor&lt;/code&gt; 和 &lt;code&gt;:converter&lt;/code&gt; 选项可以用来满足下列要求：</target>
        </trans-unit>
        <trans-unit id="67f87ec70b0394b6278116e1b6cbea8b351e6a69" translate="yes" xml:space="preserve">
          <source>For example, the dependencies mechanism uses them:</source>
          <target state="translated">例如,依赖机制使用它们。</target>
        </trans-unit>
        <trans-unit id="e53b6db9fd02c64bffe49a780016740ac429fb42" translate="yes" xml:space="preserve">
          <source>For example, the file &lt;code&gt;app/helpers/users_helper.rb&lt;/code&gt; should define &lt;code&gt;UsersHelper&lt;/code&gt; and the file &lt;code&gt;app/controllers/admin/payments_controller.rb&lt;/code&gt; should define &lt;code&gt;Admin::PaymentsController&lt;/code&gt;.</source>
          <target state="translated">例如，文件 &lt;code&gt;app/helpers/users_helper.rb&lt;/code&gt; 应该定义 &lt;code&gt;UsersHelper&lt;/code&gt; ，文件 &lt;code&gt;app/controllers/admin/payments_controller.rb&lt;/code&gt; 应该定义 &lt;code&gt;Admin::PaymentsController&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f6fd907db20ec40e116bd681b46742c041fc1078" translate="yes" xml:space="preserve">
          <source>For example, the file cache store deserializes this way:</source>
          <target state="translated">例如,文件缓存存储反序列化的方式。</target>
        </trans-unit>
        <trans-unit id="6e0bf0da571ebaa2761cff539a8aeec320175f38" translate="yes" xml:space="preserve">
          <source>For example, the following database.yml&amp;hellip;</source>
          <target state="translated">例如，下面的database.yml&amp;hellip;</target>
        </trans-unit>
        <trans-unit id="97eee7a0d4a084452cc8f1838f80f6a2969b9586" translate="yes" xml:space="preserve">
          <source>For example, the following demo integration test prints the body of the controller response to the console:</source>
          <target state="translated">例如,下面的演示集成测试将控制器响应的主体打印到控制台。</target>
        </trans-unit>
        <trans-unit id="490f24b70c9dbfd4d048b909cc4d0a3848bd6feb" translate="yes" xml:space="preserve">
          <source>For example, the following escaped ERB tag would be needed in the template (note the extra &lt;code&gt;%&lt;/code&gt;)...</source>
          <target state="translated">例如，模板中将需要以下转义的ERB标签（请注意额外的 &lt;code&gt;%&lt;/code&gt; ）...</target>
        </trans-unit>
        <trans-unit id="f06e230ea0a7d2054b21c224c8a3198aa9211615" translate="yes" xml:space="preserve">
          <source>For example, the following routes would allow for &lt;code&gt;articles&lt;/code&gt; with &lt;code&gt;to_param&lt;/code&gt; values like &lt;code&gt;1-hello-world&lt;/code&gt; that always begin with a number and &lt;code&gt;users&lt;/code&gt; with &lt;code&gt;to_param&lt;/code&gt; values like &lt;code&gt;david&lt;/code&gt; that never begin with a number to share the root namespace:</source>
          <target state="translated">例如，下面的路线将允许 &lt;code&gt;articles&lt;/code&gt; 与 &lt;code&gt;to_param&lt;/code&gt; 值像 &lt;code&gt;1-hello-world&lt;/code&gt; ，它始终与一个数字，开始 &lt;code&gt;users&lt;/code&gt; 与 &lt;code&gt;to_param&lt;/code&gt; 像值 &lt;code&gt;david&lt;/code&gt; 从未以数字开头共享根命名空间：</target>
        </trans-unit>
        <trans-unit id="9941c9fe1adbe50c3828b65548ca33f878b31284" translate="yes" xml:space="preserve">
          <source>For example, the parent namespace of the string &quot;A::B::C&quot; is the string &quot;A::B&quot;, the parent namespace of &quot;A::B&quot; is &quot;A&quot;, and the parent namespace of &quot;A&quot; is &quot;&quot;.</source>
          <target state="translated">例如,字符串 &quot;A::B::C &quot;的父名空间是 &quot;A::B&quot;,&quot;A::B &quot;的父名空间是 &quot;A&quot;,&quot;A &quot;的父名空间是&quot;&quot;。</target>
        </trans-unit>
        <trans-unit id="2dfbc7c1d66e137a08f7d24d6f0c1205a5d7ea87" translate="yes" xml:space="preserve">
          <source>For example, the value returned for the missing translation key &lt;code&gt;&quot;blog.post.title&quot;&lt;/code&gt; will be:</source>
          <target state="translated">例如，缺少的翻译键 &lt;code&gt;&quot;blog.post.title&quot;&lt;/code&gt; 返回的值将是：</target>
        </trans-unit>
        <trans-unit id="6c9ab8367f005b2e5df0fa87e9f15f334106fe55" translate="yes" xml:space="preserve">
          <source>For example, there is a hook provided within Active Record that is called every time Active Record uses an SQL query on a database. This hook could be &lt;strong&gt;subscribed&lt;/strong&gt; to, and used to track the number of queries during a certain action. There's another hook around the processing of an action of a controller. This could be used, for instance, to track how long a specific action has taken.</source>
          <target state="translated">例如，Active Record中提供了一个钩子，每次Active Record在数据库上使用SQL查询时都会调用该钩子。该挂钩可以被&lt;strong&gt;预订&lt;/strong&gt;，并用于在特定操作期间跟踪查询的数量。关于控制器动作的处理还有另一个问题。例如，这可用于跟踪特定操作已执行了多长时间。</target>
        </trans-unit>
        <trans-unit id="61335b399ca0c612135a585163da22e19756f471" translate="yes" xml:space="preserve">
          <source>For example, these files:</source>
          <target state="translated">例如,这些文件。</target>
        </trans-unit>
        <trans-unit id="3999170f0726b8fac607bc2d27b50c91c05916df" translate="yes" xml:space="preserve">
          <source>For example, this method from &lt;code&gt;ActionController::HttpAuthentication::Token::ControllerMethods&lt;/code&gt; uses &lt;code&gt;blank?&lt;/code&gt; for checking whether a token is present:</source>
          <target state="translated">例如，来自 &lt;code&gt;ActionController::HttpAuthentication::Token::ControllerMethods&lt;/code&gt; 此方法使用 &lt;code&gt;blank?&lt;/code&gt; 用于检查令牌是否存在：</target>
        </trans-unit>
        <trans-unit id="98ebdb02a528bccda95b366823ebd1275442f856" translate="yes" xml:space="preserve">
          <source>For example, this migration:</source>
          <target state="translated">例如,这次迁移。</target>
        </trans-unit>
        <trans-unit id="5bbf42caeaf86a1c53263fef527f68e943bb49b6" translate="yes" xml:space="preserve">
          <source>For example, to create a new person you typically set up a new instance of &lt;code&gt;Person&lt;/code&gt; in the &lt;code&gt;PeopleController#new&lt;/code&gt; action, &lt;code&gt;@person&lt;/code&gt;, and in the view template pass that object to &lt;code&gt;form_for&lt;/code&gt;:</source>
          <target state="translated">例如，要创建一个新的人，通常在 &lt;code&gt;PeopleController#new&lt;/code&gt; 操作 &lt;code&gt;@person&lt;/code&gt; 中设置一个新的 &lt;code&gt;Person&lt;/code&gt; 实例，然后在视图模板中将该对象传递给 &lt;code&gt;form_for&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="64e9e771cfbff8100cd38dc964351777518c5aef" translate="yes" xml:space="preserve">
          <source>For example, to generate the Car model:</source>
          <target state="translated">例如,要生成Car模型。</target>
        </trans-unit>
        <trans-unit id="fe27f8ed8f16b226d7835e951757e8037d9ea3b7" translate="yes" xml:space="preserve">
          <source>For example, to select only &lt;code&gt;viewable_by&lt;/code&gt; and &lt;code&gt;locked&lt;/code&gt; columns:</source>
          <target state="translated">例如，仅选择 &lt;code&gt;viewable_by&lt;/code&gt; 和 &lt;code&gt;locked&lt;/code&gt; 列：</target>
        </trans-unit>
        <trans-unit id="2a9ed07923bb7b4a64450b13fd75255c4d38e870" translate="yes" xml:space="preserve">
          <source>For example, to send newsletters only to users with the primary key starting from 2000 up to 10000:</source>
          <target state="translated">例如,只向主键从2000到10000的用户发送新闻邮件。</target>
        </trans-unit>
        <trans-unit id="1ca45333de25723015609c73a0ca791bc369a34a" translate="yes" xml:space="preserve">
          <source>For example, to send newsletters only to users with the primary key starting from 2000:</source>
          <target state="translated">例如,只向主键从2000年开始的用户发送新闻邮件。</target>
        </trans-unit>
        <trans-unit id="75e8559e97cd9d81dfe888624c855d15c3e1e85b" translate="yes" xml:space="preserve">
          <source>For example, when an action of &lt;code&gt;ArticlesController&lt;/code&gt; is called Rails tries optimistically to use &lt;code&gt;ArticlesHelper&lt;/code&gt;. It is OK that the helper module does not exist, so if an exception for that constant name is raised it should be silenced. But it could be the case that &lt;code&gt;articles_helper.rb&lt;/code&gt; raises a &lt;code&gt;NameError&lt;/code&gt; due to an actual unknown constant. That should be reraised. The method &lt;code&gt;missing_name?&lt;/code&gt; provides a way to distinguish both cases:</source>
          <target state="translated">例如，当调用 &lt;code&gt;ArticlesController&lt;/code&gt; 的动作时，Rails会乐观地尝试使用 &lt;code&gt;ArticlesHelper&lt;/code&gt; 。可以确定，助手模块不存在，因此，如果引发了该常量名称的异常，则应将其静音。但是由于实际的未知常量， &lt;code&gt;articles_helper.rb&lt;/code&gt; 可能会引发 &lt;code&gt;NameError&lt;/code&gt; 的情况。应该重新提出。方法 &lt;code&gt;missing_name?&lt;/code&gt; 提供了一种区分这两种情况的方法：</target>
        </trans-unit>
        <trans-unit id="d190ca2b52d936f728d86a17363fcf644839beef" translate="yes" xml:space="preserve">
          <source>For example, when an action of &lt;code&gt;ArticlesController&lt;/code&gt; is called Rails tries to load &lt;code&gt;articles_helper.rb&lt;/code&gt;, but that file may not exist. That's fine, the helper module is not mandatory so Rails silences a load error. But it could be the case that the helper module does exist and in turn requires another library that is missing. In that case Rails must reraise the exception. The method &lt;code&gt;is_missing?&lt;/code&gt; provides a way to distinguish both cases:</source>
          <target state="translated">例如，当调用 &lt;code&gt;ArticlesController&lt;/code&gt; 的操作时，Rails尝试加载 &lt;code&gt;articles_helper.rb&lt;/code&gt; ，但是该文件可能不存在。很好，帮助程序模块不是必需的，因此Rails可以消除加载错误。但是，可能是助手模块确实存在，进而需要缺少另一个库的情况。在这种情况下，Rails必须提出异常。方法 &lt;code&gt;is_missing?&lt;/code&gt; 提供了一种区分这两种情况的方法：</target>
        </trans-unit>
        <trans-unit id="14a8fa466f2f73212535fb97c32b0556e76e1304" translate="yes" xml:space="preserve">
          <source>For example, when there are two placeholders with only one value supplied:</source>
          <target state="translated">例如,当有两个占位符而只提供一个值时。</target>
        </trans-unit>
        <trans-unit id="0c5be9961c5068063b6e241f83fe32897da5d624" translate="yes" xml:space="preserve">
          <source>For example, with a &lt;code&gt;app/assets/javascripts/application.js&lt;/code&gt; file containing the following lines:</source>
          <target state="translated">例如，对于包含以下行的 &lt;code&gt;app/assets/javascripts/application.js&lt;/code&gt; 文件：</target>
        </trans-unit>
        <trans-unit id="40ff51d77659af819e801bb7d6c51c09bd30772c" translate="yes" xml:space="preserve">
          <source>For example, with allow_unsafe_raw_sql set to :disabled, the following code would raise this exception:</source>
          <target state="translated">例如,当allow_unsafe_raw_sql设置为:disabled时,下面的代码会引发这个异常。</target>
        </trans-unit>
        <trans-unit id="611ace70746d4380f4a8f14e806d54c55f63cbb2" translate="yes" xml:space="preserve">
          <source>For example, you can replace the Simple backend with the Chain backend to chain multiple backends together. This is useful when you want to use standard translations with a Simple backend but store custom application translations in a database or other backends.</source>
          <target state="translated">例如,您可以用 Chain 后端替换 Simple 后端,将多个后端链在一起。当您想用Simple后端使用标准翻译,但在数据库或其他后端中存储自定义应用程序翻译时,这很有用。</target>
        </trans-unit>
        <trans-unit id="fe93712629946bf83ed492ad22d25c6ce33f7b7e" translate="yes" xml:space="preserve">
          <source>For example, you could add this setting to &lt;code&gt;config/application.rb&lt;/code&gt; file:</source>
          <target state="translated">例如，您可以将此设置添加到 &lt;code&gt;config/application.rb&lt;/code&gt; 文件：</target>
        </trans-unit>
        <trans-unit id="ac5f9196086b6ceee7828bfa87b707a6c8025386" translate="yes" xml:space="preserve">
          <source>For example, you could do this in your controller to rollback a transaction:</source>
          <target state="translated">例如,你可以在你的控制器中这样做来回滚一个事务。</target>
        </trans-unit>
        <trans-unit id="2c785eed18ff9bb13ef5bad692ce60a163e1267c" translate="yes" xml:space="preserve">
          <source>For example, you could verify the contents on the title element in your response with:</source>
          <target state="translated">例如,你可以在你的响应中验证标题元素的内容。</target>
        </trans-unit>
        <trans-unit id="b7aa8456e4361405b140cc1ca2ae4ad3a248dfeb" translate="yes" xml:space="preserve">
          <source>For example, you may want to prefix all fragment cache keys with a global version identifier, so you can easily invalidate all caches.</source>
          <target state="translated">例如,你可能想在所有的片段缓存键前加上一个全局版本标识符,这样你就可以很容易地使所有缓存失效。</target>
        </trans-unit>
        <trans-unit id="a181e84d1ff2bbcf954d2b7f5274157933bb511f" translate="yes" xml:space="preserve">
          <source>For example, you might have an Admin model inheriting from User:</source>
          <target state="translated">例如,你可能有一个继承自User的Admin模型。</target>
        </trans-unit>
        <trans-unit id="58fad6d6b9386ff3807adb3569a7d932329d86df" translate="yes" xml:space="preserve">
          <source>For example, your &lt;code&gt;config/locales&lt;/code&gt; directory could look like this:</source>
          <target state="translated">例如，您的 &lt;code&gt;config/locales&lt;/code&gt; 目录可能如下所示：</target>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">例如:</target>
        </trans-unit>
        <trans-unit id="b3b00774a71fe0cf727bd4e0da1b27be0435fc60" translate="yes" xml:space="preserve">
          <source>For fields generated in this way using the &lt;a href=&quot;formbuilder&quot;&gt;FormBuilder&lt;/a&gt;, if &lt;code&gt;:person&lt;/code&gt; also happens to be the name of an instance variable &lt;code&gt;@person&lt;/code&gt;, the default value of the field shown when the form is initially displayed (e.g. in the situation where you are editing an existing record) will be the value of the corresponding attribute of &lt;code&gt;@person&lt;/code&gt;.</source>
          <target state="translated">对于使用&lt;a href=&quot;formbuilder&quot;&gt;FormBuilder&lt;/a&gt;以此方式生成的字段，如果 &lt;code&gt;:person&lt;/code&gt; 也恰好是实例变量 &lt;code&gt;@person&lt;/code&gt; 的名称，则在最初显示表单时显示该字段的默认值（例如，在编辑现有内容的情况下）记录）将是 &lt;code&gt;@person&lt;/code&gt; 相应属性的值。</target>
        </trans-unit>
        <trans-unit id="5c2cb5e44535088c1b16f9f8031b8806c4b68f4e" translate="yes" xml:space="preserve">
          <source>For full options to the message argument please see the &lt;a href=&quot;#message&quot;&gt;message documentation&lt;/a&gt;.</source>
          <target state="translated">有关message参数的完整选项，请参阅&lt;a href=&quot;#message&quot;&gt;消息文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1d5a28476d189c846e3cbe161eac9fe11110dfb4" translate="yes" xml:space="preserve">
          <source>For further customizability, it is possible to suppress the default validations by passing &lt;code&gt;validations: false&lt;/code&gt; as an argument.</source>
          <target state="translated">为了进一步自定义，可以通过传递 &lt;code&gt;validations: false&lt;/code&gt; 作为参数来抑制默认验证。</target>
        </trans-unit>
        <trans-unit id="081785e33ee38d94a2b1fe967089455bd6b360e6" translate="yes" xml:space="preserve">
          <source>For further details have a look at the docs of your production web server: - &lt;a href=&quot;https://tn123.org/mod_xsendfile/&quot;&gt;Apache&lt;/a&gt; - &lt;a href=&quot;https://www.nginx.com/resources/wiki/start/topics/examples/xsendfile/&quot;&gt;NGINX&lt;/a&gt;</source>
          <target state="translated">对于进一步的细节来看看您的生产Web服务器的文档： - &lt;a href=&quot;https://tn123.org/mod_xsendfile/&quot;&gt;阿帕奇&lt;/a&gt; - &lt;a href=&quot;https://www.nginx.com/resources/wiki/start/topics/examples/xsendfile/&quot;&gt;NGINX&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="aee428c034bfedd0bd9c4b170c81d041282ffc75" translate="yes" xml:space="preserve">
          <source>For further information on how to install Valgrind and use with Ruby, refer to &lt;a href=&quot;http://blog.evanweaver.com/articles/2008/02/05/valgrind-and-ruby/&quot;&gt;Valgrind and Ruby&lt;/a&gt; by Evan Weaver.</source>
          <target state="translated">有关如何安装Valgrind以及如何与Ruby一起使用的更多信息，请参阅Evan Weaver的&lt;a href=&quot;http://blog.evanweaver.com/articles/2008/02/05/valgrind-and-ruby/&quot;&gt;Valgrind和Ruby&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c4f497bd8fccf35ad1f3c9f4cf110528be8c261a" translate="yes" xml:space="preserve">
          <source>For good tests, you'll need to give some thought to setting up test data. In Rails, you can handle this by defining and customizing fixtures. You can find comprehensive documentation in the &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveRecord/FixtureSet.html&quot;&gt;Fixtures API documentation&lt;/a&gt;.</source>
          <target state="translated">为了进行良好的测试，您需要考虑一些设置测试数据的问题。在Rails中，您可以通过定义和自定义固定装置来处理此问题。您可以在&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveRecord/FixtureSet.html&quot;&gt;Fixtures API文档中&lt;/a&gt;找到全面的文档。</target>
        </trans-unit>
        <trans-unit id="0021e110456041c0e68a4a209cf0e9cafe7d3d33" translate="yes" xml:space="preserve">
          <source>For hash conditions, you can either use the table name in the key, or use a sub-hash.</source>
          <target state="translated">对于哈希条件,你可以在键中使用表名,或者使用子哈希。</target>
        </trans-unit>
        <trans-unit id="fc5d86a2f562335d3250e949505a4a77029c422e" translate="yes" xml:space="preserve">
          <source>For instance to change the digest used for signed cookies from SHA1 to SHA256, you would first assign the new configuration value:</source>
          <target state="translated">例如,如果要将签名cookie使用的摘要从SHA1改为SHA256,您将首先分配新的配置值。</target>
        </trans-unit>
        <trans-unit id="533bda3f16ed04a12da250098304a2e8ad5e028d" translate="yes" xml:space="preserve">
          <source>For instance, &lt;code&gt;time.ago(24.hours)&lt;/code&gt; will move back exactly 24 hours, while &lt;code&gt;time.ago(1.day)&lt;/code&gt; will move back 23-25 hours, depending on the day.</source>
          <target state="translated">例如， &lt;code&gt;time.ago(24.hours)&lt;/code&gt; 将精确地向后移动24小时，而 &lt;code&gt;time.ago(1.day)&lt;/code&gt; 则将向后移23-25小时（具体取决于一天）。</target>
        </trans-unit>
        <trans-unit id="e0555f051ef622a3759d8d901430f34f55ed3098" translate="yes" xml:space="preserve">
          <source>For instance, a time + 24.hours will advance exactly 24 hours, while a time + 1.day will advance 23-25 hours, depending on the day.</source>
          <target state="translated">例如,时间+24.小时,正好可以提前24小时,而时间+1.天,则可以提前23-25小时,具体时间视当天情况而定。</target>
        </trans-unit>
        <trans-unit id="432a889b80998873943abef346adc1b161cc8720" translate="yes" xml:space="preserve">
          <source>For instance, a time - 24.hours will go subtract exactly 24 hours, while a time - 1.day will subtract 23-25 hours, depending on the day.</source>
          <target state="translated">例如,时间-24.小时会去减去正好是24小时,而时间-1.天则会减去23-25小时,这取决于一天。</target>
        </trans-unit>
        <trans-unit id="8a5acdeb653805919d86d1a9ce5df8284eda2146" translate="yes" xml:space="preserve">
          <source>For instance, if you have PostsController and a template named &lt;code&gt;app/views/layouts/posts.html.erb&lt;/code&gt;, that template will be used for all actions in PostsController and controllers inheriting from PostsController.</source>
          <target state="translated">例如，如果您具有PostsController和名为 &lt;code&gt;app/views/layouts/posts.html.erb&lt;/code&gt; 的模板，则该模板将用于PostsController中的所有操作以及从PostsController继承的控制器。</target>
        </trans-unit>
        <trans-unit id="b7f39ec3506ee6c0bc87f33e6db2dd27d026352d" translate="yes" xml:space="preserve">
          <source>For instance, let's store all &amp;ldquo;render&amp;rdquo; events in an array:</source>
          <target state="translated">例如，让我们将所有&amp;ldquo;渲染&amp;rdquo;事件存储在一个数组中：</target>
        </trans-unit>
        <trans-unit id="e6b770f4448e5e929fd693b2aaaf6da25cd3d99e" translate="yes" xml:space="preserve">
          <source>For instance, running:</source>
          <target state="translated">比如说,跑。</target>
        </trans-unit>
        <trans-unit id="37c287dde897ab69c30222f02c065a07a96212ca" translate="yes" xml:space="preserve">
          <source>For instance, the following example would go to the application's &lt;code&gt;articles_path&lt;/code&gt; if that template was rendered from the application, or the engine's &lt;code&gt;articles_path&lt;/code&gt; if it was rendered from the engine:</source>
          <target state="translated">例如，如果该模板是从应用程序呈现的，则以下示例将转到应用程序的 &lt;code&gt;articles_path&lt;/code&gt; 如果是从引擎呈现的，则转到引擎的 &lt;code&gt;articles_path&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="a81fa2a9148de4c026b9fc2333a65b051bc87daf" translate="yes" xml:space="preserve">
          <source>For instance, the template above using &lt;code&gt;provide&lt;/code&gt; would be:</source>
          <target state="translated">例如，上面使用 &lt;code&gt;provide&lt;/code&gt; 的模板将是：</target>
        </trans-unit>
        <trans-unit id="3ab7760c833a84bf1f465cf1c517bdef6d100866" translate="yes" xml:space="preserve">
          <source>For instance, using the &lt;code&gt;stale?&lt;/code&gt; method:</source>
          <target state="translated">例如，使用 &lt;code&gt;stale?&lt;/code&gt; 方法：</target>
        </trans-unit>
        <trans-unit id="081fac8d5083588ca7d68cac1d678ec147120595" translate="yes" xml:space="preserve">
          <source>For instance, while this definition is similar to the previous one:</source>
          <target state="translated">例如,虽然这个定义与前一个定义相似。</target>
        </trans-unit>
        <trans-unit id="27dfaa219f0e366a79492958c9bb99ce19f7d38e" translate="yes" xml:space="preserve">
          <source>For locales, simply place the locale files in the &lt;code&gt;config/locales&lt;/code&gt; directory, just like you would in an application.</source>
          <target state="translated">对于语言环境，只需将语言环境文件放在 &lt;code&gt;config/locales&lt;/code&gt; 目录中，就像在应用程序中一样。</target>
        </trans-unit>
        <trans-unit id="1cc53aeab1e696d9a231a484c3b1e7b0a5e98758" translate="yes" xml:space="preserve">
          <source>For many resources, loose upgrades are sufficient: if a thread is awaiting a lock, it is not running any other code. With &lt;code&gt;purpose&lt;/code&gt; matching, it is possible to yield only to other threads whose activity will not interfere.</source>
          <target state="translated">对于许多资源而言，宽松的升级就足够了：如果线程正在等待锁，则它不运行任何其他代码。通过 &lt;code&gt;purpose&lt;/code&gt; 匹配，可以仅屈服于活动不会干扰的其他线程。</target>
        </trans-unit>
        <trans-unit id="dff4c1585245da6606f3072f0d97226c836eb452" translate="yes" xml:space="preserve">
          <source>For more complex cases, such as conversion to or from your application domain objects, consider using the &lt;a href=&quot;../../attributes&quot;&gt;ActiveRecord::Attributes&lt;/a&gt; API.</source>
          <target state="translated">对于更复杂的情况，例如与应用程序域对象之间的转换，请考虑使用&lt;a href=&quot;../../attributes&quot;&gt;ActiveRecord :: Attributes&lt;/a&gt; API。</target>
        </trans-unit>
        <trans-unit id="c4a60e17c61b23f54793b61438b571a3881e6c6f" translate="yes" xml:space="preserve">
          <source>For more complex examples such as defining alternate character sets or self-encoding text first, please refer to the &lt;a href=&quot;https://github.com/mikel/mail&quot;&gt;Mail&lt;/a&gt; library.</source>
          <target state="translated">有关更复杂的示例（例如，首先定义备用字符集或自编码文本），请参阅&lt;a href=&quot;https://github.com/mikel/mail&quot;&gt;邮件&lt;/a&gt;库。</target>
        </trans-unit>
        <trans-unit id="d9aa008521c931e74225ae51f6e60a1b686bfb21" translate="yes" xml:space="preserve">
          <source>For more detailed information on other functionalities available, please refer to the specific modules included in &lt;code&gt;ActiveModel::Model&lt;/code&gt; (see below).</source>
          <target state="translated">有关可用其他功能的更多详细信息，请参考 &lt;code&gt;ActiveModel::Model&lt;/code&gt; 包含的特定模块（请参见下文）。</target>
        </trans-unit>
        <trans-unit id="0908267f30f307c13ec11e1e41e611132b4c66e1" translate="yes" xml:space="preserve">
          <source>For more details and examples of individual methods, check the API documentation. In particular the documentation for &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html&quot;&gt;&lt;code&gt;ActiveRecord::ConnectionAdapters::SchemaStatements&lt;/code&gt;&lt;/a&gt; (which provides the methods available in the &lt;code&gt;change&lt;/code&gt;, &lt;code&gt;up&lt;/code&gt; and &lt;code&gt;down&lt;/code&gt; methods), &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveRecord/ConnectionAdapters/TableDefinition.html&quot;&gt;&lt;code&gt;ActiveRecord::ConnectionAdapters::TableDefinition&lt;/code&gt;&lt;/a&gt; (which provides the methods available on the object yielded by &lt;code&gt;create_table&lt;/code&gt;) and &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveRecord/ConnectionAdapters/Table.html&quot;&gt;&lt;code&gt;ActiveRecord::ConnectionAdapters::Table&lt;/code&gt;&lt;/a&gt; (which provides the methods available on the object yielded by &lt;code&gt;change_table&lt;/code&gt;).</source>
          <target state="translated">有关单个方法的更多详细信息和示例，请查看API文档。特别是用于文档&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html&quot;&gt; &lt;code&gt;ActiveRecord::ConnectionAdapters::SchemaStatements&lt;/code&gt; &lt;/a&gt;（其提供可用的方法中的 &lt;code&gt;change&lt;/code&gt; ， &lt;code&gt;up&lt;/code&gt; 和 &lt;code&gt;down&lt;/code&gt; 的方法），&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveRecord/ConnectionAdapters/TableDefinition.html&quot;&gt; &lt;code&gt;ActiveRecord::ConnectionAdapters::TableDefinition&lt;/code&gt; &lt;/a&gt;（其提供由产生在对象上可用的方法 &lt;code&gt;create_table&lt;/code&gt; ）和&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveRecord/ConnectionAdapters/Table.html&quot;&gt; &lt;code&gt;ActiveRecord::ConnectionAdapters::Table&lt;/code&gt; &lt;/a&gt;（提供由 &lt;code&gt;change_table&lt;/code&gt; 产生的对象上可用的方法）。</target>
        </trans-unit>
        <trans-unit id="bb2c9db80b50eb0ad9e15f68cf408e7b7893d292" translate="yes" xml:space="preserve">
          <source>For more details on creating custom types, see the documentation for &lt;a href=&quot;../../activemodel/type/value&quot;&gt;ActiveModel::Type::Value&lt;/a&gt;. For more details on registering your types to be referenced by a symbol, see &lt;a href=&quot;../type#method-c-register&quot;&gt;ActiveRecord::Type.register&lt;/a&gt;. You can also pass a type object directly, in place of a symbol.</source>
          <target state="translated">有关创建自定义类型的更多详细信息，请参见&lt;a href=&quot;../../activemodel/type/value&quot;&gt;ActiveModel :: Type :: Value&lt;/a&gt;的文档。有关注册要由符号引用的类型的更多详细信息，请参见&lt;a href=&quot;../type#method-c-register&quot;&gt;ActiveRecord :: Type.register&lt;/a&gt;。您也可以直接传递类型对象来代替符号。</target>
        </trans-unit>
        <trans-unit id="3d1ead23b1228be53c887ea5c02f5e35de106075" translate="yes" xml:space="preserve">
          <source>For more details on key rotation with encrypted and signed messages as well as the various options the &lt;code&gt;rotate&lt;/code&gt; method accepts, please refer to the &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveSupport/MessageEncryptor.html&quot;&gt;MessageEncryptor API&lt;/a&gt; and &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveSupport/MessageVerifier.html&quot;&gt;MessageVerifier API&lt;/a&gt; documentation.</source>
          <target state="translated">有关使用加密和签名的消息进行密钥旋转的更多详细信息，以及 &lt;code&gt;rotate&lt;/code&gt; 方法接受的各种选项，请参阅&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveSupport/MessageEncryptor.html&quot;&gt;MessageEncryptor API&lt;/a&gt;和&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveSupport/MessageVerifier.html&quot;&gt;MessageVerifier API&lt;/a&gt;文档。</target>
        </trans-unit>
        <trans-unit id="1da2a7e63edaa3e19544b269ac230e7df25f63ce" translate="yes" xml:space="preserve">
          <source>For more details on the routing process, see &lt;a href=&quot;routing&quot;&gt;Rails Routing from the Outside In&lt;/a&gt;.</source>
          <target state="translated">有关布线过程的更多详细信息，请参见《&lt;a href=&quot;routing&quot;&gt;从外部进入Rails布线》&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bd7edc0799806823826db064d0716eca378f0a8a" translate="yes" xml:space="preserve">
          <source>For more details read the &lt;a href=&quot;migration&quot;&gt;&amp;ldquo;Transactional Migrations&amp;rdquo; section above&lt;/a&gt;.</source>
          <target state="translated">有关更多详细信息，请阅读上面的&lt;a href=&quot;migration&quot;&gt;&amp;ldquo;交易迁移&amp;rdquo;部分&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e2e2e5876de4851bed71d4264251fa966d17185d" translate="yes" xml:space="preserve">
          <source>For more details, including other events you can bind to, check out &lt;a href=&quot;https://github.com/turbolinks/turbolinks/blob/master/README.md&quot;&gt;the Turbolinks README&lt;/a&gt;.</source>
          <target state="translated">有关更多详细信息，包括您可以绑定的其他事件，请查看&lt;a href=&quot;https://github.com/turbolinks/turbolinks/blob/master/README.md&quot;&gt;Turbolinks README&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8f047931c6182258700f5ddb25dead735c079a39" translate="yes" xml:space="preserve">
          <source>For more information about migrations, refer to &lt;a href=&quot;active_record_migrations&quot;&gt;Active Record Migrations&lt;/a&gt;.</source>
          <target state="translated">有关迁移的更多信息，请参考&lt;a href=&quot;active_record_migrations&quot;&gt;Active Record迁移&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bde075bd772de835a77c4dadee48206f95fa03ca" translate="yes" xml:space="preserve">
          <source>For more information about routing, refer to &lt;a href=&quot;routing&quot;&gt;Rails Routing from the Outside In&lt;/a&gt;.</source>
          <target state="translated">有关路由的更多信息，请参阅《&lt;a href=&quot;routing&quot;&gt;从外部&lt;/a&gt;进入Rails路由》。</target>
        </trans-unit>
        <trans-unit id="303c583b575361bde9efaec26506f8c3e4254406" translate="yes" xml:space="preserve">
          <source>For more information about specifying conditions as a hash or array, see the Conditions section in the introduction to &lt;a href=&quot;base&quot;&gt;ActiveRecord::Base&lt;/a&gt;.</source>
          <target state="translated">有关将条件指定为哈希或数组的更多信息，请参见&lt;a href=&quot;base&quot;&gt;ActiveRecord :: Base&lt;/a&gt;简介中的&amp;ldquo;条件&amp;rdquo;部分。</target>
        </trans-unit>
        <trans-unit id="cbe1f64595cd21c7163f2bf2a314a52327d58a2d" translate="yes" xml:space="preserve">
          <source>For more information about the methods defined on the Chars proxy see &lt;a href=&quot;activesupport/multibyte/chars&quot;&gt;ActiveSupport::Multibyte::Chars&lt;/a&gt;. For information about how to change the default Multibyte behavior see &lt;a href=&quot;activesupport/multibyte&quot;&gt;ActiveSupport::Multibyte&lt;/a&gt;.</source>
          <target state="translated">有关在Chars代理上定义的方法的更多信息，请参见&lt;a href=&quot;activesupport/multibyte/chars&quot;&gt;ActiveSupport :: Multibyte :: Chars&lt;/a&gt;。有关如何更改默认的多字节行为的信息，请参见&lt;a href=&quot;activesupport/multibyte&quot;&gt;ActiveSupport :: Multibyte&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="63c7b1418ccd5d52f028a056b1bb15cb26845066" translate="yes" xml:space="preserve">
          <source>For more information on &lt;code&gt;Minitest&lt;/code&gt;, refer to &lt;a href=&quot;http://docs.seattlerb.org/minitest&quot;&gt;its documentation&lt;/a&gt;.</source>
          <target state="translated">有关 &lt;code&gt;Minitest&lt;/code&gt; 的更多信息，请参阅&lt;a href=&quot;http://docs.seattlerb.org/minitest&quot;&gt;其文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3c89d0fa21e82bf517c533b3cdf12b3cc0323591" translate="yes" xml:space="preserve">
          <source>For more information on Active Record associations, see the &lt;a href=&quot;association_basics&quot;&gt;Active Record Associations&lt;/a&gt; guide.</source>
          <target state="translated">有关Active Record关联的更多信息，请参阅&lt;a href=&quot;association_basics&quot;&gt;Active Record关联&lt;/a&gt;指南。</target>
        </trans-unit>
        <trans-unit id="fc249d76b1155b7966298297ad0e4c41612e374f" translate="yes" xml:space="preserve">
          <source>For more information on Builder please consult the &lt;a href=&quot;https://github.com/jimweirich/builder&quot;&gt;source code&lt;/a&gt;.</source>
          <target state="translated">有关Builder的更多信息，请查阅&lt;a href=&quot;https://github.com/jimweirich/builder&quot;&gt;源代码&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="94d19f4d66c8605ad2dbd8f63a90b898427fb8c8" translate="yes" xml:space="preserve">
          <source>For more information on Rails' routing system and the associated conventions, please see &lt;a href=&quot;routing&quot;&gt;Rails Routing from the Outside In&lt;/a&gt; guide.</source>
          <target state="translated">有关Rails的路由系统和相关约定的更多信息，请参见&lt;a href=&quot;routing&quot;&gt;《 Outside In&lt;/a&gt;指南》中的Rails路由。</target>
        </trans-unit>
        <trans-unit id="6a84e9b0b629c050823dc494ec0d1ae82724357b" translate="yes" xml:space="preserve">
          <source>For more information on changes made to Rails 5.0 please see the release notes.</source>
          <target state="translated">关于Rails 5.0的更多信息,请参见发布说明。</target>
        </trans-unit>
        <trans-unit id="8de5ee863f676d9c75f258741e542824b0a5394d" translate="yes" xml:space="preserve">
          <source>For more information on changes made to Rails 5.1 please see the release notes.</source>
          <target state="translated">有关 Rails 5.1 的更多信息,请参见发布说明。</target>
        </trans-unit>
        <trans-unit id="332de34b15281a0ae0bc57b18259d33941fc8d22" translate="yes" xml:space="preserve">
          <source>For more information on changes made to Rails 5.2 please see the release notes.</source>
          <target state="translated">关于Rails 5.2的更多信息,请参见发布说明。</target>
        </trans-unit>
        <trans-unit id="c80de18adbdcb0e36c093c7cbf9b193728745ba9" translate="yes" xml:space="preserve">
          <source>For more information on changes made to Rails 6.0 please see the release notes.</source>
          <target state="translated">关于Rails 6.0的更多信息,请参见发布说明。</target>
        </trans-unit>
        <trans-unit id="c45e3ae53af05ab84c03c41845bc9759d435437d" translate="yes" xml:space="preserve">
          <source>For more information on routing assertions available in Rails, see the API documentation for &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionDispatch/Assertions/RoutingAssertions.html&quot;&gt;&lt;code&gt;ActionDispatch::Assertions::RoutingAssertions&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">有关Rails中可用的路由断言的更多信息，请参见&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionDispatch/Assertions/RoutingAssertions.html&quot;&gt; &lt;code&gt;ActionDispatch::Assertions::RoutingAssertions&lt;/code&gt; &lt;/a&gt;的API文档。</target>
        </trans-unit>
        <trans-unit id="3fc4fd48f1f8311edd9c91d896c75feceda42021" translate="yes" xml:space="preserve">
          <source>For more information on routing, see the &lt;a href=&quot;routing&quot;&gt;Rails Routing&lt;/a&gt; guide.</source>
          <target state="translated">有关路由的更多信息，请参见《&lt;a href=&quot;routing&quot;&gt;Rails路由&lt;/a&gt;指南》。</target>
        </trans-unit>
        <trans-unit id="3e819aaa04ac2ab8f15aa80776b49cb044ce902c" translate="yes" xml:space="preserve">
          <source>For more information on the dangers of SQL injection, see the &lt;a href=&quot;security#sql-injection&quot;&gt;Ruby on Rails Security Guide&lt;/a&gt;.</source>
          <target state="translated">有关SQL注入危险的更多信息，请参见《&lt;a href=&quot;security#sql-injection&quot;&gt;Ruby on Rails安全指南》&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2368c0d305ed909a17ef9dd6a2c18a2864d74b8a" translate="yes" xml:space="preserve">
          <source>For more information see the &lt;a href=&quot;../migration&quot;&gt;&amp;ldquo;Transactional Migrations&amp;rdquo; section&lt;/a&gt;.</source>
          <target state="translated">有关更多信息，请参见&lt;a href=&quot;../migration&quot;&gt;&amp;ldquo;事务迁移&amp;rdquo;部分&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="754a6d63416a85f1c57896f56a1c4b93856ce437" translate="yes" xml:space="preserve">
          <source>For more information, read the &lt;a href=&quot;asset_pipeline&quot;&gt;Asset Pipeline guide&lt;/a&gt;.</source>
          <target state="translated">有关更多信息，请阅读&lt;a href=&quot;asset_pipeline&quot;&gt;Asset Pipeline指南&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5073d9c5360dd34de2568a65a085dd60bee58b32" translate="yes" xml:space="preserve">
          <source>For more information, refer to the reference above and &lt;a href=&quot;https://weblog.rubyonrails.org/2012/3/21/strong-parameters/&quot;&gt;this blog article about Strong Parameters&lt;/a&gt;.</source>
          <target state="translated">有关更多信息，请参考上面的参考以及&lt;a href=&quot;https://weblog.rubyonrails.org/2012/3/21/strong-parameters/&quot;&gt;有关Strong Parameters的此博客文章&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0822b506a154bfc70930e9cc6e2aca2d9d286424" translate="yes" xml:space="preserve">
          <source>For more information, see the documentation for the &lt;code&gt;:inverse_of&lt;/code&gt; option.</source>
          <target state="translated">有关更多信息，请参见 &lt;code&gt;:inverse_of&lt;/code&gt; 选项的文档。</target>
        </trans-unit>
        <trans-unit id="ccb72b198f77ca4c9b9cb1ea79ba163707ea7f58" translate="yes" xml:space="preserve">
          <source>For more on PATCH and why this change was made, see &lt;a href=&quot;https://weblog.rubyonrails.org/2012/2/26/edge-rails-patch-is-the-new-primary-http-method-for-updates/&quot;&gt;this post&lt;/a&gt; on the Rails blog.</source>
          <target state="translated">欲了解更多关于PATCH，为什么这个更改是，看到&lt;a href=&quot;https://weblog.rubyonrails.org/2012/2/26/edge-rails-patch-is-the-new-primary-http-method-for-updates/&quot;&gt;这个帖子&lt;/a&gt;在铁轨上博客。</target>
        </trans-unit>
        <trans-unit id="bdca84b31d7108a5f2c3ae47fec4220b568cd710" translate="yes" xml:space="preserve">
          <source>For more, see &lt;code&gt;Routing::Mapper::Resources#resources&lt;/code&gt;, &lt;code&gt;Routing::Mapper::Scoping#namespace&lt;/code&gt;, and &lt;code&gt;Routing::Mapper::Scoping#scope&lt;/code&gt;.</source>
          <target state="translated">有关更多信息，请参见 &lt;code&gt;Routing::Mapper::Resources#resources&lt;/code&gt; ， &lt;code&gt;Routing::Mapper::Scoping#namespace&lt;/code&gt; 和 &lt;code&gt;Routing::Mapper::Scoping#scope&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d73b0e21c09aef6c741098eafb10774dfe69ab34" translate="yes" xml:space="preserve">
          <source>For most conventional &lt;a href=&quot;https://en.wikipedia.org/wiki/Representational_state_transfer&quot;&gt;RESTful&lt;/a&gt; applications, the controller will receive the request (this is invisible to you as the developer), fetch or save data from a model, and use a view to create HTML output. If your controller needs to do things a little differently, that's not a problem, this is just the most common way for a controller to work.</source>
          <target state="translated">对于大多数传统的&lt;a href=&quot;https://en.wikipedia.org/wiki/Representational_state_transfer&quot;&gt;RESTful&lt;/a&gt;应用程序，控制器将接收请求（对于开发人员来说这是不可见的），从模型中获取或保存数据，并使用视图创建HTML输出。如果您的控制器需要做一些不同的事情，这不是问题，这只是控制器工作的最常见方式。</target>
        </trans-unit>
        <trans-unit id="14f79245b7c0875beb69c5cde91cdc7ffc338c48" translate="yes" xml:space="preserve">
          <source>For most stores, this ID is used to look up the session data on the server, e.g. in a database table. There is one exception, and that is the default and recommended session store - the CookieStore - which stores all session data in the cookie itself (the ID is still available to you if you need it). This has the advantage of being very lightweight and it requires zero setup in a new application in order to use the session. The cookie data is cryptographically signed to make it tamper-proof. And it is also encrypted so anyone with access to it can't read its contents. (Rails will not accept it if it has been edited).</source>
          <target state="translated">对于大多数存储,这个ID是用来在服务器上查找会话数据的,比如在数据库表中。有一个例外,那就是默认和推荐的会话存储--CookieStore,它将所有的会话数据存储在cookie本身中(如果你需要的话,这个ID仍然可以使用)。这样做的好处是非常轻量级,它需要在新的应用程序中进行零设置才能使用会话。Cookie数据是经过加密签名的,使其不可篡改。而且它也是加密的,所以任何有访问权的人都无法读取它的内容。如果它被编辑过,Rails将不接受它)。</target>
        </trans-unit>
        <trans-unit id="d27bf22080191b365296dff989dd68e9d0ccde8c" translate="yes" xml:space="preserve">
          <source>For namespaced controllers you can use the directory notation. For example:</source>
          <target state="translated">对于命名空间的控制器,你可以使用目录符号。例如</target>
        </trans-unit>
        <trans-unit id="7e76de24984c2f2b9a6610a13156cbaabcc22df2" translate="yes" xml:space="preserve">
          <source>For namespaced routes, like &lt;code&gt;admin_post_url&lt;/code&gt;:</source>
          <target state="translated">对于命名空间的路由，例如 &lt;code&gt;admin_post_url&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="4926bebd110be3befd2e5e561af80d930839b577" translate="yes" xml:space="preserve">
          <source>For now, just keep in mind that common functionality like Rails engines, I18n and Rails configuration are all being defined here.</source>
          <target state="translated">目前,只要记住Rails引擎、I18n和Rails配置等常用功能都在这里被定义。</target>
        </trans-unit>
        <trans-unit id="1a9ae327f85c22d64750df780636ef6dc327979d" translate="yes" xml:space="preserve">
          <source>For one-to-one nested associations, if you build the new (in-memory) child object yourself before assignment, then this module will not overwrite it, e.g.:</source>
          <target state="translated">对于一对一的嵌套关联,如果你在赋值前自己建立了新的(内存中)子对象,那么这个模块就不会覆盖它,例如:。</target>
        </trans-unit>
        <trans-unit id="23697fa05e0fecf96d86467c88fbae1ec74b93b6" translate="yes" xml:space="preserve">
          <source>For options, please see the parent section, &lt;a href=&quot;#calculations&quot;&gt;Calculations&lt;/a&gt;.</source>
          <target state="translated">有关选项，请参见上一节&amp;ldquo; &lt;a href=&quot;#calculations&quot;&gt;计算&amp;rdquo;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5aa9f654f30613a573da0c9198aec456093a6d53" translate="yes" xml:space="preserve">
          <source>For options, see &lt;code&gt;Base#match&lt;/code&gt;. For &lt;code&gt;:shallow_path&lt;/code&gt; option, see &lt;code&gt;Resources#resources&lt;/code&gt;.</source>
          <target state="translated">有关选项，请参见 &lt;code&gt;Base#match&lt;/code&gt; 。有关 &lt;code&gt;:shallow_path&lt;/code&gt; 选项，请参见 &lt;code&gt;Resources#resources&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="65cbed0c063602b9267b0f40ad0e90635837a12c" translate="yes" xml:space="preserve">
          <source>For options, see &lt;code&gt;match&lt;/code&gt;, as &lt;code&gt;mount&lt;/code&gt; uses it internally.</source>
          <target state="translated">有关选项，请参见 &lt;code&gt;match&lt;/code&gt; ，因为 &lt;code&gt;mount&lt;/code&gt; 在内部使用它。</target>
        </trans-unit>
        <trans-unit id="ebd8b4f4b24ff91f7b22992befc303194d511b64" translate="yes" xml:space="preserve">
          <source>For options, see &lt;code&gt;match&lt;/code&gt;, as &lt;code&gt;root&lt;/code&gt; uses it internally.</source>
          <target state="translated">有关选项，请参见 &lt;code&gt;match&lt;/code&gt; ，因为 &lt;code&gt;root&lt;/code&gt; 在内部使用它。</target>
        </trans-unit>
        <trans-unit id="8e4f6b1e9b66b1b4691a655d00d7de12ee029372" translate="yes" xml:space="preserve">
          <source>For other actions, you just need to insert the action name as the first element of the array:</source>
          <target state="translated">对于其他动作,你只需要将动作名称作为数组的第一个元素插入即可。</target>
        </trans-unit>
        <trans-unit id="ebc00acf0da313bcef402e8042442480cbc019d2" translate="yes" xml:space="preserve">
          <source>For other durations please refer to the time extensions to &lt;code&gt;Integer&lt;/code&gt;.</source>
          <target state="translated">有关其他持续时间，请参考 &lt;code&gt;Integer&lt;/code&gt; 的时间扩展。</target>
        </trans-unit>
        <trans-unit id="c4bb00db033a10a802ad177adc98015ab561ad9c" translate="yes" xml:space="preserve">
          <source>For other durations please refer to the time extensions to &lt;code&gt;Numeric&lt;/code&gt;.</source>
          <target state="translated">对于其他持续时间，请参考 &lt;code&gt;Numeric&lt;/code&gt; 的时间扩展。</target>
        </trans-unit>
        <trans-unit id="f7225651934596fb993ff0c588eba6818b534b7e" translate="yes" xml:space="preserve">
          <source>For redirects within the same controller, you can even call follow_redirect and the redirect will be followed, triggering another action call which can then be asserted against.</source>
          <target state="translated">对于同一控制器内的重定向,你甚至可以调用follow_redirect,重定向将被跟随,触发另一个动作调用,然后可以对其进行断言。</target>
        </trans-unit>
        <trans-unit id="20a210a81ad03206eaa1d76224a480c22cc33a76" translate="yes" xml:space="preserve">
          <source>For removing objects from the session, you can either assign a single key to &lt;code&gt;nil&lt;/code&gt;:</source>
          <target state="translated">要从会话中删除对象，您可以将一个键分配给 &lt;code&gt;nil&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="d60d3b627d051edc6f33ed8fd3ab3e989c35eec6" translate="yes" xml:space="preserve">
          <source>For routes that don't fit the &lt;code&gt;resources&lt;/code&gt; mold, you can use the HTTP helper methods &lt;code&gt;get&lt;/code&gt;, &lt;code&gt;post&lt;/code&gt;, &lt;code&gt;patch&lt;/code&gt;, &lt;code&gt;put&lt;/code&gt; and &lt;code&gt;delete&lt;/code&gt;.</source>
          <target state="translated">对于不适合 &lt;code&gt;resources&lt;/code&gt; 使用的路由，可以使用HTTP帮助器方法 &lt;code&gt;get&lt;/code&gt; ， &lt;code&gt;post&lt;/code&gt; ， &lt;code&gt;patch&lt;/code&gt; ， &lt;code&gt;put&lt;/code&gt; 和 &lt;code&gt;delete&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5943f5bf0047015c862144ae1384ea5c7c5c7238" translate="yes" xml:space="preserve">
          <source>For session management</source>
          <target state="translated">用于会议管理</target>
        </trans-unit>
        <trans-unit id="78a648be68b6570f7c46bf8d963aac0b312be8e4" translate="yes" xml:space="preserve">
          <source>For several reasons the Simple backend shipped with Active Support only does the &quot;simplest thing that could possibly work&quot; &lt;em&gt;for Ruby on Rails&lt;/em&gt;&lt;sup id=&quot;footnote-3-ref&quot;&gt;&lt;a href=&quot;#footnote-3&quot;&gt;3&lt;/a&gt;&lt;/sup&gt; ... which means that it is only guaranteed to work for English and, as a side effect, languages that are very similar to English. Also, the simple backend is only capable of reading translations but cannot dynamically store them to any format.</source>
          <target state="translated">出于多种原因，Active Support附带的Simple后端仅对&lt;em&gt;Ruby on Rails &lt;/em&gt;&lt;sup id=&quot;footnote-3-ref&quot;&gt;&lt;a href=&quot;#footnote-3&quot;&gt;3执行&lt;/a&gt;&lt;/sup&gt; &amp;ldquo;可能可行的最简单的事情&amp;rdquo; &amp;hellip;&amp;hellip;这意味着只能保证它适用于英语，并且附带地，与英语非常相似。同样，简单的后端仅能够读取翻译，而不能动态地将它们存储为任何格式。</target>
        </trans-unit>
        <trans-unit id="6ccb771b1868d49f80bdb1a24b4a3c514653b4ad" translate="yes" xml:space="preserve">
          <source>For severe security issues all releases in the current major series, and also the last major release series will receive patches and new versions. The classification of the security issue is judged by the core team.</source>
          <target state="translated">对于严重的安全问题,当前主要系列的所有版本,以及上一个主要版本系列都会收到补丁和新版本。安全问题的分类由核心团队判断。</target>
        </trans-unit>
        <trans-unit id="bec5bd652cf6324b81872307c77c37a3cbcb54c5" translate="yes" xml:space="preserve">
          <source>For simple class modifications, use &lt;code&gt;Class#class_eval&lt;/code&gt;. For complex class modifications, consider using &lt;code&gt;ActiveSupport::Concern&lt;/code&gt;.</source>
          <target state="translated">对于简单的类修改，请使用 &lt;code&gt;Class#class_eval&lt;/code&gt; 。对于复杂的类修改，请考虑使用 &lt;code&gt;ActiveSupport::Concern&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2e00b3463c5c916c2c8cf0901ca46393d8019388" translate="yes" xml:space="preserve">
          <source>For the curious, &lt;code&gt;'articles#index'&lt;/code&gt; actually expands out to &lt;code&gt;ArticlesController.action(:index)&lt;/code&gt;, which returns a valid Rack application.</source>
          <target state="translated">出于好奇， &lt;code&gt;'articles#index'&lt;/code&gt; 实际上扩展为 &lt;code&gt;ArticlesController.action(:index)&lt;/code&gt; ，该返回一个有效的Rack应用程序。</target>
        </trans-unit>
        <trans-unit id="76d1aab46d62d4fe6b039884d455728672c8a1b7" translate="yes" xml:space="preserve">
          <source>For the purpose of this guide pretend for a moment that you are an avid bird watcher. Your favorite bird is the Yaffle, and you want to create a plugin that allows other developers to share in the Yaffle goodness.</source>
          <target state="translated">为了本指南的目的,假设您是一个狂热的观鸟者。您最喜欢的鸟是Yaffle,您想创建一个插件,让其他开发者也能分享Yaffle的好处。</target>
        </trans-unit>
        <trans-unit id="6d48d180d0d8ae88ec8e27b38717e261eebe1164" translate="yes" xml:space="preserve">
          <source>For the purposes of unit testing a mailer, fixtures are used to provide an example of how the output &lt;em&gt;should&lt;/em&gt; look. Because these are example emails, and not Active Record data like the other fixtures, they are kept in their own subdirectory apart from the other fixtures. The name of the directory within &lt;code&gt;test/fixtures&lt;/code&gt; directly corresponds to the name of the mailer. So, for a mailer named &lt;code&gt;UserMailer&lt;/code&gt;, the fixtures should reside in &lt;code&gt;test/fixtures/user_mailer&lt;/code&gt; directory.</source>
          <target state="translated">为单位的测试邮件收发器的目的，固定装置是用来提供的输出如何一个例子&lt;em&gt;应该&lt;/em&gt;看。因为这些是示例电子邮件，而不是像其他灯具那样的Active Record数据，所以它们与其他灯具分开保存在自己的子目录中。 &lt;code&gt;test/fixtures&lt;/code&gt; 中的目录名称直接与邮件程序的名称相对应。因此，对于名为 &lt;code&gt;UserMailer&lt;/code&gt; 的邮件程序，固定装置应位于 &lt;code&gt;test/fixtures/user_mailer&lt;/code&gt; 目录中。</target>
        </trans-unit>
        <trans-unit id="3350c645746b50e40b536232c6b1ab96b40c7909" translate="yes" xml:space="preserve">
          <source>For the second way, use &lt;a href=&quot;classmethods#method-i-has_and_belongs_to_many&quot;&gt;has_and_belongs_to_many&lt;/a&gt; in both models. This requires a join table that has no corresponding model or primary key.</source>
          <target state="translated">对于第二种方法，在两个模型中都使用&lt;a href=&quot;classmethods#method-i-has_and_belongs_to_many&quot;&gt;has_and_belongs_to_many&lt;/a&gt;。这需要一个没有相应模型或主键的联接表。</target>
        </trans-unit>
        <trans-unit id="0b9d027367e66ff1880ca5f7c8411883f9682c8d" translate="yes" xml:space="preserve">
          <source>For the vast majority of applications this change needs no action. But in the very rare event that your application needs autoloading while running in production mode, set &lt;code&gt;Rails.application.config.enable_dependency_loading&lt;/code&gt; to true.</source>
          <target state="translated">对于绝大多数应用程序，此更改无需采取任何措施。但是在极少数情况下，您的应用程序需要在生产模式下运行时自动加载，请将 &lt;code&gt;Rails.application.config.enable_dependency_loading&lt;/code&gt; 设置为true。</target>
        </trans-unit>
        <trans-unit id="c28492b4fcdb58ad07d0e63466f4dc02fd025baf" translate="yes" xml:space="preserve">
          <source>For these helpers the first argument is the name of an instance variable and the second is the name of a method (usually an attribute) to call on that object. Rails will set the value of the input control to the return value of that method for the object and set an appropriate input name. If your controller has defined &lt;code&gt;@person&lt;/code&gt; and that person's name is Henry then a form containing:</source>
          <target state="translated">对于这些助手，第一个参数是实例变量的名称，第二个参数是要对该对象调用的方法（通常是属性）的名称。Rails会将输入控件的值设置为该对象的该方法的返回值，并设置适当的输入名称。如果您的控制器已定义 &lt;code&gt;@person&lt;/code&gt; ,并且该人的名字是Henry，则包含以下内容的表单：</target>
        </trans-unit>
        <trans-unit id="5e738173d2db847682b2dec420d36522d33747e3" translate="yes" xml:space="preserve">
          <source>For this section, make sure to run the commands in the root of the &lt;code&gt;blorgh&lt;/code&gt; engine's directory.</source>
          <target state="translated">对于本节，请确保在 &lt;code&gt;blorgh&lt;/code&gt; 引擎目录的根目录中运行命令。</target>
        </trans-unit>
        <trans-unit id="3ea73237c6c463516bc6d0a1fe4b30b6fe5cfe21" translate="yes" xml:space="preserve">
          <source>For top-level or anonymous modules &lt;code&gt;module_parent_name&lt;/code&gt; returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">对于顶级或匿名模块， &lt;code&gt;module_parent_name&lt;/code&gt; 返回 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e4282455476c88f2d4e5c51401dbaff576f5efde" translate="yes" xml:space="preserve">
          <source>For very simple APIs, this may be true. However, even in very HTML-heavy applications, most of an application's logic lives outside of the view layer.</source>
          <target state="translated">对于非常简单的API,这可能是真的。然而,即使是在非常重的HTML应用程序中,应用程序的大部分逻辑也是在视图层之外的。</target>
        </trans-unit>
        <trans-unit id="d9d5977690a0068c8a87050146c913c589fdd3d1" translate="yes" xml:space="preserve">
          <source>Force HTTPS protocol</source>
          <target state="translated">强制执行HTTPS协议</target>
        </trans-unit>
        <trans-unit id="fcbe57b83435ddb7acb09f8ade93a9531aaa98bd" translate="yes" xml:space="preserve">
          <source>Force SSL</source>
          <target state="translated">强制SSL</target>
        </trans-unit>
        <trans-unit id="d4cd9ef2fc9fb7d2d87e08a816391dbefd83e9ab" translate="yes" xml:space="preserve">
          <source>Force default layout behavior with inheritance</source>
          <target state="translated">通过继承来强制默认布局行为</target>
        </trans-unit>
        <trans-unit id="020dff7089d2be223511ba9a0984d9c8de56f52e" translate="yes" xml:space="preserve">
          <source>Forces eager loading by performing a LEFT OUTER JOIN on &lt;code&gt;args&lt;/code&gt;:</source>
          <target state="translated">通过在 &lt;code&gt;args&lt;/code&gt; 上执行LEFT OUTER JOIN来强制渴望加载：</target>
        </trans-unit>
        <trans-unit id="229cba24f1bb4c835f8a78d7c5224cde3cf74c3f" translate="yes" xml:space="preserve">
          <source>Forces reloading of relation.</source>
          <target state="translated">强制重装关系。</target>
        </trans-unit>
        <trans-unit id="35efe543522796c977403286a276da9177a3f032" translate="yes" xml:space="preserve">
          <source>Foreign Key Support</source>
          <target state="translated">外国钥匙支持</target>
        </trans-unit>
        <trans-unit id="2ee372205e15d8140654b1f5e4b497dd3fb87773" translate="yes" xml:space="preserve">
          <source>Foreign Keys</source>
          <target state="translated">外国钥匙</target>
        </trans-unit>
        <trans-unit id="2f3b6b5ab77f8e3b5b876460f080af20f2660c5b" translate="yes" xml:space="preserve">
          <source>Form helpers are designed to make working with models much easier compared to using just standard HTML elements by providing a set of methods for creating forms based on your models. This helper generates the HTML for forms, providing a method for each sort of input (e.g., text, password, select, and so on). When the form is submitted (i.e., when the user hits the submit button or form.submit is called via JavaScript), the form inputs will be bundled into the params object and passed back to the controller.</source>
          <target state="translated">表单助手的设计目的是通过提供一套基于您的模型创建表单的方法,使使用模型的工作比只使用标准的 HTML 元素要容易得多。这个助手为表单生成HTML,为每一种输入(例如,文本、密码、选择等)提供方法。当表单被提交时(即当用户点击提交按钮或通过JavaScript调用form.submit时),表单输入将被捆绑到params对象中并传回控制器。</target>
        </trans-unit>
        <trans-unit id="da3f04cf61327b139ac43f511ef4b0add12bb3fe" translate="yes" xml:space="preserve">
          <source>Form helpers are designed to make working with resources much easier compared to using vanilla HTML.</source>
          <target state="translated">与使用普通的HTML相比,表单助手的设计使资源的使用更加简单。</target>
        </trans-unit>
        <trans-unit id="7d62480bc24ce94d867c462b5ea1a053b2304271" translate="yes" xml:space="preserve">
          <source>Form to external resources</source>
          <target state="translated">对外部资源的形式</target>
        </trans-unit>
        <trans-unit id="a42baa6a9386bdd8611f928ea9a5d31b72dc2b2b" translate="yes" xml:space="preserve">
          <source>FormBuilder</source>
          <target state="translated">FormBuilder</target>
        </trans-unit>
        <trans-unit id="fa6e949cce9c1a0b48fbef71036f5979f9b2fa2e" translate="yes" xml:space="preserve">
          <source>FormBuilder#default_form_builder</source>
          <target state="translated">FormBuilder#default_form_builder</target>
        </trans-unit>
        <trans-unit id="8ca3791edc7e92e058ef4a781902a111a01c2767" translate="yes" xml:space="preserve">
          <source>FormBuilder::ClassMethods</source>
          <target state="translated">FormBuilder::ClassMethods</target>
        </trans-unit>
        <trans-unit id="f06439debceded59abd717cf998c78b07967adc6" translate="yes" xml:space="preserve">
          <source>FormBuilder::ClassMethods#default_form_builder</source>
          <target state="translated">FormBuilder::ClassMethods#default_form_builder</target>
        </trans-unit>
        <trans-unit id="60c7e3bd2a7ae88a97397841cb221353c5893842" translate="yes" xml:space="preserve">
          <source>FormHelper</source>
          <target state="translated">FormHelper</target>
        </trans-unit>
        <trans-unit id="2c8e14faa240cc7ef6841b9e737dc4bf9a433878" translate="yes" xml:space="preserve">
          <source>FormOptionsHelper</source>
          <target state="translated">FormOptionsHelper</target>
        </trans-unit>
        <trans-unit id="8ff66420ce0286ed3e95edc21fb03e009325fed5" translate="yes" xml:space="preserve">
          <source>FormTagHelper</source>
          <target state="translated">FormTagHelper</target>
        </trans-unit>
        <trans-unit id="12984e06c56fe528d2ad1a23d2911b11cbe0eaaf" translate="yes" xml:space="preserve">
          <source>Formats a &lt;code&gt;number&lt;/code&gt; as a percentage string (e.g., 65%). You can customize the format in the &lt;code&gt;options&lt;/code&gt; hash.</source>
          <target state="translated">将 &lt;code&gt;number&lt;/code&gt; 格式化为百分比字符串（例如65％）。您可以在 &lt;code&gt;options&lt;/code&gt; 哈希中自定义格式。</target>
        </trans-unit>
        <trans-unit id="79eb2ae76ca6ec449a6d3ee45c763c126d185edd" translate="yes" xml:space="preserve">
          <source>Formats a &lt;code&gt;number&lt;/code&gt; into a currency string (e.g., $13.65). You can customize the format in the &lt;code&gt;options&lt;/code&gt; hash.</source>
          <target state="translated">将 &lt;code&gt;number&lt;/code&gt; 格式化为货币字符串（例如，$ 13.65）。您可以在 &lt;code&gt;options&lt;/code&gt; 哈希中自定义格式。</target>
        </trans-unit>
        <trans-unit id="d15e696b4343693f24051d95e145307d3556641c" translate="yes" xml:space="preserve">
          <source>Formats a &lt;code&gt;number&lt;/code&gt; into a phone number (US by default e.g., (555) 123-9876). You can customize the format in the &lt;code&gt;options&lt;/code&gt; hash.</source>
          <target state="translated">将 &lt;code&gt;number&lt;/code&gt; 格式化为电话号码（默认为美国，例如（555）123-9876）。您可以在 &lt;code&gt;options&lt;/code&gt; 哈希中自定义格式。</target>
        </trans-unit>
        <trans-unit id="9087826827238bee72040680877f1be50e16a6d0" translate="yes" xml:space="preserve">
          <source>Formats a &lt;code&gt;number&lt;/code&gt; with grouped thousands using &lt;code&gt;delimiter&lt;/code&gt; (e.g., 12,324). You can customize the format in the &lt;code&gt;options&lt;/code&gt; hash.</source>
          <target state="translated">使用 &lt;code&gt;delimiter&lt;/code&gt; （例如12,324）对 &lt;code&gt;number&lt;/code&gt; 进行分组格式化以成千上万。您可以在 &lt;code&gt;options&lt;/code&gt; 哈希中自定义格式。</target>
        </trans-unit>
        <trans-unit id="4ce25360a16bad11c97ab22f6ccdccef057ce5f3" translate="yes" xml:space="preserve">
          <source>Formats a &lt;code&gt;number&lt;/code&gt; with the specified level of &lt;code&gt;:precision&lt;/code&gt; (e.g., 112.32 has a precision of 2 if &lt;code&gt;:significant&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;, and 5 if &lt;code&gt;:significant&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;). You can customize the format in the &lt;code&gt;options&lt;/code&gt; hash.</source>
          <target state="translated">格式 &lt;code&gt;number&lt;/code&gt; 与指定的电平 &lt;code&gt;:precision&lt;/code&gt; （例如，112.32具有为2的精确度，如果 &lt;code&gt;:significant&lt;/code&gt; 是 &lt;code&gt;false&lt;/code&gt; ，并且如果5 &lt;code&gt;:significant&lt;/code&gt; 是 &lt;code&gt;true&lt;/code&gt; ）。您可以在 &lt;code&gt;options&lt;/code&gt; 哈希中自定义格式。</target>
        </trans-unit>
        <trans-unit id="8dc776b091b3382b38aed0c280d9ec9d779a97d9" translate="yes" xml:space="preserve">
          <source>Formats a number as a percentage string.</source>
          <target state="translated">将一个数字格式化为一个百分比字符串。</target>
        </trans-unit>
        <trans-unit id="24137e01ee4942302bce4b292209b1180f939f0a" translate="yes" xml:space="preserve">
          <source>Formats a number into a currency string (e.g., $13.65).</source>
          <target state="translated">将一个数字格式化为一个货币字符串(例如,$13.65)。</target>
        </trans-unit>
        <trans-unit id="977f52c1b073e41b3adf1f2c49f4a70d8da74e01" translate="yes" xml:space="preserve">
          <source>Formats a number into a phone number (US by default).</source>
          <target state="translated">将号码格式化为电话号码(默认为美国)。</target>
        </trans-unit>
        <trans-unit id="82a3df5495a0e4593c653bd591c7c511a7b817c7" translate="yes" xml:space="preserve">
          <source>Formats a number with grouped thousands using a delimiter.</source>
          <target state="translated">使用定界符对千位数进行分组格式化。</target>
        </trans-unit>
        <trans-unit id="ab1dc7b44eb9c0739c906e2f69738f3f9c8c1831" translate="yes" xml:space="preserve">
          <source>Formats a number with the specified level of &lt;code&gt;precision&lt;/code&gt;, which defaults to 3.</source>
          <target state="translated">以指定的 &lt;code&gt;precision&lt;/code&gt; 级别格式化数字，默认为3。</target>
        </trans-unit>
        <trans-unit id="4a0043ae4298b3d06a5fd43ce48d3a38c30d51a9" translate="yes" xml:space="preserve">
          <source>Formats can have different variants.</source>
          <target state="translated">格式可以有不同的变体。</target>
        </trans-unit>
        <trans-unit id="0b71df31a450decc3e21d4d1a881a5419c397de3" translate="yes" xml:space="preserve">
          <source>Formats the bytes in &lt;code&gt;number&lt;/code&gt; into a more understandable representation (e.g., giving it 1500 yields 1.5 KB). This method is useful for reporting file sizes to users. You can customize the format in the &lt;code&gt;options&lt;/code&gt; hash.</source>
          <target state="translated">将 &lt;code&gt;number&lt;/code&gt; 字节格式化为更易于理解的表示形式（例如，将其赋予1500将产生1.5 KB）。此方法对于向用户报告文件大小很有用。您可以在 &lt;code&gt;options&lt;/code&gt; 哈希中自定义格式。</target>
        </trans-unit>
        <trans-unit id="47e31cad204330e5149984c1f02df1ca22623437" translate="yes" xml:space="preserve">
          <source>Formats the bytes in size into a more understandable representation; useful for reporting file sizes to users.</source>
          <target state="translated">将字节大小格式化为更容易理解的表示方式;对于向用户报告文件大小很有用。</target>
        </trans-unit>
        <trans-unit id="84e4b7202eead25ba9651b37a636710a33bceccd" translate="yes" xml:space="preserve">
          <source>FormattedTimeHelper can now be included in a controller, using the &lt;code&gt;helper&lt;/code&gt; class method:</source>
          <target state="translated">现在可以使用 &lt;code&gt;helper&lt;/code&gt; 类方法将FormattedTimeHelper包含在控制器中：</target>
        </trans-unit>
        <trans-unit id="841f832857c780b47f478b4f21d34d8995af64b8" translate="yes" xml:space="preserve">
          <source>Formatting</source>
          <target state="translated">Formatting</target>
        </trans-unit>
        <trans-unit id="b6064d8c0fdc370c16d0cb1decb7c2f4d2f48bd3" translate="yes" xml:space="preserve">
          <source>Forms in web applications are an essential interface for user input. However, form markup can quickly become tedious to write and maintain because of the need to handle form control naming and its numerous attributes. Rails does away with this complexity by providing view helpers for generating form markup. However, since these helpers have different use cases, developers need to know the differences between the helper methods before putting them to use.</source>
          <target state="translated">Web应用程序中的表单是用户输入的重要界面。然而,由于需要处理表单控件的命名及其众多的属性,表单标记的编写和维护很快就会变得乏味。Rails通过提供用于生成表单标记的视图帮助程序来消除这种复杂性。然而,由于这些助手有不同的用例,开发人员需要在投入使用前了解这些助手方法之间的差异。</target>
        </trans-unit>
        <trans-unit id="18f90dadb540b75dfd7fe49aa813e22e9fe5c574" translate="yes" xml:space="preserve">
          <source>Forms to External Resources</source>
          <target state="translated">给外部资源的表格</target>
        </trans-unit>
        <trans-unit id="51872412424b5b001a8994daa52aa0433211c5d1" translate="yes" xml:space="preserve">
          <source>Forward all undefined methods to the wrapped string.</source>
          <target state="translated">将所有未定义的方法转发到封装的字符串中。</target>
        </trans-unit>
        <trans-unit id="d87f1def6b27d559cd70ef16104a21f1b6656c0f" translate="yes" xml:space="preserve">
          <source>Fragment Caching</source>
          <target state="translated">片段缓存</target>
        </trans-unit>
        <trans-unit id="77f60731ecb1db88f599e05d5ae64dbc1c05c6e1" translate="yes" xml:space="preserve">
          <source>Fragment Caching allows a fragment of view logic to be wrapped in a cache block and served out of the cache store when the next request comes in.</source>
          <target state="translated">片段缓存允许将视图逻辑的一个片段封装在缓存块中,并在下一个请求进来时从缓存存储中提供服务。</target>
        </trans-unit>
        <trans-unit id="4e1a67c93949462da2d64d588540c2e8bf396eca" translate="yes" xml:space="preserve">
          <source>Fragment and Russian doll caching.</source>
          <target state="translated">碎片和俄罗斯娃娃的缓存。</target>
        </trans-unit>
        <trans-unit id="65687f1a127f7a349e21ea3b95524aae25478c49" translate="yes" xml:space="preserve">
          <source>Fragment caching is also supported in multipart emails. Read more about caching in the &lt;a href=&quot;caching_with_rails&quot;&gt;Rails caching guide&lt;/a&gt;.</source>
          <target state="translated">分段电子邮件也支持分段缓存。在&lt;a href=&quot;caching_with_rails&quot;&gt;Rails缓存指南中&lt;/a&gt;阅读有关缓存的更多信息。</target>
        </trans-unit>
        <trans-unit id="2a87156e114f876662714fbdca15c43e39c59af1" translate="yes" xml:space="preserve">
          <source>Fragment caching is used for caching various blocks within views without caching the entire action as a whole. This is useful when certain elements of an action change frequently or depend on complicated state while other parts rarely change or can be shared amongst multiple parties. The caching is done using the &lt;code&gt;cache&lt;/code&gt; helper available in the Action View. See &lt;a href=&quot;../../actionview/helpers/cachehelper&quot;&gt;ActionView::Helpers::CacheHelper&lt;/a&gt; for more information.</source>
          <target state="translated">片段缓存用于缓存视图中的各个块，而不缓存整个动作。当某个动作的某些元素频繁更改或依赖于复杂状态，而其他部分很少更改或可以在多方之间共享时，此功能很有用。使用操作视图中可用的 &lt;code&gt;cache&lt;/code&gt; 帮助器完成缓存。有关更多信息，请参见&lt;a href=&quot;../../actionview/helpers/cachehelper&quot;&gt;ActionView :: Helpers :: CacheHelper&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="58b54f8482b53e78899c9d0d675ac1b6e08786a1" translate="yes" xml:space="preserve">
          <source>Framework Behavior</source>
          <target state="translated">框架行为</target>
        </trans-unit>
        <trans-unit id="ae3c6299b8dae81ec79c1a95a20bbc4e1193b226" translate="yes" xml:space="preserve">
          <source>Frequently, though, you don't actually want to transform the variant right away. But rather simply refer to a specific variant that can be created by a controller on-demand. Like so:</source>
          <target state="translated">不过经常的是,你其实并不想马上转化变体。而是简单地引用一个特定的变体,可以由控制器按需创建。像这样。</target>
        </trans-unit>
        <trans-unit id="ce752397ff409fa4e1ebbf68cd6fd398265a939b" translate="yes" xml:space="preserve">
          <source>From Ruby on Rails 5.0 onwards, Ruby 2.2.2+ is the only supported Ruby version. Make sure you are on Ruby 2.2.2 version or greater, before you proceed.</source>
          <target state="translated">从Ruby on Rails 5.0开始,Ruby 2.2.2+是唯一支持的Ruby版本。在你继续之前,请确保你使用的是Ruby 2.2.2或更高版本。</target>
        </trans-unit>
        <trans-unit id="456e67dcfffd46875b07dcdd2979d27d3c444b6e" translate="yes" xml:space="preserve">
          <source>From address of the mail</source>
          <target state="translated">发信地址</target>
        </trans-unit>
        <trans-unit id="139e2dd0b8efa41c55955c25ca8ca1b8a8a86604" translate="yes" xml:space="preserve">
          <source>From now on, the victim and the attacker will co-use the web application with the same session: The session became valid and the victim didn't notice the attack.</source>
          <target state="translated">从现在开始,受害者和攻击者将以相同的会话共同使用网络应用。会话变成了有效的,受害者没有注意到攻击。</target>
        </trans-unit>
        <trans-unit id="f047f539e66f425c63629e920e4cd735314523a8" translate="yes" xml:space="preserve">
          <source>From the application root, run the model generator. Tell it to generate a &lt;code&gt;Comment&lt;/code&gt; model, with the related table having two columns: an &lt;code&gt;article_id&lt;/code&gt; integer and &lt;code&gt;text&lt;/code&gt; text column.</source>
          <target state="translated">从应用程序根目录运行模型生成器。告诉它生成一个 &lt;code&gt;Comment&lt;/code&gt; 模型，相关表具有两列： &lt;code&gt;article_id&lt;/code&gt; 整数和 &lt;code&gt;text&lt;/code&gt; text列。</target>
        </trans-unit>
        <trans-unit id="54b609484e9868e469cf6b8bf187983551d89dbf" translate="yes" xml:space="preserve">
          <source>From the controller's point of view, there are three ways to create an HTTP response:</source>
          <target state="translated">从控制器的角度来看,有三种方法可以创建HTTP响应。</target>
        </trans-unit>
        <trans-unit id="7a020e70c864c57b45c0daa7a9b3ad09b6ff5f4f" translate="yes" xml:space="preserve">
          <source>From the security standpoint, if you don't expect to have any markup in your response body, you should be using &lt;code&gt;render :plain&lt;/code&gt; as most browsers will escape unsafe content in the response for you.</source>
          <target state="translated">从安全的角度来看，如果您不希望在响应主体中包含任何标记，则应使用 &lt;code&gt;render :plain&lt;/code&gt; 因为大多数浏览器都会为您逃避响应中不安全的内容。</target>
        </trans-unit>
        <trans-unit id="b62ff8c72a56f8b7ea4baf56058aeff306c16c7b" translate="yes" xml:space="preserve">
          <source>From then on, what happens to the constant and the instance does not matter. For example, the constant could be deleted, the class object could be assigned to a different constant, be stored in no constant anymore, etc. Once the name is set, it doesn't change.</source>
          <target state="translated">从那时起,常量和实例会发生什么并不重要。例如,常量可以被删除,类对象可以被分配给另一个常量,被存储在没有常量的地方了,等等。一旦设置了名称,就不会改变。</target>
        </trans-unit>
        <trans-unit id="c4d63e4c56f1d2b74aaf3de1c3943ce348748d84" translate="yes" xml:space="preserve">
          <source>From:</source>
          <target state="translated">From:</target>
        </trans-unit>
        <trans-unit id="6b2e86b36efeac1ca193b435611b528921adc671" translate="yes" xml:space="preserve">
          <source>Full Text Search</source>
          <target state="translated">全文检索</target>
        </trans-unit>
        <trans-unit id="6f60e44f69f0342108671d1d4b76b126fc79dec6" translate="yes" xml:space="preserve">
          <source>Full path to template</source>
          <target state="translated">模板的完整路径</target>
        </trans-unit>
        <trans-unit id="6a708ed7181f3ee5df5f438b8078ce3255c607c0" translate="yes" xml:space="preserve">
          <source>Full usage example:</source>
          <target state="translated">完整的使用范例。</target>
        </trans-unit>
        <trans-unit id="c184078617fe80ea5c3db256e50c1973b7cd84e5" translate="yes" xml:space="preserve">
          <source>Full-Stack Examples</source>
          <target state="translated">全栈示例</target>
        </trans-unit>
        <trans-unit id="dc8cc17fb9092b97f58b24c8584410fc2ce9317e" translate="yes" xml:space="preserve">
          <source>Functional Tests</source>
          <target state="translated">功能测试</target>
        </trans-unit>
        <trans-unit id="81067236545c01740a7616a0c156bd3ad2fb44d4" translate="yes" xml:space="preserve">
          <source>Functional Tests for Your Controllers</source>
          <target state="translated">控制器的功能测试</target>
        </trans-unit>
        <trans-unit id="e3c6c55ccb738dd0789051385ca2b4191e1e1619" translate="yes" xml:space="preserve">
          <source>Functional and System Testing</source>
          <target state="translated">功能和系统测试</target>
        </trans-unit>
        <trans-unit id="726801e888550d5681ed8cb7509e8b159e096ee9" translate="yes" xml:space="preserve">
          <source>Functional tests are written as follows:</source>
          <target state="translated">功能测试的写法如下:</target>
        </trans-unit>
        <trans-unit id="a538a70b2f89e22b93f533e9e38e79404076b406" translate="yes" xml:space="preserve">
          <source>Functional tests do not verify whether the specified request type is accepted by the action, we're more concerned with the result. Request tests exist for this use case to make your tests more purposeful.</source>
          <target state="translated">功能测试并不验证指定的请求类型是否被动作接受,我们更关心的是结果。请求测试就是针对这个用例而存在的,让你的测试更有目的性。</target>
        </trans-unit>
        <trans-unit id="79fde2ac8490ff2b99ac9c9890e046fdff6e3659" translate="yes" xml:space="preserve">
          <source>Functionality</source>
          <target state="translated">Functionality</target>
        </trans-unit>
        <trans-unit id="2f47c4648e8524b4014506fdca1cac11cb6d83cd" translate="yes" xml:space="preserve">
          <source>Fundamentally HTML forms don't know about any sort of structured data, all they generate is name-value pairs, where pairs are just plain strings. The arrays and hashes you see in your application are the result of some parameter naming conventions that Rails uses.</source>
          <target state="translated">从根本上来说,HTML窗体不知道任何形式的结构化数据,它们生成的只是名-值对,其中的对只是普通的字符串。你在应用程序中看到的数组和哈希是Rails使用的一些参数命名约定的结果。</target>
        </trans-unit>
        <trans-unit id="f7aa71a09d6d67d4695dc0add7eb21a682057363" translate="yes" xml:space="preserve">
          <source>Furthermore, if you use the Rails form helpers to generate your forms, when a validation error occurs on a field, it will generate an extra &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; around the entry.</source>
          <target state="translated">此外，如果使用Rails表单助手来生成表单，则当字段上发生验证错误时，它将在条目周围产生一个额外的 &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f5924f715bbe18b4d7d8397af8ba720ee74d36d7" translate="yes" xml:space="preserve">
          <source>Furthermore, unlike &lt;code&gt;select&lt;/code&gt; and other &lt;code&gt;Relation&lt;/code&gt; scopes, &lt;code&gt;pluck&lt;/code&gt; triggers an immediate query, and thus cannot be chained with any further scopes, although it can work with scopes already constructed earlier:</source>
          <target state="translated">此外，与 &lt;code&gt;select&lt;/code&gt; 和其他 &lt;code&gt;Relation&lt;/code&gt; 作用域不同， &lt;code&gt;pluck&lt;/code&gt; 触发立即查询，因此不能与任何其他作用域链接，尽管它可以与早先构造的作用域一起使用：</target>
        </trans-unit>
        <trans-unit id="1e317e6b8e3a8bc6060b771e81e12256161ab847" translate="yes" xml:space="preserve">
          <source>GENERATOR_KEY</source>
          <target state="translated">GENERATOR_KEY</target>
        </trans-unit>
        <trans-unit id="f030bbbd32966cde41037b98a8849c46b76e4bc1" translate="yes" xml:space="preserve">
          <source>GET</source>
          <target state="translated">GET</target>
        </trans-unit>
        <trans-unit id="b600e280d8aedeb38543314e8324d445dbab011d" translate="yes" xml:space="preserve">
          <source>GET index</source>
          <target state="translated">GET指数</target>
        </trans-unit>
        <trans-unit id="0f8451a53ed163c2d67ec7a8e8b4b4e7f123cc0f" translate="yes" xml:space="preserve">
          <source>GET new POST create</source>
          <target state="translated">获取新的POST创建</target>
        </trans-unit>
        <trans-unit id="1a71d4473704c417a909b2d997465ff002873410" translate="yes" xml:space="preserve">
          <source>GET requests are checked for cross-origin JavaScript after rendering.</source>
          <target state="translated">GET请求在渲染后会检查是否有跨源JavaScript。</target>
        </trans-unit>
        <trans-unit id="2e91f2476d8d4e3ea4f15377afd7aad7ad52eab0" translate="yes" xml:space="preserve">
          <source>GET requests are not protected since they don't have side effects like writing to the database and don't leak sensitive information. JavaScript requests are an exception: a third-party site can use a &amp;lt;script&amp;gt; tag to reference a JavaScript URL on your site. When your JavaScript response loads on their site, it executes. With carefully crafted JavaScript on their end, sensitive data in your JavaScript response may be extracted. To prevent this, only XmlHttpRequest (known as XHR or Ajax) requests are allowed to make requests for JavaScript responses.</source>
          <target state="translated">GET请求不受保护，因为它们没有诸如写入数据库之类的副作用，并且不会泄漏敏感信息。JavaScript请求是一个例外：第三方站点可以使用&amp;lt;script&amp;gt;标记来引用您站点上的JavaScript URL。当您的JavaScript响应加载到他们的网站时，它就会执行。通过精心制作的JavaScript，可以提取JavaScript响应中的敏感数据。为防止这种情况，只允许XmlHttpRequest（称为XHR或Ajax）请求发出JavaScript响应请求。</target>
        </trans-unit>
        <trans-unit id="9cdbdc8dde9670885c36821f5c5352313c50d12b" translate="yes" xml:space="preserve">
          <source>GET show GET edit PATCH/PUT update DELETE destroy</source>
          <target state="translated">GET 显示 GET 编辑 PATCH/PUT 更新 DELETE 销毁</target>
        </trans-unit>
        <trans-unit id="7ab7f09cf6b3df5d7a649934c8905a8d66d856b1" translate="yes" xml:space="preserve">
          <source>GET()&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">GET（）&lt;a&gt;显示源&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="862460a4eaa4ab2cc4be9660a6e5e588d081c956" translate="yes" xml:space="preserve">
          <source>GIGABYTE</source>
          <target state="translated">GIGABYTE</target>
        </trans-unit>
        <trans-unit id="becd12810bf9a6ffec3b00da78a601586b644de5" translate="yes" xml:space="preserve">
          <source>GITKEEP_FILES</source>
          <target state="translated">GITKEEP_FILES</target>
        </trans-unit>
        <trans-unit id="5becf070a51b514072cd4c270ed3e295210d6ccc" translate="yes" xml:space="preserve">
          <source>GREEN</source>
          <target state="translated">GREEN</target>
        </trans-unit>
        <trans-unit id="4abd4fc7472c11a75bb252fdead83c4ed392ae03" translate="yes" xml:space="preserve">
          <source>GZipping your assets</source>
          <target state="translated">压缩您的资产</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
