<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="rails">
    <body>
      <group id="rails">
        <trans-unit id="7f0b8f085b6b34d32aa31323fd7908c3de645358" translate="yes" xml:space="preserve">
          <source>This will generate the singular URL &lt;code&gt;/basket&lt;/code&gt; instead of the usual &lt;code&gt;/baskets/:id&lt;/code&gt;.</source>
          <target state="translated">这将生成单个URL &lt;code&gt;/basket&lt;/code&gt; 而不是通常的 &lt;code&gt;/baskets/:id&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="663c5100646cf743362210ccbdfad09d1498a4e0" translate="yes" xml:space="preserve">
          <source>This will include both records as part of the cache key and updating either of them will expire the cache.</source>
          <target state="translated">这将包括这两条记录作为缓存密钥的一部分,更新其中任何一条都会使缓存失效。</target>
        </trans-unit>
        <trans-unit id="b352830fe1df01f65c1b930436aa1335a1c894a8" translate="yes" xml:space="preserve">
          <source>This will load all comments with a single query. This reduces the total number of queries to 3. In general, the number of queries will be 1 plus the number of associations named (except if some of the associations are polymorphic &lt;a href=&quot;classmethods#method-i-belongs_to&quot;&gt;belongs_to&lt;/a&gt; - see below).</source>
          <target state="translated">这将通过一个查询加载所有评论。这样可以将查询总数减少到3。通常，查询数将是1加上命名的关联数（除非某些关联是多态的&lt;a href=&quot;classmethods#method-i-belongs_to&quot;&gt;Emirates_to&lt;/a&gt;，请参见下文）。</target>
        </trans-unit>
        <trans-unit id="c4030dae2ab54a06c17c1020824cc6a1584faa4b" translate="yes" xml:space="preserve">
          <source>This will load posts and eager load the &lt;code&gt;approved_comments&lt;/code&gt; association, which contains only those comments that have been approved.</source>
          <target state="translated">这将加载帖子，并渴望加载 &lt;code&gt;approved_comments&lt;/code&gt; 关联，该关联仅包含那些已批准的评论。</target>
        </trans-unit>
        <trans-unit id="3c5bed33aa62906c23be081ddddbed686fcb8380" translate="yes" xml:space="preserve">
          <source>This will make the attack work: &quot;&amp;lt;sc&amp;lt;script&amp;gt;ript&amp;gt;&quot;.gsub(&quot;&amp;lt;script&amp;gt;&quot;, &quot;&quot;)</source>
          <target state="translated">这将使攻击起作用：&amp;ldquo; &amp;lt;sc &amp;lt;script&amp;gt; ript&amp;gt;&amp;rdquo;。gsub（&amp;ldquo; &amp;lt;script&amp;gt;&amp;rdquo;，&amp;ldquo;&amp;rdquo;）</target>
        </trans-unit>
        <trans-unit id="c9a0b2e4b0c8b84a85bcbba91bd96fa2b37fbed7" translate="yes" xml:space="preserve">
          <source>This will now generate &amp;ldquo;/basket&amp;rdquo; when a &lt;code&gt;Basket&lt;/code&gt; instance is passed to &lt;code&gt;link_to&lt;/code&gt; or &lt;code&gt;form_for&lt;/code&gt; instead of the standard &amp;ldquo;/baskets/:id&amp;rdquo;.</source>
          <target state="translated">现在，当将 &lt;code&gt;Basket&lt;/code&gt; 实例传递到 &lt;code&gt;link_to&lt;/code&gt; 或 &lt;code&gt;form_for&lt;/code&gt; 而不是标准&amp;ldquo; / baskets /：id&amp;rdquo; 时，它将生成&amp;ldquo; / basket &amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="14e0af3af91612b7c122e5d298a20e55a03249d0" translate="yes" xml:space="preserve">
          <source>This will now render the partial in &lt;code&gt;app/views/comments/_comment.html.erb&lt;/code&gt; once for each comment that is in the &lt;code&gt;@article.comments&lt;/code&gt; collection. As the &lt;code&gt;render&lt;/code&gt; method iterates over the &lt;code&gt;@article.comments&lt;/code&gt; collection, it assigns each comment to a local variable named the same as the partial, in this case &lt;code&gt;comment&lt;/code&gt;, which is then available in the partial for us to show.</source>
          <target state="translated">现在，这将为 &lt;code&gt;@article.comments&lt;/code&gt; 集合中的每个注释在 &lt;code&gt;app/views/comments/_comment.html.erb&lt;/code&gt; 中呈现一次。当 &lt;code&gt;render&lt;/code&gt; 方法遍历 &lt;code&gt;@article.comments&lt;/code&gt; 集合时，它将每个注释分配给与局部变量（在本例中为 &lt;code&gt;comment&lt;/code&gt; )相同的局部变量，然后在局部变量中显示该变量。</target>
        </trans-unit>
        <trans-unit id="b5b85ab1e962bdcb10ff35cb96c42d807c436122" translate="yes" xml:space="preserve">
          <source>This will output the following:</source>
          <target state="translated">这将输出以下内容。</target>
        </trans-unit>
        <trans-unit id="cd5591df3781acd48ab78e8490e397802d2e9698" translate="yes" xml:space="preserve">
          <source>This will override the controller-wide &amp;ldquo;weblog_standard&amp;rdquo; layout, and will render the help action with the &amp;ldquo;help&amp;rdquo; layout instead.</source>
          <target state="translated">这将覆盖整个控制器范围的&amp;ldquo; weblog_standard&amp;rdquo;布局，而将使用&amp;ldquo; help&amp;rdquo;布局呈现帮助操作。</target>
        </trans-unit>
        <trans-unit id="4f34fe9ed99abaa35b278b9d8369304819085494" translate="yes" xml:space="preserve">
          <source>This will produce:</source>
          <target state="translated">这将产生:</target>
        </trans-unit>
        <trans-unit id="fc2abc7eeaebbfaa37268ec8fbe05fccd7faae35" translate="yes" xml:space="preserve">
          <source>This will provide all three standard callbacks (before, around and after) for both the &lt;code&gt;:create&lt;/code&gt; and &lt;code&gt;:update&lt;/code&gt; methods. To implement, you need to wrap the methods you want callbacks on in a block so that the callbacks get a chance to fire:</source>
          <target state="translated">这将为 &lt;code&gt;:create&lt;/code&gt; 和 &lt;code&gt;:update&lt;/code&gt; 方法都提供所有三个标准回调（之前，前后和之后）。要实现，您需要将要回调的方法包装在一个块中，以便回调有机会触发：</target>
        </trans-unit>
        <trans-unit id="966e4162ba17319602b15108a248a2b32a2e9a47" translate="yes" xml:space="preserve">
          <source>This will provide route helpers such as &lt;code&gt;admin_photos_path&lt;/code&gt;, &lt;code&gt;new_admin_photo_path&lt;/code&gt;, etc.</source>
          <target state="translated">这将提供路由助手，例如 &lt;code&gt;admin_photos_path&lt;/code&gt; ， &lt;code&gt;new_admin_photo_path&lt;/code&gt; 等。</target>
        </trans-unit>
        <trans-unit id="0dd000d30ab70a07f9d33dc333d13603abf46d44" translate="yes" xml:space="preserve">
          <source>This will provide you with URLs such as &lt;code&gt;/bob/articles/1&lt;/code&gt; and will allow you to reference the &lt;code&gt;username&lt;/code&gt; part of the path as &lt;code&gt;params[:username]&lt;/code&gt; in controllers, helpers, and views.</source>
          <target state="translated">这将为您提供 &lt;code&gt;/bob/articles/1&lt;/code&gt; 之类的 URL，并允许您在控制器，帮助器和视图中将路径的 &lt;code&gt;username&lt;/code&gt; 部分作为 &lt;code&gt;params[:username]&lt;/code&gt; 引用。</target>
        </trans-unit>
        <trans-unit id="d549dce2bbbb5b998d08591ae8f24883abfa26a6" translate="yes" xml:space="preserve">
          <source>This will put the &lt;code&gt;Magical::Unicorns&lt;/code&gt; middleware on the end of the stack. You can use &lt;code&gt;insert_before&lt;/code&gt; if you wish to add a middleware before another.</source>
          <target state="translated">这会将 &lt;code&gt;Magical::Unicorns&lt;/code&gt; 中间件放在堆栈的末尾。如果希望在另一个中间件之前添加中间件，则可以使用 &lt;code&gt;insert_before&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f16dc26385bb93210fee9ce4b42f84f567d852aa" translate="yes" xml:space="preserve">
          <source>This will put the &lt;code&gt;Magical::Unicorns&lt;/code&gt; middleware on the end of the stack. You can use &lt;code&gt;insert_before&lt;/code&gt; if you wish to add a middleware before another:</source>
          <target state="translated">这会将 &lt;code&gt;Magical::Unicorns&lt;/code&gt; 中间件放在堆栈的末尾。如果要在另一个之前添加中间件，可以使用 &lt;code&gt;insert_before&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="35bee4fa664a5ce62139a41a4446f687f3b4a00f" translate="yes" xml:space="preserve">
          <source>This will read and stream the file 4kB at the time, avoiding loading the entire file into memory at once. You can turn off streaming with the &lt;code&gt;:stream&lt;/code&gt; option or adjust the block size with the &lt;code&gt;:buffer_size&lt;/code&gt; option.</source>
          <target state="translated">这将同时读取和流式传输文件4kB，避免将整个文件立即加载到内存中。您可以使用 &lt;code&gt;:stream&lt;/code&gt; 选项关闭流传输，或使用 &lt;code&gt;:buffer_size&lt;/code&gt; 选项调整块大小。</target>
        </trans-unit>
        <trans-unit id="6317ff1d9a51578dc98ad305996078e724cd16d2" translate="yes" xml:space="preserve">
          <source>This will ready a consumer that'll connect against &lt;code&gt;/cable&lt;/code&gt; on your server by default. The connection won't be established until you've also specified at least one subscription you're interested in having.</source>
          <target state="translated">这将为使用方做好准备，默认情况下，该使用方将与服务器上的 &lt;code&gt;/cable&lt;/code&gt; 连接。在您还指定了至少一个感兴趣的订阅之前，将不会建立连接。</target>
        </trans-unit>
        <trans-unit id="681aa462d49a41c8f583994cfef922a7f5a5136b" translate="yes" xml:space="preserve">
          <source>This will recognize &lt;code&gt;/photos/1/preview&lt;/code&gt; with GET, and route to the &lt;code&gt;preview&lt;/code&gt; action of &lt;code&gt;PhotosController&lt;/code&gt;, with the resource id value passed in &lt;code&gt;params[:id]&lt;/code&gt;. It will also create the &lt;code&gt;preview_photo_url&lt;/code&gt; and &lt;code&gt;preview_photo_path&lt;/code&gt; helpers.</source>
          <target state="translated">这将使用GET 识别 &lt;code&gt;/photos/1/preview&lt;/code&gt; ，并路由到 &lt;code&gt;PhotosController&lt;/code&gt; 的 &lt;code&gt;preview&lt;/code&gt; 操作，并将资源id值传递给 &lt;code&gt;params[:id]&lt;/code&gt; 。它还将创建 &lt;code&gt;preview_photo_url&lt;/code&gt; 和 &lt;code&gt;preview_photo_path&lt;/code&gt; 帮助器。</target>
        </trans-unit>
        <trans-unit id="b75dfb1d2eec29998635431a37b4da0b0cb28e57" translate="yes" xml:space="preserve">
          <source>This will recognize &lt;code&gt;/photos/1/preview&lt;/code&gt; with GET, and route to the preview action of &lt;code&gt;PhotosController&lt;/code&gt;. It will also create the &lt;code&gt;preview_photo_url&lt;/code&gt; and &lt;code&gt;preview_photo_path&lt;/code&gt; helpers.</source>
          <target state="translated">这将使用GET 识别 &lt;code&gt;/photos/1/preview&lt;/code&gt; ，并路由到 &lt;code&gt;PhotosController&lt;/code&gt; 的预览操作。它还将创建 &lt;code&gt;preview_photo_url&lt;/code&gt; 和 &lt;code&gt;preview_photo_path&lt;/code&gt; 帮助器。</target>
        </trans-unit>
        <trans-unit id="c086908b29df3abf3f09b68aac989519fe5ce75b" translate="yes" xml:space="preserve">
          <source>This will redirect the user to the main action if they tried to access a legacy action. The intention was to preserve the URL parameters to the legacy action and pass them to the main action. However, it can be exploited by attacker if they included a host key in the URL:</source>
          <target state="translated">如果用户试图访问遗留的操作,这将重定向到主操作。这样做的目的是为了保留遗留动作的URL参数,并将其传递给主动作。然而,如果攻击者在URL中包含了主机密钥,就可以利用这个漏洞。</target>
        </trans-unit>
        <trans-unit id="2a742e1f089acb7ff335ba3060e79e75ce69e493" translate="yes" xml:space="preserve">
          <source>This will redirect the user, while changing only the specified parts of the request, for example the &lt;code&gt;path&lt;/code&gt; option in the last example. &lt;code&gt;/stories&lt;/code&gt;, &lt;code&gt;/stories?foo=bar&lt;/code&gt;, redirect to &lt;code&gt;/posts&lt;/code&gt; and &lt;code&gt;/posts?foo=bar&lt;/code&gt; respectively.</source>
          <target state="translated">这将重定向用户，同时仅更改请求的指定部分，例如上一个示例中的 &lt;code&gt;path&lt;/code&gt; 选项。 &lt;code&gt;/stories&lt;/code&gt; ， &lt;code&gt;/stories?foo=bar&lt;/code&gt; ，分别重定向到 &lt;code&gt;/posts&lt;/code&gt; 和 &lt;code&gt;/posts?foo=bar&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8d6fda0736cb28123e462ff25d48c8367bb386f9" translate="yes" xml:space="preserve">
          <source>This will redirect the user, while ignoring certain parts of the request, including query string, etc. &lt;code&gt;/stories&lt;/code&gt;, &lt;code&gt;/stories?foo=bar&lt;/code&gt;, etc all redirect to &lt;code&gt;/posts&lt;/code&gt;.</source>
          <target state="translated">这将重定向用户，而忽略请求的某些部分，包括查询字符串等 &lt;code&gt;/stories&lt;/code&gt; ， &lt;code&gt;/stories?foo=bar&lt;/code&gt; 等等全部都重定向到 &lt;code&gt;/posts&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a01ce434bc393a0a6550820837934c7b8473be83" translate="yes" xml:space="preserve">
          <source>This will render &lt;code&gt;advertiser/_ad.html.erb&lt;/code&gt; and pass the local variable &lt;code&gt;ad&lt;/code&gt; to the template for display. An iteration object will automatically be made available to the template with a name of the form &lt;code&gt;partial_name_iteration&lt;/code&gt;. The iteration object has knowledge about which index the current object has in the collection and the total size of the collection. The iteration object also has two convenience methods, &lt;code&gt;first?&lt;/code&gt; and &lt;code&gt;last?&lt;/code&gt;. In the case of the example above, the template would be fed &lt;code&gt;ad_iteration&lt;/code&gt;. For backwards compatibility the &lt;code&gt;partial_name_counter&lt;/code&gt; is still present and is mapped to the iteration's &lt;code&gt;index&lt;/code&gt; method.</source>
          <target state="translated">这将呈现 &lt;code&gt;advertiser/_ad.html.erb&lt;/code&gt; 并将本地变量 &lt;code&gt;ad&lt;/code&gt; 传递到模板进行显示。名称为 &lt;code&gt;partial_name_iteration&lt;/code&gt; 形式的迭代对象将自动提供给模板。迭代对象了解当前对象在集合中具有哪个索引以及集合的总大小。迭代对象还具有两个便捷方法， &lt;code&gt;first?&lt;/code&gt; 和 &lt;code&gt;last?&lt;/code&gt; 。在上述示例的情况下，将向模板提供 &lt;code&gt;ad_iteration&lt;/code&gt; 。为了向后兼容， &lt;code&gt;partial_name_counter&lt;/code&gt; 仍然存在，并映射到迭代的 &lt;code&gt;index&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="698a441c5b09122ba621305f26cddd605525816b" translate="yes" xml:space="preserve">
          <source>This will render a book with &lt;code&gt;special?&lt;/code&gt; set with the &lt;code&gt;special_show&lt;/code&gt; template, while other books will render with the default &lt;code&gt;show&lt;/code&gt; template.</source>
          <target state="translated">这样会使书有 &lt;code&gt;special?&lt;/code&gt; 设置了 &lt;code&gt;special_show&lt;/code&gt; 模板，而其他书籍将使用默认的 &lt;code&gt;show&lt;/code&gt; 模板进行渲染。</target>
        </trans-unit>
        <trans-unit id="a5d0b81f7e4fa3fa841e449fba16f64dc99d9bbb" translate="yes" xml:space="preserve">
          <source>This will render a console inside your view. You don't need to care about the location of the &lt;code&gt;console&lt;/code&gt; call; it won't be rendered on the spot of its invocation but next to your HTML content.</source>
          <target state="translated">这将在您的视图内呈现一个控制台。您无需关心 &lt;code&gt;console&lt;/code&gt; 调用的位置；它不会在调用时立即呈现，而是在HTML内容旁边呈现。</target>
        </trans-unit>
        <trans-unit id="eb68ff9be1ac7859d78b72758e0512fdc7ac4428" translate="yes" xml:space="preserve">
          <source>This will render a file named &lt;code&gt;_menu.html.erb&lt;/code&gt; at that point within the view being rendered. Note the leading underscore character: partials are named with a leading underscore to distinguish them from regular views, even though they are referred to without the underscore. This holds true even when you're pulling in a partial from another folder:</source>
          <target state="translated">这将在正在渲染的视图中的那个点渲染一个名为 &lt;code&gt;_menu.html.erb&lt;/code&gt; 的文件。注意前导下划线字符：局部变量以前导下划线命名，以使它们与常规视图区分开，即使未带下划线引用它们也是如此。即使从另一个文件夹中提取部分文件也是如此：</target>
        </trans-unit>
        <trans-unit id="4f45b4bd7eb9c27a0f58eb80a13d0e37782d9ecd" translate="yes" xml:space="preserve">
          <source>This will render a file named &lt;code&gt;_menu.html.erb&lt;/code&gt; at that point within the view that is being rendered. Note the leading underscore character: partials are named with a leading underscore to distinguish them from regular views, even though they are referred to without the underscore. This holds true even when you're pulling in a partial from another folder:</source>
          <target state="translated">这将在正在渲染的视图内的那个点渲染一个名为 &lt;code&gt;_menu.html.erb&lt;/code&gt; 的文件。注意前导下划线字符：局部变量以前导下划线命名，以使它们与常规视图区分开，即使未带下划线引用它们也是如此。即使从另一个文件夹中提取部分文件也是如此：</target>
        </trans-unit>
        <trans-unit id="56dfc66467558f6050b46077a3a4306dfb20347f" translate="yes" xml:space="preserve">
          <source>This will render the layout for each user and yield to the block, passing the user, each time.</source>
          <target state="translated">这将为每个用户渲染布局,并屈服于块,通过用户,每次。</target>
        </trans-unit>
        <trans-unit id="6ba11e5dcb30c836570ac2f15aecd3c4ec288990" translate="yes" xml:space="preserve">
          <source>This will render the partial &lt;code&gt;advertisement/_ad.html.erb&lt;/code&gt; regardless of which controller this is being called from.</source>
          <target state="translated">无论从哪个控制器调用它，这都将呈现局部 &lt;code&gt;advertisement/_ad.html.erb&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4d230c74d01704cac9b56b96aa1e51fae1536b68" translate="yes" xml:space="preserve">
          <source>This will render the show template if the request isn't sending a matching ETag or If-Modified-Since header and just a &lt;code&gt;304 Not
Modified&lt;/code&gt; response if there's a match.</source>
          <target state="translated">如果请求未发送匹配的ETag或If-Modified-Since标头，则发送show模板，如果存在匹配，则仅显示 &lt;code&gt;304 Not Modified&lt;/code&gt; 响应。</target>
        </trans-unit>
        <trans-unit id="c27ca8b6330ab956ecffed5c9367136b728d74d8" translate="yes" xml:space="preserve">
          <source>This will render the template 'another_template.html.erb' for the HTML part and use the rendered text for the text part. The render command is the same one used inside of Action Controller, so you can use all the same options, such as &lt;code&gt;:text&lt;/code&gt;, &lt;code&gt;:inline&lt;/code&gt; etc.</source>
          <target state="translated">这将为HTML部分呈现模板&amp;ldquo; another_template.html.erb&amp;rdquo;，并为文本部分使用呈现的文本。render命令与Action Controller内部使用的命令相同，因此可以使用所有相同的选项，例如 &lt;code&gt;:text&lt;/code&gt; ， &lt;code&gt;:inline&lt;/code&gt; 等。</target>
        </trans-unit>
        <trans-unit id="e7b4fcca36c8532c33b51dcfa96b075aea80995a" translate="yes" xml:space="preserve">
          <source>This will result in a &lt;code&gt;params&lt;/code&gt; hash that looks like</source>
          <target state="translated">这将导致 &lt;code&gt;params&lt;/code&gt; 哈希看起来像</target>
        </trans-unit>
        <trans-unit id="663febf4758d5a2b69988d78f730cb88d605e99c" translate="yes" xml:space="preserve">
          <source>This will result in a single SQL query with joins along the lines of: &lt;code&gt;LEFT OUTER JOIN comments ON comments.post_id = posts.id&lt;/code&gt; and &lt;code&gt;LEFT OUTER JOIN authors ON authors.id = posts.author_id&lt;/code&gt;. Note that using conditions like this can have unintended consequences. In the above example, posts with no approved comments are not returned at all because the conditions apply to the SQL statement as a whole and not just to the association.</source>
          <target state="translated">这将导致单个SQL查询，并带有如下所示的联接： &lt;code&gt;LEFT OUTER JOIN comments ON comments.post_id = posts.id&lt;/code&gt; 和 &lt;code&gt;LEFT OUTER JOIN authors ON authors.id = posts.author_id&lt;/code&gt; 。请注意，使用这样的条件可能会产生意想不到的后果。在上面的示例中，根本没有返回没有批注的帖子，因为这些条件不仅适用于整个SQL语句，而且还适用于整个SQL语句。</target>
        </trans-unit>
        <trans-unit id="d3e4840c8603d5b4a06e304043585fcc08a41571" translate="yes" xml:space="preserve">
          <source>This will result in the following SQL query:</source>
          <target state="translated">这将导致以下SQL查询。</target>
        </trans-unit>
        <trans-unit id="3c075ba2bbd1d0762f769564b87ddd6d9bf1b94e" translate="yes" xml:space="preserve">
          <source>This will result in the following SQL:</source>
          <target state="translated">这将导致以下SQL。</target>
        </trans-unit>
        <trans-unit id="5d54ad2fd65b654fba8f2df8951cf535f8d73c2d" translate="yes" xml:space="preserve">
          <source>This will return a number (possibly a floating point number such as 3.14159265) representing the average value in the field.</source>
          <target state="translated">这将返回一个数字(可能是一个浮点数,如3.14159265),代表该字段的平均值。</target>
        </trans-unit>
        <trans-unit id="5c2fba0c077f2ff172d17f8a4d2d1cdc7c5900ed" translate="yes" xml:space="preserve">
          <source>This will rollback the latest migration, either by reverting the &lt;code&gt;change&lt;/code&gt; method or by running the &lt;code&gt;down&lt;/code&gt; method. If you need to undo several migrations you can provide a &lt;code&gt;STEP&lt;/code&gt; parameter:</source>
          <target state="translated">通过还原 &lt;code&gt;change&lt;/code&gt; 方法或运行 &lt;code&gt;down&lt;/code&gt; 方法，这将回滚最新的迁移。如果您需要撤消多个迁移，则可以提供一个 &lt;code&gt;STEP&lt;/code&gt; 参数：</target>
        </trans-unit>
        <trans-unit id="d237910321741fee8d5a4eb892438f7067240437" translate="yes" xml:space="preserve">
          <source>This will route to the &lt;code&gt;Admin::UserPermissions&lt;/code&gt; controller.</source>
          <target state="translated">这将路由到 &lt;code&gt;Admin::UserPermissions&lt;/code&gt; 控制器。</target>
        </trans-unit>
        <trans-unit id="164157eae978fee986e74cfd1b4ddc538abbf3d3" translate="yes" xml:space="preserve">
          <source>This will run all test methods from the test case.</source>
          <target state="translated">这将运行测试用例中的所有测试方法。</target>
        </trans-unit>
        <trans-unit id="b72ee07c69c7720817ebb51926bfb311c6c80efe" translate="yes" xml:space="preserve">
          <source>This will send the supplied string to the browser with a MIME type of &lt;code&gt;text/javascript&lt;/code&gt;.</source>
          <target state="translated">这会将提供的字符串以MIME类型的 &lt;code&gt;text/javascript&lt;/code&gt; 发送到浏览器。</target>
        </trans-unit>
        <trans-unit id="fd015d1164984982431932abd6f39ff61b13a6eb" translate="yes" xml:space="preserve">
          <source>This will simply find the first record in the database, and grants access to this user.</source>
          <target state="translated">这将简单地找到数据库中的第一条记录,并授予该用户访问权。</target>
        </trans-unit>
        <trans-unit id="e4f89e91cdbccde5c8e48b2382bbcf38015ed859" translate="yes" xml:space="preserve">
          <source>This will tell you that everything got generated properly and you are ready to start adding functionality.</source>
          <target state="translated">这将告诉你,所有的东西都正确生成了,你可以开始添加功能了。</target>
        </trans-unit>
        <trans-unit id="40c8fe16e6bbe35419e9e8cc45d6fae5b1e8e450" translate="yes" xml:space="preserve">
          <source>This will throw an &lt;code&gt;ArgumentError&lt;/code&gt; if the argument doesn't respond to &lt;code&gt;#include?&lt;/code&gt;.</source>
          <target state="translated">如果参数不响应 &lt;code&gt;#include?&lt;/code&gt; 将抛出 &lt;code&gt;ArgumentError&lt;/code&gt; 。。</target>
        </trans-unit>
        <trans-unit id="1f01719616b6fad3daac567c1a4643143ed728f1" translate="yes" xml:space="preserve">
          <source>This will work fine, because both the &lt;code&gt;Supplier&lt;/code&gt; and the &lt;code&gt;Account&lt;/code&gt; class are defined within the same scope. But the following will &lt;em&gt;not&lt;/em&gt; work, because &lt;code&gt;Supplier&lt;/code&gt; and &lt;code&gt;Account&lt;/code&gt; are defined in different scopes:</source>
          <target state="translated">这将正常工作，因为 &lt;code&gt;Supplier&lt;/code&gt; 和 &lt;code&gt;Account&lt;/code&gt; 类都在同一范围内定义。但是，下面将&lt;em&gt;不&lt;/em&gt;工作，因为 &lt;code&gt;Supplier&lt;/code&gt; 和 &lt;code&gt;Account&lt;/code&gt; 在不同的范围定义：</target>
        </trans-unit>
        <trans-unit id="d4035999e6b772290381343414db9ca8460af90c" translate="yes" xml:space="preserve">
          <source>This will work similarly to formats and MIME types negotiation. If there is no &lt;code&gt;:tablet&lt;/code&gt; variant declared, the &lt;code&gt;:phone&lt;/code&gt; variant will be used:</source>
          <target state="translated">这将与格式和MIME类型协商类似。如果未声明 &lt;code&gt;:tablet&lt;/code&gt; 变体，则将使用 &lt;code&gt;:phone&lt;/code&gt; 变体：</target>
        </trans-unit>
        <trans-unit id="c787e17fa75f3571fe17f46c680fd9141652976c" translate="yes" xml:space="preserve">
          <source>This works by using a type column in addition to a foreign key to specify the associated record. In the Asset example, you'd need an &lt;code&gt;attachable_id&lt;/code&gt; integer column and an &lt;code&gt;attachable_type&lt;/code&gt; string column.</source>
          <target state="translated">通过使用外键之外的类型列来指定关联的记录，这可以工作。在Asset示例中，您需要一个 &lt;code&gt;attachable_id&lt;/code&gt; 整数列和一个 &lt;code&gt;attachable_type&lt;/code&gt; 字符串列。</target>
        </trans-unit>
        <trans-unit id="780f4766354c112798620bcc4f97e9f1ea86e865" translate="yes" xml:space="preserve">
          <source>This works exactly the same as:</source>
          <target state="translated">这与。</target>
        </trans-unit>
        <trans-unit id="e158ec7313604d8047a3dd3bab1a9f48db091ea6" translate="yes" xml:space="preserve">
          <source>This works for mysql2 where table.column can be used to resolve ambiguity.</source>
          <target state="translated">这适用于mysql2,其中table.column可以用来解决歧义。</target>
        </trans-unit>
        <trans-unit id="9a3fe6d3ce74d58b904dcedaa6687cd2f76af008" translate="yes" xml:space="preserve">
          <source>This works the same as &lt;a href=&quot;classmethods#method-i-increment_counter&quot;&gt;increment_counter&lt;/a&gt; but reduces the column value by 1 instead of increasing it.</source>
          <target state="translated">它的工作原理与&lt;a href=&quot;classmethods#method-i-increment_counter&quot;&gt;增量&lt;/a&gt;计数器相同，只是将列值减少1而不是增加。</target>
        </trans-unit>
        <trans-unit id="cb94a6cf1a0ae3ce707fd86dde6870669f262cb5" translate="yes" xml:space="preserve">
          <source>This works with any class that mixes in &lt;code&gt;GlobalID::Identification&lt;/code&gt;, which by default has been mixed into Active Record classes.</source>
          <target state="translated">它适用于任何混合了 &lt;code&gt;GlobalID::Identification&lt;/code&gt; 类，默认情况下，该类已混合到Active Record类中。</target>
        </trans-unit>
        <trans-unit id="4e6d15fd8e37d7ed52955318d0e70d4b257f3f1d" translate="yes" xml:space="preserve">
          <source>This would add something like &quot;Process data files (0.34523)&quot; to the log, which you can then use to compare timings when optimizing your code.</source>
          <target state="translated">这将在日志中添加类似 &quot;Process data files (0.34523)&quot;这样的内容,然后你可以在优化代码时使用它来比较时间。</target>
        </trans-unit>
        <trans-unit id="f96ee07389e9746ed51318aa375fc3f3bc4bf41f" translate="yes" xml:space="preserve">
          <source>This would cause the routing to recognize paths such as:</source>
          <target state="translated">这将导致路由识别路径,如。</target>
        </trans-unit>
        <trans-unit id="91a4b5a51dd6ff89a612b1513b5671963be035af" translate="yes" xml:space="preserve">
          <source>This would detect that there are no books with the specified ID, populate the &lt;code&gt;@books&lt;/code&gt; instance variable with all the books in the model, and then directly render the &lt;code&gt;index.html.erb&lt;/code&gt; template, returning it to the browser with a flash alert message to tell the user what happened.</source>
          <target state="translated">这将检测到没有具有指定ID 的书籍，将模型中的所有书籍填充到 &lt;code&gt;@books&lt;/code&gt; 实例变量中，然后直接呈现 &lt;code&gt;index.html.erb&lt;/code&gt; 模板，并将其返回到浏览器并带有Flash Alert消息，以告诉用户发生了什么。</target>
        </trans-unit>
        <trans-unit id="44d5f8c2e2d24f1f452b35591a3b73609c5c7b3a" translate="yes" xml:space="preserve">
          <source>This would first render &lt;code&gt;advertiser/_account.html.erb&lt;/code&gt; with &lt;code&gt;@buyer&lt;/code&gt; passed in as the local variable &lt;code&gt;account&lt;/code&gt;, then render &lt;code&gt;advertiser/_ad.html.erb&lt;/code&gt; and pass the local variable &lt;code&gt;ad&lt;/code&gt; to the template for display.</source>
          <target state="translated">这将使得第一 &lt;code&gt;advertiser/_account.html.erb&lt;/code&gt; 与 &lt;code&gt;@buyer&lt;/code&gt; 传入的局部变量 &lt;code&gt;account&lt;/code&gt; ，然后渲染 &lt;code&gt;advertiser/_ad.html.erb&lt;/code&gt; 和局部变量传递 &lt;code&gt;ad&lt;/code&gt; 的模板显示。</target>
        </trans-unit>
        <trans-unit id="aa4a7abea851f46070c7c730755deacdb8ffc3db" translate="yes" xml:space="preserve">
          <source>This would generate SQL like:</source>
          <target state="translated">这样就会生成类似的SQL。</target>
        </trans-unit>
        <trans-unit id="0f0e1c1f0cdaa556dfdba1dd229fa16060a7947f" translate="yes" xml:space="preserve">
          <source>This would generate a query which contains a &lt;code&gt;LEFT OUTER JOIN&lt;/code&gt; whereas the &lt;code&gt;joins&lt;/code&gt; method would generate one using the &lt;code&gt;INNER JOIN&lt;/code&gt; function instead.</source>
          <target state="translated">这将生成包含 &lt;code&gt;LEFT OUTER JOIN&lt;/code&gt; 的查询，而 &lt;code&gt;joins&lt;/code&gt; 方法将使用 &lt;code&gt;INNER JOIN&lt;/code&gt; 函数生成一个查询。</target>
        </trans-unit>
        <trans-unit id="3e354575ff67ecbdf5b3d0737b5525ef034f36bd" translate="yes" xml:space="preserve">
          <source>This would look for a partial named &lt;code&gt;_link_area.html.erb&lt;/code&gt; and render it using the layout &lt;code&gt;_graybar.html.erb&lt;/code&gt;. Note that layouts for partials follow the same leading-underscore naming as regular partials, and are placed in the same folder with the partial that they belong to (not in the master &lt;code&gt;layouts&lt;/code&gt; folder).</source>
          <target state="translated">这将查找名为 &lt;code&gt;_link_area.html.erb&lt;/code&gt; 的部分，并使用 &lt;code&gt;_graybar.html.erb&lt;/code&gt; 布局对其进行呈现。请注意，局部 &lt;code&gt;layouts&lt;/code&gt; 与常规局部布局遵循相同的前导下划线命名，并与它们所属的局部放在同一文件夹中（不在主布局文件夹中）。</target>
        </trans-unit>
        <trans-unit id="6b55ed4dd6ec101ed4ad3780bfa5055c960f2b37" translate="yes" xml:space="preserve">
          <source>This would produce the following header:</source>
          <target state="translated">这将产生以下标题。</target>
        </trans-unit>
        <trans-unit id="15722a91035ff2ace8574da4506361bd5cf74ae0" translate="yes" xml:space="preserve">
          <source>This would re-raise only the &lt;code&gt;MissingTranslationData&lt;/code&gt; exception, passing all other input to the default exception handler.</source>
          <target state="translated">这只会重新引发 &lt;code&gt;MissingTranslationData&lt;/code&gt; 异常，并将所有其他输入传递给默认异常处理程序。</target>
        </trans-unit>
        <trans-unit id="8af52b3704413d695e1faff03a478a965a6c0a3c" translate="yes" xml:space="preserve">
          <source>This would render &amp;ldquo;advertiser/_account.html.erb&amp;rdquo;.</source>
          <target state="translated">这将呈现&amp;ldquo; advertiser / _account.html.erb&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="856505a9cf7e940add8cfdd09b3f5ea89f8e82d7" translate="yes" xml:space="preserve">
          <source>This would result in &lt;code&gt;params[:person][:addresses]&lt;/code&gt; being an array of hashes with keys &lt;code&gt;line1&lt;/code&gt;, &lt;code&gt;line2&lt;/code&gt;, and &lt;code&gt;city&lt;/code&gt;.</source>
          <target state="translated">这将导致 &lt;code&gt;params[:person][:addresses]&lt;/code&gt; 是具有键 &lt;code&gt;line1&lt;/code&gt; ， &lt;code&gt;line2&lt;/code&gt; 和 &lt;code&gt;city&lt;/code&gt; 的哈希数组。</target>
        </trans-unit>
        <trans-unit id="2ffcd031fa00742bc180b1c7dddb773b8624776c" translate="yes" xml:space="preserve">
          <source>This would result in &lt;code&gt;params[:person][:phone_number]&lt;/code&gt; being an array containing the inputted phone numbers.</source>
          <target state="translated">这将导致 &lt;code&gt;params[:person][:phone_number]&lt;/code&gt; 是包含输入电话号码的数组。</target>
        </trans-unit>
        <trans-unit id="41e985c3b4dfd7c8234665043e2275c3407a0535" translate="yes" xml:space="preserve">
          <source>This would then turn the above code for &lt;code&gt;set_author&lt;/code&gt; into this:</source>
          <target state="translated">然后，将以上 &lt;code&gt;set_author&lt;/code&gt; 的代码转换为：</target>
        </trans-unit>
        <trans-unit id="56f479c2662bdcaf2c0265c4d70139b0ac312c97" translate="yes" xml:space="preserve">
          <source>This would transparently migrate your existing &lt;code&gt;Marshal&lt;/code&gt;-serialized cookies into the new &lt;code&gt;JSON&lt;/code&gt;-based format.</source>
          <target state="translated">这将透明地将您现有的由 &lt;code&gt;Marshal&lt;/code&gt; 序列化的cookie 迁移为基于 &lt;code&gt;JSON&lt;/code&gt; 的新格式。</target>
        </trans-unit>
        <trans-unit id="15e58a84e6445aea236c46b5b12a25f2d090ecec" translate="yes" xml:space="preserve">
          <source>This writes the path to the particular asset being referenced.</source>
          <target state="translated">这写出了被引用的特定资产的路径。</target>
        </trans-unit>
        <trans-unit id="59913b15baf3eedd5d31cc088230eeac598bb7c9" translate="yes" xml:space="preserve">
          <source>This writes the path to the particular asset being referenced. In this example, it would make sense to have an image in one of the asset load paths, such as &lt;code&gt;app/assets/images/image.png&lt;/code&gt;, which would be referenced here. If this image is already available in &lt;code&gt;public/assets&lt;/code&gt; as a fingerprinted file, then that path is referenced.</source>
          <target state="translated">这将写入到引用的特定资产的路径。在此示例中，在资产加载路径之一（例如 &lt;code&gt;app/assets/images/image.png&lt;/code&gt; ）中具有图像将是有意义的，此处将对其进行引用。如果此图像已在 &lt;code&gt;public/assets&lt;/code&gt; 作为指纹文件可用，则将引用该路径。</target>
        </trans-unit>
        <trans-unit id="b750bf91c273e4f3ddb4f320d7202fe3ec31f456" translate="yes" xml:space="preserve">
          <source>Thor</source>
          <target state="translated">Thor</target>
        </trans-unit>
        <trans-unit id="6983f57bf3da8d5d31c7f429bcfee6f63af50673" translate="yes" xml:space="preserve">
          <source>Thor::Group</source>
          <target state="translated">Thor::Group</target>
        </trans-unit>
        <trans-unit id="d4fda76aa6b524cc426498c47eb39a3ee08e52f5" translate="yes" xml:space="preserve">
          <source>Those labels can be customized using I18n under the &lt;code&gt;helpers.submit&lt;/code&gt; key (the same as submit helper) and using &lt;code&gt;%{model}&lt;/code&gt; for translation interpolation:</source>
          <target state="translated">可以使用 &lt;code&gt;helpers.submit&lt;/code&gt; 键下的I18n（与Submit helper相同）并使用 &lt;code&gt;%{model}&lt;/code&gt; 进行翻译插值来定制这些标签：</target>
        </trans-unit>
        <trans-unit id="5213151b847d46237ea5b6531280a5a655b15e61" translate="yes" xml:space="preserve">
          <source>Those labels can be customized using I18n under the &lt;code&gt;helpers.submit&lt;/code&gt; key and using &lt;code&gt;%{model}&lt;/code&gt; for translation interpolation:</source>
          <target state="translated">可以使用 &lt;code&gt;helpers.submit&lt;/code&gt; 键下的I18n 并使用 &lt;code&gt;%{model}&lt;/code&gt; 进行翻译插值来定制这些标签：</target>
        </trans-unit>
        <trans-unit id="5b08d8785f315537bf824bc86ed876bc1b75d232" translate="yes" xml:space="preserve">
          <source>Though if both the secret and the cipher was changed at the same time, the above should be combined into:</source>
          <target state="translated">虽然如果秘密和密文同时改变,上述内容应该合并成。</target>
        </trans-unit>
        <trans-unit id="9d824669e552950472572d84ecc126191a248c6b" translate="yes" xml:space="preserve">
          <source>Though the &lt;a href=&quot;classmethods#method-i-transaction&quot;&gt;transaction&lt;/a&gt; class method is called on some Active Record class, the objects within the transaction block need not all be instances of that class. This is because transactions are per-database connection, not per-model.</source>
          <target state="translated">尽管在某些Active Record类上调用了&lt;a href=&quot;classmethods#method-i-transaction&quot;&gt;事务&lt;/a&gt;类方法，但是事务块内的对象不必全部都是该类的实例。这是因为事务是每个数据库的连接，而不是每个模型的连接。</target>
        </trans-unit>
        <trans-unit id="f224d0c3de1019984b8ae2b2815fdd756e88990c" translate="yes" xml:space="preserve">
          <source>Though the above would most likely be combined into one rotation:</source>
          <target state="translated">虽然以上很有可能被合并成一个轮回。</target>
        </trans-unit>
        <trans-unit id="66fa2a7b7cfaed86c5ba19ef94fe296967ab46d3" translate="yes" xml:space="preserve">
          <source>Threaded Active Job adapters, including the built-in Async, will likewise execute several jobs at the same time. Action Cable channels are managed this way too.</source>
          <target state="translated">线程主动作业适配器,包括内置的Async,同样会同时执行多个作业。动作有线电视频道也是这样管理的。</target>
        </trans-unit>
        <trans-unit id="fb3738e0b3f2e613545ddf6035342e58d072708f" translate="yes" xml:space="preserve">
          <source>Threading and Code Execution in Rails</source>
          <target state="translated">Rails中的线程和代码执行</target>
        </trans-unit>
        <trans-unit id="bb12e8aaaecc434fd51e448fe7669bced1bdd107" translate="yes" xml:space="preserve">
          <source>Threads</source>
          <target state="translated">Threads</target>
        </trans-unit>
        <trans-unit id="2844122520e178f0a9d4d76f874b0a9ea6926882" translate="yes" xml:space="preserve">
          <source>Threadsafe, fair, LIFO queue. Meant to be used by &lt;a href=&quot;../connectionpool&quot;&gt;ConnectionPool&lt;/a&gt; with which it shares a Monitor.</source>
          <target state="translated">线程安全，公平，LIFO队列。意味着通过使用&lt;a href=&quot;../connectionpool&quot;&gt;连接池&lt;/a&gt;与它共享一个监视器。</target>
        </trans-unit>
        <trans-unit id="e8551f86c307e1f569085e575597e44ab3d9521c" translate="yes" xml:space="preserve">
          <source>Three kinds of callbacks are supported: before callbacks, run before a certain event; after callbacks, run after the event; and around callbacks, blocks that surround the event, triggering it when they yield. Callback code can be contained in instance methods, procs or lambdas, or callback objects that respond to certain predetermined methods. See &lt;code&gt;ClassMethods.set_callback&lt;/code&gt; for details.</source>
          <target state="translated">支持三种回调：在回调之前，在特定事件之前运行；在回调之后，在事件之后运行；以及回调周围，围绕事件的块，并在事件产生时触发它。回调代码可以包含在实例方法，procs或lambda或响应某些预定方法的回调对象中。有关详细信息，请参见 &lt;code&gt;ClassMethods.set_callback&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d78446bdeec376dff2212d816a0563b91589188e" translate="yes" xml:space="preserve">
          <source>Thus &lt;code&gt;data-user-id&lt;/code&gt; can be accessed as &lt;code&gt;dataset.userId&lt;/code&gt;.</source>
          <target state="translated">因此，可以将 &lt;code&gt;data-user-id&lt;/code&gt; 作为 &lt;code&gt;dataset.userId&lt;/code&gt; 进行访问。</target>
        </trans-unit>
        <trans-unit id="533163ca96b70fcdb1bd5e4ec1f7540f6ee285cc" translate="yes" xml:space="preserve">
          <source>Thus the following calls are equivalent:</source>
          <target state="translated">因此,以下调用是等价的。</target>
        </trans-unit>
        <trans-unit id="b7fd6a465cd88627e0ee8a7a50b362426d406516" translate="yes" xml:space="preserve">
          <source>Thus we encourage everybody to experiment with new ideas and features in gems or other libraries and make them available to the community. (Don't forget to announce your work on our &lt;a href=&quot;https://groups.google.com/forum/#!forum/rails-i18n&quot;&gt;mailing list&lt;/a&gt;!)</source>
          <target state="translated">因此，我们鼓励所有人在宝石或其他图书馆中尝试新的想法和功能，并将其提供给社区。（别忘了在我们的&lt;a href=&quot;https://groups.google.com/forum/#!forum/rails-i18n&quot;&gt;邮件列表中&lt;/a&gt;宣布您的工作！）</target>
        </trans-unit>
        <trans-unit id="64299f77b698aabcadcfb4203c1f1d473b65ee14" translate="yes" xml:space="preserve">
          <source>Thus, after a simple require like:</source>
          <target state="translated">因此,经过简单的要求像。</target>
        </trans-unit>
        <trans-unit id="125198aa1018b31d1828449e8e9c3447d4fda2bf" translate="yes" xml:space="preserve">
          <source>Thus, an informal expression like &quot;the &lt;code&gt;String&lt;/code&gt; class&quot; technically means the class object stored in the constant called &quot;String&quot;. That constant, in turn, belongs to the class object stored in the constant called &quot;Object&quot;.</source>
          <target state="translated">因此，非正式表达式（例如&amp;ldquo; &lt;code&gt;String&lt;/code&gt; 类&amp;rdquo;）在技术上意味着存储在称为&amp;ldquo; String&amp;rdquo;的常量中的类对象。该常量又属于存储在称为&amp;ldquo;对象&amp;rdquo;的常量中的类对象。</target>
        </trans-unit>
        <trans-unit id="943596e1932a1bfbf04c7e6b388cd68e2d80ea35" translate="yes" xml:space="preserve">
          <source>Thus, in our example it will try the following keys in this order and return the first result:</source>
          <target state="translated">因此,在我们的例子中,它将按照这个顺序尝试以下键,并返回第一个结果。</target>
        </trans-unit>
        <trans-unit id="854b45834349a9434ba70eb84a05b8f7f4964ddb" translate="yes" xml:space="preserve">
          <source>Thus, the Ruby I18n gem is split into two parts:</source>
          <target state="translated">因此,Ruby I18n宝石被分成了两个部分。</target>
        </trans-unit>
        <trans-unit id="0e7e457daaa427e0c57ee44631058c674daa9cb8" translate="yes" xml:space="preserve">
          <source>Thus, to load all extensions to &lt;code&gt;Object&lt;/code&gt; (including &lt;code&gt;blank?&lt;/code&gt;):</source>
          <target state="translated">因此，要将所有扩展加载到 &lt;code&gt;Object&lt;/code&gt; （包括 &lt;code&gt;blank?&lt;/code&gt; ）：</target>
        </trans-unit>
        <trans-unit id="6c82e6dd86807ee3db07e3c82bec1ae1ce00b08b" translate="yes" xml:space="preserve">
          <source>Time</source>
          <target state="translated">Time</target>
        </trans-unit>
        <trans-unit id="0479dbb889a6a5e40e9b16e0c07736df269d0080" translate="yes" xml:space="preserve">
          <source>Time Constructors</source>
          <target state="translated">时间构造器</target>
        </trans-unit>
        <trans-unit id="7cb101b09abe53e3970615e26d1c5ac1a5a1a0f2" translate="yes" xml:space="preserve">
          <source>Time Zone and Country Select</source>
          <target state="translated">时区和国家选择</target>
        </trans-unit>
        <trans-unit id="758bb3a92d2943b681c1f3053c0ac441e1cf96bc" translate="yes" xml:space="preserve">
          <source>Time when it finished</source>
          <target state="translated">完成时间</target>
        </trans-unit>
        <trans-unit id="03f428e3c88d569287d827deae102c6dbdd168d3" translate="yes" xml:space="preserve">
          <source>Time when it started</source>
          <target state="translated">开始时的时间</target>
        </trans-unit>
        <trans-unit id="82f05dbf9bd40d142582cbabaf13c9ec714f7fc8" translate="yes" xml:space="preserve">
          <source>Time#-</source>
          <target state="translated">Time#-</target>
        </trans-unit>
        <trans-unit id="7a7aa7d8e4b40a785503fa9c8daf43ea4bc56d53" translate="yes" xml:space="preserve">
          <source>Time#- can also be used to determine the number of seconds between two &lt;a href=&quot;time&quot;&gt;Time&lt;/a&gt; instances. We're layering on additional behavior so that &lt;a href=&quot;activesupport/timewithzone&quot;&gt;ActiveSupport::TimeWithZone&lt;/a&gt; instances are coerced into values that Time#- will recognize</source>
          <target state="translated">Time＃-也可用于确定两个&lt;a href=&quot;time&quot;&gt;Time&lt;/a&gt;实例之间的秒数。我们在其他行为上进行分层，以便将&lt;a href=&quot;activesupport/timewithzone&quot;&gt;ActiveSupport :: TimeWithZone&lt;/a&gt;实例强制转换为Time＃-可以识别的值</target>
        </trans-unit>
        <trans-unit id="5bb87c2f9d9945ef31886829761b28fbf4ea3900" translate="yes" xml:space="preserve">
          <source>Time#ago</source>
          <target state="translated">Time#ago</target>
        </trans-unit>
        <trans-unit id="535061e30d3ec336298cfcce028fd03250f67a69" translate="yes" xml:space="preserve">
          <source>Time#eql?</source>
          <target state="translated">Time#eql?</target>
        </trans-unit>
        <trans-unit id="f49e737bf31856a03111c5200f6835d9c041ed09" translate="yes" xml:space="preserve">
          <source>Time#in</source>
          <target state="translated">Time#in</target>
        </trans-unit>
        <trans-unit id="e5f35007f2fd715805bc7ee4f6619bdeaedd28b2" translate="yes" xml:space="preserve">
          <source>Time#noon</source>
          <target state="translated">Time#noon</target>
        </trans-unit>
        <trans-unit id="9a4fe8b3bc5da5b531b4d49404f6219c94b730de" translate="yes" xml:space="preserve">
          <source>Time#to_s</source>
          <target state="translated">Time#to_s</target>
        </trans-unit>
        <trans-unit id="072bb1013189d6ec714afa16f54db8ee314e4e97" translate="yes" xml:space="preserve">
          <source>Time::===</source>
          <target state="translated">Time::===</target>
        </trans-unit>
        <trans-unit id="f52704cb2dbee04fc88151aaddbbd5c040769349" translate="yes" xml:space="preserve">
          <source>Time::at</source>
          <target state="translated">Time::at</target>
        </trans-unit>
        <trans-unit id="71fee4b114e10fd6ff1eb8600d86ffa3eda424ec" translate="yes" xml:space="preserve">
          <source>Time::zone</source>
          <target state="translated">Time::zone</target>
        </trans-unit>
        <trans-unit id="002a7fb356856a5683fcfcda3bf71e15fce88416" translate="yes" xml:space="preserve">
          <source>Time::zone=</source>
          <target state="translated">Time::zone=</target>
        </trans-unit>
        <trans-unit id="d4c45de0fe64ac43c72a798c67faaadadfaa1b90" translate="yes" xml:space="preserve">
          <source>Timeout</source>
          <target state="translated">Timeout</target>
        </trans-unit>
        <trans-unit id="19eabc961735d78f12fc7be906ffcb033853cf85" translate="yes" xml:space="preserve">
          <source>Timestamp</source>
          <target state="translated">Timestamp</target>
        </trans-unit>
        <trans-unit id="2e12f675325012e3b51130cfc4c0495653df0d78" translate="yes" xml:space="preserve">
          <source>Timestamp when the job should be performed</source>
          <target state="translated">应该执行任务的时间戳</target>
        </trans-unit>
        <trans-unit id="e603c1d718c3407ed978ed5e5b448466af8b8ed4" translate="yes" xml:space="preserve">
          <source>Timestamped Migrations</source>
          <target state="translated">有时间戳的迁移</target>
        </trans-unit>
        <trans-unit id="d7afe964a9bc9490c0d91ac3e8197cd7bf16e3f7" translate="yes" xml:space="preserve">
          <source>Timestamping can be turned off by setting:</source>
          <target state="translated">可以通过设置关闭时间戳。</target>
        </trans-unit>
        <trans-unit id="5e740a2d0dd5f664f5f8152670d8f74f5c2a8cfc" translate="yes" xml:space="preserve">
          <source>Timestamps are in UTC by default but you can use the local timezone by setting:</source>
          <target state="translated">时间戳默认为UTC,但你可以通过设置使用当地时区。</target>
        </trans-unit>
        <trans-unit id="7f84b4e1e741a5e90fb140baa746fb6bacc4ae5a" translate="yes" xml:space="preserve">
          <source>Timezone to be used during the job.</source>
          <target state="translated">工作期间要使用的时区。</target>
        </trans-unit>
        <trans-unit id="50790fb9896851d0217b7037f6684381e6eec66d" translate="yes" xml:space="preserve">
          <source>Tips, Tricks, and Warnings</source>
          <target state="translated">提示、技巧和警告</target>
        </trans-unit>
        <trans-unit id="e78cb5861cde261d84b6558812d6edfa320b4cc6" translate="yes" xml:space="preserve">
          <source>To accept the rich text content, all you have to do is permit the referenced attribute:</source>
          <target state="translated">要接受富文本内容,你只需允许引用属性即可。</target>
        </trans-unit>
        <trans-unit id="75310a470346acf45b4ddbf0767e37cfd3626f2e" translate="yes" xml:space="preserve">
          <source>To access this class outside of Rails, require the core extension with:</source>
          <target state="translated">如果要在Rails之外访问这个类,需要使用核心扩展。</target>
        </trans-unit>
        <trans-unit id="b26e949303bd19506657d5954b82082666b0c3ab" translate="yes" xml:space="preserve">
          <source>To accomplish this &lt;code&gt;atomic_write&lt;/code&gt; creates a temporary file. That's the file the code in the block actually writes to. On completion, the temporary file is renamed, which is an atomic operation on POSIX systems. If the target file exists &lt;code&gt;atomic_write&lt;/code&gt; overwrites it and keeps owners and permissions. However there are a few cases where &lt;code&gt;atomic_write&lt;/code&gt; cannot change the file ownership or permissions, this error is caught and skipped over trusting in the user/filesystem to ensure the file is accessible to the processes that need it.</source>
          <target state="translated">要完成此 &lt;code&gt;atomic_write&lt;/code&gt; 创建一个临时文件。那就是该块中的代码实际写入的文件。完成后，临时文件将被重命名，这是POSIX系统上的原子操作。如果目标文件存在， &lt;code&gt;atomic_write&lt;/code&gt; 将覆盖它并保留所有者和权限。但是，在某些情况下 &lt;code&gt;atomic_write&lt;/code&gt; 无法更改文件所有权或权限，该错误会被捕获并跳过对用户/文件系统的信任，以确保需要该文件的进程可以访问该文件。</target>
        </trans-unit>
        <trans-unit id="4f5bcf57447f814c8cabe3a4a635247fcb017bc2" translate="yes" xml:space="preserve">
          <source>To activate the automatic connection switching middleware, add or uncomment the following lines in your application config.</source>
          <target state="translated">要激活自动连接切换中间件,请在应用程序配置中添加或取消comment以下行。</target>
        </trans-unit>
        <trans-unit id="7b4253576554c00dac0b6079c6cdb38ea0ed38c3" translate="yes" xml:space="preserve">
          <source>To add a member route, add a member block into the resource block:</source>
          <target state="translated">要添加成员途径,请在资源块中添加成员块。</target>
        </trans-unit>
        <trans-unit id="a9bd9aac489abd4edfbf6d7a28f4c9ed8c99b95c" translate="yes" xml:space="preserve">
          <source>To add a member route, just add a &lt;code&gt;member&lt;/code&gt; block into the resource block:</source>
          <target state="translated">要添加成员路由，只需将一个 &lt;code&gt;member&lt;/code&gt; 块添加到资源块中：</target>
        </trans-unit>
        <trans-unit id="937e828fc31ed7e34181ae0bd7c880fd1631f5ec" translate="yes" xml:space="preserve">
          <source>To add a new value before/after existing one you should use &lt;a href=&quot;https://www.postgresql.org/docs/current/static/sql-altertype.html&quot;&gt;ALTER TYPE&lt;/a&gt;:</source>
          <target state="translated">要在现有值之前/之后添加新值，您应该使用&lt;a href=&quot;https://www.postgresql.org/docs/current/static/sql-altertype.html&quot;&gt;ALTER TYPE&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="f999cb973e6514ebc7a2a6d32402e38ef26f669b" translate="yes" xml:space="preserve">
          <source>To add a route to the collection:</source>
          <target state="translated">在集合中添加途径。</target>
        </trans-unit>
        <trans-unit id="d03ef418b9cd36529a460479553deeba036cf313" translate="yes" xml:space="preserve">
          <source>To add an alternate new action using the &lt;code&gt;:on&lt;/code&gt; shortcut:</source>
          <target state="translated">要使用 &lt;code&gt;:on&lt;/code&gt; 快捷方式添加替代的新动作：</target>
        </trans-unit>
        <trans-unit id="49c115b6642d137473c3aaaa584da6da37c682c9" translate="yes" xml:space="preserve">
          <source>To add an initialization step to the Rails boot process from your railtie, just define the initialization code with the &lt;code&gt;initializer&lt;/code&gt; macro:</source>
          <target state="translated">若要从railtie添加一个初始化步骤Rails的启动过程，只是定义与初始化代码 &lt;code&gt;initializer&lt;/code&gt; 宏：</target>
        </trans-unit>
        <trans-unit id="35d2629b284412f93bdcd4df4ef6d62207b48798" translate="yes" xml:space="preserve">
          <source>To add behavior to the initialize method, use the following signature:</source>
          <target state="translated">要为初始化方法添加行为,请使用以下签名。</target>
        </trans-unit>
        <trans-unit id="4f1cfe63bc585e778e420e9972aae33ffbcee874" translate="yes" xml:space="preserve">
          <source>To add initial data after a database is created, Rails has a built-in 'seeds' feature that makes the process quick and easy. This is especially useful when reloading the database frequently in development and test environments. It's easy to get started with this feature: just fill up &lt;code&gt;db/seeds.rb&lt;/code&gt; with some Ruby code, and run &lt;code&gt;rails db:seed&lt;/code&gt;:</source>
          <target state="translated">为了在创建数据库后添加初始数据，Rails具有内置的&amp;ldquo;种子&amp;rdquo;功能，该功能使该过程变得快速而简单。在开发和测试环境中经常重新加载数据库时，这特别有用。开始使用此功能很容易：只需用一些Ruby代码填充 &lt;code&gt;db/seeds.rb&lt;/code&gt; ，然后运行 &lt;code&gt;rails db:seed&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="7323553094572549fa65d6ecebe3434015f73143" translate="yes" xml:space="preserve">
          <source>To add new secret to credentials, first run &lt;code&gt;rails secret&lt;/code&gt; to get a new secret. Then run &lt;code&gt;rails credentials:edit&lt;/code&gt; to edit credentials, and add the secret. Running &lt;code&gt;credentials:edit&lt;/code&gt; creates new credentials file and master key, if they did not already exist.</source>
          <target state="translated">要向凭证添加新机密，请首先运行 &lt;code&gt;rails secret&lt;/code&gt; 以获取新机密。然后运行 &lt;code&gt;rails credentials:edit&lt;/code&gt; 编辑凭据，并添加密码。运行 &lt;code&gt;credentials:edit&lt;/code&gt; 创建新的凭据文件和主密钥（如果尚不存在）。</target>
        </trans-unit>
        <trans-unit id="0386aff0dfdb18b409bb13e26e6bfd4cc0be0e3a" translate="yes" xml:space="preserve">
          <source>To add redirection helpers to your metal controller, do the following:</source>
          <target state="translated">要向您的金属控制器添加重定向助手,请执行以下操作。</target>
        </trans-unit>
        <trans-unit id="56ec8b69fe3f17ee1c2beaa71a1520726bd1261d" translate="yes" xml:space="preserve">
          <source>To address(es) of the mail</source>
          <target state="translated">收件地址</target>
        </trans-unit>
        <trans-unit id="a6a319777b2f46687810f2e7f72d3f9fc8200ecc" translate="yes" xml:space="preserve">
          <source>To allow you to upgrade to new defaults one by one, the update task has created a file &lt;code&gt;config/initializers/new_framework_defaults.rb&lt;/code&gt;. Once your application is ready to run with new defaults, you can remove this file and flip the &lt;code&gt;config.load_defaults&lt;/code&gt; value.</source>
          <target state="translated">为了允许您一次一个地升级到新的默认值，更新任务创建了一个文件 &lt;code&gt;config/initializers/new_framework_defaults.rb&lt;/code&gt; 。一旦您的应用程序准备好以新的默认值运行，就可以删除此文件并翻转 &lt;code&gt;config.load_defaults&lt;/code&gt; 值。</target>
        </trans-unit>
        <trans-unit id="710f3ed0bda349db8b844b07d069b0e1bcf0d49e" translate="yes" xml:space="preserve">
          <source>To apply &lt;code&gt;LIMIT&lt;/code&gt; to the SQL fired by the &lt;code&gt;Model.find&lt;/code&gt;, you can specify the &lt;code&gt;LIMIT&lt;/code&gt; using &lt;code&gt;limit&lt;/code&gt; and &lt;code&gt;offset&lt;/code&gt; methods on the relation.</source>
          <target state="translated">要将 &lt;code&gt;LIMIT&lt;/code&gt; 应用于由 &lt;code&gt;Model.find&lt;/code&gt; 触发的SQL ，可以在关系上使用 &lt;code&gt;limit&lt;/code&gt; 和 &lt;code&gt;offset&lt;/code&gt; 方法指定 &lt;code&gt;LIMIT&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2d32215c583e6a7cb865ecd8a46e772e4bf03f4c" translate="yes" xml:space="preserve">
          <source>To apply a &lt;code&gt;GROUP BY&lt;/code&gt; clause to the SQL fired by the finder, you can use the &lt;code&gt;group&lt;/code&gt; method.</source>
          <target state="translated">要将 &lt;code&gt;GROUP BY&lt;/code&gt; 子句应用于查找程序触发的SQL，可以使用 &lt;code&gt;group&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="68719bf2f7e1a16dab187d1a075aba5a0fb05510" translate="yes" xml:space="preserve">
          <source>To apply a template, you need to provide the Rails generator with the location of the template you wish to apply using the &lt;code&gt;-m&lt;/code&gt; option. This can either be a path to a file or a URL.</source>
          <target state="translated">要应用模板，您需要使用 &lt;code&gt;-m&lt;/code&gt; 选项为Rails生成器提供您希望应用的模板的位置。这可以是文件的路径，也可以是URL。</target>
        </trans-unit>
        <trans-unit id="d90a4ed6971546eb44b2ac49131bae5e67069b67" translate="yes" xml:space="preserve">
          <source>To assign a specific layout for the entire application, use a &lt;code&gt;layout&lt;/code&gt; declaration in your &lt;code&gt;ApplicationController&lt;/code&gt; class:</source>
          <target state="translated">要为整个应用程序分配特定的布局，请在 &lt;code&gt;ApplicationController&lt;/code&gt; 类中使用 &lt;code&gt;layout&lt;/code&gt; 声明：</target>
        </trans-unit>
        <trans-unit id="17cb9d18619396360a8e49bebcea3ab1ca897a51" translate="yes" xml:space="preserve">
          <source>To associate a model with a model in a different namespace, you must specify the complete class name in your association declaration:</source>
          <target state="translated">要将一个模型与不同命名空间中的模型关联起来,您必须在关联声明中指定完整的类名。</target>
        </trans-unit>
        <trans-unit id="3aed1b17dd2e4287dd54e4f8bd9403a70bfe9854" translate="yes" xml:space="preserve">
          <source>To avoid N+1 queries, you can include the attached blobs in your query like so:</source>
          <target state="translated">为了避免N+1的查询,你可以在查询中加入附件的bloom,比如这样。</target>
        </trans-unit>
        <trans-unit id="ea489f383516c76da4a7f269dd9247bb36e8b6ab" translate="yes" xml:space="preserve">
          <source>To avoid code duplication, you can add your own test helpers. Sign in helper can be a good example:</source>
          <target state="translated">为了避免代码重复,你可以添加自己的测试助手。登录助手可以是一个很好的例子。</target>
        </trans-unit>
        <trans-unit id="ef7716f9a480e0433559d033ee267ce1e4f96d72" translate="yes" xml:space="preserve">
          <source>To be described.</source>
          <target state="translated">有待说明。</target>
        </trans-unit>
        <trans-unit id="cc73d760d95c9df877c5e1f99331f6766682de9a" translate="yes" xml:space="preserve">
          <source>To be yielded each record one by one, use &lt;a href=&quot;batches#method-i-find_each&quot;&gt;find_each&lt;/a&gt; instead.</source>
          <target state="translated">要一一生成每个记录，请改用&lt;a href=&quot;batches#method-i-find_each&quot;&gt;find_each&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cc604ec989e6bbee406239991a8d4ac088c25d5f" translate="yes" xml:space="preserve">
          <source>To begin with, let's get some text up on screen quickly. To do this, you need to get your Rails application server running.</source>
          <target state="translated">首先,让我们在屏幕上快速显示一些文字。要做到这一点,你需要让你的Rails应用服务器运行起来。</target>
        </trans-unit>
        <trans-unit id="1ea1e1b24e1a85c3f3db47188cf0dfee80b9e5cc" translate="yes" xml:space="preserve">
          <source>To begin, set up your files so that you have:</source>
          <target state="translated">首先,设置你的文件,让你有。</target>
        </trans-unit>
        <trans-unit id="39200511a539f80edb1bbf2925522826dfd27790" translate="yes" xml:space="preserve">
          <source>To block just specific pages, it's necessary to use a more complex syntax. Learn it on the &lt;a href=&quot;https://www.robotstxt.org/robotstxt.html&quot;&gt;official documentation&lt;/a&gt;.</source>
          <target state="translated">要仅阻止特定页面，必须使用更复杂的语法。在&lt;a href=&quot;https://www.robotstxt.org/robotstxt.html&quot;&gt;官方文档中&lt;/a&gt;了解它。</target>
        </trans-unit>
        <trans-unit id="e4a7a3f273395b097f236317a0c48f0ed6b14ad2" translate="yes" xml:space="preserve">
          <source>To call this &lt;code&gt;published&lt;/code&gt; scope we can call it on either the class:</source>
          <target state="translated">要调用此 &lt;code&gt;published&lt;/code&gt; 作用域，我们可以在任一类上调用它：</target>
        </trans-unit>
        <trans-unit id="10f0261a562574d1f5d1142f959f0cb7127b97bb" translate="yes" xml:space="preserve">
          <source>To cause a validation error, you must add to the &lt;code&gt;record&lt;/code&gt;'s errors directly from within the validators message.</source>
          <target state="translated">要引起验证错误，您必须直接从验证者消息内将错误添加到 &lt;code&gt;record&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ad374d91ad0c8548890300274c240b4c3484aaee" translate="yes" xml:space="preserve">
          <source>To change defaults for multiple uses, for example adding table tags to the default:</source>
          <target state="translated">要为多种用途更改默认值,例如为默认值添加表格标签。</target>
        </trans-unit>
        <trans-unit id="bad29effaa4191b70ae371023004bffacc8d0fdc" translate="yes" xml:space="preserve">
          <source>To change the default mailer view for your action you do something like:</source>
          <target state="translated">要改变你的动作的默认邮件视图,你可以这样做。</target>
        </trans-unit>
        <trans-unit id="1f23a72ff1318bf30b85765355052f6ccfb8b080" translate="yes" xml:space="preserve">
          <source>To change the parallelization method to use threads over forks put the following in your &lt;code&gt;test_helper.rb&lt;/code&gt;</source>
          <target state="translated">要更改并行化方法以在分支上使用线程，请在 &lt;code&gt;test_helper.rb&lt;/code&gt; 中添加以下内容</target>
        </trans-unit>
        <trans-unit id="392f97008d02fb517f2541a9f486cba6f2b790a9" translate="yes" xml:space="preserve">
          <source>To check which validations failed on an invalid attribute, you can use &lt;code&gt;errors.details[:attribute]&lt;/code&gt;. It returns an array of hashes with an &lt;code&gt;:error&lt;/code&gt; key to get the symbol of the validator:</source>
          <target state="translated">要检查对无效属性的验证失败，可以使用 &lt;code&gt;errors.details[:attribute]&lt;/code&gt; 。它返回带有 &lt;code&gt;:error&lt;/code&gt; 键的哈希数组，以获取验证器的符号：</target>
        </trans-unit>
        <trans-unit id="a4afd5456c33df31a6c7a7ba4584a36ffecbba4c" translate="yes" xml:space="preserve">
          <source>To choose the analyzer for a blob, Active Storage calls &lt;code&gt;accept?&lt;/code&gt; on each registered analyzer in order. It uses the first analyzer for which &lt;code&gt;accept?&lt;/code&gt; returns true when given the blob. If no registered analyzer accepts the blob, no metadata is extracted from it.</source>
          <target state="translated">要为斑点选择分析器，Active Storage调用 &lt;code&gt;accept?&lt;/code&gt; 在每个注册的分析仪上按顺序排列。它使用第一个 &lt;code&gt;accept?&lt;/code&gt; 分析器？给定blob时返回true。如果没有注册的分析器接受该Blob，则不会从中提取任何元数据。</target>
        </trans-unit>
        <trans-unit id="390e981b342dacb4143c4d7e30d20b9c832af99e" translate="yes" xml:space="preserve">
          <source>To choose the previewer for a blob, Active Storage calls &lt;code&gt;accept?&lt;/code&gt; on each registered previewer in order. It uses the first previewer for which &lt;code&gt;accept?&lt;/code&gt; returns true when given the blob. In a Rails application, add or remove previewers by manipulating &lt;code&gt;Rails.application.config.active_storage.previewers&lt;/code&gt; in an initializer:</source>
          <target state="translated">要为Blob选择预览器，Active Storage调用可以 &lt;code&gt;accept?&lt;/code&gt; 依次在每个注册的预览器上。它使用第一个 &lt;code&gt;accept?&lt;/code&gt; 哪些预览器？给定blob时返回true。在Rails应用程序中，通过在初始化程序中操作 &lt;code&gt;Rails.application.config.active_storage.previewers&lt;/code&gt; 来添加或删除预览器：</target>
        </trans-unit>
        <trans-unit id="e0c01104cd1c8ca5e77c5041d6716de6209a9968" translate="yes" xml:space="preserve">
          <source>To clear the cookies for a test just clear the cookie collection:</source>
          <target state="translated">要清除测试的cookie,只需清除cookie集合。</target>
        </trans-unit>
        <trans-unit id="e992d6d51c0fe85dc91d410d8aeec6437095e50e" translate="yes" xml:space="preserve">
          <source>To configure the URL, add a call to &lt;code&gt;action_cable_meta_tag&lt;/code&gt; in your HTML layout HEAD. This uses a URL or path typically set via &lt;code&gt;config.action_cable.url&lt;/code&gt; in the environment configuration files.</source>
          <target state="translated">要配置URL，请在HTML布局HEAD中添加对 &lt;code&gt;action_cable_meta_tag&lt;/code&gt; 的调用。它使用通常通过环境配置文件中的 &lt;code&gt;config.action_cable.url&lt;/code&gt; 设置的URL或路径。</target>
        </trans-unit>
        <trans-unit id="6812ced846bc801d5b224d2be55af57aa6c28a16" translate="yes" xml:space="preserve">
          <source>To configure the adapter's thread pool, instantiate the adapter and pass your own config:</source>
          <target state="translated">要配置适配器的线程池,实例化适配器并传递自己的配置。</target>
        </trans-unit>
        <trans-unit id="40d784490f47da8895d33a26078b04dd82fd6398" translate="yes" xml:space="preserve">
          <source>To control the queue from the job level you can pass a block to &lt;code&gt;#queue_as&lt;/code&gt;. The block will be executed in the job context (so you can access &lt;code&gt;self.arguments&lt;/code&gt;) and you must return the queue name:</source>
          <target state="translated">要从作业级别控制队列，您可以将一个块传递给 &lt;code&gt;#queue_as&lt;/code&gt; 。该块将在作业上下文中执行（因此您可以访问 &lt;code&gt;self.arguments&lt;/code&gt; ），并且必须返回队列名称：</target>
        </trans-unit>
        <trans-unit id="47ddbde908d6c9f96d05be4ab26c385e2ace4199" translate="yes" xml:space="preserve">
          <source>To create a download link, use the &lt;code&gt;rails_blob_{path|url}&lt;/code&gt; helper. Using this helper allows you to set the disposition.</source>
          <target state="translated">要创建下载链接，请使用 &lt;code&gt;rails_blob_{path|url}&lt;/code&gt; 帮助器。使用此帮助程序可以设置处置方式。</target>
        </trans-unit>
        <trans-unit id="9245a4a88b5bf153248b7ec7ba1d2256a662eb4c" translate="yes" xml:space="preserve">
          <source>To create a form within this template, you will use a &lt;em&gt;form builder&lt;/em&gt;. The primary form builder for Rails is provided by a helper method called &lt;code&gt;form_with&lt;/code&gt;. To use this method, add this code into &lt;code&gt;app/views/articles/new.html.erb&lt;/code&gt;:</source>
          <target state="translated">要在此模板中创建表单，您将使用&lt;em&gt;表单构建器&lt;/em&gt;。Rails的主要表单构建器由一个名为 &lt;code&gt;form_with&lt;/code&gt; 的帮助器方法提供。要使用此方法，请将以下代码添加到 &lt;code&gt;app/views/articles/new.html.erb&lt;/code&gt; 中：</target>
        </trans-unit>
        <trans-unit id="096a2e619a88efda798f6d12421ef4a182f77fba" translate="yes" xml:space="preserve">
          <source>To create a new application, you can instantiate a new instance of a class that has already been created:</source>
          <target state="translated">要创建一个新的应用程序,你可以实例化一个已经创建的类的新实例。</target>
        </trans-unit>
        <trans-unit id="72a4671ecb62ee15b867e38a9465be1c7903c736" translate="yes" xml:space="preserve">
          <source>To create a new controller, you will need to run the &quot;controller&quot; generator and tell it you want a controller called &quot;Welcome&quot; with an action called &quot;index&quot;, just like this:</source>
          <target state="translated">要创建一个新的控制器,你需要运行 &quot;控制器 &quot;生成器,并告诉它你想要一个名为 &quot;Welcome &quot;的控制器和一个名为 &quot;index &quot;的动作,就像这样。</target>
        </trans-unit>
        <trans-unit id="547474f51f2efc29c4d208520bd3c7cf66306490" translate="yes" xml:space="preserve">
          <source>To create a system test in your application, extend your test class from &lt;code&gt;ApplicationSystemTestCase&lt;/code&gt;. System tests use Capybara as a base and allow you to configure the settings through your &lt;code&gt;application_system_test_case.rb&lt;/code&gt; file that is generated with a new application or scaffold.</source>
          <target state="translated">要在您的应用程序中创建系统测试，请从 &lt;code&gt;ApplicationSystemTestCase&lt;/code&gt; 扩展测试类。系统测试使用Capybara作为基础，并允许您通过由新应用程序或支架生成的 &lt;code&gt;application_system_test_case.rb&lt;/code&gt; 文件来配置设置。</target>
        </trans-unit>
        <trans-unit id="1b33d60921c8ff3d53b349d9a6069f98d8eaa12c" translate="yes" xml:space="preserve">
          <source>To create a variation of the image, call &lt;code&gt;variant&lt;/code&gt; on the &lt;code&gt;Blob&lt;/code&gt;. You can pass any transformation to the method supported by the processor. The default processor is &lt;a href=&quot;https://github.com/minimagick/minimagick&quot;&gt;MiniMagick&lt;/a&gt;, but you can also use &lt;a href=&quot;https://www.rubydoc.info/gems/ruby-vips/Vips/Image&quot;&gt;Vips&lt;/a&gt;.</source>
          <target state="translated">要创建图像的 &lt;code&gt;variant&lt;/code&gt; ，请在 &lt;code&gt;Blob&lt;/code&gt; 上调用variant。您可以将任何转换传递给处理器支持的方法。默认处理器是&lt;a href=&quot;https://github.com/minimagick/minimagick&quot;&gt;MiniMagick&lt;/a&gt;，但您也可以使用&lt;a href=&quot;https://www.rubydoc.info/gems/ruby-vips/Vips/Image&quot;&gt;Vips&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5ff342a1cdcc24d29eb0fbd0257273c9ddf047cd" translate="yes" xml:space="preserve">
          <source>To create more intricate nestings, you can specify the first part of the input name (&lt;code&gt;person[address]&lt;/code&gt; in the previous example) explicitly:</source>
          <target state="translated">要创建更多复杂的嵌套，可以显式指定输入名称的第一部分（上例中的 &lt;code&gt;person[address]&lt;/code&gt; ）：</target>
        </trans-unit>
        <trans-unit id="8fba31f1400964b6c1854db1b89f26a91dae0c5c" translate="yes" xml:space="preserve">
          <source>To create proper abstraction, the I18n gem ships with a feature called variable interpolation that allows you to use variables in translation definitions and pass the values for these variables to the translation method.</source>
          <target state="translated">为了创建适当的抽象,I18n gem提供了一个叫做变量插值的功能,它允许你在翻译定义中使用变量,并将这些变量的值传递给翻译方法。</target>
        </trans-unit>
        <trans-unit id="33f409d9d7ae9405e9eabade073887085e3d56bf" translate="yes" xml:space="preserve">
          <source>To create this form you will use &lt;code&gt;form_with&lt;/code&gt;, &lt;code&gt;label_tag&lt;/code&gt;, &lt;code&gt;text_field_tag&lt;/code&gt;, and &lt;code&gt;submit_tag&lt;/code&gt;, respectively. Like this:</source>
          <target state="translated">创建这个表单，您将使用 &lt;code&gt;form_with&lt;/code&gt; ， &lt;code&gt;label_tag&lt;/code&gt; ， &lt;code&gt;text_field_tag&lt;/code&gt; 和 &lt;code&gt;submit_tag&lt;/code&gt; 分别。像这样：</target>
        </trans-unit>
        <trans-unit id="027708544c7e7fec5f1d396bf06d7030bfe0a2d8" translate="yes" xml:space="preserve">
          <source>To declare that the value in &lt;code&gt;params&lt;/code&gt; must be an array of permitted scalar values, map the key to an empty array:</source>
          <target state="translated">要声明 &lt;code&gt;params&lt;/code&gt; 中的值必须是允许的标量值的数组，请将键映射到空数组：</target>
        </trans-unit>
        <trans-unit id="56a15fec74f909dcbda296e8f1e1a76710eb68ab" translate="yes" xml:space="preserve">
          <source>To define a reversible migration, define the &lt;code&gt;change&lt;/code&gt; method in your migration like this:</source>
          <target state="translated">要定义可逆迁移，请在迁移中定义 &lt;code&gt;change&lt;/code&gt; 方法，如下所示：</target>
        </trans-unit>
        <trans-unit id="a5d3624e2f8f797d4ea168d1ef170ebc861f6ef6" translate="yes" xml:space="preserve">
          <source>To define a simple scope, we use the &lt;code&gt;scope&lt;/code&gt; method inside the class, passing the query that we'd like to run when this scope is called:</source>
          <target state="translated">为了定义一个简单的作用域，我们在类内部使用 &lt;code&gt;scope&lt;/code&gt; 方法，并在该作用域被调用时传递要运行的查询：</target>
        </trans-unit>
        <trans-unit id="938bc598b7814f6d826a43048f0356eddb4f6fce" translate="yes" xml:space="preserve">
          <source>To define a template to be used with a mailer, create an &lt;code&gt;.erb&lt;/code&gt; file with the same name as the method in your mailer model. For example, in the mailer defined above, the template at &lt;code&gt;app/views/notifier_mailer/welcome.text.erb&lt;/code&gt; would be used to generate the email.</source>
          <target state="translated">要定义与邮件程序一起使用的模板，请创建一个与邮件程序模型中的方法同名的 &lt;code&gt;.erb&lt;/code&gt; 文件。例如，在上面定义的邮件程序中，将使用 &lt;code&gt;app/views/notifier_mailer/welcome.text.erb&lt;/code&gt; 中的模板来生成电子邮件。</target>
        </trans-unit>
        <trans-unit id="ba09086ccc99ad6bd2736882c2ac961ab635a69d" translate="yes" xml:space="preserve">
          <source>To define an Active Job object:</source>
          <target state="translated">要定义一个活动任务对象。</target>
        </trans-unit>
        <trans-unit id="fe8a71d3ee050eac685d5f7d17d4a9b2e05610ec" translate="yes" xml:space="preserve">
          <source>To define an event for these hooks, use the block syntax within a &lt;code&gt;Rails::Application&lt;/code&gt;, &lt;code&gt;Rails::Railtie&lt;/code&gt; or &lt;code&gt;Rails::Engine&lt;/code&gt; subclass:</source>
          <target state="translated">要为这些挂钩定义事件，请在 &lt;code&gt;Rails::Application&lt;/code&gt; ， &lt;code&gt;Rails::Railtie&lt;/code&gt; 或 &lt;code&gt;Rails::Engine&lt;/code&gt; 子类中使用块语法：</target>
        </trans-unit>
        <trans-unit id="44ce21fa1a4b27f2bc8184a44c594fed6d9034f5" translate="yes" xml:space="preserve">
          <source>To define this configuration setting, you should use a &lt;code&gt;mattr_accessor&lt;/code&gt; inside the &lt;code&gt;Blorgh&lt;/code&gt; module for the engine. Add this line to &lt;code&gt;lib/blorgh.rb&lt;/code&gt; inside the engine:</source>
          <target state="translated">要定义此配置设置，您应该使用 &lt;code&gt;mattr_accessor&lt;/code&gt; 里面 &lt;code&gt;Blorgh&lt;/code&gt; 模块发动机。将此行添加到引擎内部的 &lt;code&gt;lib/blorgh.rb&lt;/code&gt; 中：</target>
        </trans-unit>
        <trans-unit id="5db9aae221a0a52fc270b44f4f60d7466dd1909c" translate="yes" xml:space="preserve">
          <source>To delete breakpoints: use the command &lt;code&gt;delete n&lt;/code&gt; to remove the breakpoint number &lt;em&gt;n&lt;/em&gt;. If no number is specified, it deletes all breakpoints that are currently active.</source>
          <target state="translated">要删除断点：使用命令 &lt;code&gt;delete n&lt;/code&gt; 删除断点号&lt;em&gt;n&lt;/em&gt;。如果未指定数字，它将删除当前处于活动状态的所有断点。</target>
        </trans-unit>
        <trans-unit id="b8df7c430f219b8b7e4a3c26240fefab718180b2" translate="yes" xml:space="preserve">
          <source>To demonstrate this, we are going to create a new helper generator that simply adds some instance variable readers. First, we create a generator within the rails namespace, as this is where rails searches for generators used as hooks:</source>
          <target state="translated">为了演示这一点,我们将创建一个新的帮助生成器,简单地添加一些实例变量读取器。首先,我们在rails命名空间中创建一个生成器,因为rails在这里搜索作为钩子使用的生成器。</target>
        </trans-unit>
        <trans-unit id="ceea890f8b0f50a4e35c3522e899a131253d5fce" translate="yes" xml:space="preserve">
          <source>To disable and allow requests from any origin:</source>
          <target state="translated">禁用和允许来自任何来源的请求。</target>
        </trans-unit>
        <trans-unit id="548445a44f1b0aabb815523fb70c2b0469d4e0ae" translate="yes" xml:space="preserve">
          <source>To disable it (and allow I18n to accept &lt;em&gt;any&lt;/em&gt; locale option) add the following configuration to your application:</source>
          <target state="translated">要禁用它（并允许I18n接受&lt;em&gt;任何&lt;/em&gt;语言环境选项），请将以下配置添加到您的应用程序：</target>
        </trans-unit>
        <trans-unit id="5e3faeb04b1006d46d20f0c6a5cff1221e804701" translate="yes" xml:space="preserve">
          <source>To disable the assets cache store:</source>
          <target state="translated">要禁用资产缓存存储。</target>
        </trans-unit>
        <trans-unit id="7295d8456167fa9cd998ecceff7742edb85d1f35" translate="yes" xml:space="preserve">
          <source>To do all this, you'll need to add the &lt;code&gt;attr_accessor&lt;/code&gt; for &lt;code&gt;author_name&lt;/code&gt;, the association for the author and the &lt;code&gt;before_validation&lt;/code&gt; call into &lt;code&gt;app/models/blorgh/article.rb&lt;/code&gt;. The &lt;code&gt;author&lt;/code&gt; association will be hard-coded to the &lt;code&gt;User&lt;/code&gt; class for the time being.</source>
          <target state="translated">为此，您需要将 &lt;code&gt;attr_accessor&lt;/code&gt; 的 &lt;code&gt;author_name&lt;/code&gt; ，作者的关联以及 &lt;code&gt;before_validation&lt;/code&gt; 调用添加到 &lt;code&gt;app/models/blorgh/article.rb&lt;/code&gt; 中。在 &lt;code&gt;author&lt;/code&gt; 联想将是硬编码到 &lt;code&gt;User&lt;/code&gt; 类暂且。</target>
        </trans-unit>
        <trans-unit id="3e9da0f19895e1e63c4d541ddb83d79d381ebfb6" translate="yes" xml:space="preserve">
          <source>To do so it sends &lt;code&gt;to_xml&lt;/code&gt; to every item in turn, and collects the results under a root node. All items must respond to &lt;code&gt;to_xml&lt;/code&gt;, an exception is raised otherwise.</source>
          <target state="translated">为此，它依次将 &lt;code&gt;to_xml&lt;/code&gt; 发送到每个项目，并在根节点下收集结果。所有项目都必须响应 &lt;code&gt;to_xml&lt;/code&gt; ，否则引发异常。</target>
        </trans-unit>
        <trans-unit id="3ffe90f518143f4ccf33f12ab90cdec6562f3fbc" translate="yes" xml:space="preserve">
          <source>To do so, the helper forces &lt;code&gt;I18n#translate&lt;/code&gt; to raise exceptions no matter what exception handler is defined by setting the &lt;code&gt;:raise&lt;/code&gt; option:</source>
          <target state="translated">为此，无论通过设置 &lt;code&gt;:raise&lt;/code&gt; 选项定义了什么异常处理程序，助手都会强制 &lt;code&gt;I18n#translate&lt;/code&gt; 引发异常：</target>
        </trans-unit>
        <trans-unit id="8fcb58e0779136e79f7bbcd3196e309246aa6ef1" translate="yes" xml:space="preserve">
          <source>To do so, the method loops over the pairs and builds nodes that depend on the &lt;em&gt;values&lt;/em&gt;. Given a pair &lt;code&gt;key&lt;/code&gt;, &lt;code&gt;value&lt;/code&gt;:</source>
          <target state="translated">为此，该方法循环对对并构建依赖于&lt;em&gt;值的&lt;/em&gt;节点。给定一对 &lt;code&gt;key&lt;/code&gt; ， &lt;code&gt;value&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="7b053d6c50340712c08c7806b10d1a9151d6f8b4" translate="yes" xml:space="preserve">
          <source>To do that, use the &lt;code&gt;endpoint&lt;/code&gt; method:</source>
          <target state="translated">为此，请使用 &lt;code&gt;endpoint&lt;/code&gt; 方法：</target>
        </trans-unit>
        <trans-unit id="40a1955f6ad9fd6fd4678d97c32b0354df563059" translate="yes" xml:space="preserve">
          <source>To do that, we can change the generator this way:</source>
          <target state="translated">为此,我们可以这样改变生成器。</target>
        </trans-unit>
        <trans-unit id="4761e5af2e6702f7ebe03db792973054a0bf591c" translate="yes" xml:space="preserve">
          <source>To do this Rails provides a &lt;code&gt;connected_to&lt;/code&gt; method that will switch to the connection you need.</source>
          <target state="translated">为此，Rails提供了 &lt;code&gt;connected_to&lt;/code&gt; 方法，该方法将切换到所需的连接。</target>
        </trans-unit>
        <trans-unit id="6eba38e7fdf3924f23e81a7c2eae21ab04284c38" translate="yes" xml:space="preserve">
          <source>To enable parallelization add the following to your &lt;code&gt;test_helper.rb&lt;/code&gt;:</source>
          <target state="translated">要启用并行化，请将以下内容添加到 &lt;code&gt;test_helper.rb&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="ab59146610828010aa5555a3267e4452009d74b6" translate="yes" xml:space="preserve">
          <source>To enable the appropriate extension, which is a requirement, use the &lt;code&gt;enable_extension&lt;/code&gt; method in your migrations.</source>
          <target state="translated">要启用适当的扩展（这是 &lt;code&gt;enable_extension&lt;/code&gt; ，请在迁移中使用enable_extension方法。</target>
        </trans-unit>
        <trans-unit id="1378316695e919c5817f8048de1dc745aae7fb6a" translate="yes" xml:space="preserve">
          <source>To enable this option set:</source>
          <target state="translated">要启用此选项集。</target>
        </trans-unit>
        <trans-unit id="99fbec6d3c8fdd9b9ce47c612da35a0bb97143f0" translate="yes" xml:space="preserve">
          <source>To enable this, pass a new object to the config option in &lt;code&gt;application.rb&lt;/code&gt;:</source>
          <target state="translated">要启用此功能，请将新对象传递给 &lt;code&gt;application.rb&lt;/code&gt; 中的config选项：</target>
        </trans-unit>
        <trans-unit id="024ea0333ad0d945de873fba9a797e2af84c26f5" translate="yes" xml:space="preserve">
          <source>To enable variants, add the &lt;code&gt;image_processing&lt;/code&gt; gem to your &lt;code&gt;Gemfile&lt;/code&gt;:</source>
          <target state="translated">要启用变型，添加 &lt;code&gt;image_processing&lt;/code&gt; 宝石到您 &lt;code&gt;Gemfile&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="6aa5989f41d10407c003eb26b665f9faed067396" translate="yes" xml:space="preserve">
          <source>To enforce the object's &lt;code&gt;before_destroy&lt;/code&gt; and &lt;code&gt;after_destroy&lt;/code&gt; callbacks or any &lt;code&gt;:dependent&lt;/code&gt; association options, use &lt;code&gt;#destroy&lt;/code&gt;.</source>
          <target state="translated">要强制执行对象的 &lt;code&gt;before_destroy&lt;/code&gt; 和 &lt;code&gt;after_destroy&lt;/code&gt; 回调或任何 &lt;code&gt;:dependent&lt;/code&gt; 关联选项，请使用 &lt;code&gt;#destroy&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0fc00875e6021b8e408bc81e21fdbfd465d66d0c" translate="yes" xml:space="preserve">
          <source>To enqueue a job to be performed as soon as the queuing system is free:</source>
          <target state="translated">要在排队系统空闲的时候,立即报出要执行的作业。</target>
        </trans-unit>
        <trans-unit id="90c95572a7dc8e66dff500217c7718530d16f63c" translate="yes" xml:space="preserve">
          <source>To enqueue a job to be processed at some point in the future:</source>
          <target state="translated">在未来的某个时间点申请处理一项作业。</target>
        </trans-unit>
        <trans-unit id="e24b230b2b5da9b1632d7f5df306befa662b3db7" translate="yes" xml:space="preserve">
          <source>To ensure a meaningful root element use the &lt;code&gt;:root&lt;/code&gt; option:</source>
          <target state="translated">要确保有意义的根元素，请使用 &lt;code&gt;:root&lt;/code&gt; 选项：</target>
        </trans-unit>
        <trans-unit id="88a27c5ba00b8c431e25f158798dc9a15474dfeb" translate="yes" xml:space="preserve">
          <source>To ensure entries fit within the specified memory prune the cache by removing the least recently accessed entries.</source>
          <target state="translated">为了确保条目适合在指定的内存中,通过删除最近访问的条目来修剪缓存。</target>
        </trans-unit>
        <trans-unit id="cbc6ad495926f0523f5406d698dc5e76e974f3a4" translate="yes" xml:space="preserve">
          <source>To exit the debugger, use the &lt;code&gt;quit&lt;/code&gt; command (abbreviated to &lt;code&gt;q&lt;/code&gt;). Or, type &lt;code&gt;q!&lt;/code&gt; to bypass the &lt;code&gt;Really quit? (y/n)&lt;/code&gt; prompt and exit unconditionally.</source>
          <target state="translated">要退出调试器，请使用 &lt;code&gt;quit&lt;/code&gt; 命令（缩写为 &lt;code&gt;q&lt;/code&gt; ）。或者，键入 &lt;code&gt;q!&lt;/code&gt; 绕过 &lt;code&gt;Really quit? (y/n)&lt;/code&gt; 提示并无条件退出。</target>
        </trans-unit>
        <trans-unit id="acded72b905a0761483848340f3d75bac8d23714" translate="yes" xml:space="preserve">
          <source>To extend Rails using a railtie, create a subclass of &lt;code&gt;Rails::Railtie&lt;/code&gt;. This class must be loaded during the Rails boot process, and is conventionally called &lt;code&gt;MyNamespace::Railtie&lt;/code&gt;.</source>
          <target state="translated">要使用Railtie扩展Rails，请创建 &lt;code&gt;Rails::Railtie&lt;/code&gt; 的子类。此类必须在Rails引导过程中加载，并且通常称为 &lt;code&gt;MyNamespace::Railtie&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="68d1ab2efb87e7f33694124b475fa832dd36471c" translate="yes" xml:space="preserve">
          <source>To find all callbacks in the before_save callback chain:</source>
          <target state="translated">找到before_save回调链中的所有回调。</target>
        </trans-unit>
        <trans-unit id="4d189f8a2472510551f99eaa440f8b44f3c278c4" translate="yes" xml:space="preserve">
          <source>To find out more about different &lt;code&gt;rackup&lt;/code&gt; options, you can run:</source>
          <target state="translated">要查找有关不同 &lt;code&gt;rackup&lt;/code&gt; 选项的更多信息，可以运行：</target>
        </trans-unit>
        <trans-unit id="103656aabc25933b2a11db53c60e6c84adc391f9" translate="yes" xml:space="preserve">
          <source>To find the current layout, Rails first looks for a file in &lt;code&gt;app/views/layouts&lt;/code&gt; with the same base name as the controller. For example, rendering actions from the &lt;code&gt;PhotosController&lt;/code&gt; class will use &lt;code&gt;app/views/layouts/photos.html.erb&lt;/code&gt; (or &lt;code&gt;app/views/layouts/photos.builder&lt;/code&gt;). If there is no such controller-specific layout, Rails will use &lt;code&gt;app/views/layouts/application.html.erb&lt;/code&gt; or &lt;code&gt;app/views/layouts/application.builder&lt;/code&gt;. If there is no &lt;code&gt;.erb&lt;/code&gt; layout, Rails will use a &lt;code&gt;.builder&lt;/code&gt; layout if one exists. Rails also provides several ways to more precisely assign specific layouts to individual controllers and actions.</source>
          <target state="translated">为了找到当前的布局，Rails首先在 &lt;code&gt;app/views/layouts&lt;/code&gt; 中查找与控制器具有相同基本名称的文件。例如，来自 &lt;code&gt;PhotosController&lt;/code&gt; 类的渲染动作将使用 &lt;code&gt;app/views/layouts/photos.html.erb&lt;/code&gt; （或 &lt;code&gt;app/views/layouts/photos.builder&lt;/code&gt; ）。如果没有此类特定于控制器的布局，Rails将使用 &lt;code&gt;app/views/layouts/application.html.erb&lt;/code&gt; 或 &lt;code&gt;app/views/layouts/application.builder&lt;/code&gt; 。如果没有 &lt;code&gt;.erb&lt;/code&gt; 布局，则Rails将使用 &lt;code&gt;.builder&lt;/code&gt; 布局（如果存在）。 Rails还提供了几种方法，可以将特定的布局更精确地分配给各个控制器和动作。</target>
        </trans-unit>
        <trans-unit id="e148e7771d973e0a356bb26cc07da701ba30d055" translate="yes" xml:space="preserve">
          <source>To find this gotcha the qualifying namespace has to be a class, &lt;code&gt;Object&lt;/code&gt; is not an ancestor of modules.</source>
          <target state="translated">要找到这个陷阱，合格的命名空间必须是一个类， &lt;code&gt;Object&lt;/code&gt; 不是模块的祖先。</target>
        </trans-unit>
        <trans-unit id="11574492354d5a8c9f0f8f200d0f4a66fe002321" translate="yes" xml:space="preserve">
          <source>To fix the regular expression, \A and \z should be used instead of ^ and $, like so:</source>
          <target state="translated">为了固定正则表达式,应该用\A和\z代替^和$,像这样。</target>
        </trans-unit>
        <trans-unit id="a8a6013ec55134e7e11173f7f2def5ca05d72167" translate="yes" xml:space="preserve">
          <source>To fix this, just remove the wildcards:</source>
          <target state="translated">要解决这个问题,只要去掉通配符就可以了。</target>
        </trans-unit>
        <trans-unit id="4430a5941a340ead709901a28a50cc72a199fcae" translate="yes" xml:space="preserve">
          <source>To force the radio button to be checked pass &lt;code&gt;checked: true&lt;/code&gt; in the &lt;code&gt;options&lt;/code&gt; hash. You may pass HTML options there as well.</source>
          <target state="translated">要强制选中单选按钮，请通过以下 &lt;code&gt;checked: true&lt;/code&gt; &lt;code&gt;options&lt;/code&gt; 哈希中为true。您也可以在那里传递HTML选项。</target>
        </trans-unit>
        <trans-unit id="24b199107473b75c5135ff12f64973bd46d6dab1" translate="yes" xml:space="preserve">
          <source>To further check if the before_save chain contains a proc defined as &lt;code&gt;rest_when_dead&lt;/code&gt; use the &lt;code&gt;filter&lt;/code&gt; property of the callback object:</source>
          <target state="translated">要进一步检查before_save链是否包含定义为 &lt;code&gt;rest_when_dead&lt;/code&gt; 的proc，请使用回调对象的 &lt;code&gt;filter&lt;/code&gt; 属性：</target>
        </trans-unit>
        <trans-unit id="b203e8b921a74e8f30ff1716c858cd5cfb46d25c" translate="yes" xml:space="preserve">
          <source>To generate a new migration, you can use</source>
          <target state="translated">要生成一个新的迁移,您可以使用</target>
        </trans-unit>
        <trans-unit id="6f8d7ec5e93b43baed7318e30d2b6aa0f9ac8180" translate="yes" xml:space="preserve">
          <source>To generate an engine, you will need to run the plugin generator and pass it options as appropriate to the need. For the &quot;blorgh&quot; example, you will need to create a &quot;mountable&quot; engine, running this command in a terminal:</source>
          <target state="translated">要生成一个引擎,你需要运行插件生成器,并根据需要传递相应的选项。对于 &quot;blorgh &quot;的例子,你需要创建一个 &quot;可挂载 &quot;的引擎,在终端运行这个命令。</target>
        </trans-unit>
        <trans-unit id="d4d7c4beb69092cc1a08407a29c44b57ec37bc70" translate="yes" xml:space="preserve">
          <source>To generate this new column, run this command within the engine:</source>
          <target state="translated">要生成这个新的列,请在引擎中运行这个命令。</target>
        </trans-unit>
        <trans-unit id="a24c8c074630c3cf1a20fadc6b55b97c00ab6685" translate="yes" xml:space="preserve">
          <source>To get Rails saying &quot;Hello&quot;, you need to create at minimum a &lt;em&gt;controller&lt;/em&gt; and a &lt;em&gt;view&lt;/em&gt;.</source>
          <target state="translated">要使Rails说&amp;ldquo; Hello&amp;rdquo;，您至少需要创建一个&lt;em&gt;控制器&lt;/em&gt;和一个&lt;em&gt;View&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="e48f7755253b50af5dc1c908eff57509fd33120d" translate="yes" xml:space="preserve">
          <source>To get a complete list of the available routes in your application, visit &lt;code&gt;http://localhost:3000/rails/info/routes&lt;/code&gt; in your browser while your server is running in the &lt;strong&gt;development&lt;/strong&gt; environment. You can also execute the &lt;code&gt;rails routes&lt;/code&gt; command in your terminal to produce the same output.</source>
          <target state="translated">要获取应用程序中可用路由的完整列表，请在服务器在&lt;strong&gt;开发&lt;/strong&gt;环境中运行时访问浏览器中的 &lt;code&gt;http://localhost:3000/rails/info/routes&lt;/code&gt; 。您也可以在终端中执行 &lt;code&gt;rails routes&lt;/code&gt; 命令以产生相同的输出。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="005b30d0773b78f7961678c7d254cb64cc3d37a2" translate="yes" xml:space="preserve">
          <source>To get more details see the API Documentation for &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveJob/Exceptions/ClassMethods.html&quot;&gt;ActiveJob::Exceptions&lt;/a&gt;.</source>
          <target state="translated">要获取更多详细信息，请参阅&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveJob/Exceptions/ClassMethods.html&quot;&gt;ActiveJob :: Exceptions&lt;/a&gt;的API文档。</target>
        </trans-unit>
        <trans-unit id="31dccd8cea944d0dfe178d04bafd1f9356872ee8" translate="yes" xml:space="preserve">
          <source>To get multiple fixtures at once, you can pass in a list of fixture names. For example:</source>
          <target state="translated">要一次获得多个灯具,您可以传递一个灯具名称的列表。例如</target>
        </trans-unit>
        <trans-unit id="6bd97cf8c74b564d1224b7a61ffaa5d95f62dd45" translate="yes" xml:space="preserve">
          <source>To get started with PostgreSQL have a look at the &lt;a href=&quot;configuring#configuring-a-postgresql-database&quot;&gt;configuring Rails guide&lt;/a&gt;. It describes how to properly setup Active Record for PostgreSQL.</source>
          <target state="translated">要开始使用PostgreSQL，请查看&lt;a href=&quot;configuring#configuring-a-postgresql-database&quot;&gt;配置Rails指南&lt;/a&gt;。它描述了如何为PostgreSQL正确设置Active Record。</target>
        </trans-unit>
        <trans-unit id="0f7a5ce473e6081ec973450d35899d117b17c518" translate="yes" xml:space="preserve">
          <source>To get started, add the redis gem to your Gemfile:</source>
          <target state="translated">要开始,请将redis gem添加到你的Gemfile中。</target>
        </trans-unit>
        <trans-unit id="328b48ce6e54d247c89f00f6889988392fc6aaad" translate="yes" xml:space="preserve">
          <source>To get the previous behavior it is needed to explicitly remove the &lt;code&gt;default_scope&lt;/code&gt; condition using &lt;code&gt;unscoped&lt;/code&gt;, &lt;code&gt;unscope&lt;/code&gt;, &lt;code&gt;rewhere&lt;/code&gt; or &lt;code&gt;except&lt;/code&gt;.</source>
          <target state="translated">要获得以前的行为明确移除它需要 &lt;code&gt;default_scope&lt;/code&gt; 使用情况 &lt;code&gt;unscoped&lt;/code&gt; ， &lt;code&gt;unscope&lt;/code&gt; ， &lt;code&gt;rewhere&lt;/code&gt; 或 &lt;code&gt;except&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fa553d3e7e28e5369ebe98308895cae960fc7eab" translate="yes" xml:space="preserve">
          <source>To get the total of grouped items on a single query, call &lt;code&gt;count&lt;/code&gt; after the &lt;code&gt;group&lt;/code&gt;.</source>
          <target state="translated">要在单个查询中获得分组项目的总数，请在 &lt;code&gt;group&lt;/code&gt; 之后调用 &lt;code&gt;count&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e25850423c07981f25d5934d7647129abcd3a3d9" translate="yes" xml:space="preserve">
          <source>To have better control applications may let the asset pipeline manage their favicon storing the file under &lt;code&gt;app/assets/images&lt;/code&gt;, and using this helper to generate its corresponding link tag.</source>
          <target state="translated">为了更好地控制应用程序，可以让资产管道管理其图标，将文件存储在 &lt;code&gt;app/assets/images&lt;/code&gt; 下，并使用此帮助器生成其相应的链接标记。</target>
        </trans-unit>
        <trans-unit id="1e566cc8c8c0c7006a31ae9012d8a81229af6f83" translate="yes" xml:space="preserve">
          <source>To hook into the initialization process of one of the following classes use the available hook.</source>
          <target state="translated">要钩入以下类之一的初始化过程,请使用可用的钩子。</target>
        </trans-unit>
        <trans-unit id="ee6e3360c651cd5d86470fb56bf96c6fa916d002" translate="yes" xml:space="preserve">
          <source>To implement the corresponding hosts you can either setup four actual hosts or use wildcard DNS to CNAME the wildcard to a single asset host. You can read more about setting up your DNS CNAME records from your ISP.</source>
          <target state="translated">要实现相应的主机,你可以设置四个实际的主机,或者使用通配符DNS将通配符CNAME到一个资产主机。你可以向你的ISP阅读更多关于设置DNS CNAME记录的信息。</target>
        </trans-unit>
        <trans-unit id="556118047d0a5ae15941c45d48edd45c47888016" translate="yes" xml:space="preserve">
          <source>To implement the validate method, you must have a &lt;code&gt;record&lt;/code&gt; parameter defined, which is the record to be validated.</source>
          <target state="translated">要实现validate方法，必须定义一个 &lt;code&gt;record&lt;/code&gt; 参数，这是要验证的记录。</target>
        </trans-unit>
        <trans-unit id="07f64f1b212c808a355458602b5bdea3f5e65ae4" translate="yes" xml:space="preserve">
          <source>To implement, just extend &lt;a href=&quot;naming&quot;&gt;ActiveModel::Naming&lt;/a&gt; in your object:</source>
          <target state="translated">要实现，只需在您的对象中扩展&lt;a href=&quot;naming&quot;&gt;ActiveModel :: Naming&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="3f9e69da3b593fd84fd7e8edc7d07700603a0f4a" translate="yes" xml:space="preserve">
          <source>To improve security, Rails embeds the purpose information in encrypted or signed cookies value. Rails can then thwart attacks that attempt to copy the signed/encrypted value of a cookie and use it as the value of another cookie.</source>
          <target state="translated">为了提高安全性,Rails将目的信息嵌入加密或签名的cookie值中。这样,Rails就可以阻挡那些试图复制cookie的签名/加密值并将其用作另一个cookie的值的攻击。</target>
        </trans-unit>
        <trans-unit id="3e7e45a50afda0b2eb7660a4c1d963a9a94b5ce6" translate="yes" xml:space="preserve">
          <source>To improve security, Rails now embeds the expiry information also in encrypted or signed cookies value.</source>
          <target state="translated">为了提高安全性,Rails现在也将到期信息嵌入加密或签名的cookie值中。</target>
        </trans-unit>
        <trans-unit id="5b939bc00c6e583531512c02fea1326ca0373b18" translate="yes" xml:space="preserve">
          <source>To improve the error details to contain the unallowed characters set for instance, you can pass additional keys to &lt;code&gt;errors.add&lt;/code&gt;.</source>
          <target state="translated">要改善错误详细信息以包含例如不允许的字符集，可以将其他键传递给 &lt;code&gt;errors.add&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3f60091bed62823549ee21d98eb4634d84b7b37b" translate="yes" xml:space="preserve">
          <source>To include &lt;code&gt;app/assets/javascripts/main.js&lt;/code&gt; and &lt;code&gt;app/assets/javascripts/photos/columns.js&lt;/code&gt;:</source>
          <target state="translated">要包含 &lt;code&gt;app/assets/javascripts/main.js&lt;/code&gt; 和 &lt;code&gt;app/assets/javascripts/photos/columns.js&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="9b2735bcf794c8b8e3dbcb0818bf9b1adfb01e0e" translate="yes" xml:space="preserve">
          <source>To include &lt;code&gt;app/assets/stylesheets/main.css&lt;/code&gt; and &lt;code&gt;app/assets/stylesheets/columns.css&lt;/code&gt;:</source>
          <target state="translated">要包含 &lt;code&gt;app/assets/stylesheets/main.css&lt;/code&gt; 和 &lt;code&gt;app/assets/stylesheets/columns.css&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="21531652ba1e3d89bf747da7459ad4fedc967168" translate="yes" xml:space="preserve">
          <source>To include &lt;code&gt;app/assets/stylesheets/main.css&lt;/code&gt; and &lt;code&gt;app/assets/stylesheets/photos/columns.css&lt;/code&gt;:</source>
          <target state="translated">要包含 &lt;code&gt;app/assets/stylesheets/main.css&lt;/code&gt; 和 &lt;code&gt;app/assets/stylesheets/photos/columns.css&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="779772c8fa8959eb00580d4c13aa16a7bc510c71" translate="yes" xml:space="preserve">
          <source>To include &lt;code&gt;http://example.com/main.css&lt;/code&gt;:</source>
          <target state="translated">要包含 &lt;code&gt;http://example.com/main.css&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="7d0ce90d4b25f9d33890d4a654b5a83b9b12a097" translate="yes" xml:space="preserve">
          <source>To include &lt;code&gt;http://example.com/main.js&lt;/code&gt;:</source>
          <target state="translated">要包含 &lt;code&gt;http://example.com/main.js&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="4d33d58e1685fdeed02bffcca2b4f6e263c8aec1" translate="yes" xml:space="preserve">
          <source>To include a deep hierarchy of associations, use a hash:</source>
          <target state="translated">要包含一个深层次的关联,使用哈希。</target>
        </trans-unit>
        <trans-unit id="9529df18a672e31493d1940461618054ec2bc1c9" translate="yes" xml:space="preserve">
          <source>To include associations use &lt;code&gt;:include&lt;/code&gt;:</source>
          <target state="translated">要包含关联，请使用 &lt;code&gt;:include&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="e7a06b85fbcecfa0afdb70a283e80c6c9bfb4543" translate="yes" xml:space="preserve">
          <source>To include multiple files such as &lt;code&gt;app/assets/javascripts/main.js&lt;/code&gt; and &lt;code&gt;app/assets/javascripts/columns.js&lt;/code&gt; at the same time:</source>
          <target state="translated">要同时包含多个文件，例如 &lt;code&gt;app/assets/javascripts/main.js&lt;/code&gt; 和 &lt;code&gt;app/assets/javascripts/columns.js&lt;/code&gt; columns.js：</target>
        </trans-unit>
        <trans-unit id="6d835a88e3ac4a8adea51bc2effafbfe3b1f2844" translate="yes" xml:space="preserve">
          <source>To include the result of some method calls on the model use &lt;code&gt;:methods&lt;/code&gt;:</source>
          <target state="translated">要包括对模型的某些方法调用的结果，请使用 &lt;code&gt;:methods&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="fe9a73c629a5b04262b8524874199438d75d8b58" translate="yes" xml:space="preserve">
          <source>To insert something verbatim use the &lt;code&gt;raw&lt;/code&gt; helper rather than calling &lt;code&gt;html_safe&lt;/code&gt;:</source>
          <target state="translated">要逐字插入内容，请使用 &lt;code&gt;raw&lt;/code&gt; 助手，而不是调用 &lt;code&gt;html_safe&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="2d1e94e3837bd32d9b9e63fda18996b46188ee74" translate="yes" xml:space="preserve">
          <source>To install Rails, use the &lt;code&gt;gem install&lt;/code&gt; command provided by RubyGems:</source>
          <target state="translated">要安装Rails，请使用RubyGems提供的 &lt;code&gt;gem install&lt;/code&gt; 命令：</target>
        </trans-unit>
        <trans-unit id="07105a68e26c48f757865bdaccecf2bc5d1b5dd0" translate="yes" xml:space="preserve">
          <source>To instrument an event you just need to do:</source>
          <target state="translated">要仪表一个事件,你只需要做。</target>
        </trans-unit>
        <trans-unit id="a465d1c6a94688a2116777f5f6bfe9d3c5205899" translate="yes" xml:space="preserve">
          <source>To invoke our new generator, we just need to do:</source>
          <target state="translated">要调用我们的新生成器,我们只需要做。</target>
        </trans-unit>
        <trans-unit id="6e20eda985f292acd30c70cf04867cd1ab356742" translate="yes" xml:space="preserve">
          <source>To iterate over these one hundred posts, we'll generate 201 database queries. Let's first just optimize it for retrieving the author:</source>
          <target state="translated">为了迭代这一百篇文章,我们会生成201个数据库查询。我们先只优化一下检索作者。</target>
        </trans-unit>
        <trans-unit id="87ded5cfd23a78b91a3c27ef331c2040caf078c6" translate="yes" xml:space="preserve">
          <source>To keep Rails secure by default, &lt;code&gt;deep_munge&lt;/code&gt; replaces some of the values with &lt;code&gt;nil&lt;/code&gt;. Below table shows what the parameters look like based on &lt;code&gt;JSON&lt;/code&gt; sent in request:</source>
          <target state="translated">为了确保Rails的默认安全性， &lt;code&gt;deep_munge&lt;/code&gt; 用 &lt;code&gt;nil&lt;/code&gt; 替换了一些值。下表显示了基于请求中发送的 &lt;code&gt;JSON&lt;/code&gt; 的参数：</target>
        </trans-unit>
        <trans-unit id="e09c0b8fb45739bb60fdf13680d7675cc4ee3ae7" translate="yes" xml:space="preserve">
          <source>To keep it simple in this case, the application will have a class called &lt;code&gt;User&lt;/code&gt; that represents the users of the application (we'll get into making this configurable further on). It can be generated using this command inside the application:</source>
          <target state="translated">为了在这种情况下保持简单，该应用程序将具有一个名为 &lt;code&gt;User&lt;/code&gt; 的类，该类代表该应用程序的用户（我们将进一步使其可配置）。可以在应用程序内部使用以下命令生成它：</target>
        </trans-unit>
        <trans-unit id="1e93f4f233cb7b557883bd4655238bb1cf4e4924" translate="yes" xml:space="preserve">
          <source>To learn more about the different types of associations, read the next section of this guide. That's followed by some tips and tricks for working with associations, and then by a complete reference to the methods and options for associations in Rails.</source>
          <target state="translated">要了解更多关于不同类型的关联,请阅读本指南的下一节。接下来是一些使用关联的技巧和窍门,然后是Rails中关联的方法和选项的完整参考。</target>
        </trans-unit>
        <trans-unit id="c3384d06e6e691dc9b9354e577ada2a426d01d10" translate="yes" xml:space="preserve">
          <source>To leverage time zone support in Rails, you have to ask your users what time zone they are in. Doing so would require generating select options from a list of pre-defined &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveSupport/TimeZone.html&quot;&gt;&lt;code&gt;ActiveSupport::TimeZone&lt;/code&gt;&lt;/a&gt; objects using &lt;code&gt;collection_select&lt;/code&gt;, but you can simply use the &lt;code&gt;time_zone_select&lt;/code&gt; helper that already wraps this:</source>
          <target state="translated">要利用Rails中的时区支持，您必须询问您的用户所在的时区。这样做需要使用 &lt;code&gt;collection_select&lt;/code&gt; 从预定义的&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveSupport/TimeZone.html&quot;&gt; &lt;code&gt;ActiveSupport::TimeZone&lt;/code&gt; &lt;/a&gt;对象列表中生成选择选项，但您可以简单地使用 &lt;code&gt;time_zone_select&lt;/code&gt; 已经包装好的助手：</target>
        </trans-unit>
        <trans-unit id="72d7d61c72997b4cbf28bfa14fdf1e2d9d17fab5" translate="yes" xml:space="preserve">
          <source>To list all active catchpoints use &lt;code&gt;catch&lt;/code&gt;.</source>
          <target state="translated">要列出所有活动的捕获点，请使用 &lt;code&gt;catch&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c808fe2b9636543eefc5142e38fb64613521faf1" translate="yes" xml:space="preserve">
          <source>To load the schema from &lt;code&gt;db/structure.sql&lt;/code&gt;, run &lt;code&gt;rails db:structure:load&lt;/code&gt;. Loading this file is done by executing the SQL statements it contains. By definition, this will create a perfect copy of the database's structure.</source>
          <target state="translated">要从 &lt;code&gt;db/structure.sql&lt;/code&gt; 加载模式，请运行 &lt;code&gt;rails db:structure:load&lt;/code&gt; 。加载该文件是通过执行其中包含的SQL语句来完成的。根据定义，这将创建数据库结构的完美副本。</target>
        </trans-unit>
        <trans-unit id="9842772e3117449f3a953e7ace41a17296023709" translate="yes" xml:space="preserve">
          <source>To localize store and update &lt;em&gt;content&lt;/em&gt; in your application (e.g. translate blog posts), see the &lt;a href=&quot;#translating-model-content&quot;&gt;Translating model content&lt;/a&gt; section.</source>
          <target state="translated">要在应用程序中本地化存储和更新&lt;em&gt;内容&lt;/em&gt;（例如翻译博客文章），请参见&lt;a href=&quot;#translating-model-content&quot;&gt;翻译模型内容&lt;/a&gt;部分。</target>
        </trans-unit>
        <trans-unit id="949250dd89ebeeaeeb6033d743505186074bd17b" translate="yes" xml:space="preserve">
          <source>To look up multiple translations at once, an array of keys can be passed:</source>
          <target state="translated">如果要同时查找多个译文,可以传递一个键数组。</target>
        </trans-unit>
        <trans-unit id="4dfb51ce5c8fdb161af5ab17a3e8b708ac6f79c1" translate="yes" xml:space="preserve">
          <source>To make an error actionable, include the &lt;code&gt;ActiveSupport::ActionableError&lt;/code&gt; module and invoke the &lt;code&gt;action&lt;/code&gt; class macro to define the action. An action needs a name and a block to execute.</source>
          <target state="translated">要使错误可操作，请包括 &lt;code&gt;ActiveSupport::ActionableError&lt;/code&gt; 模块并调用 &lt;code&gt;action&lt;/code&gt; 类宏以定义操作。一个动作需要一个名称和一个块才能执行。</target>
        </trans-unit>
        <trans-unit id="1dbde35d1046f5cdc63670a343e680166021bbc9" translate="yes" xml:space="preserve">
          <source>To make the &quot;Unknown action&quot; go away, you can define a &lt;code&gt;create&lt;/code&gt; action within the &lt;code&gt;ArticlesController&lt;/code&gt; class in &lt;code&gt;app/controllers/articles_controller.rb&lt;/code&gt;, underneath the &lt;code&gt;new&lt;/code&gt; action, as shown:</source>
          <target state="translated">为了使&amp;ldquo;未知动作&amp;rdquo;消失，您可以在 &lt;code&gt;app/controllers/articles_controller.rb&lt;/code&gt; 中的 &lt;code&gt;ArticlesController&lt;/code&gt; 类中的 &lt;code&gt;new&lt;/code&gt; 动作下面定义一个 &lt;code&gt;create&lt;/code&gt; 动作，如下所示：</target>
        </trans-unit>
        <trans-unit id="921a7ea4bbe0b0e11218dced5eedc6573cfc2e9d" translate="yes" xml:space="preserve">
          <source>To make the engine's functionality accessible from within an application, it needs to be mounted in that application's &lt;code&gt;config/routes.rb&lt;/code&gt; file:</source>
          <target state="translated">为了使引擎的功能可从应用程序内访问，需要将其安装在该应用程序的 &lt;code&gt;config/routes.rb&lt;/code&gt; 文件中：</target>
        </trans-unit>
        <trans-unit id="a9c45a8275560a053195914f7b79861295936d9d" translate="yes" xml:space="preserve">
          <source>To make this behavior consistent with other parts of the framework, isolated engines also have an effect on &lt;code&gt;ActiveModel::Naming&lt;/code&gt;. In a normal Rails app, when you use a namespaced model such as &lt;code&gt;Namespace::Article&lt;/code&gt;, &lt;code&gt;ActiveModel::Naming&lt;/code&gt; will generate names with the prefix &amp;ldquo;namespace&amp;rdquo;. In an isolated engine, the prefix will be omitted in URL helpers and form fields, for convenience.</source>
          <target state="translated">为了使此行为与框架的其他部分一致，隔离的引擎也对 &lt;code&gt;ActiveModel::Naming&lt;/code&gt; 产生影响。在普通的Rails应用程序中，当您使用诸如 &lt;code&gt;Namespace::Article&lt;/code&gt; 类的命名空间模型时， &lt;code&gt;ActiveModel::Naming&lt;/code&gt; 将生成带有前缀&amp;ldquo; namespace&amp;rdquo;的名称。在隔离引擎中，为方便起见，URL帮助器和表单字段中将省略前缀。</target>
        </trans-unit>
        <trans-unit id="f1d90b485d54c8610af9229969e151cf347fb128" translate="yes" xml:space="preserve">
          <source>To make this route always use the engine's &lt;code&gt;articles_path&lt;/code&gt; routing helper method, we must call the method on the routing proxy method that shares the same name as the engine.</source>
          <target state="translated">要使此路由始终使用引擎的 &lt;code&gt;articles_path&lt;/code&gt; 路由帮助器方法，我们必须在与该代理共享相同名称的路由代理方法上调用该方法。</target>
        </trans-unit>
        <trans-unit id="fd5ff9b158d9be25892d88a1b07fc4ea7716c66c" translate="yes" xml:space="preserve">
          <source>To manually define an action inside a controller, all you need to do is to define a new method inside the controller. Open &lt;code&gt;app/controllers/articles_controller.rb&lt;/code&gt; and inside the &lt;code&gt;ArticlesController&lt;/code&gt; class, define the &lt;code&gt;new&lt;/code&gt; method so that your controller now looks like this:</source>
          <target state="translated">要在控制器内部手动定义一个动作，您要做的就是在控制器内部定义一个新方法。打开 &lt;code&gt;app/controllers/articles_controller.rb&lt;/code&gt; 并在 &lt;code&gt;ArticlesController&lt;/code&gt; 类中定义 &lt;code&gt;new&lt;/code&gt; 方法，以便您的控制器现在如下所示：</target>
        </trans-unit>
        <trans-unit id="10ee3825bdd39797018ef838218447c460850360" translate="yes" xml:space="preserve">
          <source>To match a wildcard parameter, it must have a name assigned to it. Without a variable name to attach the glob parameter to, the route can't be parsed.</source>
          <target state="translated">要匹配一个通配符参数,必须为它分配一个名称。如果没有一个变量名来附加 glob 参数,就无法解析路由。</target>
        </trans-unit>
        <trans-unit id="c44663ac68a7142de4628d90c3a983aeada5b915" translate="yes" xml:space="preserve">
          <source>To omit the instance reader method, pass &lt;code&gt;instance_reader:
false&lt;/code&gt; or &lt;code&gt;instance_accessor: false&lt;/code&gt;.</source>
          <target state="translated">要省略实例读取器方法，请传递 &lt;code&gt;instance_reader: false&lt;/code&gt; 或 &lt;code&gt;instance_accessor: false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fb64965d9e729741db712ff6ad1f00ac24b32cb6" translate="yes" xml:space="preserve">
          <source>To omit the instance writer method, pass &lt;code&gt;instance_writer:
false&lt;/code&gt; or &lt;code&gt;instance_accessor: false&lt;/code&gt;.</source>
          <target state="translated">要省略实例编写器方法，请传递 &lt;code&gt;instance_writer: false&lt;/code&gt; 或 &lt;code&gt;instance_accessor: false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="54d7f9b5323081bba96cda32f5880c9ac55b25d6" translate="yes" xml:space="preserve">
          <source>To omit the instance writer method, pass &lt;code&gt;instance_writer:
false&lt;/code&gt;. To omit the instance reader method, pass &lt;code&gt;instance_reader: false&lt;/code&gt;.</source>
          <target state="translated">要省略实例编写器方法，请传递 &lt;code&gt;instance_writer: false&lt;/code&gt; 。要省略实例读取器方法，请传递 &lt;code&gt;instance_reader: false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="387874b4f7e3aeb4135421cd53cc3c908662c48f" translate="yes" xml:space="preserve">
          <source>To opt out of both instance methods, pass &lt;code&gt;instance_accessor:
false&lt;/code&gt;.</source>
          <target state="translated">要选择退出这两种实例方法，请传递 &lt;code&gt;instance_accessor: false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e6a9c311437d073e9fbcaf6cfacf7848796a7292" translate="yes" xml:space="preserve">
          <source>To opt out of the instance reader method, pass &lt;code&gt;instance_reader:
false&lt;/code&gt;.</source>
          <target state="translated">要选择退出实例阅读器方法，请传递 &lt;code&gt;instance_reader: false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="10e6ced416fc62ee3f668828d410bdfb909473cc" translate="yes" xml:space="preserve">
          <source>To opt out of the instance writer method, pass &lt;code&gt;instance_writer:
false&lt;/code&gt;.</source>
          <target state="translated">要选择退出实例编写器方法，请传递 &lt;code&gt;instance_writer: false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="697798c3fe3ccdc6d31e234baab2537794dff892" translate="yes" xml:space="preserve">
          <source>To override the name of the &lt;code&gt;lock_version&lt;/code&gt; column, &lt;code&gt;ActiveRecord::Base&lt;/code&gt; provides a class attribute called &lt;code&gt;locking_column&lt;/code&gt;:</source>
          <target state="translated">要覆盖 &lt;code&gt;lock_version&lt;/code&gt; 列的名称， &lt;code&gt;ActiveRecord::Base&lt;/code&gt; 提供了一个名为 &lt;code&gt;locking_column&lt;/code&gt; 的类属性：</target>
        </trans-unit>
        <trans-unit id="d053ebaa181a7f197d1a43234f804f7a26afe160" translate="yes" xml:space="preserve">
          <source>To pass a local variable to a partial in only specific cases use the &lt;code&gt;local_assigns&lt;/code&gt;.</source>
          <target state="translated">要仅在特定情况下将局部变量传递给局部变量，请使用 &lt;code&gt;local_assigns&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2a5b697325c8cdfb93a093ea707e3321adfe02cd" translate="yes" xml:space="preserve">
          <source>To pass arguments to your custom rake task:</source>
          <target state="translated">将参数传递给你的自定义耙任务。</target>
        </trans-unit>
        <trans-unit id="5e35109b3045d21b832476a81c851256780c03c6" translate="yes" xml:space="preserve">
          <source>To perform the computation the method first increments years, then months, then weeks, and finally days. This order is important towards the end of months. Say for example we are at the end of February of 2010, and we want to move one month and one day forward.</source>
          <target state="translated">为了进行计算,该方法首先递增年,然后是月,然后是周,最后是日。这个顺序在月末的时候很重要。比如说,我们现在是2010年2月底,我们想向前移动一个月零一天。</target>
        </trans-unit>
        <trans-unit id="99b4d018fd49bbe2363ea2588891470154dbe746" translate="yes" xml:space="preserve">
          <source>To permit an entire hash of parameters, the &lt;code&gt;permit!&lt;/code&gt; method can be used:</source>
          <target state="translated">要允许整个参数散列，请 &lt;code&gt;permit!&lt;/code&gt; 可以使用的方法：</target>
        </trans-unit>
        <trans-unit id="9332de03e10b7d988d606a6e444b4daceb57f837" translate="yes" xml:space="preserve">
          <source>To play nicely with JavaScript conventions, sub-attributes are dasherized.</source>
          <target state="translated">为了和JavaScript的惯例很好地配合,子属性被破折号化了。</target>
        </trans-unit>
        <trans-unit id="de4cba0eac3a8e27e7e9e076afcf1a49468737fc" translate="yes" xml:space="preserve">
          <source>To prefix a group of route helpers, use &lt;code&gt;:as&lt;/code&gt; with &lt;code&gt;scope&lt;/code&gt;:</source>
          <target state="translated">要为一组路由助手添加前缀，请在 &lt;code&gt;scope&lt;/code&gt; 使用 &lt;code&gt;:as&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="fd912753995b4784d9b4b09641cfac3382b7ddda" translate="yes" xml:space="preserve">
          <source>To preserve the case of the characters in a string, use the &lt;code&gt;preserve_case&lt;/code&gt; argument.</source>
          <target state="translated">要保留字符串中字符的大小写，请使用 &lt;code&gt;preserve_case&lt;/code&gt; 参数。</target>
        </trans-unit>
        <trans-unit id="79c4278c653cf99eaee1a51746aaac987a08f05d" translate="yes" xml:space="preserve">
          <source>To preserve the case of the string, set the &lt;code&gt;preserve_case&lt;/code&gt; argument to true. By default, &lt;code&gt;preserve_case&lt;/code&gt; is set to false.</source>
          <target state="translated">要保留字符串的大小写，请将 &lt;code&gt;preserve_case&lt;/code&gt; 参数设置为true。默认情况下， &lt;code&gt;preserve_case&lt;/code&gt; 设置为false。</target>
        </trans-unit>
        <trans-unit id="cb61f563e80d658169538a885bdf4aff1315e13f" translate="yes" xml:space="preserve">
          <source>To prevent problems with case-insensitive filesystems, especially in combination with databases which treat indices as case-sensitive, all blob keys generated are going to only contain the base-36 character alphabet and will therefore be lowercase. To maintain the same or higher amount of entropy as in the base-58 encoding used by `has_secure_token` the number of bytes used is increased to 28 from the standard 24</source>
          <target state="translated">为了防止对大小写不敏感的文件系统出现问题,特别是与将索引视为大小写敏感的数据库结合使用时,所有生成的blob密钥将只包含36个碱基字母,因此将是小写的。为了保持与 &quot;has_secure_token &quot;使用的基数58编码相同或更高的熵,使用的字节数从标准的24个增加到28个。</target>
        </trans-unit>
        <trans-unit id="b4e9764587fb31e1cbd7f9e23b59e4667ae1cc19" translate="yes" xml:space="preserve">
          <source>To prevent that block from being called anymore, just unsubscribe passing that reference:</source>
          <target state="translated">要防止该块被调用,只需通过该引用取消订阅即可。</target>
        </trans-unit>
        <trans-unit id="3fdb463e6e86ebf6894664d744889ba80523f357" translate="yes" xml:space="preserve">
          <source>To prevent this deadlock, the outer thread can &lt;code&gt;permit_concurrent_loads&lt;/code&gt;. By calling this method, the thread guarantees it will not dereference any possibly-autoloaded constant inside the supplied block. The safest way to meet that promise is to put it as close as possible to the blocking call:</source>
          <target state="translated">为了防止这种死锁，外线程可以 &lt;code&gt;permit_concurrent_loads&lt;/code&gt; 。通过调用此方法，线程保证它不会在提供的块内取消引用任何可能自动加载的常量。兑现承诺的最安全方法是将其尽可能靠近阻塞调用：</target>
        </trans-unit>
        <trans-unit id="d74ebca5dacf007cb62ec644a58e3da5c60614d5" translate="yes" xml:space="preserve">
          <source>To prevent this the helper generates an auxiliary hidden field before every collection of radio buttons. The hidden field has the same name as collection radio button and blank value.</source>
          <target state="translated">为了防止这种情况的发生,帮助程序会在每个单选按钮集合之前生成一个辅助的隐藏字段。隐藏字段的名称与集合单选按钮的名称相同,且为空白值。</target>
        </trans-unit>
        <trans-unit id="6e8537f67d7c81138cfcbd0b4e188c38a24c5453" translate="yes" xml:space="preserve">
          <source>To prevent this the helper generates an auxiliary hidden field before every multiple select. The hidden field has the same name as multiple select and blank value.</source>
          <target state="translated">为了防止这种情况发生,帮助程序在每次多重选择之前都会生成一个辅助的隐藏字段。隐藏字段的名称与多重选择和空白值相同。</target>
        </trans-unit>
        <trans-unit id="2c066b6b948fd18ae5c6932ab988a9969e24e2d8" translate="yes" xml:space="preserve">
          <source>To prevent this the helper generates an auxiliary hidden field before the very check box. The hidden field has the same name and its attributes mimic an unchecked check box.</source>
          <target state="translated">为了防止这种情况发生,帮助程序在复选框之前生成了一个辅助的隐藏字段。这个隐藏字段的名称和属性与未选中的复选框相同。</target>
        </trans-unit>
        <trans-unit id="c3ffe3bd9eca23fdcbd13e0773ed39790a3759d5" translate="yes" xml:space="preserve">
          <source>To protect against all other forged requests, we introduce a &lt;em&gt;required security token&lt;/em&gt; that our site knows but other sites don't know. We include the security token in requests and verify it on the server. This is a one-liner in your application controller, and is the default for newly created Rails applications:</source>
          <target state="translated">为了防止所有其他伪造的请求，我们引入了一个&lt;em&gt;必需的安全令牌&lt;/em&gt;，该&lt;em&gt;令牌&lt;/em&gt;是我们的站点知道的，而其他站点却不知道。我们在请求中包含安全令牌，并在服务器上进行验证。这是您的应用程序控制器中的一线工具，并且是新创建的Rails应用程序的默认设置：</target>
        </trans-unit>
        <trans-unit id="fbacf730e1f12d7ec162c71112b3231589ee1b04" translate="yes" xml:space="preserve">
          <source>To quickly install Ruby and Ruby on Rails on your system in Windows, you can use &lt;a href=&quot;http://railsinstaller.org&quot;&gt;Rails Installer&lt;/a&gt;. For more installation methods for most Operating Systems take a look at &lt;a href=&quot;https://www.ruby-lang.org/en/documentation/installation/&quot;&gt;ruby-lang.org&lt;/a&gt;.</source>
          <target state="translated">要在Windows的系统上快速安装Ruby和Ruby on Rails，可以使用&lt;a href=&quot;http://railsinstaller.org&quot;&gt;Rails Installer&lt;/a&gt;。有关大多数操作系统的更多安装方法，请访问&lt;a href=&quot;https://www.ruby-lang.org/en/documentation/installation/&quot;&gt;ruby-lang.org&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="90fe648660dadf05da27b9950635a3eaa940745f" translate="yes" xml:space="preserve">
          <source>To raise an exception when the value is blank, append a bang to the key name, like:</source>
          <target state="translated">要在值为空白时引发异常,请在键名后附加一个 &quot;砰 &quot;字,如:。</target>
        </trans-unit>
        <trans-unit id="a7014e07a3174e5afc62b83dc5349302192a4817" translate="yes" xml:space="preserve">
          <source>To re-enable the old finders, you can use the &lt;a href=&quot;https://github.com/rails/activerecord-deprecated_finders&quot;&gt;activerecord-deprecated_finders gem&lt;/a&gt;.</source>
          <target state="translated">要重新启用旧的查找器，可以使用&lt;a href=&quot;https://github.com/rails/activerecord-deprecated_finders&quot;&gt;activerecord-deprecated_finders gem&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9734f2bc5fb4092de8e84c7cf219d91ff62d9e83" translate="yes" xml:space="preserve">
          <source>To reconfigure an existing &lt;a href=&quot;backtracecleaner&quot;&gt;BacktraceCleaner&lt;/a&gt; (like the default one in Rails) and show as much data as possible, you can always call &lt;code&gt;BacktraceCleaner#remove_silencers!&lt;/code&gt;, which will restore the backtrace to a pristine state. If you need to reconfigure an existing &lt;a href=&quot;backtracecleaner&quot;&gt;BacktraceCleaner&lt;/a&gt; so that it does not filter or modify the paths of any lines of the backtrace, you can call &lt;code&gt;BacktraceCleaner#remove_filters!&lt;/code&gt; These two methods will give you a completely untouched backtrace.</source>
          <target state="translated">要重新配置现有的&lt;a href=&quot;backtracecleaner&quot;&gt;BacktraceCleaner&lt;/a&gt;（如Rails中的默认值）并显示尽可能多的数据，您始终可以调用 &lt;code&gt;BacktraceCleaner#remove_silencers!&lt;/code&gt; ，它将回溯恢复到原始状态。如果需要重新配置现有的&lt;a href=&quot;backtracecleaner&quot;&gt;BacktraceCleaner&lt;/a&gt;，以使其不过滤或修改backtrace的任何行的路径，则可以调用 &lt;code&gt;BacktraceCleaner#remove_filters!&lt;/code&gt; 这两种方法将为您提供完全不变的回溯。</target>
        </trans-unit>
        <trans-unit id="22cdc363aec48d3827e0a2a82515f3665e8d29b4" translate="yes" xml:space="preserve">
          <source>To refer to such a delayed on-demand variant, simply link to the variant through the resolved route provided by Active Storage like so:</source>
          <target state="translated">要引用这样一个延迟的按需变体,只需通过Active Storage提供的解析路由像这样链接到变体。</target>
        </trans-unit>
        <trans-unit id="e71e6885d80604fc3a6024543fd47eff444bf0ec" translate="yes" xml:space="preserve">
          <source>To remove a csv renderer:</source>
          <target state="translated">要删除一个csv渲染器。</target>
        </trans-unit>
        <trans-unit id="68c23a1c0e409b22fae595b820777eee58c5f6c0" translate="yes" xml:space="preserve">
          <source>To remove an attachment from a model, call &lt;code&gt;purge&lt;/code&gt; on the attachment. Removal can be done in the background if your application is setup to use Active Job. Purging deletes the blob and the file from the storage service.</source>
          <target state="translated">要从模型中删除附件，请在附件上调用 &lt;code&gt;purge&lt;/code&gt; 。如果您的应用程序设置为使用&amp;ldquo;活动作业&amp;rdquo;，则可以在后台进行删除。清除会从存储服务中删除Blob和文件。</target>
        </trans-unit>
        <trans-unit id="22b532370cc31b688fc45986722a1140d028fdff" translate="yes" xml:space="preserve">
          <source>To remove something from the session, delete the key/value pair:</source>
          <target state="translated">要从会话中删除某些内容,请删除键/值对。</target>
        </trans-unit>
        <trans-unit id="ca7b121751735ab45370bc21bac0f765524f83f4" translate="yes" xml:space="preserve">
          <source>To render a partial as part of a view, you use the &lt;code&gt;render&lt;/code&gt; method within the view:</source>
          <target state="translated">要将局部视图 &lt;code&gt;render&lt;/code&gt; 为视图的一部分，请在视图内使用render方法：</target>
        </trans-unit>
        <trans-unit id="135841158f4edb521fd4516410bd234cfc795c9c" translate="yes" xml:space="preserve">
          <source>To render an HTML page with debugging information, use the value &lt;code&gt;:default&lt;/code&gt;.</source>
          <target state="translated">要使用调试信息呈现HTML页面，请使用值 &lt;code&gt;:default&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c8d97e4f9f5b36ef96884483c6dc6c22fe61bcd3" translate="yes" xml:space="preserve">
          <source>To render debugging information preserving the response format, use the value &lt;code&gt;:api&lt;/code&gt;.</source>
          <target state="translated">要呈现保留响应格式的调试信息，请使用值 &lt;code&gt;:api&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0d48a62f0223661865f5b011e8f914109fcf6ff3" translate="yes" xml:space="preserve">
          <source>To reset the entire session, use &lt;code&gt;reset_session&lt;/code&gt;.</source>
          <target state="translated">要重置整个会话，请使用 &lt;code&gt;reset_session&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8232b3c8cf1eb150127b13a571021c18224213f7" translate="yes" xml:space="preserve">
          <source>To resolve &lt;code&gt;User&lt;/code&gt; Ruby checks &lt;code&gt;Admin&lt;/code&gt; in the former case, but it does not in the latter because it does not belong to the nesting (see &lt;a href=&quot;#nesting&quot;&gt;Nesting&lt;/a&gt; and &lt;a href=&quot;#resolution-algorithms&quot;&gt;Resolution Algorithms&lt;/a&gt;).</source>
          <target state="translated">要解决 &lt;code&gt;User&lt;/code&gt; Ruby 在前一种情况下检查 &lt;code&gt;Admin&lt;/code&gt; ，但在后一种情况下不检查Admin，因为它不属于嵌套（请参见&lt;a href=&quot;#nesting&quot;&gt;嵌套&lt;/a&gt;和&lt;a href=&quot;#resolution-algorithms&quot;&gt;解析算法&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="6743c0ebbcdb84c8d2eee31727667945df512865" translate="yes" xml:space="preserve">
          <source>To retrieve objects from the database, Active Record provides several finder methods. Each finder method allows you to pass arguments into it to perform certain queries on your database without writing raw SQL.</source>
          <target state="translated">为了从数据库中检索对象,Active Record提供了几个finder方法。每个finder方法都允许你把参数传入它,以便在你的数据库中执行某些查询,而不需要编写原始的SQL。</target>
        </trans-unit>
        <trans-unit id="86a73c29a7459929d4b5f13b87e34a853279f83c" translate="yes" xml:space="preserve">
          <source>To retrieve records from the database in a specific order, you can use the &lt;code&gt;order&lt;/code&gt; method.</source>
          <target state="translated">要以特定顺序从数据库检索记录，可以使用 &lt;code&gt;order&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="c10c89631b9702ef45bf2d36366eb1588de95e2f" translate="yes" xml:space="preserve">
          <source>To roll the database back to a previous migration version, use &lt;code&gt;rails
db:rollback VERSION=X&lt;/code&gt; where &lt;code&gt;X&lt;/code&gt; is the version to which you wish to downgrade. Alternatively, you can also use the STEP option if you wish to rollback last few migrations. &lt;code&gt;rails db:rollback
STEP=2&lt;/code&gt; will rollback the latest two migrations.</source>
          <target state="translated">要将数据库回滚到以前的迁移版本，请使用 &lt;code&gt;rails db:rollback VERSION=X&lt;/code&gt; ，其中 &lt;code&gt;X&lt;/code&gt; 是您希望降级到的版本。另外，如果希望回滚最近的几次迁移，也可以使用STEP选项。 &lt;code&gt;rails db:rollback STEP=2&lt;/code&gt; 将回滚最近的两次迁移。</target>
        </trans-unit>
        <trans-unit id="7784a5056ff1425ce0a3c8586fb49ecd8c14da1a" translate="yes" xml:space="preserve">
          <source>To run migrations against the currently configured database, use &lt;code&gt;rails db:migrate&lt;/code&gt;. This will update the database by running all of the pending migrations, creating the &lt;code&gt;schema_migrations&lt;/code&gt; table (see &amp;ldquo;About the schema_migrations table&amp;rdquo; section below) if missing. It will also invoke the db:schema:dump command, which will update your db/schema.rb file to match the structure of your database.</source>
          <target state="translated">要针对当前配置的数据库运行迁移，请使用 &lt;code&gt;rails db:migrate&lt;/code&gt; 。如果丢失，这将通过运行所有挂起的迁移并创建 &lt;code&gt;schema_migrations&lt;/code&gt; 表（请参见下面的&amp;ldquo;关于schema_migrations表&amp;rdquo;一节）来更新数据库。它还将调用db：schema：dump命令，该命令将更新db / schema.rb文件以匹配数据库的结构。</target>
        </trans-unit>
        <trans-unit id="fa864a5a164067933873cc6f0c116ff0c44e5d96" translate="yes" xml:space="preserve">
          <source>To run these migrations within the context of the application, simply run &lt;code&gt;rails
db:migrate&lt;/code&gt;. When accessing the engine through &lt;code&gt;http://localhost:3000/blog&lt;/code&gt;, the articles will be empty. This is because the table created inside the application is different from the one created within the engine. Go ahead, play around with the newly mounted engine. You'll find that it's the same as when it was only an engine.</source>
          <target state="translated">要在应用程序的上下文中运行这些迁移，只需运行 &lt;code&gt;rails db:migrate&lt;/code&gt; 。通过 &lt;code&gt;http://localhost:3000/blog&lt;/code&gt; 访问引擎时，文章将为空。这是因为在应用程序内部创建的表与在引擎内部创建的表不同。继续，试用新安装的引擎。您会发现它与只是​​一个引擎时是一样的。</target>
        </trans-unit>
        <trans-unit id="2f74ad12044b7c77a663d91b88b0fde3656571e5" translate="yes" xml:space="preserve">
          <source>To save having to call &lt;code&gt;constantize&lt;/code&gt; on the &lt;code&gt;author_class&lt;/code&gt; result all the time, you could instead just override the &lt;code&gt;author_class&lt;/code&gt; getter method inside the &lt;code&gt;Blorgh&lt;/code&gt; module in the &lt;code&gt;lib/blorgh.rb&lt;/code&gt; file to always call &lt;code&gt;constantize&lt;/code&gt; on the saved value before returning the result:</source>
          <target state="translated">为了节省必须 &lt;code&gt;constantize&lt;/code&gt; 对 &lt;code&gt;author_class&lt;/code&gt; 结果调用常量的方法，您可以改为在 &lt;code&gt;lib/blorgh.rb&lt;/code&gt; 文件的 &lt;code&gt;Blorgh&lt;/code&gt; 模块内重写 &lt;code&gt;author_class&lt;/code&gt; getter方法，以始终在返回结果之前对保存的值调用 &lt;code&gt;constantize&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="b4f816dbde6fc978a92fd8d2eb21ad09b497b5a6" translate="yes" xml:space="preserve">
          <source>To see demonstrations of other engines, check out &lt;a href=&quot;https://github.com/plataformatec/devise&quot;&gt;Devise&lt;/a&gt;, an engine that provides authentication for its parent applications, or &lt;a href=&quot;https://github.com/thredded/thredded&quot;&gt;Thredded&lt;/a&gt;, an engine that provides forum functionality. There's also &lt;a href=&quot;https://github.com/spree/spree&quot;&gt;Spree&lt;/a&gt; which provides an e-commerce platform, and &lt;a href=&quot;https://github.com/refinery/refinerycms&quot;&gt;Refinery CMS&lt;/a&gt;, a CMS engine.</source>
          <target state="translated">要查看其他引擎的演示，请查看提供其父应用程序身份验证的引擎&lt;a href=&quot;https://github.com/plataformatec/devise&quot;&gt;Devise&lt;/a&gt;或提供论坛功能的引擎&lt;a href=&quot;https://github.com/thredded/thredded&quot;&gt;Thredded&lt;/a&gt;。还有提供电子商务平台的&lt;a href=&quot;https://github.com/spree/spree&quot;&gt;Spree&lt;/a&gt;和CMS引擎&lt;a href=&quot;https://github.com/refinery/refinerycms&quot;&gt;Refinery CMS&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b9be3f9111f77091831c08e5ba6bc78c18378c49" translate="yes" xml:space="preserve">
          <source>To see how a test failure is reported, you can add a failing test to the &lt;code&gt;article_test.rb&lt;/code&gt; test case.</source>
          <target state="translated">要查看如何报告测试失败，可以将失败的测试添加到 &lt;code&gt;article_test.rb&lt;/code&gt; 测试用例中。</target>
        </trans-unit>
        <trans-unit id="507825aa0aae71c1e54d11afb68d3712e90fe378" translate="yes" xml:space="preserve">
          <source>To see how an error gets reported, here's a test containing an error:</source>
          <target state="translated">要了解错误是如何被报告的,这里有一个包含错误的测试。</target>
        </trans-unit>
        <trans-unit id="d6ce7ecfcf66b239276cfcf6ffb2689eee7f93fa" translate="yes" xml:space="preserve">
          <source>To see the previous ten lines you should type &lt;code&gt;list-&lt;/code&gt; (or &lt;code&gt;l-&lt;/code&gt;).</source>
          <target state="translated">要查看前十行，应键入 &lt;code&gt;list-&lt;/code&gt; （或 &lt;code&gt;l-&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="1d3f85a07b2c38e9d8337984659364cd696a5cd9" translate="yes" xml:space="preserve">
          <source>To see this in action, change to the &lt;code&gt;test/dummy&lt;/code&gt; directory, fire up a console, and start squawking:</source>
          <target state="translated">要查看此操作，请切换到 &lt;code&gt;test/dummy&lt;/code&gt; 目录，启动控制台，然后开始鸣叫：</target>
        </trans-unit>
        <trans-unit id="567b7bc9a60c885565522b57611b72ecd6492739" translate="yes" xml:space="preserve">
          <source>To select only a subset of fields from the result set, you can specify the subset via the &lt;code&gt;select&lt;/code&gt; method.</source>
          <target state="translated">要仅从结果集中选择字段的子集，可以通过 &lt;code&gt;select&lt;/code&gt; 方法指定子集。</target>
        </trans-unit>
        <trans-unit id="8a69d93078f95ccc83e160e3298809a99d4bcd7c" translate="yes" xml:space="preserve">
          <source>To send a hash, you include the key name inside the brackets:</source>
          <target state="translated">要发送一个哈希值,你可以在括号内加入键名。</target>
        </trans-unit>
        <trans-unit id="63b384ea2f65ddc99ec87a175bafa9a268fcb101" translate="yes" xml:space="preserve">
          <source>To send parameters to interpolation use the &lt;code&gt;default_i18n_subject&lt;/code&gt; method on the mailer.</source>
          <target state="translated">要将参数发送到插值，请在邮件程序上使用 &lt;code&gt;default_i18n_subject&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="7d3d50281051232bbbf2f78142bdf9fd69c47dfb" translate="yes" xml:space="preserve">
          <source>To set a default value for the attribute, pass &lt;code&gt;default:&lt;/code&gt;, like so:</source>
          <target state="translated">要为属性设置默认值，请传递 &lt;code&gt;default:&lt;/code&gt; ,如下所示：</target>
        </trans-unit>
        <trans-unit id="06e130748a07154eadb5824402046314c29c4d17" translate="yes" xml:space="preserve">
          <source>To set an authenticity token you need to pass an &lt;code&gt;:authenticity_token&lt;/code&gt; parameter</source>
          <target state="translated">要设置真实性令牌，您需要传递 &lt;code&gt;:authenticity_token&lt;/code&gt; 参数</target>
        </trans-unit>
        <trans-unit id="3e35ed1f4878e8bebe8ad2f8794d8110386ed9ad" translate="yes" xml:space="preserve">
          <source>To set asset compression methods, set the appropriate configuration options in &lt;code&gt;production.rb&lt;/code&gt; - &lt;code&gt;config.assets.css_compressor&lt;/code&gt; for your CSS and &lt;code&gt;config.assets.js_compressor&lt;/code&gt; for your JavaScript:</source>
          <target state="translated">要设置资产压缩方法，请在CSS的 &lt;code&gt;production.rb&lt;/code&gt; - &lt;code&gt;config.assets.css_compressor&lt;/code&gt; 和JavaScript的 &lt;code&gt;config.assets.js_compressor&lt;/code&gt; 中设置适当的配置选项：</target>
        </trans-unit>
        <trans-unit id="5d82df840cae83b58010e025ce07e289f9af3d12" translate="yes" xml:space="preserve">
          <source>To set the default allowed tags or attributes across your application:</source>
          <target state="translated">设置整个应用程序的默认允许标签或属性。</target>
        </trans-unit>
        <trans-unit id="f6421ec43350f7a4f6013290b472bcbac6c163f8" translate="yes" xml:space="preserve">
          <source>To set this configuration setting within the application, an initializer should be used. By using an initializer, the configuration will be set up before the application starts and calls the engine's models, which may depend on this configuration setting existing.</source>
          <target state="translated">要在应用程序中设置此配置设置,应使用初始化器。通过使用初始化器,配置将在应用程序启动和调用引擎的模型之前进行设置,而引擎的模型可能取决于此配置设置的存在。</target>
        </trans-unit>
        <trans-unit id="2d111bf390e547005d29462846e73b7785cde0a5" translate="yes" xml:space="preserve">
          <source>To set up your CDN you have to have your application running in production on the internet at a publicly available URL, for example &lt;code&gt;example.com&lt;/code&gt;. Next you'll need to sign up for a CDN service from a cloud hosting provider. When you do this you need to configure the &quot;origin&quot; of the CDN to point back at your website &lt;code&gt;example.com&lt;/code&gt;, check your provider for documentation on configuring the origin server.</source>
          <target state="translated">要设置CDN，您必须使应用程序在Internet上的生产环境中以公开可用的URL运行，例如 &lt;code&gt;example.com&lt;/code&gt; 。接下来，您需要从云托管提供商注册CDN服务。执行此操作时，您需要配置CDN的&amp;ldquo;来源&amp;rdquo;以指向您的网站 &lt;code&gt;example.com&lt;/code&gt; ，请检查您的提供商以获取有关配置来源服务器的文档。</target>
        </trans-unit>
        <trans-unit id="6db10e18e62f9ef0cd6fcf1049650533e80fcbdd" translate="yes" xml:space="preserve">
          <source>To show the comments on an article, edit &lt;code&gt;app/views/blorgh/articles/show.html.erb&lt;/code&gt; and add this line before the &quot;Edit&quot; link:</source>
          <target state="translated">要显示对文章的评论，请编辑 &lt;code&gt;app/views/blorgh/articles/show.html.erb&lt;/code&gt; 并将此行添加到&amp;ldquo;编辑&amp;rdquo;链接之前：</target>
        </trans-unit>
        <trans-unit id="22b911e46af9524858086fadd412be7aa89058be" translate="yes" xml:space="preserve">
          <source>To show the uploaded files in a form:</source>
          <target state="translated">在表格中显示上传的文件。</target>
        </trans-unit>
        <trans-unit id="82e0e06c38d69dd9f52808d8b71a6b06bd31ccb7" translate="yes" xml:space="preserve">
          <source>To simulate &lt;code&gt;GET&lt;/code&gt;, &lt;code&gt;POST&lt;/code&gt;, &lt;code&gt;PATCH&lt;/code&gt;, &lt;code&gt;PUT&lt;/code&gt;, &lt;code&gt;DELETE&lt;/code&gt; and &lt;code&gt;HEAD&lt;/code&gt; requests prefer using &lt;a href=&quot;behavior#method-i-get&quot;&gt;get&lt;/a&gt;, &lt;a href=&quot;behavior#method-i-post&quot;&gt;post&lt;/a&gt;, &lt;a href=&quot;behavior#method-i-patch&quot;&gt;patch&lt;/a&gt;, &lt;a href=&quot;behavior#method-i-put&quot;&gt;put&lt;/a&gt;, &lt;a href=&quot;behavior#method-i-delete&quot;&gt;delete&lt;/a&gt; and &lt;a href=&quot;behavior#method-i-head&quot;&gt;head&lt;/a&gt; methods respectively which will make tests more expressive.</source>
          <target state="translated">为了模拟 &lt;code&gt;GET&lt;/code&gt; ， &lt;code&gt;POST&lt;/code&gt; ， &lt;code&gt;PATCH&lt;/code&gt; ， &lt;code&gt;PUT&lt;/code&gt; ， &lt;code&gt;DELETE&lt;/code&gt; 和 &lt;code&gt;HEAD&lt;/code&gt; 请求，最好分别使用&lt;a href=&quot;behavior#method-i-get&quot;&gt;get&lt;/a&gt;，&lt;a href=&quot;behavior#method-i-post&quot;&gt;post&lt;/a&gt;，&lt;a href=&quot;behavior#method-i-patch&quot;&gt;patch&lt;/a&gt;，&lt;a href=&quot;behavior#method-i-put&quot;&gt;put&lt;/a&gt;，&lt;a href=&quot;behavior#method-i-delete&quot;&gt;delete&lt;/a&gt;和&lt;a href=&quot;behavior#method-i-head&quot;&gt;head&lt;/a&gt;方法，这将使测试更具表现力。</target>
        </trans-unit>
        <trans-unit id="053b225e23faecc1b2f5f015e3c6fb9a248938b8" translate="yes" xml:space="preserve">
          <source>To skip duplicate rows, see &lt;code&gt;ActiveRecord::Persistence#insert_all&lt;/code&gt;. To replace them, see &lt;code&gt;ActiveRecord::Persistence#upsert_all&lt;/code&gt;.</source>
          <target state="translated">要跳过重复的行，请参见 &lt;code&gt;ActiveRecord::Persistence#insert_all&lt;/code&gt; 。要替换它们，请参见 &lt;code&gt;ActiveRecord::Persistence#upsert_all&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5c82c3d0de5a3a42ef5f4e4e32977c025b23f45c" translate="yes" xml:space="preserve">
          <source>To skip rows according to just one unique index pass &lt;code&gt;:unique_by&lt;/code&gt;.</source>
          <target state="translated">要仅根据一个唯一索引跳过行，请通过 &lt;code&gt;:unique_by&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ec0007085506b84d0313a26ec7f7c87e62499ef7" translate="yes" xml:space="preserve">
          <source>To specify a dependency that should be installed with the engine during a traditional &lt;code&gt;gem install&lt;/code&gt;, specify it inside the &lt;code&gt;Gem::Specification&lt;/code&gt; block inside the &lt;code&gt;.gemspec&lt;/code&gt; file in the engine:</source>
          <target state="translated">要指定在传统的 &lt;code&gt;gem install&lt;/code&gt; 过程中应随引擎安装的依赖项，请在引擎中 &lt;code&gt;.gemspec&lt;/code&gt; 文件内的 &lt;code&gt;Gem::Specification&lt;/code&gt; 块内指定该依赖项：</target>
        </trans-unit>
        <trans-unit id="bfb1b80eb175598abe6f4f144c8d542768d16d33" translate="yes" xml:space="preserve">
          <source>To specify a dependency that should only be installed as a development dependency of the application, specify it like this:</source>
          <target state="translated">要指定一个只能作为应用程序的开发依赖关系安装的依赖关系,可以这样指定。</target>
        </trans-unit>
        <trans-unit id="fea55d37307ae227eb72c159fcf3b2893b1226da" translate="yes" xml:space="preserve">
          <source>To start out, write a failing test that shows the behavior you'd like:</source>
          <target state="translated">首先,写一个失败的测试,显示你想要的行为。</target>
        </trans-unit>
        <trans-unit id="a39bbb3fa9ebdd7c9fa5b7f16f18cadece0e18d7" translate="yes" xml:space="preserve">
          <source>To stop the web server, hit Ctrl+C in the terminal window where it's running. To verify the server has stopped you should see your command prompt cursor again. For most UNIX-like systems including macOS this will be a dollar sign &lt;code&gt;$&lt;/code&gt;. In development mode, Rails does not generally require you to restart the server; changes you make in files will be automatically picked up by the server.</source>
          <target state="translated">要停止Web服务器，请在运行它的终端窗口中按Ctrl + C。要验证服务器已停止，您应该再次看到命令提示符游标。对于包括macOS在内的大多数类似UNIX的系统，这将是一个美元符号 &lt;code&gt;$&lt;/code&gt; 。在开发模式下，Rails通常不需要您重新启动服务器。您在文件中所做的更改将被服务器自动提取。</target>
        </trans-unit>
        <trans-unit id="f9fa5042ed4dcfd31d06ae06e8d8bbfacf10d4b7" translate="yes" xml:space="preserve">
          <source>To store something in the session, just assign it to the key like a hash:</source>
          <target state="translated">要在会话中存储一些东西,只需将其像哈希一样分配给键。</target>
        </trans-unit>
        <trans-unit id="4780fc0f55aaba749bf674b4c8fb89803edfb087" translate="yes" xml:space="preserve">
          <source>To stream data to the client, use &lt;code&gt;send_data&lt;/code&gt;:</source>
          <target state="translated">要将数据流传输到客户端，请使用 &lt;code&gt;send_data&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="c5576362a518735466c660f07ea0a3f03e740714" translate="yes" xml:space="preserve">
          <source>To support a formatter, you must manually assign a formatter from the &lt;code&gt;config.log_formatter&lt;/code&gt; value to the logger.</source>
          <target state="translated">要支持格式化程序，必须从 &lt;code&gt;config.log_formatter&lt;/code&gt; 值中手动将格式化程序分配给记录器。</target>
        </trans-unit>
        <trans-unit id="db920e29a22b02f878501e4d8ef6fa55d8e07a21" translate="yes" xml:space="preserve">
          <source>To support silencing, the logger must include &lt;code&gt;ActiveSupport::LoggerSilence&lt;/code&gt; module. The &lt;code&gt;ActiveSupport::Logger&lt;/code&gt; class already includes these modules.</source>
          <target state="translated">要支持静音，记录器必须包括 &lt;code&gt;ActiveSupport::LoggerSilence&lt;/code&gt; 模块。该 &lt;code&gt;ActiveSupport::Logger&lt;/code&gt; 类已经包含了这些模块。</target>
        </trans-unit>
        <trans-unit id="d690bfc46b8e35f3c61f13f097453813c24f4b0f" translate="yes" xml:space="preserve">
          <source>To support tagged logs, the log instance must be wrapped with &lt;code&gt;ActiveSupport::TaggedLogging&lt;/code&gt;.</source>
          <target state="translated">要支持标记的日志，该日志实例必须使用 &lt;code&gt;ActiveSupport::TaggedLogging&lt;/code&gt; 进行包装。</target>
        </trans-unit>
        <trans-unit id="a3e4bfdda24efd27566a387296c9d24337cb9532" translate="yes" xml:space="preserve">
          <source>To suppress leading and trailing whitespaces, you can use &lt;code&gt;&amp;lt;%-&lt;/code&gt;&lt;code&gt;-%&amp;gt;&lt;/code&gt; interchangeably with &lt;code&gt;&amp;lt;%&lt;/code&gt; and &lt;code&gt;%&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">要抑制前导空格和尾随空格，可以将 &lt;code&gt;&amp;lt;%-&lt;/code&gt; &lt;code&gt;-%&amp;gt;&lt;/code&gt; 与 &lt;code&gt;&amp;lt;%&lt;/code&gt; 和 &lt;code&gt;%&amp;gt;&lt;/code&gt; 交替使用。</target>
        </trans-unit>
        <trans-unit id="07c568d4eb419bf85521ea6d1a52e125bc8f2258" translate="yes" xml:space="preserve">
          <source>To switch to the Vips processor, you would add the following to &lt;code&gt;config/application.rb&lt;/code&gt;:</source>
          <target state="translated">要切换到Vips处理器，请将以下内容添加到 &lt;code&gt;config/application.rb&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="7d07682b0f4f98f71c0d52367bf6f551d905f0b3" translate="yes" xml:space="preserve">
          <source>To test AJAX requests, you can specify the &lt;code&gt;xhr: true&lt;/code&gt; option to &lt;code&gt;get&lt;/code&gt;, &lt;code&gt;post&lt;/code&gt;, &lt;code&gt;patch&lt;/code&gt;, &lt;code&gt;put&lt;/code&gt;, and &lt;code&gt;delete&lt;/code&gt; methods. For example:</source>
          <target state="translated">要测试AJAX请求，可以为 &lt;code&gt;get&lt;/code&gt; ， &lt;code&gt;post&lt;/code&gt; ， &lt;code&gt;patch&lt;/code&gt; ， &lt;code&gt;put&lt;/code&gt; 和 &lt;code&gt;delete&lt;/code&gt; 方法指定 &lt;code&gt;xhr: true&lt;/code&gt; 选项。例如：</target>
        </trans-unit>
        <trans-unit id="76abbf20f513adf380a34c5d6935ff1faa5fb00b" translate="yes" xml:space="preserve">
          <source>To test that your method does what it says it does, run the unit tests with &lt;code&gt;bin/test&lt;/code&gt; from your plugin directory.</source>
          <target state="translated">要测试您的方法是否达到了 &lt;code&gt;bin/test&lt;/code&gt; ，请从插件目录中使用bin / test运行单元测试。</target>
        </trans-unit>
        <trans-unit id="563d9d2a9205fcb53f07d7d86c5597f1f586d6df" translate="yes" xml:space="preserve">
          <source>To turn off HSTS, omitting the header is not enough. Browsers will remember the original HSTS directive until it expires. Instead, use the header to tell browsers to expire HSTS immediately. Setting &lt;code&gt;hsts: false&lt;/code&gt; is a shortcut for &lt;code&gt;hsts: { expires: 0 }&lt;/code&gt;.</source>
          <target state="translated">要关闭HSTS，仅删除标题是不够的。浏览器将记住原始的HSTS指令，直到其过期为止。而是使用标头告诉浏览器立即使HSTS过期。设置 &lt;code&gt;hsts: false&lt;/code&gt; 是 &lt;code&gt;hsts: { expires: 0 }&lt;/code&gt; 的快捷方式。</target>
        </trans-unit>
        <trans-unit id="79c3168a1a8d09ad93e4cdbd3715a216cdfee62b" translate="yes" xml:space="preserve">
          <source>To unregister a MIME type:</source>
          <target state="translated">要取消注册一个MIME类型。</target>
        </trans-unit>
        <trans-unit id="334e52eb6863fd42a7ffce014c801acc16fe897d" translate="yes" xml:space="preserve">
          <source>To upload binary files on Windows, pass &lt;code&gt;:binary&lt;/code&gt; as the last parameter. This will not affect other platforms:</source>
          <target state="translated">要在Windows上上传二进制文件，请传递 &lt;code&gt;:binary&lt;/code&gt; 作为最后一个参数。这不会影响其他平台：</target>
        </trans-unit>
        <trans-unit id="f86cfed7413cbd53bd2f76385b8b2bb26543569f" translate="yes" xml:space="preserve">
          <source>To use &lt;code&gt;ActiveModel::Serializers::JSON&lt;/code&gt; you only need to change the module you are including from &lt;code&gt;ActiveModel::Serialization&lt;/code&gt; to &lt;code&gt;ActiveModel::Serializers::JSON&lt;/code&gt;.</source>
          <target state="translated">要使用 &lt;code&gt;ActiveModel::Serializers::JSON&lt;/code&gt; ，只需要将包含的模块从 &lt;code&gt;ActiveModel::Serialization&lt;/code&gt; 更改为 &lt;code&gt;ActiveModel::Serializers::JSON&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="29afb7c5d099e377b716dbeb9e7edb10838d1ba5" translate="yes" xml:space="preserve">
          <source>To use &lt;code&gt;rackup&lt;/code&gt; instead of Rails' &lt;code&gt;rails server&lt;/code&gt;, you can put the following inside &lt;code&gt;config.ru&lt;/code&gt; of your Rails application's root directory:</source>
          <target state="translated">要使用 &lt;code&gt;rackup&lt;/code&gt; 代替Rails的 &lt;code&gt;rails server&lt;/code&gt; ，可以将以下内容放在Rails应用程序根目录的 &lt;code&gt;config.ru&lt;/code&gt; 中：</target>
        </trans-unit>
        <trans-unit id="31a513a06016a34caf7c0901b08d1c4419a32387" translate="yes" xml:space="preserve">
          <source>To use Action Mailer, you need to create a mailer model.</source>
          <target state="translated">要使用Action Mailer,您需要创建一个邮件模型。</target>
        </trans-unit>
        <trans-unit id="63efbbc2d83d6f08dc36f06dd855914c5c196627" translate="yes" xml:space="preserve">
          <source>To use Backburner set the queue_adapter config to &lt;code&gt;:backburner&lt;/code&gt;.</source>
          <target state="translated">要使用Backburner，请将queue_adapter配置设置为 &lt;code&gt;:backburner&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cfb26a8f671852501054716a4fb612efbd5f3940" translate="yes" xml:space="preserve">
          <source>To use Delayed Job, set the queue_adapter config to &lt;code&gt;:delayed_job&lt;/code&gt;.</source>
          <target state="translated">要使用延迟作业，请将queue_adapter配置设置为 &lt;code&gt;:delayed_job&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="78abd79732709f235b41ac26f54e0f27ef464edb" translate="yes" xml:space="preserve">
          <source>To use Que set the queue_adapter config to &lt;code&gt;:que&lt;/code&gt;.</source>
          <target state="translated">要使用Que，请将queue_adapter配置设置为 &lt;code&gt;:que&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bfec63c8c0fb5ab4af67cc939815ff9fc93fabfd" translate="yes" xml:space="preserve">
          <source>To use Resque set the queue_adapter config to &lt;code&gt;:resque&lt;/code&gt;.</source>
          <target state="translated">要使用Resque，请将queue_adapter配置设置为 &lt;code&gt;:resque&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="eeac0f03c2323191770ea66f043353ac2edcd693" translate="yes" xml:space="preserve">
          <source>To use Sidekiq set the queue_adapter config to &lt;code&gt;:sidekiq&lt;/code&gt;.</source>
          <target state="translated">要使用Sidekiq，请将queue_adapter配置设置为 &lt;code&gt;:sidekiq&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a0c64df5b7e96718906edd95865302dacfcc66d1" translate="yes" xml:space="preserve">
          <source>To use Sneakers set the queue_adapter config to &lt;code&gt;:sneakers&lt;/code&gt;.</source>
          <target state="translated">要使用运动鞋，请将queue_adapter配置设置为 &lt;code&gt;:sneakers&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="089f8ca62ac95b9b15cef2ae944fcffa19f1e9de" translate="yes" xml:space="preserve">
          <source>To use Sucker Punch set the queue_adapter config to &lt;code&gt;:sucker_punch&lt;/code&gt;.</source>
          <target state="translated">要使用Sucker Punch，请将queue_adapter配置设置为 &lt;code&gt;:sucker_punch&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8d93032f353f3684dff439b924d144a3239e8303" translate="yes" xml:space="preserve">
          <source>To use a UUID primary key without any of the extensions, set the &lt;code&gt;:default&lt;/code&gt; option to &lt;code&gt;nil&lt;/code&gt;:</source>
          <target state="translated">要使用不带任何扩展名的UUID主键，请将 &lt;code&gt;:default&lt;/code&gt; 选项设置为 &lt;code&gt;nil&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="01a6560ac359f0b45e5d768bf7caef4a4fb00654" translate="yes" xml:space="preserve">
          <source>To use a custom cache store, simply set the cache store to a new instance of your custom class.</source>
          <target state="translated">要使用自定义缓存存储,只需将缓存存储设置为您的自定义类的新实例。</target>
        </trans-unit>
        <trans-unit id="16cdfe80fbab3d09c99a31e7b52ae4835d807d27" translate="yes" xml:space="preserve">
          <source>To use a custom local variable name within the partial, specify the &lt;code&gt;:as&lt;/code&gt; option in the call to the partial:</source>
          <target state="translated">要在局部文件中使用自定义局部变量名称，请在对局部文件的调用中指定 &lt;code&gt;:as&lt;/code&gt; 选项：</target>
        </trans-unit>
        <trans-unit id="cbb124cd3e42b858d7854133d16f1d8b2e013e5f" translate="yes" xml:space="preserve">
          <source>To use a custom separator, override the &lt;code&gt;separator&lt;/code&gt; argument.</source>
          <target state="translated">要使用自定义分隔符，请覆盖 &lt;code&gt;separator&lt;/code&gt; 参数。</target>
        </trans-unit>
        <trans-unit id="be137bccdb82824afa32a43a7660755352537faf" translate="yes" xml:space="preserve">
          <source>To use a headless driver, like Poltergeist, update your Gemfile to use Poltergeist instead of Selenium and then declare the driver name in the &lt;code&gt;application_system_test_case.rb&lt;/code&gt; file. In this case, you would leave out the &lt;code&gt;:using&lt;/code&gt; option because the driver is headless, but you can still use &lt;code&gt;:screen_size&lt;/code&gt; to change the size of the browser screen, also you can use &lt;code&gt;:options&lt;/code&gt; to pass options supported by the driver. Please refer to your driver documentation to learn about supported options.</source>
          <target state="translated">要使用无头驱动程序（如Poltergeist），请更新您的Gemfile以使用Poltergeist而不是Selenium，然后在 &lt;code&gt;application_system_test_case.rb&lt;/code&gt; 文件中声明驱动程序名称。在这种情况下，由于驱动程序没有头，您将省略 &lt;code&gt;:using&lt;/code&gt; 选项，但仍可以使用 &lt;code&gt;:screen_size&lt;/code&gt; 更改浏览器屏幕的大小，也可以使用 &lt;code&gt;:options&lt;/code&gt; 传递驱动程序支持的选项。请参考驱动程序文档以了解支持的选项。</target>
        </trans-unit>
        <trans-unit id="8d749486cb0ce9dfa9e6537e7edf3206e24ced0c" translate="yes" xml:space="preserve">
          <source>To use engine's migrations in application you can use the rake task below, which copies them to application's dir:</source>
          <target state="translated">要在应用程序中使用引擎的迁移,你可以使用下面的rake任务,将它们复制到应用程序的dir。</target>
        </trans-unit>
        <trans-unit id="6f72fb95ec784f0f0b4396a61a188a60e22e4305" translate="yes" xml:space="preserve">
          <source>To use it, insert it near the top of the middleware stack, using &lt;code&gt;config/application.rb&lt;/code&gt;:</source>
          <target state="translated">要使用它，请使用 &lt;code&gt;config/application.rb&lt;/code&gt; 将其插入中间件堆栈的顶部附近：</target>
        </trans-unit>
        <trans-unit id="9034872b1f2e613b63f4393ca1728d7d452b7374" translate="yes" xml:space="preserve">
          <source>To use queue_classic set the queue_adapter config to &lt;code&gt;:queue_classic&lt;/code&gt;.</source>
          <target state="translated">要使用queue_classic，请将queue_adapter配置设置为 &lt;code&gt;:queue_classic&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="35d41298efb8b0ad5a971a7547f7bdd79e5b6645" translate="yes" xml:space="preserve">
          <source>To use the &lt;a href=&quot;databaseselector&quot;&gt;DatabaseSelector&lt;/a&gt; in your application with default settings add the following options to your environment config:</source>
          <target state="translated">要将应用程序中的&lt;a href=&quot;databaseselector&quot;&gt;DatabaseSelector&lt;/a&gt;与默认设置一起使用，请将以下选项添加到您的环境配置中：</target>
        </trans-unit>
        <trans-unit id="bdb9175c626f67f07a3f428fac07fa2bee7bb390" translate="yes" xml:space="preserve">
          <source>To use the Amazon S3 service in production, you add the following to &lt;code&gt;config/environments/production.rb&lt;/code&gt;:</source>
          <target state="translated">要在生产中使用Amazon S3服务，请将以下内容添加到 &lt;code&gt;config/environments/production.rb&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="d1977fd7fff7138c1c55295f34f91a3003f3ecd2" translate="yes" xml:space="preserve">
          <source>To use the Inline set the queue_adapter config to &lt;code&gt;:inline&lt;/code&gt;.</source>
          <target state="translated">要使用Inline，请将queue_adapter配置设置为 &lt;code&gt;:inline&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c85bb3f433af75d0fd44ee10dd89abfc7bcf6cc1" translate="yes" xml:space="preserve">
          <source>To use the authentication system, we specify it at the top of our &lt;code&gt;ArticlesController&lt;/code&gt; in &lt;code&gt;app/controllers/articles_controller.rb&lt;/code&gt;. In our case, we want the user to be authenticated on every action except &lt;code&gt;index&lt;/code&gt; and &lt;code&gt;show&lt;/code&gt;, so we write that:</source>
          <target state="translated">要使用身份验证系统，我们在 &lt;code&gt;app/controllers/articles_controller.rb&lt;/code&gt; 中 &lt;code&gt;ArticlesController&lt;/code&gt; 的顶部指定它。在我们的例子中，我们希望用户对除 &lt;code&gt;index&lt;/code&gt; 和 &lt;code&gt;show&lt;/code&gt; 之外的所有操作进行身份验证，因此我们将其编写为：</target>
        </trans-unit>
        <trans-unit id="3750efae37071f6319bf02d295410aab0ccc20ec" translate="yes" xml:space="preserve">
          <source>To use the csv renderer in a controller action:</source>
          <target state="translated">要在控制器动作中使用csv渲染器。</target>
        </trans-unit>
        <trans-unit id="f0f37b40b3e37338bbe274234d7a5e6c3bcb135d" translate="yes" xml:space="preserve">
          <source>To use the new test runner simply type &lt;code&gt;rails test&lt;/code&gt;.</source>
          <target state="translated">要使用新的测试运行器，只需键入 &lt;code&gt;rails test&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="80ce1d3d33bb996930297986e6c3050ecb27747f" translate="yes" xml:space="preserve">
          <source>To use the test adapter set &lt;code&gt;adapter&lt;/code&gt; value to &lt;code&gt;test&lt;/code&gt; in your &lt;code&gt;config/cable.yml&lt;/code&gt; file.</source>
          <target state="translated">要使用测试适配器，请在 &lt;code&gt;config/cable.yml&lt;/code&gt; 文件中设置 &lt;code&gt;adapter&lt;/code&gt; 值进行 &lt;code&gt;test&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e481bec70694153e7aa7954047de1caac06c9fc2" translate="yes" xml:space="preserve">
          <source>To use the test adapter set queue_adapter config to &lt;code&gt;:test&lt;/code&gt;.</source>
          <target state="translated">要使用测试适配器，请将queue_adapter config设置为 &lt;code&gt;:test&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7cf909b63cdef87788c291bfb956e81c0ecc07f9" translate="yes" xml:space="preserve">
          <source>To use the test service when testing, you add the following to &lt;code&gt;config/environments/test.rb&lt;/code&gt;:</source>
          <target state="translated">要在测试时使用测试服务，请将以下内容添加到 &lt;code&gt;config/environments/test.rb&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="98ea955b18d2b3a5365f8fa2e4739abe3c3951fe" translate="yes" xml:space="preserve">
          <source>To use this adapter, set queue adapter to &lt;code&gt;:async&lt;/code&gt;:</source>
          <target state="translated">要使用此适配器，请将队列适配器设置为 &lt;code&gt;:async&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="81c857c7d69847a983fe06c67541e315571c191a" translate="yes" xml:space="preserve">
          <source>To use this configuration, create a test inside &lt;code&gt;test/system&lt;/code&gt; that inherits from &lt;code&gt;MobileSystemTestCase&lt;/code&gt;. Now you can test your app using multiple different configurations.</source>
          <target state="translated">要使用此配置，请在从 &lt;code&gt;MobileSystemTestCase&lt;/code&gt; 继承的 &lt;code&gt;test/system&lt;/code&gt; 中创建一个测试。现在，您可以使用多种不同的配置来测试您的应用程序。</target>
        </trans-unit>
        <trans-unit id="8775ee80a19bf753d531a588ada614dc6fa75569" translate="yes" xml:space="preserve">
          <source>To use this generator, open a terminal, navigate to a directory where you have rights to create files, and type:</source>
          <target state="translated">要使用这个生成器,打开一个终端,导航到一个你有创建文件权限的目录,然后输入。</target>
        </trans-unit>
        <trans-unit id="db2602f2d32a298873beee1cbe1cf38680278083" translate="yes" xml:space="preserve">
          <source>To use this, your client will need to make a request with JSON-encoded parameters and specify the &lt;code&gt;Content-Type&lt;/code&gt; as &lt;code&gt;application/json&lt;/code&gt;.</source>
          <target state="translated">要使用此功能，您的客户端将需要使用JSON编码的参数进行请求，并将 &lt;code&gt;Content-Type&lt;/code&gt; 指定为 &lt;code&gt;application/json&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2de46ef2c7ebb33a8887eb8c5d0f157f87ebb167" translate="yes" xml:space="preserve">
          <source>To use, pass an attribute name (as string or symbol). Be sure to declare &lt;code&gt;define_attribute_method&lt;/code&gt; after you define any prefix, suffix or affix method, or they will not hook in.</source>
          <target state="translated">若要使用，请传递属性名称（作为字符串或符号）。定义任何前缀，后缀或词缀方法后，请务必声明 &lt;code&gt;define_attribute_method&lt;/code&gt; ，否则它们将不会挂接。</target>
        </trans-unit>
        <trans-unit id="dc63230c58d5b21923a27d0485a76965d959d345" translate="yes" xml:space="preserve">
          <source>To use, pass attribute names (as strings or symbols). Be sure to declare &lt;code&gt;define_attribute_methods&lt;/code&gt; after you define any prefix, suffix or affix methods, or they will not hook in.</source>
          <target state="translated">要使用，请传递属性名称（如字符串或符号）。定义任何前缀，后缀或词缀方法后，请务必声明 &lt;code&gt;define_attribute_methods&lt;/code&gt; ，否则它们将不会挂接。</target>
        </trans-unit>
        <trans-unit id="873cf75d77dd753ab46a7e35040b692e2a17e5ea" translate="yes" xml:space="preserve">
          <source>To verify that you have everything installed correctly, you should be able to run the following:</source>
          <target state="translated">要验证你是否正确安装了所有的东西,你应该可以运行下面的程序。</target>
        </trans-unit>
        <trans-unit id="1285ddbbd6082ff3c0815dc0e62efeb98c2016cf" translate="yes" xml:space="preserve">
          <source>To verify whether or not a particular attribute of an object is valid, you can use &lt;code&gt;errors[:attribute]&lt;/code&gt;. It returns an array of all the errors for &lt;code&gt;:attribute&lt;/code&gt;. If there are no errors on the specified attribute, an empty array is returned.</source>
          <target state="translated">要验证对象的特定属性是否有效，可以使用 &lt;code&gt;errors[:attribute]&lt;/code&gt; 。它返回 &lt;code&gt;:attribute&lt;/code&gt; 的所有错误的数组。如果指定的属性没有错误，则返回一个空数组。</target>
        </trans-unit>
        <trans-unit id="6fbc729c716fb26282a9761b80de4f7202017c7f" translate="yes" xml:space="preserve">
          <source>To write in the current log use the &lt;code&gt;logger.(debug|info|warn|error|fatal|unknown)&lt;/code&gt; method from within a controller, model, or mailer:</source>
          <target state="translated">要写入当前日志，请使用控制器，模型或邮件程序中的 &lt;code&gt;logger.(debug|info|warn|error|fatal|unknown)&lt;/code&gt; 方法：</target>
        </trans-unit>
        <trans-unit id="7e7fbc811015943c1c30e7ceeea8b05c76a8ee58" translate="yes" xml:space="preserve">
          <source>To:</source>
          <target state="translated">To:</target>
        </trans-unit>
        <trans-unit id="0a5cf543cd4d686dcf3ac6e33aedc11950b90b8c" translate="yes" xml:space="preserve">
          <source>Top-level &lt;code&gt;HashWithIndifferentAccess&lt;/code&gt; is soft-deprecated</source>
          <target state="translated">不建议使用顶级 &lt;code&gt;HashWithIndifferentAccess&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="10f575d9251c4dbc59e91d83151f5a50ffa87866" translate="yes" xml:space="preserve">
          <source>Total of grouped items</source>
          <target state="translated">归类项目总数</target>
        </trans-unit>
        <trans-unit id="022312f469e4cf2940eea5c2774be1b0a2ff51bc" translate="yes" xml:space="preserve">
          <source>Touches all records in the current relation without instantiating records first with the &lt;code&gt;updated_at&lt;/code&gt;/&lt;code&gt;updated_on&lt;/code&gt; attributes set to the current time or the time specified. This method can be passed attribute names and an optional time argument. If attribute names are passed, they are updated along with &lt;code&gt;updated_at&lt;/code&gt;/&lt;code&gt;updated_on&lt;/code&gt; attributes. If no time argument is passed, the current time is used as default.</source>
          <target state="translated">触摸当前关系中的所有记录，而无需先将 &lt;code&gt;updated_at&lt;/code&gt; / &lt;code&gt;updated_on&lt;/code&gt; 属性设置为当前时间或指定的时间实例化记录。此方法可以传递属性名称和可选的时间参数。如果传递了属性名称，则它们将与 &lt;code&gt;updated_at&lt;/code&gt; / &lt;code&gt;updated_on&lt;/code&gt; 属性一起更新。如果未传递任何时间参数，则将当前时间用作默认时间。</target>
        </trans-unit>
        <trans-unit id="ae540dce1659c1d1aa822c4cbdb17e93f0dc5a48" translate="yes" xml:space="preserve">
          <source>Tracing Autoloads</source>
          <target state="translated">追踪自动加载</target>
        </trans-unit>
        <trans-unit id="82d5289f6f1087b5881413ee7d99895f16e8ea68" translate="yes" xml:space="preserve">
          <source>Track both previous and current value of the changed attribute. Returns an array if changed, otherwise returns nil.</source>
          <target state="translated">追踪改变后的属性的前值和当前值,如果改变了,返回一个数组,否则返回nil。如果改变了,返回一个数组,否则返回nil。</target>
        </trans-unit>
        <trans-unit id="0eabbcb5df3c900b5b9056b76cbe9c7db52939eb" translate="yes" xml:space="preserve">
          <source>Track the previous value of the attribute.</source>
          <target state="translated">追踪属性的前一个值。</target>
        </trans-unit>
        <trans-unit id="6650dc39257b665514df322a12ffb3043e12d653" translate="yes" xml:space="preserve">
          <source>Track when a job was enqueued</source>
          <target state="translated">追踪一个工作何时被排队</target>
        </trans-unit>
        <trans-unit id="bc1d68f19a8818a014f7f8000486ff7f3f0f6c02" translate="yes" xml:space="preserve">
          <source>Track whether the particular attribute has been changed or not.</source>
          <target state="translated">追踪特定属性是否被改变。</target>
        </trans-unit>
        <trans-unit id="7952082338d4b4e017572cad8a6217092afda9b8" translate="yes" xml:space="preserve">
          <source>Traditionally, when people said that they used Rails as an &quot;API&quot;, they meant providing a programmatically accessible API alongside their web application. For example, GitHub provides &lt;a href=&quot;https://developer.github.com&quot;&gt;an API&lt;/a&gt; that you can use from your own custom clients.</source>
          <target state="translated">传统上，当人们说使用Rails作为&amp;ldquo; API&amp;rdquo;时，他们的意思是在Web应用程序旁边提供可编程访问的API。例如，GitHub提供了&lt;a href=&quot;https://developer.github.com&quot;&gt;一个API&lt;/a&gt;，您可以从自己的自定义客户端中使用它。</target>
        </trans-unit>
        <trans-unit id="92cda78aedf9a7224672a0a74a47de9961784386" translate="yes" xml:space="preserve">
          <source>Transaction Callbacks</source>
          <target state="translated">交易回调</target>
        </trans-unit>
        <trans-unit id="95acd4a389ae050d0389bc3d1f75f842a801e716" translate="yes" xml:space="preserve">
          <source>Transaction isolation</source>
          <target state="translated">交易隔离</target>
        </trans-unit>
        <trans-unit id="84b5f207a62cdad2712d08229eb509de9b5c38c2" translate="yes" xml:space="preserve">
          <source>Transactional Migrations</source>
          <target state="translated">事务性迁移</target>
        </trans-unit>
        <trans-unit id="1a00edfce4dccdd473d0b5b4aa4b9431839e6d94" translate="yes" xml:space="preserve">
          <source>Transactional Tests</source>
          <target state="translated">事务性测试</target>
        </trans-unit>
        <trans-unit id="1e3281a962e6db2e54e787f796eb7d2b1582389a" translate="yes" xml:space="preserve">
          <source>Transactions</source>
          <target state="translated">Transactions</target>
        </trans-unit>
        <trans-unit id="270dfa7b05b65e4d6ee78138df006c68703ff066" translate="yes" xml:space="preserve">
          <source>Transactions are protective blocks where SQL statements are only permanent if they can all succeed as one atomic action. The classic example is a transfer between two accounts where you can only have a deposit if the withdrawal succeeded and vice versa. Transactions enforce the integrity of the database and guard the data against program errors or database break-downs. So basically you should use transaction blocks whenever you have a number of statements that must be executed together or not at all.</source>
          <target state="translated">事务是保护块,SQL语句只有作为一个原子动作都能成功,才是永久的。经典的例子是两个账户之间的转账,只有取款成功才能有存款,反之亦然。事务强制执行数据库的完整性,并保护数据免受程序错误或数据库崩溃的影响。所以基本上,只要你有一些语句必须一起执行或根本不执行,你就应该使用事务块。</target>
        </trans-unit>
        <trans-unit id="38e996af47c2368fdbb151ed9844e2d4f71df67d" translate="yes" xml:space="preserve">
          <source>Transactions::ClassMethods</source>
          <target state="translated">Transactions::ClassMethods</target>
        </trans-unit>
        <trans-unit id="2a84a05169c2f3e4d6a1d7045a581c88b7430fce" translate="yes" xml:space="preserve">
          <source>Transactions::ClassMethods#after_commit</source>
          <target state="translated">Transactions::ClassMethods#after_commit</target>
        </trans-unit>
        <trans-unit id="acbf0cbda9bc720f3ef4a97b33b7696783161277" translate="yes" xml:space="preserve">
          <source>Transactions::ClassMethods#after_create_commit</source>
          <target state="translated">Transactions::ClassMethods#after_create_commit</target>
        </trans-unit>
        <trans-unit id="b0030800dee0f15a62044c09afa3fb2b628ce2c6" translate="yes" xml:space="preserve">
          <source>Transactions::ClassMethods#after_destroy_commit</source>
          <target state="translated">Transactions::ClassMethods#after_destroy_commit</target>
        </trans-unit>
        <trans-unit id="801a0b3236661b839fc0a038020be43381351c68" translate="yes" xml:space="preserve">
          <source>Transactions::ClassMethods#after_rollback</source>
          <target state="translated">Transactions::ClassMethods#after_rollback</target>
        </trans-unit>
        <trans-unit id="baa3610af3e4304f396e9764c6cb826da966e595" translate="yes" xml:space="preserve">
          <source>Transactions::ClassMethods#after_save_commit</source>
          <target state="translated">Transactions::ClassMethods#after_save_commit</target>
        </trans-unit>
        <trans-unit id="0270461fea9c66564f7a254959fb51e5e3a6cc9d" translate="yes" xml:space="preserve">
          <source>Transactions::ClassMethods#after_update_commit</source>
          <target state="translated">Transactions::ClassMethods#after_update_commit</target>
        </trans-unit>
        <trans-unit id="bab7d9a3a43c06b0404aa40dff8874797553fbf9" translate="yes" xml:space="preserve">
          <source>Transactions::ClassMethods#transaction</source>
          <target state="translated">Transactions::ClassMethods#transaction</target>
        </trans-unit>
        <trans-unit id="68c317b8b642e4941db4a5d8067bb3406ffbda72" translate="yes" xml:space="preserve">
          <source>Transform the model name into a more human format, using I18n. By default, it will underscore then humanize the class name.</source>
          <target state="translated">使用I18n将模型名称转化为更人性化的格式。默认情况下,它将下划线,然后将类名人性化。</target>
        </trans-unit>
        <trans-unit id="d1a5f09e5a6f5a362edfb0ba9e56cc9962e60e03" translate="yes" xml:space="preserve">
          <source>Transformers::Transformer</source>
          <target state="translated">Transformers::Transformer</target>
        </trans-unit>
        <trans-unit id="6c5f528c2a7bc72201870dcef72ffbe0cdc3fff8" translate="yes" xml:space="preserve">
          <source>Transformers::Transformer#process</source>
          <target state="translated">Transformers::Transformer#process</target>
        </trans-unit>
        <trans-unit id="712ae41fc53fcc53fb6bc77f5e1f3c26bf682305" translate="yes" xml:space="preserve">
          <source>Transformers::Transformer#transform</source>
          <target state="translated">Transformers::Transformer#transform</target>
        </trans-unit>
        <trans-unit id="448c20e676f6e539a81309bdcb9680320cf14d0a" translate="yes" xml:space="preserve">
          <source>Transformers::Transformer#transformations</source>
          <target state="translated">Transformers::Transformer#transformations</target>
        </trans-unit>
        <trans-unit id="83cce67c3bfd7dab546d2d1ec6c3a8117035395c" translate="yes" xml:space="preserve">
          <source>Transformers::Transformer::new</source>
          <target state="translated">Transformers::Transformer::new</target>
        </trans-unit>
        <trans-unit id="741ef17a1a9e0bbed6465fd207e9b13dfc50cd2d" translate="yes" xml:space="preserve">
          <source>Transforming Images</source>
          <target state="translated">转换图像</target>
        </trans-unit>
        <trans-unit id="bbc65aff8daf8c3789a28da57b533aed205bdbd8" translate="yes" xml:space="preserve">
          <source>Transforms attribute names into a more human format, such as &amp;ldquo;First name&amp;rdquo; instead of &amp;ldquo;first_name&amp;rdquo;.</source>
          <target state="translated">将属性名称转换为更人性化的格式，例如&amp;ldquo; First name&amp;rdquo;而不是&amp;ldquo; first_name&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="ada596db991c7089250e37cf5f2573c952122c7d" translate="yes" xml:space="preserve">
          <source>Translated Paths</source>
          <target state="translated">翻译路径</target>
        </trans-unit>
        <trans-unit id="3f5191448f501cba2ff1cf27dfb0c8dcff629095" translate="yes" xml:space="preserve">
          <source>Translates an error message in its default scope (&lt;code&gt;activemodel.errors.messages&lt;/code&gt;).</source>
          <target state="translated">在其默认范围（ &lt;code&gt;activemodel.errors.messages&lt;/code&gt; ）中翻译错误消息。</target>
        </trans-unit>
        <trans-unit id="42776285f240d676b2502e1ff1fabc97b2bba5b3" translate="yes" xml:space="preserve">
          <source>Translates the &lt;code&gt;subject&lt;/code&gt; using Rails I18n class under &lt;code&gt;[mailer_scope, action_name]&lt;/code&gt; scope. If it does not find a translation for the &lt;code&gt;subject&lt;/code&gt; under the specified scope it will default to a humanized version of the &lt;code&gt;action_name&lt;/code&gt;. If the subject has interpolations, you can pass them through the &lt;code&gt;interpolations&lt;/code&gt; parameter.</source>
          <target state="translated">使用 &lt;code&gt;[mailer_scope, action_name]&lt;/code&gt; 范围下的Rails I18n类翻译 &lt;code&gt;subject&lt;/code&gt; 。如果找不到指定范围内 &lt;code&gt;subject&lt;/code&gt; 的翻译，它将默认为 &lt;code&gt;action_name&lt;/code&gt; 的人性化版本。如果对象具有插值，则可以通过 &lt;code&gt;interpolations&lt;/code&gt; 参数传递它们。</target>
        </trans-unit>
        <trans-unit id="451243e728b090f06ea2905406617e392e05f974" translate="yes" xml:space="preserve">
          <source>Translating Model Content</source>
          <target state="translated">翻译模型内容</target>
        </trans-unit>
        <trans-unit id="ac26a7a94ea2e66490f932b6415a09ef6f2a913c" translate="yes" xml:space="preserve">
          <source>Translation</source>
          <target state="translated">Translation</target>
        </trans-unit>
        <trans-unit id="1da446c621416aed5e89e23280ee0dee5502a10e" translate="yes" xml:space="preserve">
          <source>Translation#human_attribute_name</source>
          <target state="translated">Translation#human_attribute_name</target>
        </trans-unit>
        <trans-unit id="cfd2977e6d37f586290990b52509fff595b9206a" translate="yes" xml:space="preserve">
          <source>Translation#i18n_scope</source>
          <target state="translated">Translation#i18n_scope</target>
        </trans-unit>
        <trans-unit id="bbcb54e4fece5d63d168777ded2dbf56c7955264" translate="yes" xml:space="preserve">
          <source>Translation#l</source>
          <target state="translated">Translation#l</target>
        </trans-unit>
        <trans-unit id="a8e462e8b6b6581114df95ae2b2ad84e9e9dbb43" translate="yes" xml:space="preserve">
          <source>Translation#localize</source>
          <target state="translated">Translation#localize</target>
        </trans-unit>
        <trans-unit id="cae63062268efd18edcab78113cd64c60f168461" translate="yes" xml:space="preserve">
          <source>Translation#lookup_ancestors</source>
          <target state="translated">Translation#lookup_ancestors</target>
        </trans-unit>
        <trans-unit id="6b766b011404e22667100c4991f00a7b14ff6db0" translate="yes" xml:space="preserve">
          <source>Translation#t</source>
          <target state="translated">Translation#t</target>
        </trans-unit>
        <trans-unit id="2e3fe21781b2c4b0f228341cf66372b1c7a9ea67" translate="yes" xml:space="preserve">
          <source>Translation#translate</source>
          <target state="translated">Translation#translate</target>
        </trans-unit>
        <trans-unit id="5207e6b5769fe3f227e176eb6b6a97ced9ce6dff" translate="yes" xml:space="preserve">
          <source>Translations are looked up by keys which can be both Symbols or Strings, so these calls are equivalent:</source>
          <target state="translated">翻译是通过键来查询的,而键既可以是Symbols,也可以是Strings,所以这些调用是等价的。</target>
        </trans-unit>
        <trans-unit id="3c365f2b247782e821ad585bd66f22f34f0b7939" translate="yes" xml:space="preserve">
          <source>Translations for Action Mailer E-Mail Subjects</source>
          <target state="translated">行动邮件主题的翻译</target>
        </trans-unit>
        <trans-unit id="b434ddd996dd8df0569be77900d2b06e26fafa2f" translate="yes" xml:space="preserve">
          <source>Translations for Active Record Models</source>
          <target state="translated">活动记录模型的翻译</target>
        </trans-unit>
        <trans-unit id="588983786c2ebc0b3412d0182f08796e220a36a0" translate="yes" xml:space="preserve">
          <source>Transliteration is restricted to UTF-8, US-ASCII and GB18030 strings Other encodings will raise an ArgumentError.</source>
          <target state="translated">翻译仅限于UTF-8、US-ASCII和GB18030字符串,其他编码将引发ArgumentError。</target>
        </trans-unit>
        <trans-unit id="6230f283c922a3fd41da712237a699a19a2d9312" translate="yes" xml:space="preserve">
          <source>Transmit a hash of data to the subscriber. The hash will automatically be wrapped in a JSON envelope with the proper channel identifier marked as the recipient.</source>
          <target state="translated">传送一个数据的哈希值给用户。该散列将自动被包装在一个JSON信封中,并将适当的频道标识符标记为收件人。</target>
        </trans-unit>
        <trans-unit id="3b035d9862f906227381e58258979f84224681f6" translate="yes" xml:space="preserve">
          <source>Tries to create a new record with the same scoped attributes defined in the relation. Returns the initialized object if validation fails.</source>
          <target state="translated">试图用关系中定义的相同范围属性创建一个新记录。如果验证失败,返回初始化对象。</target>
        </trans-unit>
        <trans-unit id="83961326424f9a7272aca3321be90cbfe594de7a" translate="yes" xml:space="preserve">
          <source>Tries to find a constant with the name specified in the argument string.</source>
          <target state="translated">试图找到一个在参数字符串中指定名称的常量。</target>
        </trans-unit>
        <trans-unit id="8461928898bbc3cebe9fb6d033e453ccd41aad0e" translate="yes" xml:space="preserve">
          <source>Tries to get the description from a USAGE file one folder above the command root.</source>
          <target state="translated">试图从命令根上一个文件夹的USAGE文件中获取描述。</target>
        </trans-unit>
        <trans-unit id="fa092bf41414cbc1443e40799908b7ce0c0ddf7d" translate="yes" xml:space="preserve">
          <source>Tries to get the description from a USAGE file one folder above the source root otherwise uses a default description.</source>
          <target state="translated">试图从源根上一个文件夹的USAGE文件中获取描述,否则使用默认描述。</target>
        </trans-unit>
        <trans-unit id="b6f8e660762e2cb553d1eb746cdd150b447dbe3e" translate="yes" xml:space="preserve">
          <source>Tries to retrieve the application name or simply return application.</source>
          <target state="translated">试图检索应用程序名称或简单地返回应用程序。</target>
        </trans-unit>
        <trans-unit id="7d6de1bee1185f778a232930344f458d671e7f96" translate="yes" xml:space="preserve">
          <source>Trix compared to other rich text editors</source>
          <target state="translated">Trix与其他富文本编辑器的比较</target>
        </trans-unit>
        <trans-unit id="0829f6055ca9f0bf1c12d891f066ae7593340e97" translate="yes" xml:space="preserve">
          <source>Trix sidesteps these inconsistencies by treating contenteditable as an I/O device: when input makes its way to the editor, Trix converts that input into an editing operation on its internal document model, then re-renders that document back into the editor. This gives Trix complete control over what happens after every keystroke, and avoids the need to use execCommand at all.</source>
          <target state="translated">Trix通过将contenteditable作为一个I/O设备来避开这些不一致的地方:当输入进入编辑器时,Trix将输入转换为内部文档模型的编辑操作,然后将文档重新渲染回编辑器。这使得Trix可以完全控制每个按键后发生的事情,并且完全避免了使用execCommand的需要。</target>
        </trans-unit>
        <trans-unit id="285ec850c11d78bac10f6bfa31b69a37f1b257c9" translate="yes" xml:space="preserve">
          <source>Troubleshooting</source>
          <target state="translated">Troubleshooting</target>
        </trans-unit>
        <trans-unit id="0ccf79d25e402d20be8d38fefc4a68a4f34dab9f" translate="yes" xml:space="preserve">
          <source>True if an ETag is set and it isn't a weak validator (not preceded with W/)</source>
          <target state="translated">如果设置了ETag,并且它不是一个弱验证器(前面没有W/),则为真。</target>
        </trans-unit>
        <trans-unit id="f999dce782ba950dccd6235342c05c3ed0f68323" translate="yes" xml:space="preserve">
          <source>True if an ETag is set and it's a weak validator (preceded with W/)</source>
          <target state="translated">如果设置了ETag,并且它是一个弱的验证器(前面有W/),则为真。</target>
        </trans-unit>
        <trans-unit id="42f070ece09be8113ce2504be6379a421a9a277b" translate="yes" xml:space="preserve">
          <source>True if the current request URI was generated by the given &lt;code&gt;options&lt;/code&gt;.</source>
          <target state="translated">如果当前请求URI是由给定的 &lt;code&gt;options&lt;/code&gt; 生成的，则为true 。</target>
        </trans-unit>
        <trans-unit id="a1dda8798f23498a695ab6ea87125795e7cebf75" translate="yes" xml:space="preserve">
          <source>True if the request came from localhost, 127.0.0.1, or ::1.</source>
          <target state="translated">如果请求来自localhost、127.0.0.1或::1,则为真。</target>
        </trans-unit>
        <trans-unit id="a88ea7cfcdafcd734a5e64234ba924227207df8c" translate="yes" xml:space="preserve">
          <source>TrueClass</source>
          <target state="translated">TrueClass</target>
        </trans-unit>
        <trans-unit id="716f32804687a13f07883955aa2fe0d069a60866" translate="yes" xml:space="preserve">
          <source>Truncates &lt;code&gt;text&lt;/code&gt; to at most &lt;code&gt;bytesize&lt;/code&gt; bytes in length without breaking string encoding by splitting multibyte characters or breaking grapheme clusters (&amp;ldquo;perceptual characters&amp;rdquo;) by truncating at combining characters.</source>
          <target state="translated">将 &lt;code&gt;text&lt;/code&gt; 截断为最大 &lt;code&gt;bytesize&lt;/code&gt; 字节大小的字节，而不会通过拆分多字节字符或通过在组合字符时截断来中断字素簇（&amp;ldquo;感知字符&amp;rdquo;）来中断字符串编码。</target>
        </trans-unit>
        <trans-unit id="229c72321fcef0654c5eb45ca3554249950cdd39" translate="yes" xml:space="preserve">
          <source>Truncates a given &lt;code&gt;text&lt;/code&gt; after a given &lt;code&gt;:length&lt;/code&gt; if &lt;code&gt;text&lt;/code&gt; is longer than &lt;code&gt;:length&lt;/code&gt; (defaults to 30). The last characters will be replaced with the &lt;code&gt;:omission&lt;/code&gt; (defaults to &amp;ldquo;&amp;hellip;&amp;rdquo;) for a total length not exceeding &lt;code&gt;:length&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;text&lt;/code&gt; 长于 &lt;code&gt;:length&lt;/code&gt; （默认为30），则在给定的 &lt;code&gt;:length&lt;/code&gt; 之后截断给定的 &lt;code&gt;text&lt;/code&gt; 。最后一个字符将被 &lt;code&gt;:omission&lt;/code&gt; 替换（默认为&amp;ldquo;&amp;hellip;&amp;rdquo;），总长度不超过 &lt;code&gt;:length&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9c9efe5cb7cb8c1ee33987116b845efc87ad9149" translate="yes" xml:space="preserve">
          <source>Truncates a given &lt;code&gt;text&lt;/code&gt; after a given &lt;code&gt;length&lt;/code&gt; if &lt;code&gt;text&lt;/code&gt; is longer than &lt;code&gt;length&lt;/code&gt;:</source>
          <target state="translated">如果 &lt;code&gt;text&lt;/code&gt; 比 &lt;code&gt;length&lt;/code&gt; &lt;code&gt;length&lt;/code&gt; 则在给定长度后截断给定 &lt;code&gt;text&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="85f9db5f5d445b422cbffa33c28686e2fa06af9f" translate="yes" xml:space="preserve">
          <source>Truncates a given &lt;code&gt;text&lt;/code&gt; after a given number of words (&lt;code&gt;words_count&lt;/code&gt;):</source>
          <target state="translated">在给定数量的单词（ &lt;code&gt;words_count&lt;/code&gt; ）之后截断给定的 &lt;code&gt;text&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="db23ca36a73ab9b9a56a247e534891b0c32ca1e7" translate="yes" xml:space="preserve">
          <source>Truncates a table alias according to the limits of the current adapter.</source>
          <target state="translated">根据当前适配器的限制,截断表的别名。</target>
        </trans-unit>
        <trans-unit id="4b9d33ec4e682f118e01ef0c2b353843b7bf12f0" translate="yes" xml:space="preserve">
          <source>Try this now by creating a new file at &lt;code&gt;app/views/blorgh/articles/index.html.erb&lt;/code&gt; and put this content in it:</source>
          <target state="translated">现在尝试通过在 &lt;code&gt;app/views/blorgh/articles/index.html.erb&lt;/code&gt; 中创建一个新文件并将其放入其中来尝试此操作：</target>
        </trans-unit>
        <trans-unit id="918efeb2e8025ca4630caf3e29c7dae9e380980d" translate="yes" xml:space="preserve">
          <source>Turbolinks</source>
          <target state="translated">Turbolinks</target>
        </trans-unit>
        <trans-unit id="5a4a18da00fa2f7a7985c559eafc6f9d59f51e3a" translate="yes" xml:space="preserve">
          <source>Turbolinks attaches a click handler to all &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; tags on the page. If your browser supports &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Guide/API/DOM/Manipulating_the_browser_history#The_pushState%28%29_method&quot;&gt;PushState&lt;/a&gt;, Turbolinks will make an Ajax request for the page, parse the response, and replace the entire &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; of the page with the &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; of the response. It will then use PushState to change the URL to the correct one, preserving refresh semantics and giving you pretty URLs.</source>
          <target state="translated">Turbolinks将点击处理程序附加到页面上的所有 &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; 标记。如果您的浏览器支持&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Guide/API/DOM/Manipulating_the_browser_history#The_pushState%28%29_method&quot;&gt;PushState&lt;/a&gt;，Turbolinks将对该页面发出Ajax请求，解析响应，然后将页面的整个 &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; 替换为响应的 &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; 。然后，它将使用PushState将URL更改为正确的URL，保留刷新语义并为您提供漂亮的URL。</target>
        </trans-unit>
        <trans-unit id="f75f7fa5b73752d097b071127bbdf41bf30d3520" translate="yes" xml:space="preserve">
          <source>Turn off request forgery protection. This is a wrapper for:</source>
          <target state="translated">关闭请求伪造保护。这是一个包装器,用于:</target>
        </trans-unit>
        <trans-unit id="89d848b3296473ec08bb3d7a7a0ffdd09335a7d0" translate="yes" xml:space="preserve">
          <source>Turn on request forgery protection. Bear in mind that GET and HEAD requests are not checked.</source>
          <target state="translated">开启请求防伪功能。请记住,GET和HEAD请求不会被检查。</target>
        </trans-unit>
        <trans-unit id="6a90d2006baab2ca930929e2fbd1668398a7d807" translate="yes" xml:space="preserve">
          <source>Turning Debugging Off</source>
          <target state="translated">关闭调试</target>
        </trans-unit>
        <trans-unit id="721957126d5094366b6c74ad4aa234e718a87a40" translate="yes" xml:space="preserve">
          <source>Turning Digests Off</source>
          <target state="translated">关闭文摘</target>
        </trans-unit>
        <trans-unit id="d3d07f364049a6501b9c51135e874de6226fe9f4" translate="yes" xml:space="preserve">
          <source>Turning the model into this:</source>
          <target state="translated">把模型变成这样。</target>
        </trans-unit>
        <trans-unit id="b996a8c15dfca44529c2b9e029ff080374b18979" translate="yes" xml:space="preserve">
          <source>Turns a number into an ordinal string used to denote the position in an ordered sequence such as 1st, 2nd, 3rd, 4th.</source>
          <target state="translated">将一个数字变成一个序数字符串,用来表示一个有序序列中的位置,如1、2、3、4。</target>
        </trans-unit>
        <trans-unit id="1446fccd880899c1483d7710d37fe0d152a45920" translate="yes" xml:space="preserve">
          <source>Turns the &lt;a href=&quot;response&quot;&gt;Response&lt;/a&gt; into a Rack-compatible array of the status, headers, and body. Allows explicit splatting:</source>
          <target state="translated">将&lt;a href=&quot;response&quot;&gt;响应&lt;/a&gt;转换为与机架，状态，标头和主体兼容的数组。允许显式喷溅：</target>
        </trans-unit>
        <trans-unit id="5e3205860e2b0e7f5105c43a5ca3d1319a0e9bbe" translate="yes" xml:space="preserve">
          <source>Tweaks an attribute name for display to end users.</source>
          <target state="translated">调整属性名称,以便显示给最终用户。</target>
        </trans-unit>
        <trans-unit id="5a1b1a3e57333daa9389b56a7e6d0492592324de" translate="yes" xml:space="preserve">
          <source>Two commands allow you to open code from the debugger into an editor:</source>
          <target state="translated">两个命令可以让你从调试器中打开代码到编辑器中。</target>
        </trans-unit>
        <trans-unit id="f44bcfdfa9e186456ae325a9ebb2be5aaf91a2e2" translate="yes" xml:space="preserve">
          <source>Two controllers can share a set of partials and render them like this:</source>
          <target state="translated">两个控制器可以共享一组partials,并像这样渲染。</target>
        </trans-unit>
        <trans-unit id="11e102f73a14fd5e563e62a3454880aa08cd4378" translate="yes" xml:space="preserve">
          <source>Two hooks are provided, one runs when the process is forked, and one runs before the forked process is closed. These can be useful if your app uses multiple databases or perform other tasks that depend on the number of workers.</source>
          <target state="translated">提供了两个钩子,一个在进程被分叉时运行,另一个在分叉的进程关闭前运行。如果你的应用程序使用多个数据库或执行其他取决于工人数量的任务,这些钩子就会很有用。</target>
        </trans-unit>
        <trans-unit id="2a74518314cc6a3e80c7c90c435dfc986a510668" translate="yes" xml:space="preserve">
          <source>Two methods are provided: &lt;code&gt;take_screenshot&lt;/code&gt; and &lt;code&gt;take_failed_screenshot&lt;/code&gt;. &lt;code&gt;take_failed_screenshot&lt;/code&gt; is automatically included in &lt;code&gt;after_teardown&lt;/code&gt; inside Rails.</source>
          <target state="translated">提供了两种方法： &lt;code&gt;take_screenshot&lt;/code&gt; 和 &lt;code&gt;take_failed_screenshot&lt;/code&gt; 。 &lt;code&gt;take_failed_screenshot&lt;/code&gt; 自动包含在Rails的 &lt;code&gt;after_teardown&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="27050ab54586a24372500c9eaa4d9adf614024f1" translate="yes" xml:space="preserve">
          <source>Two new scrubbers have also been added: &lt;code&gt;PermitScrubber&lt;/code&gt; and &lt;code&gt;TargetScrubber&lt;/code&gt;. Read the &lt;a href=&quot;https://github.com/rails/rails-html-sanitizer&quot;&gt;gem's readme&lt;/a&gt; for more information.</source>
          <target state="translated">还添加了两个新的洗涤器： &lt;code&gt;PermitScrubber&lt;/code&gt; 和 &lt;code&gt;TargetScrubber&lt;/code&gt; 。阅读&lt;a href=&quot;https://github.com/rails/rails-html-sanitizer&quot;&gt;gem的自述文件&lt;/a&gt;以获取更多信息。</target>
        </trans-unit>
        <trans-unit id="4a9e39c5aa23c594ae6bea7989e8327747001649" translate="yes" xml:space="preserve">
          <source>Two of these symbols are special, &lt;code&gt;:controller&lt;/code&gt; maps to the controller and &lt;code&gt;:action&lt;/code&gt; to the controller's action. A pattern can also map wildcard segments (globs) to params:</source>
          <target state="translated">其中两个符号是特殊的 &lt;code&gt;:controller&lt;/code&gt; 映射到控制器，而 &lt;code&gt;:action&lt;/code&gt; 映射到控制器的动作。模式还可以将通配符段（全局）映射到参数：</target>
        </trans-unit>
        <trans-unit id="8d951020529e23a2f164edce4c02b22dab9447c9" translate="yes" xml:space="preserve">
          <source>Two very common sources of data that are not UTF-8:</source>
          <target state="translated">两种很常见的数据来源,不是UTF-8。</target>
        </trans-unit>
        <trans-unit id="60b4aa8f0c6f7bfd3e77f4c18be637a857d7754a" translate="yes" xml:space="preserve">
          <source>Type casts a value from user input (e.g. from a setter). This value may be a string from the form builder, or a ruby object passed to a setter. There is currently no way to differentiate between which source it came from.</source>
          <target state="translated">类型从用户输入中投递一个值(例如,从setter中投递)。这个值可能是来自form builder的字符串,或者是传递给setter的ruby对象。目前还没有办法区分它来自哪个源。</target>
        </trans-unit>
        <trans-unit id="d03e84fa5cbd437c7599591870ecfbc248a0cc7e" translate="yes" xml:space="preserve">
          <source>Type safety with &lt;a href=&quot;../associationtypemismatch&quot;&gt;ActiveRecord::AssociationTypeMismatch&lt;/a&gt;</source>
          <target state="translated">使用&lt;a href=&quot;../associationtypemismatch&quot;&gt;ActiveRecord :: AssociationTypeMismatch进行&lt;/a&gt;类型安全</target>
        </trans-unit>
        <trans-unit id="70eedd6be67bed3e5278fff0d3fbc3e782940c60" translate="yes" xml:space="preserve">
          <source>Type#==</source>
          <target state="translated">Type#==</target>
        </trans-unit>
        <trans-unit id="e253330b0e19f451958206d78e4201bb54107783" translate="yes" xml:space="preserve">
          <source>Type#===</source>
          <target state="translated">Type#===</target>
        </trans-unit>
        <trans-unit id="d5151a313bbdd168fba277ae194d0a2e01572f08" translate="yes" xml:space="preserve">
          <source>Type#=~</source>
          <target state="translated">Type#=~</target>
        </trans-unit>
        <trans-unit id="7a58f8047699658c3f943af46d9311c93d3ba721" translate="yes" xml:space="preserve">
          <source>Type#all?</source>
          <target state="translated">Type#all?</target>
        </trans-unit>
        <trans-unit id="cac32e745fced6d7b3fac342ea0f2fdd6f3a6116" translate="yes" xml:space="preserve">
          <source>Type#eql?</source>
          <target state="translated">Type#eql?</target>
        </trans-unit>
        <trans-unit id="513d32ab592de9da104c543b01edd5b70971d99e" translate="yes" xml:space="preserve">
          <source>Type#hash</source>
          <target state="translated">Type#hash</target>
        </trans-unit>
        <trans-unit id="21bca60bb03cf0fdafe70c2ea69a4465e887d7db" translate="yes" xml:space="preserve">
          <source>Type#html?</source>
          <target state="translated">Type#html?</target>
        </trans-unit>
        <trans-unit id="47446a7cc32e1afcb0934f1bdbcd6d63ddde1724" translate="yes" xml:space="preserve">
          <source>Type#ref</source>
          <target state="translated">Type#ref</target>
        </trans-unit>
        <trans-unit id="f800af5354c3b0e7abb9acd147c84290df77f929" translate="yes" xml:space="preserve">
          <source>Type#string</source>
          <target state="translated">Type#string</target>
        </trans-unit>
        <trans-unit id="e131db716ae84bcdcddbb105b2589f219a22e201" translate="yes" xml:space="preserve">
          <source>Type#symbol</source>
          <target state="translated">Type#symbol</target>
        </trans-unit>
        <trans-unit id="f0170a989fe95f1fc94ce242cc662e51d0b0b27a" translate="yes" xml:space="preserve">
          <source>Type#synonyms</source>
          <target state="translated">Type#synonyms</target>
        </trans-unit>
        <trans-unit id="4e3fc6d8bf8f360412d16805036f06a6d2b58d67" translate="yes" xml:space="preserve">
          <source>Type#to_s</source>
          <target state="translated">Type#to_s</target>
        </trans-unit>
        <trans-unit id="e08bc36e3be91892e9cd4c65242ee620a68c889d" translate="yes" xml:space="preserve">
          <source>Type#to_str</source>
          <target state="translated">Type#to_str</target>
        </trans-unit>
        <trans-unit id="40251e498cade26feba7eebb0b8e48a1092b22db" translate="yes" xml:space="preserve">
          <source>Type#to_sym</source>
          <target state="translated">Type#to_sym</target>
        </trans-unit>
        <trans-unit id="6ed52ae83d714f0aedeedb5a8e281c6c6435132c" translate="yes" xml:space="preserve">
          <source>Type::Boolean</source>
          <target state="translated">Type::Boolean</target>
        </trans-unit>
        <trans-unit id="55a02481631d24d704a514ac5099b4d22142ffd3" translate="yes" xml:space="preserve">
          <source>Type::Value</source>
          <target state="translated">Type::Value</target>
        </trans-unit>
        <trans-unit id="cefe33cf5d55722ccc1aa0755e83175b11681d85" translate="yes" xml:space="preserve">
          <source>Type::Value#==</source>
          <target state="translated">Type::Value#==</target>
        </trans-unit>
        <trans-unit id="faa5ad48f972d3d4d4ca4e2cbbae4699a93d96d1" translate="yes" xml:space="preserve">
          <source>Type::Value#assert_valid_value</source>
          <target state="translated">Type::Value#assert_valid_value</target>
        </trans-unit>
        <trans-unit id="6c0aff9be5d9179659e8af1583f91360c9bcd9ea" translate="yes" xml:space="preserve">
          <source>Type::Value#cast</source>
          <target state="translated">Type::Value#cast</target>
        </trans-unit>
        <trans-unit id="7cf4282cae829eb3975d0ba7d60311fe81083e4c" translate="yes" xml:space="preserve">
          <source>Type::Value#cast_value</source>
          <target state="translated">Type::Value#cast_value</target>
        </trans-unit>
        <trans-unit id="a7e3c3db61c8d5865de3fe60f82873fae7c8d19f" translate="yes" xml:space="preserve">
          <source>Type::Value#changed?</source>
          <target state="translated">Type::Value#changed?</target>
        </trans-unit>
        <trans-unit id="19d0050c341c48152d8ec6a0605bf19b16732ef4" translate="yes" xml:space="preserve">
          <source>Type::Value#changed_in_place?</source>
          <target state="translated">Type::Value#changed_in_place?</target>
        </trans-unit>
        <trans-unit id="8c7c8315b671fff22506155d7b916ece65e458ad" translate="yes" xml:space="preserve">
          <source>Type::Value#deserialize</source>
          <target state="translated">Type::Value#deserialize</target>
        </trans-unit>
        <trans-unit id="1d45f9ccf86ef634727640e87dce569c21f5223b" translate="yes" xml:space="preserve">
          <source>Type::Value#eql?</source>
          <target state="translated">Type::Value#eql?</target>
        </trans-unit>
        <trans-unit id="b5a97a89e656338242619c663ee4c50a04b5607e" translate="yes" xml:space="preserve">
          <source>Type::Value#hash</source>
          <target state="translated">Type::Value#hash</target>
        </trans-unit>
        <trans-unit id="bb2041821d9527ec17636b705d6e6070bff77f49" translate="yes" xml:space="preserve">
          <source>Type::Value#limit</source>
          <target state="translated">Type::Value#limit</target>
        </trans-unit>
        <trans-unit id="0f8aca54515e88e6aaef8facd5ba68c965e80ad6" translate="yes" xml:space="preserve">
          <source>Type::Value#precision</source>
          <target state="translated">Type::Value#precision</target>
        </trans-unit>
        <trans-unit id="18c1701f42c2beb5a0b96a34c1e96be08b9db92b" translate="yes" xml:space="preserve">
          <source>Type::Value#scale</source>
          <target state="translated">Type::Value#scale</target>
        </trans-unit>
        <trans-unit id="3974fa80caaa3040083289520f7c71d78309a104" translate="yes" xml:space="preserve">
          <source>Type::Value#serialize</source>
          <target state="translated">Type::Value#serialize</target>
        </trans-unit>
        <trans-unit id="fc3d927851dafa40adf395bbfc372cadaaf14511" translate="yes" xml:space="preserve">
          <source>Type::Value::new</source>
          <target state="translated">Type::Value::new</target>
        </trans-unit>
        <trans-unit id="3577c9f58f179a7b52913fff7af3a82b48c1856a" translate="yes" xml:space="preserve">
          <source>Type::lookup</source>
          <target state="translated">Type::lookup</target>
        </trans-unit>
        <trans-unit id="6f6ef7e26ed165521133a28497bb7c7a4447d35d" translate="yes" xml:space="preserve">
          <source>Type::lookup_by_extension</source>
          <target state="translated">Type::lookup_by_extension</target>
        </trans-unit>
        <trans-unit id="7fabc23c2c0529c94ca05853b970db98539529f8" translate="yes" xml:space="preserve">
          <source>Type::new</source>
          <target state="translated">Type::new</target>
        </trans-unit>
        <trans-unit id="d545ac43d0a1752f254503fc1d584aefc5003c79" translate="yes" xml:space="preserve">
          <source>Type::parse</source>
          <target state="translated">Type::parse</target>
        </trans-unit>
        <trans-unit id="61605c38ebf720cabfe9107cb208c7baada914ef" translate="yes" xml:space="preserve">
          <source>Type::parse_data_with_trailing_star</source>
          <target state="translated">Type::parse_data_with_trailing_star</target>
        </trans-unit>
        <trans-unit id="d66593b5c5c35064b800b52c1ff715082ce19097" translate="yes" xml:space="preserve">
          <source>Type::parse_trailing_star</source>
          <target state="translated">Type::parse_trailing_star</target>
        </trans-unit>
        <trans-unit id="05513a01e5697e5651dc6d679724a5964bd6cac3" translate="yes" xml:space="preserve">
          <source>Type::register</source>
          <target state="translated">Type::register</target>
        </trans-unit>
        <trans-unit id="7987f11e625d678759427fa50fdbff80a8c9765e" translate="yes" xml:space="preserve">
          <source>Type::register_alias</source>
          <target state="translated">Type::register_alias</target>
        </trans-unit>
        <trans-unit id="5c96ed588fc02ab74c08dd741eba090b2e184c1e" translate="yes" xml:space="preserve">
          <source>Type::register_callback</source>
          <target state="translated">Type::register_callback</target>
        </trans-unit>
        <trans-unit id="2b347d24136f70387e62deaf0bac4399892d3fef" translate="yes" xml:space="preserve">
          <source>Type::unregister</source>
          <target state="translated">Type::unregister</target>
        </trans-unit>
        <trans-unit id="1feacabb18c28e13a3223b47ffab3264d9a9e217" translate="yes" xml:space="preserve">
          <source>Typecasted bind parameters</source>
          <target state="translated">类型化的绑定参数</target>
        </trans-unit>
        <trans-unit id="53cd1974e6d6c2e75c56c16edc2e858959717c41" translate="yes" xml:space="preserve">
          <source>Types are autoloaded as needed. For example, if &lt;code&gt;Polygon.first&lt;/code&gt; is a rectangle and &lt;code&gt;Rectangle&lt;/code&gt; has not yet been loaded, Active Record autoloads it and the record is correctly instantiated.</source>
          <target state="translated">类型会根据需要自动加载。例如，如果 &lt;code&gt;Polygon.first&lt;/code&gt; 是一个矩形并且尚未加载 &lt;code&gt;Rectangle&lt;/code&gt; ，则Active Record会自动加载它，并正确实例化该记录。</target>
        </trans-unit>
        <trans-unit id="3aa5d9093670a17ac027519a74e11368f6b450cf" translate="yes" xml:space="preserve">
          <source>Types of Schema Dumps</source>
          <target state="translated">模式转储的类型</target>
        </trans-unit>
        <trans-unit id="5f1c2301fbfd8c3a40fe45fc272c4c99db2a2ffb" translate="yes" xml:space="preserve">
          <source>Types of callbacks</source>
          <target state="translated">回调类型</target>
        </trans-unit>
        <trans-unit id="64eae8a8ff4eede77761ede521e3e8267797dda0" translate="yes" xml:space="preserve">
          <source>Types of layouts</source>
          <target state="translated">布局类型</target>
        </trans-unit>
        <trans-unit id="306957293a5e5f5c4043ed13afd00c6ca6dd9828" translate="yes" xml:space="preserve">
          <source>Typically, a form designed to create or update a resource reflects the identity of the resource in several ways: (i) the URL that the form is sent to (the form element's &lt;code&gt;action&lt;/code&gt; attribute) should result in a request being routed to the appropriate controller action (with the appropriate &lt;code&gt;:id&lt;/code&gt; parameter in the case of an existing resource), (ii) input fields should be named in such a way that in the controller their values appear in the appropriate places within the &lt;code&gt;params&lt;/code&gt; hash, and (iii) for an existing record, when the form is initially displayed, input fields corresponding to attributes of the resource should show the current values of those attributes.</source>
          <target state="translated">通常，旨在创建或更新资源的表单以几种方式反映资源的身份：（i）表单发送到的URL（表单元素的 &lt;code&gt;action&lt;/code&gt; 属性）应导致将请求路由到适当的控制器操作（在现有资源的情况下，使用适当的 &lt;code&gt;:id&lt;/code&gt; 参数），（ii）输入字段的命名方式应使其在控制器中其值出现在 &lt;code&gt;params&lt;/code&gt; 哈希内的适当位置，并且（iii）现有记录，当最初显示表单时，与资源属性相对应的输入字段应显示这些属性的当前值。</target>
        </trans-unit>
        <trans-unit id="d3d00e0d2dda9ad7a33716397137a8bf6cba04ed" translate="yes" xml:space="preserve">
          <source>Typically, you will instantiate a new session using IntegrationTest#open_session, rather than instantiating &lt;a href=&quot;session&quot;&gt;Integration::Session&lt;/a&gt; directly.</source>
          <target state="translated">通常，您将使用IntegrationTest＃open_session实例化一个新会话，而不是直接实例化&lt;a href=&quot;session&quot;&gt;Integration :: Session&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a22641b9fc9c9910a6cdbff4d4c69eb3d13192f7" translate="yes" xml:space="preserve">
          <source>UNICODE_VERSION</source>
          <target state="translated">UNICODE_VERSION</target>
        </trans-unit>
        <trans-unit id="b296e0d65d77d85f051e6120bc2bc5c312d75daf" translate="yes" xml:space="preserve">
          <source>UNIQUE_VIOLATION</source>
          <target state="translated">UNIQUE_VIOLATION</target>
        </trans-unit>
        <trans-unit id="ecf6935551740f32426d106a5d0859eb03b85cea" translate="yes" xml:space="preserve">
          <source>UNIVERSAL_OPTIONS</source>
          <target state="translated">UNIVERSAL_OPTIONS</target>
        </trans-unit>
        <trans-unit id="2765f56ff22ae032d9156af82bdb05fbcf2fe0b5" translate="yes" xml:space="preserve">
          <source>URI_REGEXP</source>
          <target state="translated">URI_REGEXP</target>
        </trans-unit>
        <trans-unit id="d8b1d74794e482364b89230c6c1a7a3ed552c390" translate="yes" xml:space="preserve">
          <source>URL Generation: The flip side of routing is URL generation. A good API based on HTTP includes URLs (see &lt;a href=&quot;https://developer.github.com/v3/gists/&quot;&gt;the GitHub Gist API&lt;/a&gt; for an example).</source>
          <target state="translated">URL生成：路由的另一面是URL生成。一个基于HTTP的良好API包括URL（有关示例，请参见&lt;a href=&quot;https://developer.github.com/v3/gists/&quot;&gt;GitHub Gist API&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="276a71602ff7a982b823d0e2189710373a95484b" translate="yes" xml:space="preserve">
          <source>URL generation for named routes</source>
          <target state="translated">命名途径的URL生成</target>
        </trans-unit>
        <trans-unit id="3b7ebf9fda9ab546056939feaf89320d2f22f9a0" translate="yes" xml:space="preserve">
          <source>URL generation from parameters</source>
          <target state="translated">根据参数生成URL</target>
        </trans-unit>
        <trans-unit id="bd4e02965b295f6181cb637b78ec0a6f5258e6f5" translate="yes" xml:space="preserve">
          <source>URL to redirect to</source>
          <target state="translated">重定向到的URL</target>
        </trans-unit>
        <trans-unit id="4d3912a8c2b4f9ccd4590912a211c1fb37602b02" translate="yes" xml:space="preserve">
          <source>URL_OPTIONS</source>
          <target state="translated">URL_OPTIONS</target>
        </trans-unit>
        <trans-unit id="3c3c17d0516c69d6695ab1fcc55b7460ff094916" translate="yes" xml:space="preserve">
          <source>URLs can be generated in mailer views using &lt;code&gt;url_for&lt;/code&gt; or named routes. Unlike controllers from Action Pack, the mailer instance doesn't have any context about the incoming request, so you'll need to provide all of the details needed to generate a URL.</source>
          <target state="translated">可以使用 &lt;code&gt;url_for&lt;/code&gt; 或命名路由在邮件视图中生成URL 。与Action Pack中的控制器不同，邮件程序实例没有任何有关传入请求的上下文，因此您需要提供生成URL所需的所有详细信息。</target>
        </trans-unit>
        <trans-unit id="304c11c5b012328b4cbe99b4a1ca85729b62dd52" translate="yes" xml:space="preserve">
          <source>USE_AUTHENTICATED_COOKIE_ENCRYPTION</source>
          <target state="translated">USE_AUTHENTICATED_COOKIE_ENCRYPTION</target>
        </trans-unit>
        <trans-unit id="3a6c69dd5faf1bd4fbbe76b7551d2d73518abc1a" translate="yes" xml:space="preserve">
          <source>USE_COOKIES_WITH_METADATA</source>
          <target state="translated">USE_COOKIES_WITH_METADATA</target>
        </trans-unit>
        <trans-unit id="21bf75a5255af008f6315cb6aca4bb3bdccee521" translate="yes" xml:space="preserve">
          <source>UUID</source>
          <target state="translated">UUID</target>
        </trans-unit>
        <trans-unit id="58a48be00fb22fa73f24a8d12dad3179d27be081" translate="yes" xml:space="preserve">
          <source>UUID Primary Keys</source>
          <target state="translated">UUID主键</target>
        </trans-unit>
        <trans-unit id="021e81d8648661e31cc6e51e1189b6f09047d4d5" translate="yes" xml:space="preserve">
          <source>UUID::uuid_from_hash</source>
          <target state="translated">UUID::uuid_from_hash</target>
        </trans-unit>
        <trans-unit id="b94798dd5e5504b3623f44686fd5bf2ac50ced13" translate="yes" xml:space="preserve">
          <source>UUID::uuid_v3</source>
          <target state="translated">UUID::uuid_v3</target>
        </trans-unit>
        <trans-unit id="c782a4bef4c1f7a1ea4624387e03a6e7c7f13c37" translate="yes" xml:space="preserve">
          <source>UUID::uuid_v4</source>
          <target state="translated">UUID::uuid_v4</target>
        </trans-unit>
        <trans-unit id="37b07911c467d4abe28dca941f852b09fa148875" translate="yes" xml:space="preserve">
          <source>UUID::uuid_v5</source>
          <target state="translated">UUID::uuid_v5</target>
        </trans-unit>
        <trans-unit id="2000fecb3a1caaf67afb388ca9c64a08f82d78ff" translate="yes" xml:space="preserve">
          <source>Unbound methods are not duplicable:</source>
          <target state="translated">非绑定方法是不可重复的。</target>
        </trans-unit>
        <trans-unit id="ea18adfa28d13e37ee806750a0df3ce347f3cff9" translate="yes" xml:space="preserve">
          <source>UnboundMethod</source>
          <target state="translated">UnboundMethod</target>
        </trans-unit>
        <trans-unit id="d5e36a93eb4d9ef9d780b4e4e3eb287f9e7ddcbe" translate="yes" xml:space="preserve">
          <source>Under certain circumstances this would present the malicious HTML to the victim. However, this only seems to work with Keep-Alive connections (and many browsers are using one-time connections). But you can't rely on this. &lt;em&gt;In any case this is a serious bug, and you should update your Rails to version 2.0.5 or 2.1.2 to eliminate Header Injection (and thus response splitting) risks.&lt;/em&gt;</source>
          <target state="translated">在某些情况下，这会将恶意HTML呈现给受害者。但是，这似乎仅适用于Keep-Alive连接（许多浏览器正在使用一次性连接）。但是您不能依靠它。&lt;em&gt;无论如何，这都是一个严重的错误，您应该将Rails更新到2.0.5或2.1.2版本，以消除Header Injection（从而导致响应拆分）的风险。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a0ad6d65b92b9f3641e86d1bd8b6d7c694ca0bc2" translate="yes" xml:space="preserve">
          <source>Under normal circumstances the default &lt;code&gt;config.assets.digest&lt;/code&gt; option should not be changed. If there are no digests in the filenames, and far-future headers are set, remote clients will never know to refetch the files when their content changes.</source>
          <target state="translated">通常情况下，不应更改默认的 &lt;code&gt;config.assets.digest&lt;/code&gt; 选项。如果文件名中没有摘要，并且设置了远期头，则远程客户端在内容更改时将永远不知道重新获取文件。</target>
        </trans-unit>
        <trans-unit id="979c53e0a63d64498379e54d5ec41239a5d62d51" translate="yes" xml:space="preserve">
          <source>Under the covers, this relationship is implemented as a &lt;code&gt;has_many&lt;/code&gt; association to a &lt;a href=&quot;../attachment&quot;&gt;ActiveStorage::Attachment&lt;/a&gt; record and a &lt;code&gt;has_many-through&lt;/code&gt; association to a &lt;a href=&quot;../blob&quot;&gt;ActiveStorage::Blob&lt;/a&gt; record. These associations are available as &lt;code&gt;photos_attachments&lt;/code&gt; and &lt;code&gt;photos_blobs&lt;/code&gt;. But you shouldn't need to work with these associations directly in most circumstances.</source>
          <target state="translated">在幕后，这种关系被实现为 &lt;code&gt;has_many&lt;/code&gt; 关联到&lt;a href=&quot;../attachment&quot;&gt;ActiveStorage ::附件&lt;/a&gt;记录和 &lt;code&gt;has_many-through&lt;/code&gt; 联想到&lt;a href=&quot;../blob&quot;&gt;ActiveStorage ::斑点&lt;/a&gt;记录。这些关联可以通过 &lt;code&gt;photos_attachments&lt;/code&gt; 和 &lt;code&gt;photos_blobs&lt;/code&gt; 获得。但是在大多数情况下，您不需要直接与这些关联合作。</target>
        </trans-unit>
        <trans-unit id="d0dfa8881b0933f23273353d3fc54d3f993619d5" translate="yes" xml:space="preserve">
          <source>Under the covers, this relationship is implemented as a &lt;code&gt;has_one&lt;/code&gt; association to a &lt;a href=&quot;../attachment&quot;&gt;ActiveStorage::Attachment&lt;/a&gt; record and a &lt;code&gt;has_one-through&lt;/code&gt; association to a &lt;a href=&quot;../blob&quot;&gt;ActiveStorage::Blob&lt;/a&gt; record. These associations are available as &lt;code&gt;avatar_attachment&lt;/code&gt; and &lt;code&gt;avatar_blob&lt;/code&gt;. But you shouldn't need to work with these associations directly in most circumstances.</source>
          <target state="translated">在 &lt;code&gt;has_one&lt;/code&gt; ，该关系实现为与&lt;a href=&quot;../attachment&quot;&gt;ActiveStorage :: Attachment&lt;/a&gt;记录的 &lt;code&gt;has_one-through&lt;/code&gt; 关联，以及与&lt;a href=&quot;../blob&quot;&gt;ActiveStorage :: Blob&lt;/a&gt;记录的has_one-through关联。这些关联可以作为 &lt;code&gt;avatar_attachment&lt;/code&gt; 和 &lt;code&gt;avatar_blob&lt;/code&gt; 使用。但是在大多数情况下，您不需要直接与这些关联合作。</target>
        </trans-unit>
        <trans-unit id="a5ea37943946c1a2d58797561f1bc7d382ebb6f7" translate="yes" xml:space="preserve">
          <source>Understanding &lt;code&gt;yield&lt;/code&gt;</source>
          <target state="translated">了解 &lt;code&gt;yield&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5796618103c03fb0bd0dae7ab9cb0306de669eab" translate="yes" xml:space="preserve">
          <source>Understanding Middlewares</source>
          <target state="translated">了解中间件</target>
        </trans-unit>
        <trans-unit id="83ad114002c4850a875263e2823d8278257f5782" translate="yes" xml:space="preserve">
          <source>Understanding Parameter Naming Conventions</source>
          <target state="translated">了解参数命名约定</target>
        </trans-unit>
        <trans-unit id="f88769326773fa7aeb7457b71fc4f0a127d26859" translate="yes" xml:space="preserve">
          <source>Understanding The Method Chaining</source>
          <target state="translated">了解方法链</target>
        </trans-unit>
        <trans-unit id="563be52e5a36ed2f3d1c023ae0efdeefd5cdd59b" translate="yes" xml:space="preserve">
          <source>Unescapes bytea output from a database to the binary string it represents. NOTE: This is NOT an inverse of &lt;a href=&quot;quoting#method-i-escape_bytea&quot;&gt;#escape_bytea&lt;/a&gt;! This is only to be used on escaped binary output from database drive.</source>
          <target state="translated">将来自数据库的字节转换输出转义为它表示的二进制字符串。注意：这不是&lt;a href=&quot;quoting#method-i-escape_bytea&quot;&gt;#escape_bytea&lt;/a&gt;的反函数！仅用于数据库驱动器的转义二进制输出。</target>
        </trans-unit>
        <trans-unit id="7d1a730dd8928742f355234b8f0cbd8dc71e967b" translate="yes" xml:space="preserve">
          <source>Unfortunately Rails autoloading does not know the nesting in the spot where the constant was missing and so it is not able to act as Ruby would. In particular, &lt;code&gt;Admin::User&lt;/code&gt; will get autoloaded in either case.</source>
          <target state="translated">不幸的是，Rails自动加载并不知道缺少常量的地方的嵌套，因此它无法像Ruby那样起作用。特别是在两种情况下， &lt;code&gt;Admin::User&lt;/code&gt; 都会自动加载。</target>
        </trans-unit>
        <trans-unit id="ddd02f51727327e3f5b4ba274b09305dc204d056" translate="yes" xml:space="preserve">
          <source>Unfortunately that workaround does not work when the check box goes within an array-like parameter, as in</source>
          <target state="translated">遗憾的是,当复选框位于类似数组的参数中时,该变通方法不起作用,比如在</target>
        </trans-unit>
        <trans-unit id="fa4c1858289a6a0201b436aab1c15577cd0ab1d5" translate="yes" xml:space="preserve">
          <source>Unfortunately this won't work, since when &lt;code&gt;Foo&lt;/code&gt; is included, its &lt;code&gt;base&lt;/code&gt; is the &lt;code&gt;Bar&lt;/code&gt; module, not the &lt;code&gt;Host&lt;/code&gt; class. With &lt;code&gt;ActiveSupport::Concern&lt;/code&gt;, module dependencies are properly resolved:</source>
          <target state="translated">不幸的是，这是行不通的，因为当包含 &lt;code&gt;Foo&lt;/code&gt; 时，它的 &lt;code&gt;base&lt;/code&gt; 是 &lt;code&gt;Bar&lt;/code&gt; 模块，而不是 &lt;code&gt;Host&lt;/code&gt; 类。使用 &lt;code&gt;ActiveSupport::Concern&lt;/code&gt; ，可以正确解决模块依赖性：</target>
        </trans-unit>
        <trans-unit id="8a2ae1bb3af7b7bdfd514223e02bbd22a88dc76d" translate="yes" xml:space="preserve">
          <source>Unicode character routes</source>
          <target state="translated">统一码字符路由</target>
        </trans-unit>
        <trans-unit id="6fe0c87681010662cf422daf78146c3b0400e1a2" translate="yes" xml:space="preserve">
          <source>Unicode whitespace is supported:</source>
          <target state="translated">支持Unicode空格。</target>
        </trans-unit>
        <trans-unit id="c04888dcb0aeb3a9fb64735c366d3fcba247df66" translate="yes" xml:space="preserve">
          <source>Unicorn</source>
          <target state="translated">Unicorn</target>
        </trans-unit>
        <trans-unit id="dab32b9631850cb2c080a8c1c70ab95d976d2be6" translate="yes" xml:space="preserve">
          <source>Unicorn supports streaming but it needs to be configured. For this, you need to create a config file as follow:</source>
          <target state="translated">Unicorn支持流媒体,但它需要进行配置。为此,你需要创建一个配置文件,如下所示。</target>
        </trans-unit>
        <trans-unit id="bf8719e9da213bcad0a2fe349d1f8f9f739c1793" translate="yes" xml:space="preserve">
          <source>Unique indexes can be identified by columns or name:</source>
          <target state="translated">独特的索引可以通过列或名称来识别。</target>
        </trans-unit>
        <trans-unit id="438d23452047f4defac8e18aecae37372fcea335" translate="yes" xml:space="preserve">
          <source>Unit Testing</source>
          <target state="translated">单元测试</target>
        </trans-unit>
        <trans-unit id="8edb8bca8eec90529e5cf5ed945cc70ec2e5f3c6" translate="yes" xml:space="preserve">
          <source>Unit test Action Cable connections.</source>
          <target state="translated">单位测试 动作 电缆连接。</target>
        </trans-unit>
        <trans-unit id="280d5622079a1771bd9e5368f811959d15abfb04" translate="yes" xml:space="preserve">
          <source>Unit testing allows us to test the attributes of the email while functional and system testing allows us to test whether user interactions appropriately trigger the email to be delivered. For example, you can check that the invite friend operation is sending an email appropriately:</source>
          <target state="translated">单元测试可以让我们测试邮件的属性,而功能测试和系统测试可以让我们测试用户交互是否适当触发邮件的发送。例如,你可以检查邀请好友的操作是否适当地发送邮件。</target>
        </trans-unit>
        <trans-unit id="2ed33368b6004fce86600d3d398ff6212dd36618" translate="yes" xml:space="preserve">
          <source>Unit tests are written as follows:</source>
          <target state="translated">单元测试的编写方法如下。</target>
        </trans-unit>
        <trans-unit id="d7939729166ceaf4af03afc6e3d4c365637c2ae6" translate="yes" xml:space="preserve">
          <source>Unit tests, fixtures, and other test apparatus. These are covered in &lt;a href=&quot;testing&quot;&gt;Testing Rails Applications&lt;/a&gt;.</source>
          <target state="translated">单元测试，固定装置和其他测试设备。这些在&amp;ldquo; &lt;a href=&quot;testing&quot;&gt;测试Rails应用程序&amp;rdquo;中进行了介绍&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b0f6cd025d55ddd1816778abdc9f3fabb48c6ccc" translate="yes" xml:space="preserve">
          <source>UnknownAttributeError</source>
          <target state="translated">UnknownAttributeError</target>
        </trans-unit>
        <trans-unit id="0318f9423a678f7c0cad6dd3df9e56ab292e1f1f" translate="yes" xml:space="preserve">
          <source>Unless an error is raised, returns true.</source>
          <target state="translated">除非出现错误,否则返回true。</target>
        </trans-unit>
        <trans-unit id="142a90e8a09e23fa3511b7df0b410e75b492dca5" translate="yes" xml:space="preserve">
          <source>Unless overridden, your response returned from this render option will be &lt;code&gt;text/plain&lt;/code&gt;, as that is the default content type of Action Dispatch response.</source>
          <target state="translated">除非被覆盖，否则从此渲染选项返回的响应将是 &lt;code&gt;text/plain&lt;/code&gt; ，因为这是Action Dispatch响应的默认内容类型。</target>
        </trans-unit>
        <trans-unit id="a2c726244b307ec087748252b6a12d01c65580af" translate="yes" xml:space="preserve">
          <source>Unless you have disabled the Asset Pipeline, &lt;a href=&quot;https://github.com/rails/rails/tree/master/actionview/app/assets/javascripts&quot;&gt;rails-ujs&lt;/a&gt; provides the JavaScript half, and the regular Ruby view helpers add appropriate tags to your DOM.</source>
          <target state="translated">除非您禁用了Asset Pipeline，否则&lt;a href=&quot;https://github.com/rails/rails/tree/master/actionview/app/assets/javascripts&quot;&gt;rails-ujs会&lt;/a&gt;提供一半的JavaScript，并且常规的Ruby视图助手会在您的DOM中添加适当的标签。</target>
        </trans-unit>
        <trans-unit id="225f2ea6c736a01787a8ead588fa3db8dadd49a5" translate="yes" xml:space="preserve">
          <source>Unlike &lt;code&gt;Shirt.find(...)&lt;/code&gt;, however, the object returned by &lt;code&gt;Shirt.red&lt;/code&gt; is not an &lt;a href=&quot;../../../array&quot;&gt;Array&lt;/a&gt; but an &lt;a href=&quot;../../relation&quot;&gt;ActiveRecord::Relation&lt;/a&gt;, which is composable with other scopes; it resembles the association object constructed by a &lt;a href=&quot;../../associations/classmethods#method-i-has_many&quot;&gt;has_many&lt;/a&gt; declaration. For instance, you can invoke &lt;code&gt;Shirt.red.first&lt;/code&gt;, &lt;code&gt;Shirt.red.count&lt;/code&gt;, &lt;code&gt;Shirt.red.where(size:
'small')&lt;/code&gt;. Also, just as with the association objects, named scopes act like an &lt;a href=&quot;../../../array&quot;&gt;Array&lt;/a&gt;, implementing &lt;a href=&quot;../../../enumerable&quot;&gt;Enumerable&lt;/a&gt;; &lt;code&gt;Shirt.red.each(&amp;amp;block)&lt;/code&gt;, &lt;code&gt;Shirt.red.first&lt;/code&gt;, and &lt;code&gt;Shirt.red.inject(memo, &amp;amp;block)&lt;/code&gt; all behave as if &lt;code&gt;Shirt.red&lt;/code&gt; really was an array.</source>
          <target state="translated">不像 &lt;code&gt;Shirt.find(...)&lt;/code&gt; ，但是，通过返回的对象 &lt;code&gt;Shirt.red&lt;/code&gt; 不是一个&lt;a href=&quot;../../../array&quot;&gt;数组&lt;/a&gt;而是一个&lt;a href=&quot;../../relation&quot;&gt;ActiveRecord的::关系&lt;/a&gt;，这是组合的其他范围;它类似于由&lt;a href=&quot;../../associations/classmethods#method-i-has_many&quot;&gt;has_many&lt;/a&gt;声明构造的关联对象。例如，您可以调用 &lt;code&gt;Shirt.red.first&lt;/code&gt; ， &lt;code&gt;Shirt.red.count&lt;/code&gt; ， &lt;code&gt;Shirt.red.where(size: 'small')&lt;/code&gt; 。同样，与关联对象一样，命名范围的作用类似于&lt;a href=&quot;../../../array&quot;&gt;Array&lt;/a&gt;，实现&lt;a href=&quot;../../../enumerable&quot;&gt;Enumerable&lt;/a&gt;； &lt;code&gt;Shirt.red.each(&amp;amp;block)&lt;/code&gt; ， &lt;code&gt;Shirt.red.first&lt;/code&gt; 和 &lt;code&gt;Shirt.red.inject(memo, &amp;amp;block)&lt;/code&gt; 所有人的行为都好像 &lt;code&gt;Shirt.red&lt;/code&gt; 确实是一个数组。</target>
        </trans-unit>
        <trans-unit id="8270e40d2a70d907ff7c7199378b61246ce411f5" translate="yes" xml:space="preserve">
          <source>Unlike &lt;code&gt;select&lt;/code&gt;, &lt;code&gt;pluck&lt;/code&gt; directly converts a database result into a Ruby &lt;code&gt;Array&lt;/code&gt;, without constructing &lt;code&gt;ActiveRecord&lt;/code&gt; objects. This can mean better performance for a large or often-running query. However, any model method overrides will not be available. For example:</source>
          <target state="translated">与 &lt;code&gt;select&lt;/code&gt; 不同， &lt;code&gt;pluck&lt;/code&gt; 直接将数据库结果转换为Ruby &lt;code&gt;Array&lt;/code&gt; ，而无需构造 &lt;code&gt;ActiveRecord&lt;/code&gt; 对象。对于大型或经常运行的查询，这可能意味着更好的性能。但是，任何模型方法替代都将不可用。例如：</target>
        </trans-unit>
        <trans-unit id="448e9ede861e58842a90f671783ee0b54a9a0737" translate="yes" xml:space="preserve">
          <source>Unlike autoloading, &lt;code&gt;require_dependency&lt;/code&gt; does not expect the file to define any particular constant. Exploiting this behavior would be a bad practice though, file and constant paths should match.</source>
          <target state="translated">与自动加载不同， &lt;code&gt;require_dependency&lt;/code&gt; 不希望文件定义任何特定的常量。利用此行为将是一个不好的做法，但是文件和常量路径应该匹配。</target>
        </trans-unit>
        <trans-unit id="eab625bb97462db62c29eb84c28767872f5e5861" translate="yes" xml:space="preserve">
          <source>Unlike controllers, the mailer instance doesn't have any context about the incoming request so you'll need to provide the &lt;code&gt;:asset_host&lt;/code&gt; parameter yourself.</source>
          <target state="translated">与控制器不同，邮件程序实例没有关于传入请求的任何上下文，因此您需要自己提供 &lt;code&gt;:asset_host&lt;/code&gt; 参数。</target>
        </trans-unit>
        <trans-unit id="3516db260b80f91dfb9c18a0327dbeab354d2817" translate="yes" xml:space="preserve">
          <source>Unlike controllers, the mailer instance doesn't have any context about the incoming request so you'll need to provide the &lt;code&gt;:host&lt;/code&gt; parameter yourself.</source>
          <target state="translated">与控制器不同，邮件程序实例没有关于传入请求的任何上下文，因此您需要自己提供 &lt;code&gt;:host&lt;/code&gt; 参数。</target>
        </trans-unit>
        <trans-unit id="07727714d62ff3231aeed3b3fb12a2b8852bb105" translate="yes" xml:space="preserve">
          <source>Unlike index, the create action will not render a template. After performing its main purpose (creating a new post), it initiates a redirect instead. This redirect works by returning an external &lt;code&gt;302
Moved&lt;/code&gt; HTTP response that takes the user to the index action.</source>
          <target state="translated">与index不同，create操作不会呈现模板。在完成其主要目的（创建新帖子）之后，它会启动重定向。通过返回外部 &lt;code&gt;302 Moved&lt;/code&gt; HTTP响应（使用户进入索引操作），此重定向起作用。</target>
        </trans-unit>
        <trans-unit id="8b4de84015c64bbfdcdde2ddfb1dfd5fd6801124" translate="yes" xml:space="preserve">
          <source>Unlike subclasses of &lt;a href=&quot;../../actioncontroller/base&quot;&gt;ActionController::Base&lt;/a&gt;, channels do not follow a RESTful constraint form for their actions. Instead, Action Cable operates through a remote-procedure call model. You can declare any public method on the channel (optionally taking a &lt;code&gt;data&lt;/code&gt; argument), and this method is automatically exposed as callable to the client.</source>
          <target state="translated">与&lt;a href=&quot;../../actioncontroller/base&quot;&gt;ActionController :: Base的&lt;/a&gt;子类不同，通道的操作不遵循RESTful约束形式。相反，Action Cable通过远程过程调用模型进行操作。您可以在通道上声明任何公共方法（可以选择使用 &lt;code&gt;data&lt;/code&gt; 参数），并且此方法会自动公开为可调用给客户端。</target>
        </trans-unit>
        <trans-unit id="62287c06d23a0ec4dffee3d990df5c208b99dba6" translate="yes" xml:space="preserve">
          <source>Unlike weak ETag, strong ETag implies that response should be exactly the same and byte by byte identical. Useful when doing Range requests within a large video or PDF file. Some CDNs support only strong ETags, like Akamai. If you absolutely need to generate a strong ETag, it can be done as follows.</source>
          <target state="translated">与弱ETag不同,强ETag意味着响应应该是完全相同的,并且一个字节一个字节的相同。在大型视频或PDF文件中进行范围请求时非常有用。有些CDN只支持强ETag,比如Akamai。如果您确实需要生成强ETag,可以按以下方式进行。</target>
        </trans-unit>
        <trans-unit id="b90bd5e957335727b9455e3bcbc345929fa6f4e7" translate="yes" xml:space="preserve">
          <source>Unloads the association. Returns &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="translated">卸载关联。返回 &lt;code&gt;self&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="781744eed2cbfe0f2f0bb6fb5bf19898e9264c90" translate="yes" xml:space="preserve">
          <source>Unobtrusive JavaScript</source>
          <target state="translated">不显眼的JavaScript</target>
        </trans-unit>
        <trans-unit id="b83532493b596dd7f3d3047e3bb9dc634b590ade" translate="yes" xml:space="preserve">
          <source>Unobtrusive JavaScript.</source>
          <target state="translated">不显眼的JavaScript。</target>
        </trans-unit>
        <trans-unit id="7b0a399f575a70073a7ab4cd7d190cbc2a1d23c0" translate="yes" xml:space="preserve">
          <source>Unpack the string at grapheme boundaries. Returns a list of character lists.</source>
          <target state="translated">解开字符串的字词边界。返回一个字符列表。</target>
        </trans-unit>
        <trans-unit id="bca8789f06329e10775c6a304ede93ceb69168e4" translate="yes" xml:space="preserve">
          <source>Unpermitted keys</source>
          <target state="translated">不允许的钥匙</target>
        </trans-unit>
        <trans-unit id="9856dae355fda3395412371f480dac40ebe10c25" translate="yes" xml:space="preserve">
          <source>Unregister a previously registered Interceptor. Either a class or a string can be passed in as the Interceptor. If a string is passed in it will be constantized.</source>
          <target state="translated">取消注册之前注册的拦截器。可以将一个类或一个字符串作为拦截器传入。如果传入的是字符串,它将被常量化。</target>
        </trans-unit>
        <trans-unit id="128f6d018b3c418efde99c433ebf40c8d484043f" translate="yes" xml:space="preserve">
          <source>Unregister a previously registered Interceptor. Either a class, string or symbol can be passed in as the Interceptor. If a string or symbol is passed in it will be camelized and constantized.</source>
          <target state="translated">取消注册之前注册的拦截器。Interceptor可以是一个类、字符串或符号。如果传入的是一个字符串或符号,那么它将会被具体化和常量化。</target>
        </trans-unit>
        <trans-unit id="f62864c1dd5409e6088f0e5effc0a53f3b7d66df" translate="yes" xml:space="preserve">
          <source>Unregister a previously registered Observer. Either a class, string or symbol can be passed in as the Observer. If a string or symbol is passed in it will be camelized and constantized.</source>
          <target state="translated">解除已注册的Observer的注册。观察者可以是类、字符串或符号。如果输入的是字符串或符号,则会被常量化。</target>
        </trans-unit>
        <trans-unit id="788cd52ca24c180fb6af6e4edda29ffe6e83dfe2" translate="yes" xml:space="preserve">
          <source>Unregister one or more previously registered Interceptors.</source>
          <target state="translated">取消注册一个或多个先前注册的拦截器。</target>
        </trans-unit>
        <trans-unit id="04d0c5eb12518bb698dc72b77fbc49f021bc6091" translate="yes" xml:space="preserve">
          <source>Unregister one or more previously registered Observers.</source>
          <target state="translated">解除一个或多个先前登记的观察员的登记。</target>
        </trans-unit>
        <trans-unit id="c241e9a594cce9fbcbb489c2a466c6f7e1c69477" translate="yes" xml:space="preserve">
          <source>Unsafe Query Generation</source>
          <target state="translated">不安全的查询生成</target>
        </trans-unit>
        <trans-unit id="ccc340a5964868283853155bd253181b213ee2a3" translate="yes" xml:space="preserve">
          <source>Unsaved objects and associations</source>
          <target state="translated">未保存的对象和关联</target>
        </trans-unit>
        <trans-unit id="9b65b5decf9a439fd03d47b77477a54d67be4357" translate="yes" xml:space="preserve">
          <source>Unsubscribe the subscription under test.</source>
          <target state="translated">退订测试中的订阅。</target>
        </trans-unit>
        <trans-unit id="46a592aa76213a60f36ac5dacd431bb714bdb2b3" translate="yes" xml:space="preserve">
          <source>Unsubscribes all streams associated with this channel from the pubsub queue.</source>
          <target state="translated">从pubsub队列中取消订阅与该通道相关的所有流。</target>
        </trans-unit>
        <trans-unit id="66b5840a9586c2f79dd11e0936d555c13ef22e51" translate="yes" xml:space="preserve">
          <source>Unsupported Release Series</source>
          <target state="translated">不支持的发布系列</target>
        </trans-unit>
        <trans-unit id="fb91e24fa52d8d2b32937bf04d843f730319a902" translate="yes" xml:space="preserve">
          <source>Update</source>
          <target state="translated">Update</target>
        </trans-unit>
        <trans-unit id="6269561658447fcbe6e337ddec8ae97e76a51ab3" translate="yes" xml:space="preserve">
          <source>Update metadata for the file identified by &lt;code&gt;key&lt;/code&gt; in the service. Override in subclasses only if the service needs to store specific metadata that has to be updated upon identification.</source>
          <target state="translated">更新由服务中的 &lt;code&gt;key&lt;/code&gt; 标识的文件的元数据。仅在服务需要存储必须在标识后进行更新的特定元数据时才覆盖子类。</target>
        </trans-unit>
        <trans-unit id="337c3f98b23b5570174103fb2e891190de492220" translate="yes" xml:space="preserve">
          <source>Updates a single attribute and saves the record. This is especially useful for boolean flags on existing records. Also note that</source>
          <target state="translated">更新单个属性并保存记录。这对现有记录上的布尔标志特别有用。还需要注意的是</target>
        </trans-unit>
        <trans-unit id="d3c3434cd4da48f273545d98086fde2f2c1e181a" translate="yes" xml:space="preserve">
          <source>Updates all records in the current relation with details given. This method constructs a single SQL UPDATE statement and sends it straight to the database. It does not instantiate the involved models and it does not trigger Active Record callbacks or validations. However, values passed to &lt;a href=&quot;relation#method-i-update_all&quot;&gt;update_all&lt;/a&gt; will still go through Active Record's normal type casting and serialization.</source>
          <target state="translated">使用给定的详细信息更新当前关系中的所有记录。此方法构造单个SQL UPDATE语句，并将其直接发送到数据库。它不会实例化所涉及的模型，也不会触发Active Record回调或验证。但是，传递给&lt;a href=&quot;relation#method-i-update_all&quot;&gt;update_all的&lt;/a&gt;值仍将通过Active Record的常规类型转换和序列化。</target>
        </trans-unit>
        <trans-unit id="89ed0bee658ed8a576853a3e21c980745c8d546b" translate="yes" xml:space="preserve">
          <source>Updates all the attributes that are dirty in this object.</source>
          <target state="translated">更新此对象中所有脏的属性。</target>
        </trans-unit>
        <trans-unit id="8f755f336cd1b6e9a7bcf86b24186c35caee849b" translate="yes" xml:space="preserve">
          <source>Updates an object (or multiple objects) and saves it to the database, if validations pass. The resulting object is returned whether the object was saved successfully to the database or not.</source>
          <target state="translated">如果验证通过,更新一个对象(或多个对象)并将其保存到数据库中。无论对象是否成功保存到数据库中,都会返回结果对象。</target>
        </trans-unit>
        <trans-unit id="51de37362cff3124cb6588b061df057813c882db" translate="yes" xml:space="preserve">
          <source>Updates its receiver just like &lt;a href=&quot;persistence#method-i-update&quot;&gt;update&lt;/a&gt; but calls &lt;a href=&quot;persistence#method-i-save-21&quot;&gt;save!&lt;/a&gt; instead of &lt;code&gt;save&lt;/code&gt;, so an exception is raised if the record is invalid and saving will fail.</source>
          <target state="translated">像&lt;a href=&quot;persistence#method-i-update&quot;&gt;更新&lt;/a&gt;一样更新其接收者，但通话可以&lt;a href=&quot;persistence#method-i-save-21&quot;&gt;保存！&lt;/a&gt;而不是 &lt;code&gt;save&lt;/code&gt; ，因此，如果记录无效并且保存将失败，则会引发异常。</target>
        </trans-unit>
        <trans-unit id="ef6b4725002f392b098a6e4d52696e4004ad52ad" translate="yes" xml:space="preserve">
          <source>Updates or inserts (upserts) a single record into the database in a single SQL INSERT statement. It does not instantiate any models nor does it trigger Active Record callbacks or validations. Though passed values go through Active Record's type casting and serialization.</source>
          <target state="translated">在一条SQL INSERT语句中更新或插入(upserts)一条记录到数据库中。它不实例化任何模型,也不触发Active Record回调或验证。尽管通过的值会通过Active Record的类型转换和序列化。</target>
        </trans-unit>
        <trans-unit id="2a1c02217be146bad426fc812a9bc0ba3a26548b" translate="yes" xml:space="preserve">
          <source>Updates or inserts (upserts) multiple records into the database in a single SQL INSERT statement. It does not instantiate any models nor does it trigger Active Record callbacks or validations. Though passed values go through Active Record's type casting and serialization.</source>
          <target state="translated">在一个SQL INSERT语句中更新或插入(upserts)多个记录到数据库中。它不实例化任何模型,也不触发Active Record回调或验证。尽管通过的值会通过Active Record的类型转换和序列化。</target>
        </trans-unit>
        <trans-unit id="83ff8bad4f1f02f18cacee0c7622935e2dd3773e" translate="yes" xml:space="preserve">
          <source>Updates the attribute identified by &lt;code&gt;attr_name&lt;/code&gt; with the specified &lt;code&gt;value&lt;/code&gt;. (Alias for the protected &lt;a href=&quot;attributemethods/write#method-i-write_attribute&quot;&gt;write_attribute&lt;/a&gt; method).</source>
          <target state="translated">用指定的 &lt;code&gt;value&lt;/code&gt; 更新 &lt;code&gt;attr_name&lt;/code&gt; 标识的属性。（用于受保护的&lt;a href=&quot;attributemethods/write#method-i-write_attribute&quot;&gt;write_attribute&lt;/a&gt;方法的别名）。</target>
        </trans-unit>
        <trans-unit id="8294f7a9f36c9fb5201db1158ce9c3e54c9cf4e9" translate="yes" xml:space="preserve">
          <source>Updates the attribute identified by &lt;code&gt;attr_name&lt;/code&gt; with the specified &lt;code&gt;value&lt;/code&gt;. Empty strings for &lt;a href=&quot;../../integer&quot;&gt;Integer&lt;/a&gt; and Float columns are turned into &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">使用指定的 &lt;code&gt;value&lt;/code&gt; 更新 &lt;code&gt;attr_name&lt;/code&gt; 标识的属性。&lt;a href=&quot;../../integer&quot;&gt;Integer&lt;/a&gt;和Float列的空字符串变为 &lt;code&gt;nil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e7f07a45119de0e275fd9697bea9f645f5d54020" translate="yes" xml:space="preserve">
          <source>Updates the attributes directly in the database issuing an UPDATE SQL statement and sets them in the receiver:</source>
          <target state="translated">直接在数据库中发出UPDATE SQL语句更新属性,并在接收方中进行设置。</target>
        </trans-unit>
        <trans-unit id="c2f7738a57643e75f93169276968624a8e9bf816" translate="yes" xml:space="preserve">
          <source>Updates the attributes of the model from the passed-in hash and saves the record, all wrapped in a transaction. If the object is invalid, the saving will fail and false will be returned.</source>
          <target state="translated">从传入的哈希值中更新模型的属性,并保存记录,所有这些都包裹在一个事务中。如果对象无效,保存将失败并返回false。</target>
        </trans-unit>
        <trans-unit id="8049e7441f408e3e647b1d09027f5d945b5734c0" translate="yes" xml:space="preserve">
          <source>Updates the receiver in-place, merging in the hash passed as argument:</source>
          <target state="translated">在原地更新接收器,合并作为参数传递的哈希值。</target>
        </trans-unit>
        <trans-unit id="06eb0cf61945f2baa84ba448f966ac0c0d4766a7" translate="yes" xml:space="preserve">
          <source>Updating Articles</source>
          <target state="translated">更新文章</target>
        </trans-unit>
        <trans-unit id="f9a4a6beacead0d3e974590ae81ff652f9640b13" translate="yes" xml:space="preserve">
          <source>Updating an Object</source>
          <target state="translated">更新对象</target>
        </trans-unit>
        <trans-unit id="f37df6119e88526a6d6c16ae5c25f6c05d98b0fe" translate="yes" xml:space="preserve">
          <source>Updating the Schema</source>
          <target state="translated">更新模式</target>
        </trans-unit>
        <trans-unit id="de66c667684eb170cba69498a8c821a27dc6a0b8" translate="yes" xml:space="preserve">
          <source>Updating the schema</source>
          <target state="translated">更新模式</target>
        </trans-unit>
        <trans-unit id="fb7a4cdfc584efada3231e3b09d46fecb6b7ded3" translate="yes" xml:space="preserve">
          <source>Upgrading Ruby on Rails</source>
          <target state="translated">升级Ruby on Rails</target>
        </trans-unit>
        <trans-unit id="9df57e5528d7bb0c306b04800c096c9a86077d6f" translate="yes" xml:space="preserve">
          <source>Upgrading from Rails 3.0 to Rails 3.1</source>
          <target state="translated">从Rails 3.0升级到Rails 3.1。</target>
        </trans-unit>
        <trans-unit id="bb17c01cc46b77915a100f16617b05c62fb9941c" translate="yes" xml:space="preserve">
          <source>Upgrading from Rails 3.1 to Rails 3.2</source>
          <target state="translated">从Rails 3.1升级到Rails 3.2。</target>
        </trans-unit>
        <trans-unit id="d840859cfe4df027c95bbf2da3c972c5dc7203e3" translate="yes" xml:space="preserve">
          <source>Upgrading from Rails 3.2 to Rails 4.0</source>
          <target state="translated">从Rails 3.2升级到Rails 4.0。</target>
        </trans-unit>
        <trans-unit id="aa469338f8c99d5cac7f703bbbe44ad7d9a7a8cb" translate="yes" xml:space="preserve">
          <source>Upgrading from Rails 4.0 to Rails 4.1</source>
          <target state="translated">从Rails 4.0升级到Rails 4.1。</target>
        </trans-unit>
        <trans-unit id="e2f5376a7b76407efdf98e53c793ecf3654b8a4d" translate="yes" xml:space="preserve">
          <source>Upgrading from Rails 4.1 to Rails 4.2</source>
          <target state="translated">从 Rails 4.1 升级到 Rails 4.2。</target>
        </trans-unit>
        <trans-unit id="31eb82b48a38920868e97cefa5128714838c6c20" translate="yes" xml:space="preserve">
          <source>Upgrading from Rails 4.2 to Rails 5.0</source>
          <target state="translated">从Rails 4.2升级到Rails 5.0。</target>
        </trans-unit>
        <trans-unit id="5b3716e8c06c1789906b13d68b581c33cfe3c4fc" translate="yes" xml:space="preserve">
          <source>Upgrading from Rails 5.0 to Rails 5.1</source>
          <target state="translated">从Rails 5.0升级到Rails 5.1。</target>
        </trans-unit>
        <trans-unit id="7e7598dce8a15ab3a932908dda4c52357cf3ae98" translate="yes" xml:space="preserve">
          <source>Upgrading from Rails 5.1 to Rails 5.2</source>
          <target state="translated">从Rails 5.1升级到Rails 5.2。</target>
        </trans-unit>
        <trans-unit id="b7c9ef69952f303ffb092a48e8fe958e62fc7bfb" translate="yes" xml:space="preserve">
          <source>Upgrading from Rails 5.2 to Rails 6.0</source>
          <target state="translated">从Rails 5.2升级到Rails 6.0。</target>
        </trans-unit>
        <trans-unit id="f6627794b6a332dc444fa428bd745620b3a90136" translate="yes" xml:space="preserve">
          <source>Upload the &lt;code&gt;io&lt;/code&gt; to the &lt;code&gt;key&lt;/code&gt; specified to all services. If a &lt;code&gt;checksum&lt;/code&gt; is provided, all services will ensure a match when the upload has completed or raise an &lt;a href=&quot;../integrityerror&quot;&gt;ActiveStorage::IntegrityError&lt;/a&gt;.</source>
          <target state="translated">将 &lt;code&gt;io&lt;/code&gt; 上载到为所有服务指定的 &lt;code&gt;key&lt;/code&gt; 。如果提供了 &lt;code&gt;checksum&lt;/code&gt; ，所有服务将确保上传完成后匹配，或引发&lt;a href=&quot;../integrityerror&quot;&gt;ActiveStorage :: IntegrityError&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8ca1d57b446d81445fbb90b92b10f983f82c70c8" translate="yes" xml:space="preserve">
          <source>Upload the &lt;code&gt;io&lt;/code&gt; to the &lt;code&gt;key&lt;/code&gt; specified. If a &lt;code&gt;checksum&lt;/code&gt; is provided, the service will ensure a match when the upload has completed or raise an &lt;a href=&quot;integrityerror&quot;&gt;ActiveStorage::IntegrityError&lt;/a&gt;.</source>
          <target state="translated">将 &lt;code&gt;io&lt;/code&gt; 上传到指定的 &lt;code&gt;key&lt;/code&gt; 。如果提供了 &lt;code&gt;checksum&lt;/code&gt; ，则该服务将确保上传完成后匹配，或引发&lt;a href=&quot;integrityerror&quot;&gt;ActiveStorage :: IntegrityError&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2191358108795cd5ed3f4e195309fe37b113dc2a" translate="yes" xml:space="preserve">
          <source>Uploaded files are temporary files whose lifespan is one request. When the object is finalized Ruby unlinks the file, so there is no need to clean them with a separate maintenance task.</source>
          <target state="translated">上传的文件是临时文件,其寿命是一个请求。当对象最终确定后,Ruby会解除文件的链接,所以不需要用单独的维护任务来清理它们。</target>
        </trans-unit>
        <trans-unit id="943e26649b772824ba55708d2fd502f15bc84dd0" translate="yes" xml:space="preserve">
          <source>Uploading Files</source>
          <target state="translated">上传文件</target>
        </trans-unit>
        <trans-unit id="aa757087ad251b34a2a2fc3efa9e9d225c0b8a97" translate="yes" xml:space="preserve">
          <source>Uploads the &lt;code&gt;io&lt;/code&gt; to the service on the &lt;code&gt;key&lt;/code&gt; for this blob. Blobs are intended to be immutable, so you shouldn't be using this method after a file has already been uploaded to fit with a blob. If you want to create a derivative blob, you should instead simply create a new blob based on the old one.</source>
          <target state="translated">将 &lt;code&gt;io&lt;/code&gt; 上传到该Blob 的 &lt;code&gt;key&lt;/code&gt; 上的服务。Blob旨在是不可变的，因此在文件已上传以适合Blob后，您不应使用此方法。如果要创建派生的Blob，则应该简单地基于旧的Blob创建一个新的Blob。</target>
        </trans-unit>
        <trans-unit id="5b4f5f343ed6dc1fcf87b83614a5733833cb275b" translate="yes" xml:space="preserve">
          <source>Upon form submission the value entered by the user will be stored in &lt;code&gt;params[:person][:name]&lt;/code&gt;.</source>
          <target state="translated">提交表单后，用户输入的值将存储在 &lt;code&gt;params[:person][:name]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2384d7787e8da51142d799aec6a1bc2b5934b94f" translate="yes" xml:space="preserve">
          <source>UrlFor</source>
          <target state="translated">UrlFor</target>
        </trans-unit>
        <trans-unit id="defeee97f6e140ce602558dbbf51a5d88c3163bd" translate="yes" xml:space="preserve">
          <source>UrlFor#url_options</source>
          <target state="translated">UrlFor#url_options</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">Usage</target>
        </trans-unit>
        <trans-unit id="f41cddc9c59b23a19c5d3bc2d0080f3210745cfb" translate="yes" xml:space="preserve">
          <source>Usage of &lt;code&gt;return&lt;/code&gt; within inline callback blocks</source>
          <target state="translated">内联回调块中 &lt;code&gt;return&lt;/code&gt; 的用法</target>
        </trans-unit>
        <trans-unit id="a7cb69b72008ab09ae192909df198675d2b69b56" translate="yes" xml:space="preserve">
          <source>Usage with mounted engines</source>
          <target state="translated">与安装的发动机一起使用</target>
        </trans-unit>
        <trans-unit id="497bf6d2658a85a833b2a8a8dfacdaf82da38eb9" translate="yes" xml:space="preserve">
          <source>Usage within the framework</source>
          <target state="translated">在框架内的使用情况</target>
        </trans-unit>
        <trans-unit id="861a0e430ffac5e4ae6e11b7a947f2c32d388cf4" translate="yes" xml:space="preserve">
          <source>Usage:</source>
          <target state="translated">Usage:</target>
        </trans-unit>
        <trans-unit id="27fe65747fd2c8338c812e062578e5abc605fedb" translate="yes" xml:space="preserve">
          <source>Use &quot;GET&quot; as the method for search forms. This allows users to bookmark a specific search and get back to it. More generally Rails encourages you to use the right HTTP verb for an action.</source>
          <target state="translated">使用 &quot;GET &quot;作为搜索形式的方法。这可以让用户对特定的搜索进行书签,并返回到它。更普遍的是,Rails鼓励你为一个动作使用正确的HTTP动词。</target>
        </trans-unit>
        <trans-unit id="b93418ad06b6f98d33605d6333e196e91a59fb76" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;calculations#method-i-pluck&quot;&gt;pluck&lt;/a&gt; as a shortcut to select one or more attributes without loading a bunch of records just to grab the attributes you want.</source>
          <target state="translated">使用&lt;a href=&quot;calculations#method-i-pluck&quot;&gt;pluck&lt;/a&gt;作为快捷方式来选择一个或多个属性，而不必加载一堆记录来获取所需的属性。</target>
        </trans-unit>
        <trans-unit id="96e7b09b40e35f040a0d0a01b7a01dae48d1581d" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;classmethods#method-i-has_many&quot;&gt;has_many&lt;/a&gt; in the base, and &lt;a href=&quot;classmethods#method-i-belongs_to&quot;&gt;belongs_to&lt;/a&gt; in the associated model.</source>
          <target state="translated">使用&lt;a href=&quot;classmethods#method-i-has_many&quot;&gt;的has_many&lt;/a&gt;在基地，&lt;a href=&quot;classmethods#method-i-belongs_to&quot;&gt;belongs_to的&lt;/a&gt;在相关模型。</target>
        </trans-unit>
        <trans-unit id="4b7f49683dc74ccaee081089bf0d73cdcfd86185" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;classmethods#method-i-has_one&quot;&gt;has_one&lt;/a&gt; in the base, and &lt;a href=&quot;classmethods#method-i-belongs_to&quot;&gt;belongs_to&lt;/a&gt; in the associated model.</source>
          <target state="translated">在基础中使用&lt;a href=&quot;classmethods#method-i-has_one&quot;&gt;has_one&lt;/a&gt;，在关联模型中使用&lt;a href=&quot;classmethods#method-i-belongs_to&quot;&gt;belongs_to&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="18f2269ce2dc7d437df0219a4efd8538c8ac5df5" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;connectionpool#method-i-with_connection&quot;&gt;ActiveRecord::Base.connection_pool.with_connection(&amp;amp;block)&lt;/a&gt;, which obtains a connection, yields it as the sole argument to the block, and returns it to the pool after the block completes.</source>
          <target state="translated">使用&lt;a href=&quot;connectionpool#method-i-with_connection&quot;&gt;ActiveRecord :: Base.connection_pool.with_connection（＆block）&lt;/a&gt;获得连接，将其作为该块的唯一参数生成，并在该块完成后将其返回到池中。</target>
        </trans-unit>
        <trans-unit id="07c0d1794a4170e8a909082eb55b0f10fc61c49b" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionView/Helpers/CspHelper.html#method-i-csp_meta_tag&quot;&gt;&lt;code&gt;csp_meta_tag&lt;/code&gt;&lt;/a&gt; helper to create a meta tag &quot;csp-nonce&quot; with the per-session nonce value for allowing inline &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tags.</source>
          <target state="translated">使用&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionView/Helpers/CspHelper.html#method-i-csp_meta_tag&quot;&gt; &lt;code&gt;csp_meta_tag&lt;/code&gt; &lt;/a&gt;帮助器创建具有每个会话随机数的元标记&amp;ldquo; csp-nonce&amp;rdquo;，以允许使用内联 &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; 标记。</target>
        </trans-unit>
        <trans-unit id="d4f94e7afd8b4da4bd5df152bf785036ba3d03b7" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;ActiveSupport::Notifications&lt;/code&gt; to notify &lt;code&gt;deprecation.rails&lt;/code&gt;.</source>
          <target state="translated">使用 &lt;code&gt;ActiveSupport::Notifications&lt;/code&gt; 通知 &lt;code&gt;deprecation.rails&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6bb89df638cd2a3252a75fd356169eab4400adfb" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;info breakpoints&lt;/code&gt; to list breakpoints. If you supply a number, it lists that breakpoint. Otherwise it lists all breakpoints.</source>
          <target state="translated">使用 &lt;code&gt;info breakpoints&lt;/code&gt; 列出断点。如果提供数字，它将列出该断点。否则，它将列出所有断点。</target>
        </trans-unit>
        <trans-unit id="75c2b9b3aad1e841645366974d35a7dd6539f214" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;photos_path&lt;/code&gt;, &lt;code&gt;new_photo_path&lt;/code&gt;, etc. to generate paths for this resource.</source>
          <target state="translated">使用 &lt;code&gt;photos_path&lt;/code&gt; ， &lt;code&gt;new_photo_path&lt;/code&gt; 等为该资源生成路径。</target>
        </trans-unit>
        <trans-unit id="89a2e23d873d17b6617ca2bae11c592c20d21ea9" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;rails credentials:edit&lt;/code&gt; to add the password to your application's encrypted credentials under &lt;code&gt;action_mailbox.ingress_password&lt;/code&gt;, where Action Mailbox will automatically find it:</source>
          <target state="translated">使用 &lt;code&gt;rails credentials:edit&lt;/code&gt; 将密码添加到应用程序的加密凭证中 &lt;code&gt;action_mailbox.ingress_password&lt;/code&gt; 下，其中Action Mailbox会自动找到该密码：</target>
        </trans-unit>
        <trans-unit id="45b259a69119c8958ee530c4044a470358f61d87" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;rails credentials:edit&lt;/code&gt; to add your API key to your application's encrypted credentials under &lt;code&gt;action_mailbox.mailgun_api_key&lt;/code&gt;, where Action Mailbox will automatically find it:</source>
          <target state="translated">使用 &lt;code&gt;rails credentials:edit&lt;/code&gt; &lt;code&gt;action_mailbox.mailgun_api_key&lt;/code&gt; ：edit将您的API密钥添加到action_mailbox.mailgun_api_key下的应用程序的加密凭据中，Action Mailbox会在其中自动找到它：</target>
        </trans-unit>
        <trans-unit id="20cdb22bdf4606cc94b204563d1b7a7ccfd205a2" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;rails credentials:edit&lt;/code&gt; to add your API key to your application's encrypted credentials under &lt;code&gt;action_mailbox.mandrill_api_key&lt;/code&gt;, where Action Mailbox will automatically find it:</source>
          <target state="translated">使用 &lt;code&gt;rails credentials:edit&lt;/code&gt; &lt;code&gt;action_mailbox.mandrill_api_key&lt;/code&gt; ：edit将API密钥添加到action_mailbox.mandrill_api_key下的应用程序的加密凭据中，Action Mailbox会在其中自动找到它：</target>
        </trans-unit>
        <trans-unit id="ac78de1984cae37f85dac2ee223d4d597ce15c55" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;rails&lt;/code&gt; for running tasks and tests</source>
          <target state="translated">使用 &lt;code&gt;rails&lt;/code&gt; 运行任务和测试</target>
        </trans-unit>
        <trans-unit id="eb64bc58530a10c1764d50f24ba7bdb1eb6e5d5f" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;rake secret&lt;/code&gt; to generate new keys for the &lt;code&gt;development&lt;/code&gt; and &lt;code&gt;test&lt;/code&gt; sections.</source>
          <target state="translated">使用 &lt;code&gt;rake secret&lt;/code&gt; 为 &lt;code&gt;development&lt;/code&gt; 和 &lt;code&gt;test&lt;/code&gt; 部分生成新密钥。</target>
        </trans-unit>
        <trans-unit id="28077c934adec4f2169ba53822cb9e9c852ab12c" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;root&lt;/code&gt; as a shorthand to name a route for the root path &amp;ldquo;/&amp;rdquo;.</source>
          <target state="translated">使用 &lt;code&gt;root&lt;/code&gt; 作为简写，为根路径&amp;ldquo; /&amp;rdquo;命名路由。</target>
        </trans-unit>
        <trans-unit id="bbbfe321f6d7c3927e3ea6641c35d0c7df7854d9" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;step&lt;/code&gt; (abbreviated &lt;code&gt;s&lt;/code&gt;) to continue running your program until the next logical stopping point and return control to the debugger. &lt;code&gt;next&lt;/code&gt; is similar to &lt;code&gt;step&lt;/code&gt;, but while &lt;code&gt;step&lt;/code&gt; stops at the next line of code executed, doing just a single step, &lt;code&gt;next&lt;/code&gt; moves to the next line without descending inside methods.</source>
          <target state="translated">使用 &lt;code&gt;step&lt;/code&gt; （缩写为 &lt;code&gt;s&lt;/code&gt; ）继续运行程序，直到下一个逻辑停止点，然后将控制权返回给调试器。 &lt;code&gt;next&lt;/code&gt; 与 &lt;code&gt;step&lt;/code&gt; 相似，但是 &lt;code&gt;step&lt;/code&gt; 在执行的代码的下一行停止时，仅执行一个步骤，而 &lt;code&gt;next&lt;/code&gt; 移至下一行，而不会下降内部方法。</target>
        </trans-unit>
        <trans-unit id="274b88e01f3b64b3968e92b05885330929e5a263" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;true&lt;/code&gt; with boolean attributes that can render with no value, like &lt;code&gt;disabled&lt;/code&gt; and &lt;code&gt;readonly&lt;/code&gt;.</source>
          <target state="translated">将 &lt;code&gt;true&lt;/code&gt; 与布尔值属性一起使用，该属性可以无值呈现，例如 &lt;code&gt;disabled&lt;/code&gt; 和 &lt;code&gt;readonly&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0608d6576ffbe1c001dea0eb8bbc222203b3fd00" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;url_for(variant)&lt;/code&gt; (or the implied form, like +link_to variant+ or +redirect_to variant+) to get the stable URL for a variant that points to the &lt;a href=&quot;representationscontroller&quot;&gt;ActiveStorage::RepresentationsController&lt;/a&gt;, which in turn will use this &lt;code&gt;service_call&lt;/code&gt; method for its redirection.</source>
          <target state="translated">使用 &lt;code&gt;url_for(variant)&lt;/code&gt; （或隐含形式，例如+ link_to变量+或+ redirect_to变量+）来获取指向&lt;a href=&quot;representationscontroller&quot;&gt;ActiveStorage :: RepresentationsController&lt;/a&gt;的变量的稳定URL ，后者将使用此 &lt;code&gt;service_call&lt;/code&gt; 方法进行重定向。</target>
        </trans-unit>
        <trans-unit id="a17f1c06d0a981dbe36a183966b72ecb02d25ddf" translate="yes" xml:space="preserve">
          <source>Use Case</source>
          <target state="translated">使用案例</target>
        </trans-unit>
        <trans-unit id="26f404eb8cc8ae0980b6b401669aec365ac80afc" translate="yes" xml:space="preserve">
          <source>Use Rails default banner.</source>
          <target state="translated">使用Rails默认的banner。</target>
        </trans-unit>
        <trans-unit id="bed922950e1655b47caa5f635e2de962347f8612" translate="yes" xml:space="preserve">
          <source>Use Rails' default banner.</source>
          <target state="translated">使用Rails的默认横幅。</target>
        </trans-unit>
        <trans-unit id="1e7e93c5643fb11747c304691bdb43553979a7ff" translate="yes" xml:space="preserve">
          <source>Use \ to escape special characters if you want to match them verbatim.</source>
          <target state="translated">如果你想逐字逐句地匹配特殊字符,请使用&quot;/&quot;来转义。</target>
        </trans-unit>
        <trans-unit id="c4cabf2287be80fce231291c8267ef9ac7b9acb3" translate="yes" xml:space="preserve">
          <source>Use a local cache for the duration of block.</source>
          <target state="translated">在块的持续时间内使用本地缓存。</target>
        </trans-unit>
        <trans-unit id="51ae29353f1aced001bf2b6f5c582e01012c3c7c" translate="yes" xml:space="preserve">
          <source>Use before_action except: [...] instead of only: [...] for security-related actions. This way you don't forget to enable security checks for newly added actions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebec1e4a0f5d2c5515d720ad801748906b023707" translate="yes" xml:space="preserve">
          <source>Use integration style controller tests over functional style controller tests.</source>
          <target state="translated">使用集成式控制器测试,而不是功能式控制器测试。</target>
        </trans-unit>
        <trans-unit id="fa4f3cb54f8fc6394a2cd5527926a3d8e3241fa9" translate="yes" xml:space="preserve">
          <source>Use symbol keyed options to add attributes to the generated tag.</source>
          <target state="translated">使用符号键选项为生成的标签添加属性。</target>
        </trans-unit>
        <trans-unit id="fab7cf7741e6eb878a9e07c53a8b569134d53b6d" translate="yes" xml:space="preserve">
          <source>Use that class method when you need to know the ordinal value of an enum. For example, you can use that when manually building SQL strings:</source>
          <target state="translated">当你需要知道一个枚举的序数值时,可以使用该类方法。例如,你可以在手动构建SQL字符串时使用该方法。</target>
        </trans-unit>
        <trans-unit id="5abf28e6ad48f1bf6c454117025a4849e3edc4f0" translate="yes" xml:space="preserve">
          <source>Use the :filter_html option to remove HTML which was not created by the Textile processor.</source>
          <target state="translated">使用 :filter_html 选项来删除不是由 Textile 处理器创建的 HTML。</target>
        </trans-unit>
        <trans-unit id="b50a3385aecdb9f3669d0dd02838831cce505e9e" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;content_security_policy_report_only&lt;/code&gt; configuration attribute to set &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy-Report-Only&quot;&gt;Content-Security-Policy-Report-Only&lt;/a&gt; in order to report only content violations for migrating legacy content</source>
          <target state="translated">使用 &lt;code&gt;content_security_policy_report_only&lt;/code&gt; 配置属性来设置&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy-Report-Only&quot;&gt;Content-Security-Policy-Report-Only&lt;/a&gt;，以便仅报告内容冲突以迁移旧内容</target>
        </trans-unit>
        <trans-unit id="ea696925906e0b613ee942443a5bac4fe4724115" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;distinct&lt;/code&gt; method to keep the collection free of duplicates. This is mostly useful together with the &lt;code&gt;:through&lt;/code&gt; option.</source>
          <target state="translated">使用 &lt;code&gt;distinct&lt;/code&gt; 方法使集合中没有重复项。与 &lt;code&gt;:through&lt;/code&gt; 选项一起使用时，这最有用。</target>
        </trans-unit>
        <trans-unit id="2590c4c46cbbf2ff350679676a2daf370586db9e" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;distinct&lt;/code&gt; method to remove duplicates from the collection.</source>
          <target state="translated">使用 &lt;code&gt;distinct&lt;/code&gt; 方法从集合中删除重复项。</target>
        </trans-unit>
        <trans-unit id="20bfe585e9e1c970f2c9ac6250e74b949db5037c" translate="yes" xml:space="preserve">
          <source>Use the logger configured for &lt;a href=&quot;base&quot;&gt;ActionMailer::Base&lt;/a&gt;.</source>
          <target state="translated">使用配置记录器&lt;a href=&quot;base&quot;&gt;的ActionMailer :: Base的&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="be25d2c50b3a98e48c767577f64f752714e885a4" translate="yes" xml:space="preserve">
          <source>Use the named concerns</source>
          <target state="translated">使用点名关注</target>
        </trans-unit>
        <trans-unit id="19c7d249fd08c6e3f63c4d63714724cce8d7eab4" translate="yes" xml:space="preserve">
          <source>Use the reversible method in &lt;code&gt;#change&lt;/code&gt; method:</source>
          <target state="translated">在 &lt;code&gt;#change&lt;/code&gt; 方法中使用可逆方法：</target>
        </trans-unit>
        <trans-unit id="ebd6ca02c5e3bebbf6d0dbdd9646e3c46012fecb" translate="yes" xml:space="preserve">
          <source>Use the time in UTC for comparisons.</source>
          <target state="translated">使用UTC的时间进行比较。</target>
        </trans-unit>
        <trans-unit id="604a226219823e732dca84b27b5cdd3cd3650c73" translate="yes" xml:space="preserve">
          <source>Use this if you already have some hash and you want to create a new one based on it.</source>
          <target state="translated">如果你已经有了一些哈希值,而你想在此基础上创建一个新的哈希值,可以使用这个功能。</target>
        </trans-unit>
        <trans-unit id="88f8e4b3dd276e55fd0c57f5caa3dd71e543517f" translate="yes" xml:space="preserve">
          <source>Use this macro in your model to set a default scope for all operations on the model.</source>
          <target state="translated">在您的模型中使用此宏为模型上的所有操作设置一个默认的作用域。</target>
        </trans-unit>
        <trans-unit id="134df6ad14a1550af1187abfda16cde343d20a3d" translate="yes" xml:space="preserve">
          <source>Use this method carefully as browser/proxy won't be able to invalidate the cached response unless browser cache is forcefully cleared.</source>
          <target state="translated">谨慎使用此方法,因为除非浏览器缓存被强制清除,否则浏览器/代理将无法使缓存响应无效。</target>
        </trans-unit>
        <trans-unit id="06555ead0dcfcbb1deffcb46e9a485042942d259" translate="yes" xml:space="preserve">
          <source>Use this method in code that absolutely needs a certain constant to be defined at that point. A typical use case is to make constant name resolution deterministic for constants with the same relative name in different namespaces whose evaluation would depend on load order otherwise.</source>
          <target state="translated">在绝对需要在此时定义某个常量的代码中使用此方法。一个典型的用例是,对于在不同命名空间中具有相同相对名称的常量,使常量的名称解析具有确定性,否则其评估将取决于加载顺序。</target>
        </trans-unit>
        <trans-unit id="d20515f3c9dee7633547ddf24e8894a446a15293" translate="yes" xml:space="preserve">
          <source>Use this method to shell out to a system library (e.g. muPDF or FFmpeg) for preview image generation. The resulting tempfile can be used as the &lt;code&gt;:io&lt;/code&gt; value in an attachable Hash:</source>
          <target state="translated">使用此方法可以将其封装到系统库（例如muPDF或FFmpeg）中以生成预览图像。生成的临时文件可用作可附加哈希中的 &lt;code&gt;:io&lt;/code&gt; 值：</target>
        </trans-unit>
        <trans-unit id="df8e9498307dfce677563bfd75fe3100d5a5a7b5" translate="yes" xml:space="preserve">
          <source>Use to indicate that the given &lt;code&gt;table_names&lt;/code&gt; are referenced by an SQL string, and should therefore be JOINed in any query rather than loaded separately. This method only works in conjunction with &lt;a href=&quot;querymethods#method-i-includes&quot;&gt;includes&lt;/a&gt;. See &lt;a href=&quot;querymethods#method-i-includes&quot;&gt;includes&lt;/a&gt; for more details.</source>
          <target state="translated">用于指示给定的 &lt;code&gt;table_names&lt;/code&gt; 由SQL字符串引用，因此应在任何查询中加入而不是单独加载。此方法仅与&lt;a href=&quot;querymethods#method-i-includes&quot;&gt;include&lt;/a&gt;结合使用。请参阅&lt;a href=&quot;querymethods#method-i-includes&quot;&gt;包括&lt;/a&gt;以获取更多详细信息。</target>
        </trans-unit>
        <trans-unit id="f3e811188cf667a2f4f3762760c3cc63817ef388" translate="yes" xml:space="preserve">
          <source>Use your existing &lt;code&gt;secret_key_base&lt;/code&gt; from the &lt;code&gt;secret_token.rb&lt;/code&gt; initializer to set the SECRET_KEY_BASE environment variable for whichever users running the Rails application in production mode. Alternatively, you can simply copy the existing &lt;code&gt;secret_key_base&lt;/code&gt; from the &lt;code&gt;secret_token.rb&lt;/code&gt; initializer to &lt;code&gt;secrets.yml&lt;/code&gt; under the &lt;code&gt;production&lt;/code&gt; section, replacing '&amp;lt;%= ENV[&quot;SECRET_KEY_BASE&quot;] %&amp;gt;'.</source>
          <target state="translated">使用现有的 &lt;code&gt;secret_key_base&lt;/code&gt; 从 &lt;code&gt;secret_token.rb&lt;/code&gt; 初始化设置为以生产模式运行Rails应用程序无论用户SECRET_KEY_BASE环境变量。或者，可以简单地复制现有 &lt;code&gt;secret_key_base&lt;/code&gt; 从 &lt;code&gt;secret_token.rb&lt;/code&gt; 初始化到 &lt;code&gt;secrets.yml&lt;/code&gt; 下 &lt;code&gt;production&lt;/code&gt; 部，替换&amp;ldquo;&amp;lt;％= ENV [&amp;lsquo;SECRET_KEY_BASE&amp;rsquo;]％&amp;gt;&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="32ca60b01a12a103be58fe7235a10b686a069e56" translate="yes" xml:space="preserve">
          <source>Used by &lt;a href=&quot;base#method-i-mail&quot;&gt;mail&lt;/a&gt; to set the content type of the message.</source>
          <target state="translated">通过使用&lt;a href=&quot;base#method-i-mail&quot;&gt;邮件&lt;/a&gt;设置内容类型的信息。</target>
        </trans-unit>
        <trans-unit id="c7ae3e9071b62b4104b2482b330f6dfb5ca9d821" translate="yes" xml:space="preserve">
          <source>Used by the &lt;code&gt;Static&lt;/code&gt; class to check the existence of a valid file in the server's &lt;code&gt;public/&lt;/code&gt; directory (see &lt;a href=&quot;static#method-i-call&quot;&gt;ActionDispatch::Static#call&lt;/a&gt;).</source>
          <target state="translated">由 &lt;code&gt;Static&lt;/code&gt; 类用于检查服务器的 &lt;code&gt;public/&lt;/code&gt; 目录中是否存在有效文件（请参见&lt;a href=&quot;static#method-i-call&quot;&gt;ActionDispatch :: Static＃call&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="d678e1d1c674d84cb7906827a13797c8cc50edba" translate="yes" xml:space="preserve">
          <source>Used for</source>
          <target state="translated">用于</target>
        </trans-unit>
        <trans-unit id="2b1b36bcffe16e9b93df752661b8c0397f38b2ed" translate="yes" xml:space="preserve">
          <source>Used for memory caching. This cache is not thread safe.</source>
          <target state="translated">用于内存缓存。这个缓存不是线程安全的。</target>
        </trans-unit>
        <trans-unit id="514a7490440f51de257674d689e8b288bee09457" translate="yes" xml:space="preserve">
          <source>Used for thread safe code reloading during development.</source>
          <target state="translated">用于开发过程中的线程安全代码重载。</target>
        </trans-unit>
        <trans-unit id="97e1938f542aca745007c1fdd487eca665009c3f" translate="yes" xml:space="preserve">
          <source>Used in &lt;code&gt;ActionController::Base&lt;/code&gt; and &lt;code&gt;ActionController::API&lt;/code&gt; to include all renderers by default.</source>
          <target state="translated">在 &lt;code&gt;ActionController::Base&lt;/code&gt; 和 &lt;code&gt;ActionController::API&lt;/code&gt; 使用，默认情况下包括所有渲染器。</target>
        </trans-unit>
        <trans-unit id="16320627b2911e853ea13a759ed559c7ac1824a1" translate="yes" xml:space="preserve">
          <source>Used in cases where a method or scope could return zero records but the result needs to be chainable.</source>
          <target state="translated">在方法或作用域可以返回零记录但结果需要可链的情况下使用。</target>
        </trans-unit>
        <trans-unit id="956030772ed680b410762c1da2637605b1ba46d6" translate="yes" xml:space="preserve">
          <source>Used to avoid updating the counter cache unnecessarily.</source>
          <target state="translated">用于避免不必要地更新计数器缓存。</target>
        </trans-unit>
        <trans-unit id="6f592248d356cdfe10cd072a97e114514d9f02ed" translate="yes" xml:space="preserve">
          <source>Used to extend a scope with additional methods, either through a module or through a block provided.</source>
          <target state="translated">通过模块或提供的块,用额外的方法来扩展作用域。</target>
        </trans-unit>
        <trans-unit id="72e93f3a23186570dcca957e636dabf8a1e4ecde" translate="yes" xml:space="preserve">
          <source>Used to serve static files from the public directory. Disabled if &lt;code&gt;config.public_file_server.enabled&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">用于提供来自公共目录的静态文件。如果 &lt;code&gt;config.public_file_server.enabled&lt;/code&gt; 为 &lt;code&gt;false&lt;/code&gt; ,则禁用。</target>
        </trans-unit>
        <trans-unit id="04197c85751f127a95a62d791131086b5bb5150c" translate="yes" xml:space="preserve">
          <source>Used to specify an operation that can be run in one direction or another. Call the methods &lt;code&gt;up&lt;/code&gt; and &lt;code&gt;down&lt;/code&gt; of the yielded object to run a block only in one given direction. The whole block will be called in the right order within the migration.</source>
          <target state="translated">用于指定可以在一个方向或另一个方向上运行的操作。 &lt;code&gt;up&lt;/code&gt; 和 &lt;code&gt;down&lt;/code&gt; 调用产生对象的方法以仅在一个给定方向上运行一个块。在迁移过程中，将按正确的顺序调用整个块。</target>
        </trans-unit>
        <trans-unit id="91525b7d9cd32254b4e0ea0ba41129b93c07a0e5" translate="yes" xml:space="preserve">
          <source>Used to specify an operation that is only run when migrating up (for example, populating a new column with its initial values).</source>
          <target state="translated">用于指定只有在向上迁移时才会运行的操作(例如,用其初始值填充新列)。</target>
        </trans-unit>
        <trans-unit id="89738fbe783a7db5d7b75f3c0a4098fda98cb267" translate="yes" xml:space="preserve">
          <source>Useful to check whether a connection's &lt;code&gt;identified_by&lt;/code&gt; gets assigned properly and that any improper connection requests are rejected.</source>
          <target state="translated">这对于检查连接的 &lt;code&gt;identified_by&lt;/code&gt; 是否得到正确分配以及是否拒绝了任何不正确的连接请求很有用。</target>
        </trans-unit>
        <trans-unit id="5ca6e571e0d3add6b3954eb296783de689f78dc1" translate="yes" xml:space="preserve">
          <source>User Management</source>
          <target state="translated">用户管理</target>
        </trans-unit>
        <trans-unit id="bc69f43450d8bd0922dbc92c9debe3313e180189" translate="yes" xml:space="preserve">
          <source>User defined rake tasks will run in the &lt;code&gt;development&lt;/code&gt; environment by default. If you want them to run in other environments consult the &lt;a href=&quot;https://github.com/rails/spring#rake&quot;&gt;Spring README&lt;/a&gt;.</source>
          <target state="translated">用户定义的rake任务将默认在 &lt;code&gt;development&lt;/code&gt; 环境中运行。如果您希望它们在其他环境中运行，请查阅&lt;a href=&quot;https://github.com/rails/spring#rake&quot;&gt;Spring README&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d96a0f2a2f93f83c4e4332a2c73f40caf7f1512d" translate="yes" xml:space="preserve">
          <source>Users may also define their own custom types, as long as they respond to the methods defined on the value type. The method &lt;code&gt;deserialize&lt;/code&gt; or &lt;code&gt;cast&lt;/code&gt; will be called on your type object, with raw input from the database or from your controllers. See &lt;a href=&quot;../../activemodel/type/value&quot;&gt;ActiveModel::Type::Value&lt;/a&gt; for the expected API. It is recommended that your type objects inherit from an existing type, or from &lt;a href=&quot;../../activemodel/type/value&quot;&gt;ActiveRecord::Type::Value&lt;/a&gt;</source>
          <target state="translated">用户还可以定义自己的自定义类型，只要他们响应在值类型上定义的方法即可。 &lt;code&gt;deserialize&lt;/code&gt; 或 &lt;code&gt;cast&lt;/code&gt; 的方法将在类型对象上调用，并使用来自数据库或控制器的原始输入。请参阅&lt;a href=&quot;../../activemodel/type/value&quot;&gt;ActiveModel :: Type :: Value&lt;/a&gt;以获取所需的API。建议您的类型对象从现有类型或&lt;a href=&quot;../../activemodel/type/value&quot;&gt;ActiveRecord :: Type :: Value&lt;/a&gt;继承</target>
        </trans-unit>
        <trans-unit id="db8d27f42fe698ba4cd4ab166c6645bd7165c8d2" translate="yes" xml:space="preserve">
          <source>Uses &lt;a href=&quot;../date&quot;&gt;Date&lt;/a&gt; to provide precise &lt;a href=&quot;../time&quot;&gt;Time&lt;/a&gt; calculations for years, months, and days according to the proleptic Gregorian calendar. The result is returned as a new &lt;a href=&quot;timewithzone&quot;&gt;TimeWithZone&lt;/a&gt; object.</source>
          <target state="translated">使用&lt;a href=&quot;../date&quot;&gt;日期&lt;/a&gt;可根据阳历提供准确的年，月和日的&lt;a href=&quot;../time&quot;&gt;时间&lt;/a&gt;计算。结果作为新的&lt;a href=&quot;timewithzone&quot;&gt;TimeWithZone&lt;/a&gt;对象返回。</target>
        </trans-unit>
        <trans-unit id="52670980f6a057673646f8676ea6ee713fa9c10f" translate="yes" xml:space="preserve">
          <source>Uses &lt;a href=&quot;date&quot;&gt;Date&lt;/a&gt; to provide precise &lt;a href=&quot;time&quot;&gt;Time&lt;/a&gt; calculations for years, months, and days according to the proleptic Gregorian calendar. The &lt;code&gt;options&lt;/code&gt; parameter takes a hash with any of these keys: &lt;code&gt;:years&lt;/code&gt;, &lt;code&gt;:months&lt;/code&gt;, &lt;code&gt;:weeks&lt;/code&gt;, &lt;code&gt;:days&lt;/code&gt;, &lt;code&gt;:hours&lt;/code&gt;, &lt;code&gt;:minutes&lt;/code&gt;, &lt;code&gt;:seconds&lt;/code&gt;.</source>
          <target state="translated">使用&lt;a href=&quot;date&quot;&gt;日期&lt;/a&gt;可根据阳历提供准确的年，月和日的&lt;a href=&quot;time&quot;&gt;时间&lt;/a&gt;计算。该 &lt;code&gt;options&lt;/code&gt; 参数采取任何与这些键的哈希： &lt;code&gt;:years&lt;/code&gt; ， &lt;code&gt;:months&lt;/code&gt; ， &lt;code&gt;:weeks&lt;/code&gt; ， &lt;code&gt;:days&lt;/code&gt; ， &lt;code&gt;:hours&lt;/code&gt; ， &lt;code&gt;:minutes&lt;/code&gt; ， &lt;code&gt;:seconds&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5040634ced459a0127c4fdadffadd779e1b70be6" translate="yes" xml:space="preserve">
          <source>Uses &lt;a href=&quot;date&quot;&gt;Date&lt;/a&gt; to provide precise &lt;a href=&quot;time&quot;&gt;Time&lt;/a&gt; calculations for years, months, and days. The &lt;code&gt;options&lt;/code&gt; parameter takes a hash with any of these keys: &lt;code&gt;:years&lt;/code&gt;, &lt;code&gt;:months&lt;/code&gt;, &lt;code&gt;:weeks&lt;/code&gt;, &lt;code&gt;:days&lt;/code&gt;, &lt;code&gt;:hours&lt;/code&gt;, &lt;code&gt;:minutes&lt;/code&gt;, &lt;code&gt;:seconds&lt;/code&gt;.</source>
          <target state="translated">使用&lt;a href=&quot;date&quot;&gt;日期&lt;/a&gt;可提供精确的&lt;a href=&quot;time&quot;&gt;时间&lt;/a&gt;计算，包括年，月和日。该 &lt;code&gt;options&lt;/code&gt; 参数采取任何与这些键的哈希： &lt;code&gt;:years&lt;/code&gt; ， &lt;code&gt;:months&lt;/code&gt; ， &lt;code&gt;:weeks&lt;/code&gt; ， &lt;code&gt;:days&lt;/code&gt; ， &lt;code&gt;:hours&lt;/code&gt; ， &lt;code&gt;:minutes&lt;/code&gt; ， &lt;code&gt;:seconds&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5eeac64e9013b0f5b4be64a298f24b0464f9f1cb" translate="yes" xml:space="preserve">
          <source>Uses an MD5 digest based on time to generate a value to be used only once.</source>
          <target state="translated">使用基于时间的MD5摘要来生成一个只能使用一次的值。</target>
        </trans-unit>
        <trans-unit id="79fafb5c4a55b7390185721a11815aae5f26e3a9" translate="yes" xml:space="preserve">
          <source>Uses the internal channel to disconnect the connection.</source>
          <target state="translated">使用内部通道断开连接。</target>
        </trans-unit>
        <trans-unit id="e956017bff10fa87252a6efee7ede0ff681c8b34" translate="yes" xml:space="preserve">
          <source>Using .gemspecs as Intended</source>
          <target state="translated">按计划使用.gemspecs</target>
        </trans-unit>
        <trans-unit id="1a45a1854c029fad86f58cc64d3f32eaa571e8d1" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;:as&lt;/code&gt; in Nested Resources</source>
          <target state="translated">在嵌套资源中使用 &lt;code&gt;:as&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b6d361e456c9f8b3ec5c765405e6c85ce97180cb" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;:if&lt;/code&gt; and &lt;code&gt;:unless&lt;/code&gt; with a &lt;code&gt;Proc&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;:if&lt;/code&gt; 和 &lt;code&gt;:unless&lt;/code&gt; 与 &lt;code&gt;Proc&lt;/code&gt; 一起使用</target>
        </trans-unit>
        <trans-unit id="c61e9703d2e3bcc88f03129ac3d9e0f0b34714cc" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;:if&lt;/code&gt; and &lt;code&gt;:unless&lt;/code&gt; with a &lt;code&gt;Symbol&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;:if&lt;/code&gt; 和 &lt;code&gt;:unless&lt;/code&gt; 带有 &lt;code&gt;Symbol&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fda2ff294ecaf73403c0dc270c23cf45258a2165" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;:locale&lt;/code&gt; option:</source>
          <target state="translated">使用 &lt;code&gt;:locale&lt;/code&gt; 选项：</target>
        </trans-unit>
        <trans-unit id="30368b696f08cb91014e942bfe032a57ea1dbb62" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;Class#class_eval&lt;/code&gt; is great for simple adjustments, but for more complex class modifications, you might want to consider using &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveSupport/Concern.html&quot;&gt;&lt;code&gt;ActiveSupport::Concern&lt;/code&gt;&lt;/a&gt;. ActiveSupport::Concern manages load order of interlinked dependent modules and classes at run time allowing you to significantly modularize your code.</source>
          <target state="translated">使用 &lt;code&gt;Class#class_eval&lt;/code&gt; 非常适合简单的调整，但是对于更复杂的类修改，您可能需要考虑使用&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveSupport/Concern.html&quot;&gt; &lt;code&gt;ActiveSupport::Concern&lt;/code&gt; &lt;/a&gt;。ActiveSupport :: Concern在运行时管理互连的依赖模块和类的加载顺序，从而使您可以显着地模块化代码。</target>
        </trans-unit>
        <trans-unit id="bef57ac02b970daacc2b2fc67d2082eacfa334ab" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;OrderedOptions&lt;/code&gt;, the above code could be reduced to:</source>
          <target state="translated">使用 &lt;code&gt;OrderedOptions&lt;/code&gt; ，上述代码可以简化为：</target>
        </trans-unit>
        <trans-unit id="b3f1b10eabf3885e7fbfa38e98ce85edbc2c9c67" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;details&lt;/code&gt; with custom validators is covered in the &lt;a href=&quot;#working-with-validation-errors&quot;&gt;Working with Validation Errors&lt;/a&gt; section.</source>
          <target state="translated">&amp;ldquo;使用&lt;a href=&quot;#working-with-validation-errors&quot;&gt;验证错误&amp;rdquo;&lt;/a&gt;部分 &lt;code&gt;details&lt;/code&gt; 了如何将详细信息与自定义验证器一起使用。</target>
        </trans-unit>
        <trans-unit id="4e26e907726fee95003c34aed3c35cb55cf263ad" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;head&lt;/code&gt; To Build Header-Only Responses</source>
          <target state="translated">使用 &lt;code&gt;head&lt;/code&gt; 建立仅标题响应</target>
        </trans-unit>
        <trans-unit id="ec0a2f4b1cb6627a64af32d9baae3c063d752c40" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;redirect_to&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;redirect_to&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c34f25e0ec395f5452eb90d0d02b342464eb2744" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;render&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;render&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3c3a3fe0d8933ce00db0895cd486bf3dc564d1b6" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;rescue_from&lt;/code&gt; with &lt;code&gt;Exception&lt;/code&gt; or &lt;code&gt;StandardError&lt;/code&gt; would cause serious side-effects as it prevents Rails from handling exceptions properly. As such, it is not recommended to do so unless there is a strong reason.</source>
          <target state="translated">使用带有 &lt;code&gt;Exception&lt;/code&gt; 或 &lt;code&gt;StandardError&lt;/code&gt; 的 &lt;code&gt;rescue_from&lt;/code&gt; 会导致严重的副作用，因为这会阻止Rails正确处理异常。因此，除非有充分的理由，否则不建议这样做。</target>
        </trans-unit>
        <trans-unit id="0e5dffcbc275081fb12b83397187245d58456dc2" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;resolve&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;resolve&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="56f4662a7096f000433e6b4a9084757e43f4977a" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;reversible&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;reversible&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0ef61be3f99b31a04f5d1aec9bb7d9c7d696ee8f" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;reversible&lt;/code&gt; will ensure that the instructions are executed in the right order too. If the previous example migration is reverted, the &lt;code&gt;down&lt;/code&gt; block will be run after the &lt;code&gt;home_page_url&lt;/code&gt; column is removed and right before the table &lt;code&gt;distributors&lt;/code&gt; is dropped.</source>
          <target state="translated">使用 &lt;code&gt;reversible&lt;/code&gt; 将确保指令也以正确的顺序执行。如果恢复了前面的示例迁移，则将在删除 &lt;code&gt;home_page_url&lt;/code&gt; 列之后以及删除表 &lt;code&gt;distributors&lt;/code&gt; 之前立即运行 &lt;code&gt;down&lt;/code&gt; 块。</target>
        </trans-unit>
        <trans-unit id="eec9f30d27d6d70d3264961c05ab7e4f85d4b976" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;root&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;root&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="761245540698f2d11c0a3828a047a6ac3cf71b0c" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;scope&lt;/code&gt;, we can alter path names generated by &lt;code&gt;resources&lt;/code&gt;:</source>
          <target state="translated">使用 &lt;code&gt;scope&lt;/code&gt; ，我们可以更改 &lt;code&gt;resources&lt;/code&gt; 生成的路径名：</target>
        </trans-unit>
        <trans-unit id="93e741feae9b800b8bf3041dab9968f2241a1deb" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;t.bigint :supplier_id&lt;/code&gt; makes the foreign key naming obvious and explicit. In current versions of Rails, you can abstract away this implementation detail by using &lt;code&gt;t.references :supplier&lt;/code&gt; instead.</source>
          <target state="translated">使用 &lt;code&gt;t.bigint :supplier_id&lt;/code&gt; 可以使外键命名变得明显而明确。在当前版本的Rails中，您可以改为使用 &lt;code&gt;t.references :supplier&lt;/code&gt; 来抽象该实现细节。</target>
        </trans-unit>
        <trans-unit id="268c16bfef01e6ad855010c27e0131589bf60442" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;where&lt;/code&gt; like this will only work when you pass it a Hash. For SQL-fragments you need to use &lt;code&gt;references&lt;/code&gt; to force joined tables:</source>
          <target state="translated">仅当您将其传递给Hash时，才可以 &lt;code&gt;where&lt;/code&gt; 这样的地方使用它。对于SQL片段，您需要使用 &lt;code&gt;references&lt;/code&gt; 来强制联接表：</target>
        </trans-unit>
        <trans-unit id="ee0d347a14edcc5b4e6139a52d4ba2a529ba6717" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;with_options&lt;/code&gt;, we can remove the duplication:</source>
          <target state="translated">使用 &lt;code&gt;with_options&lt;/code&gt; ，我们可以删除重复项：</target>
        </trans-unit>
        <trans-unit id="e1619d01885f58fab7932830dc9006ed21c70b59" translate="yes" xml:space="preserve">
          <source>Using Action Mailer Helpers</source>
          <target state="translated">使用Action Mailer Helpers</target>
        </trans-unit>
        <trans-unit id="f4801bfa85cb4646ac866191b4ff929e6c94d479" translate="yes" xml:space="preserve">
          <source>Using Action View with Rails</source>
          <target state="translated">使用Rails的Action View</target>
        </trans-unit>
        <trans-unit id="689b87a4c52c48aa5c75e211634ce8d6e5176f48" translate="yes" xml:space="preserve">
          <source>Using ActionDispatch::Request</source>
          <target state="translated">使用ActionDispatch::Request</target>
        </trans-unit>
        <trans-unit id="98b4728e19597ee77408adeedb067e58164f4ce8" translate="yes" xml:space="preserve">
          <source>Using Active Record, Redis, etc within your channel actions means you'll get a separate connection from each thread in the worker pool. Plan your deployment accordingly: 5 servers each running 5 Puma workers each running an 8-thread worker pool means at least 200 database connections.</source>
          <target state="translated">在你的通道动作中使用Active Record、Redis等意味着你将从worker pool中的每个线程中获得一个独立的连接。据此规划你的部署。5台服务器,每台服务器运行5个Puma Worker,每台服务器运行一个8线程的Worker Pool,意味着至少有200个数据库连接。</target>
        </trans-unit>
        <trans-unit id="b885a388e1785207455bd2726a8add6d27d8bfd9" translate="yes" xml:space="preserve">
          <source>Using Active Storage, an application can transform image uploads with &lt;a href=&quot;https://www.imagemagick.org&quot;&gt;ImageMagick&lt;/a&gt;, generate image representations of non-image uploads like PDFs and videos, and extract metadata from arbitrary files.</source>
          <target state="translated">使用Active Storage，应用程序可以使用&lt;a href=&quot;https://www.imagemagick.org&quot;&gt;ImageMagick&lt;/a&gt;转换图像上传，生成非图像上传（如PDF和视频）的图像表示，并从任意文件中提取元数据。</target>
        </trans-unit>
        <trans-unit id="023cdb9a7e592718426d2dc557941f6b6cffe0ef" translate="yes" xml:space="preserve">
          <source>Using Date and Time Form Helpers</source>
          <target state="translated">使用日期和时间表格助手</target>
        </trans-unit>
        <trans-unit id="b0264128715992de2a3caae255bd4b486d078dca" translate="yes" xml:space="preserve">
          <source>Using Different Backends</source>
          <target state="translated">使用不同的后端</target>
        </trans-unit>
        <trans-unit id="6d25a3491e53f3cddb1d54b127f5a17ba102fc8f" translate="yes" xml:space="preserve">
          <source>Using Different Exception Handlers</source>
          <target state="translated">使用不同的异常处理程序</target>
        </trans-unit>
        <trans-unit id="58638d8c86a7a54ea83d04eda52f2c384a7a582c" translate="yes" xml:space="preserve">
          <source>Using Digest::MD5 generates version 3 UUIDs; Digest::SHA1 generates version 5 UUIDs. &lt;a href=&quot;uuid#method-c-uuid_from_hash&quot;&gt;::uuid_from_hash&lt;/a&gt; always generates the same &lt;a href=&quot;uuid&quot;&gt;UUID&lt;/a&gt; for a given name and namespace combination.</source>
          <target state="translated">使用Digest :: MD5生成版本3 UUID；Digest :: SHA1生成版本5 UUID。&lt;a href=&quot;uuid#method-c-uuid_from_hash&quot;&gt;:: uuid_from_hash&lt;/a&gt;始终为给定的名称和名称空间组合生成相同的&lt;a href=&quot;uuid&quot;&gt;UUID&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2156c7f04d7195148f3c510e3dfd9851d1e37e5a" translate="yes" xml:space="preserve">
          <source>Using ERB, you can also inject dynamic values into your fixtures with inserts like &lt;code&gt;&amp;lt;%=
Date.today.strftime(&quot;%Y-%m-%d&quot;) %&amp;gt;&lt;/code&gt;. This is however a feature to be used with some caution. The point of fixtures are that they're stable units of predictable sample data. If you feel that you need to inject dynamic values, then perhaps you should reexamine whether your application is properly testable. Hence, dynamic values in fixtures are to be considered a code smell.</source>
          <target state="translated">使用ERB，您还可以使用 &lt;code&gt;&amp;lt;%= Date.today.strftime(&quot;%Y-%m-%d&quot;) %&amp;gt;&lt;/code&gt; 类的插入物将动态值注入到灯具中。但是，使用此功能时要格外小心。固定装置的要点是它们是可预测样本数据的稳定单位。如果您认为需要注入动态值，那么也许您应该重新检查应用程序是否可正确测试。因此，灯具中的动态值应被视为代码气味。</target>
        </trans-unit>
        <trans-unit id="fe36e51897a24bbb93f2054ef4f0d1ff67a9dd17" translate="yes" xml:space="preserve">
          <source>Using Engine's routes outside &lt;a href=&quot;engine&quot;&gt;Engine&lt;/a&gt;</source>
          <target state="translated">在&lt;a href=&quot;engine&quot;&gt;引擎&lt;/a&gt;外使用引擎的路线</target>
        </trans-unit>
        <trans-unit id="a95b2ed1497e192cc87881fabe7ffe384963956d" translate="yes" xml:space="preserve">
          <source>Using Fixtures in Test Cases</source>
          <target state="translated">在测试用例中使用夹具</target>
        </trans-unit>
        <trans-unit id="db97588a7c818188089d64beac1a13913a323bba" translate="yes" xml:space="preserve">
          <source>Using Form Helpers</source>
          <target state="translated">使用表格助手</target>
        </trans-unit>
        <trans-unit id="bc0482276b0c1c32311dc3afe61a57fca707ec57" translate="yes" xml:space="preserve">
          <source>Using Initializer Files</source>
          <target state="translated">使用初始化文件</target>
        </trans-unit>
        <trans-unit id="b182a342f13730214993d743c33ab88e4f17ffa2" translate="yes" xml:space="preserve">
          <source>Using Nested Layouts</source>
          <target state="translated">使用嵌套式布局</target>
        </trans-unit>
        <trans-unit id="dd4669ca9c2fe5d3bc7226103f94706530f82eb9" translate="yes" xml:space="preserve">
          <source>Using Partials</source>
          <target state="translated">使用对偶数</target>
        </trans-unit>
        <trans-unit id="1d1756ed605c4bde531129152f324f566ad4ddcd" translate="yes" xml:space="preserve">
          <source>Using Rack::Sendfile</source>
          <target state="translated">使用 Rack:::Sendfile</target>
        </trans-unit>
        <trans-unit id="d6df79c4be72b595e98d2693aa2b4a5dae292231" translate="yes" xml:space="preserve">
          <source>Using Rails for API-only Applications</source>
          <target state="translated">将Rails用于仅有API的应用</target>
        </trans-unit>
        <trans-unit id="4bef2888ddda4e0cb2132bc5f2e388ccbde1ae44" translate="yes" xml:space="preserve">
          <source>Using Safe HTML Translations</source>
          <target state="translated">使用安全的HTML翻译</target>
        </trans-unit>
        <trans-unit id="1a1c092a8a121e4cf3eab9a3b63f28450913b696" translate="yes" xml:space="preserve">
          <source>Using Webpacker</source>
          <target state="translated">使用Webpacker</target>
        </trans-unit>
        <trans-unit id="213d394d6e1fb632b04b4460c21397cd533ef532" translate="yes" xml:space="preserve">
          <source>Using Your Own Compressor</source>
          <target state="translated">使用您自己的压缩机</target>
        </trans-unit>
        <trans-unit id="b879007491eccd6fe1737da3feb44441b98f130d" translate="yes" xml:space="preserve">
          <source>Using a Class Provided by the Application</source>
          <target state="translated">使用应用程序提供的类</target>
        </trans-unit>
        <trans-unit id="c57fcb3657328d62eb218b876a331c97dc7870ea" translate="yes" xml:space="preserve">
          <source>Using a Proc with &lt;code&gt;:if&lt;/code&gt; and &lt;code&gt;:unless&lt;/code&gt;</source>
          <target state="translated">与 &lt;code&gt;:if&lt;/code&gt; 和 &lt;code&gt;:unless&lt;/code&gt; un一起使用Proc</target>
        </trans-unit>
        <trans-unit id="2195f914c11a6c74a4c824c2f1be36419f3dfb15" translate="yes" xml:space="preserve">
          <source>Using a Symbol with &lt;code&gt;:if&lt;/code&gt; and &lt;code&gt;:unless&lt;/code&gt;</source>
          <target state="translated">将符号与 &lt;code&gt;:if&lt;/code&gt; 和 &lt;code&gt;:unless&lt;/code&gt; un一起使用</target>
        </trans-unit>
        <trans-unit id="9cdf73cd7c50969cdb83f98e51f88fde6bcc1156" translate="yes" xml:space="preserve">
          <source>Using a block</source>
          <target state="translated">使用块</target>
        </trans-unit>
        <trans-unit id="ed32afa6e804b4c4f488fd2fc4ed44dc5f7c91ae" translate="yes" xml:space="preserve">
          <source>Using a class method is the preferred way to accept arguments for scopes. These methods will still be accessible on the association objects:</source>
          <target state="translated">使用类方法是接受作用域参数的首选方式。这些方法仍然可以在关联对象上访问。</target>
        </trans-unit>
        <trans-unit id="fbe9a0432f218f90338c41dfe3c1a24f65a35f1f" translate="yes" xml:space="preserve">
          <source>Using a custom deprecator directly:</source>
          <target state="translated">直接使用自定义的deprecator。</target>
        </trans-unit>
        <trans-unit id="f4851c91b2ad607dec75ecc5584fff41d065b743" translate="yes" xml:space="preserve">
          <source>Using a different layout in the action render call</source>
          <target state="translated">在动作渲染调用中使用不同的布局</target>
        </trans-unit>
        <trans-unit id="5eeb9ff231016b33951f753c8c0c163bed3faaaa" translate="yes" xml:space="preserve">
          <source>Using a model after changing its table</source>
          <target state="translated">改变表格后使用模型</target>
        </trans-unit>
        <trans-unit id="ab15994fed6aed4a7f4ed362a4b401e9650676b1" translate="yes" xml:space="preserve">
          <source>Using a module</source>
          <target state="translated">使用模块</target>
        </trans-unit>
        <trans-unit id="ba85a8af7530f7d54f21ae22192f4284960b4de4" translate="yes" xml:space="preserve">
          <source>Using an engine within an application is very easy. This section covers how to mount the engine into an application and the initial setup required, as well as linking the engine to a &lt;code&gt;User&lt;/code&gt; class provided by the application to provide ownership for articles and comments within the engine.</source>
          <target state="translated">在应用程序内使用引擎非常容易。本节介绍如何将引擎安装到应用程序中以及所需的初始设置，以及将引擎链接到应用程序提供的 &lt;code&gt;User&lt;/code&gt; 类以为引擎中的文章和评论提供所有权。</target>
        </trans-unit>
        <trans-unit id="b89a3557ce5e44502a24701aaac783261ba1ba5b" translate="yes" xml:space="preserve">
          <source>Using asset hosts</source>
          <target state="translated">使用资产主机</target>
        </trans-unit>
        <trans-unit id="38fdabe951d39e3cfb212c670d738ad00e89765b" translate="yes" xml:space="preserve">
          <source>Using both &lt;code&gt;after_create_commit&lt;/code&gt; and &lt;code&gt;after_update_commit&lt;/code&gt; in the same model will only allow the last callback defined to take effect, and will override all others.</source>
          <target state="translated">在同一模型中同时使用 &lt;code&gt;after_create_commit&lt;/code&gt; 和 &lt;code&gt;after_update_commit&lt;/code&gt; 将仅允许定义的最后一个回调生效，并将覆盖所有其他回调。</target>
        </trans-unit>
        <trans-unit id="ec25ccb18505ba836bfd208492088b6084d46bb4" translate="yes" xml:space="preserve">
          <source>Using comments:</source>
          <target state="translated">使用评论;</target>
        </trans-unit>
        <trans-unit id="b2aa95366043b6b8a9992fb7e236707a6bc71519" translate="yes" xml:space="preserve">
          <source>Using conditionals</source>
          <target state="translated">使用条件</target>
        </trans-unit>
        <trans-unit id="936c3379c38ee34f5f9e2764536948cc6b3c552c" translate="yes" xml:space="preserve">
          <source>Using either of these alternate methods incurs a performance hit, as the fixtured data must be fully traversed in the database to create the fixture hash and/or instance variables. This is expensive for large sets of fixtured data.</source>
          <target state="translated">使用这些替代方法中的任何一种都会导致性能下降,因为必须在数据库中完全遍历固定数据以创建固定哈希和/或实例变量。这对于大型固定数据集来说是很昂贵的。</target>
        </trans-unit>
        <trans-unit id="fde3600b3d594ce47576d05a6f75575f36787c1b" translate="yes" xml:space="preserve">
          <source>Using form_for and form_tag</source>
          <target state="translated">使用form_for和form_tag</target>
        </trans-unit>
        <trans-unit id="67cee99a82e7ec274245195ecfd79922dab76347" translate="yes" xml:space="preserve">
          <source>Using generators will save you a large amount of time by writing &lt;strong&gt;boilerplate code&lt;/strong&gt;, code that is necessary for the app to work.</source>
          <target state="translated">使用生成器将通过编写&lt;strong&gt;样板代码&lt;/strong&gt;（应用程序正常工作所需的代码）为您节省大量时间。</target>
        </trans-unit>
        <trans-unit id="1959ce923ef24486e6019618b44e946a5e0db1fc" translate="yes" xml:space="preserve">
          <source>Using manual connection switching</source>
          <target state="translated">使用手动连接切换</target>
        </trans-unit>
        <trans-unit id="b4705df440ea955459ce1f4ba6887c30baa8818a" translate="yes" xml:space="preserve">
          <source>Using parameterized mailers, this can be rewritten as:</source>
          <target state="translated">使用参数化的邮件,可以重写为:。</target>
        </trans-unit>
        <trans-unit id="c05921aba904fe76e5dcac8531640232c94f2782" translate="yes" xml:space="preserve">
          <source>Using partials to clean up duplication in views</source>
          <target state="translated">使用partials来清理视图中的重复内容。</target>
        </trans-unit>
        <trans-unit id="b5a312d20d9fd624f811d93a48484f327e47227a" translate="yes" xml:space="preserve">
          <source>Using polymorphic associations in combination with single table inheritance (STI) is a little tricky. In order for the associations to work as expected, ensure that you store the base model for the STI models in the type column of the polymorphic association. To continue with the asset example above, suppose there are guest posts and member posts that use the posts table for STI. In this case, there must be a &lt;code&gt;type&lt;/code&gt; column in the posts table.</source>
          <target state="translated">将多态关联与单表继承（STI）结合使用会有些棘手。为了使关联按预期工作，请确保将STI模型的基础模型存储在多态关联的type列中。继续上面的资产示例，假设有客人帖子和会员帖子使用STI的posts表。在这种情况下，posts表中必须有一个 &lt;code&gt;type&lt;/code&gt; 列。</target>
        </trans-unit>
        <trans-unit id="07dd432b234fcf64098360f5f1027190f778714e" translate="yes" xml:space="preserve">
          <source>Using sub templates</source>
          <target state="translated">使用子模板</target>
        </trans-unit>
        <trans-unit id="0e312f8c45b096c27e26464507b9c200fa033fc0" translate="yes" xml:space="preserve">
          <source>Using sub templates allows you to sidestep tedious replication and extract common display structures in shared templates. The classic example is the use of a header and footer (even though the Action Pack-way would be to use &lt;a href=&quot;layouts&quot;&gt;Layouts&lt;/a&gt;):</source>
          <target state="translated">使用子模板使您可以避免繁琐的复制并在共享模板中提取常见的显示结构。经典的示例是使用页眉和页脚（即使Action Pack方式将使用&lt;a href=&quot;layouts&quot;&gt;Layouts&lt;/a&gt;）：</target>
        </trans-unit>
        <trans-unit id="60763bcda71485e926368984197adec3bcb5671c" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;--skip-sprockets&lt;/code&gt; option will prevent Rails from adding them to your &lt;code&gt;Gemfile&lt;/code&gt;, so if you later want to enable the asset pipeline you will have to add those gems to your &lt;code&gt;Gemfile&lt;/code&gt;. Also, creating an application with the &lt;code&gt;--skip-sprockets&lt;/code&gt; option will generate a slightly different &lt;code&gt;config/application.rb&lt;/code&gt; file, with a require statement for the sprockets railtie that is commented-out. You will have to remove the comment operator on that line to later enable the asset pipeline:</source>
          <target state="translated">使用 &lt;code&gt;--skip-sprockets&lt;/code&gt; 选项将阻止Rails将它们添加到 &lt;code&gt;Gemfile&lt;/code&gt; 中，因此，如果以后要启用资产管道，则必须将这些gems添加到 &lt;code&gt;Gemfile&lt;/code&gt; 中。同样，使用 &lt;code&gt;--skip-sprockets&lt;/code&gt; 选项创建应用程序将生成稍有不同的 &lt;code&gt;config/application.rb&lt;/code&gt; 文件，并带有已注释掉的链轮railtie的require语句。您将必须删除该行上的注释运算符，以稍后启用资产管道：</target>
        </trans-unit>
        <trans-unit id="539de5431aa809d46158cd02e68c2fea25c85a0d" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;:debug&lt;/code&gt; level will have a greater performance penalty than &lt;code&gt;:fatal&lt;/code&gt;, as a far greater number of strings are being evaluated and written to the log output (e.g. disk).</source>
          <target state="translated">使用 &lt;code&gt;:debug&lt;/code&gt; 级别将比 &lt;code&gt;:fatal&lt;/code&gt; 带来更大的性能损失，因为正在评估并写入日志输出（例如磁盘）的字符串数量更多。</target>
        </trans-unit>
        <trans-unit id="c681c8a6c956ed1f97555ed0b5212cc737b04d65" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;:file&lt;/code&gt; option in combination with users input can lead to security problems since an attacker could use this action to access security sensitive files in your file system.</source>
          <target state="translated">将 &lt;code&gt;:file&lt;/code&gt; 选项与用户输入结合使用会导致安全问题，因为攻击者可以使用此操作来访问文件系统中的安全敏感文件。</target>
        </trans-unit>
        <trans-unit id="8cf19fe34e1459832fe27f9bc55093009a5fa87a" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;change&lt;/code&gt; Method</source>
          <target state="translated">使用 &lt;code&gt;change&lt;/code&gt; 方法</target>
        </trans-unit>
        <trans-unit id="872a402aa33bee5bd17f24ca5d6bb2fce87a2e8b" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;config/database.yml&lt;/code&gt; file you can specify all the information needed to access your database:</source>
          <target state="translated">使用 &lt;code&gt;config/database.yml&lt;/code&gt; 文件，您可以指定访问数据库所需的所有信息：</target>
        </trans-unit>
        <trans-unit id="bbd3e9cdb1250e1a2706f1206ab90caace876603" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;content_for&lt;/code&gt; Method</source>
          <target state="translated">使用 &lt;code&gt;content_for&lt;/code&gt; 方法</target>
        </trans-unit>
        <trans-unit id="9beb91e4609e1f813b6cb91e9a78e3cf8b7b4398" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;find&lt;/code&gt; method, you can retrieve the object corresponding to the specified &lt;em&gt;primary key&lt;/em&gt; that matches any supplied options. For example:</source>
          <target state="translated">使用 &lt;code&gt;find&lt;/code&gt; 方法，您可以检索与指定的&lt;em&gt;主键&lt;/em&gt;相对应的对象，该&lt;em&gt;主键&lt;/em&gt;与任何提供的选项匹配。例如：</target>
        </trans-unit>
        <trans-unit id="cabc83e0fd6211dce17a0f662cb287686f600b58" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;new&lt;/code&gt; method, an object can be instantiated without being saved:</source>
          <target state="translated">使用 &lt;code&gt;new&lt;/code&gt; 方法，可以实例化对象而无需保存：</target>
        </trans-unit>
        <trans-unit id="d4dd6e0bbbd401894d9d01d0e95488479b17ed53" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;up&lt;/code&gt;/&lt;code&gt;down&lt;/code&gt; Methods</source>
          <target state="translated">使用 &lt;code&gt;up&lt;/code&gt; / &lt;code&gt;down&lt;/code&gt; 方法</target>
        </trans-unit>
        <trans-unit id="b7279b8cb41471ed203f579283e7fcd454b6a751" translate="yes" xml:space="preserve">
          <source>Using the Cache Middleware</source>
          <target state="translated">使用高速缓存中间件</target>
        </trans-unit>
        <trans-unit id="276a3ddb2fa39f74d0fc4919b4e5eff212e38d4f" translate="yes" xml:space="preserve">
          <source>Using the asset pipeline:</source>
          <target state="translated">使用资产管道。</target>
        </trans-unit>
        <trans-unit id="c661bcf5534ac03e7b7817b9e9ba77c83029f6d1" translate="yes" xml:space="preserve">
          <source>Using the asynchronous queue from a Rake task (for example, to send an email using &lt;code&gt;.deliver_later&lt;/code&gt;) will generally not work because Rake will likely end, causing the in-process thread pool to be deleted, before any/all of the &lt;code&gt;.deliver_later&lt;/code&gt; emails are processed. To avoid this problem, use &lt;code&gt;.deliver_now&lt;/code&gt; or run a persistent queue in development.</source>
          <target state="translated">使用Rake任务中的异步队列（例如，使用 &lt;code&gt;.deliver_later&lt;/code&gt; 发送电子邮件）通常不起作用，因为Rake可能会结束，导致进程内线程池在任何/所有 &lt;code&gt;.deliver_later&lt;/code&gt; 电子邮件之前被删除。被处理。为避免此问题，请在开发中使用 &lt;code&gt;.deliver_now&lt;/code&gt; 或运行持久队列。</target>
        </trans-unit>
        <trans-unit id="df43169ba187647b62e9dc8b1907f06856294a51" translate="yes" xml:space="preserve">
          <source>Using the default deprecator:</source>
          <target state="translated">使用默认的deprecator。</target>
        </trans-unit>
        <trans-unit id="17a5cb03e1a7a9f2ced51100769bcb259634ec7c" translate="yes" xml:space="preserve">
          <source>Using the multiline modifier will raise an &lt;code&gt;ArgumentError&lt;/code&gt;. Encoding regular expression modifiers are silently ignored. The match will always use the default encoding or ASCII.</source>
          <target state="translated">使用多行修饰符将引发 &lt;code&gt;ArgumentError&lt;/code&gt; 。编码正则表达式修饰符会被静默忽略。匹配将始终使用默认编码或ASCII。</target>
        </trans-unit>
        <trans-unit id="397250e72fded40099b8630808f7d9faa2bed5e3" translate="yes" xml:space="preserve">
          <source>Using the npm package:</source>
          <target state="translated">使用npm包。</target>
        </trans-unit>
        <trans-unit id="be4ff635aaef9c488d572c7ea61e96e4288359d7" translate="yes" xml:space="preserve">
          <source>Using the route above, the URL &amp;ldquo;localhost:3000/articles/2005/11/06&amp;rdquo; maps to</source>
          <target state="translated">使用以上路由，URL&amp;ldquo; localhost：3000 / articles / 2005/11/06&amp;rdquo;映射到</target>
        </trans-unit>
        <trans-unit id="492dfec3cea453f778c8c9a230f1aaf52dac64db" translate="yes" xml:space="preserve">
          <source>Using this helper, &lt;code&gt;last_modified&lt;/code&gt; header is set to &lt;code&gt;Time.new(2011, 1, 1).utc&lt;/code&gt; and &lt;code&gt;expires&lt;/code&gt; header is set to a 100 years.</source>
          <target state="translated">使用此帮助程序，将 &lt;code&gt;last_modified&lt;/code&gt; 标头设置为 &lt;code&gt;Time.new(2011, 1, 1).utc&lt;/code&gt; ，将 &lt;code&gt;expires&lt;/code&gt; 标头设置为100年。</target>
        </trans-unit>
        <trans-unit id="afbd307f83503bca84be93989a914c1268e92c33" translate="yes" xml:space="preserve">
          <source>Using this method inside a &lt;code&gt;form_for&lt;/code&gt; block will set the enclosing form's encoding to &lt;code&gt;multipart/form-data&lt;/code&gt;.</source>
          <target state="translated">在 &lt;code&gt;form_for&lt;/code&gt; 块中使用此方法会将封闭表单的编码设置为 &lt;code&gt;multipart/form-data&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7bc913f59c0de6cf5a0c520abd2281d62e7bf235" translate="yes" xml:space="preserve">
          <source>Using this validation method in conjunction with &lt;a href=&quot;../persistence#method-i-save&quot;&gt;ActiveRecord::Base#save&lt;/a&gt; does not guarantee the absence of duplicate record insertions, because uniqueness checks on the application level are inherently prone to race conditions. For example, suppose that two users try to post a Comment at the same time, and a Comment's title must be unique. At the database-level, the actions performed by these users could be interleaved in the following manner:</source>
          <target state="translated">将此验证方法与&lt;a href=&quot;../persistence#method-i-save&quot;&gt;ActiveRecord :: Base＃save&lt;/a&gt;结合使用不能保证没有重复的记录插入，因为在应用程序级别进行的唯一性检查本质上容易出现竞争状况。例如，假设有两个用户尝试同时发布一个Comment，并且Comment的标题必须唯一。在数据库级别，可以用以下方式交错这些用户执行的操作：</target>
        </trans-unit>
        <trans-unit id="c47046323f3eb153fc07f6281c631e1e7d5568ae" translate="yes" xml:space="preserve">
          <source>Using this, the &lt;code&gt;:id&lt;/code&gt; parameter here will default to 'home'.</source>
          <target state="translated">使用它，这里的 &lt;code&gt;:id&lt;/code&gt; 参数将默认为'home'。</target>
        </trans-unit>
        <trans-unit id="18d5303ebafaf29b879154d4cc9b2944f48e8e24" translate="yes" xml:space="preserve">
          <source>Usually a web application includes access control. The user enters their login credentials and the web application tries to find the matching record in the users table. The application grants access when it finds a record. However, an attacker may possibly bypass this check with SQL injection. The following shows a typical database query in Rails to find the first record in the users table which matches the login credentials parameters supplied by the user.</source>
          <target state="translated">通常一个网络应用程序包括访问控制。用户输入他们的登录凭证,网络应用程序就会尝试在用户表中找到匹配的记录。当找到一条记录时,应用程序就会授予访问权限。然而,攻击者可能会通过SQL注入绕过这个检查。下面显示了一个典型的Rails数据库查询,以便在用户表中找到与用户提供的登录凭证参数相匹配的第一条记录。</target>
        </trans-unit>
        <trans-unit id="99af370507e8c2db0ea6423f554ac847847e6357" translate="yes" xml:space="preserve">
          <source>Usually key value pairs are handled something like this:</source>
          <target state="translated">通常键值对是这样处理的。</target>
        </trans-unit>
        <trans-unit id="21966f865db52398da0ed7ccc010e283a939d5a6" translate="yes" xml:space="preserve">
          <source>Usually, specifying the engine inside the &lt;code&gt;Gemfile&lt;/code&gt; would be done by specifying it as a normal, everyday gem.</source>
          <target state="translated">通常，通过将 &lt;code&gt;Gemfile&lt;/code&gt; 指定为普通的日常gem来指定Gemfile中的引擎。</target>
        </trans-unit>
        <trans-unit id="acb582f88e04130b94ebbdffa8786b76613ce258" translate="yes" xml:space="preserve">
          <source>Util::h</source>
          <target state="translated">Util::h</target>
        </trans-unit>
        <trans-unit id="66c8b0c5e8f978049160f5f96bcae23108de7879" translate="yes" xml:space="preserve">
          <source>Util::html_escape</source>
          <target state="translated">Util::html_escape</target>
        </trans-unit>
        <trans-unit id="99698cc7b024d8229a6c8aafc9eba7baf6683dc3" translate="yes" xml:space="preserve">
          <source>Util::html_escape_once</source>
          <target state="translated">Util::html_escape_once</target>
        </trans-unit>
        <trans-unit id="2aaaf7d878c8ebc2dcce832444b5b4ebd53d1c92" translate="yes" xml:space="preserve">
          <source>Util::json_escape</source>
          <target state="translated">Util::json_escape</target>
        </trans-unit>
        <trans-unit id="c01f409cc1bd8b6f90b3894727727d645de3b553" translate="yes" xml:space="preserve">
          <source>VALID_ON_OPTIONS</source>
          <target state="translated">VALID_ON_OPTIONS</target>
        </trans-unit>
        <trans-unit id="124e3f293f5e7b74a9c64b32a62b41143cbe7216" translate="yes" xml:space="preserve">
          <source>VALID_UNSCOPING_VALUES</source>
          <target state="translated">VALID_UNSCOPING_VALUES</target>
        </trans-unit>
        <trans-unit id="41757882d3f1b0c8a89363a82826b5700e5594cb" translate="yes" xml:space="preserve">
          <source>VALUE_LIMIT_VIOLATION</source>
          <target state="translated">VALUE_LIMIT_VIOLATION</target>
        </trans-unit>
        <trans-unit id="56cad5221326233028bedbfd58a31074884c516e" translate="yes" xml:space="preserve">
          <source>VALUE_METHODS</source>
          <target state="translated">VALUE_METHODS</target>
        </trans-unit>
        <trans-unit id="7e41e0686706967ebd2b2906728d198ef627a005" translate="yes" xml:space="preserve">
          <source>Valgrind</source>
          <target state="translated">Valgrind</target>
        </trans-unit>
        <trans-unit id="36a991d3b114b907b1646c8dffacb955f5e22424" translate="yes" xml:space="preserve">
          <source>Valid Options:</source>
          <target state="translated">有效选项:</target>
        </trans-unit>
        <trans-unit id="8bca504ff63903bf18d85f84c0ce122920623ed3" translate="yes" xml:space="preserve">
          <source>Valid isolation levels are:</source>
          <target state="translated">有效的隔离等级为:</target>
        </trans-unit>
        <trans-unit id="37fce7b7492a6bef44ee3324a04c2384aa436c32" translate="yes" xml:space="preserve">
          <source>Valid options are &lt;code&gt;:only&lt;/code&gt;, &lt;code&gt;:except&lt;/code&gt;, &lt;code&gt;:methods&lt;/code&gt; and &lt;code&gt;:include&lt;/code&gt;. The following are all valid examples:</source>
          <target state="translated">有效选项包括 &lt;code&gt;:only&lt;/code&gt; ， &lt;code&gt;:except&lt;/code&gt; ， &lt;code&gt;:methods&lt;/code&gt; 和 &lt;code&gt;:include&lt;/code&gt; 。以下是所有有效的示例：</target>
        </trans-unit>
        <trans-unit id="36194dddeba7fe68aa399e3341203b27b9a2552d" translate="yes" xml:space="preserve">
          <source>Valid unverified request handling methods are:</source>
          <target state="translated">有效的未经验证的请求处理方法是:</target>
        </trans-unit>
        <trans-unit id="54ab4d2b0820b79cad074569faeb8edd50fa89ef" translate="yes" xml:space="preserve">
          <source>Valid values are:</source>
          <target state="translated">有效值为:</target>
        </trans-unit>
        <trans-unit id="5a2623cdc63e643d609715aee708f085aa5f1538" translate="yes" xml:space="preserve">
          <source>Validate models before they get persisted to the database.</source>
          <target state="translated">在将模型持久化到数据库之前,对模型进行验证。</target>
        </trans-unit>
        <trans-unit id="77961bc221c22a821a30dc0717177eafe7ea17da" translate="yes" xml:space="preserve">
          <source>Validates all keys in a hash match &lt;code&gt;*valid_keys&lt;/code&gt;, raising &lt;code&gt;ArgumentError&lt;/code&gt; on a mismatch.</source>
          <target state="translated">验证哈希匹配 &lt;code&gt;*valid_keys&lt;/code&gt; 中的所有键，如果不匹配，则引发 &lt;code&gt;ArgumentError&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bf58f85ad0b76e58cebfb24a1d16255fb2ed95db" translate="yes" xml:space="preserve">
          <source>Validates each attribute against a block.</source>
          <target state="translated">根据块验证每个属性。</target>
        </trans-unit>
        <trans-unit id="d9f2c6255dcc91e5f805b40b204c9fe2c6b9b192" translate="yes" xml:space="preserve">
          <source>Validates that the specified attributes are blank (as defined by &lt;a href=&quot;../../object#method-i-blank-3F&quot;&gt;Object#blank?&lt;/a&gt;). Happens by default on save.</source>
          <target state="translated">验证指定的属性为空（由&lt;a href=&quot;../../object#method-i-blank-3F&quot;&gt;Object＃blank？&lt;/a&gt;定义）。默认情况下在保存时发生。</target>
        </trans-unit>
        <trans-unit id="597c81e76b7981ffaf708754e1d17381204762d8" translate="yes" xml:space="preserve">
          <source>Validates that the specified attributes are not blank (as defined by &lt;a href=&quot;../../object#method-i-blank-3F&quot;&gt;Object#blank?&lt;/a&gt;), and, if the attribute is an association, that the associated object is not marked for destruction. Happens by default on save.</source>
          <target state="translated">验证指定的属性不是空白（由&lt;a href=&quot;../../object#method-i-blank-3F&quot;&gt;Object＃blank？&lt;/a&gt;定义），并且，如果该属性是关联，则验证该关联对象未标记为销毁。默认情况下在保存时发生。</target>
        </trans-unit>
        <trans-unit id="d8ad38c92631e6bc9eb69a49c2010ebb3ae07552" translate="yes" xml:space="preserve">
          <source>Validates that the specified attributes are not blank (as defined by &lt;a href=&quot;../../object#method-i-blank-3F&quot;&gt;Object#blank?&lt;/a&gt;). Happens by default on save.</source>
          <target state="translated">验证指定的属性不是空白（由&lt;a href=&quot;../../object#method-i-blank-3F&quot;&gt;Object＃blank？&lt;/a&gt;定义）。默认情况下在保存时发生。</target>
        </trans-unit>
        <trans-unit id="58337ba49a75d8bf9dffe21cf2b9fa1eb601e1fb" translate="yes" xml:space="preserve">
          <source>Validates that the specified attributes are not present (as defined by &lt;a href=&quot;../../object#method-i-present-3F&quot;&gt;Object#present?&lt;/a&gt;). If the attribute is an association, the associated object is considered absent if it was marked for destruction.</source>
          <target state="translated">验证指定的属性不存在（由&lt;a href=&quot;../../object#method-i-present-3F&quot;&gt;Object＃present？&lt;/a&gt;定义）。如果该属性是一个关联，则将关联对象标记为要销毁，则认为该关联对象不存在。</target>
        </trans-unit>
        <trans-unit id="fab315ea04be9de812b12df8a5daa4272206f490" translate="yes" xml:space="preserve">
          <source>Validates that the specified attributes match the length restrictions supplied. If the attribute is an association, records that are marked for destruction are not counted.</source>
          <target state="translated">验证指定的属性是否符合提供的长度限制。如果属性是关联,则不计算标记为销毁的记录。</target>
        </trans-unit>
        <trans-unit id="6f196972086e067a296aba6bf58ca3a20a29b64d" translate="yes" xml:space="preserve">
          <source>Validates that the specified attributes match the length restrictions supplied. Only one constraint option can be used at a time apart from &lt;code&gt;:minimum&lt;/code&gt; and &lt;code&gt;:maximum&lt;/code&gt; that can be combined together:</source>
          <target state="translated">验证指定的属性与提供的长度限制匹配。除了 &lt;code&gt;:minimum&lt;/code&gt; 和 &lt;code&gt;:maximum&lt;/code&gt; 可以组合在一起之外，一次只能使用一个约束选项：</target>
        </trans-unit>
        <trans-unit id="19fefe051acdcb3dd097341147e99eacde4f0190" translate="yes" xml:space="preserve">
          <source>Validates that the value of the specified attribute is not in a particular enumerable object.</source>
          <target state="translated">验证指定属性的值不在一个特定的可枚举对象中。</target>
        </trans-unit>
        <trans-unit id="fef402f9089ade40be43e111761a19c005fe1d26" translate="yes" xml:space="preserve">
          <source>Validates the constraint named &lt;code&gt;constraint_name&lt;/code&gt; on &lt;code&gt;accounts&lt;/code&gt;.</source>
          <target state="translated">在 &lt;code&gt;accounts&lt;/code&gt; 上验证名为 &lt;code&gt;constraint_name&lt;/code&gt; 的约束。</target>
        </trans-unit>
        <trans-unit id="07bd560f237c6024bb5a357bcd5d4674eb2a02da" translate="yes" xml:space="preserve">
          <source>Validates the foreign key named &lt;code&gt;special_fk_name&lt;/code&gt; on the &lt;code&gt;accounts&lt;/code&gt; table.</source>
          <target state="translated">验证 &lt;code&gt;accounts&lt;/code&gt; 表上名为 &lt;code&gt;special_fk_name&lt;/code&gt; 的外键。</target>
        </trans-unit>
        <trans-unit id="2dc422b85df861d9b7182e0266ae03a042a5b747" translate="yes" xml:space="preserve">
          <source>Validates the foreign key on &lt;code&gt;accounts.branch_id&lt;/code&gt;.</source>
          <target state="translated">验证外键 &lt;code&gt;accounts.branch_id&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="74c3fbc3672c59bbe26b1ce09c8d9fb0652ae747" translate="yes" xml:space="preserve">
          <source>Validates the foreign key on &lt;code&gt;accounts.owner_id&lt;/code&gt;.</source>
          <target state="translated">验证外键 &lt;code&gt;accounts.owner_id&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="83fb9f92c7613a920724477bd086c9fb9fd91187" translate="yes" xml:space="preserve">
          <source>Validates the given constraint.</source>
          <target state="translated">验证给定的约束条件。</target>
        </trans-unit>
        <trans-unit id="6f0b0e25b51c4688754d80e76696b9d4f99a91dd" translate="yes" xml:space="preserve">
          <source>Validates the given foreign key.</source>
          <target state="translated">验证给定的外键。</target>
        </trans-unit>
        <trans-unit id="5682b5cd3be009b89d8376b3adf0ae573a67cb6c" translate="yes" xml:space="preserve">
          <source>Validates whether the associated object or objects are all valid. Works with any kind of association.</source>
          <target state="translated">验证关联对象是否全部有效。适用于任何类型的关联。</target>
        </trans-unit>
        <trans-unit id="1e8c728a071cb7ecdda7e9c17738e2fe460b9133" translate="yes" xml:space="preserve">
          <source>Validates whether the value of the specified attribute is available in a particular enumerable object.</source>
          <target state="translated">验证指定属性的值在特定的可枚举对象中是否可用。</target>
        </trans-unit>
        <trans-unit id="5ece8a5945f594e4b8856ead7945504b74a0d209" translate="yes" xml:space="preserve">
          <source>Validates whether the value of the specified attribute is numeric by trying to convert it to a float with &lt;a href=&quot;../../kernel&quot;&gt;Kernel&lt;/a&gt;.Float (if &lt;code&gt;only_integer&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;) or applying it to the regular expression &lt;code&gt;/\A[+\-]?\d+\z/&lt;/code&gt; (if &lt;code&gt;only_integer&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt;).</source>
          <target state="translated">验证指定的属性值是否是通过尝试将其转换为与浮子数字&lt;a href=&quot;../../kernel&quot;&gt;内核&lt;/a&gt; .Float（如果 &lt;code&gt;only_integer&lt;/code&gt; 是 &lt;code&gt;false&lt;/code&gt; ）或将其施加到正则表达式 &lt;code&gt;/\A[+\-]?\d+\z/&lt;/code&gt; （如果 &lt;code&gt;only_integer&lt;/code&gt; 设置为 &lt;code&gt;true&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="699caf7ddc934eba8a82503bdefa24d80d21c69f" translate="yes" xml:space="preserve">
          <source>Validates whether the value of the specified attribute is of the correct form, going by the regular expression provided. You can require that the attribute matches the regular expression:</source>
          <target state="translated">根据提供的正则表达式,验证指定属性的值的形式是否正确。你可以要求属性符合正则表达式。</target>
        </trans-unit>
        <trans-unit id="b370e9c0767f915d3fb8cc810a7fdfa5b2ff8dd8" translate="yes" xml:space="preserve">
          <source>Validates whether the value of the specified attributes are unique across the system. Useful for making sure that only one user can be named &amp;ldquo;davidhh&amp;rdquo;.</source>
          <target state="translated">验证指定属性的值在整个系统中是否唯一。对于确保仅将一个用户命名为&amp;ldquo; davidhh&amp;rdquo;很有用。</target>
        </trans-unit>
        <trans-unit id="7501e942215e0ecb7ac558f3ab1f18da4ef7152f" translate="yes" xml:space="preserve">
          <source>Validating the presence of a parent model</source>
          <target state="translated">验证父模型的存在</target>
        </trans-unit>
        <trans-unit id="dd74d182c641e4c78502d863b44d0aeff1575e54" translate="yes" xml:space="preserve">
          <source>Validation</source>
          <target state="translated">Validation</target>
        </trans-unit>
        <trans-unit id="dd439173462c91b634e6ec99928abb177fcbea7d" translate="yes" xml:space="preserve">
          <source>Validation Helpers</source>
          <target state="translated">验证助手</target>
        </trans-unit>
        <trans-unit id="4ff28f38b3d0b2dc3f5561d8f3e0ad431e2de4f0" translate="yes" xml:space="preserve">
          <source>Validation is a very important issue to consider when persisting to the database, so the methods &lt;code&gt;save&lt;/code&gt; and &lt;code&gt;update&lt;/code&gt; take it into account when running: they return &lt;code&gt;false&lt;/code&gt; when validation fails and they don't actually perform any operations on the database. All of these have a bang counterpart (that is, &lt;code&gt;save!&lt;/code&gt; and &lt;code&gt;update!&lt;/code&gt;), which are stricter in that they raise the exception &lt;code&gt;ActiveRecord::RecordInvalid&lt;/code&gt; if validation fails. A quick example to illustrate:</source>
          <target state="translated">验证是持久化到数据库时要考虑的一个非常重要的问题，因此 &lt;code&gt;save&lt;/code&gt; 和 &lt;code&gt;update&lt;/code&gt; 方法在运行时会加以考虑：验证失败时它们返回 &lt;code&gt;false&lt;/code&gt; ，并且实际上不对数据库执行任何操作。所有这些都有爆炸性的对应项（即 &lt;code&gt;save!&lt;/code&gt; 和 &lt;code&gt;update!&lt;/code&gt; ），它们的严格性在于，如果验证失败，它们将引发异常 &lt;code&gt;ActiveRecord::RecordInvalid&lt;/code&gt; 。一个简单的例子来说明：</target>
        </trans-unit>
        <trans-unit id="6bb4276350a5281c4528a2929cc5c42cda16c9d2" translate="yes" xml:space="preserve">
          <source>Validation is skipped.</source>
          <target state="translated">跳过验证。</target>
        </trans-unit>
        <trans-unit id="6c259e54dcc7188e7cfe33403eca78cda53017fc" translate="yes" xml:space="preserve">
          <source>Validations</source>
          <target state="translated">Validations</target>
        </trans-unit>
        <trans-unit id="b584cd9d0f7ec99ba0e510a491f7887d39a1bf91" translate="yes" xml:space="preserve">
          <source>Validations Overview</source>
          <target state="translated">验证概述</target>
        </trans-unit>
        <trans-unit id="ecba43f7828b96ab8176550032cc85559ef178f2" translate="yes" xml:space="preserve">
          <source>Validations are skipped.</source>
          <target state="translated">跳过验证。</target>
        </trans-unit>
        <trans-unit id="dd9a96ba7cfeb53963864af65f313a391314975b" translate="yes" xml:space="preserve">
          <source>Validations are used to ensure that only valid data is saved into your database. For example, it may be important to your application to ensure that every user provides a valid email address and mailing address. Model-level validations are the best way to ensure that only valid data is saved into your database. They are database agnostic, cannot be bypassed by end users, and are convenient to test and maintain. Rails makes them easy to use, provides built-in helpers for common needs, and allows you to create your own validation methods as well.</source>
          <target state="translated">验证用于确保只有有效的数据被保存到数据库中。例如,对您的应用程序来说,确保每个用户提供有效的电子邮件地址和邮寄地址可能很重要。模型级验证是确保只有有效数据被保存到数据库中的最佳方式。它们与数据库无关,不能被最终用户绕过,并且便于测试和维护。Rails使它们易于使用,为常见需求提供了内置的帮助程序,并允许您也创建自己的验证方法。</target>
        </trans-unit>
        <trans-unit id="3b97643974eaad9f57e2db4889d955de94f19663" translate="yes" xml:space="preserve">
          <source>Validations such as &lt;code&gt;validates :foreign_key, uniqueness: true&lt;/code&gt; are one way in which models can enforce data integrity. The &lt;code&gt;:dependent&lt;/code&gt; option on associations allows models to automatically destroy child objects when the parent is destroyed. Like anything which operates at the application level, these cannot guarantee referential integrity and so some people augment them with &lt;a href=&quot;#foreign-keys&quot;&gt;foreign key constraints&lt;/a&gt; in the database.</source>
          <target state="translated">诸如 &lt;code&gt;validates :foreign_key, uniqueness: true&lt;/code&gt; 类的验证是模型可以强制数据完整性的一种方式。关联的 &lt;code&gt;:dependent&lt;/code&gt; 选项允许模型在销毁父对象时自动销毁子对象。像在应用程序级别上运行的任何事物一样，它们不能保证引用完整性，因此有些人在数据库中使用&lt;a href=&quot;#foreign-keys&quot;&gt;外键约束对其&lt;/a&gt;进行了扩充。</target>
        </trans-unit>
        <trans-unit id="8fabab6b6255e4f24fc0b9f631b13f8e74b29655" translate="yes" xml:space="preserve">
          <source>Validations with no &lt;code&gt;:on&lt;/code&gt; option will run no matter the context. Validations with some &lt;code&gt;:on&lt;/code&gt; option will only run in the specified context.</source>
          <target state="translated">没有 &lt;code&gt;:on&lt;/code&gt; 选项的验证将在任何情况下运行。使用 &lt;code&gt;:on&lt;/code&gt; 选项的验证仅在指定的上下文中运行。</target>
        </trans-unit>
        <trans-unit id="dbb55dfd7a38fdeed72819a4da5faf2f18c1aaf7" translate="yes" xml:space="preserve">
          <source>Validations#save</source>
          <target state="translated">Validations#save</target>
        </trans-unit>
        <trans-unit id="321679676d428be91b1784978676eef3771f7768" translate="yes" xml:space="preserve">
          <source>Validations#save!</source>
          <target state="translated">Validations#save!</target>
        </trans-unit>
        <trans-unit id="5402be86d2ff660ed9b077198b43703fbfe125a7" translate="yes" xml:space="preserve">
          <source>Validations#valid?</source>
          <target state="translated">Validations#valid?</target>
        </trans-unit>
        <trans-unit id="f946bcd5c349a3edbf777f57f9b4002faa7d6c91" translate="yes" xml:space="preserve">
          <source>Validations#validate</source>
          <target state="translated">Validations#validate</target>
        </trans-unit>
        <trans-unit id="75014a552c0d1c2dbb3c4f2151a7de2692d405a9" translate="yes" xml:space="preserve">
          <source>Validations::ClassMethods</source>
          <target state="translated">Validations::ClassMethods</target>
        </trans-unit>
        <trans-unit id="8f96dc1128104318dc9a770000a2945360492cd7" translate="yes" xml:space="preserve">
          <source>Validations::ClassMethods#validates_absence_of</source>
          <target state="translated">Validations::ClassMethods#validates_absence_of</target>
        </trans-unit>
        <trans-unit id="946658c647c42982d56f860bd504252a039b3e28" translate="yes" xml:space="preserve">
          <source>Validations::ClassMethods#validates_associated</source>
          <target state="translated">Validations::ClassMethods#validates_associated</target>
        </trans-unit>
        <trans-unit id="753de92fd37c5587df62760389567b29a35fd747" translate="yes" xml:space="preserve">
          <source>Validations::ClassMethods#validates_length_of</source>
          <target state="translated">Validations::ClassMethods#validates_length_of</target>
        </trans-unit>
        <trans-unit id="5a60d080bccf06cb8e38e48b4d60927eab575bec" translate="yes" xml:space="preserve">
          <source>Validations::ClassMethods#validates_presence_of</source>
          <target state="translated">Validations::ClassMethods#validates_presence_of</target>
        </trans-unit>
        <trans-unit id="75e3dfa6bd563c2c2070196d9461c8e8064d710a" translate="yes" xml:space="preserve">
          <source>Validations::ClassMethods#validates_size_of</source>
          <target state="translated">Validations::ClassMethods#validates_size_of</target>
        </trans-unit>
        <trans-unit id="9ee0d964eb9ebdb6179f5e30086aae695cb3b452" translate="yes" xml:space="preserve">
          <source>Validations::ClassMethods#validates_uniqueness_of</source>
          <target state="translated">Validations::ClassMethods#validates_uniqueness_of</target>
        </trans-unit>
        <trans-unit id="8dce170de238b1feda2ecd9674ea3ca0d068fbcb" translate="yes" xml:space="preserve">
          <source>Value</source>
          <target state="translated">Value</target>
        </trans-unit>
        <trans-unit id="c4f35f628041304ad157bcf70adb2ce05c395c52" translate="yes" xml:space="preserve">
          <source>Value objects are immutable and interchangeable objects that represent a given value, such as a Money object representing $5. Two Money objects both representing $5 should be equal (through methods such as &lt;code&gt;==&lt;/code&gt; and &lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt; from Comparable if ranking makes sense). This is unlike entity objects where equality is determined by identity. An entity class such as Customer can easily have two different objects that both have an address on Hyancintvej. Entity identity is determined by object or relational unique identifiers (such as primary keys). Normal &lt;a href=&quot;../base&quot;&gt;ActiveRecord::Base&lt;/a&gt; classes are entity objects.</source>
          <target state="translated">值对象是表示给定值的不可变和可互换的对象，例如表示$ 5的Money对象。两个均表示$ 5的Money对象应相等（如果排序有意义，则通过Comparable 等 &lt;code&gt;==&lt;/code&gt; 和 &lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt; 之类的方法）。这与实体对象由相等性确定的实体对象不同。诸如Customer之类的实体类可以轻松拥有两个不同的对象，两个对象都在Hyancintvej上有一个地址。实体身份由对象或关系唯一标识符（例如主键）确定。正常的&lt;a href=&quot;../base&quot;&gt;ActiveRecord :: Base&lt;/a&gt;类是实体对象。</target>
        </trans-unit>
        <trans-unit id="ddc800cac5089570f0e49b3fad0ca0a6b80632fa" translate="yes" xml:space="preserve">
          <source>Value objects can also be composed of multiple attributes, such as the case of Address. The order of the mappings will determine the order of the parameters.</source>
          <target state="translated">值对象也可以由多个属性组成,例如地址的情况。映射的顺序将决定参数的顺序。</target>
        </trans-unit>
        <trans-unit id="7a4ebd7561159ce4df90c97b704841724fd68e78" translate="yes" xml:space="preserve">
          <source>ValueTooLong</source>
          <target state="translated">ValueTooLong</target>
        </trans-unit>
        <trans-unit id="f2a318c03d40ec772b81f6a126f7ad3a1b89a883" translate="yes" xml:space="preserve">
          <source>Values from forms can be at the top level of the &lt;code&gt;params&lt;/code&gt; hash or nested in another hash. For example, in a standard &lt;code&gt;create&lt;/code&gt; action for a Person model, &lt;code&gt;params[:person]&lt;/code&gt; would usually be a hash of all the attributes for the person to create. The &lt;code&gt;params&lt;/code&gt; hash can also contain arrays, arrays of hashes, and so on.</source>
          <target state="translated">表单中的值可以在 &lt;code&gt;params&lt;/code&gt; 哈希的顶层，也可以嵌套在另一个哈希中。例如，在用于Person模型的标准 &lt;code&gt;create&lt;/code&gt; 动作中， &lt;code&gt;params[:person]&lt;/code&gt; 通常是要创建的person的所有属性的哈希。该 &lt;code&gt;params&lt;/code&gt; 哈希也可以包含数组，散列的数组，等等。</target>
        </trans-unit>
        <trans-unit id="d374f127537e8c09cf17335c36cab4162f4ae45a" translate="yes" xml:space="preserve">
          <source>Values longer than 20 characters will be truncated. The value is truncated word by word.</source>
          <target state="translated">超过20个字符的数值将被截断。该值是逐字截断的。</target>
        </trans-unit>
        <trans-unit id="90d92e2ddc27f4ac06a3d48a1c2de0e4169277e3" translate="yes" xml:space="preserve">
          <source>Values set from user input will first be coerced into the appropriate ruby type. Coercion behavior is roughly mapped to Ruby's boolean semantics.</source>
          <target state="translated">从用户输入中设置的值将首先被胁迫成相应的ruby类型。胁迫行为大致映射到Ruby的布尔语义中。</target>
        </trans-unit>
        <trans-unit id="5700f937f14c9600df3c7814d8452af0ecb19e9a" translate="yes" xml:space="preserve">
          <source>Values set on &lt;a href=&quot;configuration#method-i-app_generators&quot;&gt;#app_generators&lt;/a&gt; will become defaults for application, unless application overwrites them.</source>
          <target state="translated">在&lt;a href=&quot;configuration#method-i-app_generators&quot;&gt;#app_generators上&lt;/a&gt;设置的值将成为应用程序的默认值，除非应用程序覆盖它们。</target>
        </trans-unit>
        <trans-unit id="5768d58066a6d1a4696ade8e571bb65592ec7e48" translate="yes" xml:space="preserve">
          <source>Values such as &lt;code&gt;[nil]&lt;/code&gt; or &lt;code&gt;[nil, nil, ...]&lt;/code&gt; in &lt;code&gt;params&lt;/code&gt; are replaced with &lt;code&gt;[]&lt;/code&gt; for security reasons by default. See &lt;a href=&quot;security#unsafe-query-generation&quot;&gt;Security Guide&lt;/a&gt; for more information.</source>
          <target state="translated">值，如 &lt;code&gt;[nil]&lt;/code&gt; 或 &lt;code&gt;[nil, nil, ...]&lt;/code&gt; 在 &lt;code&gt;params&lt;/code&gt; 被替换为 &lt;code&gt;[]&lt;/code&gt; 默认情况下为安全起见。有关更多信息，请参见&lt;a href=&quot;security#unsafe-query-generation&quot;&gt;安全指南&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="64adf9975415ea68a91f9f5189b34834e2c73e15" translate="yes" xml:space="preserve">
          <source>Variables defined in the methods of your mailer model are accessible as instance variables in their corresponding view.</source>
          <target state="translated">在您的邮件模型的方法中定义的变量可以在其对应的视图中作为实例变量访问。</target>
        </trans-unit>
        <trans-unit id="cc91b1ea2c16519ab22614ae2929960a271dbb5c" translate="yes" xml:space="preserve">
          <source>Variant</source>
          <target state="translated">Variant</target>
        </trans-unit>
        <trans-unit id="1ebbf6cb1febc84cef8d1fb90c1da885aade5345" translate="yes" xml:space="preserve">
          <source>Variant#blob</source>
          <target state="translated">Variant#blob</target>
        </trans-unit>
        <trans-unit id="cf05bca5d7de9abb50f30de3db937695f25a538f" translate="yes" xml:space="preserve">
          <source>Variant#image</source>
          <target state="translated">Variant#image</target>
        </trans-unit>
        <trans-unit id="fce54cf5ae3558137753bcbda6f23efc55eb191e" translate="yes" xml:space="preserve">
          <source>Variant#key</source>
          <target state="translated">Variant#key</target>
        </trans-unit>
        <trans-unit id="084c8a2a9307ef18d7ae74bf5f0687adeca17d2b" translate="yes" xml:space="preserve">
          <source>Variant#processed</source>
          <target state="translated">Variant#processed</target>
        </trans-unit>
        <trans-unit id="4cbaf3c82ca9401302a99cee620f5ce1bf5e8e8a" translate="yes" xml:space="preserve">
          <source>Variant#service_url</source>
          <target state="translated">Variant#service_url</target>
        </trans-unit>
        <trans-unit id="d31b880ee662f11985cdf16b0d2b01c3e0d41411" translate="yes" xml:space="preserve">
          <source>Variant#variation</source>
          <target state="translated">Variant#variation</target>
        </trans-unit>
        <trans-unit id="79c4cb1ba570d8e6857a0098f6e94e73b78af027" translate="yes" xml:space="preserve">
          <source>Variant::new</source>
          <target state="translated">Variant::new</target>
        </trans-unit>
        <trans-unit id="319e0e33c16d31af795a2f7010fa84d1a1ae9eaf" translate="yes" xml:space="preserve">
          <source>Variants also support common &lt;code&gt;any&lt;/code&gt;/&lt;code&gt;all&lt;/code&gt; block that formats have.</source>
          <target state="translated">变体还支持格式具有的通用 &lt;code&gt;any&lt;/code&gt; / &lt;code&gt;all&lt;/code&gt; 块。</target>
        </trans-unit>
        <trans-unit id="b4b6a806b5f82b5a5ba1da52f8681ee43c93b15e" translate="yes" xml:space="preserve">
          <source>Variants rely on &lt;a href=&quot;https://github.com/janko-m/image_processing&quot;&gt;ImageProcessing&lt;/a&gt; gem for the actual transformations of the file, so you must add &lt;code&gt;gem
&quot;image_processing&quot;&lt;/code&gt; to your Gemfile if you wish to use variants. By default, images will be processed with &lt;a href=&quot;http://imagemagick.org&quot;&gt;ImageMagick&lt;/a&gt; using the &lt;a href=&quot;https://github.com/minimagick/minimagick&quot;&gt;MiniMagick&lt;/a&gt; gem, but you can also switch to the &lt;a href=&quot;http://jcupitt.github.io/libvips/&quot;&gt;libvips&lt;/a&gt; processor operated by the &lt;a href=&quot;https://github.com/jcupitt/ruby-vips&quot;&gt;ruby-vips&lt;/a&gt; gem).</source>
          <target state="translated">变体依赖于&lt;a href=&quot;https://github.com/janko-m/image_processing&quot;&gt;ImageProcessing&lt;/a&gt; gem来进行文件的实际转换，因此，如果要使用变体，必须将 &lt;code&gt;gem &quot;image_processing&quot;&lt;/code&gt; image_processing &amp;rdquo;添加到Gemfile中。默认情况下，将使用&lt;a href=&quot;https://github.com/minimagick/minimagick&quot;&gt;MiniMagick&lt;/a&gt; gem 使用&lt;a href=&quot;http://imagemagick.org&quot;&gt;ImageMagick&lt;/a&gt;处理图像，但是您也可以切换到&lt;a href=&quot;https://github.com/jcupitt/ruby-vips&quot;&gt;ruby-vips&lt;/a&gt; gem 操作的&lt;a href=&quot;http://jcupitt.github.io/libvips/&quot;&gt;libvips&lt;/a&gt;处理器）。</target>
        </trans-unit>
        <trans-unit id="15920a45faf632f2fdca0b9eea26e92547dcc0bf" translate="yes" xml:space="preserve">
          <source>Variation</source>
          <target state="translated">Variation</target>
        </trans-unit>
        <trans-unit id="f3d61f4c40e7452799c23f7370a9ce6c92ce7b44" translate="yes" xml:space="preserve">
          <source>Variation#key</source>
          <target state="translated">Variation#key</target>
        </trans-unit>
        <trans-unit id="a91a28bd82444cf5c8a847df56619e97ea85840b" translate="yes" xml:space="preserve">
          <source>Variation#transform</source>
          <target state="translated">Variation#transform</target>
        </trans-unit>
        <trans-unit id="66ae462f9edbc1cbfddcd235446eaa4e3e9fc80b" translate="yes" xml:space="preserve">
          <source>Variation#transformations</source>
          <target state="translated">Variation#transformations</target>
        </trans-unit>
        <trans-unit id="d35b48eba444755e6ab87e30a92f75f7fca5bafb" translate="yes" xml:space="preserve">
          <source>Variation::decode</source>
          <target state="translated">Variation::decode</target>
        </trans-unit>
        <trans-unit id="5eb4c4f1ff125b29fa8bdf48dfda9c80cd8549df" translate="yes" xml:space="preserve">
          <source>Variation::encode</source>
          <target state="translated">Variation::encode</target>
        </trans-unit>
        <trans-unit id="a7da1060e72aae4fe0fd8caa64c5722a56d767e6" translate="yes" xml:space="preserve">
          <source>Variation::new</source>
          <target state="translated">Variation::new</target>
        </trans-unit>
        <trans-unit id="f47a7455a52d0d0ef326dd35d846c646e3161bff" translate="yes" xml:space="preserve">
          <source>Variation::wrap</source>
          <target state="translated">Variation::wrap</target>
        </trans-unit>
        <trans-unit id="8ef6907701a65d0b41b004c8fe706912caa67ab8" translate="yes" xml:space="preserve">
          <source>Variations of &lt;a href=&quot;findermethods#method-i-find&quot;&gt;find&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;findermethods#method-i-find&quot;&gt;发现的&lt;/a&gt;变化</target>
        </trans-unit>
        <trans-unit id="a458cb9b2bdec174612eb212cdc8c0c99abcef51" translate="yes" xml:space="preserve">
          <source>Verbose Query Logs</source>
          <target state="translated">冗长的查询日志</target>
        </trans-unit>
        <trans-unit id="a03899f8ad47fb0c762591858b229265bba36533" translate="yes" xml:space="preserve">
          <source>Verbose query logs are enabled by default in the development environment logs after Rails 5.2.</source>
          <target state="translated">Rails 5.2之后的开发环境日志中默认启用了Verbose查询日志。</target>
        </trans-unit>
        <trans-unit id="97a0b3c118281c4ccfdeaf988010555351ec4d55" translate="yes" xml:space="preserve">
          <source>Verifies existence of an index with a given name.</source>
          <target state="translated">验证一个给定名称的索引的存在。</target>
        </trans-unit>
        <trans-unit id="5760da5a5da5cbad917abb4dd59eac80109c2e20" translate="yes" xml:space="preserve">
          <source>Verifies the existence of an index with a given name.</source>
          <target state="translated">验证一个给定名称的索引的存在。</target>
        </trans-unit>
        <trans-unit id="8cded5b9aaf370af103c0aa1094ae38a4aa2e210" translate="yes" xml:space="preserve">
          <source>Version 2.2 - November 2008</source>
          <target state="translated">2.2版-2008年11月</target>
        </trans-unit>
        <trans-unit id="c8e17f51af3e1914213243aa81ee23ba4a30341c" translate="yes" xml:space="preserve">
          <source>Version 2.3 - March 2009</source>
          <target state="translated">第2.3版-2009年3月</target>
        </trans-unit>
        <trans-unit id="29523e7b7178a18b51fc813b45a7ca10e05808a5" translate="yes" xml:space="preserve">
          <source>Version 3.0 - August 2010</source>
          <target state="translated">3.0版-2010年8月</target>
        </trans-unit>
        <trans-unit id="b6c1c2061a56b072ba59cb0c0a7ce6e35c338416" translate="yes" xml:space="preserve">
          <source>Version 3.1 - August 2011</source>
          <target state="translated">3.1版-2011年8月</target>
        </trans-unit>
        <trans-unit id="4f38c53c179cb9118c9410709cd56253b82cdce4" translate="yes" xml:space="preserve">
          <source>Version 3.2 - January 2012</source>
          <target state="translated">3.2版-2012年1月</target>
        </trans-unit>
        <trans-unit id="ef103e57f81f797671dd23a649d68e4cdfa89480" translate="yes" xml:space="preserve">
          <source>Version 4.0 - June 2013</source>
          <target state="translated">4.0版-2013年6月</target>
        </trans-unit>
        <trans-unit id="f3b5b8d38b37d175ca574ce8df5da6dee56c7b28" translate="yes" xml:space="preserve">
          <source>Version 4.1 - April 2014</source>
          <target state="translated">4.1版-2014年4月</target>
        </trans-unit>
        <trans-unit id="4c8a1fef102390070f53e62e7c591b10cdb51b13" translate="yes" xml:space="preserve">
          <source>Version 4.2 - December 2014</source>
          <target state="translated">4.2版-2014年12月</target>
        </trans-unit>
        <trans-unit id="22d6f26dec42074d6f355d9727ed700b37808224" translate="yes" xml:space="preserve">
          <source>Version 5.0 - June 2016</source>
          <target state="translated">5.0版-2016年6月</target>
        </trans-unit>
        <trans-unit id="7ff1fa8bd890c4b744824597386b9da0731caa8e" translate="yes" xml:space="preserve">
          <source>Version 5.1 - April 2017</source>
          <target state="translated">5.1版-2017年4月</target>
        </trans-unit>
        <trans-unit id="3b211c1618af3497a6eb3e18ca69c1f1db19dc49" translate="yes" xml:space="preserve">
          <source>Version 5.2 - April 2018</source>
          <target state="translated">5.2版-2018年4月</target>
        </trans-unit>
        <trans-unit id="f4958130cc67c07201808b083855af0b043d0925" translate="yes" xml:space="preserve">
          <source>Versus the CDN copy.</source>
          <target state="translated">对比CDN副本。</target>
        </trans-unit>
        <trans-unit id="69a7be7d74e8b54ef69683eb73c3addbe24661a5" translate="yes" xml:space="preserve">
          <source>Via</source>
          <target state="translated">Via</target>
        </trans-unit>
        <trans-unit id="c9734f6499b89840948f2e3c2b7c47b9f45f11ee" translate="yes" xml:space="preserve">
          <source>View Helpers for Debugging</source>
          <target state="translated">查看调试的帮助程序</target>
        </trans-unit>
        <trans-unit id="78430d2fda6680f0e395b491d0282e5241d62986" translate="yes" xml:space="preserve">
          <source>View Paths</source>
          <target state="translated">查看路径</target>
        </trans-unit>
        <trans-unit id="0cfb068ec9d455c33b99a40e5a2e61a037705351" translate="yes" xml:space="preserve">
          <source>View a list of all your routes</source>
          <target state="translated">查看所有路线的列表</target>
        </trans-unit>
        <trans-unit id="08afad212f0be9b5e638a274d3e1cfac9547d8d1" translate="yes" xml:space="preserve">
          <source>ViewPaths</source>
          <target state="translated">ViewPaths</target>
        </trans-unit>
        <trans-unit id="a77261d3867c396f7c7610af1e83e16c6b8eba18" translate="yes" xml:space="preserve">
          <source>ViewPaths#append_view_path</source>
          <target state="translated">ViewPaths#append_view_path</target>
        </trans-unit>
        <trans-unit id="4bfc792e50de0e9805510514a1653cc06f92fe49" translate="yes" xml:space="preserve">
          <source>ViewPaths#details_for_lookup</source>
          <target state="translated">ViewPaths#details_for_lookup</target>
        </trans-unit>
        <trans-unit id="320f98df4fa951c66a1c14f7dea98789eedc9c4f" translate="yes" xml:space="preserve">
          <source>ViewPaths#lookup_context</source>
          <target state="translated">ViewPaths#lookup_context</target>
        </trans-unit>
        <trans-unit id="d4104b15eec8ac79a40530776a267cc655ac9e10" translate="yes" xml:space="preserve">
          <source>ViewPaths#prepend_view_path</source>
          <target state="translated">ViewPaths#prepend_view_path</target>
        </trans-unit>
        <trans-unit id="3024c5b9b4319a21c921058e991c41fd09de86e0" translate="yes" xml:space="preserve">
          <source>ViewPaths::ClassMethods</source>
          <target state="translated">ViewPaths::ClassMethods</target>
        </trans-unit>
        <trans-unit id="6f67d4bdd16c95504f9c72412ef4e34285d9b39b" translate="yes" xml:space="preserve">
          <source>ViewPaths::ClassMethods#append_view_path</source>
          <target state="translated">ViewPaths::ClassMethods#append_view_path</target>
        </trans-unit>
        <trans-unit id="14174bc924492f257e7a8bd813d042ddc7ce1d26" translate="yes" xml:space="preserve">
          <source>ViewPaths::ClassMethods#prepend_view_path</source>
          <target state="translated">ViewPaths::ClassMethods#prepend_view_path</target>
        </trans-unit>
        <trans-unit id="65704031fc2c361c8cf8378b7f6f0e2a064e1e6f" translate="yes" xml:space="preserve">
          <source>ViewPaths::ClassMethods#view_paths</source>
          <target state="translated">ViewPaths::ClassMethods#view_paths</target>
        </trans-unit>
        <trans-unit id="d093e8d241542fe96a01eee06d1979e0c4fa74e1" translate="yes" xml:space="preserve">
          <source>ViewPaths::ClassMethods#view_paths=</source>
          <target state="translated">ViewPaths::ClassMethods#view_paths=</target>
        </trans-unit>
        <trans-unit id="24be61285e096fa817d4cdb0a0ed8294ea5bd2fb" translate="yes" xml:space="preserve">
          <source>Views</source>
          <target state="translated">Views</target>
        </trans-unit>
        <trans-unit id="cc0a43b53de35d76033970850208bca0446bb503" translate="yes" xml:space="preserve">
          <source>Views of the controller are stored here</source>
          <target state="translated">控制器的视图存储在这里</target>
        </trans-unit>
        <trans-unit id="0d08fe758cc443e8833c432605507d384e194a6b" translate="yes" xml:space="preserve">
          <source>Visit the following links for a list of available ImageProcessing commands and ImageMagick/libvips operations:</source>
          <target state="translated">请访问以下链接,查看可用的ImageProcessing命令和ImageMagick/libvips操作列表。</target>
        </trans-unit>
        <trans-unit id="bdc752c9be3af97e684d1ccc96f6f02a311f7cc3" translate="yes" xml:space="preserve">
          <source>Vocabulary</source>
          <target state="translated">Vocabulary</target>
        </trans-unit>
        <trans-unit id="a2e8043ece674da22afc45fed36cfb79559fbb0d" translate="yes" xml:space="preserve">
          <source>WARNING: &lt;code&gt;content_for&lt;/code&gt; is ignored in caches. So you shouldn't use it for elements that will be fragment cached.</source>
          <target state="translated">警告：在缓存中将忽略 &lt;code&gt;content_for&lt;/code&gt; 。因此，您不应将其用于片段缓存的元素。</target>
        </trans-unit>
        <trans-unit id="ee60cdc3ada497395d10d46b78075ee653c48698" translate="yes" xml:space="preserve">
          <source>WARNING: The instrumentation framework is designed for long-running subscribers, use this feature sparingly because it wipes some internal caches and that has a negative impact on performance.</source>
          <target state="translated">警告:仪器框架是为长期运行的用户设计的,尽量少用这个功能,因为它会擦掉一些内部缓存,这对性能有负面影响。</target>
        </trans-unit>
        <trans-unit id="6e760f2bbde93bd56121f6bc045230dd68f709f9" translate="yes" xml:space="preserve">
          <source>WARNING: This validation must not be used on both ends of an association. Doing so will lead to a circular dependency and cause infinite recursion.</source>
          <target state="translated">警告:这个验证不能用于关联的两端。这样做会导致循环依赖,并导致无限递归。</target>
        </trans-unit>
        <trans-unit id="dfd3facc8e523ca55e2b27b930498a9c83232fa6" translate="yes" xml:space="preserve">
          <source>WARNING: this helper only works with valid JSON. Using this on non-JSON values will open up serious XSS vulnerabilities. For example, if you replace the &lt;code&gt;current_user.to_json&lt;/code&gt; in the example above with user input instead, the browser will happily eval() that string as JavaScript.</source>
          <target state="translated">警告：此帮助程序仅适用于有效的JSON。在非JSON值上使用此选项将打开严重的XSS漏洞。例如，如果您将上面示例中的 &lt;code&gt;current_user.to_json&lt;/code&gt; 替换为用户输入，浏览器将愉快地将该字符串eval（）作为JavaScript。</target>
        </trans-unit>
        <trans-unit id="b1051102d01e44761f374446c27c97e8b87de41c" translate="yes" xml:space="preserve">
          <source>WEB_IMAGE_CONTENT_TYPES</source>
          <target state="translated">WEB_IMAGE_CONTENT_TYPES</target>
        </trans-unit>
        <trans-unit id="299decfbd735112c1a5007294bc1f4c4a258baa1" translate="yes" xml:space="preserve">
          <source>WEBrick servers buffer all responses, and so including &lt;code&gt;ActionController::Live&lt;/code&gt; will not work. You must use a web server which does not automatically buffer responses.</source>
          <target state="translated">WEBrick服务器缓冲所有响应，因此包括 &lt;code&gt;ActionController::Live&lt;/code&gt; 将无法工作。您必须使用不会自动缓冲响应的Web服务器。</target>
        </trans-unit>
        <trans-unit id="af92ecf91686bf2e99b9dd00a6ac5a31ea826c64" translate="yes" xml:space="preserve">
          <source>WEEKEND_DAYS</source>
          <target state="translated">WEEKEND_DAYS</target>
        </trans-unit>
        <trans-unit id="40d23f3b3af90554dade75ca1449213a1776239f" translate="yes" xml:space="preserve">
          <source>WHITE</source>
          <target state="translated">WHITE</target>
        </trans-unit>
        <trans-unit id="4d7285cafd4ab47eeb444f812e48e1fb97a945a6" translate="yes" xml:space="preserve">
          <source>WIP: Not all the helpers are listed here. For a full list see the &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionView/Helpers.html&quot;&gt;API documentation&lt;/a&gt;</source>
          <target state="translated">WIP：此处未列出所有帮助者。有关完整列表，请参阅&lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionView/Helpers.html&quot;&gt;API文档。&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="27dc0925dbb0875327e5c55ee8c69902566ebe96" translate="yes" xml:space="preserve">
          <source>Wait notifications to be published.</source>
          <target state="translated">等待通知发布。</target>
        </trans-unit>
        <trans-unit id="7cebd14f08ab49c4cc3ac3e9740b274ae40810f1" translate="yes" xml:space="preserve">
          <source>Walkthrough to Generating a Mailer</source>
          <target state="translated">生成邮件的演练</target>
        </trans-unit>
        <trans-unit id="6eb0c9e3dc0c281b408b4ce67a3fdb6bca09bd74" translate="yes" xml:space="preserve">
          <source>Warnings, gotchas or tips that might help users and save them time</source>
          <target state="translated">可能会对用户有所帮助并节省他们的时间的警告、疑难杂症或提示。</target>
        </trans-unit>
        <trans-unit id="4a225a7e421157620fcd0d618d25d5daea5cfcf3" translate="yes" xml:space="preserve">
          <source>Was the delegate loaded, causing the mailer action to be processed?</source>
          <target state="translated">是否加载了委托人,导致邮件行动被处理?</target>
        </trans-unit>
        <trans-unit id="2caac259998a19a0b82d6ff21bd354498ad7eefc" translate="yes" xml:space="preserve">
          <source>Was this exception raised because the given name was missing?</source>
          <target state="translated">这种例外情况的出现是否因为缺少名字?</target>
        </trans-unit>
        <trans-unit id="e6c4ce2fbb29b0bb74563ebfc6cda037566f3d08" translate="yes" xml:space="preserve">
          <source>We also want to allow only authenticated users to delete comments, so in the &lt;code&gt;CommentsController&lt;/code&gt; (&lt;code&gt;app/controllers/comments_controller.rb&lt;/code&gt;) we write:</source>
          <target state="translated">我们还希望仅允许经过身份验证的用户删除评论，因此在 &lt;code&gt;CommentsController&lt;/code&gt; （ &lt;code&gt;app/controllers/comments_controller.rb&lt;/code&gt; ）中，我们编写：</target>
        </trans-unit>
        <trans-unit id="5597fb441fd4a1e3152a150399496097ca814d37" translate="yes" xml:space="preserve">
          <source>We are able to call the methods like this:</source>
          <target state="translated">我们能够这样调用这些方法。</target>
        </trans-unit>
        <trans-unit id="674ecbc23144b4d1cdf785619bb9c8f8e150f2ae" translate="yes" xml:space="preserve">
          <source>We are going to cover how constant autoloading works in more detail later, but the idea is that when a constant like &lt;code&gt;Post&lt;/code&gt; is hit and missing, if there's a &lt;code&gt;post.rb&lt;/code&gt; file for example in &lt;code&gt;app/models&lt;/code&gt; Rails is going to find it, evaluate it, and have &lt;code&gt;Post&lt;/code&gt; defined as a side-effect.</source>
          <target state="translated">稍后我们将更详细地介绍常量自动加载的工作原理，但是想法是，当诸如 &lt;code&gt;Post&lt;/code&gt; 这样的常量被丢失时，如果在 &lt;code&gt;app/models&lt;/code&gt; 中有一个 &lt;code&gt;post.rb&lt;/code&gt; 文件，Rails将会找到它，然后进行评估。并将 &lt;code&gt;Post&lt;/code&gt; 定义为副作用。</target>
        </trans-unit>
        <trans-unit id="e984878fb53aff11a66108b7ca69680f0f0411df" translate="yes" xml:space="preserve">
          <source>We call &lt;em&gt;autoload paths&lt;/em&gt; to the list of application directories whose contents are to be autoloaded. For example, &lt;code&gt;app/models&lt;/code&gt;. Such directories represent the root namespace: &lt;code&gt;Object&lt;/code&gt;.</source>
          <target state="translated">我们将&lt;em&gt;自动加载路径&lt;/em&gt;称为要&lt;em&gt;自动加载&lt;/em&gt;其内容的应用程序目录列表​​。例如， &lt;code&gt;app/models&lt;/code&gt; 。这样的目录表示根名称空间： &lt;code&gt;Object&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="158c098bf791e16a613f557387ab53daa7f7c6ca" translate="yes" xml:space="preserve">
          <source>We call this 'unobtrusive' JavaScript because we're no longer mixing our JavaScript into our HTML. We've properly separated our concerns, making future change easy. We can easily add behavior to any link by adding the data attribute. We can run all of our JavaScript through a minimizer and concatenator. We can serve our entire JavaScript bundle on every page, which means that it'll get downloaded on the first page load and then be cached on every page after that. Lots of little benefits really add up.</source>
          <target state="translated">我们称之为 &quot;不显眼的 &quot;JavaScript,因为我们不再将我们的JavaScript混入我们的HTML中。我们已经适当地分离了我们的关注点,使未来的改变变得容易。我们可以通过添加数据属性轻松地给任何链接添加行为。我们可以通过最小化器和连接器来运行我们所有的JavaScript。我们可以在每个页面上服务我们的整个JavaScript捆绑,这意味着它将在第一次页面加载时被下载,然后在之后的每个页面上被缓存。很多小的好处真的加起来。</target>
        </trans-unit>
        <trans-unit id="45d7b2227d635b0a2cac1d9b60d848a104986cee" translate="yes" xml:space="preserve">
          <source>We can achieve this in two ways. The first is to use &lt;code&gt;create_with&lt;/code&gt;:</source>
          <target state="translated">我们可以通过两种方式实现这一目标。首先是使用 &lt;code&gt;create_with&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="d006ab704ee27e4d7971b50c941bb36b13942b80" translate="yes" xml:space="preserve">
          <source>We can add other locations and give them a certain precedence when resolving paths using the &lt;code&gt;prepend_view_path&lt;/code&gt; and &lt;code&gt;append_view_path&lt;/code&gt; methods.</source>
          <target state="translated">在使用 &lt;code&gt;prepend_view_path&lt;/code&gt; 和 &lt;code&gt;append_view_path&lt;/code&gt; 方法解析路径时，我们可以添加其他位置并赋予它们特定的优先级。</target>
        </trans-unit>
        <trans-unit id="60f96ebdc972aee31fd3e28df505ab9034f58590" translate="yes" xml:space="preserve">
          <source>We can also add a test for updating an existing Article.</source>
          <target state="translated">我们还可以添加一个更新现有Article的测试。</target>
        </trans-unit>
        <trans-unit id="fd05c98d271d3659c58c6aca0bdad1b98162be45" translate="yes" xml:space="preserve">
          <source>We can also pass in the symbol arguments instead of strings.</source>
          <target state="translated">我们也可以传入符号参数而不是字符串。</target>
        </trans-unit>
        <trans-unit id="2a5945ca3693e9a07a3ced8ffe36836cc1e5368a" translate="yes" xml:space="preserve">
          <source>We can also see that our new generator has a class method called &lt;code&gt;source_root&lt;/code&gt;. This method points to where our generator templates will be placed, if any, and by default it points to the created directory &lt;code&gt;lib/generators/initializer/templates&lt;/code&gt;.</source>
          <target state="translated">我们还可以看到我们的新生成器具有一个名为 &lt;code&gt;source_root&lt;/code&gt; 的类方法。此方法指向生成器模板的放置位置（如果有），默认情况下，它指向创建的目录 &lt;code&gt;lib/generators/initializer/templates&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e5c17c70425bc282e5f632f739761b7ac072ab15" translate="yes" xml:space="preserve">
          <source>We can also set the locale from the &lt;em&gt;subdomain&lt;/em&gt; in a very similar way:</source>
          <target state="translated">我们还可以通过非常相似的方式从&lt;em&gt;子域&lt;/em&gt;设置区域设置：</target>
        </trans-unit>
        <trans-unit id="73e8aa9cf06c7b905a18521d06b56328e8e076ef" translate="yes" xml:space="preserve">
          <source>We can detach a subscriber as well:</source>
          <target state="translated">我们也可以分离出一个用户。</target>
        </trans-unit>
        <trans-unit id="2461ab48a48cc7fd7ca68271451ce166765dd8c1" translate="yes" xml:space="preserve">
          <source>We can do this by using:</source>
          <target state="translated">我们可以通过使用:</target>
        </trans-unit>
        <trans-unit id="f29e014ab286c906b45549a0efc2101199a46f0d" translate="yes" xml:space="preserve">
          <source>We can easily simulate this behavior by changing our &lt;code&gt;config/application.rb&lt;/code&gt; once again:</source>
          <target state="translated">我们可以通过再次更改 &lt;code&gt;config/application.rb&lt;/code&gt; 来轻松模拟这种行为：</target>
        </trans-unit>
        <trans-unit id="671986b1c75b856b2f16d053ed41b695a0b6c2d0" translate="yes" xml:space="preserve">
          <source>We can improve upon the situation further by referencing both associations in the finder with:</source>
          <target state="translated">我们可以进一步改进这种情况,在查找器中引用这两个关联:</target>
        </trans-unit>
        <trans-unit id="8f9f17b3a72f43793c39b51e4f807af49d66692a" translate="yes" xml:space="preserve">
          <source>We can include something like this in our &lt;code&gt;ApplicationController&lt;/code&gt; then:</source>
          <target state="translated">我们可以在 &lt;code&gt;ApplicationController&lt;/code&gt; 中包含以下内容：</target>
        </trans-unit>
        <trans-unit id="fef2b7b6094cfeac80754e509876d8b1cb897617" translate="yes" xml:space="preserve">
          <source>We can mix and match &lt;code&gt;scope&lt;/code&gt; and &lt;code&gt;where&lt;/code&gt; conditions and the final sql will have all conditions joined with &lt;code&gt;AND&lt;/code&gt;.</source>
          <target state="translated">我们可以混合和匹配 &lt;code&gt;scope&lt;/code&gt; ，并 &lt;code&gt;where&lt;/code&gt; 的条件和最终的SQL将有加入的所有条件 &lt;code&gt;AND&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="25cb9b87a15d330a11745a3f48d175290efd0104" translate="yes" xml:space="preserve">
          <source>We can mix and match these two concepts. One element of a hash might be an array as in the previous example, or you can have an array of hashes. For example, a form might let you create any number of addresses by repeating the following form fragment</source>
          <target state="translated">我们可以将这两个概念混搭在一起。哈希的一个元素可能是一个数组,就像前面的例子一样,或者你可以有一个哈希数组。例如,一个表单可以让你通过重复以下表单片段来创建任意数量的地址。</target>
        </trans-unit>
        <trans-unit id="dc6819d94def13c221c19ffe706c8fae83893aa2" translate="yes" xml:space="preserve">
          <source>We can notice on the output that our new helper was invoked instead of the Rails default. However one thing is missing, which is tests for our new generator and to do that, we are going to reuse old helpers test generators.</source>
          <target state="translated">我们可以注意到,我们的新助手被调用了,而不是Rails的默认值。不过还缺少一样东西,那就是新生成器的测试,为了做到这一点,我们将重用旧的帮助测试生成器。</target>
        </trans-unit>
        <trans-unit id="0468e35a369b93b1b16b95a37bc73d5315229e1c" translate="yes" xml:space="preserve">
          <source>We can run all of our tests at once by using the &lt;code&gt;rails test&lt;/code&gt; command.</source>
          <target state="translated">我们可以使用 &lt;code&gt;rails test&lt;/code&gt; 命令一次运行所有测试。</target>
        </trans-unit>
        <trans-unit id="2d38a51f63747d2436139903e5bc3ed829bf1722" translate="yes" xml:space="preserve">
          <source>We can see how it works by looking at some &lt;code&gt;rails console&lt;/code&gt; output:</source>
          <target state="translated">通过查看一些 &lt;code&gt;rails console&lt;/code&gt; 输出，我们可以看到它是如何工作的：</target>
        </trans-unit>
        <trans-unit id="01a1baf74a78b8f20f805911d9a8b84c2922e0ca" translate="yes" xml:space="preserve">
          <source>We can see in this example that the name of a class or module that belongs to a certain nesting does not necessarily correlate with the namespaces at the spot.</source>
          <target state="translated">在这个例子中,我们可以看到,属于某个嵌套的类或模块的名称与现场的命名空间不一定有关联。</target>
        </trans-unit>
        <trans-unit id="be2a93364734b3fcdc7789f4a368481d9597ef1c" translate="yes" xml:space="preserve">
          <source>We can see that by invoking the description of this new generator (don't forget to delete the old generator file):</source>
          <target state="translated">我们可以通过调用这个新生成器的描述来看(别忘了删除旧的生成器文件)。</target>
        </trans-unit>
        <trans-unit id="6d2024991dba3905de582d767072f01911bd0d36" translate="yes" xml:space="preserve">
          <source>We can see that now an initializer named core_extensions was created at &lt;code&gt;config/initializers/core_extensions.rb&lt;/code&gt; with the contents of our template. That means that &lt;code&gt;copy_file&lt;/code&gt; copied a file in our source root to the destination path we gave. The method &lt;code&gt;file_name&lt;/code&gt; is automatically created when we inherit from &lt;code&gt;Rails::Generators::NamedBase&lt;/code&gt;.</source>
          <target state="translated">我们可以看到，现在在 &lt;code&gt;config/initializers/core_extensions.rb&lt;/code&gt; 中使用模板的内容创建了一个名为core_extensions的初始化程序。这意味着 &lt;code&gt;copy_file&lt;/code&gt; 将源根目录中的文件复制到我们提供的目标路径。当我们从 &lt;code&gt;Rails::Generators::NamedBase&lt;/code&gt; 继承时，将自动创建方法 &lt;code&gt;file_name&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e820cc6d7557cbdde9b1f7da39dd1eeb92aba846" translate="yes" xml:space="preserve">
          <source>We can test the output of this method like this:</source>
          <target state="translated">我们可以这样测试这个方法的输出。</target>
        </trans-unit>
        <trans-unit id="be2f3584318b837bc0d2a9930c88ab57e12e159b" translate="yes" xml:space="preserve">
          <source>We can try out our new generator by creating a helper for products:</source>
          <target state="translated">我们可以通过为产品创建一个帮助程序来尝试我们的新生成器。</target>
        </trans-unit>
        <trans-unit id="988076117425df2e6aa7ffaa293e0e2a4f6179f1" translate="yes" xml:space="preserve">
          <source>We can't distinguish a &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tag's origin&amp;mdash;whether it's a tag on your own site or on some other malicious site&amp;mdash;so we must block all &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; across the board, even if it's actually a safe same-origin script served from your own site. In these cases, explicitly skip CSRF protection on actions that serve JavaScript meant for a &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tag.</source>
          <target state="translated">我们无法区分 &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; 标记的来源-无论是在您自己的站点上还是在其他恶意网站上的标记-因此，即使实际上是一个安全的同源脚本，我们也必须全面阻止所有 &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; 从您自己的网站。在这些情况下，请针对提供 &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; 标记的JavaScript的动作明确跳过CSRF保护。</target>
        </trans-unit>
        <trans-unit id="43dd581f3c1b42e5ea1b1293196c423436420c0f" translate="yes" xml:space="preserve">
          <source>We don&amp;rsquo;t bump dependencies just to encourage use of new versions, including for security issues. This is because application owners need to manually update their gems regardless of our efforts. Use &lt;code&gt;bundle update --conservative gem_name&lt;/code&gt; to safely update vulnerable dependencies.</source>
          <target state="translated">我们不会破坏依赖关系只是为了鼓励使用新版本，包括为了安全性问题。这是因为无论我们如何努力，应用程序所有者都需要手动更新其gem。使用 &lt;code&gt;bundle update --conservative gem_name&lt;/code&gt; 安全地更新易受攻击的依赖项。</target>
        </trans-unit>
        <trans-unit id="517d3ba81d6b07ef763f75a5074b23149aa43b40" translate="yes" xml:space="preserve">
          <source>We don't want to use the whole &amp;ldquo;encryption stack&amp;rdquo; for connection unit-tests, but we want to make sure that users test against the correct types of cookies (i.e. signed or encrypted or plain)</source>
          <target state="translated">我们不想将整个&amp;ldquo;加密堆栈&amp;rdquo;用于连接单元测试，但我们要确保用户针对正确类型的Cookie（即签名或加密或纯Cookie）进行测试</target>
        </trans-unit>
        <trans-unit id="77f455faf6ade11252b257d5515c568205713174" translate="yes" xml:space="preserve">
          <source>We had to create the &lt;strong&gt;gitapp&lt;/strong&gt; directory and initialize an empty git repository before Rails would add files it created to our repository. Let's see what it put in our database configuration:</source>
          <target state="translated">在Rails将创建的文件添加到存储库之前，我们必须创建&lt;strong&gt;gitapp&lt;/strong&gt;目录并初始化一个空的git存储库。让我们看一下它在数据库配置中的内容：</target>
        </trans-unit>
        <trans-unit id="7f13236051ab994384c1a30307aac3630cdf19c8" translate="yes" xml:space="preserve">
          <source>We have to define our permitted controller parameters to prevent wrongful mass assignment. In this case, we want to both allow and require the &lt;code&gt;title&lt;/code&gt; and &lt;code&gt;text&lt;/code&gt; parameters for valid use of &lt;code&gt;create&lt;/code&gt;. The syntax for this introduces &lt;code&gt;require&lt;/code&gt; and &lt;code&gt;permit&lt;/code&gt;. The change will involve one line in the &lt;code&gt;create&lt;/code&gt; action:</source>
          <target state="translated">我们必须定义允许的控制器参数，以防止错误的质量分配。在这种情况下，我们既要允许也需要 &lt;code&gt;title&lt;/code&gt; 和 &lt;code&gt;text&lt;/code&gt; 参数，以有效使用 &lt;code&gt;create&lt;/code&gt; 。此语法引入了 &lt;code&gt;require&lt;/code&gt; 和 &lt;code&gt;permit&lt;/code&gt; 。更改将在 &lt;code&gt;create&lt;/code&gt; 动作中涉及一行：</target>
        </trans-unit>
        <trans-unit id="9135c45478b9c5024a0ede42b557604327de6716" translate="yes" xml:space="preserve">
          <source>We may want to disable CSRF protection for APIs since they are typically designed to be state-less. That is, the request &lt;a href=&quot;api&quot;&gt;API&lt;/a&gt; client will handle the session for you instead of Rails.</source>
          <target state="translated">我们可能想要禁用API的CSRF保护，因为它们通常设计为无状态。也就是说，请求&lt;a href=&quot;api&quot;&gt;API&lt;/a&gt;客户端将代替Rails为您处理会话。</target>
        </trans-unit>
        <trans-unit id="23cac8b8050308a836a07beb92d693696614f8bb" translate="yes" xml:space="preserve">
          <source>We need to store the &lt;a href=&quot;generators#RAILS_DEV_PATH&quot;&gt;RAILS_DEV_PATH&lt;/a&gt; in a constant, otherwise the path can change in Ruby 1.8.7 when we FileUtils.cd.</source>
          <target state="translated">我们需要将&lt;a href=&quot;generators#RAILS_DEV_PATH&quot;&gt;RAILS_DEV_PATH&lt;/a&gt;存储在一个常量中，否则当我们使用FileUtils.cd时，路径可以在Ruby 1.8.7中更改。</target>
        </trans-unit>
        <trans-unit id="dc98ca6ae3281fe5ac661f54e9a6b0e529873ba2" translate="yes" xml:space="preserve">
          <source>We often find ourselves with a medium-sized chunk of behavior that we'd like to extract, but only mix in to a single class.</source>
          <target state="translated">我们经常发现自己有一个中等大小的行为块,我们想提取出来,但只能混入一个类中。</target>
        </trans-unit>
        <trans-unit id="f93b715190506ee3f1c41e95e1f22115faecb785" translate="yes" xml:space="preserve">
          <source>We often need to iterate over a large set of records, as when we send a newsletter to a large set of users, or when we export data.</source>
          <target state="translated">我们经常需要对大量的记录进行迭代,比如当我们向一大批用户发送通讯,或者当我们导出数据时。</target>
        </trans-unit>
        <trans-unit id="7b4ba83b3173b99928fe5dd25dde5519737fdcf6" translate="yes" xml:space="preserve">
          <source>We often want to render different html/json/xml templates for phones, tablets, and desktop browsers. Variants make it easy.</source>
          <target state="translated">我们经常希望为手机、平板电脑和桌面浏览器呈现不同的html/json/xml模板。Varits让这一切变得简单。</target>
        </trans-unit>
        <trans-unit id="ab597975bed681fdb296905f3831e1248c42c3b3" translate="yes" xml:space="preserve">
          <source>We override this in the sqlite3 and postgresql adapters to use only the column name (as per syntax requirements).</source>
          <target state="translated">我们在sqlite3和postgresql适配器中覆盖这一点,只使用列名(根据语法要求)。</target>
        </trans-unit>
        <trans-unit id="4413ece56758f843156efc2e004d815da81905ff" translate="yes" xml:space="preserve">
          <source>We pass &lt;code&gt;id: false&lt;/code&gt; to &lt;code&gt;create_table&lt;/code&gt; because that table does not represent a model. That's required for the association to work properly. If you observe any strange behavior in a &lt;code&gt;has_and_belongs_to_many&lt;/code&gt; association like mangled model IDs, or exceptions about conflicting IDs, chances are you forgot that bit.</source>
          <target state="translated">我们将 &lt;code&gt;id: false&lt;/code&gt; 传递给 &lt;code&gt;create_table&lt;/code&gt; ,因为该表不代表模型。这是关联正常运行所必需的。如果您在 &lt;code&gt;has_and_belongs_to_many&lt;/code&gt; 关联中观察到任何奇怪的行为，例如损坏的模型ID，或有关冲突ID的异常，那么您可能会忘记这一点。</target>
        </trans-unit>
        <trans-unit id="7fee75db6450cb2fa5440d3ea28269a8848f74df" translate="yes" xml:space="preserve">
          <source>We recommend against using this setting in production environments. It relies on Ruby's &lt;code&gt;Kernel#caller&lt;/code&gt; method which tends to allocate a lot of memory in order to generate stacktraces of method calls.</source>
          <target state="translated">我们建议不要在生产环境中使用此设置。它依赖于Ruby的 &lt;code&gt;Kernel#caller&lt;/code&gt; 方法，该方法倾向于分配大量内存以生成方法调用的堆栈跟踪。</target>
        </trans-unit>
        <trans-unit id="598ad582df169550ec2a05dad6dc014c3f36a551" translate="yes" xml:space="preserve">
          <source>We reuse the &lt;code&gt;article_params&lt;/code&gt; method that we defined earlier for the create action.</source>
          <target state="translated">我们重用了先前为create动作定义的 &lt;code&gt;article_params&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="4689ed968b7698f822bbde5b4716d0e09d3ae563" translate="yes" xml:space="preserve">
          <source>We start by calling the &lt;code&gt;:new&lt;/code&gt; action on our Articles controller. This response should be successful.</source>
          <target state="translated">我们首先在Articles控制器上调用 &lt;code&gt;:new&lt;/code&gt; 操作。此响应应该成功。</target>
        </trans-unit>
        <trans-unit id="cb2d3dc0dbaa073429414d4a0570d3c5c87cf5a5" translate="yes" xml:space="preserve">
          <source>We still need a way to list all our articles, so let's do that. The route for this as per output of &lt;code&gt;rails routes&lt;/code&gt; is:</source>
          <target state="translated">我们仍然需要一种列出所有文章的方法，所以让我们这样做。根据 &lt;code&gt;rails routes&lt;/code&gt; 输出，该路线为：</target>
        </trans-unit>
        <trans-unit id="386d303e4a3e14aac757da3b562d6d7ab4f23a12" translate="yes" xml:space="preserve">
          <source>We use the &lt;code&gt;delete&lt;/code&gt; method for destroying resources, and this route is mapped to the &lt;code&gt;destroy&lt;/code&gt; action inside &lt;code&gt;app/controllers/articles_controller.rb&lt;/code&gt;, which doesn't exist yet. The &lt;code&gt;destroy&lt;/code&gt; method is generally the last CRUD action in the controller, and like the other public CRUD actions, it must be placed before any &lt;code&gt;private&lt;/code&gt; or &lt;code&gt;protected&lt;/code&gt; methods. Let's add it:</source>
          <target state="translated">我们使用 &lt;code&gt;delete&lt;/code&gt; 方法销毁资源，并且此路由映射到 &lt;code&gt;app/controllers/articles_controller.rb&lt;/code&gt; 中尚不存在的 &lt;code&gt;destroy&lt;/code&gt; 动作。该 &lt;code&gt;destroy&lt;/code&gt; 的方法一般是在控制的最后一个CRUD操作，而像其他公共CRUD操作，它必须任何之前放在 &lt;code&gt;private&lt;/code&gt; 或 &lt;code&gt;protected&lt;/code&gt; 方法。让我们添加它：</target>
        </trans-unit>
        <trans-unit id="db9f005888bcc67e9d1a7d8e26cd233984d79f30" translate="yes" xml:space="preserve">
          <source>We want to add a &lt;code&gt;flash&lt;/code&gt; message to our blog application whenever someone successfully creates a new Article.</source>
          <target state="translated">每当有人成功创建新文章时，我们都希望向我们的博客应用程序添加一条 &lt;code&gt;flash&lt;/code&gt; 消息。</target>
        </trans-unit>
        <trans-unit id="1d5686b34c1f72bc6d9677d7ddd5606fc194c062" translate="yes" xml:space="preserve">
          <source>We were able to successfully test a very small workflow for visiting our blog and creating a new article. If we wanted to take this further we could add tests for commenting, removing articles, or editing comments. Integration tests are a great place to experiment with all kinds of use cases for our applications.</source>
          <target state="translated">我们能够成功测试一个非常小的工作流程,用于访问我们的博客和创建新的文章。如果我们想进一步发展,我们可以添加评论、删除文章或编辑评论的测试。集成测试是一个很好的地方,可以为我们的应用程序试验各种用例。</target>
        </trans-unit>
        <trans-unit id="cb0bc5f2a0af19baa04cd89f2e7e17c0bccaf2bf" translate="yes" xml:space="preserve">
          <source>We will also add code to define the &lt;code&gt;acts_as_yaffle&lt;/code&gt; method.</source>
          <target state="translated">我们还将添加代码来定义 &lt;code&gt;acts_as_yaffle&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="77c6582bd3fe3362720bd7a8b7d2e096e44434e8" translate="yes" xml:space="preserve">
          <source>We will be deprecating the use of &lt;code&gt;render :text&lt;/code&gt; in a future version. So please start using the more precise &lt;code&gt;:plain&lt;/code&gt;, &lt;code&gt;:html&lt;/code&gt;, and &lt;code&gt;:body&lt;/code&gt; options instead. Using &lt;code&gt;render :text&lt;/code&gt; may pose a security risk, as the content is sent as &lt;code&gt;text/html&lt;/code&gt;.</source>
          <target state="translated">我们将在以后的版本中弃用 &lt;code&gt;render :text&lt;/code&gt; 。因此，请开始使用更精确的 &lt;code&gt;:plain&lt;/code&gt; ， &lt;code&gt;:html&lt;/code&gt; 和 &lt;code&gt;:body&lt;/code&gt; 选项。使用 &lt;code&gt;render :text&lt;/code&gt; 可能会带来安全风险，因为内容是以 &lt;code&gt;text/html&lt;/code&gt; 格式发送的。</target>
        </trans-unit>
        <trans-unit id="e10c11c72647528df053e440cfdf6cd1b5232923" translate="yes" xml:space="preserve">
          <source>We will be redirected back to the articles index page and there we assert that the text from the new article's title is on the articles index page.</source>
          <target state="translated">我们将被重定向回文章索引页,在那里我们断言新文章标题中的文字在文章索引页上。</target>
        </trans-unit>
        <trans-unit id="ca2a76503c2daca7ff0d901068d3558daac36b14" translate="yes" xml:space="preserve">
          <source>We will set up a simple resource called &quot;HighScore&quot; that will keep track of our highest score on video games we play.</source>
          <target state="translated">我们将建立一个名为 &quot;HighScore &quot;的简单资源,以记录我们玩电子游戏的最高分数。</target>
        </trans-unit>
        <trans-unit id="a153c35b15dc1ba45b477ea77bf677c1bd87303b" translate="yes" xml:space="preserve">
          <source>We will take a look at &lt;code&gt;assert_select&lt;/code&gt; to query the resulting HTML of a request in the &quot;Testing Views&quot; section below. It is used for testing the response of our request by asserting the presence of key HTML elements and their content.</source>
          <target state="translated">我们将在下面的&amp;ldquo;测试视图&amp;rdquo;部分中查看 &lt;code&gt;assert_select&lt;/code&gt; 以查询请求的结果HTML。它用于通过断言关键HTML元素及其内容的存在来测试我们的请求的响应。</target>
        </trans-unit>
        <trans-unit id="6a10ac9549cf6a77795a3a9fce4918b95fd9124e" translate="yes" xml:space="preserve">
          <source>We won't dig into the server configuration itself, but this is the last piece of our journey in the Rails initialization process.</source>
          <target state="translated">我们不会深入研究服务器配置本身,但这是我们在Rails初始化过程中的最后一块旅程。</target>
        </trans-unit>
        <trans-unit id="691cdc30ae7b6c06dccc449b81aeaae6287dbe5b" translate="yes" xml:space="preserve">
          <source>We'll cover validation errors in greater depth in the &lt;a href=&quot;#working-with-validation-errors&quot;&gt;Working with Validation Errors&lt;/a&gt; section.</source>
          <target state="translated">我们将在&amp;ldquo; &lt;a href=&quot;#working-with-validation-errors&quot;&gt;使用验证错误&amp;rdquo;&lt;/a&gt;部分中更深入地讨论验证错误。</target>
        </trans-unit>
        <trans-unit id="a8081622cc93f1b7df35fe01c9c1d6af41f86595" translate="yes" xml:space="preserve">
          <source>We'll start by generating our integration test skeleton:</source>
          <target state="translated">我们将从生成集成测试骨架开始。</target>
        </trans-unit>
        <trans-unit id="48cb234ea63e47db5a7d0886a550a6f6493ae294" translate="yes" xml:space="preserve">
          <source>We're going to see the same generator that we used before when creating the &lt;code&gt;Article&lt;/code&gt; model. This time we'll create a &lt;code&gt;Comment&lt;/code&gt; model to hold a reference to an article. Run this command in your terminal:</source>
          <target state="translated">我们将看到在创建 &lt;code&gt;Article&lt;/code&gt; 模型时使用的同一生成器。这次，我们将创建一个 &lt;code&gt;Comment&lt;/code&gt; 模型来保存对文章的引用。在终端中运行以下命令：</target>
        </trans-unit>
        <trans-unit id="2432a238cbf87e5d31e0c2da682062f2bea384f6" translate="yes" xml:space="preserve">
          <source>We're now ready to cover the &quot;D&quot; part of CRUD, deleting articles from the database. Following the REST convention, the route for deleting articles as per output of &lt;code&gt;rails routes&lt;/code&gt; is:</source>
          <target state="translated">现在，我们准备覆盖CRUD的&amp;ldquo; D&amp;rdquo;部分，从数据库中删除文章。按照REST约定，根据 &lt;code&gt;rails routes&lt;/code&gt; 输出删除文章的路由是：</target>
        </trans-unit>
        <trans-unit id="bed2fd2a7e71a99ceca5ee6a4f7ad67dac5876a7" translate="yes" xml:space="preserve">
          <source>We've covered the &quot;CR&quot; part of CRUD. Now let's focus on the &quot;U&quot; part, updating articles.</source>
          <target state="translated">我们已经介绍了CRUD的 &quot;CR &quot;部分。现在让我们关注 &quot;U &quot;部分,更新文章。</target>
        </trans-unit>
        <trans-unit id="ab6e6b9f618b70a68d436f247846a40e619f778a" translate="yes" xml:space="preserve">
          <source>Weak ETags are considered to be semantically equivalent but not byte-for-byte identical. This is perfect for browser caching of HTML pages where we don't care about exact equality, just what the user is viewing.</source>
          <target state="translated">弱ETags被认为是语义上的等价物,但不是字节对字节的相同。这对于HTML页面的浏览器缓存来说是完美的,因为我们不关心是否完全相同,只关心用户正在浏览的内容。</target>
        </trans-unit>
        <trans-unit id="f1efac46adc87ab5e99b26566d02e756f2c0ac46" translate="yes" xml:space="preserve">
          <source>Weak ETags are what we almost always need, so they're the default. Check out &lt;a href=&quot;response#method-i-strong_etag-3D&quot;&gt;strong_etag=&lt;/a&gt; to provide a strong ETag validator.</source>
          <target state="translated">弱ETag是我们几乎始终需要的，因此它们是默认值。&lt;a href=&quot;response#method-i-strong_etag-3D&quot;&gt;签&lt;/a&gt;出strong_etag =提供强大的ETag验证器。</target>
        </trans-unit>
        <trans-unit id="1809c79cb6993ea5165a1e1a7aba04c7dd6c2e17" translate="yes" xml:space="preserve">
          <source>Weak ETags have a leading &lt;code&gt;W/&lt;/code&gt; to differentiate them from strong ETags.</source>
          <target state="translated">弱ETag具有领先的 &lt;code&gt;W/&lt;/code&gt; 以区别于强ETag。</target>
        </trans-unit>
        <trans-unit id="b9b9b2ee5726745022f21194fc8ef89c2b16d1d0" translate="yes" xml:space="preserve">
          <source>Web Console</source>
          <target state="translated">网络控制台</target>
        </trans-unit>
        <trans-unit id="5db3d41b2112390b308d756fcf86fb277aea165d" translate="yes" xml:space="preserve">
          <source>Web Console is a bit like &lt;code&gt;byebug&lt;/code&gt;, but it runs in the browser. In any page you are developing, you can request a console in the context of a view or a controller. The console would be rendered next to your HTML content.</source>
          <target state="translated">Web控制台有点像 &lt;code&gt;byebug&lt;/code&gt; ，但它在浏览器中运行。在您开发的任何页面中，都可以在视图或控制器的上下文中请求控制台。该控制台将呈现在您的HTML内容旁边。</target>
        </trans-unit>
        <trans-unit id="4b13fcfbda413aee7f023233e61f35cf81af0f17" translate="yes" xml:space="preserve">
          <source>Web application frameworks are made to help developers build web applications. Some of them also help you with securing the web application. In fact one framework is not more secure than another: If you use it correctly, you will be able to build secure apps with many frameworks. Ruby on Rails has some clever helper methods, for example against SQL injection, so that this is hardly a problem.</source>
          <target state="translated">Web应用程序框架是为了帮助开发人员构建Web应用程序而制作的。其中一些框架还可以帮助你保护网络应用的安全。事实上,一个框架并不比另一个框架更安全。如果你正确地使用它,你将能够用许多框架来构建安全的应用程序。Ruby on Rails有一些聪明的帮助方法,例如针对SQL注入,所以这几乎不是问题。</target>
        </trans-unit>
        <trans-unit id="9459860984e13bab0b19b2b839d079cd058433a8" translate="yes" xml:space="preserve">
          <source>Web server support</source>
          <target state="translated">网络服务器支持</target>
        </trans-unit>
        <trans-unit id="b3a632997ac534438cd8c7edb335b4db1970be6a" translate="yes" xml:space="preserve">
          <source>What Action Cable is and its integration backend and frontend</source>
          <target state="translated">什么是行动电缆及其整合后台与前端</target>
        </trans-unit>
        <trans-unit id="1da74eaae94addafb45efbffe7cc81eba07ef0b1" translate="yes" xml:space="preserve">
          <source>What Action View is and how to use it with Rails.</source>
          <target state="translated">什么是Action View以及如何在Rails中使用它。</target>
        </trans-unit>
        <trans-unit id="f23b42ccb59d8b1e94efd1ce43552074b550775c" translate="yes" xml:space="preserve">
          <source>What Core Extensions are.</source>
          <target state="translated">什么是核心扩展部分。</target>
        </trans-unit>
        <trans-unit id="b3e557cc5eb5d49af393a6975a0fdfa6c35c59ba" translate="yes" xml:space="preserve">
          <source>What Does a Controller Do?</source>
          <target state="translated">控制器的作用是什么?</target>
        </trans-unit>
        <trans-unit id="5808a900063fa17fa58def0da49f6fe152fe47df" translate="yes" xml:space="preserve">
          <source>What Gets Uploaded</source>
          <target state="translated">上传的内容</target>
        </trans-unit>
        <trans-unit id="377640760eee84961d2597103438b89b3f4cfa3f" translate="yes" xml:space="preserve">
          <source>What Object Relational Mapping and Active Record are and how they are used in Rails.</source>
          <target state="translated">什么是对象关系映射和Active Record,以及它们在Rails中的使用方法。</target>
        </trans-unit>
        <trans-unit id="731aed874aa7562696a22b8345f05ee0bbef9ac1" translate="yes" xml:space="preserve">
          <source>What Rails provides for API-only applications</source>
          <target state="translated">Rails为仅有API的应用程序提供了什么?</target>
        </trans-unit>
        <trans-unit id="dc735b4a91689a6b0c1cd2a521cf567d7b434e98" translate="yes" xml:space="preserve">
          <source>What all did this generate? It made sure a bunch of directories were in our application, and created a controller file, a view file, a functional test file, a helper for the view, a JavaScript file, and a stylesheet file.</source>
          <target state="translated">这一切都产生了什么?它确保我们的应用程序中有一堆目录,并创建了一个控制器文件、一个视图文件、一个功能测试文件、一个视图助手、一个JavaScript文件和一个样式表文件。</target>
        </trans-unit>
        <trans-unit id="5331cbb3aab936a45b55b0258419f877600a5970" translate="yes" xml:space="preserve">
          <source>What are &lt;code&gt;on_load&lt;/code&gt; hooks?</source>
          <target state="translated">什么是 &lt;code&gt;on_load&lt;/code&gt; 挂钩？</target>
        </trans-unit>
        <trans-unit id="61980490925b2287fbd6e03eba35fc86d21c4601" translate="yes" xml:space="preserve">
          <source>What are Schema Files for?</source>
          <target state="translated">Schema文件有什么用?</target>
        </trans-unit>
        <trans-unit id="a8e230295d6da231e35ba0da6a98ee97cef06624" translate="yes" xml:space="preserve">
          <source>What are Sessions?</source>
          <target state="translated">什么是会话?</target>
        </trans-unit>
        <trans-unit id="18753ba5f3591b086952d3a88034a5c0b0c96ea1" translate="yes" xml:space="preserve">
          <source>What are engines?</source>
          <target state="translated">什么是发动机?</target>
        </trans-unit>
        <trans-unit id="fe645fceba7cb5bffc3a665941912046e3a21c94" translate="yes" xml:space="preserve">
          <source>What are the &lt;code&gt;autoload_paths&lt;/code&gt; and how does eager loading work in production?</source>
          <target state="translated">什么是 &lt;code&gt;autoload_paths&lt;/code&gt; ，急切加载在生产中如何工作？</target>
        </trans-unit>
        <trans-unit id="d295ebe7c060d87e9a7904f3c26eda1e85a27413" translate="yes" xml:space="preserve">
          <source>What can be written like this with the regular calls to column:</source>
          <target state="translated">可以这样写,有规律的调用列。</target>
        </trans-unit>
        <trans-unit id="c370d90e9cfbca6a3d3d41e1f07192abe838d2f4" translate="yes" xml:space="preserve">
          <source>What code Rails will automatically execute concurrently</source>
          <target state="translated">Rails会自动并发执行哪些代码?</target>
        </trans-unit>
        <trans-unit id="5507f34300cda018ef142c69fc5871f3373c40bb" translate="yes" xml:space="preserve">
          <source>What date and time helpers Rails provides.</source>
          <target state="translated">Rails提供了哪些日期和时间助手。</target>
        </trans-unit>
        <trans-unit id="707e2c0ad1b42dd6b5323c58d12996b2cd43585c" translate="yes" xml:space="preserve">
          <source>What extensions Active Support provides.</source>
          <target state="translated">积极支持提供哪些扩展。</target>
        </trans-unit>
        <trans-unit id="a62c204fac121cf84945fcd1b32f3cd8a2fcc074" translate="yes" xml:space="preserve">
          <source>What features are supported and what's still a work in progress.</source>
          <target state="translated">支持哪些功能,哪些还在进行中。</target>
        </trans-unit>
        <trans-unit id="f6b6230b58382dd496e7de5884d9da552f1660df" translate="yes" xml:space="preserve">
          <source>What gets deleted?</source>
          <target state="translated">什么会被删除?</target>
        </trans-unit>
        <trans-unit id="883f686d758fc7dd93d88c6c17345881cb2ab4d6" translate="yes" xml:space="preserve">
          <source>What happens is that Rails puts the string into the Location header field and sends a 302 (redirect) status to the browser. The first thing a malicious user would do, is this:</source>
          <target state="translated">发生的情况是,Rails将该字符串放入Location header字段,并向浏览器发送302(重定向)状态。恶意用户会做的第一件事,就是这样。</target>
        </trans-unit>
        <trans-unit id="637714eacdf4d49939fad1c1bcac935defb3e06a" translate="yes" xml:space="preserve">
          <source>What helpers are provided by Action View.</source>
          <target state="translated">Action View提供了哪些帮助。</target>
        </trans-unit>
        <trans-unit id="84ad34fa9714027d7d5f3eb91f0ecc477bfe5a7a" translate="yes" xml:space="preserve">
          <source>What if you need to follow a different naming convention or need to use your Rails application with a legacy database? No problem, you can easily override the default conventions.</source>
          <target state="translated">如果您需要遵循不同的命名约定,或者需要将您的 Rails 应用程序与传统数据库一起使用,该怎么办?没问题,您可以轻松地覆盖默认约定。</target>
        </trans-unit>
        <trans-unit id="16968bfee38573c60cb9126c18ff6ec79984cf42" translate="yes" xml:space="preserve">
          <source>What if you want to render a template from an entirely different controller from the one that contains the action code? You can also do that with &lt;code&gt;render&lt;/code&gt;, which accepts the full path (relative to &lt;code&gt;app/views&lt;/code&gt;) of the template to render. For example, if you're running code in an &lt;code&gt;AdminProductsController&lt;/code&gt; that lives in &lt;code&gt;app/controllers/admin&lt;/code&gt;, you can render the results of an action to a template in &lt;code&gt;app/views/products&lt;/code&gt; this way:</source>
          <target state="translated">如果要从与包含动作代码的控制器完全不同的控制器渲染模板，该怎么办？您也可以使用 &lt;code&gt;render&lt;/code&gt; 来做到这一点，后者接受要渲染的模板的完整路径（相对于 &lt;code&gt;app/views&lt;/code&gt; ）。例如，如果您在位于 &lt;code&gt;app/controllers/admin&lt;/code&gt; 的 &lt;code&gt;AdminProductsController&lt;/code&gt; 中运行代码，则可以通过以下方式将操作的结果呈现到 &lt;code&gt;app/views/products&lt;/code&gt; 中的模板：</target>
        </trans-unit>
        <trans-unit id="bfcbd26fb8792616656cadecb0a102ca942ad797" translate="yes" xml:space="preserve">
          <source>What instrumentation can provide.</source>
          <target state="translated">仪器仪表能提供什么。</target>
        </trans-unit>
        <trans-unit id="5b7510d5c855b0466de31658d924b9b24c576d27" translate="yes" xml:space="preserve">
          <source>What is &lt;a href=&quot;optimistic&quot;&gt;Optimistic&lt;/a&gt;</source>
          <target state="translated">什么是&lt;a href=&quot;optimistic&quot;&gt;乐观&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ffe9bde2548568650a087bb9f56844ea838c8ee6" translate="yes" xml:space="preserve">
          <source>What is &lt;code&gt;require_dependency&lt;/code&gt;</source>
          <target state="translated">什么是 &lt;code&gt;require_dependency&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1daaa6123f7f78197717b9c04c2225cfe869416f" translate="yes" xml:space="preserve">
          <source>What is Action View?</source>
          <target state="translated">什么是行动视图?</target>
        </trans-unit>
        <trans-unit id="4271fcb36c696c0f14de5c35ec1841aba9789b24" translate="yes" xml:space="preserve">
          <source>What is Active Record?</source>
          <target state="translated">什么是主动记录?</target>
        </trans-unit>
        <trans-unit id="55044abdd93bfa7aa0fb954e641bd0b1d01ae9b0" translate="yes" xml:space="preserve">
          <source>What is Active Storage?</source>
          <target state="translated">什么是主动存储?</target>
        </trans-unit>
        <trans-unit id="91a2de52cedb56ac3998839b193aa1e475ab4ad5" translate="yes" xml:space="preserve">
          <source>What is Fingerprinting and Why Should I Care?</source>
          <target state="translated">什么是指纹识别,我为什么要关心?</target>
        </trans-unit>
        <trans-unit id="211d0a0c0924f1407ad9be67d7e72c97bc720e49" translate="yes" xml:space="preserve">
          <source>What is Pub/Sub</source>
          <target state="translated">什么是Pub/Sub</target>
        </trans-unit>
        <trans-unit id="9d0ec7f0a54c4ec9b7f19d205b0e3ea2bc07aa67" translate="yes" xml:space="preserve">
          <source>What is Rails?</source>
          <target state="translated">什么是Rails?</target>
        </trans-unit>
        <trans-unit id="aadb021c7938ecb68d4c5c03234d9e87705fca62" translate="yes" xml:space="preserve">
          <source>What is an API Application?</source>
          <target state="translated">什么是API应用?</target>
        </trans-unit>
        <trans-unit id="b34de056fb84303ea45fbd5f5d73c535ad7672d5" translate="yes" xml:space="preserve">
          <source>What is described above are the defaults with a newly generated Rails app. There are multiple ways this can be configured differently (see &lt;a href=&quot;configuring#rails-general-configuration&quot;&gt;Configuring Rails Applications&lt;/a&gt;. ). But using &lt;code&gt;autoload_paths&lt;/code&gt; on its own in the past (before Rails 5) developers might configure &lt;code&gt;autoload_paths&lt;/code&gt; to add in extra locations (e.g. &lt;code&gt;lib&lt;/code&gt; which used to be an autoload path list years ago, but no longer is). However this is now discouraged for most purposes, as it is likely to lead to production-only errors. It is possible to add new locations to both &lt;code&gt;config.eager_load_paths&lt;/code&gt; and &lt;code&gt;config.autoload_paths&lt;/code&gt; but use at your own risk.</source>
          <target state="translated">上面描述的是新生成的Rails应用程序的默认设置。可以通过多种方式对此进行不同的配置（请参阅&lt;a href=&quot;configuring#rails-general-configuration&quot;&gt;配置Rails应用程序&lt;/a&gt;。）。但是，过去（在Rails 5之前）自己使用 &lt;code&gt;autoload_paths&lt;/code&gt; 的开发人员可能会配置 &lt;code&gt;autoload_paths&lt;/code&gt; 来添加额外的位置（例如， &lt;code&gt;lib&lt;/code&gt; 几年前曾经是自动加载路径列表，但现在不再存在）。但是，现在不建议在大多数情况下使用此方法，因为这可能会导致仅生产错误。可以将新位置添加到 &lt;code&gt;config.eager_load_paths&lt;/code&gt; 和 &lt;code&gt;config.autoload_paths&lt;/code&gt; 中,但后果自负。</target>
        </trans-unit>
        <trans-unit id="a7db466839adbfdf088467c12b16bb3fef88e784" translate="yes" xml:space="preserve">
          <source>What is the Asset Pipeline?</source>
          <target state="translated">什么是资产管道?</target>
        </trans-unit>
        <trans-unit id="e118285478ff4646fc09fbec324b9e7e1a9707d8" translate="yes" xml:space="preserve">
          <source>What is the Logger?</source>
          <target state="translated">什么是记录仪?</target>
        </trans-unit>
        <trans-unit id="f060f003e3e2c1860322ce1f1abe12370a1e7205" translate="yes" xml:space="preserve">
          <source>What makes a file upload form different.</source>
          <target state="translated">什么使文件上传形式与众不同。</target>
        </trans-unit>
        <trans-unit id="17c46f2185e25674c663db7f9762acaf61fb891e" translate="yes" xml:space="preserve">
          <source>What makes an engine.</source>
          <target state="translated">是什么让一个发动机。</target>
        </trans-unit>
        <trans-unit id="735318354513c0ce7ddbc7d0ad50e85efde82d76" translate="yes" xml:space="preserve">
          <source>What that says is, &amp;ldquo;if the client wants HTML or JS in response to this action, just respond as we would have before, but if the client wants XML, return them the list of people in XML format.&amp;rdquo; (Rails determines the desired response format from the HTTP Accept header submitted by the client.)</source>
          <target state="translated">这就是说，&amp;ldquo;如果客户需要HTML或JS来响应此操作，请像以前一样做出响应，但是如果客户需要XML，则以XML格式返回他们的人员清单。&amp;rdquo; （Rails从客户端提交的HTTP Accept标头中确定所需的响应格式。）</target>
        </trans-unit>
        <trans-unit id="3b02bce111cfb857b7949cef7571c4947bf68733" translate="yes" xml:space="preserve">
          <source>What the asset pipeline is and what it does.</source>
          <target state="translated">资产管道是什么,有什么作用。</target>
        </trans-unit>
        <trans-unit id="9bd95d92fe357c3a610a687a84bcef23484537c2" translate="yes" xml:space="preserve">
          <source>What this isolation of the namespace means is that a model generated by a call to &lt;code&gt;rails g model&lt;/code&gt;, such as &lt;code&gt;rails g model article&lt;/code&gt;, won't be called &lt;code&gt;Article&lt;/code&gt;, but instead be namespaced and called &lt;code&gt;Blorgh::Article&lt;/code&gt;. In addition, the table for the model is namespaced, becoming &lt;code&gt;blorgh_articles&lt;/code&gt;, rather than simply &lt;code&gt;articles&lt;/code&gt;. Similar to the model namespacing, a controller called &lt;code&gt;ArticlesController&lt;/code&gt; becomes &lt;code&gt;Blorgh::ArticlesController&lt;/code&gt; and the views for that controller will not be at &lt;code&gt;app/views/articles&lt;/code&gt;, but &lt;code&gt;app/views/blorgh/articles&lt;/code&gt; instead. Mailers are namespaced as well.</source>
          <target state="translated">名称空间的这种隔离意味着，通过调用 &lt;code&gt;rails g model&lt;/code&gt; 模型生成的模型（例如 &lt;code&gt;rails g model article&lt;/code&gt; ）将不会被称为 &lt;code&gt;Article&lt;/code&gt; ，而是被命名空间并称为 &lt;code&gt;Blorgh::Article&lt;/code&gt; 。此外，模型中的表被命名空间，成为 &lt;code&gt;blorgh_articles&lt;/code&gt; ，而不是简单 &lt;code&gt;articles&lt;/code&gt; 。类似于模型命名 &lt;code&gt;Blorgh::ArticlesController&lt;/code&gt; ，名为 &lt;code&gt;ArticlesController&lt;/code&gt; 的控制器将变为Blorgh :: ArticlesController，并且该控制器的视图将不在 &lt;code&gt;app/views/articles&lt;/code&gt; ，而是在 &lt;code&gt;app/views/blorgh/articles&lt;/code&gt; 处。邮件程序也具有名称空间。</target>
        </trans-unit>
        <trans-unit id="239f63ac463508b40e526c47f96b3b39a0046c8f" translate="yes" xml:space="preserve">
          <source>What to include in your Functional Tests</source>
          <target state="translated">功能测试的内容</target>
        </trans-unit>
        <trans-unit id="b27f6f85f9c4e479fb6f422e48bab7cafd3e56ba" translate="yes" xml:space="preserve">
          <source>What versions of Ruby on Rails are currently supported, and when to expect new versions.</source>
          <target state="translated">目前支持哪些版本的Ruby on Rails,以及何时会有新版本。</target>
        </trans-unit>
        <trans-unit id="331888654b4dabb3a255cf4c53c2bfe533404fb8" translate="yes" xml:space="preserve">
          <source>What you have to pay attention to when working with files or providing an administration interface.</source>
          <target state="translated">在处理文件或提供管理界面时,你必须注意什么。</target>
        </trans-unit>
        <trans-unit id="b4b55f6cfd078420bf0221c4065d97c6d4136bb1" translate="yes" xml:space="preserve">
          <source>What's Next?</source>
          <target state="translated">下一步是什么?</target>
        </trans-unit>
        <trans-unit id="feeb2e55f8b3b7efdc2b9943e6ad0ed6e3caa46b" translate="yes" xml:space="preserve">
          <source>Whatever the name, you must manually generate the join table with an appropriate migration. For example, consider these associations:</source>
          <target state="translated">不管是什么名称,你必须手动生成具有适当迁移的连接表。例如,考虑这些关联。</target>
        </trans-unit>
        <trans-unit id="ad6a0728457c013305f4a2c08710aba0556181ef" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;../querymethods#method-i-where&quot;&gt;ActiveRecord::Base.where&lt;/a&gt; is called, it will use the type defined by the model class to convert the value to SQL, calling &lt;code&gt;serialize&lt;/code&gt; on your type object. For example:</source>
          <target state="translated">当&lt;a href=&quot;../querymethods#method-i-where&quot;&gt;ActiveRecord的:: Base.where&lt;/a&gt;被调用时，它将使用由模型类中定义的类型值，以SQL转换，呼吁 &lt;code&gt;serialize&lt;/code&gt; 你的类型的对象。例如：</target>
        </trans-unit>
        <trans-unit id="efe0a05236142bfa202038bc2d6d613ee18dbec5" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;:autosave&lt;/code&gt; is not declared new children are saved when their parent is saved:</source>
          <target state="translated">如果未声明 &lt;code&gt;:autosave&lt;/code&gt; ,则在保存其父级时将保存新的子级：</target>
        </trans-unit>
        <trans-unit id="7e75fe6e5264d07423781d81d9474c20fb60be7c" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;:autosave&lt;/code&gt; is true all children are saved, no matter whether they are new records or not:</source>
          <target state="translated">当 &lt;code&gt;:autosave&lt;/code&gt; 为true时，所有子项均被保存，无论它们是否为新记录：</target>
        </trans-unit>
        <trans-unit id="ca35aa659a5c1de3f47d7fc3fb8c6d55084116ca" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;:include_blank&lt;/code&gt; or &lt;code&gt;:prompt&lt;/code&gt; are not present, &lt;code&gt;:include_blank&lt;/code&gt; is forced true if the select attribute &lt;code&gt;required&lt;/code&gt; is true, display &lt;code&gt;size&lt;/code&gt; is one, and &lt;code&gt;multiple&lt;/code&gt; is not true.</source>
          <target state="translated">当 &lt;code&gt;:include_blank&lt;/code&gt; 或 &lt;code&gt;:prompt&lt;/code&gt; 不存在时，如果 &lt;code&gt;required&lt;/code&gt; 的select属性为true，显示 &lt;code&gt;size&lt;/code&gt; 为1， &lt;code&gt;multiple&lt;/code&gt; 不为true，则 &lt;code&gt;:include_blank&lt;/code&gt; 被强制为true。</target>
        </trans-unit>
        <trans-unit id="c2843d3495329a2af8182ca2c8d53bd7cefa5545" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;:instance_reader&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;, the instance predicate returns a &lt;code&gt;NoMethodError&lt;/code&gt; just like the reader method.</source>
          <target state="translated">当 &lt;code&gt;:instance_reader&lt;/code&gt; 为 &lt;code&gt;false&lt;/code&gt; 时，实例谓词将返回 &lt;code&gt;NoMethodError&lt;/code&gt; ，就像reader方法一样。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
