<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="dom">
    <body>
      <group id="dom">
        <trans-unit id="e0f19ec1e06b9ae4900d618b18f622f02a09a801" translate="yes" xml:space="preserve">
          <source>In other words, any option contained within the &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; element may be part of the results, but option groups are not included in the list.</source>
          <target state="translated">换句话说， &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; 元素中包含的任何选项都可以是结果的一部分，但选项组不包括在列表中。</target>
        </trans-unit>
        <trans-unit id="97a7c108b5c6140b4173059986003f1376e968b1" translate="yes" xml:space="preserve">
          <source>In other words, if window &lt;code&gt;A&lt;/code&gt; opens window &lt;code&gt;B&lt;/code&gt;, &lt;code&gt;B.opener&lt;/code&gt; returns &lt;code&gt;A&lt;/code&gt;.</source>
          <target state="translated">换句话说，如果窗口 &lt;code&gt;A&lt;/code&gt; 窗口打开 &lt;code&gt;B&lt;/code&gt; ， &lt;code&gt;B.opener&lt;/code&gt; 返回 &lt;code&gt;A&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7ce78e8d1d2a0d50c2a376afec5e90ceb657b19e" translate="yes" xml:space="preserve">
          <source>In other words, the DOM tree for the following document will look like the image below (using &quot;\n&quot; to represent newlines):</source>
          <target state="translated">换句话说,下面文档的DOM树将看起来像下面的图片(用&quot;\n &quot;代表换行)。</target>
        </trans-unit>
        <trans-unit id="5c1995dd1809228319a7049ef9140329c0aa7889" translate="yes" xml:space="preserve">
          <source>In other words, the current acceleration of the sensor's rotation around the &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt;, and &lt;code&gt;z&lt;/code&gt; axes.</source>
          <target state="translated">换句话说，传感器绕 &lt;code&gt;x&lt;/code&gt; ， &lt;code&gt;y&lt;/code&gt; 和 &lt;code&gt;z&lt;/code&gt; 轴旋转的当前加速度。</target>
        </trans-unit>
        <trans-unit id="e24aa6a1d2a326510cfb988f82d3d16ac3740449" translate="yes" xml:space="preserve">
          <source>In other words, the current acceleration of the sensor, along the &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt;, and &lt;code&gt;z&lt;/code&gt; axes.</source>
          <target state="translated">换句话说，传感器沿 &lt;code&gt;x&lt;/code&gt; ， &lt;code&gt;y&lt;/code&gt; 和 &lt;code&gt;z&lt;/code&gt; 轴的当前加速度。</target>
        </trans-unit>
        <trans-unit id="26342f65c936d9d1b499fb61c1d5657e37c0d6de" translate="yes" xml:space="preserve">
          <source>In other words, the current velocity at which the sensor is moving along the &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt;, and &lt;code&gt;z&lt;/code&gt; axes.</source>
          <target state="translated">换句话说，传感器沿 &lt;code&gt;x&lt;/code&gt; ， &lt;code&gt;y&lt;/code&gt; 和 &lt;code&gt;z&lt;/code&gt; 轴移动的当前速度。</target>
        </trans-unit>
        <trans-unit id="c8756d342164e2002ce05df955f382173498e783" translate="yes" xml:space="preserve">
          <source>In other words, the current velocity at which the sensor is rotating around the &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt;, and &lt;code&gt;z&lt;/code&gt; axes.</source>
          <target state="translated">换句话说，传感器围绕 &lt;code&gt;x&lt;/code&gt; ， &lt;code&gt;y&lt;/code&gt; 和 &lt;code&gt;z&lt;/code&gt; 轴旋转的当前速度。</target>
        </trans-unit>
        <trans-unit id="aa5bb749fa017e61f3287c0d596f0a5cd62ab091" translate="yes" xml:space="preserve">
          <source>In other words, until you've been notified that nodes are being split off from your monitored subtree, you'll get notifications of changes to that split-off subtree and its nodes. This prevents you from missing changes that occur after the connection is severed and before you have a chance to specifically begin monitoring the moved node or subtree for changes.</source>
          <target state="translated">换句话说,在你接到通知,节点被从你的监控子树中分离出来之前,你将收到对那个被分离出来的子树及其节点的变化通知。这可以防止你错过在连接被切断后,在你有机会专门开始监控被移动的节点或子树的变化之前发生的变化。</target>
        </trans-unit>
        <trans-unit id="b1886b08f743d589301dd5bab055f2e5446d6484" translate="yes" xml:space="preserve">
          <source>In our &lt;a href=&quot;http://mdn.github.io/emogotchi/&quot;&gt;Emogotchi demo&lt;/a&gt; (&lt;a href=&quot;https://github.com/mdn/emogotchi&quot;&gt;see source code&lt;/a&gt;), we run a simple &lt;code&gt;spawnNotification()&lt;/code&gt; function when we want to fire a notification &amp;mdash; this is passed arguments to specify the body, icon and title we want, then it creates the necessary &lt;code&gt;options&lt;/code&gt; object and fires the notification using the &lt;a href=&quot;notification&quot;&gt;&lt;code&gt;Notification()&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">在我们的&lt;a href=&quot;http://mdn.github.io/emogotchi/&quot;&gt;Emogotchi演示中&lt;/a&gt;（&lt;a href=&quot;https://github.com/mdn/emogotchi&quot;&gt;请参见源代码&lt;/a&gt;），当我们要触发通知时，我们运行一个简单的 &lt;code&gt;spawnNotification()&lt;/code&gt; 函数-传递参数以指定所需的正文，图标和标题，然后创建必要的 &lt;code&gt;options&lt;/code&gt; 对象并触发使用&lt;a href=&quot;notification&quot;&gt; &lt;code&gt;Notification()&lt;/code&gt; &lt;/a&gt;构造函数的通知。</target>
        </trans-unit>
        <trans-unit id="3afbb59e3e9bdc76ed12c72cfc11652669eb6607" translate="yes" xml:space="preserve">
          <source>In our &lt;a href=&quot;http://mdn.github.io/emogotchi/&quot;&gt;Emogotchi demo&lt;/a&gt; (&lt;a href=&quot;https://github.com/mdn/emogotchi&quot;&gt;see source code&lt;/a&gt;), we run a simple &lt;code&gt;spawnNotification()&lt;/code&gt; function when we want to fire a notification &amp;mdash; this is passed arguments to specify the body, icon and title we want, then it creates the necessary &lt;code&gt;options&lt;/code&gt; object and fires the notification using the &lt;code&gt;Notification()&lt;/code&gt; constructor.</source>
          <target state="translated">在我们的&lt;a href=&quot;http://mdn.github.io/emogotchi/&quot;&gt;Emogotchi演示中&lt;/a&gt;（&lt;a href=&quot;https://github.com/mdn/emogotchi&quot;&gt;请参见源代码&lt;/a&gt;），当我们要触发通知时，我们运行一个简单的 &lt;code&gt;spawnNotification()&lt;/code&gt; 函数-传递参数以指定所需的正文，图标和标题，然后创建必要的 &lt;code&gt;options&lt;/code&gt; 对象并触发使用 &lt;code&gt;Notification()&lt;/code&gt; 构造函数的通知。</target>
        </trans-unit>
        <trans-unit id="90d003531c911f7be4dd1c486c92d6ac6b8bf562" translate="yes" xml:space="preserve">
          <source>In our &lt;a href=&quot;http://mdn.github.io/fetch-examples/fetch-array-buffer/&quot;&gt;fetch array buffer live&lt;/a&gt;, we have a Play button. When pressed, the &lt;code&gt;getData()&lt;/code&gt; function is run. Note that before playing full audio file will be downloaded. If you need to play ogg during downloading (stream it) - consider &lt;a href=&quot;../htmlaudioelement&quot;&gt;&lt;code&gt;HTMLAudioElement&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">在&lt;a href=&quot;http://mdn.github.io/fetch-examples/fetch-array-buffer/&quot;&gt;live&lt;/a&gt;的提取数组缓冲区中，我们有一个Play按钮。按下时，将运行 &lt;code&gt;getData()&lt;/code&gt; 函数。请注意，在播放完整音频文件之前将被下载。如果您需要在下载过程中播放ogg（流式传输），请考虑&lt;a href=&quot;../htmlaudioelement&quot;&gt; &lt;code&gt;HTMLAudioElement&lt;/code&gt; &lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="3473029b722643bd0de6270c006a9471e3640d38" translate="yes" xml:space="preserve">
          <source>In our &lt;a href=&quot;https://github.com/mdn/dom-examples/tree/master/scrolltooptions&quot;&gt;scrolltooptions example&lt;/a&gt; (&lt;a href=&quot;https://mdn.github.io/dom-examples/scrolltooptions/&quot;&gt;see it live&lt;/a&gt;) we include a form that allows the user to enter three values &amp;mdash; two numbers representing the left and top properties (i.e. the positions to scroll to along the X and Y axes), and a checkbox indicating whether they want smooth scrolling enabled or not.</source>
          <target state="translated">在我们的&lt;a href=&quot;https://github.com/mdn/dom-examples/tree/master/scrolltooptions&quot;&gt;scrolltooptions示例&lt;/a&gt;（&lt;a href=&quot;https://mdn.github.io/dom-examples/scrolltooptions/&quot;&gt;实时查看&lt;/a&gt;）中，我们包含一个表格，该表格允许用户输入三个值-两个数字分别表示left和top属性（即，沿X和Y轴滚动到的位置），以及一个复选框，指示是否他们是否希望启用平滑滚动。</target>
        </trans-unit>
        <trans-unit id="c64086b9539917286e2d87d93d5db7c8c949df9f" translate="yes" xml:space="preserve">
          <source>In our &lt;a href=&quot;https://github.com/mdn/dom-examples/tree/master/streams&quot;&gt;dom-examples/streams&lt;/a&gt; repo you&amp;rsquo;ll find a &lt;a href=&quot;https://github.com/mdn/dom-examples/blob/master/streams/simple-writer/index.html&quot;&gt;Simple writer example&lt;/a&gt; (&lt;a href=&quot;https://mdn.github.io/dom-examples/streams/simple-writer/&quot;&gt;see it live also&lt;/a&gt;). This takes a given message and writes it into a writable stream, displaying each chunk on the UI as it is written to the stream and also displaying the whole message on the UI when writing has finished.</source>
          <target state="translated">在我们的&lt;a href=&quot;https://github.com/mdn/dom-examples/tree/master/streams&quot;&gt;dom-examples / streams&lt;/a&gt;回购中，您将找到一个&lt;a href=&quot;https://github.com/mdn/dom-examples/blob/master/streams/simple-writer/index.html&quot;&gt;Simple writer示例&lt;/a&gt;（&lt;a href=&quot;https://mdn.github.io/dom-examples/streams/simple-writer/&quot;&gt;也可以实时查看&lt;/a&gt;）。这将获取给定的消息并将其写入可写流，在将每个块写入流中时在UI上显示每个块，并在写入完成后在UI上显示整个消息。</target>
        </trans-unit>
        <trans-unit id="85832bf0175fde6ba53c86bd83b82b6cef373f12" translate="yes" xml:space="preserve">
          <source>In our &lt;a href=&quot;https://github.com/mdn/fetch-examples/blob/master/fetch-with-init-then-request/index.html&quot;&gt;Fetch with init then Request example&lt;/a&gt; (see &lt;a href=&quot;https://mdn.github.io/fetch-examples/fetch-with-init-then-request/&quot;&gt;Fetch Request init live&lt;/a&gt;) we do the same thing except that we pass in an init object when we invoke &lt;code&gt;fetch()&lt;/code&gt;:</source>
          <target state="translated">在我们的&lt;a href=&quot;https://github.com/mdn/fetch-examples/blob/master/fetch-with-init-then-request/index.html&quot;&gt;使用init然后Request的&lt;/a&gt;&lt;a href=&quot;https://mdn.github.io/fetch-examples/fetch-with-init-then-request/&quot;&gt;Fetch &lt;/a&gt;示例中（请参阅Fetch Request init live），我们做同样的事情，除了在调用 &lt;code&gt;fetch()&lt;/code&gt; 时传递一个init对象：</target>
        </trans-unit>
        <trans-unit id="5332e06ca745e4910ad89f54152ef29d7fe3c242" translate="yes" xml:space="preserve">
          <source>In our &lt;a href=&quot;https://github.com/mdn/fetch-examples/tree/gh-pages/fetch-request&quot;&gt;fetch request example&lt;/a&gt; (run &lt;a href=&quot;http://mdn.github.io/fetch-examples/fetch-request/&quot;&gt;fetch request live&lt;/a&gt;), we create a new request using the &lt;a href=&quot;../request/request&quot;&gt;&lt;code&gt;Request.Request&lt;/code&gt;&lt;/a&gt; constructor, then use it to fetch a JPG. When the fetch is successful, we read a &lt;a href=&quot;../blob&quot;&gt;&lt;code&gt;Blob&lt;/code&gt;&lt;/a&gt; out of the response using &lt;code&gt;blob()&lt;/code&gt;, put it into an object URL using &lt;a href=&quot;../url/createobjecturl&quot;&gt;&lt;code&gt;URL.createObjectURL&lt;/code&gt;&lt;/a&gt;, and then set that URL as the source of an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img&quot;&gt;&lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt;&lt;/a&gt; element to display the image.</source>
          <target state="translated">在我们的&lt;a href=&quot;https://github.com/mdn/fetch-examples/tree/gh-pages/fetch-request&quot;&gt;获取请求示例&lt;/a&gt;（运行&lt;a href=&quot;http://mdn.github.io/fetch-examples/fetch-request/&quot;&gt;实时获取请求&lt;/a&gt;）中，我们使用&lt;a href=&quot;../request/request&quot;&gt; &lt;code&gt;Request.Request&lt;/code&gt; &lt;/a&gt;构造函数创建一个新请求，然后使用它来获取JPG。成功获取后，我们使用 &lt;code&gt;blob()&lt;/code&gt; 从响应中读取一个&lt;a href=&quot;../blob&quot;&gt; &lt;code&gt;Blob&lt;/code&gt; &lt;/a&gt;，然后使用&lt;a href=&quot;../url/createobjecturl&quot;&gt; &lt;code&gt;URL.createObjectURL&lt;/code&gt; &lt;/a&gt;将其放入对象URL中，然后将该URL设置为&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img&quot;&gt; &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; &lt;/a&gt;元素的源以显示图像。</target>
        </trans-unit>
        <trans-unit id="0d101dce8f5c51f9422d663e004d452e7e16ec9b" translate="yes" xml:space="preserve">
          <source>In our &lt;a href=&quot;https://github.com/mdn/fetch-examples/tree/gh-pages/fetch-request&quot;&gt;fetch request example&lt;/a&gt; (run &lt;a href=&quot;https://mdn.github.io/fetch-examples/fetch-request/&quot;&gt;fetch request live&lt;/a&gt;), we create a new request using the &lt;a href=&quot;../request/request&quot;&gt;&lt;code&gt;Request.Request&lt;/code&gt;&lt;/a&gt; constructor, then use it to fetch a JPG. When the fetch is successful, we read a &lt;a href=&quot;../blob&quot;&gt;&lt;code&gt;Blob&lt;/code&gt;&lt;/a&gt; out of the response using &lt;code&gt;blob()&lt;/code&gt;, put it into an object URL using &lt;a href=&quot;../url/createobjecturl&quot;&gt;&lt;code&gt;URL.createObjectURL&lt;/code&gt;&lt;/a&gt;, and then set that URL as the source of an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img&quot;&gt;&lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt;&lt;/a&gt; element to display the image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="981ffc61170f85abb6ad923d558244f17fb966ec" translate="yes" xml:space="preserve">
          <source>In our &lt;a href=&quot;https://github.com/mdn/fetch-examples/tree/gh-pages/fetch-response&quot;&gt;Fetch Response example&lt;/a&gt; (see &lt;a href=&quot;http://mdn.github.io/fetch-examples/fetch-response/&quot;&gt;Fetch Response live&lt;/a&gt;) we create a new &lt;a href=&quot;../request&quot;&gt;&lt;code&gt;Request&lt;/code&gt;&lt;/a&gt; object using the &lt;a href=&quot;../request/request&quot;&gt;&lt;code&gt;Request()&lt;/code&gt;&lt;/a&gt; constructor, passing it a JPG path. We then fetch this request using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/GlobalFetch/fetch&quot;&gt;&lt;code&gt;fetch()&lt;/code&gt;&lt;/a&gt;, extract a blob from the response using &lt;a href=&quot;../body/blob&quot;&gt;&lt;code&gt;Body.blob&lt;/code&gt;&lt;/a&gt;, create an object URL out of it using &lt;a href=&quot;../url/createobjecturl&quot;&gt;&lt;code&gt;URL.createObjectURL&lt;/code&gt;&lt;/a&gt;, and display this in an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img&quot;&gt;&lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在我们的&lt;a href=&quot;https://github.com/mdn/fetch-examples/tree/gh-pages/fetch-response&quot;&gt;获取响应示例中&lt;/a&gt;（请参阅&lt;a href=&quot;http://mdn.github.io/fetch-examples/fetch-response/&quot;&gt;实时获取响应&lt;/a&gt;），我们使用&lt;a href=&quot;../request/request&quot;&gt; &lt;code&gt;Request()&lt;/code&gt; &lt;/a&gt;构造函数创建一个新的&lt;a href=&quot;../request&quot;&gt; &lt;code&gt;Request&lt;/code&gt; &lt;/a&gt;对象，并向其传递JPG路径。然后，我们使用这个取请求&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/GlobalFetch/fetch&quot;&gt; &lt;code&gt;fetch()&lt;/code&gt; &lt;/a&gt;，提取使用从所述响应一个blob &lt;a href=&quot;../body/blob&quot;&gt; &lt;code&gt;Body.blob&lt;/code&gt; &lt;/a&gt;，创建一个对象URL出它使用的&lt;a href=&quot;../url/createobjecturl&quot;&gt; &lt;code&gt;URL.createObjectURL&lt;/code&gt; &lt;/a&gt;，并且在一个显示此&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img&quot;&gt; &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="47efe581808e3a6301104c72c40dd7b8c644c71a" translate="yes" xml:space="preserve">
          <source>In our &lt;a href=&quot;https://github.com/mdn/fetch-examples/tree/gh-pages/fetch-response&quot;&gt;Fetch Response example&lt;/a&gt; (see &lt;a href=&quot;https://mdn.github.io/fetch-examples/fetch-response/&quot;&gt;Fetch Response live&lt;/a&gt;) we create a new &lt;a href=&quot;../request&quot;&gt;&lt;code&gt;Request&lt;/code&gt;&lt;/a&gt; object using the &lt;a href=&quot;../request/request&quot;&gt;&lt;code&gt;Request()&lt;/code&gt;&lt;/a&gt; constructor, passing it a JPG path. We then fetch this request using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/GlobalFetch/fetch&quot;&gt;&lt;code&gt;fetch()&lt;/code&gt;&lt;/a&gt;, extract a blob from the response using &lt;a href=&quot;../body/blob&quot;&gt;&lt;code&gt;Body.blob&lt;/code&gt;&lt;/a&gt;, create an object URL out of it using &lt;a href=&quot;../url/createobjecturl&quot;&gt;&lt;code&gt;URL.createObjectURL&lt;/code&gt;&lt;/a&gt;, and display this in an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img&quot;&gt;&lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32986a6f47816d4bd1d2722cbc2f89d5eb06ee4c" translate="yes" xml:space="preserve">
          <source>In our &lt;a href=&quot;https://github.com/mdn/fetch-examples/tree/gh-pages/fetch-response-clone&quot;&gt;Fetch Response clone example&lt;/a&gt; (see &lt;a href=&quot;http://mdn.github.io/fetch-examples/fetch-response-clone/&quot;&gt;Fetch Response clone live&lt;/a&gt;) we create a new &lt;a href=&quot;../request&quot;&gt;&lt;code&gt;Request&lt;/code&gt;&lt;/a&gt; object using the &lt;a href=&quot;../request/request&quot;&gt;&lt;code&gt;Request()&lt;/code&gt;&lt;/a&gt; constructor, passing it a JPG path. We then fetch this request using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/GlobalFetch/fetch&quot;&gt;&lt;code&gt;fetch()&lt;/code&gt;&lt;/a&gt;. When the fetch resolves successfully, we clone it, extract a blob from both responses using two &lt;a href=&quot;../body/blob&quot;&gt;&lt;code&gt;Body.blob&lt;/code&gt;&lt;/a&gt; calls, create object URLs out of the blobs using &lt;a href=&quot;../url/createobjecturl&quot;&gt;&lt;code&gt;URL.createObjectURL&lt;/code&gt;&lt;/a&gt;, and display them in two separate &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img&quot;&gt;&lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt;&lt;/a&gt; elements.</source>
          <target state="translated">在我们的&amp;ldquo; &lt;a href=&quot;https://github.com/mdn/fetch-examples/tree/gh-pages/fetch-response-clone&quot;&gt;获取响应&amp;rdquo;克隆示例中&lt;/a&gt;（请参阅&lt;a href=&quot;http://mdn.github.io/fetch-examples/fetch-response-clone/&quot;&gt;实时获取&amp;ldquo;获取响应&amp;rdquo;克隆&lt;/a&gt;），我们使用&lt;a href=&quot;../request/request&quot;&gt; &lt;code&gt;Request()&lt;/code&gt; &lt;/a&gt;构造函数创建一个新的&lt;a href=&quot;../request&quot;&gt; &lt;code&gt;Request&lt;/code&gt; &lt;/a&gt;对象，并为其传递JPG路径。然后，我们使用&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/GlobalFetch/fetch&quot;&gt; &lt;code&gt;fetch()&lt;/code&gt; &lt;/a&gt;获取此请求。提取成功解析后，我们将对其进行克隆，使用两个&lt;a href=&quot;../body/blob&quot;&gt; &lt;code&gt;Body.blob&lt;/code&gt; &lt;/a&gt;调用从两个响应中提取一个blob，使用&lt;a href=&quot;../url/createobjecturl&quot;&gt; &lt;code&gt;URL.createObjectURL&lt;/code&gt; &lt;/a&gt;从这些blob中创建对象URL ，并将其显示在两个单独的&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img&quot;&gt; &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; &lt;/a&gt;元素中。</target>
        </trans-unit>
        <trans-unit id="f7428450a5e166dfe2cdf66308a9b3668fafec2d" translate="yes" xml:space="preserve">
          <source>In our &lt;a href=&quot;https://github.com/mdn/fetch-examples/tree/gh-pages/fetch-response-clone&quot;&gt;Fetch Response clone example&lt;/a&gt; (see &lt;a href=&quot;https://mdn.github.io/fetch-examples/fetch-response-clone/&quot;&gt;Fetch Response clone live&lt;/a&gt;) we create a new &lt;a href=&quot;../request&quot;&gt;&lt;code&gt;Request&lt;/code&gt;&lt;/a&gt; object using the &lt;a href=&quot;../request/request&quot;&gt;&lt;code&gt;Request()&lt;/code&gt;&lt;/a&gt; constructor, passing it a JPG path. We then fetch this request using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/GlobalFetch/fetch&quot;&gt;&lt;code&gt;fetch()&lt;/code&gt;&lt;/a&gt;. When the fetch resolves successfully, we clone it, extract a blob from both responses using two &lt;a href=&quot;../body/blob&quot;&gt;&lt;code&gt;Body.blob&lt;/code&gt;&lt;/a&gt; calls, create object URLs out of the blobs using &lt;a href=&quot;../url/createobjecturl&quot;&gt;&lt;code&gt;URL.createObjectURL&lt;/code&gt;&lt;/a&gt;, and display them in two separate &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img&quot;&gt;&lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt;&lt;/a&gt; elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d92cc65101815d73ef9b8d0210a121eef752599a" translate="yes" xml:space="preserve">
          <source>In our &lt;a href=&quot;https://github.com/mdn/fetch-examples/tree/master/basic-fetch&quot;&gt;basic fetch example&lt;/a&gt; (&lt;a href=&quot;http://mdn.github.io/fetch-examples/basic-fetch/&quot;&gt;run example live&lt;/a&gt;) we use a simple &lt;code&gt;fetch()&lt;/code&gt; call to grab an image and display it in an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img&quot;&gt;&lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt;&lt;/a&gt; tag. The &lt;code&gt;fetch()&lt;/code&gt; call returns a promise, which resolves with the &lt;code&gt;Response&lt;/code&gt; object associated with the resource fetch operation. You'll notice that since we are requesting an image, we need to run &lt;a href=&quot;body/blob&quot;&gt;&lt;code&gt;Body.blob&lt;/code&gt;&lt;/a&gt; (&lt;a href=&quot;response&quot;&gt;&lt;code&gt;Response&lt;/code&gt;&lt;/a&gt; implements body) to give the response its correct MIME type.</source>
          <target state="translated">在我们的&lt;a href=&quot;https://github.com/mdn/fetch-examples/tree/master/basic-fetch&quot;&gt;基本提取示例&lt;/a&gt;（&lt;a href=&quot;http://mdn.github.io/fetch-examples/basic-fetch/&quot;&gt;实时运行示例&lt;/a&gt;）中，我们使用一个简单的 &lt;code&gt;fetch()&lt;/code&gt; 调用来捕获图像并将其显示在&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img&quot;&gt; &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; &lt;/a&gt;标记中。的 &lt;code&gt;fetch()&lt;/code&gt; 调用返回一个承诺，其与做出决议 &lt;code&gt;Response&lt;/code&gt; 与所述资源相关联的对象提取操作。您会注意到，由于我们正在请求图像，因此我们需要运行&lt;a href=&quot;body/blob&quot;&gt; &lt;code&gt;Body.blob&lt;/code&gt; &lt;/a&gt;（&lt;a href=&quot;response&quot;&gt; &lt;code&gt;Response&lt;/code&gt; &lt;/a&gt;实现主体）以为响应提供正确的MIME类型。</target>
        </trans-unit>
        <trans-unit id="3c3708ec93d13a062b8e98bc5aee35d05de5a091" translate="yes" xml:space="preserve">
          <source>In our &lt;a href=&quot;https://github.com/mdn/fetch-examples/tree/master/basic-fetch&quot;&gt;basic fetch example&lt;/a&gt; (&lt;a href=&quot;https://mdn.github.io/fetch-examples/basic-fetch/&quot;&gt;run example live&lt;/a&gt;) we use a simple &lt;code&gt;fetch()&lt;/code&gt; call to grab an image and display it in an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img&quot;&gt;&lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt;&lt;/a&gt; tag. The &lt;code&gt;fetch()&lt;/code&gt; call returns a promise, which resolves with the &lt;code&gt;Response&lt;/code&gt; object associated with the resource fetch operation. You'll notice that since we are requesting an image, we need to run &lt;a href=&quot;body/blob&quot;&gt;&lt;code&gt;Body.blob&lt;/code&gt;&lt;/a&gt; (&lt;a href=&quot;response&quot;&gt;&lt;code&gt;Response&lt;/code&gt;&lt;/a&gt; implements body) to give the response its correct MIME type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5a5837fac2c53936e626ad72a9dc42b1ca8ce3d" translate="yes" xml:space="preserve">
          <source>In our &lt;a href=&quot;https://github.com/mdn/fetch-examples/tree/master/fetch-json&quot;&gt;fetch json example&lt;/a&gt; (run &lt;a href=&quot;http://mdn.github.io/fetch-examples/fetch-json/&quot;&gt;fetch json live&lt;/a&gt;), we create a new request using the &lt;a href=&quot;../request/request&quot;&gt;&lt;code&gt;Request.Request&lt;/code&gt;&lt;/a&gt; constructor, then use it to fetch a &lt;code&gt;.json&lt;/code&gt; file. When the fetch is successful, we read and parse the data using &lt;code&gt;json()&lt;/code&gt;, then read values out of the resulting objects as you'd expect and insert them into list items to display our product data.</source>
          <target state="translated">在我们的&lt;a href=&quot;https://github.com/mdn/fetch-examples/tree/master/fetch-json&quot;&gt;获取json示例&lt;/a&gt;（运行&lt;a href=&quot;http://mdn.github.io/fetch-examples/fetch-json/&quot;&gt;fetch json live&lt;/a&gt;）中，我们使用&lt;a href=&quot;../request/request&quot;&gt; &lt;code&gt;Request.Request&lt;/code&gt; &lt;/a&gt;构造函数创建一个新请求，然后使用它来获取 &lt;code&gt;.json&lt;/code&gt; 文件。提取成功后，我们使用 &lt;code&gt;json()&lt;/code&gt; 读取和解析数据，然后按照您的期望从结果对象中读取值，并将其插入列表项以显示我们的产品数据。</target>
        </trans-unit>
        <trans-unit id="7ae241e56a62bc67c9d4136f6fe8a9f4a2e03d27" translate="yes" xml:space="preserve">
          <source>In our &lt;a href=&quot;https://github.com/mdn/fetch-examples/tree/master/fetch-json&quot;&gt;fetch json example&lt;/a&gt; (run &lt;a href=&quot;https://mdn.github.io/fetch-examples/fetch-json/&quot;&gt;fetch json live&lt;/a&gt;), we create a new request using the &lt;a href=&quot;../request/request&quot;&gt;&lt;code&gt;Request.Request&lt;/code&gt;&lt;/a&gt; constructor, then use it to fetch a &lt;code&gt;.json&lt;/code&gt; file. When the fetch is successful, we read and parse the data using &lt;code&gt;json()&lt;/code&gt;, then read values out of the resulting objects as you'd expect and insert them into list items to display our product data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33598b258d8cdb59feb13ce2af053fa7a45fa3e5" translate="yes" xml:space="preserve">
          <source>In our &lt;a href=&quot;https://github.com/mdn/fetch-examples/tree/master/fetch-request&quot;&gt;Fetch Request example&lt;/a&gt; (see &lt;a href=&quot;http://mdn.github.io/fetch-examples/fetch-request/&quot;&gt;Fetch Request live&lt;/a&gt;) we create a new &lt;code&gt;Request&lt;/code&gt; object using the constructor, then fetch it using a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/GlobalFetch/fetch&quot;&gt;&lt;code&gt;GlobalFetch.fetch&lt;/code&gt;&lt;/a&gt; call. Since we are fetching an image, we run &lt;a href=&quot;../body/blob&quot;&gt;&lt;code&gt;Body.blob&lt;/code&gt;&lt;/a&gt; on the response to give it the proper MIME type so it will be handled properly, then create an Object URL of it and display it in an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img&quot;&gt;&lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt;&lt;/a&gt; element.</source>
          <target state="translated">在我们的&lt;a href=&quot;https://github.com/mdn/fetch-examples/tree/master/fetch-request&quot;&gt;Fetch Request示例中&lt;/a&gt;（请参阅&lt;a href=&quot;http://mdn.github.io/fetch-examples/fetch-request/&quot;&gt;Fetch Request live&lt;/a&gt;），我们使用构造函数创建了一个新的 &lt;code&gt;Request&lt;/code&gt; 对象，然后使用&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/GlobalFetch/fetch&quot;&gt; &lt;code&gt;GlobalFetch.fetch&lt;/code&gt; &lt;/a&gt;调用来获取它。由于我们正在获取图像，因此我们在响应上运行&lt;a href=&quot;../body/blob&quot;&gt; &lt;code&gt;Body.blob&lt;/code&gt; &lt;/a&gt;以为其提供适当的MIME类型，以便对其进行正确处理，然后为其创建对象URL并将其显示在&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img&quot;&gt; &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; &lt;/a&gt;元素中。</target>
        </trans-unit>
        <trans-unit id="1ac15390cc020979be92c6b7e3dd8af32b67ef87" translate="yes" xml:space="preserve">
          <source>In our &lt;a href=&quot;https://github.com/mdn/fetch-examples/tree/master/fetch-request&quot;&gt;Fetch Request example&lt;/a&gt; (see &lt;a href=&quot;https://mdn.github.io/fetch-examples/fetch-request/&quot;&gt;Fetch Request live&lt;/a&gt;) we create a new &lt;a href=&quot;../request&quot;&gt;&lt;code&gt;Request&lt;/code&gt;&lt;/a&gt; object using the relevant constructor, then fetch it using a &lt;code&gt;fetch()&lt;/code&gt; call. Since we are fetching an image, we run &lt;a href=&quot;../body/blob&quot;&gt;&lt;code&gt;Body.blob()&lt;/code&gt;&lt;/a&gt; on the response to give it the proper MIME type so it will be handled properly, then create an Object URL of it and display it in an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img&quot;&gt;&lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt;&lt;/a&gt; element.</source>
          <target state="translated">在我们的&lt;a href=&quot;https://github.com/mdn/fetch-examples/tree/master/fetch-request&quot;&gt;Fetch Request示例中&lt;/a&gt;（请参阅&lt;a href=&quot;https://mdn.github.io/fetch-examples/fetch-request/&quot;&gt;Fetch Request live&lt;/a&gt;），我们使用相关的构造函数创建一个新的&lt;a href=&quot;../request&quot;&gt; &lt;code&gt;Request&lt;/code&gt; &lt;/a&gt;对象，然后使用 &lt;code&gt;fetch()&lt;/code&gt; 调用来获取它。由于我们正在获取图像，因此我们在响应上运行&lt;a href=&quot;../body/blob&quot;&gt; &lt;code&gt;Body.blob()&lt;/code&gt; &lt;/a&gt;以为其提供适当的MIME类型，以便对其进行正确处理，然后为其创建对象URL并将其显示在&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img&quot;&gt; &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; &lt;/a&gt;元素中。</target>
        </trans-unit>
        <trans-unit id="d1791256ce709863d7e36df1d89b06276f8f86aa" translate="yes" xml:space="preserve">
          <source>In our &lt;a href=&quot;https://github.com/mdn/fetch-examples/tree/master/fetch-request&quot;&gt;Fetch Request example&lt;/a&gt; (see &lt;a href=&quot;https://mdn.github.io/fetch-examples/fetch-request/&quot;&gt;Fetch Request live&lt;/a&gt;) we create a new &lt;code&gt;Request&lt;/code&gt; object using the constructor, then fetch it using a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/GlobalFetch/fetch&quot;&gt;&lt;code&gt;GlobalFetch.fetch&lt;/code&gt;&lt;/a&gt; call. Since we are fetching an image, we run &lt;a href=&quot;../body/blob&quot;&gt;&lt;code&gt;Body.blob&lt;/code&gt;&lt;/a&gt; on the response to give it the proper MIME type so it will be handled properly, then create an Object URL of it and display it in an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img&quot;&gt;&lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt;&lt;/a&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b73fce4a7cf8dd740fcaa9165fde287eca56939" translate="yes" xml:space="preserve">
          <source>In our &lt;a href=&quot;https://github.com/mdn/fetch-examples/tree/master/fetch-request&quot;&gt;fetch request example&lt;/a&gt; (run &lt;a href=&quot;http://mdn.github.io/fetch-examples/fetch-request/&quot;&gt;fetch request live&lt;/a&gt;), we create a new request using the &lt;a href=&quot;../request/request&quot;&gt;&lt;code&gt;Request.Request&lt;/code&gt;&lt;/a&gt; constructor, then use it to fetch a JPG. When the fetch is successful, we read a &lt;a href=&quot;../blob&quot;&gt;&lt;code&gt;Blob&lt;/code&gt;&lt;/a&gt; out of the response using &lt;code&gt;blob()&lt;/code&gt;, put it into an object URL using &lt;a href=&quot;../url/createobjecturl&quot;&gt;&lt;code&gt;URL.createObjectURL&lt;/code&gt;&lt;/a&gt;, and then set that URL as the source of an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img&quot;&gt;&lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt;&lt;/a&gt; element to display the image.</source>
          <target state="translated">在我们的&lt;a href=&quot;https://github.com/mdn/fetch-examples/tree/master/fetch-request&quot;&gt;获取请求示例&lt;/a&gt;（运行&lt;a href=&quot;http://mdn.github.io/fetch-examples/fetch-request/&quot;&gt;实时获取请求&lt;/a&gt;）中，我们使用&lt;a href=&quot;../request/request&quot;&gt; &lt;code&gt;Request.Request&lt;/code&gt; &lt;/a&gt;构造函数创建一个新请求，然后使用它来获取JPG。成功获取后，我们使用 &lt;code&gt;blob()&lt;/code&gt; 从响应中读取一个&lt;a href=&quot;../blob&quot;&gt; &lt;code&gt;Blob&lt;/code&gt; &lt;/a&gt;，然后使用&lt;a href=&quot;../url/createobjecturl&quot;&gt; &lt;code&gt;URL.createObjectURL&lt;/code&gt; &lt;/a&gt;将其放入对象URL中，然后将该URL设置为&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img&quot;&gt; &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; &lt;/a&gt;元素的源以显示图像。</target>
        </trans-unit>
        <trans-unit id="5063e155aa1435ac6704658a0d22b5a136569cc3" translate="yes" xml:space="preserve">
          <source>In our &lt;a href=&quot;https://github.com/mdn/fetch-examples/tree/master/fetch-request&quot;&gt;fetch request example&lt;/a&gt; (run &lt;a href=&quot;https://mdn.github.io/fetch-examples/fetch-request/&quot;&gt;fetch request live&lt;/a&gt;), we create a new request using the &lt;a href=&quot;../request/request&quot;&gt;&lt;code&gt;Request.Request&lt;/code&gt;&lt;/a&gt; constructor, then use it to fetch a JPG. When the fetch is successful, we read a &lt;a href=&quot;../blob&quot;&gt;&lt;code&gt;Blob&lt;/code&gt;&lt;/a&gt; out of the response using &lt;code&gt;blob()&lt;/code&gt;, put it into an object URL using &lt;a href=&quot;../url/createobjecturl&quot;&gt;&lt;code&gt;URL.createObjectURL&lt;/code&gt;&lt;/a&gt;, and then set that URL as the source of an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img&quot;&gt;&lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt;&lt;/a&gt; element to display the image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e49ee4ec9b5aad393af7294108af5db41d880394" translate="yes" xml:space="preserve">
          <source>In our &lt;a href=&quot;https://github.com/mdn/fetch-examples/tree/master/fetch-request-with-init&quot;&gt;Fetch Request with init example&lt;/a&gt; (see &lt;a href=&quot;http://mdn.github.io/fetch-examples/fetch-request-with-init/&quot;&gt;Fetch Request init live&lt;/a&gt;) we do the same thing except that we pass in an init object when we invoke &lt;code&gt;fetch()&lt;/code&gt;:</source>
          <target state="translated">在&lt;a href=&quot;https://github.com/mdn/fetch-examples/tree/master/fetch-request-with-init&quot;&gt;带有init&lt;/a&gt;的Fetch Request示例中（请参阅&lt;a href=&quot;http://mdn.github.io/fetch-examples/fetch-request-with-init/&quot;&gt;Fetch Request init live&lt;/a&gt;），我们做同样的事情，除了在调用 &lt;code&gt;fetch()&lt;/code&gt; 时传递init对象：</target>
        </trans-unit>
        <trans-unit id="546fd7ea9d0c39175d2380caf1fd3c0790c4d912" translate="yes" xml:space="preserve">
          <source>In our &lt;a href=&quot;https://github.com/mdn/fetch-examples/tree/master/fetch-request-with-init&quot;&gt;Fetch Request with init example&lt;/a&gt; (see &lt;a href=&quot;https://mdn.github.io/fetch-examples/fetch-request-with-init/&quot;&gt;Fetch Request init live&lt;/a&gt;) we do the same thing except that we pass in an init object when we invoke &lt;code&gt;fetch()&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa15d07ba21295882ff149b53a3dba8adc14c5dc" translate="yes" xml:space="preserve">
          <source>In our &lt;a href=&quot;https://github.com/mdn/fetch-examples/tree/master/fetch-response&quot;&gt;Fetch Response example&lt;/a&gt; (see &lt;a href=&quot;http://mdn.github.io/fetch-examples/fetch-response/&quot;&gt;Fetch Response live&lt;/a&gt;) we create a new &lt;a href=&quot;../request&quot;&gt;&lt;code&gt;Request&lt;/code&gt;&lt;/a&gt; object using the &lt;a href=&quot;../request/request&quot;&gt;&lt;code&gt;Request()&lt;/code&gt;&lt;/a&gt; constructor, passing it a JPG path. We then fetch this request using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/GlobalFetch/fetch&quot;&gt;&lt;code&gt;fetch()&lt;/code&gt;&lt;/a&gt;, extract a blob from the response using &lt;a href=&quot;../body/blob&quot;&gt;&lt;code&gt;Body.blob&lt;/code&gt;&lt;/a&gt;, create an object URL out of it using &lt;a href=&quot;../url/createobjecturl&quot;&gt;&lt;code&gt;URL.createObjectURL&lt;/code&gt;&lt;/a&gt;, and display this in an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img&quot;&gt;&lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在我们的&lt;a href=&quot;https://github.com/mdn/fetch-examples/tree/master/fetch-response&quot;&gt;获取响应示例中&lt;/a&gt;（请参阅&lt;a href=&quot;http://mdn.github.io/fetch-examples/fetch-response/&quot;&gt;实时获取响应&lt;/a&gt;），我们使用&lt;a href=&quot;../request/request&quot;&gt; &lt;code&gt;Request()&lt;/code&gt; &lt;/a&gt;构造函数创建一个新的&lt;a href=&quot;../request&quot;&gt; &lt;code&gt;Request&lt;/code&gt; &lt;/a&gt;对象，并向其传递JPG路径。然后，我们使用这个取请求&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/GlobalFetch/fetch&quot;&gt; &lt;code&gt;fetch()&lt;/code&gt; &lt;/a&gt;，提取使用从所述响应一个blob &lt;a href=&quot;../body/blob&quot;&gt; &lt;code&gt;Body.blob&lt;/code&gt; &lt;/a&gt;，创建一个对象URL出它使用的&lt;a href=&quot;../url/createobjecturl&quot;&gt; &lt;code&gt;URL.createObjectURL&lt;/code&gt; &lt;/a&gt;，并且在一个显示此&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img&quot;&gt; &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="665c8210d0a86cdfd980ce3198e2c1e460bd929c" translate="yes" xml:space="preserve">
          <source>In our &lt;a href=&quot;https://github.com/mdn/fetch-examples/tree/master/fetch-response&quot;&gt;Fetch Response example&lt;/a&gt; (see &lt;a href=&quot;http://mdn.github.io/fetch-examples/fetch-response/&quot;&gt;Fetch Response live&lt;/a&gt;) we create a new &lt;code&gt;Response&lt;/code&gt; object using the constructor, passing it a new &lt;a href=&quot;../blob&quot;&gt;&lt;code&gt;Blob&lt;/code&gt;&lt;/a&gt; as a body, and an init object containing a custom &lt;code&gt;status&lt;/code&gt; and &lt;code&gt;statusText&lt;/code&gt;:</source>
          <target state="translated">在我们的&lt;a href=&quot;https://github.com/mdn/fetch-examples/tree/master/fetch-response&quot;&gt;Fetch Response示例中&lt;/a&gt;（请参阅&lt;a href=&quot;http://mdn.github.io/fetch-examples/fetch-response/&quot;&gt;Fetch Response live&lt;/a&gt;），我们使用构造函数创建了一个新的 &lt;code&gt;Response&lt;/code&gt; 对象，将一个新的&lt;a href=&quot;../blob&quot;&gt; &lt;code&gt;Blob&lt;/code&gt; &lt;/a&gt;作为主体传递给它，并将一个包含自定义 &lt;code&gt;status&lt;/code&gt; 和 &lt;code&gt;statusText&lt;/code&gt; 的初始化对象传递给了它：</target>
        </trans-unit>
        <trans-unit id="5fe58fa424b62eab748986ef8e888fcc9f78c8c8" translate="yes" xml:space="preserve">
          <source>In our &lt;a href=&quot;https://github.com/mdn/fetch-examples/tree/master/fetch-response&quot;&gt;Fetch Response example&lt;/a&gt; (see &lt;a href=&quot;https://mdn.github.io/fetch-examples/fetch-response/&quot;&gt;Fetch Response live&lt;/a&gt;) we create a new &lt;a href=&quot;../request&quot;&gt;&lt;code&gt;Request&lt;/code&gt;&lt;/a&gt; object using the &lt;a href=&quot;../request/request&quot;&gt;&lt;code&gt;Request()&lt;/code&gt;&lt;/a&gt; constructor, passing it a JPG path. We then fetch this request using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/GlobalFetch/fetch&quot;&gt;&lt;code&gt;fetch()&lt;/code&gt;&lt;/a&gt;, extract a blob from the response using &lt;a href=&quot;../body/blob&quot;&gt;&lt;code&gt;Body.blob&lt;/code&gt;&lt;/a&gt;, create an object URL out of it using &lt;a href=&quot;../url/createobjecturl&quot;&gt;&lt;code&gt;URL.createObjectURL&lt;/code&gt;&lt;/a&gt;, and display this in an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img&quot;&gt;&lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c6b787266439d11eee12f8d3fb894fc6c665818" translate="yes" xml:space="preserve">
          <source>In our &lt;a href=&quot;https://github.com/mdn/fetch-examples/tree/master/fetch-response&quot;&gt;Fetch Response example&lt;/a&gt; (see &lt;a href=&quot;https://mdn.github.io/fetch-examples/fetch-response/&quot;&gt;Fetch Response live&lt;/a&gt;) we create a new &lt;code&gt;Response&lt;/code&gt; object using the constructor, passing it a new &lt;a href=&quot;../blob&quot;&gt;&lt;code&gt;Blob&lt;/code&gt;&lt;/a&gt; as a body, and an init object containing a custom &lt;code&gt;status&lt;/code&gt; and &lt;code&gt;statusText&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96e27f02256264c5a91b2636219a5045584adc7e" translate="yes" xml:space="preserve">
          <source>In our &lt;a href=&quot;https://github.com/mdn/fetch-examples/tree/master/fetch-text&quot;&gt;fetch text example&lt;/a&gt; (run &lt;a href=&quot;http://mdn.github.io/fetch-examples/fetch-text/&quot;&gt;fetch text live&lt;/a&gt;), we have an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/article&quot;&gt;&lt;code&gt;&amp;lt;article&amp;gt;&lt;/code&gt;&lt;/a&gt; element and three links (stored in the &lt;code&gt;myLinks&lt;/code&gt; array.) First, we loop through all of these and give each one an &lt;code&gt;onclick&lt;/code&gt; event handler so that the &lt;code&gt;getData()&lt;/code&gt; function is run &amp;mdash; with the link's &lt;code&gt;data-page&lt;/code&gt; identifier passed to it as an argument &amp;mdash; when one of the links is clicked.</source>
          <target state="translated">在我们的&lt;a href=&quot;https://github.com/mdn/fetch-examples/tree/master/fetch-text&quot;&gt;获取文本示例&lt;/a&gt;（运行&lt;a href=&quot;http://mdn.github.io/fetch-examples/fetch-text/&quot;&gt;实时获取文本&lt;/a&gt;）中，我们有一个&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/article&quot;&gt; &lt;code&gt;&amp;lt;article&amp;gt;&lt;/code&gt; &lt;/a&gt;元素和三个链接（存储在 &lt;code&gt;myLinks&lt;/code&gt; 数组中。）首先，我们遍历所有这些链接，并为每个链接提供一个 &lt;code&gt;onclick&lt;/code&gt; 事件处理程序，以便 &lt;code&gt;getData()&lt;/code&gt; 函数运行- 单击链接之一时，将链接的 &lt;code&gt;data-page&lt;/code&gt; 标识符作为参数传递给它。</target>
        </trans-unit>
        <trans-unit id="72a9b5f3c66003cb4e2114ac6995b4b31910f37c" translate="yes" xml:space="preserve">
          <source>In our &lt;a href=&quot;https://github.com/mdn/fetch-examples/tree/master/fetch-text&quot;&gt;fetch text example&lt;/a&gt; (run &lt;a href=&quot;https://mdn.github.io/fetch-examples/fetch-text/&quot;&gt;fetch text live&lt;/a&gt;), we have an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/article&quot;&gt;&lt;code&gt;&amp;lt;article&amp;gt;&lt;/code&gt;&lt;/a&gt; element and three links (stored in the &lt;code&gt;myLinks&lt;/code&gt; array.) First, we loop through all of these and give each one an &lt;code&gt;onclick&lt;/code&gt; event handler so that the &lt;code&gt;getData()&lt;/code&gt; function is run &amp;mdash; with the link's &lt;code&gt;data-page&lt;/code&gt; identifier passed to it as an argument &amp;mdash; when one of the links is clicked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c74a1899d542a1f17ec28a78d061c7d3c322554c" translate="yes" xml:space="preserve">
          <source>In our &lt;a href=&quot;https://github.com/mdn/simple-shared-worker&quot;&gt;Basic shared worker example&lt;/a&gt; (&lt;a href=&quot;http://mdn.github.io/simple-shared-worker/&quot;&gt;run shared worker&lt;/a&gt;), we have two HTML pages, each of which uses some JavaScript to perform a simple calculation. The different scripts are using the same worker file to perform the calculation &amp;mdash; they can both access it, even if their pages are running inside different windows.</source>
          <target state="translated">在我们的&lt;a href=&quot;https://github.com/mdn/simple-shared-worker&quot;&gt;Basic shared worker示例&lt;/a&gt;（&lt;a href=&quot;http://mdn.github.io/simple-shared-worker/&quot;&gt;run shared worker&lt;/a&gt;）中，我们有两个HTML页面，每个页面都使用一些JavaScript来执行简单的计算。不同的脚本使用相同的工作文件来执行计算-即使它们的页面在不同的窗口中运行，它们也可以访问该文件。</target>
        </trans-unit>
        <trans-unit id="62205317399cbeb87e40ddac8e483eba79380741" translate="yes" xml:space="preserve">
          <source>In our &lt;a href=&quot;https://github.com/mdn/simple-shared-worker&quot;&gt;Basic shared worker example&lt;/a&gt; (&lt;a href=&quot;https://mdn.github.io/simple-shared-worker/&quot;&gt;run shared worker&lt;/a&gt;), we have two HTML pages, each of which uses some JavaScript to perform a simple calculation. The different scripts are using the same worker file to perform the calculation &amp;mdash; they can both access it, even if their pages are running inside different windows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a52dcb200ff811c53a01149609f176603f2ec40" translate="yes" xml:space="preserve">
          <source>In our &lt;a href=&quot;https://github.com/mdn/web-components-examples/tree/master/simple-template&quot;&gt;simple-template example&lt;/a&gt; (&lt;a href=&quot;https://mdn.github.io/web-components-examples/simple-template/&quot;&gt;see it live&lt;/a&gt;), we create a trivial custom element example called &lt;code&gt;&amp;lt;my-paragraph&amp;gt;&lt;/code&gt; in which a shadow root is attached and then populated using the contents of a template that contains a slot named &lt;code&gt;my-text&lt;/code&gt;.</source>
          <target state="translated">在我们的&lt;a href=&quot;https://github.com/mdn/web-components-examples/tree/master/simple-template&quot;&gt;简单模板示例&lt;/a&gt;（&lt;a href=&quot;https://mdn.github.io/web-components-examples/simple-template/&quot;&gt;现场观看&lt;/a&gt;）中，我们创建了一个名为 &lt;code&gt;&amp;lt;my-paragraph&amp;gt;&lt;/code&gt; 的简单自定义元素示例，其中附加了影子根，然后使用包含名为 &lt;code&gt;my-text&lt;/code&gt; 的插槽的模板内容进行填充。</target>
        </trans-unit>
        <trans-unit id="7d243b03f6d86fe5242e67b052f046fa1fec14bc" translate="yes" xml:space="preserve">
          <source>In our &lt;a href=&quot;https://mdn.github.io/dom-examples/screenleft-screentop/&quot;&gt;screenleft-screentop&lt;/a&gt; example, you'll see a canvas onto which has been drawn a circle. In this example we are using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/window/screenLeft&quot;&gt;&lt;code&gt;Window.screenLeft&lt;/code&gt;&lt;/a&gt;/&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/window/screenTop&quot;&gt;&lt;code&gt;Window.screenTop&lt;/code&gt;&lt;/a&gt; plus &lt;a href=&quot;requestanimationframe&quot;&gt;&lt;code&gt;Window.requestAnimationFrame()&lt;/code&gt;&lt;/a&gt; to constantly redraw the circle in the same physical position on the screen, even if the window position is moved.</source>
          <target state="translated">在我们的&lt;a href=&quot;https://mdn.github.io/dom-examples/screenleft-screentop/&quot;&gt;screenleft-screentop&lt;/a&gt;示例中，您将看到一个在其上绘制了圆圈的画布。在这个例子中我们使用&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/window/screenLeft&quot;&gt; &lt;code&gt;Window.screenLeft&lt;/code&gt; &lt;/a&gt; / &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/window/screenTop&quot;&gt; &lt;code&gt;Window.screenTop&lt;/code&gt; &lt;/a&gt;加&lt;a href=&quot;requestanimationframe&quot;&gt; &lt;code&gt;Window.requestAnimationFrame()&lt;/code&gt; &lt;/a&gt;不断重绘在屏幕上的相同物理位置的圆，即使窗口位置移动。</target>
        </trans-unit>
        <trans-unit id="74c680f742b2a10e14602c5e84ba9854962bbedf" translate="yes" xml:space="preserve">
          <source>In our &lt;a href=&quot;https://mdn.github.io/dom-examples/screenleft-screentop/&quot;&gt;screenleft-screentop&lt;/a&gt; example, you'll see a canvas onto which has been drawn a circle. In this example we are using &lt;code&gt;screenLeft&lt;/code&gt;/&lt;code&gt;screenTop&lt;/code&gt; plus &lt;a href=&quot;requestanimationframe&quot;&gt;&lt;code&gt;Window.requestAnimationFrame()&lt;/code&gt;&lt;/a&gt; to constantly redraw the circle in the same physical position on the screen, even if the window position is moved.</source>
          <target state="translated">在我们的&lt;a href=&quot;https://mdn.github.io/dom-examples/screenleft-screentop/&quot;&gt;screenleft-screentop&lt;/a&gt;示例中，您将看到一个在其上绘制了圆圈的画布。在此示例中，我们使用 &lt;code&gt;screenLeft&lt;/code&gt; / &lt;code&gt;screenTop&lt;/code&gt; 加上&lt;a href=&quot;requestanimationframe&quot;&gt; &lt;code&gt;Window.requestAnimationFrame()&lt;/code&gt; &lt;/a&gt;在屏幕上相同的物理位置不断绘制圆，即使移动了窗口位置也是如此。</target>
        </trans-unit>
        <trans-unit id="6e4a5bddabd7d835f9e44b124c0a3fca92d1c53e" translate="yes" xml:space="preserve">
          <source>In our &lt;a href=&quot;https://mdn.github.io/dom-examples/streams/simple-pump.html&quot;&gt;simple stream pump&lt;/a&gt; example we fetch an image, expose the response's stream using &lt;code&gt;response.body&lt;/code&gt;, create a reader using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Body/getReader&quot;&gt;&lt;code&gt;ReadableStream.getReader()&lt;/code&gt;&lt;/a&gt;, then enqueue that stream's chunks into a second, custom readable stream &amp;mdash; effectively creating an identical copy of the image.</source>
          <target state="translated">在&lt;a href=&quot;https://mdn.github.io/dom-examples/streams/simple-pump.html&quot;&gt;简单的流泵&lt;/a&gt;示例中，我们获取图像，使用 &lt;code&gt;response.body&lt;/code&gt; 公开响应的流，使用&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Body/getReader&quot;&gt; &lt;code&gt;ReadableStream.getReader()&lt;/code&gt; &lt;/a&gt;创建读取器，然后将该流的块放入第二个自定义可读流中，从而有效地创建了相同的副本。图片。</target>
        </trans-unit>
        <trans-unit id="22e305a832fce0d83b4f9af63ebf0741e3108c8a" translate="yes" xml:space="preserve">
          <source>In our &lt;a href=&quot;https://mdn.github.io/emogotchi/&quot;&gt;Emogotchi demo&lt;/a&gt; (&lt;a href=&quot;https://github.com/mdn/emogotchi&quot;&gt;see source code&lt;/a&gt;), we run a simple &lt;code&gt;spawnNotification()&lt;/code&gt; function when we want to fire a notification &amp;mdash; this is passed arguments to specify the body, icon and title we want, then it creates the necessary &lt;code&gt;options&lt;/code&gt; object and fires the notification using the &lt;a href=&quot;notification&quot;&gt;&lt;code&gt;Notification()&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">在我们的&lt;a href=&quot;https://mdn.github.io/emogotchi/&quot;&gt;Emogotchi演示中&lt;/a&gt;（&lt;a href=&quot;https://github.com/mdn/emogotchi&quot;&gt;请参见源代码&lt;/a&gt;），当我们要触发通知时，我们运行一个简单的 &lt;code&gt;spawnNotification()&lt;/code&gt; 函数-传递参数以指定所需的正文，图标和标题，然后创建必要的 &lt;code&gt;options&lt;/code&gt; 对象并触发使用&lt;a href=&quot;notification&quot;&gt; &lt;code&gt;Notification()&lt;/code&gt; &lt;/a&gt;构造函数的通知。</target>
        </trans-unit>
        <trans-unit id="683a603487205cb062446c6eb51dc112af4518a7" translate="yes" xml:space="preserve">
          <source>In our &lt;a href=&quot;https://mdn.github.io/emogotchi/&quot;&gt;Emogotchi demo&lt;/a&gt; (&lt;a href=&quot;https://github.com/mdn/emogotchi&quot;&gt;see source code&lt;/a&gt;), we run a simple &lt;code&gt;spawnNotification()&lt;/code&gt; function when we want to fire a notification &amp;mdash; this is passed arguments to specify the body, icon and title we want, then it creates the necessary &lt;code&gt;options&lt;/code&gt; object and fires the notification using the &lt;code&gt;Notification()&lt;/code&gt; constructor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2062739bd8de15d0be159e878962bb0b9199b597" translate="yes" xml:space="preserve">
          <source>In our &lt;a href=&quot;https://mdn.github.io/fetch-examples/fetch-array-buffer/&quot;&gt;fetch array buffer live&lt;/a&gt;, we have a Play button. When pressed, the &lt;code&gt;getData()&lt;/code&gt; function is run. Note that before playing full audio file will be downloaded. If you need to play ogg during downloading (stream it) - consider &lt;a href=&quot;../htmlaudioelement&quot;&gt;&lt;code&gt;HTMLAudioElement&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5448b0c22b58314f5ef162c1128a5d091ccc5e7c" translate="yes" xml:space="preserve">
          <source>In our &lt;a href=&quot;https://mdn.github.io/webaudio-examples/stereo-panner-node/&quot;&gt;StereoPannerNode example&lt;/a&gt; (&lt;a href=&quot;https://github.com/mdn/webaudio-examples/tree/master/stereo-panner-node&quot;&gt;see source code&lt;/a&gt;) HTML we have a simple &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio&quot;&gt;&lt;code&gt;&amp;lt;audio&amp;gt;&lt;/code&gt;&lt;/a&gt; element along with a slider &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input&quot;&gt;&lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt;&lt;/a&gt; to increase and decrease pan value. In the JavaScript we create a &lt;a href=&quot;../mediaelementaudiosourcenode&quot;&gt;&lt;code&gt;MediaElementAudioSourceNode&lt;/code&gt;&lt;/a&gt; and a &lt;a href=&quot;../stereopannernode&quot;&gt;&lt;code&gt;StereoPannerNode&lt;/code&gt;&lt;/a&gt;, and connect the two together using the &lt;code&gt;connect() &lt;/code&gt;method. We then use an &lt;code&gt;oninput&lt;/code&gt; event handler to change the value of the &lt;a href=&quot;../stereopannernode/pan&quot;&gt;&lt;code&gt;StereoPannerNode.pan&lt;/code&gt;&lt;/a&gt; parameter and update the pan value display when the slider is moved.</source>
          <target state="translated">在我们的&lt;a href=&quot;https://mdn.github.io/webaudio-examples/stereo-panner-node/&quot;&gt;StereoPannerNode示例&lt;/a&gt;（&lt;a href=&quot;https://github.com/mdn/webaudio-examples/tree/master/stereo-panner-node&quot;&gt;请参见源代码&lt;/a&gt;）HTML中，我们有一个简单的&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio&quot;&gt; &lt;code&gt;&amp;lt;audio&amp;gt;&lt;/code&gt; &lt;/a&gt;元素以及一个滑块&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input&quot;&gt; &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; &lt;/a&gt;来增加和减少声像值。在JavaScript中，我们创建了&lt;a href=&quot;../mediaelementaudiosourcenode&quot;&gt; &lt;code&gt;MediaElementAudioSourceNode&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../stereopannernode&quot;&gt; &lt;code&gt;StereoPannerNode&lt;/code&gt; &lt;/a&gt;，并使用 &lt;code&gt;connect() &lt;/code&gt; 方法将两者连接在一起。然后，我们使用 &lt;code&gt;oninput&lt;/code&gt; 事件处理程序来更改&lt;a href=&quot;../stereopannernode/pan&quot;&gt; &lt;code&gt;StereoPannerNode.pan&lt;/code&gt; &lt;/a&gt;参数的值，并在移动滑块时更新声像值显示。</target>
        </trans-unit>
        <trans-unit id="1ef472553ce51c5551cc764c780e04aeb0e15df5" translate="yes" xml:space="preserve">
          <source>In our &lt;a href=&quot;https://mdn.github.io/webaudio-examples/stereo-panner-node/&quot;&gt;StereoPannerNode example&lt;/a&gt; (&lt;a href=&quot;https://github.com/mdn/webaudio-examples/tree/master/stereo-panner-node&quot;&gt;see source code&lt;/a&gt;) HTML we have a simple &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio&quot;&gt;&lt;code&gt;&amp;lt;audio&amp;gt;&lt;/code&gt;&lt;/a&gt; element along with a slider &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input&quot;&gt;&lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt;&lt;/a&gt; to increase and decrease pan value. In the JavaScript we create a &lt;a href=&quot;../mediaelementaudiosourcenode&quot;&gt;&lt;code&gt;MediaElementAudioSourceNode&lt;/code&gt;&lt;/a&gt; and a &lt;a href=&quot;../stereopannernode&quot;&gt;&lt;code&gt;StereoPannerNode&lt;/code&gt;&lt;/a&gt;, and connect the two together using the &lt;code&gt;connect() &lt;/code&gt;method. We then use an &lt;code&gt;oninput&lt;/code&gt; event handler to change the value of the &lt;a href=&quot;pan&quot;&gt;&lt;code&gt;StereoPannerNode.pan&lt;/code&gt;&lt;/a&gt; parameter and update the pan value display when the slider is moved.</source>
          <target state="translated">在我们的&lt;a href=&quot;https://mdn.github.io/webaudio-examples/stereo-panner-node/&quot;&gt;StereoPannerNode示例&lt;/a&gt;（&lt;a href=&quot;https://github.com/mdn/webaudio-examples/tree/master/stereo-panner-node&quot;&gt;请参见源代码&lt;/a&gt;）HTML中，我们有一个简单的&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio&quot;&gt; &lt;code&gt;&amp;lt;audio&amp;gt;&lt;/code&gt; &lt;/a&gt;元素以及一个滑块&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input&quot;&gt; &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; &lt;/a&gt;来增加和减少声像值。在JavaScript中，我们创建了&lt;a href=&quot;../mediaelementaudiosourcenode&quot;&gt; &lt;code&gt;MediaElementAudioSourceNode&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../stereopannernode&quot;&gt; &lt;code&gt;StereoPannerNode&lt;/code&gt; &lt;/a&gt;，并使用 &lt;code&gt;connect() &lt;/code&gt; 方法将两者连接在一起。然后，我们使用 &lt;code&gt;oninput&lt;/code&gt; 事件处理程序来更改&lt;a href=&quot;pan&quot;&gt; &lt;code&gt;StereoPannerNode.pan&lt;/code&gt; &lt;/a&gt;参数的值，并在移动滑块时更新声像值显示。</target>
        </trans-unit>
        <trans-unit id="24b1e8227913f5e438a96548e9512c9d7ab13215" translate="yes" xml:space="preserve">
          <source>In our &lt;a href=&quot;https://mdn.github.io/webaudio-examples/stereo-panner-node/&quot;&gt;StereoPannerNode example&lt;/a&gt; (&lt;a href=&quot;https://github.com/mdn/webaudio-examples/tree/master/stereo-panner-node&quot;&gt;see source code&lt;/a&gt;) HTML we have a simple &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio&quot;&gt;&lt;code&gt;&amp;lt;audio&amp;gt;&lt;/code&gt;&lt;/a&gt; element along with a slider &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input&quot;&gt;&lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt;&lt;/a&gt; to increase and decrease pan value. In the JavaScript we create a &lt;a href=&quot;mediaelementaudiosourcenode&quot;&gt;&lt;code&gt;MediaElementAudioSourceNode&lt;/code&gt;&lt;/a&gt; and a &lt;a href=&quot;stereopannernode&quot;&gt;&lt;code&gt;StereoPannerNode&lt;/code&gt;&lt;/a&gt;, and connect the two together using the &lt;code&gt;connect() &lt;/code&gt;method. We then use an &lt;code&gt;oninput&lt;/code&gt; event handler to change the value of the &lt;a href=&quot;stereopannernode/pan&quot;&gt;&lt;code&gt;StereoPannerNode.pan&lt;/code&gt;&lt;/a&gt; parameter and update the pan value display when the slider is moved.</source>
          <target state="translated">在我们的&lt;a href=&quot;https://mdn.github.io/webaudio-examples/stereo-panner-node/&quot;&gt;StereoPannerNode示例&lt;/a&gt;（&lt;a href=&quot;https://github.com/mdn/webaudio-examples/tree/master/stereo-panner-node&quot;&gt;请参见源代码&lt;/a&gt;）HTML中，我们有一个简单的&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio&quot;&gt; &lt;code&gt;&amp;lt;audio&amp;gt;&lt;/code&gt; &lt;/a&gt;元素以及一个滑块&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input&quot;&gt; &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; &lt;/a&gt;来增加和减少声像值。在JavaScript中，我们创建了&lt;a href=&quot;mediaelementaudiosourcenode&quot;&gt; &lt;code&gt;MediaElementAudioSourceNode&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;stereopannernode&quot;&gt; &lt;code&gt;StereoPannerNode&lt;/code&gt; &lt;/a&gt;，并使用 &lt;code&gt;connect() &lt;/code&gt; 方法将两者连接在一起。然后，我们使用 &lt;code&gt;oninput&lt;/code&gt; 事件处理程序来更改&lt;a href=&quot;stereopannernode/pan&quot;&gt; &lt;code&gt;StereoPannerNode.pan&lt;/code&gt; &lt;/a&gt;参数的值，并在移动滑块时更新声像值显示。</target>
        </trans-unit>
        <trans-unit id="4843f354641ea241795a71b67236c07ac52c08d2" translate="yes" xml:space="preserve">
          <source>In our JavaScript file we get a reference to the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/span&quot;&gt;&lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt;&lt;/a&gt; shown above, then log a reference to the name of the corresponding &lt;code&gt;&amp;lt;slot&amp;gt;&lt;/code&gt; element.</source>
          <target state="translated">在我们的JavaScript文件中，获得对上面显示的&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/span&quot;&gt; &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; &lt;/a&gt;的引用，然后记录对相应 &lt;code&gt;&amp;lt;slot&amp;gt;&lt;/code&gt; 元素的名称的引用。</target>
        </trans-unit>
        <trans-unit id="87cdc4f6fb01a46a3f43555e37d60504ad6e6dd7" translate="yes" xml:space="preserve">
          <source>In our JavaScript file we get a reference to the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/span&quot;&gt;&lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt;&lt;/a&gt; shown above, then log a reference to the original &lt;code&gt;&amp;lt;slot&amp;gt;&lt;/code&gt; element the &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; was inserted in.</source>
          <target state="translated">在我们的JavaScript文件中，获得对上面显示的&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/span&quot;&gt; &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; &lt;/a&gt;的引用，然后记录对 &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; 插入的原始 &lt;code&gt;&amp;lt;slot&amp;gt;&lt;/code&gt; 元素的引用。</target>
        </trans-unit>
        <trans-unit id="ceab9ce6de460ad33a9e2a0900d79499acae975c" translate="yes" xml:space="preserve">
          <source>In our Simple stream pump example, we consume the custom readable stream by passing it into a &lt;a href=&quot;../response/response&quot;&gt;&lt;code&gt;Response&lt;/code&gt;&lt;/a&gt; constructor call, after which we consume it as a blob().</source>
          <target state="translated">在我们的简单流泵示例中，我们通过将自定义可读流传递给&lt;a href=&quot;../response/response&quot;&gt; &lt;code&gt;Response&lt;/code&gt; &lt;/a&gt;构造函数调用来使用它，然后将其作为blob（）使用。</target>
        </trans-unit>
        <trans-unit id="cedc9de0305eebfbe50f45abf0dddefb92a97c35" translate="yes" xml:space="preserve">
          <source>In our basic &lt;a href=&quot;https://github.com/mdn/web-speech-api/tree/master/speak-easy-synthesis&quot;&gt;Speech synthesiser demo&lt;/a&gt;, we first grab a reference to the SpeechSynthesis controller using &lt;code&gt;window.speechSynthesis&lt;/code&gt;. After defining some necessary variables, we retrieve a list of the voices available using &lt;a href=&quot;../speechsynthesis/getvoices&quot;&gt;&lt;code&gt;SpeechSynthesis.getVoices()&lt;/code&gt;&lt;/a&gt; and populate a select menu with them so the user can choose what voice they want.</source>
          <target state="translated">在基本的&lt;a href=&quot;https://github.com/mdn/web-speech-api/tree/master/speak-easy-synthesis&quot;&gt;语音合成器演示中&lt;/a&gt;，我们首先使用 &lt;code&gt;window.speechSynthesis&lt;/code&gt; 来获取对SpeechSynthesis控制器的参考。定义了一些必要的变量后，我们使用&lt;a href=&quot;../speechsynthesis/getvoices&quot;&gt; &lt;code&gt;SpeechSynthesis.getVoices()&lt;/code&gt; &lt;/a&gt;检索可用语音的列表，并使用它们填充选择菜单，以便用户可以选择所需的语音。</target>
        </trans-unit>
        <trans-unit id="10bc88397b40f8468da95f606bd3cb1baa9c28c7" translate="yes" xml:space="preserve">
          <source>In our basic &lt;a href=&quot;https://github.com/mdn/web-speech-api/tree/master/speak-easy-synthesis&quot;&gt;Speech synthesiser demo&lt;/a&gt;, we first grab a reference to the SpeechSynthesis controller using &lt;code&gt;window.speechSynthesis&lt;/code&gt;. After defining some necessary variables, we retrieve a list of the voices available using &lt;a href=&quot;speechsynthesis/getvoices&quot;&gt;&lt;code&gt;SpeechSynthesis.getVoices()&lt;/code&gt;&lt;/a&gt; and populate a select menu with them so the user can choose what voice they want.</source>
          <target state="translated">在基本的&lt;a href=&quot;https://github.com/mdn/web-speech-api/tree/master/speak-easy-synthesis&quot;&gt;语音合成器演示中&lt;/a&gt;，我们首先使用 &lt;code&gt;window.speechSynthesis&lt;/code&gt; 来获取对SpeechSynthesis控制器的参考。定义了一些必要的变量后，我们使用&lt;a href=&quot;speechsynthesis/getvoices&quot;&gt; &lt;code&gt;SpeechSynthesis.getVoices()&lt;/code&gt; &lt;/a&gt;检索可用语音的列表，并使用它们填充选择菜单，以便用户可以选择所需的语音。</target>
        </trans-unit>
        <trans-unit id="7f3902c16a8973e44c8b4760bf85303af8be51ec" translate="yes" xml:space="preserve">
          <source>In our composed-composed-path example (see it live), we define two trivial custom elements, &lt;code&gt;&amp;lt;open-shadow&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;closed-shadow&amp;gt;&lt;/code&gt;, both of which take the contents of their text attribute and insert them into the element's shadow DOM as the text content of a &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; element. The only difference between the two is that their shadow roots are attached with their modes set to &lt;code&gt;open&lt;/code&gt; and &lt;code&gt;closed&lt;/code&gt; respectively.</source>
          <target state="translated">在我们的composited-composed-path示例（实时查看）中，我们定义了两个简单的自定义元素 &lt;code&gt;&amp;lt;open-shadow&amp;gt;&lt;/code&gt; 和 &lt;code&gt;&amp;lt;closed-shadow&amp;gt;&lt;/code&gt; ，这两个元素均采用其text属性的内容并将其插入到元素的阴影中DOM作为 &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; 元素的文本内容。两者之间的唯一区别是它们的阴影根附加有分别设置为 &lt;code&gt;open&lt;/code&gt; 和 &lt;code&gt;closed&lt;/code&gt; 的模式。</target>
        </trans-unit>
        <trans-unit id="548f7889383439313cf256bedd4737c1ccdb4456" translate="yes" xml:space="preserve">
          <source>In our example code we have defined a multiplication function &amp;mdash; &lt;code&gt;multiplyMatrixAndPoint()&lt;/code&gt;:</source>
          <target state="translated">在我们的示例代码中，我们定义了一个乘法函数 &lt;code&gt;multiplyMatrixAndPoint()&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="b491f21954464f6fdc67aba99f7bb95bfd6f9f11" translate="yes" xml:space="preserve">
          <source>In our example we are using the controller&amp;rsquo;s &lt;a href=&quot;../readablestreamdefaultcontroller/enqueue&quot;&gt;&lt;code&gt;enqueue()&lt;/code&gt;&lt;/a&gt; method to enqueue a value into the custom stream after it is read from the fetch body.</source>
          <target state="translated">在我们的示例中，我们使用控制器的&lt;a href=&quot;../readablestreamdefaultcontroller/enqueue&quot;&gt; &lt;code&gt;enqueue()&lt;/code&gt; &lt;/a&gt;方法将值从获取主体中读取后，将其排队到自定义流中。</target>
        </trans-unit>
        <trans-unit id="a07f47e691c12ee34185e61f30d75659b3927288" translate="yes" xml:space="preserve">
          <source>In our example, we are testing the decoding capabilities of a video configuration. The configuration requires the type of media being tested &amp;mdash; e.g. a plain &lt;code&gt;file&lt;/code&gt; or &lt;a href=&quot;../mediasource&quot;&gt;&lt;code&gt;MediaSource&lt;/code&gt;&lt;/a&gt; &amp;mdash; and a &lt;a href=&quot;../videoconfiguration&quot;&gt;&lt;code&gt;VideoConfiguration&lt;/code&gt;&lt;/a&gt; including values for the&lt;code&gt;contentType&lt;/code&gt;, &lt;code&gt;width&lt;/code&gt;, &lt;code&gt;height&lt;/code&gt;, &lt;code&gt;bitrate&lt;/code&gt;, and &lt;code&gt;framerate&lt;/code&gt;&lt;strong&gt;:&lt;/strong&gt;</source>
          <target state="translated">在我们的示例中，我们正在测试视频配置的解码功能。该配置需要测试的媒体类型（例如，纯 &lt;code&gt;file&lt;/code&gt; 或&lt;a href=&quot;../mediasource&quot;&gt; &lt;code&gt;MediaSource&lt;/code&gt; &lt;/a&gt;）以及&lt;a href=&quot;../videoconfiguration&quot;&gt; &lt;code&gt;VideoConfiguration&lt;/code&gt; ,&lt;/a&gt;其中包括 &lt;code&gt;contentType&lt;/code&gt; ， &lt;code&gt;width&lt;/code&gt; ， &lt;code&gt;height&lt;/code&gt; ， &lt;code&gt;bitrate&lt;/code&gt; 和 &lt;code&gt;framerate&lt;/code&gt; 的值&lt;strong&gt;：&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f70c4cf3e23400c73ceb83819675631bf670e470" translate="yes" xml:space="preserve">
          <source>In our simple &lt;a href=&quot;https://github.com/mdn/web-speech-api/tree/master/speech-color-changer&quot;&gt;Speech color changer&lt;/a&gt; example, we create a new &lt;code&gt;SpeechRecognition&lt;/code&gt; object instance using the &lt;a href=&quot;../speechrecognition/speechrecognition&quot;&gt;&lt;code&gt;SpeechRecognition()&lt;/code&gt;&lt;/a&gt; constructor, create a new &lt;a href=&quot;../speechgrammarlist&quot;&gt;&lt;code&gt;SpeechGrammarList&lt;/code&gt;&lt;/a&gt;, add our grammar string to it using the &lt;a href=&quot;addfromstring&quot;&gt;&lt;code&gt;SpeechGrammarList.addFromString&lt;/code&gt;&lt;/a&gt; method, and set it to be the grammar that will be recognised by the &lt;code&gt;SpeechRecognition&lt;/code&gt; instance using the &lt;a href=&quot;../speechrecognition/grammars&quot;&gt;&lt;code&gt;SpeechRecognition.grammars&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="translated">在我们简单的&lt;a href=&quot;https://github.com/mdn/web-speech-api/tree/master/speech-color-changer&quot;&gt;语音换色&lt;/a&gt;例子，我们创建了一个新的 &lt;code&gt;SpeechRecognition&lt;/code&gt; 使用对象实例&lt;a href=&quot;../speechrecognition/speechrecognition&quot;&gt; &lt;code&gt;SpeechRecognition()&lt;/code&gt; &lt;/a&gt;构造函数，创建一个新的&lt;a href=&quot;../speechgrammarlist&quot;&gt; &lt;code&gt;SpeechGrammarList&lt;/code&gt; &lt;/a&gt;，使用我们的语法字符串添加到它&lt;a href=&quot;addfromstring&quot;&gt; &lt;code&gt;SpeechGrammarList.addFromString&lt;/code&gt; &lt;/a&gt;方法，并将其设置为语法，这将是由 &lt;code&gt;SpeechRecognition&lt;/code&gt; 实例使用&lt;a href=&quot;../speechrecognition/grammars&quot;&gt; &lt;code&gt;SpeechRecognition.grammars&lt;/code&gt; &lt;/a&gt;属性识别。</target>
        </trans-unit>
        <trans-unit id="48357f57f72de62af8d9addacb9ecaa3d210de7b" translate="yes" xml:space="preserve">
          <source>In our simple &lt;a href=&quot;https://github.com/mdn/web-speech-api/tree/master/speech-color-changer&quot;&gt;Speech color changer&lt;/a&gt; example, we create a new &lt;code&gt;SpeechRecognition&lt;/code&gt; object instance using the &lt;a href=&quot;speechrecognition/speechrecognition&quot;&gt;&lt;code&gt;SpeechRecognition()&lt;/code&gt;&lt;/a&gt; constructor, create a new &lt;a href=&quot;speechgrammarlist&quot;&gt;&lt;code&gt;SpeechGrammarList&lt;/code&gt;&lt;/a&gt;, add our grammar string to it using the &lt;a href=&quot;speechgrammarlist/addfromstring&quot;&gt;&lt;code&gt;SpeechGrammarList.addFromString&lt;/code&gt;&lt;/a&gt; method, and set it to be the grammar that will be recognised by the &lt;code&gt;SpeechRecognition&lt;/code&gt; instance using the &lt;a href=&quot;speechrecognition/grammars&quot;&gt;&lt;code&gt;SpeechRecognition.grammars&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="translated">在我们简单的&lt;a href=&quot;https://github.com/mdn/web-speech-api/tree/master/speech-color-changer&quot;&gt;语音换色&lt;/a&gt;例子，我们创建了一个新的 &lt;code&gt;SpeechRecognition&lt;/code&gt; 使用对象实例&lt;a href=&quot;speechrecognition/speechrecognition&quot;&gt; &lt;code&gt;SpeechRecognition()&lt;/code&gt; &lt;/a&gt;构造函数，创建一个新的&lt;a href=&quot;speechgrammarlist&quot;&gt; &lt;code&gt;SpeechGrammarList&lt;/code&gt; &lt;/a&gt;，使用我们的语法字符串添加到它&lt;a href=&quot;speechgrammarlist/addfromstring&quot;&gt; &lt;code&gt;SpeechGrammarList.addFromString&lt;/code&gt; &lt;/a&gt;方法，并将其设置为语法，这将是由 &lt;code&gt;SpeechRecognition&lt;/code&gt; 实例使用&lt;a href=&quot;speechrecognition/grammars&quot;&gt; &lt;code&gt;SpeechRecognition.grammars&lt;/code&gt; &lt;/a&gt;属性识别。</target>
        </trans-unit>
        <trans-unit id="6af9da9369fc06dde854a8e586e239d409f0f40c" translate="yes" xml:space="preserve">
          <source>In our video decoding example, a &lt;code&gt;TypeError&lt;/code&gt; would be raised if the media configuration passed to the &lt;code&gt;decodingInfo()&lt;/code&gt;method was invalid. The error can be due to the &lt;code&gt;type&lt;/code&gt; not being one of the two possible values, the &lt;code&gt;contentType&lt;/code&gt; not being a valid codec MIMME type, or invalid or omitted definitions required in the &lt;a href=&quot;../videoconfiguration&quot;&gt;&lt;code&gt;VideoConfiguration&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在我们的视频解码示例中，如果传递给 &lt;code&gt;decodingInfo()&lt;/code&gt; 方法的媒体配置无效，则会引发 &lt;code&gt;TypeError&lt;/code&gt; 。该错误可能是由于 &lt;code&gt;type&lt;/code&gt; 不是两个可能的值之一， &lt;code&gt;contentType&lt;/code&gt; 不是有效的编解码器MIMME类型，或者是&lt;a href=&quot;../videoconfiguration&quot;&gt; &lt;code&gt;VideoConfiguration&lt;/code&gt; 中&lt;/a&gt;所需的无效或省略的定义。</target>
        </trans-unit>
        <trans-unit id="444a38410f8eee1ada6ea0e8209c29ec9a64dec4" translate="yes" xml:space="preserve">
          <source>In pages requiring many timers, it can often be difficult to keep track of all of the running timer events. One approach to solving this problem is to store information about the state of a timer in an object. Following is a minimal example of such an abstraction. The constructor architecture explicitly avoids the use of closures. It also offers an alternative way to pass the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this&quot;&gt;&lt;code&gt;this&lt;/code&gt;&lt;/a&gt; object to the callback function (see &lt;a href=&quot;#The_.22this.22_problem&quot;&gt;The &quot;this&quot; problem&lt;/a&gt; for details). The following code is also &lt;a href=&quot;https://github.com/madmurphy/minidaemon.js&quot;&gt;available on GitHub&lt;/a&gt;.</source>
          <target state="translated">在需要许多计时器的页面中，通常很难跟踪所有正在运行的计时器事件。解决此问题的一种方法是在对象中存储有关计时器状态的信息。以下是这种抽象的最小示例。构造函数体系结构明确避免使用闭包。它还提供了将&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this&quot;&gt; &lt;code&gt;this&lt;/code&gt; &lt;/a&gt;对象传递给回调函数的另一种方法（有关详细信息，请参见&lt;a href=&quot;#The_.22this.22_problem&quot;&gt;&amp;ldquo; this&amp;rdquo;问题&lt;/a&gt;）。以下代码&lt;a href=&quot;https://github.com/madmurphy/minidaemon.js&quot;&gt;在GitHub上&lt;/a&gt;也可用。</target>
        </trans-unit>
        <trans-unit id="a4781153838b86061ae7ac471f555a0b2eeb6554" translate="yes" xml:space="preserve">
          <source>In particular, if a developer already has a method in place for connecting two devices, it doesn&amp;rsquo;t make sense for them to have to use another one, defined by the specification, just for WebRTC. Since WebRTC doesn&amp;rsquo;t live in a vacuum, there is likely other connectivity in play, so it makes sense to avoid having to add additional connection channels for signaling if an existing one can be used.</source>
          <target state="translated">特别是，如果开发人员已经有了连接两个设备的方法，那么对于WebRTC而言，他们不必使用规范定义的另一个设备就没有意义。由于WebRTC并非处于真空状态，因此可能还会有其他连通性，因此避免必须添加其他连接通道来发信号通知（如果可以使用现有通道）是有意义的。</target>
        </trans-unit>
        <trans-unit id="480b273d124987d12c16a0c8f4ff78bcac4ee760" translate="yes" xml:space="preserve">
          <source>In particular, note that usage of textures in vertex shaders is only possible if &lt;code&gt;webgl.getParameter(webgl.MAX_VERTEX_TEXTURE_IMAGE_UNITS)&lt;/code&gt; is greater than zero. Typically, this fails on current mobile hardware.</source>
          <target state="translated">特别是，请注意，只有在 &lt;code&gt;webgl.getParameter(webgl.MAX_VERTEX_TEXTURE_IMAGE_UNITS)&lt;/code&gt; 大于零时，才可以在顶点着色器中使用纹理。通常，这在当前的移动硬件上失败。</target>
        </trans-unit>
        <trans-unit id="863023de54e429bfc0d9fe4e4a41838da46ee3d6" translate="yes" xml:space="preserve">
          <source>In particular, the specification doesn't indicate a maximum or minimum number of audio contexts that must be able to be open at the same time, so this is left up to the browser implementations to decide.</source>
          <target state="translated">特别是,规范中并没有指出必须能够同时打开的音频上下文的最大或最小数量,所以这要由浏览器的实现来决定。</target>
        </trans-unit>
        <trans-unit id="e57fac6451e79fec18e227cafa36d4d1a55b1f49" translate="yes" xml:space="preserve">
          <source>In plain words, all asynchronous methods return a request object. If the request has been completed successfully, the result is made available through the &lt;code&gt;result&lt;/code&gt; property and an event indicating success is fired at the request (&lt;a href=&quot;idbrequest/onsuccess&quot;&gt;&lt;code&gt;IDBRequest.onsuccess&lt;/code&gt;&lt;/a&gt;). If an error occurs while performing the operation, the exception is made available through the &lt;code&gt;result&lt;/code&gt; property and an error event is fired (&lt;a href=&quot;idbrequest/onerror&quot;&gt;&lt;code&gt;IDBRequest.onerror&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">简而言之，所有异步方法都返回一个请求对象。如果请求已成功完成，则可通过 &lt;code&gt;result&lt;/code&gt; 属性使结果可用，并在请求处触发一个指示成功的事件（&lt;a href=&quot;idbrequest/onsuccess&quot;&gt; &lt;code&gt;IDBRequest.onsuccess&lt;/code&gt; &lt;/a&gt;）。如果执行操作时发生错误，则可通过 &lt;code&gt;result&lt;/code&gt; 属性使异常可用，并引发错误事件（&lt;a href=&quot;idbrequest/onerror&quot;&gt; &lt;code&gt;IDBRequest.onerror&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="24e59c71bda4325aef46faa4602d34b63b60de52" translate="yes" xml:space="preserve">
          <source>In practice this is easier to do with a library &amp;mdash; the Web Audio API was built to be built upon. If you are about to embark on building something more complex, &lt;a href=&quot;https://tonejs.github.io/&quot;&gt;tone.js&lt;/a&gt; would be a good place to start. However, we want to demonstrate how to build such a demo from first principles, as a learning exercise.</source>
          <target state="translated">实际上，使用库更容易做到这一点-Web Audio API是建立在其基础之上的。如果您打算着手构建更复杂的内容，&lt;a href=&quot;https://tonejs.github.io/&quot;&gt;tone.js&lt;/a&gt;将是一个不错的起点。但是，我们想展示如何从基本原理开始构建这样的演示，作为学习练习。</target>
        </trans-unit>
        <trans-unit id="32516160de0372f860bce99327d1d19a3ef70023" translate="yes" xml:space="preserve">
          <source>In practice, the returned value is a double-precision floating-point value indicating the number of pixels the document is currently scrolled horizontally from the origin, where a positive value means the content is scrolled to the left. If the document is rendered on a subpixel-precise device, then the returned value is also subpixel-precise and may contain a decimal component. If the document isn't scrolled at all left or right, then &lt;code&gt;scrollX&lt;/code&gt; is 0.</source>
          <target state="translated">实际上，返回值是一个双精度浮点值，指示文档当前从原点水平滚动的像素数，其中正值表示内容向左滚动。如果文档是在亚像素精度的设备上呈现的，则返回的值也是亚像素精度的，并且可能包含小数部分。如果文档没有全部向左或向右滚动，则 &lt;code&gt;scrollX&lt;/code&gt; 为0。</target>
        </trans-unit>
        <trans-unit id="c9e4c3224f024b670cafe3c2640c0a1d7b515001" translate="yes" xml:space="preserve">
          <source>In practice, the returned value is a double-precision floating-point value indicating the number of pixels the document is currently scrolled vertically from the origin, where a positive value means the content is scrolled to upward. If the document is rendered on a subpixel-precise device, then the returned value is also subpixel-precise and may contain a decimal component. If the document isn't scrolled at all up or down, then &lt;code&gt;scrollY&lt;/code&gt; is 0.</source>
          <target state="translated">实际上，返回值是一个双精度浮点值，指示文档当前从原点垂直滚动的像素数，其中正值表示内容向上滚动。如果文档是在亚像素精度的设备上呈现的，则返回的值也是亚像素精度的，并且可能包含小数部分。如果文档根本没有上下滚动，则 &lt;code&gt;scrollY&lt;/code&gt; 为0。</target>
        </trans-unit>
        <trans-unit id="295312640161fdff38c2b50bcde9aea3c51e2408" translate="yes" xml:space="preserve">
          <source>In previous DOM specifications this API was defined within the &lt;a href=&quot;../node&quot;&gt;&lt;code&gt;Node&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">在以前的DOM规范中，此API是在&lt;a href=&quot;../node&quot;&gt; &lt;code&gt;Node&lt;/code&gt; &lt;/a&gt;接口中定义的。</target>
        </trans-unit>
        <trans-unit id="9d2c9022f0f0d8e5ecaf15700987363c21780126" translate="yes" xml:space="preserve">
          <source>In rendering environments supporting interactivity, forces the user agent to immediately redraw all regions of the viewport that require updating.</source>
          <target state="translated">在支持交互性的渲染环境中,强制用户代理立即重绘视口中所有需要更新的区域。</target>
        </trans-unit>
        <trans-unit id="adeae07f8e178d7be0eacd5d918d3c410b86f38a" translate="yes" xml:space="preserve">
          <source>In sequence 1 &amp;amp; 3, the &lt;code&gt;KeyboardEvent.key&lt;/code&gt; attribute is defined and is set appropriately to a value according to the rules defined ealier.</source>
          <target state="translated">在序列1和3中，定义了 &lt;code&gt;KeyboardEvent.key&lt;/code&gt; 属性，并根据定义的规则将其适当设置为一个值。</target>
        </trans-unit>
        <trans-unit id="cc146c3c739a1f1ab859df4b0940afcbe4e3c4fd" translate="yes" xml:space="preserve">
          <source>In shared or service workers, the value in the worker might be higher than that of the main context because that window can be created after those workers.</source>
          <target state="translated">在共享或服务工作者中,工作者中的值可能高于主上下文的值,因为该窗口可以在这些工作者之后创建。</target>
        </trans-unit>
        <trans-unit id="e9dd0af79438852a4f8d38f9d9dc72e257be0b7a" translate="yes" xml:space="preserve">
          <source>In short, the &lt;a href=&quot;../mediastreamtrack&quot;&gt;&lt;code&gt;MediaStreamTrack&lt;/code&gt;&lt;/a&gt; method &lt;code&gt;stop()&lt;/code&gt; method stops the track.</source>
          <target state="translated">简而言之，&lt;a href=&quot;../mediastreamtrack&quot;&gt; &lt;code&gt;MediaStreamTrack&lt;/code&gt; &lt;/a&gt;方法 &lt;code&gt;stop()&lt;/code&gt; 方法停止跟踪。</target>
        </trans-unit>
        <trans-unit id="6fe9767585f5a6087e3eefc48ac674b59b8cc1d1" translate="yes" xml:space="preserve">
          <source>In simple words, a binary string is a sequence of 1's and 0's. Javascript is loaded with rich features to manipulate the raw binary data in lower level.</source>
          <target state="translated">简单来说,二进制字符串是一个1和0的序列。Javascript加载了丰富的功能来处理低级别的原始二进制数据。</target>
        </trans-unit>
        <trans-unit id="59a183e4146a1597816ed082d6fe201ce9f7aca4" translate="yes" xml:space="preserve">
          <source>In some GTK-based environments, auto-repeat dispatches a native key-up event automatically during auto-repeat, and there's no way for Gecko to know the difference between a repeated series of keypresses and an auto-repeat. On those platforms, then, an auto-repeat key will generate the following sequence of events:</source>
          <target state="translated">在一些基于GTK的环境中,自动重复过程中会自动派发一个原生的起键事件,而Gecko没有办法知道重复的一系列按键和自动重复之间的区别。那么,在这些平台上,自动重复键会产生以下事件序列。</target>
        </trans-unit>
        <trans-unit id="172174b9f593a512a9a6c6f3a6aa9205ede7b089" translate="yes" xml:space="preserve">
          <source>In some browsers, if a stylesheet is loaded from a different domain, calling &lt;code&gt;cssRules&lt;/code&gt; results in &lt;code&gt;SecurityError&lt;/code&gt;.</source>
          <target state="translated">在某些浏览器中，如果从其他域加载样式表，则调用 &lt;code&gt;cssRules&lt;/code&gt; 会导致 &lt;code&gt;SecurityError&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dce1dcc3b182fd4da4a701ed003a7bf79ced8b8f" translate="yes" xml:space="preserve">
          <source>In some cases, an animation may run on a separate thread or process and will continue updating even while long-running JavaScript delays the main thread. In such a case, setting the &lt;a href=&quot;playbackrate&quot;&gt;&lt;code&gt;playbackRate&lt;/code&gt;&lt;/a&gt; on the animation directly may cause the animation's playback position to jump since its playback position on the main thread may have drifted from the playback position where it is currently running.</source>
          <target state="translated">在某些情况下，即使长时间运行的JavaScript会延迟主线程，动画也可能在单独的线程或进程上运行，并且会继续更新。在这种情况下，直接在动画上设置&lt;a href=&quot;playbackrate&quot;&gt; &lt;code&gt;playbackRate&lt;/code&gt; &lt;/a&gt;可能会导致动画的播放位置跳变，因为其在主线程上的播放位置可能已从其当前正在运行的播放位置偏移。</target>
        </trans-unit>
        <trans-unit id="4655844bbc80dc899c798f617d6fd3597b928e06" translate="yes" xml:space="preserve">
          <source>In some cases, the &lt;code&gt;NodeList&lt;/code&gt; is &lt;em&gt;live&lt;/em&gt;, which means that changes in the DOM automatically update the collection. For example, &lt;a href=&quot;node/childnodes&quot;&gt;&lt;code&gt;Node.childNodes&lt;/code&gt;&lt;/a&gt; is live:</source>
          <target state="translated">在某些情况下， &lt;code&gt;NodeList&lt;/code&gt; 是&lt;em&gt;live&lt;/em&gt;，这意味着DOM中的更改会自动更新集合。例如，&lt;a href=&quot;node/childnodes&quot;&gt; &lt;code&gt;Node.childNodes&lt;/code&gt; 处于&lt;/a&gt;活动状态：</target>
        </trans-unit>
        <trans-unit id="6ee0c3405328ac0a1e364e03bbe1b6759943b171" translate="yes" xml:space="preserve">
          <source>In some cases, the above conversion to UTF-8 and then to Base64 will not be very space efficient. UTF-8 produces longer output than UTF-16 when the text contains a large percentage of characters in the range U+0800-U+FFFF, which are encoded with three bytes in UTF-8 but two in UTF-16. In the case where the JavaScript string contains evenly-distributed UTF-16 code points, one might consider encoding to UTF-16 instead of UTF-8 before the conversion to Base64, for a 40% reduction in size.</source>
          <target state="translated">在某些情况下,上述转换为UTF-8然后再转换为Base64的方式将不会很节省空间。当文本中包含很大比例的U+0800-U+FFFF范围内的字符时,UTF-8会产生比UTF-16更长的输出,这些字符在UTF-8中用三个字节编码,而在UTF-16中用两个字节编码。在JavaScript字符串中包含均匀分布的UTF-16码点的情况下,可以考虑在转换为Base64之前,先编码为UTF-16而不是UTF-8,这样可以减少40%的大小。</target>
        </trans-unit>
        <trans-unit id="132eae7008230e83d3da8ea93f84689e6de2d4b3" translate="yes" xml:space="preserve">
          <source>In some cases, you must read many external files. This is a standard function which uses the &lt;code&gt;XMLHttpRequest&lt;/code&gt; object asynchronously in order to switch the content of the read file to a specified listener.</source>
          <target state="translated">在某些情况下，您必须阅读许多外部文件。这是一个标准函数，它异步使用 &lt;code&gt;XMLHttpRequest&lt;/code&gt; 对象，以便将读取文件的内容切换到指定的侦听器。</target>
        </trans-unit>
        <trans-unit id="b299ff99aea1bc61ce766adae31254860b288ce2" translate="yes" xml:space="preserve">
          <source>In some countries, like Belgium, it's uncommon for people to provide a region as part of their postal address. In such cases, the browser returns an empty string as the value of &lt;code&gt;region&lt;/code&gt;. However, the address should still be acceptable to use for its intended purpose (e.g., to ship a product). However, always verify addresses to make sure what the user provides is usable.</source>
          <target state="translated">在某些国家/地区，例如比利时，人们很少提供一个地区作为其邮政地址的一部分。在这种情况下，浏览器将返回一个空字符串作为 &lt;code&gt;region&lt;/code&gt; 的值。但是，该地址仍应可以用于其预期目的（例如，运送产品）。但是，请始终验证地址以确保用户提供的内容可用。</target>
        </trans-unit>
        <trans-unit id="e6dea87d6416b39807b2dab77adc9ccde9c3b546" translate="yes" xml:space="preserve">
          <source>In some implementations, passing anything other than a number for the screen and client fields will throw a &lt;code&gt;TypeError&lt;/code&gt;.</source>
          <target state="translated">在某些实现中，为screen和client字段传递数字以外的任何值都会引发 &lt;code&gt;TypeError&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c947099d79761880f47f1b5181a546601c8aeb25" translate="yes" xml:space="preserve">
          <source>In some instances, &lt;code&gt;InputDeviceCapabilities&lt;/code&gt; represents the capabilities of logical devices rather than physical devices. This allows, for example, touchscreen keyboards and physical keyboards to be represented the same way when they produce the same input.</source>
          <target state="translated">在某些情况下， &lt;code&gt;InputDeviceCapabilities&lt;/code&gt; 表示逻辑设备而不是物理设备的功能。例如，这允许触摸屏键盘和物理键盘在产生相同输入时以相同方式表示。</target>
        </trans-unit>
        <trans-unit id="455954cdb79d203d096072cc645e2352e3bacba8" translate="yes" xml:space="preserve">
          <source>In some rare cases, packing greyscale textures which belong together into the color channels of a single texture might help.</source>
          <target state="translated">在一些罕见的情况下,将属于一起的灰度纹理打包到单个纹理的颜色通道中可能会有帮助。</target>
        </trans-unit>
        <trans-unit id="8807053eb3061f5ccd904706d857bd4ee81c15de" translate="yes" xml:space="preserve">
          <source>In some scenarios there may be multiple pointers (for example a device with both a touchscreen and a mouse) or a pointer supports multiple contact points (for example a touchscreen that supports multiple finger touches). The application can use the &lt;a href=&quot;pointerevent/isprimary&quot;&gt;&lt;code&gt;isPrimary&lt;/code&gt;&lt;/a&gt; property to identify a master pointer among the set of &lt;em&gt;active pointers&lt;/em&gt; for each pointer type. If an application only wants to support a primary pointer, it can ignore all pointer events that are not primary.</source>
          <target state="translated">在某些情况下，可能有多个指针（例如，同时具有触摸屏和鼠标的设备）或一个指针支持多个接触点（例如，支持多个手指触摸的触摸屏）。应用程序可以使用&lt;a href=&quot;pointerevent/isprimary&quot;&gt; &lt;code&gt;isPrimary&lt;/code&gt; &lt;/a&gt;属性在每种指针类型的&lt;em&gt;活动指针&lt;/em&gt;集中标识一个主指针。如果应用程序只希望支持主指针，则它可以忽略所有非主指针事件。</target>
        </trans-unit>
        <trans-unit id="4b7e8dede71e0c3ed9e9fb5f42051be333943383" translate="yes" xml:space="preserve">
          <source>In tandem with appropriate HTML and CSS, the result is:</source>
          <target state="translated">配合适当的HTML和CSS,结果是。</target>
        </trans-unit>
        <trans-unit id="87785b6aae731be29028f0420000582fe05b36af" translate="yes" xml:space="preserve">
          <source>In technical terms, we apply a &lt;a href=&quot;http://webaudio.github.io/web-audio-api/#blackman-window&quot;&gt;Blackman window&lt;/a&gt; and smooth the values over time. The default value is good enough for most cases.</source>
          <target state="translated">用技术术语来说，我们应用&lt;a href=&quot;http://webaudio.github.io/web-audio-api/#blackman-window&quot;&gt;布莱克曼（Blackman）窗口&lt;/a&gt;并随着时间的推移平滑值。对于大多数情况，默认值足够好。</target>
        </trans-unit>
        <trans-unit id="aeeed0f09e85e80f9003a8af352d35ffe73f1e3b" translate="yes" xml:space="preserve">
          <source>In technical terms, we apply a &lt;a href=&quot;https://webaudio.github.io/web-audio-api/#blackman-window&quot;&gt;Blackman window&lt;/a&gt; and smooth the values over time. The default value is good enough for most cases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4569a112b815930f3f6110fdab139a3c9f156284" translate="yes" xml:space="preserve">
          <source>In the &lt;a href=&quot;http://codepen.io/rachelnabors/pen/EPJdJx?editors=0010&quot;&gt;Pool of Tears&lt;/a&gt; example, each tear is passed a random &lt;code&gt;duration&lt;/code&gt; via its timing object:</source>
          <target state="translated">在&amp;ldquo; &lt;a href=&quot;http://codepen.io/rachelnabors/pen/EPJdJx?editors=0010&quot;&gt;眼泪池&amp;rdquo;&lt;/a&gt;示例中，每个眼泪都会通过其计时对象传递随机的 &lt;code&gt;duration&lt;/code&gt; 时间：</target>
        </trans-unit>
        <trans-unit id="84baeba554340df677d283c92acea536f934dd81" translate="yes" xml:space="preserve">
          <source>In the &lt;a href=&quot;http://codepen.io/rachelnabors/pen/EPJdJx?editors=0010&quot;&gt;Pool of Tears&lt;/a&gt; example, each tear is passed a random delay via its timing object:</source>
          <target state="translated">在&amp;ldquo; &lt;a href=&quot;http://codepen.io/rachelnabors/pen/EPJdJx?editors=0010&quot;&gt;眼泪池&amp;rdquo;&lt;/a&gt;示例中，每个泪水都会通过其计时对象传递一个随机延迟：</target>
        </trans-unit>
        <trans-unit id="8840866ab7b70934813f8b44dc4d3acedd59684a" translate="yes" xml:space="preserve">
          <source>In the &lt;a href=&quot;http://codepen.io/rachelnabors/pen/PNGGaV&quot;&gt;Red Queen Race&lt;/a&gt; example, we can inspect Alice and the RedQueen's animation to see its individual keyframes like so:</source>
          <target state="translated">在&lt;a href=&quot;http://codepen.io/rachelnabors/pen/PNGGaV&quot;&gt;Red Queen Race的&lt;/a&gt;示例中，我们可以检查Alice和RedQueen的动画，以查看其各个关键帧，如下所示：</target>
        </trans-unit>
        <trans-unit id="4e53b83e14cfbf2b6cb2206f2d31afedefa47e79" translate="yes" xml:space="preserve">
          <source>In the &lt;a href=&quot;http://codepen.io/rachelnabors/pen/PNGGaV?editors=0010&quot;&gt;Red Queen's Race&lt;/a&gt; example, we animate Alice and the Red Queen by passing an easing &lt;code&gt;of&amp;nbsp;steps(7, end)&lt;/code&gt; to &lt;code&gt;animate()&lt;/code&gt;:</source>
          <target state="translated">在&lt;a href=&quot;http://codepen.io/rachelnabors/pen/PNGGaV?editors=0010&quot;&gt;Red Queen's Race的&lt;/a&gt;示例中，我们通过将缓步 &lt;code&gt;of&amp;nbsp;steps(7, end)&lt;/code&gt; 传递给 &lt;code&gt;animate()&lt;/code&gt; 来为Alice和Red Queen 设置动画：</target>
        </trans-unit>
        <trans-unit id="4d48fff257a7eaf677c500603cba8675d9ec15a0" translate="yes" xml:space="preserve">
          <source>In the &lt;a href=&quot;http://codepen.io/rachelnabors/pen/PNYGZQ?editors=0010&quot;&gt;Drink Me/Eat Me game&lt;/a&gt;, Alice's height is animated so it can go from small to large or large to small. At the start of the game, her height is set between the two extremes by setting her animation's &lt;code&gt;currentTime&lt;/code&gt; to half her &lt;a href=&quot;../effecttiming&quot;&gt;&lt;code&gt;KeyframeEffect&lt;/code&gt;'s duration&lt;/a&gt;:</source>
          <target state="translated">在&amp;ldquo; &lt;a href=&quot;http://codepen.io/rachelnabors/pen/PNYGZQ?editors=0010&quot;&gt;喝我/吃我&amp;rdquo;游戏中&lt;/a&gt;，对爱丽丝的身高进行动画处理，因此它可以从小到大或从大到小变化。在游戏开始时，通过将动画的 &lt;code&gt;currentTime&lt;/code&gt; 设置为&lt;a href=&quot;../effecttiming&quot;&gt; &lt;code&gt;KeyframeEffect&lt;/code&gt; 的持续时间的&lt;/a&gt;一半，将她的身高设置在两个极端之间：</target>
        </trans-unit>
        <trans-unit id="dff4039fcfe679b0dec49d92d0aba4320d8da9c3" translate="yes" xml:space="preserve">
          <source>In the &lt;a href=&quot;http://codepen.io/rachelnabors/pen/PNYGZQ?editors=0010&quot;&gt;Growing/Shrinking Alice Game&lt;/a&gt; example, clicking or tapping the bottle causes Alice's growing animation (&lt;code&gt;aliceChange&lt;/code&gt;) to play backwards, causing her to get smaller. It is done by setting &lt;code&gt;aliceChange&lt;/code&gt;'s &lt;a href=&quot;playbackrate&quot;&gt;&lt;code&gt;Animation.playbackRate&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;-1&lt;/code&gt; like so:</source>
          <target state="translated">在&amp;ldquo; &lt;a href=&quot;http://codepen.io/rachelnabors/pen/PNYGZQ?editors=0010&quot;&gt;成长/缩小Alice游戏&amp;rdquo;&lt;/a&gt;示例中，单击或点击瓶子会使Alice的成长动画（ &lt;code&gt;aliceChange&lt;/code&gt; ）向后播放，从而使其变小。可以通过将 &lt;code&gt;aliceChange&lt;/code&gt; 的&lt;a href=&quot;playbackrate&quot;&gt; &lt;code&gt;Animation.playbackRate&lt;/code&gt; &lt;/a&gt;设置为 &lt;code&gt;-1&lt;/code&gt; 来完成，如下所示：</target>
        </trans-unit>
        <trans-unit id="75ccab065512a27e756e2ce4032133c4b2ab5ec4" translate="yes" xml:space="preserve">
          <source>In the &lt;a href=&quot;http://codepen.io/rachelnabors/pen/PNYGZQ?editors=0010&quot;&gt;Growing/Shrinking Alice Game&lt;/a&gt; example, clicking or tapping the bottle causes Alice's growing animation (&lt;code&gt;aliceChange&lt;/code&gt;) to reverse, causing her to shrink:</source>
          <target state="translated">在&amp;ldquo; &lt;a href=&quot;http://codepen.io/rachelnabors/pen/PNYGZQ?editors=0010&quot;&gt;增长/收缩Alice游戏&amp;rdquo;&lt;/a&gt;示例中，单击或点击瓶子会使Alice的增长动画（ &lt;code&gt;aliceChange&lt;/code&gt; ）反转，从而导致其收缩：</target>
        </trans-unit>
        <trans-unit id="a6f044f5fc3c895453f3a3776f76e7cb90e07603" translate="yes" xml:space="preserve">
          <source>In the &lt;a href=&quot;http://codepen.io/rachelnabors/pen/PNYGZQ?editors=0010&quot;&gt;Growing/Shrinking Alice Game&lt;/a&gt; example, clicking or tapping the cake causes Alice's growing animation (&lt;code&gt;aliceChange&lt;/code&gt;) to play forward, causing her to get bigger, as well as triggering the cake's animation. Two &lt;code&gt;Animation.play()&lt;/code&gt;s, one &lt;code&gt;EventListener&lt;/code&gt;:</source>
          <target state="translated">在&amp;ldquo; &lt;a href=&quot;http://codepen.io/rachelnabors/pen/PNYGZQ?editors=0010&quot;&gt;成长/缩小Alice游戏&amp;rdquo;&lt;/a&gt;示例中，单击或点击蛋糕会导致Alice的成长动画（ &lt;code&gt;aliceChange&lt;/code&gt; ）向前播放，使她变大，并触发蛋糕的动画。两个 &lt;code&gt;Animation.play()&lt;/code&gt; ，一个 &lt;code&gt;EventListener&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="ce47f4fbd44866013a3484c775bc335526230a6b" translate="yes" xml:space="preserve">
          <source>In the &lt;a href=&quot;http://codepen.io/rachelnabors/pen/PNYGZQ?editors=0010&quot;&gt;Growing/Shrinking Alice Game&lt;/a&gt; example, players can get an ending with &lt;a href=&quot;http://codepen.io/rachelnabors/pen/EPJdJx?editors=0010&quot;&gt;Alice crying into a pool of tears&lt;/a&gt;. In the game, for performance reasons, the tears should only be animating when they're visible. So they must be paused as soon as they are animated like so:</source>
          <target state="translated">在&amp;ldquo; &lt;a href=&quot;http://codepen.io/rachelnabors/pen/PNYGZQ?editors=0010&quot;&gt;成长/收缩爱丽丝游戏&amp;rdquo;&lt;/a&gt;示例中，玩家可以以&lt;a href=&quot;http://codepen.io/rachelnabors/pen/EPJdJx?editors=0010&quot;&gt;爱丽丝哭泣成一滴眼泪来&lt;/a&gt;结局。在游戏中，出于性能方面的考虑，眼泪只有在可见时才会发出动画。因此，必须以如下方式对其进行动画处理后立即暂停：</target>
        </trans-unit>
        <trans-unit id="1f97c5e22a8412f74172efbe4d3fc58e65eafcde" translate="yes" xml:space="preserve">
          <source>In the &lt;a href=&quot;http://codepen.io/rachelnabors/pen/bEPdQr?editors=0010&quot;&gt;Forgotten Key&lt;/a&gt; example, Alice waves her arm up and down by passing her an &lt;code&gt;alternate&lt;/code&gt; value for her &lt;code&gt;direction&lt;/code&gt; property:</source>
          <target state="translated">在&amp;ldquo; &lt;a href=&quot;http://codepen.io/rachelnabors/pen/bEPdQr?editors=0010&quot;&gt;被遗忘的钥匙&amp;rdquo;&lt;/a&gt;示例中，Alice通过为她的 &lt;code&gt;direction&lt;/code&gt; 属性传递 &lt;code&gt;alternate&lt;/code&gt; 值来上下挥动手臂：</target>
        </trans-unit>
        <trans-unit id="5c8cbb2f566cba2fd38c09a4aa57733808943991" translate="yes" xml:space="preserve">
          <source>In the &lt;a href=&quot;http://codepen.io/rachelnabors/pen/bEPdQr?editors=0010&quot;&gt;Forgotten Key&lt;/a&gt; example, Alice waves her arm up and down the entire time the page is open by passing &lt;code&gt;Infinity&lt;/code&gt; as the value for her &lt;code&gt;iterations&lt;/code&gt; property:</source>
          <target state="translated">在&amp;ldquo; &lt;a href=&quot;http://codepen.io/rachelnabors/pen/bEPdQr?editors=0010&quot;&gt;被遗忘的密钥&amp;rdquo;&lt;/a&gt;示例中，Alice通过将 &lt;code&gt;Infinity&lt;/code&gt; 作为她的 &lt;code&gt;iterations&lt;/code&gt; 属性的值传递，在打开页面的整个过程中上下摇动手臂：</target>
        </trans-unit>
        <trans-unit id="2c892ed1b4c2d80a928b1b6bc3d60c8e0ce6d8a0" translate="yes" xml:space="preserve">
          <source>In the &lt;a href=&quot;http://codepen.io/rachelnabors/pen/eJyWzm/?editors=0010&quot;&gt;Follow the White Rabbit example&lt;/a&gt;, &lt;code&gt;whiteRabbit&lt;/code&gt; sets the &lt;code&gt;target&lt;/code&gt; element to be animated:</source>
          <target state="translated">在&amp;ldquo; &lt;a href=&quot;http://codepen.io/rachelnabors/pen/eJyWzm/?editors=0010&quot;&gt;跟随白兔&amp;rdquo;示例中&lt;/a&gt;， &lt;code&gt;whiteRabbit&lt;/code&gt; 设置要设置动画的 &lt;code&gt;target&lt;/code&gt; 元素：</target>
        </trans-unit>
        <trans-unit id="d57f87a4c92a2dd36732c3007295e662906a7cb1" translate="yes" xml:space="preserve">
          <source>In the &lt;a href=&quot;http://codepen.io/rachelnabors/pen/eJyWzm/?editors=0010&quot;&gt;Follow the White Rabbit example&lt;/a&gt;, the &lt;code&gt;Animation()&lt;/code&gt; constructor is used to create an &lt;code&gt;Animation&lt;/code&gt; for the &lt;code&gt;rabbitDownKeyframes&lt;/code&gt; using the document's &lt;code&gt;timeline&lt;/code&gt;:</source>
          <target state="translated">在&amp;ldquo; &lt;a href=&quot;http://codepen.io/rachelnabors/pen/eJyWzm/?editors=0010&quot;&gt;跟随白兔&amp;rdquo;示例中&lt;/a&gt;， &lt;code&gt;Animation()&lt;/code&gt; 构造函数用于使用文档的 &lt;code&gt;timeline&lt;/code&gt; 为 &lt;code&gt;rabbitDownKeyframes&lt;/code&gt; 创建一个 &lt;code&gt;Animation&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="e919e7052a1fb04189f5298ef0aeed5addb60a81" translate="yes" xml:space="preserve">
          <source>In the &lt;a href=&quot;http://codepen.io/rachelnabors/pen/eJyWzm/?editors=0010&quot;&gt;Follow the White Rabbit example&lt;/a&gt;, the &lt;code&gt;KeyframeEffect&lt;/code&gt; constructor is used to create a set of keyframes that dictate how the White Rabbit should animate down the hole:</source>
          <target state="translated">在&amp;ldquo; &lt;a href=&quot;http://codepen.io/rachelnabors/pen/eJyWzm/?editors=0010&quot;&gt;跟随白兔&amp;rdquo;示例中&lt;/a&gt;， &lt;code&gt;KeyframeEffect&lt;/code&gt; 构造函数用于创建一组关键帧，这些关键帧指示白兔如何在孔中进行动画处理：</target>
        </trans-unit>
        <trans-unit id="5dc7d3f46c7c879ce882c77ba8667b3a8c0fcd98" translate="yes" xml:space="preserve">
          <source>In the &lt;a href=&quot;http://codepen.io/rachelnabors/pen/eJyWzm/?editors=0010&quot;&gt;Follow the White Rabbit example&lt;/a&gt;, the KeyframeEffect constructor is used to create a set of keyframes that dictate how the White Rabbit should animate down the hole:</source>
          <target state="translated">在&amp;ldquo; &lt;a href=&quot;http://codepen.io/rachelnabors/pen/eJyWzm/?editors=0010&quot;&gt;跟随白兔&amp;rdquo;示例中&lt;/a&gt;，KeyframeEffect构造函数用于创建一组关键帧，这些关键帧指示白兔如何在孔中进行动画处理：</target>
        </trans-unit>
        <trans-unit id="071693fd0cc0ece3fcd2069423c95fa1c37f35fd" translate="yes" xml:space="preserve">
          <source>In the &lt;a href=&quot;http://codepen.io/rachelnabors/pen/eJyWzm?editors=0010&quot;&gt;Follow the White Rabbit example&lt;/a&gt;, you can assign the &lt;code&gt;rabbitDownAnimation&lt;/code&gt; an &lt;code&gt;id&lt;/code&gt; like so:</source>
          <target state="translated">在&amp;ldquo; &lt;a href=&quot;http://codepen.io/rachelnabors/pen/eJyWzm?editors=0010&quot;&gt;跟随白兔&amp;rdquo;示例中&lt;/a&gt;，您可以像这样为 &lt;code&gt;rabbitDownAnimation&lt;/code&gt; 分配一个 &lt;code&gt;id&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="31e3f097211b1868c0e1036a1f521e423e1d689e" translate="yes" xml:space="preserve">
          <source>In the &lt;a href=&quot;http://codepen.io/rachelnabors/pen/eJyWzm?editors=0010&quot;&gt;Follow the White Rabbit&lt;/a&gt; example, the White Rabbit's animation is formed by coupling a &lt;code&gt;KeyframeEffect&lt;/code&gt; with an &lt;code&gt;Animation&lt;/code&gt; object. The &lt;code&gt;keyframeEffect&lt;/code&gt; takes an object of &lt;a href=&quot;../effecttiming&quot;&gt;timing properties&lt;/a&gt;, which is where we pass in &lt;code&gt;fill&lt;/code&gt;. &lt;code&gt;Forwards&lt;/code&gt; makes the rabbit retain its last keyframe rather than reverting to its unanimated state:</source>
          <target state="translated">在&amp;ldquo; &lt;a href=&quot;http://codepen.io/rachelnabors/pen/eJyWzm?editors=0010&quot;&gt;跟随白兔&amp;rdquo;&lt;/a&gt;示例中，通过将 &lt;code&gt;KeyframeEffect&lt;/code&gt; 与 &lt;code&gt;Animation&lt;/code&gt; 对象耦合来形成&amp;ldquo;白兔&amp;rdquo;的动画。所述 &lt;code&gt;keyframeEffect&lt;/code&gt; 需要的目的&lt;a href=&quot;../effecttiming&quot;&gt;定时特性&lt;/a&gt;，这是我们在通过 &lt;code&gt;fill&lt;/code&gt; 。 &lt;code&gt;Forwards&lt;/code&gt; 使兔子保留其最后一个关键帧，而不是恢复到其未设置动画的状态：</target>
        </trans-unit>
        <trans-unit id="9f9e06b09ced74d19ee9f6966beb25606973889e" translate="yes" xml:space="preserve">
          <source>In the &lt;a href=&quot;http://codepen.io/rachelnabors/pen/zxYexJ?editors=0010&quot;&gt;Running on Web Animations API example&lt;/a&gt;, the we can sync all new animated cats by giving them all the same &lt;code&gt;startTime&lt;/code&gt; as the original running cat:</source>
          <target state="translated">在&amp;ldquo; &lt;a href=&quot;http://codepen.io/rachelnabors/pen/zxYexJ?editors=0010&quot;&gt;在Web动画API上运行&amp;rdquo;示例中&lt;/a&gt;，我们可以通过为所有新动画猫提供与原始运行猫相同的 &lt;code&gt;startTime&lt;/code&gt; 来同步它们：</target>
        </trans-unit>
        <trans-unit id="88ac2a60a399b5e7c111692972c3940c0a6fb38d" translate="yes" xml:space="preserve">
          <source>In the &lt;a href=&quot;https://codepen.io/rachelnabors/pen/EPJdJx?editors=0010&quot;&gt;Pool of Tears&lt;/a&gt; example, each tear is passed a random &lt;code&gt;duration&lt;/code&gt; via its timing object:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e464a34ff90376d7ea749efa0e7f75fe8ed71bc" translate="yes" xml:space="preserve">
          <source>In the &lt;a href=&quot;https://codepen.io/rachelnabors/pen/EPJdJx?editors=0010&quot;&gt;Pool of Tears&lt;/a&gt; example, each tear is passed a random delay via its timing object:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ed2b1a446ce3fa8afa38e4e86f7adbfa605378d" translate="yes" xml:space="preserve">
          <source>In the &lt;a href=&quot;https://codepen.io/rachelnabors/pen/PNGGaV&quot;&gt;Red Queen Race&lt;/a&gt; example, we can inspect Alice and the RedQueen's animation to see its individual keyframes like so:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34453336eba1b51c35c2f752355201cfd9e76ada" translate="yes" xml:space="preserve">
          <source>In the &lt;a href=&quot;https://codepen.io/rachelnabors/pen/PNGGaV?editors=0010&quot;&gt;Red Queen's Race&lt;/a&gt; example, we animate Alice and the Red Queen by passing an easing &lt;code&gt;of&amp;nbsp;steps(7, end)&lt;/code&gt; to &lt;code&gt;animate()&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c69f712228aafab52dddedecdbcc156e426e4138" translate="yes" xml:space="preserve">
          <source>In the &lt;a href=&quot;https://codepen.io/rachelnabors/pen/PNYGZQ?editors=0010&quot;&gt;Drink Me/Eat Me game&lt;/a&gt;, Alice's height is animated so it can go from small to large or large to small. At the start of the game, her height is set between the two extremes by setting her animation's &lt;code&gt;currentTime&lt;/code&gt; to half her &lt;a href=&quot;../effecttiming&quot;&gt;&lt;code&gt;KeyframeEffect&lt;/code&gt;'s duration&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cde67b0ce36cacccdd5026937c070e9d148910c7" translate="yes" xml:space="preserve">
          <source>In the &lt;a href=&quot;https://codepen.io/rachelnabors/pen/PNYGZQ?editors=0010&quot;&gt;Growing/Shrinking Alice Game&lt;/a&gt; example, clicking or tapping the bottle causes Alice's growing animation (&lt;code&gt;aliceChange&lt;/code&gt;) to play backwards, causing her to get smaller. It is done by setting &lt;code&gt;aliceChange&lt;/code&gt;'s &lt;a href=&quot;playbackrate&quot;&gt;&lt;code&gt;Animation.playbackRate&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;-1&lt;/code&gt; like so:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38816fd23636215e530bddac4dcffafebb92a768" translate="yes" xml:space="preserve">
          <source>In the &lt;a href=&quot;https://codepen.io/rachelnabors/pen/PNYGZQ?editors=0010&quot;&gt;Growing/Shrinking Alice Game&lt;/a&gt; example, clicking or tapping the bottle causes Alice's growing animation (&lt;code&gt;aliceChange&lt;/code&gt;) to reverse, causing her to shrink:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb7bbd3b10df3341bf54420df3245ae56afceaba" translate="yes" xml:space="preserve">
          <source>In the &lt;a href=&quot;https://codepen.io/rachelnabors/pen/PNYGZQ?editors=0010&quot;&gt;Growing/Shrinking Alice Game&lt;/a&gt; example, clicking or tapping the cake causes Alice's growing animation (&lt;code&gt;aliceChange&lt;/code&gt;) to play forward, causing her to get bigger, as well as triggering the cake's animation. Two &lt;code&gt;Animation.play()&lt;/code&gt;s, one &lt;code&gt;EventListener&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ef23af827e85a5861c780f99ea433263bbb0a97" translate="yes" xml:space="preserve">
          <source>In the &lt;a href=&quot;https://codepen.io/rachelnabors/pen/PNYGZQ?editors=0010&quot;&gt;Growing/Shrinking Alice Game&lt;/a&gt; example, players can get an ending with &lt;a href=&quot;https://codepen.io/rachelnabors/pen/EPJdJx?editors=0010&quot;&gt;Alice crying into a pool of tears&lt;/a&gt;. In the game, for performance reasons, the tears should only be animating when they're visible. So they must be paused as soon as they are animated like so:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56e0254a62f3a9fe6f3181f4fcb639da5cf97c9a" translate="yes" xml:space="preserve">
          <source>In the &lt;a href=&quot;https://codepen.io/rachelnabors/pen/bEPdQr?editors=0010&quot;&gt;Forgotten Key&lt;/a&gt; example, Alice waves her arm up and down by passing her an &lt;code&gt;alternate&lt;/code&gt; value for her &lt;code&gt;direction&lt;/code&gt; property:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ef9baecf9e2c453ca8572d610eb3b20cb005591" translate="yes" xml:space="preserve">
          <source>In the &lt;a href=&quot;https://codepen.io/rachelnabors/pen/bEPdQr?editors=0010&quot;&gt;Forgotten Key&lt;/a&gt; example, Alice waves her arm up and down the entire time the page is open by passing &lt;code&gt;Infinity&lt;/code&gt; as the value for her &lt;code&gt;iterations&lt;/code&gt; property:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d262ea0b7a3cb611940b96df6d333ba2a5aa957" translate="yes" xml:space="preserve">
          <source>In the &lt;a href=&quot;https://codepen.io/rachelnabors/pen/eJyWzm/?editors=0010&quot;&gt;Follow the White Rabbit example&lt;/a&gt;, &lt;code&gt;whiteRabbit&lt;/code&gt; sets the &lt;code&gt;target&lt;/code&gt; element to be animated:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f660d13038715f45fcfe9d3ad3f889a68029288" translate="yes" xml:space="preserve">
          <source>In the &lt;a href=&quot;https://codepen.io/rachelnabors/pen/eJyWzm/?editors=0010&quot;&gt;Follow the White Rabbit example&lt;/a&gt;, the &lt;code&gt;Animation()&lt;/code&gt; constructor is used to create an &lt;code&gt;Animation&lt;/code&gt; for the &lt;code&gt;rabbitDownKeyframes&lt;/code&gt; using the document's &lt;code&gt;timeline&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fc8700c4acc46704a06c9307fad96fecaa9dfce" translate="yes" xml:space="preserve">
          <source>In the &lt;a href=&quot;https://codepen.io/rachelnabors/pen/eJyWzm/?editors=0010&quot;&gt;Follow the White Rabbit example&lt;/a&gt;, the &lt;code&gt;KeyframeEffect&lt;/code&gt; constructor is used to create a set of keyframes that dictate how the White Rabbit should animate down the hole:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35e0e6c454df99d76a76f51c668dc32a681b43f5" translate="yes" xml:space="preserve">
          <source>In the &lt;a href=&quot;https://codepen.io/rachelnabors/pen/eJyWzm/?editors=0010&quot;&gt;Follow the White Rabbit example&lt;/a&gt;, the KeyframeEffect constructor is used to create a set of keyframes that dictate how the White Rabbit should animate down the hole:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57c9b9602948e18006c99850ab1f4adc420ba741" translate="yes" xml:space="preserve">
          <source>In the &lt;a href=&quot;https://codepen.io/rachelnabors/pen/eJyWzm?editors=0010&quot;&gt;Follow the White Rabbit example&lt;/a&gt;, you can assign the &lt;code&gt;rabbitDownAnimation&lt;/code&gt; an &lt;code&gt;id&lt;/code&gt; like so:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17a1e58921bb84ed692f0bb0b8fb047f9a984993" translate="yes" xml:space="preserve">
          <source>In the &lt;a href=&quot;https://codepen.io/rachelnabors/pen/eJyWzm?editors=0010&quot;&gt;Follow the White Rabbit&lt;/a&gt; example, the White Rabbit's animation is formed by coupling a &lt;code&gt;KeyframeEffect&lt;/code&gt; with an &lt;code&gt;Animation&lt;/code&gt; object. The &lt;code&gt;keyframeEffect&lt;/code&gt; takes an object of &lt;a href=&quot;../effecttiming&quot;&gt;timing properties&lt;/a&gt;, which is where we pass in &lt;code&gt;fill&lt;/code&gt;. &lt;code&gt;Forwards&lt;/code&gt; makes the rabbit retain its last keyframe rather than reverting to its unanimated state:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58e7bb6e8605811e572edf3ef05381201408fc6b" translate="yes" xml:space="preserve">
          <source>In the &lt;a href=&quot;https://codepen.io/rachelnabors/pen/zxYexJ?editors=0010&quot;&gt;Running on Web Animations API example&lt;/a&gt;, the we can sync all new animated cats by giving them all the same &lt;code&gt;startTime&lt;/code&gt; as the original running cat:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="748f5741c26a5bddcbc0305b56737ef101affdfe" translate="yes" xml:space="preserve">
          <source>In the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/File_and_Directory_Entries_API/Introduction&quot;&gt;File System API&lt;/a&gt;, a &lt;code&gt;FileError&lt;/code&gt; represents error conditions that you might encounter while accessing the file system using the asynchronous API. It extends the &lt;code&gt;FileError&lt;/code&gt; interface described in &lt;a href=&quot;http://dev.w3.org/2009/dap/file-system/pub/FileSystem/#bib-FILE-WRITER&quot;&gt;File Writer&lt;/a&gt; and adds several new error codes.</source>
          <target state="translated">在&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/File_and_Directory_Entries_API/Introduction&quot;&gt;文件系统API中&lt;/a&gt;， &lt;code&gt;FileError&lt;/code&gt; 表示您使用异步API访问文件系统时可能遇到的错误情况。它扩展了&lt;a href=&quot;http://dev.w3.org/2009/dap/file-system/pub/FileSystem/#bib-FILE-WRITER&quot;&gt;File Writer中&lt;/a&gt;描述的 &lt;code&gt;FileError&lt;/code&gt; 接口，并添加了几个新的错误代码。</target>
        </trans-unit>
        <trans-unit id="3e95bcc3871e1fe11276d4f662264f5c7a41c256" translate="yes" xml:space="preserve">
          <source>In the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/File_and_Directory_Entries_API/Introduction&quot;&gt;File System API&lt;/a&gt;, a &lt;code&gt;FileError&lt;/code&gt; represents error conditions that you might encounter while accessing the file system using the asynchronous API. It extends the &lt;code&gt;FileError&lt;/code&gt; interface described in &lt;a href=&quot;https://dev.w3.org/2009/dap/file-system/pub/FileSystem/#bib-FILE-WRITER&quot;&gt;File Writer&lt;/a&gt; and adds several new error codes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31b81cbbb80d238a2f89066bdaabab365cf298d7" translate="yes" xml:space="preserve">
          <source>In the &lt;a href=&quot;webvr_api&quot;&gt;WebVR API&lt;/a&gt;, &lt;code&gt;DOMPoint&lt;/code&gt; values are used to represent points in the coordinate space that the user's head mounted display exists in. In the following snippet, the position of the VR HMD can be retrieved by first grabbing a reference to the position sensor's current state using &lt;a href=&quot;positionsensorvrdevice/getstate&quot;&gt;&lt;code&gt;PositionSensorVRDevice.getState()&lt;/code&gt;&lt;/a&gt;, then accessing the resulting &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/VRPositionState&quot;&gt;&lt;code&gt;VRPositionState&lt;/code&gt;&lt;/a&gt;'s &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/VRPositionState/position&quot;&gt;&lt;code&gt;position&lt;/code&gt;&lt;/a&gt; property, which returns a &lt;code&gt;DOMPoint&lt;/code&gt;. Note below the usage of &lt;code&gt;position.x&lt;/code&gt;, &lt;code&gt;position.y&lt;/code&gt;, and &lt;code&gt;position.z&lt;/code&gt;.</source>
          <target state="translated">在&lt;a href=&quot;webvr_api&quot;&gt;WebVR API中&lt;/a&gt;， &lt;code&gt;DOMPoint&lt;/code&gt; 值用于表示用户的头戴式显示器所在的坐标空间中的点。在以下代码段中，可以通过首先获取对位置传感器当前状态的引用来检索VR HMD的位置。使用&lt;a href=&quot;positionsensorvrdevice/getstate&quot;&gt; &lt;code&gt;PositionSensorVRDevice.getState()&lt;/code&gt; &lt;/a&gt;，然后访问生成的&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/VRPositionState&quot;&gt; &lt;code&gt;VRPositionState&lt;/code&gt; &lt;/a&gt;的&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/VRPositionState/position&quot;&gt; &lt;code&gt;position&lt;/code&gt; &lt;/a&gt;属性，该属性返回 &lt;code&gt;DOMPoint&lt;/code&gt; 。请注意下面的 &lt;code&gt;position.x&lt;/code&gt; ， &lt;code&gt;position.y&lt;/code&gt; 和 &lt;code&gt;position.z&lt;/code&gt; 的用法。</target>
        </trans-unit>
        <trans-unit id="bb1fc260c83966dd331019cec75ccb6c2f27f605" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;displayPoseStats()&lt;/code&gt; function, we grab all of the data we want to display out of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/GamepadPose&quot;&gt;&lt;code&gt;GamepadPose&lt;/code&gt;&lt;/a&gt; object passed into it, then print them into the UI panel that exists in the demo for displaying such data:</source>
          <target state="translated">在 &lt;code&gt;displayPoseStats()&lt;/code&gt; 函数中，我们&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/GamepadPose&quot;&gt; &lt;code&gt;GamepadPose&lt;/code&gt; &lt;/a&gt;传递给它的GamepadPose对象中获取要显示的所有数据，然后将它们打印到演示中存在的UI面板中以显示此类数据：</target>
        </trans-unit>
        <trans-unit id="7c51818ebbd3921f216a6e778639df0d79c9f898" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;draw()&lt;/code&gt; function, we call the &lt;code&gt;fillRect()&lt;/code&gt; function nine times using two &lt;code&gt;for&lt;/code&gt; loops. In each loop, the canvas is translated, the rectangle is drawn, and the canvas is returned back to its original state. Note how the call to &lt;code&gt;fillRect()&lt;/code&gt; uses the same coordinates each time, relying on &lt;code&gt;translate()&lt;/code&gt; to adjust the drawing position.</source>
          <target state="translated">在 &lt;code&gt;draw()&lt;/code&gt; 函数中，我们使用两个 &lt;code&gt;for&lt;/code&gt; 循环调用 &lt;code&gt;fillRect()&lt;/code&gt; 函数九次。在每个循环中，将平移画布，绘制矩形，并将画布返回其原始状态。请注意，对 &lt;code&gt;fillRect()&lt;/code&gt; 的调用如何每次都使用相同的坐标，并依赖于 &lt;code&gt;translate()&lt;/code&gt; 来调整绘图位置。</target>
        </trans-unit>
        <trans-unit id="b56af66348fd5d195d217eafa61955360f6eb10f" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;readStream()&lt;/code&gt; function itself, we lock a reader to the stream using &lt;a href=&quot;../readablestream/getreader&quot;&gt;&lt;code&gt;ReadableStream.getReader()&lt;/code&gt;&lt;/a&gt;, then follow the same kind of pattern we saw earlier &amp;mdash; reading each chunk with &lt;code&gt;read()&lt;/code&gt;, checking whether &lt;code&gt;done&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; and then ending the process if so, and reading the next chunk and processing it if not, before running the &lt;code&gt;read()&lt;/code&gt; function again.</source>
          <target state="translated">在 &lt;code&gt;readStream()&lt;/code&gt; 函数本身中，我们使用&lt;a href=&quot;../readablestream/getreader&quot;&gt; &lt;code&gt;ReadableStream.getReader()&lt;/code&gt; &lt;/a&gt;将阅读器锁定到流，然后按照我们之前看到的相同模式进行操作-使用 &lt;code&gt;read()&lt;/code&gt; 读取每个块，检查 &lt;code&gt;done&lt;/code&gt; 是否为 &lt;code&gt;true&lt;/code&gt; ，然后结束如果是，则进行处理，然后读取下一个块，否则进行处理，然后再次运行 &lt;code&gt;read()&lt;/code&gt; 函数。</target>
        </trans-unit>
        <trans-unit id="bb029e4341e6bd4f62bafbfdb2ab6af6d7d6b7b3" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;updateStyle()&lt;/code&gt; function itself, we get a reference to the shadow DOM using &lt;a href=&quot;element/shadowroot&quot;&gt;&lt;code&gt;Element.shadowRoot&lt;/code&gt;&lt;/a&gt;. From here we use standard DOM traversal techniques to find the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/style&quot;&gt;&lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt;&lt;/a&gt; element inside the shadow DOM and then update the CSS found inside it:</source>
          <target state="translated">在 &lt;code&gt;updateStyle()&lt;/code&gt; 函数本身中，我们使用&lt;a href=&quot;element/shadowroot&quot;&gt; &lt;code&gt;Element.shadowRoot&lt;/code&gt; &lt;/a&gt;获得对阴影DOM的引用。从这里开始，我们使用标准的DOM遍历技术在阴影DOM中找到&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/style&quot;&gt; &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt; &lt;/a&gt;元素，然后更新其中的CSS：</target>
        </trans-unit>
        <trans-unit id="9c6ff5af1334148b91029abc027cca914a15f932" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;updateStyle()&lt;/code&gt; function itself, we get a reference to the shadow DOM using &lt;a href=&quot;shadowroot&quot;&gt;&lt;code&gt;Element.shadowRoot&lt;/code&gt;&lt;/a&gt;. From here we use standard DOM traversal techniques to find the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/style&quot;&gt;&lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt;&lt;/a&gt; element inside the shadow DOM and then update the CSS found inside it:</source>
          <target state="translated">在 &lt;code&gt;updateStyle()&lt;/code&gt; 函数本身中，我们使用&lt;a href=&quot;shadowroot&quot;&gt; &lt;code&gt;Element.shadowRoot&lt;/code&gt; &lt;/a&gt;获得对阴影DOM的引用。从这里开始，我们使用标准的DOM遍历技术在阴影DOM中找到&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/style&quot;&gt; &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt; &lt;/a&gt;元素，然后更新其中的CSS：</target>
        </trans-unit>
        <trans-unit id="04650fa0d0cd02a07bf39fff451f43fb09793e92" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;worker.js&lt;/code&gt; script, a &lt;code&gt;DedicatedWorkerGlobalScope.onmessage&lt;/code&gt; handler is used to handle messages from the main script:</source>
          <target state="translated">在 &lt;code&gt;worker.js&lt;/code&gt; 脚本中， &lt;code&gt;DedicatedWorkerGlobalScope.onmessage&lt;/code&gt; 处理程序用于处理来自主脚本的消息：</target>
        </trans-unit>
        <trans-unit id="7a0be8078e13bc0c5378221913e5c62968ec583b" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;worker.js&lt;/code&gt; script, an &lt;code&gt;onmessage&lt;/code&gt; handler is used the handle messages from the main script:</source>
          <target state="translated">在 &lt;code&gt;worker.js&lt;/code&gt; 脚本中，使用 &lt;code&gt;onmessage&lt;/code&gt; 处理程序来处理来自主脚本的消息：</target>
        </trans-unit>
        <trans-unit id="46c335918199385a46beee58c2f3e09cb27b9c1f" translate="yes" xml:space="preserve">
          <source>In the HTML we just need to hook our function to the `onkeypress` event and specify that our textarea does not accept pasting:</source>
          <target state="translated">在HTML中,我们只需要把我们的函数挂到`onkeypress`事件上,并指定我们的textarea不接受粘贴。</target>
        </trans-unit>
        <trans-unit id="9eaf6573ce3ac8e6c6ba35bfea60e7baeeeb376e" translate="yes" xml:space="preserve">
          <source>In the Media Stream API, both &lt;a href=&quot;../mediastream&quot;&gt;&lt;code&gt;MediaStream&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../mediastreamtrack&quot;&gt;&lt;code&gt;MediaStreamTrack&lt;/code&gt;&lt;/a&gt; have constrainable properties.</source>
          <target state="translated">在Media Stream API中，&lt;a href=&quot;../mediastream&quot;&gt; &lt;code&gt;MediaStream&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../mediastreamtrack&quot;&gt; &lt;code&gt;MediaStreamTrack&lt;/code&gt; &lt;/a&gt;都具有可约束的属性。</target>
        </trans-unit>
        <trans-unit id="159a217b1d19a1ba5a26df24bfe572fb5946b57a" translate="yes" xml:space="preserve">
          <source>In the above example it can be observed that we can use the identifier and pseudo class name for defining the language of caption, where &lt;code&gt;&amp;lt;i&amp;gt;&lt;/code&gt; tag is for italics.</source>
          <target state="translated">在上面的示例中，可以看到我们可以使用标识符和伪类名称来定义字幕的语言，其中 &lt;code&gt;&amp;lt;i&amp;gt;&lt;/code&gt; 标签是斜体。</target>
        </trans-unit>
        <trans-unit id="2ea2b539c7a1c9b9602da25dfb485fd9becc08f6" translate="yes" xml:space="preserve">
          <source>In the above example, &lt;code&gt;#text&lt;/code&gt; nodes are inserted in the DOM where whitespace occurs between tags (i.e. after the closing tag of an element and before the opening tag of the next).</source>
          <target state="translated">在上面的示例中，＃ &lt;code&gt;#text&lt;/code&gt; 节点被插入到DOM中，在DOM之间的标签之间出现空格（即，元素的结束标签之后，下一个元素的开始标签之前）。</target>
        </trans-unit>
        <trans-unit id="2c6ec540892c01e0fe46e63eef1516429f317e9b" translate="yes" xml:space="preserve">
          <source>In the above example, &lt;code&gt;selObj.toString()&lt;/code&gt; is automatically called when it is passed to &lt;a href=&quot;../window/alert&quot;&gt;&lt;code&gt;Window.alert()&lt;/code&gt;&lt;/a&gt;. However, attempting to use a JavaScript &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String&quot;&gt;String&lt;/a&gt; property or method such as &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/length&quot;&gt;length&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/substr&quot;&gt;substr&lt;/a&gt;&lt;/code&gt; directly on a &lt;a href=&quot;../selection&quot;&gt;&lt;code&gt;Selection&lt;/code&gt;&lt;/a&gt; object results in an error if it does not have that property or method and may return unexpected results if it does. To use a &lt;code&gt;Selection&lt;/code&gt; object as a string, call its &lt;code&gt;toString()&lt;/code&gt; method directly:</source>
          <target state="translated">在上面的示例中，将 &lt;code&gt;selObj.toString()&lt;/code&gt; 传递给&lt;a href=&quot;../window/alert&quot;&gt; &lt;code&gt;Window.alert()&lt;/code&gt; &lt;/a&gt;时会自动对其进行调用。但是，如果尝试直接在&lt;a href=&quot;../selection&quot;&gt; &lt;code&gt;Selection&lt;/code&gt; &lt;/a&gt;对象上使用JavaScript &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String&quot;&gt;String&lt;/a&gt;属性或方法（例如 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/length&quot;&gt;length&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/substr&quot;&gt;substr&lt;/a&gt;&lt;/code&gt; )，则如果该属性或方法不具有该属性或方法，则将导致错误，并且如果存在该属性或方法，则可能会返回意外结果。要将 &lt;code&gt;Selection&lt;/code&gt; 对象用作字符串，请直接调用其 &lt;code&gt;toString()&lt;/code&gt; 方法：</target>
        </trans-unit>
        <trans-unit id="a89d604b3477fbfe0e9e3f5d0a2727debd14b6b3" translate="yes" xml:space="preserve">
          <source>In the above example, &lt;code&gt;selObj.toString()&lt;/code&gt; is automatically called when it is passed to &lt;a href=&quot;alert&quot;&gt;&lt;code&gt;window.alert()&lt;/code&gt;&lt;/a&gt;. However, attempting to use a JavaScript &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String&quot;&gt;String&lt;/a&gt; property or method such as &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/length&quot;&gt;length&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/substr&quot;&gt;substr&lt;/a&gt;&lt;/code&gt; directly on a &lt;a href=&quot;../selection&quot;&gt;&lt;code&gt;Selection&lt;/code&gt;&lt;/a&gt; object will result in an error if it does not have that property or method and may return unexpected results if it does. To use a &lt;code&gt;Selection&lt;/code&gt; object as a string, call its &lt;code&gt;toString()&lt;/code&gt; method directly:</source>
          <target state="translated">在上面的示例中，将 &lt;code&gt;selObj.toString()&lt;/code&gt; 传递给&lt;a href=&quot;alert&quot;&gt; &lt;code&gt;window.alert()&lt;/code&gt; &lt;/a&gt;时会自动对其进行调用。但是，如果尝试直接在&lt;a href=&quot;../selection&quot;&gt; &lt;code&gt;Selection&lt;/code&gt; &lt;/a&gt;对象上使用JavaScript &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String&quot;&gt;String&lt;/a&gt;属性或方法（例如 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/length&quot;&gt;length&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/substr&quot;&gt;substr&lt;/a&gt;&lt;/code&gt; )，则如果该属性或方法不具有该属性或方法，则将导致错误，并且如果具有该属性或方法，则可能会返回意外结果。要将 &lt;code&gt;Selection&lt;/code&gt; 对象用作字符串，请直接调用其 &lt;code&gt;toString()&lt;/code&gt; 方法：</target>
        </trans-unit>
        <trans-unit id="b312d18e2d1af2f83dda821db09d7aa9fdb45b7f" translate="yes" xml:space="preserve">
          <source>In the above examples &lt;code&gt;ws&lt;/code&gt; has replaced &lt;code&gt;http&lt;/code&gt;, similarly &lt;code&gt;wss&lt;/code&gt; replaces &lt;code&gt;https&lt;/code&gt;. Establishing a WebSocket relies on the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Protocol_upgrade_mechanism&quot;&gt;HTTP Upgrade mechanism&lt;/a&gt;, so the request for the protocol upgrade is implicit when we address the HTTP server as &lt;code&gt;ws://www.example.com&lt;/code&gt; or &lt;code&gt;wss://www.example.com&lt;/code&gt;.</source>
          <target state="translated">在以上示例中， &lt;code&gt;ws&lt;/code&gt; 替换了 &lt;code&gt;http&lt;/code&gt; ，类似地 &lt;code&gt;wss&lt;/code&gt; 替换了 &lt;code&gt;https&lt;/code&gt; 。建立WebSocket依赖于&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Protocol_upgrade_mechanism&quot;&gt;HTTP升级机制&lt;/a&gt;，因此当我们将HTTP服务器寻址为 &lt;code&gt;ws://www.example.com&lt;/code&gt; 或 &lt;code&gt;wss://www.example.com&lt;/code&gt; 时，对协议升级的请求是隐含的。</target>
        </trans-unit>
        <trans-unit id="5ca15d3b8cb4a4353208bf48eb6ce069f10ddff6" translate="yes" xml:space="preserve">
          <source>In the above snippet, a named function &lt;code&gt;loop()&lt;/code&gt; is declared and is immediately executed. &lt;code&gt;loop()&lt;/code&gt; is recursively called inside &lt;code&gt;setTimeout()&lt;/code&gt; after the logic has completed executing. While this pattern does not guarantee execution on a fixed interval, it does guarantee that the previous interval has completed before recursing.</source>
          <target state="translated">在上面的代码片段中，声明了一个命名函数 &lt;code&gt;loop()&lt;/code&gt; 并立即执行。逻辑完成执行后，在 &lt;code&gt;setTimeout()&lt;/code&gt; 内部递归调用 &lt;code&gt;loop()&lt;/code&gt; 。尽管此模式不能保证按固定的间隔执行，但可以保证递归之前已完成前一个间隔。</target>
        </trans-unit>
        <trans-unit id="038d50dc49f2e3b4b746867cf1c760513919ead8" translate="yes" xml:space="preserve">
          <source>In the above, the &lt;a href=&quot;../console&quot;&gt;console&lt;/a&gt; will show '#text' because a text node is inserted to maintain the whitespace between the end of the opening &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; tags. &lt;strong&gt;Any&lt;/strong&gt;&lt;a href=&quot;../document_object_model/whitespace_in_the_dom&quot;&gt;whitespace&lt;/a&gt; will create a &lt;code&gt;#text&lt;/code&gt; node, from a single space to multiple spaces, returns, tabs, and so on.</source>
          <target state="translated">在上面的代码中，&lt;a href=&quot;../console&quot;&gt;控制台&lt;/a&gt;将显示&amp;ldquo; #text&amp;rdquo;，因为插入了一个文本节点以保持开头 &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; 和 &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; 标记之间的空白。&lt;strong&gt;任何&lt;/strong&gt;&lt;a href=&quot;../document_object_model/whitespace_in_the_dom&quot;&gt;空格&lt;/a&gt;都会创建一个 &lt;code&gt;#text&lt;/code&gt; 节点，从单个空格到多个空格，返回，制表符等。</target>
        </trans-unit>
        <trans-unit id="367d14782071c764710cebf410d8d975d3cbc7b3" translate="yes" xml:space="preserve">
          <source>In the article &lt;a href=&quot;web_audio_api/controlling_multiple_parameters_with_constantsourcenode&quot;&gt;Controlling multiple parameters with ConstantSourceNode&lt;/a&gt;, a &lt;code&gt;ConstantSourceNode&lt;/code&gt; is created to allow one slider control to change the gain on two &lt;a href=&quot;gainnode&quot;&gt;&lt;code&gt;GainNode&lt;/code&gt;&lt;/a&gt;s. The three nodes are set up like this:</source>
          <target state="translated">在&lt;a href=&quot;web_audio_api/controlling_multiple_parameters_with_constantsourcenode&quot;&gt;用ConstantSourceNode控制多个参数&lt;/a&gt;一文中，创建了 &lt;code&gt;ConstantSourceNode&lt;/code&gt; 以允许一个滑块控件更改两个&lt;a href=&quot;gainnode&quot;&gt; &lt;code&gt;GainNode&lt;/code&gt; &lt;/a&gt;的增益。三个节点的设置如下：</target>
        </trans-unit>
        <trans-unit id="4b77e474bcf3ab917f6ed436e550316024843d15" translate="yes" xml:space="preserve">
          <source>In the beginning, JavaScript and the DOM were tightly intertwined, but eventually, they evolved into separate entities. The page content is stored in the DOM and may be accessed and manipulated via JavaScript, so that we may write this approximative equation:</source>
          <target state="translated">一开始,JavaScript和DOM是紧密结合在一起的,但最终,它们演变成了独立的实体。页面内容存储在DOM中,可以通过JavaScript进行访问和操作,因此,我们可以写出这个近似的公式。</target>
        </trans-unit>
        <trans-unit id="5bb136d61139a16fcd17f87f13d568e3b53f76eb" translate="yes" xml:space="preserve">
          <source>In the below sections we'll look at our raw-webgl-demo in detail, and see where exactly the above features are used.</source>
          <target state="translated">在下面的章节中,我们将详细查看我们的raw-webgl-demo,看看上述功能到底用在了哪里。</target>
        </trans-unit>
        <trans-unit id="710670cb1700ac6bed01130dcfab169685441a86" translate="yes" xml:space="preserve">
          <source>In the box demo an additional &lt;code&gt;.computeSimpleProjectionMatrix()&lt;/code&gt; method is added. This is called in the &lt;code&gt;.draw()&lt;/code&gt; method and has the scale factor passed to it. The result should be identical to the last example:</source>
          <target state="translated">在盒子演示中，添加了一个附加的 &lt;code&gt;.computeSimpleProjectionMatrix()&lt;/code&gt; 方法。在 &lt;code&gt;.draw()&lt;/code&gt; 方法中调用此方法，并将比例因子传递给它。结果应与上一个示例相同：</target>
        </trans-unit>
        <trans-unit id="f23d9de14b710f223f240ff496d1dc7617be6575" translate="yes" xml:space="preserve">
          <source>In the case of an HTML document, you can also replace portions of the DOM with new DOM trees built from HTML by setting the value of the &lt;a href=&quot;element/innerhtml&quot;&gt;&lt;code&gt;Element.innerHTML&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;element/outerhtml&quot;&gt;&lt;code&gt;outerHTML&lt;/code&gt;&lt;/a&gt; properties. These properties can also be read to fetch HTML fragments corresponding to the corresponding DOM subtree.</source>
          <target state="translated">对于HTML文档，您还可以通过设置&lt;a href=&quot;element/innerhtml&quot;&gt; &lt;code&gt;Element.innerHTML&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;element/outerhtml&quot;&gt; &lt;code&gt;outerHTML&lt;/code&gt; &lt;/a&gt;属性的值，用从HTML构建的新DOM树替换DOM的某些部分。也可以读取这些属性以获取与相应DOM子树相对应的HTML片段。</target>
        </trans-unit>
        <trans-unit id="ae5881bd36ab53447d14d96fa581095cfc3ec7b3" translate="yes" xml:space="preserve">
          <source>In the case of audio, a disabled track generates frames of silence (that is, frames in which every sample's value is 0). For video tracks, every frame is filled entirely with black pixels.</source>
          <target state="translated">在音频方面,被禁用的音轨会产生静音帧(即每个采样值为0的帧)。对于视频轨道,每一帧完全由黑色像素填充。</target>
        </trans-unit>
        <trans-unit id="91e954687ec9108d17a620e698e7b922f3826401" translate="yes" xml:space="preserve">
          <source>In the case of each cue:</source>
          <target state="translated">在每个提示的情况下。</target>
        </trans-unit>
        <trans-unit id="134c6dc788f159c41ef3215b21caa99007fa1a6c" translate="yes" xml:space="preserve">
          <source>In the case of readable streams, these are the chunks that have been enqueued but not yet read</source>
          <target state="translated">在可读流的情况下,这些是已经被enqueued但尚未被读取的数据块</target>
        </trans-unit>
        <trans-unit id="3f53490f9424fcb6f6b4369c3cc51225440326d7" translate="yes" xml:space="preserve">
          <source>In the case of writable streams, these are chunks that have been written but not yet processed by the underlying sink.</source>
          <target state="translated">在可写流的情况下,这些是已经写入但尚未被底层汇处理的块。</target>
        </trans-unit>
        <trans-unit id="be56e67b0d7c13ff05b3c79f41df3127c8b70dd0" translate="yes" xml:space="preserve">
          <source>In the case you need to obtain more details about the text, the following method allows you to measure it.</source>
          <target state="translated">如果你需要获得更多关于文本的细节,下面的方法可以让你测量它。</target>
        </trans-unit>
        <trans-unit id="361649fe0478299dc207f1091242e89204e295a2" translate="yes" xml:space="preserve">
          <source>In the chapter about &lt;a href=&quot;drawing_shapes&quot;&gt;drawing shapes&lt;/a&gt; I only mentioned the &lt;code&gt;stroke()&lt;/code&gt; and &lt;code&gt;fill()&lt;/code&gt; methods, but there's a third method we can use with paths, called &lt;code&gt;clip()&lt;/code&gt;.</source>
          <target state="translated">在关于&lt;a href=&quot;drawing_shapes&quot;&gt;绘制形状&lt;/a&gt;的章节中，我只提到了 &lt;code&gt;stroke()&lt;/code&gt; 和 &lt;code&gt;fill()&lt;/code&gt; 方法，但是还有第三种方法可以与路径一起使用，称为 &lt;code&gt;clip()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a556f68a246f6b0190846f10137ad4c3abd05977" translate="yes" xml:space="preserve">
          <source>In the chapter about &lt;a href=&quot;drawing_shapes&quot;&gt;drawing shapes&lt;/a&gt;, we used only the default line and fill styles. Here we will explore the canvas options we have at our disposal to make our drawings a little more attractive. You will learn how to add different colors, line styles, gradients, patterns and shadows to your drawings.</source>
          <target state="translated">在有关&lt;a href=&quot;drawing_shapes&quot;&gt;绘制形状&lt;/a&gt;的章节中，我们仅使用默认的线条和填充样式。在这里，我们将探讨可供使用的画布选项，以使我们的图纸更具吸引力。您将学习如何在绘图中添加不同的颜色，线条样式，渐变，图案和阴影。</target>
        </trans-unit>
        <trans-unit id="c631c29a2b75acd27f3b25ebe6d701570901afdb" translate="yes" xml:space="preserve">
          <source>In the code above &lt;var&gt;allCookies&lt;/var&gt; is a string containing a semicolon-separated list of all cookies (i.e. &lt;code&gt;&lt;var&gt;key&lt;/var&gt;=&lt;var&gt;value&lt;/var&gt;&lt;/code&gt; pairs). Note that each &lt;var&gt;key&lt;/var&gt; and &lt;var&gt;value&lt;/var&gt; may be surrounded by whitespace (space and tab characters): in fact &lt;a href=&quot;https://tools.ietf.org/html/rfc6265&quot;&gt;RFC 6265&lt;/a&gt; mandates a single space after each semicolon, but some user agents may not abide by this.</source>
          <target state="translated">在上面的代码中， &lt;var&gt;allCookies&lt;/var&gt; 是一个字符串，其中包含所有cookie的分号分隔列表（即， &lt;code&gt;&lt;var&gt;key&lt;/var&gt;=&lt;var&gt;value&lt;/var&gt;&lt;/code&gt; 对）。请注意，每个 &lt;var&gt;key&lt;/var&gt; 和 &lt;var&gt;value&lt;/var&gt; 可能由空格（空格和制表符）包围：实际上，&lt;a href=&quot;https://tools.ietf.org/html/rfc6265&quot;&gt;RFC 6265&lt;/a&gt;在每个分号后都强制使用一个空格，但是某些用户代理可能并不遵守这一点。</target>
        </trans-unit>
        <trans-unit id="1beb82ea79fef09ff7e1a22efa54cee0599c7186" translate="yes" xml:space="preserve">
          <source>In the code above, &lt;code&gt;newCookie&lt;/code&gt; is a string of form &lt;code&gt;&lt;var&gt;key&lt;/var&gt;=&lt;var&gt;value&lt;/var&gt;&lt;/code&gt;. Note that you can only set/update a single cookie at a time using this method. Consider also that:</source>
          <target state="translated">在上面的代码中， &lt;code&gt;newCookie&lt;/code&gt; 是形式为 &lt;code&gt;&lt;var&gt;key&lt;/var&gt;=&lt;var&gt;value&lt;/var&gt;&lt;/code&gt; 的字符串。请注意，使用此方法一次只能设置/更新一个cookie。还请考虑：</target>
        </trans-unit>
        <trans-unit id="751430196020e462a1062f8a888bc205355532d9" translate="yes" xml:space="preserve">
          <source>In the code example, &quot;caches&quot; is an attribute of the service worker's &lt;code&gt;WorkerGlobalScope&lt;/code&gt;. It holds the &lt;code&gt;CacheStorage&lt;/code&gt; object, by which by can access the &lt;a href=&quot;cachestorage&quot;&gt;&lt;code&gt;CacheStorage&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">在代码示例中，&amp;ldquo;缓存&amp;rdquo;是服务工作者的 &lt;code&gt;WorkerGlobalScope&lt;/code&gt; 的属性。它包含 &lt;code&gt;CacheStorage&lt;/code&gt; 对象，通过它可以访问&lt;a href=&quot;cachestorage&quot;&gt; &lt;code&gt;CacheStorage&lt;/code&gt; &lt;/a&gt;接口。</target>
        </trans-unit>
        <trans-unit id="790fbaf97cead8a6a45860bb674cff8e4c36ab8a" translate="yes" xml:space="preserve">
          <source>In the common case the base URL is simply the location of the document, but it can be affected by many factors, including the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/base&quot;&gt;&lt;code&gt;&amp;lt;base&amp;gt;&lt;/code&gt;&lt;/a&gt; element in HTML and &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/XML/xml:base&quot;&gt;xml:base&lt;/a&gt;&lt;/code&gt; attribute in XML.</source>
          <target state="translated">在常见情况下，基本URL只是文档的位置，但是它可能受许多因素影响，包括HTML中的&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/base&quot;&gt; &lt;code&gt;&amp;lt;base&amp;gt;&lt;/code&gt; &lt;/a&gt;元素和 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/XML/xml:base&quot;&gt;xml:base&lt;/a&gt;&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="e5efef753ebf52497839ffd70a6f90392e3a260d" translate="yes" xml:space="preserve">
          <source>In the console, the following trace will be displayed:</source>
          <target state="translated">在控制台中,将显示以下跟踪。</target>
        </trans-unit>
        <trans-unit id="184092cb6374f0fdb574e64edd6fa7228f3006f0" translate="yes" xml:space="preserve">
          <source>In the definition of &lt;code&gt;render()&lt;/code&gt; if &lt;code&gt;copyVideo&lt;/code&gt; is true, then we call &lt;code&gt;updateTexture()&lt;/code&gt; each time just before we call the &lt;code&gt;drawScene()&lt;/code&gt; function.</source>
          <target state="translated">在 &lt;code&gt;render()&lt;/code&gt; 的定义中，如果 &lt;code&gt;copyVideo&lt;/code&gt; 为true，则每次在调用 &lt;code&gt;drawScene()&lt;/code&gt; 函数之前，都会调用 &lt;code&gt;updateTexture()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1a2b40f1952f87fed97f07552defd99596f27dfe" translate="yes" xml:space="preserve">
          <source>In the demo &lt;a href=&quot;https://codepen.io/rachelnabors/pen/rxpmJL/?editors=0010&quot;&gt;Down the Rabbit Hole (with the Web Animation API)&lt;/a&gt;, we use the convenient &lt;code&gt;animate()&lt;/code&gt; method to immediately create and play an animation on the &lt;code&gt;#tunnel&lt;/code&gt; element to make it flow upwards, infinitely. Notice the array of objects passed as keyframes and also the timing options block.</source>
          <target state="translated">在演示&lt;a href=&quot;https://codepen.io/rachelnabors/pen/rxpmJL/?editors=0010&quot;&gt;&amp;ldquo;通过兔子孔向下&amp;rdquo;（使用Web动画API）中&lt;/a&gt;，我们使用便捷的 &lt;code&gt;animate()&lt;/code&gt; 方法立即创建并在 &lt;code&gt;#tunnel&lt;/code&gt; 元素上播放动画以使其无限向上流动。请注意，作为关键帧传递的对象数组以及时序选项块。</target>
        </trans-unit>
        <trans-unit id="202f4b98e2e457f51462bd23a0954aa84dff43bc" translate="yes" xml:space="preserve">
          <source>In the example below, 10 straight lines are drawn with increasing line widths. The line on the far left is 1.0 units wide. However, the leftmost and all other odd-integer-width thickness lines do not appear crisp, because of the path's positioning.</source>
          <target state="translated">在下面的例子中,画了10条直线,线宽越来越大。最左边的线宽为1.0单位。但是,由于路径的定位,最左边和其他所有奇数整数宽度的粗细线都不显得清晰。</target>
        </trans-unit>
        <trans-unit id="4780447d1e77484538059276c40fc54c59ac1837" translate="yes" xml:space="preserve">
          <source>In the example below, &lt;code&gt;onpayerdetailchange&lt;/code&gt; is used to set up a listener for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/payerdetailchange&quot;&gt;payerdetailchange&lt;/a&gt;&lt;/code&gt; event in order to validate the information entered by the user, requesting that any mistakes be corrected</source>
          <target state="translated">在下面的示例中， &lt;code&gt;onpayerdetailchange&lt;/code&gt; 用于设置 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/payerdetailchange&quot;&gt;payerdetailchange&lt;/a&gt;&lt;/code&gt; 事件的侦听器，以验证用户输入的信息，要求更正所有错误</target>
        </trans-unit>
        <trans-unit id="206c3c63cab7b422d50e2a3959c149ce7f63615b" translate="yes" xml:space="preserve">
          <source>In the example below, a data channel is established, and an &lt;code&gt;onerror&lt;/code&gt; handler is added to it. The error handler passes information about the error to a UI library's alert box function to present an error message to the user.</source>
          <target state="translated">在下面的示例中，建立了一个数据通道，并向其添加了 &lt;code&gt;onerror&lt;/code&gt; 处理程序。错误处理程序将有关错误的信息传递给UI库的警报框函数，以向用户显示错误消息。</target>
        </trans-unit>
        <trans-unit id="cc512e47a94228213beabd56b67ae6b89f92ac38" translate="yes" xml:space="preserve">
          <source>In the example below, the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/PaymentRequest/onshippingaoptionchange&quot;&gt;&lt;code&gt;PaymentRequest.onshippingaoptionchange&lt;/code&gt;&lt;/a&gt; event is called. It calls &lt;code&gt;updateDetails()&lt;/code&gt; to toggle the shipping method between &quot;standard&quot; and &quot;express&quot;.</source>
          <target state="translated">在以下示例中，调用了&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/PaymentRequest/onshippingaoptionchange&quot;&gt; &lt;code&gt;PaymentRequest.onshippingaoptionchange&lt;/code&gt; &lt;/a&gt;事件。它调用 &lt;code&gt;updateDetails()&lt;/code&gt; 在&amp;ldquo;标准&amp;rdquo;和&amp;ldquo;表达&amp;rdquo;之间切换运输方法。</target>
        </trans-unit>
        <trans-unit id="034961eecc07f0e41d6e1c8958f78f79a6d78deb" translate="yes" xml:space="preserve">
          <source>In the example below, the &lt;a href=&quot;onshippingoptionchange&quot;&gt;&lt;code&gt;PaymentRequest.onshippingoptionchange&lt;/code&gt;&lt;/a&gt; and the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/PaymentRequest/onshippingaoptionchange&quot;&gt;&lt;code&gt;PaymentRequest.onshippingaoptionchange&lt;/code&gt;&lt;/a&gt; events are dispatched. In each calls to &lt;code&gt;updateDetails()&lt;/code&gt; are made, one using a promise, and the other with a plain JS object. This demotrates synchrounous and asynchronous updates to a payment sheet.</source>
          <target state="translated">在下面的示例中，调度了&lt;a href=&quot;onshippingoptionchange&quot;&gt; &lt;code&gt;PaymentRequest.onshippingoptionchange&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/PaymentRequest/onshippingaoptionchange&quot;&gt; &lt;code&gt;PaymentRequest.onshippingaoptionchange&lt;/code&gt; &lt;/a&gt;事件。在对 &lt;code&gt;updateDetails()&lt;/code&gt; 的每次调用中，一个调用使用Promise，另一个调用使用普通的JS对象。这会将同步更新和异步更新降级为付款表。</target>
        </trans-unit>
        <trans-unit id="106802246ff2cba3885c494ae2d379522d6bdd57" translate="yes" xml:space="preserve">
          <source>In the example below, the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/target&quot;&gt;target&lt;/a&gt;&lt;/code&gt; attribute of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/SVG/Element/a&quot;&gt;&lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt;&lt;/a&gt; element is set to &lt;code&gt;_blank&lt;/code&gt; and when the link is clicked, it logs to notify whether the condition is met or not.</source>
          <target state="translated">在下面的示例中，&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/SVG/Element/a&quot;&gt; &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; &lt;/a&gt;元素的 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/target&quot;&gt;target&lt;/a&gt;&lt;/code&gt; 属性设置为 &lt;code&gt;_blank&lt;/code&gt; ,并且单击链接时，它将记录以通知是否满足条件。</target>
        </trans-unit>
        <trans-unit id="c6e4566e82bb56ea28b1e39a446bd27f432d4250" translate="yes" xml:space="preserve">
          <source>In the example below, the cost of shipping varies by geography. When the &lt;a href=&quot;../paymentrequest/onshippingaddresschange&quot;&gt;&lt;code&gt;PaymentRequest.onshippingaddresschange&lt;/code&gt;&lt;/a&gt; is called, &lt;code&gt;updateDetails()&lt;/code&gt; is called to update the details of the &lt;code&gt;PaymentRequest&lt;/code&gt;, using &lt;code&gt;shippingAddress&lt;/code&gt; to set the correct shipping cost.</source>
          <target state="translated">在下面的示例中，运输成本因地理位置而异。当&lt;a href=&quot;../paymentrequest/onshippingaddresschange&quot;&gt; &lt;code&gt;PaymentRequest.onshippingaddresschange&lt;/code&gt; &lt;/a&gt;被调用时， &lt;code&gt;updateDetails()&lt;/code&gt; 被调用，以更新的细节 &lt;code&gt;PaymentRequest&lt;/code&gt; ，使用 &lt;code&gt;shippingAddress&lt;/code&gt; 设置正确的运输成本。</target>
        </trans-unit>
        <trans-unit id="49f2eefcbea9337ae5b9fac581b8e7748a4c155f" translate="yes" xml:space="preserve">
          <source>In the example below, the cost of shipping varies by geography. When the &lt;a href=&quot;onshippingaddresschange&quot;&gt;&lt;code&gt;PaymentRequest.onshippingaddresschange&lt;/code&gt;&lt;/a&gt; is called, &lt;code&gt;updateDetails()&lt;/code&gt; is called to update the details of the &lt;code&gt;PaymentRequest&lt;/code&gt;, using &lt;code&gt;shippingAddress&lt;/code&gt; to set the correct shipping cost.</source>
          <target state="translated">在下面的示例中，运输成本因地理位置而异。当&lt;a href=&quot;onshippingaddresschange&quot;&gt; &lt;code&gt;PaymentRequest.onshippingaddresschange&lt;/code&gt; &lt;/a&gt;被调用时， &lt;code&gt;updateDetails()&lt;/code&gt; 被调用，以更新的细节 &lt;code&gt;PaymentRequest&lt;/code&gt; ，使用 &lt;code&gt;shippingAddress&lt;/code&gt; 设置正确的运输成本。</target>
        </trans-unit>
        <trans-unit id="f834c92189fcef8cd83b56bd0f3787c0ffac414c" translate="yes" xml:space="preserve">
          <source>In the example below, we create a node with mixed display and whitespace characters and the attribute is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">在下面的示例中，我们创建一个包含混合显示字符和空白字符的节点，并且属性为 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f50f8120d66119424065d02349efc2de9a03cfe6" translate="yes" xml:space="preserve">
          <source>In the example below, we see the implementation of a handler for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/negotiationneeded&quot;&gt;negotiationneeded&lt;/a&gt;&lt;/code&gt; event.</source>
          <target state="translated">在下面的示例中，我们看到了 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/negotiationneeded&quot;&gt;negotiationneeded&lt;/a&gt;&lt;/code&gt; 事件的处理程序的实现。</target>
        </trans-unit>
        <trans-unit id="dbc943052673e05ede088a6d5deb6f01db9d4689" translate="yes" xml:space="preserve">
          <source>In the example here, once we have retrieved the data, we insert the string as the textual content of the target. This has the effect of inserting the dragged text where it was dropped, assuming that the drop target is an area of text such as a &lt;code&gt;p&lt;/code&gt; or &lt;code&gt;div&lt;/code&gt; element.</source>
          <target state="translated">在此处的示例中，一旦检索到数据，就将字符串插入为目标的文本内容。假定放置目标是文本区域（例如 &lt;code&gt;p&lt;/code&gt; 或 &lt;code&gt;div&lt;/code&gt; 元素），这具有将拖动的文本插入放置位置的效果。</target>
        </trans-unit>
        <trans-unit id="aace07f97eb3431fa0c4367c7c8f5e95ae0370e2" translate="yes" xml:space="preserve">
          <source>In the examples above we are already making use of the &lt;code&gt;font&lt;/code&gt; property to make the text a bit larger than the default size. There are some more properties which let you adjust the way the text gets displayed on the canvas:</source>
          <target state="translated">在上面的示例中，我们已经在使用 &lt;code&gt;font&lt;/code&gt; 属性来使文本略大于默认大小。还有其他一些属性可以让您调整文本在画布上的显示方式：</target>
        </trans-unit>
        <trans-unit id="82a8b02b028ba58b7dfd42bdea7a01498ef4c3a6" translate="yes" xml:space="preserve">
          <source>In the examples below, we'll refer to the peer which is turning &quot;hold&quot; mode on and off as the local peer and the user being placed on hold as the remote peer.</source>
          <target state="translated">在下面的例子中,我们将开启和关闭 &quot;保持 &quot;模式的对等体称为本地对等体,将被保持的用户称为远程对等体。</target>
        </trans-unit>
        <trans-unit id="f0ca896ae7b838120090476440aeaef9eca87c3f" translate="yes" xml:space="preserve">
          <source>In the examples below, we'll use the &lt;a href=&quot;../../window/requestanimationframe&quot;&gt;&lt;code&gt;window.requestAnimationFrame()&lt;/code&gt;&lt;/a&gt; method to control the animation. The &lt;code&gt;requestAnimationFrame&lt;/code&gt; method provides a smoother and more efficient way for animating by calling the animation frame when the system is ready to paint the frame. The number of callbacks is usually 60 times per second and may be reduced to a lower rate when running in background tabs. For more information about the animation loop, especially for games, see the article &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Games/Anatomy&quot;&gt;Anatomy of a video game&lt;/a&gt; in our &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Games&quot;&gt;Game development zone&lt;/a&gt;.</source>
          <target state="translated">在下面的示例中，我们将使用&lt;a href=&quot;../../window/requestanimationframe&quot;&gt; &lt;code&gt;window.requestAnimationFrame()&lt;/code&gt; &lt;/a&gt;方法来控制动画。的 &lt;code&gt;requestAnimationFrame&lt;/code&gt; 方法提供了一种用于通过调用动画帧当系统准备油漆帧动画更平滑和更有效的方式。回调次数通常为每秒60次，并且在后台选项卡中运行时可能会降低速率。有关动画循环（尤其是游戏）的更多信息，请参见我们的&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Games&quot;&gt;游戏开发专区中&lt;/a&gt;的文章&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Games/Anatomy&quot;&gt;&amp;ldquo;视频游戏的解剖&amp;rdquo;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5ead6a925f82797217bc4febda9e2848c9ca16de" translate="yes" xml:space="preserve">
          <source>In the final example of this chapter, we'll build a little art gallery. The gallery consists of a table containing several images. When the page is loaded, a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt;&lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt;&lt;/a&gt; element is inserted for each image and a frame is drawn around it.</source>
          <target state="translated">在本章的最后一个示例中，我们将建立一个小型美术馆。画廊由包含多个图像的表格组成。加载页面时，将为每个图像插入&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt; &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; &lt;/a&gt;元素，并在其周围绘制一个框架。</target>
        </trans-unit>
        <trans-unit id="00f8f41bb21484324aa74a2ec592c179f7309a51" translate="yes" xml:space="preserve">
          <source>In the final part of the handler, we include an &lt;a href=&quot;../speechsynthesisutterance/onpause&quot;&gt;&lt;code&gt;SpeechSynthesisUtterance.onpause&lt;/code&gt;&lt;/a&gt; handler to demonstrate how &lt;a href=&quot;../speechsynthesisevent&quot;&gt;&lt;code&gt;SpeechSynthesisEvent&lt;/code&gt;&lt;/a&gt; can be put to good use. When &lt;a href=&quot;../speechsynthesis/pause&quot;&gt;&lt;code&gt;SpeechSynthesis.pause()&lt;/code&gt;&lt;/a&gt; is invoked, this returns a message reporting the character number and name that the speech was paused at.</source>
          <target state="translated">在处理程序的最后部分，我们包含了&lt;a href=&quot;../speechsynthesisutterance/onpause&quot;&gt; &lt;code&gt;SpeechSynthesisUtterance.onpause&lt;/code&gt; &lt;/a&gt;处理程序，以演示如何充分利用&lt;a href=&quot;../speechsynthesisevent&quot;&gt; &lt;code&gt;SpeechSynthesisEvent&lt;/code&gt; &lt;/a&gt;。当&lt;a href=&quot;../speechsynthesis/pause&quot;&gt; &lt;code&gt;SpeechSynthesis.pause()&lt;/code&gt; &lt;/a&gt;被调用，这将返回一条消息，报告的字符数量和名称，该讲话被暂停在。</target>
        </trans-unit>
        <trans-unit id="d72204efa77b6140c17c0cf9a91bf2d8f8666f30" translate="yes" xml:space="preserve">
          <source>In the first case above, a new (anonymous) handler function is created with each iteration of the loop. In the second case, the same previously declared function is used as an event handler, which results in smaller memory consumption because there is only one handler function created. Moreover, in the first case, it is not possible to call &lt;a href=&quot;removeeventlistener&quot;&gt;&lt;code&gt;removeEventListener()&lt;/code&gt;&lt;/a&gt; because no reference to the anonymous function is kept (or here, not kept to any of the multiple anonymous functions the loop might create.) In the second case, it's possible to do &lt;code&gt;myElement.removeEventListener(&quot;click&quot;, processEvent, false)&lt;/code&gt; because &lt;code&gt;processEvent&lt;/code&gt; is the function reference.</source>
          <target state="translated">在上述第一种情况下，循环的每次迭代都会创建一个新的（匿名）处理函数。在第二种情况下，先前声明的相同函数用作事件处理程序，由于仅创建了一个处理程序函数，因此可减少内存消耗。此外，在第一种情况下，无法调用&lt;a href=&quot;removeeventlistener&quot;&gt; &lt;code&gt;removeEventListener()&lt;/code&gt; ,&lt;/a&gt;因为没有保留对匿名函数的引用（或者在这里，未保留对循环可能创建的多个匿名函数中的任何一个的引用。）在第二种情况下，它是可以执行 &lt;code&gt;myElement.removeEventListener(&quot;click&quot;, processEvent, false)&lt;/code&gt; 因为 &lt;code&gt;processEvent&lt;/code&gt; 是函数引用。</target>
        </trans-unit>
        <trans-unit id="b6a06616d2d1a79d80ad40c424ea14279868eba9" translate="yes" xml:space="preserve">
          <source>In the first example, we have to wait for &lt;code&gt;myFunction()&lt;/code&gt; to run and return &lt;code&gt;value&lt;/code&gt; before any more of the code can execute. In the second example, &lt;code&gt;myFunction()&lt;/code&gt; returns a promise for &lt;code&gt;value&lt;/code&gt;, then the rest of the code can carry on running. When the promise resolves, the code inside &lt;code&gt;then&lt;/code&gt; will be run, asynchronously.</source>
          <target state="translated">在第一个示例中，我们必须等待 &lt;code&gt;myFunction()&lt;/code&gt; 运行并返回 &lt;code&gt;value&lt;/code&gt; 然后才能执行更多代码。在第二个示例中， &lt;code&gt;myFunction()&lt;/code&gt; 返回 &lt;code&gt;value&lt;/code&gt; 的promise ，然后其余代码可以继续运行。当承诺做出决议，里面的代码 &lt;code&gt;then&lt;/code&gt; 将，异步运行。</target>
        </trans-unit>
        <trans-unit id="237bf8a80763a604c41a957e192af6c016815343" translate="yes" xml:space="preserve">
          <source>In the first few lines of code, we draw a black rectangle the size of the canvas as a backdrop, then translate the origin to the center. Next, we create the circular clipping path by drawing an arc and calling &lt;code&gt;clip()&lt;/code&gt;. Clipping paths are also part of the canvas save state. If we wanted to keep the original clipping path we could have saved the canvas state before creating the new one.</source>
          <target state="translated">在代码的前几行中，我们绘制了一个以画布大小为背景的黑色矩形作为背景，然后将原点平移到中心。接下来，我们通过绘制圆弧并调用 &lt;code&gt;clip()&lt;/code&gt; 来创建圆形剪切路径。剪切路径也是画布保存状态的一部分。如果我们想保留原始的剪切路径，则可以在创建新的画布状态之前保存其画布状态。</target>
        </trans-unit>
        <trans-unit id="e01d4fbb899e1c9bfb390594c1d8dfcfcc14fd99" translate="yes" xml:space="preserve">
          <source>In the following code block, you can see a &lt;code&gt;handleMessage&lt;/code&gt; handler function, run when a message is sent back to this document using &lt;a href=&quot;../eventtarget/addeventlistener&quot;&gt;&lt;code&gt;EventTarget.addEventListener&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在下面的代码块中，您可以看到 &lt;code&gt;handleMessage&lt;/code&gt; 处理函数，该函数在使用&lt;a href=&quot;../eventtarget/addeventlistener&quot;&gt; &lt;code&gt;EventTarget.addEventListener&lt;/code&gt; &lt;/a&gt;将消息发送回此文档时运行。</target>
        </trans-unit>
        <trans-unit id="2d23ea443c6c17d8a7b8694e2f35584131bc5044" translate="yes" xml:space="preserve">
          <source>In the following code block, you can see a &lt;code&gt;handleMessage&lt;/code&gt; handler function, run when a message is sent back to this document using &lt;code&gt;onmessage&lt;/code&gt;:</source>
          <target state="translated">在以下代码块中，您可以看到一个 &lt;code&gt;handleMessage&lt;/code&gt; 处理函数，该函数在使用 &lt;code&gt;onmessage&lt;/code&gt; 将消息发送回该文档时运行：</target>
        </trans-unit>
        <trans-unit id="0ef7b50d4cd728b13b1faa603128d4d510d733a4" translate="yes" xml:space="preserve">
          <source>In the following code block, you can see a new channel being created using the &lt;a href=&quot;../messagechannel&quot;&gt;&lt;code&gt;MessageChannel.MessageChannel&lt;/code&gt;&lt;/a&gt; constructor. When the IFrame has loaded, we pass &lt;a href=&quot;../messagechannel/port2&quot;&gt;&lt;code&gt;MessageChannel.port2&lt;/code&gt;&lt;/a&gt; to the IFrame using &lt;a href=&quot;../window/postmessage&quot;&gt;&lt;code&gt;window.postMessage&lt;/code&gt;&lt;/a&gt; along with a message. The &lt;code&gt;handleMessage&lt;/code&gt; handler then responds to a message being sent back from the IFrame using &lt;code&gt;onmessage&lt;/code&gt;, putting it into a paragraph &amp;mdash; &lt;a href=&quot;../messagechannel/port1&quot;&gt;&lt;code&gt;MessageChannel.port1&lt;/code&gt;&lt;/a&gt; is listened to, to check when the message arrives.</source>
          <target state="translated">在下面的代码块中，您可以看到正在使用&lt;a href=&quot;../messagechannel&quot;&gt; &lt;code&gt;MessageChannel.MessageChannel&lt;/code&gt; &lt;/a&gt;构造函数创建的新通道。加载IFrame后，我们使用&lt;a href=&quot;../window/postmessage&quot;&gt; &lt;code&gt;window.postMessage&lt;/code&gt; &lt;/a&gt;和消息将&lt;a href=&quot;../messagechannel/port2&quot;&gt; &lt;code&gt;MessageChannel.port2&lt;/code&gt; &lt;/a&gt;传递到IFrame 。然后， &lt;code&gt;handleMessage&lt;/code&gt; 处理程序使用 &lt;code&gt;onmessage&lt;/code&gt; 响应从IFrame发送回的消息，将其放入一个段落中- 侦听&lt;a href=&quot;../messagechannel/port1&quot;&gt; &lt;code&gt;MessageChannel.port1&lt;/code&gt; &lt;/a&gt;，以检查消息何时到达。</target>
        </trans-unit>
        <trans-unit id="e25cf09426d4c6a9936cbd7dd3d621e9ca1d71c2" translate="yes" xml:space="preserve">
          <source>In the following code block, you can see a new channel being created using the &lt;a href=&quot;../messagechannel&quot;&gt;&lt;code&gt;MessageChannel.MessageChannel&lt;/code&gt;&lt;/a&gt; constructor. When the IFrame has loaded, we pass &lt;a href=&quot;../messagechannel/port2&quot;&gt;&lt;code&gt;MessageChannel.port2&lt;/code&gt;&lt;/a&gt; to the IFrame using &lt;a href=&quot;postmessage&quot;&gt;&lt;code&gt;MessagePort.postMessage&lt;/code&gt;&lt;/a&gt; along with a message. The &lt;code&gt;handleMessage&lt;/code&gt; handler then responds to a message being sent back from the IFrame using &lt;code&gt;onmessage&lt;/code&gt;, putting it into a paragraph &amp;mdash; &lt;a href=&quot;../messagechannel/port1&quot;&gt;&lt;code&gt;MessageChannel.port1&lt;/code&gt;&lt;/a&gt; is listened to, to check when the message arrives.</source>
          <target state="translated">在下面的代码块中，您可以看到正在使用&lt;a href=&quot;../messagechannel&quot;&gt; &lt;code&gt;MessageChannel.MessageChannel&lt;/code&gt; &lt;/a&gt;构造函数创建的新通道。加载IFrame后，我们使用&lt;a href=&quot;postmessage&quot;&gt; &lt;code&gt;MessagePort.postMessage&lt;/code&gt; &lt;/a&gt;和消息将&lt;a href=&quot;../messagechannel/port2&quot;&gt; &lt;code&gt;MessageChannel.port2&lt;/code&gt; &lt;/a&gt;传递到IFrame 。然后， &lt;code&gt;handleMessage&lt;/code&gt; 处理程序使用 &lt;code&gt;onmessage&lt;/code&gt; 响应从IFrame发送回的消息，将其放入一个段落中- 侦听&lt;a href=&quot;../messagechannel/port1&quot;&gt; &lt;code&gt;MessageChannel.port1&lt;/code&gt; &lt;/a&gt;，以检查消息何时到达。</target>
        </trans-unit>
        <trans-unit id="238f0592be750da1ce24eabeb82568b629e83a6c" translate="yes" xml:space="preserve">
          <source>In the following code block, you can see a new channel being created using the &lt;a href=&quot;../messagechannel&quot;&gt;&lt;code&gt;MessageChannel.MessageChannel&lt;/code&gt;&lt;/a&gt; constructor. When the IFrame has loaded, we pass &lt;code&gt;port2&lt;/code&gt; to the IFrame using &lt;a href=&quot;../messageport/postmessage&quot;&gt;&lt;code&gt;MessagePort.postMessage&lt;/code&gt;&lt;/a&gt; along with a message. The &lt;code&gt;handleMessage&lt;/code&gt; handler then responds to a message being sent back from the IFrame (using &lt;a href=&quot;../messageport/onmessage&quot;&gt;&lt;code&gt;MessagePort.onmessage&lt;/code&gt;&lt;/a&gt;), putting it into a paragraph. &lt;a href=&quot;port1&quot;&gt;&lt;code&gt;MessageChannel.port1&lt;/code&gt;&lt;/a&gt; is listened to, to check when the message arrives.</source>
          <target state="translated">在下面的代码块中，您可以看到正在使用&lt;a href=&quot;../messagechannel&quot;&gt; &lt;code&gt;MessageChannel.MessageChannel&lt;/code&gt; &lt;/a&gt;构造函数创建的新通道。加载IFrame后，我们使用&lt;a href=&quot;../messageport/postmessage&quot;&gt; &lt;code&gt;MessagePort.postMessage&lt;/code&gt; &lt;/a&gt;和消息将 &lt;code&gt;port2&lt;/code&gt; 传递到IFrame 。然后， &lt;code&gt;handleMessage&lt;/code&gt; 处理程序响应从IFrame发送回的消息（使用&lt;a href=&quot;../messageport/onmessage&quot;&gt; &lt;code&gt;MessagePort.onmessage&lt;/code&gt; &lt;/a&gt;），将其放入段落中。侦听&lt;a href=&quot;port1&quot;&gt; &lt;code&gt;MessageChannel.port1&lt;/code&gt; &lt;/a&gt;，以检查消息何时到达。</target>
        </trans-unit>
        <trans-unit id="8c569cdb98e9ad9e8e436cf060158927e2b6214b" translate="yes" xml:space="preserve">
          <source>In the following code block, you can see a new channel being created using the &lt;a href=&quot;messagechannel&quot;&gt;&lt;code&gt;MessageChannel()&lt;/code&gt;&lt;/a&gt; constructor. When the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe&quot;&gt;&lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt;&lt;/a&gt; has loaded, we pass &lt;a href=&quot;port2&quot;&gt;&lt;code&gt;MessageChannel.port2&lt;/code&gt;&lt;/a&gt; to the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe&quot;&gt;&lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt;&lt;/a&gt; using &lt;a href=&quot;../messageport/postmessage&quot;&gt;&lt;code&gt;MessagePort.postMessage&lt;/code&gt;&lt;/a&gt; along with a message. The &lt;code&gt;handleMessage&lt;/code&gt; handler then responds to a message being sent back from the &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; (using &lt;a href=&quot;../messageport/onmessage&quot;&gt;&lt;code&gt;MessagePort.onmessage&lt;/code&gt;&lt;/a&gt;), putting it into a paragraph. The &lt;code&gt;handleMessage&lt;/code&gt; method is associated to the &lt;code&gt;port1&lt;/code&gt; to listen when the message arrives.</source>
          <target state="translated">在下面的代码块中，您可以看到正在使用&lt;a href=&quot;messagechannel&quot;&gt; &lt;code&gt;MessageChannel()&lt;/code&gt; &lt;/a&gt;构造函数创建一个新通道。当&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe&quot;&gt; &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; &lt;/a&gt;加载，我们通过&lt;a href=&quot;port2&quot;&gt; &lt;code&gt;MessageChannel.port2&lt;/code&gt; &lt;/a&gt;到&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe&quot;&gt; &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; &lt;/a&gt;使用&lt;a href=&quot;../messageport/postmessage&quot;&gt; &lt;code&gt;MessagePort.postMessage&lt;/code&gt; &lt;/a&gt;与消息一起。然后， &lt;code&gt;handleMessage&lt;/code&gt; 处理程序响应从 &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; 发送回的消息（使用&lt;a href=&quot;../messageport/onmessage&quot;&gt; &lt;code&gt;MessagePort.onmessage&lt;/code&gt; &lt;/a&gt;），并将其放入段落中。所述 &lt;code&gt;handleMessage&lt;/code&gt; 方法被关联到 &lt;code&gt;port1&lt;/code&gt; 邮件到达时听。</target>
        </trans-unit>
        <trans-unit id="039a0c183e5267a50a7d7965f3b3a21f6386cb9c" translate="yes" xml:space="preserve">
          <source>In the following code snippet, we make a request to open a database, and include handlers for the success and error cases. For a full working example, see our &lt;a href=&quot;https://github.com/mdn/to-do-notifications/tree/gh-pages&quot;&gt;To-do Notifications&lt;/a&gt; app (&lt;a href=&quot;http://mdn.github.io/to-do-notifications/&quot;&gt;view example live&lt;/a&gt;.)</source>
          <target state="translated">在下面的代码片段中，我们请求打开数据库，并包含成功和错误情况的处理程序。有关完整的工作示例，请参阅我们&lt;a href=&quot;https://github.com/mdn/to-do-notifications/tree/gh-pages&quot;&gt;的待办事项通知&lt;/a&gt;应用程序（&lt;a href=&quot;http://mdn.github.io/to-do-notifications/&quot;&gt;查看实时示例&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="203564004d63ef9803dfc5ed03299bf1c96dc000" translate="yes" xml:space="preserve">
          <source>In the following code snippet, we make a request to open a database, and include handlers for the success and error cases. For a full working example, see our &lt;a href=&quot;https://github.com/mdn/to-do-notifications/tree/gh-pages&quot;&gt;To-do Notifications&lt;/a&gt; app (&lt;a href=&quot;https://mdn.github.io/to-do-notifications/&quot;&gt;view example live&lt;/a&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8cbca89f7feedc8066d85994128a264e3657052" translate="yes" xml:space="preserve">
          <source>In the following code snippet, we make a request to open a database, and include handlers for the success and error cases. These events are fired via the custom &lt;code&gt;IDBVersionChangeEvent&lt;/code&gt; interface. For a full working example, see our &lt;a href=&quot;https://github.com/mdn/to-do-notifications/tree/gh-pages&quot;&gt;To-do Notifications&lt;/a&gt; app (&lt;a href=&quot;http://mdn.github.io/to-do-notifications/&quot;&gt;view example live&lt;/a&gt;.)</source>
          <target state="translated">在下面的代码片段中，我们请求打开数据库，并包含成功和错误情况的处理程序。这些事件通过自定义 &lt;code&gt;IDBVersionChangeEvent&lt;/code&gt; 接口触发。有关完整的工作示例，请参阅我们&lt;a href=&quot;https://github.com/mdn/to-do-notifications/tree/gh-pages&quot;&gt;的待办事项通知&lt;/a&gt;应用程序（&lt;a href=&quot;http://mdn.github.io/to-do-notifications/&quot;&gt;查看实时示例&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="a160d6777c219baa8546ec200f449a4e02c14895" translate="yes" xml:space="preserve">
          <source>In the following code snippet, we make a request to open a database, and include handlers for the success and error cases. These events are fired via the custom &lt;code&gt;IDBVersionChangeEvent&lt;/code&gt; interface. For a full working example, see our &lt;a href=&quot;https://github.com/mdn/to-do-notifications/tree/gh-pages&quot;&gt;To-do Notifications&lt;/a&gt; app (&lt;a href=&quot;https://mdn.github.io/to-do-notifications/&quot;&gt;view example live&lt;/a&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="420b628a66fb512c01a6129bb5bc84419417fe9e" translate="yes" xml:space="preserve">
          <source>In the following code snippet, we make a request to open a database, and include handlers for the success and error cases. Upon a version change (after an &lt;code&gt;upgradedneeded&lt;/code&gt; event), the &lt;code&gt;success&lt;/code&gt; event will implement the &lt;code&gt;IDBVersionChangeEvent&lt;/code&gt; interface. For a full working example, see our &lt;a href=&quot;https://github.com/mdn/to-do-notifications/tree/gh-pages&quot;&gt;To-do Notifications&lt;/a&gt; app (&lt;a href=&quot;http://mdn.github.io/to-do-notifications/&quot;&gt;view example live&lt;/a&gt;.)</source>
          <target state="translated">在下面的代码片段中，我们请求打开数据库，并包含成功和错误情况的处理程序。在版本更改后（在需要 &lt;code&gt;upgradedneeded&lt;/code&gt; 事件之后）， &lt;code&gt;success&lt;/code&gt; 事件将实现 &lt;code&gt;IDBVersionChangeEvent&lt;/code&gt; 接口。有关完整的工作示例，请参阅我们&lt;a href=&quot;https://github.com/mdn/to-do-notifications/tree/gh-pages&quot;&gt;的待办事项通知&lt;/a&gt;应用程序（&lt;a href=&quot;http://mdn.github.io/to-do-notifications/&quot;&gt;查看实时示例&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="d8e2942e5c163a847dd284e6198181ef8ebdcc5b" translate="yes" xml:space="preserve">
          <source>In the following code snippet, we make a request to open a database, and include handlers for the success and error cases. Upon a version change (after an &lt;code&gt;upgradedneeded&lt;/code&gt; event), the &lt;code&gt;success&lt;/code&gt; event will implement the &lt;code&gt;IDBVersionChangeEvent&lt;/code&gt; interface. For a full working example, see our &lt;a href=&quot;https://github.com/mdn/to-do-notifications/tree/gh-pages&quot;&gt;To-do Notifications&lt;/a&gt; app (&lt;a href=&quot;https://mdn.github.io/to-do-notifications/&quot;&gt;view example live&lt;/a&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62bc6fcc2be4b4f1f6f5c4e9f84a194400ac424f" translate="yes" xml:space="preserve">
          <source>In the following code snippet, we open a database asynchronously (&lt;a href=&quot;idbfactory&quot;&gt;&lt;code&gt;IDBFactory&lt;/code&gt;&lt;/a&gt;), handle success and error cases, and create a new object store in the case that an upgrade is needed (&lt;a href=&quot;idbdatabase&quot;&gt;&lt;code&gt;IDBdatabase&lt;/code&gt;&lt;/a&gt;). For a complete working example, see our &lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;To-do Notifications&lt;/a&gt; app (&lt;a href=&quot;http://mdn.github.io/to-do-notifications/&quot;&gt;view example live&lt;/a&gt;.)</source>
          <target state="translated">在下面的代码片段中，我们异步打开数据库（&lt;a href=&quot;idbfactory&quot;&gt; &lt;code&gt;IDBFactory&lt;/code&gt; &lt;/a&gt;），处理成功和错误情况，并在需要升级的情况下创建一个新的对象存储（&lt;a href=&quot;idbdatabase&quot;&gt; &lt;code&gt;IDBdatabase&lt;/code&gt; &lt;/a&gt;）。有关完整的工作示例，请参阅我们&lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;的待办事项通知&lt;/a&gt;应用程序（&lt;a href=&quot;http://mdn.github.io/to-do-notifications/&quot;&gt;查看示例live&lt;/a&gt;。）</target>
        </trans-unit>
        <trans-unit id="0ec1f5ac3d97e3fe9dce538aea60fd75cf2e7b74" translate="yes" xml:space="preserve">
          <source>In the following code snippet, we open a database asynchronously (&lt;a href=&quot;idbfactory&quot;&gt;&lt;code&gt;IDBFactory&lt;/code&gt;&lt;/a&gt;), handle success and error cases, and create a new object store in the case that an upgrade is needed (&lt;a href=&quot;idbdatabase&quot;&gt;&lt;code&gt;IDBdatabase&lt;/code&gt;&lt;/a&gt;). For a complete working example, see our &lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;To-do Notifications&lt;/a&gt; app (&lt;a href=&quot;https://mdn.github.io/to-do-notifications/&quot;&gt;view example live&lt;/a&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5201c411fb9613fec411faeac1fccc27317c475e" translate="yes" xml:space="preserve">
          <source>In the following code snippet, we open a database asynchronously and make a request; &lt;code&gt;onerror&lt;/code&gt; and &lt;code&gt;onsuccess&lt;/code&gt; functions are included to handle the success and error cases. For a full working example, see our &lt;a href=&quot;https://github.com/chrisdavidmills/to-do-notifications/tree/gh-pages&quot;&gt;To-do Notifications&lt;/a&gt; app (&lt;a href=&quot;http://chrisdavidmills.github.io/to-do-notifications/&quot;&gt;view example live&lt;/a&gt;.)</source>
          <target state="translated">在以下代码片段中，我们异步打开数据库并发出请求； &lt;code&gt;onerror&lt;/code&gt; 和 &lt;code&gt;onsuccess&lt;/code&gt; 函数来处理成功和错误情况。有关完整的工作示例，请参阅我们&lt;a href=&quot;https://github.com/chrisdavidmills/to-do-notifications/tree/gh-pages&quot;&gt;的待办事项通知&lt;/a&gt;应用程序（&lt;a href=&quot;http://chrisdavidmills.github.io/to-do-notifications/&quot;&gt;查看实时示例&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="03954c9da8614f1b491551a23db847f36720de4d" translate="yes" xml:space="preserve">
          <source>In the following code snippet, we open a database asynchronously and make a request; &lt;code&gt;onerror&lt;/code&gt; and &lt;code&gt;onsuccess&lt;/code&gt; functions are included to handle the success and error cases. For a full working example, see our &lt;a href=&quot;https://github.com/chrisdavidmills/to-do-notifications/tree/gh-pages&quot;&gt;To-do Notifications&lt;/a&gt; app (&lt;a href=&quot;https://chrisdavidmills.github.io/to-do-notifications/&quot;&gt;view example live&lt;/a&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6036a2ba927c9abc293afb9b69926b7f16b41102" translate="yes" xml:space="preserve">
          <source>In the following code snippet, we open a read/write transaction on our database and add some data to an object store using &lt;code&gt;add()&lt;/code&gt;. After the object store has been created, we log objectStore.autoIncrement to the console. For a full working example, see our &lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;To-do Notifications&lt;/a&gt; app (&lt;a href=&quot;http://mdn.github.io/to-do-notifications/&quot;&gt;view example live&lt;/a&gt;.)</source>
          <target state="translated">在以下代码片段中，我们在数据库上打开一个读/写事务，并使用 &lt;code&gt;add()&lt;/code&gt; 将一些数据添加到对象存储中。创建对象存储后，我们将objectStore.autoIncrement记录到控制台。有关完整的工作示例，请参阅我们&lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;的待办事项通知&lt;/a&gt;应用程序（&lt;a href=&quot;http://mdn.github.io/to-do-notifications/&quot;&gt;查看实时示例&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="281424c8b1c755a8d0bde6faaeb4b5d3cd5c9962" translate="yes" xml:space="preserve">
          <source>In the following code snippet, we open a read/write transaction on our database and add some data to an object store using &lt;code&gt;add()&lt;/code&gt;. After the object store has been created, we log objectStore.autoIncrement to the console. For a full working example, see our &lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;To-do Notifications&lt;/a&gt; app (&lt;a href=&quot;https://mdn.github.io/to-do-notifications/&quot;&gt;view example live&lt;/a&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dccc72e4a6a99203b539f07581c3ddeb17ef1de9" translate="yes" xml:space="preserve">
          <source>In the following code snippet, we open a read/write transaction on our database and add some data to an object store using &lt;code&gt;add()&lt;/code&gt;. After the object store has been created, we log objectStore.indexNames to the console. For a full working example, see our &lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;To-do Notifications&lt;/a&gt; app (&lt;a href=&quot;http://mdn.github.io/to-do-notifications/&quot;&gt;view example live&lt;/a&gt;.)</source>
          <target state="translated">在以下代码片段中，我们在数据库上打开一个读/写事务，并使用 &lt;code&gt;add()&lt;/code&gt; 将一些数据添加到对象存储中。创建对象存储后，我们将objectStore.indexNames记录到控制台。有关完整的工作示例，请参阅我们&lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;的待办事项通知&lt;/a&gt;应用程序（&lt;a href=&quot;http://mdn.github.io/to-do-notifications/&quot;&gt;查看实时示例&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="a595fbcb52a522d2d22487b4af1a945e6d7c11fc" translate="yes" xml:space="preserve">
          <source>In the following code snippet, we open a read/write transaction on our database and add some data to an object store using &lt;code&gt;add()&lt;/code&gt;. After the object store has been created, we log objectStore.indexNames to the console. For a full working example, see our &lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;To-do Notifications&lt;/a&gt; app (&lt;a href=&quot;https://mdn.github.io/to-do-notifications/&quot;&gt;view example live&lt;/a&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e91d5f62da27efa68634f15d76c6ace1df3b040d" translate="yes" xml:space="preserve">
          <source>In the following code snippet, we open a read/write transaction on our database and add some data to an object store using &lt;code&gt;add()&lt;/code&gt;. After the object store has been created, we log objectStore.keyPath to the console. For a full working example, see our &lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;To-do Notifications&lt;/a&gt; app (&lt;a href=&quot;http://mdn.github.io/to-do-notifications/&quot;&gt;view example live&lt;/a&gt;.)</source>
          <target state="translated">在以下代码片段中，我们在数据库上打开一个读/写事务，并使用 &lt;code&gt;add()&lt;/code&gt; 将一些数据添加到对象存储中。创建对象存储后，我们将objectStore.keyPath记录到控制台。有关完整的工作示例，请参阅我们&lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;的待办事项通知&lt;/a&gt;应用程序（&lt;a href=&quot;http://mdn.github.io/to-do-notifications/&quot;&gt;查看实时示例&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="25fd3c2809064c1e57b2ac1524d273c5bd0f0652" translate="yes" xml:space="preserve">
          <source>In the following code snippet, we open a read/write transaction on our database and add some data to an object store using &lt;code&gt;add()&lt;/code&gt;. After the object store has been created, we log objectStore.keyPath to the console. For a full working example, see our &lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;To-do Notifications&lt;/a&gt; app (&lt;a href=&quot;https://mdn.github.io/to-do-notifications/&quot;&gt;view example live&lt;/a&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8880b8fdee4d42f903cebcfe0d82afd6cc260c9b" translate="yes" xml:space="preserve">
          <source>In the following code snippet, we open a read/write transaction on our database and add some data to an object store using &lt;code&gt;add()&lt;/code&gt;. After the object store has been created, we log objectStore.name to the console. For a full working example, see our &lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;To-do Notifications&lt;/a&gt; app (&lt;a href=&quot;http://mdn.github.io/to-do-notifications/&quot;&gt;view example live&lt;/a&gt;.)</source>
          <target state="translated">在以下代码片段中，我们在数据库上打开一个读/写事务，并使用 &lt;code&gt;add()&lt;/code&gt; 将一些数据添加到对象存储中。创建对象存储后，我们将objectStore.name记录到控制台。有关完整的工作示例，请参阅我们&lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;的待办事项通知&lt;/a&gt;应用程序（&lt;a href=&quot;http://mdn.github.io/to-do-notifications/&quot;&gt;查看实时示例&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="95cdd9ddc979671b7f567bc0d120e89ff426c671" translate="yes" xml:space="preserve">
          <source>In the following code snippet, we open a read/write transaction on our database and add some data to an object store using &lt;code&gt;add()&lt;/code&gt;. After the object store has been created, we log objectStore.name to the console. For a full working example, see our &lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;To-do Notifications&lt;/a&gt; app (&lt;a href=&quot;https://mdn.github.io/to-do-notifications/&quot;&gt;view example live&lt;/a&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="947b2b78865f74f8222655dfed99286833cbbf25" translate="yes" xml:space="preserve">
          <source>In the following code snippet, we open a read/write transaction on our database and add some data to an object store using &lt;code&gt;add()&lt;/code&gt;. After the object store has been created, we log objectStore.transaction to the console. For a full working example, see our &lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;To-do Notifications&lt;/a&gt; app (&lt;a href=&quot;http://mdn.github.io/to-do-notifications/&quot;&gt;view example live&lt;/a&gt;.)</source>
          <target state="translated">在以下代码片段中，我们在数据库上打开一个读/写事务，并使用 &lt;code&gt;add()&lt;/code&gt; 将一些数据添加到对象存储中。创建对象存储后，我们将objectStore.transaction记录到控制台。有关完整的工作示例，请参阅我们&lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;的待办事项通知&lt;/a&gt;应用程序（&lt;a href=&quot;http://mdn.github.io/to-do-notifications/&quot;&gt;查看实时示例&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="f54fd2b3376937fe47617247ba5ce07dd4d96867" translate="yes" xml:space="preserve">
          <source>In the following code snippet, we open a read/write transaction on our database and add some data to an object store using &lt;code&gt;add()&lt;/code&gt;. After the object store has been created, we log objectStore.transaction to the console. For a full working example, see our &lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;To-do Notifications&lt;/a&gt; app (&lt;a href=&quot;https://mdn.github.io/to-do-notifications/&quot;&gt;view example live&lt;/a&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa9becddc2bb7ec90c0a3e3c9ece22246fe9674c" translate="yes" xml:space="preserve">
          <source>In the following code snippet, we open a read/write transaction on our database and add some data to an object store using &lt;code&gt;add()&lt;/code&gt;. Note also the functions attached to transaction event handlers to report on the outcome of the transaction opening in the event of success or failure. For a full working example, see our &lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;To-do Notifications&lt;/a&gt; app (&lt;a href=&quot;http://mdn.github.io/to-do-notifications/&quot;&gt;view example live&lt;/a&gt;.)</source>
          <target state="translated">在以下代码片段中，我们在数据库上打开一个读/写事务，并使用 &lt;code&gt;add()&lt;/code&gt; 将一些数据添加到对象存储中。还请注意事务事件处理程序附带的功能，以在成功或失败事件中报告事务打开的结果。有关完整的工作示例，请参阅我们&lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;的待办事项通知&lt;/a&gt;应用程序（&lt;a href=&quot;http://mdn.github.io/to-do-notifications/&quot;&gt;查看实时示例&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="6bee2c87eee1fe8b979e90beef582d28b95172d1" translate="yes" xml:space="preserve">
          <source>In the following code snippet, we open a read/write transaction on our database and add some data to an object store using &lt;code&gt;add()&lt;/code&gt;. Note also the functions attached to transaction event handlers to report on the outcome of the transaction opening in the event of success or failure. For a full working example, see our &lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;To-do Notifications&lt;/a&gt; app (&lt;a href=&quot;https://mdn.github.io/to-do-notifications/&quot;&gt;view example live&lt;/a&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad57a299009527ac8f2dd1dbd0ecdab42e093614" translate="yes" xml:space="preserve">
          <source>In the following code snippet, we open a read/write transaction on our database and add some data to an object store. Note also the functions attached to transaction event handlers to report on the outcome of the transaction opening in the event of success or failure. At the end, we return the associated database connection using &lt;code&gt;db&lt;/code&gt;. For a full working example, see our &lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;To-do Notifications&lt;/a&gt; app (&lt;a href=&quot;http://mdn.github.io/to-do-notifications/&quot;&gt;view example live&lt;/a&gt;.)</source>
          <target state="translated">在下面的代码片段中，我们在数据库上打开一个读/写事务，并将一些数据添加到对象存储中。还请注意事务事件处理程序附带的功能，以在成功或失败事件中报告事务打开的结果。最后，我们使用 &lt;code&gt;db&lt;/code&gt; 返回关联的数据库连接。有关完整的工作示例，请参阅我们&lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;的待办事项通知&lt;/a&gt;应用程序（&lt;a href=&quot;http://mdn.github.io/to-do-notifications/&quot;&gt;查看实时示例&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="44506a0ef3c2a5572e98cf946cfb5e2d458ea8c0" translate="yes" xml:space="preserve">
          <source>In the following code snippet, we open a read/write transaction on our database and add some data to an object store. Note also the functions attached to transaction event handlers to report on the outcome of the transaction opening in the event of success or failure. At the end, we return the associated database connection using &lt;code&gt;db&lt;/code&gt;. For a full working example, see our &lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;To-do Notifications&lt;/a&gt; app (&lt;a href=&quot;https://mdn.github.io/to-do-notifications/&quot;&gt;view example live&lt;/a&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75eb1d616f6d05a9fa0821f8947490f9ee9f24f8" translate="yes" xml:space="preserve">
          <source>In the following code snippet, we open a read/write transaction on our database and add some data to an object store. Note also the functions attached to transaction event handlers to report on the outcome of the transaction opening in the event of success or failure. At the end, we simply abort any activity done under the current transaction using &lt;code&gt;abort()&lt;/code&gt;. For a full working example, see our &lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;To-do Notifications&lt;/a&gt; app (&lt;a href=&quot;http://mdn.github.io/to-do-notifications/&quot;&gt;view example live&lt;/a&gt;.)</source>
          <target state="translated">在下面的代码片段中，我们在数据库上打开一个读/写事务，并将一些数据添加到对象存储中。还请注意事务事件处理程序附带的功能，以在成功或失败事件中报告事务打开的结果。最后，我们只需使用 &lt;code&gt;abort()&lt;/code&gt; 中止当前事务下完成的任何活动。有关完整的工作示例，请参阅我们&lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;的待办事项通知&lt;/a&gt;应用程序（&lt;a href=&quot;http://mdn.github.io/to-do-notifications/&quot;&gt;查看实时示例&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="2ae7d43b9600e9ca587855b883a9f1113c7a69e6" translate="yes" xml:space="preserve">
          <source>In the following code snippet, we open a read/write transaction on our database and add some data to an object store. Note also the functions attached to transaction event handlers to report on the outcome of the transaction opening in the event of success or failure. At the end, we simply abort any activity done under the current transaction using &lt;code&gt;abort()&lt;/code&gt;. For a full working example, see our &lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;To-do Notifications&lt;/a&gt; app (&lt;a href=&quot;https://mdn.github.io/to-do-notifications/&quot;&gt;view example live&lt;/a&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13f59a285e31ec4566d2471042003d4ea3a258b3" translate="yes" xml:space="preserve">
          <source>In the following code snippet, we open a read/write transaction on our database and add some data to an object store. Note also the functions attached to transaction event handlers to report on the outcome of the transaction opening in the event of success or failure. At the end, we simply log the mode of the current transaction using &lt;code&gt;mode&lt;/code&gt;. For a full working example, see our &lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;To-do Notifications&lt;/a&gt; app (&lt;a href=&quot;http://mdn.github.io/to-do-notifications/&quot;&gt;view example live&lt;/a&gt;.)</source>
          <target state="translated">在下面的代码片段中，我们在数据库上打开一个读/写事务，并将一些数据添加到对象存储中。还请注意事务事件处理程序附带的功能，以在成功或失败事件中报告事务打开的结果。最后，我们仅使用 &lt;code&gt;mode&lt;/code&gt; 记录当前事务的模式。有关完整的工作示例，请参阅我们&lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;的待办事项通知&lt;/a&gt;应用程序（&lt;a href=&quot;http://mdn.github.io/to-do-notifications/&quot;&gt;查看实时示例&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="7d59c16e6af35dbf2bdabc341d7a3007df0f5931" translate="yes" xml:space="preserve">
          <source>In the following code snippet, we open a read/write transaction on our database and add some data to an object store. Note also the functions attached to transaction event handlers to report on the outcome of the transaction opening in the event of success or failure. At the end, we simply log the mode of the current transaction using &lt;code&gt;mode&lt;/code&gt;. For a full working example, see our &lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;To-do Notifications&lt;/a&gt; app (&lt;a href=&quot;https://mdn.github.io/to-do-notifications/&quot;&gt;view example live&lt;/a&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f4e437b34ba4b47c7d721167ae38f8bc64c3026" translate="yes" xml:space="preserve">
          <source>In the following code snippet, we open a read/write transaction on our database and add some data to an object store. Note also the functions attached to transaction event handlers to report on the outcome of the transaction opening in the event of success or failure. For a full working example, see our &lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;To-do Notifications&lt;/a&gt; app (&lt;a href=&quot;http://mdn.github.io/to-do-notifications/&quot;&gt;view example live&lt;/a&gt;.)</source>
          <target state="translated">在下面的代码片段中，我们在数据库上打开一个读/写事务，并将一些数据添加到对象存储中。还请注意事务事件处理程序附带的功能，以在成功或失败事件中报告事务打开的结果。有关完整的工作示例，请参阅我们&lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;的待办事项通知&lt;/a&gt;应用程序（&lt;a href=&quot;http://mdn.github.io/to-do-notifications/&quot;&gt;查看实时示例&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="c06cc3ddfb51ea2161fc890f8456b2e2807365cf" translate="yes" xml:space="preserve">
          <source>In the following code snippet, we open a read/write transaction on our database and add some data to an object store. Note also the functions attached to transaction event handlers to report on the outcome of the transaction opening in the event of success or failure. For a full working example, see our &lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;To-do Notifications&lt;/a&gt; app (&lt;a href=&quot;https://mdn.github.io/to-do-notifications/&quot;&gt;view example live&lt;/a&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0396bfc53f463837f3f50ead91b4ccd0303058f" translate="yes" xml:space="preserve">
          <source>In the following code snippet, we open a read/write transaction on our database and add some data to an object store. Note also the functions attached to transaction event handlers to report on the outcome of the transaction opening in the event of success or failure. Note the &lt;code&gt;transaction.onabort = function(event) { };&lt;/code&gt; block, reporting when the transaction has been aborted. For a full working example, see our &lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;To-do Notifications&lt;/a&gt; app (&lt;a href=&quot;http://mdn.github.io/to-do-notifications/&quot;&gt;view example live&lt;/a&gt;.)</source>
          <target state="translated">在下面的代码片段中，我们在数据库上打开一个读/写事务，并将一些数据添加到对象存储中。还请注意事务事件处理程序附带的功能，以在成功或失败事件中报告事务打开的结果。注意 &lt;code&gt;transaction.onabort = function(event) { };&lt;/code&gt; 阻止，报告交易中止的时间。有关完整的工作示例，请参阅我们&lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;的待办事项通知&lt;/a&gt;应用程序（&lt;a href=&quot;http://mdn.github.io/to-do-notifications/&quot;&gt;查看实时示例&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="a232551d760684539f1f15565c238686d66bdcfd" translate="yes" xml:space="preserve">
          <source>In the following code snippet, we open a read/write transaction on our database and add some data to an object store. Note also the functions attached to transaction event handlers to report on the outcome of the transaction opening in the event of success or failure. Note the &lt;code&gt;transaction.onabort = function(event) { };&lt;/code&gt; block, reporting when the transaction has been aborted. For a full working example, see our &lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;To-do Notifications&lt;/a&gt; app (&lt;a href=&quot;https://mdn.github.io/to-do-notifications/&quot;&gt;view example live&lt;/a&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9291a990b541f5f63cec02e040f4b041c8298814" translate="yes" xml:space="preserve">
          <source>In the following code snippet, we open a read/write transaction on our database and add some data to an object store. Note also the functions attached to transaction event handlers to report on the outcome of the transaction opening in the event of success or failure. Note the &lt;code&gt;transaction.oncomplete = function(event) { };&lt;/code&gt; block, which reports back when the transaction was successful. For a full working example, see our &lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;To-do Notifications&lt;/a&gt; app (&lt;a href=&quot;http://mdn.github.io/to-do-notifications/&quot;&gt;view example live&lt;/a&gt;.)</source>
          <target state="translated">在下面的代码片段中，我们在数据库上打开一个读/写事务，并将一些数据添加到对象存储中。还请注意事务事件处理程序附带的功能，以在成功或失败事件中报告事务打开的结果。注意 &lt;code&gt;transaction.oncomplete = function(event) { };&lt;/code&gt; 块，它在事务成功时返回报告。有关完整的工作示例，请参阅我们&lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;的待办事项通知&lt;/a&gt;应用程序（&lt;a href=&quot;http://mdn.github.io/to-do-notifications/&quot;&gt;查看实时示例&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="08da8ea76c03a3a0264cdaeec3acd2b8609154c3" translate="yes" xml:space="preserve">
          <source>In the following code snippet, we open a read/write transaction on our database and add some data to an object store. Note also the functions attached to transaction event handlers to report on the outcome of the transaction opening in the event of success or failure. Note the &lt;code&gt;transaction.oncomplete = function(event) { };&lt;/code&gt; block, which reports back when the transaction was successful. For a full working example, see our &lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;To-do Notifications&lt;/a&gt; app (&lt;a href=&quot;https://mdn.github.io/to-do-notifications/&quot;&gt;view example live&lt;/a&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d979572fd1f87f060179ec0c46d8d5416b88385" translate="yes" xml:space="preserve">
          <source>In the following code snippet, we open a read/write transaction on our database and add some data to an object store. Note also the functions attached to transaction event handlers to report on the outcome of the transaction opening in the event of success or failure. Note the &lt;code&gt;transaction.onerror = function(event) { };&lt;/code&gt; block, making use of &lt;code&gt;transaction.error&lt;/code&gt; to help in reporting what went wrong when the transaction was unsuccessful. For a full working example, see our &lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;To-do Notifications&lt;/a&gt; app (&lt;a href=&quot;http://mdn.github.io/to-do-notifications/&quot;&gt;view example live&lt;/a&gt;.)</source>
          <target state="translated">在下面的代码片段中，我们在数据库上打开一个读/写事务，并将一些数据添加到对象存储中。还请注意事务事件处理程序附带的功能，以在成功或失败事件中报告事务打开的结果。注意 &lt;code&gt;transaction.onerror = function(event) { };&lt;/code&gt; 块，利用 &lt;code&gt;transaction.error&lt;/code&gt; 来帮助报告交易失败时出了什么问题。有关完整的工作示例，请参阅我们&lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;的待办事项通知&lt;/a&gt;应用程序（&lt;a href=&quot;http://mdn.github.io/to-do-notifications/&quot;&gt;查看实时示例&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="04631617e5a776628d32d3bd3e976e2158c9d27a" translate="yes" xml:space="preserve">
          <source>In the following code snippet, we open a read/write transaction on our database and add some data to an object store. Note also the functions attached to transaction event handlers to report on the outcome of the transaction opening in the event of success or failure. Note the &lt;code&gt;transaction.onerror = function(event) { };&lt;/code&gt; block, making use of &lt;code&gt;transaction.error&lt;/code&gt; to help in reporting what went wrong when the transaction was unsuccessful. For a full working example, see our &lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;To-do Notifications&lt;/a&gt; app (&lt;a href=&quot;https://mdn.github.io/to-do-notifications/&quot;&gt;view example live&lt;/a&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cadd885e1bfec1eafbd9f9798e746af01ce2da6" translate="yes" xml:space="preserve">
          <source>In the following code snippet, we open a read/write transaction on our database and clear all the current data out of the object store using &lt;code&gt;clear()&lt;/code&gt;. For a full working example, see our &lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;To-do Notifications&lt;/a&gt; app (&lt;a href=&quot;http://mdn.github.io/to-do-notifications/&quot;&gt;view example live&lt;/a&gt;.)</source>
          <target state="translated">在以下代码片段中，我们在数据库上打开一个读/写事务，并使用 &lt;code&gt;clear()&lt;/code&gt; 从对象存储中清除所有当前数据。有关完整的工作示例，请参阅我们&lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;的待办事项通知&lt;/a&gt;应用程序（&lt;a href=&quot;http://mdn.github.io/to-do-notifications/&quot;&gt;查看实时示例&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="75ba7e18aeca1985310d78fd3d5962eba8ff5eaf" translate="yes" xml:space="preserve">
          <source>In the following code snippet, we open a read/write transaction on our database and clear all the current data out of the object store using &lt;code&gt;clear()&lt;/code&gt;. For a full working example, see our &lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;To-do Notifications&lt;/a&gt; app (&lt;a href=&quot;https://mdn.github.io/to-do-notifications/&quot;&gt;view example live&lt;/a&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a59db44b4f9b5e947b3716a6d848b8d1f98f87d3" translate="yes" xml:space="preserve">
          <source>In the following code snippet, we open a read/write transaction on our database and delete one specific record out of our object store using &lt;code&gt;delete()&lt;/code&gt; &amp;mdash; a sample record with the key &quot;Walk dog&quot;. For a full working example, see our &lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;To-do Notifications&lt;/a&gt; app (&lt;a href=&quot;http://mdn.github.io/to-do-notifications/&quot;&gt;view example live&lt;/a&gt;.)</source>
          <target state="translated">在下面的代码片段中，我们在数据库上打开一个读/写事务，并使用 &lt;code&gt;delete()&lt;/code&gt; 将一个特定的记录从对象存储中删除，这是一个带有&amp;ldquo; Walk dog&amp;rdquo;键的示例记录。有关完整的工作示例，请参阅我们&lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;的待办事项通知&lt;/a&gt;应用程序（&lt;a href=&quot;http://mdn.github.io/to-do-notifications/&quot;&gt;查看实时示例&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="c9040f617b74d8289eab3961d9dbcdcafbe568a8" translate="yes" xml:space="preserve">
          <source>In the following code snippet, we open a read/write transaction on our database and delete one specific record out of our object store using &lt;code&gt;delete()&lt;/code&gt; &amp;mdash; a sample record with the key &quot;Walk dog&quot;. For a full working example, see our &lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;To-do Notifications&lt;/a&gt; app (&lt;a href=&quot;https://mdn.github.io/to-do-notifications/&quot;&gt;view example live&lt;/a&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13f30641085b558285bc8c95bc595644bdab0929" translate="yes" xml:space="preserve">
          <source>In the following code snippet, we open a read/write transaction on our database and get one specific record from object store using &lt;code&gt;get()&lt;/code&gt; &amp;mdash; a sample record with the key &quot;Walk dog&quot;. Once this data object is retrieved, you could then update it using normal JavaScript, then put it back into the database using a &lt;a href=&quot;put&quot;&gt;&lt;code&gt;IDBObjectStore.put&lt;/code&gt;&lt;/a&gt; operation. For a full working example, see our &lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;To-do Notifications&lt;/a&gt; app (&lt;a href=&quot;http://mdn.github.io/to-do-notifications/&quot;&gt;view example live&lt;/a&gt;.)</source>
          <target state="translated">在下面的代码片段中，我们在数据库上打开一个读/写事务，并使用 &lt;code&gt;get()&lt;/code&gt; 从对象存储中获取一条特定记录，该记录为键&amp;ldquo; Walk dog&amp;rdquo;的示例记录。检索到此数据对象后，您可以使用常规JavaScript对其进行更新，然后使用&lt;a href=&quot;put&quot;&gt; &lt;code&gt;IDBObjectStore.put&lt;/code&gt; &lt;/a&gt;操作将其放回数据库中。有关完整的工作示例，请参阅我们&lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;的待办事项通知&lt;/a&gt;应用程序（&lt;a href=&quot;http://mdn.github.io/to-do-notifications/&quot;&gt;查看实时示例&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="e8adc92dccfa3729c212ca7707b4e2ccf25fbdfc" translate="yes" xml:space="preserve">
          <source>In the following code snippet, we open a read/write transaction on our database and get one specific record from object store using &lt;code&gt;get()&lt;/code&gt; &amp;mdash; a sample record with the key &quot;Walk dog&quot;. Once this data object is retrieved, you could then update it using normal JavaScript, then put it back into the database using a &lt;a href=&quot;put&quot;&gt;&lt;code&gt;IDBObjectStore.put&lt;/code&gt;&lt;/a&gt; operation. For a full working example, see our &lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;To-do Notifications&lt;/a&gt; app (&lt;a href=&quot;https://mdn.github.io/to-do-notifications/&quot;&gt;view example live&lt;/a&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="322feb9948540265079df18f99d48a9e2d37112d" translate="yes" xml:space="preserve">
          <source>In the following example (see &lt;a href=&quot;https://mdn.github.io/dom-examples/streams/png-transform-stream/&quot;&gt;Unpack chunks of a PNG&lt;/a&gt; for the full code running live, and &lt;a href=&quot;https://github.com/mdn/dom-examples/tree/master/streams/png-transform-stream&quot;&gt;png-transform-stream&lt;/a&gt; for the source code), an image is fetched and its body retrieved as a &lt;a href=&quot;../readablestream&quot;&gt;&lt;code&gt;ReadableStream&lt;/code&gt;&lt;/a&gt;. Next, we log the contents of the readable stream, use &lt;code&gt;pipeThrough()&lt;/code&gt; to send it to a new function that creates a gray-scaled version of the stream, then log the new stream's contents too.</source>
          <target state="translated">在以下示例中（有关实时运行的完整代码，请参阅&lt;a href=&quot;https://mdn.github.io/dom-examples/streams/png-transform-stream/&quot;&gt;解压缩PNG的块，&lt;/a&gt;对于源代码，请参阅&lt;a href=&quot;https://github.com/mdn/dom-examples/tree/master/streams/png-transform-stream&quot;&gt;png-transform-stream&lt;/a&gt;），将获取图像并将其主体作为&lt;a href=&quot;../readablestream&quot;&gt; &lt;code&gt;ReadableStream&lt;/code&gt; &lt;/a&gt;检索。接下来，我们记录可读流的内容，使用 &lt;code&gt;pipeThrough()&lt;/code&gt; 将其发送到创建流的灰度版本的新函数，然后也记录新流的内容。</target>
        </trans-unit>
        <trans-unit id="287bf3de9023d80525000b897ab3a6b79e79ad05" translate="yes" xml:space="preserve">
          <source>In the following example we are using a biquad filter on a media stream (for the full demo, see our &lt;a href=&quot;http://mdn.github.io/stream-source-buffer/&quot;&gt;stream-source-buffer demo&lt;/a&gt; live, or &lt;a href=&quot;https://github.com/mdn/stream-source-buffer/blob/gh-pages/index.html&quot;&gt;read the source&lt;/a&gt;.) As part of this demo, we get the frequency responses for this biquad filter, for five sample frequencies. We first create the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array&quot;&gt;&lt;code&gt;Float32Array&lt;/code&gt;&lt;/a&gt;s we need, one containing the input frequencies, and two to receive the output magnitude and phase values:</source>
          <target state="translated">在以下示例中，我们在媒体流上使用biquad滤波器（有关完整的演示，请参见我们的&lt;a href=&quot;http://mdn.github.io/stream-source-buffer/&quot;&gt;stream-source-buffer演示&lt;/a&gt;直播，或&lt;a href=&quot;https://github.com/mdn/stream-source-buffer/blob/gh-pages/index.html&quot;&gt;阅读source&lt;/a&gt;。）作为此演示的一部分，我们获得了该biquad的频率响应滤波器，用于五个采样频率。我们首先创建所需的&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array&quot;&gt; &lt;code&gt;Float32Array&lt;/code&gt; &lt;/a&gt;，其中一个包含输入频率，另外两个用于接收输出幅度和相位值：</target>
        </trans-unit>
        <trans-unit id="5de17f0708bbab83f9692976f400984d415116e1" translate="yes" xml:space="preserve">
          <source>In the following example we are using a biquad filter on a media stream (for the full demo, see our &lt;a href=&quot;https://mdn.github.io/stream-source-buffer/&quot;&gt;stream-source-buffer demo&lt;/a&gt; live, or &lt;a href=&quot;https://github.com/mdn/stream-source-buffer/blob/gh-pages/index.html&quot;&gt;read the source&lt;/a&gt;.) As part of this demo, we get the frequency responses for this biquad filter, for five sample frequencies. We first create the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array&quot;&gt;&lt;code&gt;Float32Array&lt;/code&gt;&lt;/a&gt;s we need, one containing the input frequencies, and two to receive the output magnitude and phase values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13dcb52783e92bbdc8c8fdc2ccc00529dab0bb8c" translate="yes" xml:space="preserve">
          <source>In the following example we are using an IIR filter on a media stream (for a complete full demo, see our &lt;a href=&quot;http://mdn.github.io/stream-source-buffer/&quot;&gt;stream-source-buffer demo&lt;/a&gt; live, or &lt;a href=&quot;https://github.com/mdn/stream-source-buffer/blob/gh-pages/index.html&quot;&gt;read its source&lt;/a&gt;.) As part of this demo, we get the frequency responses for this IIR filter, for five sample frequencies. We first create the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array&quot;&gt;&lt;code&gt;Float32Array&lt;/code&gt;&lt;/a&gt; objects we need, one containing the input frequencies, and two to receive the output magnitude and phase values:</source>
          <target state="translated">在下面的示例中，我们在媒体流上使用IIR滤波器（有关完整的完整演示，请参见实时&lt;a href=&quot;http://mdn.github.io/stream-source-buffer/&quot;&gt;流媒体源缓冲区演示&lt;/a&gt;，或&lt;a href=&quot;https://github.com/mdn/stream-source-buffer/blob/gh-pages/index.html&quot;&gt;阅读其源代码&lt;/a&gt;。）作为此演示的一部分，我们将获得此频率响应IIR滤波器，用于五个采样频率。我们首先创建所需的&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array&quot;&gt; &lt;code&gt;Float32Array&lt;/code&gt; &lt;/a&gt;对象，其中一个包含输入频率，另外两个用于接收输出幅度和相位值：</target>
        </trans-unit>
        <trans-unit id="b3210bd8325ed0b9949e39b46982826e9b9d1fe4" translate="yes" xml:space="preserve">
          <source>In the following example we are using an IIR filter on a media stream (for a complete full demo, see our &lt;a href=&quot;https://mdn.github.io/stream-source-buffer/&quot;&gt;stream-source-buffer demo&lt;/a&gt; live, or &lt;a href=&quot;https://github.com/mdn/stream-source-buffer/blob/gh-pages/index.html&quot;&gt;read its source&lt;/a&gt;.) As part of this demo, we get the frequency responses for this IIR filter, for five sample frequencies. We first create the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array&quot;&gt;&lt;code&gt;Float32Array&lt;/code&gt;&lt;/a&gt; objects we need, one containing the input frequencies, and two to receive the output magnitude and phase values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8816669e8174eda20010d216bd1c027736021aeb" translate="yes" xml:space="preserve">
          <source>In the following example we create a two second buffer, fill it with white noise, and then play it via an &lt;a href=&quot;../audiobuffersourcenode&quot;&gt;&lt;code&gt;AudioBufferSourceNode&lt;/code&gt;&lt;/a&gt;. The comments should clearly explain what is going on. You can also &lt;a href=&quot;https://mdn.github.io/webaudio-examples/audio-buffer/&quot;&gt;run the code live&lt;/a&gt;, or &lt;a href=&quot;https://github.com/mdn/webaudio-examples&quot;&gt;view the source&lt;/a&gt;.</source>
          <target state="translated">在以下示例中，我们创建了一个两秒钟的缓冲区，用白噪声填充它，然后通过&lt;a href=&quot;../audiobuffersourcenode&quot;&gt; &lt;code&gt;AudioBufferSourceNode&lt;/code&gt; &lt;/a&gt;对其进行播放。评论应清楚地说明正在发生的事情。您还&lt;a href=&quot;https://mdn.github.io/webaudio-examples/audio-buffer/&quot;&gt;可以实时运行代码&lt;/a&gt;，或&lt;a href=&quot;https://github.com/mdn/webaudio-examples&quot;&gt;查看源代码&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f4bb5bc0782a7e14fcddc65635b72a17225427f8" translate="yes" xml:space="preserve">
          <source>In the following example we open a transaction and an object store, then get the index &lt;code&gt;lName&lt;/code&gt; from a simple contacts database. We then open a basic cursor on the index using &lt;a href=&quot;../idbindex/opencursor&quot;&gt;&lt;code&gt;IDBIndex.openCursor&lt;/code&gt;&lt;/a&gt; &amp;mdash; this works the same as opening a cursor directly on an &lt;code&gt;ObjectStore&lt;/code&gt; using &lt;a href=&quot;opencursor&quot;&gt;&lt;code&gt;IDBObjectStore.openCursor&lt;/code&gt;&lt;/a&gt; except that the returned records are sorted based on the index, not the primary key.</source>
          <target state="translated">在下面的示例中，我们打开一个事务和一个对象存储，然后从一个简单的联系人数据库中获取索引 &lt;code&gt;lName&lt;/code&gt; 。然后，我们使用&lt;a href=&quot;../idbindex/opencursor&quot;&gt; &lt;code&gt;IDBIndex.openCursor&lt;/code&gt; &lt;/a&gt;在索引上打开基本游标-与使用&lt;a href=&quot;opencursor&quot;&gt; &lt;code&gt;IDBObjectStore.openCursor&lt;/code&gt; &lt;/a&gt;在 &lt;code&gt;ObjectStore&lt;/code&gt; 上直接打开游标相同，除了返回的记录是基于索引而不是主键排序的。</target>
        </trans-unit>
        <trans-unit id="ad642637028d27153d859e39e2a13769514d21e8" translate="yes" xml:space="preserve">
          <source>In the following example we open a transaction and an object store, then get the index &lt;code&gt;lName&lt;/code&gt; from a simple contacts database. We then open a basic cursor on the index using &lt;a href=&quot;idbindex/opencursor&quot;&gt;&lt;code&gt;IDBIndex.openCursor&lt;/code&gt;&lt;/a&gt; &amp;mdash; this works the same as opening a cursor directly on an &lt;code&gt;ObjectStore&lt;/code&gt; using &lt;a href=&quot;idbobjectstore/opencursor&quot;&gt;&lt;code&gt;IDBObjectStore.openCursor&lt;/code&gt;&lt;/a&gt; except that the returned records are sorted based on the index, not the primary key.</source>
          <target state="translated">在下面的示例中，我们打开一个事务和一个对象存储，然后从一个简单的联系人数据库中获取索引 &lt;code&gt;lName&lt;/code&gt; 。然后，我们使用&lt;a href=&quot;idbindex/opencursor&quot;&gt; &lt;code&gt;IDBIndex.openCursor&lt;/code&gt; &lt;/a&gt;在索引上打开基本游标-与使用&lt;a href=&quot;idbobjectstore/opencursor&quot;&gt; &lt;code&gt;IDBObjectStore.openCursor&lt;/code&gt; &lt;/a&gt;在 &lt;code&gt;ObjectStore&lt;/code&gt; 上直接打开游标相同，除了返回的记录是基于索引而不是主键排序的。</target>
        </trans-unit>
        <trans-unit id="0d39035e98ce578c166dc6ba88a351fd3b654900" translate="yes" xml:space="preserve">
          <source>In the following example we open a transaction and an object store, then get the index &lt;code&gt;lName&lt;/code&gt; from a simple contacts database. We then open a basic cursor on the index using &lt;a href=&quot;opencursor&quot;&gt;&lt;code&gt;IDBIndex.openCursor()&lt;/code&gt;&lt;/a&gt; &amp;mdash; this works the same as opening a cursor directly on an &lt;a href=&quot;../idbobjectstore&quot;&gt;&lt;code&gt;IDBObjectStore&lt;/code&gt;&lt;/a&gt; using &lt;a href=&quot;../idbobjectstore/opencursor&quot;&gt;&lt;code&gt;openCursor()&lt;/code&gt;&lt;/a&gt; except that the returned records are sorted based on the index, not the primary key.</source>
          <target state="translated">在下面的示例中，我们打开一个事务和一个对象存储，然后从一个简单的联系人数据库中获取索引 &lt;code&gt;lName&lt;/code&gt; 。然后，我们打开一个基本光标使用索引&lt;a href=&quot;opencursor&quot;&gt; &lt;code&gt;IDBIndex.openCursor()&lt;/code&gt; &lt;/a&gt; -这个工程一样上直接打开游标&lt;a href=&quot;../idbobjectstore&quot;&gt; &lt;code&gt;IDBObjectStore&lt;/code&gt; &lt;/a&gt;使用&lt;a href=&quot;../idbobjectstore/opencursor&quot;&gt; &lt;code&gt;openCursor()&lt;/code&gt; &lt;/a&gt;不同的是，返回的记录是基于索引，而不是主键排序。</target>
        </trans-unit>
        <trans-unit id="8694728b278a221349f924251115114166382831" translate="yes" xml:space="preserve">
          <source>In the following example we open a transaction and an object store, then get the index &lt;code&gt;lName&lt;/code&gt; from a simple contacts database. We then open a basic cursor on the index using &lt;a href=&quot;opencursor&quot;&gt;&lt;code&gt;IDBIndex.openCursor&lt;/code&gt;&lt;/a&gt; &amp;mdash; this works the same as opening a cursor directly on an &lt;code&gt;ObjectStore&lt;/code&gt; using &lt;a href=&quot;../idbobjectstore/opencursor&quot;&gt;&lt;code&gt;IDBObjectStore.openCursor&lt;/code&gt;&lt;/a&gt; except that the returned records are sorted based on the index, not the primary key.</source>
          <target state="translated">在下面的示例中，我们打开一个事务和一个对象存储，然后从一个简单的联系人数据库中获取索引 &lt;code&gt;lName&lt;/code&gt; 。然后，我们使用&lt;a href=&quot;opencursor&quot;&gt; &lt;code&gt;IDBIndex.openCursor&lt;/code&gt; &lt;/a&gt;在索引上打开基本游标-与使用&lt;a href=&quot;../idbobjectstore/opencursor&quot;&gt; &lt;code&gt;IDBObjectStore.openCursor&lt;/code&gt; &lt;/a&gt;在 &lt;code&gt;ObjectStore&lt;/code&gt; 上直接打开游标相同，除了返回的记录是基于索引而不是主键排序的。</target>
        </trans-unit>
        <trans-unit id="21af5877ddb1b88586e3b5af4da9dc9daac0d4b3" translate="yes" xml:space="preserve">
          <source>In the following example we open a transaction and an object store, then get the index &lt;code&gt;lName&lt;/code&gt; from a simple contacts database. We then open a basic cursor on the index using &lt;a href=&quot;opencursor&quot;&gt;&lt;code&gt;IDBIndex.openCursor&lt;/code&gt;&lt;/a&gt;. This works the same as opening a cursor directly on an &lt;code&gt;ObjectStore&lt;/code&gt; using &lt;a href=&quot;../idbobjectstore/opencursor&quot;&gt;&lt;code&gt;IDBObjectStore.openCursor&lt;/code&gt;&lt;/a&gt; except that the returned records are sorted based on the index, not the primary key.</source>
          <target state="translated">在下面的示例中，我们打开一个事务和一个对象存储，然后从一个简单的联系人数据库中获取索引 &lt;code&gt;lName&lt;/code&gt; 。然后，使用&lt;a href=&quot;opencursor&quot;&gt; &lt;code&gt;IDBIndex.openCursor&lt;/code&gt; &lt;/a&gt;在索引上打开基本游标。这与使用&lt;a href=&quot;../idbobjectstore/opencursor&quot;&gt; &lt;code&gt;IDBObjectStore.openCursor&lt;/code&gt; &lt;/a&gt;在 &lt;code&gt;ObjectStore&lt;/code&gt; 上直接打开游标相同，除了返回的记录是基于索引而不是主键排序的。</target>
        </trans-unit>
        <trans-unit id="2153f7d8004598ac2fbd4d16d4205d6e81657077" translate="yes" xml:space="preserve">
          <source>In the following example we open a transaction and an object store, then get the index &lt;code&gt;lName&lt;/code&gt; from a simple contacts database. We then open a basic cursor on the index using &lt;code&gt;openCursor()&lt;/code&gt; &amp;mdash; this works the same as opening a cursor directly on an &lt;code&gt;ObjectStore&lt;/code&gt; using &lt;a href=&quot;../idbobjectstore/opencursor&quot;&gt;&lt;code&gt;IDBObjectStore.openCursor&lt;/code&gt;&lt;/a&gt; except that the returned records are sorted based on the index, not the primary key.</source>
          <target state="translated">在下面的示例中，我们打开一个事务和一个对象存储，然后从一个简单的联系人数据库中获取索引 &lt;code&gt;lName&lt;/code&gt; 。然后，我们使用 &lt;code&gt;openCursor()&lt;/code&gt; 在索引上打开基本游标-与使用&lt;a href=&quot;../idbobjectstore/opencursor&quot;&gt; &lt;code&gt;IDBObjectStore.openCursor&lt;/code&gt; &lt;/a&gt;在 &lt;code&gt;ObjectStore&lt;/code&gt; 上直接打开游标相同，除了返回的记录是基于索引而不是主键排序的。</target>
        </trans-unit>
        <trans-unit id="db1fd518abc2e6f0d259edf6cbb8abcb90bf3a2a" translate="yes" xml:space="preserve">
          <source>In the following example we open a transaction and an object store, then get the index &lt;code&gt;lName&lt;/code&gt; from a simple contacts database. We then open a key cursor on the index using &lt;code&gt;openKeyCursor()&lt;/code&gt; &amp;mdash; this works the same as opening a cursor directly on an &lt;code&gt;ObjectStore&lt;/code&gt; using &lt;a href=&quot;../idbobjectstore/opencursor&quot;&gt;&lt;code&gt;IDBObjectStore.openCursor&lt;/code&gt;&lt;/a&gt; except that the returned records are sorted based on the index, not the primary key.</source>
          <target state="translated">在下面的示例中，我们打开一个事务和一个对象存储，然后从一个简单的联系人数据库中获取索引 &lt;code&gt;lName&lt;/code&gt; 。然后，我们使用 &lt;code&gt;openKeyCursor()&lt;/code&gt; 在索引上打开键游标-这与使用&lt;a href=&quot;../idbobjectstore/opencursor&quot;&gt; &lt;code&gt;IDBObjectStore.openCursor&lt;/code&gt; &lt;/a&gt;在 &lt;code&gt;ObjectStore&lt;/code&gt; 上直接打开游标相同，除了返回的记录是基于索引而不是主键排序的。</target>
        </trans-unit>
        <trans-unit id="661e7c3cacb1693d266978ce785db96652a78191" translate="yes" xml:space="preserve">
          <source>In the following example we retrieve the list of classes set on a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/span&quot;&gt;&lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt;&lt;/a&gt; element as a &lt;code&gt;DOMTokenList&lt;/code&gt; using &lt;a href=&quot;../element/classlist&quot;&gt;&lt;code&gt;Element.classList&lt;/code&gt;&lt;/a&gt;, then write the length of the list to the &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt;'s &lt;a href=&quot;../node/textcontent&quot;&gt;&lt;code&gt;Node.textContent&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在下面的示例中，我们使用&lt;a href=&quot;../element/classlist&quot;&gt; &lt;code&gt;Element.classList&lt;/code&gt; &lt;/a&gt;检索在&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/span&quot;&gt; &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; &lt;/a&gt;元素上设置为 &lt;code&gt;DOMTokenList&lt;/code&gt; 的类的列表，然后将列表的长度写入 &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; 的&lt;a href=&quot;../node/textcontent&quot;&gt; &lt;code&gt;Node.textContent&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0fb8e79747df298ec02744826ec466d0cb841caf" translate="yes" xml:space="preserve">
          <source>In the following example we retrieve the list of classes set on a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/span&quot;&gt;&lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt;&lt;/a&gt; element as a &lt;code&gt;DOMTokenList&lt;/code&gt; using &lt;a href=&quot;../element/classlist&quot;&gt;&lt;code&gt;Element.classList&lt;/code&gt;&lt;/a&gt;, then write the value of the list to the &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt;'s &lt;a href=&quot;../node/textcontent&quot;&gt;&lt;code&gt;Node.textContent&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在下面的示例中，我们使用&lt;a href=&quot;../element/classlist&quot;&gt; &lt;code&gt;Element.classList&lt;/code&gt; &lt;/a&gt;检索在&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/span&quot;&gt; &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; &lt;/a&gt;元素上设置为 &lt;code&gt;DOMTokenList&lt;/code&gt; 的类的列表，然后将该列表的值写入 &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; 的&lt;a href=&quot;../node/textcontent&quot;&gt; &lt;code&gt;Node.textContent&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e3fb2b98c2295ca8eb5c3796813d65b887f85f69" translate="yes" xml:space="preserve">
          <source>In the following example we retrieve the list of classes set on a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/span&quot;&gt;&lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt;&lt;/a&gt; element as a &lt;code&gt;DOMTokenList&lt;/code&gt; using &lt;a href=&quot;../element/classlist&quot;&gt;&lt;code&gt;Element.classList&lt;/code&gt;&lt;/a&gt;. We then add a new token to the list, and write the list into the &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt;'s &lt;a href=&quot;../node/textcontent&quot;&gt;&lt;code&gt;Node.textContent&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在下面的示例中，我们使用&lt;a href=&quot;../element/classlist&quot;&gt; &lt;code&gt;Element.classList&lt;/code&gt; &lt;/a&gt;检索在&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/span&quot;&gt; &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; &lt;/a&gt;元素上设置的类列表作为 &lt;code&gt;DOMTokenList&lt;/code&gt; 。然后，我们向列表添加新令牌，并将列表写入 &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; 的&lt;a href=&quot;../node/textcontent&quot;&gt; &lt;code&gt;Node.textContent&lt;/code&gt; 中&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6314fe34a4c0773a5ad364e04bb1727ec3a892d1" translate="yes" xml:space="preserve">
          <source>In the following example we retrieve the list of classes set on a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/span&quot;&gt;&lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt;&lt;/a&gt; element as a &lt;code&gt;DOMTokenList&lt;/code&gt; using &lt;a href=&quot;../element/classlist&quot;&gt;&lt;code&gt;Element.classList&lt;/code&gt;&lt;/a&gt;. We then remove a token from the list, and write the list into the &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt;'s &lt;a href=&quot;../node/textcontent&quot;&gt;&lt;code&gt;Node.textContent&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在下面的示例中，我们使用&lt;a href=&quot;../element/classlist&quot;&gt; &lt;code&gt;Element.classList&lt;/code&gt; &lt;/a&gt;检索在&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/span&quot;&gt; &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; &lt;/a&gt;元素上设置的类列表作为 &lt;code&gt;DOMTokenList&lt;/code&gt; 。然后，我们从列表中删除一个令牌，并将列表写入 &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; 的&lt;a href=&quot;../node/textcontent&quot;&gt; &lt;code&gt;Node.textContent&lt;/code&gt; 中&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2b8d3549bdaccd85694618343c44840dc8b75dde" translate="yes" xml:space="preserve">
          <source>In the following example we retrieve the list of classes set on a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/span&quot;&gt;&lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt;&lt;/a&gt; element as a &lt;code&gt;DOMTokenList&lt;/code&gt; using &lt;a href=&quot;../element/classlist&quot;&gt;&lt;code&gt;Element.classList&lt;/code&gt;&lt;/a&gt;. We then replace a token in the list, and write the list into the &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt;'s &lt;a href=&quot;../node/textcontent&quot;&gt;&lt;code&gt;Node.textContent&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在下面的示例中，我们使用&lt;a href=&quot;../element/classlist&quot;&gt; &lt;code&gt;Element.classList&lt;/code&gt; &lt;/a&gt;检索在&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/span&quot;&gt; &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; &lt;/a&gt;元素上设置的类列表作为 &lt;code&gt;DOMTokenList&lt;/code&gt; 。然后，我们替换列表中的令牌，并将列表写入 &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; 的&lt;a href=&quot;../node/textcontent&quot;&gt; &lt;code&gt;Node.textContent&lt;/code&gt; 中&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a9cfdfabede97a3597014b8c77e99331d6f81f65" translate="yes" xml:space="preserve">
          <source>In the following example we retrieve the list of classes set on a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/span&quot;&gt;&lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt;&lt;/a&gt; element as a &lt;code&gt;DOMTokenList&lt;/code&gt; using &lt;a href=&quot;../element/classlist&quot;&gt;&lt;code&gt;Element.classList&lt;/code&gt;&lt;/a&gt;. We then retrieve the last item in the list using &lt;em&gt;item(length-1)&lt;/em&gt;, and write it into the &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt;'s &lt;a href=&quot;../node/textcontent&quot;&gt;&lt;code&gt;Node.textContent&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在下面的示例中，我们使用&lt;a href=&quot;../element/classlist&quot;&gt; &lt;code&gt;Element.classList&lt;/code&gt; &lt;/a&gt;检索在&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/span&quot;&gt; &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; &lt;/a&gt;元素上设置的类列表作为 &lt;code&gt;DOMTokenList&lt;/code&gt; 。然后，我们使用&lt;em&gt;item（length-1）&lt;/em&gt;检索列表中的最后一项，并将其写入 &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; 的&lt;a href=&quot;../node/textcontent&quot;&gt; &lt;code&gt;Node.textContent&lt;/code&gt; 中&lt;/a&gt;。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cbd4456897d73632161c4026bbd09eda383125bd" translate="yes" xml:space="preserve">
          <source>In the following example we retrieve the list of classes set on a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/span&quot;&gt;&lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt;&lt;/a&gt; element as a &lt;code&gt;DOMTokenList&lt;/code&gt; using &lt;a href=&quot;../element/classlist&quot;&gt;&lt;code&gt;Element.classList&lt;/code&gt;&lt;/a&gt;. We then test for the existance of &quot;c&quot; in the list, and write the result into the &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt;'s &lt;a href=&quot;../node/textcontent&quot;&gt;&lt;code&gt;Node.textContent&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在下面的示例中，我们使用&lt;a href=&quot;../element/classlist&quot;&gt; &lt;code&gt;Element.classList&lt;/code&gt; &lt;/a&gt;检索在&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/span&quot;&gt; &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; &lt;/a&gt;元素上设置的类列表作为 &lt;code&gt;DOMTokenList&lt;/code&gt; 。然后，我们测试列表中是否存在&amp;ldquo; c&amp;rdquo;，并将结果写入 &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; 的&lt;a href=&quot;../node/textcontent&quot;&gt; &lt;code&gt;Node.textContent&lt;/code&gt; 中&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4723cbb96ee6003379a085ede8636c82f49f1599" translate="yes" xml:space="preserve">
          <source>In the following example we retrieve the list of classes set on a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/span&quot;&gt;&lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt;&lt;/a&gt; element as a &lt;code&gt;DOMTokenList&lt;/code&gt; using &lt;a href=&quot;../element/classlist&quot;&gt;&lt;code&gt;Element.classList&lt;/code&gt;&lt;/a&gt;. We when retrieve an iterator containing the key/value pairs using &lt;code&gt;entries()&lt;/code&gt;, then iterate through each one using a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for...of&quot;&gt;for ... of&lt;/a&gt; loop, writing them to the &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt;'s &lt;a href=&quot;../node/textcontent&quot;&gt;&lt;code&gt;Node.textContent&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在下面的示例中，我们使用&lt;a href=&quot;../element/classlist&quot;&gt; &lt;code&gt;Element.classList&lt;/code&gt; &lt;/a&gt;检索在&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/span&quot;&gt; &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; &lt;/a&gt;元素上设置的类列表作为 &lt;code&gt;DOMTokenList&lt;/code&gt; 。当我们使用 &lt;code&gt;entries()&lt;/code&gt; 检索包含键/值对的迭代器时，然后使用&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for...of&quot;&gt;for ... of&lt;/a&gt;循环遍历每个迭代器，并将它们写入 &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; 的&lt;a href=&quot;../node/textcontent&quot;&gt; &lt;code&gt;Node.textContent&lt;/code&gt; 中&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8a83f029918f125f9b06f315db005ff4c274e3b7" translate="yes" xml:space="preserve">
          <source>In the following example we retrieve the list of classes set on a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/span&quot;&gt;&lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt;&lt;/a&gt; element as a &lt;code&gt;DOMTokenList&lt;/code&gt; using &lt;a href=&quot;../element/classlist&quot;&gt;&lt;code&gt;Element.classList&lt;/code&gt;&lt;/a&gt;. We when retrieve an iterator containing the keys using &lt;code&gt;values()&lt;/code&gt;, then iterate through those keys using a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for...of&quot;&gt;for ... of&lt;/a&gt; loop, writing each one to the &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt;'s &lt;a href=&quot;../node/textcontent&quot;&gt;&lt;code&gt;Node.textContent&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在下面的示例中，我们使用&lt;a href=&quot;../element/classlist&quot;&gt; &lt;code&gt;Element.classList&lt;/code&gt; &lt;/a&gt;检索在&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/span&quot;&gt; &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; &lt;/a&gt;元素上设置的类列表作为 &lt;code&gt;DOMTokenList&lt;/code&gt; 。当我们使用 &lt;code&gt;values()&lt;/code&gt; 检索包含键的迭代器时，然后使用&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for...of&quot;&gt;for ... of&lt;/a&gt;循环遍历那些键，并将每个键写入 &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; 的&lt;a href=&quot;../node/textcontent&quot;&gt; &lt;code&gt;Node.textContent&lt;/code&gt; 中&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5c84caeb0524ec397b2ed807abab877a001f12a6" translate="yes" xml:space="preserve">
          <source>In the following example we retrieve the list of classes set on a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/span&quot;&gt;&lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt;&lt;/a&gt; element as a &lt;code&gt;DOMTokenList&lt;/code&gt; using &lt;a href=&quot;../element/classlist&quot;&gt;&lt;code&gt;Element.classList&lt;/code&gt;&lt;/a&gt;. We when retrieve an iterator containing the values using &lt;code&gt;forEach()&lt;/code&gt;, writing each one to the &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt;'s &lt;a href=&quot;../node/textcontent&quot;&gt;&lt;code&gt;Node.textContent&lt;/code&gt;&lt;/a&gt; inside the &lt;code&gt;forEach()&lt;/code&gt; inner function.</source>
          <target state="translated">在下面的示例中，我们使用&lt;a href=&quot;../element/classlist&quot;&gt; &lt;code&gt;Element.classList&lt;/code&gt; &lt;/a&gt;检索在&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/span&quot;&gt; &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; &lt;/a&gt;元素上设置的类列表作为 &lt;code&gt;DOMTokenList&lt;/code&gt; 。我们在使用 &lt;code&gt;forEach()&lt;/code&gt; 检索包含值的迭代器时，将每个值都写入到 &lt;code&gt;forEach()&lt;/code&gt; 内部函数内的 &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; 的&lt;a href=&quot;../node/textcontent&quot;&gt; &lt;code&gt;Node.textContent&lt;/code&gt; 中&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e4898e0c51bf694e8df16b5cae1e6a80feab8323" translate="yes" xml:space="preserve">
          <source>In the following example we retrieve the list of classes set on a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/span&quot;&gt;&lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt;&lt;/a&gt; element as a &lt;code&gt;DOMTokenList&lt;/code&gt; using &lt;a href=&quot;../element/classlist&quot;&gt;&lt;code&gt;Element.classList&lt;/code&gt;&lt;/a&gt;. We when retrieve an iterator containing the values using &lt;code&gt;values()&lt;/code&gt;, then iterate through those values using a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for...of&quot;&gt;for ... of&lt;/a&gt; loop, writing each one to the &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt;'s &lt;a href=&quot;../node/textcontent&quot;&gt;&lt;code&gt;Node.textContent&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在下面的示例中，我们使用&lt;a href=&quot;../element/classlist&quot;&gt; &lt;code&gt;Element.classList&lt;/code&gt; &lt;/a&gt;检索在&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/span&quot;&gt; &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; &lt;/a&gt;元素上设置的类列表作为 &lt;code&gt;DOMTokenList&lt;/code&gt; 。当我们使用 &lt;code&gt;values()&lt;/code&gt; 检索包含值的迭代器时，然后使用&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for...of&quot;&gt;for ... of&lt;/a&gt;循环遍历这些值，并将每个值写入 &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; 的&lt;a href=&quot;../node/textcontent&quot;&gt; &lt;code&gt;Node.textContent&lt;/code&gt; 中&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d69e2d116fd184274ad84c6854087c8aa5445e9e" translate="yes" xml:space="preserve">
          <source>In the following example you can see the &lt;a href=&quot;../idbopendbrequest/onupgradeneeded&quot;&gt;&lt;code&gt;IDBOpenDBRequest.onupgradeneeded&lt;/code&gt;&lt;/a&gt; handler being used to update the database structure if a database with a higher version number is loaded. &lt;a href=&quot;createindex&quot;&gt;&lt;code&gt;IDBObjectStore.createIndex&lt;/code&gt;&lt;/a&gt; is used to create new indexes on the object store, after which we delete the unneeded old indexes with &lt;code&gt;deleteIndex()&lt;/code&gt;. For a full working example, see our &lt;a href=&quot;https://github.com/mdn/to-do-notifications/tree/gh-pages&quot;&gt;To-do Notifications&lt;/a&gt; app (&lt;a href=&quot;http://mdn.github.io/to-do-notifications/&quot;&gt;view example live&lt;/a&gt;.)</source>
          <target state="translated">在以下示例中，如果加载了版本号更高的数据库，则可以看到&lt;a href=&quot;../idbopendbrequest/onupgradeneeded&quot;&gt; &lt;code&gt;IDBOpenDBRequest.onupgradeneeded&lt;/code&gt; &lt;/a&gt;处理程序用于更新数据库结构。&lt;a href=&quot;createindex&quot;&gt; &lt;code&gt;IDBObjectStore.createIndex&lt;/code&gt; &lt;/a&gt;用于在对象存储上创建新索引，此后，我们使用 &lt;code&gt;deleteIndex()&lt;/code&gt; 删除不需要的旧索引。有关完整的工作示例，请参阅我们&lt;a href=&quot;https://github.com/mdn/to-do-notifications/tree/gh-pages&quot;&gt;的待办事项通知&lt;/a&gt;应用程序（&lt;a href=&quot;http://mdn.github.io/to-do-notifications/&quot;&gt;查看实时示例&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="a9858a9a945fe9b82efc2849e4db1b2796bdaa39" translate="yes" xml:space="preserve">
          <source>In the following example you can see the &lt;a href=&quot;../idbopendbrequest/onupgradeneeded&quot;&gt;&lt;code&gt;IDBOpenDBRequest.onupgradeneeded&lt;/code&gt;&lt;/a&gt; handler being used to update the database structure if a database with a higher version number is loaded. &lt;a href=&quot;createindex&quot;&gt;&lt;code&gt;IDBObjectStore.createIndex&lt;/code&gt;&lt;/a&gt; is used to create new indexes on the object store, after which we delete the unneeded old indexes with &lt;code&gt;deleteIndex()&lt;/code&gt;. For a full working example, see our &lt;a href=&quot;https://github.com/mdn/to-do-notifications/tree/gh-pages&quot;&gt;To-do Notifications&lt;/a&gt; app (&lt;a href=&quot;https://mdn.github.io/to-do-notifications/&quot;&gt;view example live&lt;/a&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4675addd7f45c9cd325e8724ce11ee6ba2cc68bb" translate="yes" xml:space="preserve">
          <source>In the following example you can see the &lt;a href=&quot;../idbopendbrequest/onupgradeneeded&quot;&gt;&lt;code&gt;IDBOpenDBRequest.onupgradeneeded&lt;/code&gt;&lt;/a&gt; handler being used to update the database structure if a database with a higher version number is loaded. &lt;code&gt;createIndex()&lt;/code&gt; is used to create new indexes on the object store. For a full working example, see our &lt;a href=&quot;https://github.com/mdn/to-do-notifications/tree/gh-pages&quot;&gt;To-do Notifications&lt;/a&gt; app (&lt;a href=&quot;http://mdn.github.io/to-do-notifications/&quot;&gt;view example live&lt;/a&gt;.)</source>
          <target state="translated">在下面的示例中，如果加载了版本号更高的数据库，则可以看到&lt;a href=&quot;../idbopendbrequest/onupgradeneeded&quot;&gt; &lt;code&gt;IDBOpenDBRequest.onupgradeneeded&lt;/code&gt; &lt;/a&gt;处理程序用于更新数据库结构。 &lt;code&gt;createIndex()&lt;/code&gt; 用于在对象存储上创建新索引。有关完整的工作示例，请参阅我们&lt;a href=&quot;https://github.com/mdn/to-do-notifications/tree/gh-pages&quot;&gt;的待办事项通知&lt;/a&gt;应用程序（&lt;a href=&quot;http://mdn.github.io/to-do-notifications/&quot;&gt;查看实时示例&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="076ddd7a50eeca831e9f451ffefd40c7903995b8" translate="yes" xml:space="preserve">
          <source>In the following example you can see the &lt;a href=&quot;../idbopendbrequest/onupgradeneeded&quot;&gt;&lt;code&gt;IDBOpenDBRequest.onupgradeneeded&lt;/code&gt;&lt;/a&gt; handler being used to update the database structure if a database with a higher version number is loaded. &lt;code&gt;createIndex()&lt;/code&gt; is used to create new indexes on the object store. For a full working example, see our &lt;a href=&quot;https://github.com/mdn/to-do-notifications/tree/gh-pages&quot;&gt;To-do Notifications&lt;/a&gt; app (&lt;a href=&quot;https://mdn.github.io/to-do-notifications/&quot;&gt;view example live&lt;/a&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d23b9b90041a93e60212c2af6b49484b331f08c5" translate="yes" xml:space="preserve">
          <source>In the following example you can see the onupgradeneeded handler being used to update the database structure if a database with a higher version number is loaded. For a full working example, see our &lt;a href=&quot;https://github.com/mdn/to-do-notifications/tree/gh-pages&quot;&gt;To-do Notifications&lt;/a&gt; app (&lt;a href=&quot;http://mdn.github.io/to-do-notifications/&quot;&gt;view example live&lt;/a&gt;.)</source>
          <target state="translated">在以下示例中，如果加载了版本号更高的数据库，则可以看到onupgradeneeded处理程序用于更新数据库结构。有关完整的工作示例，请参阅我们&lt;a href=&quot;https://github.com/mdn/to-do-notifications/tree/gh-pages&quot;&gt;的待办事项通知&lt;/a&gt;应用程序（&lt;a href=&quot;http://mdn.github.io/to-do-notifications/&quot;&gt;查看实时示例&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="77b73082ee005f6dcb639dab8973451c5a03c64b" translate="yes" xml:space="preserve">
          <source>In the following example you can see the onupgradeneeded handler being used to update the database structure if a database with a higher version number is loaded. For a full working example, see our &lt;a href=&quot;https://github.com/mdn/to-do-notifications/tree/gh-pages&quot;&gt;To-do Notifications&lt;/a&gt; app (&lt;a href=&quot;https://mdn.github.io/to-do-notifications/&quot;&gt;view example live&lt;/a&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51fd9196a1ac8412898f0b0bc25d6a4e218acd7c" translate="yes" xml:space="preserve">
          <source>In the following example, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/body&quot;&gt;&lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt;&lt;/a&gt; specifies a handler for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/load&quot;&gt;load&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/beforeunload&quot;&gt;beforeunload&lt;/a&gt;&lt;/code&gt; events and the handler calls &lt;code&gt;sendBeacon()&lt;/code&gt; with the value of &lt;a href=&quot;../window/location&quot;&gt;&lt;code&gt;window.location&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在以下示例中，&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/body&quot;&gt; &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; &lt;/a&gt;指定用于 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/load&quot;&gt;load&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/beforeunload&quot;&gt;beforeunload&lt;/a&gt;&lt;/code&gt; 事件的处理程序，并且该处理程序使用&lt;a href=&quot;../window/location&quot;&gt; &lt;code&gt;window.location&lt;/code&gt; &lt;/a&gt;的值调用 &lt;code&gt;sendBeacon()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0c8b1dd516e3678411afd33e740d3bc2bdeab48c" translate="yes" xml:space="preserve">
          <source>In the following example, &lt;code&gt;getElementsByTagName()&lt;/code&gt; starts from a particular parent element and searches top-down recursively through the DOM from that parent element, building a collection of all descendant elements which match the tag &lt;code&gt;name&lt;/code&gt; parameter. This demonstrates both &lt;code&gt;document.getElementsByTagName()&lt;/code&gt; and the functionally identical &lt;a href=&quot;../element/getelementsbytagname&quot;&gt;&lt;code&gt;Element.getElementsByTagName()&lt;/code&gt;&lt;/a&gt;, which starts the search at a specific element within the DOM tree.</source>
          <target state="translated">在下面的示例中， &lt;code&gt;getElementsByTagName()&lt;/code&gt; 从特定的父元素开始，并从该父元素递归搜索DOM，从而构建了与标记 &lt;code&gt;name&lt;/code&gt; 参数匹配的所有后代元素的集合。这演示了 &lt;code&gt;document.getElementsByTagName()&lt;/code&gt; 和功能相同的&lt;a href=&quot;../element/getelementsbytagname&quot;&gt; &lt;code&gt;Element.getElementsByTagName()&lt;/code&gt; &lt;/a&gt;，后者从DOM树内的特定元素开始搜索。</target>
        </trans-unit>
        <trans-unit id="c239cd0ef33c89351889a414b03386a638b7915e" translate="yes" xml:space="preserve">
          <source>In the following example, &lt;code&gt;setAttribute()&lt;/code&gt; is used to set attributes on a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button&quot;&gt;&lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在下面的示例中， &lt;code&gt;setAttribute()&lt;/code&gt; 用于设置&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button&quot;&gt; &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; &lt;/a&gt;上的属性。</target>
        </trans-unit>
        <trans-unit id="15a0f0de05f2bdbd6afba0e27ceea9a538c6f64f" translate="yes" xml:space="preserve">
          <source>In the following example, &lt;code&gt;toggleAttribute()&lt;/code&gt; is used to toggle the &lt;code&gt;readonly&lt;/code&gt; attribute of a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input&quot;&gt;&lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在以下示例中， &lt;code&gt;toggleAttribute()&lt;/code&gt; 用于切换&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input&quot;&gt; &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; &lt;/a&gt;的 &lt;code&gt;readonly&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="2136ebdeb382da448c738322af6206e3691418a1" translate="yes" xml:space="preserve">
          <source>In the following example, a &lt;a href=&quot;../worker&quot;&gt;&lt;code&gt;Worker&lt;/code&gt;&lt;/a&gt; sends a beacon using the URL and data from the global context.</source>
          <target state="translated">在以下示例中，&lt;a href=&quot;../worker&quot;&gt; &lt;code&gt;Worker&lt;/code&gt; &lt;/a&gt;使用URL和来自全局上下文的数据发送信标。</target>
        </trans-unit>
        <trans-unit id="e2c4b52405c33bb76581b3b25475df910f8055c2" translate="yes" xml:space="preserve">
          <source>In the following example, a &lt;code&gt;PaymentRequest&lt;/code&gt; object is instantiated before the &lt;code&gt;show()&lt;/code&gt; method is called. This method triggers the user agent's built-in process for retrieving payment information from the user. The &lt;code&gt;show()&lt;/code&gt; method returns a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; that resolves to a &lt;a href=&quot;../paymentresponse&quot;&gt;&lt;code&gt;PaymentResponse&lt;/code&gt;&lt;/a&gt; object when the user interaction is complete. The developer then uses the information in the &lt;code&gt;PaymentResponse&lt;/code&gt; object to format and send payment data to the server. You should send the payment information to the server asynchronously so that the final call to &lt;a href=&quot;../paymentresponse/complete&quot;&gt;&lt;code&gt;paymentResponse.complete()&lt;/code&gt;&lt;/a&gt; can indicate the success or failure of the payment.</source>
          <target state="translated">在下面的示例中，在 &lt;code&gt;PaymentRequest&lt;/code&gt; &lt;code&gt;show()&lt;/code&gt; 方法之前实例化了PaymentRequest对象。此方法触发了用户代理的内置过程，用于从用户那里检索付款信息。的 &lt;code&gt;show()&lt;/code&gt; 方法返回一个&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt; &lt;code&gt;Promise&lt;/code&gt; &lt;/a&gt;解析为一个&lt;a href=&quot;../paymentresponse&quot;&gt; &lt;code&gt;PaymentResponse&lt;/code&gt; &lt;/a&gt;对象时用户的交互完成。然后，开发人员使用 &lt;code&gt;PaymentResponse&lt;/code&gt; 对象中的信息来格式化付款数据并将其发送到服务器。您应该将付款信息异步发送到服务器，以便最终调用&lt;a href=&quot;../paymentresponse/complete&quot;&gt; &lt;code&gt;paymentResponse.complete()&lt;/code&gt; &lt;/a&gt;可以指示付款成功还是失败。</target>
        </trans-unit>
        <trans-unit id="b5ff12a4f3863904b511398d8dbb0bbb6fb2cca4" translate="yes" xml:space="preserve">
          <source>In the following example, an artifical &lt;a href=&quot;response&quot;&gt;&lt;code&gt;Response&lt;/code&gt;&lt;/a&gt; is created to stream HTML fragments fetched from another resource to the browser.</source>
          <target state="translated">在以下示例中，创建了一个人工&lt;a href=&quot;response&quot;&gt; &lt;code&gt;Response&lt;/code&gt; &lt;/a&gt;，以将从另一资源获取的HTML片段流式传输到浏览器。</target>
        </trans-unit>
        <trans-unit id="074d15ec140caa2cf001de7db84d2c0f9c261301" translate="yes" xml:space="preserve">
          <source>In the following example, default touch behavior is disabled for some &lt;code&gt;button&lt;/code&gt; elements.</source>
          <target state="translated">在以下示例中，某些 &lt;code&gt;button&lt;/code&gt; 元素禁用了默认触摸行为。</target>
        </trans-unit>
        <trans-unit id="435f4702a2e343f1c7339da7a8f80d5950f63c17" translate="yes" xml:space="preserve">
          <source>In the following example, is &lt;a href=&quot;https://rsolomakhin.github.io/samples/paymentrequest/can-make-payment/&quot;&gt;excerpted from a demo&lt;/a&gt; that asynchronously builds a &lt;code&gt;PaymentRequest&lt;/code&gt; object for both Android Pay and credit cards. It wraps the call to &lt;code&gt;canMakePayment()&lt;/code&gt; in feature detection, and calls an appropriate callback depending on the resolution of the &lt;code&gt;Promise&lt;/code&gt;.</source>
          <target state="translated">在以下示例中，&lt;a href=&quot;https://rsolomakhin.github.io/samples/paymentrequest/can-make-payment/&quot;&gt;摘录自一个演示&lt;/a&gt;，该演示异步地为Android Pay和信用卡构建了 &lt;code&gt;PaymentRequest&lt;/code&gt; 对象。它在功能检测中包装对 &lt;code&gt;canMakePayment()&lt;/code&gt; 的调用，并根据 &lt;code&gt;Promise&lt;/code&gt; 的分辨率调用适当的回调。</target>
        </trans-unit>
        <trans-unit id="a89cbe350cc5914c90c8f16cde6b42e2ba8e80cf" translate="yes" xml:space="preserve">
          <source>In the following example, the &lt;a href=&quot;paymentrequest/paymentrequest&quot;&gt;&lt;code&gt;PaymentRequest()&lt;/code&gt;&lt;/a&gt; constructor is used to create a new payment request, which takes three objects as parameters &amp;mdash; one containing details of the payment methods that can be used for the payment, one containing details of the actual order (such as items bought and shipping options), and an optional object containing further options.</source>
          <target state="translated">在以下示例中，使用&lt;a href=&quot;paymentrequest/paymentrequest&quot;&gt; &lt;code&gt;PaymentRequest()&lt;/code&gt; &lt;/a&gt;构造函数创建一个新的付款请求，该请求以三个对象为参数-一个包含可用于付款的付款方式的详细信息，一个包含实际订单的详细信息（例如作为购买的物品和运输选项），以及一个包含其他选项的可选对象。</target>
        </trans-unit>
        <trans-unit id="69a4afce05318d660f9a2d64558901c1c08b8728" translate="yes" xml:space="preserve">
          <source>In the following example, the &lt;a href=&quot;paymentrequest/paymentrequest&quot;&gt;&lt;code&gt;PaymentRequest()&lt;/code&gt;&lt;/a&gt; constructor is used to create a new payment request, which takes three objects as parameters &amp;mdash; one containing details of the payment methods that can be used for the payment, one containing details of the actual order (such as items bought and shipping options), and an optional object that describes what data is needed to fullfil the payment (e.g., a shipping address).</source>
          <target state="translated">在以下示例中，使用&lt;a href=&quot;paymentrequest/paymentrequest&quot;&gt; &lt;code&gt;PaymentRequest()&lt;/code&gt; &lt;/a&gt;构造函数创建一个新的付款请求，该请求以三个对象为参数-一个包含可用于付款的付款方式的详细信息，一个包含实际订单的详细信息（例如（例如购买的商品和运送选项），以及一个可选的对象，用于描述完成付款所需的数据（例如，运送地址）。</target>
        </trans-unit>
        <trans-unit id="9399fcb632d7fa954193a19bfe23757637053c4f" translate="yes" xml:space="preserve">
          <source>In the following example, the browser's default touch behavior is disabled for the &lt;code&gt;div&lt;/code&gt; element.</source>
          <target state="translated">在以下示例中，禁用了 &lt;code&gt;div&lt;/code&gt; 元素的浏览器默认触摸行为。</target>
        </trans-unit>
        <trans-unit id="c4954c22bd76143fe072e377c4963440f2a90e26" translate="yes" xml:space="preserve">
          <source>In the following example, the observer only processes &quot;&lt;code&gt;frame&lt;/code&gt;&quot; entries.</source>
          <target state="translated">在以下示例中，观察者仅处理&amp;ldquo; &lt;code&gt;frame&lt;/code&gt; &amp;rdquo;条目。</target>
        </trans-unit>
        <trans-unit id="1433807e8aed33cbe342c63308336b4d4f59743d" translate="yes" xml:space="preserve">
          <source>In the following example, the observer registers to be notified when several different &lt;a href=&quot;../performanceentry/entrytype&quot;&gt;&lt;code&gt;performance entry types&lt;/code&gt;&lt;/a&gt; are added to the performance timeline.</source>
          <target state="translated">在以下示例中，当几种不同的&lt;a href=&quot;../performanceentry/entrytype&quot;&gt; &lt;code&gt;performance entry types&lt;/code&gt; &lt;/a&gt;添加到演奏时间表时，观察者注册要通知。</target>
        </trans-unit>
        <trans-unit id="ea0a664d609a3f3c335bc180ae43dd32b5c2f10b" translate="yes" xml:space="preserve">
          <source>In the following example, the state of the animation will be &lt;code&gt;running&lt;/code&gt; when the &lt;strong&gt;current ready Promise&lt;/strong&gt; is resolved because the animation does not leave the &lt;code&gt;pending&lt;/code&gt; play state in between the calls to &lt;code&gt;pause&lt;/code&gt; and &lt;code&gt;play&lt;/code&gt; and hence the &lt;strong&gt;current ready Promise&lt;/strong&gt; does not change.</source>
          <target state="translated">在以下示例中，当解决了&lt;strong&gt;当前的&amp;ldquo;准备好的承诺&amp;rdquo;&lt;/strong&gt;时，动画的状态将处于 &lt;code&gt;running&lt;/code&gt; 状态，因为动画不会在 &lt;code&gt;pause&lt;/code&gt; 和 &lt;code&gt;play&lt;/code&gt; 的调用之间离开 &lt;code&gt;pending&lt;/code&gt; 播放状态，因此&lt;strong&gt;当前的&amp;ldquo;准备好的承诺&lt;/strong&gt; &amp;rdquo;不会改变。&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e63de5a71b8870039b14aa4bd411ec24bdfe2f0a" translate="yes" xml:space="preserve">
          <source>In the following example, the value of the &lt;code&gt;*Start&lt;/code&gt; and &lt;code&gt;*End&lt;/code&gt; properties of all &quot;&lt;code&gt;resource&lt;/code&gt;&quot; &lt;a href=&quot;../performanceentry/entrytype&quot;&gt;&lt;code&gt;type&lt;/code&gt;&lt;/a&gt; events are logged.</source>
          <target state="translated">在下面的示例中，记录了所有&amp;ldquo; &lt;code&gt;resource&lt;/code&gt; &amp;rdquo; &lt;a href=&quot;../performanceentry/entrytype&quot;&gt; &lt;code&gt;type&lt;/code&gt; &lt;/a&gt;事件的 &lt;code&gt;*Start&lt;/code&gt; 和 &lt;code&gt;*End&lt;/code&gt; 属性的值。</target>
        </trans-unit>
        <trans-unit id="272a68d6fbc5f4442d1315c4d1b6de3e82eca052" translate="yes" xml:space="preserve">
          <source>In the following example, there are three messages sent. The first is just a comment, since it starts with a colon character. As mentioned previously, this can be useful as a keep-alive if messages may not be sent regularly.</source>
          <target state="translated">在下面的例子中,有三个消息被发送。第一条只是一条评论,因为它以冒号开头。如前所述,如果不定期发送消息,这可以作为一个保持活力的方法。</target>
        </trans-unit>
        <trans-unit id="5c03a598ed9c91ab1c9ee7e227c36c0439717838" translate="yes" xml:space="preserve">
          <source>In the following example, we use an onclick handler to open a webpage in a new tab (specified by the inclusion of the &lt;code&gt;'_blank'&lt;/code&gt; parameter) once a notification is clicked:</source>
          <target state="translated">在以下示例中，一旦单击通知，我们将使用onclick处理程序在新标签页中打开网页（通过包含 &lt;code&gt;'_blank'&lt;/code&gt; 参数指定）：</target>
        </trans-unit>
        <trans-unit id="fad7ceb798d82f026b15c9c84b22426bc2473d27" translate="yes" xml:space="preserve">
          <source>In the following example, we will use an external image as the backdrop for a small line graph. Using backdrops can make your script considerably smaller because we can avoid the need for code to generate the background. In this example, we're only using one image, so I use the image object's &lt;code&gt;load&lt;/code&gt; event handler to execute the drawing statements. The &lt;code&gt;drawImage()&lt;/code&gt; method places the backdrop at the coordinate (0, 0), which is the top-left corner of the canvas.</source>
          <target state="translated">在以下示例中，我们将使用外部图像作为小折线图的背景。使用背景可以使您的脚本小得多，因为我们可以避免使用代码来生成背景。在此示例中，我们仅使用一个图像，因此我使用图像对象的 &lt;code&gt;load&lt;/code&gt; 事件处理程序执行绘图语句。所述 &lt;code&gt;drawImage()&lt;/code&gt; 方法的地方的背景下在坐标（0,0），这是画布的左上角。</target>
        </trans-unit>
        <trans-unit id="a2ea89db3c927ff7b96eac5c3aa09d70af60c212" translate="yes" xml:space="preserve">
          <source>In the following example, when the &lt;code&gt;target&lt;/code&gt; element is touched, it will only pan in the horizontal direction.</source>
          <target state="translated">在以下示例中，当触摸 &lt;code&gt;target&lt;/code&gt; 元素时，它只会在水平方向平移。</target>
        </trans-unit>
        <trans-unit id="27103044b8cb0dedb1968025603095f2edc97939" translate="yes" xml:space="preserve">
          <source>In the following example, you can see a new channel being created using the &lt;a href=&quot;messagechannel&quot;&gt;&lt;code&gt;MessageChannel.MessageChannel&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">在以下示例中，您可以看到正在使用&lt;a href=&quot;messagechannel&quot;&gt; &lt;code&gt;MessageChannel.MessageChannel&lt;/code&gt; &lt;/a&gt;构造函数创建一个新通道。</target>
        </trans-unit>
        <trans-unit id="267443cd206379d124942634e201ae0c8ab5d59b" translate="yes" xml:space="preserve">
          <source>In the following example, you can see an example of how the &lt;code&gt;createPanner()&lt;/code&gt; method, &lt;a href=&quot;../audiolistener&quot;&gt;&lt;code&gt;AudioListener&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../pannernode&quot;&gt;&lt;code&gt;PannerNode&lt;/code&gt;&lt;/a&gt; would be used to control audio spatialisation. Generally you will define the position in 3D space that your audio listener and panner (source) occupy initially, and then update the position of one or both of these as the application is used. You might be moving a character around inside a game world for example, and wanting delivery of audio to change realistically as your character moves closer to or further away from a music player such as a stereo. In the example you can see this being controlled by the functions &lt;code&gt;moveRight()&lt;/code&gt;, &lt;code&gt;moveLeft()&lt;/code&gt;, etc., which set new values for the panner position via the &lt;code&gt;PositionPanner()&lt;/code&gt; function.</source>
          <target state="translated">在以下示例中，您可以看到一个示例，该示例说明如何使用 &lt;code&gt;createPanner()&lt;/code&gt; 方法，&lt;a href=&quot;../audiolistener&quot;&gt; &lt;code&gt;AudioListener&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../pannernode&quot;&gt; &lt;code&gt;PannerNode&lt;/code&gt; &lt;/a&gt;来控制音频空间。通常，您将在3D空间中定义音频监听器和声像器（源）最初占据的位置，然后在使用该应用程序时更新其中一个或两个的位置。例如，您可能要在游戏世界中移动角色，并希望随着您的角色靠近或远离音乐播放器（如立体声音响）而实际改变音频的传递。在示例中，您可以看到它是由 &lt;code&gt;moveRight()&lt;/code&gt; 函数， &lt;code&gt;moveLeft()&lt;/code&gt; 函数控制的等等，它们通过 &lt;code&gt;PositionPanner()&lt;/code&gt; 函数设置摇摄位置的新值。</target>
        </trans-unit>
        <trans-unit id="0fbc992a8d37b0d921869bc0d62f0d91d2f3c4f5" translate="yes" xml:space="preserve">
          <source>In the following example, you can see an example of how the &lt;code&gt;createPanner()&lt;/code&gt; method, &lt;a href=&quot;audiolistener&quot;&gt;&lt;code&gt;AudioListener&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;pannernode&quot;&gt;&lt;code&gt;PannerNode&lt;/code&gt;&lt;/a&gt; would be used to control audio spatialisation. Generally you will define the position in 3D space that your audio listener and panner (source) occupy initially, and then update the position of one or both of these as the application is used. You might be moving a character around inside a game world for example, and wanting delivery of audio to change realistically as your character moves closer to or further away from a music player such as a stereo. In the example you can see this being controlled by the functions &lt;code&gt;moveRight()&lt;/code&gt;, &lt;code&gt;moveLeft()&lt;/code&gt;, etc., which set new values for the panner position via the &lt;code&gt;PositionPanner()&lt;/code&gt; function.</source>
          <target state="translated">在以下示例中，您可以看到一个示例，该示例说明如何使用 &lt;code&gt;createPanner()&lt;/code&gt; 方法，&lt;a href=&quot;audiolistener&quot;&gt; &lt;code&gt;AudioListener&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;pannernode&quot;&gt; &lt;code&gt;PannerNode&lt;/code&gt; &lt;/a&gt;来控制音频空间。通常，您将在3D空间中定义音频监听器和声像器（源）最初占据的位置，然后在使用该应用程序时更新其中一个或两个的位置。例如，您可能要在游戏世界中移动角色，并希望随着您的角色靠近或远离音乐播放器（如立体声音响）而实际改变音频的传递。在示例中，您可以看到它是由 &lt;code&gt;moveRight()&lt;/code&gt; 函数， &lt;code&gt;moveLeft()&lt;/code&gt; 函数控制的等等，它们通过 &lt;code&gt;PositionPanner()&lt;/code&gt; 函数设置摇摄位置的新值。</target>
        </trans-unit>
        <trans-unit id="5dd1b59215ad923cdb79fd53376e012a6544888f" translate="yes" xml:space="preserve">
          <source>In the following illustration, the client area is show in white. (The segments labeled &quot;Top&quot;, &quot;Right&quot;, etc. have no significance regarding the client area.) The clientTop value is the distance from where the margin (yellow) area ends and the padding and content areas (white) begin.</source>
          <target state="translated">在下面的图示中,客户端区域以白色显示(标有 &quot;顶部&quot;、&quot;右侧 &quot;等的部分对客户端区域没有意义)。客户端顶部的值是指从页边(黄色)区域结束到填充和内容区域(白色)开始的距离。</target>
        </trans-unit>
        <trans-unit id="474a83ac9b651165c2d3beae70139fedcda6414c" translate="yes" xml:space="preserve">
          <source>In the following simple example we retrieve the list of classes set on a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/p&quot;&gt;&lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt;&lt;/a&gt; element as a &lt;code&gt;DOMTokenList&lt;/code&gt; using &lt;a href=&quot;element/classlist&quot;&gt;&lt;code&gt;Element.classList&lt;/code&gt;&lt;/a&gt;, add a class using &lt;a href=&quot;domtokenlist/add&quot;&gt;&lt;code&gt;DOMTokenList.add()&lt;/code&gt;&lt;/a&gt;, and then update the &lt;a href=&quot;node/textcontent&quot;&gt;&lt;code&gt;Node.textContent&lt;/code&gt;&lt;/a&gt; of the &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; to equal the &lt;code&gt;DOMTokenList&lt;/code&gt;.</source>
          <target state="translated">在下面的简单示例中，我们使用&lt;a href=&quot;element/classlist&quot;&gt; &lt;code&gt;Element.classList&lt;/code&gt; &lt;/a&gt;检索在&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/p&quot;&gt; &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; &lt;/a&gt;元素上设置为 &lt;code&gt;DOMTokenList&lt;/code&gt; 的类的列表，使用&lt;a href=&quot;domtokenlist/add&quot;&gt; &lt;code&gt;DOMTokenList.add()&lt;/code&gt; &lt;/a&gt;添加一个类，然后将 &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; 的&lt;a href=&quot;node/textcontent&quot;&gt; &lt;code&gt;Node.textContent&lt;/code&gt; &lt;/a&gt;更新为等于该 &lt;code&gt;DOMTokenList&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="80f8f0c900b82d25d4e356ac33ff134dd6e1af5c" translate="yes" xml:space="preserve">
          <source>In the following simple example, a custom &lt;code&gt;ReadableStream&lt;/code&gt; is created using a constructor (see our &lt;a href=&quot;https://mdn.github.io/dom-examples/streams/simple-random-stream/&quot;&gt;Simple random stream example&lt;/a&gt; for the full code). The &lt;code&gt;start()&lt;/code&gt; function generates a random string of text every second and enqueues it into the stream &amp;mdash; see &lt;code&gt;controller.enqueue(string)&lt;/code&gt;. A &lt;code&gt;cancel()&lt;/code&gt; function is also provided to stop the generation if &lt;a href=&quot;../readablestream/cancel&quot;&gt;&lt;code&gt;ReadableStream.cancel()&lt;/code&gt;&lt;/a&gt; is called for any reason.</source>
          <target state="translated">在下面的简单示例中，使用构造函数创建了一个自定义 &lt;code&gt;ReadableStream&lt;/code&gt; （有关完整代码，请参见我们的&lt;a href=&quot;https://mdn.github.io/dom-examples/streams/simple-random-stream/&quot;&gt;简单随机流示例&lt;/a&gt;）。在 &lt;code&gt;start()&lt;/code&gt; 函数生成的文本每一秒和入队入流的随机字符串-见 &lt;code&gt;controller.enqueue(string)&lt;/code&gt; 。一个 &lt;code&gt;cancel()&lt;/code&gt; 还提供了功能并停止发电，如果&lt;a href=&quot;../readablestream/cancel&quot;&gt; &lt;code&gt;ReadableStream.cancel()&lt;/code&gt; &lt;/a&gt;被调用的任何理由。</target>
        </trans-unit>
        <trans-unit id="59cb84714140f3e5268fa616f6ba90deb1e77626" translate="yes" xml:space="preserve">
          <source>In the following simple example, a custom &lt;code&gt;ReadableStream&lt;/code&gt; is created using a constructor (see our &lt;a href=&quot;https://mdn.github.io/dom-examples/streams/simple-random-stream/&quot;&gt;Simple random stream example&lt;/a&gt; for the full code). The &lt;code&gt;start()&lt;/code&gt; function generates a random string of text every second and enqueues it into the stream. A &lt;code&gt;cancel()&lt;/code&gt; fuction is also provided to stop the generation if &lt;a href=&quot;cancel&quot;&gt;&lt;code&gt;ReadableStream.cancel()&lt;/code&gt;&lt;/a&gt; is called for any reason.</source>
          <target state="translated">在下面的简单示例中，使用构造函数创建了一个自定义 &lt;code&gt;ReadableStream&lt;/code&gt; （有关完整代码，请参见我们的&lt;a href=&quot;https://mdn.github.io/dom-examples/streams/simple-random-stream/&quot;&gt;简单随机流示例&lt;/a&gt;）。的 &lt;code&gt;start()&lt;/code&gt; 函数生成的文本的每一个第二随机字符串，并将其排入到流中。一个 &lt;code&gt;cancel()&lt;/code&gt; 也提供机能的研究并停止发电，如果&lt;a href=&quot;cancel&quot;&gt; &lt;code&gt;ReadableStream.cancel()&lt;/code&gt; &lt;/a&gt;被调用的任何理由。</target>
        </trans-unit>
        <trans-unit id="c4ff1cf79f45c57303c62ae0c938833b77546406" translate="yes" xml:space="preserve">
          <source>In the following simple example, a custom &lt;code&gt;ReadableStream&lt;/code&gt; is created using a constructor (see our &lt;a href=&quot;https://mdn.github.io/dom-examples/streams/simple-random-stream/&quot;&gt;Simple random stream example&lt;/a&gt; for the full code). The &lt;code&gt;start()&lt;/code&gt; function generates a random string of text every second and enqueues it into the stream. A &lt;code&gt;cancel()&lt;/code&gt; function is also provided to stop the generation if &lt;a href=&quot;../readablestream/cancel&quot;&gt;&lt;code&gt;ReadableStream.cancel()&lt;/code&gt;&lt;/a&gt; is called for any reason.</source>
          <target state="translated">在下面的简单示例中，使用构造函数创建了一个自定义 &lt;code&gt;ReadableStream&lt;/code&gt; （有关完整代码，请参见我们的&lt;a href=&quot;https://mdn.github.io/dom-examples/streams/simple-random-stream/&quot;&gt;简单随机流示例&lt;/a&gt;）。的 &lt;code&gt;start()&lt;/code&gt; 函数生成的文本的每一个第二随机字符串，并将其排入到流中。一个 &lt;code&gt;cancel()&lt;/code&gt; 还提供了功能并停止发电，如果&lt;a href=&quot;../readablestream/cancel&quot;&gt; &lt;code&gt;ReadableStream.cancel()&lt;/code&gt; &lt;/a&gt;被调用的任何理由。</target>
        </trans-unit>
        <trans-unit id="5e2870fcf6209e4e65b1b15b629e6b41a8003f8e" translate="yes" xml:space="preserve">
          <source>In the following simple example, a custom &lt;code&gt;ReadableStream&lt;/code&gt; is created using a constructor (see our &lt;a href=&quot;https://mdn.github.io/dom-examples/streams/simple-random-stream/&quot;&gt;Simple random stream example&lt;/a&gt; for the full code). The &lt;code&gt;start()&lt;/code&gt; function generates a random string of text every second and enqueues it into the stream. A &lt;code&gt;cancel()&lt;/code&gt; function is also provided to stop the generation if &lt;a href=&quot;readablestream/cancel&quot;&gt;&lt;code&gt;ReadableStream.cancel()&lt;/code&gt;&lt;/a&gt; is called for any reason.</source>
          <target state="translated">在下面的简单示例中，使用构造函数创建了一个自定义 &lt;code&gt;ReadableStream&lt;/code&gt; （有关完整代码，请参见我们的&lt;a href=&quot;https://mdn.github.io/dom-examples/streams/simple-random-stream/&quot;&gt;简单随机流示例&lt;/a&gt;）。的 &lt;code&gt;start()&lt;/code&gt; 函数生成的文本的每一个第二随机字符串，并将其排入到流中。一个 &lt;code&gt;cancel()&lt;/code&gt; 还提供了功能并停止发电，如果&lt;a href=&quot;readablestream/cancel&quot;&gt; &lt;code&gt;ReadableStream.cancel()&lt;/code&gt; &lt;/a&gt;被调用的任何理由。</target>
        </trans-unit>
        <trans-unit id="b4b18390b90a48249fd37f0687cb1a40ede06b2e" translate="yes" xml:space="preserve">
          <source>In the following simple example, a previously-created custom &lt;code&gt;ReadableStream&lt;/code&gt; is read using a &lt;a href=&quot;../readablestreamdefaultreader&quot;&gt;&lt;code&gt;ReadableStreamDefaultReader&lt;/code&gt;&lt;/a&gt; created using &lt;code&gt;getReader()&lt;/code&gt;. (see our &lt;a href=&quot;https://mdn.github.io/dom-examples/streams/simple-random-stream/&quot;&gt;Simple random stream example&lt;/a&gt; for the full code). Each chunk is read sequentially and output to the UI, until the stream has finished being read, at which point we return out of the recursive function and print the entire stream to another part of the UI.</source>
          <target state="translated">在下面的简单的例子，一个先前创建的自定义 &lt;code&gt;ReadableStream&lt;/code&gt; 使用读&lt;a href=&quot;../readablestreamdefaultreader&quot;&gt; &lt;code&gt;ReadableStreamDefaultReader&lt;/code&gt; &lt;/a&gt;创建使用 &lt;code&gt;getReader()&lt;/code&gt; 。（有关完整代码，请参见我们的&lt;a href=&quot;https://mdn.github.io/dom-examples/streams/simple-random-stream/&quot;&gt;简单随机流示例&lt;/a&gt;）。依次读取每个块并将其输出到UI，直到完成读取流为止，这时我们退出递归函数，并将整个流打印到UI的另一部分。</target>
        </trans-unit>
        <trans-unit id="70da65ac6eaead2e5668e0c03b6541cc8e7d2e27" translate="yes" xml:space="preserve">
          <source>In the following simple example, a previously-created custom &lt;code&gt;ReadableStream&lt;/code&gt; is read using a &lt;a href=&quot;../readablestreamdefaultreader&quot;&gt;&lt;code&gt;ReadableStreamDefaultReader&lt;/code&gt;&lt;/a&gt; created using &lt;code&gt;getReader()&lt;/code&gt;. (this code is based on our &lt;a href=&quot;https://mdn.github.io/dom-examples/streams/simple-random-stream/&quot;&gt;Simple random stream example&lt;/a&gt;). Each chunk is read sequentially and output to the UI, until the stream has finished being read, at which point we return out of the recursive function and print the entire stream to another part of the UI.</source>
          <target state="translated">在下面的简单的例子，一个先前创建的自定义 &lt;code&gt;ReadableStream&lt;/code&gt; 使用读&lt;a href=&quot;../readablestreamdefaultreader&quot;&gt; &lt;code&gt;ReadableStreamDefaultReader&lt;/code&gt; &lt;/a&gt;创建使用 &lt;code&gt;getReader()&lt;/code&gt; 。（此代码基于我们的&lt;a href=&quot;https://mdn.github.io/dom-examples/streams/simple-random-stream/&quot;&gt;简单随机流示例&lt;/a&gt;）。依次读取每个块并将其输出到UI，直到完成读取流为止，这时我们退出递归函数，并将整个流打印到UI的另一部分。</target>
        </trans-unit>
        <trans-unit id="2c3326db0ccb36af73ef9fce2fd3ca9bc5c2ece9" translate="yes" xml:space="preserve">
          <source>In the following simple example, a previously-created stream is teed, then both resulting streams (contained in two members of a generated array) are passed to a function that reads the data out of the two streams and prints each stream's chunks sequentially to a different part of the UI. See &lt;a href=&quot;https://mdn.github.io/dom-examples/streams/simple-tee-example/&quot;&gt;Simple tee example&lt;/a&gt; for the full code.</source>
          <target state="translated">在下面的简单示例中，准备好先前创建的流，然后将这两个结果流（包含在生成的数组的两个成员中）传递给一个函数，该函数从两个流中读取数据并将每个流的块顺序打印到用户界面的不同部分。有关完整代码，请参见&lt;a href=&quot;https://mdn.github.io/dom-examples/streams/simple-tee-example/&quot;&gt;简单tee示例&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c22e74fba95ca0693e32f5fa4b058e21c5c71986" translate="yes" xml:space="preserve">
          <source>In the following simple example, we create a &lt;a href=&quot;../mediastreamaudiodestinationnode&quot;&gt;&lt;code&gt;MediaStreamAudioDestinationNode&lt;/code&gt;&lt;/a&gt;, an &lt;a href=&quot;../oscillatornode&quot;&gt;&lt;code&gt;OscillatorNode&lt;/code&gt;&lt;/a&gt; and a &lt;a href=&quot;../mediarecorder&quot;&gt;&lt;code&gt;MediaRecorder&lt;/code&gt;&lt;/a&gt; (the example will therefore only work in Firefox and Chrome at this time.) The &lt;code&gt;MediaRecorder&lt;/code&gt; is set up to record information from the &lt;code&gt;MediaStreamDestinationNode&lt;/code&gt;.</source>
          <target state="translated">在下面的简单示例中，我们创建一个&lt;a href=&quot;../mediastreamaudiodestinationnode&quot;&gt; &lt;code&gt;MediaStreamAudioDestinationNode&lt;/code&gt; &lt;/a&gt;，一个&lt;a href=&quot;../oscillatornode&quot;&gt; &lt;code&gt;OscillatorNode&lt;/code&gt; &lt;/a&gt;和一个&lt;a href=&quot;../mediarecorder&quot;&gt; &lt;code&gt;MediaRecorder&lt;/code&gt; &lt;/a&gt;（因此，该示例目前仅在Firefox和Chrome中运行。） &lt;code&gt;MediaRecorder&lt;/code&gt; 设置为记录来自 &lt;code&gt;MediaStreamDestinationNode&lt;/code&gt; 的信息。</target>
        </trans-unit>
        <trans-unit id="412081b079739248cd449f45f3df036233949d8a" translate="yes" xml:space="preserve">
          <source>In the following simple example, we create a &lt;a href=&quot;mediastreamaudiodestinationnode&quot;&gt;&lt;code&gt;MediaStreamAudioDestinationNode&lt;/code&gt;&lt;/a&gt;, an &lt;a href=&quot;oscillatornode&quot;&gt;&lt;code&gt;OscillatorNode&lt;/code&gt;&lt;/a&gt; and a &lt;a href=&quot;mediarecorder&quot;&gt;&lt;code&gt;MediaRecorder&lt;/code&gt;&lt;/a&gt; (the example will therefore only work in Firefox and Chrome at this time.) The &lt;code&gt;MediaRecorder&lt;/code&gt; is set up to record information from the &lt;code&gt;MediaStreamDestinationNode&lt;/code&gt;.</source>
          <target state="translated">在下面的简单示例中，我们创建一个&lt;a href=&quot;mediastreamaudiodestinationnode&quot;&gt; &lt;code&gt;MediaStreamAudioDestinationNode&lt;/code&gt; &lt;/a&gt;，一个&lt;a href=&quot;oscillatornode&quot;&gt; &lt;code&gt;OscillatorNode&lt;/code&gt; &lt;/a&gt;和一个&lt;a href=&quot;mediarecorder&quot;&gt; &lt;code&gt;MediaRecorder&lt;/code&gt; &lt;/a&gt;（因此，该示例目前仅在Firefox和Chrome中运行。） &lt;code&gt;MediaRecorder&lt;/code&gt; 设置为记录来自 &lt;code&gt;MediaStreamDestinationNode&lt;/code&gt; 的信息。</target>
        </trans-unit>
        <trans-unit id="35c15027522574712e5fe6ced6b122df70aed2c4" translate="yes" xml:space="preserve">
          <source>In the following snippet we do just this &amp;mdash; depending on whether the user can make a fast payment or needs to add payment credentials first, the title of the checkout button changes between &quot;Fast Checkout with W3C&quot; and &quot;Setup W3C Checkout&quot;. In both cases, the checkout button calls &lt;a href=&quot;../paymentrequest/show&quot;&gt;&lt;code&gt;PaymentRequest.show()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在下面的代码段中，我们将执行此操作-根据用户是否可以进行快速付款还是需要首先添加付款凭证，结帐按钮的标题在&amp;ldquo;使用W3C进行快速结帐&amp;rdquo;和&amp;ldquo;设置W3C结帐&amp;rdquo;之间切换。在这两种情况下，结帐按钮都会调用&lt;a href=&quot;../paymentrequest/show&quot;&gt; &lt;code&gt;PaymentRequest.show()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6aa744a3eb4f9113956367367e140c4cfafdff30" translate="yes" xml:space="preserve">
          <source>In the following snippet, a merchant page performs this check, and if it returns &lt;code&gt;true&lt;/code&gt; updates the checkout button to use &lt;code&gt;PaymentRequest&lt;/code&gt; instead of legacy web forms.</source>
          <target state="translated">在以下代码段中，商家页面执行此检查，如果返回 &lt;code&gt;true&lt;/code&gt; ,则更新结帐按钮以使用 &lt;code&gt;PaymentRequest&lt;/code&gt; 代替旧版Web表单。</target>
        </trans-unit>
        <trans-unit id="ed8de38c803e9a9a0c44ea1d4286580acb8d3f34" translate="yes" xml:space="preserve">
          <source>In the following snippet, found in our &lt;a href=&quot;https://github.com/mdn/emogotchi&quot;&gt;Emogotchi demo&lt;/a&gt; (&lt;a href=&quot;http://mdn.github.io/emogotchi/&quot;&gt;view it running live&lt;/a&gt;), we have a simple function that when called creates an &lt;code&gt;options&lt;/code&gt; object and then a new notification. At the end of the function, it also calls &lt;code&gt;close()&lt;/code&gt; inside a &lt;a href=&quot;../windoworworkerglobalscope/settimeout&quot;&gt;&lt;code&gt;setTimeout()&lt;/code&gt;&lt;/a&gt; function to close the notification after 4 seconds (some browsers close spawned notifications automatically, and some such as Chrome and Opera do not.) Also note the use of &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind&quot;&gt;bind()&lt;/a&gt;&lt;/code&gt; to make sure the &lt;code&gt;close()&lt;/code&gt; call is associated with the notification.</source>
          <target state="translated">在我们的&lt;a href=&quot;https://github.com/mdn/emogotchi&quot;&gt;Emogotchi演示中&lt;/a&gt;找到的以下代码段（&lt;a href=&quot;http://mdn.github.io/emogotchi/&quot;&gt;实时查看运行情况&lt;/a&gt;）中，我们有一个简单的函数，该函数在调用时会创建一个 &lt;code&gt;options&lt;/code&gt; 对象，然后创建一个新通知。在该函数的末尾，它还会在&lt;a href=&quot;../windoworworkerglobalscope/settimeout&quot;&gt; &lt;code&gt;setTimeout()&lt;/code&gt; &lt;/a&gt;函数内调用 &lt;code&gt;close()&lt;/code&gt; 以在4秒后关闭该通知（某些浏览器会自动关闭生成的通知，而有些浏览器则不会，例如Chrome和Opera。）也请注意使用 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind&quot;&gt;bind()&lt;/a&gt;&lt;/code&gt; 以确保 &lt;code&gt;close()&lt;/code&gt; 调用与通知关联。</target>
        </trans-unit>
        <trans-unit id="06e3dfe446238d616cb4da8087d2c56b3ff2de04" translate="yes" xml:space="preserve">
          <source>In the following snippet, found in our &lt;a href=&quot;https://github.com/mdn/emogotchi&quot;&gt;Emogotchi demo&lt;/a&gt; (&lt;a href=&quot;https://mdn.github.io/emogotchi/&quot;&gt;view it running live&lt;/a&gt;), we have a simple function that when called creates an &lt;code&gt;options&lt;/code&gt; object and then a new notification. At the end of the function, it also calls &lt;code&gt;close()&lt;/code&gt; inside a &lt;a href=&quot;../windoworworkerglobalscope/settimeout&quot;&gt;&lt;code&gt;setTimeout()&lt;/code&gt;&lt;/a&gt; function to close the notification after 4 seconds (some browsers close spawned notifications automatically, and some such as Chrome and Opera do not.) Also note the use of &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind&quot;&gt;bind()&lt;/a&gt;&lt;/code&gt; to make sure the &lt;code&gt;close()&lt;/code&gt; call is associated with the notification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d8c734a5c806c7eafd766294af616d92c5077a4" translate="yes" xml:space="preserve">
          <source>In the following snippet, we aim to download a video using the &lt;a href=&quot;../fetch_api&quot;&gt;Fetch API&lt;/a&gt;.</source>
          <target state="translated">在以下代码段中，我们旨在使用&lt;a href=&quot;../fetch_api&quot;&gt;Fetch API&lt;/a&gt;下载视频。</target>
        </trans-unit>
        <trans-unit id="142af4e4f8156e83cae740b9eac83eea2036a02e" translate="yes" xml:space="preserve">
          <source>In the following snippet, we aim to download a video using the &lt;a href=&quot;fetch_api&quot;&gt;Fetch API&lt;/a&gt;.</source>
          <target state="translated">在以下代码段中，我们旨在使用&lt;a href=&quot;fetch_api&quot;&gt;Fetch API&lt;/a&gt;下载视频。</target>
        </trans-unit>
        <trans-unit id="ec6ac752fbbf3cd68e0661ddea25be5b49e124b7" translate="yes" xml:space="preserve">
          <source>In the following snippet, we create a new &lt;code&gt;AbortController&lt;/code&gt; object, and get its &lt;a href=&quot;../abortsignal&quot;&gt;&lt;code&gt;AbortSignal&lt;/code&gt;&lt;/a&gt; (available in the &lt;code&gt;signal&lt;/code&gt; property). Later on we check whether or not it the signal has been aborted using the &lt;code&gt;aborted&lt;/code&gt; property, and send an appropriate log to the console.</source>
          <target state="translated">在以下代码段中，我们创建一个新的 &lt;code&gt;AbortController&lt;/code&gt; 对象，并获取其&lt;a href=&quot;../abortsignal&quot;&gt; &lt;code&gt;AbortSignal&lt;/code&gt; &lt;/a&gt;（在 &lt;code&gt;signal&lt;/code&gt; 属性中可用）。稍后，我们使用 &lt;code&gt;aborted&lt;/code&gt; 属性检查信号是否已被中止，并将适当的日志发送到控制台。</target>
        </trans-unit>
        <trans-unit id="ea686afe1ee305f352aed33c09e2ec95b6f72277" translate="yes" xml:space="preserve">
          <source>In the following snippet, we create a new &lt;code&gt;AbortController&lt;/code&gt; object, and get its &lt;a href=&quot;../abortsignal&quot;&gt;&lt;code&gt;AbortSignal&lt;/code&gt;&lt;/a&gt; (available in the &lt;code&gt;signal&lt;/code&gt; property). Later on we check whether or not it the signal has been aborted using the &lt;code&gt;onabort&lt;/code&gt; property, and send an appropriate log to the console.</source>
          <target state="translated">在以下代码段中，我们创建一个新的 &lt;code&gt;AbortController&lt;/code&gt; 对象，并获取其&lt;a href=&quot;../abortsignal&quot;&gt; &lt;code&gt;AbortSignal&lt;/code&gt; &lt;/a&gt;（在 &lt;code&gt;signal&lt;/code&gt; 属性中可用）。稍后，我们使用 &lt;code&gt;onabort&lt;/code&gt; 属性检查信号是否已中止，并将适当的日志发送到控制台。</target>
        </trans-unit>
        <trans-unit id="a7d1a678fcd8ff9ee037e00996cd0d0af7fc5746" translate="yes" xml:space="preserve">
          <source>In the following snippet, we create a new header using the &lt;code&gt;Headers()&lt;/code&gt; constructor, add a new header to it using &lt;code&gt;append()&lt;/code&gt;, then return that header value using &lt;code&gt;get()&lt;/code&gt;:</source>
          <target state="translated">在以下代码段中，我们使用 &lt;code&gt;Headers()&lt;/code&gt; 构造函数创建一个新的标头，使用 &lt;code&gt;append()&lt;/code&gt; 向其添加新的标头，然后使用 &lt;code&gt;get()&lt;/code&gt; 返回该标头的值：</target>
        </trans-unit>
        <trans-unit id="0113a15ee50c09fd5ed788dcb4b202cde3015285" translate="yes" xml:space="preserve">
          <source>In the following snippet, we create a new request using the &lt;a href=&quot;request&quot;&gt;&lt;code&gt;Request.Request()&lt;/code&gt;&lt;/a&gt; constructor (for an image file in the same directory as the script), then save the method of the request in a variable:</source>
          <target state="translated">在以下代码段中，我们使用&lt;a href=&quot;request&quot;&gt; &lt;code&gt;Request.Request()&lt;/code&gt; &lt;/a&gt;构造函数创建一个新请求（用于与脚本位于同一目录中的图像文件），然后将请求的方法保​​存在变量中：</target>
        </trans-unit>
        <trans-unit id="047219316e77e34566358106fcfe3d1d2d36a8a4" translate="yes" xml:space="preserve">
          <source>In the following snippet, we create a new request using the &lt;a href=&quot;request&quot;&gt;&lt;code&gt;Request.Request()&lt;/code&gt;&lt;/a&gt; constructor (for an image file in the same directory as the script), then save the request &lt;code&gt;integrity&lt;/code&gt; value in a variable:</source>
          <target state="translated">在以下代码段中，我们使用&lt;a href=&quot;request&quot;&gt; &lt;code&gt;Request.Request()&lt;/code&gt; &lt;/a&gt;构造函数（针对与脚本位于同一目录中的图像文件）创建新请求，然后将请求 &lt;code&gt;integrity&lt;/code&gt; 值保存在变量中：</target>
        </trans-unit>
        <trans-unit id="46ec4b615ea56657916ea54950d286e832c9b90c" translate="yes" xml:space="preserve">
          <source>In the following snippet, we create a new request using the &lt;a href=&quot;request&quot;&gt;&lt;code&gt;Request.Request()&lt;/code&gt;&lt;/a&gt; constructor (for an image file in the same directory as the script), then save the request &lt;code&gt;redirect&lt;/code&gt; value in a variable:</source>
          <target state="translated">在以下代码段中，我们使用&lt;a href=&quot;request&quot;&gt; &lt;code&gt;Request.Request()&lt;/code&gt; &lt;/a&gt;构造函数（针对与脚本位于同一目录中的图像文件）创建新请求，然后将请求 &lt;code&gt;redirect&lt;/code&gt; 值保存在变量中：</target>
        </trans-unit>
        <trans-unit id="5271e44768600db81781e8e63fb680a7e0a11ae4" translate="yes" xml:space="preserve">
          <source>In the following snippet, we create a new request using the &lt;a href=&quot;request&quot;&gt;&lt;code&gt;Request.Request()&lt;/code&gt;&lt;/a&gt; constructor (for an image file in the same directory as the script), then save the request credentials in a variable:</source>
          <target state="translated">在以下代码段中，我们使用&lt;a href=&quot;request&quot;&gt; &lt;code&gt;Request.Request()&lt;/code&gt; &lt;/a&gt;构造函数（针对与脚本位于同一目录中的图像文件）创建新请求，然后将请求凭据保存在变量中：</target>
        </trans-unit>
        <trans-unit id="e497b0a8e103f4b14c38c2c3214304e313b28efe" translate="yes" xml:space="preserve">
          <source>In the following snippet, we create a new request using the &lt;a href=&quot;request&quot;&gt;&lt;code&gt;Request.Request()&lt;/code&gt;&lt;/a&gt; constructor (for an image file in the same directory as the script), then save the request headers in a variable:</source>
          <target state="translated">在以下代码段中，我们使用&lt;a href=&quot;request&quot;&gt; &lt;code&gt;Request.Request()&lt;/code&gt; &lt;/a&gt;构造函数（针对与脚本位于同一目录中的图像文件）创建新请求，然后将请求标头保存在变量中：</target>
        </trans-unit>
        <trans-unit id="b81550d707e6017872865cc14baddebf7ce3d17b" translate="yes" xml:space="preserve">
          <source>In the following snippet, we create a new request using the &lt;a href=&quot;request&quot;&gt;&lt;code&gt;Request.Request()&lt;/code&gt;&lt;/a&gt; constructor (for an image file in the same directory as the script), then save the request mode in a variable:</source>
          <target state="translated">在以下代码段中，我们使用&lt;a href=&quot;request&quot;&gt; &lt;code&gt;Request.Request()&lt;/code&gt; &lt;/a&gt;构造函数（用于与脚本位于同一目录中的图像文件）创建新请求，然后将请求模式保存在变量中：</target>
        </trans-unit>
        <trans-unit id="89a843eb07910b2ff896f7f83b80b2a3442e2c69" translate="yes" xml:space="preserve">
          <source>In the following snippet, we create a new request using the &lt;a href=&quot;request&quot;&gt;&lt;code&gt;Request.Request()&lt;/code&gt;&lt;/a&gt; constructor (for an image file in the same directory as the script), then save the request referrer in a variable:</source>
          <target state="translated">在以下代码段中，我们使用&lt;a href=&quot;request&quot;&gt; &lt;code&gt;Request.Request()&lt;/code&gt; &lt;/a&gt;构造函数（针对与脚本位于同一目录中的图像文件）创建新请求，然后将请求引荐来源保存在变量中：</target>
        </trans-unit>
        <trans-unit id="94dc59db46b69d55a1258db2220fd9408467cd5d" translate="yes" xml:space="preserve">
          <source>In the following snippet, we create a new request using the &lt;a href=&quot;request&quot;&gt;&lt;code&gt;Request.Request()&lt;/code&gt;&lt;/a&gt; constructor (for an image file in the same directory as the script), then save the request referrer policy in a variable:</source>
          <target state="translated">在以下代码段中，我们使用&lt;a href=&quot;request&quot;&gt; &lt;code&gt;Request.Request()&lt;/code&gt; &lt;/a&gt;构造函数（针对与脚本位于同一目录中的图像文件）创建新请求，然后将请求引荐来源网址策略保存在变量中：</target>
        </trans-unit>
        <trans-unit id="cb05d02bfd17a04454879b1e41ac2480db3aa891" translate="yes" xml:space="preserve">
          <source>In the following snippet, we create a new request using the &lt;a href=&quot;request&quot;&gt;&lt;code&gt;Request.Request()&lt;/code&gt;&lt;/a&gt; constructor (for an image file in the same directory as the script), then save the request's destination:</source>
          <target state="translated">在以下代码段中，我们使用&lt;a href=&quot;request&quot;&gt; &lt;code&gt;Request.Request()&lt;/code&gt; &lt;/a&gt;构造函数（针对与脚本位于同一目录中的图像文件）创建新请求，然后保存请求的目的地：</target>
        </trans-unit>
        <trans-unit id="bac1c73ce2c6e044a2258e3a144ec58e0a59af55" translate="yes" xml:space="preserve">
          <source>In the following snippet, we create a new request using the &lt;a href=&quot;request&quot;&gt;&lt;code&gt;Request.Request()&lt;/code&gt;&lt;/a&gt; constructor (for an image file in the same directory as the script), then save the url of the request in a variable:</source>
          <target state="translated">在以下代码段中，我们使用&lt;a href=&quot;request&quot;&gt; &lt;code&gt;Request.Request()&lt;/code&gt; &lt;/a&gt;构造函数创建一个新请求（用于与脚本位于同一目录中的图像文件），然后将请求的URL保存在变量中：</target>
        </trans-unit>
        <trans-unit id="2df97c2abfe2cd3b96a48bed84dcd9b3ae61a78f" translate="yes" xml:space="preserve">
          <source>In the following snippet, we create a new request using the &lt;code&gt;&lt;a href=&quot;request&quot;&gt;&lt;code&gt;Request.Request()&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; constructor (for an image file in the same directory as the script), then clone the request.</source>
          <target state="translated">在以下代码段中，我们使用 &lt;code&gt;&lt;a href=&quot;request&quot;&gt;&lt;code&gt;Request.Request()&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 构造函数（针对与脚本位于同一目录中的图像文件）创建一个新请求，然后克隆该请求。</target>
        </trans-unit>
        <trans-unit id="05be4f8cd3d08c8dd5e9bd42521389487107b774" translate="yes" xml:space="preserve">
          <source>In the following snippet, we create a new request using the &lt;code&gt;Request()&lt;/code&gt; constructor (for an image file in the same directory as the script), then return some property values of the request:</source>
          <target state="translated">在以下代码段中，我们使用 &lt;code&gt;Request()&lt;/code&gt; 构造函数创建一个新请求（用于与脚本位于同一目录中的图像文件），然后返回该请求的一些属性值：</target>
        </trans-unit>
        <trans-unit id="c5a050a87a9317524698c10863ce25e61d3b8f3c" translate="yes" xml:space="preserve">
          <source>In the following snippet, we create a new request using the &lt;code&gt;Request()&lt;/code&gt; constructor with some initial data and body content for an api request which need a body payload:</source>
          <target state="translated">在以下代码段中，我们使用 &lt;code&gt;Request()&lt;/code&gt; 构造函数创建一个新请求，其中包含一些需要主体有效负载的api请求的初始数据和主体内容：</target>
        </trans-unit>
        <trans-unit id="9db0b32bd283d4e2b68536621d346008c46ee4ae" translate="yes" xml:space="preserve">
          <source>In the future, if neither &lt;code&gt;audioCapabilities&lt;/code&gt; nor &lt;code&gt;videoCapabilities&lt;/code&gt; is specified in the &lt;code&gt;supportedConfigurations&lt;/code&gt;, a &lt;code&gt;NotSupported&lt;/code&gt; exception will be thrown.</source>
          <target state="translated">在未来，如果没有 &lt;code&gt;audioCapabilities&lt;/code&gt; 也不 &lt;code&gt;videoCapabilities&lt;/code&gt; 在指定 &lt;code&gt;supportedConfigurations&lt;/code&gt; ，一个 &lt;code&gt;NotSupported&lt;/code&gt; 会抛出异常。</target>
        </trans-unit>
        <trans-unit id="7e51f1e5e05401da9b84fce6191bdd16901080f3" translate="yes" xml:space="preserve">
          <source>In the future, service workers will be able to do a number of other useful things for the web platform that will bring it closer towards native app viability. Interestingly, other specifications can and will start to make use of the service worker context, for example:</source>
          <target state="translated">在未来,服务工作者将能够为网络平台做一些其他有用的事情,使其更接近原生应用的可行性。有趣的是,其他规范可以而且将开始利用服务工作者上下文,例如。</target>
        </trans-unit>
        <trans-unit id="f50f83c09ccffe7e16fac729e5c41ab3340af1e3" translate="yes" xml:space="preserve">
          <source>In the general case, however, it's safe to simply think of this as the bounds rectangle of the target element.</source>
          <target state="translated">然而,在一般情况下,可以简单地将其视为目标元素的边界矩形。</target>
        </trans-unit>
        <trans-unit id="166e236e27479f3359db19347c47ab1e24e726ea" translate="yes" xml:space="preserve">
          <source>In the image below, the red outline represents a clipping region shaped like a star. Only those parts of the checkerboard pattern that are within the clipping region get drawn.</source>
          <target state="translated">在下图中,红色的轮廓代表一个形状像星星的剪裁区域。只有在剪裁区域内的棋盘图案部分才会被绘制。</target>
        </trans-unit>
        <trans-unit id="d70633f113da8640ad30f56a1fbd952af0f8b1d7" translate="yes" xml:space="preserve">
          <source>In the last chapter we made some &lt;a href=&quot;basic_animations&quot;&gt;basic animations&lt;/a&gt; and got to know ways to get things moving. In this part we will have a closer look at the motion itself and are going to add some physics to make our animations more advanced.</source>
          <target state="translated">在上一章中，我们制作了一些&lt;a href=&quot;basic_animations&quot;&gt;基本的动画，&lt;/a&gt;并了解了使事情动起来的方法。在这一部分中，我们将仔细研究运动本身，并将添加一些物理方法以使动画更高级。</target>
        </trans-unit>
        <trans-unit id="80221b0d9d8d53e433ca3a37f0d52488ebb331c6" translate="yes" xml:space="preserve">
          <source>In the latest version of the box demo the &lt;code&gt;computeSimpleProjectionMatrix()&lt;/code&gt; method has been replaced with the &lt;code&gt;computePerspectiveMatrix()&lt;/code&gt; method.</source>
          <target state="translated">在最新版本的盒装演示中， &lt;code&gt;computeSimpleProjectionMatrix()&lt;/code&gt; 方法已替换为 &lt;code&gt;computePerspectiveMatrix()&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="aca7779931f5cbdb5fc3ba8626ff7f5e34f21e93" translate="yes" xml:space="preserve">
          <source>In the main page of the demo, we have a simple form with a text input for entering messages to be sent to an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe&quot;&gt;&lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt;&lt;/a&gt;. We also have a paragraph which we will use later on to display confirmation messages that we will receive back from the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe&quot;&gt;&lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在演示的主页上，我们有一个简单的表单，带有文本输入，用于输入要发送到&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe&quot;&gt; &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; 的消息&lt;/a&gt;。我们还有一个段落，稍后将使用它显示从&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe&quot;&gt; &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; &lt;/a&gt;返回的确认消息。</target>
        </trans-unit>
        <trans-unit id="a52efceb8351056ff1daf867ac5e1b4160814385" translate="yes" xml:space="preserve">
          <source>In the main script, &lt;code&gt;onmessage&lt;/code&gt; would have to be called on a &lt;code&gt;Worker object&lt;/code&gt;, whereas inside the worker script you just need &lt;code&gt;onmessage&lt;/code&gt; because the worker is effectively the global scope (&lt;a href=&quot;../dedicatedworkerglobalscope&quot;&gt;&lt;code&gt;DedicatedWorkerGlobalScope&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">在主脚本中，必须在 &lt;code&gt;Worker object&lt;/code&gt; 上调用 &lt;code&gt;onmessage&lt;/code&gt; ，而在worker脚本中，您只需要 &lt;code&gt;onmessage&lt;/code&gt; ,因为worker实际上是全局范围（&lt;a href=&quot;../dedicatedworkerglobalscope&quot;&gt; &lt;code&gt;DedicatedWorkerGlobalScope&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="1b552ae71a5217f0ad239529ae236a44c5cd6279" translate="yes" xml:space="preserve">
          <source>In the main window, when it's time to open the panels, code like the following is used.</source>
          <target state="translated">在主窗口中,当需要打开面板的时候,会用到下面这样的代码。</target>
        </trans-unit>
        <trans-unit id="2caed150184b39aaa18dc62af2691d1ffc3fcbcd" translate="yes" xml:space="preserve">
          <source>In the next section we'll take this step of copying Z into the w slot and turn it into a matrix.</source>
          <target state="translated">在下一节中,我们将采取将Z复制到w槽中的这一步,并将其变成一个矩阵。</target>
        </trans-unit>
        <trans-unit id="a865ee829a3275fb2e2d62b456bffac6a8f483ca" translate="yes" xml:space="preserve">
          <source>In the original, we only passed in a URL to an image we wanted to load. In this version, we pass in a JSON fragment containing all the data for a single image (see what they look like in &lt;a href=&quot;https://github.com/mdn/sw-test/blob/gh-pages/image-list.js&quot;&gt;image-list.js&lt;/a&gt;). This is because all the data for each promise resolve has to be passed in with the promise, as it is asynchronous. If you just passed in the url, and then tried to access the other items in the JSON separately when the &lt;code&gt;for()&lt;/code&gt; loop is being iterated through later on, it wouldn&amp;rsquo;t work, as the promise wouldn&amp;rsquo;t resolve at the same time as the iterations are being done (that is a synchronous process.)</source>
          <target state="translated">在原始文件中，我们仅将URL传递给我们要加载的图像。在此版本中，我们传入一个JSON片段，其中包含单个图像的所有数据（请在&lt;a href=&quot;https://github.com/mdn/sw-test/blob/gh-pages/image-list.js&quot;&gt;image-list.js中&lt;/a&gt;查看它们的外观）。这是因为每个承诺解析的所有数据都必须与承诺一起传递，因为它是异步的。如果您只是传入了url，然后在稍后迭代 &lt;code&gt;for()&lt;/code&gt; 循环时尝试分别访问JSON中的其他项目，则它将无法正常工作，因为Promise无法同时解析随着迭代的完成（这是一个同步过程）。</target>
        </trans-unit>
        <trans-unit id="7ca9e228ce8cdc14458ead88cc18d84b81932129" translate="yes" xml:space="preserve">
          <source>In the past the &lt;a href=&quot;../request/url&quot;&gt;&lt;code&gt;FetchEvent.request.url&lt;/code&gt;&lt;/a&gt; was used as the final URL in all cases. The provided &lt;a href=&quot;../response/url&quot;&gt;&lt;code&gt;Response.url&lt;/code&gt;&lt;/a&gt; was effectively ignored.</source>
          <target state="translated">过去，在所有情况下，&lt;a href=&quot;../request/url&quot;&gt; &lt;code&gt;FetchEvent.request.url&lt;/code&gt; &lt;/a&gt;都用作最终URL。提供的&lt;a href=&quot;../response/url&quot;&gt; &lt;code&gt;Response.url&lt;/code&gt; &lt;/a&gt;实际上已被忽略。</target>
        </trans-unit>
        <trans-unit id="2afef193946887224bf55fa913f26ccd4e5fc44a" translate="yes" xml:space="preserve">
          <source>In the past we would resolve the relative URL against the current global, for example:</source>
          <target state="translated">过去我们会针对当前的全局来解析相对的URL,例如。</target>
        </trans-unit>
        <trans-unit id="efb794add570268a52fda49abf02c1b035d242cb" translate="yes" xml:space="preserve">
          <source>In the past, when you called the &lt;code&gt;window&lt;/code&gt; object's &lt;code&gt;close()&lt;/code&gt; method directly, rather than calling &lt;code&gt;close()&lt;/code&gt; on a &lt;code&gt;window&lt;/code&gt;&lt;strong&gt;instance&lt;/strong&gt;, the browser closed the frontmost window, whether your script created that window or not. This is no longer the case; for security reasons, scripts are no longer allowed to close windows they didn't open. (Firefox 46.0.1: scripts can not close windows, they had not opened)</source>
          <target state="translated">过去，当您直接调用 &lt;code&gt;window&lt;/code&gt; 对象的 &lt;code&gt;close()&lt;/code&gt; 方法而不是在 &lt;code&gt;window&lt;/code&gt; &lt;strong&gt;实例&lt;/strong&gt;上调用 &lt;code&gt;close()&lt;/code&gt; 时，浏览器会关闭最前面的窗口，无论您的脚本是否创建了该窗口。这已不再是这种情况; 出于安全原因，不再允许脚本关闭未打开的窗口。（Firefox 46.0.1：脚本无法关闭窗口，它们尚未打开）&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2b6cc36a3ecf8cc588fba453375e70e27575f7a4" translate="yes" xml:space="preserve">
          <source>In the previous example, &lt;code&gt;sp1&lt;/code&gt; could be inserted after &lt;code&gt;sp2&lt;/code&gt; using:</source>
          <target state="translated">在前面的示例中，可以使用以下命令在 &lt;code&gt;sp2&lt;/code&gt; 之后插入 &lt;code&gt;sp1&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="f1770efa08cde8987ce6c2d74d34f1b92eb66dca" translate="yes" xml:space="preserve">
          <source>In the second case, the event listeners only propagate as far as the &lt;code&gt;&amp;lt;closed-shadow&amp;gt;&lt;/code&gt; element itself, but not to the nodes inside the shadow boundary.</source>
          <target state="translated">在第二种情况下，事件侦听器仅传播到 &lt;code&gt;&amp;lt;closed-shadow&amp;gt;&lt;/code&gt; 元素本身，而不传播到阴影边界内的节点。</target>
        </trans-unit>
        <trans-unit id="6d34b828fa7e048616d1778e2b694e7b26f1d8fe" translate="yes" xml:space="preserve">
          <source>In the second code block, we wait for a &lt;a href=&quot;fetchevent&quot;&gt;&lt;code&gt;FetchEvent&lt;/code&gt;&lt;/a&gt; to fire. We construct a custom response like so:</source>
          <target state="translated">在第二个代码块中，我们等待&lt;a href=&quot;fetchevent&quot;&gt; &lt;code&gt;FetchEvent&lt;/code&gt; &lt;/a&gt;触发。我们构造一个自定义响应，如下所示：</target>
        </trans-unit>
        <trans-unit id="9b53a7e8e7ffacee8a73ee954e83ca19d9ff6544" translate="yes" xml:space="preserve">
          <source>In the second gradient, we didn't assign the starting color (at position 0.0) since it wasn't strictly necessary, because it will automatically assume the color of the next color stop. Therefore, assigning the black color at position 0.5 automatically makes the gradient, from the start to this stop, black.</source>
          <target state="translated">在第二个渐变中,我们没有指定起始颜色(在0.0位置),因为这不是严格意义上的必要,因为它将自动采用下一个颜色停止点的颜色。因此,在位置0.5处指定黑色,会自动使从开始到这一站的渐变为黑色。</target>
        </trans-unit>
        <trans-unit id="b2445149813d9ee0b54a74efc28c3220ce79ac4a" translate="yes" xml:space="preserve">
          <source>In the second syntax-form however, there is no &lt;code&gt;oldChild&lt;/code&gt; reference kept, so assuming your code has not kept any other reference to the node elsewhere, it will immediately become unusable and irretrievable, and will usually be &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Memory_Management&quot;&gt;automatically deleted&lt;/a&gt; from memory after a short time.</source>
          <target state="translated">但是，在第二种语法形式中，没有保留 &lt;code&gt;oldChild&lt;/code&gt; 引用，因此，假设您的代码未在其他位置保留对节点的任何其他引用，它将立即变得无法使用和不可检索，并且通常会在短时间后&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Memory_Management&quot;&gt;自动&lt;/a&gt;从内存中删除。</target>
        </trans-unit>
        <trans-unit id="0529bf6c0eb26ec1762e946292358a808cf01177" translate="yes" xml:space="preserve">
          <source>In the shader each position vertex is first transformed into a homogeneous coordinate (vec4), and then multiplied against the model matrix.</source>
          <target state="translated">在着色器中,每个位置顶点首先被转化为一个均匀坐标(vec4),然后与模型矩阵相乘。</target>
        </trans-unit>
        <trans-unit id="fe789ec50d5a4e802e089b2d79bf7730f6c4653a" translate="yes" xml:space="preserve">
          <source>In the worker thread, workers may close themselves by calling their own &lt;a href=&quot;../workerglobalscope&quot;&gt;&lt;code&gt;close&lt;/code&gt;&lt;/a&gt; method:</source>
          <target state="translated">在worker线程中，worker可以通过调用自己的&lt;a href=&quot;../workerglobalscope&quot;&gt; &lt;code&gt;close&lt;/code&gt; &lt;/a&gt;方法来关闭自己：</target>
        </trans-unit>
        <trans-unit id="747faaac8adbae729530d9fafd2e204101332993" translate="yes" xml:space="preserve">
          <source>In the worker, we can respond when the message is received by writing an event handler block like this (&lt;a href=&quot;https://github.com/mdn/simple-web-worker/blob/gh-pages/worker.js&quot;&gt;worker.js&lt;/a&gt;):</source>
          <target state="translated">在worker中，我们可以通过编写这样的事件处理程序块（&lt;a href=&quot;https://github.com/mdn/simple-web-worker/blob/gh-pages/worker.js&quot;&gt;worker.js&lt;/a&gt;）来响应收到消息时的响应：</target>
        </trans-unit>
        <trans-unit id="27ee606f5a7096b9af4937eaa2543bd000f624c9" translate="yes" xml:space="preserve">
          <source>In their most basic forms, both create() and get() receive a very large random number called a challenge from the server and they return the challenge signed by the private key back to the server. This proves to the server that a user is in possession of the private key required for authentication without revealing any secrets over the network.</source>
          <target state="translated">在最基本的形式中,create()和get()都会从服务器上接收一个非常大的随机数,称为挑战,然后它们将由私钥签名的挑战返回给服务器。这就向服务器证明了用户拥有认证所需的私钥,而不会在网络上泄露任何秘密。</target>
        </trans-unit>
        <trans-unit id="4df9571818d6d981dd291e20430935363e55c7e1" translate="yes" xml:space="preserve">
          <source>In these cases, a recursive &lt;code&gt;setTimeout()&lt;/code&gt; pattern is preferred:</source>
          <target state="translated">在这些情况下，最好使用递归 &lt;code&gt;setTimeout()&lt;/code&gt; 模式：</target>
        </trans-unit>
        <trans-unit id="e039aad2c0155f950651a6dba4c3ff8927bffa24" translate="yes" xml:space="preserve">
          <source>In these environments, unfortunately, there's no way for web content to tell the difference between auto-repeating keys and keys that are just being pressed repeatedly.</source>
          <target state="translated">不幸的是,在这些环境中,网络内容没有办法区分自动重复的键和只是被反复按下的键。</target>
        </trans-unit>
        <trans-unit id="5b1b648527abedf64cd55d6727a0c77588c433e6" translate="yes" xml:space="preserve">
          <source>In these reference articles, you'll find the fundamental information you'll need to know about each of the interfaces and events that make up the Media Capture and Streams API.</source>
          <target state="translated">在这些参考文章中,您将找到您需要了解的关于构成媒体捕获和流API的每个接口和事件的基本信息。</target>
        </trans-unit>
        <trans-unit id="e918402b5cbdf8a6c4b40b28955c38a6e57c2da7" translate="yes" xml:space="preserve">
          <source>In this WebGL example, we create a canvas and within it render a rotating square using WebGL. The coordinate system we use to represent our scene is the same as the canvas's coordinate system. That is, (0, 0) is at the top-left corner and the bottom-right corner is at (600, 460).</source>
          <target state="translated">在这个 WebGL 示例中,我们创建了一个画布,并在画布中使用 WebGL 渲染一个旋转的正方形。我们用来表示场景的坐标系与画布的坐标系相同。也就是说,(0,0)位于左上角,右下角位于(600,460)。</target>
        </trans-unit>
        <trans-unit id="d6c5f2cb2ab21a4fb634fdc399fb6ca277e9b128" translate="yes" xml:space="preserve">
          <source>In this application, a pointer move is represented by the target's border being set to &lt;code&gt;dashed&lt;/code&gt; to provide a clear visual indication that the element has received this event.</source>
          <target state="translated">在此应用程序中，指针移动通过将目标的边框设置为 &lt;code&gt;dashed&lt;/code&gt; 来表示，以提供清晰的视觉指示，表明元素已接收到此事件。</target>
        </trans-unit>
        <trans-unit id="d98f37ad364ba5fdee4fa5e8cf09ef457d4aa33f" translate="yes" xml:space="preserve">
          <source>In this application, this handler is also used for &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/pointercancel&quot;&gt;pointercancel&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/pointerleave&quot;&gt;pointerleave&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/pointerout&quot;&gt;pointerout&lt;/a&gt;&lt;/code&gt; events.</source>
          <target state="translated">在此应用程序中，此处理程序还用于 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/pointercancel&quot;&gt;pointercancel&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/pointerleave&quot;&gt;pointerleave&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/pointerout&quot;&gt;pointerout&lt;/a&gt;&lt;/code&gt; 事件。</target>
        </trans-unit>
        <trans-unit id="d6a8ded075cda7fc6015e230452248e4bbb967c9" translate="yes" xml:space="preserve">
          <source>In this application, when a pointer is placed down on an element, the background color of the element changes, depending on the number of active touch points the element has. See the &lt;code&gt;&lt;a href=&quot;#Update_background_color&quot;&gt;update_background&lt;/a&gt;&lt;/code&gt; function for more details about the color changes.</source>
          <target state="translated">在此应用程序中，当将指针放到元素上时，元素的背景颜色会根据元素具有的活动接触点的数量而变化。有关颜色更改的更多详细信息，请参见 &lt;code&gt;&lt;a href=&quot;#Update_background_color&quot;&gt;update_background&lt;/a&gt;&lt;/code&gt; 函数。</target>
        </trans-unit>
        <trans-unit id="4370ea5ea1c8d368335f2e8e67a642d611fb0861" translate="yes" xml:space="preserve">
          <source>In this article is published a library of ours whose aims are:</source>
          <target state="translated">在这篇文章中公布了我们的一个图书馆,其目的是:</target>
        </trans-unit>
        <trans-unit id="b041da60b635adafbe970738766e44924736c766" translate="yes" xml:space="preserve">
          <source>In this article we'll explore the basics of using this technology.</source>
          <target state="translated">在这篇文章中,我们将探讨使用这项技术的基础知识。</target>
        </trans-unit>
        <trans-unit id="1fba83f0d7f521e3a9c91ddf9e8cef09aa7106fe" translate="yes" xml:space="preserve">
          <source>In this article, we will further enhance the &lt;a href=&quot;https://mdn-samples.mozilla.org/s/websocket-chat&quot;&gt;WebSocket chat&lt;/a&gt; first created as part of our WebSocket documentation (this article link is forthcoming; it isn't actually online yet) to support opening a two-way video call between users. You can &lt;a href=&quot;https://webrtc-from-chat.glitch.me/&quot;&gt;try out this example on Glitch&lt;/a&gt;, and you can &lt;a href=&quot;https://glitch.com/edit/#!/remix/webrtc-from-chat&quot;&gt;remix the example&lt;/a&gt; to experiment with it as well. You can also &lt;a href=&quot;https://github.com/mdn/samples-server/tree/master/s/webrtc-from-chat&quot;&gt;look at the full project&lt;/a&gt; on GitHub.</source>
          <target state="translated">在本文中，我们将进一步增强在&lt;a href=&quot;https://mdn-samples.mozilla.org/s/websocket-chat&quot;&gt;WebSocket&lt;/a&gt;文档中首次创建的WebSocket聊天功能（本文链接即将发布；它实际上尚未在线），以支持在用户之间打开双向视频通话。您可以&lt;a href=&quot;https://webrtc-from-chat.glitch.me/&quot;&gt;在Glitch上尝试该示例&lt;/a&gt;，也可以&lt;a href=&quot;https://glitch.com/edit/#!/remix/webrtc-from-chat&quot;&gt;重新混合示例&lt;/a&gt;以进行试验。您还可以在GitHub上&lt;a href=&quot;https://github.com/mdn/samples-server/tree/master/s/webrtc-from-chat&quot;&gt;查看整个项目&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d1b40ede08c4f8be0f417f21def083ee10592797" translate="yes" xml:space="preserve">
          <source>In this basic example, an &lt;code&gt;EventSource&lt;/code&gt; is created to receive events from the server; a page with the name &lt;code&gt;&quot;sse.php&quot;&lt;/code&gt; is responsible for generating the events.</source>
          <target state="translated">在这个基本示例中，创建了一个 &lt;code&gt;EventSource&lt;/code&gt; 来接收来自服务器的事件；名称为 &lt;code&gt;&quot;sse.php&quot;&lt;/code&gt; 的页面负责生成事件。</target>
        </trans-unit>
        <trans-unit id="6a7d6c348e32849c67816ae957749276867dc54b" translate="yes" xml:space="preserve">
          <source>In this basic example, the first element in the &lt;a href=&quot;../documentfragment&quot;&gt;&lt;code&gt;DocumentFragment&lt;/code&gt;&lt;/a&gt; with the class &quot;&lt;code&gt;myclass&lt;/code&gt;&quot; is returned:</source>
          <target state="translated">在此基本示例中，返回&lt;a href=&quot;../documentfragment&quot;&gt; &lt;code&gt;DocumentFragment&lt;/code&gt; 中&lt;/a&gt;具有类&amp;ldquo; &lt;code&gt;myclass&lt;/code&gt; &amp;rdquo; 的第一个元素：</target>
        </trans-unit>
        <trans-unit id="361df78b941d4fd8a47090d14f97a69c047a8d77" translate="yes" xml:space="preserve">
          <source>In this case, every image has a fixed width and height, as does the frame that's drawn around them. You could enhance the script so that it uses the image's width and height to make the frame fit perfectly around it.</source>
          <target state="translated">在这种情况下,每张图片都有一个固定的宽度和高度,在它们周围绘制的框架也是如此。你可以增强脚本,使它使用图像的宽度和高度来使框架完美地围绕着它。</target>
        </trans-unit>
        <trans-unit id="276ffafaadc51c838b49947876ba4aad8b0bd36a" translate="yes" xml:space="preserve">
          <source>In this case, the constraints indicate that any values are fine for nearly all properties, but that a standard high definition (HD) video size is desired, with the standard 16:9 aspect ratio. There's no guarantee that the resulting track will match any of these, but the user agent should do its best to match as many as possible.</source>
          <target state="translated">在这种情况下,约束条件表明,几乎所有属性的任何值都可以,但需要标准的高清晰度(HD)视频尺寸,标准的16:9宽高比。不能保证所产生的轨道会匹配其中的任何一个,但用户代理应该尽最大努力匹配尽可能多的轨道。</target>
        </trans-unit>
        <trans-unit id="031f4c135971e59b7fae739ab01bab44a4cc4c16" translate="yes" xml:space="preserve">
          <source>In this case, the data value is &quot;Text to drag&quot; and is of the format &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/DragDrop/Recommended_Drag_Types#text&quot;&gt;text/plain&lt;/a&gt;.</source>
          <target state="translated">在这种情况下，数据值为&amp;ldquo;要拖动的文本&amp;rdquo;，格式为&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/DragDrop/Recommended_Drag_Types#text&quot;&gt;text / plain&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4cad29bf51cb46269d006567b6429c9032b4f4f8" translate="yes" xml:space="preserve">
          <source>In this case, the database will already have the object stores from the previous version of the database, so you do not have to create these object stores again. You only need to create any new object stores, or delete object stores from the previous version that are no longer needed. If you need to change an existing object store (e.g., to change the &lt;code&gt;keyPath&lt;/code&gt;), then you must delete the old object store and create it again with the new options. (Note that this will delete the information in the object store! If you need to save that information, you should read it out and save it somewhere else before upgrading the database.)</source>
          <target state="translated">在这种情况下，数据库将已经具有数据库先前版本的对象库，因此您不必再次创建这些对象库。您只需要创建任何新的对象库，或从不再需要的先前版本中删除对象库。如果需要更改现有的对象存储库（例如，更改 &lt;code&gt;keyPath&lt;/code&gt; ），则必须删除旧的对象存储库并使用新选项再次创建它。（请注意，这将删除对象存储中的信息！如果需要保存该信息，则应在升级数据库之前将其读出并保存在其他位置。）</target>
        </trans-unit>
        <trans-unit id="57eec1ad1f4b038a24465f660119efe22c851150" translate="yes" xml:space="preserve">
          <source>In this case, the file list passed to the &lt;code&gt;handleFiles()&lt;/code&gt; function contains one &lt;a href=&quot;../file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; object for each file the user selected.</source>
          <target state="translated">在这种情况下，传递给 &lt;code&gt;handleFiles()&lt;/code&gt; 函数的文件列表为用户选择的每个文件包含一个&lt;a href=&quot;../file&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="f699d83d33360e670c86e02d2f0b476f5ea229fa" translate="yes" xml:space="preserve">
          <source>In this case, we're simply returning white every time, since we're just drawing a white square, with no lighting in use.</source>
          <target state="translated">在这种情况下,我们只是每次都返回白色,因为我们只是画了一个白色的方块,没有使用照明。</target>
        </trans-unit>
        <trans-unit id="a4d2e2bb48a9b84c4673956d3f1c7f44d996cb8b" translate="yes" xml:space="preserve">
          <source>In this case, we've offset the starting point slightly from the end point to achieve a spherical 3D effect. It's best to try to avoid letting the inside and outside circles overlap because this results in strange effects which are hard to predict.</source>
          <target state="translated">在这种情况下,我们将起点与终点略微偏移,以达到球面3D效果。最好尽量避免让内圈和外圈重叠,因为这样会造成难以预测的奇怪效果。</target>
        </trans-unit>
        <trans-unit id="18cbfec0be83d5c96de48b42542e47b7ad14af8c" translate="yes" xml:space="preserve">
          <source>In this code snippet we wait for an &lt;a href=&quot;../serviceworkerglobalscope/onactivate&quot;&gt;&lt;code&gt;activate&lt;/code&gt;&lt;/a&gt; event, and then run a &lt;a href=&quot;../extendableevent/waituntil&quot;&gt;&lt;code&gt;waitUntil()&lt;/code&gt;&lt;/a&gt; block that clears up any old, unused caches before a new service worker is activated. Here we have a whitelist containing the names of the caches we want to keep. We return the keys of the caches in the &lt;a href=&quot;../cachestorage&quot;&gt;&lt;code&gt;CacheStorage&lt;/code&gt;&lt;/a&gt; object using &lt;code&gt;keys()&lt;/code&gt;, then check each key to see if it is in the whitelist. If not, we delete it using &lt;a href=&quot;delete&quot;&gt;&lt;code&gt;CacheStorage.delete&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在此代码段中，我们等待一个&lt;a href=&quot;../serviceworkerglobalscope/onactivate&quot;&gt; &lt;code&gt;activate&lt;/code&gt; &lt;/a&gt;事件，然后运行一个&lt;a href=&quot;../extendableevent/waituntil&quot;&gt; &lt;code&gt;waitUntil()&lt;/code&gt; &lt;/a&gt;块，以在激活新服务工作程序之前清除所有旧的未使用的缓存。在这里，我们有一个白名单，其中包含我们要保留的缓存的名称。我们使用 &lt;code&gt;keys()&lt;/code&gt; 返回&lt;a href=&quot;../cachestorage&quot;&gt; &lt;code&gt;CacheStorage&lt;/code&gt; &lt;/a&gt;对象中缓存的键，然后检查每个键是否在白名单中。如果没有，我们使用&lt;a href=&quot;delete&quot;&gt; &lt;code&gt;CacheStorage.delete&lt;/code&gt; &lt;/a&gt;删除它。</target>
        </trans-unit>
        <trans-unit id="f7b237c5b5122f635999f0f232a6e34ae7685ddc" translate="yes" xml:space="preserve">
          <source>In this code snippet we wait for an activate event, and then run a &lt;a href=&quot;../extendableevent/waituntil&quot;&gt;&lt;code&gt;waitUntil()&lt;/code&gt;&lt;/a&gt; block that clears up any old, unused caches before a new service worker is activated. Here we have a whitelist containing the name of the cache we want to keep. We return the keys of the caches in the &lt;a href=&quot;../cachestorage&quot;&gt;&lt;code&gt;CacheStorage&lt;/code&gt;&lt;/a&gt; object using &lt;a href=&quot;keys&quot;&gt;&lt;code&gt;CacheStorage.keys&lt;/code&gt;&lt;/a&gt;, then check each key to see if it is in the whitelist. If not, we delete it using &lt;code&gt;delete()&lt;/code&gt;.</source>
          <target state="translated">在此代码段中，我们等待一个激活事件，然后运行一个&lt;a href=&quot;../extendableevent/waituntil&quot;&gt; &lt;code&gt;waitUntil()&lt;/code&gt; &lt;/a&gt;块，以在激活新服务工作程序之前清除所有旧的未使用的缓存。在这里，我们有一个白名单，其中包含我们要保留的缓存的名称。我们使用&lt;a href=&quot;keys&quot;&gt; &lt;code&gt;CacheStorage.keys&lt;/code&gt; &lt;/a&gt;返回&lt;a href=&quot;../cachestorage&quot;&gt; &lt;code&gt;CacheStorage&lt;/code&gt; &lt;/a&gt;对象中缓存的键，然后检查每个键是否在白名单中。如果没有，我们使用 &lt;code&gt;delete()&lt;/code&gt; 删除它。</target>
        </trans-unit>
        <trans-unit id="729125e1bb8d7b3b127e10d27b0d336716742c36" translate="yes" xml:space="preserve">
          <source>In this code snippet, &lt;code&gt;enumerateDevices()&lt;/code&gt; is used to examine the available input devices, locate those which are audio input devices, and create &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/option&quot;&gt;&lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt;&lt;/a&gt; elements that are then added to a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select&quot;&gt;&lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt;&lt;/a&gt; element representing an input source picker.</source>
          <target state="translated">在此代码段中， &lt;code&gt;enumerateDevices()&lt;/code&gt; 用于检查可用的输入设备，找到那些是音频输入设备的设备，并创建&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/option&quot;&gt; &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; &lt;/a&gt;元素，然后将这些元素添加到表示输入源选择器的&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select&quot;&gt; &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; &lt;/a&gt;元素中。</target>
        </trans-unit>
        <trans-unit id="50899138f59205c98ab66e512d5085dc24e9011d" translate="yes" xml:space="preserve">
          <source>In this code, &lt;code&gt;modifyText()&lt;/code&gt; is a listener for &lt;code&gt;click&lt;/code&gt; events registered using &lt;code&gt;addEventListener()&lt;/code&gt;. A click anywhere in the table bubbles up to the handler and runs &lt;code&gt;modifyText()&lt;/code&gt;.</source>
          <target state="translated">在此代码中， &lt;code&gt;modifyText()&lt;/code&gt; 是使用 &lt;code&gt;addEventListener()&lt;/code&gt; 注册的 &lt;code&gt;click&lt;/code&gt; 事件的侦听器。在表中的任何位置单击都会冒出到处理程序，并运行 &lt;code&gt;modifyText()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="70c16c5e0a79aa8b20c0ac21843dfc5a0f4947c7" translate="yes" xml:space="preserve">
          <source>In this code, the methods &lt;code&gt;checkAddress()&lt;/code&gt; and &lt;code&gt;checkShipping()&lt;/code&gt;, respectively, check the shipping address and the shipping option changes and supply in response either a &lt;a href=&quot;../paymentdetailsupdate&quot;&gt;&lt;code&gt;PaymentDetailsUpdate&lt;/code&gt;&lt;/a&gt; object or a promise to return one; this object contains the fields in the &lt;a href=&quot;../paymentresponse&quot;&gt;&lt;code&gt;PaymentResponse&lt;/code&gt;&lt;/a&gt; which have been or need to be changed.</source>
          <target state="translated">在这段代码中，方法 &lt;code&gt;checkAddress()&lt;/code&gt; 和 &lt;code&gt;checkShipping()&lt;/code&gt; 分别检查送货地址和送货选项的变化，并根据&lt;a href=&quot;../paymentdetailsupdate&quot;&gt; &lt;code&gt;PaymentDetailsUpdate&lt;/code&gt; &lt;/a&gt;对象或承诺返回一个对象来提供；该对象包含&lt;a href=&quot;../paymentresponse&quot;&gt; &lt;code&gt;PaymentResponse&lt;/code&gt; &lt;/a&gt;中已更改或需要更改的字段。</target>
        </trans-unit>
        <trans-unit id="0154f1006d012823f6a39fe62981f3a8df912997" translate="yes" xml:space="preserve">
          <source>In this code, the offer is created, and once successful, the local end of the &lt;a href=&quot;../rtcpeerconnection&quot;&gt;&lt;code&gt;RTCPeerConnection&lt;/code&gt;&lt;/a&gt; is configured to match by passing the offer (which is represented using an object conforming to &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/RTCSessionDescriptionInit&quot;&gt;&lt;code&gt;RTCSessionDescriptionInit&lt;/code&gt;&lt;/a&gt;) into &lt;a href=&quot;setlocaldescription&quot;&gt;&lt;code&gt;setLocalDescription()&lt;/code&gt;&lt;/a&gt;. Once that's done, the offer is sent to the remote system over the signaling channel; in this case, by using a custom function called &lt;code&gt;sendToServer()&lt;/code&gt;. The implementation of the signaling server is independent from the WebRTC specification, so it doesn't matter how the offer is sent as long as both the caller and potential receiver are using the same one.</source>
          <target state="translated">在该代码中，提供被创建，并且一旦成功，则本端&lt;a href=&quot;../rtcpeerconnection&quot;&gt; &lt;code&gt;RTCPeerConnection&lt;/code&gt; &lt;/a&gt;通过使优惠（这是使用符合对象表示被配置为匹配&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/RTCSessionDescriptionInit&quot;&gt; &lt;code&gt;RTCSessionDescriptionInit&lt;/code&gt; &lt;/a&gt;成）&lt;a href=&quot;setlocaldescription&quot;&gt; &lt;code&gt;setLocalDescription()&lt;/code&gt; &lt;/a&gt;。完成后，要约将通过信令通道发送到远程系统。在这种情况下，使用名为 &lt;code&gt;sendToServer()&lt;/code&gt; 的自定义函数。信令服务器的实现独立于WebRTC规范，因此，只要呼叫方和潜在接收方都使用相同的报价，如何发送报价都无关紧要。</target>
        </trans-unit>
        <trans-unit id="acf716c5032dda34dd3bfdc3edd8d240f757ee38" translate="yes" xml:space="preserve">
          <source>In this demonstration, we build upon the previous example by replacing our static textures with the frames of an mp4 video file that's playing. This is actually pretty easy to do and fun to watch, so let's get started. You can use similar code to use any sort of data (such as a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt;&lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt;&lt;/a&gt;) as the source for your textures.</source>
          <target state="translated">在本演示中，我们以之前的示例为基础，将静态纹理替换为正在播放的mp4视频文件的帧。实际上，这很容易做到，而且观看起来很有趣，所以让我们开始吧。您可以使用类似的代码来使用任何类型的数据（例如&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt; &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; &lt;/a&gt;）作为纹理的源。</target>
        </trans-unit>
        <trans-unit id="512ac688aaef338832699370e37eefcc02030cf3" translate="yes" xml:space="preserve">
          <source>In this document, we&amp;rsquo;ll talk about the ethical use of web push notifications. Sometimes they can eliminate frustration and annoyance, and sometimes they can cause them, and it&amp;rsquo;s up to you as a developer to make wise recommendations (and decisions) about the use of push notifications.</source>
          <target state="translated">在本文档中，我们将讨论Web推送通知的道德用法。有时它们可​​以消除沮丧和烦恼，有时它们可​​以导致它们，并且作为开发人员，您应就使用推送通知提出明智的建议（和决策）。</target>
        </trans-unit>
        <trans-unit id="31734cebb1978c995b4bd29bc19331fec01dfba4" translate="yes" xml:space="preserve">
          <source>In this example the function &lt;code&gt;refreshPopupWindow()&lt;/code&gt; calls the &lt;code&gt;reload&lt;/code&gt; method of the popup's location object to refresh its data. If the popup hasn't been opened yet or the user has closed it a new window is opened.</source>
          <target state="translated">在此示例中，函数 &lt;code&gt;refreshPopupWindow()&lt;/code&gt; 调用弹出窗口的location对象的 &lt;code&gt;reload&lt;/code&gt; 方法以刷新其数据。如果尚未打开弹出窗口或用户已关闭弹出窗口，则会打开一个新窗口。</target>
        </trans-unit>
        <trans-unit id="a15daa80588607e4477964dfd27a2fe7e339632a" translate="yes" xml:space="preserve">
          <source>In this example three lines are drawn, each with a different value for the &lt;code&gt;lineCap&lt;/code&gt; property. Two guides to see the exact differences between the three are added. Each of these lines starts and ends exactly on these guides.</source>
          <target state="translated">在此示例中，绘制了三行，每行的 &lt;code&gt;lineCap&lt;/code&gt; 属性值不同。添加了两个指南，以查看三个指南之间的确切差异。这些行中的每一行都在这些指南上准确地开始和结束。</target>
        </trans-unit>
        <trans-unit id="99e99c59aa9f04ae82e8b51902eeb459b88d9827" translate="yes" xml:space="preserve">
          <source>In this example we are creating a marching ants effect. It is an animation technique often found in selection tools of computer graphics programs. It helps the user to distinguish the selection border from the image background by animating the border. In a later part of this tutorial, you can learn how to do this and other &lt;a href=&quot;basic_animations&quot;&gt;basic animations&lt;/a&gt;.</source>
          <target state="translated">在此示例中，我们将创建行进蚂蚁效果。这是一种动画技术，通常在计算机图形程序的选择工具中找到。通过动画化边框，可以帮助用户将选择边框与图像背景区分开。在本教程的后面部分，您将学习如何执行此操作以及其他&lt;a href=&quot;basic_animations&quot;&gt;基本动画&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="23213470633aad5a46d88e3d77045d3c2aefb809" translate="yes" xml:space="preserve">
          <source>In this example we are using the &lt;a href=&quot;../../canvasrenderingcontext2d/getimagedata&quot;&gt;getImageData() &lt;/a&gt;method to display the color under the mouse cursor. For this, we need the current position of the mouse with &lt;code&gt;layerX&lt;/code&gt; and &lt;code&gt;layerY&lt;/code&gt;, then we look up the pixel data on that position in the pixel array that &lt;a href=&quot;../../canvasrenderingcontext2d/getimagedata&quot;&gt;getImageData()&lt;/a&gt; provides us. Finally, we use the array data to set a background color and a text in the &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; to display the color.</source>
          <target state="translated">在此示例中，我们使用&lt;a href=&quot;../../canvasrenderingcontext2d/getimagedata&quot;&gt;getImageData（）&lt;/a&gt;方法在鼠标光标下显示颜色。为此，我们需要有 &lt;code&gt;layerX&lt;/code&gt; 和 &lt;code&gt;layerY&lt;/code&gt; 的鼠标的当前位置，然后在&lt;a href=&quot;../../canvasrenderingcontext2d/getimagedata&quot;&gt;getImageData（）&lt;/a&gt;提供给我们的像素数组中的那个位置上查找像素数据。最后，我们使用数组数据设置背景色，并使用 &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; 中的文本显示颜色。</target>
        </trans-unit>
        <trans-unit id="0173f6588cd0db49687ec868bac0c846da7ae952" translate="yes" xml:space="preserve">
          <source>In this example we are using the &lt;code&gt;evenodd&lt;/code&gt; rule.</source>
          <target state="translated">在此示例中，我们使用了 &lt;code&gt;evenodd&lt;/code&gt; 规则。</target>
        </trans-unit>
        <trans-unit id="9de88f05f8db36432f807ddbf5990b1403a4ecb6" translate="yes" xml:space="preserve">
          <source>In this example we create a function that will apply three different transformations to the SVG element that has been clicked on. In order to do this we create a separate &lt;a href=&quot;svgtransform&quot;&gt;&lt;code&gt;SVGTransform&lt;/code&gt;&lt;/a&gt; object for each transformation -- such as &lt;code&gt;translate&lt;/code&gt;, &lt;code&gt;rotate&lt;/code&gt;, and &lt;code&gt;scale&lt;/code&gt;. We apply multiple transformation by appending the transform object to the &lt;code&gt;SVGTransformList&lt;/code&gt; associated with an SVG element.</source>
          <target state="translated">在此示例中，我们创建一个函数，该函数将对单击的SVG元素应用三种不同的转换。为了做到这一点，我们为每个转换（例如 &lt;code&gt;translate&lt;/code&gt; ， &lt;code&gt;rotate&lt;/code&gt; 和 &lt;code&gt;scale&lt;/code&gt; 创建一个单独的&lt;a href=&quot;svgtransform&quot;&gt; &lt;code&gt;SVGTransform&lt;/code&gt; &lt;/a&gt;对象。我们通过将变换对象附加到与SVG元素关联的 &lt;code&gt;SVGTransformList&lt;/code&gt; 来应用多重变换。</target>
        </trans-unit>
        <trans-unit id="be366d5af68084a9d740b3524dc0ea0b7e53bc44" translate="yes" xml:space="preserve">
          <source>In this example we create a transaction, retrieve an object store, then use a cursor to iterate through all the records in the object store. The cursor does not require us to select the data based on a key; we can just grab all of it. Also note that in each iteration of the loop, you can grab data from the current record under the cursor object using &lt;code&gt;cursor.value.foo&lt;/code&gt;. For a complete working example, see our &lt;a href=&quot;https://github.com/mdn/IDBcursor-example/&quot;&gt;IDBCursor example&lt;/a&gt; (&lt;a href=&quot;http://mdn.github.io/IDBcursor-example/&quot;&gt;view example live&lt;/a&gt;.)</source>
          <target state="translated">在此示例中，我们创建一个事务，检索对象存储，然后使用游标遍历对象存储中的所有记录。游标不需要我们根据键选择数据；我们可以抓住所有这些。还要注意，在循环的每次迭代中，都可以使用 &lt;code&gt;cursor.value.foo&lt;/code&gt; 从光标对象下的当前记录中获取数据。有关完整的工作示例，请参阅我们的&lt;a href=&quot;https://github.com/mdn/IDBcursor-example/&quot;&gt;IDBCursor示例&lt;/a&gt;（&lt;a href=&quot;http://mdn.github.io/IDBcursor-example/&quot;&gt;查看示例live&lt;/a&gt;。）</target>
        </trans-unit>
        <trans-unit id="381558f5d7cdb87126bf989084c23b7d13e9bc2b" translate="yes" xml:space="preserve">
          <source>In this example we create a transaction, retrieve an object store, then use a cursor to iterate through all the records in the object store. The cursor does not require us to select the data based on a key; we can just grab all of it. Also note that in each iteration of the loop, you can grab data from the current record under the cursor object using &lt;code&gt;cursor.value.foo&lt;/code&gt;. For a complete working example, see our &lt;a href=&quot;https://github.com/mdn/IDBcursor-example/&quot;&gt;IDBCursor example&lt;/a&gt; (&lt;a href=&quot;https://mdn.github.io/IDBcursor-example/&quot;&gt;view example live&lt;/a&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94eff65887bdd82101774699c3b48378b321fabe" translate="yes" xml:space="preserve">
          <source>In this example we create a transaction, retrieve an object store, then use a cursor to iterate through all the records in the object store. Within each iteration we log the value of the cursor with &lt;code&gt;cursor.value&lt;/code&gt;.</source>
          <target state="translated">在此示例中，我们创建一个事务，检索对象存储，然后使用游标遍历对象存储中的所有记录。在每次迭代中，我们使用 &lt;code&gt;cursor.value&lt;/code&gt; 记录光标的值。</target>
        </trans-unit>
        <trans-unit id="860dfabd12474dd4d7cc2d9f1c57f37ebf422b33" translate="yes" xml:space="preserve">
          <source>In this example we define two event handler functions &amp;mdash; &lt;code&gt;onclick&lt;/code&gt; and &lt;code&gt;onauxclick&lt;/code&gt;. The former changes the color of the button background, while the latter changes the button foreground (text) color. You can see the two functions in action by trying the demo out with a multi-button mouse (&lt;a href=&quot;https://mdn.github.io/dom-examples/auxclick/&quot;&gt;see it live on GitHub&lt;/a&gt;; also &lt;a href=&quot;https://github.com/mdn/dom-examples/blob/master/auxclick/index.html&quot;&gt;see the source code&lt;/a&gt;).</source>
          <target state="translated">在这个例子中，我们定义两个事件处理函数- &lt;code&gt;onclick&lt;/code&gt; 和 &lt;code&gt;onauxclick&lt;/code&gt; 。前者更改按钮背景的颜色，而后者更改按钮前景（文本）的颜色。您可以通过使用多按钮鼠标尝试演示来查看这两个功能的运行情况（&lt;a href=&quot;https://mdn.github.io/dom-examples/auxclick/&quot;&gt;在GitHub上实时查看&lt;/a&gt;该示例；另&lt;a href=&quot;https://github.com/mdn/dom-examples/blob/master/auxclick/index.html&quot;&gt;请参见源代码&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="1ab31ccd2a18eaed1766aed70644304d542527f9" translate="yes" xml:space="preserve">
          <source>In this example we iterate over all pixels to change their values, then we put the modified pixel array back to the canvas using &lt;a href=&quot;../../canvasrenderingcontext2d/putimagedata&quot;&gt;putImageData()&lt;/a&gt;. The invert function simply subtracts each color from the max value 255. The grayscale function simply uses the average of red, green and blue. You can also use a weighted average, given by the formula &lt;code&gt;x = 0.299r + 0.587g + 0.114b&lt;/code&gt;, for example. See &lt;a href=&quot;http://en.wikipedia.org/wiki/Grayscale&quot;&gt;Grayscale&lt;/a&gt; on Wikipedia for more information.</source>
          <target state="translated">在此示例中，我们遍历所有像素以更改其值，然后使用&lt;a href=&quot;../../canvasrenderingcontext2d/putimagedata&quot;&gt;putImageData（）&lt;/a&gt;将修改后的像素数组放回画布。反转功能仅从最大值255中减去每种颜色。灰度功能仅使用红色，绿色和蓝色的平均值。您还可以使用加权平均值，例如，由公式 &lt;code&gt;x = 0.299r + 0.587g + 0.114b&lt;/code&gt; 给出。有关更多信息，请参见Wikipedia上的&lt;a href=&quot;http://en.wikipedia.org/wiki/Grayscale&quot;&gt;Grayscale&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f9f9e808ab7494edff1b764adf11ccc5c89f2590" translate="yes" xml:space="preserve">
          <source>In this example we iterate over all pixels to change their values, then we put the modified pixel array back to the canvas using &lt;a href=&quot;../../canvasrenderingcontext2d/putimagedata&quot;&gt;putImageData()&lt;/a&gt;. The invert function simply subtracts each color from the max value 255. The grayscale function simply uses the average of red, green and blue. You can also use a weighted average, given by the formula &lt;code&gt;x = 0.299r + 0.587g + 0.114b&lt;/code&gt;, for example. See &lt;a href=&quot;https://en.wikipedia.org/wiki/Grayscale&quot;&gt;Grayscale&lt;/a&gt; on Wikipedia for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c0eaa3839370e9b11f9d498e774d53db59f6a7b" translate="yes" xml:space="preserve">
          <source>In this example we open a database connection, then use transaction() to open a transaction on the database. For a complete example, see our &lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;To-do Notifications&lt;/a&gt; app (&lt;a href=&quot;http://mdn.github.io/to-do-notifications/&quot;&gt;view example live&lt;/a&gt;.)</source>
          <target state="translated">在此示例中，我们打开数据库连接，然后使用transaction（）在数据库上打开事务。有关完整的示例，请参阅我们&lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;的待办事项通知&lt;/a&gt;应用程序（&lt;a href=&quot;http://mdn.github.io/to-do-notifications/&quot;&gt;查看示例live&lt;/a&gt;。）</target>
        </trans-unit>
        <trans-unit id="d862f43096b8bc02fac700d27db32d40d0f5d79c" translate="yes" xml:space="preserve">
          <source>In this example we open a database connection, then use transaction() to open a transaction on the database. For a complete example, see our &lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;To-do Notifications&lt;/a&gt; app (&lt;a href=&quot;https://mdn.github.io/to-do-notifications/&quot;&gt;view example live&lt;/a&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11d3846222bbea70252b7fa2cadb65bab7d20dab" translate="yes" xml:space="preserve">
          <source>In this example we show how an embedded cross-origin &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe&quot;&gt;&lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt;&lt;/a&gt; can access a user&amp;rsquo;s cookies under a storage access policy that blocks third-party cookies.</source>
          <target state="translated">在此示例中，我们展示了嵌入式跨域&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe&quot;&gt; &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; &lt;/a&gt;如何根据阻止第三方Cookie的存储访问策略来访问用户的Cookie。</target>
        </trans-unit>
        <trans-unit id="af8f39f9074021c348ce30b9c798ab6cc65a4382" translate="yes" xml:space="preserve">
          <source>In this example we style a simple &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/div&quot;&gt;&lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;&lt;/a&gt; element, then retrieve the styles using &lt;code&gt;getComputedStyle()&lt;/code&gt;, printing them into the text content of the &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">在此示例中，我们为简单的&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/div&quot;&gt; &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; &lt;/a&gt;元素设置样式，然后使用 &lt;code&gt;getComputedStyle()&lt;/code&gt; 检索样式，并将其打印到 &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; 的文本内容中。</target>
        </trans-unit>
        <trans-unit id="94287e1eb4ed92f83036ee2cbfb18265405d90e1" translate="yes" xml:space="preserve">
          <source>In this example, &lt;code&gt;fetchValidationData()&lt;/code&gt; is a function which loads the payment handler specific identifying information from the address given by &lt;code&gt;validationURL&lt;/code&gt;. By then delivering this data (or a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; which resolves to the loaded data) to the payment handler by passing it into &lt;code&gt;complete()&lt;/code&gt;, the payment handler can use the retrieved data and whatever algorithm and other data to support in order to verify that the merchant can use the payment handler.</source>
          <target state="translated">在此示例中， &lt;code&gt;fetchValidationData()&lt;/code&gt; 是一个函数，可从 &lt;code&gt;validationURL&lt;/code&gt; 给定的地址加载特定于付款处理程序的标识信息。然后，通过将该数据（或解析为已加载数据的&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt; &lt;code&gt;Promise&lt;/code&gt; &lt;/a&gt;）传递到 &lt;code&gt;complete()&lt;/code&gt; 到付款处理程序，付款处理程序可以使用检索到的数据以及要支持的任何算法和其他数据，以验证商家可以使用付款处理程序。</target>
        </trans-unit>
        <trans-unit id="ce707d59c5c11b6a532cc1062262495b2c90eb98" translate="yes" xml:space="preserve">
          <source>In this example, a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/p&quot;&gt;&lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt;&lt;/a&gt; text node will be split into two text nodes and a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/span&quot;&gt;&lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt;&lt;/a&gt; inserted between them.</source>
          <target state="translated">在此示例中，&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/p&quot;&gt; &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; &lt;/a&gt;文本节点将被分成两个文本节点，并且在它们之间插入一个&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/span&quot;&gt; &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b1fec8bd0711c0a1fe288f8fa37f597c0bb9cdaa" translate="yes" xml:space="preserve">
          <source>In this example, a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select&quot;&gt;&lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt;&lt;/a&gt; element with a number of options is used to let the user order various food items.</source>
          <target state="translated">在此示例中，具有多个选项的&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select&quot;&gt; &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; &lt;/a&gt;元素用于让用户订购各种食品。</target>
        </trans-unit>
        <trans-unit id="3db519acbd6cd12c65f39c5250157a86b8bb16f5" translate="yes" xml:space="preserve">
          <source>In this example, a Mutation Observer is set up to watch for changes to the &lt;code&gt;status&lt;/code&gt; and &lt;code&gt;username&lt;/code&gt; attributes in any elements contained within a subtree that displays the names of users in a chat room. This lets the code, for example, reflect changes to users' nicknames, or to mark them as away from keyboard (AFK) or offline.</source>
          <target state="translated">在此示例中，设置了一个突变观察者，以监视子树中包含的任何元素中 &lt;code&gt;status&lt;/code&gt; 和 &lt;code&gt;username&lt;/code&gt; 属性的更改，该子树可显示聊天室中的用户名。例如，这可以使代码反映用户昵称的更改，或将其标记为远离键盘（AFK）或离线。</target>
        </trans-unit>
        <trans-unit id="8623707ae19e43abaddd0a1897272aa0510e3414" translate="yes" xml:space="preserve">
          <source>In this example, a drop zone is created, which responds to the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/drop&quot;&gt;drop&lt;/a&gt;&lt;/code&gt; event by scanning through the dropped files and directories, outputting a hierarchical directory listing.</source>
          <target state="translated">在此示例中，创建了一个放置区域，该区域通过扫描放置的文件和目录来响应 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/drop&quot;&gt;drop&lt;/a&gt;&lt;/code&gt; 事件，并输出分层目录列表。</target>
        </trans-unit>
        <trans-unit id="e5d91397658b0538cadcece929660b8681e953c5" translate="yes" xml:space="preserve">
          <source>In this example, a function is presented whose job it is to locate within a user's app data directory a JSON file containing a user dictionary for a specified language, then load that dictionary.</source>
          <target state="translated">在这个例子中,呈现了一个函数,它的工作是在用户的应用程序数据目录中找到一个包含指定语言的用户字典的JSON文件,然后加载该字典。</target>
        </trans-unit>
        <trans-unit id="ecec12f9ac5b042101f2549655100905a801d26a" translate="yes" xml:space="preserve">
          <source>In this example, a listener is added for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragstart&quot;&gt;dragstart&lt;/a&gt;&lt;/code&gt; event by using the &lt;code&gt;&lt;a href=&quot;../globaleventhandlers/ondragstart&quot;&gt;&lt;code&gt;ondragstart&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; attribute.</source>
          <target state="translated">在此示例中，使用 &lt;code&gt;&lt;a href=&quot;../globaleventhandlers/ondragstart&quot;&gt;&lt;code&gt;ondragstart&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 属性为 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragstart&quot;&gt;dragstart&lt;/a&gt;&lt;/code&gt; 事件添加了侦听器。</target>
        </trans-unit>
        <trans-unit id="445a4dff0fe37a28c74e711c64e405b0e130c9d2" translate="yes" xml:space="preserve">
          <source>In this example, a media source is assigned to a newly-created &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt;&lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt;&lt;/a&gt; element.</source>
          <target state="translated">在此示例中，媒体源分配给了新创建的&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt; &lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt; &lt;/a&gt;元素。</target>
        </trans-unit>
        <trans-unit id="bab2015bc6e851b3989e1bf634866a489c3bfcad" translate="yes" xml:space="preserve">
          <source>In this example, a new &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/datachannel&quot;&gt;datachannel&lt;/a&gt;&lt;/code&gt; event is created. &lt;code&gt;dc&lt;/code&gt; is a data channel which already exists.</source>
          <target state="translated">在此示例中，创建了一个新的数据 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/datachannel&quot;&gt;datachannel&lt;/a&gt;&lt;/code&gt; 事件。 &lt;code&gt;dc&lt;/code&gt; 是一个已经存在的数据通道。</target>
        </trans-unit>
        <trans-unit id="fa899bca8fd3cc5d52875f9d4d8a36584a28a153" translate="yes" xml:space="preserve">
          <source>In this example, a new stream whose source is the user's local camera and microphone is requested using &lt;a href=&quot;../mediadevices/getusermedia&quot;&gt;&lt;code&gt;getUserMedia()&lt;/code&gt;&lt;/a&gt;. When that stream becomes available (that is, when the returned &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; is fulfilled, a button on the page is updated based on whether or not the stream is currently active.</source>
          <target state="translated">在此示例中，使用&lt;a href=&quot;../mediadevices/getusermedia&quot;&gt; &lt;code&gt;getUserMedia()&lt;/code&gt; &lt;/a&gt;请求一个新流，其源是用户的本地摄像机和麦克风。当该流变为可用时（即，当满足返回的&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt; &lt;code&gt;Promise&lt;/code&gt; 时&lt;/a&gt;），将根据该流当前是否处于活动状态来更新页面上的按钮。</target>
        </trans-unit>
        <trans-unit id="0777b73f2904d4e63b0147cb708ba7e8be39350f" translate="yes" xml:space="preserve">
          <source>In this example, a panorama is scrolled left-to-right. We're using &lt;a href=&quot;http://commons.wikimedia.org/wiki/File:Capitan_Meadows,_Yosemite_National_Park.jpg&quot;&gt;an image of Yosemite National Park&lt;/a&gt; we took from Wikipedia, but you could use any image that's larger than the canvas.</source>
          <target state="translated">在此示例中，全景图从左到右滚动。我们使用&lt;a href=&quot;http://commons.wikimedia.org/wiki/File:Capitan_Meadows,_Yosemite_National_Park.jpg&quot;&gt;的是&lt;/a&gt;我们从Wikipedia 拍摄的优胜美地国家公园的图像，但是您可以使用任何大于画布的图像。</target>
        </trans-unit>
        <trans-unit id="ea44456228ce51e687c7a261db71f14151513838" translate="yes" xml:space="preserve">
          <source>In this example, a panorama is scrolled left-to-right. We're using &lt;a href=&quot;https://commons.wikimedia.org/wiki/File:Capitan_Meadows,_Yosemite_National_Park.jpg&quot;&gt;an image of Yosemite National Park&lt;/a&gt; we took from Wikipedia, but you could use any image that's larger than the canvas.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b549b3af1035399e0042a4215c63b40485711610" translate="yes" xml:space="preserve">
          <source>In this example, a request is created and sent, and a &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/readystatechange&quot;&gt;readystatechange&lt;/a&gt;&lt;/code&gt; handler is established to look for the &lt;a href=&quot;readystate&quot;&gt;&lt;code&gt;readyState&lt;/code&gt;&lt;/a&gt; to indicate that the headers have been received; when that is the case, the value of the &lt;code&gt;Content-Type&lt;/code&gt; header is fetched. If the &lt;code&gt;Content-Type&lt;/code&gt; isn't the desired value, the &lt;code&gt;XMLHttpRequest&lt;/code&gt; is canceled by calling &lt;a href=&quot;abort&quot;&gt;&lt;code&gt;abort()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在此示例中，创建并发送了一个请求，并建立了一个 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/readystatechange&quot;&gt;readystatechange&lt;/a&gt;&lt;/code&gt; 处理程序以查找&lt;a href=&quot;readystate&quot;&gt; &lt;code&gt;readyState&lt;/code&gt; &lt;/a&gt;来指示已接收到标头。在这种情况下，将获取 &lt;code&gt;Content-Type&lt;/code&gt; 标头的值。如果 &lt;code&gt;Content-Type&lt;/code&gt; 不是所需的值，则通过调用&lt;a href=&quot;abort&quot;&gt; &lt;code&gt;abort()&lt;/code&gt; &lt;/a&gt;取消 &lt;code&gt;XMLHttpRequest&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9fd6c928683051ce0353aa453a116c96cbb919cd" translate="yes" xml:space="preserve">
          <source>In this example, a routine called &lt;code&gt;sendMessage()&lt;/code&gt; is created; it accepts an object as input and sends to the remote peer, over the &lt;a href=&quot;../rtcdatachannel&quot;&gt;&lt;code&gt;RTCDataChannel&lt;/code&gt;&lt;/a&gt;, a JSON string with the specified object and a time stamp.</source>
          <target state="translated">在此示例中，创建了一个名为 &lt;code&gt;sendMessage()&lt;/code&gt; 的例程；它接受一个对象作为输入，并通过&lt;a href=&quot;../rtcdatachannel&quot;&gt; &lt;code&gt;RTCDataChannel&lt;/code&gt; &lt;/a&gt;，带有指定对象和时间戳的JSON字符串发送到远程对等方。</target>
        </trans-unit>
        <trans-unit id="b2e800b02224e03b8e4508e406f32fc7ae938020" translate="yes" xml:space="preserve">
          <source>In this example, a video is presented in a web page. Pressing the</source>
          <target state="translated">在这个例子中,一个视频被呈现在网页中。按</target>
        </trans-unit>
        <trans-unit id="7553087c5ea0bcb1176c2f4f434d8d4afcf61618" translate="yes" xml:space="preserve">
          <source>In this example, all of the audio tracks on a given element are muted.</source>
          <target state="translated">在这个例子中,给定元素上的所有音轨都是静音的。</target>
        </trans-unit>
        <trans-unit id="2753b38ccd7fd72e7681d2f0f313030c88d93803" translate="yes" xml:space="preserve">
          <source>In this example, an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe&quot;&gt;&lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt;&lt;/a&gt; is created and filled with content, then a specific element within the document is scrolled into view in the frame. Once that's done, the vertical scroll position is checked by looking at the value of &lt;code&gt;pageYOffset&lt;/code&gt; in the frame's &lt;a href=&quot;../htmliframeelement/contentwindow&quot;&gt;&lt;code&gt;contentWindow&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在此示例中，创建了一个&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe&quot;&gt; &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; &lt;/a&gt;并填充了内容，然后将文档中的特定元素滚动到该框架的视图中。完成之后，通过查看框架的&lt;a href=&quot;../htmliframeelement/contentwindow&quot;&gt; &lt;code&gt;contentWindow&lt;/code&gt; 中&lt;/a&gt;的 &lt;code&gt;pageYOffset&lt;/code&gt; 的值来检查垂直滚动位置。</target>
        </trans-unit>
        <trans-unit id="3283f576040dbc538fd2abec4ec5a475e73b4500" translate="yes" xml:space="preserve">
          <source>In this example, an &lt;code&gt;onmute&lt;/code&gt; handler is established to set the content HTML of an element to display the &quot;muted speaker&quot; Emoji.</source>
          <target state="translated">在此示例中，建立了 &lt;code&gt;onmute&lt;/code&gt; 处理程序以设置元素的内容HTML以显示&amp;ldquo;静音扬声器&amp;rdquo;表情符号。</target>
        </trans-unit>
        <trans-unit id="42cb8ae243a3dd66f800b23e5566571583b3449c" translate="yes" xml:space="preserve">
          <source>In this example, an audio context is created, then a &lt;code&gt;ConstantSourceNode&lt;/code&gt; is established with its &lt;code&gt;offset&lt;/code&gt; initialized to 0.5.</source>
          <target state="translated">在此示例中，创建了音频上下文，然后建立了一个 &lt;code&gt;ConstantSourceNode&lt;/code&gt; ，其 &lt;code&gt;offset&lt;/code&gt; 初始化为0.5。</target>
        </trans-unit>
        <trans-unit id="4988685974cd44d8c51603e933d72494389ccb17" translate="yes" xml:space="preserve">
          <source>In this example, an event handler for &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/selectedcandidatepairchange&quot;&gt;selectedcandidatepairchange&lt;/a&gt;&lt;/code&gt; is set up to update an on-screen display showing the protocol used by the currently selected candidate pair.</source>
          <target state="translated">在此示例中，设置了 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/selectedcandidatepairchange&quot;&gt;selectedcandidatepairchange&lt;/a&gt;&lt;/code&gt; 的事件处理程序，以更新屏幕显示，该屏幕显示当前选择的候选对使用的协议。</target>
        </trans-unit>
        <trans-unit id="8cd2936f85b53eeb145d70d84bc0691f43f4f2bb" translate="yes" xml:space="preserve">
          <source>In this example, an event handler is established so that clicking a button starts capturing the contents of a media element with the ID &lt;code&gt;&quot;playback&quot;&lt;/code&gt; into a &lt;a href=&quot;../mediastream&quot;&gt;&lt;code&gt;MediaStream&lt;/code&gt;&lt;/a&gt;. The stream can then be used for other purposes&amp;mdash;like a source for streaming over WebRTC, to allow sharing prerecorded videos with another person during a video call.</source>
          <target state="translated">在此示例中，建立了事件处理程序，以便单击按钮即可开始将ID为 &lt;code&gt;&quot;playback&quot;&lt;/code&gt; 的媒体元素的内容捕获到&lt;a href=&quot;../mediastream&quot;&gt; &lt;code&gt;MediaStream&lt;/code&gt; 中&lt;/a&gt;。然后，该流可用于其他目的，例如通过WebRTC进行流传输的源，以允许在视频通话期间与其他人共享预录的视频。</target>
        </trans-unit>
        <trans-unit id="f7b2efe73d871e19d88c213c4adbb245db86c7e0" translate="yes" xml:space="preserve">
          <source>In this example, an event listener is added to the window (the event target). If, from an external source, a tab, a link, marked text or a file is dragged and dropped onto this window, the alert is fired. Note how &lt;code&gt;event.stopPropagation();&lt;/code&gt; prevents the browser from loading the dropped tab, link or file.</source>
          <target state="translated">在此示例中，事件侦听器被添加到窗口（事件目标）。如果从外部来源将选项卡，链接，标记的文本或文件拖放到此窗口上，则会触发警报。注意 &lt;code&gt;event.stopPropagation();&lt;/code&gt; 阻止浏览器加载放置的标签，链接或文件。</target>
        </trans-unit>
        <trans-unit id="b690e5b6ba5733a149cf38c64d196c6e4b1e7021" translate="yes" xml:space="preserve">
          <source>In this example, before attempting to request full-screen mode for a video element, the value of &lt;code&gt;fullscreenEnabled&lt;/code&gt; is checked, in order to avoid making the attempt when not available.</source>
          <target state="translated">在此示例中，在尝试请求视频元素的 &lt;code&gt;fullscreenEnabled&lt;/code&gt; 模式之前，请检查fullscreenEnabled的值，以避免在不可用时进行尝试。</target>
        </trans-unit>
        <trans-unit id="612c8be2c94c9a550c727aa3fb9a83fe1a2915c5" translate="yes" xml:space="preserve">
          <source>In this example, constraints are applied at &lt;code&gt;getUserMedia()&lt;/code&gt; time, asking for an ideal set of options with fallbacks for the video.</source>
          <target state="translated">在此示例中，在 &lt;code&gt;getUserMedia()&lt;/code&gt; 时施加了约束，要求具有视频后备的理想选项集。</target>
        </trans-unit>
        <trans-unit id="ec34774fc07a9affedec82ac24370cd5d09c33a2" translate="yes" xml:space="preserve">
          <source>In this example, copy is the effect that is performed.</source>
          <target state="translated">在本例中,复制是执行的效果。</target>
        </trans-unit>
        <trans-unit id="580eb57dc98480d367a8456413811fa8359cd2ca" translate="yes" xml:space="preserve">
          <source>In this example, it has already been determined that ICE restart is needed, and that negotiation needs to be done using a different ICE server.</source>
          <target state="translated">在这个例子中,已经确定需要重启ICE,需要使用不同的ICE服务器进行协商。</target>
        </trans-unit>
        <trans-unit id="1bd2235c4e7e3020e6a6c71b8df9ad0168a02431" translate="yes" xml:space="preserve">
          <source>In this example, one &lt;a href=&quot;../worker&quot;&gt;&lt;code&gt;Worker&lt;/code&gt;&lt;/a&gt; is created for each logical processor reported by the browser and a record is created which includes a reference to the new worker as well as a Boolean value indicating whether or not we're using that worker yet; these objects are, in turn, stored into an array for later use. This creates a pool of workers we can use to process requests later.</source>
          <target state="translated">在此示例中，为浏览器报告的每个逻辑处理器创建一个&lt;a href=&quot;../worker&quot;&gt; &lt;code&gt;Worker&lt;/code&gt; &lt;/a&gt;并创建一条记录，其中包含对新工作程序的引用以及一个布尔值，该值指示我们是否正在使用该工作程序；这些对象又被存储到数组中以备后用。这将创建一个工作池，我们可以在以后使用这些工作池来处理请求。</target>
        </trans-unit>
        <trans-unit id="f26c1e49c118d7a73b7002bf47ebd9673e0f5075" translate="yes" xml:space="preserve">
          <source>In this example, only HTML documents retrieved with the GET HTTP verb will be cached. If our &lt;code&gt;if()&lt;/code&gt; condition is false, then this fetch handler won't intercept the request. If there are any other fetch handlers registered, they will get a chance to call &lt;code&gt;event.respondWith()&lt;/code&gt;. If no fetch handlers call &lt;code&gt;event.respondWith()&lt;/code&gt;, the request will be handled by the browser as if there were no service worker involvement. If &lt;code&gt;fetch()&lt;/code&gt; returns a valid HTTP response with an response code in the 4xx or 5xx range, the &lt;code&gt;catch()&lt;/code&gt; will NOT be called.</source>
          <target state="translated">在此示例中，将仅缓存使用GET HTTP动词检索的HTML文档。如果我们的 &lt;code&gt;if()&lt;/code&gt; 条件为false，则此提取处理程序将不会拦截请求。如果注册了其他任何获取处理程序，则它们将有机会调用 &lt;code&gt;event.respondWith()&lt;/code&gt; 。如果没有获取处理程序调用 &lt;code&gt;event.respondWith()&lt;/code&gt; ，则浏览器将处理请求，就像没有服务人员参与一样。如果 &lt;code&gt;fetch()&lt;/code&gt; 返回的有效HTTP响应的响应代码在4xx或5xx范围内，则不会调用 &lt;code&gt;catch()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7ae4cdf19eb6e5d809b1054493ff7f1d42907e63" translate="yes" xml:space="preserve">
          <source>In this example, only a copy is allowed. You can combine the values in various ways:</source>
          <target state="translated">在这个例子中,只允许复制。你可以用不同的方式组合这些值。</target>
        </trans-unit>
        <trans-unit id="edf772260b685eb66c6342eb172925afdb0e7fcd" translate="yes" xml:space="preserve">
          <source>In this example, playback of video is toggled off and on by the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function&quot;&gt;async&lt;/a&gt;&lt;/code&gt;&lt;code&gt;playVideo()&lt;/code&gt; function. It tries to play the video, and if successful sets the class name of the &lt;code&gt;playButton&lt;/code&gt; element to &lt;code&gt;&quot;playing&quot;&lt;/code&gt;. If playback fails to start, the &lt;code&gt;playButton&lt;/code&gt; element's class is cleared, restoring its default appearance. This ensures that the play button matches the actual state of playback by watching for the resolution or rejection of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; returned by &lt;code&gt;play()&lt;/code&gt;.</source>
          <target state="translated">在此示例中，通过 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function&quot;&gt;async&lt;/a&gt;&lt;/code&gt; &lt;code&gt;playVideo()&lt;/code&gt; 函数关闭和打开视频的播放。它尝试播放视频，如果成功，则将 &lt;code&gt;playButton&lt;/code&gt; 元素的类名称设置为 &lt;code&gt;&quot;playing&quot;&lt;/code&gt; 。如果无法开始播放，则将清除 &lt;code&gt;playButton&lt;/code&gt; 元素的类，以恢复其默认外观。这样可以通过观察 &lt;code&gt;play()&lt;/code&gt; 返回的&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt; &lt;code&gt;Promise&lt;/code&gt; &lt;/a&gt;的分辨率或拒绝来确保播放按钮与实际播放状态匹配。</target>
        </trans-unit>
        <trans-unit id="f93abc1b7f6ad1ed74a87393f318cf42607eee37" translate="yes" xml:space="preserve">
          <source>In this example, taken from the &lt;code&gt;animateScene()&lt;/code&gt; method in the article &lt;a href=&quot;../webgl_api/basic_2d_animation_example#Drawing_and_animating_the_scene&quot;&gt;A basic 2D WebGL animation example&lt;/a&gt;, obtains the locations of three uniforms from the shading program, then sets the value of each of the three uniforms.</source>
          <target state="translated">在此示例中，从&amp;ldquo; &lt;a href=&quot;../webgl_api/basic_2d_animation_example#Drawing_and_animating_the_scene&quot;&gt;基本2D WebGL动画示例&lt;/a&gt; &amp;rdquo;一文中的 &lt;code&gt;animateScene()&lt;/code&gt; 方法获得，从着色程序获取三个制服的位置，然后设置三个制服中的每个制服的值。</target>
        </trans-unit>
        <trans-unit id="d6cef1164ab5b2f3be86d7a7527912b1a880ae0e" translate="yes" xml:space="preserve">
          <source>In this example, the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AudioContext/decodeAudioData&quot;&gt;&lt;code&gt;AudioContext.decodeAudioData()&lt;/code&gt;&lt;/a&gt; function is used to decode an audio track and put it into an &lt;a href=&quot;../audiobuffersourcenode&quot;&gt;&lt;code&gt;AudioBufferSourceNode&lt;/code&gt;&lt;/a&gt;. Buttons are provided to play and stop the audio playback, and slider controls are used to change the &lt;code&gt;playbackRate&lt;/code&gt;, &lt;code&gt;loopStart&lt;/code&gt; and &lt;code&gt;loopEnd&lt;/code&gt; properties on the fly.</source>
          <target state="translated">在此示例中，&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AudioContext/decodeAudioData&quot;&gt; &lt;code&gt;AudioContext.decodeAudioData()&lt;/code&gt; &lt;/a&gt;函数用于解码音轨并将其放入&lt;a href=&quot;../audiobuffersourcenode&quot;&gt; &lt;code&gt;AudioBufferSourceNode&lt;/code&gt; &lt;/a&gt;。提供了用于播放和停止音频播放的按钮，并且滑块控件用于 &lt;code&gt;loopStart&lt;/code&gt; 更改 &lt;code&gt;playbackRate&lt;/code&gt; ，loopStart和 &lt;code&gt;loopEnd&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="e191f3c43d3c9e76a208ca7989db6ff0625ab7f0" translate="yes" xml:space="preserve">
          <source>In this example, the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AudioContext/decodeAudioData&quot;&gt;&lt;code&gt;AudioContext.decodeAudioData()&lt;/code&gt;&lt;/a&gt; function is used to decode an audio track and put it into an &lt;a href=&quot;../audiobuffersourcenode&quot;&gt;&lt;code&gt;AudioBufferSourceNode&lt;/code&gt;&lt;/a&gt;. Buttons are provided to play and stop the audio playback, and slider controls are used to change the &lt;code&gt;playbackRate&lt;/code&gt;, &lt;code&gt;loopStart&lt;/code&gt;, and &lt;code&gt;loopEnd&lt;/code&gt; properties on the fly.</source>
          <target state="translated">在此示例中，&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AudioContext/decodeAudioData&quot;&gt; &lt;code&gt;AudioContext.decodeAudioData()&lt;/code&gt; &lt;/a&gt;函数用于解码音轨并将其放入&lt;a href=&quot;../audiobuffersourcenode&quot;&gt; &lt;code&gt;AudioBufferSourceNode&lt;/code&gt; &lt;/a&gt;。提供了用于播放和停止音频播放的按钮，并且滑块控件用于 &lt;code&gt;loopStart&lt;/code&gt; 更改 &lt;code&gt;playbackRate&lt;/code&gt; ，loopStart和 &lt;code&gt;loopEnd&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="cf1a8ca3c62625b8e7dc68235a2c841adebd9aea" translate="yes" xml:space="preserve">
          <source>In this example, the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AudioContext/decodeAudioData&quot;&gt;&lt;code&gt;AudioContext.decodeAudioData()&lt;/code&gt;&lt;/a&gt; function is used to decode an audio track, and put it into an &lt;a href=&quot;../audiobuffersourcenode&quot;&gt;&lt;code&gt;AudioBufferSourceNode&lt;/code&gt;&lt;/a&gt;. Buttons are provided to play and stop the audio playback, and a slider control is used to change the &lt;code&gt;playbackRate&lt;/code&gt; property value on the fly.</source>
          <target state="translated">在此示例中，&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AudioContext/decodeAudioData&quot;&gt; &lt;code&gt;AudioContext.decodeAudioData()&lt;/code&gt; &lt;/a&gt;函数用于解码音轨，并将其放入&lt;a href=&quot;../audiobuffersourcenode&quot;&gt; &lt;code&gt;AudioBufferSourceNode&lt;/code&gt; 中&lt;/a&gt;。提供了用于播放和停止音频播放的按钮，并且滑块控件用于即时更改 &lt;code&gt;playbackRate&lt;/code&gt; 属性值。</target>
        </trans-unit>
        <trans-unit id="7e0e85313768f4fee34737467a678f39e1f405b8" translate="yes" xml:space="preserve">
          <source>In this example, the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AudioContext/decodeAudioData&quot;&gt;&lt;code&gt;AudioContext.decodeAudioData&lt;/code&gt;&lt;/a&gt; function is used to decode an audio track and put it into an &lt;a href=&quot;../audiobuffersourcenode&quot;&gt;&lt;code&gt;AudioBufferSourceNode&lt;/code&gt;&lt;/a&gt;. Buttons are provided to play and stop the audio playback, and a slider control is used to change the &lt;code&gt;playbackRate&lt;/code&gt; property value on the fly. When the audio is played, it loops.</source>
          <target state="translated">在此示例中，&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AudioContext/decodeAudioData&quot;&gt; &lt;code&gt;AudioContext.decodeAudioData&lt;/code&gt; &lt;/a&gt;函数用于解码音轨并将其放入&lt;a href=&quot;../audiobuffersourcenode&quot;&gt; &lt;code&gt;AudioBufferSourceNode&lt;/code&gt; &lt;/a&gt;。提供了用于播放和停止音频播放的按钮，并且滑块控件用于即时更改 &lt;code&gt;playbackRate&lt;/code&gt; 属性值。播放音频时，它会循环播放。</target>
        </trans-unit>
        <trans-unit id="163e2e79d4911243af806737cb607859685dd893" translate="yes" xml:space="preserve">
          <source>In this example, the &lt;code&gt;datachannel&lt;/code&gt; event handler is set up to save the data channel reference and set up handlers for the events which need to be monitored. The &lt;a href=&quot;rtcdatachannelevent/channel&quot;&gt;&lt;code&gt;channel&lt;/code&gt;&lt;/a&gt; property provides the &lt;a href=&quot;rtcdatachannel&quot;&gt;&lt;code&gt;RTCDataChannel&lt;/code&gt;&lt;/a&gt; representing the connection to the other peer.</source>
          <target state="translated">在这个例子中， &lt;code&gt;datachannel&lt;/code&gt; 事件处理程序被设置成保存所述数据信道和参考设置处理程序需要被监视的事件。的&lt;a href=&quot;rtcdatachannelevent/channel&quot;&gt; &lt;code&gt;channel&lt;/code&gt; &lt;/a&gt;特性提供&lt;a href=&quot;rtcdatachannel&quot;&gt; &lt;code&gt;RTCDataChannel&lt;/code&gt; &lt;/a&gt;代表到其它对等体的连接。</target>
        </trans-unit>
        <trans-unit id="08b49c5969e6d0a7e0e1124fcf0c205ef567427d" translate="yes" xml:space="preserve">
          <source>In this example, the &lt;code&gt;getData()&lt;/code&gt; function uses XHR to load an audio track, setting the &lt;code&gt;responseType&lt;/code&gt; of the request to &lt;code&gt;arraybuffer&lt;/code&gt; so that it returns an array buffer as its &lt;code&gt;response&lt;/code&gt; that we then store in the &lt;code&gt;audioData&lt;/code&gt; variable . We then pass this buffer into a &lt;code&gt;decodeAudioData()&lt;/code&gt; function; the success callback takes the successfully decoded PCM data, puts it into an &lt;a href=&quot;../audiobuffersourcenode&quot;&gt;&lt;code&gt;AudioBufferSourceNode&lt;/code&gt;&lt;/a&gt; created using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AudioContext/createBufferSource&quot;&gt;&lt;code&gt;AudioContext.createBufferSource()&lt;/code&gt;&lt;/a&gt;, connects the source to the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AudioContext/destination&quot;&gt;&lt;code&gt;AudioContext.destination&lt;/code&gt;&lt;/a&gt; and sets it to loop.</source>
          <target state="translated">在此示例中， &lt;code&gt;getData()&lt;/code&gt; 函数使用XHR加载音轨，将请求的 &lt;code&gt;responseType&lt;/code&gt; 设置为 &lt;code&gt;arraybuffer&lt;/code&gt; ,以便它返回数组缓冲区作为其 &lt;code&gt;response&lt;/code&gt; ，然后将其存储在 &lt;code&gt;audioData&lt;/code&gt; 变量中。然后，我们将该缓冲区传递给 &lt;code&gt;decodeAudioData()&lt;/code&gt; 函数；成功回调将获取成功解码的PCM数据，将其放入使用&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AudioContext/createBufferSource&quot;&gt; &lt;code&gt;AudioContext.createBufferSource()&lt;/code&gt; &lt;/a&gt;创建的&lt;a href=&quot;../audiobuffersourcenode&quot;&gt; &lt;code&gt;AudioBufferSourceNode&lt;/code&gt; 中&lt;/a&gt;，将源连接到&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AudioContext/destination&quot;&gt; &lt;code&gt;AudioContext.destination&lt;/code&gt; &lt;/a&gt;并将其设置为循环。</target>
        </trans-unit>
        <trans-unit id="e2553f447b0a7f13d7f858289824a799f7edf6b6" translate="yes" xml:space="preserve">
          <source>In this example, the candidate's &lt;a href=&quot;protocol&quot;&gt;&lt;code&gt;protocol&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;tcpType&lt;/code&gt; are used to adjust the user interface for simultaneous-open TCP candidates.</source>
          <target state="translated">在此示例中，候选者的&lt;a href=&quot;protocol&quot;&gt; &lt;code&gt;protocol&lt;/code&gt; &lt;/a&gt;和 &lt;code&gt;tcpType&lt;/code&gt; 用于为同时打开的TCP候选者调整用户界面。</target>
        </trans-unit>
        <trans-unit id="15416d370de442429f39af7e3c76d675ab370e0a" translate="yes" xml:space="preserve">
          <source>In this example, the candidate's &lt;a href=&quot;type&quot;&gt;&lt;code&gt;type&lt;/code&gt;&lt;/a&gt; is checked, and then debugging output is presented, based on the candidate type, including the candidate's &lt;a href=&quot;ip&quot;&gt;&lt;code&gt;ip&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;relatedAddress&lt;/code&gt;.</source>
          <target state="translated">在此示例中，检查候选者的&lt;a href=&quot;type&quot;&gt; &lt;code&gt;type&lt;/code&gt; &lt;/a&gt;，然后根据候选者的类型（包括候选者的&lt;a href=&quot;ip&quot;&gt; &lt;code&gt;ip&lt;/code&gt; &lt;/a&gt;和 &lt;code&gt;relatedAddress&lt;/code&gt; ）显示调试输出。</target>
        </trans-unit>
        <trans-unit id="201f60616bca196654e9402b2b58dfcb78cfa71c" translate="yes" xml:space="preserve">
          <source>In this example, the candidate's &lt;a href=&quot;type&quot;&gt;&lt;code&gt;type&lt;/code&gt;&lt;/a&gt; is checked, and then debugging output is presented, based on the candidate type, including the candidate's type, address (&lt;code&gt;ip&lt;/code&gt; and &lt;a href=&quot;port&quot;&gt;&lt;code&gt;port&lt;/code&gt;&lt;/a&gt;), and related address (&lt;a href=&quot;relatedaddress&quot;&gt;&lt;code&gt;relatedAddress&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;relatedPort&lt;/code&gt;).</source>
          <target state="translated">在此示例中，检查候选者的&lt;a href=&quot;type&quot;&gt; &lt;code&gt;type&lt;/code&gt; &lt;/a&gt;，然后基于候选者类型显示调试输出，包括候选者的类型，地址（ &lt;code&gt;ip&lt;/code&gt; 和&lt;a href=&quot;port&quot;&gt; &lt;code&gt;port&lt;/code&gt; &lt;/a&gt;）以及相关地址（&lt;a href=&quot;relatedaddress&quot;&gt; &lt;code&gt;relatedAddress&lt;/code&gt; &lt;/a&gt;和 &lt;code&gt;relatedPort&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="58c1518f1b3061d52806a8f57541db39fc55ffb7" translate="yes" xml:space="preserve">
          <source>In this example, the candidate's &lt;a href=&quot;type&quot;&gt;&lt;code&gt;type&lt;/code&gt;&lt;/a&gt; is used to present a modified user interface for host candidates (those where the &lt;a href=&quot;ip&quot;&gt;&lt;code&gt;ip&lt;/code&gt;&lt;/a&gt; refers directly to the remote peer, rather than an intermediary).</source>
          <target state="translated">在此示例中，候选者的&lt;a href=&quot;type&quot;&gt; &lt;code&gt;type&lt;/code&gt; &lt;/a&gt;用于为主机候选者（&lt;a href=&quot;ip&quot;&gt; &lt;code&gt;ip&lt;/code&gt; &lt;/a&gt;直接指向远程对等方而不是中介者的主机）呈现修改的用户界面。</target>
        </trans-unit>
        <trans-unit id="cc6f3b02d5deab8a3b83310b17000c961201387b" translate="yes" xml:space="preserve">
          <source>In this example, the code first checks whether the browser supports service workers and if so registers one. Next, it adds and &lt;code&gt;updatefound&lt;/code&gt; event in which it uses the service worker registration to listen for further changes to the service worker's state. If the service worker hasn't changed since the last time it was registered, than the &lt;code&gt;updatefound&lt;/code&gt; event will not be fired.</source>
          <target state="translated">在此示例中，代码首先检查浏览器是否支持服务工作者，如果支持，则进行注册。接下来，它添加和 &lt;code&gt;updatefound&lt;/code&gt; 事件，在该事件中，它使用服务人员注册来侦听对服务人员状态的进一步更改。如果服务工作者自上次注册以来从未更改过，则不会触发 &lt;code&gt;updatefound&lt;/code&gt; 事件。</target>
        </trans-unit>
        <trans-unit id="bfa403877c4c43915e3268d68d935f629ac5ca29" translate="yes" xml:space="preserve">
          <source>In this example, the control point is red and the start and end points are blue.</source>
          <target state="translated">在本例中,控制点为红色,起点和终点为蓝色。</target>
        </trans-unit>
        <trans-unit id="fb5baaf426e8d237b19f4d2fe7c1d60995299a72" translate="yes" xml:space="preserve">
          <source>In this example, the control points are red and the start and end points are blue.</source>
          <target state="translated">在本例中,控制点为红色,起点和终点为蓝色。</target>
        </trans-unit>
        <trans-unit id="982ef6acb98509f633dea2c864771fc9ba468835" translate="yes" xml:space="preserve">
          <source>In this example, the current mouse coordinates are drawn while you mouse around after clicking and holding down on an element.</source>
          <target state="translated">在本例中,点击并按住一个元素后,在鼠标移动时绘制当前的鼠标坐标。</target>
        </trans-unit>
        <trans-unit id="ca785739fa3691c8d03322adc082ae3250ff3a6c" translate="yes" xml:space="preserve">
          <source>In this example, the drop-down menus dynamically update such DOM-accessible aspects of the web page as its background color (&lt;code&gt;bgColor&lt;/code&gt;), the color of the hyperlinks (&lt;code&gt;aLink&lt;/code&gt;), and color of the text (&lt;code&gt;text&lt;/code&gt;). However, you design your test pages, testing the interfaces as you read about them is an important part of learning how to use the DOM effectively.</source>
          <target state="translated">在此示例中，下拉菜单动态更新网页的此类DOM可访问方面，例如其背景色（ &lt;code&gt;bgColor&lt;/code&gt; ），超链接的颜色（ &lt;code&gt;aLink&lt;/code&gt; ）和文本的颜色（ &lt;code&gt;text&lt;/code&gt; ）。但是，设计测试页，在阅读接口时对其进行测试是学习如何有效使用DOM的重要部分。</target>
        </trans-unit>
        <trans-unit id="465b3a82d486e0aec332aa8b645b205a38bbf8ad" translate="yes" xml:space="preserve">
          <source>In this example, the element with the class &lt;code&gt;droparea&lt;/code&gt; will receive a 1 pixel black border while it is a valid drop target, that is, if the &lt;a href=&quot;../event/preventdefault&quot;&gt;&lt;code&gt;preventDefault()&lt;/code&gt;&lt;/a&gt; method was called during the &lt;code&gt;&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragenter&quot;&gt;dragenter&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; event. Note that you must cancel the &lt;code&gt;&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragenter&quot;&gt;dragenter&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; event for this pseudoclass to apply, as this state is not checked for the &lt;code&gt;&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragover&quot;&gt;dragover&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; event.</source>
          <target state="translated">在此示例中，具有类 &lt;code&gt;droparea&lt;/code&gt; 的元素将是有效的放置目标，即如果在 &lt;code&gt;&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragenter&quot;&gt;dragenter&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; 事件期间&lt;a href=&quot;../event/preventdefault&quot;&gt; &lt;code&gt;preventDefault()&lt;/code&gt; &lt;/a&gt;了preventDefault（）方法，则该元素将收到1像素的黑色边框。请注意，必须取消 &lt;code&gt;&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragenter&quot;&gt;dragenter&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; 事件才能应用此伪类，因为没有为 &lt;code&gt;&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragover&quot;&gt;dragover&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; 事件检查此状态。</target>
        </trans-unit>
        <trans-unit id="3f6e83c0e3cf81e14e1c69317467e959134733b7" translate="yes" xml:space="preserve">
          <source>In this example, the entire document is placed into full-screen mode by calling &lt;a href=&quot;../element/requestfullscreen&quot;&gt;&lt;code&gt;requestFullscreen()&lt;/code&gt;&lt;/a&gt; on the document's &lt;a href=&quot;../document/documentelement&quot;&gt;&lt;code&gt;Document.documentElement&lt;/code&gt;&lt;/a&gt;, which is the document's root &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/html&quot;&gt;&lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt;&lt;/a&gt; element.</source>
          <target state="translated">在此示例中，通过在文档的&lt;a href=&quot;../document/documentelement&quot;&gt; &lt;code&gt;Document.documentElement&lt;/code&gt; &lt;/a&gt;上调用&lt;a href=&quot;../element/requestfullscreen&quot;&gt; &lt;code&gt;requestFullscreen()&lt;/code&gt; &lt;/a&gt;来将整个文档置于全屏模式，该文档是文档的根&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/html&quot;&gt; &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt; &lt;/a&gt;元素。</target>
        </trans-unit>
        <trans-unit id="367095866ab40684b1f0a53b14ca330364c3c585" translate="yes" xml:space="preserve">
          <source>In this example, the event handler will fire each time a new selection is made. &lt;code&gt;console.log(selection.type)&lt;/code&gt; will return &lt;code&gt;Caret&lt;/code&gt; or &lt;code&gt;Range&lt;/code&gt; depending on whether the caret is placed at a single point in the text, or a range has been selected.</source>
          <target state="translated">在此示例中，事件处理程序将在每次进行新选择时触发。 &lt;code&gt;console.log(selection.type)&lt;/code&gt; 将返回 &lt;code&gt;Caret&lt;/code&gt; 符号或 &lt;code&gt;Range&lt;/code&gt; 具体取决于插入符号是放置在文本中的单个点还是已选择范围。</target>
        </trans-unit>
        <trans-unit id="f753d4b527f43838b7ad05090d3a32e196476272" translate="yes" xml:space="preserve">
          <source>In this example, the event returns false only if the data transfer contains the &lt;code&gt;application/x-moz-file&lt;/code&gt; type. During the drop event, the data associated with the file type is retrieved, and the filename of the file is added to the listbox. Note that the &lt;code&gt;instanceof&lt;/code&gt; operator is used here as the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer/mozGetDataAt&quot;&gt;&lt;code&gt;mozGetDataAt()&lt;/code&gt;&lt;/a&gt; method will return an &lt;code&gt;nsISupports&lt;/code&gt; that needs to be checked and converted into an nsIFile. This is also a good extra check in case someone made a mistake and added a non-file for this type.</source>
          <target state="translated">在此示例中，仅当数据传输包含 &lt;code&gt;application/x-moz-file&lt;/code&gt; 类型时，事件才返回false 。在放置事件期间，将检索与文件类型关联的数据，并将文件的文件名添加到列表框中。注意， &lt;code&gt;instanceof&lt;/code&gt; 操作者在此用作所述&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer/mozGetDataAt&quot;&gt; &lt;code&gt;mozGetDataAt()&lt;/code&gt; &lt;/a&gt;方法将返回一个 &lt;code&gt;nsISupports&lt;/code&gt; 需要被检查，并转换成nsIFile。如果有人犯错并为此类型添加了非文件，这也是一个很好的额外检查。</target>
        </trans-unit>
        <trans-unit id="c35f4e83e991b38c8b525ed5db71d9282a02e058" translate="yes" xml:space="preserve">
          <source>In this example, the first element in the document with the class &quot;&lt;code&gt;myclass&lt;/code&gt;&quot; is returned:</source>
          <target state="translated">在此示例中，返回文档中具有类&amp;ldquo; &lt;code&gt;myclass&lt;/code&gt; &amp;rdquo; 的第一个元素：</target>
        </trans-unit>
        <trans-unit id="7eda5ee6535afdac60c8225b0d92fac23d7db6ad" translate="yes" xml:space="preserve">
          <source>In this example, the path created by &lt;code&gt;arcTo()&lt;/code&gt; is &lt;strong&gt;thick and black&lt;/strong&gt;. Tangent lines are gray, control points are red, and the start point is blue.</source>
          <target state="translated">在这个例子中，通过创建的路径 &lt;code&gt;arcTo()&lt;/code&gt; 是&lt;strong&gt;厚和黑色&lt;/strong&gt;。切线为灰色，控制点为红色，起点为蓝色。</target>
        </trans-unit>
        <trans-unit id="c8cda7d3e1d677b1c13eac19d45b39f188eb4bd0" translate="yes" xml:space="preserve">
          <source>In this example, the specified easing only applies from the keyframe where it is specified until the next keyframe. Any &lt;code&gt;easing&lt;/code&gt; value specified on the &lt;code&gt;options&lt;/code&gt; argument, however, applies across a single iteration of the animation &amp;mdash; for the entire duration.</source>
          <target state="translated">在此示例中，指定的缓动仅从指定关键帧的位置开始应用，直到下一个关键帧为止。但是，在 &lt;code&gt;options&lt;/code&gt; 参数上指定的任何 &lt;code&gt;easing&lt;/code&gt; 值都适用于动画的单个迭代-在整个持续时间内。</target>
        </trans-unit>
        <trans-unit id="267559976150f69d6d4d0c2b0d5569c75b7e94b1" translate="yes" xml:space="preserve">
          <source>In this example, the supported constraints are fetched, and a control that lets the user configure the frame rate is disabled if the &lt;code&gt;frameRate&lt;/code&gt; constraint isn't supported.</source>
          <target state="translated">在此示例中，将提取受支持的约束，如果不支持 &lt;code&gt;frameRate&lt;/code&gt; 约束，则将禁用允许用户配置帧速率的控件。</target>
        </trans-unit>
        <trans-unit id="3e1714fe91905ce13bda4c1d188a50423345b1a9" translate="yes" xml:space="preserve">
          <source>In this example, the window will be resizable, it will render scrollbar(s) if needed, if the content overflows requested window dimensions and it will render the status bar. It will not render the menubar nor the location bar. Since the author knew about the size of the image (400 pixels wide and 200 pixels high), they added the margins applied to the root element in MSIE 6 which is 15 pixels for top margin, 15 pixels for the bottom margin, 10 pixels for the left margin and 10 pixels for the right margin.</source>
          <target state="translated">在这个例子中,窗口将被调整大小,如果内容超出了要求的窗口尺寸,它将渲染滚动条,并渲染状态栏。它不会渲染menubar或位置栏。由于作者知道图片的尺寸(400像素宽,200像素高),他们添加了MSIE 6中应用于根元素的边距,即上边距为15像素,下边距为15像素,左边距为10像素,右边距为10像素。</target>
        </trans-unit>
        <trans-unit id="f6668171476bd59987c3b7afd0c6951a8ff53c28" translate="yes" xml:space="preserve">
          <source>In this example, we are creating a rectangle and a circle. Both are stored as a &lt;code&gt;Path2D&lt;/code&gt; object, so that they are available for later usage. With the new &lt;code&gt;Path2D&lt;/code&gt; API, several methods got updated to optionally accept a &lt;code&gt;Path2D&lt;/code&gt; object to use instead of the current path. Here, &lt;code&gt;stroke&lt;/code&gt; and &lt;code&gt;fill&lt;/code&gt; are used with a path argument to draw both objects onto the canvas, for example.</source>
          <target state="translated">在此示例中，我们将创建一个矩形和一个圆形。两者都存储为 &lt;code&gt;Path2D&lt;/code&gt; 对象，以便以后使用。使用新的 &lt;code&gt;Path2D&lt;/code&gt; API，已更新了几种方法，可以有选择地接受要使用的 &lt;code&gt;Path2D&lt;/code&gt; 对象而不是当前路径。例如，在这里， &lt;code&gt;stroke&lt;/code&gt; 和 &lt;code&gt;fill&lt;/code&gt; 与path参数一起用于将两个对象绘制到画布上。</target>
        </trans-unit>
        <trans-unit id="a52f843befec7a52e6f5e41fd4174d560b5ab04a" translate="yes" xml:space="preserve">
          <source>In this example, we assume the user initiates a touch on an element with an id of &lt;code&gt;source&lt;/code&gt;, moves within the element or out of the element and then releases contact with the surface. When the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/touchend&quot;&gt;touchend&lt;/a&gt;&lt;/code&gt; event handler is invoked, the changes in the &lt;a href=&quot;clientx&quot;&gt;&lt;code&gt;Touch.clientX&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;clienty&quot;&gt;&lt;code&gt;Touch.clientY&lt;/code&gt;&lt;/a&gt; coordinates, from the starting touch point to the ending touch point, are calculated.</source>
          <target state="translated">在此示例中，我们假设用户在 &lt;code&gt;source&lt;/code&gt; 为id的元素上发起了触摸，在元素内移动或移出元素，然后释放了与表面的接触。当 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/touchend&quot;&gt;touchend&lt;/a&gt;&lt;/code&gt; 被调用的事件处理程序，改变在&lt;a href=&quot;clientx&quot;&gt; &lt;code&gt;Touch.clientX&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;clienty&quot;&gt; &lt;code&gt;Touch.clientY&lt;/code&gt; &lt;/a&gt;坐标，从起始触摸点至最终触摸点，进行计算。</target>
        </trans-unit>
        <trans-unit id="8c0c118e28b688be6a0747aa72e0a1aa68c483fd" translate="yes" xml:space="preserve">
          <source>In this example, we create a function called &lt;code&gt;updateDeviceList()&lt;/code&gt;, which is called once when &lt;a href=&quot;getusermedia&quot;&gt;&lt;code&gt;MediaDevices.getUserMedia()&lt;/code&gt;&lt;/a&gt; successfully obtains a stream, and then is called any time the device list changes. It displays in the browser window two lists: one of audio devices and one of video devices, with both the device's label (name) and whether it's an input or an output device. Because the example provides a handler for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/devicechange&quot;&gt;devicechange&lt;/a&gt;&lt;/code&gt; event, the list is refreshed any time a media device is attached to or removed from the device running the sample.</source>
          <target state="translated">在此示例中，我们创建一个名为 &lt;code&gt;updateDeviceList()&lt;/code&gt; 的函数，当&lt;a href=&quot;getusermedia&quot;&gt; &lt;code&gt;MediaDevices.getUserMedia()&lt;/code&gt; &lt;/a&gt;成功获取流时，将调用此函数一次，然后在设备列表更改时将调用此函数。它在浏览器窗口中显示两个列表：一个音频设备和一个视频设备，同时具有设备的标签（名称）以及它是输入设备还是输出设备。因为该示例为 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/devicechange&quot;&gt;devicechange&lt;/a&gt;&lt;/code&gt; 事件提供了一个处理程序，所以只要将媒体设备连接到运行该示例的设备或从中删除该设备，该列表就会刷新。</target>
        </trans-unit>
        <trans-unit id="d9d7dc59eefb2ee5886f4e878b891431cb41de58" translate="yes" xml:space="preserve">
          <source>In this example, we create a two second buffer, fill it with white noise, and then play it via an &lt;a href=&quot;../audiobuffersourcenode&quot;&gt;&lt;code&gt;AudioBufferSourceNode&lt;/code&gt;&lt;/a&gt;. The comments should clearly explain what is going on.</source>
          <target state="translated">在此示例中，我们创建了一个两秒钟的缓冲区，用白噪声填充它，然后通过&lt;a href=&quot;../audiobuffersourcenode&quot;&gt; &lt;code&gt;AudioBufferSourceNode&lt;/code&gt; &lt;/a&gt;对其进行播放。评论应清楚地说明正在发生的事情。</target>
        </trans-unit>
        <trans-unit id="fab986e1b6786156fa6be771a1b43c8e4dbf2328" translate="yes" xml:space="preserve">
          <source>In this example, we create a two-second buffer, fill it with white noise, and then play it using an &lt;code&gt;AudioBufferSourceNode&lt;/code&gt;. The comments should clearly explain what is going on.</source>
          <target state="translated">在此示例中，我们创建了一个两秒钟的缓冲区，用白噪声填充它，然后使用 &lt;code&gt;AudioBufferSourceNode&lt;/code&gt; 对其进行播放。评论应清楚地说明正在发生的事情。</target>
        </trans-unit>
        <trans-unit id="4e482baa2c8cd7d195256df32d2f9f1e92606735" translate="yes" xml:space="preserve">
          <source>In this example, we create an exerciser which lets you experiment with media constraints by editing the source code describing the constraint sets for audio and video tracks. You can then apply those changes and see the result, including both what the stream looks like and what the actual media settings are set to after applying the new constraints.</source>
          <target state="translated">在这个例子中,我们创建了一个练习器,让您可以通过编辑描述音频和视频轨道的约束集的源代码来试验媒体约束。然后,您可以应用这些更改并查看结果,包括流的外观和应用新约束后实际媒体设置的设置。</target>
        </trans-unit>
        <trans-unit id="fd46de23b07410450ff05b715974c2d2c9756e48" translate="yes" xml:space="preserve">
          <source>In this example, we create three &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/div&quot;&gt;&lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;&lt;/a&gt; blocks. The first and third have the same contents and attributes, while the second is different. Then we run some JavaScript to compare the nodes using &lt;code&gt;isEqualNode()&lt;/code&gt; and output the results.</source>
          <target state="translated">在此示例中，我们创建了三个&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/div&quot;&gt; &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; &lt;/a&gt;块。第一个和第三个具有相同的内容和属性，而第二个则不同。然后，我们运行一些JavaScript，以使用 &lt;code&gt;isEqualNode()&lt;/code&gt; 比较节点并输出结果。</target>
        </trans-unit>
        <trans-unit id="e3bd8b1ecedb3b66ec35fd0745aeaf21cf758ef8" translate="yes" xml:space="preserve">
          <source>In this example, we create three &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/div&quot;&gt;&lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;&lt;/a&gt; blocks. The first and third have the same contents and attributes, while the second is different. Then we run some JavaScript to compare the nodes using &lt;code&gt;isSameNode()&lt;/code&gt; and output the results.</source>
          <target state="translated">在此示例中，我们创建了三个&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/div&quot;&gt; &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; &lt;/a&gt;块。第一个和第三个具有相同的内容和属性，而第二个则不同。然后，我们运行一些JavaScript来使用 &lt;code&gt;isSameNode()&lt;/code&gt; 比较节点并输出结果。</target>
        </trans-unit>
        <trans-unit id="ce294ed21690ab98ca2ee9531ef435f32db0ec3d" translate="yes" xml:space="preserve">
          <source>In this example, we demonstrate how to handle any undelivered &lt;a href=&quot;../mutationrecord&quot;&gt;&lt;code&gt;MutationRecord&lt;/code&gt;&lt;/a&gt;s by calling &lt;code&gt;takeRecords()&lt;/code&gt; just before disconnecting the observer.</source>
          <target state="translated">在此示例中，我们演示了如何在断开观察者连接之前调用 &lt;code&gt;takeRecords()&lt;/code&gt; 来处理任何未交付的&lt;a href=&quot;../mutationrecord&quot;&gt; &lt;code&gt;MutationRecord&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="35cd073c24971ec516ca42696a4fac4a4aef872b" translate="yes" xml:space="preserve">
          <source>In this example, we grab a media (audio + video) stream from &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/navigator/getUserMedia&quot;&gt;&lt;code&gt;navigator.getUserMedia&lt;/code&gt;&lt;/a&gt;, feed the media into a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt;&lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt;&lt;/a&gt; element to play then mute the audio, but then also feed the audio into a &lt;a href=&quot;mediastreamaudiosourcenode&quot;&gt;&lt;code&gt;MediaStreamAudioSourceNode&lt;/code&gt;&lt;/a&gt;. Next, we feed this source audio into a low pass &lt;a href=&quot;biquadfilternode&quot;&gt;&lt;code&gt;BiquadFilterNode&lt;/code&gt;&lt;/a&gt; (which effectively serves as a bass booster), then a &lt;a href=&quot;audiodestinationnode&quot;&gt;&lt;code&gt;AudioDestinationNode&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在此示例中，我们从&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/navigator/getUserMedia&quot;&gt; &lt;code&gt;navigator.getUserMedia&lt;/code&gt; &lt;/a&gt;抓取一个媒体（音频+视频）流，将媒体输入到&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt; &lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt; &lt;/a&gt;元素中进行播放，然后使音频静音，然后再将音频输入到&lt;a href=&quot;mediastreamaudiosourcenode&quot;&gt; &lt;code&gt;MediaStreamAudioSourceNode&lt;/code&gt; 中&lt;/a&gt;。接下来，我们将此源音频输入到低通&lt;a href=&quot;biquadfilternode&quot;&gt; &lt;code&gt;BiquadFilterNode&lt;/code&gt; &lt;/a&gt;（实际上用作低音增强器）中，然后输入&lt;a href=&quot;audiodestinationnode&quot;&gt; &lt;code&gt;AudioDestinationNode&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ccc58765134b1f7e62cc7ef555821b468da9d29c" translate="yes" xml:space="preserve">
          <source>In this example, we have a media source with a single button (see the &lt;a href=&quot;https://github.com/mdn/webaudio-examples/blob/master/audio-param/index.html&quot;&gt;webaudio-examples repo&lt;/a&gt; for the source code, or &lt;a href=&quot;https://mdn.github.io/webaudio-examples/audio-param/&quot;&gt;view the example live&lt;/a&gt;.) When this button is pressed, &lt;code&gt;setValueCurveAtTime()&lt;/code&gt; is used to change the gain value between the values contained in the waveArray array:</source>
          <target state="translated">在此示例中，我们有一个带有单个按钮的媒体源（有关源代码，请参见&lt;a href=&quot;https://github.com/mdn/webaudio-examples/blob/master/audio-param/index.html&quot;&gt;webaudio-examples回购&lt;/a&gt;，或&lt;a href=&quot;https://mdn.github.io/webaudio-examples/audio-param/&quot;&gt;查看live示例&lt;/a&gt;。）按下此按钮时，将使用 &lt;code&gt;setValueCurveAtTime()&lt;/code&gt; 来在两个按钮之间更改增益值。 waveArray数组中包含的值：</target>
        </trans-unit>
        <trans-unit id="ccf0481644782b94cadbf7ac0020968d1b303da9" translate="yes" xml:space="preserve">
          <source>In this example, we have a media source with two control buttons (see the &lt;a href=&quot;https://github.com/mdn/audio-param&quot;&gt;audio-param repo&lt;/a&gt; for the source code, or &lt;a href=&quot;http://mdn.github.io/audio-param/&quot;&gt;view the example live&lt;/a&gt;.) When these buttons are pressed, &lt;code&gt;exponentialRampToValueAtTime()&lt;/code&gt; is used to fade the gain value up to 1.0, and down to 0, respectively. This is pretty useful for fade in/fade out effects:</source>
          <target state="translated">在此示例中，我们有一个带有两个控制按钮的媒体源（请参阅&lt;a href=&quot;https://github.com/mdn/audio-param&quot;&gt;音频参数库&lt;/a&gt;以获取源代码，或&lt;a href=&quot;http://mdn.github.io/audio-param/&quot;&gt;观看示例在线&lt;/a&gt;。）按下这些按钮时，将使用 &lt;code&gt;exponentialRampToValueAtTime()&lt;/code&gt; 将增益值逐渐减小到1.0，并分别降至0。这对于淡入/淡出效果非常有用：</target>
        </trans-unit>
        <trans-unit id="2188bb6508942db951a84aadd2a902856171d6ba" translate="yes" xml:space="preserve">
          <source>In this example, we have a media source with two control buttons (see the &lt;a href=&quot;https://github.com/mdn/audio-param&quot;&gt;audio-param repo&lt;/a&gt; for the source code, or &lt;a href=&quot;http://mdn.github.io/audio-param/&quot;&gt;view the example live&lt;/a&gt;.) When these buttons are pressed, &lt;code&gt;linearRampToValueAtTime()&lt;/code&gt; is used to fade the gain value up to 1.0, and down to 0, respectively. This is pretty useful for fade in/fade out effects, although &lt;a href=&quot;exponentialramptovalueattime&quot;&gt;&lt;code&gt;AudioParam.exponentialRampToValueAtTime()&lt;/code&gt;&lt;/a&gt; is often said to be a bit more natural.</source>
          <target state="translated">在此示例中，我们有一个带有两个控制按钮的媒体源（请参见&lt;a href=&quot;https://github.com/mdn/audio-param&quot;&gt;音频参数存储库&lt;/a&gt;以获取源代码，或&lt;a href=&quot;http://mdn.github.io/audio-param/&quot;&gt;查看示例在线&lt;/a&gt;。）按下这些按钮时，将使用 &lt;code&gt;linearRampToValueAtTime()&lt;/code&gt; 将增益值逐渐减小至1.0，并分别降至0。尽管通常说&lt;a href=&quot;exponentialramptovalueattime&quot;&gt; &lt;code&gt;AudioParam.exponentialRampToValueAtTime()&lt;/code&gt; &lt;/a&gt;更为自然，但这对于淡入/淡出效果非常有用。</target>
        </trans-unit>
        <trans-unit id="44e3feb4b28bd4b92e3d9fe560e242b2f6ac7a9b" translate="yes" xml:space="preserve">
          <source>In this example, we have a media source with two control buttons (see the &lt;a href=&quot;https://github.com/mdn/audio-param&quot;&gt;audio-param repo&lt;/a&gt; for the source code, or &lt;a href=&quot;https://mdn.github.io/audio-param/&quot;&gt;view the example live&lt;/a&gt;.) When these buttons are pressed, &lt;code&gt;exponentialRampToValueAtTime()&lt;/code&gt; is used to fade the gain value up to 1.0, and down to 0, respectively. This is pretty useful for fade in/fade out effects:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b48daca16e710d8be6daedd4e2fc551624d0a87" translate="yes" xml:space="preserve">
          <source>In this example, we have a media source with two control buttons (see the &lt;a href=&quot;https://github.com/mdn/audio-param&quot;&gt;audio-param repo&lt;/a&gt; for the source code, or &lt;a href=&quot;https://mdn.github.io/audio-param/&quot;&gt;view the example live&lt;/a&gt;.) When these buttons are pressed, &lt;code&gt;linearRampToValueAtTime()&lt;/code&gt; is used to fade the gain value up to 1.0, and down to 0, respectively. This is pretty useful for fade in/fade out effects, although &lt;a href=&quot;exponentialramptovalueattime&quot;&gt;&lt;code&gt;AudioParam.exponentialRampToValueAtTime()&lt;/code&gt;&lt;/a&gt; is often said to be a bit more natural.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea847032a52a9255c530666fe41bee22f86d8247" translate="yes" xml:space="preserve">
          <source>In this example, we have a media source with two control buttons (see the &lt;a href=&quot;https://github.com/mdn/webaudio-examples/blob/master/audio-param/index.html&quot;&gt;webaudio-examples repo&lt;/a&gt; for the source code, or &lt;a href=&quot;https://mdn.github.io/webaudio-examples/audio-param/&quot;&gt;view the example live&lt;/a&gt;.) When these buttons are pressed, &lt;code&gt;setTargetAtTime()&lt;/code&gt; is used to fade the gain value up to 1.0, and down to 0, respectively, with the effect starting after 1 second, and the length of time the effect lasts being controlled by the timeConstant.</source>
          <target state="translated">在此示例中，我们有一个带有两个控制按钮的媒体源（有关源代码，请参见&lt;a href=&quot;https://github.com/mdn/webaudio-examples/blob/master/audio-param/index.html&quot;&gt;webaudio-examples回购&lt;/a&gt;，或&lt;a href=&quot;https://mdn.github.io/webaudio-examples/audio-param/&quot;&gt;实时查看示例&lt;/a&gt;。）按下这些按钮时，将使用 &lt;code&gt;setTargetAtTime()&lt;/code&gt; 将增益值逐渐降低到效果分别为1.0和0，其效果在1秒后开始，效果持续的时间长度由timeConstant控制。</target>
        </trans-unit>
        <trans-unit id="9630380a9675da2560954aaf7b1eafa480b5cb09" translate="yes" xml:space="preserve">
          <source>In this example, we have an app that displays information about the number of channels available. To keep it up to date, handlers for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/addtrack&quot;&gt;addtrack&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/removetrack&quot;&gt;removetrack&lt;/a&gt;&lt;/code&gt; events are set up.</source>
          <target state="translated">在此示例中，我们有一个应用程序，用于显示有关可用频道数的信息。为了保持最新状态，设置了 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/addtrack&quot;&gt;addtrack&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/removetrack&quot;&gt;removetrack&lt;/a&gt;&lt;/code&gt; 事件的处理程序。</target>
        </trans-unit>
        <trans-unit id="8c303f6da21dfb3d8c2b33d0a464e641f1dd2701" translate="yes" xml:space="preserve">
          <source>In this example, we have two paragraphs containing spans, each one containing a single word. The first one is set as the &lt;code&gt;anchorNode&lt;/code&gt; and the second is set as the &lt;code&gt;focusNode&lt;/code&gt;. We also have an additional paragraph that sits in between the two nodes.</source>
          <target state="translated">在此示例中，我们有两个包含跨度的段落，每个段落都包含一个单词。第一个设置为 &lt;code&gt;anchorNode&lt;/code&gt; ，第二个设置为 &lt;code&gt;focusNode&lt;/code&gt; 。我们在两个节点之间还有一个附加段落。</target>
        </trans-unit>
        <trans-unit id="81ca574b9f153f27f1c2ef8e8cb8240fc8d35f1d" translate="yes" xml:space="preserve">
          <source>In this example, we log to the screen which tone just finished playing. In a more advanced application, you might update the user interface, for example, to indicate which note is currently playing.</source>
          <target state="translated">在这个例子中,我们将刚刚播放完的哪个音符记录到屏幕上。在更高级的应用程序中,您可能会更新用户界面,例如,指示当前播放的是哪个音符。</target>
        </trans-unit>
        <trans-unit id="81b7a389aa7c652466b303aba75d21853bc7296f" translate="yes" xml:space="preserve">
          <source>In this example, we make one canvas the drag image. As the canvas is 50 pixels wide and 50 pixels high, we use offsets of half of this (25 and 25) so that the image appears centered on the mouse pointer.</source>
          <target state="translated">在本例中,我们将一个画布作为拖动图像。由于画布的宽度为 50 像素,高度为 50 像素,我们使用其中一半的偏移量(25 和 25),使图像出现在鼠标指针的中心。</target>
        </trans-unit>
        <trans-unit id="c46188d764f23e23d335bbe677679eb481f819f5" translate="yes" xml:space="preserve">
          <source>In this example, we obtain the usage estimates and present the percentage of storage capacity currently used to the user.</source>
          <target state="translated">在这个例子中,我们获得使用量估计,并向用户展示当前使用的存储容量的百分比。</target>
        </trans-unit>
        <trans-unit id="9337e308804ef69389c8d203e7e002cfad5dbac6" translate="yes" xml:space="preserve">
          <source>In this example, we once again use two &lt;code&gt;for&lt;/code&gt; loops to draw a grid of rectangles, each in a different color. The resulting image should look something like the screenshot. There is nothing too spectacular happening here. We use the two variables &lt;code&gt;i&lt;/code&gt; and &lt;code&gt;j&lt;/code&gt; to generate a unique RGB color for each square, and only modify the red and green values. The blue channel has a fixed value. By modifying the channels, you can generate all kinds of palettes. By increasing the steps, you can achieve something that looks like the color palettes Photoshop uses.</source>
          <target state="translated">在此示例中，我们再次使用两个 &lt;code&gt;for&lt;/code&gt; 循环绘制矩形网格，每个矩形具有不同的颜色。生成的图像应类似于屏幕截图。这里没有什么太壮观了。我们使用两个变量 &lt;code&gt;i&lt;/code&gt; 和 &lt;code&gt;j&lt;/code&gt; 为每个正方形生成唯一的RGB颜色，并且仅修改红色和绿色值。蓝色通道具有固定值。通过修改通道，可以生成各种调色板。通过增加步骤，您可以实现类似于Photoshop使用的调色板的功能。</target>
        </trans-unit>
        <trans-unit id="98af2039db8b66e977aa7991dd9d63518587d6f0" translate="yes" xml:space="preserve">
          <source>In this example, we provide a simple value of &lt;code&gt;true&lt;/code&gt; for the &lt;code&gt;audio&lt;/code&gt; property. This tells &lt;code&gt;getUserMedia()&lt;/code&gt; that we require an audio track, but we don't care about any specifics beyond that.</source>
          <target state="translated">在这个例子中，我们提供了一个简单的价值 &lt;code&gt;true&lt;/code&gt; 的 &lt;code&gt;audio&lt;/code&gt; 性能。这告诉 &lt;code&gt;getUserMedia()&lt;/code&gt; 我们需要一个音轨，但是我们不在乎任何其他细节。</target>
        </trans-unit>
        <trans-unit id="bb70d56b359412c2a32569e1159e9c723a8316c7" translate="yes" xml:space="preserve">
          <source>In this example, we provide a simple value of &lt;code&gt;true&lt;/code&gt; for the &lt;code&gt;video&lt;/code&gt; property. This tells &lt;code&gt;getUserMedia()&lt;/code&gt; that we require a video track, but we don't care about any specifics beyond that.</source>
          <target state="translated">在这个例子中，我们提供了一个简单的价值 &lt;code&gt;true&lt;/code&gt; 的 &lt;code&gt;video&lt;/code&gt; 性能。这告诉 &lt;code&gt;getUserMedia()&lt;/code&gt; 我们需要一个视频轨道，但是我们不在乎任何其他细节。</target>
        </trans-unit>
        <trans-unit id="e39a66a1a2f22dad8eb5785967592dff2d095705" translate="yes" xml:space="preserve">
          <source>In this example, we see a function which receives as input an SDP string containing an ICE candidate received from the remote peer during the signaling process.</source>
          <target state="translated">在这个例子中,我们看到一个函数,它接收一个SDP字符串作为输入,其中包含在信令过程中从远程对等体收到的ICE候选者。</target>
        </trans-unit>
        <trans-unit id="07de7f5b0b830e6f80bde783fd8477ffaba0c870" translate="yes" xml:space="preserve">
          <source>In this example, we see a function which stops a streamed video by calling &lt;code&gt;stop()&lt;/code&gt; on every track on a given &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt;&lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在此示例中，我们看到一个函数，该函数通过在给定&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt; &lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt; 的&lt;/a&gt;每个轨道上调用 &lt;code&gt;stop()&lt;/code&gt; 来停止流式视频。</target>
        </trans-unit>
        <trans-unit id="2a762c8a948bcebca5803e4da85bcb88b890eb53" translate="yes" xml:space="preserve">
          <source>In this example, we see how to obtain the list of form controls as well as how to access its members by index and by name or ID.</source>
          <target state="translated">在这个例子中,我们看到了如何获得表单控件的列表,以及如何通过索引和名称或ID访问其成员。</target>
        </trans-unit>
        <trans-unit id="4e94b37ba240c064e307d3a473ef2d23402a3fc7" translate="yes" xml:space="preserve">
          <source>In this example, we see the client-side code needed to support merchant validation for a payment request called &lt;code&gt;payRequest&lt;/code&gt;:</source>
          <target state="translated">在此示例中，我们看到了支持对名为 &lt;code&gt;payRequest&lt;/code&gt; 的付款请求进行商家验证所需的客户端代码：</target>
        </trans-unit>
        <trans-unit id="397540554038af1abe7e13ccd4b7117cb5f6cbe6" translate="yes" xml:space="preserve">
          <source>In this example, we set the &lt;code&gt;myP&lt;/code&gt; variable to the DOM object for the second &lt;code&gt;p&lt;/code&gt; element inside the body:</source>
          <target state="translated">在此示例中，我们将 &lt;code&gt;myP&lt;/code&gt; 变量设置为主体内第二个 &lt;code&gt;p&lt;/code&gt; 元素的DOM对象：</target>
        </trans-unit>
        <trans-unit id="193a5e01e317a4cf3badfeacdf6f6924e166662a" translate="yes" xml:space="preserve">
          <source>In this example, we use the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/transitionrun&quot;&gt;transitionrun&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/transitionend&quot;&gt;transitionend&lt;/a&gt;&lt;/code&gt; events to detect when the transition begins and ends, to cause a text update to occur during the transition. This could also be used to trigger animations or other effects, to allow chaining of reactions.</source>
          <target state="translated">在此示例中，我们使用 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/transitionrun&quot;&gt;transitionrun&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/transitionend&quot;&gt;transitionend&lt;/a&gt;&lt;/code&gt; 事件来检测过渡的开始和结束时间，以使文本在过渡期间发生更新。这也可以用于触发动画或其他效果，以允许链接反应。</target>
        </trans-unit>
        <trans-unit id="cfea6be697c26a8e3b806b6a604c6b803f975696" translate="yes" xml:space="preserve">
          <source>In this example, we use the &lt;code&gt;contains&lt;/code&gt; method to check if the type &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/DragDrop/Recommended_Drag_Types#link&quot;&gt;text/uri-list&lt;/a&gt; is present in the list of types. If it is, we will cancel the event so that a drop may be allowed. If the drag data does not contain a link, the event will not be cancelled, and a drop cannot occur at that location.</source>
          <target state="translated">在此示例中，我们使用 &lt;code&gt;contains&lt;/code&gt; 方法检查类型&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/DragDrop/Recommended_Drag_Types#link&quot;&gt;列表中&lt;/a&gt;是否存在text / uri-list类型。如果是的话，我们将取消活动，以便可以丢弃。如果拖动数据不包含链接，则该事件将不会被取消，并且在该位置不会发生掉落。</target>
        </trans-unit>
        <trans-unit id="c125208a146c8df7cf111d5d4b663bb2d72f5078" translate="yes" xml:space="preserve">
          <source>In this example, we use two &lt;code&gt;for&lt;/code&gt; loops and the &lt;a href=&quot;arc&quot;&gt;&lt;code&gt;arc()&lt;/code&gt;&lt;/a&gt; method to draw a grid of circles, each having a different stroke color. To achieve this, we use the two variables &lt;code&gt;i&lt;/code&gt; and &lt;code&gt;j&lt;/code&gt; to generate a unique RGB color for each circle, and only modify the green and blue values. (The red channel has a fixed value.)</source>
          <target state="translated">在此示例中，我们使用两个 &lt;code&gt;for&lt;/code&gt; 循环和&lt;a href=&quot;arc&quot;&gt; &lt;code&gt;arc()&lt;/code&gt; &lt;/a&gt;方法绘制一个圆网格，每个圆具有不同的笔触颜色。为此，我们使用两个变量 &lt;code&gt;i&lt;/code&gt; 和 &lt;code&gt;j&lt;/code&gt; 为每个圆生成唯一的RGB颜色，并且仅修改绿色和蓝色值。（红色通道具有固定值。）</target>
        </trans-unit>
        <trans-unit id="8b7ece5ac40d64b3011ce5d10aef00c57dce8beb" translate="yes" xml:space="preserve">
          <source>In this example, we use two &lt;code&gt;for&lt;/code&gt; loops to draw a grid of rectangles, each having a different fill color. To achieve this, we use the two variables &lt;code&gt;i&lt;/code&gt; and &lt;code&gt;j&lt;/code&gt; to generate a unique RGB color for each square, and only modify the red and green values. (The blue channel has a fixed value.) By modifying the channels, you can generate all kinds of palettes.</source>
          <target state="translated">在此示例中，我们使用两个 &lt;code&gt;for&lt;/code&gt; 循环绘制一个矩形网格，每个矩形具有不同的填充颜色。为了实现这一点，我们使用两个变量 &lt;code&gt;i&lt;/code&gt; 和 &lt;code&gt;j&lt;/code&gt; 为每个正方形生成唯一的RGB颜色，并且仅修改红色和绿色值。（蓝色通道具有固定值。）通过修改通道，可以生成各种调色板。</target>
        </trans-unit>
        <trans-unit id="be30db5e965764d08737c1735711edf22d8bf31f" translate="yes" xml:space="preserve">
          <source>In this example, we watch for changes both to the charging status (whether or not we're plugged in and charging) and for changes to the battery level and timing. This is done by listening for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/chargingchange&quot;&gt;chargingchange&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/levelchange&quot;&gt;levelchange&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/chargingtimechange&quot;&gt;chargingtimechange&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dischargingtimechange&quot;&gt;dischargingtimechange&lt;/a&gt;&lt;/code&gt; events.</source>
          <target state="translated">在此示例中，我们观察充电状态（无论是否已插入并正在充电）的变化以及电池电量和时间的变化。这是通过监听完成 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/chargingchange&quot;&gt;chargingchange&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/levelchange&quot;&gt;levelchange&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/chargingtimechange&quot;&gt;chargingtimechange&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dischargingtimechange&quot;&gt;dischargingtimechange&lt;/a&gt;&lt;/code&gt; 事件。</target>
        </trans-unit>
        <trans-unit id="1ae1903a2ce8da21cbd358cb28830bbf3a11b07c" translate="yes" xml:space="preserve">
          <source>In this example, we will be altering the gain value of a &lt;a href=&quot;../gainnode&quot;&gt;&lt;code&gt;GainNode&lt;/code&gt;&lt;/a&gt; using an &lt;a href=&quot;../oscillatornode&quot;&gt;&lt;code&gt;OscillatorNode&lt;/code&gt;&lt;/a&gt; with a slow frequency value. This technique is know as an &lt;em&gt;LFO&lt;/em&gt;-controlled parameter.</source>
          <target state="translated">在此示例中，我们将使用频率值&lt;a href=&quot;../gainnode&quot;&gt; &lt;code&gt;GainNode&lt;/code&gt; &lt;/a&gt;的&lt;a href=&quot;../oscillatornode&quot;&gt; &lt;code&gt;OscillatorNode&lt;/code&gt; &lt;/a&gt;来更改GainNode的增益值。该技术称为&lt;em&gt;LFO&lt;/em&gt;控制的参数。</target>
        </trans-unit>
        <trans-unit id="19f0b555340040f31f931795cc5628714d581fce" translate="yes" xml:space="preserve">
          <source>In this example, we will open an &lt;a href=&quot;../rtcdatachannel&quot;&gt;&lt;code&gt;RTCDataChannel&lt;/code&gt;&lt;/a&gt; connection linking two elements on the same page. While that's obviously a contrived scenario, it's useful for demonstrating the flow of connecting two peers. We'll cover the mechanics of accomplishing the connection and transmitting and receiving data, but we will save the bits about locating and linking to a remote computer for another example.</source>
          <target state="translated">在此示例中，我们将打开&lt;a href=&quot;../rtcdatachannel&quot;&gt; &lt;code&gt;RTCDataChannel&lt;/code&gt; &lt;/a&gt;连接，该连接链接同一页面上的两个元素。虽然这显然是人为的情况，但对于演示连接两个对等方的流程很有用。我们将介绍完成连接以及发送和接收数据的机制，但是在另一个示例中，我们将保留有关定位和链接到远程计算机的内容。</target>
        </trans-unit>
        <trans-unit id="ebc0efdb9335d1e7ab7fba33a0a6e566348c0244" translate="yes" xml:space="preserve">
          <source>In this example, we'll actually rotate our square plane.</source>
          <target state="translated">在这个例子中,我们将实际旋转我们的方形平面。</target>
        </trans-unit>
        <trans-unit id="e2ae0369b063e5cb8b02e4cd4f3cc3db65cf0a8d" translate="yes" xml:space="preserve">
          <source>In this example, we'll create two different gradients. As you can see here, both the &lt;code&gt;strokeStyle&lt;/code&gt; and &lt;code&gt;fillStyle&lt;/code&gt; properties can accept a &lt;code&gt;canvasGradient&lt;/code&gt; object as valid input.</source>
          <target state="translated">在此示例中，我们将创建两个不同的渐变。如您在这里看到的， &lt;code&gt;strokeStyle&lt;/code&gt; 和 &lt;code&gt;fillStyle&lt;/code&gt; 属性都可以接受 &lt;code&gt;canvasGradient&lt;/code&gt; 对象作为有效输入。</target>
        </trans-unit>
        <trans-unit id="814128aec4e84ce67ab137a622034343272a35c8" translate="yes" xml:space="preserve">
          <source>In this example, we'll define four different radial gradients. Because we have control over the start and closing points of the gradient, we can achieve more complex effects than we would normally have in the &quot;classic&quot; radial gradients we see in, for instance, Photoshop (that is, a gradient with a single center point where the gradient expands outward in a circular shape).</source>
          <target state="translated">在这个例子中,我们将定义四个不同的径向渐变。因为我们可以控制梯度的起始点和结束点,所以我们可以实现比我们通常在Photoshop等 &quot;经典 &quot;径向梯度中看到的更复杂的效果(即具有单一中心点的梯度,梯度以圆形向外扩展)。</target>
        </trans-unit>
        <trans-unit id="abf24155846543a1d608deadac53d6bae4401a7a" translate="yes" xml:space="preserve">
          <source>In this example, we'll demonstrate how changing the orientation parameters of a &lt;a href=&quot;../pannernode&quot;&gt;&lt;code&gt;PannerNode&lt;/code&gt;&lt;/a&gt; in combination with &lt;a href=&quot;coneinnerangle&quot;&gt;&lt;code&gt;coneInnerAngle&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;coneouterangle&quot;&gt;&lt;code&gt;coneOuterAngle&lt;/code&gt;&lt;/a&gt; affects volume. To help us visualise how the orientation vector affects, we can use the &lt;a href=&quot;https://en.wikipedia.org/wiki/Right-hand_rule&quot;&gt;Right-hand rule&lt;/a&gt;:</source>
          <target state="translated">在此示例中，我们将演示结合&lt;a href=&quot;coneinnerangle&quot;&gt; &lt;code&gt;coneInnerAngle&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;coneouterangle&quot;&gt; &lt;code&gt;coneOuterAngle&lt;/code&gt; &lt;/a&gt;更改&lt;a href=&quot;../pannernode&quot;&gt; &lt;code&gt;PannerNode&lt;/code&gt; &lt;/a&gt;的方向参数如何影响体积。为了帮助我们直观地了解方向矢量的影响方式，我们可以使用&lt;a href=&quot;https://en.wikipedia.org/wiki/Right-hand_rule&quot;&gt;Right-hand规则&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="34bd2e6da323133b67c6f5dd47b77a02943750d6" translate="yes" xml:space="preserve">
          <source>In this example, we'll draw a background of four different colored squares. On top of these, we'll draw a set of semi-transparent circles. The &lt;code&gt;globalAlpha&lt;/code&gt; property is set at &lt;code&gt;0.2&lt;/code&gt; which will be used for all shapes from that point on. Every step in the &lt;code&gt;for&lt;/code&gt; loop draws a set of circles with an increasing radius. The final result is a radial gradient. By overlaying ever more circles on top of each other, we effectively reduce the transparency of the circles that have already been drawn. By increasing the step count and in effect drawing more circles, the background would completely disappear from the center of the image.</source>
          <target state="translated">在此示例中，我们将绘制四个不同颜色的正方形的背景。在这些之上，我们将绘制一组半透明的圆。所述 &lt;code&gt;globalAlpha&lt;/code&gt; 的属性被设定为 &lt;code&gt;0.2&lt;/code&gt; ，其将用于从该点上的所有形状。 &lt;code&gt;for&lt;/code&gt; 循环中的每个步骤都会绘制一组半径逐渐增大的圆。最终结果是径向渐变。通过将更多的圆圈彼此叠加，我们有效地降低了已经绘制的圆圈的透明度。通过增加步数并实际上画出更多的圆圈，背景将从图像中心完全消失。</target>
        </trans-unit>
        <trans-unit id="e9e6f189c11322e25d3b6e4f1f02eabbb327fe6b" translate="yes" xml:space="preserve">
          <source>In this example, we'll draw three lines, each with a different value for the &lt;code&gt;lineCap&lt;/code&gt; property. I also added two guides to see the exact differences between the three. Each of these lines starts and ends exactly on these guides.</source>
          <target state="translated">在此示例中，我们将绘制三行，每行的 &lt;code&gt;lineCap&lt;/code&gt; 属性值都不同。我还添加了两个指南，以了解三个指南之间的确切区别。这些行中的每一行都在这些指南上准确地开始和结束。</target>
        </trans-unit>
        <trans-unit id="4f43b2c421608328632877c3d333f1f5d4347714" translate="yes" xml:space="preserve">
          <source>In this example, we'll take a look at how you can use &lt;a href=&quot;window/requestidlecallback&quot;&gt;&lt;code&gt;requestIdleCallback()&lt;/code&gt;&lt;/a&gt; to run time-consuming, low-priority tasks during time the browser would otherwise be idle. In addition, this example demonstrates how to schedule updates to the document content using &lt;a href=&quot;window/requestanimationframe&quot;&gt;&lt;code&gt;requestAnimationFrame()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在此示例中，我们将研究如何在浏览器空闲之前使用&lt;a href=&quot;window/requestidlecallback&quot;&gt; &lt;code&gt;requestIdleCallback()&lt;/code&gt; &lt;/a&gt;运行耗时的低优先级任务。此外，此示例演示了如何使用&lt;a href=&quot;window/requestanimationframe&quot;&gt; &lt;code&gt;requestAnimationFrame()&lt;/code&gt; &lt;/a&gt;安排对文档内容的更新。</target>
        </trans-unit>
        <trans-unit id="17e17790be8217891122ba9446c743e32e6b8ece" translate="yes" xml:space="preserve">
          <source>In this example, we'll use a circular clipping path to restrict the drawing of a set of random stars to a particular region.</source>
          <target state="translated">在这个例子中,我们将使用一个循环剪裁路径,将一组随机星体的绘制限制在一个特定的区域。</target>
        </trans-unit>
        <trans-unit id="266ee78f5cef2206a78b0c9edd7e566f1c1b980e" translate="yes" xml:space="preserve">
          <source>In this example, we'll use an image as a wallpaper and repeat it several times on the canvas. This is done simply by looping and placing the scaled images at different positions. In the code below, the first &lt;code&gt;for&lt;/code&gt; loop iterates over the rows. The second &lt;code&gt;for&lt;/code&gt; loop iterates over the columns. The image is scaled to one third of its original size, which is 50x38 pixels.</source>
          <target state="translated">在此示例中，我们将使用图像作为墙纸，并在画布上重复几次。只需通过将缩放后的图像循环放置在不同位置即可完成此操作。在下面的代码中，第一个 &lt;code&gt;for&lt;/code&gt; 循环遍历各行。第二个 &lt;code&gt;for&lt;/code&gt; 循环遍历各列。图像缩放到其原始大小的三分之一，即50x38像素。</target>
        </trans-unit>
        <trans-unit id="022a2e3e42b8d904439f150fc539e6602925f0ad" translate="yes" xml:space="preserve">
          <source>In this example, we'll use the &lt;code&gt;rotate()&lt;/code&gt; method to first rotate a rectangle from the canvas origin and then from the center of the rectangle itself with the help of &lt;code&gt;translate()&lt;/code&gt;.</source>
          <target state="translated">在此示例中，我们将使用 &lt;code&gt;rotate()&lt;/code&gt; 方法首先从画布原点旋转一个矩形，然后在 &lt;code&gt;translate()&lt;/code&gt; 的帮助下从矩形本身的中心旋转一个矩形。</target>
        </trans-unit>
        <trans-unit id="c58fa8c8ea0380b25ba655c866f0bb3a7fd8a411" translate="yes" xml:space="preserve">
          <source>In this example, we'll use the same rhino as in the previous example, but we'll slice out its head and composite it into a picture frame. The picture frame image is a 24-bit PNG which includes a drop shadow. Because 24-bit PNG images include a full 8-bit alpha channel, unlike GIF and 8-bit PNG images, it can be placed onto any background without worrying about a matte color.</source>
          <target state="translated">在这个例子中,我们将使用与前一个例子相同的犀牛,但我们将切出它的头部,并将其合成为一个相框。画框图像是一个24位的PNG图像,其中包括一个阴影。因为24位PNG图像包括一个完整的8位alpha通道,不同于GIF和8位PNG图像,所以它可以放在任何背景上,而不用担心哑光色。</target>
        </trans-unit>
        <trans-unit id="05ea17c4f059e35225af14b1428fb4f8cc607a3f" translate="yes" xml:space="preserve">
          <source>In this example, we're not computing any lighting at all, since we haven't yet applied any to the scene. That will come later, in the example &lt;a href=&quot;lighting_in_webgl&quot;&gt;Lighting in WebGL&lt;/a&gt;. Note also the lack of any work with textures here; that will be added in &lt;a href=&quot;using_textures_in_webgl&quot;&gt;Using textures in WebGL&lt;/a&gt;.</source>
          <target state="translated">在此示例中，由于我们还没有将任何照明应用于场景，因此我们根本不计算任何照明。稍后，&lt;a href=&quot;lighting_in_webgl&quot;&gt;在WebGL&lt;/a&gt;中的Lighting示例中。还要注意，这里没有任何关于纹理的工作。将在&amp;ldquo; &lt;a href=&quot;using_textures_in_webgl&quot;&gt;在WebGL&lt;/a&gt;中使用纹理&amp;rdquo;中添加。</target>
        </trans-unit>
        <trans-unit id="c2f0f67e4ce391ad82aaecc6f16683f4555d0d01" translate="yes" xml:space="preserve">
          <source>In this example, we're turning the element with the ID &lt;code&gt;dropbox&lt;/code&gt; into our drop zone. This is done by adding listeners for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragenter&quot;&gt;dragenter&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragover&quot;&gt;dragover&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/drop&quot;&gt;drop&lt;/a&gt;&lt;/code&gt; events.</source>
          <target state="translated">在此示例中，我们将具有ID &lt;code&gt;dropbox&lt;/code&gt; 的元素放入拖放区。这可以通过为 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragenter&quot;&gt;dragenter&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragover&quot;&gt;dragover&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/drop&quot;&gt;drop&lt;/a&gt;&lt;/code&gt; 事件添加侦听器来完成。</target>
        </trans-unit>
        <trans-unit id="30fd2479a473fe2accd8672d7ae0f1020810c674" translate="yes" xml:space="preserve">
          <source>In this example, when selecting &lt;code&gt;&quot;.outer .inner&quot;&lt;/code&gt; in the context the &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; with the class &lt;code&gt;&quot;select&quot;&lt;/code&gt;, the element with the class &lt;code&gt;&quot;.inner&quot;&lt;/code&gt; is still found, even though &lt;code&gt;.outer&lt;/code&gt; is not a descendant of the base element on which the search is performed (&lt;code&gt;&quot;.select&quot;&lt;/code&gt;). By default, &lt;code&gt;querySelectorAll()&lt;/code&gt; only verifies that the last element in the selector is within the search scope.</source>
          <target state="translated">在此示例中，当在具有类 &lt;code&gt;&quot;select&quot;&lt;/code&gt; 的 &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; 上下文中选择 &lt;code&gt;&quot;.outer .inner&quot;&lt;/code&gt; 时，即使 &lt;code&gt;.outer&lt;/code&gt; 不是基类的后代，仍会找到具有类 &lt;code&gt;&quot;.inner&quot;&lt;/code&gt; 的元素。在其上执行搜索的元素（ &lt;code&gt;&quot;.select&quot;&lt;/code&gt; ）。默认情况下， &lt;code&gt;querySelectorAll()&lt;/code&gt; 仅验证选择器中的最后一个元素在搜索范围内。</target>
        </trans-unit>
        <trans-unit id="cca8b2079efbc5a79438c07b451ae507ba7434a5" translate="yes" xml:space="preserve">
          <source>In this example, you use the &lt;a href=&quot;../pointer_events&quot;&gt;&lt;code&gt;pointer events&lt;/code&gt;&lt;/a&gt; to simultaneously detect two pointing devices of any type, including fingers, mice, and pens. The pinch in (zoom out ) gesture, which moves the two pointers toward each other, changes the target element's background color to &lt;code&gt;lightblue&lt;/code&gt;. The pinch out (zoom in) gesture, which moves the two pointers away from each other, changes the target element's background color to &lt;code&gt;pink&lt;/code&gt;.</source>
          <target state="translated">在此示例中，您将使用&lt;a href=&quot;../pointer_events&quot;&gt; &lt;code&gt;pointer events&lt;/code&gt; &lt;/a&gt;来同时检测两个任何类型的指针设备，包括手指，鼠标和笔。捏合（缩小）手势将两个指针彼此相对移动，将目标元素的背景色更改为 &lt;code&gt;lightblue&lt;/code&gt; 。缩小（放大）手势使两个指针彼此远离，将目标元素的背景色更改为 &lt;code&gt;pink&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5046379abd72346ca7dcb8f46945c3c6656e0318" translate="yes" xml:space="preserve">
          <source>In this first example, the first &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/style&quot;&gt;&lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt;&lt;/a&gt; element which either has no type or has type &quot;text/css&quot; in the HTML document body is returned:</source>
          <target state="translated">在第一个示例中，返回第一个&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/style&quot;&gt; &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt; &lt;/a&gt;元素，该元素在HTML文档主体中没有类型或类型为&amp;ldquo; text / css&amp;rdquo;：</target>
        </trans-unit>
        <trans-unit id="fda36049e9aa613d57cbac65ccca7948c4968fc7" translate="yes" xml:space="preserve">
          <source>In this game, Alice has an animation that causes her to go from small to big which we control via a bottle and a cupcake. Both of these have their own animations.</source>
          <target state="translated">在这个游戏中,爱丽丝有一个动画,导致她从小到大,我们通过一个瓶子和一个纸杯蛋糕来控制。这两个都有自己的动画。</target>
        </trans-unit>
        <trans-unit id="bb79012abaf6107ed9af637c940e7ec0f1c7c46e" translate="yes" xml:space="preserve">
          <source>In this group, &lt;code&gt;mozilla.org&lt;/code&gt;, &lt;code&gt;www.mozilla.org&lt;/code&gt;, and &lt;code&gt;joe.blogs.mozilla.org&lt;/code&gt; can aggregately use a maximum of 20% of the global limit. &lt;code&gt;firefox.com&lt;/code&gt; has a separate maximum of 20%.</source>
          <target state="translated">在该组中， &lt;code&gt;mozilla.org&lt;/code&gt; ， &lt;code&gt;www.mozilla.org&lt;/code&gt; 和 &lt;code&gt;joe.blogs.mozilla.org&lt;/code&gt; 最多可以合计使用全局限制的20％。 &lt;code&gt;firefox.com&lt;/code&gt; 的单独上限为20％。</target>
        </trans-unit>
        <trans-unit id="a8e182f7ec1df8b63f7f0149897b2fd1b4dac845" translate="yes" xml:space="preserve">
          <source>In this guide, we'll take a look at how to use &lt;a href=&quot;../xmlhttprequest&quot;&gt;&lt;code&gt;XMLHttpRequest&lt;/code&gt;&lt;/a&gt; to issue &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP&quot;&gt;HTTP&lt;/a&gt; requests in order to exchange data between the web site and a server. Examples of both common and more obscure use cases for &lt;code&gt;XMLHttpRequest&lt;/code&gt; are included.</source>
          <target state="translated">在本指南中，我们将研究如何使用&lt;a href=&quot;../xmlhttprequest&quot;&gt; &lt;code&gt;XMLHttpRequest&lt;/code&gt; &lt;/a&gt;发出&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP&quot;&gt;HTTP&lt;/a&gt;请求，以便在网站和服务器之间交换数据。包括 &lt;code&gt;XMLHttpRequest&lt;/code&gt; 的常见和较晦涩的用例的示例。</target>
        </trans-unit>
        <trans-unit id="59f5b5a68fd39578d554023865d5245c7df478f2" translate="yes" xml:space="preserve">
          <source>In this last example, we'll create a pattern to assign to the &lt;code&gt;fillStyle&lt;/code&gt; property. The only thing worth noting is the use of the image's &lt;code&gt;onload&lt;/code&gt; handler. This is to make sure the image is loaded before it is assigned to the pattern.</source>
          <target state="translated">在最后一个示例中，我们将创建一个模式以分配给 &lt;code&gt;fillStyle&lt;/code&gt; 属性。唯一值得注意的是使用映像的 &lt;code&gt;onload&lt;/code&gt; 处理程序。这是为了确保在将图像分配给花样之前已将其加载。</target>
        </trans-unit>
        <trans-unit id="7ef73d8b96e3c24bc5aaa79fb46030447718ec1c" translate="yes" xml:space="preserve">
          <source>In this last example, we'll draw shapes with different scaling factors.</source>
          <target state="translated">在最后一个例子中,我们将用不同的缩放因子绘制形状。</target>
        </trans-unit>
        <trans-unit id="61ca7ed45b8da0b66d08458393d793cf5ef4808a" translate="yes" xml:space="preserve">
          <source>In this revised example, the audio and video capabilities include possible codecs which should be permitted, and therefore are valid requests.</source>
          <target state="translated">在这个修改后的例子中,音频和视频功能包括可能的编解码器,这些编解码器应该被允许,因此是有效的请求。</target>
        </trans-unit>
        <trans-unit id="51085302b40fcc099af63f040e198ec714817da9" translate="yes" xml:space="preserve">
          <source>In this sample from a hypothetical instant messaging client, a data channel is created, then handlers for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; events are set up to enable and disable user interface objects based on the state of the channel. This way, the message entry field and the send button are only enabled for use when the connection is actually open.</source>
          <target state="translated">在来自假设的即时消息传递客户端的此示例中，创建了一个数据通道，然后设置了 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; 事件的处理程序，以基于通道的状态启用和禁用用户界面对象。这样，仅在实际打开连接时才启用消息输入字段和发送按钮。</target>
        </trans-unit>
        <trans-unit id="379d3246f5406ec54e7fd0d095b9573687300cf0" translate="yes" xml:space="preserve">
          <source>In this second example, we do something similar to the one above, but instead of drawing circles on top of each other, I've drawn small rectangles with increasing opacity. Using &lt;code&gt;rgba()&lt;/code&gt; gives you a little more control and flexibility because we can set the fill and stroke style individually.</source>
          <target state="translated">在第二个示例中，我们进行了与上述操作类似的操作，但我没有绘制彼此重叠的圆，而是绘制了不透明性增加的小矩形。使用 &lt;code&gt;rgba()&lt;/code&gt; 给您更多的控制和灵活性，因为我们可以分别设置填充和描边样式。</target>
        </trans-unit>
        <trans-unit id="5f2cb59106a8f250c21ba056000d24c7048b0a78" translate="yes" xml:space="preserve">
          <source>In this section</source>
          <target state="translated">在本节中</target>
        </trans-unit>
        <trans-unit id="a3f0061b9db31137ebd46a70468da2be4481cf47" translate="yes" xml:space="preserve">
          <source>In this section we will first cover the older callback-based system and then the newer promise-based syntax.</source>
          <target state="translated">在本节中,我们将首先介绍较老的基于回调的系统,然后介绍较新的基于承诺的语法。</target>
        </trans-unit>
        <trans-unit id="f5e6a6420d067c107db21582be6db10d8306f1d7" translate="yes" xml:space="preserve">
          <source>In this section we'll discuss the &lt;code&gt;displayPoseStats()&lt;/code&gt; function, which displays our updated pose data on each frame. The function is fairly simple.</source>
          <target state="translated">在本节中，我们将讨论 &lt;code&gt;displayPoseStats()&lt;/code&gt; 函数，该函数在每帧上显示更新的姿势数据。功能相当简单。</target>
        </trans-unit>
        <trans-unit id="9cc82d7cefd9413d0371a52786476131facb6c5f" translate="yes" xml:space="preserve">
          <source>In this simple example, an event listener for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/ended&quot;&gt;ended&lt;/a&gt;&lt;/code&gt; event is set up to enable a &quot;Start&quot; button in the user interface when the node stops playing.</source>
          <target state="translated">在此简单示例中，设置了 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/ended&quot;&gt;ended&lt;/a&gt;&lt;/code&gt; 事件的事件侦听器，以在节点停止播放时启用用户界面中的&amp;ldquo;开始&amp;rdquo;按钮。</target>
        </trans-unit>
        <trans-unit id="b95f20b6e939798cff1ad8b1476f55e7ed05bbb3" translate="yes" xml:space="preserve">
          <source>In this simple example, an intersection callback is used to update a counter of how many targeted elements are currently intersecting with the &lt;a href=&quot;../intersectionobserver/root&quot;&gt;intersection root&lt;/a&gt;.</source>
          <target state="translated">在此简单示例中，交集回调用于更新当前与&lt;a href=&quot;../intersectionobserver/root&quot;&gt;交集根&lt;/a&gt;相交的目标元素的计数器。</target>
        </trans-unit>
        <trans-unit id="2f69406f44746401693b0b0ca00283839421f947" translate="yes" xml:space="preserve">
          <source>In this simple example, an intersection callback sets each target element's &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/opacity&quot;&gt;&lt;code&gt;opacity&lt;/code&gt;&lt;/a&gt; to the intersection ratio of that element with the root.</source>
          <target state="translated">在这个简单的示例中，交集回调将每个目标元素的&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/opacity&quot;&gt; &lt;code&gt;opacity&lt;/code&gt; &lt;/a&gt;设置为该元素与根的交集比率。</target>
        </trans-unit>
        <trans-unit id="8770d442b646ceb6f776efde1f482da12ad52e60" translate="yes" xml:space="preserve">
          <source>In this simple example, an intersection callback stores the intersection rectangle for later use by the code that draws the target elements' contents, so that only the visible area is redrawn.</source>
          <target state="translated">在这个简单的例子中,交集回调存储了交集矩形,供以后绘制目标元素内容的代码使用,因此只有可见区域被重新绘制。</target>
        </trans-unit>
        <trans-unit id="83744b534492cb2ff2bd028e44378cb72e7e58c5" translate="yes" xml:space="preserve">
          <source>In this simple example, each targeted element's &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/opacity&quot;&gt;&lt;code&gt;opacity&lt;/code&gt;&lt;/a&gt; is set to its &lt;a href=&quot;intersectionratio&quot;&gt;&lt;code&gt;intersectionRatio&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在这个简单的示例中，每个目标元素的&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/opacity&quot;&gt; &lt;code&gt;opacity&lt;/code&gt; &lt;/a&gt;都设置为其&lt;a href=&quot;intersectionratio&quot;&gt; &lt;code&gt;intersectionRatio&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="dc3628ae8209202b0b2c37b436dfd071255a3fef" translate="yes" xml:space="preserve">
          <source>In this simple example, some basic style properties of an HTML paragraph element are accessed using the style object on the element and that object's CSS style properties, which can be retrieved and set from the DOM. In this case, you are manipulating the individual styles directly. In the next example (see Example 4), you can use stylesheets and their rules to change styles for whole documents.</source>
          <target state="translated">在这个简单的例子中,使用元素上的样式对象和该对象的CSS样式属性来访问一个HTML段落元素的一些基本样式属性,这些属性可以从DOM中检索和设置。在这种情况下,你是直接操作各个样式。在下一个例子中(见例4),你可以使用样式表和它们的规则来改变整个文档的样式。</target>
        </trans-unit>
        <trans-unit id="1fc9de96d086a09ee6097fc69fdf1594bb8c872e" translate="yes" xml:space="preserve">
          <source>In this simple example, we declare both an &lt;a href=&quot;../audiocontext&quot;&gt;&lt;code&gt;AudioContext&lt;/code&gt;&lt;/a&gt; and an &lt;code&gt;OfflineAudioContext&lt;/code&gt; object. We use the &lt;code&gt;AudioContext&lt;/code&gt; to load an audio track via XHR (&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AudioContext/decodeAudioData&quot;&gt;&lt;code&gt;AudioContext.decodeAudioData&lt;/code&gt;&lt;/a&gt;), then the &lt;code&gt;OfflineAudioContext&lt;/code&gt; to render the audio into an &lt;a href=&quot;../audiobuffersourcenode&quot;&gt;&lt;code&gt;AudioBufferSourceNode&lt;/code&gt;&lt;/a&gt; and play the track through. After the offline audio graph is set up, you need to render it to an &lt;a href=&quot;../audiobuffer&quot;&gt;&lt;code&gt;AudioBuffer&lt;/code&gt;&lt;/a&gt; using &lt;a href=&quot;startrendering&quot;&gt;&lt;code&gt;OfflineAudioContext.startRendering&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在这个简单的示例中，我们声明了一个&lt;a href=&quot;../audiocontext&quot;&gt; &lt;code&gt;AudioContext&lt;/code&gt; &lt;/a&gt;和一个 &lt;code&gt;OfflineAudioContext&lt;/code&gt; 对象。我们使用 &lt;code&gt;AudioContext&lt;/code&gt; 通过XHR（&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AudioContext/decodeAudioData&quot;&gt; &lt;code&gt;AudioContext.decodeAudioData&lt;/code&gt; &lt;/a&gt;）加载音轨，然后使用 &lt;code&gt;OfflineAudioContext&lt;/code&gt; 将音频渲染到&lt;a href=&quot;../audiobuffersourcenode&quot;&gt; &lt;code&gt;AudioBufferSourceNode&lt;/code&gt; 中&lt;/a&gt;并播放音轨。设置离线音频图后，您需要使用&lt;a href=&quot;startrendering&quot;&gt; &lt;code&gt;OfflineAudioContext.startRendering&lt;/code&gt; &lt;/a&gt;将其呈现到&lt;a href=&quot;../audiobuffer&quot;&gt; &lt;code&gt;AudioBuffer&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="82e4af4070c1ad769f784c88b76d773a5e5c44ea" translate="yes" xml:space="preserve">
          <source>In this simple example, we declare both an &lt;a href=&quot;audiocontext&quot;&gt;&lt;code&gt;AudioContext&lt;/code&gt;&lt;/a&gt; and an &lt;code&gt;OfflineAudioContext&lt;/code&gt; object. We use the &lt;code&gt;AudioContext&lt;/code&gt; to load an audio track via XHR (&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AudioContext/decodeAudioData&quot;&gt;&lt;code&gt;AudioContext.decodeAudioData&lt;/code&gt;&lt;/a&gt;), then the &lt;code&gt;OfflineAudioContext&lt;/code&gt; to render the audio into an &lt;a href=&quot;audiobuffersourcenode&quot;&gt;&lt;code&gt;AudioBufferSourceNode&lt;/code&gt;&lt;/a&gt; and play the track through. After the offline audio graph is set up, you need to render it to an &lt;a href=&quot;audiobuffer&quot;&gt;&lt;code&gt;AudioBuffer&lt;/code&gt;&lt;/a&gt; using &lt;a href=&quot;offlineaudiocontext/startrendering&quot;&gt;&lt;code&gt;OfflineAudioContext.startRendering&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在这个简单的示例中，我们声明了一个&lt;a href=&quot;audiocontext&quot;&gt; &lt;code&gt;AudioContext&lt;/code&gt; &lt;/a&gt;和一个 &lt;code&gt;OfflineAudioContext&lt;/code&gt; 对象。我们使用 &lt;code&gt;AudioContext&lt;/code&gt; 通过XHR（&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AudioContext/decodeAudioData&quot;&gt; &lt;code&gt;AudioContext.decodeAudioData&lt;/code&gt; &lt;/a&gt;）加载音轨，然后使用 &lt;code&gt;OfflineAudioContext&lt;/code&gt; 将音频渲染到&lt;a href=&quot;audiobuffersourcenode&quot;&gt; &lt;code&gt;AudioBufferSourceNode&lt;/code&gt; 中&lt;/a&gt;并播放音轨。设置离线音频图后，您需要使用&lt;a href=&quot;offlineaudiocontext/startrendering&quot;&gt; &lt;code&gt;OfflineAudioContext.startRendering&lt;/code&gt; &lt;/a&gt;将其呈现到&lt;a href=&quot;audiobuffer&quot;&gt; &lt;code&gt;AudioBuffer&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="681ab51c9dd14526c8ee92e5a13e0431bfa956dd" translate="yes" xml:space="preserve">
          <source>In this simple example, we fetch the user's location and display the resulting coordinates once they're returned.</source>
          <target state="translated">在这个简单的例子中,我们获取用户的位置,并在返回后显示结果坐标。</target>
        </trans-unit>
        <trans-unit id="a05d3336a426baa2f1e1a5bcaabb75b821cb1751" translate="yes" xml:space="preserve">
          <source>In this simple fragment we create a transaction, retrieve an object store, then count the number of records in the store using &lt;code&gt;count()&lt;/code&gt; &amp;mdash; when the success handler fires, we log the count value (an integer) to the console.</source>
          <target state="translated">在这个简单的片段中，我们创建一个事务，检索一个对象存储，然后使用 &lt;code&gt;count()&lt;/code&gt; 对存储中的记录数进行计数 -当成功处理程序触发时，我们将计数值（一个整数）记录到控制台。</target>
        </trans-unit>
        <trans-unit id="55594aaf4907355f8a97d6ded8e81c58aeddff5c" translate="yes" xml:space="preserve">
          <source>In this simple fragment we create a transaction, retrieve an object store, then use a cursor to iterate through all the records in the object store. If the &lt;code&gt;albumTitle&lt;/code&gt; of the current cursor is &quot;A farewell to kings&quot;, we update year the album was released using &lt;code&gt;var request = cursor.update();&lt;/code&gt;.</source>
          <target state="translated">在这个简单的片段中，我们创建一个事务，检索对象存储，然后使用游标遍历对象存储中的所有记录。如果当前光标的专辑 &lt;code&gt;albumTitle&lt;/code&gt; 是&amp;ldquo;告别国王&amp;rdquo;，则使用 &lt;code&gt;var request = cursor.update();&lt;/code&gt; 更新专辑发行的年份。。</target>
        </trans-unit>
        <trans-unit id="d622d98b6db09b89272000416c2a7cda1761e9c2" translate="yes" xml:space="preserve">
          <source>In this simple fragment we create a transaction, retrieve an object store, then use a cursor to iterate through all the records in the object store. If the &lt;code&gt;albumTitle&lt;/code&gt; of the current cursor is &quot;Grace under pressure&quot;, we delete that entire record using &lt;code&gt;var request = cursor.delete();&lt;/code&gt;.</source>
          <target state="translated">在这个简单的片段中，我们创建一个事务，检索对象存储，然后使用游标遍历对象存储中的所有记录。如果当前光标的 &lt;code&gt;albumTitle&lt;/code&gt; 为&amp;ldquo;压力下的宽限期&amp;rdquo;，我们将使用 &lt;code&gt;var request = cursor.delete();&lt;/code&gt; 删除整个记录。。</target>
        </trans-unit>
        <trans-unit id="32aec80fac39a5ef7f1168b19d20800c4854adba" translate="yes" xml:space="preserve">
          <source>In this simple fragment we create a transaction, retrieve an object store, then use a cursor to iterate through all the records in the object store. The cursor does not require us to select the data based on a key; we can just grab all of it. Also note that in each iteration of the loop, you can grab data from the current record under the cursor object using &lt;code&gt;cursor.value.foo&lt;/code&gt;. For a complete working example, see our &lt;a href=&quot;https://github.com/mdn/indexeddb-examples/tree/master/idbcursor&quot;&gt;IDBCursor example&lt;/a&gt; (&lt;a href=&quot;https://mdn.github.io/indexeddb-examples/idbcursor/&quot;&gt;view example live&lt;/a&gt;.)</source>
          <target state="translated">在这个简单的片段中，我们创建一个事务，检索对象存储，然后使用游标遍历对象存储中的所有记录。游标不需要我们根据键选择数据；我们可以抓住所有这些。还要注意，在循环的每次迭代中，都可以使用 &lt;code&gt;cursor.value.foo&lt;/code&gt; 从光标对象下的当前记录中获取数据。有关完整的工作示例，请参阅我们的&lt;a href=&quot;https://github.com/mdn/indexeddb-examples/tree/master/idbcursor&quot;&gt;IDBCursor示例&lt;/a&gt;（&lt;a href=&quot;https://mdn.github.io/indexeddb-examples/idbcursor/&quot;&gt;查看示例live&lt;/a&gt;。）</target>
        </trans-unit>
        <trans-unit id="832a70d0e060bd84daa7eb798d106c513fdb77c8" translate="yes" xml:space="preserve">
          <source>In this simple fragment we create a transaction, retrieve an object store, then use a cursor to iterate through all the records in the object store. Within each iteration we log the direction of the cursor, something like this:</source>
          <target state="translated">在这个简单的片段中,我们创建了一个事务,检索了一个对象存储,然后使用游标来遍历对象存储中的所有记录。在每一次迭代中,我们都会记录游标的方向,类似这样。</target>
        </trans-unit>
        <trans-unit id="814c0e566f410daf5c70e8490e53955f7fb4b66a" translate="yes" xml:space="preserve">
          <source>In this simple fragment we create a transaction, retrieve an object store, then use a cursor to iterate through all the records in the object store. Within each iteration we log the key of the cursor to the console, something like this (its the album title in each case, which is our key).</source>
          <target state="translated">在这个简单的片段中,我们创建了一个事务,检索了一个对象存储,然后使用游标来遍历对象存储中的所有记录。在每一次迭代中,我们将游标的键记录到控制台,类似于这样(在每一个案例中,专辑名是我们的键)。</target>
        </trans-unit>
        <trans-unit id="4cba140ebb5bc58e4a4354e3c40ea79f806a0635" translate="yes" xml:space="preserve">
          <source>In this simple fragment we create a transaction, retrieve an object store, then use a cursor to iterate through all the records in the object store. Within each iteration we log the primary key of the cursor to the console, something like this (its the album title in each case, which is our primarykey):</source>
          <target state="translated">在这个简单的片段中,我们创建了一个事务,检索了一个对象存储,然后使用游标来遍历对象存储中的所有记录。在每一次迭代中,我们将游标的主键记录到控制台中,类似于这样(在每一个案例中,专辑名是我们的主键)。</target>
        </trans-unit>
        <trans-unit id="850d106da3d9514aacc08416cf7006deab08d008" translate="yes" xml:space="preserve">
          <source>In this simple fragment we create a transaction, retrieve an object store, then use a cursor to iterate through all the records in the object store. Within each iteration we log the source of the cursor, which will log our &lt;a href=&quot;../idbobjectstore&quot;&gt;&lt;code&gt;IDBobjectStore&lt;/code&gt;&lt;/a&gt; object to the console, something like this:</source>
          <target state="translated">在这个简单的片段中，我们创建一个事务，检索对象存储，然后使用游标遍历对象存储中的所有记录。在每次迭代中，我们记录游标的源，这会将我们的&lt;a href=&quot;../idbobjectstore&quot;&gt; &lt;code&gt;IDBobjectStore&lt;/code&gt; &lt;/a&gt;对象记录到控制台，如下所示：</target>
        </trans-unit>
        <trans-unit id="cc976e76f4d1f788c617666a202ae23adcd40597" translate="yes" xml:space="preserve">
          <source>In this simple fragment we create a transaction, retrieve an object store, then use a cursor to iterate through all the records in the object store:</source>
          <target state="translated">在这个简单的片段中,我们创建一个事务,检索一个对象存储,然后使用游标迭代对象存储中的所有记录。</target>
        </trans-unit>
        <trans-unit id="c5fb75273e3c5815b5208459099c0e2ff4fc42b0" translate="yes" xml:space="preserve">
          <source>In this simple fragment we create a transaction, retrieve an object store, then use a cursor to iterate through the records in the object store. Here we use &lt;code&gt;cursor.advance(2)&lt;/code&gt; to jump 2 places forward each time, meaning that only every other result will be displayed. &lt;code&gt;advance()&lt;/code&gt; works in a similar way to &lt;a href=&quot;continue&quot;&gt;&lt;code&gt;IDBCursor.continue&lt;/code&gt;&lt;/a&gt;, except that it allows you to jump multiple records at a time, not just always go onto the next record.</source>
          <target state="translated">在这个简单的片段中，我们创建一个事务，检索对象存储，然后使用游标遍历对象存储中的记录。在这里，我们使用 &lt;code&gt;cursor.advance(2)&lt;/code&gt; 每次向前跳2个位置，这意味着将仅显示所有其他结果。 &lt;code&gt;advance()&lt;/code&gt; 的工作方式与&lt;a href=&quot;continue&quot;&gt; &lt;code&gt;IDBCursor.continue&lt;/code&gt; &lt;/a&gt;相似，不同之处在于，它允许您一次跳转多个记录，而不仅是跳转到下一个记录。</target>
        </trans-unit>
        <trans-unit id="1368dbb1dc7c76c5a140767ff39a952918de0875" translate="yes" xml:space="preserve">
          <source>In this snapshot of &lt;a href=&quot;https://html.spec.whatwg.org/multipage/&quot;&gt;HTML Living Standard&lt;/a&gt;, the &lt;code&gt;HTMLFormControlsCollections&lt;/code&gt; is defined for the first time.</source>
          <target state="translated">在此&lt;a href=&quot;https://html.spec.whatwg.org/multipage/&quot;&gt;HTML Living Standard&lt;/a&gt;快照中，首次定义了 &lt;code&gt;HTMLFormControlsCollections&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="718876f635ac57f7855f3588069fc256e51f6006" translate="yes" xml:space="preserve">
          <source>In this snippet of code, &lt;code&gt;bufferedAmountLowThreshold&lt;/code&gt; is set to 64kB, and a handler for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/bufferedamountlow&quot;&gt;bufferedamountlow&lt;/a&gt;&lt;/code&gt; event is established by setting the &lt;a href=&quot;onbufferedamountlow&quot;&gt;&lt;code&gt;RTCDataChannel.onbufferedamountlow&lt;/code&gt;&lt;/a&gt; property to a function which should send more data into the buffer by calling &lt;a href=&quot;send&quot;&gt;&lt;code&gt;send()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在此代码段中，将 &lt;code&gt;bufferedAmountLowThreshold&lt;/code&gt; 设置为64kB，并通过将&lt;a href=&quot;onbufferedamountlow&quot;&gt; &lt;code&gt;RTCDataChannel.onbufferedamountlow&lt;/code&gt; &lt;/a&gt;属性设置为一个函数来建立 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/bufferedamountlow&quot;&gt;bufferedamountlow&lt;/a&gt;&lt;/code&gt; 事件的处理程序，该函数应通过调用&lt;a href=&quot;send&quot;&gt; &lt;code&gt;send()&lt;/code&gt; &lt;/a&gt;将更多数据发送到缓冲区中。</target>
        </trans-unit>
        <trans-unit id="d046b27ce4e913f19c224b17b7bc56c497466156" translate="yes" xml:space="preserve">
          <source>In this snippet, a node is being examined for its &lt;a href=&quot;localname&quot;&gt;&lt;code&gt;Node.localName&lt;/code&gt;&lt;/a&gt; and its &lt;code&gt;namespaceURI&lt;/code&gt;. If the &lt;code&gt;namespaceURI&lt;/code&gt; returns the XUL namespace and the &lt;code&gt;localName&lt;/code&gt; returns &quot;browser&quot;, then the node is understood to be a XUL &lt;code&gt;&amp;lt;browser/&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">在此代码段中，正在检查节点的&lt;a href=&quot;localname&quot;&gt; &lt;code&gt;Node.localName&lt;/code&gt; &lt;/a&gt;和 &lt;code&gt;namespaceURI&lt;/code&gt; 。如果 &lt;code&gt;namespaceURI&lt;/code&gt; 返回XUL名称空间，而 &lt;code&gt;localName&lt;/code&gt; 返回&amp;ldquo;浏览器&amp;rdquo;，则该节点将被理解为XUL &lt;code&gt;&amp;lt;browser/&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="12214e1122c220323a9395fe6a1c4c8c5e179dca" translate="yes" xml:space="preserve">
          <source>In this snippet, a previously-created reader is queried to see if the stream has been closed. When it is closed, the promise fulfills and the message is logged to the console.</source>
          <target state="translated">在这个片段中,之前创建的阅读器被查询,以查看流是否已被关闭。当它被关闭时,承诺就会实现,消息会被记录到控制台。</target>
        </trans-unit>
        <trans-unit id="dde13d5e875bf0d7b9496c1520b0ac0209a347fa" translate="yes" xml:space="preserve">
          <source>In this snippet, an attribute is being examined for its &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/LocalName&quot;&gt;&lt;code&gt;localName&lt;/code&gt;&lt;/a&gt; and its &lt;code&gt;namespaceURI&lt;/code&gt;. If the &lt;code&gt;namespaceURI&lt;/code&gt; returns the XUL namespace and the &lt;code&gt;localName&lt;/code&gt; returns &quot;browser&quot;, then the node is understood to be a XUL &lt;code&gt;&amp;lt;browser/&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">在此代码段中，正在检查属性的&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/LocalName&quot;&gt; &lt;code&gt;localName&lt;/code&gt; &lt;/a&gt;和 &lt;code&gt;namespaceURI&lt;/code&gt; 。如果 &lt;code&gt;namespaceURI&lt;/code&gt; 返回XUL名称空间，而 &lt;code&gt;localName&lt;/code&gt; 返回&amp;ldquo;浏览器&amp;rdquo;，则该节点将被理解为XUL &lt;code&gt;&amp;lt;browser/&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d0cfa68d879ef6fc5ac4f7bcb7a16d97b33017d1" translate="yes" xml:space="preserve">
          <source>In this snippet, an element is being examined for its &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/LocalName&quot;&gt;&lt;code&gt;localName&lt;/code&gt;&lt;/a&gt; and its &lt;code&gt;namespaceURI&lt;/code&gt;. If the &lt;code&gt;namespaceURI&lt;/code&gt; returns the XUL namespace and the &lt;code&gt;localName&lt;/code&gt; returns &quot;browser&quot;, then the node is understood to be a XUL &lt;code&gt;&amp;lt;browser/&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">在此代码段中，正在检查元素的&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/LocalName&quot;&gt; &lt;code&gt;localName&lt;/code&gt; &lt;/a&gt;和 &lt;code&gt;namespaceURI&lt;/code&gt; 。如果 &lt;code&gt;namespaceURI&lt;/code&gt; 返回XUL名称空间，而 &lt;code&gt;localName&lt;/code&gt; 返回&amp;ldquo;浏览器&amp;rdquo;，则该节点将被理解为XUL &lt;code&gt;&amp;lt;browser/&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="84cfcc3513c79670f3066a2722a670929030b0e7" translate="yes" xml:space="preserve">
          <source>In this snippet, the video track referenced by &lt;code&gt;videoTrack&lt;/code&gt; is updated so that its resolution as closely as possible matches 1920x1080 pixels (1080p high definition).</source>
          <target state="translated">在此代码段中，对 &lt;code&gt;videoTrack&lt;/code&gt; 引用的视频轨道进行了更新，以使其分辨率尽可能匹配1920x1080像素（1080p高清晰度）。</target>
        </trans-unit>
        <trans-unit id="b731c82fc7714591ccf7a5143c009282ccc24be2" translate="yes" xml:space="preserve">
          <source>In this snippet, which is part of an event handler, the event is checked to see if it generates a character; if it does, the value of &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/UIEvent/which&quot;&gt;&lt;code&gt;UIEvent.which&lt;/code&gt;&lt;/a&gt; is appended to a string which buffers the typed characters.</source>
          <target state="translated">在此片段中，它是事件处理程序的一部分，将检查事件以查看其是否生成了字符；如果存在，则将&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/UIEvent/which&quot;&gt; &lt;code&gt;UIEvent.which&lt;/code&gt; &lt;/a&gt;的值附加到缓冲键入的字符的字符串中。</target>
        </trans-unit>
        <trans-unit id="55f609b09d74ad2c79f4f7660d4aad6ef45e6828" translate="yes" xml:space="preserve">
          <source>In this tutorial</source>
          <target state="translated">在本教程中</target>
        </trans-unit>
        <trans-unit id="be11e027321d8795073b405e53b37ee7625eec0b" translate="yes" xml:space="preserve">
          <source>In this tutorial, we're going to cover sound creation and modification, as well as timing and scheduling. We're going to introduce sample loading, envelopes, filters, wavetables, and frequency modulation. If you're familiar with these terms and you're looking for an introduction to their application within with the Web Audio API, you've come to the right place.</source>
          <target state="translated">在本教程中,我们将介绍声音的创建和修改,以及定时和调度。我们将介绍样本加载、包络、滤波器、波表和频率调制。如果你对这些术语很熟悉,并且正在寻找Web Audio API的应用介绍,那么你来对地方了。</target>
        </trans-unit>
        <trans-unit id="d8279e87f0ef0b99ee25e194ffc668a2709260d1" translate="yes" xml:space="preserve">
          <source>In upcoming pages we'll see two alternative methods for &lt;code&gt;clearRect()&lt;/code&gt;, and we'll also see how to change the color and stroke style of the rendered shapes.</source>
          <target state="translated">在接下来的页面中，我们将看到 &lt;code&gt;clearRect()&lt;/code&gt; 的两种替代方法，并且还将看到如何更改渲染形状的颜色和笔触样式。</target>
        </trans-unit>
        <trans-unit id="2c20088053fbe20aac17f1a6dd9ab682f57c6d8e" translate="yes" xml:space="preserve">
          <source>In version 28, if a negative value is passed to %d, it will be rounded down to the closest negative integer, so -0.1 becomes -1.</source>
          <target state="translated">在第28版中,如果一个负值被传递给%d,它将被四舍五入到最接近的负整数,所以-0.1变成了-1。</target>
        </trans-unit>
        <trans-unit id="a957b2719e6714e1b0526c3b37a182f3c19afb94" translate="yes" xml:space="preserve">
          <source>In version 45, the ability to have multiple shadow roots was deprecated.</source>
          <target state="translated">在45版本中,取消了拥有多个影子根的能力。</target>
        </trans-unit>
        <trans-unit id="6c59c43a51e4c2dbe1031b63a5139168c96dee40" translate="yes" xml:space="preserve">
          <source>In web pages, the window object is also a &lt;em&gt;global object&lt;/em&gt;. This means:</source>
          <target state="translated">在网页中，窗口对象也是&lt;em&gt;全局对象&lt;/em&gt;。这表示：</target>
        </trans-unit>
        <trans-unit id="522d23cd43af81ed0ba9fefced6ae28e6b51c6e5" translate="yes" xml:space="preserve">
          <source>In your application, you may find that some objects need to move or change frequently, while others remain relatively static. A possible optimization in this situation is to layer your items using multiple &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; elements.</source>
          <target state="translated">在您的应用程序中，您可能会发现某些对象需要经常移动或更改，而其他对象则保持相对静态。在这种情况下，可能的优化是使用多个 &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; 元素对您的项目进行分层。</target>
        </trans-unit>
        <trans-unit id="691a6d3c26002fd244c2fe3e46d9247ac2325e8d" translate="yes" xml:space="preserve">
          <source>Inactive tabs</source>
          <target state="translated">不活动的标签</target>
        </trans-unit>
        <trans-unit id="9d57a8f5a6ecb6d09aa18654fd3572fb220d7cea" translate="yes" xml:space="preserve">
          <source>Inappropriate use cases include:</source>
          <target state="translated">不适当的使用案例包括:</target>
        </trans-unit>
        <trans-unit id="63be67330c43c8775d88e054ce632bca21a2f3d0" translate="yes" xml:space="preserve">
          <source>Include adapter.js in your project: &lt;code&gt;&amp;lt;script src=&quot;adapter.js&quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;/code&gt;</source>
          <target state="translated">在您的项目中包含adapter.js： &lt;code&gt;&amp;lt;script src=&quot;adapter.js&quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="05be5fcbf7db5f7d55a0aa8a3de0c822294f95a8" translate="yes" xml:space="preserve">
          <source>Includes the &lt;a href=&quot;serviceworkerglobalscope/onnotificationclick&quot;&gt;&lt;code&gt;ServiceWorkerGlobalScope.onnotificationclick&lt;/code&gt;&lt;/a&gt; handler, for firing custom functions when a notification is clicked.</source>
          <target state="translated">包括&lt;a href=&quot;serviceworkerglobalscope/onnotificationclick&quot;&gt; &lt;code&gt;ServiceWorkerGlobalScope.onnotificationclick&lt;/code&gt; &lt;/a&gt;处理程序，用于在单击通知时触发自定义函数。</target>
        </trans-unit>
        <trans-unit id="d5845804c66387a55465958f317c01f71b1975eb" translate="yes" xml:space="preserve">
          <source>Includes the &lt;a href=&quot;serviceworkerregistration/shownotification&quot;&gt;&lt;code&gt;ServiceWorkerRegistration.showNotification()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;serviceworkerregistration/getnotifications&quot;&gt;&lt;code&gt;ServiceWorkerRegistration.getNotifications()&lt;/code&gt;&lt;/a&gt; method, for controlling the display of notifications.</source>
          <target state="translated">包括&lt;a href=&quot;serviceworkerregistration/shownotification&quot;&gt; &lt;code&gt;ServiceWorkerRegistration.showNotification()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;serviceworkerregistration/getnotifications&quot;&gt; &lt;code&gt;ServiceWorkerRegistration.getNotifications()&lt;/code&gt; &lt;/a&gt;方法，用于控制通知的显示。</target>
        </trans-unit>
        <trans-unit id="e52e6ec9948618f31dc8ee651ae745196bcda323" translate="yes" xml:space="preserve">
          <source>Incomplete list of MIME types</source>
          <target state="translated">不完整的MIME类型列表</target>
        </trans-unit>
        <trans-unit id="40d19249d0e4e2f912d2fd965cdb9d08c08e04ae" translate="yes" xml:space="preserve">
          <source>Incorrect behavior before Firefox 23.</source>
          <target state="translated">火狐23之前的行为不正确。</target>
        </trans-unit>
        <trans-unit id="6e4d1aecb9f6b7b06b53111d8cf03d80b27e2925" translate="yes" xml:space="preserve">
          <source>Incorrectly stated as the &lt;code&gt;target&lt;/code&gt; parameter in the specification, see &lt;a href=&quot;https://www.khronos.org/bugzilla/show_bug.cgi?id=674&quot;&gt;https://www.khronos.org/bugzilla/show_bug.cgi?id=674&lt;/a&gt;.</source>
          <target state="translated">在规范中未正确声明为 &lt;code&gt;target&lt;/code&gt; 参数，请参见&lt;a href=&quot;https://www.khronos.org/bugzilla/show_bug.cgi?id=674&quot;&gt;https://www.khronos.org/bugzilla/show_bug.cgi?id=674&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a0b4ddc4bf449509a0538e7bc8033f88af302e1f" translate="yes" xml:space="preserve">
          <source>Increments the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#attr-value&quot;&gt;value&lt;/a&gt;&lt;/code&gt; by (&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#attr-step&quot;&gt;step&lt;/a&gt;&lt;/code&gt; * n), where n defaults to 1 if not specified. Throws an INVALID_STATE_ERR exception:</source>
          <target state="translated">将 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#attr-value&quot;&gt;value&lt;/a&gt;&lt;/code&gt; 递增（ &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#attr-step&quot;&gt;step&lt;/a&gt;&lt;/code&gt; * n），如果未指定，则n默认为1。引发INVALID_STATE_ERR异常：</target>
        </trans-unit>
        <trans-unit id="8081736d1ac6dcda760e249c8dd2d4f3a584e610" translate="yes" xml:space="preserve">
          <source>Increments the current stencil buffer value. Clamps to the maximum representable unsigned value.</source>
          <target state="translated">增加当前钢网缓冲区的值。夹住最大可表示的无符号值。</target>
        </trans-unit>
        <trans-unit id="be7dac374eed7d82dbad5faa66c622391d223c33" translate="yes" xml:space="preserve">
          <source>Increments the current stencil buffer value. Wraps stencil buffer value to zero when incrementing the maximum representable unsigned value.</source>
          <target state="translated">增加当前钢网缓冲区的值。当递增最大的无符号值时,将钢网缓冲区的值包为零。</target>
        </trans-unit>
        <trans-unit id="d6aea63c3a868fe32a3a54b5c4ef59776e7299d1" translate="yes" xml:space="preserve">
          <source>Indents the line containing the selection or insertion point. In Firefox, if the selection spans multiple lines at different levels of indentation, only the least indented lines in the selection will be indented.</source>
          <target state="translated">缩进包含选择或插入点的行。在Firefox中,如果选区横跨多行并有不同程度的缩进,那么只有选区中缩进最少的行才会被缩进。</target>
        </trans-unit>
        <trans-unit id="c2df9b932637fe9d32a0f16da1c11873398f873d" translate="yes" xml:space="preserve">
          <source>Index</source>
          <target state="translated">Index</target>
        </trans-unit>
        <trans-unit id="f181eb8ab18eb11eb9aae7d4b052bf6fdaf30b56" translate="yes" xml:space="preserve">
          <source>Index as &lt;code&gt;before&lt;/code&gt; parameter</source>
          <target state="translated">索引如 &lt;code&gt;before&lt;/code&gt; 参数</target>
        </trans-unit>
        <trans-unit id="453f6f1b30bdb747c10d7094a2d3af0d476d8525" translate="yes" xml:space="preserve">
          <source>Index parameter is optional</source>
          <target state="translated">索引参数是可选的</target>
        </trans-unit>
        <trans-unit id="cb00000e0c9d14d8226a6c223add0eff48fa40b4" translate="yes" xml:space="preserve">
          <source>Indexed Database 2.0</source>
          <target state="translated">索引数据库2.0</target>
        </trans-unit>
        <trans-unit id="d637246c1fa4afc50f71e4295df237a3e1d668ab" translate="yes" xml:space="preserve">
          <source>Indexed Database API</source>
          <target state="translated">索引数据库API</target>
        </trans-unit>
        <trans-unit id="44e2528e7cab3047343ca8911db09e908af3adee" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0</source>
          <target state="translated">索引数据库API 2.0</target>
        </trans-unit>
        <trans-unit id="cf3c2bf57140cb50bdcb4435cfe3c8cc98fec9e3" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'IDBCursorWithValue' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API 2.0 &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; IDBCursorWithValue&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="f9f3ada24ea8441c7e501f0b2e64fb6a58609b22" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'IDBDatabase' in that specification.&lt;/small&gt;</source>
          <target state="translated">Indexed Database API 2.0 &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; IDBDatabase&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="2ebc95c88d7838ee71145c4c1d52559715d2af58" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'IDBFactory' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API 2.0 &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; IDBFactory&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="cc4709b9a3c74acfccad8b4d50368e7de06c1193" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'IDBIndex' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API 2.0 &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; IDBIndex&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="8b626ead75d74638447876f47c7267e6bd563b32" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'IDBKeyRange' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API 2.0 &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; IDBKeyRange&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="a98dce7586528c81295a33dfffd89abea038c094" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'IDBObjectStore' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API 2.0 &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; IDBObjectStore&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="f2fd5a547291e4f1c1df2167564c7cf8cdcbbc0b" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'IDBOpenDBRequest' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API 2.0 &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; IDBOpenDBRequest&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="366ff2b766d3fde0f46eadb9652a8028403e5871" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'IDBRequest' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API 2.0 &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; IDBRequest&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="e172db036c5b8cc18472ce1f243ae21fce1fdfa5" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'IDBTransaction' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API 2.0 &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; IDBTransaction&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="86ca6a350879afcd58319e7901de7b5f12a1999f" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'IDBVersionChangeEvent' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API 2.0 &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; IDBVersionChangeEvent&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="2483d48ea22b253fe19e230fe96da18b3465a79a" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'ObjectStoreNames' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API 2.0 &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; ObjectStoreNames&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="2d24555331c5da72096e5808f4cf4f8f4586ddc9" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'abort()' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API 2.0 &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; abort（）&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="eef67f38e90ded178d6e114a73d151cf44193234" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'add()' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API 2.0 &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; add（）&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="565444d18890dfed22bb1a7971dd2beb5877acfd" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'advance()' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API 2.0 &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; advance（）&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="fd38b18571abe02ec1a94bef07451fad57adefbc" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'autoIncrement' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API 2.0 &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; autoIncrement&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="72acb3c050df56eacc5354cd716dfd7e6be561a0" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'bound()' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API 2.0 &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; bound（）&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="95bf4516b0f0ddb4d168b48ebe7cfdd57ef313f4" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'clear()' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API 2.0 &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; clear（）&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="7d097be1f46dadf6b1dcc606f63890d4e870be42" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'close()' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API 2.0 &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; close（）&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="e458e7eca4d070001c437ecab313a7149206cea5" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'cmp()' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API 2.0 &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; cmp（）&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="56afd053a165dfa5223c2b27963eaede2d59cb5b" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'continue()' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API 2.0 &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; continue（）&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="2cbba46e3985e689aef7a567540cda47e5247aee" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'continuePrimaryKey()' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API 2.0 &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; continuePrimaryKey（）&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="359ceb4fb14bbfa71e680cef243281286a923668" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'count()' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API 2.0 &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; count（）&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="2084cf90d209d8bd05f2d57bf91333837fd3f5e3" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'createIndex()' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API 2.0 &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; createIndex（）&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="d835d91443e674d0acf51eb142631a285c04119e" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'createObjectStore()' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API 2.0 &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; createObjectStore（）&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="ef995c0b2febfecfdd36cea57b732d7cdcf5287a" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'cursor' in that specification.&lt;/small&gt;</source>
          <target state="translated">Indexed Database API 2.0 &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo;游标&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="38f10f8380a6b5e6f41186c0db1a2fd0aa5008b3" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'db' in that specification.&lt;/small&gt;</source>
          <target state="translated">Indexed Database API 2.0 &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; db&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="4a4ef8021ea3bc36e24afea70d3820230221ab43" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'delete()' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API 2.0 &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; delete（）&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="b4a031a0e3660058b826aee6042781d2cc9bd1b9" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'deleteDatabase()' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API 2.0 &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; deleteDatabase（）&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="eeeb7bf7ab32d139a370c8c2a2148627df043fde" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'deleteIndex()' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API 2.0 &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; deleteIndex（）&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="74f7694c88487bcfa1c66e035a6d91b0b256565b" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'deleteObjectStore()' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API 2.0 &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; deleteObjectStore（）&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="4bb8e411e9d145a59bb655cb831927e34daf9f25" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'direction' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API 2.0 &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo;方向&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="d52b88ece91077a2b5378c0907e0dac19f03916a" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'error' in that specification.&lt;/small&gt;</source>
          <target state="translated">Indexed Database API 2.0 &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo;错误&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="d83a41406b8b5f39de7880f14b05813739bcec78" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'get()' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API 2.0 &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; get（）&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="c361dd3c30f0851a14dcf525ea68c948d7001b93" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'getAll()' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API 2.0 &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; getAll（）&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="305f735a2d1b3d60a72e45fdd86d0c679dd71627" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'getAllKeys()' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API 2.0 &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; getAllKeys（）&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="fa59a8416303ad16526b18f1671b9ceca2ea6f8d" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'getKey()' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API 2.0 &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; getKey（）&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="7a4cb455566f19c2d93aab75e4b8d3f286785b8a" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'includes()' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API 2.0 &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; includes（）&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="30b93aae7f4eb8320462c857f5d3cdc4638db4b6" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'index()' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API 2.0 &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; index（）&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="007d5c9a531de84aaa0c98128f53bb4ec2c3eb46" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'indexNames' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API 2.0 &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; indexNames&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="20330097346a31e05a3fe659347ba59d8c400bb3" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'indexedDB' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API 2.0 &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; indexedDB&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="5f19c90186ce0514aa7567d95d834f6ef7846877" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'key' in that specification.&lt;/small&gt;</source>
          <target state="translated">Indexed Database API 2.0 &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo;键&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="1d96905469d788cc6a2838d4438ce2e215b9f114" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'keyPath' in that specification.&lt;/small&gt;</source>
          <target state="translated">Indexed Database API 2.0 &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; keyPath&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="f8bc75669286d94288860b321ad9de3973e7c6f1" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'lower' in that specification.&lt;/small&gt;</source>
          <target state="translated">Indexed Database API 2.0 &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo;下级&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="b62d5b107a11062b448f57e6feba433bdcc04762" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'lowerBound()' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API 2.0 &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; lowerBound（）&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="532c8a2bcb059f2160bc13c34853948e535f5b2d" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'lowerOpen' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API 2.0 &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; lowerOpen&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="cbaff618042c850c4e25af8b3275ec9392745749" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'mode' in that specification.&lt;/small&gt;</source>
          <target state="translated">Indexed Database API 2.0 &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo;模式&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="7cd80db335f83115f3ae3dadc4dc9ebc25c17635" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'multiEntry' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API 2.0 &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; multiEntry&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="8fec81ff92d176d83e3c578beeaa47cea22bdefa" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'name' in that specification.&lt;/small&gt;</source>
          <target state="translated">Indexed Database API 2.0 &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo;名称&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="5dccef01c2cb593520a4b8f11545557c9afb29b2" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'newVersion' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API 2.0 &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; newVersion&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="5c39e376f73640df7311df01c47ac0608485eb63" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'objectStore' in that specification.&lt;/small&gt;</source>
          <target state="translated">Indexed Database API 2.0 &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; objectStore&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="4d3eb819ce5c4ef8cdb37001b2b7095d9dfe8f47" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'objectStore()' in that specification.&lt;/small&gt;</source>
          <target state="translated">Indexed Database API 2.0 &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; objectStore（）&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="6b273e10893aa4e25d3c25e1b2b2020f154ade55" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'objectStoreNames' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API 2.0 &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; objectStoreNames&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="22250b0c4fd94c03083ffa26e2ef4a0b499582ba" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'oldVersion' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API 2.0 &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; oldVersion&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="bb36b1b2f8719f68e8c8155c09f77faeb217d242" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'onabort' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API 2.0 &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; onabort&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="072af3276aff47a544daf4cd8c1d262c6d04e204" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'onblocked' in that specification.&lt;/small&gt;</source>
          <target state="translated">Indexed Database API 2.0 &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; onblocked&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="3acd6c4dc9e3904bea456d4fd31b565ea5d424bb" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'onclose' in that specification.&lt;/small&gt;</source>
          <target state="translated">Indexed Database API 2.0 &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; onclose&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="6edcc07b8f1185e4de4d83920f58e1970eb1253a" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'oncomplete' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API 2.0 &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo;不完整&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="b590997d05ce08a4bcaa509a8e4fcd64de2c2e21" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'onerror' in that specification.&lt;/small&gt;</source>
          <target state="translated">Indexed Database API 2.0 &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; onerror&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="82318a50f4f3255d202e60c9711e7cddcbe9d5f3" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'only' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API 2.0 &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo;仅&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="3101a1e90405213a2b367b75e4b0f09456dbbb1f" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'onsuccess' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API 2.0 &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo;成功&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="ee5a05937565b3a5392bfbc6a807476076035242" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'onupgradeneeded' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API 2.0 &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; onupgradeneeded&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="20f75cbcc12a953edfaadfbdc33dd852bbda49ab" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'onversionchange' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API 2.0 &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; onversionchange&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="b7b15bc9ed72d370db298363aa5dcb2e327a511a" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'open()' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API 2.0 &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; open（）&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="b08aef57453e96a590cfdb4704d8ac32d8553c93" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'openCursor()' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API 2.0 &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; openCursor（）&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="bc35c36a616f6ae5cd109302290383d4cde131eb" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'openKeyCursor()' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API 2.0 &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; openKeyCursor（）&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="6923cf52253c0f54321f165f7222f9c99cec00df" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'primaryKey' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API 2.0 &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; primaryKey&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="b47645c292faaa766aa017cc085dccc6f7f77a4b" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'put()' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API 2.0 &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; put（）&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="85873746ba77a4fd2f0df44d19a60de5c6815a3e" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'readyState' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API 2.0 &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; readyState&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="224d82d66e55aacb498e6f243e14a62612fbaf25" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'result' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API 2.0 &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo;结果&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="155af68f307f309c95deef47ca761a3159b2249d" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'source' in that specification.&lt;/small&gt;</source>
          <target state="translated">Indexed Database API 2.0 &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo;源&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="372945225136d520564d1a611136c27aef6db228" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'transaction' in that specification.&lt;/small&gt;</source>
          <target state="translated">Indexed Database API 2.0 &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo;事务&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="333f1e58387e849584fc5699a8d4ecd08e4bd652" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'transaction()' in that specification.&lt;/small&gt;</source>
          <target state="translated">Indexed Database API 2.0 &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; transaction（）&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="d171cc085fbfa94541307a9a1a95b03ba0d34be0" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'unique' in that specification.&lt;/small&gt;</source>
          <target state="translated">Indexed Database API 2.0 &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo;唯一&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="728f83f7a25ed968510be6dd9028044f8593be0b" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'update()' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API 2.0 &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; update（）&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="3cff63d7bfa3639b141b79293eabf745fddba769" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'upper' in that specification.&lt;/small&gt;</source>
          <target state="translated">Indexed Database API 2.0 &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo;上&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="d0f92c56692d621729245708a1fac2e1e1c6925d" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'upperBound()' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API 2.0 &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; upperBound（）&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="fdde0e8f904e8ab718432532831461eb15560522" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'upperOpen' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API 2.0 &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; upperOpen&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="d6c7169e9eab2e6e102cb332a6512b739114862f" translate="yes" xml:space="preserve">
          <source>Indexed Database API 2.0&lt;br/&gt;&lt;small&gt;The definition of 'version' in that specification.&lt;/small&gt;</source>
          <target state="translated">Indexed Database API 2.0 &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo;版本&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="86dd037fabe26353d744a49a2f3f211c22e56655" translate="yes" xml:space="preserve">
          <source>Indexed Database API Specification</source>
          <target state="translated">索引数据库API规范</target>
        </trans-unit>
        <trans-unit id="15dcefe503ae939f4d17016b014badae64406aaf" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'IDBCursorWithValue' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; IDBCursorWithValue&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="1d2db3332262a4e4e1516f47a4e074d9c3bdf85a" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'IDBDatabase' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; IDBDatabase&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="bfd2d3b95a559c2b8aea5a2912b6511187e33b1f" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'IDBEnvironment' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; IDBEnvironment&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="e46811739e8fac3983c25412940cb2332f15a4ad" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'IDBFactory' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; IDBFactory&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="691e781932751d3292cb3b4930ffe52f73b1b236" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'IDBIndex' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; IDBIndex&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="611be58c07c404d8526d854df25f66003f3069de" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'IDBKeyRange' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; IDBKeyRange&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="59daffd89ec28d7ac3ec5a4305617ef9d4d0dd8f" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'IDBObjectStore' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; IDBObjectStore&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="a273cc23ce36ea16ffcd1302e7070903b844cd71" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'IDBOpenDBRequest' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; IDBOpenDBRequest&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="56288fe09d641575439a9776988cac2de8190eb9" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'IDBRequest' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; IDBRequest&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="e771b04c61cb47b8fd38c5469fa4ef34fc63418a" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'IDBTransaction' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; IDBTransaction&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="0eac9aceead0e96a04fe93cf32beb3ef59db3744" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'IDBVersionChangeEvent' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; IDBVersionChangeEvent&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="911b9d35b9530c35a7308c9169b41e19c79ce383" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'ObjectStoreNames' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; ObjectStoreNames&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="2628e177531c037e4196c6c10e80fa051100ebe4" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'abort()' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; abort（）&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="1e854dcb956fee1f0c995f9c1109b2236e9792b2" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'add()' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; add（）&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="09deb334bcb221a11b4b2bb85f2af98f1bd6e7a9" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'advance()' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; advance（）&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="9b0b42c6453d106fce6d153ce2c4ad8dee2c45db" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'autoIncrement' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; autoIncrement&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="6f3a37a443be19177f4b8a495b6b8ead0e939114" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'bound()' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; bound（）&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="e13169fcf1e2a1ae929256c6afb3b6693c263022" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'clear()' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; clear（）&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="bcd403a9ad6105cd7308fde4d75697466aea1897" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'close()' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; close（）&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="0d6f0d44727ae5724a2d2328eec2a30ebee648b5" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'cmp()' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; cmp（）&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="eac95acdc1b19269ed03ed418901a15294428e44" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'continue()' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; continue（）&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="81384d7528eb5071f34276d3ebf3059631ad224b" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'count()' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; count（）&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="2cb73699dc23b20b21c5ac80302856ee5846d539" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'createIndex()' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; createIndex（）&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="2218d0fa34d3b35bd2b4e90f1450937fa10e85a8" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'createObjectStore()' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; createObjectStore（）&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="0c88861c3b22110048d091e0f25bd0e15a5016cf" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'cursor' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo;光标&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="f2a25c2af2c83eedfeaa08dafeafa0f36cd0897a" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'db' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; db&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="10332307eaa30b008b1f909ca434651e20a4de05" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'delete()' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API &lt;br/&gt;&lt;small&gt;该规范中'delete（）'的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="e92a85ba7b79ae5331b78373c58d2cbba760e4e3" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'deleteDatabase()' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; deleteDatabase（）&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="54f6ea3b718a1de1a3801aa5227dc0a1d4b3206f" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'deleteIndex()' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; deleteIndex（）&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="7c95de7954581905c3d2a169dbd4854c07514db4" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'deleteObjectStore()' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; deleteObjectStore（）&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="fdebea39b4d10372f3bd9b38d97777aabadb4918" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'direction' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo;方向&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="6d04c2bc1c2197776407094c820f131c73a2233e" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'error' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo;错误&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="b414db91d4e5e32efd881af45685602ef03fc6c4" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'get()' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; get（）&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="6d1c2603e2276e829282532ef2b7fddeef87b394" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'getKey()' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; getKey（）&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="0632408e0d9f890ce40439718d26b59d0b1ea9c3" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'index()' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; index（）&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="8855870f8b8cb2b6cbfa7b6b57a027123de15ab5" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'indexNames' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; indexNames&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="7447d1d70f58dbf59be79029e014a48a670a8b66" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'indexedDB' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; indexedDB&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="8b1ef5cf6723bc22d79ce3d27a87ae7424a21d94" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'key' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo;键&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="ccc2dcf3076abf39177a6c0831fdbaddbaa7967a" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'keyPath' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; keyPath&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="3c4513b97a9353b1be9f780446325b384579a6cf" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'lower' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo;下级&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="f568c0456b800d0587f407a78978657ed10df745" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'lowerBound()' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; lowerBound（）&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="c3c9f91b2e8731ca81a8316a0ef2c6e46ed37eb8" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'lowerOpen' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; lowerOpen&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="bf1a5bf21683ff2acc2c5f37f0b5460647c37f40" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'mode' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo;模式&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="69166e3532729ebc28c86dcaa75d2f1773da8058" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'multiEntry' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; multiEntry&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="828a60b756ce091624a5cc20173b4cfd65fbcea0" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'name' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo;名称&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="b63c2b5977ffbfb35ec6e0b22f15b35dbdc1712d" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'newVersion' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; newVersion&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="03bf406431d9396c6b1e91be881710f07da13e27" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'objectStore' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; objectStore&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="8b22b41c914108d17a37775e566ddc2e935b823f" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'objectStore()' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; objectStore（）&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="31a62dc7e40b0a3bbb8e5e9b8d63f89ccbca8fa8" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'objectStoreNames' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; objectStoreNames&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="90cbc4b8126cfd58744831fa92c33e196fd4e803" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'oldVersion' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; oldVersion&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="a4181dd53726ade87755f3806355f1892c5a3321" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'onabort' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; onabort&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="16e33e65ebd3f08212d6591dc0f80a049ba8d713" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'onblocked' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; onblocked&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="90ff0853c470806b03e60173a8c999b9b58e9cf7" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'oncomplete' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo;不完整&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="54dcb861d8f2b331f5416bb77e539a57bf6ca9ea" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'onerror' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; onerror&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="e76da573a9c2ab3e2f40bf6f41daa5c14b1d2e87" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'only' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo;仅&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="804a05dbfac297e19d36ab76864338397c155b69" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'onsuccess' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo;成功&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="28cd5e96470a4716e2eb5a3c5b4b77ec6cb47deb" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'onupgradeneeded' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; onupgradeneeded&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="efb89d54c8ed5af9d4203d9310a24b3b778bf78e" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'onversionchange' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; onversionchange&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="3eb1b277067a6f7dd2b2d0187b643f2bc75236c1" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'open()' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; open（）&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="8dc9ab6ebf006c17f8ad11c842247cfd490bff97" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'openCursor()' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; openCursor（）&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="6fdc69a06bf643bea974ceb8cbfa6a363a18ab6c" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'openKeyCursor()' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API &lt;br/&gt;&lt;small&gt;该规范中'openKeyCursor（）'的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="e43cde1e437281ba65cdee6155261c6634c428bc" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'primaryKey' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; primaryKey&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="65c5862b6a8d0d25c0599486e840a3a36f22bab5" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'put()' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; put（）&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="b04c81f2d77ecadc1e89604e8da0caa81bf928a1" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'readyState' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; readyState&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="71d39fab67c17ff72cc77f575520a7faef2db3bc" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'result' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo;结果&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="c54f04b4eb11eed7d16db47e65b3df2a59ad815b" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'source' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo;源&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="a24fef6d73be8a9b808c19676f0becf79aaea3a2" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'transaction' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo;事务&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="b815919711c3e32c862a428849c2c61e8a45e5d2" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'transaction()' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; transaction（）&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="5502e65b6c775cb9069ddf69202a9b5e7c84f8fb" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'unique' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo;唯一&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="9e73f2eca00cd3a258eb079d51b2a2467aa8c3d1" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'update()' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; update（）&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="3b58c63f1f55a0ea874370904bb189c2046cfc40" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'upper' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo;上&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="e055db0e658a620506779abf1d6bf260040502df" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'upperBound()' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; upperBound（）&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="eee1dd1553968d42120e87c5e1773f94fa20cf0c" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'upperOpen' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; upperOpen&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="bdd6ae14a8af64bff9a712771fb91b75e832f09a" translate="yes" xml:space="preserve">
          <source>Indexed Database API&lt;br/&gt;&lt;small&gt;The definition of 'version' in that specification.&lt;/small&gt;</source>
          <target state="translated">索引数据库API &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo;版本&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="64cb9fad0cca0cd58b28b495a70bd84a63329164" translate="yes" xml:space="preserve">
          <source>IndexedDB</source>
          <target state="translated">IndexedDB</target>
        </trans-unit>
        <trans-unit id="92305269bb35c9337865684e253bfb77eb72c316" translate="yes" xml:space="preserve">
          <source>IndexedDB &amp;mdash; The Store in Your Browser</source>
          <target state="translated">IndexedDB &amp;mdash;浏览器中的商店</target>
        </trans-unit>
        <trans-unit id="532f0f31fc0dc48e0188546b9833978d0aae4b88" translate="yes" xml:space="preserve">
          <source>IndexedDB &lt;a href=&quot;https://mxr.mozilla.org/mozilla-central/find?text=&amp;amp;string=dom%2FindexedDB%2F.*%5C.idl&amp;amp;regexp=1&quot;&gt;interface files&lt;/a&gt; in the Firefox source code</source>
          <target state="translated">Firefox源代码中的IndexedDB &lt;a href=&quot;https://mxr.mozilla.org/mozilla-central/find?text=&amp;amp;string=dom%2FindexedDB%2F.*%5C.idl&amp;amp;regexp=1&quot;&gt;接口文件&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="36e8a68a5966ec79c4cfedb6fedc772a2a03acc9" translate="yes" xml:space="preserve">
          <source>IndexedDB API</source>
          <target state="translated">IndexedDB API</target>
        </trans-unit>
        <trans-unit id="2c08a2cbfe1907178688e0f31d8d060b8974f8ab" translate="yes" xml:space="preserve">
          <source>IndexedDB API Reference</source>
          <target state="translated">IndexedDB API参考</target>
        </trans-unit>
        <trans-unit id="6cd580e87eab9b24853e0a6b1592a0793dd57d15" translate="yes" xml:space="preserve">
          <source>IndexedDB API: Basic Concepts Behind IndexedDB</source>
          <target state="translated">IndexedDB API。IndexedDB背后的基本概念</target>
        </trans-unit>
        <trans-unit id="7f627958554992cdc01d435d1566efedb5d88fe1" translate="yes" xml:space="preserve">
          <source>IndexedDB API: Browser storage limits and eviction criteria</source>
          <target state="translated">IndexedDB API。浏览器存储限制和驱逐标准</target>
        </trans-unit>
        <trans-unit id="424b4cf4029e03a1ae19e57459b914283c39c31c" translate="yes" xml:space="preserve">
          <source>IndexedDB API: Using IndexedDB</source>
          <target state="translated">IndexedDB API。使用 IndexedDB</target>
        </trans-unit>
        <trans-unit id="6a1def3c340fdfe28cbce10fc9a0a803d9f4f57d" translate="yes" xml:space="preserve">
          <source>IndexedDB API: Using IndexedDB in chrome</source>
          <target state="translated">IndexedDB API。在chrome中使用IndexedDB</target>
        </trans-unit>
        <trans-unit id="147e826602f19e0ac009e2bd0ea268d779b0f279" translate="yes" xml:space="preserve">
          <source>IndexedDB databases</source>
          <target state="translated">IndexedDB数据库</target>
        </trans-unit>
        <trans-unit id="ce537135320d542bbf2ed585262978a7deda8fdf" translate="yes" xml:space="preserve">
          <source>IndexedDB is a low-level API for client-side storage of significant amounts of structured data, including files/blobs. This API uses indexes to enable high-performance searches of this data. While &lt;a href=&quot;web_storage_api&quot;&gt;Web Storage&lt;/a&gt; is useful for storing smaller amounts of data, it is less useful for storing larger amounts of structured data. IndexedDB provides a solution. This is the main landing page for MDN's IndexedDB coverage &amp;mdash; here we provide links to the full API reference and usage guides, browser support details, and some explanation of key concepts.</source>
          <target state="translated">IndexedDB是用于客户端存储大量结构化数据（包括文件/ blob）的低级API。该API使用索引来启用对此数据的高性能搜索。而&lt;a href=&quot;web_storage_api&quot;&gt;Web存储&lt;/a&gt;是用于存储少量的数据的有用的，它是用于存储更大量的结构化数据的用处不大。 IndexedDB提供了一个解决方案。这是MDN的IndexedDB覆盖范围的主要登录页面-在这里，我们提供了完整的API参考和使用指南，浏览器支持详细信息以及一些关键概念的解释的链接。</target>
        </trans-unit>
        <trans-unit id="cc1663032a22b6bf6e4418d1765f05a8f9e117cd" translate="yes" xml:space="preserve">
          <source>IndexedDB is a transactional database system, like an SQL-based RDBMS. However, unlike SQL-based RDBMSes, which use fixed-column tables, IndexedDB is a JavaScript-based object-oriented database. IndexedDB lets you store and retrieve objects that are indexed with a &lt;strong&gt;key&lt;/strong&gt;; any objects supported by the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Guide/API/DOM/The_structured_clone_algorithm&quot;&gt;structured clone algorithm&lt;/a&gt; can be stored. You need to specify the database schema, open a connection to your database, and then retrieve and update data within a series of &lt;strong&gt;transactions&lt;/strong&gt;.</source>
          <target state="translated">IndexedDB是一个事务数据库系统，类似于基于SQL的RDBMS。但是，与使用固定列表的基于SQL的RDBMS不同，IndexedDB是基于JavaScript的面向对象的数据库。 IndexedDB使您可以存储和检索使用&lt;strong&gt;键&lt;/strong&gt;索引的对象；可以存储&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Guide/API/DOM/The_structured_clone_algorithm&quot;&gt;结构化克隆算法&lt;/a&gt;支持的任何对象。您需要指定数据库架构，打开与数据库的连接，然后在一系列&lt;strong&gt;事务中&lt;/strong&gt;检索和更新数据。</target>
        </trans-unit>
        <trans-unit id="86a9af6a45ae874e6ab4548cbadc35f2cdbac1de" translate="yes" xml:space="preserve">
          <source>IndexedDB is a way for you to persistently store data inside a user's browser. Because it lets you create web applications with rich query abilities regardless of network availability, your applications can work both online and offline.</source>
          <target state="translated">IndexedDB是一种让您在用户的浏览器中持久存储数据的方法。因为它可以让你创建具有丰富查询能力的Web应用程序,而不受网络可用性的影响,你的应用程序可以在线和离线工作。</target>
        </trans-unit>
        <trans-unit id="f3ba47cda434e153228419f3d5a637fffd7d4b3e" translate="yes" xml:space="preserve">
          <source>IndexedDB is an &lt;a href=&quot;https://developer.mozilla.org/en/IndexedDB#Asynchronous_API&quot;&gt;asynchronous&lt;/a&gt; API that can be used in most contexts, including &lt;a href=&quot;../web_workers_api/using_web_workers&quot;&gt;Web Workers&lt;/a&gt;. It used to include a &lt;a href=&quot;https://developer.mozilla.org/en/IndexedDB#Synchronous_API&quot;&gt;synchronous&lt;/a&gt; version also, for use in web workers, but this was removed from the spec due to lack of interest by the web community.</source>
          <target state="translated">IndexedDB是一个&lt;a href=&quot;https://developer.mozilla.org/en/IndexedDB#Asynchronous_API&quot;&gt;异步&lt;/a&gt; API，可以在大多数上下文中使用，包括&lt;a href=&quot;../web_workers_api/using_web_workers&quot;&gt;Web Workers&lt;/a&gt;。它曾经也包含一个&lt;a href=&quot;https://developer.mozilla.org/en/IndexedDB#Synchronous_API&quot;&gt;同步&lt;/a&gt;版本，供Web工作人员使用，但由于Web社区对此不感兴趣，因此已将其从规范中删除。</target>
        </trans-unit>
        <trans-unit id="f2d92b8f877cc367a585ef74ae7cf6ec2470db87" translate="yes" xml:space="preserve">
          <source>IndexedDB is designed to cover most cases that need client-side storage. However, it is not designed for a few cases like the following:</source>
          <target state="translated">IndexedDB的设计涵盖了大多数需要客户端存储的情况。但是,它并不是为以下几种情况设计的。</target>
        </trans-unit>
        <trans-unit id="10b63894d086dcec12e25d8e17051a3412213e28" translate="yes" xml:space="preserve">
          <source>IndexedDB lets you store and retrieve objects that are indexed with a &quot;key.&quot; All changes that you make to the database happen within transactions. Like most web storage solutions, IndexedDB follows a &lt;a href=&quot;http://www.w3.org/Security/wiki/Same_Origin_Policy&quot;&gt;same-origin policy&lt;/a&gt;. So while you can access stored data within a domain, you cannot access data across different domains.</source>
          <target state="translated">IndexedDB使您可以存储和检索使用&amp;ldquo;关键字&amp;rdquo;建立索引的对象。您对数据库所做的所有更改都在事务内发生。像大多数Web存储解决方案一样，IndexedDB遵循&lt;a href=&quot;http://www.w3.org/Security/wiki/Same_Origin_Policy&quot;&gt;同源策略&lt;/a&gt;。因此，尽管您可以访问域中的存储数据，但不能跨不同域访问数据。</target>
        </trans-unit>
        <trans-unit id="193a3ef4e236d0b00b36041627e8f96f853cd54e" translate="yes" xml:space="preserve">
          <source>IndexedDB lets you store and retrieve objects that are indexed with a &quot;key.&quot; All changes that you make to the database happen within transactions. Like most web storage solutions, IndexedDB follows a &lt;a href=&quot;https://www.w3.org/Security/wiki/Same_Origin_Policy&quot;&gt;same-origin policy&lt;/a&gt;. So while you can access stored data within a domain, you cannot access data across different domains.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f8bbfa15d98e608887f8a17bd492f4cfb52892d" translate="yes" xml:space="preserve">
          <source>IndexedDB used to have a competing spec, WebSQL Database, but the W3C deprecated it on November 18, 2010. While both IndexedDB and WebSQL are solutions for storage, they do not offer the same functionalities. WebSQL Database is a relational database access system, whereas IndexedDB is an indexed table system.</source>
          <target state="translated">IndexedDB曾经有一个竞争规范,即WebSQL数据库,但W3C在2010年11月18日废止了它。虽然IndexedDB和WebSQL都是存储的解决方案,但它们提供的功能并不相同。WebSQL数据库是一种关系型数据库访问系统,而IndexedDB是一种索引表系统。</target>
        </trans-unit>
        <trans-unit id="a16c113e5edf37916985279b120ad28b6f0ce5b8" translate="yes" xml:space="preserve">
          <source>IndexedDB uses the same-origin principle, which means that it ties the store to the origin of the site that creates it (typically, this is the site domain or subdomain), so it cannot be accessed by any other origin.</source>
          <target state="translated">IndexedDB使用同源原则,这意味着它将存储与创建它的站点的源头联系在一起(通常,这是站点域或子域),因此它不能被任何其他源头访问。</target>
        </trans-unit>
        <trans-unit id="e739a8052896b204b56c67f413dc1f61084d45fa" translate="yes" xml:space="preserve">
          <source>Indicates an occurrence of a of dual-tone multi-frequency (DTMF). This event does not bubble (except where otherwise stated) and is not cancelable (except where otherwise stated).</source>
          <target state="translated">表示发生了双音多频(DTMF)事件。该事件不冒泡(除非另有说明),也不可取消(除非另有说明)。</target>
        </trans-unit>
        <trans-unit id="943e0bc6f637339f8291a07a89984e56e8deb86e" translate="yes" xml:space="preserve">
          <source>Indicates how far along the animation is through its current iteration with values between &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;1&lt;/code&gt;. Returns &lt;code&gt;null&lt;/code&gt; if the animation is not running or its &lt;code&gt;KeyframeEffect&lt;/code&gt; isn't associated with an &lt;code&gt;Animation&lt;/code&gt;.</source>
          <target state="translated">指示动画通过当前迭代的距离，其值介于 &lt;code&gt;0&lt;/code&gt; 和 &lt;code&gt;1&lt;/code&gt; 之间。如果动画没有运行或其动画的 &lt;code&gt;KeyframeEffect&lt;/code&gt; 没有与 &lt;code&gt;Animation&lt;/code&gt; 关联，则返回 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3d83f6c1c7cc711aef429748efd49ce074848343" translate="yes" xml:space="preserve">
          <source>Indicates how peaked the frequency is around the cutoff. The greater the value is, the greater is the peak.</source>
          <target state="translated">表示频率在截止点附近的峰值。该值越大,峰值越大。</target>
        </trans-unit>
        <trans-unit id="60f2983f4478702c91cef6d0b9af81733779d6e3" translate="yes" xml:space="preserve">
          <source>Indicates how peaked the frequency is around the cutoff. The greater the value, the greater the peak.</source>
          <target state="translated">表示频率在截止点附近的峰值。该值越大,峰值越大。</target>
        </trans-unit>
        <trans-unit id="92d419ed0fcbf4bcc8e8433f5f3b80f03eb22d20" translate="yes" xml:space="preserve">
          <source>Indicates how the violated policy is configured to be treated by the user agent. This will be &lt;code&gt;&quot;enforce&quot;&lt;/code&gt; or &lt;code&gt;&quot;report&quot;&lt;/code&gt;.</source>
          <target state="translated">指示违反的策略如何配置为由用户代理处理。这将是 &lt;code&gt;&quot;enforce&quot;&lt;/code&gt; 或 &lt;code&gt;&quot;report&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="09f9825b7b6213674627e80352ff75e27100f384" translate="yes" xml:space="preserve">
          <source>Indicates if a certain node is part of the selection.</source>
          <target state="translated">表示某个节点是否是选择的一部分。</target>
        </trans-unit>
        <trans-unit id="dc053b6c7ef02ee44213f9913f0ebb3bc3ca087b" translate="yes" xml:space="preserve">
          <source>Indicates if the device has sensed a nearby physical object.</source>
          <target state="translated">表示设备是否已感应到附近的物理物体。</target>
        </trans-unit>
        <trans-unit id="5a88e82c3afff7c9f6ddf9b702753e7f8b74e3f6" translate="yes" xml:space="preserve">
          <source>Indicates if the document is loading from a cache.</source>
          <target state="translated">表示该文档是否从缓存中加载。</target>
        </trans-unit>
        <trans-unit id="8728b80cde2cc4e2ed417e1c13080c30fb7ef778" translate="yes" xml:space="preserve">
          <source>Indicates if the pointer represents the primary pointer of this pointer type.</source>
          <target state="translated">表示该指针是否代表该指针类型的主指针。</target>
        </trans-unit>
        <trans-unit id="c459e8ad4fb869276addd12b5b14c86486e1f0eb" translate="yes" xml:space="preserve">
          <source>Indicates that a new incoming &lt;a href=&quot;mediastreamtrack&quot;&gt;&lt;code&gt;MediaStreamTrack&lt;/code&gt;&lt;/a&gt; was created and an associated &lt;a href=&quot;rtcrtpreceiver&quot;&gt;&lt;code&gt;RTCRtpReceiver&lt;/code&gt;&lt;/a&gt; object was added to the &lt;a href=&quot;rtcpeerconnection&quot;&gt;&lt;code&gt;RTCPeerConnection&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">指示已创建新的传入&lt;a href=&quot;mediastreamtrack&quot;&gt; &lt;code&gt;MediaStreamTrack&lt;/code&gt; &lt;/a&gt;，并且&lt;a href=&quot;rtcrtpreceiver&quot;&gt; &lt;code&gt;RTCRtpReceiver&lt;/code&gt; &lt;/a&gt;关联的RTCRtpReceiver对象添加到&lt;a href=&quot;rtcpeerconnection&quot;&gt; &lt;code&gt;RTCPeerConnection&lt;/code&gt; &lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="8afc3807453f24c4f66868b645b61a2573a07625" translate="yes" xml:space="preserve">
          <source>Indicates that the availability of the presentation display has changed.</source>
          <target state="translated">表示演示文稿显示的可用性已经改变。</target>
        </trans-unit>
        <trans-unit id="28c86b5d39c8b81b39a074ef35d899dac126f042" translate="yes" xml:space="preserve">
          <source>Indicates that the text track has been loaded with no fatal errors.</source>
          <target state="translated">表示已加载文本轨道,没有致命错误。</target>
        </trans-unit>
        <trans-unit id="857f4cf4987d80b1a5814654e9f9797314e49641" translate="yes" xml:space="preserve">
          <source>Indicates that the text track is loading and there have been no fatal errors encountered so far. Further cues might still be added to the track by the parser.</source>
          <target state="translated">表示文本轨道正在加载,到目前为止没有遇到致命的错误。解析器仍可能向轨道添加进一步的提示。</target>
        </trans-unit>
        <trans-unit id="eda4b30bd8d00a73daae2e5c7b50e1f510f556e9" translate="yes" xml:space="preserve">
          <source>Indicates that the text track was enabled, but when the user agent attempted to obtain it, this failed in some way. Some or all of the cues are likely missing and will not be obtained.</source>
          <target state="translated">表示文本轨迹已被启用,但当用户代理试图获取文本轨迹时,却以某种方式失败了。可能缺少部分或全部提示,无法获得。</target>
        </trans-unit>
        <trans-unit id="de229eca824b55dc0a01ef5e8e646022795469c5" translate="yes" xml:space="preserve">
          <source>Indicates that the text track's cues have not been obtained.</source>
          <target state="translated">表示尚未获得文本轨道的提示。</target>
        </trans-unit>
        <trans-unit id="5a1e7a27262732663c8aaccb2e6965933d2d3f8d" translate="yes" xml:space="preserve">
          <source>Indicates that the text will be displayed vertically rather than horizontally, such as in some Asian languages.</source>
          <target state="translated">表示文字将垂直显示,而不是水平显示,如某些亚洲语言。</target>
        </trans-unit>
        <trans-unit id="756ceef19a8802f6fa9c6c724bbde5c8c0b00f67" translate="yes" xml:space="preserve">
          <source>Indicates the accuracy of the derivative calculation for the GLSL built-in functions: &lt;code&gt;dFdx&lt;/code&gt;, &lt;code&gt;dFdy&lt;/code&gt;, and &lt;code&gt;fwidth&lt;/code&gt;.</source>
          <target state="translated">指示GLSL内置函数 &lt;code&gt;dFdx&lt;/code&gt; ， &lt;code&gt;dFdy&lt;/code&gt; 和 &lt;code&gt;fwidth&lt;/code&gt; 的导数计算的准确性。</target>
        </trans-unit>
        <trans-unit id="5f476999b5fc6af5989004522caf60a6b77aaef4" translate="yes" xml:space="preserve">
          <source>Indicates the amount of time, in seconds, that remain until the battery is fully charged.</source>
          <target state="translated">表示电池充满电前的剩余时间(秒)。</target>
        </trans-unit>
        <trans-unit id="0cb14f029e722d38e78fa8c314af9264028e5e5f" translate="yes" xml:space="preserve">
          <source>Indicates the amount of time, in seconds, that remains until the battery is fully discharged.</source>
          <target state="translated">表示电池完全放电前的剩余时间,以秒为单位。</target>
        </trans-unit>
        <trans-unit id="4dcdce9af50fb71fd294b26eadee66245c48b589" translate="yes" xml:space="preserve">
          <source>Indicates the current battery charge level as a value between &lt;code&gt;0.0&lt;/code&gt; and &lt;code&gt;1.0&lt;/code&gt;.</source>
          <target state="translated">指示当前的电池充电量，其值介于 &lt;code&gt;0.0&lt;/code&gt; 和 &lt;code&gt;1.0&lt;/code&gt; 之间。</target>
        </trans-unit>
        <trans-unit id="2752511a47f92f5ae331dc73946fdb5c8286874a" translate="yes" xml:space="preserve">
          <source>Indicates the current offset of the audio stream that was created by a call to &lt;code&gt;mozWriteAudio()&lt;/code&gt;. This offset is specified as the number of samples since the beginning of the stream.</source>
          <target state="translated">指示通过调用 &lt;code&gt;mozWriteAudio()&lt;/code&gt; 创建的音频流的当前偏移量。此偏移量指定为自流开始以来的样本数。</target>
        </trans-unit>
        <trans-unit id="33387dcb2fc19aefe8db1d79d43f13804b752ce6" translate="yes" xml:space="preserve">
          <source>Indicates the device type that caused the event (mouse, pen, touch, etc.)</source>
          <target state="translated">表示引起事件的设备类型(鼠标、笔、触摸等)。</target>
        </trans-unit>
        <trans-unit id="670facc19573cdf9413def0fb93eb003831bace7" translate="yes" xml:space="preserve">
          <source>Indicates the font-face's loading status. It will be one of &lt;code&gt;'loading'&lt;/code&gt; or &lt;code&gt;'loaded'&lt;/code&gt;.</source>
          <target state="translated">指示字体的加载状态。这将是 &lt;code&gt;'loading'&lt;/code&gt; 或 &lt;code&gt;'loaded'&lt;/code&gt; 之一。</target>
        </trans-unit>
        <trans-unit id="12e10815e3517b0bfc615ce72f4978ae81859a1f" translate="yes" xml:space="preserve">
          <source>Indicates the function to call when the specified action type is invoked. This is a void function, with no parameters.</source>
          <target state="translated">指定动作类型被调用时要调用的函数。这是一个void函数,没有参数。</target>
        </trans-unit>
        <trans-unit id="92a6696cb0c1a9574f3a98901317ec74d1eff0f7" translate="yes" xml:space="preserve">
          <source>Indicates the horizontal alignment of the cell data in the column.</source>
          <target state="translated">表示列中单元格数据的水平排列。</target>
        </trans-unit>
        <trans-unit id="de0215c62713d8a1f2a26586bf95a98eba8d402e" translate="yes" xml:space="preserve">
          <source>Indicates the horizontal distance the shadow should extend from the object. This value isn't affected by the transformation matrix. The default is 0.</source>
          <target state="translated">表示阴影应该从对象延伸的水平距离。此值不受变换矩阵的影响。默认值为0。</target>
        </trans-unit>
        <trans-unit id="d3a3683fb1126e821280de7cf8bdcf1feed014bd" translate="yes" xml:space="preserve">
          <source>Indicates the name of the identity assertion provider.</source>
          <target state="translated">表示身份认证提供者的名称。</target>
        </trans-unit>
        <trans-unit id="d4c0bd6d459586c0f92e582d37373292e23d800a" translate="yes" xml:space="preserve">
          <source>Indicates the name of the style sheet set that's currently in use.</source>
          <target state="translated">表示当前正在使用的样式表集的名称。</target>
        </trans-unit>
        <trans-unit id="89c65e8efdd80c668c59ea6823544ef4127545d1" translate="yes" xml:space="preserve">
          <source>Indicates the number of the endpoint to clear. The promise will reject if an invalid endpoint is supplied.</source>
          <target state="translated">表示要清除的端点的编号。如果提供了无效的端点,承诺将拒绝。</target>
        </trans-unit>
        <trans-unit id="0a476d7abc82a932b12b8e9df8568e20909ed28d" translate="yes" xml:space="preserve">
          <source>Indicates the provider of the identity assertion.</source>
          <target state="translated">表示身份证明的提供者。</target>
        </trans-unit>
        <trans-unit id="8abb26c645db9c1f05e28bb68d1f62f8736b62af" translate="yes" xml:space="preserve">
          <source>Indicates the size of the blurring effect; this value doesn't correspond to a number of pixels and is not affected by the current transformation matrix. The default value is 0.</source>
          <target state="translated">表示模糊效果的大小,该值不对应像素数,不受当前变换矩阵的影响。默认值为0。</target>
        </trans-unit>
        <trans-unit id="39462415955f44d1e8b23904530abcbdd9bb7332" translate="yes" xml:space="preserve">
          <source>Indicates the type of message. May be one of &lt;code&gt;license-request&lt;/code&gt;, &lt;code&gt;license-renewal&lt;/code&gt;, &lt;code&gt;license-renewal&lt;/code&gt;, or &lt;code&gt;individualization-request&lt;/code&gt;.</source>
          <target state="translated">指示消息的类型。可以是 &lt;code&gt;license-request&lt;/code&gt; ， &lt;code&gt;license-renewal&lt;/code&gt; ， &lt;code&gt;license-renewal&lt;/code&gt; 或 &lt;code&gt;individualization-request&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="71623b83c5b10a6500c1b3253d31f4375fb05d7a" translate="yes" xml:space="preserve">
          <source>Indicates the vertical alignment of the cell data in the column.</source>
          <target state="translated">表示列中单元格数据的垂直排列。</target>
        </trans-unit>
        <trans-unit id="c659be4f9bebe1ad9886bfa1ca77e5943e12f522" translate="yes" xml:space="preserve">
          <source>Indicates the vertical distance the shadow should extend from the object. This value isn't affected by the transformation matrix. The default is 0.</source>
          <target state="translated">表示阴影应该从对象延伸的垂直距离。此值不受变换矩阵的影响。默认值为0。</target>
        </trans-unit>
        <trans-unit id="6f892da6b733d5eaf06855ec14d1cac874f2091f" translate="yes" xml:space="preserve">
          <source>Indicates the visibility of the current client. This value can be one of &lt;code&gt;hidden&lt;/code&gt;, &lt;code&gt;visible&lt;/code&gt;, &lt;code&gt;prerender&lt;/code&gt;, or &lt;code&gt;unloaded&lt;/code&gt;.</source>
          <target state="translated">指示当前客户端的可见性。此值可以是 &lt;code&gt;hidden&lt;/code&gt; ， &lt;code&gt;visible&lt;/code&gt; ， &lt;code&gt;prerender&lt;/code&gt; 或 &lt;code&gt;unloaded&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="263abb9e83a986ee34435d657f244e87bb128285" translate="yes" xml:space="preserve">
          <source>Indicates whether a context is capable of using features that require secure contexts.</source>
          <target state="translated">表示上下文是否能够使用需要安全上下文的功能。</target>
        </trans-unit>
        <trans-unit id="8f3e675f73f1593382fcae2b67992a8859c9a1fa" translate="yes" xml:space="preserve">
          <source>Indicates whether a persistent distinctive identifier is required.</source>
          <target state="translated">表示是否需要一个持久的独特标识符。</target>
        </trans-unit>
        <trans-unit id="09ac7218d9aa20e78da6980428d1b9a2e0d7bc5f" translate="yes" xml:space="preserve">
          <source>Indicates whether a session has been started with a paired USB device.</source>
          <target state="translated">表示是否已经用配对的USB设备启动了一个会话。</target>
        </trans-unit>
        <trans-unit id="5e538254f76e96fb281a0e7a4e9ce69d2ede8aef" translate="yes" xml:space="preserve">
          <source>Indicates whether or not &lt;a href=&quot;event/preventdefault&quot;&gt;&lt;code&gt;event.preventDefault()&lt;/code&gt;&lt;/a&gt; has been called on the event.</source>
          <target state="translated">指示是否已在事件上调用&lt;a href=&quot;event/preventdefault&quot;&gt; &lt;code&gt;event.preventDefault()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="47c2fd8a58e98d8b4b46b757d418223f6e55bf4a" translate="yes" xml:space="preserve">
          <source>Indicates whether or not messages sent on the &lt;a href=&quot;../rtcdatachannel&quot;&gt;&lt;code&gt;RTCDataChannel&lt;/code&gt;&lt;/a&gt; are required to arrive at their destination in the same order in which they were sent (&lt;code&gt;true&lt;/code&gt;), or if they're allowed to arrive out-of-order (&lt;code&gt;false&lt;/code&gt;). &lt;code&gt;true&lt;/code&gt;</source>
          <target state="translated">指示是否要求在&lt;a href=&quot;../rtcdatachannel&quot;&gt; &lt;code&gt;RTCDataChannel&lt;/code&gt; &lt;/a&gt;上发送的消息以发送时的顺序（ &lt;code&gt;true&lt;/code&gt; ）到达目的地，或者是否允许它们无序到达（ &lt;code&gt;false&lt;/code&gt; ）。 &lt;code&gt;true&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="79cfac20185cac0f489e4c931060f626ad8c19ff" translate="yes" xml:space="preserve">
          <source>Indicates whether or not sending and receiving using the paired &lt;code&gt;RTCRtpSender&lt;/code&gt; and &lt;code&gt;RTCRtpReceiver&lt;/code&gt; has been permanently disabled, either due to SDP offer/answer, or due to a call to &lt;a href=&quot;rtcrtptransceiver/stop&quot;&gt;&lt;code&gt;stop()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">指示由于SDP offer / answer或对&lt;a href=&quot;rtcrtptransceiver/stop&quot;&gt; &lt;code&gt;stop()&lt;/code&gt; &lt;/a&gt;的调用，是否已永久禁用使用配对的 &lt;code&gt;RTCRtpSender&lt;/code&gt; 和 &lt;code&gt;RTCRtpReceiver&lt;/code&gt; 进行发送和接收。</target>
        </trans-unit>
        <trans-unit id="59cf01226259dc793b3314431ae2e36c9963f453" translate="yes" xml:space="preserve">
          <source>Indicates whether or not the device is providing orientation data absolutely (that is, in reference to the Earth's coordinate frame) or using some arbitrary frame determined by the device. See &lt;a href=&quot;https://developer.mozilla.org/en/DOM/Orientation_and_motion_data_explained&quot;&gt;Orientation and motion data explained&lt;/a&gt; for details.</source>
          <target state="translated">指示设备是绝对提供方向数据（即参考地球坐标系）还是使用设备确定的任意框架。有关详细信息，请参见&lt;a href=&quot;https://developer.mozilla.org/en/DOM/Orientation_and_motion_data_explained&quot;&gt;解释的方向和运动数据&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="78957535526dc4925910f8b70f5c4bf6b8a81ec8" translate="yes" xml:space="preserve">
          <source>Indicates whether or not the event was initiated by the browser (after a user click for instance) or by a script (using an event creation method, like &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Event/initEvent&quot;&gt;event.initEvent&lt;/a&gt;).</source>
          <target state="translated">指示事件是由浏览器（例如，在用户单击之后）还是由脚本（使用事件创建方法，如&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Event/initEvent&quot;&gt;event.initEvent&lt;/a&gt;）启动的。</target>
        </trans-unit>
        <trans-unit id="c0c357a065bf3d6f657e2df70fd5dd6997e7eb26" translate="yes" xml:space="preserve">
          <source>Indicates whether or not the response is the result of a redirect; that is, its URL list has more than one entry.</source>
          <target state="translated">表示响应是否是重定向的结果;也就是说,它的URL列表有一个以上的条目。</target>
        </trans-unit>
        <trans-unit id="c821825b0c76f63357ee9e9fbd99a620ac826fc3" translate="yes" xml:space="preserve">
          <source>Indicates whether or not there is currently an active stream of video running.</source>
          <target state="translated">表示当前是否有活动的视频流在运行。</target>
        </trans-unit>
        <trans-unit id="be80c9199209ddc4eaf845c7c68cde13dbbfcaca" translate="yes" xml:space="preserve">
          <source>Indicates whether the &lt;code&gt;MediaRecorder&lt;/code&gt; instance will record input when the input &lt;a href=&quot;mediastreamtrack&quot;&gt;&lt;code&gt;MediaStreamTrack&lt;/code&gt;&lt;/a&gt; is muted. If this attribute is &lt;code&gt;false&lt;/code&gt;, &lt;code&gt;MediaRecorder&lt;/code&gt; will record silence for audio and black frames for video. The default is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">指示当输入&lt;a href=&quot;mediastreamtrack&quot;&gt; &lt;code&gt;MediaStreamTrack&lt;/code&gt; &lt;/a&gt;被静音时， &lt;code&gt;MediaRecorder&lt;/code&gt; 实例是否将记录输入。如果此属性为 &lt;code&gt;false&lt;/code&gt; ，则 &lt;code&gt;MediaRecorder&lt;/code&gt; 将记录音频的静音和视频的黑帧。默认值为 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="42c3cb6e0b5aba8e748535d09bddd2e84d045ba9" translate="yes" xml:space="preserve">
          <source>Indicates whether the &lt;code&gt;PaymentRequest&lt;/code&gt; object can make a payment before calling &lt;code&gt;show()&lt;/code&gt;.</source>
          <target state="translated">指示 &lt;code&gt;PaymentRequest&lt;/code&gt; 对象在调用 &lt;code&gt;show()&lt;/code&gt; 之前是否可以付款。</target>
        </trans-unit>
        <trans-unit id="4d5331ca4d2f8ff22635a9bbda0c4ffc343528c0" translate="yes" xml:space="preserve">
          <source>Indicates whether the ability to persist state is required.</source>
          <target state="translated">表示是否需要持续状态的能力。</target>
        </trans-unit>
        <trans-unit id="3dcb541000db277de6a73be2618295168fa554ce" translate="yes" xml:space="preserve">
          <source>Indicates whether the animation is currently waiting for an asynchronous operation such as initiating playback or pausing a running animation.</source>
          <target state="translated">表示动画当前是否在等待异步操作,如启动播放或暂停正在运行的动画。</target>
        </trans-unit>
        <trans-unit id="0e5ee5b6414063f4374fdf05be2729ba9380a7e6" translate="yes" xml:space="preserve">
          <source>Indicates whether the attribute is an &quot;ID attribute&quot;. An &quot;ID attribute&quot; being an attribute which value is expected to be unique across a DOM Document. In HTML DOM, &quot;id&quot; is the only ID attribute, but XML documents could define others. Whether or not an attribute is unique is often determined by a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/DTD&quot;&gt;DTD&lt;/a&gt; or other schema description.</source>
          <target state="translated">指示该属性是否为&amp;ldquo; ID属性&amp;rdquo;。&amp;ldquo; ID属性&amp;rdquo;是一种属性，其值在DOM文档中应是唯一的。在HTML DOM中，&amp;ldquo; id&amp;rdquo;是唯一的ID属性，但是XML文档可以定义其他属性。属性是否唯一通常由&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/DTD&quot;&gt;DTD&lt;/a&gt;或其他模式描述确定。</target>
        </trans-unit>
        <trans-unit id="de5bea75b1380592d1126bd58fe92433f4180ae3" translate="yes" xml:space="preserve">
          <source>Indicates whether the current media session is playing. Valid values are &lt;code&gt;&quot;none&quot;&lt;/code&gt;, &lt;code&gt;&quot;paused&quot;&lt;/code&gt;, or &lt;code&gt;&quot;playing&quot;&lt;/code&gt;.</source>
          <target state="translated">指示当前的媒体会话是否正在播放。有效值为 &lt;code&gt;&quot;none&quot;&lt;/code&gt; ， &lt;code&gt;&quot;paused&quot;&lt;/code&gt; 或 &lt;code&gt;&quot;playing&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dbec7f6539d606f3f1db5c5a4b158313bfe93759" translate="yes" xml:space="preserve">
          <source>Indicates whether the devices input or output should be cleared. Valid values are &lt;code&gt;'in'&lt;/code&gt; or &lt;code&gt;'out'&lt;/code&gt;.</source>
          <target state="translated">指示是否应清除设备的输入或输出。有效值为 &lt;code&gt;'in'&lt;/code&gt; 或 &lt;code&gt;'out'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2d007cc5129d76ac92234990a583e3589562ab12" translate="yes" xml:space="preserve">
          <source>Indicates whether the document is rendered in &lt;a href=&quot;https://developer.mozilla.org/en/Quirks_Mode_and_Standards_Mode&quot;&gt;Quirks mode&lt;/a&gt; or Standards mode.</source>
          <target state="translated">指示是以&amp;ldquo; &lt;a href=&quot;https://developer.mozilla.org/en/Quirks_Mode_and_Standards_Mode&quot;&gt;怪癖&amp;rdquo;模式&lt;/a&gt;还是&amp;ldquo;标准&amp;rdquo;模式呈现文档。</target>
        </trans-unit>
        <trans-unit id="d9979a4e1c75f19075eb4234f278473d1471d513" translate="yes" xml:space="preserve">
          <source>Indicates whether the document is rendered in &lt;em&gt;quirks&lt;/em&gt; or &lt;em&gt;strict&lt;/em&gt; mode.</source>
          <target state="translated">指示是以&lt;em&gt;怪癖&lt;/em&gt;还是&lt;em&gt;严格&lt;/em&gt;模式呈现文档。</target>
        </trans-unit>
        <trans-unit id="920a3ad7650a5914adadcf90f00d4875e9b89311" translate="yes" xml:space="preserve">
          <source>Indicates whether the element on which it is invoked has pointer capture for the pointer identified by the given pointer ID.</source>
          <target state="translated">表示被调用的元素是否对给定指针ID所标识的指针进行了指针捕获。</target>
        </trans-unit>
        <trans-unit id="52877506a30c4059937d86864e7d92ec1837bc62" translate="yes" xml:space="preserve">
          <source>Indicates whether the option is currently selected.</source>
          <target state="translated">表示当前是否选择该选项。</target>
        </trans-unit>
        <trans-unit id="d42405514ac15e244a1866a08f02a537ed7c51a0" translate="yes" xml:space="preserve">
          <source>Indicates whether the specified property is in the &lt;code&gt;StylePropertyMapReadOnly&lt;/code&gt; object.</source>
          <target state="translated">指示指定的属性是否在 &lt;code&gt;StylePropertyMapReadOnly&lt;/code&gt; 对象中。</target>
        </trans-unit>
        <trans-unit id="80aaec07420325168a56eaaa04ee7ad690d01cef" translate="yes" xml:space="preserve">
          <source>Indicates whether the upper bound excludes the endpoint value. The default is false.</source>
          <target state="translated">表示上界是否不包括端点值。默认值是false。</target>
        </trans-unit>
        <trans-unit id="3711be406bf25bfdb58e502f4c5613e3c5583099" translate="yes" xml:space="preserve">
          <source>Indicates whether the user agent is controlled by automation.</source>
          <target state="translated">表示用户代理是否由自动化控制。</target>
        </trans-unit>
        <trans-unit id="a349b6ccf98bb02b9d50a2a55022dc73b09207cf" translate="yes" xml:space="preserve">
          <source>Indicates whether the video can be rendered more efficiently.</source>
          <target state="translated">表示是否可以更有效地渲染视频。</target>
        </trans-unit>
        <trans-unit id="05fc56c6e337be9e7958cc1d91e67239d5828050" translate="yes" xml:space="preserve">
          <source>Indicates which phase of the event flow is being processed.</source>
          <target state="translated">表示正在处理事件流的哪个阶段。</target>
        </trans-unit>
        <trans-unit id="e65d49bd8da934bd8237e4eb10f374f5e2fc4a5a" translate="yes" xml:space="preserve">
          <source>Indicates which phase of the event flow is currently being evaluated.</source>
          <target state="translated">表示当前正在评估事件流的哪个阶段。</target>
        </trans-unit>
        <trans-unit id="313a0571fda078724f569e72a0578a3cbaa3ebae" translate="yes" xml:space="preserve">
          <source>Indicates why the connection was closed. This property takes one of the following values: &lt;code&gt;error&lt;/code&gt;, &lt;code&gt;closed&lt;/code&gt;, or &lt;code&gt;wentaway&lt;/code&gt;.</source>
          <target state="translated">指示为什么关闭连接。此属性接受下列值之一： &lt;code&gt;error&lt;/code&gt; ， &lt;code&gt;closed&lt;/code&gt; ，或 &lt;code&gt;wentaway&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7a2436fa32b60c93f3ae0214f7abc8af02c91c34" translate="yes" xml:space="preserve">
          <source>Indication</source>
          <target state="translated">Indication</target>
        </trans-unit>
        <trans-unit id="107c579b95c81170e17edde104041a737b9b922b" translate="yes" xml:space="preserve">
          <source>Individual &lt;a href=&quot;../file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; objects can be retrieved by simply accessing the list as an array:</source>
          <target state="translated">只需访问列表作为数组即可检索单个&lt;a href=&quot;../file&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt;对象：</target>
        </trans-unit>
        <trans-unit id="cd19e8167746bd3a2c71c2b016e8f9128b4aa837" translate="yes" xml:space="preserve">
          <source>Individual transformations of points and polygons in space in WebGL are handled by the basic transformation matrices like translation, scale, and rotation. These matrices can be composed together and grouped in special ways to make them useful for rendering complicated 3d scenes. These composed matrices ultimately move the original model data around into a special coordinate space called clip space. This is a 2 unit wide cube. The center coordinate is (0,0,0), while the corners range from (-1,-1,-1) to (1,1,1). This clip space is compressed down into a 2d space and rasterized into an image.</source>
          <target state="translated">WebGL中的点和多边形在空间中的单个变换由基本的变换矩阵处理,如平移、缩放和旋转。这些矩阵可以以特殊的方式组合和分组,使其在渲染复杂的三维场景时非常有用。这些组成的矩阵最终会将原始模型数据移动到一个特殊的坐标空间,称为剪辑空间。这是一个2个单位宽的立方体。中心坐标是(0,0,0),而角的范围从(-1,-1,-1)到(1,1,1)。这个剪贴空间被压缩成一个二维空间,并被光栅化为图像。</target>
        </trans-unit>
        <trans-unit id="6bcc9a981a51e3ebc371a32152669ea9066624b1" translate="yes" xml:space="preserve">
          <source>Information exchanged during signaling</source>
          <target state="translated">信号传递过程中交换的信息</target>
        </trans-unit>
        <trans-unit id="376bc1157a4b933fae2a9dfb20684a86ce2cf24d" translate="yes" xml:space="preserve">
          <source>Information needed in order to set up the connection: the IP addressing and port information needed for the peers to be able to talk to one another.</source>
          <target state="translated">建立连接所需的信息:对等体之间能够相互对话所需的IP地址和端口信息。</target>
        </trans-unit>
        <trans-unit id="72ec802f7446ac769ada0d55fecb94ce5fbb4d81" translate="yes" xml:space="preserve">
          <source>Information on working with event handlers</source>
          <target state="translated">关于使用事件处理程序的信息</target>
        </trans-unit>
        <trans-unit id="aedc2e372d5cb458a850dc90bc72925df23a2fa5" translate="yes" xml:space="preserve">
          <source>Informative logging of information. You may use &lt;a href=&quot;console#Using_string_substitutions&quot;&gt;string substitution&lt;/a&gt; and additional arguments with this method.</source>
          <target state="translated">信息记录。您可以在此方法中使用&lt;a href=&quot;console#Using_string_substitutions&quot;&gt;字符串替换&lt;/a&gt;和其他参数。</target>
        </trans-unit>
        <trans-unit id="fdaddb9ce367c2ca746a97cc24d2e8817a51f27d" translate="yes" xml:space="preserve">
          <source>Inheritance</source>
          <target state="translated">Inheritance</target>
        </trans-unit>
        <trans-unit id="7864bef4e98617d80cf4ddb1b5036da383315b0c" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;authenticatorresponse/clientdatajson&quot;&gt;&lt;code&gt;AuthenticatorResponse.clientDataJSON&lt;/code&gt;&lt;/a&gt;. Includes the client data for the authentication, such as origin and challenge.</source>
          <target state="translated">继承自&lt;a href=&quot;authenticatorresponse/clientdatajson&quot;&gt; &lt;code&gt;AuthenticatorResponse.clientDataJSON&lt;/code&gt; &lt;/a&gt;。包括用于身份验证的客户端数据，例如来源和质询。</target>
        </trans-unit>
        <trans-unit id="a7c45c31b4d0dcea6ac286ee958b4a4a4570cf91" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;credential&quot;&gt;&lt;code&gt;Credential&lt;/code&gt;&lt;/a&gt; and overridden to be the &lt;a href=&quot;windowbase64/base64_encoding_and_decoding&quot;&gt;base64url encoding&lt;/a&gt; of PublicKeyCredential.rawId.</source>
          <target state="translated">从&lt;a href=&quot;credential&quot;&gt; &lt;code&gt;Credential&lt;/code&gt; &lt;/a&gt;继承，并被重写为PublicKeyCredential.rawId 的&lt;a href=&quot;windowbase64/base64_encoding_and_decoding&quot;&gt;base64url编码&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a0e18e44079bb7f7a831ff7f2d4adaf758db6e18" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;credential&quot;&gt;&lt;code&gt;Credential&lt;/code&gt;&lt;/a&gt;. Always set to &quot;public-key&quot; for PublicKeyCredentials.</source>
          <target state="translated">继承自&lt;a href=&quot;credential&quot;&gt; &lt;code&gt;Credential&lt;/code&gt; &lt;/a&gt;。始终将PublicKeyCredentials设置为&amp;ldquo; public-key&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="3041d69f79ff14b70c9a0438662f5882cc0505d2" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;eventtarget&quot;&gt;&lt;code&gt;EventTarget&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">继承自&lt;a href=&quot;eventtarget&quot;&gt; &lt;code&gt;EventTarget&lt;/code&gt; &lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="01f177b463fc294bdcc09de6dbbf7ff775050cc0" translate="yes" xml:space="preserve">
          <source>Inherited from WorkerGlobalScope</source>
          <target state="translated">继承自WorkerGlobalScope</target>
        </trans-unit>
        <trans-unit id="7951150c36a5b0078509be63ec158d0a10f3f90a" translate="yes" xml:space="preserve">
          <source>Inherited properties</source>
          <target state="translated">继承财产</target>
        </trans-unit>
        <trans-unit id="84f16ef56773ff7e3a91862b69e96c346f436cf4" translate="yes" xml:space="preserve">
          <source>Inherits from: &lt;a href=&quot;eventtarget&quot;&gt;&lt;code&gt;EventTarget&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">继承自：&lt;a href=&quot;eventtarget&quot;&gt; &lt;code&gt;EventTarget&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="57c0c56df543c82fcefc44413b3ac85e77b0f769" translate="yes" xml:space="preserve">
          <source>Inherits from: &lt;a href=&quot;eventtarget&quot;&gt;EventTarget&lt;/a&gt;</source>
          <target state="translated">继承自：&lt;a href=&quot;eventtarget&quot;&gt;EventTarget&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e9714939fe6408b5bc2e98878b76913f55c712ab" translate="yes" xml:space="preserve">
          <source>Inherits from: &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en/IndexedDB/IDBRequest&quot;&gt;IDBRequest&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">继承自： &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en/IndexedDB/IDBRequest&quot;&gt;IDBRequest&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="14cb9bffa021be1c70926c7c04cf3e99959a6e0a" translate="yes" xml:space="preserve">
          <source>Inherits methods from its parent interface, &lt;a href=&quot;idbcursor&quot;&gt;&lt;code&gt;IDBCursor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">从其父接口&lt;a href=&quot;idbcursor&quot;&gt; &lt;code&gt;IDBCursor&lt;/code&gt; &lt;/a&gt;继承方法。</target>
        </trans-unit>
        <trans-unit id="b2934e25eb4a8ca0fc3ce529391eeb98fe33cba7" translate="yes" xml:space="preserve">
          <source>Inherits methods from its parent, &lt;a href=&quot;event&quot;&gt;&lt;code&gt;Event&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">从其父&lt;a href=&quot;event&quot;&gt; &lt;code&gt;Event&lt;/code&gt; &lt;/a&gt;继承方法。</target>
        </trans-unit>
        <trans-unit id="bfe8191bb0774c32f0167b16772b5dcaf8299d17" translate="yes" xml:space="preserve">
          <source>Inherits properties from its parent interface, &lt;a href=&quot;idbcursor&quot;&gt;&lt;code&gt;IDBCursor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">从其父接口&lt;a href=&quot;idbcursor&quot;&gt; &lt;code&gt;IDBCursor&lt;/code&gt; &lt;/a&gt;继承属性。</target>
        </trans-unit>
        <trans-unit id="53b42937afb55f5c7827416aa911796e83c49c0d" translate="yes" xml:space="preserve">
          <source>Inherits properties from its parent, &lt;a href=&quot;event&quot;&gt;&lt;code&gt;Event&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">从其父&lt;a href=&quot;event&quot;&gt; &lt;code&gt;Event&lt;/code&gt; &lt;/a&gt;继承属性。</target>
        </trans-unit>
        <trans-unit id="3d508e28156c7e964397687023c44172ddeee6e9" translate="yes" xml:space="preserve">
          <source>Initial (older) definition, which is now outdated.</source>
          <target state="translated">最初(较早)的定义,现已过时。</target>
        </trans-unit>
        <trans-unit id="35f764caa3bea8e54772a7830f20925d8c69dbdf" translate="yes" xml:space="preserve">
          <source>Initial (older) definition.</source>
          <target state="translated">最初(较早)的定义:</target>
        </trans-unit>
        <trans-unit id="035932ce61bd03f6681a2dfbb742b6af7b651dcc" translate="yes" xml:space="preserve">
          <source>Initial Definition</source>
          <target state="translated">初步定义</target>
        </trans-unit>
        <trans-unit id="9e915d7086e42ba7ad8fb470ce6fd37be732353b" translate="yes" xml:space="preserve">
          <source>Initial definition</source>
          <target state="translated">初步定义</target>
        </trans-unit>
        <trans-unit id="b05a13b2525f74836ec1dfae834faa32544e2380" translate="yes" xml:space="preserve">
          <source>Initial definition (&lt;a href=&quot;https://dvcs.w3.org/hg/dom3events/raw-file/tip/html/DOM3Events-key.html#keys-modifier&quot;&gt;Modifier Keys spec&lt;/a&gt;)</source>
          <target state="translated">初始定义（&lt;a href=&quot;https://dvcs.w3.org/hg/dom3events/raw-file/tip/html/DOM3Events-key.html#keys-modifier&quot;&gt;修饰键规格&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="57b0dbba5b7b00a290af593cd2b5e8d5860d6d28" translate="yes" xml:space="preserve">
          <source>Initial definition (DOM Level 0)</source>
          <target state="translated">初始定义(DOM Level 0)</target>
        </trans-unit>
        <trans-unit id="1dad956cc1872349ad5efc994aa62cd85f1c1fb6" translate="yes" xml:space="preserve">
          <source>Initial definition (Note: This event is specified in the Push API, but accessed through &lt;a href=&quot;../serviceworkerglobalscope&quot;&gt;&lt;code&gt;ServiceWorkerGlobalScope&lt;/code&gt;&lt;/a&gt;.)</source>
          <target state="translated">初始定义（注意：此事件在Push API中指定，但可以通过&lt;a href=&quot;../serviceworkerglobalscope&quot;&gt; &lt;code&gt;ServiceWorkerGlobalScope&lt;/code&gt; &lt;/a&gt;访问。）</target>
        </trans-unit>
        <trans-unit id="d4f82f8b30c03539c90f752f0acf6bdde2d12e45" translate="yes" xml:space="preserve">
          <source>Initial definition (as an obsolete property).</source>
          <target state="translated">最初的定义(作为一种过时的财产):</target>
        </trans-unit>
        <trans-unit id="12bc585995f4384d0038313f4051b21a82ad9267" translate="yes" xml:space="preserve">
          <source>Initial definition (implements &lt;code&gt;URLUtils&lt;/code&gt;).</source>
          <target state="translated">初始定义（实现 &lt;code&gt;URLUtils&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="61fe4cce703b9897ba32b003276af3ef1a9476c7" translate="yes" xml:space="preserve">
          <source>Initial definition for WebGL.</source>
          <target state="translated">WebGL的初始定义。</target>
        </trans-unit>
        <trans-unit id="ba1f93feb2f3bfdbbb984cac6c6a774c6bf12318" translate="yes" xml:space="preserve">
          <source>Initial definition for the interface</source>
          <target state="translated">接口的初始定义</target>
        </trans-unit>
        <trans-unit id="bd3e29ae4544172ea15498e979ce6e1fdfcf9df3" translate="yes" xml:space="preserve">
          <source>Initial definition in the DOM 1 specification.</source>
          <target state="translated">DOM 1规范中的初始定义。</target>
        </trans-unit>
        <trans-unit id="50beb284a7176e1493be211730ab0c49ca4a53e1" translate="yes" xml:space="preserve">
          <source>Initial definition in the DOM 2 Events specification.</source>
          <target state="translated">DOM 2事件规范中的初始定义。</target>
        </trans-unit>
        <trans-unit id="d38ed773e0e13defb944605bec75dfe2aa4b20d9" translate="yes" xml:space="preserve">
          <source>Initial definition of &lt;code&gt;PerformanceObserver()&lt;/code&gt; constructor.</source>
          <target state="translated">&lt;code&gt;PerformanceObserver()&lt;/code&gt; 构造函数的初始定义。</target>
        </trans-unit>
        <trans-unit id="dabb3ed7c33e82a10614679f9e35dc2eaee58c7f" translate="yes" xml:space="preserve">
          <source>Initial definition of &lt;code&gt;PerformanceObserver&lt;/code&gt; interface.</source>
          <target state="translated">&lt;code&gt;PerformanceObserver&lt;/code&gt; 接口的初始定义。</target>
        </trans-unit>
        <trans-unit id="88268710602bd6eaccf32feac9b1e7c525b37729" translate="yes" xml:space="preserve">
          <source>Initial definition of &lt;code&gt;disconnect()&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;disconnect()&lt;/code&gt; 方法的初始定义。</target>
        </trans-unit>
        <trans-unit id="70a3de73f0e3220ea5de9b77004d45bb529a8999" translate="yes" xml:space="preserve">
          <source>Initial definition of &lt;code&gt;getEntriesByName()&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;getEntriesByName()&lt;/code&gt; 方法的初始定义。</target>
        </trans-unit>
        <trans-unit id="cb74f8ce571789279cc896e18ad0b05c31469e31" translate="yes" xml:space="preserve">
          <source>Initial definition of &lt;code&gt;getEntriesByType()&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;getEntriesByType()&lt;/code&gt; 方法的初始定义。</target>
        </trans-unit>
        <trans-unit id="252bd294b03bcca2e27217155bf30813ef9cb582" translate="yes" xml:space="preserve">
          <source>Initial definition of &lt;code&gt;observe()&lt;/code&gt; method.</source>
          <target state="translated">watch &lt;code&gt;observe()&lt;/code&gt; 方法的初始定义。</target>
        </trans-unit>
        <trans-unit id="8671988156f022034f5168efce00429d73b77250" translate="yes" xml:space="preserve">
          <source>Initial definition of &lt;code&gt;takeRecords()&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;takeRecords()&lt;/code&gt; 方法的初始定义。</target>
        </trans-unit>
        <trans-unit id="ae5a5c6262be02332c66eab4bf367bd9a030763e" translate="yes" xml:space="preserve">
          <source>Initial definition of &lt;code&gt;toJSON()&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;toJSON()&lt;/code&gt; 方法的初始定义。</target>
        </trans-unit>
        <trans-unit id="9f1113be36362e8733f10569daacac2dbc77f447" translate="yes" xml:space="preserve">
          <source>Initial definition, as &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/span&quot;&gt;&lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt;&lt;/a&gt; was associated with an &lt;a href=&quot;htmlelement&quot;&gt;&lt;code&gt;HTMLElement&lt;/code&gt;&lt;/a&gt; before that.</source>
          <target state="translated">初始定义，因为&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/span&quot;&gt; &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; &lt;/a&gt;在此之前与&lt;a href=&quot;htmlelement&quot;&gt; &lt;code&gt;HTMLElement&lt;/code&gt; &lt;/a&gt;关联。</target>
        </trans-unit>
        <trans-unit id="b22604826ce7839aacd9494e8bdf74cbc0fe1acf" translate="yes" xml:space="preserve">
          <source>Initial definition, included &lt;a href=&quot;https://dvcs.w3.org/hg/dom3events/raw-file/tip/html/DOM3Events-code.html&quot;&gt;code values&lt;/a&gt;.</source>
          <target state="translated">初始定义，包括&lt;a href=&quot;https://dvcs.w3.org/hg/dom3events/raw-file/tip/html/DOM3Events-code.html&quot;&gt;代码值&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6abb7831e174c8e76df3cd001d41996c6533a878" translate="yes" xml:space="preserve">
          <source>Initial definition, included key values.</source>
          <target state="translated">初步定义,包括关键值。</target>
        </trans-unit>
        <trans-unit id="5219982ee9454fa5b7b6d90858dc0c8ef94330b4" translate="yes" xml:space="preserve">
          <source>Initial definition, on the &lt;a href=&quot;../node&quot;&gt;&lt;code&gt;Node&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">在&lt;a href=&quot;../node&quot;&gt; &lt;code&gt;Node&lt;/code&gt; &lt;/a&gt;接口上的初始定义。</target>
        </trans-unit>
        <trans-unit id="020c5ef04c8e0349aef5df24ce031e6c67e3bd41" translate="yes" xml:space="preserve">
          <source>Initial definition, snapshot of &lt;a href=&quot;https://html.spec.whatwg.org/multipage/&quot;&gt;HTML Living Standard&lt;/a&gt;</source>
          <target state="translated">初始定义，&lt;a href=&quot;https://html.spec.whatwg.org/multipage/&quot;&gt;HTML Living Standard的&lt;/a&gt;快照</target>
        </trans-unit>
        <trans-unit id="34d5fd7eb564370744ddfdfc409121e6028c5008" translate="yes" xml:space="preserve">
          <source>Initial definition, snapshot of &lt;a href=&quot;https://html.spec.whatwg.org/multipage/&quot;&gt;HTML Living Standard&lt;/a&gt;.</source>
          <target state="translated">初始定义，&lt;a href=&quot;https://html.spec.whatwg.org/multipage/&quot;&gt;HTML Living Standard的&lt;/a&gt;快照。</target>
        </trans-unit>
        <trans-unit id="1996078361460df53a1d2f9e9930c7c26d7f873c" translate="yes" xml:space="preserve">
          <source>Initial definition.</source>
          <target state="translated">初步定义:</target>
        </trans-unit>
        <trans-unit id="9b547c0e3963f5dc594e276ea01a9690d086e3fc" translate="yes" xml:space="preserve">
          <source>Initial definition. Based on OpenGL ES 2.0</source>
          <target state="translated">初始定义。基于OpenGL ES 2.0</target>
        </trans-unit>
        <trans-unit id="01ff8be5558c7f502c55f3a230f8bd98f0622ce6" translate="yes" xml:space="preserve">
          <source>Initial definition. Older versions of this spec were called &quot;Media Capture Output&quot;.</source>
          <target state="translated">初始定义。本规范的旧版本称为 &quot;媒体捕获输出&quot;。</target>
        </trans-unit>
        <trans-unit id="c211f960f5d88cc90b25080b6c3a905417d435f8" translate="yes" xml:space="preserve">
          <source>Initial definition. This event is specified in the Push API, but accessed through &lt;a href=&quot;../serviceworkerglobalscope&quot;&gt;&lt;code&gt;ServiceWorkerGlobalScope&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">初始定义。此事件在Push API中指定，但是可以通过&lt;a href=&quot;../serviceworkerglobalscope&quot;&gt; &lt;code&gt;ServiceWorkerGlobalScope&lt;/code&gt; &lt;/a&gt;访问。</target>
        </trans-unit>
        <trans-unit id="6ad0f5594d284a1d7d442f941281392d4637da77" translate="yes" xml:space="preserve">
          <source>Initial definition. This property is specified on the &lt;a href=&quot;../notifications_api&quot;&gt;&lt;code&gt;Notifications_API&lt;/code&gt;&lt;/a&gt; even though it's part of &lt;a href=&quot;../serviceworkerglobalscope&quot;&gt;&lt;code&gt;ServiceWorkerGlobalScope&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">初始定义。即使它是&lt;a href=&quot;../serviceworkerglobalscope&quot;&gt; &lt;code&gt;ServiceWorkerGlobalScope&lt;/code&gt; &lt;/a&gt;的一部分，也可以在&lt;a href=&quot;../notifications_api&quot;&gt; &lt;code&gt;Notifications_API&lt;/code&gt; &lt;/a&gt;上指定此属性。</target>
        </trans-unit>
        <trans-unit id="a5a806ce0a9f8bc786f4eb5fc74231ac2baf8dd9" translate="yes" xml:space="preserve">
          <source>Initial definition. Unlike OpenGL, WebGL requires &lt;code&gt;zNear&lt;/code&gt; and &lt;code&gt;zFar&lt;/code&gt; values to be clamped to the range 0 to 1. Additionally, &lt;code&gt;zNear&lt;/code&gt; must be less than or equal to &lt;code&gt;zFar&lt;/code&gt;.</source>
          <target state="translated">初始定义。与OpenGL不同，WebGL要求 &lt;code&gt;zNear&lt;/code&gt; 和 &lt;code&gt;zFar&lt;/code&gt; 值限制在0到1的范围内。此外， &lt;code&gt;zNear&lt;/code&gt; 必须小于或等于 &lt;code&gt;zFar&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="53cb0e86655e97503e5060e4c704294482fa666c" translate="yes" xml:space="preserve">
          <source>Initial definition; living specification.</source>
          <target state="translated">初步定义;生活规范。</target>
        </trans-unit>
        <trans-unit id="022515f406a57864f40cd1203eb4dcb41febf436" translate="yes" xml:space="preserve">
          <source>Initial defintion.</source>
          <target state="translated">初步定义:</target>
        </trans-unit>
        <trans-unit id="79ea0d21e059f23d3bd03e3e331e0629c38b7aa4" translate="yes" xml:space="preserve">
          <source>Initial oscillator</source>
          <target state="translated">初始振荡器</target>
        </trans-unit>
        <trans-unit id="b05c468492e894bf720cb26fc99830351a2cef87" translate="yes" xml:space="preserve">
          <source>Initial specification</source>
          <target state="translated">初步规格</target>
        </trans-unit>
        <trans-unit id="8f03130f43d80f7b832367da10284552d03021e1" translate="yes" xml:space="preserve">
          <source>Initial specification.</source>
          <target state="translated">初步规格:</target>
        </trans-unit>
        <trans-unit id="33627a6943eb41fb54dab553888b9b11f79e79fd" translate="yes" xml:space="preserve">
          <source>Initial specification; snapshot of an early version&lt;a href=&quot;https://html.spec.whatwg.org/multipage/&quot;&gt;HTML Living Standard&lt;/a&gt;.</source>
          <target state="translated">初始规格；早期版本&lt;a href=&quot;https://html.spec.whatwg.org/multipage/&quot;&gt;HTML Living Standard的&lt;/a&gt;快照。</target>
        </trans-unit>
        <trans-unit id="fcb1ddc45496d5bd9bbb1d0e3e24a58c56f33281" translate="yes" xml:space="preserve">
          <source>Initial value</source>
          <target state="translated">初始值</target>
        </trans-unit>
        <trans-unit id="94193ed67d9a7ccb8f78c1137546b993638b466f" translate="yes" xml:space="preserve">
          <source>Initial version</source>
          <target state="translated">初始版本</target>
        </trans-unit>
        <trans-unit id="2d2745c6a52a8530e3d1ae44888db948ce2624e9" translate="yes" xml:space="preserve">
          <source>Initial version.</source>
          <target state="translated">初始版本:</target>
        </trans-unit>
        <trans-unit id="68fa16ffd48f366e4fa8d57fea78ff03fcab0191" translate="yes" xml:space="preserve">
          <source>Initialization</source>
          <target state="translated">Initialization</target>
        </trans-unit>
        <trans-unit id="ffa659950aa5f6b232f7f21e3d97090137ebd5db" translate="yes" xml:space="preserve">
          <source>Initializes a &lt;code&gt;AnimationEvent&lt;/code&gt; created using the deprecated &lt;a href=&quot;document/createevent&quot;&gt;&lt;code&gt;Document.createEvent(&quot;AnimationEvent&quot;)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">初始化 &lt;code&gt;AnimationEvent&lt;/code&gt; 使用过时创建&lt;a href=&quot;document/createevent&quot;&gt; &lt;code&gt;Document.createEvent(&quot;AnimationEvent&quot;)&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="78e3a109f29ee532cd63abc0ee0effe5fe2e1e61" translate="yes" xml:space="preserve">
          <source>Initializes a &lt;code&gt;CustomEvent&lt;/code&gt; object. If the event has already being dispatched, this method does nothing.</source>
          <target state="translated">初始化 &lt;code&gt;CustomEvent&lt;/code&gt; 对象。如果事件已经被调度，则此方法不执行任何操作。</target>
        </trans-unit>
        <trans-unit id="6732f0a3699c1db29b9e02c9c049eb47ae50eaca" translate="yes" xml:space="preserve">
          <source>Initializes a &lt;code&gt;KeyboardEvent&lt;/code&gt; object. This is now deprecated. You should instead use the &lt;a href=&quot;keyboardevent/keyboardevent&quot;&gt;&lt;code&gt;KeyboardEvent()&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">初始化 &lt;code&gt;KeyboardEvent&lt;/code&gt; 对象。现在已弃用。您应该改用&lt;a href=&quot;keyboardevent/keyboardevent&quot;&gt; &lt;code&gt;KeyboardEvent()&lt;/code&gt; &lt;/a&gt;构造函数。</target>
        </trans-unit>
        <trans-unit id="7d78528a797d39b036860b58b63de9ba562bb324" translate="yes" xml:space="preserve">
          <source>Initializes a &lt;code&gt;KeyboardEvent&lt;/code&gt; object. This was implemented only by Firefox, and is no longer supported even there; instead, you should use the &lt;a href=&quot;keyboardevent/keyboardevent&quot;&gt;&lt;code&gt;KeyboardEvent()&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">初始化 &lt;code&gt;KeyboardEvent&lt;/code&gt; 对象。这仅由Firefox实现，甚至在那里不再受支持。相反，您应该使用&lt;a href=&quot;keyboardevent/keyboardevent&quot;&gt; &lt;code&gt;KeyboardEvent()&lt;/code&gt; &lt;/a&gt;构造函数。</target>
        </trans-unit>
        <trans-unit id="26c4db6f5861ca66a43d4d8492ae9dcaee84972c" translate="yes" xml:space="preserve">
          <source>Initializes a &lt;code&gt;ProgressEvent&lt;/code&gt; created using the deprecated &lt;a href=&quot;document/createevent&quot;&gt;&lt;code&gt;Document.createEvent(&quot;ProgressEvent&quot;)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">初始化 &lt;code&gt;ProgressEvent&lt;/code&gt; 使用过时创建&lt;a href=&quot;document/createevent&quot;&gt; &lt;code&gt;Document.createEvent(&quot;ProgressEvent&quot;)&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="74e7c3f59972e88347dd0157c94890b0aaee4bae" translate="yes" xml:space="preserve">
          <source>Initializes a &lt;code&gt;TransitionEvent&lt;/code&gt; created using the deprecated &lt;a href=&quot;document/createevent&quot;&gt;&lt;code&gt;Document.createEvent(&quot;TransitionEvent&quot;)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">初始化 &lt;code&gt;TransitionEvent&lt;/code&gt; 使用过时创建&lt;a href=&quot;document/createevent&quot;&gt; &lt;code&gt;Document.createEvent(&quot;TransitionEvent&quot;)&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="b9636f89accefad2958ace45cedc9145593a860d" translate="yes" xml:space="preserve">
          <source>Initializes a &lt;code&gt;UIEvent&lt;/code&gt; object. If the event has already being dispatched, this method does nothing.</source>
          <target state="translated">初始化 &lt;code&gt;UIEvent&lt;/code&gt; 对象。如果事件已经被调度，则此方法不执行任何操作。</target>
        </trans-unit>
        <trans-unit id="d7faf8950ff40b7f1d5367cdb4b3f759a853c2b0" translate="yes" xml:space="preserve">
          <source>Initializes a message event. &lt;strong&gt;Do not use this anymore&lt;/strong&gt; &amp;mdash; &lt;strong&gt;use the &lt;a href=&quot;messageevent/messageevent&quot;&gt;&lt;code&gt;MessageEvent()&lt;/code&gt;&lt;/a&gt; constructor instead.&lt;/strong&gt;</source>
          <target state="translated">初始化消息事件。&lt;strong&gt;不要再使用此&lt;/strong&gt; - &lt;strong&gt;使用&lt;a href=&quot;messageevent/messageevent&quot;&gt; &lt;code&gt;MessageEvent()&lt;/code&gt; &lt;/a&gt;构造函数来代替。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cc72a97513e03452903940f5a3175e175471678d" translate="yes" xml:space="preserve">
          <source>Initializes a request. This method is to be used from JavaScript code; to initialize a request from native code, use &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIXMLHttpRequest#openRequest()&quot;&gt;&lt;code&gt;openRequest()&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">初始化请求。此方法将在JavaScript代码中使用；要从本机代码初始化请求，请改用&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIXMLHttpRequest#openRequest()&quot;&gt; &lt;code&gt;openRequest()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f8f1d8f720489f222bea703914d6dde97722af0a" translate="yes" xml:space="preserve">
          <source>Initializes a request. This method is to be used from native code; to initialize a request from JavaScript code, use &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIXMLHttpRequest#open()&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt; instead. See the documentation for &lt;code&gt;open()&lt;/code&gt;.</source>
          <target state="translated">初始化请求。此方法将在本机代码中使用；要初始化来自JavaScript代码的请求，请改用&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIXMLHttpRequest#open()&quot;&gt; &lt;code&gt;open()&lt;/code&gt; &lt;/a&gt;。请参阅 &lt;code&gt;open()&lt;/code&gt; 的文档。</target>
        </trans-unit>
        <trans-unit id="4acd7bc886002218be09386ceda041709a986e82" translate="yes" xml:space="preserve">
          <source>Initializes and creates the buffer object's data store.</source>
          <target state="translated">初始化并创建缓冲区对象的数据存储。</target>
        </trans-unit>
        <trans-unit id="662441d69fafea09e1cbd1dcab8079ebbb3b52b6" translate="yes" xml:space="preserve">
          <source>Initializes the attributes of a &lt;code&gt;CompositionEvent&lt;/code&gt; object.</source>
          <target state="translated">初始化 &lt;code&gt;CompositionEvent&lt;/code&gt; 对象的属性。</target>
        </trans-unit>
        <trans-unit id="9b30e6ba4d6da9f93a54a79fa3a16b11835d28b7" translate="yes" xml:space="preserve">
          <source>Initializes the event in a manner analogous to the similarly-named method in the DOM Events interfaces.</source>
          <target state="translated">以类似于DOM Events接口中类似名称的方法的方式初始化该事件。</target>
        </trans-unit>
        <trans-unit id="7cae6813da6309eb2702605c41e8ccd6dc0e0aa7" translate="yes" xml:space="preserve">
          <source>Initializes the object for use from C++ code.</source>
          <target state="translated">初始化对象,以便从C++代码中使用。</target>
        </trans-unit>
        <trans-unit id="1fea38e764b61808f3dc21af351183323340a29a" translate="yes" xml:space="preserve">
          <source>Initializes the value of a &lt;code&gt;CloseEvent&lt;/code&gt; created. If the event has already being dispatched, this method does nothing. Do not use this method anymore, use the &lt;a href=&quot;closeevent/closeevent&quot;&gt;&lt;code&gt;CloseEvent()&lt;/code&gt;&lt;/a&gt; constructor instead.</source>
          <target state="translated">初始化创建的 &lt;code&gt;CloseEvent&lt;/code&gt; 的值。如果事件已经被调度，则此方法不执行任何操作。不再使用此方法，而是使用&lt;a href=&quot;closeevent/closeevent&quot;&gt; &lt;code&gt;CloseEvent()&lt;/code&gt; &lt;/a&gt;构造函数。</target>
        </trans-unit>
        <trans-unit id="99afa371f39ad6cb5ad2b7c5dd4889017665940a" translate="yes" xml:space="preserve">
          <source>Initializes the value of a &lt;code&gt;MouseEvent&lt;/code&gt; created. If the event has already being dispatched, this method does nothing.</source>
          <target state="translated">初始化创建的 &lt;code&gt;MouseEvent&lt;/code&gt; 的值。如果事件已经被调度，则此方法不执行任何操作。</target>
        </trans-unit>
        <trans-unit id="2a3e4c3cf54f38745050cedd7f18833099798cfb" translate="yes" xml:space="preserve">
          <source>Initializes the value of an Event created. If the event has already being dispatched, this method does nothing.</source>
          <target state="translated">初始化创建的事件的值。如果事件已经被派发,本方法不做任何操作。</target>
        </trans-unit>
        <trans-unit id="573b5b6de349656f4fef286e1811251aef4d4b1c" translate="yes" xml:space="preserve">
          <source>Initializing ImageData with an array</source>
          <target state="translated">用数组初始化ImageData</target>
        </trans-unit>
        <trans-unit id="c5d87bc69ebaed7dbd4d56b900875e09f3daf25d" translate="yes" xml:space="preserve">
          <source>Initializing the chroma-key player</source>
          <target state="translated">初始化色键播放器</target>
        </trans-unit>
        <trans-unit id="697cac7fff1bf187eb6c1c4b427beda45b688da2" translate="yes" xml:space="preserve">
          <source>Initializing the program is handled through a &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/load&quot;&gt;load&lt;/a&gt;&lt;/code&gt; event handler called &lt;code&gt;startup()&lt;/code&gt;:</source>
          <target state="translated">程序的初始化通过一个名为 &lt;code&gt;startup()&lt;/code&gt; 的 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/load&quot;&gt;load&lt;/a&gt;&lt;/code&gt; 事件处理程序进行处理：</target>
        </trans-unit>
        <trans-unit id="c30c64e10224eb904a609cdf362200a3d555c5e0" translate="yes" xml:space="preserve">
          <source>Initializing the shaders</source>
          <target state="translated">初始化着色器</target>
        </trans-unit>
        <trans-unit id="b892e8007c1dc132c62aa70ab89ebceb38052cbf" translate="yes" xml:space="preserve">
          <source>Initially, the element is in default mode, and so the contents of the element represent both the value of the element and its default value.</source>
          <target state="translated">最初,该元素处于默认模式,因此该元素的内容既代表该元素的值,也代表其默认值。</target>
        </trans-unit>
        <trans-unit id="b670fa7dcdf1eee0fdb8b5eb0f0bfb32e790e4f8" translate="yes" xml:space="preserve">
          <source>Initially, this method was returning a &lt;code&gt;NodeList&lt;/code&gt;; it was then changed to reflect the spec change.</source>
          <target state="translated">最初，此方法返回一个 &lt;code&gt;NodeList&lt;/code&gt; ；然后进行了更改以反映规格更改。</target>
        </trans-unit>
        <trans-unit id="6dd656a78dd481247e783b5be565d858b1dc3d8f" translate="yes" xml:space="preserve">
          <source>Initiates or reconnects to a presentation made by a controlling browsing context.</source>
          <target state="translated">启动或重新连接到一个控制浏览上下文所做的演示。</target>
        </trans-unit>
        <trans-unit id="59c19052a8f26aaaebf861bf35063562486d35aa" translate="yes" xml:space="preserve">
          <source>Inject the content into the body of a &lt;a href=&quot;../documentfragment&quot;&gt;document fragment&lt;/a&gt; via &lt;code&gt;fragment.body.innerHTML&lt;/code&gt; and traverse the DOM of the fragment.</source>
          <target state="translated">通过 &lt;code&gt;fragment.body.innerHTML&lt;/code&gt; 将内容注入&lt;a href=&quot;../documentfragment&quot;&gt;文档片段&lt;/a&gt;的主体中，并遍历片段的DOM。</target>
        </trans-unit>
        <trans-unit id="98e31f31621b2b2c96108c691b61747cdf07b860" translate="yes" xml:space="preserve">
          <source>Inner structure of a WebVTT file</source>
          <target state="translated">WebVTT文件的内部结构</target>
        </trans-unit>
        <trans-unit id="b568d47f2e244743b1fd7472db836ef9769c21f8" translate="yes" xml:space="preserve">
          <source>Input</source>
          <target state="translated">Input</target>
        </trans-unit>
        <trans-unit id="d9da3dd2d2fbe2bab51f830bc33170422fbdab95" translate="yes" xml:space="preserve">
          <source>Input Events Level 2&lt;br/&gt;&lt;small&gt;The definition of 'InputEvent' in that specification.&lt;/small&gt;</source>
          <target state="translated">输入事件级别2 &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; InputEvent&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="0a4a4993a5df231f30f5a18ac543ebd7ac8b70b8" translate="yes" xml:space="preserve">
          <source>Input Events Level 2&lt;br/&gt;&lt;small&gt;The definition of 'data' in that specification.&lt;/small&gt;</source>
          <target state="translated">输入事件级别2 &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo;数据&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="437455a9abade3441d0df35892bd7bc2af4865a1" translate="yes" xml:space="preserve">
          <source>Input Events Level 2&lt;br/&gt;&lt;small&gt;The definition of 'dataTransfer' in that specification.&lt;/small&gt;</source>
          <target state="translated">输入事件级别2 &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; dataTransfer&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="a14c73becb4bf8e4f3fc4cc2032947ca56afc58d" translate="yes" xml:space="preserve">
          <source>Input Events Level 2&lt;br/&gt;&lt;small&gt;The definition of 'getTargetRanges()' in that specification.&lt;/small&gt;</source>
          <target state="translated">输入事件级别2 &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; getTargetRanges（）&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="8cec7374ec334792691792b74c817e86f782261d" translate="yes" xml:space="preserve">
          <source>Input Events Level 2&lt;br/&gt;&lt;small&gt;The definition of 'inputType' in that specification.&lt;/small&gt;</source>
          <target state="translated">输入事件级别2 &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; inputType&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="64d0116d32048d9ab214211ec1523e226958d96f" translate="yes" xml:space="preserve">
          <source>Input Port API</source>
          <target state="translated">输入端口API</target>
        </trans-unit>
        <trans-unit id="b2d980366df121db4b1956c37b9110632881299b" translate="yes" xml:space="preserve">
          <source>Input channels</source>
          <target state="translated">输入通道</target>
        </trans-unit>
        <trans-unit id="95da1bce38f52cee1035ff4f22a6afc78da3e92c" translate="yes" xml:space="preserve">
          <source>Input device capabilities concepts and usage</source>
          <target state="translated">输入设备功能的概念和用途</target>
        </trans-unit>
        <trans-unit id="b3c4d64d691c433c68f619cc19dac9a8c6c1547d" translate="yes" xml:space="preserve">
          <source>Input devices</source>
          <target state="translated">输入设备</target>
        </trans-unit>
        <trans-unit id="3f37e64e1fb0569e1f9eac1670a8c657e750c404" translate="yes" xml:space="preserve">
          <source>InputDeviceCapabilities</source>
          <target state="translated">InputDeviceCapabilities</target>
        </trans-unit>
        <trans-unit id="d985897548b763bac8d0429f38523fedeeb12231" translate="yes" xml:space="preserve">
          <source>InputDeviceCapabilities API</source>
          <target state="translated">输入设备能力API</target>
        </trans-unit>
        <trans-unit id="6ee398ed5d6d97b18e4bf72f5615ec3d1c483f69" translate="yes" xml:space="preserve">
          <source>InputDeviceCapabilities.constructor</source>
          <target state="translated">InputDeviceCapabilities.constructor</target>
        </trans-unit>
        <trans-unit id="8801a8bb7b406d600a25ac86b66a4e1a68673b3d" translate="yes" xml:space="preserve">
          <source>InputDeviceCapabilities.firesTouchEvents</source>
          <target state="translated">InputDeviceCapabilities.firesTouchEvents</target>
        </trans-unit>
        <trans-unit id="e891f6963a79ad31742aa8577785624c73d984cb" translate="yes" xml:space="preserve">
          <source>InputDeviceCapabilities&lt;br/&gt;&lt;small&gt;The definition of 'fireTouchEvents' in that specification.&lt;/small&gt;</source>
          <target state="translated">InputDeviceCapabilities &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; fireTouchEvents&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="7f2e8ab5f23551daffbc3adc0778e5f4008990ef" translate="yes" xml:space="preserve">
          <source>InputDeviceCapabilities&lt;br/&gt;&lt;small&gt;The definition of 'sourceCapabilities' in that specification.&lt;/small&gt;</source>
          <target state="translated">InputDeviceCapabilities &lt;br/&gt;&lt;small&gt;该规范中&amp;ldquo; sourceCapabilities&amp;rdquo;的定义。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="ec99bd83c71d3d8a08f77e563059a952e996dff6" translate="yes" xml:space="preserve">
          <source>InputEvent</source>
          <target state="translated">InputEvent</target>
        </trans-unit>
        <trans-unit id="db405689c885ffc9cc491389bcf8d84e692afd89" translate="yes" xml:space="preserve">
          <source>InputEvent.constructor</source>
          <target state="translated">InputEvent.constructor</target>
        </trans-unit>
        <trans-unit id="d15e51806926190c3df82872202c0f939c48fad8" translate="yes" xml:space="preserve">
          <source>InputEvent.data</source>
          <target state="translated">InputEvent.data</target>
        </trans-unit>
        <trans-unit id="48cbcf65de3e4c182e3fca4276375a3269f458b6" translate="yes" xml:space="preserve">
          <source>InputEvent.dataTransfer</source>
          <target state="translated">InputEvent.dataTransfer</target>
        </trans-unit>
        <trans-unit id="d6a6b797bed1c610ef20390f06850b601524b857" translate="yes" xml:space="preserve">
          <source>InputEvent.getTargetRanges</source>
          <target state="translated">InputEvent.getTargetRanges</target>
        </trans-unit>
        <trans-unit id="82ebd5a248dd7f3fe04ab6f879b2dfdcd0f9ef70" translate="yes" xml:space="preserve">
          <source>InputEvent.inputType</source>
          <target state="translated">InputEvent.inputType</target>
        </trans-unit>
        <trans-unit id="d07007435ff1dacf72421bb3156159bbb6e415d8" translate="yes" xml:space="preserve">
          <source>InputEvent.isComposing</source>
          <target state="translated">InputEvent.isComposing</target>
        </trans-unit>
        <trans-unit id="434b0f50e01b1e9b69ea2e02d51cd44a3d4a98bb" translate="yes" xml:space="preserve">
          <source>InputStream</source>
          <target state="translated">InputStream</target>
        </trans-unit>
        <trans-unit id="1965ac7f3c5c7f389e62a29e10303ce93360fd9f" translate="yes" xml:space="preserve">
          <source>Insert HTML tags example</source>
          <target state="translated">插入HTML标签示例</target>
        </trans-unit>
        <trans-unit id="ae922ecf5095e3e2fe8c510278b6030c90ed9264" translate="yes" xml:space="preserve">
          <source>Insert a &lt;a href=&quot;node&quot;&gt;&lt;code&gt;Node&lt;/code&gt;&lt;/a&gt; at the start of a &lt;code&gt;Range&lt;/code&gt;.</source>
          <target state="translated">在 &lt;code&gt;Range&lt;/code&gt; 的开头插入一个&lt;a href=&quot;node&quot;&gt; &lt;code&gt;Node&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="83d717b5377b7eec0113939e7508465cd29001e1" translate="yes" xml:space="preserve">
          <source>Insert an element before the first child element, using the &lt;a href=&quot;firstchild&quot;&gt;firstChild&lt;/a&gt; property.</source>
          <target state="translated">使用&lt;a href=&quot;firstchild&quot;&gt;firstChild&lt;/a&gt;属性在第一个子元素之前插入一个元素。</target>
        </trans-unit>
        <trans-unit id="21ab3203efcbe8c3ecf469b814689e10adcaf751" translate="yes" xml:space="preserve">
          <source>Insert some HTML tags or &lt;em&gt;smiles&lt;/em&gt; or any custom text in a textarea.</source>
          <target state="translated">在文本区域中插入一些HTML标记或&lt;em&gt;微笑&lt;/em&gt;或任何自定义文本。</target>
        </trans-unit>
        <trans-unit id="994f2ea1394789d1f139c8de08078c350364e57f" translate="yes" xml:space="preserve">
          <source>Inserting Elements with appendChild(..)</source>
          <target state="translated">用appendChild(.)插入元素。</target>
        </trans-unit>
        <trans-unit id="72c5d3255605eb901fa336f1912cde4b54d0033c" translate="yes" xml:space="preserve">
          <source>Inserting an element</source>
          <target state="translated">插入一个元素</target>
        </trans-unit>
        <trans-unit id="0652d25bcd4cdec684cce236de4c9dacf309fd35" translate="yes" xml:space="preserve">
          <source>Inserting an element and text</source>
          <target state="translated">插入元素和文本</target>
        </trans-unit>
        <trans-unit id="e12f5e0042cd2f9fa12df63031d30e4caa49b8fe" translate="yes" xml:space="preserve">
          <source>Inserting nodes into a DOM based on XML</source>
          <target state="translated">在基于XML的DOM中插入节点。</target>
        </trans-unit>
        <trans-unit id="0a38d6d632941f0ea8c458a3b8bc942694d75445" translate="yes" xml:space="preserve">
          <source>Inserting text</source>
          <target state="translated">插入文本</target>
        </trans-unit>
        <trans-unit id="6d3f13b9d73e6f7ffe0149524ed91514865833b6" translate="yes" xml:space="preserve">
          <source>Inserting to an Existing Collection</source>
          <target state="translated">插入到一个现有的集合</target>
        </trans-unit>
        <trans-unit id="4d0d6ae61fcfcd1ce695d3f562854a697f8bd34e" translate="yes" xml:space="preserve">
          <source>Inserts a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/hr&quot;&gt;&lt;code&gt;&amp;lt;hr&amp;gt;&lt;/code&gt;&lt;/a&gt; element at the insertion point, or replaces the selection with it.</source>
          <target state="translated">在插入点插入&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/hr&quot;&gt; &lt;code&gt;&amp;lt;hr&amp;gt;&lt;/code&gt; &lt;/a&gt;元素，或用其替换选择。</target>
        </trans-unit>
        <trans-unit id="d375aa3df90c1211891dd7ca9148d1357e5a7429" translate="yes" xml:space="preserve">
          <source>Inserts a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/p&quot;&gt;paragraph&lt;/a&gt; around the selection or the current line. (Internet Explorer inserts a paragraph at the insertion point and deletes the selection.)</source>
          <target state="translated">在所选内容或当前行周围插入一个&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/p&quot;&gt;段落&lt;/a&gt;。（Internet Explorer在插入点插入一个段落并删除选择。）</target>
        </trans-unit>
        <trans-unit id="c401c34a03720ae87319424959251642e43866d2" translate="yes" xml:space="preserve">
          <source>Inserts a &lt;a href=&quot;node&quot;&gt;&lt;code&gt;Node&lt;/code&gt;&lt;/a&gt; before the reference node as a child of a specified parent node.</source>
          <target state="translated">在参考节点之前插入一个&lt;a href=&quot;node&quot;&gt; &lt;code&gt;Node&lt;/code&gt; &lt;/a&gt;作为指定父节点的子节点。</target>
        </trans-unit>
        <trans-unit id="b32f0cf62f3fe8e784980780da27c28810bad28f" translate="yes" xml:space="preserve">
          <source>Inserts a given element node at a given position relative to the element it is invoked upon.</source>
          <target state="translated">在给定的元素节点相对于它被调用的元素的给定位置插入一个元素节点。</target>
        </trans-unit>
        <trans-unit id="9198c76ff394c0e1571f89ea8465da728f4d1789" translate="yes" xml:space="preserve">
          <source>Inserts a given text node at a given position relative to the element it is invoked upon.</source>
          <target state="translated">在给定的文本节点相对于它被调用的元素的给定位置插入一个文本节点。</target>
        </trans-unit>
        <trans-unit id="e16b7a1720921c090ef71907a89d6ebd2154a3ef" translate="yes" xml:space="preserve">
          <source>Inserts a new cell just before the given position in the row. If the given position is not given or is &lt;code&gt;-1&lt;/code&gt;, it appends the cell to the row. If the given position is greater (or equal as it starts at zero) than the amount of cells in the row, or is smaller than &lt;code&gt;-1&lt;/code&gt;, it raises a &lt;a href=&quot;domexception&quot;&gt;&lt;code&gt;DOMException&lt;/code&gt;&lt;/a&gt; with the &lt;code&gt;IndexSizeError&lt;/code&gt; value. Returns a reference to a &lt;a href=&quot;htmltablecellelement&quot;&gt;HTMLTableCellElement [en-US]&lt;/a&gt;.</source>
          <target state="translated">在行中给定位置之前插入一个新单元格。如果给定位置未给出或为 &lt;code&gt;-1&lt;/code&gt; ，则它将单元格附加到该行。如果给定位置大于（或等于从零开始的位置）大于行中的单元格数量，或小于 &lt;code&gt;-1&lt;/code&gt; ，则它将引发一个带有 &lt;code&gt;IndexSizeError&lt;/code&gt; 值的&lt;a href=&quot;domexception&quot;&gt; &lt;code&gt;DOMException&lt;/code&gt; &lt;/a&gt;。返回对&lt;a href=&quot;htmltablecellelement&quot;&gt;HTMLTableCellElement [en-US]&lt;/a&gt;的引用。</target>
        </trans-unit>
        <trans-unit id="18c42eae009d646ef6832ce53a717794ef241fde" translate="yes" xml:space="preserve">
          <source>Inserts a new item at the end of the list. If &lt;code&gt;newItem&lt;/code&gt; is already in a list, it is removed from its previous list before it is inserted into this list. The inserted item is the item itself and not a copy.</source>
          <target state="translated">在列表末尾插入一个新项目。如果 &lt;code&gt;newItem&lt;/code&gt; 已经在列表中，则在将其插入到此列表之前，将其从先前的列表中删除。插入的项目是项目本身，而不是副本。</target>
        </trans-unit>
        <trans-unit id="0551168480c2030ca5cd18674f1d710020d09a7d" translate="yes" xml:space="preserve">
          <source>Inserts a new item into the list at the specified position. The first item is number 0. If &lt;code&gt;newItem&lt;/code&gt; is already in a list, it is removed from its previous list before it is inserted into this list. The inserted item is the item itself and not a copy. If the item is already in this list, note that the index of the item to insert before is before the removal of the item. If the &lt;code&gt;index&lt;/code&gt; is equal to 0, then the new item is inserted at the front of the list. If the index is greater than or equal to &lt;code&gt;numberOfItems&lt;/code&gt;, then the new item is appended to the end of the list.</source>
          <target state="translated">将新项目插入列表中的指定位置。第一项是数字0。如果 &lt;code&gt;newItem&lt;/code&gt; 已在列表中，则在将其插入此列表之前，将其从其先前列表中删除。插入的项目是项目本身，而不是副本。如果该项目已经在此列表中，请注意，要插入的项目的索引之前是在删除该项目之前。如果 &lt;code&gt;index&lt;/code&gt; 等于0，则新项目将插入列表的开头。如果索引大于或等于 &lt;code&gt;numberOfItems&lt;/code&gt; ，则新项目将追加到列表的末尾。</target>
        </trans-unit>
        <trans-unit id="369c39b0458869aaf69518b3a1bc61eb2a25a309" translate="yes" xml:space="preserve">
          <source>Inserts a new keyframe rule into the current CSSKeyframesRule. The parameter is a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; containing a keyframe in the same format as an entry of a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/@keyframes&quot;&gt;&lt;code&gt;@keyframes&lt;/code&gt;&lt;/a&gt; at-rule. If it contains more than one keyframe rule, a &lt;a href=&quot;domexception&quot;&gt;&lt;code&gt;DOMException&lt;/code&gt;&lt;/a&gt; with a &lt;code&gt;SYNTAX_ERR&lt;/code&gt; is thrown.</source>
          <target state="translated">将新的关键帧规则插入当前的CSSKeyframesRule中。该参数是一个&lt;a href=&quot;domstring&quot;&gt; &lt;code&gt;DOMString&lt;/code&gt; ,&lt;/a&gt;其中包含与&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/@keyframes&quot;&gt; &lt;code&gt;@keyframes&lt;/code&gt; &lt;/a&gt;规则条目的格式相同的关键帧。如果它包含多个关键帧规则，则将引发带有 &lt;code&gt;SYNTAX_ERR&lt;/code&gt; 的&lt;a href=&quot;domexception&quot;&gt; &lt;code&gt;DOMException&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d84958f861217deb4b18189950e9034063e4b115" translate="yes" xml:space="preserve">
          <source>Inserts a new row just before the given position in the section. If the given position is not given or is &lt;code&gt;-1&lt;/code&gt;, it appends the row to the end of section. If the given position is greater (or equal as it starts at zero) than the amount of rows in the section, or is smaller than &lt;code&gt;-1&lt;/code&gt;, it raises a &lt;a href=&quot;domexception&quot;&gt;&lt;code&gt;DOMException&lt;/code&gt;&lt;/a&gt; with the &lt;code&gt;IndexSizeError&lt;/code&gt; value.</source>
          <target state="translated">在该节中给定位置之前插入新行。如果给定位置未给出或为 &lt;code&gt;-1&lt;/code&gt; ，它将行添加到节的末尾。如果给定位置大于（或等于从零开始的位置）大于该节中的行数，或者小于 &lt;code&gt;-1&lt;/code&gt; ，则它将引发带有 &lt;code&gt;IndexSizeError&lt;/code&gt; 值的&lt;a href=&quot;domexception&quot;&gt; &lt;code&gt;DOMException&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d14fe1d3a033b778600fe743acddbdb35bc53f11" translate="yes" xml:space="preserve">
          <source>Inserts a new rule at the specified position in the style sheet, given the textual representation of the rule.</source>
          <target state="translated">在样式表的指定位置插入一条新的规则,给定该规则的文本表示。</target>
        </trans-unit>
        <trans-unit id="ff86515e72a20292677bcf708c9044255a02f2f5" translate="yes" xml:space="preserve">
          <source>Inserts a new style rule into the current style sheet.</source>
          <target state="translated">在当前样式表中插入一个新的样式规则。</target>
        </trans-unit>
        <trans-unit id="7af864a925b9475a7f37efadcbfc3afebc06fb41" translate="yes" xml:space="preserve">
          <source>Inserts a set of &lt;a href=&quot;node&quot;&gt;&lt;code&gt;Node&lt;/code&gt;&lt;/a&gt; objects or &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; objects after the last child of the &lt;code&gt;ParentNode&lt;/code&gt;. &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; objects are inserted as equivalent &lt;a href=&quot;text&quot;&gt;&lt;code&gt;Text&lt;/code&gt;&lt;/a&gt; nodes.</source>
          <target state="translated">在 &lt;code&gt;ParentNode&lt;/code&gt; 的最后一个子项之后插入一组&lt;a href=&quot;node&quot;&gt; &lt;code&gt;Node&lt;/code&gt; &lt;/a&gt;对象或&lt;a href=&quot;domstring&quot;&gt; &lt;code&gt;DOMString&lt;/code&gt; &lt;/a&gt;对象。&lt;a href=&quot;domstring&quot;&gt; &lt;code&gt;DOMString&lt;/code&gt; &lt;/a&gt;对象作为等效的&lt;a href=&quot;text&quot;&gt; &lt;code&gt;Text&lt;/code&gt; &lt;/a&gt;节点插入。</target>
        </trans-unit>
        <trans-unit id="ad2b812dd4a0b3289d236fb0c28314cdbc30e68d" translate="yes" xml:space="preserve">
          <source>Inserts a set of &lt;a href=&quot;node&quot;&gt;&lt;code&gt;Node&lt;/code&gt;&lt;/a&gt; objects or &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; objects before the first child of the &lt;code&gt;ParentNode&lt;/code&gt;. &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; objects are inserted as equivalent &lt;a href=&quot;text&quot;&gt;&lt;code&gt;Text&lt;/code&gt;&lt;/a&gt; nodes.</source>
          <target state="translated">在 &lt;code&gt;ParentNode&lt;/code&gt; 的第一个孩子之前插入一组&lt;a href=&quot;node&quot;&gt; &lt;code&gt;Node&lt;/code&gt; &lt;/a&gt;对象或&lt;a href=&quot;domstring&quot;&gt; &lt;code&gt;DOMString&lt;/code&gt; &lt;/a&gt;对象。&lt;a href=&quot;domstring&quot;&gt; &lt;code&gt;DOMString&lt;/code&gt; &lt;/a&gt;对象作为等效的&lt;a href=&quot;text&quot;&gt; &lt;code&gt;Text&lt;/code&gt; &lt;/a&gt;节点插入。</target>
        </trans-unit>
        <trans-unit id="de6cbf3211322474fdd816ebff27c4249e7adc30" translate="yes" xml:space="preserve">
          <source>Inserts a set of &lt;a href=&quot;node&quot;&gt;&lt;code&gt;Node&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; objects in the children list of this &lt;code&gt;ChildNode&lt;/code&gt;'s parent, just after this &lt;code&gt;ChildNode&lt;/code&gt;. &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; objects are inserted as equivalent &lt;a href=&quot;text&quot;&gt;&lt;code&gt;Text&lt;/code&gt;&lt;/a&gt; nodes.</source>
          <target state="translated">插入一组&lt;a href=&quot;node&quot;&gt; &lt;code&gt;Node&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;domstring&quot;&gt; &lt;code&gt;DOMString&lt;/code&gt; &lt;/a&gt;对象在此的孩子名单 &lt;code&gt;ChildNode&lt;/code&gt; 的母公司，只是这之后 &lt;code&gt;ChildNode&lt;/code&gt; 。&lt;a href=&quot;domstring&quot;&gt; &lt;code&gt;DOMString&lt;/code&gt; &lt;/a&gt;对象作为等效的&lt;a href=&quot;text&quot;&gt; &lt;code&gt;Text&lt;/code&gt; &lt;/a&gt;节点插入。</target>
        </trans-unit>
        <trans-unit id="594b3f4e14345ff52decd720033fb77c43bddd51" translate="yes" xml:space="preserve">
          <source>Inserts a set of &lt;a href=&quot;node&quot;&gt;&lt;code&gt;Node&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; objects in the children list of this &lt;code&gt;ChildNode&lt;/code&gt;'s parent, just before this &lt;code&gt;ChildNode&lt;/code&gt;. &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; objects are inserted as equivalent &lt;a href=&quot;text&quot;&gt;&lt;code&gt;Text&lt;/code&gt;&lt;/a&gt; nodes.</source>
          <target state="translated">插入一组&lt;a href=&quot;node&quot;&gt; &lt;code&gt;Node&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;domstring&quot;&gt; &lt;code&gt;DOMString&lt;/code&gt; &lt;/a&gt;对象在此的孩子名单 &lt;code&gt;ChildNode&lt;/code&gt; 的父母，只是在此之前 &lt;code&gt;ChildNode&lt;/code&gt; 。&lt;a href=&quot;domstring&quot;&gt; &lt;code&gt;DOMString&lt;/code&gt; &lt;/a&gt;对象作为等效的&lt;a href=&quot;text&quot;&gt; &lt;code&gt;Text&lt;/code&gt; &lt;/a&gt;节点插入。</target>
        </trans-unit>
        <trans-unit id="d16851c6926d05979e9da774b4492f88c23b9de3" translate="yes" xml:space="preserve">
          <source>Inserts an HTML string at the insertion point (deletes selection). Requires a valid HTML string as a value argument. (Not supported by Internet Explorer.)</source>
          <target state="translated">在插入点插入一个HTML字符串(删除选择)。需要一个有效的HTML字符串作为值参数。(Internet Explorer不支持。)</target>
        </trans-unit>
        <trans-unit id="2734ffd87350ff1d4336985aea37b4a052b6c023" translate="yes" xml:space="preserve">
          <source>Inserts an image at the insertion point (deletes selection). Requires a URL string for the image's &lt;code&gt;src&lt;/code&gt; as a value argument. The requirements for this string are the same as &lt;code&gt;createLink&lt;/code&gt;.</source>
          <target state="translated">在插入点插入图像（删除选择）。需要图像 &lt;code&gt;src&lt;/code&gt; 的URL字符串作为value参数。此字符串的要求与 &lt;code&gt;createLink&lt;/code&gt; 相同。</target>
        </trans-unit>
        <trans-unit id="38efcf96ae2a45c10979bf8c1b8b42feb2f89769" translate="yes" xml:space="preserve">
          <source>Inserts the given plain text at the insertion point (deletes selection).</source>
          <target state="translated">在插入点插入给定的纯文本(删除选择)。</target>
        </trans-unit>
        <trans-unit id="5031da81798bc50c2dc9cb234cb9c2f39822f01c" translate="yes" xml:space="preserve">
          <source>Inserts the specified video effect into the media pipeline.</source>
          <target state="translated">在媒体管道中插入指定的视频效果。</target>
        </trans-unit>
        <trans-unit id="a5400ca437b7ea06a46e3c149d5a4ad34005be5e" translate="yes" xml:space="preserve">
          <source>Inside &lt;code&gt;waitUntil()&lt;/code&gt; we use the &lt;a href=&quot;../cachestorage/open&quot;&gt;&lt;code&gt;caches.open()&lt;/code&gt;&lt;/a&gt; method to create a new cache called &lt;code&gt;v1&lt;/code&gt;, which will be version 1 of our site resources cache. This returns a promise for a created cache; once resolved, we then call a function that calls &lt;code&gt;addAll()&lt;/code&gt; on the created cache, which for its parameter takes an array of origin-relative URLs to all the resources you want to cache.</source>
          <target state="translated">在 &lt;code&gt;waitUntil()&lt;/code&gt; 内部，我们使用&lt;a href=&quot;../cachestorage/open&quot;&gt; &lt;code&gt;caches.open()&lt;/code&gt; &lt;/a&gt;方法创建一个名为 &lt;code&gt;v1&lt;/code&gt; 的新缓存，它将成为站点资源缓存的版本1。这将返回创建缓存的承诺。解析后，我们将调用一个函数，该函数在已创建的缓存上调用 &lt;code&gt;addAll()&lt;/code&gt; ，该函数的参数将相对于原始URL的数组传递到要缓存的所有资源。</target>
        </trans-unit>
        <trans-unit id="ca031060ac3d32f4982b877e58e26db111f79013" translate="yes" xml:space="preserve">
          <source>Inside each ad, for demonstration purposes, we draw the current value of its &lt;code&gt;totalViewTime&lt;/code&gt;, converted into minutes and seconds. This is handled by passing the ad's element into the &lt;code&gt;drawAdTimer()&lt;/code&gt; function:</source>
          <target state="translated">在每个广告内部，出于演示目的，我们绘制了其 &lt;code&gt;totalViewTime&lt;/code&gt; 的当前值，将其转换为分钟和秒。这是通过将广告的元素传递到 &lt;code&gt;drawAdTimer()&lt;/code&gt; 函数来处理的：</target>
        </trans-unit>
        <trans-unit id="04c112b37be107bb5972963b46f67c326b629a27" translate="yes" xml:space="preserve">
          <source>Inside our &lt;code&gt;if() { ... }&lt;/code&gt; block, we run the &lt;a href=&quot;../navigator/getvrdisplays&quot;&gt;&lt;code&gt;Navigator.getVRDisplays()&lt;/code&gt;&lt;/a&gt; function. This returns a promise, which is fulfilled with an array containing all the VR display devices connected to the computer. If none are connected, the array will be empty.</source>
          <target state="translated">在 &lt;code&gt;if() { ... }&lt;/code&gt; 块中，我们运行&lt;a href=&quot;../navigator/getvrdisplays&quot;&gt; &lt;code&gt;Navigator.getVRDisplays()&lt;/code&gt; &lt;/a&gt;函数。这将返回一个承诺，该承诺将通过包含所有连接到计算机的VR显示设备的阵列来实现。如果未连接，则阵列将为空。</target>
        </trans-unit>
        <trans-unit id="3e1b0ccb3a85ffc80137a0b7686c08e182631d5d" translate="yes" xml:space="preserve">
          <source>Inside the &lt;code&gt;&amp;lt;custom-square&amp;gt;&lt;/code&gt; element's class definition we include some life cycle callbacks that make a call to an external function, &lt;code&gt;updateStyle()&lt;/code&gt;, which actually applies the size and color to the element. You'll see that we are passing it &lt;code&gt;this&lt;/code&gt; (the custom element itself) as a parameter.</source>
          <target state="translated">在 &lt;code&gt;&amp;lt;custom-square&amp;gt;&lt;/code&gt; 元素的类定义内，我们包括一些生命周期回调，这些回调调用外部函数 &lt;code&gt;updateStyle()&lt;/code&gt; ，该函数实际上将大小和颜色应用于该元素。你会看到，我们传递给它 &lt;code&gt;this&lt;/code&gt; （自定义元素本身）作为参数。</target>
        </trans-unit>
        <trans-unit id="1546e0ffda0dddfade36a903f9a6b7fd69e43648" translate="yes" xml:space="preserve">
          <source>Inside the &lt;code&gt;drawVRScene()&lt;/code&gt; function, you'll find this bit of code:</source>
          <target state="translated">在 &lt;code&gt;drawVRScene()&lt;/code&gt; 函数内部，您将找到以下代码：</target>
        </trans-unit>
        <trans-unit id="61d24c97484d712bff9735e4c9280ceaa1436730" translate="yes" xml:space="preserve">
          <source>Inside the &lt;code&gt;inputForm.onsubmit&lt;/code&gt; handler, we stop the form submitting with &lt;a href=&quot;../event/preventdefault&quot;&gt;preventDefault()&lt;/a&gt;, create a new &lt;a href=&quot;../speechsynthesisutterance&quot;&gt;&lt;code&gt;SpeechSynthesisUtterance&lt;/code&gt;&lt;/a&gt; instance containing the text from the text &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input&quot;&gt;&lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt;&lt;/a&gt;, set the utterance's voice to the voice selected in the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select&quot;&gt;&lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt;&lt;/a&gt; element, and start the utterance speaking via the &lt;a href=&quot;../speechsynthesis/speak&quot;&gt;&lt;code&gt;SpeechSynthesis.speak()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">在 &lt;code&gt;inputForm.onsubmit&lt;/code&gt; 处理程序内部，我们使用&lt;a href=&quot;../event/preventdefault&quot;&gt;preventDefault（）&lt;/a&gt;停止提交表单，创建一个新的&lt;a href=&quot;../speechsynthesisutterance&quot;&gt; &lt;code&gt;SpeechSynthesisUtterance&lt;/code&gt; &lt;/a&gt;实例，其中包含来自文本&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input&quot;&gt; &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; &lt;/a&gt;的文本，将话语的声音设置为在&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select&quot;&gt; &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; &lt;/a&gt;元素中选择的声音，然后启动通过&lt;a href=&quot;../speechsynthesis/speak&quot;&gt; &lt;code&gt;SpeechSynthesis.speak()&lt;/code&gt; &lt;/a&gt;方法进行语音发声。</target>
        </trans-unit>
        <trans-unit id="8a9527350bb6153413577f95b1696c63969b3fc3" translate="yes" xml:space="preserve">
          <source>Inside the &lt;code&gt;inputForm.onsubmit&lt;/code&gt; handler, we stop the form submitting with &lt;a href=&quot;event/preventdefault&quot;&gt;preventDefault()&lt;/a&gt;, create a new &lt;a href=&quot;speechsynthesisutterance&quot;&gt;&lt;code&gt;SpeechSynthesisUtterance&lt;/code&gt;&lt;/a&gt; instance containing the text from the text &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input&quot;&gt;&lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt;&lt;/a&gt;, set the utterance's voice to the voice selected in the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select&quot;&gt;&lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt;&lt;/a&gt; element, and start the utterance speaking via the &lt;a href=&quot;speechsynthesis/speak&quot;&gt;&lt;code&gt;SpeechSynthesis.speak()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">在 &lt;code&gt;inputForm.onsubmit&lt;/code&gt; 处理程序内部，我们使用&lt;a href=&quot;event/preventdefault&quot;&gt;preventDefault（）&lt;/a&gt;停止提交表单，创建一个新的&lt;a href=&quot;speechsynthesisutterance&quot;&gt; &lt;code&gt;SpeechSynthesisUtterance&lt;/code&gt; &lt;/a&gt;实例，其中包含来自文本&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input&quot;&gt; &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; &lt;/a&gt;的文本，将话语的声音设置为在&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select&quot;&gt; &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; &lt;/a&gt;元素中选择的声音，然后启动通过&lt;a href=&quot;speechsynthesis/speak&quot;&gt; &lt;code&gt;SpeechSynthesis.speak()&lt;/code&gt; &lt;/a&gt;方法进行语音发声。</target>
        </trans-unit>
        <trans-unit id="1dc1cec2069ec0bc76d28172357e7319e953ccff" translate="yes" xml:space="preserve">
          <source>Inside the &lt;code&gt;inputForm.onsubmit&lt;/code&gt; handler, we stop the form submitting with &lt;a href=&quot;event/preventdefault&quot;&gt;preventDefault()&lt;/a&gt;, use the &lt;a href=&quot;speechsynthesisutterance/speechsynthesisutterance&quot;&gt;&lt;code&gt;constructor&lt;/code&gt;&lt;/a&gt; to create a new utterance instance containing the text from the text &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input&quot;&gt;&lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt;&lt;/a&gt;, set the utterance's &lt;a href=&quot;speechsynthesisutterance/voice&quot;&gt;&lt;code&gt;voice&lt;/code&gt;&lt;/a&gt; to the voice selected in the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select&quot;&gt;&lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt;&lt;/a&gt; element, and start the utterance speaking via the &lt;a href=&quot;speechsynthesis/speak&quot;&gt;&lt;code&gt;SpeechSynthesis.speak()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">在 &lt;code&gt;inputForm.onsubmit&lt;/code&gt; 处理程序内部，我们使用&lt;a href=&quot;event/preventdefault&quot;&gt;preventDefault（）&lt;/a&gt;停止表单提交，使用&lt;a href=&quot;speechsynthesisutterance/speechsynthesisutterance&quot;&gt; &lt;code&gt;constructor&lt;/code&gt; &lt;/a&gt;创建一个包含来自文本&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input&quot;&gt; &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; &lt;/a&gt;的文本的新发音实例，将发音的&lt;a href=&quot;speechsynthesisutterance/voice&quot;&gt; &lt;code&gt;voice&lt;/code&gt; &lt;/a&gt;设置为在&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select&quot;&gt; &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; &lt;/a&gt;元素中选择的声音，然后通过&lt;a href=&quot;speechsynthesis/speak&quot;&gt; &lt;code&gt;SpeechSynthesis.speak()&lt;/code&gt; &lt;/a&gt;方法开始发声。</target>
        </trans-unit>
        <trans-unit id="3a90d492da1d8e3c5c1d52e4dc717d5d29a4b2f4" translate="yes" xml:space="preserve">
          <source>Inside the Party Bus: Building a Web App with Multiple Live Video Streams + Interactive Graphics</source>
          <target state="translated">党内巴士:用多个视频直播+交互式图形构建Web应用</target>
        </trans-unit>
        <trans-unit id="79e8023a8c1a5f58d27c2b9ce8b7711e24f4836d" translate="yes" xml:space="preserve">
          <source>Inside the context, create sources &amp;mdash; such as &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio&quot;&gt;&lt;code&gt;&amp;lt;audio&amp;gt;&lt;/code&gt;&lt;/a&gt;, oscillator, or stream.</source>
          <target state="translated">在上下文中，创建源-例如&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio&quot;&gt; &lt;code&gt;&amp;lt;audio&amp;gt;&lt;/code&gt; &lt;/a&gt;，振荡器或流。</target>
        </trans-unit>
        <trans-unit id="60a727ae8299354e94b0a6b4ac1738c5351ea2f2" translate="yes" xml:space="preserve">
          <source>Inside the context, create sources &amp;mdash; such as &lt;code&gt;&amp;lt;audio&amp;gt;&lt;/code&gt;, oscillator, stream</source>
          <target state="translated">在上下文中，创建源，例如 &lt;code&gt;&amp;lt;audio&amp;gt;&lt;/code&gt; ，振荡器，流</target>
        </trans-unit>
        <trans-unit id="14163be7049f8f1fe99917c7452746adbb8f5ddf" translate="yes" xml:space="preserve">
          <source>Inside the event handler function you can include code to upgrade the database structure, as shown in the example below.</source>
          <target state="translated">在事件处理函数中,你可以包含升级数据库结构的代码,如下例所示。</target>
        </trans-unit>
        <trans-unit id="8e746ae8ae6de16f0bd864a1387244108a586ac5" translate="yes" xml:space="preserve">
          <source>Inside the promise &lt;code&gt;then()&lt;/code&gt; block, we check whether the array length is more than 0; if so, we set the value of our &lt;code&gt;vrDisplay&lt;/code&gt; variable to the 0 index item inside the array. &lt;code&gt;vrDisplay&lt;/code&gt; now contains a &lt;a href=&quot;../vrdisplay&quot;&gt;&lt;code&gt;VRDisplay&lt;/code&gt;&lt;/a&gt; object representing our connected display!</source>
          <target state="translated">在promise &lt;code&gt;then()&lt;/code&gt; 块内部，我们检查数组长度是否大于0；否则，返回0。如果是这样，我们将 &lt;code&gt;vrDisplay&lt;/code&gt; 变量的值设置为数组内的0索引项。 &lt;code&gt;vrDisplay&lt;/code&gt; 现在包含一个&lt;a href=&quot;../vrdisplay&quot;&gt; &lt;code&gt;VRDisplay&lt;/code&gt; &lt;/a&gt;对象，该对象代表我们连接的显示器！</target>
        </trans-unit>
        <trans-unit id="26c461de447110f1457abba012d174dbab22fc6b" translate="yes" xml:space="preserve">
          <source>Inside the rendering loop, you grab the data required to display the current frame (&lt;a href=&quot;../vrdisplay/getframedata&quot;&gt;&lt;code&gt;VRDisplay.getFrameData()&lt;/code&gt;&lt;/a&gt;), draw the displayed scene twice &amp;mdash; once for the view in each eye &amp;mdash; then submit the rendered view to the display to show to the user via (&lt;a href=&quot;../vrdisplay/submitframe&quot;&gt;&lt;code&gt;VRDisplay.submitFrame()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">在渲染循环中，您将获取显示当前帧所需的数据（&lt;a href=&quot;../vrdisplay/getframedata&quot;&gt; &lt;code&gt;VRDisplay.getFrameData()&lt;/code&gt; &lt;/a&gt;），绘制两次显示的场景（每只眼睛的视图一次），然后将渲染的视图提交给显示器以显示给用户通过（&lt;a href=&quot;../vrdisplay/submitframe&quot;&gt; &lt;code&gt;VRDisplay.submitFrame()&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="baa217054091fd3c22a64c7040a9c9c31244eca8" translate="yes" xml:space="preserve">
          <source>Inside the rendering loop, you grab the data required to display the current frame (&lt;a href=&quot;vrdisplay/getframedata&quot;&gt;&lt;code&gt;VRDisplay.getFrameData()&lt;/code&gt;&lt;/a&gt;), draw the displayed scene twice &amp;mdash; once for the view in each eye, then submit the rendered view to the display to show to the user (&lt;a href=&quot;vrdisplay/submitframe&quot;&gt;&lt;code&gt;VRDisplay.submitFrame()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">在渲染循环中，您获取显示当前帧所需的数据（&lt;a href=&quot;vrdisplay/getframedata&quot;&gt; &lt;code&gt;VRDisplay.getFrameData()&lt;/code&gt; &lt;/a&gt;），绘制两次显示的场景-对每只眼睛的视图一次，然后将渲染的视图提交给显示器以显示给用户（&lt;a href=&quot;vrdisplay/submitframe&quot;&gt; &lt;code&gt;VRDisplay.submitFrame()&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="bc9bf201d11fd65f401fdc0af621b6fc48106873" translate="yes" xml:space="preserve">
          <source>Inside the worker we use the &lt;a href=&quot;sharedworkerglobalscope/onconnect&quot;&gt;&lt;code&gt;SharedWorkerGlobalScope.onconnect&lt;/code&gt;&lt;/a&gt; handler to connect to the same port discussed above. The ports associated with that worker are accessible in the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/connect&quot;&gt;connect&lt;/a&gt;&lt;/code&gt; event's &lt;code&gt;ports&lt;/code&gt; property &amp;mdash; we then use &lt;a href=&quot;messageport&quot;&gt;&lt;code&gt;MessagePort&lt;/code&gt;&lt;/a&gt;&lt;code&gt;start()&lt;/code&gt; method to start the port, and the &lt;code&gt;onmessage&lt;/code&gt; handler to deal with messages sent from the main threads.</source>
          <target state="translated">在工作程序内部，我们使用&lt;a href=&quot;sharedworkerglobalscope/onconnect&quot;&gt; &lt;code&gt;SharedWorkerGlobalScope.onconnect&lt;/code&gt; &lt;/a&gt;处理程序连接到上面讨论的相同端口。可在 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/connect&quot;&gt;connect&lt;/a&gt;&lt;/code&gt; 事件的 &lt;code&gt;ports&lt;/code&gt; 属性中访问与该工作程序关联的端口 -然后，我们使用&lt;a href=&quot;messageport&quot;&gt; &lt;code&gt;MessagePort&lt;/code&gt; &lt;/a&gt; &lt;code&gt;start()&lt;/code&gt; 方法启动该端口，并使用 &lt;code&gt;onmessage&lt;/code&gt; 处理程序处理从主线程发送的消息。</target>
        </trans-unit>
        <trans-unit id="5c2fff1d6a493b498dce4ab64858d000cd8f051f" translate="yes" xml:space="preserve">
          <source>Inspired by the same &lt;code&gt;WebGLRenderingContext&lt;/code&gt; method it returns &lt;code&gt;true&lt;/code&gt; if the Canvas context has been lost, or &lt;code&gt;false&lt;/code&gt; if not.</source>
          <target state="translated">受相同 &lt;code&gt;WebGLRenderingContext&lt;/code&gt; 方法的启发，如果Canvas上下文丢失，则返回 &lt;code&gt;true&lt;/code&gt; ;否则，返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fd6c3ebf7befca9f8208f86c76e4d4180303745c" translate="yes" xml:space="preserve">
          <source>Install</source>
          <target state="translated">Install</target>
        </trans-unit>
        <trans-unit id="529ef97d2434980bc3da73a6c23dfa087b8d8566" translate="yes" xml:space="preserve">
          <source>Install and activate: populating your cache</source>
          <target state="translated">安装和激活:填充您的缓存</target>
        </trans-unit>
        <trans-unit id="ba9acc3abc056e12e0be26f1eea479d335744427" translate="yes" xml:space="preserve">
          <source>InstallEvent</source>
          <target state="translated">InstallEvent</target>
        </trans-unit>
        <trans-unit id="fcbdb4d8154e422d310072d516c8bb815d0591d2" translate="yes" xml:space="preserve">
          <source>InstallEvent.activeWorker</source>
          <target state="translated">InstallEvent.activeWorker</target>
        </trans-unit>
        <trans-unit id="233bf443ea9be7bb1a5a76f34e4b353c0523472c" translate="yes" xml:space="preserve">
          <source>InstallEvent.constructor</source>
          <target state="translated">InstallEvent.constructor</target>
        </trans-unit>
        <trans-unit id="d83be3eea0c30e92a95fc7899aa4f1c848b8659b" translate="yes" xml:space="preserve">
          <source>Installation is attempted when the downloaded file is found to be new &amp;mdash; either different to an existing service worker (byte-wise compared), or the first service worker encountered for this page/site.</source>
          <target state="translated">当发现下载的文件是新文件时，尝试安装-与现有服务工作者不同（按字节比较），或者此页面/站点遇到的第一个服务工作者。</target>
        </trans-unit>
        <trans-unit id="43c86f4d4fe63b59e961d4b906df36f8231533a5" translate="yes" xml:space="preserve">
          <source>Installation of the worker is attempted when service worker-controlled pages are accessed subsequently. An Install event is always the first one sent to a service worker (this can be used to start the process of populating an IndexedDB, and caching site assets). This is really the same kind of procedure as installing a native or Firefox OS app &amp;mdash; making everything available for use offline.</source>
          <target state="translated">随后访问服务工作程序控制的页面时，将尝试安装工作程序。Install事件始终是发送给服务工作者的第一个事件（可用于启动填充IndexedDB和缓存站点资产的过程）。这实际上与安装本机或Firefox OS应用程序的过程相同，使所有内容都可以脱机使用。</target>
        </trans-unit>
        <trans-unit id="d8b9e1efb77595d8bce0403d0a0273eb38fcd6ba" translate="yes" xml:space="preserve">
          <source>Installing a global &lt;code&gt;error&lt;/code&gt; event handler is useful for automated collection of error reports.</source>
          <target state="translated">安装全局 &lt;code&gt;error&lt;/code&gt; 事件处理程序对于自动收集错误报告很有用。</target>
        </trans-unit>
        <trans-unit id="6ab7d1d49dd26afc2c53ee28fa81799fd390b0a3" translate="yes" xml:space="preserve">
          <source>Instance methods</source>
          <target state="translated">实例方法</target>
        </trans-unit>
        <trans-unit id="c1f424042c7e8bee2655a6672ddd3752109cc8d7" translate="yes" xml:space="preserve">
          <source>Instance properties</source>
          <target state="translated">实例属性</target>
        </trans-unit>
        <trans-unit id="96a6e5b943089530e0ea57a11cccb06af28aa459" translate="yes" xml:space="preserve">
          <source>Instances of &lt;code&gt;XMLHttpRequest&lt;/code&gt; can be used to submit forms in two ways:</source>
          <target state="translated">&lt;code&gt;XMLHttpRequest&lt;/code&gt; 的实例可以通过两种方式用于提交表单：</target>
        </trans-unit>
        <trans-unit id="b792d4c91114fd0db1546cefe814b8b7c1e7b3a8" translate="yes" xml:space="preserve">
          <source>Instead of assigning a color value to the fragment's color, the fragment's color is computed by fetching the &lt;strong&gt;texel&lt;/strong&gt; (that is, the pixel within the texture) based on the value of &lt;code&gt;vTextureCoord&lt;/code&gt; which like the colors is interpolated bewteen vertices.</source>
          <target state="translated">无需为片段的颜色分配颜色值，而是通过基于 &lt;code&gt;vTextureCoord&lt;/code&gt; 的值获取&lt;strong&gt;纹理素&lt;/strong&gt;（即纹理中的像素）来计算片段的颜色，该值类似于颜色在以下十二个顶点之间进行插值。</target>
        </trans-unit>
        <trans-unit id="a1f4766ccc7c14d5ece280d88a05d02ccad87579" translate="yes" xml:space="preserve">
          <source>Instead of creating a &lt;code&gt;Clipboard&lt;/code&gt; object through instantiation, you access the system clipboard through the &lt;a href=&quot;navigator/clipboard&quot;&gt;&lt;code&gt;Navigator.clipboard&lt;/code&gt;&lt;/a&gt; global:</source>
          <target state="translated">您可以通过&lt;a href=&quot;navigator/clipboard&quot;&gt; &lt;code&gt;Navigator.clipboard&lt;/code&gt; &lt;/a&gt;全局访问系统剪贴板，而不是通过实例化创建 &lt;code&gt;Clipboard&lt;/code&gt; 对象：</target>
        </trans-unit>
        <trans-unit id="ea086f7f803f51e2394fba444d8215ce65c15b39" translate="yes" xml:space="preserve">
          <source>Instead of immediately failing, you could choose to call &lt;a href=&quot;../paymentresponse/retry&quot;&gt;&lt;code&gt;retry()&lt;/code&gt;&lt;/a&gt; on the response object to ask the user agent to try to process the payment again; this should usually only be done after the user has made any needed corrections to the order.</source>
          <target state="translated">您可以选择在响应对象上调用&lt;a href=&quot;../paymentresponse/retry&quot;&gt; &lt;code&gt;retry()&lt;/code&gt; &lt;/a&gt;来请求用户代理再次尝试处理付款，而不是立即失败。通常，只有在用户对订单进行了必要的更正之后，才可以这样做。</target>
        </trans-unit>
        <trans-unit id="892e8c8924ea72198052c8b2b57cba1d81281f31" translate="yes" xml:space="preserve">
          <source>Instead of passing a path to the resource you want to request into the &lt;code&gt;fetch()&lt;/code&gt; call, you can create a request object using the &lt;a href=&quot;../request/request&quot;&gt;&lt;code&gt;Request()&lt;/code&gt;&lt;/a&gt; constructor, and pass that in as a &lt;code&gt;fetch()&lt;/code&gt; method argument:</source>
          <target state="translated">您可以使用&lt;a href=&quot;../request/request&quot;&gt; &lt;code&gt;Request()&lt;/code&gt; &lt;/a&gt;构造函数创建一个请求对象，并将其作为 &lt;code&gt;fetch()&lt;/code&gt; 方法参数传入，而不是将要请求的资源路径传递给 &lt;code&gt;fetch()&lt;/code&gt; 调用：</target>
        </trans-unit>
        <trans-unit id="897f41e243ba6de41d3899c837ab683df9cde303" translate="yes" xml:space="preserve">
          <source>Instead of the assigning the promise to a variable, we can post the values returned by the promise to console:</source>
          <target state="translated">我们可以不将承诺分配给一个变量,而是将承诺返回的值发布到控制台。</target>
        </trans-unit>
        <trans-unit id="5279508d21cd4bf74a53ce4f52858fd97ca5b254" translate="yes" xml:space="preserve">
          <source>Instead of trying to juggle shaders, geometry, and working with &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/GPU&quot;&gt;GPU&lt;/a&gt; memory, already in the first program, the examples here explore WebGL in an incremental way. We believe that it leads to a more effective learning experience and ultimately a deeper understanding of the underlying concepts.</source>
          <target state="translated">在第一个程序中已经在尝试处理着色器，几何体和使用&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/GPU&quot;&gt;GPU&lt;/a&gt;内存，而不是尝试变乱着色器，此处的示例以增量方式探索WebGL。我们相信，这将带来更有效的学习体验，并最终加深对基本概念的理解。</target>
        </trans-unit>
        <trans-unit id="7f28e0e2862b2735d471d2510b9d28fb96c4842f" translate="yes" xml:space="preserve">
          <source>Instead, use another method, such as:</source>
          <target state="translated">相反,使用其他方法,如:。</target>
        </trans-unit>
        <trans-unit id="7319116bc29acba4a03e6c679da2d8dc5eb0a039" translate="yes" xml:space="preserve">
          <source>Instead, we could build our own promise to handle this kind of case. (See our &lt;a href=&quot;https://github.com/mdn/promises-test&quot;&gt;Promises test&lt;/a&gt; example for the source code, or &lt;a href=&quot;https://mdn.github.io/promises-test/&quot;&gt;look at it running live&lt;/a&gt;.)</source>
          <target state="translated">相反，我们可以建立自己的承诺来处理这种情况。（请参阅我们的&lt;a href=&quot;https://github.com/mdn/promises-test&quot;&gt;Promises测试&lt;/a&gt;示例以获取源代码，或者&lt;a href=&quot;https://mdn.github.io/promises-test/&quot;&gt;直接运行它&lt;/a&gt;。）</target>
        </trans-unit>
        <trans-unit id="3f8ca590a89d1b2ae2151afad76c0729e4148590" translate="yes" xml:space="preserve">
          <source>Instructs the ICE agent to gather both &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/RTP&quot;&gt;RTP&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/RTCP&quot;&gt;RTCP&lt;/a&gt; candidates. If the remote peer can multiplex RTCP, then RTCP candidates are multiplexed atop the corresponding RTP candidates. Otherwise, both the RTP and RTCP candidates are returned, separately.</source>
          <target state="translated">指示ICE代理同时收集&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/RTP&quot;&gt;RTP&lt;/a&gt;和&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/RTCP&quot;&gt;RTCP&lt;/a&gt;候选对象。如果远程对等方可以复用RTCP，则将RTCP候选对象复用到相应的RTP候选对象之上。否则，将分别返回RTP和RTCP候选者。</target>
        </trans-unit>
        <trans-unit id="9edcffff4461c9083fbff857f8dcee0f0769cbd4" translate="yes" xml:space="preserve">
          <source>Integer</source>
          <target state="translated">Integer</target>
        </trans-unit>
        <trans-unit id="73e231f79604a7c61096425e88c9207010167d1c" translate="yes" xml:space="preserve">
          <source>Integer attributes</source>
          <target state="translated">整数属性</target>
        </trans-unit>
        <trans-unit id="9f83d80fb724e4b2e585f21faccf00e673b14a5e" translate="yes" xml:space="preserve">
          <source>Integer specifying the number of channels for this node's input, defaults to 2. Values of up to 32 are supported.</source>
          <target state="translated">整数,指定该节点的输入通道数,默认为2,最多支持32个值。</target>
        </trans-unit>
        <trans-unit id="0e8c70135aeb9e67664f194885c20f5b37b1b0d0" translate="yes" xml:space="preserve">
          <source>Integer specifying the number of channels for this node's output, defaults to 2. Values of up to 32 are supported.</source>
          <target state="translated">整数,指定该节点输出的通道数,默认为2,最多支持32个值。</target>
        </trans-unit>
        <trans-unit id="b24c43fa84cfe1c396462aae4deb27e4ca5db45f" translate="yes" xml:space="preserve">
          <source>Intel Mac OS X x.y</source>
          <target state="translated">Intel Mac OS X x.y</target>
        </trans-unit>
        <trans-unit id="0af1a09e7db4b8180679ccbe171043bd28271d6a" translate="yes" xml:space="preserve">
          <source>Intend to supersede DOM 3</source>
          <target state="translated">打算取代DOM 3</target>
        </trans-unit>
        <trans-unit id="cba11397e0f22632da727f4ce21cc937cbe0e1f7" translate="yes" xml:space="preserve">
          <source>Intended for HD backing stores, but removed from canvas specifications.</source>
          <target state="translated">为高清背衬商店打算,但从帆布规格中删除。</target>
        </trans-unit>
        <trans-unit id="4041c96ee493f72ebc3bb0487c361430bd19f0d0" translate="yes" xml:space="preserve">
          <source>Intended for metering purposes, it returns a value in dB, or &lt;code&gt;0&lt;/code&gt; (no gain reduction) if no signal is fed into the &lt;code&gt;DynamicsCompressorNode&lt;/code&gt;. The range of this value is between &lt;code&gt;-20&lt;/code&gt; and &lt;code&gt;0&lt;/code&gt; (in dB).</source>
          <target state="translated">出于计量目的，它返回以dB为单位的值；如果没有信号馈入 &lt;code&gt;DynamicsCompressorNode&lt;/code&gt; ，则返回 &lt;code&gt;0&lt;/code&gt; （不降低增益）。此值的范围介于 &lt;code&gt;-20&lt;/code&gt; 和 &lt;code&gt;0&lt;/code&gt; （以dB为单位）之间。</target>
        </trans-unit>
        <trans-unit id="17e84ce8df7e2c8110c50fc187d1de51e7e6ced8" translate="yes" xml:space="preserve">
          <source>Inter-App Connection API</source>
          <target state="translated">应用间连接API</target>
        </trans-unit>
        <trans-unit id="4fa4c0b1f03f5de1eda4e13416854c2ad45a0c73" translate="yes" xml:space="preserve">
          <source>Interaction between privileged and non-privileged pages</source>
          <target state="translated">特权页和非特权页之间的互动。</target>
        </trans-unit>
        <trans-unit id="cdff695781360f6bfbf6b35887cdae6fa3a391f2" translate="yes" xml:space="preserve">
          <source>Interactive Connectivity Establishment (ICE): A Protocol for Network Address Translator (NAT) Traversal for Offer/Answer Protocol</source>
          <target state="translated">交互式连接建立(ICE)。提供/应答协议的网络地址翻译器(NAT)遍历协议</target>
        </trans-unit>
        <trans-unit id="cd27452e2c44dc5939e52298713f123e1301d10e" translate="yes" xml:space="preserve">
          <source>Interactive cross-browser demo on navigator properties</source>
          <target state="translated">跨浏览器交互式演示导航器属性</target>
        </trans-unit>
        <trans-unit id="7b4db7ef1fa23cfb5e115a2a2c89d46a6a2ebc4a" translate="yes" xml:space="preserve">
          <source>Interface</source>
          <target state="translated">Interface</target>
        </trans-unit>
        <trans-unit id="200d3784af8f514ef960c6d538b2d33d53c7a4ed" translate="yes" xml:space="preserve">
          <source>Interface &lt;code&gt;SVGTransformable&lt;/code&gt; contains properties and methods that apply to all elements which have attribute &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/transform&quot;&gt;transform&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SVGTransformable&lt;/code&gt; 接口包含适用于具有属性 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/transform&quot;&gt;transform&lt;/a&gt;&lt;/code&gt; 的所有元素的属性和方法。</target>
        </trans-unit>
        <trans-unit id="3a097b716fe935f0c7f35b06867b3a019d2aeda0" translate="yes" xml:space="preserve">
          <source>Interface overview</source>
          <target state="translated">界面概述</target>
        </trans-unit>
        <trans-unit id="b356313f979923fc829adb909098ed26a5a01aff" translate="yes" xml:space="preserve">
          <source>Interfaces</source>
          <target state="translated">Interfaces</target>
        </trans-unit>
        <trans-unit id="75cd03c9d18a39dee265e66002f9eb352dda00c6" translate="yes" xml:space="preserve">
          <source>Interfaces and Objects</source>
          <target state="translated">接口和对象</target>
        </trans-unit>
        <trans-unit id="d039372089feeb8f7b5e2b217b7232a938b564b8" translate="yes" xml:space="preserve">
          <source>Interfaces based on CSSStyleValue</source>
          <target state="translated">基于CSSStyleValue的接口</target>
        </trans-unit>
        <trans-unit id="d003a38c073224d2eec165303e57b8d05c1ab063" translate="yes" xml:space="preserve">
          <source>Interfaces based on Event</source>
          <target state="translated">基于事件的接口</target>
        </trans-unit>
        <trans-unit id="90a1f856fa6933c89f743692324e6bfc3c2ab42f" translate="yes" xml:space="preserve">
          <source>Interfaces based on OrientationSensor</source>
          <target state="translated">基于OrientationSensor的接口</target>
        </trans-unit>
        <trans-unit id="8654abfd9f308122059e4edfb87fcb0c7cd8a0c6" translate="yes" xml:space="preserve">
          <source>Interfaces based on Sensor</source>
          <target state="translated">基于传感器的接口</target>
        </trans-unit>
        <trans-unit id="5fa37d0a32838a7026ed67c57aa06d63af52c7bd" translate="yes" xml:space="preserve">
          <source>Interfaces for defining effects that you want to apply to your audio sources.</source>
          <target state="translated">用于定义你想应用到音频源的效果的接口。</target>
        </trans-unit>
        <trans-unit id="a5f16ffefd099418416bc8d49b8c9be9e4d87ae5" translate="yes" xml:space="preserve">
          <source>Interfaces implementing it: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;messageport&quot;&gt;&lt;code&gt;MessagePort&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;imagebitmap&quot;&gt;&lt;code&gt;ImageBitmap&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">实现它的接口：&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer&quot;&gt; &lt;code&gt;ArrayBuffer&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;messageport&quot;&gt; &lt;code&gt;MessagePort&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;imagebitmap&quot;&gt; &lt;code&gt;ImageBitmap&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="21d1dedf699526e24b11c85c09fcdc4706fc0746" translate="yes" xml:space="preserve">
          <source>Interfaces implementing this one: &lt;a href=&quot;htmlanchorelement&quot;&gt;&lt;code&gt;HTMLAnchorElement&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;htmlareaelement&quot;&gt;&lt;code&gt;HTMLAreaElement&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">实现此功能的接口：&lt;a href=&quot;htmlanchorelement&quot;&gt; &lt;code&gt;HTMLAnchorElement&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;htmlareaelement&quot;&gt; &lt;code&gt;HTMLAreaElement&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3c761c11f5b380121d50fbeca5cbf0136988a6d5" translate="yes" xml:space="preserve">
          <source>Interfaces implementing this one: &lt;a href=&quot;workerlocation&quot;&gt;&lt;code&gt;WorkerLocation&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">实现此目标的接口：&lt;a href=&quot;workerlocation&quot;&gt; &lt;code&gt;WorkerLocation&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="38913081b01712423aec4e92268089a3f2fb07c4" translate="yes" xml:space="preserve">
          <source>Interfaces replaced by this one:</source>
          <target state="translated">接口由这个接口代替。</target>
        </trans-unit>
        <trans-unit id="8c7ec68825639c82f7b25867f9f387b96e50316e" translate="yes" xml:space="preserve">
          <source>Interfaces that define audio sources for use in the Web Audio API.</source>
          <target state="translated">定义用于Web Audio API的音频源的接口。</target>
        </trans-unit>
        <trans-unit id="55dac7fdb60427fc4607925175b94125a7743dcd" translate="yes" xml:space="preserve">
          <source>Internal APIs (chrome-context only)</source>
          <target state="translated">内部API(仅适用于chrome上下文)</target>
        </trans-unit>
        <trans-unit id="23575f35a521e9c261d274ac4cb29c2f05b261ac" translate="yes" xml:space="preserve">
          <source>Internal Error</source>
          <target state="translated">内部错误</target>
        </trans-unit>
        <trans-unit id="a5a53f80d4bfb545a817aa4be8fc50db0b968da0" translate="yes" xml:space="preserve">
          <source>Internal queues and queuing strategies</source>
          <target state="translated">内部队列和队列策略</target>
        </trans-unit>
        <trans-unit id="14bd2ceb08e4a5d50bba8c2633d3ee72cb8d1cf7" translate="yes" xml:space="preserve">
          <source>Internal queues employ a &lt;strong&gt;queuing strategy&lt;/strong&gt;, which dictates how to signal backpressure based on the &lt;strong&gt;internal queue state.&lt;/strong&gt;</source>
          <target state="translated">内部队列采用&lt;strong&gt;排队策略&lt;/strong&gt;，该&lt;strong&gt;策略&lt;/strong&gt;根据&lt;strong&gt;内部队列状态&lt;/strong&gt;指示如何发出背压信号&lt;strong&gt;。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f3c5def8456e9130773962ecb46f93b2f558e543" translate="yes" xml:space="preserve">
          <source>Internationalized sorting. Not all languages sort strings in the same way, so internationalized sorting is not supported. While the database can't store data in a specific internationalized order, you can sort the data that you've read out of the database yourself. Note, however, that &lt;a href=&quot;using_indexeddb#Locale-aware_sorting&quot;&gt;locale-aware sorting&lt;/a&gt; has been allowed with an experimental flag enabled (currently for Firefox only) since Firefox 43.</source>
          <target state="translated">国际化排序。并非所有语言都以相同的方式对字符串进行排序，因此不支持国际化排序。虽然数据库无法按特定的国际化顺序存储数据，但是您可以对自己从数据库中读取的数据进行排序。但是请注意，自Firefox 43开始，已启用启用实验标记的&lt;a href=&quot;using_indexeddb#Locale-aware_sorting&quot;&gt;区域设置感知排序&lt;/a&gt;（当前仅适用于Firefox）。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
