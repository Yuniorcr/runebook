<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="tensorflow">
    <body>
      <group id="tensorflow">
        <trans-unit id="e6fb2f427874a32d88551ddb7e48a2a8685e9e6f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../quantization/fake_quant_with_min_max_args_gradient&quot;&gt;&lt;code&gt;fake_quant_with_min_max_args_gradient(...)&lt;/code&gt;&lt;/a&gt;: Compute gradients for a FakeQuantWithMinMaxArgs operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d3b76824ba19af051b3d084056fc8912575f748" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../quantization/fake_quant_with_min_max_vars&quot;&gt;&lt;code&gt;fake_quant_with_min_max_vars(...)&lt;/code&gt;&lt;/a&gt;: Fake-quantize the 'inputs' tensor of type float via global float scalars &lt;code&gt;min&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b84cb81ad8c9da529cffd9d024de487f35542a99" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../quantization/fake_quant_with_min_max_vars_gradient&quot;&gt;&lt;code&gt;fake_quant_with_min_max_vars_gradient(...)&lt;/code&gt;&lt;/a&gt;: Compute gradients for a FakeQuantWithMinMaxVars operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="603b0879471e904f644fae9f7869b510a25e6975" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../quantization/fake_quant_with_min_max_vars_per_channel&quot;&gt;&lt;code&gt;fake_quant_with_min_max_vars_per_channel(...)&lt;/code&gt;&lt;/a&gt;: Fake-quantize the 'inputs' tensor of type float and one of the shapes: &lt;code&gt;[d]&lt;/code&gt;,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5abe00e87db0a0bda345adef0de50217828b7372" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../quantization/fake_quant_with_min_max_vars_per_channel_gradient&quot;&gt;&lt;code&gt;fake_quant_with_min_max_vars_per_channel_gradient(...)&lt;/code&gt;&lt;/a&gt;: Compute gradients for a FakeQuantWithMinMaxVarsPerChannel operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48fda70215dc709939dddea98be951bacd823f02" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../quantization/quantize&quot;&gt;&lt;code&gt;quantize(...)&lt;/code&gt;&lt;/a&gt;: Quantize the 'input' tensor of type float to 'output' tensor of type 'T'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68edd1b27671d35c4aee956c48008bdbf3eedd4b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../quantization/quantize_and_dequantize&quot;&gt;&lt;code&gt;quantize_and_dequantize(...)&lt;/code&gt;&lt;/a&gt;: Quantizes then dequantizes a tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41f6645d02148d8205144574d7887dc83da788fc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../quantization/quantized_concat&quot;&gt;&lt;code&gt;quantized_concat(...)&lt;/code&gt;&lt;/a&gt;: Concatenates quantized tensors along one dimension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07ee190f55461b3a18c8a53dc378c1debb379d0d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../queue/fifoqueue&quot;&gt;&lt;code&gt;class FIFOQueue&lt;/code&gt;&lt;/a&gt;: A queue implementation that dequeues elements in first-in first-out order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8358510df6c87e8167d99b6f8fb4a619f62dadc7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../queue/paddingfifoqueue&quot;&gt;&lt;code&gt;class PaddingFIFOQueue&lt;/code&gt;&lt;/a&gt;: A FIFOQueue that supports batching variable-sized tensors by padding.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="997431819d983778f1b2003b78e7410c060c1bbd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../queue/priorityqueue&quot;&gt;&lt;code&gt;class PriorityQueue&lt;/code&gt;&lt;/a&gt;: A queue implementation that dequeues elements in prioritized order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e96b933e9ebc10cf9b71de610652d5a58f69106" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../queue/queuebase&quot;&gt;&lt;code&gt;class QueueBase&lt;/code&gt;&lt;/a&gt;: Base class for queue implementations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="482f092aba2773e62c705f74cd48c573eb1e7aff" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../queue/randomshufflequeue&quot;&gt;&lt;code&gt;class RandomShuffleQueue&lt;/code&gt;&lt;/a&gt;: A queue implementation that dequeues elements in a random order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ea58c0a2ace0ff559acdb4d7e8a182999203402" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../ragged/boolean_mask&quot;&gt;&lt;code&gt;boolean_mask(...)&lt;/code&gt;&lt;/a&gt;: Applies a boolean mask to &lt;code&gt;data&lt;/code&gt; without flattening the mask dimensions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8821521f2dfb6ce801d5cd65230ccee0039632e5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../ragged/constant&quot;&gt;&lt;code&gt;constant(...)&lt;/code&gt;&lt;/a&gt;: Constructs a constant RaggedTensor from a nested Python list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61bdba7250f8fa9f207d88d4041feb39ca68614f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../ragged/map_flat_values&quot;&gt;&lt;code&gt;map_flat_values(...)&lt;/code&gt;&lt;/a&gt;: Applies &lt;code&gt;op&lt;/code&gt; to the values of one or more RaggedTensors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bee7e9c197b43e1cb2f041613dd641c89516efdf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../ragged/range&quot;&gt;&lt;code&gt;range(...)&lt;/code&gt;&lt;/a&gt;: Returns a &lt;code&gt;RaggedTensor&lt;/code&gt; containing the specified sequences of numbers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb9df0595b696efec34bf49f1e1b509db7e524a2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../ragged/row_splits_to_segment_ids&quot;&gt;&lt;code&gt;row_splits_to_segment_ids(...)&lt;/code&gt;&lt;/a&gt;: Generates the segmentation corresponding to a RaggedTensor &lt;code&gt;row_splits&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29c51a5e750aebbdf6eecbbb75baa5c8e98f7fc2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../ragged/segment_ids_to_row_splits&quot;&gt;&lt;code&gt;segment_ids_to_row_splits(...)&lt;/code&gt;&lt;/a&gt;: Generates the RaggedTensor &lt;code&gt;row_splits&lt;/code&gt; corresponding to a segmentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b2af368cfaf8a0dd59cc24067d40063cd4dc2c6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../ragged/stack&quot;&gt;&lt;code&gt;stack(...)&lt;/code&gt;&lt;/a&gt;: Stacks a list of rank-&lt;code&gt;R&lt;/code&gt; tensors into one rank-&lt;code&gt;(R+1)&lt;/code&gt;&lt;code&gt;RaggedTensor&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0a08c86ecedb3217c9a701ec4dafe26f9f18269" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../ragged/stack_dynamic_partitions&quot;&gt;&lt;code&gt;stack_dynamic_partitions(...)&lt;/code&gt;&lt;/a&gt;: Stacks dynamic partitions of a Tensor or RaggedTensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dda21e8696e28ad772078693ed74e0d0e572e95" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../random/all_candidate_sampler&quot;&gt;&lt;code&gt;all_candidate_sampler(...)&lt;/code&gt;&lt;/a&gt;: Generate the set of all classes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e291d989c580873167c9287b4b49362b9aea8e1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../random/categorical&quot;&gt;&lt;code&gt;categorical(...)&lt;/code&gt;&lt;/a&gt;: Draws samples from a categorical distribution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebc9dbb7043f46950d32044656786183dcb85010" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../random/fixed_unigram_candidate_sampler&quot;&gt;&lt;code&gt;fixed_unigram_candidate_sampler(...)&lt;/code&gt;&lt;/a&gt;: Samples a set of classes using the provided (fixed) base distribution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b38580cadc23eca2375a880c9d843a72c9b4275" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../random/gamma&quot;&gt;&lt;code&gt;gamma(...)&lt;/code&gt;&lt;/a&gt;: Draws &lt;code&gt;shape&lt;/code&gt; samples from each of the given Gamma distribution(s).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8765d27cadf9987246302efe5eee32387b446fda" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../random/learned_unigram_candidate_sampler&quot;&gt;&lt;code&gt;learned_unigram_candidate_sampler(...)&lt;/code&gt;&lt;/a&gt;: Samples a set of classes from a distribution learned during training.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf69f64cf3aeb548a0eb4f553df7e36680339d36" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../random/log_uniform_candidate_sampler&quot;&gt;&lt;code&gt;log_uniform_candidate_sampler(...)&lt;/code&gt;&lt;/a&gt;: Samples a set of classes using a log-uniform (Zipfian) base distribution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="291802e2799aa60ac6e181911f1ef122126e4645" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../random/normal&quot;&gt;&lt;code&gt;normal(...)&lt;/code&gt;&lt;/a&gt;: Outputs random values from a normal distribution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ab4f656b17b6444019d7ee82afe0e79143a1183" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../random/poisson&quot;&gt;&lt;code&gt;poisson(...)&lt;/code&gt;&lt;/a&gt;: Draws &lt;code&gt;shape&lt;/code&gt; samples from each of the given Poisson distribution(s).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95914a78f821e48b80e3f1a074b306a8ebfd4111" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../random/set_seed&quot;&gt;&lt;code&gt;set_seed(...)&lt;/code&gt;&lt;/a&gt;: Sets the global random seed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="317f8a21811273d82d3f48356e633ee99b9722fa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../random/shuffle&quot;&gt;&lt;code&gt;shuffle(...)&lt;/code&gt;&lt;/a&gt;: Randomly shuffles a tensor along its first dimension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecbcd86977b5e132990acc444e1804e3e59cc927" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../random/stateless_categorical&quot;&gt;&lt;code&gt;stateless_categorical(...)&lt;/code&gt;&lt;/a&gt;: Draws deterministic pseudorandom samples from a categorical distribution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f75035734705b100bfc8ca7dbb82cfd18c6eee8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../random/stateless_normal&quot;&gt;&lt;code&gt;stateless_normal(...)&lt;/code&gt;&lt;/a&gt;: Outputs deterministic pseudorandom values from a normal distribution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b78b1743c923a72a1a6b024f294bda0824356636" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../random/stateless_truncated_normal&quot;&gt;&lt;code&gt;stateless_truncated_normal(...)&lt;/code&gt;&lt;/a&gt;: Outputs deterministic pseudorandom values, truncated normally distributed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7553f89003950318f3e7fd86ba6293d9d14f579c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../random/stateless_uniform&quot;&gt;&lt;code&gt;stateless_uniform(...)&lt;/code&gt;&lt;/a&gt;: Outputs deterministic pseudorandom values from a uniform distribution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c184e42679f261f586ab35239563a8540145f39" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../random/truncated_normal&quot;&gt;&lt;code&gt;truncated_normal(...)&lt;/code&gt;&lt;/a&gt;: Outputs random values from a truncated normal distribution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6d4dea622a11a86fb4be4402e0cdbc94ad67067" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../random/uniform&quot;&gt;&lt;code&gt;uniform(...)&lt;/code&gt;&lt;/a&gt;: Outputs random values from a uniform distribution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="155dd429eaa3267477dddca4e68b33e032800a88" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../random/uniform_candidate_sampler&quot;&gt;&lt;code&gt;uniform_candidate_sampler(...)&lt;/code&gt;&lt;/a&gt;: Samples a set of classes using a uniform base distribution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="072b3c08d61d91a6a893b85a1e93ee71e47c38ea" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../rank&quot;&gt;&lt;code&gt;tf.rank&lt;/code&gt;&lt;/a&gt;(&lt;strong&gt;input&lt;/strong&gt;, name=&lt;code&gt;None&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c19fd4671fbf277f2a0c347f4a7d315e2997879d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../realdiv&quot;&gt;&lt;code&gt;tf.realdiv&lt;/code&gt;&lt;/a&gt;(&lt;strong&gt;x&lt;/strong&gt;, &lt;strong&gt;y&lt;/strong&gt;, name=&lt;code&gt;None&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca98c49313debbae4da726b19ba04aa4810931b5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../reduce_all&quot;&gt;&lt;code&gt;reduce_all(...)&lt;/code&gt;&lt;/a&gt;: Computes the &quot;logical and&quot; of elements across dimensions of a tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74e969e0f388cfce5ae091124ed9e477efa3c870" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../reduce_all&quot;&gt;&lt;code&gt;tf.reduce_all&lt;/code&gt;&lt;/a&gt;(&lt;strong&gt;input_tensor&lt;/strong&gt;, axis=&lt;code&gt;None&lt;/code&gt;, keepdims=&lt;code&gt;False&lt;/code&gt;, name=&lt;code&gt;None&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2729fe690103be0f53320cb39b70a918cad7acfd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../reshape&quot;&gt;&lt;code&gt;reshape(...)&lt;/code&gt;&lt;/a&gt;: Reshapes a tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44ffe68b169b4c928c13b1526c282f93331945c5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../reverse&quot;&gt;&lt;code&gt;reverse(...)&lt;/code&gt;&lt;/a&gt;: Reverses specific dimensions of a tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab5962a5fc796a6ee8c44b388c72d1d3bf43614f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../reverse&quot;&gt;&lt;code&gt;tf.reverse&lt;/code&gt;&lt;/a&gt;(&lt;strong&gt;tensor&lt;/strong&gt;, axis, name=&lt;code&gt;None&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b03c4bf7fe668e52a766f7f0472e52a5686bbe5f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../roll&quot;&gt;&lt;code&gt;roll(...)&lt;/code&gt;&lt;/a&gt;: Rolls the elements of a tensor along an axis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdfc38c1d58090204efa284ebc4f880bab382f29" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../saved_model/asset&quot;&gt;&lt;code&gt;class Asset&lt;/code&gt;&lt;/a&gt;: Represents a file asset to hermetically include in a SavedModel.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9443a44a7c5ef8d1d0222f6457d843d1dd31dee2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../saved_model/contains_saved_model&quot;&gt;&lt;code&gt;contains_saved_model(...)&lt;/code&gt;&lt;/a&gt;: Checks whether the provided export directory could contain a SavedModel.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16b97f6ebfe68be586e11fdb79d41bd2c382cdd6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../saved_model/load&quot;&gt;&lt;code&gt;load(...)&lt;/code&gt;&lt;/a&gt;: Load a SavedModel from &lt;code&gt;export_dir&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64b9c842f278446c868d97448c71e0ec169d3712" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../saved_model/load&quot;&gt;&lt;code&gt;load_v2(...)&lt;/code&gt;&lt;/a&gt;: Load a SavedModel from &lt;code&gt;export_dir&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb76d4d7025d5f0ff0577b0d34e0caee76801d36" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../saved_model/save&quot;&gt;&lt;code&gt;save(...)&lt;/code&gt;&lt;/a&gt;: Exports the Trackable object &lt;code&gt;obj&lt;/code&gt; to &lt;a href=&quot;https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/saved_model/README.md&quot;&gt;SavedModel format&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="684b7c9d5c5122344b5597107c06e45a1ae18dd5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../saved_model/saveoptions&quot;&gt;&lt;code&gt;class SaveOptions&lt;/code&gt;&lt;/a&gt;: Options for saving to SavedModel.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="001cf387d338bdbdbaafaf528bc2b4b4d31fa4a0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../scatter_nd&quot;&gt;&lt;code&gt;scatter_nd(...)&lt;/code&gt;&lt;/a&gt;: Scatter &lt;code&gt;updates&lt;/code&gt; into a new tensor according to &lt;code&gt;indices&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b3b15631651fd04b7ab7b2a31b039b9d9f3f7c7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../sets/difference&quot;&gt;&lt;code&gt;difference(...)&lt;/code&gt;&lt;/a&gt;: Compute set difference of elements in last dimension of &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb2b4206d7fe1941f4ae81000055b33de4915ef3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../sets/difference&quot;&gt;&lt;code&gt;set_difference(...)&lt;/code&gt;&lt;/a&gt;: Compute set difference of elements in last dimension of &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32a27eb2448283009e39ade7cce48aa700fa5fa5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../sets/intersection&quot;&gt;&lt;code&gt;intersection(...)&lt;/code&gt;&lt;/a&gt;: Compute set intersection of elements in last dimension of &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8123137edef9321c016353c39ed3438af998bb7d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../sets/intersection&quot;&gt;&lt;code&gt;set_intersection(...)&lt;/code&gt;&lt;/a&gt;: Compute set intersection of elements in last dimension of &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c99f78f2de8fd294fc0c57419060cc05221048a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../sets/size&quot;&gt;&lt;code&gt;set_size(...)&lt;/code&gt;&lt;/a&gt;: Compute number of unique elements along last dimension of &lt;code&gt;a&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3aa1328d591e99b0e1508049545eab5f37147f5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../sets/size&quot;&gt;&lt;code&gt;size(...)&lt;/code&gt;&lt;/a&gt;: Compute number of unique elements along last dimension of &lt;code&gt;a&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c49cc44c7804d9ff69fc80d17b85e4b79eeb723" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../sets/union&quot;&gt;&lt;code&gt;set_union(...)&lt;/code&gt;&lt;/a&gt;: Compute set union of elements in last dimension of &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b6fe56e2677d2f48896d63525d90ca3d0c46303" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../sets/union&quot;&gt;&lt;code&gt;union(...)&lt;/code&gt;&lt;/a&gt;: Compute set union of elements in last dimension of &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3c56980eaa4085942f2f301350fa2954127a690" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../signal/dct&quot;&gt;&lt;code&gt;dct(...)&lt;/code&gt;&lt;/a&gt;: Computes the 1D [Discrete Cosine Transform (DCT)][dct] of &lt;code&gt;input&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db04c08fa673feeeca778fe3170a7d23c92d0b6a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../signal/fft&quot;&gt;&lt;code&gt;fft(...)&lt;/code&gt;&lt;/a&gt;: Fast Fourier transform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d42750dfa317d16bb70fce98e70a98a856d2ee9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../signal/fft2d&quot;&gt;&lt;code&gt;fft2d(...)&lt;/code&gt;&lt;/a&gt;: 2D fast Fourier transform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ead5eb8026c41228ce9b52abba914a7873fdec7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../signal/fft3d&quot;&gt;&lt;code&gt;fft3d(...)&lt;/code&gt;&lt;/a&gt;: 3D fast Fourier transform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75f049b1ac56878d03e802c80aeb1ab241a88351" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../signal/fftshift&quot;&gt;&lt;code&gt;fftshift(...)&lt;/code&gt;&lt;/a&gt;: Shift the zero-frequency component to the center of the spectrum.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41d63de4da9b040db8cea3080af0104f0e285232" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../signal/frame&quot;&gt;&lt;code&gt;frame(...)&lt;/code&gt;&lt;/a&gt;: Expands &lt;code&gt;signal&lt;/code&gt;'s &lt;code&gt;axis&lt;/code&gt; dimension into frames of &lt;code&gt;frame_length&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba38d2a3a9bb4dab7de01d5762057668273d1ef9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../signal/hamming_window&quot;&gt;&lt;code&gt;hamming_window(...)&lt;/code&gt;&lt;/a&gt;: Generate a &lt;a href=&quot;https://en.wikipedia.org/wiki/Window_function#Hamming_window&quot;&gt;Hamming&lt;/a&gt; window.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2679134a0f4e4f270867de5eef5c64abbeaa541e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../signal/hann_window&quot;&gt;&lt;code&gt;hann_window(...)&lt;/code&gt;&lt;/a&gt;: Generate a &lt;a href=&quot;https://en.wikipedia.org/wiki/Window_function#Hann_window&quot;&gt;Hann window&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8c06285388e255a444756b43fdb30f09cf3982b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../signal/idct&quot;&gt;&lt;code&gt;idct(...)&lt;/code&gt;&lt;/a&gt;: Computes the 1D [Inverse Discrete Cosine Transform (DCT)][idct] of &lt;code&gt;input&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64103da29d3b23b97f297dfbca1ff45314d1a49e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../signal/ifft&quot;&gt;&lt;code&gt;ifft(...)&lt;/code&gt;&lt;/a&gt;: Inverse fast Fourier transform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6114c2797862b4ce58160a662201e1dc716e1033" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../signal/ifft2d&quot;&gt;&lt;code&gt;ifft2d(...)&lt;/code&gt;&lt;/a&gt;: Inverse 2D fast Fourier transform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e47a8907a33e1e3ca6a99002413c57fa54e14183" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../signal/ifft3d&quot;&gt;&lt;code&gt;ifft3d(...)&lt;/code&gt;&lt;/a&gt;: Inverse 3D fast Fourier transform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86938eb9961408b7a2faa52b1d82f1566444acb9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../signal/ifftshift&quot;&gt;&lt;code&gt;ifftshift(...)&lt;/code&gt;&lt;/a&gt;: The inverse of fftshift.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e46005c7b4ff93456800990d56df02495a333cd9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../signal/inverse_stft&quot;&gt;&lt;code&gt;inverse_stft(...)&lt;/code&gt;&lt;/a&gt;: Computes the inverse &lt;a href=&quot;https://en.wikipedia.org/wiki/Short-time_Fourier_transform&quot;&gt;Short-time Fourier Transform&lt;/a&gt; of &lt;code&gt;stfts&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b3f08bb5e91dc6cd968c939265bb2c8204755cf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../signal/inverse_stft_window_fn&quot;&gt;&lt;code&gt;inverse_stft_window_fn(...)&lt;/code&gt;&lt;/a&gt;: Generates a window function that can be used in &lt;code&gt;inverse_stft&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d4da0238f04d9552406e055415576b5c524816a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../signal/irfft&quot;&gt;&lt;code&gt;irfft(...)&lt;/code&gt;&lt;/a&gt;: Inverse real-valued fast Fourier transform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b2eeeb0dc2dee9e1883c1b8774d163ff1159e66" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../signal/irfft2d&quot;&gt;&lt;code&gt;irfft2d(...)&lt;/code&gt;&lt;/a&gt;: Inverse 2D real-valued fast Fourier transform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15c5550498f148b2939f4f56f0c945581cb5a827" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../signal/irfft3d&quot;&gt;&lt;code&gt;irfft3d(...)&lt;/code&gt;&lt;/a&gt;: Inverse 3D real-valued fast Fourier transform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d0e1cad6c7ee0660c374d9345338a446ea78d56" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../signal/linear_to_mel_weight_matrix&quot;&gt;&lt;code&gt;linear_to_mel_weight_matrix(...)&lt;/code&gt;&lt;/a&gt;: Returns a matrix to warp linear scale spectrograms to the &lt;a href=&quot;https://en.wikipedia.org/wiki/Mel_scale&quot;&gt;mel scale&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a3f9aa3dec7d1f2c04f74228a30520cf1915e06" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../signal/mfccs_from_log_mel_spectrograms&quot;&gt;&lt;code&gt;mfccs_from_log_mel_spectrograms(...)&lt;/code&gt;&lt;/a&gt;: Computes &lt;a href=&quot;https://en.wikipedia.org/wiki/Mel-frequency_cepstrum&quot;&gt;MFCCs&lt;/a&gt; of &lt;code&gt;log_mel_spectrograms&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f92dd1604d1638a5bec4931a40933e508ef990dc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../signal/overlap_and_add&quot;&gt;&lt;code&gt;overlap_and_add(...)&lt;/code&gt;&lt;/a&gt;: Reconstructs a signal from a framed representation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0ef8d84ce858b539dc2fe1b5721c1f556ff47dd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../signal/rfft&quot;&gt;&lt;code&gt;rfft(...)&lt;/code&gt;&lt;/a&gt;: Real-valued fast Fourier transform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="addabb541f12bbeb2e5692912895655927801777" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../signal/rfft2d&quot;&gt;&lt;code&gt;rfft2d(...)&lt;/code&gt;&lt;/a&gt;: 2D real-valued fast Fourier transform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de2d071d79573482c5ff1d291c734e23fcdbcaad" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../signal/rfft3d&quot;&gt;&lt;code&gt;rfft3d(...)&lt;/code&gt;&lt;/a&gt;: 3D real-valued fast Fourier transform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1099b15b54bb4f98cc96bbb932a5e8edeba8c350" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../signal/stft&quot;&gt;&lt;code&gt;stft(...)&lt;/code&gt;&lt;/a&gt;: Computes the &lt;a href=&quot;https://en.wikipedia.org/wiki/Short-time_Fourier_transform&quot;&gt;Short-time Fourier Transform&lt;/a&gt; of &lt;code&gt;signals&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99b5d760069083e70b383c1520106524962c3b69" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../size&quot;&gt;&lt;code&gt;tf.size&lt;/code&gt;&lt;/a&gt;(&lt;strong&gt;input&lt;/strong&gt;, name=&lt;code&gt;None&lt;/code&gt;, out_type=&lt;a href=&quot;../../../tf#int32&quot;&gt;&lt;code&gt;tf.int32&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4950a328f3e60ee0a2d338b56c27672450584708" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../space_to_batch&quot;&gt;&lt;code&gt;space_to_batch(...)&lt;/code&gt;&lt;/a&gt;: SpaceToBatch for N-D tensors of type T.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11c1156f05c1ec17d5d2f8cde3cf8d5dad3eeaa2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../space_to_batch_nd&quot;&gt;&lt;code&gt;space_to_batch_nd(...)&lt;/code&gt;&lt;/a&gt;: SpaceToBatch for N-D tensors of type T.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="692528a66877b5120a7e1d0d77dc4849763f4ccc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../sparse/add&quot;&gt;&lt;code&gt;add(...)&lt;/code&gt;&lt;/a&gt;: Adds two tensors, at least one of each is a &lt;code&gt;SparseTensor&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2de8235eee9b9b3907c6085e6969c49040ca5660" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../sparse/concat&quot;&gt;&lt;code&gt;concat(...)&lt;/code&gt;&lt;/a&gt;: Concatenates a list of &lt;code&gt;SparseTensor&lt;/code&gt; along the specified dimension. (deprecated arguments)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18110d469f860029c72105eae0578ef708b36775" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../sparse/cross&quot;&gt;&lt;code&gt;cross(...)&lt;/code&gt;&lt;/a&gt;: Generates sparse cross from a list of sparse and dense tensors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28a6f5717a6f1a6f073deef4ca0385d7474ab710" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../sparse/cross_hashed&quot;&gt;&lt;code&gt;cross_hashed(...)&lt;/code&gt;&lt;/a&gt;: Generates hashed sparse cross from a list of sparse and dense tensors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba30027ca1e0ec7d95fadc6fb1fde5941daa7fce" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../sparse/expand_dims&quot;&gt;&lt;code&gt;expand_dims(...)&lt;/code&gt;&lt;/a&gt;: Inserts a dimension of 1 into a tensor's shape.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ed832c0fe912331f084d70b32638b0466d5cf3a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../sparse/eye&quot;&gt;&lt;code&gt;eye(...)&lt;/code&gt;&lt;/a&gt;: Creates a two-dimensional sparse tensor with ones along the diagonal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dff7beb9d1cb7cad0f7d6d444324be800946e968" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../sparse/fill_empty_rows&quot;&gt;&lt;code&gt;fill_empty_rows(...)&lt;/code&gt;&lt;/a&gt;: Fills empty rows in the input 2-D &lt;code&gt;SparseTensor&lt;/code&gt; with a default value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76cba16b7bfb66cf72a71cd5f64eb2f1d3183941" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../sparse/from_dense&quot;&gt;&lt;code&gt;from_dense(...)&lt;/code&gt;&lt;/a&gt;: Converts a dense tensor into a sparse tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="508447d6445436b2766f0d7a647a47a8cf85db08" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../sparse/mask&quot;&gt;&lt;code&gt;mask(...)&lt;/code&gt;&lt;/a&gt;: Masks elements of &lt;code&gt;IndexedSlices&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1796274962dbdf8399ad27c41685745b1029e425" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../sparse/maximum&quot;&gt;&lt;code&gt;maximum(...)&lt;/code&gt;&lt;/a&gt;: Returns the element-wise max of two SparseTensors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="669feef07eba7abcda479a8b4527863228915a5c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../sparse/minimum&quot;&gt;&lt;code&gt;minimum(...)&lt;/code&gt;&lt;/a&gt;: Returns the element-wise min of two SparseTensors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afac173f91c8abed15076b2d1cca810243062e8f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../sparse/reduce_max&quot;&gt;&lt;code&gt;reduce_max(...)&lt;/code&gt;&lt;/a&gt;: Computes the max of elements across dimensions of a SparseTensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c21e1d58e5b2ccd6d1a7e911b4dc4db1358add8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../sparse/reduce_sum&quot;&gt;&lt;code&gt;reduce_sum(...)&lt;/code&gt;&lt;/a&gt;: Computes the sum of elements across dimensions of a SparseTensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d1676df678c3c458e80d4e493f319c980d56ee7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../sparse/reorder&quot;&gt;&lt;code&gt;reorder(...)&lt;/code&gt;&lt;/a&gt;: Reorders a &lt;code&gt;SparseTensor&lt;/code&gt; into the canonical, row-major ordering.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="684011cc9df45ab535bdf7ceacc31eb3de77ffd6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../sparse/reset_shape&quot;&gt;&lt;code&gt;reset_shape(...)&lt;/code&gt;&lt;/a&gt;: Resets the shape of a &lt;code&gt;SparseTensor&lt;/code&gt; with indices and values unchanged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="511f18b12677d363dc110d3b72abc2ca76e373a5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../sparse/reshape&quot;&gt;&lt;code&gt;reshape(...)&lt;/code&gt;&lt;/a&gt;: Reshapes a &lt;code&gt;SparseTensor&lt;/code&gt; to represent values in a new dense shape.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5a32793082ea4e552ded2b5fc08675ba06b9ffd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../sparse/retain&quot;&gt;&lt;code&gt;retain(...)&lt;/code&gt;&lt;/a&gt;: Retains specified non-empty values within a &lt;code&gt;SparseTensor&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f94f6d493339642cbe067a879d36a4b32a87217" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../sparse/segment_mean&quot;&gt;&lt;code&gt;segment_mean(...)&lt;/code&gt;&lt;/a&gt;: Computes the mean along sparse segments of a tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de46033d1252f640f7a56b36e245884152ab94d4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../sparse/segment_sqrt_n&quot;&gt;&lt;code&gt;segment_sqrt_n(...)&lt;/code&gt;&lt;/a&gt;: Computes the sum along sparse segments of a tensor divided by the sqrt(N).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1ee5b148479ee55e8760fb3c16b957deb208a3a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../sparse/segment_sum&quot;&gt;&lt;code&gt;segment_sum(...)&lt;/code&gt;&lt;/a&gt;: Computes the sum along sparse segments of a tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4be84c53769bde5dd69c36997a8521126a90eafd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../sparse/slice&quot;&gt;&lt;code&gt;slice(...)&lt;/code&gt;&lt;/a&gt;: Slice a &lt;code&gt;SparseTensor&lt;/code&gt; based on the &lt;code&gt;start&lt;/code&gt; and `size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c0d1dad9b284ba01cb71e388d160e6dee058051" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../sparse/softmax&quot;&gt;&lt;code&gt;softmax(...)&lt;/code&gt;&lt;/a&gt;: Applies softmax to a batched N-D &lt;code&gt;SparseTensor&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="569b2345bf733ec04f350125e77a5a2fe71a2435" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../sparse/sparse_dense_matmul&quot;&gt;&lt;code&gt;matmul(...)&lt;/code&gt;&lt;/a&gt;: Multiply SparseTensor (of rank 2) &quot;A&quot; by dense matrix &quot;B&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4d54f380095a080f93ee3e95efb0a6175aff37c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../sparse/sparse_dense_matmul&quot;&gt;&lt;code&gt;sparse_dense_matmul(...)&lt;/code&gt;&lt;/a&gt;: Multiply SparseTensor (of rank 2) &quot;A&quot; by dense matrix &quot;B&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4e3793cd41fe8f0339cf40bb307f572f0e849bc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../sparse/sparsetensor&quot;&gt;&lt;code&gt;class SparseTensor&lt;/code&gt;&lt;/a&gt;: Represents a sparse tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="428d7250e9f215345e541565b6c828edf2c683c1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../sparse/split&quot;&gt;&lt;code&gt;split(...)&lt;/code&gt;&lt;/a&gt;: Split a &lt;code&gt;SparseTensor&lt;/code&gt; into &lt;code&gt;num_split&lt;/code&gt; tensors along &lt;code&gt;axis&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5edc2191995e34e99beaf274ef4ec01c5923384" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../sparse/to_dense&quot;&gt;&lt;code&gt;to_dense(...)&lt;/code&gt;&lt;/a&gt;: Converts a &lt;code&gt;SparseTensor&lt;/code&gt; into a dense tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f338c0bc49448f699adb8832d62e53a76305cca6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../sparse/to_indicator&quot;&gt;&lt;code&gt;to_indicator(...)&lt;/code&gt;&lt;/a&gt;: Converts a &lt;code&gt;SparseTensor&lt;/code&gt; of ids into a dense bool indicator tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2064eafaf59eaec569a8eaf93cf6ab7affca1e6e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../sparse/transpose&quot;&gt;&lt;code&gt;transpose(...)&lt;/code&gt;&lt;/a&gt;: Transposes a &lt;code&gt;SparseTensor&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c23dcb627f249f703f97d561c4147177f837759" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../squeeze&quot;&gt;&lt;code&gt;tf.squeeze&lt;/code&gt;&lt;/a&gt;(&lt;strong&gt;input&lt;/strong&gt;, axis=&lt;code&gt;None&lt;/code&gt;, name=&lt;code&gt;None&lt;/code&gt;, squeeze_dims=&lt;code&gt;None&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="708cdd226ce91a3c8a2c7873dc936f612dc36728" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../stack&quot;&gt;&lt;code&gt;tf.stack&lt;/code&gt;&lt;/a&gt;(&lt;strong&gt;values&lt;/strong&gt;, axis=&lt;code&gt;0&lt;/code&gt;, name=&lt;code&gt;'stack'&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25e18dca21717db29d66bcf5acdd7f77d4c8fa32" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../strings/as_string&quot;&gt;&lt;code&gt;as_string(...)&lt;/code&gt;&lt;/a&gt;: Converts each entry in the given tensor to strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0e856294e6fafeaec32f9226ce7351fcade8116" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../strings/as_string&quot;&gt;&lt;code&gt;tf.strings.as_string&lt;/code&gt;&lt;/a&gt;(&lt;strong&gt;input&lt;/strong&gt;, precision=&lt;code&gt;-1&lt;/code&gt;, scientific=&lt;code&gt;False&lt;/code&gt;, shortest=&lt;code&gt;False&lt;/code&gt;, width=&lt;code&gt;-1&lt;/code&gt;, fill=&lt;code&gt;''&lt;/code&gt;, name=&lt;code&gt;None&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a29e6fbce55e5855d3a9e03411e7a75d5fd0802" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../strings/bytes_split&quot;&gt;&lt;code&gt;bytes_split(...)&lt;/code&gt;&lt;/a&gt;: Split string elements of &lt;code&gt;input&lt;/code&gt; into bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c4a444c7f622eee5b61ed37158db0401b473cbb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../strings/format&quot;&gt;&lt;code&gt;format(...)&lt;/code&gt;&lt;/a&gt;: Formats a string template using a list of tensors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="314b0cfcc7c7a6796a981d8be1ebac53dff68d73" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../strings/join&quot;&gt;&lt;code&gt;join(...)&lt;/code&gt;&lt;/a&gt;: Joins the strings in the given list of string tensors into one tensor;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f44e21510262e4a8b99c1184a0d0a5b468431b1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../strings/join&quot;&gt;&lt;code&gt;tf.strings.join&lt;/code&gt;&lt;/a&gt;(&lt;strong&gt;inputs&lt;/strong&gt;, separator=&lt;code&gt;''&lt;/code&gt;, name=&lt;code&gt;None&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d03ca0ba869dff5f41cde3ae879505365955731" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../strings/length&quot;&gt;&lt;code&gt;tf.strings.length&lt;/code&gt;&lt;/a&gt;(&lt;strong&gt;input&lt;/strong&gt;, name=&lt;code&gt;None&lt;/code&gt;, unit=&lt;code&gt;'BYTE'&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5db963f62dc3b6e7cfb7d6f82cc32f0808c0547" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../strings/lower&quot;&gt;&lt;code&gt;lower(...)&lt;/code&gt;&lt;/a&gt;: TODO: add doc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="405e17b7a78f512e6baf69d25b857e001e379174" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../strings/ngrams&quot;&gt;&lt;code&gt;ngrams(...)&lt;/code&gt;&lt;/a&gt;: Create a tensor of n-grams based on &lt;code&gt;data&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e679bbaf613eb6a7ae0e37bcd4084795a8a9454" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../strings/reduce_join&quot;&gt;&lt;code&gt;reduce_join(...)&lt;/code&gt;&lt;/a&gt;: Joins all strings into a single string, or joins along an axis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1eaed1e74ba6075d6b160c88e22d9a2f1732da98" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../strings/reduce_join&quot;&gt;&lt;code&gt;tf.strings.reduce_join&lt;/code&gt;&lt;/a&gt;(&lt;strong&gt;inputs&lt;/strong&gt;, axis=&lt;code&gt;None&lt;/code&gt;, keepdims=&lt;code&gt;False&lt;/code&gt;, separator=&lt;code&gt;''&lt;/code&gt;, name=&lt;code&gt;None&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b05ee1e03fad32d60ece25eb8ce03d0a9e8c349" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../strings/regex_full_match&quot;&gt;&lt;code&gt;regex_full_match(...)&lt;/code&gt;&lt;/a&gt;: Check if the input matches the regex pattern.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1bb49edd4498231a1abf69a01eb9076445684f2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../strings/regex_full_match&quot;&gt;&lt;code&gt;tf.strings.regex_full_match&lt;/code&gt;&lt;/a&gt;(&lt;strong&gt;input&lt;/strong&gt;, pattern, name=&lt;code&gt;None&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6154d0a722d57ba98634caef4a88424578d50a94" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../strings/regex_replace&quot;&gt;&lt;code&gt;regex_replace(...)&lt;/code&gt;&lt;/a&gt;: Replace elements of &lt;code&gt;input&lt;/code&gt; matching regex &lt;code&gt;pattern&lt;/code&gt; with &lt;code&gt;rewrite&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30992f081604549c51f0bf7d5b8d995e9c91f780" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../strings/regex_replace&quot;&gt;&lt;code&gt;tf.strings.regex_replace&lt;/code&gt;&lt;/a&gt;(&lt;strong&gt;input&lt;/strong&gt;, pattern, rewrite, replace_global=&lt;code&gt;True&lt;/code&gt;, name=&lt;code&gt;None&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="635823c5c28472f8c85aaf1e8ffbc7c616a40432" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../strings/split&quot;&gt;&lt;code&gt;split(...)&lt;/code&gt;&lt;/a&gt;: Split elements of &lt;code&gt;input&lt;/code&gt; based on &lt;code&gt;sep&lt;/code&gt; into a &lt;code&gt;RaggedTensor&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71e1c8f0f6d627f4de39ccfbc792e28956340140" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../strings/strip&quot;&gt;&lt;code&gt;strip(...)&lt;/code&gt;&lt;/a&gt;: Strip leading and trailing whitespaces from the Tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="924ecd9f011295f223f8586ab140584705e8f5e7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../strings/strip&quot;&gt;&lt;code&gt;tf.strings.strip&lt;/code&gt;&lt;/a&gt;(&lt;strong&gt;input&lt;/strong&gt;, name=&lt;code&gt;None&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="900093ee2245a518ea308f6e769ff05c5c795032" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../strings/substr&quot;&gt;&lt;code&gt;substr(...)&lt;/code&gt;&lt;/a&gt;: Return substrings from &lt;code&gt;Tensor&lt;/code&gt; of strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f9e6fc721d83486aa93a20bfac679812b9f4c42" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../strings/substr&quot;&gt;&lt;code&gt;tf.strings.substr&lt;/code&gt;&lt;/a&gt;(&lt;strong&gt;input&lt;/strong&gt;, pos, len, name=&lt;code&gt;None&lt;/code&gt;, unit=&lt;code&gt;'BYTE'&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afd8cdf8b310143ac93c26987c1d22e978df45db" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../strings/to_hash_bucket&quot;&gt;&lt;code&gt;tf.strings.to_hash_bucket&lt;/code&gt;&lt;/a&gt;(&lt;strong&gt;input&lt;/strong&gt;, num_buckets, name=&lt;code&gt;None&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f87b9754d42a91625a27acdf46b85caeb4ab7c16" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../strings/to_hash_bucket&quot;&gt;&lt;code&gt;to_hash_bucket(...)&lt;/code&gt;&lt;/a&gt;: Converts each string in the input Tensor to its hash mod by a number of buckets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cea6799f55cd1a30b99921424ec7f0d57ee6f849" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../strings/to_hash_bucket_fast&quot;&gt;&lt;code&gt;tf.strings.to_hash_bucket_fast&lt;/code&gt;&lt;/a&gt;(&lt;strong&gt;input&lt;/strong&gt;, num_buckets, name=&lt;code&gt;None&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30d745104f150ed1e785652dc1f74893dafa0275" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../strings/to_hash_bucket_fast&quot;&gt;&lt;code&gt;to_hash_bucket_fast(...)&lt;/code&gt;&lt;/a&gt;: Converts each string in the input Tensor to its hash mod by a number of buckets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57d84c3e5c1a60b222538c0fae33a12d17c56006" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../strings/to_hash_bucket_strong&quot;&gt;&lt;code&gt;tf.strings.to_hash_bucket_strong&lt;/code&gt;&lt;/a&gt;(&lt;strong&gt;input&lt;/strong&gt;, num_buckets, key, name=&lt;code&gt;None&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c8eacaec6360a20c59a23f2080a55bf991eb894" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../strings/to_hash_bucket_strong&quot;&gt;&lt;code&gt;to_hash_bucket_strong(...)&lt;/code&gt;&lt;/a&gt;: Converts each string in the input Tensor to its hash mod by a number of buckets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d39645a32eb4444ba2ed643dcf7dfe609ebc656f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../strings/to_number&quot;&gt;&lt;code&gt;tf.strings.to_number&lt;/code&gt;&lt;/a&gt;(&lt;strong&gt;input&lt;/strong&gt;, out_type=&lt;a href=&quot;../../../tf#float32&quot;&gt;&lt;code&gt;tf.float32&lt;/code&gt;&lt;/a&gt;, name=&lt;code&gt;None&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93b2efa27e893651a744041c85d98a7a6baaaad1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../strings/to_number&quot;&gt;&lt;code&gt;to_number(...)&lt;/code&gt;&lt;/a&gt;: Converts each string in the input Tensor to the specified numeric type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="321962d18052454956e03f00daadcb5d41a60e1d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../strings/unicode_decode&quot;&gt;&lt;code&gt;unicode_decode(...)&lt;/code&gt;&lt;/a&gt;: Decodes each string in &lt;code&gt;input&lt;/code&gt; into a sequence of Unicode code points.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1079be0657c6736ff4b19c767b2357f5cba1921d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../strings/unicode_decode_with_offsets&quot;&gt;&lt;code&gt;unicode_decode_with_offsets(...)&lt;/code&gt;&lt;/a&gt;: Decodes each string into a sequence of code points with start offsets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0445497c8d10c465999f5ed0b1737e216f29ab16" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../strings/unicode_encode&quot;&gt;&lt;code&gt;unicode_encode(...)&lt;/code&gt;&lt;/a&gt;: Encodes each sequence of Unicode code points in &lt;code&gt;input&lt;/code&gt; into a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="241bfcd0ee8c693fa8860736a6fa36b728cc7066" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../strings/unicode_script&quot;&gt;&lt;code&gt;tf.strings.unicode_script&lt;/code&gt;&lt;/a&gt;(&lt;strong&gt;input&lt;/strong&gt;, name=&lt;code&gt;None&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8992c751397b17ee0fc83c2e51304e23eff5b458" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../strings/unicode_script&quot;&gt;&lt;code&gt;unicode_script(...)&lt;/code&gt;&lt;/a&gt;: Determine the script codes of a given tensor of Unicode integer code points.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2e5b07ef0836dc7976e24c21eb4b159830a7be7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../strings/unicode_split&quot;&gt;&lt;code&gt;unicode_split(...)&lt;/code&gt;&lt;/a&gt;: Splits each string in &lt;code&gt;input&lt;/code&gt; into a sequence of Unicode code points.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f7a6d18e504aca617a02ef2341bbd85a95e808e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../strings/unicode_split_with_offsets&quot;&gt;&lt;code&gt;unicode_split_with_offsets(...)&lt;/code&gt;&lt;/a&gt;: Splits each string into a sequence of code points with start offsets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d53b668e41552711f3e94a123f76d292dd56f39" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../strings/unicode_transcode&quot;&gt;&lt;code&gt;unicode_transcode(...)&lt;/code&gt;&lt;/a&gt;: Transcode the input text from a source encoding to a destination encoding.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0316d48e0449dd49606faa34bde719faa0de577b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../strings/unsorted_segment_join&quot;&gt;&lt;code&gt;unsorted_segment_join(...)&lt;/code&gt;&lt;/a&gt;: Joins the elements of &lt;code&gt;inputs&lt;/code&gt; based on &lt;code&gt;segment_ids&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a401c2e1ceb68a83200515a5bb49c28679ef8cd5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../strings/upper&quot;&gt;&lt;code&gt;upper(...)&lt;/code&gt;&lt;/a&gt;: TODO: add doc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5305965cdcb4e7013967dab4c5886f13994bbb31" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../sysconfig/get_compile_flags&quot;&gt;&lt;code&gt;get_compile_flags(...)&lt;/code&gt;&lt;/a&gt;: Get the compilation flags for custom operators.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60910b2c6ac2b2d88c8bb32a0eed77dde292498c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../sysconfig/get_include&quot;&gt;&lt;code&gt;get_include(...)&lt;/code&gt;&lt;/a&gt;: Get the directory containing the TensorFlow C++ header files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3df4660059f19e0d182e8269b96110009f3c3ca" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../sysconfig/get_lib&quot;&gt;&lt;code&gt;get_lib(...)&lt;/code&gt;&lt;/a&gt;: Get the directory containing the TensorFlow framework library.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbdbc9b20c5519ab976a39768d4bad821b38aede" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../sysconfig/get_link_flags&quot;&gt;&lt;code&gt;get_link_flags(...)&lt;/code&gt;&lt;/a&gt;: Get the link flags for custom operators.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c119d8f4c89c628eb7b23f293ab80c4d925f6125" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../tensordot&quot;&gt;&lt;code&gt;tensordot(...)&lt;/code&gt;&lt;/a&gt;: Tensor contraction of a and b along specified axes and outer product.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64c7a8c259067a75b7f0d9045da1e01e703546d2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../test/assert_equal_graph_def&quot;&gt;&lt;code&gt;assert_equal_graph_def(...)&lt;/code&gt;&lt;/a&gt;: Asserts that two &lt;code&gt;GraphDef&lt;/code&gt;s are (mostly) the same.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="929e01e83a1e9663974b0f794ec3b1eef917e8da" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../test/benchmark&quot;&gt;&lt;code&gt;class Benchmark&lt;/code&gt;&lt;/a&gt;: Abstract class that provides helpers for TensorFlow benchmarks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dd87f2da6bb8aff1407e7eebc470b09556f0edf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../test/benchmark_config&quot;&gt;&lt;code&gt;benchmark_config(...)&lt;/code&gt;&lt;/a&gt;: Returns a tf.compat.v1.ConfigProto for disabling the dependency optimizer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f16ff74141d48220fd53536e471296f85a8b8ff" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../test/compute_gradient&quot;&gt;&lt;code&gt;compute_gradient(...)&lt;/code&gt;&lt;/a&gt;: Computes the theoretical and numeric Jacobian of &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d1eb7982ab3e0d9662054ec07c84c61aafe3b8c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../test/create_local_cluster&quot;&gt;&lt;code&gt;create_local_cluster(...)&lt;/code&gt;&lt;/a&gt;: Create and start local servers and return the associated &lt;code&gt;Server&lt;/code&gt; objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f49c99068d48924c90c8df39b1db7166b252c3d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../test/gpu_device_name&quot;&gt;&lt;code&gt;gpu_device_name(...)&lt;/code&gt;&lt;/a&gt;: Returns the name of a GPU device if available or the empty string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="661e10f755560430d39baf7079b0fc207af65534" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../test/is_built_with_cuda&quot;&gt;&lt;code&gt;is_built_with_cuda(...)&lt;/code&gt;&lt;/a&gt;: Returns whether TensorFlow was built with CUDA (GPU) support.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cc632599b86da7630a1fe1745bb02bb65171470" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../test/is_built_with_gpu_support&quot;&gt;&lt;code&gt;is_built_with_gpu_support(...)&lt;/code&gt;&lt;/a&gt;: Returns whether TensorFlow was built with GPU (i.e. CUDA or ROCm) support.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f27f2b919c690cb3221b224e0d65fac2f69e3e3e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../test/is_built_with_rocm&quot;&gt;&lt;code&gt;is_built_with_rocm(...)&lt;/code&gt;&lt;/a&gt;: Returns whether TensorFlow was built with ROCm (GPU) support.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e2d21827572373d782ef13fbdbcbb8c0b967525" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../test/is_gpu_available&quot;&gt;&lt;code&gt;is_gpu_available(...)&lt;/code&gt;&lt;/a&gt;: Returns whether TensorFlow can access a GPU. (deprecated)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40785f87c1c55608ced258cb7471cde61ff0c002" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../test/main&quot;&gt;&lt;code&gt;main(...)&lt;/code&gt;&lt;/a&gt;: Runs all unit tests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e30c1b1bbe13b753c2125376c615a3686e2aa121" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../test/testcase&quot;&gt;&lt;code&gt;class TestCase&lt;/code&gt;&lt;/a&gt;: Base class for tests that need to test TensorFlow.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0b74cef9618c2c72e9c3f63f5b2e54b92b45320" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../tf#bfloat16&quot;&gt;&lt;code&gt;tf.bfloat16&lt;/code&gt;&lt;/a&gt;: 16-bit truncated floating-point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8efb949e2e1f6bc64d41e843c52bf93fcac9f299" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../tf#bool&quot;&gt;&lt;code&gt;tf.bool&lt;/code&gt;&lt;/a&gt;: Boolean.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ed128a845d97fb79f1737010382098c7de4307c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../tf#complex128&quot;&gt;&lt;code&gt;tf.complex128&lt;/code&gt;&lt;/a&gt;: 128-bit double-precision complex.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc33a1a9d136a48d8aed17c247768b54396a96db" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../tf#complex64&quot;&gt;&lt;code&gt;tf.complex64&lt;/code&gt;&lt;/a&gt;: 64-bit single-precision complex.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1814a6cddbbc9dfd1da7216ce0097fddbc1ade4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../tf#float16&quot;&gt;&lt;code&gt;tf.float16&lt;/code&gt;&lt;/a&gt;: 16-bit half-precision floating-point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a42cf20a9d2a217b9433f0dd6515d954de11731" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../tf#float32&quot;&gt;&lt;code&gt;tf.float32&lt;/code&gt;&lt;/a&gt;: 32-bit single-precision floating-point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d07329d0cc22e57e7bf7f4945f7bff33b9c9268" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../tf#float64&quot;&gt;&lt;code&gt;tf.float64&lt;/code&gt;&lt;/a&gt;: 64-bit double-precision floating-point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="656eaa24e6eb86418fba962da3502f4a9ea6f4b0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../tf#int16&quot;&gt;&lt;code&gt;tf.int16&lt;/code&gt;&lt;/a&gt;: 16-bit signed integer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="befa2f1b174e9eb4cd340e6325774ef376c52037" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../tf#int32&quot;&gt;&lt;code&gt;tf.int32&lt;/code&gt;&lt;/a&gt;: 32-bit signed integer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c230f0ae068c5ad87fd88bfe25d02b03b9ba0461" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../tf#int64&quot;&gt;&lt;code&gt;tf.int64&lt;/code&gt;&lt;/a&gt;: 64-bit signed integer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab26f9b6c330d9042bcf08d9b67141a511411bc1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../tf#int8&quot;&gt;&lt;code&gt;tf.int8&lt;/code&gt;&lt;/a&gt;: 8-bit signed integer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e10eb21987f08e41f911089dfb5b02430874efa3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../tf#qint16&quot;&gt;&lt;code&gt;tf.qint16&lt;/code&gt;&lt;/a&gt;: Quantized 16-bit signed integer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ab28701b85f75f8e9e59eeb8564ce68c8c6b53f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../tf#qint32&quot;&gt;&lt;code&gt;tf.qint32&lt;/code&gt;&lt;/a&gt;: Quantized 32-bit signed integer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee4a63a61f78dbd9f54a758866da58af3d0c3c59" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../tf#qint8&quot;&gt;&lt;code&gt;tf.qint8&lt;/code&gt;&lt;/a&gt;: Quantized 8-bit signed integer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c36400f67854e5179a7286ccc92693421351990c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../tf#quint16&quot;&gt;&lt;code&gt;tf.quint16&lt;/code&gt;&lt;/a&gt;: Quantized 16-bit unsigned integer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="569805e6bdd200057a4f0006d77aa63ccc02b414" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../tf#quint8&quot;&gt;&lt;code&gt;tf.quint8&lt;/code&gt;&lt;/a&gt;: Quantized 8-bit unsigned integer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c9180cf660ba65abd0c8cf7de373af09d425aad" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../tf#resource&quot;&gt;&lt;code&gt;tf.resource&lt;/code&gt;&lt;/a&gt;: Handle to a mutable resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5287a23c0cd1b6e9a554ec14d2def3c191cd3cc2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../tf#string&quot;&gt;&lt;code&gt;tf.string&lt;/code&gt;&lt;/a&gt;: String.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d709060313ed3ecfc1572afb381ac73408457b0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../tf#uint16&quot;&gt;&lt;code&gt;tf.uint16&lt;/code&gt;&lt;/a&gt;: 16-bit unsigned integer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b10ac5fd04daff58e0cf110315c59b7a672f655" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../tf#uint32&quot;&gt;&lt;code&gt;tf.uint32&lt;/code&gt;&lt;/a&gt;: 32-bit unsigned integer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="793d90a991657f8622cfe862f685828624ae3532" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../tf#uint64&quot;&gt;&lt;code&gt;tf.uint64&lt;/code&gt;&lt;/a&gt;: 64-bit unsigned integer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a8a334d5fe43f700e044d974ac3eebeade65c33" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../tf#uint8&quot;&gt;&lt;code&gt;tf.uint8&lt;/code&gt;&lt;/a&gt;: 8-bit unsigned integer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d02db5ee0efc59ddfb6ab26a0dd6fc38956b3e86" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../tf#variant&quot;&gt;&lt;code&gt;tf.variant&lt;/code&gt;&lt;/a&gt;: Values of arbitrary types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d57c6b37ac62fb0a55a85f557e578e5d8b489d0f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../tile&quot;&gt;&lt;code&gt;tf.tile&lt;/code&gt;&lt;/a&gt;(&lt;strong&gt;input&lt;/strong&gt;, multiples, name=&lt;code&gt;None&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c150eec3d4abf2c6675bec16cea02051676d02e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../tile&quot;&gt;&lt;code&gt;tile(...)&lt;/code&gt;&lt;/a&gt;: Constructs a tensor by tiling a given tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd49206930b4a0fdc2e0a247e4c6fc7b97b009d5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../train/byteslist&quot;&gt;&lt;code&gt;class BytesList&lt;/code&gt;&lt;/a&gt;: A ProtocolMessage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85f2a50d4b05c23b2b51a8ddc7d1cfb61b6751ec" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../train/checkpoint&quot;&gt;&lt;code&gt;class Checkpoint&lt;/code&gt;&lt;/a&gt;: Groups trackable objects, saving and restoring them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43473688840f55cc8fe27d5479b3895d33ae8191" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../train/checkpointmanager&quot;&gt;&lt;code&gt;class CheckpointManager&lt;/code&gt;&lt;/a&gt;: Deletes old checkpoints.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cc9287c4cf65a64b48a1eea88b6ef37da831368" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../train/checkpoints_iterator&quot;&gt;&lt;code&gt;checkpoints_iterator(...)&lt;/code&gt;&lt;/a&gt;: Continuously yield new checkpoint files as they appear.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcc7ed11acbd461c61d95b10ad548dab8df43141" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../train/clusterdef&quot;&gt;&lt;code&gt;class ClusterDef&lt;/code&gt;&lt;/a&gt;: A ProtocolMessage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e4d14811c9293e4ef1fdd8af79ec7e2c9fce63c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../train/clusterspec&quot;&gt;&lt;code&gt;class ClusterSpec&lt;/code&gt;&lt;/a&gt;: Represents a cluster as a set of &quot;tasks&quot;, organized into &quot;jobs&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddcca2a37a0b9f289d384955e34a7e46274065c3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../train/coordinator&quot;&gt;&lt;code&gt;class Coordinator&lt;/code&gt;&lt;/a&gt;: A coordinator for threads.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38a9b4fbf17f3c876e8a3918cae3204ce0a60aae" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../train/example&quot;&gt;&lt;code&gt;class Example&lt;/code&gt;&lt;/a&gt;: A ProtocolMessage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a150bf4c50c35d25ca183dbb0ca33143219b79e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../train/exponentialmovingaverage&quot;&gt;&lt;code&gt;class ExponentialMovingAverage&lt;/code&gt;&lt;/a&gt;: Maintains moving averages of variables by employing an exponential decay.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34684f9a0b6e49bcffbed4bb4821856786ccca04" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../train/feature&quot;&gt;&lt;code&gt;class Feature&lt;/code&gt;&lt;/a&gt;: A ProtocolMessage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cbe240d84b209dcccd395746c0e9c8ed5e08dc8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../train/featurelist&quot;&gt;&lt;code&gt;class FeatureList&lt;/code&gt;&lt;/a&gt;: A ProtocolMessage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce3407b356d526d867b0f45ddafdb4ca04f0a104" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../train/featurelists&quot;&gt;&lt;code&gt;class FeatureLists&lt;/code&gt;&lt;/a&gt;: A ProtocolMessage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c974fbb58f1a360aa4da1a02b2d8b55f559293cf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../train/features&quot;&gt;&lt;code&gt;class Features&lt;/code&gt;&lt;/a&gt;: A ProtocolMessage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49ef9ded10f449e5b723b821e59c5627ef0540e6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../train/floatlist&quot;&gt;&lt;code&gt;class FloatList&lt;/code&gt;&lt;/a&gt;: A ProtocolMessage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="223f8e5b30f83263deb3c0ce95c108a7a31e3459" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../train/get_checkpoint_state&quot;&gt;&lt;code&gt;get_checkpoint_state(...)&lt;/code&gt;&lt;/a&gt;: Returns CheckpointState proto from the &quot;checkpoint&quot; file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a508af149476bf2833938f48334dd8c153768142" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../train/int64list&quot;&gt;&lt;code&gt;class Int64List&lt;/code&gt;&lt;/a&gt;: A ProtocolMessage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82d7f8a64ec7e58e981c2dc4f0959f06b4e0cf27" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../train/jobdef&quot;&gt;&lt;code&gt;class JobDef&lt;/code&gt;&lt;/a&gt;: A ProtocolMessage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1b4b8d44a0ca21de696b530e630a18e112223e5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../train/latest_checkpoint&quot;&gt;&lt;code&gt;latest_checkpoint(...)&lt;/code&gt;&lt;/a&gt;: Finds the filename of latest saved checkpoint file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6b3c578764d4ed3414753569c47a70aeadae895" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../train/list_variables&quot;&gt;&lt;code&gt;list_variables(...)&lt;/code&gt;&lt;/a&gt;: Returns list of all variables in the checkpoint.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d38a53bbb3cc1d285693c39a67b3557ee4301cb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../train/load_checkpoint&quot;&gt;&lt;code&gt;load_checkpoint(...)&lt;/code&gt;&lt;/a&gt;: Returns &lt;code&gt;CheckpointReader&lt;/code&gt; for checkpoint found in &lt;code&gt;ckpt_dir_or_file&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d320e4d617ab63225b11509ebf60dfe984166767" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../train/load_variable&quot;&gt;&lt;code&gt;load_variable(...)&lt;/code&gt;&lt;/a&gt;: Returns the tensor value of the given variable in the checkpoint.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf030f6458ff6393d54535f668aa1bdc138f8600" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../train/sequenceexample&quot;&gt;&lt;code&gt;class SequenceExample&lt;/code&gt;&lt;/a&gt;: A ProtocolMessage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03fe7bcb570bc680ffeebfce8f722fd365e318a2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../train/serverdef&quot;&gt;&lt;code&gt;class ServerDef&lt;/code&gt;&lt;/a&gt;: A ProtocolMessage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="437ac3a7c2575f3501461ecb577952931195e369" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../truncatediv&quot;&gt;&lt;code&gt;tf.truncatediv&lt;/code&gt;&lt;/a&gt;(&lt;strong&gt;x&lt;/strong&gt;, &lt;strong&gt;y&lt;/strong&gt;, name=&lt;code&gt;None&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c0a3914303be5c3a7933c3ac2b84380dfdc30ae" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../truncatemod&quot;&gt;&lt;code&gt;tf.truncatemod&lt;/code&gt;&lt;/a&gt;(&lt;strong&gt;x&lt;/strong&gt;, &lt;strong&gt;y&lt;/strong&gt;, name=&lt;code&gt;None&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44de969486d75519321da7937e218f02d3ec3299" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../where&quot;&gt;&lt;code&gt;tf.where&lt;/code&gt;&lt;/a&gt;(&lt;strong&gt;condition&lt;/strong&gt;, &lt;strong&gt;x&lt;/strong&gt;=&lt;code&gt;None&lt;/code&gt;, &lt;strong&gt;y&lt;/strong&gt;=&lt;code&gt;None&lt;/code&gt;, name=&lt;code&gt;None&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13754cb39acd478699c9f5f2a4dd75d8dbb1da2e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../../zeros_like&quot;&gt;&lt;code&gt;tf.zeros_like&lt;/code&gt;&lt;/a&gt;(&lt;strong&gt;tensor&lt;/strong&gt;, dtype=&lt;code&gt;None&lt;/code&gt;, name=&lt;code&gt;None&lt;/code&gt;, optimize=&lt;code&gt;True&lt;/code&gt;)n</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e771346ac4f77f6da9d04c6098a16abf73821a6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../aggregationmethod&quot;&gt;&lt;code&gt;class AggregationMethod&lt;/code&gt;&lt;/a&gt;: A class listing aggregation methods used to combine gradients.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4f62eb68b8e35e70d7f101bbc1a7fbf356f91a6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../argsort&quot;&gt;&lt;code&gt;argsort(...)&lt;/code&gt;&lt;/a&gt;: Returns the indices of a tensor that give its sorted order along an axis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="954b69095242599e35a2d792fc19b8ebb91f667c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../as_bytes&quot;&gt;&lt;code&gt;as_bytes(...)&lt;/code&gt;&lt;/a&gt;: Converts &lt;code&gt;bytearray&lt;/code&gt;, &lt;code&gt;bytes&lt;/code&gt;, or unicode python input types to &lt;code&gt;bytes&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1562d8dce4c9c40803db5202479c83a29f0f3b93" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../as_str_any&quot;&gt;&lt;code&gt;as_str_any(...)&lt;/code&gt;&lt;/a&gt;: Converts input to &lt;code&gt;str&lt;/code&gt; type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6e9790547e325b7cf7356f1398861fa883515b3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../as_text&quot;&gt;&lt;code&gt;as_str(...)&lt;/code&gt;&lt;/a&gt;: Converts any string-like python input types to unicode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="482934d6c0b51d1ec813f5fa4864a9378180b84c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../as_text&quot;&gt;&lt;code&gt;as_text(...)&lt;/code&gt;&lt;/a&gt;: Converts any string-like python input types to unicode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81bba5aff377ac71a730c73045c1b042657f5f81" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../batch_to_space&quot;&gt;&lt;code&gt;batch_to_space(...)&lt;/code&gt;&lt;/a&gt;: BatchToSpace for N-D tensors of type T.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dae1a36d3a37bc1c96d79b1c01f07f3df6d9345" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../bitcast&quot;&gt;&lt;code&gt;bitcast(...)&lt;/code&gt;&lt;/a&gt;: Bitcasts a tensor from one type to another without copying data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6d6f53ebac2d9469ebffb686602d4278712235a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../boolean_mask&quot;&gt;&lt;code&gt;boolean_mask(...)&lt;/code&gt;&lt;/a&gt;: Apply boolean mask to tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48b52575e198d8e9e0b2878630e62779cf482e1e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../broadcast_dynamic_shape&quot;&gt;&lt;code&gt;broadcast_dynamic_shape(...)&lt;/code&gt;&lt;/a&gt;: Computes the shape of a broadcast given symbolic shapes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="197582b69845b447cf0c128e5f9eeec75d6bbb43" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../broadcast_static_shape&quot;&gt;&lt;code&gt;broadcast_static_shape(...)&lt;/code&gt;&lt;/a&gt;: Computes the shape of a broadcast given known shapes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58ac46ea21d322770a465db00460d0083f9a0ec8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../broadcast_to&quot;&gt;&lt;code&gt;broadcast_to(...)&lt;/code&gt;&lt;/a&gt;: Broadcast an array for a compatible shape.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7062fecffb049cd85f0684da3c52d7b67d421ab" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../case&quot;&gt;&lt;code&gt;case(...)&lt;/code&gt;&lt;/a&gt;: Create a case operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42df15e7b823c0bfb027d5364f8032890d24ae48" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../cast&quot;&gt;&lt;code&gt;cast(...)&lt;/code&gt;&lt;/a&gt;: Casts a tensor to a new type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="755477c84bb049d8b5826471434d2da42bde9f3c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../clip_by_global_norm&quot;&gt;&lt;code&gt;clip_by_global_norm(...)&lt;/code&gt;&lt;/a&gt;: Clips values of multiple tensors by the ratio of the sum of their norms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4d64c6132ea144b6cbb00996e7d894dfe223f2a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../clip_by_norm&quot;&gt;&lt;code&gt;clip_by_norm(...)&lt;/code&gt;&lt;/a&gt;: Clips tensor values to a maximum L2-norm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f3247d253c8fcd44f3644ad7319619fe48f30e9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../clip_by_value&quot;&gt;&lt;code&gt;clip_by_value(...)&lt;/code&gt;&lt;/a&gt;: Clips tensor values to a specified min and max.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f0b80d31de52612cf3b294b2f227a1784663482" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../concat&quot;&gt;&lt;code&gt;concat(...)&lt;/code&gt;&lt;/a&gt;: Concatenates tensors along one dimension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51897bcd1c96536efe6310c70ff5df156049b716" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../cond&quot;&gt;&lt;code&gt;cond(...)&lt;/code&gt;&lt;/a&gt;: Return &lt;code&gt;true_fn()&lt;/code&gt; if the predicate &lt;code&gt;pred&lt;/code&gt; is true else &lt;code&gt;false_fn()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db6ab2e5202650156626cc46835a489f71cba076" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../constant&quot;&gt;&lt;code&gt;constant(...)&lt;/code&gt;&lt;/a&gt;: Creates a constant tensor from a tensor-like object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="633e5228bcd0ee0527bf5fd160ab83e6e8df68ea" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../constant_initializer&quot;&gt;&lt;code&gt;class Constant&lt;/code&gt;&lt;/a&gt;: Initializer that generates tensors with constant values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ce5e1c47d52ae5267960197894b05103d1f1215" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../constant_initializer&quot;&gt;&lt;code&gt;class constant&lt;/code&gt;&lt;/a&gt;: Initializer that generates tensors with constant values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6cb2a9fc3bd7b18bafadfa28963bb3051457ce7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../constant_initializer&quot;&gt;&lt;code&gt;class constant_initializer&lt;/code&gt;&lt;/a&gt;: Initializer that generates tensors with constant values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6f905fdce2e0348fe6d06db57dc725401b4c4ab" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../control_dependencies&quot;&gt;&lt;code&gt;control_dependencies(...)&lt;/code&gt;&lt;/a&gt;: Wrapper for &lt;a href=&quot;../graph#control_dependencies&quot;&gt;&lt;code&gt;Graph.control_dependencies()&lt;/code&gt;&lt;/a&gt; using the default graph.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e3ded8f323250e74ca91520c2da6d988f34e0f9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../convert_to_tensor&quot;&gt;&lt;code&gt;convert_to_tensor(...)&lt;/code&gt;&lt;/a&gt;: Converts the given &lt;code&gt;value&lt;/code&gt; to a &lt;code&gt;Tensor&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7f70cbf96ae150ed8dc5fd71930076cb1e46d3b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../criticalsection&quot;&gt;&lt;code&gt;class CriticalSection&lt;/code&gt;&lt;/a&gt;: Critical section.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce897e83a9613481968e4cf96af3275f14334580" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../custom_gradient&quot;&gt;&lt;code&gt;custom_gradient(...)&lt;/code&gt;&lt;/a&gt;: Decorator to define a function with a custom gradient.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7b5da241d24e8ffe222ebfeee0471503bd7a23b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../dataset#interleave&quot;&gt;&lt;code&gt;tf.data.Dataset.interleave()&lt;/code&gt;&lt;/a&gt; is a generalization of &lt;code&gt;flat_map&lt;/code&gt;, since &lt;code&gt;flat_map&lt;/code&gt; produces the same output as &lt;a href=&quot;../dataset#interleave&quot;&gt;&lt;code&gt;tf.data.Dataset.interleave(cycle_length=1)&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c9b5e985440c61682d6e277aa84f5f64ea75a6c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../debugging/assert&quot;&gt;&lt;code&gt;Assert(...)&lt;/code&gt;&lt;/a&gt;: Asserts that the given condition is true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bac72a090281532270bca0c07f6ffdd8e2dc190" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../debugging/assert_equal&quot;&gt;&lt;code&gt;assert_equal(...)&lt;/code&gt;&lt;/a&gt;: Assert the condition &lt;code&gt;x == y&lt;/code&gt; holds element-wise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a17879086854513ea3532208d1660509323616d3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../debugging/assert_greater&quot;&gt;&lt;code&gt;assert_greater(...)&lt;/code&gt;&lt;/a&gt;: Assert the condition &lt;code&gt;x &amp;gt; y&lt;/code&gt; holds element-wise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c8dac9b4c658b7eb102f0315c8d86c9710fa46a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../debugging/assert_less&quot;&gt;&lt;code&gt;assert_less(...)&lt;/code&gt;&lt;/a&gt;: Assert the condition &lt;code&gt;x &amp;lt; y&lt;/code&gt; holds element-wise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79c879707c40ef4a1ec51f3bc0504d2abc77cd7b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../debugging/assert_proper_iterable&quot;&gt;&lt;code&gt;assert_proper_iterable(...)&lt;/code&gt;&lt;/a&gt;: Static assert that values is a &quot;proper&quot; iterable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30df211b711d04bf47d5041e5f30cdf85ee9b46a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../debugging/assert_rank&quot;&gt;&lt;code&gt;assert_rank(...)&lt;/code&gt;&lt;/a&gt;: Assert that &lt;code&gt;x&lt;/code&gt; has rank equal to &lt;code&gt;rank&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8437d9e7134a50f1e4f23e5c8af75b0da979736" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../debugging/assert_same_float_dtype&quot;&gt;&lt;code&gt;assert_same_float_dtype(...)&lt;/code&gt;&lt;/a&gt;: Validate and return float type based on &lt;code&gt;tensors&lt;/code&gt; and &lt;code&gt;dtype&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da6d46e739800572f7ebc3aa1ee75028dacb7265" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../debugging/check_numerics&quot;&gt;&lt;code&gt;check_numerics(...)&lt;/code&gt;&lt;/a&gt;: Checks a tensor for NaN and Inf values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c49dce5f8f7e2adedaa3b82ad8a80f8d21d4d1fa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../debugging/is_numeric_tensor&quot;&gt;&lt;code&gt;is_numeric_tensor(...)&lt;/code&gt;&lt;/a&gt;: Returns &lt;code&gt;True&lt;/code&gt; if the elements of &lt;code&gt;tensor&lt;/code&gt; are numbers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca5e1a147d157abe8cf3d2abba50f8e60eae2371" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../device&quot;&gt;&lt;code&gt;device(...)&lt;/code&gt;&lt;/a&gt;: Specifies the device for ops created/executed in this context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94905a2dcf3f2fc43cd34f8fa6e5d6027abd3ea3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../devicespec&quot;&gt;&lt;code&gt;class DeviceSpec&lt;/code&gt;&lt;/a&gt;: Represents a (possibly partial) specification for a TensorFlow device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="967aa05fe8a9296aaebab29c09930aed0d71c281" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../dimension_at_index&quot;&gt;&lt;code&gt;dimension_at_index(...)&lt;/code&gt;&lt;/a&gt;: Compatibility utility required to allow for both V1 and V2 behavior in TF.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc3edcdab08e3025f1b1d3403de3d766b2309dde" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../dimension_value&quot;&gt;&lt;code&gt;dimension_value(...)&lt;/code&gt;&lt;/a&gt;: Compatibility utility required to allow for both V1 and V2 behavior in TF.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfc4bb8b2a05b2eeda77c46ddb354573a82e34b1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../dtypes/as_dtype&quot;&gt;&lt;code&gt;as_dtype(...)&lt;/code&gt;&lt;/a&gt;: Converts the given &lt;code&gt;type_value&lt;/code&gt; to a &lt;code&gt;DType&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86c9eb111ff26bd11c38310ae7cb27705ed91a95" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../dtypes/complex&quot;&gt;&lt;code&gt;complex(...)&lt;/code&gt;&lt;/a&gt;: Converts two real numbers to a complex number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="034f7b2b94756b2e55d0012d7eb9feca8c692668" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../dtypes/dtype&quot;&gt;&lt;code&gt;class DType&lt;/code&gt;&lt;/a&gt;: Represents the type of the elements in a &lt;code&gt;Tensor&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1d273366ff813733efdd5cfc5eff39c319fc8f9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../dtypes/saturate_cast&quot;&gt;&lt;code&gt;saturate_cast(...)&lt;/code&gt;&lt;/a&gt;: Performs a safe saturating cast of &lt;code&gt;value&lt;/code&gt; to &lt;code&gt;dtype&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc0a510a852c8f3c7efbf7e616bd1eedced541ef" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../dynamic_partition&quot;&gt;&lt;code&gt;dynamic_partition(...)&lt;/code&gt;&lt;/a&gt;: Partitions &lt;code&gt;data&lt;/code&gt; into &lt;code&gt;num_partitions&lt;/code&gt; tensors using indices from &lt;code&gt;partitions&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0a04604ed48df8750a18b60ded6df56ec6bbe2c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../dynamic_stitch&quot;&gt;&lt;code&gt;dynamic_stitch(...)&lt;/code&gt;&lt;/a&gt;: Interleave the values from the &lt;code&gt;data&lt;/code&gt; tensors into a single tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96f5f224ee700cad1e5d05bed69a43659ede0924" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../edit_distance&quot;&gt;&lt;code&gt;edit_distance(...)&lt;/code&gt;&lt;/a&gt;: Computes the Levenshtein distance between sequences.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63c271e8845c63af157691c25ab4d97c1c09a191" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../eig&quot;&gt;&lt;code&gt;eig(...)&lt;/code&gt;&lt;/a&gt;: Computes the eigen decomposition of a batch of matrices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="194924315bf63fc128a3b491b293ac69ebee4762" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../eigvals&quot;&gt;&lt;code&gt;eigvals(...)&lt;/code&gt;&lt;/a&gt;: Computes the eigenvalues of one or more matrices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f4c2976db29f90ec353f9fbe0e85328ee4b9847" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../einsum&quot;&gt;&lt;code&gt;einsum(...)&lt;/code&gt;&lt;/a&gt;: Tensor contraction over specified indices and outer product.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94683fb9a1b3fef3bb190d9d7e93e231179345ab" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../ensure_shape&quot;&gt;&lt;code&gt;ensure_shape(...)&lt;/code&gt;&lt;/a&gt;: Updates the shape of a tensor and checks at runtime that the shape holds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dfea21c075faf46a1dd55cc0c91f34cbab091e4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../errors/invalidargumenterror&quot;&gt;&lt;code&gt;tf.errors.InvalidArgumentError&lt;/code&gt;&lt;/a&gt; if &lt;code&gt;condition&lt;/code&gt; is not true</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0c8544eed547665aa9b3ca6aa0a6cf0c8b071f7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../errors/invalidargumenterror&quot;&gt;&lt;code&gt;tf.errors.InvalidArgumentError&lt;/code&gt;&lt;/a&gt;: If shapes of arguments are incompatible</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31b21a7a5b71edea1d4330eb5d401e8e359c44c8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../errors/operror&quot;&gt;&lt;code&gt;class OpError&lt;/code&gt;&lt;/a&gt;: A generic error that is raised when TensorFlow execution fails.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2f304ac14df417b913f1de35f7c0e68d35afef1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../estimator&quot;&gt;&lt;code&gt;estimator&lt;/code&gt;&lt;/a&gt; module: Estimator: High level tools for working with models.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d4b9ecc801b6855062e033040445a64cf63e409" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../executing_eagerly&quot;&gt;&lt;code&gt;executing_eagerly(...)&lt;/code&gt;&lt;/a&gt;: Checks whether the current thread has eager execution enabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af805364b707678d8372249d5408ba56a6e7dfd6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../expand_dims&quot;&gt;&lt;code&gt;expand_dims(...)&lt;/code&gt;&lt;/a&gt;: Returns a tensor with an additional dimension inserted at index &lt;code&gt;axis&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8dc22340c153ff3c61e8a6775a92765a49e294e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../extract_volume_patches&quot;&gt;&lt;code&gt;extract_volume_patches(...)&lt;/code&gt;&lt;/a&gt;: Extract &lt;code&gt;patches&lt;/code&gt; from &lt;code&gt;input&lt;/code&gt; and put them in the &quot;depth&quot; output dimension. 3D extension of &lt;code&gt;extract_image_patches&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3f62c490abf1e9955159fb97469fc28883d6088" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../eye&quot;&gt;&lt;code&gt;eye(...)&lt;/code&gt;&lt;/a&gt;: Construct an identity matrix, or a batch of matrices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d6c3aab3d7180ef2120f3b8952643104b75ae2c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../fill&quot;&gt;&lt;code&gt;fill(...)&lt;/code&gt;&lt;/a&gt;: Creates a tensor filled with a scalar value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6eb1f0897c01f342265634205a45d1933aa6c0fc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../fingerprint&quot;&gt;&lt;code&gt;fingerprint(...)&lt;/code&gt;&lt;/a&gt;: Generates fingerprint values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af49147be784476279b851349d049bad56537b61" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../foldl&quot;&gt;&lt;code&gt;foldl(...)&lt;/code&gt;&lt;/a&gt;: foldl on the list of tensors unpacked from &lt;code&gt;elems&lt;/code&gt; on dimension 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6b15d801cbd0a13035b6b478b608e93eec8153d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../foldr&quot;&gt;&lt;code&gt;foldr(...)&lt;/code&gt;&lt;/a&gt;: foldr on the list of tensors unpacked from &lt;code&gt;elems&lt;/code&gt; on dimension 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c6b5972296bbd6070e5c13c63060af287b08303" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../forward_compatibility_horizon&quot;&gt;&lt;code&gt;forward_compatibility_horizon(...)&lt;/code&gt;&lt;/a&gt;: Context manager for testing forward compatibility of generated graphs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="194db47b78228fbb6b67ffbae5de70e255191b29" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../forward_compatible&quot;&gt;&lt;code&gt;forward_compatible(...)&lt;/code&gt;&lt;/a&gt;: Return true if the forward compatibility window has expired.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="020affb009f385cc5fa526aeb9205e574728d699" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../function&quot;&gt;&lt;code&gt;function(...)&lt;/code&gt;&lt;/a&gt;: Compiles a function into a callable TensorFlow graph.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11143ddebdf3a1e71b428ca0b48d01c9686fb43b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../function&quot;&gt;&lt;code&gt;tf.function&lt;/code&gt;&lt;/a&gt; does not hard-code device annotations from outside the function body, instead using the calling context's device. This means for example that exporting a model which runs on a GPU and serving it on a CPU will generally work, with some exceptions. &lt;a href=&quot;../device&quot;&gt;&lt;code&gt;tf.device&lt;/code&gt;&lt;/a&gt; annotations inside the body of the function will be hard-coded in the exported model; this type of annotation is discouraged. Device-specific operations, e.g. with &quot;cuDNN&quot; in the name or with device-specific layouts, may cause issues. Currently a &lt;code&gt;DistributionStrategy&lt;/code&gt; is another exception: active distribution strategies will cause device placements to be hard-coded in a function. Exporting a single-device computation and importing under a &lt;code&gt;DistributionStrategy&lt;/code&gt; is not currently supported, but may be in the future.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b8fc479d688f8df9545568eddf283503f45b53d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../gather&quot;&gt;&lt;code&gt;gather(...)&lt;/code&gt;&lt;/a&gt;: Gather slices from params axis &lt;code&gt;axis&lt;/code&gt; according to indices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ba4b195ee610ab9b2b14d7edfde4dfd9d625f25" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../gather_nd&quot;&gt;&lt;code&gt;gather_nd(...)&lt;/code&gt;&lt;/a&gt;: Gather slices from &lt;code&gt;params&lt;/code&gt; into a Tensor with shape specified by &lt;code&gt;indices&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7fb3219c483a99a4483d8c4a46d10684b8d54af" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../get_logger&quot;&gt;&lt;code&gt;get_logger(...)&lt;/code&gt;&lt;/a&gt;: Return TF logger instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f959a862999f4e5075caf38401d947c3ef69e288" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../get_static_value&quot;&gt;&lt;code&gt;get_static_value(...)&lt;/code&gt;&lt;/a&gt;: Returns the constant value of the given tensor, if efficiently calculable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c66ea4d36df5c8e9c79181495e45d4fec72732ab" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../grad_pass_through&quot;&gt;&lt;code&gt;grad_pass_through(...)&lt;/code&gt;&lt;/a&gt;: Creates a grad-pass-through op with the forward behavior provided in f.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddaf51403db2feb093a7f81d4e6547df66f3b4d7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../gradients&quot;&gt;&lt;code&gt;gradients(...)&lt;/code&gt;&lt;/a&gt;: Constructs symbolic derivatives of sum of &lt;code&gt;ys&lt;/code&gt; w.r.t. x in &lt;code&gt;xs&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55579bac08aa7359ad0367eb45fb4a5282ba6df0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../gradienttape&quot;&gt;&lt;code&gt;class GradientTape&lt;/code&gt;&lt;/a&gt;: Record operations for automatic differentiation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06d7287e5827004c7de05885139a6d331e246043" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../graph&quot;&gt;&lt;code&gt;class Graph&lt;/code&gt;&lt;/a&gt;: A TensorFlow computation, represented as a dataflow graph.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c04025fafd6d32c3866d2a016d9c39d0caf7b76" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../graph_util/import_graph_def&quot;&gt;&lt;code&gt;import_graph_def(...)&lt;/code&gt;&lt;/a&gt;: Imports the graph from &lt;code&gt;graph_def&lt;/code&gt; into the current default &lt;code&gt;Graph&lt;/code&gt;. (deprecated arguments)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a155b2389b7937c655dc4f531ad62d47b9c4bab9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../group&quot;&gt;&lt;code&gt;group(...)&lt;/code&gt;&lt;/a&gt;: Create an op that groups multiple operations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c31b46a869c4e1c983a61d60bd394d826d997d64" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../guarantee_const&quot;&gt;&lt;code&gt;guarantee_const(...)&lt;/code&gt;&lt;/a&gt;: Gives a guarantee to the TF runtime that the input tensor is a constant.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8341835e052aae0a5852c45b2858c7936d1c215f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../hessians&quot;&gt;&lt;code&gt;hessians(...)&lt;/code&gt;&lt;/a&gt;: Constructs the Hessian of sum of &lt;code&gt;ys&lt;/code&gt; with respect to &lt;code&gt;x&lt;/code&gt; in &lt;code&gt;xs&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4142d07e226f873baa108e8f38eb4a18be172a60" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../histogram_fixed_width&quot;&gt;&lt;code&gt;histogram_fixed_width(...)&lt;/code&gt;&lt;/a&gt;: Return histogram of values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dcb9623c0824bdd92f5ee21cbebb0261a16838b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../histogram_fixed_width_bins&quot;&gt;&lt;code&gt;histogram_fixed_width_bins(...)&lt;/code&gt;&lt;/a&gt;: Bins the given values for use in a histogram.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30a83c865fa2a83deb72b2f737c6aff3fdc5a145" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../identity&quot;&gt;&lt;code&gt;identity(...)&lt;/code&gt;&lt;/a&gt;: Return a tensor with the same shape and contents as input.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="391e5c0107dbc7112a89fc75a2aca650b798b387" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../identity_n&quot;&gt;&lt;code&gt;identity_n(...)&lt;/code&gt;&lt;/a&gt;: Returns a list of tensors with the same shapes and contents as the input</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e14fd37fd1eef70a703b3321131db3f44ccb9c2b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../image/random_crop&quot;&gt;&lt;code&gt;random_crop(...)&lt;/code&gt;&lt;/a&gt;: Randomly crops a tensor to a given size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93dbcc39ff937c19698247aaa22d5994568f3d2c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../indexedslices&quot;&gt;&lt;code&gt;class IndexedSlices&lt;/code&gt;&lt;/a&gt;: A sparse representation of a set of tensor slices at given indices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="323d5d47afa4a37b6e1bd52e3294a1296aeb4d00" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../indexedslicesspec&quot;&gt;&lt;code&gt;class IndexedSlicesSpec&lt;/code&gt;&lt;/a&gt;: Type specification for a &lt;a href=&quot;../indexedslices&quot;&gt;&lt;code&gt;tf.IndexedSlices&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="362f1bcf54c54ddc3d5d4fad70f1d38e08d0630f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../init_scope&quot;&gt;&lt;code&gt;init_scope(...)&lt;/code&gt;&lt;/a&gt;: A context manager that lifts ops out of control-flow scopes and function-building graphs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f12db000d0ca0d4bc8c098e58753d1a6a4b14560" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../io/decode_base64&quot;&gt;&lt;code&gt;decode_base64(...)&lt;/code&gt;&lt;/a&gt;: Decode web-safe base64-encoded strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1ef1d29af7bdbb525da86180ff0a4ef77274ac6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../io/decode_compressed&quot;&gt;&lt;code&gt;decode_compressed(...)&lt;/code&gt;&lt;/a&gt;: Decompress strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edfe86acb25c40148457b3394b88af66a6f87a03" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../io/decode_json_example&quot;&gt;&lt;code&gt;decode_json_example(...)&lt;/code&gt;&lt;/a&gt;: Convert JSON-encoded Example records to binary protocol buffer strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e204472a08171415e69c494e0a47268033911b4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../io/deserialize_many_sparse&quot;&gt;&lt;code&gt;deserialize_many_sparse(...)&lt;/code&gt;&lt;/a&gt;: Deserialize and concatenate &lt;code&gt;SparseTensors&lt;/code&gt; from a serialized minibatch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b9ac5eb709ab193f5e893ab05dabed91f2f6d55" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../io/encode_base64&quot;&gt;&lt;code&gt;encode_base64(...)&lt;/code&gt;&lt;/a&gt;: Encode strings into web-safe base64 format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9842d2357b17287ee70e477b19f71b38f3c37055" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../io/fixedlenfeature&quot;&gt;&lt;code&gt;class FixedLenFeature&lt;/code&gt;&lt;/a&gt;: Configuration for parsing a fixed-length input feature.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec71a087bf509ddfe479fff0121384191b51ddc3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../io/fixedlensequencefeature&quot;&gt;&lt;code&gt;class FixedLenSequenceFeature&lt;/code&gt;&lt;/a&gt;: Configuration for parsing a variable-length input feature into a &lt;code&gt;Tensor&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50eb59ba82ff62736481cdb02adf072da1bc92b9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../io/matching_files&quot;&gt;&lt;code&gt;matching_files(...)&lt;/code&gt;&lt;/a&gt;: Returns the set of files matching one or more glob patterns.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb956720b1537bf7693e1b3ee562b23538ce8c18" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../io/parse_single_sequence_example&quot;&gt;&lt;code&gt;parse_single_sequence_example(...)&lt;/code&gt;&lt;/a&gt;: Parses a single &lt;code&gt;SequenceExample&lt;/code&gt; proto.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bebbc48cc908e89361504d0114b4ae60d8c98ccb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../io/parse_tensor&quot;&gt;&lt;code&gt;parse_tensor(...)&lt;/code&gt;&lt;/a&gt;: Transforms a serialized tensorflow.TensorProto proto into a Tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a3d0d5135d473af94c854f05b5091aab04d77fb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../io/read_file&quot;&gt;&lt;code&gt;read_file(...)&lt;/code&gt;&lt;/a&gt;: Reads and outputs the entire contents of the input filename.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47b4d476d2a929fb1490c04f258fce964933b615" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../io/serialize_tensor&quot;&gt;&lt;code&gt;serialize_tensor(...)&lt;/code&gt;&lt;/a&gt;: Transforms a Tensor into a serialized TensorProto proto.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2dc5ea8906e4963192ce03f36de572b0e366dae" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../io/sparsefeature&quot;&gt;&lt;code&gt;class SparseFeature&lt;/code&gt;&lt;/a&gt;: Configuration for parsing a sparse input feature from an &lt;code&gt;Example&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e87488fc48eb10b9589267dc68255ffc28b978db" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../io/varlenfeature&quot;&gt;&lt;code&gt;class VarLenFeature&lt;/code&gt;&lt;/a&gt;: Configuration for parsing a variable-length input feature.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a83a0469d0fd143d8ae6e9217c3cf602b765a7cc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../io/write_file&quot;&gt;&lt;code&gt;write_file(...)&lt;/code&gt;&lt;/a&gt;: Writes contents to the file at input filename. Creates file and recursively</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="935f8afc25acafc370a17811d1ad20b9fba16739" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../is_tensor&quot;&gt;&lt;code&gt;is_tensor(...)&lt;/code&gt;&lt;/a&gt;: Checks whether &lt;code&gt;x&lt;/code&gt; is a tensor or &quot;tensor-like&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0531488b32ea051d31eff88254f1e41d807ff031" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../keras/model&quot;&gt;&lt;code&gt;tf.keras.Model&lt;/code&gt;&lt;/a&gt; instances constructed from inputs and outputs already have a signature and so do not require a &lt;code&gt;@tf.function&lt;/code&gt; decorator or a &lt;code&gt;signatures&lt;/code&gt; argument. If neither are specified, the model's forward pass is exported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="211f2003386bdb20cbb608489ebc307bacbe105a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../linalg/band_part&quot;&gt;&lt;code&gt;matrix_band_part(...)&lt;/code&gt;&lt;/a&gt;: Copy a tensor setting everything outside a central band in each innermost matrix</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bc1ad29a59dd8a254bde7e119755f2a0531f87e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../linalg/cholesky&quot;&gt;&lt;code&gt;cholesky(...)&lt;/code&gt;&lt;/a&gt;: Computes the Cholesky decomposition of one or more square matrices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77f2a59dea0ccbedeb407b303620cc7025e9f749" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../linalg/cholesky_solve&quot;&gt;&lt;code&gt;cholesky_solve(...)&lt;/code&gt;&lt;/a&gt;: Solves systems of linear eqns &lt;code&gt;A X = RHS&lt;/code&gt;, given Cholesky factorizations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd082a1421955a1ab70fb7e13ecdfc1e7d034a89" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../linalg/cross&quot;&gt;&lt;code&gt;cross(...)&lt;/code&gt;&lt;/a&gt;: Compute the pairwise cross product.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="853ab5661c1ebca5833d9ada83ddeb2c84d0e77d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../linalg/det&quot;&gt;&lt;code&gt;matrix_determinant(...)&lt;/code&gt;&lt;/a&gt;: Computes the determinant of one or more square matrices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3322a8f315f0c7f8fc89ba983d7578dee297eb01" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../linalg/diag&quot;&gt;&lt;code&gt;matrix_diag(...)&lt;/code&gt;&lt;/a&gt;: Returns a batched diagonal tensor with given batched diagonal values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="955810a88acce84e33bf55d679a2f6bb491dcf8a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../linalg/diag_part&quot;&gt;&lt;code&gt;matrix_diag_part(...)&lt;/code&gt;&lt;/a&gt;: Returns the batched diagonal part of a batched tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc4714358b7c02c550060207c4729bd7299fbff5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../linalg/eigh&quot;&gt;&lt;code&gt;self_adjoint_eig(...)&lt;/code&gt;&lt;/a&gt;: Computes the eigen decomposition of a batch of self-adjoint matrices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3764f1a75033b67b43b50ed6205455c8fc0ef2ab" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../linalg/eigvalsh&quot;&gt;&lt;code&gt;self_adjoint_eigvals(...)&lt;/code&gt;&lt;/a&gt;: Computes the eigenvalues of one or more self-adjoint matrices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94bffed27320c4d18d5fd8779e8f5b6fe07ae151" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../linalg/global_norm&quot;&gt;&lt;code&gt;global_norm(...)&lt;/code&gt;&lt;/a&gt;: Computes the global norm of multiple tensors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52f74e5ed7b982a4c6e0d987c30dadbbb6e849ee" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../linalg/inv&quot;&gt;&lt;code&gt;matrix_inverse(...)&lt;/code&gt;&lt;/a&gt;: Computes the inverse of one or more square invertible matrices or their</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6da153c3922d747cb139489093c67b0e6b14c3d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../linalg/lstsq&quot;&gt;&lt;code&gt;matrix_solve_ls(...)&lt;/code&gt;&lt;/a&gt;: Solves one or more linear least-squares problems.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd8ecec70d14135e7a6a263de6dbe93d06a065e0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../linalg/matmul&quot;&gt;&lt;code&gt;matmul(...)&lt;/code&gt;&lt;/a&gt;: Multiplies matrix &lt;code&gt;a&lt;/code&gt; by matrix &lt;code&gt;b&lt;/code&gt;, producing &lt;code&gt;a&lt;/code&gt; * &lt;code&gt;b&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="528ea2e233a44a8c7b43930547737963f443d7fe" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../linalg/matrix_transpose&quot;&gt;&lt;code&gt;matrix_transpose(...)&lt;/code&gt;&lt;/a&gt;: Transposes last two dimensions of tensor &lt;code&gt;a&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="898527dd1c9d8511a8e4563716e593852f5faae7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../linalg/qr&quot;&gt;&lt;code&gt;qr(...)&lt;/code&gt;&lt;/a&gt;: Computes the QR decompositions of one or more matrices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e49b5480bb4ab96ad3248cc5a89fa23a259b07e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../linalg/set_diag&quot;&gt;&lt;code&gt;matrix_set_diag(...)&lt;/code&gt;&lt;/a&gt;: Returns a batched matrix tensor with new batched diagonal values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="caec455d8cf3ca56916dc3d830c5d4a6bca66839" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../linalg/solve&quot;&gt;&lt;code&gt;matrix_solve(...)&lt;/code&gt;&lt;/a&gt;: Solves systems of linear equations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e742c87db3217b8844a8139b8efc42a7d6b3d604" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../linalg/sqrtm&quot;&gt;&lt;code&gt;matrix_square_root(...)&lt;/code&gt;&lt;/a&gt;: Computes the matrix square root of one or more square matrices:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1491a8eb3a8c8773c8c67bdb7efe7d13a7a14d5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../linalg/svd&quot;&gt;&lt;code&gt;svd(...)&lt;/code&gt;&lt;/a&gt;: Computes the singular value decompositions of one or more matrices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f6d1c8271c529ae9b804789313a87873c875743" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../linalg/tensor_diag&quot;&gt;&lt;code&gt;diag(...)&lt;/code&gt;&lt;/a&gt;: Returns a diagonal tensor with a given diagonal values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f06aeff5116ae3ce9ececebdea977199da75ef15" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../linalg/tensor_diag_part&quot;&gt;&lt;code&gt;diag_part(...)&lt;/code&gt;&lt;/a&gt;: Returns the diagonal part of the tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3919b053fb1c07ecf6078807356bc50e8e419fa1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../linalg/trace&quot;&gt;&lt;code&gt;trace(...)&lt;/code&gt;&lt;/a&gt;: Compute the trace of a tensor &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95142dd584e80c4e8d3d5123769acc972446bf88" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../linalg/triangular_solve&quot;&gt;&lt;code&gt;matrix_triangular_solve(...)&lt;/code&gt;&lt;/a&gt;: Solves systems of linear equations with upper or lower triangular matrices by backsubstitution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3352778a13d9dbc12fd7b210f02f12042a7de43e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../linspace&quot;&gt;&lt;code&gt;lin_space(...)&lt;/code&gt;&lt;/a&gt;: Generates values in an interval.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e46cd6735da2554a1ca59df066a7eb6bbb4ecc4d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../linspace&quot;&gt;&lt;code&gt;linspace(...)&lt;/code&gt;&lt;/a&gt;: Generates values in an interval.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3fea69cb80e0d408554a42dfdf576fec5c6cb4b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../load_library&quot;&gt;&lt;code&gt;load_library(...)&lt;/code&gt;&lt;/a&gt;: Loads a TensorFlow plugin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="737aabb475186eb234b2ed007c0283391c8898b4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../load_op_library&quot;&gt;&lt;code&gt;load_op_library(...)&lt;/code&gt;&lt;/a&gt;: Loads a TensorFlow plugin, containing custom ops and kernels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0635a7d54f845c9e360c54337fee96b02cb4ad94" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../make_ndarray&quot;&gt;&lt;code&gt;make_ndarray(...)&lt;/code&gt;&lt;/a&gt;: Create a numpy ndarray from a tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9447cd77dfbd3f05e02dcc06aaebc100f7d08418" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../make_tensor_proto&quot;&gt;&lt;code&gt;make_tensor_proto(...)&lt;/code&gt;&lt;/a&gt;: Create a TensorProto.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5175cad05156a9e26bf52530f0e12341879120c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../map_fn&quot;&gt;&lt;code&gt;map_fn(...)&lt;/code&gt;&lt;/a&gt;: map on the list of tensors unpacked from &lt;code&gt;elems&lt;/code&gt; on dimension 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="311db3ee9b898504c067a978472e1cf812f4b032" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../math/abs&quot;&gt;&lt;code&gt;abs(...)&lt;/code&gt;&lt;/a&gt;: Computes the absolute value of a tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df1df32b72cfa9976e4ee04d52566b077f9efcb0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../math/accumulate_n&quot;&gt;&lt;code&gt;accumulate_n(...)&lt;/code&gt;&lt;/a&gt;: Returns the element-wise sum of a list of tensors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="085ee119240c96992c5f3eaa6672831e3bd05a2b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../math/acos&quot;&gt;&lt;code&gt;acos(...)&lt;/code&gt;&lt;/a&gt;: Computes acos of x element-wise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab0d3114f0934a0e8948871e9e420ac326a3823c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../math/acosh&quot;&gt;&lt;code&gt;acosh(...)&lt;/code&gt;&lt;/a&gt;: Computes inverse hyperbolic cosine of x element-wise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b60451bc71f0059d125aa5eff817a526c67e208" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../math/add&quot;&gt;&lt;code&gt;add(...)&lt;/code&gt;&lt;/a&gt;: Returns x + y element-wise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25ca1d44bfa6d1d75aac5cc4570cb3927e1ccdf1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../math/add_n&quot;&gt;&lt;code&gt;add_n(...)&lt;/code&gt;&lt;/a&gt;: Adds all input tensors element-wise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d03d7031d4832dda39291ef5d20541f9972b63b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../math/angle&quot;&gt;&lt;code&gt;angle(...)&lt;/code&gt;&lt;/a&gt;: Returns the element-wise argument of a complex (or real) tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0de7a209c9b1720ac4d2187f53028d70aaaad68a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../math/argmax&quot;&gt;&lt;code&gt;argmax(...)&lt;/code&gt;&lt;/a&gt;: Returns the index with the largest value across axes of a tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25182468375caabb0708ed38484643af91d51e70" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../math/argmin&quot;&gt;&lt;code&gt;argmin(...)&lt;/code&gt;&lt;/a&gt;: Returns the index with the smallest value across axes of a tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b4dece1a768f66074701124b8c7d1ac2772db59" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../math/asin&quot;&gt;&lt;code&gt;asin(...)&lt;/code&gt;&lt;/a&gt;: Computes the trignometric inverse sine of x element-wise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35fc2aa1b9eb4181aafa084b033cb9e305d06aec" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../math/asinh&quot;&gt;&lt;code&gt;asinh(...)&lt;/code&gt;&lt;/a&gt;: Computes inverse hyperbolic sine of x element-wise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe00c0f31e621c63f5d7dbc05d5a256fb1969585" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../math/atan&quot;&gt;&lt;code&gt;atan(...)&lt;/code&gt;&lt;/a&gt;: Computes the trignometric inverse tangent of x element-wise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="472231b800cab4beabab06deeac251015e9c4eb9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../math/atan2&quot;&gt;&lt;code&gt;atan2(...)&lt;/code&gt;&lt;/a&gt;: Computes arctangent of &lt;code&gt;y/x&lt;/code&gt; element-wise, respecting signs of the arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a700e5611ccd82ad527a6ad2bf56a7e682469a9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../math/atanh&quot;&gt;&lt;code&gt;atanh(...)&lt;/code&gt;&lt;/a&gt;: Computes inverse hyperbolic tangent of x element-wise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="952566203308ff5911d4038be5b9bae0d4de8914" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../math/betainc&quot;&gt;&lt;code&gt;betainc(...)&lt;/code&gt;&lt;/a&gt;: Compute the regularized incomplete beta integral \(I_x(a, b)\).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3bdda73be911a3f05026bf05cc0dde8be5d6a9b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../math/ceil&quot;&gt;&lt;code&gt;ceil(...)&lt;/code&gt;&lt;/a&gt;: Returns element-wise smallest integer not less than x.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5887bd1a45392e56a15b2ba8293cb0f57130e360" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../math/conj&quot;&gt;&lt;code&gt;conj(...)&lt;/code&gt;&lt;/a&gt;: Returns the complex conjugate of a complex number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8c8270cd1f2b1c945f2d5ad2fdb1f3dc4e63b5d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../math/cos&quot;&gt;&lt;code&gt;cos(...)&lt;/code&gt;&lt;/a&gt;: Computes cos of x element-wise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be9e9ed72ea27a08e7c4e3786b13f39e6de82884" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../math/cosh&quot;&gt;&lt;code&gt;cosh(...)&lt;/code&gt;&lt;/a&gt;: Computes hyperbolic cosine of x element-wise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30090180bdb5d109aed22fce08c5fef302a35b05" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../math/cumprod&quot;&gt;&lt;code&gt;cumprod(...)&lt;/code&gt;&lt;/a&gt;: Compute the cumulative product of the tensor &lt;code&gt;x&lt;/code&gt; along &lt;code&gt;axis&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="147ef21c61d051218f08dffa4b71d13ac2c5a79f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../math/cumsum&quot;&gt;&lt;code&gt;cumsum(...)&lt;/code&gt;&lt;/a&gt;: Compute the cumulative sum of the tensor &lt;code&gt;x&lt;/code&gt; along &lt;code&gt;axis&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c75b44d1c3d36918d593ee72b77986943b1f70b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../math/digamma&quot;&gt;&lt;code&gt;digamma(...)&lt;/code&gt;&lt;/a&gt;: Computes Psi, the derivative of Lgamma (the log of the absolute value of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73730b4b05b877d71e355de374d2fba997ed1dec" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../math/divide&quot;&gt;&lt;code&gt;divide(...)&lt;/code&gt;&lt;/a&gt;: Computes Python style division of &lt;code&gt;x&lt;/code&gt; by &lt;code&gt;y&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75b7cbdc0430b701ad257c662dbf07bf59de9338" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../math/divide_no_nan&quot;&gt;&lt;code&gt;div_no_nan(...)&lt;/code&gt;&lt;/a&gt;: Computes a safe divide which returns 0 if the y is zero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5e5286f720d99a9c20e7efa9f0b01ebfc2d6aba" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../math/equal&quot;&gt;&lt;code&gt;equal(...)&lt;/code&gt;&lt;/a&gt;: Returns the truth value of (x == y) element-wise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4b30f4c2231ad4b63b46ac8c18e25a66d4380aa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../math/erf&quot;&gt;&lt;code&gt;erf(...)&lt;/code&gt;&lt;/a&gt;: Computes the Gauss error function of &lt;code&gt;x&lt;/code&gt; element-wise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ac644d342fd5a028a5c7347be78927a5cbbabe8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../math/erfc&quot;&gt;&lt;code&gt;erfc(...)&lt;/code&gt;&lt;/a&gt;: Computes the complementary error function of &lt;code&gt;x&lt;/code&gt; element-wise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cc7e172d0cacd6e223e454cd457e8617df3e0a6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../math/exp&quot;&gt;&lt;code&gt;exp(...)&lt;/code&gt;&lt;/a&gt;: Computes exponential of x element-wise. \(y = e^x\).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2203830cfb174487c06ab7bc4720253b5324dd72" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../math/expm1&quot;&gt;&lt;code&gt;expm1(...)&lt;/code&gt;&lt;/a&gt;: Computes &lt;code&gt;exp(x) - 1&lt;/code&gt; element-wise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d07d82c7fca9e98c99d9beb6f1da42e51ddae5f1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../math/floor&quot;&gt;&lt;code&gt;floor(...)&lt;/code&gt;&lt;/a&gt;: Returns element-wise largest integer not greater than x.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ec88108fa0ad3c05e53bcfa58068c5c6160ab54" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../math/floordiv&quot;&gt;&lt;code&gt;floordiv(...)&lt;/code&gt;&lt;/a&gt;: Divides &lt;code&gt;x / y&lt;/code&gt; elementwise, rounding toward the most negative integer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="184932cbf6dd309f059b0ea5efac06e2757fb030" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../math/floormod&quot;&gt;&lt;code&gt;floormod(...)&lt;/code&gt;&lt;/a&gt;: Returns element-wise remainder of division. When &lt;code&gt;x &amp;lt; 0&lt;/code&gt; xor &lt;code&gt;y &amp;lt; 0&lt;/code&gt; is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c0ed0ab57f0ebb99fd500856081e94fd7f6835a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../math/floormod&quot;&gt;&lt;code&gt;mod(...)&lt;/code&gt;&lt;/a&gt;: Returns element-wise remainder of division. When &lt;code&gt;x &amp;lt; 0&lt;/code&gt; xor &lt;code&gt;y &amp;lt; 0&lt;/code&gt; is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12517fe180e450267bc9a1d0bc1607d9b4963cff" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../math/greater&quot;&gt;&lt;code&gt;greater(...)&lt;/code&gt;&lt;/a&gt;: Returns the truth value of (x &amp;gt; y) element-wise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f62225234c1506bba141c1d05d68726c1103d36" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../math/greater_equal&quot;&gt;&lt;code&gt;greater_equal(...)&lt;/code&gt;&lt;/a&gt;: Returns the truth value of (x &amp;gt;= y) element-wise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a69586b1101cda243146156e23641af9b84c6ce" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../math/igamma&quot;&gt;&lt;code&gt;igamma(...)&lt;/code&gt;&lt;/a&gt;: Compute the lower regularized incomplete Gamma function &lt;code&gt;P(a, x)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d4b838fdb93ff3b5491dc69e400fcdd99df9ad2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../math/igammac&quot;&gt;&lt;code&gt;igammac(...)&lt;/code&gt;&lt;/a&gt;: Compute the upper regularized incomplete Gamma function &lt;code&gt;Q(a, x)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b99827853ccf314fee694a0a2cbe5b3aef38434a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../math/imag&quot;&gt;&lt;code&gt;imag(...)&lt;/code&gt;&lt;/a&gt;: Returns the imaginary part of a complex (or real) tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="514344c5026c08b6495a01e1d75327e09363c15e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../math/invert_permutation&quot;&gt;&lt;code&gt;invert_permutation(...)&lt;/code&gt;&lt;/a&gt;: Computes the inverse permutation of a tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d4f24c5a4b3ef4c596a4eccbb4ff8fd8f2f89b7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../math/is_finite&quot;&gt;&lt;code&gt;is_finite(...)&lt;/code&gt;&lt;/a&gt;: Returns which elements of x are finite.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcba744627228d67cd0aef2c06890a24d8d8c8ed" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../math/is_inf&quot;&gt;&lt;code&gt;is_inf(...)&lt;/code&gt;&lt;/a&gt;: Returns which elements of x are Inf.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72068100e0d29027e04dee93b098840bdfa7ebac" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../math/is_nan&quot;&gt;&lt;code&gt;is_nan(...)&lt;/code&gt;&lt;/a&gt;: Returns which elements of x are NaN.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b98e3fe0d790ed4805ffab5cfed87da4bce0177" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../math/is_non_decreasing&quot;&gt;&lt;code&gt;is_non_decreasing(...)&lt;/code&gt;&lt;/a&gt;: Returns &lt;code&gt;True&lt;/code&gt; if &lt;code&gt;x&lt;/code&gt; is non-decreasing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edd6f751a6ba73b46990d22df7c973f18cdfc2fa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../math/is_strictly_increasing&quot;&gt;&lt;code&gt;is_strictly_increasing(...)&lt;/code&gt;&lt;/a&gt;: Returns &lt;code&gt;True&lt;/code&gt; if &lt;code&gt;x&lt;/code&gt; is strictly increasing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a31f1091b5af5a49fbbf052c94afb6eda2e0a95" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../math/lbeta&quot;&gt;&lt;code&gt;lbeta(...)&lt;/code&gt;&lt;/a&gt;: Computes \(ln(|Beta(x)|)\), reducing along the last dimension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1f4cc9a1276d898ddd47db1a6ebc9bc8596b5cf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../math/less&quot;&gt;&lt;code&gt;less(...)&lt;/code&gt;&lt;/a&gt;: Returns the truth value of (x &amp;lt; y) element-wise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f6a7f5780b16bb2b558c7baa576c3b26b2274b6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../math/less_equal&quot;&gt;&lt;code&gt;less_equal(...)&lt;/code&gt;&lt;/a&gt;: Returns the truth value of (x &amp;lt;= y) element-wise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d42b1e296b06117eca22b70d9a9a64dc062ffa69" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../math/lgamma&quot;&gt;&lt;code&gt;lgamma(...)&lt;/code&gt;&lt;/a&gt;: Computes the log of the absolute value of &lt;code&gt;Gamma(x)&lt;/code&gt; element-wise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d01dc2537bb82afceba49ae25e959ea9bdb38297" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../math/log&quot;&gt;&lt;code&gt;log(...)&lt;/code&gt;&lt;/a&gt;: Computes natural logarithm of x element-wise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdcc186f22f611ac6ec52ec924de75c0f64eaf13" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../math/log1p&quot;&gt;&lt;code&gt;log1p(...)&lt;/code&gt;&lt;/a&gt;: Computes natural logarithm of (1 + x) element-wise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcd80e2734d6dccfdcf604fc05dbd88c286dfb5e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../math/log_sigmoid&quot;&gt;&lt;code&gt;log_sigmoid(...)&lt;/code&gt;&lt;/a&gt;: Computes log sigmoid of &lt;code&gt;x&lt;/code&gt; element-wise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5717463032eb3bfc2aa929a200d1d83330e4a78e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../math/logical_and&quot;&gt;&lt;code&gt;logical_and(...)&lt;/code&gt;&lt;/a&gt;: Returns the truth value of x AND y element-wise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9793fd4b7f53222f4b4bf920cf8880b126cc72e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../math/logical_not&quot;&gt;&lt;code&gt;logical_not(...)&lt;/code&gt;&lt;/a&gt;: Returns the truth value of NOT x element-wise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48a052ef4f659fd0c07aeec219c7a4a81ff4f0b4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../math/logical_or&quot;&gt;&lt;code&gt;logical_or(...)&lt;/code&gt;&lt;/a&gt;: Returns the truth value of x OR y element-wise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95eb05a024960f473718ef8eb940c264da9610c9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../math/logical_xor&quot;&gt;&lt;code&gt;logical_xor(...)&lt;/code&gt;&lt;/a&gt;: Logical XOR function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76ef05b88b62739b5a83705c34db1f749b99b86b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../math/maximum&quot;&gt;&lt;code&gt;maximum(...)&lt;/code&gt;&lt;/a&gt;: Returns the max of x and y (i.e. x &amp;gt; y ? x : y) element-wise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b84ce9f702711ee7bd63baca72c44751b0f7bbd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../math/minimum&quot;&gt;&lt;code&gt;minimum(...)&lt;/code&gt;&lt;/a&gt;: Returns the min of x and y (i.e. x &amp;lt; y ? x : y) element-wise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48b37b6623d2da3eeb3fd0247edccd9ab931e3c5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../math/multiply&quot;&gt;&lt;code&gt;multiply(...)&lt;/code&gt;&lt;/a&gt;: Returns x * y element-wise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2ec49241bc4e64bd0e27b938ca61d409f4e39f6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../math/negative&quot;&gt;&lt;code&gt;negative(...)&lt;/code&gt;&lt;/a&gt;: Computes numerical negative value element-wise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d12df539df4b739f28308d73fd7285879f8cb608" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../math/not_equal&quot;&gt;&lt;code&gt;not_equal(...)&lt;/code&gt;&lt;/a&gt;: Returns the truth value of (x != y) element-wise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4b682f2d3b4fb1f93ae205182ff214afd60e85c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../math/polygamma&quot;&gt;&lt;code&gt;polygamma(...)&lt;/code&gt;&lt;/a&gt;: Compute the polygamma function \(\psi^{(n)}(x)\).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d03b66a4ad27285202b3ca634b2dd83cceb65845" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../math/pow&quot;&gt;&lt;code&gt;pow(...)&lt;/code&gt;&lt;/a&gt;: Computes the power of one value to another.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2a3952f02bbdbc09d68a3346a2be51aa533b004" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../math/real&quot;&gt;&lt;code&gt;real(...)&lt;/code&gt;&lt;/a&gt;: Returns the real part of a complex (or real) tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05c8651eb5cb48be7af59f14e8e8648bba4ea2e1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../math/reciprocal&quot;&gt;&lt;code&gt;reciprocal(...)&lt;/code&gt;&lt;/a&gt;: Computes the reciprocal of x element-wise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e310f432c223fb0f2cc956125fca364b9aebd7e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../math/reduce_any&quot;&gt;&lt;code&gt;reduce_any(...)&lt;/code&gt;&lt;/a&gt;: Computes the &quot;logical or&quot; of elements across dimensions of a tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="887083f1aaf3de03ab9d79beb79b294f8d6b0365" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../math/reduce_logsumexp&quot;&gt;&lt;code&gt;reduce_logsumexp(...)&lt;/code&gt;&lt;/a&gt;: Computes log(sum(exp(elements across dimensions of a tensor))).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8925f4d87c959cba59422cb394a6e4d1d9291c94" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../math/reduce_max&quot;&gt;&lt;code&gt;reduce_max(...)&lt;/code&gt;&lt;/a&gt;: Computes the maximum of elements across dimensions of a tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40504b23bfb6372b015dff6530b0beb90f206ed8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../math/reduce_mean&quot;&gt;&lt;code&gt;reduce_mean(...)&lt;/code&gt;&lt;/a&gt;: Computes the mean of elements across dimensions of a tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f3b8c7351de9853a2d83649a28f3d35e6140be1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../math/reduce_min&quot;&gt;&lt;code&gt;reduce_min(...)&lt;/code&gt;&lt;/a&gt;: Computes the minimum of elements across dimensions of a tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75dcfcec10adf239f151554631d868db777c5530" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../math/reduce_prod&quot;&gt;&lt;code&gt;reduce_prod(...)&lt;/code&gt;&lt;/a&gt;: Computes the product of elements across dimensions of a tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ce1bc508c8575736b2f953e3d52d3f21a485e26" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../math/reduce_sum&quot;&gt;&lt;code&gt;reduce_sum(...)&lt;/code&gt;&lt;/a&gt;: Computes the sum of elements across dimensions of a tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bae852b2c6e2e52620bf805a7aa7cdba21906f8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../math/rint&quot;&gt;&lt;code&gt;rint(...)&lt;/code&gt;&lt;/a&gt;: Returns element-wise integer closest to x.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f924caea5dd4fba35084de8daafabd1fcc0fd2ea" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../math/round&quot;&gt;&lt;code&gt;round(...)&lt;/code&gt;&lt;/a&gt;: Rounds the values of a tensor to the nearest integer, element-wise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1535ac5f567019b7848eb3b940eacea40468d4f3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../math/rsqrt&quot;&gt;&lt;code&gt;rsqrt(...)&lt;/code&gt;&lt;/a&gt;: Computes reciprocal of square root of x element-wise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fa91fc40ffd7710d0cf9297421b03f1013decbc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../math/scalar_mul&quot;&gt;&lt;code&gt;scalar_mul(...)&lt;/code&gt;&lt;/a&gt;: Multiplies a scalar times a &lt;code&gt;Tensor&lt;/code&gt; or &lt;code&gt;IndexedSlices&lt;/code&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23ddd7f921ba1bf3191a7830c8ab4b0d34bd74fb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../math/segment_max&quot;&gt;&lt;code&gt;segment_max(...)&lt;/code&gt;&lt;/a&gt;: Computes the maximum along segments of a tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="360e5cc6f704aa3b3a0cc4991793807eb2f236f8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../math/segment_mean&quot;&gt;&lt;code&gt;segment_mean(...)&lt;/code&gt;&lt;/a&gt;: Computes the mean along segments of a tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ed414534f17ca5d13d7d6346f8a53ee33b02c35" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../math/segment_min&quot;&gt;&lt;code&gt;segment_min(...)&lt;/code&gt;&lt;/a&gt;: Computes the minimum along segments of a tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3262dd64d72417cc2b2c642712a41947eb6bb7ca" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../math/segment_prod&quot;&gt;&lt;code&gt;segment_prod(...)&lt;/code&gt;&lt;/a&gt;: Computes the product along segments of a tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd726bcb8fd9952bb02abb9b1a3bca88ef9b3b59" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../math/segment_sum&quot;&gt;&lt;code&gt;segment_sum(...)&lt;/code&gt;&lt;/a&gt;: Computes the sum along segments of a tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a80ecf23e660fe68ed311a7f41770d15bcea68d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../math/sigmoid&quot;&gt;&lt;code&gt;sigmoid(...)&lt;/code&gt;&lt;/a&gt;: Computes sigmoid of &lt;code&gt;x&lt;/code&gt; element-wise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="190a7a02957b18720d50c738c38e77e1a077f4b7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../math/sign&quot;&gt;&lt;code&gt;sign(...)&lt;/code&gt;&lt;/a&gt;: Returns an element-wise indication of the sign of a number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43a62373b48080efe7534b56269308190fa27a99" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../math/sin&quot;&gt;&lt;code&gt;sin(...)&lt;/code&gt;&lt;/a&gt;: Computes sine of x element-wise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="667c5296d52506b1047925f973e429d844c27812" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../math/sinh&quot;&gt;&lt;code&gt;sinh(...)&lt;/code&gt;&lt;/a&gt;: Computes hyperbolic sine of x element-wise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ceca9f14387216461166da567c8062d5d40e1b2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../math/sqrt&quot;&gt;&lt;code&gt;sqrt(...)&lt;/code&gt;&lt;/a&gt;: Computes square root of x element-wise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3fec6eed52c9d9408c90cad313fbb36bc29ef7d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../math/square&quot;&gt;&lt;code&gt;square(...)&lt;/code&gt;&lt;/a&gt;: Computes square of x element-wise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf04b8e0afab9f96d19e5916b42d5977ae84d354" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../math/squared_difference&quot;&gt;&lt;code&gt;squared_difference(...)&lt;/code&gt;&lt;/a&gt;: Returns (x - y)(x - y) element-wise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dd0f2b9e616555848b386806fb11395cd41c4c4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../math/subtract&quot;&gt;&lt;code&gt;subtract(...)&lt;/code&gt;&lt;/a&gt;: Returns x - y element-wise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7c201b9d03eab94e834f7d0d238e241f025268a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../math/tan&quot;&gt;&lt;code&gt;tan(...)&lt;/code&gt;&lt;/a&gt;: Computes tan of x element-wise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6220b5a09f21a60a690142200e3f4dd5444433e1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../math/tanh&quot;&gt;&lt;code&gt;tanh(...)&lt;/code&gt;&lt;/a&gt;: Computes hyperbolic tangent of &lt;code&gt;x&lt;/code&gt; element-wise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="071e9d2a11fd10862c32d34c569c93ef81598f43" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../math/truediv&quot;&gt;&lt;code&gt;truediv(...)&lt;/code&gt;&lt;/a&gt;: Divides x / y elementwise (using Python 3 division operator semantics).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0e86e2e5b54ab44d43453b0219e6184ada6c251" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../math/unsorted_segment_max&quot;&gt;&lt;code&gt;unsorted_segment_max(...)&lt;/code&gt;&lt;/a&gt;: Computes the maximum along segments of a tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c43668b04fdacf391dd5b674c7a27ef2b009835" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../math/unsorted_segment_mean&quot;&gt;&lt;code&gt;unsorted_segment_mean(...)&lt;/code&gt;&lt;/a&gt;: Computes the mean along segments of a tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8ccdb8a5324e1c2e240f89ea76a1137dd4d346d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../math/unsorted_segment_min&quot;&gt;&lt;code&gt;unsorted_segment_min(...)&lt;/code&gt;&lt;/a&gt;: Computes the minimum along segments of a tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ce96c2a09391447e4e0ba8f2505984aa2d1e624" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../math/unsorted_segment_prod&quot;&gt;&lt;code&gt;unsorted_segment_prod(...)&lt;/code&gt;&lt;/a&gt;: Computes the product along segments of a tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdf9909cdf5eada7b028d9a88bab4864395ac2af" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../math/unsorted_segment_sqrt_n&quot;&gt;&lt;code&gt;unsorted_segment_sqrt_n(...)&lt;/code&gt;&lt;/a&gt;: Computes the sum along segments of a tensor divided by the sqrt(N).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b39e850dfacc4024badc90bd55a42a4810dd0f2f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../math/unsorted_segment_sum&quot;&gt;&lt;code&gt;unsorted_segment_sum(...)&lt;/code&gt;&lt;/a&gt;: Computes the sum along segments of a tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dde6b678a32fa10220a230225ce35f168d77f2e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../math/zeta&quot;&gt;&lt;code&gt;zeta(...)&lt;/code&gt;&lt;/a&gt;: Compute the Hurwitz zeta function \(\zeta(x, q)\).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd46d53b4bf81d6dcf4062158f8244759d5bb6e7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../meshgrid&quot;&gt;&lt;code&gt;meshgrid(...)&lt;/code&gt;&lt;/a&gt;: Broadcasts parameters for evaluation on an N-D grid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="813abd322e224a49a2378cd933613a4083285612" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../mixed_precision/experimental/dynamiclossscale&quot;&gt;&lt;code&gt;class DynamicLossScale&lt;/code&gt;&lt;/a&gt;: Loss scale that dynamically adjusts itself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab9ecd7e9033f43851bf19dd7aaac9f061aeb1b8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../mixed_precision/experimental/fixedlossscale&quot;&gt;&lt;code&gt;class FixedLossScale&lt;/code&gt;&lt;/a&gt;: Loss scale with a fixed value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42c1155e2aed70e35f19ba20bec72fead9276a33" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../mixed_precision/experimental/lossscale&quot;&gt;&lt;code&gt;class LossScale&lt;/code&gt;&lt;/a&gt;: Loss scale base class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07a519d0863fcde5579560c141c69e94c46a0ef7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../model#evaluate&quot;&gt;&lt;code&gt;Model.evaluate&lt;/code&gt;&lt;/a&gt; now supports generators, so there is no longer any need to use this endpoint.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78f46b043c7a4d404c9d8cd9f071f065a67d0787" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../model#fit&quot;&gt;&lt;code&gt;Model.fit&lt;/code&gt;&lt;/a&gt; now supports generators, so there is no longer any need to use this endpoint.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2806b06ce962188cd0bdc439c68385ba0adce378" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../model#predict&quot;&gt;&lt;code&gt;Model.predict&lt;/code&gt;&lt;/a&gt; now supports generators, so there is no longer any need to use this endpoint.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="effc963f67ce0159cf687283ec03acf4dece5f61" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../module&quot;&gt;&lt;code&gt;class Module&lt;/code&gt;&lt;/a&gt;: Base neural network module class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f852f8c60f17f65a9fe9661d02702857b356d051" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../name_scope&quot;&gt;&lt;code&gt;class name_scope&lt;/code&gt;&lt;/a&gt;: A context manager for use when defining a Python op.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="812b56ba699d55b47ee8fe850af6e54f4d0024a5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../no_gradient&quot;&gt;&lt;code&gt;NoGradient(...)&lt;/code&gt;&lt;/a&gt;: Specifies that ops of type &lt;code&gt;op_type&lt;/code&gt; is not differentiable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c964ad3aba5769081651e605647c31da6b2f52b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../no_gradient&quot;&gt;&lt;code&gt;NotDifferentiable(...)&lt;/code&gt;&lt;/a&gt;: Specifies that ops of type &lt;code&gt;op_type&lt;/code&gt; is not differentiable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f22f56fe2b860d6fc130d9443863948b8c6da55d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../no_gradient&quot;&gt;&lt;code&gt;no_gradient(...)&lt;/code&gt;&lt;/a&gt;: Specifies that ops of type &lt;code&gt;op_type&lt;/code&gt; is not differentiable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d61eeddcb24de7f1a77cb0b84c2243d808c932dc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../no_op&quot;&gt;&lt;code&gt;no_op(...)&lt;/code&gt;&lt;/a&gt;: Does nothing. Only useful as a placeholder for control edges.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e20a3425d5b5e5f84b28f2c3f2f8600ec2460787" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../nondifferentiable_batch_function&quot;&gt;&lt;code&gt;nondifferentiable_batch_function(...)&lt;/code&gt;&lt;/a&gt;: Batches the computation done by the decorated function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1681e4b26dd7c219073c8e7d18d6dc4c0f3a7d5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../norm&quot;&gt;&lt;code&gt;norm(...)&lt;/code&gt;&lt;/a&gt;: Computes the norm of vectors, matrices, and tensors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="322f82ab41e219665956222a918c2ce8914746bf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../numpy_function&quot;&gt;&lt;code&gt;numpy_function(...)&lt;/code&gt;&lt;/a&gt;: Wraps a python function and uses it as a TensorFlow op.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65033a2be9a9b60b2ce5a57303a5b2a7b938d37c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../one_hot&quot;&gt;&lt;code&gt;one_hot(...)&lt;/code&gt;&lt;/a&gt;: Returns a one-hot tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="252393926c7571fe00d22cba000ff5e17c43034e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../ones&quot;&gt;&lt;code&gt;ones(...)&lt;/code&gt;&lt;/a&gt;: Creates a tensor with all elements set to one (1).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e896ca5abe0ab7ff4ea66d2f48065f6e27161026" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../ones_initializer&quot;&gt;&lt;code&gt;class Ones&lt;/code&gt;&lt;/a&gt;: Initializer that generates tensors initialized to 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cbf332d9cadcf9c82f9809f8345b466e0ce4425" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../ones_initializer&quot;&gt;&lt;code&gt;class ones&lt;/code&gt;&lt;/a&gt;: Initializer that generates tensors initialized to 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3530f10d7d17ccbe962093c5b90a1f14f24a3ece" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../ones_initializer&quot;&gt;&lt;code&gt;class ones_initializer&lt;/code&gt;&lt;/a&gt;: Initializer that generates tensors initialized to 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="927796550c688cca9f51bb1e9541084e06c1d199" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../ones_like&quot;&gt;&lt;code&gt;ones_like(...)&lt;/code&gt;&lt;/a&gt;: Creates a tensor with all elements set to one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59e73bfea1d3945f76a86dcb91837bdb93185c9f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../operation&quot;&gt;&lt;code&gt;class Operation&lt;/code&gt;&lt;/a&gt;: Represents a graph node that performs computation on tensors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dd6ad49676d3a14b6aa82b976ff02cebb7dd736" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../optionalspec&quot;&gt;&lt;code&gt;class OptionalSpec&lt;/code&gt;&lt;/a&gt;: Represents an optional potentially containing a structured value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e0adeb92b56b0ddec3cd645c926038d6e4e1591" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../pad&quot;&gt;&lt;code&gt;pad(...)&lt;/code&gt;&lt;/a&gt;: Pads a tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfcd69e1c9695bfe128bb67f3a640c2e01bd1809" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../parallel_stack&quot;&gt;&lt;code&gt;parallel_stack(...)&lt;/code&gt;&lt;/a&gt;: Stacks a list of rank-&lt;code&gt;R&lt;/code&gt; tensors into one rank-&lt;code&gt;(R+1)&lt;/code&gt; tensor in parallel.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="965855b9ab97e5a9ddc9806599ef000989cc48a6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../path_to_str&quot;&gt;&lt;code&gt;path_to_str(...)&lt;/code&gt;&lt;/a&gt;: Converts input which is a &lt;code&gt;PathLike&lt;/code&gt; object to &lt;code&gt;str&lt;/code&gt; type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0baa8f699a9641c7b1db279836d618a0d41f9077" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../print&quot;&gt;&lt;code&gt;print(...)&lt;/code&gt;&lt;/a&gt;: Print the specified inputs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20a3e7d75d7742bf188549b8f34b82003c1f9b64" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../py_function&quot;&gt;&lt;code&gt;py_function(...)&lt;/code&gt;&lt;/a&gt;: Wraps a python function into a TensorFlow op that executes it eagerly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ed946cc7e86f73d8540737e0d7957236d40dd0f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../quantization/dequantize&quot;&gt;&lt;code&gt;dequantize(...)&lt;/code&gt;&lt;/a&gt;: Dequantize the 'input' tensor into a float Tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf08ba8e2a6b30efe0bdb676011bd1fc50a144db" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../quantization/fake_quant_with_min_max_args&quot;&gt;&lt;code&gt;fake_quant_with_min_max_args(...)&lt;/code&gt;&lt;/a&gt;: Fake-quantize the 'inputs' tensor, type float to 'outputs' tensor of same type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d4e458850788480e96429afdb2b869795a2c2e8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../quantization/fake_quant_with_min_max_args_gradient&quot;&gt;&lt;code&gt;fake_quant_with_min_max_args_gradient(...)&lt;/code&gt;&lt;/a&gt;: Compute gradients for a FakeQuantWithMinMaxArgs operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44d39aaf292c5db77f2df47a1c3316eeae2b9c8b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../quantization/fake_quant_with_min_max_vars&quot;&gt;&lt;code&gt;fake_quant_with_min_max_vars(...)&lt;/code&gt;&lt;/a&gt;: Fake-quantize the 'inputs' tensor of type float via global float scalars &lt;code&gt;min&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="416669c5272854899c2e2bbb2c971fb728316937" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../quantization/fake_quant_with_min_max_vars_gradient&quot;&gt;&lt;code&gt;fake_quant_with_min_max_vars_gradient(...)&lt;/code&gt;&lt;/a&gt;: Compute gradients for a FakeQuantWithMinMaxVars operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f391b7a50a8b30285074a34f0be9f705d7a5011b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../quantization/fake_quant_with_min_max_vars_per_channel&quot;&gt;&lt;code&gt;fake_quant_with_min_max_vars_per_channel(...)&lt;/code&gt;&lt;/a&gt;: Fake-quantize the 'inputs' tensor of type float and one of the shapes: &lt;code&gt;[d]&lt;/code&gt;,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="718af0783c9c3d1daeeea58b54c8524c9e4b3636" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../quantization/fake_quant_with_min_max_vars_per_channel_gradient&quot;&gt;&lt;code&gt;fake_quant_with_min_max_vars_per_channel_gradient(...)&lt;/code&gt;&lt;/a&gt;: Compute gradients for a FakeQuantWithMinMaxVarsPerChannel operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d8556130d8288d64a1c046b608fb8003f5fc645" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../quantization/quantize&quot;&gt;&lt;code&gt;quantize(...)&lt;/code&gt;&lt;/a&gt;: Quantize the 'input' tensor of type float to 'output' tensor of type 'T'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="818c4a45f803cc721f45fd8244813b9b0ed8cd19" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../quantization/quantized_concat&quot;&gt;&lt;code&gt;quantized_concat(...)&lt;/code&gt;&lt;/a&gt;: Concatenates quantized tensors along one dimension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="242105ece797859e3ca3d80f17944fb8849d5f48" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../queue/fifoqueue&quot;&gt;&lt;code&gt;class FIFOQueue&lt;/code&gt;&lt;/a&gt;: A queue implementation that dequeues elements in first-in first-out order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75465d81cc81ede9c519b921f0c0ef78d88fd670" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../queue/paddingfifoqueue&quot;&gt;&lt;code&gt;class PaddingFIFOQueue&lt;/code&gt;&lt;/a&gt;: A FIFOQueue that supports batching variable-sized tensors by padding.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1302ca61c91fba53724cf666f4eec18eb23a8ae9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../queue/priorityqueue&quot;&gt;&lt;code&gt;class PriorityQueue&lt;/code&gt;&lt;/a&gt;: A queue implementation that dequeues elements in prioritized order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bef94c9fba89aa6156e7beb74b52aaa5659f7e7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../queue/queuebase&quot;&gt;&lt;code&gt;class QueueBase&lt;/code&gt;&lt;/a&gt;: Base class for queue implementations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed43c8f5a3649ec84bb0c1a7f10df12216f52337" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../queue/randomshufflequeue&quot;&gt;&lt;code&gt;class RandomShuffleQueue&lt;/code&gt;&lt;/a&gt;: A queue implementation that dequeues elements in a random order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f73fd5a02ff1c982296d3f73fda8c618631f823a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../raggedtensor&quot;&gt;&lt;code&gt;class RaggedTensor&lt;/code&gt;&lt;/a&gt;: Represents a ragged tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd0424297b2bf3ec84060813a1db539713eee2e4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../raggedtensor#__div__&quot;&gt;&lt;code&gt;div(...)&lt;/code&gt;&lt;/a&gt;: Divides x / y elementwise (using Python 2 division operator semantics). (deprecated)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99e6845cd8a245bf7fc4565877024cb5b58cafd1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../raggedtensorspec&quot;&gt;&lt;code&gt;class RaggedTensorSpec&lt;/code&gt;&lt;/a&gt;: Type specification for a &lt;a href=&quot;../raggedtensor&quot;&gt;&lt;code&gt;tf.RaggedTensor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="945a46cc78b7aceecfb52bc8cd671face981e9fc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../random/gamma&quot;&gt;&lt;code&gt;random_gamma(...)&lt;/code&gt;&lt;/a&gt;: Draws &lt;code&gt;shape&lt;/code&gt; samples from each of the given Gamma distribution(s).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ad605cabef0da9a34e0e44761dddd5643cce71f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../random/normal&quot;&gt;&lt;code&gt;random_normal(...)&lt;/code&gt;&lt;/a&gt;: Outputs random values from a normal distribution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a5f8ec3fd6f2f02b4439cf9e42dfc3bfd820a4c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../random/shuffle&quot;&gt;&lt;code&gt;random_shuffle(...)&lt;/code&gt;&lt;/a&gt;: Randomly shuffles a tensor along its first dimension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f11cb50a4e5669de3a171acefb582946c67882f0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../random/truncated_normal&quot;&gt;&lt;code&gt;truncated_normal(...)&lt;/code&gt;&lt;/a&gt;: Outputs random values from a truncated normal distribution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df3a764b39d82fbfbb4840a78afe19d1ba0786e5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../random/uniform&quot;&gt;&lt;code&gt;random_uniform(...)&lt;/code&gt;&lt;/a&gt;: Outputs random values from a uniform distribution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22e4f4964ab4698c148a72e6b1341fb6f06fd57c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../random_normal_initializer&quot;&gt;&lt;code&gt;class RandomNormal&lt;/code&gt;&lt;/a&gt;: Initializer that generates tensors with a normal distribution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dbd05c19b070e16ca491656c32efcf48a120afb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../random_normal_initializer&quot;&gt;&lt;code&gt;class random_normal_initializer&lt;/code&gt;&lt;/a&gt;: Initializer that generates tensors with a normal distribution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5d7c32df70043766ab160a2782a2fda7b3be80e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../random_uniform_initializer&quot;&gt;&lt;code&gt;class RandomUniform&lt;/code&gt;&lt;/a&gt;: Initializer that generates tensors with a uniform distribution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b672e010bf22186d3fc265942a7111da512417b0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../random_uniform_initializer&quot;&gt;&lt;code&gt;class random_uniform_initializer&lt;/code&gt;&lt;/a&gt;: Initializer that generates tensors with a uniform distribution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34bd8c7a2f00b5219e28a6117c8790b8c92a6c7b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../range&quot;&gt;&lt;code&gt;range(...)&lt;/code&gt;&lt;/a&gt;: Creates a sequence of numbers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2e52d8852412f1b5c5f90776ec3bb10373a3c04" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../rank&quot;&gt;&lt;code&gt;rank(...)&lt;/code&gt;&lt;/a&gt;: Returns the rank of a tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d138aa348054f0556c5dfb5d5a312035c7e4377" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../realdiv&quot;&gt;&lt;code&gt;realdiv(...)&lt;/code&gt;&lt;/a&gt;: Returns x / y element-wise for real types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f52ecbd5735c99c64decc6a8cbc67bb9fe7621a5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../recompute_grad&quot;&gt;&lt;code&gt;recompute_grad(...)&lt;/code&gt;&lt;/a&gt;: An eager-compatible version of recompute_grad.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28f3936550d587671edc09c7fdfd8fc14a65d6a7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../reduce_all&quot;&gt;&lt;code&gt;reduce_all(...)&lt;/code&gt;&lt;/a&gt;: Computes the &quot;logical and&quot; of elements across dimensions of a tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c945120d1b5f0cd6c35357bb5a1352e6cf6cdeda" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../register_tensor_conversion_function&quot;&gt;&lt;code&gt;register_tensor_conversion_function(...)&lt;/code&gt;&lt;/a&gt;: Registers a function for converting objects of &lt;code&gt;base_type&lt;/code&gt; to &lt;code&gt;Tensor&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d1c33cc149fd10873c6d0a43c4b1edc713f2051" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../registergradient&quot;&gt;&lt;code&gt;class RegisterGradient&lt;/code&gt;&lt;/a&gt;: A decorator for registering the gradient function for an op type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d0e2eff424cdacfc49dbd0ce00ea96564b91a07" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../repeat&quot;&gt;&lt;code&gt;repeat(...)&lt;/code&gt;&lt;/a&gt;: Repeat elements of &lt;code&gt;input&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61d1513d8ea59eb6621c679be1f48fb7cc8f8a2a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../required_space_to_batch_paddings&quot;&gt;&lt;code&gt;required_space_to_batch_paddings(...)&lt;/code&gt;&lt;/a&gt;: Calculate padding required to make block_shape divide input_shape.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3da8fea3fd2b6f4e47eb6ecdfac3552c94ca5980" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../reshape&quot;&gt;&lt;code&gt;reshape(...)&lt;/code&gt;&lt;/a&gt;: Reshapes a tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96d981a6e1e891a035c9d1609676d435092d2374" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../reverse&quot;&gt;&lt;code&gt;reverse(...)&lt;/code&gt;&lt;/a&gt;: Reverses specific dimensions of a tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e22cf80366f518a440469ebe58a4ffbfd5a4b797" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../reverse&quot;&gt;&lt;code&gt;reverse_v2(...)&lt;/code&gt;&lt;/a&gt;: Reverses specific dimensions of a tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0abdaee0aef8966ef8c183c585858d2419adc9a4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../reverse_sequence&quot;&gt;&lt;code&gt;reverse_sequence(...)&lt;/code&gt;&lt;/a&gt;: Reverses variable length slices. (deprecated arguments) (deprecated arguments)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aec0aaff213dc37546212df82d5459a1571de580" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../roll&quot;&gt;&lt;code&gt;roll(...)&lt;/code&gt;&lt;/a&gt;: Rolls the elements of a tensor along an axis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c805e79feba11f0222304e51d65996ed64db3e20" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../scan&quot;&gt;&lt;code&gt;scan(...)&lt;/code&gt;&lt;/a&gt;: scan on the list of tensors unpacked from &lt;code&gt;elems&lt;/code&gt; on dimension 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8be10a510ea5ef1ae79d8c3c2ba88636decc0d9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../scatter_nd&quot;&gt;&lt;code&gt;scatter_nd(...)&lt;/code&gt;&lt;/a&gt;: Scatter &lt;code&gt;updates&lt;/code&gt; into a new tensor according to &lt;code&gt;indices&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0de84d6dadfedde8839a90289b753a16f03126f7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../searchsorted&quot;&gt;&lt;code&gt;searchsorted(...)&lt;/code&gt;&lt;/a&gt;: Searches input tensor for values on the innermost dimension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fad82f9fa3f1a6bcaa398f0896359724a9ba562" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../sequence_mask&quot;&gt;&lt;code&gt;sequence_mask(...)&lt;/code&gt;&lt;/a&gt;: Returns a mask tensor representing the first N positions of each cell.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e66c6f6bcbf5049a348e1b111c2e0fe00e6b5057" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../shape&quot;&gt;&lt;code&gt;shape(...)&lt;/code&gt;&lt;/a&gt;: Returns the shape of a tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a42cd6c7728c9b2cd0007b3bbcbe4ae89f67517" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../shape_n&quot;&gt;&lt;code&gt;shape_n(...)&lt;/code&gt;&lt;/a&gt;: Returns shape of tensors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1026435d681df2625879f0f48b5aef6a875576e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../signal/fft&quot;&gt;&lt;code&gt;fft(...)&lt;/code&gt;&lt;/a&gt;: Fast Fourier transform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="218d1281a92fa0f9699178a2e291cb60b8836f59" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../signal/fft2d&quot;&gt;&lt;code&gt;fft2d(...)&lt;/code&gt;&lt;/a&gt;: 2D fast Fourier transform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="886450a15dc68bfa738a9f65cb77cde1d667920f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../signal/fft3d&quot;&gt;&lt;code&gt;fft3d(...)&lt;/code&gt;&lt;/a&gt;: 3D fast Fourier transform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="908d838479c85c1697403ae949bf442fdf8b8aed" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../signal/ifft&quot;&gt;&lt;code&gt;ifft(...)&lt;/code&gt;&lt;/a&gt;: Inverse fast Fourier transform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5dcda0f055e2e9882667630a5be387f79d3ae87" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../signal/ifft2d&quot;&gt;&lt;code&gt;ifft2d(...)&lt;/code&gt;&lt;/a&gt;: Inverse 2D fast Fourier transform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b928f8d4c60fc3b8f5604f18048c869918c791e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../signal/ifft3d&quot;&gt;&lt;code&gt;ifft3d(...)&lt;/code&gt;&lt;/a&gt;: Inverse 3D fast Fourier transform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4e374658c461393348d36d709862c1c16da2835" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../slice&quot;&gt;&lt;code&gt;slice(...)&lt;/code&gt;&lt;/a&gt;: Extracts a slice from a tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="189c62e4344f6b9dca379e910a4a8f82dc8a54bc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../sort&quot;&gt;&lt;code&gt;sort(...)&lt;/code&gt;&lt;/a&gt;: Sorts a tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d7fa493e81f7a701dfe14199fd4f8f5b61cb655" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../space_to_batch&quot;&gt;&lt;code&gt;space_to_batch(...)&lt;/code&gt;&lt;/a&gt;: SpaceToBatch for N-D tensors of type T.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcff28606ddf547618d03111d4d039c2771a63ca" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../space_to_batch_nd&quot;&gt;&lt;code&gt;space_to_batch_nd(...)&lt;/code&gt;&lt;/a&gt;: SpaceToBatch for N-D tensors of type T.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34dffbbbe7b809e0d0cb28c1715c8c5791fca4c8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../sparse/fill_empty_rows&quot;&gt;&lt;code&gt;sparse_fill_empty_rows(...)&lt;/code&gt;&lt;/a&gt;: Fills empty rows in the input 2-D &lt;code&gt;SparseTensor&lt;/code&gt; with a default value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79cad29e68f0537ce3b0bc5266b05bc3206fe86a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../sparse/mask&quot;&gt;&lt;code&gt;sparse_mask(...)&lt;/code&gt;&lt;/a&gt;: Masks elements of &lt;code&gt;IndexedSlices&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="090759dbadc6e85d4ff00ac3fa1811d4139e2554" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../sparse/maximum&quot;&gt;&lt;code&gt;sparse_maximum(...)&lt;/code&gt;&lt;/a&gt;: Returns the element-wise max of two SparseTensors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49c28ffcb971c54473c4948564d99e38e3fd33e1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../sparse/minimum&quot;&gt;&lt;code&gt;sparse_minimum(...)&lt;/code&gt;&lt;/a&gt;: Returns the element-wise min of two SparseTensors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bff9e4f635c04d336b9f14fa097933a12e99cc31" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../sparse/reorder&quot;&gt;&lt;code&gt;sparse_reorder(...)&lt;/code&gt;&lt;/a&gt;: Reorders a &lt;code&gt;SparseTensor&lt;/code&gt; into the canonical, row-major ordering.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="430e0e0910c2948be0154851235398d1d8f01574" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../sparse/reset_shape&quot;&gt;&lt;code&gt;sparse_reset_shape(...)&lt;/code&gt;&lt;/a&gt;: Resets the shape of a &lt;code&gt;SparseTensor&lt;/code&gt; with indices and values unchanged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5c31aac9f94450aead3363107535d6ec262b259" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../sparse/reshape&quot;&gt;&lt;code&gt;sparse_reshape(...)&lt;/code&gt;&lt;/a&gt;: Reshapes a &lt;code&gt;SparseTensor&lt;/code&gt; to represent values in a new dense shape.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67d8d7c749d578295e80314002219c51ff634f43" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../sparse/retain&quot;&gt;&lt;code&gt;sparse_retain(...)&lt;/code&gt;&lt;/a&gt;: Retains specified non-empty values within a &lt;code&gt;SparseTensor&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc601011ab9c42aa3ba5730e87043aafb5d5688f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../sparse/slice&quot;&gt;&lt;code&gt;sparse_slice(...)&lt;/code&gt;&lt;/a&gt;: Slice a &lt;code&gt;SparseTensor&lt;/code&gt; based on the &lt;code&gt;start&lt;/code&gt; and `size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3458e7af506d206ae5dae6247212a0c65c53c5f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../sparse/softmax&quot;&gt;&lt;code&gt;sparse_softmax(...)&lt;/code&gt;&lt;/a&gt;: Applies softmax to a batched N-D &lt;code&gt;SparseTensor&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7281fa607eaeb1217d2093a6a0395ace0ad8166" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../sparse/sparse_dense_matmul&quot;&gt;&lt;code&gt;sparse_tensor_dense_matmul(...)&lt;/code&gt;&lt;/a&gt;: Multiply SparseTensor (of rank 2) &quot;A&quot; by dense matrix &quot;B&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbff904ad3b62b48e524bc8539b0ecfa6a6475b7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../sparse/sparsetensor&quot;&gt;&lt;code&gt;class SparseTensor&lt;/code&gt;&lt;/a&gt;: Represents a sparse tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d8e67b199ff3629cee577c1a66a4a96116f27bc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../sparse/to_dense&quot;&gt;&lt;code&gt;sparse_tensor_to_dense(...)&lt;/code&gt;&lt;/a&gt;: Converts a &lt;code&gt;SparseTensor&lt;/code&gt; into a dense tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c23b7f247124bf35c9acf98971bf3d98c1c5280f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../sparse/to_indicator&quot;&gt;&lt;code&gt;sparse_to_indicator(...)&lt;/code&gt;&lt;/a&gt;: Converts a &lt;code&gt;SparseTensor&lt;/code&gt; of ids into a dense bool indicator tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eae9e634e9f2df8dca0f1be4e332b2dbd7cd3b1a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../sparse/transpose&quot;&gt;&lt;code&gt;sparse_transpose(...)&lt;/code&gt;&lt;/a&gt;: Transposes a &lt;code&gt;SparseTensor&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f2622ae9c1845cd637326fd2a4cc4b7d820545d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../sparsetensorspec&quot;&gt;&lt;code&gt;class SparseTensorSpec&lt;/code&gt;&lt;/a&gt;: Type specification for a &lt;a href=&quot;../sparse/sparsetensor&quot;&gt;&lt;code&gt;tf.SparseTensor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aea338bceddce15f2bb8fe966be3252d8b5bdfcc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../split&quot;&gt;&lt;code&gt;split(...)&lt;/code&gt;&lt;/a&gt;: Splits a tensor into sub tensors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08a6bcff41b6e6e55bdd51f441f9e618bccf8395" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../squeeze&quot;&gt;&lt;code&gt;squeeze(...)&lt;/code&gt;&lt;/a&gt;: Removes dimensions of size 1 from the shape of a tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bef201871dbefb3cc9da8640624bf074891968a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../stack&quot;&gt;&lt;code&gt;stack(...)&lt;/code&gt;&lt;/a&gt;: Stacks a list of rank-&lt;code&gt;R&lt;/code&gt; tensors into one rank-&lt;code&gt;(R+1)&lt;/code&gt; tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="155522f62265f9cb93c8f625579bc193d8e7ffca" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../stop_gradient&quot;&gt;&lt;code&gt;stop_gradient(...)&lt;/code&gt;&lt;/a&gt;: Stops gradient computation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23b0e9eb3318d8eb9b9fd1b9d8515a1e510779a9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../strategyextended&quot;&gt;&lt;code&gt;tf.distribute.StrategyExtended&lt;/code&gt;&lt;/a&gt; with additional methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40fa747352e273e4bc0045eef63dcafd2fee8ea9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../strided_slice&quot;&gt;&lt;code&gt;strided_slice(...)&lt;/code&gt;&lt;/a&gt;: Extracts a strided slice of a tensor (generalized python array indexing).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="879974c77e5789f4394cfaddf2dfb48c375f4c9d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../strings/as_string&quot;&gt;&lt;code&gt;as_string(...)&lt;/code&gt;&lt;/a&gt;: Converts each entry in the given tensor to strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09cd2eac5dcbc80688fffaf17fcd52a8afad930c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../strings/join&quot;&gt;&lt;code&gt;string_join(...)&lt;/code&gt;&lt;/a&gt;: Joins the strings in the given list of string tensors into one tensor;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc2a736a58cff14d2f6ea9963308060d74f412a4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../strings/regex_replace&quot;&gt;&lt;code&gt;regex_replace(...)&lt;/code&gt;&lt;/a&gt;: Replace elements of &lt;code&gt;input&lt;/code&gt; matching regex &lt;code&gt;pattern&lt;/code&gt; with &lt;code&gt;rewrite&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e5712b49d63a00f5726d4141eac90ad91906c48" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../strings/strip&quot;&gt;&lt;code&gt;string_strip(...)&lt;/code&gt;&lt;/a&gt;: Strip leading and trailing whitespaces from the Tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="230ed7046ef8fba2cb97616a41cb50164ffb3dcc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../strings/to_hash_bucket_fast&quot;&gt;&lt;code&gt;string_to_hash_bucket_fast(...)&lt;/code&gt;&lt;/a&gt;: Converts each string in the input Tensor to its hash mod by a number of buckets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be6410ef5b9324cecc086e909903451e73b0b123" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../strings/to_hash_bucket_strong&quot;&gt;&lt;code&gt;string_to_hash_bucket_strong(...)&lt;/code&gt;&lt;/a&gt;: Converts each string in the input Tensor to its hash mod by a number of buckets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce465f37403ef7f69c6be026a468ad8ac7336dc1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../summary&quot;&gt;&lt;code&gt;summary&lt;/code&gt;&lt;/a&gt; module: Operations for writing summary data, for use in analysis and visualization.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8cd4035a8ed77743a8912bb3388eb8c9dafaea6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../switch_case&quot;&gt;&lt;code&gt;switch_case(...)&lt;/code&gt;&lt;/a&gt;: Create a switch/case operation, i.e. an integer-indexed conditional.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f03336550f7ff0ba72a5f42cbd6739b310db44c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../tensor&quot;&gt;&lt;code&gt;class Tensor&lt;/code&gt;&lt;/a&gt;: Represents one of the outputs of an &lt;code&gt;Operation&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="364c577e9ff2d2dc03e88a46af6d10c4c3d5e934" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../tensor_scatter_nd_add&quot;&gt;&lt;code&gt;tensor_scatter_add(...)&lt;/code&gt;&lt;/a&gt;: Adds sparse &lt;code&gt;updates&lt;/code&gt; to an existing tensor according to &lt;code&gt;indices&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31f883d1c945c0d92991baf88905c7709fb72f3e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../tensor_scatter_nd_add&quot;&gt;&lt;code&gt;tensor_scatter_nd_add(...)&lt;/code&gt;&lt;/a&gt;: Adds sparse &lt;code&gt;updates&lt;/code&gt; to an existing tensor according to &lt;code&gt;indices&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a75b338d895c1811050493d4da9412d4e18c692" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../tensor_scatter_nd_sub&quot;&gt;&lt;code&gt;tensor_scatter_nd_sub(...)&lt;/code&gt;&lt;/a&gt;: Subtracts sparse &lt;code&gt;updates&lt;/code&gt; from an existing tensor according to &lt;code&gt;indices&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf3c2dac46c4ef1e0d9063e6cabb69f864e72cc1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../tensor_scatter_nd_sub&quot;&gt;&lt;code&gt;tensor_scatter_sub(...)&lt;/code&gt;&lt;/a&gt;: Subtracts sparse &lt;code&gt;updates&lt;/code&gt; from an existing tensor according to &lt;code&gt;indices&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62c9363629681e991cdf363d1ac7b2df2d21d1fb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../tensor_scatter_nd_update&quot;&gt;&lt;code&gt;tensor_scatter_nd_update(...)&lt;/code&gt;&lt;/a&gt;: Scatter &lt;code&gt;updates&lt;/code&gt; into an existing tensor according to &lt;code&gt;indices&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f73e575680f23f85121a375e53ac534754a4b916" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../tensor_scatter_nd_update&quot;&gt;&lt;code&gt;tensor_scatter_update(...)&lt;/code&gt;&lt;/a&gt;: Scatter &lt;code&gt;updates&lt;/code&gt; into an existing tensor according to &lt;code&gt;indices&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="839073867ebb7b797a9ebb4c964139cc3bd899f6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../tensorarray&quot;&gt;&lt;code&gt;class TensorArray&lt;/code&gt;&lt;/a&gt;: Class wrapping dynamic-sized, per-time-step, write-once Tensor arrays.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a83dbdec004bd2e9d8f27e7777e2728bec8f9106" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../tensorarrayspec&quot;&gt;&lt;code&gt;class TensorArraySpec&lt;/code&gt;&lt;/a&gt;: Type specification for a &lt;a href=&quot;../tensorarray&quot;&gt;&lt;code&gt;tf.TensorArray&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="436752fa4bedb3c8ddb52979a1a927ea8941416d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../tensordot&quot;&gt;&lt;code&gt;tensordot(...)&lt;/code&gt;&lt;/a&gt;: Tensor contraction of a and b along specified axes and outer product.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cb26158ac3291792a6ad562c94603fa75503be8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../tensorshape&quot;&gt;&lt;code&gt;class TensorShape&lt;/code&gt;&lt;/a&gt;: Represents the shape of a &lt;code&gt;Tensor&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0c93a5d168166323bb8fc5f85e8788f5b0f2fab" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../tensorspec&quot;&gt;&lt;code&gt;class TensorSpec&lt;/code&gt;&lt;/a&gt;: Describes a tf.Tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69230236bde014d2c0f42fe35953dcd9d3bf179d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../tile&quot;&gt;&lt;code&gt;tile(...)&lt;/code&gt;&lt;/a&gt;: Constructs a tensor by tiling a given tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66d4800c8abc6fc9b49a18c4b7c85198bd7022d1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../timestamp&quot;&gt;&lt;code&gt;timestamp(...)&lt;/code&gt;&lt;/a&gt;: Provides the time since epoch in seconds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="508bef274a95cd6e5aa4e76df45c698dc94914ac" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../transpose&quot;&gt;&lt;code&gt;transpose(...)&lt;/code&gt;&lt;/a&gt;: Transposes &lt;code&gt;a&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d32cfc00fcad945d033ff43d1ca792f7eb2e0958" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../truncatediv&quot;&gt;&lt;code&gt;truncatediv(...)&lt;/code&gt;&lt;/a&gt;: Returns x / y element-wise for integer types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6466d9dd9feee647cbf0c32d8dd8a7380eeac416" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../truncatemod&quot;&gt;&lt;code&gt;truncatemod(...)&lt;/code&gt;&lt;/a&gt;: Returns element-wise remainder of division. This emulates C semantics in that</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c7131fa0828872fd9a5e15a4503b95d49157b67" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../tuple&quot;&gt;&lt;code&gt;tuple(...)&lt;/code&gt;&lt;/a&gt;: Group tensors together.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf15a89d904ba4b952e14c2f5a4ca8a07a9b0918" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../typespec&quot;&gt;&lt;code&gt;class TypeSpec&lt;/code&gt;&lt;/a&gt;: Specifies a TensorFlow value type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9dba96ed2cf62b6b6bd931e99a519e57ac5bfdd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../unconnectedgradients&quot;&gt;&lt;code&gt;class UnconnectedGradients&lt;/code&gt;&lt;/a&gt;: Controls how gradient computation behaves when y does not depend on x.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60455d8e44fef8f521931b6a451e76c6c8d2e2d5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../unique&quot;&gt;&lt;code&gt;unique(...)&lt;/code&gt;&lt;/a&gt;: Finds unique elements in a 1-D tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9841375347b196bcd0673146eed92111833f167e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../unique_with_counts&quot;&gt;&lt;code&gt;unique_with_counts(...)&lt;/code&gt;&lt;/a&gt;: Finds unique elements in a 1-D tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcaf37a7a9574fce5fd24e701149715cfb0e4622" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../unravel_index&quot;&gt;&lt;code&gt;unravel_index(...)&lt;/code&gt;&lt;/a&gt;: Converts an array of flat indices into a tuple of coordinate arrays.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f4de74bfac5370b0b8cad4a01f5d87c4d4c5ae2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../unstack&quot;&gt;&lt;code&gt;unstack(...)&lt;/code&gt;&lt;/a&gt;: Unpacks the given dimension of a rank-&lt;code&gt;R&lt;/code&gt; tensor into rank-&lt;code&gt;(R-1)&lt;/code&gt; tensors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88bff019deb6adfefbb787e14190720a6b64ff80" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../utils/register_keras_serializable&quot;&gt;&lt;code&gt;tf.keras.utils.register_keras_serializable&lt;/code&gt;&lt;/a&gt; is only available in TF 2.1 and beyond. In earlier versions of TensorFlow you must pass your custom regularizer to the &lt;code&gt;custom_objects&lt;/code&gt; argument of methods that expect custom regularizers to be registered as serializable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05f203c29836c6b1f8cd7c58b0025f819d7d19aa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../variable&quot;&gt;&lt;code&gt;class Variable&lt;/code&gt;&lt;/a&gt;: See the &lt;a href=&quot;https://tensorflow.org/guide/variable&quot;&gt;variable guide&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a09879b9e44f5d2383e0ae4ba007dbdbd224551" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../variable_creator_scope&quot;&gt;&lt;code&gt;variable_creator_scope(...)&lt;/code&gt;&lt;/a&gt;: Scope which defines a variable creation function to be used by variable().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a66db6bdb6d0939144452464f31ee7167092ff3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../variableaggregation&quot;&gt;&lt;code&gt;class VariableAggregation&lt;/code&gt;&lt;/a&gt;: Indicates how a distributed variable will be aggregated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80a801093914d029def7f23707ac818cf16aaa00" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../variablesynchronization&quot;&gt;&lt;code&gt;class VariableSynchronization&lt;/code&gt;&lt;/a&gt;: Indicates when a distributed variable will be synced.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5312962adf8485e086415f3e4a820b7e3afb9605" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../vectorized_map&quot;&gt;&lt;code&gt;vectorized_map(...)&lt;/code&gt;&lt;/a&gt;: Parallel map on the list of tensors unpacked from &lt;code&gt;elems&lt;/code&gt; on dimension 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="314955342286eb20bf73187ac43005a15f08c348" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../where&quot;&gt;&lt;code&gt;where(...)&lt;/code&gt;&lt;/a&gt;: Return the elements, either from &lt;code&gt;x&lt;/code&gt; or &lt;code&gt;y&lt;/code&gt;, depending on the &lt;code&gt;condition&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b1491f5ece7785750f08fdd6ade67601a538f59" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../where&quot;&gt;&lt;code&gt;where_v2(...)&lt;/code&gt;&lt;/a&gt;: Return the elements, either from &lt;code&gt;x&lt;/code&gt; or &lt;code&gt;y&lt;/code&gt;, depending on the &lt;code&gt;condition&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9a8a3c7da7b0a83a840c4fb74331a844c4d70ed" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../while_loop&quot;&gt;&lt;code&gt;while_loop(...)&lt;/code&gt;&lt;/a&gt;: Repeat &lt;code&gt;body&lt;/code&gt; while the condition &lt;code&gt;cond&lt;/code&gt; is true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e32942e847099cc259ac3df4a9ba4ac100c5e77" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../zeros&quot;&gt;&lt;code&gt;zeros(...)&lt;/code&gt;&lt;/a&gt;: Creates a tensor with all elements set to zero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb5a3820b4ea32574efd731b3d040eef251a2c61" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../zeros_initializer&quot;&gt;&lt;code&gt;class Zeros&lt;/code&gt;&lt;/a&gt;: Initializer that generates tensors initialized to 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81b51c91ed5da28d6a31c83288eec86e71514512" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../zeros_initializer&quot;&gt;&lt;code&gt;class zeros&lt;/code&gt;&lt;/a&gt;: Initializer that generates tensors initialized to 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5b2040772d07d5a5a7dde7b83bdd14ce8cef502" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../zeros_initializer&quot;&gt;&lt;code&gt;class zeros_initializer&lt;/code&gt;&lt;/a&gt;: Initializer that generates tensors initialized to 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90d1766f59278acbb78f57c03b82b5ca3deb0999" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;../zeros_like&quot;&gt;&lt;code&gt;zeros_like(...)&lt;/code&gt;&lt;/a&gt;: Creates a tensor with all elements set to zero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79de79c4242324e83da759396fde61bb11cd7070" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;activations/deserialize&quot;&gt;&lt;code&gt;deserialize(...)&lt;/code&gt;&lt;/a&gt;: Returns activation function denoted by input string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32dc6d89a2401cd1dea0f3ba4f109225703cfa17" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;activations/elu&quot;&gt;&lt;code&gt;elu(...)&lt;/code&gt;&lt;/a&gt;: Exponential linear unit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83d9a07d11b5c2f7803c8f4a9682727cb63df973" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;activations/exponential&quot;&gt;&lt;code&gt;exponential(...)&lt;/code&gt;&lt;/a&gt;: Exponential activation function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c97ef33f2314c6eec9088ef231b31bc795410ec" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;activations/get&quot;&gt;&lt;code&gt;get(...)&lt;/code&gt;&lt;/a&gt;: Returns function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="976584a7903929145ca87d1e758d3046e5616cbf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;activations/hard_sigmoid&quot;&gt;&lt;code&gt;hard_sigmoid(...)&lt;/code&gt;&lt;/a&gt;: Hard sigmoid activation function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a11a4c69678ac5152a6d4a459602bf78a1d1dfe" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;activations/linear&quot;&gt;&lt;code&gt;linear(...)&lt;/code&gt;&lt;/a&gt;: Linear activation function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad610e0406721dbdcd9bfa31f5823dd8854fa977" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;activations/relu&quot;&gt;&lt;code&gt;relu(...)&lt;/code&gt;&lt;/a&gt;: Applies the rectified linear unit activation function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a066c702057074d90f0d57a6bb1d7ba84eafde4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;activations/selu&quot;&gt;&lt;code&gt;selu(...)&lt;/code&gt;&lt;/a&gt;: Scaled Exponential Linear Unit (SELU).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11e9a8ab6844c91651a9b8b0b583868cfeb2232a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;activations/serialize&quot;&gt;&lt;code&gt;serialize(...)&lt;/code&gt;&lt;/a&gt;: Returns name attribute (&lt;code&gt;__name__&lt;/code&gt;) of function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9df26c8dea63335099e065555978f2415a76b44" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;activations/sigmoid&quot;&gt;&lt;code&gt;sigmoid(...)&lt;/code&gt;&lt;/a&gt;: Sigmoid activation function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db0e154b29934a581a7071958dc5486da6449bce" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;activations/softmax&quot;&gt;&lt;code&gt;softmax(...)&lt;/code&gt;&lt;/a&gt;: Softmax converts a real vector to a vector of categorical probabilities.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="370c60f1ee6e198f47731e7ea5af3a8c3c158ab8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;activations/softplus&quot;&gt;&lt;code&gt;softplus(...)&lt;/code&gt;&lt;/a&gt;: Softplus activation function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="043513aab8697c88f780917d3d4de26ab3067e1d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;activations/softsign&quot;&gt;&lt;code&gt;softsign(...)&lt;/code&gt;&lt;/a&gt;: Softsign activation function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dba6ddeb89fd5998b9151957afad0f93919697e0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;activations/tanh&quot;&gt;&lt;code&gt;tanh(...)&lt;/code&gt;&lt;/a&gt;: Hyperbolic tangent activation function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a65c9af48542e9d5b00d0869668be54551e86f84" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;add_n&quot;&gt;&lt;code&gt;tf.math.add_n&lt;/code&gt;&lt;/a&gt; performs the same operation as &lt;a href=&quot;accumulate_n&quot;&gt;&lt;code&gt;tf.math.accumulate_n&lt;/code&gt;&lt;/a&gt;, but it waits for all of its inputs to be ready before beginning to sum. This buffering can result in higher memory consumption when inputs are ready at different times, since the minimum temporary storage required is proportional to the input size rather than the output size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d49ca813e40cccc27162980b328a4be269b8a27" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;add_queue_runner&quot;&gt;&lt;code&gt;add_queue_runner(...)&lt;/code&gt;&lt;/a&gt;: Adds a &lt;code&gt;QueueRunner&lt;/code&gt; to a collection in the graph. (deprecated)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffcf909634236dbe1d9a4f50c683d3fa8412bbd9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;app/run&quot;&gt;&lt;code&gt;run(...)&lt;/code&gt;&lt;/a&gt;: Runs the program with an optional 'main' function and 'argv' list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a12aff9ec8326c0ba28a383a31aaae768271a8f8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;applications/densenet&quot;&gt;&lt;code&gt;densenet&lt;/code&gt;&lt;/a&gt; module: DenseNet models for Keras.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7a7cf28929df1d35ad6af9bcf1a6c8d8197224a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;applications/imagenet_utils&quot;&gt;&lt;code&gt;imagenet_utils&lt;/code&gt;&lt;/a&gt; module: Utilities for ImageNet data preprocessing &amp;amp; prediction decoding.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6ef040f562116475be4a1c9232c3ee383dc5694" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;applications/inception_resnet_v2&quot;&gt;&lt;code&gt;inception_resnet_v2&lt;/code&gt;&lt;/a&gt; module: Inception-ResNet V2 model for Keras.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7579f29ff95b841730a62fc09881ec76dd19de2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;applications/inception_v3&quot;&gt;&lt;code&gt;inception_v3&lt;/code&gt;&lt;/a&gt; module: Inception V3 model for Keras.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa8b55a12410048ef03243d61bb1891c0f18449b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;applications/mobilenet&quot;&gt;&lt;code&gt;mobilenet&lt;/code&gt;&lt;/a&gt; module: MobileNet v1 models for Keras.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76b707a5d2ea8409a5bf8d18d723cbe317421bd2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;applications/mobilenet_v2&quot;&gt;&lt;code&gt;mobilenet_v2&lt;/code&gt;&lt;/a&gt; module: MobileNet v2 models for Keras.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="299b7e00d3392ca23ef17925ac69d7dd2e1e0937" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;applications/nasnet&quot;&gt;&lt;code&gt;nasnet&lt;/code&gt;&lt;/a&gt; module: NASNet-A models for Keras.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e1d4af512f13bafd09b0a1ae29520cfe4b9a222" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;applications/resnet&quot;&gt;&lt;code&gt;resnet&lt;/code&gt;&lt;/a&gt; module: ResNet models for Keras.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecb977aa17d3949ad5ca753806389868a6cc0286" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;applications/resnet50&quot;&gt;&lt;code&gt;resnet50&lt;/code&gt;&lt;/a&gt; module: Public API for tf.keras.applications.resnet50 namespace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faa1c26e1dd0db1de5e3fbb51db50e22c64affbd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;applications/resnet_v2&quot;&gt;&lt;code&gt;resnet_v2&lt;/code&gt;&lt;/a&gt; module: ResNet v2 models for Keras.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51cc1b7fa94f434a76cbaf853fe5445faedfc17b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;applications/vgg16&quot;&gt;&lt;code&gt;vgg16&lt;/code&gt;&lt;/a&gt; module: VGG16 model for Keras.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d3c849ab2416b0f79278329c351ab364bee20eb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;applications/vgg19&quot;&gt;&lt;code&gt;vgg19&lt;/code&gt;&lt;/a&gt; module: VGG19 model for Keras.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76c4cf60dfafa0f5f99fd5fde0664dfe7e4c96d6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;applications/xception&quot;&gt;&lt;code&gt;xception&lt;/code&gt;&lt;/a&gt; module: Xception V1 model for Keras.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1235d625ae4380bf28e864862e67ec26193a50d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;argmax&quot;&gt;&lt;code&gt;argmax(...)&lt;/code&gt;&lt;/a&gt;: Returns the index with the largest value across axes of a tensor. (deprecated arguments)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67fb44fd2dfe10cf40cbdf18a579f3e19121ca9b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;argmin&quot;&gt;&lt;code&gt;argmin(...)&lt;/code&gt;&lt;/a&gt;: Returns the index with the smallest value across axes of a tensor. (deprecated arguments)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f26c817f9470a5f42c8902bfff21de31e494b5ff" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;assert_equal&quot;&gt;&lt;code&gt;assert_equal(...)&lt;/code&gt;&lt;/a&gt;: Assert the condition &lt;code&gt;x == y&lt;/code&gt; holds element-wise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cda391cf0724a652ce8408bbc2aee495d5380e5d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;assert_greater&quot;&gt;&lt;code&gt;assert_greater(...)&lt;/code&gt;&lt;/a&gt;: Assert the condition &lt;code&gt;x &amp;gt; y&lt;/code&gt; holds element-wise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fe7683dd2dc613652abf0999342899f0574bf69" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;assert_greater_equal&quot;&gt;&lt;code&gt;assert_greater_equal(...)&lt;/code&gt;&lt;/a&gt;: Assert the condition &lt;code&gt;x &amp;gt;= y&lt;/code&gt; holds element-wise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bd6e19d978d2d325fb6f0a49a5722ac0fcf9d46" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;assert_integer&quot;&gt;&lt;code&gt;assert_integer(...)&lt;/code&gt;&lt;/a&gt;: Assert that &lt;code&gt;x&lt;/code&gt; is of integer dtype.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ca13c0eaa71d5c62d27b69fb55b5bbc20382bc8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;assert_less&quot;&gt;&lt;code&gt;assert_less(...)&lt;/code&gt;&lt;/a&gt;: Assert the condition &lt;code&gt;x &amp;lt; y&lt;/code&gt; holds element-wise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="253f08415a8d2a9a114fc98b870473ccd0617443" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;assert_less_equal&quot;&gt;&lt;code&gt;assert_less_equal(...)&lt;/code&gt;&lt;/a&gt;: Assert the condition &lt;code&gt;x &amp;lt;= y&lt;/code&gt; holds element-wise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="347f74791085044ae3cd4a2fa225f2d21f314b62" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;assert_near&quot;&gt;&lt;code&gt;assert_near(...)&lt;/code&gt;&lt;/a&gt;: Assert the condition &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; are close element-wise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="236449bb8422b412669fe71fd315a5c063614255" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;assert_negative&quot;&gt;&lt;code&gt;assert_negative(...)&lt;/code&gt;&lt;/a&gt;: Assert the condition &lt;code&gt;x &amp;lt; 0&lt;/code&gt; holds element-wise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebf3a0fced70bc9dd5c9cad664466272bf12cae0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;assert_non_negative&quot;&gt;&lt;code&gt;assert_non_negative(...)&lt;/code&gt;&lt;/a&gt;: Assert the condition &lt;code&gt;x &amp;gt;= 0&lt;/code&gt; holds element-wise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a99f292c5229f1f181e7229a6ba76ab8a911cbf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;assert_non_positive&quot;&gt;&lt;code&gt;assert_non_positive(...)&lt;/code&gt;&lt;/a&gt;: Assert the condition &lt;code&gt;x &amp;lt;= 0&lt;/code&gt; holds element-wise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ce6a473baa18e739353a510449602baf050b9b0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;assert_none_equal&quot;&gt;&lt;code&gt;assert_none_equal(...)&lt;/code&gt;&lt;/a&gt;: Assert the condition &lt;code&gt;x != y&lt;/code&gt; holds element-wise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19c24df7334f33b77d7cb203355a4f2849f8fb14" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;assert_positive&quot;&gt;&lt;code&gt;assert_positive(...)&lt;/code&gt;&lt;/a&gt;: Assert the condition &lt;code&gt;x &amp;gt; 0&lt;/code&gt; holds element-wise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ebcfd2b5dfc0f7ad4aaa7e6455138fa63581a27" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;assert_rank&quot;&gt;&lt;code&gt;assert_rank(...)&lt;/code&gt;&lt;/a&gt;: Assert &lt;code&gt;x&lt;/code&gt; has rank equal to &lt;code&gt;rank&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a35c26f33fb8fae7d07610f3c6c2dfb99ff9eb49" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;assert_rank_at_least&quot;&gt;&lt;code&gt;assert_rank_at_least(...)&lt;/code&gt;&lt;/a&gt;: Assert &lt;code&gt;x&lt;/code&gt; has rank equal to &lt;code&gt;rank&lt;/code&gt; or higher.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebe52883289ad3e0cc2a5974397356d1ff2f85e5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;assert_rank_in&quot;&gt;&lt;code&gt;assert_rank_in(...)&lt;/code&gt;&lt;/a&gt;: Assert &lt;code&gt;x&lt;/code&gt; has rank in &lt;code&gt;ranks&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c406fc80484191b1aa978e242c716a84ad4ef0e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;assert_scalar&quot;&gt;&lt;code&gt;assert_scalar(...)&lt;/code&gt;&lt;/a&gt;: Asserts that the given &lt;code&gt;tensor&lt;/code&gt; is a scalar (i.e. zero-dimensional).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19444da5f2fc3570cb8014f5fbaf7f1b4e4950de" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;assert_type&quot;&gt;&lt;code&gt;assert_type(...)&lt;/code&gt;&lt;/a&gt;: Statically asserts that the given &lt;code&gt;Tensor&lt;/code&gt; is of the specified type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="710454a59c3d67775a12a8c3dad09e0b85dafabc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;audio/decode_wav&quot;&gt;&lt;code&gt;decode_wav(...)&lt;/code&gt;&lt;/a&gt;: Decode a 16-bit PCM WAV file to a float tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71e44812269acee05eb43cce6855586bfa4eb081" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;audio/encode_wav&quot;&gt;&lt;code&gt;encode_wav(...)&lt;/code&gt;&lt;/a&gt;: Encode audio data using the WAV file format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f5ee8cd6fea029ff44e6ca11febfd8b32913db4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;autodiff/forwardaccumulator&quot;&gt;&lt;code&gt;class ForwardAccumulator&lt;/code&gt;&lt;/a&gt;: Computes Jacobian-vector products (&quot;JVP&quot;s) using forward-mode autodiff.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47fcf9fcb2cd3639aed7c49a3248370c3537b6f4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;autograph/experimental&quot;&gt;&lt;code&gt;experimental&lt;/code&gt;&lt;/a&gt; module: Public API for tf.autograph.experimental namespace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d5f3427bc1b7d3d311c47520baafb1c7d60c765" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;autograph/set_verbosity&quot;&gt;&lt;code&gt;set_verbosity(...)&lt;/code&gt;&lt;/a&gt;: Sets the AutoGraph verbosity level.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="250e9ea7a2148ed156e73d6ae2b0dc56006dbfb8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;autograph/to_code&quot;&gt;&lt;code&gt;to_code(...)&lt;/code&gt;&lt;/a&gt;: Returns the source code generated by AutoGraph, as a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e39070e1ae4c0ec5a8814202cafec82cb8e236a5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;autograph/to_graph&quot;&gt;&lt;code&gt;to_graph(...)&lt;/code&gt;&lt;/a&gt;: Converts a Python entity into a TensorFlow graph.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f960c03836a749f63accf22732eb509f4ee492d1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;autograph/trace&quot;&gt;&lt;code&gt;trace(...)&lt;/code&gt;&lt;/a&gt;: Traces argument information at compilation time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6144282d0641196e256e716e31540e68243634a9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/abs&quot;&gt;&lt;code&gt;abs(...)&lt;/code&gt;&lt;/a&gt;: Element-wise absolute value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59c94e4387cb5ce1f263d7de6e437c48fb7547e0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/all&quot;&gt;&lt;code&gt;all(...)&lt;/code&gt;&lt;/a&gt;: Bitwise reduction (logical AND).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="453b360c3d6fb8a3742110f546dfdd93374e7d70" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/any&quot;&gt;&lt;code&gt;any(...)&lt;/code&gt;&lt;/a&gt;: Bitwise reduction (logical OR).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8da6d6c618c7ada4517bec6d4afd4731bcda5823" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/arange&quot;&gt;&lt;code&gt;arange(...)&lt;/code&gt;&lt;/a&gt;: Creates a 1D tensor containing a sequence of integers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09dd42ef399e5067c350a9d4ed3faa08762c0329" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/argmax&quot;&gt;&lt;code&gt;argmax(...)&lt;/code&gt;&lt;/a&gt;: Returns the index of the maximum value along an axis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57a4ae4549bbe5d53aa0edf255c0a393cc179c3f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/argmin&quot;&gt;&lt;code&gt;argmin(...)&lt;/code&gt;&lt;/a&gt;: Returns the index of the minimum value along an axis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6e5fdeb1e64f00415019fa917704e78aa95c6c7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/backend&quot;&gt;&lt;code&gt;backend(...)&lt;/code&gt;&lt;/a&gt;: Publicly accessible method for determining the current backend.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="484349276ebc0754fe123bee3183d67edff45f88" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/batch_dot&quot;&gt;&lt;code&gt;batch_dot(...)&lt;/code&gt;&lt;/a&gt;: Batchwise dot product.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8858a193281ad5bc7b53e214981507ea64592353" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/batch_flatten&quot;&gt;&lt;code&gt;batch_flatten(...)&lt;/code&gt;&lt;/a&gt;: Turn a nD tensor into a 2D tensor with same 0th dimension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e1d650a7882162c8865f2de9a8276e8448989f1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/batch_get_value&quot;&gt;&lt;code&gt;batch_get_value(...)&lt;/code&gt;&lt;/a&gt;: Returns the value of more than one tensor variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbe424e10f537028e1a236bfe5b01cc1ae9a3110" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/batch_normalization&quot;&gt;&lt;code&gt;batch_normalization(...)&lt;/code&gt;&lt;/a&gt;: Applies batch normalization on x given mean, var, beta and gamma.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c78bca5a5f5cedbe35ba1f3b1939b1b1721e97d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/batch_set_value&quot;&gt;&lt;code&gt;batch_set_value(...)&lt;/code&gt;&lt;/a&gt;: Sets the values of many tensor variables at once.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8aa0a282177f8992d8dba96f35faa8cd06141532" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/bias_add&quot;&gt;&lt;code&gt;bias_add(...)&lt;/code&gt;&lt;/a&gt;: Adds a bias vector to a tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c2142b5a48b061a2805c102ee37047d16374caf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/binary_crossentropy&quot;&gt;&lt;code&gt;binary_crossentropy(...)&lt;/code&gt;&lt;/a&gt;: Binary crossentropy between an output tensor and a target tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0be353afb851387195a0456172b00a598bcf7532" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/cast&quot;&gt;&lt;code&gt;cast(...)&lt;/code&gt;&lt;/a&gt;: Casts a tensor to a different dtype and returns it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f41fb88e06335e24dc74179b6dff256274fa866" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/cast_to_floatx&quot;&gt;&lt;code&gt;cast_to_floatx(...)&lt;/code&gt;&lt;/a&gt;: Cast a Numpy array to the default Keras float type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e828470fecab89ee9c015d53abc17faa5e1979ca" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/categorical_crossentropy&quot;&gt;&lt;code&gt;categorical_crossentropy(...)&lt;/code&gt;&lt;/a&gt;: Categorical crossentropy between an output tensor and a target tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb83747ebbcfb5d74bf334a2caa3415a02ee0893" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/clear_session&quot;&gt;&lt;code&gt;clear_session(...)&lt;/code&gt;&lt;/a&gt;: Destroys the current TF graph and creates a new one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d0c33786653da7a70971b35225be24a4148087e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/clip&quot;&gt;&lt;code&gt;clip(...)&lt;/code&gt;&lt;/a&gt;: Element-wise value clipping.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15b57160683afb2fcc23b606e8d9342ba5c52d0f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/concatenate&quot;&gt;&lt;code&gt;concatenate(...)&lt;/code&gt;&lt;/a&gt;: Concatenates a list of tensors alongside the specified axis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0eb0111f968fed31008000e466008232b1e9c78" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/constant&quot;&gt;&lt;code&gt;constant(...)&lt;/code&gt;&lt;/a&gt;: Creates a constant tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fb3c389e59d96d914d132d2adf9038621a9264d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/conv1d&quot;&gt;&lt;code&gt;conv1d(...)&lt;/code&gt;&lt;/a&gt;: 1D convolution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ee7191f902a4aa460ab2fd40b1c2e2a27c02291" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/conv2d&quot;&gt;&lt;code&gt;conv2d(...)&lt;/code&gt;&lt;/a&gt;: 2D convolution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e954b0127d7eba7d9bce3b62d595f2e18fa54d8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/conv2d_transpose&quot;&gt;&lt;code&gt;conv2d_transpose(...)&lt;/code&gt;&lt;/a&gt;: 2D deconvolution (i.e.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad78d8d77af5b63076975fe06eb81fe90eef9a83" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/conv3d&quot;&gt;&lt;code&gt;conv3d(...)&lt;/code&gt;&lt;/a&gt;: 3D convolution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="567a3993f7806160228c7a7b319167b3e389f6ba" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/cos&quot;&gt;&lt;code&gt;cos(...)&lt;/code&gt;&lt;/a&gt;: Computes cos of x element-wise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="def928ed3d58560613739bbdbf94384ddbd604d7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/count_params&quot;&gt;&lt;code&gt;count_params(...)&lt;/code&gt;&lt;/a&gt;: Returns the static number of elements in a variable or tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="629bd7017ada1d356f435b8f730d54805e2f69e0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/ctc_batch_cost&quot;&gt;&lt;code&gt;ctc_batch_cost(...)&lt;/code&gt;&lt;/a&gt;: Runs CTC loss algorithm on each batch element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2048e4b64cdb121bfd32f7613d7d64d9168c71b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/ctc_decode&quot;&gt;&lt;code&gt;ctc_decode(...)&lt;/code&gt;&lt;/a&gt;: Decodes the output of a softmax.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fffee9c9c09431066f59e5e3c542e9e392fb1e2b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/ctc_label_dense_to_sparse&quot;&gt;&lt;code&gt;ctc_label_dense_to_sparse(...)&lt;/code&gt;&lt;/a&gt;: Converts CTC labels from dense to sparse.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20570d0d32ba90833faf58796fdf9c2e4adc3a46" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/cumprod&quot;&gt;&lt;code&gt;cumprod(...)&lt;/code&gt;&lt;/a&gt;: Cumulative product of the values in a tensor, alongside the specified axis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cbbae91cae0583f3bcebfc1c3f75a54f6efe5d8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/cumsum&quot;&gt;&lt;code&gt;cumsum(...)&lt;/code&gt;&lt;/a&gt;: Cumulative sum of the values in a tensor, alongside the specified axis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="103e646e7036e59a2b55750fa5428c9cf2f2445e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/depthwise_conv2d&quot;&gt;&lt;code&gt;depthwise_conv2d(...)&lt;/code&gt;&lt;/a&gt;: 2D convolution with separable filters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc7ff7ecfb9fe38af4164069c418834e02d7e35e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/dot&quot;&gt;&lt;code&gt;dot(...)&lt;/code&gt;&lt;/a&gt;: Multiplies 2 tensors (and/or variables) and returns a &lt;em&gt;tensor&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6115aa1be22235a87f03b6069ed2e335b32f2aa4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/dropout&quot;&gt;&lt;code&gt;dropout(...)&lt;/code&gt;&lt;/a&gt;: Sets entries in &lt;code&gt;x&lt;/code&gt; to zero at random, while scaling the entire tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44b13ac57e38e3bd577d719bc8ea4c648a89a84a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/dtype&quot;&gt;&lt;code&gt;dtype(...)&lt;/code&gt;&lt;/a&gt;: Returns the dtype of a Keras tensor or variable, as a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d87749752a0045fc4f153113a823037e720465d5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/elu&quot;&gt;&lt;code&gt;elu(...)&lt;/code&gt;&lt;/a&gt;: Exponential linear unit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57418906b45eb4a85d153cb41f56d45f524a1468" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/epsilon&quot;&gt;&lt;code&gt;epsilon(...)&lt;/code&gt;&lt;/a&gt;: Returns the value of the fuzz factor used in numeric expressions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bba0be7a85185282197562c9058af67858ae60fe" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/equal&quot;&gt;&lt;code&gt;equal(...)&lt;/code&gt;&lt;/a&gt;: Element-wise equality between two tensors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97794cb09d980539ed89afbcb6e9a3f7e341f545" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/eval&quot;&gt;&lt;code&gt;eval(...)&lt;/code&gt;&lt;/a&gt;: Evaluates the value of a variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="869189b23584830db88780ab3c347b437e2748f0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/exp&quot;&gt;&lt;code&gt;exp(...)&lt;/code&gt;&lt;/a&gt;: Element-wise exponential.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9656e7c436afea6c7421ac728e94f64eb3239f85" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/expand_dims&quot;&gt;&lt;code&gt;expand_dims(...)&lt;/code&gt;&lt;/a&gt;: Adds a 1-sized dimension at index &quot;axis&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c92f91b7c2ee8a8aca3179362d966138dd5d843" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/eye&quot;&gt;&lt;code&gt;eye(...)&lt;/code&gt;&lt;/a&gt;: Instantiate an identity matrix and returns it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c17bb74dfa482fd4712b2ce82b51f7d22befa44" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/flatten&quot;&gt;&lt;code&gt;flatten(...)&lt;/code&gt;&lt;/a&gt;: Flatten a tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42624b0c238f7955da6c3f0e99355bf00223327d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/floatx&quot;&gt;&lt;code&gt;floatx(...)&lt;/code&gt;&lt;/a&gt;: Returns the default float type, as a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdbf8f0f61d6bcfd5663f5202c700c81cbf5ecac" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/foldl&quot;&gt;&lt;code&gt;foldl(...)&lt;/code&gt;&lt;/a&gt;: Reduce elems using fn to combine them from left to right.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c55f3219ac60d76ee3df725ceaf59817e1e1adc1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/foldr&quot;&gt;&lt;code&gt;foldr(...)&lt;/code&gt;&lt;/a&gt;: Reduce elems using fn to combine them from right to left.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d86c1caa701aedc381d78a3e74cd1912c0907773" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/function&quot;&gt;&lt;code&gt;function(...)&lt;/code&gt;&lt;/a&gt;: Instantiates a Keras function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="473211eaeb8fbf228b1aa623ef91578d35c82eac" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/gather&quot;&gt;&lt;code&gt;gather(...)&lt;/code&gt;&lt;/a&gt;: Retrieves the elements of indices &lt;code&gt;indices&lt;/code&gt; in the tensor &lt;code&gt;reference&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4c8a09c26b92f1e79c4d99c91f77973d4731972" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/get_session&quot;&gt;&lt;code&gt;get_session(...)&lt;/code&gt;&lt;/a&gt;: Returns the TF session to be used by the backend.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b27493c3c9815bc59c3c4382f0975a444bd8351d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/get_uid&quot;&gt;&lt;code&gt;get_uid(...)&lt;/code&gt;&lt;/a&gt;: Associates a string prefix with an integer counter in a TensorFlow graph.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="932590ed9091f1165749ef3139d89ceb11e3861f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/get_value&quot;&gt;&lt;code&gt;get_value(...)&lt;/code&gt;&lt;/a&gt;: Returns the value of a variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e171f092d089b774a4456093a0c2b8701c33ab5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/gradients&quot;&gt;&lt;code&gt;gradients(...)&lt;/code&gt;&lt;/a&gt;: Returns the gradients of &lt;code&gt;loss&lt;/code&gt; w.r.t. &lt;code&gt;variables&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4ede14bf939da406a4604dfd0c053be978c7ad0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/greater&quot;&gt;&lt;code&gt;greater(...)&lt;/code&gt;&lt;/a&gt;: Element-wise truth value of (x &amp;gt; y).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f282b259e98af7ceab5cd6e10f49631195bd6829" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/greater_equal&quot;&gt;&lt;code&gt;greater_equal(...)&lt;/code&gt;&lt;/a&gt;: Element-wise truth value of (x &amp;gt;= y).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5874b9314054256bcab93fb03807d2bcabcba9da" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/hard_sigmoid&quot;&gt;&lt;code&gt;hard_sigmoid(...)&lt;/code&gt;&lt;/a&gt;: Segment-wise linear approximation of sigmoid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0085779906d2483d6568f7afb867102f2deb376" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/image_data_format&quot;&gt;&lt;code&gt;image_data_format(...)&lt;/code&gt;&lt;/a&gt;: Returns the default image data format convention.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2197067ecd7b791079023b8a1056e822aebf2cb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/in_test_phase&quot;&gt;&lt;code&gt;in_test_phase(...)&lt;/code&gt;&lt;/a&gt;: Selects &lt;code&gt;x&lt;/code&gt; in test phase, and &lt;code&gt;alt&lt;/code&gt; otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7bdfaaa4460d2e44a4e705937cb140393c734df" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/in_top_k&quot;&gt;&lt;code&gt;in_top_k(...)&lt;/code&gt;&lt;/a&gt;: Returns whether the &lt;code&gt;targets&lt;/code&gt; are in the top &lt;code&gt;k&lt;/code&gt;&lt;code&gt;predictions&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc1593684e904fac6d731d801250d911872eabcb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/in_train_phase&quot;&gt;&lt;code&gt;in_train_phase(...)&lt;/code&gt;&lt;/a&gt;: Selects &lt;code&gt;x&lt;/code&gt; in train phase, and &lt;code&gt;alt&lt;/code&gt; otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="412ddd85823bd2ffb07c64c3c19076b47d544b2c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/int_shape&quot;&gt;&lt;code&gt;int_shape(...)&lt;/code&gt;&lt;/a&gt;: Returns the shape of tensor or variable as a tuple of int or None entries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6320118f273fcbcdd946d46d3ff105bdcfbc7ef7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/is_keras_tensor&quot;&gt;&lt;code&gt;is_keras_tensor(...)&lt;/code&gt;&lt;/a&gt;: Returns whether &lt;code&gt;x&lt;/code&gt; is a Keras tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35070534cb19da0c09d63941f54c2059c476331a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/is_sparse&quot;&gt;&lt;code&gt;is_sparse(...)&lt;/code&gt;&lt;/a&gt;: Returns whether a tensor is a sparse tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9de5905026fc3092e849c89bafae184499e3427a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/l2_normalize&quot;&gt;&lt;code&gt;l2_normalize(...)&lt;/code&gt;&lt;/a&gt;: Normalizes a tensor wrt the L2 norm alongside the specified axis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14ce5d2862b82da47fb41bc959e93b302ab758de" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/learning_phase&quot;&gt;&lt;code&gt;learning_phase(...)&lt;/code&gt;&lt;/a&gt;: Returns the learning phase flag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="807c1a223345f6c12723496a95f941e693a93509" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/learning_phase_scope&quot;&gt;&lt;code&gt;learning_phase_scope(...)&lt;/code&gt;&lt;/a&gt;: Provides a scope within which the learning phase is equal to &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51e637f612e113284a6ede95ca927e74e8e0f206" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/less&quot;&gt;&lt;code&gt;less(...)&lt;/code&gt;&lt;/a&gt;: Element-wise truth value of (x &amp;lt; y).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ffe3703b008bf4e9ebf21a13439e08fd5d980bc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/less_equal&quot;&gt;&lt;code&gt;less_equal(...)&lt;/code&gt;&lt;/a&gt;: Element-wise truth value of (x &amp;lt;= y).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="609fd679d01cb1a1341805e00478cada1e1f7b71" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/local_conv1d&quot;&gt;&lt;code&gt;local_conv1d(...)&lt;/code&gt;&lt;/a&gt;: Apply 1D conv with un-shared weights.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31b524e6ca2725abbb2d6da6ca794ba6dbc56627" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/local_conv2d&quot;&gt;&lt;code&gt;local_conv2d(...)&lt;/code&gt;&lt;/a&gt;: Apply 2D conv with un-shared weights.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34ef22a6e3f14c2b7c234a73f5fc203a7111fd37" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/log&quot;&gt;&lt;code&gt;log(...)&lt;/code&gt;&lt;/a&gt;: Element-wise log.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08a275448a07c112fe8b93428b436f67b49de92f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/manual_variable_initialization&quot;&gt;&lt;code&gt;manual_variable_initialization(...)&lt;/code&gt;&lt;/a&gt;: Sets the manual variable initialization flag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2586f3c54fc0938f0eb71012fdb6c519f6c1cdf8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/map_fn&quot;&gt;&lt;code&gt;map_fn(...)&lt;/code&gt;&lt;/a&gt;: Map the function fn over the elements elems and return the outputs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a44f1b5adc93dcc44a834f4ed0ad2009a6a13268" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/max&quot;&gt;&lt;code&gt;max(...)&lt;/code&gt;&lt;/a&gt;: Maximum value in a tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d5b1f0fafc3a3fa7a448a475f65832930572245" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/maximum&quot;&gt;&lt;code&gt;maximum(...)&lt;/code&gt;&lt;/a&gt;: Element-wise maximum of two tensors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9b9ed4634c6440f49a2ad2f3e049d9caec4871e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/mean&quot;&gt;&lt;code&gt;mean(...)&lt;/code&gt;&lt;/a&gt;: Mean of a tensor, alongside the specified axis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="495af16fd4228f107dd0bb59f4868f6b8b5d1e79" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/min&quot;&gt;&lt;code&gt;min(...)&lt;/code&gt;&lt;/a&gt;: Minimum value in a tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfd97d98b22f54a75841e3824d7a946e289cff42" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/minimum&quot;&gt;&lt;code&gt;minimum(...)&lt;/code&gt;&lt;/a&gt;: Element-wise minimum of two tensors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d7d3539f99d734fca59ac1fe111e750027a8bcc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/moving_average_update&quot;&gt;&lt;code&gt;moving_average_update(...)&lt;/code&gt;&lt;/a&gt;: Compute the moving average of a variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50d031fa4262d56f84138ab2b601adf546dd1473" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/name_scope&quot;&gt;&lt;code&gt;class name_scope&lt;/code&gt;&lt;/a&gt;: A context manager for use when defining a Python op.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8eac6b8910ccac3eefbdecd666b898f7a89d1cc0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/name_scope&quot;&gt;&lt;code&gt;name_scope(...)&lt;/code&gt;&lt;/a&gt;: A context manager for use when defining a Python op.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83e5867bbcc156e1cf6204c1958090dbde3d508c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/ndim&quot;&gt;&lt;code&gt;ndim(...)&lt;/code&gt;&lt;/a&gt;: Returns the number of axes in a tensor, as an integer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7eabed80188ba59b30b8b6af117ac6e50c514331" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/normalize_batch_in_training&quot;&gt;&lt;code&gt;normalize_batch_in_training(...)&lt;/code&gt;&lt;/a&gt;: Computes mean and std for batch then apply batch_normalization on batch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acd6fd89e0d26ae08b7dbb7c5817494a8c4988c8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/not_equal&quot;&gt;&lt;code&gt;not_equal(...)&lt;/code&gt;&lt;/a&gt;: Element-wise inequality between two tensors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d96557c716a52784a4a9efa9e320563abf825faf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/one_hot&quot;&gt;&lt;code&gt;one_hot(...)&lt;/code&gt;&lt;/a&gt;: Computes the one-hot representation of an integer tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d3a748c331264fca653487e0136a3defc2eac9e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/ones&quot;&gt;&lt;code&gt;ones(...)&lt;/code&gt;&lt;/a&gt;: Instantiates an all-ones variable and returns it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="504ad3f058b655643b90f76b62012c618ea26854" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/ones_like&quot;&gt;&lt;code&gt;ones_like(...)&lt;/code&gt;&lt;/a&gt;: Instantiates an all-ones variable of the same shape as another tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec6bf0b40fdf05ad7d7199d1c4c2084f82ee3f27" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/permute_dimensions&quot;&gt;&lt;code&gt;permute_dimensions(...)&lt;/code&gt;&lt;/a&gt;: Permutes axes in a tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd04f453eb37fa08b29a7d6e290595064467c053" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/placeholder&quot;&gt;&lt;code&gt;placeholder(...)&lt;/code&gt;&lt;/a&gt;: Instantiates a placeholder tensor and returns it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e16c5a4fd5e2a000621cc4c9cda56bbc8f668a0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/pool2d&quot;&gt;&lt;code&gt;pool2d(...)&lt;/code&gt;&lt;/a&gt;: 2D Pooling.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2805f3d68606c9d06d659f3cc7adbff8d5cef43b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/pool3d&quot;&gt;&lt;code&gt;pool3d(...)&lt;/code&gt;&lt;/a&gt;: 3D Pooling.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1601d2da4d6e8b3bf5302e119c17d975e1cac27f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/pow&quot;&gt;&lt;code&gt;pow(...)&lt;/code&gt;&lt;/a&gt;: Element-wise exponentiation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88a85288b87741a8dfe91d0aee799dedad45c995" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/print_tensor&quot;&gt;&lt;code&gt;print_tensor(...)&lt;/code&gt;&lt;/a&gt;: Prints &lt;code&gt;message&lt;/code&gt; and the tensor value when evaluated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="638e1f6342d572eef4ec0b9adee9930b35ddad7f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/prod&quot;&gt;&lt;code&gt;prod(...)&lt;/code&gt;&lt;/a&gt;: Multiplies the values in a tensor, alongside the specified axis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6973986bf2922feacb0be25d5f711011b8e679e4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/random_binomial&quot;&gt;&lt;code&gt;random_binomial(...)&lt;/code&gt;&lt;/a&gt;: Returns a tensor with random binomial distribution of values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="105ca6a225f55e6a25031832b8d5b528112769c1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/random_normal&quot;&gt;&lt;code&gt;random_normal(...)&lt;/code&gt;&lt;/a&gt;: Returns a tensor with normal distribution of values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0e48b8d096056ec1d3855302eb17eea1d2cbe68" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/random_normal_variable&quot;&gt;&lt;code&gt;random_normal_variable(...)&lt;/code&gt;&lt;/a&gt;: Instantiates a variable with values drawn from a normal distribution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09c2d93f8dbdefcdd8463de2ba030fb8e9122f08" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/random_uniform&quot;&gt;&lt;code&gt;random_uniform(...)&lt;/code&gt;&lt;/a&gt;: Returns a tensor with uniform distribution of values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6732d5b75253ea02ff57c0bc73ff2a201f8bd786" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/random_uniform_variable&quot;&gt;&lt;code&gt;random_uniform_variable(...)&lt;/code&gt;&lt;/a&gt;: Instantiates a variable with values drawn from a uniform distribution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbe21be737b1fe5df1d0f4c3320ec79662e8c736" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/relu&quot;&gt;&lt;code&gt;relu(...)&lt;/code&gt;&lt;/a&gt;: Rectified linear unit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="753302aa14f0b868ca20e7aa58f0ed3529da5768" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/repeat&quot;&gt;&lt;code&gt;repeat(...)&lt;/code&gt;&lt;/a&gt;: Repeats a 2D tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdfb1ce335b5a8d17ca6f348ec3ba3107150d325" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/repeat_elements&quot;&gt;&lt;code&gt;repeat_elements(...)&lt;/code&gt;&lt;/a&gt;: Repeats the elements of a tensor along an axis, like &lt;code&gt;np.repeat&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fb481f9480a363c4a04b9a844ef439ed4a8c14a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/reset_uids&quot;&gt;&lt;code&gt;reset_uids(...)&lt;/code&gt;&lt;/a&gt;: Resets graph identifiers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a63fff7b1a7b1de456882acbf3466456045102fc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/reshape&quot;&gt;&lt;code&gt;reshape(...)&lt;/code&gt;&lt;/a&gt;: Reshapes a tensor to the specified shape.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fbde759dbb815d0f5d0437c95b486e131402063" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/resize_images&quot;&gt;&lt;code&gt;resize_images(...)&lt;/code&gt;&lt;/a&gt;: Resizes the images contained in a 4D tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c0be45a66abbb12d1bb92a38996cdde041c3e05" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/resize_volumes&quot;&gt;&lt;code&gt;resize_volumes(...)&lt;/code&gt;&lt;/a&gt;: Resizes the volume contained in a 5D tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f94f1af3eafc43994e2b75d79e9c8fe7a9124228" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/reverse&quot;&gt;&lt;code&gt;reverse(...)&lt;/code&gt;&lt;/a&gt;: Reverse a tensor along the specified axes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c3eac915a53e9d60176a6c77933b49a0e377db6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/rnn&quot;&gt;&lt;code&gt;rnn(...)&lt;/code&gt;&lt;/a&gt;: Iterates over the time dimension of a tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b1e87d4971d6beedfe0146540792eeb0062fcfe" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/round&quot;&gt;&lt;code&gt;round(...)&lt;/code&gt;&lt;/a&gt;: Element-wise rounding to the closest integer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c7c8301662b4ca8a4708518b16336e8b2a86707" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/separable_conv2d&quot;&gt;&lt;code&gt;separable_conv2d(...)&lt;/code&gt;&lt;/a&gt;: 2D convolution with separable filters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="500322a359067c114986e58db5f53c1c659b51c1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/set_epsilon&quot;&gt;&lt;code&gt;set_epsilon(...)&lt;/code&gt;&lt;/a&gt;: Sets the value of the fuzz factor used in numeric expressions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4477f85fbd0e7aa8a8175ff413849d8b63ec12a4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/set_floatx&quot;&gt;&lt;code&gt;set_floatx(...)&lt;/code&gt;&lt;/a&gt;: Sets the default float type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c99be47b77e6377d07fcf64cdea057eb3a011a07" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/set_image_data_format&quot;&gt;&lt;code&gt;set_image_data_format(...)&lt;/code&gt;&lt;/a&gt;: Sets the value of the image data format convention.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9180cf54e2bb7f4204ede66f6e95750aabeec20" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/set_learning_phase&quot;&gt;&lt;code&gt;set_learning_phase(...)&lt;/code&gt;&lt;/a&gt;: Sets the learning phase to a fixed value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b75bc4be7913b6c2689cea02fdc414b6f2d69fbf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/set_session&quot;&gt;&lt;code&gt;set_session(...)&lt;/code&gt;&lt;/a&gt;: Sets the global TensorFlow session.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5eaf49b1b303edaabad9a843724e44d2a785ba6b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/set_value&quot;&gt;&lt;code&gt;set_value(...)&lt;/code&gt;&lt;/a&gt;: Sets the value of a variable, from a Numpy array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc39abef2f5130a886043a7fa0d92aedaaa7c177" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/shape&quot;&gt;&lt;code&gt;shape(...)&lt;/code&gt;&lt;/a&gt;: Returns the symbolic shape of a tensor or variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ef62bb96c58237bfab2ded18f8d6ea53b48d0b6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/sigmoid&quot;&gt;&lt;code&gt;sigmoid(...)&lt;/code&gt;&lt;/a&gt;: Element-wise sigmoid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba272b4f72604f1a99052f36da8b60e4ddef34a2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/sign&quot;&gt;&lt;code&gt;sign(...)&lt;/code&gt;&lt;/a&gt;: Element-wise sign.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb4af76726489dbee948a89d6cd5ede25fc1c30f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/sin&quot;&gt;&lt;code&gt;sin(...)&lt;/code&gt;&lt;/a&gt;: Computes sin of x element-wise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="824803407ce70fcfa4cf22b4770fd51c4b6685f8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/softmax&quot;&gt;&lt;code&gt;softmax(...)&lt;/code&gt;&lt;/a&gt;: Softmax of a tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de4246ee63e5e17641ae11bc06e48443e41127bd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/softplus&quot;&gt;&lt;code&gt;softplus(...)&lt;/code&gt;&lt;/a&gt;: Softplus of a tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62e4055928d9b3d74fc83f98d025c1312208276d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/softsign&quot;&gt;&lt;code&gt;softsign(...)&lt;/code&gt;&lt;/a&gt;: Softsign of a tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2da01ae67244e156d5f3b6bf32ae97b9898acd2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/sparse_categorical_crossentropy&quot;&gt;&lt;code&gt;sparse_categorical_crossentropy(...)&lt;/code&gt;&lt;/a&gt;: Categorical crossentropy with integer targets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9296fe897fd7361e173366fec8dc5aec5186504b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/spatial_2d_padding&quot;&gt;&lt;code&gt;spatial_2d_padding(...)&lt;/code&gt;&lt;/a&gt;: Pads the 2nd and 3rd dimensions of a 4D tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b538031bdb72e69a8b06a4acd62374bef47011a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/spatial_3d_padding&quot;&gt;&lt;code&gt;spatial_3d_padding(...)&lt;/code&gt;&lt;/a&gt;: Pads 5D tensor with zeros along the depth, height, width dimensions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4b65bd5b8ed190d9b99e70fe58767ca41b90c86" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/sqrt&quot;&gt;&lt;code&gt;sqrt(...)&lt;/code&gt;&lt;/a&gt;: Element-wise square root.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1ddc1b50286628eb6d188393faef16776bf7040" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/square&quot;&gt;&lt;code&gt;square(...)&lt;/code&gt;&lt;/a&gt;: Element-wise square.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="424d08cd60d2b3ced4812ae9641d66f1ab837c4b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/squeeze&quot;&gt;&lt;code&gt;squeeze(...)&lt;/code&gt;&lt;/a&gt;: Removes a 1-dimension from the tensor at index &quot;axis&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88cb508f99d0889ff67b05c7d0adeb50f2483ee7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/stack&quot;&gt;&lt;code&gt;stack(...)&lt;/code&gt;&lt;/a&gt;: Stacks a list of rank &lt;code&gt;R&lt;/code&gt; tensors into a rank &lt;code&gt;R+1&lt;/code&gt; tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f4c9bc7697b84febf1f645c75db572091b569d6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/std&quot;&gt;&lt;code&gt;std(...)&lt;/code&gt;&lt;/a&gt;: Standard deviation of a tensor, alongside the specified axis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24930e63c108b8d05e36c6a68d20cd4879e2d76d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/stop_gradient&quot;&gt;&lt;code&gt;stop_gradient(...)&lt;/code&gt;&lt;/a&gt;: Returns &lt;code&gt;variables&lt;/code&gt; but with zero gradient w.r.t. every other variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f77e69178c26f4a99cbd9f6b1bf87ee723f5872" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/sum&quot;&gt;&lt;code&gt;sum(...)&lt;/code&gt;&lt;/a&gt;: Sum of the values in a tensor, alongside the specified axis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a21a9d5dfb2539eb6453e93aaea295b3e157daa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/switch&quot;&gt;&lt;code&gt;switch(...)&lt;/code&gt;&lt;/a&gt;: Switches between two operations depending on a scalar value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7157b0eefe0e131b48883e490c5cc176cd216131" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/tanh&quot;&gt;&lt;code&gt;tanh(...)&lt;/code&gt;&lt;/a&gt;: Element-wise tanh.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f281b3ec702cae472b4306adaa8afb808c4c0e5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/temporal_padding&quot;&gt;&lt;code&gt;temporal_padding(...)&lt;/code&gt;&lt;/a&gt;: Pads the middle dimension of a 3D tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4602cb411d46bc6195fbc4f5ef6c17a516b6bf07" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/tile&quot;&gt;&lt;code&gt;tile(...)&lt;/code&gt;&lt;/a&gt;: Creates a tensor by tiling &lt;code&gt;x&lt;/code&gt; by &lt;code&gt;n&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f34ac810b23e1122ee5353da9aece0f88b30e97c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/to_dense&quot;&gt;&lt;code&gt;to_dense(...)&lt;/code&gt;&lt;/a&gt;: Converts a sparse tensor into a dense tensor and returns it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7752c3be361cd9fb09a2f14f2d042c2df3b8cde4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/transpose&quot;&gt;&lt;code&gt;transpose(...)&lt;/code&gt;&lt;/a&gt;: Transposes a tensor and returns it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aaac94a1c0dc3635ce065546ff4ce9ac489b0070" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/truncated_normal&quot;&gt;&lt;code&gt;truncated_normal(...)&lt;/code&gt;&lt;/a&gt;: Returns a tensor with truncated random normal distribution of values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59519fb5fc7560b7569203731d533c4df7e045d1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/update_add&quot;&gt;&lt;code&gt;update_add(...)&lt;/code&gt;&lt;/a&gt;: Update the value of &lt;code&gt;x&lt;/code&gt; by adding &lt;code&gt;increment&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96006808c24438c145cf718244d6343b6c1b7cb4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/update_sub&quot;&gt;&lt;code&gt;update_sub(...)&lt;/code&gt;&lt;/a&gt;: Update the value of &lt;code&gt;x&lt;/code&gt; by subtracting &lt;code&gt;decrement&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="880e33a6cba85e09f80670aa9133e4f4d1c8a587" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/var&quot;&gt;&lt;code&gt;var(...)&lt;/code&gt;&lt;/a&gt;: Variance of a tensor, alongside the specified axis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b483dab4eb7cf1ec8fe0d78b746c9f4297b7211" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/variable&quot;&gt;&lt;code&gt;variable(...)&lt;/code&gt;&lt;/a&gt;: Instantiates a variable and returns it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="983daf14731ce23287c0f4a21176bc233e79c0e1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/zeros&quot;&gt;&lt;code&gt;zeros(...)&lt;/code&gt;&lt;/a&gt;: Instantiates an all-zeros variable and returns it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16611fa7e07bfeb7470866df666bc4bc9f9b6500" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backend/zeros_like&quot;&gt;&lt;code&gt;zeros_like(...)&lt;/code&gt;&lt;/a&gt;: Instantiates an all-zeros variable of the same shape as another tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be1fbb6a03272eafdc51b6a7a07a32f78aa5a1b1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;batch_to_space_nd&quot;&gt;&lt;code&gt;batch_to_space_nd(...)&lt;/code&gt;&lt;/a&gt;: BatchToSpace for N-D tensors of type T.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7aa8a836db381d716918ea256f84a1cfe7262adf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;bincount&quot;&gt;&lt;code&gt;bincount(...)&lt;/code&gt;&lt;/a&gt;: Counts the number of occurrences of each value in an integer array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="168efd635de370c0defd5558a3e2c603173afb29" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;bitwise/bitwise_and&quot;&gt;&lt;code&gt;bitwise_and(...)&lt;/code&gt;&lt;/a&gt;: Elementwise computes the bitwise AND of &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8500edcdd127858b845782bfb23dc5545f3070f6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;bitwise/bitwise_and&quot;&gt;&lt;code&gt;tf.bitwise.bitwise_and&lt;/code&gt;&lt;/a&gt;(&lt;strong&gt;x&lt;/strong&gt;, &lt;strong&gt;y&lt;/strong&gt;, name=&lt;code&gt;None&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="428b3db7a8a18956dddccbd4565ab4c62c95cf55" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;bitwise/bitwise_or&quot;&gt;&lt;code&gt;bitwise_or(...)&lt;/code&gt;&lt;/a&gt;: Elementwise computes the bitwise OR of &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86bbc7b249a18d61592302a6f54117f1e0e83feb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;bitwise/bitwise_or&quot;&gt;&lt;code&gt;tf.bitwise.bitwise_or&lt;/code&gt;&lt;/a&gt;(&lt;strong&gt;x&lt;/strong&gt;, &lt;strong&gt;y&lt;/strong&gt;, name=&lt;code&gt;None&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="309159a73af5c41d732b8e0cea312f8c001cdbd7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;bitwise/bitwise_xor&quot;&gt;&lt;code&gt;bitwise_xor(...)&lt;/code&gt;&lt;/a&gt;: Elementwise computes the bitwise XOR of &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a6df2de081804d24060f3da621ba3d874f0d3fe" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;bitwise/bitwise_xor&quot;&gt;&lt;code&gt;tf.bitwise.bitwise_xor&lt;/code&gt;&lt;/a&gt;(&lt;strong&gt;x&lt;/strong&gt;, &lt;strong&gt;y&lt;/strong&gt;, name=&lt;code&gt;None&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50b865d4854957225b70df906b7d32008cf71ef0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;bitwise/invert&quot;&gt;&lt;code&gt;invert(...)&lt;/code&gt;&lt;/a&gt;: Invert (flip) each bit of supported types; for example, type &lt;code&gt;uint8&lt;/code&gt; value 01010101 becomes 10101010.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62e686d3e4c83b9697831fce6e885fb9d6588fa0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;bitwise/invert&quot;&gt;&lt;code&gt;tf.bitwise.invert&lt;/code&gt;&lt;/a&gt;(&lt;strong&gt;x&lt;/strong&gt;, name=&lt;code&gt;None&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbe0322cc0aeab96ea1a81334caed749c304a70b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;bitwise/left_shift&quot;&gt;&lt;code&gt;left_shift(...)&lt;/code&gt;&lt;/a&gt;: Elementwise computes the bitwise left-shift of &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c1d840141b49e89c7d0543d097890c9af3775e6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;bitwise/left_shift&quot;&gt;&lt;code&gt;tf.bitwise.left_shift&lt;/code&gt;&lt;/a&gt;(&lt;strong&gt;x&lt;/strong&gt;, &lt;strong&gt;y&lt;/strong&gt;, name=&lt;code&gt;None&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9de6556f2766d8bf9b090fd8b83a93920a2fef3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;bitwise/right_shift&quot;&gt;&lt;code&gt;right_shift(...)&lt;/code&gt;&lt;/a&gt;: Elementwise computes the bitwise right-shift of &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f88e2b1fef83476a9dedb08060e70663c2d397b2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;bitwise/right_shift&quot;&gt;&lt;code&gt;tf.bitwise.right_shift&lt;/code&gt;&lt;/a&gt;(&lt;strong&gt;x&lt;/strong&gt;, &lt;strong&gt;y&lt;/strong&gt;, name=&lt;code&gt;None&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1d486b22fd902fe3cf7f80d97e59825d54e52be" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;boston_housing/load_data&quot;&gt;&lt;code&gt;load_data(...)&lt;/code&gt;&lt;/a&gt;: Loads the Boston Housing dataset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e2e0c83568175692cb3784a402821c464711d6e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;build_signature_def&quot;&gt;&lt;code&gt;build_signature_def(...)&lt;/code&gt;&lt;/a&gt;: Utility function to build a SignatureDef protocol buffer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f32bea167a1d25f43b54fcbace346f04241df8b5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;build_tensor_info&quot;&gt;&lt;code&gt;build_tensor_info(...)&lt;/code&gt;&lt;/a&gt;: Utility function to build TensorInfo proto from a Tensor. (deprecated)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ca4f7984d1091bc18f1b331b6fb1518cb93cba8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;callbacks/baselogger&quot;&gt;&lt;code&gt;class BaseLogger&lt;/code&gt;&lt;/a&gt;: Callback that accumulates epoch averages of metrics.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b27b52936fa893c08d6ef69f3e9ede961ef15487" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;callbacks/callback&quot;&gt;&lt;code&gt;class Callback&lt;/code&gt;&lt;/a&gt;: Abstract base class used to build new callbacks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b606ecaa1d3dbc51a00d4bb438f8619421b076f1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;callbacks/csvlogger&quot;&gt;&lt;code&gt;class CSVLogger&lt;/code&gt;&lt;/a&gt;: Callback that streams epoch results to a csv file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff37edc52fa34c36ad37bf44532a9cfb93a36d2e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;callbacks/earlystopping&quot;&gt;&lt;code&gt;class EarlyStopping&lt;/code&gt;&lt;/a&gt;: Stop training when a monitored quantity has stopped improving.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d730ec12623cf006dbab83d4114a9e8b48e4ad3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;callbacks/history&quot;&gt;&lt;code&gt;class History&lt;/code&gt;&lt;/a&gt;: Callback that records events into a &lt;code&gt;History&lt;/code&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8653be941be39afb5520497e0f13dff0521986c7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;callbacks/lambdacallback&quot;&gt;&lt;code&gt;class LambdaCallback&lt;/code&gt;&lt;/a&gt;: Callback for creating simple, custom callbacks on-the-fly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b13c26c771f805273b29b6309f1e2a5bd9bc53f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;callbacks/learningratescheduler&quot;&gt;&lt;code&gt;class LearningRateScheduler&lt;/code&gt;&lt;/a&gt;: Learning rate scheduler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1199d5151f3087385a0fa48d187682928a5fe79c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;callbacks/modelcheckpoint&quot;&gt;&lt;code&gt;class ModelCheckpoint&lt;/code&gt;&lt;/a&gt;: Save the model after every epoch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0abd422fde7cdb9f0a098c8bdc4ffb1d6a54e7f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;callbacks/progbarlogger&quot;&gt;&lt;code&gt;class ProgbarLogger&lt;/code&gt;&lt;/a&gt;: Callback that prints metrics to stdout.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8b94e59dc755470d6655867b13c88116176442c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;callbacks/reducelronplateau&quot;&gt;&lt;code&gt;class ReduceLROnPlateau&lt;/code&gt;&lt;/a&gt;: Reduce learning rate when a metric has stopped improving.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e0e719f038008d5fe27a43296c824f5bf7bcee0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;callbacks/remotemonitor&quot;&gt;&lt;code&gt;class RemoteMonitor&lt;/code&gt;&lt;/a&gt;: Callback used to stream events to a server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0132a72b22b3a669279c494566c89bb1477fe342" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;callbacks/tensorboard&quot;&gt;&lt;code&gt;class TensorBoard&lt;/code&gt;&lt;/a&gt;: Enable visualizations for TensorBoard.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="332ae60873bf828628d70462a293335841b303f9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;callbacks/terminateonnan&quot;&gt;&lt;code&gt;class TerminateOnNaN&lt;/code&gt;&lt;/a&gt;: Callback that terminates training when a NaN loss is encountered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d351162abf4bda5fc9b691230a54c0134150481" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;case&quot;&gt;&lt;code&gt;tf.case&lt;/code&gt;&lt;/a&gt; supports nested structures as implemented in &lt;code&gt;tf.contrib.framework.nest&lt;/code&gt;. All of the callables must return the same (possibly nested) value structure of lists, tuples, and/or named tuples. Singleton lists and tuples form the only exceptions to this: when returned by a callable, they are implicitly unpacked to single values. This behavior is disabled by passing &lt;code&gt;strict=True&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae7465c15ab5c9ed1e06519add6984befa666a36" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;cast&quot;&gt;&lt;code&gt;cast(...)&lt;/code&gt;&lt;/a&gt;: Casts a tensor to a new type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa91bd51f1232f0c46190a4ab7cd1231a2ac0da4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;cast&quot;&gt;&lt;code&gt;tf.cast&lt;/code&gt;&lt;/a&gt;(&lt;strong&gt;x&lt;/strong&gt;, dtype, name=&lt;code&gt;None&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c227090ca9402cde4cf0d2eeca371371b3d287b6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;checkpoint#save&quot;&gt;&lt;code&gt;Checkpoint.save&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;checkpoint#restore&quot;&gt;&lt;code&gt;Checkpoint.restore&lt;/code&gt;&lt;/a&gt; write and read object-based checkpoints, in contrast to TensorFlow 1.x's &lt;a href=&quot;../compat/v1/train/saver&quot;&gt;&lt;code&gt;tf.compat.v1.train.Saver&lt;/code&gt;&lt;/a&gt; which writes and reads &lt;code&gt;variable.name&lt;/code&gt; based checkpoints. Object-based checkpointing saves a graph of dependencies between Python objects (&lt;code&gt;Layer&lt;/code&gt;s, &lt;code&gt;Optimizer&lt;/code&gt;s, &lt;code&gt;Variable&lt;/code&gt;s, etc.) with named edges, and this graph is used to match variables when restoring a checkpoint. It can be more robust to changes in the Python program, and helps to support restore-on-create for variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23d0824fe5e9f06a07c07336c623bc178d5df8fc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;cifar10/load_data&quot;&gt;&lt;code&gt;load_data(...)&lt;/code&gt;&lt;/a&gt;: Loads CIFAR10 dataset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4626e9f39a2f03319e77bda464aaedd01c62fdc1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;cifar100/load_data&quot;&gt;&lt;code&gt;load_data(...)&lt;/code&gt;&lt;/a&gt;: Loads CIFAR100 dataset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b59fd36f2549aac02c056d3387453b36e537809" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;classification_signature_def&quot;&gt;&lt;code&gt;classification_signature_def(...)&lt;/code&gt;&lt;/a&gt;: Creates classification signature from given examples and predictions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7154274080ddb1f3fd02a646ef1647f3f4d6ded5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;clip_by_value&quot;&gt;&lt;code&gt;tf.clip_by_value&lt;/code&gt;&lt;/a&gt;(&lt;strong&gt;t&lt;/strong&gt;, clip_value_min, clip_value_max, name=&lt;code&gt;None&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32491fc28a6955a7e43195445311fd4249cb1bc8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;cluster_resolver/clusterresolver&quot;&gt;&lt;code&gt;class ClusterResolver&lt;/code&gt;&lt;/a&gt;: Abstract class for all implementations of ClusterResolvers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e6ddb7851fa8f58424d2c2f02b592b69538b7d3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;cluster_resolver/gceclusterresolver&quot;&gt;&lt;code&gt;class GCEClusterResolver&lt;/code&gt;&lt;/a&gt;: ClusterResolver for Google Compute Engine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23aff50ce5b05f0c68bc89e4af097b45749b64ba" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;cluster_resolver/kubernetesclusterresolver&quot;&gt;&lt;code&gt;class KubernetesClusterResolver&lt;/code&gt;&lt;/a&gt;: ClusterResolver for Kubernetes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f310c5722a27c228f272649cc649fbcb75dddf2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;cluster_resolver/simpleclusterresolver&quot;&gt;&lt;code&gt;class SimpleClusterResolver&lt;/code&gt;&lt;/a&gt;: Simple implementation of ClusterResolver that accepts a ClusterSpec.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b74862d67e49ed5f5b8a41e1b98c06e70d7a3e6f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;cluster_resolver/slurmclusterresolver&quot;&gt;&lt;code&gt;class SlurmClusterResolver&lt;/code&gt;&lt;/a&gt;: ClusterResolver for system with Slurm workload manager.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e12304d1f5c11560e91d1e305ea8b01a39b3046d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;cluster_resolver/tfconfigclusterresolver&quot;&gt;&lt;code&gt;class TFConfigClusterResolver&lt;/code&gt;&lt;/a&gt;: Implementation of a ClusterResolver which reads the TF_CONFIG EnvVar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b55c835717d2c1630b63cf2444bf929cae0e07e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;cluster_resolver/tpuclusterresolver&quot;&gt;&lt;code&gt;class TPUClusterResolver&lt;/code&gt;&lt;/a&gt;: Cluster Resolver for Google Cloud TPUs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c7ab9bcbcd115b104175dcfd30ef4b5caf34f85" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;cluster_resolver/unionresolver&quot;&gt;&lt;code&gt;class UnionResolver&lt;/code&gt;&lt;/a&gt;: Performs a union on underlying ClusterResolvers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c43bd128cafb2e8600e9bcfd21dca777692c3539" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;compat/as_bytes&quot;&gt;&lt;code&gt;as_bytes(...)&lt;/code&gt;&lt;/a&gt;: Converts &lt;code&gt;bytearray&lt;/code&gt;, &lt;code&gt;bytes&lt;/code&gt;, or unicode python input types to &lt;code&gt;bytes&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cbeb690d1d9e85977a22f51b572d50aa0c06a70" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;compat/as_str_any&quot;&gt;&lt;code&gt;as_str_any(...)&lt;/code&gt;&lt;/a&gt;: Converts input to &lt;code&gt;str&lt;/code&gt; type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92f9b0ff36237a901929db066efac508e5fc89c0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;compat/as_text&quot;&gt;&lt;code&gt;as_str(...)&lt;/code&gt;&lt;/a&gt;: Converts any string-like python input types to unicode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d4065554768611a2189eca96819dd029d023bfa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;compat/as_text&quot;&gt;&lt;code&gt;as_text(...)&lt;/code&gt;&lt;/a&gt;: Converts any string-like python input types to unicode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30d456e3023b368bbfd269b49595cc0cd396598c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;compat/dimension_at_index&quot;&gt;&lt;code&gt;dimension_at_index(...)&lt;/code&gt;&lt;/a&gt;: Compatibility utility required to allow for both V1 and V2 behavior in TF.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d213fff2bc4e51469abf5027865ad3ca198bda9d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;compat/dimension_value&quot;&gt;&lt;code&gt;dimension_value(...)&lt;/code&gt;&lt;/a&gt;: Compatibility utility required to allow for both V1 and V2 behavior in TF.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="793a33aade925ace0e108a62bde4102b003e9c9c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;compat/forward_compatibility_horizon&quot;&gt;&lt;code&gt;forward_compatibility_horizon(...)&lt;/code&gt;&lt;/a&gt;: Context manager for testing forward compatibility of generated graphs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="223d6433eac4454e3fb0fd12ab4cf66dc0074f2c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;compat/forward_compatible&quot;&gt;&lt;code&gt;forward_compatible(...)&lt;/code&gt;&lt;/a&gt;: Return true if the forward compatibility window has expired.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a6bb65733bd205df38456c8e278a4ac98974ac2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;compat/path_to_str&quot;&gt;&lt;code&gt;path_to_str(...)&lt;/code&gt;&lt;/a&gt;: Converts input which is a &lt;code&gt;PathLike&lt;/code&gt; object to &lt;code&gt;str&lt;/code&gt; type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af5b2948661e030c89cc887ff934f127b0791273" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;compat/v1&quot;&gt;&lt;code&gt;v1&lt;/code&gt;&lt;/a&gt; module: Bring in all of the public TensorFlow interface into this module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c02fb86858f4c3da732aab0d2cf3d96c1874a30" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;compat/v1/disable_eager_execution&quot;&gt;&lt;code&gt;tf.compat.v1.disable_eager_execution()&lt;/code&gt;&lt;/a&gt; is called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abd4fd5bbd959ca78124b8ff2b66ce36c3c8b5ec" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;compat/v1/get_default_graph&quot;&gt;&lt;code&gt;tf.compat.v1.get_default_graph()&lt;/code&gt;&lt;/a&gt; can be used to obtain the default graph.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c6fddce3ed816f25ceb73f8e0fc0be57d352de4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;compat/v2&quot;&gt;&lt;code&gt;v2&lt;/code&gt;&lt;/a&gt; module: Bring in all of the public TensorFlow interface into this module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8fdf64b5482bfb83a0463b10bc49b2b991d3d57" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;concat&quot;&gt;&lt;code&gt;tf.concat&lt;/code&gt;&lt;/a&gt;(&lt;strong&gt;values&lt;/strong&gt;, axis, name=&lt;code&gt;'concat'&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="985a76d188f0905b6c4f1b3e17953cc550853e8a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;cond&quot;&gt;&lt;code&gt;tf.cond&lt;/code&gt;&lt;/a&gt; supports nested structures as implemented in &lt;code&gt;tensorflow.python.util.nest&lt;/code&gt;. Both &lt;code&gt;true_fn&lt;/code&gt; and &lt;code&gt;false_fn&lt;/code&gt; must return the same (possibly nested) value structure of lists, tuples, and/or named tuples. Singleton lists and tuples form the only exceptions to this: when returned by &lt;code&gt;true_fn&lt;/code&gt; and/or &lt;code&gt;false_fn&lt;/code&gt;, they are implicitly unpacked to single values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4af3d0db0c980a1781caf3786c96cccf71abc48e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;config/experimental&quot;&gt;&lt;code&gt;experimental&lt;/code&gt;&lt;/a&gt; module: Public API for tf.config.experimental namespace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b925d048e0f385cc0812be785910a275266123f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;config/experimental_connect_to_cluster&quot;&gt;&lt;code&gt;experimental_connect_to_cluster(...)&lt;/code&gt;&lt;/a&gt;: Connects to the given cluster.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be345a6f21a61bcb737378b7aee78e9c87e93d8f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;config/experimental_connect_to_host&quot;&gt;&lt;code&gt;experimental_connect_to_host(...)&lt;/code&gt;&lt;/a&gt;: Connects to a single machine to enable remote execution on it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14dbfc1fe4bf5881f0b3158e6dd6bc29db1e45a3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;config/experimental_functions_run_eagerly&quot;&gt;&lt;code&gt;experimental_functions_run_eagerly(...)&lt;/code&gt;&lt;/a&gt;: Returns the value of the &lt;code&gt;experimental_run_functions_eagerly&lt;/code&gt; setting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cdaf7a4c65756aa5ff8ecf6d197b8b0e7bde54e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;config/experimental_run_functions_eagerly&quot;&gt;&lt;code&gt;experimental_run_functions_eagerly(...)&lt;/code&gt;&lt;/a&gt;: Enables / disables eager execution of &lt;a href=&quot;function&quot;&gt;&lt;code&gt;tf.function&lt;/code&gt;&lt;/a&gt;s.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="907d974ddb7a136d0fec7dac0ea3a76bdc8894be" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;config/experimental_run_functions_eagerly&quot;&gt;&lt;code&gt;tf.config.experimental_run_functions_eagerly(True)&lt;/code&gt;&lt;/a&gt; is called:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcea8627a0010d7c8d227d289813e6f60cb4e1c7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;config/get_logical_device_configuration&quot;&gt;&lt;code&gt;get_logical_device_configuration(...)&lt;/code&gt;&lt;/a&gt;: Get the virtual device configuration for a &lt;a href=&quot;config/physicaldevice&quot;&gt;&lt;code&gt;tf.config.PhysicalDevice&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9308902032527780ab41ea8e35bd76ea84b213ec" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;config/get_soft_device_placement&quot;&gt;&lt;code&gt;get_soft_device_placement(...)&lt;/code&gt;&lt;/a&gt;: Get if soft device placement is enabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca19c91f905a78a90089ea8d92131cdc1a70eead" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;config/get_visible_devices&quot;&gt;&lt;code&gt;get_visible_devices(...)&lt;/code&gt;&lt;/a&gt;: Get the list of visible physical devices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73eec38d3a6f051706262965c09d412ecaf73d56" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;config/list_logical_devices&quot;&gt;&lt;code&gt;list_logical_devices(...)&lt;/code&gt;&lt;/a&gt;: Return a list of logical devices created by runtime.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66286a8894c7338ebe69b6cce850346bbd0df20c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;config/list_physical_devices&quot;&gt;&lt;code&gt;list_physical_devices(...)&lt;/code&gt;&lt;/a&gt;: Return a list of physical devices visible to the host runtime.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ebc3c2ae7abcb9d612420e110ab3b63575147af" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;config/logicaldevice&quot;&gt;&lt;code&gt;class LogicalDevice&lt;/code&gt;&lt;/a&gt;: Abstraction for a logical device initialized by the runtime.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86babdc6294bda6f257ff411458ce1ace1e6cf94" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;config/logicaldeviceconfiguration&quot;&gt;&lt;code&gt;class LogicalDeviceConfiguration&lt;/code&gt;&lt;/a&gt;: Configuration class for a logical devices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0698e4e3775932640b1424f608edac68b43c9c72" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;config/optimizer&quot;&gt;&lt;code&gt;optimizer&lt;/code&gt;&lt;/a&gt; module: Public API for tf.config.optimizer namespace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9cced5376d714bb333c9f762c437b2f343fe178" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;config/physicaldevice&quot;&gt;&lt;code&gt;class PhysicalDevice&lt;/code&gt;&lt;/a&gt;: Abstraction for a locally visible physical device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dbe9b163a3689d71c42763aff820a7d01758d44" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;config/set_logical_device_configuration&quot;&gt;&lt;code&gt;set_logical_device_configuration(...)&lt;/code&gt;&lt;/a&gt;: Set the logical device configuration for a &lt;a href=&quot;config/physicaldevice&quot;&gt;&lt;code&gt;tf.config.PhysicalDevice&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fb928e7986b6eaa6d8ab72ef7dbffc040e34083" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;config/set_soft_device_placement&quot;&gt;&lt;code&gt;set_soft_device_placement(...)&lt;/code&gt;&lt;/a&gt;: Set if soft device placement is enabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06561dece8cab58821dbd872f38dfb3da6c5a241" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;config/set_visible_devices&quot;&gt;&lt;code&gt;set_visible_devices(...)&lt;/code&gt;&lt;/a&gt;: Set the list of visible devices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f2a9a8b56891d73e28b1f19fdf6c79610f788d5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;config/threading&quot;&gt;&lt;code&gt;threading&lt;/code&gt;&lt;/a&gt; module: Public API for tf.config.threading namespace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3d2894244ce6c8e9f3831716588c71b3b1025f3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;confusion_matrix&quot;&gt;&lt;code&gt;confusion_matrix(...)&lt;/code&gt;&lt;/a&gt;: Computes the confusion matrix from predictions and labels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="307206af5d06c0f848063afcfe8906dfd1735e5b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;constant&quot;&gt;&lt;code&gt;tf.constant&lt;/code&gt;&lt;/a&gt; has no effect if an eager Tensor is passed as the &lt;code&gt;value&lt;/code&gt;, it even transmits gradients:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd6a1e38f8eca275b9b43688fcaa90c9b0d4dc01" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;constant&quot;&gt;&lt;code&gt;tf.constant&lt;/code&gt;&lt;/a&gt; supports arbitrary constants, not just uniform scalar Tensors like &lt;a href=&quot;fill&quot;&gt;&lt;code&gt;tf.fill&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5acdf563ad059ee88fb9e243b36568edf6464a60" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;constraints/maxnorm&quot;&gt;&lt;code&gt;class MaxNorm&lt;/code&gt;&lt;/a&gt;: MaxNorm weight constraint.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb70fdb9666ff7e0870db683423c2cc9cd6ad2b0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;constraints/maxnorm&quot;&gt;&lt;code&gt;class max_norm&lt;/code&gt;&lt;/a&gt;: MaxNorm weight constraint.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d48829397f320753a90746560a56d8aa82035fd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;constraints/minmaxnorm&quot;&gt;&lt;code&gt;class MinMaxNorm&lt;/code&gt;&lt;/a&gt;: MinMaxNorm weight constraint.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5266e63df6694f7712307bdccfd2d5765ca67263" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;constraints/minmaxnorm&quot;&gt;&lt;code&gt;class min_max_norm&lt;/code&gt;&lt;/a&gt;: MinMaxNorm weight constraint.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44784ad889f96d2efcaf440af3d3f321943f185e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;constraints/nonneg&quot;&gt;&lt;code&gt;class NonNeg&lt;/code&gt;&lt;/a&gt;: Constrains the weights to be non-negative.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b339df5cf62ce8cf56bcf177cfaf0313ac31159" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;constraints/nonneg&quot;&gt;&lt;code&gt;class non_neg&lt;/code&gt;&lt;/a&gt;: Constrains the weights to be non-negative.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="528f4f9bd40399bb4a0f2cb0229b697ee54ad8a9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;constraints/radialconstraint&quot;&gt;&lt;code&gt;class RadialConstraint&lt;/code&gt;&lt;/a&gt;: Constrains &lt;code&gt;Conv2D&lt;/code&gt; kernel weights to be the same for each radius.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c87c47572008d753fb1c8bdd31039340925f237" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;constraints/radialconstraint&quot;&gt;&lt;code&gt;class radial_constraint&lt;/code&gt;&lt;/a&gt;: Constrains &lt;code&gt;Conv2D&lt;/code&gt; kernel weights to be the same for each radius.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57bf78cf0d6a3ac26026933b475c38869633baca" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;constraints/unitnorm&quot;&gt;&lt;code&gt;class UnitNorm&lt;/code&gt;&lt;/a&gt;: Constrains the weights incident to each hidden unit to have unit norm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4197b02525f8db4c8cbca5627c15aae27264c152" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;constraints/unitnorm&quot;&gt;&lt;code&gt;class unit_norm&lt;/code&gt;&lt;/a&gt;: Constrains the weights incident to each hidden unit to have unit norm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b23de412b0378badca45055cb4089aa45b35c86" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;contains_saved_model&quot;&gt;&lt;code&gt;maybe_saved_model_directory(...)&lt;/code&gt;&lt;/a&gt;: Checks whether the provided export directory could contain a SavedModel.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e097de26cd7fb8b31b52bf4af95b0b8fb3af0d3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;convert_to_tensor&quot;&gt;&lt;code&gt;tf.convert_to_tensor&lt;/code&gt;&lt;/a&gt; is similar but:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01aff6f49ff78240ff63d74e50dcbccc9fe3a980" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;count_nonzero&quot;&gt;&lt;code&gt;count_nonzero(...)&lt;/code&gt;&lt;/a&gt;: Computes number of nonzero elements across dimensions of a tensor. (deprecated arguments) (deprecated arguments)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89f6278e086a6d32c939c80143138e12ab3593b4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;data/dataset&quot;&gt;&lt;code&gt;class Dataset&lt;/code&gt;&lt;/a&gt;: Represents a potentially large set of elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea3f51e109d5b9b326cb943498c07c575833ea02" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;data/dataset&quot;&gt;&lt;code&gt;tf.data.Dataset&lt;/code&gt;&lt;/a&gt; API for input pipelines.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e531887bf642a2e257671466304c6d760627847e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;data/datasetspec&quot;&gt;&lt;code&gt;class DatasetSpec&lt;/code&gt;&lt;/a&gt;: Type specification for &lt;a href=&quot;data/dataset&quot;&gt;&lt;code&gt;tf.data.Dataset&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84cbc5ddf999605cf01c82983c8743981c608414" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;data/experimental&quot;&gt;&lt;code&gt;experimental&lt;/code&gt;&lt;/a&gt; module: Experimental API for building input pipelines.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44ec8ef0e5f7665ab9f0a01992f3c7aa503712f4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;data/fixedlengthrecorddataset&quot;&gt;&lt;code&gt;class FixedLengthRecordDataset&lt;/code&gt;&lt;/a&gt;: A &lt;code&gt;Dataset&lt;/code&gt; of fixed-length records from one or more binary files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a747f38e410a9beaa24bde7c71f828cb2a503b6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;data/get_output_classes&quot;&gt;&lt;code&gt;get_output_classes(...)&lt;/code&gt;&lt;/a&gt;: Returns the output classes of a &lt;code&gt;Dataset&lt;/code&gt; or &lt;code&gt;Iterator&lt;/code&gt; elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="debc0346d6c95f3585988e81cd83dd4b7e92d49e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;data/get_output_shapes&quot;&gt;&lt;code&gt;get_output_shapes(...)&lt;/code&gt;&lt;/a&gt;: Returns the output shapes of a &lt;code&gt;Dataset&lt;/code&gt; or &lt;code&gt;Iterator&lt;/code&gt; elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3def82fa9abb9a1151f0344ea657ec380c2eb6ed" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;data/get_output_types&quot;&gt;&lt;code&gt;get_output_types(...)&lt;/code&gt;&lt;/a&gt;: Returns the output shapes of a &lt;code&gt;Dataset&lt;/code&gt; or &lt;code&gt;Iterator&lt;/code&gt; elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2406db30be4339c438b3f69a115855a4b32523d1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;data/iterator&quot;&gt;&lt;code&gt;class Iterator&lt;/code&gt;&lt;/a&gt;: Represents the state of iterating through a &lt;code&gt;Dataset&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b9f0a8c2df546cca3057b9450fab1e160ae25eb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;data/make_initializable_iterator&quot;&gt;&lt;code&gt;make_initializable_iterator(...)&lt;/code&gt;&lt;/a&gt;: Creates a &lt;a href=&quot;data/iterator&quot;&gt;&lt;code&gt;tf.compat.v1.data.Iterator&lt;/code&gt;&lt;/a&gt; for enumerating the elements of a dataset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0b9f29cabc8546eddb0013466a26ef62820798f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;data/make_one_shot_iterator&quot;&gt;&lt;code&gt;make_one_shot_iterator(...)&lt;/code&gt;&lt;/a&gt;: Creates a &lt;a href=&quot;data/iterator&quot;&gt;&lt;code&gt;tf.compat.v1.data.Iterator&lt;/code&gt;&lt;/a&gt; for enumerating the elements of a dataset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d91e45e74a16d2f9ed6603bda0c7f21a949ba2c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;data/options&quot;&gt;&lt;code&gt;class Options&lt;/code&gt;&lt;/a&gt;: Represents options for tf.data.Dataset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28d412e46d4f6a1e998f38c6c144c77702329f58" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;data/textlinedataset&quot;&gt;&lt;code&gt;class TextLineDataset&lt;/code&gt;&lt;/a&gt;: A &lt;code&gt;Dataset&lt;/code&gt; comprising lines from one or more text files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e353190abe58aff08723f72c62cec61a0cb95886" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;data/tfrecorddataset&quot;&gt;&lt;code&gt;class TFRecordDataset&lt;/code&gt;&lt;/a&gt;: A &lt;code&gt;Dataset&lt;/code&gt; comprising records from one or more TFRecord files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d6706ffb2515d6f7ceda7b03f677725804c6e87" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;dataset#interleave&quot;&gt;&lt;code&gt;tf.data.Dataset.interleave()&lt;/code&gt;&lt;/a&gt; is a generalization of &lt;code&gt;flat_map&lt;/code&gt;, since &lt;code&gt;flat_map&lt;/code&gt; produces the same output as &lt;a href=&quot;dataset#interleave&quot;&gt;&lt;code&gt;tf.data.Dataset.interleave(cycle_length=1)&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e648ee3d2c32d6297fea64d3d4efefced06d9a68" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;datasets/boston_housing&quot;&gt;&lt;code&gt;boston_housing&lt;/code&gt;&lt;/a&gt; module: Boston housing price regression dataset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="650ddbcfe973c292e65932e9e873e17f31beb997" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;datasets/cifar10&quot;&gt;&lt;code&gt;cifar10&lt;/code&gt;&lt;/a&gt; module: CIFAR10 small images classification dataset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de1ecbd2fae2210665e083febd11c13f7a64378d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;datasets/cifar100&quot;&gt;&lt;code&gt;cifar100&lt;/code&gt;&lt;/a&gt; module: CIFAR100 small images classification dataset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1db1f104ed147e05941bbd6bc3a3ba9d7b78059" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;datasets/fashion_mnist&quot;&gt;&lt;code&gt;fashion_mnist&lt;/code&gt;&lt;/a&gt; module: Fashion-MNIST dataset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23ebd3799bea63760200e0f697eed0862bc21351" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;datasets/imdb&quot;&gt;&lt;code&gt;imdb&lt;/code&gt;&lt;/a&gt; module: IMDB sentiment classification dataset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1bffbd350620ccd2dc7f5c1a281dc1c85c48496" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;datasets/mnist&quot;&gt;&lt;code&gt;mnist&lt;/code&gt;&lt;/a&gt; module: MNIST handwritten digits dataset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef7405de0b3f277a345185e6b0112889c816d627" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;datasets/reuters&quot;&gt;&lt;code&gt;reuters&lt;/code&gt;&lt;/a&gt; module: Reuters topic classification dataset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c51b4e2ad9b86d970c44d682d2f83c5172814909" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;debugging/assert&quot;&gt;&lt;code&gt;Assert(...)&lt;/code&gt;&lt;/a&gt;: Asserts that the given condition is true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cc64dcc96e2dd9ef3100d9a5c68c0098dbbacc9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;debugging/assert_all_finite&quot;&gt;&lt;code&gt;assert_all_finite(...)&lt;/code&gt;&lt;/a&gt;: Assert that the tensor does not contain any NaN's or Inf's.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7831010eb61da9e88f13570a5df27fdccebb0959" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;debugging/assert_equal&quot;&gt;&lt;code&gt;assert_equal(...)&lt;/code&gt;&lt;/a&gt;: Assert the condition &lt;code&gt;x == y&lt;/code&gt; holds element-wise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ffdd49f5dc3e24f0faecfeda31be5bd56df3105" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;debugging/assert_greater&quot;&gt;&lt;code&gt;assert_greater(...)&lt;/code&gt;&lt;/a&gt;: Assert the condition &lt;code&gt;x &amp;gt; y&lt;/code&gt; holds element-wise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afb0705faa18d3ff8e1d8266d3864e0abdcfa8b9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;debugging/assert_greater_equal&quot;&gt;&lt;code&gt;assert_greater_equal(...)&lt;/code&gt;&lt;/a&gt;: Assert the condition &lt;code&gt;x &amp;gt;= y&lt;/code&gt; holds element-wise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f453dc840343f9f652d91895bb254961406f3bcf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;debugging/assert_integer&quot;&gt;&lt;code&gt;assert_integer(...)&lt;/code&gt;&lt;/a&gt;: Assert that &lt;code&gt;x&lt;/code&gt; is of integer dtype.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82853539286883e47c410791b5307d74b1f519af" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;debugging/assert_less&quot;&gt;&lt;code&gt;assert_less(...)&lt;/code&gt;&lt;/a&gt;: Assert the condition &lt;code&gt;x &amp;lt; y&lt;/code&gt; holds element-wise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="523ce135f04ec5a2be37c0718550c017e9b6aad2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;debugging/assert_less_equal&quot;&gt;&lt;code&gt;assert_less_equal(...)&lt;/code&gt;&lt;/a&gt;: Assert the condition &lt;code&gt;x &amp;lt;= y&lt;/code&gt; holds element-wise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a44f17152b9249180a2bb6dbe2e2c91f1bbf52c6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;debugging/assert_near&quot;&gt;&lt;code&gt;assert_near(...)&lt;/code&gt;&lt;/a&gt;: Assert the condition &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; are close element-wise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44ecb50e6e29aa1b7fd30ff3bc5ee1b07d2e247f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;debugging/assert_negative&quot;&gt;&lt;code&gt;assert_negative(...)&lt;/code&gt;&lt;/a&gt;: Assert the condition &lt;code&gt;x &amp;lt; 0&lt;/code&gt; holds element-wise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f79124b404236cee1b35b0061b96788a0ff5dac3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;debugging/assert_non_negative&quot;&gt;&lt;code&gt;assert_non_negative(...)&lt;/code&gt;&lt;/a&gt;: Assert the condition &lt;code&gt;x &amp;gt;= 0&lt;/code&gt; holds element-wise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="435e15240fd159b72856d2e47c2157ca6b577091" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;debugging/assert_non_positive&quot;&gt;&lt;code&gt;assert_non_positive(...)&lt;/code&gt;&lt;/a&gt;: Assert the condition &lt;code&gt;x &amp;lt;= 0&lt;/code&gt; holds element-wise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0850e7be8d9cffa2450396b082682fcee16e9f43" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;debugging/assert_none_equal&quot;&gt;&lt;code&gt;assert_none_equal(...)&lt;/code&gt;&lt;/a&gt;: Assert the condition &lt;code&gt;x != y&lt;/code&gt; holds for all elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0707bd9bdd223d080128301dcdf30fef74eb345" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;debugging/assert_positive&quot;&gt;&lt;code&gt;assert_positive(...)&lt;/code&gt;&lt;/a&gt;: Assert the condition &lt;code&gt;x &amp;gt; 0&lt;/code&gt; holds element-wise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63aa58eb35292cfbe85a5fd975a50f682ec35d6d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;debugging/assert_proper_iterable&quot;&gt;&lt;code&gt;assert_proper_iterable(...)&lt;/code&gt;&lt;/a&gt;: Static assert that values is a &quot;proper&quot; iterable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="316a3c5d685e131ac24fb92cf1ea3992f7f17bad" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;debugging/assert_rank&quot;&gt;&lt;code&gt;assert_rank(...)&lt;/code&gt;&lt;/a&gt;: Assert that &lt;code&gt;x&lt;/code&gt; has rank equal to &lt;code&gt;rank&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15cc968f62cdc5c7055dcc9e94613779ff6dbff5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;debugging/assert_rank_at_least&quot;&gt;&lt;code&gt;assert_rank_at_least(...)&lt;/code&gt;&lt;/a&gt;: Assert that &lt;code&gt;x&lt;/code&gt; has rank of at least &lt;code&gt;rank&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="402ef338585f529455117fbc0c030eb73094456a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;debugging/assert_rank_in&quot;&gt;&lt;code&gt;assert_rank_in(...)&lt;/code&gt;&lt;/a&gt;: Assert that &lt;code&gt;x&lt;/code&gt; has a rank in &lt;code&gt;ranks&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92ad028e4601a7a5bd6ce46a6e3ef44a749ae14d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;debugging/assert_same_float_dtype&quot;&gt;&lt;code&gt;assert_same_float_dtype(...)&lt;/code&gt;&lt;/a&gt;: Validate and return float type based on &lt;code&gt;tensors&lt;/code&gt; and &lt;code&gt;dtype&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2c94af6c17dc10a9953ce0f016072f387d47067" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;debugging/assert_scalar&quot;&gt;&lt;code&gt;assert_scalar(...)&lt;/code&gt;&lt;/a&gt;: Asserts that the given &lt;code&gt;tensor&lt;/code&gt; is a scalar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="083a359c1b344491cb0115af6f1f62f191b1e343" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;debugging/assert_shapes&quot;&gt;&lt;code&gt;assert_shapes(...)&lt;/code&gt;&lt;/a&gt;: Assert tensor shapes and dimension size relationships between tensors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="875aa924dc8969ef510a8944fee6701382d8c5d0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;debugging/assert_type&quot;&gt;&lt;code&gt;assert_type(...)&lt;/code&gt;&lt;/a&gt;: Asserts that the given &lt;code&gt;Tensor&lt;/code&gt; is of the specified type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df65e92cc88327488e2fbba16e077d5859685bcd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;debugging/check_numerics&quot;&gt;&lt;code&gt;check_numerics(...)&lt;/code&gt;&lt;/a&gt;: Checks a tensor for NaN and Inf values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de3d645f9c691bd99ed0ea4338ed2baa44de549f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;debugging/check_numerics&quot;&gt;&lt;code&gt;tf.debugging.check_numerics&lt;/code&gt;&lt;/a&gt;(&lt;strong&gt;tensor&lt;/strong&gt;, message, name=&lt;code&gt;None&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="989ca0f3c44ef8532eee07546eb3471e02ee4e75" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;debugging/disable_check_numerics&quot;&gt;&lt;code&gt;disable_check_numerics(...)&lt;/code&gt;&lt;/a&gt;: Disable the eager/graph unified numerics checking mechanism.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad36fe9f22d76965073ef7f125bd245e590e466c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;debugging/enable_check_numerics&quot;&gt;&lt;code&gt;enable_check_numerics(...)&lt;/code&gt;&lt;/a&gt;: Enable tensor numerics checking in an eager/graph unified fashion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="273249fc8356b8fe5a09e55f3e7b00c4dc649036" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;debugging/experimental&quot;&gt;&lt;code&gt;experimental&lt;/code&gt;&lt;/a&gt; module: Public API for tf.debugging.experimental namespace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f525e864a86fc58320e3360f952b80bbedab5c9b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;debugging/get_log_device_placement&quot;&gt;&lt;code&gt;get_log_device_placement(...)&lt;/code&gt;&lt;/a&gt;: Get if device placements are logged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d41d5afa16a7c6e7563050c3664369db687a30c9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;debugging/is_numeric_tensor&quot;&gt;&lt;code&gt;is_numeric_tensor(...)&lt;/code&gt;&lt;/a&gt;: Returns &lt;code&gt;True&lt;/code&gt; if the elements of &lt;code&gt;tensor&lt;/code&gt; are numbers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12880966b673429b8eadee30ae5fca2a520bc1e5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;debugging/set_log_device_placement&quot;&gt;&lt;code&gt;set_log_device_placement(...)&lt;/code&gt;&lt;/a&gt;: Set if device placements should be logged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05c793afed7a3d761cda3e7848cd8ae219d228e1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;decode_csv&quot;&gt;&lt;code&gt;decode_csv(...)&lt;/code&gt;&lt;/a&gt;: Convert CSV records to tensors. Each column maps to one tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38831882b83c39114ca0fa746bbc9e97d1aa9b13" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;decode_raw&quot;&gt;&lt;code&gt;decode_raw(...)&lt;/code&gt;&lt;/a&gt;: Convert raw byte strings into tensors. (deprecated arguments)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="884b8ef6a25c8091ceb6f69bc0ae010d13425689" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;depth_to_space&quot;&gt;&lt;code&gt;depth_to_space(...)&lt;/code&gt;&lt;/a&gt;: DepthToSpace for tensors of type T.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41b085f103e052304fea3e245d1f94a6b96ac5ec" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;dimension_at_index&quot;&gt;&lt;code&gt;dimension_at_index(...)&lt;/code&gt;&lt;/a&gt;: Compatibility utility required to allow for both V1 and V2 behavior in TF.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f2544fe8ae6998ee916958a4cd8c8d878066d5f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;dimension_value&quot;&gt;&lt;code&gt;dimension_value(...)&lt;/code&gt;&lt;/a&gt;: Compatibility utility required to allow for both V1 and V2 behavior in TF.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d2e26706be4bba9f0aaf99ed57efdc1776cf8d7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;disable_eager_execution&quot;&gt;&lt;code&gt;tf.compat.v1.disable_eager_execution()&lt;/code&gt;&lt;/a&gt; is called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1fa28175db08b79cbb0b1e8b49de40026666b5b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;distribute/cluster_resolver&quot;&gt;&lt;code&gt;cluster_resolver&lt;/code&gt;&lt;/a&gt; module: Library imports for ClusterResolvers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adcd419a371915703ee52a7ca88e332062b4aa71" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;distribute/crossdeviceops&quot;&gt;&lt;code&gt;class CrossDeviceOps&lt;/code&gt;&lt;/a&gt;: Base class for cross-device reduction and broadcasting algorithms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b75b9efa27f1c399561b94b15eb97c3d2502881d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;distribute/experimental&quot;&gt;&lt;code&gt;experimental&lt;/code&gt;&lt;/a&gt; module: Experimental Distribution Strategy library.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2c8bef743db562389a9dd0facd621dd77c79e8c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;distribute/experimental_set_strategy&quot;&gt;&lt;code&gt;experimental_set_strategy(...)&lt;/code&gt;&lt;/a&gt;: Set a &lt;a href=&quot;distribute/strategy&quot;&gt;&lt;code&gt;tf.distribute.Strategy&lt;/code&gt;&lt;/a&gt; as current without &lt;code&gt;with strategy.scope()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed191434d980a48e9968ade7d91d9196a5bdae45" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;distribute/get_loss_reduction&quot;&gt;&lt;code&gt;get_loss_reduction(...)&lt;/code&gt;&lt;/a&gt;: &lt;a href=&quot;../../distribute/reduceop&quot;&gt;&lt;code&gt;tf.distribute.ReduceOp&lt;/code&gt;&lt;/a&gt; corresponding to the last loss reduction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33a7b6a699588ce473d4d9aa00e58a1becf36158" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;distribute/get_replica_context&quot;&gt;&lt;code&gt;get_replica_context(...)&lt;/code&gt;&lt;/a&gt;: Returns the current &lt;a href=&quot;distribute/replicacontext&quot;&gt;&lt;code&gt;tf.distribute.ReplicaContext&lt;/code&gt;&lt;/a&gt; or &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0970c73496a2710bbb1ff475a314cc7add413cca" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;distribute/get_strategy&quot;&gt;&lt;code&gt;get_strategy(...)&lt;/code&gt;&lt;/a&gt;: Returns the current &lt;a href=&quot;distribute/strategy&quot;&gt;&lt;code&gt;tf.distribute.Strategy&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08b8abfc78692e70c649f2356848205464b19bbb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;distribute/has_strategy&quot;&gt;&lt;code&gt;has_strategy(...)&lt;/code&gt;&lt;/a&gt;: Return if there is a current non-default &lt;a href=&quot;distribute/strategy&quot;&gt;&lt;code&gt;tf.distribute.Strategy&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="964ec49a2f05005c397e9adf279e1398c8e1788d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;distribute/hierarchicalcopyallreduce&quot;&gt;&lt;code&gt;class HierarchicalCopyAllReduce&lt;/code&gt;&lt;/a&gt;: Reduction using hierarchical copy all-reduce.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82d13d7b694997b530fe2adb90f7bbc619201ed7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;distribute/in_cross_replica_context&quot;&gt;&lt;code&gt;in_cross_replica_context(...)&lt;/code&gt;&lt;/a&gt;: Returns &lt;code&gt;True&lt;/code&gt; if in a cross-replica context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f121c54d31fa0bc1722be990ef179417f0d74618" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;distribute/inputcontext&quot;&gt;&lt;code&gt;class InputContext&lt;/code&gt;&lt;/a&gt;: A class wrapping information needed by an input function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="487c4f8e4c3469409dc48f835cf741484ac6e7b2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;distribute/inputreplicationmode&quot;&gt;&lt;code&gt;class InputReplicationMode&lt;/code&gt;&lt;/a&gt;: Replication mode for input function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1196047f6e5dfbfdfc084faec0613b99530482bc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;distribute/mirroredstrategy&quot;&gt;&lt;code&gt;class MirroredStrategy&lt;/code&gt;&lt;/a&gt;: Mirrors vars to distribute across multiple devices and machines.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e757634054553d62e8b5a48ac5d4167e4506c5d0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;distribute/ncclallreduce&quot;&gt;&lt;code&gt;class NcclAllReduce&lt;/code&gt;&lt;/a&gt;: Reduction using NCCL all-reduce.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9ce9e106f4537bafddfee2dbd6d9218dd08c566" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;distribute/onedevicestrategy&quot;&gt;&lt;code&gt;class OneDeviceStrategy&lt;/code&gt;&lt;/a&gt;: A distribution strategy for running on a single device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="474970ac961192de90da4dce3f023b40fbb98554" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;distribute/reduceop&quot;&gt;&lt;code&gt;class ReduceOp&lt;/code&gt;&lt;/a&gt;: Indicates how a set of values should be reduced.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="728f6ae07c07668a7af6a36f79a59f6b4b3cac18" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;distribute/reductiontoonedevice&quot;&gt;&lt;code&gt;class ReductionToOneDevice&lt;/code&gt;&lt;/a&gt;: Always do reduction to one device first and then do broadcasting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ef0490076e2570d4ebbc1d40b7160228224e787" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;distribute/replicacontext&quot;&gt;&lt;code&gt;class ReplicaContext&lt;/code&gt;&lt;/a&gt;: &lt;a href=&quot;distribute/strategy&quot;&gt;&lt;code&gt;tf.distribute.Strategy&lt;/code&gt;&lt;/a&gt; API when in a replica context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea92875e03f6ad5abaf8b8752d7de2c371e8ce02" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;distribute/server&quot;&gt;&lt;code&gt;class Server&lt;/code&gt;&lt;/a&gt;: An in-process TensorFlow server, for use in distributed training.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b4bff7c67b6fb0ec8521c23ca646908d9f7e879" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;distribute/strategy&quot;&gt;&lt;code&gt;class Strategy&lt;/code&gt;&lt;/a&gt;: A list of devices with a state &amp;amp; compute distribution policy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="457173d9ea1f3a1ebb8f500713bb8b5340b69c96" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;distribute/strategy&quot;&gt;&lt;code&gt;class Strategy&lt;/code&gt;&lt;/a&gt;: A state &amp;amp; compute distribution policy on a list of devices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba353d4bddcbbedb50de367c61ad15363a3a7d35" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;distribute/strategy&quot;&gt;&lt;code&gt;tf.distribute.Strategy&lt;/code&gt;&lt;/a&gt; distributes a model by making multiple copies (called &quot;replicas&quot;) acting data-parallel on different elements of the input batch. When performing some variable-update operation, say &lt;code&gt;var.assign_add(x)&lt;/code&gt;, in a model, we need to resolve how to combine the different values for &lt;code&gt;x&lt;/code&gt; computed in the different replicas.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="381df4dc13609e9e55272d91dd07cecf548a7cd8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;distribute/strategyextended&quot;&gt;&lt;code&gt;class StrategyExtended&lt;/code&gt;&lt;/a&gt;: Additional APIs for algorithms that need to be distribution-aware.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d895372018f46c498407f5694a7dd9665213ec3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;distributions/bernoulli&quot;&gt;&lt;code&gt;class Bernoulli&lt;/code&gt;&lt;/a&gt;: Bernoulli distribution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72614121087a7e0bf90809e2612cfa3d60b570c0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;distributions/beta&quot;&gt;&lt;code&gt;class Beta&lt;/code&gt;&lt;/a&gt;: Beta distribution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b8885f56ef04a4ee5aed064ee910e09ba87d9c9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;distributions/categorical&quot;&gt;&lt;code&gt;class Categorical&lt;/code&gt;&lt;/a&gt;: Categorical distribution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40816589fe15cbf08293310f21fe781f0d849da1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;distributions/dirichlet&quot;&gt;&lt;code&gt;class Dirichlet&lt;/code&gt;&lt;/a&gt;: Dirichlet distribution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abf57fef603d1a223fa96430c5b23305987f5456" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;distributions/dirichletmultinomial&quot;&gt;&lt;code&gt;class DirichletMultinomial&lt;/code&gt;&lt;/a&gt;: Dirichlet-Multinomial compound distribution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07ea6c1544020a2559df3aa08d4dc34004e4b603" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;distributions/distribution&quot;&gt;&lt;code&gt;class Distribution&lt;/code&gt;&lt;/a&gt;: A generic probability distribution base class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37693a2a403fcedcb45bc24dc67df95f92c67c7b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;distributions/exponential&quot;&gt;&lt;code&gt;class Exponential&lt;/code&gt;&lt;/a&gt;: Exponential distribution.</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
