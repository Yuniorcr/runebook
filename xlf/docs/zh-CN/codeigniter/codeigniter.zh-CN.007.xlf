<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="codeigniter">
    <body>
      <group id="codeigniter">
        <trans-unit id="a2fe7e4bc7a336b577fec6681dc9d70ef670ac97" translate="yes" xml:space="preserve">
          <source>If you need to load multiple config files normally they will be merged into one master config array. Name collisions can occur, however, if you have identically named array indexes in different config files. To avoid collisions you can set the second parameter to TRUE and each config file will be stored in an array index corresponding to the name of the config file. Example:</source>
          <target state="translated">如果你需要加载多个配置文件,通常它们会被合并到一个主配置阵列中。但是,如果你在不同的配置文件中使用了相同名称的数组索引,可能会发生名称冲突。为了避免冲突,你可以将第二个参数设置为 &quot;true&quot;,每个配置文件将被存储在一个与配置文件名称相对应的数组索引中。例子:如果在不同的配置文件中,有相同名称的数组索引,可以将第二个参数设置为TRUE,每个配置文件都会存储在与配置文件名称对应的数组索引中。</target>
        </trans-unit>
        <trans-unit id="eb9a15f65bdf6c17b3557f92901e9f6d821f21cc" translate="yes" xml:space="preserve">
          <source>If you need to manually delete the cache, you can use the &lt;code&gt;delete_cache()&lt;/code&gt; method:</source>
          <target state="translated">如果需要手动删除缓存，则可以使用 &lt;code&gt;delete_cache()&lt;/code&gt; 方法：</target>
        </trans-unit>
        <trans-unit id="9bd304b504999441a98367ba334731f4df601494" translate="yes" xml:space="preserve">
          <source>If you need to output errors, you should use the appropriately named &lt;code&gt;error()&lt;/code&gt; method. This writes light-red text to STDERR, instead of STDOUT, like &lt;code&gt;write()&lt;/code&gt; and &lt;code&gt;color()&lt;/code&gt; do. This can be useful if you have scripts watching for errors so they don&amp;rsquo;t have to sift through all of the information, only the actual error messages. You use it exactly as you would the &lt;code&gt;write()&lt;/code&gt; method:</source>
          <target state="translated">如果需要输出错误，则应使用适当命名的 &lt;code&gt;error()&lt;/code&gt; 方法。这会将浅红色的文本而不是STDOUT &lt;code&gt;write()&lt;/code&gt; STDERR，就像write（）和 &lt;code&gt;color()&lt;/code&gt; 一样。如果您有脚本在监视错误，这样它们就不必筛选所有信息，而仅筛选实际的错误消息，这将很有用。您可以像 &lt;code&gt;write()&lt;/code&gt; 方法一样使用它：</target>
        </trans-unit>
        <trans-unit id="b987361641408e1bb22f8da61414fa3b652cfb07" translate="yes" xml:space="preserve">
          <source>If you need to provide links from two different result sets, you can pass group names to most of the pagination methods to keep the data separate:</source>
          <target state="translated">如果你需要从两个不同的结果集提供链接,你可以将组名传递给大多数分页方法,以保持数据分离。</target>
        </trans-unit>
        <trans-unit id="818e087ce7bd599c36792af4d338e11b57e30f0a" translate="yes" xml:space="preserve">
          <source>If you need to remove a tempdata value before it expires, you can directly unset it from the &lt;code&gt;$_SESSION&lt;/code&gt; array:</source>
          <target state="translated">如果需要在到期前删除tempdata值，可以直接从 &lt;code&gt;$_SESSION&lt;/code&gt; 数组中取消设置它：</target>
        </trans-unit>
        <trans-unit id="25c3f941e9a4f20ad9f0678712e1ebacf4cf1b1b" translate="yes" xml:space="preserve">
          <source>If you need to retrieve all error messages for failed fields, you can use the &lt;code&gt;getErrors()&lt;/code&gt; method:</source>
          <target state="translated">如果需要检索失败字段的所有错误消息，则可以使用 &lt;code&gt;getErrors()&lt;/code&gt; 方法：</target>
        </trans-unit>
        <trans-unit id="6c2a1126f818590cb9db48cbb16882663cc3a09d" translate="yes" xml:space="preserve">
          <source>If you need to run the site on a host other than simply localhost, you&amp;rsquo;ll first need to add the host to your &lt;code&gt;hosts&lt;/code&gt; file. The exact location of the file varies in each of the main operating systems, though all unix-type systems (include OS X) will typically keep the file at &lt;strong&gt;/etc/hosts&lt;/strong&gt;.</source>
          <target state="translated">如果您需要在除本地主机之外的其他主机上运行站点，则首先需要将该主机添加到您的 &lt;code&gt;hosts&lt;/code&gt; 文件中。尽管所有的UNIX类型的系统（包括OS X）通常会将文件保存在&lt;strong&gt;/ etc / hosts&lt;/strong&gt;上，但是文件的确切位置在每个主要操作系统中都不同。</target>
        </trans-unit>
        <trans-unit id="43c6be9e61a57705dcdda2e66a6cdd1e8eb919b1" translate="yes" xml:space="preserve">
          <source>If you need to send the client an error response you will use the following:</source>
          <target state="translated">如果你需要向客户端发送一个错误响应,你将使用以下方法。</target>
        </trans-unit>
        <trans-unit id="8cbd9ccea4d21409bbe32974505e2711b566c026" translate="yes" xml:space="preserve">
          <source>If you need to set a custom error message for a particular field on some particular rule, use the set_rules() method:</source>
          <target state="translated">如果你需要为某个特定规则的特定字段设置自定义错误信息,请使用set_rules()方法。</target>
        </trans-unit>
        <trans-unit id="4bd2d1ee580d911bcb3c318fd4dc1e4801b66037" translate="yes" xml:space="preserve">
          <source>If you need to specify which page of results to return you can specify the page as the 3rd argument. This can be handy when you have a different manner than the default $_GET varibable to control which page to show.</source>
          <target state="translated">如果你需要指定返回哪一页的结果,你可以指定页面作为第三个参数。当你有一个不同于默认的$_GET变量的方式来控制显示哪一页时,这可以很方便。</target>
        </trans-unit>
        <trans-unit id="8065909a2646f75545f04191141bd71a408580f6" translate="yes" xml:space="preserve">
          <source>If you need to truncate to an exact number of characters please see the &lt;a href=&quot;#ellipsize&quot;&gt;&lt;code&gt;ellipsize()&lt;/code&gt;&lt;/a&gt; function below.</source>
          <target state="translated">如果需要截断精确的字符数，请参见下面的&lt;a href=&quot;#ellipsize&quot;&gt; &lt;code&gt;ellipsize()&lt;/code&gt; &lt;/a&gt;函数。</target>
        </trans-unit>
        <trans-unit id="55f9364bad10ef565253ecc04fc18e3350b3e6f7" translate="yes" xml:space="preserve">
          <source>If you need to truncate to an exact number of characters, please see the &lt;a href=&quot;#ellipsize&quot;&gt;&lt;code&gt;ellipsize()&lt;/code&gt;&lt;/a&gt; function below.</source>
          <target state="translated">如果需要截断精确的字符数，请参见下面的&lt;a href=&quot;#ellipsize&quot;&gt; &lt;code&gt;ellipsize()&lt;/code&gt; &lt;/a&gt;函数。</target>
        </trans-unit>
        <trans-unit id="42b659af2fa5348f709202795a6fb189673bd778" translate="yes" xml:space="preserve">
          <source>If you need to use a buffer string instead of a real - physical - file you can use the first parameter as buffer, the third parameter as file name and the fourth parameter as mime-type:</source>
          <target state="translated">如果你需要使用一个缓冲区字符串而不是真正的物理文件,你可以使用第一个参数作为缓冲区,第三个参数作为文件名,第四个参数作为mime-type。</target>
        </trans-unit>
        <trans-unit id="de8010c97c21d1bed2936b46ab16bdcaa42cbd34" translate="yes" xml:space="preserve">
          <source>If you need to use a constructor in your class make sure you extend the parent constructor:</source>
          <target state="translated">如果你需要在你的类中使用一个构造函数,请确保你扩展了父构造函数。</target>
        </trans-unit>
        <trans-unit id="b3d97a61ed5c3774a0b6335906be0b23af5666ab" translate="yes" xml:space="preserve">
          <source>If you no longer wish to cache a file you can remove the caching tag and it will no longer be refreshed when it expires.</source>
          <target state="translated">如果你不再想缓存一个文件,你可以删除缓存标签,当它过期时将不再被刷新。</target>
        </trans-unit>
        <trans-unit id="134e205616bb69ff5165fc3c5167da800afda5dd" translate="yes" xml:space="preserve">
          <source>If you now browse to your site without specifying any URI segments you&amp;rsquo;ll see the &amp;ldquo;Hello World&amp;rdquo; message.</source>
          <target state="translated">如果您现在浏览到站点而未指定任何URI段，则会看到&amp;ldquo; Hello World&amp;rdquo;消息。</target>
        </trans-unit>
        <trans-unit id="f8212d0501e303cf1f0f2b77f7cbbad3a9075738" translate="yes" xml:space="preserve">
          <source>If you omit the &amp;ldquo;project-root&amp;rdquo; argument, the command will create an &amp;ldquo;appstarter&amp;rdquo; folder, which can be renamed as appropriate.</source>
          <target state="translated">如果省略&amp;ldquo; project-root&amp;rdquo;参数，该命令将创建一个&amp;ldquo; appstarter&amp;rdquo;文件夹，该文件夹可以适当重命名。</target>
        </trans-unit>
        <trans-unit id="5d3a2c859a22038553651bd7475bb374269e7898" translate="yes" xml:space="preserve">
          <source>If you only need a single header, you can pass the name into the &lt;code&gt;getHeader()&lt;/code&gt; method. This will grab the specified header object in a case-insensitive manner if it exists. If not, then it will return &lt;code&gt;null&lt;/code&gt;:</source>
          <target state="translated">如果只需要一个标头，则可以将名称传递到 &lt;code&gt;getHeader()&lt;/code&gt; 方法中。如果指定的标头对象存在，它将以不区分大小写的方式获取。如果不是，那么它将返回 &lt;code&gt;null&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="cca1ffa61ba214cf4b0786ad745eaa5fc614ebc2" translate="yes" xml:space="preserve">
          <source>If you only want to add some extra functionality to your sessions, just extend the base Session class, which is a lot more easier. Read the &lt;a href=&quot;../general/creating_libraries&quot;&gt;Creating Libraries&lt;/a&gt; article to learn how to do that.</source>
          <target state="translated">如果您只想向会话添加一些其他功能，则只需扩展基本Session类即可，这更加容易。阅读&amp;ldquo; &lt;a href=&quot;../general/creating_libraries&quot;&gt;创建库&amp;rdquo;&lt;/a&gt;文章以了解操作方法。</target>
        </trans-unit>
        <trans-unit id="aaad7f7ef981c539b777c6ce32486cac0849ba54" translate="yes" xml:space="preserve">
          <source>If you pass parameters as the second argument, the &lt;code&gt;key&lt;/code&gt; element will be used as the starting key for this operation if &lt;code&gt;$params&lt;/code&gt; is an array; or the starting key may be passed as a string.</source>
          <target state="translated">如果将参数作为第二个参数传递，则如果 &lt;code&gt;$params&lt;/code&gt; 是数组，则 &lt;code&gt;key&lt;/code&gt; 元素将用作此操作的开始键；或者起始键可以作为字符串传递。</target>
        </trans-unit>
        <trans-unit id="2a448e1c47a9a4f8048b48e59da080f45c3216d5" translate="yes" xml:space="preserve">
          <source>If you pass the last parameter the labeled style error messages will be ignored.</source>
          <target state="translated">如果你传递了最后一个参数,标注的样式错误信息将被忽略。</target>
        </trans-unit>
        <trans-unit id="227e36e6a06b632b0d1fc05b662de82bf503a8cb" translate="yes" xml:space="preserve">
          <source>If you plan to add third party packages to your project, or want to keep CodeIgniter up to date easily, we recommend the Composer installation.</source>
          <target state="translated">如果你打算在你的项目中添加第三方包,或者想让CodeIgniter容易更新,我们推荐安装Composer。</target>
        </trans-unit>
        <trans-unit id="515148d0aaf27a46b665cbeddee3a8f6ce8eacc4" translate="yes" xml:space="preserve">
          <source>If you prefer a simpler output, you can use the &lt;code&gt;simpleLinks()&lt;/code&gt; method, which only uses &amp;ldquo;Older&amp;rdquo; and &amp;ldquo;Newer&amp;rdquo; links, instead of the details pagination links:</source>
          <target state="translated">如果您希望输出更简单，可以使用 &lt;code&gt;simpleLinks()&lt;/code&gt; 方法，该方法仅使用&amp;ldquo;较旧&amp;rdquo;和&amp;ldquo;较新&amp;rdquo;链接，而不使用详细信息分页链接：</target>
        </trans-unit>
        <trans-unit id="08ac9b855cde329c7b5e8881e8cb7d7f7c7e1d6b" translate="yes" xml:space="preserve">
          <source>If you prefer not to set preferences using the above method, you can instead put them into a config file. Simply create a new file called image_lib.php, add the $config array in that file. Then save the file in &lt;em&gt;config/image_lib.php&lt;/em&gt; and it will be used automatically. You will NOT need to use the &lt;code&gt;$this-&amp;gt;image_lib-&amp;gt;initialize()&lt;/code&gt; method if you save your preferences in a config file.</source>
          <target state="translated">如果您不想使用上述方法来设置首选项，则可以将其放入配置文件中。只需创建一个名为image_lib.php的新文件，然后在该文件中添加$ config数组即可。然后将文件保存在&lt;em&gt;config / image_lib.php中&lt;/em&gt;，它将自动使用。如果将首选项保存在配置文件中，则无需使用 &lt;code&gt;$this-&amp;gt;image_lib-&amp;gt;initialize()&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="ffaf8a740c7e4d36c3e30e43f47dc40f2bdc0261" translate="yes" xml:space="preserve">
          <source>If you prefer not to set preferences using the above method, you can instead put them into a config file. Simply create a new file called pagination.php, add the &lt;code&gt;$config&lt;/code&gt; array in that file. Then save the file in &lt;em&gt;application/config/pagination.php&lt;/em&gt; and it will be used automatically. You will NOT need to use &lt;code&gt;$this-&amp;gt;pagination-&amp;gt;initialize()&lt;/code&gt; if you save your preferences in a config file.</source>
          <target state="translated">如果您不想使用上述方法来设置首选项，则可以将其放入配置文件中。只需创建一个名为pagination.php的新文件，然后在该文件中添加 &lt;code&gt;$config&lt;/code&gt; 数组即可。然后将文件保存在&lt;em&gt;application / config / pagination.php中&lt;/em&gt;，它将自动使用。如果将首选项保存在配置文件中，则无需使用 &lt;code&gt;$this-&amp;gt;pagination-&amp;gt;initialize()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4d1c0b12173661150bbffd1f775fcc2758e4552b" translate="yes" xml:space="preserve">
          <source>If you prefer not to set preferences using the above method, you can instead put them into a config file. Simply create a new file called the email.php, add the $config array in that file. Then save the file at config/email.php and it will be used automatically. You will NOT need to use the &lt;code&gt;$this-&amp;gt;email-&amp;gt;initialize()&lt;/code&gt; method if you save your preferences in a config file.</source>
          <target state="translated">如果您不想使用上述方法来设置首选项，则可以将其放入配置文件中。只需创建一个名为email.php的新文件，然后在该文件中添加$ config数组即可。然后将文件保存在config / email.php中，它将自动使用。如果将首选项保存在配置文件中，则无需使用 &lt;code&gt;$this-&amp;gt;email-&amp;gt;initialize()&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="7067e66bfed431e2a59e512b56d0c2c88ca8ab67" translate="yes" xml:space="preserve">
          <source>If you prefer not to set preferences using the above method, you can instead put them into a config file. Simply create a new file called the upload.php, add the $config array in that file. Then save the file in: &lt;strong&gt;config/upload.php&lt;/strong&gt; and it will be used automatically. You will NOT need to use the &lt;code&gt;$this-&amp;gt;upload-&amp;gt;initialize()&lt;/code&gt; method if you save your preferences in a config file.</source>
          <target state="translated">如果您不想使用上述方法来设置首选项，则可以将其放入配置文件中。只需创建一个名为upload.php的新文件，然后在该文件中添加$ config数组即可。然后将文件保存在：&lt;strong&gt;config / upload.php中&lt;/strong&gt;，它将被自动使用。如果将首选项保存在配置文件中，则无需使用 &lt;code&gt;$this-&amp;gt;upload-&amp;gt;initialize()&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="37cba1875f0173e216c78d2759e9a617bb7d1839" translate="yes" xml:space="preserve">
          <source>If you prefer not to set preferences using the above method, you can instead put them into the config file. Simply open the &lt;strong&gt;app/Config/Email.php&lt;/strong&gt; file, and set your configs in the Email properties. Then save the file and it will be used automatically. You will NOT need to use the &lt;code&gt;$email-&amp;gt;initialize()&lt;/code&gt; method if you set your preferences in the config file.</source>
          <target state="translated">如果您不想使用上述方法设置首选项，则可以将其放入配置文件中。只需打开&lt;strong&gt;app / Config / Email.php&lt;/strong&gt;文件，然后在&amp;ldquo;电子邮件&amp;rdquo;属性中设置您的配置。然后保存文件，它将自动使用。如果您在配置文件中设置了首选项，则无需使用 &lt;code&gt;$email-&amp;gt;initialize()&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="32128a0d9004d3e8bb1a9524d97c568e764ed91f" translate="yes" xml:space="preserve">
          <source>If you prefer to set your own class names you can pass its value to the third parameter:</source>
          <target state="translated">如果你喜欢设置自己的类名,你可以把它的值传递给第三个参数。</target>
        </trans-unit>
        <trans-unit id="f42f51658746cc314f2ffcacfca6e9c57f703b0e" translate="yes" xml:space="preserve">
          <source>If you prefer to show an error message next to each form field, rather than as a list, you can use the &lt;a href=&quot;../helpers/form_helper#form_error&quot;&gt;&lt;code&gt;form_error()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">如果您希望在每个表单字段旁边而不是列表中显示错误消息，则可以使用&lt;a href=&quot;../helpers/form_helper#form_error&quot;&gt; &lt;code&gt;form_error()&lt;/code&gt; &lt;/a&gt;函数。</target>
        </trans-unit>
        <trans-unit id="9732765708cae5a6297726693216026e6984e781" translate="yes" xml:space="preserve">
          <source>If you prefer you can store your FTP preferences in a config file. Simply create a new file called the ftp.php, add the $config array in that file. Then save the file at &lt;em&gt;application/config/ftp.php&lt;/em&gt; and it will be used automatically.</source>
          <target state="translated">如果愿意，可以将FTP首选项存储在配置文件中。只需创建一个名为ftp.php的新文件，然后在该文件中添加$ config数组即可。然后将文件保存在&lt;em&gt;application / config / ftp.php中&lt;/em&gt;，它将被自动使用。</target>
        </trans-unit>
        <trans-unit id="ff4f9a9589d3266d08310895d4b53855a3641a6e" translate="yes" xml:space="preserve">
          <source>If you prefer you can use regular expressions to define your routing rules. Any valid regular expression is allowed, as are back-references.</source>
          <target state="translated">如果你愿意,你可以使用正则表达式来定义你的路由规则。允许使用任何有效的正则表达式,也允许使用反向引用。</target>
        </trans-unit>
        <trans-unit id="55f60ed7781d8c4a1ef15dba90147cc49b7322bf" translate="yes" xml:space="preserve">
          <source>If you prefer, you can put the unit test class in to strict mode, which will compare the data type as well as the value:</source>
          <target state="translated">如果你喜欢,你可以把单元测试类放到严格模式下,这将比较数据类型以及值。</target>
        </trans-unit>
        <trans-unit id="ed23405e5a26d68c078569662245095af10f2037" translate="yes" xml:space="preserve">
          <source>If you prefer, you can set the cookie by passing data using individual parameters:</source>
          <target state="translated">如果您愿意,您可以通过使用单个参数传递数据来设置cookie。</target>
        </trans-unit>
        <trans-unit id="64eeb11e73af663f42452bf45da189042c7640f3" translate="yes" xml:space="preserve">
          <source>If you provide a DSN string and it is missing some valid settings (e.g. the database character set), which are present in the rest of the configuration fields, CodeIgniter will append them.</source>
          <target state="translated">如果你提供了一个DSN字符串,但缺少了一些有效的设置(例如数据库字符集),而这些设置在其他的配置字段中是存在的,CodeIgniter将附加它们。</target>
        </trans-unit>
        <trans-unit id="b522c503dd8efea9a36425c95fff4de2499e1aa0" translate="yes" xml:space="preserve">
          <source>If you provide a string substitution parameter when an array is expected, i.e. for a variable pair, the substitution is done for the opening variable pair tag, but the closing variable pair tag is not rendered properly:</source>
          <target state="translated">如果你在预期数组时提供了一个字符串替换参数,例如对于一个变量对,替换的对象是打开的变量对标签,但关闭的变量对标签却没有被正确呈现。</target>
        </trans-unit>
        <trans-unit id="820b1ab2830e4c67ad66a56dfe302c8626ceef0a" translate="yes" xml:space="preserve">
          <source>If you rename the &lt;code&gt;Controllers&lt;/code&gt; directory, though, you will not be able to use the automatic method of routing to controllers, and will need to define all of your routes in the routes file.</source>
          <target state="translated">但是，如果重命名 &lt;code&gt;Controllers&lt;/code&gt; 目录，将无法使用自动路由到控制器的方法，并且需要在路由文件中定义所有路由。</target>
        </trans-unit>
        <trans-unit id="38285c43a99c8051dd8f40bd5cbe90d0dc50b3ef" translate="yes" xml:space="preserve">
          <source>If you run the &lt;strong&gt;list&lt;/strong&gt; command, you will see the new command listed under its own &lt;code&gt;demo&lt;/code&gt; group. If you take a close look, you should see how this works fairly easily. The &lt;code&gt;$group&lt;/code&gt; property simply tells it how to organize this command with all of the other commands that exist, telling it what heading to list it under.</source>
          <target state="translated">如果运行&lt;strong&gt;list&lt;/strong&gt;命令，您将在其自己的 &lt;code&gt;demo&lt;/code&gt; 组下看到新命令。如果您仔细看一下，应该会看到它的工作原理。在 &lt;code&gt;$group&lt;/code&gt; 属性只是告诉它如何组织这个命令与所有存在的其他命令，什么航向列表它在告诉它。</target>
        </trans-unit>
        <trans-unit id="420a01bcb3dddf411370a78338f338d8d49ea249" translate="yes" xml:space="preserve">
          <source>If you set the parameter to TRUE any attachments will be cleared as well:</source>
          <target state="translated">如果您将该参数设置为 &quot;TRUE&quot;,任何附件也将被清除。</target>
        </trans-unit>
        <trans-unit id="47a4f82c9d24a5cbe290db0f4e7af53c1de1a667" translate="yes" xml:space="preserve">
          <source>If you set the second parameter to NULL and &lt;code&gt;$filename&lt;/code&gt; is an existing, readable file path, then its content will be read instead.</source>
          <target state="translated">如果将第二个参数设置为NULL并且 &lt;code&gt;$filename&lt;/code&gt; 是现有的可读文件路径，则将改为读取其内容。</target>
        </trans-unit>
        <trans-unit id="7fe98453131de91269c01dac282667ac1134b26c" translate="yes" xml:space="preserve">
          <source>If you set the third parameter to boolean TRUE, then the actual file MIME type (based on the filename extension) will be sent, so that if your browser has a handler for that type - it can use it.</source>
          <target state="translated">如果你把第三个参数设置为boolean TRUE,那么实际的文件MIME类型(基于文件名扩展名)将被发送,所以如果你的浏览器有该类型的处理程序--它可以使用它。</target>
        </trans-unit>
        <trans-unit id="c789c1f6c2e1238e3ed1dc61a1c15d5f60ea2080" translate="yes" xml:space="preserve">
          <source>If you set the value to &lt;code&gt;false&lt;/code&gt;, then it will not follow any redirects at all:</source>
          <target state="translated">如果将值设置为 &lt;code&gt;false&lt;/code&gt; ，则它将完全不遵循任何重定向：</target>
        </trans-unit>
        <trans-unit id="28584ae787d3c9cd353cf23fc0d739433073d9ff" translate="yes" xml:space="preserve">
          <source>If you still have questions about the framework or your own CodeIgniter code, you can:</source>
          <target state="translated">如果你对框架或自己的CodeIgniter代码还有疑问,可以。</target>
        </trans-unit>
        <trans-unit id="b9d314bd31da4b94b15ab549e5d19fb3faf96301" translate="yes" xml:space="preserve">
          <source>If you store your array item in a language file that is not loaded automatically by CI, you&amp;rsquo;ll need to remember to load it in your controller using:</source>
          <target state="translated">如果将数组项存储在CI不会自动加载的语言文件中，则需要记住使用以下命令将其加载到控制器中：</target>
        </trans-unit>
        <trans-unit id="bc97df695b8eeaae5246dabaf286c99452495314" translate="yes" xml:space="preserve">
          <source>If you submit the form you should simply see the form reload. That&amp;rsquo;s because you haven&amp;rsquo;t set up any validation rules yet.</source>
          <target state="translated">如果您提交表单，则应该只看到表单重新加载。这是因为您尚未设置任何验证规则。</target>
        </trans-unit>
        <trans-unit id="48878380f484b23f471a4380ec8bc1aa5b4529c4" translate="yes" xml:space="preserve">
          <source>If you submitted something invalid, or perhaps missed a required item, the form is redisplayed containing your data along with an error message describing the problem.</source>
          <target state="translated">如果你提交的东西无效,或者可能遗漏了一个必要的项目,表格会重新显示,其中包含你的数据以及描述问题的错误信息。</target>
        </trans-unit>
        <trans-unit id="f3b7cdb5dadd7ccefcd07fcf7dbb6f812f858990" translate="yes" xml:space="preserve">
          <source>If you use a &amp;lt;select&amp;gt; menu, this function permits you to display the menu item that was selected.</source>
          <target state="translated">如果使用&amp;lt;select&amp;gt;菜单，则此功能允许您显示所选的菜单项。</target>
        </trans-unit>
        <trans-unit id="652f43665be11137df3e7fe1fd1c0e5c486d4f05" translate="yes" xml:space="preserve">
          <source>If you use an array as the name of a form field, you must supply it as an array to the function. Example:</source>
          <target state="translated">如果使用数组作为表格字段的名称,必须将其作为数组提供给函数。例如:如果使用数组作为表格字段的名称,你必须把它作为数组提供给函数。</target>
        </trans-unit>
        <trans-unit id="91cd0499b54e75ec773a0bbf59d1dbaedfe650a7" translate="yes" xml:space="preserve">
          <source>If you use an object, the class variables will be turned into array elements.</source>
          <target state="translated">如果你使用一个对象,类变量将变成数组元素。</target>
        </trans-unit>
        <trans-unit id="967fb1e41e75ad60779208d940bde78b46d0e730" translate="yes" xml:space="preserve">
          <source>If you use any of the form helper functions listed in this page the form values will be prepped automatically, so there is no need to call this function. Use it only if you are creating your own form elements.</source>
          <target state="translated">如果您使用本页面中列出的任何一个表单辅助函数,表单值会自动预置,因此无需调用该函数。只有在您创建自己的表单元素时才使用该函数。</target>
        </trans-unit>
        <trans-unit id="8eda46119ec43813d676aeca28c7ce6aad335d8c" translate="yes" xml:space="preserve">
          <source>If you use any of the form helper functions listed on this page, and you pass values as an associative array, the form values will be automatically escaped, so there is no need to call this function. Use it only if you are creating your own form elements, which you would pass as strings.</source>
          <target state="translated">如果您使用本页面中列出的任何一个表单辅助函数,并且您以关联数组的形式传递值,表单值将被自动转义,因此没有必要调用这个函数。只有在创建自己的表单元素时,才可以使用这个函数,而这些元素是以字符串形式传递的。</target>
        </trans-unit>
        <trans-unit id="35afdbf06a196d99eed07b5a412e447072b7f1f1" translate="yes" xml:space="preserve">
          <source>If you use any of the form helper functions listed on this page, the form values will be automatically escaped, so there is no need to call this function. Use it only if you are creating your own form elements.</source>
          <target state="translated">如果您使用本页面中列出的任何一个表单辅助函数,表单值将被自动转义,因此没有必要调用这个函数。只有在您创建自己的表单元素时才使用它。</target>
        </trans-unit>
        <trans-unit id="4667fcbdea6ff8448316f8c95a78055fed83a8f3" translate="yes" xml:space="preserve">
          <source>If you use back-references you must use the dollar syntax rather than the double backslash syntax.</source>
          <target state="translated">如果你使用反向引用,你必须使用美元语法而不是双反斜杠语法。</target>
        </trans-unit>
        <trans-unit id="7ac2d0293267d9f069f973bef5a5464d42f1add0" translate="yes" xml:space="preserve">
          <source>If you use data types other than strings, or if you have several different data types, you will place each parameter into its own array, with the data type in the second position:</source>
          <target state="translated">如果你使用的数据类型不是字符串,或者你有几个不同的数据类型,你将把每个参数放入自己的数组中,数据类型在第二个位置。</target>
        </trans-unit>
        <trans-unit id="5b892bdcedb48c694bba2ac902882e0b3c747f6e" translate="yes" xml:space="preserve">
          <source>If you use dynamic queries that change based on information in your URI (when using pagination, for example), each instance of the query will produce its own cache file. It&amp;rsquo;s possible, therefore, to end up with many times more cache files than you have queries.</source>
          <target state="translated">如果您使用基于URI中的信息而变化的动态查询（例如，在使用分页时），则查询的每个实例都会产生自己的缓存文件。因此，最终缓存文件的数量可能是查询所没有的。</target>
        </trans-unit>
        <trans-unit id="6bec09a5c11399ce7442803a10c3045ac7a3bc31" translate="yes" xml:space="preserve">
          <source>If you use multiple function called they will be assembled properly based on whether you are doing an insert or an update:</source>
          <target state="translated">如果你使用多个函数调用,它们将根据你是在进行插入还是更新而正确组合。</target>
        </trans-unit>
        <trans-unit id="03545ad795bed87b760e275cdfc2c43e74441099" translate="yes" xml:space="preserve">
          <source>If you use multiple function calls they will be chained together with AND between them:</source>
          <target state="translated">如果你使用多个函数调用,它们之间会用AND连锁在一起。</target>
        </trans-unit>
        <trans-unit id="15eb4a501ff63693881aa28ece82b9d2ebd2116e" translate="yes" xml:space="preserve">
          <source>If you use multiple method calls they will be chained together with AND between them:</source>
          <target state="translated">如果你使用多个方法调用,它们之间会用AND连锁在一起。</target>
        </trans-unit>
        <trans-unit id="f7574d6e2ddd3b92d121ce18b2a4b4c4aaf9bfad" translate="yes" xml:space="preserve">
          <source>If you use the &lt;a href=&quot;../helpers/form_helper&quot;&gt;form helper&lt;/a&gt;, then &lt;code&gt;form_open()&lt;/code&gt; will automatically insert a hidden csrf field in your forms. If not, then you can use &lt;code&gt;get_csrf_token_name()&lt;/code&gt; and &lt;code&gt;get_csrf_hash()&lt;/code&gt;</source>
          <target state="translated">如果使用&lt;a href=&quot;../helpers/form_helper&quot;&gt;表单帮助器&lt;/a&gt;，则 &lt;code&gt;form_open()&lt;/code&gt; 将自动在表单中插入一个隐藏的csrf字段。如果没有，则可以使用 &lt;code&gt;get_csrf_token_name()&lt;/code&gt; 和 &lt;code&gt;get_csrf_hash()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="94a1c58aabe259e497b4e34f69962dbe43ba4aff" translate="yes" xml:space="preserve">
          <source>If you use the &lt;a href=&quot;../helpers/form_helper&quot;&gt;form helper&lt;/a&gt;, then &lt;code&gt;form_open()&lt;/code&gt; will automatically insert a hidden csrf field in your forms. If not, then you can use the always available &lt;code&gt;csrf_token()&lt;/code&gt; and &lt;code&gt;csrf_hash()&lt;/code&gt; functions</source>
          <target state="translated">如果使用&lt;a href=&quot;../helpers/form_helper&quot;&gt;表单帮助器&lt;/a&gt;，则 &lt;code&gt;form_open()&lt;/code&gt; 将自动在表单中插入一个隐藏的csrf字段。如果没有，则可以使用始终可用的 &lt;code&gt;csrf_token()&lt;/code&gt; 和 &lt;code&gt;csrf_hash()&lt;/code&gt; 函数</target>
        </trans-unit>
        <trans-unit id="eb6297f2fae2a879e7d5f69c4bf3dd6e23be452d" translate="yes" xml:space="preserve">
          <source>If you use this feature you must set up your class constructor to expect data:</source>
          <target state="translated">如果你使用这个功能,你必须设置你的类构造函数来期望数据。</target>
        </trans-unit>
        <trans-unit id="258c70f3dbffeabcc308dea5aa28e8c7d703dc86" translate="yes" xml:space="preserve">
          <source>If you used an array notation for the name, the input would look something like:</source>
          <target state="translated">如果你用数组来表示名称,输入的内容就会像这样。</target>
        </trans-unit>
        <trans-unit id="9be5b9e0fe3003791b329054d76c59106d2d15cc" translate="yes" xml:space="preserve">
          <source>If you used the &amp;ldquo;&amp;ndash;no-dev&amp;rdquo; option when you created the project, it would be appropriate to do so here too, i.e. &lt;code&gt;composer update --no-dev&lt;/code&gt;.</source>
          <target state="translated">如果在创建项目时使用了&amp;ldquo; &amp;ndash;no-dev&amp;rdquo;选项，那么在这里也应该这样做，即 &lt;code&gt;composer update --no-dev&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c15a193e2193feb77ccb6cbebe4f4ac7cd2923e2" translate="yes" xml:space="preserve">
          <source>If you visit your site using the URL you did earlier you should see your new view. The URL was similar to this:</source>
          <target state="translated">如果您使用之前的URL访问您的网站,您应该看到您的新视图。该URL类似于这样。</target>
        </trans-unit>
        <trans-unit id="4d36b0a3bcf698d48ce2b9991a1a3111eccc60a3" translate="yes" xml:space="preserve">
          <source>If you want a specific row returned you can submit the row number as a digit in the first parameter:</source>
          <target state="translated">如果你想要返回一个特定的行,你可以在第一个参数中以数字的形式提交行号。</target>
        </trans-unit>
        <trans-unit id="734f90c33fef947cc599e343a48a5440046b3799" translate="yes" xml:space="preserve">
          <source>If you want to add an extra attribute to be added to every link rendered by the pagination class, you can set them as key/value pairs in the &amp;ldquo;attributes&amp;rdquo; config:</source>
          <target state="translated">如果要添加一个额外的属性以添加到由分页类呈现的每个链接，则可以在&amp;ldquo;属性&amp;rdquo;配置中将它们设置为键/值对：</target>
        </trans-unit>
        <trans-unit id="476f1b6bba495a48ca62d82695c6bcc52950a0fe" translate="yes" xml:space="preserve">
          <source>If you want to add session data one value at a time, &lt;code&gt;set()&lt;/code&gt; also supports this syntax:</source>
          <target state="translated">如果要一次添加一个会话数据一个值，则 &lt;code&gt;set()&lt;/code&gt; 也支持以下语法：</target>
        </trans-unit>
        <trans-unit id="ff5edd8b65e8ad536889f906c728cf96637147b9" translate="yes" xml:space="preserve">
          <source>If you want to add userdata one value at a time, &lt;code&gt;set_userdata()&lt;/code&gt; also supports this syntax:</source>
          <target state="translated">如果要一次添加一个值，则 &lt;code&gt;set_userdata()&lt;/code&gt; 也支持以下语法：</target>
        </trans-unit>
        <trans-unit id="659b631da8122b7d2788d01a6d37b58758732551" translate="yes" xml:space="preserve">
          <source>If you want to benchmark anything within your controller functions you must set your own start/end points.</source>
          <target state="translated">如果你想在你的控制器功能内设置任何基准,你必须设置自己的开始/结束点。</target>
        </trans-unit>
        <trans-unit id="80e860e734d96f9bfb0815518a27a78affa6f4b8" translate="yes" xml:space="preserve">
          <source>If you want to control where the wildcard (%) is placed, you can use an optional third argument. Your options are &amp;lsquo;before&amp;rsquo;, &amp;lsquo;after&amp;rsquo; and &amp;lsquo;both&amp;rsquo; (which is the default).</source>
          <target state="translated">如果要控制通配符（％）的放置位置，则可以使用可选的第三个参数。您可以选择&amp;ldquo;之前&amp;rdquo;，&amp;ldquo;之后&amp;rdquo;和&amp;ldquo;两者&amp;rdquo;（默认设置）。</target>
        </trans-unit>
        <trans-unit id="7d54a2d3a13881810cf3dc63da813e25fff99e7a" translate="yes" xml:space="preserve">
          <source>If you want to create hidden input fields with extra attributes:</source>
          <target state="translated">如果你想创建具有额外属性的隐藏输入字段。</target>
        </trans-unit>
        <trans-unit id="a0dcfb199d823e832d5eb07c5269a001e2afad32" translate="yes" xml:space="preserve">
          <source>If you want to delete all data from a table, you can use the truncate() function, or emptyTable().</source>
          <target state="translated">如果你想从表中删除所有数据,可以使用truncate()函数,或者emptyTable()。</target>
        </trans-unit>
        <trans-unit id="a399a70dd5a4c4eeea8ac23905f8f36b3f812470" translate="yes" xml:space="preserve">
          <source>If you want to delete all data from a table, you can use the truncate() function, or empty_table().</source>
          <target state="translated">如果你想删除一个表中的所有数据,可以使用truncate()函数,或者empty_table()。</target>
        </trans-unit>
        <trans-unit id="097a3aaa88de4581175345c032e0500ef40e865e" translate="yes" xml:space="preserve">
          <source>If you want to download an existing file from your server you&amp;rsquo;ll need to do the following:</source>
          <target state="translated">如果要从服务器下载现有文件，则需要执行以下操作：</target>
        </trans-unit>
        <trans-unit id="d8316fa6d7b91d37d91153a67bb8640df7a285bc" translate="yes" xml:space="preserve">
          <source>If you want to download an existing file from your server you&amp;rsquo;ll need to pass &lt;code&gt;null&lt;/code&gt; explicitly for the second parameter:</source>
          <target state="translated">如果要从服务器下载现有文件，则需要为第二个参数显式传递 &lt;code&gt;null&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="73fcb063d3ffae27a29cc91996403ee156cde23d" translate="yes" xml:space="preserve">
          <source>If you want to experiment with this feature (on your own risk), simply separate the multiple server paths with commas:</source>
          <target state="translated">如果你想试验这个功能(风险自负),只需用逗号将多个服务器路径分开即可。</target>
        </trans-unit>
        <trans-unit id="0104a304532aedb4f22dad1cd34a2e3b5e77b502" translate="yes" xml:space="preserve">
          <source>If you want to filter HTML attribute values, use &lt;a href=&quot;../general/common_functions#html_escape&quot;&gt;&lt;code&gt;html_escape()&lt;/code&gt;&lt;/a&gt; instead!</source>
          <target state="translated">如果要过滤HTML属性值，请改用&lt;a href=&quot;../general/common_functions#html_escape&quot;&gt; &lt;code&gt;html_escape()&lt;/code&gt; &lt;/a&gt;！</target>
        </trans-unit>
        <trans-unit id="7ad24c0ff09ef8edcb7747dd1fda78ec189cedef" translate="yes" xml:space="preserve">
          <source>If you want to log an Exception or an Error, you can use the key of &amp;lsquo;exception&amp;rsquo;, and the value being the Exception or Error itself. A string will be generated from that object containing the error message, the file name and line number. You must still provide the exception placeholder in the message:</source>
          <target state="translated">如果要记录&amp;ldquo;异常&amp;rdquo;或&amp;ldquo;错误&amp;rdquo;，则可以使用&amp;ldquo; exception&amp;rdquo;键，其值为&amp;ldquo;异常&amp;rdquo;或&amp;ldquo;错误&amp;rdquo;本身。将从该对象生成一个字符串，其中包含错误消息，文件名和行号。您仍然必须在消息中提供异常占位符：</target>
        </trans-unit>
        <trans-unit id="456308679920034ef56383dd58cf5c7b46e7fe57" translate="yes" xml:space="preserve">
          <source>If you want to mark multiple items as flashdata, simply pass the keys as an array:</source>
          <target state="translated">如果你想将多个项目标记为flashdata,只需将键作为一个数组传递即可。</target>
        </trans-unit>
        <trans-unit id="cf4bc79725d64d9aa5e23ec13a30f72b0387d7d3" translate="yes" xml:space="preserve">
          <source>If you want to retrieve all of the existing userdata, you can simply omit the item key (magic getter only works for properties):</source>
          <target state="translated">如果你想检索所有现有的用户数据,你可以直接省略项目键(magic getter只对属性有效)。</target>
        </trans-unit>
        <trans-unit id="1713813f3663ee9e1b2ce42d2a6e1f678136a65c" translate="yes" xml:space="preserve">
          <source>If you want to retrieve all of the existing userdata, you can simply omit the item key (magic getter only works for single property values):</source>
          <target state="translated">如果你想检索所有现有的用户数据,你可以简单地省略项目键(magic getter只对单个属性值有效)。</target>
        </trans-unit>
        <trans-unit id="c766def0705d9c4685396ee6cf736878917fae9e" translate="yes" xml:space="preserve">
          <source>If you want to support multiple languages in your application, you would provide folders inside your &lt;strong&gt;application/language/&lt;/strong&gt; directory for each of them, and you would specify the default language in your &lt;strong&gt;application/config/config.php&lt;/strong&gt;.</source>
          <target state="translated">如果要在应用程序中支持多种语言，则可以在&lt;strong&gt;application / language /&lt;/strong&gt;目录中为每种&lt;strong&gt;语言&lt;/strong&gt;提供文件夹，并在&lt;strong&gt;application / config / config.php中&lt;/strong&gt;指定默认语言。</target>
        </trans-unit>
        <trans-unit id="b2531f59a448901f27d5929d43ce6a93e1bf1389" translate="yes" xml:space="preserve">
          <source>If you want to take advantage of the system message translations, they can be added to your project in a similar fashion.</source>
          <target state="translated">如果你想利用系统消息翻译的优势,可以用类似的方式将它们添加到你的项目中。</target>
        </trans-unit>
        <trans-unit id="98aabac874b29add34d58f344fb1beccfb53170e" translate="yes" xml:space="preserve">
          <source>If you want to use the pagination structure where prev and next will be links to the previous and next pages based on the current page, just replace the &lt;code&gt;getPrevious()&lt;/code&gt; and &lt;code&gt;getNext()&lt;/code&gt; methods with &lt;code&gt;getPreviousPage()&lt;/code&gt; and &lt;code&gt;getNextPage()&lt;/code&gt;, and the methods &lt;code&gt;hasPrevious()&lt;/code&gt; and &lt;code&gt;hasNext()&lt;/code&gt; by &lt;code&gt;hasPreviousPage()&lt;/code&gt; and &lt;code&gt;hasNextPage()&lt;/code&gt; respectively.</source>
          <target state="translated">如果要使用分页结构，其中prev和next将基于当前页面链接到上一页和下一页，则只需将 &lt;code&gt;getPrevious()&lt;/code&gt; 和 &lt;code&gt;getNext()&lt;/code&gt; 方法替换为 &lt;code&gt;getPreviousPage()&lt;/code&gt; 和 &lt;code&gt;getNextPage()&lt;/code&gt; 以及这些方法 &lt;code&gt;hasPrevious()&lt;/code&gt; 和 &lt;code&gt;hasNext()&lt;/code&gt; 分别由 &lt;code&gt;hasPreviousPage()&lt;/code&gt; 和 &lt;code&gt;hasNextPage()&lt;/code&gt; 组成。</target>
        </trans-unit>
        <trans-unit id="4117f2b10d548375d07dd322bc5bb59e1a5fb6bf" translate="yes" xml:space="preserve">
          <source>If you want to utilize the PUT, DELETE, PATCH or other exotic request methods, they can only be accessed via a special input stream, that can only be read once. This isn&amp;rsquo;t as easy as just reading from e.g. the &lt;code&gt;$_POST&lt;/code&gt; array, because it will always exist and you can try and access multiple variables without caring that you might only have one shot at all of the POST data.</source>
          <target state="translated">如果要使用PUT，DELETE，PATCH或其他特殊请求方法，则只能通过特殊的输入流（只能读取一次）来访问它们。这并不像仅从 &lt;code&gt;$_POST&lt;/code&gt; 数组中读取那样容易，因为它将一直存在，并且您可以尝试访问多个变量而不必担心您可能对所有POST数据只看了一眼。</target>
        </trans-unit>
        <trans-unit id="a7820149ebe1144da192b3e6ad99f607a81093b8" translate="yes" xml:space="preserve">
          <source>If you want to validate more than one array during a single execution, then you should call the &lt;code&gt;reset_validation()&lt;/code&gt; method before setting up rules and validating the new array.</source>
          <target state="translated">如果要在一次执行中验证多个数组，则应在设置规则和验证新数组之前调用 &lt;code&gt;reset_validation()&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="f2eb9e437baeb226733e2227e9c91eb482bd1652" translate="yes" xml:space="preserve">
          <source>If you want to verify that a session value exists, simply check with &lt;code&gt;isset()&lt;/code&gt;:</source>
          <target state="translated">如果要验证会话值是否存在，只需使用 &lt;code&gt;isset()&lt;/code&gt; 检查：</target>
        </trans-unit>
        <trans-unit id="dfcc05b2163d2472b751d7245b790c06b473d273" translate="yes" xml:space="preserve">
          <source>If you want your benchmark data to be available to the &lt;a href=&quot;../general/profiling&quot;&gt;Profiler&lt;/a&gt; all of your marked points must be set up in pairs, and each mark point name must end with _start and _end. Each pair of points must otherwise be named identically. Example:</source>
          <target state="translated">如果希望基准数据可用于&lt;a href=&quot;../general/profiling&quot;&gt;Profiler&lt;/a&gt;，则必须将所有标记点成对设置，并且每个标记点名称必须以_start和_end结尾。否则，每对点的名称必须相同。例：</target>
        </trans-unit>
        <trans-unit id="625dc3d1c6dea79490c75c4578a8c816555a13d6" translate="yes" xml:space="preserve">
          <source>If you wanted to not list the specific pages (for example, you only want &amp;ldquo;next&amp;rdquo; and &amp;ldquo;previous&amp;rdquo; links), you can suppress their rendering by adding:</source>
          <target state="translated">如果您不想列出特定页面（例如，您只想要&amp;ldquo;下一个&amp;rdquo;和&amp;ldquo;上一个&amp;rdquo;链接），则可以通过添加以下内容来抑制它们的呈现：</target>
        </trans-unit>
        <trans-unit id="f3d952c676bda25724c3273ae9a9da9e109271ff" translate="yes" xml:space="preserve">
          <source>If you will be running your site using a web server (e.g. Apache or Nginx), you will need to modify the permissions for the &lt;code&gt;writable&lt;/code&gt; folder inside your project, so that it is writable by the user or account used by your web server.</source>
          <target state="translated">如果要使用Web服务器（例如Apache或Nginx）运行站点，则需要修改项目中 &lt;code&gt;writable&lt;/code&gt; 文件夹的权限，以便用户或Web服务器使用的帐户可写该文件夹。</target>
        </trans-unit>
        <trans-unit id="237ff9bf8868e233ad722bd9292b16e07046210e" translate="yes" xml:space="preserve">
          <source>If you wish to change that however, you need to use the &lt;code&gt;initialize()&lt;/code&gt; method. It accepts an associative array of parameters, all of which are optional:</source>
          <target state="translated">但是，如果要更改此设置，则需要使用 &lt;code&gt;initialize()&lt;/code&gt; 方法。它接受参数的关联数组，所有这些都是可选的：</target>
        </trans-unit>
        <trans-unit id="a1019555098b0ae99d7362f12c90350b94b95381" translate="yes" xml:space="preserve">
          <source>If you wish to increase security by hiding the location of your CodeIgniter files you can rename the system and application folders to something more private. If you do rename them, you must open your main &lt;em&gt;index.php&lt;/em&gt; file and set the &lt;code&gt;$system_path&lt;/code&gt; and &lt;code&gt;$application_folder&lt;/code&gt; variables at the top of the file with the new name you&amp;rsquo;ve chosen.</source>
          <target state="translated">如果希望通过隐藏CodeIgniter文件的位置来提高安全性，则可以将系统和应用程序文件夹重命名为更私有的名称。如果要重命名它们，则必须打开您的主&lt;em&gt;index.php&lt;/em&gt;文件，并使用所选的新名称在文件顶部设置 &lt;code&gt;$system_path&lt;/code&gt; 和 &lt;code&gt;$application_folder&lt;/code&gt; 变量。</target>
        </trans-unit>
        <trans-unit id="7e38d84240454ae13c1f3b7d004519c548aae94a" translate="yes" xml:space="preserve">
          <source>If you wish to use an associative array in your method parameters you will need to use a struct datatype:</source>
          <target state="translated">如果你想在方法参数中使用关联数组,你将需要使用一个结构数据类型。</target>
        </trans-unit>
        <trans-unit id="5ab5597db5859ed0975cdc1e15a9b24d5b07792a" translate="yes" xml:space="preserve">
          <source>If you wish to use one of those ciphers, you&amp;rsquo;d have to pass its name in lower-case to the Encryption library.</source>
          <target state="translated">如果您希望使用这些密码之一，则必须将其名称以小写形式传递给Encryption库。</target>
        </trans-unit>
        <trans-unit id="950cff6719cef31d34f97bc4dd11dcb6b1673c0d" translate="yes" xml:space="preserve">
          <source>If you would like the Zip archive to maintain the directory structure of the file in it, pass TRUE (boolean) in the second parameter. Example:</source>
          <target state="translated">如果你想让Zip存档保持文件的目录结构,请在第二个参数中传递TRUE(布尔值)。例子:如果你想让Zip压缩包保持文件的目录结构,请在第二个参数中传递TRUE(布尔值)。</target>
        </trans-unit>
        <trans-unit id="e8c3a3948266b4b87be158012eedad7cc86f1a45" translate="yes" xml:space="preserve">
          <source>If you would like the field name to be stored in a language file, please see &lt;a href=&quot;#translating-field-names&quot;&gt;Translating Field Names&lt;/a&gt;.</source>
          <target state="translated">如果您希望将字段名称存储在语言文件中，请参见&lt;a href=&quot;#translating-field-names&quot;&gt;翻译字段名称&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a1c0ed8891a7d397e6bfe0f88dffee1cefebc253" translate="yes" xml:space="preserve">
          <source>If you would like the opening &amp;lt;select&amp;gt; to contain additional data, like an id attribute or JavaScript, you can pass it as a string in the fourth parameter:</source>
          <target state="translated">如果您希望开头的&amp;lt;select&amp;gt;包含其他数据（例如id属性或JavaScript），则可以将其作为字符串传递给第四个参数：</target>
        </trans-unit>
        <trans-unit id="8d242ae6ff6024b4b03758438c8d1df273e26507" translate="yes" xml:space="preserve">
          <source>If you would like the other pseudo-variables accessible inside the &amp;ldquo;blog_entry&amp;rdquo; scope, then make sure that the &amp;ldquo;cascadeData&amp;rdquo; option is set to true.</source>
          <target state="translated">如果您希望在&amp;ldquo; blog_entry&amp;rdquo;范围内可以访问其他伪变量，请确保将&amp;ldquo; cascadeData&amp;rdquo;选项设置为true。</target>
        </trans-unit>
        <trans-unit id="f3acce1e836dfdd87c96f1645e14ba08ddf58cd6" translate="yes" xml:space="preserve">
          <source>If you would like the simple &amp;ldquo;download &amp;amp; go&amp;rdquo; install that CodeIgniter3 is known for, choose the manual installation.</source>
          <target state="translated">如果您希望以CodeIgniter3闻名的简单&amp;ldquo;下载并安装&amp;rdquo;安装，请选择手动安装。</target>
        </trans-unit>
        <trans-unit id="fc4734c7855363f70cb354408d9af818a369fcc4" translate="yes" xml:space="preserve">
          <source>If you would like to disable transactions you can do so using &lt;code&gt;$this-&amp;gt;db-&amp;gt;trans_off()&lt;/code&gt;:</source>
          <target state="translated">如果您想禁用事务，可以使用 &lt;code&gt;$this-&amp;gt;db-&amp;gt;trans_off()&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="518873f7e2a44b65fb842df5c5588494c767f2e6" translate="yes" xml:space="preserve">
          <source>If you would like to display the total elapsed time from the moment CodeIgniter starts to the moment the final output is sent to the browser, simply place this in one of your view templates:</source>
          <target state="translated">如果你想显示从CodeIgniter开始到最终输出到浏览器的总时间,只需将其放在你的一个视图模板中即可。</target>
        </trans-unit>
        <trans-unit id="9030f9f263edbe47a0dd702d688e200100a7f07b" translate="yes" xml:space="preserve">
          <source>If you would like to dynamically set a config item or change an existing one, you can do so using:</source>
          <target state="translated">如果你想动态地设置一个配置项或改变一个现有的配置项,你可以使用。</target>
        </trans-unit>
        <trans-unit id="6c88251b14ccaab711f82cd4d7ddaee5972be156" translate="yes" xml:space="preserve">
          <source>If you would like to implement your libraries in a framework-agnostic method, you can use the &lt;code&gt;CodeIgniter\Log\LoggerAwareTrait&lt;/code&gt; which implements the &lt;code&gt;setLogger()&lt;/code&gt; method for you. Then, when you use your library under different environments for frameworks, your library should still be able to log as it would expect, as long as it can find a PSR3 compatible logger.</source>
          <target state="translated">如果要以与框架无关的方法来实现库，则可以使用 &lt;code&gt;CodeIgniter\Log\LoggerAwareTrait&lt;/code&gt; 来为您实现 &lt;code&gt;setLogger()&lt;/code&gt; 方法。然后，当您在不同环境下的框架中使用库时，只要库可以找到与PSR3兼容的记录器，库仍应该能够按预期进行记录。</target>
        </trans-unit>
        <trans-unit id="4e1736cce0f765d7be3fe74ce22748806a1ecfca" translate="yes" xml:space="preserve">
          <source>If you would like to keep your views public it is also possible to move the views folder out of your application folder.</source>
          <target state="translated">如果你想保持你的视图公开,也可以将视图文件夹从应用程序文件夹中移出。</target>
        </trans-unit>
        <trans-unit id="e0ab37ee5733bae955051884d1241e0da7a128de" translate="yes" xml:space="preserve">
          <source>If you would like to leave some testing in place in your scripts, but not have it run unless you need it, you can disable unit testing using:</source>
          <target state="translated">如果你想在你的脚本中保留一些测试,但除非你需要它,否则不要运行它,你可以使用以下方法禁用单元测试。</target>
        </trans-unit>
        <trans-unit id="4195f63bde5786b2629b16de7c07c2d45060f0d2" translate="yes" xml:space="preserve">
          <source>If you would like to rename your application directory or even move it to a different location on your server, other than your project root, open your main &lt;strong&gt;app/Config/Paths.php&lt;/strong&gt; and set a &lt;em&gt;full server path&lt;/em&gt; in the &lt;code&gt;$appDirectory&lt;/code&gt; variable (at about line 38):</source>
          <target state="translated">如果您想重命名应用程序目录，或者甚至将其移动到服务器上除项目根目录之外的其他位置，请打开主&lt;strong&gt;app / Config / Paths.php&lt;/strong&gt;并在 &lt;code&gt;$appDirectory&lt;/code&gt; 变量中设置&lt;em&gt;完整的服务器路径&lt;/em&gt;（位于关于第38行）：</target>
        </trans-unit>
        <trans-unit id="eaa74b4ebb57fac8328a220a83300a2b7458f7bf" translate="yes" xml:space="preserve">
          <source>If you would like to rename your application directory you may do so as long as you open your main index.php file and set its name using the &lt;code&gt;$application_folder&lt;/code&gt; variable:</source>
          <target state="translated">如果您想重命名应用程序目录，只要打开主index.php文件并使用 &lt;code&gt;$application_folder&lt;/code&gt; 变量设置其名称，就可以这样做：</target>
        </trans-unit>
        <trans-unit id="a7baffd1d4ccf7b0a1cf2ffe35a6c07833e341c0" translate="yes" xml:space="preserve">
          <source>If you would like to run transactions manually you can do so as follows:</source>
          <target state="translated">如果您想手动运行交易,您可以通过以下方式进行。</target>
        </trans-unit>
        <trans-unit id="a4db5eaf3c2fdd8470ac458a2b80b05d99927884" translate="yes" xml:space="preserve">
          <source>If you would like to set an individual cell&amp;rsquo;s tag attributes, you can use an associative array for that cell. The associative key &lt;strong&gt;data&lt;/strong&gt; defines the cell&amp;rsquo;s data. Any other key =&amp;gt; val pairs are added as key=&amp;rsquo;val&amp;rsquo; attributes to the tag:</source>
          <target state="translated">如果要设置单个单元格的标记属性，则可以对该单元格使用关联数组。关联密钥&lt;strong&gt;数据&lt;/strong&gt;定义单元格的数据。其他任何key =&amp;gt; val对将作为key ='val'属性添加到标签：</target>
        </trans-unit>
        <trans-unit id="f9073873a7c68a623028ac620c75822fb529e7ae" translate="yes" xml:space="preserve">
          <source>If you would like to set your own field name simply pass its value to the &lt;code&gt;do_upload()&lt;/code&gt; method:</source>
          <target state="translated">如果您想设置自己的字段名称，只需将其值传递给 &lt;code&gt;do_upload()&lt;/code&gt; 方法即可：</target>
        </trans-unit>
        <trans-unit id="e6534beeabd53dec36ce3dd06ec1e7864044a562" translate="yes" xml:space="preserve">
          <source>If you would like to share a common CodeIgniter framework installation, to manage several different applications, simply put all of the directories located inside your application directory into their own (sub)-directory.</source>
          <target state="translated">如果你想共享一个共同的CodeIgniter框架安装,以管理几个不同的应用程序,只需将所有位于你的应用程序目录下的目录放到他们自己的(子)目录中。</target>
        </trans-unit>
        <trans-unit id="3853119e3e8ebb8d3d16c9ef6c48a879593f3f80" translate="yes" xml:space="preserve">
          <source>If you would like to share a common CodeIgniter installation to manage several different applications simply put all of the directories located inside your application directory into their own sub-directory.</source>
          <target state="translated">如果你想共享一个共同的CodeIgniter安装来管理几个不同的应用程序,只需将所有位于应用程序目录下的目录放到自己的子目录中。</target>
        </trans-unit>
        <trans-unit id="465f42de4a4b16fcd8b60637c4857a3eb921b496" translate="yes" xml:space="preserve">
          <source>If you would like to store the &amp;ldquo;human&amp;rdquo; name you passed to the &lt;code&gt;set_rules()&lt;/code&gt; method in a language file, and therefore make the name able to be translated, here&amp;rsquo;s how:</source>
          <target state="translated">如果您想将传递给 &lt;code&gt;set_rules()&lt;/code&gt; 方法的&amp;ldquo;人类&amp;rdquo;名称存储在语言文件中，从而使该名称能够被翻译，请按以下步骤操作：</target>
        </trans-unit>
        <trans-unit id="a1d5a0d8d4184a5e23e50f5aed73ded24fa86e6a" translate="yes" xml:space="preserve">
          <source>If you would like to surround the entire pagination with some markup you can do it with these two preferences:</source>
          <target state="translated">如果你想用一些标记包围整个分页,你可以用这两个偏好来实现。</target>
        </trans-unit>
        <trans-unit id="133d94e8e14e5d641a266326797768717c1e3358" translate="yes" xml:space="preserve">
          <source>If you would like your compressed data organized into sub-directories, simply include the path as part of the filename(s):</source>
          <target state="translated">如果您希望将压缩数据组织到子目录中,只需将路径作为文件名的一部分。</target>
        </trans-unit>
        <trans-unit id="ef53c240d9540fcd64c3bd46116d9cd4418e0e82" translate="yes" xml:space="preserve">
          <source>If you would like your form to contain some additional data, like JavaScript, you can pass it as a string in the third parameter:</source>
          <target state="translated">如果你想让你的表单包含一些额外的数据,比如JavaScript,你可以在第三个参数中把它作为一个字符串传递。</target>
        </trans-unit>
        <trans-unit id="e3fc7e59f2d0de30d2125f09641b3ff3ca3a2a65" translate="yes" xml:space="preserve">
          <source>If you would like your model assigned to a different object name you can specify it via the second parameter of the loading method:</source>
          <target state="translated">如果您希望将您的模型分配给不同的对象名称,您可以通过加载方法的第二个参数指定它。</target>
        </trans-unit>
        <trans-unit id="acf367e32c1d9398436bf5e5e0a0cbf9b3aad06e" translate="yes" xml:space="preserve">
          <source>If you would like your test results formatted differently then the default you can set your own template. Here is an example of a simple template. Note the required pseudo-variables:</source>
          <target state="translated">如果你想让你的测试结果以不同于默认的格式显示,你可以设置自己的模板。这里是一个简单模板的例子。请注意所需的伪变量。</target>
        </trans-unit>
        <trans-unit id="08166c2205289c459f9e8cf83e973a07cc6dbd76" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;d like to include a field&amp;rsquo;s &amp;ldquo;human&amp;rdquo; name, or the optional parameter some rules allow for (such as max_length), or the value that was validated you can add the &lt;code&gt;{field}&lt;/code&gt;, &lt;code&gt;{param}&lt;/code&gt; and &lt;code&gt;{value}&lt;/code&gt; tags to your message, respectively:</source>
          <target state="translated">如果要包含字段的&amp;ldquo;人工&amp;rdquo;名称或某些规则允许的可选参数（例如max_length）或已验证的值，则可以添加 &lt;code&gt;{field}&lt;/code&gt; ， &lt;code&gt;{param}&lt;/code&gt; 和 &lt;code&gt;{value}&lt;/code&gt; 标签到您的消息分别：</target>
        </trans-unit>
        <trans-unit id="bec0c6c23f8722454e99e77b6071d086001fe560" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;d like to include a field&amp;rsquo;s &amp;ldquo;human&amp;rdquo; name, or the optional parameter some rules allow for (such as max_length), you can add the &lt;strong&gt;{field}&lt;/strong&gt; and &lt;strong&gt;{param}&lt;/strong&gt; tags to your message, respectively:</source>
          <target state="translated">如果您想包含字段的&amp;ldquo;人工&amp;rdquo;名称，或某些规则允许的可选参数（例如max_length），则可以在邮件中分别添加&lt;strong&gt;{field}&lt;/strong&gt;和&lt;strong&gt;{param}&lt;/strong&gt;标签：</target>
        </trans-unit>
        <trans-unit id="34787ba12008641ef3818c655d3c3b0b3b221f3d" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;d like to manually test whether your server supports MCrypt you can use:</source>
          <target state="translated">如果要手动测试服务器是否支持MCrypt，可以使用：</target>
        </trans-unit>
        <trans-unit id="99ca515f860da6f2b0c24006801222e4a5695008" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;d like to use a custom file name, you can use the third parameter:</source>
          <target state="translated">如果要使用自定义文件名，则可以使用第三个参数：</target>
        </trans-unit>
        <trans-unit id="a1a955ccc0e2b1f67f3aa89c1f4b5b1af174015e" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;d rather not do all of this by hand, you can use the &lt;code&gt;session:migration&lt;/code&gt; command from the cli to generate a migration file for you:</source>
          <target state="translated">如果您不想手工完成所有这些操作，则可以使用cli中的 &lt;code&gt;session:migration&lt;/code&gt; 命令为您生成一个迁移文件：</target>
        </trans-unit>
        <trans-unit id="754f881e38a490286062cbd8a8c4b0d1ae436e5d" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;d rather organize your rules and error messages within the Validation configuration file, you can do that and simply set &lt;code&gt;$validationRules&lt;/code&gt; to the name of the validation rule group you created:</source>
          <target state="translated">如果要在Validation配置文件中组织规则和错误消息，则可以执行此操作，只需将 &lt;code&gt;$validationRules&lt;/code&gt; 设置为创建的验证规则组的名称即可：</target>
        </trans-unit>
        <trans-unit id="d7517f26bfc6817ba1f97ba625c771ede301db04" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;ll be using &lt;code&gt;get_instance()&lt;/code&gt; inside another class, then it would be better if you assign it to a property. This way, you won&amp;rsquo;t need to call &lt;code&gt;get_instance()&lt;/code&gt; in every single method.</source>
          <target state="translated">如果要在另一个类中使用 &lt;code&gt;get_instance()&lt;/code&gt; ，则最好将其分配给属性。这样，您无需在每个方法中都调用 &lt;code&gt;get_instance()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f992504fdad3cc5a2d01f0c25955ac78a8f90ea7" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re new to CodeIgniter, please read the &lt;a href=&quot;../intro/index&quot;&gt;Getting Started&lt;/a&gt; section of the User Guide to begin learning how to build dynamic PHP applications. Enjoy!</source>
          <target state="translated">如果您不熟悉CodeIgniter，请阅读《用户指南》的&amp;ldquo;&lt;a href=&quot;../intro/index&quot;&gt;入门&amp;rdquo;&lt;/a&gt;部分，以开始学习如何构建动态PHP应用程序。请享用！</target>
        </trans-unit>
        <trans-unit id="93d0d68444ca91025e9fcc343130c9ca6ca65ba8" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re new to CodeIgniter, please read the &lt;a href=&quot;../overview/getting_started&quot;&gt;Getting Started&lt;/a&gt; section of the User Guide to begin learning how to build dynamic PHP applications. Enjoy!</source>
          <target state="translated">如果您不熟悉CodeIgniter，请阅读《用户指南》的&amp;ldquo; &lt;a href=&quot;../overview/getting_started&quot;&gt;入门&amp;rdquo;&lt;/a&gt;部分，以开始学习如何构建动态PHP应用程序。请享用！</target>
        </trans-unit>
        <trans-unit id="843e2b0d2aa1a789d51391da325af8f68c862e87" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re not allowed to do that, you can try using a .htaccess file to restrict access to those resources.</source>
          <target state="translated">如果不允许这样做，则可以尝试使用.htaccess文件来限制对这些资源的访问。</target>
        </trans-unit>
        <trans-unit id="80ecaf1d1e0c56920fdfb06907ed090443aa0e1b" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using a hashing algorithm other than BCrypt (which has a limit of 72 characters), you should set a relatively high limit on password lengths in order to mitigate DoS attacks - say, 1024 characters.</source>
          <target state="translated">如果您使用的非BCrypt哈希算法（限制为72个字符），则应设置相对较高的密码长度限制以缓解DoS攻击-例如1024个字符。</target>
        </trans-unit>
        <trans-unit id="0cad54d521773a11e3efe8a2e08ad85625fd2438" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;ve done everything properly, you can now set your &lt;em&gt;sess_driver&lt;/em&gt; configuration value to &amp;lsquo;dummy&amp;rsquo; and use your own driver. Congratulations!</source>
          <target state="translated">如果您已正确完成所有操作，则现在可以将&lt;em&gt;sess_driver&lt;/em&gt;配置值设置为'dummy'并使用自己的驱动程序。恭喜你！</target>
        </trans-unit>
        <trans-unit id="a9f92ba0b0c1ca33ca6a084c77ca8c88fe43cda6" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;ve found a critical vulnerability, we&amp;rsquo;d be happy to credit you in our &lt;a href=&quot;../changelogs/index&quot;&gt;ChangeLog&lt;/a&gt;.</source>
          <target state="translated">如果您发现了一个严重漏洞，我们很乐意将您归功于&lt;a href=&quot;../changelogs/index&quot;&gt;ChangeLog&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f7a501beeeec27370afab31a37bf6a6fae47b966" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;ve found a critical vulnerability, we&amp;rsquo;d be happy to credit you in our &lt;a href=&quot;https://codeigniter.com/userguide4/changelogs/index.html&quot;&gt;ChangeLog&lt;/a&gt;.</source>
          <target state="translated">如果您发现了一个严重漏洞，我们很乐意在&lt;a href=&quot;https://codeigniter.com/userguide4/changelogs/index.html&quot;&gt;ChangeLog&lt;/a&gt;中将您归功于您。</target>
        </trans-unit>
        <trans-unit id="b18465453f5c3b9a1d79501b23007618ed590749" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;ve loaded the &lt;a href=&quot;../libraries/form_validation&quot;&gt;Form Validation Library&lt;/a&gt; and have set a validation rule for the field name in use with this helper, then it will forward the call to the &lt;a href=&quot;../libraries/form_validation&quot;&gt;Form Validation Library&lt;/a&gt;&amp;rsquo;s own &lt;code&gt;set_value()&lt;/code&gt; method. Otherwise, this function looks in &lt;code&gt;$_POST&lt;/code&gt; for the field value.</source>
          <target state="translated">如果您已经加载了&lt;a href=&quot;../libraries/form_validation&quot;&gt;表单验证库&lt;/a&gt;并为与此帮助程序一起使用的字段名称设置了验证规则，则它将把调用转发给&lt;a href=&quot;../libraries/form_validation&quot;&gt;表单验证库&lt;/a&gt;自己的 &lt;code&gt;set_value()&lt;/code&gt; 方法。否则，此函数将在 &lt;code&gt;$_POST&lt;/code&gt; 查找字段值。</target>
        </trans-unit>
        <trans-unit id="fffd830be575325d8f707671332dca7a7e0f1a97" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;ve never used a template engine, pseudo-variable names are enclosed in braces, like this:</source>
          <target state="translated">如果您从未使用过模板引擎，则将伪变量名称括在大括号中，如下所示：</target>
        </trans-unit>
        <trans-unit id="9414744f8250d8cf280f48076dc730204db3689f" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;ve relocated any of the main directories, you can change the configuration settings inside &lt;code&gt;app/Config/Paths&lt;/code&gt;.</source>
          <target state="translated">如果您已重定位了任何主目录，则可以在 &lt;code&gt;app/Config/Paths&lt;/code&gt; 中更改配置设置。</target>
        </trans-unit>
        <trans-unit id="3ea512cd7d55f9902f455dd47b742ce88c5bdb5f" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;ve upgraded from a previous version of CodeIgniter and you don&amp;rsquo;t have &amp;lsquo;sess_save_path&amp;rsquo; configured, then the Session library will look for the old &amp;lsquo;sess_table_name&amp;rsquo; setting and use it instead. Please don&amp;rsquo;t rely on this behavior as it will get removed in the future.</source>
          <target state="translated">如果您是从早期版本的CodeIgniter升级而来的，则没有配置&amp;ldquo; sess_save_path&amp;rdquo;，则会话库将查找旧的&amp;ldquo; sess_table_name&amp;rdquo;设置并改用它。请不要依赖此行为，因为将来会被删除。</target>
        </trans-unit>
        <trans-unit id="69693de891b2dbfe2306318a518d2b8bbeab567f" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;ve used sessions in PHP before, you should be familiar with PHP&amp;rsquo;s &lt;a href=&quot;http://php.net/manual/en/reserved.variables.session.php&quot;&gt;$_SESSION superglobal&lt;/a&gt; (if not, please read the content on that link).</source>
          <target state="translated">如果您以前在PHP中使用过会话，则应该熟悉PHP的&lt;a href=&quot;http://php.net/manual/en/reserved.variables.session.php&quot;&gt;$ _SESSION超全局变量&lt;/a&gt;（如果没有，请阅读该链接上的内容）。</target>
        </trans-unit>
        <trans-unit id="4c2e1171a8891b6f3e6cf6594c93d6745d1ca35d" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;ve used sessions in PHP before, you should be familiar with PHP&amp;rsquo;s &lt;a href=&quot;https://www.php.net/manual/en/reserved.variables.session.php&quot;&gt;$_SESSION superglobal&lt;/a&gt; (if not, please read the content on that link).</source>
          <target state="translated">如果您以前在PHP中使用过会话，则应该熟悉PHP的&lt;a href=&quot;https://www.php.net/manual/en/reserved.variables.session.php&quot;&gt;$ _SESSION超全局变量&lt;/a&gt;（如果没有，请阅读该链接上的内容）。</target>
        </trans-unit>
        <trans-unit id="7260d18e72f117c11e2107de0d4b6f0a7f9b7a22" translate="yes" xml:space="preserve">
          <source>If your &amp;ldquo;pair&amp;rdquo; data is coming from a database result, which is already a multi-dimensional array, you can simply use the database &lt;code&gt;getResultArray()&lt;/code&gt; method:</source>
          <target state="translated">如果&amp;ldquo;对&amp;rdquo;数据来自数据库结果（已经是多维数组），则可以简单地使用数据库 &lt;code&gt;getResultArray()&lt;/code&gt; 方法：</target>
        </trans-unit>
        <trans-unit id="5127d93f23d2c2e68b97e3ecf33c080485092007" translate="yes" xml:space="preserve">
          <source>If your &amp;ldquo;pair&amp;rdquo; data is coming from a database result, which is already a multi-dimensional array, you can simply use the database &lt;code&gt;result_array()&lt;/code&gt; method:</source>
          <target state="translated">如果&amp;ldquo;对&amp;rdquo;数据来自数据库结果（已经是多维数组），则可以简单地使用数据库 &lt;code&gt;result_array()&lt;/code&gt; 方法：</target>
        </trans-unit>
        <trans-unit id="be13215abc4fc7c47e37fea204e8dd731e46068c" translate="yes" xml:space="preserve">
          <source>If your Apache server has &lt;em&gt;mod_rewrite&lt;/em&gt; enabled, you can easily remove this file by using a .htaccess file with some simple rules. Here is an example of such a file, using the &amp;ldquo;negative&amp;rdquo; method in which everything is redirected except the specified items:</source>
          <target state="translated">如果您的Apache服务器启用了&lt;em&gt;mod_rewrite&lt;/em&gt;，则可以使用带有一些简单规则的.htaccess文件轻松删除此文件。这是使用&amp;ldquo;负&amp;rdquo;方法的此类文件的示例，其中，除了指定的项目外，所有内容都被重定向：</target>
        </trans-unit>
        <trans-unit id="605737b908102ae42eb22c6811df1bafb7945104" translate="yes" xml:space="preserve">
          <source>If your PHP installation is configured with &amp;ndash;enable-memory-limit, you can display the amount of memory consumed by the entire system using the following code in one of your view file:</source>
          <target state="translated">如果您的PHP安装配置了&amp;ndash;enable-memory-limit，则可以在一个视图文件中使用以下代码来显示整个系统消耗的内存量：</target>
        </trans-unit>
        <trans-unit id="32b857138ae08efc3f002804caa8f218e4e9433b" translate="yes" xml:space="preserve">
          <source>If your URI contains more than two segments they will be passed to your method as parameters.</source>
          <target state="translated">如果你的URI包含两个以上的段,它们将作为参数传递给你的方法。</target>
        </trans-unit>
        <trans-unit id="c6471fb738bd201e992340d37f513af7eb23e302" translate="yes" xml:space="preserve">
          <source>If your application needs to make changes at run-time, you can access the instance at &lt;code&gt;$response-&amp;gt;CSP&lt;/code&gt;. The class holds a number of methods that map pretty clearly to the appropriate header value that you need to set. Examples are shown below, with different combinations of parameters, though all accept either a directive name or an array of them.:</source>
          <target state="translated">如果您的应用程序需要在运行时进行更改，则可以通过 &lt;code&gt;$response-&amp;gt;CSP&lt;/code&gt; 访问该实例。该类包含许多方法，这些方法可以很清晰地映射到您需要设置的适当的标头值。下面显示的示例具有不同的参数组合，尽管它们都接受指令名称或它们的数组：</target>
        </trans-unit>
        <trans-unit id="bca229f48356af3fa4051f5f8951329103fb9a44" translate="yes" xml:space="preserve">
          <source>If your application returns XML, you can retrieve it through this method.</source>
          <target state="translated">如果你的应用程序返回XML,你可以通过这个方法检索它。</target>
        </trans-unit>
        <trans-unit id="da8463754daf526d15fc537ed9d5cc0ed6f7b914" translate="yes" xml:space="preserve">
          <source>If your controller contains a method named &lt;code&gt;_output()&lt;/code&gt;, it will &lt;strong&gt;always&lt;/strong&gt; be called by the output class instead of echoing the finalized data directly. The first parameter of the method will contain the finalized output.</source>
          <target state="translated">如果您的控制器包含一个名为 &lt;code&gt;_output()&lt;/code&gt; 的方法，则它将&lt;strong&gt;始终&lt;/strong&gt;由输出类调用，而不是直接回显已完成的数据。方法的第一个参数将包含最终输出。</target>
        </trans-unit>
        <trans-unit id="a30c750b8571c8f8cce6d7ff3076ca71187185bc" translate="yes" xml:space="preserve">
          <source>If your controller contains a method named _remap(), it will &lt;strong&gt;always&lt;/strong&gt; get called regardless of what your URI contains. It overrides the normal behavior in which the URI determines which method is called, allowing you to define your own method routing rules.</source>
          <target state="translated">如果您的控制器包含一个名为_remap（）的方法，则无论您的URI包含什么内容，它将&lt;strong&gt;始终&lt;/strong&gt;被调用。它覆盖了URI确定调用哪个方法的常规行为，从而允许您定义自己的方法路由规则。</target>
        </trans-unit>
        <trans-unit id="c776e74341e586baf876f632d5bd7431ce60e527" translate="yes" xml:space="preserve">
          <source>If your controllers are not explicitly namespaced, there is no need to change this. If you namespace your controllers, then you can change this value to save typing:</source>
          <target state="translated">如果你的控制器没有明确的命名空间,就不需要改变这个值。如果你的控制器有命名空间,那么你可以改变这个值以节省输入。</target>
        </trans-unit>
        <trans-unit id="96397e254ad0df13f40e555f18abea4d07169ce7" translate="yes" xml:space="preserve">
          <source>If your data is in a nested associative array, you can use &amp;ldquo;dot array syntax&amp;rdquo; to easily validate your data:</source>
          <target state="translated">如果您的数据在嵌套的关联数组中，则可以使用&amp;ldquo;点数组语法&amp;rdquo;轻松验证数据：</target>
        </trans-unit>
        <trans-unit id="8f301f8b88fbd27c0735f448d37dc187af721c4d" translate="yes" xml:space="preserve">
          <source>If your issue report can describe the steps to reproduce the problem, that is great. If you can include a unit test that reproduces the problem, that is even better, as it gives whoever is fixing it a clearer target!</source>
          <target state="translated">如果你的问题报告能够描述重现问题的步骤,那就太好了。如果你能包含一个能重现问题的单元测试,那就更好了,因为它能给正在修复问题的人一个更明确的目标。</target>
        </trans-unit>
        <trans-unit id="1bffbd742b3ce7d58f8c2a3f68b8c9ebd1a3a367" translate="yes" xml:space="preserve">
          <source>If your method needs to work with parameters, the function will need a minimum of three parameters: the string to validate, the parameter string, and an array with all of the data that was submitted the form. The $data array is especially handy for rules like &lt;code&gt;require_with&lt;/code&gt; that needs to check the value of another submitted field to base its result on:</source>
          <target state="translated">如果您的方法需要使用参数，则该函数将至少需要三个参数：要验证的字符串，参数字符串以及包含已提交表单的所有数据的数组。$ data数组对于诸如 &lt;code&gt;require_with&lt;/code&gt; 之类的规则特别方便，该规则需要检查另一个提交字段的值以使其结果基于：</target>
        </trans-unit>
        <trans-unit id="540259d6ac2989744f3e3ae0818941d532bbec0f" translate="yes" xml:space="preserve">
          <source>If your model is located in a sub-directory, include the relative path from your models directory. For example, if you have a model located at &lt;em&gt;application/models/blog/Queries.php&lt;/em&gt; you&amp;rsquo;ll load it using:</source>
          <target state="translated">如果您的模型位于子目录中，请包括来自模型目录的相对路径。例如，如果您有一个模型位于&lt;em&gt;application / models / blog / Queries.php&lt;/em&gt;，则可以使用以下命令加载它：</target>
        </trans-unit>
        <trans-unit id="10458d92d627cb9c37fc4e5fc0f2ff42749acf48" translate="yes" xml:space="preserve">
          <source>If your model is located in a subdirectory, include the relative path from your models directory. For example, if you have a model located at &lt;em&gt;application/models/blog/Queries.php&lt;/em&gt; you&amp;rsquo;ll load it using:</source>
          <target state="translated">如果您的模型位于子目录中，请包括来自模型目录的相对路径。例如，如果您有一个模型位于&lt;em&gt;application / models / blog / Queries.php&lt;/em&gt;，则可以使用以下命令加载它：</target>
        </trans-unit>
        <trans-unit id="72fbdd3ff8545072b78a0aabb22fc580f37c5ed7" translate="yes" xml:space="preserve">
          <source>If your only interest in loading the library is to handle CSRF protection, then you will never need to load it, as it runs as a filter and has no manual interaction.</source>
          <target state="translated">如果你对加载库的唯一兴趣是处理CSRF保护,那么你将永远不需要加载它,因为它作为过滤器运行,没有手动交互。</target>
        </trans-unit>
        <trans-unit id="54ac820aef945c53ce41dbb61355fc4d2a8451fa" translate="yes" xml:space="preserve">
          <source>If your project folder is not a subfolder of the Apache document root, then your &amp;lt;VirtualHost&amp;gt; element may need a nested &amp;lt;Directory&amp;gt; element to grant the web s erver access to the files.</source>
          <target state="translated">如果您的项目文件夹不是Apache文档根目录的子文件夹，则您的&amp;lt;VirtualHost&amp;gt;元素可能需要嵌套的&amp;lt;Directory&amp;gt;元素，以使Web服务器授予对文件的访问权限。</target>
        </trans-unit>
        <trans-unit id="cb888065fc044ae4b430d92850abfc7cade9bdc9" translate="yes" xml:space="preserve">
          <source>If your server is running an &lt;strong&gt;open_basedir&lt;/strong&gt; restriction this function might not work if you are trying to access a file above the calling script.</source>
          <target state="translated">如果您的服务器运行的是&lt;strong&gt;open_basedir&lt;/strong&gt;限制，则在尝试访问调用脚本上方的文件时，此功能可能无法正常工作。</target>
        </trans-unit>
        <trans-unit id="1355bdf01ed538b70d474868db659578fb8ed085" translate="yes" xml:space="preserve">
          <source>If your server supports rewriting URLs you can easily remove this file with URL rewriting. This is handled differently by different servers, but we will show examples for the two most common web servers here.</source>
          <target state="translated">如果你的服务器支持重写URL,你可以很容易地用URL重写删除这个文件。不同的服务器会有不同的处理方式,但我们将在这里展示两个最常见的网络服务器的例子。</target>
        </trans-unit>
        <trans-unit id="8d44ff42148e4f5f78278775f5d9a17dc5eadb36" translate="yes" xml:space="preserve">
          <source>If your watermark image is a PNG or GIF image, you may specify a color on the image to be &amp;ldquo;transparent&amp;rdquo;. This setting (along with the next) will allow you to specify that color. This works by specifying the &amp;ldquo;X&amp;rdquo; and &amp;ldquo;Y&amp;rdquo; coordinate pixel (measured from the upper left) within the image that corresponds to a pixel representative of the color you want to be transparent.</source>
          <target state="translated">如果您的水印图像是PNG或GIF图像，则可以将图像上的颜色指定为&amp;ldquo;透明&amp;rdquo;。此设置（以及下一个）将允许您指定该颜色。通过在图像中指定&amp;ldquo; X&amp;rdquo;和&amp;ldquo; Y&amp;rdquo;坐标像素（从左上角开始测量）来工作，该像素对应于代表您想要透明的颜色的像素。</target>
        </trans-unit>
        <trans-unit id="a3eb09116a62a5c11ef7d5cb741247be844f8690" translate="yes" xml:space="preserve">
          <source>Ignores IV (not recommended).</source>
          <target state="translated">忽略四(不建议)。</target>
        </trans-unit>
        <trans-unit id="b1bfa9e2a9adb4d0c8c27e860e90dcafc3863dcc" translate="yes" xml:space="preserve">
          <source>Ignoring how contrived this example is, we now have two choices on how to fix the User class. We could modify the class property from &lt;code&gt;$name&lt;/code&gt; to &lt;code&gt;$full_name&lt;/code&gt;, but that would require changes throughout the application. Instead, we can simply map the &lt;code&gt;full_name&lt;/code&gt; column in the database to the &lt;code&gt;$name&lt;/code&gt; property, and be done with the Entity changes:</source>
          <target state="translated">忽略此示例有多难为情，我们现在有两个关于如何修复User类的选择。我们可以将class属性从 &lt;code&gt;$name&lt;/code&gt; 修改为 &lt;code&gt;$full_name&lt;/code&gt; ，但这需要在整个应用程序中进行更改。相反，我们可以简单地将数据库中的 &lt;code&gt;full_name&lt;/code&gt; 列映射到 &lt;code&gt;$name&lt;/code&gt; 属性，并完成Entity更改：</target>
        </trans-unit>
        <trans-unit id="ea118798c37712477af28e614527a6c99852cdb9" translate="yes" xml:space="preserve">
          <source>Image Cropping</source>
          <target state="translated">图像裁剪</target>
        </trans-unit>
        <trans-unit id="8aef0079eb36bcf3fdc530d84414f654e9a0ceb8" translate="yes" xml:space="preserve">
          <source>Image Manipulation</source>
          <target state="translated">图像处理</target>
        </trans-unit>
        <trans-unit id="ec803db86dfeb3c86b6104d8898cb8923875b90d" translate="yes" xml:space="preserve">
          <source>Image Manipulation Class</source>
          <target state="translated">图像处理类</target>
        </trans-unit>
        <trans-unit id="8b57a1a0c45dd99fa098e83f1b30a25446f20914" translate="yes" xml:space="preserve">
          <source>Image Manipulation Library (cropping, resizing, rotating, etc.). Supports GD, ImageMagick, and NetPBM</source>
          <target state="translated">图像处理库(裁剪、调整大小、旋转等)。支持GD、ImageMagick和NetPBM。</target>
        </trans-unit>
        <trans-unit id="292a0b6145463b2255e4ec81142d63f391fd691e" translate="yes" xml:space="preserve">
          <source>Image Quality</source>
          <target state="translated">图像质量</target>
        </trans-unit>
        <trans-unit id="2b65debdb9c8bbe257d738e3034b52c09f08fe30" translate="yes" xml:space="preserve">
          <source>Image Resizing</source>
          <target state="translated">图像调整</target>
        </trans-unit>
        <trans-unit id="a89a6ca544fe79e342fabae69007cd3416e4e444" translate="yes" xml:space="preserve">
          <source>Image Rotating</source>
          <target state="translated">图像旋转</target>
        </trans-unit>
        <trans-unit id="f3061212f4b4130ef1318fe938298f8369ee1ce2" translate="yes" xml:space="preserve">
          <source>Image Watermarking</source>
          <target state="translated">图像水印</target>
        </trans-unit>
        <trans-unit id="d500aa949e614f53dfc3610240eee9b9b66b838f" translate="yes" xml:space="preserve">
          <source>Image height</source>
          <target state="translated">图片高度</target>
        </trans-unit>
        <trans-unit id="7c76daf0dfc72bea5b9597d61b5160e19d771b6c" translate="yes" xml:space="preserve">
          <source>Image opacity. You may specify the opacity (i.e. transparency) of your watermark image. This allows the watermark to be faint and not completely obscure the details from the original image behind it. A 50% opacity is typical.</source>
          <target state="translated">图像不透明度。您可以指定水印图像的不透明度(即透明度)。這可讓水印變得模糊,而不會完全遮蓋其後面原始影像的細節。典型的不透明度为 50%。</target>
        </trans-unit>
        <trans-unit id="419c4258d9a367670b2895e08ae1a1bcc0a64a45" translate="yes" xml:space="preserve">
          <source>Image processing can require a considerable amount of server memory for some operations. If you are experiencing out of memory errors while processing images you may need to limit their maximum size, and/or adjust PHP memory limits.</source>
          <target state="translated">图像处理在某些操作中需要大量的服务器内存。如果你在处理图像时遇到内存不足的错误,你可能需要限制它们的最大尺寸,和/或调整PHP的内存限制。</target>
        </trans-unit>
        <trans-unit id="89b0ad47f2dee8d719599a4a684b488057902f7b" translate="yes" xml:space="preserve">
          <source>Image type (usually the file name extension without the period)</source>
          <target state="translated">图像类型(通常是文件名扩展名,不含句号)</target>
        </trans-unit>
        <trans-unit id="f2cccb1889beba84b84d77cfadc2a038b545b861" translate="yes" xml:space="preserve">
          <source>Image width</source>
          <target state="translated">图像宽度</target>
        </trans-unit>
        <trans-unit id="706661a2f30b3843130674175f136a9295314c71" translate="yes" xml:space="preserve">
          <source>ImageMagick already saves files in the type indicated by their extension, ignoring &lt;strong&gt;$imageType&lt;/strong&gt;</source>
          <target state="translated">ImageMagick已经以扩展名指示的类型保存了文件，忽略了&lt;strong&gt;$ imageType&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6c9b9732f50d4d1753d1bb1cd1c84c51551d9d97" translate="yes" xml:space="preserve">
          <source>ImageMagickHandler #1546</source>
          <target state="translated">ImageMagickHandler #1546</target>
        </trans-unit>
        <trans-unit id="09e871c98fef3b901a775def173e4126aaf73b42" translate="yes" xml:space="preserve">
          <source>Images</source>
          <target state="translated">Images</target>
        </trans-unit>
        <trans-unit id="aec525d8d982b503f0dfa0a9a666f8285e9a980e" translate="yes" xml:space="preserve">
          <source>Images can be cropped so that only a portion of the original image remains. This is often used when creating thumbnail images that should match a certain size/aspect ratio. This is handled with the &lt;code&gt;crop()&lt;/code&gt; method:</source>
          <target state="translated">可以裁剪图像，以便仅保留原始图像的一部分。在创建应与特定尺寸/纵横比匹配的缩略图时经常使用此功能。这是通过 &lt;code&gt;crop()&lt;/code&gt; 方法处理的：</target>
        </trans-unit>
        <trans-unit id="a509594e8bb3d311f22f89e16b97d019524cf4e4" translate="yes" xml:space="preserve">
          <source>Images can be flipped along either their horizontal or vertical axis:</source>
          <target state="translated">图像可以沿其水平或垂直轴翻转。</target>
        </trans-unit>
        <trans-unit id="c853e0dec36ba7068c174c398fd89526cdfd38d1" translate="yes" xml:space="preserve">
          <source>Images can be resized to fit any dimension you require with the resize() method:</source>
          <target state="translated">通过resize()方法可以调整图像的大小以适应你所需要的任何尺寸。</target>
        </trans-unit>
        <trans-unit id="624c2510eaf338f39990af0a8fa5deb7985a0e9a" translate="yes" xml:space="preserve">
          <source>Images/</source>
          <target state="translated">Images/</target>
        </trans-unit>
        <trans-unit id="4703c47d6606e357ddeaadc93d93b7f7f251b79d" translate="yes" xml:space="preserve">
          <source>Images/Handlers/</source>
          <target state="translated">Images/Handlers/</target>
        </trans-unit>
        <trans-unit id="fa1fc85fea05322206584b302630cf1f6c09b12f" translate="yes" xml:space="preserve">
          <source>Imagine that you&amp;rsquo;ve created a new directory, &lt;code&gt;Blog&lt;/code&gt; in your root directory. This will hold a &lt;strong&gt;blog module&lt;/strong&gt; with controllers, models, etc, and you&amp;rsquo;d like to make some of the classes available as a service. The first step is to create a new file: &lt;code&gt;Blog\Config\Services.php&lt;/code&gt;. The skeleton of the file should be:</source>
          <target state="translated">想象一下，您已经在根目录中创建了一个新目录 &lt;code&gt;Blog&lt;/code&gt; 。这将包含一个带有控制器，模型等的&lt;strong&gt;Blog模块&lt;/strong&gt;，并且您想将某些类作为服务使用。第一步是创建一个新文件： &lt;code&gt;Blog\Config\Services.php&lt;/code&gt; 。该文件的框架应为：</target>
        </trans-unit>
        <trans-unit id="4d43a42fe1bb462461303ddc1c42d218f0d8a00b" translate="yes" xml:space="preserve">
          <source>Implement &lt;code&gt;getVarData()&lt;/code&gt; method.</source>
          <target state="translated">实现 &lt;code&gt;getVarData()&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="d340bda569af9fa5834cd3957ea15c806571082e" translate="yes" xml:space="preserve">
          <source>Implement the &lt;a href=&quot;http://php.net/sessionhandlerinterface&quot;&gt;SessionHandlerInterface&lt;/a&gt; interface.</source>
          <target state="translated">实现&lt;a href=&quot;http://php.net/sessionhandlerinterface&quot;&gt;SessionHandlerInterface&lt;/a&gt;接口。</target>
        </trans-unit>
        <trans-unit id="87175cc1e4fbfb313dc1723ce057e599470613c1" translate="yes" xml:space="preserve">
          <source>Implement the &lt;code&gt;display()&lt;/code&gt; method.</source>
          <target state="translated">实现 &lt;code&gt;display()&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="a177fc29756a8a9292d5c9d28ed4ed8a2bfe862e" translate="yes" xml:space="preserve">
          <source>Implement the &lt;code&gt;formatTimelineData()&lt;/code&gt; method.</source>
          <target state="translated">实现 &lt;code&gt;formatTimelineData()&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="4b6d6a30150a506f9b79caf45da5aecb76b0018e" translate="yes" xml:space="preserve">
          <source>Important</source>
          <target state="translated">Important</target>
        </trans-unit>
        <trans-unit id="4a6a9bce8761e179f84af1b751b48c360254c4ed" translate="yes" xml:space="preserve">
          <source>Improper configuration of an application architecture can lead to mistakes that might compromise the security of the whole architecture.</source>
          <target state="translated">应用架构的配置不当会导致错误,可能会危及整个架构的安全。</target>
        </trans-unit>
        <trans-unit id="20129c2246c1ed1b84e363a8b851cad373a49811" translate="yes" xml:space="preserve">
          <source>Improvements to File class</source>
          <target state="translated">对文件类的改进</target>
        </trans-unit>
        <trans-unit id="c0f2cf44a649d768ab8f096d9bb533353784a7b1" translate="yes" xml:space="preserve">
          <source>In &amp;ldquo;Default line breaks&amp;rdquo;, select &amp;ldquo;Mac OS X and Unix (LF)&amp;rdquo;</source>
          <target state="translated">在&amp;ldquo;默认换行符&amp;rdquo;中，选择&amp;ldquo; Mac OS X和Unix（LF）&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="9cc3052c8e31b095b860ed66c0d26dddca0afe51" translate="yes" xml:space="preserve">
          <source>In &amp;ldquo;Default text encoding for new documents&amp;rdquo;, select &amp;ldquo;Unicode (UTF-8, no BOM)&amp;rdquo;</source>
          <target state="translated">在&amp;ldquo;新文档的默认文本编码&amp;rdquo;中，选择&amp;ldquo; Unicode（UTF-8，无BOM）&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="f0ca2ccfb8cf66271249d8e083fce7536cfb02c1" translate="yes" xml:space="preserve">
          <source>In &amp;ldquo;File Encoding&amp;rdquo;, select &amp;ldquo;UTF-8 (recommended)&amp;rdquo;</source>
          <target state="translated">在&amp;ldquo;文件编码&amp;rdquo;中，选择&amp;ldquo; UTF-8（推荐）&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="57d76793ad7e146fc3db3c717f674b5f11fe1ea4" translate="yes" xml:space="preserve">
          <source>In &amp;ldquo;Line Endings&amp;rdquo;, select &amp;ldquo;LF (recommended)&amp;rdquo;</source>
          <target state="translated">在&amp;ldquo;行尾&amp;rdquo;中，选择&amp;ldquo; LF（推荐）&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="2a1b3e68410280d16d8611f9a69a040c299acadc" translate="yes" xml:space="preserve">
          <source>In 2014, CodeIgniter was acquired by the &lt;a href=&quot;https://www.bcit.ca/&quot;&gt;British Columbia Institute of Technology&lt;/a&gt; and was then officially announced as a community-maintained project.</source>
          <target state="translated">2014年，CodeIgniter被&lt;a href=&quot;https://www.bcit.ca/&quot;&gt;不列颠哥伦比亚技术学院&lt;/a&gt;收购，然后正式宣布为社区维护项目。</target>
        </trans-unit>
        <trans-unit id="fd4a4b526148fbb265b7701f8eda6995217f83b5" translate="yes" xml:space="preserve">
          <source>In 2019, the CodeIgniter Foundation was formed to provide a perpetual managing group separate from any other entity to help ensure the framework&amp;rsquo;s future.</source>
          <target state="translated">在2019年，CodeIgniter基金会成​​立，以提供一个独立于任何其他实体的永久管理小组，以帮助确保框架的未来。</target>
        </trans-unit>
        <trans-unit id="243f9fb8651dda958de9cff17af6ea8ee3caac12" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;setCreatedAt()&lt;/code&gt; we convert the string we receive from the model into a DateTime object, ensuring that our timezone is UTC so we can easily convert the viewer&amp;rsquo;s current timezone. In &lt;code&gt;getCreatedAt()&lt;/code&gt;, it converts the time to a formatted string in the application&amp;rsquo;s current timezone.</source>
          <target state="translated">在 &lt;code&gt;setCreatedAt()&lt;/code&gt; 中,我们将从模型中收到的字符串转换为DateTime对象，确保我们的时区为UTC，以便我们可以轻松地转换查看器的当前时区。在 &lt;code&gt;getCreatedAt()&lt;/code&gt; 中，它将时间转换为应用程序当前时区中的格式化字符串。</target>
        </trans-unit>
        <trans-unit id="f684c8232decdbd17dd28ea9f3a00c0207315e37" translate="yes" xml:space="preserve">
          <source>In MySQL &amp;ldquo;DELETE FROM TABLE&amp;rdquo; returns 0 affected rows. The database class has a small hack that allows it to return the correct number of affected rows. By default this hack is enabled but it can be turned off in the database driver file.</source>
          <target state="translated">在MySQL中，&amp;ldquo; DELETE FROM TABLE&amp;rdquo;返回0个受影响的行。数据库类有一个小的技巧，可以让它返回正确数量的受影响的行。默认情况下，此黑客是启用的，但可以在数据库驱动程序文件中将其关闭。</target>
        </trans-unit>
        <trans-unit id="962108e33c4d08ebe9a39ac36f92fcc443d49689" translate="yes" xml:space="preserve">
          <source>In Routes</source>
          <target state="translated">在路线中</target>
        </trans-unit>
        <trans-unit id="c29ddc0f5aeb20f5aa24eff290adfac214c7c0e7" translate="yes" xml:space="preserve">
          <source>In VueJS you just need to add the following code to the &lt;code&gt;created&lt;/code&gt; function, as long as you are using Axios for this type of request.</source>
          <target state="translated">在VueJS中，只要将Axios用于这种类型的请求，您只需将以下代码添加到 &lt;code&gt;created&lt;/code&gt; 函数中即可。</target>
        </trans-unit>
        <trans-unit id="b0f531d489a0e986d15f1b34de74ca4f0bc6d71b" translate="yes" xml:space="preserve">
          <source>In a route, the array key contains the URI to be matched, while the array value contains the destination it should be re-routed to. In the above example, if the literal word &amp;ldquo;product&amp;rdquo; is found in the first segment of the URL, and a number is found in the second segment, the &amp;ldquo;catalog&amp;rdquo; class and the &amp;ldquo;product_lookup&amp;rdquo; method are instead used.</source>
          <target state="translated">在路由中，数组键包含要匹配的URI，而数组值包含应重新路由到的目标。在上面的示例中，如果在URL的第一段中找到文字词&amp;ldquo; product&amp;rdquo;，而在第二段中找到数字，则改用&amp;ldquo; catalog&amp;rdquo;类和&amp;ldquo; product_lookup&amp;rdquo;方法。</target>
        </trans-unit>
        <trans-unit id="704ccc3064bcd29e4f8c3c18da04b92dfbd12b86" translate="yes" xml:space="preserve">
          <source>In a route, the first parameter contains the URI to be matched, while the second parameter contains the destination it should be re-routed to. In the above example, if the literal word &amp;ldquo;product&amp;rdquo; is found in the first segment of the URL, and a number is found in the second segment, the &amp;ldquo;AppCatalog&amp;rdquo; class and the &amp;ldquo;productLookup&amp;rdquo; method are used instead.</source>
          <target state="translated">在路由中，第一个参数包含要匹配的URI，而第二个参数包含应重新路由到的目标。在上面的示例中，如果在URL的第一段中找到文字词&amp;ldquo; product&amp;rdquo;，而在第二段中找到数字，则改用&amp;ldquo; AppCatalog&amp;rdquo;类和&amp;ldquo; productLookup&amp;rdquo;方法。</target>
        </trans-unit>
        <trans-unit id="23d5565b0dee47f213cd13c530912b6bed33a09f" translate="yes" xml:space="preserve">
          <source>In addition to affecting some basic framework behavior (see the next section), you may use this constant in your own development to differentiate between which environment you are running in.</source>
          <target state="translated">除了影响一些基本的框架行为(见下一节),你还可以在自己的开发中使用这个常量来区分你在哪个环境中运行。</target>
        </trans-unit>
        <trans-unit id="cc7472980ade494278b4a6ddaf640805439cba3a" translate="yes" xml:space="preserve">
          <source>In addition to all of the methods in the SplFileInfo class, you get some new tools.</source>
          <target state="translated">除了SplFileInfo类中的所有方法之外,你还得到了一些新的工具。</target>
        </trans-unit>
        <trans-unit id="66c63194537884668f6917f7a5960dd1a5ee5eb0" translate="yes" xml:space="preserve">
          <source>In addition to methods, the interface outlines some necessary properties for the target model. Please see the interface code for details.</source>
          <target state="translated">除了方法之外,该接口还概述了目标模型的一些必要属性。详情请看接口代码。</target>
        </trans-unit>
        <trans-unit id="3761e2ca3b839cb70d239bc9508f9e1289694db2" translate="yes" xml:space="preserve">
          <source>In addition to the five indexes above, there are two reserved words: rowid and subtotal. These are used internally by the Cart class, so please do NOT use those words as index names when inserting data into the cart.</source>
          <target state="translated">除了上述五个索引外,还有两个保留字:rowid和subtotal。这两个词是由Cart类内部使用的,所以当在购物车中插入数据时,请不要使用这些词作为索引名。</target>
        </trans-unit>
        <trans-unit id="e320cafb5ed418cef180c50c9a02b974a1dbc226" translate="yes" xml:space="preserve">
          <source>In addition to the methods listed here, this class inherits the methods from the &lt;a href=&quot;../incoming/message&quot;&gt;Message Class&lt;/a&gt;.</source>
          <target state="translated">除了此处列出的方法之外，此类还从&lt;a href=&quot;../incoming/message&quot;&gt;Message Class&lt;/a&gt;继承这些方法。</target>
        </trans-unit>
        <trans-unit id="bad5d027a53799a6b6360e4d547c1d0f7aac6565" translate="yes" xml:space="preserve">
          <source>In addition to the methods listed here, this class inherits the methods from the &lt;a href=&quot;request&quot;&gt;Request Class&lt;/a&gt; and the &lt;a href=&quot;message&quot;&gt;Message Class&lt;/a&gt;.</source>
          <target state="translated">除了此处列出的方法之外，此类还继承了&lt;a href=&quot;request&quot;&gt;Request类&lt;/a&gt;和&lt;a href=&quot;message&quot;&gt;Message类中的方法&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0cdce2c7517f18794217baa55b53a9a4dd209321" translate="yes" xml:space="preserve">
          <source>In addition to the standard HTTP methods, this also supports two special cases: &amp;lsquo;cli&amp;rsquo;, and &amp;lsquo;ajax&amp;rsquo;. The names are self-explanatory here, but &amp;lsquo;cli&amp;rsquo; would apply to all requests that were run from the command line, while &amp;lsquo;ajax&amp;rsquo; would apply to every AJAX request.</source>
          <target state="translated">除了标准的HTTP方法外，它还支持两种特殊情况：&amp;ldquo; cli&amp;rdquo;和&amp;ldquo; ajax&amp;rdquo;。名称在这里是不言自明的，但是&amp;ldquo; cli&amp;rdquo;将应用于从命令行运行的所有请求，而&amp;ldquo; ajax&amp;rdquo;将应用于每个AJAX请求。</target>
        </trans-unit>
        <trans-unit id="3ebd861390a18e15d7200dc640c3d2c033e21c49" translate="yes" xml:space="preserve">
          <source>In addition to the two methods listed below, the following methods also can take a class name to return the results as: &lt;code&gt;first_row()&lt;/code&gt;, &lt;code&gt;last_row()&lt;/code&gt;, &lt;code&gt;next_row()&lt;/code&gt;, and &lt;code&gt;previous_row()&lt;/code&gt;.</source>
          <target state="translated">除了下面列出的两个方法之外，以下方法还可以采用类名称来返回结果： &lt;code&gt;first_row()&lt;/code&gt; ， &lt;code&gt;last_row()&lt;/code&gt; ， &lt;code&gt;next_row()&lt;/code&gt; 和 &lt;code&gt;previous_row()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ac03976b248db6e3474e2da5722c81be4e4e9b18" translate="yes" xml:space="preserve">
          <source>In addition to the two methods listed below, the following methods also can take a class name to return the results as: &lt;code&gt;getFirstRow()&lt;/code&gt;, &lt;code&gt;getLastRow()&lt;/code&gt;, &lt;code&gt;getNextRow()&lt;/code&gt;, and &lt;code&gt;getPreviousRow()&lt;/code&gt;.</source>
          <target state="translated">除了下面列出的两个方法之外，以下方法还可以采用类名称来返回结果： &lt;code&gt;getFirstRow()&lt;/code&gt; ， &lt;code&gt;getLastRow()&lt;/code&gt; ， &lt;code&gt;getNextRow()&lt;/code&gt; 和 &lt;code&gt;getPreviousRow()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="efa26453f983040032715d3e90d10fde0a383180" translate="yes" xml:space="preserve">
          <source>In addition to the validation method like the ones we used above, you can also prep your data in various ways. For example, you can set up rules like this:</source>
          <target state="translated">除了像我们上面使用的验证方法之外,你还可以通过各种方式来准备数据。例如,你可以设置这样的规则。</target>
        </trans-unit>
        <trans-unit id="4019c6dbe168f066a85fe120c1d9ec46a412ada5" translate="yes" xml:space="preserve">
          <source>In addition to the values above, the cookie and native drivers apply the following configuration values shared by the &lt;a href=&quot;../incoming/incomingrequest&quot;&gt;IncomingRequest&lt;/a&gt; and &lt;a href=&quot;security&quot;&gt;Security&lt;/a&gt; classes:</source>
          <target state="translated">除了上述值之外，cookie和本机驱动程序还应用了&lt;a href=&quot;../incoming/incomingrequest&quot;&gt;IncomingRequest&lt;/a&gt;和&lt;a href=&quot;security&quot;&gt;Security&lt;/a&gt;类共享的以下配置值：</target>
        </trans-unit>
        <trans-unit id="cce36f290f2f80779b6f11e892337d45dad93ea9" translate="yes" xml:space="preserve">
          <source>In addition to the values above, the cookie and native drivers apply the following configuration values shared by the &lt;a href=&quot;input&quot;&gt;Input&lt;/a&gt; and &lt;a href=&quot;security&quot;&gt;Security&lt;/a&gt; classes:</source>
          <target state="translated">除上述值外，cookie和本机驱动程序还应用以下由&lt;a href=&quot;input&quot;&gt;Input&lt;/a&gt;和&lt;a href=&quot;security&quot;&gt;Security&lt;/a&gt;类共享的配置值：</target>
        </trans-unit>
        <trans-unit id="d53a42e495b299edb060c099748d842afab3aa7a" translate="yes" xml:space="preserve">
          <source>In addition to these methods, &lt;code&gt;CIUnitTestCase&lt;/code&gt; also comes with a convenience property for parameter-free methods you want run during set up and tear down:</source>
          <target state="translated">除了这些方法之外， &lt;code&gt;CIUnitTestCase&lt;/code&gt; 还具有一个便利属性，用于您要在设置和拆卸期间运行的无参数方法：</target>
        </trans-unit>
        <trans-unit id="38fefee120e92b970f067930f726f64a154ae5a4" translate="yes" xml:space="preserve">
          <source>In addition to these two primary methods, the prepared query object also has the following methods:</source>
          <target state="translated">除了这两个主要方法外,准备好的查询对象还有以下方法。</target>
        </trans-unit>
        <trans-unit id="7e19ed18d6f0299bf94b3b3b7a5599ee8ae14852" translate="yes" xml:space="preserve">
          <source>In addition to these, a number of methods exist to provide additional information about the date:</source>
          <target state="translated">除此以外,还有一些方法可以提供有关日期的额外信息。</target>
        </trans-unit>
        <trans-unit id="f75b00bd884f3b6639ffcb8308e9a23a3a291341" translate="yes" xml:space="preserve">
          <source>In addition to this, CodeIgniter has some helpful error pages when you hit exceptions or other errors in your program. Open up &lt;code&gt;app/Controllers/Home.php&lt;/code&gt; and change some line to generate an error (removing a semi-colon or brace should do the trick!). You will be greeted by a screen looking something like this:</source>
          <target state="translated">除此之外，当您在程序中遇到异常或其他错误时，CodeIgniter还会提供一些有用的错误页面。打开 &lt;code&gt;app/Controllers/Home.php&lt;/code&gt; 并更改一些行以生成错误（删除分号或花括号即可解决问题！）。屏幕上会出现类似以下内容的问候语：</target>
        </trans-unit>
        <trans-unit id="5595b5e6fdfae8ac89bd7693f93585e540f15575" translate="yes" xml:space="preserve">
          <source>In addition, CodeIgniter also provides 2 special types of session data that are further explained below: flashdata and tempdata.</source>
          <target state="translated">此外,CodeIgniter还提供了2种特殊类型的会话数据,下面将进一步解释:flashdata和tempdata。</target>
        </trans-unit>
        <trans-unit id="cf130286b501e1fc5c31444c2209331a248d64d2" translate="yes" xml:space="preserve">
          <source>In addition, if performance is your only concern, you may want to look into using &lt;a href=&quot;http://eddmann.com/posts/storing-php-sessions-file-caches-in-memory-using-tmpfs/&quot;&gt;tmpfs&lt;/a&gt;, (warning: external resource), which can make your sessions blazing fast.</source>
          <target state="translated">此外，如果只考虑性能，则可能需要研究使用&lt;a href=&quot;http://eddmann.com/posts/storing-php-sessions-file-caches-in-memory-using-tmpfs/&quot;&gt;tmpfs&lt;/a&gt;，（警告：外部资源），它可以使会话快速发展。</target>
        </trans-unit>
        <trans-unit id="809e025c22298ab8ebc37620d40b6f6b2d010175" translate="yes" xml:space="preserve">
          <source>In addition, if performance is your only concern, you may want to look into using &lt;a href=&quot;https://eddmann.com/posts/storing-php-sessions-file-caches-in-memory-using-tmpfs/&quot;&gt;tmpfs&lt;/a&gt;, (warning: external resource), which can make your sessions blazing fast.</source>
          <target state="translated">此外，如果只考虑性能，则可能需要研究使用&lt;a href=&quot;https://eddmann.com/posts/storing-php-sessions-file-caches-in-memory-using-tmpfs/&quot;&gt;tmpfs&lt;/a&gt;，（警告：外部资源），它可以使会话快速发展。</target>
        </trans-unit>
        <trans-unit id="0cd4424b57219982530599c4ac33b1edb43c002e" translate="yes" xml:space="preserve">
          <source>In addition, the Response class allows you to work the HTTP cache layer for the best performance.</source>
          <target state="translated">此外,Response类允许你在HTTP缓存层工作,以获得最佳性能。</target>
        </trans-unit>
        <trans-unit id="3c4a0173e428d1272515b49ae6cc5374ae9d8e05" translate="yes" xml:space="preserve">
          <source>In addition, the benchmark is always started the moment the framework is invoked, and ended by the output class right before sending the final view to the browser, enabling a very accurate timing of the entire system execution to be shown.</source>
          <target state="translated">此外,基准总是在框架被调用的那一刻开始,并在输出类向浏览器发送最终视图之前结束,使得整个系统执行的时间能够非常准确地显示出来。</target>
        </trans-unit>
        <trans-unit id="976258b6459ae608db494c89052ace41d0a34a3b" translate="yes" xml:space="preserve">
          <source>In addition, there are a few utility methods for retrieving information from either $_GET or $_POST, while maintaining the ability to control the order you look for it:</source>
          <target state="translated">此外,有一些实用的方法可以从$_GET或$_POST中检索信息,同时保持控制查找顺序的能力。</target>
        </trans-unit>
        <trans-unit id="492d9b60c64fae1231e3ed88021404d646be8025" translate="yes" xml:space="preserve">
          <source>In addition, you can walk forward/backwards/first/last through your results using these variations:</source>
          <target state="translated">此外,您可以使用这些变化向前/向后/先/最后走过您的结果。</target>
        </trans-unit>
        <trans-unit id="b581e2eb41cdb5b05f7d50002b98150358299d77" translate="yes" xml:space="preserve">
          <source>In addition, you may also create and use &lt;a href=&quot;#custom-drivers&quot;&gt;Custom Drivers&lt;/a&gt;, if the ones provided by default don&amp;rsquo;t satisfy your use case.</source>
          <target state="translated">此外，如果默认提供的&lt;a href=&quot;#custom-drivers&quot;&gt;自定义驱动程序&lt;/a&gt;不满足您的用例，您还可以创建和使用自定义驱动程序。</target>
        </trans-unit>
        <trans-unit id="d435caf85fcb27014eb1e46896fe8e49788d5653" translate="yes" xml:space="preserve">
          <source>In addition, you may create your own, custom session drivers based on other kinds of storage, while still taking advantage of the features of the Session class.</source>
          <target state="translated">此外,您可以基于其他类型的存储创建您自己的、自定义的会话驱动程序,同时仍然可以利用Session类的功能。</target>
        </trans-unit>
        <trans-unit id="532908ebbd6330cc2f83b99d01a4a7b64ed2e7ad" translate="yes" xml:space="preserve">
          <source>In all the above, the latest version of a repository can be downloaded by selecting the &amp;ldquo;releases&amp;rdquo; link in the secondary navbar inside the &amp;ldquo;Code&amp;rdquo; tab of its Github repository page. The current (in development) version of each can be cloned or downloaded by selecting the &amp;ldquo;Clone or download&amp;rdquo; dropdown button on the right-hand side if the repository homepage.</source>
          <target state="translated">在上述所有内容中，可以通过选择其Github存储库页面的&amp;ldquo;代码&amp;rdquo;选项卡内的辅助导航栏中的&amp;ldquo;版本&amp;rdquo;链接来下载存储库的最新版本。如果选择存储库主页，则可以通过选择右侧的&amp;ldquo;克隆或下载&amp;rdquo;下拉按钮来克隆或下载每个版本的当前（开发中）版本。</target>
        </trans-unit>
        <trans-unit id="d80702da00124ddf66c3564cb6aec690f943b188" translate="yes" xml:space="preserve">
          <source>In case it isn&amp;rsquo;t clear from the above table, Blowfish, CAST5 and RC4 support variable length keys. That is, any number in the shown ranges is valid, although in bit terms that only happens in 8-bit increments.</source>
          <target state="translated">如果上表不清楚，则Blowfish，CAST5和RC4支持可变长度的键。也就是说，显示的范围内的任何数字都是有效的，尽管就位而言，仅以8位为增量。</target>
        </trans-unit>
        <trans-unit id="59cab91003f2c78c0d0f27fa2989153bf01e214e" translate="yes" xml:space="preserve">
          <source>In controller:</source>
          <target state="translated">在控制器。</target>
        </trans-unit>
        <trans-unit id="48a472865bf7d6f47ad20f5fffa2b50a0c217653" translate="yes" xml:space="preserve">
          <source>In each environment, place the &lt;strong&gt;.env&lt;/strong&gt; file in the project&amp;rsquo;s root folder. For most setups, this will be the same level as the &lt;code&gt;system&lt;/code&gt; and &lt;code&gt;app&lt;/code&gt; directories.</source>
          <target state="translated">在每种环境中，请将&lt;strong&gt;.env&lt;/strong&gt;文件放置在项目的根文件夹中。对于大多数设置，这将与 &lt;code&gt;system&lt;/code&gt; 和 &lt;code&gt;app&lt;/code&gt; 目录处于同一级别。</target>
        </trans-unit>
        <trans-unit id="7cdef9bc65e0abce9e8f473c52a9d1ff6df2fc1e" translate="yes" xml:space="preserve">
          <source>In general, code should be commented prolifically. It not only helps describe the flow and intent of the code for less experienced programmers, but can prove invaluable when returning to your own code months down the line. There is not a required format for comments, but the following are recommended.</source>
          <target state="translated">一般情况下,代码应该多加注释,这不仅有助于为经验不足的程序员描述代码的流程和意图,而且在几个月后返回自己的代码时,可以证明这是非常宝贵的。它不仅有助于为经验较少的程序员描述代码的流程和意图,而且在几个月后回到你自己的代码时,可以证明是非常宝贵的。注释的格式并不是必须的,但以下是推荐的。</target>
        </trans-unit>
        <trans-unit id="242fbb9100d35947f33d496e3c0c9f0e7989fe7e" translate="yes" xml:space="preserve">
          <source>In general, parenthesis and brackets should not use any additional spaces. The exception is that a space should always follow PHP control structures that accept arguments with parenthesis (declare, do-while, elseif, for, foreach, if, switch, while), to help distinguish them from functions and increase readability.</source>
          <target state="translated">一般来说,小括号和括号不应该使用任何额外的空格,但例外的是,在接受带小括号的参数的PHP控制结构(declare,do-while,elseif,for,foreach,if,switch,while)后面应该有一个空格。例外的情况是,在接受带括号的参数的PHP控制结构(declare、do-while、elseif、for、foreach、if、switch、while)后面总是要有一个空格,以帮助区别于函数,增加可读性。</target>
        </trans-unit>
        <trans-unit id="50634ddda5b00bfcf9b594992add4923966bcd86" translate="yes" xml:space="preserve">
          <source>In many databases it is advisable to protect table and field names - for example with backticks in MySQL. &lt;strong&gt;Query Builder queries are automatically protected&lt;/strong&gt;, however if you need to manually protect an identifier you can use:</source>
          <target state="translated">在许多数据库中，建议保护表名和字段名，例如在MySQL中使用反引号。&lt;strong&gt;Query Builder查询会自动受到保护&lt;/strong&gt;，但是，如果您需要手动保护标识符，则可以使用：</target>
        </trans-unit>
        <trans-unit id="f9958aed62eb8668d5f92744eb8b866144d7b279" translate="yes" xml:space="preserve">
          <source>In many databases, it is advisable to protect table and field names - for example with backticks in MySQL. &lt;strong&gt;Query Builder queries are automatically protected&lt;/strong&gt;, but if you need to manually protect an identifier you can use:</source>
          <target state="translated">在许多数据库中，建议保护表名和字段名，例如使用MySQL中的反引号。&lt;strong&gt;Query Builder查询会自动受到保护&lt;/strong&gt;，但是如果您需要手动保护标识符，则可以使用：</target>
        </trans-unit>
        <trans-unit id="b7ac6ab4a9b024810e0a850d70775f07d6ff3686" translate="yes" xml:space="preserve">
          <source>In most cases, you will be using the Pager library in order to paginate results that you retrieve from the database. When using the &lt;a href=&quot;../models/model&quot;&gt;Model&lt;/a&gt; class, you can use its built-in &lt;code&gt;paginate()&lt;/code&gt; method to automatically retrieve the current batch of results, as well as set up the Pager library so it&amp;rsquo;s ready to use in your controllers. It even reads the current page it should display from the current URL via a &lt;code&gt;page=X&lt;/code&gt; query variable.</source>
          <target state="translated">在大多数情况下，您将使用Pager库来分页从数据库中检索到的结果。使用&lt;a href=&quot;../models/model&quot;&gt;Model&lt;/a&gt;类时，可以使用其内置的 &lt;code&gt;paginate()&lt;/code&gt; 方法自动检索当前的结果批次，并设置Pager库，以便可以在控制器中使用它。它甚至通过 &lt;code&gt;page=X&lt;/code&gt; 查询变量从当前URL读取应显示的当前页面。</target>
        </trans-unit>
        <trans-unit id="e1ccba208c10cbaa2e0af77ad689cf36dbc9550b" translate="yes" xml:space="preserve">
          <source>In nearly all cases, updating the cart will be something the user does via the &amp;ldquo;view cart&amp;rdquo; page, so as a developer, it is unlikely that you will ever have to concern yourself with the &amp;ldquo;row ID&amp;rdquo;, other than making sure your &amp;ldquo;view cart&amp;rdquo; page contains this information in a hidden form field, and making sure it gets passed to the &lt;code&gt;update()&lt;/code&gt; method when the update form is submitted. Please examine the construction of the &amp;ldquo;view cart&amp;rdquo; page above for more information.</source>
          <target state="translated">在几乎所有情况下，更新购物车都是用户通过&amp;ldquo;查看购物车&amp;rdquo;页面进行的操作，因此，作为开发人员，除了确保您的行号外，您几乎不必担心&amp;ldquo;行ID&amp;rdquo; &amp;ldquo;查看购物车&amp;rdquo;页面在隐藏的表单字段中包含此信息，并确保在提交更新表单时将其传递给 &lt;code&gt;update()&lt;/code&gt; 方法。请检查上方&amp;ldquo;查看购物车&amp;rdquo;页面的结构以获取更多信息。</target>
        </trans-unit>
        <trans-unit id="bc230e107ef92a380e492dcab63f433f5b46a9e4" translate="yes" xml:space="preserve">
          <source>In order for the Profiler to compile and display your benchmark data you must name your mark points using specific syntax.</source>
          <target state="translated">为了让Profiler编译和显示你的基准数据,你必须使用特定的语法来命名你的标记点。</target>
        </trans-unit>
        <trans-unit id="01b12010c126e02625a559d4424949d167724a6b" translate="yes" xml:space="preserve">
          <source>In order for the captcha function to prevent someone from submitting, you will need to add the information returned from &lt;code&gt;create_captcha()&lt;/code&gt; to your database. Then, when the data from the form is submitted by the user you will need to verify that the data exists in the database and has not expired.</source>
          <target state="translated">为了使验证码功能阻止某人提交，您需要将 &lt;code&gt;create_captcha()&lt;/code&gt; 返回的信息添加到数据库中。然后，当用户提交表单中的数据时，您将需要验证数据是否存在于数据库中并且尚未过期。</target>
        </trans-unit>
        <trans-unit id="844a5cf2b9f7452ae04f106d9d615a0290f84385" translate="yes" xml:space="preserve">
          <source>In order for the image class to be allowed to do any processing, the folder containing the image files must have write permissions.</source>
          <target state="translated">为了使图像类能够进行任何处理,包含图像文件的文件夹必须有写权限。</target>
        </trans-unit>
        <trans-unit id="c30fb50dd5f280d09756ca3530321d84dfa4058f" translate="yes" xml:space="preserve">
          <source>In order for the image class to be allowed to do any processing, the image file must have &amp;ldquo;write&amp;rdquo; file permissions For example, 777.</source>
          <target state="translated">为了允许图像类进行任何处理，图像文件必须具有&amp;ldquo;写&amp;rdquo;文件权限，例如777。</target>
        </trans-unit>
        <trans-unit id="c398eabf1b69b1a562c1d87eeb95dfc1a42914c2" translate="yes" xml:space="preserve">
          <source>In order for the log file to actually be written, the &lt;em&gt;logs/&lt;/em&gt; directory must be writable. In addition, you must set the &amp;ldquo;threshold&amp;rdquo; for logging in &lt;em&gt;application/config/config.php&lt;/em&gt;. You might, for example, only want error messages to be logged, and not the other two types. If you set it to zero logging will be disabled.</source>
          <target state="translated">为了实际写入日志文件，&lt;em&gt;logs /&lt;/em&gt;目录必须是可写的。另外，您必须设置&amp;ldquo;阈值&amp;rdquo;以登录&lt;em&gt;application / config / config.php&lt;/em&gt;。例如，您可能只希望记录错误消息，而不希望其他两种类型。如果将其设置为零，则将禁用日志记录。</target>
        </trans-unit>
        <trans-unit id="76df0027cbcfa6b98c541123c208ff333a6de832" translate="yes" xml:space="preserve">
          <source>In order for this function to work it must be used before anything is outputted to the browser since it utilizes server headers.</source>
          <target state="translated">为了使这个函数发挥作用,必须在向浏览器输出任何东西之前使用它,因为它使用了服务器头文件。</target>
        </trans-unit>
        <trans-unit id="a8dc6f8e6fb9a09353e9d3663d0a1ced20c0d1c6" translate="yes" xml:space="preserve">
          <source>In order for this function to write data to a file, its permissions must be set such that it is writable. If the file does not already exist, then the directory containing it must be writable.</source>
          <target state="translated">为了让这个函数向一个文件写入数据,它的权限必须被设置为可写。如果文件不存在,那么包含该文件的目录必须是可写的。</target>
        </trans-unit>
        <trans-unit id="b81060b34b990dd615cce085bcba90ed4f5dac45" translate="yes" xml:space="preserve">
          <source>In order to accept Trackbacks you must display a Trackback URL next to each one of your weblog entries. This will be the URL that people will use to send you Trackbacks (we will refer to this as your &amp;ldquo;Ping URL&amp;rdquo;).</source>
          <target state="translated">为了接受引用，您必须在每个Weblog条目旁边显示一个引用URL。这将是人们用来向您发送引用通告的URL（我们将其称为&amp;ldquo; Ping URL&amp;rdquo;）。</target>
        </trans-unit>
        <trans-unit id="f783196de2d835ade2e43c921b4c28b5f28c0f6d" translate="yes" xml:space="preserve">
          <source>In order to act as a &amp;ldquo;registrar&amp;rdquo; the classes so identified must have a static function named the same as the configuration class, and it should return an associative array of property settings.</source>
          <target state="translated">为了充当&amp;ldquo;注册商&amp;rdquo;，如此标识的类必须具有与配置类相同的静态函数，并且应返回属性设置的关联数组。</target>
        </trans-unit>
        <trans-unit id="6f10a0ab3e5ff3bd9c0704571d9be715857612a5" translate="yes" xml:space="preserve">
          <source>In order to call a specific group, you will pass its name to the &lt;code&gt;run()&lt;/code&gt; method. For example, to call the signup rule you will do this:</source>
          <target state="translated">为了调用特定的组，您将其名称传递给 &lt;code&gt;run()&lt;/code&gt; 方法。例如，要调用注册规则，您将执行以下操作：</target>
        </trans-unit>
        <trans-unit id="572f62cd72002154cccbac5027b5b8facdff6e85" translate="yes" xml:space="preserve">
          <source>In order to fetch a line from a particular file you must load the file first. Loading a language file is done with the following code:</source>
          <target state="translated">为了从一个特定的文件中获取一行,你必须先加载该文件。加载语言文件的方法是用下面的代码来完成的。</target>
        </trans-unit>
        <trans-unit id="d71c3d7b6252fbc639ec1679a007a6d5c8cb7cfd" translate="yes" xml:space="preserve">
          <source>In order to get the most out of CodeIgniter, you need to have a basic understanding of how HTTP requests and responses work. Since this is what you work with while developing web applications, understanding the concepts behind HTTP is a &lt;strong&gt;must&lt;/strong&gt; for all developers that want to be successful.</source>
          <target state="translated">为了充分利用CodeIgniter，您需要对HTTP请求和响应的工作方式有基本的了解。由于这是开发Web应用程序时要使用的内容，&lt;strong&gt;因此&lt;/strong&gt;对于所有希望成功的开发人员来说，&lt;strong&gt;必须&lt;/strong&gt;理解HTTP背后的概念。</target>
        </trans-unit>
        <trans-unit id="9993db2742b3aaa2ee6b708d011b040da3012817" translate="yes" xml:space="preserve">
          <source>In order to help out, CodeIgniter uses a series of function, method, class and variable names in its operation. Because of this, some names cannot be used by a developer. Following is a list of reserved names that cannot be used.</source>
          <target state="translated">为了提供帮助,CodeIgniter在操作中使用了一系列的函数、方法、类和变量名称。正因为如此,有些名字是不能被开发者使用的。以下是不能使用的保留名称列表。</target>
        </trans-unit>
        <trans-unit id="79bb724f02638119bbe24d5dfe796c2327d9b113" translate="yes" xml:space="preserve">
          <source>In order to implement form validation you&amp;rsquo;ll need three things:</source>
          <target state="translated">为了实现表单验证，您需要三件事：</target>
        </trans-unit>
        <trans-unit id="95860db938d3919eb2ade80e744190ab3980d9ab" translate="yes" xml:space="preserve">
          <source>In order to initialize the Forge class, your database driver must already be running, since the forge class relies on it.</source>
          <target state="translated">为了初始化Forge类,你的数据库驱动必须已经在运行,因为forge类依赖于它。</target>
        </trans-unit>
        <trans-unit id="03179a18ba52d77fa333ef687f94e78f9848a9c9" translate="yes" xml:space="preserve">
          <source>In order to initialize the Utility class, your database driver must already be running, since the utilities class relies on it.</source>
          <target state="translated">为了初始化Utility类,你的数据库驱动必须已经在运行,因为utilities类依赖于它。</target>
        </trans-unit>
        <trans-unit id="adf7ee846331d544d1c43b60b08e4b43f60e7f58" translate="yes" xml:space="preserve">
          <source>In order to load those pages, you&amp;rsquo;ll have to check whether the requested page actually exists. This will be the body of the &lt;code&gt;view()&lt;/code&gt; method in the &lt;code&gt;Pages&lt;/code&gt; controller created above:</source>
          <target state="translated">为了加载这些页面，您必须检查所请求的页面是否确实存在。这将是上面创建的 &lt;code&gt;Pages&lt;/code&gt; 控制器中 &lt;code&gt;view()&lt;/code&gt; 方法的主体：</target>
        </trans-unit>
        <trans-unit id="48e4674ff56f25d6125bb91b699b64a704f11401" translate="yes" xml:space="preserve">
          <source>In order to load those pages, you&amp;rsquo;ll have to check whether the requested page actually exists:</source>
          <target state="translated">为了加载这些页面，您必须检查所请求的页面是否实际存在：</target>
        </trans-unit>
        <trans-unit id="8a4c82565fd04f00fb822994d0a5110489375e16" translate="yes" xml:space="preserve">
          <source>In order to maintain compatibility on case-sensitive file systems, the Driver_name directory must be named in the format returned by &lt;code&gt;ucfirst()&lt;/code&gt;.</source>
          <target state="translated">为了保持区分大小写的文件系统的兼容性，必须以 &lt;code&gt;ucfirst()&lt;/code&gt; 返回的格式命名Driver_name目录。</target>
        </trans-unit>
        <trans-unit id="97fc22c170f7fff66b3a58c6d9d1c802b00aaa34" translate="yes" xml:space="preserve">
          <source>In order to organize your rules into &amp;ldquo;sets&amp;rdquo; requires that you place them into &amp;ldquo;sub arrays&amp;rdquo;. Consider the following example, showing two sets of rules. We&amp;rsquo;ve arbitrarily called these two rules &amp;ldquo;signup&amp;rdquo; and &amp;ldquo;email&amp;rdquo;. You can name your rules anything you want:</source>
          <target state="translated">为了将规则组织成&amp;ldquo;集合&amp;rdquo;，需要将它们放入&amp;ldquo;子数组&amp;rdquo;中。考虑以下示例，其中显示了两组规则。我们随意将这两个规则称为&amp;ldquo;注册&amp;rdquo;和&amp;ldquo;电子邮件&amp;rdquo;。您可以根据需要命名规则：</target>
        </trans-unit>
        <trans-unit id="2aa9eb02e2c81f88a063bb0a61094dfc58eb41dd" translate="yes" xml:space="preserve">
          <source>In order to take advantage of the additional tools provided, your tests must extend &lt;code&gt;CIUnitTestCase&lt;/code&gt;. All tests are expected to be located in the &lt;strong&gt;tests/app&lt;/strong&gt; directory by default.</source>
          <target state="translated">为了利用所提供的其他工具，您的测试必须扩展 &lt;code&gt;CIUnitTestCase&lt;/code&gt; 。默认情况下，所有测试均应位于&lt;strong&gt;tests / app&lt;/strong&gt;目录中。</target>
        </trans-unit>
        <trans-unit id="04ab03494e9e24ce471d990853db6244fbde4b25" translate="yes" xml:space="preserve">
          <source>In order to take advantage of the built-in database tools that CodeIgniter provides for testing, your tests must extend &lt;code&gt;CIDatabaseTestCase&lt;/code&gt;:</source>
          <target state="translated">为了利用CodeIgniter提供的用于测试的内置数据库工具，您的测试必须扩展 &lt;code&gt;CIDatabaseTestCase&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="cbb85b1b5b0b952e69e01ab11d19201e4c4079a2" translate="yes" xml:space="preserve">
          <source>In order to use the &amp;lsquo;DatabaseHandler&amp;rsquo; session driver, you must also create this table that we already mentioned and then set it as your &lt;code&gt;$sessionSavePath&lt;/code&gt; value. For example, if you would like to use &amp;lsquo;ci_sessions&amp;rsquo; as your table name, you would do this:</source>
          <target state="translated">为了使用&amp;ldquo; DatabaseHandler&amp;rdquo;会话驱动程序，您还必须创建我们已经提到的该表，然后将其设置为 &lt;code&gt;$sessionSavePath&lt;/code&gt; 值。例如，如果您想使用&amp;ldquo; ci_sessions&amp;rdquo;作为表名，则可以这样做：</target>
        </trans-unit>
        <trans-unit id="4b6982f5f262a6b3f26b7c3695604256f2b1d771" translate="yes" xml:space="preserve">
          <source>In order to use the &amp;lsquo;database&amp;rsquo; session driver, you must also create this table that we already mentioned and then set it as your &lt;code&gt;$config['sess_save_path']&lt;/code&gt; value. For example, if you would like to use &amp;lsquo;ci_sessions&amp;rsquo; as your table name, you would do this:</source>
          <target state="translated">为了使用&amp;ldquo;数据库&amp;rdquo;会话驱动程序，您还必须创建我们已经提到的该表，然后将其设置为 &lt;code&gt;$config['sess_save_path']&lt;/code&gt; 值。例如，如果您想使用&amp;ldquo; ci_sessions&amp;rdquo;作为表名，则可以这样做：</target>
        </trans-unit>
        <trans-unit id="0541ca32dc7aa92d9773390c8a2395e1a6508a7b" translate="yes" xml:space="preserve">
          <source>In order to use the &lt;a href=&quot;../libraries/curlrequest&quot;&gt;CURLRequest&lt;/a&gt;, you will need &lt;a href=&quot;https://www.php.net/manual/en/curl.requirements.php&quot;&gt;libcurl&lt;/a&gt; installed.</source>
          <target state="translated">为了使用&lt;a href=&quot;../libraries/curlrequest&quot;&gt;CURLRequest&lt;/a&gt;，您将需要安装&lt;a href=&quot;https://www.php.net/manual/en/curl.requirements.php&quot;&gt;libcurl&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="28f92a5f5e2598ca36555472becde8aa662153e4" translate="yes" xml:space="preserve">
          <source>In order to use the &lt;code&gt;printDebugger()&lt;/code&gt; method, you need to avoid clearing the email parameters.</source>
          <target state="translated">为了使用 &lt;code&gt;printDebugger()&lt;/code&gt; 方法，您需要避免清除电子邮件参数。</target>
        </trans-unit>
        <trans-unit id="c2565ac24b107f77faa9b3a972c7bda4dc158ab5" translate="yes" xml:space="preserve">
          <source>In order to use the &lt;code&gt;print_debugger()&lt;/code&gt; method, you need to avoid clearing the email parameters.</source>
          <target state="translated">为了使用 &lt;code&gt;print_debugger()&lt;/code&gt; 方法，您需要避免清除电子邮件参数。</target>
        </trans-unit>
        <trans-unit id="05053be87a9bb781fd03d3a487d098057a73f3a2" translate="yes" xml:space="preserve">
          <source>In other words, if an XML-RPC Client sends a request for the new_post method, your server will load the My_blog class and call the new_entry function. If the request is for the update_post method, your server will load the My_blog class and call the &lt;code&gt;update_entry()&lt;/code&gt; method.</source>
          <target state="translated">换句话说，如果XML-RPC客户端发送对new_post方法的请求，则您的服务器将加载My_blog类并调用new_entry函数。如果请求是针对update_post方法，则您的服务器将加载My_blog类并调用 &lt;code&gt;update_entry()&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="90abf579405cd4058b5d0b68027900ad21d8aa97" translate="yes" xml:space="preserve">
          <source>In our Trackback receiving code above, if the third segment is missing, we will issue an error. Without a valid entry ID, there&amp;rsquo;s no reason to continue.</source>
          <target state="translated">在上面的引用通告接收代码中，如果缺少第三部分，我们将发出错误。没有有效的条目ID，就没有理由继续。</target>
        </trans-unit>
        <trans-unit id="fbb4934ef06339777be78160da0e3ed458e17ec7" translate="yes" xml:space="preserve">
          <source>In previous CodeIgniter versions, a different, &amp;ldquo;cookie driver&amp;rdquo; was the only option and we have received negative feedback on not providing that option. While we do listen to feedback from the community, we want to warn you that it was dropped because it is &lt;strong&gt;unsafe&lt;/strong&gt; and we advise you NOT to try to replicate it via a custom driver.</source>
          <target state="translated">在以前的CodeIgniter版本中，唯一的选择是不同的&amp;ldquo; cookie驱动程序&amp;rdquo;，而我们不提供该选项则收到了负面反馈。尽管我们确实听取了社区的反馈，但是我们想警告您它已被删除，因为它是&lt;strong&gt;不安全的&lt;/strong&gt;，我们建议您不要尝试通过自定义驱动程序来复制它。</target>
        </trans-unit>
        <trans-unit id="ad01dacd4bd45a1c366f674d7f153632ab4f701a" translate="yes" xml:space="preserve">
          <source>In previous CodeIgniter versions, the session data array included 4 items by default: &amp;lsquo;session_id&amp;rsquo;, &amp;lsquo;ip_address&amp;rsquo;, &amp;lsquo;user_agent&amp;rsquo;, &amp;lsquo;last_activity&amp;rsquo;.</source>
          <target state="translated">在以前的CodeIgniter版本中，默认情况下，会话数据数组包括4个项目：&amp;ldquo; session_id&amp;rdquo;，&amp;ldquo; ip_address&amp;rdquo;，&amp;ldquo; user_agent&amp;rdquo;，&amp;ldquo; last_activity&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="d0071c6ee3897f7ea33ae892b3baa518e7c8e97f" translate="yes" xml:space="preserve">
          <source>In previous versions, regular session data in CodeIgniter was referred to as &amp;lsquo;userdata&amp;rsquo;. Have this in mind if that term is used elsewhere in the manual. Most of it is written to explain how the custom &amp;lsquo;userdata&amp;rsquo; methods work.</source>
          <target state="translated">在以前的版本中，CodeIgniter中的常规会话数据被称为&amp;ldquo; userdata&amp;rdquo;。如果在手册的其他地方使用了该术语，请牢记这一点。大部分内容旨在说明自定义&amp;ldquo; userdata&amp;rdquo;方法的工作方式。</target>
        </trans-unit>
        <trans-unit id="0b4d77091e4390375ef7bdfbd30ad4ab8386cad8" translate="yes" xml:space="preserve">
          <source>In previous versions, the &lt;code&gt;unset_userdata()&lt;/code&gt; method used to accept an associative array of &lt;code&gt;key =&amp;gt; 'dummy value'&lt;/code&gt; pairs. This is no longer supported.</source>
          <target state="translated">在以前的版本中， &lt;code&gt;unset_userdata()&lt;/code&gt; 方法用于接受 &lt;code&gt;key =&amp;gt; 'dummy value'&lt;/code&gt; 对的关联数组。不再支持。</target>
        </trans-unit>
        <trans-unit id="022ec831745294e72e65b38ba7b333276df78085" translate="yes" xml:space="preserve">
          <source>In production environments, it is typically desirable to &amp;ldquo;disable&amp;rdquo; PHP&amp;rsquo;s error reporting by setting the internal &lt;em&gt;display_errors&lt;/em&gt; flag to a value of 0. This disables native PHP errors from being rendered as output, which may potentially contain sensitive information.</source>
          <target state="translated">在生产环境中，通常需要通过将内部&lt;em&gt;display_errors&lt;/em&gt;标志设置为0 来&amp;ldquo;禁用&amp;rdquo; PHP的错误报告。这将使本机PHP错误无法呈现为输出，该错误可能包含敏感信息。</target>
        </trans-unit>
        <trans-unit id="8a53a42a5a53c2d1eb0479dbc4b6d496528e31bf" translate="yes" xml:space="preserve">
          <source>In some cases you may want certain methods hidden from public access. In order to achieve this, simply declare the method as being private or protected and it will not be served via a URL request. For example, if you were to have a method like this:</source>
          <target state="translated">在某些情况下,你可能希望某些方法不被公开访问。为了实现这一点,只需声明该方法是私有的或受保护的,它就不会通过URL请求提供。例如,如果你有一个像这样的方法。</target>
        </trans-unit>
        <trans-unit id="b1d4df55c95a33d1fea1de9e8972f874fa90f54e" translate="yes" xml:space="preserve">
          <source>In some cases you may want to develop classes that exist apart from your controllers but have the ability to utilize all of CodeIgniter&amp;rsquo;s resources. This is easily possible as you&amp;rsquo;ll see.</source>
          <target state="translated">在某些情况下，您可能想开发除控制器外还存在但具有利用CodeIgniter所有资源的能力的类。如您所见，这很容易实现。</target>
        </trans-unit>
        <trans-unit id="dffcfa34c5c7cdf68b61163e9858bd84da883cc3" translate="yes" xml:space="preserve">
          <source>In some cases you might prefer to use query strings URLs:</source>
          <target state="translated">在某些情况下,你可能更喜欢使用查询字符串URL。</target>
        </trans-unit>
        <trans-unit id="96be98c3ca0ee6d0b9ded69f83e7c0276e05a0b0" translate="yes" xml:space="preserve">
          <source>In some cases, you may specify an array of files to upload:</source>
          <target state="translated">在某些情况下,你可以指定一个要上传的文件数组。</target>
        </trans-unit>
        <trans-unit id="6f89f2482b75dbc324aefc5d00c99b8d0bc93afc" translate="yes" xml:space="preserve">
          <source>In some cases, you may want certain methods hidden from public access. To achieve this, simply declare the method as private or protected. That will prevent it from being served by a URL request. For example, if you were to define a method like this for the &lt;code&gt;Helloworld&lt;/code&gt; controller:</source>
          <target state="translated">在某些情况下，您可能希望对公共访问隐藏某些方法。为此，只需将方法声明为private或protected。这样可以防止URL请求为它提供服务。例如，如果要为 &lt;code&gt;Helloworld&lt;/code&gt; 控制器定义这样的方法：</target>
        </trans-unit>
        <trans-unit id="c2b1dee509a00d0d7e87298f2fd36dda5cac8638" translate="yes" xml:space="preserve">
          <source>In some clustered server environments, for example, caching may be detrimental since file-system operations are so intense. On single servers in shared environments, caching will probably be beneficial. Unfortunately there is no single answer to the question of whether you should cache your database. It really depends on your situation.</source>
          <target state="translated">例如,在一些集群服务器环境中,缓存可能是有害的,因为文件系统操作是如此密集。在共享环境中的单台服务器上,缓存可能是有益的。遗憾的是,对于是否应该缓存数据库的问题,没有唯一的答案。这真的取决于你的情况。</target>
        </trans-unit>
        <trans-unit id="adfa2820dba3293f4a46b30b34a65f9557013f1a" translate="yes" xml:space="preserve">
          <source>In some instances, however, you may want to remap this relationship so that a different class/method can be called instead of the one corresponding to the URL.</source>
          <target state="translated">然而,在某些情况下,你可能希望重新映射这种关系,以便可以调用不同的类/方法来代替对应于URL的类/方法。</target>
        </trans-unit>
        <trans-unit id="4726b4e7f2fcd43affc5a65e21780eaa6d341da9" translate="yes" xml:space="preserve">
          <source>In some instances, you will want the option to pass a setting to the class during instantiation. Since the services file is a very simple class, it is easy to make this work.</source>
          <target state="translated">在某些情况下,你会希望在实例化期间向类传递一个设置的选项。由于services文件是一个非常简单的类,所以很容易做到这一点。</target>
        </trans-unit>
        <trans-unit id="ec6a62285f67e2d7161b800ebd3c834d396ca9bd" translate="yes" xml:space="preserve">
          <source>In summary:</source>
          <target state="translated">综上所述:</target>
        </trans-unit>
        <trans-unit id="283d37f6394831c516b879a8b06f9884b1666120" translate="yes" xml:space="preserve">
          <source>In that directory, create two files named &lt;em&gt;home.php&lt;/em&gt; and &lt;em&gt;about.php&lt;/em&gt;. Within those files, type some text &amp;minus; anything you&amp;rsquo;d like &amp;minus; and save them. If you like to be particularly un-original, try &amp;ldquo;Hello World!&amp;rdquo;.</source>
          <target state="translated">在该目录中，创建两个名为&lt;em&gt;home.php&lt;/em&gt;和&lt;em&gt;about.php的&lt;/em&gt;文件。在这些文件中，键入一些文本-您想要的任何内容-并保存它们。如果您想特别原创，请尝试&amp;ldquo; Hello World！&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="b62bc60ec6a6e3a686f29a44babff064e347f04f" translate="yes" xml:space="preserve">
          <source>In that directory, create two files named &lt;strong&gt;home.php&lt;/strong&gt; and &lt;strong&gt;about.php&lt;/strong&gt;. Within those files, type some text &amp;minus; anything you&amp;rsquo;d like &amp;minus; and save them. If you like to be particularly un-original, try &amp;ldquo;Hello World!&amp;rdquo;.</source>
          <target state="translated">在该目录中，创建两个名为&lt;strong&gt;home.php&lt;/strong&gt;和&lt;strong&gt;about.php的&lt;/strong&gt;文件。在这些文件中，键入一些文本-您想要的任何内容-并将其保存。如果您想特别原创，请尝试&amp;ldquo; Hello World！&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="207c94f0476b7737b26b1c804c9d4f4ee2dd9cfd" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;setPassword()&lt;/code&gt; method we ensure that the password is always hashed.</source>
          <target state="translated">在 &lt;code&gt;setPassword()&lt;/code&gt; 方法中，我们确保始终对密码进行哈希处理。</target>
        </trans-unit>
        <trans-unit id="d597bd91da2ff2888373dd4c85cb6e8a1480aa7e" translate="yes" xml:space="preserve">
          <source>In the Table of Contents you&amp;rsquo;ll find a list of all the available Helper Files. Browse each one to see what they do.</source>
          <target state="translated">在目录中，您将找到所有可用的帮助程序文件的列表。浏览每个人以查看其工作。</target>
        </trans-unit>
        <trans-unit id="8bb759a9f6e3995cf3e905eae5b186a08d8b161d" translate="yes" xml:space="preserve">
          <source>In the Table of Contents, you&amp;rsquo;ll find a list of all the available &lt;a href=&quot;https://codeigniter.com/userguide4/helpers/index.html&quot;&gt;Helpers&lt;/a&gt;. Browse each one to see what they do.</source>
          <target state="translated">在目录中，您将找到所有可用&lt;a href=&quot;https://codeigniter.com/userguide4/helpers/index.html&quot;&gt;助手&lt;/a&gt;的列表。浏览每个人以查看其工作。</target>
        </trans-unit>
        <trans-unit id="435e60e4363df7b8aaf65dd9869a173e103e02f0" translate="yes" xml:space="preserve">
          <source>In the above code we are using a &amp;ldquo;url helper&amp;rdquo;. You can find more information in the &lt;a href=&quot;../general/helpers&quot;&gt;Helpers Functions&lt;/a&gt; page.</source>
          <target state="translated">在上面的代码中，我们使用&amp;ldquo; URL助手&amp;rdquo;。您可以在&amp;ldquo; &lt;a href=&quot;../general/helpers&quot;&gt;助手功能&amp;rdquo;&lt;/a&gt;页面中找到更多信息。</target>
        </trans-unit>
        <trans-unit id="5ae187067e00b60dfcf14bf761246cd6a31df976" translate="yes" xml:space="preserve">
          <source>In the above code you&amp;rsquo;ll notice a pair of variables: {blog_entries} data&amp;hellip; {/blog_entries}. In a case like this, the entire chunk of data between these pairs would be repeated multiple times, corresponding to the number of rows in the &amp;ldquo;blog_entries&amp;rdquo; element of the parameters array.</source>
          <target state="translated">在上面的代码中，您会注意到一对变量：{blog_entries} data&amp;hellip;{/ blog_entries}。在这种情况下，这些对之间的整个数据块将重复多次，这对应于参数数组的&amp;ldquo; blog_entries&amp;rdquo;元素中的行数。</target>
        </trans-unit>
        <trans-unit id="8e8baf59cca4860da6253ff1a374534685068014" translate="yes" xml:space="preserve">
          <source>In the above example the method name is &lt;code&gt;index()&lt;/code&gt;. The &amp;ldquo;index&amp;rdquo; method is always loaded by default if the &lt;strong&gt;second segment&lt;/strong&gt; of the URI is empty. Another way to show your &amp;ldquo;Hello World&amp;rdquo; message would be this:</source>
          <target state="translated">在上面的示例中，方法名称为 &lt;code&gt;index()&lt;/code&gt; 。如果URI的&lt;strong&gt;第二段&lt;/strong&gt;为空，则默认情况下始终加载&amp;ldquo; index&amp;rdquo;方法。显示&amp;ldquo; Hello World&amp;rdquo;消息的另一种方式是：</target>
        </trans-unit>
        <trans-unit id="86abfae1a81d0b3864952be978138cb7a2be0579" translate="yes" xml:space="preserve">
          <source>In the above example, CodeIgniter would attempt to find a controller named Blog.php and load it.</source>
          <target state="translated">在上面的例子中,CodeIgniter会尝试找到一个名为Blog.php的控制器并加载它。</target>
        </trans-unit>
        <trans-unit id="d1bc8994156efd219f9f450b590603afd91ddf1d" translate="yes" xml:space="preserve">
          <source>In the above example, CodeIgniter would attempt to find a controller named Helloworld.php and load it.</source>
          <target state="translated">在上面的例子中,CodeIgniter会尝试找到一个名为Helloworld.php的控制器并加载它。</target>
        </trans-unit>
        <trans-unit id="175e2eeab1be267ca057cf80270d6f7144c26d1c" translate="yes" xml:space="preserve">
          <source>In the above example, a PUT request to URI &amp;ldquo;products&amp;rdquo; would call the &lt;code&gt;Product::insert()&lt;/code&gt; controller method.</source>
          <target state="translated">在上面的示例中，对URI&amp;ldquo;产品&amp;rdquo;的PUT请求将调用 &lt;code&gt;Product::insert()&lt;/code&gt; 控制器方法。</target>
        </trans-unit>
        <trans-unit id="215b23533cd5595c15d5738a705b39ff0b1d9a16" translate="yes" xml:space="preserve">
          <source>In the above example, a URI similar to products/shirts/123 would instead call the &amp;ldquo;shirts&amp;rdquo; controller class and the &amp;ldquo;id_123&amp;rdquo; method.</source>
          <target state="translated">在上面的示例中，类似于product / shirts / 123的URI将改为调用&amp;ldquo; shirts&amp;rdquo;控制器类和&amp;ldquo; id_123&amp;rdquo;方法。</target>
        </trans-unit>
        <trans-unit id="ca202bbb7fa5009d4f306f3ab4d1f99846d41080" translate="yes" xml:space="preserve">
          <source>In the above example, a URI similar to products/shirts/123 would instead call the &lt;code&gt;show&lt;/code&gt; method of the &lt;code&gt;Products&lt;/code&gt; controller class, with the original first and second segment passed as arguments to it.</source>
          <target state="translated">在上面的示例中，类似于product / shirts / 123的URI会调用 &lt;code&gt;Products&lt;/code&gt; 控制器类的 &lt;code&gt;show&lt;/code&gt; 方法，并将原始的第一段和第二段作为参数传递给它。</target>
        </trans-unit>
        <trans-unit id="18aa8832f9be32e53067d7e928c6761b1630f044" translate="yes" xml:space="preserve">
          <source>In the above example, all cell data would be ran through PHP&amp;rsquo;s &lt;code&gt;htmlspecialchars()&lt;/code&gt; function, resulting in:</source>
          <target state="translated">在上面的示例中，所有单元格数据都将通过PHP的 &lt;code&gt;htmlspecialchars()&lt;/code&gt; 函数运行，结果是：</target>
        </trans-unit>
        <trans-unit id="eb199bb9f8a4b32a0950a7aac1a1e1804acbd634" translate="yes" xml:space="preserve">
          <source>In the above example, all cell data would be run through PHP&amp;rsquo;s &lt;code&gt;htmlspecialchars()&lt;/code&gt; function, resulting in:</source>
          <target state="translated">在上面的示例中，所有单元格数据都将通过PHP的 &lt;code&gt;htmlspecialchars()&lt;/code&gt; 函数运行，结果是：</target>
        </trans-unit>
        <trans-unit id="34c2ae611d8626168344c37d50edb9ee77845eba" translate="yes" xml:space="preserve">
          <source>In the above example, any HTTP request other than those for existing directories and existing files is treated as a request for your index.php file.</source>
          <target state="translated">在上面的例子中,除了对现有目录和现有文件的HTTP请求外,任何其他的HTTP请求都会被视为对index.php文件的请求。</target>
        </trans-unit>
        <trans-unit id="ac27161239319a3c38fa5b2cce8e86e102f0c4f9" translate="yes" xml:space="preserve">
          <source>In the above example, both methods &lt;code&gt;foo()&lt;/code&gt; and &lt;code&gt;bar()&lt;/code&gt; will work after you instantiate the Example class, without the need to call &lt;code&gt;get_instance()&lt;/code&gt; in each of them.</source>
          <target state="translated">在上面的示例中，实例化Example类之后，方法 &lt;code&gt;foo()&lt;/code&gt; 和 &lt;code&gt;bar()&lt;/code&gt; 都将工作，而无需在每个方法中调用 &lt;code&gt;get_instance()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="91078a91dc3244bd0e2dc764dbec689f8e61caae" translate="yes" xml:space="preserve">
          <source>In the above example, if the &lt;code&gt;$1&lt;/code&gt; placeholder contains a slash, it will still be split into multiple parameters when passed to &lt;code&gt;Auth::login()&lt;/code&gt;.</source>
          <target state="translated">在上面的示例中，如果 &lt;code&gt;$1&lt;/code&gt; 占位符包含斜杠，则在传递给 &lt;code&gt;Auth::login()&lt;/code&gt; 时，它仍将拆分为多个参数。</target>
        </trans-unit>
        <trans-unit id="b4cf73fc223a2a5fec1189a9216e4037c1c5b243" translate="yes" xml:space="preserve">
          <source>In the above example, if we assume that the &lt;em&gt;title&lt;/em&gt; field is our primary key, then if a row containing &amp;lsquo;My title&amp;rsquo; as the &lt;em&gt;title&lt;/em&gt; value, that row will be deleted with our new row data replacing it.</source>
          <target state="translated">在上面的示例中，如果假设&lt;em&gt;title&lt;/em&gt;字段是我们的主键，则如果包含&amp;ldquo; My title&amp;rdquo;作为&lt;em&gt;标题&lt;/em&gt;值的行，则该行将被删除，并用我们的新行数据替换。</target>
        </trans-unit>
        <trans-unit id="e7b19f1730535b1b6d5396c23fb761a920b97e10" translate="yes" xml:space="preserve">
          <source>In the above example, photo.jpg will be placed into the &lt;em&gt;path/to/&lt;/em&gt; directory.</source>
          <target state="translated">在上面的示例中，photo.jpg将放置在&lt;em&gt;path / to /&lt;/em&gt;目录中。</target>
        </trans-unit>
        <trans-unit id="2286c4112d26e74b8ec527eb167584d3b9c697a3" translate="yes" xml:space="preserve">
          <source>In the above example, the method name is &lt;code&gt;index()&lt;/code&gt;. The &amp;ldquo;index&amp;rdquo; method is always loaded by default if the &lt;strong&gt;second segment&lt;/strong&gt; of the URI is empty. Another way to show your &amp;ldquo;Hello World&amp;rdquo; message would be this:</source>
          <target state="translated">在上面的示例中，方法名称为 &lt;code&gt;index()&lt;/code&gt; 。如果URI的&lt;strong&gt;第二段&lt;/strong&gt;为空，则默认情况下始终始终加载&amp;ldquo; index&amp;rdquo;方法。显示&amp;ldquo; Hello World&amp;rdquo;消息的另一种方式是：</target>
        </trans-unit>
        <trans-unit id="180761e10a60153aa156ab4ffa6d2f90d387a360" translate="yes" xml:space="preserve">
          <source>In the above example, we are &amp;ldquo;trimming&amp;rdquo; the fields, checking for length where necessary and making sure that both password fields match.</source>
          <target state="translated">在上面的示例中，我们正在&amp;ldquo;修剪&amp;rdquo;字段，在必要时检查长度，并确保两个密码字段都匹配。</target>
        </trans-unit>
        <trans-unit id="f099ed7a552db8391abeb56b01f6c85316c8885c" translate="yes" xml:space="preserve">
          <source>In the above example, we are decrypting a message that was encrypted using the Blowfish cipher in CBC mode and authenticated via a SHA-256 HMAC.</source>
          <target state="translated">在上面的例子中,我们正在解密一个使用CBC模式下的Blowfish密码加密的消息,并通过SHA-256 HMAC进行验证。</target>
        </trans-unit>
        <trans-unit id="51ce662a3f57ffe4f1f202086c4e738bdb5da140" translate="yes" xml:space="preserve">
          <source>In the above example, we&amp;rsquo;re passing a custom database object as the first parameter and then tell it to return the dbforge object, instead of assigning it directly to &lt;code&gt;$this-&amp;gt;dbforge&lt;/code&gt;.</source>
          <target state="translated">在上面的示例中，我们将自定义数据库对象作为第一个参数传递，然后告诉它返回dbforge对象，而不是直接将其分配给 &lt;code&gt;$this-&amp;gt;dbforge&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2eac2b281f2385c1c361f0da15d0190a4a262031" translate="yes" xml:space="preserve">
          <source>In the above example, we&amp;rsquo;re passing a custom database object as the first parameter and then tell it to return the dbutil object, instead of assigning it directly to &lt;code&gt;$this-&amp;gt;dbutil&lt;/code&gt;.</source>
          <target state="translated">在上面的示例中，我们将自定义数据库对象作为第一个参数传递，然后告诉它返回dbutil对象，而不是直接将其分配给 &lt;code&gt;$this-&amp;gt;dbutil&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f6ac52ab6bceeae55a3349b85000792178859506" translate="yes" xml:space="preserve">
          <source>In the above example, we&amp;rsquo;re passing the name of a different database group to connect to as the first parameter.</source>
          <target state="translated">在上面的示例中，我们将要连接的另一个数据库组的名称作为第一个参数传递。</target>
        </trans-unit>
        <trans-unit id="4e34e2cb53ddbb0085cbc3e5a61b4772c7d5c3c2" translate="yes" xml:space="preserve">
          <source>In the above example:</source>
          <target state="translated">在上面的例子中。</target>
        </trans-unit>
        <trans-unit id="5fe518e86d5c636076c710e804564e2b6f3cb96b" translate="yes" xml:space="preserve">
          <source>In the background, conditionals are parsed using an &lt;strong&gt;eval()&lt;/strong&gt;, so you must ensure that you take care with the user data that is used within conditionals, or you could open your application up to security risks.</source>
          <target state="translated">在后台，使用&lt;strong&gt;eval（）&lt;/strong&gt;解析条件&lt;strong&gt;语句&lt;/strong&gt;，因此您必须确保注意在条件语句中使用的用户数据，否则可能会使应用程序面临安全风险。</target>
        </trans-unit>
        <trans-unit id="546d593c797413f040f65bc013a0f8c7182b8324" translate="yes" xml:space="preserve">
          <source>In the callback rule example above, the error message was set by passing the name of the method (without the &amp;ldquo;callback_&amp;rdquo; prefix):</source>
          <target state="translated">在上面的回调规则示例中，通过传递方法名称（不带&amp;ldquo; callback_&amp;rdquo;前缀）来设置错误消息：</target>
        </trans-unit>
        <trans-unit id="9538a0ee7d33cf4b81169d4182f81fc09834b323" translate="yes" xml:space="preserve">
          <source>In the case that the first choice $hanlder is not available, this is the next cache handler to load. This is commonly the &lt;strong&gt;file&lt;/strong&gt; handler since the file system is always available, but may not fit more complex, multi-server setups.</source>
          <target state="translated">在首选$ hanlder不可用的情况下，这是下一个要加载的缓存处理程序。这通常是&lt;strong&gt;文件&lt;/strong&gt;处理程序，因为文件系统始终可用，但可能不适合更复杂的多服务器设置。</target>
        </trans-unit>
        <trans-unit id="2daeb4c2b1bc88ca00d3b0ee065641beb36c2aab" translate="yes" xml:space="preserve">
          <source>In the code presented for the standard pagination structure, the methods &lt;code&gt;getPrevious()&lt;/code&gt; and &lt;code&gt;getNext()&lt;/code&gt; are used to obtain the links to the previous and next pagination groups respectively.</source>
          <target state="translated">在为标准分页结构提供的代码中，方法 &lt;code&gt;getPrevious()&lt;/code&gt; 和 &lt;code&gt;getNext()&lt;/code&gt; 用于分别获取到上一个和下一个分页组的链接。</target>
        </trans-unit>
        <trans-unit id="9737e3678edffa5e28f111fda2f5422ab2b13462" translate="yes" xml:space="preserve">
          <source>In the example above, we are using &amp;ldquo;dynamically added data&amp;rdquo;, which you will see below.</source>
          <target state="translated">在上面的示例中，我们使用的是&amp;ldquo;动态添加的数据&amp;rdquo;，您将在下面看到。</target>
        </trans-unit>
        <trans-unit id="d443f2916d90f214aa3ac88fe322acdaa7d6f0d6" translate="yes" xml:space="preserve">
          <source>In the example above, we catch any type of Exception. If we only want to watch for specific types of exceptions, like a &lt;code&gt;UnknownFileException&lt;/code&gt;, we can specify that in the catch parameter. Any other exceptions that are thrown and are not child classes of the caught exception will be passed on to the error handler:</source>
          <target state="translated">在上面的示例中，我们捕获了任何类型的Exception。如果我们只想监视特定类型的异常，例如 &lt;code&gt;UnknownFileException&lt;/code&gt; ，则可以在catch参数中进行指定。引发且不是捕获的异常的子类的任何其他异常将传递给错误处理程序：</target>
        </trans-unit>
        <trans-unit id="3b3af324441a9984a68abbb7a57f25d98eeaa5a2" translate="yes" xml:space="preserve">
          <source>In the first line, the &lt;code&gt;setSurroundCount()&lt;/code&gt; method specifies than we want to show two links to either side of the current page link. The only parameter that it accepts is the number of links to show.</source>
          <target state="translated">在第一行中， &lt;code&gt;setSurroundCount()&lt;/code&gt; 方法指定的是我们要显示到当前页面链接两侧的两个链接。它接受的唯一参数是要显示的链接数。</target>
        </trans-unit>
        <trans-unit id="6895760ed0ad70b4d36ad8d1564e04b308fe446d" translate="yes" xml:space="preserve">
          <source>In the folder above your project root:</source>
          <target state="translated">在你的项目根上面的文件夹里。</target>
        </trans-unit>
        <trans-unit id="edac8bda0d8e7ab50433ae33b639a6e5d712c26e" translate="yes" xml:space="preserve">
          <source>In the header template, the &lt;code&gt;$title&lt;/code&gt; variable was used to customize the page title. The value of title is defined in this method, but instead of assigning the value to a variable, it is assigned to the title element in the &lt;code&gt;$data&lt;/code&gt; array.</source>
          <target state="translated">在标题模板中， &lt;code&gt;$title&lt;/code&gt; 变量用于自定义页面标题。title的值在此方法中定义，但不是将值分配给变量，而是将其分配给 &lt;code&gt;$data&lt;/code&gt; 数组中的title元素。</target>
        </trans-unit>
        <trans-unit id="fcea2eac1e2fce15cd484de022a2a172a6a88fdf" translate="yes" xml:space="preserve">
          <source>In the last section, we went over some basic concepts of the framework by writing a class that includes static pages. We cleaned up the URI by adding custom routing rules. Now it&amp;rsquo;s time to introduce dynamic content and start using a database.</source>
          <target state="translated">在上一节中，我们通过编写包含静态页面的类讨论了框架的一些基本概念。我们通过添加自定义路由规则来清理URI。现在该介绍动态内容并开始使用数据库。</target>
        </trans-unit>
        <trans-unit id="ab219dcdd1d5f7726e3b8df45f9e33413ee760b7" translate="yes" xml:space="preserve">
          <source>In the last section, we went over some basic concepts of the framework by writing a class that references static pages. We cleaned up the URI by adding custom routing rules. Now it&amp;rsquo;s time to introduce dynamic content and start using a database.</source>
          <target state="translated">在上一节中，我们通过编写引用静态页面的类来介绍了框架的一些基本概念。我们通过添加自定义路由规则来清理URI。现在该介绍动态内容并开始使用数据库。</target>
        </trans-unit>
        <trans-unit id="ef11fb3a374134e8bdcf891f8f9fc31ab0518267" translate="yes" xml:space="preserve">
          <source>In the library loading method you can dynamically pass data as an array via the second parameter and it will be passed to your class constructor:</source>
          <target state="translated">在库加载方法中,你可以通过第二个参数将数据以数组的形式动态传递,它将被传递给你的类构造函数。</target>
        </trans-unit>
        <trans-unit id="2eda103b1cb1daa4ca3d59d9b1fabcdeba16d5f7" translate="yes" xml:space="preserve">
          <source>In this case, both the client and the server can agree on formatting the data as JSON so &amp;lsquo;json&amp;rsquo; is returned from the negotiate method. By default, if no match is found, the first element in the $supported array would be returned. In some cases, though, you might need to enforce the format to be a strict match. If you pass &lt;code&gt;true&lt;/code&gt; as the final value, it will return an empty string if no match is found:</source>
          <target state="translated">在这种情况下，客户端和服务器双方都可以同意将数据格式设置为JSON，因此，&amp;ldquo; negot&amp;rdquo;是从协商方法返回的。默认情况下，如果找不到匹配项，则将返回$ supported数组中的第一个元素。但是，在某些情况下，您可能需要强制格式严格匹配。如果将 &lt;code&gt;true&lt;/code&gt; 作为最终值传递，则如果找不到匹配项，它将返回一个空字符串：</target>
        </trans-unit>
        <trans-unit id="a71a71d5e59b364edf4be3366f80ac4c70341a97" translate="yes" xml:space="preserve">
          <source>In this case, the returned array of files would be more like:</source>
          <target state="translated">在这种情况下,返回的文件数组会更像。</target>
        </trans-unit>
        <trans-unit id="9d4c2becef087de7480d52b0df48880e9df2d48e" translate="yes" xml:space="preserve">
          <source>In this case, you can specify the array to be validated:</source>
          <target state="translated">在这种情况下,你可以指定要验证的数组。</target>
        </trans-unit>
        <trans-unit id="77651439059ed4b28ccca0e18ecb5fde2a340192" translate="yes" xml:space="preserve">
          <source>In this example a connection is opened to the FTP server, and a local file is read and uploaded in ASCII mode. The file permissions are set to 755.</source>
          <target state="translated">在这个例子中,打开了一个连接到FTP服务器,并以ASCII模式读取和上传本地文件。文件权限设置为755。</target>
        </trans-unit>
        <trans-unit id="4ddaf2c81bfd06dfd2739e989dfb1af750752b09" translate="yes" xml:space="preserve">
          <source>In this example a list of files is retrieved from the server.</source>
          <target state="translated">在这个例子中,从服务器上检索出一个文件列表。</target>
        </trans-unit>
        <trans-unit id="5a583f525886fafa75e02c38ced0bb056bdefbee" translate="yes" xml:space="preserve">
          <source>In this example a local directory is mirrored on the server.</source>
          <target state="translated">在这个例子中,一个本地目录被镜像到服务器上。</target>
        </trans-unit>
        <trans-unit id="09dad77adae7a2f704944fbe12d7f30409da0dc1" translate="yes" xml:space="preserve">
          <source>In this example some simple code is placed in &lt;strong&gt;app/Controllers/Migrate.php&lt;/strong&gt; to update the schema:</source>
          <target state="translated">在此示例中，一些简单的代码放置在&lt;strong&gt;app / Controllers / Migrate.php中&lt;/strong&gt;以更新架构：</target>
        </trans-unit>
        <trans-unit id="461c1dd279681d4bee8944a47445e8ddbad7f6bc" translate="yes" xml:space="preserve">
          <source>In this example some simple code is placed in &lt;strong&gt;application/controllers/Migrate.php&lt;/strong&gt; to update the schema.:</source>
          <target state="translated">在此示例中，一些简单的代码放置在&lt;strong&gt;application / controllers / Migrate.php中&lt;/strong&gt;以更新架构。</target>
        </trans-unit>
        <trans-unit id="d416b4133d589b2002d503dcbde940953452197a" translate="yes" xml:space="preserve">
          <source>In this example, &amp;lsquo;en&amp;rsquo; would be returned as the current language. If no match is found, it will return the first element in the $supported array, so that should always be the preferred language.</source>
          <target state="translated">在此示例中，&amp;ldquo; en&amp;rdquo;将作为当前语言返回。如果找不到匹配项，它将返回$ supported数组中的第一个元素，因此该语言应始终是首选语言。</target>
        </trans-unit>
        <trans-unit id="891313c2fb1c62e39c64225903f6da1857e7b0c1" translate="yes" xml:space="preserve">
          <source>In this example, an HTTP status code of 201 is returned, with the generic status message, &amp;lsquo;Created&amp;rsquo;. Methods exist for the most common use cases:</source>
          <target state="translated">在此示例中，返回HTTP状态代码201，以及通用状态消息&amp;ldquo;已创建&amp;rdquo;。存在用于最常见用例的方法：</target>
        </trans-unit>
        <trans-unit id="92250b7cedfccf6a33389247c6975eb6bd3f60a2" translate="yes" xml:space="preserve">
          <source>In this example, any HTTP request other than those for existing directories and existing files are treated as a request for your index.php file.</source>
          <target state="translated">在这个例子中,除了对现有目录和现有文件的HTTP请求外,任何其他的HTTP请求都会被视为对index.php文件的请求。</target>
        </trans-unit>
        <trans-unit id="078c8f54b85f4570915b083a3e9c59ff5fa4827f" translate="yes" xml:space="preserve">
          <source>In this example, if the user tried to visit &lt;code&gt;http://example.com/fr/books&lt;/code&gt;, then the locale would be set to &lt;code&gt;fr&lt;/code&gt;, assuming it was configured as a valid locale.</source>
          <target state="translated">在此示例中，如果用户尝试访问 &lt;code&gt;http://example.com/fr/books&lt;/code&gt; ，则假定该语言环境被配置为有效语言环境，则该语言环境将设置为 &lt;code&gt;fr&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c11bc29d03c88074dfa649638c61d8d819e24c48" translate="yes" xml:space="preserve">
          <source>In this example, if the user were to visit example.com/products, and a Products controller existed, the &lt;code&gt;Products::listAll()&lt;/code&gt; method would be executed:</source>
          <target state="translated">在此示例中，如果用户访问example.com/products，并且存在Products控制器，则将执行 &lt;code&gt;Products::listAll()&lt;/code&gt; 方法：</target>
        </trans-unit>
        <trans-unit id="8fb6b63914283ba04ad1c1331b39d1973d921af0" translate="yes" xml:space="preserve">
          <source>In this example, the array &lt;code&gt;['dual', 'noreturn']&lt;/code&gt; will be passed in &lt;code&gt;$arguments&lt;/code&gt; to the filter&amp;rsquo;s &lt;code&gt;before()&lt;/code&gt; and &lt;code&gt;after()&lt;/code&gt; implementation methods.</source>
          <target state="translated">在此示例中，数组 &lt;code&gt;['dual', 'noreturn']&lt;/code&gt; 将以 &lt;code&gt;$arguments&lt;/code&gt; 传递给过滤器的 &lt;code&gt;before()&lt;/code&gt; 和 &lt;code&gt;after()&lt;/code&gt; 实现方法。</target>
        </trans-unit>
        <trans-unit id="16fd1fa210786feaf26bf715f39cb56e552a98a6" translate="yes" xml:space="preserve">
          <source>In this example, the browser would prefer French, with a second choice of English. If your website supports English and German you would do something like:</source>
          <target state="translated">在这个例子中,浏览器更喜欢法语,第二个选择是英语。如果你的网站支持英语和德语,你会做这样的事情。</target>
        </trans-unit>
        <trans-unit id="28412dbedd2c9347f27f7146f1f6eb6a94bdd2cd" translate="yes" xml:space="preserve">
          <source>In this example, the class &lt;code&gt;App\Libraries\Blog&lt;/code&gt; is loaded, and the method &lt;code&gt;recentPosts()&lt;/code&gt; is run. The method must return the generated HTML as a string. The method can be either a static method or not. Either way works.</source>
          <target state="translated">在此的示例加载类 &lt;code&gt;App\Libraries\Blog&lt;/code&gt; ，并运行方法 &lt;code&gt;recentPosts()&lt;/code&gt; 。该方法必须将生成的HTML作为字符串返回。该方法可以是静态方法，也可以不是。不管哪种方法。</target>
        </trans-unit>
        <trans-unit id="7b7049ef176042b52baba04282f968c4791427d0" translate="yes" xml:space="preserve">
          <source>In this example, we first create a new instance of our UserModel. Then we populate the data to send to the view. The first element is the results from the database, &lt;strong&gt;users&lt;/strong&gt;, which is retrieved for the correct page, returning 10 users per page. The second item that must be sent to the view is the Pager instance itself. As a convenience, the Model will hold on to the instance it used and store it in the public class variable, &lt;strong&gt;$pager&lt;/strong&gt;. So, we grab that and assign it to the $pager variable in the view.</source>
          <target state="translated">在此示例中，我们首先创建UserModel的新实例。然后，我们填充数据以发送到视图。第一个元素是来自数据库&lt;strong&gt;users&lt;/strong&gt;的结果，将针对正确的页面进行检索，每页返回10个用户。必须发送到视图的第二项是Pager实例本身。为了方便起见，模型将保留所使用的实例，并将其存储在公共类变量&lt;strong&gt;$ pager中&lt;/strong&gt;。因此，我们将其获取并将其分配给视图中的$ pager变量。</target>
        </trans-unit>
        <trans-unit id="c3854a473b1e55ce04d5fc759fbaf12af031361e" translate="yes" xml:space="preserve">
          <source>In this example, we&amp;rsquo;ve switched to using div tags.</source>
          <target state="translated">在此示例中，我们已切换为使用div标签。</target>
        </trans-unit>
        <trans-unit id="b8b40ea88af81932a0f5eb366b379bde5c52fdf3" translate="yes" xml:space="preserve">
          <source>In this example, when the model sets the &lt;code&gt;full_name&lt;/code&gt; field on the User class, it actually assigns that value to the class&amp;rsquo; &lt;code&gt;$name&lt;/code&gt; property, so it can be set and retrieved through &lt;code&gt;$user-&amp;gt;name&lt;/code&gt;. The value will still be accessible through the original &lt;code&gt;$user-&amp;gt;full_name&lt;/code&gt;, also, as this is needed for the model to get the data back out and save it to the database. However, &lt;code&gt;unset&lt;/code&gt; and &lt;code&gt;isset&lt;/code&gt; only work on the mapped property, &lt;code&gt;$name&lt;/code&gt;, not on the original name, &lt;code&gt;full_name&lt;/code&gt;.</source>
          <target state="translated">在此示例中，当模型在User类上设置 &lt;code&gt;full_name&lt;/code&gt; 字段时，它实际上将该值分配给该类的 &lt;code&gt;$name&lt;/code&gt; 属性，因此可以通过 &lt;code&gt;$user-&amp;gt;name&lt;/code&gt; 进行设置和检索。同样，该值仍可以通过原始 &lt;code&gt;$user-&amp;gt;full_name&lt;/code&gt; 进行访问，因为模型需要将其取回数据并将其保存到数据库。但是， &lt;code&gt;unset&lt;/code&gt; 和 &lt;code&gt;isset&lt;/code&gt; 仅适用于映射属性 &lt;code&gt;$name&lt;/code&gt; ，而不适用于原始名称 &lt;code&gt;full_name&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4e99143aeb772058a805c00d47b28a2a43c6f541" translate="yes" xml:space="preserve">
          <source>In this example, whenever the &lt;strong&gt;pre_controller&lt;/strong&gt; event is executed, an instance of &lt;code&gt;MyClass&lt;/code&gt; is created and the &lt;code&gt;MyFunction&lt;/code&gt; method is run. Note that the second parameter can be &lt;em&gt;any&lt;/em&gt; form of &lt;a href=&quot;https://www.php.net/manual/en/function.is-callable.php&quot;&gt;callable&lt;/a&gt; that PHP recognizes:</source>
          <target state="translated">在此示例中，无论何时执行&lt;strong&gt;pre_controller&lt;/strong&gt;事件，都会创建 &lt;code&gt;MyClass&lt;/code&gt; 的实例并运行 &lt;code&gt;MyFunction&lt;/code&gt; 方法。请注意，第二个参数可以是PHP可以识别的&lt;em&gt;任何&lt;/em&gt;&lt;a href=&quot;https://www.php.net/manual/en/function.is-callable.php&quot;&gt;可调用&lt;/a&gt;形式：</target>
        </trans-unit>
        <trans-unit id="2bb2dce5eb9b1c9d0b1e2c3be3765c9bf17b472d" translate="yes" xml:space="preserve">
          <source>In this instance, it is possible for view naming collisions within packages to occur, and possibly the incorrect package being loaded. To ensure against this, set an optional second parameter of FALSE when calling &lt;code&gt;add_package_path()&lt;/code&gt;.</source>
          <target state="translated">在这种情况下，有可能在包内发生视图命名冲突，并且有可能加载了错误的包。为了避免这种情况，请在调用 &lt;code&gt;add_package_path()&lt;/code&gt; 时将可选的第二个参数设置为FALSE 。</target>
        </trans-unit>
        <trans-unit id="a3ac043fcab08a2a3658e4a09fc0585846ef35e1" translate="yes" xml:space="preserve">
          <source>In this section, we will discuss the 4 types of content that can be negotiated and show how that would look using both of the methods described above to access the negotiator.</source>
          <target state="translated">在本节中,我们将讨论可以谈判的4种内容,并展示使用上述两种方法访问谈判器的情况。</target>
        </trans-unit>
        <trans-unit id="1a3020b3fa093201335b1d59a6e5642735d8ab1d" translate="yes" xml:space="preserve">
          <source>In this set of rules, it states that the email address should be unique in the database, except for the row that has an id matching the placeholder&amp;rsquo;s value. Assuming that the form POST data had the following:</source>
          <target state="translated">在这套规则中，它声明电子邮件地址在数据库中应该是唯一的，除了ID与占位符值匹配的行之外。假设表单POST数据具有以下内容：</target>
        </trans-unit>
        <trans-unit id="9e17e44f64ecd8743b6ca1c3738ac64b8c9b8db5" translate="yes" xml:space="preserve">
          <source>In this tutorial, you will be creating a &lt;strong&gt;basic news application&lt;/strong&gt;. You will begin by writing the code that can load static pages. Next, you will create a news section that reads news items from a database. Finally, you&amp;rsquo;ll add a form to create news items in the database.</source>
          <target state="translated">在本教程中，您将创建一个&lt;strong&gt;基本的新闻应用程序&lt;/strong&gt;。您将从编写可加载静态页面的代码开始。接下来，您将创建一个新闻部分，该部分将从数据库中读取新闻项。最后，您将添加一个表单以在数据库中创建新闻项。</target>
        </trans-unit>
        <trans-unit id="6e22614cbb24dd7b85b80e42f3d98198cd0de0f7" translate="yes" xml:space="preserve">
          <source>In your &lt;strong&gt;Routes.php&lt;/strong&gt; file you can create routes that are only accessible from the CLI as easily as you would create any other route. Instead of using the &lt;code&gt;get()&lt;/code&gt;, &lt;code&gt;post()&lt;/code&gt;, or similar method, you would use the &lt;code&gt;cli()&lt;/code&gt; method. Everything else works exactly like a normal route definition:</source>
          <target state="translated">在&lt;strong&gt;Routes.php&lt;/strong&gt;文件中，您可以创建只能从CLI访问的路由，就像创建任何其他路由一样容易。可以使用 &lt;code&gt;cli()&lt;/code&gt; 方法来代替使用 &lt;code&gt;get()&lt;/code&gt; ， &lt;code&gt;post()&lt;/code&gt; 或类似方法。其他所有内容的工作方式都与常规路线定义完全相同：</target>
        </trans-unit>
        <trans-unit id="1c114a777f02f064ab4de2ff8d4a90fecb01e21f" translate="yes" xml:space="preserve">
          <source>In your &lt;strong&gt;application/controllers/&lt;/strong&gt; directory, create a file called Smileys.php and place the code below in it.</source>
          <target state="translated">在您的&lt;strong&gt;application / controllers /&lt;/strong&gt;目录中，创建一个名为Smileys.php的文件，并将下面的代码放入其中。</target>
        </trans-unit>
        <trans-unit id="25a6c342ff346fcef1cab1051301f6a8ea9a9ad5" translate="yes" xml:space="preserve">
          <source>In your &lt;strong&gt;application/views/&lt;/strong&gt; directory, create a file called &lt;strong&gt;smiley_view.php&lt;/strong&gt; and place this code in it:</source>
          <target state="translated">在您的&lt;strong&gt;application / views /&lt;/strong&gt;目录中，创建一个名为&lt;strong&gt;smiley_view.php&lt;/strong&gt;的文件，并将以下代码放入其中：</target>
        </trans-unit>
        <trans-unit id="2af2ea24eb26cd73125b33bd603a1118fe718c3b" translate="yes" xml:space="preserve">
          <source>In your &lt;strong&gt;config/config.php&lt;/strong&gt; file you can specify a suffix that will be added to all URLs generated by CodeIgniter. For example, if a URL is this:</source>
          <target state="translated">在&lt;strong&gt;config / config.php&lt;/strong&gt;文件中，您可以指定一个后缀，该后缀将添加到CodeIgniter生成的所有URL中。例如，如果URL是这样的：</target>
        </trans-unit>
        <trans-unit id="6b905381588895f31781cdf0c332a26a036ea3b1" translate="yes" xml:space="preserve">
          <source>In your CodeIgniter &lt;strong&gt;system&lt;/strong&gt; folder, you will find a &lt;strong&gt;language&lt;/strong&gt; sub-directory containing a set of language files for the &lt;strong&gt;english&lt;/strong&gt; idiom. The files in this directory (&lt;strong&gt;system/language/english/&lt;/strong&gt;) define the regular messages, error messages, and other generally output terms or expressions, for the different parts of the CodeIgniter framework.</source>
          <target state="translated">在您的CodeIgniter &lt;strong&gt;系统&lt;/strong&gt;文件夹中，您将找到一个&lt;strong&gt;语言&lt;/strong&gt;子目录，其中包含用于&lt;strong&gt;英语&lt;/strong&gt;习语的一组语言文件。此目录中的文件（&lt;strong&gt;system / language / english /&lt;/strong&gt;）为CodeIgniter框架的不同部分定义了常规消息，错误消息以及其他通常输出的术语或表达式。</target>
        </trans-unit>
        <trans-unit id="daaa9b107552a9ba5fe078718a29552ff93b1228" translate="yes" xml:space="preserve">
          <source>In your controller, change the &amp;ldquo;username&amp;rdquo; rule to this:</source>
          <target state="translated">在您的控制器中，将&amp;ldquo;用户名&amp;rdquo;规则更改为：</target>
        </trans-unit>
        <trans-unit id="7e4eb6456b5ab23de5d1d03352fdb46087fb6c3c" translate="yes" xml:space="preserve">
          <source>In your controllers, you can override the defaults and config file values by calling the &lt;code&gt;set_profiler_sections()&lt;/code&gt; method of the &lt;a href=&quot;../libraries/output&quot;&gt;Output Library&lt;/a&gt;:</source>
          <target state="translated">在控制器中，可以通过调用&lt;a href=&quot;../libraries/output&quot;&gt;输出库&lt;/a&gt;的 &lt;code&gt;set_profiler_sections()&lt;/code&gt; 方法覆盖默认值和配置文件值：</target>
        </trans-unit>
        <trans-unit id="53d30d6442c6336edbc03303d35864bd65be42cc" translate="yes" xml:space="preserve">
          <source>In your project root:</source>
          <target state="translated">在你的项目根。</target>
        </trans-unit>
        <trans-unit id="0f6ad7c808e4494e58979d03691b45eec69160fe" translate="yes" xml:space="preserve">
          <source>In your validation config file, you will name your rule group member/signup:</source>
          <target state="translated">在您的验证配置文件中,您将命名您的规则组成员/注册。</target>
        </trans-unit>
        <trans-unit id="dd5a7bb5632498c501639ac677275bcb7376b1dd" translate="yes" xml:space="preserve">
          <source>Inadequate authentication or improper session management can lead to a user getting more privileges than they are entitled to.</source>
          <target state="translated">不充分的认证或不恰当的会话管理会导致用户获得比他们有权获得的更多特权。</target>
        </trans-unit>
        <trans-unit id="ff133e24a31f413e13e7540c8c3419179b9c7be3" translate="yes" xml:space="preserve">
          <source>Include short code segments if they help to explain. Use a pastebin or dropbox facility to include longer segments of code or screenshots - do not include them in the issue report itself. This means setting a reasonable expiry for those until the issue is resolved or closed.</source>
          <target state="translated">如果有助于解释,请包含短代码段。使用pastebin或dropbox设施来包含较长的代码段或屏幕截图--不要将它们包含在问题报告本身。这意味着为这些设置一个合理的到期时间,直到问题解决或关闭。</target>
        </trans-unit>
        <trans-unit id="de89b973779996b7a2aed8f92656f4bd47fe8cc3" translate="yes" xml:space="preserve">
          <source>Included Properties</source>
          <target state="translated">包括的属性</target>
        </trans-unit>
        <trans-unit id="f6b899df8a00e8017f7737d8744273eef65f5afa" translate="yes" xml:space="preserve">
          <source>Including View Partials</source>
          <target state="translated">包括观点党派</target>
        </trans-unit>
        <trans-unit id="a9c615b9e833ee226ac08cb33f93df17a615ca30" translate="yes" xml:space="preserve">
          <source>Incoming</source>
          <target state="translated">Incoming</target>
        </trans-unit>
        <trans-unit id="ea6d9025995e6a7d6458742c7cd6ec9693cd9c00" translate="yes" xml:space="preserve">
          <source>IncomingRequest #1304, #1313</source>
          <target state="translated">IncomingRequest #1304,#1313。</target>
        </trans-unit>
        <trans-unit id="122259ba34c742285201ca13ab897414e825cdab" translate="yes" xml:space="preserve">
          <source>IncomingRequest #1445, #1469, #1496</source>
          <target state="translated">IncomingRequest #1445,#1469,#1496</target>
        </trans-unit>
        <trans-unit id="597c97867791fa1da9c6d5bb798210f8f72827de" translate="yes" xml:space="preserve">
          <source>IncomingRequest #1831</source>
          <target state="translated">IncomingRequest #1831</target>
        </trans-unit>
        <trans-unit id="4381fdb396e31cdc07b482332ea531c8733888dd" translate="yes" xml:space="preserve">
          <source>IncomingRequest #2063</source>
          <target state="translated">IncomingRequest #2063</target>
        </trans-unit>
        <trans-unit id="d737ab0d744a2ee8cf33b7ef31a9fe4dc04e103a" translate="yes" xml:space="preserve">
          <source>IncomingRequest #2265</source>
          <target state="translated">IncomingRequest #2265</target>
        </trans-unit>
        <trans-unit id="adbca23d6a706fc860f496328c3e8b8e10849e7e" translate="yes" xml:space="preserve">
          <source>IncomingRequest Class</source>
          <target state="translated">IncomingRequest类</target>
        </trans-unit>
        <trans-unit id="bd02816d1b5c22124ae83ec3085053151fdf9c3e" translate="yes" xml:space="preserve">
          <source>IncomingRequestDetectingTest #1576</source>
          <target state="translated">IncomingRequestDetectingTest #1576</target>
        </trans-unit>
        <trans-unit id="bf567c23119f965266746dfcb59ea1ac8a8743ef" translate="yes" xml:space="preserve">
          <source>IncomingRequestTest #1496</source>
          <target state="translated">IncomingRequestTest #1496</target>
        </trans-unit>
        <trans-unit id="74f6f2eb82ca90a04d33033d3b79cb0b0b4db945" translate="yes" xml:space="preserve">
          <source>IncomingRequestTest #1576</source>
          <target state="translated">IncomingRequestTest #1576</target>
        </trans-unit>
        <trans-unit id="613c5683f7ad525becf388c2f74a7a2727ca8ee8" translate="yes" xml:space="preserve">
          <source>IncomingRequestTest #1641</source>
          <target state="translated">IncomingRequestTest #1641</target>
        </trans-unit>
        <trans-unit id="edba46c59b2433e9976b88828b0a55083b551a11" translate="yes" xml:space="preserve">
          <source>Increment the value for a specific table by one and return the new value. (This is what is used internally with &lt;code&gt;Fabricator::create()&lt;/code&gt;).</source>
          <target state="translated">将特定表的值加1，然后返回新值。（这是在 &lt;code&gt;Fabricator::create()&lt;/code&gt; 内部使用的）。</target>
        </trans-unit>
        <trans-unit id="83dd44b97b6a7a5bdce797eefa084b3f067ebc9f" translate="yes" xml:space="preserve">
          <source>Increments a string by appending a number to it or increasing the number. Useful for creating &amp;ldquo;copies&amp;rdquo; or a file or duplicating database content which has unique titles or slugs.</source>
          <target state="translated">通过在字符串后附加数字或增加数字来增加字符串。对于创建&amp;ldquo;副本&amp;rdquo;或文件或复制具有唯一标题或附件的数据库内容很有用。</target>
        </trans-unit>
        <trans-unit id="2feb617564d9f5f6ba7725f9e8a31cf3efa6e491" translate="yes" xml:space="preserve">
          <source>Increments the value of a field by the specified amount. If the field is not a numeric field, like a VARCHAR, it will likely be replaced with $value.</source>
          <target state="translated">将一个字段的值增加指定的数量,如果字段不是像VARCHAR那样的数字字段,则用$value代替。如果字段不是数字字段,比如VARCHAR,它可能会被$value代替。</target>
        </trans-unit>
        <trans-unit id="5a6bdab0c6db458e90545a059bae821391f2bc1c" translate="yes" xml:space="preserve">
          <source>Inflector</source>
          <target state="translated">Inflector</target>
        </trans-unit>
        <trans-unit id="8b2f69700fac3a46664ddc4767e8c233f82f3bdc" translate="yes" xml:space="preserve">
          <source>Inflector Helper</source>
          <target state="translated">导流板助手</target>
        </trans-unit>
        <trans-unit id="6ae3d560bff162a6a76c386a593983e3599cca04" translate="yes" xml:space="preserve">
          <source>InflectorHelperTest #2065</source>
          <target state="translated">InflectorHelperTest #2065</target>
        </trans-unit>
        <trans-unit id="d92fd9006045f6c955ec5ea9bdfd4f065dc3db77" translate="yes" xml:space="preserve">
          <source>InflectorHelperTest #2296</source>
          <target state="translated">InflectorHelperTest #2296</target>
        </trans-unit>
        <trans-unit id="4887759530b0843965faeadd02359c7845dff2fc" translate="yes" xml:space="preserve">
          <source>Information About Your Database</source>
          <target state="translated">关于您的数据库信息</target>
        </trans-unit>
        <trans-unit id="0e603abcd1a5cd00bfffc089dde0ad742072357f" translate="yes" xml:space="preserve">
          <source>Information From Executing a Query</source>
          <target state="translated">执行查询的信息</target>
        </trans-unit>
        <trans-unit id="b20cefc43b636fa25a43eac43c2bf12918ea7dca" translate="yes" xml:space="preserve">
          <source>Information about all uploaded files can be retrieved through &lt;code&gt;$request-&amp;gt;getFiles()&lt;/code&gt;, which returns a &lt;a href=&quot;../libraries/uploaded_files&quot;&gt;FileCollection&lt;/a&gt; instance. This helps to ease the pain of working with uploaded files, and uses best practices to minimize any security risks.</source>
          <target state="translated">可以通过 &lt;code&gt;$request-&amp;gt;getFiles()&lt;/code&gt; 检索有关所有上载文件的信息，该文件返回一个&lt;a href=&quot;../libraries/uploaded_files&quot;&gt;FileCollection&lt;/a&gt;实例。这有助于减轻使用上载文件的痛苦，并使用最佳做法来最大程度地降低任何安全风险。</target>
        </trans-unit>
        <trans-unit id="36ac2282e060300d6bc796647ed4007ca4656844" translate="yes" xml:space="preserve">
          <source>Information about the hashed password</source>
          <target state="translated">关于散列密码的信息</target>
        </trans-unit>
        <trans-unit id="de7cd9e5602d11f9c93b107b113724b812a1909d" translate="yes" xml:space="preserve">
          <source>Information about the uploaded file</source>
          <target state="translated">上传的文件信息</target>
        </trans-unit>
        <trans-unit id="140ad78a4dcc3766634a5a6c133fe60ec3b32e5a" translate="yes" xml:space="preserve">
          <source>Information on the entire cache database</source>
          <target state="translated">整个缓存数据库的信息</target>
        </trans-unit>
        <trans-unit id="60ec494ee20a43921a8e4ea524f3499761718bac" translate="yes" xml:space="preserve">
          <source>Informational Messages. These are the lowest priority messages, simply giving information regarding some process.</source>
          <target state="translated">信息性信息。这些是最低优先级的信息,仅仅是提供一些过程的信息。</target>
        </trans-unit>
        <trans-unit id="2fd73e634f437c74afd7538d9c43bbb9a3e12e46" translate="yes" xml:space="preserve">
          <source>Initial Configuration &amp;amp; Set Up</source>
          <target state="translated">初始配置和设置</target>
        </trans-unit>
        <trans-unit id="7c83e448b7d3bdc62c372f22486163968ec06cd8" translate="yes" xml:space="preserve">
          <source>Initial configuration is done in &lt;strong&gt;/app/Config/Autoload.php&lt;/strong&gt;. This file contains two primary arrays: one for the classmap, and one for PSR4-compatible namespaces.</source>
          <target state="translated">初始配置在&lt;strong&gt;/app/Config/Autoload.php中&lt;/strong&gt;完成。该文件包含两个主要数组：一个用于类映射，一个用于PSR4兼容名称空间。</target>
        </trans-unit>
        <trans-unit id="9d7596b8a506e21f3adfcf509940dae4a61bf78e" translate="yes" xml:space="preserve">
          <source>Initialize database settings, establish a connection to the database.</source>
          <target state="translated">初始化数据库设置,建立与数据库的连接。</target>
        </trans-unit>
        <trans-unit id="f5b9ca96e0e6702b654cb5fce04a8d5b0aa5821e" translate="yes" xml:space="preserve">
          <source>Initializes (configures) the library to use a different driver, cipher, mode or key.</source>
          <target state="translated">初始化(配置)库以使用不同的驱动程序、密码、模式或密钥。</target>
        </trans-unit>
        <trans-unit id="5ca4f7eb9f4c2316c17435593bbb7722d9194376" translate="yes" xml:space="preserve">
          <source>Initializes (configures) the library to use different settings.</source>
          <target state="translated">初始化(配置)库以使用不同的设置。</target>
        </trans-unit>
        <trans-unit id="450c70041c0560fd7ef7748a94e9a8412cbc1e15" translate="yes" xml:space="preserve">
          <source>Initializes all the email variables to an empty state. This method is intended for use if you run the email sending method in a loop, permitting the data to be reset between cycles.</source>
          <target state="translated">将所有的电子邮件变量初始化为空状态。如果你在循环中运行电子邮件发送方法,允许在循环之间重置数据,那么这个方法就会被使用。</target>
        </trans-unit>
        <trans-unit id="98c502ac468292017ae5f192b90eb7400f1f6e79" translate="yes" xml:space="preserve">
          <source>Initializes the Calendaring preferences. Accepts an associative array as input, containing display preferences.</source>
          <target state="translated">初始化Calendaring偏好。接受一个包含显示偏好的关联数组作为输入。</target>
        </trans-unit>
        <trans-unit id="ee7c5d74769ec578a1058c6d3c8b0ffa30736c3d" translate="yes" xml:space="preserve">
          <source>Initializes the Pagination class with your preferred options.</source>
          <target state="translated">用你喜欢的选项初始化分页类。</target>
        </trans-unit>
        <trans-unit id="70b2358f732fa8c9e42689376cbca9969caf9ecd" translate="yes" xml:space="preserve">
          <source>Initializes the XML-RPC library. Accepts an associative array containing your settings.</source>
          <target state="translated">初始化XML-RPC库。接受一个包含你的设置的关联数组。</target>
        </trans-unit>
        <trans-unit id="d7a85696800ed0af25e9c76faa785c85f63437f6" translate="yes" xml:space="preserve">
          <source>Initializes the class for processing an image.</source>
          <target state="translated">初始化处理图像的类。</target>
        </trans-unit>
        <trans-unit id="b05259a752965e8c5b8ca174aa3b138b33c15c3e" translate="yes" xml:space="preserve">
          <source>Initializing a Session</source>
          <target state="translated">初始化一个会话</target>
        </trans-unit>
        <trans-unit id="2329581287b8eeed5eae7f757a25730c77006015" translate="yes" xml:space="preserve">
          <source>Initializing the Class</source>
          <target state="translated">初始化类</target>
        </trans-unit>
        <trans-unit id="e05d9053a05a2f6ed94612a25b725c2726c66a41" translate="yes" xml:space="preserve">
          <source>Initializing the Database Class</source>
          <target state="translated">初始化数据库类</target>
        </trans-unit>
        <trans-unit id="0ade5d8c9764e51b720a1035d44f0c3b829c5f37" translate="yes" xml:space="preserve">
          <source>Initializing the Forge Class</source>
          <target state="translated">初始化锻造类</target>
        </trans-unit>
        <trans-unit id="9f88fa37e1c12890d04ecd266ae43de5c7fdda5d" translate="yes" xml:space="preserve">
          <source>Initializing the Shopping Cart Class</source>
          <target state="translated">初始化购物车类</target>
        </trans-unit>
        <trans-unit id="cccc001a54c9d96d4335172095fa54ae98c511af" translate="yes" xml:space="preserve">
          <source>Initializing the Upload Class</source>
          <target state="translated">初始化上传类</target>
        </trans-unit>
        <trans-unit id="915bc66dbf90b3b17ffcb969a34d09ccc43208dc" translate="yes" xml:space="preserve">
          <source>Initializing the Utility Class</source>
          <target state="translated">初始化实用类</target>
        </trans-unit>
        <trans-unit id="fe0b38e3970b220ebb4f77eef03d409e792c38fc" translate="yes" xml:space="preserve">
          <source>Inline Content</source>
          <target state="translated">内联内容</target>
        </trans-unit>
        <trans-unit id="b568d47f2e244743b1fd7472db836ef9769c21f8" translate="yes" xml:space="preserve">
          <source>Input</source>
          <target state="translated">Input</target>
        </trans-unit>
        <trans-unit id="ddfdc8701ec1b817c00ddb898531f5b1c6f8a037" translate="yes" xml:space="preserve">
          <source>Input Class</source>
          <target state="translated">输入类</target>
        </trans-unit>
        <trans-unit id="29828082e95fd0d1118e948c6edbcb0fa39e8cdd" translate="yes" xml:space="preserve">
          <source>Input Filtering</source>
          <target state="translated">输入过滤</target>
        </trans-unit>
        <trans-unit id="1ec54b9f145d0c22611e83b27bdc657f83aac9a8" translate="yes" xml:space="preserve">
          <source>Input stream array if no parameters supplied, otherwise the specified value if found or NULL if not</source>
          <target state="translated">如果没有提供参数,则输入流数组,否则如果找到指定的值,或者如果没有找到指定的值,则输入流数组为NULL。</target>
        </trans-unit>
        <trans-unit id="907d7451e7f17214e736b646e5f53d44d0db2ff5" translate="yes" xml:space="preserve">
          <source>Insecure Direct Object References occur when an application provides direct access to objects based on user-supplied input. As a result of this vulnerability attackers can bypass authorization and access resources in the system directly, for example database records or files.</source>
          <target state="translated">当应用程序根据用户提供的输入直接访问对象时,会发生不安全的直接对象引用。由於這個漏洞,攻擊者可以繞過授權,直接存取系統中的資源,例如資料庫記錄或檔案。</target>
        </trans-unit>
        <trans-unit id="a867c81b10593230b68cede96356f54aeb47293f" translate="yes" xml:space="preserve">
          <source>Insert items into the cart and save it to the session table. Returns TRUE on success and FALSE on failure.</source>
          <target state="translated">将商品插入购物车并保存到会话表中。成功时返回TRUE,失败时返回FALSE。</target>
        </trans-unit>
        <trans-unit id="bb0554c986cdaa823c1ae630431b2b98efe4a35f" translate="yes" xml:space="preserve">
          <source>InsertTest #1640, #1677</source>
          <target state="translated">InsertTest #1640,#1677</target>
        </trans-unit>
        <trans-unit id="19cf71b4ecaeee0764237faa9780a1a6aa3da80d" translate="yes" xml:space="preserve">
          <source>InsertTest #1677</source>
          <target state="translated">InsertTest #1677</target>
        </trans-unit>
        <trans-unit id="fd73fb845758b5fc61a4f9f4d0ffbd5ee2b3d585" translate="yes" xml:space="preserve">
          <source>InsertTest #2269</source>
          <target state="translated">InsertTest #2269</target>
        </trans-unit>
        <trans-unit id="43a173abe9c6ad6efc38c4ab804b3a1062da29e1" translate="yes" xml:space="preserve">
          <source>Inserted value</source>
          <target state="translated">插入值</target>
        </trans-unit>
        <trans-unit id="0dd2b481ad724309af4e29174757be7f9ad67dd8" translate="yes" xml:space="preserve">
          <source>Inserting Data</source>
          <target state="translated">插入数据</target>
        </trans-unit>
        <trans-unit id="87ad9d627b9b1fc624eb9170c78ceda7065c18e2" translate="yes" xml:space="preserve">
          <source>Inserts a new row into the database. This row is removed after the current test runs. &lt;code&gt;$data&lt;/code&gt; is an associative array with the data to insert into the table.</source>
          <target state="translated">在数据库中插入新行。当前测试运行后，该行将被删除。 &lt;code&gt;$data&lt;/code&gt; 是一个关联数组，具有要插入表中的数据。</target>
        </trans-unit>
        <trans-unit id="49ba34f16fb4468a50166f93ed913800a0bdc4c5" translate="yes" xml:space="preserve">
          <source>Inside the namespace, the file must be found at &lt;code&gt;Config\Services.php&lt;/code&gt;</source>
          <target state="translated">在名称空间内，必须在 &lt;code&gt;Config\Services.php&lt;/code&gt; 找到该文件</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">Installation</target>
        </trans-unit>
        <trans-unit id="94b39fc155055e7e8b8070c11bb803287f7d2dac" translate="yes" xml:space="preserve">
          <source>Installation &amp;amp; Set Up</source>
          <target state="translated">安装与设置</target>
        </trans-unit>
        <trans-unit id="550c70d12638cfa6aa8f9e73e5ae88f8cbc4e453" translate="yes" xml:space="preserve">
          <source>Installation Instructions</source>
          <target state="translated">安装说明</target>
        </trans-unit>
        <trans-unit id="2d1eb98c701254e7810f0d66475bb3073dbd23d5" translate="yes" xml:space="preserve">
          <source>Installing phpUnit</source>
          <target state="translated">安装phpUnit</target>
        </trans-unit>
        <trans-unit id="fc3b8f3c6151107514c4bf4eeca907ec5482a39c" translate="yes" xml:space="preserve">
          <source>Instantiating</source>
          <target state="translated">Instantiating</target>
        </trans-unit>
        <trans-unit id="0ee9328abc7e81d6d9a0a4dfb22dd4ac7e0327aa" translate="yes" xml:space="preserve">
          <source>Instead of (or in addition to) using &lt;code&gt;Services&lt;/code&gt; as described in &lt;a href=&quot;#usage&quot;&gt;Using the Encryption Library&lt;/a&gt;, you can create an &amp;ldquo;Encrypter&amp;rdquo; directly, or change the settings of an existing instance.</source>
          <target state="translated">代替（或除了）使用&lt;a href=&quot;#usage&quot;&gt;加密库中&lt;/a&gt;所述使用 &lt;code&gt;Services&lt;/code&gt; ，您可以直接创建&amp;ldquo;加密器&amp;rdquo;，或更改现有实例的设置。</target>
        </trans-unit>
        <trans-unit id="266cc8e518a444fef4922c55769586b3c02890d2" translate="yes" xml:space="preserve">
          <source>Instead of calling the &lt;code&gt;getNews()&lt;/code&gt; method without a parameter, the &lt;code&gt;$slug&lt;/code&gt; variable is passed, so it will return the specific news item. The only thing left to do is create the corresponding view at &lt;strong&gt;app/Views/news/view.php&lt;/strong&gt;. Put the following code in this file.</source>
          <target state="translated">传递 &lt;code&gt;$slug&lt;/code&gt; 变量而不是调用不带参数的 &lt;code&gt;getNews()&lt;/code&gt; 方法，这样它将返回特定的新闻项。剩下要做的唯一事情就是在&lt;strong&gt;app / Views / news / view.php&lt;/strong&gt;创建相应的视图。将以下代码放入此文件。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c15f06834a0af85811d33247bd21731738bfe214" translate="yes" xml:space="preserve">
          <source>Instead of calling the &lt;code&gt;get_news()&lt;/code&gt; method without a parameter, the &lt;code&gt;$slug&lt;/code&gt; variable is passed, so it will return the specific news item. The only things left to do is create the corresponding view at &lt;em&gt;application/views/news/view.php&lt;/em&gt;. Put the following code in this file.</source>
          <target state="translated">传递 &lt;code&gt;$slug&lt;/code&gt; 变量而不是不带参数调用 &lt;code&gt;get_news()&lt;/code&gt; 方法，因此它将返回特定的新闻项。剩下要做的就是在&lt;em&gt;application / views / news / view.php&lt;/em&gt;创建相应的视图。将以下代码放入此文件。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8c14b2990b4b7dcdd000fe202b536ecffb1270fa" translate="yes" xml:space="preserve">
          <source>Instead of creating the instance ourself, we let a central class create an instance of the class for us. This class is kept very simple. It only contains a method for each class that we want to use as a service. The method typically returns a shared instance of that class, passing any dependencies it might have into it. Then, we would replace our timer creation code with code that calls this new class:</source>
          <target state="translated">我们不需要自己创建实例,而是让一个中心类为我们创建一个类的实例。这个类保持的非常简单。它只包含一个方法,用于我们想作为服务使用的每个类。该方法通常会返回该类的一个共享实例,并将它可能有的任何依赖关系传入其中。然后,我们会用调用这个新类的代码来替换我们的定时器创建代码。</target>
        </trans-unit>
        <trans-unit id="f9ccccf1f79bdde1a953a129d0af388be7c5862c" translate="yes" xml:space="preserve">
          <source>Instead of the &lt;em&gt;maxlength&lt;/em&gt; and &lt;em&gt;size&lt;/em&gt; attributes in the above example, you will instead specify &lt;em&gt;rows&lt;/em&gt; and &lt;em&gt;cols&lt;/em&gt;.</source>
          <target state="translated">代替上面示例中的&lt;em&gt;maxlength&lt;/em&gt;和&lt;em&gt;size&lt;/em&gt;属性，您将改为指定&lt;em&gt;rows&lt;/em&gt;和&lt;em&gt;cols&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="b3e2f79d53c68c61aeea078302e60134ac15c8b1" translate="yes" xml:space="preserve">
          <source>Instead of using the question mark to mark the location of the bound values, you can name the bindings, allowing the keys of the values passed in to match placeholders in the query:</source>
          <target state="translated">不使用问号来标记绑定值的位置,而是可以给绑定命名,让传递进来的值的键与查询中的占位符相匹配。</target>
        </trans-unit>
        <trans-unit id="d4716d1e58d6b1da06f97a9dfc3569ba9edbe049" translate="yes" xml:space="preserve">
          <source>Instead of writing database operations right in the controller, queries should be placed in a model, so they can easily be reused later. Models are the place where you retrieve, insert, and update information in your database or other data stores. They provide access to your data. You can read more about it &lt;a href=&quot;../models/model&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">应该将查询放置在模型中，而不是直接在控制器中编写数据库操作，以便以后可以轻松重用它们。模型是在数据库或其他数据存储中检索，插入和更新信息的地方。它们提供对您数据的访问。您可以&lt;a href=&quot;../models/model&quot;&gt;在此处&lt;/a&gt;了解更多信息。</target>
        </trans-unit>
        <trans-unit id="eaa94b0f14a39ee4f35a23a687593fd213e3e46e" translate="yes" xml:space="preserve">
          <source>Instead of writing database operations right in the controller, queries should be placed in a model, so they can easily be reused later. Models are the place where you retrieve, insert, and update information in your database or other data stores. They represent your data.</source>
          <target state="translated">与其在控制器中直接编写数据库操作,不如将查询放在模型中,这样以后可以很容易地重用它们。模型是您在数据库或其他数据存储中检索、插入和更新信息的地方。它们代表了你的数据。</target>
        </trans-unit>
        <trans-unit id="07bb5d99b03923ba78741db3f0a22f09ff421b5f" translate="yes" xml:space="preserve">
          <source>Instead, we are going to open Terminal in Mac/Linux or go to Run &amp;gt; &amp;ldquo;cmd&amp;rdquo; in Windows and navigate to our CodeIgniter project&amp;rsquo;s web root.</source>
          <target state="translated">相反，我们将在Mac / Linux中打开Terminal或在Windows中转到&amp;ldquo;运行&amp;rdquo;&amp;gt;&amp;ldquo; cmd&amp;rdquo;并导航到我们的CodeIgniter项目的Web根目录。</target>
        </trans-unit>
        <trans-unit id="6a4770879bf02b01c62b2021c4fa40f55f566681" translate="yes" xml:space="preserve">
          <source>Instead, we are going to open the terminal in Mac/Linux or go to Run &amp;gt; &amp;ldquo;cmd&amp;rdquo; in Windows and navigate to our CodeIgniter project.</source>
          <target state="translated">相反，我们将在Mac / Linux中打开终端，或者在Windows中转到&amp;ldquo;运行&amp;rdquo;&amp;gt;&amp;ldquo; cmd&amp;rdquo;，然后导航到我们的CodeIgniter项目。</target>
        </trans-unit>
        <trans-unit id="ea2c720502deec2915493d8a2cb72e3b14800a07" translate="yes" xml:space="preserve">
          <source>Instead, you should do something like this, depending on your environment</source>
          <target state="translated">相反,你应该根据你的环境,做这样的事情</target>
        </trans-unit>
        <trans-unit id="c871d588250818d1c93e0fa0233b876f4f1dc207" translate="yes" xml:space="preserve">
          <source>Insufficient input validation where one user can add content to a web site that can be malicious when viewed by other users to the web site.</source>
          <target state="translated">输入验证不充分,一个用户可以在网站上添加内容,当其他用户查看到网站时,可能是恶意的。</target>
        </trans-unit>
        <trans-unit id="b2e6a414d6b7905e9145e3d59307052be31b6a67" translate="yes" xml:space="preserve">
          <source>Integrate with other applications in other languages. For example, a random C++ script could call one command and run code in your models!</source>
          <target state="translated">与其他语言的应用程序集成。例如,一个随机的C++脚本可以调用一个命令并在你的模型中运行代码!</target>
        </trans-unit>
        <trans-unit id="a2df016660f7365743cb17035ea465bc9a2c6ab7" translate="yes" xml:space="preserve">
          <source>Interbase/Firebird via the &lt;em&gt;ibase&lt;/em&gt; and &lt;em&gt;pdo&lt;/em&gt; drivers</source>
          <target state="translated">通过&lt;em&gt;ibase&lt;/em&gt;和&lt;em&gt;pdo&lt;/em&gt;驱动程序进行Interbase / Firebird</target>
        </trans-unit>
        <trans-unit id="18af2010abc5eeaf48d2eca9cbf64b15158b9f94" translate="yes" xml:space="preserve">
          <source>Interesting events in your application, like a user logging in, logging SQL queries, etc.</source>
          <target state="translated">你的应用程序中的有趣事件,如用户登录,记录SQL查询等。</target>
        </trans-unit>
        <trans-unit id="7b73c223fde3cb09dfff8b461bcf969c391aa440" translate="yes" xml:space="preserve">
          <source>Internally, all queries are processed and stored as instances of CodeIgniterDatabaseQuery. This class is responsible for binding the parameters, otherwise preparing the query, and storing performance data about its query.</source>
          <target state="translated">在内部,所有的查询都以CodeIgniterDatabaseQuery的实例来处理和存储。该类负责绑定参数,否则准备查询,并存储其查询的性能数据。</target>
        </trans-unit>
        <trans-unit id="3b755f7b857b999860755840e5f0964f6b120c4d" translate="yes" xml:space="preserve">
          <source>Internationalization</source>
          <target state="translated">Internationalization</target>
        </trans-unit>
        <trans-unit id="b4e6a310890f62289340d7802703b8c2586c6d86" translate="yes" xml:space="preserve">
          <source>Intro</source>
          <target state="translated">Intro</target>
        </trans-unit>
        <trans-unit id="2473e96bc614a911821242119918a241a41836d6" translate="yes" xml:space="preserve">
          <source>Introduction</source>
          <target state="translated">Introduction</target>
        </trans-unit>
        <trans-unit id="3400d66643a199f7963e94306035e5ae0ffa6398" translate="yes" xml:space="preserve">
          <source>Introduction at HTML5Rocks</source>
          <target state="translated">HTML5Rocks的介绍</target>
        </trans-unit>
        <trans-unit id="4364494f3ce5116182605619ffdae31c589015ac" translate="yes" xml:space="preserve">
          <source>Introduction, this page, which gives you an overview of what to expect and gets your default application downloaded and running.</source>
          <target state="translated">介绍,这个页面,它给你一个概述,让你的默认应用程序下载和运行。</target>
        </trans-unit>
        <trans-unit id="be0e3691ffce584022a34ea3a922d522ecd36f54" translate="yes" xml:space="preserve">
          <source>Introduction, this page, which gives you an overview of what to expect.</source>
          <target state="translated">介绍,这一页,给大家介绍一下。</target>
        </trans-unit>
        <trans-unit id="a2d1a19b4ad8a682f05e9317f8df7dc728e26338" translate="yes" xml:space="preserve">
          <source>Is it something really obvious that you fix it yourself?</source>
          <target state="translated">自己修的东西真的很明显吗?</target>
        </trans-unit>
        <trans-unit id="598dccd6633158e03eab1e5b47384bb6f63df193" translate="yes" xml:space="preserve">
          <source>Issues are a quick way to point out a bug. If you find a bug or documentation error in CodeIgniter then please check a few things first:</source>
          <target state="translated">问题是指出bug的一种快速方式。如果你在CodeIgniter中发现了一个bug或文档错误,那么请先检查一些东西。</target>
        </trans-unit>
        <trans-unit id="9f2d2cd6702745a581bd59874d849b30a2299789" translate="yes" xml:space="preserve">
          <source>It accepts a positive integer value, which defaults to 0 and returns TRUE on success or FALSE on failure.</source>
          <target state="translated">它接受一个正整数值,默认为0,成功时返回TRUE,失败时返回FALSE。</target>
        </trans-unit>
        <trans-unit id="1f056bd2bbc01e7ae8c64dd31b2eca754da54b7b" translate="yes" xml:space="preserve">
          <source>It also lets you display a set of smiley images that when clicked will be inserted into a form field. For example, if you have a blog that allows user commenting you can show the smileys next to the comment form. Your users can click a desired smiley and with the help of some JavaScript it will be placed into the form field.</source>
          <target state="translated">它还可以让您显示一组笑脸图片,当点击时,这些图片将被插入到一个表格字段中。例如,如果你有一个允许用户评论的博客,你可以在评论表单旁边显示笑脸。您的用户可以点击所需的笑脸图片,并在一些JavaScript的帮助下将其插入到表格字段中。</target>
        </trans-unit>
        <trans-unit id="5a817ce454ff0e513d1e3882d152a8b91b34e86d" translate="yes" xml:space="preserve">
          <source>It also support nested definition:</source>
          <target state="translated">它还支持嵌套定义。</target>
        </trans-unit>
        <trans-unit id="f60073f39bc330951e955ab4a0f808d026287e1b" translate="yes" xml:space="preserve">
          <source>It assumes that you have installed &lt;a href=&quot;https://www.virtualbox.org/wiki/Downloads&quot;&gt;VirtualBox&lt;/a&gt; and &lt;a href=&quot;https://www.vagrantup.com/downloads.html&quot;&gt;Vagrant&lt;/a&gt; for your platform.</source>
          <target state="translated">假定您已经为平台安装了&lt;a href=&quot;https://www.virtualbox.org/wiki/Downloads&quot;&gt;VirtualBox&lt;/a&gt;和&lt;a href=&quot;https://www.vagrantup.com/downloads.html&quot;&gt;Vagrant&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3dff7037a297e251b1aa9d665868de3c96f8b45c" translate="yes" xml:space="preserve">
          <source>It can range from 0 to 9, with 9 being the highest and 0 effectively disabling compression:</source>
          <target state="translated">它的范围可以从0到9,9是最高的,0可以有效地禁止压缩。</target>
        </trans-unit>
        <trans-unit id="c0cc03b5def98a6267a07ed390016614a67395d1" translate="yes" xml:space="preserve">
          <source>It can safely be said that it works exactly like PHP&amp;rsquo;s own default session implementation, but in case this is an important detail for you, have it mind that it is in fact not the same code and it has some limitations (and advantages).</source>
          <target state="translated">可以肯定地说，它的工作原理与PHP自己的默认会话实现完全相同，但是如果这对您来说是一个重要的细节，请记住它实际上不是相同的代码，并且有一些限制（和优点）。</target>
        </trans-unit>
        <trans-unit id="474abb6d64d8a72edd8e851e9c969391e9ceecf4" translate="yes" xml:space="preserve">
          <source>It frees the memory associated with the result and deletes the result resource ID. Normally PHP frees its memory automatically at the end of script execution. However, if you are running a lot of queries in a particular script you might want to free the result after each query result has been generated in order to cut down on memory consumption.</source>
          <target state="translated">它释放了与结果相关的内存,并删除了结果的资源ID。通常PHP会在脚本执行结束时自动释放内存。但是,如果在一个特定的脚本中运行了大量的查询,可能希望在每次查询结果生成后释放结果,以减少内存消耗。</target>
        </trans-unit>
        <trans-unit id="18829039bd1a2dba3f52e920a13753dcb367c2e4" translate="yes" xml:space="preserve">
          <source>It gets better - the localization can fall all the way back to English, in case new messages are added to the framework and you haven&amp;rsquo;t had a chance to translate them yet for your locale.</source>
          <target state="translated">它会变得更好-如果将新消息添加到框架中，并且您还没有机会针对您的语言环境进行翻译，则本地化可以一直追溯到英语。</target>
        </trans-unit>
        <trans-unit id="8ee6d29acd7a4685234ead7c80ff73f0ca8b06f0" translate="yes" xml:space="preserve">
          <source>It goes without saying that you should guard your key carefully. Should someone gain access to your key, the data will be easily decoded. If your server is not totally under your control it&amp;rsquo;s impossible to ensure key security so you may want to think carefully before using it for anything that requires high security, like storing credit card numbers.</source>
          <target state="translated">不用说，您应该小心保护自己的钥匙。如果有人可以访问您的密钥，则数据将很容易解码。如果您的服务器不受您的完全控制，则无法确保密钥的安全性，因此，在将其用于需要高度安全性的任何事物（例如存储信用卡号）之前，您可能需要仔细考虑。</target>
        </trans-unit>
        <trans-unit id="16d5473c4a5a30e2758515a42a84d2c7b08ff216" translate="yes" xml:space="preserve">
          <source>It goes without saying that you should guard your key carefully. Should someone gain access to your key, the data will be easily decrypted. If your server is not totally under your control it&amp;rsquo;s impossible to ensure key security so you may want to think carefully before using it for anything that requires high security, like storing credit card numbers.</source>
          <target state="translated">不用说，您应该小心保护自己的钥匙。如果有人可以访问您的密钥，则数据将很容易解密。如果您的服务器不受您的完全控制，则无法确保密钥的安全性，因此，在将其用于需要高度安全性的任何事物（例如存储信用卡号）之前，您可能需要仔细考虑。</target>
        </trans-unit>
        <trans-unit id="06ffce343ea9c2c702b2bd8baedfe1ca2c50e24d" translate="yes" xml:space="preserve">
          <source>It helps avoid having to write code like this:</source>
          <target state="translated">这有助于避免写这样的代码。</target>
        </trans-unit>
        <trans-unit id="cb7f9eceedc3b8cee9280424bc4f94cd2adbc727" translate="yes" xml:space="preserve">
          <source>It is &lt;em&gt;critical&lt;/em&gt; that you handle passwords in your application properly.</source>
          <target state="translated">这是&lt;em&gt;至关重要的&lt;/em&gt;，你在你的应用程序处理的密码正确。</target>
        </trans-unit>
        <trans-unit id="a082d159d2331d41c9998a6ccc19b72815eeff48" translate="yes" xml:space="preserve">
          <source>It is a good practice to always provide the URI during testing to avoid surprises.</source>
          <target state="translated">在测试过程中始终提供URI是一个很好的做法,以避免出现意外。</target>
        </trans-unit>
        <trans-unit id="f53c68f3b8ab5ffc9af4b08ea4fe18e93ced8c25" translate="yes" xml:space="preserve">
          <source>It is also implemented in a way that aims to match the standard implementations in other programming languages and libraries.</source>
          <target state="translated">它的实现方式也旨在与其他编程语言和库的标准实现相匹配。</target>
        </trans-unit>
        <trans-unit id="1899efb1540d963d4e4d35cb07d9e711d01f4bd1" translate="yes" xml:space="preserve">
          <source>It is also possible to use a URI segment for the page number, instead of the page query parameter, as described in the previous section. Specify the segment number to use as the fifth parameter to &lt;code&gt;makeLinks()&lt;/code&gt;.</source>
          <target state="translated">也可以使用URI段作为页码，而不是如上一节所述的页查询参数。指定要用作 &lt;code&gt;makeLinks()&lt;/code&gt; 的第五个参数的段号。</target>
        </trans-unit>
        <trans-unit id="9991e35812a37542c385a2817787a57173fb9932" translate="yes" xml:space="preserve">
          <source>It is also possible to use a URI segment for the page number, instead of the page query parameter. Simply specify the segment number to use as the fourth argument. URIs generated by the pager would then look like &lt;em&gt;https://domain.tld/model/[pageNumber]&lt;/em&gt; instead of &lt;em&gt;https://domain.tld/model?page=[pageNumber]&lt;/em&gt;.</source>
          <target state="translated">也可以使用URI段作为页码，而不是页面查询参数。只需指定要用作第四个参数的段号即可。然后，由寻呼机生成的URI看起来像&lt;em&gt;https：//domain.tld/model/ [pageNumber]&lt;/em&gt;而不是&lt;em&gt;https：//domain.tld/model？page = [pageNumber]&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="ea2e3708999e93e89b12fccfb73c41c1aff16065" translate="yes" xml:space="preserve">
          <source>It is important to be aware that the library pattern for Next and Previous is different from what is used in the traditional way of paging results.</source>
          <target state="translated">需要注意的是,&quot;下一个 &quot;和 &quot;上一个 &quot;的库模式与传统的分页结果方式不同。</target>
        </trans-unit>
        <trans-unit id="5a7729359eb8976bfaac6dc2e3971badc8583f8f" translate="yes" xml:space="preserve">
          <source>It is not needed, since the presentation can be handled with a conventional controller - it is a convenience. Its usage is similar to the resource routing:</source>
          <target state="translated">它是不需要的,因为表现形式可以用传统的控制器来处理--这是一种方便。它的用法与资源路由类似。</target>
        </trans-unit>
        <trans-unit id="77ce1dcad69d58eb6bb60378f7f6fb9e07a5b445" translate="yes" xml:space="preserve">
          <source>It is possible that logging still will not happen for exceptions if your current Log settings are not set up to log &lt;strong&gt;critical&lt;/strong&gt; errors, which all exceptions are logged as.</source>
          <target state="translated">如果您当前的日志设置未设置为记录&lt;strong&gt;严重&lt;/strong&gt;错误（所有异常都记录为该错误），则对于异常仍然无法进行日志记录。</target>
        </trans-unit>
        <trans-unit id="d1f9ac5822073c6527bcddcac665eecd2c9b3094" translate="yes" xml:space="preserve">
          <source>It is possible to move your application directory to a different location on your server than your web root. To do so open your main index.php and set a &lt;em&gt;full server path&lt;/em&gt; in the &lt;code&gt;$application_folder&lt;/code&gt; variable:</source>
          <target state="translated">可以将应用程序目录移动到服务器上与Web根目录不同的位置。为此，请打开主index.php并在 &lt;code&gt;$application_folder&lt;/code&gt; 变量中设置&lt;em&gt;完整的服务器路径&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="c9a0f83681248575775d833047fd21746adb5d1b" translate="yes" xml:space="preserve">
          <source>It is possible to set a website to not protect even inline scripts and styles on its own pages, since this might have been the result of user-generated content. To protect against this, CSP allows you to specify a nonce within the &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tags, and to add those values to the response&amp;rsquo;s header. This is a pain to handle in real life, and is most secure when generated on the fly. To make this simple, you can include a &lt;code&gt;{csp-style-nonce}&lt;/code&gt; or &lt;code&gt;{csp-script-nonce}&lt;/code&gt; placeholder in the tag and it will be handled for you automatically:</source>
          <target state="translated">可以将网站设置为甚至不保护其自身页面上的内联脚本和样式，因为这可能是用户生成内容的结果。为了防止这种情况，CSP允许您在 &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt; 和 &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; 标记内指定一个随机数，并将这些值添加到响应的标头中。这在现实生活中很难处理，并且在动态生成时最安全。为简单 &lt;code&gt;{csp-style-nonce}&lt;/code&gt; ，您可以在标记中包含{csp-style-nonce}或 &lt;code&gt;{csp-script-nonce}&lt;/code&gt; 占位符，它将自动为您处理：</target>
        </trans-unit>
        <trans-unit id="ce500d664c9f465e625769c26ba553fceb4b0040" translate="yes" xml:space="preserve">
          <source>It is possible to use HTTP verbs (request method) to define your routing rules. This is particularly useful when building RESTFUL applications. You can use any standard HTTP verb (GET, POST, PUT, DELETE, etc). Each verb has its own method you can use:</source>
          <target state="translated">可以使用HTTP动词(请求方法)来定义你的路由规则。这在构建RESTFUL应用程序时特别有用。你可以使用任何标准的HTTP动词(GET、POST、PUT、DELETE等)。每个动词都有自己的方法,你可以使用。</target>
        </trans-unit>
        <trans-unit id="424278221c20d5a0b7e5d3a7a1519cf3041a3318" translate="yes" xml:space="preserve">
          <source>It is possible to use HTTP verbs (request method) to define your routing rules. This is particularly useful when building RESTful applications. You can use standard HTTP verbs (GET, PUT, POST, DELETE, PATCH) or a custom one such (e.g. PURGE). HTTP verb rules are case-insensitive. All you need to do is to add the verb as an array key to your route. Example:</source>
          <target state="translated">可以使用HTTP动词(请求方法)来定义你的路由规则。这在构建RESTful应用程序时特别有用。你可以使用标准的HTTP动词(GET、PUT、POST、DELETE、PATCH)或自定义的动词(如PURGE)。HTTP动词规则是不区分大小写的。你需要做的就是将动词作为一个数组键添加到你的路由中。例如</target>
        </trans-unit>
        <trans-unit id="e209da0180d202ad4bd504f83081f6b11002a4a9" translate="yes" xml:space="preserve">
          <source>It is possible to use the library in this way, without setting an &lt;em&gt;encryption_key&lt;/em&gt; in your configuration file.</source>
          <target state="translated">可以以这种方式使用该库，而无需在配置文件中设置&lt;em&gt;加密密钥&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="ca2026956fe3a75f5ca03349a32bc3b531bbd4b7" translate="yes" xml:space="preserve">
          <source>It is publicly available due to its otherwise general purpose. It is described in &lt;a href=&quot;https://tools.ietf.org/rfc/rfc5869.txt&quot;&gt;RFC 5869&lt;/a&gt;.</source>
          <target state="translated">由于其一般用途，它是公开可用的。在&lt;a href=&quot;https://tools.ietf.org/rfc/rfc5869.txt&quot;&gt;RFC 5869中进行了&lt;/a&gt;描述。</target>
        </trans-unit>
        <trans-unit id="91ee1f5bb1f2c0af57a94f01c916b3ff2e972328" translate="yes" xml:space="preserve">
          <source>It is recommended to only create services within controllers. Other files, like models and libraries should have the dependencies either passed into the constructor or through a setter method.</source>
          <target state="translated">建议只在控制器内创建服务。其他文件,如模型和库,应该将依赖关系传递到构造函数或通过setter方法。</target>
        </trans-unit>
        <trans-unit id="5a5853d761ba5d1d4b99bdc0140376c89e8e7b42" translate="yes" xml:space="preserve">
          <source>It is useful if you want to check for the availability of functions such as &lt;code&gt;eval()&lt;/code&gt; and &lt;code&gt;exec()&lt;/code&gt;, which are dangerous and might be disabled on servers with highly restrictive security policies.</source>
          <target state="translated">如果要检查 &lt;code&gt;eval()&lt;/code&gt; 和 &lt;code&gt;exec()&lt;/code&gt; 之类的功能的可用性，这些功能很危险，并且在具有严格限制的安全策略的服务器上可能会被禁用，这很有用。</target>
        </trans-unit>
        <trans-unit id="466ae5ac051d11dff63eb5c1baff6089a49a777e" translate="yes" xml:space="preserve">
          <source>It is useful in preventing Cross Site Scripting (XSS).</source>
          <target state="translated">它对防止跨站点脚本(XSS)很有用。</target>
        </trans-unit>
        <trans-unit id="83077494b1e9c5b1a9d328e3081d5700e74206d2" translate="yes" xml:space="preserve">
          <source>It must be noted that to ensure maximum security, such key &lt;em&gt;should&lt;/em&gt; not only be as strong as possible, but also often changed. Such behavior however is rarely practical or possible to implement, and that is why CodeIgniter gives you the ability to configure a single key that is to be used (almost) every time.</source>
          <target state="translated">必须指出的是，以确保最大的安全性，比如关键&lt;em&gt;应该&lt;/em&gt;不仅是尽可能强，而且还经常变化。但是，这种行为几乎是不实际的或不可能实现的，这就是为什么CodeIgniter使您能够配置（几乎）每次都要使用的单个密钥。</target>
        </trans-unit>
        <trans-unit id="18dab8acb5d37c271840ed5a7e65c99d8fb29e62" translate="yes" xml:space="preserve">
          <source>It must extend &lt;code&gt;CodeIgniter\Config\BaseService&lt;/code&gt;</source>
          <target state="translated">它必须扩展 &lt;code&gt;CodeIgniter\Config\BaseService&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e02c70dce90df70656c234aabbc56d3d20422909" translate="yes" xml:space="preserve">
          <source>It pre-processes global input data for security.</source>
          <target state="translated">它对全局输入数据进行安全预处理。</target>
        </trans-unit>
        <trans-unit id="4589fdacf6d3b296030dfaf5705f17239dc3e97e" translate="yes" xml:space="preserve">
          <source>It provides some helper methods for fetching input data and pre-processing it.</source>
          <target state="translated">它提供了一些获取输入数据和预处理数据的辅助方法。</target>
        </trans-unit>
        <trans-unit id="13f043c368bb29d7a757bdd5e9888a2cf3b5a67f" translate="yes" xml:space="preserve">
          <source>It returns whatever the database drivers&amp;rsquo; &amp;ldquo;execute&amp;rdquo; function returns. That typically is TRUE/FALSE on success or failure for write type queries such as INSERT, DELETE or UPDATE statements (which is what it really should be used for) and a resource/object on success for queries with fetchable results.</source>
          <target state="translated">它返回数据库驱动程序的&amp;ldquo; execute&amp;rdquo;函数返回的内容。对于诸如INSERT，DELETE或UPDATE语句之类的写类型查询（这实际上应用于此操作），成功或失败通常为TRUE / FALSE，而对于可获取结果的查询而言，成功则为资源/对象。</target>
        </trans-unit>
        <trans-unit id="35b7780d3d3c40727ea31310d0854608a335ff11" translate="yes" xml:space="preserve">
          <source>It should be noted that flashdata variables are regular session variables, managed inside the CodeIgniter session handler.</source>
          <target state="translated">需要注意的是,flashdata变量是常规的会话变量,在CodeIgniter会话处理程序中管理。</target>
        </trans-unit>
        <trans-unit id="e16ee7aab2f904d2beab08e0a007ac9d5a544b7c" translate="yes" xml:space="preserve">
          <source>It should be noted that flashdata variables are regular session vars, only marked in a specific way under the &amp;lsquo;__ci_vars&amp;rsquo; key (please don&amp;rsquo;t touch that one, you&amp;rsquo;ve been warned).</source>
          <target state="translated">应当注意，flashdata变量是常规会话变量，仅以特定方式在&amp;ldquo; __ci_vars&amp;rdquo;键下标记（请注意，请勿触摸该变量）。</target>
        </trans-unit>
        <trans-unit id="724798158ce043b7a9e5a997670f70913caac2c1" translate="yes" xml:space="preserve">
          <source>It uses a form helper to create the form opening. Technically, this isn&amp;rsquo;t necessary. You could create the form using standard HTML. However, the benefit of using the helper is that it generates the action URL for you, based on the URL in your config file. This makes your application more portable in the event your URLs change.</source>
          <target state="translated">它使用一个表单助手来创建表单开口。从技术上讲，这不是必需的。您可以使用标准HTML创建表单。但是，使用帮助程序的好处是，它基于配置文件中的URL为您生成操作URL。如果您的URL发生更改，这使您的应用程序更易于移植。</target>
        </trans-unit>
        <trans-unit id="c0380cf74129b0f2f2320763e4f1346519d79484" translate="yes" xml:space="preserve">
          <source>It will also return the session ID by calling &lt;code&gt;session_id()&lt;/code&gt; if you try to access &lt;code&gt;$this-&amp;gt;session-&amp;gt;session_id&lt;/code&gt;.</source>
          <target state="translated">如果您尝试访问 &lt;code&gt;$this-&amp;gt;session-&amp;gt;session_id&lt;/code&gt; ，它将通过调用 &lt;code&gt;session_id()&lt;/code&gt; 返回会话ID 。</target>
        </trans-unit>
        <trans-unit id="e8c10efb9fc24611bb86cc63521358717cee07c8" translate="yes" xml:space="preserve">
          <source>It won&amp;rsquo;t affect to the &lt;code&gt;show_404()&lt;/code&gt; function, which will continue loading the default &lt;em&gt;error_404.php&lt;/em&gt; file at &lt;em&gt;application/views/errors/error_404.php&lt;/em&gt;.</source>
          <target state="translated">它不会影响 &lt;code&gt;show_404()&lt;/code&gt; 函数，该函数将继续在&lt;em&gt;application / views / errors / error_404.php&lt;/em&gt;处加载默认的&lt;em&gt;error_404.php&lt;/em&gt;文件。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6bb0e98c0e4d57375e0d4f0f8f5f74d7b3f1918b" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s a good practice to use a common prefix for all messages in a given file to avoid collisions with similarly named items in other files. For example, if you are creating error messages you might prefix them with error_</source>
          <target state="translated">最好对给定文件中的所有消息使用通用前缀，以避免与其他文件中名称相似的项目发生冲突。例如，如果要创建错误消息，则可以在它们前面加上error_</target>
        </trans-unit>
        <trans-unit id="a43b31509f7d6d07f8998d9fa85bde41f1d9d437" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s a very good security practice to escape your data before submitting it into your database. CodeIgniter has three methods that help you do this:</source>
          <target state="translated">在将数据提交到数据库之前，先对其进行转义是非常好的安全措施。CodeIgniter有三种方法可以帮助您执行此操作：</target>
        </trans-unit>
        <trans-unit id="fc1901451b2199b19993dff7361665a39e57fd85" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s good practice to use a common prefix for all messages in a given file to avoid collisions with similarly named items in other files. For example, if you are creating error messages you might prefix them with error_</source>
          <target state="translated">优良作法是对给定文件中的所有消息使用通用前缀，以避免与其他文件中名称相似的项目发生冲突。例如，如果要创建错误消息，则可以在它们前面加上error_</target>
        </trans-unit>
        <trans-unit id="03691f328e0073329d8d231ccb3ba57fa3807d00" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s important for you to know that the encoded messages the encryption function generates will be approximately 2.6 times longer than the original message. For example, if you encrypt the string &amp;ldquo;my super secret data&amp;rdquo;, which is 21 characters in length, you&amp;rsquo;ll end up with an encoded string that is roughly 55 characters (we say &amp;ldquo;roughly&amp;rdquo; because the encoded string length increments in 64 bit clusters, so it&amp;rsquo;s not exactly linear). Keep this information in mind when selecting your data storage mechanism. Cookies, for example, can only hold 4K of information.</source>
          <target state="translated">重要的是要知道加密功能生成的编码消息将比原始消息长约2.6倍。例如，如果您对长度为21个字符的字符串&amp;ldquo; my super secret data&amp;rdquo;进行加密，则最终将得到一个大约55个字符的编码字符串（我们之所以说&amp;ldquo;大致&amp;rdquo;，是因为编码后的字符串长度增加了64个字符）位簇，因此不是完全线性的）。选择数据存储机制时，请记住此信息。例如，Cookie只能保存4K信息。</target>
        </trans-unit>
        <trans-unit id="d6641c0023d871e2551971a2584af112af5fc537" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s important for you to understand that once initialized, the Session class runs automatically. There is nothing you need to do to cause the above behavior to happen. You can, as you&amp;rsquo;ll see below, work with session data, but the process of reading, writing, and updating a session is automatic.</source>
          <target state="translated">重要的是要您了解，一旦初始化，Session类就会自动运行。您无需执行任何操作即可导致上述现象发生。如下所述，您可以使用会话数据，但是读取，写入和更新会话的过程是自动的。</target>
        </trans-unit>
        <trans-unit id="ea7bae69dbedcd51469afcc25cfa8fc1e1037d63" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s preferable, though, to pass the request in as a dependency if the class is anything other than the controller, where you can save it as a class property:</source>
          <target state="translated">但是，如果类不是控制器，则最好将请求作为依赖项传递给您，您可以在其中将其另存为类属性：</target>
        </trans-unit>
        <trans-unit id="0b5e4f23b885bc15d872f08d6c91b7892c6bc18a" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s probably important for you to know that an encrypted string is usually longer than the original, plain-text string (depending on the cipher).</source>
          <target state="translated">对于您而言，重要的是要知道加密的字符串通常比原始的纯文本字符串长（取决于密码）。</target>
        </trans-unit>
        <trans-unit id="ecdda59aea5ee67d7d854c969ccf7f4f4b4a4c54" translate="yes" xml:space="preserve">
          <source>Item</source>
          <target state="translated">Item</target>
        </trans-unit>
        <trans-unit id="8c1d6beff1ccc3599bacbca736bd55108dd8cfb8" translate="yes" xml:space="preserve">
          <source>Item value or FALSE if not found</source>
          <target state="translated">项目价值,如果没有找到,则为FALSE</target>
        </trans-unit>
        <trans-unit id="3168545c521a827cdaf7a7ffdd0ce202a2f325ca" translate="yes" xml:space="preserve">
          <source>Item value or NULL if not found</source>
          <target state="translated">项目价值,如果没有找到,则为NULL</target>
        </trans-unit>
        <trans-unit id="0b145c351b873b4d2ede694b334d3b69df9fedf5" translate="yes" xml:space="preserve">
          <source>Its namespace must be defined in &lt;code&gt;Config\Autoload.php&lt;/code&gt;</source>
          <target state="translated">必须在 &lt;code&gt;Config\Autoload.php&lt;/code&gt; 定义其名称空间</target>
        </trans-unit>
        <trans-unit id="09837d7ec7e563f0c20bd47465b2ce80ece21d27" translate="yes" xml:space="preserve">
          <source>JSONFormatter #1918</source>
          <target state="translated">JSONFormatter #1918</target>
        </trans-unit>
        <trans-unit id="1ca76be7b84d714e17e61b65c84bec4810f63dd5" translate="yes" xml:space="preserve">
          <source>Javascript</source>
          <target state="translated">Javascript</target>
        </trans-unit>
        <trans-unit id="d8e89e187b69b05993a962b0a0b48b2220a55edc" translate="yes" xml:space="preserve">
          <source>Javascript Class</source>
          <target state="translated">Javascript类</target>
        </trans-unit>
        <trans-unit id="483b1191fe93d2b6bd5a0e46521f9146b7672214" translate="yes" xml:space="preserve">
          <source>Just as with any other variable, unsetting a value in &lt;code&gt;$_SESSION&lt;/code&gt; can be done through &lt;code&gt;unset()&lt;/code&gt;:</source>
          <target state="translated">与其他任何变量一样，可以通过 &lt;code&gt;unset()&lt;/code&gt; 取消设置 &lt;code&gt;$_SESSION&lt;/code&gt; 的值：</target>
        </trans-unit>
        <trans-unit id="ce6038f3595789827c6ee9adeb78e04d8f111a88" translate="yes" xml:space="preserve">
          <source>Just as with the &amp;lsquo;FileHandler&amp;rsquo; and &amp;lsquo;DatabaseHandler&amp;rsquo; drivers, you must also configure the storage location for your sessions via the &lt;code&gt;$sessionSavePath&lt;/code&gt; setting. The format here is a bit different and complicated at the same time. It is best explained by the &lt;em&gt;phpredis&lt;/em&gt; extension&amp;rsquo;s README file, so we&amp;rsquo;ll simply link you to it:</source>
          <target state="translated">与&amp;ldquo; FileHandler&amp;rdquo;和&amp;ldquo; DatabaseHandler&amp;rdquo;驱动程序一样，您还必须通过 &lt;code&gt;$sessionSavePath&lt;/code&gt; 设置配置会话的存储位置。此处的格式有些不同，同时又很复杂。最好用&lt;em&gt;phpredis&lt;/em&gt;扩展的README文件来解释，所以我们将简单地链接到它：</target>
        </trans-unit>
        <trans-unit id="7d2a7abfdb52d3ec01b83e7a4950a183477877ac" translate="yes" xml:space="preserve">
          <source>Just as with the &amp;lsquo;files&amp;rsquo; and &amp;lsquo;database&amp;rsquo; drivers, you must also configure the storage location for your sessions via the &lt;code&gt;$config['sess_save_path']&lt;/code&gt; setting. The format here is a bit different and complicated at the same time. It is best explained by the &lt;em&gt;phpredis&lt;/em&gt; extension&amp;rsquo;s README file, so we&amp;rsquo;ll simply link you to it:</source>
          <target state="translated">与&amp;ldquo;文件&amp;rdquo;和&amp;ldquo;数据库&amp;rdquo;驱动程序一样，您还必须通过 &lt;code&gt;$config['sess_save_path']&lt;/code&gt; 设置配置会话的存储位置。此处的格式有些不同，同时又很复杂。最好用&lt;em&gt;phpredis&lt;/em&gt;扩展的README文件来解释，所以我们将简单地链接到它：</target>
        </trans-unit>
        <trans-unit id="2491e6bde0e91af60a09f7ea1fd9815f8a3bdea9" translate="yes" xml:space="preserve">
          <source>Just as with the other methods (resizing, cropping, and rotating) the general process for watermarking involves setting the preferences corresponding to the action you intend to perform, then calling the watermark function. Here is an example:</source>
          <target state="translated">正如其他方法(调整大小、裁剪和旋转)一样,水印的一般过程包括设置与您打算执行的操作相对应的首选项,然后调用水印函数。下面是一个例子。</target>
        </trans-unit>
        <trans-unit id="96ed68d775470cf8442b50eb6292a884ce6d02c0" translate="yes" xml:space="preserve">
          <source>Keep / reestablish the database connection if no queries have been sent for a length of time exceeding the server&amp;rsquo;s idle timeout.</source>
          <target state="translated">如果在超过服务器空闲超时的时间内未发送查询，则保持/重新建立数据库连接。</target>
        </trans-unit>
        <trans-unit id="25e5fbc071e8d065a46d0006c8fd2db32aad0921" translate="yes" xml:space="preserve">
          <source>Keep this information in mind when selecting your data storage mechanism. Cookies, for example, can only hold 4K of information.</source>
          <target state="translated">在选择数据存储机制时,请记住这些信息。例如,Cookies只能保存4K的信息。</target>
        </trans-unit>
        <trans-unit id="c67dd20ee842986086a0a915ddc2a279490130ed" translate="yes" xml:space="preserve">
          <source>Key</source>
          <target state="translated">Key</target>
        </trans-unit>
        <trans-unit id="ebf4d367be08cbb6c85e8815b4d4db37ec0899bd" translate="yes" xml:space="preserve">
          <source>Key lengths (bits / bytes)</source>
          <target state="translated">密钥长度(位/字节)</target>
        </trans-unit>
        <trans-unit id="cacccf2d59fc572cf2493081d5294cce68f00088" translate="yes" xml:space="preserve">
          <source>Kint was updated from the 2.x branch to the latest 3.x branch, with new config file to specify options</source>
          <target state="translated">Kint从2.x分支更新到了最新的3.x分支,增加了新的配置文件来指定选项。</target>
        </trans-unit>
        <trans-unit id="89b86ab0e66f527166d98df92ddbcf5416ed58f6" translate="yes" xml:space="preserve">
          <source>Language</source>
          <target state="translated">Language</target>
        </trans-unit>
        <trans-unit id="2ee6c0eebfc9b48a2e05fc3e65cc2d7d8c226d33" translate="yes" xml:space="preserve">
          <source>Language #1480, #1489</source>
          <target state="translated">语言#1480、#1489</target>
        </trans-unit>
        <trans-unit id="a0bf559a0c572c713974d5e5bd48984750433689" translate="yes" xml:space="preserve">
          <source>Language #1587, #1562, #1610</source>
          <target state="translated">语言 #1587,#1562,#1610</target>
        </trans-unit>
        <trans-unit id="08090548ebb33b6177e31edb60cf8d8151c59d61" translate="yes" xml:space="preserve">
          <source>Language #1641</source>
          <target state="translated">语言#1641</target>
        </trans-unit>
        <trans-unit id="a5b62ae8fa715e3de396d77474ea916aef8a842e" translate="yes" xml:space="preserve">
          <source>Language Class</source>
          <target state="translated">语言类</target>
        </trans-unit>
        <trans-unit id="a10cab33e5a3907293f3774bf75e57016709aa84" translate="yes" xml:space="preserve">
          <source>Language Fallback</source>
          <target state="translated">语言回退</target>
        </trans-unit>
        <trans-unit id="fcd410f7a7be1aa00daa512a04ead06a000c5055" translate="yes" xml:space="preserve">
          <source>Language Files</source>
          <target state="translated">语言文件</target>
        </trans-unit>
        <trans-unit id="bb1cf7364dda164e2dfd6089c6047b35b9f52fd6" translate="yes" xml:space="preserve">
          <source>Language Helper</source>
          <target state="translated">语言助手</target>
        </trans-unit>
        <trans-unit id="2e43ed39efae3f83f92745827d327d968159b271" translate="yes" xml:space="preserve">
          <source>Language Localization</source>
          <target state="translated">语言本地化</target>
        </trans-unit>
        <trans-unit id="8bfed6a52e6e888d2b329dc153e98dc3ac2233a2" translate="yes" xml:space="preserve">
          <source>Language files also allow nested arrays to make working with lists, etc&amp;hellip; easier.</source>
          <target state="translated">语言文件还允许嵌套数组使列表等的使用更加容易。</target>
        </trans-unit>
        <trans-unit id="5b1a59bd699c65094a2724a0bd222f07a72c37f1" translate="yes" xml:space="preserve">
          <source>Language files are located automatically from defined namespaces when using the &lt;code&gt;lang()&lt;/code&gt; method, as long as the file follows the same directory structures as the main application directory.</source>
          <target state="translated">使用 &lt;code&gt;lang()&lt;/code&gt; 方法时，语言文件会从定义的名称空间中自动定位，只要该文件遵循与主应用程序目录相同的目录结构即可。</target>
        </trans-unit>
        <trans-unit id="4fbff0545707d2b5f2b2f3e3bd53b2075605f96b" translate="yes" xml:space="preserve">
          <source>Language files found in the &lt;em&gt;system/language/&lt;/em&gt; directory</source>
          <target state="translated">在&lt;em&gt;system / language /&lt;/em&gt;目录中找到的语言文件</target>
        </trans-unit>
        <trans-unit id="acc95e18045cff08f47333ad958ef4c18e29aaf2" translate="yes" xml:space="preserve">
          <source>Language files must be named with &lt;strong&gt;_lang.php&lt;/strong&gt; as the filename extension. For example, let&amp;rsquo;s say you want to create a file containing error messages. You might name it: error_lang.php</source>
          <target state="translated">语言文件必须以&lt;strong&gt;_lang.php&lt;/strong&gt;作为文件扩展名来命名。例如，假设您要创建一个包含错误消息的文件。您可能会命名为：error_lang.php</target>
        </trans-unit>
        <trans-unit id="591efee3567dce0d82d348da2ecabd6f21a97837" translate="yes" xml:space="preserve">
          <source>Language line string or FALSE on failure</source>
          <target state="translated">语言行字符串或失败时为FALSE</target>
        </trans-unit>
        <trans-unit id="bc4c49b39cfaf5d6564a02c36ee154f605118b85" translate="yes" xml:space="preserve">
          <source>Language strings are stored in the &lt;strong&gt;app/Language&lt;/strong&gt; directory, with a sub-directory for each supported language:</source>
          <target state="translated">语言字符串存储在&lt;strong&gt;app / Language&lt;/strong&gt;目录中，每种支持的语言都有一个子目录：</target>
        </trans-unit>
        <trans-unit id="66a97ff134d1139d278050c024d40ad1a7033df1" translate="yes" xml:space="preserve">
          <source>Language/</source>
          <target state="translated">Language/</target>
        </trans-unit>
        <trans-unit id="b472a567f74316c4c21abc43962a496471b8a999" translate="yes" xml:space="preserve">
          <source>Language/en/</source>
          <target state="translated">Language/en/</target>
        </trans-unit>
        <trans-unit id="0a371afc433d02fa877ac93d31c8aa429ae85293" translate="yes" xml:space="preserve">
          <source>LanguageTest #1480</source>
          <target state="translated">语言测试#1480</target>
        </trans-unit>
        <trans-unit id="c9dc56e80140b9eff6e7b786d36a11602d681b30" translate="yes" xml:space="preserve">
          <source>LanguageTest #1643</source>
          <target state="translated">语言测试#1643</target>
        </trans-unit>
        <trans-unit id="257ee2d99a78320226aed3d20b23cd0e446ce15f" translate="yes" xml:space="preserve">
          <source>Languages do not have any specific naming convention that are required. The file should be named logically to describe the type of content it holds. For example, let&amp;rsquo;s say you want to create a file containing error messages. You might name it simply: &lt;strong&gt;Errors.php&lt;/strong&gt;.</source>
          <target state="translated">语言没有必需的任何特定命名约定。该文件应在逻辑上进行命名，以描述其保存的内容的类型。例如，假设您要创建一个包含错误消息的文件。您可能会简单地命名为：&lt;strong&gt;Errors.php&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="6572fe248b6eb70dde5981d1e6bbed47c6e542a3" translate="yes" xml:space="preserve">
          <source>Large library of &amp;ldquo;helper&amp;rdquo; functions</source>
          <target state="translated">大型的&amp;ldquo;助手&amp;rdquo;功能库</target>
        </trans-unit>
        <trans-unit id="a53a26713f5b65c27d32180a2b90689e50783f18" translate="yes" xml:space="preserve">
          <source>Last row of result set, or NULL if it doesn&amp;rsquo;t exist</source>
          <target state="translated">结果集的最后一行；如果不存在，则为NULL</target>
        </trans-unit>
        <trans-unit id="4f2480315af1082d7e8ab7c4781ea98d73e1c2ab" translate="yes" xml:space="preserve">
          <source>Lastly, if a corresponding value is not found for a given key (if there is an odd number of URI segments) the value will be set to NULL.</source>
          <target state="translated">最后,如果给定的键没有找到对应的值(如果有奇数的URI段),该值将被设置为NULL。</target>
        </trans-unit>
        <trans-unit id="5b528541f967aec08cd8d757391014ee961cadbf" translate="yes" xml:space="preserve">
          <source>Lastly, we need to point out that the result object that is cached is a simplified version of the full result object. For that reason, some of the query result functions are not available for use.</source>
          <target state="translated">最后,我们需要指出的是,被缓存的结果对象是完整结果对象的简化版本。为此,一些查询结果函数无法使用。</target>
        </trans-unit>
        <trans-unit id="6424651b91b0ba29ae7231afdba0dcb85705c766" translate="yes" xml:space="preserve">
          <source>Latest Dev</source>
          <target state="translated">最新开发</target>
        </trans-unit>
        <trans-unit id="1436c4a4b9c247c25d7e99520360835f787eb004" translate="yes" xml:space="preserve">
          <source>Layouts are views like any other. The only difference is their intended usage. Layouts are the only view files that would make use of the &lt;code&gt;renderSection()&lt;/code&gt; method. This method acts as a placeholder for content.</source>
          <target state="translated">布局是与其他视图一样的视图。唯一的区别是它们的预期用途。布局是唯一使用 &lt;code&gt;renderSection()&lt;/code&gt; 方法的视图文件。此方法充当内容的占位符。</target>
        </trans-unit>
        <trans-unit id="9122e8f764c11ef4cbd77eb75bbd654d2ac96ec0" translate="yes" xml:space="preserve">
          <source>Legacy Support</source>
          <target state="translated">遗产支持</target>
        </trans-unit>
        <trans-unit id="a5fec139b3235a16f5f31a77356272ac3b5f46b7" translate="yes" xml:space="preserve">
          <source>Less than and greater than characters: &amp;lt; &amp;gt;</source>
          <target state="translated">小于和大于字符：&amp;lt;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="85504d45cecefb4fa086aef8cc2808bc7c2501e1" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s continue with preparing the record that is going to be inserted later, inside the &lt;code&gt;$data&lt;/code&gt; array. Each element corresponds with a column in the database table created earlier. You might notice a new method here, namely the &lt;code&gt;post()&lt;/code&gt; method from the &lt;a href=&quot;../libraries/input&quot;&gt;input library&lt;/a&gt;. This method makes sure the data is sanitized, protecting you from nasty attacks from others. The input library is loaded by default. At last, you insert our &lt;code&gt;$data&lt;/code&gt; array into our database.</source>
          <target state="translated">让我们继续准备将在 &lt;code&gt;$data&lt;/code&gt; 数组内插入的记录。每个元素对应于先前创建的数据库表中的一列。您可能会在这里注意到一个新方法，即&lt;a href=&quot;../libraries/input&quot;&gt;输入库中&lt;/a&gt;的 &lt;code&gt;post()&lt;/code&gt; 方法。此方法可确保清除数据，从而保护您免受他人的恶意攻击。输入库默认情况下已加载。最后，将我们的 &lt;code&gt;$data&lt;/code&gt; 数组插入数据库。</target>
        </trans-unit>
        <trans-unit id="379685906f34e3e7864afe840de42f146dad655a" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s create a simple controller so you can see it in action. Using your text editor, create a file called Blog.php, and put the following code in it:</source>
          <target state="translated">让我们创建一个简单的控制器，以便您可以实际看到它。使用您的文本编辑器，创建一个名为Blog.php的文件，并将以下代码放入其中：</target>
        </trans-unit>
        <trans-unit id="7262f3fd8e028f6db4052be4f634ade90a943ead" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s create a simple controller so you can see it in action. Using your text editor, create a file called Helloworld.php, and put the following code in it:</source>
          <target state="translated">让我们创建一个简单的控制器，以便您可以实际看到它。使用您的文本编辑器，创建一个名为Helloworld.php的文件，并将以下代码放入其中：</target>
        </trans-unit>
        <trans-unit id="0f0fbbd501f34c77584f2fb69349ad1203f4d1b7" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s create a simple controller so you can see it in action. Using your text editor, create a file called Tools.php, and put the following code in it:</source>
          <target state="translated">让我们创建一个简单的控制器，以便您可以实际看到它。使用您的文本编辑器，创建一个名为Tools.php的文件，并将以下代码放入其中：</target>
        </trans-unit>
        <trans-unit id="e0d3a54efcb476862d2d3c98c67be13ed20eea9a" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s create those three things, using a member sign-up form as the example.</source>
          <target state="translated">让我们以成员注册表单为例创建这三件事。</target>
        </trans-unit>
        <trans-unit id="1bc1fced79469db43c5452dc032b1feff2a91766" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s do that. Open the routing file located at &lt;em&gt;application/config/routes.php&lt;/em&gt; and add the following two lines. Remove all other code that sets any element in the &lt;code&gt;$route&lt;/code&gt; array.</source>
          <target state="translated">来做吧。打开位于&lt;em&gt;application / config / routes.php&lt;/em&gt;的路由文件，并添加以下两行。删除所有其他设置 &lt;code&gt;$route&lt;/code&gt; 数组中任何元素的代码。</target>
        </trans-unit>
        <trans-unit id="3f85f201ae32c08f94b053794a1f7dcdbcc72e22" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s do that. Open the routing file located at &lt;strong&gt;app/Config/Routes.php&lt;/strong&gt; and look for the &amp;ldquo;Route Definitions&amp;rdquo; section of the configuration file.</source>
          <target state="translated">来做吧。打开位于&lt;strong&gt;app / Config / Routes.php&lt;/strong&gt;的路由文件，然后在配置文件中查找&amp;ldquo;路由定义&amp;rdquo;部分。</target>
        </trans-unit>
        <trans-unit id="2564e2c489c0d44fb79805161f4a945efde74020" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s make our first controller</source>
          <target state="translated">让我们做第一个控制器</target>
        </trans-unit>
        <trans-unit id="ea71b2b6277059358ba84785d284893e83af2fa4" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s say a particular user logs into your site. Once authenticated, you could add their username and e-mail address to the session, making that data globally available to you without having to run a database query when you need it.</source>
          <target state="translated">假设某个特定用户登录到您的网站。身份验证后，您可以将其用户名和电子邮件地址添加到会话中，从而使您可以全局使用该数据，而不必在需要时运行数据库查询。</target>
        </trans-unit>
        <trans-unit id="d829656a9bbed35a8e3d1acb7a9531a028e0a481" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s say that a third-party script was trying to hit a URL repeatedly. At first, it would be able to use all 60 of those tokens in less than a second. However, after that the Throttler would only allow one action per second, potentially slowing down the requests enough that they attack is no longer worth it.</source>
          <target state="translated">假设某个第三方脚本试图重复访问URL。最初，它可以在不到一秒钟的时间内使用所有60个令牌。但是，在那之后，Throttler每秒只允许执行一次操作，因此有可能减慢请求的速度，以至于攻击不再值得。</target>
        </trans-unit>
        <trans-unit id="4ba04439c58cef2d4fbe005e364b881d315c55fa" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s say we want an action to happen once every second. The first call to the Throttler would look like the following. The first parameter is the bucket name, the second parameter the number of tokens the bucket holds, and the third being the amount of time it takes the bucket to refill:</source>
          <target state="translated">假设我们希望某动作每秒发生一次。对Throttler的第一次呼叫将如下所示。第一个参数是存储桶名称，第二个参数是存储桶持有的令牌数量，第三个参数是存储桶重新填充所需的时间：</target>
        </trans-unit>
        <trans-unit id="949a4c40802c4c9b2cf281703285a9b61d5f1c40" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s say you have to interact with another system that is out of your control and uses another method to encrypt data. A method that will most certainly not match the above-described sequence and probably not use all of the steps either.</source>
          <target state="translated">假设您必须与无法控制的另一个系统进行交互，并使用另一种方法来加密数据。最肯定不会与上述序列匹配并且可能也不使用所有步骤的方法。</target>
        </trans-unit>
        <trans-unit id="057f1bcb662b4fa48d267604a2845ac8fd684011" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s step through an example command whose only function is to report basic information about the application itself, for demonstration purposes. Start by creating a new file at &lt;strong&gt;/app/Commands/AppInfo.php&lt;/strong&gt;. It should contain the following code:</source>
          <target state="translated">让我们看一个示例命令，该命令的唯一功能是报告有关应用程序本身的基本信息，以进行演示。首先从&lt;strong&gt;/app/Commands/AppInfo.php&lt;/strong&gt;创建一个新文件。它应包含以下代码：</target>
        </trans-unit>
        <trans-unit id="425e6758407742378ec4d4e681b0c3e9612c5e4b" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s take a closer look at each of these three main components.</source>
          <target state="translated">让我们仔细看看这三个主要组成部分。</target>
        </trans-unit>
        <trans-unit id="f13c54589690f17b20c425e1b8cea7187b866239" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s try it with your controller file. Open it add this code:</source>
          <target state="translated">让我们用您的控制器文件尝试一下。打开它，添加以下代码：</target>
        </trans-unit>
        <trans-unit id="b69c689724f51dda55fe175e5e84c12f366a0670" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s try it with your controller file. Open it and add this code:</source>
          <target state="translated">让我们用您的控制器文件尝试一下。打开它并添加以下代码：</target>
        </trans-unit>
        <trans-unit id="91431572c804983ba5c12bb84ab6e09d88a03978" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s try it. Add a new method to your controller:</source>
          <target state="translated">让我们尝试一下。向您的控制器添加新方法：</target>
        </trans-unit>
        <trans-unit id="98854c1031b30b0e41990830dc088d9ccf54ddf4" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s try it: Hello World!</source>
          <target state="translated">让我们尝试一下：Hello World！</target>
        </trans-unit>
        <trans-unit id="136afde6efba39fba60c63ef5db809bd68322bac" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s walk through a very simple User Entity and how we&amp;rsquo;d work with it to help make things clear.</source>
          <target state="translated">让我们来看一个非常简单的用户实体，以及如何使用它来使事情变得清晰。</target>
        </trans-unit>
        <trans-unit id="1e23ab5b4393e6fe2aa38a3e481873c66bd2550c" translate="yes" xml:space="preserve">
          <source>Lets you clear the table heading and row data. If you need to show multiple tables with different data you should to call this method after each table has been generated to clear the previous table information. Example:</source>
          <target state="translated">让你清除表的标题和行数据。如果你需要用不同的数据显示多个表,你应该在每个表生成后调用这个方法来清除之前的表信息。例子:如果你需要显示多个不同数据的表格,你应该在每个表格生成后调用这个方法来清除之前的表格信息。</target>
        </trans-unit>
        <trans-unit id="4da12ee05657b9ba03a6fc01aef31d30bd1cea73" translate="yes" xml:space="preserve">
          <source>Lets you clear the table heading, row data and caption. If you need to show multiple tables with different data you should to call this method after each table has been generated to clear the previous table information.</source>
          <target state="translated">让你清除表格的标题、行数据和标题。如果你需要用不同的数据显示多个表格,你应该在每个表格生成后调用这个方法来清除之前的表格信息。</target>
        </trans-unit>
        <trans-unit id="8ebb0b9488b88a67c1033f6a7aabba4698876551" translate="yes" xml:space="preserve">
          <source>Lets you create HTML &amp;lt;embed /&amp;gt; tags. The first parameter contains the embed source. Example:</source>
          <target state="translated">使您可以创建HTML &amp;lt;embed /&amp;gt;标记。第一个参数包含嵌入源。例：</target>
        </trans-unit>
        <trans-unit id="0b0bfceceefa12e281006205c2bcc8cf5761ded2" translate="yes" xml:space="preserve">
          <source>Lets you create HTML &amp;lt;img /&amp;gt; tags. The first parameter contains the image source. Example:</source>
          <target state="translated">使您可以创建HTML &amp;lt;img /&amp;gt;标记。第一个参数包含图像源。例：</target>
        </trans-unit>
        <trans-unit id="8ec5149f82b8a3e6c930552da9f38a13b388f3e8" translate="yes" xml:space="preserve">
          <source>Lets you create HTML &amp;lt;link /&amp;gt; tags. This is useful for stylesheet links, as well as other links. The parameters are &lt;em&gt;href&lt;/em&gt;, with optional &lt;em&gt;rel&lt;/em&gt;, &lt;em&gt;type&lt;/em&gt;, &lt;em&gt;title&lt;/em&gt;, &lt;em&gt;media&lt;/em&gt; and &lt;em&gt;indexPage&lt;/em&gt;.</source>
          <target state="translated">使您可以创建HTML &amp;lt;link /&amp;gt;标记。这对于样式表链接以及其他链接很有用。参数是&lt;em&gt;href&lt;/em&gt;，具有可选的&lt;em&gt;rel&lt;/em&gt;，&lt;em&gt;type&lt;/em&gt;，&lt;em&gt;title&lt;/em&gt;，&lt;em&gt;media&lt;/em&gt;和&lt;em&gt;indexPage&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="2660ddaa0db6493c34040bf4aa235bfb048fca4c" translate="yes" xml:space="preserve">
          <source>Lets you create HTML &amp;lt;link /&amp;gt; tags. This is useful for stylesheet links, as well as other links. The parameters are &lt;em&gt;href&lt;/em&gt;, with optional &lt;em&gt;rel&lt;/em&gt;, &lt;em&gt;type&lt;/em&gt;, &lt;em&gt;title&lt;/em&gt;, &lt;em&gt;media&lt;/em&gt; and &lt;em&gt;index_page&lt;/em&gt;.</source>
          <target state="translated">使您可以创建HTML &amp;lt;link /&amp;gt;标记。这对于样式表链接以及其他链接很有用。参数是&lt;em&gt;href&lt;/em&gt;，带有可选的&lt;em&gt;rel&lt;/em&gt;，&lt;em&gt;type&lt;/em&gt;，&lt;em&gt;title&lt;/em&gt;，&lt;em&gt;media&lt;/em&gt;和&lt;em&gt;index_page&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="13d970752d33fe98f2dc98593a8fc808c6edd33e" translate="yes" xml:space="preserve">
          <source>Lets you create HTML &amp;lt;object /&amp;gt; tags. The first parameter contains the object data. Example:</source>
          <target state="translated">用于创建HTML &amp;lt;object /&amp;gt;标记。第一个参数包含对象数据。例：</target>
        </trans-unit>
        <trans-unit id="198715110af2f9062ec3e839ded6eeeeb0bcccea" translate="yes" xml:space="preserve">
          <source>Lets you create HTML &amp;lt;param /&amp;gt; tags. The first parameter contains the param source. Example:</source>
          <target state="translated">使您可以创建HTML &amp;lt;param /&amp;gt;标记。第一个参数包含参数源。例：</target>
        </trans-unit>
        <trans-unit id="fd0451fcacf3f3488ec98d6b535ed23412268566" translate="yes" xml:space="preserve">
          <source>Lets you create HTML &amp;lt;script&amp;gt;&amp;lt;/script&amp;gt; tags. The parameters is &lt;em&gt;src&lt;/em&gt;, with optional &lt;em&gt;indexPage&lt;/em&gt;.</source>
          <target state="translated">使您可以创建HTML &amp;lt;script&amp;gt; &amp;lt;/ script&amp;gt;标记。参数为&lt;em&gt;src&lt;/em&gt;，带有可选的&lt;em&gt;indexPage&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="24be98e0622c5c2cec0c37e666c4a7570cf25053" translate="yes" xml:space="preserve">
          <source>Lets you create HTML &amp;lt;source /&amp;gt; tags. The first parameter contains the source source. Example:</source>
          <target state="translated">使您可以创建HTML &amp;lt;source /&amp;gt;标记。第一个参数包含源源。例：</target>
        </trans-unit>
        <trans-unit id="1b7d4d7707bdb8cf59912a95f17787edb6d7dcab" translate="yes" xml:space="preserve">
          <source>Lets you create HTML heading tags. The first parameter will contain the data, the second the size of the heading. Example:</source>
          <target state="translated">让您可以创建HTML标题标签,第一个参数是数据,第二个参数是标题的大小。第一个参数将包含数据,第二个参数是标题的大小。例如</target>
        </trans-unit>
        <trans-unit id="f9bd80889297aa81c099eb19694e2f80392ba3f0" translate="yes" xml:space="preserve">
          <source>Lets you create a directory on your server. Supply the path ending in the folder name you wish to create, with a trailing slash.</source>
          <target state="translated">让你在服务器上创建一个目录。提供以你想创建的文件夹名称结尾的路径,并在后面加上斜杠。</target>
        </trans-unit>
        <trans-unit id="17e87de1b02132110e205241335e11721119f97e" translate="yes" xml:space="preserve">
          <source>Lets you create a standard drop-down field. The first parameter will contain the name of the field, the second parameter will contain an associative array of options, and the third parameter will contain the value you wish to be selected. You can also pass an array of multiple items through the third parameter, and CodeIgniter will create a multiple select for you.</source>
          <target state="translated">让您创建一个标准的下拉字段。第一个参数将包含字段的名称,第二个参数将包含一个关联的选项数组,第三个参数将包含你希望被选择的值,你也可以通过第三个参数传递一个多项目数组,CodeIgniter将为你创建一个多重选择。你也可以通过第三个参数传递一个多个项目的数组,CodeIgniter将为你创建一个多重选择。</target>
        </trans-unit>
        <trans-unit id="a8dc0bffe8e1750fc80a5e0fd2929c210f6976a8" translate="yes" xml:space="preserve">
          <source>Lets you create a standard drop-down field. The first parameter will contain the name of the field, the second parameter will contain an associative array of options, and the third parameter will contain the value you wish to be selected. You can also pass an array of multiple items through the third parameter, and the helper will create a multiple select for you.</source>
          <target state="translated">让您创建一个标准的下拉字段。第一个参数将包含字段的名称,第二个参数将包含一个关联的选项数组,第三个参数将包含你希望被选择的值。你也可以通过第三个参数传递一个多项目的数组,帮助程序将为你创建一个多重选择。</target>
        </trans-unit>
        <trans-unit id="610c9f7ae46b2b883c1f9e3815c71f305540df01" translate="yes" xml:space="preserve">
          <source>Lets you create a standard multiselect field. The first parameter will contain the name of the field, the second parameter will contain an associative array of options, and the third parameter will contain the value or values you wish to be selected.</source>
          <target state="translated">让你创建一个标准的多选字段。第一个参数将包含字段的名称,第二个参数将包含一个关联的选项数组,第三个参数将包含你想选择的值。</target>
        </trans-unit>
        <trans-unit id="8aa1a1e76883ea3726ff481a6a782b70bec2c76b" translate="yes" xml:space="preserve">
          <source>Lets you delete a cookie. Unless you&amp;rsquo;ve set a custom path or other values, only the name of the cookie is needed.</source>
          <target state="translated">用于删除Cookie。除非您设置了自定义路径或其他值，否则仅需要Cookie的名称。</target>
        </trans-unit>
        <trans-unit id="803dde3593220383f6c805baf0dfb33da0084cb0" translate="yes" xml:space="preserve">
          <source>Lets you delete a directory and everything it contains. Supply the source path to the directory with a trailing slash.</source>
          <target state="translated">让你删除一个目录和它所包含的一切。提供目录的源路径,后面加斜杠。</target>
        </trans-unit>
        <trans-unit id="bb886ea3c258c117185e1bea42cf4ae0f881368c" translate="yes" xml:space="preserve">
          <source>Lets you delete a file. Supply the source path with the file name.</source>
          <target state="translated">让您删除文件。提供带有文件名的源路径。</target>
        </trans-unit>
        <trans-unit id="c945d9f0f5989982c0977686f78906be0baba978" translate="yes" xml:space="preserve">
          <source>Lets you determine if the user agent accepts a particular character set. Example:</source>
          <target state="translated">让您确定用户代理是否接受特定的字符集。例子:</target>
        </trans-unit>
        <trans-unit id="52fa36fe5833bb360df9cbebac5727f077527450" translate="yes" xml:space="preserve">
          <source>Lets you determine if the user agent accepts a particular language. Example:</source>
          <target state="translated">让您确定用户代理是否接受特定的语言。例子:</target>
        </trans-unit>
        <trans-unit id="f1573efb96215afa9cb2cebe44137222a851a391" translate="yes" xml:space="preserve">
          <source>Lets you fetch a number of items from an array. The function tests whether each of the array indices is set. If an index does not exist it is set to NULL, or whatever you&amp;rsquo;ve specified as the default value via the third parameter.</source>
          <target state="translated">使您可以从数组中获取许多项目。该函数测试是否设置了每个数组索引。如果不存在索引，则将其设置为NULL或通过第三个参数指定为默认值的任何值。</target>
        </trans-unit>
        <trans-unit id="4660bec13c30c98eacd6e4366ca498ee63caed42" translate="yes" xml:space="preserve">
          <source>Lets you fetch an item from an array. The function tests whether the array index is set and whether it has a value. If a value exists it is returned. If a value does not exist it returns NULL, or whatever you&amp;rsquo;ve specified as the default value via the third parameter.</source>
          <target state="translated">让您从数组中获取项目。该函数测试是否设置了数组索引以及它是否具有值。如果存在值，则将其返回。如果值不存在，则返回NULL，或者您通过第三个参数指定为默认值的任何值。</target>
        </trans-unit>
        <trans-unit id="075aae449a5a8b7fad41139c0b27d0cac85f63f9" translate="yes" xml:space="preserve">
          <source>Lets you generate a &amp;lt;label&amp;gt;. Simple example:</source>
          <target state="translated">使您生成&amp;lt;label&amp;gt;。简单的例子：</target>
        </trans-unit>
        <trans-unit id="44f2bbad8758a3202773b6cb2eb35557413779da" translate="yes" xml:space="preserve">
          <source>Lets you generate a checkbox field. Simple example:</source>
          <target state="translated">让你生成一个复选框字段。简单的例子。</target>
        </trans-unit>
        <trans-unit id="db238792e698627ead3f40d4336fac2325c77ae8" translate="yes" xml:space="preserve">
          <source>Lets you generate a date string in one of several standardized formats.</source>
          <target state="translated">让你以几种标准格式之一生成一个日期字符串。</target>
        </trans-unit>
        <trans-unit id="2416e5ec9e5e05a90be1395e849c2366a2a2169b" translate="yes" xml:space="preserve">
          <source>Lets you generate a standard button element. You can minimally pass the button name and content in the first and second parameter:</source>
          <target state="translated">让你生成一个标准的按钮元素。你可以在第一个和第二个参数中最小化地传递按钮名称和内容。</target>
        </trans-unit>
        <trans-unit id="8eeee9bc3ac6a950df194f18fbc81253ee793fe8" translate="yes" xml:space="preserve">
          <source>Lets you generate a standard reset button. Use is identical to &lt;code&gt;form_submit()&lt;/code&gt;.</source>
          <target state="translated">使您可以生成标准的重置按钮。使用方法与 &lt;code&gt;form_submit()&lt;/code&gt; 相同。</target>
        </trans-unit>
        <trans-unit id="62b06e846360c659c96c7720ac294d6d077bcdbf" translate="yes" xml:space="preserve">
          <source>Lets you generate a standard submit button. Simple example:</source>
          <target state="translated">让你生成一个标准的提交按钮。简单的例子。</target>
        </trans-unit>
        <trans-unit id="d71d30e69ee2c53e70c93469c0a9437d08385dee" translate="yes" xml:space="preserve">
          <source>Lets you generate a standard text input field. You can minimally pass the field name and value in the first and second parameter:</source>
          <target state="translated">让你生成一个标准的文本输入字段。你可以在第一个和第二个参数中最小限度地传递字段名和值。</target>
        </trans-unit>
        <trans-unit id="c78bdbf8524fd7718973b3a885ac89ad653453a7" translate="yes" xml:space="preserve">
          <source>Lets you generate fieldset/legend fields.</source>
          <target state="translated">让你生成字段集/图例字段。</target>
        </trans-unit>
        <trans-unit id="c86ceb69af8d99fecf74e35036a3a965029c1071" translate="yes" xml:space="preserve">
          <source>Lets you generate hidden input fields. You can either submit a name/value string to create one field:</source>
          <target state="translated">让你生成隐藏的输入字段。你可以提交一个名称/值字符串来创建一个字段。</target>
        </trans-unit>
        <trans-unit id="a2e2a2c907fb7dd3b8224a6ccdf64260c66d5813" translate="yes" xml:space="preserve">
          <source>Lets you limit the number of rows you would like returned by the query:</source>
          <target state="translated">让你限制你希望查询返回的行数。</target>
        </trans-unit>
        <trans-unit id="b71ca6e12e10e9ad89c60f5ac826b75944d9327c" translate="yes" xml:space="preserve">
          <source>Lets you move a file. Supply the source and destination paths:</source>
          <target state="translated">让你移动文件。提供源和目标路径。</target>
        </trans-unit>
        <trans-unit id="4df2206e297cdbec80854756b325535a4efd4149" translate="yes" xml:space="preserve">
          <source>Lets you retrieve the transaction status flag to determine if it has failed.</source>
          <target state="translated">让你检索交易状态标志,以确定它是否已经失败。</target>
        </trans-unit>
        <trans-unit id="90168ad37f66c3c2e99df0136c3650fc89e9ef96" translate="yes" xml:space="preserve">
          <source>Lets you set a default value for use in any table cells that are empty. You might, for example, set a non-breaking space:</source>
          <target state="translated">让您可以设置一个默认值,用于任何为空的表格单元格。例如,您可以设置一个不间断的空格。</target>
        </trans-unit>
        <trans-unit id="30be926d329d9213a8bc43a7c20b5916f2d0b498" translate="yes" xml:space="preserve">
          <source>Lets you set an ORDER BY clause.</source>
          <target state="translated">让你设置一个ORDER BY子句。</target>
        </trans-unit>
        <trans-unit id="7c7f5d049fad2569721d446c4a811f9bd5da5393" translate="yes" xml:space="preserve">
          <source>Level</source>
          <target state="translated">Level</target>
        </trans-unit>
        <trans-unit id="742bf954fec5a42a84c13456f12a8473dbbda677" translate="yes" xml:space="preserve">
          <source>Level can be one of the following values: &lt;strong&gt;emergency&lt;/strong&gt;, &lt;strong&gt;alert&lt;/strong&gt;, &lt;strong&gt;critical&lt;/strong&gt;, &lt;strong&gt;error&lt;/strong&gt;, &lt;strong&gt;warning&lt;/strong&gt;, &lt;strong&gt;notice&lt;/strong&gt;, &lt;strong&gt;info&lt;/strong&gt;, or &lt;strong&gt;debug&lt;/strong&gt;.</source>
          <target state="translated">级别可以是以下值之一：&lt;strong&gt;紧急&lt;/strong&gt;，&lt;strong&gt;警报&lt;/strong&gt;，&lt;strong&gt;严重&lt;/strong&gt;，&lt;strong&gt;错误&lt;/strong&gt;，&lt;strong&gt;警告&lt;/strong&gt;，&lt;strong&gt;注意&lt;/strong&gt;，&lt;strong&gt;信息&lt;/strong&gt;或&lt;strong&gt;调试&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="27c968e6692b41bf6e1a241b870dc41ff1a51b17" translate="yes" xml:space="preserve">
          <source>Libraries</source>
          <target state="translated">Libraries</target>
        </trans-unit>
        <trans-unit id="add0f98c92eaf797a6f7ae0402fa983e7d3b6e40" translate="yes" xml:space="preserve">
          <source>Libraries &amp;amp; Helpers</source>
          <target state="translated">图书馆和助手</target>
        </trans-unit>
        <trans-unit id="29d4125c1485c486a2c92097d8d44a9bffc3bc0f" translate="yes" xml:space="preserve">
          <source>Libraries are always instantiated by their fully-qualified class name, so no special access is provided:</source>
          <target state="translated">库总是通过其全限定的类名来实例化,所以不提供特殊的访问。</target>
        </trans-unit>
        <trans-unit id="b8100f5ba8bd048a7cf11d116fbbd73130c3c6f5" translate="yes" xml:space="preserve">
          <source>Library</source>
          <target state="translated">Library</target>
        </trans-unit>
        <trans-unit id="ef55040e6a354daf7a9fc8b7ad6813967db2d32c" translate="yes" xml:space="preserve">
          <source>Library Reference</source>
          <target state="translated">图书馆参考资料</target>
        </trans-unit>
        <trans-unit id="a1f6de5b230d0c0bea0a7426dc7c43ffc676998e" translate="yes" xml:space="preserve">
          <source>Library files can be stored in subdirectories within the main &amp;ldquo;libraries&amp;rdquo; directory, or within your personal &lt;em&gt;application/libraries&lt;/em&gt; directory. To load a file located in a subdirectory, simply include the path, relative to the &amp;ldquo;libraries&amp;rdquo; directory. For example, if you have file located at:</source>
          <target state="translated">库文件可以存储在主&amp;ldquo;库&amp;rdquo;目录内的子目录中，也可以存储在您的个人&lt;em&gt;application / libraries&lt;/em&gt;目录中。要加载位于子目录中的文件，只需添加相对于&amp;ldquo;库&amp;rdquo;目录的路径即可。例如，如果您的文件位于：</target>
        </trans-unit>
        <trans-unit id="2ee6c21c22e29b247c3b51ef8cc5e42e6e2df68a" translate="yes" xml:space="preserve">
          <source>License Agreement</source>
          <target state="translated">许可协议</target>
        </trans-unit>
        <trans-unit id="58fd3b1b83cc7fc933d72fe934bdb6e534441281" translate="yes" xml:space="preserve">
          <source>Licensed under the MIT License.</source>
          <target state="translated">根据麻省理工学院许可证授权。</target>
        </trans-unit>
        <trans-unit id="cfa53e20ace93eda5eb19e74fbfcce82635df043" translate="yes" xml:space="preserve">
          <source>Like &lt;strong&gt;createFromDate&lt;/strong&gt; except it is only concerned with the &lt;strong&gt;hours&lt;/strong&gt;, &lt;strong&gt;minutes&lt;/strong&gt;, and &lt;strong&gt;seconds&lt;/strong&gt;. Uses the current day for the date portion of the Time instance. Accepts strings for the timezone and locale in the fourth and fifth parameters:</source>
          <target state="translated">与&lt;strong&gt;createFromDate相似，&lt;/strong&gt;只不过它与&lt;strong&gt;小时&lt;/strong&gt;，&lt;strong&gt;分钟&lt;/strong&gt;和&lt;strong&gt;秒有关&lt;/strong&gt;。使用当前日期作为Time实例的日期部分。在第四个和第五个参数中接受时区和语言环境的字符串：</target>
        </trans-unit>
        <trans-unit id="4950f4d20b533669f1605e588bd64b63319d9448" translate="yes" xml:space="preserve">
          <source>Like all services in CodeIgniter, it can be loaded via &lt;code&gt;Config\Services&lt;/code&gt;, though you usually will not need to load it manually:</source>
          <target state="translated">像CodeIgniter中的所有服务一样，可以通过 &lt;code&gt;Config\Services&lt;/code&gt; 加载它，尽管通常不需要手动加载它：</target>
        </trans-unit>
        <trans-unit id="3e669fbd3e79f9e8af01107d57857f8168d470f8" translate="yes" xml:space="preserve">
          <source>Like all services in CodeIgniter, it can be loaded via &lt;code&gt;Config\Services&lt;/code&gt;:</source>
          <target state="translated">像CodeIgniter中的所有服务一样，可以通过 &lt;code&gt;Config\Services&lt;/code&gt; 加载它：</target>
        </trans-unit>
        <trans-unit id="5d0b2fa5a6d39f703fcaaac402ba806d49b3a250" translate="yes" xml:space="preserve">
          <source>Like most other classes in CodeIgniter, the Calendar class is initialized in your controller using the $this-&amp;gt;load-&amp;gt;library function:</source>
          <target state="translated">与CodeIgniter中的大多数其他类一样，Calendar类使用$ this-&amp;gt; load-&amp;gt; library函数在控制器中初始化：</target>
        </trans-unit>
        <trans-unit id="f4a0239e8c4cf6eae8f4141f89134de784db1d58" translate="yes" xml:space="preserve">
          <source>Like most other classes in CodeIgniter, the Encrypt class is initialized in your controller using the &lt;code&gt;$this-&amp;gt;load-&amp;gt;library()&lt;/code&gt; method:</source>
          <target state="translated">与CodeIgniter中的大多数其他类一样，Encrypt类在您的控制器中使用 &lt;code&gt;$this-&amp;gt;load-&amp;gt;library()&lt;/code&gt; 方法初始化：</target>
        </trans-unit>
        <trans-unit id="e15c78db8ba15347661d8ba11aaca193f9eec997" translate="yes" xml:space="preserve">
          <source>Like most other classes in CodeIgniter, the Encryption library is initialized in your controller using the &lt;code&gt;$this-&amp;gt;load-&amp;gt;library()&lt;/code&gt; method:</source>
          <target state="translated">与CodeIgniter中的大多数其他类一样，加密库是使用 &lt;code&gt;$this-&amp;gt;load-&amp;gt;library()&lt;/code&gt; 方法在您的控制器中初始化的：</target>
        </trans-unit>
        <trans-unit id="236e101993f620e372e5686fe72de06dc91cb8ee" translate="yes" xml:space="preserve">
          <source>Like most other classes in CodeIgniter, the FTP class is initialized in your controller using the $this-&amp;gt;load-&amp;gt;library function:</source>
          <target state="translated">与CodeIgniter中的大多数其他类一样，FTP类使用$ this-&amp;gt; load-&amp;gt; library函数在控制器中初始化：</target>
        </trans-unit>
        <trans-unit id="a8b090252d1a5bcb001f74d624c60f81a5b94ea1" translate="yes" xml:space="preserve">
          <source>Like most other classes in CodeIgniter, the Parser class is initialized in your controller using the &lt;code&gt;$this-&amp;gt;load-&amp;gt;library()&lt;/code&gt; method:</source>
          <target state="translated">与CodeIgniter中的大多数其他类一样，Parser类在您的控制器中使用 &lt;code&gt;$this-&amp;gt;load-&amp;gt;library()&lt;/code&gt; 方法初始化：</target>
        </trans-unit>
        <trans-unit id="85ffab8a9dfc091b6c5da70d81ac3394f278f769" translate="yes" xml:space="preserve">
          <source>Like most other classes in CodeIgniter, the Table class is initialized in your controller using the &lt;code&gt;$this-&amp;gt;load-&amp;gt;library()&lt;/code&gt; method:</source>
          <target state="translated">与CodeIgniter中的其他大多数类一样，Table类使用 &lt;code&gt;$this-&amp;gt;load-&amp;gt;library()&lt;/code&gt; 方法在控制器中初始化：</target>
        </trans-unit>
        <trans-unit id="343a172109962c22ef400353ac7345af1630ffdb" translate="yes" xml:space="preserve">
          <source>Like most other classes in CodeIgniter, the Trackback class is initialized in your controller using the &lt;code&gt;$this-&amp;gt;load-&amp;gt;library()&lt;/code&gt; method:</source>
          <target state="translated">与CodeIgniter中的大多数其他类一样，Trackback类在您的控制器中使用 &lt;code&gt;$this-&amp;gt;load-&amp;gt;library()&lt;/code&gt; 方法初始化：</target>
        </trans-unit>
        <trans-unit id="5f4faedb4ac5a8693ea2f607998761a8d74395a3" translate="yes" xml:space="preserve">
          <source>Like most other classes in CodeIgniter, the Typography class is initialized in your controller using the &lt;code&gt;$this-&amp;gt;load-&amp;gt;library()&lt;/code&gt; method:</source>
          <target state="translated">与CodeIgniter中的大多数其他类一样，Typography类使用 &lt;code&gt;$this-&amp;gt;load-&amp;gt;library()&lt;/code&gt; 方法在您的控制器中初始化：</target>
        </trans-unit>
        <trans-unit id="da46f2de302a25572c889b014b9196aec7d788d4" translate="yes" xml:space="preserve">
          <source>Like most other classes in CodeIgniter, the Unit Test class is initialized in your controller using the $this-&amp;gt;load-&amp;gt;library function:</source>
          <target state="translated">像CodeIgniter中的大多数其他类一样，使用$ this-&amp;gt; load-&amp;gt; library函数在您的控制器中初始化Unit Test类：</target>
        </trans-unit>
        <trans-unit id="6b460fb8245ae6c91591052bf1e4189c11cc0fb2" translate="yes" xml:space="preserve">
          <source>Like most other classes in CodeIgniter, the Upload class is initialized in your controller using the &lt;code&gt;$this-&amp;gt;load-&amp;gt;library()&lt;/code&gt; method:</source>
          <target state="translated">与CodeIgniter中的大多数其他类一样，Upload类在您的控制器中使用 &lt;code&gt;$this-&amp;gt;load-&amp;gt;library()&lt;/code&gt; 方法初始化：</target>
        </trans-unit>
        <trans-unit id="9dcffe0e9956ac447c90ef73a796dc571b5f2cc7" translate="yes" xml:space="preserve">
          <source>Like most other classes in CodeIgniter, the User Agent class is initialized in your controller using the $this-&amp;gt;load-&amp;gt;library function:</source>
          <target state="translated">像CodeIgniter中的大多数其他类一样，使用$ this-&amp;gt; load-&amp;gt; library函数在您的控制器中初始化User Agent类：</target>
        </trans-unit>
        <trans-unit id="1b7a66449003be7ba5624e3a1bab341fd86c8078" translate="yes" xml:space="preserve">
          <source>Like most other classes in CodeIgniter, the XML-RPC and XML-RPCS classes are initialized in your controller using the $this-&amp;gt;load-&amp;gt;library function:</source>
          <target state="translated">与CodeIgniter中的大多数其他类一样，XML-RPC和XML-RPCS类在您的控制器中使用$ this-&amp;gt; load-&amp;gt; library函数初始化：</target>
        </trans-unit>
        <trans-unit id="8ccb62fb42b6558029e67bbe265f637348c82924" translate="yes" xml:space="preserve">
          <source>Like most other classes in CodeIgniter, the Zip class is initialized in your controller using the $this-&amp;gt;load-&amp;gt;library function:</source>
          <target state="translated">与CodeIgniter中的其他大多数类一样，Zip类在您的控制器中使用$ this-&amp;gt; load-&amp;gt; library函数进行初始化：</target>
        </trans-unit>
        <trans-unit id="a04437d7abf0c240d9642f5d424c3ec488163cc8" translate="yes" xml:space="preserve">
          <source>Like most other classes in CodeIgniter, the image class is initialized in your controller by calling the Services class:</source>
          <target state="translated">像CodeIgniter中的其他类一样,图像类在控制器中通过调用服务类来初始化。</target>
        </trans-unit>
        <trans-unit id="0b8d7497c14528340351564b4c88b72c6b374099" translate="yes" xml:space="preserve">
          <source>Like most other classes in CodeIgniter, the image class is initialized in your controller using the $this-&amp;gt;load-&amp;gt;library function:</source>
          <target state="translated">像CodeIgniter中的大多数其他类一样，图像类使用$ this-&amp;gt; load-&amp;gt; library函数在控制器中初始化：</target>
        </trans-unit>
        <trans-unit id="8750227ed72ddbb768c48398bb3793a50932ad53" translate="yes" xml:space="preserve">
          <source>Like, &lt;code&gt;setRule()&lt;/code&gt;, but accepts an array of field names and their rules:</source>
          <target state="translated">类似于 &lt;code&gt;setRule()&lt;/code&gt; ，但是接受字段名称及其规则的数组：</target>
        </trans-unit>
        <trans-unit id="34d9146c00b0e7c8fb812afa9db23c69c93c3706" translate="yes" xml:space="preserve">
          <source>LikeTest #1640, #1677</source>
          <target state="translated">LikeTest #1640,#1677</target>
        </trans-unit>
        <trans-unit id="f06a78498d466986324969fc88ff4e1bdd101aa9" translate="yes" xml:space="preserve">
          <source>Limit the Routes Made</source>
          <target state="translated">限制路线</target>
        </trans-unit>
        <trans-unit id="64316088a75238f2352361ecca021aec1100993b" translate="yes" xml:space="preserve">
          <source>Limit to Hostname</source>
          <target state="translated">对主机名的限制</target>
        </trans-unit>
        <trans-unit id="6060ce02f626d7d7cf503af71e906a3114bd3ea8" translate="yes" xml:space="preserve">
          <source>Limit to Subdomains</source>
          <target state="translated">对子域的限制</target>
        </trans-unit>
        <trans-unit id="e12d22d458d76b0be69e5b7abfee40f7a61869ff" translate="yes" xml:space="preserve">
          <source>Limiting or Counting Results</source>
          <target state="translated">限制或计算结果</target>
        </trans-unit>
        <trans-unit id="ed45ff60dbec1a6789ad6a4521b0b073c1c8ac83" translate="yes" xml:space="preserve">
          <source>Limits the number of characters to $limit.</source>
          <target state="translated">限制字符数为$limit。</target>
        </trans-unit>
        <trans-unit id="a1e42d7995c5fa47856042fef1892f42d0e3cebc" translate="yes" xml:space="preserve">
          <source>Limits the number of words to $limit.</source>
          <target state="translated">将字数限制为$limit。</target>
        </trans-unit>
        <trans-unit id="f9461da311f713d36b1205166a42d4a0a8cc89ff" translate="yes" xml:space="preserve">
          <source>Limits the string based on the character count. Will preserve complete words.</source>
          <target state="translated">根据字符数限制字符串。将保留完整的单词。</target>
        </trans-unit>
        <trans-unit id="eed6cd74cd94bc6d5acf8fa6998df07318a8ca92" translate="yes" xml:space="preserve">
          <source>Line Breaks</source>
          <target state="translated">断线</target>
        </trans-unit>
        <trans-unit id="f5b04cdd83351a616c6d673cbf53e98d63cf8e3e" translate="yes" xml:space="preserve">
          <source>Line Number (line)</source>
          <target state="translated">线号(线)</target>
        </trans-unit>
        <trans-unit id="e4741361713309f30f2644c2cf2cf1daf45659e7" translate="yes" xml:space="preserve">
          <source>Linkified string</source>
          <target state="translated">链接字符串</target>
        </trans-unit>
        <trans-unit id="54cd0ba31bcbb11251ffe78535a559fa87813373" translate="yes" xml:space="preserve">
          <source>List the Fields in a Table</source>
          <target state="translated">列出表格中的字段</target>
        </trans-unit>
        <trans-unit id="5efcb9fe350d52e2db9c3e686fbabf8b35abc4a3" translate="yes" xml:space="preserve">
          <source>List the Indexes in a Table</source>
          <target state="translated">在表中列出索引</target>
        </trans-unit>
        <trans-unit id="6c17312dcba47bf03c2d81706d8a8b7a72b77507" translate="yes" xml:space="preserve">
          <source>List the Tables in Your Database</source>
          <target state="translated">列出您数据库中的表</target>
        </trans-unit>
        <trans-unit id="6e4abe45adb861335b433026f39b483f3cda3e21" translate="yes" xml:space="preserve">
          <source>Listing of all database queries executed, including execution time</source>
          <target state="translated">列出所有已执行的数据库查询,包括执行时间。</target>
        </trans-unit>
        <trans-unit id="36cde6a3ede686eb83bcefdf061bd4e003018187" translate="yes" xml:space="preserve">
          <source>Live/</source>
          <target state="translated">Live/</target>
        </trans-unit>
        <trans-unit id="8985cd5132eff5cd3bf16bf694804fdd12d6e178" translate="yes" xml:space="preserve">
          <source>Live/ModelTest #1311</source>
          <target state="translated">现场/模型测试#1311</target>
        </trans-unit>
        <trans-unit id="692188d3a7bd09af4abdaec4c668ad0a95580a01" translate="yes" xml:space="preserve">
          <source>Live/ModelTest #1602, #a0fc68</source>
          <target state="translated">Live/ModelTest #1602,#a0fc68</target>
        </trans-unit>
        <trans-unit id="525d1c45172ccc388087d01688a83c5c21878a6a" translate="yes" xml:space="preserve">
          <source>Live/ModelTest #1817, #1829, #1861</source>
          <target state="translated">Live/ModelTest #1817,#1829,#1861</target>
        </trans-unit>
        <trans-unit id="bcc0cee723256dbc0b223d41440fa3dce77ff689" translate="yes" xml:space="preserve">
          <source>Live/WhereTest #1906</source>
          <target state="translated">Live/WhereTest #1906</target>
        </trans-unit>
        <trans-unit id="a27c5421fe3bf96eeebb79b236052a791336721d" translate="yes" xml:space="preserve">
          <source>Load the Forge Class as follows:</source>
          <target state="translated">加载锻造类的方法如下。</target>
        </trans-unit>
        <trans-unit id="605563d5aa0e231b93adb64a823c6ce2374639ab" translate="yes" xml:space="preserve">
          <source>Load the Utility Class as follows:</source>
          <target state="translated">按如下方式加载实用类。</target>
        </trans-unit>
        <trans-unit id="8d4289d8ca6a689ab25f78f13decc606548739bd" translate="yes" xml:space="preserve">
          <source>Loaded CI_DB instance or FALSE on failure if $return is set to TRUE, otherwise CI_Loader instance (method chaining)</source>
          <target state="translated">如果$return设置为TRUE,则加载CI_DB实例或失败时为FALSE,否则为CI_Loader实例(方法链)。</target>
        </trans-unit>
        <trans-unit id="e81f14f45654f8cd397f7fb89e2e743fc4206f25" translate="yes" xml:space="preserve">
          <source>Loaded CI_DB_forge instance if $return is set to TRUE, otherwise CI_Loader instance (method chaining)</source>
          <target state="translated">如果$return设置为TRUE,则加载CI_DB_forge实例,否则加载CI_Loader实例(方法链)</target>
        </trans-unit>
        <trans-unit id="68e2a1c2d4fc9d6a5687803ce88342494f4f5944" translate="yes" xml:space="preserve">
          <source>Loaded CI_DB_utility instance if $return is set to TRUE, otherwise CI_Loader instance (method chaining)</source>
          <target state="translated">如果$return设置为TRUE,则加载CI_DB_utility实例,否则加载CI_Loader实例(方法链)</target>
        </trans-unit>
        <trans-unit id="ec6f9069daa80029e880d76fc3bf6a0698a7d554" translate="yes" xml:space="preserve">
          <source>Loader</source>
          <target state="translated">Loader</target>
        </trans-unit>
        <trans-unit id="2deaf19033acec193ce3ec263d1504ae35ea7cb7" translate="yes" xml:space="preserve">
          <source>Loader Class</source>
          <target state="translated">装载机类</target>
        </trans-unit>
        <trans-unit id="11f7e47d8a3f26e9ac1360870f5558aa936a75a1" translate="yes" xml:space="preserve">
          <source>Loader, as the name suggests, is used to load elements. These elements can be libraries (classes) &lt;a href=&quot;../general/views&quot;&gt;View files&lt;/a&gt;, &lt;a href=&quot;../general/drivers&quot;&gt;Drivers&lt;/a&gt;, &lt;a href=&quot;../general/helpers&quot;&gt;Helpers&lt;/a&gt;, &lt;a href=&quot;../general/models&quot;&gt;Models&lt;/a&gt;, or your own files.</source>
          <target state="translated">顾名思义，加载程序用于加载元素。这些元素可以是库（类），&lt;a href=&quot;../general/views&quot;&gt;视图文件&lt;/a&gt;，&lt;a href=&quot;../general/drivers&quot;&gt;驱动程序&lt;/a&gt;，&lt;a href=&quot;../general/helpers&quot;&gt;帮助&lt;/a&gt;程序，&lt;a href=&quot;../general/models&quot;&gt;模型&lt;/a&gt;或您自己的文件。</target>
        </trans-unit>
        <trans-unit id="2c02740debe56349e3d7ad6421d018524c63d82e" translate="yes" xml:space="preserve">
          <source>Loading A Language File</source>
          <target state="translated">加载语言文件</target>
        </trans-unit>
        <trans-unit id="a9d94adb751265412fa56f2146814c6311e7e180" translate="yes" xml:space="preserve">
          <source>Loading Fabricators</source>
          <target state="translated">装载加工厂</target>
        </trans-unit>
        <trans-unit id="2eb3efe38251352226e9efcc98bd853d1dd26ab6" translate="yes" xml:space="preserve">
          <source>Loading Multiple Helpers</source>
          <target state="translated">加载多个助手</target>
        </trans-unit>
        <trans-unit id="6f1c0b19d58b2f017f380e47ab3b3d42e2a7dc27" translate="yes" xml:space="preserve">
          <source>Loading Multiple Views</source>
          <target state="translated">加载多个视图</target>
        </trans-unit>
        <trans-unit id="d1ffd10ef8c487c39f98446b01187a717d636c46" translate="yes" xml:space="preserve">
          <source>Loading Your Sub-class</source>
          <target state="translated">加载您的子类</target>
        </trans-unit>
        <trans-unit id="bc925e92b7fd1c9cd79b26d5744c6d7591bffad8" translate="yes" xml:space="preserve">
          <source>Loading a Config File</source>
          <target state="translated">加载配置文件</target>
        </trans-unit>
        <trans-unit id="05921c48039bc10d973f656f6961b47ad34f4e9e" translate="yes" xml:space="preserve">
          <source>Loading a Helper</source>
          <target state="translated">加载一个助手</target>
        </trans-unit>
        <trans-unit id="57d23ecb39ef5c47089859f3c785f221f32618a1" translate="yes" xml:space="preserve">
          <source>Loading a Model</source>
          <target state="translated">加载模型</target>
        </trans-unit>
        <trans-unit id="d74ecfb0061a585ba0f5613c41c7fc89120c13fb" translate="yes" xml:space="preserve">
          <source>Loading a View</source>
          <target state="translated">加载一个视图</target>
        </trans-unit>
        <trans-unit id="c118f068e9710c178919d772cd32bc6b832db6cb" translate="yes" xml:space="preserve">
          <source>Loading a helper file is quite simple using the following method:</source>
          <target state="translated">使用以下方法加载辅助文件非常简单。</target>
        </trans-unit>
        <trans-unit id="3aab8a1d4f2b6a2ca97503ddbe974464d0173739" translate="yes" xml:space="preserve">
          <source>Loading from Non-standard Locations</source>
          <target state="translated">从非标准位置加载</target>
        </trans-unit>
        <trans-unit id="dfc3a31319824f7fe4080f082556087cad652e44" translate="yes" xml:space="preserve">
          <source>Loading multiple views</source>
          <target state="translated">加载多个视图</target>
        </trans-unit>
        <trans-unit id="c2e4ae2972a017619684d66e0d672b9566e25e93" translate="yes" xml:space="preserve">
          <source>Loading the Class</source>
          <target state="translated">加载类</target>
        </trans-unit>
        <trans-unit id="f0bf461f8d94c61907d56ddfb64ba322bd456848" translate="yes" xml:space="preserve">
          <source>Loading the Library</source>
          <target state="translated">加载图书馆</target>
        </trans-unit>
        <trans-unit id="7e58548316093bf3fa57a72ac4bf6301357c5a29" translate="yes" xml:space="preserve">
          <source>Loading the Query Builder</source>
          <target state="translated">加载查询生成器</target>
        </trans-unit>
        <trans-unit id="464b40043d27fcad36cb997f91a70581882d7fac" translate="yes" xml:space="preserve">
          <source>Loading this Helper</source>
          <target state="translated">加载此帮助程序</target>
        </trans-unit>
        <trans-unit id="64f4eb728b6871c37ada4d24a3c0f7898c84f543" translate="yes" xml:space="preserve">
          <source>Loads a configuration file.</source>
          <target state="translated">加载一个配置文件。</target>
        </trans-unit>
        <trans-unit id="5684ca47fb9d8afffdea7af826e84057aef1ae80" translate="yes" xml:space="preserve">
          <source>Loads a helper file.</source>
          <target state="translated">加载一个辅助文件。</target>
        </trans-unit>
        <trans-unit id="e67fd5f24139cedce864934078da2a52b79d9dc5" translate="yes" xml:space="preserve">
          <source>Loads a language file.</source>
          <target state="translated">加载一个语言文件。</target>
        </trans-unit>
        <trans-unit id="d079c51bff7f88b690b8c44e543a6105c7d1aeb9" translate="yes" xml:space="preserve">
          <source>Loads the &lt;a href=&quot;../database/forge&quot;&gt;Database Forge&lt;/a&gt; class, please refer to that manual for more info.</source>
          <target state="translated">加载&lt;a href=&quot;../database/forge&quot;&gt;Database Forge&lt;/a&gt;类，有关更多信息，请参考该手册。</target>
        </trans-unit>
        <trans-unit id="6f5c3800ce7e28fcbf2bcf5db1500dbff06cab79" translate="yes" xml:space="preserve">
          <source>Loads the &lt;a href=&quot;../database/utilities&quot;&gt;Database Utilities&lt;/a&gt; class, please refer to that manual for more info.</source>
          <target state="translated">加载&lt;a href=&quot;../database/utilities&quot;&gt;数据库实用程序&lt;/a&gt;类，有关更多信息，请参考该手册。</target>
        </trans-unit>
        <trans-unit id="af445b2b92bb3697ec701895b808fdb2d8e98359" translate="yes" xml:space="preserve">
          <source>Local Development Server</source>
          <target state="translated">本地开发服务器</target>
        </trans-unit>
        <trans-unit id="b1525e24b190e02e3b67412ecf0705f4a4a5dd60" translate="yes" xml:space="preserve">
          <source>Locale Detection</source>
          <target state="translated">区域检测</target>
        </trans-unit>
        <trans-unit id="1460776e44bf572450673be2f84d6cf702bc90e8" translate="yes" xml:space="preserve">
          <source>Locale detection only works for web-based requests that use the IncomingRequest class. Command-line requests will not have these features.</source>
          <target state="translated">本地化检测只适用于使用IncomingRequest类的基于Web的请求。命令行请求将不具备这些功能。</target>
        </trans-unit>
        <trans-unit id="b9fc941160f1b0396956bfd39853ec712bd8d1fb" translate="yes" xml:space="preserve">
          <source>Localization</source>
          <target state="translated">Localization</target>
        </trans-unit>
        <trans-unit id="5eaa6b4b315bdaa369a3a06c5527987ec1e89477" translate="yes" xml:space="preserve">
          <source>Localized Text</source>
          <target state="translated">本地化文本</target>
        </trans-unit>
        <trans-unit id="d219c68101f532de10add2cf42fb9dbeca73d3be" translate="yes" xml:space="preserve">
          <source>Location</source>
          <target state="translated">Location</target>
        </trans-unit>
        <trans-unit id="8a939d182d992114fef20f515cf479c3e42ce804" translate="yes" xml:space="preserve">
          <source>Locking is not the issue, it is a solution. Your issue is that you still have the session open, while you&amp;rsquo;ve already processed it and therefore no longer need it. So, what you need is to close the session for the current request after you no longer need it.</source>
          <target state="translated">锁定不是问题，而是解决方案。您的问题是，您已经打开了会话，但已经处理了该会话，因此不再需要它。因此，您需要的是在不再需要当前请求后关闭会话。</target>
        </trans-unit>
        <trans-unit id="8bf95ea372568c7a254ba9fada5f6f1701ebc5b5" translate="yes" xml:space="preserve">
          <source>Log</source>
          <target state="translated">Log</target>
        </trans-unit>
        <trans-unit id="632964cc0fa0273f3cc53510104d2256c93f1660" translate="yes" xml:space="preserve">
          <source>Log/</source>
          <target state="translated">Log/</target>
        </trans-unit>
        <trans-unit id="6dbed1767472a446558ec56e33365f03036b30e8" translate="yes" xml:space="preserve">
          <source>Logger #1562, #1579</source>
          <target state="translated">记录仪#1562、#1579</target>
        </trans-unit>
        <trans-unit id="243c4222a810c444cc56455fc05975d30c1375a2" translate="yes" xml:space="preserve">
          <source>Logger, LoggerAwareTrait</source>
          <target state="translated">Logger,LoggerAwareTrait</target>
        </trans-unit>
        <trans-unit id="7b0d668e20d7685135be206b196d2aa0130b903e" translate="yes" xml:space="preserve">
          <source>LoggerAware Trait</source>
          <target state="translated">LoggerAware Trait</target>
        </trans-unit>
        <trans-unit id="ec22c6b4cc974914f3adb36bfda1e2730de4d71d" translate="yes" xml:space="preserve">
          <source>Logging Exceptions</source>
          <target state="translated">日志异常</target>
        </trans-unit>
        <trans-unit id="af33953452c08aac6ed81900431a332650510c71" translate="yes" xml:space="preserve">
          <source>Logging Information</source>
          <target state="translated">记录信息</target>
        </trans-unit>
        <trans-unit id="65eac6118ebdd55aa38b41f70efdf532e567ffd8" translate="yes" xml:space="preserve">
          <source>Logical Operators</source>
          <target state="translated">逻辑运算符</target>
        </trans-unit>
        <trans-unit id="b399da6f4960cdd85bdf3f54882bb2ec5bee170c" translate="yes" xml:space="preserve">
          <source>Logs #1654</source>
          <target state="translated">第1654号日志</target>
        </trans-unit>
        <trans-unit id="e8a9b8c9f0bddbccb7c8b74c22736ca0ab949abb" translate="yes" xml:space="preserve">
          <source>Logs a message using the Log Handlers defined in &lt;strong&gt;app/Config/Logger.php&lt;/strong&gt;.</source>
          <target state="translated">使用&lt;strong&gt;app / Config / Logger.php中&lt;/strong&gt;定义的日志处理程序记录消息。</target>
        </trans-unit>
        <trans-unit id="1709d0fedce5e63a987cb501d05ffb5cfe071014" translate="yes" xml:space="preserve">
          <source>Loki97</source>
          <target state="translated">Loki97</target>
        </trans-unit>
        <trans-unit id="201ddef0c1f1b20dd8eb1f5c55cd47ea589e4324" translate="yes" xml:space="preserve">
          <source>Long story short - call &lt;code&gt;session_write_close()&lt;/code&gt; once you no longer need anything to do with session variables.</source>
          <target state="translated">长话短说- 不再需要与会话变量有任何关系时，请调用 &lt;code&gt;session_write_close()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c40ccc3b4d6450c8d32eac62ccac6a7620218c11" translate="yes" xml:space="preserve">
          <source>Long story short - if you don&amp;rsquo;t know how to do that already in raw PHP, you shouldn&amp;rsquo;t be trying to do it within CodeIgniter either. You&amp;rsquo;ve been warned.</source>
          <target state="translated">长话短说-如果您不知道如何在原始PHP中完成此操作，则也不要尝试在CodeIgniter中执行此操作。您已被警告。</target>
        </trans-unit>
        <trans-unit id="d9d7631e20686716ef7b23edbf215e0975f6a8c5" translate="yes" xml:space="preserve">
          <source>Looking at the code, you may see some similarity with the files we created earlier. First, it extends a core CodeIgniter class, &lt;code&gt;Controller&lt;/code&gt;, which provides a couple of helper methods, and makes sure that you have access to the current &lt;code&gt;Request&lt;/code&gt; and &lt;code&gt;Response&lt;/code&gt; objects, as well as the &lt;code&gt;Logger&lt;/code&gt; class, for saving information to disk.</source>
          <target state="translated">查看代码，您可能会发现与我们之前创建的文件有些相似。首先，它扩展了一个核心CodeIgniter类 &lt;code&gt;Controller&lt;/code&gt; ，该类提供了一些辅助方法，并确保您可以访问当前的 &lt;code&gt;Request&lt;/code&gt; 和 &lt;code&gt;Response&lt;/code&gt; 对象以及 &lt;code&gt;Logger&lt;/code&gt; 类，以将信息保存到磁盘。</target>
        </trans-unit>
        <trans-unit id="25f58df0ad55cf4efe6166bc5637401c0c5c3b5b" translate="yes" xml:space="preserve">
          <source>Looking at the code, you may see some similarity with the files we created earlier. First, the &lt;code&gt;__construct()&lt;/code&gt; method: it calls the constructor of its parent class (&lt;code&gt;CI_Controller&lt;/code&gt;) and loads the model, so it can be used in all other methods in this controller. It also loads a collection of &lt;a href=&quot;../helpers/url_helper&quot;&gt;URL Helper&lt;/a&gt; functions, because we&amp;rsquo;ll use one of them in a view later.</source>
          <target state="translated">查看代码，您可能会发现与我们之前创建的文件有些相似。首先， &lt;code&gt;CI_Controller&lt;/code&gt; construct &lt;code&gt;__construct()&lt;/code&gt; 方法：它调用其父类（CI_Controller）的构造函数并加载模型，因此可以在此控制器的所有其他方法中使用它。它还加载了&lt;a href=&quot;../helpers/url_helper&quot;&gt;URL Helper&lt;/a&gt;函数的集合，因为稍后我们将在视图中使用其中的一个。</target>
        </trans-unit>
        <trans-unit id="b76497296d19bd50b09adf1110fee7e78a387ec3" translate="yes" xml:space="preserve">
          <source>Looking for Similar Data</source>
          <target state="translated">寻找类似数据</target>
        </trans-unit>
        <trans-unit id="563a6fc311750c300f20d5c41261e66e2ee14e54" translate="yes" xml:space="preserve">
          <source>Looking for Specific Data</source>
          <target state="translated">寻找特定数据</target>
        </trans-unit>
        <trans-unit id="1ff86acfd476b5104c6d6199b4131589517222a3" translate="yes" xml:space="preserve">
          <source>Loop Substitutions</source>
          <target state="translated">环路替代</target>
        </trans-unit>
        <trans-unit id="3007c044930ed8800e0f311fb209f6a158f4bc61" translate="yes" xml:space="preserve">
          <source>Lots of tweaks and corrections in the user guide.</source>
          <target state="translated">在用户指南中进行了大量的调整和修正。</target>
        </trans-unit>
        <trans-unit id="4b7d57c3149051517340cee1e92dac82386afee2" translate="yes" xml:space="preserve">
          <source>MB_ENABLED</source>
          <target state="translated">MB_ENABLED</target>
        </trans-unit>
        <trans-unit id="417784f5ff00609e8935a02bce38521b11d8b94e" translate="yes" xml:space="preserve">
          <source>MCRYPT_MODE_ECB</source>
          <target state="translated">MCRYPT_MODE_ECB</target>
        </trans-unit>
        <trans-unit id="ec8658b95484eff9965158d9a7f142e7aab65326" translate="yes" xml:space="preserve">
          <source>MCrypt</source>
          <target state="translated">MCrypt</target>
        </trans-unit>
        <trans-unit id="2d402e17d9eaa7174787bbd2c137fb71ab24bfd2" translate="yes" xml:space="preserve">
          <source>MCrypt, OpenSSL</source>
          <target state="translated">MCrypt,OpenSSL</target>
        </trans-unit>
        <trans-unit id="7ddab92eb4744eb322da1d04187a78911937bb4a" translate="yes" xml:space="preserve">
          <source>MIME type string or FALSE on failure</source>
          <target state="translated">MIME类型为字符串或失败时为FALSE。</target>
        </trans-unit>
        <trans-unit id="7698815b4097bfb3ec4c1b7ed737cad1f5331c02" translate="yes" xml:space="preserve">
          <source>MS SQL via the &lt;em&gt;mssql&lt;/em&gt;, &lt;em&gt;sqlsrv&lt;/em&gt; (version 2005 and above only) and &lt;em&gt;pdo&lt;/em&gt; drivers</source>
          <target state="translated">通过&lt;em&gt;mssql&lt;/em&gt;，&lt;em&gt;sqlsrv&lt;/em&gt;（仅适用于2005版及更高版本）和&lt;em&gt;pdo&lt;/em&gt;驱动程序的MS SQL</target>
        </trans-unit>
        <trans-unit id="750f9870f2ebf1c6d15527e004ee500ab2c52175" translate="yes" xml:space="preserve">
          <source>Make interactive &amp;ldquo;tasks&amp;rdquo; that can do things like set permissions, prune cache folders, run backups, etc.</source>
          <target state="translated">制作可以执行诸如设置权限，修剪缓存文件夹，运行备份等操作的交互式&amp;ldquo;任务&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="49b18757e3384c544eddbafbefe90caaa7b76c9a" translate="yes" xml:space="preserve">
          <source>Make sure any non-mime string you pass to this method exists in &lt;em&gt;application/config/mimes.php&lt;/em&gt; or it will have no effect.</source>
          <target state="translated">确保您传递给此方法的任何非MIME字符串都存在于&lt;em&gt;application / config / mimes.php中，&lt;/em&gt;否则它将无效。</target>
        </trans-unit>
        <trans-unit id="005658c1c9b5cd9f3e860b32ee48571d7bb1aac0" translate="yes" xml:space="preserve">
          <source>Make sure that the rewrite module is enabled (uncommented) in the main configuration file, eg. &lt;code&gt;apache2/conf/httpd.conf&lt;/code&gt;:</source>
          <target state="translated">确保在主配置文件中启用（未注释）重写模块，例如。 &lt;code&gt;apache2/conf/httpd.conf&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="e8426586cbea8a69b865c2ed7a5219a2d737b0c2" translate="yes" xml:space="preserve">
          <source>Make sure that the virtual hosting module is enabled (uncommented) in the main configuration file, eg. &lt;code&gt;apache2/conf/httpd.conf&lt;/code&gt;:</source>
          <target state="translated">确保在主配置文件中启用（未注释）虚拟主机模块，例如。 &lt;code&gt;apache2/conf/httpd.conf&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="a1f003943cb4e56bfb2e78e9067ca1cf6bd3e12d" translate="yes" xml:space="preserve">
          <source>Make sure that your dev environment has error reporting enabled for ALL users, and that display_errors is enabled in the PHP environment. You can check this setting with:</source>
          <target state="translated">确保你的开发环境对所有用户都启用了错误报告,并且在PHP环境中启用了display_errors。你可以用以下方法检查这个设置</target>
        </trans-unit>
        <trans-unit id="594beacd7affa24e9ab24014ff3171f6aaac2885" translate="yes" xml:space="preserve">
          <source>Make sure the &lt;strong&gt;.env&lt;/strong&gt; file is NOT tracked by your version control system. For &lt;em&gt;git&lt;/em&gt; that means adding it to &lt;strong&gt;.gitignore&lt;/strong&gt;. Failure to do so could result in sensitive credentials being exposed to the public.</source>
          <target state="translated">确保版本控制系统未跟踪&lt;strong&gt;.env&lt;/strong&gt;文件。对于&lt;em&gt;git&lt;/em&gt;意味着将其添加到&lt;strong&gt;.gitignore&lt;/strong&gt;。否则，可能会导致敏感凭据向公众公开。</target>
        </trans-unit>
        <trans-unit id="9aa5102273854ea0af6892f9dd0898510905f938" translate="yes" xml:space="preserve">
          <source>Make sure to also exclude from the above rule any assets that you might need to be accessible from the outside world.</source>
          <target state="translated">确保也从上述规则中排除你可能需要从外界获取的任何资产。</target>
        </trans-unit>
        <trans-unit id="741fa5a370a0a89b5b3f64892460af34bb380d42" translate="yes" xml:space="preserve">
          <source>Make sure to also exclude from the above rules any assets that you might need to be accessible from the outside world.</source>
          <target state="translated">确保也从上述规则中排除你可能需要从外界获取的任何资产。</target>
        </trans-unit>
        <trans-unit id="e15586a5e2192fa9d0cccc8d76f99c8e9d396e2d" translate="yes" xml:space="preserve">
          <source>Make sure to use $this-&amp;gt;db-&amp;gt;transBegin() when running manual transactions, &lt;strong&gt;NOT&lt;/strong&gt; $this-&amp;gt;db-&amp;gt;transStart().</source>
          <target state="translated">运行手动事务时，请确保使用$ this-&amp;gt; db-&amp;gt; transBegin（），而&lt;strong&gt;不要使用&lt;/strong&gt;$ this-&amp;gt; db-&amp;gt; transStart（）。</target>
        </trans-unit>
        <trans-unit id="0a3b2596b897607da8ad13bf80f95aaea1ea920d" translate="yes" xml:space="preserve">
          <source>Make sure to use $this-&amp;gt;db-&amp;gt;trans_begin() when running manual transactions, &lt;strong&gt;NOT&lt;/strong&gt; $this-&amp;gt;db-&amp;gt;trans_start().</source>
          <target state="translated">运行手动事务时，请确保使用$ this-&amp;gt; db-&amp;gt; trans_begin（），而&lt;strong&gt;不要使用&lt;/strong&gt; $ this-&amp;gt; db-&amp;gt; trans_start（）。</target>
        </trans-unit>
        <trans-unit id="4e8d6a9929e543eda19658032bb07f5a1a1b2511" translate="yes" xml:space="preserve">
          <source>Make your cron-jobs inaccessible from being loaded in the URL by checking the return value of &lt;a href=&quot;../general/common_functions#is_cli&quot;&gt;&lt;code&gt;is_cli()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">通过检查&lt;a href=&quot;../general/common_functions#is_cli&quot;&gt; &lt;code&gt;is_cli()&lt;/code&gt; &lt;/a&gt;的返回值，使您的cron-jobs无法通过URL加载。</target>
        </trans-unit>
        <trans-unit id="f2f43b91fe7faa1f79dcfd8131243b2f662a06eb" translate="yes" xml:space="preserve">
          <source>Make your cron-jobs inaccessible from being loaded in the URL by checking the return value of &lt;a href=&quot;common_functions#is_cli&quot;&gt;&lt;code&gt;is_cli()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">通过检查&lt;a href=&quot;common_functions#is_cli&quot;&gt; &lt;code&gt;is_cli()&lt;/code&gt; &lt;/a&gt;的返回值，使您的cron-jobs无法通过URL加载。</target>
        </trans-unit>
        <trans-unit id="e2f6fe511430ae26e9aadc8036bb0de3de4164ab" translate="yes" xml:space="preserve">
          <source>Making Requests</source>
          <target state="translated">提出请求</target>
        </trans-unit>
        <trans-unit id="236b276a68c22f9a3d878d0e409b3e4882a08d8e" translate="yes" xml:space="preserve">
          <source>Making Your Queries Easier</source>
          <target state="translated">让您的查询更简单</target>
        </trans-unit>
        <trans-unit id="f26b359ba37eb8a50cdf02456f39cff00b1155a4" translate="yes" xml:space="preserve">
          <source>Managing Databases</source>
          <target state="translated">管理数据库</target>
        </trans-unit>
        <trans-unit id="7e3631c271a96dd85e4e5ec97a177e7c33eea768" translate="yes" xml:space="preserve">
          <source>Managing Errors</source>
          <target state="translated">管理错误</target>
        </trans-unit>
        <trans-unit id="05fe651886989c4ce0e0af7ac38461728fecbdb8" translate="yes" xml:space="preserve">
          <source>Managing your Applications</source>
          <target state="translated">管理您的应用程序</target>
        </trans-unit>
        <trans-unit id="65784dcc3319a8d37706da70362aa7a875ee8066" translate="yes" xml:space="preserve">
          <source>Managing your Cache Files</source>
          <target state="translated">管理您的缓存文件</target>
        </trans-unit>
        <trans-unit id="5ac982ced6cd245760453f72346753b56b58a0a4" translate="yes" xml:space="preserve">
          <source>Mandatory / Optional</source>
          <target state="translated">强制性/选择性</target>
        </trans-unit>
        <trans-unit id="a7dbbb4172263077674577b2683165b09aa78cdb" translate="yes" xml:space="preserve">
          <source>Manual Installation</source>
          <target state="translated">手动安装</target>
        </trans-unit>
        <trans-unit id="25edf606a7402b2d23e46f59fd11a016545751bd" translate="yes" xml:space="preserve">
          <source>Manual Loading</source>
          <target state="translated">手动装载</target>
        </trans-unit>
        <trans-unit id="14ac742ff18f21cf639855837db3076274cea550" translate="yes" xml:space="preserve">
          <source>Manual Model Creation</source>
          <target state="translated">手动创建模型</target>
        </trans-unit>
        <trans-unit id="ad50d3bf63e52c7047694b83724f4488c3ce2c71" translate="yes" xml:space="preserve">
          <source>Manual Pagination</source>
          <target state="translated">手动分页</target>
        </trans-unit>
        <trans-unit id="3b5cb7733c2c3fcadece40692da61413f4bc85e5" translate="yes" xml:space="preserve">
          <source>Manually Connecting</source>
          <target state="translated">手动连接</target>
        </trans-unit>
        <trans-unit id="6f2258b11ad6be040c2aaad749c96a59b6811d15" translate="yes" xml:space="preserve">
          <source>Manually Connecting to a Database</source>
          <target state="translated">手动连接到数据库</target>
        </trans-unit>
        <trans-unit id="d3666bd352c671123bfd94f18d4c676d3ad8c67a" translate="yes" xml:space="preserve">
          <source>Manually closing the Connection</source>
          <target state="translated">手动关闭连接</target>
        </trans-unit>
        <trans-unit id="e0c9b3af7816f60c52c2d82df5e4015e8c984ce3" translate="yes" xml:space="preserve">
          <source>Manually enables/disables caching. This can be useful if you want to keep certain queries from being cached. Example:</source>
          <target state="translated">手动开启/关闭缓存。如果你想让某些查询不被缓存,这很有用。例如</target>
        </trans-unit>
        <trans-unit id="f0fbfc0db13e058971251435772cfdb5ff983944" translate="yes" xml:space="preserve">
          <source>Many URIs contain several elements that are collectively known as the &amp;lsquo;authority&amp;rsquo;. This includes any user info, the host and the port number. You can retrieve all of these pieces as one single string with the &lt;code&gt;getAuthority()&lt;/code&gt; method, or you can manipulate the individual parts.</source>
          <target state="translated">许多URI包含几个被统称为&amp;ldquo;权威&amp;rdquo;的元素。这包括任何用户信息，主机和端口号。您可以使用 &lt;code&gt;getAuthority()&lt;/code&gt; 方法将所有这些片段作为一个字符串检索，也可以操纵各个部分。</target>
        </trans-unit>
        <trans-unit id="2ef710afe26f0e076f2387ccec40e3015e461fa6" translate="yes" xml:space="preserve">
          <source>Many applications have known vulnerabilities and known attack strategies that can be exploited in order to gain remote control or to exploit data.</source>
          <target state="translated">许多应用程序都有已知的漏洞和已知的攻击策略,可以利用这些漏洞和策略来获得远程控制或利用数据。</target>
        </trans-unit>
        <trans-unit id="eb3b57147424076cf5af4623293e09b00381a315" translate="yes" xml:space="preserve">
          <source>Many functions previously found in the CodeIgniter 3 &lt;code&gt;date_helper&lt;/code&gt; have been moved to the &lt;code&gt;I18n&lt;/code&gt; module in CodeIgniter 4.</source>
          <target state="translated">先前在CodeIgniter 3 &lt;code&gt;date_helper&lt;/code&gt; 中找到的许多功能已移至CodeIgniter 4中的 &lt;code&gt;I18n&lt;/code&gt; 模块。</target>
        </trans-unit>
        <trans-unit id="1b6c88e7856e110bf00aacdded83e6e3444c57a8" translate="yes" xml:space="preserve">
          <source>Many times, all you really want is an object representing the current URL of this request. This can be accessed in two different ways. The first is to grab it directly from the current request object. Assuming that you&amp;rsquo;re in a controller that extends &lt;code&gt;CodeIgniter\Controller&lt;/code&gt; you can get it like:</source>
          <target state="translated">很多时候，您真正想要的只是一个代表此请求当前URL的对象。可以通过两种不同的方式进行访问。首先是直接从当前请求对象中获取它。假设您在扩展 &lt;code&gt;CodeIgniter\Controller&lt;/code&gt; ，则可以像以下方式获得它：</target>
        </trans-unit>
        <trans-unit id="f05cfa155de6f487be47f71243984907de65b3d4" translate="yes" xml:space="preserve">
          <source>Many times, all you really want is to get a string representation of a URI. This is easy to do by simply casting the URI as a string:</source>
          <target state="translated">很多时候,你真正想要的是一个URI的字符串表示。这很容易做到,只需将URI转换为一个字符串。</target>
        </trans-unit>
        <trans-unit id="ab39afc2adaf08cdbe5e34acf60b25cf44b01896" translate="yes" xml:space="preserve">
          <source>Many times, you will need to specify the full namespace to files you want to include, but CodeIgniter can be configured to make integrating modules into your applications simpler by automatically discovering many different file types, including:</source>
          <target state="translated">很多时候,你需要为你想要包含的文件指定完整的命名空间,但是CodeIgniter可以通过配置自动发现许多不同的文件类型,使模块集成到你的应用程序中变得简单,包括。</target>
        </trans-unit>
        <trans-unit id="22721222334d51e093a1a9cb2401df040e5fdbd6" translate="yes" xml:space="preserve">
          <source>Mapping multiple routes</source>
          <target state="translated">绘制多条路线</target>
        </trans-unit>
        <trans-unit id="587776e3bb4c7325738b28a4cc2f574afa8c3a35" translate="yes" xml:space="preserve">
          <source>Mark a start point</source>
          <target state="translated">标记一个起点</target>
        </trans-unit>
        <trans-unit id="f3b39dc69524d3dbeaa09e276e51e723f8207cdc" translate="yes" xml:space="preserve">
          <source>Mark an end point</source>
          <target state="translated">标记一个终点</target>
        </trans-unit>
        <trans-unit id="253bd53881d6356cc150a392426f445958ddef90" translate="yes" xml:space="preserve">
          <source>Marks a &lt;code&gt;$_SESSION&lt;/code&gt; item key (or multiple ones) as &amp;ldquo;flashdata&amp;rdquo;.</source>
          <target state="translated">将 &lt;code&gt;$_SESSION&lt;/code&gt; 项密钥（或多个）标记为&amp;ldquo; flashdata&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="a16a4e619a6b9ac80f082d629ec9f9c72c4733fd" translate="yes" xml:space="preserve">
          <source>Marks a &lt;code&gt;$_SESSION&lt;/code&gt; item key (or multiple ones) as &amp;ldquo;tempdata&amp;rdquo;.</source>
          <target state="translated">将 &lt;code&gt;$_SESSION&lt;/code&gt; 项密钥（或多个）标记为&amp;ldquo; tempdata&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="a984102b79887253f14b2b7bb734dbdf8577c367" translate="yes" xml:space="preserve">
          <source>MathML 1.01</source>
          <target state="translated">MathML 1.01</target>
        </trans-unit>
        <trans-unit id="34ed6b02d923aa3e44beb13601adea813d26bbb5" translate="yes" xml:space="preserve">
          <source>MathML 2.0</source>
          <target state="translated">MathML 2.0</target>
        </trans-unit>
        <trans-unit id="0c77aeece8c258113148c6fb487946bf97b34672" translate="yes" xml:space="preserve">
          <source>Media</source>
          <target state="translated">Media</target>
        </trans-unit>
        <trans-unit id="39e3a1d972064b766e66442aa9bc5cb04407acac" translate="yes" xml:space="preserve">
          <source>Memcached Caching</source>
          <target state="translated">Memcached缓存</target>
        </trans-unit>
        <trans-unit id="46434806286f0c08214036027f2a06ccade17e54" translate="yes" xml:space="preserve">
          <source>Memcached Driver</source>
          <target state="translated">Memcached驱动</target>
        </trans-unit>
        <trans-unit id="45469a1e38ad08efc052bcff16b74bedd16faba7" translate="yes" xml:space="preserve">
          <source>Memcached servers can be specified in the cache configuration file. Available options are:</source>
          <target state="translated">Memcached服务器可以在缓存配置文件中指定。可用的选项有:</target>
        </trans-unit>
        <trans-unit id="3234182613f046fdcfc21083a0a9c17bf2843b8f" translate="yes" xml:space="preserve">
          <source>MemcachedHandler #1180</source>
          <target state="translated">MemcachedHandler #1180</target>
        </trans-unit>
        <trans-unit id="de5d933c66271f8b5ae7ec1dc6bf370a95d656bc" translate="yes" xml:space="preserve">
          <source>MemcachedHandler #1895</source>
          <target state="translated">MemcachedHandler #1895</target>
        </trans-unit>
        <trans-unit id="1bec2e47050dea9678829f94fc3c33059eda1cce" translate="yes" xml:space="preserve">
          <source>MemcachedHandler #2060</source>
          <target state="translated">MemcachedHandler #2060</target>
        </trans-unit>
        <trans-unit id="a5ec0672c44e0a8d1d42a8694013bab8a3c4245b" translate="yes" xml:space="preserve">
          <source>MemcachedHandler #2298</source>
          <target state="translated">MemcachedHandler #2298</target>
        </trans-unit>
        <trans-unit id="7806a83e56a864e2fe4aaec5982969ef661cc171" translate="yes" xml:space="preserve">
          <source>MemcachedHandler Driver</source>
          <target state="translated">MemcachedHandler驱动</target>
        </trans-unit>
        <trans-unit id="1aafdfbe48beda1eb51832fe649a9f0b78476c05" translate="yes" xml:space="preserve">
          <source>MemcachedHandlerTest #1180, #1383</source>
          <target state="translated">MemcachedHandlerTest #1180,#1383</target>
        </trans-unit>
        <trans-unit id="faa295b39e14a1eefe740f3ad721b898de1902ac" translate="yes" xml:space="preserve">
          <source>MemcachedHandlerTest #1895</source>
          <target state="translated">MemcachedHandlerTest #1895</target>
        </trans-unit>
        <trans-unit id="c135d6c186b40fc3b641c1dbab6bf4db37770e11" translate="yes" xml:space="preserve">
          <source>Memory usage info</source>
          <target state="translated">内存使用信息</target>
        </trans-unit>
        <trans-unit id="9876991b8375ae1453592e0cd05169a3978a5be1" translate="yes" xml:space="preserve">
          <source>Message #1497</source>
          <target state="translated">留言#1497</target>
        </trans-unit>
        <trans-unit id="49e55d8c880bacbfdcd7c3eb5fb0bd08757e71e1" translate="yes" xml:space="preserve">
          <source>Message @2171</source>
          <target state="translated">留言 @2171</target>
        </trans-unit>
        <trans-unit id="dcc9f5117505b2ac31ac9bb0cca43c4ce8b5a833" translate="yes" xml:space="preserve">
          <source>Message Length</source>
          <target state="translated">信息长度</target>
        </trans-unit>
        <trans-unit id="072c7444ba00df1beaa15d4b9c1bb6d93286a215" translate="yes" xml:space="preserve">
          <source>Message Translations</source>
          <target state="translated">信息翻译</target>
        </trans-unit>
        <trans-unit id="17d2053b78b2488505fa167e6e99aa5e4d4d6d07" translate="yes" xml:space="preserve">
          <source>Message changes:</source>
          <target state="translated">消息变化。</target>
        </trans-unit>
        <trans-unit id="9a726295325b0152a6dc4ac454aff607c50600e0" translate="yes" xml:space="preserve">
          <source>Message::appendBody()</source>
          <target state="translated">Message::appendBody()</target>
        </trans-unit>
        <trans-unit id="11e45b8138318f85f5b79a9d7d6c7b0a6038f631" translate="yes" xml:space="preserve">
          <source>Message::appendHeader()</source>
          <target state="translated">Message::appendHeader()</target>
        </trans-unit>
        <trans-unit id="ea0cca9aee41aa4ac886810f2cd59cf1f62306d2" translate="yes" xml:space="preserve">
          <source>Message::getBody()</source>
          <target state="translated">Message::getBody()</target>
        </trans-unit>
        <trans-unit id="642d6bc5b34cf0bd28bdef599b8476ae0314f98b" translate="yes" xml:space="preserve">
          <source>Message::getHeader()</source>
          <target state="translated">Message::getHeader()</target>
        </trans-unit>
        <trans-unit id="683268d01ca34f50ac0484050e604cb921f49278" translate="yes" xml:space="preserve">
          <source>Message::getHeaderLine()</source>
          <target state="translated">Message::getHeaderLine()</target>
        </trans-unit>
        <trans-unit id="1136c967673a3be48d1aaf5021be046f2b290dbd" translate="yes" xml:space="preserve">
          <source>Message::getHeaders()</source>
          <target state="translated">Message::getHeaders()</target>
        </trans-unit>
        <trans-unit id="0d63edcd84be923c447e45ed7551c5154be718f8" translate="yes" xml:space="preserve">
          <source>Message::getProtocolVersion()</source>
          <target state="translated">Message::getProtocolVersion()</target>
        </trans-unit>
        <trans-unit id="7c8e6896c7366e6ee1c0f695b6cdfa2c3b9bd5cf" translate="yes" xml:space="preserve">
          <source>Message::hasHeader()</source>
          <target state="translated">Message::hasHeader()</target>
        </trans-unit>
        <trans-unit id="0aec68442453882df1506bf7514fe149c73a712c" translate="yes" xml:space="preserve">
          <source>Message::populateHeaders()</source>
          <target state="translated">Message::populateHeaders()</target>
        </trans-unit>
        <trans-unit id="c054f3bc93a3048e27ecfacb27faab8c7dd2d98a" translate="yes" xml:space="preserve">
          <source>Message::prependHeader()</source>
          <target state="translated">Message::prependHeader()</target>
        </trans-unit>
        <trans-unit id="8ae5afe81c12ad34cc8a41ba39a1e4d70f7b6ee0" translate="yes" xml:space="preserve">
          <source>Message::removeHeader()</source>
          <target state="translated">Message::removeHeader()</target>
        </trans-unit>
        <trans-unit id="2ba1384e0d0921f5a27639769a1f9dd60f14e7bf" translate="yes" xml:space="preserve">
          <source>Message::setBody()</source>
          <target state="translated">Message::setBody()</target>
        </trans-unit>
        <trans-unit id="3e53a1a6e252e7ea484b9d156aa08f8c4ddbdfa3" translate="yes" xml:space="preserve">
          <source>Message::setHeader()</source>
          <target state="translated">Message::setHeader()</target>
        </trans-unit>
        <trans-unit id="86b22bb032b9a4935f830bc8cab9d098ec5dfa01" translate="yes" xml:space="preserve">
          <source>Message::setProtocolVersion()</source>
          <target state="translated">Message::setProtocolVersion()</target>
        </trans-unit>
        <trans-unit id="03f8d15214fa45b9cd111d4ac620d271c87c170e" translate="yes" xml:space="preserve">
          <source>MessageTest #2171</source>
          <target state="translated">MessageTest #2171</target>
        </trans-unit>
        <trans-unit id="1a9a24f86bf6f6866265a7c7adfd58ca01eea565" translate="yes" xml:space="preserve">
          <source>Messages now has RESTful set</source>
          <target state="translated">消息现在有RESTful设置</target>
        </trans-unit>
        <trans-unit id="ac86e7797f214b88cd13e4ee84713dbacc784a95" translate="yes" xml:space="preserve">
          <source>Messing with a core system class has a lot of implications, so make sure you know what you are doing before attempting it.</source>
          <target state="translated">乱用核心系统类有很多影响,所以在尝试之前要确保你知道自己在做什么。</target>
        </trans-unit>
        <trans-unit id="251edc0eb5a820646bda4e103f0f007fd55321f3" translate="yes" xml:space="preserve">
          <source>Metadata</source>
          <target state="translated">Metadata</target>
        </trans-unit>
        <trans-unit id="c06b0bd8322121aafa4d4159e59f3fdbe2ba5851" translate="yes" xml:space="preserve">
          <source>Metadata for the cached item</source>
          <target state="translated">缓存项目的元数据</target>
        </trans-unit>
        <trans-unit id="a6f831b3f98600dfb357b624493dc57abe10e1c5" translate="yes" xml:space="preserve">
          <source>MetadataTest #2211</source>
          <target state="translated">元数据测试#2211</target>
        </trans-unit>
        <trans-unit id="88306943fea7e76f9cd57cae0ea6d8b32d2e8434" translate="yes" xml:space="preserve">
          <source>Method</source>
          <target state="translated">Method</target>
        </trans-unit>
        <trans-unit id="5f0337845fa160f43e4c22fbe32ed48ddb937cdf" translate="yes" xml:space="preserve">
          <source>Method Chaining</source>
          <target state="translated">方法链</target>
        </trans-unit>
        <trans-unit id="8866386185561ecef5859b43af964574361732d9" translate="yes" xml:space="preserve">
          <source>Method chaining allows you to simplify your syntax by connecting multiple functions. Consider this example:</source>
          <target state="translated">方法链允许你通过连接多个函数来简化你的语法。考虑这个例子。</target>
        </trans-unit>
        <trans-unit id="7e4ac6803c9159c694f63d089cb06b2519c16aba" translate="yes" xml:space="preserve">
          <source>Methods</source>
          <target state="translated">Methods</target>
        </trans-unit>
        <trans-unit id="eac6533c8e2646290ef5835647f9e84730beddc1" translate="yes" xml:space="preserve">
          <source>Methods and variables that are only accessed internally, such as utility and helper functions that your public methods use for code abstraction, should be prefixed with an underscore.</source>
          <target state="translated">只在内部访问的方法和变量,比如你的公共方法用于代码抽象的实用程序和辅助函数,应该在前边加上下划线。</target>
        </trans-unit>
        <trans-unit id="5708006499fe69e19fb30e4b3945108c91b11f8d" translate="yes" xml:space="preserve">
          <source>Methods of that class can then be invoked with:</source>
          <target state="translated">然后可以用该类的方法来调用。</target>
        </trans-unit>
        <trans-unit id="16e769962e1aae4dc5d556e669bbcf2ea23203cd" translate="yes" xml:space="preserve">
          <source>Migrate #2065, 2137</source>
          <target state="translated">迁移#2065、2137</target>
        </trans-unit>
        <trans-unit id="8b31c29cce1c7cdaa6c1c7b09644d7af1d21981e" translate="yes" xml:space="preserve">
          <source>MigrateCurrent #1431</source>
          <target state="translated">MigrateCurrent #1431</target>
        </trans-unit>
        <trans-unit id="78b8452b59f92f9086d5af31860d4bc582fe3462" translate="yes" xml:space="preserve">
          <source>MigrateLatest #1431</source>
          <target state="translated">MigrateLatest #1431</target>
        </trans-unit>
        <trans-unit id="dbf169f45aa262935c47eb520a740af3fe1c56c2" translate="yes" xml:space="preserve">
          <source>MigrateRefresh #2065, 2137</source>
          <target state="translated">MigrateRefresh #2065,2137</target>
        </trans-unit>
        <trans-unit id="80e360befa13c34ede4e5afae779447a51caf36f" translate="yes" xml:space="preserve">
          <source>MigrateRollback #1431</source>
          <target state="translated">MigrateRollback #1431</target>
        </trans-unit>
        <trans-unit id="f2e81526d05bc70f02649d09f3eaa11dd314ca37" translate="yes" xml:space="preserve">
          <source>MigrateRollback #2065, 2137</source>
          <target state="translated">MigrateRollback #2065,2137</target>
        </trans-unit>
        <trans-unit id="65f69cefe4ce11878ef07da981e2128a5b27bf14" translate="yes" xml:space="preserve">
          <source>MigrateStatus #1431</source>
          <target state="translated">MigrateStatus #1431</target>
        </trans-unit>
        <trans-unit id="260b6d898928f1d42dc8dd251e8cd2473e85069c" translate="yes" xml:space="preserve">
          <source>MigrateStatus #2137</source>
          <target state="translated">MigrateStatus #2137</target>
        </trans-unit>
        <trans-unit id="a04892e1a8ff2861179b7d100d7e106322be883f" translate="yes" xml:space="preserve">
          <source>MigrateVersion #1431</source>
          <target state="translated">MigrateVersion #1431</target>
        </trans-unit>
        <trans-unit id="2d4f370503ee3293ab3e80c76a9f77635f048c08" translate="yes" xml:space="preserve">
          <source>MigrateVersion #2137</source>
          <target state="translated">MigrateVersion #2137</target>
        </trans-unit>
        <trans-unit id="9bf3cbb290aa12ad41e3ea464d724ca63b9c1ab1" translate="yes" xml:space="preserve">
          <source>Migrates a database group with all available migrations:</source>
          <target state="translated">用所有可用的迁移来迁移一个数据库组。</target>
        </trans-unit>
        <trans-unit id="078ee41dac1378068652b1af58416f50bdd87782" translate="yes" xml:space="preserve">
          <source>Migrates up to the current version (whatever is set for &lt;code&gt;$config['migration_version']&lt;/code&gt; in &lt;em&gt;application/config/migration.php&lt;/em&gt;).</source>
          <target state="translated">迁移到当前版本（无论在&lt;em&gt;application / config / migration.php中&lt;/em&gt;为 &lt;code&gt;$config['migration_version']&lt;/code&gt; 设置了什么）。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f67dfa42b9ffd138a8eaa81853c7b963617cf47f" translate="yes" xml:space="preserve">
          <source>Migration #2303</source>
          <target state="translated">迁移#2303</target>
        </trans-unit>
        <trans-unit id="7c142e791dfed4cc8d24583caa5a10d6bbf882f3" translate="yes" xml:space="preserve">
          <source>Migration Preferences</source>
          <target state="translated">迁移偏好</target>
        </trans-unit>
        <trans-unit id="a33514e1e6bea2eea902c62665a432b6f1e7d9bc" translate="yes" xml:space="preserve">
          <source>Migration file names</source>
          <target state="translated">迁移文件名</target>
        </trans-unit>
        <trans-unit id="a9b3cfaa597ef31d32ab5baa29dd12e2d5737430" translate="yes" xml:space="preserve">
          <source>Migration files will be automatically discovered within defined namespaces. All migrations found across all namespaces will be run every time.</source>
          <target state="translated">迁移文件将在定义的命名空间内被自动发现。所有在所有命名空间中发现的迁移文件每次都会被运行。</target>
        </trans-unit>
        <trans-unit id="845defffee841c80748a72883d8c2688afdec2cb" translate="yes" xml:space="preserve">
          <source>Migration has new &amp;amp; modified messages</source>
          <target state="translated">迁移有新消息和修改过的消息</target>
        </trans-unit>
        <trans-unit id="c6947d82904a70256912d2c9afb6e91c6675f741" translate="yes" xml:space="preserve">
          <source>MigrationRunner #1371</source>
          <target state="translated">MigrationRunner #1371</target>
        </trans-unit>
        <trans-unit id="055082153ef5699effc81973e5ee751348ee8fc9" translate="yes" xml:space="preserve">
          <source>MigrationRunner #1585</source>
          <target state="translated">MigrationRunner #1585</target>
        </trans-unit>
        <trans-unit id="b3752ec2efdee746d1847333ae42a423d0e6d01b" translate="yes" xml:space="preserve">
          <source>MigrationRunner #1743</source>
          <target state="translated">MigrationRunner #1743</target>
        </trans-unit>
        <trans-unit id="5a5cd0c22c129b6124f6e86109f05254246f81be" translate="yes" xml:space="preserve">
          <source>MigrationRunner #1860, #1865</source>
          <target state="translated">MigrationRunner #1860,#1865</target>
        </trans-unit>
        <trans-unit id="506e338123746d23b10b54e8378abe56cff0543f" translate="yes" xml:space="preserve">
          <source>MigrationRunner #2019</source>
          <target state="translated">MigrationRunner #2019</target>
        </trans-unit>
        <trans-unit id="cc4efcfe589adf216dbf1481ce00f35281ee450c" translate="yes" xml:space="preserve">
          <source>MigrationRunner #2065, 2137</source>
          <target state="translated">MigrationRunner #2065,2137</target>
        </trans-unit>
        <trans-unit id="56f5413026e0831866e29ef274f41301edfca43f" translate="yes" xml:space="preserve">
          <source>MigrationRunner #2191</source>
          <target state="translated">MigrationRunner #2191</target>
        </trans-unit>
        <trans-unit id="3b98148467ae6044f970f93cc474e840fcb60cb2" translate="yes" xml:space="preserve">
          <source>MigrationRunner #2303</source>
          <target state="translated">MigrationRunner #2303</target>
        </trans-unit>
        <trans-unit id="06518c93f35b9cf465fba00437b7efeef8477428" translate="yes" xml:space="preserve">
          <source>MigrationRunner #81d371, #1660</source>
          <target state="translated">MigrationRunner #81d371,#1660</target>
        </trans-unit>
        <trans-unit id="ccc8fc3ab8de1361d3f4f9f68ae97d8928d40f7e" translate="yes" xml:space="preserve">
          <source>MigrationRunner::findMigrations()</source>
          <target state="translated">MigrationRunner::findMigrations()</target>
        </trans-unit>
        <trans-unit id="9925e1f23204027047ab9612638d97a2e5dd5cf3" translate="yes" xml:space="preserve">
          <source>MigrationRunner::force()</source>
          <target state="translated">MigrationRunner::force()</target>
        </trans-unit>
        <trans-unit id="b1b79177274f578bcbc8108f62d739373e5dfc1d" translate="yes" xml:space="preserve">
          <source>MigrationRunner::latest()</source>
          <target state="translated">MigrationRunner::latest()</target>
        </trans-unit>
        <trans-unit id="7f5ba7303aeda6d58c40ccda748e1d27e5b62d7e" translate="yes" xml:space="preserve">
          <source>MigrationRunner::regress()</source>
          <target state="translated">MigrationRunner::regress()</target>
        </trans-unit>
        <trans-unit id="89fbbeda795f7a3efe9e4d5f9326a31a1f5a5db4" translate="yes" xml:space="preserve">
          <source>MigrationRunner::setGroup()</source>
          <target state="translated">MigrationRunner::setGroup()</target>
        </trans-unit>
        <trans-unit id="d735d1dcdd82a3cede6d215c6be021df634e8a4b" translate="yes" xml:space="preserve">
          <source>MigrationRunner::setNamespace()</source>
          <target state="translated">MigrationRunner::setNamespace()</target>
        </trans-unit>
        <trans-unit id="c9e74d8ebdced5a4576a942a72ef93df3c6353b9" translate="yes" xml:space="preserve">
          <source>MigrationRunnerTest #1917</source>
          <target state="translated">MigrationRunnerTest #1917</target>
        </trans-unit>
        <trans-unit id="a0b72199c7ad0683086ce3f9d840e3a88ba7f293" translate="yes" xml:space="preserve">
          <source>MigrationTest #1943</source>
          <target state="translated">迁移测试#1943</target>
        </trans-unit>
        <trans-unit id="dca984afd74a0089c1d5a5816e4de2e8d46a60b5" translate="yes" xml:space="preserve">
          <source>Migrations</source>
          <target state="translated">Migrations</target>
        </trans-unit>
        <trans-unit id="2b387d5c86fee2389901f3481edf1bfb7728e44d" translate="yes" xml:space="preserve">
          <source>Migrations #1973</source>
          <target state="translated">移徙#1973</target>
        </trans-unit>
        <trans-unit id="aeba86c125c5a4613816efacdadc043b2e4c5095" translate="yes" xml:space="preserve">
          <source>Migrations #2065</source>
          <target state="translated">移徙#2065</target>
        </trans-unit>
        <trans-unit id="d0f54ddbf1e793a91ea8e7bb5b7109e4b563fc4d" translate="yes" xml:space="preserve">
          <source>Migrations #2065, 2137</source>
          <target state="translated">移徙#2065、2137</target>
        </trans-unit>
        <trans-unit id="6c4829efb74f7f334bf87b2b423e730253cccda2" translate="yes" xml:space="preserve">
          <source>Migrations Class</source>
          <target state="translated">迁移类</target>
        </trans-unit>
        <trans-unit id="70c9988ae631b6472602bfba2ae9ed5b5d2affb3" translate="yes" xml:space="preserve">
          <source>Migrations and Seeds</source>
          <target state="translated">迁移和种子</target>
        </trans-unit>
        <trans-unit id="2635e0ad84bef8f271990ab82d359be2fb36c4ce" translate="yes" xml:space="preserve">
          <source>Migrations are a convenient way for you to alter your database in a structured and organized manner. You could edit fragments of SQL by hand but you would then be responsible for telling other developers that they need to go and run them. You would also have to keep track of which changes need to be run against the production machines next time you deploy.</source>
          <target state="translated">迁移是一种方便的方式,让你以一种结构化和有组织的方式改变你的数据库。你可以手工编辑SQL的片段,但你将负责告诉其他开发人员,他们需要去运行它们。你还必须跟踪哪些更改需要在下次部署时针对生产机器运行。</target>
        </trans-unit>
        <trans-unit id="d9c9e172939f128793c1f8e895abddab75a8a670" translate="yes" xml:space="preserve">
          <source>Migrations refactored and streamlined for more wholistic functionality (BC)</source>
          <target state="translated">重构和简化迁移,以实现更全面的功能(BC)</target>
        </trans-unit>
        <trans-unit id="63b71a01b6a464d7f9608c027597cbfc83c1f3d6" translate="yes" xml:space="preserve">
          <source>Migrations/</source>
          <target state="translated">Migrations/</target>
        </trans-unit>
        <trans-unit id="66035ad3c8f4fd3253fd9b02b33a979ea942449e" translate="yes" xml:space="preserve">
          <source>Migrations/MigrationRunnerTest #1660, #1675</source>
          <target state="translated">Migrations/MigrationRunnerTest #1660,#1675</target>
        </trans-unit>
        <trans-unit id="c6854fb687a4a40230c2578c61327268b039aad9" translate="yes" xml:space="preserve">
          <source>Migrations/MigrationRunnerTest #1743</source>
          <target state="translated">Migrations/MigrationRunnerTest #1743</target>
        </trans-unit>
        <trans-unit id="e5744cf4484ab43c44ab34992c1b9ca390ed9516" translate="yes" xml:space="preserve">
          <source>Migrations/MigrationRunnerTest #2019</source>
          <target state="translated">Migrations/MigrationRunnerTest #2019</target>
        </trans-unit>
        <trans-unit id="ce8acc34e10b337bb73d6f2cc7bc86f51856cb1d" translate="yes" xml:space="preserve">
          <source>Migrations/MigrationRunnerTest #2065, 2137</source>
          <target state="translated">Migrations/MigrationRunnerTest #2065,2137</target>
        </trans-unit>
        <trans-unit id="4808db6eee638681e8c4ab709e7e1bfb072f9927" translate="yes" xml:space="preserve">
          <source>MigratiopnRollback #2035</source>
          <target state="translated">MigratiopnRollback #2035</target>
        </trans-unit>
        <trans-unit id="4ef2336b504b110096c4ff9f42f4817bd93b850f" translate="yes" xml:space="preserve">
          <source>Mimes #1368, #1465</source>
          <target state="translated">Mimes #1368,#1465</target>
        </trans-unit>
        <trans-unit id="0be8fa5cb75f09a302b19c7933a269aafc95758c" translate="yes" xml:space="preserve">
          <source>Mimes #1453</source>
          <target state="translated">Mimes #1453</target>
        </trans-unit>
        <trans-unit id="319c19b9e813f94557eb26c26b7b4388bfdc0145" translate="yes" xml:space="preserve">
          <source>Miscellaneous Functions</source>
          <target state="translated">杂项功能</target>
        </trans-unit>
        <trans-unit id="4302c5955438280974f012a80f484de76436a1b4" translate="yes" xml:space="preserve">
          <source>MockAppConfig #2272</source>
          <target state="translated">MockAppConfig #2272</target>
        </trans-unit>
        <trans-unit id="a5a4119421d4f5ec3fb7fe7781ef62beb7f063a3" translate="yes" xml:space="preserve">
          <source>Mocking Services</source>
          <target state="translated">嘲讽服务</target>
        </trans-unit>
        <trans-unit id="2bce951b21bab34d0f19787c3b911df0fb859777" translate="yes" xml:space="preserve">
          <source>Mode name</source>
          <target state="translated">模式名称</target>
        </trans-unit>
        <trans-unit id="68c2cc7f0ceaa3e499ecb4db331feb4debbbcc23" translate="yes" xml:space="preserve">
          <source>Model</source>
          <target state="translated">Model</target>
        </trans-unit>
        <trans-unit id="2eeb16a9c6ac5a20d578ae80ceb524d500f39573" translate="yes" xml:space="preserve">
          <source>Model #1311</source>
          <target state="translated">型号#1311</target>
        </trans-unit>
        <trans-unit id="4c865f9d0bd55803039922d7e49db0ced85fcf3f" translate="yes" xml:space="preserve">
          <source>Model #1345, #1380, #1373, #1440</source>
          <target state="translated">型号#1345,#1380,#1373,#1440。</target>
        </trans-unit>
        <trans-unit id="e36191532fcd22138961b21218c416036fe4f6c8" translate="yes" xml:space="preserve">
          <source>Model #1602, #a0fc68</source>
          <target state="translated">型号 #1602,#a0fc68</target>
        </trans-unit>
        <trans-unit id="9521e63acb6883adec67b9036a407fcb3638f615" translate="yes" xml:space="preserve">
          <source>Model #1617, #1632, #1656, #1689</source>
          <target state="translated">型号#1617,#1632,#1656,#1689。</target>
        </trans-unit>
        <trans-unit id="c2f106b0c15d2e7e410512c466e4ec178b7e7bf8" translate="yes" xml:space="preserve">
          <source>Model #1793, #1769, #1804, #1808, #1812, #1813, #1817, #1829, #1746, #1861</source>
          <target state="translated">型号#1793,#1769,#1804,#1808,#1812,#1813,#1817,#1829,#1746,#1861。</target>
        </trans-unit>
        <trans-unit id="0935d4730122c0c8259116369da51107e48c4f90" translate="yes" xml:space="preserve">
          <source>Model #1930, #1943, #1963, #1981</source>
          <target state="translated">型号#1930,#1943,#1963,#1981。</target>
        </trans-unit>
        <trans-unit id="97d7f6fcee2ec0d91825b412c521d70777d53582" translate="yes" xml:space="preserve">
          <source>Model #2050, #2051, #2053, #2054</source>
          <target state="translated">型号#2050、#2051、#2053、#2054。</target>
        </trans-unit>
        <trans-unit id="45343c9d835297d8f0c07f127c906be8ffc599e3" translate="yes" xml:space="preserve">
          <source>Model #2090</source>
          <target state="translated">型号#2090</target>
        </trans-unit>
        <trans-unit id="a84af887b6432eef6df58c66d5bccbfb80281fb9" translate="yes" xml:space="preserve">
          <source>Model #2231</source>
          <target state="translated">型号#2231</target>
        </trans-unit>
        <trans-unit id="30c36576375ae4c341ba3b7835b99e750bab9928" translate="yes" xml:space="preserve">
          <source>Model #2289, 2332</source>
          <target state="translated">型号#2289,2332</target>
        </trans-unit>
        <trans-unit id="1d2b770049e8a805941e829573c09b1ded686e5f" translate="yes" xml:space="preserve">
          <source>Model #4f4a37, #6e549a, #37dbc1, #1712, #1763</source>
          <target state="translated">型号#4f4a37,#6e549a,#37dbc1,#1712,#1763。</target>
        </trans-unit>
        <trans-unit id="e3d1ca66c41254171e26939298c91e4676ab6741" translate="yes" xml:space="preserve">
          <source>Model Events</source>
          <target state="translated">模范活动</target>
        </trans-unit>
        <trans-unit id="8413017bbf695648f244a71e5a219f0422c504d2" translate="yes" xml:space="preserve">
          <source>Model Updating</source>
          <target state="translated">模型更新</target>
        </trans-unit>
        <trans-unit id="dc541a59c36c124e03def2af8a87a1f5d5d34eb3" translate="yes" xml:space="preserve">
          <source>Model classes are stored in your &lt;strong&gt;application/models/&lt;/strong&gt; directory. They can be nested within sub-directories if you want this type of organization.</source>
          <target state="translated">模型类存储在&lt;strong&gt;application / models /&lt;/strong&gt;目录中。如果需要这种类型的组织，可以将它们嵌套在子目录中。</target>
        </trans-unit>
        <trans-unit id="9a44ef615916a4fab8a8e8aac039ef0308295c8d" translate="yes" xml:space="preserve">
          <source>Model-View-Controller</source>
          <target state="translated">Model-View-Controller</target>
        </trans-unit>
        <trans-unit id="b36a63bc3fe43961fc65d47d87018d35df5a1da6" translate="yes" xml:space="preserve">
          <source>Model-View-Controller Based System</source>
          <target state="translated">基于模型-视图-控制器的系统</target>
        </trans-unit>
        <trans-unit id="270836328e6579b01d4429364e4344240e7f7712" translate="yes" xml:space="preserve">
          <source>Model-View-Controller basics</source>
          <target state="translated">模型-视图-控制器基础知识</target>
        </trans-unit>
        <trans-unit id="8d2fbbcd7cff5c513f04eca87b525cb904185f1e" translate="yes" xml:space="preserve">
          <source>Model: harden database servers</source>
          <target state="translated">模式:加固数据库服务器</target>
        </trans-unit>
        <trans-unit id="cc8272383b9859e48c05c088ada39430736bc6b1" translate="yes" xml:space="preserve">
          <source>Model: mandate strong encrypted communications with servers</source>
          <target state="translated">模式:规定与服务器进行强有力的加密通信。</target>
        </trans-unit>
        <trans-unit id="f7c87ca8e50f58816968fd5de99691f574a20611" translate="yes" xml:space="preserve">
          <source>Model: parameterized queries</source>
          <target state="translated">模式:参数化查询</target>
        </trans-unit>
        <trans-unit id="dd0e4b33839ac4194c4df0cf73e0231f1b93a06a" translate="yes" xml:space="preserve">
          <source>Model: validate role</source>
          <target state="translated">模式:验证角色</target>
        </trans-unit>
        <trans-unit id="ef38dd41680f88c2ee862333c0e31aaab4bf44ab" translate="yes" xml:space="preserve">
          <source>Model: validate roles</source>
          <target state="translated">模式:验证角色</target>
        </trans-unit>
        <trans-unit id="ed8390427e85108b2a02833785b7dae69bc19602" translate="yes" xml:space="preserve">
          <source>Model: validate user roles before updating data</source>
          <target state="translated">模型:在更新数据前验证用户角色</target>
        </trans-unit>
        <trans-unit id="b52cfd3840e8ffc13d14f0ce2c4a92311ca4556d" translate="yes" xml:space="preserve">
          <source>ModelException #1829</source>
          <target state="translated">ModelException #1829</target>
        </trans-unit>
        <trans-unit id="273994fb46ec4a4c3c81a656daffa2cfbdd6e5d4" translate="yes" xml:space="preserve">
          <source>ModelException #2054</source>
          <target state="translated">ModelException #2054</target>
        </trans-unit>
        <trans-unit id="864561e8381b49f8af56301454b69103b489af76" translate="yes" xml:space="preserve">
          <source>ModelTest #1617, #1689</source>
          <target state="translated">ModelTest #1617,#1689</target>
        </trans-unit>
        <trans-unit id="ee419d3b6ef44bb984d0ebcce0baa45ad80d6555" translate="yes" xml:space="preserve">
          <source>ModelTest #1930, #1943, #1981</source>
          <target state="translated">ModelTest #1930,#1943,#1981。</target>
        </trans-unit>
        <trans-unit id="2af8e8ee280d754d246ae204a209ed312b471d08" translate="yes" xml:space="preserve">
          <source>ModelTest #2002, #2051, #2053, #2054</source>
          <target state="translated">ModelTest #2002,#2051,#2053,#2054</target>
        </trans-unit>
        <trans-unit id="af30ae11b6416e70259ec1144589bcf9631ed615" translate="yes" xml:space="preserve">
          <source>ModelTest #2090</source>
          <target state="translated">型号测试#2090</target>
        </trans-unit>
        <trans-unit id="ca9848f706cc8ca63da227940f1e4065f90ac44e" translate="yes" xml:space="preserve">
          <source>ModelTest #2231</source>
          <target state="translated">型号测试#2231</target>
        </trans-unit>
        <trans-unit id="95a59b8f3e41ba9309b71345e3b8b24fdfad857c" translate="yes" xml:space="preserve">
          <source>ModelTest #37dbc1, #4ff1f5, #1763</source>
          <target state="translated">ModelTest #37dbc1,#4ff1f5,#1763</target>
        </trans-unit>
        <trans-unit id="fae2e5efbbb844a23e0e1b618d0a5e27205f5aa5" translate="yes" xml:space="preserve">
          <source>Modeling Data</source>
          <target state="translated">数据建模</target>
        </trans-unit>
        <trans-unit id="f3798f81c7b6fecad2cbfec741314f8a66c0eca3" translate="yes" xml:space="preserve">
          <source>Models</source>
          <target state="translated">Models</target>
        </trans-unit>
        <trans-unit id="aa2bb6f267c7f647f6759e9cc81866832d6e53c1" translate="yes" xml:space="preserve">
          <source>Models are &lt;strong&gt;optionally&lt;/strong&gt; available for those who want to use a more traditional MVC approach.</source>
          <target state="translated">对于想要使用更传统的MVC方法的人来说，模型是&lt;strong&gt;可选的&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="2ce143308833ea115ea1d065350c70586547791c" translate="yes" xml:space="preserve">
          <source>Models are PHP classes that are designed to work with information in your database. For example, let&amp;rsquo;s say you use CodeIgniter to manage a blog. You might have a model class that contains functions to insert, update, and retrieve your blog data. Here is an example of what such a model class might look like:</source>
          <target state="translated">模型是旨在与数据库中的信息一起使用的PHP类。例如，假设您使用CodeIgniter管理博客。您可能有一个模型类，其中包含用于插入，更新和检索博客数据的函数。这是一个此类模型类的示例：</target>
        </trans-unit>
        <trans-unit id="3fc6895637d47d242be76bdb83a9d08c9bad2e41" translate="yes" xml:space="preserve">
          <source>Models are always instantiated by their fully-qualified class name, so no special access is provided:</source>
          <target state="translated">模型总是由其全限定的类名实例化,所以不提供特殊的访问。</target>
        </trans-unit>
        <trans-unit id="5461d5804c53ae5875be6f7762ac6c389f2ae708" translate="yes" xml:space="preserve">
          <source>Models are typically stored in &lt;strong&gt;/app/Models&lt;/strong&gt;, though they can use a namespace to be grouped however you need.</source>
          <target state="translated">模型通常存储在&lt;strong&gt;/ app / Models中&lt;/strong&gt;，尽管它们可以根据需要使用命名空间进行分组。</target>
        </trans-unit>
        <trans-unit id="01eb144089cf8e157bf3dd75607fe42eb225ab34" translate="yes" xml:space="preserve">
          <source>Models are typically stored in the &lt;code&gt;app/Models&lt;/code&gt; directory. They should have a namespace that matches their location within the directory, like &lt;code&gt;namespace App\Models&lt;/code&gt;.</source>
          <target state="translated">模型通常存储在 &lt;code&gt;app/Models&lt;/code&gt; 目录中。它们应具有与其在目录中的位置匹配的名称空间，例如 &lt;code&gt;namespace App\Models&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1ce933ee61509d678c0bfd1382fab7fec9416d44" translate="yes" xml:space="preserve">
          <source>Models found in the &lt;em&gt;models/&lt;/em&gt; folder</source>
          <target state="translated">在&lt;em&gt;models /&lt;/em&gt;文件夹中找到的&lt;em&gt;模型&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6430616e316d540e076f049d0b7f8d76409f06e7" translate="yes" xml:space="preserve">
          <source>Models now require a primary key</source>
          <target state="translated">模型现在需要一个主键</target>
        </trans-unit>
        <trans-unit id="34d47c90e47f9e7f870dacb826a06a5720659c8c" translate="yes" xml:space="preserve">
          <source>Models provide a way to interact with a specific table in your database. They come out of the box with helper methods for much of the standard ways you would need to interact with a database table, including finding records, updating records, deleting records, and more.</source>
          <target state="translated">模型提供了一种与数据库中的特定表交互的方法。它们开箱即用,为您需要与数据库表交互的大部分标准方法提供帮助方法,包括查找记录、更新记录、删除记录等。</target>
        </trans-unit>
        <trans-unit id="f8717fb263c5d564c64570c12c6e082a558e653c" translate="yes" xml:space="preserve">
          <source>Models, Views, and Controllers</source>
          <target state="translated">模型、视图和控制器</target>
        </trans-unit>
        <trans-unit id="d45f0402146f97a0ea4e423da067ab13e3b51ac2" translate="yes" xml:space="preserve">
          <source>Modifies a table column. Usage: See &lt;a href=&quot;#modifying-a-column-in-a-table&quot;&gt;Modifying a Column in a Table&lt;/a&gt;.</source>
          <target state="translated">修改表格列。用法：请参阅&amp;ldquo; &lt;a href=&quot;#modifying-a-column-in-a-table&quot;&gt;修改表中的列&amp;rdquo;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3eb1bc49eb93d4bbabab3bb57d58c7c392d21e2f" translate="yes" xml:space="preserve">
          <source>Modifying Directory Locations</source>
          <target state="translated">修改目录位置</target>
        </trans-unit>
        <trans-unit id="4f15aa8ca874492770383bfd8d9e19998f3752e1" translate="yes" xml:space="preserve">
          <source>Modifying Tables</source>
          <target state="translated">修改表格</target>
        </trans-unit>
        <trans-unit id="a6a1cf1f8c70c268ba8c051031d188ec5a0c9450" translate="yes" xml:space="preserve">
          <source>Modifying a Column in a Table</source>
          <target state="translated">修改表中的列</target>
        </trans-unit>
        <trans-unit id="1d0f193cd2383328292798f7e63fc842842f32b6" translate="yes" xml:space="preserve">
          <source>Modifying the Message With Context</source>
          <target state="translated">使用上下文修改消息</target>
        </trans-unit>
        <trans-unit id="7e8bc3882617230cda96f81e2c15a839a822dcb2" translate="yes" xml:space="preserve">
          <source>Modifying the Value</source>
          <target state="translated">修改值</target>
        </trans-unit>
        <trans-unit id="e3d5877865ad0f71617a1753503ff15016d343a8" translate="yes" xml:space="preserve">
          <source>Modules #1665</source>
          <target state="translated">模块#1665</target>
        </trans-unit>
        <trans-unit id="5132d424204bcfedbc339cff3aa80687cdf3c0ec" translate="yes" xml:space="preserve">
          <source>Modules that define a &amp;ldquo;current user&amp;rdquo; should define the function &lt;code&gt;user_id()&lt;/code&gt; to return the user&amp;rsquo;s unique identifier, or &lt;code&gt;null&lt;/code&gt; for &amp;ldquo;no current user&amp;rdquo;</source>
          <target state="translated">定义&amp;ldquo;当前用户&amp;rdquo;的模块应定义函数 &lt;code&gt;user_id()&lt;/code&gt; 以返回用户的唯一标识符，对于&amp;ldquo;无当前用户&amp;rdquo;为 &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c0319525c8b3b35899f57588e9fbbf63f1b20127" translate="yes" xml:space="preserve">
          <source>Modules that handle login and logout operations should trigger the &lt;code&gt;login&lt;/code&gt; and &lt;code&gt;logout&lt;/code&gt; Events when successful</source>
          <target state="translated">成功处理登录和注销操作的模块应触发 &lt;code&gt;login&lt;/code&gt; 和 &lt;code&gt;logout&lt;/code&gt; 事件</target>
        </trans-unit>
        <trans-unit id="f7f5736f000670e4324c3d5ce08b2d38e991c24d" translate="yes" xml:space="preserve">
          <source>Month name</source>
          <target state="translated">月份名称</target>
        </trans-unit>
        <trans-unit id="b44ad06989798965210da32f817e3ec3c0718854" translate="yes" xml:space="preserve">
          <source>More information about routing can be found in the URI Routing &lt;a href=&quot;../general/routing&quot;&gt;documentation&lt;/a&gt;.</source>
          <target state="translated">有关路由的更多信息，请参见URI路由&lt;a href=&quot;../general/routing&quot;&gt;文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f28ae7a79ef261c2c93ebc8eeacb612fa881caee" translate="yes" xml:space="preserve">
          <source>More information about routing can be found in the URI Routing &lt;a href=&quot;../incoming/routing&quot;&gt;documentation&lt;/a&gt;.</source>
          <target state="translated">有关路由的更多信息，请参见URI路由&lt;a href=&quot;../incoming/routing&quot;&gt;文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="995ceff0643549c7905313182ba91d5d90e66221" translate="yes" xml:space="preserve">
          <source>More simple way of getting model instances</source>
          <target state="translated">更简单的获取模型实例的方法</target>
        </trans-unit>
        <trans-unit id="ca1735cffdd12d3212da09522c562d75dec1c609" translate="yes" xml:space="preserve">
          <source>Most communication is done through the &lt;code&gt;request()&lt;/code&gt; method, which fires off the request, and then returns a Response instance to you. This takes the HTTP method, the url and an array of options as the parameters.</source>
          <target state="translated">大多数通信是通过 &lt;code&gt;request()&lt;/code&gt; 方法完成的，该方法会触发请求，然后将Response实例返回给您。这将使用HTTP方法，URL和选项数组作为参数。</target>
        </trans-unit>
        <trans-unit id="a2c3839667faf893586f5d4e669c976641f092c1" translate="yes" xml:space="preserve">
          <source>Most database engines support some form of prepared statements, that allow you to prepare a query once, and then run that query multiple times with new sets of data. This eliminates the possibility of SQL injection since the data is passed to the database in a different format than the query itself. When you need to run the same query multiple times it can be quite a bit faster, too. However, to use it for every query can have major performance hits, since you&amp;rsquo;re calling out to the database twice as often. Since the Query Builder and Database connections already handle escaping the data for you, the safety aspect is already taken care of for you. There will be times, though, when you need to ability to optimize the query by running a prepared statement, or prepared query.</source>
          <target state="translated">大多数数据库引擎都支持某种形式的预处理语句，该语句使您可以准备一次查询，然后使用新的数据集多次运行该查询。由于数据以与查询本身不同的格式传递到数据库，因此消除了SQL注入的可能性。当您需要多次运行同一查询时，它也可以更快。但是，将它用于每个查询都会对性能产生重大影响，因为您两次调用数据库的频率就很高。由于查询生成器和数据库连接已经为您处理了转义数据，因此安全方面已为您处理。但是，有时候您需要能够通过运行一个准备好的语句或准备好的查询来优化查询。</target>
        </trans-unit>
        <trans-unit id="664fdcdad87fddbd4ffa30b716e9f883cb4bed03" translate="yes" xml:space="preserve">
          <source>Most events are defined within the &lt;strong&gt;app/Config/Events.php&lt;/strong&gt; file. You can subscribe an action to an event with the Events class&amp;rsquo; &lt;code&gt;on()&lt;/code&gt; method. The first parameter is the name of the event to subscribe to. The second parameter is a callable that will be run when that event is triggered:</source>
          <target state="translated">大多数事件在&lt;strong&gt;app / Config / Events.php&lt;/strong&gt;文件中定义。您可以使用Events类的 &lt;code&gt;on()&lt;/code&gt; 方法为事件订阅动作。第一个参数是要订阅的事件的名称。第二个参数是可调用的，它将在触发该事件时运行：</target>
        </trans-unit>
        <trans-unit id="116301c6866f86f5ea978a7d88c80eee2f96bee7" translate="yes" xml:space="preserve">
          <source>Most of the preferences have default values that will be used if you do not set them.</source>
          <target state="translated">大多数的偏好设置都有默认值,如果你不设置,就会使用这些值。</target>
        </trans-unit>
        <trans-unit id="b459604b0f135e3b57a2c7f27d38a481a961d01c" translate="yes" xml:space="preserve">
          <source>Most tests require some preparation in order to run correctly. PHPUnit&amp;rsquo;s &lt;code&gt;TestCase&lt;/code&gt; provides four methods to help with staging and clean up:</source>
          <target state="translated">大多数测试需要一些准备才能正确运行。PHPUnit的 &lt;code&gt;TestCase&lt;/code&gt; 提供了四种方法来帮助暂存和清理：</target>
        </trans-unit>
        <trans-unit id="a63b9abc427da0a44530fd123a81a4a38abb8e32" translate="yes" xml:space="preserve">
          <source>Moves the internal results row pointer to the desired offset.</source>
          <target state="translated">将内部结果行指针移动到所需的偏移量。</target>
        </trans-unit>
        <trans-unit id="ddaffac14ac463c98c99282dc6679f7a80726b89" translate="yes" xml:space="preserve">
          <source>Moving Files</source>
          <target state="translated">移动文件</target>
        </trans-unit>
        <trans-unit id="c023414fa6d5776d9048cc73233fc762fd2ebe04" translate="yes" xml:space="preserve">
          <source>Moving an uploaded file can fail, with an HTTPException, under several circumstances:</source>
          <target state="translated">在几种情况下,移动上传的文件会失败,出现HTTPException。</target>
        </trans-unit>
        <trans-unit id="547cc125dadbc32ef9b7354ba68ec7522700f051" translate="yes" xml:space="preserve">
          <source>Much like &lt;code&gt;getPrevious()&lt;/code&gt; and &lt;code&gt;getNext()&lt;/code&gt;, these methods return links to the first and last pages in the result set.</source>
          <target state="translated">与 &lt;code&gt;getPrevious()&lt;/code&gt; 和 &lt;code&gt;getNext()&lt;/code&gt; 类似，这些方法返回指向结果集中第一页和最后一页的链接。</target>
        </trans-unit>
        <trans-unit id="5d51c7bf26cbe027d4ab2ef109ff389740770cab" translate="yes" xml:space="preserve">
          <source>Much like Time&amp;rsquo;s humanize() method, this returns a string that displays the difference between the times in a human readable format that is geared towards being easily understood. It can create strings like &amp;lsquo;3 hours ago&amp;rsquo;, &amp;lsquo;in 1 month&amp;rsquo;, etc. The biggest differences are in how very recent dates are handled:</source>
          <target state="translated">与Time的humanize（）方法非常相似，此方法返回一个字符串，该字符串以易于理解的人类可读格式显示时间之间的时差。它可以创建诸如&amp;ldquo; 3小时前&amp;rdquo;，&amp;ldquo; 1个月内&amp;rdquo;之类的字符串。最大的区别在于最近日期的处理方式：</target>
        </trans-unit>
        <trans-unit id="eea36daf70a9f45dc0c4ba2490edb02e1066a1e0" translate="yes" xml:space="preserve">
          <source>Much like the &lt;a href=&quot;common_functions&quot;&gt;common functions&lt;/a&gt;, the compatibility functions are always available, as long as their dependencies are met.</source>
          <target state="translated">与&lt;a href=&quot;common_functions&quot;&gt;通用功能&lt;/a&gt;很相似，只要满足依赖关系，兼容性功能就始终可用。</target>
        </trans-unit>
        <trans-unit id="7e4d42ac093fc14bacc5d8329d234a10abc81f1f" translate="yes" xml:space="preserve">
          <source>Much of modern PHP development requires building API&amp;rsquo;s, whether simply to provide data for a javascript-heavy single page application, or as a standalone product. CodeIgniter provides an API Response trait that can be used with any controller to make common response types simple, with no need to remember which HTTP status code should be returned for which response types.</source>
          <target state="translated">许多现代PHP开发都需要构建API，无论是简单地为重载javascript的单页应用程序提供数据还是作为独立产品提供。CodeIgniter提供了一个API响应特征，可以与任何控制器一起使用，以简化公共响应类型，而无需记住应该为哪种响应类型返回哪个HTTP状态代码。</target>
        </trans-unit>
        <trans-unit id="57916ab8af22a09d2520bdd9f877353625ae5d0f" translate="yes" xml:space="preserve">
          <source>Multi-server configuration with an optional &lt;em&gt;weight&lt;/em&gt; parameter as the third colon-separated (&lt;code&gt;:weight&lt;/code&gt;) value is also supported, but we have to note that we haven&amp;rsquo;t tested if that is reliable.</source>
          <target state="translated">还支持将可选服务器的&lt;em&gt;weight&lt;/em&gt;参数作为第三个冒号（ &lt;code&gt;:weight&lt;/code&gt; ）值的多服务器配置，但是必须注意，我们尚未测试这是否可靠。</target>
        </trans-unit>
        <trans-unit id="28bb37ed79034c9cf7806eaf79c9c2b81d2aadc7" translate="yes" xml:space="preserve">
          <source>Multibyte String</source>
          <target state="translated">多字节字符串</target>
        </trans-unit>
        <trans-unit id="380d02a5144467138e83b85afe9b87b0857c1ef3" translate="yes" xml:space="preserve">
          <source>Multiple Calls to the Same Hook</source>
          <target state="translated">多次呼叫同一个钩子</target>
        </trans-unit>
        <trans-unit id="4a409f347b4436212ae5679fbaef47bf82fdddfb" translate="yes" xml:space="preserve">
          <source>Multiple Connections to Same Database</source>
          <target state="translated">同一数据库的多个连接</target>
        </trans-unit>
        <trans-unit id="b724d17f477233b318c04305bcd69cbc07f5cdbe" translate="yes" xml:space="preserve">
          <source>Multiple Memcached servers can be specified in the memcached.php configuration file, located in the _application/config/* directory.</source>
          <target state="translated">可以在位于_application/config/*目录下的memcached.php配置文件中指定多个Memcached服务器。</target>
        </trans-unit>
        <trans-unit id="9cae85b1776a27b4897d722abe985bb6b8afefb8" translate="yes" xml:space="preserve">
          <source>Multiple Protocols: Mail, Sendmail, and SMTP</source>
          <target state="translated">多种协议。邮件、Sendmail和SMTP</target>
        </trans-unit>
        <trans-unit id="e88e13e6706fb1291071d31af9e2526b344a490b" translate="yes" xml:space="preserve">
          <source>Multiple calls to addField() are cumulative.</source>
          <target state="translated">对addField()的多次调用是累计的。</target>
        </trans-unit>
        <trans-unit id="d04302609118850f053f41d4170b518fb9554d6f" translate="yes" xml:space="preserve">
          <source>Multiple calls to add_field() are cumulative.</source>
          <target state="translated">对add_field()的多次调用是累计的。</target>
        </trans-unit>
        <trans-unit id="56e55c9ca20fc6872fdaeaada1fd02d43aa28688" translate="yes" xml:space="preserve">
          <source>Multiple column non-primary keys must be sent as an array. Sample output below is for MySQL.</source>
          <target state="translated">多列非主键必须以数组形式发送。以下是MySQL的输出示例。</target>
        </trans-unit>
        <trans-unit id="46d68d1604f488dbe96f5a3022a8a29df6492c7a" translate="yes" xml:space="preserve">
          <source>Multiple files</source>
          <target state="translated">多个文件</target>
        </trans-unit>
        <trans-unit id="92dcf9faa5c51e9b8a99f8ab47128bd346f2f413" translate="yes" xml:space="preserve">
          <source>Multiple filters can be applied to the value by piping multiple ones together. They are processed in order, from left to right:</source>
          <target state="translated">可以通过将多个过滤器并在一起,对该值进行多个过滤器的处理。它们按照从左到右的顺序进行处理。</target>
        </trans-unit>
        <trans-unit id="6f6dc9f7b82b69ac4a2ebaf51fe7a8e4191e02ed" translate="yes" xml:space="preserve">
          <source>Multiple function calls can be made if you need several joins in one query.</source>
          <target state="translated">如果在一个查询中需要多个联接,可以进行多次函数调用。</target>
        </trans-unit>
        <trans-unit id="daaa329caefed028a34e3484742ff33f2a34e26f" translate="yes" xml:space="preserve">
          <source>Multiple recipients</source>
          <target state="translated">多个收件人</target>
        </trans-unit>
        <trans-unit id="06cf6def4457c4d9a93b362e71dfa92a49db4ecb" translate="yes" xml:space="preserve">
          <source>Multiple records may be updated with a single call by passing an array of primary keys as the first parameter:</source>
          <target state="translated">通过传递一个主键数组作为第一个参数,可以用一次调用更新多个记录。</target>
        </trans-unit>
        <trans-unit id="edf84bcdd705f98310cd4834a2d64e2a54b6583f" translate="yes" xml:space="preserve">
          <source>Mutators</source>
          <target state="translated">Mutators</target>
        </trans-unit>
        <trans-unit id="6dc21afca93624bf00f507b963979599291a29ff" translate="yes" xml:space="preserve">
          <source>MySQL (5.1+) via the &lt;em&gt;MySQLi&lt;/em&gt; driver</source>
          <target state="translated">通过&lt;em&gt;MySQLi&lt;/em&gt;驱动程序的MySQL（5.1+）</target>
        </trans-unit>
        <trans-unit id="28b44e1ed39acb3e0d4ab5cfb8eae27da41b4dad" translate="yes" xml:space="preserve">
          <source>MySQL (5.1+) via the &lt;em&gt;pdo&lt;/em&gt; driver</source>
          <target state="translated">通过&lt;em&gt;pdo&lt;/em&gt;驱动程序的MySQL（5.1+）</target>
        </trans-unit>
        <trans-unit id="5220d850a9cedf604eb12f4a809d3b970282586f" translate="yes" xml:space="preserve">
          <source>MySQL-formatted date</source>
          <target state="translated">MySQL格式化的日期</target>
        </trans-unit>
        <trans-unit id="4bf3b636c78b93340089e1ff444c9b9ab26769f6" translate="yes" xml:space="preserve">
          <source>MySQLi/</source>
          <target state="translated">MySQLi/</target>
        </trans-unit>
        <trans-unit id="5a73dfa7783e2912af6f66c3d15f447a762b3de7" translate="yes" xml:space="preserve">
          <source>MySQLi/Connection #1335, #1449</source>
          <target state="translated">MySQLi/连接 #1335,#1449</target>
        </trans-unit>
        <trans-unit id="13d163c519aa4cbfc5a05f0aae2fa527136e099b" translate="yes" xml:space="preserve">
          <source>MySQLi/Connection #1561, #8f205a</source>
          <target state="translated">MySQLi/连接 #1561,#8f205a</target>
        </trans-unit>
        <trans-unit id="9f4c952773e44900c1ffe4f03feec7d62eda30a5" translate="yes" xml:space="preserve">
          <source>MySQLi/Connection #1896</source>
          <target state="translated">MySQLi/连接#1896</target>
        </trans-unit>
        <trans-unit id="187752d1d8b5329f6413b5a1c054e43757de0f1e" translate="yes" xml:space="preserve">
          <source>MySQLi/Connection #2201, 2229</source>
          <target state="translated">MySQLi/连接 #2201,2229</target>
        </trans-unit>
        <trans-unit id="eff5b547f503542a44ecfea5a01caf67fc1b23fb" translate="yes" xml:space="preserve">
          <source>MySQLi/Forge #1343, #1344, #1530</source>
          <target state="translated">MySQLi/Forge #1343,#1344,#1530</target>
        </trans-unit>
        <trans-unit id="34c19c1f46ba9db32d160c3c0ecd083dc052469e" translate="yes" xml:space="preserve">
          <source>MySQLi/Forge #1899</source>
          <target state="translated">MySQLi/Forge #1899</target>
        </trans-unit>
        <trans-unit id="e06a676c71b1b6e55453056062cda4a79373be6e" translate="yes" xml:space="preserve">
          <source>MySQLi/Forge #2100</source>
          <target state="translated">MySQLi/Forge #2100</target>
        </trans-unit>
        <trans-unit id="42214f9ecf5d7dd47c16bf350d3843c9fcfe69a4" translate="yes" xml:space="preserve">
          <source>MySQLi/Result #1530</source>
          <target state="translated">MySQLi/结果#1530</target>
        </trans-unit>
        <trans-unit id="ec023d154e388626f611f199f102d6404f48fd1b" translate="yes" xml:space="preserve">
          <source>MySQLi/Utils #1209</source>
          <target state="translated">MySQLi/Utils #1209</target>
        </trans-unit>
        <trans-unit id="08d2e98e6754af941484848930ccbaddfefe13d6" translate="yes" xml:space="preserve">
          <source>N/A</source>
          <target state="translated">N/A</target>
        </trans-unit>
        <trans-unit id="abc2e60850b5763ce5d1c173ae0815f72e928340" translate="yes" xml:space="preserve">
          <source>NGINX</source>
          <target state="translated">NGINX</target>
        </trans-unit>
        <trans-unit id="eef19c54306daa69eda49c0272623bdb5e2b341f" translate="yes" xml:space="preserve">
          <source>NULL</source>
          <target state="translated">NULL</target>
        </trans-unit>
        <trans-unit id="5a5aa17aff68e0b960c5d9bebe3d344b0cc416c1" translate="yes" xml:space="preserve">
          <source>NULL on failure or the array item.</source>
          <target state="translated">失败时为NULL或数组项。</target>
        </trans-unit>
        <trans-unit id="709a23220f2c3d64d1e1d6d18c4d5280f8d82fca" translate="yes" xml:space="preserve">
          <source>Name</source>
          <target state="translated">Name</target>
        </trans-unit>
        <trans-unit id="185c40e821a43ee79c5bebbf84a2253f21a51093" translate="yes" xml:space="preserve">
          <source>Name Config</source>
          <target state="translated">名称配置</target>
        </trans-unit>
        <trans-unit id="6e8d44fadcf61ab42000fb3b3fa3bd78ca16f559" translate="yes" xml:space="preserve">
          <source>Name of the file that was uploaded, including the filename extension</source>
          <target state="translated">上传的文件名,包括文件扩展名。</target>
        </trans-unit>
        <trans-unit id="f5d052329f355f2ba926e490ff8a0848dea519b8" translate="yes" xml:space="preserve">
          <source>Named Bindings</source>
          <target state="translated">命名装订</target>
        </trans-unit>
        <trans-unit id="d7c4875b7ebdb224c2a6562cf3347f7d1fded855" translate="yes" xml:space="preserve">
          <source>Namespaced Variables</source>
          <target state="translated">命名间隔变量</target>
        </trans-unit>
        <trans-unit id="108bf8e95a3eff7ac63f8893d5c56e4f9132b002" translate="yes" xml:space="preserve">
          <source>Namespaced Views</source>
          <target state="translated">命名间隔视图</target>
        </trans-unit>
        <trans-unit id="ecb54a5b592ccb694faeade978ee096eaff3b28e" translate="yes" xml:space="preserve">
          <source>Namespaced variables use a dot notation to qualify variable names so they will be unique when incorporated into the environment. This is done by including a distinguishing prefix followed by a dot (.), and then the variable name itself.</source>
          <target state="translated">命名空间变量使用点符号来限定变量名,这样当它们被纳入环境时,就会是唯一的。这是通过在变量名后面加上点号(.)和变量名本身来实现的。</target>
        </trans-unit>
        <trans-unit id="be09a63bd1995e99cd22064cdc39a4bae464033d" translate="yes" xml:space="preserve">
          <source>Namespaces</source>
          <target state="translated">Namespaces</target>
        </trans-unit>
        <trans-unit id="ca5dcb142f49ca27343a2968087fe7377fe27000" translate="yes" xml:space="preserve">
          <source>Namespaces are not strictly required for test classes, but they are helpful to ensure no class names collide.</source>
          <target state="translated">命名空间对于测试类来说并不是严格要求的,但它们对于确保没有类名碰撞是有帮助的。</target>
        </trans-unit>
        <trans-unit id="8af56df8a9cb35f56b67edd6d269d4e86defc0d0" translate="yes" xml:space="preserve">
          <source>Naming Conventions</source>
          <target state="translated">命名惯例</target>
        </trans-unit>
        <trans-unit id="ea3c2a67fdb974320c2d4fa47411bc1dbace11e3" translate="yes" xml:space="preserve">
          <source>Nearly identical to the &lt;a href=&quot;#anchor&quot;&gt;&lt;code&gt;anchor()&lt;/code&gt;&lt;/a&gt; function except that it opens the URL in a new window. You can specify JavaScript window attributes in the third parameter to control how the window is opened. If the third parameter is not set it will simply open a new window with your own browser settings.</source>
          <target state="translated">几乎与&lt;a href=&quot;#anchor&quot;&gt; &lt;code&gt;anchor()&lt;/code&gt; &lt;/a&gt;函数相同，除了它在新窗口中打开URL。您可以在第三个参数中指定JavaScript窗口属性，以控制窗口的打开方式。如果未设置第三个参数，它将仅使用您自己的浏览器设置打开一个新窗口。</target>
        </trans-unit>
        <trans-unit id="d91e10f8623afd45a7aff1707400ee18a00cad2c" translate="yes" xml:space="preserve">
          <source>Negotiate #1306</source>
          <target state="translated">谈判#1306</target>
        </trans-unit>
        <trans-unit id="80ebd9f341c97c3e2f4a6ab95ad183dc797ad406" translate="yes" xml:space="preserve">
          <source>NegotiateTest #1306</source>
          <target state="translated">NegotiateTest #1306</target>
        </trans-unit>
        <trans-unit id="4c83646ba4c79426a664835479d129f505a452fb" translate="yes" xml:space="preserve">
          <source>Negotiating</source>
          <target state="translated">Negotiating</target>
        </trans-unit>
        <trans-unit id="a3bd4b1aa6fa4a4c692753b67da3c03803ceb8a0" translate="yes" xml:space="preserve">
          <source>Nested Arrays</source>
          <target state="translated">嵌套数组</target>
        </trans-unit>
        <trans-unit id="e773e8c231f00b8c6b4c1b3bf7ef1a6a5d98e9f1" translate="yes" xml:space="preserve">
          <source>Nested Substitutions</source>
          <target state="translated">嵌套替换</target>
        </trans-unit>
        <trans-unit id="a7f546c50a0939b939f9f2b1b67ad7feb9b2ae76" translate="yes" xml:space="preserve">
          <source>Nesting Seeders</source>
          <target state="translated">嵌套式播种机</target>
        </trans-unit>
        <trans-unit id="86400f6e4dc89e55c3c4d3a947c05cc95f2083c6" translate="yes" xml:space="preserve">
          <source>Nesting Variables</source>
          <target state="translated">嵌套变量</target>
        </trans-unit>
        <trans-unit id="f0fae8ae3924848a6bfc5e456d04122af81bb889" translate="yes" xml:space="preserve">
          <source>Never combine statements on one line.</source>
          <target state="translated">切勿将语句合并在一行。</target>
        </trans-unit>
        <trans-unit id="a1e12395bf3c98cfcc33a4a16b4eb9a4e1fcbb5e" translate="yes" xml:space="preserve">
          <source>Never insert information into your database without escaping it. Please see the section that discusses &lt;a href=&quot;../database/queries&quot;&gt;database queries&lt;/a&gt; for more information.</source>
          <target state="translated">切勿在未转义的情况下将信息插入数据库。请参阅讨论&lt;a href=&quot;../database/queries&quot;&gt;数据库查询&lt;/a&gt;的部分以获取更多信息。</target>
        </trans-unit>
        <trans-unit id="a26f96b42ddebe18a3a7fe4884b0ff5bd60d21b8" translate="yes" xml:space="preserve">
          <source>New $CSRFHeaderName property in App/Config/App</source>
          <target state="translated">在App/Config/App中新增$CSRFHeaderName属性。</target>
        </trans-unit>
        <trans-unit id="025519ea3f483eb11a3c8608b8a731eee0947b1b" translate="yes" xml:space="preserve">
          <source>New Features</source>
          <target state="translated">新功能</target>
        </trans-unit>
        <trans-unit id="103cdaeee869db70025b07a1c08990a34493e3f3" translate="yes" xml:space="preserve">
          <source>New View Layouts provide simple way to create site site view templates.</source>
          <target state="translated">新的视图布局提供了创建网站站点视图模板的简单方法。</target>
        </trans-unit>
        <trans-unit id="d53aa4160fda608d41d4dcb9040ec950dfc3debe" translate="yes" xml:space="preserve">
          <source>New alpha_numeric_punct validation rule</source>
          <target state="translated">新的alpha_numeric_punct验证规则。</target>
        </trans-unit>
        <trans-unit id="f45ff502a389642fbb5d820722446d3c4e095af9" translate="yes" xml:space="preserve">
          <source>New messages:</source>
          <target state="translated">新消息。</target>
        </trans-unit>
        <trans-unit id="ee6668c1ded394bd888d6fc032987a6173d0eaed" translate="yes" xml:space="preserve">
          <source>New model() helper method for easy singleton Models.</source>
          <target state="translated">新的model()帮助器方法,方便单人Model。</target>
        </trans-unit>
        <trans-unit id="3d5213d3a046f9ad2ac44db63f64d7c7dd6a93f0" translate="yes" xml:space="preserve">
          <source>New packages list:</source>
          <target state="translated">新的套餐清单。</target>
        </trans-unit>
        <trans-unit id="8c0978f21ea5894f02aebfacb2f433824dca3f0c" translate="yes" xml:space="preserve">
          <source>New value on success, FALSE on failure</source>
          <target state="translated">成功时有新的价值,失败时有新的价值。</target>
        </trans-unit>
        <trans-unit id="bdccd2dbe04845ab309e1f92b6e905515b2f17ab" translate="yes" xml:space="preserve">
          <source>Newline character. (Use &amp;ldquo;\r\n&amp;rdquo; to comply with RFC 822).</source>
          <target state="translated">换行符。（使用&amp;ldquo; \ r \ n&amp;rdquo;符合RFC 822）。</target>
        </trans-unit>
        <trans-unit id="6d3791e8b4637faca38efe4794ac3e212715c1d8" translate="yes" xml:space="preserve">
          <source>Newly encrypted string</source>
          <target state="translated">新加密的字符串</target>
        </trans-unit>
        <trans-unit id="f2cb5010b2ad28ffbee6b4a5493e9de05c8d65cc" translate="yes" xml:space="preserve">
          <source>News section</source>
          <target state="translated">新闻栏目</target>
        </trans-unit>
        <trans-unit id="8ad3d5d5f85aef364a909e1fdb6731ec1591b992" translate="yes" xml:space="preserve">
          <source>Next and Previous here is linked to the group of links to be displayed in the pagination structure, and not to the next or previous page of records.</source>
          <target state="translated">这里的 &quot;下一页 &quot;和 &quot;上一页 &quot;是链接到分页结构中要显示的链接组,而不是链接到下一页或上一页的记录。</target>
        </trans-unit>
        <trans-unit id="56d21d2233995efe7c5f1f61069435f5df49bbc6" translate="yes" xml:space="preserve">
          <source>Next row from the result set or NULL if it doesn&amp;rsquo;t exist</source>
          <target state="translated">结果集中的下一行；如果不存在，则为NULL</target>
        </trans-unit>
        <trans-unit id="e4478998415992fedb7ec8949d4aa892923d8770" translate="yes" xml:space="preserve">
          <source>Next row of result set, or NULL if it doesn&amp;rsquo;t exist</source>
          <target state="translated">结果集的下一行；如果不存在，则为NULL</target>
        </trans-unit>
        <trans-unit id="6b63652aceee247ec8cc1865efa7bcd8527d5439" translate="yes" xml:space="preserve">
          <source>Next, read each of the &lt;strong&gt;General Topics&lt;/strong&gt; pages in order. Each topic builds on the previous one, and includes code examples that you are encouraged to try.</source>
          <target state="translated">接下来，按顺序阅读每个&amp;ldquo; &lt;strong&gt;常规主题&amp;rdquo;&lt;/strong&gt;页面。每个主题都基于前一个主题，并且包括鼓励您尝试的代码示例。</target>
        </trans-unit>
        <trans-unit id="99bee288d49b693788cc16318bcd7a3e421115cc" translate="yes" xml:space="preserve">
          <source>Next, there are two methods to view all news items and one for a specific news item. You can see that the &lt;code&gt;$slug&lt;/code&gt; variable is passed to the model&amp;rsquo;s method in the second method. The model is using this slug to identify the news item to be returned.</source>
          <target state="translated">接下来，有两种方法可以查看所有新闻，一种是查看特定新闻。您可以看到 &lt;code&gt;$slug&lt;/code&gt; 变量在第二种方法中传递给了模型的方法。该模型正在使用该块来标识要返回的新闻项。</target>
        </trans-unit>
        <trans-unit id="8ea0bf249bdec625be0ae3e0f9a2f9a40a44529b" translate="yes" xml:space="preserve">
          <source>Next, there are two methods, one to view all news items, and one for a specific news item. You can see that the &lt;code&gt;$slug&lt;/code&gt; variable is passed to the model&amp;rsquo;s method in the second method. The model is using this slug to identify the news item to be returned.</source>
          <target state="translated">接下来，有两种方法，一种是查看所有新闻项，另一种是查看特定新闻项。您可以看到 &lt;code&gt;$slug&lt;/code&gt; 变量在第二种方法中传递给了模型的方法。该模型正在使用此块来标识要返回的新闻项。</target>
        </trans-unit>
        <trans-unit id="d6647b18d2127ce6be1c7020c64de461f017a76f" translate="yes" xml:space="preserve">
          <source>Next, we assign it to all POST requests made on the site:</source>
          <target state="translated">接下来,我们将它分配给网站上的所有POST请求。</target>
        </trans-unit>
        <trans-unit id="2f350b255f71579ea5fb2c8293778969345a9017" translate="yes" xml:space="preserve">
          <source>Next, you need to define the class that is used to format the array of data. This must be a fully qualified class name, and the class must implement &lt;strong&gt;CodeIgniter\Format\FormatterInterface&lt;/strong&gt;. Formatters come out of the box that support both JSON and XML:</source>
          <target state="translated">接下来，您需要定义用于格式化数据数组的类。这必须是完全限定的类名，并且该类必须实现&lt;strong&gt;CodeIgniter \ Format \ FormatterInterface&lt;/strong&gt;。开箱即用的格式化程序同时支持JSON和XML：</target>
        </trans-unit>
        <trans-unit id="1eb37d497aa68625f04e7df5dde63061f98252a0" translate="yes" xml:space="preserve">
          <source>Nginx is the second most widely used HTTP server for web hosting. Here you can find an example configuration using PHP 7.3 FPM (unix sockets) under Ubuntu Server.</source>
          <target state="translated">Nginx是第二大被广泛使用的HTTP服务器。这里你可以找到一个在Ubuntu服务器下使用PHP 7.3 FPM(unix sockets)的配置实例。</target>
        </trans-unit>
        <trans-unit id="816c52fd2bdd94a63cd0944823a6c0aa9384c103" translate="yes" xml:space="preserve">
          <source>No</source>
          <target state="translated">No</target>
        </trans-unit>
        <trans-unit id="6af9ce63c40b5c45ce6e810e2bcecd22831f67f1" translate="yes" xml:space="preserve">
          <source>No Default</source>
          <target state="translated">无默认</target>
        </trans-unit>
        <trans-unit id="26b16faaedc842689bc649f0661d0305008bbf4d" translate="yes" xml:space="preserve">
          <source>No file was uploaded.</source>
          <target state="translated">没有上传文件。</target>
        </trans-unit>
        <trans-unit id="8dfdf2b6ab7098cf44b8e82f293a1772e37a4cd9" translate="yes" xml:space="preserve">
          <source>No special change is needed when working with configuration files. These are still namespaced classes and loaded with the &lt;code&gt;new&lt;/code&gt; command:</source>
          <target state="translated">使用配置文件时，无需进行特殊更改。这些仍然是命名空间类，并使用 &lt;code&gt;new&lt;/code&gt; 命令加载：</target>
        </trans-unit>
        <trans-unit id="8a4c24df7223586752973df5cee8f32bb2a241b0" translate="yes" xml:space="preserve">
          <source>No whitespace can precede the opening PHP tag or follow the closing PHP tag. Output is buffered, so whitespace in your files can cause output to begin before CodeIgniter outputs its content, leading to errors and an inability for CodeIgniter to send proper headers.</source>
          <target state="translated">在PHP标签的开头或结尾处不能有空白。输出是有缓冲的,所以文件中的空白会导致在CodeIgniter输出内容之前就开始输出,从而导致错误和CodeIgniter无法发送正确的标题。</target>
        </trans-unit>
        <trans-unit id="7b31028629115aecb301b21cc97f7edef2c73b0d" translate="yes" xml:space="preserve">
          <source>Noindex:</source>
          <target state="translated">Noindex:</target>
        </trans-unit>
        <trans-unit id="6eef6648406c333a4035cd5e60d0bf2ecf2606d7" translate="yes" xml:space="preserve">
          <source>None</source>
          <target state="translated">None</target>
        </trans-unit>
        <trans-unit id="167e1ae7118a5ed963da507c109ba030e3885f80" translate="yes" xml:space="preserve">
          <source>Normal, but significant events in your application.</source>
          <target state="translated">正常的,但在你的应用程序中的重要事件。</target>
        </trans-unit>
        <trans-unit id="aa543b7c8cad3921ccc866d337593feec5a943bb" translate="yes" xml:space="preserve">
          <source>Normally from within your controller methods you will call any of the available CodeIgniter methods using the &lt;code&gt;$this&lt;/code&gt; construct:</source>
          <target state="translated">通常，从控制器方法中，您将使用 &lt;code&gt;$this&lt;/code&gt; 构造调用任何可用的CodeIgniter方法：</target>
        </trans-unit>
        <trans-unit id="5ef5afec2dbed7f6df2648d98c27d91ffc7f8252" translate="yes" xml:space="preserve">
          <source>Normally the second segment of the URL is reserved for the method name, but in the example above it instead has a product ID. To overcome this, CodeIgniter allows you to remap the URI handler.</source>
          <target state="translated">通常URL的第二段是为方法名保留的,但在上面的例子中,它有一个产品ID。为了克服这个问题,CodeIgniter允许你重映射URI处理程序。</target>
        </trans-unit>
        <trans-unit id="07e2d5ba0a376b2bc8d3d5bb04c8a8b2b74a95c9" translate="yes" xml:space="preserve">
          <source>Normally to echo, or print out a variable you would do this:</source>
          <target state="translated">通常情况下,如果要呼应或打印出一个变量,你可以这样做。</target>
        </trans-unit>
        <trans-unit id="e60b2af9383b9f7abea5bb84cd19bd6a54113070" translate="yes" xml:space="preserve">
          <source>Normally, to call any of the available methods, CodeIgniter requires you to use the &lt;code&gt;$this&lt;/code&gt; construct:</source>
          <target state="translated">通常，要调用任何可用的方法，CodeIgniter要求您使用 &lt;code&gt;$this&lt;/code&gt; 构造：</target>
        </trans-unit>
        <trans-unit id="9c43a177cbd23e8af454b2820cfddbbac0371a49" translate="yes" xml:space="preserve">
          <source>Not All Database Functions Work with Caching</source>
          <target state="translated">并非所有的数据库函数都能使用缓存</target>
        </trans-unit>
        <trans-unit id="632b248b8fc8174595e1645d4a5851567f1dcb44" translate="yes" xml:space="preserve">
          <source>Not all database drivers have a native way of getting the total number of rows for a result set. When this is the case, all of the data is prefetched and &lt;code&gt;count()&lt;/code&gt; is manually called on the resulting array in order to achieve the same result.</source>
          <target state="translated">并非所有的数据库驱动程序都有获取结果集总行数的本机方法。在这种情况下，将预取所有数据，并在结果数组上手动调用 &lt;code&gt;count()&lt;/code&gt; 以获得相同的结果。</target>
        </trans-unit>
        <trans-unit id="23e46188c93c10017ea44dbb01a466dbed6d005c" translate="yes" xml:space="preserve">
          <source>Not all database drivers support this feature and will return FALSE. Most notably - you won&amp;rsquo;t be able to use it with PDO.</source>
          <target state="translated">并非所有的数据库驱动程序都支持此功能，并且将返回FALSE。最值得注意的是-您将无法在PDO中使用它。</target>
        </trans-unit>
        <trans-unit id="b7571a4b4440813810f17784981c648429c7fba2" translate="yes" xml:space="preserve">
          <source>Not all database platforms support database optimization. It it is mostly for use with MySQL.</source>
          <target state="translated">不是所有的数据库平台都支持数据库优化。它它主要是用于MySQL。</target>
        </trans-unit>
        <trans-unit id="6387a3aec8e30d50cf84b89b94c7dbbd8ece60ca" translate="yes" xml:space="preserve">
          <source>Not all database platforms support table optimization. It is mostly for use with MySQL.</source>
          <target state="translated">并非所有的数据库平台都支持表优化。它主要用于MySQL。</target>
        </trans-unit>
        <trans-unit id="de631bc6677a6def6e0986720d32e0aabcccea3b" translate="yes" xml:space="preserve">
          <source>Not all database platforms support table repairs.</source>
          <target state="translated">并非所有的数据库平台都支持修表。</target>
        </trans-unit>
        <trans-unit id="f2034351d3db6f7cc1d871b1e1307b942c921c61" translate="yes" xml:space="preserve">
          <source>Not all databases provide meta-data.</source>
          <target state="translated">并非所有数据库都提供元数据。</target>
        </trans-unit>
        <trans-unit id="a54f8dea091fcef59d9533c779707c765e9adf5b" translate="yes" xml:space="preserve">
          <source>Not all methods are supported by all database drivers, some of them may fail (and return FALSE) if the underlying driver does not support them.</source>
          <target state="translated">并非所有的数据库驱动程序都支持所有的方法,如果底层驱动程序不支持这些方法,其中一些方法可能会失败(并返回FALSE)。</target>
        </trans-unit>
        <trans-unit id="6e12b5a6a4c9cd4ba4dbf18b7251e1350e8f4411" translate="yes" xml:space="preserve">
          <source>Not all of the drivers have been converted/rewritten for CodeIgniter4. The list below shows the outstanding ones.</source>
          <target state="translated">并非所有的驱动都被转换/重新编写了CodeIgniter4。下面的列表显示了尚未完成的驱动程序。</target>
        </trans-unit>
        <trans-unit id="3e154a37576dad604cc0ef6a270548bb8e61534d" translate="yes" xml:space="preserve">
          <source>Not all of the libraries have the same (or any) parameters in their constructor. Take a look at the library that you&amp;rsquo;re extending first to see how it should be implemented.</source>
          <target state="translated">并非所有库在其构造函数中都具有相同（或任何）参数。看一下您首先扩展的库，看看应该如何实现。</target>
        </trans-unit>
        <trans-unit id="4d241cecf7c2bce9e92f68b7e1f75f1fb673d9b3" translate="yes" xml:space="preserve">
          <source>Not all query result functions are available when you use caching. Please read this page carefully.</source>
          <target state="translated">当您使用缓存时,并非所有的查询结果功能都可用。请仔细阅读本页面。</target>
        </trans-unit>
        <trans-unit id="1a4e17d9ecc8a787bdbf6fbf0dad1ea016ea4da3" translate="yes" xml:space="preserve">
          <source>Not only does this &lt;strong&gt;reduce&lt;/strong&gt; security instead of improving it, but there&amp;rsquo;s literally no reason to do it. No technical limitations and no (practical) storage constraints apply once you&amp;rsquo;ve hashed them, none!</source>
          <target state="translated">这不仅&lt;strong&gt;降低了&lt;/strong&gt;安全性而不是提高了安全性，而且实际上没有理由这样做。一旦对它们进行哈希处理，就没有技术限制，也没有（实际的）存储限制，没有限制！</target>
        </trans-unit>
        <trans-unit id="2c924e3088204ee77ba681f72be3444357932fca" translate="yes" xml:space="preserve">
          <source>Note</source>
          <target state="translated">Note</target>
        </trans-unit>
        <trans-unit id="513eb4a933349349cfdccc2020ad9fe1daf6a9ff" translate="yes" xml:space="preserve">
          <source>Note some of the location lists have been abridged for clarity and formatting.</source>
          <target state="translated">请注意,为了清晰和格式化,一些地点列表有所删减。</target>
        </trans-unit>
        <trans-unit id="dae6613754b472e4a0866d273fc7fd4b6683ae9c" translate="yes" xml:space="preserve">
          <source>Note that &amp;ldquo;per_page&amp;rdquo; is the default query string passed, however can be configured using &lt;code&gt;$config['query_string_segment'] = 'your_string'&lt;/code&gt;</source>
          <target state="translated">请注意，&amp;ldquo; per_page&amp;rdquo;是传递的默认查询字符串，但是可以使用 &lt;code&gt;$config['query_string_segment'] = 'your_string'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3d4d77034d368a7c286fa421128ecaaa3d6914df" translate="yes" xml:space="preserve">
          <source>Note that both &amp;lsquo;key&amp;rsquo; and &amp;lsquo;hmac_key&amp;rsquo; are used in this example. When using custom parameters, encryption and HMAC keys are not derived like the default behavior of the library is.</source>
          <target state="translated">请注意，在此示例中，同时使用了&amp;ldquo; key&amp;rdquo;和&amp;ldquo; hmac_key&amp;rdquo;。使用自定义参数时，不会像库的默认行为那样导出加密和HMAC密钥。</target>
        </trans-unit>
        <trans-unit id="01af2d10afb31d13c94f25eec162fb6e0de6520d" translate="yes" xml:space="preserve">
          <source>Note that data will only be retrievable from this function if it has been previously sent to the output class by one of the CodeIgniter functions like &lt;code&gt;$this-&amp;gt;load-&amp;gt;view()&lt;/code&gt;.</source>
          <target state="translated">请注意，只有以前通过诸如 &lt;code&gt;$this-&amp;gt;load-&amp;gt;view()&lt;/code&gt; 类的CodeIgniter函数之一将其发送到输出类的数据才可以从此函数检索。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
