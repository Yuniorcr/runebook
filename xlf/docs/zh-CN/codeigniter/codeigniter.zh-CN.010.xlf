<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="codeigniter">
    <body>
      <group id="codeigniter">
        <trans-unit id="8673cea1866e84570272afee8b21cdad4d6021b5" translate="yes" xml:space="preserve">
          <source>The character collation used in communicating with the database</source>
          <target state="translated">与数据库通信时使用的字符整理法</target>
        </trans-unit>
        <trans-unit id="4b939624f331be0465646e1fc057773a658f11a6" translate="yes" xml:space="preserve">
          <source>The character set used in communicating with the database.</source>
          <target state="translated">与数据库通信时使用的字符集。</target>
        </trans-unit>
        <trans-unit id="b3201957d5f3f7e091bf0e333f76e5bfb26e8b59" translate="yes" xml:space="preserve">
          <source>The child classes, the drivers themselves, can then be called directly through the parent class, without initializing them:</source>
          <target state="translated">子类,也就是驱动程序本身,就可以直接通过父类调用,而不需要初始化它们。</target>
        </trans-unit>
        <trans-unit id="3409ec41e31957957ce04693e790865a1d9a58da" translate="yes" xml:space="preserve">
          <source>The class declaration must extend the parent class.</source>
          <target state="translated">类声明必须扩展父类。</target>
        </trans-unit>
        <trans-unit id="09559a635805021c812d9944df3012e07664f5d3" translate="yes" xml:space="preserve">
          <source>The class is automatically initialized when the file is loaded the first time.</source>
          <target state="translated">该类在第一次加载文件时自动初始化。</target>
        </trans-unit>
        <trans-unit id="4a1caf94f5893bd40b68ea18b3cbdb82ed658ac5" translate="yes" xml:space="preserve">
          <source>The classmap is used extensively by CodeIgniter to eke the last ounces of performance out of the system by not hitting the file-system with extra &lt;code&gt;is_file()&lt;/code&gt; calls. You can use the classmap to link to third-party libraries that are not namespaced:</source>
          <target state="translated">通过不使用额外的 &lt;code&gt;is_file()&lt;/code&gt; 调用来达到文件系统的目的，CodeIgniter广泛使用了类映射，以使系统获得最后的性能。您可以使用类映射链接到未命名空间的第三方库：</target>
        </trans-unit>
        <trans-unit id="5d0b3e31eed060dc4cc87f77e0151822d03afe46" translate="yes" xml:space="preserve">
          <source>The clear method resets all of the values used when processing an image. You will want to call this if you are processing images in a loop.</source>
          <target state="translated">清空方法可以重置处理图像时使用的所有值。如果你是在循环中处理图像,你会想要调用这个方法。</target>
        </trans-unit>
        <trans-unit id="17abd13a4b815ad6d739b409548fee639b29d5fe" translate="yes" xml:space="preserve">
          <source>The client you created sends a message (&amp;ldquo;How&amp;rsquo;s is going?&amp;rdquo;) to the server, along with a request for the &amp;ldquo;Greetings&amp;rdquo; method. The Server receives the request and maps it to the &lt;code&gt;process()&lt;/code&gt; method, where a response is sent back.</source>
          <target state="translated">您创建的客户端会向服务器发送一条消息（&amp;ldquo;怎么回事？&amp;rdquo;），并请求&amp;ldquo;问候&amp;rdquo;方法。服务器接收请求并将其映射到 &lt;code&gt;process()&lt;/code&gt; 方法，在该方法中将响应发送回去。</target>
        </trans-unit>
        <trans-unit id="8b61c3297e7d3a57127bf4ec87f6e532e944af30" translate="yes" xml:space="preserve">
          <source>The closing tag for the &amp;ldquo;current&amp;rdquo; link.</source>
          <target state="translated">&amp;ldquo;当前&amp;rdquo;链接的结束标记。</target>
        </trans-unit>
        <trans-unit id="f1f942387778fb8713128548eef429a251bbe2a6" translate="yes" xml:space="preserve">
          <source>The closing tag for the &amp;ldquo;digit&amp;rdquo; link.</source>
          <target state="translated">&amp;ldquo;数字&amp;rdquo;链接的结束标记。</target>
        </trans-unit>
        <trans-unit id="8ab3eba975c76e0b3ae71e9342348ac4cacb6a3b" translate="yes" xml:space="preserve">
          <source>The closing tag for the &amp;ldquo;first&amp;rdquo; link.</source>
          <target state="translated">&amp;ldquo;第一个&amp;rdquo;链接的结束标记。</target>
        </trans-unit>
        <trans-unit id="f6a32236b7e0e7757d1963ed747dd5046a85f5ca" translate="yes" xml:space="preserve">
          <source>The closing tag for the &amp;ldquo;last&amp;rdquo; link.</source>
          <target state="translated">&amp;ldquo;最后&amp;rdquo;链接的结束标记。</target>
        </trans-unit>
        <trans-unit id="a2b99eb02ddea9fd6f254c9bfd4cfc27dd832b88" translate="yes" xml:space="preserve">
          <source>The closing tag for the &amp;ldquo;next&amp;rdquo; link.</source>
          <target state="translated">&amp;ldquo;下一个&amp;rdquo;链接的结束标记。</target>
        </trans-unit>
        <trans-unit id="1e4b9ec53d1fb1b8933c49a53b7f0ad3fff750e9" translate="yes" xml:space="preserve">
          <source>The closing tag for the &amp;ldquo;previous&amp;rdquo; link.</source>
          <target state="translated">&amp;ldquo;上一个&amp;rdquo;链接的结束标记。</target>
        </trans-unit>
        <trans-unit id="35550101b6036e7993fae08111e0138e054317ce" translate="yes" xml:space="preserve">
          <source>The closing tag placed on the right side of the entire result.</source>
          <target state="translated">放在整个结果右侧的结束标签。</target>
        </trans-unit>
        <trans-unit id="cf1f9e551c296d99e36a9337a66b134aba30a9d9" translate="yes" xml:space="preserve">
          <source>The code above adds a lot of functionality. First we load the NewsModel. After that, we check if we deal with the &lt;code&gt;POST&lt;/code&gt; request and then the Controller-provided helper function is used to validate the $_POST fields. In this case, the title and text fields are required.</source>
          <target state="translated">上面的代码添加了许多功能。首先，我们加载NewsModel。之后，我们检查是否处理 &lt;code&gt;POST&lt;/code&gt; 请求，然后使用控制器提供的帮助器功能来验证$ _POST字段。在这种情况下，标题和文本字段是必填字段。</target>
        </trans-unit>
        <trans-unit id="9773e3d00125dc183f57dc0e983d9b3509ba18d9" translate="yes" xml:space="preserve">
          <source>The code above adds a lot of functionality. The first few lines load the form helper and the form validation library. After that, rules for the form validation are set. The &lt;code&gt;set_rules()&lt;/code&gt; method takes three arguments; the name of the input field, the name to be used in error messages, and the rule. In this case the title and text fields are required.</source>
          <target state="translated">上面的代码添加了很多功能。前几行加载表单帮助程序和表单验证库。之后，设置表单验证规则。所述 &lt;code&gt;set_rules()&lt;/code&gt; 方法有三个参数; 输入字段的名称，错误消息中使用的名称以及规则。在这种情况下，标题和文本字段是必填字段。</target>
        </trans-unit>
        <trans-unit id="ab4208d2a44a3d69112c9a91ae92574495bea2e5" translate="yes" xml:space="preserve">
          <source>The code above gets all news records from the model and assigns it to a variable. The value for the title is also assigned to the &lt;code&gt;$data['title']&lt;/code&gt; element and all data is passed to the views. You now need to create a view to render the news items. Create &lt;em&gt;application/views/news/index.php&lt;/em&gt; and add the next piece of code.</source>
          <target state="translated">上面的代码从模型中获取所有新闻记录，并将其分配给变量。标题的值也分配给 &lt;code&gt;$data['title']&lt;/code&gt; 元素，所有数据都传递给视图。现在，您需要创建一个视图来呈现新闻项。创建&lt;em&gt;application / views / news / index.php&lt;/em&gt;并添加下一段代码。</target>
        </trans-unit>
        <trans-unit id="0b38553e184a3e5b8dd4d5afc5335e8a0ebc6130" translate="yes" xml:space="preserve">
          <source>The code above gets all news records from the model and assigns it to a variable. The value for the title is also assigned to the &lt;code&gt;$data['title']&lt;/code&gt; element and all data is passed to the views. You now need to create a view to render the news items. Create &lt;strong&gt;app/Views/news/overview.php&lt;/strong&gt; and add the next piece of code.</source>
          <target state="translated">上面的代码从模型中获取所有新闻记录，并将其分配给变量。标题的值也分配给 &lt;code&gt;$data['title']&lt;/code&gt; 元素，所有数据都传递给视图。现在，您需要创建一个视图以呈现新闻项。创建&lt;strong&gt;app / Views / news / overview.php&lt;/strong&gt;并添加下一段代码。</target>
        </trans-unit>
        <trans-unit id="80fc0c266145440819f5051f9ddded2b3c7a891f" translate="yes" xml:space="preserve">
          <source>The codebase comes with a &lt;code&gt;VagrantFile.dist&lt;/code&gt;, that can be copied to &lt;code&gt;VagrantFile&lt;/code&gt; and tailored for your system, for instance enabling access to specific database or caching engines.</source>
          <target state="translated">该代码库带有 &lt;code&gt;VagrantFile.dist&lt;/code&gt; ，可以将其复制到 &lt;code&gt;VagrantFile&lt;/code&gt; 并针对您的系统进行定制，例如，允许访问特定的数据库或缓存引擎。</target>
        </trans-unit>
        <trans-unit id="c8e67fc6a18bb54fc6c196ca33a742c7c14afa1e" translate="yes" xml:space="preserve">
          <source>The codeigniter.com website, written in CodeIgniter 4</source>
          <target state="translated">codeigniter.com网站,用CodeIgniter 4编写。</target>
        </trans-unit>
        <trans-unit id="edd40e159ce69b46c0207b3c490845349c4613be" translate="yes" xml:space="preserve">
          <source>The color of the drop shadow, specified in hex. If you leave this blank a drop shadow will not be used. Both the full 6-length (ie, 993300) and the short three character abbreviated version (ie, fff) are supported.</source>
          <target state="translated">阴影的颜色,用十六进制指定。如果您将此选项留空,则不会使用阴影。支持完整的6个长度(即993300)和简短的3个字符缩写版本(即fff)。</target>
        </trans-unit>
        <trans-unit id="0ce648786349d2663a22c00ebf48fb226eae9794" translate="yes" xml:space="preserve">
          <source>The command above will create a &amp;ldquo;project-root&amp;rdquo; folder.</source>
          <target state="translated">上面的命令将创建一个&amp;ldquo; project-root&amp;rdquo;文件夹。</target>
        </trans-unit>
        <trans-unit id="9a81596327853c44ac13732b111bff755c7881a9" translate="yes" xml:space="preserve">
          <source>The command above will update &lt;strong&gt;composer.json&lt;/strong&gt; to point to the &lt;code&gt;develop&lt;/code&gt; branch of the working repository, and update the corresponding paths in config and XML files. To revert these changes run:</source>
          <target state="translated">上面的命令将更新&lt;strong&gt;composer.json&lt;/strong&gt;以指向工作存储库的 &lt;code&gt;develop&lt;/code&gt; ment分支，并更新config和XML文件中的相应路径。要还原这些更改，请运行：</target>
        </trans-unit>
        <trans-unit id="b17ad18b546472cb1cc96e9bf3adf77fdd3f1349" translate="yes" xml:space="preserve">
          <source>The command-line interface is a text-based method of interacting with computers. For more information, check the &lt;a href=&quot;http://en.wikipedia.org/wiki/Command-line_interface&quot;&gt;Wikipedia article&lt;/a&gt;.</source>
          <target state="translated">命令行界面是与计算机交互的基于文本的方法。有关更多信息，请参阅&lt;a href=&quot;http://en.wikipedia.org/wiki/Command-line_interface&quot;&gt;Wikipedia文章&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d5cf3d3be3cb73be1ee46f7ef0edcfe673374ebf" translate="yes" xml:space="preserve">
          <source>The command-line interface is a text-based method of interacting with computers. For more information, check the &lt;a href=&quot;https://en.wikipedia.org/wiki/Command-line_interface&quot;&gt;Wikipedia article&lt;/a&gt;.</source>
          <target state="translated">命令行界面是与计算机交互的基于文本的方法。有关更多信息，请参阅&lt;a href=&quot;https://en.wikipedia.org/wiki/Command-line_interface&quot;&gt;Wikipedia文章&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="79991bf78e5d5f9e7e0a2e837edcba60a9337182" translate="yes" xml:space="preserve">
          <source>The compiled SQL statement as a string</source>
          <target state="translated">编译后的SQL语句为一个字符串</target>
        </trans-unit>
        <trans-unit id="ed286abf70bf0b2bc642ad077d5c2d9a0da9a02c" translate="yes" xml:space="preserve">
          <source>The compression level to use.</source>
          <target state="translated">要使用的压缩级别。</target>
        </trans-unit>
        <trans-unit id="651812a6bb14d505c9bea48ceb377785a2296900" translate="yes" xml:space="preserve">
          <source>The config settings are stored in a class property that is an array with this prototype:</source>
          <target state="translated">配置设置存储在一个类属性中,这个类属性是一个具有这个原型的数组。</target>
        </trans-unit>
        <trans-unit id="600431317ad6ed738aeca73f87a8cecc49da57e4" translate="yes" xml:space="preserve">
          <source>The config settings are stored in a multi-dimensional array with this prototype:</source>
          <target state="translated">配置设置用这个原型存储在一个多维数组中。</target>
        </trans-unit>
        <trans-unit id="b80bf2a0a37fc437e7714a9c9b0228b052c39931" translate="yes" xml:space="preserve">
          <source>The configuration item or NULL if the item doesn&amp;rsquo;t exist</source>
          <target state="translated">配置项；如果不存在，则为NULL</target>
        </trans-unit>
        <trans-unit id="eebdf14f8cc04dbd23510c794fb2ed4ab74ecf97" translate="yes" xml:space="preserve">
          <source>The controller (Form.php) has one method: &lt;code&gt;index()&lt;/code&gt;. This method initializes the validation class and loads the form helper and URL helper used by your view files. It also runs the validation routine. Based on whether the validation was successful it either presents the form or the success page.</source>
          <target state="translated">控制器（Form.php）具有一种方法： &lt;code&gt;index()&lt;/code&gt; 。此方法初始化验证类，并加载视图文件使用的表单帮助器和URL帮助器。它还运行验证例程。根据验证是否成功，它会显示表单或成功页面。</target>
        </trans-unit>
        <trans-unit id="83c6d3b9890836689bddd1d9a9cf6cc3bd40a425" translate="yes" xml:space="preserve">
          <source>The controller (Form.php) has one method: &lt;code&gt;index()&lt;/code&gt;. This method uses the Controller-provided validate method and loads the form helper and URL helper used by your view files. It also runs the validation routine. Based on whether the validation was successful it either presents the form or the success page.</source>
          <target state="translated">控制器（Form.php）具有一种方法： &lt;code&gt;index()&lt;/code&gt; 。此方法使用Controller提供的validate方法，并加载视图文件使用的表单帮助器和URL帮助器。它还运行验证例程。根据验证是否成功，它会显示表单或成功页面。</target>
        </trans-unit>
        <trans-unit id="b06c858c317f67505f718682390ec747ed3547f1" translate="yes" xml:space="preserve">
          <source>The controller is now functioning!</source>
          <target state="translated">控制器现在开始运作了!</target>
        </trans-unit>
        <trans-unit id="e3f5f4108c9a663269f429d7afc4ce033c90b078" translate="yes" xml:space="preserve">
          <source>The controller is now functioning! Point your browser to &lt;code&gt;[your-site-url]index.php/pages/view&lt;/code&gt; to see your page. When you visit &lt;code&gt;index.php/pages/view/about&lt;/code&gt; you&amp;rsquo;ll see the about page, again including the header and footer.</source>
          <target state="translated">控制器现在正在运行！将浏览器指向 &lt;code&gt;[your-site-url]index.php/pages/view&lt;/code&gt; 以查看您的页面。当您访问 &lt;code&gt;index.php/pages/view/about&lt;/code&gt; 时,您将看到About页面，同样包括页眉和页脚。</target>
        </trans-unit>
        <trans-unit id="8e1e124cf7a10c48d3cd6c4cc7958cd8ad07ecd7" translate="yes" xml:space="preserve">
          <source>The cookie value or NULL if not found</source>
          <target state="translated">cookie值,如果没有找到,则为NULL</target>
        </trans-unit>
        <trans-unit id="dd2b915256fbfd0b7a1f9cd4e68bc6d1c89a5628" translate="yes" xml:space="preserve">
          <source>The core element of the modules functionality comes from the &lt;a href=&quot;../concepts/autoloader&quot;&gt;PSR4-compatible autoloading&lt;/a&gt; that CodeIgniter uses. While any code can use the PSR4 autoloader and namespaces, the primary way to take full advantage of modules is to namespace your code and add it to &lt;strong&gt;app/Config/Autoload.php&lt;/strong&gt;, in the &lt;code&gt;psr4&lt;/code&gt; section.</source>
          <target state="translated">模块功能的核心元素来自CodeIgniter使用的与&lt;a href=&quot;../concepts/autoloader&quot;&gt;PSR4兼容的自动加载&lt;/a&gt;。尽管任何代码都可以使用PSR4自动加载器和名称空间，但充分利用模块的主要方法是为代码命名空间并将其添加到 &lt;code&gt;psr4&lt;/code&gt; 部分的&lt;strong&gt;app / Config / Autoload.php&lt;/strong&gt;中。</target>
        </trans-unit>
        <trans-unit id="d855c0682a87b7e7a31d0c4c76511dfdcef1e34d" translate="yes" xml:space="preserve">
          <source>The cropping method works nearly identically to the resizing function except it requires that you set preferences for the X and Y axis (in pixels) specifying where to crop, like this:</source>
          <target state="translated">裁剪方法的工作原理与调整大小功能几乎相同,只是需要您设置X轴和Y轴的首选项(以像素为单位),指定裁剪的位置,像这样。</target>
        </trans-unit>
        <trans-unit id="b379a7e73590ead6818a4e9c69bdcf12daf56069" translate="yes" xml:space="preserve">
          <source>The current HTTP protocol version</source>
          <target state="translated">当前的HTTP协议版本</target>
        </trans-unit>
        <trans-unit id="012f68e00c7ddc776d9534b59305bc8808dc1d30" translate="yes" xml:space="preserve">
          <source>The current HTTP status code for this response</source>
          <target state="translated">本次响应的当前HTTP状态码</target>
        </trans-unit>
        <trans-unit id="16c557b47029b1099d7d9512219d09eb51e33387" translate="yes" xml:space="preserve">
          <source>The current Message|Response instance</source>
          <target state="translated">当前的消息|回复实例</target>
        </trans-unit>
        <trans-unit id="2bc54195d0a3d3a09d9d577d305964e5db4d5548" translate="yes" xml:space="preserve">
          <source>The current MigrationRunner instance</source>
          <target state="translated">当前的MigrationRunner实例</target>
        </trans-unit>
        <trans-unit id="b99b67b7b410e6e908aa30e4b696e12ce94f7e78" translate="yes" xml:space="preserve">
          <source>The current Response instance</source>
          <target state="translated">当前的Response实例</target>
        </trans-unit>
        <trans-unit id="c4d8ccea12238d3123db824d8aedaf6a570875de" translate="yes" xml:space="preserve">
          <source>The current URL</source>
          <target state="translated">当前的URL</target>
        </trans-unit>
        <trans-unit id="0ca51166025cdb1d814333c111d233ffbafcacf3" translate="yes" xml:space="preserve">
          <source>The current locale can always be retrieved from the IncomingRequest object, through the &lt;code&gt;getLocale()&lt;/code&gt; method. If your controller is extending &lt;code&gt;CodeIgniter\Controller&lt;/code&gt;, this will be available through &lt;code&gt;$this-&amp;gt;request&lt;/code&gt;:</source>
          <target state="translated">始终可以通过 &lt;code&gt;getLocale()&lt;/code&gt; 方法从IncomingRequest对象中检索当前语言环境。如果您的控制器正在扩展 &lt;code&gt;CodeIgniter\Controller&lt;/code&gt; ，则可以通过 &lt;code&gt;$this-&amp;gt;request&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="6d23fb2ffe6ccb4331c9329c3a33433a5c7c183a" translate="yes" xml:space="preserve">
          <source>The current message body</source>
          <target state="translated">当前的信息主体</target>
        </trans-unit>
        <trans-unit id="5e7ed544f83e9cfe4e9d9859b70db205789e2de4" translate="yes" xml:space="preserve">
          <source>The current message instance</source>
          <target state="translated">当前的信息实例</target>
        </trans-unit>
        <trans-unit id="1bb56cc9eb648bed439f7c8f858142418bbd991c" translate="yes" xml:space="preserve">
          <source>The current reason phrase.</source>
          <target state="translated">目前的原因短语。</target>
        </trans-unit>
        <trans-unit id="bff1305c1ddef4edac6d774e0f2e90fbcdc8ce5b" translate="yes" xml:space="preserve">
          <source>The current response instance.</source>
          <target state="translated">当前的响应实例。</target>
        </trans-unit>
        <trans-unit id="cb93049b3ccea9bba6c44a52054c4c9db2e512e3" translate="yes" xml:space="preserve">
          <source>The current value of the CSRF hash.</source>
          <target state="translated">CSRF哈希的当前值。</target>
        </trans-unit>
        <trans-unit id="cb6c7c19deb5a5ed0efdf786ad0b600d8eddf0d9" translate="yes" xml:space="preserve">
          <source>The current version your database should use.</source>
          <target state="translated">您的数据库应该使用的当前版本。</target>
        </trans-unit>
        <trans-unit id="5ff67a125bb9a51115be576423804ee646779f96" translate="yes" xml:space="preserve">
          <source>The data array you pass to your view files is not limited to simple variables. You can pass multi dimensional arrays, which can be looped to generate multiple rows. For example, if you pull data from your database it will typically be in the form of a multi-dimensional array.</source>
          <target state="translated">您传递给视图文件的数据数组并不限于简单的变量,您可以传递多维数组,它可以循环生成多行。您可以传递多维数组,它可以被循环生成多行。例如,如果您从数据库中提取数据,它通常会以多维数组的形式出现。</target>
        </trans-unit>
        <trans-unit id="4834140daa5a1b6c5bb399f1309af281d2a1382c" translate="yes" xml:space="preserve">
          <source>The data passed in is only available during one call to &lt;code&gt;view&lt;/code&gt;. If you call the function multiple times in a single request, you will have to pass the desired data to each view. This keeps any data from &amp;ldquo;bleeding&amp;rdquo; into other views, potentially causing issues. If you would prefer the data to persist, you can pass the &lt;code&gt;saveData&lt;/code&gt; option into the &lt;code&gt;$option&lt;/code&gt; array in the third parameter.</source>
          <target state="translated">传递的数据仅在一次调用 &lt;code&gt;view&lt;/code&gt; 期间可用。如果在单个请求中多次调用该函数，则必须将所需的数据传递给每个视图。这样可以防止任何数据&amp;ldquo;渗入&amp;rdquo;其他视图，从而可能导致问题。如果您希望保留数据，可以将 &lt;code&gt;saveData&lt;/code&gt; 选项传递到第三个参数的 &lt;code&gt;$option&lt;/code&gt; 数组中。</target>
        </trans-unit>
        <trans-unit id="ef5537f55aa4d285ee7ca0721073a75bf281b155" translate="yes" xml:space="preserve">
          <source>The database connection and the database Forge class are both available to you through &lt;code&gt;$this-&amp;gt;db&lt;/code&gt; and &lt;code&gt;$this-&amp;gt;forge&lt;/code&gt;, respectively.</source>
          <target state="translated">通过 &lt;code&gt;$this-&amp;gt;db&lt;/code&gt; 和 &lt;code&gt;$this-&amp;gt;forge&lt;/code&gt; forge都可以使用数据库连接和数据库Forge类。</target>
        </trans-unit>
        <trans-unit id="a3f6051fd9cfe1f0bd63ddab7ef6161f98e89874" translate="yes" xml:space="preserve">
          <source>The database connection values, passed either as an array or a DSN string.</source>
          <target state="translated">数据库连接值,以数组或DSN字符串形式传递。</target>
        </trans-unit>
        <trans-unit id="26381073095e1c8797de644632063fe772dfbed6" translate="yes" xml:space="preserve">
          <source>The database group name, a string that must match the config class&amp;rsquo; property name. Default value is $config-&amp;gt;defaultGroup.</source>
          <target state="translated">数据库组名称，必须与配置类的属性名称匹配的字符串。默认值为$ config-&amp;gt; defaultGroup。</target>
        </trans-unit>
        <trans-unit id="7e4fedc6efabba5047fc8547169959db18a62967" translate="yes" xml:space="preserve">
          <source>The database port number. To use this value you have to add a line to the database config array.</source>
          <target state="translated">数据库的端口号。要使用这个值,您必须在数据库配置数组中添加一行。</target>
        </trans-unit>
        <trans-unit id="066e83cf0a791a7ba0b0c53bdf6c609199909c6f" translate="yes" xml:space="preserve">
          <source>The database schema, defaults to &amp;lsquo;public&amp;rsquo;. Used by PostgreSQL and ODBC drivers.</source>
          <target state="translated">数据库模式，默认为&amp;ldquo; public&amp;rdquo;。由PostgreSQL和ODBC驱动程序使用。</target>
        </trans-unit>
        <trans-unit id="93af6a1c92aae8aeae6639ff6b34a69e8791cfcd" translate="yes" xml:space="preserve">
          <source>The database table &lt;strong&gt;migration&lt;/strong&gt; tracks which migrations have already been run so all you have to do is make sure your migrations are in place and call &lt;code&gt;$migration-&amp;gt;latest()&lt;/code&gt; to bring the database up to the most recent state. You can also use &lt;code&gt;$migration-&amp;gt;setNamespace(null)-&amp;gt;latest()&lt;/code&gt; to include migrations from all namespaces.</source>
          <target state="translated">数据库表&lt;strong&gt;迁移&lt;/strong&gt;跟踪已经运行了哪些迁移，因此您要做的就是确保迁移到位，并调用 &lt;code&gt;$migration-&amp;gt;latest()&lt;/code&gt; 将数据库恢复到最新状态。您还可以使用 &lt;code&gt;$migration-&amp;gt;setNamespace(null)-&amp;gt;latest()&lt;/code&gt; 包括从所有名称空间进行的迁移。</target>
        </trans-unit>
        <trans-unit id="e5bd0468e6fe37a5e5ed129dd5d153fde80c5e58" translate="yes" xml:space="preserve">
          <source>The database table &lt;strong&gt;migration&lt;/strong&gt; tracks which migrations have already been run so all you have to do is update your application files and call &lt;code&gt;$this-&amp;gt;migration-&amp;gt;current()&lt;/code&gt; to work out which migrations should be run. The current version is found in &lt;strong&gt;application/config/migration.php&lt;/strong&gt;.</source>
          <target state="translated">数据库表&lt;strong&gt;迁移&lt;/strong&gt;跟踪已经运行了哪些迁移，因此您要做的就是更新应用程序文件，并调用 &lt;code&gt;$this-&amp;gt;migration-&amp;gt;current()&lt;/code&gt; 来确定应运行哪些迁移。当前版本位于&lt;strong&gt;application / config / migration.php中&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="26c7034beae68dacbb8bcb55f6f826e6ff5c7192" translate="yes" xml:space="preserve">
          <source>The database type. eg: MySQLi, Postgre, etc. The case must match the driver name</source>
          <target state="translated">数据库类型,例如:MySQLi、Postgre等。MySQLi,Postgre等 大小写必须与驱动名称一致</target>
        </trans-unit>
        <trans-unit id="c1980c8c79360697449e3bb8317ac1df04e65d44" translate="yes" xml:space="preserve">
          <source>The database type. ie: mysqli, postgre, odbc, etc. Must be specified in lower case.</source>
          <target state="translated">数据库类型,即:mysqli、postgre、odbc等。必须用小写字母表示。</target>
        </trans-unit>
        <trans-unit id="23edf906515a426c2bc46367ad05dc9072904b45" translate="yes" xml:space="preserve">
          <source>The default configuration has daily log files stored in &lt;code&gt;writable/logs&lt;/code&gt;. It would be a good idea to check them if things aren&amp;rsquo;t working the way you expect!</source>
          <target state="translated">默认配置将每日日志文件存储在 &lt;code&gt;writable/logs&lt;/code&gt; 中。检查它们是否符合您的预期效果是个好主意！</target>
        </trans-unit>
        <trans-unit id="70302738cbadb8e137a802ae74bfc153e9272c6f" translate="yes" xml:space="preserve">
          <source>The default controller is also used when no matching route has been found, and the URI would point to a directory in the controllers directory. For example, if the user visits &lt;code&gt;example.com/admin&lt;/code&gt;, if a controller was found at &lt;code&gt;/app/Controllers/admin/Home.php&lt;/code&gt; it would be used.</source>
          <target state="translated">如果找不到匹配的路由，并且URI指向controllers目录中的目录，也会使用默认控制器。例如，如果用户访问 &lt;code&gt;example.com/admin&lt;/code&gt; ，则可以在 &lt;code&gt;/app/Controllers/admin/Home.php&lt;/code&gt; 中找到控制器。</target>
        </trans-unit>
        <trans-unit id="0168e95b60fc419689bd44100d2efba7648a5086" translate="yes" xml:space="preserve">
          <source>The default location of the SQLite3 database is in the &lt;code&gt;writable&lt;/code&gt; folder. If you want to change the location, you must set the full path to the new folder.</source>
          <target state="translated">SQLite3数据库的默认位置在 &lt;code&gt;writable&lt;/code&gt; 文件夹中。如果要更改位置，则必须设置新文件夹的完整路径。</target>
        </trans-unit>
        <trans-unit id="11eada1d04512e757ac55ad2b2339d7e7aaa5e99" translate="yes" xml:space="preserve">
          <source>The default mode is &amp;lsquo;wb&amp;rsquo;. Please see the &lt;a href=&quot;http://php.net/manual/en/function.fopen.php&quot;&gt;PHP user guide&lt;/a&gt; for mode options.</source>
          <target state="translated">默认模式是&amp;ldquo; wb&amp;rdquo;。有关模式选项，请参见&lt;a href=&quot;http://php.net/manual/en/function.fopen.php&quot;&gt;PHP用户指南&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a16f5593155b9dcbb90d9dd7784ec22c67190628" translate="yes" xml:space="preserve">
          <source>The default mode is &amp;lsquo;wb&amp;rsquo;. Please see the &lt;a href=&quot;https://www.php.net/manual/en/function.fopen.php&quot;&gt;PHP user guide&lt;/a&gt; for mode options.</source>
          <target state="translated">默认模式是&amp;ldquo; wb&amp;rdquo;。请参阅&lt;a href=&quot;https://www.php.net/manual/en/function.fopen.php&quot;&gt;PHP用户指南&lt;/a&gt;以获取模式选项。</target>
        </trans-unit>
        <trans-unit id="a992ef10706da873eed57ed0e94fb8da71b4a7ec" translate="yes" xml:space="preserve">
          <source>The desired character set is passed through the &lt;code&gt;Accept-Charset&lt;/code&gt; header:</source>
          <target state="translated">所需的字符集通过 &lt;code&gt;Accept-Charset&lt;/code&gt; 标头传递：</target>
        </trans-unit>
        <trans-unit id="1285635d292acb8ce2ce187f735646c11886c744" translate="yes" xml:space="preserve">
          <source>The desired style may be selected using the &lt;code&gt;$config['migration_type']&lt;/code&gt; setting in your &lt;em&gt;application/config/migration.php&lt;/em&gt; file.</source>
          <target state="translated">可以使用&lt;em&gt;application / config / migration.php&lt;/em&gt;文件中的 &lt;code&gt;$config['migration_type']&lt;/code&gt; 设置来选择所需的样式。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="37bee7ad2660fc3d49046e5b35ea5d6d9daa8d22" translate="yes" xml:space="preserve">
          <source>The devstarter repo has been deprecated.</source>
          <target state="translated">devstarter repo已经被废弃。</target>
        </trans-unit>
        <trans-unit id="361758b2d1130045bc35e68480fb28f51ae6a478" translate="yes" xml:space="preserve">
          <source>The distance (in pixels) from the font that the drop shadow should appear.</source>
          <target state="translated">阴影应该出现在字体上的距离(像素)。</target>
        </trans-unit>
        <trans-unit id="69734bfc130a401ca95e9355bd3928b62ceb7900" translate="yes" xml:space="preserve">
          <source>The domain for which the session is applicable</source>
          <target state="translated">适用于该会议的域</target>
        </trans-unit>
        <trans-unit id="fbc8373c88683a4b45cc6a8732f0919d2ccb7cbf" translate="yes" xml:space="preserve">
          <source>The downside is that it is not as ubiquitous as relational databases and requires the &lt;a href=&quot;https://github.com/phpredis/phpredis&quot;&gt;phpredis&lt;/a&gt; PHP extension to be installed on your system, and that one doesn&amp;rsquo;t come bundled with PHP. Chances are, you&amp;rsquo;re only be using the &amp;lsquo;redis&amp;rsquo; driver only if you&amp;rsquo;re already both familiar with Redis and using it for other purposes.</source>
          <target state="translated">缺点是它不像关系数据库那样普遍存在，并且需要在系统上安装&lt;a href=&quot;https://github.com/phpredis/phpredis&quot;&gt;phpredis&lt;/a&gt; PHP扩展，并且没有与PHP捆绑在一起。很有可能，仅当您已经熟悉Redis并将其用于其他目的时，才使用&amp;ldquo; redis&amp;rdquo;驱动程序。</target>
        </trans-unit>
        <trans-unit id="147539b37427246ab4d6c3ddc48c3430247b7935" translate="yes" xml:space="preserve">
          <source>The downside is that it is not as ubiquitous as relational databases and requires the &lt;a href=&quot;https://github.com/phpredis/phpredis&quot;&gt;phpredis&lt;/a&gt; PHP extension to be installed on your system, and that one doesn&amp;rsquo;t come bundled with PHP. Chances are, you&amp;rsquo;re only be using the RedisHandler driver only if you&amp;rsquo;re already both familiar with Redis and using it for other purposes.</source>
          <target state="translated">缺点是它不像关系数据库那样普遍存在，并且需要在系统上安装&lt;a href=&quot;https://github.com/phpredis/phpredis&quot;&gt;phpredis&lt;/a&gt; PHP扩展，并且没有与PHP捆绑在一起。很有可能，仅当您已经熟悉Redis并将其用于其他目的时，才可以使用RedisHandler驱动程序。</target>
        </trans-unit>
        <trans-unit id="42058a915f8321c9dbde6beed01039926dc94bd0" translate="yes" xml:space="preserve">
          <source>The e-mail sending method. Returns boolean TRUE or FALSE based on success or failure, enabling it to be used conditionally:</source>
          <target state="translated">邮件发送方法。根据成功或失败返回布尔值TRUE或FALSE,可以有条件地使用。</target>
        </trans-unit>
        <trans-unit id="e36d2caacdd06a3a131fbd6af111bb3aa46944d8" translate="yes" xml:space="preserve">
          <source>The email field must contain a valid email address.</source>
          <target state="translated">电子邮件字段必须包含一个有效的电子邮件地址。</target>
        </trans-unit>
        <trans-unit id="392d32c2207f418527757ea463cc4f1f8c04e5d2" translate="yes" xml:space="preserve">
          <source>The encryption key. This it typically specified in your config file as outlined above.</source>
          <target state="translated">加密密钥。这通常是在你的配置文件中指定的,如上所述。</target>
        </trans-unit>
        <trans-unit id="0e773d9e355d3598ff78275495bbd52b73f5eae1" translate="yes" xml:space="preserve">
          <source>The entire tutorial is split up over several pages, each explaining a small part of the functionality of the CodeIgniter framework. You&amp;rsquo;ll go through the following pages:</source>
          <target state="translated">整个教程分为几页，每页仅解释CodeIgniter框架功能的一小部分。您将浏览以下页面：</target>
        </trans-unit>
        <trans-unit id="548c7e210cac784fc2745c447ca8cc9e7a7b38ad" translate="yes" xml:space="preserve">
          <source>The entry ID number is expected in the third segment of your URL. This is based on the URI example we gave earlier:</source>
          <target state="translated">在你的URL的第三段中希望有条目ID号。这是基于我们之前给出的URI例子。</target>
        </trans-unit>
        <trans-unit id="70086720ed68745caa5c8a49f8326921a495221a" translate="yes" xml:space="preserve">
          <source>The environment variable, the default value, or null.</source>
          <target state="translated">环境变量,默认值或空值。</target>
        </trans-unit>
        <trans-unit id="8956ec7509c1b6f6569c46c0caf5169af14b9c79" translate="yes" xml:space="preserve">
          <source>The escaped data.</source>
          <target state="translated">逃逸的数据。</target>
        </trans-unit>
        <trans-unit id="bd35515b3c5c5828d253a60bec8306d8d1178cdf" translate="yes" xml:space="preserve">
          <source>The escaped string(s)</source>
          <target state="translated">被转义的字符串</target>
        </trans-unit>
        <trans-unit id="71df2c43a17f793987293dad3bdbf5e6e4f9e1f9" translate="yes" xml:space="preserve">
          <source>The escaped value(s)</source>
          <target state="translated">转义值</target>
        </trans-unit>
        <trans-unit id="5659b4756e016acb557e9c43f0d81f429b6813b5" translate="yes" xml:space="preserve">
          <source>The exact language used is controlled through the language file, Time.php.</source>
          <target state="translated">具体使用的语言是通过语言文件Time.php控制的。</target>
        </trans-unit>
        <trans-unit id="995281d1abc172fe8eaa06738ebca1cd35700d58" translate="yes" xml:space="preserve">
          <source>The exact time displayed is determined in the following manner:</source>
          <target state="translated">显示的准确时间按以下方式确定。</target>
        </trans-unit>
        <trans-unit id="8df7619e97898fb1f052906b2532d93dec3b03c3" translate="yes" xml:space="preserve">
          <source>The example above uses the configuration settings found in &lt;code&gt;app/Config/Encryption.php&lt;/code&gt;.</source>
          <target state="translated">上面的示例使用 &lt;code&gt;app/Config/Encryption.php&lt;/code&gt; 中的配置设置。</target>
        </trans-unit>
        <trans-unit id="a767eb0ee7bc500b75f2547c6b7bc2d94b9bedee" translate="yes" xml:space="preserve">
          <source>The expected result you supply can either be a literal match, or a data type match. Here&amp;rsquo;s an example of a literal:</source>
          <target state="translated">您提供的预期结果可以是文字匹配或数据类型匹配。这是文字的示例：</target>
        </trans-unit>
        <trans-unit id="41a6a3c733d964074ea3c68e0b301a67a0c8232c" translate="yes" xml:space="preserve">
          <source>The expiration is set in &lt;strong&gt;seconds&lt;/strong&gt;, which will be added to the current time. Do not include the time, but rather only the number of seconds from &lt;em&gt;now&lt;/em&gt; that you wish the cookie to be valid. If the expiration is set to zero the cookie will only last as long as the browser is open.</source>
          <target state="translated">到期时间以&lt;strong&gt;秒&lt;/strong&gt;为单位设置，它将添加到当前时间。不包括时间，而是仅包括从&lt;em&gt;现在开始&lt;/em&gt;您希望cookie有效的秒数。如果将到期时间设置为零，则cookie仅在打开浏览器时才持续存在。</target>
        </trans-unit>
        <trans-unit id="82292913a395e7d2c4e663fc00c674001367b3c5" translate="yes" xml:space="preserve">
          <source>The extend method takes the name of any view file that you wish to use. Since they are standard views, they will be located just like a view. By default, it will look in the application&amp;rsquo;s View directory, but will also scan other PSR-4 defined namespaces. You can include a namespace to locate the view in particular namespace View directory:</source>
          <target state="translated">扩展方法采用您希望使用的任何视图文件的名称。由于它们是标准视图，因此它们的位置就像视图一样。默认情况下，它将在应用程序的View目录中查找，但还将扫描其他PSR-4定义的名称空间。您可以包括一个名称空间以在特定名称空间的View目录中定位视图：</target>
        </trans-unit>
        <trans-unit id="99bd55a9e53d90daf135ce7aa2de9d92324c8208" translate="yes" xml:space="preserve">
          <source>The field is required when all of the other fields are present in the data but not required.</source>
          <target state="translated">当数据中所有其他字段都存在但不需要时,该字段为必填字段。</target>
        </trans-unit>
        <trans-unit id="04baf836605d26e38e5ccf771c7057d37bf6188e" translate="yes" xml:space="preserve">
          <source>The field is required when any of the other required fields are present in the data.</source>
          <target state="translated">当数据中存在任何其他必填字段时,该字段为必填字段。</target>
        </trans-unit>
        <trans-unit id="d5a074f1b41e497bc65a95b6a895ce196a77ff7c" translate="yes" xml:space="preserve">
          <source>The field name - the exact name you&amp;rsquo;ve given the form field.</source>
          <target state="translated">字段名称-您为表单字段指定的确切名称。</target>
        </trans-unit>
        <trans-unit id="123c2568d9bdd3dcef5df0cc4eec7098303eda1e" translate="yes" xml:space="preserve">
          <source>The file could not be written on disk.</source>
          <target state="translated">该文件无法写入磁盘。</target>
        </trans-unit>
        <trans-unit id="e85334cf486987531c0ebd2398d191d876d88b1c" translate="yes" xml:space="preserve">
          <source>The file exceeds the upload limit defined in your form.</source>
          <target state="translated">文件超过了您的表格中定义的上传限制。</target>
        </trans-unit>
        <trans-unit id="ded1fa73a71dc837304697a00695755f82110ca2" translate="yes" xml:space="preserve">
          <source>The file exceeds your upload_max_filesize ini directive.</source>
          <target state="translated">该文件超过了您的upload_max_filesize ini指令。</target>
        </trans-unit>
        <trans-unit id="30950b42266fa34c536debcd9da45e11db7e9eab" translate="yes" xml:space="preserve">
          <source>The file format of the export file.</source>
          <target state="translated">出口文件的文件格式。</target>
        </trans-unit>
        <trans-unit id="fd414cd1e34167b6d06dfb539e2a3be3d6b7b748" translate="yes" xml:space="preserve">
          <source>The file must be called &amp;lsquo;Blog.php&amp;rsquo;, with a capital &amp;lsquo;B&amp;rsquo;.</source>
          <target state="translated">该文件必须名为&amp;ldquo; Blog.php&amp;rdquo;，大写字母&amp;ldquo; B&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="2113d312f1b80ae6d77ad68edb117b0b90de41da" translate="yes" xml:space="preserve">
          <source>The file must be called &amp;lsquo;Helloworld.php&amp;rsquo;, with a capital &amp;lsquo;H&amp;rsquo;.</source>
          <target state="translated">该文件必须名为&amp;ldquo; Helloworld.php&amp;rdquo;，大写字母&amp;ldquo; H&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="64bea981141c2981c4af7ad1c0d531721f01b2fd" translate="yes" xml:space="preserve">
          <source>The file name must match the class name. For example, if this is your class:</source>
          <target state="translated">文件名必须与类名一致。例如,如果这是你的类。</target>
        </trans-unit>
        <trans-unit id="1f4519c4668f7e3682a79958b1baac1fa78c9ab2" translate="yes" xml:space="preserve">
          <source>The file should not contain every possible setting for every configuration class used by the application. In truth, it should include only those items that are specific to the environment or are sensitive details like passwords and API keys and other information that should not be exposed. But anything that changes between deployments is fair-game.</source>
          <target state="translated">该文件不应包含应用程序使用的每个配置类的所有可能的设置。事实上,它应该只包含那些特定于环境的项目,或者是敏感的细节,如密码和API密钥以及其他不应该暴露的信息。但任何在部署之间改变的东西都是公平的。</target>
        </trans-unit>
        <trans-unit id="b33b7b74f535fc21a1084239dc3388c463c71b27" translate="yes" xml:space="preserve">
          <source>The file validation rules apply for both single and multiple file uploads.</source>
          <target state="translated">文件验证规则适用于单个和多个文件的上传。</target>
        </trans-unit>
        <trans-unit id="88a179318d6a7b57fb917ebf09f9b8586d1cbb5a" translate="yes" xml:space="preserve">
          <source>The file was only partially uploaded.</source>
          <target state="translated">该文件只上传了一部分。</target>
        </trans-unit>
        <trans-unit id="1afab90219f2e3297cb682c1fc0f61900f1ef32a" translate="yes" xml:space="preserve">
          <source>The filename prefix for &amp;ldquo;extending&amp;rdquo; Helpers is the same used to extend libraries and core classes. To set your own prefix, open your &lt;strong&gt;application/config/config.php&lt;/strong&gt; file and look for this item:</source>
          <target state="translated">&amp;ldquo;扩展&amp;rdquo;助手的文件名前缀与用于扩展库和核心类的文件名前缀相同。要设置自己的前缀，请打开&lt;strong&gt;application / config / config.php&lt;/strong&gt;文件并查找以下项目：</target>
        </trans-unit>
        <trans-unit id="041c524261411e21ed77cd6441777fc0992e402b" translate="yes" xml:space="preserve">
          <source>The files must be writable or owned by the system in order to be deleted.</source>
          <target state="translated">这些文件必须是可写的,或者是系统所拥有的,才能被删除。</target>
        </trans-unit>
        <trans-unit id="ce76e83c035c893df3740aa759f39235931b382c" translate="yes" xml:space="preserve">
          <source>The final property, &lt;code&gt;$description&lt;/code&gt; is a short string that is displayed in the &lt;strong&gt;list&lt;/strong&gt; command and should describe what the command does.</source>
          <target state="translated">最后的属性 &lt;code&gt;$description&lt;/code&gt; 是在&lt;strong&gt;list&lt;/strong&gt;命令中显示的短字符串，应描述命令的作用。</target>
        </trans-unit>
        <trans-unit id="cfe70b053b4988ed1556d7fdd3291be371378d0b" translate="yes" xml:space="preserve">
          <source>The finalized View is rendered then sent to the web browser to be seen. If caching is enabled, the view is cached first so that on subsequent requests it can be served.</source>
          <target state="translated">最终完成的视图会被渲染,然后发送到Web浏览器上查看。如果启用了缓存,则视图会先被缓存,以便在后续的请求中能够被服务。</target>
        </trans-unit>
        <trans-unit id="44d5e4df2666db41b867f02bfe3fcb25d4aa962f" translate="yes" xml:space="preserve">
          <source>The first and second parameters enable you to set a limit and offset clause:</source>
          <target state="translated">第一个和第二个参数使你能够设置一个限制和偏移子句。</target>
        </trans-unit>
        <trans-unit id="c2ba397700c914caf10a767db91eb0504a8876f2" translate="yes" xml:space="preserve">
          <source>The first aspect to look at is handling &amp;lsquo;media&amp;rsquo; negotiations. These are provided by the &lt;code&gt;Accept&lt;/code&gt; header and is one of the most complex headers available. A common example is the client telling the server what format it wants the data in. This is especially common in API&amp;rsquo;s. For example, a client might request JSON formatted data from an API endpoint:</source>
          <target state="translated">首先要看的是处理&amp;ldquo;媒体&amp;rdquo;谈判。这些由 &lt;code&gt;Accept&lt;/code&gt; 标头提供，并且是可用的最复杂的标头之一。一个常见的例子是客户端告诉服务器它想要数据以什么格式。这在API中尤为常见。例如，客户端可能从API端点请求JSON格式的数据：</target>
        </trans-unit>
        <trans-unit id="55ab73ada96b75189e6fe25204dae08981709ddb" translate="yes" xml:space="preserve">
          <source>The first four array indexes above (id, qty, price, and name) are &lt;strong&gt;required&lt;/strong&gt;. If you omit any of them the data will not be saved to the cart. The fifth index (options) is optional. It is intended to be used in cases where your product has options associated with it. Use an array for options, as shown above.</source>
          <target state="translated">上面的前四个数组索引（id，qty，price和name）是&lt;strong&gt;必需的&lt;/strong&gt;。如果省略其中任何一个，数据将不会保存到购物车中。第五索引（选项）是可选的。它旨在用于您的产品具有与其相关联的选件的情况。使用数组作为选项，如上所示。</target>
        </trans-unit>
        <trans-unit id="26436ba231ac663cf040d33efa570ad7cfa7766d" translate="yes" xml:space="preserve">
          <source>The first function is provided by the &lt;a href=&quot;../helpers/form_helper&quot;&gt;form helper&lt;/a&gt; and renders the form element and adds extra functionality, like adding a hidden &lt;a href=&quot;../libraries/security&quot;&gt;CSRF prevention field&lt;/a&gt;. The latter is used to report errors related to form validation.</source>
          <target state="translated">第一个功能由&lt;a href=&quot;../helpers/form_helper&quot;&gt;表单助手&lt;/a&gt;提供，并呈现表单元素并添加其他功能，例如添加隐藏的&lt;a href=&quot;../libraries/security&quot;&gt;CSRF预防字段&lt;/a&gt;。后者用于报告与表单验证有关的错误。</target>
        </trans-unit>
        <trans-unit id="38f1dc3d9df51402a3728d6ae87e13de9486f5cc" translate="yes" xml:space="preserve">
          <source>The first is &lt;code&gt;service()&lt;/code&gt; which returns a new instance of the requested service. The only required parameter is the service name. This is the same as the method name within the Services file always returns a SHARED instance of the class, so calling the function multiple times should always return the same instance:</source>
          <target state="translated">第一个是 &lt;code&gt;service()&lt;/code&gt; ，它返回所请求服务的新实例。唯一需要的参数是服务名称。这与Services文件中的方法名称始终返回该类的SHARED实例相同，因此多次调用该函数应始终返回同一实例：</target>
        </trans-unit>
        <trans-unit id="f40a405b3d56e35d5f0a1b22cf8dcf7ce8579473" translate="yes" xml:space="preserve">
          <source>The first item in the placeholder corresponds to the index of the item in the array, if it&amp;rsquo;s numerical:</source>
          <target state="translated">如果是数字，则占位符中的第一项对应于数组中该项的索引：</target>
        </trans-unit>
        <trans-unit id="7c4179980494b1a2983eb2fd0f71733821c23e58" translate="yes" xml:space="preserve">
          <source>The first line in this method checks whether the page actually exists. PHP&amp;rsquo;s native &lt;code&gt;file_exists()&lt;/code&gt; function is used to check whether the file is where it&amp;rsquo;s expected to be. &lt;code&gt;show_404()&lt;/code&gt; is a built-in CodeIgniter function that renders the default error page.</source>
          <target state="translated">此方法的第一行检查页面是否实际存在。PHP的本机 &lt;code&gt;file_exists()&lt;/code&gt; 函数用于检查文件是否在预期位置。 &lt;code&gt;show_404()&lt;/code&gt; 是内置的CodeIgniter函数，可呈现默认错误页面。</target>
        </trans-unit>
        <trans-unit id="0c10ed1e1dc566c09fd77f3a97eae6e05adc5368" translate="yes" xml:space="preserve">
          <source>The first line in this method checks whether the page actually exists. PHP&amp;rsquo;s native &lt;code&gt;is_file()&lt;/code&gt; function is used to check whether the file is where it&amp;rsquo;s expected to be. The &lt;code&gt;PageNotFoundException&lt;/code&gt; is a CodeIgniter exception that causes the default error page to show.</source>
          <target state="translated">此方法的第一行检查页面是否实际存在。PHP的本机 &lt;code&gt;is_file()&lt;/code&gt; 函数用于检查文件是否在预期位置。该 &lt;code&gt;PageNotFoundException&lt;/code&gt; 是一个笨的异常，导致默认错误页面显示。</target>
        </trans-unit>
        <trans-unit id="15abe5276d2aa42e9e2c59dce197591afa3bfd17" translate="yes" xml:space="preserve">
          <source>The first paramenter is the text to extract an excerpt from, the second is the central word or phrase to count before and after. The third parameter is the number of characters to count before and after the central phrase. If no phrase passed, the excerpt will include the first $radius characters with the elipsis at the end.</source>
          <target state="translated">第一个参数是要摘录的文本,第二个参数是要计算前后的中心词或短语。第三个参数是中心词组前后要计算的字符数。如果没有传递短语,则摘录的内容将包括前$radius字符,并在结尾处加上省略号。</target>
        </trans-unit>
        <trans-unit id="e710955db1bc69367ddf17af637e8c0371be5a8f" translate="yes" xml:space="preserve">
          <source>The first parameter can contain any segments you wish appended to the URL. As with the &lt;a href=&quot;#site_url&quot;&gt;&lt;code&gt;site_url()&lt;/code&gt;&lt;/a&gt; function above, segments can be a string or an array.</source>
          <target state="translated">第一个参数可以包含您希望附加到URL的任何段。与上面的&lt;a href=&quot;#site_url&quot;&gt; &lt;code&gt;site_url()&lt;/code&gt; &lt;/a&gt;函数一样，段可以是字符串或数组。</target>
        </trans-unit>
        <trans-unit id="62d6d89fb07b5653b1df041861150aa7bea31948" translate="yes" xml:space="preserve">
          <source>The first parameter contains the name of the &lt;a href=&quot;../general/views&quot;&gt;view file&lt;/a&gt; (in this example the file would be called blog_template.php), and the second parameter contains an associative array of data to be replaced in the template. In the above example, the template would contain two variables: {blog_title} and {blog_heading}</source>
          <target state="translated">第一个参数包含&lt;a href=&quot;../general/views&quot;&gt;视图文件&lt;/a&gt;的名称（在本示例中，该文件称为blog_template.php），第二个参数包含要在模板中替换的数据的关联数组。在上面的示例中，模板将包含两个变量：{blog_title}和{blog_heading}</target>
        </trans-unit>
        <trans-unit id="5d892b3c33b8d6bf3949d1ae5996880723e90f42" translate="yes" xml:space="preserve">
          <source>The first parameter contains the name of the column you would like to order by.</source>
          <target state="translated">第一个参数包含你想排序的列名。</target>
        </trans-unit>
        <trans-unit id="cabd415c9922743f8d13ed6cd27d7c3c7bef0946" translate="yes" xml:space="preserve">
          <source>The first parameter enables you to set whether or not the query builder query will be reset (by default it will be reset, just like when using &lt;code&gt;$builder-&amp;gt;get()&lt;/code&gt;):</source>
          <target state="translated">第一个参数使您可以设置是否重置查询构建器查询（默认情况下，它将重置，就像使用 &lt;code&gt;$builder-&amp;gt;get()&lt;/code&gt; ）：</target>
        </trans-unit>
        <trans-unit id="c898181ed33e5d491a0bb925f066421722284fd8" translate="yes" xml:space="preserve">
          <source>The first parameter is an associative array of values, the second parameter is the where key.</source>
          <target state="translated">第一个参数是值的关联数组,第二个参数是where键。</target>
        </trans-unit>
        <trans-unit id="155f743e0b15ed980fa4072b9a759ba9d79c7fcd" translate="yes" xml:space="preserve">
          <source>The first parameter is an associative array of values.</source>
          <target state="translated">第一个参数是一个值的关联数组。</target>
        </trans-unit>
        <trans-unit id="a9d08eb7dce04c3e28acaa5dd60a74f6aa0d8f34" translate="yes" xml:space="preserve">
          <source>The first parameter is an object.</source>
          <target state="translated">第一个参数是一个对象。</target>
        </trans-unit>
        <trans-unit id="91307dd7c2e3e3df6387d09e1ab034c7f3820f07" translate="yes" xml:space="preserve">
          <source>The first parameter is required. It is the name of the view file you would like to load.</source>
          <target state="translated">第一个参数是必需的。它是您要加载的视图文件的名称。</target>
        </trans-unit>
        <trans-unit id="616924b1fdfda1d7ee9af0c395f904e8d4f771f7" translate="yes" xml:space="preserve">
          <source>The first parameter is the &lt;strong&gt;name you want the downloaded file to be named&lt;/strong&gt;, the second parameter is the file data.</source>
          <target state="translated">第一个参数是&lt;strong&gt;您要为下载文件命名的名称&lt;/strong&gt;，第二个参数是文件数据。</target>
        </trans-unit>
        <trans-unit id="43f61544a4f289eec34c010b70236eb693d94bac" translate="yes" xml:space="preserve">
          <source>The first parameter is the error number while the second parameter is the error message.</source>
          <target state="translated">第一个参数是错误编号,第二个参数是错误信息。</target>
        </trans-unit>
        <trans-unit id="0b60f95d78dc7293d55161c5ab4fd22a736a6647" translate="yes" xml:space="preserve">
          <source>The first parameter is the service that you are replacing. The name must match the function name in the Services class exactly. The second parameter is the instance to replace it with.</source>
          <target state="translated">第一个参数是你要替换的服务。这个名称必须与Services类中的函数名称完全匹配。第二个参数是要替换的实例。</target>
        </trans-unit>
        <trans-unit id="922336e4149e1e32162c31f2eb84298f25318a4b" translate="yes" xml:space="preserve">
          <source>The first parameter is the string of text that you wish to display. The second parameter is an array of options that allow you to specify how the text should be displayed:</source>
          <target state="translated">第一个参数是您希望显示的文本字符串。第二个参数是一个选项数组,允许你指定文本的显示方式。</target>
        </trans-unit>
        <trans-unit id="6d4cb6ba6da6e3617c84957a20b5f8d73c9500b0" translate="yes" xml:space="preserve">
          <source>The first parameter is the string to ellipsize, the second is the number of characters in the final string. The third parameter is where in the string the ellipsis should appear from 0 - 1, left to right. For example. a value of 1 will place the ellipsis at the right of the string, .5 in the middle, and 0 at the left.</source>
          <target state="translated">第一个参数是要省略的字符串,第二个参数是最终字符串的字符数。第三个参数是字符串中省略号的位置,从0到1,从左到右。例如,值为1时,省略号将出现在字符串的右边,0.5出现在中间,0出现在左边。</target>
        </trans-unit>
        <trans-unit id="7dad7d86cd38aac21d1116631067baa2973ef7cf" translate="yes" xml:space="preserve">
          <source>The first parameter is the table name, the second is an associative array with the data to be inserted. The above example produces:</source>
          <target state="translated">第一个参数是表名,第二个参数是要插入数据的关联数组。上面的例子产生的结果是:</target>
        </trans-unit>
        <trans-unit id="7d3800d9bd13b38ea465cc39e82c119f2ddc2c64" translate="yes" xml:space="preserve">
          <source>The first parameter is the table name, the second is an associative array with the data to be updated, and the third parameter is the &amp;ldquo;where&amp;rdquo; clause. The above example produces:</source>
          <target state="translated">第一个参数是表名，第二个参数是与要更新的数据的关联数组，第三个参数是&amp;ldquo; where&amp;rdquo;子句。上面的示例产生：</target>
        </trans-unit>
        <trans-unit id="c4fd3d807b2e6b4856bcf6c44ce3c054b828579e" translate="yes" xml:space="preserve">
          <source>The first parameter is the table name, the second is the where clause. You can also use the where() or or_where() functions instead of passing the data to the second parameter of the function:</source>
          <target state="translated">第一个参数是表名,第二个参数是where子句。你也可以使用where()或or_where()函数来代替将数据传递给函数的第二个参数。</target>
        </trans-unit>
        <trans-unit id="888a5575a8f84e08400760012fb83829cdd29c25" translate="yes" xml:space="preserve">
          <source>The first parameter is the where clause. You can also use the where() or or_where() functions instead of passing the data to the first parameter of the function:</source>
          <target state="translated">第一个参数是where子句。你也可以使用where()或or_where()函数来代替将数据传递给函数的第一个参数。</target>
        </trans-unit>
        <trans-unit id="f41f5a50c02edb607dc60f107f3fba44af345274" translate="yes" xml:space="preserve">
          <source>The first parameter lets you set an offset, which defaults to 3 since your URI will normally contain a controller/method pair in the first and second segments. Example:</source>
          <target state="translated">第一个参数让你设置偏移量,默认为3,因为你的URI通常会在第一段和第二段中包含一个控制器/方法对。例子:</target>
        </trans-unit>
        <trans-unit id="a2c3e781cd4c3e5a8a8e7004b60bff0b1def81e6" translate="yes" xml:space="preserve">
          <source>The first parameter lets you set the &amp;ldquo;selected&amp;rdquo; state of the menu. For example, to set Pacific time as the default you will do this:</source>
          <target state="translated">第一个参数使您可以设置菜单的&amp;ldquo;选定&amp;rdquo;状态。例如，要将太平洋时间设置为默认时间，您可以这样做：</target>
        </trans-unit>
        <trans-unit id="dd16868059ab6add63623445a2ecbebe3bc84917" translate="yes" xml:space="preserve">
          <source>The first parameter must contain a UNIX timestamp. The second parameter must contain a timestamp that is greater that the first timestamp. The thirdparameter is optional and limits the number of time units to display.</source>
          <target state="translated">第一个参数必须包含一个UNIX时间戳,第二个参数必须包含一个大于第一个时间戳的时间戳。第二个参数必须包含一个大于第一个时间戳的时间戳。第三个参数是可选的,限制显示的时间单位数量。</target>
        </trans-unit>
        <trans-unit id="8a1d20a952ea0e0cd26b7470acf2a9b92fdf5679" translate="yes" xml:space="preserve">
          <source>The first parameter must contain the name of the checkbox, the second parameter must contain its value, and the third (optional) parameter lets you set an item as the default (use boolean TRUE/FALSE).</source>
          <target state="translated">第一个参数必须包含复选框的名称,第二个参数必须包含它的值,第三个(可选)参数让你设置一个项目为默认值(使用布尔值TRUE/FALSE)。</target>
        </trans-unit>
        <trans-unit id="80899e1baf5ec5f003caac7f4435758e8409b343" translate="yes" xml:space="preserve">
          <source>The first parameter must contain the name of the select menu, the second parameter must contain the value of each item, and the third (optional) parameter lets you set an item as the default (use boolean TRUE/FALSE).</source>
          <target state="translated">第一个参数必须包含选择菜单的名称,第二个参数必须包含每个项目的值,第三个(可选)参数让你将一个项目设置为默认值(使用布尔值TRUE/FALSE)。</target>
        </trans-unit>
        <trans-unit id="9e02a95effc6a2b3742765954a2876bf93207113" translate="yes" xml:space="preserve">
          <source>The first parameter of this function can &lt;strong&gt;optionally&lt;/strong&gt; be used to specify a particular database group from your config file, or you can even submit connection values for a database that is not specified in your config file. Examples:</source>
          <target state="translated">该功能的第一个参数可以&lt;strong&gt;选择&lt;/strong&gt;用于从配置文件中指定特定的数据库组，或者甚至可以提交未在配置文件中指定的数据库的连接值。例子：</target>
        </trans-unit>
        <trans-unit id="07131d562d860f8e5ad13517649d8fec8f654901" translate="yes" xml:space="preserve">
          <source>The first parameter of this function can &lt;strong&gt;optionally&lt;/strong&gt; be used to specify a particular database group from your config file. Examples:</source>
          <target state="translated">可以&lt;strong&gt;选择&lt;/strong&gt;使用此函数的第一个参数从配置文件中指定特定的数据库组。例子：</target>
        </trans-unit>
        <trans-unit id="c93e88111eccee82539017d653ad01f9dc20aee0" translate="yes" xml:space="preserve">
          <source>The first parameter specifies the type of string, the second parameter specifies the length. The following choices are available:</source>
          <target state="translated">第一个参数指定字符串的类型,第二个参数指定长度。有以下几种选择。</target>
        </trans-unit>
        <trans-unit id="987ce60318e6ced200dcd68188fa42be0d7efbe5" translate="yes" xml:space="preserve">
          <source>The first parameter to each of the &amp;ldquo;add&amp;rdquo; methods is an appropriate string value, or an array of them.</source>
          <target state="translated">每个&amp;ldquo; add&amp;rdquo;方法的第一个参数是适当的字符串值或它们的数组。</target>
        </trans-unit>
        <trans-unit id="ecd0df7606ba21f32105e0cc84a603fe5d6ca60a" translate="yes" xml:space="preserve">
          <source>The first parameter will contain the name of the POST item you are looking for:</source>
          <target state="translated">第一个参数将包含你正在寻找的POST项目的名称。</target>
        </trans-unit>
        <trans-unit id="4645949e8bc5bf48b77e7eef1ada71e1e808f124" translate="yes" xml:space="preserve">
          <source>The first parameter will contain the name of the REQUEST item you are looking for:</source>
          <target state="translated">第一个参数将包含你正在寻找的REQUEST项目的名称。</target>
        </trans-unit>
        <trans-unit id="156b48de851b4d15f4b8ac1bb57e5fcc4aa16c3e" translate="yes" xml:space="preserve">
          <source>The first parameter will contain the table name, the second is an associative array of values, the third parameter is the where key.</source>
          <target state="translated">第一个参数将包含表名,第二个参数是值的关联数组,第三个参数是where键。</target>
        </trans-unit>
        <trans-unit id="fb0f54a93e173bb9eea4df70309bad146b90deb7" translate="yes" xml:space="preserve">
          <source>The first parameter will contain the table name, the second is an associative array of values.</source>
          <target state="translated">第一个参数将包含表名,第二个参数是值的关联数组。</target>
        </trans-unit>
        <trans-unit id="53a1e26fba1ebc60f7810d63acae346166738940" translate="yes" xml:space="preserve">
          <source>The first parameter will contain the table name, the second is an object.</source>
          <target state="translated">第一个参数将包含表名,第二个参数是一个对象。</target>
        </trans-unit>
        <trans-unit id="103798f6010a569a43393a253f29ad7120d37d21" translate="yes" xml:space="preserve">
          <source>The first part of this chapter gives an overview. After the concepts are out of the way, we will discuss how to work with the requests and responses within CodeIgniter.</source>
          <target state="translated">本章的第一部分给出了一个概述。在概念讲完之后,我们将讨论如何在CodeIgniter中使用请求和响应。</target>
        </trans-unit>
        <trans-unit id="12280383ac6f65bca56620239f8212aa1079daa1" translate="yes" xml:space="preserve">
          <source>The first segment represents the controller &lt;strong&gt;class&lt;/strong&gt; that should be invoked.</source>
          <target state="translated">第一部分代表应该调用的控制器&lt;strong&gt;类&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="44eabcc05470ae87da1f037b423f57432c60d984" translate="yes" xml:space="preserve">
          <source>The first step is to &lt;a href=&quot;../installation/index&quot;&gt;install&lt;/a&gt; CodeIgniter, then read all the topics in the &lt;strong&gt;Introduction&lt;/strong&gt; section of the Table of Contents.</source>
          <target state="translated">第一步是&lt;a href=&quot;../installation/index&quot;&gt;安装&lt;/a&gt; CodeIgniter，然后阅读目录中&amp;ldquo; &lt;strong&gt;简介&amp;rdquo;&lt;/strong&gt;部分中的所有主题。</target>
        </trans-unit>
        <trans-unit id="86867a6001bafa32b0500e850519519842a4f051" translate="yes" xml:space="preserve">
          <source>The first step is to create custom views. These can be placed anywhere that the &lt;code&gt;view()&lt;/code&gt; method can locate them, which means the standard View directory, or any namespaced View folder will work. For example, you could create a new view at &lt;strong&gt;/app/Views/_errors_list.php&lt;/strong&gt;:</source>
          <target state="translated">第一步是创建自定义视图。它们可以放置在 &lt;code&gt;view()&lt;/code&gt; 方法可以找到它们的任何位置，这意味着标准View目录或任何命名空间的View文件夹都可以使用。例如，您可以在&lt;strong&gt;/app/Views/_errors_list.php中&lt;/strong&gt;创建一个新视图：</target>
        </trans-unit>
        <trans-unit id="07f7ed889cd7fe5fba03957be1f4179dd7f9f1c4" translate="yes" xml:space="preserve">
          <source>The first step is to fill out the &lt;code&gt;$validationRules&lt;/code&gt; class property with the fields and rules that should be applied. If you have custom error message that you want to use, place them in the &lt;code&gt;$validationMessages&lt;/code&gt; array:</source>
          <target state="translated">第一步是使用应应用的字段和规则填充 &lt;code&gt;$validationRules&lt;/code&gt; 类属性。如果您有要使用的自定义错误消息，请将其放在 &lt;code&gt;$validationMessages&lt;/code&gt; 数组中：</target>
        </trans-unit>
        <trans-unit id="571be21b1a738a4f405879f12095c69e6bdb3c03" translate="yes" xml:space="preserve">
          <source>The first thing to notice is the name of the methods we&amp;rsquo;ve added. For each one, the class expects the snake_case column name to be converted into PascalCase, and prefixed with either &lt;code&gt;set&lt;/code&gt; or &lt;code&gt;get&lt;/code&gt;. These methods will then be automatically called whenever you set or retrieve the class property using the direct syntax (i.e. $user-&amp;gt;email). The methods do not need to be public unless you want them accessed from other classes. For example, the &lt;code&gt;created_at&lt;/code&gt; class property will be accessed through the &lt;code&gt;setCreatedAt()&lt;/code&gt; and &lt;code&gt;getCreatedAt()&lt;/code&gt; methods.</source>
          <target state="translated">首先要注意的是我们添加的方法的名称。对于每个类，该类都希望将snake_case列名转换为PascalCase，并以 &lt;code&gt;set&lt;/code&gt; 或 &lt;code&gt;get&lt;/code&gt; 开头。每当您使用直接语法（即$ user-&amp;gt; email）设置或检索class属性时，这些方法就会被自动调用。除非您希望从其他类访问它们，否则这些方法不需要是公共的。例如， &lt;code&gt;created_at&lt;/code&gt; 类属性将通过 &lt;code&gt;setCreatedAt()&lt;/code&gt; 和 &lt;code&gt;getCreatedAt()&lt;/code&gt; 方法进行访问。</target>
        </trans-unit>
        <trans-unit id="3c8a5b0daf9b4eb2bc663bd72913e52c8dde2cf6" translate="yes" xml:space="preserve">
          <source>The first thing you&amp;rsquo;re going to do is set up a &lt;strong&gt;controller&lt;/strong&gt; to handle static pages. A controller is simply a class that helps delegate work. It is the glue of your web application.</source>
          <target state="translated">您要做的第一件事是设置一个&lt;strong&gt;控制器&lt;/strong&gt;来处理静态页面。控制器只是一个有助于委派工作的类。它是您的Web应用程序的粘合剂。</target>
        </trans-unit>
        <trans-unit id="bff0f134b295240ae900af4630038360cc293b1c" translate="yes" xml:space="preserve">
          <source>The first two techniques describe creating a skeleton project using CodeIgniter4, that you would then use as the base for a new webapp. The third technique described below lets you add CodeIgniter4 to an existing webapp,</source>
          <target state="translated">前两个技术描述了使用CodeIgniter4创建一个骨架项目,然后你将使用它作为一个新的webapp的基础。下面描述的第三种技术可以让你将CodeIgniter4添加到一个现有的webapp中。</target>
        </trans-unit>
        <trans-unit id="c8762be18e8a0694b80e9772173d4ed89dfa3701" translate="yes" xml:space="preserve">
          <source>The five reserved indexes are:</source>
          <target state="translated">五个保留指数是:</target>
        </trans-unit>
        <trans-unit id="47ed1299ffa0e56a4a2400a29ba4ba6c96b61f0e" translate="yes" xml:space="preserve">
          <source>The following PHP extensions are currently supported:</source>
          <target state="translated">目前支持以下PHP扩展。</target>
        </trans-unit>
        <trans-unit id="24736861e02754384552e0c7edd643b3bc62df61" translate="yes" xml:space="preserve">
          <source>The following PHP extensions should be enabled on your server: &lt;code&gt;php-json&lt;/code&gt;, &lt;code&gt;php-mysqlnd&lt;/code&gt;, &lt;code&gt;php-xml&lt;/code&gt;</source>
          <target state="translated">您的服务器上应启用以下PHP扩展： &lt;code&gt;php-json&lt;/code&gt; ， &lt;code&gt;php-mysqlnd&lt;/code&gt; ， &lt;code&gt;php-xml&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ac5ebb0734d274254c5a5090853815b4cb124caf" translate="yes" xml:space="preserve">
          <source>The following basic getters exist:</source>
          <target state="translated">存在以下基本获取器。</target>
        </trans-unit>
        <trans-unit id="95ce3efd0ee84f1a3288c097688270b177ce689a" translate="yes" xml:space="preserve">
          <source>The following basic setters exist. If any of the values set are out of range, an &lt;code&gt;InvalidArgumentExeption&lt;/code&gt; will be thrown.</source>
          <target state="translated">存在以下基本设置器。如果设置的任何值超出范围，将抛出 &lt;code&gt;InvalidArgumentExeption&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="392f97f093c6a771d72d5c1157f4dab50d71d45a" translate="yes" xml:space="preserve">
          <source>The following code loads and initializes the database class based on your &lt;a href=&quot;configuration&quot;&gt;configuration&lt;/a&gt; settings:</source>
          <target state="translated">以下代码根据您的&lt;a href=&quot;configuration&quot;&gt;配置&lt;/a&gt;设置加载并初始化数据库类：</target>
        </trans-unit>
        <trans-unit id="1654c9cb60daaf23942e6809fe613a89e9ac0c6e" translate="yes" xml:space="preserve">
          <source>The following comes from &lt;a href=&quot;https://owasp.org/www-project-top-ten/&quot;&gt;OWASP Top Ten Cheat Sheet&lt;/a&gt;, identifying the top vulnerabilities for web applications. For each, we provide a brief description, the OWASP recommendations, and then the CodeIgniter provisions to address the problem.</source>
          <target state="translated">以下来自&lt;a href=&quot;https://owasp.org/www-project-top-ten/&quot;&gt;OWASP十大备忘单&lt;/a&gt;，确定了Web应用程序的主要漏洞。对于每一个，我们都提供一个简短的描述，OWASP建议，然后提供CodeIgniter条款来解决该问题。</target>
        </trans-unit>
        <trans-unit id="cfa2394f80efc3ad808cfacc0f26b571d02ba545" translate="yes" xml:space="preserve">
          <source>The following constants are always available anywhere within your application.</source>
          <target state="translated">以下常量在您的应用程序中的任何地方都是可用的。</target>
        </trans-unit>
        <trans-unit id="dd19eef3baa1250ea0922b93e3530248dab5c5a7" translate="yes" xml:space="preserve">
          <source>The following custom exceptions are available:</source>
          <target state="translated">以下是自定义的例外情况:</target>
        </trans-unit>
        <trans-unit id="90309348862e9146df0000da2ab87e588e715898" translate="yes" xml:space="preserve">
          <source>The following data is available from this function if supported by your database:</source>
          <target state="translated">如果您的数据库支持以下数据,则可从该函数中获得。</target>
        </trans-unit>
        <trans-unit id="13392249fcd631b13df9c1112f6794a6bf4c52f1" translate="yes" xml:space="preserve">
          <source>The following example is not impacted by cascading:</source>
          <target state="translated">下面的例子没有受到级联的影响。</target>
        </trans-unit>
        <trans-unit id="389c612f5f3b8b16b9ded17ce425d9069b0be5e1" translate="yes" xml:space="preserve">
          <source>The following example shows a common usage pattern within your controllers.</source>
          <target state="translated">下面的例子显示了控制器中常见的使用模式。</target>
        </trans-unit>
        <trans-unit id="1ce8ded02d6543206dfc253091a45a6902ff0fe9" translate="yes" xml:space="preserve">
          <source>The following example will load the cache driver, specify &lt;a href=&quot;#alternative-php-cache-apc-caching&quot;&gt;APC&lt;/a&gt; as the driver to use, and fall back to file-based caching if APC is not available in the hosting environment.</source>
          <target state="translated">下面的示例将加载缓存驱动程序，将&lt;a href=&quot;#alternative-php-cache-apc-caching&quot;&gt;APC&lt;/a&gt;指定为要使用的驱动程序，如果在宿主环境中APC不可用，则回退到基于文件的缓存。</target>
        </trans-unit>
        <trans-unit id="ce79bbb48abc4596de1fec43c9e056528c24b0e0" translate="yes" xml:space="preserve">
          <source>The following filters are available when using the parser:</source>
          <target state="translated">在使用解析器时,可以使用以下过滤器。</target>
        </trans-unit>
        <trans-unit id="694bae70a1ee5670d39392ed6d9a949d24f52d47" translate="yes" xml:space="preserve">
          <source>The following foreground colors are available:</source>
          <target state="translated">可提供以下前景色。</target>
        </trans-unit>
        <trans-unit id="6ff30eaedbe165475f480855798ea303b6cd7906" translate="yes" xml:space="preserve">
          <source>The following functions ARE NOT available when using a cached result object:</source>
          <target state="translated">当使用缓存结果对象时,以下函数不可用。</target>
        </trans-unit>
        <trans-unit id="ee489096aa3c47c9c7a61975c733f70ae484e766" translate="yes" xml:space="preserve">
          <source>The following functions all require the &lt;a href=&quot;https://www.php.net/manual/en/book.intl.php&quot;&gt;intl&lt;/a&gt; extension to be loaded on your system in order to work. If the extension is not loaded, no replacement will be attempted. A great overview can be found over at &lt;a href=&quot;https://www.sitepoint.com/localization-demystified-understanding-php-intl/&quot;&gt;Sitepoint&lt;/a&gt;.</source>
          <target state="translated">以下功能都需要在系统上加载&lt;a href=&quot;https://www.php.net/manual/en/book.intl.php&quot;&gt;intl&lt;/a&gt;扩展名才能正常工作。如果未加载扩展，则不会尝试替换。可以在&lt;a href=&quot;https://www.sitepoint.com/localization-demystified-understanding-php-intl/&quot;&gt;Sitepoint&lt;/a&gt;上找到很棒的概述。</target>
        </trans-unit>
        <trans-unit id="efe79006c99ab52393b88e302d048d80356c407a" translate="yes" xml:space="preserve">
          <source>The following functions allow you to build SQL &lt;strong&gt;SELECT&lt;/strong&gt; statements.</source>
          <target state="translated">以下功能允许您构建SQL &lt;strong&gt;SELECT&lt;/strong&gt;语句。</target>
        </trans-unit>
        <trans-unit id="02c3b27346be06cc7d986f188dfbf52bab519f98" translate="yes" xml:space="preserve">
          <source>The following functions are available:</source>
          <target state="translated">有以下功能:</target>
        </trans-unit>
        <trans-unit id="859757b96efffa07074a155836225a5833b7a9e8" translate="yes" xml:space="preserve">
          <source>The following functions let you generate errors:</source>
          <target state="translated">以下函数可以让你产生错误。</target>
        </trans-unit>
        <trans-unit id="fa025a67eaef5265994f0efa68e8f38eece68728" translate="yes" xml:space="preserve">
          <source>The following graphic illustrates how data flows throughout the system:</source>
          <target state="translated">下图说明了数据如何在整个系统中流动。</target>
        </trans-unit>
        <trans-unit id="75f5c9f4f1a1102b93ff342fc4586048480d0e96" translate="yes" xml:space="preserve">
          <source>The following image libraries are supported: GD/GD2, and ImageMagick.</source>
          <target state="translated">支持以下图像库。GD/GD2和ImageMagick。</target>
        </trans-unit>
        <trans-unit id="d2b2d2419738fc5fc9169b2d424aed9a459a8541" translate="yes" xml:space="preserve">
          <source>The following is a list of all the native rules that are available to use:</source>
          <target state="translated">以下是所有可使用的原生规则的列表。</target>
        </trans-unit>
        <trans-unit id="e146fb8606faffeb0685df17241223902f042f48" translate="yes" xml:space="preserve">
          <source>The following is a list of all the preferences that can be set when sending email.</source>
          <target state="translated">以下是发送电子邮件时可以设置的所有偏好。</target>
        </trans-unit>
        <trans-unit id="9ace79d5a084885afb64b260e1e701c10c70e16f" translate="yes" xml:space="preserve">
          <source>The following is a list of all the preferences you can pass to the initialization function to tailor the display.</source>
          <target state="translated">以下是您可以传递给初始化函数的所有偏好设置的列表,以定制显示。</target>
        </trans-unit>
        <trans-unit id="d344019cd229a2f966adf0099ce7b4c53cbfea32" translate="yes" xml:space="preserve">
          <source>The following is a list of all the prepping methods that are available to use:</source>
          <target state="translated">下面小编就为大家介绍一下所有的准备方法。</target>
        </trans-unit>
        <trans-unit id="f46aed60d175da4e4259b8af8f8202b9436b8f08" translate="yes" xml:space="preserve">
          <source>The following is a list of available event points within the CodeIgniter core code:</source>
          <target state="translated">以下是CodeIgniter核心代码中可用的事件点列表。</target>
        </trans-unit>
        <trans-unit id="286f2164afd5442e4a281ca4fac4b148d52db937" translate="yes" xml:space="preserve">
          <source>The following is a list of available hook points.</source>
          <target state="translated">以下是可用的钩点清单。</target>
        </trans-unit>
        <trans-unit id="b12824c64b9b46a58470066e590dc0ce3e968dda" translate="yes" xml:space="preserve">
          <source>The following is a list of doctype choices. These are configurable, and pulled from application/config/doctypes.php</source>
          <target state="translated">以下是一个doctype选择列表。这些都是可配置的,并从application/config/doctypes.php中提取。</target>
        </trans-unit>
        <trans-unit id="e2487999be6ef0729487de0c2bd6d73200beccd1" translate="yes" xml:space="preserve">
          <source>The following is a list of the core system files that are invoked every time CodeIgniter runs:</source>
          <target state="translated">以下是每次CodeIgniter运行时被调用的核心系统文件列表。</target>
        </trans-unit>
        <trans-unit id="6e9a275ad55259dd3dfedff7864a423c937902f4" translate="yes" xml:space="preserve">
          <source>The following is a list of the pre-defined doctype choices. These are configurable, pulled from &lt;code&gt;application/Config/DocTypes.php&lt;/code&gt;, or they could be over-ridden in your &lt;code&gt;.env&lt;/code&gt; configuration.</source>
          <target state="translated">以下是预定义的文档类型选择的列表。这些是可配置的，可以从 &lt;code&gt;application/Config/DocTypes.php&lt;/code&gt; 获取，也可以在 &lt;code&gt;.env&lt;/code&gt; 配置中覆盖它们。</target>
        </trans-unit>
        <trans-unit id="15c29f8d9aab57a63dc4b7bb40223c5c1f17e2a1" translate="yes" xml:space="preserve">
          <source>The following is a table of all the config options for migrations, available in &lt;strong&gt;app/Config/Migrations.php&lt;/strong&gt;.</source>
          <target state="translated">下表是&lt;strong&gt;app / Config / Migrations.php中&lt;/strong&gt;提供的所有迁移配置选项的表。</target>
        </trans-unit>
        <trans-unit id="d10c27af83eaed810dcab46ca392228ff0a365f9" translate="yes" xml:space="preserve">
          <source>The following is a table of all the config options for migrations.</source>
          <target state="translated">以下是所有迁移的配置选项表。</target>
        </trans-unit>
        <trans-unit id="4fc14009f7a070b3a42cc7851751557f4310be05" translate="yes" xml:space="preserve">
          <source>The following is an example of a directory for an application package named &amp;ldquo;Foo Bar&amp;rdquo;.</source>
          <target state="translated">以下是名为&amp;ldquo; Foo Bar&amp;rdquo;的应用程序包的目录示例。</target>
        </trans-unit>
        <trans-unit id="0ae69eb8f5b803f7264b143ca3a19c112b65e02d" translate="yes" xml:space="preserve">
          <source>The following items can be loaded automatically:</source>
          <target state="translated">以下项目可以自动加载。</target>
        </trans-unit>
        <trans-unit id="6efea29545b8489750b681a66ff72a2635213179" translate="yes" xml:space="preserve">
          <source>The following methods allow you to compare one Time instance with another. All comparisons are first converted to UTC before comparisons are done, to ensure that different timezones respond correctly.</source>
          <target state="translated">以下方法允许您将一个时间实例与另一个时间实例进行比较。在进行比较之前,所有的比较都会先转换为UTC,以确保不同时区的响应正确。</target>
        </trans-unit>
        <trans-unit id="0c0ca3fd5b5502ec180daa4560daa71f43897add" translate="yes" xml:space="preserve">
          <source>The following methods allow you to modify the date by adding or subtracting values to the current Time. This will not modify the existing Time instance, but will return a new instance.</source>
          <target state="translated">下面的方法允许你通过向当前时间添加或减去数值来修改日期。这不会修改现有的时间实例,但会返回一个新的实例。</target>
        </trans-unit>
        <trans-unit id="b2e179690683ce038346d50adf520abc7ba8acff" translate="yes" xml:space="preserve">
          <source>The following page contains example code showing how the database class is used. For complete details please read the individual pages describing each function.</source>
          <target state="translated">下面的页面包含了显示如何使用数据库类的示例代码。关于完整的细节,请阅读描述每个函数的单独页面。</target>
        </trans-unit>
        <trans-unit id="aecba606b709e08c385558b4f753d2e1932ff25e" translate="yes" xml:space="preserve">
          <source>The following page describes the coding styles adhered to when contributing to the development of CodeIgniter. There is no requirement to use these styles in your own CodeIgniter application, though they are recommended.</source>
          <target state="translated">下面的页面描述了在开发CodeIgniter时要遵守的编码风格。虽然没有要求在你自己的CodeIgniter应用程序中使用这些风格,但建议使用。</target>
        </trans-unit>
        <trans-unit id="c8c304f5c7b15bcf7bb62b37cd4e39ad558ff6a4" translate="yes" xml:space="preserve">
          <source>The following pages describe the architectural concepts behind CodeIgniter4:</source>
          <target state="translated">以下几页描述了CodeIgniter4背后的架构概念。</target>
        </trans-unit>
        <trans-unit id="8d159a81060a80bf555851242e6ee33fd18e2a68" translate="yes" xml:space="preserve">
          <source>The following pages describe the broad concepts behind CodeIgniter:</source>
          <target state="translated">以下页面描述了CodeIgniter背后的广泛概念。</target>
        </trans-unit>
        <trans-unit id="a55b7426bc4ce10e8e87362b80495bc4f307cf71" translate="yes" xml:space="preserve">
          <source>The following placeholders are available for you to use in your routes:</source>
          <target state="translated">下列占位符可供您在路线中使用。</target>
        </trans-unit>
        <trans-unit id="fd03bbaf2f4a57ddb977879361ad6db0e0cc5b4e" translate="yes" xml:space="preserve">
          <source>The following plugins are available when using the parser:</source>
          <target state="translated">使用解析器时,可以使用以下插件。</target>
        </trans-unit>
        <trans-unit id="1b294ac4c72e19e94a86681d1c2f5c6470176308" translate="yes" xml:space="preserve">
          <source>The following preferences are available. The default value indicates what will be used if you do not specify that preference.</source>
          <target state="translated">以下是可用的首选项。默认值表示如果您不指定该首选项,将使用什么。</target>
        </trans-unit>
        <trans-unit id="8738645ba2dd0b30608077d72c6c14a8f4aec8fb" translate="yes" xml:space="preserve">
          <source>The following properties should be used in order to get listed in CLI commands and to add help functionality to your command:</source>
          <target state="translated">为了在CLI命令中获得列表,并为你的命令添加帮助功能,应该使用以下属性。</target>
        </trans-unit>
        <trans-unit id="96280af471c3ee95653107b24f526a64d6921bb6" translate="yes" xml:space="preserve">
          <source>The following statements can be cached: select, from, join, where, like, group_by, having, order_by</source>
          <target state="translated">可以缓存以下语句:select,from,join,where,like,group_by,having,order_by。</target>
        </trans-unit>
        <trans-unit id="8a83e07f0f9e28ca779668202e46ca007d6fb2e9" translate="yes" xml:space="preserve">
          <source>The following table indicates each timezone and its location.</source>
          <target state="translated">下表显示了每个时区及其位置。</target>
        </trans-unit>
        <trans-unit id="04f43f40c0fdd09b4dc7452b60915a1a4de09288" translate="yes" xml:space="preserve">
          <source>The font color, specified in hex. Both the full 6-length (ie, 993300) and the short three character abbreviated version (ie, fff) are supported.</source>
          <target state="translated">字体颜色,用十六进制指定。支持完整的6号字体(即993300)和简短的3个字符缩写版本(即fff)。</target>
        </trans-unit>
        <trans-unit id="2d0a73ef112f5caf215171d7a45b56455ecfe80d" translate="yes" xml:space="preserve">
          <source>The form (Signup.php) is a standard web form with a couple of exceptions:</source>
          <target state="translated">这个表单(Signup.php)是一个标准的web表单,但有几个例外。</target>
        </trans-unit>
        <trans-unit id="fd3ccefc612790353a0125f8f6cb7ed191b94ef4" translate="yes" xml:space="preserve">
          <source>The form (myform.php) is a standard web form with a couple exceptions:</source>
          <target state="translated">这个表单(myform.php)是一个标准的web表单,但有几个例外。</target>
        </trans-unit>
        <trans-unit id="1bdc93b4e98d91956134727777637a365a12a80e" translate="yes" xml:space="preserve">
          <source>The form fields are not yet being re-populated with the data when there is an error. We&amp;rsquo;ll get to that shortly.</source>
          <target state="translated">出现错误时，尚未使用数据重新填充表单字段。我们将尽快解决。</target>
        </trans-unit>
        <trans-unit id="39667a7e2af0504bf523f7c78c8fe44eb9c53ad5" translate="yes" xml:space="preserve">
          <source>The form that you are using must be a POST request. GET requests cannot be spoofed.</source>
          <target state="translated">你使用的表单必须是POST请求。GET请求不能被欺骗。</target>
        </trans-unit>
        <trans-unit id="01aa0984421463ddbb8d6f53a1796214b15fdc54" translate="yes" xml:space="preserve">
          <source>The format to use for timestamps when creating a migration.</source>
          <target state="translated">创建迁移时用于时间戳的格式。</target>
        </trans-unit>
        <trans-unit id="b80d8fc7ed72421cb8b5d83d20df566a4a7fddc6" translate="yes" xml:space="preserve">
          <source>The former userdata method is deprecated, but you can pass an array containing your new session data to the &lt;code&gt;set()&lt;/code&gt; method:</source>
          <target state="translated">不建议使用以前的userdata方法，但是您可以将包含新会话数据的数组传递给 &lt;code&gt;set()&lt;/code&gt; 方法：</target>
        </trans-unit>
        <trans-unit id="4a31fae67d3c364d9475667af2056af67beaf817" translate="yes" xml:space="preserve">
          <source>The fourth parameter lets you set one or more attributes on the generated select tag.</source>
          <target state="translated">第四个参数可让您在生成的选择标签上设置一个或多个属性。</target>
        </trans-unit>
        <trans-unit id="e6dde8d7606c9682badfcf3ed5d7228e202edfc8" translate="yes" xml:space="preserve">
          <source>The framework has a &lt;code&gt;phpunit.xml.dist&lt;/code&gt; file in the project root. This controls unit testing of the framework itself. If you provide your own &lt;code&gt;phpunit.xml&lt;/code&gt;, it will over-ride this.</source>
          <target state="translated">该框架在项目根目录中有一个 &lt;code&gt;phpunit.xml.dist&lt;/code&gt; 文件。这控制了框架本身的单元测试。如果您提供自己的 &lt;code&gt;phpunit.xml&lt;/code&gt; ，它将覆盖它。</target>
        </trans-unit>
        <trans-unit id="08077eb40a1b9be715db28b2c97e09e61637d883" translate="yes" xml:space="preserve">
          <source>The function expects the string passed to it to be the file path to the page that isn&amp;rsquo;t found. The exit status code will be set to &lt;code&gt;EXIT_UNKNOWN_FILE&lt;/code&gt;. Note that CodeIgniter automatically shows 404 messages if controllers are not found.</source>
          <target state="translated">该函数期望传递给它的字符串是找不到页面的文件路径。退出状态代码将设置为 &lt;code&gt;EXIT_UNKNOWN_FILE&lt;/code&gt; 。请注意，如果未找到控制器，CodeIgniter会自动显示404消息。</target>
        </trans-unit>
        <trans-unit id="52491ca9b6871d45f846d3d1eb14c627cf3b340f" translate="yes" xml:space="preserve">
          <source>The function names in the above example are arbitrary. You&amp;rsquo;ll decide what they should be called on your server, or if you are using standardized APIs, like the Blogger or MetaWeblog API, you&amp;rsquo;ll use their function names.</source>
          <target state="translated">上例中的函数名称是任意的。您将决定在服务器上应调用它们的名称，或者如果使用的是标准化API（例如Blogger或MetaWeblog API），则将使用它们的函数名称。</target>
        </trans-unit>
        <trans-unit id="6a2804531e9a9d9e76a0b7a5a549a5abe2df32b8" translate="yes" xml:space="preserve">
          <source>The function result</source>
          <target state="translated">函数结果</target>
        </trans-unit>
        <trans-unit id="21c65bd9c7c96d884334d083b0ea4d8822ef7247" translate="yes" xml:space="preserve">
          <source>The function returns NULL if the item you are trying to fetch does not exist.</source>
          <target state="translated">如果你试图获取的项目不存在,该函数返回NULL。</target>
        </trans-unit>
        <trans-unit id="1bd266cce94e26cfdb590b120fc1bc2feb5c63c3" translate="yes" xml:space="preserve">
          <source>The function uses PHP&amp;rsquo;s &lt;code&gt;highlight_string()&lt;/code&gt; function, so the colors used are the ones specified in your php.ini file.</source>
          <target state="translated">该函数使用PHP的 &lt;code&gt;highlight_string()&lt;/code&gt; 函数，因此使用的颜色是在php.ini文件中指定的颜色。</target>
        </trans-unit>
        <trans-unit id="a5b78a9e5afcf27f53a72ee04f170eba8f2c43c8" translate="yes" xml:space="preserve">
          <source>The function will return a UNIX timestamp by default. You can, optionally, pass a format string (the same type as the PHP &lt;code&gt;date()&lt;/code&gt; function accepts) as the second parameter.</source>
          <target state="translated">默认情况下，该函数将返回UNIX时间戳。您可以选择传递格式字符串（与PHP &lt;code&gt;date()&lt;/code&gt; 函数接受的类型相同）作为第二个参数。</target>
        </trans-unit>
        <trans-unit id="e5abc553e483a62ea68f9195aba980dad53d8260" translate="yes" xml:space="preserve">
          <source>The function would return:</source>
          <target state="translated">该函数将返回:</target>
        </trans-unit>
        <trans-unit id="c8ddfc24b2e433df38c2faadd6a345c1e5ceb9c2" translate="yes" xml:space="preserve">
          <source>The functions within files loaded this way are not truly namespaced. The namespace is simply used as a convenient way to locate the files.</source>
          <target state="translated">以这种方式加载的文件中的函数并不是真正的命名空间。命名空间只是作为一种方便的方式来定位文件。</target>
        </trans-unit>
        <trans-unit id="d9871c656a6ccc1e8e1f85a940ea9c6d733b6993" translate="yes" xml:space="preserve">
          <source>The generated CSV file as a string</source>
          <target state="translated">生成的CSV文件是一个字符串</target>
        </trans-unit>
        <trans-unit id="bdd69b583634902724c18b1b88353d8461a2fc1b" translate="yes" xml:space="preserve">
          <source>The generated XML document as a string</source>
          <target state="translated">生成的XML文档是一个字符串</target>
        </trans-unit>
        <trans-unit id="ce932c166935c597d80ea5401b58114681852cd7" translate="yes" xml:space="preserve">
          <source>The guidelines for variable naming are very similar to those used for class methods. Variables should contain only lowercase letters, use underscore separators, and be reasonably named to indicate their purpose and contents. Very short, non-word variables should only be used as iterators in for() loops.</source>
          <target state="translated">变量的命名准则与类方法的命名准则非常相似。变量应该只包含小写字母,使用下划线分隔符,并合理地命名以表明其目的和内容。非常短的、非字型的变量只能作为for()循环中的迭代器使用。</target>
        </trans-unit>
        <trans-unit id="3cb101ba06700359e387dc50a8cdc3d812f78651" translate="yes" xml:space="preserve">
          <source>The handlers are configured in the main configuration file, in the &lt;code&gt;$handlers&lt;/code&gt; property, which is simply an array of handlers and their configuration. Each handler is specified with the key being the fully name-spaced class name. The value will be an array of varying properties, specific to each handler. Each handler&amp;rsquo;s section will have one property in common: &lt;code&gt;handles&lt;/code&gt;, which is an array of log level &lt;em&gt;names&lt;/em&gt; that the handler will log information for.</source>
          <target state="translated">处理程序是在 &lt;code&gt;$handlers&lt;/code&gt; 属性的主配置文件中配置的，该属性只是处理程序及其配置的数组。指定每个处理程序，键为全名称分隔的类名。该值将是一个针对每个处理程序的不同属性的数组。每个处理程序的部分将具有一个共同的属性： &lt;code&gt;handles&lt;/code&gt; ，这是处理程序将为其记录信息的日志级别&lt;em&gt;名称&lt;/em&gt;的数组。</target>
        </trans-unit>
        <trans-unit id="5d5c9f9de276d00743c41acac1d05f5b9e5fce02" translate="yes" xml:space="preserve">
          <source>The header contains the basic HTML code that you&amp;rsquo;ll want to display before loading the main view, together with a heading. It will also output the &lt;code&gt;$title&lt;/code&gt; variable, which we&amp;rsquo;ll define later in the controller. Now, create a footer at &lt;em&gt;application/views/templates/footer.php&lt;/em&gt; that includes the following code:</source>
          <target state="translated">标头包含您要在加载主视图之前显示的基本HTML代码以及标题。它还将输出 &lt;code&gt;$title&lt;/code&gt; 变量，稍后将在控制器中对其进行定义。现在，在&lt;em&gt;application / views / templates / footer.php&lt;/em&gt;中创建一个包含以下代码的页脚：</target>
        </trans-unit>
        <trans-unit id="1104857f3e9351ca6467bf8be12316b1de342b8e" translate="yes" xml:space="preserve">
          <source>The header contains the basic HTML code that you&amp;rsquo;ll want to display before loading the main view, together with a heading. It will also output the &lt;code&gt;$title&lt;/code&gt; variable, which we&amp;rsquo;ll define later in the controller. Now, create a footer at &lt;strong&gt;app/Views/templates/footer.php&lt;/strong&gt; that includes the following code:</source>
          <target state="translated">标头包含您要在加载主视图之前显示的基本HTML代码以及标题。它还将输出 &lt;code&gt;$title&lt;/code&gt; 变量，稍后将在控制器中对其进行定义。现在，在&lt;strong&gt;app / Views / templates / footer.php&lt;/strong&gt;中创建一个包含以下代码的页脚：</target>
        </trans-unit>
        <trans-unit id="8d49fcce73ae0bddf832acc5746e6ccfa0c8441f" translate="yes" xml:space="preserve">
          <source>The header name is compared in a case-insensitive manner.</source>
          <target state="translated">头部名称以不区分大小写的方式进行比较。</target>
        </trans-unit>
        <trans-unit id="0f5f9bcdd8e6d09078f4373a02d8d61aa96d8429" translate="yes" xml:space="preserve">
          <source>The headers are any SERVER data that starts with &lt;code&gt;HTTP_&lt;/code&gt;, like &lt;code&gt;HTTP_HOST&lt;/code&gt;. Each message is converted from it&amp;rsquo;s standard uppercase and underscore format to a ucwords and dash format. The preceding &lt;code&gt;HTTP_&lt;/code&gt; is removed from the string. So &lt;code&gt;HTTP_ACCEPT_LANGUAGE&lt;/code&gt; becomes &lt;code&gt;Accept-Language&lt;/code&gt;.</source>
          <target state="translated">标头是任何以 &lt;code&gt;HTTP_&lt;/code&gt; 开头的SERVER数据，例如 &lt;code&gt;HTTP_HOST&lt;/code&gt; 。每个消息都从其标准的大写和下划线格式转换为ucwords和破折号格式。前面的 &lt;code&gt;HTTP_&lt;/code&gt; 已从字符串中删除。因此， &lt;code&gt;HTTP_ACCEPT_LANGUAGE&lt;/code&gt; 变为 &lt;code&gt;Accept-Language&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a7638da0639912e02dfb9eccf2c88a16870b31e7" translate="yes" xml:space="preserve">
          <source>The hooks feature can be globally enabled/disabled by setting the following item in the &lt;strong&gt;application/config/config.php&lt;/strong&gt; file:</source>
          <target state="translated">通过在&lt;strong&gt;application / config / config.php&lt;/strong&gt;文件中设置以下项目，可以全局启用/禁用hooks功能：</target>
        </trans-unit>
        <trans-unit id="4c654984c63d0fa20a88504add9ba177ecdeac7b" translate="yes" xml:space="preserve">
          <source>The host portion of the URI is typically the domain name of the URL. This can be easily set and retrieved with the &lt;code&gt;getHost()&lt;/code&gt; and &lt;code&gt;setHost()&lt;/code&gt; methods:</source>
          <target state="translated">URI的主机部分通常是URL的域名。可以使用 &lt;code&gt;getHost()&lt;/code&gt; 和 &lt;code&gt;setHost()&lt;/code&gt; 方法轻松地设置和检索它：</target>
        </trans-unit>
        <trans-unit id="df6396801dd61654c0e83ec596c7ddebe3edb770" translate="yes" xml:space="preserve">
          <source>The hostname of your database server. Often this is &amp;lsquo;localhost&amp;rsquo;.</source>
          <target state="translated">数据库服务器的主机名。通常这是&amp;ldquo;本地主机&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="0aebc8754833439a1acbcb8301388afa8d21dcb2" translate="yes" xml:space="preserve">
          <source>The how-to material for this has been split over several articles. This article is intended to be a reference for them.</source>
          <target state="translated">这方面的攻略资料已经分了好几篇。本文旨在为这些文章提供参考。</target>
        </trans-unit>
        <trans-unit id="10376df67be505ba8e9463ca7c17e4cb80b35a05" translate="yes" xml:space="preserve">
          <source>The image resizing method lets you resize the original image, create a copy (with or without resizing), or create a thumbnail image.</source>
          <target state="translated">图像大小调整方法可让您调整原始图像的大小,创建副本(有或没有调整大小),或创建缩略图。</target>
        </trans-unit>
        <trans-unit id="2c976bbe58108e713610f39d5aa69861c86ed109" translate="yes" xml:space="preserve">
          <source>The image rotation method requires that the angle of rotation be set via its preference:</source>
          <target state="translated">图像旋转方法需要通过其偏好设置旋转角度。</target>
        </trans-unit>
        <trans-unit id="8fdafcb8cb62195638e4559d5ed893527a11364b" translate="yes" xml:space="preserve">
          <source>The image underneath shows your project&amp;rsquo;s &lt;strong&gt;app&lt;/strong&gt; folder, with all of the files that you created in green. The two modified configuration files (Database &amp;amp; Routes) are not shown.</source>
          <target state="translated">下方的图像显示了项目的&lt;strong&gt;app&lt;/strong&gt;文件夹，所有创建的文件均以绿色显示。未显示两个修改后的配置文件（数据库和路由）。</target>
        </trans-unit>
        <trans-unit id="80389f15c11e5149c916aca36b53b5185bca9b1c" translate="yes" xml:space="preserve">
          <source>The incoming Trackback data can be retrieved using this function:</source>
          <target state="translated">使用该功能可以检索到传入的Trackback数据。</target>
        </trans-unit>
        <trans-unit id="80ec92a1a464a1fcc2bea46f7e30b447762265af" translate="yes" xml:space="preserve">
          <source>The index.php serves as the front controller, initializing the base resources needed to run CodeIgniter.</source>
          <target state="translated">index.php作为前台控制器,初始化运行CodeIgniter所需的基础资源。</target>
        </trans-unit>
        <trans-unit id="3077913483f4614e977649f2cf7f82b900cbb223" translate="yes" xml:space="preserve">
          <source>The information returned and the structure of the data is dependent on which adapter is being used.</source>
          <target state="translated">返回的信息和数据结构取决于所使用的适配器。</target>
        </trans-unit>
        <trans-unit id="558f1414fd575b25dc49790a8061bfc9182f0b9a" translate="yes" xml:space="preserve">
          <source>The input item(s), escaped</source>
          <target state="translated">输入项目,转义</target>
        </trans-unit>
        <trans-unit id="49e9887b1c73fc1e72bb9c5001b5ae6e2f743ce1" translate="yes" xml:space="preserve">
          <source>The input string with no image tags</source>
          <target state="translated">没有图像标签的输入字符串</target>
        </trans-unit>
        <trans-unit id="9212f1fa0569fbe6233991c9667bb29366afe2cb" translate="yes" xml:space="preserve">
          <source>The insert ID number when performing database inserts.</source>
          <target state="translated">执行数据库插入时的插入ID号。</target>
        </trans-unit>
        <trans-unit id="150bc486d58804db5319d34ed61a0d9d61862ffd" translate="yes" xml:space="preserve">
          <source>The is the generic method used to represent a failed response, and is used by all of the other &amp;ldquo;fail&amp;rdquo; methods.</source>
          <target state="translated">是通用方法，用于表示失败的响应，并由所有其他&amp;ldquo;失败&amp;rdquo;方法使用。</target>
        </trans-unit>
        <trans-unit id="e350ada1ad275205322fd7940f332eaf7737d551" translate="yes" xml:space="preserve">
          <source>The is the name of the handler that should be used as the primary handler when starting up the engine. Available names are: dummy, file, memcached, redis, predis, wincache.</source>
          <target state="translated">是启动引擎时作为主处理程序的处理程序的名称,可用的名称有:dummy,file,memcached,redis,predis,wincache。可用的名字有:dummy、file、memcached、redis、predis、wincache。</target>
        </trans-unit>
        <trans-unit id="a1d0420200423635b7485c5060425cf3403be4f5" translate="yes" xml:space="preserve">
          <source>The issue has already been fixed (check the develop branch, or look for closed Issues)</source>
          <target state="translated">这个问题已经解决了(检查开发分支,或查找已关闭的问题)</target>
        </trans-unit>
        <trans-unit id="0553ec938dd3c37b1436d16f2208f987d379e2f3" translate="yes" xml:space="preserve">
          <source>The jQuery Class</source>
          <target state="translated">jQuery类</target>
        </trans-unit>
        <trans-unit id="5c5b314d7e1ba8d8727e693dd7c92c8a25558c2a" translate="yes" xml:space="preserve">
          <source>The key can be either stored in your &lt;em&gt;application/config/config.php&lt;/em&gt;, or you can design your own storage mechanism and pass the key dynamically when encrypting/decrypting.</source>
          <target state="translated">密钥可以存储在&lt;em&gt;application / config / config.php中&lt;/em&gt;，也可以设计自己的存储机制并在加密/解密时动态传递密钥。</target>
        </trans-unit>
        <trans-unit id="09ed7b267c5e0615866a641192b1f036b98122cb" translate="yes" xml:space="preserve">
          <source>The key can be stored in &lt;em&gt;app/Config/Encryption.php&lt;/em&gt;, or you can design a storage mechanism of your own and pass the key dynamically when encrypting/decrypting.</source>
          <target state="translated">密钥可以存储在&lt;em&gt;app / Config / Encryption.php中&lt;/em&gt;，或者您可以设计自己的存储机制，并在加密/解密时动态传递密钥。</target>
        </trans-unit>
        <trans-unit id="a469999a3348b685e6c5a8689130293bd5651a41" translate="yes" xml:space="preserve">
          <source>The key of each row is the name of the class that you want to locate. The value is the path to locate it at.</source>
          <target state="translated">每一行的键是你要定位的类的名称。值是定位它的路径。</target>
        </trans-unit>
        <trans-unit id="23262a32c34ce04efc37fde9caec316dd1faa5cc" translate="yes" xml:space="preserve">
          <source>The key of each row is the namespace itself. This does not need a trailing slash. If you use double-quotes to define the array, be sure to escape the backward slash. That means that it would be &lt;code&gt;My\\App&lt;/code&gt;, not &lt;code&gt;My\App&lt;/code&gt;. The value is the location to the directory the classes can be found in. They should have a trailing slash.</source>
          <target state="translated">每行的键是名称空间本身。这不需要结尾的斜杠。如果使用双引号定义数组，请确保转义反斜杠。这意味着它将是 &lt;code&gt;My\\App&lt;/code&gt; ，而不是 &lt;code&gt;My\App&lt;/code&gt; 。该值是可在其中找到类的目录的位置。它们应带有斜杠。</target>
        </trans-unit>
        <trans-unit id="1ae3ee8751e1180a74eb1a18f5d22e997e658d1a" translate="yes" xml:space="preserve">
          <source>The key should be as random as possible and it &lt;strong&gt;must not&lt;/strong&gt; be a regular text string, nor the output of a hashing function, etc. In order to create a proper key, you must use the Encryption library&amp;rsquo;s &lt;code&gt;create_key()&lt;/code&gt; method</source>
          <target state="translated">密钥应尽可能随机，并且&lt;strong&gt;不能&lt;/strong&gt;是常规文本字符串，也不能是哈希函数的输出等。为了创建正确的密钥，必须使用加密库的 &lt;code&gt;create_key()&lt;/code&gt; 方法</target>
        </trans-unit>
        <trans-unit id="753c83ed33b33d86a102014450df4b250f040de3" translate="yes" xml:space="preserve">
          <source>The key should be as random as possible, and it &lt;strong&gt;must not&lt;/strong&gt; be a regular text string, nor the output of a hashing function, etc. To create a proper key, you can use the Encryption library&amp;rsquo;s &lt;code&gt;createKey()&lt;/code&gt; method.</source>
          <target state="translated">密钥应该尽可能地随机，并且&lt;strong&gt;不能&lt;/strong&gt;是常规文本字符串，也不能是哈希函数的输出等。要创建正确的密钥，可以使用加密库的 &lt;code&gt;createKey()&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="a5891cdaa7022e4817317e150369c0589f171ab5" translate="yes" xml:space="preserve">
          <source>The key thing to notice in the above example is that the second query did not utilize &lt;code&gt;$builder-&amp;gt;from()&lt;/code&gt; nor did it pass a table name into the first parameter. The reason this worked is that the query has not been executed using &lt;code&gt;$builder-&amp;gt;insert()&lt;/code&gt; which resets values or reset directly using &lt;code&gt;$builder-&amp;gt;resetQuery()&lt;/code&gt;.</source>
          <target state="translated">在上面的示例中要注意的关键是第二个查询没有使用 &lt;code&gt;$builder-&amp;gt;from()&lt;/code&gt; 也没有将表名传递给第一个参数。起作用的原因是尚未使用 &lt;code&gt;$builder-&amp;gt;insert()&lt;/code&gt; 执行查询，该查询会重置值或直接使用 &lt;code&gt;$builder-&amp;gt;resetQuery()&lt;/code&gt; 重置。</target>
        </trans-unit>
        <trans-unit id="aa4f3c3df037fefd43f2b27f603273634fa9c5d4" translate="yes" xml:space="preserve">
          <source>The key thing to notice in the above example is that the second query did not utilize &lt;code&gt;$this-&amp;gt;db-&amp;gt;from()&lt;/code&gt; nor did it pass a table name into the first parameter. The reason this worked is because the query has not been executed using &lt;code&gt;$this-&amp;gt;db-&amp;gt;insert()&lt;/code&gt; which resets values or reset directly using &lt;code&gt;$this-&amp;gt;db-&amp;gt;reset_query()&lt;/code&gt;.</source>
          <target state="translated">在上面的示例中要注意的关键是第二个查询没有使用 &lt;code&gt;$this-&amp;gt;db-&amp;gt;from()&lt;/code&gt; 也没有将表名传递给第一个参数。起作用的原因是因为尚未使用 &lt;code&gt;$this-&amp;gt;db-&amp;gt;insert()&lt;/code&gt; 执行查询，该查询会重置值或使用 &lt;code&gt;$this-&amp;gt;db-&amp;gt;reset_query()&lt;/code&gt; 直接重置。</target>
        </trans-unit>
        <trans-unit id="b9fd9e6083ad91a7e77a1d8edd8a0bb27418e088" translate="yes" xml:space="preserve">
          <source>The key thing to notice in the above example is that the second query did not utilize &lt;strong&gt;$builder-&amp;gt;from()&lt;/strong&gt; and did not pass a table name into the first parameter. The reason for this outcome is because the query has not been executed using &lt;strong&gt;$builder-&amp;gt;get()&lt;/strong&gt; which resets values or reset directly using &lt;strong&gt;$builder-&amp;gt;resetQuery()&lt;/strong&gt;.</source>
          <target state="translated">在上面的示例中要注意的关键是第二个查询没有使用&lt;strong&gt;$ builder-&amp;gt; from（）&lt;/strong&gt;并且没有将表名传递给第一个参数。产生此结果的原因是因为尚未使用&lt;strong&gt;$ builder-&amp;gt; get（）&lt;/strong&gt;执行查询，该查询&lt;strong&gt;会&lt;/strong&gt;重置值或直接使用&lt;strong&gt;$ builder-&amp;gt; resetQuery（）进行&lt;/strong&gt;重置。</target>
        </trans-unit>
        <trans-unit id="d2f0801c3934d2d9df504dc9e3076c53074a8ee1" translate="yes" xml:space="preserve">
          <source>The key thing to notice in the above example is that the second query did not utilize &lt;strong&gt;$this-&amp;gt;db-&amp;gt;from()&lt;/strong&gt; and did not pass a table name into the first parameter. The reason for this outcome is because the query has not been executed using &lt;strong&gt;$this-&amp;gt;db-&amp;gt;get()&lt;/strong&gt; which resets values or reset directly using &lt;strong&gt;$this-&amp;gt;db-&amp;gt;reset_query()&lt;/strong&gt;.</source>
          <target state="translated">在上面的示例中要注意的关键是，第二个查询没有使用&lt;strong&gt;$ this-&amp;gt; db-&amp;gt; from（）&lt;/strong&gt;并且没有将表名传递给第一个参数。产生此结果的原因是因为尚未使用&lt;strong&gt;$ this-&amp;gt; db-&amp;gt; get（）&lt;/strong&gt;执行查询，该查询&lt;strong&gt;会&lt;/strong&gt;重置值或使用&lt;strong&gt;$ this-&amp;gt; db-&amp;gt; reset_query（）&lt;/strong&gt;直接重置。</target>
        </trans-unit>
        <trans-unit id="d0d4211215dcc13f9aaccf29e1f7d95f1d15217f" translate="yes" xml:space="preserve">
          <source>The key types may be unique to the database you are using. For instance, MySQL will return one of primary, fulltext, spatial, index or unique for each key associated with a table.</source>
          <target state="translated">键类型可能是你所使用的数据库所独有的。例如,MySQL将为与表关联的每个键返回主键、全文键、空间键、索引键或唯一键中的一种。</target>
        </trans-unit>
        <trans-unit id="25a44a74534adf32b4f0a86ef9eb65c797103dcb" translate="yes" xml:space="preserve">
          <source>The language line; in an HTML label tag, if the &lt;code&gt;$for&lt;/code&gt; parameter is not empty</source>
          <target state="translated">语言行；在HTML标签标记中，如果 &lt;code&gt;$for&lt;/code&gt; 参数不为空</target>
        </trans-unit>
        <trans-unit id="9bdd4ad0521fcea00db9d3fd3c1e10ac38ec7c13" translate="yes" xml:space="preserve">
          <source>The last query executed</source>
          <target state="translated">最后执行的查询</target>
        </trans-unit>
        <trans-unit id="0ea63f90d3e983bcbba62336f7eec0bbb2cf8dab" translate="yes" xml:space="preserve">
          <source>The last thing that has to be done is loading the views in the order they should be displayed. The &lt;code&gt;view()&lt;/code&gt; function built-in to CodeIgniter will be used to do this. The second parameter in the &lt;code&gt;view()&lt;/code&gt; function is used to pass values to the view. Each value in the &lt;code&gt;$data&lt;/code&gt; array is assigned to a variable with the name of its key. So the value of &lt;code&gt;$data['title']&lt;/code&gt; in the controller is equivalent to &lt;code&gt;$title&lt;/code&gt; in the view.</source>
          <target state="translated">最后要做的就是按照视图的显示顺序加载视图。CodeIgniter内置的 &lt;code&gt;view()&lt;/code&gt; 函数将用于执行此操作。 &lt;code&gt;view()&lt;/code&gt; 函数中的第二个参数用于将值传递给视图。 &lt;code&gt;$data&lt;/code&gt; 数组中的每个值都分配给具有键名的变量。因此，控制器中 &lt;code&gt;$data['title']&lt;/code&gt; 的值等效于视图中的 &lt;code&gt;$title&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f2222d874075ce2681bad72a3aac22f453e39316" translate="yes" xml:space="preserve">
          <source>The last thing that has to be done is loading the views in the order they should be displayed. The second parameter in the &lt;code&gt;view()&lt;/code&gt; method is used to pass values to the view. Each value in the &lt;code&gt;$data&lt;/code&gt; array is assigned to a variable with the name of its key. So the value of &lt;code&gt;$data['title']&lt;/code&gt; in the controller is equivalent to &lt;code&gt;$title&lt;/code&gt; in the view.</source>
          <target state="translated">最后要做的就是按照视图的显示顺序加载视图。 &lt;code&gt;view()&lt;/code&gt; 方法中的第二个参数用于将值传递给视图。 &lt;code&gt;$data&lt;/code&gt; 数组中的每个值都分配给具有其键名的变量。因此，控制器中 &lt;code&gt;$data['title']&lt;/code&gt; 的值等效于视图中的 &lt;code&gt;$title&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ec485c5e9843d82e933e933d5435649b39e36ccc" translate="yes" xml:space="preserve">
          <source>The library can be loaded either manually or through the &lt;a href=&quot;../concepts/services&quot;&gt;Services class&lt;/a&gt;.</source>
          <target state="translated">该库可以手动加载，也可以通过&lt;a href=&quot;../concepts/services&quot;&gt;Services类&lt;/a&gt;加载。</target>
        </trans-unit>
        <trans-unit id="3237b2c65cfab43b20821d260e53d157e2ab7901" translate="yes" xml:space="preserve">
          <source>The library is loaded as a service named &lt;strong&gt;validation&lt;/strong&gt;:</source>
          <target state="translated">该库作为名为&lt;strong&gt;validation&lt;/strong&gt;的服务加载：</target>
        </trans-unit>
        <trans-unit id="437e34af2cd7cf02f6bf6385613203ccc52d0b9b" translate="yes" xml:space="preserve">
          <source>The line &lt;code&gt;$routes-&amp;gt;get('/', 'Home::index');&lt;/code&gt; is an optimization that you will want to use in a &amp;ldquo;real-world&amp;rdquo; app. But for demonstration purposes we don&amp;rsquo;t want to use that feature. &lt;code&gt;$routes-&amp;gt;get()&lt;/code&gt; is explained in &lt;a href=&quot;routing&quot;&gt;URI Routing&lt;/a&gt;</source>
          <target state="translated">该生产线 &lt;code&gt;$routes-&amp;gt;get('/', 'Home::index');&lt;/code&gt; 是您要在&amp;ldquo;真实世界&amp;rdquo;应用中使用的优化。但是出于演示目的，我们不想使用该功能。 &lt;code&gt;$routes-&amp;gt;get()&lt;/code&gt; 在&lt;a href=&quot;routing&quot;&gt;URI路由中&lt;/a&gt;说明</target>
        </trans-unit>
        <trans-unit id="24ddc6509b246409f3fa5d8704c83ce06c9551d3" translate="yes" xml:space="preserve">
          <source>The line in {file} where the logger was called</source>
          <target state="translated">在{file}中调用记录器的那一行。</target>
        </trans-unit>
        <trans-unit id="e166e771e3aceb54d357f531534fbca648344d91" translate="yes" xml:space="preserve">
          <source>The link will explain why and how.</source>
          <target state="translated">链接将解释为什么和如何。</target>
        </trans-unit>
        <trans-unit id="e64c37dccad36bdcdf522170820d76056752dc94" translate="yes" xml:space="preserve">
          <source>The list of changed files follows, with PR numbers shown.</source>
          <target state="translated">变更后的文件列表如下,并显示PR号。</target>
        </trans-unit>
        <trans-unit id="7fedf61779a452f44d7db2b974f78cab5c147d13" translate="yes" xml:space="preserve">
          <source>The local configuration file, &lt;code&gt;.env&lt;/code&gt;, that you created when you installed CodeIgniter, should have the database property settings uncommented and set appropriately for the database you want to use. Make sure you&amp;rsquo;ve configured your database properly as described &lt;a href=&quot;../database/configuration&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">安装CodeIgniter时创建的本地配置文件 &lt;code&gt;.env&lt;/code&gt; 应该取消注释数据库属性设置，并为要使用的数据库进行适当设置。确保已按照&lt;a href=&quot;../database/configuration&quot;&gt;此处&lt;/a&gt;所述正确配置数据库。</target>
        </trans-unit>
        <trans-unit id="b6cca551f8691da5d0259c0df392b3d0b9654a9b" translate="yes" xml:space="preserve">
          <source>The local development server can be customized with three command line options:</source>
          <target state="translated">本地开发服务器可以通过三个命令行选项进行自定义。</target>
        </trans-unit>
        <trans-unit id="9030c764b7570c0017e94f832ae698d5c4a07a3b" translate="yes" xml:space="preserve">
          <source>The logging system can support multiple methods of handling logging running at the same time. Each handler can be set to handle specific levels and ignore the rest. Currently, two handlers come with a default install:</source>
          <target state="translated">日志系统可以支持多种处理日志的方法同时运行。每个处理程序都可以设置为处理特定的级别,而忽略其余的级别。目前,默认安装时有两个处理程序。</target>
        </trans-unit>
        <trans-unit id="7dab4b11bad5fdc9c996572941308e37711644b4" translate="yes" xml:space="preserve">
          <source>The logging system does not provide ways to alert sysadmins or webmasters about these events, they solely log the information. For many of the more critical event levels, the logging happens automatically by the Error Handler, described above.</source>
          <target state="translated">日志系统不提供提醒系统管理员或网站管理员注意这些事件的方法,它们只记录这些信息。对于许多更关键的事件级别,日志记录是由上文所述的错误处理程序自动进行的。</target>
        </trans-unit>
        <trans-unit id="28f1f8517839ec30ee6447877c3fdd85ae47c801" translate="yes" xml:space="preserve">
          <source>The mail sending protocol.</source>
          <target state="translated">邮件发送协议。</target>
        </trans-unit>
        <trans-unit id="ae4aae8cdd112f6dffc1c3f8f997c28a8acf7f1c" translate="yes" xml:space="preserve">
          <source>The main benefit of using this tag rather than hard coding your own HTML is that it permits your site to be more portable in the event your URLs ever change.</source>
          <target state="translated">使用这个标签而不是硬编码自己的HTML的主要好处是,它允许你的网站在你的URL变化的情况下更具可移植性。</target>
        </trans-unit>
        <trans-unit id="aecca227b0bff54b0e7c1462ea7799d71473dd5f" translate="yes" xml:space="preserve">
          <source>The main methods are:</source>
          <target state="translated">主要方法有:</target>
        </trans-unit>
        <trans-unit id="f2d1f45e09adf86dbf426a676c2e7c5cc49ad230" translate="yes" xml:space="preserve">
          <source>The maximum height (in pixels) that the image can be. Set to zero for no limit.</source>
          <target state="translated">图像的最大高度(像素)。设置为零,没有限制。</target>
        </trans-unit>
        <trans-unit id="e27b7e311ef8b220525ed0a96f9f84b210e3ae15" translate="yes" xml:space="preserve">
          <source>The maximum length that a file name can be. Set to zero for no limit.</source>
          <target state="translated">文件名的最大长度。设为零则无限制。</target>
        </trans-unit>
        <trans-unit id="8c684eeb3687c52ad35b7455fad7a3eb0787a763" translate="yes" xml:space="preserve">
          <source>The maximum size (in kilobytes) that the file can be. Set to zero for no limit. Note: Most PHP installations have their own limit, as specified in the php.ini file. Usually 2 MB (or 2048 KB) by default.</source>
          <target state="translated">文件的最大大小(以千字节为单位)。设置为0表示没有限制。注意:大多数PHP安装都有自己的限制,在php.ini文件中指定。通常默认为2 MB (或2048 KB)。</target>
        </trans-unit>
        <trans-unit id="8561b5b89ff91c55a3b3f15059aa29d069cccfd2" translate="yes" xml:space="preserve">
          <source>The maximum width (in pixels) that the image can be. Set to zero for no limit.</source>
          <target state="translated">图像的最大宽度(像素)。设置为零,没有限制。</target>
        </trans-unit>
        <trans-unit id="f8cdbcce3c05daa9daa62ff4cfe85ced93e75bd8" translate="yes" xml:space="preserve">
          <source>The message is displayed using the &lt;em&gt;application/views/errors/error_db.php&lt;/em&gt; template.</source>
          <target state="translated">使用&lt;em&gt;application / views / errors / error_db.php&lt;/em&gt;模板显示该消息。</target>
        </trans-unit>
        <trans-unit id="ad99b817d16128a8681fc8e6364fc5962b4101ac" translate="yes" xml:space="preserve">
          <source>The method on the server you wish to call</source>
          <target state="translated">你想调用的服务器上的方法</target>
        </trans-unit>
        <trans-unit id="fd348990b06f4da14d822afa2085f9b8eb11f5e0" translate="yes" xml:space="preserve">
          <source>The method returns NULL if the item you are attempting to retrieve does not exist.</source>
          <target state="translated">如果你试图检索的项目不存在,该方法返回NULL。</target>
        </trans-unit>
        <trans-unit id="fb571fa01cf46778ed65292e759c487b03f0ee94" translate="yes" xml:space="preserve">
          <source>The method returns null if the item you are attempting to retrieve does not exist.</source>
          <target state="translated">如果你试图检索的项目不存在,该方法返回null。</target>
        </trans-unit>
        <trans-unit id="4534beebd587f58eddb7e70bf58aceffeeb45e50" translate="yes" xml:space="preserve">
          <source>The method would return this:</source>
          <target state="translated">该方法会返回这个。</target>
        </trans-unit>
        <trans-unit id="caca297492dace29dba9ab37dfa338ed78f39252" translate="yes" xml:space="preserve">
          <source>The methods in the above example use the &lt;a href=&quot;../database/query_builder&quot;&gt;Query Builder&lt;/a&gt; database methods.</source>
          <target state="translated">上面示例中的方法使用&lt;a href=&quot;../database/query_builder&quot;&gt;查询生成器&lt;/a&gt;数据库方法。</target>
        </trans-unit>
        <trans-unit id="95a6966cd06640067783b247a897c344ecf92c4a" translate="yes" xml:space="preserve">
          <source>The methods provided by the parent class that are available are:</source>
          <target state="translated">父类提供的可用的方法有:。</target>
        </trans-unit>
        <trans-unit id="4feb2d9128d81504069506478f654f7c29436710" translate="yes" xml:space="preserve">
          <source>The methods provided by the parent classes that are available are:</source>
          <target state="translated">父类提供的可用方法有:。</target>
        </trans-unit>
        <trans-unit id="aec412493502a05968cbe33c0a296f5004cdf578" translate="yes" xml:space="preserve">
          <source>The migration library can automatically scan all namespaces you have defined within &lt;strong&gt;app/Config/Autoload.php&lt;/strong&gt; or loaded from an external source like Composer, using the &lt;code&gt;$psr4&lt;/code&gt; property for matching directory names. It will include all migrations it finds in Database/Migrations.</source>
          <target state="translated">迁移库可以使用 &lt;code&gt;$psr4&lt;/code&gt; 属性匹配目录名称，自动扫描您在&lt;strong&gt;app / Config / Autoload.php中&lt;/strong&gt;定义或从外部源（如Composer）加载的所有名称空间。它将包括在数据库/迁移中找到的所有迁移。</target>
        </trans-unit>
        <trans-unit id="c73f7bbb53a3dd15636e3e23cd82e408d27b0ccb" translate="yes" xml:space="preserve">
          <source>The mime types corresponding to the types of files you allow to be uploaded. Usually the file extension can be used as the mime type. Can be either an array or a pipe-separated string.</source>
          <target state="translated">与您允许上传的文件类型相对应的mime类型。通常文件的扩展名可以作为mime类型。可以是一个数组或管道分隔的字符串。</target>
        </trans-unit>
        <trans-unit id="6fa0b2708db1fa024e347caabbbacf6146c02854" translate="yes" xml:space="preserve">
          <source>The minimum height (in pixels) that the image can be. Set to zero for no limit.</source>
          <target state="translated">图像的最小高度(像素)。设置为零,没有限制。</target>
        </trans-unit>
        <trans-unit id="844a3201e5442ea82fff6b080ffb397af4fd3f29" translate="yes" xml:space="preserve">
          <source>The minimum width (in pixels) that the image can be. Set to zero for no limit.</source>
          <target state="translated">图像的最小宽度(像素)。设置为零,没有限制。</target>
        </trans-unit>
        <trans-unit id="25fd736a1385ee209b180e7946058053c72c913f" translate="yes" xml:space="preserve">
          <source>The model class has a few configuration options that can be set to allow the class&amp;rsquo; methods to work seamlessly for you. The first two are used by all of the CRUD methods to determine what table to use and how we can find the required records:</source>
          <target state="translated">模型类具有一些配置选项，可以对其进行设置，以允许类的方法为您无缝地工作。所有CRUD方法都使用前两个方法来确定要使用的表以及如何查找所需的记录：</target>
        </trans-unit>
        <trans-unit id="f099beb58438c3bd2ed10b82c957400c2ae0216e" translate="yes" xml:space="preserve">
          <source>The model provides a simple method to replace parts of your rules based on data that&amp;rsquo;s being passed into it. This sounds fairly obscure but can be especially handy with the &lt;code&gt;is_unique&lt;/code&gt; validation rule. Placeholders are simply the name of the field (or array key) that was passed in as $data surrounded by curly brackets. It will be replaced by the &lt;strong&gt;value&lt;/strong&gt; of the matched incoming field. An example should clarify this:</source>
          <target state="translated">该模型提供了一种简单的方法，可以根据传递给规则的数据替换规则的某些部分。这听起来很晦涩，但在使用 &lt;code&gt;is_unique&lt;/code&gt; 验证规则时尤其方便。占位符只是作为$ data传入的字段（或数组键）的名称，并用大括号括起来。它将替换为匹配的传入字段的&lt;strong&gt;值&lt;/strong&gt;。一个例子应该澄清这一点：</target>
        </trans-unit>
        <trans-unit id="9b597d2c77e07f9d01a18dafe02ba247c2277403" translate="yes" xml:space="preserve">
          <source>The model uses the &lt;code&gt;users&lt;/code&gt; table in the database for all of its activities. We&amp;rsquo;ve set the &lt;code&gt;$allowedFields&lt;/code&gt; property to include all of the fields that we want outside classes to change. The &lt;code&gt;id&lt;/code&gt;, &lt;code&gt;created_at&lt;/code&gt;, and &lt;code&gt;updated_at&lt;/code&gt; fields are handled automatically by the class or the database, so we don&amp;rsquo;t want to change those. Finally, we&amp;rsquo;ve set our Entity class as the &lt;code&gt;$returnType&lt;/code&gt;. This ensures that all methods on the model that return rows from the database will return instances of our User Entity class instead of an object or array like normal.</source>
          <target state="translated">该模型将数据库中的 &lt;code&gt;users&lt;/code&gt; 表用于其所有活动。我们将 &lt;code&gt;$allowedFields&lt;/code&gt; 属性设置为包含我们希望外部类更改的所有字段。该 &lt;code&gt;id&lt;/code&gt; ， &lt;code&gt;created_at&lt;/code&gt; ，和 &lt;code&gt;updated_at&lt;/code&gt; 字段由类或数据库中自动处理的，所以我们不希望改变这些。最后，我们将Entity类设置为 &lt;code&gt;$returnType&lt;/code&gt; 。这样可以确保模型上所有从数据库返回行的方法都将返回User Entity类的实例，而不是像普通的对象或数组那样返回。</target>
        </trans-unit>
        <trans-unit id="c6490dc23173f2910818bba617390f7ea09c1a6b" translate="yes" xml:space="preserve">
          <source>The modified item</source>
          <target state="translated">修改后的项目</target>
        </trans-unit>
        <trans-unit id="601234d7d85373c0836727861df1c6d67c755b1c" translate="yes" xml:space="preserve">
          <source>The most common purpose for this function is to show how much time has elapsed from some point in time in the past to now.</source>
          <target state="translated">这个函数最常见的目的是显示从过去的某个时间点到现在已经过去了多少时间。</target>
        </trans-unit>
        <trans-unit id="e3e86b66ccbedfaa15f693f6d931758de264c03f" translate="yes" xml:space="preserve">
          <source>The move() method returns a new File instance that for the relocated file, so you must capture the result if the resulting location is needed:</source>
          <target state="translated">move()方法返回一个新的File实例,用于重定位的文件,所以如果需要结果的位置,你必须捕获结果。</target>
        </trans-unit>
        <trans-unit id="dd74830ae16e193a43b39b75abb22ce1660c7e19" translate="yes" xml:space="preserve">
          <source>The name &amp;lsquo;test&amp;rsquo; is arbitrary. It can be anything you want. By default we&amp;rsquo;ve used the word &amp;ldquo;default&amp;rdquo; for the primary connection, but it too can be renamed to something more relevant to your project.</source>
          <target state="translated">名称&amp;ldquo; test&amp;rdquo;是任意的。可以是您想要的任何东西。默认情况下，我们为主要连接使用了&amp;ldquo;默认&amp;rdquo;一词，但也可以将其重命名为与您的项目更相关的名称。</target>
        </trans-unit>
        <trans-unit id="690f866e99a35076400ba57e71194aa0d2d21dbf" translate="yes" xml:space="preserve">
          <source>The name is not case-sensitive, but otherwise must match the name you gave it when you started the timer.</source>
          <target state="translated">该名称不区分大小写,但必须与您启动定时器时给它的名称一致。</target>
        </trans-unit>
        <trans-unit id="132b2f105b2546d78029936bb136e751e679787b" translate="yes" xml:space="preserve">
          <source>The name of file calling the logger</source>
          <target state="translated">调用记录仪的文件名</target>
        </trans-unit>
        <trans-unit id="11d3f6a2466d769185690fe7bebb76eabf741351" translate="yes" xml:space="preserve">
          <source>The name of the backed-up file. The name is needed only if you are using zip compression.</source>
          <target state="translated">备份文件的名称。只有当你使用zip压缩时才需要这个名字。</target>
        </trans-unit>
        <trans-unit id="ba2f77557f731202ccef28d0e22b8e49d260c9be" translate="yes" xml:space="preserve">
          <source>The name of the class property is the connection name, and can be used while connecting to specify a group name.</source>
          <target state="translated">类属性的名称是连接名,在连接时可以用来指定组名。</target>
        </trans-unit>
        <trans-unit id="0fe0e5ff772813760860997ad17850aaaafb7ffa" translate="yes" xml:space="preserve">
          <source>The name of the current CSRF token.</source>
          <target state="translated">当前CSRF标记的名称。</target>
        </trans-unit>
        <trans-unit id="4a3b5f90cd9b5c05c9eaa7296ab95ee63785417d" translate="yes" xml:space="preserve">
          <source>The name of the database you want to connect to.</source>
          <target state="translated">你要连接的数据库的名称。</target>
        </trans-unit>
        <trans-unit id="c30c6bf1d5bec2f16fb29f7fd770528e1a6e99eb" translate="yes" xml:space="preserve">
          <source>The name of the header for current CSRF token.</source>
          <target state="translated">当前CSRF标记的头的名称。</target>
        </trans-unit>
        <trans-unit id="f2f623cfdcee233c0ea961e03977fdc2a4adc70a" translate="yes" xml:space="preserve">
          <source>The name of the platform in use (mysql, mssql, etc&amp;hellip;).</source>
          <target state="translated">使用中的平台的名称（mysql，mssql等）。</target>
        </trans-unit>
        <trans-unit id="db2f71a3131e4833fad3edd3be5e9818cff8e4cd" translate="yes" xml:space="preserve">
          <source>The name used for the session cookie.</source>
          <target state="translated">用于会话cookie的名称。</target>
        </trans-unit>
        <trans-unit id="a5e5e70e4bfe3363748b428c08a69eb8d4544276" translate="yes" xml:space="preserve">
          <source>The new namespace is only applied during that call for any methods that create a single route, like get, post, etc. For any methods that create multiple routes, the new namespace is attached to all routes generated by that function or, in the case of &lt;code&gt;group()&lt;/code&gt;, all routes generated while in the closure.</source>
          <target state="translated">新名称空间仅在该调用期间应用于创建单个路由的任何方法，例如get，post等。对于创建多个路由的任何方法，新名称空间将附加到该函数生成的所有路由，或者在这种情况下的 &lt;code&gt;group()&lt;/code&gt; ，在关闭时生成的所有路由。</target>
        </trans-unit>
        <trans-unit id="bb43db58a21f739d8773553b65de6eca31796617" translate="yes" xml:space="preserve">
          <source>The news overview page is now done, but a page to display individual news items is still absent. The model created earlier is made in such a way that it can easily be used for this functionality. You only need to add some code to the controller and create a new view. Go back to the &lt;code&gt;News&lt;/code&gt; controller and update the &lt;code&gt;view()&lt;/code&gt; method with the following:</source>
          <target state="translated">现在已完成新闻概述页面，但是仍然缺少用于显示各个新闻项目的页面。较早创建的模型的制作方式使其可以轻松用于此功能。您只需要向控制器添加一些代码并创建一个新视图。返回 &lt;code&gt;News&lt;/code&gt; 控制器，并使用以下命令更新 &lt;code&gt;view()&lt;/code&gt; 方法：</target>
        </trans-unit>
        <trans-unit id="fb4d5f9fb4eee671c1dd2ac352c6ecf51da2c499" translate="yes" xml:space="preserve">
          <source>The news overview page is now done, but a page to display individual news items is still absent. The model created earlier is made in such way that it can easily be used for this functionality. You only need to add some code to the controller and create a new view. Go back to the &lt;code&gt;News&lt;/code&gt; controller and update &lt;code&gt;view()&lt;/code&gt; with the following:</source>
          <target state="translated">现在已完成新闻概述页面，但是仍然缺少用于显示各个新闻项的页面。先前创建的模型的制作方式很容易将其用于此功能。您只需要向控制器添加一些代码并创建一个新视图。返回 &lt;code&gt;News&lt;/code&gt; 控制器并使用以下命令更新 &lt;code&gt;view()&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="7259c69ce66170724477bab0adf43aed0452f4a2" translate="yes" xml:space="preserve">
          <source>The number as the appropriate currency for the locale</source>
          <target state="translated">该数字作为当地的适当货币。</target>
        </trans-unit>
        <trans-unit id="ac95f42869160b1ade785dea40191814238fe7d3" translate="yes" xml:space="preserve">
          <source>The number of &amp;ldquo;digit&amp;rdquo; links you would like before and after the selected page number. For example, the number 2 will place two digits on either side, as in the example links at the very top of this page.</source>
          <target state="translated">您希望在选定页码之前和之后的&amp;ldquo;数字&amp;rdquo;链接数。例如，数字2将在两侧放置两位数字，如本页顶部的示例链接中所示。</target>
        </trans-unit>
        <trans-unit id="b4dbdbd5ab0c5fb515d98d43c9cc194725c8dc31" translate="yes" xml:space="preserve">
          <source>The number of FIELDS (columns) returned by the query. Make sure to call the method using your query result object:</source>
          <target state="translated">查询返回的FIELDS(列)的数量。确保使用查询结果对象调用该方法。</target>
        </trans-unit>
        <trans-unit id="d2272c43c0b72b0fc81b4e012c8532a90ee0951c" translate="yes" xml:space="preserve">
          <source>The number of queries after which the query block will default to hidden.</source>
          <target state="translated">查询的次数,过了这个次数,查询块将默认为隐藏。</target>
        </trans-unit>
        <trans-unit id="9bf67d31e045ba0dc631e763749dd0c6cb4cf597" translate="yes" xml:space="preserve">
          <source>The number of rows returned by the query. Note: In this example, $query is the variable that the query result object is assigned to:</source>
          <target state="translated">查询返回的行数。注意:在本例中,$query是分配给查询结果对象的变量。</target>
        </trans-unit>
        <trans-unit id="b4a34cea2eb5c7721b673d85bb9dd93dbb530f86" translate="yes" xml:space="preserve">
          <source>The number of seconds until another token should be available.</source>
          <target state="translated">距离另一个令牌可用的秒数。</target>
        </trans-unit>
        <trans-unit id="7717a8b8b09e33c5e7a9b2662b944e9490382e07" translate="yes" xml:space="preserve">
          <source>The number of seconds you would like the session to last. If you would like a non-expiring session (until browser is closed) set the value to zero: 0</source>
          <target state="translated">您希望会话持续的秒数。如果您希望会话不会过期(直到浏览器关闭),请将该值设置为0。0</target>
        </trans-unit>
        <trans-unit id="9433d201289ca178b5989886415cf704647aa66f" translate="yes" xml:space="preserve">
          <source>The object fields may be unique to the database you are using. For instance, SQLite3 does not return data on column names, but has the additional &lt;em&gt;sequence&lt;/em&gt; field for compound foreign key definitions.</source>
          <target state="translated">对象字段对于您正在使用的数据库可能是唯一的。例如，SQLite3不返回有关列名的数据，但具有用于复合外键定义的附加&lt;em&gt;序列&lt;/em&gt;字段。</target>
        </trans-unit>
        <trans-unit id="4fb2e392309ad0fe1e8ed8dd4920cd31955e6ed3" translate="yes" xml:space="preserve">
          <source>The object gives you full abilities to grab any part of the request on it&amp;rsquo;s own:</source>
          <target state="translated">该对象使您能够完全自行捕获请求的任何部分：</target>
        </trans-unit>
        <trans-unit id="e359c3078c839e3cfd95ab677cd2478d81c49adb" translate="yes" xml:space="preserve">
          <source>The old &lt;code&gt;sprintf()&lt;/code&gt; method of using &lt;strong&gt;%s&lt;/strong&gt; in your error messages will still work, however it will override the tags above. You should use one or the other.</source>
          <target state="translated">在错误消息中使用&lt;strong&gt;％s&lt;/strong&gt;的旧 &lt;code&gt;sprintf()&lt;/code&gt; 方法仍然可以使用，但是它将覆盖上面的标记。您应该使用其中一个。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a259e59d14031de5c9cff2f5a26f5aff8e0ba7bc" translate="yes" xml:space="preserve">
          <source>The only URLs recognized are those that start with &amp;ldquo;www.&amp;rdquo; or with &amp;ldquo;://&amp;rdquo;.</source>
          <target state="translated">唯一可识别的URL是以&amp;ldquo; www&amp;rdquo;开头的URL。或带有&amp;ldquo;：//&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="b41d5456447e20297abd21454aa048c9c94e157d" translate="yes" xml:space="preserve">
          <source>The only argument is string that is the command called and any parameters. This appears exactly as you would call it from the command line.</source>
          <target state="translated">唯一的参数是字符串,即被调用的命令和任何参数。这就像你在命令行中调用它一样。</target>
        </trans-unit>
        <trans-unit id="986c3fd4041811696377870f11fcdff47cddf399" translate="yes" xml:space="preserve">
          <source>The only thing that remains is ensuring that your model is set up to allow data to be saved properly. The &lt;code&gt;save()&lt;/code&gt; method that was used will determine whether the information should be inserted or if the row already exists and should be updated, based on the presence of a primary key. In this case, there is no &lt;code&gt;id&lt;/code&gt; field passed to it, so it will insert a new row into it&amp;rsquo;s table, &lt;strong&gt;news&lt;/strong&gt;.</source>
          <target state="translated">剩下的唯一事情就是确保您的模型已设置为允许正确保存数据。基于主键的存在，使用的 &lt;code&gt;save()&lt;/code&gt; 方法将确定是否应插入信息，或者该行是否已存在并应更新。在这种情况下，没有传递给它的 &lt;code&gt;id&lt;/code&gt; 字段，因此它将在表中插入新行&lt;strong&gt;news&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="612b48d43ddb34ea8d1e711b76b0329fad57d383" translate="yes" xml:space="preserve">
          <source>The only thing that remains is writing a method that writes the data to the database. You&amp;rsquo;ll use the Query Builder class to insert the information and use the input library to get the posted data. Open up the model created earlier and add the following:</source>
          <target state="translated">剩下的唯一事情就是编写一种将数据写入数据库的方法。您将使用查询生成器类插入信息，并使用输入库获取发布的数据。打开先前创建的模型并添加以下内容：</target>
        </trans-unit>
        <trans-unit id="9d92c513b10ec67f5bddafb454bd792395760dbf" translate="yes" xml:space="preserve">
          <source>The only uncommented line there to start with should be:</source>
          <target state="translated">那里唯一未加注释的一行开始应该是。</target>
        </trans-unit>
        <trans-unit id="f4e2fba851a4f74610185ec64d69afc3aee4be02" translate="yes" xml:space="preserve">
          <source>The opening tag for the &amp;ldquo;current&amp;rdquo; link.</source>
          <target state="translated">&amp;ldquo;当前&amp;rdquo;链接的开始标签。</target>
        </trans-unit>
        <trans-unit id="d07e4e56f702ba068334eb63819bf78dedac0db7" translate="yes" xml:space="preserve">
          <source>The opening tag for the &amp;ldquo;digit&amp;rdquo; link.</source>
          <target state="translated">&amp;ldquo;数字&amp;rdquo;链接的开始标签。</target>
        </trans-unit>
        <trans-unit id="99c2fae0475b3039f1b469a2ad97f7ea8927ecb2" translate="yes" xml:space="preserve">
          <source>The opening tag for the &amp;ldquo;first&amp;rdquo; link.</source>
          <target state="translated">&amp;ldquo;第一个&amp;rdquo;链接的开始标签。</target>
        </trans-unit>
        <trans-unit id="0b78402049e9163588515bb91aea837365a4bb0b" translate="yes" xml:space="preserve">
          <source>The opening tag for the &amp;ldquo;last&amp;rdquo; link.</source>
          <target state="translated">&amp;ldquo;最后&amp;rdquo;链接的开始标签。</target>
        </trans-unit>
        <trans-unit id="5c8dfa6dae8b47a58f6da81f21164cb97fdd79ee" translate="yes" xml:space="preserve">
          <source>The opening tag for the &amp;ldquo;next&amp;rdquo; link.</source>
          <target state="translated">&amp;ldquo;下一个&amp;rdquo;链接的开始标签。</target>
        </trans-unit>
        <trans-unit id="c80f52965005088f9303eea0a908fc89db234f55" translate="yes" xml:space="preserve">
          <source>The opening tag for the &amp;ldquo;previous&amp;rdquo; link.</source>
          <target state="translated">&amp;ldquo;上一个&amp;rdquo;链接的开始标签。</target>
        </trans-unit>
        <trans-unit id="eb6098653cd9d24184788a65a965a61f1396c60e" translate="yes" xml:space="preserve">
          <source>The opening tag placed on the left side of the entire result.</source>
          <target state="translated">开标放在整个结果的左侧。</target>
        </trans-unit>
        <trans-unit id="26feb65dfe584899598879e6b3285c215e461784" translate="yes" xml:space="preserve">
          <source>The opposite of the &lt;code&gt;unix_to_time()&lt;/code&gt; function. Takes a &amp;ldquo;human&amp;rdquo; time as input and returns it as a UNIX timestamp. This is useful if you accept &amp;ldquo;human&amp;rdquo; formatted dates submitted via a form. Returns boolean FALSE date string passed to it is not formatted as indicated above.</source>
          <target state="translated">与 &lt;code&gt;unix_to_time()&lt;/code&gt; 函数相反。将&amp;ldquo;人工&amp;rdquo;时间作为输入并将其作为UNIX时间戳返回。如果您接受通过表单提交的&amp;ldquo;人为&amp;rdquo;格式的日期，这将很有用。返回传递给它的布尔值FALSE日期字符串，其格式没有如上所述。</target>
        </trans-unit>
        <trans-unit id="c56b538c28cffd6ef0cd794d080ee200154417ed" translate="yes" xml:space="preserve">
          <source>The optional parameter &lt;code&gt;$status_code&lt;/code&gt; determines what HTTP status code should be sent with the error. If &lt;code&gt;$status_code&lt;/code&gt; is less than 100, the HTTP status code will be set to 500, and the exit status code will be set to &lt;code&gt;$status_code + EXIT__AUTO_MIN&lt;/code&gt;. If that value is larger than &lt;code&gt;EXIT__AUTO_MAX&lt;/code&gt;, or if &lt;code&gt;$status_code&lt;/code&gt; is 100 or higher, the exit status code will be set to &lt;code&gt;EXIT_ERROR&lt;/code&gt;. You can check in &lt;em&gt;application/config/constants.php&lt;/em&gt; for more detail.</source>
          <target state="translated">可选参数 &lt;code&gt;$status_code&lt;/code&gt; 确定应发送带有错误的HTTP状态代码。如果 &lt;code&gt;$status_code&lt;/code&gt; 小于100，则HTTP状态代码将设置为500，退出状态代码将设置为 &lt;code&gt;$status_code + EXIT__AUTO_MIN&lt;/code&gt; 。如果该值大于 &lt;code&gt;EXIT__AUTO_MAX&lt;/code&gt; ，或者 &lt;code&gt;$status_code&lt;/code&gt; 为100或更高，则退出状态代码将设置为 &lt;code&gt;EXIT_ERROR&lt;/code&gt; 。您可以在&lt;em&gt;application / config / constants.php中&lt;/em&gt;检入更多详细信息。</target>
        </trans-unit>
        <trans-unit id="b3099cf4db18381016774d7735aca10f232bf1f4" translate="yes" xml:space="preserve">
          <source>The optional second parameter allows you to force a particular redirection method. The available methods are &lt;strong&gt;auto&lt;/strong&gt;, &lt;strong&gt;location&lt;/strong&gt; and &lt;strong&gt;refresh&lt;/strong&gt;, with location being faster but less reliable on IIS servers. The default is &lt;strong&gt;auto&lt;/strong&gt;, which will attempt to intelligently choose the method based on the server environment.</source>
          <target state="translated">可选的第二个参数允许您强制使用特定的重定向方法。可用的方法是&lt;strong&gt;auto&lt;/strong&gt;，&lt;strong&gt;location&lt;/strong&gt;和&lt;strong&gt;refresh&lt;/strong&gt;，位置更快，但在IIS服务器上不那么可靠。默认值为&lt;strong&gt;auto&lt;/strong&gt;，它将尝试根据服务器环境智能地选择方法。</target>
        </trans-unit>
        <trans-unit id="b829e9793ad91dcb288168b242d429438fd98712" translate="yes" xml:space="preserve">
          <source>The optional second parameter defaults to NULL and allows you to set the return value of this method when the requested URI segment is missing. For example, this would tell the method to return the number zero in the event of failure:</source>
          <target state="translated">可选的第二个参数默认为NULL,允许你设置当请求的URI段丢失时,本方法的返回值。例如,这将告诉本方法在失败时返回数字0。</target>
        </trans-unit>
        <trans-unit id="4f4bc3346c54dd23c7dd117438a91c581a8a3ab0" translate="yes" xml:space="preserve">
          <source>The optional third parameter allows you to send a specific HTTP Response Code - this could be used for example to create 301 redirects for search engine purposes. The default Response Code is 302. The third parameter is &lt;em&gt;only&lt;/em&gt; available with &lt;strong&gt;location&lt;/strong&gt; redirects, and not &lt;em&gt;refresh&lt;/em&gt;. Examples:</source>
          <target state="translated">可选的第三个参数允许您发送特定的HTTP响应代码-例如，可以将其用于创建301重定向以用于搜索引擎。默认响应代码为302。第三个参数&lt;em&gt;仅&lt;/em&gt;在&lt;strong&gt;位置&lt;/strong&gt;重定向中可用，而在&lt;em&gt;refresh时&lt;/em&gt;不可用。例子：</target>
        </trans-unit>
        <trans-unit id="dd62700f58241f5ce5914a422ac90368f6b35095" translate="yes" xml:space="preserve">
          <source>The order of checking the avability of the CSRF token is as follows:</source>
          <target state="translated">检查CSRF令牌的可用性的顺序如下。</target>
        </trans-unit>
        <trans-unit id="37e0ac1fa9194b76aefe9564e4db6e54feabb94b" translate="yes" xml:space="preserve">
          <source>The ordering above is for clarity, whereas the actual order the routes are created in, in RouteCollection, ensures proper route resolution</source>
          <target state="translated">上面的顺序是为了清晰明了,而在RouteCollection中,路由的实际创建顺序是为了保证路由的正确解析。</target>
        </trans-unit>
        <trans-unit id="2ac916d5032c815b00a1771448c4faba0ebe619e" translate="yes" xml:space="preserve">
          <source>The original encrypted data from CodeIgniter 1.x&amp;rsquo;s Encryption library</source>
          <target state="translated">来自CodeIgniter 1.x的加密库的原始加密数据</target>
        </trans-unit>
        <trans-unit id="217193b44671101ccecb0f82d35be5e2ef8bb762" translate="yes" xml:space="preserve">
          <source>The other option is to download the .phar file from the &lt;a href=&quot;https://phpunit.de/getting-started/phpunit-7.html&quot;&gt;phpUnit&lt;/a&gt; site. This is a standalone file that should be placed within your project root.</source>
          <target state="translated">另一个选择是从&lt;a href=&quot;https://phpunit.de/getting-started/phpunit-7.html&quot;&gt;phpUnit&lt;/a&gt;网站下载.phar文件。这是一个独立文件，应放置在项目根目录下。</target>
        </trans-unit>
        <trans-unit id="033d5535b676babd7615f2f4bf52b4dd073ee269" translate="yes" xml:space="preserve">
          <source>The other responsibility of the controller is to handle everything that pertains to HTTP requests - redirects, authentication, web safety, encoding, etc. In short, the controller is where you make sure that people are allowed to be there, and they get the data they need in a format they can use.</source>
          <target state="translated">控制器的另一个职责是处理与HTTP请求有关的一切--重定向、认证、网络安全、编码等。简而言之,控制器是你确保人们被允许在那里的地方,他们以他们可以使用的格式获得他们所需的数据。</target>
        </trans-unit>
        <trans-unit id="543a52e9f24d7925f22c54e0f9606d84d3a0c345" translate="yes" xml:space="preserve">
          <source>The other way to set the validation message to fields by functions,</source>
          <target state="translated">另一种方式是通过函数对字段设置验证信息。</target>
        </trans-unit>
        <trans-unit id="3099b59a3ac63f6c22b2f355e51cfef30d90d294" translate="yes" xml:space="preserve">
          <source>The other way to set the validation rules to fields by functions,</source>
          <target state="translated">另一种方式是通过函数对字段设置验证规则。</target>
        </trans-unit>
        <trans-unit id="449d437bb3a83cbf49c5e5db500cc4c56c429eb7" translate="yes" xml:space="preserve">
          <source>The output from the view.</source>
          <target state="translated">视图的输出。</target>
        </trans-unit>
        <trans-unit id="bf4b76d60ae7ab2bb695f9d6b25b0b81bb327190" translate="yes" xml:space="preserve">
          <source>The output is NOT guaranteed to be cryptographically secure, just the best attempt at that.</source>
          <target state="translated">输出不保证是加密安全的,只是最好的尝试。</target>
        </trans-unit>
        <trans-unit id="9c32483d1a11476f49df83d8efcdab26c2fbc7e1" translate="yes" xml:space="preserve">
          <source>The overridden method call (typically the second segment of the URI) will be passed as a parameter to the &lt;code&gt;_remap()&lt;/code&gt; method:</source>
          <target state="translated">重写的方法调用（通常是URI的第二部分）将作为参数传递给 &lt;code&gt;_remap()&lt;/code&gt; 方法：</target>
        </trans-unit>
        <trans-unit id="eb942a151ead6d45e7e0448031c6bbd312c3522f" translate="yes" xml:space="preserve">
          <source>The page below explains these three concepts in detail.</source>
          <target state="translated">下面的页面详细解释了这三个概念。</target>
        </trans-unit>
        <trans-unit id="b3087829b5f65a28ac78f1937f54c958b92c4b6d" translate="yes" xml:space="preserve">
          <source>The pagination function automatically determines which segment of your URI contains the page number. If you need something different you can specify it.</source>
          <target state="translated">分页功能会自动决定你的URI中哪一段包含页码。如果你需要不同的东西,你可以指定它。</target>
        </trans-unit>
        <trans-unit id="2788530637b461ef233bae0df3f68df77d05ddc3" translate="yes" xml:space="preserve">
          <source>The parameter can be a string specifying the name of the model, or an instance of the model itself:</source>
          <target state="translated">参数可以是指定模型名称的字符串,也可以是模型本身的实例。</target>
        </trans-unit>
        <trans-unit id="951924fa61ce56287c9ebe16db9a353faadb3028" translate="yes" xml:space="preserve">
          <source>The parameter usage is identical to using &lt;a href=&quot;#form_dropdown&quot;&gt;&lt;code&gt;form_dropdown()&lt;/code&gt;&lt;/a&gt; above, except of course that the name of the field will need to use POST array syntax, e.g. foo[].</source>
          <target state="translated">参数的用法与上面的&lt;a href=&quot;#form_dropdown&quot;&gt; &lt;code&gt;form_dropdown()&lt;/code&gt; &lt;/a&gt;相同，除了字段名需要使用POST数组语法（例如foo []）外。</target>
        </trans-unit>
        <trans-unit id="4f6a5c5d0d2778091facd32a1346332fe33f1f65" translate="yes" xml:space="preserve">
          <source>The password field must match the password confirmation field.</source>
          <target state="translated">密码字段必须与密码确认字段一致。</target>
        </trans-unit>
        <trans-unit id="f7e6b0324c8b2d067af6a096be5d6a15ffc23d6d" translate="yes" xml:space="preserve">
          <source>The password used to connect to the database.</source>
          <target state="translated">用于连接数据库的密码。</target>
        </trans-unit>
        <trans-unit id="5dea72232a3c7b3f256dba3a23a73774bc239ddf" translate="yes" xml:space="preserve">
          <source>The path are all of the segments within the site itself. As expected, the &lt;code&gt;getPath()&lt;/code&gt; and &lt;code&gt;setPath()&lt;/code&gt; methods can be used to manipulate it:</source>
          <target state="translated">路径是网站本身内的所有细分。如预期的那样，可以使用 &lt;code&gt;getPath()&lt;/code&gt; 和 &lt;code&gt;setPath()&lt;/code&gt; 方法对其进行操作：</target>
        </trans-unit>
        <trans-unit id="3de7511a5028a0d8b341574c03a32a60d9e2847c" translate="yes" xml:space="preserve">
          <source>The path can be a relative or full server path. Returns FALSE (boolean) on failure.</source>
          <target state="translated">路径可以是相对或完整的服务器路径。失败时返回FALSE(布尔值)。</target>
        </trans-unit>
        <trans-unit id="badf76ddec366a5be5951ea4f88b35ee802eec41" translate="yes" xml:space="preserve">
          <source>The path is relative to your main site index.php file, NOT your controller or view files. CodeIgniter uses a front controller so paths are always relative to the main site index.</source>
          <target state="translated">路径是相对于你的主站index.php文件,而不是你的控制器或视图文件。CodeIgniter使用的是前台控制器,所以路径总是相对于主站点的index.php文件。</target>
        </trans-unit>
        <trans-unit id="5a0704170a1dcc74db3ad6b49c795903791b04bd" translate="yes" xml:space="preserve">
          <source>The path is usually not needed since the method sets a root path.</source>
          <target state="translated">由于该方法设置了一个根路径,所以通常不需要该路径。</target>
        </trans-unit>
        <trans-unit id="5f435e3429663b68cab943a559442bf7e01264af" translate="yes" xml:space="preserve">
          <source>The path to the &lt;strong&gt;app&lt;/strong&gt; directory.</source>
          <target state="translated">&lt;strong&gt;应用程序&lt;/strong&gt;目录的路径。</target>
        </trans-unit>
        <trans-unit id="90fd378c87137deac2d99abdbe4bbc817c0f97df" translate="yes" xml:space="preserve">
          <source>The path to the &lt;strong&gt;system&lt;/strong&gt; directory.</source>
          <target state="translated">&lt;strong&gt;系统&lt;/strong&gt;目录的路径。</target>
        </trans-unit>
        <trans-unit id="bdac16f68a09a60aa65d865bc92256569c057123" translate="yes" xml:space="preserve">
          <source>The path to the &lt;strong&gt;writable&lt;/strong&gt; directory.</source>
          <target state="translated">&lt;strong&gt;可写&lt;/strong&gt;目录的路径。</target>
        </trans-unit>
        <trans-unit id="2808cbf8523e72eb6a348b69e206a13a96ae9298" translate="yes" xml:space="preserve">
          <source>The path to the directory that holds the front controller.</source>
          <target state="translated">前置控制器所在目录的路径。</target>
        </trans-unit>
        <trans-unit id="f967a2d54a002a077c1658322310f8ff395a8c5e" translate="yes" xml:space="preserve">
          <source>The path to the directory where the upload should be placed. The directory must be writable and the path can be absolute or relative.</source>
          <target state="translated">上传目录的路径。该目录必须是可写的,路径可以是绝对或相对的。</target>
        </trans-unit>
        <trans-unit id="7c7b38221c729cd203ea7c057c7d66072c00d644" translate="yes" xml:space="preserve">
          <source>The path to the project root directory. Just above &lt;code&gt;APPPATH&lt;/code&gt;.</source>
          <target state="translated">项目根目录的路径。就在 &lt;code&gt;APPPATH&lt;/code&gt; 上方。</target>
        </trans-unit>
        <trans-unit id="a7abe13c2bd76ee461d902688613ef7d537e7d29" translate="yes" xml:space="preserve">
          <source>The path to which the session is applicable</source>
          <target state="translated">适用于该会议的路径</target>
        </trans-unit>
        <trans-unit id="1df368bf68675ec14171c2ba922e5036a5482210" translate="yes" xml:space="preserve">
          <source>The path to your migrations folder.</source>
          <target state="translated">迁移文件夹的路径。</target>
        </trans-unit>
        <trans-unit id="f70627520160f723ca7ebf08057e94eba4ac515f" translate="yes" xml:space="preserve">
          <source>The port is an integer number between 0 and 65535. Each sheme has a default value associated with it.</source>
          <target state="translated">端口是0到65535之间的整数。每个sheme都有一个与之相关的默认值。</target>
        </trans-unit>
        <trans-unit id="8d987bf0607846c92d40a5afced37d2e54265999" translate="yes" xml:space="preserve">
          <source>The possible options that are recognized are as follows:</source>
          <target state="translated">确认的可能选择如下:</target>
        </trans-unit>
        <trans-unit id="aeeb40f006fd925a239e6d152a360b90dccf6f39" translate="yes" xml:space="preserve">
          <source>The preferences described below allow you to tailor the image processing to suit your needs.</source>
          <target state="translated">下文所述的首选项允许您根据自己的需要进行图像处理。</target>
        </trans-unit>
        <trans-unit id="5590804d5ac59e3a0ff5acd9197296adf6afe862" translate="yes" xml:space="preserve">
          <source>The prefix is only needed if you need to avoid name collisions with other identically named cookies for your server.</source>
          <target state="translated">只有当您需要避免与您的服务器的其他相同命名的cookie发生名称冲突时,才需要这个前缀。</target>
        </trans-unit>
        <trans-unit id="792a3c76c1bf7d603aed0a647e9088a398b0c665" translate="yes" xml:space="preserve">
          <source>The prefixed table name</source>
          <target state="translated">前缀表名</target>
        </trans-unit>
        <trans-unit id="754cc3585642758b0387a50318352696106feaf9" translate="yes" xml:space="preserve">
          <source>The primary key name, FALSE if none</source>
          <target state="translated">主键名称,如果没有,则为FALSE。</target>
        </trans-unit>
        <trans-unit id="b021d74218222a9a03f11de255fd453b408f9abf" translate="yes" xml:space="preserve">
          <source>The property can be read multiple times.</source>
          <target state="translated">该属性可以被多次读取。</target>
        </trans-unit>
        <trans-unit id="3035d35d242b46c8062bc74fae4834744f08b7d6" translate="yes" xml:space="preserve">
          <source>The push method is used to push a new value onto a session value that is an array. For instance, if the &amp;lsquo;hobbies&amp;rsquo; key contains an array of hobbies, you can add a new value onto the array like so:</source>
          <target state="translated">push方法用于将新值推送到作为数组的会话值上。例如，如果&amp;ldquo;兴趣爱好&amp;rdquo;键包含一个兴趣爱好数组，则可以将新值添加到数组中，如下所示：</target>
        </trans-unit>
        <trans-unit id="534780b9409598286acdb67f2fe9770c9ae1b871" translate="yes" xml:space="preserve">
          <source>The query library supports a powerful &lt;a href=&quot;http://api.jquery.com/category/effects/&quot;&gt;Effects&lt;/a&gt; repertoire. Before an effect can be used, it must be loaded:</source>
          <target state="translated">查询库支持强大的&lt;a href=&quot;http://api.jquery.com/category/effects/&quot;&gt;效果&lt;/a&gt;库。在使用效果之前，必须先加载效果：</target>
        </trans-unit>
        <trans-unit id="bdf30968e43f490e7e83a4606306b6793516a6b1" translate="yes" xml:space="preserve">
          <source>The query variables can be manipulated through the class using simple string representations. Query values can only be set as a string currently.</source>
          <target state="translated">查询变量可以通过类使用简单的字符串表示来操作。查询值目前只能设置为字符串。</target>
        </trans-unit>
        <trans-unit id="a8a4093a730aaf09dad7243e11c02cf318121106" translate="yes" xml:space="preserve">
          <source>The query() function returns a database result &lt;strong&gt;object&lt;/strong&gt; when &amp;ldquo;read&amp;rdquo; type queries are run which you can use to &lt;a href=&quot;results&quot;&gt;show your results&lt;/a&gt;. When &amp;ldquo;write&amp;rdquo; type queries are run it simply returns TRUE or FALSE depending on success or failure. When retrieving data you will typically assign the query to your own variable, like this:</source>
          <target state="translated">当运行&amp;ldquo;读取&amp;rdquo;类型查询时，query（）函数将返回数据库结果&lt;strong&gt;对象&lt;/strong&gt;，您可以使用该查询&lt;a href=&quot;results&quot;&gt;显示结果&lt;/a&gt;。运行&amp;ldquo;写入&amp;rdquo;类型查询时，它仅取决于成功或失败而返回TRUE或FALSE。检索数据时，通常将查询分配给自己的变量，如下所示：</target>
        </trans-unit>
        <trans-unit id="d2d6ea25a2ec4eda793a2e60e9751210ad04c9cf" translate="yes" xml:space="preserve">
          <source>The query() function returns a database result &lt;strong&gt;object&lt;/strong&gt; when &amp;ldquo;read&amp;rdquo; type queries are run, which you can use to &lt;a href=&quot;results&quot;&gt;show your results&lt;/a&gt;. When &amp;ldquo;write&amp;rdquo; type queries are run it simply returns TRUE or FALSE depending on success or failure. When retrieving data you will typically assign the query to your own variable, like this:</source>
          <target state="translated">当运行&amp;ldquo;读取&amp;rdquo;类型查询时，query（）函数将返回数据库结果&lt;strong&gt;对象&lt;/strong&gt;，您可以使用该对象&lt;a href=&quot;results&quot;&gt;显示结果&lt;/a&gt;。运行&amp;ldquo;写入&amp;rdquo;类型查询时，它仅取决于成功或失败而返回TRUE或FALSE。检索数据时，通常将查询分配给自己的变量，如下所示：</target>
        </trans-unit>
        <trans-unit id="1379f592cece57e48c7022ff512dad1d880dad30" translate="yes" xml:space="preserve">
          <source>The question marks in the query are automatically replaced with the values in the array in the second parameter of the query function.</source>
          <target state="translated">查询中的问号会自动替换为查询函数第二个参数中数组中的值。</target>
        </trans-unit>
        <trans-unit id="24bbcae13b6997d6b5150f1b63f439acb44550f7" translate="yes" xml:space="preserve">
          <source>The reason for not including other popular algorithms, such as MD5 or SHA1 is that they are no longer considered secure enough and as such, we don&amp;rsquo;t want to encourage their usage. If you absolutely need to use them, it is easy to do so via PHP&amp;rsquo;s native &lt;a href=&quot;http://php.net/manual/en/function.hash-hmac.php&quot;&gt;hash_hmac()&lt;/a&gt; function.</source>
          <target state="translated">不包括其他流行算法（例如MD5或SHA1）的原因是，它们不再被认为足够安全，因此，我们不想鼓励它们的使用。如果您绝对需要使用它们，则可以通过PHP的本机&lt;a href=&quot;http://php.net/manual/en/function.hash-hmac.php&quot;&gt;hash_hmac（）&lt;/a&gt;函数轻松实现。</target>
        </trans-unit>
        <trans-unit id="135f4b060e2681aac836dc1c5430411d23f68d1d" translate="yes" xml:space="preserve">
          <source>The reason phrase (&amp;lsquo;OK&amp;rsquo;, &amp;lsquo;Created&amp;rsquo;, &amp;lsquo;Moved Permanently&amp;rsquo;) will be automatically added, but you can add custom reasons as the second parameter of the &lt;code&gt;setStatusCode()&lt;/code&gt; method:</source>
          <target state="translated">原因短语（&amp;ldquo;确定&amp;rdquo;，&amp;ldquo;创建&amp;rdquo;，&amp;ldquo;永久移动&amp;rdquo;）将自动添加，但是您可以将自定义原因添加为 &lt;code&gt;setStatusCode()&lt;/code&gt; 方法的第二个参数：</target>
        </trans-unit>
        <trans-unit id="7b971d9c453ba46fceb492df35d489f13fdff9cf" translate="yes" xml:space="preserve">
          <source>The reason phrase will be automatically generated based upon the official lists. If you need to set your own for a custom status code, you can pass the reason phrase as the second parameter:</source>
          <target state="translated">理由短语将根据官方列表自动生成。如果您需要为自定义状态码设置自己的状态码,您可以将原因短语作为第二个参数传递。</target>
        </trans-unit>
        <trans-unit id="53626f44bf4399660a176d5b278799ffb497ac94" translate="yes" xml:space="preserve">
          <source>The reason this line is necessary is because your local constructor will be overriding the one in the parent controller class so we need to manually call it.</source>
          <target state="translated">这一行是必要的,因为你的本地构造函数将覆盖父控制器类中的构造函数,所以我们需要手动调用它。</target>
        </trans-unit>
        <trans-unit id="162bc5a9c2ae759089321bb03ecb46b6bcb9d77a" translate="yes" xml:space="preserve">
          <source>The reason we use a multi-dimensional array rather than a more simple one is to permit you to optionally store multiple sets of connection values. If, for example, you run multiple environments (development, production, test, etc.) under a single installation, you can set up a connection group for each, then switch between groups as needed. For example, to set up a &amp;ldquo;test&amp;rdquo; environment you would do this:</source>
          <target state="translated">我们使用多维数组而不是更简单的数组的原因是允许您有选择地存储多组连接值。例如，如果在一个安装中运行多个环境（开发，生产，测试等），则可以为每个环境设置一个连接组，然后根据需要在组之间进行切换。例如，要设置&amp;ldquo;测试&amp;rdquo;环境，您可以这样做：</target>
        </trans-unit>
        <trans-unit id="8e8217e709c8091e4df7fb0cdc3a04c6942d640b" translate="yes" xml:space="preserve">
          <source>The recommended method for organizing your classes is to create one or more namespaces for your application&amp;rsquo;s files. This is most important for any business-logic related classes, entity classes, etc. The &lt;code&gt;psr4&lt;/code&gt; array in the configuration file allows you to map the namespace to the directory those classes can be found in:</source>
          <target state="translated">建议的组织类的方法是为应用程序的文件创建一个或多个命名空间。这对于任何与业务逻辑相关的类，实体类等都是最重要的。配置文件中的 &lt;code&gt;psr4&lt;/code&gt; 数组允许您将名称空间映射到可以在以下类中找到的目录：</target>
        </trans-unit>
        <trans-unit id="fcf8416ee30decb89972d2e89a3927e19d279f61" translate="yes" xml:space="preserve">
          <source>The recommended method is to install it in your project using &lt;a href=&quot;https://getcomposer.org/&quot;&gt;Composer&lt;/a&gt;. While it&amp;rsquo;s possible to install it globally we do not recommend it, since it can cause compatibility issues with other projects on your system as time goes on.</source>
          <target state="translated">推荐的方法是使用&lt;a href=&quot;https://getcomposer.org/&quot;&gt;Composer&lt;/a&gt;将其安装在项目中。尽管可以在全球范围内安装它，但我们不建议您这样做，因为随着时间的流逝，它可能会导致与系统上其他项目的兼容性问题。</target>
        </trans-unit>
        <trans-unit id="b4a3c9d3cb629717c7060d49268967f6caea11d8" translate="yes" xml:space="preserve">
          <source>The referrer, if the user agent was referred from another site. Typically you&amp;rsquo;ll test for this as follows:</source>
          <target state="translated">引荐来源网址（如果用户代理是从另一个站点引荐的）。通常，您将对此进行如下测试：</target>
        </trans-unit>
        <trans-unit id="48c4266e926efd47ac7b17480bf10dc1d477b782" translate="yes" xml:space="preserve">
          <source>The renderSection() method only has one argument - the name of the section. That way any child views know what to name the content section.</source>
          <target state="translated">renderSection()方法只有一个参数--节的名称。这样一来,任何子视图都知道该如何命名内容部分。</target>
        </trans-unit>
        <trans-unit id="4eaa0825ae517f6ae96525d29c03d6a82f4ba042" translate="yes" xml:space="preserve">
          <source>The rendered text for the chosen view</source>
          <target state="translated">所选视图的渲染文本</target>
        </trans-unit>
        <trans-unit id="9d49b579a65bbc3eea080b073eda4bd973d41bfe" translate="yes" xml:space="preserve">
          <source>The renderer is smart enough to detect whether the view should be rendered on its own, or if it needs a layout.</source>
          <target state="translated">渲染器足够智能,可以检测出视图是否应该自行渲染,或者是否需要布局。</target>
        </trans-unit>
        <trans-unit id="473e001be07fea4045e8e7ffb4f99c36be426ec1" translate="yes" xml:space="preserve">
          <source>The report will be formatted in an HTML table for viewing. If you prefer the raw data you can retrieve an array using:</source>
          <target state="translated">报告将以HTML表格的形式显示。如果你喜欢原始数据,你可以使用以下方法检索一个数组。</target>
        </trans-unit>
        <trans-unit id="d2cbfc6b5f1ca58dea1ad7bb41a95ec9beb01244" translate="yes" xml:space="preserve">
          <source>The request also includes a number of optional request headers that can contain a wide variety of information such as what languages the client wants the content displayed as, the types of formats the client accepts, and much more. Wikipedia has an article that lists &lt;a href=&quot;https://en.wikipedia.org/wiki/List_of_HTTP_header_fields&quot;&gt;all header fields&lt;/a&gt; if you want to look it over.</source>
          <target state="translated">该请求还包括许多可选的请求标头，这些标头可以包含各种信息，例如客户端希望以哪种语言显示内容，客户端接受的格式类型等等。Wikipedia上有一篇文章，列出了&lt;a href=&quot;https://en.wikipedia.org/wiki/List_of_HTTP_header_fields&quot;&gt;所有标题字段（&lt;/a&gt;如果要查看的话）。</target>
        </trans-unit>
        <trans-unit id="141cfb8141e772cbbbcee0941601a1f0531812b3" translate="yes" xml:space="preserve">
          <source>The request class does a lot of work in the background for you, that you never need to worry about. The &lt;code&gt;isAJAX()&lt;/code&gt; and &lt;code&gt;isSecure()&lt;/code&gt; methods check several different methods to determine the correct answer.</source>
          <target state="translated">request类在后台为您完成了许多工作，您无需担心。该 &lt;code&gt;isAJAX()&lt;/code&gt; 和 &lt;code&gt;isSecure()&lt;/code&gt; 方法检查几种不同的方法来确定正确答案。</target>
        </trans-unit>
        <trans-unit id="a923077313b07e5cc40aacf2ed523d545d760292" translate="yes" xml:space="preserve">
          <source>The request class is an object-oriented representation of an HTTP request. This is meant to work for both incoming, such as a request to the application from a browser, and outgoing requests, like would be used to send a request from the application to a third-party application. This class provides the common functionality they both need, but both cases have custom classes that extend from the Request class to add specific functionality.</source>
          <target state="translated">request类是HTTP请求的面向对象表示。它既适用于传入的请求,例如从浏览器向应用程序发出的请求,也适用于传出的请求,例如从应用程序向第三方应用程序发送请求。这个类提供了它们都需要的通用功能,但这两种情况下都有从Request类扩展出来的自定义类来添加特定的功能。</target>
        </trans-unit>
        <trans-unit id="d8ef39f839d1c0b0f1895f65d12b0bbf5c033ded" translate="yes" xml:space="preserve">
          <source>The request sending method. Returns boolean TRUE or FALSE based on success for failure, enabling it to be used conditionally.</source>
          <target state="translated">请求发送方法。根据成功与否返回布尔值TRUE或FALSE,可以有条件地使用。</target>
        </trans-unit>
        <trans-unit id="3acd8516bd78787105685c2d39db6a411c8eda54" translate="yes" xml:space="preserve">
          <source>The request would look something like this:</source>
          <target state="translated">请求的内容是这样的。</target>
        </trans-unit>
        <trans-unit id="5e83094284b736629d3070ed2c7f6b78225ac6f1" translate="yes" xml:space="preserve">
          <source>The requested row or NULL if it doesn&amp;rsquo;t exist</source>
          <target state="translated">请求的行；如果不存在，则为NULL</target>
        </trans-unit>
        <trans-unit id="7ed5cb7dded7d330df172e12152cbcc7a58cbaad" translate="yes" xml:space="preserve">
          <source>The requested session data item, or NULL if it doesn&amp;rsquo;t exist</source>
          <target state="translated">请求的会话数据项，如果不存在，则为NULL</target>
        </trans-unit>
        <trans-unit id="f5e449c67ce2307e2e8ffbe12fcfa44f925e3958" translate="yes" xml:space="preserve">
          <source>The resizing method will create a copy of the image file (and preserve the original) if you set a path and/or a new filename using this preference:</source>
          <target state="translated">如果您使用此首选项设置了路径和/或新的文件名,调整大小的方法将创建图像文件的副本(并保留原件)。</target>
        </trans-unit>
        <trans-unit id="3723fcd40592ab14dee601b5cda7a34db59a7a9a" translate="yes" xml:space="preserve">
          <source>The resizing method will create a thumbnail file (and preserve the original) if you set this preference to TRUE:</source>
          <target state="translated">如果您将此偏好设置为 &quot;TRUE&quot;,则调整大小的方法将创建一个缩略图文件(并保留原图)。</target>
        </trans-unit>
        <trans-unit id="960e95de6fa3b33d643ea0fda963277df8956eca" translate="yes" xml:space="preserve">
          <source>The response is an array with two elements: &lt;code&gt;error&lt;/code&gt; and &lt;code&gt;messages&lt;/code&gt;. The &lt;code&gt;error&lt;/code&gt; element contains the status code of the error. The &lt;code&gt;messages&lt;/code&gt; element contains an array of error messages. It would look something like:</source>
          <target state="translated">响应是一个包含两个元素的数组： &lt;code&gt;error&lt;/code&gt; 和 &lt;code&gt;messages&lt;/code&gt; 。该 &lt;code&gt;error&lt;/code&gt; 元素包含错误的状态代码。所述 &lt;code&gt;messages&lt;/code&gt; 元素包含错误消息的阵列。它看起来像：</target>
        </trans-unit>
        <trans-unit id="67fb1d166c1d535cbeb346cae9c9ae96388d4914" translate="yes" xml:space="preserve">
          <source>The response object MUST be returned for the download to be sent to the client. This allows the response to be passed through all &lt;strong&gt;after&lt;/strong&gt; filters before being sent to the client.</source>
          <target state="translated">务必返回响应对象，以将下载内容发送到客户端。这使得响应通过全部通过&lt;strong&gt;后&lt;/strong&gt;过滤器被发送到客户端之前。</target>
        </trans-unit>
        <trans-unit id="f7295f2eb5d3f1a64029c7fcbcb0ef1e3ec7e79f" translate="yes" xml:space="preserve">
          <source>The response tells the client what version of the HTTP specification that it&amp;rsquo;s using and, probably most importantly, the status code (200). The status code is one of a number of codes that have been standardized to have a very specific meaning to the client. This can tell them that it was successful (200), or that the page wasn&amp;rsquo;t found (404). Head over to IANA for a &lt;a href=&quot;https://www.iana.org/assignments/http-status-codes/http-status-codes.xhtml&quot;&gt;full list of HTTP status codes&lt;/a&gt;.</source>
          <target state="translated">响应告诉客户端它正在使用哪个版本的HTTP规范，以及最重要的是状态码（200）。状态代码是已标准化以对客户端具有非常特定含义的众多代码之一。这可以告诉他们成功（200），或者找不到页面（404）。前往IANA获取&lt;a href=&quot;https://www.iana.org/assignments/http-status-codes/http-status-codes.xhtml&quot;&gt;HTTP状态代码&lt;/a&gt;的完整列表。</target>
        </trans-unit>
        <trans-unit id="241ac6f67643809e3d0ba82124bf9b126d3a950d" translate="yes" xml:space="preserve">
          <source>The response you get back contains a number of helper methods to inspect the HTML output within the response. These are useful for using within assertions in your tests.</source>
          <target state="translated">你得到的响应包含了一些辅助方法来检查响应中的HTML输出。这些方法对于在你的测试中使用断言很有用。</target>
        </trans-unit>
        <trans-unit id="62fe0a22e4f9a64b271bac8530c593bf78f6f80e" translate="yes" xml:space="preserve">
          <source>The result ID can be accessed from within your result object, like this:</source>
          <target state="translated">结果ID可以从你的结果对象中访问,就像这样。</target>
        </trans-unit>
        <trans-unit id="fdc79b19e07924531643d2dd8e5c7690115615d2" translate="yes" xml:space="preserve">
          <source>The resulting query will be:</source>
          <target state="translated">查询结果将是:</target>
        </trans-unit>
        <trans-unit id="7191e9006d47bcdaaf39943a4cbb959c85d49989" translate="yes" xml:space="preserve">
          <source>The return from &lt;code&gt;make()&lt;/code&gt; is ready to be used in tests or inserted into the database. Alternatively &lt;code&gt;Fabricator&lt;/code&gt; includes the &lt;code&gt;create()&lt;/code&gt; command to insert it for you, and return the result. Due to model callbacks, database formatting, and special keys like primary and timestamps the return from &lt;code&gt;create()&lt;/code&gt; can differ from &lt;code&gt;make()&lt;/code&gt;. You might get back something like this:</source>
          <target state="translated">&lt;code&gt;make()&lt;/code&gt; 的返回值已准备就绪，可以在测试中使用或插入数据库中。另外， &lt;code&gt;Fabricator&lt;/code&gt; 包括 &lt;code&gt;create()&lt;/code&gt; 命令来为您插入它，并返回结果。由于模型回调，数据库格式以及特殊键（例如主键和时间戳）的影响， &lt;code&gt;create()&lt;/code&gt; 的返回值可能与 &lt;code&gt;make()&lt;/code&gt; 不同。您可能会得到类似以下的信息：</target>
        </trans-unit>
        <trans-unit id="552ff9b4a1ff3577d15ca1dff4eae1875e6dfe25" translate="yes" xml:space="preserve">
          <source>The return type of &lt;code&gt;make()&lt;/code&gt; mimics what is defined in the representative model, but you can force a type using the methods directly:</source>
          <target state="translated">&lt;code&gt;make()&lt;/code&gt; 的返回类型模仿了代表性模型中定义的内容，但是您可以直接使用这些方法来强制类型：</target>
        </trans-unit>
        <trans-unit id="a8fdf090183c534e897d51d88ff6c8f58eb4c414" translate="yes" xml:space="preserve">
          <source>The returned strings do NOT include quotes around them.</source>
          <target state="translated">返回的字符串不包含引号。</target>
        </trans-unit>
        <trans-unit id="ade6cba23328820ffe2f094c01d372482db87f73" translate="yes" xml:space="preserve">
          <source>The returned value depends on the underlying driver in use. For example, a &lt;code&gt;mysqli&lt;/code&gt; instance will be returned with the &amp;lsquo;mysqli&amp;rsquo; driver.</source>
          <target state="translated">返回的值取决于所使用的基础驱动程序。例如，将使用&amp;ldquo; mysqli&amp;rdquo;驱动程序返回一个 &lt;code&gt;mysqli&lt;/code&gt; 实例。</target>
        </trans-unit>
        <trans-unit id="4a814bef1ae8b669e2b0c1c9284241fc620cebf0" translate="yes" xml:space="preserve">
          <source>The roman number converted from given parameter</source>
          <target state="translated">由给定参数转换而来的罗马数字</target>
        </trans-unit>
        <trans-unit id="76864c0b8a4a8c48009cbebda3f61a37893a4f7b" translate="yes" xml:space="preserve">
          <source>The rotate() method allows you to rotate an image in 90 degree increments:</source>
          <target state="translated">rotate()方法允许你以90度为增量旋转图像。</target>
        </trans-unit>
        <trans-unit id="2eb24489043c4632da13ad01c7551206e260ca87" translate="yes" xml:space="preserve">
          <source>The routes are matched in the order they are specified, so if you have a resource photos above a get &amp;lsquo;photos/poll&amp;rsquo; the show action&amp;rsquo;s route for the resource line will be matched before the get line. To fix this, move the get line above the resource line so that it is matched first.</source>
          <target state="translated">路由按照指定的顺序进行匹配，因此，如果您在get'photos / poll'上方有资源照片，则资源行的show action路由将在get行之前匹配。要解决此问题，请将get行移到资源行上方，以使其首先匹配。</target>
        </trans-unit>
        <trans-unit id="8ba5b8d415b0269d474dcb1bedecda88f60c074c" translate="yes" xml:space="preserve">
          <source>The routing for this would be:</source>
          <target state="translated">这方面的路线是:</target>
        </trans-unit>
        <trans-unit id="1461fde23dadf89488e2ffe58300e891af4d872f" translate="yes" xml:space="preserve">
          <source>The routing has been beefed up</source>
          <target state="translated">路线已经加强了</target>
        </trans-unit>
        <trans-unit id="9d6e8f5292c2b91c2f90d258564db98b6a6ef546" translate="yes" xml:space="preserve">
          <source>The row ID is a unique identifier that is generated by the cart code when an item is added to the cart. The reason a unique ID is created is so that identical products with different options can be managed by the cart.</source>
          <target state="translated">行ID是一个唯一的标识符,当一个商品被添加到购物车时,由购物车代码生成。创建唯一ID的原因是为了让不同选项的相同产品可以被购物车管理。</target>
        </trans-unit>
        <trans-unit id="8f50172784adc8f27b1800442fd74ced1ed12cb9" translate="yes" xml:space="preserve">
          <source>The same &lt;a href=&quot;https://github.com/codeigniter4/framework&quot;&gt;CodeIgniter 4 framework&lt;/a&gt; repository described in &amp;ldquo;Manual Installation&amp;rdquo; can also be added to an existing project using Composer.</source>
          <target state="translated">也可以使用Composer将&amp;ldquo;手动安装&amp;rdquo;中描述的相同&lt;a href=&quot;https://github.com/codeigniter4/framework&quot;&gt;CodeIgniter 4框架&lt;/a&gt;存储库添加到现有项目中。</target>
        </trans-unit>
        <trans-unit id="dcb544c2b2de140573f98cba19cbb9e255c4b209" translate="yes" xml:space="preserve">
          <source>The same holds for a &lt;em&gt;short prefix&lt;/em&gt;, which is a namespace using only the lowercase version of the configuration class name. If the short prefix matches the class name, the value from &lt;strong&gt;.env&lt;/strong&gt; replaces the configuration file value.</source>
          <target state="translated">这同样适用于一个&lt;em&gt;短的前缀&lt;/em&gt;，这是仅使用配置类名的小写版本命名空间。如果短前缀与类名匹配，则&lt;strong&gt;.env中&lt;/strong&gt;的值将替换配置文件值。</target>
        </trans-unit>
        <trans-unit id="283d461ccbbbd3833da512f1cb92f5077d0ed78a" translate="yes" xml:space="preserve">
          <source>The save method also can make working with custom class result objects much simpler by recognizing a non-simple object and grabbing its public and protected values into an array, which is then passed to the appropriate insert or update method. This allows you to work with Entity classes in a very clean way. Entity classes are simple classes that represent a single instance of an object type, like a user, a blog post, job, etc. This class is responsible for maintaining the business logic surrounding the object itself, like formatting elements in a certain way, etc. They shouldn&amp;rsquo;t have any idea about how they are saved to the database. At their simplest, they might look like this:</source>
          <target state="translated">save方法还可以通过识别非简单对象并将其公共值和受保护的值捕获到数组中，然后将其传递给适当的insert或update方法，从而使自定义类结果对象的使用变得更加简单。这使您可以非常干净地使用Entity类。实体类是表示对象类型的单个实例的简单类，例如用户，博客文章，工作等。此类负责维护围绕对象本身的业务逻辑，例如以某种方式格式化元素等。他们对如何将其保存到数据库一无所知。最简单的说，它们可能如下所示：</target>
        </trans-unit>
        <trans-unit id="51b377cd0e3c2c56e9fa0ddf3a272315dc338478" translate="yes" xml:space="preserve">
          <source>The scheme is frequently &amp;lsquo;http&amp;rsquo; or &amp;lsquo;https&amp;rsquo;, but any scheme is supported, including &amp;lsquo;file&amp;rsquo;, &amp;lsquo;mailto&amp;rsquo;, etc.</source>
          <target state="translated">该方案通常为&amp;ldquo; http&amp;rdquo;或&amp;ldquo; https&amp;rdquo;，但支持任何方案，包括&amp;ldquo;文件&amp;rdquo;，&amp;ldquo; mailto&amp;rdquo;等。</target>
        </trans-unit>
        <trans-unit id="ce5ea4aee98ff3225fe8fddaebff0247002a413c" translate="yes" xml:space="preserve">
          <source>The second (optional) parameter allows you to optionally pass configuration setting. You will typically pass these as an array:</source>
          <target state="translated">第二个(可选)参数允许你选择性地传递配置设置。你通常会以数组的形式传递这些设置。</target>
        </trans-unit>
        <trans-unit id="ff3e08049ba61d132bb5f67ff5f2c2cb7efe6feb" translate="yes" xml:space="preserve">
          <source>The second (optional) parameter allows you to optionally pass configuration settings. You will typically pass these as an array:</source>
          <target state="translated">第二个(可选)参数允许您选择性地传递配置设置。一般来说,您将以数组形式传递这些设置。</target>
        </trans-unit>
        <trans-unit id="0df64ad357a37321c1f07de0851312afe2e745d1" translate="yes" xml:space="preserve">
          <source>The second &lt;strong&gt;optional&lt;/strong&gt; parameter can take an associative array or an object as input, which it runs through the PHP &lt;a href=&quot;http://php.net/extract&quot;&gt;extract()&lt;/a&gt; function to convert to variables that can be used in your view files. Again, read the &lt;a href=&quot;../general/views&quot;&gt;Views&lt;/a&gt; page to learn how this might be useful.</source>
          <target state="translated">第二个&lt;strong&gt;可选&lt;/strong&gt;参数可以采用关联数组或对象作为输入，它通过PHP &lt;a href=&quot;http://php.net/extract&quot;&gt;extract（）&lt;/a&gt;函数运行，以转换为可在视图文件中使用的变量。同样，请阅读&amp;ldquo; &lt;a href=&quot;../general/views&quot;&gt;视图&amp;rdquo;&lt;/a&gt;页面以了解如何使用。</target>
        </trans-unit>
        <trans-unit id="9b2700da8d3a489daddc87646edb95808421f95a" translate="yes" xml:space="preserve">
          <source>The second and third parameters enable you to set a limit and offset clause:</source>
          <target state="translated">第二个和第三个参数可以让你设置一个限制和偏移子句。</target>
        </trans-unit>
        <trans-unit id="6c1dec89e930add4191cafe495c036fcb96ae4ba" translate="yes" xml:space="preserve">
          <source>The second and third parameters match up to the &lt;code&gt;depth&lt;/code&gt; and &lt;code&gt;options&lt;/code&gt; arguments of the &lt;a href=&quot;https://www.php.net/manual/en/function.json-decode.php&quot;&gt;json_decode&lt;/a&gt; PHP function.</source>
          <target state="translated">第二个和第三个参数匹配的 &lt;code&gt;depth&lt;/code&gt; 和 &lt;code&gt;options&lt;/code&gt; 中的参数&lt;a href=&quot;https://www.php.net/manual/en/function.json-decode.php&quot;&gt;json_decode&lt;/a&gt; PHP函数。</target>
        </trans-unit>
        <trans-unit id="91f730e2cc7faffcffd285a5b539592095eb2a53" translate="yes" xml:space="preserve">
          <source>The second function, &lt;code&gt;single_service()&lt;/code&gt; works just like &lt;code&gt;service()&lt;/code&gt; but returns a new instance of the class:</source>
          <target state="translated">第二个函数 &lt;code&gt;single_service()&lt;/code&gt; 与 &lt;code&gt;service()&lt;/code&gt; 一样,但是返回该类的新实例：</target>
        </trans-unit>
        <trans-unit id="19ec84c78c7a65810139ab1bcd407a98da99e1ea" translate="yes" xml:space="preserve">
          <source>The second method is by passing a &lt;code&gt;body&lt;/code&gt; option in. This is provided to maintain Guzzle API compatibility, and functions the exact same way as the previous example. The value must be a string:</source>
          <target state="translated">第二种方法是通过传入 &lt;code&gt;body&lt;/code&gt; 选项。提供该选项是为了保持Guzzle API的兼容性，并且其功能与上一个示例完全相同。该值必须是一个字符串：</target>
        </trans-unit>
        <trans-unit id="a174af9ce4f53236e452cb6de7a327b0b09ce731" translate="yes" xml:space="preserve">
          <source>The second method uses a custom placeholder to detect the desired locale and set it on the Request. The placeholder &lt;code&gt;{locale}&lt;/code&gt; can be placed as a segment in your route. If present, the contents of the matching segment will be your locale:</source>
          <target state="translated">第二种方法使用自定义占位符来检测所需的语言环境并在&amp;ldquo;请求&amp;rdquo;上进行设置。占位符 &lt;code&gt;{locale}&lt;/code&gt; 可以作为段放置在您的路线中。如果存在，则匹配段的内容将是您的语言环境：</target>
        </trans-unit>
        <trans-unit id="c70906f986bd1e99f2cc602a6ab1b73c0d2f269e" translate="yes" xml:space="preserve">
          <source>The second optional parameter lets you run the data through the PHP&amp;rsquo;s filters. Pass in the desired filter type as the second parameter:</source>
          <target state="translated">第二个可选参数使您可以通过PHP的过滤器运行数据。传递所需的过滤器类型作为第二个参数：</target>
        </trans-unit>
        <trans-unit id="5b3dd961607875370c6235e14612e668e83f6b7b" translate="yes" xml:space="preserve">
          <source>The second optional parameter lets you run the data through the XSS filter. It&amp;rsquo;s enabled by setting the second parameter to boolean TRUE or by setting your &lt;code&gt;$config['global_xss_filtering']&lt;/code&gt; to TRUE.</source>
          <target state="translated">第二个可选参数使您可以通过XSS过滤器运行数据。可以通过将第二个参数设置为布尔TRUE或通过将 &lt;code&gt;$config['global_xss_filtering']&lt;/code&gt; 设置为 TRUE来启用它。</target>
        </trans-unit>
        <trans-unit id="386329d69f1274d273fa0c52d4d9e0d5f01e7caa" translate="yes" xml:space="preserve">
          <source>The second parameter accepts an array of options that can be used to modify the routes that are generated.</source>
          <target state="translated">第二个参数接受一个选项数组,用于修改生成的路由。</target>
        </trans-unit>
        <trans-unit id="69aca2d451bad6a32d42cf9ac93905c09823f63b" translate="yes" xml:space="preserve">
          <source>The second parameter accepts an array of options that can be used to modify the routes that are generated. While these routes are geared toward API-usage, where more methods are allowed, you can pass in the &amp;lsquo;websafe&amp;rsquo; option to have it generate update and delete methods that work with HTML forms:</source>
          <target state="translated">第二个参数接受一个选项数组，这些选项可用于修改生成的路由。尽管这些路由适用于API使用，允许使用更多方法，但是您可以传递'websafe'选项，以使其生成适用于HTML表单的更新和删除方法：</target>
        </trans-unit>
        <trans-unit id="eaf26f12d355fcc18f52841c1ddf07d1771920c6" translate="yes" xml:space="preserve">
          <source>The second parameter determines the word delimiter. By default dashes are used. Preferred options are: &lt;strong&gt;-&lt;/strong&gt; (dash) or &lt;strong&gt;_&lt;/strong&gt; (underscore)</source>
          <target state="translated">第二个参数确定单词定界符。默认情况下，使用破折号。首选的选项是：&lt;strong&gt;- &lt;/strong&gt;（破折号）或&lt;strong&gt;_&lt;/strong&gt;（下划线）</target>
        </trans-unit>
        <trans-unit id="d16dd4c639ea165f67d8a2f679ec71d32e7d6f2a" translate="yes" xml:space="preserve">
          <source>The second parameter determines the word delimiter. By default dashes are used. Preferred options are: &lt;strong&gt;-&lt;/strong&gt; (dash) or &lt;strong&gt;_&lt;/strong&gt; (underscore).</source>
          <target state="translated">第二个参数确定单词定界符。默认情况下，使用破折号。首选的选项有：&lt;strong&gt;- &lt;/strong&gt;（破折号）或&lt;strong&gt;_&lt;/strong&gt;（下划线）。</target>
        </trans-unit>
        <trans-unit id="90a240ca98719ba45cd84aedb73cb7ec0bf400a8" translate="yes" xml:space="preserve">
          <source>The second parameter determines whether URLs and e-mails are converted or just one or the other. Default behavior is both if the parameter is not specified. E-mail links are encoded as &lt;a href=&quot;#safe_mailto&quot;&gt;&lt;code&gt;safe_mailto()&lt;/code&gt;&lt;/a&gt; as shown above.</source>
          <target state="translated">第二个参数确定是转换URL和电子邮件还是仅转换其中一个。如果未指定该参数，则默认行为是两者。电子邮件链接被编码为&lt;a href=&quot;#safe_mailto&quot;&gt; &lt;code&gt;safe_mailto()&lt;/code&gt; ,&lt;/a&gt;如上所示。</target>
        </trans-unit>
        <trans-unit id="11508399195304b8ca2bd55790044c4013c26af1" translate="yes" xml:space="preserve">
          <source>The second parameter determines whether URLs and e-mails are converted or just one or the other. The default behavior is both if the parameter is not specified. E-mail links are encoded as &lt;a href=&quot;#safe_mailto&quot;&gt;&lt;code&gt;safe_mailto()&lt;/code&gt;&lt;/a&gt; as shown above.</source>
          <target state="translated">第二个参数确定URL和电子邮件是被转换还是仅被转换。如果未指定该参数，则默认行为是两个。电子邮件链接被编码为&lt;a href=&quot;#safe_mailto&quot;&gt; &lt;code&gt;safe_mailto()&lt;/code&gt; ,&lt;/a&gt;如上所示。</target>
        </trans-unit>
        <trans-unit id="5797d2b9190725d83f6f0abc3b297f46bbbb91b8" translate="yes" xml:space="preserve">
          <source>The second parameter enables you to set whether or not the query builder query will be reset (by default it will be reset, just like when using &lt;code&gt;$this-&amp;gt;db-&amp;gt;get()&lt;/code&gt;):</source>
          <target state="translated">第二个参数使您可以设置是否重置查询构建器查询（默认情况下，它将重置，就像使用 &lt;code&gt;$this-&amp;gt;db-&amp;gt;get()&lt;/code&gt; ）：</target>
        </trans-unit>
        <trans-unit id="9b515246b8f6aa754bd23425a60d8b28e10bd8a2" translate="yes" xml:space="preserve">
          <source>The second parameter enables you to set whether or not the query builder query will be reset (by default it will be&amp;ndash;just like $builder-&amp;gt;insert()):</source>
          <target state="translated">第二个参数使您可以设置是否重置查询构建器查询（默认情况下，它就像$ builder-&amp;gt; insert（）一样）：</target>
        </trans-unit>
        <trans-unit id="75c161bfe896d1841c7ea0ccc907fe14b176986d" translate="yes" xml:space="preserve">
          <source>The second parameter enables you to set whether or not the query builder query will be reset (by default it will be&amp;ndash;just like $this-&amp;gt;db-&amp;gt;insert()):</source>
          <target state="translated">第二个参数使您可以设置是否重置查询构建器查询（默认情况下，它将像$ this-&amp;gt; db-&amp;gt; insert（）一样）：</target>
        </trans-unit>
        <trans-unit id="693f823c971a8ece41b08ee055ad884bdd4497ec" translate="yes" xml:space="preserve">
          <source>The second parameter lets you set a CSS class name for the menu.</source>
          <target state="translated">第二个参数让你为菜单设置一个CSS类名。</target>
        </trans-unit>
        <trans-unit id="898a1e11ac60296e9fafee952e3f368403def4df" translate="yes" xml:space="preserve">
          <source>The second parameter lets you set a result offset.</source>
          <target state="translated">第二个参数让你设置一个结果偏移量。</target>
        </trans-unit>
        <trans-unit id="8376a81d6b363e1079ef94758c698a41c737c688" translate="yes" xml:space="preserve">
          <source>The second parameter lets you set default key names, so that the array returned will always contain expected indexes, even if missing from the URI. Example:</source>
          <target state="translated">第二个参数可以让你设置默认的键名,这样返回的数组将始终包含预期的索引,即使URI中缺失。例子:</target>
        </trans-unit>
        <trans-unit id="a28a584474aca7216a40c4b2bf5d872ece32babe" translate="yes" xml:space="preserve">
          <source>The second parameter lets you set the direction of the result. Options are &lt;strong&gt;ASC&lt;/strong&gt;, &lt;strong&gt;DESC&lt;/strong&gt; AND &lt;strong&gt;RANDOM&lt;/strong&gt;.</source>
          <target state="translated">第二个参数使您可以设置结果的方向。选项包括&lt;strong&gt;ASC&lt;/strong&gt;，&lt;strong&gt;DESC&lt;/strong&gt;和&lt;strong&gt;RANDOM&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="61a285b5f0cd09dff994f73b92d3981ee0f92095" translate="yes" xml:space="preserve">
          <source>The second section allows you to define any filters that should be applied to every request made by the framework. You should take care with how many you use here, since it could have performance implications to have too many run on every request. Filters can be specified by adding their alias to either the before or after array:</source>
          <target state="translated">第二部分允许你定义任何应该应用于框架发出的每个请求的过滤器。你应该注意这里使用的过滤器数量,因为在每个请求上运行太多过滤器会影响性能。过滤器可以通过在before或after数组中添加其别名来指定。</target>
        </trans-unit>
        <trans-unit id="55b770bfe651af254035444c5d7c703696f57469" translate="yes" xml:space="preserve">
          <source>The second segment is the text you would like the link to say. If you leave it blank, the URL will be used.</source>
          <target state="translated">第二段是你希望链接的文字。如果你把它留空,将使用URL。</target>
        </trans-unit>
        <trans-unit id="7047ddee67c065e9d66a4072cdc3ec1caeee2102" translate="yes" xml:space="preserve">
          <source>The second segment represents the class &lt;strong&gt;function&lt;/strong&gt;, or method, that should be called.</source>
          <target state="translated">第二段代表应该调用的类&lt;strong&gt;函数&lt;/strong&gt;或方法。</target>
        </trans-unit>
        <trans-unit id="8023c7bb496406d9e4c8abe600242ff2f0e773d8" translate="yes" xml:space="preserve">
          <source>The second segment represents the class &lt;strong&gt;method&lt;/strong&gt; that should be called.</source>
          <target state="translated">第二段代表应调用的类&lt;strong&gt;方法&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="43196c7b97c0190afc2bab02e24e3015b455e0e4" translate="yes" xml:space="preserve">
          <source>The second, third, and fourth parameters allow you to set the delimiter newline, and enclosure characters respectively. By default commas are used as the delimiter, &amp;ldquo;n&amp;rdquo; is used as a new line, and a double-quote is used as the enclosure. Example:</source>
          <target state="translated">第二个，第三个和第四个参数使您可以分别设置定界符换行符和附件字符。默认情况下，逗号用作定界符，&amp;ldquo; n&amp;rdquo;用作换行符，双引号用作附件。例：</target>
        </trans-unit>
        <trans-unit id="64f9f9f8baafdbc6b0a6658bb6866fa04fc2d4a9" translate="yes" xml:space="preserve">
          <source>The secondary benefit of using binds is that the values are automatically escaped producing safer queries. You don&amp;rsquo;t have to remember to manually escape data &amp;mdash; the engine does it automatically for you.</source>
          <target state="translated">使用绑定的第二个好处是，这些值会自动转义以产生更安全的查询。您不必记住手动转义数据-引擎会为您自动进行转义。</target>
        </trans-unit>
        <trans-unit id="ea104d43719f2219c1047293a6fcd4c23be998f0" translate="yes" xml:space="preserve">
          <source>The secondary benefit of using binds is that the values are automatically escaped, producing safer queries. You don&amp;rsquo;t have to remember to manually escape data; the engine does it automatically for you.</source>
          <target state="translated">使用绑定的第二个好处是，这些值会自动转义，从而产生更安全的查询。您不必记住手动转义数据。引擎会自动为您完成。</target>
        </trans-unit>
        <trans-unit id="5a305051f6ba1ab2952a9ec147d3d39edb59e0db" translate="yes" xml:space="preserve">
          <source>The secure boolean is only needed if you want to make it a secure cookie by setting it to TRUE.</source>
          <target state="translated">只有当你想通过设置为 &quot;TRUE &quot;使其成为一个安全的cookie时,才需要安全布尔值。</target>
        </trans-unit>
        <trans-unit id="77df4a7848f252e2d02f363e09b48d8edd6797f9" translate="yes" xml:space="preserve">
          <source>The security filtering method is called automatically when a new &lt;a href=&quot;../general/controllers&quot;&gt;controller&lt;/a&gt; is invoked. It does the following:</source>
          <target state="translated">调用新&lt;a href=&quot;../general/controllers&quot;&gt;控制器&lt;/a&gt;时，将自动调用安全筛选方法。它执行以下操作：</target>
        </trans-unit>
        <trans-unit id="e454ae4211a0ecb07416ce9b58f3bfa644f3497b" translate="yes" xml:space="preserve">
          <source>The seed records might be something like:</source>
          <target state="translated">种子记录可能是这样的。</target>
        </trans-unit>
        <trans-unit id="90c36012496a2ca4287a456135b50c87fe1b7ba1" translate="yes" xml:space="preserve">
          <source>The segment numbers would be this:</source>
          <target state="translated">段数会是这样的。</target>
        </trans-unit>
        <trans-unit id="5a1bf6187d083ef51315d41611b561f3c7823c19" translate="yes" xml:space="preserve">
          <source>The segments in the URL, in following with the Model-View-Controller approach, usually represent:</source>
          <target state="translated">按照模型-视图-控制器的方法,URL中的分段通常代表:</target>
        </trans-unit>
        <trans-unit id="c7efdd948b75b9d10b8e24bb0f011f7c8e3effc0" translate="yes" xml:space="preserve">
          <source>The server now needs to provide a list of what type of content it can provide. In this example, the API might be able to return data as raw HTML, JSON, or XML. This list should be provided in order of preference:</source>
          <target state="translated">服务器现在需要提供一个列表,说明它能提供什么类型的内容。在这个例子中,API可能能够以原始HTML、JSON或XML的形式返回数据。这个列表应该按照优先顺序提供。</target>
        </trans-unit>
        <trans-unit id="bf7c9b8ac32744e285bbbbc67d3c45a5c0dacfd4" translate="yes" xml:space="preserve">
          <source>The server path to Sendmail.</source>
          <target state="translated">Sendmail的服务器路径。</target>
        </trans-unit>
        <trans-unit id="67524d3d2aab08b247f1e89ed98b9473341d81e4" translate="yes" xml:space="preserve">
          <source>The server path to the True Type Font you would like to use. If you do not use this option, the native GD font will be used.</source>
          <target state="translated">您想使用的True Type字体的服务器路径。如果你不使用这个选项,将使用本地GD字体。</target>
        </trans-unit>
        <trans-unit id="eb6f214fd0c8022ee1b0aec6fbcba35a16b56f01" translate="yes" xml:space="preserve">
          <source>The server path to the image you wish to use as your watermark. Required only if you are using the overlay method.</source>
          <target state="translated">您希望用作水印的图像的服务器路径。只有当您使用叠加方法时才需要。</target>
        </trans-unit>
        <trans-unit id="2c0a05f98ab0d52976b0b9c65768650effd19258" translate="yes" xml:space="preserve">
          <source>The session storage driver to use.</source>
          <target state="translated">要使用的会话存储驱动程序。</target>
        </trans-unit>
        <trans-unit id="6e103a4527cd56ac0b59eb2c140b28cec25dabd5" translate="yes" xml:space="preserve">
          <source>The settings for the Redis server that you wish to use when using the &lt;code&gt;Redis&lt;/code&gt; and &lt;code&gt;Predis&lt;/code&gt; handler.</source>
          <target state="translated">使用 &lt;code&gt;Redis&lt;/code&gt; 和 &lt;code&gt;Predis&lt;/code&gt; 处理程序时希望使用的Redis服务器设置。</target>
        </trans-unit>
        <trans-unit id="a48ca72a1b7c8849316c4692ea1c9fdb5c2fbcb4" translate="yes" xml:space="preserve">
          <source>The settings used for the last successful send are available from the instance property &lt;code&gt;$archive&lt;/code&gt;. This is helpful for testing and debugging to determine that actual values at the time of the &lt;code&gt;send()&lt;/code&gt; call.</source>
          <target state="translated">实例属性 &lt;code&gt;$archive&lt;/code&gt; 提供了最后一次成功发送的设置。这有助于测试和调试，以确定 &lt;code&gt;send()&lt;/code&gt; 调用时的实际值。</target>
        </trans-unit>
        <trans-unit id="5848ce93c6ba09d39e3aa715dff827528ee2d42a" translate="yes" xml:space="preserve">
          <source>The simplest method to load the parser class is through its service:</source>
          <target state="translated">最简单的方法是通过其服务来加载解析器类。</target>
        </trans-unit>
        <trans-unit id="2793017edf2c19111b17d87e0781a0498b3b2dd1" translate="yes" xml:space="preserve">
          <source>The simplest method to set the variable is in your &lt;a href=&quot;configuration&quot;&gt;.env file&lt;/a&gt;.</source>
          <target state="translated">设置变量的最简单方法是在您的&lt;a href=&quot;configuration&quot;&gt;.env文件中&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="14f1a123f9f3907c85b578698331a5a9463b5e5c" translate="yes" xml:space="preserve">
          <source>The size of the text. Note: If you are not using the True Type option above, the number is set using a range of 1 - 5. Otherwise, you can use any valid pixel size for the font you&amp;rsquo;re using.</source>
          <target state="translated">文字大小。注意：如果您没有使用上面的True Type选项，则使用1-5的范围设置数字。否则，您可以为所使用的字体使用任何有效的像素大小。</target>
        </trans-unit>
        <trans-unit id="49caf9b3b13141a69c6bd874716d826327a7ca49" translate="yes" xml:space="preserve">
          <source>The solution: use Apache to serve your site, or else the built-in CodeIgniter equivalent, &lt;code&gt;php spark serve&lt;/code&gt; from your project root.</source>
          <target state="translated">解决方案：使用Apache服务您的站点，或者使用等效的内置CodeIgniter， &lt;code&gt;php spark serve&lt;/code&gt; 从您的项目根目录提供服务。</target>
        </trans-unit>
        <trans-unit id="bf0178ab76354ed40548536632aefae29105d8dc" translate="yes" xml:space="preserve">
          <source>The static methods run before and after the entire test case, whereas the local methods run between each test. If you implement any of these special functions make sure you run their parent as well so extended test cases do not interfere with staging:</source>
          <target state="translated">静态方法在整个测试用例之前和之后运行,而本地方法则在每个测试之间运行。如果你实现了这些特殊的函数,请确保你也运行它们的父函数,这样扩展的测试用例就不会干扰暂存。</target>
        </trans-unit>
        <trans-unit id="66030269b38548b965739f4d3d6aa0fc86195f44" translate="yes" xml:space="preserve">
          <source>The string &amp;ldquo;Safari&amp;rdquo; in this example is an array key in the list of browser definitions. You can find this list in &lt;strong&gt;app/Config/UserAgents.php&lt;/strong&gt; if you want to add new browsers or change the strings.</source>
          <target state="translated">在此示例中，字符串&amp;ldquo; Safari&amp;rdquo;是浏览器定义列表中的数组键。如果要添加新的浏览器或更改字符串，可以在&lt;strong&gt;app / Config / UserAgents.php中&lt;/strong&gt;找到此列表。</target>
        </trans-unit>
        <trans-unit id="99919864fae4ef3fff139d4da3ce5dbe53058384" translate="yes" xml:space="preserve">
          <source>The string &amp;ldquo;Safari&amp;rdquo; in this example is an array key in the list of browser definitions. You can find this list in &lt;strong&gt;application/config/user_agents.php&lt;/strong&gt; if you want to add new browsers or change the stings.</source>
          <target state="translated">在此示例中，字符串&amp;ldquo; Safari&amp;rdquo;是浏览器定义列表中的数组键。如果要添加新的浏览器或更改&lt;strong&gt;字符串，&lt;/strong&gt;可以在&lt;strong&gt;application / config / user_agents.php中&lt;/strong&gt;找到此列表。</target>
        </trans-unit>
        <trans-unit id="ac4f1b1a742c8a56666d2205e2499dac4a2fe779" translate="yes" xml:space="preserve">
          <source>The system can be easily extended through the use of your own libraries, helpers, or through class extensions or system hooks.</source>
          <target state="translated">系统可以很容易地通过使用自己的库、助手、或通过类扩展或系统钩子进行扩展。</target>
        </trans-unit>
        <trans-unit id="9f62d84cf3048a2846109df553af0167fefb7145" translate="yes" xml:space="preserve">
          <source>The system is not perfect and should be tested for your specific domain before being used in production. Most domains should work fine but some edge case ones, especially with a period in the domain itself (not used to separate suffixes or www) can potentially lead to false positives.</source>
          <target state="translated">该系统并不完美,在生产中使用之前,应针对您的特定域进行测试。大多数域名应该可以正常工作,但一些边缘大小写的域名,特别是域名本身带有句号的域名(不是用来分隔后缀或www)可能会导致误报。</target>
        </trans-unit>
        <trans-unit id="93bd5e2d665ce7c3d07e3d8b90b8d64e25495080" translate="yes" xml:space="preserve">
          <source>The system is smart enough to fall back to more generic language codes if an exact match cannot be found. If the locale code was set to &lt;strong&gt;en-US&lt;/strong&gt; and we only have language files set up for &lt;strong&gt;en&lt;/strong&gt; then those will be used since nothing exists for the more specific &lt;strong&gt;en-US&lt;/strong&gt;. If, however, a language directory existed at &lt;strong&gt;app/Language/en-US&lt;/strong&gt; then that would be used first.</source>
          <target state="translated">如果找不到完全匹配的系统，该系统足够智能，可以使用更多通用语言代码。如果将语言环境代码设置为&lt;strong&gt;en-US，&lt;/strong&gt;而我们仅为&lt;strong&gt;en&lt;/strong&gt;设置了语言文件，则将使用这些语言文件，因为更具体的&lt;strong&gt;en-US&lt;/strong&gt;不存在任何语言文件。但是，如果在&lt;strong&gt;app / language / zh-CN中&lt;/strong&gt;存在一个语言目录，则将首先使用该目录。</target>
        </trans-unit>
        <trans-unit id="001045e2a8289e1472396f382fd9995e615278d2" translate="yes" xml:space="preserve">
          <source>The system is unusable.</source>
          <target state="translated">系统无法使用。</target>
        </trans-unit>
        <trans-unit id="4fbf47460f70c1132e18e702a999c88eff0dbeae" translate="yes" xml:space="preserve">
          <source>The system will attempt to match the URI against Controllers by matching each segment against folders/files in APPPATH/Controllers, when a match wasn&amp;rsquo;t found against defined routes. That&amp;rsquo;s why your folders/files MUST start with a capital letter and the rest MUST be lowercase. If you want another naming convention you need to manually define it using the &lt;a href=&quot;routing&quot;&gt;URI Routing&lt;/a&gt; feature.</source>
          <target state="translated">如果找不到与定义的路由的匹配项，则系统将通过将每个段与APPPATH / Controllers中的文件夹/文件进行匹配来尝试将URI与Controllers进行匹配。这就是为什么您的文件夹/文件必须以大写字母开头，其余部分必须为小写字母的原因。如果需要其他命名约定，则需要使用&lt;a href=&quot;routing&quot;&gt;URI路由&lt;/a&gt;功能手动定义它。</target>
        </trans-unit>
        <trans-unit id="872e2af95489361c67c3a924a6123ef629a547cc" translate="yes" xml:space="preserve">
          <source>The table name for storing the schema version number.</source>
          <target state="translated">用于存储模式版本号的表名。</target>
        </trans-unit>
        <trans-unit id="49c245e00702ac011c5e69dd3f3e8159b26929dd" translate="yes" xml:space="preserve">
          <source>The term &amp;ldquo;extend&amp;rdquo; is used loosely since Helper functions are procedural and discrete and cannot be extended in the traditional programmatic sense. Under the hood, this gives you the ability to add to or or to replace the functions a Helper provides.</source>
          <target state="translated">术语&amp;ldquo;扩展&amp;rdquo;被宽松地使用，因为Helper函数是过程性的和离散的，并且不能在传统的程序意义上进行扩展。在后台，这使您能够添加或替换助手提供的功能。</target>
        </trans-unit>
        <trans-unit id="04e28c4ffddf86dba326a1e0d7c28cb538c81a9d" translate="yes" xml:space="preserve">
          <source>The term &amp;ldquo;extend&amp;rdquo; is used loosely since Helper functions are procedural and discrete and cannot be extended in the traditional programmatic sense. Under the hood, this gives you the ability to add to, or to replace the functions a Helper provides.</source>
          <target state="translated">术语&amp;ldquo;扩展&amp;rdquo;被宽松地使用，因为Helper函数是过程性的和离散的，并且不能在传统的程序意义上进行扩展。在后台，这使您能够添加或替换Helper提供的功能。</target>
        </trans-unit>
        <trans-unit id="f7a4d61b02735bd4e065c645039db16aafadb1ad" translate="yes" xml:space="preserve">
          <source>The terms &amp;lsquo;cipher&amp;rsquo; and &amp;lsquo;encryption algorithm&amp;rsquo; are interchangeable.</source>
          <target state="translated">术语&amp;ldquo;密码&amp;rdquo;和&amp;ldquo;加密算法&amp;rdquo;是可以互换的。</target>
        </trans-unit>
        <trans-unit id="86e87930148a647d6bf41b2bd5ca7a200bd525c1" translate="yes" xml:space="preserve">
          <source>The test is evaluating an integer, but the expected result is a boolean. PHP, however, due to it&amp;rsquo;s loose data-typing will evaluate the above code as TRUE using a normal equality test:</source>
          <target state="translated">该测试正在评估一个整数，但是预期结果是一个布尔值。但是，PHP由于其松散的数据类型，将使用普通的相等性测试将上述代码评估为TRUE：</target>
        </trans-unit>
        <trans-unit id="c6b61f2e9351eaf641a989818648e317c2f4091e" translate="yes" xml:space="preserve">
          <source>The text contained in the menu is found in the following language file: &lt;code&gt;language/&amp;lt;your_lang&amp;gt;/date_lang.php&lt;/code&gt;</source>
          <target state="translated">在以下语言文件中找到菜单中包含的文本： &lt;code&gt;language/&amp;lt;your_lang&amp;gt;/date_lang.php&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="846bf76f374e6d4e602d0bd51abe0a3fe911609b" translate="yes" xml:space="preserve">
          <source>The text generated by this function is found in the following language file: &lt;code&gt;language/&amp;lt;your_lang&amp;gt;/date_lang.php&lt;/code&gt;</source>
          <target state="translated">在以下语言文件中找到此函数生成的文本： &lt;code&gt;language/&amp;lt;your_lang&amp;gt;/date_lang.php&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e137e9dd69532ed94adf59e22703e3c3526ef41f" translate="yes" xml:space="preserve">
          <source>The text generated by this function is found in the following language file: &lt;em&gt;language/&amp;lt;your_lang&amp;gt;/Number.php&lt;/em&gt;</source>
          <target state="translated">在以下语言文件中找到此函数生成的文本：&lt;em&gt;language / &amp;lt;your_lang&amp;gt; /Number.php&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b87ec49b33b9952520b7ba66df4578328bd2b046" translate="yes" xml:space="preserve">
          <source>The text generated by this function is found in the following language file: &lt;em&gt;language/&amp;lt;your_lang&amp;gt;/number_lang.php&lt;/em&gt;</source>
          <target state="translated">在以下语言文件中找到此函数生成的文本：&lt;em&gt;language / &amp;lt;your_lang&amp;gt; /number_lang.php&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5dc96c44ea9886a100a5a8c003fe214a18cb8531" translate="yes" xml:space="preserve">
          <source>The text you would like shown as the watermark. Typically this will be a copyright notice.</source>
          <target state="translated">您希望显示为水印的文字。一般来说,这将是一个版权声明。</target>
        </trans-unit>
        <trans-unit id="145eafdf698fbda2f060ee98da7f8b042fad14e2" translate="yes" xml:space="preserve">
          <source>The text you would like shown in the &amp;ldquo;first&amp;rdquo; link on the left. If you do not want this link rendered, you can set its value to FALSE.</source>
          <target state="translated">您想在左侧的&amp;ldquo;第一个&amp;rdquo;链接中显示的文字。如果您不希望显示此链接，则可以将其值设置为FALSE。</target>
        </trans-unit>
        <trans-unit id="0b5e138da4f4b0a586d1f0d015b76c0f75e20467" translate="yes" xml:space="preserve">
          <source>The text you would like shown in the &amp;ldquo;last&amp;rdquo; link on the right. If you do not want this link rendered, you can set its value to FALSE.</source>
          <target state="translated">您想在右侧&amp;ldquo;最后一个&amp;rdquo;链接中显示的文本。如果您不希望显示此链接，则可以将其值设置为FALSE。</target>
        </trans-unit>
        <trans-unit id="9db212fb97160fd2e25162536097699623505636" translate="yes" xml:space="preserve">
          <source>The text you would like shown in the &amp;ldquo;next&amp;rdquo; page link. If you do not want this link rendered, you can set its value to FALSE.</source>
          <target state="translated">您想在&amp;ldquo;下一页&amp;rdquo;页面链接中显示的文本。如果您不希望显示此链接，则可以将其值设置为FALSE。</target>
        </trans-unit>
        <trans-unit id="1f2d15912bae9c88cab50683acbf9b3bd42f43a1" translate="yes" xml:space="preserve">
          <source>The text you would like shown in the &amp;ldquo;previous&amp;rdquo; page link. If you do not want this link rendered, you can set its value to FALSE.</source>
          <target state="translated">您想在&amp;ldquo;上一页&amp;rdquo;页面链接中显示的文本。如果您不希望显示此链接，则可以将其值设置为FALSE。</target>
        </trans-unit>
        <trans-unit id="dd05495a9658b7f02d35550bba527e6a9eaad68b" translate="yes" xml:space="preserve">
          <source>The third &lt;strong&gt;optional&lt;/strong&gt; parameter lets you change the behavior of the method so that it returns data as a string rather than sending it to your browser. This can be useful if you want to process the data in some way. If you set the parameter to TRUE (boolean) it will return data. The default behavior is FALSE, which sends it to your browser. Remember to assign it to a variable if you want the data returned:</source>
          <target state="translated">第三个&lt;strong&gt;可选&lt;/strong&gt;参数使您可以更改方法的行为，以便它以字符串形式返回数据，而不是将其发送到浏览器。如果您想以某种方式处理数据，这将很有用。如果将参数设置为TRUE（布尔值），它将返回数据。默认行为是FALSE，它将发送到您的浏览器。如果要返回数据，请记住将其分配给变量：</target>
        </trans-unit>
        <trans-unit id="fdee4b1dee21b01aa26d5464cc6834581bd5592a" translate="yes" xml:space="preserve">
          <source>The third parameter allows you to suppress errors in the event that a config file does not exist:</source>
          <target state="translated">第三个参数允许你在配置文件不存在的情况下抑制错误。</target>
        </trans-unit>
        <trans-unit id="6438dc0398f2b0ec80fad5bb33750caf385a30d2" translate="yes" xml:space="preserve">
          <source>The third parameter can contain a list of attributes you would like added to the link. The attributes can be a simple string or an associative array.</source>
          <target state="translated">第三个参数可以包含你希望添加到链接中的属性列表。这些属性可以是一个简单的字符串或一个关联数组。</target>
        </trans-unit>
        <trans-unit id="729522a3cc7a40834999ac40e2ba86b073a2eba9" translate="yes" xml:space="preserve">
          <source>The third parameter contains a boolean TRUE/FALSE to determine whether the box should be checked or not.</source>
          <target state="translated">第三个参数包含一个布尔值TRUE/FALSE,用于确定是否应该选中该框。</target>
        </trans-unit>
        <trans-unit id="65b19b18893c64483e0e745010adf89f6bf687c3" translate="yes" xml:space="preserve">
          <source>The third parameter determines whether links are shown in a new window. The value can be TRUE or FALSE (boolean):</source>
          <target state="translated">第三个参数决定是否在新窗口中显示链接。该值可以是TRUE或FALSE(布尔值)。</target>
        </trans-unit>
        <trans-unit id="9368b9b7248186e474cb1c6ce09fcb06f6329f95" translate="yes" xml:space="preserve">
          <source>The third parameter determines whether or not lowercase characters are forced. By default they are not. Options are boolean TRUE/FALSE.</source>
          <target state="translated">第三个参数决定是否强制使用小写字母。默认情况下不强制小写,选项为布尔值TRUE/FALSE。选项为布尔值TRUE/FALSE。</target>
        </trans-unit>
        <trans-unit id="91f7adbe88c6a97c0dd272adfc652045e0b2c566" translate="yes" xml:space="preserve">
          <source>The third parameter is an optional suffix added to the string, if undeclared this helper uses an ellipsis.</source>
          <target state="translated">第三个参数是添加到字符串中的可选后缀,如果没有声明,这个助手会使用省略号。</target>
        </trans-unit>
        <trans-unit id="b1e176a9f361094b6030aab9d8eefa8eb31e978f" translate="yes" xml:space="preserve">
          <source>The third parameter is an optional suffix added to the string. By default it adds an ellipsis.</source>
          <target state="translated">第三个参数是添加到字符串的可选后缀。默认情况下,它会添加一个省略号。</target>
        </trans-unit>
        <trans-unit id="bc85a920bbe71063d289662bbb5676b2ac78915e" translate="yes" xml:space="preserve">
          <source>The third, and any additional segments, represent the ID and any variables that will be passed to the controller.</source>
          <target state="translated">第三段,以及任何附加段,代表ID和任何将被传递给控制器的变量。</target>
        </trans-unit>
        <trans-unit id="833918b52320b838ab8835351346ffe9041be890" translate="yes" xml:space="preserve">
          <source>The time can be formatted with or without seconds, and it can be set to European or US format. If only the timestamp is submitted it will return the time without seconds formatted for the U.S.</source>
          <target state="translated">时间的格式可以是带秒或不带秒,也可以设置为欧洲或美国格式。如果只提交时间戳,将返回美国格式的无秒时间。</target>
        </trans-unit>
        <trans-unit id="549397bbdb4a65bb1b6cf23b071a8967920be757" translate="yes" xml:space="preserve">
          <source>The timers are automatically displayed in the &lt;a href=&quot;debugging&quot;&gt;Debub Toolbar&lt;/a&gt;.</source>
          <target state="translated">计时器会自动显示在&amp;ldquo;&lt;a href=&quot;debugging&quot;&gt;消除气泡&amp;rdquo;工具栏中&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5181867fc8dae88558f1ce390d4ab4ee9a56c806" translate="yes" xml:space="preserve">
          <source>The timezone the application has been set to display dates in.</source>
          <target state="translated">应用程序被设置为显示日期的时区。</target>
        </trans-unit>
        <trans-unit id="b3093e2ac2b8ce9100a5e36bd57d17da58fbc75b" translate="yes" xml:space="preserve">
          <source>The toolbar is enabled by default in any environment &lt;em&gt;except&lt;/em&gt; production. It will be shown whenever the constant CI_DEBUG is defined and it&amp;rsquo;s value is positive. This is defined in the boot files (i.e. app/Config/Boot/development.php) and can be modified there to determine what environments it shows itself in.</source>
          <target state="translated">默认情况下，工具栏在生产&lt;em&gt;以外的&lt;/em&gt;任何环境中&lt;em&gt;都&lt;/em&gt;处于启用状态。只要定义了常量CI_DEBUG并且其值为正，就会显示该信息。这是在启动文件（即app / Config / Boot / development.php）中定义的，可以在启动文件中进行修改以确定它在什么环境中显示。</target>
        </trans-unit>
        <trans-unit id="c8ead8483abb17f6b0b924cb9412ba39c8a95f33" translate="yes" xml:space="preserve">
          <source>The toolbar itself is displayed as an &lt;a href=&quot;../incoming/filters&quot;&gt;After Filter&lt;/a&gt;. You can stop it from ever running by removing it from the &lt;code&gt;$globals&lt;/code&gt; property of &lt;strong&gt;app/Config/Filters.php&lt;/strong&gt;.</source>
          <target state="translated">工具栏本身显示为&lt;a href=&quot;../incoming/filters&quot;&gt;After Filter&lt;/a&gt;。您可以通过将它从&lt;strong&gt;app / Config / Filters.php&lt;/strong&gt;的 &lt;code&gt;$globals&lt;/code&gt; 属性中删除来使其停止运行。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="49286f7a63de49638023a986b47630601eb40df5" translate="yes" xml:space="preserve">
          <source>The total number of queries executed</source>
          <target state="translated">执行的查询总数</target>
        </trans-unit>
        <trans-unit id="e8befc4db36b46d5df2ba9dd5123e904c5ff0ae2" translate="yes" xml:space="preserve">
          <source>The tutorial gives 404 errors everywhere :(</source>
          <target state="translated">该教程给出的404错误无处不在:(</target>
        </trans-unit>
        <trans-unit id="a30e71da625e268b1ca904dc1045563c96b30821" translate="yes" xml:space="preserve">
          <source>The two methods used here, &lt;code&gt;findAll()&lt;/code&gt; and &lt;code&gt;first()&lt;/code&gt;, are provided by the Model class. They already know the table to use based on the &lt;code&gt;$table&lt;/code&gt; property we set in &lt;strong&gt;NewsModel&lt;/strong&gt; class, earlier. They are helper methods that use the Query Builder to run their commands on the current table, and returning an array of results in the format of your choice. In this example, &lt;code&gt;findAll()&lt;/code&gt; returns an array of objects.</source>
          <target state="translated">Model类提供了这里使用的两个方法 &lt;code&gt;findAll()&lt;/code&gt; 和 &lt;code&gt;first()&lt;/code&gt; 。他们已经根据我们之前在&lt;strong&gt;NewsModel&lt;/strong&gt;类中设置的 &lt;code&gt;$table&lt;/code&gt; 属性知道要使用的表。它们是帮助器方法，使用查询生成器在当前表上运行其命令，并以您选择的格式返回结果数组。在此示例中， &lt;code&gt;findAll()&lt;/code&gt; 返回一个对象数组。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d4ee6ad41b5087b9e1db5fdec7fc0b49d7661837" translate="yes" xml:space="preserve">
          <source>The type of numeric identifier used to name migration files.</source>
          <target state="translated">用于命名迁移文件的数字标识符类型。</target>
        </trans-unit>
        <trans-unit id="06d07d50e8790295fca587f907628a00b71da5ba" translate="yes" xml:space="preserve">
          <source>The unsetting routine is effectively the same as &lt;em&gt;register_globals = off&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;取消设置&lt;/em&gt;例程实际上与&lt;em&gt;register_globals = off&lt;/em&gt;相同。</target>
        </trans-unit>
        <trans-unit id="8231fcf2b84eb3510fd1484d1d85b1a988e02b88" translate="yes" xml:space="preserve">
          <source>The updated SQL statement</source>
          <target state="translated">更新后的SQL语句</target>
        </trans-unit>
        <trans-unit id="7e660ca118ce503e603eac64d87b461f8b0e08e4" translate="yes" xml:space="preserve">
          <source>The usage of this method is identical to &lt;code&gt;addColumn()&lt;/code&gt;, except it alters an existing column rather than adding a new one. In order to change the name, you can add a &amp;ldquo;name&amp;rdquo; key into the field defining array.</source>
          <target state="translated">此方法的用法与 &lt;code&gt;addColumn()&lt;/code&gt; 相同，除了它更改现有列而不是添加新列。为了更改名称，您可以在字段定义数组中添加&amp;ldquo;名称&amp;rdquo;键。</target>
        </trans-unit>
        <trans-unit id="46408a6498e023f903cf4f150fc7ef72725eb174" translate="yes" xml:space="preserve">
          <source>The usage of this method is identical to &lt;code&gt;add_column()&lt;/code&gt;, except it alters an existing column rather than adding a new one. In order to change the name you can add a &amp;ldquo;name&amp;rdquo; key into the field defining array.</source>
          <target state="translated">此方法的用法与 &lt;code&gt;add_column()&lt;/code&gt; 相同，除了它更改现有列而不是添加新列。为了更改名称，您可以在字段定义数组中添加&amp;ldquo;名称&amp;rdquo;键。</target>
        </trans-unit>
        <trans-unit id="c46954e2352cf8d888736d81298fba498ab32218" translate="yes" xml:space="preserve">
          <source>The user agent library only contains the most common robot definitions. It is not a complete list of bots. There are hundreds of them so searching for each one would not be very efficient. If you find that some bots that commonly visit your site are missing from the list you can add them to your &lt;strong&gt;app/Config/UserAgents.php&lt;/strong&gt; file.</source>
          <target state="translated">用户代理库仅包含最常见的机械手定义。它不是机器人的完整列表。它们有数百个，因此搜索每个对象将不是很有效。如果您发现列表中缺少一些经常访问您网站的漫游器，则可以将其添加到您的&lt;strong&gt;app / Config / UserAgents.php&lt;/strong&gt;文件中。</target>
        </trans-unit>
        <trans-unit id="42d5501341110e0b74bc711bc1e5831c714456ff" translate="yes" xml:space="preserve">
          <source>The user agent library only contains the most common robot definitions. It is not a complete list of bots. There are hundreds of them so searching for each one would not be very efficient. If you find that some bots that commonly visit your site are missing from the list you can add them to your &lt;strong&gt;application/config/user_agents.php&lt;/strong&gt; file.</source>
          <target state="translated">用户代理库仅包含最常见的机械手定义。它不是机器人的完整列表。它们有数百个，因此搜索每个对象将不是很有效。如果您发现列表中缺少一些经常访问您网站的漫游器，则可以将其添加到&lt;strong&gt;application / config / user_agents.php&lt;/strong&gt;文件中。</target>
        </trans-unit>
        <trans-unit id="8fe55c107900410bcd4824838de6c5c6fb038a99" translate="yes" xml:space="preserve">
          <source>The user agent name definitions are located in a config file located at: &lt;strong&gt;app/Config/UserAgents.php&lt;/strong&gt;. You may add items to the various user agent arrays if needed.</source>
          <target state="translated">用户代理名称定义位于以下配置文件中：&lt;strong&gt;app / Config / UserAgents.php&lt;/strong&gt;。如果需要，可以将项目添加到各种用户代理阵列中。</target>
        </trans-unit>
        <trans-unit id="c953aef2bdb19c3b64108e9a61955e20cef4e1f2" translate="yes" xml:space="preserve">
          <source>The user agent name definitions are located in a config file located at: application/config/user_agents.php. You may add items to the various user agent arrays if needed.</source>
          <target state="translated">用户代理名称的定义位于配置文件中,位于:application/config/user_agents.php。如果需要的话,你可以在不同的用户代理数组中添加项目。</target>
        </trans-unit>
        <trans-unit id="36bc43702446324ebc468b9a9cd0a22de66750d9" translate="yes" xml:space="preserve">
          <source>The user&amp;rsquo;s IP Address, if it can be detected, or null. If the IP address is not a valid IP address, then will return 0.0.0.0</source>
          <target state="translated">如果可以检测到用户的IP地址，则为null。如果IP地址不是有效的IP地址，则将返回0.0.0.0</target>
        </trans-unit>
        <trans-unit id="23e70177cd3fb04320d382c3eaf2c0bb2e4fbbde" translate="yes" xml:space="preserve">
          <source>The userinfo section is simply the username and password that you might see with an FTP URI. While you can get this as part of the Authority, you can also retrieve it yourself:</source>
          <target state="translated">用户信息部分是简单的用户名和密码,你可能会看到一个FTP URI。虽然你可以把它作为授权的一部分,但你也可以自己检索。</target>
        </trans-unit>
        <trans-unit id="ee28ea53678e65730e2e22dbfcd6a0476ae5ad16" translate="yes" xml:space="preserve">
          <source>The username field be no shorter than 5 characters and no longer than 12.</source>
          <target state="translated">用户名字段不短于5个字符,不长于12个字符。</target>
        </trans-unit>
        <trans-unit id="994d87508b5482e314bbca52ab6ec6423cec6042" translate="yes" xml:space="preserve">
          <source>The username used to connect to the database.</source>
          <target state="translated">用于连接数据库的用户名。</target>
        </trans-unit>
        <trans-unit id="5d533920b42f713f55d5a22d17da78de4d8d988f" translate="yes" xml:space="preserve">
          <source>The validation rules for this form field.</source>
          <target state="translated">该表单字段的验证规则。</target>
        </trans-unit>
        <trans-unit id="0f49c9881ccd4c8b16c159be72a33a88b5ae0de8" translate="yes" xml:space="preserve">
          <source>The validation system supports callbacks to your own validation methods. This permits you to extend the validation class to meet your needs. For example, if you need to run a database query to see if the user is choosing a unique username, you can create a callback method that does that. Let&amp;rsquo;s create an example of this.</source>
          <target state="translated">验证系统支持对您自己的验证方法的回调。这使您可以扩展验证类以满足您的需求。例如，如果您需要运行数据库查询以查看用户是否选择了唯一的用户名，则可以创建一个执行该操作的回调方法。让我们创建一个例子。</target>
        </trans-unit>
        <trans-unit id="6244a99b633fdeb81de321302de8dd6c5fca79f5" translate="yes" xml:space="preserve">
          <source>The value being tested against can be a Time instance, a DateTime instance, or a string with the full date time in a manner that a new DateTime instance can understand. When passing a string as the first parameter, you can pass a timezone string in as the second parameter. If no timezone is given, the system default will be used:</source>
          <target state="translated">被测试的值可以是一个Time实例,一个DateTime实例,或者是一个新的DateTime实例能够理解的带有完整日期时间的字符串。当传递一个字符串作为第一个参数时,你可以传递一个时区字符串作为第二个参数。如果没有给出时区,将使用系统默认值。</target>
        </trans-unit>
        <trans-unit id="7c35c60013c5ceb87bc15bcdf1f0b15b183cb1ff" translate="yes" xml:space="preserve">
          <source>The value can be any string that your application uses to manage text strings and other formats. It is recommended that a &lt;a href=&quot;https://www.rfc-editor.org/rfc/bcp/bcp47.txt&quot;&gt;BCP 47&lt;/a&gt; language code is used. This results in language codes like en-US for American English, or fr-FR, for French/France. A more readable introduction to this can be found on the &lt;a href=&quot;https://www.w3.org/International/articles/language-tags/&quot;&gt;W3C&amp;rsquo;s site&lt;/a&gt;.</source>
          <target state="translated">该值可以是您的应用程序用来管理文本字符串和其他格式的任何字符串。建议使用&lt;a href=&quot;https://www.rfc-editor.org/rfc/bcp/bcp47.txt&quot;&gt;BCP 47&lt;/a&gt;语言代码。这会导致语言代码，例如美国英语为en-US，法语/法国为fr-FR。在&lt;a href=&quot;https://www.w3.org/International/articles/language-tags/&quot;&gt;W3C的站点&lt;/a&gt;上可以找到对此更具可读性的介绍。</target>
        </trans-unit>
        <trans-unit id="433be07e88570ccec098ac1314b566609be81602" translate="yes" xml:space="preserve">
          <source>The value for the filter must match one of the aliases defined within &lt;code&gt;app/Config/Filters.php&lt;/code&gt;.</source>
          <target state="translated">过滤器的值必须与 &lt;code&gt;app/Config/Filters.php&lt;/code&gt; 中定义的别名之一匹配。</target>
        </trans-unit>
        <trans-unit id="683591ea594d1ea47f1e3e0f17b59356c2b35ef5" translate="yes" xml:space="preserve">
          <source>The value for the filter must match one of the aliases defined within &lt;code&gt;app/Config/Filters.php&lt;/code&gt;. You may also supply arguments to be passed to the filter&amp;rsquo;s &lt;code&gt;before()&lt;/code&gt; and &lt;code&gt;after()&lt;/code&gt; methods:</source>
          <target state="translated">过滤器的值必须与 &lt;code&gt;app/Config/Filters.php&lt;/code&gt; 中定义的别名之一匹配。您还可以提供要传递给过滤器的 &lt;code&gt;before()&lt;/code&gt; 和 &lt;code&gt;after()&lt;/code&gt; 方法的参数：</target>
        </trans-unit>
        <trans-unit id="21393f4716d2905d004c1e6d8ad1c53f17643faf" translate="yes" xml:space="preserve">
          <source>The value for the pseudo-variable &lt;code&gt;blog_entries&lt;/code&gt; is a sequential array of associative arrays. The outer level does not have keys associated with each of the nested &amp;ldquo;rows&amp;rdquo;.</source>
          <target state="translated">伪变量 &lt;code&gt;blog_entries&lt;/code&gt; 的值是关联数组的顺序数组。外层没有与每个嵌套&amp;ldquo;行&amp;rdquo;关联的键。</target>
        </trans-unit>
        <trans-unit id="1e77d6b258ff1dbd544a8fbe42e1a4cce9306e6e" translate="yes" xml:space="preserve">
          <source>The value for the pseudo-variable &lt;code&gt;blog_entry&lt;/code&gt; is an associative array. The key/value pairs defined inside it will be exposed inside the variable pair loop for that variable.</source>
          <target state="translated">伪变量 &lt;code&gt;blog_entry&lt;/code&gt; 的值是一个关联数组。在其中定义的键/值对将在该变量的变量对循环内公开。</target>
        </trans-unit>
        <trans-unit id="d06dfcde6af1929402dcc4a3db0f20dd16605694" translate="yes" xml:space="preserve">
          <source>The value found within the array, or null</source>
          <target state="translated">在数组中找到的值,或者为空</target>
        </trans-unit>
        <trans-unit id="e8915410d6ffa06712b47c9d89cd41452b0cd744" translate="yes" xml:space="preserve">
          <source>The value is returned in the format specified in $returnType.</source>
          <target state="translated">该值以$returnType中指定的格式返回。</target>
        </trans-unit>
        <trans-unit id="fc7fa54a5a1d4f6ba0b399c26cd0c5285cafeec7" translate="yes" xml:space="preserve">
          <source>The value must match the value of the field in the parameter.</source>
          <target state="translated">该值必须与参数中的字段值相匹配。</target>
        </trans-unit>
        <trans-unit id="bd2cf851463a011a050b8a6dcfb8cd476dcacba4" translate="yes" xml:space="preserve">
          <source>The value of &amp;lsquo;foo&amp;rsquo; in $_ENV</source>
          <target state="translated">$ _ENV中'foo'的值</target>
        </trans-unit>
        <trans-unit id="8e66ca5390d535d1a7fbc2ae75b4b2a8c8d4a098" translate="yes" xml:space="preserve">
          <source>The value of the Response object&amp;rsquo;s send() method.</source>
          <target state="translated">Response对象的send（）方法的值。</target>
        </trans-unit>
        <trans-unit id="01d585d08f420e2f25513cd1394c460dc658aae1" translate="yes" xml:space="preserve">
          <source>The value of the defined key, or the default value.</source>
          <target state="translated">定义的键的值,或者默认值。</target>
        </trans-unit>
        <trans-unit id="0793d5da9928a47bf168120ad60485455f4e2573" translate="yes" xml:space="preserve">
          <source>The version of the database being used</source>
          <target state="translated">正在使用的数据库版本</target>
        </trans-unit>
        <trans-unit id="a2076b9113665d973257ac81dd15a88a37ae031f" translate="yes" xml:space="preserve">
          <source>The word &amp;ldquo;class&amp;rdquo; here refers to libraries and drivers.</source>
          <target state="translated">这里的&amp;ldquo;类&amp;rdquo;一词是指库和驱动程序。</target>
        </trans-unit>
        <trans-unit id="c553f3aab79b89685b49148200c79d654922cbe5" translate="yes" xml:space="preserve">
          <source>The words &amp;ldquo;code_start&amp;rdquo; and &amp;ldquo;code_end&amp;rdquo; are arbitrary. They are simply words used to set two markers. You can use any words you want, and you can set multiple sets of markers. Consider this example:</source>
          <target state="translated">单词&amp;ldquo; code_start&amp;rdquo;和&amp;ldquo; code_end&amp;rdquo;是任意的。它们只是用于设置两个标记的单词。您可以使用任何单词，也可以设置多组标记。考虑以下示例：</target>
        </trans-unit>
        <trans-unit id="1390c56c0a055d53b65a2602afef521fbcfd02a8" translate="yes" xml:space="preserve">
          <source>Their difference to &lt;code&gt;hasPrevious()&lt;/code&gt; and &lt;code&gt;hasNext()&lt;/code&gt; is that they are based on the current page while &lt;code&gt;hasPrevious()&lt;/code&gt; and &lt;code&gt;hasNext()&lt;/code&gt; are based on the set of links to be displayed before and after the current page based on the value passed in &lt;code&gt;setSurroundCount&lt;/code&gt;.</source>
          <target state="translated">它们与 &lt;code&gt;hasPrevious()&lt;/code&gt; 和 &lt;code&gt;hasNext()&lt;/code&gt; 的区别在于它们基于当前页面，而 &lt;code&gt;hasPrevious()&lt;/code&gt; 和 &lt;code&gt;hasNext()&lt;/code&gt; 基于基于 &lt;code&gt;setSurroundCount&lt;/code&gt; 中传递的值在当前页面之前和之后显示的链接集。。</target>
        </trans-unit>
        <trans-unit id="2b38f31cfff3de55386868844f36c89e073a5162" translate="yes" xml:space="preserve">
          <source>Then &lt;strong&gt;foo&lt;/strong&gt; is the command name, and the &lt;code&gt;$params&lt;/code&gt; array would be:</source>
          <target state="translated">然后&lt;strong&gt;foo&lt;/strong&gt;是命令名称， &lt;code&gt;$params&lt;/code&gt; 数组将是：</target>
        </trans-unit>
        <trans-unit id="e8dbce3d8dea58baaa2224aa6728bd602dd9e6b5" translate="yes" xml:space="preserve">
          <source>Then add a new method called &lt;code&gt;username_check()&lt;/code&gt; to your controller. Here&amp;rsquo;s how your controller should now look:</source>
          <target state="translated">然后将一个名为 &lt;code&gt;username_check()&lt;/code&gt; 的新方法添加到您的控制器。现在，您的控制器应如下所示：</target>
        </trans-unit>
        <trans-unit id="525a58dcf94173a5b523d8b11b632d7d0e42c2f1" translate="yes" xml:space="preserve">
          <source>Then in &lt;strong&gt;application/config/migration.php&lt;/strong&gt; set &lt;code&gt;$config['migration_version'] = 20121031100537;&lt;/code&gt;.</source>
          <target state="translated">然后在&lt;strong&gt;application / config / migration.php中&lt;/strong&gt;设置 &lt;code&gt;$config['migration_version'] = 20121031100537;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5afe6c36a65bf03cd31849ccdb76f22b9a80d952" translate="yes" xml:space="preserve">
          <source>Then load the page at the URL you&amp;rsquo;ve been using and you should see the variables replaced.</source>
          <target state="translated">然后将页面加载到您一直在使用的URL，您应该会看到变量已替换。</target>
        </trans-unit>
        <trans-unit id="6515d9007760169f497b359f416b3418c21015cc" translate="yes" xml:space="preserve">
          <source>Then save the file in your &lt;em&gt;application/views/&lt;/em&gt; directory.</source>
          <target state="translated">然后将文件保存在&lt;em&gt;application / views /&lt;/em&gt;目录中。</target>
        </trans-unit>
        <trans-unit id="4df8b158457b8adb0994d9d90ed61982575db20d" translate="yes" xml:space="preserve">
          <source>Then save the file in your &lt;strong&gt;app/Views&lt;/strong&gt; directory.</source>
          <target state="translated">然后将文件保存在您的&lt;strong&gt;app / Views&lt;/strong&gt;目录中。</target>
        </trans-unit>
        <trans-unit id="88bcb8a9801fce85699038e0cac56cab9fd7055d" translate="yes" xml:space="preserve">
          <source>Then save the file to your &lt;em&gt;application/controllers/&lt;/em&gt; directory.</source>
          <target state="translated">然后将文件保存到您的&lt;em&gt;application / controllers /&lt;/em&gt;目录。</target>
        </trans-unit>
        <trans-unit id="e7ca2463756fa1df8d70c9f3e69eeea96d3d1a72" translate="yes" xml:space="preserve">
          <source>Then save the file to your &lt;em&gt;application/controllers/&lt;/em&gt; folder.</source>
          <target state="translated">然后将文件保存到您的&lt;em&gt;应用程序/控制器/&lt;/em&gt;文件夹中。</target>
        </trans-unit>
        <trans-unit id="666a6687baa87dfd8f87dc2107af0807a64173c5" translate="yes" xml:space="preserve">
          <source>Then save the file to your &lt;strong&gt;/app/Controllers/&lt;/strong&gt; directory.</source>
          <target state="translated">然后将文件保存到&lt;strong&gt;/ app / Controllers /&lt;/strong&gt;目录。</target>
        </trans-unit>
        <trans-unit id="ea3c8ad3666095be6cc47a2c5b1f302a9bff89bc" translate="yes" xml:space="preserve">
          <source>Then save the file to your &lt;strong&gt;app/Controllers/&lt;/strong&gt; directory.</source>
          <target state="translated">然后将文件保存到您的&lt;strong&gt;app / Controllers /&lt;/strong&gt;目录。</target>
        </trans-unit>
        <trans-unit id="0704065e08d419bf187f7ee76d229a9631e9285d" translate="yes" xml:space="preserve">
          <source>Then you can use any of the three standard rendering methods that it provides: &lt;strong&gt;render(viewpath, options, save)&lt;/strong&gt;, &lt;strong&gt;setVar(name, value, context)&lt;/strong&gt; and &lt;strong&gt;setData(data, context)&lt;/strong&gt;. You will also be able to specify delimiters directly, through the &lt;strong&gt;setDelimiters(left,right)&lt;/strong&gt; method.</source>
          <target state="translated">然后，您可以使用它提供的三种标准渲染方法中的任何一种：&lt;strong&gt;render（viewpath，options，save）&lt;/strong&gt;，&lt;strong&gt;setVar（name，value，context）&lt;/strong&gt;和&lt;strong&gt;setData（data，context）&lt;/strong&gt;。您还可以通过&lt;strong&gt;setDelimiters（left，right）&lt;/strong&gt;方法直接指定定界符。</target>
        </trans-unit>
        <trans-unit id="18eaf0e30cf97e5a6abbc849bb831e452fda99bc" translate="yes" xml:space="preserve">
          <source>Then you would modify the &lt;code&gt;routes&lt;/code&gt; service to load your class instead:</source>
          <target state="translated">然后，您将修改 &lt;code&gt;routes&lt;/code&gt; 服务以加载您的类：</target>
        </trans-unit>
        <trans-unit id="0cd10a47d1d8d3b78a003caa8071eb783ab81f36" translate="yes" xml:space="preserve">
          <source>Then, on the page that accepts the submission you&amp;rsquo;ll have something like this:</source>
          <target state="translated">然后，在接受提交的页面上，您将看到以下内容：</target>
        </trans-unit>
        <trans-unit id="cdf88d84610218a5f7808515ca964ecdfd3b6e2e" translate="yes" xml:space="preserve">
          <source>Then, store the name in one of your language file arrays (without the prefix):</source>
          <target state="translated">然后,将名称存储在你的一个语言文件数组中(没有前缀)。</target>
        </trans-unit>
        <trans-unit id="ee192db64354b0a4273770d616ccdff5643228d9" translate="yes" xml:space="preserve">
          <source>Then, to globally tell the system to use that group you would set this variable located in the config file:</source>
          <target state="translated">然后,如果要全局地告诉系统使用该组,你可以在配置文件中设置这个变量。</target>
        </trans-unit>
        <trans-unit id="8badae02dd6944cf6807cd84ad3d3ded786125aa" translate="yes" xml:space="preserve">
          <source>There are 21 different preferences available to tailor how your email messages are sent. You can either set them manually as described here, or automatically via preferences stored in your config file, described below:</source>
          <target state="translated">有21种不同的偏好设置可用于定制电子邮件的发送方式。你可以像这里描述的那样手动设置,或者通过存储在配置文件中的偏好设置自动设置,如下所述。</target>
        </trans-unit>
        <trans-unit id="dcb28304f10008a614018c243887ab95ba3dea83" translate="yes" xml:space="preserve">
          <source>There are 5 rotation options:</source>
          <target state="translated">有5种轮换选择。</target>
        </trans-unit>
        <trans-unit id="16a87f99405e3ad2f296c7cf559c6f2cfd0599eb" translate="yes" xml:space="preserve">
          <source>There are a couple of things to note here:</source>
          <target state="translated">这里有几点需要注意。</target>
        </trans-unit>
        <trans-unit id="1b56afab6c223beb4455222c9746b001aa97f1a2" translate="yes" xml:space="preserve">
          <source>There are actually two types of views that you can create. The first has an array of all of the errors, and is what we just looked at. The other type is simpler, and only contains a single variable, &lt;code&gt;$error&lt;/code&gt; that contains the error message. This is used with the &lt;code&gt;showError()&lt;/code&gt; method where a field must be specified:</source>
          <target state="translated">您实际上可以创建两种视图。第一个数组包含所有错误，这就是我们刚刚查看的内容。另一种类型更简单，仅包含一个包含错误消息的变量 &lt;code&gt;$error&lt;/code&gt; 。它与必须指定字段的 &lt;code&gt;showError()&lt;/code&gt; 方法一起使用：</target>
        </trans-unit>
        <trans-unit id="fbfa1e4e759a116988deabae9ac095ce71de8a56" translate="yes" xml:space="preserve">
          <source>There are also several deployment repositories, referenced in the installation directions. The deployment repositories are built automatically when a new version is released, and they are not directly contributed to.</source>
          <target state="translated">还有几个部署仓库,在安装说明中会提到。部署仓库是在新版本发布时自动建立的,它们不是直接贡献给我们的。</target>
        </trans-unit>
        <trans-unit id="a5d4e715bf2fc86b4909f77004f8ad1eb5312f97" translate="yes" xml:space="preserve">
          <source>There are eight different log levels, matching to the &lt;a href=&quot;https://tools.ietf.org/html/rfc5424&quot;&gt;RFC 5424&lt;/a&gt; levels, and they are as follows:</source>
          <target state="translated">有八种不同的日志级别，与&lt;a href=&quot;https://tools.ietf.org/html/rfc5424&quot;&gt;RFC 5424&lt;/a&gt;级别匹配，如下所示：</target>
        </trans-unit>
        <trans-unit id="d9161044595ca3da92e937815d022f60799f3985" translate="yes" xml:space="preserve">
          <source>There are four available processing methods:</source>
          <target state="translated">有四种可用的处理方法。</target>
        </trans-unit>
        <trans-unit id="b2b8b90d11a6c2644f8d653c8b9e48860c798143" translate="yes" xml:space="preserve">
          <source>There are many reasons for running CodeIgniter from the command-line, but they are not always obvious.</source>
          <target state="translated">从命令行运行CodeIgniter的原因有很多,但并不总是显而易见。</target>
        </trans-unit>
        <trans-unit id="fbeb372403a4686ed33cdd01a5a5ca35c25450cc" translate="yes" xml:space="preserve">
          <source>There are no configuration options for legacy support.</source>
          <target state="translated">没有遗留支持的配置选项。</target>
        </trans-unit>
        <trans-unit id="3e6e088dae5fe1eda5050ae9c1593edcd3628bd9" translate="yes" xml:space="preserve">
          <source>There are occasions where you need to require that only a single instance of a service is created. This is easily handled with the &lt;code&gt;getSharedInstance()&lt;/code&gt; method that is called from within the factory method. This handles checking if an instance has been created and saved within the class, and, if not, creates a new one. All of the factory methods provide a &lt;code&gt;$getShared = true&lt;/code&gt; value as the last parameter. You should stick to the method also:</source>
          <target state="translated">在某些情况下，您需要要求仅创建服务的单个实例。通过从工厂方法内部调用的 &lt;code&gt;getSharedInstance()&lt;/code&gt; 方法可以轻松地处理此问题。这用于检查实例是否已在类中创建并保存，如果没有，则创建一个新实例。所有工厂方法都提供 &lt;code&gt;$getShared = true&lt;/code&gt; 值作为最后一个参数。您还应该坚持使用该方法：</target>
        </trans-unit>
        <trans-unit id="2f872b0a7c11f4879b09000d8634b72d8cf2f0ea" translate="yes" xml:space="preserve">
          <source>There are only two settings:</source>
          <target state="translated">只有两种设置。</target>
        </trans-unit>
        <trans-unit id="3eae96b8c21cb27ff18ed7fec99b71d560a0dbb4" translate="yes" xml:space="preserve">
          <source>There are only two things here that probably look unfamiliar to you: the &lt;code&gt;form_open()&lt;/code&gt; function and the &lt;code&gt;validation_errors()&lt;/code&gt; function.</source>
          <target state="translated">这里只有两件事您可能不熟悉： &lt;code&gt;form_open()&lt;/code&gt; 函数和 &lt;code&gt;validation_errors()&lt;/code&gt; 函数。</target>
        </trans-unit>
        <trans-unit id="a48257e6792d25f675eb3bd72bf8dc2bab9c0cb4" translate="yes" xml:space="preserve">
          <source>There are probably only two things here that look unfamiliar. The &lt;code&gt;\Config\Services::validation()-&amp;gt;listErrors()&lt;/code&gt; function is used to report errors related to form validation. The &lt;code&gt;csrf_field()&lt;/code&gt; function creates a hidden input with a CSRF token that helps protect against some common attacks.</source>
          <target state="translated">在这里可能只有两件事看起来很陌生。该 &lt;code&gt;\Config\Services::validation()-&amp;gt;listErrors()&lt;/code&gt; 函数是用来与表单验证报告的错误。该 &lt;code&gt;csrf_field()&lt;/code&gt; 函数创建一个CSRF隐藏的输入令牌，有助于对一些常见的攻击保护。</target>
        </trans-unit>
        <trans-unit id="7f14665a57a8a2b041c1168a9c9772d0a31633fe" translate="yes" xml:space="preserve">
          <source>There are quite a few functions necessary to CodeIgniter that need to be loaded early for use in the core classes and thus cannot be placed into a helper. While most users will never have any need to do this, but the option to replace these functions does exist for those who would like to significantly alter the CodeIgniter core. In the &lt;code&gt;App\&lt;/code&gt; directory there is a file &lt;code&gt;Common.php&lt;/code&gt;, and any functions defined in there will take precedence over the versions found in &lt;code&gt;system/Common.php&lt;/code&gt;. This is also an opportunity to create globally-available functions you intend to use throughout the framework.</source>
          <target state="translated">CodeIgniter有很多必要的功能，这些功能需要尽早加载才能在核心类中使用，因此无法放入帮助程序中。尽管大多数用户永远都不需要这样做，但是对于那些想大幅更改CodeIgniter核心的用户来说，确实存在替换这些功能的选项。在 &lt;code&gt;App\&lt;/code&gt; 目录中，有一个 &lt;code&gt;Common.php&lt;/code&gt; 文件，并且其中定义的任何功能都将优先于 &lt;code&gt;system/Common.php&lt;/code&gt; 中的版本。这也是创建打算在整个框架中使用的全局可用功能的机会。</target>
        </trans-unit>
        <trans-unit id="f68bad634482bd3d2a3ad12fdfa92a2c34a09c55" translate="yes" xml:space="preserve">
          <source>There are seven available processing methods:</source>
          <target state="translated">有七种可用的处理方法。</target>
        </trans-unit>
        <trans-unit id="d9aabf3d07b7f514b2a3f01b9c2c933867b33b98" translate="yes" xml:space="preserve">
          <source>There are seven preferences you can set to control various aspects of the calendar. Preferences are set by passing an array of preferences in the second parameter of the loading function. Here is an example:</source>
          <target state="translated">您可以设置7个首选项来控制日历的各个方面。首选项是通过在加载函数的第二个参数中传递一个首选项数组来设置的。下面是一个例子。</target>
        </trans-unit>
        <trans-unit id="3d255c1d22dd96a7c86a39a055fbfc9c2ab4ebd3" translate="yes" xml:space="preserve">
          <source>There are several development repositories, of interest to potential contributors:</source>
          <target state="translated">有几个开发资源库,潜在的贡献者会感兴趣。</target>
        </trans-unit>
        <trans-unit id="72b2d9b098b2f8cfa96d5c6d592391fab5b6f101" translate="yes" xml:space="preserve">
          <source>There are several points within the model&amp;rsquo;s execution that you can specify multiple callback methods to run. These methods can be used to normalize data, hash passwords, save related entities, and much more. The following points in the model&amp;rsquo;s execution can be affected, each through a class property: &lt;strong&gt;$beforeInsert&lt;/strong&gt;, &lt;strong&gt;$afterInsert&lt;/strong&gt;, &lt;strong&gt;$beforeUpdate&lt;/strong&gt;, &lt;strong&gt;afterUpdate&lt;/strong&gt;, &lt;strong&gt;afterFind&lt;/strong&gt;, and &lt;strong&gt;afterDelete&lt;/strong&gt;.</source>
          <target state="translated">在模型的执行过程中，您可以指定多个要运行的回调方法。这些方法可用于规范化数据，哈希密码，保存相关实体等等。可以通过类属性来影响模型执行中的以下几点：&lt;strong&gt;$ beforeInsert&lt;/strong&gt;，&lt;strong&gt;$ afterInsert&lt;/strong&gt;，&lt;strong&gt;$ beforeUpdate&lt;/strong&gt;，&lt;strong&gt;afterUpdate&lt;/strong&gt;，&lt;strong&gt;afterFind&lt;/strong&gt;和&lt;strong&gt;afterDelete&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="96c670a89c5b42c9a798b7ce8da4afb1f79402b9" translate="yes" xml:space="preserve">
          <source>There are several things you may wish to do when creating tables. Add fields, add keys to the table, alter columns. CodeIgniter provides a mechanism for this.</source>
          <target state="translated">在创建表格时,你可能希望做几件事。添加字段,为表添加键,改变列。CodeIgniter为此提供了一个机制。</target>
        </trans-unit>
        <trans-unit id="efec2f009cd95d2450db9e7d5eaa1107b9697a55" translate="yes" xml:space="preserve">
          <source>There are several ways that a new Time instance can be created. The first is simply to create a new instance like any other class. When you do it this way, you can pass in a string representing the desired time. This can be any string that PHP&amp;rsquo;s strtotime function can parse:</source>
          <target state="translated">有几种创建新的Time实例的方法。首先是像其他任何类一样简单地创建一个新实例。当您以这种方式进行操作时，您可以传递代表所需时间的字符串。这可以是PHP的strtotime函数可以解析的任何字符串：</target>
        </trans-unit>
        <trans-unit id="6145569e00d030b12a4f1ad97b894bdb66f76856" translate="yes" xml:space="preserve">
          <source>There are several ways to generate query results:</source>
          <target state="translated">有几种方法可以生成查询结果。</target>
        </trans-unit>
        <trans-unit id="1363a7e9c9236db9434af92e3707763fc2ec59fc" translate="yes" xml:space="preserve">
          <source>There are some breaking changes&amp;hellip;</source>
          <target state="translated">有一些重大变化&amp;hellip;</target>
        </trans-unit>
        <trans-unit id="ca80b79e0ca53fe010a4169a2e043d0166bcb9cd" translate="yes" xml:space="preserve">
          <source>There are some configuration items in Javascript library. These can either be set in &lt;em&gt;application/config.php&lt;/em&gt;, within its own &lt;em&gt;config/javascript.php&lt;/em&gt; file, or within any controller usings the &lt;code&gt;set_item()&lt;/code&gt; function.</source>
          <target state="translated">Javascript库中有一些配置项。这些可以在&lt;em&gt;application / config.php&lt;/em&gt;，自己的&lt;em&gt;config / javascript.php&lt;/em&gt;文件中设置，也可以在使用 &lt;code&gt;set_item()&lt;/code&gt; 函数的任何控制器中设置。</target>
        </trans-unit>
        <trans-unit id="311eeccd02b1fa8c24793790ab52e2d81b638c93" translate="yes" xml:space="preserve">
          <source>There are some places in the CodeIgniter system where the ENVIRONMENT constant is used. This section describes how default framework behavior is affected.</source>
          <target state="translated">在CodeIgniter系统中,有一些地方会用到ENVIRONMENT常量。本节介绍了默认框架行为是如何受到影响的。</target>
        </trans-unit>
        <trans-unit id="f8f7b0035aad4ba6631b1ab5dd58acc1e40dbc86" translate="yes" xml:space="preserve">
          <source>There are three message types:</source>
          <target state="translated">有三种信息类型。</target>
        </trans-unit>
        <trans-unit id="629f9692433c64b0562f5fcdc3d4ede2b94c0308" translate="yes" xml:space="preserve">
          <source>There are three reserved routes:</source>
          <target state="translated">有三条保留路线。</target>
        </trans-unit>
        <trans-unit id="99b9cae11bccc39c53e1dd6aec9f2742f3ea236a" translate="yes" xml:space="preserve">
          <source>There are three types of substitution supported: simple, looping, and nested. Substitutions are performed in the same sequence that pseudo-variables were added.</source>
          <target state="translated">支持三种类型的替换:简单、循环和嵌套。替换是以添加伪变量的相同顺序进行的。</target>
        </trans-unit>
        <trans-unit id="8f97aa8379257d9b6db6c439c41821e9268440dc" translate="yes" xml:space="preserve">
          <source>There are times where you want to apply a filter to almost every request, but have a few that should be left alone. One common example is if you need to exclude a few URI&amp;rsquo;s from the CSRF protection filter to allow requests from third-party websites to hit one or two specific URI&amp;rsquo;s, while keeping the rest of them protected. To do this, add an array with the &amp;lsquo;except&amp;rsquo; key and a uri to match as the value alongside the alias:</source>
          <target state="translated">有时候，您希望对几乎每个请求都应用过滤器，但有一些应该单独使用。一个常见的示例是，如果您需要从CSRF保护过滤器中排除一些URI，以允许来自第三方网站的请求命中一个或两个特定的URI，而其余的则受到保护。为此，添加一个带有'except'键和一个uri的数组，以匹配别名旁边的值：</target>
        </trans-unit>
        <trans-unit id="55a5368680abd5395640f6e06de5fa8437aba53d" translate="yes" xml:space="preserve">
          <source>There are two &lt;strong&gt;view()&lt;/strong&gt; functions referred to in this tutorial. One is the class method created with &lt;code&gt;public function view($page = 'home')&lt;/code&gt; and &lt;code&gt;echo view('welcome_message');&lt;/code&gt; for displaying a view. Both are &lt;em&gt;technically&lt;/em&gt; a function. But when you create a function in a class, it&amp;rsquo;s called a method.</source>
          <target state="translated">本教程中涉及两个&lt;strong&gt;view（）&lt;/strong&gt;函数。一种是使用 &lt;code&gt;public function view($page = 'home')&lt;/code&gt; 和 &lt;code&gt;echo view('welcome_message');&lt;/code&gt; 创建的类方法；用于显示视图。从&lt;em&gt;技术上讲，&lt;/em&gt;两者都是功能。但是，当您在类中创建函数时，它称为方法。</target>
        </trans-unit>
        <trans-unit id="d3c9b37faf50477c70183affb35728e76b8e9758" translate="yes" xml:space="preserve">
          <source>There are two additional configuration keys you may make use of when initializing the server class: debug can be set to TRUE in order to enable debugging, and xss_clean may be set to FALSE to prevent sending data through the Security library&amp;rsquo;s &lt;code&gt;xss_clean()&lt;/code&gt; method.</source>
          <target state="translated">初始化服务器类时，可以使用两个附加配置键：debug可以设置为TRUE以启用调试，xss_clean可以设置为FALSE以防止通过安全性库的 &lt;code&gt;xss_clean()&lt;/code&gt; 方法发送数据。</target>
        </trans-unit>
        <trans-unit id="bd256896c069d53389d269d6b63159287c0bbe6b" translate="yes" xml:space="preserve">
          <source>There are two methods supported to detect the correct locale during the request. The first is a &amp;ldquo;set and forget&amp;rdquo; method that will automatically perform &lt;a href=&quot;../incoming/content_negotiation&quot;&gt;content negotiation&lt;/a&gt; for you to determine the correct locale to use. The second method allows you to specify a segment in your routes that will be used to set the locale.</source>
          <target state="translated">支持两种方法来在请求期间检测正确的语言环境。第一种是&amp;ldquo;设置并忘记&amp;rdquo;方法，该方法将自动执行&lt;a href=&quot;../incoming/content_negotiation&quot;&gt;内容协商&lt;/a&gt;，以供您确定要使用的正确语言环境。第二种方法允许您在路由中指定一个用于设置语言环境的网段。</target>
        </trans-unit>
        <trans-unit id="5b2f3b1d9f7ac0bc0a6f9614543d2395792ce854" translate="yes" xml:space="preserve">
          <source>There are two types of watermarking that you can use:</source>
          <target state="translated">有两种类型的水印可以使用。</target>
        </trans-unit>
        <trans-unit id="ef6e214cf7ef2709759cc2ea89093616dcff90d7" translate="yes" xml:space="preserve">
          <source>There are two ways to connect to a database:</source>
          <target state="translated">有两种方法可以连接到数据库。</target>
        </trans-unit>
        <trans-unit id="a14106d1c67d57749d3aba340af098e00dd489e7" translate="yes" xml:space="preserve">
          <source>There are two ways to load a config file:</source>
          <target state="translated">有两种方法可以加载配置文件。</target>
        </trans-unit>
        <trans-unit id="e4b19523e4c567a7d5a60289d16084867fe2a9ee" translate="yes" xml:space="preserve">
          <source>There are two ways to set the body of the request for request types that support them, like PUT, OR POST. The first way is to use the &lt;code&gt;setBody()&lt;/code&gt; method:</source>
          <target state="translated">有两种方法可以为支持请求的请求类型设置请求的主体，例如PUT或POST。第一种方法是使用 &lt;code&gt;setBody()&lt;/code&gt; 方法：</target>
        </trans-unit>
        <trans-unit id="de5cb69669ee5219405a4d47d33ffdf726ab750f" translate="yes" xml:space="preserve">
          <source>There is a special exception for creating id fields. A field with type id will automatically be assigned as an INT(9) auto_incrementing Primary Key.</source>
          <target state="translated">对于创建id字段有一个特殊的例外。类型为id的字段将被自动分配为一个INT(9)自动递增的主键。</target>
        </trans-unit>
        <trans-unit id="a345b3e8ab95047284a2375f61ed1e17f9f96dbb" translate="yes" xml:space="preserve">
          <source>There is a third &lt;strong&gt;optional&lt;/strong&gt; parameter lets you change the behavior of the method so that it returns data as a string rather than sending it to your browser. This can be useful if you want to process the data in some way. If you set the parameter to TRUE (boolean) it will return data. The default behavior is false, which sends it to your browser. Remember to assign it to a variable if you want the data returned:</source>
          <target state="translated">第三个&lt;strong&gt;可选&lt;/strong&gt;参数使您可以更改方法的行为，以便它以字符串形式返回数据，而不是将其发送到浏览器。如果您想以某种方式处理数据，这将很有用。如果将参数设置为TRUE（布尔值），它将返回数据。默认行为是false，它将其发送到您的浏览器。如果要返回数据，请记住将其分配给变量：</target>
        </trans-unit>
        <trans-unit id="746084183e6ae241a18e9165a5805b78b608f104" translate="yes" xml:space="preserve">
          <source>There is an optional second parameter that is a TRUE/FALSE value that specifics if the &lt;em&gt;src&lt;/em&gt; should have the page specified by &lt;code&gt;$config['index_page']&lt;/code&gt; added to the address it creates. Presumably, this would be if you were using a media controller:</source>
          <target state="translated">有一个可选的第二个参数，它是TRUE / FALSE值，它指定&lt;em&gt;src&lt;/em&gt;是否应将 &lt;code&gt;$config['index_page']&lt;/code&gt; 指定的页面添加到它创建的地址中。大概是使用媒体控制器的情况：</target>
        </trans-unit>
        <trans-unit id="d948c40ccba90a2fb879274eda05a848031a8622" translate="yes" xml:space="preserve">
          <source>There is an optional second parameter that is a true/false value that specifics if the &lt;em&gt;src&lt;/em&gt; should have the page specified by &lt;code&gt;$config['indexPage']&lt;/code&gt; added to the address it creates. Presumably, this would be if you were using a media controller:</source>
          <target state="translated">有一个可选的第二个参数，它是一个true / false值，它指定&lt;em&gt;src&lt;/em&gt;是否应将 &lt;code&gt;$config['indexPage']&lt;/code&gt; 指定的页面添加到它创建的地址中。大概是使用媒体控制器的情况：</target>
        </trans-unit>
        <trans-unit id="cb5da4013ef25b745ff56238d7647b097516e4c9" translate="yes" xml:space="preserve">
          <source>There is no need to &amp;ldquo;echo&amp;rdquo; or do something with the data returned by $this-&amp;gt;parser-&amp;gt;parse(). It is automatically passed to the output class to be sent to the browser. However, if you do want the data returned instead of sent to the output class you can pass TRUE (boolean) as the third parameter:</source>
          <target state="translated">无需&amp;ldquo;回显&amp;rdquo;或对$ this-&amp;gt; parser-&amp;gt; parse（）返回的数据进行任何处理。它会自动传递到输出类，以发送到浏览器。但是，如果您确实希望返回数据而不是将其发送到输出类，则可以将TRUE（布尔值）作为第三个参数传递：</target>
        </trans-unit>
        <trans-unit id="3d73f12ac915274552702605b3e836637243e821" translate="yes" xml:space="preserve">
          <source>There is not already an open Issue</source>
          <target state="translated">目前还没有一个公开的问题</target>
        </trans-unit>
        <trans-unit id="e240224c0e0e5260cad246098edaba05c40aa610" translate="yes" xml:space="preserve">
          <source>There is nothing to prevent you from using those abbreviations in your application!</source>
          <target state="translated">没有什么可以阻止你在你的应用程序中使用这些缩写!</target>
        </trans-unit>
        <trans-unit id="cbd030c24f719bed28d720abe6db7864c1dae364" translate="yes" xml:space="preserve">
          <source>There is one optional parameter that determines whether the parser should reduce more than two consecutive line breaks down to two. Pass boolean TRUE to enable reducing line breaks:</source>
          <target state="translated">有一个可选参数,决定解析器是否应该将两个以上的连续换行符缩减为两个。传递布尔值TRUE,启用减少换行符。</target>
        </trans-unit>
        <trans-unit id="f7df4ee8813099ef3c09a1a7ab76943eeb207539" translate="yes" xml:space="preserve">
          <source>There will be times when you absolutely need something to used and NOT escaped. You can do this by adding exclamation marks to the opening and closing braces:</source>
          <target state="translated">有的时候,你绝对需要使用一些东西,而不是逃避。你可以通过在开头和结尾的括号中加入感叹号来实现。</target>
        </trans-unit>
        <trans-unit id="19a88d67606a3eb9568a3f2deb7b1ff6596e618e" translate="yes" xml:space="preserve">
          <source>There will be times when you will have several variables with the same name. The system needs a way of knowing what the correct setting should be. This problem is solved by &amp;ldquo;&lt;em&gt;namespacing&lt;/em&gt;&amp;rdquo; the variables.</source>
          <target state="translated">有时候，您会有多个具有相同名称的变量。系统需要一种方法来知道正确的设置。这个问题可以通过&amp;ldquo;&lt;em&gt;命名&lt;/em&gt;&amp;rdquo;变量来解决。</target>
        </trans-unit>
        <trans-unit id="937e2e3ed4b2b83f4bcb357cc92be95d9b385c8d" translate="yes" xml:space="preserve">
          <source>There&amp;rsquo;s also the ability to change the driver, if for some reason you have both, but want to use MCrypt instead of OpenSSL:</source>
          <target state="translated">如果由于某种原因而同时拥有两者，但又想使用MCrypt而不是OpenSSL，则也可以更改驱动程序：</target>
        </trans-unit>
        <trans-unit id="8f2c1f939af667dc99dba7d6c871dfb576530049" translate="yes" xml:space="preserve">
          <source>These algorithms are old, proven to be flawed, and not designed for password hashing in the first place.</source>
          <target state="translated">这些算法都是旧的,被证明是有缺陷的,而且一开始就不是为密码散列设计的。</target>
        </trans-unit>
        <trans-unit id="3ecb28890a436a0f7819b94097acc7adaca55cb0" translate="yes" xml:space="preserve">
          <source>These are not composer-installable repositories.</source>
          <target state="translated">这些都不是作曲家可安装的资源库。</target>
        </trans-unit>
        <trans-unit id="71876e526866f0e596d162e249b087fdb38ad6a3" translate="yes" xml:space="preserve">
          <source>These are the regular expression rules that we use to validate the product ID - alpha-numeric, dashes, underscores, or periods by default</source>
          <target state="translated">这些是我们用来验证产品ID的正则表达式规则--默认情况下是字母-数字、破折号、下划线或句号。</target>
        </trans-unit>
        <trans-unit id="aa7a6e2b5361d36977e63c8e1e48ab58f085b06e" translate="yes" xml:space="preserve">
          <source>These are the regular expression rules that we use to validate the product ID and product name - alpha-numeric, dashes, underscores, colons or periods by default</source>
          <target state="translated">这些是我们用来验证产品ID和产品名称的正则表达式规则--默认为字母-数字、破折号、下划线、冒号或句号。</target>
        </trans-unit>
        <trans-unit id="58064285061976040c5a7e1018d152921d9670fc" translate="yes" xml:space="preserve">
          <source>These are two ways to provide custom error messages.</source>
          <target state="translated">这是两种提供自定义错误信息的方法。</target>
        </trans-unit>
        <trans-unit id="908a14a1aaa60bf87d00643f27a412b8a633ff96" translate="yes" xml:space="preserve">
          <source>These arrays allow you to specify callback methods that will be run on the data at the time specified in the property name.</source>
          <target state="translated">这些数组允许你指定回调方法,这些方法将在属性名中指定的时间对数据运行。</target>
        </trans-unit>
        <trans-unit id="224298923a1843833457f77d787e21adaad78795" translate="yes" xml:space="preserve">
          <source>These effects cause an element(s) to disappear or reappear over time.</source>
          <target state="translated">这些效应会导致一个或多个元素随着时间的推移而消失或重新出现。</target>
        </trans-unit>
        <trans-unit id="1bdf165bb9c4974426d883fa2fdb9114531b796d" translate="yes" xml:space="preserve">
          <source>These effects cause an element(s) to slide.</source>
          <target state="translated">这些效果会导致一个(些)元素滑动。</target>
        </trans-unit>
        <trans-unit id="00174d3ed3c2ab563906b87fd13481d2e5ef9d65" translate="yes" xml:space="preserve">
          <source>These functions let you fetch table information.</source>
          <target state="translated">这些功能可以让你获取表格信息。</target>
        </trans-unit>
        <trans-unit id="35251fd12dd965fa2c868f7d685c5728514c0ead" translate="yes" xml:space="preserve">
          <source>These methods only change the return type for the next find*() method call. After that, it is reset to its default value.</source>
          <target state="translated">这些方法只是在下一次调用find*()方法时改变返回类型。之后,它会被重置为默认值。</target>
        </trans-unit>
        <trans-unit id="4dd30b4dece0e0da9abef8d96180d21cdf3e5261" translate="yes" xml:space="preserve">
          <source>These methods return a URL for the previous and next pages in relation to the current page being displayed, unlike &lt;code&gt;getPrevious()&lt;/code&gt; and &lt;code&gt;getNext()&lt;/code&gt; that return the URL for the previous or next pages of results on either side of the numbered links. See the previous paragraph for a full explanation.</source>
          <target state="translated">这些方法返回相对于要显示的当前页面的上一页和下一页的URL，这与 &lt;code&gt;getPrevious()&lt;/code&gt; 和 &lt;code&gt;getNext()&lt;/code&gt; 分别在编号链接的任一侧返回结果的上一页或下一页的URL不同。有关完整说明，请参见上一段。</target>
        </trans-unit>
        <trans-unit id="281c69e51d883d85d1db68f194e683d0c7767438" translate="yes" xml:space="preserve">
          <source>These methods return a boolean true if there are more links that can be displayed on either side of the current page, based on the value passed to &lt;code&gt;setSurroundCount&lt;/code&gt;. For example, let&amp;rsquo;s say we have 20 pages of data. The current page is page 3. If the surrounding count is 2, then the following links would show up in the list: 1, 2, 3, 4, and 5. Since the first link displayed is page one, &lt;code&gt;hasPrevious()&lt;/code&gt; would return &lt;strong&gt;false&lt;/strong&gt; since there is no page zero. However, &lt;code&gt;hasNext()&lt;/code&gt; would return &lt;strong&gt;true&lt;/strong&gt; since there are 15 additional pages of results after page five.</source>
          <target state="translated">如果基于传递给 &lt;code&gt;setSurroundCount&lt;/code&gt; 的值在当前页面的任一侧上可以显示更多链接，则这些方法将返回boolean true 。例如，假设我们有20页数据。当前页面是页面3。如果周围的计数是2，则以下链接将显示在列表中：1、2、3、4和5。由于显示的第一个链接是页面1，将返回 &lt;code&gt;hasPrevious()&lt;/code&gt; 。因为没有页面零，所以返回&lt;strong&gt;false&lt;/strong&gt;。但是， &lt;code&gt;hasNext()&lt;/code&gt; 将返回&lt;strong&gt;true，&lt;/strong&gt;因为在第5页之后还有15个额外的结果页。</target>
        </trans-unit>
        <trans-unit id="4fcdb9a18774c41683d5a3692b950c027390a8a3" translate="yes" xml:space="preserve">
          <source>These methods return boolean TRUE upon success and FALSE for failure. If they fail you can retrieve the error message using this function:</source>
          <target state="translated">这些方法成功时返回布尔值TRUE,失败时返回FALSE。如果它们失败了,你可以使用这个函数检索错误信息。</target>
        </trans-unit>
        <trans-unit id="5de1859f00d8cacac456c17e61e2a1a66b7b9d28" translate="yes" xml:space="preserve">
          <source>These methods return the URL for the previous or next pages of results on either side of the numbered links. See the previous paragraph for a full explanation.</source>
          <target state="translated">这些方法返回编号链接两边的上一页或下一页结果的URL。完整的解释请看上一段。</target>
        </trans-unit>
        <trans-unit id="c08372270eaa7094c05a9480efa5c421e04296f2" translate="yes" xml:space="preserve">
          <source>These methods return the class instance so they can be chained together, as shown above. If they fail they will throw a &lt;code&gt;CodeIgniter\Images\ImageException&lt;/code&gt; that contains the error message. A good practice is to catch the exceptions, showing an error upon failure, like this:</source>
          <target state="translated">这些方法返回类实例，因此可以将它们链接在一起，如上所示。如果它们失败，则将抛出包含错误消息的 &lt;code&gt;CodeIgniter\Images\ImageException&lt;/code&gt; 。一个好的做法是捕获异常，并在失败时显示错误，如下所示：</target>
        </trans-unit>
        <trans-unit id="caf0735a92fabff95f661a2c84f250729ddb3d32" translate="yes" xml:space="preserve">
          <source>These rules can also be called as discrete methods. For example:</source>
          <target state="translated">这些规则也可以称为离散方法。例如:</target>
        </trans-unit>
        <trans-unit id="178c77d9ac502bfa4c4e5c41717c474162d5c87e" translate="yes" xml:space="preserve">
          <source>These specific rules might not work for all server configurations.</source>
          <target state="translated">这些特定的规则可能不适用于所有的服务器配置。</target>
        </trans-unit>
        <trans-unit id="1f95c5e9099f4efe624c429da3001198591e96d5" translate="yes" xml:space="preserve">
          <source>These validation rules enable you to do the basic checks you might need to verify that uploaded files meet your business needs. Since the value of a file upload HTML field doesn&amp;rsquo;t exist, and is stored in the $_FILES global, the name of the input field will need to be used twice. Once to specify the field name as you would for any other rule, but again as the first parameter of all file upload related rules:</source>
          <target state="translated">这些验证规则使您可以进行基本检查，以验证上传的文件满足您的业务需求。由于文件上载HTML字段的值不存在，并且存储在$ _FILES全局变量中，因此需要使用两次输入字段的名称。一次指定字段名称，就像指定其他任何规则一样，但再次指定为所有文件上传相关规则的第一个参数：</target>
        </trans-unit>
        <trans-unit id="063ba3b9bc217c4888661381c6128d2f4b5015ce" translate="yes" xml:space="preserve">
          <source>These variables are not actual PHP variables, but rather plain text representations that allow you to eliminate PHP from your templates (view files).</source>
          <target state="translated">这些变量不是真正的PHP变量,而是纯文本表示,允许你从你的模板中删除PHP(查看文件)。</target>
        </trans-unit>
        <trans-unit id="4824287dc5de8d9d0cbe56b2b0c030019a5bd3b3" translate="yes" xml:space="preserve">
          <source>These will be updated along with the framework whenever you do a &lt;code&gt;composer update&lt;/code&gt;.</source>
          <target state="translated">每当您进行 &lt;code&gt;composer update&lt;/code&gt; 时，这些内容都会与框架一起更新。</target>
        </trans-unit>
        <trans-unit id="f333babff833bfd9f3c2694967d31f2424c210ce" translate="yes" xml:space="preserve">
          <source>Third party libraries incorporated must be vetted</source>
          <target state="translated">必须对纳入的第三方图书馆进行审查</target>
        </trans-unit>
        <trans-unit id="faea92fd53bbcb4500652c888901547aa3e8a100" translate="yes" xml:space="preserve">
          <source>ThirdParty (bundled)</source>
          <target state="translated">第三方(捆绑式)</target>
        </trans-unit>
        <trans-unit id="08635f7bec913f53046ff97dc7c3efda34d33b66" translate="yes" xml:space="preserve">
          <source>This PSR provides a method for organizing file and namespaces to allow for a standard method of autoloading classes. Our &lt;a href=&quot;../concepts/autoloader&quot;&gt;Autoloader&lt;/a&gt; meets the PSR-4 recommendations.</source>
          <target state="translated">此PSR提供了一种用于组织文件和名称空间的方法，以允许使用自动加载类的标准方法。我们的&lt;a href=&quot;../concepts/autoloader&quot;&gt;自动装带器&lt;/a&gt;符合PSR-4建议。</target>
        </trans-unit>
        <trans-unit id="28cb9e9d5427d741d56b9ea659179b86a09715fd" translate="yes" xml:space="preserve">
          <source>This PSR standardizes a way of representing the HTTP interactions. While many of the concepts became part of our HTTP layer, CodeIgniter does not strive for compatibility with this recommendation.</source>
          <target state="translated">这个PSR规范了一种表示HTTP交互的方式。虽然许多概念成为了我们HTTP层的一部分,但CodeIgniter并不力求与这个建议兼容。</target>
        </trans-unit>
        <trans-unit id="63c894cf51aa174d956f38f8cf1efa757438590b" translate="yes" xml:space="preserve">
          <source>This PSR was fairly controversial when it first came out. CodeIgniter meets many of the recommendations within, but does not, and will not, meet all of them.</source>
          <target state="translated">这个PSR刚出来的时候相当有争议。CodeIgniter满足了其中的许多建议,但没有也不会满足所有的建议。</target>
        </trans-unit>
        <trans-unit id="6776eebda3209f4bc0203068384ae3a7c073a995" translate="yes" xml:space="preserve">
          <source>This allows you access to the response object that was generated, if any:</source>
          <target state="translated">这允许你访问生成的响应对象(如果有的话)。</target>
        </trans-unit>
        <trans-unit id="7d3f91c9976910ab7b22cfac9c0f3d081e8d021f" translate="yes" xml:space="preserve">
          <source>This also impacts escaping parameter values for different contexts inside your script. You will have to give each escaped value a unique parameter name.</source>
          <target state="translated">这也会影响到脚本中不同上下文的参数值的转义。你必须给每个转义的值一个唯一的参数名。</target>
        </trans-unit>
        <trans-unit id="0fa25e2c7d9a7dc2a4767ef8cebeff29e629ca3f" translate="yes" xml:space="preserve">
          <source>This are handled through the &lt;code&gt;Cache-Control&lt;/code&gt; and &lt;code&gt;ETag&lt;/code&gt; headers. This guide is not the proper place for a thorough introduction to all of the cache headers power, but you can get a good understanding over at &lt;a href=&quot;https://developers.google.com/web/fundamentals/performance/optimizing-content-efficiency/http-caching&quot;&gt;Google Developers&lt;/a&gt;.</source>
          <target state="translated">这是通过 &lt;code&gt;Cache-Control&lt;/code&gt; 和 &lt;code&gt;ETag&lt;/code&gt; 标头处理的。本指南不是全面介绍所有缓存标头功能的适当位置，但是您可以通过&lt;a href=&quot;https://developers.google.com/web/fundamentals/performance/optimizing-content-efficiency/http-caching&quot;&gt;Google Developers&lt;/a&gt;很好地了解。</target>
        </trans-unit>
        <trans-unit id="524da95f7e8a1aa0dda42cff93284f9056fbb929" translate="yes" xml:space="preserve">
          <source>This array should be updated with the field names that can be set during save, insert, or update methods. Any field names other than these will be discarded. This helps to protect against just taking input from a form and throwing it all at the model, resulting in potential mass assignment vulnerabilities.</source>
          <target state="translated">这个数组应该用可以在保存、插入或更新方法中设置的字段名进行更新。除此以外的任何字段名都将被丢弃。这有助于防止仅仅从表单中获取输入并将其全部扔到模型中,从而导致潜在的大规模赋值漏洞。</target>
        </trans-unit>
        <trans-unit id="d398f16fd2a9b4630da7d948a19072749120596e" translate="yes" xml:space="preserve">
          <source>This assertion simply uses the &lt;strong&gt;isOK()&lt;/strong&gt; method to test a response.</source>
          <target state="translated">该断言仅使用&lt;strong&gt;isOK（）&lt;/strong&gt;方法来测试响应。</target>
        </trans-unit>
        <trans-unit id="85cb998077ce7ed5b57f92def42cd3d5a025d1ea" translate="yes" xml:space="preserve">
          <source>This automatically loads the &lt;code&gt;Config\Validation&lt;/code&gt; file which contains settings for including multiple Rulesets, and collections of rules that can be easily reused.</source>
          <target state="translated">这将自动加载 &lt;code&gt;Config\Validation&lt;/code&gt; 文件，该文件包含用于包含多个规则集的设置以及可以轻松重用的规则集合。</target>
        </trans-unit>
        <trans-unit id="a20c05aad6100d4192a76f261a64627619d7be40" translate="yes" xml:space="preserve">
          <source>This block is animated in place for a very nice effect.</source>
          <target state="translated">这个区块的动画到位,效果非常好。</target>
        </trans-unit>
        <trans-unit id="37eb54dcef71740e96e38ca343c7ae9626aefe09" translate="yes" xml:space="preserve">
          <source>This boolean value determines whether the current date is automatically added to all inserts and updates. If true, will set the current time in the format specified by $dateFormat. This requires that the table have columns named &amp;lsquo;created_at&amp;rsquo; and &amp;lsquo;updated_at&amp;rsquo; in the appropriate data type.</source>
          <target state="translated">此布尔值确定是否将当前日期自动添加到所有插入和更新中。如果为true，将以$ dateFormat指定的格式设置当前时间。这要求表在适当的数据类型中具有名为&amp;ldquo; created_at&amp;rdquo;和&amp;ldquo; updated_at&amp;rdquo;的列。</target>
        </trans-unit>
        <trans-unit id="727e132a18a59c2ef82021cd9772a1488e47300b" translate="yes" xml:space="preserve">
          <source>This boolean value determines whether the database is completely refreshed before every test. If true, all migrations are rolled back to version 0. The database is always migrated to the latest available state as defined by &lt;code&gt;$namespace&lt;/code&gt;.</source>
          <target state="translated">此布尔值确定在每次测试之前是否完全刷新数据库。如果为true，则所有迁移都回滚到版本0。数据库始终迁移到 &lt;code&gt;$namespace&lt;/code&gt; 定义的最新可用状态。</target>
        </trans-unit>
        <trans-unit id="804108ebe6ecd77f120e6016b555d4f6ad2bef43" translate="yes" xml:space="preserve">
          <source>This builder is already set up with the model&amp;rsquo;s $table.</source>
          <target state="translated">该构建器已使用模型的$ table设置。</target>
        </trans-unit>
        <trans-unit id="034866b66ab82477a9cfcc54754f9833c30c8b3f" translate="yes" xml:space="preserve">
          <source>This can also be accessed through the &lt;a href=&quot;cli_library&quot;&gt;CLI&lt;/a&gt; library, but this already has your command removed from the string. These parameters can be used to customize how your scripts behave.</source>
          <target state="translated">也可以通过&lt;a href=&quot;cli_library&quot;&gt;CLI&lt;/a&gt;库进行访问，但是已经从字符串中删除了您的命令。这些参数可用于自定义脚本的行为。</target>
        </trans-unit>
        <trans-unit id="96673ed9b35c8fb73fa02c45dd31e480ae22184f" translate="yes" xml:space="preserve">
          <source>This can also be used to create more dynamic rules at runtime, as long as you take care that any dynamic keys passed in don&amp;rsquo;t conflict with your form data.</source>
          <target state="translated">只要您确保传入的任何动态键都不会与表单数据冲突，这也可以用于在运行时创建更多动态规则。</target>
        </trans-unit>
        <trans-unit id="34cb415c8e996708a7bb00d65bc16365ef49dd27" translate="yes" xml:space="preserve">
          <source>This can be beneficial when developing API&amp;rsquo;s with the first URI segment being the version number. It can also be used when the first parameter is a language string:</source>
          <target state="translated">在开发以第一个URI段为版本号的API时，这可能是有益的。当第一个参数是语言字符串时，也可以使用它：</target>
        </trans-unit>
        <trans-unit id="4b1546fe90a4bcfd3869fa14931e9ccf408a61e0" translate="yes" xml:space="preserve">
          <source>This can be easily done with the &lt;code&gt;prepare()&lt;/code&gt; method. This takes a single parameter, which is a Closure that returns a query object. Query objects are automatically generated by any of the &amp;ldquo;final&amp;rdquo; type queries, including &lt;strong&gt;insert&lt;/strong&gt;, &lt;strong&gt;update&lt;/strong&gt;, &lt;strong&gt;delete&lt;/strong&gt;, &lt;strong&gt;replace&lt;/strong&gt;, and &lt;strong&gt;get&lt;/strong&gt;. This is handled the easiest by using the Query Builder to run a query. The query is not actually run, and the values don&amp;rsquo;t matter since they&amp;rsquo;re never applied, acting instead as placeholders. This returns a PreparedQuery object:</source>
          <target state="translated">这可以通过 &lt;code&gt;prepare()&lt;/code&gt; 方法轻松完成。这需要一个参数，该参数是一个Closure，它返回查询对象。查询对象由任何&amp;ldquo;最终&amp;rdquo;类型查询（包括&lt;strong&gt;insert&lt;/strong&gt;，&lt;strong&gt;update&lt;/strong&gt;，&lt;strong&gt;delete&lt;/strong&gt;，&lt;strong&gt;replace&lt;/strong&gt;和&lt;strong&gt;get）&lt;/strong&gt;自动生成。使用查询生成器运行查询可以最轻松地进行处理。该查询实际上并未运行，并且这些值无关紧要，因为它们从未应用过，而是充当占位符。这将返回PreparedQuery对象：</target>
        </trans-unit>
        <trans-unit id="9a2154bf1fc22684d14c6e6e1460e64d4f6ef196" translate="yes" xml:space="preserve">
          <source>This can be handy for handling the error yourself, or for performing cleanup before the script ends. If you want the error handler to function as normal, you can throw a new exception within the catch block:</source>
          <target state="translated">这可以方便你自己处理错误,或者在脚本结束前进行清理。如果你想让错误处理程序正常运行,你可以在 catch 块中抛出一个新的异常。</target>
        </trans-unit>
        <trans-unit id="55534d1d1010737507b41958a9166ca693bc5738" translate="yes" xml:space="preserve">
          <source>This can be useful if you need to display a date in a form field for submission.</source>
          <target state="translated">如果您需要在表格字段中显示一个日期以便提交,这可能会很有用。</target>
        </trans-unit>
        <trans-unit id="3892f216dce995652ed6cb4f69969fcdacef5534" translate="yes" xml:space="preserve">
          <source>This can be very useful, especially for one-time informational, error or status messages (for example: &amp;ldquo;Record 2 deleted&amp;rdquo;).</source>
          <target state="translated">这可能非常有用，特别是对于一次性的信息，错误或状态消息（例如：&amp;ldquo;已删除记录2&amp;rdquo;）。</target>
        </trans-unit>
        <trans-unit id="aee16350210e7e42f8a1779bdd0c61af00df12ff" translate="yes" xml:space="preserve">
          <source>This class does NOT need to be initialized. It is loaded automatically by the &lt;a href=&quot;../libraries/output&quot;&gt;Output Library&lt;/a&gt; if profiling is enabled as shown below.</source>
          <target state="translated">此类无需初始化。如果启用了性能分析，则&lt;a href=&quot;../libraries/output&quot;&gt;输出库会&lt;/a&gt;自动加载它，如下所示。</target>
        </trans-unit>
        <trans-unit id="2c04ca7faf60e32469147776e1fed4a3353b16bf" translate="yes" xml:space="preserve">
          <source>This class does not need to be loaded on it&amp;rsquo;s own. Instead, it can be accessed through this request&amp;rsquo;s &lt;code&gt;IncomingRequest&lt;/code&gt; instance. While you cannot access it directly this way, you can easily access all of methods through the &lt;code&gt;negotiate()&lt;/code&gt; method:</source>
          <target state="translated">此类无需自己加载。而是可以通过此请求的 &lt;code&gt;IncomingRequest&lt;/code&gt; 实例对其进行访问。虽然您不能以这种方式直接访问它，但是您可以轻松地通过 &lt;code&gt;negotiate()&lt;/code&gt; 方法访问所有方法：</target>
        </trans-unit>
        <trans-unit id="5a71733e6bc77602d6faa0d1a8ddeb713ed35f94" translate="yes" xml:space="preserve">
          <source>This class is initialized automatically by the database driver when caching is enabled. Do NOT load this class manually.</source>
          <target state="translated">当启用缓存时,该类由数据库驱动程序自动初始化。不要手动加载这个类。</target>
        </trans-unit>
        <trans-unit id="b6235ea2d8cb97ef9b65f064e1d65d0678d86b83" translate="yes" xml:space="preserve">
          <source>This class is initialized automatically by the system so there is no need to do it manually.</source>
          <target state="translated">这个类是由系统自动初始化的,所以不需要手动操作。</target>
        </trans-unit>
        <trans-unit id="5a773a84aa6aa1f6e1798aff216afa8144baa206" translate="yes" xml:space="preserve">
          <source>This class is modeled after the &lt;a href=&quot;http://docs.guzzlephp.org/en/latest/&quot;&gt;Guzzle HTTP Client&lt;/a&gt; library since it is one of the more widely used libraries. Where possible, the syntax has been kept the same so that if your application needs something a little more powerful than what this library provides, you will have to change very little to move over to use Guzzle.</source>
          <target state="translated">此类是根据&lt;a href=&quot;http://docs.guzzlephp.org/en/latest/&quot;&gt;Guzzle HTTP Client&lt;/a&gt;库建模的，因为它是使用更广泛的库之一。在可能的情况下，语法保持不变，因此，如果您的应用程序需要比该库提供的功能更强大的功能，则只需进行很少的更改即可使用Guzzle。</target>
        </trans-unit>
        <trans-unit id="08bb891914dbd259388623b1c7e17177474fa143" translate="yes" xml:space="preserve">
          <source>This class is the parent class that both the &lt;a href=&quot;request&quot;&gt;Request Class&lt;/a&gt; and the &lt;a href=&quot;../outgoing/response&quot;&gt;Response Class&lt;/a&gt; extend from. As such, some methods, such as the content negotiation methods, may apply only to a request or response, and not the other one, but they have been included here to keep the header methods together.</source>
          <target state="translated">此类是&lt;a href=&quot;request&quot;&gt;Request类&lt;/a&gt;和&lt;a href=&quot;../outgoing/response&quot;&gt;Response类都&lt;/a&gt;从其扩展的父类。这样，某些方法（例如内容协商方法）可能仅适用于请求或响应，而不适用于其他请求或响应，但是此处将它们包括在内以将标头方法保持在一起。</target>
        </trans-unit>
        <trans-unit id="71b0e21151d777af9d206cc839cbf496e1bbb73c" translate="yes" xml:space="preserve">
          <source>This class provides a solid base from which to build your own models, allowing you to rapidly build out your application&amp;rsquo;s model layer.</source>
          <target state="translated">此类为构建自己的模型提供了坚实的基础，使您可以快速构建应用程序的模型层。</target>
        </trans-unit>
        <trans-unit id="67734896d912f2b8965aeb6ae5590ebed9a8d513" translate="yes" xml:space="preserve">
          <source>This class requires the &lt;a href=&quot;https://www.php.net/manual/en/book.curl.php&quot;&gt;cURL Library&lt;/a&gt; to be installed in your version of PHP. This is a very common library that is typically available but not all hosts will provide it, so please check with your host to verify if you run into problems.</source>
          <target state="translated">此类要求在您的PHP版本中安装&lt;a href=&quot;https://www.php.net/manual/en/book.curl.php&quot;&gt;cURL库&lt;/a&gt;。这是一个非常常见的库，通常可以使用，但并非所有主机都可以提供，因此请与您的主机联系以确认是否遇到问题。</target>
        </trans-unit>
        <trans-unit id="be20a80bf17696b848db6b783188be73a46759a6" translate="yes" xml:space="preserve">
          <source>This code looks similar to the controller code that was used earlier. It creates a new model by extending &lt;code&gt;CI_Model&lt;/code&gt; and loads the database library. This will make the database class available through the &lt;code&gt;$this-&amp;gt;db&lt;/code&gt; object.</source>
          <target state="translated">该代码看起来与之前使用的控制器代码相似。它通过扩展 &lt;code&gt;CI_Model&lt;/code&gt; 来创建新模型并加载数据库库。这将使数据库类可通过 &lt;code&gt;$this-&amp;gt;db&lt;/code&gt; 对象使用。</target>
        </trans-unit>
        <trans-unit id="09fa82f65472c7053324c6560affb51a85213d60" translate="yes" xml:space="preserve">
          <source>This code looks similar to the controller code that was used earlier. It creates a new model by extending &lt;code&gt;CodeIgniter\Model&lt;/code&gt; and loads the database library. This will make the database class available through the &lt;code&gt;$this-&amp;gt;db&lt;/code&gt; object.</source>
          <target state="translated">该代码看起来与之前使用的控制器代码相似。它通过扩展 &lt;code&gt;CodeIgniter\Model&lt;/code&gt; 创建新模型，并加载数据库库。这将通过 &lt;code&gt;$this-&amp;gt;db&lt;/code&gt; 对象使数据库类可用。</target>
        </trans-unit>
        <trans-unit id="9de017ee31206b49707ca594df240d6ecd2f06d8" translate="yes" xml:space="preserve">
          <source>This command will take a string, start printing it on the current line, and wrap it to a set length on new lines. This might be useful when displaying a list of options with descriptions that you want to wrap in the current window and not go off screen:</source>
          <target state="translated">这个命令将接收一个字符串,在当前行开始打印,并在新的行上将其包装成一个设定的长度。当显示一个带有描述的选项列表时,这可能会很有用,因为你想把这些选项包在当前窗口中,而不是离开屏幕。</target>
        </trans-unit>
        <trans-unit id="23f7fe9ff13596e7f3d3f6ae32c45622a17f3047" translate="yes" xml:space="preserve">
          <source>This command will take the &lt;strong&gt;sessionSavePath&lt;/strong&gt; and &lt;strong&gt;sessionMatchIP&lt;/strong&gt; settings into account when it generates the code.</source>
          <target state="translated">该命令在生成代码时将考虑&lt;strong&gt;sessionSavePath&lt;/strong&gt;和&lt;strong&gt;sessionMatchIP&lt;/strong&gt;设置。</target>
        </trans-unit>
        <trans-unit id="bd8ce5002ffc10ff65dceb7891840fc368226410" translate="yes" xml:space="preserve">
          <source>This compatibility layer contains backports for the &lt;code&gt;hash_equals()&lt;/code&gt; and &lt;code&gt;hash_pbkdf2()&lt;/code&gt; functions, which otherwise require PHP 5.6 and/or PHP 5.5 respectively.</source>
          <target state="translated">此兼容性层包含 &lt;code&gt;hash_equals()&lt;/code&gt; 和 &lt;code&gt;hash_pbkdf2()&lt;/code&gt; 函数的反向端口，否则它们分别需要PHP 5.6和/或PHP 5.5。</target>
        </trans-unit>
        <trans-unit id="fd8c93914ac6b1ca4fa1f0c472b5dc7efe0b8106" translate="yes" xml:space="preserve">
          <source>This configuration enables URLs without &amp;ldquo;index.php&amp;rdquo; in them and using CodeIgniter&amp;rsquo;s &amp;ldquo;404 - File Not Found&amp;rdquo; for URLs ending with &amp;ldquo;.php&amp;rdquo;.</source>
          <target state="translated">此配置启用其中不包含&amp;ldquo; index.php&amp;rdquo;的URL，并对以&amp;ldquo; .php&amp;rdquo;结尾的URL使用CodeIgniter的&amp;ldquo; 404-未找到文件&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="2b942b04cfb21ce20712a7a8f81689b97db9162e" translate="yes" xml:space="preserve">
          <source>This could be as simple as:</source>
          <target state="translated">这可以是简单的,因为。</target>
        </trans-unit>
        <trans-unit id="34fffd999eab7895813700a6185a686bac6727e4" translate="yes" xml:space="preserve">
          <source>This could be used to differentiate messages by status, or create &amp;lsquo;headers&amp;rsquo; by using a different color. You can even set background colors by passing the color name in as the third parameter:</source>
          <target state="translated">这可用于按状态区分消息，或使用其他颜色创建&amp;ldquo;标题&amp;rdquo;。您甚至可以通过将颜色名称作为第三个参数传递来设置背景色：</target>
        </trans-unit>
        <trans-unit id="18d420293cf5bfd32aba54526d0303bf19fb1722" translate="yes" xml:space="preserve">
          <source>This creates a new folder, ci-news, which contains your application code, with CodeIgniter installed in the vendor folder.</source>
          <target state="translated">这将创建一个新的文件夹,ci-news,其中包含你的应用程序代码,并在供应商文件夹中安装CodeIgniter。</target>
        </trans-unit>
        <trans-unit id="e0dea9f08a0e390393f705706672f19bca2fc8ae" translate="yes" xml:space="preserve">
          <source>This defines the format to be used when formatting arrays in responses. If you provide a &lt;code&gt;null&lt;/code&gt; value for &lt;code&gt;$format&lt;/code&gt;, it will be automatically determined through content negotiation.</source>
          <target state="translated">这定义了格式化响应中的数组时要使用的格式。如果为 &lt;code&gt;$format&lt;/code&gt; 提供 &lt;code&gt;null&lt;/code&gt; 值，它将通过内容协商自动确定。</target>
        </trans-unit>
        <trans-unit id="954bfec53177a0f60f21a9446c995406893b3595" translate="yes" xml:space="preserve">
          <source>This dependency is optional and these functions will always be declared. If iconv is not available, they WILL fall-back to their non-mbstring versions.</source>
          <target state="translated">这个依赖关系是可选的,这些函数将始终被声明。如果iconv不可用,它们将回退到非mbstring版本。</target>
        </trans-unit>
        <trans-unit id="ae0050c31e5146d7e79e7cbd057cdf86e28d1ece" translate="yes" xml:space="preserve">
          <source>This directive says that any incoming request without any content specified should be handled by the &lt;code&gt;index()&lt;/code&gt; method inside the &lt;code&gt;Home&lt;/code&gt; controller.</source>
          <target state="translated">该指令说，任何未指定任何内容的传入请求都应由 &lt;code&gt;Home&lt;/code&gt; 控制器中的 &lt;code&gt;index()&lt;/code&gt; 方法处理。</target>
        </trans-unit>
        <trans-unit id="a676df192e2a9c967c1766fa6b7657fb3af0e16a" translate="yes" xml:space="preserve">
          <source>This directory holds any directories that might need to be written to in the course of an application&amp;rsquo;s life. This includes directories for storing cache files, logs, and any uploads a user might send. You should add any other directories that your application will need to write to here. This allows you to keep your other primary directories non-writable as an added security measure.</source>
          <target state="translated">该目录包含在应用程序生命周期内可能需要写入的所有目录。这包括用于存储缓存文件，日志以及用户可能发送的任何上载的目录。您应该在此处添加应用程序需要写入的所有其他目录。这使您可以将其他主目录保持不可写状态，以增加安全性。</target>
        </trans-unit>
        <trans-unit id="0d28a333f83e9ff03fdb5c54716f4c69aac4adc4" translate="yes" xml:space="preserve">
          <source>This directory is set up to hold your test files. The &lt;code&gt;_support&lt;/code&gt; directory holds various mock classes and other utilities that you can use while writing your tests. This directory does not need to be transferred to your production servers.</source>
          <target state="translated">设置此目录以保存您的测试文件。该 &lt;code&gt;_support&lt;/code&gt; 目录包含各种模拟类和在写你的测试，你可以使用其他工具。该目录不需要传输到生产服务器。</target>
        </trans-unit>
        <trans-unit id="9667d16125da6adb4305d74895c146b16a9ac484" translate="yes" xml:space="preserve">
          <source>This directory stores the files that make up the framework, itself. While you have a lot of flexibility in how you use the application directory, the files in the system directory should never be modified. Instead, you should extend the classes, or create new classes, to provide the desired functionality.</source>
          <target state="translated">这个目录存储了构成框架的文件,本身。虽然你在如何使用应用程序目录方面有很大的灵活性,但系统目录中的文件永远不应该被修改。相反,你应该扩展类,或创建新的类,以提供所需的功能。</target>
        </trans-unit>
        <trans-unit id="fc7b1ffe1539020a48f4f9b77402d33bab6b04c1" translate="yes" xml:space="preserve">
          <source>This empty class provides convenient access to the database connection, the Query Builder, and a number of additional convenience methods.</source>
          <target state="translated">这个空类提供了对数据库连接、查询生成器和一些额外的方便方法的便捷访问。</target>
        </trans-unit>
        <trans-unit id="4c7b1bd28097910dff18cf16bb81c0b627a5bb65" translate="yes" xml:space="preserve">
          <source>This ensures that only the id, title and content fields are sent to be updated.</source>
          <target state="translated">这确保了只有id、title和内容字段会被发送更新。</target>
        </trans-unit>
        <trans-unit id="a20cf4589eaf1aa6c43a67f4ee26640574c60177" translate="yes" xml:space="preserve">
          <source>This event is triggered whenever a new query has been run, whether successful or not. The only parameter is a &lt;a href=&quot;queries&quot;&gt;Query&lt;/a&gt; instance of the current query. You could use this to display all queries in STDOUT, or logging to a file, or even creating tools to do automatic query analysis to help you spot potentially missing indexes, slow queries, etc. An example usage might be:</source>
          <target state="translated">每当运行新查询（无论是否成功）时，都会触发此事件。唯一的参数是当前查询的&lt;a href=&quot;queries&quot;&gt;查询&lt;/a&gt;实例。您可以使用它在STDOUT中显示所有查询，或记录到文件，甚至创建工具进行自动查询分析，以帮助您发现可能丢失的索引，查询速度慢等。示例用法可能是：</target>
        </trans-unit>
        <trans-unit id="16b9bfd4d51d1a27739b8022fc9451395b581164" translate="yes" xml:space="preserve">
          <source>This example demonstrates how to compress a file, save it to a folder on your server, and download it to your desktop.</source>
          <target state="translated">这个例子演示了如何压缩文件,将其保存到服务器上的文件夹,并下载到桌面。</target>
        </trans-unit>
        <trans-unit id="80a18390cb50eb14095fea780e7cb508569a12b2" translate="yes" xml:space="preserve">
          <source>This example gives different results, depending on cascading:</source>
          <target state="translated">这个例子根据级联的不同,给出了不同的结果。</target>
        </trans-unit>
        <trans-unit id="36d317b485aa9fc49051f9839ccc7c032696285b" translate="yes" xml:space="preserve">
          <source>This example shows a plugin named &lt;strong&gt;foo&lt;/strong&gt;. It can manipulate any of the content between its opening and closing tags. In this example, it could work with the text &amp;rdquo; inner content &amp;ldquo;. Plugins are processed before any pseudo-variable replacements happen.</source>
          <target state="translated">此示例显示了一个名为&lt;strong&gt;foo&lt;/strong&gt;的插件。它可以在其开始标记和结束标记之间操纵任何内容。在此示例中，它可以使用文本&amp;ldquo;内部内容&amp;rdquo;。在进行任何伪变量替换之前，将处理插件。</target>
        </trans-unit>
        <trans-unit id="d7e9e39021f2f329eec2ea02155eff926fb7cb27" translate="yes" xml:space="preserve">
          <source>This example will migrate Blog namespace with any new migrations on the test database group:</source>
          <target state="translated">这个例子将迁移Blog命名空间和测试数据库组上的任何新迁移。</target>
        </trans-unit>
        <trans-unit id="91eecca036b3e4c0e003d1f2c98e09d2c9532420" translate="yes" xml:space="preserve">
          <source>This example would only allow the specified hosts to work if the domain exactly matched &amp;ldquo;accounts.example.com&amp;rdquo;. It would not work under the main site at &amp;ldquo;example.com&amp;rdquo;.</source>
          <target state="translated">此示例仅在域与&amp;ldquo; accounts.example.com&amp;rdquo;完全匹配时才允许指定的主机工作。在主网站&amp;ldquo; example.com&amp;rdquo;下无法正常运行。</target>
        </trans-unit>
        <trans-unit id="d516da3579c66c52e838f68d61c231d7943cc613" translate="yes" xml:space="preserve">
          <source>This example would take the same image and first fix any mobile phone orientation issues, rotate the image by 90 degress, and then crop the result into a 100x100 pixel image, starting at the top left corner. The result would be saved as the thumbnail.</source>
          <target state="translated">这个例子将采用相同的图像,首先修复任何手机方向的问题,将图像旋转90度,然后将结果裁剪成100x100像素的图像,从左上角开始。结果将被保存为缩略图。</target>
        </trans-unit>
        <trans-unit id="980c908ff521dc8a6500fb5b12c55eebfd4b59ed" translate="yes" xml:space="preserve">
          <source>This example would write a single line to the window, with &lt;code&gt;fileA&lt;/code&gt; in yellow, followed by a tab, and then &lt;code&gt;/path/to/file&lt;/code&gt; in white text.</source>
          <target state="translated">本示例将在窗口中写一行，黄色的 &lt;code&gt;fileA&lt;/code&gt; ，后跟一个制表符，然后是 &lt;code&gt;/path/to/file&lt;/code&gt; ，白色文本。</target>
        </trans-unit>
        <trans-unit id="85f4b65b6e95577879b72fe9a6c9417d47419ab0" translate="yes" xml:space="preserve">
          <source>This exception is a special case allowing for overriding of all other response routing and forcing a redirect to a specific route or URL:</source>
          <target state="translated">这种例外是一种特殊情况,允许覆盖所有其他的响应路由,并强制重定向到一个特定的路由或URL。</target>
        </trans-unit>
        <trans-unit id="5a9791f097a80631703ba813e5f28bee35529889" translate="yes" xml:space="preserve">
          <source>This exception is thrown for database errors, such as when the database connection cannot be created, or when it is temporarily lost:</source>
          <target state="translated">当数据库错误时,如数据库连接无法创建,或数据库连接暂时丢失时,会抛出该异常。</target>
        </trans-unit>
        <trans-unit id="b068f5845eba00d4e1fedf15e64ec3a98b34aa84" translate="yes" xml:space="preserve">
          <source>This exception should be used when the values from the configuration class are invalid, or when the config class is not the right type, etc:</source>
          <target state="translated">当配置类的值无效,或者配置类的类型不对等情况下,应该使用这个异常。</target>
        </trans-unit>
        <trans-unit id="960d87303252ea43081bf787f7b5895dac070bdf" translate="yes" xml:space="preserve">
          <source>This feature has been deprecated from the language library and moved to the &lt;a href=&quot;../helpers/language_helper#lang&quot;&gt;&lt;code&gt;lang()&lt;/code&gt;&lt;/a&gt; function of the &lt;a href=&quot;../helpers/language_helper&quot;&gt;Language Helper&lt;/a&gt;.</source>
          <target state="translated">该功能已从语言库中弃用，并移至&lt;a href=&quot;../helpers/language_helper&quot;&gt;语言帮助器&lt;/a&gt;的&lt;a href=&quot;../helpers/language_helper#lang&quot;&gt; &lt;code&gt;lang()&lt;/code&gt; &lt;/a&gt;函数。</target>
        </trans-unit>
        <trans-unit id="c0f79c293364f9808329dd49ed37881cfaaf399d" translate="yes" xml:space="preserve">
          <source>This feature is only available for MySQL and Interbase/Firebird databases.</source>
          <target state="translated">此功能仅适用于MySQL和Interbase/Firebird数据库。</target>
        </trans-unit>
        <trans-unit id="c1b24eb7c23fd71655282908c3cca602a9445f84" translate="yes" xml:space="preserve">
          <source>This file contains server-specific settings. This means you never will need to commit any sensitive information to your version control system. It includes some of the most common ones you want to enter already, though they are all commented out. So uncomment the line with CI_ENVIRONMENT on it, and change &lt;code&gt;production&lt;/code&gt; to &lt;code&gt;development&lt;/code&gt;:</source>
          <target state="translated">该文件包含特定于服务器的设置。这意味着您无需将任何敏感信息提交到版本控制系统。它包括一些您已经想要输入的最常见的输入，尽管它们都已被注释掉。因此，取消注释与CI_ENVIRONMENT对应的行，然后将 &lt;code&gt;production&lt;/code&gt; 更改为 &lt;code&gt;development&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="e8a0a976facf86105523f7c1be1f594bbe8d5296" translate="yes" xml:space="preserve">
          <source>This folder is meant to be the &amp;ldquo;web root&amp;rdquo; of your site, and your web server would be configured to point to it.</source>
          <target state="translated">该文件夹是您网站的&amp;ldquo; Web根目录&amp;rdquo;，并且您的Web服务器将配置为指向该文件夹。</target>
        </trans-unit>
        <trans-unit id="ae3bd527553322d4ee7175e8b312b353cfea3140" translate="yes" xml:space="preserve">
          <source>This forces a single file to migrate regardless of order or batches. Method &amp;ldquo;up&amp;rdquo; or &amp;ldquo;down&amp;rdquo; is detected based on whether it has already been migrated. &lt;strong&gt;Note&lt;/strong&gt;: This method is recommended only for testing and could cause data consistency issues.</source>
          <target state="translated">这将强制迁移单个文件，而不考虑其顺序或批次。根据是否已迁移方法来检测方法&amp;ldquo;向上&amp;rdquo;或&amp;ldquo;向下&amp;rdquo;。&lt;strong&gt;注意&lt;/strong&gt;：仅建议将这种方法用于测试，并且可能导致数据一致性问题。</target>
        </trans-unit>
        <trans-unit id="f9e9fb8d28d16d2667a1ca22cfb02f7413987d18" translate="yes" xml:space="preserve">
          <source>This form is converted into a PUT request and is a true PUT request as far as the routing and the IncomingRequest class are concerned.</source>
          <target state="translated">这种形式转换为PUT请求,就路由和IncomingRequest类而言,是真正的PUT请求。</target>
        </trans-unit>
        <trans-unit id="725d1029ffe9ce7ec5be1297e5511abc6a9c48cd" translate="yes" xml:space="preserve">
          <source>This function acquires an exclusive lock on the file while writing to it.</source>
          <target state="translated">该函数在向文件写入时获得文件的专属锁。</target>
        </trans-unit>
        <trans-unit id="cac28d605a40408860abda66d7f9a382add1b6fc" translate="yes" xml:space="preserve">
          <source>This function acts as an alias for PHP&amp;rsquo;s native &lt;code&gt;htmlspecialchars()&lt;/code&gt; function, with the advantage of being able to accept an array of strings.</source>
          <target state="translated">该函数充当PHP本机 &lt;code&gt;htmlspecialchars()&lt;/code&gt; 函数的别名，其优点是能够接受字符串数组。</target>
        </trans-unit>
        <trans-unit id="b1469356fa89de96548b762d1694cecfcd6777bb" translate="yes" xml:space="preserve">
          <source>This function can be called to stop caching.</source>
          <target state="translated">这个函数可以被调用来停止缓存。</target>
        </trans-unit>
        <trans-unit id="1dfaf1dfb4bec9da6f999dadd63b608ce8556dbe" translate="yes" xml:space="preserve">
          <source>This function can only be used in your view files. The consumption will reflect the total memory used by the entire app.</source>
          <target state="translated">这个功能只能在你的视图文件中使用。消耗量将反映整个应用程序使用的总内存。</target>
        </trans-unit>
        <trans-unit id="5e734ebe11da824e7d5cc62fcc84fdf55eecfa44" translate="yes" xml:space="preserve">
          <source>This function can take a number poorly-formed date formats and convert them into something useful. It also accepts well-formed dates.</source>
          <target state="translated">这个函数可以接受一些格式不佳的日期格式,并将它们转换为有用的东西。它也可以接受格式良好的日期。</target>
        </trans-unit>
        <trans-unit id="206ec51534217ee7313acdbf5762d709a4d52351" translate="yes" xml:space="preserve">
          <source>This function checks both if the &lt;code&gt;PHP_SAPI&lt;/code&gt; value is &amp;lsquo;cli&amp;rsquo; or if the &lt;code&gt;STDIN&lt;/code&gt; constant is defined.</source>
          <target state="translated">此函数检查 &lt;code&gt;PHP_SAPI&lt;/code&gt; 值是否为'cli'或是否定义了 &lt;code&gt;STDIN&lt;/code&gt; 常量。</target>
        </trans-unit>
        <trans-unit id="64ec1bb5f75ad5a9c4fb643517f3571ad0f4ff36" translate="yes" xml:space="preserve">
          <source>This function deletes all items from the Query Builder cache.</source>
          <target state="translated">此功能可删除查询生成器缓存中的所有项目。</target>
        </trans-unit>
        <trans-unit id="1d1bfa3527099fbf88cabb9e02c248b0886e34a3" translate="yes" xml:space="preserve">
          <source>This function determines if a file is actually writable by attempting to write to it first. Generally only recommended on platforms where this information may be unreliable.</source>
          <target state="translated">这个函数通过先尝试写入文件来确定文件是否真的可以写入。一般只建议在此信息不可靠的平台上使用。</target>
        </trans-unit>
        <trans-unit id="c181dbf1a0393276e90af9672983b3a764878f52" translate="yes" xml:space="preserve">
          <source>This function does the opposite of &lt;a href=&quot;#ascii_to_entities&quot;&gt;&lt;code&gt;ascii_to_entities()&lt;/code&gt;&lt;/a&gt;. It turns character entities back into ASCII.</source>
          <target state="translated">该函数的作用与&lt;a href=&quot;#ascii_to_entities&quot;&gt; &lt;code&gt;ascii_to_entities()&lt;/code&gt; &lt;/a&gt;相反。它将字符实体转换回ASCII。</target>
        </trans-unit>
        <trans-unit id="e60ddca9fcb5c7c66bde19b07a2bce0e7102e143" translate="yes" xml:space="preserve">
          <source>This function enables you to call PHP database functions that are not natively included in CodeIgniter, in a platform independent manner. For example, let&amp;rsquo;s say you want to call the mysql_get_client_info() function, which is &lt;strong&gt;not&lt;/strong&gt; natively supported by CodeIgniter. You could do so like this:</source>
          <target state="translated">此功能使您可以以平台无关的方式调用CodeIgniter中本身未包含的PHP数据库功能。例如，假设您要调用mysql_get_client_info（）函数，而CodeIgniter本身&lt;strong&gt;不&lt;/strong&gt;支持该函数。您可以这样做：</target>
        </trans-unit>
        <trans-unit id="0b4c5b345afac8749f19042fba954c904e639562" translate="yes" xml:space="preserve">
          <source>This function enables you to call PHP database functions that are not natively included in CodeIgniter, in a platform-independent manner. For example, let&amp;rsquo;s say you want to call the mysql_get_client_info() function, which is &lt;strong&gt;not&lt;/strong&gt; natively supported by CodeIgniter. You could do so like this:</source>
          <target state="translated">此函数使您能够以平台无关的方式调用CodeIgniter中未原生包含的PHP数据库函数。例如，假设您要调用mysql_get_client_info（）函数，而CodeIgniter本身&lt;strong&gt;不&lt;/strong&gt;支持该函数。您可以这样做：</target>
        </trans-unit>
        <trans-unit id="d2a7aac91152dabb2b45a5691242fab53012e58f" translate="yes" xml:space="preserve">
          <source>This function enables you to set &lt;strong&gt;WHERE&lt;/strong&gt; clauses using one of four methods:</source>
          <target state="translated">此功能使您可以使用以下四种方法之一来设置&lt;strong&gt;WHERE&lt;/strong&gt;子句：</target>
        </trans-unit>
        <trans-unit id="ef6c9fdc60b7911db1bbabeb153d30a0cf0edca9" translate="yes" xml:space="preserve">
          <source>This function enables you to set values for inserts or updates.</source>
          <target state="translated">该功能使您能够设置插入或更新的值。</target>
        </trans-unit>
        <trans-unit id="aea9b7acd8e392aacc3cbb4651b2cbf802f7ad72" translate="yes" xml:space="preserve">
          <source>This function ignores ampersands if they are part of existing numbered character entities, e.g. &amp;amp;#123;. Example:</source>
          <target state="translated">如果&amp;ldquo;＆&amp;rdquo;号是现有编号字符实体（例如＆＃123;）的一部分，则该函数将忽略它们。例：</target>
        </trans-unit>
        <trans-unit id="a2e14e9bfe8719fad9c5b28059644cf7de1513b0" translate="yes" xml:space="preserve">
          <source>This function is DEPRECATED and is just an alias for &lt;a href=&quot;../general/common_functions&quot;&gt;common function&lt;/a&gt;&lt;code&gt;html_escape()&lt;/code&gt; - please use that instead.</source>
          <target state="translated">该函数已弃用，并且只是&lt;a href=&quot;../general/common_functions&quot;&gt;通用函数&lt;/a&gt; &lt;code&gt;html_escape()&lt;/code&gt; 的别名-请改用该函数。</target>
        </trans-unit>
        <trans-unit id="dc52634c0dd730bf964417e38f2bb9aa542beed4" translate="yes" xml:space="preserve">
          <source>This function is DEPRECATED. Use PHP&amp;rsquo;s native &lt;a href=&quot;https://secure.php.net/datetime&quot;&gt;DateTime class&lt;/a&gt; instead.</source>
          <target state="translated">此功能已弃用。请改用PHP的本机&lt;a href=&quot;https://secure.php.net/datetime&quot;&gt;DateTime类&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bc3d5eae9d702a12c016f57a0da3a09e0dcee97d" translate="yes" xml:space="preserve">
          <source>This function is DEPRECATED. Use the native &lt;code&gt;date()&lt;/code&gt; combined with &lt;a href=&quot;https://secure.php.net/manual/en/class.datetime.php#datetime.constants.types&quot;&gt;DateTime&amp;rsquo;s format constants&lt;/a&gt; instead:</source>
          <target state="translated">此功能已弃用。结合使用本机 &lt;code&gt;date()&lt;/code&gt; 和&lt;a href=&quot;https://secure.php.net/manual/en/class.datetime.php#datetime.constants.types&quot;&gt;DateTime的格式常量&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="6a8a9dcd77676a51b6f33b62ef8aba89a6863664" translate="yes" xml:space="preserve">
          <source>This function is DEPRECATED. Use the native &lt;code&gt;file_get_contents()&lt;/code&gt; instead.</source>
          <target state="translated">此功能已弃用。请改用本机 &lt;code&gt;file_get_contents()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ee697be58d5579422821dffc01f706a1cd4f04f6" translate="yes" xml:space="preserve">
          <source>This function is DEPRECATED. Use the native &lt;code&gt;hash()&lt;/code&gt; instead.</source>
          <target state="translated">此功能已弃用。请使用本机 &lt;code&gt;hash()&lt;/code&gt; 代替。</target>
        </trans-unit>
        <trans-unit id="ea4a4913c2cf88f95e548f2ea29473b3e4be14b3" translate="yes" xml:space="preserve">
          <source>This function is DEPRECATED. Use the native &lt;code&gt;str_repeat()&lt;/code&gt; in combination with &lt;code&gt;&amp;amp;nbsp;&lt;/code&gt; instead.</source>
          <target state="translated">此功能已弃用。将本机 &lt;code&gt;str_repeat()&lt;/code&gt; 与 &lt;code&gt;&amp;amp;nbsp;&lt;/code&gt; 结合使用 代替。</target>
        </trans-unit>
        <trans-unit id="1e8c9b29aeb665b3790cf4beb2756442e0e3f2d9" translate="yes" xml:space="preserve">
          <source>This function is DEPRECATED. Use the native &lt;code&gt;str_repeat()&lt;/code&gt; in combination with &lt;code&gt;&amp;lt;br /&amp;gt;&lt;/code&gt; instead.</source>
          <target state="translated">此功能已弃用。可以将本机 &lt;code&gt;str_repeat()&lt;/code&gt; 与 &lt;code&gt;&amp;lt;br /&amp;gt;&lt;/code&gt; 结合使用。</target>
        </trans-unit>
        <trans-unit id="21335c3e8d00c6a559243a37128815137bd94b09" translate="yes" xml:space="preserve">
          <source>This function is DEPRECATED. Use the native &lt;code&gt;str_repeat()&lt;/code&gt; instead.</source>
          <target state="translated">此功能已弃用。请使用本机的 &lt;code&gt;str_repeat()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="aab18310e3746761381b7ec89ac2d16054c3049b" translate="yes" xml:space="preserve">
          <source>This function is DEPRECATED. Use the native &lt;code&gt;trim()&lt;/code&gt; instead: | | trim($str, &amp;lsquo;/&amp;rsquo;);</source>
          <target state="translated">此功能已弃用。使用本机 &lt;code&gt;trim()&lt;/code&gt; 代替：| trim（$ str，'/'）;</target>
        </trans-unit>
        <trans-unit id="28ea4e512218ac9bb00668259f3ad88debfc5a59" translate="yes" xml:space="preserve">
          <source>This function is absolutely identical to &lt;a href=&quot;#form_open&quot;&gt;&lt;code&gt;form_open()&lt;/code&gt;&lt;/a&gt; above, except that it adds a &lt;em&gt;multipart&lt;/em&gt; attribute, which is necessary if you would like to use the form to upload files with.</source>
          <target state="translated">此函数与上面的&lt;a href=&quot;#form_open&quot;&gt; &lt;code&gt;form_open()&lt;/code&gt; &lt;/a&gt;完全相同，不同之处在于它添加了&lt;em&gt;multipart&lt;/em&gt;属性，如果您想使用表单上传文件，则此属性是必需的。</target>
        </trans-unit>
        <trans-unit id="48cd3bc7dfe364d1fc48f5463cce2de61be138aa" translate="yes" xml:space="preserve">
          <source>This function is an alias for &lt;code&gt;CI_Config::base_url()&lt;/code&gt;. For more info, please see the &lt;a href=&quot;../libraries/config&quot;&gt;Config Library&lt;/a&gt; documentation.</source>
          <target state="translated">此函数是 &lt;code&gt;CI_Config::base_url()&lt;/code&gt; 的别名。有关更多信息，请参见&lt;a href=&quot;../libraries/config&quot;&gt;配置库&lt;/a&gt;文档。</target>
        </trans-unit>
        <trans-unit id="cbf9fb7d50a8e4e2580826844c3c571f4d5668d8" translate="yes" xml:space="preserve">
          <source>This function is an alias for &lt;code&gt;CI_Config::site_url()&lt;/code&gt;. For more info, please see the &lt;a href=&quot;../libraries/config&quot;&gt;Config Library&lt;/a&gt; documentation.</source>
          <target state="translated">此函数是 &lt;code&gt;CI_Config::site_url()&lt;/code&gt; 的别名。有关更多信息，请参见&lt;a href=&quot;../libraries/config&quot;&gt;配置库&lt;/a&gt;文档。</target>
        </trans-unit>
        <trans-unit id="d9fc75e113b4adc12bcf64077dd1fdd581afc21b" translate="yes" xml:space="preserve">
          <source>This function is an alias for &lt;code&gt;CI_Config::uri_string()&lt;/code&gt;. For more info, please see the &lt;a href=&quot;../libraries/config&quot;&gt;Config Library&lt;/a&gt; documentation.</source>
          <target state="translated">此函数是 &lt;code&gt;CI_Config::uri_string()&lt;/code&gt; 的别名。有关更多信息，请参见&lt;a href=&quot;../libraries/config&quot;&gt;配置库&lt;/a&gt;文档。</target>
        </trans-unit>
        <trans-unit id="42b354867caa2b01fb1d5ef32341dec80cea9010" translate="yes" xml:space="preserve">
          <source>This function is an alias for &lt;code&gt;CI_Input::xss_clean()&lt;/code&gt;. For more info, please see the &lt;a href=&quot;../libraries/input&quot;&gt;Input Library&lt;/a&gt; documentation.</source>
          <target state="translated">此函数是 &lt;code&gt;CI_Input::xss_clean()&lt;/code&gt; 的别名。有关更多信息，请参见&lt;a href=&quot;../libraries/input&quot;&gt;输入库&lt;/a&gt;文档。</target>
        </trans-unit>
        <trans-unit id="ca7306115b7ddfe5a6ba4e2055acebbecf5e37b9" translate="yes" xml:space="preserve">
          <source>This function is an alias for &lt;code&gt;CI_Security::entity_decode()&lt;/code&gt;. Fore more info, please see the &lt;a href=&quot;../libraries/security&quot;&gt;Security Library&lt;/a&gt; documentation.</source>
          <target state="translated">此函数是 &lt;code&gt;CI_Security::entity_decode()&lt;/code&gt; 的别名。有关更多信息，请参阅&lt;a href=&quot;../libraries/security&quot;&gt;安全性库&lt;/a&gt;文档。</target>
        </trans-unit>
        <trans-unit id="4bbc97dffd257ba3053a81a61414205622c26693" translate="yes" xml:space="preserve">
          <source>This function is an alias for &lt;code&gt;CI_Security::sanitize_filename()&lt;/code&gt;. For more info, please see the &lt;a href=&quot;../libraries/security&quot;&gt;Security Library&lt;/a&gt; documentation.</source>
          <target state="translated">此函数是 &lt;code&gt;CI_Security::sanitize_filename()&lt;/code&gt; 的别名。有关更多信息，请参见&lt;a href=&quot;../libraries/security&quot;&gt;安全库&lt;/a&gt;文档。</target>
        </trans-unit>
        <trans-unit id="b5a040393bdaaa86eb14aca9dd560ae1c94a21ea" translate="yes" xml:space="preserve">
          <source>This function is an alias for &lt;code&gt;CI_Security::strip_image_tags()&lt;/code&gt;. For more info, please see the &lt;a href=&quot;../libraries/security&quot;&gt;Security Library&lt;/a&gt; documentation.</source>
          <target state="translated">此函数是 &lt;code&gt;CI_Security::strip_image_tags()&lt;/code&gt; 的别名。有关更多信息，请参见&lt;a href=&quot;../libraries/security&quot;&gt;安全库&lt;/a&gt;文档。</target>
        </trans-unit>
        <trans-unit id="fe27a409cbe25fb514bb52bf89c96a24e88714bc" translate="yes" xml:space="preserve">
          <source>This function is an alias for &lt;code&gt;CI_Typography::auto_typography()&lt;/code&gt;. For more info, please see the &lt;a href=&quot;../libraries/typography&quot;&gt;Typography Library&lt;/a&gt; documentation.</source>
          <target state="translated">该函数是 &lt;code&gt;CI_Typography::auto_typography()&lt;/code&gt; 的别名。有关更多信息，请参见&lt;a href=&quot;../libraries/typography&quot;&gt;印刷库&lt;/a&gt;文档。</target>
        </trans-unit>
        <trans-unit id="ac1102570db4117a66ff5f18e6383a32c318245a" translate="yes" xml:space="preserve">
          <source>This function is an alias for &lt;code&gt;\CodeIgniter\Security::sanitize_filename()&lt;/code&gt;. For more info, please see the &lt;a href=&quot;../libraries/security&quot;&gt;Security Library&lt;/a&gt; documentation.</source>
          <target state="translated">此函数是 &lt;code&gt;\CodeIgniter\Security::sanitize_filename()&lt;/code&gt; 的别名。有关更多信息，请参见&lt;a href=&quot;../libraries/security&quot;&gt;安全库&lt;/a&gt;文档。</target>
        </trans-unit>
        <trans-unit id="3bbad1d4a509fcfe70c16792951014a09e2eb859" translate="yes" xml:space="preserve">
          <source>This function is identical in all respects to the &lt;a href=&quot;#form_checkbox&quot;&gt;&lt;code&gt;form_checkbox()&lt;/code&gt;&lt;/a&gt; function above except that it uses the &amp;ldquo;radio&amp;rdquo; input type.</source>
          <target state="translated">除了使用&amp;ldquo; radio&amp;rdquo;输入类型外，此函数在所有方面都与上述&lt;a href=&quot;#form_checkbox&quot;&gt; &lt;code&gt;form_checkbox()&lt;/code&gt; &lt;/a&gt;函数相同。</target>
        </trans-unit>
        <trans-unit id="1f2c1c4c95cebd8a2e5316ad19bc50bed3b49988" translate="yes" xml:space="preserve">
          <source>This function is identical in all respects to the &lt;a href=&quot;#form_input&quot;&gt;&lt;code&gt;form_input()&lt;/code&gt;&lt;/a&gt; function above except that it generates a &amp;ldquo;textarea&amp;rdquo; type.</source>
          <target state="translated">该函数在所有方面与上述&lt;a href=&quot;#form_input&quot;&gt; &lt;code&gt;form_input()&lt;/code&gt; &lt;/a&gt;函数相同，除了它会生成&amp;ldquo; textarea&amp;rdquo;类型。</target>
        </trans-unit>
        <trans-unit id="4bb276365402c6804132d346e7de7868f98ca6ba" translate="yes" xml:space="preserve">
          <source>This function is identical in all respects to the &lt;a href=&quot;#form_input&quot;&gt;&lt;code&gt;form_input()&lt;/code&gt;&lt;/a&gt; function above except that it uses the &amp;ldquo;file&amp;rdquo; input type, allowing it to be used to upload files.</source>
          <target state="translated">该函数在所有方面与上述&lt;a href=&quot;#form_input&quot;&gt; &lt;code&gt;form_input()&lt;/code&gt; &lt;/a&gt;函数相同，不同之处在于它使用&amp;ldquo;文件&amp;rdquo;输入类型，从而允许其用于上传文件。</target>
        </trans-unit>
        <trans-unit id="eb971b11293530362e31483a41138b561c8510d2" translate="yes" xml:space="preserve">
          <source>This function is identical in all respects to the &lt;a href=&quot;#form_input&quot;&gt;&lt;code&gt;form_input()&lt;/code&gt;&lt;/a&gt; function above except that it uses the &amp;ldquo;password&amp;rdquo; input type.</source>
          <target state="translated">除了使用&amp;ldquo;密码&amp;rdquo;输入类型外，此函数在所有方面都与上述&lt;a href=&quot;#form_input&quot;&gt; &lt;code&gt;form_input()&lt;/code&gt; &lt;/a&gt;函数相同。</target>
        </trans-unit>
        <trans-unit id="d1cc54de0767d95a956e430d9375f5d307f677bf" translate="yes" xml:space="preserve">
          <source>This function is identical to &lt;a href=&quot;#form_open&quot;&gt;&lt;code&gt;form_open()&lt;/code&gt;&lt;/a&gt; above, except that it adds a &lt;em&gt;multipart&lt;/em&gt; attribute, which is necessary if you would like to use the form to upload files with.</source>
          <target state="translated">此函数与上面的&lt;a href=&quot;#form_open&quot;&gt; &lt;code&gt;form_open()&lt;/code&gt; &lt;/a&gt;相同，不同之处在于它添加了&lt;em&gt;multipart&lt;/em&gt;属性，如果您想使用表单上传文件，则此属性是必需的。</target>
        </trans-unit>
        <trans-unit id="ed1a5bec9325eff9adc19151b3b8826e9ba7798f" translate="yes" xml:space="preserve">
          <source>This function is identical to PHP&amp;rsquo;s &lt;a href=&quot;http://php.net/manual/en/function.date.php&quot;&gt;date()&lt;/a&gt; function, except that it lets you use MySQL style date codes, where each code letter is preceded with a percent sign, e.g. &lt;code&gt;%Y %m %d&lt;/code&gt;</source>
          <target state="translated">该函数与PHP的&lt;a href=&quot;http://php.net/manual/en/function.date.php&quot;&gt;date（）&lt;/a&gt;函数相同，不同之处在于它允许您使用MySQL样式的日期代码，其中每个代码字母均以百分号开头，例如 &lt;code&gt;%Y %m %d&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2c87dbb34cbba265ecba734e95ad1ceb55757302" translate="yes" xml:space="preserve">
          <source>This function is identical to the one above, except that multiple instances are joined by OR</source>
          <target state="translated">这个函数与上面的函数相同,不同的是,多个实例用OR连接。</target>
        </trans-unit>
        <trans-unit id="296b7bc9600c09e0a2b2fc441343390e919d63fd" translate="yes" xml:space="preserve">
          <source>This function is identical to the one above, except that multiple instances are joined by OR:</source>
          <target state="translated">这个函数与上面的函数相同,只是多个实例用OR连接。</target>
        </trans-unit>
        <trans-unit id="aaa2c4a32230ab4d1feb90d43b79f4a35ebc4377" translate="yes" xml:space="preserve">
          <source>This function is otherwise identical to &lt;code&gt;set_cookie()&lt;/code&gt;, except that it does not have the value and expiration parameters. You can submit an array of values in the first parameter or you can set discrete parameters.</source>
          <target state="translated">该函数在其他方面与 &lt;code&gt;set_cookie()&lt;/code&gt; 相同，不同之处在于它没有value和expiration参数。您可以在第一个参数中提交值数组，也可以设置离散参数。</target>
        </trans-unit>
        <trans-unit id="a248d9f4a088bc1b5cd7e812a6524f29d51a8560" translate="yes" xml:space="preserve">
          <source>This function is useful when used with &lt;a href=&quot;#timezone_menu&quot;&gt;&lt;code&gt;timezone_menu()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">与&lt;a href=&quot;#timezone_menu&quot;&gt; &lt;code&gt;timezone_menu()&lt;/code&gt; &lt;/a&gt;一起使用时，此函数很有用。</target>
        </trans-unit>
        <trans-unit id="43133048c00e8c08d6edfb65af49920ed7df046f" translate="yes" xml:space="preserve">
          <source>This function lets you write messages to your log files. You must supply one of three &amp;ldquo;levels&amp;rdquo; in the first parameter, indicating what type of message it is (debug, error, info), with the message itself in the second parameter.</source>
          <target state="translated">此功能使您可以将消息写入日志文件。您必须在第一个参数中提供三个&amp;ldquo;级别&amp;rdquo;之一，以指示消息的类型（调试，错误，信息），并在第二个参数中提供消息本身。</target>
        </trans-unit>
        <trans-unit id="b7d15a25cba8bbb545576dd1fe07a9ae68f664d6" translate="yes" xml:space="preserve">
          <source>This function mainly converts double and single quotes to curly entities, but it also converts em-dashes, double spaces, and ampersands.</source>
          <target state="translated">这个函数主要是将双引号和单引号转换为卷曲的实体,但它也可以转换em-dash、双空格和安培符号。</target>
        </trans-unit>
        <trans-unit id="a953a82c0a275869ae4175a732434ac3c9b8400a" translate="yes" xml:space="preserve">
          <source>This function must be called to begin caching. All Query Builder queries of the correct type (see below for supported queries) are stored for later use.</source>
          <target state="translated">必须调用此函数才能开始缓存。所有正确类型的Query Builder查询(见下面支持的查询)都会被存储起来,供以后使用。</target>
        </trans-unit>
        <trans-unit id="53e77948b4acb781abcfe7af97410b40538ebc92" translate="yes" xml:space="preserve">
          <source>This function only handles numbers in the range 1 through 3999. It will return null for any value outside that range .</source>
          <target state="translated">这个函数只处理范围为1到3999的数字。对于该范围之外的任何数值,它将返回空值。</target>
        </trans-unit>
        <trans-unit id="bc7a6117ebc8ca503f2f5a607af983932c8e91e3" translate="yes" xml:space="preserve">
          <source>This function prevents inserting NULL characters between ASCII characters, like Java\0script.</source>
          <target state="translated">这个功能可以防止在ASCII字符之间插入NULL字符,比如Java0script。</target>
        </trans-unit>
        <trans-unit id="0b7169ec2b5c775e1d680e854a48398a7c607b71" translate="yes" xml:space="preserve">
          <source>This function returns a &lt;em&gt;reference&lt;/em&gt; to the MIMEs array from &lt;em&gt;application/config/mimes.php&lt;/em&gt;.</source>
          <target state="translated">此函数从&lt;em&gt;application / config / mimes.php&lt;/em&gt;返回对MIMEs数组的&lt;em&gt;引用&lt;/em&gt;。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8de26549daa9a7b3cd483260ea07bc2e2bc9a036" translate="yes" xml:space="preserve">
          <source>This function returns a line of text from a loaded language file with simplified syntax that may be more desirable for view files than &lt;code&gt;CI_Lang::line()&lt;/code&gt;.</source>
          <target state="translated">该函数从加载的语言文件中以简化的语法返回一行文本，这对于视图文件而言可能比 &lt;code&gt;CI_Lang::line()&lt;/code&gt; 更可取。</target>
        </trans-unit>
        <trans-unit id="3c11c461dcde867fd92463ee4c58a9d22fdd64d1" translate="yes" xml:space="preserve">
          <source>This function returns the same thing as &lt;a href=&quot;#site_url&quot;&gt;&lt;code&gt;site_url()&lt;/code&gt;&lt;/a&gt;, without the &lt;em&gt;indexPage&lt;/em&gt; being appended.</source>
          <target state="translated">此函数返回与&lt;a href=&quot;#site_url&quot;&gt; &lt;code&gt;site_url()&lt;/code&gt; &lt;/a&gt;相同的东西，但不附加&lt;em&gt;indexPage&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="a2fb0777ec9cdafc83860eb1d8beda71f2d5197e" translate="yes" xml:space="preserve">
          <source>This function returns the same thing as &lt;a href=&quot;#site_url&quot;&gt;&lt;code&gt;site_url()&lt;/code&gt;&lt;/a&gt;, without the &lt;em&gt;index_page&lt;/em&gt; or &lt;em&gt;url_suffix&lt;/em&gt; being appended.</source>
          <target state="translated">此函数返回的内容与&lt;a href=&quot;#site_url&quot;&gt; &lt;code&gt;site_url()&lt;/code&gt; &lt;/a&gt;相同，而没有附加&lt;em&gt;index_page&lt;/em&gt;或&lt;em&gt;url_suffix&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="603901fe1abb97e6d45ddcdce7d50096df4bf6da" translate="yes" xml:space="preserve">
          <source>This function runs a &lt;code&gt;function_exists()&lt;/code&gt; check and if the &lt;code&gt;Suhosin extension &amp;lt;http://www.hardened-php.net/suhosin/&amp;gt;&lt;/code&gt; is loaded, checks if it doesn&amp;rsquo;t disable the function being checked.</source>
          <target state="translated">此函数运行 &lt;code&gt;function_exists()&lt;/code&gt; 检查，如果 &lt;code&gt;Suhosin extension &amp;lt;http://www.hardened-php.net/suhosin/&amp;gt;&lt;/code&gt; 已加载，请检查它是否不会禁用正在检查的功能。</target>
        </trans-unit>
        <trans-unit id="b7893d50839aad8d1bec09386452626dd29299d5" translate="yes" xml:space="preserve">
          <source>This function simplifies the process of writing database inserts. It returns a correctly formatted SQL insert string. Example:</source>
          <target state="translated">这个函数简化了编写数据库插入信息的过程,它返回一个正确格式的SQL插入字符串。它返回一个正确格式的SQL插入字符串。例子:</target>
        </trans-unit>
        <trans-unit id="3a59ba5f5760631050a9c5af07fc4479c42bceef" translate="yes" xml:space="preserve">
          <source>This function simplifies the process of writing database updates. It returns a correctly formatted SQL update string. Example:</source>
          <target state="translated">这个函数简化了编写数据库更新的过程。它返回一个正确格式的SQL更新字符串。例子:</target>
        </trans-unit>
        <trans-unit id="3a75de402c3bab7dd9f458697c5af468d98d19d0" translate="yes" xml:space="preserve">
          <source>This function used to use the &lt;code&gt;&amp;lt;strong&amp;gt;&lt;/code&gt; tag by default. Older browsers might not support the new HTML5 mark tag, so it is recommended that you insert the following CSS code into your stylesheet if you need to support such browsers:</source>
          <target state="translated">默认情况下，此功能用于使用 &lt;code&gt;&amp;lt;strong&amp;gt;&lt;/code&gt; 标记。旧版浏览器可能不支持新的HTML5标记，因此，如果需要支持以下浏览器，建议将以下CSS代码插入样式表：</target>
        </trans-unit>
        <trans-unit id="b2600ffbad9f6bdb19b51484968a194786865fbd" translate="yes" xml:space="preserve">
          <source>This function uses a companion config file &lt;code&gt;app/Config/ForeignCharacters.php&lt;/code&gt; to define the to and from array for transliteration.</source>
          <target state="translated">此函数使用配套的配置文件 &lt;code&gt;app/Config/ForeignCharacters.php&lt;/code&gt; 定义用于音译的to和from数组。</target>
        </trans-unit>
        <trans-unit id="9cfb783277dbaf014a719ca5abb3236712df6dae" translate="yes" xml:space="preserve">
          <source>This function uses a companion config file &lt;code&gt;application/config/foreign_chars.php&lt;/code&gt; to define the to and from array for transliteration.</source>
          <target state="translated">此函数使用配套的配置文件 &lt;code&gt;application/config/foreign_chars.php&lt;/code&gt; 定义用于音译的to和from数组。</target>
        </trans-unit>
        <trans-unit id="ba8889a9f4f94ab2789c11c83895ed6eeb8235a3" translate="yes" xml:space="preserve">
          <source>This function was formerly named &lt;code&gt;dohash()&lt;/code&gt;, which has been removed in favor of &lt;code&gt;do_hash()&lt;/code&gt;.</source>
          <target state="translated">该函数以前名为 &lt;code&gt;dohash()&lt;/code&gt; ，为了支持 &lt;code&gt;do_hash()&lt;/code&gt; 而被删除。</target>
        </trans-unit>
        <trans-unit id="b3f3df08a35d5ea2cf68905c474b5e7b70248342" translate="yes" xml:space="preserve">
          <source>This function was introduced because Suhosin terminated script execution, but this turned out to be a bug. A fix has been available for some time (version 0.9.34), but is unfortunately not released yet.</source>
          <target state="translated">这个功能的引入是因为素心终止了脚本的执行,但这原来是一个bug。已经有一段时间的修复(0.9.34版本),但遗憾的是还没有发布。</target>
        </trans-unit>
        <trans-unit id="79288af119265a637a00800c5bc1ca18e985595a" translate="yes" xml:space="preserve">
          <source>This function will add &lt;em&gt;http://&lt;/em&gt; in the event that a protocol prefix is missing from a URL.</source>
          <target state="translated">如果URL中缺少协议前缀，则此函数将添加&lt;em&gt;http：//&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="580a78a98b457647c93f9b78d2fa47303df506cc" translate="yes" xml:space="preserve">
          <source>This function will add http:// in the event that a protocol prefix is missing from a URL.</source>
          <target state="translated">这个函数将在URL中缺少协议前缀的情况下添加http://。</target>
        </trans-unit>
        <trans-unit id="9965cad3c8dc5cffce9ce82a61e9d59718ece5f2" translate="yes" xml:space="preserve">
          <source>This function will add or remove a CSS class to its target.</source>
          <target state="translated">该函数将为目标添加或删除一个CSS类。</target>
        </trans-unit>
        <trans-unit id="a2a7dd33554ea7d04458752145e8f07331940a26" translate="yes" xml:space="preserve">
          <source>This function will alias the native &lt;code&gt;cal_days_in_month()&lt;/code&gt;, if it is available.</source>
          <target state="translated">如果可用，此函数将别名本地 &lt;code&gt;cal_days_in_month()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c0ebb727a1ab498cb510b1e74a7a68140b95b7f2" translate="yes" xml:space="preserve">
          <source>This function will also add a table prefix to your table, assuming you have a prefix specified in your database config file. To enable the prefixing set TRUE (boolean) via the second parameter:</source>
          <target state="translated">这个函数还将为你的表添加一个表前缀,假设你在数据库配置文件中指定了一个前缀。要启用前缀,通过第二个参数设置TRUE(布尔值)。</target>
        </trans-unit>
        <trans-unit id="190b38f6be92523917b213bfa7a859cfe15d6834" translate="yes" xml:space="preserve">
          <source>This function will display the 404 error message supplied to it using the error template appropriate to your execution:</source>
          <target state="translated">这个函数将使用适合你执行的错误模板显示提供给它的404错误信息。</target>
        </trans-unit>
        <trans-unit id="b7de61c4585f7a59c95c962b6b1ab7f4598ffef7" translate="yes" xml:space="preserve">
          <source>This function will display the error message supplied to it using the error template appropriate to your execution:</source>
          <target state="translated">这个函数将使用适合你执行的错误模板显示提供给它的错误信息。</target>
        </trans-unit>
        <trans-unit id="811e57c886fe7358bd1e95303e6d49b2ff7aa4d2" translate="yes" xml:space="preserve">
          <source>This function will extract $radius number of characters before and after the central $phrase with an elipsis before and after.</source>
          <target state="translated">这个函数将提取$radius的中心$phrase前后的字符数,并在前后加一个斜线。</target>
        </trans-unit>
        <trans-unit id="aac35838b30878a37a1f3626eb2e27d124297f16" translate="yes" xml:space="preserve">
          <source>This function will return a server path without symbolic links or relative directory structures. An optional second argument will cause an error to be triggered if the path cannot be resolved.</source>
          <target state="translated">这个函数将返回一个没有符号链接或相对目录结构的服务器路径。如果路径不能被解析,可选的第二个参数将导致一个错误被触发。</target>
        </trans-unit>
        <trans-unit id="de89324f973e90129df77d891a20cee32a0be9df" translate="yes" xml:space="preserve">
          <source>This function will return any error messages sent back by the validator. If there are no messages it returns an empty string.</source>
          <target state="translated">这个函数将返回验证器发送回来的任何错误信息。如果没有信息,则返回一个空字符串。</target>
        </trans-unit>
        <trans-unit id="872a09f32ff79332bb3a1eceb2a480b92dd312e1" translate="yes" xml:space="preserve">
          <source>This function will set the field messages.</source>
          <target state="translated">该功能将设置字段信息。</target>
        </trans-unit>
        <trans-unit id="b02ddbda520a844d7c347f709a5c0cf80d16a569" translate="yes" xml:space="preserve">
          <source>This function will set the field validation rules.</source>
          <target state="translated">该函数将设置字段验证规则。</target>
        </trans-unit>
        <trans-unit id="e1e64087a2ee8c57032429c5307e4ada7739f783" translate="yes" xml:space="preserve">
          <source>This function will set the field wise error messages.</source>
          <target state="translated">该功能将设置字段的错误信息。</target>
        </trans-unit>
        <trans-unit id="916222b5974e4ee5b75216a9e768e776bec0e401" translate="yes" xml:space="preserve">
          <source>This function will set the validation rules.</source>
          <target state="translated">该函数将设置验证规则。</target>
        </trans-unit>
        <trans-unit id="2a06fd79261ff102088be6456cb4752d1bc0ea4f" translate="yes" xml:space="preserve">
          <source>This function will strip tags from a string, split it at a defined maximum length, and insert an ellipsis.</source>
          <target state="translated">这个函数将从一个字符串中剥离标签,在一个定义的最大长度上分割它,并插入一个省略号。</target>
        </trans-unit>
        <trans-unit id="92adb488571ac8aa2c86b63bcf33314d9c838bc8" translate="yes" xml:space="preserve">
          <source>This function will terminate script execution.</source>
          <target state="translated">该函数将终止脚本的执行。</target>
        </trans-unit>
        <trans-unit id="6025c3e9e54766c61da79f4ab9418966b4852934" translate="yes" xml:space="preserve">
          <source>This function works the same as &lt;a href=&quot;#url_title&quot;&gt;&lt;code&gt;url_title()&lt;/code&gt;&lt;/a&gt; but it converts all accented characters automatically.</source>
          <target state="translated">该函数与&lt;a href=&quot;#url_title&quot;&gt; &lt;code&gt;url_title()&lt;/code&gt; &lt;/a&gt;相同，但会自动转换所有带重音的字符。</target>
        </trans-unit>
        <trans-unit id="586be07abce2fe1ad0fa90bce27fd696e6c7c3f2" translate="yes" xml:space="preserve">
          <source>This has no way of checking if the incoming data is valid JSON or not, you should only use this method if you know that you&amp;rsquo;re expecting JSON.</source>
          <target state="translated">这无法检查传入的数据是否为有效的JSON，只有在知道要使用JSON的情况下才应使用此方法。</target>
        </trans-unit>
        <trans-unit id="5a6def756253381ec9923d7c024ad25c73bff129" translate="yes" xml:space="preserve">
          <source>This has the added benefit of making the views more readable, too.</source>
          <target state="translated">这样做的另一个好处是,也能让观点更易读。</target>
        </trans-unit>
        <trans-unit id="d0064e41c7d8197b99e73662cd607c34d657ccd4" translate="yes" xml:space="preserve">
          <source>This helper function gives you friendlier syntax to get browser cookies. Refer to the &lt;a href=&quot;../incoming/incomingrequest&quot;&gt;IncomingRequest Library&lt;/a&gt; for detailed description of its use, as this function acts very similarly to &lt;code&gt;IncomingRequest::getCookie()&lt;/code&gt;, except it will also prepend the &lt;code&gt;$cookiePrefix&lt;/code&gt; that you might&amp;rsquo;ve set in your &lt;em&gt;app/Config/App.php&lt;/em&gt; file.</source>
          <target state="translated">该帮助器函数为您提供了更友好的语法来获取浏览器cookie。请参阅&lt;a href=&quot;../incoming/incomingrequest&quot;&gt;IncomingRequest库&lt;/a&gt;以获取有关其用法的详细说明，因为此函数的行为与 &lt;code&gt;IncomingRequest::getCookie()&lt;/code&gt; 非常相似，不同之 &lt;code&gt;$cookiePrefix&lt;/code&gt; 在于它还会在您可能在&lt;em&gt;app / Config / App.php&lt;/em&gt;文件中设置的$ cookiePrefix之前。。</target>
        </trans-unit>
        <trans-unit id="7d76fd42d80a36ba57f9415eaa77283dac255366" translate="yes" xml:space="preserve">
          <source>This helper function gives you friendlier syntax to get browser cookies. Refer to the &lt;a href=&quot;../libraries/input&quot;&gt;Input Library&lt;/a&gt; for detailed description of its use, as this function acts very similarly to &lt;code&gt;CI_Input::cookie()&lt;/code&gt;, except it will also prepend the &lt;code&gt;$config['cookie_prefix']&lt;/code&gt; that you might&amp;rsquo;ve set in your &lt;em&gt;application/config/config.php&lt;/em&gt; file.</source>
          <target state="translated">该帮助器函数为您提供了更友好的语法来获取浏览器cookie。请参阅&lt;a href=&quot;../libraries/input&quot;&gt;输入库&lt;/a&gt;以获取有关其用法的详细说明，因为此函数的行为与 &lt;code&gt;CI_Input::cookie()&lt;/code&gt; 非常相似，除了它还会在您可能已在&lt;em&gt;应用程序/ config中&lt;/em&gt;设置的 &lt;code&gt;$config['cookie_prefix']&lt;/code&gt; 之前&lt;em&gt;/config.php&lt;/em&gt;文件。</target>
        </trans-unit>
        <trans-unit id="74b2f02f7078d239af1739730d46620e6519b937" translate="yes" xml:space="preserve">
          <source>This helper function gives you friendlier syntax to set browser cookies. Refer to the &lt;a href=&quot;../libraries/input&quot;&gt;Input Library&lt;/a&gt; for a description of its use, as this function is an alias for &lt;code&gt;CI_Input::set_cookie()&lt;/code&gt;.</source>
          <target state="translated">此帮助器函数为您提供了更友好的语法来设置浏览器cookie。请参阅&lt;a href=&quot;../libraries/input&quot;&gt;输入库&lt;/a&gt;以获取有关其用法的说明，因为此函数是 &lt;code&gt;CI_Input::set_cookie()&lt;/code&gt; 的别名。</target>
        </trans-unit>
        <trans-unit id="7deaeff72453843b2b90b2e16f4f229ea61b87ef" translate="yes" xml:space="preserve">
          <source>This helper function gives you friendlier syntax to set browser cookies. Refer to the &lt;a href=&quot;../outgoing/response&quot;&gt;Response Library&lt;/a&gt; for a description of its use, as this function is an alias for &lt;code&gt;Response::setCookie()&lt;/code&gt;.</source>
          <target state="translated">此帮助器函数为您提供了更友好的语法来设置浏览器cookie。请参阅&lt;a href=&quot;../outgoing/response&quot;&gt;响应库&lt;/a&gt;以获取有关其用法的说明，因为此函数是 &lt;code&gt;Response::setCookie()&lt;/code&gt; 的别名。</target>
        </trans-unit>
        <trans-unit id="c4717c587ebe75f40efeb98182f152059cc04e14" translate="yes" xml:space="preserve">
          <source>This helper is automatically loaded by the framework on every request.</source>
          <target state="translated">这个帮助程序会在每次请求时由框架自动加载。</target>
        </trans-unit>
        <trans-unit id="ec3a131564042ea77bae1f18c97c5a743224c8c2" translate="yes" xml:space="preserve">
          <source>This helper is loaded using the following code</source>
          <target state="translated">这个帮助程序是通过以下代码加载的</target>
        </trans-unit>
        <trans-unit id="3ab7862f392b0a2150493928c18434a48e3751e3" translate="yes" xml:space="preserve">
          <source>This helper is loaded using the following code:</source>
          <target state="translated">这个帮助程序是通过以下代码加载的。</target>
        </trans-unit>
        <trans-unit id="99307f5fb4109cd1a2379b86376dbc76414c900c" translate="yes" xml:space="preserve">
          <source>This helper method is a static version of the default constructor. It takes a string acceptable as DateTime&amp;rsquo;s constructor as the first parameter, a timezone as the second parameter, and the locale as the third parameter.:</source>
          <target state="translated">此帮助程序方法是默认构造函数的静态版本。它使用可接受的字符串作为DateTime的构造函数作为第一个参数，将时区作为第二个参数，将语言环境作为第三个参数：</target>
        </trans-unit>
        <trans-unit id="62ee30b24e91b5e2bca64d73d5e15ceb2692cfd0" translate="yes" xml:space="preserve">
          <source>This helps you mix together normal &lt;a href=&quot;../general/urls&quot;&gt;URI Segments&lt;/a&gt; as well as query string arguments, which until 3.0 was not possible.</source>
          <target state="translated">这可以帮助您将普通的&lt;a href=&quot;../general/urls&quot;&gt;URI段&lt;/a&gt;以及查询字符串参数混合在一起，直到3.0才可行。</target>
        </trans-unit>
        <trans-unit id="febab50fbdda06a005ed07c79c4eb1322da66af9" translate="yes" xml:space="preserve">
          <source>This installation technique would suit a developer who wishes to start a new CodeIgniter4 based project.</source>
          <target state="translated">这种安装技术适合那些希望开始一个新的基于CodeIgniter4的项目的开发者。</target>
        </trans-unit>
        <trans-unit id="7ad02614db2833e3d79e1c010c33033a08f4a440" translate="yes" xml:space="preserve">
          <source>This is &lt;strong&gt;not&lt;/strong&gt; valid:</source>
          <target state="translated">这是&lt;strong&gt;不&lt;/strong&gt;正确的：</target>
        </trans-unit>
        <trans-unit id="43d37f88fad38d5a756912465e911c911c43a597" translate="yes" xml:space="preserve">
          <source>This is a caching backend that will always &amp;lsquo;miss.&amp;rsquo; It stores no data, but lets you keep your caching code in place in environments that don&amp;rsquo;t support your chosen cache.</source>
          <target state="translated">这是一个始终会&amp;ldquo;丢失&amp;rdquo;的缓存后端。它不存储任何数据，但可以让您在不支持所选缓存的环境中将缓存代码保留在适当的位置。</target>
        </trans-unit>
        <trans-unit id="4960c726802d874c3f0f98b1c7714aa7e4533da8" translate="yes" xml:space="preserve">
          <source>This is a generic file loading method. Supply the filepath and name in the first parameter and it will open and read the file. By default the data is sent to your browser, just like a View file, but if you set the second parameter to boolean TRUE it will instead return the data as a string.</source>
          <target state="translated">这是一个通用的文件加载方法。在第一个参数中提供文件路径和名称,它将打开并读取文件。默认情况下,数据会被发送到浏览器,就像一个View文件一样,但是如果你把第二个参数设置为boolean TRUE,它将以字符串的形式返回数据。</target>
        </trans-unit>
        <trans-unit id="d73f03ec4706c30d2d14c2dba26a21fe38e3d2d7" translate="yes" xml:space="preserve">
          <source>This is a helper method that returns an array containing all of the data related to the file you uploaded. Here is the array prototype:</source>
          <target state="translated">这是一个辅助方法,它返回一个包含与你上传的文件相关的所有数据的数组。这里是数组的原型。</target>
        </trans-unit>
        <trans-unit id="f97a72cf4007a42b9de867ccb266095fe6db78bf" translate="yes" xml:space="preserve">
          <source>This is a legacy method kept only for backwards compatibility with older applications.</source>
          <target state="translated">这是一个传统的方法,只是为了向后兼容旧的应用程序。</target>
        </trans-unit>
        <trans-unit id="6a21cdb3cd1efc4dff5cc155509ad8cd795efa6f" translate="yes" xml:space="preserve">
          <source>This is a legacy method kept only for backwards compatibility with older applications. It is just an alias for &lt;code&gt;isset($_SESSION[$key])&lt;/code&gt; - please use that instead.</source>
          <target state="translated">这是一种旧方法，仅保留用于与旧应用程序向后兼容。它只是 &lt;code&gt;isset($_SESSION[$key])&lt;/code&gt; 的别名-请改用它。</target>
        </trans-unit>
        <trans-unit id="e82a0628a6263c017695488f4efa237172a23ade" translate="yes" xml:space="preserve">
          <source>This is a legacy method kept only for backwards compatibility with older applications. It is just an alias for &lt;code&gt;unset($_SESSION[$key])&lt;/code&gt; - please use that instead.</source>
          <target state="translated">这是一种旧方法，仅保留用于与旧应用程序向后兼容。它只是 &lt;code&gt;unset($_SESSION[$key])&lt;/code&gt; 的别名-请改用它。</target>
        </trans-unit>
        <trans-unit id="7db228d85e7b1207b06cb2cdf9a9572dc1be3d4a" translate="yes" xml:space="preserve">
          <source>This is a legacy method kept only for backwards compatibility with older applications. It is just an alias for the &lt;code&gt;mark_as_flash()&lt;/code&gt; method.</source>
          <target state="translated">这是一种旧方法，仅保留用于与旧应用程序向后兼容。它只是 &lt;code&gt;mark_as_flash()&lt;/code&gt; 方法的别名。</target>
        </trans-unit>
        <trans-unit id="abb95415195866c87feb578c0d9f4f86509e2260" translate="yes" xml:space="preserve">
          <source>This is a legacy method kept only for backwards compatibility with older applications. You should directly access &lt;code&gt;$_SESSION&lt;/code&gt; instead.</source>
          <target state="translated">这是一种旧方法，仅保留用于与旧应用程序向后兼容。您应该直接访问 &lt;code&gt;$_SESSION&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0e1fd9ad081de754a51b8c72d7e89d34e1dba7ed" translate="yes" xml:space="preserve">
          <source>This is a replacement for DateTime&amp;rsquo;s method of the same name. This allows the timezone to be set at the same time, and returns a &lt;strong&gt;Time&lt;/strong&gt; instance, instead of DateTime:</source>
          <target state="translated">这是相同名称的DateTime方法的替代。这允许同时设置时区，并返回一个&lt;strong&gt;Time&lt;/strong&gt;实例，而不是DateTime：</target>
        </trans-unit>
        <trans-unit id="3060d47837da9df022206aa4aba12247eb205c81" translate="yes" xml:space="preserve">
          <source>This is a security function that converts PHP tags to entities.</source>
          <target state="translated">这是一个将PHP标签转换为实体的安全功能。</target>
        </trans-unit>
        <trans-unit id="035e4dda7dcefc3930b3ee8a53d3484d091979e3" translate="yes" xml:space="preserve">
          <source>This is a security function that will strip image tags from a string. It leaves the image URL as plain text.</source>
          <target state="translated">这是一个安全功能,它将从字符串中剥离图像标签。它将图像URL作为纯文本保留。</target>
        </trans-unit>
        <trans-unit id="dff92e351491c493260d9b9f2b39c9cc098b765b" translate="yes" xml:space="preserve">
          <source>This is a wrapper around the insert() and update() methods that handle inserting or updating the record automatically, based on whether it finds an array key matching the $primaryKey value:</source>
          <target state="translated">这是一个围绕insert()和update()方法的包装器,它根据是否找到与$primaryKey值相匹配的数组键来自动处理插入或更新记录。</target>
        </trans-unit>
        <trans-unit id="e069dcca80eda6bc7378c978b82c64a0cb14ad76" translate="yes" xml:space="preserve">
          <source>This is an array of servers that will be used when using the &lt;code&gt;Memcache(d)&lt;/code&gt; handler.</source>
          <target state="translated">这是使用 &lt;code&gt;Memcache(d)&lt;/code&gt; 处理程序时将使用的服务器阵列。</target>
        </trans-unit>
        <trans-unit id="5ee55d46c3c981fd5ef918b421a80688c24f55af" translate="yes" xml:space="preserve">
          <source>This is an optional message string which can be used if you send HTML formatted email. It lets you specify an alternative message with no HTML formatting which is added to the header string for people who do not accept HTML email. If you do not set your own message CodeIgniter will extract the message from your HTML email and strip the tags.</source>
          <target state="translated">这是一个可选的消息字符串,如果你发送HTML格式的电子邮件,可以使用它。它可以让你指定一个没有HTML格式的信息,它被添加到标题字符串中,供不接受HTML邮件的人使用。如果你没有设置你自己的信息,CodeIgniter会从你的HTML邮件中提取信息,并去掉标签。</target>
        </trans-unit>
        <trans-unit id="382999574ddec134a2b20400054dd86fad046318" translate="yes" xml:space="preserve">
          <source>This is as good as storing them in plain-text. Really. Do &lt;strong&gt;hashing&lt;/strong&gt;, not &lt;em&gt;encoding&lt;/em&gt;.</source>
          <target state="translated">这与以纯文本格式存储它们一样好。真。做&lt;strong&gt;散列&lt;/strong&gt;，而不是&lt;em&gt;编码&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="88c7a1010e54a24f887aa60f47197fab7aed54c1" translate="yes" xml:space="preserve">
          <source>This is best used during cronjobs, data exports, or other large tasks.</source>
          <target state="translated">这在cronjob、数据导出或其他大型任务中使用最好。</target>
        </trans-unit>
        <trans-unit id="a27fd01dede0b6c37b30c76b1f17f557f9531984" translate="yes" xml:space="preserve">
          <source>This is configured in the file &lt;strong&gt;app/Config/Modules.php&lt;/strong&gt;.</source>
          <target state="translated">这是在文件&lt;strong&gt;app / Config / Modules.php中配置的&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="0c4a19f41f357e975c7ecf272280bda06a0a7837" translate="yes" xml:space="preserve">
          <source>This is equivalent to:</source>
          <target state="translated">这相当于:</target>
        </trans-unit>
        <trans-unit id="39fcc7d9a2d4d8517e8e7d24a5708085617456bb" translate="yes" xml:space="preserve">
          <source>This is especially useful with the Entity classes, which has an asArray method that returns all public and protected properties (minus the _options property) and makes them available to the Parser.</source>
          <target state="translated">这对实体类特别有用,因为实体类有一个asArray方法,可以返回所有的公共和保护属性(减去_options属性),并使它们对解析器可用。</target>
        </trans-unit>
        <trans-unit id="d6a284d8f53333c943cd1e45d959dfc4bf0c2758" translate="yes" xml:space="preserve">
          <source>This is identical to the &lt;strong&gt;equals&lt;/strong&gt; method, except that it only returns true when the date, time, AND timezone are all identical:</source>
          <target state="translated">除了只在日期，时间和时区都相同时才返回true，这与&lt;strong&gt;equals&lt;/strong&gt;方法相同：</target>
        </trans-unit>
        <trans-unit id="200c4026b3fd13a7453e27858cd84a346c47f52c" translate="yes" xml:space="preserve">
          <source>This is influenced by the cipher algorithm itself, the IV prepended to the cipher-text and the HMAC authentication message that is also prepended. Furthermore, the encrypted message is also Base64-encoded so that it is safe for storage and transmission, regardless of a possible character set in use.</source>
          <target state="translated">这是受密码算法本身、密码文本前面的IV和HMAC认证信息的影响,也是前面的。此外,加密后的信息也是Base64编码的,因此,无论使用哪种可能的字符集,它都能安全地存储和传输。</target>
        </trans-unit>
        <trans-unit id="41adae30504955c5e0c5d89e71609e62c9be21f5" translate="yes" xml:space="preserve">
          <source>This is influenced by the cipher algorithm itself, the initialization vector (IV) prepended to the cipher-text, and the HMAC authentication message that is also prepended. Furthermore, the encrypted message is also Base64-encoded so that it is safe for storage and transmission regardless of the character-set in use.</source>
          <target state="translated">这是受密码算法本身、密码文本预留的初始化向量(IV)以及同样预留的HMAC认证信息的影响。此外,加密后的信息也是Base64编码的,因此无论使用哪种字符集,它都能安全地存储和传输。</target>
        </trans-unit>
        <trans-unit id="c386959aa2d4ef7fa23c75f51074bfb6df3cc7de" translate="yes" xml:space="preserve">
          <source>This is just a basic class with a few internal helper methods. It is also extendable like any other library, if you really need to do that, but we are not going to explain how &amp;hellip; if you&amp;rsquo;re familiar with how class extensions/overrides work in CI, then you already know how to do it. If not, well, you shouldn&amp;rsquo;t be doing it in the first place.</source>
          <target state="translated">这只是带有一些内部帮助器方法的基本类。它也可以像其他任何库一样进行扩展，如果您确实需要这样做，但是我们将不解释如何&amp;hellip;&amp;hellip;如果您熟悉类扩展/覆盖在CI中的工作方式，那么您已经知道该怎么做。如果不是，那么，您不应该一开始就这样做。</target>
        </trans-unit>
        <trans-unit id="45ead81e1276f906103d34d31babcfa60150e9cd" translate="yes" xml:space="preserve">
          <source>This is just an example of course, and callbacks aren&amp;rsquo;t limited to models. You can use any object/method that accepts the field value as its&amp;rsquo; first parameter. You can also use an anonymous function:</source>
          <target state="translated">当然，这只是一个例子，回调不限于模型。您可以使用任何将字段值作为其第一个参数的对象/方法。您还可以使用匿名函数：</target>
        </trans-unit>
        <trans-unit id="2d53f9650f0a5183987badea2577aa5c5f9938b8" translate="yes" xml:space="preserve">
          <source>This is not a full cryptographic solution. If you need more capabilities, for example, public-key encryption, we suggest you consider direct use of OpenSSL or one of the other &lt;a href=&quot;https://www.php.net/manual/en/refs.crypto.php&quot;&gt;Cryptography Extensions&lt;/a&gt;. A more comprehensive package like &lt;a href=&quot;https://github.com/paragonie/halite&quot;&gt;Halite&lt;/a&gt; (an O-O package built on libsodium) is another possibility.</source>
          <target state="translated">这不是完整的密码解决方案。如果您需要更多功能（例如，公钥加密），建议您考虑直接使用OpenSSL或其他&lt;a href=&quot;https://www.php.net/manual/en/refs.crypto.php&quot;&gt;密码学扩展之一&lt;/a&gt;。还有一种更全面的软件包，例如&lt;a href=&quot;https://github.com/paragonie/halite&quot;&gt;Halite&lt;/a&gt;（基于libsodium构建的OO软件包）。</target>
        </trans-unit>
        <trans-unit id="669502e4399f2e5f2f0e859e1a4b242308109484" translate="yes" xml:space="preserve">
          <source>This is not actually a mode, it just says that a stream cipher is being used. Required because of the general cipher+mode initialization process.</source>
          <target state="translated">这其实不是一种模式,只是说正在使用流密码。因为一般的密码+模式初始化过程,所以需要。</target>
        </trans-unit>
        <trans-unit id="92087cd54fa13263562092c120e3e8602bac6050" translate="yes" xml:space="preserve">
          <source>This is not an accurate way of determining file MIME types, and is here strictly for convenience. It should not be used for security purposes.</source>
          <target state="translated">这不是确定文件 MIME 类型的准确方法,这里只是为了方便。它不应该被用于安全目的。</target>
        </trans-unit>
        <trans-unit id="61fefa9cf2bfc23c9a2d857606d6f03a913b7919" translate="yes" xml:space="preserve">
          <source>This is not the same as the File Uploading class in previous versions of CodeIgniter. This provides a raw interface to the uploaded files with a few small features.</source>
          <target state="translated">这和以前版本的CodeIgniter中的文件上传类是不一样的。它为上传的文件提供了一个原始的接口,并提供了一些小功能。</target>
        </trans-unit>
        <trans-unit id="0d174dfa8ae37e167b575ad463a5ad41d14043cf" translate="yes" xml:space="preserve">
          <source>This is purposeful: view files with no PHP.</source>
          <target state="translated">这样做的目的是:在没有PHP的情况下查看文件。</target>
        </trans-unit>
        <trans-unit id="dcf1c7e283a0d7f0f6962f045e122ce0146f7f1f" translate="yes" xml:space="preserve">
          <source>This is the array that is used during &lt;a href=&quot;../incoming/content_negotiation&quot;&gt;Content Negotiation&lt;/a&gt; to determine which type of response to return. If no matches are found between what the client requested and what you support, the first format in this array is what will be returned.</source>
          <target state="translated">这是在&lt;a href=&quot;../incoming/content_negotiation&quot;&gt;内容协商&lt;/a&gt;期间用于确定要返回的响应类型的数组。如果找不到客户端请求的内容和您支持的内容之间的匹配项，则此数组中的第一种格式将是返回的格式。</target>
        </trans-unit>
        <trans-unit id="d9f29cae0816377d851592c240f85b4ce65bfb2e" translate="yes" xml:space="preserve">
          <source>This is the first of three helper methods to work with the IntlDateFormatter without having to remember their values. This will return a string formatted as you would commonly use for datetime columns in a database (Y-m-d H:i:s):</source>
          <target state="translated">这是三个辅助方法中的第一个方法,可以在不需要记住它们的值的情况下使用IntlDateFormatter。它将返回一个格式化的字符串,就像数据库中的日期时间列一样(Y-m-d H:i:s)。</target>
        </trans-unit>
        <trans-unit id="6f2435c396ad9f1119caa02ccbbb626caf78c1a0" translate="yes" xml:space="preserve">
          <source>This is the localized version of DateTime&amp;rsquo;s format() method. Instead of using the values you might be familiar with, though, you must use values acceptable to the &lt;a href=&quot;https://www.php.net/manual/en/class.intldateformatter.php&quot;&gt;IntlDateFormatter&lt;/a&gt; class. A full listing of values can be found &lt;a href=&quot;https://unicode-org.github.io/icu-docs/apidoc/released/icu4c/classSimpleDateFormat.html#details&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">这是DateTime的format（）方法的本地化版本。但是，必须使用&lt;a href=&quot;https://www.php.net/manual/en/class.intldateformatter.php&quot;&gt;IntlDateFormatter&lt;/a&gt;类可以接受的值，而不是使用您可能熟悉的值。完整的值列表可以在&lt;a href=&quot;https://unicode-org.github.io/icu-docs/apidoc/released/icu4c/classSimpleDateFormat.html#details&quot;&gt;这里&lt;/a&gt;找到。</target>
        </trans-unit>
        <trans-unit id="a8c7636355d2088e815fd36fc826b72c57b00fb5" translate="yes" xml:space="preserve">
          <source>This is the method used by all other methods in this trait to return a response to the client.</source>
          <target state="translated">这是本trait中所有其他方法用来返回客户端响应的方法。</target>
        </trans-unit>
        <trans-unit id="358d455c1129277e19bb41a55f876aba29565665" translate="yes" xml:space="preserve">
          <source>This is the name of the column that uniquely identifies the records in this table. This does not necessarily have to match the primary key that is specified in the database, but is used with methods like &lt;code&gt;find()&lt;/code&gt; to know what column to match the specified value to.</source>
          <target state="translated">这是唯一标识此表中记录的列的名称。这不一定必须与数据库中指定的主键匹配，而是与诸如 &lt;code&gt;find()&lt;/code&gt; 之类的方法一起使用来知道将指定值匹配到哪个列。</target>
        </trans-unit>
        <trans-unit id="e6e72f595d3bc95a6b34147d296d518f7c4b19ba" translate="yes" xml:space="preserve">
          <source>This is the platform-independent base DB implementation class. This class will not be called directly. Rather, the adapter class for the specific database will extend and instantiate it.</source>
          <target state="translated">这是独立于平台的基础DB实现类。这个类不会被直接调用。相反,特定数据库的适配器类将扩展和实例化它。</target>
        </trans-unit>
        <trans-unit id="baff5411a9745a09c0b9598e3cc92499c81469bd" translate="yes" xml:space="preserve">
          <source>This is used by the &lt;code&gt;file&lt;/code&gt; handler to show where it should save the cache files to.</source>
          <target state="translated">&lt;code&gt;file&lt;/code&gt; 处理程序使用它来显示将缓存文件保存到的位置。</target>
        </trans-unit>
        <trans-unit id="d8a847f61b5611538c9fdd9401411d7e943408f1" translate="yes" xml:space="preserve">
          <source>This is used to signal a 404, Page Not Found error. When thrown, the system will show the view found at &lt;code&gt;/app/views/errors/html/error_404.php&lt;/code&gt;. You should customize all of the error views for your site. If, in &lt;code&gt;Config/Routes.php&lt;/code&gt;, you have specified a 404 Override, that will be called instead of the standard 404 page:</source>
          <target state="translated">这用于表示404，找不到页面错误。引发时，系统将显示在 &lt;code&gt;/app/views/errors/html/error_404.php&lt;/code&gt; 上找到的视图。您应该自定义网站的所有错误视图。如果在 &lt;code&gt;Config/Routes.php&lt;/code&gt; 中指定了404替代，则将调用该替代，而不是标准的404页面：</target>
        </trans-unit>
        <trans-unit id="dc974daba4e9c19d525ad69d70fb4d64806b9432" translate="yes" xml:space="preserve">
          <source>This is useful because unlike &lt;a href=&quot;#site_url&quot;&gt;&lt;code&gt;site_url()&lt;/code&gt;&lt;/a&gt;, you can supply a string to a file, such as an image or stylesheet. For example:</source>
          <target state="translated">这很有用，因为与&lt;a href=&quot;#site_url&quot;&gt; &lt;code&gt;site_url()&lt;/code&gt; &lt;/a&gt;不同，您可以向文件（例如图像或样式表）提供字符串。例如：</target>
        </trans-unit>
        <trans-unit id="f59e06cffb2ecea4cfd977cb168acb56148e5e30" translate="yes" xml:space="preserve">
          <source>This is useful in situations where you are using Query Builder to generate SQL (ex. &lt;code&gt;$builder-&amp;gt;getCompiledSelect()&lt;/code&gt;) but then choose to, for instance, run the query:</source>
          <target state="translated">在使用查询生成器生成SQL（例如 &lt;code&gt;$builder-&amp;gt;getCompiledSelect()&lt;/code&gt; ），然后选择运行查询的情况下，这很有用：</target>
        </trans-unit>
        <trans-unit id="1ab9fc60858c5ca99df16a923ff76a50ddf9445e" translate="yes" xml:space="preserve">
          <source>This is useful in situations where you are using Query Builder to generate SQL (ex. &lt;code&gt;$this-&amp;gt;db-&amp;gt;get_compiled_select()&lt;/code&gt;) but then choose to, for instance, run the query:</source>
          <target state="translated">这在使用查询生成器生成SQL（例如 &lt;code&gt;$this-&amp;gt;db-&amp;gt;get_compiled_select()&lt;/code&gt; ）但随后选择运行查询的情况下很有用：</target>
        </trans-unit>
        <trans-unit id="d7340815aed4509eb6565afec885a2f30faf7677" translate="yes" xml:space="preserve">
          <source>This is useful when sending the &lt;code&gt;$_POST&lt;/code&gt; array to one of your Models. This prevents users from sending additional POST data to be entered into your tables.</source>
          <target state="translated">将 &lt;code&gt;$_POST&lt;/code&gt; 数组发送到您的一个模型时，这很有用。这样可以防止用户发送其他POST数据以输入到您的表中。</target>
        </trans-unit>
        <trans-unit id="e2ce4631a4992534dc7754187bf4d1e921b04a8d" translate="yes" xml:space="preserve">
          <source>This is valid:</source>
          <target state="translated">这是有效的。</target>
        </trans-unit>
        <trans-unit id="98ce8e47e983bb85718fb19730d97b1dba9ccc3d" translate="yes" xml:space="preserve">
          <source>This is very important. Assigning by reference allows you to use the original CodeIgniter object rather than creating a copy of it.</source>
          <target state="translated">这一点非常重要。通过引用分配允许你使用原始的CodeIgniter对象,而不是创建一个副本。</target>
        </trans-unit>
        <trans-unit id="88474ddc9da224dad21b58710f7249d37266dafd" translate="yes" xml:space="preserve">
          <source>This library has been DEPRECATED and is only kept for backwards compatibility. Please use the new &lt;a href=&quot;encryption&quot;&gt;Encryption Library&lt;/a&gt;.</source>
          <target state="translated">该库已弃用，仅保留用于向后兼容。请使用新的&lt;a href=&quot;encryption&quot;&gt;加密库&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="25569ca66cc3e0ba2980987c091f61c816dcfe6a" translate="yes" xml:space="preserve">
          <source>This library is DEPRECATED and should not be used. It has always been with an &amp;lsquo;experimental&amp;rsquo; status and is now no longer supported. Currently only kept for backwards compatibility.</source>
          <target state="translated">该库已弃用，不应使用。它一直处于&amp;ldquo;实验&amp;rdquo;状态，现在不再受支持。当前仅保留用于向后兼容。</target>
        </trans-unit>
        <trans-unit id="1d57af5891abe3119d335369bae3901afc04792b" translate="yes" xml:space="preserve">
          <source>This locates migrations for a namespace (or all namespaces), determines which migrations have not yet been run, and runs them in order of their version (namespaces intermingled).</source>
          <target state="translated">该功能定位一个命名空间(或所有命名空间)的迁移,确定哪些迁移尚未运行,并按其版本顺序运行(混合命名空间)。</target>
        </trans-unit>
        <trans-unit id="4ee3c3f025e0a95cb2507b605499838c17ddc2c7" translate="yes" xml:space="preserve">
          <source>This means that your application works and you can start making changes to it.</source>
          <target state="translated">这意味着您的应用程序可以工作,您可以开始对其进行更改。</target>
        </trans-unit>
        <trans-unit id="46fa023d3e8a5a93ef24f7b6ce5a318cfabb63ee" translate="yes" xml:space="preserve">
          <source>This menu is useful if you run a membership site in which your users are allowed to set their local timezone value.</source>
          <target state="translated">如果你运行一个会员制网站,允许你的用户设置他们的本地时区值,这个菜单就很有用。</target>
        </trans-unit>
        <trans-unit id="eb018aa6d6924386288704c6f4a2c8916241abb6" translate="yes" xml:space="preserve">
          <source>This message displays all of the information necessary to know what the client is requesting. It tells the method for the request (GET, POST, DELETE, etc), and the version of HTTP it supports.</source>
          <target state="translated">该消息显示了了解客户端请求的所有必要信息。它告诉了请求的方法(GET、POST、DELETE等),以及它支持的HTTP版本。</target>
        </trans-unit>
        <trans-unit id="41f0ed10931730832b2d7b1cc14cc0a3751faf97" translate="yes" xml:space="preserve">
          <source>This method acts a lot like PHP&amp;rsquo;s own native &lt;code&gt;html_entity_decode()&lt;/code&gt; function in ENT_COMPAT mode, only it tries to detect HTML entities that don&amp;rsquo;t end in a semicolon because some browsers allow that.</source>
          <target state="translated">此方法的行为与ENT_COMPAT模式下PHP自己的本机html_entity_decode &lt;code&gt;html_entity_decode()&lt;/code&gt; 函数非常相似，只是它尝试检测不以分号结尾的HTML实体，因为某些浏览器允许这样做。</target>
        </trans-unit>
        <trans-unit id="1be8bd2dd2a1a632961e99c8f98dd721205b4060" translate="yes" xml:space="preserve">
          <source>This method allows you to define the exact instance that will be returned by the Services class. You can use this to set properties of a service so that it behaves in a certain way, or replace a service with a mocked class.</source>
          <target state="translated">该方法允许您定义服务类将返回的确切实例。你可以用这个方法来设置服务的属性,使它以某种方式运行,或者用一个模拟的类来替换服务。</target>
        </trans-unit>
        <trans-unit id="eece3cf23ca9b9a38289ffe9af6213bcbd5f1fbd" translate="yes" xml:space="preserve">
          <source>This method allows you to run other commands during the execution of your current command:</source>
          <target state="translated">此方法允许您在执行当前命令的过程中运行其他命令。</target>
        </trans-unit>
        <trans-unit id="843d7b2ac2c3e2b9897ca3affa43a08985fb9e5f" translate="yes" xml:space="preserve">
          <source>This method allows you to use dot-notation to search through an array for a specific-key, and allows the use of a the &amp;lsquo;*&amp;rsquo; wildcard. Given the following array:</source>
          <target state="translated">该方法允许您使用点符号在数组中搜索特定键，并允许使用'*'通配符。给定以下数组：</target>
        </trans-unit>
        <trans-unit id="3e4b819b5508be41a57b2ee65c79939fb347687e" translate="yes" xml:space="preserve">
          <source>This method also accepts an array of item keys to unset:</source>
          <target state="translated">本方法还接受一个要取消设置的项目键数组。</target>
        </trans-unit>
        <trans-unit id="03159809103f08878381276d1490b5a26671d6a4" translate="yes" xml:space="preserve">
          <source>This method checks both the PHP SAPI name currently in use and if the &lt;code&gt;STDIN&lt;/code&gt; constant is defined, which is usually a failsafe way to see if PHP is being run via the command line.</source>
          <target state="translated">此方法检查当前正在使用的PHP SAPI名称以及是否定义了 &lt;code&gt;STDIN&lt;/code&gt; 常量，这通常是一种故障安全的方法，用于查看是否通过命令行运行PHP。</target>
        </trans-unit>
        <trans-unit id="c788e27f64e88ce335c60250cbc328da173f7cd3" translate="yes" xml:space="preserve">
          <source>This method checks the associative array of variables available to your views. This is useful if for any reason a var is set in a library or another controller method using &lt;code&gt;$this-&amp;gt;load-&amp;gt;vars()&lt;/code&gt;.</source>
          <target state="translated">此方法检查可用于视图的变量关联数组。如果出于任何原因使用 &lt;code&gt;$this-&amp;gt;load-&amp;gt;vars()&lt;/code&gt; 在库或其他控制器方法中设置了var，则此方法很有用。</target>
        </trans-unit>
        <trans-unit id="edc18766fdf49a4699e67eb16f4279fbe37ea8ff" translate="yes" xml:space="preserve">
          <source>This method doesn&amp;rsquo;t work for batched inserts.</source>
          <target state="translated">此方法不适用于批量插入。</target>
        </trans-unit>
        <trans-unit id="401bb86ccb5ded7115a69d6312e30cc518878b00" translate="yes" xml:space="preserve">
          <source>This method doesn&amp;rsquo;t work for batched updates.</source>
          <target state="translated">此方法不适用于批量更新。</target>
        </trans-unit>
        <trans-unit id="700ae76eede772c87f162ebb221dc142157b7bd5" translate="yes" xml:space="preserve">
          <source>This method enables you to generate &lt;strong&gt;LIKE&lt;/strong&gt; clauses for HAVING part or the query, useful for doing searches.</source>
          <target state="translated">此方法使您可以为HAVING部分或查询生成&lt;strong&gt;LIKE&lt;/strong&gt;子句，这对于进行搜索很有用。</target>
        </trans-unit>
        <trans-unit id="93b59204ccd231321c0129754d64dad39ca98d53" translate="yes" xml:space="preserve">
          <source>This method enables you to generate &lt;strong&gt;LIKE&lt;/strong&gt; clauses, useful for doing searches.</source>
          <target state="translated">此方法使您可以生成&lt;strong&gt;LIKE&lt;/strong&gt;子句，对进行搜索很有用。</target>
        </trans-unit>
        <trans-unit id="e7eca912b2405289635397ae0b1828f3039d0886" translate="yes" xml:space="preserve">
          <source>This method executes a REPLACE statement, which is basically the SQL standard for (optional) DELETE + INSERT, using &lt;em&gt;PRIMARY&lt;/em&gt; and &lt;em&gt;UNIQUE&lt;/em&gt; keys as the determining factor. In our case, it will save you from the need to implement complex logics with different combinations of &lt;code&gt;select()&lt;/code&gt;, &lt;code&gt;update()&lt;/code&gt;, &lt;code&gt;delete()&lt;/code&gt; and &lt;code&gt;insert()&lt;/code&gt; calls.</source>
          <target state="translated">此方法使用&lt;em&gt;PRIMARY&lt;/em&gt;和&lt;em&gt;UNIQUE&lt;/em&gt;键作为确定因素，执行REPLACE语句，该语句基本上是（可选）DELETE + INSERT的SQL标准。在我们的例子中，它将使您无需使用 &lt;code&gt;select()&lt;/code&gt; ， &lt;code&gt;update()&lt;/code&gt; ， &lt;code&gt;delete()&lt;/code&gt; 和 &lt;code&gt;insert()&lt;/code&gt; 调用的不同组合来实现复杂的逻辑。</target>
        </trans-unit>
        <trans-unit id="52672f8c3b68fb7043511ad7887033bef1dc1943" translate="yes" xml:space="preserve">
          <source>This method gets a rule group from the validation configuration:</source>
          <target state="translated">本方法从验证配置中获取一个规则组。</target>
        </trans-unit>
        <trans-unit id="697f7b41b37fbc98edee428b246ae96e5189411e" translate="yes" xml:space="preserve">
          <source>This method is DEPRECATED and is now just an alias for the &lt;code&gt;is_cli()&lt;/code&gt; function.</source>
          <target state="translated">此方法已弃用，现在只是 &lt;code&gt;is_cli()&lt;/code&gt; 函数的别名。</target>
        </trans-unit>
        <trans-unit id="80a18e8b3d911d2d16c37ce7eac4888f4967dc3c" translate="yes" xml:space="preserve">
          <source>This method is DEPRECATED because it encourages usage of insecure coding practices. Your &lt;em&gt;system/&lt;/em&gt; directory shouldn&amp;rsquo;t be publicly accessible.</source>
          <target state="translated">已弃用此方法，因为它鼓励使用不安全的编码做法。您的&lt;em&gt;system /&lt;/em&gt;目录不应公开访问。</target>
        </trans-unit>
        <trans-unit id="f963378ce88a201592f9278399a22d7e82d8f19f" translate="yes" xml:space="preserve">
          <source>This method is DEPRECATED. Use &lt;code&gt;userdata()&lt;/code&gt; with no parameters instead.</source>
          <target state="translated">此方法已弃用。使用不带参数的 &lt;code&gt;userdata()&lt;/code&gt; 代替。</target>
        </trans-unit>
        <trans-unit id="d8470abcd2ae41be96ee7c95eb011b48a641cfbb" translate="yes" xml:space="preserve">
          <source>This method is almost identical to &lt;code&gt;segment()&lt;/code&gt;, except it adds a trailing and/or leading slash based on the second parameter. If the parameter is not used, a trailing slash added. Examples:</source>
          <target state="translated">此方法几乎与 &lt;code&gt;segment()&lt;/code&gt; 相同，只是它基于第二个参数添加了尾部和/或前导斜线。如果未使用该参数，则添加斜杠。例子：</target>
        </trans-unit>
        <trans-unit id="150404b9b63af6a59a4b4130a663ec9d7f68566b" translate="yes" xml:space="preserve">
          <source>This method is an alias for &lt;a href=&quot;../general/common_functions&quot;&gt;Common function&lt;/a&gt;&lt;code&gt;set_status_header()&lt;/code&gt;.</source>
          <target state="translated">此方法是&lt;a href=&quot;../general/common_functions&quot;&gt;通用函数&lt;/a&gt; &lt;code&gt;set_status_header()&lt;/code&gt; 的别名。</target>
        </trans-unit>
        <trans-unit id="778f3a13b8a8baf9d47751fb9b8bf014435c238c" translate="yes" xml:space="preserve">
          <source>This method is an alias for &lt;a href=&quot;../helpers/date_helper&quot;&gt;Date Helper&lt;/a&gt; function &lt;a href=&quot;../helpers/date_helper#days_in_month&quot;&gt;&lt;code&gt;days_in_month()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此方法是&lt;a href=&quot;../helpers/date_helper&quot;&gt;Date Helper&lt;/a&gt;函数&lt;a href=&quot;../helpers/date_helper#days_in_month&quot;&gt; &lt;code&gt;days_in_month()&lt;/code&gt; &lt;/a&gt;的别名。</target>
        </trans-unit>
        <trans-unit id="eb1b7ee4bdfe8f8d00f52af90a3c23d1c3828c17" translate="yes" xml:space="preserve">
          <source>This method is an alias of the &lt;a href=&quot;config&quot;&gt;config file loading method&lt;/a&gt;: &lt;code&gt;$this-&amp;gt;config-&amp;gt;load()&lt;/code&gt;</source>
          <target state="translated">此方法是&lt;a href=&quot;config&quot;&gt;配置文件加载方法&lt;/a&gt;的别名： &lt;code&gt;$this-&amp;gt;config-&amp;gt;load()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="57d182ffd2f3025960bb183a035a80a5d44c9056" translate="yes" xml:space="preserve">
          <source>This method is an alias of the &lt;a href=&quot;language&quot;&gt;language loading method&lt;/a&gt;: &lt;code&gt;$this-&amp;gt;lang-&amp;gt;load()&lt;/code&gt;.</source>
          <target state="translated">此方法是&lt;a href=&quot;language&quot;&gt;语言加载方法&lt;/a&gt;的别名： &lt;code&gt;$this-&amp;gt;lang-&amp;gt;load()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dcdabde96da9f26faabda544d38189b6a6904285" translate="yes" xml:space="preserve">
          <source>This method is automatically called when accessing drivers via &lt;code&gt;$this-&amp;gt;cache-&amp;gt;get()&lt;/code&gt;. However, if the individual drivers are used, make sure to call this method to ensure the driver is supported in the hosting environment.</source>
          <target state="translated">通过 &lt;code&gt;$this-&amp;gt;cache-&amp;gt;get()&lt;/code&gt; 访问驱动程序时，将自动调用此方法。但是，如果使用单个驱动程序，请确保调用此方法以确保宿主环境中支持该驱动程序。</target>
        </trans-unit>
        <trans-unit id="8f99fc25b7b6f81c366fe88ce322af7a6e0f19ae" translate="yes" xml:space="preserve">
          <source>This method is called automatically at the end of script execution, you won&amp;rsquo;t need to call it manually unless you are aborting script execution using &lt;code&gt;exit()&lt;/code&gt; or &lt;code&gt;die()&lt;/code&gt; in your code.</source>
          <target state="translated">脚本执行结束时会自动调用此方法，除非您使用代码中的 &lt;code&gt;exit()&lt;/code&gt; 或 &lt;code&gt;die()&lt;/code&gt; 中止脚本执行，否则无需手动调用它。</target>
        </trans-unit>
        <trans-unit id="965949d01d98948d1586cd3c5af0ee08018428a1" translate="yes" xml:space="preserve">
          <source>This method is identical to &lt;code&gt;d()&lt;/code&gt;, except that it also &lt;code&gt;dies()&lt;/code&gt; and no further code is executed this request.</source>
          <target state="translated">此方法与 &lt;code&gt;d()&lt;/code&gt; 相同，除了它也 &lt;code&gt;dies()&lt;/code&gt; 并且此请求不再执行任何代码。</target>
        </trans-unit>
        <trans-unit id="89dda063762a6aa97ceaa14a31b16c570c832ab8" translate="yes" xml:space="preserve">
          <source>This method is identical to &lt;code&gt;get()&lt;/code&gt;, &lt;code&gt;post()&lt;/code&gt; and &lt;code&gt;cookie()&lt;/code&gt;, only it fetches the &lt;em&gt;php://input&lt;/em&gt; stream data.</source>
          <target state="translated">此方法与 &lt;code&gt;get()&lt;/code&gt; ， &lt;code&gt;post()&lt;/code&gt; 和 &lt;code&gt;cookie()&lt;/code&gt; 相同，只是它获取&lt;em&gt;php：// input&lt;/em&gt;流数据。</target>
        </trans-unit>
        <trans-unit id="ac7a9fc248b1ccf55f10beb427def346e7b20813" translate="yes" xml:space="preserve">
          <source>This method is identical to &lt;code&gt;getPost()&lt;/code&gt; and &lt;code&gt;getGet()&lt;/code&gt;, only it fetches cookie data:</source>
          <target state="translated">此方法与 &lt;code&gt;getPost()&lt;/code&gt; 和 &lt;code&gt;getGet()&lt;/code&gt; 相同，只是它获取cookie数据：</target>
        </trans-unit>
        <trans-unit id="499d6fa6fa67cbd0c815e5fb1cabe2be1fe84f90" translate="yes" xml:space="preserve">
          <source>This method is identical to &lt;code&gt;getVar()&lt;/code&gt;, only it fetches GET data.</source>
          <target state="translated">此方法与 &lt;code&gt;getVar()&lt;/code&gt; 相同，只不过它获取GET数据。</target>
        </trans-unit>
        <trans-unit id="6c87cc6e9953d0d12bdd6eb618315fe7dffa08dc" translate="yes" xml:space="preserve">
          <source>This method is identical to &lt;code&gt;getVar()&lt;/code&gt;, only it fetches POST data.</source>
          <target state="translated">此方法与 &lt;code&gt;getVar()&lt;/code&gt; 相同，只不过它获取POST数据。</target>
        </trans-unit>
        <trans-unit id="dccfb8a4fa8c1f6cd70023219f5b4b1103ebd30c" translate="yes" xml:space="preserve">
          <source>This method is identical to &lt;code&gt;havingLike()&lt;/code&gt;, except that it generates NOT LIKE statements:</source>
          <target state="translated">除了生成NOT LIKE语句之外，此方法与 &lt;code&gt;havingLike()&lt;/code&gt; 相同：</target>
        </trans-unit>
        <trans-unit id="9fd39800406edc3c9c2e8de41391ce0c8bd35024" translate="yes" xml:space="preserve">
          <source>This method is identical to &lt;code&gt;item()&lt;/code&gt;, except it appends a forward slash to the end of the item, if it exists.</source>
          <target state="translated">此方法与 &lt;code&gt;item()&lt;/code&gt; 相同，除了它在项目的末尾附加正斜杠（如果存在）之外。</target>
        </trans-unit>
        <trans-unit id="a5d0707b464dc7e8b97d1ece8c58ac6b54e0e036" translate="yes" xml:space="preserve">
          <source>This method is identical to &lt;code&gt;like()&lt;/code&gt;, except that it generates NOT LIKE statements:</source>
          <target state="translated">此方法与 &lt;code&gt;like()&lt;/code&gt; 相同，除了它生成NOT LIKE语句之外：</target>
        </trans-unit>
        <trans-unit id="1d6d2234b79a3846512080aed8fc001a7cc20d6c" translate="yes" xml:space="preserve">
          <source>This method is identical to &lt;code&gt;notHavingLike()&lt;/code&gt;, except that multiple instances are joined by OR:</source>
          <target state="translated">此方法与 &lt;code&gt;notHavingLike()&lt;/code&gt; 相同，除了多个实例通过OR连接：</target>
        </trans-unit>
        <trans-unit id="4d3fd7e03f0e9554873a9facfb5f99e6ab704bb2" translate="yes" xml:space="preserve">
          <source>This method is identical to &lt;code&gt;notLike()&lt;/code&gt;, except that multiple instances are joined by OR:</source>
          <target state="translated">此方法与 &lt;code&gt;notLike()&lt;/code&gt; 相同，不同之处在于多个实例通过OR连接：</target>
        </trans-unit>
        <trans-unit id="ee7183003eb0d2e0931678848c0a4eb1d2a50526" translate="yes" xml:space="preserve">
          <source>This method is identical to &lt;code&gt;not_like()&lt;/code&gt;, except that multiple instances are joined by OR:</source>
          <target state="translated">此方法与 &lt;code&gt;not_like()&lt;/code&gt; 相同，除了多个实例通过OR连接：</target>
        </trans-unit>
        <trans-unit id="e1ba21b19255b3073e16f970c82002d2a9ac0bd7" translate="yes" xml:space="preserve">
          <source>This method is identical to &lt;code&gt;post()&lt;/code&gt; and &lt;code&gt;get()&lt;/code&gt;, only it fetches cookie data:</source>
          <target state="translated">此方法与 &lt;code&gt;post()&lt;/code&gt; 和 &lt;code&gt;get()&lt;/code&gt; 相同，只是它获取cookie数据：</target>
        </trans-unit>
        <trans-unit id="7c20e492e6b5437ff848f952246a472b7c97dee8" translate="yes" xml:space="preserve">
          <source>This method is identical to &lt;code&gt;post()&lt;/code&gt;, only it fetches GET data.</source>
          <target state="translated">此方法与 &lt;code&gt;post()&lt;/code&gt; 相同，只不过它获取GET数据。</target>
        </trans-unit>
        <trans-unit id="49437eb3550234325dcd55ac7395a497fd1f7475" translate="yes" xml:space="preserve">
          <source>This method is identical to &lt;code&gt;segment()&lt;/code&gt;, except that it lets you retrieve a specific segment from your re-routed URI in the event you are using CodeIgniter&amp;rsquo;s &lt;a href=&quot;../general/routing&quot;&gt;URI Routing&lt;/a&gt; feature.</source>
          <target state="translated">此方法与 &lt;code&gt;segment()&lt;/code&gt; 相同，除了在使用CodeIgniter的&lt;a href=&quot;../general/routing&quot;&gt;URI路由&lt;/a&gt;功能的情况下，它使您可以从重新路由的URI中检索特定的段。</target>
        </trans-unit>
        <trans-unit id="f9c088c46ad96fd523e8013afecdc9951bb326ea" translate="yes" xml:space="preserve">
          <source>This method is identical to &lt;code&gt;segment_array()&lt;/code&gt;, except that it returns the array of segments in your re-routed URI in the event you are using CodeIgniter&amp;rsquo;s &lt;a href=&quot;../general/routing&quot;&gt;URI Routing&lt;/a&gt; feature.</source>
          <target state="translated">此方法与 &lt;code&gt;segment_array()&lt;/code&gt; 相同，除了在使用CodeIgniter的&lt;a href=&quot;../general/routing&quot;&gt;URI路由&lt;/a&gt;功能的情况下，它会在重新路由的URI中返回段的数组。</target>
        </trans-unit>
        <trans-unit id="a4b1b4f4eda41ff9c2048ea97be2f4b17a2564ab" translate="yes" xml:space="preserve">
          <source>This method is identical to &lt;code&gt;slash_segment()&lt;/code&gt;, except that it lets you add slashes a specific segment from your re-routed URI in the event you are using CodeIgniter&amp;rsquo;s &lt;a href=&quot;../general/routing&quot;&gt;URI Routing&lt;/a&gt; feature.</source>
          <target state="translated">此方法与 &lt;code&gt;slash_segment()&lt;/code&gt; 相同，不同之处在于，在使用CodeIgniter的&lt;a href=&quot;../general/routing&quot;&gt;URI路由&lt;/a&gt;功能的情况下，它使您可以从重新路由的URI中添加斜线。</target>
        </trans-unit>
        <trans-unit id="b5857c30b5d157f8480853361e4910775e822d42" translate="yes" xml:space="preserve">
          <source>This method is identical to &lt;code&gt;total_segments()&lt;/code&gt;, except that it returns the total number of segments in your re-routed URI in the event you are using CodeIgniter&amp;rsquo;s &lt;a href=&quot;../general/routing&quot;&gt;URI Routing&lt;/a&gt; feature.</source>
          <target state="translated">此方法与 &lt;code&gt;total_segments()&lt;/code&gt; 相同，除了在使用CodeIgniter的&lt;a href=&quot;../general/routing&quot;&gt;URI路由&lt;/a&gt;功能的情况下，它在重新路由的URI中返回段的总数。</target>
        </trans-unit>
        <trans-unit id="c86771c81607bbbef96d8d48fb0b0429aa24701b" translate="yes" xml:space="preserve">
          <source>This method is identical to &lt;code&gt;uri_string()&lt;/code&gt;, except that it returns the re-routed URI in the event you are using CodeIgniter&amp;rsquo;s &lt;a href=&quot;../general/routing&quot;&gt;URI Routing&lt;/a&gt; feature.</source>
          <target state="translated">此方法与 &lt;code&gt;uri_string()&lt;/code&gt; 相同，除了在您使用CodeIgniter的&lt;a href=&quot;../general/routing&quot;&gt;URI路由&lt;/a&gt;功能时，它返回重新路由的URI。</target>
        </trans-unit>
        <trans-unit id="7f15500fce1c40ba960c01f83d133ba93e904030" translate="yes" xml:space="preserve">
          <source>This method is identical to &lt;code&gt;uri_to_assoc()&lt;/code&gt;, except that it creates an associative array using the re-routed URI in the event you are using CodeIgniter&amp;rsquo;s &lt;a href=&quot;../general/routing&quot;&gt;URI Routing&lt;/a&gt; feature.</source>
          <target state="translated">此方法与 &lt;code&gt;uri_to_assoc()&lt;/code&gt; 相同，除了在使用CodeIgniter的&lt;a href=&quot;../general/routing&quot;&gt;URI路由&lt;/a&gt;功能的情况下，它使用重新路由的URI创建关联数组。</target>
        </trans-unit>
        <trans-unit id="c93e901c04b9989d291497112e87fc2d46c0cd45" translate="yes" xml:space="preserve">
          <source>This method is identical to the &lt;code&gt;getPost()&lt;/code&gt;, &lt;code&gt;getGet()&lt;/code&gt; and &lt;code&gt;getCookie()&lt;/code&gt; methods, only it fetches getServer data (&lt;code&gt;$_SERVER&lt;/code&gt;):</source>
          <target state="translated">此方法与 &lt;code&gt;getPost()&lt;/code&gt; ， &lt;code&gt;getGet()&lt;/code&gt; 和 &lt;code&gt;getCookie()&lt;/code&gt; 方法相同，只不过它获取getServer数据（ &lt;code&gt;$_SERVER&lt;/code&gt; ）：</target>
        </trans-unit>
        <trans-unit id="4dd60c7775353dfe700d372425772b666f10ede5" translate="yes" xml:space="preserve">
          <source>This method is identical to the &lt;code&gt;post()&lt;/code&gt;, &lt;code&gt;get()&lt;/code&gt; and &lt;code&gt;cookie()&lt;/code&gt; methods from the &lt;a href=&quot;incomingrequest&quot;&gt;IncomingRequest Class&lt;/a&gt;, only it fetches getEnv data (&lt;code&gt;$_ENV&lt;/code&gt;):</source>
          <target state="translated">此方法与&lt;a href=&quot;incomingrequest&quot;&gt;IncomingRequest类中&lt;/a&gt;的 &lt;code&gt;post()&lt;/code&gt; ， &lt;code&gt;get()&lt;/code&gt; 和 &lt;code&gt;cookie()&lt;/code&gt; 方法相同，只不过它获取getEnv数据（ &lt;code&gt;$_ENV&lt;/code&gt; ）：</target>
        </trans-unit>
        <trans-unit id="03599b0d8f3ca86a38e560d848294d0d5daeee37" translate="yes" xml:space="preserve">
          <source>This method is identical to the &lt;code&gt;post()&lt;/code&gt;, &lt;code&gt;get()&lt;/code&gt; and &lt;code&gt;cookie()&lt;/code&gt; methods from the &lt;a href=&quot;incomingrequest&quot;&gt;IncomingRequest Class&lt;/a&gt;, only it fetches getServer data (&lt;code&gt;$_SERVER&lt;/code&gt;):</source>
          <target state="translated">此方法与&lt;a href=&quot;incomingrequest&quot;&gt;IncomingRequest类中&lt;/a&gt;的 &lt;code&gt;post()&lt;/code&gt; ， &lt;code&gt;get()&lt;/code&gt; 和 &lt;code&gt;cookie()&lt;/code&gt; 方法相同，只不过它获取getServer数据（ &lt;code&gt;$_SERVER&lt;/code&gt; ）：</target>
        </trans-unit>
        <trans-unit id="a26d1268fa08f2343c3691e9d359e96bde668e0d" translate="yes" xml:space="preserve">
          <source>This method is identical to the &lt;code&gt;post()&lt;/code&gt;, &lt;code&gt;get()&lt;/code&gt; and &lt;code&gt;cookie()&lt;/code&gt; methods, only it fetches server data (&lt;code&gt;$_SERVER&lt;/code&gt;):</source>
          <target state="translated">此方法与 &lt;code&gt;post()&lt;/code&gt; ， &lt;code&gt;get()&lt;/code&gt; 和 &lt;code&gt;cookie()&lt;/code&gt; 方法相同，只不过它获取服务器数据（ &lt;code&gt;$_SERVER&lt;/code&gt; ）：</target>
        </trans-unit>
        <trans-unit id="a3dcb8ed58e34cd61008734b761e57e3a8ece5d4" translate="yes" xml:space="preserve">
          <source>This method is identical to the one above, except that multiple instances are joined by OR:</source>
          <target state="translated">这种方法与上面的方法相同,只是多个实例用OR连接。</target>
        </trans-unit>
        <trans-unit id="e46269081faf3e2d5737a212ccef7711f4764db0" translate="yes" xml:space="preserve">
          <source>This method is just an alias for &lt;code&gt;db_connect(TRUE)&lt;/code&gt;.</source>
          <target state="translated">此方法只是 &lt;code&gt;db_connect(TRUE)&lt;/code&gt; 的别名。</target>
        </trans-unit>
        <trans-unit id="531338e85fd1fa3afc47e5ec70986b0d6c29afe3" translate="yes" xml:space="preserve">
          <source>This method is just an alias for PHP&amp;rsquo;s native &lt;a href=&quot;http://php.net/session_destroy&quot;&gt;session_destroy()&lt;/a&gt; function.</source>
          <target state="translated">此方法只是PHP的本机&lt;a href=&quot;http://php.net/session_destroy&quot;&gt;session_destroy（）&lt;/a&gt;函数的别名。</target>
        </trans-unit>
        <trans-unit id="e80cf159ab4224777f589e32e0470e160df18ec0" translate="yes" xml:space="preserve">
          <source>This method is just an alias for PHP&amp;rsquo;s native &lt;a href=&quot;http://php.net/session_regenerate_id&quot;&gt;session_regenerate_id()&lt;/a&gt; function.</source>
          <target state="translated">此方法只是PHP的本机&lt;a href=&quot;http://php.net/session_regenerate_id&quot;&gt;session_regenerate_id（）&lt;/a&gt;函数的别名。</target>
        </trans-unit>
        <trans-unit id="0c56cea4cd3e4559f8baf9ebc034bd43be2d9338" translate="yes" xml:space="preserve">
          <source>This method is normally accessed via the corresponding functions in the &lt;a href=&quot;../helpers/url_helper&quot;&gt;URL Helper&lt;/a&gt;.</source>
          <target state="translated">通常通过&lt;a href=&quot;../helpers/url_helper&quot;&gt;URL Helper中&lt;/a&gt;的相应功能访问此方法。</target>
        </trans-unit>
        <trans-unit id="913a6595962d5864fe7811098bf7f61b48e06d43" translate="yes" xml:space="preserve">
          <source>This method is not suitable for filtering HTML attribute values! Use &lt;a href=&quot;../general/common_functions#html_escape&quot;&gt;&lt;code&gt;html_escape()&lt;/code&gt;&lt;/a&gt; for that instead.</source>
          <target state="translated">此方法不适用于过滤HTML属性值！改用&lt;a href=&quot;../general/common_functions#html_escape&quot;&gt; &lt;code&gt;html_escape()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7da4391a14e1f9c37dac85bbf3e55f4d74122d7b" translate="yes" xml:space="preserve">
          <source>This method is not typically very reliable since some browsers do not provide character-set info, and even among those that do, it is not always accurate.</source>
          <target state="translated">这种方法通常不是很可靠,因为有些浏览器不提供字符集信息,即使提供了,也不一定准确。</target>
        </trans-unit>
        <trans-unit id="d6bc2f2034123c76362f7494182650f2ee61abc0" translate="yes" xml:space="preserve">
          <source>This method is not typically very reliable since some browsers do not provide language info, and even among those that do, it is not always accurate.</source>
          <target state="translated">这种方法通常不是很可靠,因为有些浏览器不提供语言信息,即使是那些提供语言信息的浏览器,也不一定准确。</target>
        </trans-unit>
        <trans-unit id="37ed3a3e6d29b7e685b819e2bd9fddb0951bcbdb" translate="yes" xml:space="preserve">
          <source>This method is particularly helpful when used with &lt;code&gt;groupBy()&lt;/code&gt;. For counting results generally see &lt;code&gt;countAll()&lt;/code&gt; or &lt;code&gt;countAllResults()&lt;/code&gt;.</source>
          <target state="translated">与 &lt;code&gt;groupBy()&lt;/code&gt; 一起使用时，此方法特别有用。对于计数结果，通常请参见 &lt;code&gt;countAll()&lt;/code&gt; 或 &lt;code&gt;countAllResults()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d986ef9f8de3c4828ef0e000f499c62b3071bea4" translate="yes" xml:space="preserve">
          <source>This method is similar to &lt;code&gt;auto_typography()&lt;/code&gt; above, except that it only does character conversion:</source>
          <target state="translated">此方法与上面的 &lt;code&gt;auto_typography()&lt;/code&gt; 相似，不同之处在于它仅执行字符转换：</target>
        </trans-unit>
        <trans-unit id="a17ef441a3b62409c2e4b6351fa2e4863328586c" translate="yes" xml:space="preserve">
          <source>This method is used extensively by the Query Builder class.</source>
          <target state="translated">这个方法被Query Builder类广泛使用。</target>
        </trans-unit>
        <trans-unit id="cbc3a53a6784229c06ffef3dfb87e22fad0302b1" translate="yes" xml:space="preserve">
          <source>This method is used internally to derive an encryption and HMAC key from your configured &lt;em&gt;encryption_key&lt;/em&gt;.</source>
          <target state="translated">在内部使用此方法从配置的&lt;em&gt;encryption_key&lt;/em&gt;派生加密和HMAC密钥。</target>
        </trans-unit>
        <trans-unit id="6113e31189d4ec9be607748dc1692e877d109be2" translate="yes" xml:space="preserve">
          <source>This method is used to load core classes.</source>
          <target state="translated">该方法用于加载核心类。</target>
        </trans-unit>
        <trans-unit id="2db4213c18bbc138ec8c6fe22bcf52f479fcb035" translate="yes" xml:space="preserve">
          <source>This method is used to load driver libraries, acts very much like the &lt;code&gt;library()&lt;/code&gt; method.</source>
          <target state="translated">此方法用于加载驱动程序库，其行为与 &lt;code&gt;library()&lt;/code&gt; 方法非常相似。</target>
        </trans-unit>
        <trans-unit id="ec6e3e6d321edd0f3ca30ceb9d2d531cfb27ca27" translate="yes" xml:space="preserve">
          <source>This method is used to load your View files. If you haven&amp;rsquo;t read the &lt;a href=&quot;../general/views&quot;&gt;Views&lt;/a&gt; section of the user guide it is recommended that you do since it shows you how this method is typically used.</source>
          <target state="translated">此方法用于加载您的View文件。如果您尚未阅读用户指南的&amp;ldquo; &lt;a href=&quot;../general/views&quot;&gt;视图&amp;rdquo;&lt;/a&gt;部分，则建议您这样做，因为它向您显示了通常使用此方法的方式。</target>
        </trans-unit>
        <trans-unit id="33ef2314f530a181f616c7f11a67b840235c6e52" translate="yes" xml:space="preserve">
          <source>This method lets multiple trackbacks to be sent. It takes a string of URLs (separated by comma or space) and puts each URL into an array.</source>
          <target state="translated">这个方法可以发送多个trackbacks,它接收一串URL(用逗号或空格隔开),并将每个URL放入数组。它接收一串URL(用逗号或空格分隔),并将每个URL放入一个数组中。</target>
        </trans-unit>
        <trans-unit id="295023d43f4dc7e6bf19a3a3bf04872f2435d9b8" translate="yes" xml:space="preserve">
          <source>This method lets you load the database class. The two parameters are &lt;strong&gt;optional&lt;/strong&gt;. Please see the &lt;a href=&quot;../database/index&quot;&gt;database&lt;/a&gt; section for more info.</source>
          <target state="translated">此方法使您可以加载数据库类。这两个参数是&lt;strong&gt;可选的&lt;/strong&gt;。请参阅&lt;a href=&quot;../database/index&quot;&gt;数据库&lt;/a&gt;部分以获取更多信息。</target>
        </trans-unit>
        <trans-unit id="b8439f40fdab0e4221bacbcad1dbf0b5b11af7e2" translate="yes" xml:space="preserve">
          <source>This method lets you send an error message from your server to the client. First parameter is the error number while the second parameter is the error message.</source>
          <target state="translated">这个方法可以让你从服务器向客户端发送错误信息。第一个参数是错误编号,第二个参数是错误信息。</target>
        </trans-unit>
        <trans-unit id="c2502b9d0f94349a2144f67720b0c946564547d6" translate="yes" xml:space="preserve">
          <source>This method lets you turn URI segments into an associative array of key/value pairs. Consider this URI:</source>
          <target state="translated">这个方法可以让你把URI段变成一个键/值对的关联数组。考虑这个URI。</target>
        </trans-unit>
        <trans-unit id="c1a19e89bb15b6f745647911f4b2420048af3e31" translate="yes" xml:space="preserve">
          <source>This method loads helper files, where file_name is the name of the file, without the _helper.php extension.</source>
          <target state="translated">本方法加载帮助文件,其中file_name是文件名,不含_helper.php扩展名。</target>
        </trans-unit>
        <trans-unit id="ed8df8dd586e4100135f4d1049851aaa2cf37c1e" translate="yes" xml:space="preserve">
          <source>This method makes sure that you have a valid month/year. For example, if you submit 13 as the month, the year will increment and the month will become January:</source>
          <target state="translated">这个方法可以确保你有一个有效的月份/年份。例如,如果你提交的月份是13,那么年份将递增,月份将变成1月。</target>
        </trans-unit>
        <trans-unit id="e2cd9ea6f0323a40a488bf2316ff87698067a037" translate="yes" xml:space="preserve">
          <source>This method permits changing the properties of a given item. Typically it is called from the &amp;ldquo;view cart&amp;rdquo; page if a user makes changes to the quantity before checkout. That array must contain the rowid for each item.</source>
          <target state="translated">此方法允许更改给定项目的属性。通常，如果用户在结帐前对数量进行更改，则从&amp;ldquo;查看购物车&amp;rdquo;页面中调用它。该数组必须包含每个项目的rowid。</target>
        </trans-unit>
        <trans-unit id="9caf8ac0e013064406bf4823e4656c23659302e1" translate="yes" xml:space="preserve">
          <source>This method retrieves all variables available to your views.</source>
          <target state="translated">此方法检索视图中所有可用的变量。</target>
        </trans-unit>
        <trans-unit id="fc2f00cd6e9961c618d2d7a6150b482df3de86fd" translate="yes" xml:space="preserve">
          <source>This method retrieves the URL to your CodeIgniter system/ directory.</source>
          <target state="translated">本方法检索到你的CodeIgniter系统/目录的URL。</target>
        </trans-unit>
        <trans-unit id="51731d403f9247bce5f75b8bf4f3088a162a352c" translate="yes" xml:space="preserve">
          <source>This method retrieves the URL to your site, along with the &amp;ldquo;index&amp;rdquo; value you&amp;rsquo;ve specified in the config file.</source>
          <target state="translated">该方法检索您网站的URL，以及您在配置文件中指定的&amp;ldquo;索引&amp;rdquo;值。</target>
        </trans-unit>
        <trans-unit id="f1d1e48140008aa39379028f9d8b6da04b9e8d31" translate="yes" xml:space="preserve">
          <source>This method retrieves the URL to your site, plus an optional path such as to a stylesheet or image.</source>
          <target state="translated">这个方法可以检索到你的网站的URL,加上一个可选的路径,如样式表或图片。</target>
        </trans-unit>
        <trans-unit id="2c8cd2cf99ebbf62a14488f3806b7cd551d10bb8" translate="yes" xml:space="preserve">
          <source>This method returns a boolean true if there are links to a page before and after, respectively, the current page being displayed.</source>
          <target state="translated">如果在显示当前页面之前和之后分别有链接,则此方法返回一个布尔值为真。</target>
        </trans-unit>
        <trans-unit id="459349e0f1a198c00774e50afc8dd04fa8cdaf29" translate="yes" xml:space="preserve">
          <source>This method returns a single result row without prefetching the whole result in memory as &lt;code&gt;row()&lt;/code&gt; does. If your query has more than one row, it returns the current row and moves the internal data pointer ahead.</source>
          <target state="translated">此方法返回单个结果行，而不像 &lt;code&gt;row()&lt;/code&gt; 那样预取整个结果在内存中。如果查询有多行，它将返回当前行并将内部数据指针向前移动。</target>
        </trans-unit>
        <trans-unit id="c4273a5edcb0c1dfcb16d1b1785f211e71c3ee99" translate="yes" xml:space="preserve">
          <source>This method returns a single result row. If your query has more than one row, it returns only the first row. The result is returned as an &lt;strong&gt;object&lt;/strong&gt;. Here&amp;rsquo;s a usage example:</source>
          <target state="translated">此方法返回单个结果行。如果查询有多个行，则仅返回第一行。结果作为&lt;strong&gt;对象&lt;/strong&gt;返回。这是一个用法示例：</target>
        </trans-unit>
        <trans-unit id="7020f2be64422f0c7eacccf181d574687b4b8d1a" translate="yes" xml:space="preserve">
          <source>This method returns the User Agent string from the SERVER data:</source>
          <target state="translated">本方法从SERVER数据中返回用户代理字符串。</target>
        </trans-unit>
        <trans-unit id="aac6d5ccd122b4b9f003baa89bb5cefffc12ecb9" translate="yes" xml:space="preserve">
          <source>This method returns the query result as a pure array, or an empty array when no result is produced. Typically you&amp;rsquo;ll use this in a foreach loop, like this:</source>
          <target state="translated">此方法以纯数组形式返回查询结果，如果不生成结果，则以空数组形式返回查询结果。通常，您将在foreach循环中使用它，如下所示：</target>
        </trans-unit>
        <trans-unit id="f2f54038f7b1b6c8097683eec5e9cb50cb5c0c98" translate="yes" xml:space="preserve">
          <source>This method returns the query result as an array of &lt;strong&gt;objects&lt;/strong&gt;, or &lt;strong&gt;an empty array&lt;/strong&gt; on failure. Typically you&amp;rsquo;ll use this in a foreach loop, like this:</source>
          <target state="translated">此方法以&lt;strong&gt;对象&lt;/strong&gt;数组或失败时&lt;strong&gt;为空数组的形式&lt;/strong&gt;返回查询结果。通常，您将在foreach循环中使用它，如下所示：</target>
        </trans-unit>
        <trans-unit id="d6cecd9c4c25c39cb8bed24bd2b4c6f12119428f" translate="yes" xml:space="preserve">
          <source>This method returns the xml result from database result. You can do like this:</source>
          <target state="translated">本方法从数据库结果中返回xml结果。你可以这样做。</target>
        </trans-unit>
        <trans-unit id="cd8fec557fdc64db510090ddd1120b02664a9e14" translate="yes" xml:space="preserve">
          <source>This method sets a rule group from the validation configuration to the validation service:</source>
          <target state="translated">本方法将验证配置中的规则组设置为验证服务。</target>
        </trans-unit>
        <trans-unit id="8e5dc370e21cd301042a28c8a6727e3907c78908" translate="yes" xml:space="preserve">
          <source>This method sets a single rule. It takes the name of the field as the first parameter, an optional label and a string with a pipe-delimited list of rules that should be applied:</source>
          <target state="translated">这个方法设置一条规则。它将字段的名称作为第一个参数,一个可选的标签和一个字符串,其中包含一个以管道限定的规则列表,这些规则应该被应用。</target>
        </trans-unit>
        <trans-unit id="972dabf6c801253a13d89cf6c8ab822c1d037af4" translate="yes" xml:space="preserve">
          <source>This method sets the internal pointer for the next result row to be fetched. It is only useful in combination with &lt;code&gt;getUnbufferedRow()&lt;/code&gt;.</source>
          <target state="translated">此方法为要提取的下一个结果行设置内部指针。它仅与 &lt;code&gt;getUnbufferedRow()&lt;/code&gt; 结合使用。</target>
        </trans-unit>
        <trans-unit id="a51b393032241d4fbafdb891bcd50a42623cb279" translate="yes" xml:space="preserve">
          <source>This method sets the internal pointer for the next result row to be fetched. It is only useful in combination with &lt;code&gt;unbuffered_row()&lt;/code&gt;.</source>
          <target state="translated">此方法为要提取的下一个结果行设置内部指针。仅在与 &lt;code&gt;unbuffered_row()&lt;/code&gt; 结合使用时才有用。</target>
        </trans-unit>
        <trans-unit id="df2f4f9eb6ae1cc46b206e63f007d46a24074911" translate="yes" xml:space="preserve">
          <source>This method simply returns the line. It does not echo it.</source>
          <target state="translated">这个方法只是返回这一行。而不是回声。</target>
        </trans-unit>
        <trans-unit id="037b6bf978690a05524bc80443bb032593936ac7" translate="yes" xml:space="preserve">
          <source>This method simply validates the incoming TB data, returning TRUE on success and FALSE on failure. If the data is valid it is set to the &lt;code&gt;$this-&amp;gt;data&lt;/code&gt; array so that it can be inserted into a database.</source>
          <target state="translated">此方法仅验证传入的TB数据，成功则返回TRUE，失败则返回FALSE。如果数据有效，则将其设置为 &lt;code&gt;$this-&amp;gt;data&lt;/code&gt; 数组，以便可以将其插入数据库。</target>
        </trans-unit>
        <trans-unit id="31654035f9053da2e075e98a9972dfdd8a79f8c1" translate="yes" xml:space="preserve">
          <source>This method takes a UNIX timestamp and, optionally, the timezone and locale, to create a new Time instance:</source>
          <target state="translated">这个方法需要一个UNIX时间戳和可选的时区和地域,来创建一个新的时间实例。</target>
        </trans-unit>
        <trans-unit id="d14f05b182a4f93daa9f2214d0b50d6b556d0116" translate="yes" xml:space="preserve">
          <source>This method takes a one-dimensional array as input and creates a multi-dimensional array with a depth equal to the number of columns desired. This allows a single array with many elements to be displayed in a table that has a fixed column count. Consider this example:</source>
          <target state="translated">此方法将一维数组作为输入,并创建一个深度等于所需列数的多维数组。这就允许在一个有固定列数的表中显示一个有许多元素的单一数组。考虑这个例子。</target>
        </trans-unit>
        <trans-unit id="7b1532965e5b32c61e001d8c9976acca771903cf" translate="yes" xml:space="preserve">
          <source>This method takes an associative array as input and generates variables using the PHP &lt;a href=&quot;http://php.net/extract&quot;&gt;extract()&lt;/a&gt; function. This method produces the same result as using the second parameter of the &lt;code&gt;$this-&amp;gt;load-&amp;gt;view()&lt;/code&gt; method above. The reason you might want to use this method independently is if you would like to set some global variables in the constructor of your controller and have them become available in any view file loaded from any method. You can have multiple calls to this method. The data get cached and merged into one array for conversion to variables.</source>
          <target state="translated">该方法将一个关联数组作为输入，并使用PHP &lt;a href=&quot;http://php.net/extract&quot;&gt;extract（）&lt;/a&gt;函数生成变量。此方法产生的结果与上面 &lt;code&gt;$this-&amp;gt;load-&amp;gt;view()&lt;/code&gt; 方法的第二个参数相同。您可能想独立使用此方法的原因是，如果您想在控制器的构造函数中设置一些全局变量，并使它们在从任何方法加载的任何视图文件中可用。您可以多次调用此方法。数据被缓存并合并到一个数组中以转换为变量。</target>
        </trans-unit>
        <trans-unit id="e41e04171a3ebb3a8f347ee790bed8205ae22e26" translate="yes" xml:space="preserve">
          <source>This method takes into account the &lt;code&gt;$config['proxy_ips']&lt;/code&gt; setting and will return the reported HTTP_X_FORWARDED_FOR, HTTP_CLIENT_IP, HTTP_X_CLIENT_IP or HTTP_X_CLUSTER_CLIENT_IP address for the allowed IP addresses.</source>
          <target state="translated">此方法考虑了 &lt;code&gt;$config['proxy_ips']&lt;/code&gt; 设置，并将为允许的IP地址返回报告的HTTP_X_FORWARDED_FOR，HTTP_CLIENT_IP，HTTP_X_CLIENT_IP或HTTP_X_CLUSTER_CLIENT_IP地址。</target>
        </trans-unit>
        <trans-unit id="d7d020ce5d0fa983df00559315baac443c590c86" translate="yes" xml:space="preserve">
          <source>This method takes into account the &lt;code&gt;App-&amp;gt;proxyIPs&lt;/code&gt; setting and will return the reported HTTP_X_FORWARDED_FOR, HTTP_CLIENT_IP, HTTP_X_CLIENT_IP, or HTTP_X_CLUSTER_CLIENT_IP address for the allowed IP address.</source>
          <target state="translated">此方法考虑了 &lt;code&gt;App-&amp;gt;proxyIPs&lt;/code&gt; 设置，并将为允许的IP地址返回报告的HTTP_X_FORWARDED_FOR，HTTP_CLIENT_IP，HTTP_X_CLIENT_IP或HTTP_X_CLUSTER_CLIENT_IP地址。</target>
        </trans-unit>
        <trans-unit id="958be113167b12a2b240c1a1566480a2e8fe362f" translate="yes" xml:space="preserve">
          <source>This method used to act EXACTLY like &lt;code&gt;post_get()&lt;/code&gt;, but it&amp;rsquo;s behavior has changed in CodeIgniter 3.0.</source>
          <target state="translated">该方法过去的作用与 &lt;code&gt;post_get()&lt;/code&gt; 完全相同，但是其行为在CodeIgniter 3.0中已更改。</target>
        </trans-unit>
        <trans-unit id="fa052b05e00e0f9febeadcdb19232a667059df74" translate="yes" xml:space="preserve">
          <source>This method will &amp;lsquo;clean&amp;rsquo; the entire cache. If the deletion of the cache files fails, the method will return FALSE.</source>
          <target state="translated">此方法将&amp;ldquo;清除&amp;rdquo;整个缓存。如果删除缓存文件失败，则该方法将返回FALSE。</target>
        </trans-unit>
        <trans-unit id="8325f80eeae2146036e6788ac2012a5ef6cabcc6" translate="yes" xml:space="preserve">
          <source>This method will NOT write the CSV file for you. It simply creates the CSV layout. If you need to write the file use the &lt;a href=&quot;../helpers/file_helper&quot;&gt;File Helper&lt;/a&gt;.</source>
          <target state="translated">此方法不会为您编写CSV文件。它只是创建CSV布局。如果您需要编写文件，请使用&lt;a href=&quot;../helpers/file_helper&quot;&gt;File Helper&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="afa7f2da88fc19349a904dfd68b863d904c6c765" translate="yes" xml:space="preserve">
          <source>This method will NOT write the XML file for you. It simply creates the XML layout. If you need to write the file use the &lt;a href=&quot;../helpers/file_helper&quot;&gt;File Helper&lt;/a&gt;.</source>
          <target state="translated">此方法不会为您编写XML文件。它只是创建XML布局。如果您需要编写文件，请使用&lt;a href=&quot;../helpers/file_helper&quot;&gt;File Helper&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="808c1b9865ce562940ee8da7ba15a82051c0f0fa" translate="yes" xml:space="preserve">
          <source>This method will attempt to fetch an item from the cache store. If the item does not exist, the method will return FALSE.</source>
          <target state="translated">本方法将尝试从缓存存储中获取一个项目,如果项目不存在,本方法将返回FALSE。如果项目不存在,本方法将返回FALSE。</target>
        </trans-unit>
        <trans-unit id="a9c4e85dffe66c94944fd6ae8a3831f9f50b2d39" translate="yes" xml:space="preserve">
          <source>This method will attempt to fetch an item from the cache store. If the item does not exist, the method will return NULL.</source>
          <target state="translated">本方法将尝试从缓存存储中获取一个项目,如果项目不存在,本方法将返回NULL。如果项目不存在,本方法将返回NULL。</target>
        </trans-unit>
        <trans-unit id="56a22195165acca064e9023bbfda2654e4f8e427" translate="yes" xml:space="preserve">
          <source>This method will automatically clear all parameters if the request was successful. To stop this behaviour pass FALSE:</source>
          <target state="translated">如果请求成功,本方法将自动清除所有参数。要停止这种行为,请传递FALSE。</target>
        </trans-unit>
        <trans-unit id="38ad4d2473614dce0049e83250e1ba44369f0a6c" translate="yes" xml:space="preserve">
          <source>This method will delete a specific item from the cache store. If item deletion fails, the method will return FALSE.</source>
          <target state="translated">本方法将从缓存存储中删除一个特定的项目,如果项目删除失败,本方法将返回FALSE。如果项目删除失败,本方法将返回FALSE。</target>
        </trans-unit>
        <trans-unit id="22b4061c7a24637f33f63604c6b28d8f6f126629" translate="yes" xml:space="preserve">
          <source>This method will return detailed information on a specific item in the cache.</source>
          <target state="translated">本方法将返回缓存中特定项目的详细信息。</target>
        </trans-unit>
        <trans-unit id="83588aee58c99808b58db31a32a923040295071e" translate="yes" xml:space="preserve">
          <source>This method will return information on the entire cache.</source>
          <target state="translated">这个方法将返回整个缓存的信息。</target>
        </trans-unit>
        <trans-unit id="7063c2aa524e3978a76a52cd3562563acead6a64" translate="yes" xml:space="preserve">
          <source>This method will return the body of the response as a JSON string:</source>
          <target state="translated">这个方法将以JSON字符串的形式返回响应的主体。</target>
        </trans-unit>
        <trans-unit id="3fc454919914e668e0db3cdb062a2d2859a9f907" translate="yes" xml:space="preserve">
          <source>This method will save an item to the cache store. If saving fails, the method will return FALSE.</source>
          <target state="translated">本方法将保存一个项目到缓存中。如果保存失败,本方法将返回FALSE。</target>
        </trans-unit>
        <trans-unit id="9dd1a2c30c865d0b951a07fdc7ddcb9a3fc15755" translate="yes" xml:space="preserve">
          <source>This method will terminate script execution.</source>
          <target state="translated">本方法将终止脚本的执行。</target>
        </trans-unit>
        <trans-unit id="bdb56983b0d0bc558cfc50a168cfb83e2eb4de63" translate="yes" xml:space="preserve">
          <source>This method works exactly like &lt;code&gt;parse()&lt;/code&gt;, only it accepts the template as a string instead of loading a view file.</source>
          <target state="translated">此方法的工作方式与 &lt;code&gt;parse()&lt;/code&gt; 完全相同，只是它接受模板作为字符串，而不是加载视图文件。</target>
        </trans-unit>
        <trans-unit id="e35ecca7556ce31b80192235c6c6a0e345d05df3" translate="yes" xml:space="preserve">
          <source>This method works pretty much the same way as &lt;code&gt;getPost()&lt;/code&gt; and &lt;code&gt;getGet()&lt;/code&gt;, only combined. It will search through both POST and GET streams for data, looking first in GET, and then in POST:</source>
          <target state="translated">此方法与 &lt;code&gt;getPost()&lt;/code&gt; 和 &lt;code&gt;getGet()&lt;/code&gt; （仅合并在一起）的工作方式几乎相同。它将在POST和GET流中搜索数据，首先在GET中查找，然后在POST中查找：</target>
        </trans-unit>
        <trans-unit id="3df74bf7008b9cd5a5783ae9da7234c50a2a5efe" translate="yes" xml:space="preserve">
          <source>This method works pretty much the same way as &lt;code&gt;getPost()&lt;/code&gt; and &lt;code&gt;getGet()&lt;/code&gt;, only combined. It will search through both POST and GET streams for data, looking first in POST, and then in GET:</source>
          <target state="translated">此方法与 &lt;code&gt;getPost()&lt;/code&gt; 和 &lt;code&gt;getGet()&lt;/code&gt; （仅合并在一起）的工作方式几乎相同。它将在POST和GET流中搜索数据，首先在POST中查找，然后在GET中查找：</target>
        </trans-unit>
        <trans-unit id="52ab50e1346fbc3c91d2f1fe0e57909f5e232090" translate="yes" xml:space="preserve">
          <source>This method works pretty much the same way as &lt;code&gt;post()&lt;/code&gt; and &lt;code&gt;get()&lt;/code&gt;, only combined. It will search through both POST and GET streams for data, looking in POST first, and then in GET:</source>
          <target state="translated">此方法与 &lt;code&gt;post()&lt;/code&gt; 和 &lt;code&gt;get()&lt;/code&gt; （仅组合在一起）的工作方式几乎相同。它将在POST和GET流中搜索数据，首先在POST中查找，然后在GET中查找：</target>
        </trans-unit>
        <trans-unit id="4c871b6c84a391e61ad1c7aa769a53c5e76a100a" translate="yes" xml:space="preserve">
          <source>This method works the same way as &lt;code&gt;post_get()&lt;/code&gt; only it looks for GET data first.</source>
          <target state="translated">此方法与 &lt;code&gt;post_get()&lt;/code&gt; 的工作方式相同，只不过它首先查找GET数据。</target>
        </trans-unit>
        <trans-unit id="629d18c3d38bb4c8be6aa2241ccbca67c81db81c" translate="yes" xml:space="preserve">
          <source>This methods returns a string that displays the difference between the current date/time and the instance in a human readable format that is geared towards being easily understood. It can create strings like &amp;lsquo;3 hours ago&amp;rsquo;, &amp;lsquo;in 1 month&amp;rsquo;, etc:</source>
          <target state="translated">此方法返回一个字符串，该字符串以易于理解的人类可读格式显示当前日期/时间与实例之间的差异。它可以创建诸如&amp;ldquo; 3小时前&amp;rdquo;，&amp;ldquo; 1个月内&amp;rdquo;之类的字符串：</target>
        </trans-unit>
        <trans-unit id="c088163a57e7f2b108e3f044588bbead064c4e71" translate="yes" xml:space="preserve">
          <source>This model works with data from the &lt;code&gt;jobs&lt;/code&gt; table, and returns all results as an instance of &lt;code&gt;App\Entities\Job&lt;/code&gt;. When you need to persist that record to the database, you will need to either write custom methods, or use the model&amp;rsquo;s &lt;code&gt;save()&lt;/code&gt; method to inspect the class, grab any public and private properties, and save them to the database:</source>
          <target state="translated">此模型使用 &lt;code&gt;jobs&lt;/code&gt; 表中的数据，并以 &lt;code&gt;App\Entities\Job&lt;/code&gt; 的实例返回所有结果。当您需要将该记录保存到数据库时，您将需要编写自定义方法，或者使用模型的 &lt;code&gt;save()&lt;/code&gt; 方法来检查类，获取任何公共和私有属性，并将它们保存到数据库中：</target>
        </trans-unit>
        <trans-unit id="5e53b447b7065fd9017352b7ddf0e6a2f57ac983" translate="yes" xml:space="preserve">
          <source>This must be the &lt;em&gt;last&lt;/em&gt; session-related function that you call. All session data will be lost after you do that.</source>
          <target state="translated">这必须是您调用的&lt;em&gt;最后一个&lt;/em&gt;与会话相关的函数。完成此操作后，所有会话数据都将丢失。</target>
        </trans-unit>
        <trans-unit id="c026dee2cfdc15090dd9aa4b80d3d10d8ab40d41" translate="yes" xml:space="preserve">
          <source>This must be the last session-related operation that you do during the same request. All session data (including flashdata and tempdata) will be destroyed permanently and functions will be unusable during the same request after you destroy the session.</source>
          <target state="translated">这必须是您在同一请求中进行的最后一次与会话相关的操作。所有会话数据(包括flashdata和tempdata)将被永久销毁,在您销毁会话后,在同一请求中,功能将无法使用。</target>
        </trans-unit>
        <trans-unit id="9f8653bc87ca45a74185f47a167469cb5a361fdf" translate="yes" xml:space="preserve">
          <source>This new method takes care of inserting the news item into the database. The third line contains a new function, url_title(). This function - provided by the &lt;a href=&quot;../helpers/url_helper&quot;&gt;URL helper&lt;/a&gt; - strips down the string you pass it, replacing all spaces by dashes (-) and makes sure everything is in lowercase characters. This leaves you with a nice slug, perfect for creating URIs.</source>
          <target state="translated">此新方法负责将新闻项插入数据库。第三行包含一个新函数url_title（）。由&lt;a href=&quot;../helpers/url_helper&quot;&gt;URL帮助程序&lt;/a&gt;提供的此函数可精简传递给它的字符串，并用短划线（-）替换所有空格，并确保所有内容均使用小写字母。这给您留下了一个很好的鼻涕虫，非常适合创建URI。</target>
        </trans-unit>
        <trans-unit id="cd8ebe417ba38c2c46bdf46d8f15ecbf15f4a504" translate="yes" xml:space="preserve">
          <source>This new property now contains the fields that we allow to be saved to the database. Notice that we leave out the &lt;code&gt;id&lt;/code&gt;? That&amp;rsquo;s because you will almost never need to do that, since it is an auto-incrementing field in the database. This helps protect against Mass Assignment Vulnerabilities. If your model is handling your timestamps, you would also leave those out.</source>
          <target state="translated">现在，此新属性包含我们允许保存到数据库的字段。注意，我们省略了 &lt;code&gt;id&lt;/code&gt; 吗？这是因为您几乎不需要这样做，因为它是数据库中的一个自动递增字段。这有助于防止大规模分配漏洞。如果您的模型正在处理您的时间戳，那么您也将那些时间戳排除在外。</target>
        </trans-unit>
        <trans-unit id="2553e8eab8b99b0c546abaee3673ec3c14d3946c" translate="yes" xml:space="preserve">
          <source>This only changes the values returned during this one call. If you need to modify the URI&amp;rsquo;s query values more permanently, you can use the &lt;code&gt;stripQuery()&lt;/code&gt; and &lt;code&gt;keepQuery()&lt;/code&gt; methods to change the actual object&amp;rsquo;s query variable collection:</source>
          <target state="translated">这仅更改一次调用期间返回的值。如果您需要更永久地修改URI的查询值，则可以使用 &lt;code&gt;stripQuery()&lt;/code&gt; 和 &lt;code&gt;keepQuery()&lt;/code&gt; 方法来更改实际对象的查询变量集合：</target>
        </trans-unit>
        <trans-unit id="5aa7b14f8a1206449553495b4c48c23bb4113e96" translate="yes" xml:space="preserve">
          <source>This only works when trying to access the properties from outside of the class. Any methods internal to the class must call the &lt;code&gt;setX()&lt;/code&gt; and &lt;code&gt;getX()&lt;/code&gt; methods directly.</source>
          <target state="translated">这仅在尝试从类外部访问属性时有效。类内部的任何方法都必须直接调用 &lt;code&gt;setX()&lt;/code&gt; 和 &lt;code&gt;getX()&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="691dbe7e4f2c05bdd4de591e347ca2f89331a4b4" translate="yes" xml:space="preserve">
          <source>This option controls how often the session class will regenerate itself and create a new session ID. Setting it to 0 will disable session ID regeneration.</source>
          <target state="translated">这个选项控制会话类自我再生和创建新的会话ID的频率。将其设置为0将禁用会话ID的再生。</target>
        </trans-unit>
        <trans-unit id="7c276fad5500f651f37e5b133aa0d7f073bd67ec" translate="yes" xml:space="preserve">
          <source>This option describes the SSL certificate verification behavior. If the &lt;code&gt;verify&lt;/code&gt; option is &lt;code&gt;true&lt;/code&gt;, it enables the SSL certificate verification and uses the default CA bundle provided by the operating system. If set to &lt;code&gt;false&lt;/code&gt; it will disable the certificate verification (this is insecure, and allows man-in-the-middle attacks!). You can set it to a string that contains the path to a CA bundle to enable verification with a custom certificate. The default value is true:</source>
          <target state="translated">此选项描述SSL证书验证行为。如果 &lt;code&gt;verify&lt;/code&gt; 选项为 &lt;code&gt;true&lt;/code&gt; ，则它将启用SSL证书验证并使用操作系统提供的默认CA捆绑软件。如果设置为 &lt;code&gt;false&lt;/code&gt; ，它将禁用证书验证（这是不安全的，并且允许中间人攻击！）。您可以将其设置为包含CA捆绑软件路径的字符串，以启用使用自定义证书的验证。默认值是true：</target>
        </trans-unit>
        <trans-unit id="92e46dae3907c56863063adffa759b9efe7faf8d" translate="yes" xml:space="preserve">
          <source>This option does not allow for any customization of the &lt;code&gt;json_encode()&lt;/code&gt; function, or the Content-Type header. If you need that ability, you will need to encode the data manually, passing it through the &lt;code&gt;setBody()&lt;/code&gt; method of CURLRequest, and set the Content-Type header with the &lt;code&gt;setHeader()&lt;/code&gt; method.</source>
          <target state="translated">此选项不允许对 &lt;code&gt;json_encode()&lt;/code&gt; 函数或Content-Type标头进行任何自定义。如果需要这种能力，则需要手动编码数据，将其通过所述 &lt;code&gt;setBody()&lt;/code&gt; CURLRequest的方法，并与设定的Content-Type头 &lt;code&gt;setHeader()&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="87306342b8ed1b5bd74b31a1f6660557235479fe" translate="yes" xml:space="preserve">
          <source>This option enables you to automatically replace dashes (&amp;lsquo;-&amp;lsquo;) with underscores in the controller and method URI segments, thus saving you additional route entries if you need to do that. This is required because the dash isn&amp;rsquo;t a valid class or method name character and would cause a fatal error if you try to use it:</source>
          <target state="translated">此选项使您能够在控制器和方法URI段中用下划线自动将破折号（'-'）替换为下划线，从而在需要时为您节省了其他路由条目。这是必需的，因为破折号不是有效的类或方法名称字符，如果尝试使用它将导致致命错误：</target>
        </trans-unit>
        <trans-unit id="6480bcb2e7dcb2ea338374aa4d10508d4817653a" translate="yes" xml:space="preserve">
          <source>This page describes some &amp;ldquo;best practices&amp;rdquo; regarding web security, and details CodeIgniter&amp;rsquo;s internal security features.</source>
          <target state="translated">该页面描述了有关Web安全的一些&amp;ldquo;最佳实践&amp;rdquo;，并详细介绍了CodeIgniter的内部安全功能。</target>
        </trans-unit>
        <trans-unit id="420af405e6b33f31ad5533b67879d0b5b702bedb" translate="yes" xml:space="preserve">
          <source>This permits it to be put it anywhere in a template without the memory being calculated until the end. The &lt;a href=&quot;output&quot;&gt;Output Class&lt;/a&gt; will swap the real value for this variable.</source>
          <target state="translated">这样可以将其放置在模板中的任何位置，而无需计算内存直到结束。在&lt;a href=&quot;output&quot;&gt;输出级&lt;/a&gt;将交换真正的价值该变量。</target>
        </trans-unit>
        <trans-unit id="f5386ab8eb9e5e8a42e6d1e737010e634e4c1413" translate="yes" xml:space="preserve">
          <source>This permits you to have the same hook point with multiple scripts. The order you define your array will be the execution order.</source>
          <target state="translated">这允许你在多个脚本中使用同一个钩子点。你定义的数组顺序将是执行顺序。</target>
        </trans-unit>
        <trans-unit id="59e5cd381e91018d51d7c6b4983eb1e025a19bdf" translate="yes" xml:space="preserve">
          <source>This process continues until you have submitted a valid form.</source>
          <target state="translated">这个过程一直持续到您提交了一个有效的表格。</target>
        </trans-unit>
        <trans-unit id="869d1e9ae24d103241a779ec3aa72df8d918cdcf" translate="yes" xml:space="preserve">
          <source>This property is an array of filter aliases. For each alias, you can specify before and after arrays that contain a list of URI patterns that filter should apply to:</source>
          <target state="translated">此属性是一个过滤器别名的数组。对于每个别名,你可以指定包含过滤器应该应用的URI模式列表的前后数组。</target>
        </trans-unit>
        <trans-unit id="acfa7091e2df2c97c35863843a6945edcd69e5d9" translate="yes" xml:space="preserve">
          <source>This provides a backtrace to the current execution point, with Kint&amp;rsquo;s own unique spin:</source>
          <target state="translated">通过Kint自己的独特旋转，这可以追溯到当前执行点：</target>
        </trans-unit>
        <trans-unit id="86f46fe897c2457c270bf14ca0d28ba01d684462" translate="yes" xml:space="preserve">
          <source>This provides a much simpler way to crop that will always maintain the aspect ratio:</source>
          <target state="translated">这提供了一种更简单的裁剪方式,将始终保持长宽比。</target>
        </trans-unit>
        <trans-unit id="9a3f6c9abaa104af7811d0380838a634fce7b5ad" translate="yes" xml:space="preserve">
          <source>This provides a simple check that the response would be considered a &amp;ldquo;successful&amp;rdquo; response. This primarily checks that the HTTP status code is within the 200 or 300 ranges:</source>
          <target state="translated">这提供了简单的检查，以将响应视为&amp;ldquo;成功&amp;rdquo;响应。这主要检查HTTP状态代码是否在200或300范围内：</target>
        </trans-unit>
        <trans-unit id="5641723d4768f1a1fd1bffcd17bff3342fc91805" translate="yes" xml:space="preserve">
          <source>This provides an HTTP status code of 500 and an exit code of 3.</source>
          <target state="translated">这提供了一个500的HTTP状态码和一个3的退出码。</target>
        </trans-unit>
        <trans-unit id="54accb9e4c5404c70df2eaba3b7762a802291e7e" translate="yes" xml:space="preserve">
          <source>This provides an HTTP status code of 500 and an exit code of 8.</source>
          <target state="translated">这提供了一个500的HTTP状态码和一个8的退出码。</target>
        </trans-unit>
        <trans-unit id="d0fe0599b14701b90ef4cae9704179561b99253c" translate="yes" xml:space="preserve">
          <source>This query may be modified by interjecting Query Builder commands as needed prior to calling this method:</source>
          <target state="translated">在调用该方法之前,可以根据需要插入查询生成器命令来修改该查询。</target>
        </trans-unit>
        <trans-unit id="35c6a357efc30a058e71d51f0b3302b8607adccd" translate="yes" xml:space="preserve">
          <source>This recommendation covers basic class, method, and file-naming standards. Our &lt;a href=&quot;https://github.com/codeigniter4/CodeIgniter4/blob/develop/contributing/styleguide.rst&quot;&gt;style guide&lt;/a&gt; meets PSR-1 and adds its own requirements on top of it.</source>
          <target state="translated">该建议涵盖基本的类，方法和文件命名标准。我们的&lt;a href=&quot;https://github.com/codeigniter4/CodeIgniter4/blob/develop/contributing/styleguide.rst&quot;&gt;样式指南&lt;/a&gt;符合PSR-1，并在其之上添加了自己的要求。</target>
        </trans-unit>
        <trans-unit id="f6993350b073ce3d18ccf8a75eb079094000f3fc" translate="yes" xml:space="preserve">
          <source>This requires either a DATETIME or INTEGER field in the database as per the model&amp;rsquo;s $dateFormat setting. The default field name is &lt;code&gt;deleted_at&lt;/code&gt; however this name can be configured to any name of your choice by using $deletedField property.</source>
          <target state="translated">根据模型的$ dateFormat设置，这需要数据库中的DATETIME或INTEGER字段。默认字段名称为 &lt;code&gt;deleted_at&lt;/code&gt; 但是可以使用$ deletedField属性将此名称配置为您选择的任何名称。</target>
        </trans-unit>
        <trans-unit id="aba462ddc10314944c9a8eca97a7a52772580288" translate="yes" xml:space="preserve">
          <source>This returns a new helper class that provides a number of routines for checking the response itself. See below for details.</source>
          <target state="translated">这将返回一个新的帮助类,该类提供了一些用于检查响应本身的例程。详情请看下文。</target>
        </trans-unit>
        <trans-unit id="36730087e45bfd287a9abf0437ba48007ee389fa" translate="yes" xml:space="preserve">
          <source>This returns a standard &lt;a href=&quot;results&quot;&gt;result set&lt;/a&gt;.</source>
          <target state="translated">这将返回一个标准&lt;a href=&quot;results&quot;&gt;结果集&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2e733c7416d4b843d187adf65b52640938e46cb5" translate="yes" xml:space="preserve">
          <source>This returns a string of errors that were detected while performing a migration.</source>
          <target state="translated">返回执行迁移时检测到的一串错误。</target>
        </trans-unit>
        <trans-unit id="bbdf22c88df7f984fab29af90a1002d5f63b116a" translate="yes" xml:space="preserve">
          <source>This returns an array with the field names and their associated errors that can be used to either show all of the errors at the top of the form, or to display them individually:</source>
          <target state="translated">这将返回一个包含字段名及其相关错误的数组,该数组可用于在表格顶部显示所有错误,或单独显示它们。</target>
        </trans-unit>
        <trans-unit id="d25982663f24e26ff6d51f1ff0a0c3f3c57d7716" translate="yes" xml:space="preserve">
          <source>This returns the prepared query as a string.</source>
          <target state="translated">这将以字符串的形式返回准备好的查询。</target>
        </trans-unit>
        <trans-unit id="186ef9fd8ca60f812da4e28515241298b05f6287" translate="yes" xml:space="preserve">
          <source>This route indicates which controller class should be loaded if the requested controller is not found. It will override the default 404 error page. Same per-directory rules as with &amp;lsquo;default_controller&amp;rsquo; apply here as well.</source>
          <target state="translated">此路由指示如果找不到请求的控制器，则应加载哪个控制器类。它将覆盖默认的404错误页面。与&amp;ldquo; default_controller&amp;rdquo;相同的每个目录规则也适用于此。</target>
        </trans-unit>
        <trans-unit id="afb355aea764a659ef509ce50c18b4bcf458debe" translate="yes" xml:space="preserve">
          <source>This route points to the action that should be executed if the URI contains no data, which will be the case when people load your root URL. The setting accepts a &lt;strong&gt;controller/method&lt;/strong&gt; value and &lt;code&gt;index()&lt;/code&gt; would be the default method if you don&amp;rsquo;t specify one. In the above example, it is &lt;code&gt;Welcome::index()&lt;/code&gt; that would be called.</source>
          <target state="translated">此路由指向如果URI不包含任何数据时应执行的操作，当人们加载您的根URL时就是这种情况。该设置接受&lt;strong&gt;控制器/方法&lt;/strong&gt;值，如果不指定，则 &lt;code&gt;index()&lt;/code&gt; 将是默认方法。在上面的示例中，将调用 &lt;code&gt;Welcome::index()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4a56ab4d3b8f6a8ea6fb31dce9f4e571629b378d" translate="yes" xml:space="preserve">
          <source>This same negotiation can happen with four types of data:</source>
          <target state="translated">这种相同的协商可以发生在四种类型的数据上。</target>
        </trans-unit>
        <trans-unit id="3263f79c068ad8df37f09262e213c2bb54439a11" translate="yes" xml:space="preserve">
          <source>This same value can be retrieved by casting the Query object to a string:</source>
          <target state="translated">可以通过将Query对象转换为字符串来获取相同的值。</target>
        </trans-unit>
        <trans-unit id="eeb7375920d4a46437db6465fae88279f64c62a8" translate="yes" xml:space="preserve">
          <source>This section describes all of the available options you may pass into the constructor, the &lt;code&gt;request()&lt;/code&gt; method, or any of the shortcut methods.</source>
          <target state="translated">本节描述了您可能传递给构造函数， &lt;code&gt;request()&lt;/code&gt; 方法或任何快捷方式方法的所有可用选项。</target>
        </trans-unit>
        <trans-unit id="8814e7aaa85a8e0fa4c2767e269479c41b45cfce" translate="yes" xml:space="preserve">
          <source>This section is a quick overview for newer programmers, or for developers who are not experienced with using exceptions.</source>
          <target state="translated">本节是对新手程序员或没有使用异常经验的开发人员的快速概述。</target>
        </trans-unit>
        <trans-unit id="9e4abfdf21fe77417cd883f81239b14ef9258a29" translate="yes" xml:space="preserve">
          <source>This section will take a look at each of the file types (controllers, views, language files, etc) and how they can be used within the module. Some of this information is described in more detail in the relevant location of the user guide, but is being reproduced here so that it&amp;rsquo;s easier to grasp how all of the pieces fit together.</source>
          <target state="translated">本节将介绍每种文件类型（控制器，视图，语言文件等），以及如何在模块中使用它们。其中一些信息在用户指南的相关位置中进行了详细说明，但在此处进行了复制，以便您更轻松地掌握所有这些部分的装配方式。</target>
        </trans-unit>
        <trans-unit id="f57dcf58933fadaa27a7f0d083e645014656ab7b" translate="yes" xml:space="preserve">
          <source>This server variable can be set in your .htaccess file, or Apache config using &lt;a href=&quot;https://httpd.apache.org/docs/2.2/mod/mod_env.html#setenv&quot;&gt;SetEnv&lt;/a&gt;. Alternative methods are available for nginx and other servers, or you can remove this logic entirely and set the constant based on the server&amp;rsquo;s IP address.</source>
          <target state="translated">可以在您的.htaccess文件或使用&lt;a href=&quot;https://httpd.apache.org/docs/2.2/mod/mod_env.html#setenv&quot;&gt;SetEnv的&lt;/a&gt; Apache配置中设置此服务器变量。Nginx和其他服务器可以使用其他方法，也可以完全删除此逻辑并根据服务器的IP地址设置常量。</target>
        </trans-unit>
        <trans-unit id="8491da6b630951ba353087a26cfe285cb3801977" translate="yes" xml:space="preserve">
          <source>This server variable can be set in your &lt;code&gt;.htaccess&lt;/code&gt; file or Apache config using &lt;a href=&quot;https://httpd.apache.org/docs/2.2/mod/mod_env.html#setenv&quot;&gt;SetEnv&lt;/a&gt;.</source>
          <target state="translated">可以使用&lt;a href=&quot;https://httpd.apache.org/docs/2.2/mod/mod_env.html#setenv&quot;&gt;SetEnv&lt;/a&gt;在 &lt;code&gt;.htaccess&lt;/code&gt; 文件或Apache配置中设置此服务器变量。</target>
        </trans-unit>
        <trans-unit id="f9cd4cad730e9ea33a3f4c2d2306b294081cfdbc" translate="yes" xml:space="preserve">
          <source>This set of compatibility functions offers a &amp;ldquo;backport&amp;rdquo; of PHP&amp;rsquo;s standard &lt;a href=&quot;http://php.net/password&quot;&gt;Password Hashing extension&lt;/a&gt; that is otherwise available only since PHP 5.5.</source>
          <target state="translated">这套兼容性功能提供了PHP标准&lt;a href=&quot;http://php.net/password&quot;&gt;密码哈希扩展&lt;/a&gt;的&amp;ldquo;反向移植&amp;rdquo;，否则仅从PHP 5.5起可用。</target>
        </trans-unit>
        <trans-unit id="12f7babc1edcec43f28c4f65c746c7e4d0026350" translate="yes" xml:space="preserve">
          <source>This set of compatibility functions offers limited support for PHP&amp;rsquo;s &lt;a href=&quot;http://php.net/mbstring&quot;&gt;Multibyte String extension&lt;/a&gt;. Because of the limited alternative solutions, only a few functions are available.</source>
          <target state="translated">这套兼容性功能&lt;a href=&quot;http://php.net/mbstring&quot;&gt;仅对&lt;/a&gt; PHP的Multibyte String扩展提供了有限的支持。由于替代解决方案有限，因此只有少数功能可用。</target>
        </trans-unit>
        <trans-unit id="ef032a3e37a47e5ef463fd5886c8f5a1e67d1db9" translate="yes" xml:space="preserve">
          <source>This set of compatibility functions offers support for a few standard functions in PHP that otherwise require a newer PHP version.</source>
          <target state="translated">这套兼容性函数为PHP中的一些标准函数提供了支持,否则就需要更新的PHP版本。</target>
        </trans-unit>
        <trans-unit id="932b0183fb7d2604a4741a3eb0e65308418712af" translate="yes" xml:space="preserve">
          <source>This sets the default path in the constructor method, but allows for easily changing the path it uses:</source>
          <target state="translated">这在构造方法中设置了默认的路径,但允许轻松改变它使用的路径。</target>
        </trans-unit>
        <trans-unit id="d718e6506e4dac39273b3b86b5b115433c9df51c" translate="yes" xml:space="preserve">
          <source>This setting stores the alias and &lt;a href=&quot;../outgoing/views&quot;&gt;namespaced view paths&lt;/a&gt; for the view that should be used. The &lt;em&gt;default_full&lt;/em&gt; and &lt;em&gt;default_simple&lt;/em&gt; views are used for the &lt;code&gt;links()&lt;/code&gt; and &lt;code&gt;simpleLinks()&lt;/code&gt; methods, respectively. To change the way those are displayed application-wide, you could assign a new view here.</source>
          <target state="translated">此设置存储应使用的视图的别名和&lt;a href=&quot;../outgoing/views&quot;&gt;命名空间视图路径&lt;/a&gt;。的&lt;em&gt;default_full&lt;/em&gt;和&lt;em&gt;default_simple&lt;/em&gt;视图被用于 &lt;code&gt;links()&lt;/code&gt; 和 &lt;code&gt;simpleLinks()&lt;/code&gt; 分别方法。要更改在整个应用程序中显示的方式，您可以在此处分配一个新视图。</target>
        </trans-unit>
        <trans-unit id="30ea6d62c6853becf0bc70a2c577c74d9533f49c" translate="yes" xml:space="preserve">
          <source>This simple block is converted to the following during parsing:</source>
          <target state="translated">这个简单的块在解析过程中被转换为以下内容。</target>
        </trans-unit>
        <trans-unit id="2db2b7a8bd40f30e5b9725dea467391ec33e47b0" translate="yes" xml:space="preserve">
          <source>This simply uses phpUnit&amp;rsquo;s own &lt;a href=&quot;https://phpunit.readthedocs.io/en/7.2/assertions.html#assertarraysubset&quot;&gt;assertArraySubset()&lt;/a&gt; method to do the comparison.</source>
          <target state="translated">这只是使用phpUnit自己的&lt;a href=&quot;https://phpunit.readthedocs.io/en/7.2/assertions.html#assertarraysubset&quot;&gt;assertArraySubset（）&lt;/a&gt;方法进行比较。</target>
        </trans-unit>
        <trans-unit id="f52501bd9395c8c77102bf1b55a2b054b4832a28" translate="yes" xml:space="preserve">
          <source>This single preference determines whether a thumbnail is created or not.</source>
          <target state="translated">这个单一的首选项决定了是否创建缩略图。</target>
        </trans-unit>
        <trans-unit id="948551fb5386fe883028c9ab1a7c815133704782" translate="yes" xml:space="preserve">
          <source>This sounds complex, and on some sites, can definitely be challenging. For many simple sites, though, where all content is served by the same domain (&lt;a href=&quot;http://example.com&quot;&gt;http://example.com&lt;/a&gt;), it is very simple to integrate.</source>
          <target state="translated">这听起来很复杂，并且在某些站点上肯定是具有挑战性的。但是，对于许多简单站点而言，所有内容均由同一域（&lt;a href=&quot;http://example.com&quot;&gt;http://example.com&lt;/a&gt;）提供，因此集成起来非常简单。</target>
        </trans-unit>
        <trans-unit id="43c1a3bbe167dd8787e9c30ad2370be3ae3e9c84" translate="yes" xml:space="preserve">
          <source>This specifies the filename that CURL should use to read cookie values from, and to save cookie values to. This is done using the CURL_COOKIEJAR and CURL_COOKIEFILE options. An example:</source>
          <target state="translated">这指定了CURL用来读取cookie值和保存cookie值的文件名。这是通过CURL_COOKIEJAR和CURL_COOKIEFILE选项来实现的。举个例子。</target>
        </trans-unit>
        <trans-unit id="c7e41f7d2d3c5e1be7f516b369d30375db681e45" translate="yes" xml:space="preserve">
          <source>This table presents a comparison of the default routes created by &lt;code&gt;resource()&lt;/code&gt; and &lt;code&gt;presenter()&lt;/code&gt; with their corresponding Controller functions.</source>
          <target state="translated">该表比较了 &lt;code&gt;resource()&lt;/code&gt; 和 &lt;code&gt;presenter()&lt;/code&gt; 创建的默认路由及其对应的Controller函数。</target>
        </trans-unit>
        <trans-unit id="6c3a253a77450dfe93aa60af05ef58eedf0fcbd6" translate="yes" xml:space="preserve">
          <source>This table shows the preferences that are available for both types of watermarking (text or overlay)</source>
          <target state="translated">该表显示了两种类型的水印(文本或覆盖)的可用偏好。</target>
        </trans-unit>
        <trans-unit id="2aace79df5622c85c929842b82dea9b0e4f1efb7" translate="yes" xml:space="preserve">
          <source>This table shows the preferences that are available for the overlay type of watermarking.</source>
          <target state="translated">该表显示了可用于叠加型水印的偏好。</target>
        </trans-unit>
        <trans-unit id="2bef284b7058881a0c58e2ff3ed57d38f7cd84e4" translate="yes" xml:space="preserve">
          <source>This table shows the preferences that are available for the text type of watermarking.</source>
          <target state="translated">该表显示了可用于文本类型水印的偏好。</target>
        </trans-unit>
        <trans-unit id="67cdd491300ba72393a7ae541ae1aa6c9182a23d" translate="yes" xml:space="preserve">
          <source>This timeout period will be used both for an initial connection to the remote server, as well as for getting a response from it. Make sure you set the timeout before calling &lt;code&gt;send_request()&lt;/code&gt;.</source>
          <target state="translated">此超时时间将用于到远程服务器的初始连接以及从中获取响应。确保在调用 &lt;code&gt;send_request()&lt;/code&gt; 之前设置了超时时间。</target>
        </trans-unit>
        <trans-unit id="b895d71db44cc35b1104dd6bb3155b42aa7aae46" translate="yes" xml:space="preserve">
          <source>This tutorial did not cover all of the things you might expect of a full-fledged content management system, but it introduced you to the more important topics of routing, writing controllers, and models. We hope this tutorial gave you an insight into some of CodeIgniter&amp;rsquo;s basic design patterns, which you can expand upon.</source>
          <target state="translated">本教程并未涵盖您对功能完善的内容管理系统的所有期望，但向您介绍了路由，编写控制器和模型等更重要的主题。我们希望本教程能使您对CodeIgniter的一些基本设计模式有深入的了解，并可以对其进行扩展。</target>
        </trans-unit>
        <trans-unit id="4ff1666974a1755ecefbede4f43526ed971da27c" translate="yes" xml:space="preserve">
          <source>This tutorial is intended to introduce you to the CodeIgniter framework and the basic principles of MVC architecture. It will show you how a basic CodeIgniter application is constructed in step-by-step fashion.</source>
          <target state="translated">本教程旨在向你介绍CodeIgniter框架和MVC架构的基本原理。它将向你展示如何以循序渐进的方式构建一个基本的CodeIgniter应用程序。</target>
        </trans-unit>
        <trans-unit id="21b84cdb295cf304d73582610b043797c6fcec95" translate="yes" xml:space="preserve">
          <source>This tutorial is intended to introduce you to the CodeIgniter4 framework and the basic principles of MVC architecture. It will show you how a basic CodeIgniter application is constructed in a step-by-step fashion.</source>
          <target state="translated">本教程旨在向您介绍CodeIgniter4框架和MVC架构的基本原理。它将向你展示一个基本的CodeIgniter应用程序是如何一步步构建的。</target>
        </trans-unit>
        <trans-unit id="b0d002ac117d420127603a684da177756f27d42c" translate="yes" xml:space="preserve">
          <source>This tutorial will primarily focus on:</source>
          <target state="translated">本教程将主要介绍。</target>
        </trans-unit>
        <trans-unit id="cdb92d8ac94acd4cb0065a9236c247a2200604e9" translate="yes" xml:space="preserve">
          <source>This value can also be translated via a language file.</source>
          <target state="translated">这个值也可以通过语言文件来翻译。</target>
        </trans-unit>
        <trans-unit id="4b057f1e2b89c48cba782ade2b3544cb32439fe9" translate="yes" xml:space="preserve">
          <source>This value works with $useTimestamps and $useSoftDeletes to ensure that the correct type of date value gets inserted into the database. By default, this creates DATETIME values, but valid options are: datetime, date, or int (a PHP timestamp). Using &amp;lsquo;useSoftDeletes&amp;rsquo; or &amp;lsquo;useTimestamps&amp;rsquo; with an invalid or missing dateFormat will cause an exception.</source>
          <target state="translated">该值与$ useTimestamps和$ useSoftDeletes一起使用，以确保将正确类型的日期值插入数据库中。默认情况下，这将创建DATETIME值，但有效的选项为：datetime，date或int（PHP时间戳）。在无效或缺少dateFormat的情况下使用&amp;ldquo; useSoftDeletes&amp;rdquo;或&amp;ldquo; useTimestamps&amp;rdquo;会导致异常。</target>
        </trans-unit>
        <trans-unit id="698b58228ca20763d80f893f722ba2385343c70c" translate="yes" xml:space="preserve">
          <source>This was due to the specifics of how sessions worked, but is now no longer necessary with our new implementation. However, it may happen that your application relied on these values, so here are alternative methods of accessing them:</source>
          <target state="translated">这是由于会话工作的特殊性,但现在在我们的新实施中已不再需要。然而,可能会发生你的应用程序依赖这些值的情况,所以这里是访问它们的替代方法。</target>
        </trans-unit>
        <trans-unit id="24045ca6ac9cb2217c60a9aa49487fc168ba8fd5" translate="yes" xml:space="preserve">
          <source>This will be the first migration for a new site which has a blog. All migrations go in the &lt;strong&gt;app/Database/Migrations/&lt;/strong&gt; directory and have names such as &lt;em&gt;20121031100537_add_blog.php&lt;/em&gt;.</source>
          <target state="translated">这将是具有博客的新站点的第一次迁移。所有迁移都在&lt;strong&gt;app / Database / Migrations /&lt;/strong&gt;目录中，并具有诸如&lt;em&gt;20121031100537_add_blog.php之类的&lt;/em&gt;名称。</target>
        </trans-unit>
        <trans-unit id="77ef12d8da6ad35ed9d0b24f79795e1a9b41e572" translate="yes" xml:space="preserve">
          <source>This will be the first migration for a new site which has a blog. All migrations go in the &lt;strong&gt;application/migrations/&lt;/strong&gt; directory and have names such as &lt;em&gt;20121031100537_add_blog.php&lt;/em&gt;.</source>
          <target state="translated">这将是具有博客的新站点的第一次迁移。所有迁移都位于&lt;strong&gt;application / migrations /&lt;/strong&gt;目录中，并具有诸如&lt;em&gt;20121031100537_add_blog.php之类的&lt;/em&gt;名称。</target>
        </trans-unit>
        <trans-unit id="c2761b927e6e91a33525c717e04d545869f226d9" translate="yes" xml:space="preserve">
          <source>This will create a ZIP with a directory named &amp;ldquo;directory&amp;rdquo; inside, then all sub-directories stored correctly inside that, but will not include the &lt;em&gt;/path/to/your&lt;/em&gt; part of the path.</source>
          <target state="translated">这将创建一个ZIP文件，其中包含一个名为&amp;ldquo; directory&amp;rdquo;的目录，然后所有子目录都正确存储在其中，但不包括&lt;em&gt;路径&lt;/em&gt;的&lt;em&gt;/ path / to / your&lt;/em&gt;部分。</target>
        </trans-unit>
        <trans-unit id="c739374afae8e7c51a3d3950ec1c71c79301448f" translate="yes" xml:space="preserve">
          <source>This will first look for a file or directory matching the URI (constructing the full path to each file from the settings of the root and alias directives), and then sends the request to the index.php file along with any arguments.</source>
          <target state="translated">这将首先寻找一个与URI相匹配的文件或目录(通过root和alias指令的设置来构建每个文件的完整路径),然后将请求与任何参数一起发送到index.php文件。</target>
        </trans-unit>
        <trans-unit id="52d834ebe51c9aae4bd4212c05438f82e9d9af1e" translate="yes" xml:space="preserve">
          <source>This will grab the current request instance and automatically inject it into the Negotiator class.</source>
          <target state="translated">这将抓取当前的请求实例,并将其自动注入到Negotiator类中。</target>
        </trans-unit>
        <trans-unit id="d19f19552439aebf1ea11dbd0142ec5e24d6bcc0" translate="yes" xml:space="preserve">
          <source>This will install the correct version for your current PHP version. Once that is done, you can run all of the tests for this project by typing:</source>
          <target state="translated">这将为你当前的PHP版本安装正确的版本。一旦完成,你可以通过键入来运行这个项目的所有测试。</target>
        </trans-unit>
        <trans-unit id="fc5d60e8642c70df750c83eb9ef53a3ac2f4f085" translate="yes" xml:space="preserve">
          <source>This will launch the server and you can now view your application in your browser at &lt;a href=&quot;http://localhost:8080&quot;&gt;http://localhost:8080&lt;/a&gt;.</source>
          <target state="translated">这将启动服务器，您现在可以在浏览器中的&lt;a href=&quot;http://localhost:8080&quot;&gt;http：// localhost：8080上&lt;/a&gt;查看您的应用程序。</target>
        </trans-unit>
        <trans-unit id="899e6ed20f4e31d17cdd43b7bfd2605a3e144533" translate="yes" xml:space="preserve">
          <source>This will look for any migrations located at both &lt;strong&gt;APPPATH/Database/Migrations&lt;/strong&gt; and &lt;strong&gt;ROOTPATH/MyCompany/Database/Migrations&lt;/strong&gt;. This makes it simple to include migrations in your re-usable, modular code suites.</source>
          <target state="translated">这将查找位于&lt;strong&gt;APPPATH / Database / Migrations&lt;/strong&gt;和&lt;strong&gt;ROOTPATH / MyCompany / Database / Migrations处的所有迁移&lt;/strong&gt;。这使得将迁移包含在可重用的模块化代码套件中变得很容易。</target>
        </trans-unit>
        <trans-unit id="554ed56bcaa800de28880527a09b79ed869901e3" translate="yes" xml:space="preserve">
          <source>This will retrieve data and convert it to an array. Like this:</source>
          <target state="translated">这将检索数据并将其转换为一个数组。就像这样。</target>
        </trans-unit>
        <trans-unit id="1c25471c05801b85073a51ccc5408bd1ee15f466" translate="yes" xml:space="preserve">
          <source>This will, by default, display the links in the normal manner, as a series of links, but you can change the display template used by passing in the name of the template as the fourth parameter. More details can be found in the following sections.</source>
          <target state="translated">默认情况下,这将以正常的方式显示链接,作为一系列的链接,但你可以通过传递模板的名称作为第四个参数来改变使用的显示模板。更多细节可以在下面的章节中找到。</target>
        </trans-unit>
        <trans-unit id="2611b6cf3c26deb17f449876763316e52b5c92b6" translate="yes" xml:space="preserve">
          <source>This works exactly the same way as &lt;code&gt;$builder-&amp;gt;getCompiledInsert()&lt;/code&gt; except that it produces a DELETE SQL string instead of an INSERT SQL string.</source>
          <target state="translated">这与 &lt;code&gt;$builder-&amp;gt;getCompiledInsert()&lt;/code&gt; 工作方式完全相同，只不过它会生成DELETE SQL字符串而不是INSERT SQL字符串。</target>
        </trans-unit>
        <trans-unit id="52aaeda114a57d3161db3407301cecb09b5069be" translate="yes" xml:space="preserve">
          <source>This works exactly the same way as &lt;code&gt;$builder-&amp;gt;getCompiledInsert()&lt;/code&gt; except that it produces an UPDATE SQL string instead of an INSERT SQL string.</source>
          <target state="translated">这与 &lt;code&gt;$builder-&amp;gt;getCompiledInsert()&lt;/code&gt; 工作方式完全相同，除了它会生成UPDATE SQL字符串而不是INSERT SQL字符串。</target>
        </trans-unit>
        <trans-unit id="e721a52372f9610ac520c526bae76c786eaee878" translate="yes" xml:space="preserve">
          <source>This works exactly the same way as &lt;code&gt;$this-&amp;gt;db-&amp;gt;get_compiled_insert()&lt;/code&gt; except that it produces a DELETE SQL string instead of an INSERT SQL string.</source>
          <target state="translated">它的工作方式与 &lt;code&gt;$this-&amp;gt;db-&amp;gt;get_compiled_insert()&lt;/code&gt; 完全相同，只是它会生成DELETE SQL字符串而不是INSERT SQL字符串。</target>
        </trans-unit>
        <trans-unit id="a63f354542997f0ba925f6f90bb6204bfd31a8a5" translate="yes" xml:space="preserve">
          <source>This works exactly the same way as &lt;code&gt;$this-&amp;gt;db-&amp;gt;get_compiled_insert()&lt;/code&gt; except that it produces an UPDATE SQL string instead of an INSERT SQL string.</source>
          <target state="translated">这与 &lt;code&gt;$this-&amp;gt;db-&amp;gt;get_compiled_insert()&lt;/code&gt; 工作方式完全相同，除了它会生成UPDATE SQL字符串而不是INSERT SQL字符串。</target>
        </trans-unit>
        <trans-unit id="ae63c0d0d186c12e8c441dda11d8a0aeb7e714dc" translate="yes" xml:space="preserve">
          <source>This works much the same way as &lt;code&gt;current()&lt;/code&gt; but instead of looking for the &lt;code&gt;$config['migration_version']&lt;/code&gt; the Migration class will use the very newest migration found in the filesystem.</source>
          <target state="translated">这与 &lt;code&gt;current()&lt;/code&gt; 的工作方式大致相同，但Migration类将使用文件系统中发现的最新迁移，而不是寻找 &lt;code&gt;$config['migration_version']&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5a8814669d775819cf34b36bed279d998e02bc84" translate="yes" xml:space="preserve">
          <source>This works similar to the default controller setting, but is used to determine the default method that is used when a controller is found that matches the URI, but no segment exists for the method. The default value is &lt;code&gt;index&lt;/code&gt;.</source>
          <target state="translated">此工作方式与默认控制器设置相似，但是用于确定找到与URI匹配的控制器但该方法不存在任何段时使用的默认方法。默认值为 &lt;code&gt;index&lt;/code&gt; 。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
