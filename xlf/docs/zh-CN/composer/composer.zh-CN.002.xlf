<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="composer">
    <body>
      <group id="composer">
        <trans-unit id="8a1618493b82666d4905c803521a15cd408bb2b3" translate="yes" xml:space="preserve">
          <source>Manual inline http-basic</source>
          <target state="translated">手动内联http-basic</target>
        </trans-unit>
        <trans-unit id="5be956986c4830f5634e408f4cfe5ffbf79bac49" translate="yes" xml:space="preserve">
          <source>Manually editing global authentication credentials</source>
          <target state="translated">手动编辑全局认证凭证</target>
        </trans-unit>
        <trans-unit id="0e3208cc90c5a8b00dbfe1054149e5acf7c59632" translate="yes" xml:space="preserve">
          <source>Manually editing this file instead of using the command line may result in invalid json errors. To fix this you need to open the file in an editor and fix the error. To find the location of your global &lt;code&gt;auth.json&lt;/code&gt;, execute:</source>
          <target state="translated">手动编辑此文件而不使用命令行可能会导致无效的json错误。要解决此问题，您需要在编辑器中打开文件并修复错误。要查找全局 &lt;code&gt;auth.json&lt;/code&gt; 的位置，请执行：</target>
        </trans-unit>
        <trans-unit id="1c3f45515cc28f74919408ffa9ca1a39a38b78f1" translate="yes" xml:space="preserve">
          <source>Memory limit errors</source>
          <target state="translated">内存限制错误</target>
        </trans-unit>
        <trans-unit id="8752821c95f2b75d4dc8449c22b28ade8698a073" translate="yes" xml:space="preserve">
          <source>Minimum Stability</source>
          <target state="translated">最低稳定度</target>
        </trans-unit>
        <trans-unit id="3ea0c857ba165aef26712171a2a706b53b8a0468" translate="yes" xml:space="preserve">
          <source>Modifying Extra Values</source>
          <target state="translated">修改附加值</target>
        </trans-unit>
        <trans-unit id="91e2a3d97529d7420f188c7aaf45493ca9ec4280" translate="yes" xml:space="preserve">
          <source>Modifying Repositories</source>
          <target state="translated">修改存储库</target>
        </trans-unit>
        <trans-unit id="f76fee3286f84871a39a5e5f7f2503a3abf7f498" translate="yes" xml:space="preserve">
          <source>Must be in &lt;code&gt;YYYY-MM-DD&lt;/code&gt; or &lt;code&gt;YYYY-MM-DD HH:MM:SS&lt;/code&gt; format.</source>
          <target state="translated">必须采用 &lt;code&gt;YYYY-MM-DD&lt;/code&gt; 或 &lt;code&gt;YYYY-MM-DD HH:MM:SS&lt;/code&gt; 格式。</target>
        </trans-unit>
        <trans-unit id="4025b616f677202a7be84eb179a61bc894d1cd18" translate="yes" xml:space="preserve">
          <source>Namespace prefixes must end in &lt;code&gt;\\&lt;/code&gt; to avoid conflicts between similar prefixes. For example &lt;code&gt;Foo&lt;/code&gt; would match classes in the &lt;code&gt;FooBar&lt;/code&gt; namespace so the trailing backslashes solve the problem: &lt;code&gt;Foo\\&lt;/code&gt; and &lt;code&gt;FooBar\\&lt;/code&gt; are distinct.</source>
          <target state="translated">命名空间前缀必须以 &lt;code&gt;\\&lt;/code&gt; 结尾，以避免相似前缀之间的冲突。例如， &lt;code&gt;Foo&lt;/code&gt; 将匹配 &lt;code&gt;FooBar&lt;/code&gt; 命名空间中的类，因此尾随反斜杠可以解决问题： &lt;code&gt;Foo\\&lt;/code&gt; 和 &lt;code&gt;FooBar\\&lt;/code&gt; 是不同的。</target>
        </trans-unit>
        <trans-unit id="fc3e4b461b8b1cf9a32915e44b9c1d726c407755" translate="yes" xml:space="preserve">
          <source>Need to override a package version</source>
          <target state="translated">需要覆盖一个包的版本</target>
        </trans-unit>
        <trans-unit id="28ee11c63fdc46b8c878bc353cf5dfd2cbbb147d" translate="yes" xml:space="preserve">
          <source>Next Significant Release Operators</source>
          <target state="translated">下一个重要的释放操作者</target>
        </trans-unit>
        <trans-unit id="54ea81a3dd00894f2088f7303589726960cbd771" translate="yes" xml:space="preserve">
          <source>Normally, Composer deals with tags (as opposed to branches -- if you don't know what this means, read up on &lt;a href=&quot;https://en.wikipedia.org/wiki/Version_control#Common_terminology&quot;&gt;version control systems&lt;/a&gt;). When you write a version constraint, it may reference a specific tag (e.g., &lt;code&gt;1.1&lt;/code&gt;) or it may reference a valid range of tags (e.g., &lt;code&gt;&amp;gt;=1.1 &amp;lt;2.0&lt;/code&gt;, or &lt;code&gt;~4.0&lt;/code&gt;). To resolve these constraints, Composer first asks the VCS to list all available tags, then creates an internal list of available versions based on these tags. In the above example, composer's internal list includes versions &lt;code&gt;1.0&lt;/code&gt;, &lt;code&gt;1.0.1&lt;/code&gt;, &lt;code&gt;1.0.2&lt;/code&gt;, the beta release of &lt;code&gt;1.1&lt;/code&gt;, the first and second release candidates of &lt;code&gt;1.1&lt;/code&gt;, the final release version &lt;code&gt;1.1&lt;/code&gt;, etc.... (Note that Composer automatically removes the 'v' prefix in the actual tagname to get a valid final version number.)</source>
          <target state="translated">通常，Composer处理标签（而不是分支-如果您不知道这意味着什么，请在&lt;a href=&quot;https://en.wikipedia.org/wiki/Version_control#Common_terminology&quot;&gt;版本控制系统&lt;/a&gt;上阅读）。当您编写版本约束时，它可能引用特定标签（例如 &lt;code&gt;1.1&lt;/code&gt; ），或者可能引用标签的有效范围（例如 &lt;code&gt;&amp;gt;=1.1 &amp;lt;2.0&lt;/code&gt; 或 &lt;code&gt;~4.0&lt;/code&gt; ）。为了解决这些限制，Composer首先要求VCS列出所有可用标签，然后根据这些标签创建内部可用版本的列表。在上述例子中，作曲家的内部列表包括版本 &lt;code&gt;1.0&lt;/code&gt; ， &lt;code&gt;1.0.1&lt;/code&gt; ， &lt;code&gt;1.0.2&lt;/code&gt; ，的beta版 &lt;code&gt;1.1&lt;/code&gt; ，的第一和第二释放候选 &lt;code&gt;1.1&lt;/code&gt; ，最终版本 &lt;code&gt;1.1&lt;/code&gt; 等。（请注意，Composer会自动删除实际标记名中的'v'前缀，以获取有效的最终版本号。）</target>
        </trans-unit>
        <trans-unit id="39c736c92084eab192eb0796662a0f1c7f600808" translate="yes" xml:space="preserve">
          <source>Normally, Composer deals with tags (as opposed to branches -- if you don't know what this means, read up on &lt;a href=&quot;https://en.wikipedia.org/wiki/Version_control#Common_vocabulary&quot;&gt;version control systems&lt;/a&gt;). When you write a version constraint, it may reference a specific tag (e.g., &lt;code&gt;1.1&lt;/code&gt;) or it may reference a valid range of tags (e.g., &lt;code&gt;&amp;gt;=1.1 &amp;lt;2.0&lt;/code&gt;, or &lt;code&gt;~4.0&lt;/code&gt;). To resolve these constraints, Composer first asks the VCS to list all available tags, then creates an internal list of available versions based on these tags. In the above example, composer's internal list includes versions &lt;code&gt;1.0&lt;/code&gt;, &lt;code&gt;1.0.1&lt;/code&gt;, &lt;code&gt;1.0.2&lt;/code&gt;, the beta release of &lt;code&gt;1.1&lt;/code&gt;, the first and second release candidates of &lt;code&gt;1.1&lt;/code&gt;, the final release version &lt;code&gt;1.1&lt;/code&gt;, etc.... (Note that Composer automatically removes the 'v' prefix in the actual tagname to get a valid final version number.)</source>
          <target state="translated">通常，Composer处理标签（而不是分支-如果您不知道这意味着什么，请在&lt;a href=&quot;https://en.wikipedia.org/wiki/Version_control#Common_vocabulary&quot;&gt;版本控制系统&lt;/a&gt;上阅读）。当您编写版本约束时，它可能引用特定的标签（例如 &lt;code&gt;1.1&lt;/code&gt; ），或者可能引用有效范围的标签（例如 &lt;code&gt;&amp;gt;=1.1 &amp;lt;2.0&lt;/code&gt; 或 &lt;code&gt;~4.0&lt;/code&gt; ）。为了解决这些限制，Composer首先要求VCS列出所有可用标签，然后根据这些标签创建内部可用版本的列表。在上述例子中，作曲家的内部列表包括版本 &lt;code&gt;1.0&lt;/code&gt; ， &lt;code&gt;1.0.1&lt;/code&gt; ， &lt;code&gt;1.0.2&lt;/code&gt; ，的beta版 &lt;code&gt;1.1&lt;/code&gt; ，的第一和第二释放候选 &lt;code&gt;1.1&lt;/code&gt; ，最终发行版 &lt;code&gt;1.1&lt;/code&gt; 等。（请注意，Composer会自动删除实际标记名中的'v'前缀以获得有效的最终版本号。）</target>
        </trans-unit>
        <trans-unit id="66ec2e93672c49b92fb864b93b03dba5a399c1ee" translate="yes" xml:space="preserve">
          <source>Note that all packages set as abandoned in their own &lt;code&gt;composer.json&lt;/code&gt; file will be marked abandoned as well.</source>
          <target state="translated">请注意，所有在其自己的 &lt;code&gt;composer.json&lt;/code&gt; 文件中设置为放弃的包也将被标记为放弃。</target>
        </trans-unit>
        <trans-unit id="21967d75d7258073c7e7e8056ae0005a275d4501" translate="yes" xml:space="preserve">
          <source>Note that if your private packages are hosted on GitHub, your server should have an ssh key that gives it access to those packages, and then you should add the &lt;code&gt;--no-interaction&lt;/code&gt; (or &lt;code&gt;-n&lt;/code&gt;) flag to the command to make sure it falls back to ssh key authentication instead of prompting for a password. This is also a good trick for continuous integration servers.</source>
          <target state="translated">请注意，如果您的私有软件包托管在GitHub上，则您的服务器应具有ssh密钥，以使其可以访问这些软件包，然后应在命令中添加 &lt;code&gt;--no-interaction&lt;/code&gt; （或 &lt;code&gt;-n&lt;/code&gt; ）标志以确保它退回到ssh密钥身份验证，而不是提示输入密码。对于连续集成服务器来说，这也是一个好技巧。</target>
        </trans-unit>
        <trans-unit id="26f4af5bfb5878d8a90894bd633cb7df99683610" translate="yes" xml:space="preserve">
          <source>Note that this can not be used to check whether platform packages are installed.</source>
          <target state="translated">请注意,这不能用来检查平台包是否安装。</target>
        </trans-unit>
        <trans-unit id="eb8ff490b71790f9c09f4f22c1a128673037a74b" translate="yes" xml:space="preserve">
          <source>Note that this will still need to pull and scan all of your VCS repositories because any VCS repository might contain (on any branch) one of the selected packages.</source>
          <target state="translated">请注意,这仍然需要拉取和扫描所有的VCS资源库,因为任何VCS资源库都可能包含(在任何分支上)所选的包之一。</target>
        </trans-unit>
        <trans-unit id="f01bc369850f21ecb0b302f70e46cf0c42088b86" translate="yes" xml:space="preserve">
          <source>Note that when specifying ranges like &lt;code&gt;&amp;lt;1.0 &amp;gt;=1.1&lt;/code&gt; in a &lt;code&gt;conflict&lt;/code&gt; link, this will state a conflict with all versions that are less than 1.0 &lt;em&gt;and&lt;/em&gt; equal or newer than 1.1 at the same time, which is probably not what you want. You probably want to go for &lt;code&gt;&amp;lt;1.0 || &amp;gt;=1.1&lt;/code&gt; in this case.</source>
          <target state="translated">请注意，在 &lt;code&gt;conflict&lt;/code&gt; 链接中指定范围如 &lt;code&gt;&amp;lt;1.0 &amp;gt;=1.1&lt;/code&gt; 时，这将声明与小于1.0 &lt;em&gt;且&lt;/em&gt;等于或高于1.1的所有版本同时出现冲突，这可能不是您想要的。您可能想使用 &lt;code&gt;&amp;lt;1.0 || &amp;gt;=1.1&lt;/code&gt; 在这种情况下&amp;gt; = 1.1。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="349b8b2d44121046ce03f6a242ab3742d620205a" translate="yes" xml:space="preserve">
          <source>Note that you can also specify platform requirements, for example to check whether you can upgrade your server to PHP 8.0:</source>
          <target state="translated">需要注意的是,你也可以指定平台要求,例如检查你的服务器是否可以升级到PHP 8.0。</target>
        </trans-unit>
        <trans-unit id="f8d858dc9f61c771e304c17678cf573f732e62b5" translate="yes" xml:space="preserve">
          <source>Note that you should not rename the package unless you really intend to fork it in the long term, and completely move away from the original package. Composer will correctly pick your package over the original one since the custom repository has priority over packagist. If you want to rename the package, you should do so in the default (often master) branch and not in a feature branch, since the package name is taken from the default branch.</source>
          <target state="translated">请注意,除非你真的打算长期分叉它,并且完全脱离原来的包,否则你不应该重命名这个包。Composer会正确地选择你的包而不是原来的包,因为自定义仓库比packagist有优先权。如果你想重命名软件包,你应该在默认(通常是master)分支中进行,而不是在特性分支中,因为软件包的名称是从默认分支中提取的。</target>
        </trans-unit>
        <trans-unit id="65627b96ba23d8784652148c698d095d8aa281c4" translate="yes" xml:space="preserve">
          <source>Note: This can not be combined with Level 2/A optimizations. You have to choose one as they address the same issue in different ways.</source>
          <target state="translated">注意:这不能与2/A级优化相结合。你必须选择一种,因为它们以不同的方式解决相同的问题。</target>
        </trans-unit>
        <trans-unit id="a5ff623c6e03990dd6b7700d8d7c9f6a47910f9d" translate="yes" xml:space="preserve">
          <source>Note: This can not be combined with Level 2/B optimizations. You have to choose one as they address the same issue in different ways.</source>
          <target state="translated">注意:这不能与2/B级优化相结合。你必须选择一种,因为它们以不同的方式解决同样的问题。</target>
        </trans-unit>
        <trans-unit id="99765c98ad1c326ebe43566431acdd28e253564b" translate="yes" xml:space="preserve">
          <source>Note: This cannot be combined with Level 2/A optimizations. You have to choose one as they address the same issue in different ways.</source>
          <target state="translated">注意:这不能与2/A级优化相结合。你必须选择一个,因为它们以不同的方式解决相同的问题。</target>
        </trans-unit>
        <trans-unit id="e16b03437154c681ff4e14d39417c7ab96b91e6d" translate="yes" xml:space="preserve">
          <source>Note: This cannot be combined with Level 2/B optimizations. You have to choose one as they address the same issue in different ways.</source>
          <target state="translated">注意:这不能与2/B级优化相结合。你必须选择一个,因为它们以不同的方式解决同样的问题。</target>
        </trans-unit>
        <trans-unit id="387af04d85e51dc7c42b167c7882a89f1e6dcdb8" translate="yes" xml:space="preserve">
          <source>Now Composer should install/update without asking for authentication.</source>
          <target state="translated">现在Composer应该在不要求认证的情况下安装/更新。</target>
        </trans-unit>
        <trans-unit id="9263c718ae240bde8332cbe309524bedf436eeb2" translate="yes" xml:space="preserve">
          <source>Now run &lt;code&gt;composer&lt;/code&gt; in order to run Composer instead of &lt;code&gt;php composer.phar&lt;/code&gt;.</source>
          <target state="translated">现在运行 &lt;code&gt;composer&lt;/code&gt; 以便运行Composer而不是 &lt;code&gt;php composer.phar&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b4e7cc9974d34dfe545130531200e0ad3cd778a8" translate="yes" xml:space="preserve">
          <source>Now run &lt;code&gt;php bin/composer&lt;/code&gt; in order to run Composer.</source>
          <target state="translated">现在运行 &lt;code&gt;php bin/composer&lt;/code&gt; 以便运行Composer。</target>
        </trans-unit>
        <trans-unit id="7e592a51014fd9c1cdc6d0842c0a3d7115a7ee5d" translate="yes" xml:space="preserve">
          <source>Now run &lt;code&gt;php composer.phar&lt;/code&gt; in order to run Composer.</source>
          <target state="translated">现在运行 &lt;code&gt;php composer.phar&lt;/code&gt; 以便运行Composer。</target>
        </trans-unit>
        <trans-unit id="2fab28bb5852f336cde499074da143417cfa4131" translate="yes" xml:space="preserve">
          <source>Now that you have an idea of how Composer sees versions, let's talk about how to specify version constraints for your project dependencies.</source>
          <target state="translated">现在你已经知道Composer是如何看待版本的了,让我们来谈谈如何为你的项目依赖指定版本约束。</target>
        </trans-unit>
        <trans-unit id="3fe810793472cdd189145b4ace481ad873c4b2f7" translate="yes" xml:space="preserve">
          <source>Now that you've installed Composer, you are ready to use it! Head on over to the next chapter for a short and simple demonstration.</source>
          <target state="translated">现在你已经安装了Composer,你已经准备好使用它了! 前往下一章进行简短的演示。</target>
        </trans-unit>
        <trans-unit id="eba7310629e2fefca3ef479c0c68d2398634ff45" translate="yes" xml:space="preserve">
          <source>Now that you've installed Composer, you are ready to use it! Head on over to the next chapter for a short demonstration.</source>
          <target state="translated">现在你已经安装了Composer,你已经准备好使用它了! 请到下一章进行简短的演示。</target>
        </trans-unit>
        <trans-unit id="2bd3a570efb4d8c629a0ee8a6d69ac026d9eacac" translate="yes" xml:space="preserve">
          <source>Now the &lt;code&gt;custom-plugin-command&lt;/code&gt; is available alongside Composer commands.</source>
          <target state="translated">现在， &lt;code&gt;custom-plugin-command&lt;/code&gt; 与Composer命令一起可用。</target>
        </trans-unit>
        <trans-unit id="e9e6eca78d466b159aa78053709e4ad719a70c6b" translate="yes" xml:space="preserve">
          <source>Now the &lt;code&gt;php-cs-fixer&lt;/code&gt; binary is available globally. Make sure your global &lt;a href=&quot;articles/vendor-binaries.md&quot;&gt;vendor binaries&lt;/a&gt; directory is in your &lt;code&gt;$PATH&lt;/code&gt; environment variable, you can get its location with the following command :</source>
          <target state="translated">现在， &lt;code&gt;php-cs-fixer&lt;/code&gt; 二进制文件已在全球范围内可用。确保全局&lt;a href=&quot;articles/vendor-binaries.md&quot;&gt;供应商二进制文件&lt;/a&gt;目录位于 &lt;code&gt;$PATH&lt;/code&gt; 环境变量中，可以使用以下命令获取其位置：</target>
        </trans-unit>
        <trans-unit id="1476aa89b57099f5cad68b9f9cf684fc7a4f638e" translate="yes" xml:space="preserve">
          <source>Now we need to tell the blog app where to find the &lt;code&gt;hello-world&lt;/code&gt; dependency. We do this by adding a package repository specification to the blog's &lt;code&gt;composer.json&lt;/code&gt;:</source>
          <target state="translated">现在，我们需要告诉博客应用程序在哪里可以找到 &lt;code&gt;hello-world&lt;/code&gt; 依赖关系。为此，我们将软件包存储库规范添加到博客的 &lt;code&gt;composer.json&lt;/code&gt; 中：</target>
        </trans-unit>
        <trans-unit id="32ce30c25194aacb1ca0174ad92a44bfeacc8bf6" translate="yes" xml:space="preserve">
          <source>Now, to test installing the &lt;code&gt;acme/hello-world&lt;/code&gt; package, we create a new project locally. We will call it &lt;code&gt;acme/blog&lt;/code&gt;. This blog will depend on &lt;code&gt;acme/hello-world&lt;/code&gt;, which in turn depends on &lt;code&gt;monolog/monolog&lt;/code&gt;. We can accomplish this by creating a new &lt;code&gt;blog&lt;/code&gt; directory somewhere, containing a &lt;code&gt;composer.json&lt;/code&gt;:</source>
          <target state="translated">现在，要测试安装 &lt;code&gt;acme/hello-world&lt;/code&gt; 软件包，我们在本地创建一个新项目。我们将其称为 &lt;code&gt;acme/blog&lt;/code&gt; 。该博客将取决于 &lt;code&gt;acme/hello-world&lt;/code&gt; ，而acme / hello-world则取决于 &lt;code&gt;monolog/monolog&lt;/code&gt; 。我们可以通过在某个地方创建一个新的 &lt;code&gt;blog&lt;/code&gt; 目录（包含 &lt;code&gt;composer.json&lt;/code&gt; )来实现此目的：</target>
        </trans-unit>
        <trans-unit id="4587b368346a74605e0d40b442bfdf26f03c54d5" translate="yes" xml:space="preserve">
          <source>On PHP 5.6+, the class map is also cached in opcache which improves the initialization time greatly. If you make sure opcache is enabled, then the class map should load almost instantly and then class loading is fast.</source>
          <target state="translated">在PHP 5.6+上,类图也被缓存在opcache中,这大大改善了初始化时间。如果你确保启用了opcache,那么类图应该几乎是瞬间加载,然后类加载速度很快。</target>
        </trans-unit>
        <trans-unit id="ae3c3db6d2a031bc3ad36779c6b3e1cdc1fa2c2a" translate="yes" xml:space="preserve">
          <source>On linux, it seems that running this command helps to make ipv4 traffic have a higher prio than ipv6, which is a better alternative than disabling ipv6 entirely:</source>
          <target state="translated">在linux上,似乎运行这条命令有助于使ipv4流量比ipv6有更高的prio,这是比完全禁止ipv6更好的选择。</target>
        </trans-unit>
        <trans-unit id="4cfae3e0baae856236b797ca3f70b48ef9740a1d" translate="yes" xml:space="preserve">
          <source>On windows the only way is to disable ipv6 entirely I am afraid (either in windows or in your home router).</source>
          <target state="translated">在windows上,唯一的办法恐怕就是完全禁用ipv6了(无论是在windows还是在你家的路由器中)。</target>
        </trans-unit>
        <trans-unit id="f4caa5db27c7bbfc7acf3e76298574742a7900d8" translate="yes" xml:space="preserve">
          <source>Once enabled, all downloads (include those from GitHub and BitBucket) will be replaced with a &lt;em&gt;local&lt;/em&gt; version.</source>
          <target state="translated">启用后，所有下载（包括来自GitHub和BitBucket的下载）都将替换为&lt;em&gt;本地&lt;/em&gt;版本。</target>
        </trans-unit>
        <trans-unit id="3c8ecb0a49d67dfd20f0c2a0a5ec46c497e69fbc" translate="yes" xml:space="preserve">
          <source>Once you have a VCS repository (version control system, e.g. git) containing a &lt;code&gt;composer.json&lt;/code&gt; file, your library is already composer-installable. In this example we will publish the &lt;code&gt;acme/hello-world&lt;/code&gt; library on GitHub under &lt;code&gt;github.com/username/hello-world&lt;/code&gt;.</source>
          <target state="translated">一旦有了包含 &lt;code&gt;composer.json&lt;/code&gt; 文件的VCS存储库（版本控制系统，例如git），您的库就已经可以通过composer安装。在此示例中，我们将在 &lt;code&gt;github.com/username/hello-world&lt;/code&gt; 下发布 &lt;code&gt;acme/hello-world&lt;/code&gt; 库。</target>
        </trans-unit>
        <trans-unit id="2be4082b951f4b0fec0a31f2ad0abe0239fad5f2" translate="yes" xml:space="preserve">
          <source>Once you've done this, you run:</source>
          <target state="translated">做完这些,你就跑。</target>
        </trans-unit>
        <trans-unit id="8041e10b705dc85b075554596c8ea75b31b23844" translate="yes" xml:space="preserve">
          <source>One limitation of this is that you can not call multiple commands in a row like &lt;code&gt;@php install &amp;amp;&amp;amp; @php foo&lt;/code&gt;. You must split them up in a JSON array of commands.</source>
          <target state="translated">这种限制之一是您不能连续调用多个命令，例如 &lt;code&gt;@php install &amp;amp;&amp;amp; @php foo&lt;/code&gt; 。您必须将它们拆分为JSON命令数组。</target>
        </trans-unit>
        <trans-unit id="09f49662c505ecd16b312d8170a9b9c8b2a7367b" translate="yes" xml:space="preserve">
          <source>One limitation of this is that you can not call multiple composer commands in a row like &lt;code&gt;@composer install &amp;amp;&amp;amp; @composer foo&lt;/code&gt;. You must split them up in a JSON array of commands.</source>
          <target state="translated">这样的局限性在于您不能连续调用多个composer命令，例如 &lt;code&gt;@composer install &amp;amp;&amp;amp; @composer foo&lt;/code&gt; 。您必须将它们拆分为JSON命令数组。</target>
        </trans-unit>
        <trans-unit id="88a71808a6e53aa8ac0a7288de26ea1f6ebb9c6c" translate="yes" xml:space="preserve">
          <source>Only use a custom type if you need custom logic during installation. It is recommended to omit this field and have it default to &lt;code&gt;library&lt;/code&gt;.</source>
          <target state="translated">仅在安装过程中需要自定义逻辑时才使用自定义类型。建议忽略此字段，并将其默认设置为 &lt;code&gt;library&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5ca29842b6366a87b12b2dfc5e1f8ba42909a4e8" translate="yes" xml:space="preserve">
          <source>Open regedit.</source>
          <target state="translated">打开regedit。</target>
        </trans-unit>
        <trans-unit id="35064de80e652d77dcded899337a2daf36a48c6a" translate="yes" xml:space="preserve">
          <source>Operation timed out (IPv6 issues)</source>
          <target state="translated">操作超时(IPv6问题</target>
        </trans-unit>
        <trans-unit id="e98a8860ae41df2f164bc4524d7707c1fa03e9cb" translate="yes" xml:space="preserve">
          <source>Optimization Level 1: Class map generation</source>
          <target state="translated">优化级别1:类图生成</target>
        </trans-unit>
        <trans-unit id="b88ba88fdefd32d130d14691f8cd9af2d80e4300" translate="yes" xml:space="preserve">
          <source>Optimization Level 2/A: Authoritative class maps</source>
          <target state="translated">优化等级2/A:权威类地图。</target>
        </trans-unit>
        <trans-unit id="374cf1c74f6c9b8b61c87ca0039a7ef67526d9ae" translate="yes" xml:space="preserve">
          <source>Optimization Level 2/B: APCu cache</source>
          <target state="translated">优化级别2/B:APCu缓存。</target>
        </trans-unit>
        <trans-unit id="dcb8c77ab80793f9f37a1a328a3f0f9842d229c7" translate="yes" xml:space="preserve">
          <source>Optimizing the autoloader</source>
          <target state="translated">优化自动加载器</target>
        </trans-unit>
        <trans-unit id="ff1450379f5e57929e363c8b2643a47a4501cc42" translate="yes" xml:space="preserve">
          <source>Optional if the package repository can infer the version from somewhere, such as the VCS tag name in the VCS repository. In that case it is also recommended to omit it.</source>
          <target state="translated">如果软件包仓库可以从某个地方推断出版本,比如VCS仓库中的VCS标签名,则可选。在这种情况下,也建议省略它。</target>
        </trans-unit>
        <trans-unit id="5d05d2dd7183d099b1103019a900abd314417d7a" translate="yes" xml:space="preserve">
          <source>Optional, but highly recommended.</source>
          <target state="translated">可选,但强烈建议。</target>
        </trans-unit>
        <trans-unit id="5a6e381addee65c08c090c3ca7506df2c0160b90" translate="yes" xml:space="preserve">
          <source>Optional, but it is highly recommended to supply this. More identifiers are listed at the &lt;a href=&quot;https://spdx.org/licenses/&quot;&gt;SPDX Open Source License Registry&lt;/a&gt;.</source>
          <target state="translated">可选，但强烈建议提供此选项。&lt;a href=&quot;https://spdx.org/licenses/&quot;&gt;SPDX开放源代码许可证注册表&lt;/a&gt;中列出了更多标识符。</target>
        </trans-unit>
        <trans-unit id="a4149a55fc8e55fc8490190fca6fd327f9a538b3" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">Optional.</target>
        </trans-unit>
        <trans-unit id="6bf5da9c080bee3a8142586c412aa39971137eee" translate="yes" xml:space="preserve">
          <source>Options</source>
          <target state="translated">Options</target>
        </trans-unit>
        <trans-unit id="debe6f39ae1c4b3cf5d5b85436ee9ae9c53b497c" translate="yes" xml:space="preserve">
          <source>Options explained</source>
          <target state="translated">方案解释</target>
        </trans-unit>
        <trans-unit id="b0a85adf308424bc26224008cff29d5723289ca4" translate="yes" xml:space="preserve">
          <source>Or let composer add it for you with:</source>
          <target state="translated">或让作曲家为你添加与。</target>
        </trans-unit>
        <trans-unit id="920735b63b1ba85cdd5521f7e488d6c682247074" translate="yes" xml:space="preserve">
          <source>Or, you can increase the limit with a command-line argument:</source>
          <target state="translated">或者,你可以用命令行参数增加限制。</target>
        </trans-unit>
        <trans-unit id="d291165f3e48fa04de2df661e5577d3237e36a86" translate="yes" xml:space="preserve">
          <source>Other options</source>
          <target state="translated">其他选择</target>
        </trans-unit>
        <trans-unit id="7c4bcdf19c07367e085db3c2d0ddc529436b907b" translate="yes" xml:space="preserve">
          <source>Out of the box, Composer supports four types:</source>
          <target state="translated">开箱即用,Composer支持四种类型。</target>
        </trans-unit>
        <trans-unit id="145c01c620170c3ab3ab1215a0dfe84a56338dba" translate="yes" xml:space="preserve">
          <source>PEAR</source>
          <target state="translated">PEAR</target>
        </trans-unit>
        <trans-unit id="b6e0d0c69cff41f30dce51b7b05962b13a29ec59" translate="yes" xml:space="preserve">
          <source>PHP classes containing defined callbacks must be autoloadable via Composer's autoload functionality.</source>
          <target state="translated">包含定义的回调的PHP类必须可以通过Composer的自动加载功能自动加载。</target>
        </trans-unit>
        <trans-unit id="7b85166b23e4fdb8a3f3d6707be258197c2f05da" translate="yes" xml:space="preserve">
          <source>PSR-0</source>
          <target state="translated">PSR-0</target>
        </trans-unit>
        <trans-unit id="68e25a577a611f4f331ecea46a4359c671d2e74e" translate="yes" xml:space="preserve">
          <source>PSR-4</source>
          <target state="translated">PSR-4</target>
        </trans-unit>
        <trans-unit id="52d9c7a80cbf6e9fceabf8a3117045a2cd4cbe6c" translate="yes" xml:space="preserve">
          <source>PSR-4 is the recommended way since it offers greater ease of use (no need to regenerate the autoloader when you add classes).</source>
          <target state="translated">PSR-4是推荐的方式,因为它提供了更大的易用性(当你添加类时不需要重新生成自动加载器)。</target>
        </trans-unit>
        <trans-unit id="7431e3df243c5be33cffa0b28ca2a76b93f0538c" translate="yes" xml:space="preserve">
          <source>Package</source>
          <target state="translated">Package</target>
        </trans-unit>
        <trans-unit id="d7e71fb265e121afa484cb13fc09323bdb91f3e1" translate="yes" xml:space="preserve">
          <source>Package 'A' has been added</source>
          <target state="translated">增加了 &quot;A &quot;包</target>
        </trans-unit>
        <trans-unit id="9a667517c8b326864c27274f7bc979b19403c775" translate="yes" xml:space="preserve">
          <source>Package 'B' has been removed and package 'C' is added.</source>
          <target state="translated">去掉了'B'包,增加了'C'包。</target>
        </trans-unit>
        <trans-unit id="d73077614a8918bcc7ab02c45fb25c2c3ea664b3" translate="yes" xml:space="preserve">
          <source>Package Events</source>
          <target state="translated">套餐活动</target>
        </trans-unit>
        <trans-unit id="9cd2dccd7cba2c30aa43f6a4a27d8a1ba63796dd" translate="yes" xml:space="preserve">
          <source>Package Events: &lt;a href=&quot;https://getcomposer.org/apidoc/master/Composer/Installer/PackageEvent.html&quot;&gt;&lt;code&gt;Composer\Installer\PackageEvent&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">软件包事件：&lt;a href=&quot;https://getcomposer.org/apidoc/master/Composer/Installer/PackageEvent.html&quot;&gt; &lt;code&gt;Composer\Installer\PackageEvent&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f7ee708da2b2b4ac2f2b6dc1f83560afdbaa61c3" translate="yes" xml:space="preserve">
          <source>Package links</source>
          <target state="translated">包装链接</target>
        </trans-unit>
        <trans-unit id="7808007c934c54e5e8c20cde242071f3de2b4543" translate="yes" xml:space="preserve">
          <source>Package names</source>
          <target state="translated">包名称</target>
        </trans-unit>
        <trans-unit id="9b6676118da40f238ed9660264a2908784ef4d5f" translate="yes" xml:space="preserve">
          <source>Package not found</source>
          <target state="translated">未找到包裹</target>
        </trans-unit>
        <trans-unit id="65bf5a7cd4916964c223ea4dc17425667807c1c9" translate="yes" xml:space="preserve">
          <source>Package not found in a Jenkins-build</source>
          <target state="translated">在Jenkins构建中找不到的包</target>
        </trans-unit>
        <trans-unit id="cf7ada2ffe27de5fe65906b47c96e5bf9be8d26c" translate="yes" xml:space="preserve">
          <source>Package not found on travis-ci.org</source>
          <target state="translated">在travis-ci.org上找不到包。</target>
        </trans-unit>
        <trans-unit id="9d66039c4da8ed7be8986cbc17aef4f92c7e728d" translate="yes" xml:space="preserve">
          <source>Package types are used for custom installation logic. If you have a package that needs some special logic, you can define a custom type. This could be a &lt;code&gt;symfony-bundle&lt;/code&gt;, a &lt;code&gt;wordpress-plugin&lt;/code&gt; or a &lt;code&gt;typo3-cms-extension&lt;/code&gt;. These types will all be specific to certain projects, and they will need to provide an installer capable of installing packages of that type.</source>
          <target state="translated">软件包类型用于自定义安装逻辑。如果您的软件包需要一些特殊的逻辑，则可以定义一个自定义类型。这可能是一个 &lt;code&gt;symfony-bundle&lt;/code&gt; ，一个 &lt;code&gt;wordpress-plugin&lt;/code&gt; 或一个 &lt;code&gt;typo3-cms-extension&lt;/code&gt; 。这些类型都是特定于某些项目的，它们将需要提供能够安装该类型软件包的安装程序。</target>
        </trans-unit>
        <trans-unit id="b1148d2ffb47e8ac173078f14c3968dd49a99de0" translate="yes" xml:space="preserve">
          <source>Package version constraints</source>
          <target state="translated">包装版本限制</target>
        </trans-unit>
        <trans-unit id="7795b2a652dd3647020427af8e59a1a34d64b2c1" translate="yes" xml:space="preserve">
          <source>Packages &lt;strong&gt;not coming from &lt;a href=&quot;https://packagist.org/&quot;&gt;Packagist&lt;/a&gt;&lt;/strong&gt; should always be &lt;strong&gt;defined in the root package&lt;/strong&gt; (the package depending on all vendors).</source>
          <target state="translated">&lt;strong&gt;不是来自&lt;a href=&quot;https://packagist.org/&quot;&gt;Packagist的&lt;/a&gt;&lt;/strong&gt;软件包应始终&lt;strong&gt;在根软件包中定义&lt;/strong&gt;（该软件包取决于所有供应商）。</target>
        </trans-unit>
        <trans-unit id="f2f1d4136f717c17ab1127fb36edacfeb63c693f" translate="yes" xml:space="preserve">
          <source>Packages can supply either of these, or even both. Depending on certain factors, such as user-supplied options and stability of the package, one will be preferred.</source>
          <target state="translated">软件包可以提供其中的一种,甚至可以同时提供两种。根据某些因素,如用户提供的选项和软件包的稳定性,会优先选择其中一种。</target>
        </trans-unit>
        <trans-unit id="880f5abce3a48ec9c69994966d82b07c36f2c125" translate="yes" xml:space="preserve">
          <source>Packages managed entirely by Composer do not &lt;em&gt;need&lt;/em&gt; to contain any &lt;code&gt;.bat&lt;/code&gt; files for Windows compatibility. Composer handles installation of binaries in a special way when run in a Windows environment:</source>
          <target state="translated">完全由Composer管理的软件包&lt;em&gt;无需&lt;/em&gt;包含任何 &lt;code&gt;.bat&lt;/code&gt; 文件即可实现Windows兼容性。在Windows环境中运行时，Composer以特殊方式处理二进制文件的安装：</target>
        </trans-unit>
        <trans-unit id="26055ee12e3b8d847d880cd6592b032b9f872d9a" translate="yes" xml:space="preserve">
          <source>Packages that need to support workflows that may not include Composer are welcome to maintain custom &lt;code&gt;.bat&lt;/code&gt; files. In this case, the package should &lt;strong&gt;not&lt;/strong&gt; list the &lt;code&gt;.bat&lt;/code&gt; file as a binary as it is not needed.</source>
          <target state="translated">欢迎需要支持可能不包含Composer的工作流的软件包来维护自定义 &lt;code&gt;.bat&lt;/code&gt; 文件。在这种情况下，包装应&lt;strong&gt;不&lt;/strong&gt;列出 &lt;code&gt;.bat&lt;/code&gt; ，因为不需要它的文件作为二进制文件。</target>
        </trans-unit>
        <trans-unit id="c6250cdaf320b82f3e5a0d36976d129cdc787296" translate="yes" xml:space="preserve">
          <source>Packagist</source>
          <target state="translated">Packagist</target>
        </trans-unit>
        <trans-unit id="2f4831d117e9d70eb059538b163468d2567d16f0" translate="yes" xml:space="preserve">
          <source>Partial Updates</source>
          <target state="translated">部分更新</target>
        </trans-unit>
        <trans-unit id="519e39132bb98418cc0483cc446ccf5f3c8dcffe" translate="yes" xml:space="preserve">
          <source>Path</source>
          <target state="translated">Path</target>
        </trans-unit>
        <trans-unit id="ad2829254401108e3844a1de487b4372c115fc25" translate="yes" xml:space="preserve">
          <source>Performance wise, it is more efficient to stop looking for a package once it has been found somewhere. It also avoids loading duplicate packages in case the same package is present in several of your repositories.</source>
          <target state="translated">从性能上来说,一旦在某个地方找到了一个包,就停止寻找它,这样会更有效率。它也避免了在你的多个仓库中出现相同的包时,加载重复的包。</target>
        </trans-unit>
        <trans-unit id="0d9776d65bb139d77461c1b341dbd407269c2727" translate="yes" xml:space="preserve">
          <source>Platform check</source>
          <target state="translated">平台检查</target>
        </trans-unit>
        <trans-unit id="70bff551342eea6aa8f97b6fb1a2dd9985b39fe4" translate="yes" xml:space="preserve">
          <source>Platform packages</source>
          <target state="translated">平台包</target>
        </trans-unit>
        <trans-unit id="96d94578c257f290e0c3f650c9d7c1b66632be47" translate="yes" xml:space="preserve">
          <source>Please note namespace declarations should end in &lt;code&gt;\\&lt;/code&gt; to make sure the autoloader responds exactly. For example &lt;code&gt;Foo&lt;/code&gt; would match in &lt;code&gt;FooBar&lt;/code&gt; so the trailing backslashes solve the problem: &lt;code&gt;Foo\\&lt;/code&gt; and &lt;code&gt;FooBar\\&lt;/code&gt; are distinct.</source>
          <target state="translated">请注意，命名空间声明应以 &lt;code&gt;\\&lt;/code&gt; 结尾，以确保自动加载器准确响应。例如， &lt;code&gt;Foo&lt;/code&gt; 在 &lt;code&gt;FooBar&lt;/code&gt; 中将匹配，因此尾部的反斜杠解决了该问题： &lt;code&gt;Foo\\&lt;/code&gt; 和 &lt;code&gt;FooBar\\&lt;/code&gt; 是不同的。</target>
        </trans-unit>
        <trans-unit id="b092b192a4d648e172b4a375b0666e778cde5015" translate="yes" xml:space="preserve">
          <source>Please note:</source>
          <target state="translated">请注意:</target>
        </trans-unit>
        <trans-unit id="dc8572ee2a167aa3f336a06359c0636a878ee8b8" translate="yes" xml:space="preserve">
          <source>Please read &lt;a href=&quot;articles/versions.md&quot;&gt;versions&lt;/a&gt; for more in-depth information on versions, how versions relate to each other, and on version constraints.</source>
          <target state="translated">请阅读&lt;a href=&quot;articles/versions.md&quot;&gt;版本&lt;/a&gt;，以获取有关版本，版本之间如何关联以及版本约束的更深入信息。</target>
        </trans-unit>
        <trans-unit id="2727c3578f91631c9e0a5c09bb235062be698f63" translate="yes" xml:space="preserve">
          <source>Plugin Class</source>
          <target state="translated">插件类</target>
        </trans-unit>
        <trans-unit id="fbdd2cb4c3815c09ac6f353fde19990df0b826d0" translate="yes" xml:space="preserve">
          <source>Plugin Events</source>
          <target state="translated">插件事件</target>
        </trans-unit>
        <trans-unit id="1df4349176f4606f4b4fc1a4c20f4de9c5fe741c" translate="yes" xml:space="preserve">
          <source>Plugin Events:</source>
          <target state="translated">插件事件。</target>
        </trans-unit>
        <trans-unit id="b3ad04f22d54df0016ba8be7060e98cded71cf05" translate="yes" xml:space="preserve">
          <source>Plugin Extra Attributes</source>
          <target state="translated">插件附加属性</target>
        </trans-unit>
        <trans-unit id="3479aa3f4d328ba5454caec581088ea0b3b96289" translate="yes" xml:space="preserve">
          <source>Plugin Helpers</source>
          <target state="translated">插件助手</target>
        </trans-unit>
        <trans-unit id="f2d09e4541ac1902ecf8252c0d5a538540c73aee" translate="yes" xml:space="preserve">
          <source>Plugin Package</source>
          <target state="translated">插件包</target>
        </trans-unit>
        <trans-unit id="e1e8cb868c4b032adc5e4c82f96fadede05e328f" translate="yes" xml:space="preserve">
          <source>Plugin capabilities</source>
          <target state="translated">插件功能</target>
        </trans-unit>
        <trans-unit id="939e4feaf4b53fdc5c48d1d3c8e2c6206d42b692" translate="yes" xml:space="preserve">
          <source>Plugin packages are automatically loaded as soon as they are installed and will be loaded when Composer starts up if they are found in the current project's list of installed packages. Additionally all plugin packages installed in the &lt;code&gt;COMPOSER_HOME&lt;/code&gt; directory using the Composer global command are loaded before local project plugins are loaded.</source>
          <target state="translated">如果在当前项目的已安装软件包列表中找到了插件，则它们将在安装后立即自动加载，并且在Composer启动时将被加载。另外，在加载本地项目插件之前，会先加载使用Composer全局命令安装在 &lt;code&gt;COMPOSER_HOME&lt;/code&gt; 目录中的所有插件包。</target>
        </trans-unit>
        <trans-unit id="a53d056c00a56390bd56f3c78f912907c666bd3c" translate="yes" xml:space="preserve">
          <source>Plugin packages are automatically loaded as soon as they are installed and will be loaded when composer starts up if they are found in the current project's list of installed packages. Additionally all plugin packages installed in the &lt;code&gt;COMPOSER_HOME&lt;/code&gt; directory using the composer global command are loaded before local project plugins are loaded.</source>
          <target state="translated">如果在当前项目的已安装软件包列表中找到了插件，则软件包将在安装后立即自动加载，并且在composer启动时将被加载。此外，在加载本地项目插件之前，将先加载使用composer global命令安装在 &lt;code&gt;COMPOSER_HOME&lt;/code&gt; 目录中的所有插件包。</target>
        </trans-unit>
        <trans-unit id="b7c6ef4a80a2bb0071c2036b48d6fd0521467b1a" translate="yes" xml:space="preserve">
          <source>Plugins for an event can be run manually by the &lt;code&gt;run-script&lt;/code&gt; command. This works the same way as &lt;a href=&quot;scripts.md#running-scripts-manually&quot;&gt;running scripts manually&lt;/a&gt;.</source>
          <target state="translated">可以通过 &lt;code&gt;run-script&lt;/code&gt; 命令手动运行事件的插件。这与&lt;a href=&quot;scripts.md#running-scripts-manually&quot;&gt;手动运行脚本的&lt;/a&gt;方式相同。</target>
        </trans-unit>
        <trans-unit id="17141dcfb65c0d75c4b8fa523d332056f8473365" translate="yes" xml:space="preserve">
          <source>Prefixing the URL with another host is especially helpful if the downloads end up in a private Amazon S3 bucket or on a CDN host. A CDN would drastically improve download times and therefore package installation.</source>
          <target state="translated">如果下载最终是在私人的Amazon S3 bucket或CDN主机上,将URL前缀为另一个主机特别有用。CDN将极大地改善下载时间,从而改善包的安装。</target>
        </trans-unit>
        <trans-unit id="3dbe65a0c8818c614259574a8fd951bbed420749" translate="yes" xml:space="preserve">
          <source>Private Packagist</source>
          <target state="translated">私人包装师</target>
        </trans-unit>
        <trans-unit id="0b2b487a5d607bb7624863de43f47569bd855362" translate="yes" xml:space="preserve">
          <source>Private Packagist is available as a hosted SaaS solution or as an on-premise self-hosted package, providing an easy interactive set up experience.</source>
          <target state="translated">Private Packagist可作为托管的SaaS解决方案,也可作为内部自托管包,提供简单的交互式设置体验。</target>
        </trans-unit>
        <trans-unit id="5275553dcbbff9ce7afe4e381bf1e55a09ac3c82" translate="yes" xml:space="preserve">
          <source>Private Packagist is available as a hosted SaaS solution or as an on-premise self-hosted package, providing an interactive set up experience.</source>
          <target state="translated">Private Packagist可作为托管的SaaS解决方案,也可作为内部自托管包,提供交互式设置体验。</target>
        </trans-unit>
        <trans-unit id="27ffe1daea0160bc5786db4606d8a83b60d8853e" translate="yes" xml:space="preserve">
          <source>Process Exit Codes</source>
          <target state="translated">流程退出代码</target>
        </trans-unit>
        <trans-unit id="cf2d7e79920f5805b436bb910c9b0246a2e2d54d" translate="yes" xml:space="preserve">
          <source>Projects with multiple developers can use this feature to bootstrap the initial application for development.</source>
          <target state="translated">有多个开发人员的项目可以使用此功能来引导初始应用进行开发。</target>
        </trans-unit>
        <trans-unit id="bc6c88db2f0703a9e2461a4a8060ccf1cb881998" translate="yes" xml:space="preserve">
          <source>Properties</source>
          <target state="translated">Properties</target>
        </trans-unit>
        <trans-unit id="51d00bce44383befa1de652a2c9d7a4923aa0aa3" translate="yes" xml:space="preserve">
          <source>Publishing to a VCS</source>
          <target state="translated">发布到VCS</target>
        </trans-unit>
        <trans-unit id="42996cc0d06a03dc418669f81467080a796b0d5a" translate="yes" xml:space="preserve">
          <source>Publishing to packagist</source>
          <target state="translated">出版到包装商</target>
        </trans-unit>
        <trans-unit id="90648a9b69d6e473de40f812b8e2311c4bc465c2" translate="yes" xml:space="preserve">
          <source>Read more about publishing packages and package naming &lt;a href=&quot;02-libraries.md&quot;&gt;here&lt;/a&gt;. (Note that you can also specify &quot;platform packages&quot; as dependencies, allowing you to require certain versions of server software. See &lt;a href=&quot;#platform-packages&quot;&gt;platform packages&lt;/a&gt; below.)</source>
          <target state="translated">&lt;a href=&quot;02-libraries.md&quot;&gt;在此处&lt;/a&gt;阅读有关发布软件包和软件包命名的更多信息。（请注意，您还可以将&amp;ldquo;平台软件包&amp;rdquo;指定为依赖项，从而允许您需要某些版本的服务器软件。请参见下面的&lt;a href=&quot;#platform-packages&quot;&gt;平台软件包&lt;/a&gt;。）</target>
        </trans-unit>
        <trans-unit id="681d40c1d15168cc59415bffa0703c0b2c2a59fc" translate="yes" xml:space="preserve">
          <source>Reason for failing is similar to the problem which can occur on travis-ci.org: The git-clone / checkout within Jenkins leaves the branch in a &quot;detached HEAD&quot;-state. As a result, Composer is not able to identify the version of the current checked out branch and may not be able to resolve a cyclic dependency. To solve this problem, you can use the &quot;Additional Behaviours&quot; -&amp;gt; &quot;Check out to specific local branch&quot; in your Git-settings for your Jenkins-job, where your &quot;local branch&quot; shall be the same branch as you are checking out. Using this, the checkout will not be in detached state any more and cyclic dependency is recognized correctly.</source>
          <target state="translated">失败的原因与travis-ci.org上可能发生的问题类似：Jenkins中的git-clone / checkout使分支处于&amp;ldquo;分离的HEAD&amp;rdquo;状态。结果，Composer无法识别当前已签出分支的版本，并且可能无法解析循环依赖性。要解决此问题，您可以在詹金斯工作的Git设置中使用&amp;ldquo;其他行为&amp;rdquo;-&amp;gt;&amp;ldquo;签出到特定的本地分支&amp;rdquo;，其中&amp;ldquo;本地分支&amp;rdquo;应与您签出的分支相同。使用此功能，结帐将不再处于分离状态，并且循环依赖关系被正确识别。</target>
        </trans-unit>
        <trans-unit id="e65b862a7b98484b46ff204d10dc79c7f23dbb75" translate="yes" xml:space="preserve">
          <source>Referencing scripts</source>
          <target state="translated">引用脚本</target>
        </trans-unit>
        <trans-unit id="658a9348d9a36546995e485b083535db9c64517f" translate="yes" xml:space="preserve">
          <source>Release date of the version.</source>
          <target state="translated">版本的发布日期。</target>
        </trans-unit>
        <trans-unit id="c91e6e6a538a5087a64a99718ae975966b761c1e" translate="yes" xml:space="preserve">
          <source>Repositories</source>
          <target state="translated">Repositories</target>
        </trans-unit>
        <trans-unit id="605e324dd79c33933203988a504354e6dc37d2e2" translate="yes" xml:space="preserve">
          <source>Repositories are not resolved recursively. You can only add them to your main &lt;code&gt;composer.json&lt;/code&gt;. Repository declarations of dependencies' &lt;code&gt;composer.json&lt;/code&gt;s are ignored.</source>
          <target state="translated">存储库不是递归解析的。您只能将它们添加到主 &lt;code&gt;composer.json&lt;/code&gt; 中。依赖项的 &lt;code&gt;composer.json&lt;/code&gt; 的存储库声明将被忽略。</target>
        </trans-unit>
        <trans-unit id="b677b0048a64154830ece638e2fb27b8f835437b" translate="yes" xml:space="preserve">
          <source>Repositories are only available to the root package and the repositories defined in your dependencies will not be loaded. Read the &lt;a href=&quot;https://getcomposer.org/doc/faqs/why-can't-composer-load-repositories-recursively.md&quot;&gt;FAQ entry&lt;/a&gt; if you want to learn why.</source>
          <target state="translated">存储库仅可用于根软件包，并且不会加载依赖项中定义的存储库。如果您想了解原因，请阅读&lt;a href=&quot;https://getcomposer.org/doc/faqs/why-can't-composer-load-repositories-recursively.md&quot;&gt;FAQ条目&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="312386841084261c610413fa4de8b7505f469407" translate="yes" xml:space="preserve">
          <source>Repository</source>
          <target state="translated">Repository</target>
        </trans-unit>
        <trans-unit id="44f131c5603e41419832bde00b1a2ea7e3c8989a" translate="yes" xml:space="preserve">
          <source>Repository priorities</source>
          <target state="translated">存储处的优先事项</target>
        </trans-unit>
        <trans-unit id="0e55ca59eef1f33d943a8c14fb2edc1bffd9bc99" translate="yes" xml:space="preserve">
          <source>Require inline alias</source>
          <target state="translated">要求内联别名</target>
        </trans-unit>
        <trans-unit id="636bb9b3d34f25b03a23fc4011cb6c5b95c66512" translate="yes" xml:space="preserve">
          <source>Required for published packages (libraries).</source>
          <target state="translated">发布的软件包(库)需要。</target>
        </trans-unit>
        <trans-unit id="67e63d91858ebf302948af233d78d205f3631584" translate="yes" xml:space="preserve">
          <source>Resolving dependencies</source>
          <target state="translated">解决依赖性问题</target>
        </trans-unit>
        <trans-unit id="7df340696239be071a6387a173de98047fbbf300" translate="yes" xml:space="preserve">
          <source>Resolving merge conflicts</source>
          <target state="translated">解决合并冲突</target>
        </trans-unit>
        <trans-unit id="bf3c723943afb10b30be5099934d0061dde1b3a0" translate="yes" xml:space="preserve">
          <source>Root Package</source>
          <target state="translated">根茎包</target>
        </trans-unit>
        <trans-unit id="40a11bc6f420df54a1cc6ac2f27779f1a22bcf02" translate="yes" xml:space="preserve">
          <source>Run composer ...</source>
          <target state="translated">运行作曲家...</target>
        </trans-unit>
        <trans-unit id="02c176abc5d53a5cddcb7db60b388f7f2db17a9f" translate="yes" xml:space="preserve">
          <source>Running &lt;code&gt;composer install&lt;/code&gt; for this &lt;code&gt;composer.json&lt;/code&gt; will look at all of project-a's binaries and install them to &lt;code&gt;vendor/bin&lt;/code&gt;.</source>
          <target state="translated">为此 &lt;code&gt;composer.json&lt;/code&gt; 运行 &lt;code&gt;composer install&lt;/code&gt; 将查看project-a的所有二进制文件，并将它们安装到 &lt;code&gt;vendor/bin&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="77d6c9754e9d79e4c035466336d20ed9c56cf340" translate="yes" xml:space="preserve">
          <source>Running &lt;code&gt;composer install&lt;/code&gt; for this &lt;code&gt;composer.json&lt;/code&gt; will not do anything with &lt;code&gt;bin/project-a-bin&lt;/code&gt;.</source>
          <target state="translated">为此 &lt;code&gt;composer.json&lt;/code&gt; 运行 &lt;code&gt;composer install&lt;/code&gt; 不会对 &lt;code&gt;bin/project-a-bin&lt;/code&gt; 起作用。</target>
        </trans-unit>
        <trans-unit id="2c66496e4b8a83692d805b42d3fb10a45cf55a2b" translate="yes" xml:space="preserve">
          <source>Running &lt;code&gt;composer install&lt;/code&gt; for this &lt;code&gt;composer.json&lt;/code&gt; will result in all of the vendor binaries being installed in &lt;code&gt;scripts/&lt;/code&gt; instead of &lt;code&gt;vendor/bin/&lt;/code&gt;.</source>
          <target state="translated">为此 &lt;code&gt;composer.json&lt;/code&gt; 运行 &lt;code&gt;composer install&lt;/code&gt; 将导致所有供应商二进制文件都安装在 &lt;code&gt;scripts/&lt;/code&gt; 而不是 &lt;code&gt;vendor/bin/&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="462d1db361dd2705327cbd57e61bc116206a5b83" translate="yes" xml:space="preserve">
          <source>Running plugins manually</source>
          <target state="translated">手动运行插件</target>
        </trans-unit>
        <trans-unit id="63661918ff1f46e010610418f83ba15536a0edad" translate="yes" xml:space="preserve">
          <source>Running scripts manually</source>
          <target state="translated">手动运行脚本</target>
        </trans-unit>
        <trans-unit id="8861341a898eeb91230e3b848a71f1a26a30d2d8" translate="yes" xml:space="preserve">
          <source>Runtime Composer utilities</source>
          <target state="translated">Runtime Composer实用程序</target>
        </trans-unit>
        <trans-unit id="69ae939a6e24536ac11cc6467262835c9ffe1ab4" translate="yes" xml:space="preserve">
          <source>Satis</source>
          <target state="translated">Satis</target>
        </trans-unit>
        <trans-unit id="afa4ca2e1dad5257bc45bcb2ae3345ecd9520e05" translate="yes" xml:space="preserve">
          <source>Satis is a static &lt;code&gt;composer&lt;/code&gt; repository generator. It is a bit like an ultra- lightweight, static file-based version of packagist.</source>
          <target state="translated">Satis是静态的 &lt;code&gt;composer&lt;/code&gt; 存储库生成器。它有点像超轻量级的，基于静态文件的packagist版本。</target>
        </trans-unit>
        <trans-unit id="0ade51e1e159b2e3e7fa56b4472a1503e5ac6f7d" translate="yes" xml:space="preserve">
          <source>Satis on the other hand is open source but only a static &lt;code&gt;composer&lt;/code&gt; repository generator. It is a bit like an ultra-lightweight, static file-based version of packagist and can be used to host the metadata of your company's private packages, or your own. You can get it from &lt;a href=&quot;https://github.com/composer/satis&quot;&gt;GitHub&lt;/a&gt; or install via CLI:</source>
          <target state="translated">另一方面，Satis是开源的，但只有静态的 &lt;code&gt;composer&lt;/code&gt; 存储库生成器。它有点像基于包装文件的超轻量级静态版本，可用于托管公司私有软件包或您自己私有软件包的元数据。您可以从&lt;a href=&quot;https://github.com/composer/satis&quot;&gt;GitHub&lt;/a&gt;获取它，也可以通过CLI安装：</target>
        </trans-unit>
        <trans-unit id="3085f6884448b8a839b11cdf3feb5ca13ee5f95f" translate="yes" xml:space="preserve">
          <source>Say package &lt;code&gt;my-vendor/project-a&lt;/code&gt; has binaries setup like this:</source>
          <target state="translated">说包 &lt;code&gt;my-vendor/project-a&lt;/code&gt; 有这样的二进制设置：</target>
        </trans-unit>
        <trans-unit id="876d059b9d11b42563fa49538d722751048969b4" translate="yes" xml:space="preserve">
          <source>Say project &lt;code&gt;my-vendor/project-b&lt;/code&gt; has requirements setup like this:</source>
          <target state="translated">说项目 &lt;code&gt;my-vendor/project-b&lt;/code&gt; 具有如下要求设置：</target>
        </trans-unit>
        <trans-unit id="141f05a2d444aedb2a416b6f6aa967c248a38bdb" translate="yes" xml:space="preserve">
          <source>Script definition example:</source>
          <target state="translated">脚本定义示例。</target>
        </trans-unit>
        <trans-unit id="381e3298b2b8f6caeb2208b57d805ada38402f0b" translate="yes" xml:space="preserve">
          <source>Scripts</source>
          <target state="translated">Scripts</target>
        </trans-unit>
        <trans-unit id="8c20810320df84c5a3a66b73a1a4a6799911bd24" translate="yes" xml:space="preserve">
          <source>Scripts execute in the order defined when their corresponding event is fired.</source>
          <target state="translated">脚本的执行顺序是在相应事件被触发时定义的。</target>
        </trans-unit>
        <trans-unit id="bca27a084b31f7d5711e8aa95a27580b07d7ceb8" translate="yes" xml:space="preserve">
          <source>Search for an &lt;code&gt;AutoRun&lt;/code&gt; key inside &lt;code&gt;HKEY_LOCAL_MACHINE\Software\Microsoft\Command Processor&lt;/code&gt;, &lt;code&gt;HKEY_CURRENT_USER\Software\Microsoft\Command Processor&lt;/code&gt; or &lt;code&gt;HKEY_LOCAL_MACHINE\Software\Wow6432Node\Microsoft\Command Processor&lt;/code&gt;.</source>
          <target state="translated">在 &lt;code&gt;HKEY_LOCAL_MACHINE\Software\Microsoft\Command Processor&lt;/code&gt; ， &lt;code&gt;HKEY_CURRENT_USER\Software\Microsoft\Command Processor&lt;/code&gt; 或 &lt;code&gt;HKEY_LOCAL_MACHINE\Software\Wow6432Node\Microsoft\Command Processor&lt;/code&gt; 搜索 &lt;code&gt;AutoRun&lt;/code&gt; 密钥。</target>
        </trans-unit>
        <trans-unit id="f25ce1b8a399bd8621a57427a20039b4b13935db" translate="yes" xml:space="preserve">
          <source>Security</source>
          <target state="translated">Security</target>
        </trans-unit>
        <trans-unit id="6a93cc0baff4a93688d827f28c6b489d9d7ef140" translate="yes" xml:space="preserve">
          <source>Security wise, it is safer to treat them canonically as it means that packages you expect to come from your most important repositories will never be loaded from another repository instead. Let's say you have a private repository which is not canonical, and you require your private package &lt;code&gt;foo/bar ^2.0&lt;/code&gt; for example. Now if someone publishes &lt;code&gt;foo/bar 2.999&lt;/code&gt; to packagist.org, suddenly Composer will pick that package as it has a higher version than your latest release (say 2.4.3), and you end up installing something you may not have meant to. If the private repository is canonical however, that 2.999 version from packagist.org will not be considered at all.</source>
          <target state="translated">在安全方面，规范地对待它们更安全，因为这意味着您期望来自最重要存储库的软件包将永远不会从其他存储库加载。假设您有一个不规范的私有存储库，例如，您需要私有软件包 &lt;code&gt;foo/bar ^2.0&lt;/code&gt; 。现在，如果有人将 &lt;code&gt;foo/bar 2.999&lt;/code&gt; 发布到packagist.org，则Composer会突然选择该软件包，因为它具有比最新版本（例如2.4.3）更高的版本，并且您最终安装了您可能不需要的软件包。但是，如果私有存储库是规范的，则完全不会考虑packagist.org的2.999版本。</target>
        </trans-unit>
        <trans-unit id="2f2e0cfb9b921677358c2029c8aa562157bb4028" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;aliases.md&quot;&gt;aliases&lt;/a&gt; for more information.</source>
          <target state="translated">有关更多信息，请参见&lt;a href=&quot;aliases.md&quot;&gt;别名&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9fa3e83b7d0fca52d3747da12efee577c92ff227" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;articles/scripts.md&quot;&gt;Scripts&lt;/a&gt; for events details and examples.</source>
          <target state="translated">有关事件的详细信息和示例，请参见&lt;a href=&quot;articles/scripts.md&quot;&gt;脚本&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9d620fa0ce1b37fe9dd7ba9d411ab04a43133094" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;articles/vendor-binaries.md&quot;&gt;Vendor Binaries&lt;/a&gt; for more details.</source>
          <target state="translated">有关更多详细信息，请参见&lt;a href=&quot;articles/vendor-binaries.md&quot;&gt;供应商二进制文件&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="559b72f77032e67604dc874b9a392a115d181b4e" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;https://github.com/composer/composer/issues/4180&quot;&gt;https://github.com/composer/composer/issues/4180&lt;/a&gt; for more information.</source>
          <target state="translated">另请参阅&lt;a href=&quot;https://github.com/composer/composer/issues/4180&quot;&gt;https://github.com/composer/composer/issues/4180&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0de267ef8a389c1e7998354eba22473decbeb28f" translate="yes" xml:space="preserve">
          <source>See also the docs on &lt;a href=&quot;articles/autoloader-optimization.md&quot;&gt;optimizing the autoloader&lt;/a&gt;.</source>
          <target state="translated">另请参阅有关&lt;a href=&quot;articles/autoloader-optimization.md&quot;&gt;优化自动装带器&lt;/a&gt;的文档。</target>
        </trans-unit>
        <trans-unit id="40a90c87b8f1bab04a3544adc01bea2e0e9bce45" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;01-basic-usage.md&quot;&gt;Basic usage&lt;/a&gt; chapter for more details on declaring dependencies.</source>
          <target state="translated">有关声明依赖关系的更多详细信息，请参见&amp;ldquo; &lt;a href=&quot;01-basic-usage.md&quot;&gt;基本用法&amp;rdquo;&lt;/a&gt;一章。</target>
        </trans-unit>
        <trans-unit id="2575ba8fbc7c125e927fe44e94d8db132d3a6adb" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;06-config.md&quot;&gt;Config&lt;/a&gt; chapter for valid configuration options.</source>
          <target state="translated">有关有效的配置选项，请参见&amp;ldquo; &lt;a href=&quot;06-config.md&quot;&gt;配置&amp;rdquo;&lt;/a&gt;一章。</target>
        </trans-unit>
        <trans-unit id="e4650020b4ad72f5700c979161041d4ed54e1267" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;&quot;apcu-autoloader&quot;: true&lt;/code&gt; inside the config key of composer.json</source>
          <target state="translated">在 &lt;code&gt;&quot;apcu-autoloader&quot;: true&lt;/code&gt; 的config键中设置&amp;ldquo; apcu-autoloader&amp;rdquo;：true</target>
        </trans-unit>
        <trans-unit id="214a7a23d5f78ae506afcb7b0713b0f632fd1c5f" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;&quot;classmap-authoritative&quot;: true&lt;/code&gt; inside the config key of composer.json</source>
          <target state="translated">在 &lt;code&gt;&quot;classmap-authoritative&quot;: true&lt;/code&gt; 的config键内设置&amp;ldquo; classmap-authoritative&amp;rdquo;：true</target>
        </trans-unit>
        <trans-unit id="5c0a92c54590466a677967f926d1748729dcfdaf" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;&quot;optimize-autoloader&quot;: true&lt;/code&gt; inside the config key of composer.json</source>
          <target state="translated">在composer.json的config键内设置 &lt;code&gt;&quot;optimize-autoloader&quot;: true&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a8874dcc81d1b0c7d334d5272e38e9accbd8eeb3" translate="yes" xml:space="preserve">
          <source>Set up a virtual-host that points to that &lt;code&gt;web/&lt;/code&gt; directory, let's say it is &lt;code&gt;packages.example.org&lt;/code&gt;. Alternatively, with PHP &amp;gt;= 5.4.0, you can use the built-in CLI server &lt;code&gt;php -S localhost:port -t satis-output-dir/&lt;/code&gt; for a temporary solution.</source>
          <target state="translated">设置一个指向该 &lt;code&gt;web/&lt;/code&gt; 目录的虚拟主机，假设它是 &lt;code&gt;packages.example.org&lt;/code&gt; 。或者，对于PHP&amp;gt; = 5.4.0，可以使用内置的CLI服务器 &lt;code&gt;php -S localhost:port -t satis-output-dir/&lt;/code&gt; 作为临时解决方案。</target>
        </trans-unit>
        <trans-unit id="c941b4a056dfd347db1b82a72750653e6336d12d" translate="yes" xml:space="preserve">
          <source>Setting environment variables</source>
          <target state="translated">设置环境变量</target>
        </trans-unit>
        <trans-unit id="ad1bd84f8db19260d4b3be58ad221bf7fd52b6ac" translate="yes" xml:space="preserve">
          <source>Setting the &lt;code&gt;bin-dir&lt;/code&gt; configuration setting in &lt;code&gt;composer.json&lt;/code&gt;</source>
          <target state="translated">在 &lt;code&gt;composer.json&lt;/code&gt; 中设置 &lt;code&gt;bin-dir&lt;/code&gt; 配置设置</target>
        </trans-unit>
        <trans-unit id="e60dbf0bbeb4c51b8c1fb230befbe410040e5635" translate="yes" xml:space="preserve">
          <source>Setting the environment variable &lt;code&gt;COMPOSER_BIN_DIR&lt;/code&gt;</source>
          <target state="translated">设置环境变量 &lt;code&gt;COMPOSER_BIN_DIR&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="af23ae56582131e07f436b39f455d9b7d1775c48" translate="yes" xml:space="preserve">
          <source>Setting up and using custom installers</source>
          <target state="translated">设置和使用自定义安装程序</target>
        </trans-unit>
        <trans-unit id="f9f484fe084b559575d6a474fc363c8262aa4d5b" translate="yes" xml:space="preserve">
          <source>Setting up and using plugins</source>
          <target state="translated">设置和使用插件</target>
        </trans-unit>
        <trans-unit id="cdd7bb2816b7a8f88bce0e47be39943bc369516b" translate="yes" xml:space="preserve">
          <source>Setup</source>
          <target state="translated">Setup</target>
        </trans-unit>
        <trans-unit id="4226ac02b9051f1d88c8061a46bff4b36feed5e3" translate="yes" xml:space="preserve">
          <source>Should I commit the dependencies in my vendor directory?</source>
          <target state="translated">我应该提交供应商目录中的依赖关系吗?</target>
        </trans-unit>
        <trans-unit id="fed63dbe315e1977317e6b4cf10f84a0bfa8ebac" translate="yes" xml:space="preserve">
          <source>Similar to the &lt;code&gt;run-script&lt;/code&gt; command you can give additional arguments to scripts, e.g. &lt;code&gt;composer test -- --filter &amp;lt;pattern&amp;gt;&lt;/code&gt; will pass &lt;code&gt;--filter &amp;lt;pattern&amp;gt;&lt;/code&gt; along to the &lt;code&gt;phpunit&lt;/code&gt; script.</source>
          <target state="translated">与 &lt;code&gt;run-script&lt;/code&gt; 命令类似，您可以为脚本提供其他参数，例如 &lt;code&gt;composer test -- --filter &amp;lt;pattern&amp;gt;&lt;/code&gt; 将 &lt;code&gt;--filter &amp;lt;pattern&amp;gt;&lt;/code&gt; 传递给 &lt;code&gt;phpunit&lt;/code&gt; 脚本。</target>
        </trans-unit>
        <trans-unit id="505c2aef95bc2765ce09ae92a6ca5a4a2e326f2b" translate="yes" xml:space="preserve">
          <source>Similarly when multiple licenses need to be applied (&quot;conjunctive license&quot;), they should be separated with &quot;and&quot; and enclosed in parenthesis.</source>
          <target state="translated">同样,当需要应用多个许可证(&quot;共轭许可证&quot;)时,应以 &quot;和 &quot;分开,并置于括号内。</target>
        </trans-unit>
        <trans-unit id="04a36be54f0e4eea3117a8a4a9ed6aba54589989" translate="yes" xml:space="preserve">
          <source>Similarly, when multiple licenses need to be applied (&quot;conjunctive license&quot;), they should be separated with &quot;and&quot; and enclosed in parentheses.</source>
          <target state="translated">同样,当需要应用多个许可证(&quot;共轭许可证&quot;)时,应该用 &quot;和 &quot;隔开,并放在括号里。</target>
        </trans-unit>
        <trans-unit id="07757201e1834f1bb8a3143e05ba241fefdc3d8b" translate="yes" xml:space="preserve">
          <source>Since Subversion has no native concept of branches and tags, Composer assumes by default that code is located in &lt;code&gt;$url/trunk&lt;/code&gt;, &lt;code&gt;$url/branches&lt;/code&gt; and &lt;code&gt;$url/tags&lt;/code&gt;. If your repository has a different layout you can change those values. For example if you used capitalized names you could configure the repository like this:</source>
          <target state="translated">由于Subversion没有分支和标签的本机概念，因此Composer默认情况下假定代码位于 &lt;code&gt;$url/trunk&lt;/code&gt; ， &lt;code&gt;$url/branches&lt;/code&gt; 和 &lt;code&gt;$url/tags&lt;/code&gt; 。如果您的存储库具有不同的布局，则可以更改这些值。例如，如果您使用大写名称，则可以这样配置存储库：</target>
        </trans-unit>
        <trans-unit id="a1bed418fe5291e542f2bb5af84238985d583150" translate="yes" xml:space="preserve">
          <source>Some of Private Packagist's revenue is used to pay for Composer and Packagist.org development and hosting so using it is a good way to support the maintenance of these open source projects financially. You can find more information about how to set up your own package archive on &lt;a href=&quot;https://packagist.com&quot;&gt;Packagist.com&lt;/a&gt;.</source>
          <target state="translated">Private Packagist的一些收入用于支付Composer和Packagist.org的开发和托管费用，因此使用它是从财务上支持这些开源项目维护的好方法。您可以在&lt;a href=&quot;https://packagist.com&quot;&gt;Packagist.com&lt;/a&gt;上找到有关如何设置自己的软件包存档的更多信息。</target>
        </trans-unit>
        <trans-unit id="d5d81a8f8c1036267fdfca0f8435abe72c266686" translate="yes" xml:space="preserve">
          <source>Some of those libraries depend on other libraries.</source>
          <target state="translated">其中一些图书馆依赖于其他图书馆。</target>
        </trans-unit>
        <trans-unit id="d6761d5d17e468b8fd34c9bb7b904495907fde23" translate="yes" xml:space="preserve">
          <source>Some special plugins need to update package download URLs before they get downloaded.</source>
          <target state="translated">一些特殊的插件需要更新包下载网址才能下载。</target>
        </trans-unit>
        <trans-unit id="ad4df69ade7f1fc9693932011f1486d5afeace2b" translate="yes" xml:space="preserve">
          <source>Sometimes automatic authentication is not possible, or you may want to predefine authentication credentials.</source>
          <target state="translated">有时无法实现自动验证,或者你可能想预先定义验证凭证。</target>
        </trans-unit>
        <trans-unit id="9b30dbe525612c195de526698180ebf74ae6ec09" translate="yes" xml:space="preserve">
          <source>Specifying &lt;code&gt;{&quot;extra&quot;: {&quot;plugin-modifies-downloads&quot;: true}}&lt;/code&gt; in your composer.json will hint to Composer that the plugin should be installed on its own before proceeding with the rest of the package downloads. This slightly slows down the overall installation process however, so do not use it in plugins which do not absolutely require it.</source>
          <target state="translated">在composer.json中指定 &lt;code&gt;{&quot;extra&quot;: {&quot;plugin-modifies-downloads&quot;: true}}&lt;/code&gt; 会提示Composer在继续进行其余的包下载之前，应自行安装插件。但是，这会稍微减慢整个安装过程的速度，因此请不要在并非绝对需要的插件中使用它。</target>
        </trans-unit>
        <trans-unit id="649119b21d03b499ab15c3122932cfbf10621769" translate="yes" xml:space="preserve">
          <source>Specifying one of the words &lt;code&gt;mirrors&lt;/code&gt;, &lt;code&gt;lock&lt;/code&gt;, or &lt;code&gt;nothing&lt;/code&gt; as an argument has the same effect as specifying the option &lt;code&gt;--lock&lt;/code&gt;, for example &lt;code&gt;composer update mirrors&lt;/code&gt; is exactly the same as &lt;code&gt;composer update --lock&lt;/code&gt;.</source>
          <target state="translated">指定 &lt;code&gt;mirrors&lt;/code&gt; ， &lt;code&gt;lock&lt;/code&gt; 或 &lt;code&gt;nothing&lt;/code&gt; 作为参数之一与指定选项 &lt;code&gt;--lock&lt;/code&gt; 效果相同，例如， &lt;code&gt;composer update mirrors&lt;/code&gt; 与 &lt;code&gt;composer update --lock&lt;/code&gt; 完全相同。</target>
        </trans-unit>
        <trans-unit id="ce09e2a04d1ee91f7c193aa30ccee69c0962bbb6" translate="yes" xml:space="preserve">
          <source>Stability Constraints</source>
          <target state="translated">稳定性约束</target>
        </trans-unit>
        <trans-unit id="b500adbbebfd71b34fddb37de3e62913e7c37fbd" translate="yes" xml:space="preserve">
          <source>Stack Overflow has a growing collection of &lt;a href=&quot;https://stackoverflow.com/questions/tagged/composer-php&quot;&gt;Composer related questions&lt;/a&gt;.</source>
          <target state="translated">Stack Overflow收集了越来越多的&lt;a href=&quot;https://stackoverflow.com/questions/tagged/composer-php&quot;&gt;Composer相关问题&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3fc3578f9d49c8b0cad651c3dd63878f9b611d5e" translate="yes" xml:space="preserve">
          <source>Subversion Options</source>
          <target state="translated">颠覆选项</target>
        </trans-unit>
        <trans-unit id="c0b6128dc969b8189931a29860ad74c7707de85e" translate="yes" xml:space="preserve">
          <source>Suggested packages that can enhance or work well with this package. These are informational and are displayed after the package is installed, to give your users a hint that they could add more packages, even though they are not strictly required.</source>
          <target state="translated">建议的包,可以增强或配合这个包工作。这些都是信息性的,会在安装软件包后显示出来,给你的用户一个提示,告诉他们可以添加更多的软件包,即使它们不是严格要求的。</target>
        </trans-unit>
        <trans-unit id="12b71c3e0fe5f7c0b8d17cc03186e281412da4a8" translate="yes" xml:space="preserve">
          <source>Summary</source>
          <target state="translated">Summary</target>
        </trans-unit>
        <trans-unit id="28d1a6decd2e638f2e207094e4022a81f85e33b1" translate="yes" xml:space="preserve">
          <source>Support information includes the following:</source>
          <target state="translated">支持信息包括以下内容:</target>
        </trans-unit>
        <trans-unit id="178e128d3e0c743ef84dc31fd34744e94560d958" translate="yes" xml:space="preserve">
          <source>Suppose at a later time you wish to migrate your PEAR packages to a Composer repository and naming scheme, and adopt the vendor name of &lt;code&gt;foobar&lt;/code&gt;. Projects using your PEAR packages would not see the updated packages, since they have a different vendor name (&lt;code&gt;foobar/IntermediatePackage&lt;/code&gt; vs &lt;code&gt;pear-pear.foobar.repo/IntermediatePackage&lt;/code&gt;).</source>
          <target state="translated">假设以后您希望将PEAR软件包迁移到Composer存储库和命名方案，并采用 &lt;code&gt;foobar&lt;/code&gt; 的供应商名称。使用PEAR软件包的项目将看不到更新的软件包，因为它们具有不同的供应商名称（ &lt;code&gt;foobar/IntermediatePackage&lt;/code&gt; 与 &lt;code&gt;pear-pear.foobar.repo/IntermediatePackage&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="b7151b24f20e3570c88fe771b993984180a7026e" translate="yes" xml:space="preserve">
          <source>Suppose that your project already has a Custom Installer for specific modules then invoking that installer is a matter of defining the correct &lt;a href=&quot;../04-schema.md#type&quot;&gt;type&lt;/a&gt; in your package file.</source>
          <target state="translated">假设您的项目已经具有用于特定模块的自定义安装程序，那么调用该安装程序就是在软件包文件中定义正确的&lt;a href=&quot;../04-schema.md#type&quot;&gt;类型&lt;/a&gt;的问题。</target>
        </trans-unit>
        <trans-unit id="e52bd5474aee7c47125d6c88e627d38304399a38" translate="yes" xml:space="preserve">
          <source>Suppose you have a private PEAR repository and wish to use Composer to incorporate dependencies from a VCS. Your PEAR repository contains the following packages:</source>
          <target state="translated">假设你有一个私有的 PEAR 仓库,并希望使用 Composer 来整合 VCS 的依赖关系。您的 PEAR 仓库包含以下包。</target>
        </trans-unit>
        <trans-unit id="b130631fc1a052b53e9b573c6a35c3793ee28509" translate="yes" xml:space="preserve">
          <source>Suppose:</source>
          <target state="translated">Suppose:</target>
        </trans-unit>
        <trans-unit id="36c0630a340d2960affa1c4d2360b0e2c06793fb" translate="yes" xml:space="preserve">
          <source>Synopsis</source>
          <target state="translated">Synopsis</target>
        </trans-unit>
        <trans-unit id="0e1642f6a15ccf097e1cdabd2a2cd6876eb2a2b4" translate="yes" xml:space="preserve">
          <source>System Requirements</source>
          <target state="translated">系统要求</target>
        </trans-unit>
        <trans-unit id="848eed0fbd5429f556b2982dec3ea87136e33e44" translate="yes" xml:space="preserve">
          <source>Tags</source>
          <target state="translated">Tags</target>
        </trans-unit>
        <trans-unit id="b70c6eaf1355459ee9b2792678e48b364ac7a92a" translate="yes" xml:space="preserve">
          <source>Testing Version Constraints</source>
          <target state="translated">测试版本约束</target>
        </trans-unit>
        <trans-unit id="38971f840464aad791a1ca6172cba81ab073a153" translate="yes" xml:space="preserve">
          <source>That said, if this fixes your problem, please talk to your ISP about it to try and resolve the routing errors. That's the best way to get things resolved for everyone.</source>
          <target state="translated">也就是说,如果这能解决你的问题,请你和你的ISP谈谈,尝试解决路由错误。这是让大家解决问题的最好方法。</target>
        </trans-unit>
        <trans-unit id="0cf9c170058ae7fe4ac78ba8a0f70a5c525899ab" translate="yes" xml:space="preserve">
          <source>That will fetch the &lt;code&gt;dev-bugfix&lt;/code&gt; version of &lt;code&gt;monolog/monolog&lt;/code&gt; from your GitHub and alias it to &lt;code&gt;1.0.x-dev&lt;/code&gt;.</source>
          <target state="translated">这将从您的GitHub 获取 &lt;code&gt;monolog/monolog&lt;/code&gt; 的 &lt;code&gt;dev-bugfix&lt;/code&gt; 版本，并将其别名为 &lt;code&gt;1.0.x-dev&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1ae72273043859b4044f98f451fcae97261be08a" translate="yes" xml:space="preserve">
          <source>That will store it in the current directory's auth.json, but if you want it available globally you can use the &lt;code&gt;--global&lt;/code&gt; (&lt;code&gt;-g&lt;/code&gt;) flag.</source>
          <target state="translated">它将存储在当前目录的auth.json中，但是如果您希望它在全局范围内可用，则可以使用 &lt;code&gt;--global&lt;/code&gt; （ &lt;code&gt;-g&lt;/code&gt; ）标志。</target>
        </trans-unit>
        <trans-unit id="38ca4f78e527bb3cb8fc5615d830b1cad2faef41" translate="yes" xml:space="preserve">
          <source>That's all. You can now install the dependencies by running Composer's &lt;a href=&quot;03-cli.md#install&quot;&gt;&lt;code&gt;install&lt;/code&gt;&lt;/a&gt; command!</source>
          <target state="translated">就这样。现在，您可以通过运行Composer的&lt;a href=&quot;03-cli.md#install&quot;&gt; &lt;code&gt;install&lt;/code&gt; &lt;/a&gt;命令来安装依赖项！</target>
        </trans-unit>
        <trans-unit id="6f7a7ff242bfd8b5c67a5855a5c9da8aeb28993f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../04-schema.md#extra&quot;&gt;extra&lt;/a&gt; attribute must contain an element &lt;code&gt;class&lt;/code&gt; defining the class name of the plugin (including namespace). If a package contains multiple plugins, this can be array of class names.</source>
          <target state="translated">所述&lt;a href=&quot;../04-schema.md#extra&quot;&gt;额外的&lt;/a&gt;属性必须包含的元素 &lt;code&gt;class&lt;/code&gt; 限定插件（包括命名空间）的类名。如果一个包包含多个插件，则这可以是类名称的数组。</target>
        </trans-unit>
        <trans-unit id="e63d949c881e513c359946a15964fc66ca3a9f38" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../04-schema.md#repositories&quot;&gt;&lt;code&gt;repositories&lt;/code&gt;&lt;/a&gt; configuration property is defined as &lt;a href=&quot;../04-schema.md#root-package&quot;&gt;root-only&lt;/a&gt;. It is not inherited. You can read more about the reasons behind this in the &quot;&lt;a href=&quot;https://getcomposer.org/doc/faqs/why-can't-composer-load-repositories-recursively.md&quot;&gt;why can't composer load repositories recursively?&lt;/a&gt;&quot; article. The simplest work-around to this limitation, is moving or duplicating the &lt;code&gt;repositories&lt;/code&gt; definition into your root composer.json.</source>
          <target state="translated">所述&lt;a href=&quot;../04-schema.md#repositories&quot;&gt; &lt;code&gt;repositories&lt;/code&gt; &lt;/a&gt;配置属性被定义为&lt;a href=&quot;../04-schema.md#root-package&quot;&gt;根只&lt;/a&gt;。它不是继承的。您可以在&amp;ldquo; &lt;a href=&quot;https://getcomposer.org/doc/faqs/why-can't-composer-load-repositories-recursively.md&quot;&gt;为什么作曲家无法递归加载存储库？&lt;/a&gt; &amp;rdquo;一文中了解有关此原因的更多信息。解决此限制的最简单方法是将 &lt;code&gt;repositories&lt;/code&gt; 定义移动或复制到您的root composer.json中。</target>
        </trans-unit>
        <trans-unit id="7e648472e86fccaf7b5a0d4f0178fcbf7990ea9f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../04-schema.md#type&quot;&gt;type&lt;/a&gt; attribute must be &lt;code&gt;composer-plugin&lt;/code&gt;.</source>
          <target state="translated">该&lt;a href=&quot;../04-schema.md#type&quot;&gt;类型的&lt;/a&gt;属性必须是 &lt;code&gt;composer-plugin&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9c0c186b57848575cfd467a57c175faa35ce67c4" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://github.com/composer/composer/blob/master/src/Composer/Plugin/Capability/CommandProvider.php&quot;&gt;&lt;code&gt;Composer\Plugin\Capability\CommandProvider&lt;/code&gt;&lt;/a&gt; capability allows to register additional commands for Composer :</source>
          <target state="translated">的&lt;a href=&quot;https://github.com/composer/composer/blob/master/src/Composer/Plugin/Capability/CommandProvider.php&quot;&gt; &lt;code&gt;Composer\Plugin\Capability\CommandProvider&lt;/code&gt; &lt;/a&gt;功能允许为作曲注册附加的命令：</target>
        </trans-unit>
        <trans-unit id="23c67a10129af478cab11c486ff532d107288e34" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://github.com/composer/composer/blob/master/src/Composer/Plugin/Capability/CommandProvider.php&quot;&gt;&lt;code&gt;Composer\Plugin\Capability\CommandProvider&lt;/code&gt;&lt;/a&gt; capability allows to register additional commands for Composer:</source>
          <target state="translated">的&lt;a href=&quot;https://github.com/composer/composer/blob/master/src/Composer/Plugin/Capability/CommandProvider.php&quot;&gt; &lt;code&gt;Composer\Plugin\Capability\CommandProvider&lt;/code&gt; &lt;/a&gt;功能允许为作曲注册附加的命令：</target>
        </trans-unit>
        <trans-unit id="325c906fcb1706b6d31de5f9aea2d2c7863feee2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&quot;package&quot;&lt;/code&gt; key in a &lt;code&gt;package&lt;/code&gt; repository may be set to an array to define multiple versions of a package:</source>
          <target state="translated">&lt;code&gt;package&lt;/code&gt; 存储库中的 &lt;code&gt;&quot;package&quot;&lt;/code&gt; 键可以设置为数组，以定义软件包的多个版本：</target>
        </trans-unit>
        <trans-unit id="2d194afcac512a2852d1eb7e545166d274d4dfcf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@composer.json&lt;/code&gt; marker would be the contents of the &lt;code&gt;composer.json&lt;/code&gt; from that package version including as a minimum:</source>
          <target state="translated">在 &lt;code&gt;@composer.json&lt;/code&gt; 标记将是内容 &lt;code&gt;composer.json&lt;/code&gt; 从包括作为最小该包版本：</target>
        </trans-unit>
        <trans-unit id="7971e0aa5c9a4165d1f5cb15ed4686c68f4554fa" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;COMPOSER_AUTH&lt;/code&gt; var allows you to set up authentication as an environment variable. The contents of the variable should be a JSON formatted object containing &lt;a href=&quot;articles/authentication-for-private-packages.md&quot;&gt;http-basic, github-oauth, bitbucket-oauth, ... objects as needed&lt;/a&gt;, and following the &lt;a href=&quot;06-config.md&quot;&gt;spec from the config&lt;/a&gt;.</source>
          <target state="translated">该 &lt;code&gt;COMPOSER_AUTH&lt;/code&gt; VAR允许您设置身份验证的环境变量。变量的内容应为JSON格式的对象&lt;a href=&quot;articles/authentication-for-private-packages.md&quot;&gt;，根据需要&lt;/a&gt;包含http-basic，github-oauth，bitbucket-oauth，...对象，并遵循&lt;a href=&quot;06-config.md&quot;&gt;config中&lt;/a&gt;的规范。</target>
        </trans-unit>
        <trans-unit id="bd712f3b81992c5860b40a6b5ab839dc7e577f9c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;COMPOSER_AUTH&lt;/code&gt; var allows you to set up authentication as an environment variable. The contents of the variable should be a JSON formatted object containing http-basic, github-oauth, bitbucket-oauth, ... objects as needed, and following the &lt;a href=&quot;06-config.md#gitlab-oauth&quot;&gt;spec from the config&lt;/a&gt;.</source>
          <target state="translated">该 &lt;code&gt;COMPOSER_AUTH&lt;/code&gt; VAR允许您设置身份验证的环境变量。变量的内容应为JSON格式的对象，根据需要包含http-basic，github-oauth，bitbucket-oauth，...对象，并遵循&lt;a href=&quot;06-config.md#gitlab-oauth&quot;&gt;config中&lt;/a&gt;的规范。</target>
        </trans-unit>
        <trans-unit id="3ed00a9880a9e50789f89e7aab7d95b03db98829" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;COMPOSER_CACHE_DIR&lt;/code&gt; var allows you to change the Composer cache directory, which is also configurable via the &lt;a href=&quot;06-config.md#cache-dir&quot;&gt;&lt;code&gt;cache-dir&lt;/code&gt;&lt;/a&gt; option.</source>
          <target state="translated">该 &lt;code&gt;COMPOSER_CACHE_DIR&lt;/code&gt; VAR允许您更改作曲家缓存目录，这也是通过可配置的&lt;a href=&quot;06-config.md#cache-dir&quot;&gt; &lt;code&gt;cache-dir&lt;/code&gt; &lt;/a&gt;选项。</target>
        </trans-unit>
        <trans-unit id="7bc49fec4bcc895b60c5179e29c54bb2670855e4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;COMPOSER_HOME&lt;/code&gt; var allows you to change the Composer home directory. This is a hidden, global (per-user on the machine) directory that is shared between all projects.</source>
          <target state="translated">该 &lt;code&gt;COMPOSER_HOME&lt;/code&gt; VAR允许您更改作曲家的主目录。这是在所有项目之间共享的隐藏的全局（计算机上的每个用户）目录。</target>
        </trans-unit>
        <trans-unit id="e041cfbe9bb1437b512da0ba6bc16c640c5d064f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;^&lt;/code&gt; operator behaves very similarly but it sticks closer to semantic versioning, and will always allow non-breaking updates. For example &lt;code&gt;^1.2.3&lt;/code&gt; is equivalent to &lt;code&gt;&amp;gt;=1.2.3 &amp;lt;2.0.0&lt;/code&gt; as none of the releases until 2.0 should break backwards compatibility. For pre-1.0 versions it also acts with safety in mind and treats &lt;code&gt;^0.3&lt;/code&gt; as &lt;code&gt;&amp;gt;=0.3.0 &amp;lt;0.4.0&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;^&lt;/code&gt; 经营者的行为非常相似，但它坚持接近语义版本，而且将永远让非换更新。例如， &lt;code&gt;^1.2.3&lt;/code&gt; 等效于 &lt;code&gt;&amp;gt;=1.2.3 &amp;lt;2.0.0&lt;/code&gt; ,因为直到2.0发行版都不应该向后兼容。对于1.0之前的版本，它还考虑到安全性，并且将 &lt;code&gt;^0.3&lt;/code&gt; 视为 &lt;code&gt;&amp;gt;=0.3.0 &amp;lt;0.4.0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f9dc8084f42f62a2ec382aab0e4dd6343b101b44" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;^&lt;/code&gt; operator behaves very similarly, but it sticks closer to semantic versioning, and will always allow non-breaking updates. For example &lt;code&gt;^1.2.3&lt;/code&gt; is equivalent to &lt;code&gt;&amp;gt;=1.2.3 &amp;lt;2.0.0&lt;/code&gt; as none of the releases until 2.0 should break backwards compatibility. For pre-1.0 versions it also acts with safety in mind and treats &lt;code&gt;^0.3&lt;/code&gt; as &lt;code&gt;&amp;gt;=0.3.0 &amp;lt;0.4.0&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;^&lt;/code&gt; 经营者的行为非常相似，但它坚持接近语义版本，而且将永远让非换更新。例如， &lt;code&gt;^1.2.3&lt;/code&gt; 等效于 &lt;code&gt;&amp;gt;=1.2.3 &amp;lt;2.0.0&lt;/code&gt; ,因为直到2.0发行版都不应破坏向后兼容性。对于1.0之前的版本，它也考虑到安全性，并且将 &lt;code&gt;^0.3&lt;/code&gt; 视为 &lt;code&gt;&amp;gt;=0.3.0 &amp;lt;0.4.0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="015e5b54a0eec0b1d03e7f482cd6462e60215bba" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;browse&lt;/code&gt; (aliased to &lt;code&gt;home&lt;/code&gt;) opens a package's repository URL or homepage in your browser.</source>
          <target state="translated">该 &lt;code&gt;browse&lt;/code&gt; （化名到 &lt;code&gt;home&lt;/code&gt; ）打开包的存储库URL或网页浏览器。</target>
        </trans-unit>
        <trans-unit id="e24a601ed15c83838a05734062b36f958f6fe9aa" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;classmap&lt;/code&gt; references are all combined, during install/update, into a single key =&amp;gt; value array which may be found in the generated file &lt;code&gt;vendor/composer/autoload_classmap.php&lt;/code&gt;. This map is built by scanning for classes in all &lt;code&gt;.php&lt;/code&gt; and &lt;code&gt;.inc&lt;/code&gt; files in the given directories/files.</source>
          <target state="translated">在安装/更新期间，所有的类 &lt;code&gt;classmap&lt;/code&gt; 引用都组合到一个键=&amp;gt;值数组中，该数组可以在生成的文件 &lt;code&gt;vendor/composer/autoload_classmap.php&lt;/code&gt; 中找到。通过扫描给定目录/文件中所有 &lt;code&gt;.php&lt;/code&gt; 和 &lt;code&gt;.inc&lt;/code&gt; 文件中的类来构建此映射。</target>
        </trans-unit>
        <trans-unit id="21bbbda97714f24cc525ea7078e6201890999863" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;config&lt;/code&gt; command allows you to edit composer config settings and repositories in either the local &lt;code&gt;composer.json&lt;/code&gt; file or the global &lt;code&gt;config.json&lt;/code&gt; file.</source>
          <target state="translated">该 &lt;code&gt;config&lt;/code&gt; 命令允许您编辑作曲家的配置设置和存储库无论是在本地 &lt;code&gt;composer.json&lt;/code&gt; 文件或全局 &lt;code&gt;config.json&lt;/code&gt; 文件。</target>
        </trans-unit>
        <trans-unit id="c6c37718b606670d0260bf58b8957a8aa19464e2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;depends&lt;/code&gt; command tells you which other packages depend on a certain package. As with installation &lt;code&gt;require-dev&lt;/code&gt; relationships are only considered for the root package.</source>
          <target state="translated">将 &lt;code&gt;depends&lt;/code&gt; 命令告诉您哪些其他包依赖某个软件包。与安装一样，仅根目录包考虑 &lt;code&gt;require-dev&lt;/code&gt; 关系。</target>
        </trans-unit>
        <trans-unit id="cd8cb2da2827dbba6abaedf322dadfb22ed9c77d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;dev-master&lt;/code&gt; branch is one in your main VCS repo. It is rather common that someone will want the latest master dev version. Thus, Composer allows you to alias your &lt;code&gt;dev-master&lt;/code&gt; branch to a &lt;code&gt;1.0.x-dev&lt;/code&gt; version. It is done by specifying a &lt;code&gt;branch-alias&lt;/code&gt; field under &lt;code&gt;extra&lt;/code&gt; in &lt;code&gt;composer.json&lt;/code&gt;:</source>
          <target state="translated">该 &lt;code&gt;dev-master&lt;/code&gt; 分支是一个在主VCS回购。有人想要最新的master开发版本是很常见的。因此，Composer允许您将 &lt;code&gt;dev-master&lt;/code&gt; 分支的别名 &lt;code&gt;1.0.x-dev&lt;/code&gt; 为1.0.x-dev版本。通过在 &lt;code&gt;composer.json&lt;/code&gt; 中的 &lt;code&gt;extra&lt;/code&gt; 下指定一个 &lt;code&gt;branch-alias&lt;/code&gt; 字段来完成：</target>
        </trans-unit>
        <trans-unit id="3ffd5faf0b39f88ce9eee783d1d943fc47e2604b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;install&lt;/code&gt; command reads the &lt;code&gt;composer.json&lt;/code&gt; file from the current directory, resolves the dependencies, and installs them into &lt;code&gt;vendor&lt;/code&gt;.</source>
          <target state="translated">在 &lt;code&gt;install&lt;/code&gt; 命令读取 &lt;code&gt;composer.json&lt;/code&gt; 从当前目录下的文件，解决了依赖关系，并把其安装到 &lt;code&gt;vendor&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f774533682957100a16d42c9b2905ad80d2df57c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;name&lt;/code&gt; property is required for published packages (libraries).</source>
          <target state="translated">该 &lt;code&gt;name&lt;/code&gt; 物业需要发布的数据包（库）。</target>
        </trans-unit>
        <trans-unit id="af9d00ff9fc127804bb95896f7496fcf274263e3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;notify-batch&lt;/code&gt; field allows you to specify a URL that will be called every time a user installs a package. The URL can be either an absolute path (that will use the same domain as the repository) or a fully qualified URL.</source>
          <target state="translated">该 &lt;code&gt;notify-batch&lt;/code&gt; 字段允许你指定一个将被调用每一个用户安装包时URL。URL可以是绝对路径（将使用与存储库相同的域）或完全限定的URL。</target>
        </trans-unit>
        <trans-unit id="3669b742119a5a005a77a35a608ab174f7ff28ec" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;notify-batch&lt;/code&gt; field allows you to specify a URL that will be called every time a user installs a package. The URL can be either an absolute path (that will use the same domain as the repository), or a fully qualified URL.</source>
          <target state="translated">该 &lt;code&gt;notify-batch&lt;/code&gt; 字段允许你指定一个将被调用每一个用户安装包时URL。该URL可以是绝对路径（将使用与存储库相同的域），也可以是完全限定的URL。</target>
        </trans-unit>
        <trans-unit id="5dc0d928853964ca3fd6729ac78fc54fe7baf249" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;outdated&lt;/code&gt; command shows a list of installed packages that have updates available, including their current and latest versions. This is basically an alias for &lt;code&gt;composer show -lo&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;outdated&lt;/code&gt; 命令显示有可用的更新，包括当前和最新版本的安装包的列表。这基本上是 &lt;code&gt;composer show -lo&lt;/code&gt; 的别名。</target>
        </trans-unit>
        <trans-unit id="1fc3b3ae8a67c22d97268e322bf22ea6082ae19e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;packages.json&lt;/code&gt; file is loaded using a PHP stream. You can set extra options on that stream using the &lt;code&gt;options&lt;/code&gt; parameter. You can set any valid PHP stream context option. See &lt;a href=&quot;https://php.net/manual/en/context.php&quot;&gt;Context options and parameters&lt;/a&gt; for more information.</source>
          <target state="translated">该 &lt;code&gt;packages.json&lt;/code&gt; 文件使用PHP流加载。您可以使用 &lt;code&gt;options&lt;/code&gt; 参数在该流上设置其他选项。您可以设置任何有效的PHP流上下文选项。有关更多信息，请参见&lt;a href=&quot;https://php.net/manual/en/context.php&quot;&gt;上下文选项和参数&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="71efcc29e40b42abc0b13e32c0ea8a45315fc701" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;prohibits&lt;/code&gt; command tells you which packages are blocking a given package from being installed. Specify a version constraint to verify whether upgrades can be performed in your project, and if not why not. See the following example:</source>
          <target state="translated">该 &lt;code&gt;prohibits&lt;/code&gt; 命令告诉你哪些包阻塞被安装了这个包。指定版本约束以验证是否可以在您的项目中执行升级，如果不能，则执行为什么。请参见以下示例：</target>
        </trans-unit>
        <trans-unit id="f4fb232cdcc4af02a2a6fc8964c4e4e68c3772b2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;provider-includes&lt;/code&gt; field allows you to list a set of files that list package names provided by this repository. The hash should be a sha256 of the files in this case.</source>
          <target state="translated">该 &lt;code&gt;provider-includes&lt;/code&gt; 字段，可以列出一组文件的该列表包名由该库提供。在这种情况下，哈希应为文件的sha256。</target>
        </trans-unit>
        <trans-unit id="99a72339c9fbd5f71d239e716a19d3ef78a99394" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;providers-url&lt;/code&gt; describes how provider files are found on the server. It is an absolute path from the repository root. It must contain the placeholders &lt;code&gt;%package%&lt;/code&gt; and &lt;code&gt;%hash%&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;providers-url&lt;/code&gt; 描述提供文件是如何在服务器上找到。这是从存储库根目录开始的绝对路径。它必须包含占位符 &lt;code&gt;%package%&lt;/code&gt; 和 &lt;code&gt;%hash%&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="28b5498e54a0d27ed7d7003af00bb9c9ef721186" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;remove&lt;/code&gt; command removes packages from the &lt;code&gt;composer.json&lt;/code&gt; file from the current directory.</source>
          <target state="translated">该 &lt;code&gt;remove&lt;/code&gt; 命令从包中删除 &lt;code&gt;composer.json&lt;/code&gt; 从当前目录中的文件。</target>
        </trans-unit>
        <trans-unit id="a2a826c2fb4b4f08c3a69b19718facb4884e979c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;require&lt;/code&gt; command adds new packages to the &lt;code&gt;composer.json&lt;/code&gt; file from the current directory. If no file exists one will be created on the fly.</source>
          <target state="translated">在 &lt;code&gt;require&lt;/code&gt; 命令增加了新的软件包到 &lt;code&gt;composer.json&lt;/code&gt; 从当前目录下的文件。如果不存在文件，则将即时创建一个文件。</target>
        </trans-unit>
        <trans-unit id="3ab1e58fb4e10f7b6b5e0e76a52020bdc4252e34" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;require&lt;/code&gt; key</source>
          <target state="translated">该 &lt;code&gt;require&lt;/code&gt; 的关键</target>
        </trans-unit>
        <trans-unit id="346d1272d0323d4c3803e8e8e133e5fcf9d5248b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;true&lt;/code&gt; value indicates that the package is truly abandoned while the &lt;code&gt;&quot;company/newpackage&quot;&lt;/code&gt; value specifies that the package is replaced by the &lt;code&gt;company/newpackage&lt;/code&gt; package.</source>
          <target state="translated">该 &lt;code&gt;true&lt;/code&gt; 值表示，该包装是真正抛弃，而 &lt;code&gt;&quot;company/newpackage&quot;&lt;/code&gt; 值指定的包被替换 &lt;code&gt;company/newpackage&lt;/code&gt; 包。</target>
        </trans-unit>
        <trans-unit id="c56cadbd66f034c7c3ee76e3d00211e36a3d21e0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;~&lt;/code&gt; operator is best explained by example: &lt;code&gt;~1.2&lt;/code&gt; is equivalent to &lt;code&gt;&amp;gt;=1.2 &amp;lt;2.0.0&lt;/code&gt;, while &lt;code&gt;~1.2.3&lt;/code&gt; is equivalent to &lt;code&gt;&amp;gt;=1.2.3 &amp;lt;1.3.0&lt;/code&gt;. As you can see it is mostly useful for projects respecting &lt;a href=&quot;https://semver.org/&quot;&gt;semantic versioning&lt;/a&gt;. A common usage would be to mark the minimum minor version you depend on, like &lt;code&gt;~1.2&lt;/code&gt; (which allows anything up to, but not including, 2.0). Since in theory there should be no backwards compatibility breaks until 2.0, that works well. Another way of looking at it is that using &lt;code&gt;~&lt;/code&gt; specifies a minimum version, but allows the last digit specified to go up.</source>
          <target state="translated">所述 &lt;code&gt;~&lt;/code&gt; 操作者最好用例子说明： &lt;code&gt;~1.2&lt;/code&gt; 相当于 &lt;code&gt;&amp;gt;=1.2 &amp;lt;2.0.0&lt;/code&gt; ，而 &lt;code&gt;~1.2.3&lt;/code&gt; 相当于 &lt;code&gt;&amp;gt;=1.2.3 &amp;lt;1.3.0&lt;/code&gt; 。如您所见，它对于尊重&lt;a href=&quot;https://semver.org/&quot;&gt;语义版本控制的&lt;/a&gt;项目非常有用。通常的用法是标记您所依赖的最小次要版本，例如 &lt;code&gt;~1.2&lt;/code&gt; （允许包含但不包括2.0的任何内容）。从理论上讲，直到2.0才应该没有向后兼容性中断，因此效果很好。另一种查看方式是使用 &lt;code&gt;~&lt;/code&gt; 指定最低版本，但允许指定的最后一位数字递增。</target>
        </trans-unit>
        <trans-unit id="f025912d98018c171a9e7aa4c512d6735e081304" translate="yes" xml:space="preserve">
          <source>The BitBucket driver uses OAuth to access your private repositories via the BitBucket REST APIs and you will need to create an OAuth consumer to use the driver, please refer to &lt;a href=&quot;https://confluence.atlassian.com/bitbucket/oauth-on-bitbucket-cloud-238027431.html&quot;&gt;Atlassian's Documentation&lt;/a&gt;. You will need to fill the callback url with something to satisfy BitBucket, but the address does not need to go anywhere and is not used by Composer.</source>
          <target state="translated">BitBucket驱动程序使用OAuth通过BitBucket REST API访问您的私有存储库，您将需要创建OAuth使用方来使用该驱动程序，请参阅&lt;a href=&quot;https://confluence.atlassian.com/bitbucket/oauth-on-bitbucket-cloud-238027431.html&quot;&gt;Atlassian文档&lt;/a&gt;。您将需要用满足BitBucket的内容来填充回调URL，但是该地址不需要放在任何地方并且Composer不会使用该地址。</target>
        </trans-unit>
        <trans-unit id="cec923521306780ceeeaec203439388881f9443f" translate="yes" xml:space="preserve">
          <source>The BitBucket driver uses OAuth to access your private repositories via the BitBucket REST APIs, and you will need to create an OAuth consumer to use the driver, please refer to &lt;a href=&quot;https://support.atlassian.com/bitbucket-cloud/docs/use-oauth-on-bitbucket-cloud/&quot;&gt;Atlassian's Documentation&lt;/a&gt;. You will need to fill the callback url with something to satisfy BitBucket, but the address does not need to go anywhere and is not used by Composer.</source>
          <target state="translated">BitBucket驱动程序使用OAuth通过BitBucket REST API访问您的私有存储库，您将需要创建OAuth使用方来使用该驱动程序，请参阅&lt;a href=&quot;https://support.atlassian.com/bitbucket-cloud/docs/use-oauth-on-bitbucket-cloud/&quot;&gt;Atlassian文档&lt;/a&gt;。您将需要用满足BitBucket的内容来填充回调URL，但是该地址不需要放在任何地方并且Composer不会使用它。</target>
        </trans-unit>
        <trans-unit id="d8325f01cfc89ecc5834c22272e499dc2a35975d" translate="yes" xml:space="preserve">
          <source>The Custom Installer class</source>
          <target state="translated">自定义安装程序类</target>
        </trans-unit>
        <trans-unit id="9ffda155dc61c6b7fc0c53c17b097166f828397f" translate="yes" xml:space="preserve">
          <source>The Installer class, e.g.: &lt;code&gt;My\Project\Composer\Installer.php&lt;/code&gt;, containing a class that implements &lt;code&gt;Composer\Installer\InstallerInterface&lt;/code&gt;.</source>
          <target state="translated">Installer类，例如： &lt;code&gt;My\Project\Composer\Installer.php&lt;/code&gt; ，包含实现 &lt;code&gt;Composer\Installer\InstallerInterface&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="40980219df2f4506ac88e5c28f53b42bdd97d1a6" translate="yes" xml:space="preserve">
          <source>The InstallerInterface class defines the following methods (please see the source for the exact signature):</source>
          <target state="translated">InstallerInterface类定义了以下方法(具体签名请看源码)。</target>
        </trans-unit>
        <trans-unit id="6a8be988f00a6babc58dafb4dd2328cbd191b0a7" translate="yes" xml:space="preserve">
          <source>The PSR-0 references are all combined, during install/update, into a single key =&amp;gt; value array which may be found in the generated file &lt;code&gt;vendor/composer/autoload_namespaces.php&lt;/code&gt;.</source>
          <target state="translated">在安装/更新期间，所有PSR-0引用都合并到一个键=&amp;gt;值数组中，该数组可以在生成的文件 &lt;code&gt;vendor/composer/autoload_namespaces.php&lt;/code&gt; 中找到。</target>
        </trans-unit>
        <trans-unit id="e895bca51e7dbca56269fca833da7d53335b08ce" translate="yes" xml:space="preserve">
          <source>The PSR-0 style is not limited to namespace declarations only but may be specified right down to the class level. This can be useful for libraries with only one class in the global namespace. If the php source file is also located in the root of the package, for example, it may be declared like this:</source>
          <target state="translated">PSR-0风格并不局限于命名空间的声明,而是可以直接指定到类级。这对于在全局命名空间中只有一个类的库是很有用的。例如,如果php源文件也位于包的根目录下,可以这样声明。</target>
        </trans-unit>
        <trans-unit id="cbb9bada46ef9caab4f699c77fb22360668e31ba" translate="yes" xml:space="preserve">
          <source>The PSR-4 references are all combined, during install/update, into a single key =&amp;gt; value array which may be found in the generated file &lt;code&gt;vendor/composer/autoload_psr4.php&lt;/code&gt;.</source>
          <target state="translated">在安装/更新期间，所有PSR-4引用都合并到一个键=&amp;gt;值数组中，该数组可以在生成的文件 &lt;code&gt;vendor/composer/autoload_psr4.php&lt;/code&gt; 中找到。</target>
        </trans-unit>
        <trans-unit id="ea8afc8984ffee8650e20f4736a1022091c847c6" translate="yes" xml:space="preserve">
          <source>The Plugin class</source>
          <target state="translated">插件类</target>
        </trans-unit>
        <trans-unit id="b068549699c4405448400cc7e68c4a937ff32939" translate="yes" xml:space="preserve">
          <source>The Plugin class, e.g.: &lt;code&gt;My\Project\Composer\Plugin.php&lt;/code&gt;, containing a class that implements &lt;code&gt;Composer\Plugin\PluginInterface&lt;/code&gt;.</source>
          <target state="translated">插件类，例如： &lt;code&gt;My\Project\Composer\Plugin.php&lt;/code&gt; ，包含实现 &lt;code&gt;Composer\Plugin\PluginInterface&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a9837d2cfdfe1047f666926235fe851440587ed9" translate="yes" xml:space="preserve">
          <source>The VCS driver to be used is detected automatically based on the URL. However, should you need to specify one for whatever reason, you can use &lt;code&gt;git-bitbucket&lt;/code&gt;, &lt;code&gt;hg-bitbucket&lt;/code&gt;, &lt;code&gt;github&lt;/code&gt;, &lt;code&gt;gitlab&lt;/code&gt;, &lt;code&gt;perforce&lt;/code&gt;, &lt;code&gt;fossil&lt;/code&gt;, &lt;code&gt;git&lt;/code&gt;, &lt;code&gt;svn&lt;/code&gt; or &lt;code&gt;hg&lt;/code&gt; as the repository type instead of &lt;code&gt;vcs&lt;/code&gt;.</source>
          <target state="translated">根据URL自动检测要使用的VCS驱动程序。但是，如果出于某种原因需要指定一个，则可以使用 &lt;code&gt;git-bitbucket&lt;/code&gt; ， &lt;code&gt;hg-bitbucket&lt;/code&gt; ， &lt;code&gt;github&lt;/code&gt; ， &lt;code&gt;gitlab&lt;/code&gt; ， &lt;code&gt;perforce&lt;/code&gt; ， &lt;code&gt;fossil&lt;/code&gt; ， &lt;code&gt;git&lt;/code&gt; ， &lt;code&gt;svn&lt;/code&gt; 或 &lt;code&gt;hg&lt;/code&gt; 作为存储库类型，而不是 &lt;code&gt;vcs&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5c420979637a5530647ac1a7b4bf05aaac4a2eb2" translate="yes" xml:space="preserve">
          <source>The alias must be a comparable dev version, and the &lt;code&gt;branch-alias&lt;/code&gt; must be present on the branch that it references. For &lt;code&gt;dev-master&lt;/code&gt;, you need to commit it on the &lt;code&gt;master&lt;/code&gt; branch.</source>
          <target state="translated">别名必须是可比较的dev版本，并且 &lt;code&gt;branch-alias&lt;/code&gt; 必须存在于它引用的分支上。对于 &lt;code&gt;dev-master&lt;/code&gt; ，您需要在 &lt;code&gt;master&lt;/code&gt; 分支上提交它。</target>
        </trans-unit>
        <trans-unit id="c2cac23aeb2cc9f6f9a5c06f625e856aa7411284" translate="yes" xml:space="preserve">
          <source>The authors of the package. This is an array of objects.</source>
          <target state="translated">包的作者。这是一个对象数组。</target>
        </trans-unit>
        <trans-unit id="7eb0326398d1c95d61a67bf85374074040d3aaf6" translate="yes" xml:space="preserve">
          <source>The autoloader can have quite a substantial impact on your request time (50-100ms per request in large frameworks using a lot of classes). See the &lt;a href=&quot;articles/autoloader-optimization.md&quot;&gt;article about optimizing the autoloader&lt;/a&gt; for more details on how to reduce this impact.</source>
          <target state="translated">自动装带器会对您的请求时间产生重大影响（在使用很多类的大型框架中，每个请求50-100ms）。有关如何减少这种影响的更多详细信息，请参见&lt;a href=&quot;articles/autoloader-optimization.md&quot;&gt;有关优化自动装带器&lt;/a&gt;的文章。</target>
        </trans-unit>
        <trans-unit id="a3cf994a98f5fb06f3f9fa5aeb7c3855a5c1ea70" translate="yes" xml:space="preserve">
          <source>The autoloader is the most used one, and is already covered in our &lt;a href=&quot;01-basic-usage.md#autoloading&quot;&gt;basic usage guide&lt;/a&gt;. It is available in all Composer versions.</source>
          <target state="translated">自动装带器是最常用的一种，已经在我们的&lt;a href=&quot;01-basic-usage.md#autoloading&quot;&gt;基本使用指南中介绍过&lt;/a&gt;。它在所有Composer版本中均可用。</target>
        </trans-unit>
        <trans-unit id="6edc136191c54700a29b49ad70fd35ef21540920" translate="yes" xml:space="preserve">
          <source>The check-platform-reqs command checks that your PHP and extensions versions match the platform requirements of the installed packages. This can be used to verify that a production server has all the extensions needed to run a project after installing it for example.</source>
          <target state="translated">check-platform-reqs 命令检查你的 PHP 和 extensions 版本是否符合所安装包的平台要求。例如,这可以用来验证生产服务器在安装项目后是否拥有运行项目所需的所有扩展。</target>
        </trans-unit>
        <trans-unit id="7214bc8cd5c44f89fec9925261db070ce7d274d6" translate="yes" xml:space="preserve">
          <source>The class defining the Composer plugin must implement the &lt;a href=&quot;https://github.com/composer/composer/blob/master/src/Composer/Plugin/PluginInterface.php&quot;&gt;&lt;code&gt;Composer\Plugin\PluginInterface&lt;/code&gt;&lt;/a&gt;. It can then register the Custom Installer in its &lt;code&gt;activate()&lt;/code&gt; method.</source>
          <target state="translated">定义Composer插件的类必须实现&lt;a href=&quot;https://github.com/composer/composer/blob/master/src/Composer/Plugin/PluginInterface.php&quot;&gt; &lt;code&gt;Composer\Plugin\PluginInterface&lt;/code&gt; &lt;/a&gt;。然后，它可以在其 &lt;code&gt;activate()&lt;/code&gt; 方法中注册自定义安装程序。</target>
        </trans-unit>
        <trans-unit id="78950139234e498468b2a4ae5ec9d8e2bc496990" translate="yes" xml:space="preserve">
          <source>The class may be placed in any location and have any name, as long as it is autoloadable and matches the &lt;code&gt;extra.class&lt;/code&gt; element in the package definition.</source>
          <target state="translated">该类可以放置在任何位置，并且可以使用任何名称，只要它是可自动加载的并且与包定义中的 &lt;code&gt;extra.class&lt;/code&gt; 元素匹配即可。</target>
        </trans-unit>
        <trans-unit id="56dd19048623d8951439a67803c703f7d2bdaa57" translate="yes" xml:space="preserve">
          <source>The class that executes the custom installation should implement the &lt;a href=&quot;https://github.com/composer/composer/blob/master/src/Composer/Installer/InstallerInterface.php&quot;&gt;&lt;code&gt;Composer\Installer\InstallerInterface&lt;/code&gt;&lt;/a&gt; (or extend another installer that implements that interface). It defines the &lt;a href=&quot;../04-schema.md#type&quot;&gt;type&lt;/a&gt; string as it will be recognized by packages that will use this installer in the &lt;code&gt;supports()&lt;/code&gt; method.</source>
          <target state="translated">执行自定义安装的类应实现&lt;a href=&quot;https://github.com/composer/composer/blob/master/src/Composer/Installer/InstallerInterface.php&quot;&gt; &lt;code&gt;Composer\Installer\InstallerInterface&lt;/code&gt; &lt;/a&gt;（或扩展实现该接口的另一个安装程序）。它定义&lt;a href=&quot;../04-schema.md#type&quot;&gt;类型&lt;/a&gt;字符串，因为它将被在 &lt;code&gt;supports()&lt;/code&gt; 方法中使用此安装程序的软件包识别。</target>
        </trans-unit>
        <trans-unit id="8131e8038e7a59be229bcd80fa0d944009da9be3" translate="yes" xml:space="preserve">
          <source>The classmap generator will ignore all files in the paths configured here. The paths are absolute from the package root directory (i.e. composer.json location), and support &lt;code&gt;*&lt;/code&gt; to match anything but a slash, and &lt;code&gt;**&lt;/code&gt; to match anything. &lt;code&gt;**&lt;/code&gt; is implicitly added to the end of the paths.</source>
          <target state="translated">类映射生成器将忽略此处配置的路径中的所有文件。路径在包根目录（即composer.json位置）中是绝对路径，并且支持 &lt;code&gt;*&lt;/code&gt; 匹配除斜杠之外的任何内容，以及 &lt;code&gt;**&lt;/code&gt; 匹配任何内容。 &lt;code&gt;**&lt;/code&gt; 隐式添加到路径的末尾。</target>
        </trans-unit>
        <trans-unit id="c8aa46cca88981162bd728fbbc3eec19ff704de5" translate="yes" xml:space="preserve">
          <source>The color coding is as such:</source>
          <target state="translated">颜色编码是这样的。</target>
        </trans-unit>
        <trans-unit id="3406243459548a65cba91c96d7498aeca9791af0" translate="yes" xml:space="preserve">
          <source>The composer.json Schema</source>
          <target state="translated">composer.json模式</target>
        </trans-unit>
        <trans-unit id="c4ef1dd0d59a879a7e360aa022298c6401b1a743" translate="yes" xml:space="preserve">
          <source>The composer.json schema</source>
          <target state="translated">composer.json模式</target>
        </trans-unit>
        <trans-unit id="a61349b347fd5443a848a94267d7ed493322773b" translate="yes" xml:space="preserve">
          <source>The current Composer plugin API version is &lt;code&gt;2.0.0&lt;/code&gt;.</source>
          <target state="translated">当前的Composer插件API版本是 &lt;code&gt;2.0.0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f7d96ecd6ebde5fd4e1ab5d82811712e5da91ffa" translate="yes" xml:space="preserve">
          <source>The current composer plugin API version is 1.1.0.</source>
          <target state="translated">当前的composer插件API版本为1.1.0。</target>
        </trans-unit>
        <trans-unit id="06ad6f56bd0956d7911c263228a4772fb9d3544b" translate="yes" xml:space="preserve">
          <source>The custom constraint has to be a subset of the existing constraint you have, and this feature is only available for your root package dependencies.</source>
          <target state="translated">自定义约束必须是你现有约束的子集,这个功能只适用于你的根包依赖。</target>
        </trans-unit>
        <trans-unit id="7e11cbbb09c0ca65a8dd4a02c0c684bedae13af1" translate="yes" xml:space="preserve">
          <source>The default file Satis looks for is &lt;code&gt;satis.json&lt;/code&gt; in the root of the repository.</source>
          <target state="translated">Satis查找的默认文件是存储库根目录中的 &lt;code&gt;satis.json&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="95fedbf01afafd82bd68908b58b230643f7dc841" translate="yes" xml:space="preserve">
          <source>The default value is &lt;code&gt;php-only&lt;/code&gt; which only checks the PHP version.</source>
          <target state="translated">默认值为仅 &lt;code&gt;php-only&lt;/code&gt; ，仅检查PHP版本。</target>
        </trans-unit>
        <trans-unit id="9c569e9330e95055860a89cd6bb7a1005c0d8a0a" translate="yes" xml:space="preserve">
          <source>The descriptions are used in &lt;code&gt;composer list&lt;/code&gt; or &lt;code&gt;composer run -l&lt;/code&gt; commands to describe what the scripts do when the command is run.</source>
          <target state="translated">这些描述在 &lt;code&gt;composer list&lt;/code&gt; 或 &lt;code&gt;composer run -l&lt;/code&gt; 命令中使用，以描述命令运行时脚本的作用。</target>
        </trans-unit>
        <trans-unit id="abc92330ba7d4489dae7ca56a23c07eaff4520aa" translate="yes" xml:space="preserve">
          <source>The dots indicate array nesting, a max depth of 3 levels is allowed though. The above would set &lt;code&gt;&quot;extra&quot;: { &quot;foo&quot;: { &quot;bar&quot;: &quot;value&quot; } }&lt;/code&gt;.</source>
          <target state="translated">点表示数组嵌套，但是最大深度为3级。上面将设置 &lt;code&gt;&quot;extra&quot;: { &quot;foo&quot;: { &quot;bar&quot;: &quot;value&quot; } }&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="74881a8aac37fc93dea5343409e2d729aa3c5f0c" translate="yes" xml:space="preserve">
          <source>The env var accepts domains, IP addresses, and IP address blocks in CIDR notation. You can restrict the filter to a particular port (e.g. &lt;code&gt;:80&lt;/code&gt;). You can also set it to &lt;code&gt;*&lt;/code&gt; to ignore the proxy for all HTTP requests.</source>
          <target state="translated">env var接受CIDR表示法中的域，IP地址和IP地址块。您可以将过滤器限制为特定端口（例如 &lt;code&gt;:80&lt;/code&gt; ）。您也可以将其设置为 &lt;code&gt;*&lt;/code&gt; 以忽略所有HTTP请求的代理。</target>
        </trans-unit>
        <trans-unit id="56026558ef4f20a6fe91ce4862f665827754603a" translate="yes" xml:space="preserve">
          <source>The example above has Composer itself in its require-dev, which allows you to use the Composer classes in your test suite for example.</source>
          <target state="translated">上面的例子在它的require-dev中包含了Composer本身,这使得你可以在你的测试套件中使用Composer类,例如。</target>
        </trans-unit>
        <trans-unit id="dc66c9457e7fb686fa5b8206125dd79538da6a38" translate="yes" xml:space="preserve">
          <source>The example demonstrates that it is possible to extend the &lt;a href=&quot;https://github.com/composer/composer/blob/master/src/Composer/Installer/LibraryInstaller.php&quot;&gt;&lt;code&gt;Composer\Installer\LibraryInstaller&lt;/code&gt;&lt;/a&gt; class to strip a prefix (&lt;code&gt;phpdocumentor/template-&lt;/code&gt;) and use the remaining part to assemble a completely different installation path.</source>
          <target state="translated">该示例演示了可以扩展&lt;a href=&quot;https://github.com/composer/composer/blob/master/src/Composer/Installer/LibraryInstaller.php&quot;&gt; &lt;code&gt;Composer\Installer\LibraryInstaller&lt;/code&gt; &lt;/a&gt;类以 &lt;code&gt;phpdocumentor/template-&lt;/code&gt; 前缀（phpdocumentor / template-），然后使用其余部分来组装一个完全不同的安装路径。</target>
        </trans-unit>
        <trans-unit id="e055753e0d7efaac55d01e0c0c7e3200bf65f47f" translate="yes" xml:space="preserve">
          <source>The example demonstrates that it is quite simple to extend the &lt;a href=&quot;https://github.com/composer/composer/blob/master/src/Composer/Installer/LibraryInstaller.php&quot;&gt;&lt;code&gt;Composer\Installer\LibraryInstaller&lt;/code&gt;&lt;/a&gt; class to strip a prefix (&lt;code&gt;phpdocumentor/template-&lt;/code&gt;) and use the remaining part to assemble a completely different installation path.</source>
          <target state="translated">该示例演示了扩展&lt;a href=&quot;https://github.com/composer/composer/blob/master/src/Composer/Installer/LibraryInstaller.php&quot;&gt; &lt;code&gt;Composer\Installer\LibraryInstaller&lt;/code&gt; &lt;/a&gt;类以 &lt;code&gt;phpdocumentor/template-&lt;/code&gt; 前缀（phpdocumentor / template-），然后使用其余部分来组装一个完全不同的安装路径非常简单。</target>
        </trans-unit>
        <trans-unit id="81ae7fa842663d4675156a0236029004afaad470" translate="yes" xml:space="preserve">
          <source>The example will include &lt;code&gt;/dir/foo/bar/file&lt;/code&gt;, &lt;code&gt;/foo/bar/baz&lt;/code&gt;, &lt;code&gt;/file.php&lt;/code&gt;, &lt;code&gt;/foo/my.test&lt;/code&gt; but it will exclude &lt;code&gt;/foo/bar/any&lt;/code&gt;, &lt;code&gt;/foo/baz&lt;/code&gt;, and &lt;code&gt;/my.test&lt;/code&gt;.</source>
          <target state="translated">这个例子将包括 &lt;code&gt;/dir/foo/bar/file&lt;/code&gt; ， &lt;code&gt;/foo/bar/baz&lt;/code&gt; ， &lt;code&gt;/file.php&lt;/code&gt; ， &lt;code&gt;/foo/my.test&lt;/code&gt; 但将排除 &lt;code&gt;/foo/bar/any&lt;/code&gt; ， &lt;code&gt;/foo/baz&lt;/code&gt; 和 &lt;code&gt;/my.test&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1a0f3bc9bad979ddd627af3051a98ef3a26f4b7d" translate="yes" xml:space="preserve">
          <source>The file above declares that acme/foo and acme/bar can be found in this repository, by loading the file referenced by &lt;code&gt;providers-url&lt;/code&gt;, replacing &lt;code&gt;%package%&lt;/code&gt; by the vendor namespaced package name and &lt;code&gt;%hash%&lt;/code&gt; by the sha256 field. Those files themselves contain package definitions as described &lt;a href=&quot;#packages&quot;&gt;above&lt;/a&gt;.</source>
          <target state="translated">上面的文件声明，通过加载 &lt;code&gt;providers-url&lt;/code&gt; 引用的文件，用供应商命名的包名称替换 &lt;code&gt;%package%&lt;/code&gt; ，用sha256字段替换 &lt;code&gt;%hash%&lt;/code&gt; ，可以在此存储库中找到acme / foo和acme / bar 。这些文件本身包含&lt;a href=&quot;#packages&quot;&gt;如上所述的&lt;/a&gt;程序包定义。</target>
        </trans-unit>
        <trans-unit id="6d04c87c83c5973964832e301e5817c17e04115c" translate="yes" xml:space="preserve">
          <source>The file should contain a set of hostnames followed each with their own username/password pairs, for example:</source>
          <target state="translated">该文件应该包含一组主机名,每个主机名后面都有自己的用户名/密码对,例如。</target>
        </trans-unit>
        <trans-unit id="502d74a957d0a2c88f964635896197c7127378c1" translate="yes" xml:space="preserve">
          <source>The final option to supply Composer with credentials is to use the &lt;code&gt;COMPOSER_AUTH&lt;/code&gt; environment variable. These variables can be either passed as command line variables or set in actual environment variables. Read more about the usage of this environment variable &lt;a href=&quot;../03-cli.md#COMPOSER_AUTH&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">向Composer提供凭据的最后一个选择是使用 &lt;code&gt;COMPOSER_AUTH&lt;/code&gt; 环境变量。这些变量可以作为命令行变量传递，也可以在实际环境变量中设置。&lt;a href=&quot;../03-cli.md#COMPOSER_AUTH&quot;&gt;在此处&lt;/a&gt;阅读有关此环境变量的用法的更多信息。</target>
        </trans-unit>
        <trans-unit id="091badbd3ca13442d4996bee76cff03f2295613e" translate="yes" xml:space="preserve">
          <source>The first (and often only) thing you specify in &lt;code&gt;composer.json&lt;/code&gt; is the &lt;a href=&quot;04-schema.md#require&quot;&gt;&lt;code&gt;require&lt;/code&gt;&lt;/a&gt; key. You are simply telling Composer which packages your project depends on.</source>
          <target state="translated">您在 &lt;code&gt;composer.json&lt;/code&gt; 中指定的第一件事（也是唯一的事情）是&lt;a href=&quot;04-schema.md#require&quot;&gt; &lt;code&gt;require&lt;/code&gt; &lt;/a&gt;键。您只是在告诉Composer项目所依赖的软件包。</target>
        </trans-unit>
        <trans-unit id="19c7aa3f32bdd13d0e34f5df3a83ff6b824c5e25" translate="yes" xml:space="preserve">
          <source>The first (and often only) thing you specify in &lt;code&gt;composer.json&lt;/code&gt; is the &lt;a href=&quot;04-schema.md#require&quot;&gt;&lt;code&gt;require&lt;/code&gt;&lt;/a&gt; key. You are telling Composer which packages your project depends on.</source>
          <target state="translated">您在 &lt;code&gt;composer.json&lt;/code&gt; 中指定的第一件事（并且通常是唯一的事情）是&lt;a href=&quot;04-schema.md#require&quot;&gt; &lt;code&gt;require&lt;/code&gt; &lt;/a&gt;键。您正在告诉Composer您的项目所依赖的软件包。</target>
        </trans-unit>
        <trans-unit id="4068eb0da4bab0dfa6227d4ca7a2283c9ce6189b" translate="yes" xml:space="preserve">
          <source>The following options are available with every command:</source>
          <target state="translated">每个命令都有以下选项。</target>
        </trans-unit>
        <trans-unit id="3ab6a9f1a0bbaef19cacfbc5c31136467bf2e22d" translate="yes" xml:space="preserve">
          <source>The following options are supported:</source>
          <target state="translated">支持以下选项:</target>
        </trans-unit>
        <trans-unit id="688e77612c7849c6eb5d4e0fbd7cfa158fa310b2" translate="yes" xml:space="preserve">
          <source>The following repository types are supported:</source>
          <target state="translated">支持以下存储库类型:</target>
        </trans-unit>
        <trans-unit id="38c69aebc2faf396ee7792986c5789b23a388455" translate="yes" xml:space="preserve">
          <source>The format is like package links above, except that the values are free text and not version constraints.</source>
          <target state="translated">其格式和上面的包链接一样,只是数值是自由文本,没有版本限制。</target>
        </trans-unit>
        <trans-unit id="576aa3666a88d5083d4ea7e2b38f285df4a4c92c" translate="yes" xml:space="preserve">
          <source>The generated lock file will use the same name: &lt;code&gt;composer-other.lock&lt;/code&gt; in this example.</source>
          <target state="translated">在此示例中，生成的锁定文件将使用相同的名称： &lt;code&gt;composer-other.lock&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fe31ec4a7957f674f8ecc0410e91ef85456dc028" translate="yes" xml:space="preserve">
          <source>The global command allows you to run other commands like &lt;code&gt;install&lt;/code&gt;, &lt;code&gt;remove&lt;/code&gt;, &lt;code&gt;require&lt;/code&gt; or &lt;code&gt;update&lt;/code&gt; as if you were running them from the &lt;a href=&quot;#composer-home&quot;&gt;COMPOSER_HOME&lt;/a&gt; directory.</source>
          <target state="translated">全局命令使您可以运行其他命令，例如 &lt;code&gt;install&lt;/code&gt; ， &lt;code&gt;remove&lt;/code&gt; ， &lt;code&gt;require&lt;/code&gt; 或 &lt;code&gt;update&lt;/code&gt; ,就像从&lt;a href=&quot;#composer-home&quot;&gt;COMPOSER_HOME&lt;/a&gt;目录中运行它们一样。</target>
        </trans-unit>
        <trans-unit id="09296591caac805b00e1c7c545308983c42db440" translate="yes" xml:space="preserve">
          <source>The installer will check a few PHP settings and then download &lt;code&gt;composer.phar&lt;/code&gt; to your working directory. This file is the Composer binary. It is a PHAR (PHP archive), which is an archive format for PHP which can be run on the command line, amongst other things.</source>
          <target state="translated">安装程序将检查一些PHP设置，然后将 &lt;code&gt;composer.phar&lt;/code&gt; 下载到您的工作目录中。该文件是Composer二进制文件。它是PHAR（PHP存档），是一种PHP的存档格式，可以在命令行中运行。</target>
        </trans-unit>
        <trans-unit id="6ab73b5d5179ad996c84e68defcb2f4641ccefde" translate="yes" xml:space="preserve">
          <source>The license of the package. This can be either a string or an array of strings.</source>
          <target state="translated">软件包的许可证。可以是一个字符串,也可以是一个字符串数组。</target>
        </trans-unit>
        <trans-unit id="9b254b0f71f0fb069aac1d74943b185fdca724e6" translate="yes" xml:space="preserve">
          <source>The local package will be symlinked if possible, in which case the output in the console will read &lt;code&gt;Symlinking from ../../packages/my-package&lt;/code&gt;. If symlinking is &lt;em&gt;not&lt;/em&gt; possible the package will be copied. In that case, the console will output &lt;code&gt;Mirrored from ../../packages/my-package&lt;/code&gt;.</source>
          <target state="translated">如果可能，将对本地软件包进行符号链接，在这种情况下，控制台中的输出将 &lt;code&gt;Symlinking from ../../packages/my-package&lt;/code&gt; 。如果&lt;em&gt;无法&lt;/em&gt;进行符号链接，则将复制软件包。在这种情况下，控制台 &lt;code&gt;Mirrored from ../../packages/my-package&lt;/code&gt; 输出Mirrored。</target>
        </trans-unit>
        <trans-unit id="36c3a0eac5c63bf1776205e5e15f95251c900625" translate="yes" xml:space="preserve">
          <source>The main advantage of the auth.json file is that it can be gitignored so that every developer in your team can place their own credentials in there, which makes revocation of credentials much easier than if you all share the same.</source>
          <target state="translated">auth.json文件的主要优点是它可以被gitignored,这样你团队中的每个开发者都可以把自己的凭证放在里面,这使得凭证的撤销比你们都共享同一个凭证要容易得多。</target>
        </trans-unit>
        <trans-unit id="b2b50340cec6e7494bab2a7c9baceb0ae86d69c9" translate="yes" xml:space="preserve">
          <source>The main repository type is the &lt;code&gt;composer&lt;/code&gt; repository. It uses a single &lt;code&gt;packages.json&lt;/code&gt; file that contains all of the package metadata.</source>
          <target state="translated">主要存储库类型是 &lt;code&gt;composer&lt;/code&gt; 存储库。它使用包含所有软件包元数据的单个 &lt;code&gt;packages.json&lt;/code&gt; 文件。</target>
        </trans-unit>
        <trans-unit id="e6c16c3f22602946185936c376b7597c59592a2b" translate="yes" xml:space="preserve">
          <source>The main use cases for this class are the following:</source>
          <target state="translated">该类的主要用例如下。</target>
        </trans-unit>
        <trans-unit id="b01653678cda20fc0c117160c90d6002cd325fef" translate="yes" xml:space="preserve">
          <source>The most important guidelines are described as follows:</source>
          <target state="translated">最重要的准则说明如下:</target>
        </trans-unit>
        <trans-unit id="930e60a16608d07722acb1ffaed843cdbd3adf2d" translate="yes" xml:space="preserve">
          <source>The name can contain any character, including white spaces, and it's case insensitive (&lt;code&gt;foo/bar&lt;/code&gt; and &lt;code&gt;Foo/Bar&lt;/code&gt; are considered the same package). In order to simplify its installation, it's recommended to define a short and lowercase name that doesn't include non-alphanumeric characters or white spaces.</source>
          <target state="translated">名称可以包含任何字符，包括空格，并且不区分大小写（ &lt;code&gt;foo/bar&lt;/code&gt; 和 &lt;code&gt;Foo/Bar&lt;/code&gt; 被视为同一包）。为了简化安装，建议定义一个简短的小写名称，其中不包含非字母数字字符或空格。</target>
        </trans-unit>
        <trans-unit id="849e1cb65b29df6c38c3d54f0b1a2aced5623dfc" translate="yes" xml:space="preserve">
          <source>The name is not needed in this case, since we don't want to publish the blog as a library. It is added here to clarify which &lt;code&gt;composer.json&lt;/code&gt; is being described.</source>
          <target state="translated">在这种情况下，不需要名称，因为我们不想将博客发布为库。在此处添加它是为了阐明正在描述的 &lt;code&gt;composer.json&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8038614c75260a72b5dac13fbb6180174f7704c0" translate="yes" xml:space="preserve">
          <source>The name must be lowercased and consist of words separated by &lt;code&gt;-&lt;/code&gt;, &lt;code&gt;.&lt;/code&gt; or &lt;code&gt;_&lt;/code&gt;. The complete name should match &lt;code&gt;^[a-z0-9]([_.-]?[a-z0-9]+)*/[a-z0-9](([_.]?|-{0,2})[a-z0-9]+)*$&lt;/code&gt;.</source>
          <target state="translated">名称必须小写和由被分隔的单词 &lt;code&gt;-&lt;/code&gt; , &lt;code&gt;.&lt;/code&gt; 或 &lt;code&gt;_&lt;/code&gt; 。完整名称应匹配 &lt;code&gt;^[a-z0-9]([_.-]?[a-z0-9]+)*/[a-z0-9](([_.]?|-{0,2})[a-z0-9]+)*$&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="21a28c12c78a7a980608fbf55ebe4bc3f11426f8" translate="yes" xml:space="preserve">
          <source>The name of the package. It consists of vendor name and project name, separated by &lt;code&gt;/&lt;/code&gt;. Examples:</source>
          <target state="translated">包的名称。它由供应商名称和项目名称组成，以 &lt;code&gt;/&lt;/code&gt; 分隔。例子：</target>
        </trans-unit>
        <trans-unit id="9e83e0a707056f1f3aed4b1277097820936e9e4f" translate="yes" xml:space="preserve">
          <source>The only issue is it does not keep track of autoload misses (i.e. when it can not find a given class), so those fallback to PSR-4 rules and can still result in slow filesystem checks. To solve this issue two Level 2 optimization options exist, and you can decide to enable either if you have a lot of class_exists checks that are done for classes that do not exist in your project.</source>
          <target state="translated">唯一的问题是,它并没有跟踪自动加载的缺失(即当它不能找到一个给定的类时),所以这些回落到PSR-4规则,并且仍然会导致缓慢的文件系统检查。为了解决这个问题,存在两个2级优化选项,如果你有大量的class_exists检查,对项目中不存在的类进行检查,你可以决定启用其中一个。</target>
        </trans-unit>
        <trans-unit id="c592e54d9bd0ef8cca02cdff2681bf6fd4b82b81" translate="yes" xml:space="preserve">
          <source>The only issue is it does not keep track of autoload misses (i.e. when it cannot find a given class), so those fallback to PSR-4 rules and can still result in slow filesystem checks. To solve this issue two Level 2 optimization options exist, and you can decide to enable either if you have a lot of class_exists checks that are done for classes that do not exist in your project.</source>
          <target state="translated">唯一的问题是,它并没有跟踪自动加载的缺失(即当它无法找到一个给定的类时),所以这些回落到PSR-4规则,并且仍然会导致缓慢的文件系统检查。为了解决这个问题,存在两个2级优化选项,如果你有大量的class_exists检查,对项目中不存在的类进行检查,你可以决定启用其中一个。</target>
        </trans-unit>
        <trans-unit id="16c62e2def03ee209edb02b97829ea111a8582bd" translate="yes" xml:space="preserve">
          <source>The only required field is &lt;code&gt;packages&lt;/code&gt;. The JSON structure is as follows:</source>
          <target state="translated">唯一必需的字段是 &lt;code&gt;packages&lt;/code&gt; 。JSON结构如下：</target>
        </trans-unit>
        <trans-unit id="c0288cb9d7001bf0c4de735aa730ff40b8463658" translate="yes" xml:space="preserve">
          <source>The only requirement is the installation of SSH keys for a git client.</source>
          <target state="translated">唯一的要求是安装git客户端的SSH密钥。</target>
        </trans-unit>
        <trans-unit id="0b60cb58c1e534bf73daea4446a36c691016fbdf" translate="yes" xml:space="preserve">
          <source>The other thing that you may have noticed is that we did not specify a package repository for &lt;code&gt;monolog/monolog&lt;/code&gt;. How did that work? The answer is Packagist.</source>
          <target state="translated">您可能已经注意到的另一件事是，我们没有为 &lt;code&gt;monolog/monolog&lt;/code&gt; 指定软件包存储库。怎么运作的？答案是Packagist。</target>
        </trans-unit>
        <trans-unit id="5c0ffd52ad63aba62f31f23534ea0ba800471d36" translate="yes" xml:space="preserve">
          <source>The package file is the same as any other package file but with the following requirements:</source>
          <target state="translated">该包文件与其他包文件相同,但有以下要求。</target>
        </trans-unit>
        <trans-unit id="0cee130cdcde39fdbc52dcdaddb645cc6e97568d" translate="yes" xml:space="preserve">
          <source>The package name consists of a vendor name and the project's name. Often these will be identical - the vendor name only exists to prevent naming clashes. For example, it would allow two different people to create a library named &lt;code&gt;json&lt;/code&gt;. One might be named &lt;code&gt;igorw/json&lt;/code&gt; while the other might be &lt;code&gt;seldaek/json&lt;/code&gt;.</source>
          <target state="translated">软件包名称由供应商名称和项目名称组成。通常，这些名称是相同的-供应商名称仅用于防止命名冲突。例如，它将允许两个不同的人创建一个名为 &lt;code&gt;json&lt;/code&gt; 的库。一个可能命名为 &lt;code&gt;igorw/json&lt;/code&gt; ，另一个可能命名为 &lt;code&gt;seldaek/json&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="877765edac8eb9a4c4dd77c78b194bef02ca3352" translate="yes" xml:space="preserve">
          <source>The problem however is in production you generally want things to happen as fast as possible, as you can rebuild the configuration every time you deploy and new classes do not appear at random between deploys.</source>
          <target state="translated">然而问题是在生产中,你一般希望事情发生得越快越好,因为你可以在每次部署时重建配置,而且新的类不会在部署之间随机出现。</target>
        </trans-unit>
        <trans-unit id="ba596824f1c9acc03aaff3d0c5e89492d0cd2855" translate="yes" xml:space="preserve">
          <source>The problem however is in production you generally want things to happen as fast as possible, as you can simply rebuild the configuration every time you deploy and new classes do not appear at random between deploys.</source>
          <target state="translated">然而问题是在生产中,你一般希望事情发生得越快越好,因为你可以在每次部署时简单地重建配置,新的类不会在部署之间随机出现。</target>
        </trans-unit>
        <trans-unit id="c87a1f6667b6fbfc7ca6e4a469a9bfb7e7b3f98e" translate="yes" xml:space="preserve">
          <source>The reason for this is a SSH Bug: &lt;a href=&quot;https://bugzilla.mindrot.org/show_bug.cgi?id=1988&quot;&gt;https://bugzilla.mindrot.org/show_bug.cgi?id=1988&lt;/a&gt;</source>
          <target state="translated">其原因是SSH错误：&lt;a href=&quot;https://bugzilla.mindrot.org/show_bug.cgi?id=1988&quot;&gt;https&lt;/a&gt;：//bugzilla.mindrot.org/show_bug.cgi？ id = 1988</target>
        </trans-unit>
        <trans-unit id="e74616579e50eeeb9751aedeec38881aa124c977" translate="yes" xml:space="preserve">
          <source>The recommended notation for the most common licenses is (alphabetical):</source>
          <target state="translated">最常见的许可证的推荐符号是(按字母顺序排列)。</target>
        </trans-unit>
        <trans-unit id="de24bbb3808896de508a6007a1810c68fd60abf9" translate="yes" xml:space="preserve">
          <source>The required version of the &lt;code&gt;composer-plugin-api&lt;/code&gt; follows the same &lt;a href=&quot;../01-basic-usage.md#package-versions&quot;&gt;rules&lt;/a&gt; as a normal package's.</source>
          <target state="translated">所需的 &lt;code&gt;composer-plugin-api&lt;/code&gt; 版本遵循与普通软件包相同的&lt;a href=&quot;../01-basic-usage.md#package-versions&quot;&gt;规则&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ead450eac9213288d85fbad78ce563549cc55707" translate="yes" xml:space="preserve">
          <source>The root JSON object in &lt;code&gt;composer.json&lt;/code&gt; should have a property called &lt;code&gt;&quot;scripts&quot;&lt;/code&gt;, which contains pairs of named events and each event's corresponding scripts. An event's scripts can be defined as either a string (only for a single script) or an array (for single or multiple scripts.)</source>
          <target state="translated">&lt;code&gt;composer.json&lt;/code&gt; 中的 JSON根对象应具有一个名为 &lt;code&gt;&quot;scripts&quot;&lt;/code&gt; 的属性，该属性包含成对的命名事件和每个事件的相应脚本。事件的脚本可以定义为字符串（仅用于单个脚本）或数组（用于单个或多个脚本）。</target>
        </trans-unit>
        <trans-unit id="cdcbfae32d396cb43f2cd781106c9a0b37fc97d7" translate="yes" xml:space="preserve">
          <source>The root package is the package defined by the &lt;code&gt;composer.json&lt;/code&gt; at the root of your project. It is the main &lt;code&gt;composer.json&lt;/code&gt; that defines your project requirements.</source>
          <target state="translated">根软件包是在项目根目录由 &lt;code&gt;composer.json&lt;/code&gt; 定义的软件包。它是定义您的项目需求的主要 &lt;code&gt;composer.json&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1102143d07f591ff1fd93043021ac13b67e6ab90" translate="yes" xml:space="preserve">
          <source>The safest method to merge Composer files is to accept the version from one branch and apply the changes from the other branch.</source>
          <target state="translated">合并Composer文件最安全的方法是接受一个分支的版本,并应用另一个分支的修改。</target>
        </trans-unit>
        <trans-unit id="032d7410bc5b6e2ae478d269c5bbbe037af44517" translate="yes" xml:space="preserve">
          <source>The search command allows you to search through the current project's package repositories. Usually this will be packagist. You pass it the terms you want to search for.</source>
          <target state="translated">搜索命令允许你搜索当前项目的软件包库。通常这将是packagist。你可以把你想搜索的术语传递给它。</target>
        </trans-unit>
        <trans-unit id="0d27a084f3c58557e3e5085f03343451a07fd268" translate="yes" xml:space="preserve">
          <source>The search command allows you to search through the current project's package repositories. Usually this will be packagist. You simply pass it the terms you want to search for.</source>
          <target state="translated">搜索命令允许你搜索当前项目的软件包库。通常这将是packagist。你只需将你想搜索的术语传递给它。</target>
        </trans-unit>
        <trans-unit id="07b2379a00bfbef1eb7b642be0c8481fce4a3906" translate="yes" xml:space="preserve">
          <source>The simplest way to provide your credentials is providing your set of credentials inline with the repository specification such as:</source>
          <target state="translated">最简单的方法是按照版本库规范提供你的一组凭证,如:。</target>
        </trans-unit>
        <trans-unit id="1ba576ae3a9813a0abcc5f206da578a7509b0735" translate="yes" xml:space="preserve">
          <source>The storage can be done either globally in the &lt;code&gt;COMPOSER_HOME/auth.json&lt;/code&gt; file (&lt;code&gt;COMPOSER_HOME&lt;/code&gt; defaults to &lt;code&gt;~/.composer&lt;/code&gt; or &lt;code&gt;%APPDATA%/Composer&lt;/code&gt; on Windows) or also in the project directory directly sitting besides your composer.json.</source>
          <target state="translated">可以在 &lt;code&gt;COMPOSER_HOME/auth.json&lt;/code&gt; 文件（ &lt;code&gt;COMPOSER_HOME&lt;/code&gt; 在Windows上默认为 &lt;code&gt;~/.composer&lt;/code&gt; 或 &lt;code&gt;%APPDATA%/Composer&lt;/code&gt; ）中全局存储，也可以在composer.json旁边的项目目录中进行存储。</target>
        </trans-unit>
        <trans-unit id="3786eab82b9ee0f5de6dcefa0f28d49776190b9f" translate="yes" xml:space="preserve">
          <source>The third way if you want to pre-configure it is via an &lt;code&gt;auth.json&lt;/code&gt; file located in your &lt;code&gt;COMPOSER_HOME&lt;/code&gt; or besides your &lt;code&gt;composer.json&lt;/code&gt;.</source>
          <target state="translated">第三种方式，如果你想预配置是通过 &lt;code&gt;auth.json&lt;/code&gt; 位于文件 &lt;code&gt;COMPOSER_HOME&lt;/code&gt; 或者除了你 &lt;code&gt;composer.json&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="caa380ccd2b7df5644a55fb951b3298bca1d2639" translate="yes" xml:space="preserve">
          <source>The timeout in seconds for process executions, defaults to 300 (5mins). The duration processes like git clones can run before Composer assumes they died out. You may need to make this higher if you have a slow connection or huge vendors.</source>
          <target state="translated">进程执行的超时时间,以秒为单位,默认为300(5mins)。进程(如git克隆)在Composer假设它们死掉之前可以运行的时间。如果你有一个缓慢的连接或庞大的供应商,你可能需要把这个值调高。</target>
        </trans-unit>
        <trans-unit id="9b6194f3afae6f2fec456c59d1ca44bcc1adfe0c" translate="yes" xml:space="preserve">
          <source>The type of the package. It defaults to &lt;code&gt;library&lt;/code&gt;.</source>
          <target state="translated">包的类型。默认为 &lt;code&gt;library&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a6bfcf684e60dd5d9c5f5bcf4f2c4807e77e41f3" translate="yes" xml:space="preserve">
          <source>The version field will contain the normalized representation of the version number.</source>
          <target state="translated">版本字段将包含版本号的标准化表示。</target>
        </trans-unit>
        <trans-unit id="759f1b8c12e0341f925afc594e02cedcaa6edd3b" translate="yes" xml:space="preserve">
          <source>The version of the package. In most cases this is not required and should be omitted (see below).</source>
          <target state="translated">软件包的版本。在大多数情况下,这不是必需的,应该省略(见下文)。</target>
        </trans-unit>
        <trans-unit id="dc6bb75a3bde978c138e77546ac0a039cc2e4f64" translate="yes" xml:space="preserve">
          <source>The warning in the section above does not apply in this case as you are sure the package is present and not being replaced if your code is running.</source>
          <target state="translated">上节中的警告在这种情况下并不适用,因为你确定包是存在的,而且如果你的代码正在运行,就不会被替换。</target>
        </trans-unit>
        <trans-unit id="c81b86dba2727cfdc2b29ee77c508d88ad12aa77" translate="yes" xml:space="preserve">
          <source>Then &lt;code&gt;composer show -s&lt;/code&gt; will give you &lt;code&gt;versions : * dev-latest-testing&lt;/code&gt;.</source>
          <target state="translated">然后， &lt;code&gt;composer show -s&lt;/code&gt; 将为您提供 &lt;code&gt;versions : * dev-latest-testing&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b092304faf36cff4452c050742f05ab3dc1a2890" translate="yes" xml:space="preserve">
          <source>Then, to add the package &lt;code&gt;my/package&lt;/code&gt; as a dependency, in your &lt;code&gt;apps/my-app/composer.json&lt;/code&gt; file, you can use the following configuration:</source>
          <target state="translated">然后，要将包 &lt;code&gt;my/package&lt;/code&gt; 作为依赖项添加到 &lt;code&gt;apps/my-app/composer.json&lt;/code&gt; 文件中，可以使用以下配置：</target>
        </trans-unit>
        <trans-unit id="2caac88b27f73705cd4b2896e5a18514677a502c" translate="yes" xml:space="preserve">
          <source>There are a few options to enable this:</source>
          <target state="translated">有几个选项可以实现这一点。</target>
        </trans-unit>
        <trans-unit id="9e82b97b9e6d27e56f324e53ecc6647a8c47d70e" translate="yes" xml:space="preserve">
          <source>There are a few tools that can help you create a &lt;code&gt;composer&lt;/code&gt; repository.</source>
          <target state="translated">有一些工具可以帮助您创建 &lt;code&gt;composer&lt;/code&gt; 资料库。</target>
        </trans-unit>
        <trans-unit id="69b0e43cefa9085ad5aa1a739c43bbe536ecc32a" translate="yes" xml:space="preserve">
          <source>There are a few use cases for this. The most common one is maintaining your own fork of a third party library. If you are using a certain library for your project and you decide to change something in the library, you will want your project to use the patched version. If the library is on GitHub (this is the case most of the time), you can simply fork it there and push your changes to your fork. After that you update the project's &lt;code&gt;composer.json&lt;/code&gt;. All you have to do is add your fork as a repository and update the version constraint to point to your custom branch. In &lt;code&gt;composer.json&lt;/code&gt;, you should prefix your custom branch name with &lt;code&gt;&quot;dev-&quot;&lt;/code&gt;. For version constraint naming conventions see &lt;a href=&quot;02-libraries.md&quot;&gt;Libraries&lt;/a&gt; for more information.</source>
          <target state="translated">有一些用例。最常见的一种方法是维护自己的第三方库库。如果您正在为项目使用某个库，并且决定更改库中的某些内容，则将希望您的项目使用已修补的版本。如果该库位于GitHub上（大多数情况下是这种情况），则可以将其存储在该库中，然后将所做的更改推送到该存储库中。之后，您将更新项目的 &lt;code&gt;composer.json&lt;/code&gt; 。您所要做的就是将fork添加为存储库，并更新版本约束以指向您的自定义分支。在 &lt;code&gt;composer.json&lt;/code&gt; 中，您应该在自定义分支名称前加上 &lt;code&gt;&quot;dev-&quot;&lt;/code&gt; 前缀。有关版本约束的命名约定，请参见&lt;a href=&quot;02-libraries.md&quot;&gt;库&lt;/a&gt;以获取更多信息。</target>
        </trans-unit>
        <trans-unit id="1233d502c9730c34620b96d595dc1c1b775653f5" translate="yes" xml:space="preserve">
          <source>There are a few use cases for this. The most common one is maintaining your own fork of a third party library. If you are using a certain library for your project, and you decide to change something in the library, you will want your project to use the patched version. If the library is on GitHub (this is the case most of the time), you can fork it there and push your changes to your fork. After that you update the project's &lt;code&gt;composer.json&lt;/code&gt;. All you have to do is add your fork as a repository and update the version constraint to point to your custom branch. In &lt;code&gt;composer.json&lt;/code&gt;, you should prefix your custom branch name with &lt;code&gt;&quot;dev-&quot;&lt;/code&gt;. For version constraint naming conventions see &lt;a href=&quot;02-libraries.md&quot;&gt;Libraries&lt;/a&gt; for more information.</source>
          <target state="translated">有一些用例。最常见的一种方法是维护自己的第三方库库。如果您为项目使用某个库，并且决定更改该库中的某些内容，则将希望您的项目使用已修补的版本。如果该库位于GitHub上（大多数情况下是这种情况），则可以将其存储在该库中，并将所做的更改推送到该存储库中。之后，您将更新项目的 &lt;code&gt;composer.json&lt;/code&gt; 。您所要做的就是将fork添加为存储库，并更新版本约束以指向您的自定义分支。在 &lt;code&gt;composer.json&lt;/code&gt; 中，您应该在自定义分支名称前加上 &lt;code&gt;&quot;dev-&quot;&lt;/code&gt; 前缀。有关版本约束的命名约定，请参见&lt;a href=&quot;02-libraries.md&quot;&gt;库&lt;/a&gt;以获取更多信息。</target>
        </trans-unit>
        <trans-unit id="89e81f0478390ee653634a9fb1e63def657536df" translate="yes" xml:space="preserve">
          <source>There are however a few cases where you may want to specifically load some packages from a given repository, but not all. Or you may want a given repository to not be canonical, and to be only preferred if it has higher package versions than the repositories defined below.</source>
          <target state="translated">然而,在某些情况下,您可能希望从一个给定的软件源中加载一些包,但不是所有的包。或者你可能希望一个给定的软件库不是标准的,只有当它的软件包版本高于下面定义的软件库时才会被优先考虑。</target>
        </trans-unit>
        <trans-unit id="2510892334769e69dac24f517418c47cbf7273d5" translate="yes" xml:space="preserve">
          <source>There are in short, two ways to install Composer. Locally as part of your project, or globally as a system wide executable.</source>
          <target state="translated">简而言之,有两种方式来安装Composer。本地作为你的项目的一部分,或者全球作为一个系统范围的可执行文件。</target>
        </trans-unit>
        <trans-unit id="e311c75c677569dd2679ee1ac2316e004cb296c7" translate="yes" xml:space="preserve">
          <source>There are many people using Composer already, and quite a few of them are contributing.</source>
          <target state="translated">已经有很多人在使用Composer了,其中有不少人在贡献。</target>
        </trans-unit>
        <trans-unit id="1ef7a17bcf1322d5df05ace80c02af5fff7d59b7" translate="yes" xml:space="preserve">
          <source>There are no real trade-offs with this method. It should always be enabled in production.</source>
          <target state="translated">这种方法没有真正的权衡。在生产中应始终启用。</target>
        </trans-unit>
        <trans-unit id="71b78b7b768e6a18ce5d199234ffc433eae124f8" translate="yes" xml:space="preserve">
          <source>There are several applications for this:</source>
          <target state="translated">这方面有几种应用。</target>
        </trans-unit>
        <trans-unit id="c4a855512a3173775422c90cda3e6b70678917cd" translate="yes" xml:space="preserve">
          <source>There are some cases, when there is no ability to have one of the previously mentioned repository types online, even the VCS one. A typical example could be cross-organisation library exchange through build artifacts. Of course, most of the time these are private. To use these archives as-is, one can use a repository of type &lt;code&gt;artifact&lt;/code&gt; with a folder containing ZIP or TAR archives of those private packages:</source>
          <target state="translated">在某些情况下，无法联机使用前面提到的存储库类型之一，甚至VCS也不能。一个典型的示例可能是通过构建工件进行跨组织的库交换。当然，大多数时候这些都是私人的。要按原样使用这些归档文件，可以将 &lt;code&gt;artifact&lt;/code&gt; 类型的存储库与包含这些私有软件包的ZIP或TAR归档文件的文件夹一起使用：</target>
        </trans-unit>
        <trans-unit id="146d9f32104343cdde0c248efaa6c6eab0c03fb4" translate="yes" xml:space="preserve">
          <source>There are some cases, when there is no ability to have one of the previously mentioned repository types online, even the VCS one. Typical example could be cross-organisation library exchange through built artifacts. Of course, most of the times they are private. To simplify maintenance, one can simply use a repository of type &lt;code&gt;artifact&lt;/code&gt; with a folder containing ZIP archives of those private packages:</source>
          <target state="translated">在某些情况下，无法使上述存储库类型之一联机，甚至VCS也不能。典型的例子可能是通过构建的工件进行跨组织的库交换。当然，大多数时候它们是私有的。为了简化维护，您可以简单地使用 &lt;code&gt;artifact&lt;/code&gt; 类型的存储库和一个包含这些私有软件包的ZIP存档的文件夹：</target>
        </trans-unit>
        <trans-unit id="b9382ece759da34331e7d022e1aa4b31eaf1289b" translate="yes" xml:space="preserve">
          <source>There is no simple work-around to this limitation. It is therefore strongly recommended that you do not use it.</source>
          <target state="translated">这种限制没有简单的变通办法。因此,强烈建议您不要使用它。</target>
        </trans-unit>
        <trans-unit id="e1bf0ee9d75d3527b40d7428cc9cbb253ae2c7ea" translate="yes" xml:space="preserve">
          <source>There's one more thing that will affect which files are checked out of a library's VCS and added to your project: Composer allows you to specify stability constraints to limit which tags are considered valid. In the above example, note that the library released a beta and two release candidates for version &lt;code&gt;1.1&lt;/code&gt; before the final official release. To receive these versions when running &lt;code&gt;composer install&lt;/code&gt; or &lt;code&gt;composer update&lt;/code&gt;, we have to explicitly tell Composer that we are ok with release candidates and beta releases (and alpha releases, if we want those). This can be done using either a project-wide &lt;code&gt;minimum-stability&lt;/code&gt; value in &lt;code&gt;composer.json&lt;/code&gt; or using &quot;stability flags&quot; in version constraints. Read more on the &lt;a href=&quot;../04-schema.md#minimum-stability&quot;&gt;schema page&lt;/a&gt;.</source>
          <target state="translated">还有另外一件事会影响从库的VCS中检出哪些文件并将其添加到您的项目中：Composer允许您指定稳定性约束以限制哪些标签被视为有效。在上面的示例中，请注意，该库在最终正式发布之前发布了Beta版本和两个 &lt;code&gt;1.1&lt;/code&gt; 版本的候选版本。要在运行 &lt;code&gt;composer install&lt;/code&gt; 或 &lt;code&gt;composer update&lt;/code&gt; 时接收这些版本，我们必须明确告知Composer我们可以使用候选版本和Beta版本（如果需要，还可以使用alpha版本）。这可以通过在 &lt;code&gt;composer.json&lt;/code&gt; 中使用项目范围内的 &lt;code&gt;minimum-stability&lt;/code&gt; 值或在版本约束中使用&amp;ldquo;稳定性标志&amp;rdquo;来完成。阅读更多关于&lt;a href=&quot;../04-schema.md#minimum-stability&quot;&gt;模式页&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9dc4585f91b0cc271803a8203abaea09219bca94" translate="yes" xml:space="preserve">
          <source>Therefore if you use this it is recommended, and safer, to also run the &lt;a href=&quot;03-cli.md#check-platform-reqs&quot;&gt;&lt;code&gt;check-platform-reqs&lt;/code&gt;&lt;/a&gt; command as part of your deployment strategy.</source>
          <target state="translated">因此，如果您使用此方法，则建议并且更安全地将&lt;a href=&quot;03-cli.md#check-platform-reqs&quot;&gt; &lt;code&gt;check-platform-reqs&lt;/code&gt; &lt;/a&gt;命令作为部署策略的一部分运行。</target>
        </trans-unit>
        <trans-unit id="2b031101637482ed2f5237dbf7cc920e749bcbfa" translate="yes" xml:space="preserve">
          <source>Therefore, it is a good idea to rely on a dedicated path for your unit tests and to add it within the autoload-dev section.</source>
          <target state="translated">因此,最好的办法是为你的单元测试提供一个专门的路径,并将其添加到autoload-dev部分。</target>
        </trans-unit>
        <trans-unit id="e796a89df7b8621655961a7bdef784f391a63353" translate="yes" xml:space="preserve">
          <source>These fields are optional. You probably don't need them for your own custom repository.</source>
          <target state="translated">这些字段是可选的。你可能不需要在你自己的自定义版本库中使用它们。</target>
        </trans-unit>
        <trans-unit id="d1db040d5c72d57c336ed3f20f9d2be23996a417" translate="yes" xml:space="preserve">
          <source>This brings us to the second scenario. If there is already a &lt;code&gt;composer.lock&lt;/code&gt; file as well as a &lt;code&gt;composer.json&lt;/code&gt; file when you run &lt;code&gt;composer install&lt;/code&gt;, it means either you ran the &lt;code&gt;install&lt;/code&gt; command before, or someone else on the project ran the &lt;code&gt;install&lt;/code&gt; command and committed the &lt;code&gt;composer.lock&lt;/code&gt; file to the project (which is good).</source>
          <target state="translated">这将我们带到第二种情况。如果在运行 &lt;code&gt;composer install&lt;/code&gt; 时已经存在 &lt;code&gt;composer.lock&lt;/code&gt; 文件以及 &lt;code&gt;composer.json&lt;/code&gt; 文件，则意味着您之前运行过 &lt;code&gt;install&lt;/code&gt; 命令，或者项目中的其他人运行过 &lt;code&gt;install&lt;/code&gt; 命令并提交了 &lt;code&gt;composer.lock&lt;/code&gt; 文件到项目（很好）。</target>
        </trans-unit>
        <trans-unit id="98a5199b6c6365a14d529d06e87a6a53eacade1d" translate="yes" xml:space="preserve">
          <source>This can be used to install CLI utilities globally. Here is an example:</source>
          <target state="translated">这可以用来在全球范围内安装CLI实用程序。下面是一个例子。</target>
        </trans-unit>
        <trans-unit id="3c181fb8f0adf46849c28697563e3503acbdc7be" translate="yes" xml:space="preserve">
          <source>This can be virtually anything. To access it from within a script event handler, you can do:</source>
          <target state="translated">这实际上可以是任何东西。要从脚本事件处理程序中访问它,你可以这样做。</target>
        </trans-unit>
        <trans-unit id="b56c5a93de6bdedea1c140ad3096ef36d7b8331d" translate="yes" xml:space="preserve">
          <source>This chapter will describe the &lt;code&gt;config&lt;/code&gt; section of the &lt;code&gt;composer.json&lt;/code&gt;&lt;a href=&quot;04-schema.md&quot;&gt;schema&lt;/a&gt;.</source>
          <target state="translated">本章将描述 &lt;code&gt;composer.json&lt;/code&gt; &lt;a href=&quot;04-schema.md&quot;&gt;模式&lt;/a&gt;的 &lt;code&gt;config&lt;/code&gt; 部分。</target>
        </trans-unit>
        <trans-unit id="7d01976617363a2b6ec0423ec033e7f422b5bc04" translate="yes" xml:space="preserve">
          <source>This chapter will explain all of the fields available in &lt;code&gt;composer.json&lt;/code&gt;.</source>
          <target state="translated">本章将解释 &lt;code&gt;composer.json&lt;/code&gt; 中可用的所有字段。</target>
        </trans-unit>
        <trans-unit id="8ee395c5409a92c00e47933388323ebff1a9cb83" translate="yes" xml:space="preserve">
          <source>This chapter will explain the concept of packages and repositories, what kinds of repositories are available, and how they work.</source>
          <target state="translated">本章将解释包和资源库的概念,有哪些类型的资源库,以及它们如何工作。</target>
        </trans-unit>
        <trans-unit id="50e7d817ba1292d5bb989f2e5f69b6aee88f999a" translate="yes" xml:space="preserve">
          <source>This chapter will tell you how to make your library installable through Composer.</source>
          <target state="translated">本章将告诉你如何通过Composer使你的库可以安装。</target>
        </trans-unit>
        <trans-unit id="5ce164f0d999844a661997833638cbecd8a1f82d" translate="yes" xml:space="preserve">
          <source>This command is used to generate a zip/tar archive for a given package in a given version. It can also be used to archive your entire project without excluded/ignored files.</source>
          <target state="translated">此命令用于为给定版本的给定包生成zip/tar压缩包。它也可以用来对整个项目进行归档,而不包含排除/忽略的文件。</target>
        </trans-unit>
        <trans-unit id="0b7ddc1c924639a6b818a41b1eff325460110731" translate="yes" xml:space="preserve">
          <source>This command will re-generate the &lt;code&gt;vendor/autoload.php&lt;/code&gt; file. See the &lt;a href=&quot;03-cli.md#dump-autoload-dumpautoload-&quot;&gt;&lt;code&gt;dump-autoload&lt;/code&gt;&lt;/a&gt; section for more information.</source>
          <target state="translated">此命令将重新生成 &lt;code&gt;vendor/autoload.php&lt;/code&gt; 文件。有关更多信息，请参见&lt;a href=&quot;03-cli.md#dump-autoload-dumpautoload-&quot;&gt; &lt;code&gt;dump-autoload&lt;/code&gt; &lt;/a&gt;部分。</target>
        </trans-unit>
        <trans-unit id="269b801bb9ae4279065ae484b2bdaa0d3fbdfad3" translate="yes" xml:space="preserve">
          <source>This could be happening because the VPS runs out of memory and has no Swap space enabled.</source>
          <target state="translated">这可能是因为VPS的内存用完了,没有启用交换空间。</target>
        </trans-unit>
        <trans-unit id="b15770fca05fdf1570af15d77bad5b9faa32a161" translate="yes" xml:space="preserve">
          <source>This could be happening because you are working in a &lt;em&gt;OneDrive&lt;/em&gt; directory and using a version of PHP that does not support the file system semantics of this service. The issue was fixed in PHP 7.2.23 and 7.3.10.</source>
          <target state="translated">之所以会发生这种情况，是因为您在&lt;em&gt;OneDrive&lt;/em&gt;目录中工作，并且使用的PHP版本不支持该服务的文件系统语义。此问题已在PHP 7.2.23和7.3.10中修复。</target>
        </trans-unit>
        <trans-unit id="02d7a82eed5d2736757e1227f97bc4cc007cbfa4" translate="yes" xml:space="preserve">
          <source>This defines the default behavior for filtering packages by stability. This defaults to &lt;code&gt;stable&lt;/code&gt;, so if you rely on a &lt;code&gt;dev&lt;/code&gt; package, you should specify it in your file to avoid surprises.</source>
          <target state="translated">这定义了按稳定性过滤软件包的默认行为。默认情况下为 &lt;code&gt;stable&lt;/code&gt; ，因此，如果您依赖 &lt;code&gt;dev&lt;/code&gt; 包，则应在文件中指定它，以免引起意外。</target>
        </trans-unit>
        <trans-unit id="794cba34d07e2b9c98e2e3183c8e7cd5dde7a1c7" translate="yes" xml:space="preserve">
          <source>This does not work for everybody especially when you don't want to hard code your credentials into your composer.json. There is a second way to provide these details and it is via interaction. If you don't provide the authentication credentials composer will prompt you upon connection to enter the username and password.</source>
          <target state="translated">这并不是对每个人都适用,特别是当你不想把你的证书硬编码到composer.json中时。有第二种方法来提供这些细节,那就是通过交互。如果你不提供认证凭证,composer会在连接时提示你输入用户名和密码。</target>
        </trans-unit>
        <trans-unit id="7aa3f6649111d9ed0d06f1d274e525d42297ac65" translate="yes" xml:space="preserve">
          <source>This env var controls the &lt;a href=&quot;06-config.md#discard-changes&quot;&gt;&lt;code&gt;discard-changes&lt;/code&gt;&lt;/a&gt; config option.</source>
          <target state="translated">此环境变量控制&amp;ldquo; &lt;a href=&quot;06-config.md#discard-changes&quot;&gt; &lt;code&gt;discard-changes&lt;/code&gt; &amp;rdquo;&lt;/a&gt;配置选项。</target>
        </trans-unit>
        <trans-unit id="e32555553ed3e290e4a69cf09a33bacaf055a850" translate="yes" xml:space="preserve">
          <source>This env var controls the time Composer waits for commands (such as git commands) to finish executing. The default value is 300 seconds (5 minutes).</source>
          <target state="translated">这个 env var 控制 Composer 等待命令(如 git 命令)执行完毕的时间。默认值是300秒(5分钟)。</target>
        </trans-unit>
        <trans-unit id="615ba59e0c3fdabd3227e4004465ce595349f96e" translate="yes" xml:space="preserve">
          <source>This field is optional.</source>
          <target state="translated">该字段是可选的。</target>
        </trans-unit>
        <trans-unit id="25f773b45dc1d077eab23d12843ac204d4e7d0db" translate="yes" xml:space="preserve">
          <source>This file allows you to set &lt;a href=&quot;05-repositories.md&quot;&gt;repositories&lt;/a&gt; and &lt;a href=&quot;06-config.md&quot;&gt;configuration&lt;/a&gt; for the user's projects.</source>
          <target state="translated">该文件允许您设置用户项目的&lt;a href=&quot;05-repositories.md&quot;&gt;存储库&lt;/a&gt;和&lt;a href=&quot;06-config.md&quot;&gt;配置&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a61d6eb46f437a2039b1a891b447b6f83f8cb900" translate="yes" xml:space="preserve">
          <source>This idea is not new and Composer is strongly inspired by node's &lt;a href=&quot;https://www.npmjs.com/&quot;&gt;npm&lt;/a&gt; and ruby's &lt;a href=&quot;https://bundler.io/&quot;&gt;bundler&lt;/a&gt;.</source>
          <target state="translated">这个想法并不新鲜，Composer受到Node的&lt;a href=&quot;https://www.npmjs.com/&quot;&gt;npm&lt;/a&gt;和ruby的&lt;a href=&quot;https://bundler.io/&quot;&gt;bundler的&lt;/a&gt;强烈启发。</target>
        </trans-unit>
        <trans-unit id="f43d3360a516851b82c29541a27032cb10e71edc" translate="yes" xml:space="preserve">
          <source>This is a convenient way to expose useful scripts that would otherwise be hidden deep in the &lt;code&gt;vendor/&lt;/code&gt; directory.</source>
          <target state="translated">这是一种方便的方式来公开有用的脚本，否则这些脚本将被隐藏在 &lt;code&gt;vendor/&lt;/code&gt; 目录的深处。</target>
        </trans-unit>
        <trans-unit id="a15fb1d5f318a791244ecf150eb9fe2a1c7a094e" translate="yes" xml:space="preserve">
          <source>This is a list of common pitfalls on using Composer, and how to avoid them.</source>
          <target state="translated">这是在使用Composer时常见的陷阱,以及如何避免这些陷阱。</target>
        </trans-unit>
        <trans-unit id="71b37310b87747d8c2abedcf6ab82e79a6703a19" translate="yes" xml:space="preserve">
          <source>This is also the repository type that packagist uses. To reference a &lt;code&gt;composer&lt;/code&gt; repository, supply the path before the &lt;code&gt;packages.json&lt;/code&gt; file. In the case of packagist, that file is located at &lt;code&gt;/packages.json&lt;/code&gt;, so the URL of the repository would be &lt;code&gt;repo.packagist.org&lt;/code&gt;. For &lt;code&gt;example.org/packages.json&lt;/code&gt; the repository URL would be &lt;code&gt;example.org&lt;/code&gt;.</source>
          <target state="translated">这也是packagist使用的存储库类型。要引用 &lt;code&gt;composer&lt;/code&gt; 存储库，请在 &lt;code&gt;packages.json&lt;/code&gt; 文件之前提供路径。对于packagist而言，该文件位于 &lt;code&gt;/packages.json&lt;/code&gt; ，因此存储库的URL为 &lt;code&gt;repo.packagist.org&lt;/code&gt; 。例如 &lt;code&gt;example.org/packages.json&lt;/code&gt; ,则存储库URL为 &lt;code&gt;example.org&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="afc61b9ad0882a9a7d52f3937e6417517cfb1bd7" translate="yes" xml:space="preserve">
          <source>This is also useful for packages that contain sub-packages, for example the main symfony/symfony package contains all the Symfony Components which are also available as individual packages. If you require the main package it will automatically fulfill any requirement of one of the individual components, since it replaces them.</source>
          <target state="translated">这对于包含子包的包也很有用,例如主包symfony/symfony包含了所有的Symfony组件,这些组件也可以作为单独的包使用。如果你需要主包,它将自动满足任何一个单独组件的需求,因为它取代了它们。</target>
        </trans-unit>
        <trans-unit id="cbe4aa68ca27a50043ea6e8b1b420a402bc0c559" translate="yes" xml:space="preserve">
          <source>This is merely a helper to manage a project stored in a central location that can hold CLI tools or Composer plugins that you want to have available everywhere.</source>
          <target state="translated">这只是一个管理项目的助手,存储在一个中心位置,可以存放CLI工具或Composer插件,你想在任何地方都可以使用。</target>
        </trans-unit>
        <trans-unit id="630b87b3362d9dc01dbb3b7a5ccfaa781f3b0a0d" translate="yes" xml:space="preserve">
          <source>This is not really fun when you want to try a bugfix of some library that is a dependency of your local project.</source>
          <target state="translated">当你想尝试对某个依赖你本地项目的库进行bug修复时,这并不是很有趣。</target>
        </trans-unit>
        <trans-unit id="d285a58a6cf046380fb19cf8267b1f401561e541" translate="yes" xml:space="preserve">
          <source>This is really helpful when you have dependencies using &quot;self.version&quot;, so that not dev-master, but the same branch is installed (in the example: latest-testing).</source>
          <target state="translated">当你使用 &quot;self.version &quot;进行依赖时,这真的很有帮助,所以不是dev-master,而是安装了同一个分支(在这个例子中:最新测试)。</target>
        </trans-unit>
        <trans-unit id="297ef1064ecf692acaf43573dd7aad2404025743" translate="yes" xml:space="preserve">
          <source>This is the easiest way to get Composer set up on your machine.</source>
          <target state="translated">这是在你的机器上设置Composer的最简单方法。</target>
        </trans-unit>
        <trans-unit id="19a6a900f69bd2cac4709641972987b0a41a40ca" translate="yes" xml:space="preserve">
          <source>This is the recommended operator for maximum interoperability when writing library code.</source>
          <target state="translated">为了在编写库代码时实现最大的互操作性,推荐使用这个操作符。</target>
        </trans-unit>
        <trans-unit id="1ba711385f703e6f318e3d9fbed2b697acdf8ad6" translate="yes" xml:space="preserve">
          <source>This issue can also happen on cPanel instances, when the shell fork bomb protection is activated. For more information, see the &lt;a href=&quot;https://documentation.cpanel.net/display/68Docs/Shell+Fork+Bomb+Protection&quot;&gt;documentation&lt;/a&gt; of the fork bomb feature on the cPanel site.</source>
          <target state="translated">激活Shell fork炸弹保护时，在cPanel实例上也可能发生此问题。有关更多信息，请参见cPanel站点上前叉炸弹功能的&lt;a href=&quot;https://documentation.cpanel.net/display/68Docs/Shell+Fork+Bomb+Protection&quot;&gt;文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e15eadd50149eea941037db36653f24c06455188" translate="yes" xml:space="preserve">
          <source>This must follow the format of &lt;code&gt;X.Y.Z&lt;/code&gt; or &lt;code&gt;vX.Y.Z&lt;/code&gt; with an optional suffix of &lt;code&gt;-dev&lt;/code&gt;, &lt;code&gt;-patch&lt;/code&gt; (&lt;code&gt;-p&lt;/code&gt;), &lt;code&gt;-alpha&lt;/code&gt; (&lt;code&gt;-a&lt;/code&gt;), &lt;code&gt;-beta&lt;/code&gt; (&lt;code&gt;-b&lt;/code&gt;) or &lt;code&gt;-RC&lt;/code&gt;. The patch, alpha, beta and RC suffixes can also be followed by a number.</source>
          <target state="translated">该格式必须遵循 &lt;code&gt;X.Y.Z&lt;/code&gt; 或 &lt;code&gt;vX.Y.Z&lt;/code&gt; 的格式，并带有 &lt;code&gt;-dev&lt;/code&gt; ， &lt;code&gt;-patch&lt;/code&gt; （ &lt;code&gt;-p&lt;/code&gt; ），- &lt;code&gt;-alpha&lt;/code&gt; （ &lt;code&gt;-a&lt;/code&gt; ），- &lt;code&gt;-beta&lt;/code&gt; （ &lt;code&gt;-b&lt;/code&gt; ）或 &lt;code&gt;-RC&lt;/code&gt; 的可选后缀。补丁，alpha，beta和RC后缀也可以跟一个数字。</target>
        </trans-unit>
        <trans-unit id="7b17d4d8f8da8df5c76438be22277a7f04c52cab" translate="yes" xml:space="preserve">
          <source>This option adds an APCu cache as a fallback for the class map. It will not automatically generate the class map though, so you should still enable Level 1 optimizations manually if you so desire.</source>
          <target state="translated">这个选项增加了一个APCu缓存作为类图的后备。但它不会自动生成类图,所以如果你愿意,还是应该手动启用1级优化。</target>
        </trans-unit>
        <trans-unit id="f91f2d80d3c41affb8e7d9f876bea35afb2af5a4" translate="yes" xml:space="preserve">
          <source>This option is very simple, it says that if something is not found in the classmap, then it does not exist and the autoloader should not attempt to look on the filesystem according to PSR-4 rules.</source>
          <target state="translated">这个选项非常简单,它说如果在类图中没有找到某样东西,那么它就不存在,根据PSR-4规则,自动加载器不应该尝试在文件系统中查找。</target>
        </trans-unit>
        <trans-unit id="274dc18099357a20062ba0f3d48a5c0ea15f7b3a" translate="yes" xml:space="preserve">
          <source>This option makes the autoloader always return very quickly. On the flipside it also means that in case a class is generated at runtime for some reason, it will not be allowed to be autoloaded. If your project or any of your dependencies does that then you might experience &quot;class not found&quot; issues in production. Enable this with care.</source>
          <target state="translated">这个选项使得自动加载器总是很快地返回。反过来说,这也意味着如果一个类在运行时由于某种原因被生成,它将不被允许自动加载。如果你的项目或你的任何依赖项有这种情况,那么你可能会在生产中遇到 &quot;找不到类 &quot;的问题。请谨慎启用这个功能。</target>
        </trans-unit>
        <trans-unit id="c896278653b2ec22017fcc9989b8305dc926b070" translate="yes" xml:space="preserve">
          <source>This option requires APCu which may or may not be available to you. It also uses APCu memory for autoloading purposes, but it is safe to use and can not result in classes not being found like the authoritative class map optimization above.</source>
          <target state="translated">这个选项需要APCu,你可能有也可能没有。它也会使用APCu内存进行自动加载,但使用起来很安全,不会像上面的权威类图优化那样导致找不到类。</target>
        </trans-unit>
        <trans-unit id="fcc902e7540613e7a05c59350b3dd4782ee5ea1b" translate="yes" xml:space="preserve">
          <source>This option requires APCu which may or may not be available to you. It also uses APCu memory for autoloading purposes, but it is safe to use and cannot result in classes not being found like the authoritative class map optimization above.</source>
          <target state="translated">这个选项需要APCu,你可能有也可能没有。它也会使用APCu内存进行自动加载,但使用起来很安全,不会像上面的权威类图优化那样导致找不到类。</target>
        </trans-unit>
        <trans-unit id="105fd86ca53ea796ed779102d789881e6fc7d061" translate="yes" xml:space="preserve">
          <source>This option says that if something is not found in the classmap, then it does not exist and the autoloader should not attempt to look on the filesystem according to PSR-4 rules.</source>
          <target state="translated">这个选项表示,如果在类图中没有找到某个东西,那么它就不存在,自动加载器不应该根据PSR-4规则尝试在文件系统中查找。</target>
        </trans-unit>
        <trans-unit id="9d9a006fd0e828f9277a3a9e2168c6051f1ecae3" translate="yes" xml:space="preserve">
          <source>This section allows to define autoload rules for development purposes.</source>
          <target state="translated">本节允许为开发目的定义自动加载规则。</target>
        </trans-unit>
        <trans-unit id="93b239168a737045663c7caab49cfb1f6a48ba8c" translate="yes" xml:space="preserve">
          <source>This will basically teach composer how to authenticate automatically when reading packages from the provided composer repository.</source>
          <target state="translated">这基本上会教composer如何在从提供的composer仓库中读取包时自动进行验证。</target>
        </trans-unit>
        <trans-unit id="03859845a00b9fec6aa87bac6a7c9309919a1c6b" translate="yes" xml:space="preserve">
          <source>This will make sure that no package requiring more than PHP 7.0.3 can be installed regardless of the actual PHP version you run locally. However it also means the dependencies are not checked correctly anymore, if you run PHP 5.6 it will install fine as it assumes 7.0.3, but then it will fail at runtime.</source>
          <target state="translated">这将确保无论你在本地运行的实际 PHP 版本如何,都不会安装需要超过 PHP 7.0.3 的包。然而这也意味着不再正确地检查依赖关系,如果你运行 PHP 5.6,它将会很好地安装,因为它假定是 7.0.3,但是在运行时将会失败。</target>
        </trans-unit>
        <trans-unit id="661392f81c79772cf9069aeb59d15b210c670b8e" translate="yes" xml:space="preserve">
          <source>This will resolve all dependencies of the project and write the exact versions into &lt;code&gt;composer.lock&lt;/code&gt;.</source>
          <target state="translated">这将解决项目的所有依赖关系，并将确切的版本写入 &lt;code&gt;composer.lock&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="49c6fd3fb47ed5347be46209583f87cf01301576" translate="yes" xml:space="preserve">
          <source>This will return true if e.g. vendor/package is installed in a version matching &lt;code&gt;2.0.*&lt;/code&gt;, but also if the given package name is replaced or provided by some other package.</source>
          <target state="translated">如果例如将供应商/软件包安装在与 &lt;code&gt;2.0.*&lt;/code&gt; 匹配的版本中，则返回true ，但是如果给定的软件包名称被其他软件包替换或提供，则返回true 。</target>
        </trans-unit>
        <trans-unit id="4e16df583a018d5f60aa740b6c7475dc1f4d7826" translate="yes" xml:space="preserve">
          <source>Those files contain lists of package names and hashes to verify the file integrity, for example:</source>
          <target state="translated">这些文件包含包名列表和哈希值,以验证文件的完整性,例如。</target>
        </trans-unit>
        <trans-unit id="ef545162be7790e8234882c5061b6a8f200dfcae" translate="yes" xml:space="preserve">
          <source>Tilde Version Range (&lt;code&gt;~&lt;/code&gt;)</source>
          <target state="translated">波浪号版本范围（ &lt;code&gt;~&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="081acf594e378c11c0e7eceb764c79548653b953" translate="yes" xml:space="preserve">
          <source>Tilde Version Range (~)</source>
          <target state="translated">Tilde版本范围(~)</target>
        </trans-unit>
        <trans-unit id="2616f608eef9ed1435bd0bf1c1dde0888dfeb753" translate="yes" xml:space="preserve">
          <source>To allow various stabilities without enforcing them at the constraint level however, you may use &lt;a href=&quot;../04-schema.md#package-links&quot;&gt;stability-flags&lt;/a&gt; like &lt;code&gt;@&amp;lt;stability&amp;gt;&lt;/code&gt; (e.g. &lt;code&gt;@dev&lt;/code&gt;) to let composer know that a given package can be installed in a different stability than your default minimum-stability setting. All available stability flags are listed on the minimum-stability section of the &lt;a href=&quot;../04-schema.md#minimum-stability&quot;&gt;schema page&lt;/a&gt;.</source>
          <target state="translated">为了允许各种稳定性而不在约束级别强制执行，可以使用 &lt;code&gt;@&amp;lt;stability&amp;gt;&lt;/code&gt; （例如 &lt;code&gt;@dev&lt;/code&gt; ）之类的&lt;a href=&quot;../04-schema.md#package-links&quot;&gt;稳定性标志，&lt;/a&gt;以使作曲家知道给定软件包可以与默认的最小稳定性不同的稳定性来安装。设置。所有可用的稳定性标志在&lt;a href=&quot;../04-schema.md#minimum-stability&quot;&gt;模式页&lt;/a&gt;的最小稳定性部分列出。</target>
        </trans-unit>
        <trans-unit id="bc4e340e8e897ffba64e969236f36901e2211df7" translate="yes" xml:space="preserve">
          <source>To avoid an unexpected white page of death with some obscure PHP extension warning in production, you can run &lt;code&gt;composer check-platform-reqs&lt;/code&gt; as part of your deployment/build and if that returns a non-0 code you should abort.</source>
          <target state="translated">为避免在生产环境中出现意外的白页死机以及一些晦涩的PHP扩展警告，您可以将 &lt;code&gt;composer check-platform-reqs&lt;/code&gt; 作为部署/构建的一部分运行，如果返回非0的代码，则应中止执行。</target>
        </trans-unit>
        <trans-unit id="ab434362114d376359858c140ab5becd1aae2e0b" translate="yes" xml:space="preserve">
          <source>To call Composer commands, you can use &lt;code&gt;@composer&lt;/code&gt; which will automatically resolve to whatever composer.phar is currently being used:</source>
          <target state="translated">要调用Composer命令，可以使用 &lt;code&gt;@composer&lt;/code&gt; ，它将自动解析为当前正在使用的composer.phar：</target>
        </trans-unit>
        <trans-unit id="dadeaa2cc5f073ac28a58ee0b6a999c692e32749" translate="yes" xml:space="preserve">
          <source>To create a new access token, head to your &lt;a href=&quot;https://github.com/settings/tokens&quot;&gt;token settings section on Github&lt;/a&gt; and &lt;a href=&quot;https://github.com/settings/tokens/new&quot;&gt;generate a new token&lt;/a&gt;. For public repositories when rate limited, the &lt;code&gt;public_repo&lt;/code&gt; scope is required, for private repositories the &lt;code&gt;repo:status&lt;/code&gt; scope is needed. Read more about it &lt;a href=&quot;https://github.com/blog/1509-personal-api-tokens&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">要创建新的访问令牌，请转到&lt;a href=&quot;https://github.com/settings/tokens&quot;&gt;Github上&lt;/a&gt;的令牌设置部分，并&lt;a href=&quot;https://github.com/settings/tokens/new&quot;&gt;生成一个新令牌&lt;/a&gt;。对于速率受限的公共存储库，需要 &lt;code&gt;public_repo&lt;/code&gt; 范围，对于私有存储库，需要 &lt;code&gt;repo:status&lt;/code&gt; 范围。&lt;a href=&quot;https://github.com/blog/1509-personal-api-tokens&quot;&gt;在这里&lt;/a&gt;阅读更多有关它的信息。</target>
        </trans-unit>
        <trans-unit id="703e69f23ffe2de3ee7ebc2d2e394653a8900a0b" translate="yes" xml:space="preserve">
          <source>To create a new project using Composer you can use the &lt;code&gt;create-project&lt;/code&gt; command. Pass it a package name, and the directory to create the project in. You can also provide a version as third argument, otherwise the latest version is used.</source>
          <target state="translated">要使用Composer创建新项目，可以使用 &lt;code&gt;create-project&lt;/code&gt; 命令。向其传递程序包名称和创建项目的目录。您还可以提供版本作为第三个参数，否则使用最新版本。</target>
        </trans-unit>
        <trans-unit id="7259c7a6c7580039c811b3eb296df8c91fc1bacd" translate="yes" xml:space="preserve">
          <source>To disable the process timeout on a custom command under &lt;code&gt;scripts&lt;/code&gt;, a static helper is available:</source>
          <target state="translated">要在 &lt;code&gt;scripts&lt;/code&gt; 下的自定义命令上禁用进程超时，可以使用静态助手：</target>
        </trans-unit>
        <trans-unit id="9445e3cb238e1a5215a782ee285f0e66cf327e3a" translate="yes" xml:space="preserve">
          <source>To disable the timeout for every script on a given project, you can use the composer.json configuration:</source>
          <target state="translated">要禁用给定项目中每个脚本的超时,你可以使用 composer.json 配置。</target>
        </trans-unit>
        <trans-unit id="ec2fc64193fca38f47ec7090f16f7a70b5618ba2" translate="yes" xml:space="preserve">
          <source>To disable the timeout for specific scripts with the static helper directly in composer.json:</source>
          <target state="translated">直接在composer.json中使用静态帮助程序禁用特定脚本的超时。</target>
        </trans-unit>
        <trans-unit id="027be376e282e62845bebf47469f4f5d8bce3357" translate="yes" xml:space="preserve">
          <source>To disable the timeout of a single script call, you must use the &lt;code&gt;run-script&lt;/code&gt; composer command and specify the &lt;code&gt;--timeout&lt;/code&gt; parameter:</source>
          <target state="translated">要禁用单个脚本调用的超时，必须使用 &lt;code&gt;run-script&lt;/code&gt; composer命令并指定 &lt;code&gt;--timeout&lt;/code&gt; 参数：</target>
        </trans-unit>
        <trans-unit id="1968a3e1738c7fb42672587a3f09b6ee4e9de8b5" translate="yes" xml:space="preserve">
          <source>To do that, &lt;code&gt;autoload&lt;/code&gt; and &lt;code&gt;target-dir&lt;/code&gt; are defined as follows:</source>
          <target state="translated">为此， &lt;code&gt;autoload&lt;/code&gt; 和 &lt;code&gt;target-dir&lt;/code&gt; 定义如下：</target>
        </trans-unit>
        <trans-unit id="6172adec85941ab6181131f95d95a5ae796a8316" translate="yes" xml:space="preserve">
          <source>To enable script re-use and avoid duplicates, you can call a script from another one by prefixing the command name with &lt;code&gt;@&lt;/code&gt;:</source>
          <target state="translated">要启用脚本重用并避免重复，您可以通过在命令名称前添加 &lt;code&gt;@&lt;/code&gt; 来从另一个脚本中调用脚本：</target>
        </trans-unit>
        <trans-unit id="d772478e704a8fdc52f49fe648c3f5e2359e4964" translate="yes" xml:space="preserve">
          <source>To enable the swap you can use for example:</source>
          <target state="translated">要启用交换,你可以使用例如。</target>
        </trans-unit>
        <trans-unit id="afe52e2b0307bc5e407fddc61ac8bcb755aac9b9" translate="yes" xml:space="preserve">
          <source>To enable your satis installation to create downloads for all (Git, Mercurial and Subversion) your packages, add the following to your &lt;code&gt;satis.json&lt;/code&gt;:</source>
          <target state="translated">要使您的satis安装能够为所有（Git，Mercurial和Subversion）软件包创建下载，请将以下内容添加到 &lt;code&gt;satis.json&lt;/code&gt; 中：</target>
        </trans-unit>
        <trans-unit id="13f50946093bfe2d26454652e498f3d41b861d54" translate="yes" xml:space="preserve">
          <source>To enable your satis installation to indicate that some packages are abandoned, add the following to your &lt;code&gt;satis.json&lt;/code&gt;:</source>
          <target state="translated">为了使您的satis安装能够指示某些软件包已被放弃，请将以下内容添加到 &lt;code&gt;satis.json&lt;/code&gt; 中：</target>
        </trans-unit>
        <trans-unit id="242b5ec99dbb948aeb8dc9862d907d518e32c63e" translate="yes" xml:space="preserve">
          <source>To ensure a consistent code base, you should make sure the code follows the &lt;a href=&quot;http://www.php-fig.org/psr/psr-2/&quot;&gt;PSR-2 Coding Standards&lt;/a&gt;.</source>
          <target state="translated">为了确保一致的代码库，您应该确保代码遵循&lt;a href=&quot;http://www.php-fig.org/psr/psr-2/&quot;&gt;PSR-2编码标准&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b6255853eb6a889d49bd7379502052a2bb60347b" translate="yes" xml:space="preserve">
          <source>To ensure a consistent code base, you should make sure the code follows the &lt;a href=&quot;https://www.php-fig.org/psr/psr-2/&quot;&gt;PSR-2 Coding Standards&lt;/a&gt;.</source>
          <target state="translated">为了确保一致的代码库，您应该确保代码遵循&lt;a href=&quot;https://www.php-fig.org/psr/psr-2/&quot;&gt;PSR-2编码标准&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2a835774cb3367a5c004dcde88461319572e8cbf" translate="yes" xml:space="preserve">
          <source>To execute PHP scripts, you can use &lt;code&gt;@php&lt;/code&gt; which will automatically resolve to whatever php process is currently being used:</source>
          <target state="translated">要执行PHP脚本，您可以使用 &lt;code&gt;@php&lt;/code&gt; ，它将自动解析为当前正在使用的任何php进程：</target>
        </trans-unit>
        <trans-unit id="7f85737ea1928d2da931ccff015054c997fdaac4" translate="yes" xml:space="preserve">
          <source>To filter the list you can pass a package mask using wildcards.</source>
          <target state="translated">要过滤列表,您可以使用通配符传递一个包掩码。</target>
        </trans-unit>
        <trans-unit id="b5fad04a5ecd6fa587ffb78a9568fb8e76ae7c02" translate="yes" xml:space="preserve">
          <source>To get help from the command-line, call &lt;code&gt;composer&lt;/code&gt; or &lt;code&gt;composer list&lt;/code&gt; to see the complete list of commands, then &lt;code&gt;--help&lt;/code&gt; combined with any of those can give you more information.</source>
          <target state="translated">要从命令行获取帮助，请调用 &lt;code&gt;composer&lt;/code&gt; 或 &lt;code&gt;composer list&lt;/code&gt; 以查看命令的完整列表，然后将 &lt;code&gt;--help&lt;/code&gt; 结合使用其中的任何命令可以为您提供更多信息。</target>
        </trans-unit>
        <trans-unit id="572bb6f1e6b1166836f8fdbafac80ba19d63ad72" translate="yes" xml:space="preserve">
          <source>To get help from the command-line, simply call &lt;code&gt;composer&lt;/code&gt; or &lt;code&gt;composer list&lt;/code&gt; to see the complete list of commands, then &lt;code&gt;--help&lt;/code&gt; combined with any of those can give you more information.</source>
          <target state="translated">要从命令行获取帮助，只需调用 &lt;code&gt;composer&lt;/code&gt; 或 &lt;code&gt;composer list&lt;/code&gt; 以查看命令的完整列表，然后将 &lt;code&gt;--help&lt;/code&gt; 结合使用其中的任何命令即可为您提供更多信息。</target>
        </trans-unit>
        <trans-unit id="5d454fbe7e425d3c1bd529a3e4dd18bddb25ced4" translate="yes" xml:space="preserve">
          <source>To get more information about a certain command, you can use &lt;code&gt;help&lt;/code&gt;.</source>
          <target state="translated">要获取有关某个命令的更多信息，可以使用 &lt;code&gt;help&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b3ecff80894b40107e2c7b00bf96802c2e5e285e" translate="yes" xml:space="preserve">
          <source>To get packages from these systems you need to have their respective clients installed. That can be inconvenient. And for this reason there is special support for GitHub and BitBucket that use the APIs provided by these sites, to fetch the packages without having to install the version control system. The VCS repository provides &lt;code&gt;dist&lt;/code&gt;s for them that fetch the packages as zips.</source>
          <target state="translated">要从这些系统中获取软件包，您需要安装各自的客户端。这可能很不方便。因此，对GitHub和BitBucket的特殊支持使用了这些站点提供的API，无需安装版本控制系统即可获取软件包。VCS存储库为它们提供了 &lt;code&gt;dist&lt;/code&gt; ，以zip形式获取软件包。</target>
        </trans-unit>
        <trans-unit id="f6efa85ae7f550704cefdf0149a36e94c4f7bd21" translate="yes" xml:space="preserve">
          <source>To get the current &lt;code&gt;memory_limit&lt;/code&gt; value, run:</source>
          <target state="translated">要获取当前的 &lt;code&gt;memory_limit&lt;/code&gt; 值，请运行：</target>
        </trans-unit>
        <trans-unit id="7cb4d25337915f2702feb6e9fd3ef11bbade7950" translate="yes" xml:space="preserve">
          <source>To handle non-numeric named branches as versions instead of searching for a parent branch with a valid version or special branch name like master, you can set patterns for branch names, that should be handled as dev version branches.</source>
          <target state="translated">为了将非数字命名的分支作为版本处理,而不是寻找具有有效版本或特殊分支名称的父分支(如master),您可以为分支名称设置模式,这些分支应该作为开发版本分支处理。</target>
        </trans-unit>
        <trans-unit id="22f6627e0806084d95804590ef2cc1e0fa895237" translate="yes" xml:space="preserve">
          <source>To illustrate, the following example would get the &lt;code&gt;BasePackage&lt;/code&gt;, &lt;code&gt;TopLevelPackage1&lt;/code&gt;, and &lt;code&gt;TopLevelPackage2&lt;/code&gt; packages from your PEAR repository and &lt;code&gt;IntermediatePackage&lt;/code&gt; from a Github repository:</source>
          <target state="translated">为了说明这一点，以下示例将从您的PEAR存储库中获取 &lt;code&gt;BasePackage&lt;/code&gt; ， &lt;code&gt;TopLevelPackage1&lt;/code&gt; 和 &lt;code&gt;TopLevelPackage2&lt;/code&gt; 软件包，并从Github存储库中获取 &lt;code&gt;IntermediatePackage&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="59b049d7d7ef7ad4cd79dd63021b56fc4d014499" translate="yes" xml:space="preserve">
          <source>To improve performance when the Xdebug extension is enabled, Composer automatically restarts PHP without it. You can override this behavior by using an environment variable: &lt;code&gt;COMPOSER_ALLOW_XDEBUG=1&lt;/code&gt;.</source>
          <target state="translated">为了在启用Xdebug扩展时提高性能，Composer会自动在没有PHP的情况下重新启动PHP。您可以通过使用环境变量 &lt;code&gt;COMPOSER_ALLOW_XDEBUG=1&lt;/code&gt; 来覆盖此行为。</target>
        </trans-unit>
        <trans-unit id="db3fd7e71e49f48ddd62bece648f84f9d6a8659e" translate="yes" xml:space="preserve">
          <source>To improve performance when the xdebug extension is enabled, Composer automatically restarts PHP without it. You can override this behavior by using an environment variable: &lt;code&gt;COMPOSER_ALLOW_XDEBUG=1&lt;/code&gt;.</source>
          <target state="translated">为了在启用xdebug扩展时提高性能，Composer会自动在没有PHP的情况下重新启动PHP。您可以使用环境变量覆盖此行为： &lt;code&gt;COMPOSER_ALLOW_XDEBUG=1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="48b37746979d056aed7cdedde3fd6b05a3ccdd2c" translate="yes" xml:space="preserve">
          <source>To install Composer locally, run the installer in your project directory. See &lt;a href=&quot;https://getcomposer.org/download/&quot;&gt;the Download page&lt;/a&gt; for instructions.</source>
          <target state="translated">要在本地安装Composer，请在项目目录中运行安装程序。有关说明，请参见&lt;a href=&quot;https://getcomposer.org/download/&quot;&gt;下载页面&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9a54c98dfdaede44af7b32ebe9d6d8968b67868a" translate="yes" xml:space="preserve">
          <source>To install packages from sources instead of plain zip archives, you will need git, svn, fossil or hg depending on how the package is version-controlled.</source>
          <target state="translated">要从源文件而不是普通的压缩文件中安装包,你需要git、svn、fossil或hg,这取决于包的版本控制方式。</target>
        </trans-unit>
        <trans-unit id="6ba19c9fd60860b950815749c1573d6324e91d3b" translate="yes" xml:space="preserve">
          <source>To install packages from sources instead of simple zip archives, you will need git, svn, fossil or hg depending on how the package is version-controlled.</source>
          <target state="translated">要从源码安装包,而不是简单的压缩包,你需要git、svn、fossil或hg,这取决于包的版本控制方式。</target>
        </trans-unit>
        <trans-unit id="88cc2d8ff198639815c94744e3b4bd84d8a915d5" translate="yes" xml:space="preserve">
          <source>To install the defined dependencies for your project, run the &lt;a href=&quot;03-cli.md#install&quot;&gt;&lt;code&gt;install&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">要为项目安装定义的依赖项，请运行&lt;a href=&quot;03-cli.md#install&quot;&gt; &lt;code&gt;install&lt;/code&gt; &lt;/a&gt;命令。</target>
        </trans-unit>
        <trans-unit id="776a5dcec518c6d60a09d59020fe1b90643b77d6" translate="yes" xml:space="preserve">
          <source>To install the defined dependencies for your project, run the &lt;a href=&quot;03-cli.md#install-i&quot;&gt;&lt;code&gt;install&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">要为项目安装定义的依赖项，请运行&lt;a href=&quot;03-cli.md#install-i&quot;&gt; &lt;code&gt;install&lt;/code&gt; &lt;/a&gt;命令。</target>
        </trans-unit>
        <trans-unit id="3c0e4e6a7a0837b92f78ef009160482f432dba37" translate="yes" xml:space="preserve">
          <source>To list all of the available packages, you can use the &lt;code&gt;show&lt;/code&gt; command.</source>
          <target state="translated">要列出所有可用的软件包，可以使用 &lt;code&gt;show&lt;/code&gt; 命令。</target>
        </trans-unit>
        <trans-unit id="5cdf98e6c3ebe238b756d522682f684043180ce4" translate="yes" xml:space="preserve">
          <source>To manually edit it, run:</source>
          <target state="translated">要手动编辑它,运行。</target>
        </trans-unit>
        <trans-unit id="75f0a749b7c38173bf2107914ae468f71f17a6a5" translate="yes" xml:space="preserve">
          <source>To rebuild only particular packages, pass the package names on the command line like so:</source>
          <target state="translated">如果要只重建特定的软件包,可以在命令行中传递软件包的名称,比如这样。</target>
        </trans-unit>
        <trans-unit id="ff8c5f4a65cb057060e847b0f1f1d10793a19b9b" translate="yes" xml:space="preserve">
          <source>To register a method to an event, implement the method &lt;code&gt;getSubscribedEvents()&lt;/code&gt; and have it return an array. The array key must be the &lt;a href=&quot;scripts.md#event-names&quot;&gt;event name&lt;/a&gt; and the value is the name of the method in this class to be called.</source>
          <target state="translated">要将方法注册到事件，请实现方法 &lt;code&gt;getSubscribedEvents()&lt;/code&gt; 并使其返回数组。数组键必须是&lt;a href=&quot;scripts.md#event-names&quot;&gt;事件名称&lt;/a&gt;，并且值是要调用的此类中方法的名称。</target>
        </trans-unit>
        <trans-unit id="f370353bd67d9979bea5ced6067f29d3809438bc" translate="yes" xml:space="preserve">
          <source>To resolve the conflict when we merge these two branches:</source>
          <target state="translated">为了解决这两个分支合并时的冲突。</target>
        </trans-unit>
        <trans-unit id="ce69b1a3c4007338262c2e5b1c97ce90dd3e2c93" translate="yes" xml:space="preserve">
          <source>To run &lt;a href=&quot;articles/scripts.md&quot;&gt;scripts&lt;/a&gt; manually you can use this command, give it the script name and optionally any required arguments.</source>
          <target state="translated">要手动运行&lt;a href=&quot;articles/scripts.md&quot;&gt;脚本&lt;/a&gt;，可以使用此命令，为其指定脚本名称以及可选的任何必需参数。</target>
        </trans-unit>
        <trans-unit id="3cd887e1fca448a5b99bd88daa6739ff5c6f7dc8" translate="yes" xml:space="preserve">
          <source>To secure your private repository you can host it over SSH or SSL using a client certificate. In your project you can use the &lt;code&gt;options&lt;/code&gt; parameter to specify the connection options for the server.</source>
          <target state="translated">为了保护您的私有存储库，您可以使用客户端证书通过SSH或SSL托管它。在您的项目中，您可以使用 &lt;code&gt;options&lt;/code&gt; 参数来指定服务器的连接选项。</target>
        </trans-unit>
        <trans-unit id="93203b50fcdb2f4a3279132d8d82f5368d3f9b2d" translate="yes" xml:space="preserve">
          <source>To set an environment variable in a cross-platform way, you can use &lt;code&gt;@putenv&lt;/code&gt;:</source>
          <target state="translated">要以跨平台方式设置环境变量，可以使用 &lt;code&gt;@putenv&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="84925e5c892f336c6988e794c40ec38b3f76ce1e" translate="yes" xml:space="preserve">
          <source>To start using Composer in your project, all you need is a &lt;code&gt;composer.json&lt;/code&gt; file. This file describes the dependencies of your project and may contain other metadata as well.</source>
          <target state="translated">要在项目中开始使用Composer，您只需要一个 &lt;code&gt;composer.json&lt;/code&gt; 文件。该文件描述了项目的依赖关系，并且还可能包含其他元数据。</target>
        </trans-unit>
        <trans-unit id="1840785e68f761452c068f77138754e6917d43a2" translate="yes" xml:space="preserve">
          <source>To start using Composer in your project, all you need is a &lt;code&gt;composer.json&lt;/code&gt; file. This file describes the dependencies of your project and may contain other metadata as well. It typically should go in the top-most directory of your project/VCS repository. You can technically run Composer anywhere but if you want to publish a package to Packagist.org, it will have to be able to find the file at the top of your VCS repository.</source>
          <target state="translated">要在您的项目中开始使用Composer，您只需要一个 &lt;code&gt;composer.json&lt;/code&gt; 文件。该文件描述了项目的依赖关系，并且还可能包含其他元数据。它通常应放在项目/ VCS存储库的最顶层目录中。从技术上讲，您可以在任何地方运行Composer，但如果要将软件包发布到Packagist.org，则必须能够在VCS存储库的顶部找到该文件。</target>
        </trans-unit>
        <trans-unit id="6f8af01e9cf6738c02770816401951f38749c00a" translate="yes" xml:space="preserve">
          <source>To update Composer itself to the latest version, run the &lt;code&gt;self-update&lt;/code&gt; command. It will replace your &lt;code&gt;composer.phar&lt;/code&gt; with the latest version.</source>
          <target state="translated">要将Composer本身更新到最新版本，请运行 &lt;code&gt;self-update&lt;/code&gt; 命令。它将用最新版本替换您的 &lt;code&gt;composer.phar&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dad674e48704a92597b8a13244ba1d8ca29324b7" translate="yes" xml:space="preserve">
          <source>Trade-offs</source>
          <target state="translated">Trade-offs</target>
        </trans-unit>
        <trans-unit id="285ec850c11d78bac10f6bfa31b69a37f1b257c9" translate="yes" xml:space="preserve">
          <source>Troubleshooting</source>
          <target state="translated">Troubleshooting</target>
        </trans-unit>
        <trans-unit id="ba5ba156188d6c38183b0692a13e4a2d239701ea" translate="yes" xml:space="preserve">
          <source>Try clearing Composer's cache by running &lt;code&gt;composer clear-cache&lt;/code&gt;.</source>
          <target state="translated">尝试通过运行 &lt;code&gt;composer clear-cache&lt;/code&gt; 来清除Composer的缓存。</target>
        </trans-unit>
        <trans-unit id="bf1cb9b16df4bf6c782208142821b3ebf71380e4" translate="yes" xml:space="preserve">
          <source>Try increasing the limit in your &lt;code&gt;php.ini&lt;/code&gt; file (ex. &lt;code&gt;/etc/php5/cli/php.ini&lt;/code&gt; for Debian-like systems):</source>
          <target state="translated">尝试增加 &lt;code&gt;php.ini&lt;/code&gt; 文件中的限制（例如，对于类似Debian的系统，为 &lt;code&gt;/etc/php5/cli/php.ini&lt;/code&gt; ）：</target>
        </trans-unit>
        <trans-unit id="93b9e289e2842469d001eccf7ad5d79f3c302dc9" translate="yes" xml:space="preserve">
          <source>Types</source>
          <target state="translated">Types</target>
        </trans-unit>
        <trans-unit id="d27377b209ceac276e7ef413902a27885fa67df7" translate="yes" xml:space="preserve">
          <source>Typically you would leave the source part off, as you don't really need it.</source>
          <target state="translated">通常情况下,你会把源的部分去掉,因为你并不真正需要它。</target>
        </trans-unit>
        <trans-unit id="f36cf49730e2505825e116240404875fb59137f8" translate="yes" xml:space="preserve">
          <source>Typically, you would leave the source part off, as you don't really need it.</source>
          <target state="translated">通常情况下,你会把源的部分去掉,因为你并不真正需要它。</target>
        </trans-unit>
        <trans-unit id="e15dcaab87611b00bfeba9321311d1a520f34547" translate="yes" xml:space="preserve">
          <source>Under the &lt;code&gt;psr-0&lt;/code&gt; key you define a mapping from namespaces to paths, relative to the package root. Note that this also supports the PEAR-style non-namespaced convention.</source>
          <target state="translated">在 &lt;code&gt;psr-0&lt;/code&gt; 键下，您定义相对于包根目录的从名称空间到路径的映射。请注意，这也支持PEAR样式的非命名间隔约定。</target>
        </trans-unit>
        <trans-unit id="8909af9ce39584fecffbeb518314286c798a6e15" translate="yes" xml:space="preserve">
          <source>Under the &lt;code&gt;psr-4&lt;/code&gt; key you define a mapping from namespaces to paths, relative to the package root. When autoloading a class like &lt;code&gt;Foo\\Bar\\Baz&lt;/code&gt; a namespace prefix &lt;code&gt;Foo\\&lt;/code&gt; pointing to a directory &lt;code&gt;src/&lt;/code&gt; means that the autoloader will look for a file named &lt;code&gt;src/Bar/Baz.php&lt;/code&gt; and include it if present. Note that as opposed to the older PSR-0 style, the prefix (&lt;code&gt;Foo\\&lt;/code&gt;) is &lt;strong&gt;not&lt;/strong&gt; present in the file path.</source>
          <target state="translated">在 &lt;code&gt;psr-4&lt;/code&gt; 键下，您定义相对于包根目录的从名称空间到路径的映射。当自动加载诸如 &lt;code&gt;Foo\\Bar\\Baz&lt;/code&gt; 类的类时，指向目录 &lt;code&gt;src/&lt;/code&gt; 的命名空间前缀 &lt;code&gt;Foo\\&lt;/code&gt; 意味着自动加载器将查找名为 &lt;code&gt;src/Bar/Baz.php&lt;/code&gt; 的文件，并将其包含（如果存在）。请注意，与较早的PSR-0样式相反，文件路径中&lt;strong&gt;不&lt;/strong&gt;存在前缀（ &lt;code&gt;Foo\\&lt;/code&gt; ）。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a49cd16ceb09068a661dbff4f47031cfb5b4444c" translate="yes" xml:space="preserve">
          <source>Unlike update/install, this command will ignore config.platform settings and check the real platform packages so you can be certain you have the required platform dependencies.</source>
          <target state="translated">与 update/install 不同的是,这条命令将忽略 config.platform 的设置,并检查真正的平台包,这样你就可以确定你有所需的平台依赖关系。</target>
        </trans-unit>
        <trans-unit id="a92a62891885f2e53e9342c26a0ad4295974f08e" translate="yes" xml:space="preserve">
          <source>Updating dependencies to their latest versions</source>
          <target state="translated">将依赖项更新到最新版本</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">Usage</target>
        </trans-unit>
        <trans-unit id="d3d63a9ce5df435e6ed69f7ca95593227c85bd46" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;&quot;abandoned&quot;: true&lt;/code&gt; to indicates this package is abandoned. Use &lt;code&gt;&quot;abandoned&quot;: &quot;monolog/monolog&quot;&lt;/code&gt; to indicates this package is abandoned and the recommended alternative is &lt;code&gt;monolog/monolog&lt;/code&gt;.</source>
          <target state="translated">使用 &lt;code&gt;&quot;abandoned&quot;: true&lt;/code&gt; 表示该软件包已被放弃。使用 &lt;code&gt;&quot;abandoned&quot;: &quot;monolog/monolog&quot;&lt;/code&gt; 表示此软件包已被放弃，建议的替代方法是 &lt;code&gt;monolog/monolog&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b10d2842acd5c90a60e62695f6d7d8f851d15b43" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;&quot;abandoned&quot;: true&lt;/code&gt; to indicates this package is abandoned. Use &lt;code&gt;&quot;abandoned&quot;: &quot;monolog/monolog&quot;&lt;/code&gt; to indicates this package is abandoned, and the recommended alternative is &lt;code&gt;monolog/monolog&lt;/code&gt;.</source>
          <target state="translated">使用 &lt;code&gt;&quot;abandoned&quot;: true&lt;/code&gt; 表示该软件包已被放弃。使用 &lt;code&gt;&quot;abandoned&quot;: &quot;monolog/monolog&quot;&lt;/code&gt; 表示此软件包已被放弃，建议的替代方法是 &lt;code&gt;monolog/monolog&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ace2c6a7e71ffad9af2b3049089beab50a6493d0" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;&quot;prefer-stable&quot;: true&lt;/code&gt; to enable.</source>
          <target state="translated">使用 &lt;code&gt;&quot;prefer-stable&quot;: true&lt;/code&gt; 启用。</target>
        </trans-unit>
        <trans-unit id="8c368e21d469f0d796a68d9c72f06fdc8fa19259" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;--by-package&lt;/code&gt; (default) or &lt;code&gt;--by-suggestion&lt;/code&gt; flags to group the output by the package offering the suggestions or the suggested packages respectively.</source>
          <target state="translated">使用 &lt;code&gt;--by-package&lt;/code&gt; （默认）或 &lt;code&gt;--by-suggestion&lt;/code&gt; 标志可以分别根据提供建议或建议软件包的软件包对输出进行分组。</target>
        </trans-unit>
        <trans-unit id="742280ffccec92fc7be6a1da7f6dc250e81a7875" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;--by-package&lt;/code&gt; or &lt;code&gt;--by-suggestion&lt;/code&gt; flags to group the output by the package offering the suggestions or the suggested packages respectively.</source>
          <target state="translated">使用 &lt;code&gt;--by-package&lt;/code&gt; 或 &lt;code&gt;--by-suggestion&lt;/code&gt; 标志分别根据提供建议或建议的软件包的软件包对输出进行分组。</target>
        </trans-unit>
        <trans-unit id="201f8b94074409dd470fdeabf3fb52a7ccd6e5d4" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;--verbose (-v)&lt;/code&gt; flag to display the suggesting package and the suggestion reason. This implies &lt;code&gt;--by-package --by-suggestion&lt;/code&gt;, showing both lists.</source>
          <target state="translated">使用 &lt;code&gt;--verbose (-v)&lt;/code&gt; 标志显示建议包和建议原因。这意味着 &lt;code&gt;--by-package --by-suggestion&lt;/code&gt; ，显示了两个列表。</target>
        </trans-unit>
        <trans-unit id="2ed3705749e76b61ad5cfd5837c9b4dde3c52e3d" translate="yes" xml:space="preserve">
          <source>Use the &lt;strong&gt;same vendor and package name&lt;/strong&gt; throughout all branches and tags of your repository, especially when maintaining a third party fork and using &lt;code&gt;replace&lt;/code&gt;.</source>
          <target state="translated">在存储库的所有分支和标记中使用&lt;strong&gt;相同的供应商和程序包名称&lt;/strong&gt;，尤其是在维护第三方fork并使用 &lt;code&gt;replace&lt;/code&gt; 时。</target>
        </trans-unit>
        <trans-unit id="c43fec7130c3143dd208e30d026774272f70f676" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;http_proxy&lt;/code&gt; (lowercased) or even defining both might be preferable since some tools like git or curl will only use the lower-cased &lt;code&gt;http_proxy&lt;/code&gt; version. Alternatively you can also define the git proxy using &lt;code&gt;git config --global http.proxy &amp;lt;proxy url&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">最好使用 &lt;code&gt;http_proxy&lt;/code&gt; （小写）或同时定义两者，因为git或curl等工具只会使用小写的 &lt;code&gt;http_proxy&lt;/code&gt; 版本。或者，您也可以使用 &lt;code&gt;git config --global http.proxy &amp;lt;proxy url&amp;gt;&lt;/code&gt; 定义git代理。</target>
        </trans-unit>
        <trans-unit id="1e44c841547d59ef967c3267efa7b6061ba2ae39" translate="yes" xml:space="preserve">
          <source>Using Composer</source>
          <target state="translated">使用Composer</target>
        </trans-unit>
        <trans-unit id="9a02321539883e8133bd4d02625c38e89a365166" translate="yes" xml:space="preserve">
          <source>Using JSON object notation is also possible. However, JSON key/value pairs are to be considered unordered so consistent behaviour cannot be guaranteed.</source>
          <target state="translated">也可以使用JSON对象符号。然而,JSON键/值对被认为是无序的,因此不能保证行为的一致性。</target>
        </trans-unit>
        <trans-unit id="254550be6f0ce4335476259029c3eaa67808f04e" translate="yes" xml:space="preserve">
          <source>Using Plugins</source>
          <target state="translated">使用插件</target>
        </trans-unit>
        <trans-unit id="d97204a9d9cf393b7eb9e6978bbc7d21c2bf5baa" translate="yes" xml:space="preserve">
          <source>Using PowerShell:</source>
          <target state="translated">使用PowerShell。</target>
        </trans-unit>
        <trans-unit id="ab6c0153aad94e280c7870ce5a5f682a489b307d" translate="yes" xml:space="preserve">
          <source>Using cmd.exe:</source>
          <target state="translated">使用cmd.exe。</target>
        </trans-unit>
        <trans-unit id="c8d87edb6c4ab530842c0ac12e169c901f657db7" translate="yes" xml:space="preserve">
          <source>Using private repositories</source>
          <target state="translated">使用私人存储库</target>
        </trans-unit>
        <trans-unit id="d2888aa3efb27aa4ff140c167ba1b7f70c498ced" translate="yes" xml:space="preserve">
          <source>Using the Installer</source>
          <target state="translated">使用安装程序</target>
        </trans-unit>
        <trans-unit id="58c5b050bab6a27cb80ed905445111f04c12465a" translate="yes" xml:space="preserve">
          <source>Using the previous definition example, here's the class &lt;code&gt;MyVendor\MyClass&lt;/code&gt; that might be used to execute the PHP callbacks:</source>
          <target state="translated">使用前面的定义示例，以下是 &lt;code&gt;MyVendor\MyClass&lt;/code&gt; 类，可用于执行PHP回调：</target>
        </trans-unit>
        <trans-unit id="bcaf120949d1fdb5ff769615a5288ac9d7a6a755" translate="yes" xml:space="preserve">
          <source>VCS</source>
          <target state="translated">VCS</target>
        </trans-unit>
        <trans-unit id="4f0ac327d3aa6ce560f7c557e414bcebb84c4680" translate="yes" xml:space="preserve">
          <source>VCS Tags and Branches</source>
          <target state="translated">VCS标签和分支</target>
        </trans-unit>
        <trans-unit id="4089e660c6fc2348e7aa62c7a7a4105550bf2bba" translate="yes" xml:space="preserve">
          <source>VCS Versioning</source>
          <target state="translated">VCS版本控制</target>
        </trans-unit>
        <trans-unit id="61ff0a3493213ff858da0bb2394d27cf346235e5" translate="yes" xml:space="preserve">
          <source>VCS stands for version control system. This includes versioning systems like git, svn, fossil or hg. Composer has a repository type for installing packages from these systems.</source>
          <target state="translated">VCS是版本控制系统的缩写。这包括版本系统,如git、svn、fossil或hg。Composer有一个版本库类型,用于安装这些系统的包。</target>
        </trans-unit>
        <trans-unit id="01bd908eb27ffe104c5dc3ce74f6e9e2a3ecb35e" translate="yes" xml:space="preserve">
          <source>Various information to get support about the project.</source>
          <target state="translated">各种信息,获得项目支持。</target>
        </trans-unit>
        <trans-unit id="079d2e77a839383b4c96080d870ab40f2a837923" translate="yes" xml:space="preserve">
          <source>Vendor binaries and the &lt;code&gt;vendor/bin&lt;/code&gt; directory</source>
          <target state="translated">供应商二进制文件和 &lt;code&gt;vendor/bin&lt;/code&gt; 目录</target>
        </trans-unit>
        <trans-unit id="176e77a5f55141683d98b2f3f28c4391a7352568" translate="yes" xml:space="preserve">
          <source>Vendor binaries and the vendor/bin directory</source>
          <target state="translated">厂商二进制文件和厂商/bin目录。</target>
        </trans-unit>
        <trans-unit id="612fee8b1bdb5ec96c3b958d20d963af408a8ba2" translate="yes" xml:space="preserve">
          <source>Version Range</source>
          <target state="translated">版本范围</target>
        </trans-unit>
        <trans-unit id="506d7fa870c9e78d43affa11414f7f529217b768" translate="yes" xml:space="preserve">
          <source>Versions and constraints</source>
          <target state="translated">版本和制约因素</target>
        </trans-unit>
        <trans-unit id="3138c9f0d0acd95934c04d927ee6cae16fd9e821" translate="yes" xml:space="preserve">
          <source>We choose the branch that has the most changes, and accept the &lt;code&gt;composer.json&lt;/code&gt; and &lt;code&gt;composer.lock&lt;/code&gt; files from that branch. In this case, we choose the composer files from branch 2.</source>
          <target state="translated">我们选择更改最多的分支，并从该分支接受 &lt;code&gt;composer.json&lt;/code&gt; 和 &lt;code&gt;composer.lock&lt;/code&gt; 文件。在这种情况下，我们从分支2中选择作曲家文件。</target>
        </trans-unit>
        <trans-unit id="1b9a07554388dd719a1d3c4bf2ac74092ca6a0a8" translate="yes" xml:space="preserve">
          <source>We have a &lt;a href=&quot;http://json-schema.org&quot;&gt;JSON schema&lt;/a&gt; that documents the format and can also be used to validate your &lt;code&gt;composer.json&lt;/code&gt;. In fact, it is used by the &lt;code&gt;validate&lt;/code&gt; command. You can find it at: &lt;a href=&quot;https://getcomposer.org/schema.json&quot;&gt;https://getcomposer.org/schema.json&lt;/a&gt;</source>
          <target state="translated">我们有一个记录该格式的&lt;a href=&quot;http://json-schema.org&quot;&gt;JSON模式&lt;/a&gt;，还可以用于验证您的 &lt;code&gt;composer.json&lt;/code&gt; 。实际上， &lt;code&gt;validate&lt;/code&gt; 命令会使用它。您可以在以下位置找到它：&lt;a href=&quot;https://getcomposer.org/schema.json&quot;&gt;https&lt;/a&gt; : //getcomposer.org/schema.json</target>
        </trans-unit>
        <trans-unit id="f5216f4ca9c72967379d58576636ee995c5dcc01" translate="yes" xml:space="preserve">
          <source>We have a &lt;a href=&quot;https://json-schema.org&quot;&gt;JSON schema&lt;/a&gt; that documents the format and can also be used to validate your &lt;code&gt;composer.json&lt;/code&gt;. In fact, it is used by the &lt;code&gt;validate&lt;/code&gt; command. You can find it at: &lt;a href=&quot;https://getcomposer.org/schema.json&quot;&gt;https://getcomposer.org/schema.json&lt;/a&gt;</source>
          <target state="translated">我们有一个记录该格式的&lt;a href=&quot;https://json-schema.org&quot;&gt;JSON模式&lt;/a&gt;，还可以用于验证您的 &lt;code&gt;composer.json&lt;/code&gt; 。实际上，它由 &lt;code&gt;validate&lt;/code&gt; 命令使用。您可以在以下位置找到它：&lt;a href=&quot;https://getcomposer.org/schema.json&quot;&gt;https&lt;/a&gt; : //getcomposer.org/schema.json</target>
        </trans-unit>
        <trans-unit id="7ac66df4fc010c1faaee8853a197295c7c17ef56" translate="yes" xml:space="preserve">
          <source>We reapply the changes from the other branch (branch 1). In this case we have to run &lt;code&gt;composer require package/A&lt;/code&gt; again.</source>
          <target state="translated">我们从另一个分支（分支1）重新应用更改。在这种情况下，我们必须运行 &lt;code&gt;composer require package/A&lt;/code&gt; 一次。</target>
        </trans-unit>
        <trans-unit id="0545cefb40375beb29cfce05880f2f5aa0c2ef09" translate="yes" xml:space="preserve">
          <source>We recommend you fix your IPv6 setup. If that is not possible, you can try the following workarounds:</source>
          <target state="translated">我们建议您修复您的IPv6设置。如果这不可能,你可以尝试以下的解决方法。</target>
        </trans-unit>
        <trans-unit id="9ef44ed371e33c12478458267908e189b6452a18" translate="yes" xml:space="preserve">
          <source>Web outputs</source>
          <target state="translated">网络产出</target>
        </trans-unit>
        <trans-unit id="695afd6c8786bf69afa75f24a2d07f7d0043fa14" translate="yes" xml:space="preserve">
          <source>What about Windows and .bat files?</source>
          <target state="translated">那Windows和.bat文件呢?</target>
        </trans-unit>
        <trans-unit id="30081f64586833b513d3f4b22f9ef791d92a10e2" translate="yes" xml:space="preserve">
          <source>What does defining a vendor binary in composer.json do?</source>
          <target state="translated">在composer.json中定义一个厂商二进制有什么作用?</target>
        </trans-unit>
        <trans-unit id="06b2c135c0cd5ad382fc2e7bf514ca2bf8828d46" translate="yes" xml:space="preserve">
          <source>What does it do?</source>
          <target state="translated">它的作用是什么?</target>
        </trans-unit>
        <trans-unit id="adc638faaaf87be7bc4cc0454f0eb509965039b9" translate="yes" xml:space="preserve">
          <source>What happens when Composer is run on a composer.json that defines vendor binaries?</source>
          <target state="translated">当Composer在定义了供应商二进制文件的composer.json上运行时会发生什么?</target>
        </trans-unit>
        <trans-unit id="5184026197d912a695c49849fc6287f8e51aa72a" translate="yes" xml:space="preserve">
          <source>What happens when Composer is run on a composer.json that has dependencies with vendor binaries listed?</source>
          <target state="translated">当Composer运行在composer.json上时,会发生什么情况?</target>
        </trans-unit>
        <trans-unit id="c1d17aa62a9f54da812f8ab902182f685fee5e31" translate="yes" xml:space="preserve">
          <source>What is a script?</source>
          <target state="translated">什么是剧本?</target>
        </trans-unit>
        <trans-unit id="54f357b9d455ab56fa552807330bc791b358f17f" translate="yes" xml:space="preserve">
          <source>What is a vendor binary?</source>
          <target state="translated">什么是厂商二进制?</target>
        </trans-unit>
        <trans-unit id="db07c5e58f27b4b819c82d694edde0dbe4df252d" translate="yes" xml:space="preserve">
          <source>What to do after prompting for authentication, one of: &lt;code&gt;true&lt;/code&gt; (always store), &lt;code&gt;false&lt;/code&gt; (do not store) and &lt;code&gt;&quot;prompt&quot;&lt;/code&gt; (ask every time), defaults to &lt;code&gt;&quot;prompt&quot;&lt;/code&gt;.</source>
          <target state="translated">提示进行身份验证后要执行的操作： &lt;code&gt;true&lt;/code&gt; （始终存储）， &lt;code&gt;false&lt;/code&gt; （不存储）和 &lt;code&gt;&quot;prompt&quot;&lt;/code&gt; （每次询问）之一，默认为 &lt;code&gt;&quot;prompt&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bdd7b2932eef0cce336346f9c80055042ab8f8ab" translate="yes" xml:space="preserve">
          <source>When Composer finds the right package, either in Packagist or in a repo you have specified, it then uses the versioning features of the package's VCS (i.e., branches and tags) to attempt to find the best match for the version constraint you have specified. Be sure to read about versions and package resolution in the &lt;a href=&quot;articles/versions.md&quot;&gt;versions article&lt;/a&gt;.</source>
          <target state="translated">当Composer在Packagist或您指定的存储库中找到正确的软件包时，它会使用该软件包的VCS的版本控制功能（即分支和标签）来尝试找到与您指定的版本约束最匹配的版本。请确保在&lt;a href=&quot;articles/versions.md&quot;&gt;版本文章中&lt;/a&gt;阅读有关版本和程序包解析的信息。</target>
        </trans-unit>
        <trans-unit id="330bd29ed9bde50bbefed7841e77d3ddf9152ef0" translate="yes" xml:space="preserve">
          <source>When Composer has a complete list of available versions from your VCS, it then finds the highest version that matches all version constraints in your project (it's possible that other packages require more specific versions of the library than you do, so the version it chooses may not always be the highest available version) and it downloads a zip archive of that tag to unpack in the correct location in your &lt;code&gt;vendor&lt;/code&gt; directory.</source>
          <target state="translated">当Composer拥有来自VCS的可用版本的完整列表时，它会找到与项目中所有版本约束匹配的最高版本（其他软件包可能需要比您更具体的库版本，因此选择的版本可能会更高）。并非始终是最高的可用版本），它会下载该标签的zip存档以解压缩到您的 &lt;code&gt;vendor&lt;/code&gt; 目录中的正确位置。</target>
        </trans-unit>
        <trans-unit id="379c8b0a55dfb40b786bfa68a000e66ed7743d3d" translate="yes" xml:space="preserve">
          <source>When Composer has finished installing, it writes all of the packages and the exact versions of them that it downloaded to the &lt;code&gt;composer.lock&lt;/code&gt; file, locking the project to those specific versions. You should commit the &lt;code&gt;composer.lock&lt;/code&gt; file to your project repo so that all people working on the project are locked to the same versions of dependencies (more below).</source>
          <target state="translated">完成Composer的安装后，它将所有软件包及其下载的确切版本写入到 &lt;code&gt;composer.lock&lt;/code&gt; 文件中，从而将项目锁定为那些特定版本。您应该将 &lt;code&gt;composer.lock&lt;/code&gt; 文件提交到您的项目仓库中，以便所有在项目上工作的人都被锁定为相同版本的依赖项（更多信息请参见下文）。</target>
        </trans-unit>
        <trans-unit id="0ac034bebe5138321718967847943c20f5880687" translate="yes" xml:space="preserve">
          <source>When Composer resolves dependencies, it will look up a given package in the topmost repository. If that repository does not contain the package, it goes on to the next one, until one repository contains it and the process ends.</source>
          <target state="translated">当Composer解析依赖关系时,它会在最上面的仓库中查找给定的包。如果该仓库不包含该包,它将继续查找下一个仓库,直到有一个仓库包含了该包,这个过程就结束了。</target>
        </trans-unit>
        <trans-unit id="b2096ba9a24281e11e89594c2a5786ba0fd588c2" translate="yes" xml:space="preserve">
          <source>When GitHub, GitLab or BitBucket repositories are mirrored on your local satis, the build process will include the location of the downloads these platforms make available. This means that the repository and your setup depend on the availability of these services.</source>
          <target state="translated">当GitHub、GitLab或BitBucket仓库被镜像到你的本地satis时,构建过程将包括这些平台提供的下载位置。这意味着版本库和你的设置取决于这些服务的可用性。</target>
        </trans-unit>
        <trans-unit id="2c38858ace81518601ebddaca363c41e0d18d440" translate="yes" xml:space="preserve">
          <source>When an event is fired, your PHP callback receives as first argument a &lt;code&gt;Composer\EventDispatcher\Event&lt;/code&gt; object. This object has a &lt;code&gt;getName()&lt;/code&gt; method that lets you retrieve the event name.</source>
          <target state="translated">触发事件后，您的PHP回调将接收 &lt;code&gt;Composer\EventDispatcher\Event&lt;/code&gt; 对象作为第一个参数。该对象具有 &lt;code&gt;getName()&lt;/code&gt; 方法，可让您检索事件名称。</target>
        </trans-unit>
        <trans-unit id="27e829a5a3a13d27b6ea68ddcc31dda0e8d8fb9a" translate="yes" xml:space="preserve">
          <source>When branch names look like versions, we have to clarify for composer that we're trying to check out a branch and not a tag. In the above example, we have two version branches: &lt;code&gt;v1&lt;/code&gt; and &lt;code&gt;v2&lt;/code&gt;. To get Composer to check out one of these branches, you must specify a version constraint that looks like this: &lt;code&gt;v1.x-dev&lt;/code&gt;. The &lt;code&gt;.x&lt;/code&gt; is an arbitrary string that Composer requires to tell it that we're talking about the &lt;code&gt;v1&lt;/code&gt; branch and not a &lt;code&gt;v1&lt;/code&gt; tag (alternatively, you can name the branch &lt;code&gt;v1.x&lt;/code&gt; instead of &lt;code&gt;v1&lt;/code&gt;). In the case of a branch with a version-like name (&lt;code&gt;v1&lt;/code&gt;, in this case), you append &lt;code&gt;-dev&lt;/code&gt; as a suffix, rather than using &lt;code&gt;dev-&lt;/code&gt; as a prefix.</source>
          <target state="translated">当分支名称看起来像版本时，我们必须为作曲家澄清我们正在尝试签出分支而不是标签。在上面的示例中，我们有两个版本分支： &lt;code&gt;v1&lt;/code&gt; 和 &lt;code&gt;v2&lt;/code&gt; 。要使Composer检出这些分支之一，必须指定一个如下所示的版本约束： &lt;code&gt;v1.x-dev&lt;/code&gt; 。该 &lt;code&gt;.x&lt;/code&gt; 是Composer需要告诉它，我们正在谈论的任意字符串 &lt;code&gt;v1&lt;/code&gt; 分支而不是 &lt;code&gt;v1&lt;/code&gt; 标签（或者，您可以命名分支 &lt;code&gt;v1.x&lt;/code&gt; 而不是 &lt;code&gt;v1&lt;/code&gt; ）。对于具有类似版本名称的分支（在本例中为 &lt;code&gt;v1&lt;/code&gt; ），请附加 &lt;code&gt;-dev&lt;/code&gt; 作为后缀，而不是使用 &lt;code&gt;dev-&lt;/code&gt; 作为前缀。</target>
        </trans-unit>
        <trans-unit id="8440eaaf3a9d4374b20a9fa8763056fa47e5c5f0" translate="yes" xml:space="preserve">
          <source>When creating a gitlab token manually, make sure it has either the &lt;code&gt;read_api&lt;/code&gt; or &lt;code&gt;api&lt;/code&gt; scope.</source>
          <target state="translated">手动创建gitlab令牌时，请确保其具有 &lt;code&gt;read_api&lt;/code&gt; 或 &lt;code&gt;api&lt;/code&gt; 作用域。</target>
        </trans-unit>
        <trans-unit id="ed76d851aef4697b0588c2b1b8ca05c64897d1a7" translate="yes" xml:space="preserve">
          <source>When facing any kind of problems using Composer, be sure to &lt;strong&gt;work with the latest version&lt;/strong&gt;. See &lt;a href=&quot;../03-cli.md#self-update&quot;&gt;self-update&lt;/a&gt; for details.</source>
          <target state="translated">使用Composer遇到任何类型的问题时，请确保&lt;strong&gt;使用最新版本&lt;/strong&gt;。有关详细信息，请参见&lt;a href=&quot;../03-cli.md#self-update&quot;&gt;自我更新&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="73286eb04372437b86cc26c49edbf5051768eae5" translate="yes" xml:space="preserve">
          <source>When resolving dependencies, packages are looked up from repositories from top to bottom, and by default, as soon as a package is found in one, Composer stops looking in other repositories. Read the &lt;a href=&quot;articles/repository-priorities.md&quot;&gt;repository priorities&lt;/a&gt; article for more details and to see how to change this behavior.</source>
          <target state="translated">解决依赖关系时，从顶部到底部从存储库中查找软件包，并且默认情况下，一旦在一个存储库中找到一个软件包，Composer就会停止在其他存储库中查找。阅读&lt;a href=&quot;articles/repository-priorities.md&quot;&gt;存储库优先级&lt;/a&gt;文章以获取更多详细信息，并查看如何更改此行为。</target>
        </trans-unit>
        <trans-unit id="c97a65124bba7b583bf6dd8b25ef7b083d681222" translate="yes" xml:space="preserve">
          <source>When searching for packages, satis will attempt to resolve all the required packages from the listed repositories. Therefore, if you are requiring a package from Packagist, you will need to define it in your &lt;code&gt;satis.json&lt;/code&gt;.</source>
          <target state="translated">搜索软件包时，satis会尝试从列出的存储库中解析所有必需的软件包。因此，如果需要Packagist的软件包，则需要在 &lt;code&gt;satis.json&lt;/code&gt; 中定义它。</target>
        </trans-unit>
        <trans-unit id="9270dfb938a9991922958926f5e5ba668613d2de" translate="yes" xml:space="preserve">
          <source>When the version cannot be inferred from the local VCS repository, you should use the special &lt;code&gt;branch-version&lt;/code&gt; entry under &lt;code&gt;extra&lt;/code&gt; instead of &lt;code&gt;version&lt;/code&gt;:</source>
          <target state="translated">如果无法从本地VCS存储库中推断版本，则应在 &lt;code&gt;extra&lt;/code&gt; 而不是 &lt;code&gt;version&lt;/code&gt; 下使用特殊的 &lt;code&gt;branch-version&lt;/code&gt; 条目：</target>
        </trans-unit>
        <trans-unit id="4b89b27505fd76c037f49af242627e21ac55a5d9" translate="yes" xml:space="preserve">
          <source>When this is enabled, Composer will prefer more stable packages over unstable ones when finding compatible stable packages is possible. If you require a dev version or only alphas are available for a package, those will still be selected granted that the minimum-stability allows for it.</source>
          <target state="translated">当启用这个功能时,当可以找到兼容的稳定包时,Composer会优先选择更稳定的包而不是不稳定的包。如果你需要一个开发版本,或者一个软件包只有字母,那么在最小稳定性允许的情况下,这些软件包仍然会被选中。</target>
        </trans-unit>
        <trans-unit id="5b3f3f9864f122718c444babc71b844d1eb5d7ff" translate="yes" xml:space="preserve">
          <source>When working as a team on the same Composer project, you will eventually run into a scenario where multiple people added, updated or removed something in the &lt;code&gt;composer.json&lt;/code&gt; and &lt;code&gt;composer.lock&lt;/code&gt; files in multiple branches. When those branches are eventually merged together, you will get merge conflicts. Resolving these merge conflicts is not as straight forward as on other files, especially not regarding the &lt;code&gt;composer.lock&lt;/code&gt; file.</source>
          <target state="translated">当在一个相同的Composer项目上团队合作时，您最终将遇到一个场景，其中多个人在多个分支的 &lt;code&gt;composer.json&lt;/code&gt; 和 &lt;code&gt;composer.lock&lt;/code&gt; 文件中添加，更新或删除了某些内容。当这些分支最终合并在一起时，您将遇到合并冲突。解决这些合并冲突并不像在其他文件上那样直接，尤其是在 &lt;code&gt;composer.lock&lt;/code&gt; 文件方面。</target>
        </trans-unit>
        <trans-unit id="16c2acf657e1e7462fae363786252a003708539b" translate="yes" xml:space="preserve">
          <source>When you are using a VCS repository, you will only get comparable versions for branches that look like versions, such as &lt;code&gt;2.0&lt;/code&gt; or &lt;code&gt;2.0.x&lt;/code&gt;. For your &lt;code&gt;master&lt;/code&gt; branch, you will get a &lt;code&gt;dev-master&lt;/code&gt; version. For your &lt;code&gt;bugfix&lt;/code&gt; branch, you will get a &lt;code&gt;dev-bugfix&lt;/code&gt; version.</source>
          <target state="translated">当使用VCS存储库时，对于类似版本的分支（例如 &lt;code&gt;2.0&lt;/code&gt; 或 &lt;code&gt;2.0.x&lt;/code&gt; )，您将仅获得可比较的版本。对于您的 &lt;code&gt;master&lt;/code&gt; 分支，您将获得 &lt;code&gt;dev-master&lt;/code&gt; 版本。对于您的 &lt;code&gt;bugfix&lt;/code&gt; 分支，您将获得一个 &lt;code&gt;dev-bugfix&lt;/code&gt; 版本。</target>
        </trans-unit>
        <trans-unit id="578ff736765295027c32e5b458b5c8d3736147d8" translate="yes" xml:space="preserve">
          <source>When you ironed out that process, what you would typically do is run this command as a cron job on a server. It would then update all your package info much like Packagist does.</source>
          <target state="translated">当你解决了这个问题后,你通常会做的是在服务器上以cron作业的方式运行这个命令,然后它就会像Packagist一样更新你所有的软件包信息。然后它就会像Packagist一样更新你所有的软件包信息。</target>
        </trans-unit>
        <trans-unit id="dfd16645311a952154d169843341b77074136f03" translate="yes" xml:space="preserve">
          <source>When you run &lt;code&gt;php composer.phar update&lt;/code&gt;, you should get your modified version of &lt;code&gt;monolog/monolog&lt;/code&gt; instead of the one from packagist.</source>
          <target state="translated">当您运行 &lt;code&gt;php composer.phar update&lt;/code&gt; 时，您应该获得修改后的 &lt;code&gt;monolog/monolog&lt;/code&gt; 版本，而不是packagist的版本。</target>
        </trans-unit>
        <trans-unit id="7d74443837a95b2fa9335f8d4442b1085516a7ce" translate="yes" xml:space="preserve">
          <source>When you run the command it will interactively ask you to fill in the fields, while using some smart defaults.</source>
          <target state="translated">当你运行该命令时,它会交互式地要求你填写字段,同时使用一些智能默认值。</target>
        </trans-unit>
        <trans-unit id="57fe5af39bff192c35cd0f7cda06f541982c4d26" translate="yes" xml:space="preserve">
          <source>When you run this command, one of two things may happen:</source>
          <target state="translated">当你运行这个命令时,可能会发生两种情况之一。</target>
        </trans-unit>
        <trans-unit id="a797fa35e005d95509844e0d650216640084343c" translate="yes" xml:space="preserve">
          <source>When you try to install packages from a Git repository and you use the &lt;code&gt;ControlMaster&lt;/code&gt; setting for your SSH connection, Composer might hang endlessly and you see a &lt;code&gt;sh&lt;/code&gt; process in the &lt;code&gt;defunct&lt;/code&gt; state in your process list.</source>
          <target state="translated">当您尝试从Git存储库安装软件包并使用 &lt;code&gt;ControlMaster&lt;/code&gt; 设置进行SSH连接时，Composer可能会无限期挂起，并且您会在进程列表中看到处于 &lt;code&gt;defunct&lt;/code&gt; 状态的 &lt;code&gt;sh&lt;/code&gt; 进程。</target>
        </trans-unit>
        <trans-unit id="afc682517d8479f6ff4e831f3be16bbfa871d292" translate="yes" xml:space="preserve">
          <source>When your private repositories are password protected, you can store the authentication details permanently. The first time Composer needs to authenticate against some domain it will prompt you for a username/password and then you will be asked whether you want to store it.</source>
          <target state="translated">当你的私有仓库受到密码保护时,你可以永久存储认证细节。当Composer第一次需要对某个域进行验证时,它会提示你输入用户名/密码,然后会问你是否要存储它。</target>
        </trans-unit>
        <trans-unit id="39954177a52e7092dc3e5b1402f2cb601a414696" translate="yes" xml:space="preserve">
          <source>Whenever Composer encounters a protected Composer repository it will try to authenticate using already defined credentials first. When none of those credentials apply it will prompt for credentials and save them (or a token if Composer is able to retrieve one).</source>
          <target state="translated">每当 Composer 遇到一个受保护的 Composer 仓库时,它将首先尝试使用已经定义的凭证进行验证。当这些凭证都不适用时,它将提示输入凭证并保存它们(如果Composer能够检索到一个凭证,则保存一个令牌)。</target>
        </trans-unit>
        <trans-unit id="6bddb0ff394caa8056ccde7e395df6f0f26be603" translate="yes" xml:space="preserve">
          <source>Whether a class is found or not, that fact is always cached in APCu so it can be returned quickly on the next request.</source>
          <target state="translated">无论是否找到了一个类,这个事实总是被缓存在APCu中,所以可以在下一次请求时快速返回。</target>
        </trans-unit>
        <trans-unit id="8a53d32dcdc189ba7915a6b87f02a46371209fa4" translate="yes" xml:space="preserve">
          <source>Whether a class is found or not, that fact is always cached in APCu, so it can be returned quickly on the next request.</source>
          <target state="translated">无论是否找到了一个类,这个事实总是被缓存在APCu中,所以可以在下一次请求时快速返回。</target>
        </trans-unit>
        <trans-unit id="0346f1fe4eefd78d63cd15b004c9fd23e3db6fcd" translate="yes" xml:space="preserve">
          <source>Which version numbering system does Composer itself use?</source>
          <target state="translated">Composer本身使用哪个版本号系统?</target>
        </trans-unit>
        <trans-unit id="0186f973d62d2fb41f702ae44dd1ba478c209c15" translate="yes" xml:space="preserve">
          <source>While Composer is mostly used around your project to install its dependencies, there are a few things which are made available to you at runtime.</source>
          <target state="translated">虽然Composer主要用于在你的项目周围安装它的依赖关系,但也有一些东西是在运行时提供给你的。</target>
        </trans-unit>
        <trans-unit id="ee75df82513d08f03fd8d6d641174c040cc42474" translate="yes" xml:space="preserve">
          <source>While Composer supports locking dependencies to a specific commit using the &lt;code&gt;#commit-ref&lt;/code&gt; syntax, there are certain caveats that one should take into account. The most important one is &lt;a href=&quot;../04-schema.md#package-links&quot;&gt;documented&lt;/a&gt;, but frequently overlooked:</source>
          <target state="translated">尽管Composer支持使用 &lt;code&gt;#commit-ref&lt;/code&gt; 语法将依赖关系锁定到特定提交，但应注意某些警告。最重要的&lt;a href=&quot;../04-schema.md#package-links&quot;&gt;记录在案&lt;/a&gt;，但经常被忽略：</target>
        </trans-unit>
        <trans-unit id="d6d799cb7768d153f8ca0f019e96c5e0141d360d" translate="yes" xml:space="preserve">
          <source>While you will probably want to put your packages on packagist most of the time, there are some use cases for hosting your own repository.</source>
          <target state="translated">虽然大多数时候你可能会想把你的包放在packagist上,但也有一些情况下可以托管自己的仓库。</target>
        </trans-unit>
        <trans-unit id="935e695892681c7f60fc9d678c9d7dcf3efcc0fc" translate="yes" xml:space="preserve">
          <source>Why aliases?</source>
          <target state="translated">为什么要用别名?</target>
        </trans-unit>
        <trans-unit id="942b319544623ce191f8e960337a39b9d36ea4ed" translate="yes" xml:space="preserve">
          <source>Why are unbound version constraints a bad idea?</source>
          <target state="translated">为什么不绑定版本约束是个坏主意?</target>
        </trans-unit>
        <trans-unit id="b3a27a1e4cde9703469f9f8ccb701d8cf42b2310" translate="yes" xml:space="preserve">
          <source>Why are version constraints combining comparisons and wildcards a bad idea?</source>
          <target state="translated">为什么版本约束结合比较和通配符是个坏主意?</target>
        </trans-unit>
        <trans-unit id="4849bb86bdd0dff8d3574ff2f644dbbdede59860" translate="yes" xml:space="preserve">
          <source>Why can't Composer load repositories recursively?</source>
          <target state="translated">为什么Composer不能递归加载仓库?</target>
        </trans-unit>
        <trans-unit id="7acb8e3d9d80fabb1c5a25eba5b8f0cc1519ec5b" translate="yes" xml:space="preserve">
          <source>Wildcard Version Range (.*)</source>
          <target state="translated">通配符版本范围 (.*)</target>
        </trans-unit>
        <trans-unit id="d31576cbc0e7d37ac5965f17f826f68f0736ebc3" translate="yes" xml:space="preserve">
          <source>Wildcard Version Range (&lt;code&gt;.*&lt;/code&gt;)</source>
          <target state="translated">通配符版本范围（ &lt;code&gt;.*&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="1d66f059c441426ebd248bf3f78fc3211a7fa82f" translate="yes" xml:space="preserve">
          <source>Wildcards (&lt;code&gt;*&lt;/code&gt;) are also supported in a classmap paths, and expand to match any directory name:</source>
          <target state="translated">类映射路径中也支持通配符（ &lt;code&gt;*&lt;/code&gt; ），并可以扩展以匹配任何目录名：</target>
        </trans-unit>
        <trans-unit id="4851296022cbf4ca37bbc835b38cf48f8392e4b3" translate="yes" xml:space="preserve">
          <source>With the &lt;code&gt;--verbose&lt;/code&gt; option you get some more information about what was changed:</source>
          <target state="translated">使用 &lt;code&gt;--verbose&lt;/code&gt; 选项，您可以获得有关更改内容的更多信息：</target>
        </trans-unit>
        <trans-unit id="b12b24cc6c213ab807bf803a23448ee364830c00" translate="yes" xml:space="preserve">
          <source>Without a vendor alias, Composer will use the PEAR channel name as the vendor portion of the package name:</source>
          <target state="translated">如果没有供应商别名,Composer将使用PEAR通道名作为包名的供应商部分。</target>
        </trans-unit>
        <trans-unit id="f1152c338592a36794dba00a974a9b43e867023c" translate="yes" xml:space="preserve">
          <source>Writing Version Constraints</source>
          <target state="translated">编写版本约束</target>
        </trans-unit>
        <trans-unit id="e8e72840c3bd313ca905e833526606f705fe9906" translate="yes" xml:space="preserve">
          <source>Writing custom commands</source>
          <target state="translated">编写自定义命令</target>
        </trans-unit>
        <trans-unit id="89689e1a2576d8351d3455024a253e1be33852ef" translate="yes" xml:space="preserve">
          <source>Xdebug impact on Composer</source>
          <target state="translated">Xdebug对Composer的影响</target>
        </trans-unit>
        <trans-unit id="d13bb055de512c4c9634946174960030f1dfcb98" translate="yes" xml:space="preserve">
          <source>Yes, there are two ways an alternate vendor binary location can be specified:</source>
          <target state="translated">是的,有两种方式可以指定备用供应商二进制位置。</target>
        </trans-unit>
        <trans-unit id="232a9479ae52b78bc139efa8d4abd9d73a572ed4" translate="yes" xml:space="preserve">
          <source>You are using &lt;code&gt;symfony/monolog-bundle&lt;/code&gt; which requires &lt;code&gt;monolog/monolog&lt;/code&gt; version &lt;code&gt;1.*&lt;/code&gt;. So you need your &lt;code&gt;dev-bugfix&lt;/code&gt; to match that constraint.</source>
          <target state="translated">您正在使用 &lt;code&gt;symfony/monolog-bundle&lt;/code&gt; ，它需要 &lt;code&gt;monolog/monolog&lt;/code&gt; 版本 &lt;code&gt;1.*&lt;/code&gt; 。因此，您需要使用 &lt;code&gt;dev-bugfix&lt;/code&gt; 来匹配该约束。</target>
        </trans-unit>
        <trans-unit id="a17e2091336e8745edeffa0ba91b2a82eb48de18" translate="yes" xml:space="preserve">
          <source>You can add the canonical option to any repository to disable this default behavior and make sure Composer keeps looking in other repositories, even if that repository contains a given package.</source>
          <target state="translated">你可以将canonical选项添加到任何版本库,以禁用这种默认行为,并确保Composer一直在其他版本库中寻找,即使该版本库包含一个给定的包。</target>
        </trans-unit>
        <trans-unit id="92d8aa0bd892994fe5cead64b812e1207b96563b" translate="yes" xml:space="preserve">
          <source>You can also call a shell/bash script, which will have the path to the PHP executable available in it as a &lt;code&gt;PHP_BINARY&lt;/code&gt; env var.</source>
          <target state="translated">您还可以调用shell / bash脚本，该脚本中将提供PHP可执行文件的路径，形式为 &lt;code&gt;PHP_BINARY&lt;/code&gt; env var。</target>
        </trans-unit>
        <trans-unit id="47050eeb1ab6dba82e5504b026ca0279bd041182" translate="yes" xml:space="preserve">
          <source>You can also configure these by hand using the config command if you need to configure a production machine to be able to run non-interactive installs. For example to enter credentials for example.org one could type:</source>
          <target state="translated">如果你需要将生产机器配置为能够运行非交互式安装,你也可以使用config命令手动配置这些。例如,要输入example.org的凭证,可以键入。</target>
        </trans-unit>
        <trans-unit id="b1d0c2f7f0fd5c31af27505d8741dd13f613349e" translate="yes" xml:space="preserve">
          <source>You can also edit the values of the following properties:</source>
          <target state="translated">您也可以编辑以下属性的值。</target>
        </trans-unit>
        <trans-unit id="e42918294c01c86d0966786f28d370862e2fc0f3" translate="yes" xml:space="preserve">
          <source>You can also filter packages which a repository will be able to load, either by selecting which ones you want, or by excluding those you do not want.</source>
          <target state="translated">你也可以通过选择你想要的包,或者排除那些你不想要的包,来过滤版本库可以加载的包。</target>
        </trans-unit>
        <trans-unit id="8f61da855975a7c0669e1a339ed328dae68568d1" translate="yes" xml:space="preserve">
          <source>You can also give additional arguments to the script handler by appending &lt;code&gt;--&lt;/code&gt; followed by the handler arguments. e.g. &lt;code&gt;composer run-script post-install-cmd -- --check&lt;/code&gt; will pass&lt;code&gt;--check&lt;/code&gt; along to the script handler. Those arguments are received as CLI arg by CLI handlers, and can be retrieved as an array via &lt;code&gt;$event-&amp;gt;getArguments()&lt;/code&gt; by PHP handlers.</source>
          <target state="translated">您还可以通过在脚本处理程序后面附加 &lt;code&gt;--&lt;/code&gt; 来添加其他参数。例如， &lt;code&gt;composer run-script post-install-cmd -- --check&lt;/code&gt; 将 &lt;code&gt;--check&lt;/code&gt; 传递给脚本处理程序。这些参数由CLI处理程序作为CLI arg接收，并且可以由PHP处理程序通过 &lt;code&gt;$event-&amp;gt;getArguments()&lt;/code&gt; 作为数组检索。</target>
        </trans-unit>
        <trans-unit id="318fba6a4eb9d30d820aa00958f0a0efc84cb423" translate="yes" xml:space="preserve">
          <source>You can also refer a script and pass it new arguments:</source>
          <target state="translated">你也可以引用一个脚本并传递新的参数。</target>
        </trans-unit>
        <trans-unit id="f23a226bdf3ac7de179d20ef06e91398298bec68" translate="yes" xml:space="preserve">
          <source>You can also search for more than one term by passing multiple arguments.</source>
          <target state="translated">您也可以通过传递多个参数来搜索多个术语。</target>
        </trans-unit>
        <trans-unit id="e277031eed1b3ebd11ad64d6cb86fcc011e4a79a" translate="yes" xml:space="preserve">
          <source>You can also use wildcards to update a bunch of packages at once:</source>
          <target state="translated">你也可以使用通配符来同时更新一堆包。</target>
        </trans-unit>
        <trans-unit id="cc70b71ddbbc9db27ba6fb110e2c264c1454b235" translate="yes" xml:space="preserve">
          <source>You can check out any package and start developing on patches for example.</source>
          <target state="translated">你可以查看任何包,并开始在补丁上开发,例如。</target>
        </trans-unit>
        <trans-unit id="3c989054b70bcc085a6cc0a500077648747980ec" translate="yes" xml:space="preserve">
          <source>You can define multiple ranges. Ranges separated by a space () or comma (&lt;code&gt;,&lt;/code&gt;) will be treated as a &lt;strong&gt;logical AND&lt;/strong&gt;. A double pipe (&lt;code&gt;||&lt;/code&gt;) will be treated as a &lt;strong&gt;logical OR&lt;/strong&gt;. AND has higher precedence than OR.</source>
          <target state="translated">您可以定义多个范围。用空格（）或逗号（ &lt;code&gt;,&lt;/code&gt; ）分隔的范围将被视为&lt;strong&gt;逻辑与&lt;/strong&gt;。双管道（ &lt;code&gt;||&lt;/code&gt; ）将被视为&lt;strong&gt;逻辑OR&lt;/strong&gt;。 AND的优先级高于OR。</target>
        </trans-unit>
        <trans-unit id="d550a4be6c1d6ecf6c3187d977dbbadbbef60667" translate="yes" xml:space="preserve">
          <source>You can deploy application packages.</source>
          <target state="translated">您可以部署应用程序包。</target>
        </trans-unit>
        <trans-unit id="25617ca19a07cc38bb9e4fbf40ca922966b9f2a8" translate="yes" xml:space="preserve">
          <source>You can disable Packagist.org globally by using the global config flag:</source>
          <target state="translated">您可以通过使用全局配置标志在全局范围内禁用Packagist.org。</target>
        </trans-unit>
        <trans-unit id="818ebdafb4698871127705adf6fc094348356a99" translate="yes" xml:space="preserve">
          <source>You can disable the default Packagist.org repository by adding this to your &lt;code&gt;composer.json&lt;/code&gt;:</source>
          <target state="translated">您可以通过将默认Packagist.org存储库添加到 &lt;code&gt;composer.json&lt;/code&gt; 来禁用它：</target>
        </trans-unit>
        <trans-unit id="be4dcb1f385e4785fdaee3137b5b2d0d17d4e0a1" translate="yes" xml:space="preserve">
          <source>You can enable IPv6 again with:</source>
          <target state="translated">你可以再次启用IPv6,用。</target>
        </trans-unit>
        <trans-unit id="23e2fc209445e06617cb36018112cb556e7e0d1a" translate="yes" xml:space="preserve">
          <source>You can even add your own code to the autoloader by adding an &lt;a href=&quot;04-schema.md#autoload&quot;&gt;&lt;code&gt;autoload&lt;/code&gt;&lt;/a&gt; field to &lt;code&gt;composer.json&lt;/code&gt;.</source>
          <target state="translated">您甚至可以通过在 &lt;code&gt;composer.json&lt;/code&gt; 中添加&lt;a href=&quot;04-schema.md#autoload&quot;&gt; &lt;code&gt;autoload&lt;/code&gt; &lt;/a&gt;字段，将自己的代码添加到自动加载器中。</target>
        </trans-unit>
        <trans-unit id="d69b8155ec189620730e3daf1051489521808063" translate="yes" xml:space="preserve">
          <source>You can even pass the package version, which will tell you the details of that specific version.</source>
          <target state="translated">你甚至可以传递包的版本,它将告诉你该特定版本的细节。</target>
        </trans-unit>
        <trans-unit id="4e124e97a01fd07f19167a1cd6477ea415996804" translate="yes" xml:space="preserve">
          <source>You can fix this by aliasing version 0.11 to 0.1:</source>
          <target state="translated">你可以通过将0.11版本别名为0.1来解决这个问题。</target>
        </trans-unit>
        <trans-unit id="a38e05f55669ad85d97016d74c8d3f2795944229" translate="yes" xml:space="preserve">
          <source>You can install Composer to a specific directory by using the &lt;code&gt;--install-dir&lt;/code&gt; option and additionally (re)name it as well using the &lt;code&gt;--filename&lt;/code&gt; option. When running the installer when following &lt;a href=&quot;https://getcomposer.org/download/&quot;&gt;the Download page instructions&lt;/a&gt; add the following parameters:</source>
          <target state="translated">您可以使用 &lt;code&gt;--install-dir&lt;/code&gt; 选项将Composer安装到特定目录，并另外使用 &lt;code&gt;--filename&lt;/code&gt; 选项对其进行重命名。在按照&lt;a href=&quot;https://getcomposer.org/download/&quot;&gt;&amp;ldquo;下载&amp;rdquo;页面的说明&lt;/a&gt;运行安装程序时，请添加以下参数：</target>
        </trans-unit>
        <trans-unit id="be5ff711194d3da4970dfdaa31fbc2f9ec96d666" translate="yes" xml:space="preserve">
          <source>You can make a permanent swap file following this &lt;a href=&quot;https://www.digitalocean.com/community/tutorials/how-to-add-swap-on-ubuntu-14-04&quot;&gt;tutorial&lt;/a&gt;.</source>
          <target state="translated">您可以按照本&lt;a href=&quot;https://www.digitalocean.com/community/tutorials/how-to-add-swap-on-ubuntu-14-04&quot;&gt;教程&lt;/a&gt;制作永久交换文件。</target>
        </trans-unit>
        <trans-unit id="b4f2dfed1baaa2bac58bd92d69eddb44f4ab87ee" translate="yes" xml:space="preserve">
          <source>You can open this file in your favorite editor and fix the error.</source>
          <target state="translated">你可以在你最喜欢的编辑器中打开这个文件并修复错误。</target>
        </trans-unit>
        <trans-unit id="059e2a4ea7a2b57e8e95e25f4c1be4e4e855fc92" translate="yes" xml:space="preserve">
          <source>You can optionally specify a version constraint after the package to limit the search.</source>
          <target state="translated">你可以选择在软件包后面指定一个版本约束来限制搜索。</target>
        </trans-unit>
        <trans-unit id="44247cd92513b88c8690622827b1c538d8a672e5" translate="yes" xml:space="preserve">
          <source>You can place the Composer PHAR anywhere you wish. If you put it in a directory that is part of your &lt;code&gt;PATH&lt;/code&gt;, you can access it globally. On Unix systems you can even make it executable and invoke it without directly using the &lt;code&gt;php&lt;/code&gt; interpreter.</source>
          <target state="translated">您可以将Composer PHAR放置在所需的任何位置。如果将其放在 &lt;code&gt;PATH&lt;/code&gt; 一部分的目录中，则可以全局访问它。在Unix系统上，您甚至可以使其直接执行并调用它，而无需直接使用 &lt;code&gt;php&lt;/code&gt; 解释器。</target>
        </trans-unit>
        <trans-unit id="66e6f726f4e93634057c9bc64f8e7412b4ccf33c" translate="yes" xml:space="preserve">
          <source>You can set &lt;code&gt;bin-dir&lt;/code&gt; to &lt;code&gt;./&lt;/code&gt; to put binaries in your project root.</source>
          <target state="translated">您可以将 &lt;code&gt;bin-dir&lt;/code&gt; 设置为 &lt;code&gt;./&lt;/code&gt; ,以将二进制文件放入项目根目录。</target>
        </trans-unit>
        <trans-unit id="1529802815269f9ccc9f98d7ed7ce8dc2265d3a0" translate="yes" xml:space="preserve">
          <source>You can set a number of environment variables that override certain settings. Whenever possible it is recommended to specify these settings in the &lt;code&gt;config&lt;/code&gt; section of &lt;code&gt;composer.json&lt;/code&gt; instead. It is worth noting that the env vars will always take precedence over the values specified in &lt;code&gt;composer.json&lt;/code&gt;.</source>
          <target state="translated">您可以设置许多覆盖某些设置的环境变量。建议您尽可能在 &lt;code&gt;composer.json&lt;/code&gt; 的 &lt;code&gt;config&lt;/code&gt; 部分中指定这些设置。值得注意的是，env vars将始终优先于 &lt;code&gt;composer.json&lt;/code&gt; 中指定的值。</target>
        </trans-unit>
        <trans-unit id="11459ebfeb63e743171fd7e4cf5e5a1bc70fd3bf" translate="yes" xml:space="preserve">
          <source>You can set custom script descriptions with the following in your &lt;code&gt;composer.json&lt;/code&gt;:</source>
          <target state="translated">您可以在 &lt;code&gt;composer.json&lt;/code&gt; 中使用以下内容设置自定义脚本描述：</target>
        </trans-unit>
        <trans-unit id="31a7b3e235562ba59cb0ff9f6a273d0099fd6e4e" translate="yes" xml:space="preserve">
          <source>You can specify a pattern with a &lt;code&gt;*&lt;/code&gt; wildcard. &lt;code&gt;1.0.*&lt;/code&gt; is the equivalent of &lt;code&gt;&amp;gt;=1.0 &amp;lt;1.1&lt;/code&gt;.</source>
          <target state="translated">您可以使用 &lt;code&gt;*&lt;/code&gt; 通配符指定模式。 &lt;code&gt;1.0.*&lt;/code&gt; 等于 &lt;code&gt;&amp;gt;=1.0 &amp;lt;1.1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="df4750b176dc87d7120530cc24bccad70a6c661a" translate="yes" xml:space="preserve">
          <source>You can specify the exact version of a package. This will tell Composer to install this version and this version only. If other dependencies require a different version, the solver will ultimately fail and abort any install or update procedures.</source>
          <target state="translated">你可以指定一个软件包的确切版本。这将告诉Composer安装这个版本,并且只安装这个版本。如果其他依赖项需要不同的版本,求解器最终会失败,并放弃任何安装或更新程序。</target>
        </trans-unit>
        <trans-unit id="66933a7f82f185e606bc5150c277062e4eba4e61" translate="yes" xml:space="preserve">
          <source>You can tell Satis to selectively update only particular packages or process only a repository with a given URL. This cuts down the time it takes to rebuild the &lt;code&gt;package.json&lt;/code&gt; file and is helpful if you use (custom) webhooks to trigger rebuilds whenever code is pushed into one of your repositories.</source>
          <target state="translated">您可以告诉Satis有选择地仅更新特定软件包或仅处理具有给定URL的存储库。这样可以减少重建 &lt;code&gt;package.json&lt;/code&gt; 文件所需的时间，并且如果每当将代码推送到一个存储库中时都使用（自定义）webhooks来触发重建，这将很有帮助。</target>
        </trans-unit>
        <trans-unit id="212d30ec5b49a0affbd51321e0d61f94172968ab" translate="yes" xml:space="preserve">
          <source>You can test version constraints using &lt;a href=&quot;https://semver.mwl.be&quot;&gt;semver.mwl.be&lt;/a&gt;. Fill in a package name and it will autofill the default version constraint which Composer would add to your &lt;code&gt;composer.json&lt;/code&gt; file. You can adjust the version constraint and the tool will highlight all releases that match.</source>
          <target state="translated">您可以使用&lt;a href=&quot;https://semver.mwl.be&quot;&gt;semver.mwl.be&lt;/a&gt;测试版本约束。填写软件包名称，它将自动填写Composer将添加到您的 &lt;code&gt;composer.json&lt;/code&gt; 文件中的默认版本约束。您可以调整版本约束，该工具将突出显示所有匹配的版本。</target>
        </trans-unit>
        <trans-unit id="b8b9e567af0efee531c02ff1ed84cdf8cdb63eb5" translate="yes" xml:space="preserve">
          <source>You can update all your dependencies in one command.</source>
          <target state="translated">你可以通过一个命令更新所有的依赖关系。</target>
        </trans-unit>
        <trans-unit id="1f880b40e14dbe74ab6577c31e1cb939d9ef7403" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;03-cli.md#show&quot;&gt;&lt;code&gt;show --platform&lt;/code&gt;&lt;/a&gt; to get a list of your locally available platform packages.</source>
          <target state="translated">您可以使用&lt;a href=&quot;03-cli.md#show&quot;&gt; &lt;code&gt;show --platform&lt;/code&gt; &lt;/a&gt;来获取本地可用平台软件包的列表。</target>
        </trans-unit>
        <trans-unit id="5c70b74b13c3da6aababb2305fe63db4c57b857b" translate="yes" xml:space="preserve">
          <source>You can use Composer to create new projects from an existing package. This is the equivalent of doing a git clone/svn checkout followed by a &lt;code&gt;composer install&lt;/code&gt; of the vendors.</source>
          <target state="translated">您可以使用Composer从现有包中创建新项目。这等效于进行git clone / svn检出，然后 &lt;code&gt;composer install&lt;/code&gt; 供应商的作曲家。</target>
        </trans-unit>
        <trans-unit id="7e0dbd29592dd6aaf01f3bbef96e2794758f6933" translate="yes" xml:space="preserve">
          <source>You can use the classmap generation support to define autoloading for all libraries that do not follow PSR-0/4. To configure this you specify all directories or files to search for classes.</source>
          <target state="translated">您可以使用类图生成支持来定义不遵循PSR-0/4的所有库的自动加载。要配置这一点,您可以指定所有目录或文件来搜索类。</target>
        </trans-unit>
        <trans-unit id="edc081f399ca138529927a30617249f7dd8e5aa2" translate="yes" xml:space="preserve">
          <source>You define a mapping from namespaces to directories. The &lt;code&gt;src&lt;/code&gt; directory would be in your project root, on the same level as &lt;code&gt;vendor&lt;/code&gt; directory is. An example filename would be &lt;code&gt;src/Foo.php&lt;/code&gt; containing an &lt;code&gt;Acme\Foo&lt;/code&gt; class.</source>
          <target state="translated">您定义从名称空间到目录的映射。在 &lt;code&gt;src&lt;/code&gt; 目录将是你的项目的根，在同一级别 &lt;code&gt;vendor&lt;/code&gt; 目录。文件名示例为 &lt;code&gt;src/Foo.php&lt;/code&gt; ,其中包含 &lt;code&gt;Acme\Foo&lt;/code&gt; 类。</target>
        </trans-unit>
        <trans-unit id="b5be00608cf1fdfcf4fae1cf04e361e548a437c6" translate="yes" xml:space="preserve">
          <source>You give it a &lt;code&gt;composer.json&lt;/code&gt; containing repositories, typically VCS and package repository definitions. It will fetch all the packages that are &lt;code&gt;require&lt;/code&gt;d and dump a &lt;code&gt;packages.json&lt;/code&gt; that is your &lt;code&gt;composer&lt;/code&gt; repository.</source>
          <target state="translated">您给它一个 &lt;code&gt;composer.json&lt;/code&gt; ,其中包含存储库，通常是VCS和软件包存储库定义。它将获取所有 &lt;code&gt;require&lt;/code&gt; d的 &lt;code&gt;packages.json&lt;/code&gt; ，并转储一个 &lt;code&gt;composer&lt;/code&gt; 信息库的packages.json。</target>
        </trans-unit>
        <trans-unit id="7f3f9919240a9f9cefbca07f2401866024df7494" translate="yes" xml:space="preserve">
          <source>You have a project that depends on a number of libraries.</source>
          <target state="translated">你有一个项目,它依赖于许多库。</target>
        </trans-unit>
        <trans-unit id="706b15e3867b3e4477af11bdbadf3887218e7cb0" translate="yes" xml:space="preserve">
          <source>You may pass the &lt;code&gt;--no-plugins&lt;/code&gt; option to Composer commands to disable all installed plugins. This may be particularly helpful if any of the plugins causes errors and you wish to update or uninstall it.</source>
          <target state="translated">您可以将 &lt;code&gt;--no-plugins&lt;/code&gt; 选项传递给Composer命令以禁用所有已安装的插件。如果任何插件引起错误并且您希望更新或卸载它，这可能特别有用。</target>
        </trans-unit>
        <trans-unit id="5c6a8cc4f3cf7e82f808e84dfe803c4507f5d466" translate="yes" xml:space="preserve">
          <source>You may pass the &lt;code&gt;--no-plugins&lt;/code&gt; option to composer commands to disable all installed plugins. This may be particularly helpful if any of the plugins causes errors and you wish to update or uninstall it.</source>
          <target state="translated">您可以将 &lt;code&gt;--no-plugins&lt;/code&gt; 选项传递给composer命令以禁用所有已安装的插件。如果任何插件引起错误并且您希望更新或卸载它，这可能特别有用。</target>
        </trans-unit>
        <trans-unit id="a011ed0c983ca176dda6d1f7aab64b156b38e178" translate="yes" xml:space="preserve">
          <source>You may put a &lt;code&gt;config.json&lt;/code&gt; file into the location which &lt;code&gt;COMPOSER_HOME&lt;/code&gt; points to. Composer will merge this configuration with your project's &lt;code&gt;composer.json&lt;/code&gt; when you run the &lt;code&gt;install&lt;/code&gt; and &lt;code&gt;update&lt;/code&gt; commands.</source>
          <target state="translated">您可以将 &lt;code&gt;config.json&lt;/code&gt; 文件放入 &lt;code&gt;COMPOSER_HOME&lt;/code&gt; 指向的位置。当您运行 &lt;code&gt;install&lt;/code&gt; 和 &lt;code&gt;update&lt;/code&gt; 命令时，Composer会将此配置与项目的 &lt;code&gt;composer.json&lt;/code&gt; 合并。</target>
        </trans-unit>
        <trans-unit id="f06187869e01bb34fb096711889bc95109aa0fb2" translate="yes" xml:space="preserve">
          <source>You may run into errors if IPv6 is not configured correctly. A common error is:</source>
          <target state="translated">如果没有正确配置IPv6,你可能会遇到错误。一个常见的错误是:</target>
        </trans-unit>
        <trans-unit id="d07a9667007cb39bf1fcc0966d043fa601e09d5c" translate="yes" xml:space="preserve">
          <source>You may wish to alter or expand Composer's functionality with your own. For example if your environment poses special requirements on the behaviour of Composer which do not apply to the majority of its users or if you wish to accomplish something with Composer in a way that is not desired by most users.</source>
          <target state="translated">你可能希望用你自己的方式来改变或扩展Composer的功能。例如,如果你的环境对Composer的行为提出了特殊的要求,而这些要求并不适用于大多数用户,或者如果你希望用Composer来完成一些大多数用户不希望看到的事情。</target>
        </trans-unit>
        <trans-unit id="acc8d3298fe776fc118a311a80b572321ff9bcc8" translate="yes" xml:space="preserve">
          <source>You may wish to alter or expand Composer's functionality with your own. For example if your environment poses special requirements on the behaviour of Composer which do not apply to the majority of its users or if you wish to accomplish something with composer in a way that is not desired by most users.</source>
          <target state="translated">您可能希望用您自己的功能来改变或扩展Composer的功能。例如,如果你的环境对Composer的行为提出了特殊要求,而这些要求并不适用于大多数用户,或者如果你希望用大多数用户不希望的方式来完成Composer的某些功能。</target>
        </trans-unit>
        <trans-unit id="a2eb123c60238bf801143f7856b0c4a859b3649a" translate="yes" xml:space="preserve">
          <source>You might run into this if you are trying to require dev, alpha, beta, or RC versions of a package. Read more about stability flags and the &lt;code&gt;minimum-stability&lt;/code&gt; key on the &lt;a href=&quot;04-schema.md&quot;&gt;schema page&lt;/a&gt;.</source>
          <target state="translated">如果您需要软件包的dev，alpha，beta或RC版本，则可能会遇到此问题。在&lt;a href=&quot;04-schema.md&quot;&gt;架构页面&lt;/a&gt;上阅读有关稳定性标志和 &lt;code&gt;minimum-stability&lt;/code&gt; 键的更多信息。</target>
        </trans-unit>
        <trans-unit id="91dbe9ec5cd79625d01b966c2069ab7cd046b81a" translate="yes" xml:space="preserve">
          <source>You must require the special package called &lt;code&gt;composer-plugin-api&lt;/code&gt; to define which Plugin API versions your plugin is compatible with.</source>
          <target state="translated">您必须需要一个名为 &lt;code&gt;composer-plugin-api&lt;/code&gt; 的特殊程序包，才能定义您的插件兼容的Plugin API版本。</target>
        </trans-unit>
        <trans-unit id="a3c787e4dc597388705025c5f142ebed903b4b14" translate="yes" xml:space="preserve">
          <source>You must require the special package called &lt;code&gt;composer-plugin-api&lt;/code&gt; to define which Plugin API versions your plugin is compatible with. Requiring this package doesn't actually include any extra dependencies, it only specifies which version of the plugin API to use.</source>
          <target state="translated">您必须需要一个名为 &lt;code&gt;composer-plugin-api&lt;/code&gt; 的特殊软件包，才能定义您的插件兼容的Plugin API版本。要求此软件包实际上并不包含任何其他依赖项，它仅指定要使用的插件API版本。</target>
        </trans-unit>
        <trans-unit id="3ef7fc7ea241fefdca20a7c63cce2e8af5f6f7e6" translate="yes" xml:space="preserve">
          <source>You should always run the &lt;code&gt;validate&lt;/code&gt; command before you commit your &lt;code&gt;composer.json&lt;/code&gt; file, and before you tag a release. It will check if your &lt;code&gt;composer.json&lt;/code&gt; is valid.</source>
          <target state="translated">在提交 &lt;code&gt;composer.json&lt;/code&gt; 文件之前和标记发行版之前，应始终运行 &lt;code&gt;validate&lt;/code&gt; 命令。它将检查您的 &lt;code&gt;composer.json&lt;/code&gt; 是否有效。</target>
        </trans-unit>
        <trans-unit id="f102019ddc564e89c1f8d9dca4be6136cc8d4e2d" translate="yes" xml:space="preserve">
          <source>You simply visit &lt;a href=&quot;https://packagist.org&quot;&gt;Packagist&lt;/a&gt; and hit the &quot;Submit&quot; button. This will prompt you to sign up if you haven't already, and then allows you to submit the URL to your VCS repository, at which point Packagist will start crawling it. Once it is done, your package will be available to anyone!</source>
          <target state="translated">您只需访问&lt;a href=&quot;https://packagist.org&quot;&gt;Packagist&lt;/a&gt;并点击&amp;ldquo;提交&amp;rdquo;按钮。如果您尚未注册，这将提示您进行注册，然后允许您将URL提交到VCS存储库，此时Packagist将开始对其进行爬网。完成后，任何人都可以使用您的软件包！</target>
        </trans-unit>
        <trans-unit id="a7531eb5a58f1d76d702e3a93dd7e3c7e5107882" translate="yes" xml:space="preserve">
          <source>You visit &lt;a href=&quot;https://packagist.org&quot;&gt;Packagist&lt;/a&gt; and hit the &quot;Submit&quot; button. This will prompt you to sign up if you haven't already, and then allows you to submit the URL to your VCS repository, at which point Packagist will start crawling it. Once it is done, your package will be available to anyone!</source>
          <target state="translated">您访问&lt;a href=&quot;https://packagist.org&quot;&gt;Packagist，&lt;/a&gt;然后点击&amp;ldquo;提交&amp;rdquo;按钮。如果尚未注册，这将提示您进行注册，然后允许您将URL提交到VCS存储库，此时Packagist将开始对其进行爬网。完成后，您的包裹将对任何人都可用！</target>
        </trans-unit>
        <trans-unit id="52d92c0ecd016ee768f5b25dbb982bfd3c9a58c6" translate="yes" xml:space="preserve">
          <source>You've already learned how to use the command-line interface to do some things. This chapter documents all the available commands.</source>
          <target state="translated">你已经学会了如何使用命令行界面来做一些事情。本章将介绍所有可用的命令。</target>
        </trans-unit>
        <trans-unit id="368c3339984e0203b3d641afa4d0d17024ae44e4" translate="yes" xml:space="preserve">
          <source>Your &lt;a href=&quot;handling-private-packages-with-satis.md&quot;&gt;Satis or Toran Proxy&lt;/a&gt; server could be secured with http basic authentication. In order to allow your project to have access to these packages you will have to tell composer how to authenticate with your credentials.</source>
          <target state="translated">您的&lt;a href=&quot;handling-private-packages-with-satis.md&quot;&gt;Satis或Toran代理&lt;/a&gt;服务器可以使用http基本身份验证来保护。为了使您的项目能够访问这些软件包，您必须告诉作曲家如何使用您的凭据进行身份验证。</target>
        </trans-unit>
        <trans-unit id="dfc2b2f97da2fd8061fd2a71ef3ad9e704949477" translate="yes" xml:space="preserve">
          <source>Your &lt;a href=&quot;handling-private-packages.md&quot;&gt;private package server&lt;/a&gt; or version control system is probably secured with one or more authentication options. In order to allow your project to have access to these packages and repositories you will have to tell Composer how to authenticate with the server that hosts them.</source>
          <target state="translated">您的&lt;a href=&quot;handling-private-packages.md&quot;&gt;私有软件包服务器&lt;/a&gt;或版本控制系统可能已通过一个或多个身份验证选项进行了保护。为了使您的项目能够访问这些软件包和存储库，您必须告诉Composer如何通过托管它们的服务器进行身份验证。</target>
        </trans-unit>
        <trans-unit id="b17763c432428c5f9772ad0c796c1b29a3367780" translate="yes" xml:space="preserve">
          <source>Zip archives are not unpacked correctly.</source>
          <target state="translated">压缩文件没有正确解压。</target>
        </trans-unit>
        <trans-unit id="8f53ed0fec22d3282d0e70911e563402b8429cfc" translate="yes" xml:space="preserve">
          <source>abandoned</source>
          <target state="translated">abandoned</target>
        </trans-unit>
        <trans-unit id="9ae582b23b531c1886981c18fb9886e3c8a6f9bd" translate="yes" xml:space="preserve">
          <source>apcu-autoloader</source>
          <target state="translated">apcu-autoloader</target>
        </trans-unit>
        <trans-unit id="ebfb55f4432b592119a10592e4f26272cc72359e" translate="yes" xml:space="preserve">
          <source>archive</source>
          <target state="translated">archive</target>
        </trans-unit>
        <trans-unit id="055c81090cbea5d67cd6ed4abeb36df5a2f3bc7a" translate="yes" xml:space="preserve">
          <source>archive-dir</source>
          <target state="translated">archive-dir</target>
        </trans-unit>
        <trans-unit id="8fe2bd45f8242e0d091a36cc6ad7a46e16c0d1bb" translate="yes" xml:space="preserve">
          <source>archive-format</source>
          <target state="translated">archive-format</target>
        </trans-unit>
        <trans-unit id="90e3fd0f012c27834ea5ef3cf1dfef96e9190b40" translate="yes" xml:space="preserve">
          <source>authors</source>
          <target state="translated">authors</target>
        </trans-unit>
        <trans-unit id="4f25d09afc26355e099f60888cb6afb436cd27bf" translate="yes" xml:space="preserve">
          <source>autoload</source>
          <target state="translated">autoload</target>
        </trans-unit>
        <trans-unit id="5d86fcc7bef79bafe0a21734858458705a5f9693" translate="yes" xml:space="preserve">
          <source>autoload-dev</source>
          <target state="translated">autoload-dev</target>
        </trans-unit>
        <trans-unit id="85242461ce1877f7114296183a7e473e8d273561" translate="yes" xml:space="preserve">
          <source>autoload-dev (&lt;a href=&quot;04-schema.md#root-package&quot;&gt;root-only&lt;/a&gt;)</source>
          <target state="translated">autoload-dev（&lt;a href=&quot;04-schema.md#root-package&quot;&gt;仅root用户&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="327222f10160e1bb81490948a2dd1baea047f1e0" translate="yes" xml:space="preserve">
          <source>autoloader-suffix</source>
          <target state="translated">autoloader-suffix</target>
        </trans-unit>
        <trans-unit id="ddb2c93ebcf6098f6ccb08807ed66e02934248a5" translate="yes" xml:space="preserve">
          <source>bearer</source>
          <target state="translated">bearer</target>
        </trans-unit>
        <trans-unit id="9a5d56716d566997fa290054d161af96305aff9a" translate="yes" xml:space="preserve">
          <source>bin</source>
          <target state="translated">bin</target>
        </trans-unit>
        <trans-unit id="93d983b53c62ff28a837c77b44a432534d802bcd" translate="yes" xml:space="preserve">
          <source>bin-compat</source>
          <target state="translated">bin-compat</target>
        </trans-unit>
        <trans-unit id="2b4429c6887bb899ef8aad3f48b55459c5b98af8" translate="yes" xml:space="preserve">
          <source>bin-dir</source>
          <target state="translated">bin-dir</target>
        </trans-unit>
        <trans-unit id="4b7aa088aef6f332d19a788cfb842570aa91c4a4" translate="yes" xml:space="preserve">
          <source>bitbucket-oauth</source>
          <target state="translated">bitbucket-oauth</target>
        </trans-unit>
        <trans-unit id="99a8b99a0de81e36e0b13111a9714c176332cb4b" translate="yes" xml:space="preserve">
          <source>browse / home</source>
          <target state="translated">浏览/首页</target>
        </trans-unit>
        <trans-unit id="8cedbd496e14ca16ade865c5c11677a9f7c27aef" translate="yes" xml:space="preserve">
          <source>cache-dir</source>
          <target state="translated">cache-dir</target>
        </trans-unit>
        <trans-unit id="3b6b533d2fd6fb07d10ed34695c805048c0d178f" translate="yes" xml:space="preserve">
          <source>cache-files-dir</source>
          <target state="translated">cache-files-dir</target>
        </trans-unit>
        <trans-unit id="9ed4ad56554221c2221d977b39973ef3597174c9" translate="yes" xml:space="preserve">
          <source>cache-files-maxsize</source>
          <target state="translated">cache-files-maxsize</target>
        </trans-unit>
        <trans-unit id="4481668f2f5aa14c06d4bc568dd437ee980c627d" translate="yes" xml:space="preserve">
          <source>cache-files-ttl</source>
          <target state="translated">cache-files-ttl</target>
        </trans-unit>
        <trans-unit id="6022dad53798bf5020be2ef697f0f906a40ee021" translate="yes" xml:space="preserve">
          <source>cache-read-only</source>
          <target state="translated">cache-read-only</target>
        </trans-unit>
        <trans-unit id="e0d5c77623a655b3050a7e8c6328d7f37528948f" translate="yes" xml:space="preserve">
          <source>cache-repo-dir</source>
          <target state="translated">cache-repo-dir</target>
        </trans-unit>
        <trans-unit id="7139f397cc749ba8edccdd098845c384ec690793" translate="yes" xml:space="preserve">
          <source>cache-vcs-dir</source>
          <target state="translated">cache-vcs-dir</target>
        </trans-unit>
        <trans-unit id="cbaf9cdda9b4ba6fc8fc74690f3d2a220a16b3c0" translate="yes" xml:space="preserve">
          <source>cafile</source>
          <target state="translated">cafile</target>
        </trans-unit>
        <trans-unit id="37236002e4f003af10f89f8d300f323e60d1b129" translate="yes" xml:space="preserve">
          <source>calls &lt;code&gt;composer dump-autoload&lt;/code&gt;.</source>
          <target state="translated">调用 &lt;code&gt;composer dump-autoload&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cf9f02fe07761d37cb2db74fef458c86cdf16fcb" translate="yes" xml:space="preserve">
          <source>capath</source>
          <target state="translated">capath</target>
        </trans-unit>
        <trans-unit id="018f840a6ce1cddc2366b9a7fe2ab131d2190bb4" translate="yes" xml:space="preserve">
          <source>check-platform-reqs</source>
          <target state="translated">check-platform-reqs</target>
        </trans-unit>
        <trans-unit id="8d767bf5b72373d12f0efd4406677e9ed076f592" translate="yes" xml:space="preserve">
          <source>class</source>
          <target state="translated">class</target>
        </trans-unit>
        <trans-unit id="70118a58a1cdb739363cbff6d862e5268db7e4ba" translate="yes" xml:space="preserve">
          <source>classmap-authoritative</source>
          <target state="translated">classmap-authoritative</target>
        </trans-unit>
        <trans-unit id="1bd6fa8543b8c66356480ecf1d62f0c9d743c473" translate="yes" xml:space="preserve">
          <source>clear-cache (clearcache)</source>
          <target state="translated">清除缓存(clear-cache)</target>
        </trans-unit>
        <trans-unit id="9657e15a3112bf134b8be256f74a544a79df0759" translate="yes" xml:space="preserve">
          <source>clear-cache / clearcache / cc</source>
          <target state="translated">清除缓存/清除缓存/cc</target>
        </trans-unit>
        <trans-unit id="bbd287635462406836fa80e698517ab21a876004" translate="yes" xml:space="preserve">
          <source>command: &lt;a href=&quot;https://getcomposer.org/apidoc/master/Composer/Plugin/CommandEvent.html&quot;&gt;&lt;code&gt;Composer\Plugin\CommandEvent&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">命令：&lt;a href=&quot;https://getcomposer.org/apidoc/master/Composer/Plugin/CommandEvent.html&quot;&gt; &lt;code&gt;Composer\Plugin\CommandEvent&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d9a62aae0056fc7491eda4691723ce20fac43c34" translate="yes" xml:space="preserve">
          <source>composer-runtime-api 2.0 introduced a new &lt;code&gt;Composer\InstalledVersions&lt;/code&gt; class which offers a few static methods to inspect which versions are currently installed. This is automatically available to your code as long as you include the Composer autoloader.</source>
          <target state="translated">composer-runtime-api 2.0引入了新的 &lt;code&gt;Composer\InstalledVersions&lt;/code&gt; 类，该类提供了一些静态方法来检查当前安装的版本。只要您包含Composer自动加载器，此代码就会自动提供给您的代码。</target>
        </trans-unit>
        <trans-unit id="c4bea2f8f0027eefb70a0c9285e5269b574b57c9" translate="yes" xml:space="preserve">
          <source>composer-runtime-api 2.0 introduced a new &lt;code&gt;vendor/composer/platform_check.php&lt;/code&gt; file, which is included automatically when you include the Composer autoloader.</source>
          <target state="translated">composer-runtime-api 2.0引入了一个新的 &lt;code&gt;vendor/composer/platform_check.php&lt;/code&gt; 文件，当您包含Composer自动加载器时会自动包含该文件。</target>
        </trans-unit>
        <trans-unit id="3957b91a0d8450cea0115cfd5af69eac90d75897" translate="yes" xml:space="preserve">
          <source>composer.json</source>
          <target state="translated">composer.json</target>
        </trans-unit>
        <trans-unit id="8f95aab906ec3991aef7aee55e388b8938bfe915" translate="yes" xml:space="preserve">
          <source>composer.json:</source>
          <target state="translated">composer.json:</target>
        </trans-unit>
        <trans-unit id="dfba7aade0868074c2861c98e2a9a92f3178a51b" translate="yes" xml:space="preserve">
          <source>config</source>
          <target state="translated">config</target>
        </trans-unit>
        <trans-unit id="a91fe9d1f33be78ac6ab16880c87955ca048ceca" translate="yes" xml:space="preserve">
          <source>config (&lt;a href=&quot;04-schema.md#root-package&quot;&gt;root-only&lt;/a&gt;)</source>
          <target state="translated">config（&lt;a href=&quot;04-schema.md#root-package&quot;&gt;仅root用户&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="ae214513a0d21125291c9566dfdb0fcb1fdd1d2b" translate="yes" xml:space="preserve">
          <source>conflict</source>
          <target state="translated">conflict</target>
        </trans-unit>
        <trans-unit id="7c5d7a31e7a5acd7ea4b8a47e52f12993497fd45" translate="yes" xml:space="preserve">
          <source>create-project</source>
          <target state="translated">create-project</target>
        </trans-unit>
        <trans-unit id="13a702251e3b61fcaa92cccf4856a8a570aa6f1b" translate="yes" xml:space="preserve">
          <source>custom header</source>
          <target state="translated">自定义页眉</target>
        </trans-unit>
        <trans-unit id="547ec7fc0cc222d522293be828612dcdcdd49c47" translate="yes" xml:space="preserve">
          <source>data-dir</source>
          <target state="translated">data-dir</target>
        </trans-unit>
        <trans-unit id="6d613a1ee01eec4c0f8ca66df0db71dca0c6e1cf" translate="yes" xml:space="preserve">
          <source>database</source>
          <target state="translated">database</target>
        </trans-unit>
        <trans-unit id="c24091201bc1fd018075abbd0d09f84221e3c74d" translate="yes" xml:space="preserve">
          <source>depends (why)</source>
          <target state="translated">要看</target>
        </trans-unit>
        <trans-unit id="cb329146a0dd0d566b0628744d67936558741ffa" translate="yes" xml:space="preserve">
          <source>description</source>
          <target state="translated">description</target>
        </trans-unit>
        <trans-unit id="77e720c8ee04722d29f0377684b9290260227c50" translate="yes" xml:space="preserve">
          <source>diagnose</source>
          <target state="translated">diagnose</target>
        </trans-unit>
        <trans-unit id="0323d8a2ecccc5952bb87bf6eb1cdce3f95f437c" translate="yes" xml:space="preserve">
          <source>disable it for all commands using the config key &lt;code&gt;process-timeout&lt;/code&gt;,</source>
          <target state="translated">使用config键 &lt;code&gt;process-timeout&lt;/code&gt; 对所有命令禁用它，</target>
        </trans-unit>
        <trans-unit id="30360370a8ceed6d302be3738394d5d65a38ef86" translate="yes" xml:space="preserve">
          <source>disable it for the current or future invocations of composer using the environment variable &lt;code&gt;COMPOSER_PROCESS_TIMEOUT&lt;/code&gt;,</source>
          <target state="translated">使用环境变量 &lt;code&gt;COMPOSER_PROCESS_TIMEOUT&lt;/code&gt; 为当前或将来的作曲家调用禁用它，</target>
        </trans-unit>
        <trans-unit id="835dca54c2d0bc785576623bc04e80192b1b03cd" translate="yes" xml:space="preserve">
          <source>disable-tls</source>
          <target state="translated">disable-tls</target>
        </trans-unit>
        <trans-unit id="7a079ff91226ca5573d093a59a116c8a1b21e961" translate="yes" xml:space="preserve">
          <source>discard-changes</source>
          <target state="translated">discard-changes</target>
        </trans-unit>
        <trans-unit id="8de30cd0d8b805c6ce7d572ab55e95c62835bcf7" translate="yes" xml:space="preserve">
          <source>dist or source</source>
          <target state="translated">源头</target>
        </trans-unit>
        <trans-unit id="26e52103685e455fa9f1de2ed45e2e3c9c51e67c" translate="yes" xml:space="preserve">
          <source>dump-autoload (dumpautoload)</source>
          <target state="translated">转载-自动加载</target>
        </trans-unit>
        <trans-unit id="82d50d9042decb175894924272dd3b5a14cd3716" translate="yes" xml:space="preserve">
          <source>events</source>
          <target state="translated">events</target>
        </trans-unit>
        <trans-unit id="be62562725d30894d1641b11d5106adde66f0d79" translate="yes" xml:space="preserve">
          <source>exec</source>
          <target state="translated">exec</target>
        </trans-unit>
        <trans-unit id="b43c4b82570e182eb1c74072896167113d2c7345" translate="yes" xml:space="preserve">
          <source>extra</source>
          <target state="translated">extra</target>
        </trans-unit>
        <trans-unit id="4e0326bd72804f4980588cdf39b564b87ac9d9fd" translate="yes" xml:space="preserve">
          <source>for a specific invocation using the &lt;code&gt;--timeout&lt;/code&gt; flag of the &lt;code&gt;run-script&lt;/code&gt; command,</source>
          <target state="translated">对于使用 &lt;code&gt;run-script&lt;/code&gt; 命令的 &lt;code&gt;--timeout&lt;/code&gt; 标志的特定调用，</target>
        </trans-unit>
        <trans-unit id="e2d13ab78250e4a61b0a8f46c8cec23d265c3aa7" translate="yes" xml:space="preserve">
          <source>fund</source>
          <target state="translated">fund</target>
        </trans-unit>
        <trans-unit id="7f30b117b3d5029c23758a1ad02426f013163810" translate="yes" xml:space="preserve">
          <source>funding</source>
          <target state="translated">funding</target>
        </trans-unit>
        <trans-unit id="10d809ca7d757eb589c63fb32ca7d6e18a1cdda6" translate="yes" xml:space="preserve">
          <source>github-domains</source>
          <target state="translated">github-domains</target>
        </trans-unit>
        <trans-unit id="93be1ea6d8d97b1d49b836552dd82fc243330485" translate="yes" xml:space="preserve">
          <source>github-expose-hostname</source>
          <target state="translated">github-expose-hostname</target>
        </trans-unit>
        <trans-unit id="240f1e0db9e6aa64cf67b447f223eb951e1b56fa" translate="yes" xml:space="preserve">
          <source>github-oauth</source>
          <target state="translated">github-oauth</target>
        </trans-unit>
        <trans-unit id="51b514d92aeb757b44bd4e12b64d9c9c665692f5" translate="yes" xml:space="preserve">
          <source>github-protocols</source>
          <target state="translated">github-protocols</target>
        </trans-unit>
        <trans-unit id="99893843ef2e5c31a92b8d0a331beda109845774" translate="yes" xml:space="preserve">
          <source>gitlab-domains</source>
          <target state="translated">gitlab-domains</target>
        </trans-unit>
        <trans-unit id="0f20cc7bda31d9862bb4ed1108fcf489f8d935f4" translate="yes" xml:space="preserve">
          <source>gitlab-oauth</source>
          <target state="translated">gitlab-oauth</target>
        </trans-unit>
        <trans-unit id="ae95fb9318ac599e97a7fe080501ec43c70d8ac4" translate="yes" xml:space="preserve">
          <source>gitlab-token</source>
          <target state="translated">gitlab-token</target>
        </trans-unit>
        <trans-unit id="9027cc5a2c1321de60a2d71ccde6229d1152d6d3" translate="yes" xml:space="preserve">
          <source>global</source>
          <target state="translated">global</target>
        </trans-unit>
        <trans-unit id="92005ecf3788faea8346a7919fba0232188561ab" translate="yes" xml:space="preserve">
          <source>help</source>
          <target state="translated">help</target>
        </trans-unit>
        <trans-unit id="568be0fa2023d1a447e7bd150dda7068ece26898" translate="yes" xml:space="preserve">
          <source>homepage</source>
          <target state="translated">homepage</target>
        </trans-unit>
        <trans-unit id="b7fc6f6ebfb1800b292ce4e9c3a939c315741403" translate="yes" xml:space="preserve">
          <source>htaccess-protect</source>
          <target state="translated">htaccess-protect</target>
        </trans-unit>
        <trans-unit id="1f5c1190f82d07cfa4b34a72f44169a315284ff7" translate="yes" xml:space="preserve">
          <source>http-basic</source>
          <target state="translated">http-basic</target>
        </trans-unit>
        <trans-unit id="01b09fab98ba0a18dbfbc9091843663f4907f962" translate="yes" xml:space="preserve">
          <source>http_proxy or HTTP_PROXY</source>
          <target state="translated">http_proxy或HTTP_PROXY。</target>
        </trans-unit>
        <trans-unit id="934f9d916621b15ed7c4e99da5975c5f8461bf42" translate="yes" xml:space="preserve">
          <source>igorw/event-source</source>
          <target state="translated">igorw/event-source</target>
        </trans-unit>
        <trans-unit id="ee3300ddaa6621b0638a0e528a0677ff44f88b1d" translate="yes" xml:space="preserve">
          <source>include-path</source>
          <target state="translated">include-path</target>
        </trans-unit>
        <trans-unit id="fd62812fbd9ec4c7f99aa4f6253fead2388eb238" translate="yes" xml:space="preserve">
          <source>init</source>
          <target state="translated">init</target>
        </trans-unit>
        <trans-unit id="d16df61f06b493e5a4445e4f3667bbb6f89e8b3f" translate="yes" xml:space="preserve">
          <source>init: &lt;a href=&quot;https://getcomposer.org/apidoc/master/Composer/EventDispatcher/Event.html&quot;&gt;&lt;code&gt;Composer\EventDispatcher\Event&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">初始化：&lt;a href=&quot;https://getcomposer.org/apidoc/master/Composer/EventDispatcher/Event.html&quot;&gt; &lt;code&gt;Composer\EventDispatcher\Event&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c17801265656bbca87203f4be43a089a06524ed4" translate="yes" xml:space="preserve">
          <source>install / i</source>
          <target state="translated">安装/i</target>
        </trans-unit>
        <trans-unit id="88fc09e54b17679b0028556344b50c9fe169bdb5" translate="yes" xml:space="preserve">
          <source>keywords</source>
          <target state="translated">keywords</target>
        </trans-unit>
        <trans-unit id="23457129b871d690a3b4d86a51ded0c27ba29a9c" translate="yes" xml:space="preserve">
          <source>license</source>
          <target state="translated">license</target>
        </trans-unit>
        <trans-unit id="a39ea9c72a98de10375b0a35c2313971d6650fef" translate="yes" xml:space="preserve">
          <source>licenses</source>
          <target state="translated">licenses</target>
        </trans-unit>
        <trans-unit id="e117797422d35ce52f036963c7e9603e9955b5c7" translate="yes" xml:space="preserve">
          <source>lock</source>
          <target state="translated">lock</target>
        </trans-unit>
        <trans-unit id="42f7b07db92a254d70b2763520ccb302387e6d6e" translate="yes" xml:space="preserve">
          <source>logging</source>
          <target state="translated">logging</target>
        </trans-unit>
        <trans-unit id="c767fb4fa84edd9798347da2310e0dcb0cd0f193" translate="yes" xml:space="preserve">
          <source>minimum-stability</source>
          <target state="translated">minimum-stability</target>
        </trans-unit>
        <trans-unit id="c10ee804f3232c93d60adf95dd9590ea5c5f599d" translate="yes" xml:space="preserve">
          <source>minimum-stability (&lt;a href=&quot;04-schema.md#root-package&quot;&gt;root-only&lt;/a&gt;)</source>
          <target state="translated">最小稳定性（&lt;a href=&quot;04-schema.md#root-package&quot;&gt;仅root用户&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="f2ddd99b797a2496337b5413b08e00153cd8c85a" translate="yes" xml:space="preserve">
          <source>monolog/monolog</source>
          <target state="translated">monolog/monolog</target>
        </trans-unit>
        <trans-unit id="6ae999552a0d2dca14d62e2bc8b764d377b1dd6c" translate="yes" xml:space="preserve">
          <source>name</source>
          <target state="translated">name</target>
        </trans-unit>
        <trans-unit id="fd1286353570c5703799ba76999323b7c7447b06" translate="yes" xml:space="preserve">
          <source>no</source>
          <target state="translated">no</target>
        </trans-unit>
        <trans-unit id="fc074fd662296d860a152a292b4d7b6b312e8ce8" translate="yes" xml:space="preserve">
          <source>no_proxy or NO_PROXY</source>
          <target state="translated">no_proxy或NO_PROXY。</target>
        </trans-unit>
        <trans-unit id="bf6abd628c428e1da9dfce49bbba13496c0471e1" translate="yes" xml:space="preserve">
          <source>non-feature-branches</source>
          <target state="translated">non-feature-branches</target>
        </trans-unit>
        <trans-unit id="b15cd836785e50729f71533a80322f43daad079b" translate="yes" xml:space="preserve">
          <source>notify-batch</source>
          <target state="translated">notify-batch</target>
        </trans-unit>
        <trans-unit id="eaa9a3f45f81a52135877c3bd595d503a00bdcf5" translate="yes" xml:space="preserve">
          <source>notify-on-install</source>
          <target state="translated">notify-on-install</target>
        </trans-unit>
        <trans-unit id="789ac37f7e1ffba3c8b73f8c8318762a9ded2b3a" translate="yes" xml:space="preserve">
          <source>optimize-autoloader</source>
          <target state="translated">optimize-autoloader</target>
        </trans-unit>
        <trans-unit id="b85a5176d55923c3a5c736b9766e15c5b7392237" translate="yes" xml:space="preserve">
          <source>outdated</source>
          <target state="translated">outdated</target>
        </trans-unit>
        <trans-unit id="d8ae088aee969371bf4ed994e9106b5d3e799c35" translate="yes" xml:space="preserve">
          <source>packages</source>
          <target state="translated">packages</target>
        </trans-unit>
        <trans-unit id="1a421f6a0cb3266219ba462e3e3674b69b6dd95f" translate="yes" xml:space="preserve">
          <source>phpDocumentor features Templates that need to be installed outside of the default /vendor folder structure. As such they have chosen to adopt the &lt;code&gt;phpdocumentor-template&lt;/code&gt;&lt;a href=&quot;../04-schema.md#type&quot;&gt;type&lt;/a&gt; and create a plugin providing the Custom Installer to send these templates to the correct folder.</source>
          <target state="translated">phpDocumentor功能需要在默认/ vendor文件夹结构之外安装的模板。因此，他们选择采用 &lt;code&gt;phpdocumentor-template&lt;/code&gt; &lt;a href=&quot;../04-schema.md#type&quot;&gt;类型&lt;/a&gt;并创建一个插件，以提供Custom Installer来将这些模板发送到正确的文件夹。</target>
        </trans-unit>
        <trans-unit id="3c72abbe626f27d174d80fc434b851cce7bde6d3" translate="yes" xml:space="preserve">
          <source>platform</source>
          <target state="translated">platform</target>
        </trans-unit>
        <trans-unit id="c723aaa0af24c3f260d09454e5dfc220852ca6a1" translate="yes" xml:space="preserve">
          <source>platform-check</source>
          <target state="translated">platform-check</target>
        </trans-unit>
        <trans-unit id="e5ef98a6322bd9aa7b394736681d180daca6bc36" translate="yes" xml:space="preserve">
          <source>plugin-modifies-downloads</source>
          <target state="translated">plugin-modifies-downloads</target>
        </trans-unit>
        <trans-unit id="5725848eeb332ef9f1d05ba3f1114d3026d6b3c6" translate="yes" xml:space="preserve">
          <source>post-file-download: &lt;a href=&quot;https://getcomposer.org/apidoc/master/Composer/Plugin/PostFileDownloadEvent.html&quot;&gt;&lt;code&gt;Composer\Plugin\PostFileDownloadEvent&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">文件下载后：&lt;a href=&quot;https://getcomposer.org/apidoc/master/Composer/Plugin/PostFileDownloadEvent.html&quot;&gt; &lt;code&gt;Composer\Plugin\PostFileDownloadEvent&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="91744c5e0ba404bce1bc3ed8b0be3ab1c518fbd3" translate="yes" xml:space="preserve">
          <source>pre-file-download: &lt;a href=&quot;https://getcomposer.org/apidoc/master/Composer/Plugin/PreFileDownloadEvent.html&quot;&gt;&lt;code&gt;Composer\Plugin\PreFileDownloadEvent&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">文件下载前：&lt;a href=&quot;https://getcomposer.org/apidoc/master/Composer/Plugin/PreFileDownloadEvent.html&quot;&gt; &lt;code&gt;Composer\Plugin\PreFileDownloadEvent&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="473e34a40b0652558a7fb8f0df1beb0e67394b6b" translate="yes" xml:space="preserve">
          <source>prefer-stable</source>
          <target state="translated">prefer-stable</target>
        </trans-unit>
        <trans-unit id="564b0d4e5c910c11ec4a35aa8d5bd214fde5433b" translate="yes" xml:space="preserve">
          <source>prefer-stable (&lt;a href=&quot;04-schema.md#root-package&quot;&gt;root-only&lt;/a&gt;)</source>
          <target state="translated">首选稳定（&lt;a href=&quot;04-schema.md#root-package&quot;&gt;仅root&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="6513ee15882452ffb58bacbff36ed8d5723e7512" translate="yes" xml:space="preserve">
          <source>preferred-install</source>
          <target state="translated">preferred-install</target>
        </trans-unit>
        <trans-unit id="e8d7fd617b9d58831b69cea13695eb1c21519429" translate="yes" xml:space="preserve">
          <source>prefix-url</source>
          <target state="translated">prefix-url</target>
        </trans-unit>
        <trans-unit id="6b6ad03a3d1698f720295f07865869facecf773b" translate="yes" xml:space="preserve">
          <source>prepend-autoloader</source>
          <target state="translated">prepend-autoloader</target>
        </trans-unit>
        <trans-unit id="959f7c379f50b312a3e08b4bc677d39971fe3881" translate="yes" xml:space="preserve">
          <source>proc_open(): failed to open stream errors (Windows)</source>
          <target state="translated">proc_open():打开流失败错误(Windows)</target>
        </trans-unit>
        <trans-unit id="71a15af606715185b3c076b1de3a0f2392d64da5" translate="yes" xml:space="preserve">
          <source>proc_open(): fork failed errors</source>
          <target state="translated">proc_open():fork失败的错误。</target>
        </trans-unit>
        <trans-unit id="6711099b0aec6f81f966f94566884241b2409db5" translate="yes" xml:space="preserve">
          <source>process-timeout</source>
          <target state="translated">process-timeout</target>
        </trans-unit>
        <trans-unit id="1d02d01463f1c3c8ad149c2ded60c71233199d86" translate="yes" xml:space="preserve">
          <source>prohibits (why-not)</source>
          <target state="translated">禁止</target>
        </trans-unit>
        <trans-unit id="4ab69d1f449d0c975c87c5a03c3f2c332a210aaa" translate="yes" xml:space="preserve">
          <source>provide</source>
          <target state="translated">provide</target>
        </trans-unit>
        <trans-unit id="55b73469d9cdff569e2d9aa9ac33815bdeb7ff4c" translate="yes" xml:space="preserve">
          <source>provider-includes and providers-url</source>
          <target state="translated">提供者-包含和提供者-url</target>
        </trans-unit>
        <trans-unit id="f78a71af8bbf8cc2f6f313549d4da14bd3771359" translate="yes" xml:space="preserve">
          <source>readme</source>
          <target state="translated">readme</target>
        </trans-unit>
        <trans-unit id="b840fc02d524045429941cc15f59e41cb7be6c52" translate="yes" xml:space="preserve">
          <source>redis</source>
          <target state="translated">redis</target>
        </trans-unit>
        <trans-unit id="db99845855b2ecbfecca9a095062b96c3e27703f" translate="yes" xml:space="preserve">
          <source>remove</source>
          <target state="translated">remove</target>
        </trans-unit>
        <trans-unit id="3cacc7bfac0a382c669a884c953d0401a689785d" translate="yes" xml:space="preserve">
          <source>replace</source>
          <target state="translated">replace</target>
        </trans-unit>
        <trans-unit id="ddbdf83535a3f4e3dcfd5ad43c56a0adcbb4a9b1" translate="yes" xml:space="preserve">
          <source>repositories</source>
          <target state="translated">repositories</target>
        </trans-unit>
        <trans-unit id="a5897fe3a13ff0d676f965e88fabd9840e3e1641" translate="yes" xml:space="preserve">
          <source>repositories (&lt;a href=&quot;04-schema.md#root-package&quot;&gt;root-only&lt;/a&gt;)</source>
          <target state="translated">存储库（&lt;a href=&quot;04-schema.md#root-package&quot;&gt;仅root用户&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="623e76c36aa2a886542011e28412cc761d7ceb01" translate="yes" xml:space="preserve">
          <source>require</source>
          <target state="translated">require</target>
        </trans-unit>
        <trans-unit id="ee08b76b89844c734f12d32265dedf7e565f4532" translate="yes" xml:space="preserve">
          <source>require-dev (&lt;a href=&quot;04-schema.md#root-package&quot;&gt;root-only&lt;/a&gt;)</source>
          <target state="translated">require-dev（&lt;a href=&quot;04-schema.md#root-package&quot;&gt;仅root用户&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="e7383e16bf1ba8f04f8e6f0a50106eb692433ebe" translate="yes" xml:space="preserve">
          <source>run-script</source>
          <target state="translated">run-script</target>
        </trans-unit>
        <trans-unit id="16728d18790deb58b3b8c1df74f06e536b532695" translate="yes" xml:space="preserve">
          <source>scripts</source>
          <target state="translated">scripts</target>
        </trans-unit>
        <trans-unit id="73c546e03e8d9cbf67ef134ea87bfe1ba28183ee" translate="yes" xml:space="preserve">
          <source>scripts (&lt;a href=&quot;04-schema.md#root-package&quot;&gt;root-only&lt;/a&gt;)</source>
          <target state="translated">脚本（&lt;a href=&quot;04-schema.md#root-package&quot;&gt;仅root用户&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="3559d7accf00360971961ca18989adc0614089c0" translate="yes" xml:space="preserve">
          <source>search</source>
          <target state="translated">search</target>
        </trans-unit>
        <trans-unit id="82d17e753f91d3265521b6398523031c0151b29b" translate="yes" xml:space="preserve">
          <source>secure-http</source>
          <target state="translated">secure-http</target>
        </trans-unit>
        <trans-unit id="a82db627112776a7fd62632195cf32a9a0f07474" translate="yes" xml:space="preserve">
          <source>self-update (selfupdate)</source>
          <target state="translated">自我更新 (self-update)</target>
        </trans-unit>
        <trans-unit id="9fb29051f2217270a7b253a39f820310d85a78f0" translate="yes" xml:space="preserve">
          <source>show</source>
          <target state="translated">show</target>
        </trans-unit>
        <trans-unit id="433ecc2121668b2118424ea378bd0a61d2910c01" translate="yes" xml:space="preserve">
          <source>sort-packages</source>
          <target state="translated">sort-packages</target>
        </trans-unit>
        <trans-unit id="48a3661d846478fa991a825ebd10b78671444b5b" translate="yes" xml:space="preserve">
          <source>status</source>
          <target state="translated">status</target>
        </trans-unit>
        <trans-unit id="eb6fe53aa9be92a7647afcce3c5b531a63e1ba0d" translate="yes" xml:space="preserve">
          <source>store-auths</source>
          <target state="translated">store-auths</target>
        </trans-unit>
        <trans-unit id="2e3c643ac64dc53ab14a99ef3cb2e435752e196b" translate="yes" xml:space="preserve">
          <source>stream options</source>
          <target state="translated">流选项</target>
        </trans-unit>
        <trans-unit id="fd0a4950be7bdd9f8433220cd71f792adc9bacbe" translate="yes" xml:space="preserve">
          <source>suggest</source>
          <target state="translated">suggest</target>
        </trans-unit>
        <trans-unit id="3e829ab18fae1f2e02cebc9112af2ad19bb88b78" translate="yes" xml:space="preserve">
          <source>suggests</source>
          <target state="translated">suggests</target>
        </trans-unit>
        <trans-unit id="5bdcd3c0d4d24ae3e71b3b452a024c6324c7e4bb" translate="yes" xml:space="preserve">
          <source>support</source>
          <target state="translated">support</target>
        </trans-unit>
        <trans-unit id="f6cefe460cd3a4027fc0e073d346c46039fa16fc" translate="yes" xml:space="preserve">
          <source>target-dir</source>
          <target state="translated">target-dir</target>
        </trans-unit>
        <trans-unit id="12d2f36657fd573ff3c6c4e79a585fb94314777b" translate="yes" xml:space="preserve">
          <source>templating</source>
          <target state="translated">templating</target>
        </trans-unit>
        <trans-unit id="9602df2b84b8a3f13a3de1b8029067b58fea71ce" translate="yes" xml:space="preserve">
          <source>the &lt;a href=&quot;../04-schema.md#extra&quot;&gt;extra&lt;/a&gt; attribute must contain an element &lt;code&gt;class&lt;/code&gt; defining the class name of the plugin (including namespace). If a package contains multiple plugins this can be array of class names.</source>
          <target state="translated">所述&lt;a href=&quot;../04-schema.md#extra&quot;&gt;额外的&lt;/a&gt;属性必须包含的元素 &lt;code&gt;class&lt;/code&gt; 限定插件（包括命名空间）的类名。如果一个程序包包含多个插件，则可以是类名数组。</target>
        </trans-unit>
        <trans-unit id="9a43dbecf2a05530c720fe393365dfccfc117b03" translate="yes" xml:space="preserve">
          <source>the &lt;a href=&quot;../04-schema.md#type&quot;&gt;type&lt;/a&gt; attribute must be &lt;code&gt;composer-plugin&lt;/code&gt;.</source>
          <target state="translated">该&lt;a href=&quot;../04-schema.md#type&quot;&gt;类型&lt;/a&gt;属性必须是 &lt;code&gt;composer-plugin&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="00b638d9feda5f451b7e34767d86b4655ad7d2a1" translate="yes" xml:space="preserve">
          <source>the package file: composer.json</source>
          <target state="translated">包文件:composer.json</target>
        </trans-unit>
        <trans-unit id="714eea0f4c980736bde0065fe73f573487f08e3a" translate="yes" xml:space="preserve">
          <source>time</source>
          <target state="translated">time</target>
        </trans-unit>
        <trans-unit id="d0a3e7f81a9885e99049d1cae0336d269d5e47a9" translate="yes" xml:space="preserve">
          <source>type</source>
          <target state="translated">type</target>
        </trans-unit>
        <trans-unit id="4d8b74c810b03fe6071ccc079fb8099f73703e85" translate="yes" xml:space="preserve">
          <source>update / u</source>
          <target state="translated">更新/u</target>
        </trans-unit>
        <trans-unit id="bca7cf7060de3870242d6195d66a4a00ca1d5d0d" translate="yes" xml:space="preserve">
          <source>use-github-api</source>
          <target state="translated">use-github-api</target>
        </trans-unit>
        <trans-unit id="df73151de4c111e43b53c3b40ea694ad9d6099ef" translate="yes" xml:space="preserve">
          <source>use-include-path</source>
          <target state="translated">use-include-path</target>
        </trans-unit>
        <trans-unit id="00c485e3ecdfd52691bbf649a917e7b69a67d27d" translate="yes" xml:space="preserve">
          <source>using a static helper for specific scripts.</source>
          <target state="translated">为特定的脚本使用静态帮助程序。</target>
        </trans-unit>
        <trans-unit id="142e27c93a3712c33dafcf729bd2b0c0a590f46e" translate="yes" xml:space="preserve">
          <source>v2.0.4-p1</source>
          <target state="translated">v2.0.4-p1</target>
        </trans-unit>
        <trans-unit id="e204d28a2874f6123747650d3e4003d4357d75eb" translate="yes" xml:space="preserve">
          <source>validate</source>
          <target state="translated">validate</target>
        </trans-unit>
        <trans-unit id="101d465db1ef254ef87db52c31443088f5700194" translate="yes" xml:space="preserve">
          <source>vendor-dir</source>
          <target state="translated">vendor-dir</target>
        </trans-unit>
        <trans-unit id="c692273deb2772da307ffe37041fef77bf4baa97" translate="yes" xml:space="preserve">
          <source>version</source>
          <target state="translated">version</target>
        </trans-unit>
        <trans-unit id="fb360f9c09ac8c5edb2f18be5de4e80ea4c430d0" translate="yes" xml:space="preserve">
          <source>yes</source>
          <target state="translated">yes</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
