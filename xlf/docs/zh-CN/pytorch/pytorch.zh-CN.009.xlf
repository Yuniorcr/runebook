<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="pytorch">
    <body>
      <group id="pytorch">
        <trans-unit id="e639a53f131fc76fecc291100aefd605f12a0eda" translate="yes" xml:space="preserve">
          <source>\text{out}_{i} = \frac{1}{\sqrt{\text{input}_{i}}}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46ce5ca183590faeb94bd046c494af519bde768a" translate="yes" xml:space="preserve">
          <source>\text{out}_{i} = \frac{1}{\text{input}_{i}}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4427bc0696c242442c6213bd5a82d54aee1a2769" translate="yes" xml:space="preserve">
          <source>\text{out}_{i} = \left\lceil \text{input}_{i} \right\rceil = \left\lfloor \text{input}_{i} \right\rfloor + 1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15280a01ee3fbee59abcbcd2395fe2dc53197b84" translate="yes" xml:space="preserve">
          <source>\text{out}_{i} = \left\lfloor \text{input}_{i} \right\rfloor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8713f714ca9f011825a27f3a64b5103537d7c3a8" translate="yes" xml:space="preserve">
          <source>\text{out}_{i} = \log \Gamma(\text{input}_{i})</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f106314a05b463158c27ca8e8540a802938b4b7b" translate="yes" xml:space="preserve">
          <source>\text{out}_{i} = \operatorname{sgn}(\text{input}_{i})</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d66baddaec726fdba3a80fb59890298bae46f57" translate="yes" xml:space="preserve">
          <source>\text{out}_{i} = \sin(\text{input}_{i})</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2029dbca4086f039d8d89647025660d63e959250" translate="yes" xml:space="preserve">
          <source>\text{out}_{i} = \sin^{-1}(\text{input}_{i})</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29f2eee43262fe3393a73b473efb38b2970a7d4d" translate="yes" xml:space="preserve">
          <source>\text{out}_{i} = \sinh(\text{input}_{i})</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f9ac0337247d9d45d980c107144e23646dfd988" translate="yes" xml:space="preserve">
          <source>\text{out}_{i} = \sinh^{-1}(\text{input}_{i})</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a48b925f8709a2a6a8ef052050d18b589d5123a2" translate="yes" xml:space="preserve">
          <source>\text{out}_{i} = \sqrt{\text{input}_{i}^{2} + \text{other}_{i}^{2}}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6adf034e3ba47318aad9958d92aa5caaeae39a3" translate="yes" xml:space="preserve">
          <source>\text{out}_{i} = \sqrt{\text{input}_{i}}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3563e2ffc1ebfbc800c1dd7b12d56f17e2f84012" translate="yes" xml:space="preserve">
          <source>\text{out}_{i} = \tan(\text{input}_{i})</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c84ff0d5cfb4e3368d70e9d3853ac2f7da77df34" translate="yes" xml:space="preserve">
          <source>\text{out}_{i} = \tan^{-1}(\text{input}_{i})</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="339ee2ac3b749c3430c326bb801e434eb7dd88eb" translate="yes" xml:space="preserve">
          <source>\text{out}_{i} = \tanh(\text{input}_{i})</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bbbd60b143b37df1c047a994b490f440b3b4a12" translate="yes" xml:space="preserve">
          <source>\text{out}_{i} = \tanh^{-1}(\text{input}_{i})</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2b840e12a553c229a2511c216662f4659dc95dc" translate="yes" xml:space="preserve">
          <source>\text{out}_{i} = \text{input}_{i} - \left\lfloor |\text{input}_{i}| \right\rfloor * \operatorname{sgn}(\text{input}_{i})</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07e6f589bfadaeb684ef52c979559ff70dd53446" translate="yes" xml:space="preserve">
          <source>\text{out}_{i} = angle(\text{input}_{i})</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3208732ebcf3371420c5abc0afe1728e365bcaab" translate="yes" xml:space="preserve">
          <source>\text{out}_{i} = conj(\text{input}_{i})</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2990a218cc833a6ec80d5667b3951afb3dfc0ec" translate="yes" xml:space="preserve">
          <source>\text{out}_{i} = |\text{input}_{i}|</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6aa4724db682413c4a0d9e7da789301bde04767" translate="yes" xml:space="preserve">
          <source>\text{out}_{i} \sim \mathcal{N}(0, 1)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19b54f107e367ae800728c182219b0a6d113a55d" translate="yes" xml:space="preserve">
          <source>\text{out}_{i} \sim \mathrm{Bernoulli}(p = \text{input}_{i})</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ff6f3181c37c49b168dc5bb2c5512278c4d8cdd" translate="yes" xml:space="preserve">
          <source>\text{out}_{{i+1}} = \text{out}_{i} + \text{step}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22972795246817e25ed6cd9e7f9534bb009c4be5" translate="yes" xml:space="preserve">
          <source>\text{padding\_back}</source>
          <target state="translated">\text{padding\_back}</target>
        </trans-unit>
        <trans-unit id="8f171d7dcd7097c55030a1f2855ec480075028b7" translate="yes" xml:space="preserve">
          <source>\text{padding\_bottom}</source>
          <target state="translated">\text{padding\_bottom}</target>
        </trans-unit>
        <trans-unit id="c61e815e96b628670818ef2117895748429c8232" translate="yes" xml:space="preserve">
          <source>\text{padding\_front}</source>
          <target state="translated">\text{padding\_front}</target>
        </trans-unit>
        <trans-unit id="db98a807cd5008387cbab3fe6e2aec41450b4604" translate="yes" xml:space="preserve">
          <source>\text{padding\_front}, \text{padding\_back})</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71d180502f18ec5d773aee314a7a4111878c2b75" translate="yes" xml:space="preserve">
          <source>\text{padding\_left}</source>
          <target state="translated">\text{padding\_left}</target>
        </trans-unit>
        <trans-unit id="d6ccab1e4d0ca305991dad9a66b238c71e38726d" translate="yes" xml:space="preserve">
          <source>\text{padding\_right}</source>
          <target state="translated">\text{padding\_right}</target>
        </trans-unit>
        <trans-unit id="822c531daaae9a83e8cb9610863aa10968e367cb" translate="yes" xml:space="preserve">
          <source>\text{padding\_top}</source>
          <target state="translated">\text{padding\_top}</target>
        </trans-unit>
        <trans-unit id="c863b416ef996ee31809e50a0bf7888a3fdd7ad8" translate="yes" xml:space="preserve">
          <source>\text{padding\_top}, \text{padding\_bottom}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dfb970fd31b03f94d4e4f1e23a1347628359b17" translate="yes" xml:space="preserve">
          <source>\text{padding\_top}, \text{padding\_bottom})</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2940a7cd2f158af987520c8f34af379096300028" translate="yes" xml:space="preserve">
          <source>\text{scale} = 1.0507009873554804934193349852946</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="509bb45bc88eeba17ab4e18a7b0718847be009ba" translate="yes" xml:space="preserve">
          <source>\text{silu}(x) = x * \sigma(x), \text{where } \sigma(x) \text{ is the logistic sigmoid.}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19a93b01d26977b01f0022e9ad1395871a79c6d2" translate="yes" xml:space="preserve">
          <source>\text{similarity} = \dfrac{x_1 \cdot x_2}{\max(\Vert x_1 \Vert _2 \cdot \Vert x_2 \Vert _2, \epsilon)}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64fe2ce749a0723d9a9566b76783f0dec79a7cd9" translate="yes" xml:space="preserve">
          <source>\text{similarity} = \dfrac{x_1 \cdot x_2}{\max(\Vert x_1 \Vert _2 \cdot \Vert x_2 \Vert _2, \epsilon)}.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e184ebb3380e76e50f3e3cc8c8ba0cdbf171178" translate="yes" xml:space="preserve">
          <source>\text{spatial\_size}</source>
          <target state="translated">\text{spatial\_size}</target>
        </trans-unit>
        <trans-unit id="30d98357c0cf5aadd64e4c5685312bfb74e6ff43" translate="yes" xml:space="preserve">
          <source>\text{std} = \frac{\text{gain}}{\sqrt{\text{fan\_mode}}}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bba3586f43350ca4e47d9af0d460338cdf45084" translate="yes" xml:space="preserve">
          <source>\text{std} = \text{gain} \times \sqrt{\frac{2}{\text{fan\_in} + \text{fan\_out}}}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ee7a6294338ef4ec43db737a79e7a5c5827ad5d" translate="yes" xml:space="preserve">
          <source>\text{stride}[i] = \text{stride}[i+1] \times \text{size}[i+1]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ae213028d9116087df1c48df38a24906070e968" translate="yes" xml:space="preserve">
          <source>\text{target} * \log(\text{target}) - \text{target} + 0.5 * \log(2 * \pi * \text{target})</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40e87ce770ee226cb8037a67d055f5046fdf9036" translate="yes" xml:space="preserve">
          <source>\text{target} \sim \mathrm{Poisson}(\text{input}) \text{loss}(\text{input}, \text{target}) = \text{input} - \text{target} * \log(\text{input}) + \log(\text{target!})</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee61c683da63904db4a3e121bdf113933043f4d7" translate="yes" xml:space="preserve">
          <source>\text{target}*\log(\text{target}) - \text{target} + 0.5 * \log(2\pi\text{target}).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f6bd28cfcaee12c0d20055b4b4afd7bf6b48113" translate="yes" xml:space="preserve">
          <source>\text{tensor1} / \text{tensor2}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="075aa43f8957c1474a6931e41c96dcb7c5d686d6" translate="yes" xml:space="preserve">
          <source>\text{true eigenvector}[j + 1] = eigenvectors[:, j] - i \times eigenvectors[:, j + 1]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbbcfbb1d0a265eefc03e882be62153c1a959077" translate="yes" xml:space="preserve">
          <source>\text{true eigenvector}[j] = eigenvectors[:, j] + i \times eigenvectors[:, j + 1]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63386bdc7be9c10bbab18ac478e13f97470e863e" translate="yes" xml:space="preserve">
          <source>\text{val}</source>
          <target state="translated">\text{val}</target>
        </trans-unit>
        <trans-unit id="d6db479a087e6e41362768b25784ba255c6716a3" translate="yes" xml:space="preserve">
          <source>\text{vec1} \otimes \text{vec2}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64e1f89a912ee4486e65f62e989e6b10c06342f9" translate="yes" xml:space="preserve">
          <source>\text{win\_length} &amp;lt; \text{n\_fft}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18afc597cccde66cf5c2fa4706aeb0646f3723b2" translate="yes" xml:space="preserve">
          <source>\text{window\_length} + 1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="848da5fb0b7bd079124401e74232d55ffe67400b" translate="yes" xml:space="preserve">
          <source>\text{{heaviside}}(input, values) = \begin{cases} 0, &amp;amp; \text{if input &amp;lt; 0}\\ values, &amp;amp; \text{if input == 0}\\ 1, &amp;amp; \text{if input &amp;gt; 0} \end{cases}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6688d2b60281ad8fefcc0fea715a9f936e08052" translate="yes" xml:space="preserve">
          <source>\text{{out}}_i = \text{trunc} \left( \frac{{\text{{input}}_i}}{{\text{{other}}_i}} \right)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b390b7373d30b8df651a5b7c8366caf960e3ef34" translate="yes" xml:space="preserve">
          <source>\text{{out}}_i = \text{{input}}_i - \text{{alpha}} \times \text{{other}}_i</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86f7e437faa5a7fce15d1ddcb9eaeaea377667b8" translate="yes" xml:space="preserve">
          <source>a</source>
          <target state="translated">a</target>
        </trans-unit>
        <trans-unit id="985ea09fbb51e15e4429dc741d64e71fe6b0efab" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;torch.nn.utils.rnn.packedsequence#torch.nn.utils.rnn.PackedSequence&quot;&gt;&lt;code&gt;PackedSequence&lt;/code&gt;&lt;/a&gt; object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d162d7e8bd1d5dda8190b029ffd491226ce6290d" translate="yes" xml:space="preserve">
          <source>a &lt;code&gt;tuple&lt;/code&gt; of three ints &amp;ndash; in which case, the first &lt;code&gt;int&lt;/code&gt; is used for the depth dimension, the second &lt;code&gt;int&lt;/code&gt; for the height dimension and the third &lt;code&gt;int&lt;/code&gt; for the width dimension</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e87ba64be191e5fb677cabf542708af2183633d" translate="yes" xml:space="preserve">
          <source>a &lt;code&gt;tuple&lt;/code&gt; of two ints &amp;ndash; in which case, the first &lt;code&gt;int&lt;/code&gt; is used for the height dimension, and the second &lt;code&gt;int&lt;/code&gt; for the width dimension</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9af60a637080c119529287cf450a17dc51cdd322" translate="yes" xml:space="preserve">
          <source>a = \text{gain} \times \sqrt{\frac{6}{\text{fan\_in} + \text{fan\_out}}}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a18d36abd55ff2f8af389fa82ac5cf243f710013" translate="yes" xml:space="preserve">
          <source>a Tensor containing the result of module(input) located on output_device</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="890f00f76ee1d37642ba29392aeb8c4a40b22625" translate="yes" xml:space="preserve">
          <source>a Tensor of the same dimension and shape as the input with values in the range [-inf, 0)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2003464995dec65fd9f3cf1a1961d2e3b1715419" translate="yes" xml:space="preserve">
          <source>a Tensor of the same dimension and shape as the input with values in the range [0, 1]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fae14cf3c01e74728e043358ac48d17d6d7ff1f" translate="yes" xml:space="preserve">
          <source>a Tensor of the same dimension and shape as the input, with values in the range [0, 1]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fa1afd2e30272a3a23ae385fdbd6176134150f6" translate="yes" xml:space="preserve">
          <source>a class with the highest probability for each example</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45f2f8dde4763de997a5fc5976cf3a9430e5dc9f" translate="yes" xml:space="preserve">
          <source>a dictionary containing a whole state of the module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00a9b884880389883482dc751408a90f0cb9ee68" translate="yes" xml:space="preserve">
          <source>a dictionary to specify dynamic axes of input/output, such that: - KEY: input and/or output names - VALUE: index of dynamic axes for given key and potentially the name to be used for exported dynamic axes. In general the value is defined according to one of the following ways or a combination of both: (1). A list of integers specifying the dynamic axes of provided input. In this scenario automated names will be generated and applied to dynamic axes of provided input/output during export. OR (2). An inner dictionary that specifies a mapping FROM the index of dynamic axis in corresponding input/output TO the name that is desired to be applied on such axis of such input/output during export.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc0ea09618fde72378f33c4a6ddb59c0e4510cd0" translate="yes" xml:space="preserve">
          <source>a function for tracing the iteration process. When specified, it is called at each iteration step with LOBPCG instance as an argument. The LOBPCG instance holds the full state of the iteration process in the following attributes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f41119365c981a28ba7e837a621a43e97595a3e6" translate="yes" xml:space="preserve">
          <source>a handle that can be used to remove the added hook by calling &lt;code&gt;handle.remove()&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae26d64a3b3e80ec8246fb0560aeac16291f28f8" translate="yes" xml:space="preserve">
          <source>a list of available entrypoint names</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f1c5e47605b815eb437073ec1603759477ea676" translate="yes" xml:space="preserve">
          <source>a reference to the execution of &lt;code&gt;func&lt;/code&gt;. The value &lt;code&gt;T&lt;/code&gt; can only be accessed by forcing completion of &lt;code&gt;func&lt;/code&gt; through &lt;code&gt;torch.jit.wait&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33218b2df65cce0092049e58dd8bb1cb81e976cb" translate="yes" xml:space="preserve">
          <source>a single &lt;code&gt;int&lt;/code&gt; &amp;ndash; in which case the same value is used for the depth, height and width dimension</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="850561b0cef31ac05a0c3f4be1e02622fadced9d" translate="yes" xml:space="preserve">
          <source>a single &lt;code&gt;int&lt;/code&gt; &amp;ndash; in which case the same value is used for the depth, height and width dimensions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a73b9f710ff83671961055a44ffd5cbbcae7d407" translate="yes" xml:space="preserve">
          <source>a single &lt;code&gt;int&lt;/code&gt; &amp;ndash; in which case the same value is used for the height and width dimension</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13675467768e46f60e5b4830e00591213f355dd1" translate="yes" xml:space="preserve">
          <source>a single &lt;code&gt;int&lt;/code&gt; &amp;ndash; in which case the same value is used for the height and width dimensions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db8d55dadf017c53a5cb22f260f3267b482ce8b0" translate="yes" xml:space="preserve">
          <source>a tensor of shape &lt;code&gt;Size([max(input) + 1])&lt;/code&gt; if &lt;code&gt;input&lt;/code&gt; is non-empty, else &lt;code&gt;Size(0)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cffaf9b9bcbb730e4c1694aa1ce58215c898bc4" translate="yes" xml:space="preserve">
          <source>above), and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82451b41fd7878180b6aa2b54e369cbec4e8032c" translate="yes" xml:space="preserve">
          <source>abs</source>
          <target state="translated">abs</target>
        </trans-unit>
        <trans-unit id="da4dbfbc4fdc56237451cf5e9f9933b2b64f1ba6" translate="yes" xml:space="preserve">
          <source>absolute</source>
          <target state="translated">absolute</target>
        </trans-unit>
        <trans-unit id="8379b4f061ef5249954793884b3e333722e3a581" translate="yes" xml:space="preserve">
          <source>according to the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="328f0742cf74e8ffdb253376b1803615055e215b" translate="yes" xml:space="preserve">
          <source>acos</source>
          <target state="translated">acos</target>
        </trans-unit>
        <trans-unit id="cae11b2912fc7a669ec8e6fd1ef1797da899527b" translate="yes" xml:space="preserve">
          <source>acosh() -&amp;gt; Tensor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43b9ab0810a93aacba6924ceb0586f3a5ded5277" translate="yes" xml:space="preserve">
          <source>acosh_() -&amp;gt; Tensor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="188c404e728c43b5646acbca5ba76bfe689b737f" translate="yes" xml:space="preserve">
          <source>across all input channels. If called with &lt;code&gt;nn.PReLU(nChannels)&lt;/code&gt;, a separate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bb3255719c068be2327cb70a2b8e43a35888f5b" translate="yes" xml:space="preserve">
          <source>adaptive_avg_pool1d</source>
          <target state="translated">adaptive_avg_pool1d</target>
        </trans-unit>
        <trans-unit id="c61fa142ae65a4935debc614087fb58ff3a6df54" translate="yes" xml:space="preserve">
          <source>adaptive_avg_pool2d</source>
          <target state="translated">adaptive_avg_pool2d</target>
        </trans-unit>
        <trans-unit id="14ce4a9f26f8969b6890e407e6f51988efbeea4c" translate="yes" xml:space="preserve">
          <source>adaptive_avg_pool3d</source>
          <target state="translated">adaptive_avg_pool3d</target>
        </trans-unit>
        <trans-unit id="3aaf9eadafea10463817e8d201b7f07b7265e014" translate="yes" xml:space="preserve">
          <source>adaptive_max_pool1d</source>
          <target state="translated">adaptive_max_pool1d</target>
        </trans-unit>
        <trans-unit id="d3d98fd5af00d45465427af1e01b6955b7cc0483" translate="yes" xml:space="preserve">
          <source>adaptive_max_pool2d</source>
          <target state="translated">adaptive_max_pool2d</target>
        </trans-unit>
        <trans-unit id="a3a21897a04cb4aa98f34167bb5bef9a6168c500" translate="yes" xml:space="preserve">
          <source>adaptive_max_pool3d</source>
          <target state="translated">adaptive_max_pool3d</target>
        </trans-unit>
        <trans-unit id="58d1bbce297de3c304a9fefc3b483181872a5c6b" translate="yes" xml:space="preserve">
          <source>add</source>
          <target state="translated">add</target>
        </trans-unit>
        <trans-unit id="5a96c9fe756bb4bf51deba8e7d88183c67947c4a" translate="yes" xml:space="preserve">
          <source>add (nonzero alpha not supported)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8cab2345ee84bff05fb1af92dc904a85a08122e" translate="yes" xml:space="preserve">
          <source>add_relu</source>
          <target state="translated">add_relu</target>
        </trans-unit>
        <trans-unit id="be4a7c50ca01a7fc792facb9bd955bb98f5efd0f" translate="yes" xml:space="preserve">
          <source>add_scalar</source>
          <target state="translated">add_scalar</target>
        </trans-unit>
        <trans-unit id="d22b6f87e06eb3844a28e850f32f0a7a889d92fe" translate="yes" xml:space="preserve">
          <source>addmm</source>
          <target state="translated">addmm</target>
        </trans-unit>
        <trans-unit id="015bd815072238008dba22c71b1f12d4a0e9ce46" translate="yes" xml:space="preserve">
          <source>affine_grid</source>
          <target state="translated">affine_grid</target>
        </trans-unit>
        <trans-unit id="a4f813ae14b83732a4864c611af5b3566fb3ec62" translate="yes" xml:space="preserve">
          <source>alias of &lt;code&gt;typing.Tuple&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="068aa03cad6f28f79ba1111c747f21ad5b02ebe5" translate="yes" xml:space="preserve">
          <source>all_gather</source>
          <target state="translated">all_gather</target>
        </trans-unit>
        <trans-unit id="d02036fc361150eb3b815512675dec0cfae0d0f3" translate="yes" xml:space="preserve">
          <source>all_reduce</source>
          <target state="translated">all_reduce</target>
        </trans-unit>
        <trans-unit id="d26207411b688464018bef94d89557e73d634e59" translate="yes" xml:space="preserve">
          <source>all_to_all</source>
          <target state="translated">all_to_all</target>
        </trans-unit>
        <trans-unit id="d554177a50129be7b474c04ec4d6704a4b3ab4b7" translate="yes" xml:space="preserve">
          <source>along &lt;code&gt;dim&lt;/code&gt;, using the trapezoid rule.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76cd6d3a1710d97fef46a230a4cc6240eb2a1380" translate="yes" xml:space="preserve">
          <source>along &lt;code&gt;dim&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6554d1a5e11c7976a696c18e79f0814b9396668a" translate="yes" xml:space="preserve">
          <source>along dimension &lt;code&gt;dim&lt;/code&gt; is transformed as</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be76331b95dfc399cd776d2fc68021e0db03cc4f" translate="yes" xml:space="preserve">
          <source>alpha</source>
          <target state="translated">alpha</target>
        </trans-unit>
        <trans-unit id="4b077706cb8a0c2ebeb6471729485bac1a733acf" translate="yes" xml:space="preserve">
          <source>alpha_dropout</source>
          <target state="translated">alpha_dropout</target>
        </trans-unit>
        <trans-unit id="cffa50a32cb13a240d705317bcec65dd1f31b6ad" translate="yes" xml:space="preserve">
          <source>and</source>
          <target state="translated">and</target>
        </trans-unit>
        <trans-unit id="ea11961808d60532cba9bb74eca2efc9028432b5" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;L&lt;/code&gt; represents a sequence length.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51be83d9e5138cf7da772101995cb9cef885eb19" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;dim = i&lt;/code&gt;, then &lt;code&gt;index&lt;/code&gt; must be an</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7274e61465c020300a30dd75f2b7c77288b1872f" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;grid&lt;/code&gt; with shape</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3e9497e8d92dbb47e859e474f20c5ff68bc011d" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;kernel_size&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69906b9a4a5287952e8b1f59e1b066d2de6ab17e" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;out&lt;/code&gt; will be a matrix of size</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfbe811b15a7be917e54a7bd6d548093f12e6464" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;out&lt;/code&gt; will have the same size as &lt;code&gt;index&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8884a6fb0ff6189ded0963ddb98c79c7d9aeb69" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;solution&lt;/code&gt; is the solution</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="deb10848a6c3d0e28f26841e04fd508759c1568a" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;vec2&lt;/code&gt; is a vector of size</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8516d1daf3054c5229e8207676fe21041fa9e2b0" translate="yes" xml:space="preserve">
          <source>and a &lt;code&gt;Tensor&lt;/code&gt; label</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a32db4530d76c7069a29b591cae084dc90bcd99" translate="yes" xml:space="preserve">
          <source>and a labels tensor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9a100e0a04720d0e08f421ee521b4c07271e73c" translate="yes" xml:space="preserve">
          <source>and a margin with a value greater than</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bef7a9ca9492d76a989ba472a5134335b532cc1" translate="yes" xml:space="preserve">
          <source>and a matrix</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="994f7a70392302396190552425356c44897b163a" translate="yes" xml:space="preserve">
          <source>and all but the last dimension are the same shape as the input.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3efa22a01fb352021085e134597a06af8fdcd21" translate="yes" xml:space="preserve">
          <source>and assumes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44fe67e18a7b0c61be3bcd65d4873d81ff165fe4" translate="yes" xml:space="preserve">
          <source>and multiple right-hand sides</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b843bb82aff68f312d79ab6cf03a56ace808f2d" translate="yes" xml:space="preserve">
          <source>and one of the following modes is used: - &lt;code&gt;linear&lt;/code&gt; - &lt;code&gt;bilinear&lt;/code&gt; - &lt;code&gt;bicubic&lt;/code&gt; - &lt;code&gt;trilinear&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34c169d448724e62adaa41082c03ac52ab54fff0" translate="yes" xml:space="preserve">
          <source>and output</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="422022e7df4fc1e7e88e8f2a905326d532895a06" translate="yes" xml:space="preserve">
          <source>and restarts at step</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14b190aab2ad2654706b74c2be95acb6da7f2850" translate="yes" xml:space="preserve">
          <source>and scalar output</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b34851d4c502e28d96eafba7331ab90e1898bc8d" translate="yes" xml:space="preserve">
          <source>and so forth. If increasing is True, the columns are</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="146cd69984268e3dc94fa6880d4aabdda441d4be" translate="yes" xml:space="preserve">
          <source>and standard deviation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bba86a9b83c5aa670a1f3d4c691ac866067b19d" translate="yes" xml:space="preserve">
          <source>and target</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9124e7eb2a80bd8e99f0ee162bc6c10019f76e56" translate="yes" xml:space="preserve">
          <source>and target tensor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adaffd67d43c3d4bd29c2d4e89911618672f35ec" translate="yes" xml:space="preserve">
          <source>and the LU factorization of A, in order as a namedtuple &lt;code&gt;solution, LU&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c8e722a8235feec4386550dd50bdb353aabf9b3" translate="yes" xml:space="preserve">
          <source>and the elements of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6058dacca42ad9e7a4c0849aef311147f2ca8455" translate="yes" xml:space="preserve">
          <source>and the total loss functions is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f0f37057f618e969e7c100dbe104d0a83309871" translate="yes" xml:space="preserve">
          <source>and vector</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f12fb281ea5401324cfef7c940cff938f57fc26a" translate="yes" xml:space="preserve">
          <source>and we will be able to step into the &lt;a href=&quot;generated/torch.jit.script#torch.jit.script&quot;&gt;&lt;code&gt;@torch.jit.script&lt;/code&gt;&lt;/a&gt; function as a normal Python function. To disable the TorchScript compiler for a specific function, see &lt;a href=&quot;generated/torch.jit.ignore#torch.jit.ignore&quot;&gt;&lt;code&gt;@torch.jit.ignore&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29748c4ec2f5a11f19b122c91c764f2c283a295d" translate="yes" xml:space="preserve">
          <source>and x2 has shape</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11a9215ec620218c8e8d409263469091431ff0d4" translate="yes" xml:space="preserve">
          <source>angle</source>
          <target state="translated">angle</target>
        </trans-unit>
        <trans-unit id="4ad4ad16aa212e130ee9bd5ac32ae35842a975fe" translate="yes" xml:space="preserve">
          <source>arange</source>
          <target state="translated">arange</target>
        </trans-unit>
        <trans-unit id="a538840857b54aaa96ea8ec3ac8fb4a13708f87e" translate="yes" xml:space="preserve">
          <source>arbitrary shapes with a total of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86c852d13e59fa71b388491fc4ce6baa16edb892" translate="yes" xml:space="preserve">
          <source>are assumed to be 1 and not referenced from</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f920c82e9a5117ed628937a9379bf48075b0898c" translate="yes" xml:space="preserve">
          <source>are learnable affine transform parameters of &lt;code&gt;normalized_shape&lt;/code&gt; if &lt;code&gt;elementwise_affine&lt;/code&gt; is &lt;code&gt;True&lt;/code&gt;. The standard-deviation is calculated via the biased estimator, equivalent to &lt;code&gt;torch.var(input, unbiased=False)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e538aee8f67210d75bc513a9c556cb3f2c22456c" translate="yes" xml:space="preserve">
          <source>are learnable parameter vectors of size &lt;code&gt;C&lt;/code&gt; (where &lt;code&gt;C&lt;/code&gt; is the input size) if &lt;code&gt;affine&lt;/code&gt; is &lt;code&gt;True&lt;/code&gt;. The standard-deviation is calculated via the biased estimator, equivalent to &lt;code&gt;torch.var(input, unbiased=False)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="425eb1a701280f929d1aa755a3bd9afffe042bd8" translate="yes" xml:space="preserve">
          <source>are learnable parameter vectors of size &lt;code&gt;C&lt;/code&gt; (where &lt;code&gt;C&lt;/code&gt; is the input size). By default, the elements of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86f4f24ef6637d895465729e95b5618cb38c12be" translate="yes" xml:space="preserve">
          <source>are learnable parameter vectors of size C (where C is the input size) if &lt;code&gt;affine&lt;/code&gt; is &lt;code&gt;True&lt;/code&gt;. The standard-deviation is calculated via the biased estimator, equivalent to &lt;code&gt;torch.var(input, unbiased=False)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ff6a70926b2f700851f7fc8c20c594a8e76e9c3" translate="yes" xml:space="preserve">
          <source>are learnable per-channel affine transform parameter vectors of size &lt;code&gt;num_channels&lt;/code&gt; if &lt;code&gt;affine&lt;/code&gt; is &lt;code&gt;True&lt;/code&gt;. The standard-deviation is calculated via the biased estimator, equivalent to &lt;code&gt;torch.var(input, unbiased=False)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75bf5f4b4eb9c04180b6f81312057902bb428ee6" translate="yes" xml:space="preserve">
          <source>are returned because the real-to-complex Fourier transform satisfies the conjugate symmetry, i.e.,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9344438a3a3542ca4e36035afaf2dc5ecaf2be7" translate="yes" xml:space="preserve">
          <source>are sampled from</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2865bbee8d449f1d185c550ec6b590c22b6957d4" translate="yes" xml:space="preserve">
          <source>are set to 0. The standard-deviation is calculated via the biased estimator, equivalent to &lt;code&gt;torch.var(input, unbiased=False)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ee644b4632f03c7ed8cd56a6d8d3b0a6de1f9ba" translate="yes" xml:space="preserve">
          <source>are set to 1 and the elements of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07c77f1bda818de0208d523f8899b3173d0eae6a" translate="yes" xml:space="preserve">
          <source>are tensors of arbitrary shapes with a total of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1792693a82797275a29dc724b1fdb08fe5cef51" translate="yes" xml:space="preserve">
          <source>are the dimensions of the matrix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb06c7309fb6a43a67a1cdf5bde8c81dbe8d348d" translate="yes" xml:space="preserve">
          <source>are the input, forget, cell, and output gates, respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d1f1537fbffe574251e7df78749efa3f5feee9a" translate="yes" xml:space="preserve">
          <source>are the only supported values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b2535542a411be559b351451bde244b4f033b2f" translate="yes" xml:space="preserve">
          <source>are the reset, update, and new gates, respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4665f1e2ffa54be784f9b474fe768613b821365" translate="yes" xml:space="preserve">
          <source>argmax</source>
          <target state="translated">argmax</target>
        </trans-unit>
        <trans-unit id="4538ebc5d50e576bcdd8095d274394500be1d3e0" translate="yes" xml:space="preserve">
          <source>argmin</source>
          <target state="translated">argmin</target>
        </trans-unit>
        <trans-unit id="0a960f0a485739de9ec7e0394dd5e46da6afde09" translate="yes" xml:space="preserve">
          <source>as below</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="908b35dcf789b151ab044796ae0006bab35551e6" translate="yes" xml:space="preserve">
          <source>as described above</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98d3a6b6e515d500e9df2fee1f684162fcc532ee" translate="yes" xml:space="preserve">
          <source>as explicit separate matrices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="196302a3f9515657b0c55dab8c474613624309d3" translate="yes" xml:space="preserve">
          <source>as the &lt;code&gt;target&lt;/code&gt; for each value of a 1D tensor of size &lt;code&gt;minibatch&lt;/code&gt;; if &lt;code&gt;ignore_index&lt;/code&gt; is specified, this criterion also accepts this class index (this index may not necessarily be in the class range).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3e04b10767441eb9b4b0a57a2d62cbb77d5cdad" translate="yes" xml:space="preserve">
          <source>as vec norm when dim is None</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73688580af35401988ca63c730bbff475def44d3" translate="yes" xml:space="preserve">
          <source>as:</source>
          <target state="translated">as:</target>
        </trans-unit>
        <trans-unit id="6480588dae849f3cd69c8be01b990f84ce70a375" translate="yes" xml:space="preserve">
          <source>as_strided</source>
          <target state="translated">as_strided</target>
        </trans-unit>
        <trans-unit id="f6b3e9a1435d3f432e7a6b9003583871fcb26de3" translate="yes" xml:space="preserve">
          <source>asin</source>
          <target state="translated">asin</target>
        </trans-unit>
        <trans-unit id="0217022a2cbba3beab97d37baf8f0e78d8404ee5" translate="yes" xml:space="preserve">
          <source>asynchronous operation - when &lt;code&gt;async_op&lt;/code&gt; is set to True. The collective operation function returns a distributed request object. In general, you don&amp;rsquo;t need to create it manually and it is guaranteed to support two methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f077504d04fa1bc96b042497b434fd33fabdf43d" translate="yes" xml:space="preserve">
          <source>atan</source>
          <target state="translated">atan</target>
        </trans-unit>
        <trans-unit id="12dad2bbce60ee2bc83c285aa39dca395465f305" translate="yes" xml:space="preserve">
          <source>atol</source>
          <target state="translated">atol</target>
        </trans-unit>
        <trans-unit id="cfacbf356c29ecafbd9f709c475179843abdd31e" translate="yes" xml:space="preserve">
          <source>attn_mask: 2D mask</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc13d40f3fdefe8666e6601dc54517fbb0641b8a" translate="yes" xml:space="preserve">
          <source>attn_output:</source>
          <target state="translated">attn_output:</target>
        </trans-unit>
        <trans-unit id="4cac88fb84e0dd512ca9b04f9392aa70146ed77a" translate="yes" xml:space="preserve">
          <source>attn_output_weights:</source>
          <target state="translated">attn_output_weights:</target>
        </trans-unit>
        <trans-unit id="87792e7cfa548e657093e5c536428e801de627fe" translate="yes" xml:space="preserve">
          <source>avg_pool1d</source>
          <target state="translated">avg_pool1d</target>
        </trans-unit>
        <trans-unit id="8454dbf5a788a4fc7b69874c4fe549fff6d01e4a" translate="yes" xml:space="preserve">
          <source>avg_pool2d</source>
          <target state="translated">avg_pool2d</target>
        </trans-unit>
        <trans-unit id="99a1901d4567084ff3e326ca553c35a49cbcc708" translate="yes" xml:space="preserve">
          <source>avg_pool3d</source>
          <target state="translated">avg_pool3d</target>
        </trans-unit>
        <trans-unit id="e9d71f5ee7c92d6dc9e92ffdad17b8bd49418f98" translate="yes" xml:space="preserve">
          <source>b</source>
          <target state="translated">b</target>
        </trans-unit>
        <trans-unit id="ab598131b37324cb1420d88178e195226078e8ec" translate="yes" xml:space="preserve">
          <source>b_{c} = a_{c}\left(k + \frac{\alpha}{n} \sum_{c'=\max(0, c-n/2)}^{\min(N-1,c+n/2)}a_{c'}^2\right)^{-\beta}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07949b7c55cab1a81db23f348c3409b06fc9ee75" translate="yes" xml:space="preserve">
          <source>baddbmm</source>
          <target state="translated">baddbmm</target>
        </trans-unit>
        <trans-unit id="779455ee3bde8494d9629b353e17b19e92357ba8" translate="yes" xml:space="preserve">
          <source>barrier</source>
          <target state="translated">barrier</target>
        </trans-unit>
        <trans-unit id="1405df66cbe219b0bf6355bc3d60361a8376b6b4" translate="yes" xml:space="preserve">
          <source>base</source>
          <target state="translated">base</target>
        </trans-unit>
        <trans-unit id="115bac8f958d7eaf610aede34fad2562c346e505" translate="yes" xml:space="preserve">
          <source>batch size</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31442bf4302dd7b34e796318f57912b743ccccf0" translate="yes" xml:space="preserve">
          <source>batch1</source>
          <target state="translated">batch1</target>
        </trans-unit>
        <trans-unit id="1d1b6777e9c5a97a6a039ea824d68ee915cc1491" translate="yes" xml:space="preserve">
          <source>batch2</source>
          <target state="translated">batch2</target>
        </trans-unit>
        <trans-unit id="b30c0788a62514c66ada13cce11022313c9e5df0" translate="yes" xml:space="preserve">
          <source>batch_norm</source>
          <target state="translated">batch_norm</target>
        </trans-unit>
        <trans-unit id="793787e7648c00d5d9f56d9f3ee2a1d2314216d8" translate="yes" xml:space="preserve">
          <source>being an orthogonal matrix or batch of orthogonal matrices and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b50848b7bdcbc01d3b72f5bb1ce5b7a00a5aad61" translate="yes" xml:space="preserve">
          <source>being an upper triangular matrix or batch of upper triangular matrices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4928df7f06c7ee461e27540fb51dac9bf4b670ad" translate="yes" xml:space="preserve">
          <source>beta is an optional parameter that defaults to 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1e8289afa6b54e410bc2304308fe48e83a8ef02" translate="yes" xml:space="preserve">
          <source>bias</source>
          <target state="translated">bias</target>
        </trans-unit>
        <trans-unit id="5b74ed2accf3a37671aad25b7b91bed84cad9a6e" translate="yes" xml:space="preserve">
          <source>bias:</source>
          <target state="translated">bias:</target>
        </trans-unit>
        <trans-unit id="a1ceb3e5387c09cb212ce6ee3c3c1a476297155d" translate="yes" xml:space="preserve">
          <source>bilinear</source>
          <target state="translated">bilinear</target>
        </trans-unit>
        <trans-unit id="2e1157f96f8af393a261e4d71a43aa637f30cb60" translate="yes" xml:space="preserve">
          <source>binary answer to whether &lt;code&gt;module&lt;/code&gt; is pruned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74c77efd9714f8e8eecdc286f7d29c392001890c" translate="yes" xml:space="preserve">
          <source>binary_cross_entropy</source>
          <target state="translated">binary_cross_entropy</target>
        </trans-unit>
        <trans-unit id="b6c72f603883e86a6cb8021afc246ea5ec1382f5" translate="yes" xml:space="preserve">
          <source>binary_cross_entropy_with_logits</source>
          <target state="translated">binary_cross_entropy_with_logits</target>
        </trans-unit>
        <trans-unit id="0569ae912e387dbc988dee842bf17cdd4e437f63" translate="yes" xml:space="preserve">
          <source>bits</source>
          <target state="translated">bits</target>
        </trans-unit>
        <trans-unit id="b3334e38fd49d5a88ca98cd30878d427a4ddbf06" translate="yes" xml:space="preserve">
          <source>bitshift</source>
          <target state="translated">bitshift</target>
        </trans-unit>
        <trans-unit id="e4e1043a1b984700e67896c1396be3aa962489d5" translate="yes" xml:space="preserve">
          <source>blank=0</source>
          <target state="translated">blank=0</target>
        </trans-unit>
        <trans-unit id="4d46077c78ecf87402848fc9f920b72cde953b02" translate="yes" xml:space="preserve">
          <source>bound</source>
          <target state="translated">bound</target>
        </trans-unit>
        <trans-unit id="7717af821763c86c1249c0045aa20cfbed718b66" translate="yes" xml:space="preserve">
          <source>box AP</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa06eab1f6ebf63aafea56f4652eca504ae7b58f" translate="yes" xml:space="preserve">
          <source>boxes (&lt;code&gt;FloatTensor[N, 4]&lt;/code&gt;): the ground-truth boxes in &lt;code&gt;[x1, y1, x2, y2]&lt;/code&gt; format, with values between &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;H&lt;/code&gt; and &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;W&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf13e93de62c26c00d7b1d7846899f810d8062c3" translate="yes" xml:space="preserve">
          <source>boxes (&lt;code&gt;FloatTensor[N, 4]&lt;/code&gt;): the ground-truth boxes in &lt;code&gt;[x1, y1, x2, y2]&lt;/code&gt; format, with values of &lt;code&gt;x&lt;/code&gt; between &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;W&lt;/code&gt; and values of &lt;code&gt;y&lt;/code&gt; between &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;H&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4523bad4432d4b614f44a286645e98445b5fdb92" translate="yes" xml:space="preserve">
          <source>boxes (&lt;code&gt;FloatTensor[N, 4]&lt;/code&gt;): the predicted boxes in &lt;code&gt;[x1, y1, x2, y2]&lt;/code&gt; format, with values between &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;H&lt;/code&gt; and &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;W&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99db80efa8d4fb3770cb46ce8d01afcb432bd25a" translate="yes" xml:space="preserve">
          <source>boxes (&lt;code&gt;FloatTensor[N, 4]&lt;/code&gt;): the predicted boxes in &lt;code&gt;[x1, y1, x2, y2]&lt;/code&gt; format, with values of &lt;code&gt;x&lt;/code&gt; between &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;W&lt;/code&gt; and values of &lt;code&gt;y&lt;/code&gt; between &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;H&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b58ccb7871e0261dfe6de9e4f5274543ebbebeb8" translate="yes" xml:space="preserve">
          <source>broadcast</source>
          <target state="translated">broadcast</target>
        </trans-unit>
        <trans-unit id="8ab478517af17507ee846089a366bb3e5480b24d" translate="yes" xml:space="preserve">
          <source>but slower. Default: &lt;em&gt;False&lt;/em&gt;. See &lt;a href=&quot;https://arxiv.org/pdf/1707.06990.pdf&quot;&gt;&amp;ldquo;paper&amp;rdquo;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="408158643ed564c72fa0921826f8294d71ccbf7c" translate="yes" xml:space="preserve">
          <source>by</source>
          <target state="translated">by</target>
        </trans-unit>
        <trans-unit id="3e8a60d5f4e9887048f1c82dc39ab1673602aa1e" translate="yes" xml:space="preserve">
          <source>by summing the overlapping values. Similar to &lt;a href=&quot;torch.nn.unfold#torch.nn.Unfold&quot;&gt;&lt;code&gt;Unfold&lt;/code&gt;&lt;/a&gt;, the arguments must satisfy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84a516841ba77a5b4648de2cd0dfcb30ea46dbb4" translate="yes" xml:space="preserve">
          <source>c</source>
          <target state="translated">c</target>
        </trans-unit>
        <trans-unit id="7ba642b78cae54611d3ce19d3a3b9315a889b623" translate="yes" xml:space="preserve">
          <source>c &amp;gt; 1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a695701dc8bcc878e55225bb88a2be5e0250b7f9" translate="yes" xml:space="preserve">
          <source>c = (u u^T)^{{-1}} b</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="325406a6e81b2954fe93c1849e849987a40ad22c" translate="yes" xml:space="preserve">
          <source>c = (u^T u)^{{-1}} b</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9db33fa0cd63d5bcc994a2d10aee7aa1c6cf5234" translate="yes" xml:space="preserve">
          <source>c = 1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75e4c1ce919ca4246ccdfcf0f90143995bdcf09e" translate="yes" xml:space="preserve">
          <source>c_t</source>
          <target state="translated">c_t</target>
        </trans-unit>
        <trans-unit id="52a612a982a939b9f63856d2f4f4f8c12f2509f8" translate="yes" xml:space="preserve">
          <source>can be adjusted using &lt;code&gt;min_val&lt;/code&gt; and &lt;code&gt;max_val&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d83e8bdc70262378c30c2dddd5537deeb8a96c5" translate="yes" xml:space="preserve">
          <source>can be avoided if one sets &lt;code&gt;reduction = 'sum'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90bd565efaf349a2fc8e4dc779050d0325ec50a1" translate="yes" xml:space="preserve">
          <source>can be avoided if sets &lt;code&gt;reduction = 'sum'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c65ddc9ba0e2d191602d3c173ef6a188ce419ee" translate="yes" xml:space="preserve">
          <source>can be precisely described as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8634627c53b593a107a2ce1c2b724bc47ea5e431" translate="yes" xml:space="preserve">
          <source>can be used to compute normalized (unit length) eigenvectors of corresponding eigenvalues as follows. If the corresponding &lt;code&gt;eigenvalues[j]&lt;/code&gt; is a real number, column &lt;code&gt;eigenvectors[:, j]&lt;/code&gt; is the eigenvector corresponding to &lt;code&gt;eigenvalues[j]&lt;/code&gt;. If the corresponding &lt;code&gt;eigenvalues[j]&lt;/code&gt; and &lt;code&gt;eigenvalues[j + 1]&lt;/code&gt; form a complex conjugate pair, then the true eigenvectors can be computed as</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d989e8d27dc9e0ec3389fc855f142c3d40f0c50" translate="yes" xml:space="preserve">
          <source>cat</source>
          <target state="translated">cat</target>
        </trans-unit>
        <trans-unit id="613af80c25dfbc9ef75ce605280571b9a518d632" translate="yes" xml:space="preserve">
          <source>ceil</source>
          <target state="translated">ceil</target>
        </trans-unit>
        <trans-unit id="8cc51bda059df43f07da456966946b85e1e39fed" translate="yes" xml:space="preserve">
          <source>celu</source>
          <target state="translated">celu</target>
        </trans-unit>
        <trans-unit id="a4ab4f21160cf5b0a8b70fd62605f209cd8eb378" translate="yes" xml:space="preserve">
          <source>clamp</source>
          <target state="translated">clamp</target>
        </trans-unit>
        <trans-unit id="0b03af5027f5174c31ba5792d65334dc4b86d0c4" translate="yes" xml:space="preserve">
          <source>clamp_max</source>
          <target state="translated">clamp_max</target>
        </trans-unit>
        <trans-unit id="c71e6f6650b2c00996a576acfebb2e5c2c9133bc" translate="yes" xml:space="preserve">
          <source>clamp_min</source>
          <target state="translated">clamp_min</target>
        </trans-unit>
        <trans-unit id="af6ab064a94fb3e9fd590a99e474c2ed6fe59e97" translate="yes" xml:space="preserve">
          <source>clear()</source>
          <target state="translated">clear()</target>
        </trans-unit>
        <trans-unit id="dde02ec247dcb158d65d0da1bdd9301502952f4f" translate="yes" xml:space="preserve">
          <source>clip_value</source>
          <target state="translated">clip_value</target>
        </trans-unit>
        <trans-unit id="5dc3fded50a44a781130cc74e32147cfb27fb2b1" translate="yes" xml:space="preserve">
          <source>colors:</source>
          <target state="translated">colors:</target>
        </trans-unit>
        <trans-unit id="ec3d37cfb39e6ddfa966aa2a0e1cc364f09c1aac" translate="yes" xml:space="preserve">
          <source>columns (when specified) or &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8f2c317f524276e700bfcb20a9ddc27b06eedc5" translate="yes" xml:space="preserve">
          <source>columns of &lt;code&gt;input&lt;/code&gt; are linearly independent. This behavior will propably change once QR supports pivoting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3ed4cce473629e46512b31377e0c26f8c611bf9" translate="yes" xml:space="preserve">
          <source>columns represent the principal directions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="805682fdf2befd0f72b7d16894fd58f0d033c065" translate="yes" xml:space="preserve">
          <source>columns.</source>
          <target state="translated">columns.</target>
        </trans-unit>
        <trans-unit id="49ba358c3272c2db40fc6ab2c103669678628b68" translate="yes" xml:space="preserve">
          <source>concat</source>
          <target state="translated">concat</target>
        </trans-unit>
        <trans-unit id="afad9a69767e7c24ecda5af9187202e1b4b070b2" translate="yes" xml:space="preserve">
          <source>condition</source>
          <target state="translated">condition</target>
        </trans-unit>
        <trans-unit id="f607ae1e89eb5c8e88a5312b0347f07cd629f09e" translate="yes" xml:space="preserve">
          <source>conduct; niter must be a nonnegative integer, and defaults to 2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0713af050ff5d1185e252e762af4f2837f6692ed" translate="yes" xml:space="preserve">
          <source>containing the window</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d75270e5e6de30e18e4c2d9c2c4833c4b41b71ea" translate="yes" xml:space="preserve">
          <source>contains the eigenvalues of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edf1afc933ef93b4de4eecc542db49d0c5ac72fd" translate="yes" xml:space="preserve">
          <source>contains the solution. If</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="963bb6a82e1a90627d6c03382ec4d1cf449f21be" translate="yes" xml:space="preserve">
          <source>conv1d</source>
          <target state="translated">conv1d</target>
        </trans-unit>
        <trans-unit id="6c6a564ef490d5000c80c05e48c88c09ac2644d2" translate="yes" xml:space="preserve">
          <source>conv2d</source>
          <target state="translated">conv2d</target>
        </trans-unit>
        <trans-unit id="37994178ccdc1cb8e941708bda9ab3d1d68ab700" translate="yes" xml:space="preserve">
          <source>conv3d</source>
          <target state="translated">conv3d</target>
        </trans-unit>
        <trans-unit id="858f941f9149239a390fefcb9fe1d340b8264a31" translate="yes" xml:space="preserve">
          <source>conv_transpose1d</source>
          <target state="translated">conv_transpose1d</target>
        </trans-unit>
        <trans-unit id="1dcafa5ee322b6c650c69e12302f3a4fcc614f37" translate="yes" xml:space="preserve">
          <source>conv_transpose2d</source>
          <target state="translated">conv_transpose2d</target>
        </trans-unit>
        <trans-unit id="a1f18c3da206b94f7d98bf7f160bf00ffff56b8f" translate="yes" xml:space="preserve">
          <source>conv_transpose3d</source>
          <target state="translated">conv_transpose3d</target>
        </trans-unit>
        <trans-unit id="f84e2e2dadd87384fb55f25886926b777e8378f1" translate="yes" xml:space="preserve">
          <source>copy</source>
          <target state="translated">copy</target>
        </trans-unit>
        <trans-unit id="5bcc2c4d81811ed80bdd75460668f2bc84ab2137" translate="yes" xml:space="preserve">
          <source>cos</source>
          <target state="translated">cos</target>
        </trans-unit>
        <trans-unit id="a2feafc74f88dca754a5ba43c50a85d79a767e72" translate="yes" xml:space="preserve">
          <source>cosh</source>
          <target state="translated">cosh</target>
        </trans-unit>
        <trans-unit id="01a94a9eda017304c4218cc9ef754964e7a4bb82" translate="yes" xml:space="preserve">
          <source>cosine_embedding_loss</source>
          <target state="translated">cosine_embedding_loss</target>
        </trans-unit>
        <trans-unit id="d2ce2abc11272a6e0a9b2beb1df264b7edbf6722" translate="yes" xml:space="preserve">
          <source>cosine_similarity</source>
          <target state="translated">cosine_similarity</target>
        </trans-unit>
        <trans-unit id="582ebf25c62b7dfa923f85b2bccf2137f1c80078" translate="yes" xml:space="preserve">
          <source>cross_entropy</source>
          <target state="translated">cross_entropy</target>
        </trans-unit>
        <trans-unit id="edca710c39638b12c7d3cb23bad7ea65e3292246" translate="yes" xml:space="preserve">
          <source>ctc_loss</source>
          <target state="translated">ctc_loss</target>
        </trans-unit>
        <trans-unit id="efd2992a3006d55cbc0952dde29ae5314c7ab02d" translate="yes" xml:space="preserve">
          <source>cumsum</source>
          <target state="translated">cumsum</target>
        </trans-unit>
        <trans-unit id="3c363836cf4e16666669a25da280a1865c2d2874" translate="yes" xml:space="preserve">
          <source>d</source>
          <target state="translated">d</target>
        </trans-unit>
        <trans-unit id="b0269e751b572b5261c4a859526a706721a59a77" translate="yes" xml:space="preserve">
          <source>d(x_i, y_i) = \left\lVert {\bf x}_i - {\bf y}_i \right\rVert_p</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77ac4a158452308bf36146e87ebaaf92bc306659" translate="yes" xml:space="preserve">
          <source>d, d+1, \dots, d+k</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c84792d6b06dcb4fb464a3599c532a5302de6be" translate="yes" xml:space="preserve">
          <source>d_{1}, d_{2}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b71fbc45d34e7ab169243c1460ef02ec167f9d7e" translate="yes" xml:space="preserve">
          <source>data_parallel</source>
          <target state="translated">data_parallel</target>
        </trans-unit>
        <trans-unit id="5afdeaf45fa875ebdca4f5b10259f07bd831552d" translate="yes" xml:space="preserve">
          <source>denotes a number of channels,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0686b5da2b2facb066e9541635338f95d152d4ce" translate="yes" xml:space="preserve">
          <source>dense tensor. &lt;code&gt;mat1&lt;/code&gt; need to have &lt;code&gt;sparse_dim = 2&lt;/code&gt;. This function also supports backward for both matrices. Note that the gradients of &lt;code&gt;mat1&lt;/code&gt; is a coalesced sparse tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="021805f8e503cb08daefed1f745cc417b8030e9b" translate="yes" xml:space="preserve">
          <source>derivative of the digamma function on &lt;code&gt;input&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67ff710b17c84214c8942183e80961f832d1afad" translate="yes" xml:space="preserve">
          <source>det</source>
          <target state="translated">det</target>
        </trans-unit>
        <trans-unit id="529a2169843d649acaf9b41df60db6d69af1e991" translate="yes" xml:space="preserve">
          <source>diag</source>
          <target state="translated">diag</target>
        </trans-unit>
        <trans-unit id="76e94348139b788d21edc7b9cd011af238d0de03" translate="yes" xml:space="preserve">
          <source>dict</source>
          <target state="translated">dict</target>
        </trans-unit>
        <trans-unit id="1f8c86417f0d0c4c62d3c379abcb08ce04dc6643" translate="yes" xml:space="preserve">
          <source>dilation</source>
          <target state="translated">dilation</target>
        </trans-unit>
        <trans-unit id="f72f0eaa0227479c0c6279552c4394004a048a69" translate="yes" xml:space="preserve">
          <source>dilation[0]</source>
          <target state="translated">dilation[0]</target>
        </trans-unit>
        <trans-unit id="a5f1833eb579c177c8170541d06a5c04eeef7a1c" translate="yes" xml:space="preserve">
          <source>dilation[1]</source>
          <target state="translated">dilation[1]</target>
        </trans-unit>
        <trans-unit id="4915482caee6a403d6b2fa4290e5a585a36f3ccd" translate="yes" xml:space="preserve">
          <source>dim_arange</source>
          <target state="translated">dim_arange</target>
        </trans-unit>
        <trans-unit id="1b1d6aa0a2a27d76e4e1216685f971555524659c" translate="yes" xml:space="preserve">
          <source>dimensions of &lt;code&gt;input&lt;/code&gt; will be padded. For example, to pad only the last dimension of the input tensor, then &lt;a href=&quot;#torch.nn.functional.pad&quot;&gt;&lt;code&gt;pad&lt;/code&gt;&lt;/a&gt; has the form</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e49a6c72b769d359de7d9a503c4eb0254f3b21d4" translate="yes" xml:space="preserve">
          <source>dimensions, then the resulting indices tensor &lt;code&gt;out&lt;/code&gt; is of size</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8385af3044f435cebb016f524630b6f30227c878" translate="yes" xml:space="preserve">
          <source>dimensions, then the resulting tuple contains</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1fe2142bea8b12e118996616d13df402fbcb462" translate="yes" xml:space="preserve">
          <source>distance as the distance function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c575f3e383df5c81fb057f50806caf1436554d70" translate="yes" xml:space="preserve">
          <source>distributed</source>
          <target state="translated">distributed</target>
        </trans-unit>
        <trans-unit id="0f43887800fc3dd1ea9d5be99a634ed16dbfdec5" translate="yes" xml:space="preserve">
          <source>distributions</source>
          <target state="translated">distributions</target>
        </trans-unit>
        <trans-unit id="26021f1f4700496d68e21ef6d4a1b6945da4c8eb" translate="yes" xml:space="preserve">
          <source>div</source>
          <target state="translated">div</target>
        </trans-unit>
        <trans-unit id="b25730abd0d76320e9d797f0754d1fe2b2d5b11e" translate="yes" xml:space="preserve">
          <source>div_value</source>
          <target state="translated">div_value</target>
        </trans-unit>
        <trans-unit id="5a580c3ce17c428823b52dd91e583d3142d9fceb" translate="yes" xml:space="preserve">
          <source>do &lt;code&gt;itertools.product&lt;/code&gt; on these lists, and finally convert the resulting list into tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17d048c360600626b54c360778a411433b814202" translate="yes" xml:space="preserve">
          <source>dot(other) -&amp;gt; Tensor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faca6eb13adc905c2c03d53e866211d458bacb0c" translate="yes" xml:space="preserve">
          <source>dropout</source>
          <target state="translated">dropout</target>
        </trans-unit>
        <trans-unit id="9a3ad6a58278198fee2ec76a13d0966cc7616717" translate="yes" xml:space="preserve">
          <source>dropout2d</source>
          <target state="translated">dropout2d</target>
        </trans-unit>
        <trans-unit id="5b1d13962c98175c8cc64391f547d2cc13d88a8a" translate="yes" xml:space="preserve">
          <source>dropout3d</source>
          <target state="translated">dropout3d</target>
        </trans-unit>
        <trans-unit id="63eb44aa9dfe2c9c81d4ede5c878a887b7f21327" translate="yes" xml:space="preserve">
          <source>dtype</source>
          <target state="translated">dtype</target>
        </trans-unit>
        <trans-unit id="b0c0156edae4e235440d0bb2e5c6797295893c9a" translate="yes" xml:space="preserve">
          <source>during training. This means that during evaluation the module simply computes an identity function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58e6b3a414a1e090dfc6029add0f3555ccba127f" translate="yes" xml:space="preserve">
          <source>e</source>
          <target state="translated">e</target>
        </trans-unit>
        <trans-unit id="69369f50ac73a1557362536dfad646cedff8d935" translate="yes" xml:space="preserve">
          <source>einsum</source>
          <target state="translated">einsum</target>
        </trans-unit>
        <trans-unit id="795bfe889e7e73fffc28a8d34cb3dec385502fa0" translate="yes" xml:space="preserve">
          <source>element of &lt;code&gt;self&lt;/code&gt; tensor will be set to a value sampled from</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd7fdcec02c67245192b630d5f17b70d83b4c548" translate="yes" xml:space="preserve">
          <source>element of the output tensor will draw a value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="728aeae654a1d24d691913de261209e1f6dcfcb2" translate="yes" xml:space="preserve">
          <source>element-wise, given by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94c154ce2fcf9844aa7cf28cecd748d0de5861ec" translate="yes" xml:space="preserve">
          <source>element-wise.</source>
          <target state="translated">element-wise.</target>
        </trans-unit>
        <trans-unit id="98382eaa4e072702f7a1188d7c097156a0f2afb1" translate="yes" xml:space="preserve">
          <source>elements each and can be of any shape that the distance function can handle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7910b3b0e6400173df90d959d29e9a6848bf14f0" translate="yes" xml:space="preserve">
          <source>elements each the sum operation still operates over all the elements, and divides by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb020821ccc1b8004a6e4d3c5f15dec75c2f2582" translate="yes" xml:space="preserve">
          <source>elements each.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ac570a2eeffbf14705a23f5e2262b8b4753f7d8" translate="yes" xml:space="preserve">
          <source>elementwise, for all elements of &lt;code&gt;input&lt;/code&gt; and &lt;code&gt;other&lt;/code&gt;. The behaviour of this function is analogous to &lt;a href=&quot;https://docs.scipy.org/doc/numpy/reference/generated/numpy.allclose.html&quot;&gt;numpy.allclose&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="056ee9e1c3b56fdb7ad312aa7daab4a1cdeaa243" translate="yes" xml:space="preserve">
          <source>elu</source>
          <target state="translated">elu</target>
        </trans-unit>
        <trans-unit id="2f81ba1b3d35bd109ae40dc22cfa8b1944e76c25" translate="yes" xml:space="preserve">
          <source>embedding</source>
          <target state="translated">embedding</target>
        </trans-unit>
        <trans-unit id="acdeafeb5673da854efc3282413d0a24eb1ee937" translate="yes" xml:space="preserve">
          <source>embedding_bag</source>
          <target state="translated">embedding_bag</target>
        </trans-unit>
        <trans-unit id="e8cf5623df79323cf07b84946f4bf4b08e739eb6" translate="yes" xml:space="preserve">
          <source>embedding_dim</source>
          <target state="translated">embedding_dim</target>
        </trans-unit>
        <trans-unit id="ad87109bfff0765f4dd8cf4943b04d16a4070fea" translate="yes" xml:space="preserve">
          <source>empty</source>
          <target state="translated">empty</target>
        </trans-unit>
        <trans-unit id="ad6a56a84bfa43a0b11f465396821af9906a83a1" translate="yes" xml:space="preserve">
          <source>empty_like</source>
          <target state="translated">empty_like</target>
        </trans-unit>
        <trans-unit id="a5dba71bfa83dbc1dcc2e0a4bcb2be3c4b3c4b19" translate="yes" xml:space="preserve">
          <source>enable_grad</source>
          <target state="translated">enable_grad</target>
        </trans-unit>
        <trans-unit id="7a92f3d26362d6557d5701de77a63a01df61e57f" translate="yes" xml:space="preserve">
          <source>end</source>
          <target state="translated">end</target>
        </trans-unit>
        <trans-unit id="e123da32ed3cb35794b549e3bc184ed4edde2c0d" translate="yes" xml:space="preserve">
          <source>entrypoints</source>
          <target state="translated">entrypoints</target>
        </trans-unit>
        <trans-unit id="85962fc8c09832447405cdbb1a7c3c74e6d13411" translate="yes" xml:space="preserve">
          <source>eps</source>
          <target state="translated">eps</target>
        </trans-unit>
        <trans-unit id="a9c619705e8fcaa770885cac1837ae950f5c8ba5" translate="yes" xml:space="preserve">
          <source>eq</source>
          <target state="translated">eq</target>
        </trans-unit>
        <trans-unit id="95d33a0cd46e8991d6857ce029dc0fca3da7cba3" translate="yes" xml:space="preserve">
          <source>erf</source>
          <target state="translated">erf</target>
        </trans-unit>
        <trans-unit id="c42fba4eefc5a3a04647c6db7ee106c846538ad5" translate="yes" xml:space="preserve">
          <source>everywhere in the window. If</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86b77de2442fe05048f19c766138a551aa2543be" translate="yes" xml:space="preserve">
          <source>exp</source>
          <target state="translated">exp</target>
        </trans-unit>
        <trans-unit id="0bf04e42d3807913b6f7c1b76508534bf5b1ebaa" translate="yes" xml:space="preserve">
          <source>expand</source>
          <target state="translated">expand</target>
        </trans-unit>
        <trans-unit id="9847ad26b5e5b2dc33d2e2aa35ca219bce9c28ce" translate="yes" xml:space="preserve">
          <source>expand_as</source>
          <target state="translated">expand_as</target>
        </trans-unit>
        <trans-unit id="69cc8412997be34d1bedab92a00c78cd3e91e52a" translate="yes" xml:space="preserve">
          <source>exponent</source>
          <target state="translated">exponent</target>
        </trans-unit>
        <trans-unit id="79df4b1718127a8c81390d4196d6cbfc976105f0" translate="yes" xml:space="preserve">
          <source>eye</source>
          <target state="translated">eye</target>
        </trans-unit>
        <trans-unit id="4a0a19218e082a343a1b17e5333409af9d98f0f5" translate="yes" xml:space="preserve">
          <source>f</source>
          <target state="translated">f</target>
        </trans-unit>
        <trans-unit id="6dfe0f02a2095ed14bd6f18a1dc37f2b44ea823f" translate="yes" xml:space="preserve">
          <source>f(X) = \sqrt[p]{\sum_{x \in X} x^{p}}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9053d6d6ecdce8aa869d69d9534d36224397c68a" translate="yes" xml:space="preserve">
          <source>f(X=k) = p^{k - 1} (1 - p)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbf152a2dc067be05d9e916db832f8559dc55db9" translate="yes" xml:space="preserve">
          <source>f(x) = \dfrac{1}{\pi} \dfrac{\sigma}{(x - \text{median})^2 + \sigma^2}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1cd548b422198eb02b288f790cf5f03cd480e92" translate="yes" xml:space="preserve">
          <source>f(x) = \dfrac{1}{x \sigma \sqrt{2\pi}}\ e^{-\frac{(\ln x - \mu)^2}{2\sigma^2}}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e000dc224fe4dcf754759f57e09e53c889d0e035" translate="yes" xml:space="preserve">
          <source>f(x) = \lambda e^{-\lambda x}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62b2c80f4d03f9d2e41ad42964f369e7520f5f39" translate="yes" xml:space="preserve">
          <source>f_t</source>
          <target state="translated">f_t</target>
        </trans-unit>
        <trans-unit id="22c38a4fc22bbd337c4393a5f593cd1f6aeb7820" translate="yes" xml:space="preserve">
          <source>faces:</source>
          <target state="translated">faces:</target>
        </trans-unit>
        <trans-unit id="40a4f4ba45dbdf8bc5cb79351a51e5e2f79816e6" translate="yes" xml:space="preserve">
          <source>fan_in</source>
          <target state="translated">fan_in</target>
        </trans-unit>
        <trans-unit id="eb3f73d1acb0802d72c0fb44140887ff4ccbc68c" translate="yes" xml:space="preserve">
          <source>fan_mode</source>
          <target state="translated">fan_mode</target>
        </trans-unit>
        <trans-unit id="a10da5a280a767f042e2772d41390ed1e45dffe0" translate="yes" xml:space="preserve">
          <source>fan_out</source>
          <target state="translated">fan_out</target>
        </trans-unit>
        <trans-unit id="e52844b027e8e2ae091461389eb94bfc603c94c4" translate="yes" xml:space="preserve">
          <source>feature_alpha_dropout</source>
          <target state="translated">feature_alpha_dropout</target>
        </trans-unit>
        <trans-unit id="bacef8c5a0403758a34a8d363562e7b7769cb548" translate="yes" xml:space="preserve">
          <source>flatten</source>
          <target state="translated">flatten</target>
        </trans-unit>
        <trans-unit id="685e80366130387cb75c055248326976d16fdf8d" translate="yes" xml:space="preserve">
          <source>float</source>
          <target state="translated">float</target>
        </trans-unit>
        <trans-unit id="3684c9d3c05e7bee19e2728c6a5b2bbccf0cd9c7" translate="yes" xml:space="preserve">
          <source>floor</source>
          <target state="translated">floor</target>
        </trans-unit>
        <trans-unit id="765263b21ddecd6f21daf9b79ddf8f84f6f9eb7f" translate="yes" xml:space="preserve">
          <source>floor_divide</source>
          <target state="translated">floor_divide</target>
        </trans-unit>
        <trans-unit id="c5b2b01d33b40a69b0f829fd1827cb8201538518" translate="yes" xml:space="preserve">
          <source>fold</source>
          <target state="translated">fold</target>
        </trans-unit>
        <trans-unit id="43eef9a62abb8b1e1654f8a890aae054abffa82b" translate="yes" xml:space="preserve">
          <source>for</source>
          <target state="translated">for</target>
        </trans-unit>
        <trans-unit id="2e4827fe5bf1cfb73683f6798dea2a8506231170" translate="yes" xml:space="preserve">
          <source>for &amp;lsquo;global&amp;rsquo;, the mask will be computed across all entries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7639d736a0fbebd5cfcff0a35b1ca0183e3223af" translate="yes" xml:space="preserve">
          <source>for &amp;lsquo;structured&amp;rsquo;, the mask will be computed from the nonmasked channels in the tensor;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="209e187de0864f4d9cd8485d4a363fa7a919bc89" translate="yes" xml:space="preserve">
          <source>for &amp;lsquo;unstructured&amp;rsquo;, the mask will be computed from the raveled list of nonmasked entries;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d206e33e0bd150019997727943b2cdfba5e027cd" translate="yes" xml:space="preserve">
          <source>for 2D or</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f2e16b9f28278f3cfc82040a7f611c7cc7bce2f" translate="yes" xml:space="preserve">
          <source>for 3D) Example: torch.Size((32, 3, 24, 24))</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99ecdd4b3aa2a115aac8a5effd24f8f731b94fbe" translate="yes" xml:space="preserve">
          <source>for K-dimensional loss.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="878a1026dad14bfef6edfae386949642f277900f" translate="yes" xml:space="preserve">
          <source>for all</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0879065e29809b515d353f79fe66e9622d710c2a" translate="yes" xml:space="preserve">
          <source>for each target sequence, such that &lt;code&gt;target_n = targets[n,0:s_n]&lt;/code&gt; for each target in a batch. Lengths must each be</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c00dac29f013319fe3523dd1737ca9d55921be7" translate="yes" xml:space="preserve">
          <source>for good performance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53226af33b8bde8c026266139d061296f5fab90c" translate="yes" xml:space="preserve">
          <source>for multi-label binary classification,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8d7859ba59da1eebcd14ee2a79455d1736514b8" translate="yes" xml:space="preserve">
          <source>for normalization.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d6d8a90ee85a327b96fb4d5a45741dfa87558f3" translate="yes" xml:space="preserve">
          <source>for single-label binary classification),</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce10f7ccaf2ee0911862d77ea2c1f33dd2892c4b" translate="yes" xml:space="preserve">
          <source>for the &lt;code&gt;K&lt;/code&gt;-dimensional case (described later).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d76c4a2ce66eb8697b673e760ac2cacb89695afb" translate="yes" xml:space="preserve">
          <source>for which the eigenvalues and eigenvectors will be computed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a9d94765cba0644f75f6db1e8b7d75bcdd6603a" translate="yes" xml:space="preserve">
          <source>form, targets are padded to the length of the longest sequence, and stacked. In the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="352478d586ad727e910c70e540ae19c5badbd0cb" translate="yes" xml:space="preserve">
          <source>form, the targets are assumed to be un-padded and concatenated within 1 dimension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44d05701dac99afab7ebbca7875bfad6d4edfa48" translate="yes" xml:space="preserve">
          <source>frame_length</source>
          <target state="translated">frame_length</target>
        </trans-unit>
        <trans-unit id="3338101a972dc14f62f27985af8ea3ba83453e48" translate="yes" xml:space="preserve">
          <source>frobenius_norm</source>
          <target state="translated">frobenius_norm</target>
        </trans-unit>
        <trans-unit id="0b1e95cfd9775191a7224d0a218ae79187e80c1d" translate="yes" xml:space="preserve">
          <source>from</source>
          <target state="translated">from</target>
        </trans-unit>
        <trans-unit id="b289b4c194a25ff5ce4e1adaa106c2758610690c" translate="yes" xml:space="preserve">
          <source>from an expected input of size</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bed75b5b9758690dfa2e72d0432b5d4093592de" translate="yes" xml:space="preserve">
          <source>from input of size</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52e6d8ab88471af82da12a0eae7aab01357e3881" translate="yes" xml:space="preserve">
          <source>full</source>
          <target state="translated">full</target>
        </trans-unit>
        <trans-unit id="14067496699ea471956d7577c31a0037a911d9c7" translate="yes" xml:space="preserve">
          <source>full_like</source>
          <target state="translated">full_like</target>
        </trans-unit>
        <trans-unit id="671a0b5ed1501e9f1a0b90392965e7a4d530020f" translate="yes" xml:space="preserve">
          <source>function to an n-dimensional input Tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e767f5c5b1bad3a662c327ecacaae4b49da0f3ab" translate="yes" xml:space="preserve">
          <source>function to an n-dimensional input Tensor. The LogSoftmax formulation can be simplified as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54fd1711209fb1c0781092374132c66e79e2241b" translate="yes" xml:space="preserve">
          <source>g</source>
          <target state="translated">g</target>
        </trans-unit>
        <trans-unit id="3d4ff73fe6b68ac5fa741c7936f7b9096bac805f" translate="yes" xml:space="preserve">
          <source>g_t</source>
          <target state="translated">g_t</target>
        </trans-unit>
        <trans-unit id="5fe05a50c1e04e07824c1e3f641a4e83e2c27d98" translate="yes" xml:space="preserve">
          <source>gain</source>
          <target state="translated">gain</target>
        </trans-unit>
        <trans-unit id="d7eee0be1ee642e5fcebacd9c9085b6bf405458c" translate="yes" xml:space="preserve">
          <source>gather</source>
          <target state="translated">gather</target>
        </trans-unit>
        <trans-unit id="5258731c9021cec8a550667dbc1431c7cb76d465" translate="yes" xml:space="preserve">
          <source>gcd(0, 0) = 0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9060bd5525711459bfd3fbd9a5d9658cfa6338a" translate="yes" xml:space="preserve">
          <source>ge</source>
          <target state="translated">ge</target>
        </trans-unit>
        <trans-unit id="437fd76f35d07aa59dc51e50c33eaa661319d53a" translate="yes" xml:space="preserve">
          <source>gelu</source>
          <target state="translated">gelu</target>
        </trans-unit>
        <trans-unit id="648aa578424e1797bec1597494c3706c14103529" translate="yes" xml:space="preserve">
          <source>given axis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca14ea9a141e8f926ec0878ad6d95e7178d8499f" translate="yes" xml:space="preserve">
          <source>given by &lt;code&gt;dim&lt;/code&gt; and other indices</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2fff6c293671617b46b3fde594877866175ab03" translate="yes" xml:space="preserve">
          <source>global pixelwise acc</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a146f11ed1a6c5f953c8d5e204445076bab4f23a" translate="yes" xml:space="preserve">
          <source>glu</source>
          <target state="translated">glu</target>
        </trans-unit>
        <trans-unit id="ca1948958a0c766e677e0c0f62ddbca879eccfce" translate="yes" xml:space="preserve">
          <source>grid_sample</source>
          <target state="translated">grid_sample</target>
        </trans-unit>
        <trans-unit id="961d793f7b4dec02c571bfd38b4379646df8d627" translate="yes" xml:space="preserve">
          <source>group_norm</source>
          <target state="translated">group_norm</target>
        </trans-unit>
        <trans-unit id="0a894db7c792e10a79e380cb0453380548bbacb5" translate="yes" xml:space="preserve">
          <source>groups</source>
          <target state="translated">groups</target>
        </trans-unit>
        <trans-unit id="7ddf988c838812a4318332f2967bbe1035b2db75" translate="yes" xml:space="preserve">
          <source>gt</source>
          <target state="translated">gt</target>
        </trans-unit>
        <trans-unit id="8ed5a887890eebc588bf6c16c1c51d26cd730e11" translate="yes" xml:space="preserve">
          <source>gumbel_softmax</source>
          <target state="translated">gumbel_softmax</target>
        </trans-unit>
        <trans-unit id="27d5482eebd075de44389774fce28c69f45c8a75" translate="yes" xml:space="preserve">
          <source>h</source>
          <target state="translated">h</target>
        </trans-unit>
        <trans-unit id="5323b8b16c2a7cdd2b78ab0c4a7e4c485cc241f7" translate="yes" xml:space="preserve">
          <source>h' = \tanh(W_{ih} x + b_{ih} + W_{hh} h + b_{hh})</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0fa515b5d5faa408cfd5716b035bb25511e3dc6" translate="yes" xml:space="preserve">
          <source>h^{(l-1)}_t</source>
          <target state="translated">h^{(l-1)}_t</target>
        </trans-unit>
        <trans-unit id="51a14870356c7b15f6ce06f06ad77341f4c25c5e" translate="yes" xml:space="preserve">
          <source>h_t</source>
          <target state="translated">h_t</target>
        </trans-unit>
        <trans-unit id="d4177d9fb092485b1ab4d66b2c35aefd92967209" translate="yes" xml:space="preserve">
          <source>h_t = \tanh(W_{ih} x_t + b_{ih} + W_{hh} h_{(t-1)} + b_{hh})</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edec3276de0e6a50cd59f6a51cdefc567a684778" translate="yes" xml:space="preserve">
          <source>h_{(t-1)}</source>
          <target state="translated">h_{(t-1)}</target>
        </trans-unit>
        <trans-unit id="8218b733929c625a5ca05b3a78451a8e71f6239a" translate="yes" xml:space="preserve">
          <source>h_{t-1}</source>
          <target state="translated">h_{t-1}</target>
        </trans-unit>
        <trans-unit id="f18eac210e3b6e5368159b8374707b2301aaad6a" translate="yes" xml:space="preserve">
          <source>hardshrink</source>
          <target state="translated">hardshrink</target>
        </trans-unit>
        <trans-unit id="91092735a9a0996c4c8db5e4cf35c3f3369f46e1" translate="yes" xml:space="preserve">
          <source>hardsigmoid</source>
          <target state="translated">hardsigmoid</target>
        </trans-unit>
        <trans-unit id="1877bb9b119c3aa8d0ebe0af14e430c9d89741c5" translate="yes" xml:space="preserve">
          <source>hardswish</source>
          <target state="translated">hardswish</target>
        </trans-unit>
        <trans-unit id="7693d309def042328c74d1d4495bf3c358a38fff" translate="yes" xml:space="preserve">
          <source>hardtanh</source>
          <target state="translated">hardtanh</target>
        </trans-unit>
        <trans-unit id="51fae6d0fd4d217a71194522b05ac7be10f349f8" translate="yes" xml:space="preserve">
          <source>has shape</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="922748224776ddeac74356c8c6594dbc846ad1d9" translate="yes" xml:space="preserve">
          <source>has the same shape as &lt;code&gt;input&lt;/code&gt;. If &lt;code&gt;reduction&lt;/code&gt; is not &lt;code&gt;'none'&lt;/code&gt; (default &lt;code&gt;'mean'&lt;/code&gt;), then:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2833d3663cb225aeaf19e8584f023cd9095c4ad" translate="yes" xml:space="preserve">
          <source>heaviside</source>
          <target state="translated">heaviside</target>
        </trans-unit>
        <trans-unit id="4aa797b285de9f510374654872f7ef5c09d3d205" translate="yes" xml:space="preserve">
          <source>hidden_size</source>
          <target state="translated">hidden_size</target>
        </trans-unit>
        <trans-unit id="d50987e6f83076806552e7769dc048d8591266a6" translate="yes" xml:space="preserve">
          <source>hinge_embedding_loss</source>
          <target state="translated">hinge_embedding_loss</target>
        </trans-unit>
        <trans-unit id="6e5873871f162ed3a647b3f0520b19caa41a7d98" translate="yes" xml:space="preserve">
          <source>hop_length</source>
          <target state="translated">hop_length</target>
        </trans-unit>
        <trans-unit id="042dc4512fa3d391c5170cf3aa61e6a638f84342" translate="yes" xml:space="preserve">
          <source>i</source>
          <target state="translated">i</target>
        </trans-unit>
        <trans-unit id="d0994a899d0d0e4b3e4fb6955532b16be69f7a30" translate="yes" xml:space="preserve">
          <source>i \in [0, \min\{d_{1}, d_{2}\} - 1]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b34e670dc1dd2f83beea9d02a2fabe4859ced03e" translate="yes" xml:space="preserve">
          <source>i \in \left\{0, \; \cdots , \; \text{x.nElement}() - 1\right\}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15a41683b807ba94453d7000a927a01ae55e9847" translate="yes" xml:space="preserve">
          <source>i \neq y</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7b7b5832587d6b37cd81da3cdcdb39cbdb15221" translate="yes" xml:space="preserve">
          <source>i \neq y[j]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4f46ec065a06a3c21acf2530b64d0e2c92e4be9" translate="yes" xml:space="preserve">
          <source>i^{th}</source>
          <target state="translated">i^{th}</target>
        </trans-unit>
        <trans-unit id="04d43787ebf63b7b0a6f65c6a1dec662c13b1614" translate="yes" xml:space="preserve">
          <source>i_t</source>
          <target state="translated">i_t</target>
        </trans-unit>
        <trans-unit id="4e7f626df794f6491574a236f22c100c34ed804f" translate="yes" xml:space="preserve">
          <source>idx</source>
          <target state="translated">idx</target>
        </trans-unit>
        <trans-unit id="958f57f57d72a30f329ee5538f21b0257a49a46e" translate="yes" xml:space="preserve">
          <source>if</source>
          <target state="translated">if</target>
        </trans-unit>
        <trans-unit id="4afd45cea30487b60500784b166e8d234a935cc8" translate="yes" xml:space="preserve">
          <source>if &lt;code&gt;reduction&lt;/code&gt; is &lt;code&gt;'none'&lt;/code&gt;, or a scalar otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a074e959bd34fe34ca1b538a4df0005b082f7aa0" translate="yes" xml:space="preserve">
          <source>if &lt;code&gt;return_complex&lt;/code&gt; is true, or a real tensor of size</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2275067d9b3bf6549613fb9c3cb80e7ce10e6436" translate="yes" xml:space="preserve">
          <source>if &lt;code&gt;some:&lt;/code&gt; is &lt;code&gt;True&lt;/code&gt; and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b30d4aa8b23f2c1a73d33c98b66cabb5aec90859" translate="yes" xml:space="preserve">
          <source>if eps</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29c623ebcccac558089dc75935652bd6784a53c6" translate="yes" xml:space="preserve">
          <source>if eps is None</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcdc9cbefc6d651838dee86e4db983a49b73e952" translate="yes" xml:space="preserve">
          <source>if input &amp;gt; 0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdddb6efc92a165940c7f7758c9c56424310703e" translate="yes" xml:space="preserve">
          <source>if input &amp;lt; 0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="270ed0b8d11312345be6298858309fc825ee307c" translate="yes" xml:space="preserve">
          <source>if input == 0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e929d2ed6f5cf4ae84ea64bf23b6821b2b8f82b8" translate="yes" xml:space="preserve">
          <source>if min</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85f02dfad15f5c3b2368b34bcb57ba1e3d8bc0f1" translate="yes" xml:space="preserve">
          <source>if reduction</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="823c5c75472b28251d58d678737c34bba07c92c2" translate="yes" xml:space="preserve">
          <source>if the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="172116cdefdd346dc8a96d51b71af0456e2c74ac" translate="yes" xml:space="preserve">
          <source>ignore_index</source>
          <target state="translated">ignore_index</target>
        </trans-unit>
        <trans-unit id="785f1a0db8733f33a69b175141648bd8aaf47119" translate="yes" xml:space="preserve">
          <source>im2col</source>
          <target state="translated">im2col</target>
        </trans-unit>
        <trans-unit id="e0ba4473f80070d36ca15a9bcce41d44c1617284" translate="yes" xml:space="preserve">
          <source>img_tensor: Default is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af10ef20dd9060bbeead0afbc55381a66af442ef" translate="yes" xml:space="preserve">
          <source>in</source>
          <target state="translated">in</target>
        </trans-unit>
        <trans-unit id="338141929c5d4186e6cf118f753febde0ce9c71a" translate="yes" xml:space="preserve">
          <source>in &lt;a href=&quot;#torch.nn.ModuleDict.update&quot;&gt;&lt;code&gt;update()&lt;/code&gt;&lt;/a&gt;, the order of the merged &lt;code&gt;OrderedDict&lt;/code&gt;, &lt;code&gt;dict&lt;/code&gt; (started from Python 3.6) or another &lt;a href=&quot;#torch.nn.ModuleDict&quot;&gt;&lt;code&gt;ModuleDict&lt;/code&gt;&lt;/a&gt; (the argument to &lt;a href=&quot;#torch.nn.ModuleDict.update&quot;&gt;&lt;code&gt;update()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78dd38a35052c801113fd435f83f1d650cf4eb34" translate="yes" xml:space="preserve">
          <source>in &lt;a href=&quot;#torch.nn.ParameterDict.update&quot;&gt;&lt;code&gt;update()&lt;/code&gt;&lt;/a&gt;, the order of the merged &lt;code&gt;OrderedDict&lt;/code&gt; or another &lt;a href=&quot;#torch.nn.ParameterDict&quot;&gt;&lt;code&gt;ParameterDict&lt;/code&gt;&lt;/a&gt; (the argument to &lt;a href=&quot;#torch.nn.ParameterDict.update&quot;&gt;&lt;code&gt;update()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac47ba3f5dcf61039e3dbfde50a7b76f5b1813bd" translate="yes" xml:space="preserve">
          <source>in above formula is in fact</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac0fcea99d84aef38a7ebd15b77f515dc643ccc0" translate="yes" xml:space="preserve">
          <source>in case of 2D Loss, or</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30d6bcdb4d4eeb2ce3b90d137e7eb4aad845cc54" translate="yes" xml:space="preserve">
          <source>in range</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e6091e2e5eee761268d5cb24a9fa7fe2e7a6b12" translate="yes" xml:space="preserve">
          <source>in the case of &lt;code&gt;K&lt;/code&gt;-dimensional loss.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="312063d20b709a534ca099497772c6cc2e37417f" translate="yes" xml:space="preserve">
          <source>in the case of K-dimensional loss.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0db9bcd97631db25458a6cf9f7640eb4265d8055" translate="yes" xml:space="preserve">
          <source>in the equation above</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8d2d57ba7f4690c50f8ab381252c04281b968e8" translate="yes" xml:space="preserve">
          <source>in1_features</source>
          <target state="translated">in1_features</target>
        </trans-unit>
        <trans-unit id="af5b4834366238f75919e21620b2d195be41f760" translate="yes" xml:space="preserve">
          <source>in2_features</source>
          <target state="translated">in2_features</target>
        </trans-unit>
        <trans-unit id="63f37a7344480568c1cb56058447b3f2b5a566af" translate="yes" xml:space="preserve">
          <source>in_channels</source>
          <target state="translated">in_channels</target>
        </trans-unit>
        <trans-unit id="c3bfc76792d69606d2fc2f31a7a59e4f5bce4773" translate="yes" xml:space="preserve">
          <source>in_features</source>
          <target state="translated">in_features</target>
        </trans-unit>
        <trans-unit id="830f12d3a9b25e233484aa530f5828806f8e46e0" translate="yes" xml:space="preserve">
          <source>increases the precision.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bd8ee04129b75f89f764ebdf03b1712215c710f" translate="yes" xml:space="preserve">
          <source>increases the recall,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73f11c3350e4bc0bc6271bc2a91f09b8eb2a5cee" translate="yes" xml:space="preserve">
          <source>index_copy</source>
          <target state="translated">index_copy</target>
        </trans-unit>
        <trans-unit id="930e4049f723e48815a76fa67195e59dcc107a9d" translate="yes" xml:space="preserve">
          <source>index_fill</source>
          <target state="translated">index_fill</target>
        </trans-unit>
        <trans-unit id="31681ab407f85d90e244e07862a1276094081ff4" translate="yes" xml:space="preserve">
          <source>index_put</source>
          <target state="translated">index_put</target>
        </trans-unit>
        <trans-unit id="30be7dad7a702b5932cb41dae510778f7af5d433" translate="yes" xml:space="preserve">
          <source>index_select</source>
          <target state="translated">index_select</target>
        </trans-unit>
        <trans-unit id="1e388b4c7f821f5f9bb3bb04c94103b42e3cc70d" translate="yes" xml:space="preserve">
          <source>indexing, advanced indexing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa3dfef42e0c22b5d2e5e3638c1b61b47bbb10da" translate="yes" xml:space="preserve">
          <source>inf</source>
          <target state="translated">inf</target>
        </trans-unit>
        <trans-unit id="140f86aae51ab9e1cda9b4254fe98a74eb54c1a1" translate="yes" xml:space="preserve">
          <source>input</source>
          <target state="translated">input</target>
        </trans-unit>
        <trans-unit id="e842e3c37a571d685a7ab0dd83b56f6b5c44f281" translate="yes" xml:space="preserve">
          <source>input (Tensor): the input tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86ea8136266d6849fda0de890a65c03d9c3b0685" translate="yes" xml:space="preserve">
          <source>input = U \times diag(S) \times V^T</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04012fb57a54fe454350516938a970f239820869" translate="yes" xml:space="preserve">
          <source>input \times \beta &amp;gt; threshold</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71620129db6ecd9a4657b36e9a42572ed8e210e5" translate="yes" xml:space="preserve">
          <source>input dimensions and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb72c5c49df77b0d5a0f438a6840abdd5b3fae19" translate="yes" xml:space="preserve">
          <source>input length</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94afd6aa9099b7a24f8bb7ab9b2ed2f6eb5f4d78" translate="yes" xml:space="preserve">
          <source>input planes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db1f98c50916408bd297ceb67cc430c5dc3d8981" translate="yes" xml:space="preserve">
          <source>input shape from an expected input of size</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fdc28f9ba5698999c44ee8db842c569cb748650" translate="yes" xml:space="preserve">
          <source>input1:</source>
          <target state="translated">input1:</target>
        </trans-unit>
        <trans-unit id="e29122fa97a159ce8432fa710360d8d502d0f67c" translate="yes" xml:space="preserve">
          <source>input2:</source>
          <target state="translated">input2:</target>
        </trans-unit>
        <trans-unit id="f232d2a01db862fbb2d5aa1052a67e53812fb0f3" translate="yes" xml:space="preserve">
          <source>input:</source>
          <target state="translated">input:</target>
        </trans-unit>
        <trans-unit id="819317b95164ca58c781897c024099a87a5a2aeb" translate="yes" xml:space="preserve">
          <source>input_size</source>
          <target state="translated">input_size</target>
        </trans-unit>
        <trans-unit id="335d9225f695c24c5f50ff6e852e04710d9a3c54" translate="yes" xml:space="preserve">
          <source>instance_norm</source>
          <target state="translated">instance_norm</target>
        </trans-unit>
        <trans-unit id="46f8ab7c0cff9df7cd124852e26022a6bf89e315" translate="yes" xml:space="preserve">
          <source>int</source>
          <target state="translated">int</target>
        </trans-unit>
        <trans-unit id="a1484f5e79255736d0486db17d8b5a0f5d4acd16" translate="yes" xml:space="preserve">
          <source>interpolate</source>
          <target state="translated">interpolate</target>
        </trans-unit>
        <trans-unit id="9cf1c055d3e633fb84aae78fa6ec312de5fbf0a2" translate="yes" xml:space="preserve">
          <source>inv = (u^T u)^{{-1}}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84369e24ea9b305c45563c270b29ea72fdfc9d58" translate="yes" xml:space="preserve">
          <source>inv = (uu^{{T}})^{{-1}}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad5eb9bf5e670c113846d7a1baa4c52e11b9c4e7" translate="yes" xml:space="preserve">
          <source>is 1, then this is a no-op - the original matrix is returned as is.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75e9b4ec61726a25dd9dc59e314e5f40dfeb02ba" translate="yes" xml:space="preserve">
          <source>is a Bernoulli random variable which is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c0d5a6c6e65194de4f85156c81d8bd83eae6e11" translate="yes" xml:space="preserve">
          <source>is a batch of symmetric positive-definite matrices, then the returned tensor will be composed of upper-triangular Cholesky factors of each of the individual matrices. Similarly, when &lt;code&gt;upper&lt;/code&gt; is &lt;code&gt;False&lt;/code&gt;, the returned tensor will be composed of lower-triangular Cholesky factors of each of the individual matrices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2701b4bf633937dd8dbd97720bf3b9146fa3dc29" translate="yes" xml:space="preserve">
          <source>is a batch size,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1318b5080bf9dc677f17bd6ba8ec63da205e899" translate="yes" xml:space="preserve">
          <source>is a data matrix with &lt;code&gt;m&lt;/code&gt; samples and &lt;code&gt;n&lt;/code&gt; features</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf20ae3beed6bd6286eed10d77e2341516a43d16" translate="yes" xml:space="preserve">
          <source>is a height of input planes in pixels, and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3257d977c964419c8c35fb00e3fe8dd46cd0dd9" translate="yes" xml:space="preserve">
          <source>is a learnable parameter. When called without arguments, &lt;code&gt;nn.PReLU()&lt;/code&gt; uses a single parameter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8d2dcb8a733fb425c1ebe2b1b73b8f04aef8041" translate="yes" xml:space="preserve">
          <source>is a length of signal sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="134dbb01e549f9e9b797b699cc27dc5bb794e212" translate="yes" xml:space="preserve">
          <source>is a non-negative margin representing the minimum difference between the positive and negative distances that is required for the loss to be 0. The input tensors have</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea2defd0053fa18f2c571f8c72bd1c43d32217be" translate="yes" xml:space="preserve">
          <source>is a nonnegative, real-valued function quantifying the closeness of two tensors, referred to as the &lt;code&gt;distance_function&lt;/code&gt;; and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcba52aaaf1c377f2c080b0bce7edc1b90f4daae" translate="yes" xml:space="preserve">
          <source>is a parameter passed to &lt;code&gt;AdaptiveLogSoftmaxWithLoss&lt;/code&gt; constructor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="765fdf1b2a2502dfb10fc7a1005cd627d87b6859" translate="yes" xml:space="preserve">
          <source>is also suitable as long as corresponding &lt;code&gt;dataformats&lt;/code&gt; argument is passed, e.g. &lt;code&gt;CHW&lt;/code&gt;, &lt;code&gt;HWC&lt;/code&gt;, &lt;code&gt;HW&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87fbf65ca7212a7c2bc4dca80e1e6a67efe28556" translate="yes" xml:space="preserve">
          <source>is and lower triangular and &lt;code&gt;c&lt;/code&gt; is returned such that:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a145e38490fe68a72c87d17bdbceca75a7f228c" translate="yes" xml:space="preserve">
          <source>is batch dimension,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfeb99a04d9b1ec7ec6ef2f4d6c1eede7a654810" translate="yes" xml:space="preserve">
          <source>is called the order of the polygamma function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faba7df78e4d1c2b26c8370c6bfebb8cfb3c42e0" translate="yes" xml:space="preserve">
          <source>is either 0 or 1, one of the log terms would be mathematically undefined in the above loss equation. PyTorch chooses to set</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bea43bb939ee6ac17ba706d8fae419a2185708b" translate="yes" xml:space="preserve">
          <source>is even.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="430d8b6d7901720f9e8bf07d0013488bbddfbb5a" translate="yes" xml:space="preserve">
          <source>is exported as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c5a6652e56c4ba0fe144731aaee3fa58bf211a2" translate="yes" xml:space="preserve">
          <source>is followed).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea2c2f749cb016f338cccf6972f555011eb314c2" translate="yes" xml:space="preserve">
          <source>is formed by the spatial dimensions of &lt;code&gt;input&lt;/code&gt; (</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae48ab68c0a2f5a2d8c41ca4f4aa31fffcd1a211" translate="yes" xml:space="preserve">
          <source>is given by:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fa25d48d7b27261d66e89060b7979d93f8ad97a" translate="yes" xml:space="preserve">
          <source>is given, then SVD is computed for the matrix</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c35afa5dccb8353ed11723f31ec506d7a966af21" translate="yes" xml:space="preserve">
          <source>is independently sampled from</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82ae58379438f65f353304e26d484dc4cfc7d4b5" translate="yes" xml:space="preserve">
          <source>is lower triangular such that the returned tensor is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0ab666308c71dc7bee740ac866a6fc94c01ae73" translate="yes" xml:space="preserve">
          <source>is m x q matrix</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10ff45e8493a314dbd9e1e63a6cde1540a2aead4" translate="yes" xml:space="preserve">
          <source>is n x q matrix</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c8058ec06e93587a9709247f5405ee5e01679be" translate="yes" xml:space="preserve">
          <source>is not specified then &lt;code&gt;n&lt;/code&gt; specifies the size of the generated random approximation of eigenvectors. Default value for &lt;code&gt;n&lt;/code&gt; is &lt;code&gt;k&lt;/code&gt;. If</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c2270cd34d617fbfb021aa3bc5a116ad003176c" translate="yes" xml:space="preserve">
          <source>is not supported on the GPU.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2eff3310e520d3d5fbc37a6263fe271e3d32aaae" translate="yes" xml:space="preserve">
          <source>is over all spatial dimensions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d8e0c1f7734dc274731f0d91f70cb0de5d47373" translate="yes" xml:space="preserve">
          <source>is q-vector</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7beb819084fde1f665b79b94057f73079e669ba8" translate="yes" xml:space="preserve">
          <source>is randomly sampled from uniform distribution</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bd9d616cf11403018791802f26f77f9b237bc15" translate="yes" xml:space="preserve">
          <source>is specified, the value of &lt;code&gt;n&lt;/code&gt; (when specified) must be the number of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0130282542d2518652245d74065adbc1572d9bfe" translate="yes" xml:space="preserve">
          <source>is suggested. If &lt;code&gt;margin&lt;/code&gt; is missing, the default value is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccf5fc10cd0c99e43e001de97a0bbb39ad5bb8a7" translate="yes" xml:space="preserve">
          <source>is the Cumulative Distribution Function for Gaussian Distribution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2d1a89245b61df6a2b4e3ef50ec21c4d5ca28c4" translate="yes" xml:space="preserve">
          <source>is the Gamma function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69f40e59910252b1db38e7e1a35ff92e5e4dc364" translate="yes" xml:space="preserve">
          <source>is the Hadamard product.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de9be08c0e9d3b53692fc54b2f44db64d2038a8b" translate="yes" xml:space="preserve">
          <source>is the batch dimension,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="281c7fe7e45ed3513240f95faf84d267cd3f151f" translate="yes" xml:space="preserve">
          <source>is the batch size. If &lt;code&gt;reduction&lt;/code&gt; is not &lt;code&gt;'none'&lt;/code&gt; (default &lt;code&gt;'mean'&lt;/code&gt;), then</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7aac44b39e74720c45bc4945f82173e5519f3151" translate="yes" xml:space="preserve">
          <source>is the batch size. If &lt;code&gt;reduction&lt;/code&gt; is not &lt;code&gt;'none'&lt;/code&gt; (default &lt;code&gt;'mean'&lt;/code&gt;), then:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d6b22b9def65817dd280bd6ecf86708426a0a32" translate="yes" xml:space="preserve">
          <source>is the batch size;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dccd80843fee62a4fd00384f181ef5dfd7ea9017" translate="yes" xml:space="preserve">
          <source>is the cell state at time &lt;code&gt;t&lt;/code&gt;,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a5cdf0634393109ed0e6c10f4a675a9dd008d25" translate="yes" xml:space="preserve">
          <source>is the channel dimension, and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2911f889636894fd9437fc1f8bccdf5dfc32c08c" translate="yes" xml:space="preserve">
          <source>is the class number (</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2d40ae995d6e01ae8867dbbc8e01f0c9ad0a790" translate="yes" xml:space="preserve">
          <source>is the cluster index (with clusters for less frequent words having larger indices, and indices starting from</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abe47b0e6f9df0e411555525f5be949c0807109e" translate="yes" xml:space="preserve">
          <source>is the conjugate operator, and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2c2c29784392b49341041ea64a92a8f97126202" translate="yes" xml:space="preserve">
          <source>is the element-wise product between matrices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e271b40793597920f41beeffed2dedfcc2c614a5" translate="yes" xml:space="preserve">
          <source>is the estimated statistic and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="293992dfc6a54d1fabba26b94b8d664bf4c977f2" translate="yes" xml:space="preserve">
          <source>is the frequency that</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6840ccef6fd053392bcc24cc92c9b41ee3db294" translate="yes" xml:space="preserve">
          <source>is the full window size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd966f9fe5dfd27496c8f139774ae88a9bdc0864" translate="yes" xml:space="preserve">
          <source>is the hidden state at time &lt;code&gt;t&lt;/code&gt;,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cff77d5309364b37d4c17d1cb6a585f5da85ae8" translate="yes" xml:space="preserve">
          <source>is the hidden state of the layer at time &lt;code&gt;t-1&lt;/code&gt; or the initial hidden state at time &lt;code&gt;0&lt;/code&gt;, and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c340fc3f4995e77ddcf3a132d4a1f0c7adb3745" translate="yes" xml:space="preserve">
          <source>is the hidden state of the previous layer at time &lt;code&gt;t-1&lt;/code&gt; or the initial hidden state at time &lt;code&gt;0&lt;/code&gt;. If &lt;code&gt;nonlinearity&lt;/code&gt; is &lt;code&gt;'relu'&lt;/code&gt;, then</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a4f6d96148bfa9b7228107a96770fc5dde0514d" translate="yes" xml:space="preserve">
          <source>is the index of the sliding window, and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2469f6f2e498681ee3569647e14be31833f88a99" translate="yes" xml:space="preserve">
          <source>is the input at time &lt;code&gt;t&lt;/code&gt;,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d04ad54d64d891ca797bf8dba3ee19b79450afd" translate="yes" xml:space="preserve">
          <source>is the input at time &lt;code&gt;t&lt;/code&gt;, and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fde4df4915ba09e85fe18396855aa9d98586d02c" translate="yes" xml:space="preserve">
          <source>is the input,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fd98d6e68dd0acb723ba7eb68d4666d92b8b5e5" translate="yes" xml:space="preserve">
          <source>is the logistic sigmoid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bc331c39ad0d3a2ca8a5549ac9f2246ec41696f" translate="yes" xml:space="preserve">
          <source>is the new observed value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7eb0e2bbad7da2362fd8672852961d96bb37a88" translate="yes" xml:space="preserve">
          <source>is the number of dimensions, and a target of appropriate shape (see below).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f912e40c0e26531f2c8f406541d450007d6026c5" translate="yes" xml:space="preserve">
          <source>is the number of dimensions, and a target of appropriate shape (see below). In the case of images, it computes NLL loss per-pixel.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b72f9f30f6715864e7e0780cf4a9070361bc695b" translate="yes" xml:space="preserve">
          <source>is the number of frequencies where STFT is applied and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19e3487d3de758b4d7c9dda255d31ec7d360ff59" translate="yes" xml:space="preserve">
          <source>is the number of the sample in the batch and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5500abbd026de6e722323aa962d278586a0a10a1" translate="yes" xml:space="preserve">
          <source>is the number of values within a block (a block has</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="478cb6836574c1fc2b65d18e35de2a150cda37b1" translate="yes" xml:space="preserve">
          <source>is the optional batch size of &lt;code&gt;input&lt;/code&gt;,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a91efa0c82028bad451dbe0610524092a8336e7" translate="yes" xml:space="preserve">
          <source>is the quantized representation of number 6.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="759f3173cf82da127f8ed1c0b4a285bb98891df6" translate="yes" xml:space="preserve">
          <source>is the shape of &lt;code&gt;input&lt;/code&gt;, but instead the last dimension will be halfed as of size</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="130f05a2e94e08252597b7a529038a9210eb05ed" translate="yes" xml:space="preserve">
          <source>is the sigmoid function and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aaa75cf5a0b7490445d1545ac08d4be6b7959a3c" translate="yes" xml:space="preserve">
          <source>is the sigmoid function, and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6923e4a272507572d5b395c19391b740a1376c1b" translate="yes" xml:space="preserve">
          <source>is the size of signal dimension</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0ef4856a0180c35977da1f2adeeda3a43863754" translate="yes" xml:space="preserve">
          <source>is the target,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="130c362cf021ad30f6fee0cf94f67b719fca1554" translate="yes" xml:space="preserve">
          <source>is the total number of blocks. (This is exactly the same specification as the output shape of &lt;a href=&quot;torch.nn.unfold#torch.nn.Unfold&quot;&gt;&lt;code&gt;Unfold&lt;/code&gt;&lt;/a&gt;.) This operation combines these local blocks into the large &lt;code&gt;output&lt;/code&gt; tensor of shape</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f05e8b7fe7c65429c598f8d906665406218fe8ed" translate="yes" xml:space="preserve">
          <source>is the total number of frames used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d89700be3c67cd0fb0391f50987665a0335227f" translate="yes" xml:space="preserve">
          <source>is the total number of non-zero elements in the &lt;code&gt;input&lt;/code&gt; tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="325ce5f911d0c62cf251a6a4e867203a277f44e2" translate="yes" xml:space="preserve">
          <source>is the total number of such blocks:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41ca261b09b1bbc50def76a6df7b0444e2a5670f" translate="yes" xml:space="preserve">
          <source>is the total number of values within each block (a block has</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29882946dec3732bfcefbfca4ee9f857853b606f" translate="yes" xml:space="preserve">
          <source>is the valid 2D &lt;a href=&quot;https://en.wikipedia.org/wiki/Cross-correlation&quot;&gt;cross-correlation&lt;/a&gt; operator,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04f9aea798165ac61ddec84cce9990b6a01efab4" translate="yes" xml:space="preserve">
          <source>is the valid 3D &lt;a href=&quot;https://en.wikipedia.org/wiki/Cross-correlation&quot;&gt;cross-correlation&lt;/a&gt; operator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21b9a586a91d63dc6e7b465f1da00c36db2d2fde" translate="yes" xml:space="preserve">
          <source>is the valid &lt;a href=&quot;https://en.wikipedia.org/wiki/Cross-correlation&quot;&gt;cross-correlation&lt;/a&gt; operator,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1fdd70b8cc2e897c3cb8ab093c0063e4161b495" translate="yes" xml:space="preserve">
          <source>is the vector dimension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9d5e327113799785b79505bd44e86a3d2b9f609" translate="yes" xml:space="preserve">
          <source>is the weight of the positive answer for the class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf62d1f998c753687bf5cbc7f9ea6be3d26bcfb0" translate="yes" xml:space="preserve">
          <source>is the weight, and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01528a60c569588fddf5989ad25d02711b168680" translate="yes" xml:space="preserve">
          <source>is the zero point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac997c80df321517a1fa4597888f4c32ca0f269f" translate="yes" xml:space="preserve">
          <source>is the zero_point, and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71d63417f8418c41671a067b7011b34b72c35b70" translate="yes" xml:space="preserve">
          <source>is unit triangular. If True, the diagonal elements of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11db57db0c17b305a5c804590bd8cc18444af6ff" translate="yes" xml:space="preserve">
          <source>is upper triangular and &lt;code&gt;c&lt;/code&gt; is returned such that:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c974d40af1c06e1bedf1c7262705f6171eb12edd" translate="yes" xml:space="preserve">
          <source>is upper triangular such that the returned tensor is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b47b0e08b2595b9cc971cc49e5e13f8189eddb7f" translate="yes" xml:space="preserve">
          <source>is upper-triangular with the default keyword arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04f4ca079a694f9a4bfcfbb945993f9e650f41aa" translate="yes" xml:space="preserve">
          <source>is used for each input channel.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbc1a6abeeafd09633aa87025d642c37d04f7176" translate="yes" xml:space="preserve">
          <source>is used instead of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd335d71c170278ee176c4fcd189aaaee5bc3ec6" translate="yes" xml:space="preserve">
          <source>is width in pixels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf69704d72065b338132434a0902d7df2dbc6903" translate="yes" xml:space="preserve">
          <source>is zero of more batch dimensions (</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0978d2704a52bdc886a205fbe840457f5b96db5d" translate="yes" xml:space="preserve">
          <source>is zero of more batch dimensions composed of upper or lower triangular Cholesky factor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62c89eec732c8376fc4fe6ec3ba7dba4e5e3ef7c" translate="yes" xml:space="preserve">
          <source>is zero or more batch dimensions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6805dd25351d202b3359e6d165f1549387b82259" translate="yes" xml:space="preserve">
          <source>is zero or more batch dimensions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e3d89cbd7e32ce216050105dbe1e22f0031974f" translate="yes" xml:space="preserve">
          <source>is zero or more batch dimensions. The batch dimensions of &lt;code&gt;LU_pivots&lt;/code&gt; must be equal to the batch dimensions of &lt;code&gt;LU_data&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="392140062909b5bb864c995eab01cae4c3b8e31f" translate="yes" xml:space="preserve">
          <source>is:</source>
          <target state="translated">is:</target>
        </trans-unit>
        <trans-unit id="6a0e9e2fc662576a9398259e75fd3a2ece885f1b" translate="yes" xml:space="preserve">
          <source>isnan</source>
          <target state="translated">isnan</target>
        </trans-unit>
        <trans-unit id="cbb1b7fae920edf43156684563f3949d7c8afdf9" translate="yes" xml:space="preserve">
          <source>it is equivalent to &lt;code&gt;scipy.spatial.distance.cdist(input, &amp;lsquo;hamming&amp;rsquo;) * M&lt;/code&gt;. When</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dc225c73f8b2ac6a50df3e9317188b9692e971f" translate="yes" xml:space="preserve">
          <source>it is equivalent to &lt;code&gt;scipy.spatial.distance.pdist(input, &amp;lsquo;hamming&amp;rsquo;) * M&lt;/code&gt;. When</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a92dbdae3d3f2abe3a6b2ea4a951768b39b88da1" translate="yes" xml:space="preserve">
          <source>it will be treated as &lt;code&gt;B&lt;/code&gt; bags (sequences) each of fixed length &lt;code&gt;N&lt;/code&gt;, and this will return &lt;code&gt;B&lt;/code&gt; values aggregated in a way depending on the &lt;code&gt;mode&lt;/code&gt;. &lt;code&gt;offsets&lt;/code&gt; is ignored and required to be &lt;code&gt;None&lt;/code&gt; in this case.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53d2bd1fccffc8c4ef1d454c8c351de5588ba8c0" translate="yes" xml:space="preserve">
          <source>it will be treated as a concatenation of multiple bags (sequences). &lt;code&gt;offsets&lt;/code&gt; is required to be a 1D tensor containing the starting index positions of each bag in &lt;code&gt;input&lt;/code&gt;. Therefore, for &lt;code&gt;offsets&lt;/code&gt; of shape &lt;code&gt;(B)&lt;/code&gt;, &lt;code&gt;input&lt;/code&gt; will be viewed as having &lt;code&gt;B&lt;/code&gt; bags. Empty bags (i.e., having 0-length) will have returned vectors filled by zeros.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c2dd944dde9e08881bef0894fe7b22a5c9c4b06" translate="yes" xml:space="preserve">
          <source>j</source>
          <target state="translated">j</target>
        </trans-unit>
        <trans-unit id="13fbd79c3d390e5d6585a21e11ff5ec1970cff0c" translate="yes" xml:space="preserve">
          <source>k</source>
          <target state="translated">k</target>
        </trans-unit>
        <trans-unit id="99b8237d0c5de43304427d636f798a0f7cfb6280" translate="yes" xml:space="preserve">
          <source>k = \frac{1}{\text{hidden\_size}}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="173b6a11749891be026bf37b10e61843eb986150" translate="yes" xml:space="preserve">
          <source>k = \frac{1}{\text{in1\_features}}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="becb099737e9867f45aca3e8f5ab9fe9630a860d" translate="yes" xml:space="preserve">
          <source>k = \frac{1}{\text{in\_features}}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a57d75a72c2e1415251ed1b7728aee2666592787" translate="yes" xml:space="preserve">
          <source>k = \frac{groups}{C_\text{in} * \prod_{i=0}^{1}\text{kernel\_size}[i]}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9970138eac4e8a7e2b2d75124ecab76a5422fe2c" translate="yes" xml:space="preserve">
          <source>k = \frac{groups}{C_\text{in} * \prod_{i=0}^{2}\text{kernel\_size}[i]}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04c647a4fe635ffd4301a95b2ee3f7cd71d537e9" translate="yes" xml:space="preserve">
          <source>k = \frac{groups}{C_\text{in} * \text{kernel\_size}}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67e7eb6ea5fdf00e430deccd0bf30f1177098735" translate="yes" xml:space="preserve">
          <source>k = \frac{groups}{C_\text{out} * \prod_{i=0}^{1}\text{kernel\_size}[i]}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e1e2916eb0167ebb51c27d5a79bd1ec608fd46d" translate="yes" xml:space="preserve">
          <source>k = \frac{groups}{C_\text{out} * \prod_{i=0}^{2}\text{kernel\_size}[i]}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="263d464df903034f6f2b38274030858ca69b70da" translate="yes" xml:space="preserve">
          <source>k = \frac{groups}{C_\text{out} * \text{kernel\_size}}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5db776fa987a8c2631bca5fefd5abf5c91c53f89" translate="yes" xml:space="preserve">
          <source>k = \min(m, n)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af8d51814a0798226467ceffe735861ab527647c" translate="yes" xml:space="preserve">
          <source>k = m</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7912b3202a7604183b29a52db124e8c022715be5" translate="yes" xml:space="preserve">
          <source>kH \times kW</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddc9e4a5bbb37b96366edee9e0fc8801bad0b0b8" translate="yes" xml:space="preserve">
          <source>kT \times kH \times kW</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07f9c8544271ab8abf3b2e066216829a185cedae" translate="yes" xml:space="preserve">
          <source>kernel_size</source>
          <target state="translated">kernel_size</target>
        </trans-unit>
        <trans-unit id="3e2de11d5eb367bc433ea21e26bcaf254e7ca686" translate="yes" xml:space="preserve">
          <source>kernel_size[0]</source>
          <target state="translated">kernel_size[0]</target>
        </trans-unit>
        <trans-unit id="b52b4d2d83c346c42ed1fda9e72b8efcc7861d80" translate="yes" xml:space="preserve">
          <source>kernel_size[1]</source>
          <target state="translated">kernel_size[1]</target>
        </trans-unit>
        <trans-unit id="31519692c8123f5e0fbe873dcd451af7ac836205" translate="yes" xml:space="preserve">
          <source>kernel_size[2]</source>
          <target state="translated">kernel_size[2]</target>
        </trans-unit>
        <trans-unit id="f07e85f401d30b2255d80444989c08d4ca2a2ac4" translate="yes" xml:space="preserve">
          <source>key:</source>
          <target state="translated">key:</target>
        </trans-unit>
        <trans-unit id="7fcaa9b57880be5eac6cac317208a9822e766cee" translate="yes" xml:space="preserve">
          <source>key_padding_mask:</source>
          <target state="translated">key_padding_mask:</target>
        </trans-unit>
        <trans-unit id="b8acedc6e389e54da422bb647281e1bf31da4c78" translate="yes" xml:space="preserve">
          <source>keypoint AP</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a030b8c3893ceda686cc64fceb428bbd9864c30e" translate="yes" xml:space="preserve">
          <source>keypoints (&lt;code&gt;FloatTensor[N, K, 3]&lt;/code&gt;): the &lt;code&gt;K&lt;/code&gt; keypoints location for each of the &lt;code&gt;N&lt;/code&gt; instances, in the format &lt;code&gt;[x, y, visibility]&lt;/code&gt;, where &lt;code&gt;visibility=0&lt;/code&gt; means that the keypoint is not visible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1fd5e238c67601ed3b7d4c09dce67f994a9f03f" translate="yes" xml:space="preserve">
          <source>keypoints (&lt;code&gt;FloatTensor[N, K, 3]&lt;/code&gt;): the locations of the predicted keypoints, in &lt;code&gt;[x, y, v]&lt;/code&gt; format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4aec5de13f0bdcb2589445e355f65b586267b47" translate="yes" xml:space="preserve">
          <source>kl_div</source>
          <target state="translated">kl_div</target>
        </trans-unit>
        <trans-unit id="07c342be6e560e7f43842e2e21b774e61d85f047" translate="yes" xml:space="preserve">
          <source>l</source>
          <target state="translated">l</target>
        </trans-unit>
        <trans-unit id="8d28f668bfe47841cbcd3c2eb3a414a5168fe9a0" translate="yes" xml:space="preserve">
          <source>l &amp;gt;= 2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1d091fd59b4f4619375ec3b97d3d0b4da1ca2c9" translate="yes" xml:space="preserve">
          <source>l(x,y) = L = \{ l_1,\dots,l_N \}, \quad l_n = y_n \cdot \left( \log y_n - x_n \right)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2a6818882cdf8b865e414d895055d01e695968b" translate="yes" xml:space="preserve">
          <source>l1_loss</source>
          <target state="translated">l1_loss</target>
        </trans-unit>
        <trans-unit id="8e55f7279e2d1feeef3cc07f3b1b6bbcfdeb2f96" translate="yes" xml:space="preserve">
          <source>l_n = \begin{cases} x_n, &amp;amp; \text{if}\; y_n = 1,\\ \max \{0, \Delta - x_n\}, &amp;amp; \text{if}\; y_n = -1, \end{cases}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ced14667d816eaa10d186751e6c3acbc895754b" translate="yes" xml:space="preserve">
          <source>l_p</source>
          <target state="translated">l_p</target>
        </trans-unit>
        <trans-unit id="01b5814f1070bba7e0ed34ffb47abb6d8709c7b0" translate="yes" xml:space="preserve">
          <source>label_img:</source>
          <target state="translated">label_img:</target>
        </trans-unit>
        <trans-unit id="0e187b00cb0a085f461691f1c65a33263a5780fd" translate="yes" xml:space="preserve">
          <source>labels (&lt;code&gt;Int64Tensor[N]&lt;/code&gt;): the class label for each ground-truth box</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c15d2d9588bc6bdc875c6b92d09d3abc924004d7" translate="yes" xml:space="preserve">
          <source>labels (&lt;code&gt;Int64Tensor[N]&lt;/code&gt;): the predicted labels for each image</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bff6c24d0d620b5a827a96b379eaab48e0802900" translate="yes" xml:space="preserve">
          <source>layer (W_hr|W_hz|W_hn), of shape &lt;code&gt;(3*hidden_size, hidden_size)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ea9470b34b679eae9d99fa0de2594e21e04bb4c" translate="yes" xml:space="preserve">
          <source>layer (W_ir|W_iz|W_in), of shape &lt;code&gt;(3*hidden_size, input_size)&lt;/code&gt; for &lt;code&gt;k = 0&lt;/code&gt;. Otherwise, the shape is &lt;code&gt;(3*hidden_size, num_directions * hidden_size)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1824642bccba4358d3c0a0398e4f17008dcee16" translate="yes" xml:space="preserve">
          <source>layer (b_hr|b_hz|b_hn), of shape &lt;code&gt;(3*hidden_size)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92ee03d646252581e792b5cc50f50737017bf6a3" translate="yes" xml:space="preserve">
          <source>layer (b_ir|b_iz|b_in), of shape &lt;code&gt;(3*hidden_size)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81613cf511f0d14a3cdbd1544e8de89d994337cc" translate="yes" xml:space="preserve">
          <source>layer &lt;code&gt;(W_hi|W_hf|W_hg|W_ho)&lt;/code&gt;, of shape &lt;code&gt;(4*hidden_size, hidden_size)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec398718688ea1a63c01c7e7a7830828d4f051a0" translate="yes" xml:space="preserve">
          <source>layer &lt;code&gt;(W_ii|W_if|W_ig|W_io)&lt;/code&gt;, of shape &lt;code&gt;(4*hidden_size, input_size)&lt;/code&gt; for &lt;code&gt;k = 0&lt;/code&gt;. Otherwise, the shape is &lt;code&gt;(4*hidden_size, num_directions * hidden_size)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a0e376ae15f845362e5a8ef83c94ade87046aec" translate="yes" xml:space="preserve">
          <source>layer &lt;code&gt;(b_hi|b_hf|b_hg|b_ho)&lt;/code&gt;, of shape &lt;code&gt;(4*hidden_size)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47c84d54ea7e43688b0b1c7fd96ce2cb97c9b284" translate="yes" xml:space="preserve">
          <source>layer &lt;code&gt;(b_ii|b_if|b_ig|b_io)&lt;/code&gt;, of shape &lt;code&gt;(4*hidden_size)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9412a97b4b84395a04999c3844413796a34d3cf" translate="yes" xml:space="preserve">
          <source>layer_norm</source>
          <target state="translated">layer_norm</target>
        </trans-unit>
        <trans-unit id="414dd37d13aeb316e84bb517261fef7295a0f33c" translate="yes" xml:space="preserve">
          <source>lcm(0, 0) = 0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6c274796830e5421daf9c0787a5695aa94a3a87" translate="yes" xml:space="preserve">
          <source>lcm(0, a) = 0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="593b743b207e10ff55ec63e71a46c07909d0880a" translate="yes" xml:space="preserve">
          <source>le</source>
          <target state="translated">le</target>
        </trans-unit>
        <trans-unit id="02f515d776b9bcc597d48990c2bc36240e241c79" translate="yes" xml:space="preserve">
          <source>leaky_relu</source>
          <target state="translated">leaky_relu</target>
        </trans-unit>
        <trans-unit id="a573b540d2dde90ba6da3b9d6286c8ec60c10044" translate="yes" xml:space="preserve">
          <source>len</source>
          <target state="translated">len</target>
        </trans-unit>
        <trans-unit id="a4e1c3aa4d02ea50898aadc65be66da72185f80f" translate="yes" xml:space="preserve">
          <source>len(pad)</source>
          <target state="translated">len(pad)</target>
        </trans-unit>
        <trans-unit id="f5b9427750e1b49e7ea0572daf4908c4de6358c2" translate="yes" xml:space="preserve">
          <source>lim</source>
          <target state="translated">lim</target>
        </trans-unit>
        <trans-unit id="cb1fa73a03da3c48374cd4146f394733df379201" translate="yes" xml:space="preserve">
          <source>linear</source>
          <target state="translated">linear</target>
        </trans-unit>
        <trans-unit id="3c01627cf1f82343852c754d030ad8d0be18a589" translate="yes" xml:space="preserve">
          <source>ln</source>
          <target state="translated">ln</target>
        </trans-unit>
        <trans-unit id="3f98f6ad434667cdec98a6dc505ce46f4796f866" translate="yes" xml:space="preserve">
          <source>local_response_norm</source>
          <target state="translated">local_response_norm</target>
        </trans-unit>
        <trans-unit id="7babc233de26ab19ead1b9c278128d5c434910ee" translate="yes" xml:space="preserve">
          <source>log</source>
          <target state="translated">log</target>
        </trans-unit>
        <trans-unit id="66e97cb65ec528e42c6db8449dd1bb5144fabdcf" translate="yes" xml:space="preserve">
          <source>log-probabilities of for each class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="008391a6494b0a1a3990b931239d73dda4761f08" translate="yes" xml:space="preserve">
          <source>log1p</source>
          <target state="translated">log1p</target>
        </trans-unit>
        <trans-unit id="8272fbd4ea89b69b3ccf4f94a9578f957614acd7" translate="yes" xml:space="preserve">
          <source>log2</source>
          <target state="translated">log2</target>
        </trans-unit>
        <trans-unit id="dfea6e1f5a24566439b7729430190894b94e5e96" translate="yes" xml:space="preserve">
          <source>log_sigmoid</source>
          <target state="translated">log_sigmoid</target>
        </trans-unit>
        <trans-unit id="5ff90e8b7b4b2d43b0dffb33147b1fa220957e7e" translate="yes" xml:space="preserve">
          <source>log_softmax</source>
          <target state="translated">log_softmax</target>
        </trans-unit>
        <trans-unit id="3d32e2f00d5864686079db8974363e1fbdf8f1f5" translate="yes" xml:space="preserve">
          <source>logcumsumexp</source>
          <target state="translated">logcumsumexp</target>
        </trans-unit>
        <trans-unit id="87cceff421033fe936477c7c8a8b77145122971d" translate="yes" xml:space="preserve">
          <source>logdet</source>
          <target state="translated">logdet</target>
        </trans-unit>
        <trans-unit id="c169dbb38a2202740e5682e7338ddc0816ae67e7" translate="yes" xml:space="preserve">
          <source>logsigmoid</source>
          <target state="translated">logsigmoid</target>
        </trans-unit>
        <trans-unit id="f84bde287b164208b85eac3e1a1f9183f363608a" translate="yes" xml:space="preserve">
          <source>logsumexp</source>
          <target state="translated">logsumexp</target>
        </trans-unit>
        <trans-unit id="c9279f09f8296b9eb2f62ca1b4a71c5c5f330b0a" translate="yes" xml:space="preserve">
          <source>loss</source>
          <target state="translated">loss</target>
        </trans-unit>
        <trans-unit id="cebbb51122f22455f0108e18691fd1ec98b3003d" translate="yes" xml:space="preserve">
          <source>loss(x, y) = - \frac{1}{C} * \sum_i y[i] * \log((1 + \exp(-x[i]))^{-1}) + (1-y[i]) * \log\left(\frac{\exp(-x[i])}{(1 + \exp(-x[i]))}\right)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="346e3ee198e98146993894d3de8ecab1a86c3e80" translate="yes" xml:space="preserve">
          <source>lower</source>
          <target state="translated">lower</target>
        </trans-unit>
        <trans-unit id="be198fc328a96cc03f5644bb41af886e8a59bd77" translate="yes" xml:space="preserve">
          <source>lp_pool1d</source>
          <target state="translated">lp_pool1d</target>
        </trans-unit>
        <trans-unit id="c618e70fbaf67300aa1c86f8528fa9453ed48bd9" translate="yes" xml:space="preserve">
          <source>lp_pool2d</source>
          <target state="translated">lp_pool2d</target>
        </trans-unit>
        <trans-unit id="5f3acfbeb4f6fa5007dd1137ab1e96149af87281" translate="yes" xml:space="preserve">
          <source>lt</source>
          <target state="translated">lt</target>
        </trans-unit>
        <trans-unit id="2ddece99037bcda8c7421783cf1585abb4aa125c" translate="yes" xml:space="preserve">
          <source>lt(other) -&amp;gt; Tensor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b0d31c0d563223024da45691584643ac78c96e8" translate="yes" xml:space="preserve">
          <source>m</source>
          <target state="translated">m</target>
        </trans-unit>
        <trans-unit id="decfd65fc5254d4c273ad556b4f0b50316ca2c72" translate="yes" xml:space="preserve">
          <source>m &amp;lt; n</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b74cc59e4930f4f766fe8c16b7cda4802e37db42" translate="yes" xml:space="preserve">
          <source>m - n</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0b5b5a1b8ecd4e77f0943804e4f68eeef9f1952" translate="yes" xml:space="preserve">
          <source>m \geq n</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b49bc1d9d734571822ba5ca040431d7e91ab38ab" translate="yes" xml:space="preserve">
          <source>m \times n</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="890356f11c430cd24bded6f7bb87459e163f6ee3" translate="yes" xml:space="preserve">
          <source>m1, m2, \dots, mi</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="707082857225d427f84e4dbb1bd6cd1d08da038b" translate="yes" xml:space="preserve">
          <source>m1, m2, \dots, mi, 2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5033fb5f759a1d872e64738513ba3625e94162d5" translate="yes" xml:space="preserve">
          <source>margin</source>
          <target state="translated">margin</target>
        </trans-unit>
        <trans-unit id="d4aeb1c78272dc6d5a5552ca678759f8129ea374" translate="yes" xml:space="preserve">
          <source>margin_ranking_loss</source>
          <target state="translated">margin_ranking_loss</target>
        </trans-unit>
        <trans-unit id="558c67daebb35f6cde771c4b2b784338c357ef99" translate="yes" xml:space="preserve">
          <source>mask (&lt;a href=&quot;../tensors#torch.Tensor&quot;&gt;torch.Tensor&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6548761cac6c62ea1acc27355527e7e7a795505" translate="yes" xml:space="preserve">
          <source>mask AP</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41e4e8a707b8a2bb3fc9d8da525bf523e4267991" translate="yes" xml:space="preserve">
          <source>mask to apply to &lt;code&gt;t&lt;/code&gt;, of same dims as &lt;code&gt;t&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba22b5868755ce487abcc0f806693ba93a516205" translate="yes" xml:space="preserve">
          <source>masked_fill</source>
          <target state="translated">masked_fill</target>
        </trans-unit>
        <trans-unit id="a56e75ce244bbec5b93eff069e7b1679572d7c5a" translate="yes" xml:space="preserve">
          <source>masked_scatter</source>
          <target state="translated">masked_scatter</target>
        </trans-unit>
        <trans-unit id="00b2d29e0730d6874d8ac8c9decbd4b10af0d531" translate="yes" xml:space="preserve">
          <source>masked_select</source>
          <target state="translated">masked_select</target>
        </trans-unit>
        <trans-unit id="b1226d1a97256726797bcbe07b045addc7895f8c" translate="yes" xml:space="preserve">
          <source>masks (&lt;code&gt;UInt8Tensor[N, 1, H, W]&lt;/code&gt;): the predicted masks for each instance, in &lt;code&gt;0-1&lt;/code&gt; range. In order to obtain the final segmentation masks, the soft masks can be thresholded, generally with a value of 0.5 (&lt;code&gt;mask &amp;gt;= 0.5&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e827abab7c5073cf365b5db791423f9c63c568f" translate="yes" xml:space="preserve">
          <source>masks (&lt;code&gt;UInt8Tensor[N, H, W]&lt;/code&gt;): the segmentation binary masks for each instance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc7c5be316e48d137cbb549833b85d91034d799d" translate="yes" xml:space="preserve">
          <source>mat</source>
          <target state="translated">mat</target>
        </trans-unit>
        <trans-unit id="03f42dbc564646a79a15a4512bb9321793a55912" translate="yes" xml:space="preserve">
          <source>mat @ vec</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f43814b18f3b5b55a51ca1ad1e0e137c3dd5bfe9" translate="yes" xml:space="preserve">
          <source>mat1</source>
          <target state="translated">mat1</target>
        </trans-unit>
        <trans-unit id="01de1f53904b8db1a5c5737c8930f769f171e647" translate="yes" xml:space="preserve">
          <source>mat1 @ mat2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a84419fbc985471cdbef09761fae2147538916f" translate="yes" xml:space="preserve">
          <source>mat2</source>
          <target state="translated">mat2</target>
        </trans-unit>
        <trans-unit id="938d68e660addbfd641dc6fd55fc0d8fdd4141fd" translate="yes" xml:space="preserve">
          <source>mat:</source>
          <target state="translated">mat:</target>
        </trans-unit>
        <trans-unit id="4b9cec936f22a243817bc5959597adb15f15fb39" translate="yes" xml:space="preserve">
          <source>match semantics</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a418b3e537fdc486173bc669dbb75e4b0b0d8c1" translate="yes" xml:space="preserve">
          <source>matrices.</source>
          <target state="translated">matrices.</target>
        </trans-unit>
        <trans-unit id="bf2f749e80c970f50552e9d5f3e8434e78b88d35" translate="yes" xml:space="preserve">
          <source>matrix</source>
          <target state="translated">matrix</target>
        </trans-unit>
        <trans-unit id="f654484963225ef84923657150dd3f0446216159" translate="yes" xml:space="preserve">
          <source>matrix norm</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e6e39c6dcaf8b4bde9e4d8d861021aebce8ae50" translate="yes" xml:space="preserve">
          <source>matrix_power(input) -&amp;gt; Tensor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0706025b2bbcec1ed8d64822f4eccd96314938d0" translate="yes" xml:space="preserve">
          <source>max</source>
          <target state="translated">max</target>
        </trans-unit>
        <trans-unit id="afacd51e2162787072a3e83acedaa172763561b9" translate="yes" xml:space="preserve">
          <source>max target length, if shape is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffda383f347ada1a98d7396a9b725dc7af220c26" translate="yes" xml:space="preserve">
          <source>max(abs(x))</source>
          <target state="translated">max(abs(x))</target>
        </trans-unit>
        <trans-unit id="91c402cc7df8b333bb48ab681ce9bfc8f8d3753b" translate="yes" xml:space="preserve">
          <source>max(sum(abs(x), dim=0))</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c24420953e4e2bad3901fbeda91ddc27835ae28f" translate="yes" xml:space="preserve">
          <source>max(sum(abs(x), dim=1))</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d223f5abf4f13bb472a6a7f2799278e421a9265" translate="yes" xml:space="preserve">
          <source>max_pool1d</source>
          <target state="translated">max_pool1d</target>
        </trans-unit>
        <trans-unit id="068513d9eea64b547f87b3ac07116ad6b30d7a1d" translate="yes" xml:space="preserve">
          <source>max_pool2d</source>
          <target state="translated">max_pool2d</target>
        </trans-unit>
        <trans-unit id="b7068d0aa8512cb2d08fb6aeec4c5a6d487c6125" translate="yes" xml:space="preserve">
          <source>max_pool3d</source>
          <target state="translated">max_pool3d</target>
        </trans-unit>
        <trans-unit id="05e0d4e478aa9a8bf280df8eb594fe5e7c0fc211" translate="yes" xml:space="preserve">
          <source>max_size</source>
          <target state="translated">max_size</target>
        </trans-unit>
        <trans-unit id="23f7c76e90aa2e543566db330c1cfde91aa99554" translate="yes" xml:space="preserve">
          <source>max_unpool1d</source>
          <target state="translated">max_unpool1d</target>
        </trans-unit>
        <trans-unit id="dea0f7cdd936d235892018e47c2010b94661b7e8" translate="yes" xml:space="preserve">
          <source>max_unpool2d</source>
          <target state="translated">max_unpool2d</target>
        </trans-unit>
        <trans-unit id="7de1a94751d2104c9214d3073717f7da6ceaf600" translate="yes" xml:space="preserve">
          <source>max_unpool3d</source>
          <target state="translated">max_unpool3d</target>
        </trans-unit>
        <trans-unit id="5f00f7a0a9f5e57deb39805aa521121fa277e75e" translate="yes" xml:space="preserve">
          <source>mean</source>
          <target state="translated">mean</target>
        </trans-unit>
        <trans-unit id="32b957ceca1461cc28a71e2b6f3c2bc9565dbcaa" translate="yes" xml:space="preserve">
          <source>mean IoU</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="344b0fa054fa76f56bbff3aaab0f0adc2fc9804b" translate="yes" xml:space="preserve">
          <source>means any number of additional dimensions and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a802e80954a41173d6372ac606eab6c6fb64197f" translate="yes" xml:space="preserve">
          <source>means any number of additional dimensions. All but the last dimension of the inputs should be the same.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54b75eddcf79eec8338a4fd138ba51e036c93f23" translate="yes" xml:space="preserve">
          <source>means, any number of additional dimensions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc9d2ff543d8b9c7e7b8b3c56ecb95a7e536a4d0" translate="yes" xml:space="preserve">
          <source>means, any number of dimensions. The sum operation operates over all the elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09f3246f599ac9a17e658bc0657edea466004792" translate="yes" xml:space="preserve">
          <source>median</source>
          <target state="translated">median</target>
        </trans-unit>
        <trans-unit id="98cd8348ebc8fefb9dced082a99685ec298e4a52" translate="yes" xml:space="preserve">
          <source>memory (GB)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1a1b0aba6be16235e524381e8621b6c9f4da909" translate="yes" xml:space="preserve">
          <source>memory_format (&lt;a href=&quot;tensor_attributes#torch.torch.memory_format&quot;&gt;&lt;code&gt;torch.memory_format&lt;/code&gt;&lt;/a&gt;, optional): the desired memory format of returned Tensor. Default: &lt;code&gt;torch.preserve_format&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5157fc90127389db57a4a95d43f5c1825cb1f946" translate="yes" xml:space="preserve">
          <source>memory_key_padding_mask:</source>
          <target state="translated">memory_key_padding_mask:</target>
        </trans-unit>
        <trans-unit id="e640b27bd24b1c76d1e56a49db332fb9f927d757" translate="yes" xml:space="preserve">
          <source>memory_mask:</source>
          <target state="translated">memory_mask:</target>
        </trans-unit>
        <trans-unit id="53adb9aa66e1afea031a650ab6e5bfc96d0009c9" translate="yes" xml:space="preserve">
          <source>method as a call to python, and &lt;code&gt;@unused&lt;/code&gt; replaces it with an exception. &lt;code&gt;@ignored&lt;/code&gt; cannot be exported; &lt;code&gt;@unused&lt;/code&gt; can.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6c935d4f3c7b220fa038613a1f9c1b56b255a86" translate="yes" xml:space="preserve">
          <source>min</source>
          <target state="translated">min</target>
        </trans-unit>
        <trans-unit id="db404d0fc00eba2f69ae7a48b59fb849d05ce8af" translate="yes" xml:space="preserve">
          <source>min(abs(x))</source>
          <target state="translated">min(abs(x))</target>
        </trans-unit>
        <trans-unit id="3ef1da91a7320545e6aa07c5b2ebd6628e2d4957" translate="yes" xml:space="preserve">
          <source>min(n, m)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8530ab3720e27fb5c02635b64a72518d96914bcb" translate="yes" xml:space="preserve">
          <source>min(sum(abs(x), dim=0))</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1450229b67ef739b4209bd2dd07756700f94c72a" translate="yes" xml:space="preserve">
          <source>min(sum(abs(x), dim=1))</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05a91fd7708ce79a5056e16656a6fdf458cca71e" translate="yes" xml:space="preserve">
          <source>minibatch</source>
          <target state="translated">minibatch</target>
        </trans-unit>
        <trans-unit id="b8d09b4d8580aacbd9efc4540a9b88d2feb9d7e5" translate="yes" xml:space="preserve">
          <source>mm</source>
          <target state="translated">mm</target>
        </trans-unit>
        <trans-unit id="7a4da03b63a5c85fa945e4648618231ac6c6a6a1" translate="yes" xml:space="preserve">
          <source>modified (i.e. pruned) version of the input module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fabed978dbf5ecc838070ab7f36f37691d3e97c" translate="yes" xml:space="preserve">
          <source>module (&lt;a href=&quot;torch.nn.module#torch.nn.Module&quot;&gt;nn.Module&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="503c4af7903cabeb312f4437dc97cf2e76af6b0a" translate="yes" xml:space="preserve">
          <source>momentum</source>
          <target state="translated">momentum</target>
        </trans-unit>
        <trans-unit id="82bc53f40b7120e5eb7d113e935fe42765fc631a" translate="yes" xml:space="preserve">
          <source>mse_loss</source>
          <target state="translated">mse_loss</target>
        </trans-unit>
        <trans-unit id="2c3cbd53a74aed6c63119dd5f562b86f456de9da" translate="yes" xml:space="preserve">
          <source>mul</source>
          <target state="translated">mul</target>
        </trans-unit>
        <trans-unit id="69980f871b6b5da330eeda6b333045bddc1026f7" translate="yes" xml:space="preserve">
          <source>mul_scalar</source>
          <target state="translated">mul_scalar</target>
        </trans-unit>
        <trans-unit id="2287a61828f60d8e697394e87e6514f5f8c4ed9a" translate="yes" xml:space="preserve">
          <source>multi_margin_loss</source>
          <target state="translated">multi_margin_loss</target>
        </trans-unit>
        <trans-unit id="47892f8b5050d973e85e21d3e5030189732b7907" translate="yes" xml:space="preserve">
          <source>multi_margin_loss(input, target, p=1, margin=1, weight=None, size_average=None,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae77047c506cf24f33386f90961d8372521ca146" translate="yes" xml:space="preserve">
          <source>multilabel_margin_loss</source>
          <target state="translated">multilabel_margin_loss</target>
        </trans-unit>
        <trans-unit id="f23041aaa77be1bf99bf889c8030443563867bff" translate="yes" xml:space="preserve">
          <source>multilabel_soft_margin_loss</source>
          <target state="translated">multilabel_soft_margin_loss</target>
        </trans-unit>
        <trans-unit id="9cf648dd1ac430cb6058c2dc3a28908ff0b2bd25" translate="yes" xml:space="preserve">
          <source>multinomial</source>
          <target state="translated">multinomial</target>
        </trans-unit>
        <trans-unit id="a5bd8289887f3cf122e499e17ebfeef374ec32de" translate="yes" xml:space="preserve">
          <source>multiprocessing</source>
          <target state="translated">multiprocessing</target>
        </trans-unit>
        <trans-unit id="ec8b72d76e8f05913c2ad8555ca1701be351540a" translate="yes" xml:space="preserve">
          <source>must have the same size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1854cae891ec7b29161ccaf79a24b00c274bdaa" translate="yes" xml:space="preserve">
          <source>n</source>
          <target state="translated">n</target>
        </trans-unit>
        <trans-unit id="a52bc6d1ca0afed26e364ef9a32480ec122bf1bc" translate="yes" xml:space="preserve">
          <source>n \geq 0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f78268f5a4b51027bb36c7e072a2063cb100ee44" translate="yes" xml:space="preserve">
          <source>n \geq 2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c786131f418a643e8f7486fa2ccb35791d6cf3f" translate="yes" xml:space="preserve">
          <source>n^{th}</source>
          <target state="translated">n^{th}</target>
        </trans-unit>
        <trans-unit id="425510776d130e4e69afbfbb17eef604ccb37e7e" translate="yes" xml:space="preserve">
          <source>n_classes</source>
          <target state="translated">n_classes</target>
        </trans-unit>
        <trans-unit id="4cf537d4847fbe73ed9b9df1329ebb5f5f7212ba" translate="yes" xml:space="preserve">
          <source>n_fft</source>
          <target state="translated">n_fft</target>
        </trans-unit>
        <trans-unit id="46a4f1a13abc7b6baa49106d149b8aa25b91d554" translate="yes" xml:space="preserve">
          <source>n_t</source>
          <target state="translated">n_t</target>
        </trans-unit>
        <trans-unit id="a684a5d2d0b57f805d917d74f6dae317348dc86a" translate="yes" xml:space="preserve">
          <source>n_{dim}</source>
          <target state="translated">n_{dim}</target>
        </trans-unit>
        <trans-unit id="e1b335fb5313ef3a1c41bd860aedc229ab4676a1" translate="yes" xml:space="preserve">
          <source>narrow</source>
          <target state="translated">narrow</target>
        </trans-unit>
        <trans-unit id="f60d2a2f7993d5825671faef6f38d5d8a0c34130" translate="yes" xml:space="preserve">
          <source>ne</source>
          <target state="translated">ne</target>
        </trans-unit>
        <trans-unit id="d18e35aede3ec244b98e9d298a2f2a98351ed1ea" translate="yes" xml:space="preserve">
          <source>needs to be greater than or equal to 2; if equal to 2 then a trivial matrix-matrix product is returned. If</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c732df421369e3a2b3021395aa21b442d1dba9fe" translate="yes" xml:space="preserve">
          <source>neg</source>
          <target state="translated">neg</target>
        </trans-unit>
        <trans-unit id="5ec4af316598fd7d90fe15896e443fb941cd60bf" translate="yes" xml:space="preserve">
          <source>negative_slope</source>
          <target state="translated">negative_slope</target>
        </trans-unit>
        <trans-unit id="c2a6b03f190dfb2b4aa91f8af8d477a9bc3401dc" translate="yes" xml:space="preserve">
          <source>new</source>
          <target state="translated">new</target>
        </trans-unit>
        <trans-unit id="fa1778e1876307138fd25d7d12407a15cce62c15" translate="yes" xml:space="preserve">
          <source>new mask that combines the effects of the &lt;code&gt;default_mask&lt;/code&gt; and the new mask from the current pruning &lt;code&gt;method&lt;/code&gt; (of same dimensions as &lt;code&gt;default_mask&lt;/code&gt; and &lt;code&gt;t&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70877ec5b1c254304aa08b11aa024bab196ff116" translate="yes" xml:space="preserve">
          <source>new_empty</source>
          <target state="translated">new_empty</target>
        </trans-unit>
        <trans-unit id="82b73122940221095ea66ed7b1b470921013ab21" translate="yes" xml:space="preserve">
          <source>new_full</source>
          <target state="translated">new_full</target>
        </trans-unit>
        <trans-unit id="0fe985e7b2bb83f42c5d5f0916064f7f9f4231d2" translate="yes" xml:space="preserve">
          <source>new_zeros</source>
          <target state="translated">new_zeros</target>
        </trans-unit>
        <trans-unit id="df02b249d667a6650f02568398e6e6fbe48f659b" translate="yes" xml:space="preserve">
          <source>niter (int, optional): the number of subspace iterations to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd97f6772aaff10365ac90acf1ad39642bc88aa4" translate="yes" xml:space="preserve">
          <source>nll_loss</source>
          <target state="translated">nll_loss</target>
        </trans-unit>
        <trans-unit id="e0269e9772252826e17989ee17d7b5f5b92a5cae" translate="yes" xml:space="preserve">
          <source>nn.Module</source>
          <target state="translated">nn.Module</target>
        </trans-unit>
        <trans-unit id="2c6857d7d5eb40c54037ed8e51eda9f2e2f82a7c" translate="yes" xml:space="preserve">
          <source>no_grad</source>
          <target state="translated">no_grad</target>
        </trans-unit>
        <trans-unit id="c16214fb1f4f389021916f4837c0863a74a214c7" translate="yes" xml:space="preserve">
          <source>non-linearity to an input sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bf92c7d90f512623085e28cbd8dda952963dc39" translate="yes" xml:space="preserve">
          <source>nonlinearity</source>
          <target state="translated">nonlinearity</target>
        </trans-unit>
        <trans-unit id="350529c7dd90aed4f7c15a8c88a7901c8bb1aece" translate="yes" xml:space="preserve">
          <source>nonzero</source>
          <target state="translated">nonzero</target>
        </trans-unit>
        <trans-unit id="63e37a0d1d51b8efd953de2fcdb71ed70eedafcd" translate="yes" xml:space="preserve">
          <source>norm</source>
          <target state="translated">norm</target>
        </trans-unit>
        <trans-unit id="dbbdb522d825f6e0b0bc09e4b3dd6ce1862ddc3c" translate="yes" xml:space="preserve">
          <source>norm for matrices</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="722659deb799e10ea4ddf23ffc9fdb3c8145664a" translate="yes" xml:space="preserve">
          <source>norm for vectors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac7a029fb084f991d44db9a7ee0cfd17e62df9f1" translate="yes" xml:space="preserve">
          <source>normalization of inputs over specified dimension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="514d9f2e0acc04d77fc45ca16b43c69b19977218" translate="yes" xml:space="preserve">
          <source>normalize</source>
          <target state="translated">normalize</target>
        </trans-unit>
        <trans-unit id="591d739fab7b2a5decbc14a4629418612555d141" translate="yes" xml:space="preserve">
          <source>normalized_shape</source>
          <target state="translated">normalized_shape</target>
        </trans-unit>
        <trans-unit id="4c86d6a214f245d6e35b89aa4368ee3ad414ae4f" translate="yes" xml:space="preserve">
          <source>nuclear norm</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d729c2b9918ea5af25129d2289da048fc29ddba7" translate="yes" xml:space="preserve">
          <source>num_channels</source>
          <target state="translated">num_channels</target>
        </trans-unit>
        <trans-unit id="591ddf81a82d532ca3a5023b684fbb222806c8ac" translate="yes" xml:space="preserve">
          <source>num_directions</source>
          <target state="translated">num_directions</target>
        </trans-unit>
        <trans-unit id="6013b01dad0093aa5b6340688bb31730ea20df62" translate="yes" xml:space="preserve">
          <source>num_layers</source>
          <target state="translated">num_layers</target>
        </trans-unit>
        <trans-unit id="88ddd469059adea080da3fcbaaa4db6b6b0338c5" translate="yes" xml:space="preserve">
          <source>num_samples</source>
          <target state="translated">num_samples</target>
        </trans-unit>
        <trans-unit id="b1179e760b426b4992652146b0be692b99681a17" translate="yes" xml:space="preserve">
          <source>number of classes (including blank)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a81af3e591ac713f81ea1efe93dcf36157d8376" translate="yes" xml:space="preserve">
          <source>o</source>
          <target state="translated">o</target>
        </trans-unit>
        <trans-unit id="a497fa099f450317fe4a511e3e6ba14d4978daef" translate="yes" xml:space="preserve">
          <source>o_t</source>
          <target state="translated">o_t</target>
        </trans-unit>
        <trans-unit id="de04fa0e29f9b35e24905d2e512bedc9bb6e09e4" translate="yes" xml:space="preserve">
          <source>of</source>
          <target state="translated">of</target>
        </trans-unit>
        <trans-unit id="c5cd95075284e0e76bd2204023e932876960be07" translate="yes" xml:space="preserve">
          <source>of &lt;code&gt;a&lt;/code&gt; and the first</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c421e420676463efc057a3afebb22b7dad76a29" translate="yes" xml:space="preserve">
          <source>of size</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2263e6a77aa654ea8937e310e4e58af7cbbc1cc" translate="yes" xml:space="preserve">
          <source>of the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d41f39af7dca702b1c5e1db0deecf9e3258c09b" translate="yes" xml:space="preserve">
          <source>of the given tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3926b39a9962c786c427df130a267b05d2f4254a" translate="yes" xml:space="preserve">
          <source>of the given tensor. The behavior is similar to python&amp;rsquo;s &lt;code&gt;itertools.combinations&lt;/code&gt; when &lt;code&gt;with_replacement&lt;/code&gt; is set to &lt;code&gt;False&lt;/code&gt;, and &lt;code&gt;itertools.combinations_with_replacement&lt;/code&gt; when &lt;code&gt;with_replacement&lt;/code&gt; is set to &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a775edb975e33f726b320803110b746585f493f0" translate="yes" xml:space="preserve">
          <source>of the previous layer multiplied by dropout</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aadb8025ad726e1bbe8dda14e26471ad6fa5f221" translate="yes" xml:space="preserve">
          <source>of the weight matrix calculated using power iteration method. If the dimension of the weight tensor is greater than 2, it is reshaped to 2D in power iteration method to get spectral norm. This is implemented via a hook that calculates spectral norm and rescales weight before every &lt;code&gt;forward()&lt;/code&gt; call.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a147d21b0235d79c5a43743be73adb75ce9f534b" translate="yes" xml:space="preserve">
          <source>one_hot</source>
          <target state="translated">one_hot</target>
        </trans-unit>
        <trans-unit id="c7d08f6c9857f5fd5b0f2e3d55954466f32fc1d3" translate="yes" xml:space="preserve">
          <source>ones</source>
          <target state="translated">ones</target>
        </trans-unit>
        <trans-unit id="5172f00b979dc48e18a1b9ce8c5bd543043a7522" translate="yes" xml:space="preserve">
          <source>ones_like</source>
          <target state="translated">ones_like</target>
        </trans-unit>
        <trans-unit id="1758356db21759f7c5a0da9b4dd1db8fd6feab3f" translate="yes" xml:space="preserve">
          <source>or</source>
          <target state="translated">or</target>
        </trans-unit>
        <trans-unit id="67a0678f114296f3dccecaa861a62858717e6e26" translate="yes" xml:space="preserve">
          <source>or &lt;code&gt;(sum(target_lengths))&lt;/code&gt;. Targets cannot be blank. In the second form, the targets are assumed to be concatenated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e4187c7a61538ee424c23f1e250b73e2bd41720" translate="yes" xml:space="preserve">
          <source>or as given by &lt;code&gt;output_size&lt;/code&gt; in the call operator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5c622804d00c9194fbd10de905f721aeaef7c7a" translate="yes" xml:space="preserve">
          <source>or for batches of symmetric positive-definite matrices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11657ec4b22f0d80c4a51caca3dfc291f2fe0b9f" translate="yes" xml:space="preserve">
          <source>or in the case of the &lt;code&gt;weight&lt;/code&gt; argument being specified:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39368e12dca7c23b36b1cda458325a542f4a6a26" translate="yes" xml:space="preserve">
          <source>ord</source>
          <target state="translated">ord</target>
        </trans-unit>
        <trans-unit id="7e4a4c6a63518c67cfca884c3f2aea4a294cc963" translate="yes" xml:space="preserve">
          <source>order such that their upper left and lower right corners are diagonally adjacent. All other elements are set to 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cdd54cb9c0611b044de5e9adf6542d73bb839ae" translate="yes" xml:space="preserve">
          <source>orthonormal columns.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0941e68da8f38151ff86a61fc59f7c5cf9fcaa2" translate="yes" xml:space="preserve">
          <source>other</source>
          <target state="translated">other</target>
        </trans-unit>
        <trans-unit id="80427506b996b7ac75d5fd7357a3cd34d2484c66" translate="yes" xml:space="preserve">
          <source>otherwise</source>
          <target state="translated">otherwise</target>
        </trans-unit>
        <trans-unit id="e91ae44094e83f7449d28be33ff71baa8a7600e7" translate="yes" xml:space="preserve">
          <source>otherwise.</source>
          <target state="translated">otherwise.</target>
        </trans-unit>
        <trans-unit id="f4800df8d1bc61fc95220645938cd65532a64067" translate="yes" xml:space="preserve">
          <source>out</source>
          <target state="translated">out</target>
        </trans-unit>
        <trans-unit id="7fc427be893f84c4ff2bd730e08bc0b3cb3a66b9" translate="yes" xml:space="preserve">
          <source>out = \beta\ \text{input} + \alpha\ (\sum_{i=0}^{b-1} \text{batch1}_i \mathbin{@} \text{batch2}_i)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f2de5db4641c777453c92621a24b00808b66da6" translate="yes" xml:space="preserve">
          <source>out(N_i, C_j, h, w) = \frac{1}{kH * kW} \sum_{m=0}^{kH-1} \sum_{n=0}^{kW-1} input(N_i, C_j, stride[0] \times h + m, stride[1] \times w + n)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2037ec60be2f58cfdf14b3f8a871dca9111f38c" translate="yes" xml:space="preserve">
          <source>out(N_i, C_j, k) = \max_{m=0, \ldots, \text{kernel\_size} - 1} input(N_i, C_j, stride \times k + m)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb0ebd9c6a6715318ba5ca37bd8c265c720c7e88" translate="yes" xml:space="preserve">
          <source>out(N_i, C_{out_j}) = bias(C_{out_j}) + \sum_{k = 0}^{C_{in} - 1} weight(C_{out_j}, k) \star input(N_i, k)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="337bde7ac38dbcd4c89c820ec7f800a5711953b5" translate="yes" xml:space="preserve">
          <source>out_channels</source>
          <target state="translated">out_channels</target>
        </trans-unit>
        <trans-unit id="2cb21e4f58b98e5b412ad7cd1e02badaa229f134" translate="yes" xml:space="preserve">
          <source>out_features</source>
          <target state="translated">out_features</target>
        </trans-unit>
        <trans-unit id="62838dd22249963ac92afde5d1fb8949b1f9f99e" translate="yes" xml:space="preserve">
          <source>out_i = I_0 \left( \beta \sqrt{1 - \left( {\frac{i - N/2}{N/2}} \right) ^2 } \right) / I_0( \beta )</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d7a8e6bf59aaa2dec12f1dbd1ebd6673a0e9089" translate="yes" xml:space="preserve">
          <source>output (&lt;a href=&quot;../tensors#torch.Tensor&quot;&gt;Tensor&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d507e3178158a1bcd3fb14932af2fb7248a2f123" translate="yes" xml:space="preserve">
          <source>output (&lt;a href=&quot;tensors#torch.Tensor&quot;&gt;Tensor&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="065fae9ac517e98e7084e042ce6ead04d93456f5" translate="yes" xml:space="preserve">
          <source>output (Tensor or tuple of Tensors)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d49b261a4812b5766ab18ee4be9980c57bfa87c8" translate="yes" xml:space="preserve">
          <source>output Tensor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fdc443325e994c61d1fdffa28bebfba06f71b77" translate="yes" xml:space="preserve">
          <source>output Tensor of size (</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f61e8e2b36475494af0aaa457deb5c4ced1c792" translate="yes" xml:space="preserve">
          <source>output1:</source>
          <target state="translated">output1:</target>
        </trans-unit>
        <trans-unit id="f772033e4063df709839d5c01eeeb721c9070c94" translate="yes" xml:space="preserve">
          <source>output2: &lt;code&gt;Scalar&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27806062493e422e06f1adc0af3df9590689c118" translate="yes" xml:space="preserve">
          <source>output:</source>
          <target state="translated">output:</target>
        </trans-unit>
        <trans-unit id="9ee59305a94337b1ba33dd808f7cecaea462c309" translate="yes" xml:space="preserve">
          <source>output_padding</source>
          <target state="translated">output_padding</target>
        </trans-unit>
        <trans-unit id="785074e3867b983abd71a72e8765c70d95341502" translate="yes" xml:space="preserve">
          <source>output_size</source>
          <target state="translated">output_size</target>
        </trans-unit>
        <trans-unit id="516b9783fca517eecbd1d064da2d165310b19759" translate="yes" xml:space="preserve">
          <source>p</source>
          <target state="translated">p</target>
        </trans-unit>
        <trans-unit id="6602b084fb4ea9979ed735705928d14ea4640fdc" translate="yes" xml:space="preserve">
          <source>p = 0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="040778a57c939f12d614f9ca65c3ccfe9091256a" translate="yes" xml:space="preserve">
          <source>p = \infty</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea3643505f36de097e0cb94187d4b4b4f96ee83c" translate="yes" xml:space="preserve">
          <source>p \in (0, \infty)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a75a54332dd4176a17df9a25bf63099d596d55b" translate="yes" xml:space="preserve">
          <source>p_c</source>
          <target state="translated">p_c</target>
        </trans-unit>
        <trans-unit id="ad58a7a4f8d4d8760f8f61837616f4a401195e99" translate="yes" xml:space="preserve">
          <source>p_c &amp;gt; 1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b43f28fa0ae40b8d4e5580b784d2d0ea3f47b58" translate="yes" xml:space="preserve">
          <source>p_c &amp;lt; 1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4543b0a2c60febf3f762b5facda2151187aad53f" translate="yes" xml:space="preserve">
          <source>p_tensor[i]</source>
          <target state="translated">p_tensor[i]</target>
        </trans-unit>
        <trans-unit id="ebe6da41bbc90c8e4fbfd13cd3e3611c0b096562" translate="yes" xml:space="preserve">
          <source>p_{1} \times p_{N + 1}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7af00d08a52c4c819d0e5c231dd32376f3edabc" translate="yes" xml:space="preserve">
          <source>p_{i} \times p_{i + 1}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51da2df9f47e0219a2f38d7fdbfec27d535ed3b2" translate="yes" xml:space="preserve">
          <source>pad</source>
          <target state="translated">pad</target>
        </trans-unit>
        <trans-unit id="dd4355d9d6a2995312181255c8360adb304d044d" translate="yes" xml:space="preserve">
          <source>padding</source>
          <target state="translated">padding</target>
        </trans-unit>
        <trans-unit id="5bc0bb5794e060a022b125129c7c1daa9f81bd3d" translate="yes" xml:space="preserve">
          <source>padding[0]</source>
          <target state="translated">padding[0]</target>
        </trans-unit>
        <trans-unit id="134658e43dce3a3b257b609019c5cf77211a445e" translate="yes" xml:space="preserve">
          <source>padding[1]</source>
          <target state="translated">padding[1]</target>
        </trans-unit>
        <trans-unit id="69b21a4044caecc1bcc40f355114ec44cc55bbdd" translate="yes" xml:space="preserve">
          <source>padding[2]</source>
          <target state="translated">padding[2]</target>
        </trans-unit>
        <trans-unit id="8fe0a7399c476fe2f8ce1f2551a07dc125277f72" translate="yes" xml:space="preserve">
          <source>padding_back</source>
          <target state="translated">padding_back</target>
        </trans-unit>
        <trans-unit id="30788b3116ef8c0f3d6db92e3439adce357ab2a1" translate="yes" xml:space="preserve">
          <source>padding_bottom</source>
          <target state="translated">padding_bottom</target>
        </trans-unit>
        <trans-unit id="c83043886e10cf25a2e8593521b9588fdbcd596d" translate="yes" xml:space="preserve">
          <source>padding_front</source>
          <target state="translated">padding_front</target>
        </trans-unit>
        <trans-unit id="a4fd51de1ab5e476033aaf5b99bf379065882584" translate="yes" xml:space="preserve">
          <source>padding_left</source>
          <target state="translated">padding_left</target>
        </trans-unit>
        <trans-unit id="7794840bc5798b366e6ba07769f7942c4d99e1e9" translate="yes" xml:space="preserve">
          <source>padding_right</source>
          <target state="translated">padding_right</target>
        </trans-unit>
        <trans-unit id="88db1dcbb463d15a09a80337c992140a737eae65" translate="yes" xml:space="preserve">
          <source>padding_top</source>
          <target state="translated">padding_top</target>
        </trans-unit>
        <trans-unit id="556ecb6644f08a1fda9a4217eb7a95b0d2bc55e6" translate="yes" xml:space="preserve">
          <source>pairwise_distance</source>
          <target state="translated">pairwise_distance</target>
        </trans-unit>
        <trans-unit id="a5b6a92deb69386faf58ed08246328a14b25c9fa" translate="yes" xml:space="preserve">
          <source>pdist</source>
          <target state="translated">pdist</target>
        </trans-unit>
        <trans-unit id="5a981ed1076f37f74f44b5e0f58a699a060e4767" translate="yes" xml:space="preserve">
          <source>per_sample_weights (Tensor, optional): a tensor of float / double weights, or None</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4faea3136b2713888ff385089f9267a57922075" translate="yes" xml:space="preserve">
          <source>permute</source>
          <target state="translated">permute</target>
        </trans-unit>
        <trans-unit id="578cb64baaecdefc2483317afc41705740e5c90b" translate="yes" xml:space="preserve">
          <source>pixel_shuffle</source>
          <target state="translated">pixel_shuffle</target>
        </trans-unit>
        <trans-unit id="735b25a43f705cc6b7b961c12da9ddd5f1652539" translate="yes" xml:space="preserve">
          <source>poisson_nll_loss</source>
          <target state="translated">poisson_nll_loss</target>
        </trans-unit>
        <trans-unit id="d53bec2dee0c0eeac4f10dd55b03985f300abd61" translate="yes" xml:space="preserve">
          <source>positive examples.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c489d619caf333fd1dc1b5746f8a9b6af996204" translate="yes" xml:space="preserve">
          <source>pow</source>
          <target state="translated">pow</target>
        </trans-unit>
        <trans-unit id="e4f311775a21a2ce6c08d542ef07d16e235f1ef1" translate="yes" xml:space="preserve">
          <source>precision may be lost if the magnitudes of the elements of &lt;code&gt;input&lt;/code&gt; are large</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62bbccede7613a5fbe89a59c3367a7bd82d805a9" translate="yes" xml:space="preserve">
          <source>prelu</source>
          <target state="translated">prelu</target>
        </trans-unit>
        <trans-unit id="eec47717bff78d9e7d84c9065a91b2bd5a9f50ac" translate="yes" xml:space="preserve">
          <source>prelu (single weight shared among input channels not supported)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7027bf5089d14ae6dc549c0018aef1c31acd4a20" translate="yes" xml:space="preserve">
          <source>probability value given in &lt;code&gt;input&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6c433acac2a27cc06a0625896fe3e540a275ac9" translate="yes" xml:space="preserve">
          <source>prod</source>
          <target state="translated">prod</target>
        </trans-unit>
        <trans-unit id="119807cb0fa4a2b19fc3eb72fcd5a017f2ee5f5b" translate="yes" xml:space="preserve">
          <source>pruned version of tensor &lt;code&gt;t&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46314c48304d5a440b941aae7007ca72d241c60c" translate="yes" xml:space="preserve">
          <source>pruned version of the input tensor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dac4ced94512076126b9ec39c72e2a28baff3f5d" translate="yes" xml:space="preserve">
          <source>pruned_tensor (&lt;a href=&quot;../tensors#torch.Tensor&quot;&gt;torch.Tensor&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22ea1c649c82946aa6e479e1ffd321e4a318b1b0" translate="yes" xml:space="preserve">
          <source>q</source>
          <target state="translated">q</target>
        </trans-unit>
        <trans-unit id="d9b48c3f979f6028479fb7b9dea3762f72ac3903" translate="yes" xml:space="preserve">
          <source>q (int, optional): a slightly overestimated rank of A.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72bd8c40460e4cea63418032db03184266f9443f" translate="yes" xml:space="preserve">
          <source>q(6)</source>
          <target state="translated">q(6)</target>
        </trans-unit>
        <trans-unit id="1529fb1f657501e0913fe0ca61249536310a24f0" translate="yes" xml:space="preserve">
          <source>query:</source>
          <target state="translated">query:</target>
        </trans-unit>
        <trans-unit id="4dc7c9ec434ed06502767136789763ec11d2c4b7" translate="yes" xml:space="preserve">
          <source>r</source>
          <target state="translated">r</target>
        </trans-unit>
        <trans-unit id="f97921dfc363be75db93f14dbc629fac387b5647" translate="yes" xml:space="preserve">
          <source>r_t</source>
          <target state="translated">r_t</target>
        </trans-unit>
        <trans-unit id="9f81efa250c564c22abb3a266a9427f5ed034e64" translate="yes" xml:space="preserve">
          <source>r_{i_0,...,i_{m-d}, i_d,...,i_n} = \sum_{k_0,...,k_{d-1}} a_{i_0,...,i_{m-d},k_0,...,k_{d-1}} \times b_{k_0,...,k_{d-1}, i_d,...,i_n}.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="524005606ce5a9dca230b8d334e82c37526bd9a5" translate="yes" xml:space="preserve">
          <source>rand</source>
          <target state="translated">rand</target>
        </trans-unit>
        <trans-unit id="73e283f9cf805a0e97d015d3295804fd51dfd254" translate="yes" xml:space="preserve">
          <source>randn</source>
          <target state="translated">randn</target>
        </trans-unit>
        <trans-unit id="87d7a0c261dd3a1f4814d66720fe669183056656" translate="yes" xml:space="preserve">
          <source>randn_like</source>
          <target state="translated">randn_like</target>
        </trans-unit>
        <trans-unit id="1dce71ca26340b781d172a09cc6c48f98a58c7bc" translate="yes" xml:space="preserve">
          <source>reciprocal</source>
          <target state="translated">reciprocal</target>
        </trans-unit>
        <trans-unit id="3b3cea7ab5b6598258360321d292b1bdd68e0c3c" translate="yes" xml:space="preserve">
          <source>recv</source>
          <target state="translated">recv</target>
        </trans-unit>
        <trans-unit id="48c3689f6dd5e9e952f925b7ebebf64d7c43fc56" translate="yes" xml:space="preserve">
          <source>reduce</source>
          <target state="translated">reduce</target>
        </trans-unit>
        <trans-unit id="7853c46fa66b8c54fdaac7997f17652f36f69702" translate="yes" xml:space="preserve">
          <source>reduce=None, reduction=&amp;rsquo;mean&amp;rsquo;) -&amp;gt; Tensor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf4f4da1db5cde0fad2fa6d80a1db29f94e549b0" translate="yes" xml:space="preserve">
          <source>reduce_scatter</source>
          <target state="translated">reduce_scatter</target>
        </trans-unit>
        <trans-unit id="156f7dea013dd11ca14224775377c39c66dd7578" translate="yes" xml:space="preserve">
          <source>reflection_pad</source>
          <target state="translated">reflection_pad</target>
        </trans-unit>
        <trans-unit id="6ae7ef96fa3ce4f3c38c0c7502b2cf5f5784ca91" translate="yes" xml:space="preserve">
          <source>regions by a stochastic step size determined by the target output size. The number of output features is equal to the number of input planes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef644877d20a5fb0ce817ede24e2e132dc83af3d" translate="yes" xml:space="preserve">
          <source>regions by step size</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="223364cb0e345ea96b10a7e48be1f58dfb9eb072" translate="yes" xml:space="preserve">
          <source>relu</source>
          <target state="translated">relu</target>
        </trans-unit>
        <trans-unit id="bc3e41042fc77243551f6d03ea6b362f3a53a6d9" translate="yes" xml:space="preserve">
          <source>relu6</source>
          <target state="translated">relu6</target>
        </trans-unit>
        <trans-unit id="c0ac4842418e34583859262c033965cfd49454e0" translate="yes" xml:space="preserve">
          <source>repeat</source>
          <target state="translated">repeat</target>
        </trans-unit>
        <trans-unit id="0191a218b0a092950e612c401498e99e66cb3bc8" translate="yes" xml:space="preserve">
          <source>replication_pad</source>
          <target state="translated">replication_pad</target>
        </trans-unit>
        <trans-unit id="bcd3f983e433bcb564c2168a8bcab9a55f7eb041" translate="yes" xml:space="preserve">
          <source>represent arbitrary spatial dimensions. This operation flattens each sliding &lt;code&gt;kernel_size&lt;/code&gt;-sized block within the spatial dimensions of &lt;code&gt;input&lt;/code&gt; into a column (i.e., last dimension) of a 3-D &lt;code&gt;output&lt;/code&gt; tensor of shape</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ce95147f7a3ccb6f09fa05d224ec2433e1a2a14" translate="yes" xml:space="preserve">
          <source>represents any number of additional dimensions as supported by the distance function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2e7e0502243a5122c266a511d6cb020bd9b26d8" translate="yes" xml:space="preserve">
          <source>reshape</source>
          <target state="translated">reshape</target>
        </trans-unit>
        <trans-unit id="6bace260a54a2517ee433492343e830d3264b2ab" translate="yes" xml:space="preserve">
          <source>reshape_as</source>
          <target state="translated">reshape_as</target>
        </trans-unit>
        <trans-unit id="4680cad3c1a29b7083c5adaa4db79da78e4162f8" translate="yes" xml:space="preserve">
          <source>resolution</source>
          <target state="translated">resolution</target>
        </trans-unit>
        <trans-unit id="d37954da2396bcb09f826aa3647a6bcee3a9638d" translate="yes" xml:space="preserve">
          <source>respectively, where</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e13527e2c444bf4575f2c473dce8a53a4619b56" translate="yes" xml:space="preserve">
          <source>respectively. &lt;code&gt;some&lt;/code&gt; will be ignored here.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a3fbfe0e01bcea6cef5365e3ab70a1fd87d3292" translate="yes" xml:space="preserve">
          <source>result[i]</source>
          <target state="translated">result[i]</target>
        </trans-unit>
        <trans-unit id="f0590a6dd3663be108ff31f58d16b829a1284be6" translate="yes" xml:space="preserve">
          <source>round</source>
          <target state="translated">round</target>
        </trans-unit>
        <trans-unit id="a247bd693185bd2372f9acccf0aa55956fa112ca" translate="yes" xml:space="preserve">
          <source>rows of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c7d0ab561d6b3fecd1d0dbb8ac3a7a1d85cd186" translate="yes" xml:space="preserve">
          <source>rows of that column.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a061d2b968e7adeeaea550b3dc02aea9aaa5085" translate="yes" xml:space="preserve">
          <source>rrelu</source>
          <target state="translated">rrelu</target>
        </trans-unit>
        <trans-unit id="088a6a5355a540dedbb1bfa4b2587df63abf09a0" translate="yes" xml:space="preserve">
          <source>rsqrt</source>
          <target state="translated">rsqrt</target>
        </trans-unit>
        <trans-unit id="acf7d049be93423c325c4ffcfe2760789e265d90" translate="yes" xml:space="preserve">
          <source>rsub</source>
          <target state="translated">rsub</target>
        </trans-unit>
        <trans-unit id="f0451c6d33ece2ca9e7238066bd51cd94a37e5fb" translate="yes" xml:space="preserve">
          <source>rtol</source>
          <target state="translated">rtol</target>
        </trans-unit>
        <trans-unit id="a0f1490a20d0211c997b44bc357e1972deab8ae3" translate="yes" xml:space="preserve">
          <source>s</source>
          <target state="translated">s</target>
        </trans-unit>
        <trans-unit id="ecda5eecde4ae0c00d4ba84a481584e86789f26f" translate="yes" xml:space="preserve">
          <source>s)</source>
          <target state="translated">s)</target>
        </trans-unit>
        <trans-unit id="b18e7a2079b5907888555c2ef5b17619bf433b65" translate="yes" xml:space="preserve">
          <source>sH \times sW</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c912a488378bd44b7e20ae784b32cecd15ecf7e5" translate="yes" xml:space="preserve">
          <source>sT \times sH \times sW</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38b1f4c4fc09d7e4369411352f6a56b49270c54f" translate="yes" xml:space="preserve">
          <source>s_n</source>
          <target state="translated">s_n</target>
        </trans-unit>
        <trans-unit id="62acd96977013d6badd9478efa8b090b6a51c51f" translate="yes" xml:space="preserve">
          <source>scalar_tensor</source>
          <target state="translated">scalar_tensor</target>
        </trans-unit>
        <trans-unit id="60020d1b19707b587574a1c80412af51ea9e12b3" translate="yes" xml:space="preserve">
          <source>scale</source>
          <target state="translated">scale</target>
        </trans-unit>
        <trans-unit id="83bf8bfb0a2a1cd5d2dc529948e5c77992f09436" translate="yes" xml:space="preserve">
          <source>scale=1.0507009873554804934193349852946</source>
          <target state="translated">scale=1.0507009873554804934193349852946</target>
        </trans-unit>
        <trans-unit id="e790cf8376a0ac7391dd3e0ec38c12e026533982" translate="yes" xml:space="preserve">
          <source>scale_factor</source>
          <target state="translated">scale_factor</target>
        </trans-unit>
        <trans-unit id="3bf7e63ecf2211c9deaa81dd73aa06715d55d873" translate="yes" xml:space="preserve">
          <source>scatter</source>
          <target state="translated">scatter</target>
        </trans-unit>
        <trans-unit id="e70658f61bb8732bd94b92df0ed0f8c117fdee62" translate="yes" xml:space="preserve">
          <source>scatter_add</source>
          <target state="translated">scatter_add</target>
        </trans-unit>
        <trans-unit id="33dbcf9aba07c96aa5ac276855c023584b811b89" translate="yes" xml:space="preserve">
          <source>scores (&lt;code&gt;Tensor[N]&lt;/code&gt;): the scores or each prediction</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66bef81d6368f9cb3bb2eb409f383b3e8fb822dd" translate="yes" xml:space="preserve">
          <source>see &lt;a href=&quot;generated/torch.flatten#torch.flatten&quot;&gt;&lt;code&gt;torch.flatten()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e560d24764971ebe0b7d36c86f27f6ee098a8e1" translate="yes" xml:space="preserve">
          <source>see the docs in Transformer class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81448fe273247b533b9f018e96c158cab7901247" translate="yes" xml:space="preserve">
          <source>select</source>
          <target state="translated">select</target>
        </trans-unit>
        <trans-unit id="40380bc1d358a6f8665b37bbdc8c7ccc6c38a861" translate="yes" xml:space="preserve">
          <source>self</source>
          <target state="translated">self</target>
        </trans-unit>
        <trans-unit id="b1a33f9551b1d55d70b07c261fc1d9f2228aac7b" translate="yes" xml:space="preserve">
          <source>self[i]</source>
          <target state="translated">self[i]</target>
        </trans-unit>
        <trans-unit id="ccfe97359e48fa1ba8bcebc2edde2bb34597b130" translate="yes" xml:space="preserve">
          <source>selu</source>
          <target state="translated">selu</target>
        </trans-unit>
        <trans-unit id="37ed539c0cef13959abd980bebf30f4922f606e3" translate="yes" xml:space="preserve">
          <source>send</source>
          <target state="translated">send</target>
        </trans-unit>
        <trans-unit id="7cf645cd94a76f4538e57cc84de860088c3111b1" translate="yes" xml:space="preserve">
          <source>serialization (&lt;a href=&quot;generated/torch.load#torch.load&quot;&gt;&lt;code&gt;torch.load()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;generated/torch.save#torch.save&quot;&gt;&lt;code&gt;torch.save()&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08bed0a8fd03f68eda93a2e2782a5b758b6a7b01" translate="yes" xml:space="preserve">
          <source>set_grad_enabled</source>
          <target state="translated">set_grad_enabled</target>
        </trans-unit>
        <trans-unit id="9df50c805f677c508e43332854b08b28684fc8a9" translate="yes" xml:space="preserve">
          <source>sgn</source>
          <target state="translated">sgn</target>
        </trans-unit>
        <trans-unit id="9c00d582e1588d3972573399daeb863ae43b8c0c" translate="yes" xml:space="preserve">
          <source>should be divisible by the number of groups. Default: 1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd703fe5efb7d34d9c698f631386f087087b9c07" translate="yes" xml:space="preserve">
          <source>should be numbers between 0 and 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb731b4b62b0ca40dbdeebb06d5a47f8c8c2dd62" translate="yes" xml:space="preserve">
          <source>should be transposed before being sent into the solver. Default: &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8e7e7e1dc6eb2b01cc9f4dd5b600659b15acaa8" translate="yes" xml:space="preserve">
          <source>sigmoid</source>
          <target state="translated">sigmoid</target>
        </trans-unit>
        <trans-unit id="81e9209e64bdd3a52fa01ece075eaa947db8fc49" translate="yes" xml:space="preserve">
          <source>sign</source>
          <target state="translated">sign</target>
        </trans-unit>
        <trans-unit id="f9d94b8d1ee59c26fa73464cb170d98afd1fe5b9" translate="yes" xml:space="preserve">
          <source>silu</source>
          <target state="translated">silu</target>
        </trans-unit>
        <trans-unit id="3941da996c7bba128c897763b18b5a2db21d2a9f" translate="yes" xml:space="preserve">
          <source>similarity</source>
          <target state="translated">similarity</target>
        </trans-unit>
        <trans-unit id="7d14c04a713a160cb60e929cea38887511c6bbc4" translate="yes" xml:space="preserve">
          <source>sin</source>
          <target state="translated">sin</target>
        </trans-unit>
        <trans-unit id="688cfd5ead85788c8aadc47c592b985a6022dc06" translate="yes" xml:space="preserve">
          <source>sinh</source>
          <target state="translated">sinh</target>
        </trans-unit>
        <trans-unit id="89368e1d68015693ab48ee189d0632cb5d6edfb3" translate="yes" xml:space="preserve">
          <source>size</source>
          <target state="translated">size</target>
        </trans-unit>
        <trans-unit id="0a5228e66df38e2f27ca61b901edf86f7ef97fb8" translate="yes" xml:space="preserve">
          <source>slice</source>
          <target state="translated">slice</target>
        </trans-unit>
        <trans-unit id="fcf58169456a6f2708f5d2500a398408530153a4" translate="yes" xml:space="preserve">
          <source>smallest singular value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0da4cc04f7759e9188fe635e886bb465b73e7cb0" translate="yes" xml:space="preserve">
          <source>smooth_l1_loss</source>
          <target state="translated">smooth_l1_loss</target>
        </trans-unit>
        <trans-unit id="c7b5699a9ade9c0141b8b556708f765e5ac7d672" translate="yes" xml:space="preserve">
          <source>snd_tensor:</source>
          <target state="translated">snd_tensor:</target>
        </trans-unit>
        <trans-unit id="98cf614106ae4e9d4fe1e9a94651c02dcd16b464" translate="yes" xml:space="preserve">
          <source>so that the operator is unitary, where</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="993a760d053ffed06d81e9fa36e498b3f97790af" translate="yes" xml:space="preserve">
          <source>so that the operator is unitary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82418153cf864e7e7de4a34a319d768e41172765" translate="yes" xml:space="preserve">
          <source>soft_margin_loss</source>
          <target state="translated">soft_margin_loss</target>
        </trans-unit>
        <trans-unit id="2e5560100dfa63a210d2c111b343e54cbd1c7efb" translate="yes" xml:space="preserve">
          <source>softmax</source>
          <target state="translated">softmax</target>
        </trans-unit>
        <trans-unit id="51dea3195bdc73f93ee2ede7e6b5ec988cbb0042" translate="yes" xml:space="preserve">
          <source>softmin</source>
          <target state="translated">softmin</target>
        </trans-unit>
        <trans-unit id="26f3e530930f07851c6c04e8b482e9c16be0b32e" translate="yes" xml:space="preserve">
          <source>softplus</source>
          <target state="translated">softplus</target>
        </trans-unit>
        <trans-unit id="55dbdc9f0aad795d16cfa8b07a6a39d1c920c1f3" translate="yes" xml:space="preserve">
          <source>softshrink</source>
          <target state="translated">softshrink</target>
        </trans-unit>
        <trans-unit id="3fb659d4e13d21cb35b14f1f676e109b4be3bddc" translate="yes" xml:space="preserve">
          <source>softsign</source>
          <target state="translated">softsign</target>
        </trans-unit>
        <trans-unit id="98c4b8f6e2d770a0f2b54233669d65ff6eddc472" translate="yes" xml:space="preserve">
          <source>sort</source>
          <target state="translated">sort</target>
        </trans-unit>
        <trans-unit id="59905e78a45a9bd77a7c05d8a185ffea2bacf581" translate="yes" xml:space="preserve">
          <source>spans all dimensions of &lt;code&gt;input&lt;/code&gt; and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89fbe385f98339b412c6fb298226e96ec671e454" translate="yes" xml:space="preserve">
          <source>sparse_dim + dense_dim = len(SparseTensor.shape)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fef23e3515b0c0cd44c637ad3268dddd72791b3d" translate="yes" xml:space="preserve">
          <source>spatial locations each containing a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcc44bdbe9ea936ac9eae9d23bae10e7a0a3781e" translate="yes" xml:space="preserve">
          <source>spatial_size</source>
          <target state="translated">spatial_size</target>
        </trans-unit>
        <trans-unit id="94d5cab6f5fe3422a447ab15436e7a672bc0c09a" translate="yes" xml:space="preserve">
          <source>split</source>
          <target state="translated">split</target>
        </trans-unit>
        <trans-unit id="72f3153cdbbfbaaca9285b4d7d97df1c90194172" translate="yes" xml:space="preserve">
          <source>sqrt</source>
          <target state="translated">sqrt</target>
        </trans-unit>
        <trans-unit id="a1259b421aa7044914301832f5d46d49550ff843" translate="yes" xml:space="preserve">
          <source>squeeze</source>
          <target state="translated">squeeze</target>
        </trans-unit>
        <trans-unit id="7b0a5f40f71f72821fc1f14a3d6492676b156a47" translate="yes" xml:space="preserve">
          <source>src:</source>
          <target state="translated">src:</target>
        </trans-unit>
        <trans-unit id="713d260d14786b4785df24a9615736b25973aa5b" translate="yes" xml:space="preserve">
          <source>src_key_padding_mask:</source>
          <target state="translated">src_key_padding_mask:</target>
        </trans-unit>
        <trans-unit id="c5c3b2711c54eb934969dbff40bd8d722e9f5406" translate="yes" xml:space="preserve">
          <source>src_mask:</source>
          <target state="translated">src_mask:</target>
        </trans-unit>
        <trans-unit id="b26dc72d261a92c1cfd1e643717e450a84cf2122" translate="yes" xml:space="preserve">
          <source>stack</source>
          <target state="translated">stack</target>
        </trans-unit>
        <trans-unit id="2b020927d3c6eb407223a1baa3d6ce3597a3f88d" translate="yes" xml:space="preserve">
          <source>start</source>
          <target state="translated">start</target>
        </trans-unit>
        <trans-unit id="55ec981f0a6054d4ad0c3fec7f32b1086f7d24f4" translate="yes" xml:space="preserve">
          <source>std</source>
          <target state="translated">std</target>
        </trans-unit>
        <trans-unit id="bd370d1b6f9b3580a77083b3ed3256c621f44a99" translate="yes" xml:space="preserve">
          <source>step</source>
          <target state="translated">step</target>
        </trans-unit>
        <trans-unit id="6578912eabc4ebb2adc8227a6f64b4aff57456fa" translate="yes" xml:space="preserve">
          <source>steps</source>
          <target state="translated">steps</target>
        </trans-unit>
        <trans-unit id="fb42ab3efc41677d3c936336610bfb2adfb96e46" translate="yes" xml:space="preserve">
          <source>steps. The number of output features is equal to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9fa87cbf0bd484558cf386ec624072742d5aed7" translate="yes" xml:space="preserve">
          <source>steps. The number of output features is equal to the number of input planes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dc89f85b619068818f6ffc8b793a74773a52f83" translate="yes" xml:space="preserve">
          <source>stride</source>
          <target state="translated">stride</target>
        </trans-unit>
        <trans-unit id="309b2f23e589788d071dcdb42e02621a824ea0fa" translate="yes" xml:space="preserve">
          <source>stride[0]</source>
          <target state="translated">stride[0]</target>
        </trans-unit>
        <trans-unit id="a2f00277cbd026e5758561a9cf4ffdbce8039485" translate="yes" xml:space="preserve">
          <source>stride[1]</source>
          <target state="translated">stride[1]</target>
        </trans-unit>
        <trans-unit id="f194666e27d6255bbca6c34cf72f2dd40eb79384" translate="yes" xml:space="preserve">
          <source>stride[2]</source>
          <target state="translated">stride[2]</target>
        </trans-unit>
        <trans-unit id="224635895682e09b8604afdc143ba5afa5a84e54" translate="yes" xml:space="preserve">
          <source>sub (nonzero alpha not supported)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca71e4b795769067a248b708dee0be55b5db6715" translate="yes" xml:space="preserve">
          <source>subject to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdca81ff0033bd52e01e0c38528c9264aeefc4ea" translate="yes" xml:space="preserve">
          <source>such that</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9dff3557ded7414ae530834de7011f1388d202a" translate="yes" xml:space="preserve">
          <source>sum</source>
          <target state="translated">sum</target>
        </trans-unit>
        <trans-unit id="e673747ffe5b66e828d72320fae0a4f7f8ef3ffa" translate="yes" xml:space="preserve">
          <source>sum(abs(x)**ord)**(1./ord)</source>
          <target state="translated">sum(abs(x)**ord)**(1./ord)</target>
        </trans-unit>
        <trans-unit id="22fd9fffa5f75a2c95eea2b939edd0c242e2b28f" translate="yes" xml:space="preserve">
          <source>sum(x != 0)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02becf8b750d2467b97f32992165b7d18a51747e" translate="yes" xml:space="preserve">
          <source>synchronous operation - the default mode, when &lt;code&gt;async_op&lt;/code&gt; is set to False. when the function returns, it is guaranteed that the collective operation is performed (not necessarily completed if it&amp;rsquo;s a CUDA op since all CUDA ops are asynchronous), and any further function calls depending on the data of the collective operation can be called. In the synchronous mode, the collective function does not return anything</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8efd86fb78a56a5145ed7739dcb00c78581c5375" translate="yes" xml:space="preserve">
          <source>t</source>
          <target state="translated">t</target>
        </trans-unit>
        <trans-unit id="429265d7427e6238316a46e6d15251485309c9b0" translate="yes" xml:space="preserve">
          <source>t \times \text{hop\_length}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35ca8cf12ff7ebe96d1bd7602a1968f756f4af33" translate="yes" xml:space="preserve">
          <source>tan</source>
          <target state="translated">tan</target>
        </trans-unit>
        <trans-unit id="e37dc0a85458fdbc0ea7fb77366938eb01e6db4b" translate="yes" xml:space="preserve">
          <source>tanh</source>
          <target state="translated">tanh</target>
        </trans-unit>
        <trans-unit id="8cdbde7bbd6705f6a45b7304d61702c8b393be17" translate="yes" xml:space="preserve">
          <source>tanhshrink</source>
          <target state="translated">tanhshrink</target>
        </trans-unit>
        <trans-unit id="0e8a3ad980ec179856012b7eecf4327e99cd44cd" translate="yes" xml:space="preserve">
          <source>target</source>
          <target state="translated">target</target>
        </trans-unit>
        <trans-unit id="da4d131afc99d77041a093653663c4f0cac0421b" translate="yes" xml:space="preserve">
          <source>target \sim \text{Poisson}(input)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8bce9ad1f2bc285de840deb5c7d3b50a1d7efb3" translate="yes" xml:space="preserve">
          <source>target!</source>
          <target state="translated">target!</target>
        </trans-unit>
        <trans-unit id="83e75b7fd51929675fb24faf699fab05c75626a8" translate="yes" xml:space="preserve">
          <source>target:</source>
          <target state="translated">target:</target>
        </trans-unit>
        <trans-unit id="6d6545c3aa26ff6e8ca877aae6f78b19901b9505" translate="yes" xml:space="preserve">
          <source>target[i]</source>
          <target state="translated">target[i]</target>
        </trans-unit>
        <trans-unit id="07a0228ebd3bc3d80d4c85706256b5a9e9bc290b" translate="yes" xml:space="preserve">
          <source>target_lengths</source>
          <target state="translated">target_lengths</target>
        </trans-unit>
        <trans-unit id="4683e789c34cafab560170ca34013a773f2f9773" translate="yes" xml:space="preserve">
          <source>targets</source>
          <target state="translated">targets</target>
        </trans-unit>
        <trans-unit id="8263b8d5eeb6367eb8377df171462a8dc80fb862" translate="yes" xml:space="preserve">
          <source>tensor and &lt;code&gt;other&lt;/code&gt; is a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d39cd956b4b8b55bf14dd4c4a4acc45f32ad03b5" translate="yes" xml:space="preserve">
          <source>tensor and &lt;code&gt;out&lt;/code&gt; will be a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d0ad7449e98816abf1027e53235644952d3cc00" translate="yes" xml:space="preserve">
          <source>tensor containing input features where</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd2cd249257885171216cc2e9667c98b0f3ca1e5" translate="yes" xml:space="preserve">
          <source>tensor containing the initial hidden state for each element in the batch where</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2da3f62329ccc3877b84fd3b96811a22d137a6c0" translate="yes" xml:space="preserve">
          <source>tensor containing the initial hidden state for each element in the batch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c11afb1a5bca4cd50780c846b0a6aea8767adc9" translate="yes" xml:space="preserve">
          <source>tensor containing the next hidden state for each element in the batch</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="553824dd36b34b7f69ad094949a3b5436a1f97b8" translate="yes" xml:space="preserve">
          <source>tensor of eigenvalues of size</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ef5988ad4ac7995de7fa90393236a72f3b82006" translate="yes" xml:space="preserve">
          <source>tensor was of dimensions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59bc3983dc2bcd844f70354d0dfab948efdb1bef" translate="yes" xml:space="preserve">
          <source>tensor, &lt;code&gt;batch2&lt;/code&gt; is a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d625d71db7ea05b720acd099036575c4c100e89" translate="yes" xml:space="preserve">
          <source>tensor, &lt;code&gt;input&lt;/code&gt; must be &lt;a href=&quot;https://pytorch.org/docs/1.7.0/notes/broadcasting.html#broadcasting-semantics&quot;&gt;broadcastable&lt;/a&gt; with a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45f648e903f6c8135a61582d20236080013906c5" translate="yes" xml:space="preserve">
          <source>tensor, &lt;code&gt;mat2&lt;/code&gt; is a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eec3778e42d11bf95360b5cf38e1c17a39839654" translate="yes" xml:space="preserve">
          <source>tensor, &lt;code&gt;out&lt;/code&gt; will be a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c364fd029c322eadb8930b8f3c7ce9c16bc2d3d" translate="yes" xml:space="preserve">
          <source>tensor, &lt;code&gt;out&lt;/code&gt; will be an</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a3d0dc7ecb65122b92ca527e12b76abe33a1c40" translate="yes" xml:space="preserve">
          <source>tensor, &lt;code&gt;vec&lt;/code&gt; is a 1-D tensor of size</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4b2f391fc60bc4c73aba0e8db273d1994a26b25" translate="yes" xml:space="preserve">
          <source>tensor, &lt;code&gt;vec&lt;/code&gt; is a 1-D tensor of size &lt;code&gt;m&lt;/code&gt;, then &lt;code&gt;input&lt;/code&gt; must be &lt;a href=&quot;https://pytorch.org/docs/1.7.0/notes/broadcasting.html#broadcasting-semantics&quot;&gt;broadcastable&lt;/a&gt; with a 1-D tensor of size &lt;code&gt;n&lt;/code&gt; and &lt;code&gt;out&lt;/code&gt; will be 1-D tensor of size &lt;code&gt;n&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ef9cfaf6dd70877bf14d95005e97a99a57565a2" translate="yes" xml:space="preserve">
          <source>tensor, out will be a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a566ef6bee1892794c532494bc4a572fe5d6d6c" translate="yes" xml:space="preserve">
          <source>tensor, then &lt;code&gt;input&lt;/code&gt; must be &lt;a href=&quot;https://pytorch.org/docs/1.7.0/notes/broadcasting.html#broadcasting-semantics&quot;&gt;broadcastable&lt;/a&gt; with a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbabde0757a85f7aef0313af1ff999561cee4788" translate="yes" xml:space="preserve">
          <source>tensor.</source>
          <target state="translated">tensor.</target>
        </trans-unit>
        <trans-unit id="242253224a4a7a6ecc3c491bd2a20bab5cd6ac8a" translate="yes" xml:space="preserve">
          <source>tensor. Both &lt;code&gt;alpha&lt;/code&gt; and &lt;code&gt;beta&lt;/code&gt; mean the same as the scaling factors used in &lt;a href=&quot;torch.addbmm#torch.addbmm&quot;&gt;&lt;code&gt;torch.addbmm()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2cb6e02350d6ecb6dbc484d96eecb7503e5ff3d" translate="yes" xml:space="preserve">
          <source>tensor1</source>
          <target state="translated">tensor1</target>
        </trans-unit>
        <trans-unit id="ac3138817c04ed83b929038ce5ba4dbf9c2f570a" translate="yes" xml:space="preserve">
          <source>tensor1 .* tensor2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0d45955f6fb934dca2db81e7c0434c50e6c8e94" translate="yes" xml:space="preserve">
          <source>tensor2</source>
          <target state="translated">tensor2</target>
        </trans-unit>
        <trans-unit id="a49be25b0b20988b9b9de9bc7034688fe0ea96f5" translate="yes" xml:space="preserve">
          <source>tensors of size</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daf0ca58fda174171104359fa51be41f68e7e10e" translate="yes" xml:space="preserve">
          <source>test time (s / it)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="270c89a11b5db2953ff9dfa29680a70d1110bf20" translate="yes" xml:space="preserve">
          <source>tgt:</source>
          <target state="translated">tgt:</target>
        </trans-unit>
        <trans-unit id="4d7d671e0f26da889a5aa7240c8e1ca987917ac5" translate="yes" xml:space="preserve">
          <source>tgt_key_padding_mask:</source>
          <target state="translated">tgt_key_padding_mask:</target>
        </trans-unit>
        <trans-unit id="fba35648256711118c5327e0aecbcfcadde0c679" translate="yes" xml:space="preserve">
          <source>tgt_mask:</source>
          <target state="translated">tgt_mask:</target>
        </trans-unit>
        <trans-unit id="320039a94d5f68bf295e16a60e832366bd8127b4" translate="yes" xml:space="preserve">
          <source>that satisfy the following contiguity-like condition that</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbccdf2efb33b52e6c9d0a14dd70b2d415fbea6e" translate="yes" xml:space="preserve">
          <source>the</source>
          <target state="translated">the</target>
        </trans-unit>
        <trans-unit id="af4c3b9b6e2c12152e2ff580c318873cfc785978" translate="yes" xml:space="preserve">
          <source>the input length.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06a1cd62b3a1827e0417f5bb296c2cd91c8f6edb" translate="yes" xml:space="preserve">
          <source>the order of insertion, and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a11ec2ecf564c3fdad90712febb2219014ec63b0" translate="yes" xml:space="preserve">
          <source>the order of norm. Default: &lt;code&gt;'fro'&lt;/code&gt; The following norms can be calculated:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc56e691c78f276f87d03f28e56b143f0e6029c9" translate="yes" xml:space="preserve">
          <source>the return value of the the completed task</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2f7a7f825b9b25a12d3ec338cd9fab6570c02bb" translate="yes" xml:space="preserve">
          <source>then it assumed the first input should be ranked higher (have a larger value) than the second input, and vice-versa for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d349dacf9324e4b66d9bf6ca44bda6fe7c47ca7" translate="yes" xml:space="preserve">
          <source>then the &lt;code&gt;out&lt;/code&gt; tensor will be of shape:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1108a51a0a83b7f486924b74e0245046630b43f3" translate="yes" xml:space="preserve">
          <source>then the output will have shape</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01dafae9a339175d1a66b90650d6b6d6b6214fb6" translate="yes" xml:space="preserve">
          <source>threshold</source>
          <target state="translated">threshold</target>
        </trans-unit>
        <trans-unit id="d8550532adaa8218c8f68c27610246b60612829b" translate="yes" xml:space="preserve">
          <source>threshold (non-zero threshold/non-zero value not supported)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4927dda05af693bff7dfd4c7b40eafb0ef92a78" translate="yes" xml:space="preserve">
          <source>tiny</source>
          <target state="translated">tiny</target>
        </trans-unit>
        <trans-unit id="4374aaee247fb237ce6c97d5c8d64bbe474d16de" translate="yes" xml:space="preserve">
          <source>to</source>
          <target state="translated">to</target>
        </trans-unit>
        <trans-unit id="dcfa56da85d1ba2238996f1799d9f8ce03e42076" translate="yes" xml:space="preserve">
          <source>to a tensor of shape</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89abc9176c19c529964202c7f4e10084e1745679" translate="yes" xml:space="preserve">
          <source>to indicate all weights should be taken to be &lt;code&gt;1&lt;/code&gt;. If specified, &lt;code&gt;per_sample_weights&lt;/code&gt; must have exactly the same shape as input and is treated as having the same &lt;code&gt;offsets&lt;/code&gt;, if those are not &lt;code&gt;None&lt;/code&gt;. Only supported for &lt;code&gt;mode='sum'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3aea9c5b0f7040ef92bf9c9ffad7710d47b4a21b" translate="yes" xml:space="preserve">
          <source>to learn. Although it takes an int as input, there is only two values are legitimate: 1, or the number of channels at input. Default: 1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88fb0fb9f622d041107e95d235f48cf7c8662494" translate="yes" xml:space="preserve">
          <source>to prevent overflow during calculation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1fd5d33dca7430eb778eb4e673fad63e37d9f42" translate="yes" xml:space="preserve">
          <source>topk</source>
          <target state="translated">topk</target>
        </trans-unit>
        <trans-unit id="e7de9e6263e2524557710e5df3ac5dbd8a0ca682" translate="yes" xml:space="preserve">
          <source>torch</source>
          <target state="translated">torch</target>
        </trans-unit>
        <trans-unit id="3faf1d8fbd3eee0020dc9caa659e79a64b6a797c" translate="yes" xml:space="preserve">
          <source>torch.Assert</source>
          <target state="translated">torch.Assert</target>
        </trans-unit>
        <trans-unit id="c408c28a3f3d22a6262c104646a0f8b32b8eb18b" translate="yes" xml:space="preserve">
          <source>torch.BoolTensor</source>
          <target state="translated">torch.BoolTensor</target>
        </trans-unit>
        <trans-unit id="bba994573b8a2037c6c17a24254c96889cc81aa8" translate="yes" xml:space="preserve">
          <source>torch.BoolTensor.all()</source>
          <target state="translated">torch.BoolTensor.all()</target>
        </trans-unit>
        <trans-unit id="12a893f2429a914544d2edeb01f46d4b537eb696" translate="yes" xml:space="preserve">
          <source>torch.BoolTensor.any()</source>
          <target state="translated">torch.BoolTensor.any()</target>
        </trans-unit>
        <trans-unit id="6f1fab251905f95c2cff78bc2f33e94653a1885d" translate="yes" xml:space="preserve">
          <source>torch.FloatStorage</source>
          <target state="translated">torch.FloatStorage</target>
        </trans-unit>
        <trans-unit id="b59b5f1f011f9e28043b0a7eb95a94f94659f4e4" translate="yes" xml:space="preserve">
          <source>torch.FloatStorage.bfloat16()</source>
          <target state="translated">torch.FloatStorage.bfloat16()</target>
        </trans-unit>
        <trans-unit id="faacefb7cbc249310b8069f0dd5c7b488a435777" translate="yes" xml:space="preserve">
          <source>torch.FloatStorage.bool()</source>
          <target state="translated">torch.FloatStorage.bool()</target>
        </trans-unit>
        <trans-unit id="60af125fdb94b22d3b72e31e20df577553803b51" translate="yes" xml:space="preserve">
          <source>torch.FloatStorage.byte()</source>
          <target state="translated">torch.FloatStorage.byte()</target>
        </trans-unit>
        <trans-unit id="4917cd7bff405088a24a33298ea641af29821f59" translate="yes" xml:space="preserve">
          <source>torch.FloatStorage.char()</source>
          <target state="translated">torch.FloatStorage.char()</target>
        </trans-unit>
        <trans-unit id="25bde1db4d8e3018c3608307b64ad7aa6379cdfb" translate="yes" xml:space="preserve">
          <source>torch.FloatStorage.clone()</source>
          <target state="translated">torch.FloatStorage.clone()</target>
        </trans-unit>
        <trans-unit id="d1f7a09f4c3ff9cd53d0800470ab0860d373a422" translate="yes" xml:space="preserve">
          <source>torch.FloatStorage.complex_double()</source>
          <target state="translated">torch.FloatStorage.complex_double()</target>
        </trans-unit>
        <trans-unit id="7ac07b9409b83b86c74d2f5f4c4cfb398ca440e5" translate="yes" xml:space="preserve">
          <source>torch.FloatStorage.complex_float()</source>
          <target state="translated">torch.FloatStorage.complex_float()</target>
        </trans-unit>
        <trans-unit id="dcbf0b6ca5df3bb16264e6fbc4228b4aa555ea61" translate="yes" xml:space="preserve">
          <source>torch.FloatStorage.copy_()</source>
          <target state="translated">torch.FloatStorage.copy_()</target>
        </trans-unit>
        <trans-unit id="16f2bf3cc649e176603768895c19a7d28f5370fb" translate="yes" xml:space="preserve">
          <source>torch.FloatStorage.cpu()</source>
          <target state="translated">torch.FloatStorage.cpu()</target>
        </trans-unit>
        <trans-unit id="8ed448a641a71ec48363f7ee94a56059c1b5bad4" translate="yes" xml:space="preserve">
          <source>torch.FloatStorage.cuda()</source>
          <target state="translated">torch.FloatStorage.cuda()</target>
        </trans-unit>
        <trans-unit id="21a9764e5e5d5b6837b35885aa291a5a24b5447f" translate="yes" xml:space="preserve">
          <source>torch.FloatStorage.data_ptr()</source>
          <target state="translated">torch.FloatStorage.data_ptr()</target>
        </trans-unit>
        <trans-unit id="e54e4d4b3ed754158472a3f326e4a9b715ba4fe3" translate="yes" xml:space="preserve">
          <source>torch.FloatStorage.device</source>
          <target state="translated">torch.FloatStorage.device</target>
        </trans-unit>
        <trans-unit id="23729c1c9980b8e604939fe21c7eba03b65e21f8" translate="yes" xml:space="preserve">
          <source>torch.FloatStorage.double()</source>
          <target state="translated">torch.FloatStorage.double()</target>
        </trans-unit>
        <trans-unit id="c6685c67d88d6f4f3edc629bac73b82f2e7a243f" translate="yes" xml:space="preserve">
          <source>torch.FloatStorage.dtype</source>
          <target state="translated">torch.FloatStorage.dtype</target>
        </trans-unit>
        <trans-unit id="d70d0eb84281e0ee2e4198c286648c43647c7062" translate="yes" xml:space="preserve">
          <source>torch.FloatStorage.element_size()</source>
          <target state="translated">torch.FloatStorage.element_size()</target>
        </trans-unit>
        <trans-unit id="91e132abbfd734037a7c48a64ef09c9729a82c41" translate="yes" xml:space="preserve">
          <source>torch.FloatStorage.fill_()</source>
          <target state="translated">torch.FloatStorage.fill_()</target>
        </trans-unit>
        <trans-unit id="69e383829af3515de6f8718b48c9c63175acacef" translate="yes" xml:space="preserve">
          <source>torch.FloatStorage.float()</source>
          <target state="translated">torch.FloatStorage.float()</target>
        </trans-unit>
        <trans-unit id="0d56fcdd3fe972229d5c8c717393cee8597a21fe" translate="yes" xml:space="preserve">
          <source>torch.FloatStorage.from_buffer()</source>
          <target state="translated">torch.FloatStorage.from_buffer()</target>
        </trans-unit>
        <trans-unit id="cbd4ca08ca379d7623b70da44552f6c5999cc426" translate="yes" xml:space="preserve">
          <source>torch.FloatStorage.from_file()</source>
          <target state="translated">torch.FloatStorage.from_file()</target>
        </trans-unit>
        <trans-unit id="3cf2129db56d2cd0bb9e006f9618fd8bb92edd63" translate="yes" xml:space="preserve">
          <source>torch.FloatStorage.half()</source>
          <target state="translated">torch.FloatStorage.half()</target>
        </trans-unit>
        <trans-unit id="7478cf9e5e9ef012bc2b8250114a54c3b9cc050c" translate="yes" xml:space="preserve">
          <source>torch.FloatStorage.int()</source>
          <target state="translated">torch.FloatStorage.int()</target>
        </trans-unit>
        <trans-unit id="1ec74c20828d20c2e8a5ebad08cf55f1b04bdf40" translate="yes" xml:space="preserve">
          <source>torch.FloatStorage.is_cuda</source>
          <target state="translated">torch.FloatStorage.is_cuda</target>
        </trans-unit>
        <trans-unit id="e207ff063b150c720dbef5f819dd3c7f2973f52f" translate="yes" xml:space="preserve">
          <source>torch.FloatStorage.is_pinned()</source>
          <target state="translated">torch.FloatStorage.is_pinned()</target>
        </trans-unit>
        <trans-unit id="af25fe1d4b76ac5349db17047c739a9cdb01b3f5" translate="yes" xml:space="preserve">
          <source>torch.FloatStorage.is_shared()</source>
          <target state="translated">torch.FloatStorage.is_shared()</target>
        </trans-unit>
        <trans-unit id="9b83f19efbd915efb76d39b97514e6415d0dcd89" translate="yes" xml:space="preserve">
          <source>torch.FloatStorage.is_sparse</source>
          <target state="translated">torch.FloatStorage.is_sparse</target>
        </trans-unit>
        <trans-unit id="9829ee8ceeec9becf45e93745b6f09c76c773eff" translate="yes" xml:space="preserve">
          <source>torch.FloatStorage.long()</source>
          <target state="translated">torch.FloatStorage.long()</target>
        </trans-unit>
        <trans-unit id="879acc20d8e3a5a2da853176d2fb65a670dcbac6" translate="yes" xml:space="preserve">
          <source>torch.FloatStorage.new()</source>
          <target state="translated">torch.FloatStorage.new()</target>
        </trans-unit>
        <trans-unit id="33e1a3eee08d3fa8184f2e537d7a23621227e61f" translate="yes" xml:space="preserve">
          <source>torch.FloatStorage.pin_memory()</source>
          <target state="translated">torch.FloatStorage.pin_memory()</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
