<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="pytorch">
    <body>
      <group id="pytorch">
        <trans-unit id="858f941f9149239a390fefcb9fe1d340b8264a31" translate="yes" xml:space="preserve">
          <source>conv_transpose1d</source>
          <target state="translated">conv_transpose1d</target>
        </trans-unit>
        <trans-unit id="1dcafa5ee322b6c650c69e12302f3a4fcc614f37" translate="yes" xml:space="preserve">
          <source>conv_transpose2d</source>
          <target state="translated">conv_transpose2d</target>
        </trans-unit>
        <trans-unit id="a1f18c3da206b94f7d98bf7f160bf00ffff56b8f" translate="yes" xml:space="preserve">
          <source>conv_transpose3d</source>
          <target state="translated">conv_transpose3d</target>
        </trans-unit>
        <trans-unit id="f84e2e2dadd87384fb55f25886926b777e8378f1" translate="yes" xml:space="preserve">
          <source>copy</source>
          <target state="translated">copy</target>
        </trans-unit>
        <trans-unit id="5bcc2c4d81811ed80bdd75460668f2bc84ab2137" translate="yes" xml:space="preserve">
          <source>cos</source>
          <target state="translated">cos</target>
        </trans-unit>
        <trans-unit id="a2feafc74f88dca754a5ba43c50a85d79a767e72" translate="yes" xml:space="preserve">
          <source>cosh</source>
          <target state="translated">cosh</target>
        </trans-unit>
        <trans-unit id="01a94a9eda017304c4218cc9ef754964e7a4bb82" translate="yes" xml:space="preserve">
          <source>cosine_embedding_loss</source>
          <target state="translated">cosine_embedding_loss</target>
        </trans-unit>
        <trans-unit id="d2ce2abc11272a6e0a9b2beb1df264b7edbf6722" translate="yes" xml:space="preserve">
          <source>cosine_similarity</source>
          <target state="translated">cosine_similarity</target>
        </trans-unit>
        <trans-unit id="582ebf25c62b7dfa923f85b2bccf2137f1c80078" translate="yes" xml:space="preserve">
          <source>cross_entropy</source>
          <target state="translated">cross_entropy</target>
        </trans-unit>
        <trans-unit id="edca710c39638b12c7d3cb23bad7ea65e3292246" translate="yes" xml:space="preserve">
          <source>ctc_loss</source>
          <target state="translated">ctc_loss</target>
        </trans-unit>
        <trans-unit id="efd2992a3006d55cbc0952dde29ae5314c7ab02d" translate="yes" xml:space="preserve">
          <source>cumsum</source>
          <target state="translated">cumsum</target>
        </trans-unit>
        <trans-unit id="437985f2534969119b750211fe4c9ec5ec63a556" translate="yes" xml:space="preserve">
          <source>cycle iterations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c363836cf4e16666669a25da280a1865c2d2874" translate="yes" xml:space="preserve">
          <source>d</source>
          <target state="translated">d</target>
        </trans-unit>
        <trans-unit id="b0269e751b572b5261c4a859526a706721a59a77" translate="yes" xml:space="preserve">
          <source>d(x_i, y_i) = \left\lVert {\bf x}_i - {\bf y}_i \right\rVert_p</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77ac4a158452308bf36146e87ebaaf92bc306659" translate="yes" xml:space="preserve">
          <source>d, d+1, \dots, d+k</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c84792d6b06dcb4fb464a3599c532a5302de6be" translate="yes" xml:space="preserve">
          <source>d_{1}, d_{2}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b71fbc45d34e7ab169243c1460ef02ec167f9d7e" translate="yes" xml:space="preserve">
          <source>data_parallel</source>
          <target state="translated">data_parallel</target>
        </trans-unit>
        <trans-unit id="e86c5c11e9145e08434d9afcfa4377be59f4e4ff" translate="yes" xml:space="preserve">
          <source>denote the parameters, gradient, velocity, and momentum respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5afdeaf45fa875ebdca4f5b10259f07bd831552d" translate="yes" xml:space="preserve">
          <source>denotes a number of channels,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abe667e17330f6f1dbdc6eab8eee0bd0f13c2654" translate="yes" xml:space="preserve">
          <source>denotes the natural parameters,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c66dff2a5b61246f95058f003dac600499b7e81f" translate="yes" xml:space="preserve">
          <source>denotes the sufficient statistic,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0686b5da2b2facb066e9541635338f95d152d4ce" translate="yes" xml:space="preserve">
          <source>dense tensor. &lt;code&gt;mat1&lt;/code&gt; need to have &lt;code&gt;sparse_dim = 2&lt;/code&gt;. This function also supports backward for both matrices. Note that the gradients of &lt;code&gt;mat1&lt;/code&gt; is a coalesced sparse tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="021805f8e503cb08daefed1f745cc417b8030e9b" translate="yes" xml:space="preserve">
          <source>derivative of the digamma function on &lt;code&gt;input&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67ff710b17c84214c8942183e80961f832d1afad" translate="yes" xml:space="preserve">
          <source>det</source>
          <target state="translated">det</target>
        </trans-unit>
        <trans-unit id="529a2169843d649acaf9b41df60db6d69af1e991" translate="yes" xml:space="preserve">
          <source>diag</source>
          <target state="translated">diag</target>
        </trans-unit>
        <trans-unit id="76e94348139b788d21edc7b9cd011af238d0de03" translate="yes" xml:space="preserve">
          <source>dict</source>
          <target state="translated">dict</target>
        </trans-unit>
        <trans-unit id="6c9829eab74691f006b44b9d531aae591e36bbb0" translate="yes" xml:space="preserve">
          <source>differs between optimizer classes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f8c86417f0d0c4c62d3c379abcb08ce04dc6643" translate="yes" xml:space="preserve">
          <source>dilation</source>
          <target state="translated">dilation</target>
        </trans-unit>
        <trans-unit id="f72f0eaa0227479c0c6279552c4394004a048a69" translate="yes" xml:space="preserve">
          <source>dilation[0]</source>
          <target state="translated">dilation[0]</target>
        </trans-unit>
        <trans-unit id="a5f1833eb579c177c8170541d06a5c04eeef7a1c" translate="yes" xml:space="preserve">
          <source>dilation[1]</source>
          <target state="translated">dilation[1]</target>
        </trans-unit>
        <trans-unit id="4915482caee6a403d6b2fa4290e5a585a36f3ccd" translate="yes" xml:space="preserve">
          <source>dim_arange</source>
          <target state="translated">dim_arange</target>
        </trans-unit>
        <trans-unit id="1b1d6aa0a2a27d76e4e1216685f971555524659c" translate="yes" xml:space="preserve">
          <source>dimensions of &lt;code&gt;input&lt;/code&gt; will be padded. For example, to pad only the last dimension of the input tensor, then &lt;a href=&quot;#torch.nn.functional.pad&quot;&gt;&lt;code&gt;pad&lt;/code&gt;&lt;/a&gt; has the form</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e49a6c72b769d359de7d9a503c4eb0254f3b21d4" translate="yes" xml:space="preserve">
          <source>dimensions, then the resulting indices tensor &lt;code&gt;out&lt;/code&gt; is of size</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8385af3044f435cebb016f524630b6f30227c878" translate="yes" xml:space="preserve">
          <source>dimensions, then the resulting tuple contains</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1fe2142bea8b12e118996616d13df402fbcb462" translate="yes" xml:space="preserve">
          <source>distance as the distance function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c575f3e383df5c81fb057f50806caf1436554d70" translate="yes" xml:space="preserve">
          <source>distributed</source>
          <target state="translated">distributed</target>
        </trans-unit>
        <trans-unit id="0f43887800fc3dd1ea9d5be99a634ed16dbfdec5" translate="yes" xml:space="preserve">
          <source>distributions</source>
          <target state="translated">distributions</target>
        </trans-unit>
        <trans-unit id="26021f1f4700496d68e21ef6d4a1b6945da4c8eb" translate="yes" xml:space="preserve">
          <source>div</source>
          <target state="translated">div</target>
        </trans-unit>
        <trans-unit id="b25730abd0d76320e9d797f0754d1fe2b2d5b11e" translate="yes" xml:space="preserve">
          <source>div_value</source>
          <target state="translated">div_value</target>
        </trans-unit>
        <trans-unit id="5a580c3ce17c428823b52dd91e583d3142d9fceb" translate="yes" xml:space="preserve">
          <source>do &lt;code&gt;itertools.product&lt;/code&gt; on these lists, and finally convert the resulting list into tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17d048c360600626b54c360778a411433b814202" translate="yes" xml:space="preserve">
          <source>dot(other) -&amp;gt; Tensor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faca6eb13adc905c2c03d53e866211d458bacb0c" translate="yes" xml:space="preserve">
          <source>dropout</source>
          <target state="translated">dropout</target>
        </trans-unit>
        <trans-unit id="9a3ad6a58278198fee2ec76a13d0966cc7616717" translate="yes" xml:space="preserve">
          <source>dropout2d</source>
          <target state="translated">dropout2d</target>
        </trans-unit>
        <trans-unit id="5b1d13962c98175c8cc64391f547d2cc13d88a8a" translate="yes" xml:space="preserve">
          <source>dropout3d</source>
          <target state="translated">dropout3d</target>
        </trans-unit>
        <trans-unit id="63eb44aa9dfe2c9c81d4ede5c878a887b7f21327" translate="yes" xml:space="preserve">
          <source>dtype</source>
          <target state="translated">dtype</target>
        </trans-unit>
        <trans-unit id="b0c0156edae4e235440d0bb2e5c6797295893c9a" translate="yes" xml:space="preserve">
          <source>during training. This means that during evaluation the module simply computes an identity function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58e6b3a414a1e090dfc6029add0f3555ccba127f" translate="yes" xml:space="preserve">
          <source>e</source>
          <target state="translated">e</target>
        </trans-unit>
        <trans-unit id="69369f50ac73a1557362536dfad646cedff8d935" translate="yes" xml:space="preserve">
          <source>einsum</source>
          <target state="translated">einsum</target>
        </trans-unit>
        <trans-unit id="795bfe889e7e73fffc28a8d34cb3dec385502fa0" translate="yes" xml:space="preserve">
          <source>element of &lt;code&gt;self&lt;/code&gt; tensor will be set to a value sampled from</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd7fdcec02c67245192b630d5f17b70d83b4c548" translate="yes" xml:space="preserve">
          <source>element of the output tensor will draw a value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="728aeae654a1d24d691913de261209e1f6dcfcb2" translate="yes" xml:space="preserve">
          <source>element-wise, given by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94c154ce2fcf9844aa7cf28cecd748d0de5861ec" translate="yes" xml:space="preserve">
          <source>element-wise.</source>
          <target state="translated">element-wise.</target>
        </trans-unit>
        <trans-unit id="98382eaa4e072702f7a1188d7c097156a0f2afb1" translate="yes" xml:space="preserve">
          <source>elements each and can be of any shape that the distance function can handle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7910b3b0e6400173df90d959d29e9a6848bf14f0" translate="yes" xml:space="preserve">
          <source>elements each the sum operation still operates over all the elements, and divides by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb020821ccc1b8004a6e4d3c5f15dec75c2f2582" translate="yes" xml:space="preserve">
          <source>elements each.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ac570a2eeffbf14705a23f5e2262b8b4753f7d8" translate="yes" xml:space="preserve">
          <source>elementwise, for all elements of &lt;code&gt;input&lt;/code&gt; and &lt;code&gt;other&lt;/code&gt;. The behaviour of this function is analogous to &lt;a href=&quot;https://docs.scipy.org/doc/numpy/reference/generated/numpy.allclose.html&quot;&gt;numpy.allclose&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="056ee9e1c3b56fdb7ad312aa7daab4a1cdeaa243" translate="yes" xml:space="preserve">
          <source>elu</source>
          <target state="translated">elu</target>
        </trans-unit>
        <trans-unit id="2f81ba1b3d35bd109ae40dc22cfa8b1944e76c25" translate="yes" xml:space="preserve">
          <source>embedding</source>
          <target state="translated">embedding</target>
        </trans-unit>
        <trans-unit id="acdeafeb5673da854efc3282413d0a24eb1ee937" translate="yes" xml:space="preserve">
          <source>embedding_bag</source>
          <target state="translated">embedding_bag</target>
        </trans-unit>
        <trans-unit id="e8cf5623df79323cf07b84946f4bf4b08e739eb6" translate="yes" xml:space="preserve">
          <source>embedding_dim</source>
          <target state="translated">embedding_dim</target>
        </trans-unit>
        <trans-unit id="ad87109bfff0765f4dd8cf4943b04d16a4070fea" translate="yes" xml:space="preserve">
          <source>empty</source>
          <target state="translated">empty</target>
        </trans-unit>
        <trans-unit id="ad6a56a84bfa43a0b11f465396821af9906a83a1" translate="yes" xml:space="preserve">
          <source>empty_like</source>
          <target state="translated">empty_like</target>
        </trans-unit>
        <trans-unit id="a5dba71bfa83dbc1dcc2e0a4bcb2be3c4b3c4b19" translate="yes" xml:space="preserve">
          <source>enable_grad</source>
          <target state="translated">enable_grad</target>
        </trans-unit>
        <trans-unit id="7a92f3d26362d6557d5701de77a63a01df61e57f" translate="yes" xml:space="preserve">
          <source>end</source>
          <target state="translated">end</target>
        </trans-unit>
        <trans-unit id="e123da32ed3cb35794b549e3bc184ed4edde2c0d" translate="yes" xml:space="preserve">
          <source>entrypoints</source>
          <target state="translated">entrypoints</target>
        </trans-unit>
        <trans-unit id="85962fc8c09832447405cdbb1a7c3c74e6d13411" translate="yes" xml:space="preserve">
          <source>eps</source>
          <target state="translated">eps</target>
        </trans-unit>
        <trans-unit id="a9c619705e8fcaa770885cac1837ae950f5c8ba5" translate="yes" xml:space="preserve">
          <source>eq</source>
          <target state="translated">eq</target>
        </trans-unit>
        <trans-unit id="95d33a0cd46e8991d6857ce029dc0fca3da7cba3" translate="yes" xml:space="preserve">
          <source>erf</source>
          <target state="translated">erf</target>
        </trans-unit>
        <trans-unit id="c42fba4eefc5a3a04647c6db7ee106c846538ad5" translate="yes" xml:space="preserve">
          <source>everywhere in the window. If</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86b77de2442fe05048f19c766138a551aa2543be" translate="yes" xml:space="preserve">
          <source>exp</source>
          <target state="translated">exp</target>
        </trans-unit>
        <trans-unit id="0bf04e42d3807913b6f7c1b76508534bf5b1ebaa" translate="yes" xml:space="preserve">
          <source>expand</source>
          <target state="translated">expand</target>
        </trans-unit>
        <trans-unit id="9847ad26b5e5b2dc33d2e2aa35ca219bce9c28ce" translate="yes" xml:space="preserve">
          <source>expand_as</source>
          <target state="translated">expand_as</target>
        </trans-unit>
        <trans-unit id="69cc8412997be34d1bedab92a00c78cd3e91e52a" translate="yes" xml:space="preserve">
          <source>exponent</source>
          <target state="translated">exponent</target>
        </trans-unit>
        <trans-unit id="79df4b1718127a8c81390d4196d6cbfc976105f0" translate="yes" xml:space="preserve">
          <source>eye</source>
          <target state="translated">eye</target>
        </trans-unit>
        <trans-unit id="4a0a19218e082a343a1b17e5333409af9d98f0f5" translate="yes" xml:space="preserve">
          <source>f</source>
          <target state="translated">f</target>
        </trans-unit>
        <trans-unit id="9567f23affb8a7bd391269e4572b0200f9747cb8" translate="yes" xml:space="preserve">
          <source>f'(x)</source>
          <target state="translated">f'(x)</target>
        </trans-unit>
        <trans-unit id="6dfe0f02a2095ed14bd6f18a1dc37f2b44ea823f" translate="yes" xml:space="preserve">
          <source>f(X) = \sqrt[p]{\sum_{x \in X} x^{p}}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9053d6d6ecdce8aa869d69d9534d36224397c68a" translate="yes" xml:space="preserve">
          <source>f(X=k) = p^{k - 1} (1 - p)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e03f4706048fbc6c5a252a85d066adf107fcc1f" translate="yes" xml:space="preserve">
          <source>f(x)</source>
          <target state="translated">f(x)</target>
        </trans-unit>
        <trans-unit id="dbf152a2dc067be05d9e916db832f8559dc55db9" translate="yes" xml:space="preserve">
          <source>f(x) = \dfrac{1}{\pi} \dfrac{\sigma}{(x - \text{median})^2 + \sigma^2}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1cd548b422198eb02b288f790cf5f03cd480e92" translate="yes" xml:space="preserve">
          <source>f(x) = \dfrac{1}{x \sigma \sqrt{2\pi}}\ e^{-\frac{(\ln x - \mu)^2}{2\sigma^2}}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e000dc224fe4dcf754759f57e09e53c889d0e035" translate="yes" xml:space="preserve">
          <source>f(x) = \lambda e^{-\lambda x}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62b2c80f4d03f9d2e41ad42964f369e7520f5f39" translate="yes" xml:space="preserve">
          <source>f_t</source>
          <target state="translated">f_t</target>
        </trans-unit>
        <trans-unit id="22c38a4fc22bbd337c4393a5f593cd1f6aeb7820" translate="yes" xml:space="preserve">
          <source>faces:</source>
          <target state="translated">faces:</target>
        </trans-unit>
        <trans-unit id="40a4f4ba45dbdf8bc5cb79351a51e5e2f79816e6" translate="yes" xml:space="preserve">
          <source>fan_in</source>
          <target state="translated">fan_in</target>
        </trans-unit>
        <trans-unit id="eb3f73d1acb0802d72c0fb44140887ff4ccbc68c" translate="yes" xml:space="preserve">
          <source>fan_mode</source>
          <target state="translated">fan_mode</target>
        </trans-unit>
        <trans-unit id="a10da5a280a767f042e2772d41390ed1e45dffe0" translate="yes" xml:space="preserve">
          <source>fan_out</source>
          <target state="translated">fan_out</target>
        </trans-unit>
        <trans-unit id="e52844b027e8e2ae091461389eb94bfc603c94c4" translate="yes" xml:space="preserve">
          <source>feature_alpha_dropout</source>
          <target state="translated">feature_alpha_dropout</target>
        </trans-unit>
        <trans-unit id="bacef8c5a0403758a34a8d363562e7b7769cb548" translate="yes" xml:space="preserve">
          <source>flatten</source>
          <target state="translated">flatten</target>
        </trans-unit>
        <trans-unit id="685e80366130387cb75c055248326976d16fdf8d" translate="yes" xml:space="preserve">
          <source>float</source>
          <target state="translated">float</target>
        </trans-unit>
        <trans-unit id="3684c9d3c05e7bee19e2728c6a5b2bbccf0cd9c7" translate="yes" xml:space="preserve">
          <source>floor</source>
          <target state="translated">floor</target>
        </trans-unit>
        <trans-unit id="765263b21ddecd6f21daf9b79ddf8f84f6f9eb7f" translate="yes" xml:space="preserve">
          <source>floor_divide</source>
          <target state="translated">floor_divide</target>
        </trans-unit>
        <trans-unit id="c5b2b01d33b40a69b0f829fd1827cb8201538518" translate="yes" xml:space="preserve">
          <source>fold</source>
          <target state="translated">fold</target>
        </trans-unit>
        <trans-unit id="43eef9a62abb8b1e1654f8a890aae054abffa82b" translate="yes" xml:space="preserve">
          <source>for</source>
          <target state="translated">for</target>
        </trans-unit>
        <trans-unit id="2e4827fe5bf1cfb73683f6798dea2a8506231170" translate="yes" xml:space="preserve">
          <source>for &amp;lsquo;global&amp;rsquo;, the mask will be computed across all entries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7639d736a0fbebd5cfcff0a35b1ca0183e3223af" translate="yes" xml:space="preserve">
          <source>for &amp;lsquo;structured&amp;rsquo;, the mask will be computed from the nonmasked channels in the tensor;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="209e187de0864f4d9cd8485d4a363fa7a919bc89" translate="yes" xml:space="preserve">
          <source>for &amp;lsquo;unstructured&amp;rsquo;, the mask will be computed from the raveled list of nonmasked entries;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d206e33e0bd150019997727943b2cdfba5e027cd" translate="yes" xml:space="preserve">
          <source>for 2D or</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f2e16b9f28278f3cfc82040a7f611c7cc7bce2f" translate="yes" xml:space="preserve">
          <source>for 3D) Example: torch.Size((32, 3, 24, 24))</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99ecdd4b3aa2a115aac8a5effd24f8f731b94fbe" translate="yes" xml:space="preserve">
          <source>for K-dimensional loss.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="878a1026dad14bfef6edfae386949642f277900f" translate="yes" xml:space="preserve">
          <source>for all</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0879065e29809b515d353f79fe66e9622d710c2a" translate="yes" xml:space="preserve">
          <source>for each target sequence, such that &lt;code&gt;target_n = targets[n,0:s_n]&lt;/code&gt; for each target in a batch. Lengths must each be</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c00dac29f013319fe3523dd1737ca9d55921be7" translate="yes" xml:space="preserve">
          <source>for good performance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53226af33b8bde8c026266139d061296f5fab90c" translate="yes" xml:space="preserve">
          <source>for multi-label binary classification,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8d7859ba59da1eebcd14ee2a79455d1736514b8" translate="yes" xml:space="preserve">
          <source>for normalization.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d6d8a90ee85a327b96fb4d5a45741dfa87558f3" translate="yes" xml:space="preserve">
          <source>for single-label binary classification),</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce10f7ccaf2ee0911862d77ea2c1f33dd2892c4b" translate="yes" xml:space="preserve">
          <source>for the &lt;code&gt;K&lt;/code&gt;-dimensional case (described later).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d76c4a2ce66eb8697b673e760ac2cacb89695afb" translate="yes" xml:space="preserve">
          <source>for which the eigenvalues and eigenvectors will be computed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a9d94765cba0644f75f6db1e8b7d75bcdd6603a" translate="yes" xml:space="preserve">
          <source>form, targets are padded to the length of the longest sequence, and stacked. In the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="352478d586ad727e910c70e540ae19c5badbd0cb" translate="yes" xml:space="preserve">
          <source>form, the targets are assumed to be un-padded and concatenated within 1 dimension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44d05701dac99afab7ebbca7875bfad6d4edfa48" translate="yes" xml:space="preserve">
          <source>frame_length</source>
          <target state="translated">frame_length</target>
        </trans-unit>
        <trans-unit id="3338101a972dc14f62f27985af8ea3ba83453e48" translate="yes" xml:space="preserve">
          <source>frobenius_norm</source>
          <target state="translated">frobenius_norm</target>
        </trans-unit>
        <trans-unit id="0b1e95cfd9775191a7224d0a218ae79187e80c1d" translate="yes" xml:space="preserve">
          <source>from</source>
          <target state="translated">from</target>
        </trans-unit>
        <trans-unit id="b289b4c194a25ff5ce4e1adaa106c2758610690c" translate="yes" xml:space="preserve">
          <source>from an expected input of size</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bed75b5b9758690dfa2e72d0432b5d4093592de" translate="yes" xml:space="preserve">
          <source>from input of size</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52e6d8ab88471af82da12a0eae7aab01357e3881" translate="yes" xml:space="preserve">
          <source>full</source>
          <target state="translated">full</target>
        </trans-unit>
        <trans-unit id="14067496699ea471956d7577c31a0037a911d9c7" translate="yes" xml:space="preserve">
          <source>full_like</source>
          <target state="translated">full_like</target>
        </trans-unit>
        <trans-unit id="794b78e91179279387bba4cc23ea3dd5a525df01" translate="yes" xml:space="preserve">
          <source>func_output (tuple of Tensors or &lt;a href=&quot;tensors#torch.Tensor&quot;&gt;Tensor&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6aeb140b606e13ac83f6438cab7b90cac46eb412" translate="yes" xml:space="preserve">
          <source>func_output (tuple of Tensors or Tensor): output of &lt;code&gt;func(inputs)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="671a0b5ed1501e9f1a0b90392965e7a4d530020f" translate="yes" xml:space="preserve">
          <source>function to an n-dimensional input Tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e767f5c5b1bad3a662c327ecacaae4b49da0f3ab" translate="yes" xml:space="preserve">
          <source>function to an n-dimensional input Tensor. The LogSoftmax formulation can be simplified as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54fd1711209fb1c0781092374132c66e79e2241b" translate="yes" xml:space="preserve">
          <source>g</source>
          <target state="translated">g</target>
        </trans-unit>
        <trans-unit id="3d4ff73fe6b68ac5fa741c7936f7b9096bac805f" translate="yes" xml:space="preserve">
          <source>g_t</source>
          <target state="translated">g_t</target>
        </trans-unit>
        <trans-unit id="5fe05a50c1e04e07824c1e3f641a4e83e2c27d98" translate="yes" xml:space="preserve">
          <source>gain</source>
          <target state="translated">gain</target>
        </trans-unit>
        <trans-unit id="ff70f4c33de2200b76651bbe1e54aa55fcd77447" translate="yes" xml:space="preserve">
          <source>gamma</source>
          <target state="translated">gamma</target>
        </trans-unit>
        <trans-unit id="d7eee0be1ee642e5fcebacd9c9085b6bf405458c" translate="yes" xml:space="preserve">
          <source>gather</source>
          <target state="translated">gather</target>
        </trans-unit>
        <trans-unit id="5258731c9021cec8a550667dbc1431c7cb76d465" translate="yes" xml:space="preserve">
          <source>gcd(0, 0) = 0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9060bd5525711459bfd3fbd9a5d9658cfa6338a" translate="yes" xml:space="preserve">
          <source>ge</source>
          <target state="translated">ge</target>
        </trans-unit>
        <trans-unit id="437fd76f35d07aa59dc51e50c33eaa661319d53a" translate="yes" xml:space="preserve">
          <source>gelu</source>
          <target state="translated">gelu</target>
        </trans-unit>
        <trans-unit id="648aa578424e1797bec1597494c3706c14103529" translate="yes" xml:space="preserve">
          <source>given axis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca14ea9a141e8f926ec0878ad6d95e7178d8499f" translate="yes" xml:space="preserve">
          <source>given by &lt;code&gt;dim&lt;/code&gt; and other indices</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1d2a7e70b4ac39f77c8bb1326b8546bc88a96b3" translate="yes" xml:space="preserve">
          <source>given policy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2fff6c293671617b46b3fde594877866175ab03" translate="yes" xml:space="preserve">
          <source>global pixelwise acc</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a146f11ed1a6c5f953c8d5e204445076bab4f23a" translate="yes" xml:space="preserve">
          <source>glu</source>
          <target state="translated">glu</target>
        </trans-unit>
        <trans-unit id="ca1948958a0c766e677e0c0f62ddbca879eccfce" translate="yes" xml:space="preserve">
          <source>grid_sample</source>
          <target state="translated">grid_sample</target>
        </trans-unit>
        <trans-unit id="961d793f7b4dec02c571bfd38b4379646df8d627" translate="yes" xml:space="preserve">
          <source>group_norm</source>
          <target state="translated">group_norm</target>
        </trans-unit>
        <trans-unit id="0a894db7c792e10a79e380cb0453380548bbacb5" translate="yes" xml:space="preserve">
          <source>groups</source>
          <target state="translated">groups</target>
        </trans-unit>
        <trans-unit id="7ddf988c838812a4318332f2967bbe1035b2db75" translate="yes" xml:space="preserve">
          <source>gt</source>
          <target state="translated">gt</target>
        </trans-unit>
        <trans-unit id="8ed5a887890eebc588bf6c16c1c51d26cd730e11" translate="yes" xml:space="preserve">
          <source>gumbel_softmax</source>
          <target state="translated">gumbel_softmax</target>
        </trans-unit>
        <trans-unit id="27d5482eebd075de44389774fce28c69f45c8a75" translate="yes" xml:space="preserve">
          <source>h</source>
          <target state="translated">h</target>
        </trans-unit>
        <trans-unit id="5323b8b16c2a7cdd2b78ab0c4a7e4c485cc241f7" translate="yes" xml:space="preserve">
          <source>h' = \tanh(W_{ih} x + b_{ih} + W_{hh} h + b_{hh})</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0fa515b5d5faa408cfd5716b035bb25511e3dc6" translate="yes" xml:space="preserve">
          <source>h^{(l-1)}_t</source>
          <target state="translated">h^{(l-1)}_t</target>
        </trans-unit>
        <trans-unit id="51a14870356c7b15f6ce06f06ad77341f4c25c5e" translate="yes" xml:space="preserve">
          <source>h_t</source>
          <target state="translated">h_t</target>
        </trans-unit>
        <trans-unit id="d4177d9fb092485b1ab4d66b2c35aefd92967209" translate="yes" xml:space="preserve">
          <source>h_t = \tanh(W_{ih} x_t + b_{ih} + W_{hh} h_{(t-1)} + b_{hh})</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edec3276de0e6a50cd59f6a51cdefc567a684778" translate="yes" xml:space="preserve">
          <source>h_{(t-1)}</source>
          <target state="translated">h_{(t-1)}</target>
        </trans-unit>
        <trans-unit id="8218b733929c625a5ca05b3a78451a8e71f6239a" translate="yes" xml:space="preserve">
          <source>h_{t-1}</source>
          <target state="translated">h_{t-1}</target>
        </trans-unit>
        <trans-unit id="f18eac210e3b6e5368159b8374707b2301aaad6a" translate="yes" xml:space="preserve">
          <source>hardshrink</source>
          <target state="translated">hardshrink</target>
        </trans-unit>
        <trans-unit id="91092735a9a0996c4c8db5e4cf35c3f3369f46e1" translate="yes" xml:space="preserve">
          <source>hardsigmoid</source>
          <target state="translated">hardsigmoid</target>
        </trans-unit>
        <trans-unit id="1877bb9b119c3aa8d0ebe0af14e430c9d89741c5" translate="yes" xml:space="preserve">
          <source>hardswish</source>
          <target state="translated">hardswish</target>
        </trans-unit>
        <trans-unit id="7693d309def042328c74d1d4495bf3c358a38fff" translate="yes" xml:space="preserve">
          <source>hardtanh</source>
          <target state="translated">hardtanh</target>
        </trans-unit>
        <trans-unit id="51fae6d0fd4d217a71194522b05ac7be10f349f8" translate="yes" xml:space="preserve">
          <source>has shape</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="922748224776ddeac74356c8c6594dbc846ad1d9" translate="yes" xml:space="preserve">
          <source>has the same shape as &lt;code&gt;input&lt;/code&gt;. If &lt;code&gt;reduction&lt;/code&gt; is not &lt;code&gt;'none'&lt;/code&gt; (default &lt;code&gt;'mean'&lt;/code&gt;), then:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2833d3663cb225aeaf19e8584f023cd9095c4ad" translate="yes" xml:space="preserve">
          <source>heaviside</source>
          <target state="translated">heaviside</target>
        </trans-unit>
        <trans-unit id="4aa797b285de9f510374654872f7ef5c09d3d205" translate="yes" xml:space="preserve">
          <source>hidden_size</source>
          <target state="translated">hidden_size</target>
        </trans-unit>
        <trans-unit id="d50987e6f83076806552e7769dc048d8591266a6" translate="yes" xml:space="preserve">
          <source>hinge_embedding_loss</source>
          <target state="translated">hinge_embedding_loss</target>
        </trans-unit>
        <trans-unit id="6e5873871f162ed3a647b3f0520b19caa41a7d98" translate="yes" xml:space="preserve">
          <source>hop_length</source>
          <target state="translated">hop_length</target>
        </trans-unit>
        <trans-unit id="d2fc54bc03812dae6d5218db7e7d221d8bc9ed48" translate="yes" xml:space="preserve">
          <source>hvp (tuple of Tensors or Tensor): result of the dot product with the same shape as the inputs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="042dc4512fa3d391c5170cf3aa61e6a638f84342" translate="yes" xml:space="preserve">
          <source>i</source>
          <target state="translated">i</target>
        </trans-unit>
        <trans-unit id="d0994a899d0d0e4b3e4fb6955532b16be69f7a30" translate="yes" xml:space="preserve">
          <source>i \in [0, \min\{d_{1}, d_{2}\} - 1]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b34e670dc1dd2f83beea9d02a2fabe4859ced03e" translate="yes" xml:space="preserve">
          <source>i \in \left\{0, \; \cdots , \; \text{x.nElement}() - 1\right\}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15a41683b807ba94453d7000a927a01ae55e9847" translate="yes" xml:space="preserve">
          <source>i \neq y</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7b7b5832587d6b37cd81da3cdcdb39cbdb15221" translate="yes" xml:space="preserve">
          <source>i \neq y[j]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4f46ec065a06a3c21acf2530b64d0e2c92e4be9" translate="yes" xml:space="preserve">
          <source>i^{th}</source>
          <target state="translated">i^{th}</target>
        </trans-unit>
        <trans-unit id="04d43787ebf63b7b0a6f65c6a1dec662c13b1614" translate="yes" xml:space="preserve">
          <source>i_t</source>
          <target state="translated">i_t</target>
        </trans-unit>
        <trans-unit id="4e7f626df794f6491574a236f22c100c34ed804f" translate="yes" xml:space="preserve">
          <source>idx</source>
          <target state="translated">idx</target>
        </trans-unit>
        <trans-unit id="958f57f57d72a30f329ee5538f21b0257a49a46e" translate="yes" xml:space="preserve">
          <source>if</source>
          <target state="translated">if</target>
        </trans-unit>
        <trans-unit id="4afd45cea30487b60500784b166e8d234a935cc8" translate="yes" xml:space="preserve">
          <source>if &lt;code&gt;reduction&lt;/code&gt; is &lt;code&gt;'none'&lt;/code&gt;, or a scalar otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a074e959bd34fe34ca1b538a4df0005b082f7aa0" translate="yes" xml:space="preserve">
          <source>if &lt;code&gt;return_complex&lt;/code&gt; is true, or a real tensor of size</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2275067d9b3bf6549613fb9c3cb80e7ce10e6436" translate="yes" xml:space="preserve">
          <source>if &lt;code&gt;some:&lt;/code&gt; is &lt;code&gt;True&lt;/code&gt; and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ffbb1b0146385867ad2b2cce14fa00157213c95" translate="yes" xml:space="preserve">
          <source>if Symmetric:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31f3f1526ffe7902e371f0424b1a9d761615051f" translate="yes" xml:space="preserve">
          <source>if dtype is qint8</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b30d4aa8b23f2c1a73d33c98b66cabb5aec90859" translate="yes" xml:space="preserve">
          <source>if eps</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29c623ebcccac558089dc75935652bd6784a53c6" translate="yes" xml:space="preserve">
          <source>if eps is None</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcdc9cbefc6d651838dee86e4db983a49b73e952" translate="yes" xml:space="preserve">
          <source>if input &amp;gt; 0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdddb6efc92a165940c7f7758c9c56424310703e" translate="yes" xml:space="preserve">
          <source>if input &amp;lt; 0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="270ed0b8d11312345be6298858309fc825ee307c" translate="yes" xml:space="preserve">
          <source>if input == 0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e929d2ed6f5cf4ae84ea64bf23b6821b2b8f82b8" translate="yes" xml:space="preserve">
          <source>if min</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85f02dfad15f5c3b2368b34bcb57ba1e3d8bc0f1" translate="yes" xml:space="preserve">
          <source>if reduction</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="823c5c75472b28251d58d678737c34bba07c92c2" translate="yes" xml:space="preserve">
          <source>if the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5284cc9b34b3e395dcf4921d311c653115c595e" translate="yes" xml:space="preserve">
          <source>if there are a single</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="172116cdefdd346dc8a96d51b71af0456e2c74ac" translate="yes" xml:space="preserve">
          <source>ignore_index</source>
          <target state="translated">ignore_index</target>
        </trans-unit>
        <trans-unit id="785f1a0db8733f33a69b175141648bd8aaf47119" translate="yes" xml:space="preserve">
          <source>im2col</source>
          <target state="translated">im2col</target>
        </trans-unit>
        <trans-unit id="e0ba4473f80070d36ca15a9bcce41d44c1617284" translate="yes" xml:space="preserve">
          <source>img_tensor: Default is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af10ef20dd9060bbeead0afbc55381a66af442ef" translate="yes" xml:space="preserve">
          <source>in</source>
          <target state="translated">in</target>
        </trans-unit>
        <trans-unit id="338141929c5d4186e6cf118f753febde0ce9c71a" translate="yes" xml:space="preserve">
          <source>in &lt;a href=&quot;#torch.nn.ModuleDict.update&quot;&gt;&lt;code&gt;update()&lt;/code&gt;&lt;/a&gt;, the order of the merged &lt;code&gt;OrderedDict&lt;/code&gt;, &lt;code&gt;dict&lt;/code&gt; (started from Python 3.6) or another &lt;a href=&quot;#torch.nn.ModuleDict&quot;&gt;&lt;code&gt;ModuleDict&lt;/code&gt;&lt;/a&gt; (the argument to &lt;a href=&quot;#torch.nn.ModuleDict.update&quot;&gt;&lt;code&gt;update()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78dd38a35052c801113fd435f83f1d650cf4eb34" translate="yes" xml:space="preserve">
          <source>in &lt;a href=&quot;#torch.nn.ParameterDict.update&quot;&gt;&lt;code&gt;update()&lt;/code&gt;&lt;/a&gt;, the order of the merged &lt;code&gt;OrderedDict&lt;/code&gt; or another &lt;a href=&quot;#torch.nn.ParameterDict&quot;&gt;&lt;code&gt;ParameterDict&lt;/code&gt;&lt;/a&gt; (the argument to &lt;a href=&quot;#torch.nn.ParameterDict.update&quot;&gt;&lt;code&gt;update()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac47ba3f5dcf61039e3dbfde50a7b76f5b1813bd" translate="yes" xml:space="preserve">
          <source>in above formula is in fact</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac0fcea99d84aef38a7ebd15b77f515dc643ccc0" translate="yes" xml:space="preserve">
          <source>in case of 2D Loss, or</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30d6bcdb4d4eeb2ce3b90d137e7eb4aad845cc54" translate="yes" xml:space="preserve">
          <source>in range</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3b7c3e446b574dcda7d6c4dae916b07e52f505e" translate="yes" xml:space="preserve">
          <source>in state</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e6091e2e5eee761268d5cb24a9fa7fe2e7a6b12" translate="yes" xml:space="preserve">
          <source>in the case of &lt;code&gt;K&lt;/code&gt;-dimensional loss.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="312063d20b709a534ca099497772c6cc2e37417f" translate="yes" xml:space="preserve">
          <source>in the case of K-dimensional loss.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0db9bcd97631db25458a6cf9f7640eb4265d8055" translate="yes" xml:space="preserve">
          <source>in the equation above</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8d2d57ba7f4690c50f8ab381252c04281b968e8" translate="yes" xml:space="preserve">
          <source>in1_features</source>
          <target state="translated">in1_features</target>
        </trans-unit>
        <trans-unit id="af5b4834366238f75919e21620b2d195be41f760" translate="yes" xml:space="preserve">
          <source>in2_features</source>
          <target state="translated">in2_features</target>
        </trans-unit>
        <trans-unit id="63f37a7344480568c1cb56058447b3f2b5a566af" translate="yes" xml:space="preserve">
          <source>in_channels</source>
          <target state="translated">in_channels</target>
        </trans-unit>
        <trans-unit id="c3bfc76792d69606d2fc2f31a7a59e4f5bce4773" translate="yes" xml:space="preserve">
          <source>in_features</source>
          <target state="translated">in_features</target>
        </trans-unit>
        <trans-unit id="830f12d3a9b25e233484aa530f5828806f8e46e0" translate="yes" xml:space="preserve">
          <source>increases the precision.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bd8ee04129b75f89f764ebdf03b1712215c710f" translate="yes" xml:space="preserve">
          <source>increases the recall,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73f11c3350e4bc0bc6271bc2a91f09b8eb2a5cee" translate="yes" xml:space="preserve">
          <source>index_copy</source>
          <target state="translated">index_copy</target>
        </trans-unit>
        <trans-unit id="930e4049f723e48815a76fa67195e59dcc107a9d" translate="yes" xml:space="preserve">
          <source>index_fill</source>
          <target state="translated">index_fill</target>
        </trans-unit>
        <trans-unit id="31681ab407f85d90e244e07862a1276094081ff4" translate="yes" xml:space="preserve">
          <source>index_put</source>
          <target state="translated">index_put</target>
        </trans-unit>
        <trans-unit id="30be7dad7a702b5932cb41dae510778f7af5d433" translate="yes" xml:space="preserve">
          <source>index_select</source>
          <target state="translated">index_select</target>
        </trans-unit>
        <trans-unit id="1e388b4c7f821f5f9bb3bb04c94103b42e3cc70d" translate="yes" xml:space="preserve">
          <source>indexing, advanced indexing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa3dfef42e0c22b5d2e5e3638c1b61b47bbb10da" translate="yes" xml:space="preserve">
          <source>inf</source>
          <target state="translated">inf</target>
        </trans-unit>
        <trans-unit id="140f86aae51ab9e1cda9b4254fe98a74eb54c1a1" translate="yes" xml:space="preserve">
          <source>input</source>
          <target state="translated">input</target>
        </trans-unit>
        <trans-unit id="e842e3c37a571d685a7ab0dd83b56f6b5c44f281" translate="yes" xml:space="preserve">
          <source>input (Tensor): the input tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86ea8136266d6849fda0de890a65c03d9c3b0685" translate="yes" xml:space="preserve">
          <source>input = U \times diag(S) \times V^T</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04012fb57a54fe454350516938a970f239820869" translate="yes" xml:space="preserve">
          <source>input \times \beta &amp;gt; threshold</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9677c3796209e95bd7c470a40696e61c6d8baad7" translate="yes" xml:space="preserve">
          <source>input and output, this will be a single Tensor containing the Jacobian for the linearized inputs and output. If one of the two is a tuple, then the Jacobian will be a tuple of Tensors. If both of them are tuples, then the Jacobian will be a tuple of tuple of Tensors where &lt;code&gt;Jacobian[i][j]&lt;/code&gt; will contain the Jacobian of the &lt;code&gt;i&lt;/code&gt;th output and &lt;code&gt;j&lt;/code&gt;th input and will have as size the concatenation of the sizes of the corresponding output and the corresponding input.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71620129db6ecd9a4657b36e9a42572ed8e210e5" translate="yes" xml:space="preserve">
          <source>input dimensions and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb72c5c49df77b0d5a0f438a6840abdd5b3fae19" translate="yes" xml:space="preserve">
          <source>input length</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94afd6aa9099b7a24f8bb7ab9b2ed2f6eb5f4d78" translate="yes" xml:space="preserve">
          <source>input planes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db1f98c50916408bd297ceb67cc430c5dc3d8981" translate="yes" xml:space="preserve">
          <source>input shape from an expected input of size</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fdc28f9ba5698999c44ee8db842c569cb748650" translate="yes" xml:space="preserve">
          <source>input1:</source>
          <target state="translated">input1:</target>
        </trans-unit>
        <trans-unit id="e29122fa97a159ce8432fa710360d8d502d0f67c" translate="yes" xml:space="preserve">
          <source>input2:</source>
          <target state="translated">input2:</target>
        </trans-unit>
        <trans-unit id="f232d2a01db862fbb2d5aa1052a67e53812fb0f3" translate="yes" xml:space="preserve">
          <source>input:</source>
          <target state="translated">input:</target>
        </trans-unit>
        <trans-unit id="819317b95164ca58c781897c024099a87a5a2aeb" translate="yes" xml:space="preserve">
          <source>input_size</source>
          <target state="translated">input_size</target>
        </trans-unit>
        <trans-unit id="335d9225f695c24c5f50ff6e852e04710d9a3c54" translate="yes" xml:space="preserve">
          <source>instance_norm</source>
          <target state="translated">instance_norm</target>
        </trans-unit>
        <trans-unit id="46f8ab7c0cff9df7cd124852e26022a6bf89e315" translate="yes" xml:space="preserve">
          <source>int</source>
          <target state="translated">int</target>
        </trans-unit>
        <trans-unit id="a1484f5e79255736d0486db17d8b5a0f5d4acd16" translate="yes" xml:space="preserve">
          <source>interpolate</source>
          <target state="translated">interpolate</target>
        </trans-unit>
        <trans-unit id="9cf1c055d3e633fb84aae78fa6ec312de5fbf0a2" translate="yes" xml:space="preserve">
          <source>inv = (u^T u)^{{-1}}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84369e24ea9b305c45563c270b29ea72fdfc9d58" translate="yes" xml:space="preserve">
          <source>inv = (uu^{{T}})^{{-1}}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad5eb9bf5e670c113846d7a1baa4c52e11b9c4e7" translate="yes" xml:space="preserve">
          <source>is 1, then this is a no-op - the original matrix is returned as is.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75e9b4ec61726a25dd9dc59e314e5f40dfeb02ba" translate="yes" xml:space="preserve">
          <source>is a Bernoulli random variable which is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c0d5a6c6e65194de4f85156c81d8bd83eae6e11" translate="yes" xml:space="preserve">
          <source>is a batch of symmetric positive-definite matrices, then the returned tensor will be composed of upper-triangular Cholesky factors of each of the individual matrices. Similarly, when &lt;code&gt;upper&lt;/code&gt; is &lt;code&gt;False&lt;/code&gt;, the returned tensor will be composed of lower-triangular Cholesky factors of each of the individual matrices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2701b4bf633937dd8dbd97720bf3b9146fa3dc29" translate="yes" xml:space="preserve">
          <source>is a batch size,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1318b5080bf9dc677f17bd6ba8ec63da205e899" translate="yes" xml:space="preserve">
          <source>is a data matrix with &lt;code&gt;m&lt;/code&gt; samples and &lt;code&gt;n&lt;/code&gt; features</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf20ae3beed6bd6286eed10d77e2341516a43d16" translate="yes" xml:space="preserve">
          <source>is a height of input planes in pixels, and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3257d977c964419c8c35fb00e3fe8dd46cd0dd9" translate="yes" xml:space="preserve">
          <source>is a learnable parameter. When called without arguments, &lt;code&gt;nn.PReLU()&lt;/code&gt; uses a single parameter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8d2dcb8a733fb425c1ebe2b1b73b8f04aef8041" translate="yes" xml:space="preserve">
          <source>is a length of signal sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="134dbb01e549f9e9b797b699cc27dc5bb794e212" translate="yes" xml:space="preserve">
          <source>is a non-negative margin representing the minimum difference between the positive and negative distances that is required for the loss to be 0. The input tensors have</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea2defd0053fa18f2c571f8c72bd1c43d32217be" translate="yes" xml:space="preserve">
          <source>is a nonnegative, real-valued function quantifying the closeness of two tensors, referred to as the &lt;code&gt;distance_function&lt;/code&gt;; and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcba52aaaf1c377f2c080b0bce7edc1b90f4daae" translate="yes" xml:space="preserve">
          <source>is a parameter passed to &lt;code&gt;AdaptiveLogSoftmaxWithLoss&lt;/code&gt; constructor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="765fdf1b2a2502dfb10fc7a1005cd627d87b6859" translate="yes" xml:space="preserve">
          <source>is also suitable as long as corresponding &lt;code&gt;dataformats&lt;/code&gt; argument is passed, e.g. &lt;code&gt;CHW&lt;/code&gt;, &lt;code&gt;HWC&lt;/code&gt;, &lt;code&gt;HW&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87fbf65ca7212a7c2bc4dca80e1e6a67efe28556" translate="yes" xml:space="preserve">
          <source>is and lower triangular and &lt;code&gt;c&lt;/code&gt; is returned such that:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a145e38490fe68a72c87d17bdbceca75a7f228c" translate="yes" xml:space="preserve">
          <source>is batch dimension,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfeb99a04d9b1ec7ec6ef2f4d6c1eede7a654810" translate="yes" xml:space="preserve">
          <source>is called the order of the polygamma function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef8085e25055bdfc046bf64c466ba9ede0133f6e" translate="yes" xml:space="preserve">
          <source>is computed as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faba7df78e4d1c2b26c8370c6bfebb8cfb3c42e0" translate="yes" xml:space="preserve">
          <source>is either 0 or 1, one of the log terms would be mathematically undefined in the above loss equation. PyTorch chooses to set</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bea43bb939ee6ac17ba706d8fae419a2185708b" translate="yes" xml:space="preserve">
          <source>is even.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="430d8b6d7901720f9e8bf07d0013488bbddfbb5a" translate="yes" xml:space="preserve">
          <source>is exported as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c5a6652e56c4ba0fe144731aaee3fa58bf211a2" translate="yes" xml:space="preserve">
          <source>is followed).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea2c2f749cb016f338cccf6972f555011eb314c2" translate="yes" xml:space="preserve">
          <source>is formed by the spatial dimensions of &lt;code&gt;input&lt;/code&gt; (</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae48ab68c0a2f5a2d8c41ca4f4aa31fffcd1a211" translate="yes" xml:space="preserve">
          <source>is given by:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fa25d48d7b27261d66e89060b7979d93f8ad97a" translate="yes" xml:space="preserve">
          <source>is given, then SVD is computed for the matrix</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c35afa5dccb8353ed11723f31ec506d7a966af21" translate="yes" xml:space="preserve">
          <source>is independently sampled from</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fee79fafb8ce40ed7fa5c0314175de5a73158e4" translate="yes" xml:space="preserve">
          <source>is is the incoming tensor, and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82ae58379438f65f353304e26d484dc4cfc7d4b5" translate="yes" xml:space="preserve">
          <source>is lower triangular such that the returned tensor is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0ab666308c71dc7bee740ac866a6fc94c01ae73" translate="yes" xml:space="preserve">
          <source>is m x q matrix</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10ff45e8493a314dbd9e1e63a6cde1540a2aead4" translate="yes" xml:space="preserve">
          <source>is n x q matrix</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c8058ec06e93587a9709247f5405ee5e01679be" translate="yes" xml:space="preserve">
          <source>is not specified then &lt;code&gt;n&lt;/code&gt; specifies the size of the generated random approximation of eigenvectors. Default value for &lt;code&gt;n&lt;/code&gt; is &lt;code&gt;k&lt;/code&gt;. If</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c2270cd34d617fbfb021aa3bc5a116ad003176c" translate="yes" xml:space="preserve">
          <source>is not supported on the GPU.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2eff3310e520d3d5fbc37a6263fe271e3d32aaae" translate="yes" xml:space="preserve">
          <source>is over all spatial dimensions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d8e0c1f7734dc274731f0d91f70cb0de5d47373" translate="yes" xml:space="preserve">
          <source>is q-vector</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7beb819084fde1f665b79b94057f73079e669ba8" translate="yes" xml:space="preserve">
          <source>is randomly sampled from uniform distribution</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="137dcda37b746d1ed1c5b9e8b367092713dd71b0" translate="yes" xml:space="preserve">
          <source>is set to the initial lr and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d75271ae1a0439c179722656756768dc5b4d0eb" translate="yes" xml:space="preserve">
          <source>is set to the initial lr,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bd9d616cf11403018791802f26f77f9b237bc15" translate="yes" xml:space="preserve">
          <source>is specified, the value of &lt;code&gt;n&lt;/code&gt; (when specified) must be the number of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0130282542d2518652245d74065adbc1572d9bfe" translate="yes" xml:space="preserve">
          <source>is suggested. If &lt;code&gt;margin&lt;/code&gt; is missing, the default value is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd8c6727c1f2e01f068d903d0519b15897917387" translate="yes" xml:space="preserve">
          <source>is the &lt;code&gt;averaging_constant&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccf5fc10cd0c99e43e001de97a0bbb39ad5bb8a7" translate="yes" xml:space="preserve">
          <source>is the Cumulative Distribution Function for Gaussian Distribution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2d1a89245b61df6a2b4e3ef50ec21c4d5ca28c4" translate="yes" xml:space="preserve">
          <source>is the Gamma function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69f40e59910252b1db38e7e1a35ff92e5e4dc364" translate="yes" xml:space="preserve">
          <source>is the Hadamard product.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de9be08c0e9d3b53692fc54b2f44db64d2038a8b" translate="yes" xml:space="preserve">
          <source>is the batch dimension,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="281c7fe7e45ed3513240f95faf84d267cd3f151f" translate="yes" xml:space="preserve">
          <source>is the batch size. If &lt;code&gt;reduction&lt;/code&gt; is not &lt;code&gt;'none'&lt;/code&gt; (default &lt;code&gt;'mean'&lt;/code&gt;), then</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7aac44b39e74720c45bc4945f82173e5519f3151" translate="yes" xml:space="preserve">
          <source>is the batch size. If &lt;code&gt;reduction&lt;/code&gt; is not &lt;code&gt;'none'&lt;/code&gt; (default &lt;code&gt;'mean'&lt;/code&gt;), then:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d6b22b9def65817dd280bd6ecf86708426a0a32" translate="yes" xml:space="preserve">
          <source>is the batch size;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8be6ce7fa645529ee323a9b43f79294eac62870" translate="yes" xml:space="preserve">
          <source>is the carrier measure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dccd80843fee62a4fd00384f181ef5dfd7ea9017" translate="yes" xml:space="preserve">
          <source>is the cell state at time &lt;code&gt;t&lt;/code&gt;,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a5cdf0634393109ed0e6c10f4a675a9dd008d25" translate="yes" xml:space="preserve">
          <source>is the channel dimension, and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2911f889636894fd9437fc1f8bccdf5dfc32c08c" translate="yes" xml:space="preserve">
          <source>is the class number (</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2d40ae995d6e01ae8867dbbc8e01f0c9ad0a790" translate="yes" xml:space="preserve">
          <source>is the cluster index (with clusters for less frequent words having larger indices, and indices starting from</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abe47b0e6f9df0e411555525f5be949c0807109e" translate="yes" xml:space="preserve">
          <source>is the conjugate operator, and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2c2c29784392b49341041ea64a92a8f97126202" translate="yes" xml:space="preserve">
          <source>is the element-wise product between matrices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e271b40793597920f41beeffed2dedfcc2c614a5" translate="yes" xml:space="preserve">
          <source>is the estimated statistic and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="293992dfc6a54d1fabba26b94b8d664bf4c977f2" translate="yes" xml:space="preserve">
          <source>is the frequency that</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6840ccef6fd053392bcc24cc92c9b41ee3db294" translate="yes" xml:space="preserve">
          <source>is the full window size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd966f9fe5dfd27496c8f139774ae88a9bdc0864" translate="yes" xml:space="preserve">
          <source>is the hidden state at time &lt;code&gt;t&lt;/code&gt;,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cff77d5309364b37d4c17d1cb6a585f5da85ae8" translate="yes" xml:space="preserve">
          <source>is the hidden state of the layer at time &lt;code&gt;t-1&lt;/code&gt; or the initial hidden state at time &lt;code&gt;0&lt;/code&gt;, and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c340fc3f4995e77ddcf3a132d4a1f0c7adb3745" translate="yes" xml:space="preserve">
          <source>is the hidden state of the previous layer at time &lt;code&gt;t-1&lt;/code&gt; or the initial hidden state at time &lt;code&gt;0&lt;/code&gt;. If &lt;code&gt;nonlinearity&lt;/code&gt; is &lt;code&gt;'relu'&lt;/code&gt;, then</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a4f6d96148bfa9b7228107a96770fc5dde0514d" translate="yes" xml:space="preserve">
          <source>is the index of the sliding window, and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2469f6f2e498681ee3569647e14be31833f88a99" translate="yes" xml:space="preserve">
          <source>is the input at time &lt;code&gt;t&lt;/code&gt;,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d04ad54d64d891ca797bf8dba3ee19b79450afd" translate="yes" xml:space="preserve">
          <source>is the input at time &lt;code&gt;t&lt;/code&gt;, and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fde4df4915ba09e85fe18396855aa9d98586d02c" translate="yes" xml:space="preserve">
          <source>is the input,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dce6a6c5a1c55dbc075fe3744febd941fd3f4ca2" translate="yes" xml:space="preserve">
          <source>is the learning rate,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9457ed5d008b033eaf00a21d1fcd1ffb7e85b064" translate="yes" xml:space="preserve">
          <source>is the log normalizer function for a given family and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fd98d6e68dd0acb723ba7eb68d4666d92b8b5e5" translate="yes" xml:space="preserve">
          <source>is the logistic sigmoid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bc331c39ad0d3a2ca8a5549ac9f2246ec41696f" translate="yes" xml:space="preserve">
          <source>is the new observed value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7eb0e2bbad7da2362fd8672852961d96bb37a88" translate="yes" xml:space="preserve">
          <source>is the number of dimensions, and a target of appropriate shape (see below).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f912e40c0e26531f2c8f406541d450007d6026c5" translate="yes" xml:space="preserve">
          <source>is the number of dimensions, and a target of appropriate shape (see below). In the case of images, it computes NLL loss per-pixel.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e73c8ea6b2f12c944e3152f62ef672a0b3545af8" translate="yes" xml:space="preserve">
          <source>is the number of epochs between two warm restarts in SGDR:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e49931ad4cea65d7303d0ee8c2c3abd5be9f7263" translate="yes" xml:space="preserve">
          <source>is the number of epochs since the last restart and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46ffa64cbd6558960c470515146428904a116f03" translate="yes" xml:space="preserve">
          <source>is the number of epochs since the last restart in SGDR:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b72f9f30f6715864e7e0780cf4a9070361bc695b" translate="yes" xml:space="preserve">
          <source>is the number of frequencies where STFT is applied and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19e3487d3de758b4d7c9dda255d31ec7d360ff59" translate="yes" xml:space="preserve">
          <source>is the number of the sample in the batch and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5500abbd026de6e722323aa962d278586a0a10a1" translate="yes" xml:space="preserve">
          <source>is the number of values within a block (a block has</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2ecfdf9cb266418c86ea1acf19770751e72f6e0" translate="yes" xml:space="preserve">
          <source>is the observed tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="478cb6836574c1fc2b65d18e35de2a150cda37b1" translate="yes" xml:space="preserve">
          <source>is the optional batch size of &lt;code&gt;input&lt;/code&gt;,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dba33dc9795ff60f74a946b436434911f154bad" translate="yes" xml:space="preserve">
          <source>is the probability of taking action</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a91efa0c82028bad451dbe0610524092a8336e7" translate="yes" xml:space="preserve">
          <source>is the quantized representation of number 6.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a672aacb15df51aa0dcd19145d14d9eeea1cc42" translate="yes" xml:space="preserve">
          <source>is the reward and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebfff7f13f9622979a1c9fbd3bd635698c66698b" translate="yes" xml:space="preserve">
          <source>is the running average min/max,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e177b4b489c4a7be6acfe5e24100117df41db08e" translate="yes" xml:space="preserve">
          <source>is the scheduled learning rate and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="759f3173cf82da127f8ed1c0b4a285bb98891df6" translate="yes" xml:space="preserve">
          <source>is the shape of &lt;code&gt;input&lt;/code&gt;, but instead the last dimension will be halfed as of size</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="130f05a2e94e08252597b7a529038a9210eb05ed" translate="yes" xml:space="preserve">
          <source>is the sigmoid function and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aaa75cf5a0b7490445d1545ac08d4be6b7959a3c" translate="yes" xml:space="preserve">
          <source>is the sigmoid function, and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6923e4a272507572d5b395c19391b740a1376c1b" translate="yes" xml:space="preserve">
          <source>is the size of signal dimension</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0ef4856a0180c35977da1f2adeeda3a43863754" translate="yes" xml:space="preserve">
          <source>is the target,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="130c362cf021ad30f6fee0cf94f67b719fca1554" translate="yes" xml:space="preserve">
          <source>is the total number of blocks. (This is exactly the same specification as the output shape of &lt;a href=&quot;torch.nn.unfold#torch.nn.Unfold&quot;&gt;&lt;code&gt;Unfold&lt;/code&gt;&lt;/a&gt;.) This operation combines these local blocks into the large &lt;code&gt;output&lt;/code&gt; tensor of shape</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f05e8b7fe7c65429c598f8d906665406218fe8ed" translate="yes" xml:space="preserve">
          <source>is the total number of frames used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d89700be3c67cd0fb0391f50987665a0335227f" translate="yes" xml:space="preserve">
          <source>is the total number of non-zero elements in the &lt;code&gt;input&lt;/code&gt; tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="325ce5f911d0c62cf251a6a4e867203a277f44e2" translate="yes" xml:space="preserve">
          <source>is the total number of such blocks:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41ca261b09b1bbc50def76a6df7b0444e2a5670f" translate="yes" xml:space="preserve">
          <source>is the total number of values within each block (a block has</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29882946dec3732bfcefbfca4ee9f857853b606f" translate="yes" xml:space="preserve">
          <source>is the valid 2D &lt;a href=&quot;https://en.wikipedia.org/wiki/Cross-correlation&quot;&gt;cross-correlation&lt;/a&gt; operator,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04f9aea798165ac61ddec84cce9990b6a01efab4" translate="yes" xml:space="preserve">
          <source>is the valid 3D &lt;a href=&quot;https://en.wikipedia.org/wiki/Cross-correlation&quot;&gt;cross-correlation&lt;/a&gt; operator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21b9a586a91d63dc6e7b465f1da00c36db2d2fde" translate="yes" xml:space="preserve">
          <source>is the valid &lt;a href=&quot;https://en.wikipedia.org/wiki/Cross-correlation&quot;&gt;cross-correlation&lt;/a&gt; operator,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1fdd70b8cc2e897c3cb8ab093c0063e4161b495" translate="yes" xml:space="preserve">
          <source>is the vector dimension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9d5e327113799785b79505bd44e86a3d2b9f609" translate="yes" xml:space="preserve">
          <source>is the weight of the positive answer for the class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf62d1f998c753687bf5cbc7f9ea6be3d26bcfb0" translate="yes" xml:space="preserve">
          <source>is the weight, and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a5a7caecc01a3873571d5644d0d3f45f1f49c68" translate="yes" xml:space="preserve">
          <source>is the weighted moving average of the squared gradient.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01528a60c569588fddf5989ad25d02711b168680" translate="yes" xml:space="preserve">
          <source>is the zero point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac997c80df321517a1fa4597888f4c32ca0f269f" translate="yes" xml:space="preserve">
          <source>is the zero_point, and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71d63417f8418c41671a067b7011b34b72c35b70" translate="yes" xml:space="preserve">
          <source>is unit triangular. If True, the diagonal elements of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11db57db0c17b305a5c804590bd8cc18444af6ff" translate="yes" xml:space="preserve">
          <source>is upper triangular and &lt;code&gt;c&lt;/code&gt; is returned such that:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c974d40af1c06e1bedf1c7262705f6171eb12edd" translate="yes" xml:space="preserve">
          <source>is upper triangular such that the returned tensor is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b47b0e08b2595b9cc971cc49e5e13f8189eddb7f" translate="yes" xml:space="preserve">
          <source>is upper-triangular with the default keyword arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04f4ca079a694f9a4bfcfbb945993f9e650f41aa" translate="yes" xml:space="preserve">
          <source>is used for each input channel.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbc1a6abeeafd09633aa87025d642c37d04f7176" translate="yes" xml:space="preserve">
          <source>is used instead of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd335d71c170278ee176c4fcd189aaaee5bc3ec6" translate="yes" xml:space="preserve">
          <source>is width in pixels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf69704d72065b338132434a0902d7df2dbc6903" translate="yes" xml:space="preserve">
          <source>is zero of more batch dimensions (</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0978d2704a52bdc886a205fbe840457f5b96db5d" translate="yes" xml:space="preserve">
          <source>is zero of more batch dimensions composed of upper or lower triangular Cholesky factor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62c89eec732c8376fc4fe6ec3ba7dba4e5e3ef7c" translate="yes" xml:space="preserve">
          <source>is zero or more batch dimensions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6805dd25351d202b3359e6d165f1549387b82259" translate="yes" xml:space="preserve">
          <source>is zero or more batch dimensions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e3d89cbd7e32ce216050105dbe1e22f0031974f" translate="yes" xml:space="preserve">
          <source>is zero or more batch dimensions. The batch dimensions of &lt;code&gt;LU_pivots&lt;/code&gt; must be equal to the batch dimensions of &lt;code&gt;LU_data&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="392140062909b5bb864c995eab01cae4c3b8e31f" translate="yes" xml:space="preserve">
          <source>is:</source>
          <target state="translated">is:</target>
        </trans-unit>
        <trans-unit id="6a0e9e2fc662576a9398259e75fd3a2ece885f1b" translate="yes" xml:space="preserve">
          <source>isnan</source>
          <target state="translated">isnan</target>
        </trans-unit>
        <trans-unit id="cbb1b7fae920edf43156684563f3949d7c8afdf9" translate="yes" xml:space="preserve">
          <source>it is equivalent to &lt;code&gt;scipy.spatial.distance.cdist(input, &amp;lsquo;hamming&amp;rsquo;) * M&lt;/code&gt;. When</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dc225c73f8b2ac6a50df3e9317188b9692e971f" translate="yes" xml:space="preserve">
          <source>it is equivalent to &lt;code&gt;scipy.spatial.distance.pdist(input, &amp;lsquo;hamming&amp;rsquo;) * M&lt;/code&gt;. When</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a92dbdae3d3f2abe3a6b2ea4a951768b39b88da1" translate="yes" xml:space="preserve">
          <source>it will be treated as &lt;code&gt;B&lt;/code&gt; bags (sequences) each of fixed length &lt;code&gt;N&lt;/code&gt;, and this will return &lt;code&gt;B&lt;/code&gt; values aggregated in a way depending on the &lt;code&gt;mode&lt;/code&gt;. &lt;code&gt;offsets&lt;/code&gt; is ignored and required to be &lt;code&gt;None&lt;/code&gt; in this case.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53d2bd1fccffc8c4ef1d454c8c351de5588ba8c0" translate="yes" xml:space="preserve">
          <source>it will be treated as a concatenation of multiple bags (sequences). &lt;code&gt;offsets&lt;/code&gt; is required to be a 1D tensor containing the starting index positions of each bag in &lt;code&gt;input&lt;/code&gt;. Therefore, for &lt;code&gt;offsets&lt;/code&gt; of shape &lt;code&gt;(B)&lt;/code&gt;, &lt;code&gt;input&lt;/code&gt; will be viewed as having &lt;code&gt;B&lt;/code&gt; bags. Empty bags (i.e., having 0-length) will have returned vectors filled by zeros.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c2dd944dde9e08881bef0894fe7b22a5c9c4b06" translate="yes" xml:space="preserve">
          <source>j</source>
          <target state="translated">j</target>
        </trans-unit>
        <trans-unit id="7e8292a53dd8980df56acb20a579b278135649fa" translate="yes" xml:space="preserve">
          <source>jvp (tuple of Tensors or &lt;a href=&quot;tensors#torch.Tensor&quot;&gt;Tensor&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13fbd79c3d390e5d6585a21e11ff5ec1970cff0c" translate="yes" xml:space="preserve">
          <source>k</source>
          <target state="translated">k</target>
        </trans-unit>
        <trans-unit id="807771e8d1b08c7ecde767faa35cb56925ba25b3" translate="yes" xml:space="preserve">
          <source>k + 1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99b8237d0c5de43304427d636f798a0f7cfb6280" translate="yes" xml:space="preserve">
          <source>k = \frac{1}{\text{hidden\_size}}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="173b6a11749891be026bf37b10e61843eb986150" translate="yes" xml:space="preserve">
          <source>k = \frac{1}{\text{in1\_features}}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="becb099737e9867f45aca3e8f5ab9fe9630a860d" translate="yes" xml:space="preserve">
          <source>k = \frac{1}{\text{in\_features}}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a57d75a72c2e1415251ed1b7728aee2666592787" translate="yes" xml:space="preserve">
          <source>k = \frac{groups}{C_\text{in} * \prod_{i=0}^{1}\text{kernel\_size}[i]}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9970138eac4e8a7e2b2d75124ecab76a5422fe2c" translate="yes" xml:space="preserve">
          <source>k = \frac{groups}{C_\text{in} * \prod_{i=0}^{2}\text{kernel\_size}[i]}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04c647a4fe635ffd4301a95b2ee3f7cd71d537e9" translate="yes" xml:space="preserve">
          <source>k = \frac{groups}{C_\text{in} * \text{kernel\_size}}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67e7eb6ea5fdf00e430deccd0bf30f1177098735" translate="yes" xml:space="preserve">
          <source>k = \frac{groups}{C_\text{out} * \prod_{i=0}^{1}\text{kernel\_size}[i]}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e1e2916eb0167ebb51c27d5a79bd1ec608fd46d" translate="yes" xml:space="preserve">
          <source>k = \frac{groups}{C_\text{out} * \prod_{i=0}^{2}\text{kernel\_size}[i]}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="263d464df903034f6f2b38274030858ca69b70da" translate="yes" xml:space="preserve">
          <source>k = \frac{groups}{C_\text{out} * \text{kernel\_size}}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5db776fa987a8c2631bca5fefd5abf5c91c53f89" translate="yes" xml:space="preserve">
          <source>k = \min(m, n)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af8d51814a0798226467ceffe735861ab527647c" translate="yes" xml:space="preserve">
          <source>k = m</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90ab0bc1d44ccf270aa797433fb92b3c4fc7a86e" translate="yes" xml:space="preserve">
          <source>k(x)</source>
          <target state="translated">k(x)</target>
        </trans-unit>
        <trans-unit id="7912b3202a7604183b29a52db124e8c022715be5" translate="yes" xml:space="preserve">
          <source>kH \times kW</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddc9e4a5bbb37b96366edee9e0fc8801bad0b0b8" translate="yes" xml:space="preserve">
          <source>kT \times kH \times kW</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07f9c8544271ab8abf3b2e066216829a185cedae" translate="yes" xml:space="preserve">
          <source>kernel_size</source>
          <target state="translated">kernel_size</target>
        </trans-unit>
        <trans-unit id="3e2de11d5eb367bc433ea21e26bcaf254e7ca686" translate="yes" xml:space="preserve">
          <source>kernel_size[0]</source>
          <target state="translated">kernel_size[0]</target>
        </trans-unit>
        <trans-unit id="b52b4d2d83c346c42ed1fda9e72b8efcc7861d80" translate="yes" xml:space="preserve">
          <source>kernel_size[1]</source>
          <target state="translated">kernel_size[1]</target>
        </trans-unit>
        <trans-unit id="31519692c8123f5e0fbe873dcd451af7ac836205" translate="yes" xml:space="preserve">
          <source>kernel_size[2]</source>
          <target state="translated">kernel_size[2]</target>
        </trans-unit>
        <trans-unit id="f07e85f401d30b2255d80444989c08d4ca2a2ac4" translate="yes" xml:space="preserve">
          <source>key:</source>
          <target state="translated">key:</target>
        </trans-unit>
        <trans-unit id="7fcaa9b57880be5eac6cac317208a9822e766cee" translate="yes" xml:space="preserve">
          <source>key_padding_mask:</source>
          <target state="translated">key_padding_mask:</target>
        </trans-unit>
        <trans-unit id="b8acedc6e389e54da422bb647281e1bf31da4c78" translate="yes" xml:space="preserve">
          <source>keypoint AP</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a030b8c3893ceda686cc64fceb428bbd9864c30e" translate="yes" xml:space="preserve">
          <source>keypoints (&lt;code&gt;FloatTensor[N, K, 3]&lt;/code&gt;): the &lt;code&gt;K&lt;/code&gt; keypoints location for each of the &lt;code&gt;N&lt;/code&gt; instances, in the format &lt;code&gt;[x, y, visibility]&lt;/code&gt;, where &lt;code&gt;visibility=0&lt;/code&gt; means that the keypoint is not visible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1fd5e238c67601ed3b7d4c09dce67f994a9f03f" translate="yes" xml:space="preserve">
          <source>keypoints (&lt;code&gt;FloatTensor[N, K, 3]&lt;/code&gt;): the locations of the predicted keypoints, in &lt;code&gt;[x, y, v]&lt;/code&gt; format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4aec5de13f0bdcb2589445e355f65b586267b47" translate="yes" xml:space="preserve">
          <source>kl_div</source>
          <target state="translated">kl_div</target>
        </trans-unit>
        <trans-unit id="07c342be6e560e7f43842e2e21b774e61d85f047" translate="yes" xml:space="preserve">
          <source>l</source>
          <target state="translated">l</target>
        </trans-unit>
        <trans-unit id="8d28f668bfe47841cbcd3c2eb3a414a5168fe9a0" translate="yes" xml:space="preserve">
          <source>l &amp;gt;= 2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1d091fd59b4f4619375ec3b97d3d0b4da1ca2c9" translate="yes" xml:space="preserve">
          <source>l(x,y) = L = \{ l_1,\dots,l_N \}, \quad l_n = y_n \cdot \left( \log y_n - x_n \right)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2a6818882cdf8b865e414d895055d01e695968b" translate="yes" xml:space="preserve">
          <source>l1_loss</source>
          <target state="translated">l1_loss</target>
        </trans-unit>
        <trans-unit id="8e55f7279e2d1feeef3cc07f3b1b6bbcfdeb2f96" translate="yes" xml:space="preserve">
          <source>l_n = \begin{cases} x_n, &amp;amp; \text{if}\; y_n = 1,\\ \max \{0, \Delta - x_n\}, &amp;amp; \text{if}\; y_n = -1, \end{cases}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ced14667d816eaa10d186751e6c3acbc895754b" translate="yes" xml:space="preserve">
          <source>l_p</source>
          <target state="translated">l_p</target>
        </trans-unit>
        <trans-unit id="01b5814f1070bba7e0ed34ffb47abb6d8709c7b0" translate="yes" xml:space="preserve">
          <source>label_img:</source>
          <target state="translated">label_img:</target>
        </trans-unit>
        <trans-unit id="0e187b00cb0a085f461691f1c65a33263a5780fd" translate="yes" xml:space="preserve">
          <source>labels (&lt;code&gt;Int64Tensor[N]&lt;/code&gt;): the class label for each ground-truth box</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c15d2d9588bc6bdc875c6b92d09d3abc924004d7" translate="yes" xml:space="preserve">
          <source>labels (&lt;code&gt;Int64Tensor[N]&lt;/code&gt;): the predicted labels for each image</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bff6c24d0d620b5a827a96b379eaab48e0802900" translate="yes" xml:space="preserve">
          <source>layer (W_hr|W_hz|W_hn), of shape &lt;code&gt;(3*hidden_size, hidden_size)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ea9470b34b679eae9d99fa0de2594e21e04bb4c" translate="yes" xml:space="preserve">
          <source>layer (W_ir|W_iz|W_in), of shape &lt;code&gt;(3*hidden_size, input_size)&lt;/code&gt; for &lt;code&gt;k = 0&lt;/code&gt;. Otherwise, the shape is &lt;code&gt;(3*hidden_size, num_directions * hidden_size)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1824642bccba4358d3c0a0398e4f17008dcee16" translate="yes" xml:space="preserve">
          <source>layer (b_hr|b_hz|b_hn), of shape &lt;code&gt;(3*hidden_size)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92ee03d646252581e792b5cc50f50737017bf6a3" translate="yes" xml:space="preserve">
          <source>layer (b_ir|b_iz|b_in), of shape &lt;code&gt;(3*hidden_size)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81613cf511f0d14a3cdbd1544e8de89d994337cc" translate="yes" xml:space="preserve">
          <source>layer &lt;code&gt;(W_hi|W_hf|W_hg|W_ho)&lt;/code&gt;, of shape &lt;code&gt;(4*hidden_size, hidden_size)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec398718688ea1a63c01c7e7a7830828d4f051a0" translate="yes" xml:space="preserve">
          <source>layer &lt;code&gt;(W_ii|W_if|W_ig|W_io)&lt;/code&gt;, of shape &lt;code&gt;(4*hidden_size, input_size)&lt;/code&gt; for &lt;code&gt;k = 0&lt;/code&gt;. Otherwise, the shape is &lt;code&gt;(4*hidden_size, num_directions * hidden_size)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a0e376ae15f845362e5a8ef83c94ade87046aec" translate="yes" xml:space="preserve">
          <source>layer &lt;code&gt;(b_hi|b_hf|b_hg|b_ho)&lt;/code&gt;, of shape &lt;code&gt;(4*hidden_size)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47c84d54ea7e43688b0b1c7fd96ce2cb97c9b284" translate="yes" xml:space="preserve">
          <source>layer &lt;code&gt;(b_ii|b_if|b_ig|b_io)&lt;/code&gt;, of shape &lt;code&gt;(4*hidden_size)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9412a97b4b84395a04999c3844413796a34d3cf" translate="yes" xml:space="preserve">
          <source>layer_norm</source>
          <target state="translated">layer_norm</target>
        </trans-unit>
        <trans-unit id="414dd37d13aeb316e84bb517261fef7295a0f33c" translate="yes" xml:space="preserve">
          <source>lcm(0, 0) = 0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6c274796830e5421daf9c0787a5695aa94a3a87" translate="yes" xml:space="preserve">
          <source>lcm(0, a) = 0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="593b743b207e10ff55ec63e71a46c07909d0880a" translate="yes" xml:space="preserve">
          <source>le</source>
          <target state="translated">le</target>
        </trans-unit>
        <trans-unit id="02f515d776b9bcc597d48990c2bc36240e241c79" translate="yes" xml:space="preserve">
          <source>leaky_relu</source>
          <target state="translated">leaky_relu</target>
        </trans-unit>
        <trans-unit id="a573b540d2dde90ba6da3b9d6286c8ec60c10044" translate="yes" xml:space="preserve">
          <source>len</source>
          <target state="translated">len</target>
        </trans-unit>
        <trans-unit id="a4e1c3aa4d02ea50898aadc65be66da72185f80f" translate="yes" xml:space="preserve">
          <source>len(pad)</source>
          <target state="translated">len(pad)</target>
        </trans-unit>
        <trans-unit id="f5b9427750e1b49e7ea0572daf4908c4de6358c2" translate="yes" xml:space="preserve">
          <source>lim</source>
          <target state="translated">lim</target>
        </trans-unit>
        <trans-unit id="cb1fa73a03da3c48374cd4146f394733df379201" translate="yes" xml:space="preserve">
          <source>linear</source>
          <target state="translated">linear</target>
        </trans-unit>
        <trans-unit id="3c01627cf1f82343852c754d030ad8d0be18a589" translate="yes" xml:space="preserve">
          <source>ln</source>
          <target state="translated">ln</target>
        </trans-unit>
        <trans-unit id="57e7d1dac9aa3a3fecf5d9a24c38810a34f5d97d" translate="yes" xml:space="preserve">
          <source>loc</source>
          <target state="translated">loc</target>
        </trans-unit>
        <trans-unit id="3f98f6ad434667cdec98a6dc505ce46f4796f866" translate="yes" xml:space="preserve">
          <source>local_response_norm</source>
          <target state="translated">local_response_norm</target>
        </trans-unit>
        <trans-unit id="7babc233de26ab19ead1b9c278128d5c434910ee" translate="yes" xml:space="preserve">
          <source>log</source>
          <target state="translated">log</target>
        </trans-unit>
        <trans-unit id="66e97cb65ec528e42c6db8449dd1bb5144fabdcf" translate="yes" xml:space="preserve">
          <source>log-probabilities of for each class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="008391a6494b0a1a3990b931239d73dda4761f08" translate="yes" xml:space="preserve">
          <source>log1p</source>
          <target state="translated">log1p</target>
        </trans-unit>
        <trans-unit id="8272fbd4ea89b69b3ccf4f94a9578f957614acd7" translate="yes" xml:space="preserve">
          <source>log2</source>
          <target state="translated">log2</target>
        </trans-unit>
        <trans-unit id="dfea6e1f5a24566439b7729430190894b94e5e96" translate="yes" xml:space="preserve">
          <source>log_sigmoid</source>
          <target state="translated">log_sigmoid</target>
        </trans-unit>
        <trans-unit id="5ff90e8b7b4b2d43b0dffb33147b1fa220957e7e" translate="yes" xml:space="preserve">
          <source>log_softmax</source>
          <target state="translated">log_softmax</target>
        </trans-unit>
        <trans-unit id="3d32e2f00d5864686079db8974363e1fbdf8f1f5" translate="yes" xml:space="preserve">
          <source>logcumsumexp</source>
          <target state="translated">logcumsumexp</target>
        </trans-unit>
        <trans-unit id="87cceff421033fe936477c7c8a8b77145122971d" translate="yes" xml:space="preserve">
          <source>logdet</source>
          <target state="translated">logdet</target>
        </trans-unit>
        <trans-unit id="16c7bbae998ab37a3c02a97fd972d62211a606d5" translate="yes" xml:space="preserve">
          <source>logit</source>
          <target state="translated">logit</target>
        </trans-unit>
        <trans-unit id="c169dbb38a2202740e5682e7338ddc0816ae67e7" translate="yes" xml:space="preserve">
          <source>logsigmoid</source>
          <target state="translated">logsigmoid</target>
        </trans-unit>
        <trans-unit id="f84bde287b164208b85eac3e1a1f9183f363608a" translate="yes" xml:space="preserve">
          <source>logsumexp</source>
          <target state="translated">logsumexp</target>
        </trans-unit>
        <trans-unit id="c9279f09f8296b9eb2f62ca1b4a71c5c5f330b0a" translate="yes" xml:space="preserve">
          <source>loss</source>
          <target state="translated">loss</target>
        </trans-unit>
        <trans-unit id="cebbb51122f22455f0108e18691fd1ec98b3003d" translate="yes" xml:space="preserve">
          <source>loss(x, y) = - \frac{1}{C} * \sum_i y[i] * \log((1 + \exp(-x[i]))^{-1}) + (1-y[i]) * \log\left(\frac{\exp(-x[i])}{(1 + \exp(-x[i]))}\right)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="346e3ee198e98146993894d3de8ecab1a86c3e80" translate="yes" xml:space="preserve">
          <source>lower</source>
          <target state="translated">lower</target>
        </trans-unit>
        <trans-unit id="be198fc328a96cc03f5644bb41af886e8a59bd77" translate="yes" xml:space="preserve">
          <source>lp_pool1d</source>
          <target state="translated">lp_pool1d</target>
        </trans-unit>
        <trans-unit id="c618e70fbaf67300aa1c86f8528fa9453ed48bd9" translate="yes" xml:space="preserve">
          <source>lp_pool2d</source>
          <target state="translated">lp_pool2d</target>
        </trans-unit>
        <trans-unit id="1370e957dab4f3d207f42f9df4a879edc31222b0" translate="yes" xml:space="preserve">
          <source>lr</source>
          <target state="translated">lr</target>
        </trans-unit>
        <trans-unit id="5f3acfbeb4f6fa5007dd1137ab1e96149af87281" translate="yes" xml:space="preserve">
          <source>lt</source>
          <target state="translated">lt</target>
        </trans-unit>
        <trans-unit id="2ddece99037bcda8c7421783cf1585abb4aa125c" translate="yes" xml:space="preserve">
          <source>lt(other) -&amp;gt; Tensor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b0d31c0d563223024da45691584643ac78c96e8" translate="yes" xml:space="preserve">
          <source>m</source>
          <target state="translated">m</target>
        </trans-unit>
        <trans-unit id="decfd65fc5254d4c273ad556b4f0b50316ca2c72" translate="yes" xml:space="preserve">
          <source>m &amp;lt; n</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b74cc59e4930f4f766fe8c16b7cda4802e37db42" translate="yes" xml:space="preserve">
          <source>m - n</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0b5b5a1b8ecd4e77f0943804e4f68eeef9f1952" translate="yes" xml:space="preserve">
          <source>m \geq n</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b49bc1d9d734571822ba5ca040431d7e91ab38ab" translate="yes" xml:space="preserve">
          <source>m \times n</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="890356f11c430cd24bded6f7bb87459e163f6ee3" translate="yes" xml:space="preserve">
          <source>m1, m2, \dots, mi</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="707082857225d427f84e4dbb1bd6cd1d08da038b" translate="yes" xml:space="preserve">
          <source>m1, m2, \dots, mi, 2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5033fb5f759a1d872e64738513ba3625e94162d5" translate="yes" xml:space="preserve">
          <source>margin</source>
          <target state="translated">margin</target>
        </trans-unit>
        <trans-unit id="d4aeb1c78272dc6d5a5552ca678759f8129ea374" translate="yes" xml:space="preserve">
          <source>margin_ranking_loss</source>
          <target state="translated">margin_ranking_loss</target>
        </trans-unit>
        <trans-unit id="558c67daebb35f6cde771c4b2b784338c357ef99" translate="yes" xml:space="preserve">
          <source>mask (&lt;a href=&quot;../tensors#torch.Tensor&quot;&gt;torch.Tensor&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6548761cac6c62ea1acc27355527e7e7a795505" translate="yes" xml:space="preserve">
          <source>mask AP</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41e4e8a707b8a2bb3fc9d8da525bf523e4267991" translate="yes" xml:space="preserve">
          <source>mask to apply to &lt;code&gt;t&lt;/code&gt;, of same dims as &lt;code&gt;t&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba22b5868755ce487abcc0f806693ba93a516205" translate="yes" xml:space="preserve">
          <source>masked_fill</source>
          <target state="translated">masked_fill</target>
        </trans-unit>
        <trans-unit id="a56e75ce244bbec5b93eff069e7b1679572d7c5a" translate="yes" xml:space="preserve">
          <source>masked_scatter</source>
          <target state="translated">masked_scatter</target>
        </trans-unit>
        <trans-unit id="00b2d29e0730d6874d8ac8c9decbd4b10af0d531" translate="yes" xml:space="preserve">
          <source>masked_select</source>
          <target state="translated">masked_select</target>
        </trans-unit>
        <trans-unit id="b1226d1a97256726797bcbe07b045addc7895f8c" translate="yes" xml:space="preserve">
          <source>masks (&lt;code&gt;UInt8Tensor[N, 1, H, W]&lt;/code&gt;): the predicted masks for each instance, in &lt;code&gt;0-1&lt;/code&gt; range. In order to obtain the final segmentation masks, the soft masks can be thresholded, generally with a value of 0.5 (&lt;code&gt;mask &amp;gt;= 0.5&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e827abab7c5073cf365b5db791423f9c63c568f" translate="yes" xml:space="preserve">
          <source>masks (&lt;code&gt;UInt8Tensor[N, H, W]&lt;/code&gt;): the segmentation binary masks for each instance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc7c5be316e48d137cbb549833b85d91034d799d" translate="yes" xml:space="preserve">
          <source>mat</source>
          <target state="translated">mat</target>
        </trans-unit>
        <trans-unit id="03f42dbc564646a79a15a4512bb9321793a55912" translate="yes" xml:space="preserve">
          <source>mat @ vec</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f43814b18f3b5b55a51ca1ad1e0e137c3dd5bfe9" translate="yes" xml:space="preserve">
          <source>mat1</source>
          <target state="translated">mat1</target>
        </trans-unit>
        <trans-unit id="01de1f53904b8db1a5c5737c8930f769f171e647" translate="yes" xml:space="preserve">
          <source>mat1 @ mat2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a84419fbc985471cdbef09761fae2147538916f" translate="yes" xml:space="preserve">
          <source>mat2</source>
          <target state="translated">mat2</target>
        </trans-unit>
        <trans-unit id="938d68e660addbfd641dc6fd55fc0d8fdd4141fd" translate="yes" xml:space="preserve">
          <source>mat:</source>
          <target state="translated">mat:</target>
        </trans-unit>
        <trans-unit id="4b9cec936f22a243817bc5959597adb15f15fb39" translate="yes" xml:space="preserve">
          <source>match semantics</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a418b3e537fdc486173bc669dbb75e4b0b0d8c1" translate="yes" xml:space="preserve">
          <source>matrices.</source>
          <target state="translated">matrices.</target>
        </trans-unit>
        <trans-unit id="bf2f749e80c970f50552e9d5f3e8434e78b88d35" translate="yes" xml:space="preserve">
          <source>matrix</source>
          <target state="translated">matrix</target>
        </trans-unit>
        <trans-unit id="f654484963225ef84923657150dd3f0446216159" translate="yes" xml:space="preserve">
          <source>matrix norm</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e6e39c6dcaf8b4bde9e4d8d861021aebce8ae50" translate="yes" xml:space="preserve">
          <source>matrix_power(input) -&amp;gt; Tensor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0706025b2bbcec1ed8d64822f4eccd96314938d0" translate="yes" xml:space="preserve">
          <source>max</source>
          <target state="translated">max</target>
        </trans-unit>
        <trans-unit id="afacd51e2162787072a3e83acedaa172763561b9" translate="yes" xml:space="preserve">
          <source>max target length, if shape is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffda383f347ada1a98d7396a9b725dc7af220c26" translate="yes" xml:space="preserve">
          <source>max(abs(x))</source>
          <target state="translated">max(abs(x))</target>
        </trans-unit>
        <trans-unit id="91c402cc7df8b333bb48ab681ce9bfc8f8d3753b" translate="yes" xml:space="preserve">
          <source>max(sum(abs(x), dim=0))</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c24420953e4e2bad3901fbeda91ddc27835ae28f" translate="yes" xml:space="preserve">
          <source>max(sum(abs(x), dim=1))</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d223f5abf4f13bb472a6a7f2799278e421a9265" translate="yes" xml:space="preserve">
          <source>max_pool1d</source>
          <target state="translated">max_pool1d</target>
        </trans-unit>
        <trans-unit id="068513d9eea64b547f87b3ac07116ad6b30d7a1d" translate="yes" xml:space="preserve">
          <source>max_pool2d</source>
          <target state="translated">max_pool2d</target>
        </trans-unit>
        <trans-unit id="b7068d0aa8512cb2d08fb6aeec4c5a6d487c6125" translate="yes" xml:space="preserve">
          <source>max_pool3d</source>
          <target state="translated">max_pool3d</target>
        </trans-unit>
        <trans-unit id="05e0d4e478aa9a8bf280df8eb594fe5e7c0fc211" translate="yes" xml:space="preserve">
          <source>max_size</source>
          <target state="translated">max_size</target>
        </trans-unit>
        <trans-unit id="23f7c76e90aa2e543566db330c1cfde91aa99554" translate="yes" xml:space="preserve">
          <source>max_unpool1d</source>
          <target state="translated">max_unpool1d</target>
        </trans-unit>
        <trans-unit id="dea0f7cdd936d235892018e47c2010b94661b7e8" translate="yes" xml:space="preserve">
          <source>max_unpool2d</source>
          <target state="translated">max_unpool2d</target>
        </trans-unit>
        <trans-unit id="7de1a94751d2104c9214d3073717f7da6ceaf600" translate="yes" xml:space="preserve">
          <source>max_unpool3d</source>
          <target state="translated">max_unpool3d</target>
        </trans-unit>
        <trans-unit id="5f00f7a0a9f5e57deb39805aa521121fa277e75e" translate="yes" xml:space="preserve">
          <source>mean</source>
          <target state="translated">mean</target>
        </trans-unit>
        <trans-unit id="32b957ceca1461cc28a71e2b6f3c2bc9565dbcaa" translate="yes" xml:space="preserve">
          <source>mean IoU</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="344b0fa054fa76f56bbff3aaab0f0adc2fc9804b" translate="yes" xml:space="preserve">
          <source>means any number of additional dimensions and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a802e80954a41173d6372ac606eab6c6fb64197f" translate="yes" xml:space="preserve">
          <source>means any number of additional dimensions. All but the last dimension of the inputs should be the same.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54b75eddcf79eec8338a4fd138ba51e036c93f23" translate="yes" xml:space="preserve">
          <source>means, any number of additional dimensions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc9d2ff543d8b9c7e7b8b3c56ecb95a7e536a4d0" translate="yes" xml:space="preserve">
          <source>means, any number of dimensions. The sum operation operates over all the elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09f3246f599ac9a17e658bc0657edea466004792" translate="yes" xml:space="preserve">
          <source>median</source>
          <target state="translated">median</target>
        </trans-unit>
        <trans-unit id="98cd8348ebc8fefb9dced082a99685ec298e4a52" translate="yes" xml:space="preserve">
          <source>memory (GB)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1a1b0aba6be16235e524381e8621b6c9f4da909" translate="yes" xml:space="preserve">
          <source>memory_format (&lt;a href=&quot;tensor_attributes#torch.torch.memory_format&quot;&gt;&lt;code&gt;torch.memory_format&lt;/code&gt;&lt;/a&gt;, optional): the desired memory format of returned Tensor. Default: &lt;code&gt;torch.preserve_format&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5157fc90127389db57a4a95d43f5c1825cb1f946" translate="yes" xml:space="preserve">
          <source>memory_key_padding_mask:</source>
          <target state="translated">memory_key_padding_mask:</target>
        </trans-unit>
        <trans-unit id="e640b27bd24b1c76d1e56a49db332fb9f927d757" translate="yes" xml:space="preserve">
          <source>memory_mask:</source>
          <target state="translated">memory_mask:</target>
        </trans-unit>
        <trans-unit id="53adb9aa66e1afea031a650ab6e5bfc96d0009c9" translate="yes" xml:space="preserve">
          <source>method as a call to python, and &lt;code&gt;@unused&lt;/code&gt; replaces it with an exception. &lt;code&gt;@ignored&lt;/code&gt; cannot be exported; &lt;code&gt;@unused&lt;/code&gt; can.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6c935d4f3c7b220fa038613a1f9c1b56b255a86" translate="yes" xml:space="preserve">
          <source>min</source>
          <target state="translated">min</target>
        </trans-unit>
        <trans-unit id="db404d0fc00eba2f69ae7a48b59fb849d05ce8af" translate="yes" xml:space="preserve">
          <source>min(abs(x))</source>
          <target state="translated">min(abs(x))</target>
        </trans-unit>
        <trans-unit id="3ef1da91a7320545e6aa07c5b2ebd6628e2d4957" translate="yes" xml:space="preserve">
          <source>min(n, m)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8530ab3720e27fb5c02635b64a72518d96914bcb" translate="yes" xml:space="preserve">
          <source>min(sum(abs(x), dim=0))</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1450229b67ef739b4209bd2dd07756700f94c72a" translate="yes" xml:space="preserve">
          <source>min(sum(abs(x), dim=1))</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e5142d1e9970d90b9e9ebaa9883f6824099cffe" translate="yes" xml:space="preserve">
          <source>min/max</source>
          <target state="translated">min/max</target>
        </trans-unit>
        <trans-unit id="05a91fd7708ce79a5056e16656a6fdf458cca71e" translate="yes" xml:space="preserve">
          <source>minibatch</source>
          <target state="translated">minibatch</target>
        </trans-unit>
        <trans-unit id="b8d09b4d8580aacbd9efc4540a9b88d2feb9d7e5" translate="yes" xml:space="preserve">
          <source>mm</source>
          <target state="translated">mm</target>
        </trans-unit>
        <trans-unit id="bbd135889346cba83c67f4adbd3c9ea8a053c832" translate="yes" xml:space="preserve">
          <source>model with fused modules. A new copy is created if inplace=True.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a4da03b63a5c85fa945e4648618231ac6c6a6a1" translate="yes" xml:space="preserve">
          <source>modified (i.e. pruned) version of the input module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fabed978dbf5ecc838070ab7f36f37691d3e97c" translate="yes" xml:space="preserve">
          <source>module (&lt;a href=&quot;torch.nn.module#torch.nn.Module&quot;&gt;nn.Module&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="503c4af7903cabeb312f4437dc97cf2e76af6b0a" translate="yes" xml:space="preserve">
          <source>momentum</source>
          <target state="translated">momentum</target>
        </trans-unit>
        <trans-unit id="82bc53f40b7120e5eb7d113e935fe42765fc631a" translate="yes" xml:space="preserve">
          <source>mse_loss</source>
          <target state="translated">mse_loss</target>
        </trans-unit>
        <trans-unit id="2c3cbd53a74aed6c63119dd5f562b86f456de9da" translate="yes" xml:space="preserve">
          <source>mul</source>
          <target state="translated">mul</target>
        </trans-unit>
        <trans-unit id="69980f871b6b5da330eeda6b333045bddc1026f7" translate="yes" xml:space="preserve">
          <source>mul_scalar</source>
          <target state="translated">mul_scalar</target>
        </trans-unit>
        <trans-unit id="2287a61828f60d8e697394e87e6514f5f8c4ed9a" translate="yes" xml:space="preserve">
          <source>multi_margin_loss</source>
          <target state="translated">multi_margin_loss</target>
        </trans-unit>
        <trans-unit id="47892f8b5050d973e85e21d3e5030189732b7907" translate="yes" xml:space="preserve">
          <source>multi_margin_loss(input, target, p=1, margin=1, weight=None, size_average=None,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae77047c506cf24f33386f90961d8372521ca146" translate="yes" xml:space="preserve">
          <source>multilabel_margin_loss</source>
          <target state="translated">multilabel_margin_loss</target>
        </trans-unit>
        <trans-unit id="f23041aaa77be1bf99bf889c8030443563867bff" translate="yes" xml:space="preserve">
          <source>multilabel_soft_margin_loss</source>
          <target state="translated">multilabel_soft_margin_loss</target>
        </trans-unit>
        <trans-unit id="9cf648dd1ac430cb6058c2dc3a28908ff0b2bd25" translate="yes" xml:space="preserve">
          <source>multinomial</source>
          <target state="translated">multinomial</target>
        </trans-unit>
        <trans-unit id="a5bd8289887f3cf122e499e17ebfeef374ec32de" translate="yes" xml:space="preserve">
          <source>multiprocessing</source>
          <target state="translated">multiprocessing</target>
        </trans-unit>
        <trans-unit id="ec8b72d76e8f05913c2ad8555ca1701be351540a" translate="yes" xml:space="preserve">
          <source>must have the same size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3ee6d69896879feb25d09e2b5a143565e6fa66b" translate="yes" xml:space="preserve">
          <source>my_qconfig = QConfig(activation=MinMaxObserver.with_args(dtype=torch.qint8), weight=default_observer.with_args(dtype=torch.qint8))</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9336db8c6b87c1c415b0edaf3f86f66d43958a1b" translate="yes" xml:space="preserve">
          <source>my_qconfig = QConfigDynamic(weight=default_observer.with_args(dtype=torch.qint8))</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1854cae891ec7b29161ccaf79a24b00c274bdaa" translate="yes" xml:space="preserve">
          <source>n</source>
          <target state="translated">n</target>
        </trans-unit>
        <trans-unit id="a52bc6d1ca0afed26e364ef9a32480ec122bf1bc" translate="yes" xml:space="preserve">
          <source>n \geq 0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f78268f5a4b51027bb36c7e072a2063cb100ee44" translate="yes" xml:space="preserve">
          <source>n \geq 2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c786131f418a643e8f7486fa2ccb35791d6cf3f" translate="yes" xml:space="preserve">
          <source>n^{th}</source>
          <target state="translated">n^{th}</target>
        </trans-unit>
        <trans-unit id="425510776d130e4e69afbfbb17eef604ccb37e7e" translate="yes" xml:space="preserve">
          <source>n_classes</source>
          <target state="translated">n_classes</target>
        </trans-unit>
        <trans-unit id="4cf537d4847fbe73ed9b9df1329ebb5f5f7212ba" translate="yes" xml:space="preserve">
          <source>n_fft</source>
          <target state="translated">n_fft</target>
        </trans-unit>
        <trans-unit id="46a4f1a13abc7b6baa49106d149b8aa25b91d554" translate="yes" xml:space="preserve">
          <source>n_t</source>
          <target state="translated">n_t</target>
        </trans-unit>
        <trans-unit id="a684a5d2d0b57f805d917d74f6dae317348dc86a" translate="yes" xml:space="preserve">
          <source>n_{dim}</source>
          <target state="translated">n_{dim}</target>
        </trans-unit>
        <trans-unit id="e1b335fb5313ef3a1c41bd860aedc229ab4676a1" translate="yes" xml:space="preserve">
          <source>narrow</source>
          <target state="translated">narrow</target>
        </trans-unit>
        <trans-unit id="f60d2a2f7993d5825671faef6f38d5d8a0c34130" translate="yes" xml:space="preserve">
          <source>ne</source>
          <target state="translated">ne</target>
        </trans-unit>
        <trans-unit id="d18e35aede3ec244b98e9d298a2f2a98351ed1ea" translate="yes" xml:space="preserve">
          <source>needs to be greater than or equal to 2; if equal to 2 then a trivial matrix-matrix product is returned. If</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c732df421369e3a2b3021395aa21b442d1dba9fe" translate="yes" xml:space="preserve">
          <source>neg</source>
          <target state="translated">neg</target>
        </trans-unit>
        <trans-unit id="5ec4af316598fd7d90fe15896e443fb941cd60bf" translate="yes" xml:space="preserve">
          <source>negative_slope</source>
          <target state="translated">negative_slope</target>
        </trans-unit>
        <trans-unit id="c2a6b03f190dfb2b4aa91f8af8d477a9bc3401dc" translate="yes" xml:space="preserve">
          <source>new</source>
          <target state="translated">new</target>
        </trans-unit>
        <trans-unit id="fa1778e1876307138fd25d7d12407a15cce62c15" translate="yes" xml:space="preserve">
          <source>new mask that combines the effects of the &lt;code&gt;default_mask&lt;/code&gt; and the new mask from the current pruning &lt;code&gt;method&lt;/code&gt; (of same dimensions as &lt;code&gt;default_mask&lt;/code&gt; and &lt;code&gt;t&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70877ec5b1c254304aa08b11aa024bab196ff116" translate="yes" xml:space="preserve">
          <source>new_empty</source>
          <target state="translated">new_empty</target>
        </trans-unit>
        <trans-unit id="82b73122940221095ea66ed7b1b470921013ab21" translate="yes" xml:space="preserve">
          <source>new_full</source>
          <target state="translated">new_full</target>
        </trans-unit>
        <trans-unit id="0fe985e7b2bb83f42c5d5f0916064f7f9f4231d2" translate="yes" xml:space="preserve">
          <source>new_zeros</source>
          <target state="translated">new_zeros</target>
        </trans-unit>
        <trans-unit id="df02b249d667a6650f02568398e6e6fbe48f659b" translate="yes" xml:space="preserve">
          <source>niter (int, optional): the number of subspace iterations to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd97f6772aaff10365ac90acf1ad39642bc88aa4" translate="yes" xml:space="preserve">
          <source>nll_loss</source>
          <target state="translated">nll_loss</target>
        </trans-unit>
        <trans-unit id="e0269e9772252826e17989ee17d7b5f5b92a5cae" translate="yes" xml:space="preserve">
          <source>nn.Module</source>
          <target state="translated">nn.Module</target>
        </trans-unit>
        <trans-unit id="2c6857d7d5eb40c54037ed8e51eda9f2e2f82a7c" translate="yes" xml:space="preserve">
          <source>no_grad</source>
          <target state="translated">no_grad</target>
        </trans-unit>
        <trans-unit id="c16214fb1f4f389021916f4837c0863a74a214c7" translate="yes" xml:space="preserve">
          <source>non-linearity to an input sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bf92c7d90f512623085e28cbd8dda952963dc39" translate="yes" xml:space="preserve">
          <source>nonlinearity</source>
          <target state="translated">nonlinearity</target>
        </trans-unit>
        <trans-unit id="350529c7dd90aed4f7c15a8c88a7901c8bb1aece" translate="yes" xml:space="preserve">
          <source>nonzero</source>
          <target state="translated">nonzero</target>
        </trans-unit>
        <trans-unit id="63e37a0d1d51b8efd953de2fcdb71ed70eedafcd" translate="yes" xml:space="preserve">
          <source>norm</source>
          <target state="translated">norm</target>
        </trans-unit>
        <trans-unit id="dbbdb522d825f6e0b0bc09e4b3dd6ce1862ddc3c" translate="yes" xml:space="preserve">
          <source>norm for matrices</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="722659deb799e10ea4ddf23ffc9fdb3c8145664a" translate="yes" xml:space="preserve">
          <source>norm for vectors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac7a029fb084f991d44db9a7ee0cfd17e62df9f1" translate="yes" xml:space="preserve">
          <source>normalization of inputs over specified dimension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="514d9f2e0acc04d77fc45ca16b43c69b19977218" translate="yes" xml:space="preserve">
          <source>normalize</source>
          <target state="translated">normalize</target>
        </trans-unit>
        <trans-unit id="591d739fab7b2a5decbc14a4629418612555d141" translate="yes" xml:space="preserve">
          <source>normalized_shape</source>
          <target state="translated">normalized_shape</target>
        </trans-unit>
        <trans-unit id="4c86d6a214f245d6e35b89aa4368ee3ad414ae4f" translate="yes" xml:space="preserve">
          <source>nuclear norm</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d729c2b9918ea5af25129d2289da048fc29ddba7" translate="yes" xml:space="preserve">
          <source>num_channels</source>
          <target state="translated">num_channels</target>
        </trans-unit>
        <trans-unit id="591ddf81a82d532ca3a5023b684fbb222806c8ac" translate="yes" xml:space="preserve">
          <source>num_directions</source>
          <target state="translated">num_directions</target>
        </trans-unit>
        <trans-unit id="6013b01dad0093aa5b6340688bb31730ea20df62" translate="yes" xml:space="preserve">
          <source>num_layers</source>
          <target state="translated">num_layers</target>
        </trans-unit>
        <trans-unit id="88ddd469059adea080da3fcbaaa4db6b6b0338c5" translate="yes" xml:space="preserve">
          <source>num_samples</source>
          <target state="translated">num_samples</target>
        </trans-unit>
        <trans-unit id="b1179e760b426b4992652146b0be692b99681a17" translate="yes" xml:space="preserve">
          <source>number of classes (including blank)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a81af3e591ac713f81ea1efe93dcf36157d8376" translate="yes" xml:space="preserve">
          <source>o</source>
          <target state="translated">o</target>
        </trans-unit>
        <trans-unit id="a497fa099f450317fe4a511e3e6ba14d4978daef" translate="yes" xml:space="preserve">
          <source>o_t</source>
          <target state="translated">o_t</target>
        </trans-unit>
        <trans-unit id="de04fa0e29f9b35e24905d2e512bedc9bb6e09e4" translate="yes" xml:space="preserve">
          <source>of</source>
          <target state="translated">of</target>
        </trans-unit>
        <trans-unit id="c5cd95075284e0e76bd2204023e932876960be07" translate="yes" xml:space="preserve">
          <source>of &lt;code&gt;a&lt;/code&gt; and the first</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c421e420676463efc057a3afebb22b7dad76a29" translate="yes" xml:space="preserve">
          <source>of size</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2263e6a77aa654ea8937e310e4e58af7cbbc1cc" translate="yes" xml:space="preserve">
          <source>of the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d41f39af7dca702b1c5e1db0deecf9e3258c09b" translate="yes" xml:space="preserve">
          <source>of the given tensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3926b39a9962c786c427df130a267b05d2f4254a" translate="yes" xml:space="preserve">
          <source>of the given tensor. The behavior is similar to python&amp;rsquo;s &lt;code&gt;itertools.combinations&lt;/code&gt; when &lt;code&gt;with_replacement&lt;/code&gt; is set to &lt;code&gt;False&lt;/code&gt;, and &lt;code&gt;itertools.combinations_with_replacement&lt;/code&gt; when &lt;code&gt;with_replacement&lt;/code&gt; is set to &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a775edb975e33f726b320803110b746585f493f0" translate="yes" xml:space="preserve">
          <source>of the previous layer multiplied by dropout</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aadb8025ad726e1bbe8dda14e26471ad6fa5f221" translate="yes" xml:space="preserve">
          <source>of the weight matrix calculated using power iteration method. If the dimension of the weight tensor is greater than 2, it is reshaped to 2D in power iteration method to get spectral norm. This is implemented via a hook that calculates spectral norm and rescales weight before every &lt;code&gt;forward()&lt;/code&gt; call.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a147d21b0235d79c5a43743be73adb75ce9f534b" translate="yes" xml:space="preserve">
          <source>one_hot</source>
          <target state="translated">one_hot</target>
        </trans-unit>
        <trans-unit id="c7d08f6c9857f5fd5b0f2e3d55954466f32fc1d3" translate="yes" xml:space="preserve">
          <source>ones</source>
          <target state="translated">ones</target>
        </trans-unit>
        <trans-unit id="5172f00b979dc48e18a1b9ce8c5bd543043a7522" translate="yes" xml:space="preserve">
          <source>ones_like</source>
          <target state="translated">ones_like</target>
        </trans-unit>
        <trans-unit id="1758356db21759f7c5a0da9b4dd1db8fd6feab3f" translate="yes" xml:space="preserve">
          <source>or</source>
          <target state="translated">or</target>
        </trans-unit>
        <trans-unit id="67a0678f114296f3dccecaa861a62858717e6e26" translate="yes" xml:space="preserve">
          <source>or &lt;code&gt;(sum(target_lengths))&lt;/code&gt;. Targets cannot be blank. In the second form, the targets are assumed to be concatenated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7b003bb1439bf5ddffbd9238d82326c12ebbe52" translate="yes" xml:space="preserve">
          <source>or a lower-triangular matrix</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efaa227d9a486e7b045cb0b6da6e9c7110e1d54f" translate="yes" xml:space="preserve">
          <source>or a positive definite precision matrix</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa30873f43da2d0dac2e32f8e64ee584a1db674b" translate="yes" xml:space="preserve">
          <source>or as a decorator on parameterized constraints:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e4187c7a61538ee424c23f1e250b73e2bd41720" translate="yes" xml:space="preserve">
          <source>or as given by &lt;code&gt;output_size&lt;/code&gt; in the call operator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5c622804d00c9194fbd10de905f721aeaef7c7a" translate="yes" xml:space="preserve">
          <source>or for batches of symmetric positive-definite matrices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11657ec4b22f0d80c4a51caca3dfc291f2fe0b9f" translate="yes" xml:space="preserve">
          <source>or in the case of the &lt;code&gt;weight&lt;/code&gt; argument being specified:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39368e12dca7c23b36b1cda458325a542f4a6a26" translate="yes" xml:space="preserve">
          <source>ord</source>
          <target state="translated">ord</target>
        </trans-unit>
        <trans-unit id="7e4a4c6a63518c67cfca884c3f2aea4a294cc963" translate="yes" xml:space="preserve">
          <source>order such that their upper left and lower right corners are diagonally adjacent. All other elements are set to 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cdd54cb9c0611b044de5e9adf6542d73bb839ae" translate="yes" xml:space="preserve">
          <source>orthonormal columns.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0941e68da8f38151ff86a61fc59f7c5cf9fcaa2" translate="yes" xml:space="preserve">
          <source>other</source>
          <target state="translated">other</target>
        </trans-unit>
        <trans-unit id="80427506b996b7ac75d5fd7357a3cd34d2484c66" translate="yes" xml:space="preserve">
          <source>otherwise</source>
          <target state="translated">otherwise</target>
        </trans-unit>
        <trans-unit id="e91ae44094e83f7449d28be33ff71baa8a7600e7" translate="yes" xml:space="preserve">
          <source>otherwise.</source>
          <target state="translated">otherwise.</target>
        </trans-unit>
        <trans-unit id="f4800df8d1bc61fc95220645938cd65532a64067" translate="yes" xml:space="preserve">
          <source>out</source>
          <target state="translated">out</target>
        </trans-unit>
        <trans-unit id="7fc427be893f84c4ff2bd730e08bc0b3cb3a66b9" translate="yes" xml:space="preserve">
          <source>out = \beta\ \text{input} + \alpha\ (\sum_{i=0}^{b-1} \text{batch1}_i \mathbin{@} \text{batch2}_i)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f2de5db4641c777453c92621a24b00808b66da6" translate="yes" xml:space="preserve">
          <source>out(N_i, C_j, h, w) = \frac{1}{kH * kW} \sum_{m=0}^{kH-1} \sum_{n=0}^{kW-1} input(N_i, C_j, stride[0] \times h + m, stride[1] \times w + n)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2037ec60be2f58cfdf14b3f8a871dca9111f38c" translate="yes" xml:space="preserve">
          <source>out(N_i, C_j, k) = \max_{m=0, \ldots, \text{kernel\_size} - 1} input(N_i, C_j, stride \times k + m)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb0ebd9c6a6715318ba5ca37bd8c265c720c7e88" translate="yes" xml:space="preserve">
          <source>out(N_i, C_{out_j}) = bias(C_{out_j}) + \sum_{k = 0}^{C_{in} - 1} weight(C_{out_j}, k) \star input(N_i, k)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="337bde7ac38dbcd4c89c820ec7f800a5711953b5" translate="yes" xml:space="preserve">
          <source>out_channels</source>
          <target state="translated">out_channels</target>
        </trans-unit>
        <trans-unit id="2cb21e4f58b98e5b412ad7cd1e02badaa229f134" translate="yes" xml:space="preserve">
          <source>out_features</source>
          <target state="translated">out_features</target>
        </trans-unit>
        <trans-unit id="62838dd22249963ac92afde5d1fb8949b1f9f99e" translate="yes" xml:space="preserve">
          <source>out_i = I_0 \left( \beta \sqrt{1 - \left( {\frac{i - N/2}{N/2}} \right) ^2 } \right) / I_0( \beta )</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d7a8e6bf59aaa2dec12f1dbd1ebd6673a0e9089" translate="yes" xml:space="preserve">
          <source>output (&lt;a href=&quot;../tensors#torch.Tensor&quot;&gt;Tensor&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f2b0f832c41563d6eeb5e506fcb1fa52d22a569" translate="yes" xml:space="preserve">
          <source>output (&lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#tuple&quot;&gt;tuple&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d507e3178158a1bcd3fb14932af2fb7248a2f123" translate="yes" xml:space="preserve">
          <source>output (&lt;a href=&quot;tensors#torch.Tensor&quot;&gt;Tensor&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="065fae9ac517e98e7084e042ce6ead04d93456f5" translate="yes" xml:space="preserve">
          <source>output (Tensor or tuple of Tensors)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d49b261a4812b5766ab18ee4be9980c57bfa87c8" translate="yes" xml:space="preserve">
          <source>output Tensor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fdc443325e994c61d1fdffa28bebfba06f71b77" translate="yes" xml:space="preserve">
          <source>output Tensor of size (</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f61e8e2b36475494af0aaa457deb5c4ced1c792" translate="yes" xml:space="preserve">
          <source>output1:</source>
          <target state="translated">output1:</target>
        </trans-unit>
        <trans-unit id="f772033e4063df709839d5c01eeeb721c9070c94" translate="yes" xml:space="preserve">
          <source>output2: &lt;code&gt;Scalar&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27806062493e422e06f1adc0af3df9590689c118" translate="yes" xml:space="preserve">
          <source>output:</source>
          <target state="translated">output:</target>
        </trans-unit>
        <trans-unit id="9ee59305a94337b1ba33dd808f7cecaea462c309" translate="yes" xml:space="preserve">
          <source>output_padding</source>
          <target state="translated">output_padding</target>
        </trans-unit>
        <trans-unit id="785074e3867b983abd71a72e8765c70d95341502" translate="yes" xml:space="preserve">
          <source>output_size</source>
          <target state="translated">output_size</target>
        </trans-unit>
        <trans-unit id="516b9783fca517eecbd1d064da2d165310b19759" translate="yes" xml:space="preserve">
          <source>p</source>
          <target state="translated">p</target>
        </trans-unit>
        <trans-unit id="6602b084fb4ea9979ed735705928d14ea4640fdc" translate="yes" xml:space="preserve">
          <source>p = 0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="040778a57c939f12d614f9ca65c3ccfe9091256a" translate="yes" xml:space="preserve">
          <source>p = \infty</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea3643505f36de097e0cb94187d4b4b4f96ee83c" translate="yes" xml:space="preserve">
          <source>p \in (0, \infty)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddd2508fa781fca10e5ec48bf1db72a6ce741d6d" translate="yes" xml:space="preserve">
          <source>p(a|\pi^\theta(s))</source>
          <target state="translated">p(a|\pi^\theta(s))</target>
        </trans-unit>
        <trans-unit id="9a75a54332dd4176a17df9a25bf63099d596d55b" translate="yes" xml:space="preserve">
          <source>p_c</source>
          <target state="translated">p_c</target>
        </trans-unit>
        <trans-unit id="ad58a7a4f8d4d8760f8f61837616f4a401195e99" translate="yes" xml:space="preserve">
          <source>p_c &amp;gt; 1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b43f28fa0ae40b8d4e5580b784d2d0ea3f47b58" translate="yes" xml:space="preserve">
          <source>p_c &amp;lt; 1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4543b0a2c60febf3f762b5facda2151187aad53f" translate="yes" xml:space="preserve">
          <source>p_tensor[i]</source>
          <target state="translated">p_tensor[i]</target>
        </trans-unit>
        <trans-unit id="ebe6da41bbc90c8e4fbfd13cd3e3611c0b096562" translate="yes" xml:space="preserve">
          <source>p_{1} \times p_{N + 1}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="266f11562bb38c8ec3658aceb8f54ab3d54bfb30" translate="yes" xml:space="preserve">
          <source>p_{F}(x; \theta) = \exp(\langle t(x), \theta\rangle - F(\theta) + k(x))</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7af00d08a52c4c819d0e5c231dd32376f3edabc" translate="yes" xml:space="preserve">
          <source>p_{i} \times p_{i + 1}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51da2df9f47e0219a2f38d7fdbfec27d535ed3b2" translate="yes" xml:space="preserve">
          <source>pad</source>
          <target state="translated">pad</target>
        </trans-unit>
        <trans-unit id="dd4355d9d6a2995312181255c8360adb304d044d" translate="yes" xml:space="preserve">
          <source>padding</source>
          <target state="translated">padding</target>
        </trans-unit>
        <trans-unit id="5bc0bb5794e060a022b125129c7c1daa9f81bd3d" translate="yes" xml:space="preserve">
          <source>padding[0]</source>
          <target state="translated">padding[0]</target>
        </trans-unit>
        <trans-unit id="134658e43dce3a3b257b609019c5cf77211a445e" translate="yes" xml:space="preserve">
          <source>padding[1]</source>
          <target state="translated">padding[1]</target>
        </trans-unit>
        <trans-unit id="69b21a4044caecc1bcc40f355114ec44cc55bbdd" translate="yes" xml:space="preserve">
          <source>padding[2]</source>
          <target state="translated">padding[2]</target>
        </trans-unit>
        <trans-unit id="8fe0a7399c476fe2f8ce1f2551a07dc125277f72" translate="yes" xml:space="preserve">
          <source>padding_back</source>
          <target state="translated">padding_back</target>
        </trans-unit>
        <trans-unit id="30788b3116ef8c0f3d6db92e3439adce357ab2a1" translate="yes" xml:space="preserve">
          <source>padding_bottom</source>
          <target state="translated">padding_bottom</target>
        </trans-unit>
        <trans-unit id="c83043886e10cf25a2e8593521b9588fdbcd596d" translate="yes" xml:space="preserve">
          <source>padding_front</source>
          <target state="translated">padding_front</target>
        </trans-unit>
        <trans-unit id="a4fd51de1ab5e476033aaf5b99bf379065882584" translate="yes" xml:space="preserve">
          <source>padding_left</source>
          <target state="translated">padding_left</target>
        </trans-unit>
        <trans-unit id="7794840bc5798b366e6ba07769f7942c4d99e1e9" translate="yes" xml:space="preserve">
          <source>padding_right</source>
          <target state="translated">padding_right</target>
        </trans-unit>
        <trans-unit id="88db1dcbb463d15a09a80337c992140a737eae65" translate="yes" xml:space="preserve">
          <source>padding_top</source>
          <target state="translated">padding_top</target>
        </trans-unit>
        <trans-unit id="556ecb6644f08a1fda9a4217eb7a95b0d2bc55e6" translate="yes" xml:space="preserve">
          <source>pairwise_distance</source>
          <target state="translated">pairwise_distance</target>
        </trans-unit>
        <trans-unit id="9f4f31c035edf0bbe1ca733ccb5ed4ad4955c28d" translate="yes" xml:space="preserve">
          <source>param_groups - a dict containing all parameter groups</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5b6a92deb69386faf58ed08246328a14b25c9fa" translate="yes" xml:space="preserve">
          <source>pdist</source>
          <target state="translated">pdist</target>
        </trans-unit>
        <trans-unit id="5a981ed1076f37f74f44b5e0f58a699a060e4767" translate="yes" xml:space="preserve">
          <source>per_sample_weights (Tensor, optional): a tensor of float / double weights, or None</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4faea3136b2713888ff385089f9267a57922075" translate="yes" xml:space="preserve">
          <source>permute</source>
          <target state="translated">permute</target>
        </trans-unit>
        <trans-unit id="578cb64baaecdefc2483317afc41705740e5c90b" translate="yes" xml:space="preserve">
          <source>pixel_shuffle</source>
          <target state="translated">pixel_shuffle</target>
        </trans-unit>
        <trans-unit id="735b25a43f705cc6b7b961c12da9ddd5f1652539" translate="yes" xml:space="preserve">
          <source>poisson_nll_loss</source>
          <target state="translated">poisson_nll_loss</target>
        </trans-unit>
        <trans-unit id="d53bec2dee0c0eeac4f10dd55b03985f300abd61" translate="yes" xml:space="preserve">
          <source>positive examples.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c489d619caf333fd1dc1b5746f8a9b6af996204" translate="yes" xml:space="preserve">
          <source>pow</source>
          <target state="translated">pow</target>
        </trans-unit>
        <trans-unit id="e4f311775a21a2ce6c08d542ef07d16e235f1ef1" translate="yes" xml:space="preserve">
          <source>precision may be lost if the magnitudes of the elements of &lt;code&gt;input&lt;/code&gt; are large</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62bbccede7613a5fbe89a59c3367a7bd82d805a9" translate="yes" xml:space="preserve">
          <source>prelu</source>
          <target state="translated">prelu</target>
        </trans-unit>
        <trans-unit id="eec47717bff78d9e7d84c9065a91b2bd5a9f50ac" translate="yes" xml:space="preserve">
          <source>prelu (single weight shared among input channels not supported)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7027bf5089d14ae6dc549c0018aef1c31acd4a20" translate="yes" xml:space="preserve">
          <source>probability value given in &lt;code&gt;input&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6c433acac2a27cc06a0625896fe3e540a275ac9" translate="yes" xml:space="preserve">
          <source>prod</source>
          <target state="translated">prod</target>
        </trans-unit>
        <trans-unit id="119807cb0fa4a2b19fc3eb72fcd5a017f2ee5f5b" translate="yes" xml:space="preserve">
          <source>pruned version of tensor &lt;code&gt;t&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46314c48304d5a440b941aae7007ca72d241c60c" translate="yes" xml:space="preserve">
          <source>pruned version of the input tensor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dac4ced94512076126b9ec39c72e2a28baff3f5d" translate="yes" xml:space="preserve">
          <source>pruned_tensor (&lt;a href=&quot;../tensors#torch.Tensor&quot;&gt;torch.Tensor&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22ea1c649c82946aa6e479e1ffd321e4a318b1b0" translate="yes" xml:space="preserve">
          <source>q</source>
          <target state="translated">q</target>
        </trans-unit>
        <trans-unit id="d9b48c3f979f6028479fb7b9dea3762f72ac3903" translate="yes" xml:space="preserve">
          <source>q (int, optional): a slightly overestimated rank of A.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72bd8c40460e4cea63418032db03184266f9443f" translate="yes" xml:space="preserve">
          <source>q(6)</source>
          <target state="translated">q(6)</target>
        </trans-unit>
        <trans-unit id="1529fb1f657501e0913fe0ca61249536310a24f0" translate="yes" xml:space="preserve">
          <source>query:</source>
          <target state="translated">query:</target>
        </trans-unit>
        <trans-unit id="4dc7c9ec434ed06502767136789763ec11d2c4b7" translate="yes" xml:space="preserve">
          <source>r</source>
          <target state="translated">r</target>
        </trans-unit>
        <trans-unit id="f97921dfc363be75db93f14dbc629fac387b5647" translate="yes" xml:space="preserve">
          <source>r_t</source>
          <target state="translated">r_t</target>
        </trans-unit>
        <trans-unit id="9f81efa250c564c22abb3a266a9427f5ed034e64" translate="yes" xml:space="preserve">
          <source>r_{i_0,...,i_{m-d}, i_d,...,i_n} = \sum_{k_0,...,k_{d-1}} a_{i_0,...,i_{m-d},k_0,...,k_{d-1}} \times b_{k_0,...,k_{d-1}, i_d,...,i_n}.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="524005606ce5a9dca230b8d334e82c37526bd9a5" translate="yes" xml:space="preserve">
          <source>rand</source>
          <target state="translated">rand</target>
        </trans-unit>
        <trans-unit id="73e283f9cf805a0e97d015d3295804fd51dfd254" translate="yes" xml:space="preserve">
          <source>randn</source>
          <target state="translated">randn</target>
        </trans-unit>
        <trans-unit id="87d7a0c261dd3a1f4814d66720fe669183056656" translate="yes" xml:space="preserve">
          <source>randn_like</source>
          <target state="translated">randn_like</target>
        </trans-unit>
        <trans-unit id="1dce71ca26340b781d172a09cc6c48f98a58c7bc" translate="yes" xml:space="preserve">
          <source>reciprocal</source>
          <target state="translated">reciprocal</target>
        </trans-unit>
        <trans-unit id="3b3cea7ab5b6598258360321d292b1bdd68e0c3c" translate="yes" xml:space="preserve">
          <source>recv</source>
          <target state="translated">recv</target>
        </trans-unit>
        <trans-unit id="48c3689f6dd5e9e952f925b7ebebf64d7c43fc56" translate="yes" xml:space="preserve">
          <source>reduce</source>
          <target state="translated">reduce</target>
        </trans-unit>
        <trans-unit id="7853c46fa66b8c54fdaac7997f17652f36f69702" translate="yes" xml:space="preserve">
          <source>reduce=None, reduction=&amp;rsquo;mean&amp;rsquo;) -&amp;gt; Tensor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf4f4da1db5cde0fad2fa6d80a1db29f94e549b0" translate="yes" xml:space="preserve">
          <source>reduce_scatter</source>
          <target state="translated">reduce_scatter</target>
        </trans-unit>
        <trans-unit id="156f7dea013dd11ca14224775377c39c66dd7578" translate="yes" xml:space="preserve">
          <source>reflection_pad</source>
          <target state="translated">reflection_pad</target>
        </trans-unit>
        <trans-unit id="6ae7ef96fa3ce4f3c38c0c7502b2cf5f5784ca91" translate="yes" xml:space="preserve">
          <source>regions by a stochastic step size determined by the target output size. The number of output features is equal to the number of input planes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef644877d20a5fb0ce817ede24e2e132dc83af3d" translate="yes" xml:space="preserve">
          <source>regions by step size</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="223364cb0e345ea96b10a7e48be1f58dfb9eb072" translate="yes" xml:space="preserve">
          <source>relu</source>
          <target state="translated">relu</target>
        </trans-unit>
        <trans-unit id="bc3e41042fc77243551f6d03ea6b362f3a53a6d9" translate="yes" xml:space="preserve">
          <source>relu6</source>
          <target state="translated">relu6</target>
        </trans-unit>
        <trans-unit id="c0ac4842418e34583859262c033965cfd49454e0" translate="yes" xml:space="preserve">
          <source>repeat</source>
          <target state="translated">repeat</target>
        </trans-unit>
        <trans-unit id="0191a218b0a092950e612c401498e99e66cb3bc8" translate="yes" xml:space="preserve">
          <source>replication_pad</source>
          <target state="translated">replication_pad</target>
        </trans-unit>
        <trans-unit id="bcd3f983e433bcb564c2168a8bcab9a55f7eb041" translate="yes" xml:space="preserve">
          <source>represent arbitrary spatial dimensions. This operation flattens each sliding &lt;code&gt;kernel_size&lt;/code&gt;-sized block within the spatial dimensions of &lt;code&gt;input&lt;/code&gt; into a column (i.e., last dimension) of a 3-D &lt;code&gt;output&lt;/code&gt; tensor of shape</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ce95147f7a3ccb6f09fa05d224ec2433e1a2a14" translate="yes" xml:space="preserve">
          <source>represents any number of additional dimensions as supported by the distance function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2e7e0502243a5122c266a511d6cb020bd9b26d8" translate="yes" xml:space="preserve">
          <source>reshape</source>
          <target state="translated">reshape</target>
        </trans-unit>
        <trans-unit id="6bace260a54a2517ee433492343e830d3264b2ab" translate="yes" xml:space="preserve">
          <source>reshape_as</source>
          <target state="translated">reshape_as</target>
        </trans-unit>
        <trans-unit id="4680cad3c1a29b7083c5adaa4db79da78e4162f8" translate="yes" xml:space="preserve">
          <source>resolution</source>
          <target state="translated">resolution</target>
        </trans-unit>
        <trans-unit id="d37954da2396bcb09f826aa3647a6bcee3a9638d" translate="yes" xml:space="preserve">
          <source>respectively, where</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e13527e2c444bf4575f2c473dce8a53a4619b56" translate="yes" xml:space="preserve">
          <source>respectively. &lt;code&gt;some&lt;/code&gt; will be ignored here.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1ff54944416843c7018084fca48a1102d56a95a" translate="yes" xml:space="preserve">
          <source>result of the dot product with the same shape as the inputs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b1330522707cce32fa97a2bc9b95b6ebf770f45" translate="yes" xml:space="preserve">
          <source>result of the dot product with the same shape as the output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a3fbfe0e01bcea6cef5365e3ab70a1fd87d3292" translate="yes" xml:space="preserve">
          <source>result[i]</source>
          <target state="translated">result[i]</target>
        </trans-unit>
        <trans-unit id="f0590a6dd3663be108ff31f58d16b829a1284be6" translate="yes" xml:space="preserve">
          <source>round</source>
          <target state="translated">round</target>
        </trans-unit>
        <trans-unit id="a247bd693185bd2372f9acccf0aa55956fa112ca" translate="yes" xml:space="preserve">
          <source>rows of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c7d0ab561d6b3fecd1d0dbb8ac3a7a1d85cd186" translate="yes" xml:space="preserve">
          <source>rows of that column.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a061d2b968e7adeeaea550b3dc02aea9aaa5085" translate="yes" xml:space="preserve">
          <source>rrelu</source>
          <target state="translated">rrelu</target>
        </trans-unit>
        <trans-unit id="088a6a5355a540dedbb1bfa4b2587df63abf09a0" translate="yes" xml:space="preserve">
          <source>rsqrt</source>
          <target state="translated">rsqrt</target>
        </trans-unit>
        <trans-unit id="acf7d049be93423c325c4ffcfe2760789e265d90" translate="yes" xml:space="preserve">
          <source>rsub</source>
          <target state="translated">rsub</target>
        </trans-unit>
        <trans-unit id="f0451c6d33ece2ca9e7238066bd51cd94a37e5fb" translate="yes" xml:space="preserve">
          <source>rtol</source>
          <target state="translated">rtol</target>
        </trans-unit>
        <trans-unit id="a0f1490a20d0211c997b44bc357e1972deab8ae3" translate="yes" xml:space="preserve">
          <source>s</source>
          <target state="translated">s</target>
        </trans-unit>
        <trans-unit id="ecda5eecde4ae0c00d4ba84a481584e86789f26f" translate="yes" xml:space="preserve">
          <source>s)</source>
          <target state="translated">s)</target>
        </trans-unit>
        <trans-unit id="b18e7a2079b5907888555c2ef5b17619bf433b65" translate="yes" xml:space="preserve">
          <source>sH \times sW</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c912a488378bd44b7e20ae784b32cecd15ecf7e5" translate="yes" xml:space="preserve">
          <source>sT \times sH \times sW</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38b1f4c4fc09d7e4369411352f6a56b49270c54f" translate="yes" xml:space="preserve">
          <source>s_n</source>
          <target state="translated">s_n</target>
        </trans-unit>
        <trans-unit id="62acd96977013d6badd9478efa8b090b6a51c51f" translate="yes" xml:space="preserve">
          <source>scalar_tensor</source>
          <target state="translated">scalar_tensor</target>
        </trans-unit>
        <trans-unit id="60020d1b19707b587574a1c80412af51ea9e12b3" translate="yes" xml:space="preserve">
          <source>scale</source>
          <target state="translated">scale</target>
        </trans-unit>
        <trans-unit id="83bf8bfb0a2a1cd5d2dc529948e5c77992f09436" translate="yes" xml:space="preserve">
          <source>scale=1.0507009873554804934193349852946</source>
          <target state="translated">scale=1.0507009873554804934193349852946</target>
        </trans-unit>
        <trans-unit id="e790cf8376a0ac7391dd3e0ec38c12e026533982" translate="yes" xml:space="preserve">
          <source>scale_factor</source>
          <target state="translated">scale_factor</target>
        </trans-unit>
        <trans-unit id="3bf7e63ecf2211c9deaa81dd73aa06715d55d873" translate="yes" xml:space="preserve">
          <source>scatter</source>
          <target state="translated">scatter</target>
        </trans-unit>
        <trans-unit id="e70658f61bb8732bd94b92df0ed0f8c117fdee62" translate="yes" xml:space="preserve">
          <source>scatter_add</source>
          <target state="translated">scatter_add</target>
        </trans-unit>
        <trans-unit id="33dbcf9aba07c96aa5ac276855c023584b811b89" translate="yes" xml:space="preserve">
          <source>scores (&lt;code&gt;Tensor[N]&lt;/code&gt;): the scores or each prediction</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66bef81d6368f9cb3bb2eb409f383b3e8fb822dd" translate="yes" xml:space="preserve">
          <source>see &lt;a href=&quot;generated/torch.flatten#torch.flatten&quot;&gt;&lt;code&gt;torch.flatten()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e560d24764971ebe0b7d36c86f27f6ee098a8e1" translate="yes" xml:space="preserve">
          <source>see the docs in Transformer class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81448fe273247b533b9f018e96c158cab7901247" translate="yes" xml:space="preserve">
          <source>select</source>
          <target state="translated">select</target>
        </trans-unit>
        <trans-unit id="40380bc1d358a6f8665b37bbdc8c7ccc6c38a861" translate="yes" xml:space="preserve">
          <source>self</source>
          <target state="translated">self</target>
        </trans-unit>
        <trans-unit id="b1a33f9551b1d55d70b07c261fc1d9f2228aac7b" translate="yes" xml:space="preserve">
          <source>self[i]</source>
          <target state="translated">self[i]</target>
        </trans-unit>
        <trans-unit id="ccfe97359e48fa1ba8bcebc2edde2bb34597b130" translate="yes" xml:space="preserve">
          <source>selu</source>
          <target state="translated">selu</target>
        </trans-unit>
        <trans-unit id="37ed539c0cef13959abd980bebf30f4922f606e3" translate="yes" xml:space="preserve">
          <source>send</source>
          <target state="translated">send</target>
        </trans-unit>
        <trans-unit id="7cf645cd94a76f4538e57cc84de860088c3111b1" translate="yes" xml:space="preserve">
          <source>serialization (&lt;a href=&quot;generated/torch.load#torch.load&quot;&gt;&lt;code&gt;torch.load()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;generated/torch.save#torch.save&quot;&gt;&lt;code&gt;torch.save()&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08bed0a8fd03f68eda93a2e2782a5b758b6a7b01" translate="yes" xml:space="preserve">
          <source>set_grad_enabled</source>
          <target state="translated">set_grad_enabled</target>
        </trans-unit>
        <trans-unit id="9df50c805f677c508e43332854b08b28684fc8a9" translate="yes" xml:space="preserve">
          <source>sgn</source>
          <target state="translated">sgn</target>
        </trans-unit>
        <trans-unit id="9c00d582e1588d3972573399daeb863ae43b8c0c" translate="yes" xml:space="preserve">
          <source>should be divisible by the number of groups. Default: 1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd703fe5efb7d34d9c698f631386f087087b9c07" translate="yes" xml:space="preserve">
          <source>should be numbers between 0 and 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb731b4b62b0ca40dbdeebb06d5a47f8c8c2dd62" translate="yes" xml:space="preserve">
          <source>should be transposed before being sent into the solver. Default: &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8e7e7e1dc6eb2b01cc9f4dd5b600659b15acaa8" translate="yes" xml:space="preserve">
          <source>sigmoid</source>
          <target state="translated">sigmoid</target>
        </trans-unit>
        <trans-unit id="81e9209e64bdd3a52fa01ece075eaa947db8fc49" translate="yes" xml:space="preserve">
          <source>sign</source>
          <target state="translated">sign</target>
        </trans-unit>
        <trans-unit id="f9d94b8d1ee59c26fa73464cb170d98afd1fe5b9" translate="yes" xml:space="preserve">
          <source>silu</source>
          <target state="translated">silu</target>
        </trans-unit>
        <trans-unit id="3941da996c7bba128c897763b18b5a2db21d2a9f" translate="yes" xml:space="preserve">
          <source>similarity</source>
          <target state="translated">similarity</target>
        </trans-unit>
        <trans-unit id="7d14c04a713a160cb60e929cea38887511c6bbc4" translate="yes" xml:space="preserve">
          <source>sin</source>
          <target state="translated">sin</target>
        </trans-unit>
        <trans-unit id="688cfd5ead85788c8aadc47c592b985a6022dc06" translate="yes" xml:space="preserve">
          <source>sinh</source>
          <target state="translated">sinh</target>
        </trans-unit>
        <trans-unit id="89368e1d68015693ab48ee189d0632cb5d6edfb3" translate="yes" xml:space="preserve">
          <source>size</source>
          <target state="translated">size</target>
        </trans-unit>
        <trans-unit id="0a5228e66df38e2f27ca61b901edf86f7ef97fb8" translate="yes" xml:space="preserve">
          <source>slice</source>
          <target state="translated">slice</target>
        </trans-unit>
        <trans-unit id="fcf58169456a6f2708f5d2500a398408530153a4" translate="yes" xml:space="preserve">
          <source>smallest singular value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0da4cc04f7759e9188fe635e886bb465b73e7cb0" translate="yes" xml:space="preserve">
          <source>smooth_l1_loss</source>
          <target state="translated">smooth_l1_loss</target>
        </trans-unit>
        <trans-unit id="c7b5699a9ade9c0141b8b556708f765e5ac7d672" translate="yes" xml:space="preserve">
          <source>snd_tensor:</source>
          <target state="translated">snd_tensor:</target>
        </trans-unit>
        <trans-unit id="98cf614106ae4e9d4fe1e9a94651c02dcd16b464" translate="yes" xml:space="preserve">
          <source>so that the operator is unitary, where</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="993a760d053ffed06d81e9fa36e498b3f97790af" translate="yes" xml:space="preserve">
          <source>so that the operator is unitary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82418153cf864e7e7de4a34a319d768e41172765" translate="yes" xml:space="preserve">
          <source>soft_margin_loss</source>
          <target state="translated">soft_margin_loss</target>
        </trans-unit>
        <trans-unit id="2e5560100dfa63a210d2c111b343e54cbd1c7efb" translate="yes" xml:space="preserve">
          <source>softmax</source>
          <target state="translated">softmax</target>
        </trans-unit>
        <trans-unit id="51dea3195bdc73f93ee2ede7e6b5ec988cbb0042" translate="yes" xml:space="preserve">
          <source>softmin</source>
          <target state="translated">softmin</target>
        </trans-unit>
        <trans-unit id="26f3e530930f07851c6c04e8b482e9c16be0b32e" translate="yes" xml:space="preserve">
          <source>softplus</source>
          <target state="translated">softplus</target>
        </trans-unit>
        <trans-unit id="55dbdc9f0aad795d16cfa8b07a6a39d1c920c1f3" translate="yes" xml:space="preserve">
          <source>softshrink</source>
          <target state="translated">softshrink</target>
        </trans-unit>
        <trans-unit id="3fb659d4e13d21cb35b14f1f676e109b4be3bddc" translate="yes" xml:space="preserve">
          <source>softsign</source>
          <target state="translated">softsign</target>
        </trans-unit>
        <trans-unit id="98c4b8f6e2d770a0f2b54233669d65ff6eddc472" translate="yes" xml:space="preserve">
          <source>sort</source>
          <target state="translated">sort</target>
        </trans-unit>
        <trans-unit id="59905e78a45a9bd77a7c05d8a185ffea2bacf581" translate="yes" xml:space="preserve">
          <source>spans all dimensions of &lt;code&gt;input&lt;/code&gt; and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89fbe385f98339b412c6fb298226e96ec671e454" translate="yes" xml:space="preserve">
          <source>sparse_dim + dense_dim = len(SparseTensor.shape)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fef23e3515b0c0cd44c637ad3268dddd72791b3d" translate="yes" xml:space="preserve">
          <source>spatial locations each containing a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcc44bdbe9ea936ac9eae9d23bae10e7a0a3781e" translate="yes" xml:space="preserve">
          <source>spatial_size</source>
          <target state="translated">spatial_size</target>
        </trans-unit>
        <trans-unit id="94d5cab6f5fe3422a447ab15436e7a672bc0c09a" translate="yes" xml:space="preserve">
          <source>split</source>
          <target state="translated">split</target>
        </trans-unit>
        <trans-unit id="72f3153cdbbfbaaca9285b4d7d97df1c90194172" translate="yes" xml:space="preserve">
          <source>sqrt</source>
          <target state="translated">sqrt</target>
        </trans-unit>
        <trans-unit id="a1259b421aa7044914301832f5d46d49550ff843" translate="yes" xml:space="preserve">
          <source>squeeze</source>
          <target state="translated">squeeze</target>
        </trans-unit>
        <trans-unit id="7b0a5f40f71f72821fc1f14a3d6492676b156a47" translate="yes" xml:space="preserve">
          <source>src:</source>
          <target state="translated">src:</target>
        </trans-unit>
        <trans-unit id="713d260d14786b4785df24a9615736b25973aa5b" translate="yes" xml:space="preserve">
          <source>src_key_padding_mask:</source>
          <target state="translated">src_key_padding_mask:</target>
        </trans-unit>
        <trans-unit id="c5c3b2711c54eb934969dbff40bd8d722e9f5406" translate="yes" xml:space="preserve">
          <source>src_mask:</source>
          <target state="translated">src_mask:</target>
        </trans-unit>
        <trans-unit id="b26dc72d261a92c1cfd1e643717e450a84cf2122" translate="yes" xml:space="preserve">
          <source>stack</source>
          <target state="translated">stack</target>
        </trans-unit>
        <trans-unit id="2b020927d3c6eb407223a1baa3d6ce3597a3f88d" translate="yes" xml:space="preserve">
          <source>start</source>
          <target state="translated">start</target>
        </trans-unit>
        <trans-unit id="43438594e0441b591e7f04ea93694cb413221040" translate="yes" xml:space="preserve">
          <source>state - a dict holding current optimization state. Its content</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55ec981f0a6054d4ad0c3fec7f32b1086f7d24f4" translate="yes" xml:space="preserve">
          <source>std</source>
          <target state="translated">std</target>
        </trans-unit>
        <trans-unit id="bd370d1b6f9b3580a77083b3ed3256c621f44a99" translate="yes" xml:space="preserve">
          <source>step</source>
          <target state="translated">step</target>
        </trans-unit>
        <trans-unit id="6578912eabc4ebb2adc8227a6f64b4aff57456fa" translate="yes" xml:space="preserve">
          <source>steps</source>
          <target state="translated">steps</target>
        </trans-unit>
        <trans-unit id="fb42ab3efc41677d3c936336610bfb2adfb96e46" translate="yes" xml:space="preserve">
          <source>steps. The number of output features is equal to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9fa87cbf0bd484558cf386ec624072742d5aed7" translate="yes" xml:space="preserve">
          <source>steps. The number of output features is equal to the number of input planes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dc89f85b619068818f6ffc8b793a74773a52f83" translate="yes" xml:space="preserve">
          <source>stride</source>
          <target state="translated">stride</target>
        </trans-unit>
        <trans-unit id="309b2f23e589788d071dcdb42e02621a824ea0fa" translate="yes" xml:space="preserve">
          <source>stride[0]</source>
          <target state="translated">stride[0]</target>
        </trans-unit>
        <trans-unit id="a2f00277cbd026e5758561a9cf4ffdbce8039485" translate="yes" xml:space="preserve">
          <source>stride[1]</source>
          <target state="translated">stride[1]</target>
        </trans-unit>
        <trans-unit id="f194666e27d6255bbca6c34cf72f2dd40eb79384" translate="yes" xml:space="preserve">
          <source>stride[2]</source>
          <target state="translated">stride[2]</target>
        </trans-unit>
        <trans-unit id="224635895682e09b8604afdc143ba5afa5a84e54" translate="yes" xml:space="preserve">
          <source>sub (nonzero alpha not supported)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca71e4b795769067a248b708dee0be55b5db6715" translate="yes" xml:space="preserve">
          <source>subject to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdca81ff0033bd52e01e0c38528c9264aeefc4ea" translate="yes" xml:space="preserve">
          <source>such that</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7372fe2e2b8915f422760b0bf4c77cef0e93c056" translate="yes" xml:space="preserve">
          <source>such that they&amp;rsquo;re recreated according to 1 or 2 every time, is a valid alternative to &lt;code&gt;model.zero_grad()&lt;/code&gt; or &lt;code&gt;optimizer.zero_grad()&lt;/code&gt; that may improve performance for some networks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9dff3557ded7414ae530834de7011f1388d202a" translate="yes" xml:space="preserve">
          <source>sum</source>
          <target state="translated">sum</target>
        </trans-unit>
        <trans-unit id="e673747ffe5b66e828d72320fae0a4f7f8ef3ffa" translate="yes" xml:space="preserve">
          <source>sum(abs(x)**ord)**(1./ord)</source>
          <target state="translated">sum(abs(x)**ord)**(1./ord)</target>
        </trans-unit>
        <trans-unit id="22fd9fffa5f75a2c95eea2b939edd0c242e2b28f" translate="yes" xml:space="preserve">
          <source>sum(x != 0)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02becf8b750d2467b97f32992165b7d18a51747e" translate="yes" xml:space="preserve">
          <source>synchronous operation - the default mode, when &lt;code&gt;async_op&lt;/code&gt; is set to False. when the function returns, it is guaranteed that the collective operation is performed (not necessarily completed if it&amp;rsquo;s a CUDA op since all CUDA ops are asynchronous), and any further function calls depending on the data of the collective operation can be called. In the synchronous mode, the collective function does not return anything</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8efd86fb78a56a5145ed7739dcb00c78581c5375" translate="yes" xml:space="preserve">
          <source>t</source>
          <target state="translated">t</target>
        </trans-unit>
        <trans-unit id="429265d7427e6238316a46e6d15251485309c9b0" translate="yes" xml:space="preserve">
          <source>t \times \text{hop\_length}</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75a7147566fd4ba98fe5d85fe008fab6d58d3968" translate="yes" xml:space="preserve">
          <source>t(x)</source>
          <target state="translated">t(x)</target>
        </trans-unit>
        <trans-unit id="35ca8cf12ff7ebe96d1bd7602a1968f756f4af33" translate="yes" xml:space="preserve">
          <source>tan</source>
          <target state="translated">tan</target>
        </trans-unit>
        <trans-unit id="e37dc0a85458fdbc0ea7fb77366938eb01e6db4b" translate="yes" xml:space="preserve">
          <source>tanh</source>
          <target state="translated">tanh</target>
        </trans-unit>
        <trans-unit id="8cdbde7bbd6705f6a45b7304d61702c8b393be17" translate="yes" xml:space="preserve">
          <source>tanhshrink</source>
          <target state="translated">tanhshrink</target>
        </trans-unit>
        <trans-unit id="0e8a3ad980ec179856012b7eecf4327e99cd44cd" translate="yes" xml:space="preserve">
          <source>target</source>
          <target state="translated">target</target>
        </trans-unit>
        <trans-unit id="da4d131afc99d77041a093653663c4f0cac0421b" translate="yes" xml:space="preserve">
          <source>target \sim \text{Poisson}(input)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8bce9ad1f2bc285de840deb5c7d3b50a1d7efb3" translate="yes" xml:space="preserve">
          <source>target!</source>
          <target state="translated">target!</target>
        </trans-unit>
        <trans-unit id="83e75b7fd51929675fb24faf699fab05c75626a8" translate="yes" xml:space="preserve">
          <source>target:</source>
          <target state="translated">target:</target>
        </trans-unit>
        <trans-unit id="6d6545c3aa26ff6e8ca877aae6f78b19901b9505" translate="yes" xml:space="preserve">
          <source>target[i]</source>
          <target state="translated">target[i]</target>
        </trans-unit>
        <trans-unit id="07a0228ebd3bc3d80d4c85706256b5a9e9bc290b" translate="yes" xml:space="preserve">
          <source>target_lengths</source>
          <target state="translated">target_lengths</target>
        </trans-unit>
        <trans-unit id="4683e789c34cafab560170ca34013a773f2f9773" translate="yes" xml:space="preserve">
          <source>targets</source>
          <target state="translated">targets</target>
        </trans-unit>
        <trans-unit id="8263b8d5eeb6367eb8377df171462a8dc80fb862" translate="yes" xml:space="preserve">
          <source>tensor and &lt;code&gt;other&lt;/code&gt; is a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d39cd956b4b8b55bf14dd4c4a4acc45f32ad03b5" translate="yes" xml:space="preserve">
          <source>tensor and &lt;code&gt;out&lt;/code&gt; will be a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d0ad7449e98816abf1027e53235644952d3cc00" translate="yes" xml:space="preserve">
          <source>tensor containing input features where</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd2cd249257885171216cc2e9667c98b0f3ca1e5" translate="yes" xml:space="preserve">
          <source>tensor containing the initial hidden state for each element in the batch where</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2da3f62329ccc3877b84fd3b96811a22d137a6c0" translate="yes" xml:space="preserve">
          <source>tensor containing the initial hidden state for each element in the batch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c11afb1a5bca4cd50780c846b0a6aea8767adc9" translate="yes" xml:space="preserve">
          <source>tensor containing the next hidden state for each element in the batch</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="553824dd36b34b7f69ad094949a3b5436a1f97b8" translate="yes" xml:space="preserve">
          <source>tensor of eigenvalues of size</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ef5988ad4ac7995de7fa90393236a72f3b82006" translate="yes" xml:space="preserve">
          <source>tensor was of dimensions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59bc3983dc2bcd844f70354d0dfab948efdb1bef" translate="yes" xml:space="preserve">
          <source>tensor, &lt;code&gt;batch2&lt;/code&gt; is a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d625d71db7ea05b720acd099036575c4c100e89" translate="yes" xml:space="preserve">
          <source>tensor, &lt;code&gt;input&lt;/code&gt; must be &lt;a href=&quot;https://pytorch.org/docs/1.7.0/notes/broadcasting.html#broadcasting-semantics&quot;&gt;broadcastable&lt;/a&gt; with a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45f648e903f6c8135a61582d20236080013906c5" translate="yes" xml:space="preserve">
          <source>tensor, &lt;code&gt;mat2&lt;/code&gt; is a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eec3778e42d11bf95360b5cf38e1c17a39839654" translate="yes" xml:space="preserve">
          <source>tensor, &lt;code&gt;out&lt;/code&gt; will be a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c364fd029c322eadb8930b8f3c7ce9c16bc2d3d" translate="yes" xml:space="preserve">
          <source>tensor, &lt;code&gt;out&lt;/code&gt; will be an</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a3d0dc7ecb65122b92ca527e12b76abe33a1c40" translate="yes" xml:space="preserve">
          <source>tensor, &lt;code&gt;vec&lt;/code&gt; is a 1-D tensor of size</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4b2f391fc60bc4c73aba0e8db273d1994a26b25" translate="yes" xml:space="preserve">
          <source>tensor, &lt;code&gt;vec&lt;/code&gt; is a 1-D tensor of size &lt;code&gt;m&lt;/code&gt;, then &lt;code&gt;input&lt;/code&gt; must be &lt;a href=&quot;https://pytorch.org/docs/1.7.0/notes/broadcasting.html#broadcasting-semantics&quot;&gt;broadcastable&lt;/a&gt; with a 1-D tensor of size &lt;code&gt;n&lt;/code&gt; and &lt;code&gt;out&lt;/code&gt; will be 1-D tensor of size &lt;code&gt;n&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ef9cfaf6dd70877bf14d95005e97a99a57565a2" translate="yes" xml:space="preserve">
          <source>tensor, out will be a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a566ef6bee1892794c532494bc4a572fe5d6d6c" translate="yes" xml:space="preserve">
          <source>tensor, then &lt;code&gt;input&lt;/code&gt; must be &lt;a href=&quot;https://pytorch.org/docs/1.7.0/notes/broadcasting.html#broadcasting-semantics&quot;&gt;broadcastable&lt;/a&gt; with a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbabde0757a85f7aef0313af1ff999561cee4788" translate="yes" xml:space="preserve">
          <source>tensor.</source>
          <target state="translated">tensor.</target>
        </trans-unit>
        <trans-unit id="242253224a4a7a6ecc3c491bd2a20bab5cd6ac8a" translate="yes" xml:space="preserve">
          <source>tensor. Both &lt;code&gt;alpha&lt;/code&gt; and &lt;code&gt;beta&lt;/code&gt; mean the same as the scaling factors used in &lt;a href=&quot;torch.addbmm#torch.addbmm&quot;&gt;&lt;code&gt;torch.addbmm()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2cb6e02350d6ecb6dbc484d96eecb7503e5ff3d" translate="yes" xml:space="preserve">
          <source>tensor1</source>
          <target state="translated">tensor1</target>
        </trans-unit>
        <trans-unit id="ac3138817c04ed83b929038ce5ba4dbf9c2f570a" translate="yes" xml:space="preserve">
          <source>tensor1 .* tensor2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0d45955f6fb934dca2db81e7c0434c50e6c8e94" translate="yes" xml:space="preserve">
          <source>tensor2</source>
          <target state="translated">tensor2</target>
        </trans-unit>
        <trans-unit id="a49be25b0b20988b9b9de9bc7034688fe0ea96f5" translate="yes" xml:space="preserve">
          <source>tensors of size</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daf0ca58fda174171104359fa51be41f68e7e10e" translate="yes" xml:space="preserve">
          <source>test time (s / it)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="270c89a11b5db2953ff9dfa29680a70d1110bf20" translate="yes" xml:space="preserve">
          <source>tgt:</source>
          <target state="translated">tgt:</target>
        </trans-unit>
        <trans-unit id="4d7d671e0f26da889a5aa7240c8e1ca987917ac5" translate="yes" xml:space="preserve">
          <source>tgt_key_padding_mask:</source>
          <target state="translated">tgt_key_padding_mask:</target>
        </trans-unit>
        <trans-unit id="fba35648256711118c5327e0aecbcfcadde0c679" translate="yes" xml:space="preserve">
          <source>tgt_mask:</source>
          <target state="translated">tgt_mask:</target>
        </trans-unit>
        <trans-unit id="320039a94d5f68bf295e16a60e832366bd8127b4" translate="yes" xml:space="preserve">
          <source>that satisfy the following contiguity-like condition that</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbccdf2efb33b52e6c9d0a14dd70b2d415fbea6e" translate="yes" xml:space="preserve">
          <source>the</source>
          <target state="translated">the</target>
        </trans-unit>
        <trans-unit id="c31d1e53247b220b9ba9a9cf7d04d60249351fdd" translate="yes" xml:space="preserve">
          <source>the &lt;code&gt;out&lt;/code&gt; tensor, now containing results of concatenating &lt;code&gt;tensors&lt;/code&gt; along &lt;code&gt;dim&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af4c3b9b6e2c12152e2ff580c318873cfc785978" translate="yes" xml:space="preserve">
          <source>the input length.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2c8c09c7858a8cf1a2b6e0d844c0478166a9848" translate="yes" xml:space="preserve">
          <source>the major and minor cuda capability of the device</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06a1cd62b3a1827e0417f5bb296c2cd91c8f6edb" translate="yes" xml:space="preserve">
          <source>the order of insertion, and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a11ec2ecf564c3fdad90712febb2219014ec63b0" translate="yes" xml:space="preserve">
          <source>the order of norm. Default: &lt;code&gt;'fro'&lt;/code&gt; The following norms can be calculated:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc56e691c78f276f87d03f28e56b143f0e6029c9" translate="yes" xml:space="preserve">
          <source>the return value of the the completed task</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2f7a7f825b9b25a12d3ec338cd9fab6570c02bb" translate="yes" xml:space="preserve">
          <source>then it assumed the first input should be ranked higher (have a larger value) than the second input, and vice-versa for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b96e35be55912bcca4cda0d3bdea1a21fd96f153" translate="yes" xml:space="preserve">
          <source>then normalizing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d349dacf9324e4b66d9bf6ca44bda6fe7c47ca7" translate="yes" xml:space="preserve">
          <source>then the &lt;code&gt;out&lt;/code&gt; tensor will be of shape:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1108a51a0a83b7f486924b74e0245046630b43f3" translate="yes" xml:space="preserve">
          <source>then the output will have shape</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c07c2a4aa8fc5de8d96cc2d245ab0c303e2a82e4" translate="yes" xml:space="preserve">
          <source>this will be a single Tensor containing the Hessian for the input. If it is a tuple, then the Hessian will be a tuple of tuples where &lt;code&gt;Hessian[i][j]&lt;/code&gt; will contain the Hessian of the &lt;code&gt;i&lt;/code&gt;th input and &lt;code&gt;j&lt;/code&gt;th input with size the sum of the size of the &lt;code&gt;i&lt;/code&gt;th input plus the size of the &lt;code&gt;j&lt;/code&gt;th input.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01dafae9a339175d1a66b90650d6b6d6b6214fb6" translate="yes" xml:space="preserve">
          <source>threshold</source>
          <target state="translated">threshold</target>
        </trans-unit>
        <trans-unit id="d8550532adaa8218c8f68c27610246b60612829b" translate="yes" xml:space="preserve">
          <source>threshold (non-zero threshold/non-zero value not supported)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4927dda05af693bff7dfd4c7b40eafb0ef92a78" translate="yes" xml:space="preserve">
          <source>tiny</source>
          <target state="translated">tiny</target>
        </trans-unit>
        <trans-unit id="4374aaee247fb237ce6c97d5c8d64bbe474d16de" translate="yes" xml:space="preserve">
          <source>to</source>
          <target state="translated">to</target>
        </trans-unit>
        <trans-unit id="dcfa56da85d1ba2238996f1799d9f8ce03e42076" translate="yes" xml:space="preserve">
          <source>to a tensor of shape</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89abc9176c19c529964202c7f4e10084e1745679" translate="yes" xml:space="preserve">
          <source>to indicate all weights should be taken to be &lt;code&gt;1&lt;/code&gt;. If specified, &lt;code&gt;per_sample_weights&lt;/code&gt; must have exactly the same shape as input and is treated as having the same &lt;code&gt;offsets&lt;/code&gt;, if those are not &lt;code&gt;None&lt;/code&gt;. Only supported for &lt;code&gt;mode='sum'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3aea9c5b0f7040ef92bf9c9ffad7710d47b4a21b" translate="yes" xml:space="preserve">
          <source>to learn. Although it takes an int as input, there is only two values are legitimate: 1, or the number of channels at input. Default: 1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88fb0fb9f622d041107e95d235f48cf7c8662494" translate="yes" xml:space="preserve">
          <source>to prevent overflow during calculation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1fd5d33dca7430eb778eb4e673fad63e37d9f42" translate="yes" xml:space="preserve">
          <source>topk</source>
          <target state="translated">topk</target>
        </trans-unit>
        <trans-unit id="e7de9e6263e2524557710e5df3ac5dbd8a0ca682" translate="yes" xml:space="preserve">
          <source>torch</source>
          <target state="translated">torch</target>
        </trans-unit>
        <trans-unit id="3faf1d8fbd3eee0020dc9caa659e79a64b6a797c" translate="yes" xml:space="preserve">
          <source>torch.Assert</source>
          <target state="translated">torch.Assert</target>
        </trans-unit>
        <trans-unit id="c408c28a3f3d22a6262c104646a0f8b32b8eb18b" translate="yes" xml:space="preserve">
          <source>torch.BoolTensor</source>
          <target state="translated">torch.BoolTensor</target>
        </trans-unit>
        <trans-unit id="bba994573b8a2037c6c17a24254c96889cc81aa8" translate="yes" xml:space="preserve">
          <source>torch.BoolTensor.all()</source>
          <target state="translated">torch.BoolTensor.all()</target>
        </trans-unit>
        <trans-unit id="12a893f2429a914544d2edeb01f46d4b537eb696" translate="yes" xml:space="preserve">
          <source>torch.BoolTensor.any()</source>
          <target state="translated">torch.BoolTensor.any()</target>
        </trans-unit>
        <trans-unit id="6f1fab251905f95c2cff78bc2f33e94653a1885d" translate="yes" xml:space="preserve">
          <source>torch.FloatStorage</source>
          <target state="translated">torch.FloatStorage</target>
        </trans-unit>
        <trans-unit id="b59b5f1f011f9e28043b0a7eb95a94f94659f4e4" translate="yes" xml:space="preserve">
          <source>torch.FloatStorage.bfloat16()</source>
          <target state="translated">torch.FloatStorage.bfloat16()</target>
        </trans-unit>
        <trans-unit id="faacefb7cbc249310b8069f0dd5c7b488a435777" translate="yes" xml:space="preserve">
          <source>torch.FloatStorage.bool()</source>
          <target state="translated">torch.FloatStorage.bool()</target>
        </trans-unit>
        <trans-unit id="60af125fdb94b22d3b72e31e20df577553803b51" translate="yes" xml:space="preserve">
          <source>torch.FloatStorage.byte()</source>
          <target state="translated">torch.FloatStorage.byte()</target>
        </trans-unit>
        <trans-unit id="4917cd7bff405088a24a33298ea641af29821f59" translate="yes" xml:space="preserve">
          <source>torch.FloatStorage.char()</source>
          <target state="translated">torch.FloatStorage.char()</target>
        </trans-unit>
        <trans-unit id="25bde1db4d8e3018c3608307b64ad7aa6379cdfb" translate="yes" xml:space="preserve">
          <source>torch.FloatStorage.clone()</source>
          <target state="translated">torch.FloatStorage.clone()</target>
        </trans-unit>
        <trans-unit id="d1f7a09f4c3ff9cd53d0800470ab0860d373a422" translate="yes" xml:space="preserve">
          <source>torch.FloatStorage.complex_double()</source>
          <target state="translated">torch.FloatStorage.complex_double()</target>
        </trans-unit>
        <trans-unit id="7ac07b9409b83b86c74d2f5f4c4cfb398ca440e5" translate="yes" xml:space="preserve">
          <source>torch.FloatStorage.complex_float()</source>
          <target state="translated">torch.FloatStorage.complex_float()</target>
        </trans-unit>
        <trans-unit id="dcbf0b6ca5df3bb16264e6fbc4228b4aa555ea61" translate="yes" xml:space="preserve">
          <source>torch.FloatStorage.copy_()</source>
          <target state="translated">torch.FloatStorage.copy_()</target>
        </trans-unit>
        <trans-unit id="16f2bf3cc649e176603768895c19a7d28f5370fb" translate="yes" xml:space="preserve">
          <source>torch.FloatStorage.cpu()</source>
          <target state="translated">torch.FloatStorage.cpu()</target>
        </trans-unit>
        <trans-unit id="8ed448a641a71ec48363f7ee94a56059c1b5bad4" translate="yes" xml:space="preserve">
          <source>torch.FloatStorage.cuda()</source>
          <target state="translated">torch.FloatStorage.cuda()</target>
        </trans-unit>
        <trans-unit id="21a9764e5e5d5b6837b35885aa291a5a24b5447f" translate="yes" xml:space="preserve">
          <source>torch.FloatStorage.data_ptr()</source>
          <target state="translated">torch.FloatStorage.data_ptr()</target>
        </trans-unit>
        <trans-unit id="e54e4d4b3ed754158472a3f326e4a9b715ba4fe3" translate="yes" xml:space="preserve">
          <source>torch.FloatStorage.device</source>
          <target state="translated">torch.FloatStorage.device</target>
        </trans-unit>
        <trans-unit id="23729c1c9980b8e604939fe21c7eba03b65e21f8" translate="yes" xml:space="preserve">
          <source>torch.FloatStorage.double()</source>
          <target state="translated">torch.FloatStorage.double()</target>
        </trans-unit>
        <trans-unit id="c6685c67d88d6f4f3edc629bac73b82f2e7a243f" translate="yes" xml:space="preserve">
          <source>torch.FloatStorage.dtype</source>
          <target state="translated">torch.FloatStorage.dtype</target>
        </trans-unit>
        <trans-unit id="d70d0eb84281e0ee2e4198c286648c43647c7062" translate="yes" xml:space="preserve">
          <source>torch.FloatStorage.element_size()</source>
          <target state="translated">torch.FloatStorage.element_size()</target>
        </trans-unit>
        <trans-unit id="91e132abbfd734037a7c48a64ef09c9729a82c41" translate="yes" xml:space="preserve">
          <source>torch.FloatStorage.fill_()</source>
          <target state="translated">torch.FloatStorage.fill_()</target>
        </trans-unit>
        <trans-unit id="69e383829af3515de6f8718b48c9c63175acacef" translate="yes" xml:space="preserve">
          <source>torch.FloatStorage.float()</source>
          <target state="translated">torch.FloatStorage.float()</target>
        </trans-unit>
        <trans-unit id="0d56fcdd3fe972229d5c8c717393cee8597a21fe" translate="yes" xml:space="preserve">
          <source>torch.FloatStorage.from_buffer()</source>
          <target state="translated">torch.FloatStorage.from_buffer()</target>
        </trans-unit>
        <trans-unit id="cbd4ca08ca379d7623b70da44552f6c5999cc426" translate="yes" xml:space="preserve">
          <source>torch.FloatStorage.from_file()</source>
          <target state="translated">torch.FloatStorage.from_file()</target>
        </trans-unit>
        <trans-unit id="3cf2129db56d2cd0bb9e006f9618fd8bb92edd63" translate="yes" xml:space="preserve">
          <source>torch.FloatStorage.half()</source>
          <target state="translated">torch.FloatStorage.half()</target>
        </trans-unit>
        <trans-unit id="7478cf9e5e9ef012bc2b8250114a54c3b9cc050c" translate="yes" xml:space="preserve">
          <source>torch.FloatStorage.int()</source>
          <target state="translated">torch.FloatStorage.int()</target>
        </trans-unit>
        <trans-unit id="1ec74c20828d20c2e8a5ebad08cf55f1b04bdf40" translate="yes" xml:space="preserve">
          <source>torch.FloatStorage.is_cuda</source>
          <target state="translated">torch.FloatStorage.is_cuda</target>
        </trans-unit>
        <trans-unit id="e207ff063b150c720dbef5f819dd3c7f2973f52f" translate="yes" xml:space="preserve">
          <source>torch.FloatStorage.is_pinned()</source>
          <target state="translated">torch.FloatStorage.is_pinned()</target>
        </trans-unit>
        <trans-unit id="af25fe1d4b76ac5349db17047c739a9cdb01b3f5" translate="yes" xml:space="preserve">
          <source>torch.FloatStorage.is_shared()</source>
          <target state="translated">torch.FloatStorage.is_shared()</target>
        </trans-unit>
        <trans-unit id="9b83f19efbd915efb76d39b97514e6415d0dcd89" translate="yes" xml:space="preserve">
          <source>torch.FloatStorage.is_sparse</source>
          <target state="translated">torch.FloatStorage.is_sparse</target>
        </trans-unit>
        <trans-unit id="9829ee8ceeec9becf45e93745b6f09c76c773eff" translate="yes" xml:space="preserve">
          <source>torch.FloatStorage.long()</source>
          <target state="translated">torch.FloatStorage.long()</target>
        </trans-unit>
        <trans-unit id="879acc20d8e3a5a2da853176d2fb65a670dcbac6" translate="yes" xml:space="preserve">
          <source>torch.FloatStorage.new()</source>
          <target state="translated">torch.FloatStorage.new()</target>
        </trans-unit>
        <trans-unit id="33e1a3eee08d3fa8184f2e537d7a23621227e61f" translate="yes" xml:space="preserve">
          <source>torch.FloatStorage.pin_memory()</source>
          <target state="translated">torch.FloatStorage.pin_memory()</target>
        </trans-unit>
        <trans-unit id="0cbb61fa19e78198bdcca31293b1c9c661566840" translate="yes" xml:space="preserve">
          <source>torch.FloatStorage.resize_()</source>
          <target state="translated">torch.FloatStorage.resize_()</target>
        </trans-unit>
        <trans-unit id="44d4fe111aa663e333431d193df5bc759161cf54" translate="yes" xml:space="preserve">
          <source>torch.FloatStorage.share_memory_()</source>
          <target state="translated">torch.FloatStorage.share_memory_()</target>
        </trans-unit>
        <trans-unit id="0ef0f92384295d7e841ea87e8f8731c4a4787460" translate="yes" xml:space="preserve">
          <source>torch.FloatStorage.short()</source>
          <target state="translated">torch.FloatStorage.short()</target>
        </trans-unit>
        <trans-unit id="8a1a6ae09a09bfb0e9fd7a739ee560a302ee5334" translate="yes" xml:space="preserve">
          <source>torch.FloatStorage.size()</source>
          <target state="translated">torch.FloatStorage.size()</target>
        </trans-unit>
        <trans-unit id="49492dc369ee9ccd6e00d5d6b9f0e8e1a90e1c27" translate="yes" xml:space="preserve">
          <source>torch.FloatStorage.tolist()</source>
          <target state="translated">torch.FloatStorage.tolist()</target>
        </trans-unit>
        <trans-unit id="6ee2305cb8a8ba99249f0e3906f2bffb968805f9" translate="yes" xml:space="preserve">
          <source>torch.FloatStorage.type()</source>
          <target state="translated">torch.FloatStorage.type()</target>
        </trans-unit>
        <trans-unit id="ff940cd5bb16fb8eea41b41f701cdf62f7bf8683" translate="yes" xml:space="preserve">
          <source>torch.Storage</source>
          <target state="translated">torch.Storage</target>
        </trans-unit>
        <trans-unit id="04d14d9b75246bcbad8c1b14793a34a8eae7fd52" translate="yes" xml:space="preserve">
          <source>torch.Tensor</source>
          <target state="translated">torch.Tensor</target>
        </trans-unit>
        <trans-unit id="615f4a8c221eb0c26e64ffde0645aa0205ee4f36" translate="yes" xml:space="preserve">
          <source>torch.Tensor.T</source>
          <target state="translated">torch.Tensor.T</target>
        </trans-unit>
        <trans-unit id="82e4e5f3c31db3c07b86b76322a3aefe24df2ca9" translate="yes" xml:space="preserve">
          <source>torch.Tensor.align_as()</source>
          <target state="translated">torch.Tensor.align_as()</target>
        </trans-unit>
        <trans-unit id="aa9935a816fbccbb9bdd716eb6b0aad0c205b6f6" translate="yes" xml:space="preserve">
          <source>torch.Tensor.align_to()</source>
          <target state="translated">torch.Tensor.align_to()</target>
        </trans-unit>
        <trans-unit id="3bc9e778228b611006e3d5af8a1d309075b7e308" translate="yes" xml:space="preserve">
          <source>torch.Tensor.eq()</source>
          <target state="translated">torch.Tensor.eq()</target>
        </trans-unit>
        <trans-unit id="366a343bf91403db0d4d322981b77ff84de34114" translate="yes" xml:space="preserve">
          <source>torch.Tensor.ge()</source>
          <target state="translated">torch.Tensor.ge()</target>
        </trans-unit>
        <trans-unit id="1454a8b6eb583a1807bfdfd90aed81cb84470c60" translate="yes" xml:space="preserve">
          <source>torch.Tensor.gt()</source>
          <target state="translated">torch.Tensor.gt()</target>
        </trans-unit>
        <trans-unit id="eed12aa4d0e8103c71534342251c21323069ad5f" translate="yes" xml:space="preserve">
          <source>torch.Tensor.i0()</source>
          <target state="translated">torch.Tensor.i0()</target>
        </trans-unit>
        <trans-unit id="36bd9b59bc91309402b6bca65499dbb5b97a1b69" translate="yes" xml:space="preserve">
          <source>torch.Tensor.imag</source>
          <target state="translated">torch.Tensor.imag</target>
        </trans-unit>
        <trans-unit id="e5d9caeee0b7b4e9c446b04aac6cadfa61f5ea2b" translate="yes" xml:space="preserve">
          <source>torch.Tensor.le()</source>
          <target state="translated">torch.Tensor.le()</target>
        </trans-unit>
        <trans-unit id="0fe9fa9e4e273838dee268d5067cb47b54ff9637" translate="yes" xml:space="preserve">
          <source>torch.Tensor.lt()</source>
          <target state="translated">torch.Tensor.lt()</target>
        </trans-unit>
        <trans-unit id="6557d1ea647c17f89f6dfc2e309a54bc5f028cf9" translate="yes" xml:space="preserve">
          <source>torch.Tensor.lu()</source>
          <target state="translated">torch.Tensor.lu()</target>
        </trans-unit>
        <trans-unit id="bbef7417c137587270bcb692b2d4f82982534618" translate="yes" xml:space="preserve">
          <source>torch.Tensor.mm()</source>
          <target state="translated">torch.Tensor.mm()</target>
        </trans-unit>
        <trans-unit id="e1f06430927f2f450ab6f5867d6728daf8dc21b1" translate="yes" xml:space="preserve">
          <source>torch.Tensor.mv()</source>
          <target state="translated">torch.Tensor.mv()</target>
        </trans-unit>
        <trans-unit id="f8e82282980c60f31e3286ee1409720455e0c383" translate="yes" xml:space="preserve">
          <source>torch.Tensor.names</source>
          <target state="translated">torch.Tensor.names</target>
        </trans-unit>
        <trans-unit id="686e6843bdd22d1711e5e3b12dd262f163d43e02" translate="yes" xml:space="preserve">
          <source>torch.Tensor.ndim</source>
          <target state="translated">torch.Tensor.ndim</target>
        </trans-unit>
        <trans-unit id="93787b5cd9fbc006663c372bdb1e434eccba05c2" translate="yes" xml:space="preserve">
          <source>torch.Tensor.ne()</source>
          <target state="translated">torch.Tensor.ne()</target>
        </trans-unit>
        <trans-unit id="13bcd74fb976131b8910a7033257230eb4d5e59e" translate="yes" xml:space="preserve">
          <source>torch.Tensor.qr()</source>
          <target state="translated">torch.Tensor.qr()</target>
        </trans-unit>
        <trans-unit id="673644acebdbb6f2ba8a660126f418d359c7a4c6" translate="yes" xml:space="preserve">
          <source>torch.Tensor.real</source>
          <target state="translated">torch.Tensor.real</target>
        </trans-unit>
        <trans-unit id="0eedae5cbc64948bc5ba1f59eabc47d6c67c4aa1" translate="yes" xml:space="preserve">
          <source>torch.Tensor.refine_names()</source>
          <target state="translated">torch.Tensor.refine_names()</target>
        </trans-unit>
        <trans-unit id="4b7afd8b3be0b428cde58ce28671d50f3b6041bd" translate="yes" xml:space="preserve">
          <source>torch.Tensor.rename()</source>
          <target state="translated">torch.Tensor.rename()</target>
        </trans-unit>
        <trans-unit id="f13236579ce01e75ad54cbb10e654ba83fe9367c" translate="yes" xml:space="preserve">
          <source>torch.Tensor.rename_()</source>
          <target state="translated">torch.Tensor.rename_()</target>
        </trans-unit>
        <trans-unit id="9495b4ff70f922eff66062fa2823d175992eab8a" translate="yes" xml:space="preserve">
          <source>torch.Tensor.t()</source>
          <target state="translated">torch.Tensor.t()</target>
        </trans-unit>
        <trans-unit id="f7822752a3c03212ada338af8a8c9df5196560c3" translate="yes" xml:space="preserve">
          <source>torch.Tensor.t_()</source>
          <target state="translated">torch.Tensor.t_()</target>
        </trans-unit>
        <trans-unit id="ec6f379c03842482f258b724ab6b82d7796c1b98" translate="yes" xml:space="preserve">
          <source>torch.Tensor.to()</source>
          <target state="translated">torch.Tensor.to()</target>
        </trans-unit>
        <trans-unit id="a60c046cb5cfe8284ebf767eb849e8fc7a2f975c" translate="yes" xml:space="preserve">
          <source>torch.Tensor.unflatten()</source>
          <target state="translated">torch.Tensor.unflatten()</target>
        </trans-unit>
        <trans-unit id="84f41c546f06de31a00c7472ce343970525b07f2" translate="yes" xml:space="preserve">
          <source>torch.__config__</source>
          <target state="translated">torch.__config__</target>
        </trans-unit>
        <trans-unit id="82233aa52713e9495e5cf8385d2563bceacb1c25" translate="yes" xml:space="preserve">
          <source>torch.abs</source>
          <target state="translated">torch.abs</target>
        </trans-unit>
        <trans-unit id="54848849c62749877ae4e193350261b38ea539a8" translate="yes" xml:space="preserve">
          <source>torch.absolute</source>
          <target state="translated">torch.absolute</target>
        </trans-unit>
        <trans-unit id="869fcb9e83c32e1fcd13d621984f7f8a94c56192" translate="yes" xml:space="preserve">
          <source>torch.acos</source>
          <target state="translated">torch.acos</target>
        </trans-unit>
        <trans-unit id="f1944065ecd7b98b32d2bdc8edafda37eef9face" translate="yes" xml:space="preserve">
          <source>torch.acosh</source>
          <target state="translated">torch.acosh</target>
        </trans-unit>
        <trans-unit id="f72920d42927421268c0b70c8ceab4a06279d90a" translate="yes" xml:space="preserve">
          <source>torch.add</source>
          <target state="translated">torch.add</target>
        </trans-unit>
        <trans-unit id="831b7a3c1ad2ebb3964b38896d7a0d84ad758a2c" translate="yes" xml:space="preserve">
          <source>torch.addbmm</source>
          <target state="translated">torch.addbmm</target>
        </trans-unit>
        <trans-unit id="dd8208aef4570393d2b9d5d87c59e116aef676fa" translate="yes" xml:space="preserve">
          <source>torch.addcdiv</source>
          <target state="translated">torch.addcdiv</target>
        </trans-unit>
        <trans-unit id="629b60a66f646a8471523e49d608a1c9bea4f503" translate="yes" xml:space="preserve">
          <source>torch.addcmul</source>
          <target state="translated">torch.addcmul</target>
        </trans-unit>
        <trans-unit id="de47c0531b105f5e4cbcc2e609c663c51e29f9aa" translate="yes" xml:space="preserve">
          <source>torch.addmm</source>
          <target state="translated">torch.addmm</target>
        </trans-unit>
        <trans-unit id="d6af6f66fd5ffd9b745b28bc1d8be5f517bbd64c" translate="yes" xml:space="preserve">
          <source>torch.addmv</source>
          <target state="translated">torch.addmv</target>
        </trans-unit>
        <trans-unit id="c3f35215b796c1406bdb49c54023fb846b8d7c6a" translate="yes" xml:space="preserve">
          <source>torch.addr</source>
          <target state="translated">torch.addr</target>
        </trans-unit>
        <trans-unit id="4a61c1383a76a51a67ba29fa8df17e1dc503e549" translate="yes" xml:space="preserve">
          <source>torch.allclose</source>
          <target state="translated">torch.allclose</target>
        </trans-unit>
        <trans-unit id="57a3636829e822d73aca01478802e3f6670df19d" translate="yes" xml:space="preserve">
          <source>torch.amax</source>
          <target state="translated">torch.amax</target>
        </trans-unit>
        <trans-unit id="b1feaf58ed18ac6533e07723d338b350b6005d1b" translate="yes" xml:space="preserve">
          <source>torch.amin</source>
          <target state="translated">torch.amin</target>
        </trans-unit>
        <trans-unit id="ff353aca84c8e4e91ee57cd65f23fa9f1570d483" translate="yes" xml:space="preserve">
          <source>torch.angle</source>
          <target state="translated">torch.angle</target>
        </trans-unit>
        <trans-unit id="ccc51bd19d953799653d8c09f373e9f8c58fe964" translate="yes" xml:space="preserve">
          <source>torch.arange</source>
          <target state="translated">torch.arange</target>
        </trans-unit>
        <trans-unit id="e562cf9bd71f172173beb0833bdd72af4ce6c689" translate="yes" xml:space="preserve">
          <source>torch.arccos</source>
          <target state="translated">torch.arccos</target>
        </trans-unit>
        <trans-unit id="5e42d81aac35f5dbefbb1fcb367d52bf33c0870b" translate="yes" xml:space="preserve">
          <source>torch.arccosh</source>
          <target state="translated">torch.arccosh</target>
        </trans-unit>
        <trans-unit id="5bec779d86e01fbff851553f82026f63ccfa3e4a" translate="yes" xml:space="preserve">
          <source>torch.arcsin</source>
          <target state="translated">torch.arcsin</target>
        </trans-unit>
        <trans-unit id="e5ffc7ce6eb6a8e1809e434b57fea905778856d7" translate="yes" xml:space="preserve">
          <source>torch.arcsinh</source>
          <target state="translated">torch.arcsinh</target>
        </trans-unit>
        <trans-unit id="7782d956710f01a7c33ff133735beb6a668e0a5d" translate="yes" xml:space="preserve">
          <source>torch.arctan</source>
          <target state="translated">torch.arctan</target>
        </trans-unit>
        <trans-unit id="682038906a576029f08a933ae489d266e9dd3f8e" translate="yes" xml:space="preserve">
          <source>torch.arctanh</source>
          <target state="translated">torch.arctanh</target>
        </trans-unit>
        <trans-unit id="b4c257d167ba22e4773f7c6c529f7d7dab84524d" translate="yes" xml:space="preserve">
          <source>torch.argmax</source>
          <target state="translated">torch.argmax</target>
        </trans-unit>
        <trans-unit id="4685a90bb153c46f1e555a4f8bc909da1b883537" translate="yes" xml:space="preserve">
          <source>torch.argmin</source>
          <target state="translated">torch.argmin</target>
        </trans-unit>
        <trans-unit id="0c6d9903a21a7d1441e63ded97c8a9b10a7ae0a9" translate="yes" xml:space="preserve">
          <source>torch.argsort</source>
          <target state="translated">torch.argsort</target>
        </trans-unit>
        <trans-unit id="3dac1ac73e9e970d82472aca5aa6bbdfedd3d402" translate="yes" xml:space="preserve">
          <source>torch.as_strided</source>
          <target state="translated">torch.as_strided</target>
        </trans-unit>
        <trans-unit id="03772e3d8aa9d446b4b808fd45aa992541f3d065" translate="yes" xml:space="preserve">
          <source>torch.as_tensor</source>
          <target state="translated">torch.as_tensor</target>
        </trans-unit>
        <trans-unit id="56b31b56de1576d70b2453d0d7bb278cd8657efb" translate="yes" xml:space="preserve">
          <source>torch.asin</source>
          <target state="translated">torch.asin</target>
        </trans-unit>
        <trans-unit id="fd536a23e9018f7add81b486f9ccabff60dcaa7c" translate="yes" xml:space="preserve">
          <source>torch.asinh</source>
          <target state="translated">torch.asinh</target>
        </trans-unit>
        <trans-unit id="681c3dc3b554d59fb2e06b6a4acf9aa50ca05ce9" translate="yes" xml:space="preserve">
          <source>torch.atan</source>
          <target state="translated">torch.atan</target>
        </trans-unit>
        <trans-unit id="efac5d547ee80a1686a4737a19a50e6a28102ad3" translate="yes" xml:space="preserve">
          <source>torch.atan2</source>
          <target state="translated">torch.atan2</target>
        </trans-unit>
        <trans-unit id="04e1e992327fdd570fd97a8dcd4e2b14c015323e" translate="yes" xml:space="preserve">
          <source>torch.atanh</source>
          <target state="translated">torch.atanh</target>
        </trans-unit>
        <trans-unit id="b7f1acb21c7dd5da3e245299a8d6db9089e82c5d" translate="yes" xml:space="preserve">
          <source>torch.atleast_1d</source>
          <target state="translated">torch.atleast_1d</target>
        </trans-unit>
        <trans-unit id="f24f4a6564cdfeb6f1bfd3418f8a73874ee46681" translate="yes" xml:space="preserve">
          <source>torch.atleast_2d</source>
          <target state="translated">torch.atleast_2d</target>
        </trans-unit>
        <trans-unit id="6ee1715e3d522a254bd8c8411491d5e9311ebbf9" translate="yes" xml:space="preserve">
          <source>torch.atleast_3d</source>
          <target state="translated">torch.atleast_3d</target>
        </trans-unit>
        <trans-unit id="04650b4b2ed63d853ba399c7f86b212b5b30c108" translate="yes" xml:space="preserve">
          <source>torch.autograd</source>
          <target state="translated">torch.autograd</target>
        </trans-unit>
        <trans-unit id="3342707fd831bfb1904371de157e201440aaefe4" translate="yes" xml:space="preserve">
          <source>torch.backends</source>
          <target state="translated">torch.backends</target>
        </trans-unit>
        <trans-unit id="d1bb870107edd5661ef9fa8a9a064e3b40ee8299" translate="yes" xml:space="preserve">
          <source>torch.backends.cuda</source>
          <target state="translated">torch.backends.cuda</target>
        </trans-unit>
        <trans-unit id="e533c22faaad43ee9beea4c059b0d49856549725" translate="yes" xml:space="preserve">
          <source>torch.backends.cudnn</source>
          <target state="translated">torch.backends.cudnn</target>
        </trans-unit>
        <trans-unit id="9e09bcd9dc26d6256144d4ed57335ebc0de40e95" translate="yes" xml:space="preserve">
          <source>torch.backends.mkl</source>
          <target state="translated">torch.backends.mkl</target>
        </trans-unit>
        <trans-unit id="8bd0843ebe1b48f6360f6e272bdab1a43fc10afa" translate="yes" xml:space="preserve">
          <source>torch.backends.mkldnn</source>
          <target state="translated">torch.backends.mkldnn</target>
        </trans-unit>
        <trans-unit id="0e3af5d4b2034951e16d1a8c90446ddcdb323e75" translate="yes" xml:space="preserve">
          <source>torch.backends.openmp</source>
          <target state="translated">torch.backends.openmp</target>
        </trans-unit>
        <trans-unit id="7e3da701e267aea62a7d1fd0d7f3f74e8d411b34" translate="yes" xml:space="preserve">
          <source>torch.baddbmm</source>
          <target state="translated">torch.baddbmm</target>
        </trans-unit>
        <trans-unit id="84af561ef117785d66772cfbab047e0a2d3ff6b3" translate="yes" xml:space="preserve">
          <source>torch.bartlett_window</source>
          <target state="translated">torch.bartlett_window</target>
        </trans-unit>
        <trans-unit id="cdb39430fcdeca005cc3f71eb415d7befbadf6b9" translate="yes" xml:space="preserve">
          <source>torch.bernoulli</source>
          <target state="translated">torch.bernoulli</target>
        </trans-unit>
        <trans-unit id="b823a326359d1b0609e6cbfd4111a11494674a06" translate="yes" xml:space="preserve">
          <source>torch.bincount</source>
          <target state="translated">torch.bincount</target>
        </trans-unit>
        <trans-unit id="4ce81c52b35f407ac252ec47be3a8315934c98af" translate="yes" xml:space="preserve">
          <source>torch.bitwise_and</source>
          <target state="translated">torch.bitwise_and</target>
        </trans-unit>
        <trans-unit id="7e3bbacfc44157cebcceacfedb36285856d48fd9" translate="yes" xml:space="preserve">
          <source>torch.bitwise_not</source>
          <target state="translated">torch.bitwise_not</target>
        </trans-unit>
        <trans-unit id="0e929905e70a95e5d13d9f85d2263cf7c79e2e82" translate="yes" xml:space="preserve">
          <source>torch.bitwise_or</source>
          <target state="translated">torch.bitwise_or</target>
        </trans-unit>
        <trans-unit id="32fb41b5fd87f259512cbdd6f24061d1ceb666ee" translate="yes" xml:space="preserve">
          <source>torch.bitwise_xor</source>
          <target state="translated">torch.bitwise_xor</target>
        </trans-unit>
        <trans-unit id="8c238d5351d1e9ea6539c24e6240c9927be53a4e" translate="yes" xml:space="preserve">
          <source>torch.blackman_window</source>
          <target state="translated">torch.blackman_window</target>
        </trans-unit>
        <trans-unit id="d439669e52a367f031a0034bf106c880a492c8cd" translate="yes" xml:space="preserve">
          <source>torch.block_diag</source>
          <target state="translated">torch.block_diag</target>
        </trans-unit>
        <trans-unit id="fb45eb22a2f3f32acccd19dc4d1b895f1882112b" translate="yes" xml:space="preserve">
          <source>torch.bmm</source>
          <target state="translated">torch.bmm</target>
        </trans-unit>
        <trans-unit id="7d7b71dc5fc09a0901b6601f4b0d0a0d45fb573c" translate="yes" xml:space="preserve">
          <source>torch.broadcast_tensors</source>
          <target state="translated">torch.broadcast_tensors</target>
        </trans-unit>
        <trans-unit id="2788d83628e5ddd574f60af7c5aef6374777731d" translate="yes" xml:space="preserve">
          <source>torch.bucketize</source>
          <target state="translated">torch.bucketize</target>
        </trans-unit>
        <trans-unit id="a0c048bd3457ff4fe69852facf6c4a8ef7b4d2d7" translate="yes" xml:space="preserve">
          <source>torch.can_cast</source>
          <target state="translated">torch.can_cast</target>
        </trans-unit>
        <trans-unit id="5d997c16f561c90d10c0b3e406af017ce317782a" translate="yes" xml:space="preserve">
          <source>torch.cartesian_prod</source>
          <target state="translated">torch.cartesian_prod</target>
        </trans-unit>
        <trans-unit id="5129f415d1d5ea560db1a453a858aff016585379" translate="yes" xml:space="preserve">
          <source>torch.cat</source>
          <target state="translated">torch.cat</target>
        </trans-unit>
        <trans-unit id="d44777d4d2b00ed94f707392747c8834c946d290" translate="yes" xml:space="preserve">
          <source>torch.cdist</source>
          <target state="translated">torch.cdist</target>
        </trans-unit>
        <trans-unit id="df3b04fd4a9584671545045beae5c358564cbfed" translate="yes" xml:space="preserve">
          <source>torch.ceil</source>
          <target state="translated">torch.ceil</target>
        </trans-unit>
        <trans-unit id="74b62231d8cab4b715f4a09fafffb444e32ac321" translate="yes" xml:space="preserve">
          <source>torch.chain_matmul</source>
          <target state="translated">torch.chain_matmul</target>
        </trans-unit>
        <trans-unit id="0691c7f57d4c9234ae07ef521fff65184a165fdd" translate="yes" xml:space="preserve">
          <source>torch.cholesky</source>
          <target state="translated">torch.cholesky</target>
        </trans-unit>
        <trans-unit id="491e9b9d1dc0f11c3d12f1a20063aaeec8e705ea" translate="yes" xml:space="preserve">
          <source>torch.cholesky_inverse</source>
          <target state="translated">torch.cholesky_inverse</target>
        </trans-unit>
        <trans-unit id="03f32dfc4b3699504e58887ed3049fae5e116e8b" translate="yes" xml:space="preserve">
          <source>torch.cholesky_solve</source>
          <target state="translated">torch.cholesky_solve</target>
        </trans-unit>
        <trans-unit id="9d5d70feb295256ef4281f1c51f36b1d07c0d03d" translate="yes" xml:space="preserve">
          <source>torch.chunk</source>
          <target state="translated">torch.chunk</target>
        </trans-unit>
        <trans-unit id="1a74fb1befe7ff50951edfb87f2a5fa832152a1f" translate="yes" xml:space="preserve">
          <source>torch.clamp</source>
          <target state="translated">torch.clamp</target>
        </trans-unit>
        <trans-unit id="c892fd8ec1e16e02b0d3a9c2f763eae2996d3db3" translate="yes" xml:space="preserve">
          <source>torch.clip</source>
          <target state="translated">torch.clip</target>
        </trans-unit>
        <trans-unit id="ffecf339d6df26ecebf728c722d3e2363444774d" translate="yes" xml:space="preserve">
          <source>torch.clone</source>
          <target state="translated">torch.clone</target>
        </trans-unit>
        <trans-unit id="1e54a18b6f575fd599ae25da91d64ce40e09d48b" translate="yes" xml:space="preserve">
          <source>torch.combinations</source>
          <target state="translated">torch.combinations</target>
        </trans-unit>
        <trans-unit id="04b700c6ded774656b382a73990302a8978cac36" translate="yes" xml:space="preserve">
          <source>torch.compiled_with_cxx11_abi</source>
          <target state="translated">torch.compiled_with_cxx11_abi</target>
        </trans-unit>
        <trans-unit id="52ab379817de02f9c6042a043f01bf08d2eb60bc" translate="yes" xml:space="preserve">
          <source>torch.complex</source>
          <target state="translated">torch.complex</target>
        </trans-unit>
        <trans-unit id="27da224fa8d23483cbff6aa9e6657317ecc1e6aa" translate="yes" xml:space="preserve">
          <source>torch.conj</source>
          <target state="translated">torch.conj</target>
        </trans-unit>
        <trans-unit id="66e1c48a2a464f39942cebc7c1a1a3f3670613b7" translate="yes" xml:space="preserve">
          <source>torch.cos</source>
          <target state="translated">torch.cos</target>
        </trans-unit>
        <trans-unit id="c6cbe16ce4bc7db9a6153a2632fb0a161fde30ce" translate="yes" xml:space="preserve">
          <source>torch.cosh</source>
          <target state="translated">torch.cosh</target>
        </trans-unit>
        <trans-unit id="98a11246b59ade4f8e06cab61092714a9ad470dd" translate="yes" xml:space="preserve">
          <source>torch.count_nonzero</source>
          <target state="translated">torch.count_nonzero</target>
        </trans-unit>
        <trans-unit id="1c733d04efd0f424a5e494a90ba4d573ae7946ec" translate="yes" xml:space="preserve">
          <source>torch.cross</source>
          <target state="translated">torch.cross</target>
        </trans-unit>
        <trans-unit id="ddb7d2bad3584e9de52a9ec440cebc1059f36f3f" translate="yes" xml:space="preserve">
          <source>torch.cuda</source>
          <target state="translated">torch.cuda</target>
        </trans-unit>
        <trans-unit id="3d954ddb64219cf3ce3d3592b807aed76060ee5a" translate="yes" xml:space="preserve">
          <source>torch.cuda.amp</source>
          <target state="translated">torch.cuda.amp</target>
        </trans-unit>
        <trans-unit id="9c91de5aaffbc900a09070832b9b5632b0dd08b8" translate="yes" xml:space="preserve">
          <source>torch.cummax</source>
          <target state="translated">torch.cummax</target>
        </trans-unit>
        <trans-unit id="ad8a459bcb684ab937b89e8cee08221f27898267" translate="yes" xml:space="preserve">
          <source>torch.cummin</source>
          <target state="translated">torch.cummin</target>
        </trans-unit>
        <trans-unit id="db50945279527b81e5d3aeeef5e25b4c930b5c9b" translate="yes" xml:space="preserve">
          <source>torch.cumprod</source>
          <target state="translated">torch.cumprod</target>
        </trans-unit>
        <trans-unit id="b3f781add8f7ecbeb76c913423b3ea551885e5c6" translate="yes" xml:space="preserve">
          <source>torch.cumsum</source>
          <target state="translated">torch.cumsum</target>
        </trans-unit>
        <trans-unit id="31dd69ab5672eedebc0f43f2b9a8130735df95d1" translate="yes" xml:space="preserve">
          <source>torch.deg2rad</source>
          <target state="translated">torch.deg2rad</target>
        </trans-unit>
        <trans-unit id="080615c635488644a5a38cf3b2b3803aaaaccabd" translate="yes" xml:space="preserve">
          <source>torch.dequantize</source>
          <target state="translated">torch.dequantize</target>
        </trans-unit>
        <trans-unit id="fb04c73ee93225548d30cbfa05eb187b29b04115" translate="yes" xml:space="preserve">
          <source>torch.det</source>
          <target state="translated">torch.det</target>
        </trans-unit>
        <trans-unit id="0197b2f034425c3b16d5ef121d6d815984d88abb" translate="yes" xml:space="preserve">
          <source>torch.device</source>
          <target state="translated">torch.device</target>
        </trans-unit>
        <trans-unit id="b0de8ef2a031721847c4ddd531c5e79bf5ecb233" translate="yes" xml:space="preserve">
          <source>torch.diag</source>
          <target state="translated">torch.diag</target>
        </trans-unit>
        <trans-unit id="b8c835ce4c0ef4a40bf260d250c7f18110e5d300" translate="yes" xml:space="preserve">
          <source>torch.diag_embed</source>
          <target state="translated">torch.diag_embed</target>
        </trans-unit>
        <trans-unit id="87784c82cc80bfef31788fb72b7987688adf5909" translate="yes" xml:space="preserve">
          <source>torch.diagflat</source>
          <target state="translated">torch.diagflat</target>
        </trans-unit>
        <trans-unit id="a564e095e2cca8eeb9fe5ca3a3218f75e241c762" translate="yes" xml:space="preserve">
          <source>torch.diagonal</source>
          <target state="translated">torch.diagonal</target>
        </trans-unit>
        <trans-unit id="882719d5c03cce4a10759e8fc53451964fa2eb6c" translate="yes" xml:space="preserve">
          <source>torch.digamma</source>
          <target state="translated">torch.digamma</target>
        </trans-unit>
        <trans-unit id="82b43c95945a2c7201dd1c8b2a4022673b6da19b" translate="yes" xml:space="preserve">
          <source>torch.dist</source>
          <target state="translated">torch.dist</target>
        </trans-unit>
        <trans-unit id="d1b4b7d11fe4946a09aa4ba444da4ffee605abd7" translate="yes" xml:space="preserve">
          <source>torch.distributed</source>
          <target state="translated">torch.distributed</target>
        </trans-unit>
        <trans-unit id="92b9ac365c2e1bf1eecff8fc7619da192548321b" translate="yes" xml:space="preserve">
          <source>torch.distributed.autograd.backward()</source>
          <target state="translated">torch.distributed.autograd.backward()</target>
        </trans-unit>
        <trans-unit id="8b5fa255c784a4be836649021bf62d5e116b515f" translate="yes" xml:space="preserve">
          <source>torch.distributed.autograd.context</source>
          <target state="translated">torch.distributed.autograd.context</target>
        </trans-unit>
        <trans-unit id="c49293418b7a329f53a4024bfd9c2f1d30c3d4ee" translate="yes" xml:space="preserve">
          <source>torch.distributed.autograd.get_gradients()</source>
          <target state="translated">torch.distributed.autograd.get_gradients()</target>
        </trans-unit>
        <trans-unit id="c0993e0c18cc940c144ddd7813a451655b796d87" translate="yes" xml:space="preserve">
          <source>torch.distributed.optim.DistributedOptimizer</source>
          <target state="translated">torch.distributed.optim.DistributedOptimizer</target>
        </trans-unit>
        <trans-unit id="4181964741043b28f43920052ff1167097302cfa" translate="yes" xml:space="preserve">
          <source>torch.distributed.optim.DistributedOptimizer.step()</source>
          <target state="translated">torch.distributed.optim.DistributedOptimizer.step()</target>
        </trans-unit>
        <trans-unit id="02fbd8d68bf97b2c1eff14e3a63520fd5cf51d0e" translate="yes" xml:space="preserve">
          <source>torch.distributed.rpc.BackendType</source>
          <target state="translated">torch.distributed.rpc.BackendType</target>
        </trans-unit>
        <trans-unit id="9e5b9bf2183093e2ae01536ad9ef928ed86f4238" translate="yes" xml:space="preserve">
          <source>torch.distributed.rpc.ProcessGroupRpcBackendOptions</source>
          <target state="translated">torch.distributed.rpc.ProcessGroupRpcBackendOptions</target>
        </trans-unit>
        <trans-unit id="b1b92d39998592f35c1ed94b43ce15238943ed4b" translate="yes" xml:space="preserve">
          <source>torch.distributed.rpc.ProcessGroupRpcBackendOptions.init_method()</source>
          <target state="translated">torch.distributed.rpc.ProcessGroupRpcBackendOptions.init_method()</target>
        </trans-unit>
        <trans-unit id="6b8fe382598bd4f42f2b1428178e47920b9bf760" translate="yes" xml:space="preserve">
          <source>torch.distributed.rpc.ProcessGroupRpcBackendOptions.num_send_recv_threads()</source>
          <target state="translated">torch.distributed.rpc.ProcessGroupRpcBackendOptions.num_send_recv_threads()</target>
        </trans-unit>
        <trans-unit id="1d3608e18c20daea5adf2186f0cd5516558c3d38" translate="yes" xml:space="preserve">
          <source>torch.distributed.rpc.ProcessGroupRpcBackendOptions.rpc_timeout()</source>
          <target state="translated">torch.distributed.rpc.ProcessGroupRpcBackendOptions.rpc_timeout()</target>
        </trans-unit>
        <trans-unit id="2dacee59ecdbeefa4d1f797befb4018f2a62997f" translate="yes" xml:space="preserve">
          <source>torch.distributed.rpc.RRef</source>
          <target state="translated">torch.distributed.rpc.RRef</target>
        </trans-unit>
        <trans-unit id="4d57c3e393eb94aa92729b5e7914a625f36ee20d" translate="yes" xml:space="preserve">
          <source>torch.distributed.rpc.RRef.confirmed_by_owner()</source>
          <target state="translated">torch.distributed.rpc.RRef.confirmed_by_owner()</target>
        </trans-unit>
        <trans-unit id="572477ac598abaf9a7d32afaee0445a79b362ba7" translate="yes" xml:space="preserve">
          <source>torch.distributed.rpc.RRef.is_owner()</source>
          <target state="translated">torch.distributed.rpc.RRef.is_owner()</target>
        </trans-unit>
        <trans-unit id="8442863b08eb6d82f76111b91abbdc735ca8a891" translate="yes" xml:space="preserve">
          <source>torch.distributed.rpc.RRef.local_value()</source>
          <target state="translated">torch.distributed.rpc.RRef.local_value()</target>
        </trans-unit>
        <trans-unit id="9f56f122cb190b0b5a911da97956f66a38d78e11" translate="yes" xml:space="preserve">
          <source>torch.distributed.rpc.RRef.owner()</source>
          <target state="translated">torch.distributed.rpc.RRef.owner()</target>
        </trans-unit>
        <trans-unit id="ec686c6ebcfd153c09d7b8e984c91107c0c9dc1f" translate="yes" xml:space="preserve">
          <source>torch.distributed.rpc.RRef.owner_name()</source>
          <target state="translated">torch.distributed.rpc.RRef.owner_name()</target>
        </trans-unit>
        <trans-unit id="bffe517135d649cb3105fb196457c88fa79ddabf" translate="yes" xml:space="preserve">
          <source>torch.distributed.rpc.RRef.remote()</source>
          <target state="translated">torch.distributed.rpc.RRef.remote()</target>
        </trans-unit>
        <trans-unit id="f1404f82a6f0db6cf7d019fc3cc1d67ea7d60d94" translate="yes" xml:space="preserve">
          <source>torch.distributed.rpc.RRef.rpc_async()</source>
          <target state="translated">torch.distributed.rpc.RRef.rpc_async()</target>
        </trans-unit>
        <trans-unit id="0ed13e43b1ac4a55125de738bc29ae2ce0dcbfb9" translate="yes" xml:space="preserve">
          <source>torch.distributed.rpc.RRef.rpc_sync()</source>
          <target state="translated">torch.distributed.rpc.RRef.rpc_sync()</target>
        </trans-unit>
        <trans-unit id="101986b9e1e70c1a7a0cdff0373c02b742951c93" translate="yes" xml:space="preserve">
          <source>torch.distributed.rpc.RRef.to_here()</source>
          <target state="translated">torch.distributed.rpc.RRef.to_here()</target>
        </trans-unit>
        <trans-unit id="6fa4bcc6163f5519bb5d6663991bad8b26987322" translate="yes" xml:space="preserve">
          <source>torch.distributed.rpc.RpcBackendOptions</source>
          <target state="translated">torch.distributed.rpc.RpcBackendOptions</target>
        </trans-unit>
        <trans-unit id="d8b2a0a1df3ebfe9b2967b795df19fb27b6036e2" translate="yes" xml:space="preserve">
          <source>torch.distributed.rpc.RpcBackendOptions.init_method()</source>
          <target state="translated">torch.distributed.rpc.RpcBackendOptions.init_method()</target>
        </trans-unit>
        <trans-unit id="290e46c99d64e3d017ca5b288d0bb7eaed1ad42b" translate="yes" xml:space="preserve">
          <source>torch.distributed.rpc.RpcBackendOptions.rpc_timeout()</source>
          <target state="translated">torch.distributed.rpc.RpcBackendOptions.rpc_timeout()</target>
        </trans-unit>
        <trans-unit id="ba6b6842e71530ed5fef9872d71d190aae13a5a2" translate="yes" xml:space="preserve">
          <source>torch.distributed.rpc.TensorPipeRpcBackendOptions</source>
          <target state="translated">torch.distributed.rpc.TensorPipeRpcBackendOptions</target>
        </trans-unit>
        <trans-unit id="57dd5772d51018adc7babc1cf3318cf1b29240d5" translate="yes" xml:space="preserve">
          <source>torch.distributed.rpc.TensorPipeRpcBackendOptions.init_method()</source>
          <target state="translated">torch.distributed.rpc.TensorPipeRpcBackendOptions.init_method()</target>
        </trans-unit>
        <trans-unit id="6315a3ed645bd5380aa1e5399469a9c8884916ff" translate="yes" xml:space="preserve">
          <source>torch.distributed.rpc.TensorPipeRpcBackendOptions.num_worker_threads()</source>
          <target state="translated">torch.distributed.rpc.TensorPipeRpcBackendOptions.num_worker_threads()</target>
        </trans-unit>
        <trans-unit id="d3ffa800a96a4d00bcb8f91efca04f2a8672faad" translate="yes" xml:space="preserve">
          <source>torch.distributed.rpc.TensorPipeRpcBackendOptions.rpc_timeout()</source>
          <target state="translated">torch.distributed.rpc.TensorPipeRpcBackendOptions.rpc_timeout()</target>
        </trans-unit>
        <trans-unit id="9b4aa5ec899490b5404259c800839145471c7bcd" translate="yes" xml:space="preserve">
          <source>torch.distributed.rpc.WorkerInfo</source>
          <target state="translated">torch.distributed.rpc.WorkerInfo</target>
        </trans-unit>
        <trans-unit id="b3dc01110a38901aa7d2238bd9bc37d96560c016" translate="yes" xml:space="preserve">
          <source>torch.distributed.rpc.WorkerInfo.id()</source>
          <target state="translated">torch.distributed.rpc.WorkerInfo.id()</target>
        </trans-unit>
        <trans-unit id="2067883bff6f3a7bb366b2970f3813d8ebf380a9" translate="yes" xml:space="preserve">
          <source>torch.distributed.rpc.WorkerInfo.name()</source>
          <target state="translated">torch.distributed.rpc.WorkerInfo.name()</target>
        </trans-unit>
        <trans-unit id="8fad110875e9b42c15e844b3b2f33132cebffc63" translate="yes" xml:space="preserve">
          <source>torch.distributed.rpc.functions.async_execution()</source>
          <target state="translated">torch.distributed.rpc.functions.async_execution()</target>
        </trans-unit>
        <trans-unit id="898ad8eba31c9032587d248480529543fddcb9a7" translate="yes" xml:space="preserve">
          <source>torch.distributed.rpc.get_worker_info()</source>
          <target state="translated">torch.distributed.rpc.get_worker_info()</target>
        </trans-unit>
        <trans-unit id="2d0d5837ffae9aef6a089dbbad31fac8cdaeccbe" translate="yes" xml:space="preserve">
          <source>torch.distributed.rpc.init_rpc()</source>
          <target state="translated">torch.distributed.rpc.init_rpc()</target>
        </trans-unit>
        <trans-unit id="c940d51114523d46951afe5f176a3061b16e71a3" translate="yes" xml:space="preserve">
          <source>torch.distributed.rpc.remote()</source>
          <target state="translated">torch.distributed.rpc.remote()</target>
        </trans-unit>
        <trans-unit id="53a97a2ae4ff1a651ad0d66731ce586cb1816027" translate="yes" xml:space="preserve">
          <source>torch.distributed.rpc.rpc_async()</source>
          <target state="translated">torch.distributed.rpc.rpc_async()</target>
        </trans-unit>
        <trans-unit id="0dbc5bd1e0df19915782c5d9fb4761da2e307feb" translate="yes" xml:space="preserve">
          <source>torch.distributed.rpc.rpc_sync()</source>
          <target state="translated">torch.distributed.rpc.rpc_sync()</target>
        </trans-unit>
        <trans-unit id="af3dafedfe17d99d19ed366bb011aef689b14408" translate="yes" xml:space="preserve">
          <source>torch.distributed.rpc.shutdown()</source>
          <target state="translated">torch.distributed.rpc.shutdown()</target>
        </trans-unit>
        <trans-unit id="97475d36367871858d0238a08193fffb6fa433ee" translate="yes" xml:space="preserve">
          <source>torch.distributions</source>
          <target state="translated">torch.distributions</target>
        </trans-unit>
        <trans-unit id="b2ada492798994511912bb00b686aa375abeeb6c" translate="yes" xml:space="preserve">
          <source>torch.div</source>
          <target state="translated">torch.div</target>
        </trans-unit>
        <trans-unit id="fe6dbb1f30bc84c3751bcb31e5d4ebcb0f0a9458" translate="yes" xml:space="preserve">
          <source>torch.divide</source>
          <target state="translated">torch.divide</target>
        </trans-unit>
        <trans-unit id="0f06f025c455884c36cf2c692958b3c0c49888d2" translate="yes" xml:space="preserve">
          <source>torch.dot</source>
          <target state="translated">torch.dot</target>
        </trans-unit>
        <trans-unit id="d6619636a84b04d17d940058d859841efb34c19e" translate="yes" xml:space="preserve">
          <source>torch.dstack</source>
          <target state="translated">torch.dstack</target>
        </trans-unit>
        <trans-unit id="06f11e4ff3daf20c623bb5502c4d190107247e2c" translate="yes" xml:space="preserve">
          <source>torch.dtype</source>
          <target state="translated">torch.dtype</target>
        </trans-unit>
        <trans-unit id="df6fb53277ee3ad4bc368c9c961f124aaabab8ce" translate="yes" xml:space="preserve">
          <source>torch.eig</source>
          <target state="translated">torch.eig</target>
        </trans-unit>
        <trans-unit id="6049b6b56686b41b7e02fa943bbf18b79e7ba672" translate="yes" xml:space="preserve">
          <source>torch.einsum</source>
          <target state="translated">torch.einsum</target>
        </trans-unit>
        <trans-unit id="199fc2c53fdaaa13221af170e12a1e4655789cc8" translate="yes" xml:space="preserve">
          <source>torch.empty</source>
          <target state="translated">torch.empty</target>
        </trans-unit>
        <trans-unit id="0f1131ad0215928bccfca01cac10728ad34ade5b" translate="yes" xml:space="preserve">
          <source>torch.empty_like</source>
          <target state="translated">torch.empty_like</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
