<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="node">
    <body>
      <group id="node">
        <trans-unit id="05f539596c85a8dcff913b8786aee719a585dfe5" translate="yes" xml:space="preserve">
          <source>Flush operations</source>
          <target state="translated">冲洗作业</target>
        </trans-unit>
        <trans-unit id="c3db444af1ef5ead4ffca281491c5831f95302fb" translate="yes" xml:space="preserve">
          <source>Flush pending data. Don't call this frivolously, premature flushes negatively impact the effectiveness of the compression algorithm.</source>
          <target state="translated">刷新待处理的数据。不要轻率地称之为,过早的刷新会对压缩算法的效果产生负面影响。</target>
        </trans-unit>
        <trans-unit id="af0144ad8588391b2f587a0b967a54e12bfe650e" translate="yes" xml:space="preserve">
          <source>Flushes the request headers.</source>
          <target state="translated">刷新请求头。</target>
        </trans-unit>
        <trans-unit id="6581c7edc58d10b0e77e444e8de35dff2af33545" translate="yes" xml:space="preserve">
          <source>Flushes the response headers. See also: &lt;a href=&quot;#http_request_flushheaders&quot;&gt;&lt;code&gt;request.flushHeaders()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">刷新响应头。另请参见：&lt;a href=&quot;#http_request_flushheaders&quot;&gt; &lt;code&gt;request.flushHeaders()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ca447072e179b8239502f1f4cd8c8f7174c9b801" translate="yes" xml:space="preserve">
          <source>Flushing</source>
          <target state="translated">Flushing</target>
        </trans-unit>
        <trans-unit id="948f30180920619fed0f6f0ff2fa1b319bfa7d68" translate="yes" xml:space="preserve">
          <source>Folders as Modules</source>
          <target state="translated">文件夹作为模块</target>
        </trans-unit>
        <trans-unit id="4e483ed60c6aa1a4fc52b273f85d228cdbd3d352" translate="yes" xml:space="preserve">
          <source>Folders as modules</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e964430cef74586c5f2c2f25b435d9e04075a1a5" translate="yes" xml:space="preserve">
          <source>Folders can also be mapped with package exports:</source>
          <target state="translated">文件夹也可以用包导出映射。</target>
        </trans-unit>
        <trans-unit id="7c99c144cf5b270c52f8725c4b844b0c19827c50" translate="yes" xml:space="preserve">
          <source>Following are some example Addons intended to help developers get started. The examples make use of the V8 APIs. Refer to the online &lt;a href=&quot;https://v8docs.nodesource.com/&quot;&gt;V8 reference&lt;/a&gt; for help with the various V8 calls, and V8's &lt;a href=&quot;https://github.com/v8/v8/wiki/Embedder's%20Guide&quot;&gt;Embedder's Guide&lt;/a&gt; for an explanation of several concepts used such as handles, scopes, function templates, etc.</source>
          <target state="translated">以下是一些示例插件，旨在帮助开发人员入门。这些示例使用了V8 API。有关各种V8调用的帮助，请参阅在线&lt;a href=&quot;https://v8docs.nodesource.com/&quot;&gt;V8参考&lt;/a&gt;，以及有关所使用的几个概念（例如句柄，范围，功能模板等）的说明，请参见《V8的&lt;a href=&quot;https://github.com/v8/v8/wiki/Embedder's%20Guide&quot;&gt;嵌入器指南》&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="be114c032e5aa483843b89d61eb74bf019fafc7c" translate="yes" xml:space="preserve">
          <source>Following are some example addons intended to help developers get started. The examples use the V8 APIs. Refer to the online &lt;a href=&quot;https://v8docs.nodesource.com/&quot;&gt;V8 reference&lt;/a&gt; for help with the various V8 calls, and V8's &lt;a href=&quot;https://github.com/v8/v8/wiki/Embedder's%20Guide&quot;&gt;Embedder's Guide&lt;/a&gt; for an explanation of several concepts used such as handles, scopes, function templates, etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fbf548c54fc5019a00dc97cf34a6dbbf46c6fb9" translate="yes" xml:space="preserve">
          <source>Following is a simple overview of the public API.</source>
          <target state="translated">以下是对公共API的简单概述。</target>
        </trans-unit>
        <trans-unit id="3d3da17627bbb105a67ffaef4cde451b1975b1c7" translate="yes" xml:space="preserve">
          <source>Following is an example of a client of the echo server described in the &lt;a href=&quot;#net_net_createserver_options_connectionlistener&quot;&gt;&lt;code&gt;net.createServer()&lt;/code&gt;&lt;/a&gt; section:</source>
          <target state="translated">以下是&lt;a href=&quot;#net_net_createserver_options_connectionlistener&quot;&gt; &lt;code&gt;net.createServer()&lt;/code&gt; &lt;/a&gt;部分中描述的回显服务器客户端的示例：</target>
        </trans-unit>
        <trans-unit id="5df4ece871f653674e17cd451f5434f8b2e055b2" translate="yes" xml:space="preserve">
          <source>Following is an example of a client using the &lt;code&gt;onread&lt;/code&gt; option:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50f12e835371a94a0761fa5bd02427c269944d14" translate="yes" xml:space="preserve">
          <source>Following successful read, the &lt;code&gt;Promise&lt;/code&gt; is resolved with an object with a &lt;code&gt;bytesRead&lt;/code&gt; property specifying the number of bytes read, and a &lt;code&gt;buffer&lt;/code&gt; property that is a reference to the passed in &lt;code&gt;buffer&lt;/code&gt; argument.</source>
          <target state="translated">成功读取后， &lt;code&gt;Promise&lt;/code&gt; 将通过一个对象进行解析，该对象的 &lt;code&gt;bytesRead&lt;/code&gt; 属性指定读取的字节数，而 &lt;code&gt;buffer&lt;/code&gt; 属性是对传入的 &lt;code&gt;buffer&lt;/code&gt; 参数的引用。</target>
        </trans-unit>
        <trans-unit id="3e751ad7175cba92753720b10ba78d5928c127b0" translate="yes" xml:space="preserve">
          <source>Follows &lt;code&gt;require()&lt;/code&gt;'s module resolution rules. &lt;code&gt;module&lt;/code&gt; may be either a path to a file, or a node module name.</source>
          <target state="translated">遵循 &lt;code&gt;require()&lt;/code&gt; 的模块解析规则。 &lt;code&gt;module&lt;/code&gt; 可以是文件的路径，也可以是节点模块的名称。</target>
        </trans-unit>
        <trans-unit id="dd0ab2ca2c0cf15e6c487567e8ddb28ffdb646c9" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;#child_process_child_process_fork_modulepath_args_options&quot;&gt;&lt;code&gt;child_process.fork()&lt;/code&gt;&lt;/a&gt;, its value will be equal to &lt;a href=&quot;process#process_process_execpath&quot;&gt;&lt;code&gt;process.execPath&lt;/code&gt;&lt;/a&gt;. For &lt;a href=&quot;#child_process_child_process_spawn_command_args_options&quot;&gt;&lt;code&gt;child_process.spawn()&lt;/code&gt;&lt;/a&gt;, its value will be the name of the executable file. For &lt;a href=&quot;#child_process_child_process_exec_command_options_callback&quot;&gt;&lt;code&gt;child_process.exec()&lt;/code&gt;&lt;/a&gt;, its value will be the name of the shell in which the child process is launched.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="364153e1c2cf21cfe5f226aed551c4d175223ae8" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;#net_ipc_support&quot;&gt;IPC&lt;/a&gt; connections, available &lt;code&gt;options&lt;/code&gt; are:</source>
          <target state="translated">对于&lt;a href=&quot;#net_ipc_support&quot;&gt;IPC&lt;/a&gt;连接，可用 &lt;code&gt;options&lt;/code&gt; 为：</target>
        </trans-unit>
        <trans-unit id="6743ce5cc737d221faa9da6d6e2770ef67f0eaed" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;'base64'&lt;/code&gt; and &lt;code&gt;'hex'&lt;/code&gt;, this function assumes valid input. For strings that contain non-Base64/Hex-encoded data (e.g. whitespace), the return value might be greater than the length of a &lt;code&gt;Buffer&lt;/code&gt; created from the string.</source>
          <target state="translated">对于 &lt;code&gt;'base64'&lt;/code&gt; 和 &lt;code&gt;'hex'&lt;/code&gt; ，此函数假定输入有效。对于包含非Base64 / Hex编码数据的字符串（例如，空格），返回值可能大于从该字符串创建的 &lt;code&gt;Buffer&lt;/code&gt; 的长度。</target>
        </trans-unit>
        <trans-unit id="9d60a3b84e1c02079ddc1d21cc4e988581081bf3" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;'base64'&lt;/code&gt; and &lt;code&gt;'hex'&lt;/code&gt;, this function assumes valid input. For strings that contain non-base64/hex-encoded data (e.g. whitespace), the return value might be greater than the length of a &lt;code&gt;Buffer&lt;/code&gt; created from the string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce3d9763b5b0e16694af18b9fd21ad80180e71e8" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;Buffer&lt;/code&gt; instances, specifically, whether the underlying &lt;code&gt;ArrayBuffer&lt;/code&gt; can be transferred or cloned depends entirely on how instances were created, which often cannot be reliably determined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5738b1d816bc0019a52ca62db0ce81fdbf60fca3" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;Duplex&lt;/code&gt; streams, &lt;code&gt;objectMode&lt;/code&gt; can be set exclusively for either the &lt;code&gt;Readable&lt;/code&gt; or &lt;code&gt;Writable&lt;/code&gt; side using the &lt;code&gt;readableObjectMode&lt;/code&gt; and &lt;code&gt;writableObjectMode&lt;/code&gt; options respectively.</source>
          <target state="translated">对于 &lt;code&gt;Duplex&lt;/code&gt; 流，可以分别使用 &lt;code&gt;readableObjectMode&lt;/code&gt; &lt;code&gt;objectMode&lt;/code&gt; 和 &lt;code&gt;writableObjectMode&lt;/code&gt; 选项专门为 &lt;code&gt;Readable&lt;/code&gt; 或 &lt;code&gt;Writable&lt;/code&gt; 端设置objectMode。</target>
        </trans-unit>
        <trans-unit id="6a2f669d8368ce836c3edfc9f3610622d501a24a" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;EventEmitter&lt;/code&gt;s this behaves exactly the same as calling &lt;code&gt;.listeners&lt;/code&gt; on the emitter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d795b81e12b054fd6e181ea6bf140a456191ba2" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;EventTarget&lt;/code&gt;s this is the only way to get the event listeners for the event target. This is useful for debugging and diagnostic purposes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="726a3814672a51bb16b132deb5b27c9dfceacadd" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;IPv6&lt;/code&gt;, the minimum &lt;code&gt;MTU&lt;/code&gt; is &lt;code&gt;1280&lt;/code&gt; octets, however, the mandatory minimum fragment reassembly buffer size is &lt;code&gt;1500&lt;/code&gt; octets. The value of &lt;code&gt;68&lt;/code&gt; octets is very small, since most current link layer technologies, like Ethernet, have a minimum &lt;code&gt;MTU&lt;/code&gt; of &lt;code&gt;1500&lt;/code&gt;.</source>
          <target state="translated">对于 &lt;code&gt;IPv6&lt;/code&gt; ，最小 &lt;code&gt;MTU&lt;/code&gt; 为 &lt;code&gt;1280&lt;/code&gt; 个八位位组，但是，强制性最小片段重组缓冲区大小为 &lt;code&gt;1500&lt;/code&gt; 个八位位组。 &lt;code&gt;68&lt;/code&gt; 个八位位组的值非常小，因为大多数当前的链路层技术（如以太网）的最小 &lt;code&gt;MTU&lt;/code&gt; 为 &lt;code&gt;1500&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ef13c995164441a286908cff880af59f92199d7f" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;setImmediate()&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9fac0e3beb08b280ae9fdefb7a5164b9203b742" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;setTimeout()&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="807ed9c50474fd97ddcf0fbafe4910d8a06b93be" translate="yes" xml:space="preserve">
          <source>For &lt;em&gt;all&lt;/em&gt;&lt;a href=&quot;events#events_class_eventemitter&quot;&gt;&lt;code&gt;EventEmitter&lt;/code&gt;&lt;/a&gt; objects, if an &lt;code&gt;'error'&lt;/code&gt; event handler is not provided, the error will be thrown, causing the Node.js process to report an uncaught exception and crash unless either: The &lt;a href=&quot;domain&quot;&gt;&lt;code&gt;domain&lt;/code&gt;&lt;/a&gt; module is used appropriately or a handler has been registered for the &lt;a href=&quot;process#process_event_uncaughtexception&quot;&gt;&lt;code&gt;'uncaughtException'&lt;/code&gt;&lt;/a&gt; event.</source>
          <target state="translated">对于&lt;em&gt;所有&lt;/em&gt;&lt;a href=&quot;events#events_class_eventemitter&quot;&gt; &lt;code&gt;EventEmitter&lt;/code&gt; &lt;/a&gt;对象，如果未提供 &lt;code&gt;'error'&lt;/code&gt; 事件处理程序，则将引发该错误，从而导致Node.js进程报告未捕获的异常并崩溃，除非：正确使用了&lt;a href=&quot;domain&quot;&gt; &lt;code&gt;domain&lt;/code&gt; &lt;/a&gt;模块或已注册处理程序对于&lt;a href=&quot;process#process_event_uncaughtexception&quot;&gt; &lt;code&gt;'uncaughtException'&lt;/code&gt; &lt;/a&gt;事件。</target>
        </trans-unit>
        <trans-unit id="9db239cb39b6243c0a9896e792edcb1f42803ef2" translate="yes" xml:space="preserve">
          <source>For API consistency &lt;code&gt;disable()&lt;/code&gt; also returns the &lt;code&gt;AsyncHook&lt;/code&gt; instance.</source>
          <target state="translated">为了实现API一致性， &lt;code&gt;disable()&lt;/code&gt; 还返回 &lt;code&gt;AsyncHook&lt;/code&gt; 实例。</target>
        </trans-unit>
        <trans-unit id="61a8023e4bdff1f9b5524c44b26bb178ebbb4dd7" translate="yes" xml:space="preserve">
          <source>For APIs that accept options objects, some options might be mandatory. This code is thrown if a required option is missing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3588eddb6018d7625324d1f57375f846d2459584" translate="yes" xml:space="preserve">
          <source>For Brotli-based streams</source>
          <target state="translated">对于基于Brotli的数据流</target>
        </trans-unit>
        <trans-unit id="f745f32641eabb2eb1367bcb56d453946dde71bc" translate="yes" xml:space="preserve">
          <source>For EC keys, the following properties may be defined:</source>
          <target state="translated">对于EC键,可以定义以下属性:</target>
        </trans-unit>
        <trans-unit id="19ff2da1e3a9deef252592555908b062e3d215e3" translate="yes" xml:space="preserve">
          <source>For HTTP/2 Client &lt;code&gt;Http2Session&lt;/code&gt; instances only, the &lt;code&gt;http2session.request()&lt;/code&gt; creates and returns an &lt;code&gt;Http2Stream&lt;/code&gt; instance that can be used to send an HTTP/2 request to the connected server.</source>
          <target state="translated">仅对于HTTP / 2客户端 &lt;code&gt;Http2Session&lt;/code&gt; 实例， &lt;code&gt;http2session.request()&lt;/code&gt; 创建并返回一个 &lt;code&gt;Http2Stream&lt;/code&gt; 实例，该实例可用于向连接的服务器发送HTTP / 2请求。</target>
        </trans-unit>
        <trans-unit id="ac52d39bfe5e210ec0d46e02a56edabe98515f79" translate="yes" xml:space="preserve">
          <source>For HTTP/2 requests using the &lt;code&gt;CONNECT&lt;/code&gt; method, the &lt;code&gt;:authority&lt;/code&gt; pseudo-header is required.</source>
          <target state="translated">对于使用 &lt;code&gt;CONNECT&lt;/code&gt; 方法的HTTP / 2请求，需要 &lt;code&gt;:authority&lt;/code&gt; 伪头。</target>
        </trans-unit>
        <trans-unit id="1235c965de149b89779a05b39e095354458ec8b3" translate="yes" xml:space="preserve">
          <source>For HTTP/2 requests using the &lt;code&gt;CONNECT&lt;/code&gt; method, the &lt;code&gt;:path&lt;/code&gt; pseudo-header is forbidden.</source>
          <target state="translated">对于使用 &lt;code&gt;CONNECT&lt;/code&gt; 方法的HTTP / 2请求，禁止 &lt;code&gt;:path&lt;/code&gt; 伪头。</target>
        </trans-unit>
        <trans-unit id="9f76b25e7f9c52c79a4dd8c33b36c128a6246cd7" translate="yes" xml:space="preserve">
          <source>For HTTP/2 requests using the &lt;code&gt;CONNECT&lt;/code&gt; method, the &lt;code&gt;:scheme&lt;/code&gt; pseudo-header is forbidden.</source>
          <target state="translated">对于使用 &lt;code&gt;CONNECT&lt;/code&gt; 方法的HTTP / 2请求，禁止 &lt;code&gt;:scheme&lt;/code&gt; 伪头。</target>
        </trans-unit>
        <trans-unit id="d7b4dc5adbc9a37cc0fa282f9707d1bf909242a6" translate="yes" xml:space="preserve">
          <source>For IPv4 sockets, this should be the IP configured for the desired physical interface. All packets sent to multicast on the socket will be sent on the interface determined by the most recent successful use of this call.</source>
          <target state="translated">对于IPv4套接字,这应该是为所需物理接口配置的IP。所有发送到套接字上的组播数据包都将被发送到最近一次成功使用该调用所确定的接口上。</target>
        </trans-unit>
        <trans-unit id="da7e5155b506d17e1cd7f7057b5e95a6f05d933c" translate="yes" xml:space="preserve">
          <source>For IPv6 sockets, &lt;code&gt;multicastInterface&lt;/code&gt; should include a scope to indicate the interface as in the examples that follow. In IPv6, individual &lt;code&gt;send&lt;/code&gt; calls can also use explicit scope in addresses, so only packets sent to a multicast address without specifying an explicit scope are affected by the most recent successful use of this call.</source>
          <target state="translated">对于IPv6套接字， &lt;code&gt;multicastInterface&lt;/code&gt; 应该包括一个范围，以指示接口，如以下示例所示。在IPv6中，单个 &lt;code&gt;send&lt;/code&gt; 调用也可以在地址中使用显式作用域，因此，只有在未指定显式作用域的情况下，发送到多播地址的数据包才会受到此调用的最近成功使用的影响。</target>
        </trans-unit>
        <trans-unit id="02597d7f74042275d6b90bcf4683898c152cdc72" translate="yes" xml:space="preserve">
          <source>For IPv6 sockets, multicastInterface should include a scope to indicate the interface as in the examples that follow. In IPv6, individual send calls can also use explicit scope in addresses, so only packets sent to a multicast address without specifying an explicit scope are affected by the most recent successful use of this call.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88c41f0e4ba827786793ba1797a213c932c51a72" translate="yes" xml:space="preserve">
          <source>For IPv6, the minimum &lt;code&gt;MTU&lt;/code&gt; is 1280 octets. However, the mandatory minimum fragment reassembly buffer size is 1500 octets. The value of 68 octets is very small, since most current link layer technologies, like Ethernet, have a minimum &lt;code&gt;MTU&lt;/code&gt; of 1500.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67ba1d2388ff36aedcbc507dd344fe06dc257e1c" translate="yes" xml:space="preserve">
          <source>For Linux developers, the necessary C/C++ toolchain packages are readily available. &lt;a href=&quot;https://gcc.gnu.org&quot;&gt;GCC&lt;/a&gt; is widely used in the Node.js community to build and test across a variety of platforms. For many developers, the &lt;a href=&quot;https://llvm.org&quot;&gt;LLVM&lt;/a&gt; compiler infrastructure is also a good choice.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7079da88ff656dcfb94b7f2c8acf26ac05a4746" translate="yes" xml:space="preserve">
          <source>For Mac developers, &lt;a href=&quot;https://developer.apple.com/xcode/&quot;&gt;Xcode&lt;/a&gt; offers all the required compiler tools. However, it is not necessary to install the entire Xcode IDE. The following command installs the necessary toolchain:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d72f8355ff2ff242fbb93f63d211c16d47fcbf07" translate="yes" xml:space="preserve">
          <source>For Node.js &amp;gt;=4 &lt;code&gt;Buffers&lt;/code&gt; are &lt;code&gt;Uint8Array&lt;/code&gt;s.</source>
          <target state="translated">对于Node.js&amp;gt; = 4， &lt;code&gt;Buffers&lt;/code&gt; 是 &lt;code&gt;Uint8Array&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d91b862c34fefcbbfc2f7f3f050ba30ad9c62cea" translate="yes" xml:space="preserve">
          <source>For Node.js, clients use the same APIs for resumption with session identifiers as for resumption with session tickets. For debugging, if &lt;a href=&quot;#tls_tlssocket_gettlsticket&quot;&gt;&lt;code&gt;tls.TLSSocket.getTLSTicket()&lt;/code&gt;&lt;/a&gt; returns a value, the session data contains a ticket, otherwise it contains client-side session state.</source>
          <target state="translated">对于Node.js，客户端使用与会话标识符的恢复相同的API来使用会话标识符进行恢复。为了进行调试，如果&lt;a href=&quot;#tls_tlssocket_gettlsticket&quot;&gt; &lt;code&gt;tls.TLSSocket.getTLSTicket()&lt;/code&gt; &lt;/a&gt;返回一个值，则会话数据包含票证，否则包含客户端会话状态。</target>
        </trans-unit>
        <trans-unit id="c96e0afc2bb2d26f14d553f20addf6a5c8b0dd68" translate="yes" xml:space="preserve">
          <source>For Node.js, clients wait for the &lt;a href=&quot;#tls_event_session&quot;&gt;&lt;code&gt;'session'&lt;/code&gt;&lt;/a&gt; event to get the session data, and provide the data to the &lt;code&gt;session&lt;/code&gt; option of a subsequent &lt;a href=&quot;#tls_tls_connect_options_callback&quot;&gt;&lt;code&gt;tls.connect()&lt;/code&gt;&lt;/a&gt; to reuse the session. Servers must implement handlers for the &lt;a href=&quot;#tls_event_newsession&quot;&gt;&lt;code&gt;'newSession'&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#tls_event_resumesession&quot;&gt;&lt;code&gt;'resumeSession'&lt;/code&gt;&lt;/a&gt; events to save and restore the session data using the session ID as the lookup key to reuse sessions. To reuse sessions across load balancers or cluster workers, servers must use a shared session cache (such as Redis) in their session handlers.</source>
          <target state="translated">对于Node.js，客户端等待&lt;a href=&quot;#tls_event_session&quot;&gt; &lt;code&gt;'session'&lt;/code&gt; &lt;/a&gt;事件获取会话数据，并将数据提供给后续&lt;a href=&quot;#tls_tls_connect_options_callback&quot;&gt; &lt;code&gt;tls.connect()&lt;/code&gt; &lt;/a&gt;的 &lt;code&gt;session&lt;/code&gt; 选项以重用会话。服务器必须为&lt;a href=&quot;#tls_event_newsession&quot;&gt; &lt;code&gt;'newSession'&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#tls_event_resumesession&quot;&gt; &lt;code&gt;'resumeSession'&lt;/code&gt; &lt;/a&gt;事件实现处理程序，以使用会话ID作为查找键来重用会话来保存和恢复会话数据。要在负载均衡器或群集工作器之间重用会话，服务器必须在其会话处理程序中使用共享的会话缓存（例如Redis）。</target>
        </trans-unit>
        <trans-unit id="1a31791d20d42eff4891173bcddf13197675ee48" translate="yes" xml:space="preserve">
          <source>For RSA keys, the following properties may be defined:</source>
          <target state="translated">对于RSA钥匙,可以定义以下属性:</target>
        </trans-unit>
        <trans-unit id="d77554b430ac3edbc023e55df228aa42aa46a1fd" translate="yes" xml:space="preserve">
          <source>For TCP connections, available &lt;code&gt;options&lt;/code&gt; are:</source>
          <target state="translated">对于TCP连接，可用 &lt;code&gt;options&lt;/code&gt; 为：</target>
        </trans-unit>
        <trans-unit id="5bc85e42d0151641a80b220c2cea7d2ccf0260a9" translate="yes" xml:space="preserve">
          <source>For TLSv1.2 and below, &lt;a href=&quot;#tls_tlssocket_getsession&quot;&gt;&lt;code&gt;tls.TLSSocket.getSession()&lt;/code&gt;&lt;/a&gt; can be called once the handshake is complete. For TLSv1.3, only ticket-based resumption is allowed by the protocol, multiple tickets are sent, and the tickets aren't sent until after the handshake completes. So it is necessary to wait for the &lt;code&gt;'session'&lt;/code&gt; event to get a resumable session. Applications should use the &lt;code&gt;'session'&lt;/code&gt; event instead of &lt;code&gt;getSession()&lt;/code&gt; to ensure they will work for all TLS versions. Applications that only expect to get or use one session should listen for this event only once:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="979dfbcfa700e680c9501372ceaa9ed2a59656aa" translate="yes" xml:space="preserve">
          <source>For TLSv1.3, renegotiation cannot be initiated, it is not supported by the protocol.</source>
          <target state="translated">对于TLSv1.3来说,不能发起重新协商,协议不支持。</target>
        </trans-unit>
        <trans-unit id="3744b46885dc2cf0f0abd7bd5b5b20e9ce947bf9" translate="yes" xml:space="preserve">
          <source>For UDP sockets, causes the &lt;code&gt;dgram.Socket&lt;/code&gt; to listen for datagram messages on a named &lt;code&gt;port&lt;/code&gt; and optional &lt;code&gt;address&lt;/code&gt; that are passed as properties of an &lt;code&gt;options&lt;/code&gt; object passed as the first argument. If &lt;code&gt;port&lt;/code&gt; is not specified or is &lt;code&gt;0&lt;/code&gt;, the operating system will attempt to bind to a random port. If &lt;code&gt;address&lt;/code&gt; is not specified, the operating system will attempt to listen on all addresses. Once binding is complete, a &lt;code&gt;'listening'&lt;/code&gt; event is emitted and the optional &lt;code&gt;callback&lt;/code&gt; function is called.</source>
          <target state="translated">对于UDP套接字，使 &lt;code&gt;dgram.Socket&lt;/code&gt; 在命名 &lt;code&gt;port&lt;/code&gt; 和可选 &lt;code&gt;address&lt;/code&gt; 上侦听数据报消息，这些消息作为作为第一个参数传递的 &lt;code&gt;options&lt;/code&gt; 对象的属性传递。如果未指定 &lt;code&gt;port&lt;/code&gt; 或为 &lt;code&gt;0&lt;/code&gt; ，则操作系统将尝试绑定到随机端口。如果未指定 &lt;code&gt;address&lt;/code&gt; ，则操作系统将尝试侦听所有地址。绑定完成后，将发出 &lt;code&gt;'listening'&lt;/code&gt; 事件并 &lt;code&gt;callback&lt;/code&gt; 可选的回调函数。</target>
        </trans-unit>
        <trans-unit id="63b5a5e0d8c4664472ec4c4a544906d5dce5d01e" translate="yes" xml:space="preserve">
          <source>For UDP sockets, causes the &lt;code&gt;dgram.Socket&lt;/code&gt; to listen for datagram messages on a named &lt;code&gt;port&lt;/code&gt; and optional &lt;code&gt;address&lt;/code&gt;. If &lt;code&gt;port&lt;/code&gt; is not specified or is &lt;code&gt;0&lt;/code&gt;, the operating system will attempt to bind to a random port. If &lt;code&gt;address&lt;/code&gt; is not specified, the operating system will attempt to listen on all addresses. Once binding is complete, a &lt;code&gt;'listening'&lt;/code&gt; event is emitted and the optional &lt;code&gt;callback&lt;/code&gt; function is called.</source>
          <target state="translated">对于UDP套接字，使 &lt;code&gt;dgram.Socket&lt;/code&gt; 在指定 &lt;code&gt;port&lt;/code&gt; 和可选 &lt;code&gt;address&lt;/code&gt; 上侦听数据报消息。如果未指定 &lt;code&gt;port&lt;/code&gt; 或为 &lt;code&gt;0&lt;/code&gt; ，则操作系统将尝试绑定到随机端口。如果未指定 &lt;code&gt;address&lt;/code&gt; ，则操作系统将尝试侦听所有地址。绑定完成后，将发出 &lt;code&gt;'listening'&lt;/code&gt; 事件并 &lt;code&gt;callback&lt;/code&gt; 可选的回调函数。</target>
        </trans-unit>
        <trans-unit id="1e0ee3ae7e425979df5dd17216782c2ca6246fe6" translate="yes" xml:space="preserve">
          <source>For Windows developers, &lt;a href=&quot;https://visualstudio.microsoft.com&quot;&gt;Visual Studio&lt;/a&gt; offers all the required compiler tools. However, it is not necessary to install the entire Visual Studio IDE. The following command installs the necessary toolchain:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f10d6312c65a10e40478628490edb2096732122" translate="yes" xml:space="preserve">
          <source>For a client, returns the TLS session ticket if one is available, or &lt;code&gt;undefined&lt;/code&gt;. For a server, always returns &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">对于客户端，返回TLS会话票证（如果有的话），或者返回 &lt;code&gt;undefined&lt;/code&gt; 。对于服务器，始终返回 &lt;code&gt;undefined&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a16be6b0edd494d3453e8550a0985bf92717f07d" translate="yes" xml:space="preserve">
          <source>For a complete &lt;code&gt;require.resolve&lt;/code&gt; replacement, there is a flagged experimental &lt;a href=&quot;#esm_import_meta_resolve_specifier_parent&quot;&gt;&lt;code&gt;import.meta.resolve&lt;/code&gt;&lt;/a&gt; API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="630f6e17ed438455cfbf701cc3919cfedd516f9b" translate="yes" xml:space="preserve">
          <source>For a file &lt;code&gt;foo.js&lt;/code&gt;, this will be &lt;code&gt;true&lt;/code&gt; if run via &lt;code&gt;node foo.js&lt;/code&gt;, but &lt;code&gt;false&lt;/code&gt; if run by &lt;code&gt;require('./foo')&lt;/code&gt;.</source>
          <target state="translated">对于文件 &lt;code&gt;foo.js&lt;/code&gt; ，这将是 &lt;code&gt;true&lt;/code&gt; ，如果通过运行 &lt;code&gt;node foo.js&lt;/code&gt; ，但 &lt;code&gt;false&lt;/code&gt; 如果运行 &lt;code&gt;require('./foo')&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="092b0e56ba5f0c7434ace0be825451abc0fc5031" translate="yes" xml:space="preserve">
          <source>For a main program this is not necessarily the same as the file name used in the command line.</source>
          <target state="translated">对于主程序来说,这不一定与命令行中使用的文件名相同。</target>
        </trans-unit>
        <trans-unit id="094a7aed80ffd76ce1da617382947687f2caf83d" translate="yes" xml:space="preserve">
          <source>For a server listening on a pipe or Unix domain socket, the name is returned as a string.</source>
          <target state="translated">对于在管道或Unix域套接字上监听的服务器,名称将以字符串形式返回。</target>
        </trans-unit>
        <trans-unit id="b77166bb59c03f091498405867db62e6d7e2ce9f" translate="yes" xml:space="preserve">
          <source>For a timer that was previously started by calling &lt;a href=&quot;#console_console_time_label&quot;&gt;&lt;code&gt;console.time()&lt;/code&gt;&lt;/a&gt;, prints the elapsed time and other &lt;code&gt;data&lt;/code&gt; arguments to &lt;code&gt;stdout&lt;/code&gt;:</source>
          <target state="translated">对于以前通过调用&lt;a href=&quot;#console_console_time_label&quot;&gt; &lt;code&gt;console.time()&lt;/code&gt; &lt;/a&gt;启动的计时器，将经过的时间和其他 &lt;code&gt;data&lt;/code&gt; 参数 &lt;code&gt;stdout&lt;/code&gt; 到stdout：</target>
        </trans-unit>
        <trans-unit id="d97dbfb76da7ef6e4ade39dc2ca4fda8cbd356aa" translate="yes" xml:space="preserve">
          <source>For advanced line-editors, start Node.js with the environment variable &lt;code&gt;NODE_NO_READLINE=1&lt;/code&gt;. This will start the main and debugger REPL in canonical terminal settings, which will allow use with &lt;code&gt;rlwrap&lt;/code&gt;.</source>
          <target state="translated">对于高级线编辑器，与所述环境变量开始的Node.js &lt;code&gt;NODE_NO_READLINE=1&lt;/code&gt; 。这将在规范的终端设置中启动main和debugger REPL，从而允许与 &lt;code&gt;rlwrap&lt;/code&gt; 一起使用。</target>
        </trans-unit>
        <trans-unit id="956902aa84cfb91f426f18cd11e77e87658eab1e" translate="yes" xml:space="preserve">
          <source>For all other headers, the values are joined together with ', '.</source>
          <target state="translated">对于所有其他的标题,其值都用'、'连接起来。</target>
        </trans-unit>
        <trans-unit id="5f9e78e07b8e3d47493e082f3a0b59b361f8d9f4" translate="yes" xml:space="preserve">
          <source>For all string values of &lt;code&gt;urlObject.protocol&lt;/code&gt; that &lt;em&gt;do not end&lt;/em&gt; with an ASCII colon (&lt;code&gt;:&lt;/code&gt;) character, the literal string &lt;code&gt;:&lt;/code&gt; will be appended to &lt;code&gt;result&lt;/code&gt;.</source>
          <target state="translated">有关所有字符串值 &lt;code&gt;urlObject.protocol&lt;/code&gt; 即&lt;em&gt;不结束&lt;/em&gt;与ASCII冒号（ &lt;code&gt;:&lt;/code&gt; ）字符，文字串 &lt;code&gt;:&lt;/code&gt; 将被附加到 &lt;code&gt;result&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7ca59737c208aca1081310d096f89773e74cabed" translate="yes" xml:space="preserve">
          <source>For all the mechanisms, when resumption fails, servers will create new sessions. Since failing to resume the session does not cause TLS/HTTPS connection failures, it is easy to not notice unnecessarily poor TLS performance. The OpenSSL CLI can be used to verify that servers are resuming sessions. Use the &lt;code&gt;-reconnect&lt;/code&gt; option to &lt;code&gt;openssl s_client&lt;/code&gt;, for example:</source>
          <target state="translated">对于所有机制，当恢复失败时，服务器将创建新的会话。由于无法恢复会话不会导致TLS / HTTPS连接失败，因此很容易就不会注意到不必要的TLS性能下降。OpenSSL CLI可用于验证服务器是否正在恢复会话。使用 &lt;code&gt;-reconnect&lt;/code&gt; 选项打开 &lt;code&gt;openssl s_client&lt;/code&gt; ，例如：</target>
        </trans-unit>
        <trans-unit id="a0b60983e76d7f440441e08547a1823af1549878" translate="yes" xml:space="preserve">
          <source>For an example of running a &quot;full-featured&quot; (&lt;code&gt;terminal&lt;/code&gt;) REPL over a &lt;code&gt;net.Server&lt;/code&gt; and &lt;code&gt;net.Socket&lt;/code&gt; instance, see: &lt;a href=&quot;https://gist.github.com/TooTallNate/2209310&quot;&gt;https://gist.github.com/TooTallNate/2209310&lt;/a&gt;.</source>
          <target state="translated">有关通过 &lt;code&gt;net.Server&lt;/code&gt; 和 &lt;code&gt;net.Socket&lt;/code&gt; 实例运行&amp;ldquo;全功能&amp;rdquo;（ &lt;code&gt;terminal&lt;/code&gt; ）REPL的示例，请参见：&lt;a href=&quot;https://gist.github.com/TooTallNate/2209310&quot;&gt;https&lt;/a&gt; : //gist.github.com/TooTallNate/2209310。</target>
        </trans-unit>
        <trans-unit id="07a0aeba9b4457e77a58461fba017f92063a71cb" translate="yes" xml:space="preserve">
          <source>For an example of running a REPL instance over &lt;a href=&quot;https://curl.haxx.se/docs/manpage.html&quot;&gt;&lt;code&gt;curl(1)&lt;/code&gt;&lt;/a&gt;, see: &lt;a href=&quot;https://gist.github.com/TooTallNate/2053342&quot;&gt;https://gist.github.com/TooTallNate/2053342&lt;/a&gt;.</source>
          <target state="translated">有关在&lt;a href=&quot;https://curl.haxx.se/docs/manpage.html&quot;&gt; &lt;code&gt;curl(1)&lt;/code&gt; &lt;/a&gt;上运行REPL实例的示例，请参见：&lt;a href=&quot;https://gist.github.com/TooTallNate/2053342&quot;&gt;https&lt;/a&gt; : //gist.github.com/TooTallNate/2053342。</target>
        </trans-unit>
        <trans-unit id="e4be3dea74f8c5394f0d772060dd8dfe750945e2" translate="yes" xml:space="preserve">
          <source>For asymmetric keys, the &lt;code&gt;options&lt;/code&gt; parameter is used to determine the export format.</source>
          <target state="translated">对于非对称密钥， &lt;code&gt;options&lt;/code&gt; 参数用于确定导出格式。</target>
        </trans-unit>
        <trans-unit id="6d94d466d7937d23e8d706b37324e3a1192a7b33" translate="yes" xml:space="preserve">
          <source>For asymmetric keys, this property represents the type of the key. Supported key types are:</source>
          <target state="translated">对于非对称密钥,此属性表示密钥的类型。支持的钥匙类型有:</target>
        </trans-unit>
        <trans-unit id="a4ad1d8fe67baf4433fd03726b4832dd9a01cc76" translate="yes" xml:space="preserve">
          <source>For asynchronous cleanup, &lt;a href=&quot;#n_api_napi_add_async_cleanup_hook&quot;&gt;&lt;code&gt;napi_add_async_cleanup_hook&lt;/code&gt;&lt;/a&gt; is available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec619ed21139aa754437a9abbf846fa6dc1227ce" translate="yes" xml:space="preserve">
          <source>For available options, see &lt;a href=&quot;#net_new_net_socket_options&quot;&gt;&lt;code&gt;new net.Socket([options])&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#net_socket_connect_options_connectlistener&quot;&gt;&lt;code&gt;socket.connect(options[, connectListener])&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">有关可用选项，请参见&lt;a href=&quot;#net_new_net_socket_options&quot;&gt; &lt;code&gt;new net.Socket([options])&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#net_socket_connect_options_connectlistener&quot;&gt; &lt;code&gt;socket.connect(options[, connectListener])&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e719e3fc1d310a7e64c540e90b09027f0d710116" translate="yes" xml:space="preserve">
          <source>For backward compatibility reasons, removing &lt;a href=&quot;#stream_event_data&quot;&gt;&lt;code&gt;'data'&lt;/code&gt;&lt;/a&gt; event handlers will &lt;strong&gt;not&lt;/strong&gt; automatically pause the stream. Also, if there are piped destinations, then calling &lt;a href=&quot;#stream_readable_pause&quot;&gt;&lt;code&gt;stream.pause()&lt;/code&gt;&lt;/a&gt; will not guarantee that the stream will &lt;em&gt;remain&lt;/em&gt; paused once those destinations drain and ask for more data.</source>
          <target state="translated">出于向后兼容性的原因，删除&lt;a href=&quot;#stream_event_data&quot;&gt; &lt;code&gt;'data'&lt;/code&gt; &lt;/a&gt;事件处理程序将&lt;strong&gt;不会&lt;/strong&gt;自动暂停流。另外，如果有管道目标，则调用&lt;a href=&quot;#stream_readable_pause&quot;&gt; &lt;code&gt;stream.pause()&lt;/code&gt; &lt;/a&gt;不能保证一旦这些目标耗尽并要求更多数据，流就将&lt;em&gt;保持&lt;/em&gt;暂停状态。</target>
        </trans-unit>
        <trans-unit id="8467f6f4c373a250fecab051adc8e06066b9452a" translate="yes" xml:space="preserve">
          <source>For backward compatibility, &lt;code&gt;res&lt;/code&gt; will only emit &lt;code&gt;'error'&lt;/code&gt; if there is an &lt;code&gt;'error'&lt;/code&gt; listener registered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3b572ea5a61b0e2dd4b314ad5fd04ca49678855" translate="yes" xml:space="preserve">
          <source>For better compatibility with existing usage in the JS ecosystem, Node.js in addition attempts to determine the CommonJS named exports of every imported CommonJS module to provide them as separate ES module exports using a static analysis process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0aa0856c9a116c6cf6dca4bd616192d4bafd000" translate="yes" xml:space="preserve">
          <source>For both types, available &lt;code&gt;options&lt;/code&gt; include:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="391e7d798da035e1df8b3a58985f8189e10524aa" translate="yes" xml:space="preserve">
          <source>For certain use cases, such as automating shell scripts, the &lt;a href=&quot;#child_process_synchronous_process_creation&quot;&gt;synchronous counterparts&lt;/a&gt; may be more convenient. In many cases, however, the synchronous methods can have significant impact on performance due to stalling the event loop while spawned processes complete.</source>
          <target state="translated">对于某些用例，例如自动执行Shell脚本，&lt;a href=&quot;#child_process_synchronous_process_creation&quot;&gt;同步副本&lt;/a&gt;可能会更加方便。但是，在许多情况下，由于在生成的进程完成时停止了事件循环，因此同步方法可能会对性能产生重大影响。</target>
        </trans-unit>
        <trans-unit id="92fed84099ae298e282510b979a03e0e6d087d46" translate="yes" xml:space="preserve">
          <source>For compatibility with &lt;a href=&quot;http&quot;&gt;HTTP/1&lt;/a&gt;, a human-readable &lt;code&gt;statusMessage&lt;/code&gt; may be passed as the second argument. However, because the &lt;code&gt;statusMessage&lt;/code&gt; has no meaning within HTTP/2, the argument will have no effect and a process warning will be emitted.</source>
          <target state="translated">为了与&lt;a href=&quot;http&quot;&gt;HTTP / 1&lt;/a&gt;兼容，可以将人类可读的 &lt;code&gt;statusMessage&lt;/code&gt; 作为第二个参数传递。但是，由于 &lt;code&gt;statusMessage&lt;/code&gt; 在HTTP / 2中没有意义，因此该参数无效，并且将发出过程警告。</target>
        </trans-unit>
        <trans-unit id="31e384f06cf594d15b7f90d53096bd4481fa0bc8" translate="yes" xml:space="preserve">
          <source>For completeness there is also &lt;code&gt;--input-type=commonjs&lt;/code&gt;, for explicitly running string input as CommonJS. This is the default behavior if &lt;code&gt;--input-type&lt;/code&gt; is unspecified.</source>
          <target state="translated">为了完整性，还有 &lt;code&gt;--input-type=commonjs&lt;/code&gt; ，用于将字符串输入作为CommonJS显式运行。如果未指定 &lt;code&gt;--input-type&lt;/code&gt; ,则这是默认行为。</target>
        </trans-unit>
        <trans-unit id="98fc04d7d5785d371edbb41ee50020498b1a136b" translate="yes" xml:space="preserve">
          <source>For convenience, &lt;code&gt;options.stdio&lt;/code&gt; may be one of the following strings:</source>
          <target state="translated">为了方便起见， &lt;code&gt;options.stdio&lt;/code&gt; 可能是以下字符串之一：</target>
        </trans-unit>
        <trans-unit id="0bed0fbf79e83dbe9b208684ee2d517bec0c11bf" translate="yes" xml:space="preserve">
          <source>For convenience, the &lt;code&gt;child_process&lt;/code&gt; module provides a handful of synchronous and asynchronous alternatives to &lt;a href=&quot;#child_process_child_process_spawn_command_args_options&quot;&gt;&lt;code&gt;child_process.spawn()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#child_process_child_process_spawnsync_command_args_options&quot;&gt;&lt;code&gt;child_process.spawnSync()&lt;/code&gt;&lt;/a&gt;. Each of these alternatives are implemented on top of &lt;a href=&quot;#child_process_child_process_spawn_command_args_options&quot;&gt;&lt;code&gt;child_process.spawn()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#child_process_child_process_spawnsync_command_args_options&quot;&gt;&lt;code&gt;child_process.spawnSync()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">为了方便起见， &lt;code&gt;child_process&lt;/code&gt; 模块为&lt;a href=&quot;#child_process_child_process_spawn_command_args_options&quot;&gt; &lt;code&gt;child_process.spawn()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#child_process_child_process_spawnsync_command_args_options&quot;&gt; &lt;code&gt;child_process.spawnSync()&lt;/code&gt; &lt;/a&gt;提供了一些同步和异步替代方法。这些选择中的每一个都在&lt;a href=&quot;#child_process_child_process_spawn_command_args_options&quot;&gt; &lt;code&gt;child_process.spawn()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#child_process_child_process_spawnsync_command_args_options&quot;&gt; &lt;code&gt;child_process.spawnSync()&lt;/code&gt; &lt;/a&gt;之上实现。</target>
        </trans-unit>
        <trans-unit id="057dd38e823bb2e1cba139ab7426a8ac0df9e0f5" translate="yes" xml:space="preserve">
          <source>For detailed information, see the documentation of the asynchronous version of this API: &lt;a href=&quot;#fs_fs_chmod_path_mode_callback&quot;&gt;&lt;code&gt;fs.chmod()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">有关详细信息，请参见此API的异步版本的文档：&lt;a href=&quot;#fs_fs_chmod_path_mode_callback&quot;&gt; &lt;code&gt;fs.chmod()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2f55866a6066caed39753b96f223b49821bcdf3e" translate="yes" xml:space="preserve">
          <source>For detailed information, see the documentation of the asynchronous version of this API: &lt;a href=&quot;#fs_fs_ftruncate_fd_len_callback&quot;&gt;&lt;code&gt;fs.ftruncate()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">有关详细信息，请参见此API的异步版本的文档：&lt;a href=&quot;#fs_fs_ftruncate_fd_len_callback&quot;&gt; &lt;code&gt;fs.ftruncate()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7966b350e8f4af364eac8a1a2f1cfe584ac00d9c" translate="yes" xml:space="preserve">
          <source>For detailed information, see the documentation of the asynchronous version of this API: &lt;a href=&quot;#fs_fs_mkdtemp_prefix_options_callback&quot;&gt;&lt;code&gt;fs.mkdtemp()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">有关详细信息，请参见此API的异步版本的文档：&lt;a href=&quot;#fs_fs_mkdtemp_prefix_options_callback&quot;&gt; &lt;code&gt;fs.mkdtemp()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="345ea263ca7cd8151a65a6e51b81b5683256d83d" translate="yes" xml:space="preserve">
          <source>For detailed information, see the documentation of the asynchronous version of this API: &lt;a href=&quot;#fs_fs_open_path_flags_mode_callback&quot;&gt;&lt;code&gt;fs.open()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">有关详细信息，请参见此API的异步版本的文档：&lt;a href=&quot;#fs_fs_open_path_flags_mode_callback&quot;&gt; &lt;code&gt;fs.open()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="686d2f045c616932d3ff22cc8786f2b1c1995cbc" translate="yes" xml:space="preserve">
          <source>For detailed information, see the documentation of the asynchronous version of this API: &lt;a href=&quot;#fs_fs_read_fd_buffer_offset_length_position_callback&quot;&gt;&lt;code&gt;fs.read()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">有关详细信息，请参见此API的异步版本的文档：&lt;a href=&quot;#fs_fs_read_fd_buffer_offset_length_position_callback&quot;&gt; &lt;code&gt;fs.read()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1a0b8688ce27c0c13b0e5e638b026b6e915dcedb" translate="yes" xml:space="preserve">
          <source>For detailed information, see the documentation of the asynchronous version of this API: &lt;a href=&quot;#fs_fs_readfile_path_options_callback&quot;&gt;&lt;code&gt;fs.readFile()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">有关详细信息，请参见此API的异步版本的文档：&lt;a href=&quot;#fs_fs_readfile_path_options_callback&quot;&gt; &lt;code&gt;fs.readFile()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0ee160f8866cb5dd20b9cf3fc3081d8afad49124" translate="yes" xml:space="preserve">
          <source>For detailed information, see the documentation of the asynchronous version of this API: &lt;a href=&quot;#fs_fs_readv_fd_buffers_position_callback&quot;&gt;&lt;code&gt;fs.readv()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="026100d5ae38e39e11318cc2cb6d97aac4353ca6" translate="yes" xml:space="preserve">
          <source>For detailed information, see the documentation of the asynchronous version of this API: &lt;a href=&quot;#fs_fs_realpath_path_options_callback&quot;&gt;&lt;code&gt;fs.realpath()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">有关详细信息，请参见此API的异步版本的文档：&lt;a href=&quot;#fs_fs_realpath_path_options_callback&quot;&gt; &lt;code&gt;fs.realpath()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c7177737b8cf18949166e6d0bb6268a458923d13" translate="yes" xml:space="preserve">
          <source>For detailed information, see the documentation of the asynchronous version of this API: &lt;a href=&quot;#fs_fs_symlink_target_path_type_callback&quot;&gt;&lt;code&gt;fs.symlink()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">有关详细信息，请参见此API的异步版本的文档：&lt;a href=&quot;#fs_fs_symlink_target_path_type_callback&quot;&gt; &lt;code&gt;fs.symlink()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4720f7b4719a50a736dc74b6b468dc1ad01a1e0f" translate="yes" xml:space="preserve">
          <source>For detailed information, see the documentation of the asynchronous version of this API: &lt;a href=&quot;#fs_fs_utimes_path_atime_mtime_callback&quot;&gt;&lt;code&gt;fs.utimes()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">有关详细信息，请参见此API的异步版本的文档：&lt;a href=&quot;#fs_fs_utimes_path_atime_mtime_callback&quot;&gt; &lt;code&gt;fs.utimes()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="48e8602ce9e660170055a6f47c4dc1959e90dce6" translate="yes" xml:space="preserve">
          <source>For detailed information, see the documentation of the asynchronous version of this API: &lt;a href=&quot;#fs_fs_write_fd_buffer_offset_length_position_callback&quot;&gt;&lt;code&gt;fs.write(fd, buffer...)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">有关详细信息，请参见此API的异步版本的文档：&lt;a href=&quot;#fs_fs_write_fd_buffer_offset_length_position_callback&quot;&gt; &lt;code&gt;fs.write(fd, buffer...)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="915a4eebfd2351966e0f2be56e64fc6fd86cdd29" translate="yes" xml:space="preserve">
          <source>For detailed information, see the documentation of the asynchronous version of this API: &lt;a href=&quot;#fs_fs_write_fd_string_position_encoding_callback&quot;&gt;&lt;code&gt;fs.write(fd, string...)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">有关详细信息，请参见此API的异步版本的文档：&lt;a href=&quot;#fs_fs_write_fd_string_position_encoding_callback&quot;&gt; &lt;code&gt;fs.write(fd, string...)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cef3142dfe3ea04c130dffb0f747452a95966d87" translate="yes" xml:space="preserve">
          <source>For detailed information, see the documentation of the asynchronous version of this API: &lt;a href=&quot;#fs_fs_writefile_file_data_options_callback&quot;&gt;&lt;code&gt;fs.writeFile()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">有关详细信息，请参见此API的异步版本的文档：&lt;a href=&quot;#fs_fs_writefile_file_data_options_callback&quot;&gt; &lt;code&gt;fs.writeFile()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d6bd81a73f2e605eb60c72787c48b4ebfb0a3515" translate="yes" xml:space="preserve">
          <source>For detailed information, see the documentation of the asynchronous version of this API: &lt;a href=&quot;#fs_fs_writev_fd_buffers_position_callback&quot;&gt;&lt;code&gt;fs.writev()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">有关详细信息，请参见此API的异步版本的文档：&lt;a href=&quot;#fs_fs_writev_fd_buffers_position_callback&quot;&gt; &lt;code&gt;fs.writev()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cb460aea3653b08568036649165ab5edfff25bc7" translate="yes" xml:space="preserve">
          <source>For detailed information, see the documentation of the asynchronous version of this API: &lt;a href=&quot;fs#fs_fs_exists_path_callback&quot;&gt;&lt;code&gt;fs.exists()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">有关详细信息，请参见此API的异步版本的文档：&lt;a href=&quot;fs#fs_fs_exists_path_callback&quot;&gt; &lt;code&gt;fs.exists()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a31e5f2151cc75df2278c49c6c634780f443d5f2" translate="yes" xml:space="preserve">
          <source>For details of how to read from &lt;code&gt;stdin&lt;/code&gt; see &lt;a href=&quot;stream#stream_readable_read_size&quot;&gt;&lt;code&gt;readable.read()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5548576daa00995aa2b7df9a676d077c05f285e4" translate="yes" xml:space="preserve">
          <source>For details on these package resolution rules that apply to bare specifiers in the Node.js module resolution, see the &lt;a href=&quot;packages&quot;&gt;packages documentation&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f4255927b82eac232a3604f861da1b4f744c0e1" translate="yes" xml:space="preserve">
          <source>For duplicate &lt;code&gt;cookie&lt;/code&gt; headers, the values are joined together with '; '.</source>
          <target state="translated">对于重复的 &lt;code&gt;cookie&lt;/code&gt; 标头，这些值以'; '。</target>
        </trans-unit>
        <trans-unit id="9a215762dd9627461e893eb50e7ebc4a894bd5b4" translate="yes" xml:space="preserve">
          <source>For each item &lt;em&gt;targetValue&lt;/em&gt; in &lt;em&gt;target&lt;/em&gt;, do</source>
          <target state="translated">对于每个项目&lt;em&gt;targetValue&lt;/em&gt;的&lt;em&gt;目标&lt;/em&gt;，做</target>
        </trans-unit>
        <trans-unit id="5c2ec175e11de8ee7e10fd9de87958e9ab2fbadf" translate="yes" xml:space="preserve">
          <source>For each key &lt;em&gt;directory&lt;/em&gt; in &lt;em&gt;directoryKeys&lt;/em&gt;, do</source>
          <target state="translated">对于&lt;em&gt;directoryKeys&lt;/em&gt;中的每个键&lt;em&gt;目录&lt;/em&gt;，执行</target>
        </trans-unit>
        <trans-unit id="1d3069d86c41a494c783d4b2dd1fe82b5936547f" translate="yes" xml:space="preserve">
          <source>For each key &lt;em&gt;expansionKey&lt;/em&gt; in &lt;em&gt;expansionKeys&lt;/em&gt;, do</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb4fb1b39fdc4354722af5dcbbc8e4232478dc4a" translate="yes" xml:space="preserve">
          <source>For each property &lt;em&gt;p&lt;/em&gt; of &lt;em&gt;target&lt;/em&gt;, in object insertion order as,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57ba04e0b7bcbfc8b08ec80a0e3f27a752793ffd" translate="yes" xml:space="preserve">
          <source>For efficiency reasons, Node.js normally buffers the request headers until &lt;code&gt;request.end()&lt;/code&gt; is called or the first chunk of request data is written. It then tries to pack the request headers and data into a single TCP packet.</source>
          <target state="translated">出于效率原因，Node.js通常会缓冲请求标头，直到调用 &lt;code&gt;request.end()&lt;/code&gt; 或写入请求数据的第一块为止。然后，它尝试将请求标头和数据打包到单个TCP数据包中。</target>
        </trans-unit>
        <trans-unit id="55784e38364a3c74fb65e18506c562ba93681880" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;--pending-deprecation&lt;/code&gt; is equivalent to &lt;code&gt;--pending_deprecation&lt;/code&gt;.</source>
          <target state="translated">例如，-- &lt;code&gt;--pending-deprecation&lt;/code&gt; 等效于 &lt;code&gt;--pending_deprecation&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="81efa59dff5974501c74872b767ce28b3355d17d" translate="yes" xml:space="preserve">
          <source>For example, a dummy loader to load JavaScript restricted to browser resolution rules with only JS file extension and Node.js builtin modules support could be written:</source>
          <target state="translated">例如,可以写一个虚拟加载器来加载只支持JS文件扩展名和Node.js内置模块的浏览器解析规则的JavaScript。</target>
        </trans-unit>
        <trans-unit id="f1fd6f29efda8714a94ce5aafcd3a0076cfabc91" translate="yes" xml:space="preserve">
          <source>For example, a package that wants to provide different ES module exports for &lt;code&gt;require()&lt;/code&gt; and &lt;code&gt;import&lt;/code&gt; can be written:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2e61c77fd207165adf6649bf4866952e2f3edfa" translate="yes" xml:space="preserve">
          <source>For example, an &lt;code&gt;index.mjs&lt;/code&gt; containing:</source>
          <target state="translated">例如，一个 &lt;code&gt;index.mjs&lt;/code&gt; 包含：</target>
        </trans-unit>
        <trans-unit id="791196aee4b2d4aa0012058507fbdff766fc7664" translate="yes" xml:space="preserve">
          <source>For example, assuming the following script for &lt;code&gt;process-args.js&lt;/code&gt;:</source>
          <target state="translated">例如，假设以下脚本用于 &lt;code&gt;process-args.js&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="b56e15494fee7d0716e0d023ff2d5d693fb34575" translate="yes" xml:space="preserve">
          <source>For example, consider a CommonJS module written:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="897f4de2b32102497cc28727717c94d918135994" translate="yes" xml:space="preserve">
          <source>For example, consider the following code:</source>
          <target state="translated">例如,考虑以下代码。</target>
        </trans-unit>
        <trans-unit id="7cd48e979ca8c1e29635d97a1d94e0bde8b21e51" translate="yes" xml:space="preserve">
          <source>For example, given the following directory structure:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8204daa0aa3b64001a20242119f9653776f37906" translate="yes" xml:space="preserve">
          <source>For example, given the following folder structure:</source>
          <target state="translated">例如,给定以下文件夹结构。</target>
        </trans-unit>
        <trans-unit id="edbcaae834047f2d42e2dc73d0381d1160281bb3" translate="yes" xml:space="preserve">
          <source>For example, if &lt;code&gt;fs.writeFile()&lt;/code&gt; is called twice in a row, first to write the string &lt;code&gt;'Hello'&lt;/code&gt;, then to write the string &lt;code&gt;', World'&lt;/code&gt;, the file would contain &lt;code&gt;'Hello, World'&lt;/code&gt;, and might contain some of the file's original data (depending on the size of the original file, and the position of the file descriptor). If a file name had been used instead of a descriptor, the file would be guaranteed to contain only &lt;code&gt;', World'&lt;/code&gt;.</source>
          <target state="translated">例如，如果 &lt;code&gt;fs.writeFile()&lt;/code&gt; 两次调用fs.writeFile（），则首先写入字符串 &lt;code&gt;'Hello'&lt;/code&gt; ，然后写入字符串 &lt;code&gt;', World'&lt;/code&gt; ，该文件将包含 &lt;code&gt;'Hello, World'&lt;/code&gt; ，并且可能包含一些文件的原始数据（取决于原始文件的大小和文件描述符的位置）。如果使用文件名而不是描述符，则将保证该文件仅包含 &lt;code&gt;', World'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="83817681c437a9bbd3db2ac07540c577eeb01fe0" translate="yes" xml:space="preserve">
          <source>For example, if an attacker can cause an application to receive a number where a string is expected, the application may call &lt;code&gt;new Buffer(100)&lt;/code&gt; instead of &lt;code&gt;new Buffer(&quot;100&quot;)&lt;/code&gt;, it will allocate a 100 byte buffer instead of allocating a 3 byte buffer with content &lt;code&gt;&quot;100&quot;&lt;/code&gt;. This is commonly possible using JSON API calls. Since JSON distinguishes between numeric and string types, it allows injection of numbers where a naive application might expect to always receive a string. Before Node.js 8.0.0, the 100 byte buffer might contain arbitrary pre-existing in-memory data, so may be used to expose in-memory secrets to a remote attacker. Since Node.js 8.0.0, exposure of memory cannot occur because the data is zero-filled. However, other attacks are still possible, such as causing very large buffers to be allocated by the server, leading to performance degradation or crashing on memory exhaustion.</source>
          <target state="translated">例如，如果攻击者可以使应用程序接收期望包含字符串的数字，则该应用程序可以调用 &lt;code&gt;new Buffer(100)&lt;/code&gt; 而不是 &lt;code&gt;new Buffer(&quot;100&quot;)&lt;/code&gt; ，它将分配一个100字节的缓冲区，而不是分配一个3字节缓冲区，内容为 &lt;code&gt;&quot;100&quot;&lt;/code&gt; 。通常可以使用JSON API调用。由于JSON区分数字类型和字符串类型，因此它允许在朴素的应用程序期望总是接收字符串的地方注入数字。在Node.js 8.0.0之前，100字节的缓冲区可能包含任意预先存在的内存中数据，因此可用于向远程攻击者公开内存中的机密。从Node.js 8.0.0开始，由于数据为零填充，因此不会发生内存泄漏。但是，其他攻击仍然可能，例如导致服务器分配非常大的缓冲区，从而导致性能下降或内存耗尽而崩溃。</target>
        </trans-unit>
        <trans-unit id="47b1704b6ea7680c0c55b9d52c9e216c6cad8a45" translate="yes" xml:space="preserve">
          <source>For example, if an attacker can cause an application to receive a number where a string is expected, the application may call &lt;code&gt;new Buffer(100)&lt;/code&gt; instead of &lt;code&gt;new Buffer(&quot;100&quot;)&lt;/code&gt;, leading it to allocate a 100 byte buffer instead of allocating a 3 byte buffer with content &lt;code&gt;&quot;100&quot;&lt;/code&gt;. This is commonly possible using JSON API calls. Since JSON distinguishes between numeric and string types, it allows injection of numbers where a naively written application that does not validate its input sufficiently might expect to always receive a string. Before Node.js 8.0.0, the 100 byte buffer might contain arbitrary pre-existing in-memory data, so may be used to expose in-memory secrets to a remote attacker. Since Node.js 8.0.0, exposure of memory cannot occur because the data is zero-filled. However, other attacks are still possible, such as causing very large buffers to be allocated by the server, leading to performance degradation or crashing on memory exhaustion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1025750a0bfba66023ecadd2e06770fcbd925fd" translate="yes" xml:space="preserve">
          <source>For example, if the file at &lt;code&gt;'/home/ry/projects/foo.js'&lt;/code&gt; called &lt;code&gt;require('bar.js')&lt;/code&gt;, then Node.js would look in the following locations, in this order:</source>
          <target state="translated">例如，如果位于 &lt;code&gt;'/home/ry/projects/foo.js'&lt;/code&gt; 的文件名为 &lt;code&gt;require('bar.js')&lt;/code&gt; ，则Node.js将按以下顺序查找以下位置：</target>
        </trans-unit>
        <trans-unit id="3b0f2056b45a2559c1472d535117f55bdedb6244" translate="yes" xml:space="preserve">
          <source>For example, in the parent script:</source>
          <target state="translated">例如,在母脚本中。</target>
        </trans-unit>
        <trans-unit id="67a0d1e33770f9ea91b472de0a7268d921bab538" translate="yes" xml:space="preserve">
          <source>For example, looking up &lt;code&gt;iana.org&lt;/code&gt;.</source>
          <target state="translated">例如，查找 &lt;code&gt;iana.org&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5f9b50abb71fe1243d71bc3deae82a5ec37fd08d" translate="yes" xml:space="preserve">
          <source>For example, on POSIX:</source>
          <target state="translated">例如,在POSIX上。</target>
        </trans-unit>
        <trans-unit id="80772b48d8fee4f56aa373bb49a7eceb85d6d0a7" translate="yes" xml:space="preserve">
          <source>For example, suppose we were making a module called &lt;code&gt;a.js&lt;/code&gt;:</source>
          <target state="translated">例如，假设我们正在制作一个名为 &lt;code&gt;a.js&lt;/code&gt; 的模块：</target>
        </trans-unit>
        <trans-unit id="9ba613f62c42163b625f2f325ed7988a5b30d289" translate="yes" xml:space="preserve">
          <source>For example, the ASCII space character (&lt;code&gt;' '&lt;/code&gt;) is encoded as &lt;code&gt;%20&lt;/code&gt;. The ASCII forward slash (&lt;code&gt;/&lt;/code&gt;) character is encoded as &lt;code&gt;%3C&lt;/code&gt;.</source>
          <target state="translated">例如，ASCII空格字符（ &lt;code&gt;' '&lt;/code&gt; ）被编码为 &lt;code&gt;%20&lt;/code&gt; 。ASCII正斜杠（ &lt;code&gt;/&lt;/code&gt; ）字符编码为 &lt;code&gt;%3C&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0daafbfc8f622fbbbf3dc05ed0fe2f79d7ba67f6" translate="yes" xml:space="preserve">
          <source>For example, the code:</source>
          <target state="translated">例如,代码:</target>
        </trans-unit>
        <trans-unit id="f817e6e8af1e18f940aeb34cdd6a390f1393d6ed" translate="yes" xml:space="preserve">
          <source>For example, the following can be added to a &lt;code&gt;.bashrc&lt;/code&gt; file:</source>
          <target state="translated">例如，可以将以下内容添加到 &lt;code&gt;.bashrc&lt;/code&gt; 文件：</target>
        </trans-unit>
        <trans-unit id="7062ec00a8c1f78373bb58b32df0bbbb0623d2a5" translate="yes" xml:space="preserve">
          <source>For example, the following code executed by &lt;code&gt;vm.runInNewContext()&lt;/code&gt; with a timeout of 5 milliseconds schedules an infinite loop to run after a promise resolves. The scheduled loop is never interrupted by the timeout:</source>
          <target state="translated">例如，以下由 &lt;code&gt;vm.runInNewContext()&lt;/code&gt; 执行且超时为5毫秒的代码调度了一个无限循环，该循环将在承诺解决后运行。计划的循环永远不会被超时中断：</target>
        </trans-unit>
        <trans-unit id="253119df57953f965aae87ba4baa7e428da8850a" translate="yes" xml:space="preserve">
          <source>For example, the following program retains only the first four bytes of the file:</source>
          <target state="translated">例如,以下程序只保留文件的前四个字节。</target>
        </trans-unit>
        <trans-unit id="0d0cc05ed83946cbc26daf63025dcf7a7bc32bc1" translate="yes" xml:space="preserve">
          <source>For example, the imports field can be used to gain the benefits of conditional exports for internal modules:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1eb3dadf374a52eddc18a55a08c68490065d1798" translate="yes" xml:space="preserve">
          <source>For example, the octal value &lt;code&gt;0o765&lt;/code&gt; means:</source>
          <target state="translated">例如，八进制值 &lt;code&gt;0o765&lt;/code&gt; 表示：</target>
        </trans-unit>
        <trans-unit id="6de4cd8836649e28fe680a474b55dd4cd12f68eb" translate="yes" xml:space="preserve">
          <source>For example, the query string &lt;code&gt;'foo=bar&amp;amp;abc=xyz&amp;amp;abc=123'&lt;/code&gt; is parsed into:</source>
          <target state="translated">例如，查询字符串 &lt;code&gt;'foo=bar&amp;amp;abc=xyz&amp;amp;abc=123'&lt;/code&gt; 被解析为：</target>
        </trans-unit>
        <trans-unit id="c4faa016c1fe90248554940ea2a901f2767764e1" translate="yes" xml:space="preserve">
          <source>For example, the value &lt;code&gt;'h2=&quot;example.org:81&quot;'&lt;/code&gt; indicates that the HTTP/2 protocol is available on the host &lt;code&gt;'example.org'&lt;/code&gt; on TCP/IP port 81. The host and port &lt;em&gt;must&lt;/em&gt; be contained within the quote (&lt;code&gt;&quot;&lt;/code&gt;) characters.</source>
          <target state="translated">例如，值 &lt;code&gt;'h2=&quot;example.org:81&quot;'&lt;/code&gt; 表示HTTP / 2协议在TCP / IP端口81 的主机 &lt;code&gt;'example.org'&lt;/code&gt; 上可用。主机和端口&lt;em&gt;必须&lt;/em&gt;包含在引号中（ &lt;code&gt;&quot;&lt;/code&gt; ）个字符。</target>
        </trans-unit>
        <trans-unit id="f95e4eeabc8b5c5766a98b87237a905f5362fd09" translate="yes" xml:space="preserve">
          <source>For example, there could be one domain in use for an HTTP server, but perhaps we would like to have a separate domain to use for each request.</source>
          <target state="translated">例如,一个HTTP服务器可以有一个域名在使用,但也许我们希望有一个单独的域名用于每个请求。</target>
        </trans-unit>
        <trans-unit id="3c70aab1281bafc98591fb41a8a2e156b4733b83" translate="yes" xml:space="preserve">
          <source>For example, this is not a good idea:</source>
          <target state="translated">例如,这不是一个好主意。</target>
        </trans-unit>
        <trans-unit id="e99d0e4483ca3b79ca406bdcee63685fc7db1e22" translate="yes" xml:space="preserve">
          <source>For example, to copy &lt;code&gt;process.stdin&lt;/code&gt; to &lt;code&gt;process.stdout&lt;/code&gt;:</source>
          <target state="translated">例如，将 &lt;code&gt;process.stdin&lt;/code&gt; 复制到 &lt;code&gt;process.stdout&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="74c8c01fdcc407c4056c3c4c23fbc67e2bab6243" translate="yes" xml:space="preserve">
          <source>For example, to create a promise and pass it to an asynchronous worker:</source>
          <target state="translated">例如,创建一个承诺并将其传递给异步工作者。</target>
        </trans-unit>
        <trans-unit id="194be4aacd10dff8468a811071e79ccd2a5fd5f2" translate="yes" xml:space="preserve">
          <source>For example, to define a package that only has dual mode entry points for use in Node.js but not the browser:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df453f73e080d9b234f689c60388312d2911405c" translate="yes" xml:space="preserve">
          <source>For example, to reduce the default memory requirements from 256K to 128K, the options should be set to:</source>
          <target state="translated">例如,要将默认的内存需求从256K减少到128K,应将选项设置为:。</target>
        </trans-unit>
        <trans-unit id="7b5a5c3485b1b24a59e97f7e53ad29c392af3458" translate="yes" xml:space="preserve">
          <source>For example, with a function that takes in &lt;code&gt;(foo, onSuccessCallback, onErrorCallback)&lt;/code&gt;:</source>
          <target state="translated">例如，使用一个接受 &lt;code&gt;(foo, onSuccessCallback, onErrorCallback)&lt;/code&gt; 的函数：</target>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">例如:</target>
        </trans-unit>
        <trans-unit id="0ae799d12f1b44275fbc0da9bcd67a2da1006e7c" translate="yes" xml:space="preserve">
          <source>For example: &lt;code&gt;'#hash'&lt;/code&gt;.</source>
          <target state="translated">例如： &lt;code&gt;'#hash'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c86de8e00622a7747509a64e10a55fe34615d87b" translate="yes" xml:space="preserve">
          <source>For example: &lt;code&gt;'/p/a/t/h'&lt;/code&gt;.</source>
          <target state="translated">例如： &lt;code&gt;'/p/a/t/h'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b6e5f08123a700de002eb4d0e40657ba4c345591" translate="yes" xml:space="preserve">
          <source>For example: &lt;code&gt;'/p/a/t/h?query=string'&lt;/code&gt;.</source>
          <target state="translated">例如： &lt;code&gt;'/p/a/t/h?query=string'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3bdbc1893285ae2bc6187853f472bb89b348832d" translate="yes" xml:space="preserve">
          <source>For example: &lt;code&gt;'8080'&lt;/code&gt;.</source>
          <target state="translated">例如： &lt;code&gt;'8080'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b18a73507aef0be5082b6fdcfbb3d2764429f21c" translate="yes" xml:space="preserve">
          <source>For example: &lt;code&gt;'?query=string'&lt;/code&gt;.</source>
          <target state="translated">例如： &lt;code&gt;'?query=string'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1431a97ff50bfe6b8c67eaa08445cc79d5cbf2cd" translate="yes" xml:space="preserve">
          <source>For example: &lt;code&gt;'http:'&lt;/code&gt;.</source>
          <target state="translated">例如： &lt;code&gt;'http:'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1e875c30c2bd795fb8f83356873fa8387d92e587" translate="yes" xml:space="preserve">
          <source>For example: &lt;code&gt;'http://user:pass@sub.example.com:8080/p/a/t/h?query=string#hash'&lt;/code&gt;.</source>
          <target state="translated">例如： &lt;code&gt;'http://user:pass@sub.example.com:8080/p/a/t/h?query=string#hash'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="326379a1cda187f82e1710768f1264546688dc9d" translate="yes" xml:space="preserve">
          <source>For example: &lt;code&gt;'query=string'&lt;/code&gt; or &lt;code&gt;{'query': 'string'}&lt;/code&gt;.</source>
          <target state="translated">例如： &lt;code&gt;'query=string'&lt;/code&gt; 或 &lt;code&gt;{'query': 'string'}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c80eba690887dc33a88b69fed72632e28fc2b10d" translate="yes" xml:space="preserve">
          <source>For example: &lt;code&gt;'sub.example.com'&lt;/code&gt;.</source>
          <target state="translated">例如： &lt;code&gt;'sub.example.com'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e91a6553effbbe4dda469429f21b677db459ecb4" translate="yes" xml:space="preserve">
          <source>For example: &lt;code&gt;'sub.example.com:8080'&lt;/code&gt;.</source>
          <target state="translated">例如： &lt;code&gt;'sub.example.com:8080'&lt;/code&gt; : 8080'。</target>
        </trans-unit>
        <trans-unit id="30ac7f71aef57cd86825b42aad02544467fac9f1" translate="yes" xml:space="preserve">
          <source>For example: &lt;code&gt;'user:pass'&lt;/code&gt;.</source>
          <target state="translated">例如： &lt;code&gt;'user:pass'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fb56fd25c97e401b170d334578f71eec41d07444" translate="yes" xml:space="preserve">
          <source>For example: &lt;code&gt;{ name: 'AES256-SHA', version: 'TLSv1.2' }&lt;/code&gt;.</source>
          <target state="translated">例如： &lt;code&gt;{ name: 'AES256-SHA', version: 'TLSv1.2' }&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c6ef9a1e93233f967d1e9c16153dffc3223c156f" translate="yes" xml:space="preserve">
          <source>For example: &lt;code&gt;{ type: 'ECDH', name: 'prime256v1', size: 256 }&lt;/code&gt;.</source>
          <target state="translated">例如： &lt;code&gt;{ type: 'ECDH', name: 'prime256v1', size: 256 }&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="88800ff5db7cf730ee7fea6074e752c847677a0e" translate="yes" xml:space="preserve">
          <source>For further information on &lt;code&gt;napi_create_external&lt;/code&gt;, refer to &lt;a href=&quot;n-api#n_api_napi_create_external&quot;&gt;&lt;code&gt;napi_create_external()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ffd0ce6961facbf22f866f23a22e700aae1c9c0" translate="yes" xml:space="preserve">
          <source>For incoming headers:</source>
          <target state="translated">对于传入的标题:</target>
        </trans-unit>
        <trans-unit id="015b6275e1ee8dfd8d259a1e7dd30758f09835c4" translate="yes" xml:space="preserve">
          <source>For instance, changing from &lt;code&gt;http&lt;/code&gt; to &lt;code&gt;https&lt;/code&gt; works:</source>
          <target state="translated">例如，将 &lt;code&gt;http&lt;/code&gt; 更改为 &lt;code&gt;https&lt;/code&gt; 即可：</target>
        </trans-unit>
        <trans-unit id="271858bddcffa7d0c42a54bdba61f9004a962156" translate="yes" xml:space="preserve">
          <source>For instance, consider the following JavaScript code snippet:</source>
          <target state="translated">例如,考虑以下JavaScript代码片段。</target>
        </trans-unit>
        <trans-unit id="8de3f2a74ab84a9ac2fd498796cb9fa9361c6fdb" translate="yes" xml:space="preserve">
          <source>For instance, the following example illustrates a &lt;em&gt;misuse&lt;/em&gt; of the &lt;code&gt;process.exit()&lt;/code&gt; method that could lead to data printed to stdout being truncated and lost:</source>
          <target state="translated">例如，以下示例说明了 &lt;code&gt;process.exit()&lt;/code&gt; 方法的&lt;em&gt;滥用&lt;/em&gt;，这可能导致打印到stdout的数据被截断并丢失：</target>
        </trans-unit>
        <trans-unit id="abc897209b2f98b7966665fa36a5eddbbc44f66d" translate="yes" xml:space="preserve">
          <source>For instance:</source>
          <target state="translated">例如:</target>
        </trans-unit>
        <trans-unit id="77ea46760578e2f2b62948845228f02c4dee3345" translate="yes" xml:space="preserve">
          <source>For instance: &lt;code&gt;[[substr1, substr2, ...], originalsubstring]&lt;/code&gt;.</source>
          <target state="translated">例如： &lt;code&gt;[[substr1, substr2, ...], originalsubstring]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c59bd509f789ff650135339c76dd7b0ac979c77a" translate="yes" xml:space="preserve">
          <source>For instance: a &lt;a href=&quot;net#net_class_net_server&quot;&gt;&lt;code&gt;net.Server&lt;/code&gt;&lt;/a&gt; object emits an event each time a peer connects to it; a &lt;a href=&quot;fs#fs_class_fs_readstream&quot;&gt;&lt;code&gt;fs.ReadStream&lt;/code&gt;&lt;/a&gt; emits an event when the file is opened; a &lt;a href=&quot;stream&quot;&gt;stream&lt;/a&gt; emits an event whenever data is available to be read.</source>
          <target state="translated">例如：&lt;a href=&quot;net#net_class_net_server&quot;&gt; &lt;code&gt;net.Server&lt;/code&gt; &lt;/a&gt;对象每次同级连接到它时都会发出一个事件；一个&lt;a href=&quot;fs#fs_class_fs_readstream&quot;&gt; &lt;code&gt;fs.ReadStream&lt;/code&gt; &lt;/a&gt;发射当文件被打开的事件; 一个&lt;a href=&quot;stream&quot;&gt;流&lt;/a&gt;发射每当数据可被读取一个事件。</target>
        </trans-unit>
        <trans-unit id="bf4e14aa8f189b1217ccf2fcdbe7850069d1b53a" translate="yes" xml:space="preserve">
          <source>For key bindings related to the reverse-i-search, see &lt;a href=&quot;#repl_reverse_i_search&quot;&gt;&lt;code&gt;reverse-i-search&lt;/code&gt;&lt;/a&gt;. For all other key bindings, see &lt;a href=&quot;readline#readline_tty_keybindings&quot;&gt;TTY keybindings&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90d4f2fe0ce5674f5975d3a9b7f2e779132cdc4d" translate="yes" xml:space="preserve">
          <source>For listeners attached using &lt;code&gt;.once()&lt;/code&gt; this returns the original listeners instead of wrapper functions now.</source>
          <target state="translated">对于使用 &lt;code&gt;.once()&lt;/code&gt; 附加的侦听器，此方法将返回原始侦听器，而不是现在的包装器函数。</target>
        </trans-unit>
        <trans-unit id="12dd976275742ec5690cbcff1b48498bba5c82e7" translate="yes" xml:space="preserve">
          <source>For listeners attached using &lt;code&gt;.once()&lt;/code&gt;, the &lt;code&gt;listener&lt;/code&gt; argument now yields the original listener function.</source>
          <target state="translated">对于使用 &lt;code&gt;.once()&lt;/code&gt; 附加的 &lt;code&gt;listener&lt;/code&gt; ，该listener参数现在产生原始的侦听器函数。</target>
        </trans-unit>
        <trans-unit id="5390feeb439b25ef7d23bf7036f6e833b5328267" translate="yes" xml:space="preserve">
          <source>For many simple cases, it is possible to construct a stream without relying on inheritance. This can be accomplished by directly creating instances of the &lt;code&gt;stream.Writable&lt;/code&gt;, &lt;code&gt;stream.Readable&lt;/code&gt;, &lt;code&gt;stream.Duplex&lt;/code&gt; or &lt;code&gt;stream.Transform&lt;/code&gt; objects and passing appropriate methods as constructor options.</source>
          <target state="translated">对于许多简单情况，可以不依赖继承而构造流。这可以通过直接创建的实例来实现 &lt;code&gt;stream.Writable&lt;/code&gt; ， &lt;code&gt;stream.Readable&lt;/code&gt; ， &lt;code&gt;stream.Duplex&lt;/code&gt; 或 &lt;code&gt;stream.Transform&lt;/code&gt; 对象并传递适当的方法作为构造选项。</target>
        </trans-unit>
        <trans-unit id="38eb5cdac3322c36228aaedf283dbc3ef735948d" translate="yes" xml:space="preserve">
          <source>For many simple cases, it is possible to create a stream without relying on inheritance. This can be accomplished by directly creating instances of the &lt;code&gt;stream.Writable&lt;/code&gt;, &lt;code&gt;stream.Readable&lt;/code&gt;, &lt;code&gt;stream.Duplex&lt;/code&gt; or &lt;code&gt;stream.Transform&lt;/code&gt; objects and passing appropriate methods as constructor options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cf6b17b8b3c132991ca261367a85c345bb8add2" translate="yes" xml:space="preserve">
          <source>For more details on building addon modules in general, refer to the existing API.</source>
          <target state="translated">关于一般构建附加模块的更多细节,请参考现有的API。</target>
        </trans-unit>
        <trans-unit id="048f678cdb9d7b9304af334737ac3c0c98e0202e" translate="yes" xml:space="preserve">
          <source>For more details on setting properties on objects, see the section on &lt;a href=&quot;#n_api_working_with_javascript_properties&quot;&gt;Working with JavaScript Properties&lt;/a&gt;.</source>
          <target state="translated">有关在对象上设置属性的更多详细信息，请参见&amp;ldquo; &lt;a href=&quot;#n_api_working_with_javascript_properties&quot;&gt;使用JavaScript属性&lt;/a&gt; &amp;rdquo;一节。</target>
        </trans-unit>
        <trans-unit id="8219fba9950acfb6717ee1976a955e088f3627be" translate="yes" xml:space="preserve">
          <source>For more details on setting properties on objects, see the section on &lt;a href=&quot;#n_api_working_with_javascript_properties&quot;&gt;Working with JavaScript properties&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62febcf03c89fd8d13fb23c6c4f7af2e73d21726" translate="yes" xml:space="preserve">
          <source>For more details, review the &lt;a href=&quot;#n_api_object_lifetime_management&quot;&gt;Object Lifetime Management&lt;/a&gt;.</source>
          <target state="translated">有关更多详细信息，请查看&amp;ldquo; &lt;a href=&quot;#n_api_object_lifetime_management&quot;&gt;对象生存期管理&amp;rdquo;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2d94baa4f22fb332eedc9418de44e0d1477591cb" translate="yes" xml:space="preserve">
          <source>For more details, review the &lt;a href=&quot;#n_api_object_lifetime_management&quot;&gt;Object lifetime management&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d65bf55841fd0a63bcc09c56c4b126efd1c94332" translate="yes" xml:space="preserve">
          <source>For more info about &lt;code&gt;node inspect&lt;/code&gt;, see the &lt;a href=&quot;debugger&quot;&gt;debugger&lt;/a&gt; documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b4362c9db6fa952f739e6dd9663dfe4a36d653f" translate="yes" xml:space="preserve">
          <source>For more information on the serialization and deserialization mechanisms behind this API, see the &lt;a href=&quot;v8#v8_serialization_api&quot;&gt;serialization API of the &lt;code&gt;v8&lt;/code&gt; module&lt;/a&gt;.</source>
          <target state="translated">有关此API背后的序列化和反序列化机制的更多信息，请参见&lt;a href=&quot;v8#v8_serialization_api&quot;&gt; &lt;code&gt;v8&lt;/code&gt; &lt;/a&gt;模块的序列化API。</target>
        </trans-unit>
        <trans-unit id="e952f5b7997183488314ca0ac63d1a60975dc542" translate="yes" xml:space="preserve">
          <source>For more verbose tests for &lt;code&gt;Intl&lt;/code&gt; support, the following resources may be found to be helpful:</source>
          <target state="translated">对于更详细的 &lt;code&gt;Intl&lt;/code&gt; 支持测试，可能会发现以下资源会有所帮助：</target>
        </trans-unit>
        <trans-unit id="ecd2609711f87d3a858227a0c7f59cff0e8ea6a1" translate="yes" xml:space="preserve">
          <source>For most &lt;code&gt;fs&lt;/code&gt; module functions, the &lt;code&gt;path&lt;/code&gt; or &lt;code&gt;filename&lt;/code&gt; argument may be passed as a WHATWG &lt;a href=&quot;url#url_the_whatwg_url_api&quot;&gt;&lt;code&gt;URL&lt;/code&gt;&lt;/a&gt; object. Only &lt;a href=&quot;url#url_the_whatwg_url_api&quot;&gt;&lt;code&gt;URL&lt;/code&gt;&lt;/a&gt; objects using the &lt;code&gt;file:&lt;/code&gt; protocol are supported.</source>
          <target state="translated">对于大多数 &lt;code&gt;fs&lt;/code&gt; 模块功能， &lt;code&gt;path&lt;/code&gt; 或 &lt;code&gt;filename&lt;/code&gt; 参数可以作为WHATWG &lt;a href=&quot;url#url_the_whatwg_url_api&quot;&gt; &lt;code&gt;URL&lt;/code&gt; &lt;/a&gt;对象传递。仅支持使用 &lt;code&gt;file:&lt;/code&gt; 协议的&lt;a href=&quot;url#url_the_whatwg_url_api&quot;&gt; &lt;code&gt;URL&lt;/code&gt; &lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="d0aee94b121d9c05cc7446b9819d27a13b48f781" translate="yes" xml:space="preserve">
          <source>For now, only modules using the &lt;code&gt;file:&lt;/code&gt; protocol can be loaded.</source>
          <target state="translated">目前，只能加载使用 &lt;code&gt;file:&lt;/code&gt; 协议的模块。</target>
        </trans-unit>
        <trans-unit id="08d3837a578ca8fc06375081c29c6859c0119cb9" translate="yes" xml:space="preserve">
          <source>For objects that support &lt;code&gt;Symbol.toPrimitive&lt;/code&gt;, returns &lt;code&gt;Buffer.from(object[Symbol.toPrimitive]('string'), offsetOrEncoding)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b4ab566ef7a83d33b552404e3d4411d9267581f" translate="yes" xml:space="preserve">
          <source>For objects that support &lt;code&gt;Symbol.toPrimitive&lt;/code&gt;, returns &lt;code&gt;Buffer.from(object[Symbol.toPrimitive](), offsetOrEncoding, length)&lt;/code&gt;.</source>
          <target state="translated">对于支持 &lt;code&gt;Symbol.toPrimitive&lt;/code&gt; 的对象，返回 &lt;code&gt;Buffer.from(object[Symbol.toPrimitive](), offsetOrEncoding, length)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="39a3ab913b459b47836eb75d147bf2460ed81971" translate="yes" xml:space="preserve">
          <source>For objects whose &lt;code&gt;valueOf()&lt;/code&gt; function returns a value not strictly equal to &lt;code&gt;object&lt;/code&gt;, returns &lt;code&gt;Buffer.from(object.valueOf(), offsetOrEncoding, length)&lt;/code&gt;.</source>
          <target state="translated">对于其 &lt;code&gt;valueOf()&lt;/code&gt; 函数返回的值不严格等于 &lt;code&gt;object&lt;/code&gt; 的对象，返回 &lt;code&gt;Buffer.from(object.valueOf(), offsetOrEncoding, length)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d27b2b2f9bee7e6af8345826cc4bafbe24351894" translate="yes" xml:space="preserve">
          <source>For other LTS Release Codenames, see &lt;a href=&quot;https://github.com/nodejs/node/blob/master/doc/changelogs/CHANGELOG_ARCHIVE.md&quot;&gt;Node.js Changelog Archive&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b2b1b1cde7b3e65cf44d7b42ab3295a7c2a5ff9" translate="yes" xml:space="preserve">
          <source>For packages with a small number of exports or imports, we recommend explicitly listing each exports subpath entry. But for packages that have large numbers of subpaths, this might cause &lt;code&gt;package.json&lt;/code&gt; bloat and maintenance issues.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="196376ca4658d4a04273a684e12bfd5930516772" translate="yes" xml:space="preserve">
          <source>For private keys, the following encoding options can be used:</source>
          <target state="translated">对于私钥,可以使用以下编码选项。</target>
        </trans-unit>
        <trans-unit id="c31e69fc6ccede8b8e14bfc7cbefe3fb86771aea" translate="yes" xml:space="preserve">
          <source>For public keys, the following encoding options can be used:</source>
          <target state="translated">对于公钥,可以使用以下编码选项。</target>
        </trans-unit>
        <trans-unit id="b12757b9f92a1aa99a7a1d18244e653d9f9e551d" translate="yes" xml:space="preserve">
          <source>For secret keys, this property represents the size of the key in bytes. This property is &lt;code&gt;undefined&lt;/code&gt; for asymmetric keys.</source>
          <target state="translated">对于秘密密钥，此属性表示密钥的大小（以字节为单位）。对于非对称密钥，此属性 &lt;code&gt;undefined&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1f0d2efe942d5607b891af1a56f27f96d135db39" translate="yes" xml:space="preserve">
          <source>For some headers, such as &lt;code&gt;Authorization&lt;/code&gt; and short &lt;code&gt;Cookie&lt;/code&gt; headers, this flag is set automatically.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9641c5ddc18ec715361923bbf6bb46c068e3f6a" translate="yes" xml:space="preserve">
          <source>For streams not operating in object mode, if the &lt;code&gt;chunk&lt;/code&gt; parameter of &lt;code&gt;readable.push()&lt;/code&gt; is &lt;code&gt;undefined&lt;/code&gt;, it will be treated as empty string or buffer. See &lt;a href=&quot;#stream_readable_push&quot;&gt;&lt;code&gt;readable.push('')&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">在对象模式不工作流中，如果 &lt;code&gt;chunk&lt;/code&gt; 的参数 &lt;code&gt;readable.push()&lt;/code&gt; 是 &lt;code&gt;undefined&lt;/code&gt; ，其将被视为空字符串或缓冲区。有关更多信息，请参见&lt;a href=&quot;#stream_readable_push&quot;&gt; &lt;code&gt;readable.push('')&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1b263c0395c776ff1e910343334f54923c680ff1" translate="yes" xml:space="preserve">
          <source>For symmetric keys, this function allocates a &lt;code&gt;Buffer&lt;/code&gt; containing the key material and ignores any options.</source>
          <target state="translated">对于对称密钥，此函数分配一个包含密钥材料的 &lt;code&gt;Buffer&lt;/code&gt; ，并忽略任何选项。</target>
        </trans-unit>
        <trans-unit id="2a8f3f3978741f8f464f09eec486ef97895e91e5" translate="yes" xml:space="preserve">
          <source>For the promisified variants of &lt;a href=&quot;timers#timers_setimmediate_callback_args&quot;&gt;&lt;code&gt;setImmediate()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;timers#timers_settimeout_callback_delay_args&quot;&gt;&lt;code&gt;setTimeout()&lt;/code&gt;&lt;/a&gt;, an &lt;a href=&quot;globals#globals_class_abortcontroller&quot;&gt;&lt;code&gt;AbortController&lt;/code&gt;&lt;/a&gt; may be used to cancel the timer. When canceled, the returned Promises will be rejected with an &lt;code&gt;'AbortError'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ddc77c7268f543a5e426ef09ac7cfb57c404d50" translate="yes" xml:space="preserve">
          <source>For these use cases, subpath export patterns can be used instead:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd60fbcc07ae08d935aca50b8141e2dff8f12bcc" translate="yes" xml:space="preserve">
          <source>For wrapped objects it may be difficult to distinguish between a function called on a class prototype and a function called on an instance of a class. A common pattern used to address this problem is to save a persistent reference to the class constructor for later &lt;code&gt;instanceof&lt;/code&gt; checks.</source>
          <target state="translated">对于包装的对象，可能很难区分在类原型上调用的函数和在类实例上调用的函数。解决此问题的常用模式是保存对类构造函数的持久引用，以供以后的 &lt;code&gt;instanceof&lt;/code&gt; 检查。</target>
        </trans-unit>
        <trans-unit id="fe72bacdc1a0a3fbd24699c40c550c6a0d21a15e" translate="yes" xml:space="preserve">
          <source>For zlib-based streams</source>
          <target state="translated">对于基于zlib的流</target>
        </trans-unit>
        <trans-unit id="7758b0cb08acdedaecd144d42644989705ebf51f" translate="yes" xml:space="preserve">
          <source>Force FIPS-compliant crypto on startup. (Cannot be disabled from script code.) (Same requirements as &lt;code&gt;--enable-fips&lt;/code&gt;.)</source>
          <target state="translated">在启动时强制使用符合FIPS的加密货币。（无法从脚本代码中禁用。）（与 &lt;code&gt;--enable-fips&lt;/code&gt; 相同的要求。）</target>
        </trans-unit>
        <trans-unit id="8bdd88bbd6613f0ebc8fc2fe8651e4c3c2551856" translate="yes" xml:space="preserve">
          <source>Foreground colors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e6e2386ff55d783bd9886b8a6560092cabcb1bf" translate="yes" xml:space="preserve">
          <source>Former use cases relying on &lt;code&gt;require.resolve&lt;/code&gt; to determine the resolved path of a module can be supported via &lt;code&gt;import.meta.resolve&lt;/code&gt;, which is experimental and supported via the &lt;code&gt;--experimental-import-meta-resolve&lt;/code&gt; flag:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b4c929e366de15753f76b22420b7a35256c2ffa" translate="yes" xml:space="preserve">
          <source>Forward one character</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f7db64b36cb48a5ead37108e5190bb1cb147353" translate="yes" xml:space="preserve">
          <source>Frame Size Error</source>
          <target state="translated">帧大小错误</target>
        </trans-unit>
        <trans-unit id="333d0c70190b8e2c3cb1c4017702839184a1fdcc" translate="yes" xml:space="preserve">
          <source>Frames are only generated for JavaScript functions. If, for example, execution synchronously passes through a C++ addon function called &lt;code&gt;cheetahify&lt;/code&gt; which itself calls a JavaScript function, the frame representing the &lt;code&gt;cheetahify&lt;/code&gt; call will not be present in the stack traces:</source>
          <target state="translated">仅为JavaScript函数生成框架。例如，如果执行同步通过名为 &lt;code&gt;cheetahify&lt;/code&gt; 的C ++附加函数（其本身调用JavaScript函数） &lt;code&gt;cheetahify&lt;/code&gt; ，则表示cheetahify调用的框架将不会出现在堆栈跟踪中：</target>
        </trans-unit>
        <trans-unit id="5132d73ca8d010c5fc4d92deadcf69094f940002" translate="yes" xml:space="preserve">
          <source>From &lt;code&gt;zlib/zconf.h&lt;/code&gt;, modified for Node.js usage:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a76a4194d0fdb22daa95831f66851b1b3ddac7b0" translate="yes" xml:space="preserve">
          <source>From &lt;code&gt;zlib/zconf.h&lt;/code&gt;, modified to Node.js's usage:</source>
          <target state="translated">从 &lt;code&gt;zlib/zconf.h&lt;/code&gt; 修改为Node.js的用法：</target>
        </trans-unit>
        <trans-unit id="c74409dbf97fc00637d09c29d6300330ac26ce15" translate="yes" xml:space="preserve">
          <source>From the perspective of a native addon this means that the bindings it provides may be called multiple times, from multiple contexts, and even concurrently from multiple threads.</source>
          <target state="translated">从原生附加组件的角度来看,这意味着它提供的绑定可能会被多次调用,从多个上下文中调用,甚至从多个线程中并发调用。</target>
        </trans-unit>
        <trans-unit id="7a605a56e2cdcdebd5e329a93e319622341b36f7" translate="yes" xml:space="preserve">
          <source>Function arguments</source>
          <target state="translated">功能参数</target>
        </trans-unit>
        <trans-unit id="993dd96d93bbdf9a74fd4898e6fcf68d7b3f10bb" translate="yes" xml:space="preserve">
          <source>Function factory</source>
          <target state="translated">功能工厂</target>
        </trans-unit>
        <trans-unit id="ec5a7f09a1e8ef3b422abd91ceca943a4a3ab7df" translate="yes" xml:space="preserve">
          <source>Function pointer type for add-on provided functions that allow the user to be notified when externally-owned data is ready to be cleaned up because the object with which it was associated with, has been garbage-collected. The user must provide a function satisfying the following signature which would get called upon the object's collection. Currently, &lt;code&gt;napi_finalize&lt;/code&gt; can be used for finding out when objects that have external data are collected.</source>
          <target state="translated">附加组件提供的函数的函数指针类型，这些函数允许在用户准备好清理外部拥有的数据时通知用户，因为与之关联的对象已被垃圾回收。用户必须提供满足以下签名的功能，该功能将在对象的集合上被调用。当前， &lt;code&gt;napi_finalize&lt;/code&gt; 可用于确定何时收集具有外部数据的对象。</target>
        </trans-unit>
        <trans-unit id="8f6bbd08fb84a42ff48f50954929b61f3a27bdd1" translate="yes" xml:space="preserve">
          <source>Function pointer type for user-provided native functions which are to be exposed to JavaScript via N-API. Callback functions should satisfy the following signature:</source>
          <target state="translated">用于用户提供的本地函数的函数指针类型,这些函数将通过N-API暴露给JavaScript。回调函数应满足以下签名。</target>
        </trans-unit>
        <trans-unit id="64bc8def25592142360181bc180b51628e1a2ec6" translate="yes" xml:space="preserve">
          <source>Function pointer used with &lt;a href=&quot;#n_api_napi_add_async_cleanup_hook&quot;&gt;&lt;code&gt;napi_add_async_cleanup_hook&lt;/code&gt;&lt;/a&gt;. It will be called when the environment is being torn down.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcc492b0639005eacef46c445e2cbda28e7bde17" translate="yes" xml:space="preserve">
          <source>Function pointer used with asynchronous thread-safe function calls. The callback will be called on the main thread. Its purpose is to use a data item arriving via the queue from one of the secondary threads to construct the parameters necessary for a call into JavaScript, usually via &lt;code&gt;napi_call_function&lt;/code&gt;, and then make the call into JavaScript.</source>
          <target state="translated">与异步线程安全函数调用一起使用的函数指针。回调将在主线程上调用。其目的是使用从辅助线程之一通过队列到达的数据项来构造通常通过 &lt;code&gt;napi_call_function&lt;/code&gt; 进行 JavaScript调用所必需的参数，然后进行对JavaScript的调用。</target>
        </trans-unit>
        <trans-unit id="599595a9fdcd3063f28e8ae0d1e237aa707ed504" translate="yes" xml:space="preserve">
          <source>Function pointer used with functions that support asynchronous operations. Callback functions must satisfy the following signature:</source>
          <target state="translated">与支持异步操作的函数一起使用的函数指针。回调函数必须满足以下签名。</target>
        </trans-unit>
        <trans-unit id="37eb1cf9b1611f8cdc3c660067c4a09fc1e21c31" translate="yes" xml:space="preserve">
          <source>Function was called within a &lt;a href=&quot;process#Event:-%60'exit'%60&quot;&gt;&lt;code&gt;process.on('exit')&lt;/code&gt;&lt;/a&gt; handler that shouldn't be called within &lt;a href=&quot;process#Event:-%60'exit'%60&quot;&gt;&lt;code&gt;process.on('exit')&lt;/code&gt;&lt;/a&gt; handler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7964d22a59f5fcc5efede2d81c68f063b79d7282" translate="yes" xml:space="preserve">
          <source>Functionalities that only require the ICU library itself, such as &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize&quot;&gt;&lt;code&gt;String.prototype.normalize()&lt;/code&gt;&lt;/a&gt; and the &lt;a href=&quot;url#url_the_whatwg_url_api&quot;&gt;WHATWG URL parser&lt;/a&gt;, are fully supported under &lt;code&gt;small-icu&lt;/code&gt;. Features that require ICU locale data in addition, such as &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat&quot;&gt;&lt;code&gt;Intl.DateTimeFormat&lt;/code&gt;&lt;/a&gt;, generally only work with the English locale:</source>
          <target state="translated">&lt;code&gt;small-icu&lt;/code&gt; 完全支持仅需要ICU库本身的功能，例如&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize&quot;&gt; &lt;code&gt;String.prototype.normalize()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;url#url_the_whatwg_url_api&quot;&gt;WHATWG URL解析器&lt;/a&gt;。另外，还需要ICU语言环境数据的功能（例如&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat&quot;&gt; &lt;code&gt;Intl.DateTimeFormat&lt;/code&gt; &lt;/a&gt;）通常仅适用于英语语言环境：</target>
        </trans-unit>
        <trans-unit id="3af5b7dcf7212050b3c0d6a9cc548227069312e0" translate="yes" xml:space="preserve">
          <source>Functionalities that only require the ICU library itself, such as &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize&quot;&gt;&lt;code&gt;String.prototype.normalize()&lt;/code&gt;&lt;/a&gt; and the &lt;a href=&quot;url#url_the_whatwg_url_api&quot;&gt;WHATWG URL parser&lt;/a&gt;, are fully supported under &lt;code&gt;system-icu&lt;/code&gt;. Features that require ICU locale data in addition, such as &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat&quot;&gt;&lt;code&gt;Intl.DateTimeFormat&lt;/code&gt;&lt;/a&gt;&lt;em&gt;may&lt;/em&gt; be fully or partially supported, depending on the completeness of the ICU data installed on the system.</source>
          <target state="translated">&lt;code&gt;system-icu&lt;/code&gt; 完全支持仅需要ICU库本身的功能，例如&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize&quot;&gt; &lt;code&gt;String.prototype.normalize()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;url#url_the_whatwg_url_api&quot;&gt;WHATWG URL解析器&lt;/a&gt;。另外，根据系统上安装的ICU数据的完整性，&lt;em&gt;可能&lt;/em&gt;还完全或部分支持诸如&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat&quot;&gt; &lt;code&gt;Intl.DateTimeFormat&lt;/code&gt; &lt;/a&gt;类的需要ICU语言环境数据的功能。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2b961dea1dc0c60ddf9a2c8e9d090f6f7d082483" translate="yes" xml:space="preserve">
          <source>Functions</source>
          <target state="translated">Functions</target>
        </trans-unit>
        <trans-unit id="af4222c3289bb32c1f1824b1c43727481175c73d" translate="yes" xml:space="preserve">
          <source>Functions based on &lt;code&gt;fs.open()&lt;/code&gt; exhibit this behavior as well: &lt;code&gt;fs.writeFile()&lt;/code&gt;, &lt;code&gt;fs.readFile()&lt;/code&gt;, etc.</source>
          <target state="translated">基于 &lt;code&gt;fs.open()&lt;/code&gt; 的函数也表现出此行为： &lt;code&gt;fs.writeFile()&lt;/code&gt; ， &lt;code&gt;fs.readFile()&lt;/code&gt; 等。</target>
        </trans-unit>
        <trans-unit id="d639d5948d45cf53034fa5bb18a5e3f51824cdfe" translate="yes" xml:space="preserve">
          <source>Functions to convert from C types to N-API</source>
          <target state="translated">从C类型转换到N-API的函数</target>
        </trans-unit>
        <trans-unit id="6b2d12745e2e915ec380d5a20817a9e69c8f53b1" translate="yes" xml:space="preserve">
          <source>Functions to convert from N-API to C types</source>
          <target state="translated">用于将N-API转换为C类型的函数</target>
        </trans-unit>
        <trans-unit id="cb1aa769905304dd687caa842e65229bd0139a1f" translate="yes" xml:space="preserve">
          <source>Functions to get global instances</source>
          <target state="translated">获取全局实例的函数</target>
        </trans-unit>
        <trans-unit id="3f8f8fa4da509ca87fe1fc6ab145d779f586910f" translate="yes" xml:space="preserve">
          <source>Fundamentally, these APIs are used to do one of the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b70f7f5f0e5e2c6bebca28cd6a14886b0ba34dad" translate="yes" xml:space="preserve">
          <source>Fundamentally, these APIs are used to do one of the following: 1. Create a new JavaScript object 2. Convert from a primitive C type to an N-API value 3. Convert from N-API value to a primitive C type 4. Get global instances including &lt;code&gt;undefined&lt;/code&gt; and &lt;code&gt;null&lt;/code&gt;</source>
          <target state="translated">从根本上讲，这些API用于执行以下操作之一：1.创建一个新的JavaScript对象2.从原始C类型转换为N-API值3.从N-API值转换为原始C类型4.获取全局实例，包括 &lt;code&gt;undefined&lt;/code&gt; 和 &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9431231cf63ba365f4794647b56c6dc1799c5188" translate="yes" xml:space="preserve">
          <source>Furthermore, to make the module lookup process even more optimal, rather than putting packages directly in &lt;code&gt;/usr/lib/node&lt;/code&gt;, we could put them in &lt;code&gt;/usr/lib/node_modules/&amp;lt;name&amp;gt;/&amp;lt;version&amp;gt;&lt;/code&gt;. Then Node.js will not bother looking for missing dependencies in &lt;code&gt;/usr/node_modules&lt;/code&gt; or &lt;code&gt;/node_modules&lt;/code&gt;.</source>
          <target state="translated">此外，为了使模块查找过程更加优化，而不是将包直接放置在 &lt;code&gt;/usr/lib/node&lt;/code&gt; 中，我们可以将它们放置在 &lt;code&gt;/usr/lib/node_modules/&amp;lt;name&amp;gt;/&amp;lt;version&amp;gt;&lt;/code&gt; 中。然后，Node.js不会在 &lt;code&gt;/usr/node_modules&lt;/code&gt; 或 &lt;code&gt;/node_modules&lt;/code&gt; 中寻找缺少的依赖项。</target>
        </trans-unit>
        <trans-unit id="00c4921f2442905582c51174e07820023b7887b4" translate="yes" xml:space="preserve">
          <source>Generally, an &lt;code&gt;ArrayBuffer&lt;/code&gt; is non-detachable if it has been detached before. The engine may impose additional conditions on whether an &lt;code&gt;ArrayBuffer&lt;/code&gt; is detachable. For example, V8 requires that the &lt;code&gt;ArrayBuffer&lt;/code&gt; be external, that is, created with &lt;a href=&quot;#n_api_napi_create_external_arraybuffer&quot;&gt;&lt;code&gt;napi_create_external_arraybuffer&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcde9c22c0f6fcf332c79f17237db4140e32e18b" translate="yes" xml:space="preserve">
          <source>Generate V8 profiler output.</source>
          <target state="translated">生成V8剖析器输出。</target>
        </trans-unit>
        <trans-unit id="28e72539a254b50376120d97739ce35acef6675a" translate="yes" xml:space="preserve">
          <source>Generates a heap snapshot each time the process receives the specified signal. &lt;code&gt;signal&lt;/code&gt; must be a valid signal name. Disabled by default.</source>
          <target state="translated">每次进程接收到指定信号时，都会生成一个堆快照。 &lt;code&gt;signal&lt;/code&gt; 必须是有效的信号名称。默认禁用。</target>
        </trans-unit>
        <trans-unit id="8d8414494901013cf6abd1e8bca004e06c01bbf9" translate="yes" xml:space="preserve">
          <source>Generates a new asymmetric key pair of the given &lt;code&gt;type&lt;/code&gt;. RSA, DSA, EC, Ed25519 and Ed448 are currently supported.</source>
          <target state="translated">生成给定 &lt;code&gt;type&lt;/code&gt; 的新非对称密钥对。当前支持RSA，DSA，EC，Ed25519和Ed448。</target>
        </trans-unit>
        <trans-unit id="537dba8df51eb92cfa8ee1f469fc8ec225e058a5" translate="yes" xml:space="preserve">
          <source>Generates a new asymmetric key pair of the given &lt;code&gt;type&lt;/code&gt;. RSA, DSA, EC, Ed25519, Ed448, X25519, X448, and DH are currently supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83b586516a8c546d7c129a26589b417da1bdfc1f" translate="yes" xml:space="preserve">
          <source>Generates a snapshot of the current V8 heap and returns a Readable Stream that may be used to read the JSON serialized representation. This JSON stream format is intended to be used with tools such as Chrome DevTools. The JSON schema is undocumented and specific to the V8 engine, and may change from one version of V8 to the next.</source>
          <target state="translated">生成当前V8堆的快照,并返回一个可用于读取JSON序列化表示的可读流。这种JSON流格式旨在与Chrome DevTools等工具一起使用。JSON 架构是未被记录的,并且是针对 V8 引擎的,可能会随着 V8 的不同版本而改变。</target>
        </trans-unit>
        <trans-unit id="f91905a4b57c336d66d2bdf1b26e5dac8937b997" translate="yes" xml:space="preserve">
          <source>Generates a snapshot of the current V8 heap and returns a Readable Stream that may be used to read the JSON serialized representation. This JSON stream format is intended to be used with tools such as Chrome DevTools. The JSON schema is undocumented and specific to the V8 engine. Therefore, the schema may change from one version of V8 to the next.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9252ad8696289e2a967e228e69921690ca5d2b80" translate="yes" xml:space="preserve">
          <source>Generates a snapshot of the current V8 heap and writes it to a JSON file. This file is intended to be used with tools such as Chrome DevTools. The JSON schema is undocumented and specific to the V8 engine, and may change from one version of V8 to the next.</source>
          <target state="translated">生成当前 V8 堆的快照,并将其写入一个 JSON 文件。该文件旨在与Chrome DevTools等工具一起使用。JSON 架构是未被记录的,并且是针对 V8 引擎的,可能会随着 V8 的不同版本而改变。</target>
        </trans-unit>
        <trans-unit id="8042318054979101a6bb3a3e52a4426bd1a01e8e" translate="yes" xml:space="preserve">
          <source>Generates cryptographically strong pseudo-random data. The &lt;code&gt;size&lt;/code&gt; argument is a number indicating the number of bytes to generate.</source>
          <target state="translated">生成加密强度高的伪随机数据。的 &lt;code&gt;size&lt;/code&gt; 参数是一个数字，指示字节，以产生数。</target>
        </trans-unit>
        <trans-unit id="4db498c2251f09e2ab090049609182fdaab60067" translate="yes" xml:space="preserve">
          <source>Generates cryptographically strong random values. The given &lt;code&gt;typedArray&lt;/code&gt; is filled with random values, and a reference to &lt;code&gt;typedArray&lt;/code&gt; is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f1def4238b0303604ad14681f55ec2c047a99ea" translate="yes" xml:space="preserve">
          <source>Generates private and public Diffie-Hellman key values, and returns the public key in the specified &lt;code&gt;encoding&lt;/code&gt;. This key should be transferred to the other party. If &lt;code&gt;encoding&lt;/code&gt; is provided a string is returned; otherwise a &lt;a href=&quot;buffer&quot;&gt;&lt;code&gt;Buffer&lt;/code&gt;&lt;/a&gt; is returned.</source>
          <target state="translated">生成私有和公共Diffie-Hellman密钥值，并以指定的 &lt;code&gt;encoding&lt;/code&gt; 返回公共密钥。该密钥应转让给另一方。如果提供了 &lt;code&gt;encoding&lt;/code&gt; 则返回一个字符串。否则返回&lt;a href=&quot;buffer&quot;&gt; &lt;code&gt;Buffer&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1c46f03d5b840f015caf47a97b09bb9a6d45e875" translate="yes" xml:space="preserve">
          <source>Generates private and public EC Diffie-Hellman key values, and returns the public key in the specified &lt;code&gt;format&lt;/code&gt; and &lt;code&gt;encoding&lt;/code&gt;. This key should be transferred to the other party.</source>
          <target state="translated">生成私有和公共EC Diffie-Hellman密钥值，并以指定的 &lt;code&gt;format&lt;/code&gt; 和 &lt;code&gt;encoding&lt;/code&gt; 返回公共密钥。该密钥应转让给另一方。</target>
        </trans-unit>
        <trans-unit id="112ec9f89c94053c72eaeec02eadd15823d03a79" translate="yes" xml:space="preserve">
          <source>Generates six random characters to be appended behind a required &lt;code&gt;prefix&lt;/code&gt; to create a unique temporary directory. Due to platform inconsistencies, avoid trailing &lt;code&gt;X&lt;/code&gt; characters in &lt;code&gt;prefix&lt;/code&gt;. Some platforms, notably the BSDs, can return more than six random characters, and replace trailing &lt;code&gt;X&lt;/code&gt; characters in &lt;code&gt;prefix&lt;/code&gt; with random characters.</source>
          <target state="translated">生成六个随机字符，将其追加到所需的 &lt;code&gt;prefix&lt;/code&gt; 以创建唯一的临时目录。由于平台不一致，请避免在 &lt;code&gt;prefix&lt;/code&gt; 中尾随 &lt;code&gt;X&lt;/code&gt; 个字符。某些平台，尤其是BSD，可以返回六个以上的随机字符，并将 &lt;code&gt;prefix&lt;/code&gt; 尾随 &lt;code&gt;X&lt;/code&gt; 字符替换为随机字符。</target>
        </trans-unit>
        <trans-unit id="50b6838f4aa9e4602c905096a32cfb19bcd8173a" translate="yes" xml:space="preserve">
          <source>Generating V8 snapshots takes time and memory (both memory managed by the V8 heap and native memory outside the V8 heap). The bigger the heap is, the more resources it needs. Node.js will adjust the V8 heap to accommondate the additional V8 heap memory overhead, and try its best to avoid using up all the memory avialable to the process. When the process uses more memory than the system deems appropriate, the process may be terminated abruptly by the system, depending on the system configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5df38ba113791510e02f0b0272cda55269e8b1c3" translate="yes" xml:space="preserve">
          <source>Generating keys</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="761f1a9e4f4d22dd8635a8dbf3a5cf7ac00d865b" translate="yes" xml:space="preserve">
          <source>Get a unique name for a set of request options, to determine whether a connection can be reused. For an HTTP agent, this returns &lt;code&gt;host:port:localAddress&lt;/code&gt; or &lt;code&gt;host:port:localAddress:family&lt;/code&gt;. For an HTTPS agent, the name includes the CA, cert, ciphers, and other HTTPS/TLS-specific options that determine socket reusability.</source>
          <target state="translated">获取一组请求选项的唯一名称，以确定是否可以重用连接。对于HTTP代理，这将返回 &lt;code&gt;host:port:localAddress&lt;/code&gt; 或 &lt;code&gt;host:port:localAddress:family&lt;/code&gt; 。对于HTTPS代理，名称包括确定套接字可重用性的CA，证书，密码和其他特定于HTTPS / TLS的选项。</target>
        </trans-unit>
        <trans-unit id="dd3780aac9665f60eae1f37cf32bf67978da6ceb" translate="yes" xml:space="preserve">
          <source>Get global instances including &lt;code&gt;undefined&lt;/code&gt; and &lt;code&gt;null&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b09eeb13f193e3ae59b33a0b658953d55cdb9b4b" translate="yes" xml:space="preserve">
          <source>Get information about the context in which the callback was invoked.</source>
          <target state="translated">获取回调被调用的上下文信息。</target>
        </trans-unit>
        <trans-unit id="a118bb6557c8f257122a10913093f916497c2c2a" translate="yes" xml:space="preserve">
          <source>Get the arguments passed into the callback.</source>
          <target state="translated">获取传入回调的参数。</target>
        </trans-unit>
        <trans-unit id="8f60d44bd72ead1d05680199b7cc03269a3750b0" translate="yes" xml:space="preserve">
          <source>Gets and sets the fragment portion of the URL.</source>
          <target state="translated">获取并设置URL的片段部分。</target>
        </trans-unit>
        <trans-unit id="125c6d7b1d082be21dbcac6f3d4cb94a4b42c7eb" translate="yes" xml:space="preserve">
          <source>Gets and sets the host name portion of the URL. The key difference between &lt;code&gt;url.host&lt;/code&gt; and &lt;code&gt;url.hostname&lt;/code&gt; is that &lt;code&gt;url.hostname&lt;/code&gt; does &lt;em&gt;not&lt;/em&gt; include the port.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="869f7a80c02184fc0dca0832b3a470dc1aefb8a1" translate="yes" xml:space="preserve">
          <source>Gets and sets the host portion of the URL.</source>
          <target state="translated">获取并设置URL的主机部分。</target>
        </trans-unit>
        <trans-unit id="d91766529908cc65cdc84cce450a51bb66b9825e" translate="yes" xml:space="preserve">
          <source>Gets and sets the hostname portion of the URL. The key difference between &lt;code&gt;url.host&lt;/code&gt; and &lt;code&gt;url.hostname&lt;/code&gt; is that &lt;code&gt;url.hostname&lt;/code&gt; does &lt;em&gt;not&lt;/em&gt; include the port.</source>
          <target state="translated">获取并设置URL的主机名部分。之间的主要区别 &lt;code&gt;url.host&lt;/code&gt; 和 &lt;code&gt;url.hostname&lt;/code&gt; 是 &lt;code&gt;url.hostname&lt;/code&gt; 并&lt;em&gt;没有&lt;/em&gt;包含的端口。</target>
        </trans-unit>
        <trans-unit id="435bf65c246a2f6d454ee3b74918f156c257edc9" translate="yes" xml:space="preserve">
          <source>Gets and sets the password portion of the URL.</source>
          <target state="translated">获取并设置URL的密码部分。</target>
        </trans-unit>
        <trans-unit id="549880df821aadf8b2109c55bc62b773d21f658f" translate="yes" xml:space="preserve">
          <source>Gets and sets the path portion of the URL.</source>
          <target state="translated">获取并设置URL的路径部分。</target>
        </trans-unit>
        <trans-unit id="9e66f4502bfc4d266ba11a26208355dd8dee1fc5" translate="yes" xml:space="preserve">
          <source>Gets and sets the port portion of the URL.</source>
          <target state="translated">获取并设置URL的端口部分。</target>
        </trans-unit>
        <trans-unit id="9c6f5f9722f21599fb9d10d2b13bf6afe12c0be8" translate="yes" xml:space="preserve">
          <source>Gets and sets the protocol portion of the URL.</source>
          <target state="translated">获取并设置URL的协议部分。</target>
        </trans-unit>
        <trans-unit id="e2a068947ada10ff8415b1f0a99c1458d7e8ac42" translate="yes" xml:space="preserve">
          <source>Gets and sets the serialized URL.</source>
          <target state="translated">获取并设置序列化的URL。</target>
        </trans-unit>
        <trans-unit id="38a5d7386ed10cf65f072100b54a680fe0f9fd33" translate="yes" xml:space="preserve">
          <source>Gets and sets the serialized query portion of the URL.</source>
          <target state="translated">获取并设置URL的序列化查询部分。</target>
        </trans-unit>
        <trans-unit id="f34ab704a12cd0ef99be499eda1ab1ec475f9e1a" translate="yes" xml:space="preserve">
          <source>Gets and sets the username portion of the URL.</source>
          <target state="translated">获取并设置URL的用户名部分。</target>
        </trans-unit>
        <trans-unit id="237f51c60347aa23bb031bf940d888d31190dcf7" translate="yes" xml:space="preserve">
          <source>Gets the &lt;a href=&quot;#url_class_urlsearchparams&quot;&gt;&lt;code&gt;URLSearchParams&lt;/code&gt;&lt;/a&gt; object representing the query parameters of the URL. This property is read-only but the &lt;code&gt;URLSearchParams&lt;/code&gt; object it provides can be used to mutate the URL instance; to replace the entirety of query parameters of the URL, use the &lt;a href=&quot;#url_url_search&quot;&gt;&lt;code&gt;url.search&lt;/code&gt;&lt;/a&gt; setter. See &lt;a href=&quot;#url_class_urlsearchparams&quot;&gt;&lt;code&gt;URLSearchParams&lt;/code&gt;&lt;/a&gt; documentation for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7aa696bbcdcc43a3b4597525214bd5ca86861c90" translate="yes" xml:space="preserve">
          <source>Gets the &lt;a href=&quot;#url_class_urlsearchparams&quot;&gt;&lt;code&gt;URLSearchParams&lt;/code&gt;&lt;/a&gt; object representing the query parameters of the URL. This property is read-only; to replace the entirety of query parameters of the URL, use the &lt;a href=&quot;#url_url_search&quot;&gt;&lt;code&gt;url.search&lt;/code&gt;&lt;/a&gt; setter. See &lt;a href=&quot;#url_class_urlsearchparams&quot;&gt;&lt;code&gt;URLSearchParams&lt;/code&gt;&lt;/a&gt; documentation for details.</source>
          <target state="translated">获取表示URL查询参数的&lt;a href=&quot;#url_class_urlsearchparams&quot;&gt; &lt;code&gt;URLSearchParams&lt;/code&gt; &lt;/a&gt;对象。该属性是只读的；要替换URL的整个查询参数，请使用&lt;a href=&quot;#url_url_search&quot;&gt; &lt;code&gt;url.search&lt;/code&gt; &lt;/a&gt; setter。有关详细信息，请参见&lt;a href=&quot;#url_class_urlsearchparams&quot;&gt; &lt;code&gt;URLSearchParams&lt;/code&gt; &lt;/a&gt;文档。</target>
        </trans-unit>
        <trans-unit id="75998834bfd160517b383467d6db3081eea8a588" translate="yes" xml:space="preserve">
          <source>Gets the read-only serialization of the URL's origin.</source>
          <target state="translated">获取URL原点的只读序列化。</target>
        </trans-unit>
        <trans-unit id="b0765f40c9a519f99ccc6c274fce2dad2d3633b5" translate="yes" xml:space="preserve">
          <source>Getter for the payload used to construct the &lt;a href=&quot;#module_class_module_sourcemap&quot;&gt;&lt;code&gt;SourceMap&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5348b55d35480052ed3df5fd894e6230cb855e10" translate="yes" xml:space="preserve">
          <source>Getter for the property &lt;code&gt;encoding&lt;/code&gt; of a given &lt;code&gt;Readable&lt;/code&gt; stream. The &lt;code&gt;encoding&lt;/code&gt; property can be set using the &lt;a href=&quot;#stream_readable_setencoding_encoding&quot;&gt;&lt;code&gt;readable.setEncoding()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">给定 &lt;code&gt;Readable&lt;/code&gt; 流的属性 &lt;code&gt;encoding&lt;/code&gt; 的Getter 。的 &lt;code&gt;encoding&lt;/code&gt; 属性还可以用被设置&lt;a href=&quot;#stream_readable_setencoding_encoding&quot;&gt; &lt;code&gt;readable.setEncoding()&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="b63484bad5ed49a9ef21b266de55ef78730b074c" translate="yes" xml:space="preserve">
          <source>Getter for the property &lt;code&gt;objectMode&lt;/code&gt; of a given &lt;code&gt;Readable&lt;/code&gt; stream.</source>
          <target state="translated">给定 &lt;code&gt;Readable&lt;/code&gt; 流的 &lt;code&gt;objectMode&lt;/code&gt; 属性的Getter 。</target>
        </trans-unit>
        <trans-unit id="04799911b332b0e61c7c42d5ee3d7a55aff3ffd4" translate="yes" xml:space="preserve">
          <source>Getter for the property &lt;code&gt;objectMode&lt;/code&gt; of a given &lt;code&gt;Writable&lt;/code&gt; stream.</source>
          <target state="translated">给定 &lt;code&gt;Writable&lt;/code&gt; 流的属性 &lt;code&gt;objectMode&lt;/code&gt; 的Getter 。</target>
        </trans-unit>
        <trans-unit id="1df26200bb8d49a249a1311c46b8cae48b1f069c" translate="yes" xml:space="preserve">
          <source>Getting the value of the &lt;code&gt;href&lt;/code&gt; property is equivalent to calling &lt;a href=&quot;#url_url_tostring&quot;&gt;&lt;code&gt;url.toString()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">获取 &lt;code&gt;href&lt;/code&gt; 属性的值等效于调用&lt;a href=&quot;#url_url_tostring&quot;&gt; &lt;code&gt;url.toString()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="eda80b83a6983362aa0540edf49d4ad18f1a51c3" translate="yes" xml:space="preserve">
          <source>GitHub Repo &amp;amp; Issue Tracker</source>
          <target state="translated">GitHub回购和问题跟踪</target>
        </trans-unit>
        <trans-unit id="b170325808a5a3d7a22f1d97c806adb95a1b8b39" translate="yes" xml:space="preserve">
          <source>Given a line number and column number in the generated source file, returns an object representing the position in the original file. The object returned consists of the following keys:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64fa5ba39f3db1e4e3025e3bb38168ee7debb652" translate="yes" xml:space="preserve">
          <source>Given the above code, the add-on can be used from JavaScript as follows:</source>
          <target state="translated">给定上述代码,可以从JavaScript中使用附加组件,如下所示。</target>
        </trans-unit>
        <trans-unit id="be3aa1dec5068fa02e91e240d40f210ae17130d7" translate="yes" xml:space="preserve">
          <source>Given the file &lt;code&gt;test.js&lt;/code&gt; below, the command &lt;code&gt;node --trace-event-categories node.perf test.js&lt;/code&gt; will print &lt;code&gt;'node.async_hooks,node.perf'&lt;/code&gt; to the console.</source>
          <target state="translated">给定下面的文件 &lt;code&gt;test.js&lt;/code&gt; ，命令 &lt;code&gt;node --trace-event-categories node.perf test.js&lt;/code&gt; 将向控制台输出 &lt;code&gt;'node.async_hooks,node.perf'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="05f7f9a759c42ea233ab74999c709f6b1e876d7d" translate="yes" xml:space="preserve">
          <source>Given two modules: &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;, where &lt;code&gt;b&lt;/code&gt; is a dependency of &lt;code&gt;a&lt;/code&gt; and there is a directory structure of:</source>
          <target state="translated">给定两个模块： &lt;code&gt;a&lt;/code&gt; 和 &lt;code&gt;b&lt;/code&gt; ，其中 &lt;code&gt;b&lt;/code&gt; 是一个依赖 &lt;code&gt;a&lt;/code&gt; 和存在的目录结构：</target>
        </trans-unit>
        <trans-unit id="b5cdadeb82c625264f87984cdb7712780b8ec0e8" translate="yes" xml:space="preserve">
          <source>Global Objects</source>
          <target state="translated">全局对象</target>
        </trans-unit>
        <trans-unit id="2fbfcc83f5aaca871794a502e4acc6e3f184a789" translate="yes" xml:space="preserve">
          <source>Global Uncaught Exceptions</source>
          <target state="translated">全球未捕获异常</target>
        </trans-unit>
        <trans-unit id="5fb36c11e9fc0d37d09666e2af5e8441d628402a" translate="yes" xml:space="preserve">
          <source>Global and Local Scope</source>
          <target state="translated">全球和本地范围</target>
        </trans-unit>
        <trans-unit id="ccaef04ea4be804bccef5366669a1def24d12f2c" translate="yes" xml:space="preserve">
          <source>Global and local scope</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e37f490a39d54c9fbeb3fe41c5d4ea1ae177329" translate="yes" xml:space="preserve">
          <source>Global instance of &lt;a href=&quot;#https_class_https_agent&quot;&gt;&lt;code&gt;https.Agent&lt;/code&gt;&lt;/a&gt; for all HTTPS client requests.</source>
          <target state="translated">所有HTTPS客户端请求的&lt;a href=&quot;#https_class_https_agent&quot;&gt; &lt;code&gt;https.Agent&lt;/code&gt; 的&lt;/a&gt;全局实例。</target>
        </trans-unit>
        <trans-unit id="0325bf31f1497d9a8e4078e8217123ef9c5d16a1" translate="yes" xml:space="preserve">
          <source>Global instance of &lt;code&gt;Agent&lt;/code&gt; which is used as the default for all HTTP client requests.</source>
          <target state="translated">&lt;code&gt;Agent&lt;/code&gt; 全局实例，用作所有HTTP客户端请求的默认实例。</target>
        </trans-unit>
        <trans-unit id="6c1092b384c391c235bf0f03a6b067bc9829d4dd" translate="yes" xml:space="preserve">
          <source>Global objects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fcb376e16da79ed7bc2e12f38e3b0c37529189d" translate="yes" xml:space="preserve">
          <source>Global uncaught exceptions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f827c66e7e04723ed3fa1ab0945dff3f10b9b83" translate="yes" xml:space="preserve">
          <source>Globals</source>
          <target state="translated">Globals</target>
        </trans-unit>
        <trans-unit id="648da6c1992411de134935564dd6ba6172deb006" translate="yes" xml:space="preserve">
          <source>Go to start of line</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e02451e7f35249a5e24b68a62fb7a1aa83c92b4" translate="yes" xml:space="preserve">
          <source>Go to to end of line</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a04855390ce638fd14ff576f9ce989505246d79" translate="yes" xml:space="preserve">
          <source>Gracefully closes the &lt;code&gt;Http2Session&lt;/code&gt;, allowing any existing streams to complete on their own and preventing new &lt;code&gt;Http2Stream&lt;/code&gt; instances from being created. Once closed, &lt;code&gt;http2session.destroy()&lt;/code&gt;&lt;em&gt;might&lt;/em&gt; be called if there are no open &lt;code&gt;Http2Stream&lt;/code&gt; instances.</source>
          <target state="translated">优雅地关闭 &lt;code&gt;Http2Session&lt;/code&gt; ，从而允许任何现有流自行完成，并防止创建新的 &lt;code&gt;Http2Stream&lt;/code&gt; 实例。一旦关闭，如果没有打开的 &lt;code&gt;Http2Stream&lt;/code&gt; 实例，则&lt;em&gt;可能&lt;/em&gt;会调用 &lt;code&gt;http2session.destroy()&lt;/code&gt; 。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="76dde01230d81e8318645c40922a83614432919a" translate="yes" xml:space="preserve">
          <source>Gracefully closes the &lt;code&gt;QuicSocket&lt;/code&gt;. Existing &lt;code&gt;QuicSession&lt;/code&gt; instances will be permitted to close naturally. New &lt;code&gt;QuicClientSession&lt;/code&gt; and &lt;code&gt;QuicServerSession&lt;/code&gt; instances will not be allowed. The returns &lt;code&gt;Promise&lt;/code&gt; will be resolved once the &lt;code&gt;QuicSocket&lt;/code&gt; is destroyed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cf184f4c67ad58283ecb19349720b0cae756829" translate="yes" xml:space="preserve">
          <source>H</source>
          <target state="translated">H</target>
        </trans-unit>
        <trans-unit id="dcc9fe2b29d5c16eb1fd877bb1de7daac43d3b7b" translate="yes" xml:space="preserve">
          <source>HKDF is a simple key derivation function defined in RFC 5869. The given &lt;code&gt;key&lt;/code&gt;, &lt;code&gt;salt&lt;/code&gt; and &lt;code&gt;info&lt;/code&gt; are used with the &lt;code&gt;digest&lt;/code&gt; to derive a key of &lt;code&gt;keylen&lt;/code&gt; bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d86096f13a3b618af397b1b26730cf6143f8cfe" translate="yes" xml:space="preserve">
          <source>HMAC keys</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aaa2e96a3d3268692d6f1633b35f5be17a47afc2" translate="yes" xml:space="preserve">
          <source>HPE_HEADER_OVERFLOW</source>
          <target state="translated">HPE_HEADER_OVERFLOW</target>
        </trans-unit>
        <trans-unit id="f40b27d6b8b9a4fc3827264c1da16a04ecf4d094" translate="yes" xml:space="preserve">
          <source>HTTP</source>
          <target state="translated">HTTP</target>
        </trans-unit>
        <trans-unit id="fdb5a4b986e0dcc27ea3e57d3e4174bc376076a2" translate="yes" xml:space="preserve">
          <source>HTTP message headers are represented by an object like this:</source>
          <target state="translated">HTTP消息头用这样的对象表示。</target>
        </trans-unit>
        <trans-unit id="6bedb581201b3185f91c52a099cb8493bc05da02" translate="yes" xml:space="preserve">
          <source>HTTP requests, on the client</source>
          <target state="translated">HTTP请求,在客户端</target>
        </trans-unit>
        <trans-unit id="8c27f8f8898f84f5f0e669f814562011af3abe1f" translate="yes" xml:space="preserve">
          <source>HTTP requests, on the server</source>
          <target state="translated">HTTP请求,在服务器上</target>
        </trans-unit>
        <trans-unit id="7e79e0f7231dc71d3c2aaa877778c65a5247b0d2" translate="yes" xml:space="preserve">
          <source>HTTP requires the &lt;code&gt;Trailer&lt;/code&gt; header to be sent in order to emit trailers, with a list of the header fields in its value. E.g.,</source>
          <target state="translated">HTTP要求发送 &lt;code&gt;Trailer&lt;/code&gt; 标头以发出预告片，并在其值中包含标头字段的列表。例如，</target>
        </trans-unit>
        <trans-unit id="86fcfbb15f6845bfac98cdb49edf4809f4e265ca" translate="yes" xml:space="preserve">
          <source>HTTP responses, on the client</source>
          <target state="translated">HTTP响应,在客户端</target>
        </trans-unit>
        <trans-unit id="48f2266f075962126f207086a2582ec55aae30f1" translate="yes" xml:space="preserve">
          <source>HTTP responses, on the server</source>
          <target state="translated">HTTP响应,在服务器上</target>
        </trans-unit>
        <trans-unit id="c8ea5ddd7ae4ea21da1ba2ad745cba902ce0e7c9" translate="yes" xml:space="preserve">
          <source>HTTP/1 connection specific headers are forbidden to be used in HTTP/2 requests and responses.</source>
          <target state="translated">在HTTP/2请求和响应中,禁止使用HTTP/1连接专用头。</target>
        </trans-unit>
        <trans-unit id="56c29f7b7a2556c18bd6ae0375852ab119253dde" translate="yes" xml:space="preserve">
          <source>HTTP/1.1 Required</source>
          <target state="translated">HTTP/1.1要求</target>
        </trans-unit>
        <trans-unit id="396826d4135990391d3176f7b40c9091eed2c0d3" translate="yes" xml:space="preserve">
          <source>HTTP/2</source>
          <target state="translated">HTTP/2</target>
        </trans-unit>
        <trans-unit id="8148960d4e61716fc44450d8897a0e7b3f04fd9e" translate="yes" xml:space="preserve">
          <source>HTTP/2 &lt;code&gt;ORIGIN&lt;/code&gt; frames are limited to a length of 16382 bytes.</source>
          <target state="translated">HTTP / 2 &lt;code&gt;ORIGIN&lt;/code&gt; 帧的长度限制为16382个字节。</target>
        </trans-unit>
        <trans-unit id="4a2dece163a07b7e6be65743d283e8755270d1ad" translate="yes" xml:space="preserve">
          <source>HTTP/2 &lt;code&gt;ORIGIN&lt;/code&gt; frames require a valid origin.</source>
          <target state="translated">HTTP / 2 &lt;code&gt;ORIGIN&lt;/code&gt; 帧需要有效的来源。</target>
        </trans-unit>
        <trans-unit id="9230f85593a0376299b95c5b187c2cfcd9228863" translate="yes" xml:space="preserve">
          <source>HTTP/2 ALTSVC frames are limited to a maximum of 16,382 payload bytes.</source>
          <target state="translated">HTTP/2 ALTSVC帧的最大有效载荷字节数限制为16,382。</target>
        </trans-unit>
        <trans-unit id="dacf73205d74d5e87bb8aca79da96f9db3b2255e" translate="yes" xml:space="preserve">
          <source>HTTP/2 ALTSVC frames require a valid origin.</source>
          <target state="translated">HTTP/2 ALTSVC帧需要一个有效的原点。</target>
        </trans-unit>
        <trans-unit id="32c063f11c9e54047fa82b0c64454229ca1c933a" translate="yes" xml:space="preserve">
          <source>HTTP/2 informational headers must only be sent &lt;em&gt;prior&lt;/em&gt; to calling the &lt;code&gt;Http2Stream.prototype.respond()&lt;/code&gt; method.</source>
          <target state="translated">仅&lt;em&gt;在&lt;/em&gt;调用 &lt;code&gt;Http2Stream.prototype.respond()&lt;/code&gt; 方法&lt;em&gt;之前&lt;/em&gt;发送HTTP / 2信息标头。</target>
        </trans-unit>
        <trans-unit id="528fe308debf6ef52289c4212825715f2f7cc298" translate="yes" xml:space="preserve">
          <source>HTTP/2 is now Stable. Previously, it had been Experimental.</source>
          <target state="translated">HTTP/2现在是稳定的。此前,它一直是实验性的。</target>
        </trans-unit>
        <trans-unit id="e077df1ae49c023afc50547177431823bd0969d2" translate="yes" xml:space="preserve">
          <source>HTTP/2 ping payloads must be exactly 8 bytes in length.</source>
          <target state="translated">HTTP/2 ping有效载荷的长度必须正好是8个字节。</target>
        </trans-unit>
        <trans-unit id="5870c206c31719f59b8b501ee7f225f052fa05b0" translate="yes" xml:space="preserve">
          <source>HTTP/2 requires requests to have either the &lt;code&gt;:authority&lt;/code&gt; pseudo-header or the &lt;code&gt;host&lt;/code&gt; header. Prefer &lt;code&gt;:authority&lt;/code&gt; when constructing an HTTP/2 request directly, and &lt;code&gt;host&lt;/code&gt; when converting from HTTP/1 (in proxies, for instance).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2060575b9f4a00030da60d7484909f097bc2c636" translate="yes" xml:space="preserve">
          <source>HTTP/3 is an application layer protocol that uses QUIC as the transport.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6627f416e24dd2e31b07d2196d4c0019a8f40480" translate="yes" xml:space="preserve">
          <source>HTTP2 headers can be marked as sensitive, which means that the HTTP/2 header compression algorithm will never index them. This can make sense for header values with low entropy and that may be considered valuable to an attacker, for example &lt;code&gt;Cookie&lt;/code&gt; or &lt;code&gt;Authorization&lt;/code&gt;. To achieve this, add the header name to the &lt;code&gt;[http2.sensitiveHeaders]&lt;/code&gt; property as an array:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f52698c28f0d2036450e02a85451ee4f5be02442" translate="yes" xml:space="preserve">
          <source>HTTPS</source>
          <target state="translated">HTTPS</target>
        </trans-unit>
        <trans-unit id="ef09cecaab6baa3ec4655e999ed134572f934f56" translate="yes" xml:space="preserve">
          <source>HTTPS is the HTTP protocol over TLS/SSL. In Node.js this is implemented as a separate module.</source>
          <target state="translated">HTTPS是通过TLS/SSL实现的HTTP协议。在Node.js中,这是作为一个单独的模块来实现的。</target>
        </trans-unit>
        <trans-unit id="7321ba496209c1006f0503074146f8fa922604ca" translate="yes" xml:space="preserve">
          <source>HTTPS loader</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c638f78e236c7b777e5413fb14f7ac604a42539" translate="yes" xml:space="preserve">
          <source>Half-closes the socket. i.e., it sends a FIN packet. It is possible the server will still send some data.</source>
          <target state="translated">半关闭套接字,即发送一个FIN包。有可能服务器还是会发送一些数据。</target>
        </trans-unit>
        <trans-unit id="4f9e5d2b5f778fe24b47ab2ebc0290eb3118419c" translate="yes" xml:space="preserve">
          <source>Handle non-&lt;code&gt;Uint8Array&lt;/code&gt; typed arrays correctly.</source>
          <target state="translated">正确处理非 &lt;code&gt;Uint8Array&lt;/code&gt; 类型的数组。</target>
        </trans-unit>
        <trans-unit id="fd711236f5bce407cc82e7be889f63bbf1c1e755" translate="yes" xml:space="preserve">
          <source>Handle scopes are created using &lt;a href=&quot;#n_api_napi_open_handle_scope&quot;&gt;&lt;code&gt;napi_open_handle_scope&lt;/code&gt;&lt;/a&gt; and are destroyed using &lt;a href=&quot;#n_api_napi_close_handle_scope&quot;&gt;&lt;code&gt;napi_close_handle_scope&lt;/code&gt;&lt;/a&gt;. Closing the scope can indicate to the GC that all &lt;code&gt;napi_value&lt;/code&gt;s created during the lifetime of the handle scope are no longer referenced from the current stack frame.</source>
          <target state="translated">使用&lt;a href=&quot;#n_api_napi_open_handle_scope&quot;&gt; &lt;code&gt;napi_open_handle_scope&lt;/code&gt; &lt;/a&gt;创建句柄作用域，并使用napi_close_handle_scope销毁&lt;a href=&quot;#n_api_napi_close_handle_scope&quot;&gt; &lt;code&gt;napi_close_handle_scope&lt;/code&gt; &lt;/a&gt;。关闭作用域可以向GC指示在句柄作用域生存 &lt;code&gt;napi_value&lt;/code&gt; 创建的所有napi_value不再从当前堆栈帧中引用。</target>
        </trans-unit>
        <trans-unit id="228c77a4ec5ff84fa645413101166b3e93d83071" translate="yes" xml:space="preserve">
          <source>Handler functions may mutate the &lt;code&gt;event&lt;/code&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a64f6a82d4f450691ecd905c452070f694076286" translate="yes" xml:space="preserve">
          <source>Handlers are always invoked in the order they were added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b4670d802dc0f8d1d8fe9b416d00a6e619d00e5" translate="yes" xml:space="preserve">
          <source>Handlers for &lt;code&gt;Promise&lt;/code&gt;s are now invoked in the domain in which the first promise of a chain was created.</source>
          <target state="translated">现在在创建链的第一个promise的域中调用 &lt;code&gt;Promise&lt;/code&gt; 的处理程序。</target>
        </trans-unit>
        <trans-unit id="4409d51e3614ba3998980937265da2facba22c2f" translate="yes" xml:space="preserve">
          <source>Handling client hello</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d16ab4925704ec488726f12cbc19ee310ea09d7a" translate="yes" xml:space="preserve">
          <source>Handling events only once</source>
          <target state="translated">只处理一次事件</target>
        </trans-unit>
        <trans-unit id="6b91098d75c32149f113553d14a234924b548a1e" translate="yes" xml:space="preserve">
          <source>Handling this event involves calling &lt;a href=&quot;#http2_response_writecontinue&quot;&gt;&lt;code&gt;response.writeContinue()&lt;/code&gt;&lt;/a&gt; if the client should continue to send the request body, or generating an appropriate HTTP response (e.g. 400 Bad Request) if the client should not continue to send the request body.</source>
          <target state="translated">处理此事件包括：如果客户端应继续发送请求正文，则调用&lt;a href=&quot;#http2_response_writecontinue&quot;&gt; &lt;code&gt;response.writeContinue()&lt;/code&gt; ;&lt;/a&gt;如果客户端不应继续发送请求正文，则生成适当的HTTP响应（例如400 Bad Request）。</target>
        </trans-unit>
        <trans-unit id="2b712796f82e3fa4437c6dea3765a90d7215fbfd" translate="yes" xml:space="preserve">
          <source>Handling this event involves calling &lt;a href=&quot;#http_response_writecontinue&quot;&gt;&lt;code&gt;response.writeContinue()&lt;/code&gt;&lt;/a&gt; if the client should continue to send the request body, or generating an appropriate HTTP response (e.g. 400 Bad Request) if the client should not continue to send the request body.</source>
          <target state="translated">处理此事件包括：如果客户端应继续发送请求正文，则调用&lt;a href=&quot;#http_response_writecontinue&quot;&gt; &lt;code&gt;response.writeContinue()&lt;/code&gt; ;&lt;/a&gt;如果客户端不应继续发送请求正文，则生成适当的HTTP响应（例如400 Bad Request）。</target>
        </trans-unit>
        <trans-unit id="873507a022b58de26a88deae87268cbd8d6af5b1" translate="yes" xml:space="preserve">
          <source>Hash</source>
          <target state="translated">Hash</target>
        </trans-unit>
        <trans-unit id="40aba275f1ef6a200de77f3a58f12fd38676ccf0" translate="yes" xml:space="preserve">
          <source>Header field names are &lt;em&gt;case-insensitive&lt;/em&gt; and are transmitted over the wire strictly as lower-case strings. The API provided by Node.js allows header names to be set as mixed-case strings (e.g. &lt;code&gt;Content-Type&lt;/code&gt;) but will convert those to lower-case (e.g. &lt;code&gt;content-type&lt;/code&gt;) upon transmission.</source>
          <target state="translated">标头字段名称&lt;em&gt;不区分大小写，&lt;/em&gt;并且严格以小写字符串形式通过网络传输。Node.js提供的API允许将标头名称设置为大小写混合的字符串（例如 &lt;code&gt;Content-Type&lt;/code&gt; ），但是在传输时会将标头名称转换为小写的字符串（例如 &lt;code&gt;content-type&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="88b12fc1e888c0c5168ce6494ea0eeffcfbfa675" translate="yes" xml:space="preserve">
          <source>Header field values are handled with more leniency but &lt;em&gt;should&lt;/em&gt; not contain new-line or carriage return characters and &lt;em&gt;should&lt;/em&gt; be limited to US-ASCII characters, per the requirements of the HTTP specification.</source>
          <target state="translated">根据HTTP规范的要求，头字段值的处理更为宽松，但&lt;em&gt;不应&lt;/em&gt;包含换行符或回车符，并且&lt;em&gt;应&lt;/em&gt;限制为US-ASCII字符。</target>
        </trans-unit>
        <trans-unit id="2ec8b1892d59bd2c1b2abd7acb2f186730da0aaa" translate="yes" xml:space="preserve">
          <source>Header field-names &lt;em&gt;must only&lt;/em&gt; contain one or more of the following ASCII characters: &lt;code&gt;a&lt;/code&gt;-&lt;code&gt;z&lt;/code&gt;, &lt;code&gt;A&lt;/code&gt;-&lt;code&gt;Z&lt;/code&gt;, &lt;code&gt;0&lt;/code&gt;-&lt;code&gt;9&lt;/code&gt;, &lt;code&gt;!&lt;/code&gt;, &lt;code&gt;#&lt;/code&gt;, &lt;code&gt;$&lt;/code&gt;, &lt;code&gt;%&lt;/code&gt;, &lt;code&gt;&amp;amp;&lt;/code&gt;, &lt;code&gt;'&lt;/code&gt;, &lt;code&gt;*&lt;/code&gt;, &lt;code&gt;+&lt;/code&gt;, &lt;code&gt;-&lt;/code&gt;, &lt;code&gt;.&lt;/code&gt;, &lt;code&gt;^&lt;/code&gt;, &lt;code&gt;_&lt;/code&gt;, &lt;code&gt;`&lt;/code&gt; (backtick), &lt;code&gt;|&lt;/code&gt;, and &lt;code&gt;~&lt;/code&gt;.</source>
          <target state="translated">头字段名称&lt;em&gt;必须只&lt;/em&gt;包含一个或多个以下的ASCII字符组成： &lt;code&gt;a&lt;/code&gt; - &lt;code&gt;z&lt;/code&gt; ， &lt;code&gt;A&lt;/code&gt; - &lt;code&gt;Z&lt;/code&gt; ， &lt;code&gt;0&lt;/code&gt; - &lt;code&gt;9&lt;/code&gt; ， &lt;code&gt;!&lt;/code&gt; ， &lt;code&gt;#&lt;/code&gt; ， &lt;code&gt;$&lt;/code&gt; ， &lt;code&gt;%&lt;/code&gt; ， &lt;code&gt;&amp;amp;&lt;/code&gt; ， &lt;code&gt;'&lt;/code&gt; ， &lt;code&gt;*&lt;/code&gt; ， &lt;code&gt;+&lt;/code&gt; ， &lt;code&gt;-&lt;/code&gt; , &lt;code&gt;.&lt;/code&gt; ， &lt;code&gt;^&lt;/code&gt; ， &lt;code&gt;_&lt;/code&gt; ， &lt;code&gt;`&lt;/code&gt; （反引号）， &lt;code&gt;|&lt;/code&gt; 和 &lt;code&gt;~&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6d9b086c13105ea35971403bf835a70d0bbb872e" translate="yes" xml:space="preserve">
          <source>Header names are not lowercased, and duplicates are not merged.</source>
          <target state="translated">头部名称不小写,重复的名称不合并。</target>
        </trans-unit>
        <trans-unit id="2511e922d77fcdc42cd4383bff0441bb6537fa5c" translate="yes" xml:space="preserve">
          <source>Header objects passed to callback functions will have a &lt;code&gt;null&lt;/code&gt; prototype. This means that normal JavaScript object methods such as &lt;code&gt;Object.prototype.toString()&lt;/code&gt; and &lt;code&gt;Object.prototype.hasOwnProperty()&lt;/code&gt; will not work.</source>
          <target state="translated">传递给回调函数的标头对象将具有 &lt;code&gt;null&lt;/code&gt; 原型。这意味着普通的JavaScript对象方法（例如 &lt;code&gt;Object.prototype.toString()&lt;/code&gt; 和 &lt;code&gt;Object.prototype.hasOwnProperty()&lt;/code&gt; )将无法工作。</target>
        </trans-unit>
        <trans-unit id="9e4700ad76aa91c1d67e40b3abea4c788dda8a72" translate="yes" xml:space="preserve">
          <source>Headers Object</source>
          <target state="translated">标题对象</target>
        </trans-unit>
        <trans-unit id="67c4b953e20f4046d4339e1ef3eb71030cdf4cff" translate="yes" xml:space="preserve">
          <source>Headers are represented as own-properties on JavaScript objects. The property keys will be serialized to lower-case. Property values should be strings (if they are not they will be coerced to strings) or an &lt;code&gt;Array&lt;/code&gt; of strings (in order to send more than one value per header field).</source>
          <target state="translated">标头在JavaScript对象上表示为自己的属性。属性键将序列化为小写。属性值应该是字符串（如果不是，则将它们强制转换为字符串）或字符串 &lt;code&gt;Array&lt;/code&gt; （以便每个标头字段发送多个值）。</target>
        </trans-unit>
        <trans-unit id="9c4514aa5a37c87bc3e2df29a944e14644960faf" translate="yes" xml:space="preserve">
          <source>Headers object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c27c007a96dfa358dbc61fd4c0845a6951498148" translate="yes" xml:space="preserve">
          <source>Heap Profiler</source>
          <target state="translated">堆分析器</target>
        </trans-unit>
        <trans-unit id="cdc2c9201585ad7e95a0e9ddac7816f7f88d5cea" translate="yes" xml:space="preserve">
          <source>Heap profiler</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d141de50f82ee3e0ba92d0bdde5b5f7cd2e0f464" translate="yes" xml:space="preserve">
          <source>Heap-allocate an instance of this class in the addon initializer. This can be accomplished using the &lt;code&gt;new&lt;/code&gt; keyword.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b502c3a1f48c8609ae212cdfb639dee39673f5e" translate="yes" xml:space="preserve">
          <source>Hello world</source>
          <target state="translated">你好,世界</target>
        </trans-unit>
        <trans-unit id="1d23f19a7e4063e7c60c0e18d73117c9b921e19a" translate="yes" xml:space="preserve">
          <source>Helpers for interacting with the source map cache. This cache is populated when source map parsing is enabled and &lt;a href=&quot;https://sourcemaps.info/spec.html#h.lmz475t4mvbx&quot;&gt;source map include directives&lt;/a&gt; are found in a modules' footer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41c6cab4071321fb2d749352736fd5b32cfb564f" translate="yes" xml:space="preserve">
          <source>Here are the contents of &lt;code&gt;circle.js&lt;/code&gt;:</source>
          <target state="translated">以下是 &lt;code&gt;circle.js&lt;/code&gt; 的内容：</target>
        </trans-unit>
        <trans-unit id="ad2137a56ebf15e23f0b386430b270eb5b5bd497" translate="yes" xml:space="preserve">
          <source>Here is an example below:</source>
          <target state="translated">下面是一个例子。</target>
        </trans-unit>
        <trans-unit id="08b02063a09fd208f0e5d16954f0cb86868b6df8" translate="yes" xml:space="preserve">
          <source>Here is an example of an TCP echo server which listens for connections on port 8124:</source>
          <target state="translated">下面是一个TCP echo服务器的例子,它监听端口8124上的连接。</target>
        </trans-unit>
        <trans-unit id="650d7a34601ecbfc556318f1e1d6fb2cc04c920d" translate="yes" xml:space="preserve">
          <source>Here is an example of the &lt;code&gt;ret&lt;/code&gt; object passed to the callback:</source>
          <target state="translated">这是传递给回调的 &lt;code&gt;ret&lt;/code&gt; 对象的示例：</target>
        </trans-unit>
        <trans-unit id="4d067608386a71a40cf2ed3a4efd12148eb6d04d" translate="yes" xml:space="preserve">
          <source>Here is an example of the result object:</source>
          <target state="translated">下面是一个结果对象的例子。</target>
        </trans-unit>
        <trans-unit id="9a605b24ae485b7b7ebfaac5e6d6801a86626a08" translate="yes" xml:space="preserve">
          <source>Here is an example using the message system. It keeps a count in the master process of the number of HTTP requests received by the workers:</source>
          <target state="translated">下面是一个使用消息系统的例子。它在主进程中统计工人收到的HTTP请求数量。</target>
        </trans-unit>
        <trans-unit id="da970d32241bd4accf1d4a727aee19b70f849a64" translate="yes" xml:space="preserve">
          <source>Here's an example showing how to use the &lt;a href=&quot;https://chromedevtools.github.io/devtools-protocol/v8/HeapProfiler&quot;&gt;Heap Profiler&lt;/a&gt;:</source>
          <target state="translated">这是显示如何使用&lt;a href=&quot;https://chromedevtools.github.io/devtools-protocol/v8/HeapProfiler&quot;&gt;堆分析器&lt;/a&gt;的示例：</target>
        </trans-unit>
        <trans-unit id="26838d9f3d94b6ddd2817d8b544156b68bf25304" translate="yes" xml:space="preserve">
          <source>Here's an example showing how to use the &lt;a href=&quot;https://chromedevtools.github.io/devtools-protocol/v8/Profiler&quot;&gt;CPU Profiler&lt;/a&gt;:</source>
          <target state="translated">这是显示如何使用&lt;a href=&quot;https://chromedevtools.github.io/devtools-protocol/v8/Profiler&quot;&gt;CPU Profiler&lt;/a&gt;的示例：</target>
        </trans-unit>
        <trans-unit id="6674c137d260d9630d25a2f4d17e1afaa452b935" translate="yes" xml:space="preserve">
          <source>High Resolution Time</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f16459104f92ab6b38aa265adb4ecbfc3768e303" translate="yes" xml:space="preserve">
          <source>Histogram</source>
          <target state="translated">Histogram</target>
        </trans-unit>
        <trans-unit id="c784383bf299a785b32f45ad58b42343eea5b02e" translate="yes" xml:space="preserve">
          <source>Historically, node-gyp has been the tool of choice for building native addons. It has widespread adoption and documentation. However, some developers have run into limitations in node-gyp.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90ccd6497400b5576aeca1bd94af74aae1e0a250" translate="yes" xml:space="preserve">
          <source>History</source>
          <target state="translated">History</target>
        </trans-unit>
        <trans-unit id="cc4a71065ff8ca97a2cf841b164f030229d81b91" translate="yes" xml:space="preserve">
          <source>Hmac</source>
          <target state="translated">Hmac</target>
        </trans-unit>
        <trans-unit id="f3d2ec6b4a586d95b5d4f5d2adbc69eebe706a88" translate="yes" xml:space="preserve">
          <source>Hook Callbacks</source>
          <target state="translated">钩子回调</target>
        </trans-unit>
        <trans-unit id="06c885773a4d617d8c66c519780bba0fda08f693" translate="yes" xml:space="preserve">
          <source>Hook callbacks</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bd8f3f03a576b2088bd73a2339d07fca1de805d" translate="yes" xml:space="preserve">
          <source>Hooks</source>
          <target state="translated">Hooks</target>
        </trans-unit>
        <trans-unit id="8cecc82d72d68f9151cb0901cfe40eeac15bfca6" translate="yes" xml:space="preserve">
          <source>How It Works</source>
          <target state="translated">它是如何工作的</target>
        </trans-unit>
        <trans-unit id="1dd6a17cb4033f4f74df1bb6912b8a28a8074084" translate="yes" xml:space="preserve">
          <source>How it works</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8b013bb14afa30043c795cf70fba96d444186a1" translate="yes" xml:space="preserve">
          <source>However, changing from &lt;code&gt;http&lt;/code&gt; to a hypothetical &lt;code&gt;fish&lt;/code&gt; protocol does not because the new protocol is not special.</source>
          <target state="translated">但是，从 &lt;code&gt;http&lt;/code&gt; 更改为假设的 &lt;code&gt;fish&lt;/code&gt; 协议并不是因为新协议不是特别的。</target>
        </trans-unit>
        <trans-unit id="217dafda23837f885d1064b5c21d68c773e81068" translate="yes" xml:space="preserve">
          <source>However, if this function succeeded, further calls to this function after the initial instantiation will be no-ops, to be consistent with the ECMAScript specification.</source>
          <target state="translated">但是,如果这个函数成功了,为了与ECMAScript规范保持一致,在初始实例化之后对这个函数的进一步调用将是无操作的。</target>
        </trans-unit>
        <trans-unit id="d1b7ad14a7be7d7e22cd04a62b5f23338533302a" translate="yes" xml:space="preserve">
          <source>However, in the case where a developer may need to retain a small chunk of memory from a pool for an indeterminate amount of time, it may be appropriate to create an un-pooled &lt;code&gt;Buffer&lt;/code&gt; instance using &lt;code&gt;Buffer.allocUnsafeSlow()&lt;/code&gt; and then copying out the relevant bits.</source>
          <target state="translated">但是，在开发人员可能需要不确定的时间内从池中保留一小块内存的情况下，使用 &lt;code&gt;Buffer.allocUnsafeSlow()&lt;/code&gt; 创建一个非池化的 &lt;code&gt;Buffer&lt;/code&gt; 实例，然后将其复制出来是合适的。相关位。</target>
        </trans-unit>
        <trans-unit id="9d6916e44f35441e32746ea7fedd004805bfa6e2" translate="yes" xml:space="preserve">
          <source>However, the created &lt;code&gt;MessagePort&lt;/code&gt; no longer inherits from &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/EventTarget&quot;&gt;&lt;code&gt;EventTarget&lt;/code&gt;&lt;/a&gt;, and only &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/MessagePort/onmessage&quot;&gt;&lt;code&gt;port.onmessage()&lt;/code&gt;&lt;/a&gt; can be used to receive events using it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="371f9ed83922bcd4b3843ce103949d80056a0911" translate="yes" xml:space="preserve">
          <source>However, the created &lt;code&gt;MessagePort&lt;/code&gt; will no longer inherit from &lt;a href=&quot;events&quot;&gt;&lt;code&gt;EventEmitter&lt;/code&gt;&lt;/a&gt;, and only &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/MessagePort/onmessage&quot;&gt;&lt;code&gt;port.onmessage()&lt;/code&gt;&lt;/a&gt; can be used to receive events using it.</source>
          <target state="translated">但是，创建的 &lt;code&gt;MessagePort&lt;/code&gt; 将不再继承自&lt;a href=&quot;events&quot;&gt; &lt;code&gt;EventEmitter&lt;/code&gt; &lt;/a&gt;，并且仅&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/MessagePort/onmessage&quot;&gt; &lt;code&gt;port.onmessage()&lt;/code&gt; &lt;/a&gt;可以用于接收使用它的事件。</target>
        </trans-unit>
        <trans-unit id="5aa28c2a213a024d7d1a0c438ecbc7bbfec1b88d" translate="yes" xml:space="preserve">
          <source>However, the following will result in an &lt;a href=&quot;#assert_class_assert_assertionerror&quot;&gt;&lt;code&gt;AssertionError&lt;/code&gt;&lt;/a&gt; with the message 'Got unwanted exception...':</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d38fc251c7926f79e6e726b8ee8e35076886e90" translate="yes" xml:space="preserve">
          <source>However, the following will result in an &lt;code&gt;AssertionError&lt;/code&gt; with the message 'Got unwanted exception...':</source>
          <target state="translated">但是，以下内容将导致 &lt;code&gt;AssertionError&lt;/code&gt; 并显示消息&amp;ldquo;出现不需要的异常...&amp;rdquo;：</target>
        </trans-unit>
        <trans-unit id="d9c0426790856f8e44b351f9e4917ce4ccb29974" translate="yes" xml:space="preserve">
          <source>However, this format is not a full superset of JSON, and e.g. properties set on objects of such built-in types will not be passed on through the serialization step. Additionally, performance may not be equivalent to that of JSON, depending on the structure of the passed data. Therefore, this feature requires opting in by setting the &lt;code&gt;serialization&lt;/code&gt; option to &lt;code&gt;'advanced'&lt;/code&gt; when calling &lt;a href=&quot;#child_process_child_process_spawn_command_args_options&quot;&gt;&lt;code&gt;child_process.spawn()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#child_process_child_process_fork_modulepath_args_options&quot;&gt;&lt;code&gt;child_process.fork()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4f31e79d484e6bad0399f3831ddb8f4f71d4b70" translate="yes" xml:space="preserve">
          <source>Http2SecureServer</source>
          <target state="translated">Http2SecureServer</target>
        </trans-unit>
        <trans-unit id="69e173fd39778ed04b13acb1e3cb6b95259bc29b" translate="yes" xml:space="preserve">
          <source>Http2Server</source>
          <target state="translated">Http2Server</target>
        </trans-unit>
        <trans-unit id="e07e208f0d559a077e5ff88cdf452db14558d01d" translate="yes" xml:space="preserve">
          <source>Http2Session</source>
          <target state="translated">Http2Session</target>
        </trans-unit>
        <trans-unit id="c5163621c30ca50884bfc415eac2ea0ee630b513" translate="yes" xml:space="preserve">
          <source>Http2Session and Sockets</source>
          <target state="translated">Http2Session和Sockets</target>
        </trans-unit>
        <trans-unit id="0ab6c9fdd17eeadb81f558be7086b2bf5a839c48" translate="yes" xml:space="preserve">
          <source>Http2Stream</source>
          <target state="translated">Http2Stream</target>
        </trans-unit>
        <trans-unit id="e488ff3925f9c2b81a0fc61328b3e3ca7adb034e" translate="yes" xml:space="preserve">
          <source>Http2Stream Lifecycle</source>
          <target state="translated">Http2Stream生命周期</target>
        </trans-unit>
        <trans-unit id="8fdf25d549e82b325ad178006258a8719d41ecfb" translate="yes" xml:space="preserve">
          <source>ICU is able to automatically find and load a variety of data formats, but the data must be appropriate for the ICU version, and the file correctly named. The most common name for the data file is &lt;code&gt;icudt6X[bl].dat&lt;/code&gt;, where &lt;code&gt;6X&lt;/code&gt; denotes the intended ICU version, and &lt;code&gt;b&lt;/code&gt; or &lt;code&gt;l&lt;/code&gt; indicates the system's endianness. Check &lt;a href=&quot;http://userguide.icu-project.org/icudata&quot;&gt;&quot;ICU Data&quot;&lt;/a&gt; article in the ICU User Guide for other supported formats and more details on ICU data in general.</source>
          <target state="translated">ICU能够自动查找和加载各种数据格式，但是数据必须适合ICU版本，并且文件名正确。数据文件的最常用名称是 &lt;code&gt;icudt6X[bl].dat&lt;/code&gt; ，其中 &lt;code&gt;6X&lt;/code&gt; 表示预期的ICU版本， &lt;code&gt;b&lt;/code&gt; 或 &lt;code&gt;l&lt;/code&gt; 表示系统的字节序。检查&lt;a href=&quot;http://userguide.icu-project.org/icudata&quot;&gt;&amp;ldquo;ICU数据&amp;rdquo;&lt;/a&gt;的ICU用户指南中的文章为其他支持的格式和一般ICU数据的详细信息。</target>
        </trans-unit>
        <trans-unit id="324af4da694d68f4b7d517af8a91fe505f93074c" translate="yes" xml:space="preserve">
          <source>IPC Support</source>
          <target state="translated">IPC支持</target>
        </trans-unit>
        <trans-unit id="cd07613e18fd2980e850dc35cf7b7b6aa2c0cde7" translate="yes" xml:space="preserve">
          <source>IPC channels from parent processes are not accessible.</source>
          <target state="translated">父进程的IPC通道无法访问。</target>
        </trans-unit>
        <trans-unit id="839086e14a333a353919df42d137e10c3a768a71" translate="yes" xml:space="preserve">
          <source>IPC support</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c55c70f459a62763619af9f57cf5850cd15f474f" translate="yes" xml:space="preserve">
          <source>IPv4 addresses (default)</source>
          <target state="translated">IPv4地址(默认</target>
        </trans-unit>
        <trans-unit id="6c0afb2bb01117b0e08d467de866f58f12c8ad23" translate="yes" xml:space="preserve">
          <source>IPv6 addresses</source>
          <target state="translated">IPv6地址</target>
        </trans-unit>
        <trans-unit id="4025174d38891a7c19336433fdedd242a1eeb261" translate="yes" xml:space="preserve">
          <source>Identical to &lt;a href=&quot;#buffer_buf_indexof_value_byteoffset_encoding&quot;&gt;&lt;code&gt;buf.indexOf()&lt;/code&gt;&lt;/a&gt;, except the last occurrence of &lt;code&gt;value&lt;/code&gt; is found rather than the first occurrence.</source>
          <target state="translated">与&lt;a href=&quot;#buffer_buf_indexof_value_byteoffset_encoding&quot;&gt; &lt;code&gt;buf.indexOf()&lt;/code&gt; &lt;/a&gt;相同，除了找到 &lt;code&gt;value&lt;/code&gt; 的最后一次出现而不是第一次出现。</target>
        </trans-unit>
        <trans-unit id="99807e48005beb9afb928c593a1736f90716a5cf" translate="yes" xml:space="preserve">
          <source>Identical to &lt;code&gt;-e&lt;/code&gt; but prints the result.</source>
          <target state="translated">与 &lt;code&gt;-e&lt;/code&gt; 相同，但显示结果。</target>
        </trans-unit>
        <trans-unit id="eff66c38c482071129bb47b8b0514c9ef9980f78" translate="yes" xml:space="preserve">
          <source>Identifying paths for IPC connections</source>
          <target state="translated">确定IPC连接的路径</target>
        </trans-unit>
        <trans-unit id="1eb8242c3d7f4981b86f02d871e9facba25b76e8" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;#http2_response_write_chunk_encoding_callback&quot;&gt;&lt;code&gt;response.write()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#http2_response_end_data_encoding_callback&quot;&gt;&lt;code&gt;response.end()&lt;/code&gt;&lt;/a&gt; are called before calling this, the implicit/mutable headers will be calculated and call this function.</source>
          <target state="translated">如果在调用此函数之前调用&lt;a href=&quot;#http2_response_write_chunk_encoding_callback&quot;&gt; &lt;code&gt;response.write()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#http2_response_end_data_encoding_callback&quot;&gt; &lt;code&gt;response.end()&lt;/code&gt; &lt;/a&gt;，则将计算隐式/可变头，并调用此函数。</target>
        </trans-unit>
        <trans-unit id="1f5db519e046b3f5c079931debb7310f19546987" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;#http_response_write_chunk_encoding_callback&quot;&gt;&lt;code&gt;response.write()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#http_response_end_data_encoding_callback&quot;&gt;&lt;code&gt;response.end()&lt;/code&gt;&lt;/a&gt; are called before calling this, the implicit/mutable headers will be calculated and call this function.</source>
          <target state="translated">如果在调用此函数之前调用&lt;a href=&quot;#http_response_write_chunk_encoding_callback&quot;&gt; &lt;code&gt;response.write()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#http_response_end_data_encoding_callback&quot;&gt; &lt;code&gt;response.end()&lt;/code&gt; &lt;/a&gt;，则将计算隐式/可变头，并调用此函数。</target>
        </trans-unit>
        <trans-unit id="13c1d4abaa2e24db688c942bc44506eecb997ffd" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;#http_response_writehead_statuscode_statusmessage_headers&quot;&gt;&lt;code&gt;response.writeHead()&lt;/code&gt;&lt;/a&gt; method is called and this method has not been called, it will directly write the supplied header values onto the network channel without caching internally, and the &lt;a href=&quot;#http_response_getheader_name&quot;&gt;&lt;code&gt;response.getHeader()&lt;/code&gt;&lt;/a&gt; on the header will not yield the expected result. If progressive population of headers is desired with potential future retrieval and modification, use &lt;a href=&quot;#http_response_setheader_name_value&quot;&gt;&lt;code&gt;response.setHeader()&lt;/code&gt;&lt;/a&gt; instead of &lt;a href=&quot;#http_response_writehead_statuscode_statusmessage_headers&quot;&gt;&lt;code&gt;response.writeHead()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果调用&lt;a href=&quot;#http_response_writehead_statuscode_statusmessage_headers&quot;&gt; &lt;code&gt;response.writeHead()&lt;/code&gt; &lt;/a&gt;方法并且尚未调用此方法，它将直接将提供的标头值写入网络通道，而无需内部缓存，并且标头上的&lt;a href=&quot;#http_response_getheader_name&quot;&gt; &lt;code&gt;response.getHeader()&lt;/code&gt; &lt;/a&gt;将不会产生预期的结果。如果希望逐步填充标头并可能在将来进行检索和修改，请使用&lt;a href=&quot;#http_response_setheader_name_value&quot;&gt; &lt;code&gt;response.setHeader()&lt;/code&gt; &lt;/a&gt;而不是&lt;a href=&quot;#http_response_writehead_statuscode_statusmessage_headers&quot;&gt; &lt;code&gt;response.writeHead()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5c39f6015a6de86ba481a03db4cf0b880b07f9b9" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;worker_threads#worker_threads_class_worker&quot;&gt;&lt;code&gt;Worker&lt;/code&gt;&lt;/a&gt;s are used, each thread has an independent &lt;code&gt;async_hooks&lt;/code&gt; interface, and each thread will use a new set of async IDs.</source>
          <target state="translated">如果使用&lt;a href=&quot;worker_threads#worker_threads_class_worker&quot;&gt; &lt;code&gt;Worker&lt;/code&gt; &lt;/a&gt;，则每个线程都有一个独立的 &lt;code&gt;async_hooks&lt;/code&gt; 接口，并且每个线程将使用一组新的异步ID。</target>
        </trans-unit>
        <trans-unit id="c956ea5d54c56e56d6447ad458f6b0f837d61a41" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;--cpu-prof-dir&lt;/code&gt; is not specified, the generated profile is placed in the current working directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0871e8ec0ac48a52952a27247e63cbf0113f285d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;--cpu-prof-dir&lt;/code&gt; is not specified, the generated profile will be placed in the current working directory.</source>
          <target state="translated">如果未指定 &lt;code&gt;--cpu-prof-dir&lt;/code&gt; ，则生成的配置文件将放置在当前工作目录中。</target>
        </trans-unit>
        <trans-unit id="b328bd1e7b2c1624919a595e7ae91f7636d4a889" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;--cpu-prof-name&lt;/code&gt; is not specified, the generated profile is named &lt;code&gt;CPU.${yyyymmdd}.${hhmmss}.${pid}.${tid}.${seq}.cpuprofile&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f06f2cbbef2e0fb250e543666453b867b0203fe" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;--cpu-prof-name&lt;/code&gt; is not specified, the generated profile will be named &lt;code&gt;CPU.${yyyymmdd}.${hhmmss}.${pid}.${tid}.${seq}.cpuprofile&lt;/code&gt;.</source>
          <target state="translated">如果未指定 &lt;code&gt;--cpu-prof-name&lt;/code&gt; ，则生成的配置文件将命名为 &lt;code&gt;CPU.${yyyymmdd}.${hhmmss}.${pid}.${tid}.${seq}.cpuprofile&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="252f256b679b33839de5451abb1450ca761612a8" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;--experimental-exports&lt;/code&gt; is enabled, Node.js allows packages loaded via &lt;code&gt;LOAD_NODE_MODULES&lt;/code&gt; to explicitly declare which file paths to expose and how they should be interpreted. This expands on the control packages already had using the &lt;code&gt;main&lt;/code&gt; field.</source>
          <target state="translated">如果启用了 &lt;code&gt;--experimental-exports&lt;/code&gt; ，则Node.js允许通过 &lt;code&gt;LOAD_NODE_MODULES&lt;/code&gt; 加载的包明确声明要公开的文件路径以及应如何解释它们。这扩展了已经使用 &lt;code&gt;main&lt;/code&gt; 字段的控制包。</target>
        </trans-unit>
        <trans-unit id="46808db73a3f4a6eed12baed7fabb79cceca0198" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;--heap-prof-dir&lt;/code&gt; is not specified, the generated profile is placed in the current working directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb76738d0d5b293cfa7a0ef70a7b9988c388ff9c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;--heap-prof-dir&lt;/code&gt; is not specified, the generated profile will be placed in the current working directory.</source>
          <target state="translated">如果未指定 &lt;code&gt;--heap-prof-dir&lt;/code&gt; ，则生成的配置文件将放置在当前工作目录中。</target>
        </trans-unit>
        <trans-unit id="076f4fd015725cda7188f51c19f4dcbee4c431b4" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;--heap-prof-name&lt;/code&gt; is not specified, the generated profile is named &lt;code&gt;Heap.${yyyymmdd}.${hhmmss}.${pid}.${tid}.${seq}.heapprofile&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46da7a20ea57b72f58b0fe3ec3917cf72b3a7d80" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;--heap-prof-name&lt;/code&gt; is not specified, the generated profile will be named &lt;code&gt;Heap.${yyyymmdd}.${hhmmss}.${pid}.${tid}.${seq}.heapprofile&lt;/code&gt;.</source>
          <target state="translated">如果未指定 &lt;code&gt;--heap-prof-name&lt;/code&gt; ，则生成的配置文件将命名为 &lt;code&gt;Heap.${yyyymmdd}.${hhmmss}.${pid}.${tid}.${seq}.heapprofile&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0a980a9bd1025b824afd68b7411862ede9f40818" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;--use-openssl-ca&lt;/code&gt; is enabled, this overrides and sets OpenSSL's directory containing trusted certificates.</source>
          <target state="translated">如果启用了 &lt;code&gt;--use-openssl-ca&lt;/code&gt; ，它将覆盖并设置包含受信任证书的OpenSSL目录。</target>
        </trans-unit>
        <trans-unit id="2fb80a9ef49b333f19355375aacc43b97c24f1e0" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;--use-openssl-ca&lt;/code&gt; is enabled, this overrides and sets OpenSSL's file containing trusted certificates.</source>
          <target state="translated">如果启用了 &lt;code&gt;--use-openssl-ca&lt;/code&gt; ，它将覆盖并设置包含受信任证书的OpenSSL文件。</target>
        </trans-unit>
        <trans-unit id="7e11b3232ffd9dab8c9348cab833faebe15ef6ef" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;address&lt;/code&gt; is not a valid IP address, a &lt;code&gt;TypeError&lt;/code&gt; will be thrown. The &lt;code&gt;port&lt;/code&gt; will be coerced to a number. If it is not a legal port, a &lt;code&gt;TypeError&lt;/code&gt; will be thrown.</source>
          <target state="translated">如果 &lt;code&gt;address&lt;/code&gt; 不是有效的IP地址，则将引发 &lt;code&gt;TypeError&lt;/code&gt; 。该 &lt;code&gt;port&lt;/code&gt; 将被强制为一个数字。如果不是合法端口，则将引发 &lt;code&gt;TypeError&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="06237a5cef98b7f52bc3e886d3ada2f6638389c9" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;algorithm&lt;/code&gt; is provided as a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string&amp;gt;&lt;/a&gt;, it must be one of:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f000879e89ab14159b880cd8a642ceb5bc654f91" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;algorithm&lt;/code&gt; is provided as an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object&quot;&gt;&amp;lt;Object&amp;gt;&lt;/a&gt;, it must have a &lt;code&gt;name&lt;/code&gt; property whose value is one of the above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcd8be5407b5fb181647c0388b364a8265244634" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;allowHalfOpen&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt;, when the other end of the socket sends a FIN packet, the server will only send a FIN packet back when &lt;a href=&quot;#net_socket_end_data_encoding_callback&quot;&gt;&lt;code&gt;socket.end()&lt;/code&gt;&lt;/a&gt; is explicitly called, until then the connection is half-closed (non-readable but still writable). See &lt;a href=&quot;#net_event_end&quot;&gt;&lt;code&gt;'end'&lt;/code&gt;&lt;/a&gt; event and &lt;a href=&quot;https://tools.ietf.org/html/rfc1122&quot;&gt;RFC 1122&lt;/a&gt; (section 4.2.2.13) for more information.</source>
          <target state="translated">如果 &lt;code&gt;allowHalfOpen&lt;/code&gt; 设置为 &lt;code&gt;true&lt;/code&gt; ，则当套接字的另一端发送FIN数据包时，服务器将仅在显式调用&lt;a href=&quot;#net_socket_end_data_encoding_callback&quot;&gt; &lt;code&gt;socket.end()&lt;/code&gt; &lt;/a&gt;时将FIN数据包发送回，直到连接半关闭（不可读）。但仍可写）。有关更多信息，请参见&lt;a href=&quot;#net_event_end&quot;&gt; &lt;code&gt;'end'&lt;/code&gt; &lt;/a&gt;事件和&lt;a href=&quot;https://tools.ietf.org/html/rfc1122&quot;&gt;RFC 1122&lt;/a&gt;（第4.2.2.13节）。</target>
        </trans-unit>
        <trans-unit id="b6058ee035a415370db1a3db640b04683644860b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;asyncFn&lt;/code&gt; is a function and it throws an error synchronously, &lt;code&gt;assert.doesNotReject()&lt;/code&gt; will return a rejected &lt;code&gt;Promise&lt;/code&gt; with that error. If the function does not return a promise, &lt;code&gt;assert.doesNotReject()&lt;/code&gt; will return a rejected &lt;code&gt;Promise&lt;/code&gt; with an &lt;a href=&quot;errors#errors_err_invalid_return_value&quot;&gt;&lt;code&gt;ERR_INVALID_RETURN_VALUE&lt;/code&gt;&lt;/a&gt; error. In both cases the error handler is skipped.</source>
          <target state="translated">如果 &lt;code&gt;asyncFn&lt;/code&gt; 是一个函数并且它同步引发错误，则 &lt;code&gt;assert.doesNotReject()&lt;/code&gt; 将返回带有该错误的被拒绝的 &lt;code&gt;Promise&lt;/code&gt; 。如果函数未返回承诺，则 &lt;code&gt;assert.doesNotReject()&lt;/code&gt; 将返回带有&lt;a href=&quot;errors#errors_err_invalid_return_value&quot;&gt; &lt;code&gt;ERR_INVALID_RETURN_VALUE&lt;/code&gt; &lt;/a&gt;错误的拒绝的 &lt;code&gt;Promise&lt;/code&gt; 。在这两种情况下，都会跳过错误处理程序。</target>
        </trans-unit>
        <trans-unit id="41ea89f36eae232beb7b436e30b4cf63aba4bfd0" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;asyncFn&lt;/code&gt; is a function and it throws an error synchronously, &lt;code&gt;assert.rejects()&lt;/code&gt; will return a rejected &lt;code&gt;Promise&lt;/code&gt; with that error. If the function does not return a promise, &lt;code&gt;assert.rejects()&lt;/code&gt; will return a rejected &lt;code&gt;Promise&lt;/code&gt; with an &lt;a href=&quot;errors#errors_err_invalid_return_value&quot;&gt;&lt;code&gt;ERR_INVALID_RETURN_VALUE&lt;/code&gt;&lt;/a&gt; error. In both cases the error handler is skipped.</source>
          <target state="translated">如果 &lt;code&gt;asyncFn&lt;/code&gt; 是一个函数并且它同步引发错误，则 &lt;code&gt;assert.rejects()&lt;/code&gt; 将返回带有该错误的被拒绝的 &lt;code&gt;Promise&lt;/code&gt; 。如果函数未返回承诺，则 &lt;code&gt;assert.rejects()&lt;/code&gt; 将返回带有&lt;a href=&quot;errors#errors_err_invalid_return_value&quot;&gt; &lt;code&gt;ERR_INVALID_RETURN_VALUE&lt;/code&gt; &lt;/a&gt;错误的拒绝的 &lt;code&gt;Promise&lt;/code&gt; 。在这两种情况下，都会跳过错误处理程序。</target>
        </trans-unit>
        <trans-unit id="59c43e5b8c09c005a303cada9f14ee3496dfd208" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;autoClose&lt;/code&gt; is false, then the file descriptor won't be closed, even if there's an error. It is the application's responsibility to close it and make sure there's no file descriptor leak. If &lt;code&gt;autoClose&lt;/code&gt; is set to true (default behavior), on &lt;code&gt;'error'&lt;/code&gt; or &lt;code&gt;'end'&lt;/code&gt; the file descriptor will be closed automatically.</source>
          <target state="translated">如果 &lt;code&gt;autoClose&lt;/code&gt; 为false，则即使有错误，也不会关闭文件描述符。关闭它并确保没有文件描述符泄漏是应用程序的责任。如果 &lt;code&gt;autoClose&lt;/code&gt; 设置为true（默认行为），则在 &lt;code&gt;'error'&lt;/code&gt; 或 &lt;code&gt;'end'&lt;/code&gt; ，文件描述符将自动关闭。</target>
        </trans-unit>
        <trans-unit id="539b14e864af1c39151389953522f5a823d83c18" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;autoClose&lt;/code&gt; is set to true (default behavior) on &lt;code&gt;'error'&lt;/code&gt; or &lt;code&gt;'finish'&lt;/code&gt; the file descriptor will be closed automatically. If &lt;code&gt;autoClose&lt;/code&gt; is false, then the file descriptor won't be closed, even if there's an error. It is the application's responsibility to close it and make sure there's no file descriptor leak.</source>
          <target state="translated">如果在 &lt;code&gt;'error'&lt;/code&gt; 或 &lt;code&gt;'finish'&lt;/code&gt; 将 &lt;code&gt;autoClose&lt;/code&gt; 设置为true（默认行为），则文件描述符将自动关闭。如果 &lt;code&gt;autoClose&lt;/code&gt; 为false，则即使有错误，也不会关闭文件描述符。关闭它并确保没有文件描述符泄漏是应用程序的责任。</target>
        </trans-unit>
        <trans-unit id="884077a55ab26855c918c881218b89b04b494140" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;byteOffset&lt;/code&gt; is not a number, it will be coerced to a number. Any arguments that coerce to &lt;code&gt;NaN&lt;/code&gt;, like &lt;code&gt;{}&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt;, will search the whole buffer. This behavior matches &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/lastIndexOf&quot;&gt;&lt;code&gt;String#lastIndexOf()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果 &lt;code&gt;byteOffset&lt;/code&gt; 不是数字，它将被强制为数字。强制使用 &lt;code&gt;NaN&lt;/code&gt; 的任何参数（例如 &lt;code&gt;{}&lt;/code&gt; 或 &lt;code&gt;undefined&lt;/code&gt; ）将搜索整个缓冲区。此行为与&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/lastIndexOf&quot;&gt; &lt;code&gt;String#lastIndexOf()&lt;/code&gt; &lt;/a&gt;匹配。</target>
        </trans-unit>
        <trans-unit id="b7b130c5da2c6867ef71cd5fe02db9d69ebd0795" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;byteOffset&lt;/code&gt; is not a number, it will be coerced to a number. If the result of coercion is &lt;code&gt;NaN&lt;/code&gt; or &lt;code&gt;0&lt;/code&gt;, then the entire buffer will be searched. This behavior matches &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/indexOf&quot;&gt;&lt;code&gt;String#indexOf()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果 &lt;code&gt;byteOffset&lt;/code&gt; 不是数字，它将被强制为数字。如果强制结果为 &lt;code&gt;NaN&lt;/code&gt; 或 &lt;code&gt;0&lt;/code&gt; ，则将搜索整个缓冲区。此行为与&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/indexOf&quot;&gt; &lt;code&gt;String#indexOf()&lt;/code&gt; &lt;/a&gt;匹配。</target>
        </trans-unit>
        <trans-unit id="c590e6de95cfddb8ed4a4d519ab06c0bb835b03a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;callback&lt;/code&gt; is not a function, a &lt;a href=&quot;errors#errors_class_typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; will be thrown.</source>
          <target state="translated">如果 &lt;code&gt;callback&lt;/code&gt; 不是函数，则将引发&lt;a href=&quot;errors#errors_class_typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0f96bd4f40d4ce94291921e72da0a0dee934b282" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;callback&lt;/code&gt; is provided, it is not invoked until all active sessions have been closed, although the server has already stopped allowing new sessions. See &lt;a href=&quot;net#net_server_close_callback&quot;&gt;&lt;code&gt;net.Server.close()&lt;/code&gt;&lt;/a&gt; for more details.</source>
          <target state="translated">如果提供了 &lt;code&gt;callback&lt;/code&gt; ，则尽管服务器已停止允许新会话，但直到所有活动会话都关闭后才调用该回调。有关更多详细信息，请参见&lt;a href=&quot;net#net_server_close_callback&quot;&gt; &lt;code&gt;net.Server.close()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="598b066902e0bb1da7edca563a32a66a0b6c3b13" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;callback&lt;/code&gt; is provided, it is not invoked until all active sessions have been closed, although the server has already stopped allowing new sessions. See &lt;a href=&quot;tls#tls_server_close_callback&quot;&gt;&lt;code&gt;tls.Server.close()&lt;/code&gt;&lt;/a&gt; for more details.</source>
          <target state="translated">如果提供了 &lt;code&gt;callback&lt;/code&gt; ，则尽管服务器已停止允许新会话，但直到所有活动会话都关闭后才调用该回调。有关更多详细信息，请参见&lt;a href=&quot;tls#tls_server_close_callback&quot;&gt; &lt;code&gt;tls.Server.close()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4321180d73b6506962002c0e8c30474f65569ce1" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;callback&lt;/code&gt; is specified, it will be called when the request stream is finished.</source>
          <target state="translated">如果指定了 &lt;code&gt;callback&lt;/code&gt; ，则在请求流完成时将调用它。</target>
        </trans-unit>
        <trans-unit id="289f877647833459c9661200af57b09de3403f4a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;callback&lt;/code&gt; is specified, it will be called when the response stream is finished.</source>
          <target state="translated">如果指定了 &lt;code&gt;callback&lt;/code&gt; ，则在响应流结束时将调用它。</target>
        </trans-unit>
        <trans-unit id="0f682b366e2b92062347f100026ce608fcb842e8" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;contextObject&lt;/code&gt; is omitted (or passed explicitly as &lt;code&gt;undefined&lt;/code&gt;), a new, empty &lt;a href=&quot;#vm_what_does_it_mean_to_contextify_an_object&quot;&gt;contextified&lt;/a&gt; object will be returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fa93683434fd29bb44a881093da31d55c3a7e23" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;data&lt;/code&gt; is specified, it is equivalent to calling &lt;a href=&quot;#http_request_write_chunk_encoding_callback&quot;&gt;&lt;code&gt;request.write(data, encoding)&lt;/code&gt;&lt;/a&gt; followed by &lt;code&gt;request.end(callback)&lt;/code&gt;.</source>
          <target state="translated">如果指定了 &lt;code&gt;data&lt;/code&gt; ，则等效于调用&lt;a href=&quot;#http_request_write_chunk_encoding_callback&quot;&gt; &lt;code&gt;request.write(data, encoding)&lt;/code&gt; &lt;/a&gt;然后是 &lt;code&gt;request.end(callback)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8427d4b682c9e1679aa15d985063ddcd570ecf5b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;data&lt;/code&gt; is specified, it is equivalent to calling &lt;a href=&quot;http#http_response_write_chunk_encoding_callback&quot;&gt;&lt;code&gt;response.write(data, encoding)&lt;/code&gt;&lt;/a&gt; followed by &lt;code&gt;response.end(callback)&lt;/code&gt;.</source>
          <target state="translated">如果指定了 &lt;code&gt;data&lt;/code&gt; ，则等效于调用&lt;a href=&quot;http#http_response_write_chunk_encoding_callback&quot;&gt; &lt;code&gt;response.write(data, encoding)&lt;/code&gt; &lt;/a&gt;后跟 &lt;code&gt;response.end(callback)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="229ece6c8182b142b9ec817aaf04f94cce304527" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;data&lt;/code&gt; is specified, it is equivalent to calling &lt;code&gt;socket.write(data, encoding)&lt;/code&gt; followed by &lt;a href=&quot;#net_socket_end_data_encoding_callback&quot;&gt;&lt;code&gt;socket.end()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果指定了 &lt;code&gt;data&lt;/code&gt; ，则等效于调用 &lt;code&gt;socket.write(data, encoding)&lt;/code&gt; 然后调用&lt;a href=&quot;#net_socket_end_data_encoding_callback&quot;&gt; &lt;code&gt;socket.end()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0071baccfdde3653b128f8b8005e7668d6faf522" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;data&lt;/code&gt; is specified, it is similar in effect to calling &lt;a href=&quot;#http_response_write_chunk_encoding_callback&quot;&gt;&lt;code&gt;response.write(data, encoding)&lt;/code&gt;&lt;/a&gt; followed by &lt;code&gt;response.end(callback)&lt;/code&gt;.</source>
          <target state="translated">如果指定了 &lt;code&gt;data&lt;/code&gt; ，则实际上与调用&lt;a href=&quot;#http_response_write_chunk_encoding_callback&quot;&gt; &lt;code&gt;response.write(data, encoding)&lt;/code&gt; &lt;/a&gt;后跟 &lt;code&gt;response.end(callback)&lt;/code&gt; 类似。</target>
        </trans-unit>
        <trans-unit id="1429cd543300865d3187bd54d6de4ff5a31b2f3d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;digest&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, &lt;code&gt;'sha1'&lt;/code&gt; will be used. This behavior is deprecated, please specify a &lt;code&gt;digest&lt;/code&gt; explicitly.</source>
          <target state="translated">如果 &lt;code&gt;digest&lt;/code&gt; 为 &lt;code&gt;null&lt;/code&gt; ，则将使用 &lt;code&gt;'sha1'&lt;/code&gt; 。不建议使用此行为，请明确指定 &lt;code&gt;digest&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b813d6da2b0b11ab1d154cf1275755cbb847a23c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;encoding&lt;/code&gt; is &lt;code&gt;'utf8'&lt;/code&gt; and a byte sequence in the input is not valid UTF-8, then each invalid byte is replaced with the replacement character &lt;code&gt;U+FFFD&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="296de98e0eac254a8d7d501b18c4e257eafcc0da" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;encoding&lt;/code&gt; is provided a string is returned; otherwise a &lt;a href=&quot;buffer&quot;&gt;&lt;code&gt;Buffer&lt;/code&gt;&lt;/a&gt; is returned.</source>
          <target state="translated">如果提供了 &lt;code&gt;encoding&lt;/code&gt; 则返回一个字符串。否则返回&lt;a href=&quot;buffer&quot;&gt; &lt;code&gt;Buffer&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2e3c255effb35f8dcbf9e574c3558ceb3e16a170" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;encoding&lt;/code&gt; is specified, a string is returned; otherwise a &lt;a href=&quot;buffer&quot;&gt;&lt;code&gt;Buffer&lt;/code&gt;&lt;/a&gt; is returned.</source>
          <target state="translated">如果指定了 &lt;code&gt;encoding&lt;/code&gt; ，则返回一个字符串。否则返回&lt;a href=&quot;buffer&quot;&gt; &lt;code&gt;Buffer&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="02dfbed9e2c0a8c31f6ac956adbe7f6a81882d56" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;exception&lt;/code&gt; is specified, an &lt;a href=&quot;#net_event_error_1&quot;&gt;&lt;code&gt;'error'&lt;/code&gt;&lt;/a&gt; event will be emitted and any listeners for that event will receive &lt;code&gt;exception&lt;/code&gt; as an argument.</source>
          <target state="translated">如果指定了 &lt;code&gt;exception&lt;/code&gt; ，则将发出&lt;a href=&quot;#net_event_error_1&quot;&gt; &lt;code&gt;'error'&lt;/code&gt; &lt;/a&gt;事件，并且该事件的所有侦听器都将 &lt;code&gt;exception&lt;/code&gt; 作为参数接收。</target>
        </trans-unit>
        <trans-unit id="299ba421d8d3b42b4b24e019249c38c9a00df27b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;exclusive&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt; (default), then cluster workers will use the same underlying handle, allowing connection handling duties to be shared. When &lt;code&gt;exclusive&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, the handle is not shared, and attempted port sharing results in an error. An example which listens on an exclusive port is shown below.</source>
          <target state="translated">如果 &lt;code&gt;exclusive&lt;/code&gt; 为 &lt;code&gt;false&lt;/code&gt; （默认），则群集工作程序将使用相同的基础句柄，从而允许共享连接处理职责。如果 &lt;code&gt;exclusive&lt;/code&gt; 为 &lt;code&gt;true&lt;/code&gt; ，则不共享该句柄，并且尝试进行端口共享会导致错误。下面显示了侦听专用端口的示例。</target>
        </trans-unit>
        <trans-unit id="b8d2e28ac1ebbc4f0807dc298e38f7537f901ffe" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;fd&lt;/code&gt; is specified, &lt;code&gt;ReadStream&lt;/code&gt; will ignore the &lt;code&gt;path&lt;/code&gt; argument and will use the specified file descriptor. This means that no &lt;code&gt;'open'&lt;/code&gt; event will be emitted. &lt;code&gt;fd&lt;/code&gt; should be blocking; non-blocking &lt;code&gt;fd&lt;/code&gt;s should be passed to &lt;a href=&quot;net#net_class_net_socket&quot;&gt;&lt;code&gt;net.Socket&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果指定了 &lt;code&gt;fd&lt;/code&gt; ，则 &lt;code&gt;ReadStream&lt;/code&gt; 将忽略 &lt;code&gt;path&lt;/code&gt; 参数，并将使用指定的文件描述符。这意味着将不会发出 &lt;code&gt;'open'&lt;/code&gt; 事件。 &lt;code&gt;fd&lt;/code&gt; 应该被阻止；非阻塞 &lt;code&gt;fd&lt;/code&gt; 应该传递给&lt;a href=&quot;net#net_class_net_socket&quot;&gt; &lt;code&gt;net.Socket&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c06cb9ca6ab1bd04773000c7b74c88e6ca5c2f4c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;fd&lt;/code&gt; points to a character device that only supports blocking reads (such as keyboard or sound card), read operations do not finish until data is available. This can prevent the process from exiting and the stream from closing naturally.</source>
          <target state="translated">如果 &lt;code&gt;fd&lt;/code&gt; 指向仅支持阻止读取的字符设备（例如键盘或声卡），则在数据可用之前，读取操作不会完成。这可以防止进程退出以及流自然关闭。</target>
        </trans-unit>
        <trans-unit id="9be4332a701df441e4c063382aa8feb5526f88ed" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;fill&lt;/code&gt; is specified, the allocated &lt;code&gt;Buffer&lt;/code&gt; will be initialized by calling &lt;a href=&quot;#buffer_buf_fill_value_offset_end_encoding&quot;&gt;&lt;code&gt;buf.fill(fill)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果指定了 &lt;code&gt;fill&lt;/code&gt; ，则将通过调用&lt;a href=&quot;#buffer_buf_fill_value_offset_end_encoding&quot;&gt; &lt;code&gt;buf.fill(fill)&lt;/code&gt; &lt;/a&gt;初始化分配的 &lt;code&gt;Buffer&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3be97fb9c90af79625c081ca884c9f352b0b66b2" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;format&lt;/code&gt; is not specified the point will be returned in &lt;code&gt;'uncompressed'&lt;/code&gt; format.</source>
          <target state="translated">如果未指定 &lt;code&gt;format&lt;/code&gt; 则该点将以 &lt;code&gt;'uncompressed'&lt;/code&gt; 格式返回。</target>
        </trans-unit>
        <trans-unit id="211c8e7cb128633f9dd54be0102b93101df16008" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;generatorEncoding&lt;/code&gt; is specified, &lt;code&gt;generator&lt;/code&gt; is expected to be a string; otherwise a number, &lt;a href=&quot;buffer&quot;&gt;&lt;code&gt;Buffer&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;TypedArray&lt;/code&gt;, or &lt;code&gt;DataView&lt;/code&gt; is expected.</source>
          <target state="translated">如果 &lt;code&gt;generatorEncoding&lt;/code&gt; 指定， &lt;code&gt;generator&lt;/code&gt; 预计将是一个字符串; 否则，将使用&lt;a href=&quot;buffer&quot;&gt; &lt;code&gt;Buffer&lt;/code&gt; &lt;/a&gt;， &lt;code&gt;TypedArray&lt;/code&gt; 或 &lt;code&gt;DataView&lt;/code&gt; 一个数字。</target>
        </trans-unit>
        <trans-unit id="ee915a37cf5a4e8d149f7db663f7692db584ed38" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;host&lt;/code&gt; is omitted, the server will accept connections on the &lt;a href=&quot;https://en.wikipedia.org/wiki/IPv6_address#Unspecified_address&quot;&gt;unspecified IPv6 address&lt;/a&gt; (&lt;code&gt;::&lt;/code&gt;) when IPv6 is available, or the &lt;a href=&quot;https://en.wikipedia.org/wiki/0.0.0.0&quot;&gt;unspecified IPv4 address&lt;/a&gt; (&lt;code&gt;0.0.0.0&lt;/code&gt;) otherwise.</source>
          <target state="translated">如果省略 &lt;code&gt;host&lt;/code&gt; ，则当IPv6可用时，服务器将接受&lt;a href=&quot;https://en.wikipedia.org/wiki/IPv6_address#Unspecified_address&quot;&gt;未指定的IPv6地址&lt;/a&gt;（ &lt;code&gt;::&lt;/code&gt; :）上的连接，否则将接受未&lt;a href=&quot;https://en.wikipedia.org/wiki/0.0.0.0&quot;&gt;指定的IPv4地址&lt;/a&gt;（ &lt;code&gt;0.0.0.0&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="327688667cc4714ad942e8a15185ccc1e19c6211" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;initialize()&lt;/code&gt; is called more than once, an exception is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="719ee6233d43eb6f4cfa33ac467d8a54df639b11" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;key&lt;/code&gt; is not a &lt;a href=&quot;#crypto_class_keyobject&quot;&gt;&lt;code&gt;KeyObject&lt;/code&gt;&lt;/a&gt;, this function behaves as if &lt;code&gt;key&lt;/code&gt; had been passed to &lt;a href=&quot;#crypto_crypto_createprivatekey_key&quot;&gt;&lt;code&gt;crypto.createPrivateKey()&lt;/code&gt;&lt;/a&gt;. If it is an object, the following additional properties can be passed:</source>
          <target state="translated">如果 &lt;code&gt;key&lt;/code&gt; 不是&lt;a href=&quot;#crypto_class_keyobject&quot;&gt; &lt;code&gt;KeyObject&lt;/code&gt; &lt;/a&gt;，则此函数的行为就像已将 &lt;code&gt;key&lt;/code&gt; 传递给&lt;a href=&quot;#crypto_crypto_createprivatekey_key&quot;&gt; &lt;code&gt;crypto.createPrivateKey()&lt;/code&gt; 一样&lt;/a&gt;。如果它是一个对象，则可以传递以下附加属性：</target>
        </trans-unit>
        <trans-unit id="9fc09dc2e7135ef58e69c84b714e24c8a051eadf" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;key&lt;/code&gt; is not a &lt;a href=&quot;#crypto_class_keyobject&quot;&gt;&lt;code&gt;KeyObject&lt;/code&gt;&lt;/a&gt;, this function behaves as if &lt;code&gt;key&lt;/code&gt; had been passed to &lt;a href=&quot;#crypto_crypto_createpublickey_key&quot;&gt;&lt;code&gt;crypto.createPublicKey()&lt;/code&gt;&lt;/a&gt;. If it is an object, the &lt;code&gt;padding&lt;/code&gt; property can be passed. Otherwise, this function uses &lt;code&gt;RSA_PKCS1_OAEP_PADDING&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;key&lt;/code&gt; 不是&lt;a href=&quot;#crypto_class_keyobject&quot;&gt; &lt;code&gt;KeyObject&lt;/code&gt; &lt;/a&gt;，则此函数的行为就像已将 &lt;code&gt;key&lt;/code&gt; 传递给&lt;a href=&quot;#crypto_crypto_createpublickey_key&quot;&gt; &lt;code&gt;crypto.createPublicKey()&lt;/code&gt; 一样&lt;/a&gt;。如果它是一个对象，则可以传递 &lt;code&gt;padding&lt;/code&gt; 属性。否则，此函数使用 &lt;code&gt;RSA_PKCS1_OAEP_PADDING&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="25511a88834e5e5b625f424cd7943dcdd0e90291" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;key&lt;/code&gt; is not a &lt;a href=&quot;#crypto_class_keyobject&quot;&gt;&lt;code&gt;KeyObject&lt;/code&gt;&lt;/a&gt;, this function behaves as if &lt;code&gt;key&lt;/code&gt; had been passed to &lt;a href=&quot;#crypto_crypto_createpublickey_key&quot;&gt;&lt;code&gt;crypto.createPublicKey()&lt;/code&gt;&lt;/a&gt;. If it is an object, the &lt;code&gt;padding&lt;/code&gt; property can be passed. Otherwise, this function uses &lt;code&gt;RSA_PKCS1_PADDING&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;key&lt;/code&gt; 不是&lt;a href=&quot;#crypto_class_keyobject&quot;&gt; &lt;code&gt;KeyObject&lt;/code&gt; &lt;/a&gt;，则此函数的行为就像已将 &lt;code&gt;key&lt;/code&gt; 传递给&lt;a href=&quot;#crypto_crypto_createpublickey_key&quot;&gt; &lt;code&gt;crypto.createPublicKey()&lt;/code&gt; 一样&lt;/a&gt;。如果它是一个对象，则可以传递 &lt;code&gt;padding&lt;/code&gt; 属性。否则，此函数使用 &lt;code&gt;RSA_PKCS1_PADDING&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="977d93db6bb5497a6e85df4c62341e37909f95ad" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;key&lt;/code&gt; is not a &lt;a href=&quot;#crypto_class_keyobject&quot;&gt;&lt;code&gt;KeyObject&lt;/code&gt;&lt;/a&gt;, this function behaves as if &lt;code&gt;key&lt;/code&gt; had been passed to &lt;a href=&quot;#crypto_crypto_createpublickey_key&quot;&gt;&lt;code&gt;crypto.createPublicKey()&lt;/code&gt;&lt;/a&gt;. If it is an object, the following additional properties can be passed:</source>
          <target state="translated">如果 &lt;code&gt;key&lt;/code&gt; 不是&lt;a href=&quot;#crypto_class_keyobject&quot;&gt; &lt;code&gt;KeyObject&lt;/code&gt; &lt;/a&gt;，则此函数的行为就像已将 &lt;code&gt;key&lt;/code&gt; 传递给&lt;a href=&quot;#crypto_crypto_createpublickey_key&quot;&gt; &lt;code&gt;crypto.createPublicKey()&lt;/code&gt; 一样&lt;/a&gt;。如果它是一个对象，则可以传递以下附加属性：</target>
        </trans-unit>
        <trans-unit id="7ed062de2af3cd39b12412e99a474c3e9d61d8c6" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;key&lt;/code&gt; is specified, &lt;code&gt;data&lt;/code&gt; is ignored.</source>
          <target state="translated">如果指定了 &lt;code&gt;key&lt;/code&gt; ，则忽略 &lt;code&gt;data&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9b27055bc56379296ff853efbb8b5e12f047e7e1" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;message&lt;/code&gt; is falsy, the error message is set as the values of &lt;code&gt;actual&lt;/code&gt; and &lt;code&gt;expected&lt;/code&gt; separated by the provided &lt;code&gt;operator&lt;/code&gt;. If just the two &lt;code&gt;actual&lt;/code&gt; and &lt;code&gt;expected&lt;/code&gt; arguments are provided, &lt;code&gt;operator&lt;/code&gt; will default to &lt;code&gt;'!='&lt;/code&gt;. If &lt;code&gt;message&lt;/code&gt; is provided as third argument it will be used as the error message and the other arguments will be stored as properties on the thrown object. If &lt;code&gt;stackStartFn&lt;/code&gt; is provided, all stack frames above that function will be removed from stacktrace (see &lt;a href=&quot;errors#errors_error_capturestacktrace_targetobject_constructoropt&quot;&gt;&lt;code&gt;Error.captureStackTrace&lt;/code&gt;&lt;/a&gt;). If no arguments are given, the default message &lt;code&gt;Failed&lt;/code&gt; will be used.</source>
          <target state="translated">如果 &lt;code&gt;message&lt;/code&gt; 错误，则将错误消息设置为由提供的 &lt;code&gt;operator&lt;/code&gt; 分隔的 &lt;code&gt;actual&lt;/code&gt; 值和 &lt;code&gt;expected&lt;/code&gt; 值。如果仅提供两个 &lt;code&gt;actual&lt;/code&gt; 参数和 &lt;code&gt;expected&lt;/code&gt; 参数，则 &lt;code&gt;operator&lt;/code&gt; 将默认为 &lt;code&gt;'!='&lt;/code&gt; 。如果将 &lt;code&gt;message&lt;/code&gt; 作为第三个参数提供，它将用作错误消息，而其他参数将作为属性存储在抛出的对象上。如果提供了 &lt;code&gt;stackStartFn&lt;/code&gt; ,则该函数上方的所有堆栈帧都将从stacktrace中移除（请参见&lt;a href=&quot;errors#errors_error_capturestacktrace_targetobject_constructoropt&quot;&gt; &lt;code&gt;Error.captureStackTrace&lt;/code&gt; &lt;/a&gt;）。如果未提供任何参数，则默认消息&amp;ldquo; &lt;code&gt;Failed&lt;/code&gt; 将会被使用。</target>
        </trans-unit>
        <trans-unit id="a18434d4349cf91c980feeaf73d4500129ed008e" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;multicastInterface&lt;/code&gt; can not be parsed into an IP then an &lt;em&gt;EINVAL&lt;/em&gt;&lt;a href=&quot;errors#errors_class_systemerror&quot;&gt;&lt;code&gt;System Error&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">如果无法将 &lt;code&gt;multicastInterface&lt;/code&gt; 解析为IP，则将引发&lt;em&gt;EINVAL &lt;/em&gt;&lt;a href=&quot;errors#errors_class_systemerror&quot;&gt; &lt;code&gt;System Error&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="635a5a9f736b1a79cca9c640330c3981e6630269" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;multicastInterface&lt;/code&gt; is not specified, the operating system will attempt to drop membership on all valid interfaces.</source>
          <target state="translated">如果未指定 &lt;code&gt;multicastInterface&lt;/code&gt; ，则操作系统将尝试删除所有有效接口上的成员资格。</target>
        </trans-unit>
        <trans-unit id="a04eb70c5e8fdd2359e97890a6ec4806a1c90780" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;name&lt;/code&gt; is equal to &lt;code&gt;Http2Session&lt;/code&gt;, the &lt;code&gt;PerformanceEntry&lt;/code&gt; will contain the following additional properties:</source>
          <target state="translated">如果 &lt;code&gt;name&lt;/code&gt; 等于 &lt;code&gt;Http2Session&lt;/code&gt; ，则 &lt;code&gt;PerformanceEntry&lt;/code&gt; 将包含以下附加属性：</target>
        </trans-unit>
        <trans-unit id="1c0c762bb6f101345ae8084fe010dead16e44a51" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;name&lt;/code&gt; is equal to &lt;code&gt;Http2Stream&lt;/code&gt;, the &lt;code&gt;PerformanceEntry&lt;/code&gt; will contain the following additional properties:</source>
          <target state="translated">如果 &lt;code&gt;name&lt;/code&gt; 等于 &lt;code&gt;Http2Stream&lt;/code&gt; ，则 &lt;code&gt;PerformanceEntry&lt;/code&gt; 将包含以下附加属性：</target>
        </trans-unit>
        <trans-unit id="74804bac51eaf2ff8552dfa185b4e1083041d783" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;name&lt;/code&gt; is not provided, removes all &lt;code&gt;PerformanceMark&lt;/code&gt; objects from the Performance Timeline. If &lt;code&gt;name&lt;/code&gt; is provided, removes only the named mark.</source>
          <target state="translated">如果未提供 &lt;code&gt;name&lt;/code&gt; ，则从性能时间轴中删除所有 &lt;code&gt;PerformanceMark&lt;/code&gt; 对象。如果提供了 &lt;code&gt;name&lt;/code&gt; 则仅删除命名标记。</target>
        </trans-unit>
        <trans-unit id="ff70118da58af5946e19a41a79f8faa2f7cc7721" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;object&lt;/code&gt; is from a different &lt;code&gt;vm.Context&lt;/code&gt; now, a custom inspection function on it will not receive context-specific arguments anymore.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="943eaf90edddd945e52ae31efebbc68f45ee6623" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;object&lt;/code&gt; is not a &lt;a href=&quot;#crypto_class_keyobject&quot;&gt;&lt;code&gt;KeyObject&lt;/code&gt;&lt;/a&gt;, this function behaves as if &lt;code&gt;object&lt;/code&gt; had been passed to &lt;a href=&quot;#crypto_crypto_createpublickey_key&quot;&gt;&lt;code&gt;crypto.createPublicKey()&lt;/code&gt;&lt;/a&gt;. If it is an object, the following additional properties can be passed:</source>
          <target state="translated">如果 &lt;code&gt;object&lt;/code&gt; 不是&lt;a href=&quot;#crypto_class_keyobject&quot;&gt; &lt;code&gt;KeyObject&lt;/code&gt; &lt;/a&gt;，则此函数的行为就像将 &lt;code&gt;object&lt;/code&gt; 传递给&lt;a href=&quot;#crypto_crypto_createpublickey_key&quot;&gt; &lt;code&gt;crypto.createPublicKey()&lt;/code&gt; 一样&lt;/a&gt;。如果它是一个对象，则可以传递以下附加属性：</target>
        </trans-unit>
        <trans-unit id="e0100c981edb805a108cdf076550a8ed70a08660" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;offset&lt;/code&gt; is set to a non-negative number, reading starts from that position and the file offset will not be advanced. If &lt;code&gt;length&lt;/code&gt; is set to a non-negative number, it gives the maximum number of bytes that are read from the file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="868e2ef584eeb787a1b334b2b183edf477e0a4fc" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;options.withFileTypes&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt;, the &lt;code&gt;files&lt;/code&gt; array will contain &lt;a href=&quot;#fs_class_fs_dirent&quot;&gt;&lt;code&gt;fs.Dirent&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">如果 &lt;code&gt;options.withFileTypes&lt;/code&gt; 设置为 &lt;code&gt;true&lt;/code&gt; ，则 &lt;code&gt;files&lt;/code&gt; 数组将包含&lt;a href=&quot;#fs_class_fs_dirent&quot;&gt; &lt;code&gt;fs.Dirent&lt;/code&gt; &lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="a36bfe70b4e433d3db03a6c9e94c12be8a171a8f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;options.withFileTypes&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt;, the resolved array will contain &lt;a href=&quot;#fs_class_fs_dirent&quot;&gt;&lt;code&gt;fs.Dirent&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">如果 &lt;code&gt;options.withFileTypes&lt;/code&gt; 设置为 &lt;code&gt;true&lt;/code&gt; ，则解析的数组将包含&lt;a href=&quot;#fs_class_fs_dirent&quot;&gt; &lt;code&gt;fs.Dirent&lt;/code&gt; &lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="5e10e67408633d0ca404f3c048655c9f70ee664b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;options.withFileTypes&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt;, the result will contain &lt;a href=&quot;#fs_class_fs_dirent&quot;&gt;&lt;code&gt;fs.Dirent&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">如果 &lt;code&gt;options.withFileTypes&lt;/code&gt; 设置为 &lt;code&gt;true&lt;/code&gt; ，则结果将包含&lt;a href=&quot;#fs_class_fs_dirent&quot;&gt; &lt;code&gt;fs.Dirent&lt;/code&gt; &lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="e345c64383dd053537ed6dbbf388ab57f2c56df5" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;options&lt;/code&gt; is a string, then it specifies the encoding.</source>
          <target state="translated">如果 &lt;code&gt;options&lt;/code&gt; 是一个字符串，则它指定编码。</target>
        </trans-unit>
        <trans-unit id="6ec565c6cdab6a8fe531bbf0a08728c7aaf43c9b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;options&lt;/code&gt; is a string, then it specifies the encoding:</source>
          <target state="translated">如果 &lt;code&gt;options&lt;/code&gt; 是一个字符串，则它指定编码：</target>
        </trans-unit>
        <trans-unit id="04daf1ad0c06f14a3e99c3afe2f811ebcde82a21" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;options&lt;/code&gt; is a string, then it specifies the filename.</source>
          <target state="translated">如果 &lt;code&gt;options&lt;/code&gt; 是字符串，则它指定文件名。</target>
        </trans-unit>
        <trans-unit id="36b1ebb69a8523459611eb6b3154f41b194ea1b7" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;options&lt;/code&gt; is a string, then it specifies the input prompt:</source>
          <target state="translated">如果 &lt;code&gt;options&lt;/code&gt; 是一个字符串，则它指定输入提示：</target>
        </trans-unit>
        <trans-unit id="cedfd7167d9901968bba2de2300e68c96a571770" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;outputEncoding&lt;/code&gt; is given a string is returned; otherwise, a &lt;a href=&quot;buffer&quot;&gt;&lt;code&gt;Buffer&lt;/code&gt;&lt;/a&gt; is returned.</source>
          <target state="translated">如果给定 &lt;code&gt;outputEncoding&lt;/code&gt; ,则返回一个字符串；否则，返回0。否则，返回一个&lt;a href=&quot;buffer&quot;&gt; &lt;code&gt;Buffer&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bfb535f2bf23a7a6abbc7421b6d41c55bac4089c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;outputEncoding&lt;/code&gt; is given a string will be returned; otherwise a &lt;a href=&quot;buffer&quot;&gt;&lt;code&gt;Buffer&lt;/code&gt;&lt;/a&gt; is returned.</source>
          <target state="translated">如果给定 &lt;code&gt;outputEncoding&lt;/code&gt; ,将返回一个字符串；否则返回&lt;a href=&quot;buffer&quot;&gt; &lt;code&gt;Buffer&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="747ef625cb7ae2fc9d560c16586c896d5916b26d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;outputEncoding&lt;/code&gt; is provided a string is returned; otherwise a &lt;a href=&quot;buffer&quot;&gt;&lt;code&gt;Buffer&lt;/code&gt;&lt;/a&gt; is returned.</source>
          <target state="translated">如果提供了 &lt;code&gt;outputEncoding&lt;/code&gt; ,则返回一个字符串；否则，返回0。否则返回&lt;a href=&quot;buffer&quot;&gt; &lt;code&gt;Buffer&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6830ad9459746cf99d5ab30887459bdffee5b757" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;path&lt;/code&gt; resolves to a socket or a pipe, the function will return a system dependent name for that object.</source>
          <target state="translated">如果 &lt;code&gt;path&lt;/code&gt; 解析为套接字或管道，则该函数将返回该对象的系统相关名称。</target>
        </trans-unit>
        <trans-unit id="666e07665c3e510f0678f95aa14068f16e22257c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pauseOnConnect&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt;, then the socket associated with each incoming connection will be paused, and no data will be read from its handle. This allows connections to be passed between processes without any data being read by the original process. To begin reading data from a paused socket, call &lt;a href=&quot;#net_socket_resume&quot;&gt;&lt;code&gt;socket.resume()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果 &lt;code&gt;pauseOnConnect&lt;/code&gt; 设置为 &lt;code&gt;true&lt;/code&gt; ，则与每个传入连接关联的套接字将被暂停，并且不会从其句柄中读取任何数据。这允许在进程之间传递连接，而原始进程不会读取任何数据。要开始从暂停的套接字读取数据，请调用&lt;a href=&quot;#net_socket_resume&quot;&gt; &lt;code&gt;socket.resume()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f034544fed923247a1488a920237881dd61ef658" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;port&lt;/code&gt; is omitted or is 0, the operating system will assign an arbitrary unused port, which can be retrieved by using &lt;code&gt;server.address().port&lt;/code&gt; after the &lt;a href=&quot;#net_event_listening&quot;&gt;&lt;code&gt;'listening'&lt;/code&gt;&lt;/a&gt; event has been emitted.</source>
          <target state="translated">如果 &lt;code&gt;port&lt;/code&gt; 被省略或为0，则操作系统将分配任意一个未使用的端口，可以在发出&lt;a href=&quot;#net_event_listening&quot;&gt; &lt;code&gt;'listening'&lt;/code&gt; &lt;/a&gt;事件后使用 &lt;code&gt;server.address().port&lt;/code&gt; 对其进行检索。</target>
        </trans-unit>
        <trans-unit id="ad78f5857180aa52600cb852f3aab07932e36ad7" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;port&lt;/code&gt; is specified, it behaves the same as &lt;a href=&quot;#net_server_listen_port_host_backlog_callback&quot;&gt; &lt;code&gt;server.listen([port[, host[, backlog]]][, callback])&lt;/code&gt;&lt;/a&gt;. Otherwise, if &lt;code&gt;path&lt;/code&gt; is specified, it behaves the same as &lt;a href=&quot;#net_server_listen_path_backlog_callback&quot;&gt;&lt;code&gt;server.listen(path[, backlog][, callback])&lt;/code&gt;&lt;/a&gt;. If none of them is specified, an error will be thrown.</source>
          <target state="translated">如果指定了 &lt;code&gt;port&lt;/code&gt; ，则其行为与&lt;a href=&quot;#net_server_listen_port_host_backlog_callback&quot;&gt; &lt;code&gt;server.listen([port[, host[, backlog]]][, callback])&lt;/code&gt; &lt;/a&gt;。否则，如果指定了 &lt;code&gt;path&lt;/code&gt; ，则其行为与&lt;a href=&quot;#net_server_listen_path_backlog_callback&quot;&gt; &lt;code&gt;server.listen(path[, backlog][, callback])&lt;/code&gt; &lt;/a&gt;。如果未指定它们，将引发错误。</target>
        </trans-unit>
        <trans-unit id="19d2f74a2410539462b318a30f46eab23a8b33a2" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;primeEncoding&lt;/code&gt; is specified, &lt;code&gt;prime&lt;/code&gt; is expected to be a string; otherwise a &lt;a href=&quot;buffer&quot;&gt;&lt;code&gt;Buffer&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;TypedArray&lt;/code&gt;, or &lt;code&gt;DataView&lt;/code&gt; is expected.</source>
          <target state="translated">如果指定 &lt;code&gt;primeEncoding&lt;/code&gt; ，则 &lt;code&gt;prime&lt;/code&gt; 应该是一个字符串；否则，将使用&lt;a href=&quot;buffer&quot;&gt; &lt;code&gt;Buffer&lt;/code&gt; &lt;/a&gt;， &lt;code&gt;TypedArray&lt;/code&gt; 或 &lt;code&gt;DataView&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d34f6ef5137207bf0272e051955badd1a1d8351e" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;privateKey&lt;/code&gt; is not a &lt;a href=&quot;#crypto_class_keyobject&quot;&gt;&lt;code&gt;KeyObject&lt;/code&gt;&lt;/a&gt;, this function behaves as if &lt;code&gt;privateKey&lt;/code&gt; had been passed to &lt;a href=&quot;#crypto_crypto_createprivatekey_key&quot;&gt;&lt;code&gt;crypto.createPrivateKey()&lt;/code&gt;&lt;/a&gt;. If it is an object, the &lt;code&gt;padding&lt;/code&gt; property can be passed. Otherwise, this function uses &lt;code&gt;RSA_PKCS1_OAEP_PADDING&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;privateKey&lt;/code&gt; 不是&lt;a href=&quot;#crypto_class_keyobject&quot;&gt; &lt;code&gt;KeyObject&lt;/code&gt; &lt;/a&gt;，则此函数的行为就像将 &lt;code&gt;privateKey&lt;/code&gt; 传递给&lt;a href=&quot;#crypto_crypto_createprivatekey_key&quot;&gt; &lt;code&gt;crypto.createPrivateKey()&lt;/code&gt; 一样&lt;/a&gt;。如果它是一个对象，则可以传递 &lt;code&gt;padding&lt;/code&gt; 属性。否则，此函数使用 &lt;code&gt;RSA_PKCS1_OAEP_PADDING&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9ca7f1fd906e365d91374bb378b7368f3fa4dc5e" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;privateKey&lt;/code&gt; is not a &lt;a href=&quot;#crypto_class_keyobject&quot;&gt;&lt;code&gt;KeyObject&lt;/code&gt;&lt;/a&gt;, this function behaves as if &lt;code&gt;privateKey&lt;/code&gt; had been passed to &lt;a href=&quot;#crypto_crypto_createprivatekey_key&quot;&gt;&lt;code&gt;crypto.createPrivateKey()&lt;/code&gt;&lt;/a&gt;. If it is an object, the &lt;code&gt;padding&lt;/code&gt; property can be passed. Otherwise, this function uses &lt;code&gt;RSA_PKCS1_PADDING&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;privateKey&lt;/code&gt; 不是&lt;a href=&quot;#crypto_class_keyobject&quot;&gt; &lt;code&gt;KeyObject&lt;/code&gt; &lt;/a&gt;，则此函数的行为就像将 &lt;code&gt;privateKey&lt;/code&gt; 传递给&lt;a href=&quot;#crypto_crypto_createprivatekey_key&quot;&gt; &lt;code&gt;crypto.createPrivateKey()&lt;/code&gt; 一样&lt;/a&gt;。如果它是一个对象，则可以传递 &lt;code&gt;padding&lt;/code&gt; 属性。否则，此函数使用 &lt;code&gt;RSA_PKCS1_PADDING&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b64f75f0f7790d158f233d338846a09cef8678a6" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;privateKey&lt;/code&gt; is not a &lt;a href=&quot;#crypto_class_keyobject&quot;&gt;&lt;code&gt;KeyObject&lt;/code&gt;&lt;/a&gt;, this function behaves as if &lt;code&gt;privateKey&lt;/code&gt; had been passed to &lt;a href=&quot;#crypto_crypto_createprivatekey_key&quot;&gt;&lt;code&gt;crypto.createPrivateKey()&lt;/code&gt;&lt;/a&gt;. If it is an object, the following additional properties can be passed:</source>
          <target state="translated">如果 &lt;code&gt;privateKey&lt;/code&gt; 不是&lt;a href=&quot;#crypto_class_keyobject&quot;&gt; &lt;code&gt;KeyObject&lt;/code&gt; &lt;/a&gt;，则此函数的行为就像将 &lt;code&gt;privateKey&lt;/code&gt; 传递给&lt;a href=&quot;#crypto_crypto_createprivatekey_key&quot;&gt; &lt;code&gt;crypto.createPrivateKey()&lt;/code&gt; 一样&lt;/a&gt;。如果它是一个对象，则可以传递以下附加属性：</target>
        </trans-unit>
        <trans-unit id="8ed5ccaf3341448b5d6583d34e4187e903653d1f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;privateKey&lt;/code&gt; is not valid for the curve specified when the &lt;code&gt;ECDH&lt;/code&gt; object was created, an error is thrown. Upon setting the private key, the associated public point (key) is also generated and set in the &lt;code&gt;ECDH&lt;/code&gt; object.</source>
          <target state="translated">如果 &lt;code&gt;privateKey&lt;/code&gt; 对于创建 &lt;code&gt;ECDH&lt;/code&gt; 对象时指定的曲线无效，则将引发错误。设置私钥后，还将生成关联的公共点（密钥）并将其设置在 &lt;code&gt;ECDH&lt;/code&gt; 对象中。</target>
        </trans-unit>
        <trans-unit id="e56e2d0b5e192e3b6e7c9010e1154dc149bbd03c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;promisify.custom&lt;/code&gt; is defined but is not a function, &lt;code&gt;promisify()&lt;/code&gt; will throw an error.</source>
          <target state="translated">如果定义了 &lt;code&gt;promisify.custom&lt;/code&gt; 但不是函数，则 &lt;code&gt;promisify()&lt;/code&gt; 将引发错误。</target>
        </trans-unit>
        <trans-unit id="fb86b835f195413e40bda1bb6ce9230cbcfdcd73" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;qlog&lt;/code&gt; support is enabled for &lt;code&gt;QuicSession&lt;/code&gt;, the &lt;code&gt;quicsession.qlog&lt;/code&gt; property provides a &lt;a href=&quot;#stream_class_stream_readable&quot;&gt;&lt;code&gt;stream.Readable&lt;/code&gt;&lt;/a&gt; that may be used to access the &lt;code&gt;qlog&lt;/code&gt; event data according to the &lt;a href=&quot;https://tools.ietf.org/id/draft-marx-qlog-event-definitions-quic-h3-00.html&quot;&gt;qlog standard&lt;/a&gt;. For client &lt;code&gt;QuicSessions&lt;/code&gt;, the &lt;code&gt;quicsession.qlog&lt;/code&gt; property will be &lt;code&gt;undefined&lt;/code&gt; until the &lt;code&gt;'qlog'&lt;/code&gt; event is emitted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80d900a6909580365131a8cdb6404205f1322b38" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;quicendpoint.bind()&lt;/code&gt; is called again while a previously returned &lt;code&gt;Promise&lt;/code&gt; is still pending or has already successfully resolved, the previously returned pending &lt;code&gt;Promise&lt;/code&gt; will be returned. If the additional call to &lt;code&gt;quicendpoint.bind()&lt;/code&gt; contains an &lt;code&gt;AbortSignal&lt;/code&gt;, the &lt;code&gt;signal&lt;/code&gt; will be ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcd43992f7d8a465a7ae1f17ab5cdd802e52d216" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;quicsession.authenticated&lt;/code&gt; is false, returns an &lt;code&gt;Error&lt;/code&gt; object representing the reason the peer certificate verification failed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a428e5685a1eecd77b073b8d2143177ae423a02d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;remove_handle&lt;/code&gt; is not &lt;code&gt;NULL&lt;/code&gt;, an opaque value will be stored in it that must later be passed to &lt;a href=&quot;#n_api_napi_remove_async_cleanup_hook&quot;&gt;&lt;code&gt;napi_remove_async_cleanup_hook&lt;/code&gt;&lt;/a&gt;, regardless of whether the hook has already been invoked. Typically, that happens when the resource for which this hook was added is being torn down anyway.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76d38c015ea70b86473f47208435ce10352c8cb7" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;req.abort()&lt;/code&gt; is called after the response is received, the following events will be emitted in the following order:</source>
          <target state="translated">如果在收到响应后调用 &lt;code&gt;req.abort()&lt;/code&gt; ，则将按以下顺序发出以下事件：</target>
        </trans-unit>
        <trans-unit id="ac39dd7a83d0438046abda60d7ebba2f164ba86f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;req.abort()&lt;/code&gt; is called before a socket is assigned, the following events will be emitted in the following order:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20fd599f5dc57b9bcf900426d809a999de12a6ff" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;req.abort()&lt;/code&gt; is called before the connection succeeds, the following events will be emitted in the following order:</source>
          <target state="translated">如果在连接成功之前调用 &lt;code&gt;req.abort()&lt;/code&gt; ，则将按以下顺序发出以下事件：</target>
        </trans-unit>
        <trans-unit id="7e61006bf873b21175e0a7655ab4c8c9155d0f64" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;req.destroy()&lt;/code&gt; is called after the response is received, the following events will be emitted in the following order:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52b442b5e12efeace0497cdb8a49e08b15aa7132" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;req.destroy()&lt;/code&gt; is called before a socket is assigned, the following events will be emitted in the following order:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="474ac3eed3560f7a4ecd75c3a1f21b7db6d67ea5" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;req.destroy()&lt;/code&gt; is called before the connection succeeds, the following events will be emitted in the following order:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64979e154ec2e18ac52da0c320fc458853136631" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;sandbox&lt;/code&gt; is omitted (or passed explicitly as &lt;code&gt;undefined&lt;/code&gt;), a new, empty &lt;a href=&quot;#vm_what_does_it_mean_to_contextify_an_object&quot;&gt;contextified&lt;/a&gt; sandbox object will be returned.</source>
          <target state="translated">如果省略了 &lt;code&gt;sandbox&lt;/code&gt; （或显式传递为 &lt;code&gt;undefined&lt;/code&gt; ），则将返回一个新的空&lt;a href=&quot;#vm_what_does_it_mean_to_contextify_an_object&quot;&gt;上下文&lt;/a&gt;沙箱对象。</target>
        </trans-unit>
        <trans-unit id="404036cef8a63f83edac642a2000d9fb9795c0d3" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;size&lt;/code&gt; is larger than &lt;a href=&quot;#buffer_buffer_constants_max_length&quot;&gt;&lt;code&gt;buffer.constants.MAX_LENGTH&lt;/code&gt;&lt;/a&gt; or smaller than 0, &lt;a href=&quot;errors#ERR_INVALID_ARG_VALUE&quot;&gt;&lt;code&gt;ERR_INVALID_ARG_VALUE&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7118dd010e332cc9200cff922a212475eb1c3a38" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;size&lt;/code&gt; is larger than &lt;a href=&quot;#buffer_buffer_constants_max_length&quot;&gt;&lt;code&gt;buffer.constants.MAX_LENGTH&lt;/code&gt;&lt;/a&gt; or smaller than 0, &lt;a href=&quot;errors#ERR_INVALID_OPT_VALUE&quot;&gt;&lt;code&gt;ERR_INVALID_OPT_VALUE&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edb4b13e975465cae50651e76011131a05d803bc" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;size&lt;/code&gt; is larger than &lt;a href=&quot;#buffer_buffer_constants_max_length&quot;&gt;&lt;code&gt;buffer.constants.MAX_LENGTH&lt;/code&gt;&lt;/a&gt; or smaller than 0, &lt;a href=&quot;errors#ERR_INVALID_OPT_VALUE&quot;&gt;&lt;code&gt;ERR_INVALID_OPT_VALUE&lt;/code&gt;&lt;/a&gt; is thrown. A zero-length &lt;code&gt;Buffer&lt;/code&gt; is created if &lt;code&gt;size&lt;/code&gt; is 0.</source>
          <target state="translated">如果 &lt;code&gt;size&lt;/code&gt; 大于&lt;a href=&quot;#buffer_buffer_constants_max_length&quot;&gt; &lt;code&gt;buffer.constants.MAX_LENGTH&lt;/code&gt; &lt;/a&gt;或小于0，则抛出&lt;a href=&quot;errors#ERR_INVALID_OPT_VALUE&quot;&gt; &lt;code&gt;ERR_INVALID_OPT_VALUE&lt;/code&gt; &lt;/a&gt;。如果 &lt;code&gt;size&lt;/code&gt; 为0，则创建一个零长度 &lt;code&gt;Buffer&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4fd544099a496b9d4f88c55eeb5a36cc47420cfc" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;socket.setTimeout()&lt;/code&gt; is called here, the timeout will be replaced with &lt;code&gt;server.keepAliveTimeout&lt;/code&gt; when the socket has served a request (if &lt;code&gt;server.keepAliveTimeout&lt;/code&gt; is non-zero).</source>
          <target state="translated">如果在此处调用 &lt;code&gt;socket.setTimeout()&lt;/code&gt; ，则当套接字为请求提供服务时（如果 &lt;code&gt;server.keepAliveTimeout&lt;/code&gt; 为非零），超时将替换为 &lt;code&gt;server.keepAliveTimeout&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="97507a5ed7da468aa32a5b701f6b82666385206c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;start()&lt;/code&gt; is called more than once, an exception is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1715f20858e56c791aabf4e500684d534a453896" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;stdin: true&lt;/code&gt; was passed to the &lt;a href=&quot;#worker_threads_class_worker&quot;&gt;&lt;code&gt;Worker&lt;/code&gt;&lt;/a&gt; constructor, this is a writable stream. The data written to this stream will be made available in the worker thread as &lt;a href=&quot;process#process_process_stdin&quot;&gt;&lt;code&gt;process.stdin&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果将 &lt;code&gt;stdin: true&lt;/code&gt; 传递给&lt;a href=&quot;#worker_threads_class_worker&quot;&gt; &lt;code&gt;Worker&lt;/code&gt; &lt;/a&gt;构造函数，则这是可写的流。写入此流的数据将在工作线程中作为&lt;a href=&quot;process#process_process_stdin&quot;&gt; &lt;code&gt;process.stdin&lt;/code&gt; 提供&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6b5541d5cda0f172c43a1a2f0fe36d970c29c089" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;terminal&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; for this instance then the &lt;code&gt;output&lt;/code&gt; stream will get the best compatibility if it defines an &lt;code&gt;output.columns&lt;/code&gt; property and emits a &lt;code&gt;'resize'&lt;/code&gt; event on the &lt;code&gt;output&lt;/code&gt; if or when the columns ever change (&lt;a href=&quot;process#process_process_stdout&quot;&gt;&lt;code&gt;process.stdout&lt;/code&gt;&lt;/a&gt; does this automatically when it is a TTY).</source>
          <target state="translated">如果对于此实例而言， &lt;code&gt;terminal&lt;/code&gt; 为 &lt;code&gt;true&lt;/code&gt; ，则 &lt;code&gt;output&lt;/code&gt; 流定义了 &lt;code&gt;output.columns&lt;/code&gt; 属性并在列发生更改时或在 &lt;code&gt;output&lt;/code&gt; 上发出 &lt;code&gt;'resize'&lt;/code&gt; 事件时将获得最佳兼容性（&lt;a href=&quot;process#process_process_stdout&quot;&gt; &lt;code&gt;process.stdout&lt;/code&gt; &lt;/a&gt;会在列更改时自动执行此操作是TTY）。</target>
        </trans-unit>
        <trans-unit id="5f3ead5f9fa44a9b06b19da53bb88e5fcf398933" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;textDecoder.fatal&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, decoding errors that occur will result in a &lt;code&gt;TypeError&lt;/code&gt; being thrown.</source>
          <target state="translated">如果 &lt;code&gt;textDecoder.fatal&lt;/code&gt; 为 &lt;code&gt;true&lt;/code&gt; ，则发生的解码错误将导致 &lt;code&gt;TypeError&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="93d508820720453885b3eea699f8ab0480a703ba" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;timeout&lt;/code&gt; is 0, then the existing idle timeout is disabled.</source>
          <target state="translated">如果 &lt;code&gt;timeout&lt;/code&gt; 为0，则禁用现有的空闲超时。</target>
        </trans-unit>
        <trans-unit id="8ba74037670dfad528dc28eb4a0229cdb290bcbb" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;timeout&lt;/code&gt; is greater than &lt;code&gt;0&lt;/code&gt;, the parent will send the signal identified by the &lt;code&gt;killSignal&lt;/code&gt; property (the default is &lt;code&gt;'SIGTERM'&lt;/code&gt;) if the child runs longer than &lt;code&gt;timeout&lt;/code&gt; milliseconds.</source>
          <target state="translated">如果 &lt;code&gt;timeout&lt;/code&gt; 大于 &lt;code&gt;0&lt;/code&gt; ，则如果子级运行的时间超过 &lt;code&gt;timeout&lt;/code&gt; 毫秒，则父级将发送由 &lt;code&gt;killSignal&lt;/code&gt; 属性标识的信号（默认为 &lt;code&gt;'SIGTERM'&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="f083cc36cf6d2dd23f87ce2f8986e80017987790" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;totalLength&lt;/code&gt; is not provided, it is calculated from the &lt;code&gt;Buffer&lt;/code&gt; instances in &lt;code&gt;list&lt;/code&gt; by adding their lengths.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0d2a11ef3665d165830daf663028da145311e1e" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;totalLength&lt;/code&gt; is not provided, it is calculated from the &lt;code&gt;Buffer&lt;/code&gt; instances in &lt;code&gt;list&lt;/code&gt;. This however causes an additional loop to be executed in order to calculate the &lt;code&gt;totalLength&lt;/code&gt;, so it is faster to provide the length explicitly if it is already known.</source>
          <target state="translated">如果未提供 &lt;code&gt;totalLength&lt;/code&gt; ，则根据 &lt;code&gt;list&lt;/code&gt; 中的 &lt;code&gt;Buffer&lt;/code&gt; 实例计算得出。但是，这将导致执行附加循环以计算 &lt;code&gt;totalLength&lt;/code&gt; ，因此，如果已知长度，则显式提供长度会更快。</target>
        </trans-unit>
        <trans-unit id="778776dc6e51540045fed75d9d555de635d1f580" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;totalLength&lt;/code&gt; is provided, it is coerced to an unsigned integer. If the combined length of the &lt;code&gt;Buffer&lt;/code&gt;s in &lt;code&gt;list&lt;/code&gt; exceeds &lt;code&gt;totalLength&lt;/code&gt;, the result is truncated to &lt;code&gt;totalLength&lt;/code&gt;.</source>
          <target state="translated">如果提供了 &lt;code&gt;totalLength&lt;/code&gt; ，则将其强制为无符号整数。如果 &lt;code&gt;list&lt;/code&gt; &lt;code&gt;Buffer&lt;/code&gt; 的总长度超过 &lt;code&gt;totalLength&lt;/code&gt; ，则结果将被截断为 &lt;code&gt;totalLength&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="001a12b45df8df8df8cbc6ad26dda565a2635808" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;true&lt;/code&gt;, &lt;a href=&quot;#net_socket_connect_options_connectlistener&quot;&gt;&lt;code&gt;socket.connect(options[, connectListener])&lt;/code&gt;&lt;/a&gt; was called and has not yet finished. It will stay &lt;code&gt;true&lt;/code&gt; until the socket becomes connected, then it is set to &lt;code&gt;false&lt;/code&gt; and the &lt;code&gt;'connect'&lt;/code&gt; event is emitted. Note that the &lt;a href=&quot;#net_socket_connect_options_connectlistener&quot;&gt;&lt;code&gt;socket.connect(options[, connectListener])&lt;/code&gt;&lt;/a&gt; callback is a listener for the &lt;code&gt;'connect'&lt;/code&gt; event.</source>
          <target state="translated">如果为 &lt;code&gt;true&lt;/code&gt; ，则调用&lt;a href=&quot;#net_socket_connect_options_connectlistener&quot;&gt; &lt;code&gt;socket.connect(options[, connectListener])&lt;/code&gt; &lt;/a&gt;且尚未完成。它会一直保持为 &lt;code&gt;true&lt;/code&gt; ,直到套接字已连接，然后将其设置为 &lt;code&gt;false&lt;/code&gt; 并发出 &lt;code&gt;'connect'&lt;/code&gt; 事件。请注意，&lt;a href=&quot;#net_socket_connect_options_connectlistener&quot;&gt; &lt;code&gt;socket.connect(options[, connectListener])&lt;/code&gt; &lt;/a&gt;回调是 &lt;code&gt;'connect'&lt;/code&gt; 事件的侦听器。</target>
        </trans-unit>
        <trans-unit id="35098f3741d27d0e305679a7801e90403a66d2f3" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;true&lt;/code&gt;, a diagnostic report is generated on fatal errors, such as out of memory errors or failed C++ assertions.</source>
          <target state="translated">如果为 &lt;code&gt;true&lt;/code&gt; ，则将针对致命错误（例如内存不足错误或C ++断言失败）生成诊断报告。</target>
        </trans-unit>
        <trans-unit id="fe8c3d58cec5659de13c53b368f821d4eee957d9" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;true&lt;/code&gt;, a diagnostic report is generated on uncaught exception.</source>
          <target state="translated">如果为 &lt;code&gt;true&lt;/code&gt; ，则会针对未捕获的异常生成诊断报告。</target>
        </trans-unit>
        <trans-unit id="8774522e85a70aaf6c740cab69e563126d689c35" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;true&lt;/code&gt;, a diagnostic report is generated when the process receives the signal specified by &lt;code&gt;process.report.signal&lt;/code&gt;.</source>
          <target state="translated">如果为 &lt;code&gt;true&lt;/code&gt; ，则当进程接收到由 &lt;code&gt;process.report.signal&lt;/code&gt; 指定的信号时，将生成诊断报告。</target>
        </trans-unit>
        <trans-unit id="55c4e19d4721950928ccbd022abbb96676eba944" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;type&lt;/code&gt; is &lt;code&gt;'aes'&lt;/code&gt;, the length must be one of &lt;code&gt;128&lt;/code&gt; or &lt;code&gt;256&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15a1677469ba4e1018c714e40444fe2941f96222" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;type&lt;/code&gt; is &lt;code&gt;'hmac'&lt;/code&gt;, the minimum is 1, and the maximum length is 2&lt;sup&gt;31&lt;/sup&gt;-1. If the value is not a multiple of 8, the generated key will be truncated to &lt;code&gt;Math.floor(length / 8)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75ad7440a14c8c38b5aa0199a878d2e5c20d33da" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;urlObject.protocol&lt;/code&gt; is a string, it is appended as-is to &lt;code&gt;result&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;urlObject.protocol&lt;/code&gt; 是字符串，则将其原样附加到 &lt;code&gt;result&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4ff8522e3efe84a8d312b1f86c69044f0485bb19" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;urlObject&lt;/code&gt; is not an object or a string, &lt;code&gt;url.format()&lt;/code&gt; will throw a &lt;a href=&quot;errors#errors_class_typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果 &lt;code&gt;urlObject&lt;/code&gt; 不是对象或字符串，则 &lt;code&gt;url.format()&lt;/code&gt; 将抛出&lt;a href=&quot;errors#errors_class_typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f4b9089cbca1a0526cd03331202e2c04e998f1dc" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;utilization1&lt;/code&gt; and &lt;code&gt;utilization2&lt;/code&gt; are both passed, then the delta is calculated between the two arguments. This is a convenience option because, unlike &lt;a href=&quot;process#process_process_hrtime_time&quot;&gt;&lt;code&gt;process.hrtime()&lt;/code&gt;&lt;/a&gt;, calculating the ELU is more complex than a single subtraction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f03d9419ffa60c8a5daf53a3a80b6e12619db62c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;utilization1&lt;/code&gt; is passed, then the delta between the current call's &lt;code&gt;active&lt;/code&gt; and &lt;code&gt;idle&lt;/code&gt; times, as well as the corresponding &lt;code&gt;utilization&lt;/code&gt; value are calculated and returned (similar to &lt;a href=&quot;process#process_process_hrtime_time&quot;&gt;&lt;code&gt;process.hrtime()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05ee65a0f13ac3ad97c2a16e9d5f6c070b89b1a3" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;value&lt;/code&gt; contains &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer&quot;&gt;&lt;code&gt;SharedArrayBuffer&lt;/code&gt;&lt;/a&gt; instances, those are accessible from either thread. They cannot be listed in &lt;code&gt;transferList&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02196f127d73d1d47612cd8839cddc27ad068b47" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;value&lt;/code&gt; contains &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer&quot;&gt;&lt;code&gt;SharedArrayBuffer&lt;/code&gt;&lt;/a&gt; instances, those will be accessible from either thread. They cannot be listed in &lt;code&gt;transferList&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;value&lt;/code&gt; 包含&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer&quot;&gt; &lt;code&gt;SharedArrayBuffer&lt;/code&gt; &lt;/a&gt;实例，则可以从任一线程访问这些实例。它们不能在 &lt;code&gt;transferList&lt;/code&gt; 中列出。</target>
        </trans-unit>
        <trans-unit id="ff85e949179dc05f61e3f86e27be58bb70b993e9" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;value&lt;/code&gt; contains invalid characters, it is truncated; if no valid fill data remains, an exception is thrown:</source>
          <target state="translated">如果 &lt;code&gt;value&lt;/code&gt; 包含无效字符，则将其截断；否则，它将被截断。如果没有有效的填充数据，则抛出异常：</target>
        </trans-unit>
        <trans-unit id="f3b3bb2aa4477309d57f3aa2abedd9b65e4b68a4" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;value&lt;/code&gt; equals &lt;code&gt;'0'&lt;/code&gt;, certificate validation is disabled for TLS connections. This makes TLS, and HTTPS by extension, insecure. The use of this environment variable is strongly discouraged.</source>
          <target state="translated">如果 &lt;code&gt;value&lt;/code&gt; 等于 &lt;code&gt;'0'&lt;/code&gt; ，则将禁用TLS连接的证书验证。这使TLS和扩展的HTTPS不安全。强烈建议不要使用此环境变量。</target>
        </trans-unit>
        <trans-unit id="cec613a64adeb6a39ea2360902a0c704bd25ea80" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;value&lt;/code&gt; equals &lt;code&gt;'1'&lt;/code&gt;, the check for a supported platform is skipped during Node.js startup. Node.js might not execute correctly. Any issues encountered on unsupported platforms will not be fixed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ecf0a1b940c0c7066480713a76db16cc1bca7fd" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;value&lt;/code&gt; has a type that is invalid, an error is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3263c551e2bdc6058e2fe75413a98aa9283c607a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;value&lt;/code&gt; is &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Truthy&quot;&gt;truthy&lt;/a&gt;, nothing happens.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="477a3b56d3910a570c18028c1ee0026497e1f0ff" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;value&lt;/code&gt; is an empty string or empty &lt;code&gt;Buffer&lt;/code&gt; and &lt;code&gt;byteOffset&lt;/code&gt; is less than &lt;code&gt;buf.length&lt;/code&gt;, &lt;code&gt;byteOffset&lt;/code&gt; will be returned. If &lt;code&gt;value&lt;/code&gt; is empty and &lt;code&gt;byteOffset&lt;/code&gt; is at least &lt;code&gt;buf.length&lt;/code&gt;, &lt;code&gt;buf.length&lt;/code&gt; will be returned.</source>
          <target state="translated">如果 &lt;code&gt;value&lt;/code&gt; 是一个空字符串或清空 &lt;code&gt;Buffer&lt;/code&gt; 和 &lt;code&gt;byteOffset&lt;/code&gt; 小于 &lt;code&gt;buf.length&lt;/code&gt; ， &lt;code&gt;byteOffset&lt;/code&gt; 将被退回。如果 &lt;code&gt;value&lt;/code&gt; 是空的， &lt;code&gt;byteOffset&lt;/code&gt; 至少 &lt;code&gt;buf.length&lt;/code&gt; ， &lt;code&gt;buf.length&lt;/code&gt; 将被退回。</target>
        </trans-unit>
        <trans-unit id="d902facaf6d43dbe41bfb2356769d8f1ffd7b055" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;value&lt;/code&gt; is an empty string or empty &lt;code&gt;Buffer&lt;/code&gt;, &lt;code&gt;byteOffset&lt;/code&gt; will be returned.</source>
          <target state="translated">如果 &lt;code&gt;value&lt;/code&gt; 为空字符串或 &lt;code&gt;Buffer&lt;/code&gt; ，则将返回 &lt;code&gt;byteOffset&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="610f15b12beaf1c5a62a2377f055103b964040a4" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;value&lt;/code&gt; is not a string, number, or &lt;code&gt;Buffer&lt;/code&gt;, this method will throw a &lt;code&gt;TypeError&lt;/code&gt;. If &lt;code&gt;value&lt;/code&gt; is a number, it will be coerced to a valid byte value, an integer between 0 and 255.</source>
          <target state="translated">如果 &lt;code&gt;value&lt;/code&gt; 不是字符串，数字或 &lt;code&gt;Buffer&lt;/code&gt; ，则此方法将引发 &lt;code&gt;TypeError&lt;/code&gt; 。如果 &lt;code&gt;value&lt;/code&gt; 是一个数字，它将被强制为一个有效的字节值，即0到255之间的整数。</target>
        </trans-unit>
        <trans-unit id="178863efc7ea67115b5dbfa8a60b5af494bd0c5b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;value&lt;/code&gt; is not truthy, an &lt;a href=&quot;#assert_class_assert_assertionerror&quot;&gt;&lt;code&gt;AssertionError&lt;/code&gt;&lt;/a&gt; is thrown with a &lt;code&gt;message&lt;/code&gt; property set equal to the value of the &lt;code&gt;message&lt;/code&gt; parameter. If the &lt;code&gt;message&lt;/code&gt; parameter is &lt;code&gt;undefined&lt;/code&gt;, a default error message is assigned. If the &lt;code&gt;message&lt;/code&gt; parameter is an instance of an &lt;a href=&quot;errors#errors_class_error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt; then it will be thrown instead of the &lt;code&gt;AssertionError&lt;/code&gt;. If no arguments are passed in at all &lt;code&gt;message&lt;/code&gt; will be set to the string: &lt;code&gt;'No value argument passed to `assert.ok()`'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c102461aece29b4f7fef8e66b2c5fbb4127e36c6" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;value&lt;/code&gt; is not truthy, an &lt;code&gt;AssertionError&lt;/code&gt; is thrown with a &lt;code&gt;message&lt;/code&gt; property set equal to the value of the &lt;code&gt;message&lt;/code&gt; parameter. If the &lt;code&gt;message&lt;/code&gt; parameter is &lt;code&gt;undefined&lt;/code&gt;, a default error message is assigned. If the &lt;code&gt;message&lt;/code&gt; parameter is an instance of an &lt;a href=&quot;errors#errors_class_error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt; then it will be thrown instead of the &lt;code&gt;AssertionError&lt;/code&gt;. If no arguments are passed in at all &lt;code&gt;message&lt;/code&gt; will be set to the string: &lt;code&gt;'No value argument passed to `assert.ok()`'&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;value&lt;/code&gt; 不正确，则抛出一个 &lt;code&gt;AssertionError&lt;/code&gt; 且 &lt;code&gt;message&lt;/code&gt; 属性设置为 &lt;code&gt;message&lt;/code&gt; 参数的值。如果 &lt;code&gt;message&lt;/code&gt; 参数 &lt;code&gt;undefined&lt;/code&gt; ，则分配默认错误消息。如果 &lt;code&gt;message&lt;/code&gt; 参数是&lt;a href=&quot;errors#errors_class_error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; 的&lt;/a&gt;一个实例，则将引发它而不是 &lt;code&gt;AssertionError&lt;/code&gt; 。如果根本没有传递任何参数，则将 &lt;code&gt;message&lt;/code&gt; 设置为字符串： &lt;code&gt;'No value argument passed to `assert.ok()`'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fdd0402e2118e34facbcfab001befd8ad7443b87" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;value&lt;/code&gt; is:</source>
          <target state="translated">如果 &lt;code&gt;value&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="6aef87783af7020d0cd410d7d651097e2e3c679a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;warning&lt;/code&gt; is passed as an &lt;code&gt;Error&lt;/code&gt; object, it will be passed through to the &lt;code&gt;'warning'&lt;/code&gt; event handler unmodified (and the optional &lt;code&gt;type&lt;/code&gt;, &lt;code&gt;code&lt;/code&gt; and &lt;code&gt;ctor&lt;/code&gt; arguments will be ignored):</source>
          <target state="translated">如果将 &lt;code&gt;warning&lt;/code&gt; 作为 &lt;code&gt;Error&lt;/code&gt; 对象传递，它将未经修改地传递到 &lt;code&gt;'warning'&lt;/code&gt; 事件处理程序（并且可选的 &lt;code&gt;type&lt;/code&gt; ， &lt;code&gt;code&lt;/code&gt; 和 &lt;code&gt;ctor&lt;/code&gt; 参数将被忽略）：</target>
        </trans-unit>
        <trans-unit id="e4b82326320a632b6ceaad5f485c055d2c7e0174" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;warning&lt;/code&gt; is passed as an &lt;code&gt;Error&lt;/code&gt; object, the &lt;code&gt;options&lt;/code&gt; argument is ignored.</source>
          <target state="translated">如果将 &lt;code&gt;warning&lt;/code&gt; 作为 &lt;code&gt;Error&lt;/code&gt; 对象传递，则 &lt;code&gt;options&lt;/code&gt; 参数将被忽略。</target>
        </trans-unit>
        <trans-unit id="41f93b697074a04d9a7451363fab25ce715d8e95" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;expansionKey&lt;/em&gt; ends in &lt;em&gt;&quot;*&quot;&lt;/em&gt; and &lt;em&gt;matchKey&lt;/em&gt; starts with but is not equal to the substring of &lt;em&gt;expansionKey&lt;/em&gt; excluding the last &lt;em&gt;&quot;*&quot;&lt;/em&gt; character, then</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0577a7ccc05e8a587e6e7e65e0c4821ff46f2b0e" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;exports&lt;/em&gt; contains any index property keys, as defined in ECMA-262 &lt;a href=&quot;https://tc39.es/ecma262/#integer-index&quot;&gt;6.1.7 Array Index&lt;/a&gt;, throw an &lt;em&gt;Invalid Package Configuration&lt;/em&gt; error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b375c17fa600298769d168405d944fa06cc4c1ea" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;exports&lt;/em&gt; is a String or Array, or an Object containing no keys starting with &lt;em&gt;&quot;.&quot;&lt;/em&gt;, then</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6402d3f218098d3a8e6a411b9e2375110576c0e" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;exports&lt;/em&gt; is an Object with both a key starting with &lt;em&gt;&quot;.&quot;&lt;/em&gt; and a key not starting with &lt;em&gt;&quot;.&quot;&lt;/em&gt;, throw an &lt;em&gt;Invalid Package Configuration&lt;/em&gt; error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="433d836e378ef348cc420afb2d03c3f46aae06f9" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;exports&lt;/em&gt; is an Object, then</source>
          <target state="translated">如果&lt;em&gt;导出&lt;/em&gt;是一个对象，则</target>
        </trans-unit>
        <trans-unit id="74d40a34d800073ac93a2656a712beef1e220d10" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;exports&lt;/em&gt; is not &lt;strong&gt;null&lt;/strong&gt; or &lt;strong&gt;undefined&lt;/strong&gt;, then</source>
          <target state="translated">如果&lt;em&gt;导出&lt;/em&gt;不是&lt;strong&gt;null&lt;/strong&gt;或&lt;strong&gt;undefined&lt;/strong&gt;，则</target>
        </trans-unit>
        <trans-unit id="2b6adbd6d2cd92f52c0dac70fce50304484b7809" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;internal&lt;/em&gt; is &lt;strong&gt;true&lt;/strong&gt; and &lt;em&gt;target&lt;/em&gt; does not start with &lt;em&gt;&quot;../&quot;&lt;/em&gt; or &lt;em&gt;&quot;/&quot;&lt;/em&gt; and is not a valid URL, then</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="626b750f96645f82bd5cc543ca8f99fdf9bde94e" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;isMain&lt;/em&gt; is &lt;strong&gt;true&lt;/strong&gt; or &lt;em&gt;url&lt;/em&gt; ends in &lt;em&gt;&quot;.js&quot;&lt;/em&gt;, &lt;em&gt;&quot;.json&quot;&lt;/em&gt; or &lt;em&gt;&quot;.node&quot;&lt;/em&gt;, then</source>
          <target state="translated">如果&lt;em&gt;isMain&lt;/em&gt;为&lt;strong&gt;true&lt;/strong&gt;或&lt;em&gt;url&lt;/em&gt;以&lt;em&gt;&amp;ldquo; .js&amp;rdquo;&lt;/em&gt;，&lt;em&gt;&amp;ldquo; .json&amp;rdquo;&lt;/em&gt;或&lt;em&gt;&amp;ldquo; .node&amp;rdquo;&lt;/em&gt;结尾，则</target>
        </trans-unit>
        <trans-unit id="538d9233728c8d6a4c6514633152fe767963d7a6" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;isMain&lt;/em&gt; is &lt;strong&gt;true&lt;/strong&gt; or &lt;em&gt;url&lt;/em&gt; ends in &lt;em&gt;&quot;.js&quot;&lt;/em&gt;, then</source>
          <target state="translated">如果&lt;em&gt;isMain&lt;/em&gt;为&lt;strong&gt;true&lt;/strong&gt;或&lt;em&gt;url&lt;/em&gt;以&lt;em&gt;&amp;ldquo; .js&amp;rdquo;&lt;/em&gt;结尾，则</target>
        </trans-unit>
        <trans-unit id="9da65ce5b94313859150df365b9af3be12032cd4" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;mainExport&lt;/em&gt; is not &lt;strong&gt;undefined&lt;/strong&gt;, then</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df9d8c86bd73bcabf3bd344e3e90c8c80da2104f" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;matchKey&lt;/em&gt; is a key of &lt;em&gt;matchObj&lt;/em&gt;, and does not end in &lt;em&gt;&quot;*&quot;&lt;/em&gt;, then</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5ffe8900c958f10341671d5750b1b5c6d6997c1" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;matchKey&lt;/em&gt; starts with &lt;em&gt;expansionKey&lt;/em&gt;, then</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cb20b4281a114e79e240f0e1c15571acbe24e64" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;p&lt;/em&gt; equals &lt;em&gt;&quot;default&quot;&lt;/em&gt; or &lt;em&gt;conditions&lt;/em&gt; contains an entry for &lt;em&gt;p&lt;/em&gt;, then</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c57aac53f3f9fd0d62104d495804a0ae393b46fe" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;packageName&lt;/em&gt; starts with &lt;em&gt;&quot;.&quot;&lt;/em&gt; or contains &lt;em&gt;&quot;\&quot;&lt;/em&gt; or &lt;em&gt;&quot;%&quot;&lt;/em&gt;, then</source>
          <target state="translated">如果&lt;em&gt;packageName&lt;/em&gt;以&lt;em&gt;&amp;ldquo;。&amp;rdquo;&lt;/em&gt;开头&lt;em&gt;。&lt;/em&gt;或包含&lt;em&gt;&amp;ldquo; \&amp;rdquo;&lt;/em&gt;或&lt;em&gt;&amp;ldquo;％&amp;rdquo;&lt;/em&gt;，然后</target>
        </trans-unit>
        <trans-unit id="d35e5f92073bf52038791008480ed2f5c4697c50" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;packagePath&lt;/em&gt; is a key of &lt;em&gt;exports&lt;/em&gt;, then</source>
          <target state="translated">如果&lt;em&gt;packagepath的&lt;/em&gt;是一个关键的&lt;em&gt;出口&lt;/em&gt;，然后</target>
        </trans-unit>
        <trans-unit id="f2f22aee4315b9d9b1a126b11702495290d5d799" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;packagePath&lt;/em&gt; starts with &lt;em&gt;directory&lt;/em&gt;, then</source>
          <target state="translated">如果&lt;em&gt;packagePath&lt;/em&gt;以&lt;em&gt;directory&lt;/em&gt;开头，则</target>
        </trans-unit>
        <trans-unit id="5b4105fb98e3182d04e974f14eeeb21f882c8130" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;packageSpecifier&lt;/em&gt; does not contain a &lt;em&gt;&quot;/&quot;&lt;/em&gt; separator, then</source>
          <target state="translated">如果&lt;em&gt;packageSpecifier&lt;/em&gt;不包含&lt;em&gt;&amp;ldquo; /&amp;rdquo;&lt;/em&gt;分隔符，则</target>
        </trans-unit>
        <trans-unit id="7f7a0cffb3b9cc7675b70e8f76d1f2a739d49f45" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;packageSpecifier&lt;/em&gt; does not start with &lt;em&gt;&quot;@&quot;&lt;/em&gt;, then</source>
          <target state="translated">如果&lt;em&gt;packageSpecifier&lt;/em&gt;不是以&lt;em&gt;&amp;ldquo; @&amp;rdquo;&lt;/em&gt;开头，则</target>
        </trans-unit>
        <trans-unit id="2f16f2a59cbdf0b5925f0cdb310548d264354720" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;packageSpecifier&lt;/em&gt; is an empty string, then</source>
          <target state="translated">如果&lt;em&gt;packageSpecifier&lt;/em&gt;为空字符串，则</target>
        </trans-unit>
        <trans-unit id="74a4411c0f557c404fd9cac2a8f1acb42ad2bc91" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;packageSubpath&lt;/em&gt; contains any &lt;em&gt;&quot;.&quot;&lt;/em&gt; or &lt;em&gt;&quot;..&quot;&lt;/em&gt; segments or percent encoded strings for &lt;em&gt;&quot;/&quot;&lt;/em&gt; or &lt;em&gt;&quot;\&quot;&lt;/em&gt; then,</source>
          <target state="translated">如果&lt;em&gt;packageSubpath&lt;/em&gt;包含任何&lt;em&gt;&amp;ldquo;。&amp;rdquo; &lt;/em&gt;或&lt;em&gt;&amp;ldquo; ..&amp;rdquo;&lt;/em&gt;段或&lt;em&gt;&amp;ldquo; /&amp;rdquo;&lt;/em&gt;或&lt;em&gt;&amp;ldquo; \&amp;rdquo;的&lt;/em&gt;百分比编码字符串，</target>
        </trans-unit>
        <trans-unit id="9f96edd7aac90655ac6732a8ce0fafb68b19c6bf" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;packageSubpath&lt;/em&gt; is &lt;em&gt;&quot;.&quot;&lt;/em&gt; and &lt;em&gt;packageName&lt;/em&gt; is a Node.js builtin module, then</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30820a14bd44bf6838e5df3dc3dd4270f2094932" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;packageSubpath&lt;/em&gt; is &lt;em&gt;undefined&lt;/em&gt; and &lt;em&gt;packageName&lt;/em&gt; is a Node.js builtin module, then</source>
          <target state="translated">如果&lt;em&gt;未定义&lt;/em&gt;&lt;em&gt;packageSubpath&lt;/em&gt;，并且&lt;em&gt;packageName&lt;/em&gt;是Node.js内置模块，则&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a2d95c17d62993ba9ee7e59cc78fb009d19362ad" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;packageSubpath&lt;/em&gt; is _undefined__, then</source>
          <target state="translated">如果&lt;em&gt;packageSubpath&lt;/em&gt;为_undefined__，则</target>
        </trans-unit>
        <trans-unit id="63775ad1ec94909e4de60abf735e817b7eef89d2" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;packageURL&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;, then</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f158af354e66079a188452eb9bd59654fa8a11d" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;packageURL&lt;/em&gt; is not &lt;strong&gt;null&lt;/strong&gt;, then</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76bb7b696456cffac124879a2769029067dcb515" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;pattern&lt;/em&gt; is &lt;strong&gt;false&lt;/strong&gt;, &lt;em&gt;subpath&lt;/em&gt; has non-zero length and &lt;em&gt;target&lt;/em&gt; does not end with &lt;em&gt;&quot;/&quot;&lt;/em&gt;, throw an &lt;em&gt;Invalid Module Specifier&lt;/em&gt; error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2480911d63b5a76e0185c90d4572d0886914fbdd" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;pattern&lt;/em&gt; is &lt;strong&gt;true&lt;/strong&gt;, then</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6b25ebdb37a2ee70dbddea2a364bfa7f4accf7a" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;pjson.imports&lt;/em&gt; is a non-null Object, then</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cac153ab7ad7d83ff26cce43a9687bb252bdf201" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;pjson.main&lt;/em&gt; is a String, then</source>
          <target state="translated">如果&lt;em&gt;pjson.main&lt;/em&gt;是字符串，则</target>
        </trans-unit>
        <trans-unit id="6c8824a631f16e5ce09e9c09d16dfd5c378259ec" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;pjson.name&lt;/em&gt; is equal to &lt;em&gt;packageName&lt;/em&gt;, then</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29f00e1f0b5e9ea20d8965c2996f9b39a1a4115b" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;pjson.type&lt;/em&gt; is equal to &lt;em&gt;&quot;module&quot;&lt;/em&gt;, then</source>
          <target state="translated">如果&lt;em&gt;pjson.type&lt;/em&gt;等于&lt;em&gt;&amp;ldquo; module&amp;rdquo;&lt;/em&gt;，则</target>
        </trans-unit>
        <trans-unit id="bdc57c5d938d899f07106a15d348e470fbb0ae77" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;pjson&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt; or if &lt;em&gt;pjson&lt;/em&gt;.&lt;em&gt;exports&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt; or &lt;strong&gt;undefined&lt;/strong&gt;, then</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf811ae7a597b7fb485bf93caabe66eeaa852963" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;pjson&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;, then</source>
          <target state="translated">如果&lt;em&gt;pjson&lt;/em&gt;为&lt;strong&gt;null&lt;/strong&gt;，则</target>
        </trans-unit>
        <trans-unit id="4f80deadcdbf120ed3bc57ab599f9a6b579c8301" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;pjson&lt;/em&gt; is not &lt;strong&gt;null&lt;/strong&gt; and &lt;em&gt;pjson&lt;/em&gt; has an &lt;em&gt;&quot;exports&quot;&lt;/em&gt; key, then</source>
          <target state="translated">如果&lt;em&gt;pjson&lt;/em&gt;不为&lt;strong&gt;null，&lt;/strong&gt;并且&lt;em&gt;pjson&lt;/em&gt;具有&lt;em&gt;&amp;ldquo; exports&amp;rdquo;&lt;/em&gt;键，则</target>
        </trans-unit>
        <trans-unit id="18ca5859ec30047532a81d0b6f31ffafcce52235" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;pjson&lt;/em&gt; is not &lt;strong&gt;null&lt;/strong&gt; and &lt;em&gt;pjson&lt;/em&gt;.&lt;em&gt;exports&lt;/em&gt; is not &lt;strong&gt;null&lt;/strong&gt; or &lt;strong&gt;undefined&lt;/strong&gt;, then</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="924f5e7abf32f37553aa5a80dfd4cdbfc346ccc3" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;pjson&lt;/em&gt; is not &lt;strong&gt;null&lt;/strong&gt;, then</source>
          <target state="translated">如果&lt;em&gt;pjson&lt;/em&gt;不为&lt;strong&gt;null&lt;/strong&gt;，则</target>
        </trans-unit>
        <trans-unit id="10a7fb27e5c43714c28e08125b5133fc11f467de" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;pjson?.type&lt;/em&gt; exists and is &lt;em&gt;&quot;module&quot;&lt;/em&gt;, then</source>
          <target state="translated">如果&lt;em&gt;pjson？.type&lt;/em&gt;存在并且是&lt;em&gt;&amp;ldquo; module&amp;rdquo;&lt;/em&gt;，则</target>
        </trans-unit>
        <trans-unit id="4ddabda355c14670e242f2783433e93aeed8f405" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;resolved&lt;/em&gt; contains any percent encodings of &lt;em&gt;&quot;/&quot;&lt;/em&gt; or &lt;em&gt;&quot;\&quot;&lt;/em&gt; (&lt;em&gt;&quot;%2f&quot;&lt;/em&gt; and &lt;em&gt;&quot;%5C&quot;&lt;/em&gt; respectively), then</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7449cc4d1b1031c3524ef289e3560a6a3819f1c" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;resolved&lt;/em&gt; is &lt;strong&gt;undefined&lt;/strong&gt;, continue the loop.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5474accabca7888e2d572af9dd01b3256534e50" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;resolved&lt;/em&gt; is contained in &lt;em&gt;resolvedTarget&lt;/em&gt;, then</source>
          <target state="translated">如果&lt;em&gt;solved&lt;/em&gt;包含在&lt;em&gt;resolveTarget中&lt;/em&gt;，则</target>
        </trans-unit>
        <trans-unit id="a06bbe8ab35ec10987d665ee40811625bf1745fb" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;resolved&lt;/em&gt; is equal to &lt;strong&gt;undefined&lt;/strong&gt;, continue the loop.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="309600f041fa9426b9071021af01fc01c91d21f6" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;resolved&lt;/em&gt; is not &lt;strong&gt;null&lt;/strong&gt; or &lt;strong&gt;undefined&lt;/strong&gt;, then</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d733738ae723c54901f5e599136d1956a1dce2d" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;resolvedMatch&lt;/em&gt;.&lt;em&gt;resolve&lt;/em&gt; is not &lt;strong&gt;null&lt;/strong&gt; or &lt;strong&gt;undefined&lt;/strong&gt;, then</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0f81aa1380f9f4733f23b21def09dcc23089d6d" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;resolvedTarget&lt;/em&gt; is contained in &lt;em&gt;packageURL&lt;/em&gt;, then</source>
          <target state="translated">如果&lt;em&gt;resolvedTarget&lt;/em&gt;包含在&lt;em&gt;PACKAGEURL&lt;/em&gt;，然后</target>
        </trans-unit>
        <trans-unit id="e5f5cc713d0076b8f8c168a8156d8890dbb2300e" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;resolvedURL&lt;/em&gt; contains any percent encodings of &lt;em&gt;&quot;/&quot;&lt;/em&gt; or &lt;em&gt;&quot;\&quot;&lt;/em&gt; (&lt;em&gt;&quot;%2f&quot;&lt;/em&gt; and &lt;em&gt;&quot;%5C&quot;&lt;/em&gt; respectively), then</source>
          <target state="translated">如果&lt;em&gt;resolveURL&lt;/em&gt;包含&lt;em&gt;&amp;ldquo; /&amp;rdquo;&lt;/em&gt;或&lt;em&gt;&amp;ldquo; \&amp;rdquo;的&lt;/em&gt;任何百分比编码（分别为&lt;em&gt;&amp;ldquo;％2f&amp;rdquo;&lt;/em&gt;和&lt;em&gt;&amp;ldquo;％5C&amp;rdquo;&lt;/em&gt;），则</target>
        </trans-unit>
        <trans-unit id="c3c5cd03aecf162fd5cc79f200bd54c85bf5ef51" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;scopeURL&lt;/em&gt; ends in a &lt;em&gt;&quot;node_modules&quot;&lt;/em&gt; path segment, return &lt;strong&gt;null&lt;/strong&gt;.</source>
          <target state="translated">如果&lt;em&gt;scopeURL&lt;/em&gt;以&lt;em&gt;&amp;ldquo; node_modules&amp;rdquo;&lt;/em&gt;路径段&lt;strong&gt;结尾&lt;/strong&gt;，则返回&lt;strong&gt;null&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="39d9dc9837fc2ce9116a9338e887f0f2b603735c" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;selfUrl&lt;/em&gt; is not &lt;strong&gt;undefined&lt;/strong&gt;, return &lt;em&gt;selfUrl&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a32d8a8494066b9c331308a9de76dd6cfdb33e2c" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;specifier&lt;/em&gt; is a valid URL, then</source>
          <target state="translated">如果&lt;em&gt;说明符&lt;/em&gt;是有效的URL，则</target>
        </trans-unit>
        <trans-unit id="03aba3703450cb347b2baa501a774d738b8a8d87" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;specifier&lt;/em&gt; is exactly equal to &lt;em&gt;&quot;#&quot;&lt;/em&gt; or starts with &lt;em&gt;&quot;#/&quot;&lt;/em&gt;, then</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="488b105d4a05d51c891376a14f3cd7430f2c0005" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;subpath&lt;/em&gt; has non-zero length and &lt;em&gt;target&lt;/em&gt; does not end with &lt;em&gt;&quot;/&quot;&lt;/em&gt;, throw a &lt;em&gt;Module Not Found&lt;/em&gt; error.</source>
          <target state="translated">如果&lt;em&gt;子路径的&lt;/em&gt;长度非零且&lt;em&gt;目标&lt;/em&gt;不以&lt;em&gt;&amp;ldquo; /&amp;rdquo;&lt;/em&gt;结尾，则抛出&lt;em&gt;模块未找到&lt;/em&gt;错误。</target>
        </trans-unit>
        <trans-unit id="c8ed17008df2fc9610e9cc01c424675b5fd341e1" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;subpath&lt;/em&gt; is equal to &lt;em&gt;&quot;.&quot;&lt;/em&gt;, then</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e90feccdd79be95ea5e54ad496d5b6e9b08c011" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;subpath&lt;/em&gt; split on &lt;em&gt;&quot;/&quot;&lt;/em&gt; or &lt;em&gt;&quot;\&quot;&lt;/em&gt; contains any &lt;em&gt;&quot;.&quot;&lt;/em&gt;, &lt;em&gt;&quot;..&quot;&lt;/em&gt; or &lt;em&gt;&quot;node_modules&quot;&lt;/em&gt; segments, throw an &lt;em&gt;Invalid Module Specifier&lt;/em&gt; error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5329ff61a9ede403246a6ffa42cab4d0103af2b" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;target&lt;/em&gt; does not start with &lt;em&gt;&quot;./&quot;&lt;/em&gt;, then</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8eac144fa46e78f012a0b80015514759addbc976" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;target&lt;/em&gt; does not start with &lt;em&gt;&quot;./&quot;&lt;/em&gt;, throw a &lt;em&gt;Module Not Found&lt;/em&gt; error.</source>
          <target state="translated">如果&lt;em&gt;目标&lt;/em&gt;不是以&lt;em&gt;&amp;ldquo; ./&amp;rdquo;&lt;/em&gt;开头，则抛出&lt;em&gt;&amp;ldquo; &lt;/em&gt;&lt;em&gt;找不到模块&amp;rdquo;&lt;/em&gt;错误。</target>
        </trans-unit>
        <trans-unit id="c3875ce3373cebbce8bed7ea926620173bf5943b" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;target&lt;/em&gt; is a String, then</source>
          <target state="translated">如果&lt;em&gt;目标&lt;/em&gt;是字符串，则</target>
        </trans-unit>
        <trans-unit id="23e9d9969ad4fb7cdf18a1301ae7b5b00f519d6b" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;target&lt;/em&gt; or &lt;em&gt;subpath&lt;/em&gt; contain any &lt;em&gt;&quot;node_modules&quot;&lt;/em&gt; segments including &lt;em&gt;&quot;node_modules&quot;&lt;/em&gt; percent-encoding, throw a &lt;em&gt;Module Not Found&lt;/em&gt; error.</source>
          <target state="translated">如果&lt;em&gt;目标&lt;/em&gt;或&lt;em&gt;子路径&lt;/em&gt;包含任何&lt;em&gt;&amp;ldquo; node_modules&amp;rdquo;&lt;/em&gt;段（包括&lt;em&gt;&amp;ldquo; node_modules&amp;rdquo;&lt;/em&gt;百分比编码），则抛出&amp;ldquo; &lt;em&gt;模块未找到&amp;rdquo;&lt;/em&gt;错误。</target>
        </trans-unit>
        <trans-unit id="f93305c743bb5ac667b3348d3912917a71ca9577" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;target&lt;/em&gt; split on &lt;em&gt;&quot;/&quot;&lt;/em&gt; or &lt;em&gt;&quot;\&quot;&lt;/em&gt; contains any &lt;em&gt;&quot;.&quot;&lt;/em&gt;, &lt;em&gt;&quot;..&quot;&lt;/em&gt; or &lt;em&gt;&quot;node_modules&quot;&lt;/em&gt; segments after the first segment, throw an &lt;em&gt;Invalid Package Target&lt;/em&gt; error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bddfda64499ff1f71febb28ebb761f079fbed16c" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;targetValue&lt;/em&gt; is not a String, continue the loop.</source>
          <target state="translated">如果&lt;em&gt;targetValue&lt;/em&gt;不是String，则继续循环。</target>
        </trans-unit>
        <trans-unit id="746818083e540de70308980c76bffb23bc64c121" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;url&lt;/em&gt; ends in &lt;em&gt;&quot;.cjs&quot;&lt;/em&gt;, then</source>
          <target state="translated">如果&lt;em&gt;url&lt;/em&gt;以&lt;em&gt;&amp;ldquo; .cjs&amp;rdquo;&lt;/em&gt;结尾，则</target>
        </trans-unit>
        <trans-unit id="df5300d15907b48a70bb18f93285dda55aedb74c" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;url&lt;/em&gt; ends in &lt;em&gt;&quot;.js&quot;&lt;/em&gt;, then</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d00425f0ac5d3e619c3975396989aaeea52f6f8a" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;url&lt;/em&gt; ends in &lt;em&gt;&quot;.mjs&quot;&lt;/em&gt;, then</source>
          <target state="translated">如果&lt;em&gt;url&lt;/em&gt;以&lt;em&gt;&amp;ldquo; .mjs&amp;rdquo;&lt;/em&gt;结尾，则</target>
        </trans-unit>
        <trans-unit id="2657e59e2d4c8d4505b3ca335596c032d243a675" translate="yes" xml:space="preserve">
          <source>If Node.js is spawned with an IPC channel, the &lt;code&gt;process.send()&lt;/code&gt; method can be used to send messages to the parent process. Messages will be received as a &lt;a href=&quot;child_process#child_process_event_message&quot;&gt;&lt;code&gt;'message'&lt;/code&gt;&lt;/a&gt; event on the parent's &lt;a href=&quot;child_process#child_process_class_childprocess&quot;&gt;&lt;code&gt;ChildProcess&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">如果使用IPC通道生成Node.js，则可以使用 &lt;code&gt;process.send()&lt;/code&gt; 方法将消息发送到父进程。消息将作为父项的&lt;a href=&quot;child_process#child_process_class_childprocess&quot;&gt; &lt;code&gt;ChildProcess&lt;/code&gt; &lt;/a&gt;对象上的&lt;a href=&quot;child_process#child_process_event_message&quot;&gt; &lt;code&gt;'message'&lt;/code&gt; &lt;/a&gt;事件接收。</target>
        </trans-unit>
        <trans-unit id="2546faee0b34d4ad8c17f27675b90b30ee617f3b" translate="yes" xml:space="preserve">
          <source>If Node.js was compiled &lt;em&gt;without&lt;/em&gt;&lt;a href=&quot;cli#cli_node_options_options&quot;&gt;&lt;code&gt;NODE_OPTIONS&lt;/code&gt;&lt;/a&gt; support (shown in &lt;a href=&quot;#process_process_config&quot;&gt;&lt;code&gt;process.config&lt;/code&gt;&lt;/a&gt;), &lt;code&gt;process.allowedNodeEnvironmentFlags&lt;/code&gt; will contain what &lt;em&gt;would have&lt;/em&gt; been allowable.</source>
          <target state="translated">如果Node.js的编译&lt;em&gt;没有&lt;/em&gt;&lt;a href=&quot;cli#cli_node_options_options&quot;&gt; &lt;code&gt;NODE_OPTIONS&lt;/code&gt; &lt;/a&gt;支持（在所示&lt;a href=&quot;#process_process_config&quot;&gt; &lt;code&gt;process.config&lt;/code&gt; &lt;/a&gt;）， &lt;code&gt;process.allowedNodeEnvironmentFlags&lt;/code&gt; 将包含什么&lt;em&gt;会&lt;/em&gt;被允许的。</target>
        </trans-unit>
        <trans-unit id="70bb3d5051fa757d796c052f5fd051a2fe7444a6" translate="yes" xml:space="preserve">
          <source>If Node.js was not spawned with an IPC channel, &lt;code&gt;process.send()&lt;/code&gt; will be &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">如果未使用IPC通道生成Node.js，则 &lt;code&gt;process.send()&lt;/code&gt; 将是 &lt;code&gt;undefined&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1747032835cdecdf7d71b88af3e2ea5e107d2c74" translate="yes" xml:space="preserve">
          <source>If Node.js was not spawned with an IPC channel, &lt;code&gt;process.send&lt;/code&gt; will be &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3f474102746060243a977cebf87ca38ae4337f0" translate="yes" xml:space="preserve">
          <source>If _target.length is zero, return &lt;strong&gt;null&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0480dd820a4caf6a7a01add9db3c1ee81d9d7d2" translate="yes" xml:space="preserve">
          <source>If a &lt;a href=&quot;#http2_event_request&quot;&gt;&lt;code&gt;'request'&lt;/code&gt;&lt;/a&gt; listener is registered or &lt;a href=&quot;#http2_http2_createsecureserver_options_onrequesthandler&quot;&gt;&lt;code&gt;http2.createSecureServer()&lt;/code&gt;&lt;/a&gt; is supplied a callback function, the &lt;code&gt;'checkContinue'&lt;/code&gt; event is emitted each time a request with an HTTP &lt;code&gt;Expect: 100-continue&lt;/code&gt; is received. If this event is not listened for, the server will automatically respond with a status &lt;code&gt;100 Continue&lt;/code&gt; as appropriate.</source>
          <target state="translated">如果注册了&lt;a href=&quot;#http2_event_request&quot;&gt; &lt;code&gt;'request'&lt;/code&gt; &lt;/a&gt;侦听器或为&lt;a href=&quot;#http2_http2_createsecureserver_options_onrequesthandler&quot;&gt; &lt;code&gt;http2.createSecureServer()&lt;/code&gt; &lt;/a&gt;提供了回调函数，则每次接收到带有HTTP &lt;code&gt;Expect: 100-continue&lt;/code&gt; 的请求时，都会发出 &lt;code&gt;'checkContinue'&lt;/code&gt; 事件。如果未侦听此事件，则服务器将根据情况自动以状态 &lt;code&gt;100 Continue&lt;/code&gt; 响应。</target>
        </trans-unit>
        <trans-unit id="3c6666474bf74c83f95eb13a8a69c877db182322" translate="yes" xml:space="preserve">
          <source>If a &lt;a href=&quot;#http2_event_request&quot;&gt;&lt;code&gt;'request'&lt;/code&gt;&lt;/a&gt; listener is registered or &lt;a href=&quot;#http2_http2_createserver_options_onrequesthandler&quot;&gt;&lt;code&gt;http2.createServer()&lt;/code&gt;&lt;/a&gt; is supplied a callback function, the &lt;code&gt;'checkContinue'&lt;/code&gt; event is emitted each time a request with an HTTP &lt;code&gt;Expect: 100-continue&lt;/code&gt; is received. If this event is not listened for, the server will automatically respond with a status &lt;code&gt;100 Continue&lt;/code&gt; as appropriate.</source>
          <target state="translated">如果注册了&lt;a href=&quot;#http2_event_request&quot;&gt; &lt;code&gt;'request'&lt;/code&gt; &lt;/a&gt;侦听器或为&lt;a href=&quot;#http2_http2_createserver_options_onrequesthandler&quot;&gt; &lt;code&gt;http2.createServer()&lt;/code&gt; &lt;/a&gt;提供了回调函数，则每次收到带有HTTP &lt;code&gt;Expect: 100-continue&lt;/code&gt; 的请求时，都会发出 &lt;code&gt;'checkContinue'&lt;/code&gt; 事件。如果未侦听此事件，则服务器将根据情况自动以状态 &lt;code&gt;100 Continue&lt;/code&gt; 响应。</target>
        </trans-unit>
        <trans-unit id="696d38c8122ee517b2457a839a5b2713312b81a6" translate="yes" xml:space="preserve">
          <source>If a &lt;a href=&quot;#stream_class_stream_readable&quot;&gt;&lt;code&gt;Readable&lt;/code&gt;&lt;/a&gt; is switched into flowing mode and there are no consumers available to handle the data, that data will be lost. This can occur, for instance, when the &lt;code&gt;readable.resume()&lt;/code&gt; method is called without a listener attached to the &lt;code&gt;'data'&lt;/code&gt; event, or when a &lt;code&gt;'data'&lt;/code&gt; event handler is removed from the stream.</source>
          <target state="translated">如果将&lt;a href=&quot;#stream_class_stream_readable&quot;&gt; &lt;code&gt;Readable&lt;/code&gt; &lt;/a&gt;切换为流动模式，并且没有可用的使用者来处理数据，则该数据将丢失。例如，当在没有将侦听器附加到 &lt;code&gt;'data'&lt;/code&gt; 事件的情况下调用 &lt;code&gt;readable.resume()&lt;/code&gt; 方法时，或者从流中删除了 &lt;code&gt;'data'&lt;/code&gt; 事件处理程序时，就会发生这种情况。</target>
        </trans-unit>
        <trans-unit id="e9ef4d686dd3f74dcc258b05b6437e033cfca3b3" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;FileHandle&lt;/code&gt; is not closed using the &lt;code&gt;filehandle.close()&lt;/code&gt; method, it might automatically close the file descriptor and will emit a process warning, thereby helping to prevent memory leaks. Please do not rely on this behavior because it is unreliable and the file may not be closed. Instead, always explicitly close &lt;code&gt;FileHandle&lt;/code&gt;s. Node.js may change this behavior in the future.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76bfcfe08560cc38ebb9027a9665da61eb3fd24d" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;FileHandle&lt;/code&gt; is not closed using the &lt;code&gt;filehandle.close()&lt;/code&gt; method, it might automatically close the file descriptor and will emit a process warning, thereby helping to prevent memory leaks. Please do not rely on this behavior in your code because it is unreliable and your file may not be closed. Instead, always explicitly close &lt;code&gt;FileHandle&lt;/code&gt;s. Node.js may change this behavior in the future.</source>
          <target state="translated">如果未使用 &lt;code&gt;filehandle.close()&lt;/code&gt; 方法关闭 &lt;code&gt;FileHandle&lt;/code&gt; ，则它可能会自动关闭文件描述符并发出进程警告，从而有助于防止内存泄漏。请不要在您的代码中依赖此行为，因为它是不可靠的，并且您的文件可能无法关闭。相反，请始终显式关闭 &lt;code&gt;FileHandle&lt;/code&gt; 。Node.js将来可能会更改此行为。</target>
        </trans-unit>
        <trans-unit id="7636f5713fef8dfdd138e0285e154aff46051a3c" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;Readable&lt;/code&gt; stream pipes into a &lt;code&gt;Writable&lt;/code&gt; stream when &lt;code&gt;Writable&lt;/code&gt; emits an error, the &lt;code&gt;Readable&lt;/code&gt; stream will be unpiped.</source>
          <target state="translated">如果 &lt;code&gt;Readable&lt;/code&gt; 流管到一个 &lt;code&gt;Writable&lt;/code&gt; 流时 &lt;code&gt;Writable&lt;/code&gt; 发出错误时， &lt;code&gt;Readable&lt;/code&gt; 流将是unpiped。</target>
        </trans-unit>
        <trans-unit id="78672ea6b1dc7ca181368392e827ff3e0f3423b1" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;callback&lt;/code&gt; function is provided, it is called with the arguments &lt;code&gt;(error, stdout, stderr)&lt;/code&gt;. On success, &lt;code&gt;error&lt;/code&gt; will be &lt;code&gt;null&lt;/code&gt;. On error, &lt;code&gt;error&lt;/code&gt; will be an instance of &lt;a href=&quot;errors#errors_class_error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt;. The &lt;code&gt;error.code&lt;/code&gt; property will be the exit code of the child process while &lt;code&gt;error.signal&lt;/code&gt; will be set to the signal that terminated the process. Any exit code other than &lt;code&gt;0&lt;/code&gt; is considered to be an error.</source>
          <target state="translated">如果提供了 &lt;code&gt;callback&lt;/code&gt; 函数，则使用参数 &lt;code&gt;(error, stdout, stderr)&lt;/code&gt; 调用。成功时， &lt;code&gt;error&lt;/code&gt; 将为 &lt;code&gt;null&lt;/code&gt; 。出现错误时， &lt;code&gt;error&lt;/code&gt; 将是&lt;a href=&quot;errors#errors_class_error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; 的&lt;/a&gt;一个实例。该 &lt;code&gt;error.code&lt;/code&gt; 属性将是子进程的退出代码而 &lt;code&gt;error.signal&lt;/code&gt; 将被设置为终止的进程的信号。除 &lt;code&gt;0&lt;/code&gt; 以外的任何退出代码均被视为错误。</target>
        </trans-unit>
        <trans-unit id="d3f1fd1a5f0bbc36c9eb32ac42c02ad8a7115bb8" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;callback&lt;/code&gt; function is provided, it is called with the arguments &lt;code&gt;(error, stdout, stderr)&lt;/code&gt;. On success, &lt;code&gt;error&lt;/code&gt; will be &lt;code&gt;null&lt;/code&gt;. On error, &lt;code&gt;error&lt;/code&gt; will be an instance of &lt;a href=&quot;errors#errors_class_error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt;. The &lt;code&gt;error.code&lt;/code&gt; property will be the exit code of the process. By convention, any exit code other than &lt;code&gt;0&lt;/code&gt; indicates an error. &lt;code&gt;error.signal&lt;/code&gt; will be the signal that terminated the process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d71bf697bd9ed17929e16c7fe1ca5b3ec8d9ee88" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;callback&lt;/code&gt; function is provided, the bytes are generated asynchronously and the &lt;code&gt;callback&lt;/code&gt; function is invoked with two arguments: &lt;code&gt;err&lt;/code&gt; and &lt;code&gt;buf&lt;/code&gt;. If an error occurs, &lt;code&gt;err&lt;/code&gt; will be an &lt;code&gt;Error&lt;/code&gt; object; otherwise it is &lt;code&gt;null&lt;/code&gt;. The &lt;code&gt;buf&lt;/code&gt; argument is a &lt;a href=&quot;buffer&quot;&gt;&lt;code&gt;Buffer&lt;/code&gt;&lt;/a&gt; containing the generated bytes.</source>
          <target state="translated">如果提供了 &lt;code&gt;callback&lt;/code&gt; 函数，则会异步生成字节，并使用两个参数 &lt;code&gt;err&lt;/code&gt; 和 &lt;code&gt;buf&lt;/code&gt; 调用 &lt;code&gt;callback&lt;/code&gt; 函数。如果发生错误，则 &lt;code&gt;err&lt;/code&gt; 将是一个 &lt;code&gt;Error&lt;/code&gt; 对象；否则为 &lt;code&gt;null&lt;/code&gt; 。的 &lt;code&gt;buf&lt;/code&gt; 参数是一个&lt;a href=&quot;buffer&quot;&gt; &lt;code&gt;Buffer&lt;/code&gt; &lt;/a&gt;包含所生成的字节。</target>
        </trans-unit>
        <trans-unit id="1fe1f30b4c9b95923fed5f2232de9d45764b8782" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;publicKeyEncoding&lt;/code&gt; or &lt;code&gt;privateKeyEncoding&lt;/code&gt; was specified, this function behaves as if &lt;a href=&quot;#crypto_keyobject_export_options&quot;&gt;&lt;code&gt;keyObject.export()&lt;/code&gt;&lt;/a&gt; had been called on its result. Otherwise, the respective part of the key is returned as a &lt;a href=&quot;#crypto_class_keyobject&quot;&gt;&lt;code&gt;KeyObject&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果指定了 &lt;code&gt;publicKeyEncoding&lt;/code&gt; 或 &lt;code&gt;privateKeyEncoding&lt;/code&gt; ，则此函数的行为就像在其结果上调用了&lt;a href=&quot;#crypto_keyobject_export_options&quot;&gt; &lt;code&gt;keyObject.export()&lt;/code&gt; &lt;/a&gt;一样。否则，键的相应部分将作为&lt;a href=&quot;#crypto_class_keyobject&quot;&gt; &lt;code&gt;KeyObject&lt;/code&gt; &lt;/a&gt;返回。</target>
        </trans-unit>
        <trans-unit id="51deb4bb79f95f2aaa6a873a1acfac78b4899391" translate="yes" xml:space="preserve">
          <source>If a call to &lt;a href=&quot;#stream_writable_write_chunk_encoding_callback&quot;&gt;&lt;code&gt;stream.write(chunk)&lt;/code&gt;&lt;/a&gt; returns &lt;code&gt;false&lt;/code&gt;, the &lt;code&gt;'drain'&lt;/code&gt; event will be emitted when it is appropriate to resume writing data to the stream.</source>
          <target state="translated">如果对&lt;a href=&quot;#stream_writable_write_chunk_encoding_callback&quot;&gt; &lt;code&gt;stream.write(chunk)&lt;/code&gt; &lt;/a&gt;的调用返回 &lt;code&gt;false&lt;/code&gt; ，则在适合恢复向流中写入数据时将发出 &lt;code&gt;'drain'&lt;/code&gt; 事件。</target>
        </trans-unit>
        <trans-unit id="19d0f4f13350bd3ee24d918da0e3399f81fec5d4" translate="yes" xml:space="preserve">
          <source>If a child process waits to read all of its input, the child will not continue until this stream has been closed via &lt;code&gt;end()&lt;/code&gt;.</source>
          <target state="translated">如果子进程等待读取其所有输入，则直到通过 &lt;code&gt;end()&lt;/code&gt; 关闭此流后，该子进程才会继续。</target>
        </trans-unit>
        <trans-unit id="716b4434ddf0060b829e790aa3148ff698f2d32a" translate="yes" xml:space="preserve">
          <source>If a client connection emits an &lt;code&gt;'error'&lt;/code&gt; event, it will be forwarded here. Listener of this event is responsible for closing/destroying the underlying socket. For example, one may wish to more gracefully close the socket with a custom HTTP response instead of abruptly severing the connection.</source>
          <target state="translated">如果客户端连接发出 &lt;code&gt;'error'&lt;/code&gt; 事件，它将在此处转发。此事件的侦听器负责关闭/销毁底层套接字。例如，可能希望通过自定义HTTP响应更优雅地关闭套接字，而不是突然断开连接。</target>
        </trans-unit>
        <trans-unit id="cf9eaec49bed36b6ca87fda5a245016810370aec" translate="yes" xml:space="preserve">
          <source>If a file descriptor is specified as the &lt;code&gt;path&lt;/code&gt;, it will not be closed automatically.</source>
          <target state="translated">如果将文件描述符指定为 &lt;code&gt;path&lt;/code&gt; ，它将不会自动关闭。</target>
        </trans-unit>
        <trans-unit id="f96071afe83eecc5cfcae2d7a7ee17d1e0affb31" translate="yes" xml:space="preserve">
          <source>If a package has no exports, setting &lt;code&gt;&quot;exports&quot;: false&lt;/code&gt; can be used instead of &lt;code&gt;&quot;exports&quot;: {}&lt;/code&gt; to indicate the package does not intend for submodules to be exposed.</source>
          <target state="translated">如果软件包没有导出，则可以使用设置 &lt;code&gt;&quot;exports&quot;: false&lt;/code&gt; 代替 &lt;code&gt;&quot;exports&quot;: {}&lt;/code&gt; 来指示该软件包不打算公开子模块。</target>
        </trans-unit>
        <trans-unit id="befb840f0c304a4ba984a452b3cf589e473513c9" translate="yes" xml:space="preserve">
          <source>If a specifier does not have a corresponding argument, it is not replaced:</source>
          <target state="translated">如果一个指定器没有相应的参数,它就不会被替换。</target>
        </trans-unit>
        <trans-unit id="242ed9ff0f40532cd444703af82e0f6ef23742bc" translate="yes" xml:space="preserve">
          <source>If a v4 or v6 address is not specified, it is set to the default, and the operating system will choose a local address automatically.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c8cb689864546346536757da11d32272821e8a8" translate="yes" xml:space="preserve">
          <source>If a zero-length string is passed as &lt;code&gt;from&lt;/code&gt; or &lt;code&gt;to&lt;/code&gt;, the current working directory will be used instead of the zero-length strings.</source>
          <target state="translated">如果将零长度字符串 &lt;code&gt;from&lt;/code&gt; 或 &lt;code&gt;to&lt;/code&gt; 传递给，则将使用当前工作目录代替零长度字符串。</target>
        </trans-unit>
        <trans-unit id="72c0aa7997742e011b6c6546031b1bafcecaca22" translate="yes" xml:space="preserve">
          <source>If accuracy is important, use &lt;code&gt;cluster.settings&lt;/code&gt;.</source>
          <target state="translated">如果准确性很重要，请使用 &lt;code&gt;cluster.settings&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="aaa668d37d6ad8ca97da96b8f2b8381c75117854" translate="yes" xml:space="preserve">
          <source>If additional information is required upon an API returning a failed status, it can be obtained by calling &lt;code&gt;napi_get_last_error_info&lt;/code&gt;.</source>
          <target state="translated">如果API返回失败状态时需要其他信息，则可以通过调用 &lt;code&gt;napi_get_last_error_info&lt;/code&gt; 来获取。</target>
        </trans-unit>
        <trans-unit id="71cfeeeefb7ddfea89821aaea3da4b7924a82121" translate="yes" xml:space="preserve">
          <source>If after processing all given &lt;code&gt;path&lt;/code&gt; segments an absolute path has not yet been generated, the current working directory is used.</source>
          <target state="translated">如果在处理了所有给定的 &lt;code&gt;path&lt;/code&gt; 段后仍未生成绝对路径，则使用当前工作目录。</target>
        </trans-unit>
        <trans-unit id="c3fb95e056ed158abf8fb5d11fc358a410b3a4d1" translate="yes" xml:space="preserve">
          <source>If an &lt;a href=&quot;#assert_class_assert_assertionerror&quot;&gt;&lt;code&gt;AssertionError&lt;/code&gt;&lt;/a&gt; is thrown and a value is provided for the &lt;code&gt;message&lt;/code&gt; parameter, the value of &lt;code&gt;message&lt;/code&gt; will be appended to the &lt;a href=&quot;#assert_class_assert_assertionerror&quot;&gt;&lt;code&gt;AssertionError&lt;/code&gt;&lt;/a&gt; message:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8158143fcff0e4b6d3c4013f6abb4d504f41f45" translate="yes" xml:space="preserve">
          <source>If an &lt;code&gt;AbortSignal&lt;/code&gt; is specified in the &lt;code&gt;options&lt;/code&gt; and it is triggered while the &lt;code&gt;Promise&lt;/code&gt; is pending, the &lt;code&gt;Promise&lt;/code&gt; will be rejected with an &lt;code&gt;AbortError&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8187873900b537e036c18f24394fdf7c2e0317c" translate="yes" xml:space="preserve">
          <source>If an &lt;code&gt;AssertionError&lt;/code&gt; is thrown and a value is provided for the &lt;code&gt;message&lt;/code&gt; parameter, the value of &lt;code&gt;message&lt;/code&gt; will be appended to the &lt;code&gt;AssertionError&lt;/code&gt; message:</source>
          <target state="translated">如果一个 &lt;code&gt;AssertionError&lt;/code&gt; 被抛出并且被提供给一个值 &lt;code&gt;message&lt;/code&gt; 参数，值 &lt;code&gt;message&lt;/code&gt; 将被附加到所述 &lt;code&gt;AssertionError&lt;/code&gt; 消息：</target>
        </trans-unit>
        <trans-unit id="d0b02b176e8a20c608d564c5cc70e6b95982af42" translate="yes" xml:space="preserve">
          <source>If an &lt;code&gt;EventEmitter&lt;/code&gt; does &lt;em&gt;not&lt;/em&gt; have at least one listener registered for the &lt;code&gt;'error'&lt;/code&gt; event, and an &lt;code&gt;'error'&lt;/code&gt; event is emitted, the error is thrown, a stack trace is printed, and the Node.js process exits.</source>
          <target state="translated">如果 &lt;code&gt;EventEmitter&lt;/code&gt; 确实&lt;em&gt;不&lt;/em&gt;具有用于注册的至少一个监听 &lt;code&gt;'error'&lt;/code&gt; 事件，以及 &lt;code&gt;'error'&lt;/code&gt; 事件被发射时，该错误被抛出，堆栈跟踪被印刷，并且的Node.js过程退出。</target>
        </trans-unit>
        <trans-unit id="a9365a584afade646fe0d5b6c0c7d3bdfc0ab158" translate="yes" xml:space="preserve">
          <source>If an asynchronous operation is needed for logging, it is possible to keep track of what caused the asynchronous operation using the information provided by AsyncHooks itself. The logging should then be skipped when it was the logging itself that caused AsyncHooks callback to call. By doing this the otherwise infinite recursion is broken.</source>
          <target state="translated">如果需要异步操作进行日志记录,可以利用AsyncHooks本身提供的信息来跟踪引起异步操作的原因。那么,当是日志本身引起AsyncHooks回调调用的时候,就应该跳过日志记录。通过这样做,否则无限递归的现象就会被打破。</target>
        </trans-unit>
        <trans-unit id="6f8e48f1c656e862702dd245640f6418ecf40628" translate="yes" xml:space="preserve">
          <source>If an error is thrown and it is the same type as that specified by the &lt;code&gt;error&lt;/code&gt; parameter, then an &lt;a href=&quot;#assert_class_assert_assertionerror&quot;&gt;&lt;code&gt;AssertionError&lt;/code&gt;&lt;/a&gt; is thrown. If the error is of a different type, or if the &lt;code&gt;error&lt;/code&gt; parameter is undefined, the error is propagated back to the caller.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c79166257f7aba2eefa6b4c14e6926c016bcf315" translate="yes" xml:space="preserve">
          <source>If an error is thrown and it is the same type as that specified by the &lt;code&gt;error&lt;/code&gt; parameter, then an &lt;code&gt;AssertionError&lt;/code&gt; is thrown. If the error is of a different type, or if the &lt;code&gt;error&lt;/code&gt; parameter is undefined, the error is propagated back to the caller.</source>
          <target state="translated">如果抛出错误，并且错误类型与 &lt;code&gt;error&lt;/code&gt; 参数指定的类型相同，则抛出 &lt;code&gt;AssertionError&lt;/code&gt; 。如果错误是其他类型，或者 &lt;code&gt;error&lt;/code&gt; 参数未定义，则错误将传播回调用方。</target>
        </trans-unit>
        <trans-unit id="35ce67c2f991bd2d7b89402a112bf7ff79f1656d" translate="yes" xml:space="preserve">
          <source>If an error occurs an &lt;code&gt;Error&lt;/code&gt; will be thrown, otherwise the derived key will be returned as a &lt;a href=&quot;buffer&quot;&gt;&lt;code&gt;Buffer&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果发生 &lt;code&gt;Error&lt;/code&gt; 将抛出Error，否则派生的键将作为&lt;a href=&quot;buffer&quot;&gt; &lt;code&gt;Buffer&lt;/code&gt; &lt;/a&gt;返回。</target>
        </trans-unit>
        <trans-unit id="9b6e1e560aaa002865abca4a1a9306578fe0ed21" translate="yes" xml:space="preserve">
          <source>If an error occurs while attempting to read the file data, the &lt;code&gt;Http2Stream&lt;/code&gt; will be closed using an &lt;code&gt;RST_STREAM&lt;/code&gt; frame using the standard &lt;code&gt;INTERNAL_ERROR&lt;/code&gt; code. If the &lt;code&gt;onError&lt;/code&gt; callback is defined, then it will be called. Otherwise the stream will be destroyed.</source>
          <target state="translated">如果在试图读取该文件的数据中出现错误，则 &lt;code&gt;Http2Stream&lt;/code&gt; 将使用封闭 &lt;code&gt;RST_STREAM&lt;/code&gt; 使用标准的帧 &lt;code&gt;INTERNAL_ERROR&lt;/code&gt; 代码。如果定义了 &lt;code&gt;onError&lt;/code&gt; 回调，则将调用它。否则，流将被销毁。</target>
        </trans-unit>
        <trans-unit id="463518efe745a40c03960254543ea284c97ae66b" translate="yes" xml:space="preserve">
          <source>If an option that takes a single value (such as &lt;code&gt;--max-http-header-size&lt;/code&gt;) is passed more than once, then the last passed value is used. Options from the command line take precedence over options passed through the &lt;a href=&quot;#cli_node_options_options&quot;&gt;&lt;code&gt;NODE_OPTIONS&lt;/code&gt;&lt;/a&gt; environment variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1a330a40cb4ac6defe3e8f84d892970fa36e7a4" translate="yes" xml:space="preserve">
          <source>If an option value contains a space, it can be escaped using double quotes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df9e85a9260ce43a2b0e0f5761178c04dc16852e" translate="yes" xml:space="preserve">
          <source>If an uncaught exception occurs during execution of the callback, then &lt;code&gt;after&lt;/code&gt; will run &lt;em&gt;after&lt;/em&gt; the &lt;code&gt;'uncaughtException'&lt;/code&gt; event is emitted or a &lt;code&gt;domain&lt;/code&gt;'s handler runs.</source>
          <target state="translated">如果回调的执行过程中发生未捕获的异常，那么 &lt;code&gt;after&lt;/code&gt; 将运行&lt;em&gt;后&lt;/em&gt;的 &lt;code&gt;'uncaughtException'&lt;/code&gt; 发射事件或 &lt;code&gt;domain&lt;/code&gt; 的处理程序运行。</target>
        </trans-unit>
        <trans-unit id="9abd45ba34315ef2e5f5a8166fc8ee079e4c8bd9" translate="yes" xml:space="preserve">
          <source>If any &lt;code&gt;AsyncHook&lt;/code&gt; callbacks throw, the application will print the stack trace and exit. The exit path does follow that of an uncaught exception, but all &lt;code&gt;'uncaughtException'&lt;/code&gt; listeners are removed, thus forcing the process to exit. The &lt;code&gt;'exit'&lt;/code&gt; callbacks will still be called unless the application is run with &lt;code&gt;--abort-on-uncaught-exception&lt;/code&gt;, in which case a stack trace will be printed and the application exits, leaving a core file.</source>
          <target state="translated">如果抛出任何 &lt;code&gt;AsyncHook&lt;/code&gt; 回调，则应用程序将打印堆栈跟踪并退出。退出路径的确遵循未捕获异常的路径，但是所有 &lt;code&gt;'uncaughtException'&lt;/code&gt; 侦听器均已删除，从而迫使进程退出。的 &lt;code&gt;'exit'&lt;/code&gt; 回调将仍然被称为除非应用程序与运行 &lt;code&gt;--abort-on-uncaught-exception&lt;/code&gt; ，在此情况下一个堆栈跟踪将被打印和在应用程序退出，留下一个芯文件。</target>
        </trans-unit>
        <trans-unit id="a3c2fb5aeb80ff1e6a756547b4e43eebdf07b06d" translate="yes" xml:space="preserve">
          <source>If any error is encountered during the request (be that with DNS resolution, TCP level errors, or actual HTTP parse errors) an &lt;code&gt;'error'&lt;/code&gt; event is emitted on the returned request object. As with all &lt;code&gt;'error'&lt;/code&gt; events, if no listeners are registered the error will be thrown.</source>
          <target state="translated">如果在请求过程中遇到任何错误（例如DNS解析，TCP级别错误或实际HTTP解析错误），则在返回的请求对象上会发出 &lt;code&gt;'error'&lt;/code&gt; 事件。与所有 &lt;code&gt;'error'&lt;/code&gt; 事件一样，如果未注册任何侦听器，则将引发错误。</target>
        </trans-unit>
        <trans-unit id="06830b91ba14a727d7329b340f5f6d345019e8ff" translate="yes" xml:space="preserve">
          <source>If any of the accessibility checks fail, an &lt;code&gt;Error&lt;/code&gt; will be thrown. Otherwise, the method will return &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">如果任何可访问性检查失败，将引发 &lt;code&gt;Error&lt;/code&gt; 。否则，该方法将返回 &lt;code&gt;undefined&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a8ed6b7de64a4dc0fb3512c0172d90c5572fb261" translate="yes" xml:space="preserve">
          <source>If asynchronous scheduling functions such as &lt;code&gt;process.nextTick()&lt;/code&gt;, &lt;code&gt;queueMicrotask()&lt;/code&gt;, &lt;code&gt;setTimeout()&lt;/code&gt;, &lt;code&gt;setImmediate()&lt;/code&gt;, etc. are made available inside a &lt;code&gt;vm.Context&lt;/code&gt;, functions passed to them will be added to global queues, which are shared by all contexts. Therefore, callbacks passed to those functions are not controllable through the timeout either.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f00574817cda32e310f4a196609e7e58a2faf71" translate="yes" xml:space="preserve">
          <source>If at least one of &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; is a &lt;code&gt;TypedArray&lt;/code&gt; with more than one byte per entry, such as &lt;code&gt;Uint16Array&lt;/code&gt;, the result will be computed using the platform byte order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e1c37de1fe1d451576d6332685c82c3afa01dbe" translate="yes" xml:space="preserve">
          <source>If available on the operating system, the following constants are exported in &lt;code&gt;os.constants.dlopen&lt;/code&gt;. See &lt;a href=&quot;http://man7.org/linux/man-pages/man3/dlopen.3.html&quot;&gt;&lt;code&gt;dlopen(3)&lt;/code&gt;&lt;/a&gt; for detailed information.</source>
          <target state="translated">如果在操作系统上可用，则以下常量将导出到 &lt;code&gt;os.constants.dlopen&lt;/code&gt; 中。有关详细信息，请参见&lt;a href=&quot;http://man7.org/linux/man-pages/man3/dlopen.3.html&quot;&gt; &lt;code&gt;dlopen(3)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="596758a71652411a2826cbd0e26ead1fd7f3fb53" translate="yes" xml:space="preserve">
          <source>If available, dynamically load a pointer to the function using &lt;code&gt;uv_dlsym()&lt;/code&gt;.</source>
          <target state="translated">如果可用，请使用 &lt;code&gt;uv_dlsym()&lt;/code&gt; 动态加载指向该函数的指针。</target>
        </trans-unit>
        <trans-unit id="69820efdd034979319e195a688ede9f09c30edb5" translate="yes" xml:space="preserve">
          <source>If binding fails, an &lt;code&gt;'error'&lt;/code&gt; event is generated. In rare case (e.g. attempting to bind with a closed socket), an &lt;a href=&quot;errors#errors_class_error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt; may be thrown.</source>
          <target state="translated">如果绑定失败，则会生成 &lt;code&gt;'error'&lt;/code&gt; 事件。在极少数情况下（例如，尝试使用封闭的套接字绑定），可能会引发&lt;a href=&quot;errors#errors_class_error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3bd9b1569d617528476c8d627bf6c4627b7d9276" translate="yes" xml:space="preserve">
          <source>If bootstrapping has not yet finished on the main thread the properties have the value of &lt;code&gt;0&lt;/code&gt;. The ELU is immediately available on &lt;a href=&quot;worker_threads#worker_threads_worker_threads&quot;&gt;Worker threads&lt;/a&gt; since bootstrap happens within the event loop.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="148a3b906ccba4e63b6b43ff0083706c9229c3a5" translate="yes" xml:space="preserve">
          <source>If both &lt;a href=&quot;#packages_exports&quot;&gt;&lt;code&gt;&quot;exports&quot;&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#packages_main&quot;&gt;&lt;code&gt;&quot;main&quot;&lt;/code&gt;&lt;/a&gt; are defined, the &lt;a href=&quot;#packages_exports&quot;&gt;&lt;code&gt;&quot;exports&quot;&lt;/code&gt;&lt;/a&gt; field takes precedence over &lt;a href=&quot;#packages_main&quot;&gt;&lt;code&gt;&quot;main&quot;&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;#packages_exports&quot;&gt;&lt;code&gt;&quot;exports&quot;&lt;/code&gt;&lt;/a&gt; are not specific to ES modules or CommonJS; &lt;a href=&quot;#packages_main&quot;&gt;&lt;code&gt;&quot;main&quot;&lt;/code&gt;&lt;/a&gt; is overridden by &lt;a href=&quot;#packages_exports&quot;&gt;&lt;code&gt;&quot;exports&quot;&lt;/code&gt;&lt;/a&gt; if it exists. As such &lt;a href=&quot;#packages_main&quot;&gt;&lt;code&gt;&quot;main&quot;&lt;/code&gt;&lt;/a&gt; cannot be used as a fallback for CommonJS but it can be used as a fallback for legacy versions of Node.js that do not support the &lt;a href=&quot;#packages_exports&quot;&gt;&lt;code&gt;&quot;exports&quot;&lt;/code&gt;&lt;/a&gt; field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e68c86b6833301dfcce43bc788132f9c75a181e6" translate="yes" xml:space="preserve">
          <source>If both &lt;code&gt;'readable'&lt;/code&gt; and &lt;a href=&quot;#stream_event_data&quot;&gt;&lt;code&gt;'data'&lt;/code&gt;&lt;/a&gt; are used at the same time, &lt;code&gt;'readable'&lt;/code&gt; takes precedence in controlling the flow, i.e. &lt;code&gt;'data'&lt;/code&gt; will be emitted only when &lt;a href=&quot;#stream_readable_read_size&quot;&gt;&lt;code&gt;stream.read()&lt;/code&gt;&lt;/a&gt; is called. The &lt;code&gt;readableFlowing&lt;/code&gt; property would become &lt;code&gt;false&lt;/code&gt;. If there are &lt;code&gt;'data'&lt;/code&gt; listeners when &lt;code&gt;'readable'&lt;/code&gt; is removed, the stream will start flowing, i.e. &lt;code&gt;'data'&lt;/code&gt; events will be emitted without calling &lt;code&gt;.resume()&lt;/code&gt;.</source>
          <target state="translated">如果同时使用 &lt;code&gt;'readable'&lt;/code&gt; 和&lt;a href=&quot;#stream_event_data&quot;&gt; &lt;code&gt;'data'&lt;/code&gt; &lt;/a&gt;，则 &lt;code&gt;'readable'&lt;/code&gt; 优先于控制流，即，仅在&lt;a href=&quot;#stream_readable_read_size&quot;&gt; &lt;code&gt;stream.read()&lt;/code&gt; &lt;/a&gt;时才会发出 &lt;code&gt;'data'&lt;/code&gt; 。该 &lt;code&gt;readableFlowing&lt;/code&gt; 属性将变得 &lt;code&gt;false&lt;/code&gt; 。如果删除 &lt;code&gt;'readable'&lt;/code&gt; 有 &lt;code&gt;'data'&lt;/code&gt; 侦听器，则流将开始流动，即，将在不调用 &lt;code&gt;.resume()&lt;/code&gt; 的情况下发出 &lt;code&gt;'data'&lt;/code&gt; 事件。</target>
        </trans-unit>
        <trans-unit id="ceb11ecdf178c1cb711e0a8eae9d9fb2fb97443b" translate="yes" xml:space="preserve">
          <source>If both &lt;code&gt;fill&lt;/code&gt; and &lt;code&gt;encoding&lt;/code&gt; are specified, the allocated &lt;code&gt;Buffer&lt;/code&gt; will be initialized by calling &lt;a href=&quot;#buffer_buf_fill_value_offset_end_encoding&quot;&gt;&lt;code&gt;buf.fill(fill, encoding)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果同时指定 &lt;code&gt;fill&lt;/code&gt; 和 &lt;code&gt;encoding&lt;/code&gt; ，则将通过调用&lt;a href=&quot;#buffer_buf_fill_value_offset_end_encoding&quot;&gt; &lt;code&gt;buf.fill(fill, encoding)&lt;/code&gt; &lt;/a&gt;初始化分配的 &lt;code&gt;Buffer&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4093e8ebac89975d459aaad8fd6437be71fb3935" translate="yes" xml:space="preserve">
          <source>If both &lt;code&gt;url&lt;/code&gt; and &lt;code&gt;options&lt;/code&gt; are specified, the objects are merged, with the &lt;code&gt;options&lt;/code&gt; properties taking precedence.</source>
          <target state="translated">如果同时指定了 &lt;code&gt;url&lt;/code&gt; 和 &lt;code&gt;options&lt;/code&gt; ，则将对象合并，并且 &lt;code&gt;options&lt;/code&gt; 属性优先。</target>
        </trans-unit>
        <trans-unit id="6c4d968b22b1df3d2e79d51e79be1c024e9931b6" translate="yes" xml:space="preserve">
          <source>If both filename and error object are passed to &lt;code&gt;writeReport()&lt;/code&gt; the error object must be the second parameter.</source>
          <target state="translated">如果将文件名和错误对象都传递给 &lt;code&gt;writeReport()&lt;/code&gt; ,则错误对象必须是第二个参数。</target>
        </trans-unit>
        <trans-unit id="781d2eb2d380d26e4ab2a5dfd0c0ef2dfe2b3db4" translate="yes" xml:space="preserve">
          <source>If clients advertise support for tickets, the server will send them. The server can disable tickets by supplying &lt;code&gt;require('constants').SSL_OP_NO_TICKET&lt;/code&gt; in &lt;code&gt;secureOptions&lt;/code&gt;.</source>
          <target state="translated">如果客户端广告支持票证，则服务器将发送票证。服务器可以通过在 &lt;code&gt;secureOptions&lt;/code&gt; 中提供 &lt;code&gt;require('constants').SSL_OP_NO_TICKET&lt;/code&gt; 来禁用票证。</target>
        </trans-unit>
        <trans-unit id="de92f9a3546d5ea09f3d735ebbcce48b7c9578b8" translate="yes" xml:space="preserve">
          <source>If domains are in use, then all &lt;strong&gt;new&lt;/strong&gt;&lt;code&gt;EventEmitter&lt;/code&gt; objects (including Stream objects, requests, responses, etc.) will be implicitly bound to the active domain at the time of their creation.</source>
          <target state="translated">如果使用域，则所有&lt;strong&gt;新的&lt;/strong&gt; &lt;code&gt;EventEmitter&lt;/code&gt; 对象（包括Stream对象，请求，响应等）在创建时都将隐式绑定到活动域。</target>
        </trans-unit>
        <trans-unit id="dc3ef976ebda6d70a05ce4c354ddd516615f12d1" translate="yes" xml:space="preserve">
          <source>If either of the following conditions is true, then the literal string &lt;code&gt;//&lt;/code&gt; will be appended to &lt;code&gt;result&lt;/code&gt;:</source>
          <target state="translated">如果满足以下任一条件，则将文字字符串 &lt;code&gt;//&lt;/code&gt; 添加到 &lt;code&gt;result&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="1edb794d4a1d426d551d17375aabde00b3477150" translate="yes" xml:space="preserve">
          <source>If either the &lt;code&gt;--no-deprecation&lt;/code&gt; or &lt;code&gt;--no-warnings&lt;/code&gt; command line flags are used, or if the &lt;code&gt;process.noDeprecation&lt;/code&gt; property is set to &lt;code&gt;true&lt;/code&gt;&lt;em&gt;prior&lt;/em&gt; to the first deprecation warning, the &lt;code&gt;util.deprecate()&lt;/code&gt; method does nothing.</source>
          <target state="translated">如果使用 &lt;code&gt;--no-deprecation&lt;/code&gt; 或 &lt;code&gt;--no-warnings&lt;/code&gt; 命令行标志，或者在第一个弃用警告&lt;em&gt;之前&lt;/em&gt;将 &lt;code&gt;process.noDeprecation&lt;/code&gt; 属性设置为 &lt;code&gt;true&lt;/code&gt; ，则 &lt;code&gt;util.deprecate()&lt;/code&gt; 方法将不执行任何操作。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="437218400bef270fc6098e6ccd2c613f46443a5a" translate="yes" xml:space="preserve">
          <source>If either the &lt;code&gt;--no-deprecation&lt;/code&gt; or &lt;code&gt;--no-warnings&lt;/code&gt; command-line flags are used, or if the &lt;code&gt;process.noDeprecation&lt;/code&gt; property is set to &lt;code&gt;true&lt;/code&gt;&lt;em&gt;prior&lt;/em&gt; to the first deprecation warning, the &lt;code&gt;util.deprecate()&lt;/code&gt; method does nothing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="956685bdc299adef90da52130e4b0d27fa2c297c" translate="yes" xml:space="preserve">
          <source>If emitted, the &lt;code&gt;'spawn'&lt;/code&gt; event comes before all other events and before any data is received via &lt;code&gt;stdout&lt;/code&gt; or &lt;code&gt;stderr&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98aa649de478c0f47590b643bddfcf1f1c12b6e6" translate="yes" xml:space="preserve">
          <source>If formatting elements (e.g. &lt;code&gt;%d&lt;/code&gt;) are not found in the first string then &lt;a href=&quot;util#util_util_inspect_object_options&quot;&gt;&lt;code&gt;util.inspect()&lt;/code&gt;&lt;/a&gt; is called on each argument and the resulting string values are concatenated. See &lt;a href=&quot;util#util_util_format_format_args&quot;&gt;&lt;code&gt;util.format()&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">如果在第一个字符串中找不到格式设置元素（例如 &lt;code&gt;%d&lt;/code&gt; ），则在每个参数上调用&lt;a href=&quot;util#util_util_inspect_object_options&quot;&gt; &lt;code&gt;util.inspect()&lt;/code&gt; &lt;/a&gt;并将结果字符串值连接起来。有关更多信息，请参见&lt;a href=&quot;util#util_util_format_format_args&quot;&gt; &lt;code&gt;util.format()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fcd1cb474c4645e8085aa1a3dfd6acd452a0e5c6" translate="yes" xml:space="preserve">
          <source>If found, source map data is appended to the top-level key &lt;code&gt;source-map-cache&lt;/code&gt; on the JSON coverage object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eac4547e7fbaee4e63b524e438980acdf8e44d28" translate="yes" xml:space="preserve">
          <source>If given a &lt;code&gt;contextObject&lt;/code&gt;, the &lt;code&gt;vm.createContext()&lt;/code&gt; method will &lt;a href=&quot;#vm_what_does_it_mean_to_contextify_an_object&quot;&gt;prepare that object&lt;/a&gt; so that it can be used in calls to &lt;a href=&quot;#vm_vm_runincontext_code_contextifiedobject_options&quot;&gt;&lt;code&gt;vm.runInContext()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#vm_script_runincontext_contextifiedobject_options&quot;&gt;&lt;code&gt;script.runInContext()&lt;/code&gt;&lt;/a&gt;. Inside such scripts, the &lt;code&gt;contextObject&lt;/code&gt; will be the global object, retaining all of its existing properties but also having the built-in objects and functions any standard &lt;a href=&quot;https://es5.github.io/#x15.1&quot;&gt;global object&lt;/a&gt; has. Outside of scripts run by the vm module, global variables will remain unchanged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef6daec57d79612028ad2d0945f9175e3244f8b8" translate="yes" xml:space="preserve">
          <source>If given a &lt;code&gt;sandbox&lt;/code&gt; object, the &lt;code&gt;vm.createContext()&lt;/code&gt; method will &lt;a href=&quot;#vm_what_does_it_mean_to_contextify_an_object&quot;&gt;prepare that sandbox&lt;/a&gt; so that it can be used in calls to &lt;a href=&quot;#vm_vm_runincontext_code_contextifiedsandbox_options&quot;&gt;&lt;code&gt;vm.runInContext()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#vm_script_runincontext_contextifiedsandbox_options&quot;&gt;&lt;code&gt;script.runInContext()&lt;/code&gt;&lt;/a&gt;. Inside such scripts, the &lt;code&gt;sandbox&lt;/code&gt; object will be the global object, retaining all of its existing properties but also having the built-in objects and functions any standard &lt;a href=&quot;https://es5.github.io/#x15.1&quot;&gt;global object&lt;/a&gt; has. Outside of scripts run by the vm module, global variables will remain unchanged.</source>
          <target state="translated">如果提供了 &lt;code&gt;sandbox&lt;/code&gt; 对象，则 &lt;code&gt;vm.createContext()&lt;/code&gt; 方法将&lt;a href=&quot;#vm_what_does_it_mean_to_contextify_an_object&quot;&gt;准备该沙箱，&lt;/a&gt;以便可以在对&lt;a href=&quot;#vm_vm_runincontext_code_contextifiedsandbox_options&quot;&gt; &lt;code&gt;vm.runInContext()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#vm_script_runincontext_contextifiedsandbox_options&quot;&gt; &lt;code&gt;script.runInContext()&lt;/code&gt; 的&lt;/a&gt;调用中使用。在此类脚本中， &lt;code&gt;sandbox&lt;/code&gt; 对象将是全局对象，既保留其所有现有属性，又具有任何标准&lt;a href=&quot;https://es5.github.io/#x15.1&quot;&gt;全局对象&lt;/a&gt;具有的内置对象和功能。在vm模块运行的脚本之外，全局变量将保持不变。</target>
        </trans-unit>
        <trans-unit id="0224f657dc067d60f107db3f7b9acbd276a22bc9" translate="yes" xml:space="preserve">
          <source>If headers are supported by the application protocol in use for a given &lt;code&gt;QuicSession&lt;/code&gt;, the &lt;code&gt;'initialHeaders'&lt;/code&gt;, &lt;code&gt;'informationalHeaders'&lt;/code&gt;, and &lt;code&gt;'trailingHeaders'&lt;/code&gt; events will be emitted by the &lt;code&gt;QuicStream&lt;/code&gt; object when headers are received; and the &lt;code&gt;submitInformationalHeaders()&lt;/code&gt;, &lt;code&gt;submitInitialHeaders()&lt;/code&gt;, and &lt;code&gt;submitTrailingHeaders()&lt;/code&gt; methods can be used to send headers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="baf19ec31a54f53d6dbad913afdb80c5c013e023" translate="yes" xml:space="preserve">
          <source>If importing a &lt;code&gt;'PBKDF2'&lt;/code&gt; key, &lt;code&gt;extractable&lt;/code&gt; must be &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79789a5254327b894116d434ddd2c5bab864e280" translate="yes" xml:space="preserve">
          <source>If it is necessary to terminate the Node.js process due to an error condition, throwing an &lt;em&gt;uncaught&lt;/em&gt; error and allowing the process to terminate accordingly is safer than calling &lt;code&gt;process.exit()&lt;/code&gt;.</source>
          <target state="translated">如果由于错误情况而有必要终止Node.js进程，则抛出&lt;em&gt;未捕获的&lt;/em&gt;错误并相应地终止进程比调用 &lt;code&gt;process.exit()&lt;/code&gt; 更安全。</target>
        </trans-unit>
        <trans-unit id="49d1021878ab098e47def050c750dc4a07325a5f" translate="yes" xml:space="preserve">
          <source>If it is not found there, then it moves to the parent directory, and so on, until the root of the file system is reached.</source>
          <target state="translated">如果在那里找不到,则移动到父目录,以此类推,直到到达文件系统的根目录。</target>
        </trans-unit>
        <trans-unit id="57ecbec6d9d4f38cf1822faac1b3e8d1f4214263" translate="yes" xml:space="preserve">
          <source>If listeners are attached or removed using &lt;code&gt;.on('message')&lt;/code&gt;, the port is &lt;code&gt;ref()&lt;/code&gt;ed and &lt;code&gt;unref()&lt;/code&gt;ed automatically depending on whether listeners for the event exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="818c99e33248acd389a413f2d1a026a1130b44fa" translate="yes" xml:space="preserve">
          <source>If listeners are attached or removed using &lt;code&gt;.on('message')&lt;/code&gt;, the port will be &lt;code&gt;ref()&lt;/code&gt;ed and &lt;code&gt;unref()&lt;/code&gt;ed automatically depending on whether listeners for the event exist.</source>
          <target state="translated">如果使用 &lt;code&gt;.on('message')&lt;/code&gt; 连接或删除了侦听器， &lt;code&gt;unref()&lt;/code&gt; 根据事件是否存在侦听器自动对端口进行 &lt;code&gt;ref()&lt;/code&gt; 和unref（）。</target>
        </trans-unit>
        <trans-unit id="ad034aac2c274cf31ed92eba6269a2ff5528a593" translate="yes" xml:space="preserve">
          <source>If multicastInterface can not be parsed into an IP then an &lt;code&gt;EINVAL&lt;/code&gt; System Error is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="caaf9326eed1511be3e79d3268fda1e5de037c83" translate="yes" xml:space="preserve">
          <source>If necessary, there is an additional pair of &lt;code&gt;AddEnvironmentCleanupHook()&lt;/code&gt; and &lt;code&gt;RemoveEnvironmentCleanupHook()&lt;/code&gt; overloads, where the cleanup hook takes a callback function. This can be used for shutting down asynchronous resources, such as any libuv handles registered by the addon.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8980465e182336a46cb1cd079419daceb92d282c" translate="yes" xml:space="preserve">
          <source>If needed, a &lt;code&gt;require&lt;/code&gt; function can be constructed within an ES module using &lt;a href=&quot;module#module_module_createrequire_filename&quot;&gt;&lt;code&gt;module.createRequire()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76636b0f1944e7d4d859fa8d9c5002000eb7958f" translate="yes" xml:space="preserve">
          <source>If no &lt;a href=&quot;#http_event_response&quot;&gt;&lt;code&gt;'response'&lt;/code&gt;&lt;/a&gt; handler is added, then the response will be entirely discarded. However, if a &lt;a href=&quot;#http_event_response&quot;&gt;&lt;code&gt;'response'&lt;/code&gt;&lt;/a&gt; event handler is added, then the data from the response object &lt;strong&gt;must&lt;/strong&gt; be consumed, either by calling &lt;code&gt;response.read()&lt;/code&gt; whenever there is a &lt;code&gt;'readable'&lt;/code&gt; event, or by adding a &lt;code&gt;'data'&lt;/code&gt; handler, or by calling the &lt;code&gt;.resume()&lt;/code&gt; method. Until the data is consumed, the &lt;code&gt;'end'&lt;/code&gt; event will not fire. Also, until the data is read it will consume memory that can eventually lead to a 'process out of memory' error.</source>
          <target state="translated">如果未添加&lt;a href=&quot;#http_event_response&quot;&gt; &lt;code&gt;'response'&lt;/code&gt; &lt;/a&gt;处理程序，则响应将被完全丢弃。但是，如果添加了&lt;a href=&quot;#http_event_response&quot;&gt; &lt;code&gt;'response'&lt;/code&gt; &lt;/a&gt;事件处理程序，则&lt;strong&gt;必须&lt;/strong&gt;消耗响应对象中的数据，方法是在发生 &lt;code&gt;'readable'&lt;/code&gt; 事件时调用 &lt;code&gt;response.read()&lt;/code&gt; ，或者添加 &lt;code&gt;'data'&lt;/code&gt; 处理程序，或者通过调用 &lt;code&gt;.resume()&lt;/code&gt; 方法。在使用完数据之前，不会触发 &lt;code&gt;'end'&lt;/code&gt; 事件。同样，在读取数据之前，它将消耗内存，最终可能导致&amp;ldquo;进程内存不足&amp;rdquo;错误。</target>
        </trans-unit>
        <trans-unit id="f0d64c66f5a93c746c93ae653644f31d6a732c37" translate="yes" xml:space="preserve">
          <source>If no &lt;code&gt;'timeout'&lt;/code&gt; listener is added to the request, the response, or the server, then &lt;a href=&quot;#http2_class_http2stream&quot;&gt;&lt;code&gt;Http2Stream&lt;/code&gt;&lt;/a&gt;s are destroyed when they time out. If a handler is assigned to the request, the response, or the server's &lt;code&gt;'timeout'&lt;/code&gt; events, timed out sockets must be handled explicitly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db48c4caed0a332d402ecbd0b488c664a849a378" translate="yes" xml:space="preserve">
          <source>If no &lt;code&gt;'timeout'&lt;/code&gt; listener is added to the request, the response, or the server, then &lt;a href=&quot;http2&quot;&gt;&lt;code&gt;Http2Stream&lt;/code&gt;&lt;/a&gt;s are destroyed when they time out. If a handler is assigned to the request, the response, or the server's &lt;code&gt;'timeout'&lt;/code&gt; events, timed out sockets must be handled explicitly.</source>
          <target state="translated">如果没有在请求，响应或服务器中添加 &lt;code&gt;'timeout'&lt;/code&gt; 侦听器，则&lt;a href=&quot;http2&quot;&gt; &lt;code&gt;Http2Stream&lt;/code&gt; 超时&lt;/a&gt;时将被销毁。如果将处理程序分配给请求，响应或服务器的 &lt;code&gt;'timeout'&lt;/code&gt; 事件，则必须显式处理超时的套接字。</target>
        </trans-unit>
        <trans-unit id="9dec6a027c28bdbcb29abb4bffcb70b1c450217e" translate="yes" xml:space="preserve">
          <source>If no &lt;code&gt;'timeout'&lt;/code&gt; listener is added to the request, the response, or the server, then sockets are destroyed when they time out. If a handler is assigned to the request, the response, or the server's &lt;code&gt;'timeout'&lt;/code&gt; events, timed out sockets must be handled explicitly.</source>
          <target state="translated">如果没有在请求，响应或服务器中添加 &lt;code&gt;'timeout'&lt;/code&gt; 侦听器，则套接字在超时时将被销毁。如果将处理程序分配给请求，响应或服务器的 &lt;code&gt;'timeout'&lt;/code&gt; 事件，则必须显式处理超时的套接字。</target>
        </trans-unit>
        <trans-unit id="e3355f8e5210700f25827723bdd2c6be50b786d0" translate="yes" xml:space="preserve">
          <source>If no &lt;code&gt;callback&lt;/code&gt; function is provided and the message cannot be sent, an &lt;code&gt;'error'&lt;/code&gt; event will be emitted by the &lt;a href=&quot;#child_process_child_process&quot;&gt;&lt;code&gt;ChildProcess&lt;/code&gt;&lt;/a&gt; object. This can happen, for instance, when the child process has already exited.</source>
          <target state="translated">如果没有提供 &lt;code&gt;callback&lt;/code&gt; 函数并且无法发送消息，则&lt;a href=&quot;#child_process_child_process&quot;&gt; &lt;code&gt;ChildProcess&lt;/code&gt; &lt;/a&gt;对象将发出 &lt;code&gt;'error'&lt;/code&gt; 事件。例如，当子进程已经退出时，可能会发生这种情况。</target>
        </trans-unit>
        <trans-unit id="42ea7a606cf8671c22ba56a6c0d8af64a399a3eb" translate="yes" xml:space="preserve">
          <source>If no &lt;code&gt;path&lt;/code&gt; segments are passed, &lt;code&gt;path.resolve()&lt;/code&gt; will return the absolute path of the current working directory.</source>
          <target state="translated">如果没有传递任何 &lt;code&gt;path&lt;/code&gt; 段，则 &lt;code&gt;path.resolve()&lt;/code&gt; 将返回当前工作目录的绝对路径。</target>
        </trans-unit>
        <trans-unit id="e9c2de4f19bb732c3f0d152de8a5b8d7d4bffebf" translate="yes" xml:space="preserve">
          <source>If no encoding is specified, then the raw buffer is returned.</source>
          <target state="translated">如果没有指定编码,则返回原始缓冲区。</target>
        </trans-unit>
        <trans-unit id="588b09130834e51d612150950f7d586519ce31b1" translate="yes" xml:space="preserve">
          <source>If one or more &lt;code&gt;filehandle.read()&lt;/code&gt; calls are made on a file handle and then a &lt;code&gt;filehandle.readFile()&lt;/code&gt; call is made, the data will be read from the current position till the end of the file. It doesn't always read from the beginning of the file.</source>
          <target state="translated">如果在文件句柄上进行了一个或多个 &lt;code&gt;filehandle.read()&lt;/code&gt; 调用，然后进行了 &lt;code&gt;filehandle.readFile()&lt;/code&gt; 调用，则将从当前位置读取数据，直到文件末尾。它并不总是从文件的开头读取。</target>
        </trans-unit>
        <trans-unit id="8a4cdac4387721b7c6d9782075b4c0d38991bb7d" translate="yes" xml:space="preserve">
          <source>If one or more &lt;code&gt;filehandle.write()&lt;/code&gt; calls are made on a file handle and then a &lt;code&gt;filehandle.writeFile()&lt;/code&gt; call is made, the data will be written from the current position till the end of the file. It doesn't always write from the beginning of the file.</source>
          <target state="translated">如果在文件句柄上进行了一个或多个 &lt;code&gt;filehandle.write()&lt;/code&gt; 调用，然后进行了 &lt;code&gt;filehandle.writeFile()&lt;/code&gt; 调用，则数据将从当前位置写入，直到文件末尾。它并不总是从文件的开头写入。</target>
        </trans-unit>
        <trans-unit id="4e451e4e3dec3d1e916f8a3d903d896ecce3e5cb" translate="yes" xml:space="preserve">
          <source>If one or more &lt;code&gt;label&lt;/code&gt;s are provided, those are printed first without the additional indentation.</source>
          <target state="translated">如果提供了一个或多个 &lt;code&gt;label&lt;/code&gt; ，那么将先打印这些标签，而无需附加压痕。</target>
        </trans-unit>
        <trans-unit id="fafad16c3d8a65bb35e08a7835ca2753a62ace44" translate="yes" xml:space="preserve">
          <source>If only one argument is passed to &lt;code&gt;util.format()&lt;/code&gt;, it is returned as it is without any formatting:</source>
          <target state="translated">如果仅将一个参数传递给 &lt;code&gt;util.format()&lt;/code&gt; ，则将其按原样返回，而不进行任何格式化：</target>
        </trans-unit>
        <trans-unit id="956a9f098caea90b182e2b8e76db03b7380ae6a1" translate="yes" xml:space="preserve">
          <source>If possible, contain all state within an instantiated object. JavaScript&amp;rsquo;s &lt;code&gt;Date&lt;/code&gt;, for example, needs to be instantiated to contain state; if it were a package, it would be used like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65eb9aab5f2c0420b47aca35dbc4e5131b16b281" translate="yes" xml:space="preserve">
          <source>If present, &lt;code&gt;error.address&lt;/code&gt; is a string describing the address to which a network connection failed.</source>
          <target state="translated">如果存在，则 &lt;code&gt;error.address&lt;/code&gt; 是一个字符串，描述网络连接失败的地址。</target>
        </trans-unit>
        <trans-unit id="09cdb4b5fc901c93bd81eddf6470508e4d3ad573" translate="yes" xml:space="preserve">
          <source>If present, &lt;code&gt;error.dest&lt;/code&gt; is the file path destination when reporting a file system error.</source>
          <target state="translated">如果存在，则 &lt;code&gt;error.dest&lt;/code&gt; 是报告文件系统错误时的文件路径目标。</target>
        </trans-unit>
        <trans-unit id="b4d9083b9c76cf66522d9b360b5cbacf03ff7e17" translate="yes" xml:space="preserve">
          <source>If present, &lt;code&gt;error.info&lt;/code&gt; is an object with details about the error condition.</source>
          <target state="translated">如果存在， &lt;code&gt;error.info&lt;/code&gt; 是一个对象，其中包含有关错误情况的详细信息。</target>
        </trans-unit>
        <trans-unit id="b515af4cb1d6427479831ff8c31be0200be62954" translate="yes" xml:space="preserve">
          <source>If present, &lt;code&gt;error.path&lt;/code&gt; is a string containing a relevant invalid pathname.</source>
          <target state="translated">如果存在，则 &lt;code&gt;error.path&lt;/code&gt; 是包含相关无效路径名的字符串。</target>
        </trans-unit>
        <trans-unit id="8f1124d661572f078414a138f0bd00a3bb201f75" translate="yes" xml:space="preserve">
          <source>If present, &lt;code&gt;error.port&lt;/code&gt; is the network connection port that is not available.</source>
          <target state="translated">如果存在，则 &lt;code&gt;error.port&lt;/code&gt; 是不可用的网络连接端口。</target>
        </trans-unit>
        <trans-unit id="4028035ae455f9d1c611d0d9611d12c32c7539df" translate="yes" xml:space="preserve">
          <source>If present, the copy operation will attempt to create a copy-on-write reflink. If the underlying platform does not support copy-on-write, then a fallback copy mechanism is used.</source>
          <target state="translated">如果存在,复制操作将尝试创建一个写上复制的再链接。如果底层平台不支持write-on-copy,则使用回退复制机制。</target>
        </trans-unit>
        <trans-unit id="4565bcf227554bcec4fb67361b463bd0162b40c7" translate="yes" xml:space="preserve">
          <source>If present, the copy operation will attempt to create a copy-on-write reflink. If the underlying platform does not support copy-on-write, then the operation will fail with an error.</source>
          <target state="translated">如果存在,复制操作将尝试创建一个写上复制的再链接。如果底层平台不支持write-on-copy,那么操作就会出错失败。</target>
        </trans-unit>
        <trans-unit id="111d49a62014241bc6035d869eb1ed1d88540442" translate="yes" xml:space="preserve">
          <source>If present, the copy operation will fail with an error if the destination path already exists.</source>
          <target state="translated">如果存在,如果目标路径已经存在,复制操作将以错误的方式失败。</target>
        </trans-unit>
        <trans-unit id="873d68575189af0d0837643c7a4f9fafeebaade7" translate="yes" xml:space="preserve">
          <source>If provided, the &lt;code&gt;payload&lt;/code&gt; must be a &lt;code&gt;Buffer&lt;/code&gt;, &lt;code&gt;TypedArray&lt;/code&gt;, or &lt;code&gt;DataView&lt;/code&gt; containing 8 bytes of data that will be transmitted with the &lt;code&gt;PING&lt;/code&gt; and returned with the ping acknowledgment.</source>
          <target state="translated">如果提供，则 &lt;code&gt;payload&lt;/code&gt; 必须是 &lt;code&gt;Buffer&lt;/code&gt; ， &lt;code&gt;TypedArray&lt;/code&gt; 或 &lt;code&gt;DataView&lt;/code&gt; ,其中包含8个字节的数据，这些数据将与 &lt;code&gt;PING&lt;/code&gt; 一起发送并与ping确认一起返回。</target>
        </trans-unit>
        <trans-unit id="56aab6cb73797e51a41cd25d82a216acf60351b7" translate="yes" xml:space="preserve">
          <source>If represented as a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string&amp;gt;&lt;/a&gt;, the value must be one of:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d2174c43999d7fe2abf0da31917df9e36a4e71e" translate="yes" xml:space="preserve">
          <source>If represented as an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object&quot;&gt;&amp;lt;Object&amp;gt;&lt;/a&gt;, the object must have a &lt;code&gt;name&lt;/code&gt; property whose value is one of the above listed values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0411c641c6a25de72690be397bf9163af37a5e95" translate="yes" xml:space="preserve">
          <source>If returned as a string, no decoding of the query string is performed. If returned as an object, both keys and values are decoded.</source>
          <target state="translated">如果以字符串形式返回,则不对查询字符串进行解码。如果以对象形式返回,则对键和值都进行解码。</target>
        </trans-unit>
        <trans-unit id="30f5a3d64923e554e03e9538c444b7eb6e64f821" translate="yes" xml:space="preserve">
          <source>If set to &lt;code&gt;0&lt;/code&gt; then V8 will choose an appropriate size of the thread pool based on the number of online processors.</source>
          <target state="translated">如果设置为 &lt;code&gt;0&lt;/code&gt; ,则V8将根据联机处理器的数量选择适当大小的线程池。</target>
        </trans-unit>
        <trans-unit id="2dbbdc2030105ff8389b56a9a53a36b9214cf5d0" translate="yes" xml:space="preserve">
          <source>If set to a non-number value, or set to a negative number, stack traces will not capture any frames.</source>
          <target state="translated">如果设置为非数值,或设置为负数,堆栈跟踪将不会捕获任何帧。</target>
        </trans-unit>
        <trans-unit id="e2310dc593206400dba7fbfc90d82faac7c44fa3" translate="yes" xml:space="preserve">
          <source>If specified, &lt;code&gt;error&lt;/code&gt; can be a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes&quot;&gt;&lt;code&gt;Class&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions&quot;&gt;&lt;code&gt;RegExp&lt;/code&gt;&lt;/a&gt; or a validation function. See &lt;a href=&quot;#assert_assert_throws_fn_error_message&quot;&gt;&lt;code&gt;assert.throws()&lt;/code&gt;&lt;/a&gt; for more details.</source>
          <target state="translated">如果指定， &lt;code&gt;error&lt;/code&gt; 可以是&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes&quot;&gt; &lt;code&gt;Class&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions&quot;&gt; &lt;code&gt;RegExp&lt;/code&gt; &lt;/a&gt;或验证函数。有关更多详细信息，请参见&lt;a href=&quot;#assert_assert_throws_fn_error_message&quot;&gt; &lt;code&gt;assert.throws()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8bb4684775cedbd549e8f47ef9575c77e254eab8" translate="yes" xml:space="preserve">
          <source>If specified, &lt;code&gt;error&lt;/code&gt; can be a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes&quot;&gt;&lt;code&gt;Class&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions&quot;&gt;&lt;code&gt;RegExp&lt;/code&gt;&lt;/a&gt;, a validation function, a validation object where each property will be tested for strict deep equality, or an instance of error where each property will be tested for strict deep equality including the non-enumerable &lt;code&gt;message&lt;/code&gt; and &lt;code&gt;name&lt;/code&gt; properties. When using an object, it is also possible to use a regular expression, when validating against a string property. See below for examples.</source>
          <target state="translated">如果指定，则 &lt;code&gt;error&lt;/code&gt; 可以是&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes&quot;&gt; &lt;code&gt;Class&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions&quot;&gt; &lt;code&gt;RegExp&lt;/code&gt; &lt;/a&gt;，验证函数，将对每个属性进行严格的深层相等测试的验证对象，或者将对每个属性进行严格的深层相等进行测试的错误实例（包括不可枚举的 &lt;code&gt;message&lt;/code&gt; 和 &lt;code&gt;name&lt;/code&gt; 属性。使用对象时，还可以在对字符串属性进行验证时使用正则表达式。请参阅下面的示例。</target>
        </trans-unit>
        <trans-unit id="ca540d2d12b0a2843f6e0a3a615df4b350d599e5" translate="yes" xml:space="preserve">
          <source>If specified, &lt;code&gt;error&lt;/code&gt; can be a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes&quot;&gt;&lt;code&gt;Class&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions&quot;&gt;&lt;code&gt;RegExp&lt;/code&gt;&lt;/a&gt;, a validation function, an object where each property will be tested for, or an instance of error where each property will be tested for including the non-enumerable &lt;code&gt;message&lt;/code&gt; and &lt;code&gt;name&lt;/code&gt; properties.</source>
          <target state="translated">如果指定了 &lt;code&gt;error&lt;/code&gt; ，则错误可以是&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes&quot;&gt; &lt;code&gt;Class&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions&quot;&gt; &lt;code&gt;RegExp&lt;/code&gt; &lt;/a&gt;，验证函数，将测试每个属性的对象，或者错误的实例，其中将对每个属性进行测试以包括不可枚举的 &lt;code&gt;message&lt;/code&gt; 和 &lt;code&gt;name&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="e483ef4da139406d2cb5576248f8f8dab3da0123" translate="yes" xml:space="preserve">
          <source>If specified, &lt;code&gt;message&lt;/code&gt; will be appended to the message provided by the &lt;code&gt;AssertionError&lt;/code&gt; if the &lt;code&gt;fn&lt;/code&gt; call fails to throw or in case the error validation fails.</source>
          <target state="translated">如果指定，则在 &lt;code&gt;fn&lt;/code&gt; 调用失败或错误验证失败的情况下，会将 &lt;code&gt;message&lt;/code&gt; 附加到 &lt;code&gt;AssertionError&lt;/code&gt; 提供的消息上。</target>
        </trans-unit>
        <trans-unit id="f20cbcc956f20e1dcb21c6b278a74288a4a44ed7" translate="yes" xml:space="preserve">
          <source>If specified, &lt;code&gt;message&lt;/code&gt; will be the message provided by the &lt;a href=&quot;#assert_class_assert_assertionerror&quot;&gt;&lt;code&gt;AssertionError&lt;/code&gt;&lt;/a&gt; if the &lt;code&gt;asyncFn&lt;/code&gt; fails to reject.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40ef9cb0ba617de6594c16374723716ca8364dd8" translate="yes" xml:space="preserve">
          <source>If specified, &lt;code&gt;message&lt;/code&gt; will be the message provided by the &lt;code&gt;AssertionError&lt;/code&gt; if the &lt;code&gt;asyncFn&lt;/code&gt; fails to reject.</source>
          <target state="translated">如果指定，则 &lt;code&gt;message&lt;/code&gt; 将是如果 &lt;code&gt;asyncFn&lt;/code&gt; 拒绝失败，则由 &lt;code&gt;AssertionError&lt;/code&gt; 提供的消息。</target>
        </trans-unit>
        <trans-unit id="25e438c74edb89edb96e2a5ee192d899ce1fcd06" translate="yes" xml:space="preserve">
          <source>If specified, the &lt;code&gt;callback&lt;/code&gt; function is registered as a handler for the &lt;code&gt;'close'&lt;/code&gt; event.</source>
          <target state="translated">如果指定，则将 &lt;code&gt;callback&lt;/code&gt; 函数注册为 &lt;code&gt;'close'&lt;/code&gt; 事件的处理程序。</target>
        </trans-unit>
        <trans-unit id="1bce9baa7c1873a9e07cf0b4362eae06b10124e8" translate="yes" xml:space="preserve">
          <source>If specifying a host, make sure that either:</source>
          <target state="translated">如果指定主机,请确保其中之一。</target>
        </trans-unit>
        <trans-unit id="c4567e4aed2ed0a0fa93fe7a5c794ed41d3147b1" translate="yes" xml:space="preserve">
          <source>If still valid, this API returns the &lt;code&gt;napi_value&lt;/code&gt; representing the JavaScript &lt;code&gt;Object&lt;/code&gt; associated with the &lt;code&gt;napi_ref&lt;/code&gt;. Otherwise, result will be &lt;code&gt;NULL&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10e41fd1ae4bbc18c802e9daabd5fdc153bddbd3" translate="yes" xml:space="preserve">
          <source>If still valid, this API returns the &lt;code&gt;napi_value&lt;/code&gt; representing the JavaScript &lt;code&gt;Object&lt;/code&gt; associated with the &lt;code&gt;napi_ref&lt;/code&gt;. Otherwise, result will be NULL.</source>
          <target state="translated">如果仍然无效，则此API返回 &lt;code&gt;napi_value&lt;/code&gt; 代表的JavaScript &lt;code&gt;Object&lt;/code&gt; 与相关 &lt;code&gt;napi_ref&lt;/code&gt; 。否则，结果将为NULL。</target>
        </trans-unit>
        <trans-unit id="32cb3625f10ae48bf6481f39f73a30285a56adfb" translate="yes" xml:space="preserve">
          <source>If such a function is set, the &lt;a href=&quot;#process_event_uncaughtexception&quot;&gt;&lt;code&gt;'uncaughtException'&lt;/code&gt;&lt;/a&gt; event will not be emitted. If &lt;code&gt;--abort-on-uncaught-exception&lt;/code&gt; was passed from the command line or set through &lt;a href=&quot;v8#v8_v8_setflagsfromstring_flags&quot;&gt;&lt;code&gt;v8.setFlagsFromString()&lt;/code&gt;&lt;/a&gt;, the process will not abort.</source>
          <target state="translated">如果设置了此类功能，则不会发出&lt;a href=&quot;#process_event_uncaughtexception&quot;&gt; &lt;code&gt;'uncaughtException'&lt;/code&gt; &lt;/a&gt;事件。如果 &lt;code&gt;--abort-on-uncaught-exception&lt;/code&gt; 是从命令行传递的或通过&lt;a href=&quot;v8#v8_v8_setflagsfromstring_flags&quot;&gt; &lt;code&gt;v8.setFlagsFromString()&lt;/code&gt; &lt;/a&gt;设置的，则该过程不会中止。</target>
        </trans-unit>
        <trans-unit id="379ffa8a90ad7ebcb06b079cf6a7ba8d57c16f69" translate="yes" xml:space="preserve">
          <source>If such a function is set, the &lt;a href=&quot;#process_event_uncaughtexception&quot;&gt;&lt;code&gt;'uncaughtException'&lt;/code&gt;&lt;/a&gt; event will not be emitted. If &lt;code&gt;--abort-on-uncaught-exception&lt;/code&gt; was passed from the command line or set through &lt;a href=&quot;v8#v8_v8_setflagsfromstring_flags&quot;&gt;&lt;code&gt;v8.setFlagsFromString()&lt;/code&gt;&lt;/a&gt;, the process will not abort. Actions configured to take place on exceptions such as report generations will be affected too</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83bf9ca2a5da8cc7d9983f311f9ed193864dab2c" translate="yes" xml:space="preserve">
          <source>If support for older versions is required but a worker object is not required, it is possible to work around the discrepancy by checking the number of arguments:</source>
          <target state="translated">如果需要支持旧版本,但不需要worker对象,可以通过检查参数数量来解决差异。</target>
        </trans-unit>
        <trans-unit id="6fb44ec0e8892750cd1ebc11186c5c22676779e1" translate="yes" xml:space="preserve">
          <source>If that string is invalid but it begins with a number, the leading number is assigned to &lt;code&gt;port&lt;/code&gt;. If the number lies outside the range denoted above, it is ignored.</source>
          <target state="translated">如果该字符串无效，但以数字开头，则将前导编号分配给 &lt;code&gt;port&lt;/code&gt; 。如果数字超出上述范围，则将其忽略。</target>
        </trans-unit>
        <trans-unit id="30817db3d7e89f5a81f3f1220a7022495364630f" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;#cli_openssl_config_file&quot;&gt;&lt;code&gt;--openssl-config&lt;/code&gt;&lt;/a&gt; command line option is used, the environment variable is ignored.</source>
          <target state="translated">如果使用&lt;a href=&quot;#cli_openssl_config_file&quot;&gt; &lt;code&gt;--openssl-config&lt;/code&gt; &lt;/a&gt;命令行选项，则将忽略环境变量。</target>
        </trans-unit>
        <trans-unit id="ae3033e472b66c01ecfaa5bbb90b707ebf2914c1" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;#cli_openssl_config_file&quot;&gt;&lt;code&gt;--openssl-config&lt;/code&gt;&lt;/a&gt; command-line option is used, the environment variable is ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="224cfce345ee060f6c60aaa0a95c75b09e0194c4" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;#stream_writable_cork&quot;&gt;&lt;code&gt;writable.cork()&lt;/code&gt;&lt;/a&gt; method is called multiple times on a stream, the same number of calls to &lt;code&gt;writable.uncork()&lt;/code&gt; must be called to flush the buffered data.</source>
          <target state="translated">如果在流上多次调用&lt;a href=&quot;#stream_writable_cork&quot;&gt; &lt;code&gt;writable.cork()&lt;/code&gt; &lt;/a&gt;方法，则必须调用相同数量的对 &lt;code&gt;writable.uncork()&lt;/code&gt; 的调用来刷新缓冲的数据。</target>
        </trans-unit>
        <trans-unit id="6df3d69b18c57ef7ae8296df201d5872052ab5c2" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;webcrypto#webcrypto_class_cryptokey&quot;&gt;&amp;lt;CryptoKey&amp;gt;&lt;/a&gt; is not extractable, the returned promise will reject.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9c9afde2fa7ee641e5638e52372934349eec5bc" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;&quot;.&quot;&lt;/code&gt; export has a fallback array or string value, then the &lt;a href=&quot;#packages_exports&quot;&gt;&lt;code&gt;&quot;exports&quot;&lt;/code&gt;&lt;/a&gt; field can be set to this value directly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebcabc5bc51b94600ae9120e53323e1fc1be1f84" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;&quot;.&quot;&lt;/code&gt; export is the only export, the &lt;a href=&quot;#packages_exports&quot;&gt;&lt;code&gt;&quot;exports&quot;&lt;/code&gt;&lt;/a&gt; field provides sugar for this case being the direct &lt;a href=&quot;#packages_exports&quot;&gt;&lt;code&gt;&quot;exports&quot;&lt;/code&gt;&lt;/a&gt; field value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a5b3f12b63f281645322fde5f6167806a56f1ee" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;'frameError'&lt;/code&gt; event is associated with a stream, the stream will be closed and destroyed immediately following the &lt;code&gt;'frameError'&lt;/code&gt; event. If the event is not associated with a stream, the &lt;code&gt;Http2Session&lt;/code&gt; will be shut down immediately following the &lt;code&gt;'frameError'&lt;/code&gt; event.</source>
          <target state="translated">如果 &lt;code&gt;'frameError'&lt;/code&gt; 事件与流相关联，则该流将在 &lt;code&gt;'frameError'&lt;/code&gt; 事件后立即关闭并销毁。如果事件不与流相关的 &lt;code&gt;Http2Session&lt;/code&gt; 将被立即关闭以下 &lt;code&gt;'frameError'&lt;/code&gt; 事件。</target>
        </trans-unit>
        <trans-unit id="61283ecdf185d229d3b74d7275c9a41649b6719b" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;'session'&lt;/code&gt; event handler throws an error, or if it returns a &lt;code&gt;Promise&lt;/code&gt; that is rejected, the error will be handled by destroying the &lt;code&gt;QuicServerSession&lt;/code&gt; automatically and emitting a &lt;code&gt;'sessionError'&lt;/code&gt; event on the &lt;code&gt;QuicSocket&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc9d357aaf801d9f4a8827e4487d8d5454ed7da2" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;--no-deprecation&lt;/code&gt; command-line flag is used, the deprecation warning is suppressed.</source>
          <target state="translated">如果使用 &lt;code&gt;--no-deprecation&lt;/code&gt; 命令行标志，那么将禁止使用过时警告。</target>
        </trans-unit>
        <trans-unit id="006f0ef98faed2225296f7b925e4b65b6d84cc50" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;--throw-deprecation&lt;/code&gt; command line flag is set, or the &lt;code&gt;process.throwDeprecation&lt;/code&gt; property is set to &lt;code&gt;true&lt;/code&gt;, then an exception will be thrown when the deprecated function is called.</source>
          <target state="translated">如果设置了 &lt;code&gt;--throw-deprecation&lt;/code&gt; 命令行标志，或者 &lt;code&gt;process.throwDeprecation&lt;/code&gt; 属性设置为 &lt;code&gt;true&lt;/code&gt; ，则在调用不推荐使用的函数时将引发异常。</target>
        </trans-unit>
        <trans-unit id="38489b308fe17ec9f58d0e620b07ded24fcfd3c1" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;--throw-deprecation&lt;/code&gt; command-line flag is set, or the &lt;code&gt;process.throwDeprecation&lt;/code&gt; property is set to &lt;code&gt;true&lt;/code&gt;, then an exception will be thrown when the deprecated function is called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b278313ccedc83446c93058abbe7d110d43e12d4" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;--throw-deprecation&lt;/code&gt; command-line flag is used, the deprecation warning is thrown as an exception rather than being emitted as an event.</source>
          <target state="translated">如果使用了 &lt;code&gt;--throw-deprecation&lt;/code&gt; 命令行标志，则弃用警告将作为异常抛出，而不是作为事件发出。</target>
        </trans-unit>
        <trans-unit id="1706a10a4933ed7aef53391f01f86b49fd1f1a47" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;--trace-deprecation&lt;/code&gt; command-line flag is used, the deprecation warning is printed to &lt;code&gt;stderr&lt;/code&gt; along with the full stack trace.</source>
          <target state="translated">如果使用了 &lt;code&gt;--trace-deprecation&lt;/code&gt; 命令行标志，则已弃用警告将与完整堆栈跟踪一起 &lt;code&gt;stderr&lt;/code&gt; 到stderr。</target>
        </trans-unit>
        <trans-unit id="9e05861e85bd6ab01a00f4754a98487ae45fddc5" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;--trace-deprecation&lt;/code&gt; or &lt;code&gt;--trace-warnings&lt;/code&gt; command line flags are set, or the &lt;code&gt;process.traceDeprecation&lt;/code&gt; property is set to &lt;code&gt;true&lt;/code&gt;, a warning and a stack trace are printed to &lt;code&gt;stderr&lt;/code&gt; the first time the deprecated function is called.</source>
          <target state="translated">如果设置了 &lt;code&gt;--trace-deprecation&lt;/code&gt; 或 &lt;code&gt;--trace-warnings&lt;/code&gt; 命令行标志，或者 &lt;code&gt;process.traceDeprecation&lt;/code&gt; 属性设置为 &lt;code&gt;true&lt;/code&gt; ，则第一次调用不推荐使用的函数时，将在 &lt;code&gt;stderr&lt;/code&gt; 中显示警告和堆栈跟踪。</target>
        </trans-unit>
        <trans-unit id="417298c3e592091e16cca459b04186f92ee8383e" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;--trace-deprecation&lt;/code&gt; or &lt;code&gt;--trace-warnings&lt;/code&gt; command-line flags are set, or the &lt;code&gt;process.traceDeprecation&lt;/code&gt; property is set to &lt;code&gt;true&lt;/code&gt;, a warning and a stack trace are printed to &lt;code&gt;stderr&lt;/code&gt; the first time the deprecated function is called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f1727f3bb0330be161d5fae1f1aeea291145a6d" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;Http2Session&lt;/code&gt; is connected to a &lt;code&gt;TLSSocket&lt;/code&gt;, the &lt;code&gt;originSet&lt;/code&gt; property will return an &lt;code&gt;Array&lt;/code&gt; of origins for which the &lt;code&gt;Http2Session&lt;/code&gt; may be considered authoritative.</source>
          <target state="translated">如果 &lt;code&gt;Http2Session&lt;/code&gt; 连接到 &lt;code&gt;TLSSocket&lt;/code&gt; ，则 &lt;code&gt;originSet&lt;/code&gt; 属性将返回 &lt;code&gt;Http2Session&lt;/code&gt; 可能具有权威性的起源 &lt;code&gt;Array&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c0455b2b9b3fae766e068922a9250208e4c2af45" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;NODE_PATH&lt;/code&gt; environment variable is set to a colon-delimited list of absolute paths, then Node.js will search those paths for modules if they are not found elsewhere.</source>
          <target state="translated">如果将 &lt;code&gt;NODE_PATH&lt;/code&gt; 环境变量设置为以冒号分隔的绝对路径列表，则Node.js将在那些路径中搜索模块（如果未在其他位置找到）。</target>
        </trans-unit>
        <trans-unit id="7dc67d61ad9cef9eaca701d02f9bb2c663b10ff3" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;QuicEndpoint&lt;/code&gt; has been destroyed, or is destroyed while the &lt;code&gt;Promise&lt;/code&gt; is pending, the &lt;code&gt;Promise&lt;/code&gt; will be rejected with an &lt;code&gt;ERR_INVALID_STATE&lt;/code&gt; error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e79ad3d0a8607f13e2c7d77cdcf20954aa878cf" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;QuicEndpoint&lt;/code&gt; is not bound, &lt;code&gt;quicendpoint.address&lt;/code&gt; is an empty object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="700474149520ec279c7f2339f334a3fbdcf3ac10" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;buffer&lt;/code&gt; argument is provided, one final call to &lt;code&gt;stringDecoder.write()&lt;/code&gt; is performed before returning the remaining input.</source>
          <target state="translated">如果提供了 &lt;code&gt;buffer&lt;/code&gt; 参数，则在返回其余输入之前， &lt;code&gt;stringDecoder.write()&lt;/code&gt; 进行最后一次调用。</target>
        </trans-unit>
        <trans-unit id="39a149317204d260dcf57a300bd48c787fb097f3" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;buffer&lt;/code&gt; argument is provided, one final call to &lt;code&gt;stringDecoder.write()&lt;/code&gt; is performed before returning the remaining input. After &lt;code&gt;end()&lt;/code&gt; is called, the &lt;code&gt;stringDecoder&lt;/code&gt; object can be reused for new input.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b698c9ff7e5dfbf0331a5b293d26fbbc739efc5a" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;ca&lt;/code&gt; option is not given, then Node.js will default to using &lt;a href=&quot;https://hg.mozilla.org/mozilla-central/raw-file/tip/security/nss/lib/ckfw/builtins/certdata.txt&quot;&gt;Mozilla's publicly trusted list of CAs&lt;/a&gt;.</source>
          <target state="translated">如果未指定 &lt;code&gt;ca&lt;/code&gt; 选项，则Node.js将默认使用&lt;a href=&quot;https://hg.mozilla.org/mozilla-central/raw-file/tip/security/nss/lib/ckfw/builtins/certdata.txt&quot;&gt;Mozilla的CA的公共信任列表&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ac092c034da270f1131edac11ccf7582acc156f5" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;callback&lt;/code&gt; function is not provided, an error will be thrown.</source>
          <target state="translated">如果未提供 &lt;code&gt;callback&lt;/code&gt; 函数，将引发错误。</target>
        </trans-unit>
        <trans-unit id="a9daebaf2c04786e5b28ab1e89a86e818076b4d4" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;callback&lt;/code&gt; function is not provided, the random bytes are generated synchronously and returned as a &lt;a href=&quot;buffer&quot;&gt;&lt;code&gt;Buffer&lt;/code&gt;&lt;/a&gt;. An error will be thrown if there is a problem generating the bytes.</source>
          <target state="translated">如果未提供 &lt;code&gt;callback&lt;/code&gt; 函数，则随机字节将同步生成并作为&lt;a href=&quot;buffer&quot;&gt; &lt;code&gt;Buffer&lt;/code&gt; &lt;/a&gt;返回。如果生成字节有问题，将引发错误。</target>
        </trans-unit>
        <trans-unit id="a2b2aa24c9c15a7927b77b32a5cf5894f1a5ae6a" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;callback&lt;/code&gt; function is not provided, the random integer is generated synchronously.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fec34b8e1e977f8ce019a960434cc75d2f42505d" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;decodeStrings&lt;/code&gt; property is explicitly set to &lt;code&gt;false&lt;/code&gt; in the constructor options, then &lt;code&gt;chunk&lt;/code&gt; will remain the same object that is passed to &lt;code&gt;.write()&lt;/code&gt;, and may be a string rather than a &lt;code&gt;Buffer&lt;/code&gt;. This is to support implementations that have an optimized handling for certain string data encodings. In that case, the &lt;code&gt;encoding&lt;/code&gt; argument will indicate the character encoding of the string. Otherwise, the &lt;code&gt;encoding&lt;/code&gt; argument can be safely ignored.</source>
          <target state="translated">如果在构造函数选项中将 &lt;code&gt;decodeStrings&lt;/code&gt; 属性显式设置为 &lt;code&gt;false&lt;/code&gt; ，则 &lt;code&gt;chunk&lt;/code&gt; 将保持传递给 &lt;code&gt;.write()&lt;/code&gt; 的同一对象，并且可能是字符串而不是 &lt;code&gt;Buffer&lt;/code&gt; 。这是为了支持对某些字符串数据编码进行优化处理的实现。在这种情况下， &lt;code&gt;encoding&lt;/code&gt; 参数将指示字符串的字符编码。否则，可以安全地忽略 &lt;code&gt;encoding&lt;/code&gt; 参数。</target>
        </trans-unit>
        <trans-unit id="1295a8b2430b9ea40a28497169df9f00a2e30e2f" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;destination&lt;/code&gt; is not specified, then &lt;em&gt;all&lt;/em&gt; pipes are detached.</source>
          <target state="translated">如果未指定 &lt;code&gt;destination&lt;/code&gt; ，则将分离&lt;em&gt;所有&lt;/em&gt;管道。</target>
        </trans-unit>
        <trans-unit id="f61354dd4c096ff86d2604bd1f201639b5280cce" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;destination&lt;/code&gt; is specified, but no pipe is set up for it, then the method does nothing.</source>
          <target state="translated">如果指定了 &lt;code&gt;destination&lt;/code&gt; ，但没有为其设置管道，则该方法将不执行任何操作。</target>
        </trans-unit>
        <trans-unit id="c9993188edbda0e084b782c4aa4a76c9d01b6aa7" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;encoding&lt;/code&gt; option is specified then this function returns a string. Otherwise it returns a buffer.</source>
          <target state="translated">如果指定了 &lt;code&gt;encoding&lt;/code&gt; 选项，则此函数返回一个字符串。否则，它将返回一个缓冲区。</target>
        </trans-unit>
        <trans-unit id="ff21d446a3ab3fe55f4acc6ff2c436094f676d4d" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;format&lt;/code&gt; argument is not a format string, the output string's formatting is no longer dependent on the type of the first argument. This change removes previously present quotes from strings that were being output when the first argument was not a string.</source>
          <target state="translated">如果 &lt;code&gt;format&lt;/code&gt; 参数不是格式字符串，则输出字符串的格式不再取决于第一个参数的类型。此更改将从第一个参数不是字符串时输出的字符串中删除以前存在的引号。</target>
        </trans-unit>
        <trans-unit id="b9e1b37b11483fa26d2a4ffd951d8693136223e7" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;fs.Stats&lt;/code&gt; object was obtained from &lt;a href=&quot;#fs_fs_lstat_path_options_callback&quot;&gt;&lt;code&gt;fs.lstat()&lt;/code&gt;&lt;/a&gt;, this method will always return &lt;code&gt;false&lt;/code&gt;. This is because &lt;a href=&quot;#fs_fs_lstat_path_options_callback&quot;&gt;&lt;code&gt;fs.lstat()&lt;/code&gt;&lt;/a&gt; returns information about a symbolic link itself and not the path it resolves to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d308fd83eda74dcf99237973ddacf4e7ec8a2f56" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;input&lt;/code&gt; stream was paused &lt;em&gt;before&lt;/em&gt; the &lt;code&gt;SIGTSTP&lt;/code&gt; request, this event will not be emitted.</source>
          <target state="translated">如果 &lt;code&gt;input&lt;/code&gt; 流在 &lt;code&gt;SIGTSTP&lt;/code&gt; 请求&lt;em&gt;之前&lt;/em&gt;被暂停，则不会发出此事件。</target>
        </trans-unit>
        <trans-unit id="30f38c1cd9e3b259bd034f504426ea5d58e45d76" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;inputEncoding&lt;/code&gt; is not provided, &lt;code&gt;key&lt;/code&gt; is expected to be a &lt;a href=&quot;buffer&quot;&gt;&lt;code&gt;Buffer&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;TypedArray&lt;/code&gt;, or &lt;code&gt;DataView&lt;/code&gt;.</source>
          <target state="translated">如果未提供 &lt;code&gt;inputEncoding&lt;/code&gt; ，则 &lt;code&gt;key&lt;/code&gt; 应为&lt;a href=&quot;buffer&quot;&gt; &lt;code&gt;Buffer&lt;/code&gt; &lt;/a&gt;， &lt;code&gt;TypedArray&lt;/code&gt; 或 &lt;code&gt;DataView&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9f18955efde58f4d26c872da376a7f9e3385d261" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;key&lt;/code&gt; option is an array, individual entries do not need a &lt;code&gt;passphrase&lt;/code&gt; property anymore. &lt;code&gt;Array&lt;/code&gt; entries can also just be &lt;code&gt;string&lt;/code&gt;s or &lt;code&gt;Buffer&lt;/code&gt;s now.</source>
          <target state="translated">如果 &lt;code&gt;key&lt;/code&gt; 选项是数组，则单个条目不再需要 &lt;code&gt;passphrase&lt;/code&gt; 属性。 &lt;code&gt;Array&lt;/code&gt; 条目也可以只是 &lt;code&gt;string&lt;/code&gt; 或 &lt;code&gt;Buffer&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5d7c9ccb6d11a43cf334112f22066ada11047f33" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;module.status&lt;/code&gt; is &lt;code&gt;'errored'&lt;/code&gt;, this property contains the exception thrown by the module during evaluation. If the status is anything else, accessing this property will result in a thrown exception.</source>
          <target state="translated">如果 &lt;code&gt;module.status&lt;/code&gt; 为 &lt;code&gt;'errored'&lt;/code&gt; ，则此属性包含模块在评估期间引发的异常。如果状态为其他，则访问此属性将导致引发异常。</target>
        </trans-unit>
        <trans-unit id="bf37dd1b51403923bcd466d830080d91ad10e133" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;napi_status&lt;/code&gt; returned by a function is &lt;code&gt;napi_ok&lt;/code&gt; then no exception is pending and no additional action is required. If the &lt;code&gt;napi_status&lt;/code&gt; returned is anything other than &lt;code&gt;napi_ok&lt;/code&gt; or &lt;code&gt;napi_pending_exception&lt;/code&gt;, in order to try to recover and continue instead of simply returning immediately, &lt;a href=&quot;#n_api_napi_is_exception_pending&quot;&gt;&lt;code&gt;napi_is_exception_pending&lt;/code&gt;&lt;/a&gt; must be called in order to determine if an exception is pending or not.</source>
          <target state="translated">如果 &lt;code&gt;napi_status&lt;/code&gt; 返回的napi_status是 &lt;code&gt;napi_ok&lt;/code&gt; ,则没有异常待处理，并且不需要其他操作。如果返回的 &lt;code&gt;napi_status&lt;/code&gt; 不是 &lt;code&gt;napi_ok&lt;/code&gt; 或 &lt;code&gt;napi_pending_exception&lt;/code&gt; 以外的其他东西，为了尝试恢复并继续而不是简单地立即返回，&lt;a href=&quot;#n_api_napi_is_exception_pending&quot;&gt; &lt;code&gt;napi_is_exception_pending&lt;/code&gt; &lt;/a&gt;必须调用napi_is_exception_pending以确定异常是否未决。</target>
        </trans-unit>
        <trans-unit id="f4e650377d72da10446c3017b0383db45d2e5bdb" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;once&lt;/code&gt; option is &lt;code&gt;true&lt;/code&gt;, the &lt;code&gt;listener&lt;/code&gt; is removed after the next time a &lt;code&gt;type&lt;/code&gt; event is dispatched.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edc8d76112ea7024d3371b71a0a23d16ae790953" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;package.json&lt;/code&gt;&lt;code&gt;&quot;type&quot;&lt;/code&gt; field is omitted, a &lt;code&gt;.js&lt;/code&gt; file in &lt;code&gt;&quot;main&quot;&lt;/code&gt; will be interpreted as CommonJS.</source>
          <target state="translated">如果省略 &lt;code&gt;package.json&lt;/code&gt; &lt;code&gt;&quot;type&quot;&lt;/code&gt; 字段，则 &lt;code&gt;&quot;main&quot;&lt;/code&gt; 的 &lt;code&gt;.js&lt;/code&gt; 文件将被解释为CommonJS。</target>
        </trans-unit>
        <trans-unit id="caa3feef5b60811f6f8ebc29d870eae549b34115" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;path&lt;/code&gt; is a zero-length string, &lt;code&gt;'.'&lt;/code&gt; is returned, representing the current working directory.</source>
          <target state="translated">如果 &lt;code&gt;path&lt;/code&gt; 是长度为零的字符串，则为 &lt;code&gt;'.'&lt;/code&gt; 返回，代表当前的工作目录。</target>
        </trans-unit>
        <trans-unit id="caefa5d65799f6063d04ea3b55a098cbb95b16f1" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;payload&lt;/code&gt; argument is not specified, the default payload will be the 64-bit timestamp (little endian) marking the start of the &lt;code&gt;PING&lt;/code&gt; duration.</source>
          <target state="translated">如果未指定 &lt;code&gt;payload&lt;/code&gt; 参数，则默认有效负载将是标记 &lt;code&gt;PING&lt;/code&gt; 持续时间开始的64位时间戳（小端）。</target>
        </trans-unit>
        <trans-unit id="0a081c5a11aa40b34615e3cce298d430f402bf1f" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;readable.read()&lt;/code&gt; method returns a chunk of data, a &lt;code&gt;'data'&lt;/code&gt; event will also be emitted.</source>
          <target state="translated">如果 &lt;code&gt;readable.read()&lt;/code&gt; 方法返回数据块，则还将发出 &lt;code&gt;'data'&lt;/code&gt; 事件。</target>
        </trans-unit>
        <trans-unit id="91fa64dbbc3f8f47eda565fe9f322b381a972060" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;readline.Interface&lt;/code&gt; was created with &lt;code&gt;output&lt;/code&gt; set to &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt; the &lt;code&gt;data&lt;/code&gt; and &lt;code&gt;key&lt;/code&gt; are not written.</source>
          <target state="translated">如果创建 &lt;code&gt;readline.Interface&lt;/code&gt; 并将 &lt;code&gt;output&lt;/code&gt; 设置为 &lt;code&gt;null&lt;/code&gt; 或 &lt;code&gt;undefined&lt;/code&gt; ，则不会写入 &lt;code&gt;data&lt;/code&gt; 和 &lt;code&gt;key&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="06f06f1032594fee7846b4022ca4197486666d19" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;readline.Interface&lt;/code&gt; was created with &lt;code&gt;output&lt;/code&gt; set to &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt; the &lt;code&gt;query&lt;/code&gt; is not written.</source>
          <target state="translated">如果创建 &lt;code&gt;readline.Interface&lt;/code&gt; 并将 &lt;code&gt;output&lt;/code&gt; 设置为 &lt;code&gt;null&lt;/code&gt; 或 &lt;code&gt;undefined&lt;/code&gt; ，则不会编写 &lt;code&gt;query&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fea07f7457e9a5cfe604444ae829144970387f4e" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;readline.Interface&lt;/code&gt; was created with &lt;code&gt;output&lt;/code&gt; set to &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt; the prompt is not written.</source>
          <target state="translated">如果创建 &lt;code&gt;readline.Interface&lt;/code&gt; 并将 &lt;code&gt;output&lt;/code&gt; 设置为 &lt;code&gt;null&lt;/code&gt; 或 &lt;code&gt;undefined&lt;/code&gt; ，则不会编写提示。</target>
        </trans-unit>
        <trans-unit id="ca11505c60d44e44b2be746154c32a786c9f3107" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;serialization&lt;/code&gt; option was set to &lt;code&gt;'advanced'&lt;/code&gt; used when spawning the child process, the &lt;code&gt;message&lt;/code&gt; argument can contain data that JSON is not able to represent. See &lt;a href=&quot;#child_process_advanced_serialization&quot;&gt;Advanced serialization&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f56a2a2f4c0e53d8c45d58f22f36c484befea2a7" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;serialization&lt;/code&gt; option was set to &lt;code&gt;advanced&lt;/code&gt; used when spawning the process, the &lt;code&gt;message&lt;/code&gt; argument can contain data that JSON is not able to represent. See &lt;a href=&quot;child_process#child_process_advanced_serialization&quot;&gt;Advanced serialization for &lt;code&gt;child_process&lt;/code&gt;&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34eeb81afad165bb1c78bab7242da5c92ced035c" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;signal&lt;/code&gt; option is enabled, calling &lt;code&gt;.abort()&lt;/code&gt; on the corresponding &lt;code&gt;AbortController&lt;/code&gt; is similar to calling &lt;code&gt;.kill()&lt;/code&gt; on the child process except the error passed to the callback will be an &lt;code&gt;AbortError&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ba79ac22562343c78ffca177acce56493df85de" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;size&lt;/code&gt; argument is not specified, all of the data contained in the internal buffer will be returned.</source>
          <target state="translated">如果未指定 &lt;code&gt;size&lt;/code&gt; 参数，则将返回内部缓冲区中包含的所有数据。</target>
        </trans-unit>
        <trans-unit id="70594489f12159c87f362c4ae69f4758215eb7f3" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;small-icu&lt;/code&gt; option is used, one can still provide additional locale data at runtime so that the JS methods would work for all ICU locales. Assuming the data file is stored at &lt;code&gt;/some/directory&lt;/code&gt;, it can be made available to ICU through either:</source>
          <target state="translated">如果使用 &lt;code&gt;small-icu&lt;/code&gt; 选项，则仍可以在运行时提供其他语言环境数据，以便JS方法可用于所有ICU语言环境。假设数据文件存储在 &lt;code&gt;/some/directory&lt;/code&gt; ，则可以通过以下任一方式将其提供给ICU：</target>
        </trans-unit>
        <trans-unit id="ba838b5589301149a5649376c001bb8fe7dc3b5b" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;stream&lt;/code&gt; is a &lt;a href=&quot;tty&quot;&gt;TTY&lt;/a&gt;, then it must be in raw mode.</source>
          <target state="translated">如果 &lt;code&gt;stream&lt;/code&gt; 是&lt;a href=&quot;tty&quot;&gt;TTY&lt;/a&gt;，则它必须处于原始模式。</target>
        </trans-unit>
        <trans-unit id="c1276a263a11dfdba0d780253f069d70f3b07760" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;type&lt;/code&gt; argument is left undefined, Node will autodetect &lt;code&gt;target&lt;/code&gt; type and automatically select &lt;code&gt;dir&lt;/code&gt; or &lt;code&gt;file&lt;/code&gt;</source>
          <target state="translated">如果未定义 &lt;code&gt;type&lt;/code&gt; 参数，Node将自动检测 &lt;code&gt;target&lt;/code&gt; 类型并自动选择 &lt;code&gt;dir&lt;/code&gt; 或 &lt;code&gt;file&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a730bfb6fcf2424a685238cdef11143c9ba909b1" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;type&lt;/code&gt; argument is left undefined, Node will autodetect &lt;code&gt;target&lt;/code&gt; type and automatically select &lt;code&gt;dir&lt;/code&gt; or &lt;code&gt;file&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="641da75986b0d3dd6bb805434236735b6993a166" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;urlObject.hash&lt;/code&gt; property is a string:</source>
          <target state="translated">如果 &lt;code&gt;urlObject.hash&lt;/code&gt; 属性是一个字符串：</target>
        </trans-unit>
        <trans-unit id="dfb858e55085a16c94af20594b643c53b5b10f40" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;urlObject.host&lt;/code&gt; property is &lt;code&gt;undefined&lt;/code&gt; then:</source>
          <target state="translated">如果 &lt;code&gt;undefined&lt;/code&gt; &lt;code&gt;urlObject.host&lt;/code&gt; 属性，则：</target>
        </trans-unit>
        <trans-unit id="5b5dce93f29b648ece229c6c340c77b112847288" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;urlObject.hostname&lt;/code&gt; is a string, it is appended to &lt;code&gt;result&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;urlObject.hostname&lt;/code&gt; 是字符串，则将其附加到 &lt;code&gt;result&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6379b09c4b00ec95bd4b96e589e7705fbb8d936e" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;urlObject.pathname&lt;/code&gt; property is a string that is not an empty string:</source>
          <target state="translated">如果 &lt;code&gt;urlObject.pathname&lt;/code&gt; 属性是不是空字符串的字符串：</target>
        </trans-unit>
        <trans-unit id="cca80e3e9a84bf98df702fab84776425b14d0b5b" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;urlObject.pathname&lt;/code&gt;&lt;em&gt;does not start&lt;/em&gt; with an ASCII forward slash (&lt;code&gt;/&lt;/code&gt;), then the literal string &lt;code&gt;'/'&lt;/code&gt; is appended to &lt;code&gt;result&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;urlObject.pathname&lt;/code&gt; &lt;em&gt;不&lt;/em&gt;以ASCII正斜杠（ &lt;code&gt;/&lt;/code&gt; ）&lt;em&gt;开头&lt;/em&gt;，则将文字字符串 &lt;code&gt;'/'&lt;/code&gt; 附加到 &lt;code&gt;result&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9d3af2d3b60b1f8ba28c24cc690ad1da17edcb49" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;urlObject.port&lt;/code&gt; property value is truthy, and &lt;code&gt;urlObject.hostname&lt;/code&gt; is not &lt;code&gt;undefined&lt;/code&gt;:</source>
          <target state="translated">如果 &lt;code&gt;urlObject.port&lt;/code&gt; 属性值为true，并且 &lt;code&gt;urlObject.hostname&lt;/code&gt; 不是 &lt;code&gt;undefined&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="f7b1873a47a5cccbbcaf141e8099ba0a23f167af" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;urlObject.search&lt;/code&gt; property is &lt;code&gt;undefined&lt;/code&gt; and if the &lt;code&gt;urlObject.query&lt;/code&gt; property is an &lt;code&gt;Object&lt;/code&gt;, the literal string &lt;code&gt;?&lt;/code&gt; is appended to &lt;code&gt;result&lt;/code&gt; followed by the output of calling the &lt;a href=&quot;querystring&quot;&gt;&lt;code&gt;querystring&lt;/code&gt;&lt;/a&gt; module's &lt;code&gt;stringify()&lt;/code&gt; method passing the value of &lt;code&gt;urlObject.query&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;urlObject.search&lt;/code&gt; 属性 &lt;code&gt;undefined&lt;/code&gt; 并且 &lt;code&gt;urlObject.query&lt;/code&gt; 属性是 &lt;code&gt;Object&lt;/code&gt; ，则文字字符串 &lt;code&gt;?&lt;/code&gt; 附加到 &lt;code&gt;result&lt;/code&gt; 然后是通过传递 &lt;code&gt;urlObject.query&lt;/code&gt; 的值调用&lt;a href=&quot;querystring&quot;&gt; &lt;code&gt;querystring&lt;/code&gt; &lt;/a&gt;模块的 &lt;code&gt;stringify()&lt;/code&gt; 方法的输出。</target>
        </trans-unit>
        <trans-unit id="c6c7d9851a36c60f4fede5c50c0daefebfda6c63" translate="yes" xml:space="preserve">
          <source>If the Chrome browser is older than 66.0.3345.0, use &lt;code&gt;inspector.html&lt;/code&gt; instead of &lt;code&gt;js_app.html&lt;/code&gt; in the above URL.</source>
          <target state="translated">如果Chrome浏览器早于66.0.3345.0， &lt;code&gt;js_app.html&lt;/code&gt; 在上述URL中使用 &lt;code&gt;inspector.html&lt;/code&gt; 而不是js_app.html。</target>
        </trans-unit>
        <trans-unit id="2c2ee6d4306a883909c0a1794605af868e4cc47a" translate="yes" xml:space="preserve">
          <source>If the Node.js process is spawned with an IPC channel (see the &lt;a href=&quot;child_process&quot;&gt;Child Process&lt;/a&gt; and &lt;a href=&quot;cluster&quot;&gt;Cluster&lt;/a&gt; documentation), the &lt;code&gt;'disconnect'&lt;/code&gt; event will be emitted when the IPC channel is closed.</source>
          <target state="translated">如果使用IPC通道生成了Node.js进程（请参见&lt;a href=&quot;child_process&quot;&gt;子进程&lt;/a&gt;和&lt;a href=&quot;cluster&quot;&gt;群集&lt;/a&gt;文档），则当IPC通道关闭时，将发出 &lt;code&gt;'disconnect'&lt;/code&gt; 事件。</target>
        </trans-unit>
        <trans-unit id="ac963e7d4525abb2736d0e62cf6c19d77ecc05c0" translate="yes" xml:space="preserve">
          <source>If the Node.js process is spawned with an IPC channel (see the &lt;a href=&quot;child_process&quot;&gt;Child Process&lt;/a&gt; and &lt;a href=&quot;cluster&quot;&gt;Cluster&lt;/a&gt; documentation), the &lt;code&gt;'message'&lt;/code&gt; event is emitted whenever a message sent by a parent process using &lt;a href=&quot;child_process#child_process_subprocess_send_message_sendhandle_options_callback&quot;&gt;&lt;code&gt;childprocess.send()&lt;/code&gt;&lt;/a&gt; is received by the child process.</source>
          <target state="translated">如果通过IPC通道生成了Node.js进程（请参阅&lt;a href=&quot;child_process&quot;&gt;子进程&lt;/a&gt;和&lt;a href=&quot;cluster&quot;&gt;群集&lt;/a&gt;文档），则子进程收到父进程使用&lt;a href=&quot;child_process#child_process_subprocess_send_message_sendhandle_options_callback&quot;&gt; &lt;code&gt;childprocess.send()&lt;/code&gt; &lt;/a&gt;发送的消息时，将发出 &lt;code&gt;'message'&lt;/code&gt; 事件。</target>
        </trans-unit>
        <trans-unit id="5c0f656d281b0270653c917de8907695d4af188c" translate="yes" xml:space="preserve">
          <source>If the Node.js process is spawned with an IPC channel (see the &lt;a href=&quot;child_process&quot;&gt;Child Process&lt;/a&gt; and &lt;a href=&quot;cluster&quot;&gt;Cluster&lt;/a&gt; documentation), the &lt;code&gt;process.connected&lt;/code&gt; property will return &lt;code&gt;true&lt;/code&gt; so long as the IPC channel is connected and will return &lt;code&gt;false&lt;/code&gt; after &lt;code&gt;process.disconnect()&lt;/code&gt; is called.</source>
          <target state="translated">如果使用IPC通道生成了Node.js进程（请参阅&lt;a href=&quot;child_process&quot;&gt;子进程&lt;/a&gt;和&lt;a href=&quot;cluster&quot;&gt;群集&lt;/a&gt;文档），则只要连接了IPC通道， &lt;code&gt;process.connected&lt;/code&gt; 属性将返回 &lt;code&gt;true&lt;/code&gt; ，并且在调用 &lt;code&gt;process.disconnect()&lt;/code&gt; 之后将返回 &lt;code&gt;false&lt;/code&gt; 。。</target>
        </trans-unit>
        <trans-unit id="cde62fe89a34a0451adb24c7df715d4ac04255b2" translate="yes" xml:space="preserve">
          <source>If the Node.js process is spawned with an IPC channel (see the &lt;a href=&quot;child_process&quot;&gt;Child Process&lt;/a&gt; and &lt;a href=&quot;cluster&quot;&gt;Cluster&lt;/a&gt; documentation), the &lt;code&gt;process.disconnect()&lt;/code&gt; method will close the IPC channel to the parent process, allowing the child process to exit gracefully once there are no other connections keeping it alive.</source>
          <target state="translated">如果使用IPC通道生成了Node.js进程（请参阅&lt;a href=&quot;child_process&quot;&gt;子进程&lt;/a&gt;和&lt;a href=&quot;cluster&quot;&gt;群集&lt;/a&gt;文档），则 &lt;code&gt;process.disconnect()&lt;/code&gt; 方法将关闭IPC通道到父进程，允许子进程在没有子进程的情况下正常退出其他保持连接的状态。</target>
        </trans-unit>
        <trans-unit id="f1535633e9356c88e44a5953c4a93db18cf738ad" translate="yes" xml:space="preserve">
          <source>If the Node.js process was not spawned with an IPC channel, &lt;code&gt;process.disconnect()&lt;/code&gt; will be &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">如果未使用IPC通道生成Node.js进程，则 &lt;code&gt;process.disconnect()&lt;/code&gt; 将为 &lt;code&gt;undefined&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fc3cb24c470cc8f1c846968b69afb26cb137c284" translate="yes" xml:space="preserve">
          <source>If the Node.js process was spawned with an IPC channel (see the &lt;a href=&quot;child_process&quot;&gt;Child Process&lt;/a&gt; documentation), the &lt;code&gt;process.channel&lt;/code&gt; property is a reference to the IPC channel. If no IPC channel exists, this property is &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">如果使用IPC通道生成了Node.js进程（请参阅&lt;a href=&quot;child_process&quot;&gt;子进程&lt;/a&gt;文档），则 &lt;code&gt;process.channel&lt;/code&gt; 属性是对IPC通道的引用。如果不存在IPC通道，则此属性为 &lt;code&gt;undefined&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="43857629c05db580aaa4aaa5f6033f044e6c6ced" translate="yes" xml:space="preserve">
          <source>If the REPL is run as standalone program, it is also possible to change the REPL's &lt;a href=&quot;util#util_util_inspect_object_options&quot;&gt;inspection defaults&lt;/a&gt; from inside the REPL by using the &lt;code&gt;inspect.replDefaults&lt;/code&gt; property which mirrors the &lt;code&gt;defaultOptions&lt;/code&gt; from &lt;a href=&quot;util#util_util_inspect_object_options&quot;&gt;&lt;code&gt;util.inspect()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果REPL是作为独立程序运行的，则还可以使用 &lt;code&gt;inspect.replDefaults&lt;/code&gt; 属性从REPL内部更改REPL的&lt;a href=&quot;util#util_util_inspect_object_options&quot;&gt;检查默认值&lt;/a&gt;，该属性从&lt;a href=&quot;util#util_util_inspect_object_options&quot;&gt; &lt;code&gt;util.inspect()&lt;/code&gt; &lt;/a&gt;镜像 &lt;code&gt;defaultOptions&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="23a67121ef3a61432b20d90cd8e0ab29a6212306" translate="yes" xml:space="preserve">
          <source>If the Timer or &lt;code&gt;EventEmitter&lt;/code&gt; was already bound to a domain, it is removed from that one, and bound to this one instead.</source>
          <target state="translated">如果Timer或 &lt;code&gt;EventEmitter&lt;/code&gt; 已绑定到一个域，则将其从该域中删除，然后绑定到该域。</target>
        </trans-unit>
        <trans-unit id="64dddc2f822a88286ad4464a37619dd0ebb42999" translate="yes" xml:space="preserve">
          <source>If the Worker thread is no longer running, which may occur before the &lt;a href=&quot;#worker_threads_event_exit&quot;&gt;&lt;code&gt;'exit'&lt;/code&gt; event&lt;/a&gt; is emitted, the returned &lt;code&gt;Promise&lt;/code&gt; is rejected immediately with an &lt;a href=&quot;errors#ERR_WORKER_NOT_RUNNING&quot;&gt;&lt;code&gt;ERR_WORKER_NOT_RUNNING&lt;/code&gt;&lt;/a&gt; error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f0a4b093f139ed3f4d2f9097604b6126d70f4ae" translate="yes" xml:space="preserve">
          <source>If the Worker thread is no longer running, which may occur before the &lt;a href=&quot;#worker_threads_event_exit&quot;&gt;&lt;code&gt;'exit'&lt;/code&gt; event&lt;/a&gt; is emitted, the returned &lt;code&gt;Promise&lt;/code&gt; will be rejected immediately with an &lt;a href=&quot;errors#ERR_WORKER_NOT_RUNNING&quot;&gt;&lt;code&gt;ERR_WORKER_NOT_RUNNING&lt;/code&gt;&lt;/a&gt; error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c562e1358dbc4b2fc2fd9fd83e9076c18598405" translate="yes" xml:space="preserve">
          <source>If the accessibility check is successful, the &lt;code&gt;Promise&lt;/code&gt; is resolved with no value. If any of the accessibility checks fail, the &lt;code&gt;Promise&lt;/code&gt; is rejected with an &lt;code&gt;Error&lt;/code&gt; object. The following example checks if the file &lt;code&gt;/etc/passwd&lt;/code&gt; can be read and written by the current process.</source>
          <target state="translated">如果可访问性检查成功，则 &lt;code&gt;Promise&lt;/code&gt; 将被解决，没有任何价值。如果任何可访问性检查失败，则 &lt;code&gt;Promise&lt;/code&gt; 将被 &lt;code&gt;Error&lt;/code&gt; 对象拒绝。以下示例检查当前进程是否可以读写文件 &lt;code&gt;/etc/passwd&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3799c67bbd23d79044be232fe53a7cba31d56f55" translate="yes" xml:space="preserve">
          <source>If the callback function throws an error, it will be thrown by &lt;code&gt;exit&lt;/code&gt; too. The stacktrace will not be impacted by this call and the context will be re-entered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="780b3ea859c2257014a14dd59e9b7b22d4dffa2c" translate="yes" xml:space="preserve">
          <source>If the callback function throws an error, it will be thrown by &lt;code&gt;run&lt;/code&gt; too. The stacktrace will not be impacted by this call and the context will be exited.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6b610dfa520e94a9fdf2b30dda8919b3eebe300" translate="yes" xml:space="preserve">
          <source>If the child process intercepts and handles the &lt;code&gt;SIGTERM&lt;/code&gt; signal and does not exit, the parent process will still wait until the child process has exited.</source>
          <target state="translated">如果子进程拦截并处理 &lt;code&gt;SIGTERM&lt;/code&gt; 信号并且没有退出，则父进程仍将等待直到子进程退出。</target>
        </trans-unit>
        <trans-unit id="13b740fc3fb496e053111a8c519d9ac732b0ce92" translate="yes" xml:space="preserve">
          <source>If the child was spawned with &lt;code&gt;stdio[0]&lt;/code&gt; set to anything other than &lt;code&gt;'pipe'&lt;/code&gt;, then this will be &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">如果生成该孩子时将 &lt;code&gt;stdio[0]&lt;/code&gt; 设置为 &lt;code&gt;'pipe'&lt;/code&gt; 以外的任何值，则它将为 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="46b39b748847e4c67b790f33ece88c22fff5bd35" translate="yes" xml:space="preserve">
          <source>If the child was spawned with &lt;code&gt;stdio[1]&lt;/code&gt; set to anything other than &lt;code&gt;'pipe'&lt;/code&gt;, then this will be &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">如果生成该孩子时将 &lt;code&gt;stdio[1]&lt;/code&gt; 设置为 &lt;code&gt;'pipe'&lt;/code&gt; 以外的任何值，则该 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="29ee59da22385decb4ae9026bc663f921fbe54b3" translate="yes" xml:space="preserve">
          <source>If the child was spawned with &lt;code&gt;stdio[2]&lt;/code&gt; set to anything other than &lt;code&gt;'pipe'&lt;/code&gt;, then this will be &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">如果生成该孩子时将 &lt;code&gt;stdio[2]&lt;/code&gt; 设置为 &lt;code&gt;'pipe'&lt;/code&gt; 以外的任何值，则该 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="07c35b549870c6ce2889f6cf4da37865237a1b7f" translate="yes" xml:space="preserve">
          <source>If the code needs more advanced &lt;code&gt;require&lt;/code&gt; features, it has to construct its own &lt;code&gt;require&lt;/code&gt; using &lt;code&gt;module.createRequire()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da188d4f2c13854a7aa73240ff25eb0ff7f7df83" translate="yes" xml:space="preserve">
          <source>If the data to be written can be generated or fetched on demand, it is recommended to encapsulate the logic into a &lt;a href=&quot;#stream_class_stream_readable&quot;&gt;&lt;code&gt;Readable&lt;/code&gt;&lt;/a&gt; and use &lt;a href=&quot;#stream_readable_pipe_destination_options&quot;&gt;&lt;code&gt;stream.pipe()&lt;/code&gt;&lt;/a&gt;. However, if calling &lt;code&gt;write()&lt;/code&gt; is preferred, it is possible to respect backpressure and avoid memory issues using the &lt;a href=&quot;#stream_event_drain&quot;&gt;&lt;code&gt;'drain'&lt;/code&gt;&lt;/a&gt; event:</source>
          <target state="translated">如果可以根据需要生成或获取要写入的数据，建议将逻辑封装为&lt;a href=&quot;#stream_class_stream_readable&quot;&gt; &lt;code&gt;Readable&lt;/code&gt; &lt;/a&gt;并使用&lt;a href=&quot;#stream_readable_pipe_destination_options&quot;&gt; &lt;code&gt;stream.pipe()&lt;/code&gt; &lt;/a&gt;。但是，如果首选调用 &lt;code&gt;write()&lt;/code&gt; ，则可以使用&lt;a href=&quot;#stream_event_drain&quot;&gt; &lt;code&gt;'drain'&lt;/code&gt; &lt;/a&gt;事件来考虑背压并避免内存问题：</target>
        </trans-unit>
        <trans-unit id="61145810afb5945c541a709b46cbd9081fc8c5a0" translate="yes" xml:space="preserve">
          <source>If the exact filename is not found, then Node.js will attempt to load the required filename with the added extensions: &lt;code&gt;.js&lt;/code&gt;, &lt;code&gt;.json&lt;/code&gt;, and finally &lt;code&gt;.node&lt;/code&gt;.</source>
          <target state="translated">如果找不到确切的文件名，则Node.js将尝试加载具有扩展名的所需文件名： &lt;code&gt;.js&lt;/code&gt; ， &lt;code&gt;.json&lt;/code&gt; ，最后是 &lt;code&gt;.node&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2258fb88100a5f7eff8cc7faff56de080446a859" translate="yes" xml:space="preserve">
          <source>If the file at &lt;em&gt;packageURL&lt;/em&gt; does not parse as valid JSON, then</source>
          <target state="translated">如果&lt;em&gt;packageURL&lt;/em&gt;中的文件未解析为有效JSON，则</target>
        </trans-unit>
        <trans-unit id="bdeb3f1ca2d8b92cbd0a1be61e5a215e42cd48a6" translate="yes" xml:space="preserve">
          <source>If the file at &lt;em&gt;pjsonURL&lt;/em&gt; does not exist, then</source>
          <target state="translated">如果&lt;em&gt;pjsonURL&lt;/em&gt;上的文件不存在，则</target>
        </trans-unit>
        <trans-unit id="aecb5a1502adf792d817b06219b4ea3a85f521fc" translate="yes" xml:space="preserve">
          <source>If the file at &lt;em&gt;resolved&lt;/em&gt; does not exist, then</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b04ae966e4e6108c91fe53b75de378ab723d38f2" translate="yes" xml:space="preserve">
          <source>If the file at &lt;em&gt;resolved&lt;/em&gt; is a directory, then</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5da2c4a4757077189503883db4e6e527ad0ac53c" translate="yes" xml:space="preserve">
          <source>If the file at &lt;em&gt;resolvedMain&lt;/em&gt; exists, then</source>
          <target state="translated">如果&lt;em&gt;resolvedMain&lt;/em&gt;的文件存在，则</target>
        </trans-unit>
        <trans-unit id="515992658a030cb2361fa29326a06b3cc8b741f2" translate="yes" xml:space="preserve">
          <source>If the file at &lt;em&gt;resolvedURL&lt;/em&gt; does not exist, then</source>
          <target state="translated">如果&lt;em&gt;resolveURL&lt;/em&gt;中的文件不存在，则</target>
        </trans-unit>
        <trans-unit id="aa9ce6de4cab577476c2c552264e45a090b35d7b" translate="yes" xml:space="preserve">
          <source>If the file is not modified concurrently, the end-of-file is reached when the number of bytes read is zero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cd28ea88a40c2bd663df8d30e3acd434308cc86" translate="yes" xml:space="preserve">
          <source>If the file previously was shorter than &lt;code&gt;len&lt;/code&gt; bytes, it is extended, and the extended part is filled with null bytes (&lt;code&gt;'\0'&lt;/code&gt;):</source>
          <target state="translated">如果文件先前小于 &lt;code&gt;len&lt;/code&gt; 个字节，则将其扩展，并在扩展部分中填充空字节（ &lt;code&gt;'\0'&lt;/code&gt; ）：</target>
        </trans-unit>
        <trans-unit id="f95ff524435a90bae8bf6af198f46ee202155faf" translate="yes" xml:space="preserve">
          <source>If the file referred to by the file descriptor was larger than &lt;code&gt;len&lt;/code&gt; bytes, only the first &lt;code&gt;len&lt;/code&gt; bytes will be retained in the file.</source>
          <target state="translated">如果文件描述符引用的文件大于 &lt;code&gt;len&lt;/code&gt; 个字节，则仅前 &lt;code&gt;len&lt;/code&gt; 个字节将保留在文件中。</target>
        </trans-unit>
        <trans-unit id="4496f3dce2ffd4403c03b2fc30701caf9fb83647" translate="yes" xml:space="preserve">
          <source>If the file was larger than &lt;code&gt;len&lt;/code&gt; bytes, only the first &lt;code&gt;len&lt;/code&gt; bytes will be retained in the file.</source>
          <target state="translated">如果文件大于 &lt;code&gt;len&lt;/code&gt; 字节，则仅前 &lt;code&gt;len&lt;/code&gt; 个字节将保留在文件中。</target>
        </trans-unit>
        <trans-unit id="a9e0f0d83d0baa5625a952fe8bc081211ede0c9c" translate="yes" xml:space="preserve">
          <source>If the final write of a &lt;code&gt;fill()&lt;/code&gt; operation falls on a multi-byte character, then only the bytes of that character that fit into &lt;code&gt;buf&lt;/code&gt; are written:</source>
          <target state="translated">如果 &lt;code&gt;fill()&lt;/code&gt; 操作的最终写入落在一个多字节字符上，则仅写入适合 &lt;code&gt;buf&lt;/code&gt; 的该字符的字节：</target>
        </trans-unit>
        <trans-unit id="43bfae18f785239e10de241385230fcb58569d05" translate="yes" xml:space="preserve">
          <source>If the first argument does not contain a valid format specifier, &lt;code&gt;util.format()&lt;/code&gt; returns a string that is the concatenation of all arguments separated by spaces:</source>
          <target state="translated">如果第一个参数不包含有效的格式说明符，则 &lt;code&gt;util.format()&lt;/code&gt; 返回一个字符串，该字符串是由空格分隔的所有参数的串联：</target>
        </trans-unit>
        <trans-unit id="757a2bf0797ec25c73b79618040a87cf69150154" translate="yes" xml:space="preserve">
          <source>If the folder at &lt;em&gt;packageURL&lt;/em&gt; does not exist, then</source>
          <target state="translated">如果&lt;em&gt;packageURL&lt;/em&gt;的文件夹不存在，则</target>
        </trans-unit>
        <trans-unit id="818763c6083260346cbce59d04afb4c3653559bd" translate="yes" xml:space="preserve">
          <source>If the format is &lt;code&gt;'pem'&lt;/code&gt;, the &lt;code&gt;'key'&lt;/code&gt; may also be an X.509 certificate.</source>
          <target state="translated">如果格式为 &lt;code&gt;'pem'&lt;/code&gt; ，则 &lt;code&gt;'key'&lt;/code&gt; 也可以是X.509证书。</target>
        </trans-unit>
        <trans-unit id="6dc26a1cbd3fee89ad0dc952d290b03d615d0af8" translate="yes" xml:space="preserve">
          <source>If the full certificate chain was requested (&lt;code&gt;details&lt;/code&gt; equals &lt;code&gt;true&lt;/code&gt;), each certificate will include an &lt;code&gt;issuerCertificate&lt;/code&gt; property containing an object representing the issuer's certificate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="146a422b15c52df2fe42a2ad9ffc62b28c5857bf" translate="yes" xml:space="preserve">
          <source>If the full certificate chain was requested, each certificate will include an &lt;code&gt;issuerCertificate&lt;/code&gt; property containing an object representing its issuer's certificate.</source>
          <target state="translated">如果请求完整的证书链，则每个证书都将包含一个 &lt;code&gt;issuerCertificate&lt;/code&gt; 属性，该属性包含一个代表其颁发者证书的对象。</target>
        </trans-unit>
        <trans-unit id="a0387fb588dc77347f4082fa56c7b681a051b0ff" translate="yes" xml:space="preserve">
          <source>If the function is not available, provide an alternate implementation that does not use the function.</source>
          <target state="translated">如果该函数不可用,请提供一个不使用该函数的替代实现。</target>
        </trans-unit>
        <trans-unit id="d53cf262095ac45fa556dab4e32bb6ff3d6e6375" translate="yes" xml:space="preserve">
          <source>If the given &lt;code&gt;path&lt;/code&gt; is a zero-length string, &lt;code&gt;false&lt;/code&gt; will be returned.</source>
          <target state="translated">如果给定 &lt;code&gt;path&lt;/code&gt; 是长度为零的字符串，则将返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e2e3d776630cc8905c1ff9df803e1e77bcd6232c" translate="yes" xml:space="preserve">
          <source>If the given path does not exist, &lt;code&gt;require()&lt;/code&gt; will throw an &lt;a href=&quot;errors#errors_class_error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt; with its &lt;code&gt;code&lt;/code&gt; property set to &lt;code&gt;'MODULE_NOT_FOUND'&lt;/code&gt;.</source>
          <target state="translated">如果给定路径不存在，则 &lt;code&gt;require()&lt;/code&gt; 会引发&lt;a href=&quot;errors#errors_class_error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt;，其 &lt;code&gt;code&lt;/code&gt; 属性设置为 &lt;code&gt;'MODULE_NOT_FOUND'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7ea6180b6690cd9c141dea7ea55172dbbbd3d0da" translate="yes" xml:space="preserve">
          <source>If the internal read buffer is below the &lt;code&gt;highWaterMark&lt;/code&gt;, and the stream is not currently reading, then calling &lt;code&gt;stream.read(0)&lt;/code&gt; will trigger a low-level &lt;a href=&quot;#stream_readable_read_size_1&quot;&gt;&lt;code&gt;stream._read()&lt;/code&gt;&lt;/a&gt; call.</source>
          <target state="translated">如果内部读取缓冲区低于 &lt;code&gt;highWaterMark&lt;/code&gt; ，并且流当前未在读取，则调用 &lt;code&gt;stream.read(0)&lt;/code&gt; 将触发低级&lt;a href=&quot;#stream_readable_read_size_1&quot;&gt; &lt;code&gt;stream._read()&lt;/code&gt; &lt;/a&gt;调用。</target>
        </trans-unit>
        <trans-unit id="94623dec42ca41e55b62b9990af5e5333283824a" translate="yes" xml:space="preserve">
          <source>If the length of &lt;em&gt;packageSpecifier&lt;/em&gt; is greater than the length of &lt;em&gt;packageName&lt;/em&gt;, then</source>
          <target state="translated">如果&lt;em&gt;packageSpecifier&lt;/em&gt;的长度大于&lt;em&gt;packageName&lt;/em&gt;的长度，则</target>
        </trans-unit>
        <trans-unit id="17178a0e608fa47d68854e07ee706e59b8601df4" translate="yes" xml:space="preserve">
          <source>If the list has no items, or if the &lt;code&gt;totalLength&lt;/code&gt; is 0, then a new zero-length &lt;code&gt;Buffer&lt;/code&gt; is returned.</source>
          <target state="translated">如果列表中没有项目，或者 &lt;code&gt;totalLength&lt;/code&gt; 为0，则返回一个新的零长度 &lt;code&gt;Buffer&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="69a7cfdcf2ecac620e067b3903c7f336b3b1a1ef" translate="yes" xml:space="preserve">
          <source>If the loop is terminated with &lt;code&gt;break&lt;/code&gt;, &lt;code&gt;throw&lt;/code&gt;, or &lt;code&gt;return&lt;/code&gt;, &lt;a href=&quot;#readline_rl_close&quot;&gt;&lt;code&gt;rl.close()&lt;/code&gt;&lt;/a&gt; will be called. In other words, iterating over a &lt;code&gt;readline.Interface&lt;/code&gt; will always consume the input stream fully.</source>
          <target state="translated">如果循环以 &lt;code&gt;break&lt;/code&gt; ， &lt;code&gt;throw&lt;/code&gt; 或 &lt;code&gt;return&lt;/code&gt; 终止，&lt;a href=&quot;#readline_rl_close&quot;&gt; &lt;code&gt;rl.close()&lt;/code&gt; &lt;/a&gt;调用rl.close（）。换句话说，在 &lt;code&gt;readline.Interface&lt;/code&gt; 上进行迭代将始终完全消耗输入流。</target>
        </trans-unit>
        <trans-unit id="12d2b5b93dc5b3368355319b6a41e0a1b7e89c51" translate="yes" xml:space="preserve">
          <source>If the loop terminates with a &lt;code&gt;break&lt;/code&gt; or a &lt;code&gt;throw&lt;/code&gt;, the stream will be destroyed. In other terms, iterating over a stream will consume the stream fully. The stream will be read in chunks of size equal to the &lt;code&gt;highWaterMark&lt;/code&gt; option. In the code example above, data will be in a single chunk if the file has less then 64KB of data because no &lt;code&gt;highWaterMark&lt;/code&gt; option is provided to &lt;a href=&quot;fs#fs_fs_createreadstream_path_options&quot;&gt;&lt;code&gt;fs.createReadStream()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bceba7bdffad615ad25d0a02fc1ae50546e463d9" translate="yes" xml:space="preserve">
          <source>If the loop terminates with a &lt;code&gt;break&lt;/code&gt; or a &lt;code&gt;throw&lt;/code&gt;, the stream will be destroyed. In other terms, iterating over a stream will consume the stream fully. The stream will be read in chunks of size equal to the &lt;code&gt;highWaterMark&lt;/code&gt; option. In the code example above, data will be in a single chunk if the file has less then 64kb of data because no &lt;code&gt;highWaterMark&lt;/code&gt; option is provided to &lt;a href=&quot;fs#fs_fs_createreadstream_path_options&quot;&gt;&lt;code&gt;fs.createReadStream()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果循环因 &lt;code&gt;break&lt;/code&gt; 或 &lt;code&gt;throw&lt;/code&gt; 终止，则流将被销毁。换句话说，对流进行迭代将完全消耗该流。将以等于 &lt;code&gt;highWaterMark&lt;/code&gt; 选项的大小读取流。在上面的代码示例中，如果文件的数据少于64kb，则数据将位于单个块中，因为没有为&lt;a href=&quot;fs#fs_fs_createreadstream_path_options&quot;&gt; &lt;code&gt;fs.createReadStream()&lt;/code&gt; &lt;/a&gt;提供 &lt;code&gt;highWaterMark&lt;/code&gt; 选项。</target>
        </trans-unit>
        <trans-unit id="60414babd277d857761204aae2ce5c56f1d8a898" translate="yes" xml:space="preserve">
          <source>If the module can not be found, a &lt;code&gt;MODULE_NOT_FOUND&lt;/code&gt; error is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b818f0c6afbca493ff9a19fa9609c515ca828403" translate="yes" xml:space="preserve">
          <source>If the module identifier passed to &lt;code&gt;require()&lt;/code&gt; is not a &lt;a href=&quot;#modules_core_modules&quot;&gt;core&lt;/a&gt; module, and does not begin with &lt;code&gt;'/'&lt;/code&gt;, &lt;code&gt;'../'&lt;/code&gt;, or &lt;code&gt;'./'&lt;/code&gt;, then Node.js starts at the parent directory of the current module, and adds &lt;code&gt;/node_modules&lt;/code&gt;, and attempts to load the module from that location. Node.js will not append &lt;code&gt;node_modules&lt;/code&gt; to a path already ending in &lt;code&gt;node_modules&lt;/code&gt;.</source>
          <target state="translated">如果识别符传递给模块 &lt;code&gt;require()&lt;/code&gt; 不是一个&lt;a href=&quot;#modules_core_modules&quot;&gt;核心&lt;/a&gt;模块，并且不与开始 &lt;code&gt;'/'&lt;/code&gt; ， &lt;code&gt;'../'&lt;/code&gt; ，或 &lt;code&gt;'./'&lt;/code&gt; ，然后Node.js的开始于当前模块的父目录，并添加 &lt;code&gt;/node_modules&lt;/code&gt; ，并尝试从该位置加载模块。Node.js不会将 &lt;code&gt;node_modules&lt;/code&gt; 附加到已经以 &lt;code&gt;node_modules&lt;/code&gt; 结尾的路径。</target>
        </trans-unit>
        <trans-unit id="379eefaaf07f8660cfce2f127e33572a7b16f44a" translate="yes" xml:space="preserve">
          <source>If the module is not simply a list of named exports, but rather contains a unique function or object export like &lt;code&gt;module.exports = function () { ... }&lt;/code&gt;, or if support in the wrapper for the &lt;code&gt;import pkg from 'pkg'&lt;/code&gt; pattern is desired, then the wrapper would instead be written to export the default optionally along with any named exports as well:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5890e21cec685ed58fcf1519311a188e9030c9ce" translate="yes" xml:space="preserve">
          <source>If the module will be loaded multiple times during the lifetime of the Node.js process, use the &lt;code&gt;NAPI_MODULE_INIT&lt;/code&gt; macro to initialize the module:</source>
          <target state="translated">如果模块将在Node.js进程的生存期内多次加载，请使用 &lt;code&gt;NAPI_MODULE_INIT&lt;/code&gt; 宏来初始化模块：</target>
        </trans-unit>
        <trans-unit id="b5564d329338abc7579a9543732ac9bf046e01b3" translate="yes" xml:space="preserve">
          <source>If the nearest parent &lt;code&gt;package.json&lt;/code&gt; lacks a &lt;code&gt;&quot;type&quot;&lt;/code&gt; field, or contains &lt;code&gt;&quot;type&quot;: &quot;commonjs&quot;&lt;/code&gt;, &lt;code&gt;.js&lt;/code&gt; files are treated as &lt;a href=&quot;modules&quot;&gt;CommonJS&lt;/a&gt;. If the volume root is reached and no &lt;code&gt;package.json&lt;/code&gt; is found, &lt;code&gt;.js&lt;/code&gt; files are treated as &lt;a href=&quot;modules&quot;&gt;CommonJS&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0add70a68c352ca1f1ff5b2c44879360ea5a65e7" translate="yes" xml:space="preserve">
          <source>If the nearest parent &lt;code&gt;package.json&lt;/code&gt; lacks a &lt;code&gt;&quot;type&quot;&lt;/code&gt; field, or contains &lt;code&gt;&quot;type&quot;: &quot;commonjs&quot;&lt;/code&gt;, extensionless and &lt;code&gt;.js&lt;/code&gt; files are treated as CommonJS. If the volume root is reached and no &lt;code&gt;package.json&lt;/code&gt; is found, Node.js defers to the default, a &lt;code&gt;package.json&lt;/code&gt; with no &lt;code&gt;&quot;type&quot;&lt;/code&gt; field.</source>
          <target state="translated">如果最近的父 &lt;code&gt;package.json&lt;/code&gt; 缺少 &lt;code&gt;&quot;type&quot;&lt;/code&gt; 字段，或包含 &lt;code&gt;&quot;type&quot;: &quot;commonjs&quot;&lt;/code&gt; ，则将无扩展名和 &lt;code&gt;.js&lt;/code&gt; 文件视为CommonJS。如果已到达卷根目录，但未找到 &lt;code&gt;package.json&lt;/code&gt; ，则Node.js将遵循默认值，即没有 &lt;code&gt;&quot;type&quot;&lt;/code&gt; 字段的 &lt;code&gt;package.json&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="23f21def50c65eb59310ea59a81bc8fd8fcc061e" translate="yes" xml:space="preserve">
          <source>If the number exceeds the range of the 32 bit integer, then the result is truncated to the equivalent of the bottom 32 bits. This can result in a large positive number becoming a negative number if the value is &amp;gt; 2&lt;sup&gt;31&lt;/sup&gt; - 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a879f054c5d68d376a9ec6f0087a480eedd3cce6" translate="yes" xml:space="preserve">
          <source>If the number exceeds the range of the 32 bit integer, then the result is truncated to the equivalent of the bottom 32 bits. This can result in a large positive number becoming a negative number if the value is &amp;gt; 2^31 -1.</source>
          <target state="translated">如果该数字超出了32位整数的范围，则结果将被截断为与低32位等效。如果值&amp;gt; 2 ^ 31 -1，则可能导致大的正数变为负数。</target>
        </trans-unit>
        <trans-unit id="5c43b23c7b44006babf5eb04fd420a50be7a5bad" translate="yes" xml:space="preserve">
          <source>If the object already has an associated type tag, this API will return &lt;code&gt;napi_invalid_arg&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e897c2b05d260b0b8e93ea4b285545b463fa7585" translate="yes" xml:space="preserve">
          <source>If the object cannot be serialized, an exception should be thrown.</source>
          <target state="translated">如果对象不能被序列化,则应抛出一个异常。</target>
        </trans-unit>
        <trans-unit id="5c1bbfd2c1a6332de40c11ef9f3e9fb9d7bc7ed9" translate="yes" xml:space="preserve">
          <source>If the package main export is a constructor, an &lt;code&gt;instanceof&lt;/code&gt; comparison of instances created by the two versions returns &lt;code&gt;false&lt;/code&gt;, and if the export is an object, properties added to one (like &lt;code&gt;pkgInstance.foo = 3&lt;/code&gt;) are not present on the other. This differs from how &lt;code&gt;import&lt;/code&gt; and &lt;code&gt;require&lt;/code&gt; statements work in all-CommonJS or all-ES module environments, respectively, and therefore is surprising to users. It also differs from the behavior users are familiar with when using transpilation via tools like &lt;a href=&quot;https://babeljs.io/&quot;&gt;Babel&lt;/a&gt; or &lt;a href=&quot;https://github.com/standard-things/esm#readme&quot;&gt;&lt;code&gt;esm&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6442a98f87242a39ce04a31ab601184ec0f676c" translate="yes" xml:space="preserve">
          <source>If the private key is encrypted, a &lt;code&gt;passphrase&lt;/code&gt; must be specified. The length of the passphrase is limited to 1024 bytes.</source>
          <target state="translated">如果私钥已加密，则必须指定 &lt;code&gt;passphrase&lt;/code&gt; 。密码短语的长度限制为1024个字节。</target>
        </trans-unit>
        <trans-unit id="3ae9b624e6a4cc8658387bd2cdd003cae8d4f7da" translate="yes" xml:space="preserve">
          <source>If the process times out or has a non-zero exit code, this method will throw an &lt;a href=&quot;errors#errors_class_error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt; that will include the full result of the underlying &lt;a href=&quot;#child_process_child_process_spawnsync_command_args_options&quot;&gt;&lt;code&gt;child_process.spawnSync()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果进程超时或具有非零的退出代码，则此方法将引发&lt;a href=&quot;errors#errors_class_error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt;，其中将包含基础&lt;a href=&quot;#child_process_child_process_spawnsync_command_args_options&quot;&gt; &lt;code&gt;child_process.spawnSync()&lt;/code&gt; &lt;/a&gt;的完整结果。</target>
        </trans-unit>
        <trans-unit id="98fbfb27e02d409cf17783265e877eb2aec63754" translate="yes" xml:space="preserve">
          <source>If the process times out or has a non-zero exit code, this method will throw. The &lt;a href=&quot;errors#errors_class_error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt; object will contain the entire result from &lt;a href=&quot;#child_process_child_process_spawnsync_command_args_options&quot;&gt;&lt;code&gt;child_process.spawnSync()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果进程超时或退出代码非零，则将抛出此方法。的&lt;a href=&quot;errors#errors_class_error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt;对象将包含从整个结果&lt;a href=&quot;#child_process_child_process_spawnsync_command_args_options&quot;&gt; &lt;code&gt;child_process.spawnSync()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d8ac036a75e1c80eaeb6589cc2f6c7d6f88f1b96" translate="yes" xml:space="preserve">
          <source>If the returned &lt;code&gt;Module&lt;/code&gt;'s &lt;code&gt;linkingStatus&lt;/code&gt; is &lt;code&gt;'unlinked'&lt;/code&gt;, this method will be recursively called on the returned &lt;code&gt;Module&lt;/code&gt; with the same provided &lt;code&gt;linker&lt;/code&gt; function.</source>
          <target state="translated">如果返回的 &lt;code&gt;Module&lt;/code&gt; 的 &lt;code&gt;linkingStatus&lt;/code&gt; 为 &lt;code&gt;'unlinked'&lt;/code&gt; unlinked '，则将使用相同的 &lt;code&gt;linker&lt;/code&gt; 函数在返回的 &lt;code&gt;Module&lt;/code&gt; 上递归调用此方法。</target>
        </trans-unit>
        <trans-unit id="f47fa4a693379619e2862831ffe0e33bc5857271" translate="yes" xml:space="preserve">
          <source>If the returned &lt;code&gt;Module&lt;/code&gt;'s &lt;code&gt;status&lt;/code&gt; is &lt;code&gt;'unlinked'&lt;/code&gt;, this method will be recursively called on the returned &lt;code&gt;Module&lt;/code&gt; with the same provided &lt;code&gt;linker&lt;/code&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a9c8f5a9405be2773921d9bcb73c378bf6e3921" translate="yes" xml:space="preserve">
          <source>If the same optional &lt;code&gt;code&lt;/code&gt; is supplied in multiple calls to &lt;code&gt;util.deprecate()&lt;/code&gt;, the warning will be emitted only once for that &lt;code&gt;code&lt;/code&gt;.</source>
          <target state="translated">如果在 &lt;code&gt;util.deprecate()&lt;/code&gt; 的多个调用中提供了相同的可选 &lt;code&gt;code&lt;/code&gt; 则该 &lt;code&gt;code&lt;/code&gt; 仅发出一次警告。</target>
        </trans-unit>
        <trans-unit id="77507334a12fcf0ff10a4c927bc16b8473d0704a" translate="yes" xml:space="preserve">
          <source>If the selected QUIC application protocol does not support push streams, an error will be thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="053de0467bbed8ee60b4eeda37751c45ad19520c" translate="yes" xml:space="preserve">
          <source>If the selected QUIC application protocol supports push streams, then the &lt;code&gt;pushStream()&lt;/code&gt; method will initiate a new push promise and create a new unidirectional &lt;code&gt;QuicStream&lt;/code&gt; object used to fulfill that push.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69d45b9459a85646bf2862e34f3076974fe78efd" translate="yes" xml:space="preserve">
          <source>If the socket has not been previously bound with a call to &lt;code&gt;bind&lt;/code&gt;, the socket is assigned a random port number and is bound to the &quot;all interfaces&quot; address (&lt;code&gt;'0.0.0.0'&lt;/code&gt; for &lt;code&gt;udp4&lt;/code&gt; sockets, &lt;code&gt;'::0'&lt;/code&gt; for &lt;code&gt;udp6&lt;/code&gt; sockets.)</source>
          <target state="translated">如果插座没有被先前的电话绑定 &lt;code&gt;bind&lt;/code&gt; ，插座被分配一个随机端口号，并绑定到&amp;ldquo;全接口&amp;rdquo;地址（ &lt;code&gt;'0.0.0.0'&lt;/code&gt; 的 &lt;code&gt;udp4&lt;/code&gt; 插座， &lt;code&gt;'::0'&lt;/code&gt; 为 &lt;code&gt;udp6&lt;/code&gt; 的插座）</target>
        </trans-unit>
        <trans-unit id="100b945d9d84485689651adf59b8ec4b61995064" translate="yes" xml:space="preserve">
          <source>If the source address of the incoming packet is an IPv6 link-local address, the interface name is added to the &lt;code&gt;address&lt;/code&gt;. For example, a packet received on the &lt;code&gt;en0&lt;/code&gt; interface might have the address field set to &lt;code&gt;'fe80::2618:1234:ab11:3b9c%en0'&lt;/code&gt;, where &lt;code&gt;'%en0'&lt;/code&gt; is the interface name as a zone ID suffix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46492c576efdd4f1790db38181ba945ea7cf73d4" translate="yes" xml:space="preserve">
          <source>If the stream is connecting &lt;code&gt;socket.readyState&lt;/code&gt; is &lt;code&gt;opening&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4afe3a03dccc50f186d91e3cffcd9e5b80230df7" translate="yes" xml:space="preserve">
          <source>If the stream is not readable and writable, it is &lt;code&gt;writeOnly&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e09ce348f6dbf571342db2c09fc61334ae0e87ec" translate="yes" xml:space="preserve">
          <source>If the stream is readable and not writable, it is &lt;code&gt;readOnly&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25e52195fba67f6fb50c98cef5978c591e453ad0" translate="yes" xml:space="preserve">
          <source>If the stream is readable and writable, it is &lt;code&gt;open&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75c6a8b07a563abb32426fd418fe170dc48b8de5" translate="yes" xml:space="preserve">
          <source>If the third argument is a number, then it specifies &lt;code&gt;flags&lt;/code&gt;:</source>
          <target state="translated">如果第三个参数是数字，则它指定 &lt;code&gt;flags&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="8be3058f7fe15dd98c0f339d7b14daeae146deee" translate="yes" xml:space="preserve">
          <source>If the timeout expires, the server responds with status 408 without forwarding the request to the request listener and then closes the connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="626defb6cd97e8925106c19e6385f50800621781" translate="yes" xml:space="preserve">
          <source>If the underlying functionality is not available for some reason, then &lt;code&gt;fs.watch()&lt;/code&gt; will not be able to function and may thrown an exception. For example, watching files or directories can be unreliable, and in some cases impossible, on network file systems (NFS, SMB, etc) or host file systems when using virtualization software such as Vagrant or Docker.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71076ea98f3be098c307fc8cb0dfd8e11760e9ca" translate="yes" xml:space="preserve">
          <source>If the underlying functionality is not available for some reason, then &lt;code&gt;fs.watch&lt;/code&gt; will not be able to function. For example, watching files or directories can be unreliable, and in some cases impossible, on network file systems (NFS, SMB, etc), or host file systems when using virtualization software such as Vagrant, Docker, etc.</source>
          <target state="translated">如果由于某些原因基础功能不可用，则 &lt;code&gt;fs.watch&lt;/code&gt; 将无法运行。例如，在使用虚拟化软件（例如Vagrant，Docker等）时，在网络文件系统（NFS，SMB等）或主机文件系统上，监视文件或目录可能不可靠，在某些情况下甚至是不可能的。</target>
        </trans-unit>
        <trans-unit id="5b3ff204ad926a2c406374c6beb30edbec4c9766" translate="yes" xml:space="preserve">
          <source>If the value assigned to the &lt;code&gt;href&lt;/code&gt; property is not a valid URL, a &lt;code&gt;TypeError&lt;/code&gt; will be thrown.</source>
          <target state="translated">如果分配给 &lt;code&gt;href&lt;/code&gt; 属性的值不是有效的URL，则将引发 &lt;code&gt;TypeError&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d90c5e203932eeac8e47f38ad8c3558ce56bbc29" translate="yes" xml:space="preserve">
          <source>If the value can not be converted to a number, or is &lt;code&gt;NaN&lt;/code&gt;, &lt;code&gt;Infinity&lt;/code&gt; or &lt;code&gt;-Infinity&lt;/code&gt;, an &lt;code&gt;Error&lt;/code&gt; will be thrown.</source>
          <target state="translated">如果该值不能转换为数字，或者是 &lt;code&gt;NaN&lt;/code&gt; ， &lt;code&gt;Infinity&lt;/code&gt; 或 &lt;code&gt;-Infinity&lt;/code&gt; ，则将引发 &lt;code&gt;Error&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="28e83e66ed225563a93b5f2e19b29f3cc812a630" translate="yes" xml:space="preserve">
          <source>If the value of &lt;code&gt;urlObject.hash&lt;/code&gt;&lt;em&gt;does not start&lt;/em&gt; with the ASCII hash (&lt;code&gt;#&lt;/code&gt;) character, the literal string &lt;code&gt;#&lt;/code&gt; is appended to &lt;code&gt;result&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;urlObject.hash&lt;/code&gt; 的值&lt;em&gt;不是&lt;/em&gt;以ASCII哈希（ &lt;code&gt;#&lt;/code&gt; ）字符&lt;em&gt;开头&lt;/em&gt;，则将文字字符串 &lt;code&gt;#&lt;/code&gt; 附加到 &lt;code&gt;result&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="354b6656744ff8bd4e88e85fb2306a95eb8ab63e" translate="yes" xml:space="preserve">
          <source>If the value of &lt;code&gt;urlObject.search&lt;/code&gt;&lt;em&gt;does not start&lt;/em&gt; with the ASCII question mark (&lt;code&gt;?&lt;/code&gt;) character, the literal string &lt;code&gt;?&lt;/code&gt; is appended to &lt;code&gt;result&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;urlObject.search&lt;/code&gt; 的值&lt;em&gt;不是&lt;/em&gt;以ASCII问号（ &lt;code&gt;?&lt;/code&gt; ）字符&lt;em&gt;开头&lt;/em&gt;，则为文字字符串 &lt;code&gt;?&lt;/code&gt; 。被附加到 &lt;code&gt;result&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4697b6330115dae4c26d7a6e08df799526336ff3" translate="yes" xml:space="preserve">
          <source>If the value of the &lt;code&gt;urlObject.auth&lt;/code&gt; property is truthy, and either &lt;code&gt;urlObject.host&lt;/code&gt; or &lt;code&gt;urlObject.hostname&lt;/code&gt; are not &lt;code&gt;undefined&lt;/code&gt;, the value of &lt;code&gt;urlObject.auth&lt;/code&gt; will be coerced into a string and appended to &lt;code&gt;result&lt;/code&gt; followed by the literal string &lt;code&gt;@&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;urlObject.auth&lt;/code&gt; 属性的值是true，并且 &lt;code&gt;urlObject.host&lt;/code&gt; 或 &lt;code&gt;urlObject.hostname&lt;/code&gt; 都 &lt;code&gt;undefined&lt;/code&gt; ，则 &lt;code&gt;urlObject.auth&lt;/code&gt; 的值将被强制转换为字符串，并附加到 &lt;code&gt;result&lt;/code&gt; 后面，然后是文字字符串 &lt;code&gt;@&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="456254174b08d43308fd7afd472a34a1dd26ab6c" translate="yes" xml:space="preserve">
          <source>If the value of the redirection is &lt;code&gt;true&lt;/code&gt; the default searching algorithms are used to find the module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="982c7fbef3736e828821d5101501a8b60a1d8d1f" translate="yes" xml:space="preserve">
          <source>If the value of the redirection is &lt;code&gt;true&lt;/code&gt; the default searching algorithms will be used to find the module.</source>
          <target state="translated">如果重定向的值为 &lt;code&gt;true&lt;/code&gt; ，则将使用默认的搜索算法来查找模块。</target>
        </trans-unit>
        <trans-unit id="2e11ada87c9591e197663cb2fdd4cdce368e18ed" translate="yes" xml:space="preserve">
          <source>If the value of the redirection is a string, it is resolved relative to the manifest and then immediately used without searching.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1f9f5955d6e364ca71ad55b75bc35cbe0c3b38b" translate="yes" xml:space="preserve">
          <source>If the value of the redirection is a string, it will be resolved relative to the manifest and then immediately be used without searching.</source>
          <target state="translated">如果重定向的值是一个字符串,它将相对于manifest进行解析,然后立即使用,无需搜索。</target>
        </trans-unit>
        <trans-unit id="7c8c0c616296b45074943e0b708b25c1e5487f9d" translate="yes" xml:space="preserve">
          <source>If the value provided is larger than V8's maximum, then the largest value will be chosen.</source>
          <target state="translated">如果提供的数值大于V8的最大值,那么将选择最大的数值。</target>
        </trans-unit>
        <trans-unit id="b038c7b128978d09ecafa8a22c053af444ab7daa" translate="yes" xml:space="preserve">
          <source>If the values are deeply and strictly equal, an &lt;a href=&quot;#assert_class_assert_assertionerror&quot;&gt;&lt;code&gt;AssertionError&lt;/code&gt;&lt;/a&gt; is thrown with a &lt;code&gt;message&lt;/code&gt; property set equal to the value of the &lt;code&gt;message&lt;/code&gt; parameter. If the &lt;code&gt;message&lt;/code&gt; parameter is undefined, a default error message is assigned. If the &lt;code&gt;message&lt;/code&gt; parameter is an instance of an &lt;a href=&quot;errors#errors_class_error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt; then it will be thrown instead of the &lt;a href=&quot;#assert_class_assert_assertionerror&quot;&gt;&lt;code&gt;AssertionError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3c44d16087d66714415a16ae315be1645f738f6" translate="yes" xml:space="preserve">
          <source>If the values are deeply and strictly equal, an &lt;code&gt;AssertionError&lt;/code&gt; is thrown with a &lt;code&gt;message&lt;/code&gt; property set equal to the value of the &lt;code&gt;message&lt;/code&gt; parameter. If the &lt;code&gt;message&lt;/code&gt; parameter is undefined, a default error message is assigned. If the &lt;code&gt;message&lt;/code&gt; parameter is an instance of an &lt;a href=&quot;errors#errors_class_error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt; then it will be thrown instead of the &lt;code&gt;AssertionError&lt;/code&gt;.</source>
          <target state="translated">如果值是严格相等的，则抛出一个 &lt;code&gt;AssertionError&lt;/code&gt; 且 &lt;code&gt;message&lt;/code&gt; 属性设置为 &lt;code&gt;message&lt;/code&gt; 参数的值。如果未定义 &lt;code&gt;message&lt;/code&gt; 参数，则分配默认错误消息。如果 &lt;code&gt;message&lt;/code&gt; 参数是&lt;a href=&quot;errors#errors_class_error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; 的&lt;/a&gt;一个实例，则将引发它而不是 &lt;code&gt;AssertionError&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="638a301b16f2859c51f7f2523e666e1667de4a20" translate="yes" xml:space="preserve">
          <source>If the values are deeply equal, an &lt;a href=&quot;#assert_class_assert_assertionerror&quot;&gt;&lt;code&gt;AssertionError&lt;/code&gt;&lt;/a&gt; is thrown with a &lt;code&gt;message&lt;/code&gt; property set equal to the value of the &lt;code&gt;message&lt;/code&gt; parameter. If the &lt;code&gt;message&lt;/code&gt; parameter is undefined, a default error message is assigned. If the &lt;code&gt;message&lt;/code&gt; parameter is an instance of an &lt;a href=&quot;errors#errors_class_error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt; then it will be thrown instead of the &lt;code&gt;AssertionError&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3feda4cbb8c69da0787d3c4d0edc4afedfe6d516" translate="yes" xml:space="preserve">
          <source>If the values are deeply equal, an &lt;code&gt;AssertionError&lt;/code&gt; is thrown with a &lt;code&gt;message&lt;/code&gt; property set equal to the value of the &lt;code&gt;message&lt;/code&gt; parameter. If the &lt;code&gt;message&lt;/code&gt; parameter is undefined, a default error message is assigned. If the &lt;code&gt;message&lt;/code&gt; parameter is an instance of an &lt;a href=&quot;errors#errors_class_error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt; then it will be thrown instead of the &lt;code&gt;AssertionError&lt;/code&gt;.</source>
          <target state="translated">如果这些值非常相等，则将引发一个 &lt;code&gt;AssertionError&lt;/code&gt; ，其 &lt;code&gt;message&lt;/code&gt; 属性设置为与 &lt;code&gt;message&lt;/code&gt; 参数的值相等。如果未定义 &lt;code&gt;message&lt;/code&gt; 参数，则分配默认错误消息。如果 &lt;code&gt;message&lt;/code&gt; 参数是&lt;a href=&quot;errors#errors_class_error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; 的&lt;/a&gt;一个实例，则将引发它而不是 &lt;code&gt;AssertionError&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5cba9dae04c3af0fed24d4023f5323acdff109b8" translate="yes" xml:space="preserve">
          <source>If the values are equal, an &lt;a href=&quot;#assert_class_assert_assertionerror&quot;&gt;&lt;code&gt;AssertionError&lt;/code&gt;&lt;/a&gt; is thrown with a &lt;code&gt;message&lt;/code&gt; property set equal to the value of the &lt;code&gt;message&lt;/code&gt; parameter. If the &lt;code&gt;message&lt;/code&gt; parameter is undefined, a default error message is assigned. If the &lt;code&gt;message&lt;/code&gt; parameter is an instance of an &lt;a href=&quot;errors#errors_class_error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt; then it will be thrown instead of the &lt;code&gt;AssertionError&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="191272d17c26c51430c4e20e797f1caf915bd356" translate="yes" xml:space="preserve">
          <source>If the values are equal, an &lt;code&gt;AssertionError&lt;/code&gt; is thrown with a &lt;code&gt;message&lt;/code&gt; property set equal to the value of the &lt;code&gt;message&lt;/code&gt; parameter. If the &lt;code&gt;message&lt;/code&gt; parameter is undefined, a default error message is assigned. If the &lt;code&gt;message&lt;/code&gt; parameter is an instance of an &lt;a href=&quot;errors#errors_class_error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt; then it will be thrown instead of the &lt;code&gt;AssertionError&lt;/code&gt;.</source>
          <target state="translated">如果值相等，则抛出一个 &lt;code&gt;AssertionError&lt;/code&gt; ，并且 &lt;code&gt;message&lt;/code&gt; 属性设置为与 &lt;code&gt;message&lt;/code&gt; 参数的值相等。如果未定义 &lt;code&gt;message&lt;/code&gt; 参数，则分配默认错误消息。如果 &lt;code&gt;message&lt;/code&gt; 参数是&lt;a href=&quot;errors#errors_class_error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; 的&lt;/a&gt;一个实例，则将引发它而不是 &lt;code&gt;AssertionError&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6893f9de4472be9e011072e4db13a20ecd7b4004" translate="yes" xml:space="preserve">
          <source>If the values are not equal, an &lt;a href=&quot;#assert_class_assert_assertionerror&quot;&gt;&lt;code&gt;AssertionError&lt;/code&gt;&lt;/a&gt; is thrown with a &lt;code&gt;message&lt;/code&gt; property set equal to the value of the &lt;code&gt;message&lt;/code&gt; parameter. If the &lt;code&gt;message&lt;/code&gt; parameter is undefined, a default error message is assigned. If the &lt;code&gt;message&lt;/code&gt; parameter is an instance of an &lt;a href=&quot;errors#errors_class_error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt; then it will be thrown instead of the &lt;a href=&quot;#assert_class_assert_assertionerror&quot;&gt;&lt;code&gt;AssertionError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7761b6c6e6fcfe08b01fe7eba382afd1f40b9435" translate="yes" xml:space="preserve">
          <source>If the values are not equal, an &lt;a href=&quot;#assert_class_assert_assertionerror&quot;&gt;&lt;code&gt;AssertionError&lt;/code&gt;&lt;/a&gt; is thrown with a &lt;code&gt;message&lt;/code&gt; property set equal to the value of the &lt;code&gt;message&lt;/code&gt; parameter. If the &lt;code&gt;message&lt;/code&gt; parameter is undefined, a default error message is assigned. If the &lt;code&gt;message&lt;/code&gt; parameter is an instance of an &lt;a href=&quot;errors#errors_class_error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt; then it will be thrown instead of the &lt;code&gt;AssertionError&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84d94f31db81c1f973e291da465a433690b463c0" translate="yes" xml:space="preserve">
          <source>If the values are not equal, an &lt;code&gt;AssertionError&lt;/code&gt; is thrown with a &lt;code&gt;message&lt;/code&gt; property set equal to the value of the &lt;code&gt;message&lt;/code&gt; parameter. If the &lt;code&gt;message&lt;/code&gt; parameter is undefined, a default error message is assigned. If the &lt;code&gt;message&lt;/code&gt; parameter is an instance of an &lt;a href=&quot;errors#errors_class_error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt; then it will be thrown instead of the &lt;code&gt;AssertionError&lt;/code&gt;.</source>
          <target state="translated">如果值不相等，则抛出一个 &lt;code&gt;AssertionError&lt;/code&gt; 且 &lt;code&gt;message&lt;/code&gt; 属性设置为与 &lt;code&gt;message&lt;/code&gt; 参数的值相等。如果未定义 &lt;code&gt;message&lt;/code&gt; 参数，则分配默认错误消息。如果 &lt;code&gt;message&lt;/code&gt; 参数是&lt;a href=&quot;errors#errors_class_error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; 的&lt;/a&gt;一个实例，则将引发它而不是 &lt;code&gt;AssertionError&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bee2d75c325da0f017ac53645ce9d9efc7bbf1d2" translate="yes" xml:space="preserve">
          <source>If the values are not strictly equal, an &lt;a href=&quot;#assert_class_assert_assertionerror&quot;&gt;&lt;code&gt;AssertionError&lt;/code&gt;&lt;/a&gt; is thrown with a &lt;code&gt;message&lt;/code&gt; property set equal to the value of the &lt;code&gt;message&lt;/code&gt; parameter. If the &lt;code&gt;message&lt;/code&gt; parameter is undefined, a default error message is assigned. If the &lt;code&gt;message&lt;/code&gt; parameter is an instance of an &lt;a href=&quot;errors#errors_class_error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt; then it will be thrown instead of the &lt;a href=&quot;#assert_class_assert_assertionerror&quot;&gt;&lt;code&gt;AssertionError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31b2da7358e1f618e30530614396b01dadfaf51f" translate="yes" xml:space="preserve">
          <source>If the values are not strictly equal, an &lt;code&gt;AssertionError&lt;/code&gt; is thrown with a &lt;code&gt;message&lt;/code&gt; property set equal to the value of the &lt;code&gt;message&lt;/code&gt; parameter. If the &lt;code&gt;message&lt;/code&gt; parameter is undefined, a default error message is assigned. If the &lt;code&gt;message&lt;/code&gt; parameter is an instance of an &lt;a href=&quot;errors#errors_class_error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt; then it will be thrown instead of the &lt;code&gt;AssertionError&lt;/code&gt;.</source>
          <target state="translated">如果值不严格相等，则抛出一个 &lt;code&gt;AssertionError&lt;/code&gt; 且 &lt;code&gt;message&lt;/code&gt; 属性设置为与 &lt;code&gt;message&lt;/code&gt; 参数的值相等。如果未定义 &lt;code&gt;message&lt;/code&gt; 参数，则分配默认错误消息。如果 &lt;code&gt;message&lt;/code&gt; 参数是&lt;a href=&quot;errors#errors_class_error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; 的&lt;/a&gt;一个实例，则将引发它而不是 &lt;code&gt;AssertionError&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="654affa2fd7d0e2f6b20f810272ee15e1ecc1638" translate="yes" xml:space="preserve">
          <source>If the values are strictly equal, an &lt;a href=&quot;#assert_class_assert_assertionerror&quot;&gt;&lt;code&gt;AssertionError&lt;/code&gt;&lt;/a&gt; is thrown with a &lt;code&gt;message&lt;/code&gt; property set equal to the value of the &lt;code&gt;message&lt;/code&gt; parameter. If the &lt;code&gt;message&lt;/code&gt; parameter is undefined, a default error message is assigned. If the &lt;code&gt;message&lt;/code&gt; parameter is an instance of an &lt;a href=&quot;errors#errors_class_error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt; then it will be thrown instead of the &lt;code&gt;AssertionError&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ff0a2446e1cfa20e6d7e26d965437d954f3efc4" translate="yes" xml:space="preserve">
          <source>If the values are strictly equal, an &lt;code&gt;AssertionError&lt;/code&gt; is thrown with a &lt;code&gt;message&lt;/code&gt; property set equal to the value of the &lt;code&gt;message&lt;/code&gt; parameter. If the &lt;code&gt;message&lt;/code&gt; parameter is undefined, a default error message is assigned. If the &lt;code&gt;message&lt;/code&gt; parameter is an instance of an &lt;a href=&quot;errors#errors_class_error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt; then it will be thrown instead of the &lt;code&gt;AssertionError&lt;/code&gt;.</source>
          <target state="translated">如果值严格相等，则抛出一个 &lt;code&gt;AssertionError&lt;/code&gt; 且 &lt;code&gt;message&lt;/code&gt; 属性设置为与 &lt;code&gt;message&lt;/code&gt; 参数的值相等。如果未定义 &lt;code&gt;message&lt;/code&gt; 参数，则分配默认错误消息。如果 &lt;code&gt;message&lt;/code&gt; 参数是&lt;a href=&quot;errors#errors_class_error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; 的&lt;/a&gt;一个实例，则将引发它而不是 &lt;code&gt;AssertionError&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="255dba9961a2ad02519c950d53ecca7c14eb2112" translate="yes" xml:space="preserve">
          <source>If the values do match, or if the &lt;code&gt;string&lt;/code&gt; argument is of another type than &lt;code&gt;string&lt;/code&gt;, an &lt;a href=&quot;#assert_class_assert_assertionerror&quot;&gt;&lt;code&gt;AssertionError&lt;/code&gt;&lt;/a&gt; is thrown with a &lt;code&gt;message&lt;/code&gt; property set equal to the value of the &lt;code&gt;message&lt;/code&gt; parameter. If the &lt;code&gt;message&lt;/code&gt; parameter is undefined, a default error message is assigned. If the &lt;code&gt;message&lt;/code&gt; parameter is an instance of an &lt;a href=&quot;errors#errors_class_error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt; then it will be thrown instead of the &lt;a href=&quot;#assert_class_assert_assertionerror&quot;&gt;&lt;code&gt;AssertionError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cfb6dd9f5eca78b33930d2e38d454d514eb582f" translate="yes" xml:space="preserve">
          <source>If the values do not match, or if the &lt;code&gt;string&lt;/code&gt; argument is of another type than &lt;code&gt;string&lt;/code&gt;, an &lt;a href=&quot;#assert_class_assert_assertionerror&quot;&gt;&lt;code&gt;AssertionError&lt;/code&gt;&lt;/a&gt; is thrown with a &lt;code&gt;message&lt;/code&gt; property set equal to the value of the &lt;code&gt;message&lt;/code&gt; parameter. If the &lt;code&gt;message&lt;/code&gt; parameter is undefined, a default error message is assigned. If the &lt;code&gt;message&lt;/code&gt; parameter is an instance of an &lt;a href=&quot;errors#errors_class_error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt; then it will be thrown instead of the &lt;a href=&quot;#assert_class_assert_assertionerror&quot;&gt;&lt;code&gt;AssertionError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e05dba99c6a0fea21f35e050285f2b6c393e3295" translate="yes" xml:space="preserve">
          <source>If the worker has stopped, the return value is an empty object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da602dad1348c5515a5368e54eed719f37be707a" translate="yes" xml:space="preserve">
          <source>If there are any remaining open &lt;code&gt;Http2Streams&lt;/code&gt; associated with the &lt;code&gt;Http2Session&lt;/code&gt;, those will also be destroyed.</source>
          <target state="translated">如果还有任何与 &lt;code&gt;Http2Streams&lt;/code&gt; 关联的打开的 &lt;code&gt;Http2Session&lt;/code&gt; ，这些也将被销毁。</target>
        </trans-unit>
        <trans-unit id="45b740bcc2b16e4bb9b682fe0bd542a05605c049" translate="yes" xml:space="preserve">
          <source>If there are more arguments passed to the &lt;code&gt;util.format()&lt;/code&gt; method than the number of specifiers, the extra arguments are concatenated to the returned string, separated by spaces:</source>
          <target state="translated">如果传递给 &lt;code&gt;util.format()&lt;/code&gt; 方法的参数多于指定符的数量，则多余的参数将连接到返回的字符串，并用空格分隔：</target>
        </trans-unit>
        <trans-unit id="698579d27a4ddffd0cd3fee0cd725708e9b8c0c0" translate="yes" xml:space="preserve">
          <source>If there are multiple, nested domains bound to the current execution context, &lt;code&gt;exit()&lt;/code&gt; will exit any domains nested within this domain.</source>
          <target state="translated">如果有多个嵌套域绑定到当前执行上下文，则 &lt;code&gt;exit()&lt;/code&gt; 将退出该域内嵌套的任何域。</target>
        </trans-unit>
        <trans-unit id="e1df8284a9b0df51b3cefbe17157c6029fc2b0bf" translate="yes" xml:space="preserve">
          <source>If there are no more directory entries to read, &lt;code&gt;null&lt;/code&gt; will be returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc6b904b20e2c573a6f4d896aa8a2fa420127eee" translate="yes" xml:space="preserve">
          <source>If there are no pipe destinations, by calling the &lt;a href=&quot;#stream_readable_pause&quot;&gt;&lt;code&gt;stream.pause()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">如果没有管道目标，则通过调用&lt;a href=&quot;#stream_readable_pause&quot;&gt; &lt;code&gt;stream.pause()&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="53903dbbffb3efe8650a918ab139a66c8a9d7384" translate="yes" xml:space="preserve">
          <source>If there are pipe destinations, by removing all pipe destinations. Multiple pipe destinations may be removed by calling the &lt;a href=&quot;#stream_readable_unpipe_destination&quot;&gt;&lt;code&gt;stream.unpipe()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">如果有管道目标，请删除所有管道目标。可以通过调用&lt;a href=&quot;#stream_readable_unpipe_destination&quot;&gt; &lt;code&gt;stream.unpipe()&lt;/code&gt; &lt;/a&gt;方法来删除多个管道目标。</target>
        </trans-unit>
        <trans-unit id="808ed805596f02baf1205d0104edc17496833e97" translate="yes" xml:space="preserve">
          <source>If there are specific reasons to use &lt;code&gt;process.dlopen()&lt;/code&gt; (for instance, to specify dlopen flags), it's often useful to use &lt;a href=&quot;modules#modules_require_resolve_request_options&quot;&gt;&lt;code&gt;require.resolve()&lt;/code&gt;&lt;/a&gt; to look up the module's path.</source>
          <target state="translated">如果出于特殊原因使用 &lt;code&gt;process.dlopen()&lt;/code&gt; （例如，指定dlopen标志），则使用&lt;a href=&quot;modules#modules_require_resolve_request_options&quot;&gt; &lt;code&gt;require.resolve()&lt;/code&gt; &lt;/a&gt;查找模块路径通常很有用。</target>
        </trans-unit>
        <trans-unit id="afc44255b34b29834468d6a2fcd2f10d21a794e9" translate="yes" xml:space="preserve">
          <source>If there is a &lt;code&gt;'timeout'&lt;/code&gt; event listener on the Server object, then it will be called with the timed-out socket as an argument.</source>
          <target state="translated">如果服务器对象上有一个 &lt;code&gt;'timeout'&lt;/code&gt; 事件侦听器，则将使用超时套接字作为参数来调用它。</target>
        </trans-unit>
        <trans-unit id="85fc1803c513e97d473fe51f97314f53ca219f6c" translate="yes" xml:space="preserve">
          <source>If there is an &lt;code&gt;original[util.promisify.custom]&lt;/code&gt; property present, &lt;code&gt;promisify&lt;/code&gt; will return its value, see &lt;a href=&quot;#util_custom_promisified_functions&quot;&gt;Custom promisified functions&lt;/a&gt;.</source>
          <target state="translated">如果存在 &lt;code&gt;original[util.promisify.custom]&lt;/code&gt; 属性，则 &lt;code&gt;promisify&lt;/code&gt; 将返回其值，请参阅&lt;a href=&quot;#util_custom_promisified_functions&quot;&gt;自定义promisified函数&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="119a2151456635e90a77f1336a58bdca2900be5b" translate="yes" xml:space="preserve">
          <source>If there is no &lt;a href=&quot;packages#packages_node_js_package_json_field_definitions&quot;&gt;&lt;code&gt;package.json&lt;/code&gt;&lt;/a&gt; file present in the directory, or if the &lt;a href=&quot;packages#packages_main&quot;&gt;&lt;code&gt;&quot;main&quot;&lt;/code&gt;&lt;/a&gt; entry is missing or cannot be resolved, then Node.js will attempt to load an &lt;code&gt;index.js&lt;/code&gt; or &lt;code&gt;index.node&lt;/code&gt; file out of that directory. For example, if there was no &lt;a href=&quot;packages#packages_node_js_package_json_field_definitions&quot;&gt;&lt;code&gt;package.json&lt;/code&gt;&lt;/a&gt; file in the previous example, then &lt;code&gt;require('./some-library')&lt;/code&gt; would attempt to load:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43f0364f8de171c5fc72a4af4e61f0c6915879a3" translate="yes" xml:space="preserve">
          <source>If there is no &lt;code&gt;package.json&lt;/code&gt; file present in the directory, or if the &lt;code&gt;'main'&lt;/code&gt; entry is missing or cannot be resolved, then Node.js will attempt to load an &lt;code&gt;index.js&lt;/code&gt; or &lt;code&gt;index.node&lt;/code&gt; file out of that directory. For example, if there was no &lt;code&gt;package.json&lt;/code&gt; file in the above example, then &lt;code&gt;require('./some-library')&lt;/code&gt; would attempt to load:</source>
          <target state="translated">如果目录中没有 &lt;code&gt;package.json&lt;/code&gt; 文件，或者 &lt;code&gt;'main'&lt;/code&gt; 项丢失或无法解析，则Node.js将尝试从该目录中加载 &lt;code&gt;index.js&lt;/code&gt; 或 &lt;code&gt;index.node&lt;/code&gt; 文件。例如，如果在上面的示例中没有 &lt;code&gt;package.json&lt;/code&gt; 文件，则 &lt;code&gt;require('./some-library')&lt;/code&gt; 将尝试加载：</target>
        </trans-unit>
        <trans-unit id="7e0cb8b2e9ee0148b30bf42005c017e69093ae44" translate="yes" xml:space="preserve">
          <source>If there is no local certificate, an empty object will be returned. If the socket has been destroyed, &lt;code&gt;null&lt;/code&gt; will be returned.</source>
          <target state="translated">如果没有本地证书，将返回一个空对象。如果套接字已被销毁，则将返回 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fac7e10c7ee4c185adcdea481447e11e04726d41" translate="yes" xml:space="preserve">
          <source>If there is no local certificate, or if the &lt;code&gt;QuicSession&lt;/code&gt; has been destroyed, an empty object will be returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d88cc35a1e5f4ab2434014beef29a6b8b2436e3" translate="yes" xml:space="preserve">
          <source>If these attempts fail, then Node.js will report the entire module as missing with the default error:</source>
          <target state="translated">如果这些尝试失败了,那么Node.js就会以默认的错误报告整个模块丢失。</target>
        </trans-unit>
        <trans-unit id="01e89fda5beccddb8f1c71631aaa97e426bae7a5" translate="yes" xml:space="preserve">
          <source>If this flag is passed, the behavior can still be set to not abort through &lt;a href=&quot;process#process_process_setuncaughtexceptioncapturecallback_fn&quot;&gt;&lt;code&gt;process.setUncaughtExceptionCaptureCallback()&lt;/code&gt;&lt;/a&gt; (and through usage of the &lt;code&gt;domain&lt;/code&gt; module that uses it).</source>
          <target state="translated">如果传递了此标志，则仍可以通过&lt;a href=&quot;process#process_process_setuncaughtexceptioncapturecallback_fn&quot;&gt; &lt;code&gt;process.setUncaughtExceptionCaptureCallback()&lt;/code&gt; &lt;/a&gt;（并通过使用使用它的 &lt;code&gt;domain&lt;/code&gt; 模块的使用）将行为设置为不中止。</target>
        </trans-unit>
        <trans-unit id="8426e9ec3e8a8ad46000e461f3a11d6c18b908f9" translate="yes" xml:space="preserve">
          <source>If this hook is used to convert unknown-to-Node.js file types into executable JavaScript, a resolve hook is also necessary in order to register any unknown-to-Node.js file extensions. See the &lt;a href=&quot;#esm_transpiler_loader&quot;&gt;transpiler loader example&lt;/a&gt; below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a155d60f93780a23e7f931df52c38c0f6fd72e4c" translate="yes" xml:space="preserve">
          <source>If this is used in the main thread, its value is an empty object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f39b5b9c13b1ddf3e432e4ec5ca8712b07563b19" translate="yes" xml:space="preserve">
          <source>If this method is &lt;a href=&quot;util#util_util_promisify_original&quot;&gt;&lt;code&gt;util.promisify()&lt;/code&gt;&lt;/a&gt;ed, it returns a &lt;code&gt;Promise&lt;/code&gt; for an &lt;code&gt;Object&lt;/code&gt; with &lt;code&gt;bytesWritten&lt;/code&gt; and &lt;code&gt;buffers&lt;/code&gt; properties.</source>
          <target state="translated">如果此方法是&lt;a href=&quot;util#util_util_promisify_original&quot;&gt; &lt;code&gt;util.promisify()&lt;/code&gt; &lt;/a&gt; ed，则它为具有 &lt;code&gt;bytesWritten&lt;/code&gt; 的 &lt;code&gt;Object&lt;/code&gt; 返回 &lt;code&gt;Promise&lt;/code&gt; 并 &lt;code&gt;buffers&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="848ee8754e17695db5eea6ee56dc831672698103" translate="yes" xml:space="preserve">
          <source>If this method is called and &lt;a href=&quot;#http2_response_writehead_statuscode_statusmessage_headers&quot;&gt;&lt;code&gt;response.writeHead()&lt;/code&gt;&lt;/a&gt; has not been called, it will switch to implicit header mode and flush the implicit headers.</source>
          <target state="translated">如果调用了此方法并且尚未调用&lt;a href=&quot;#http2_response_writehead_statuscode_statusmessage_headers&quot;&gt; &lt;code&gt;response.writeHead()&lt;/code&gt; &lt;/a&gt;，它将切换到隐式标头模式并刷新隐式标头。</target>
        </trans-unit>
        <trans-unit id="863ede4dd3d457c897371e8202fbec82f0818194" translate="yes" xml:space="preserve">
          <source>If this method is called and &lt;a href=&quot;#http_response_setheader_name_value&quot;&gt;&lt;code&gt;response.setHeader()&lt;/code&gt;&lt;/a&gt; has not been called, it will directly write the supplied header values onto the network channel without caching internally, and the &lt;a href=&quot;#http_response_getheader_name&quot;&gt;&lt;code&gt;response.getHeader()&lt;/code&gt;&lt;/a&gt; on the header will not yield the expected result. If progressive population of headers is desired with potential future retrieval and modification, use &lt;a href=&quot;#http_response_setheader_name_value&quot;&gt;&lt;code&gt;response.setHeader()&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">如果调用此方法而未调用&lt;a href=&quot;#http_response_setheader_name_value&quot;&gt; &lt;code&gt;response.setHeader()&lt;/code&gt; &lt;/a&gt;，它将直接将提供的标头值写入网络通道，而无需内部缓存，并且标头上的&lt;a href=&quot;#http_response_getheader_name&quot;&gt; &lt;code&gt;response.getHeader()&lt;/code&gt; &lt;/a&gt;将不会产生预期的结果。如果希望逐步填充标头并可能在将来进行检索和修改，请改用&lt;a href=&quot;#http_response_setheader_name_value&quot;&gt; &lt;code&gt;response.setHeader()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f8bf717520bed1a535f84bb455286f68447c2d06" translate="yes" xml:space="preserve">
          <source>If this method is called and &lt;a href=&quot;#http_response_writehead_statuscode_statusmessage_headers&quot;&gt;&lt;code&gt;response.writeHead()&lt;/code&gt;&lt;/a&gt; has not been called, it will switch to implicit header mode and flush the implicit headers.</source>
          <target state="translated">如果调用了此方法并且尚未调用&lt;a href=&quot;#http_response_writehead_statuscode_statusmessage_headers&quot;&gt; &lt;code&gt;response.writeHead()&lt;/code&gt; &lt;/a&gt;，它将切换到隐式标头模式并刷新隐式标头。</target>
        </trans-unit>
        <trans-unit id="59b52c6bec23c453cf6476176e31528205155635" translate="yes" xml:space="preserve">
          <source>If this method is called without a label, the most recently started profile is stopped.</source>
          <target state="translated">如果调用此方法时没有标签,则最近启动的配置文件将被停止。</target>
        </trans-unit>
        <trans-unit id="da8ccda14c2d5edd4fce7c787763bcd45d9f4a10" translate="yes" xml:space="preserve">
          <source>If this method is invoked as its &lt;a href=&quot;util#util_util_promisify_original&quot;&gt;&lt;code&gt;util.promisify()&lt;/code&gt;&lt;/a&gt;ed version, and &lt;code&gt;all&lt;/code&gt; is not set to &lt;code&gt;true&lt;/code&gt;, it returns a &lt;code&gt;Promise&lt;/code&gt; for an &lt;code&gt;Object&lt;/code&gt; with &lt;code&gt;address&lt;/code&gt; and &lt;code&gt;family&lt;/code&gt; properties.</source>
          <target state="translated">如果将此方法作为其&lt;a href=&quot;util#util_util_promisify_original&quot;&gt; &lt;code&gt;util.promisify()&lt;/code&gt; &lt;/a&gt;版本调用，并且 &lt;code&gt;all&lt;/code&gt; 方法均未设置为 &lt;code&gt;true&lt;/code&gt; ，则它将为具有 &lt;code&gt;address&lt;/code&gt; 和 &lt;code&gt;family&lt;/code&gt; 属性的 &lt;code&gt;Object&lt;/code&gt; 返回一个 &lt;code&gt;Promise&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fc491ff668f0ad005b523fb4afb065a33fd0ce04" translate="yes" xml:space="preserve">
          <source>If this method is invoked as its &lt;a href=&quot;util#util_util_promisify_original&quot;&gt;&lt;code&gt;util.promisify()&lt;/code&gt;&lt;/a&gt;ed version, it returns a &lt;code&gt;Promise&lt;/code&gt; for an &lt;code&gt;Object&lt;/code&gt; with &lt;code&gt;bytesRead&lt;/code&gt; and &lt;code&gt;buffer&lt;/code&gt; properties.</source>
          <target state="translated">如果将此方法作为其&lt;a href=&quot;util#util_util_promisify_original&quot;&gt; &lt;code&gt;util.promisify()&lt;/code&gt; &lt;/a&gt;版本调用，则该方法将返回一个具有 &lt;code&gt;bytesRead&lt;/code&gt; 和 &lt;code&gt;buffer&lt;/code&gt; 属性的 &lt;code&gt;Object&lt;/code&gt; 的 &lt;code&gt;Promise&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7185c658579d422e7eba6cdc07f4b4cbe8004f1d" translate="yes" xml:space="preserve">
          <source>If this method is invoked as its &lt;a href=&quot;util#util_util_promisify_original&quot;&gt;&lt;code&gt;util.promisify()&lt;/code&gt;&lt;/a&gt;ed version, it returns a &lt;code&gt;Promise&lt;/code&gt; for an &lt;code&gt;Object&lt;/code&gt; with &lt;code&gt;bytesRead&lt;/code&gt; and &lt;code&gt;buffers&lt;/code&gt; properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d137547d5ca92dc63e7c2007a92f1e7211e167ad" translate="yes" xml:space="preserve">
          <source>If this method is invoked as its &lt;a href=&quot;util#util_util_promisify_original&quot;&gt;&lt;code&gt;util.promisify()&lt;/code&gt;&lt;/a&gt;ed version, it returns a &lt;code&gt;Promise&lt;/code&gt; for an &lt;code&gt;Object&lt;/code&gt; with &lt;code&gt;bytesWritten&lt;/code&gt; and &lt;code&gt;buffer&lt;/code&gt; properties.</source>
          <target state="translated">如果将此方法作为其&lt;a href=&quot;util#util_util_promisify_original&quot;&gt; &lt;code&gt;util.promisify()&lt;/code&gt; &lt;/a&gt;版本调用，则它将返回具有 &lt;code&gt;bytesWritten&lt;/code&gt; 和 &lt;code&gt;buffer&lt;/code&gt; 属性的 &lt;code&gt;Object&lt;/code&gt; 的 &lt;code&gt;Promise&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fd5bb143ee298fdd24e036558635695a1e0cd676" translate="yes" xml:space="preserve">
          <source>If this method is invoked as its &lt;a href=&quot;util#util_util_promisify_original&quot;&gt;&lt;code&gt;util.promisify()&lt;/code&gt;&lt;/a&gt;ed version, it returns a &lt;code&gt;Promise&lt;/code&gt; for an &lt;code&gt;Object&lt;/code&gt; with &lt;code&gt;hostname&lt;/code&gt; and &lt;code&gt;service&lt;/code&gt; properties.</source>
          <target state="translated">如果将此方法作为其&lt;a href=&quot;util#util_util_promisify_original&quot;&gt; &lt;code&gt;util.promisify()&lt;/code&gt; &lt;/a&gt;版本调用，它将返回一个带有 &lt;code&gt;hostname&lt;/code&gt; 和 &lt;code&gt;service&lt;/code&gt; 属性的 &lt;code&gt;Object&lt;/code&gt; 的 &lt;code&gt;Promise&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="603337fd667fc9ebe65d8742a13478c7c173636d" translate="yes" xml:space="preserve">
          <source>If this method is invoked as its &lt;a href=&quot;util#util_util_promisify_original&quot;&gt;&lt;code&gt;util.promisify()&lt;/code&gt;&lt;/a&gt;ed version, it returns a &lt;code&gt;Promise&lt;/code&gt; for an &lt;code&gt;Object&lt;/code&gt; with &lt;code&gt;publicKey&lt;/code&gt; and &lt;code&gt;privateKey&lt;/code&gt; properties.</source>
          <target state="translated">如果将此方法作为其&lt;a href=&quot;util#util_util_promisify_original&quot;&gt; &lt;code&gt;util.promisify()&lt;/code&gt; &lt;/a&gt;版本调用，它将返回带有 &lt;code&gt;publicKey&lt;/code&gt; 和 &lt;code&gt;privateKey&lt;/code&gt; 属性的 &lt;code&gt;Object&lt;/code&gt; 的 &lt;code&gt;Promise&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e3f19615a76df308a4eaaa08102fe8029d4cd7da" translate="yes" xml:space="preserve">
          <source>If this method is invoked as its &lt;a href=&quot;util#util_util_promisify_original&quot;&gt;&lt;code&gt;util.promisify()&lt;/code&gt;&lt;/a&gt;ed version, it returns a &lt;code&gt;Promise&lt;/code&gt; for an &lt;code&gt;Object&lt;/code&gt; with &lt;code&gt;stdout&lt;/code&gt; and &lt;code&gt;stderr&lt;/code&gt; properties. The returned &lt;code&gt;ChildProcess&lt;/code&gt; instance is attached to the &lt;code&gt;Promise&lt;/code&gt; as a &lt;code&gt;child&lt;/code&gt; property. In case of an error (including any error resulting in an exit code other than 0), a rejected promise is returned, with the same &lt;code&gt;error&lt;/code&gt; object given in the callback, but with two additional properties &lt;code&gt;stdout&lt;/code&gt; and &lt;code&gt;stderr&lt;/code&gt;.</source>
          <target state="translated">如果将此方法作为其&lt;a href=&quot;util#util_util_promisify_original&quot;&gt; &lt;code&gt;util.promisify()&lt;/code&gt; &lt;/a&gt;版本调用，它将返回具有 &lt;code&gt;stdout&lt;/code&gt; 和 &lt;code&gt;stderr&lt;/code&gt; 属性的 &lt;code&gt;Object&lt;/code&gt; 的 &lt;code&gt;Promise&lt;/code&gt; 。返回的 &lt;code&gt;ChildProcess&lt;/code&gt; 实例作为 &lt;code&gt;child&lt;/code&gt; 属性附加到 &lt;code&gt;Promise&lt;/code&gt; 。如果发生错误（包括导致退出代码不为0的任何错误），则返回被拒绝的promise，在回调中给出相同的 &lt;code&gt;error&lt;/code&gt; 对象，但具有两个附加属性 &lt;code&gt;stdout&lt;/code&gt; 和 &lt;code&gt;stderr&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="325b0754bdd6596fd481b9c1fd1a89b41adcb29d" translate="yes" xml:space="preserve">
          <source>If this option is chosen, ICU is disabled and most internationalization features mentioned above will be &lt;strong&gt;unavailable&lt;/strong&gt; in the resulting &lt;code&gt;node&lt;/code&gt; binary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a19ad792e4d182ce79c59a9ca23b96f01cbba405" translate="yes" xml:space="preserve">
          <source>If this option is chosen, most internationalization features mentioned above will be &lt;strong&gt;unavailable&lt;/strong&gt; in the resulting &lt;code&gt;node&lt;/code&gt; binary.</source>
          <target state="translated">如果选择此选项，则上面提到的大多数国际化功能将在结果 &lt;code&gt;node&lt;/code&gt; 二进制文件中&lt;strong&gt;不可用&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="500c44aa740b1f808b7a0f2ab5d42a89495c80b0" translate="yes" xml:space="preserve">
          <source>If this program is run with &lt;code&gt;NODE_DEBUG=foo&lt;/code&gt; in the environment, then it will output something like:</source>
          <target state="translated">如果此程序在环境中以 &lt;code&gt;NODE_DEBUG=foo&lt;/code&gt; 运行，则它将输出如下内容：</target>
        </trans-unit>
        <trans-unit id="bbb2d2d9aab2e6cdd4053fd254b4acb41df11a8c" translate="yes" xml:space="preserve">
          <source>If this thread is a &lt;a href=&quot;#worker_threads_class_worker&quot;&gt;&lt;code&gt;Worker&lt;/code&gt;&lt;/a&gt;, this is a &lt;a href=&quot;#worker_threads_class_messageport&quot;&gt;&lt;code&gt;MessagePort&lt;/code&gt;&lt;/a&gt; allowing communication with the parent thread. Messages sent using &lt;code&gt;parentPort.postMessage()&lt;/code&gt; are available in the parent thread using &lt;code&gt;worker.on('message')&lt;/code&gt;, and messages sent from the parent thread using &lt;code&gt;worker.postMessage()&lt;/code&gt; are available in this thread using &lt;code&gt;parentPort.on('message')&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae04778b2127a4288d498c5fee83b1c180563316" translate="yes" xml:space="preserve">
          <source>If this thread was spawned as a &lt;a href=&quot;#worker_threads_class_worker&quot;&gt;&lt;code&gt;Worker&lt;/code&gt;&lt;/a&gt;, this will be a &lt;a href=&quot;#worker_threads_class_messageport&quot;&gt;&lt;code&gt;MessagePort&lt;/code&gt;&lt;/a&gt; allowing communication with the parent thread. Messages sent using &lt;code&gt;parentPort.postMessage()&lt;/code&gt; will be available in the parent thread using &lt;code&gt;worker.on('message')&lt;/code&gt;, and messages sent from the parent thread using &lt;code&gt;worker.postMessage()&lt;/code&gt; will be available in this thread using &lt;code&gt;parentPort.on('message')&lt;/code&gt;.</source>
          <target state="translated">如果此线程是作为&lt;a href=&quot;#worker_threads_class_worker&quot;&gt; &lt;code&gt;Worker&lt;/code&gt; &lt;/a&gt;产生的，则它将是一个&lt;a href=&quot;#worker_threads_class_messageport&quot;&gt; &lt;code&gt;MessagePort&lt;/code&gt; ,&lt;/a&gt;允许与父线程进行通信。使用 &lt;code&gt;parentPort.postMessage()&lt;/code&gt; 发送的消息将在使用 &lt;code&gt;worker.on('message')&lt;/code&gt; 的父线程中可用，而使用 &lt;code&gt;worker.postMessage()&lt;/code&gt; 从父线程发送的消息将在该线程中使用 &lt;code&gt;parentPort.on('message')&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bc56c6fa0ffaae3cb37166a046e6a592fac511fd" translate="yes" xml:space="preserve">
          <source>If this was in a folder at &lt;code&gt;./some-library&lt;/code&gt;, then &lt;code&gt;require('./some-library')&lt;/code&gt; would attempt to load &lt;code&gt;./some-library/lib/some-library.js&lt;/code&gt;.</source>
          <target state="translated">如果它位于 &lt;code&gt;./some-library&lt;/code&gt; 的文件夹中，则 &lt;code&gt;require('./some-library')&lt;/code&gt; 将尝试加载 &lt;code&gt;./some-library/lib/some-library.js&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f24447a04296622991f6bf6fd22ce1eff8075cb0" translate="yes" xml:space="preserve">
          <source>If true, the &lt;code&gt;Immediate&lt;/code&gt; object will keep the Node.js event loop active.</source>
          <target state="translated">如果为true，则 &lt;code&gt;Immediate&lt;/code&gt; 对象将使Node.js事件循环保持活动状态。</target>
        </trans-unit>
        <trans-unit id="6bfdfe9d5a5d4ec04917fff9485b8abe04f4523b" translate="yes" xml:space="preserve">
          <source>If true, the &lt;code&gt;Timeout&lt;/code&gt; object will keep the Node.js event loop active.</source>
          <target state="translated">如果为true，则 &lt;code&gt;Timeout&lt;/code&gt; 对象将使Node.js事件循环保持活动状态。</target>
        </trans-unit>
        <trans-unit id="4d30f4ae940d81fef9d58173f937c6e90488a310" translate="yes" xml:space="preserve">
          <source>If using Perfect Forward Secrecy using &lt;code&gt;ECDHE&lt;/code&gt;, Diffie-Hellman parameters are not required and a default ECDHE curve will be used. The &lt;code&gt;ecdhCurve&lt;/code&gt; property can be used when creating a TLS Server to specify the list of names of supported curves to use, see &lt;a href=&quot;#tls_tls_createserver_options_secureconnectionlistener&quot;&gt;&lt;code&gt;tls.createServer()&lt;/code&gt;&lt;/a&gt; for more info.</source>
          <target state="translated">如果通过 &lt;code&gt;ECDHE&lt;/code&gt; 使用完全正向保密，则不需要Diffie-Hellman参数，并且将使用默认的ECDHE曲线。该 &lt;code&gt;ecdhCurve&lt;/code&gt; 属性可以创建一个TLS服务器指定支持的曲线，使用的名称列表时，可以使用，见&lt;a href=&quot;#tls_tls_createserver_options_secureconnectionlistener&quot;&gt; &lt;code&gt;tls.createServer()&lt;/code&gt; &lt;/a&gt;获取更多信息。</target>
        </trans-unit>
        <trans-unit id="7141d84e2c2fdb717376d2b2569b6326aa7d2535" translate="yes" xml:space="preserve">
          <source>If using perfect forward secrecy using &lt;code&gt;ECDHE&lt;/code&gt;, Diffie-Hellman parameters are not required and a default ECDHE curve will be used. The &lt;code&gt;ecdhCurve&lt;/code&gt; property can be used when creating a TLS Server to specify the list of names of supported curves to use, see &lt;a href=&quot;#tls_tls_createserver_options_secureconnectionlistener&quot;&gt;&lt;code&gt;tls.createServer()&lt;/code&gt;&lt;/a&gt; for more info.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f435cf016bb3848af3be13125a0963095befa409" translate="yes" xml:space="preserve">
          <source>If wait is &lt;code&gt;true&lt;/code&gt;, will block until a client has connected to the inspect port and flow control has been passed to the debugger client.</source>
          <target state="translated">如果wait为 &lt;code&gt;true&lt;/code&gt; ，则将阻塞，直到客户端已连接到检查端口并且流控制已传递给调试器客户端为止。</target>
        </trans-unit>
        <trans-unit id="7ec49b998fbf4e6aaa095e55b84d88c9c2f6edc6" translate="yes" xml:space="preserve">
          <source>If you intend for your module to produce diagnostics data for others to consume it is recommended that you include documentation of what named channels are used along with the shape of the message data. Channel names should generally include the module name to avoid collisions with data from other modules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d91ae8c7344f438f4b68baa4585ffcdbd09f34f" translate="yes" xml:space="preserve">
          <source>If you need to keep using callback-based API, or your code assumes a custom thenable implementation, use the &lt;a href=&quot;#async_hooks_class_asyncresource&quot;&gt;&lt;code&gt;AsyncResource&lt;/code&gt;&lt;/a&gt; class to associate the asynchronous operation with the correct execution context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="121d2a133df529636a3133c7f19553410022ce10" translate="yes" xml:space="preserve">
          <source>If your code is callback-based, it is enough to promisify it with &lt;a href=&quot;util#util_util_promisify_original&quot;&gt;&lt;code&gt;util.promisify()&lt;/code&gt;&lt;/a&gt;, so it starts working with native promises.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff92bf6b6790ad5534e9adfe6cd542093ec41214" translate="yes" xml:space="preserve">
          <source>If, after processing all given &lt;code&gt;path&lt;/code&gt; segments, an absolute path has not yet been generated, the current working directory is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb55778c3d32ddfa125fd33521937cb25ae4bdce" translate="yes" xml:space="preserve">
          <source>If, within an async function, only one &lt;code&gt;await&lt;/code&gt; call is to run within a context, the following pattern should be used:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="868930280894191b54d63d2127ac6fdebf557223" translate="yes" xml:space="preserve">
          <source>Immediate</source>
          <target state="translated">Immediate</target>
        </trans-unit>
        <trans-unit id="ef70f1951457da5e8c2ceb794366acfb2b9f1c46" translate="yes" xml:space="preserve">
          <source>Immediately close the session. All pending message callbacks will be called with an error. &lt;a href=&quot;#inspector_session_connect&quot;&gt;&lt;code&gt;session.connect()&lt;/code&gt;&lt;/a&gt; will need to be called to be able to send messages again. Reconnected session will lose all inspector state, such as enabled agents or configured breakpoints.</source>
          <target state="translated">立即关闭会话。所有待处理的消息回调将被调用，并显示一个错误。需要调用&lt;a href=&quot;#inspector_session_connect&quot;&gt; &lt;code&gt;session.connect()&lt;/code&gt; &lt;/a&gt;才能再次发送消息。重新连接的会话将丢失所有检查器状态，例如启用的代理或配置的断点。</target>
        </trans-unit>
        <trans-unit id="a99a34a2338aa3ca62a62f452af4cdab32edc49b" translate="yes" xml:space="preserve">
          <source>Immediately terminates the &lt;code&gt;Http2Session&lt;/code&gt; and the associated &lt;code&gt;net.Socket&lt;/code&gt; or &lt;code&gt;tls.TLSSocket&lt;/code&gt;.</source>
          <target state="translated">立即终止 &lt;code&gt;Http2Session&lt;/code&gt; 和关联的 &lt;code&gt;net.Socket&lt;/code&gt; 或 &lt;code&gt;tls.TLSSocket&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="61ac561b2af3d0aa0533d990f88aeb544ebb6302" translate="yes" xml:space="preserve">
          <source>Implement conditional exports.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac0be27861ebce466e57894de0545769251301b3" translate="yes" xml:space="preserve">
          <source>Implement logical conditional exports ordering.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7830d9e83bdb571cca1e50f542e8516184aeb2bf" translate="yes" xml:space="preserve">
          <source>Implementation considerations</source>
          <target state="translated">执行方面的考虑</target>
        </trans-unit>
        <trans-unit id="634778886a41465d653b4d3a526333668ae37b90" translate="yes" xml:space="preserve">
          <source>Implementation does not test the &lt;a href=&quot;https://tc39.github.io/ecma262/#sec-ordinary-object-internal-methods-and-internal-slots&quot;&gt;&lt;code&gt;[[Prototype]]&lt;/code&gt;&lt;/a&gt; of objects.</source>
          <target state="translated">实现不测试对象的&lt;a href=&quot;https://tc39.github.io/ecma262/#sec-ordinary-object-internal-methods-and-internal-slots&quot;&gt; &lt;code&gt;[[Prototype]]&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ebd8293192193a3da2c48647fd3b6fba3cc9add9" translate="yes" xml:space="preserve">
          <source>Implementations of this function must avoid making N-API calls that execute JavaScript or interact with JavaScript objects. N-API calls should be in the &lt;code&gt;napi_async_complete_callback&lt;/code&gt; instead. Do not use the &lt;code&gt;napi_env&lt;/code&gt; parameter as it will likely result in execution of JavaScript.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b6d9cd007a22716a471f704b1a6cc1b7798fc03" translate="yes" xml:space="preserve">
          <source>Implementations of this type of function should avoid making any N-API calls that could result in the execution of JavaScript or interaction with JavaScript objects. Most often, any code that needs to make N-API calls should be made in &lt;code&gt;napi_async_complete_callback&lt;/code&gt; instead. Avoid using the &lt;code&gt;napi_env&lt;/code&gt; parameter in the execute callback as it will likely execute JavaScript.</source>
          <target state="translated">此类函数的实现应避免进行任何可能导致JavaScript执行或与JavaScript对象交互的N-API调用。通常，任何需要进行N-API调用的代码 &lt;code&gt;napi_async_complete_callback&lt;/code&gt; 改为在napi_async_complete_callback中进行。避免在execute回调中使用 &lt;code&gt;napi_env&lt;/code&gt; 参数，因为它可能会执行JavaScript。</target>
        </trans-unit>
        <trans-unit id="faf48c742a3c8cab6d288870f7e9087dc4b107e3" translate="yes" xml:space="preserve">
          <source>Implementing a Duplex Stream</source>
          <target state="translated">实现双工流</target>
        </trans-unit>
        <trans-unit id="db85aacb4826a9682bbc4755f7b18287b8212229" translate="yes" xml:space="preserve">
          <source>Implementing a Readable Stream</source>
          <target state="translated">实现可读流</target>
        </trans-unit>
        <trans-unit id="a5a17668a54393ad9d8a2818f383b3289899b323" translate="yes" xml:space="preserve">
          <source>Implementing a Transform Stream</source>
          <target state="translated">实现一个转换流</target>
        </trans-unit>
        <trans-unit id="03961dad0ca35871550bb64b77b7602fe30a905c" translate="yes" xml:space="preserve">
          <source>Implementing a Writable Stream</source>
          <target state="translated">实现一个可写流</target>
        </trans-unit>
        <trans-unit id="facde054e9e2d009e7af73a9afa36e32825f5448" translate="yes" xml:space="preserve">
          <source>Implementing a duplex stream</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b3a6269a6abcc8faa06ed8949790459f3fb4dcb" translate="yes" xml:space="preserve">
          <source>Implementing a readable stream</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8937f8c725f3f756c80a6fc4c454f66ce4301e3" translate="yes" xml:space="preserve">
          <source>Implementing a transform stream</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ac478c96bba4b13f55b149b0bc50ffaa26643e6" translate="yes" xml:space="preserve">
          <source>Implementing a writable stream</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24158ac8b52526396a1d846f3f7fe2a89a3207a1" translate="yes" xml:space="preserve">
          <source>Implementors should not override this method, but instead implement &lt;a href=&quot;#stream_readable_destroy_err_callback&quot;&gt;&lt;code&gt;readable._destroy()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="414c6b495e83ad2649c91b0478470c80a912e404" translate="yes" xml:space="preserve">
          <source>Implementors should not override this method, but instead implement &lt;a href=&quot;#stream_writable_destroy_err_callback&quot;&gt;&lt;code&gt;writable._destroy()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b72b192149e114c030ffa08bb6d7f33fa1da0cd" translate="yes" xml:space="preserve">
          <source>Implications of ABI Stability</source>
          <target state="translated">ABI稳定性的影响</target>
        </trans-unit>
        <trans-unit id="c58283f97ee77608c6bf6b2d12793df5d7e1d959" translate="yes" xml:space="preserve">
          <source>Implications of ABI stability</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5868306e35f5ed89a827d7088b357d35fdb7d9c" translate="yes" xml:space="preserve">
          <source>Implicit Binding</source>
          <target state="translated">隐性约束</target>
        </trans-unit>
        <trans-unit id="1755f85cb8b44fb3483bbcb74852f951b95f7a93" translate="yes" xml:space="preserve">
          <source>Implicit binding</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38c43897c9e7ad17a3fff4ee301c220a1f8ca4ce" translate="yes" xml:space="preserve">
          <source>Implicit binding routes thrown errors and &lt;code&gt;'error'&lt;/code&gt; events to the &lt;code&gt;Domain&lt;/code&gt;'s &lt;code&gt;'error'&lt;/code&gt; event, but does not register the &lt;code&gt;EventEmitter&lt;/code&gt; on the &lt;code&gt;Domain&lt;/code&gt;. Implicit binding only takes care of thrown errors and &lt;code&gt;'error'&lt;/code&gt; events.</source>
          <target state="translated">隐式绑定将抛出的错误和 &lt;code&gt;'error'&lt;/code&gt; 事件路由到 &lt;code&gt;Domain&lt;/code&gt; 的 &lt;code&gt;'error'&lt;/code&gt; 事件，但未在 &lt;code&gt;Domain&lt;/code&gt; 上注册 &lt;code&gt;EventEmitter&lt;/code&gt; 。隐式绑定仅处理引发的错误和 &lt;code&gt;'error'&lt;/code&gt; 事件。</target>
        </trans-unit>
        <trans-unit id="7eccc8d808af7ec8041e3741f9d5bd71307f86ba" translate="yes" xml:space="preserve">
          <source>Implicit conversion of variable value to string is deprecated.</source>
          <target state="translated">隐式将变量值转换为字符串已被废弃。</target>
        </trans-unit>
        <trans-unit id="b9611babfecccecf8b0959b746b13487f172df7d" translate="yes" xml:space="preserve">
          <source>Import maps permit mapping to external packages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fac758850e503d7a4b5403c1e169e629ed31d72d" translate="yes" xml:space="preserve">
          <source>Importing Web Assembly modules is supported under the &lt;code&gt;--experimental-wasm-modules&lt;/code&gt; flag, allowing any &lt;code&gt;.wasm&lt;/code&gt; files to be imported as normal modules while also supporting their module imports.</source>
          <target state="translated">&lt;code&gt;--experimental-wasm-modules&lt;/code&gt; 标志下支持导入Web Assembly模块，允许将任何 &lt;code&gt;.wasm&lt;/code&gt; 文件作为常规模块导入，同时还支持其模块导入。</target>
        </trans-unit>
        <trans-unit id="5d0995ca6d1b678abda226f52f7ccf1e681292bd" translate="yes" xml:space="preserve">
          <source>Importing assert directly was not recommended as the exposed functions use loose equality checks. The deprecation was revoked because use of the &lt;code&gt;assert&lt;/code&gt; module is not discouraged, and the deprecation caused developer confusion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7345227f7378a415d72e584bcb83fb5f70dfbf9d" translate="yes" xml:space="preserve">
          <source>Importing assert directly was not recommended as the exposed functions use loose equality checks. The deprecation was revoked because use of the &lt;code&gt;assert&lt;/code&gt; module is not discouraged, and the deprecation caused end user confusion.</source>
          <target state="translated">不建议直接导入断言，因为公开的函数使用松散的相等性检查。由于不鼓励使用 &lt;code&gt;assert&lt;/code&gt; 模块，因此取消了弃用，并且弃用导致最终用户感到困惑。</target>
        </trans-unit>
        <trans-unit id="719f27a57e84457bcd0681fc9a845a1f86dcefe3" translate="yes" xml:space="preserve">
          <source>Impose new restrictions on &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt;, throwing more appropriate errors in cases when we cannot reasonably handle the input values.</source>
          <target state="translated">对 &lt;code&gt;start&lt;/code&gt; 和 &lt;code&gt;end&lt;/code&gt; 施加新的限制，在无法合理处理输入值的情况下引发更适当的错误。</target>
        </trans-unit>
        <trans-unit id="fc0a6a13b4155e379d15b548250d87be9841ca3e" translate="yes" xml:space="preserve">
          <source>In &quot;old&quot; streams mode the &lt;code&gt;stdin&lt;/code&gt; stream is paused by default, so one must call &lt;code&gt;process.stdin.resume()&lt;/code&gt; to read from it. Note also that calling &lt;code&gt;process.stdin.resume()&lt;/code&gt; itself would switch stream to &quot;old&quot; mode.</source>
          <target state="translated">在&amp;ldquo;旧&amp;rdquo;流模式下，默认情况下 &lt;code&gt;stdin&lt;/code&gt; 流已暂停，因此必须调用 &lt;code&gt;process.stdin.resume()&lt;/code&gt; 进行读取。还要注意，调用 &lt;code&gt;process.stdin.resume()&lt;/code&gt; 本身会将流切换到&amp;ldquo;旧&amp;rdquo;模式。</target>
        </trans-unit>
        <trans-unit id="83410f354c55a4241f9c563148181123808a776c" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;worker_threads#worker_threads_class_worker&quot;&gt;&lt;code&gt;Worker&lt;/code&gt;&lt;/a&gt; threads, &lt;code&gt;process.umask(mask)&lt;/code&gt; will throw an exception.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27679f0db56c1c9325293a60e2506baf9182ffc5" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;worker_threads#worker_threads_class_worker&quot;&gt;&lt;code&gt;Worker&lt;/code&gt;&lt;/a&gt; threads, this function stops the current thread rather than the current process.</source>
          <target state="translated">在&lt;a href=&quot;worker_threads#worker_threads_class_worker&quot;&gt; &lt;code&gt;Worker&lt;/code&gt; &lt;/a&gt;线程中，此函数将停止当前线程，而不是当前进程。</target>
        </trans-unit>
        <trans-unit id="2b5b31a009a869ce0f6f2aa3aa25bde8d5d67b27" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;entry.js&lt;/code&gt; script:</source>
          <target state="translated">在 &lt;code&gt;entry.js&lt;/code&gt; 脚本中：</target>
        </trans-unit>
        <trans-unit id="83ea6fb909458a63c93528b9278d2aea405239a1" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;myobject.cc&lt;/code&gt;, implement the various methods that are to be exposed. Below, the method &lt;code&gt;plusOne()&lt;/code&gt; is exposed by adding it to the constructor's prototype:</source>
          <target state="translated">在 &lt;code&gt;myobject.cc&lt;/code&gt; 中，实现要公开的各种方法。下面，通过将方法 &lt;code&gt;plusOne()&lt;/code&gt; 添加到构造函数的原型中来进行展示：</target>
        </trans-unit>
        <trans-unit id="b569f0f01f808badd954c94c4b5ec2b3df4219a8" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;myobject.h&lt;/code&gt;, a new public method is added to allow access to private values after unwrapping the object.</source>
          <target state="translated">在 &lt;code&gt;myobject.h&lt;/code&gt; 中，添加了一个新的public方法，以允许在展开对象后访问私有值。</target>
        </trans-unit>
        <trans-unit id="0bd614b7bbedcda99d367f704661d8a38b80d19b" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;myobject.h&lt;/code&gt;, the static method &lt;code&gt;NewInstance()&lt;/code&gt; is added to handle instantiating the object. This method takes the place of using &lt;code&gt;new&lt;/code&gt; in JavaScript:</source>
          <target state="translated">在 &lt;code&gt;myobject.h&lt;/code&gt; 中，添加了静态方法 &lt;code&gt;NewInstance()&lt;/code&gt; 来处理实例化该对象。此方法代替了在JavaScript 中使用 &lt;code&gt;new&lt;/code&gt; 的方法：</target>
        </trans-unit>
        <trans-unit id="8b7f16901fb8e1d9d147d2658de11399ce8f4cc3" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;recursive&lt;/code&gt; mode, the callback now receives the first created path as an argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f7911bdacbc7cdb4fd6e24333b5a68b6b0e94c6" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;recursive&lt;/code&gt; mode, the first created path is returned now.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13a521caf867f14b672bcba06c835d82f3666953" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;strict&lt;/code&gt; mode, &lt;code&gt;assert&lt;/code&gt; functions use the comparison in the corresponding strict functions. For example, &lt;a href=&quot;#assert_assert_deepequal_actual_expected_message&quot;&gt;&lt;code&gt;assert.deepEqual()&lt;/code&gt;&lt;/a&gt; will behave like &lt;a href=&quot;#assert_assert_deepstrictequal_actual_expected_message&quot;&gt;&lt;code&gt;assert.deepStrictEqual()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在 &lt;code&gt;strict&lt;/code&gt; 模式下， &lt;code&gt;assert&lt;/code&gt; 函数在相应的严格函数中使用比较。例如，&lt;a href=&quot;#assert_assert_deepequal_actual_expected_message&quot;&gt; &lt;code&gt;assert.deepEqual()&lt;/code&gt; 的&lt;/a&gt;行为类似于&lt;a href=&quot;#assert_assert_deepstrictequal_actual_expected_message&quot;&gt; &lt;code&gt;assert.deepStrictEqual()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cbda2fb906abaf4d990f04c00aee85dda9e4e31b" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;strict&lt;/code&gt; mode, error messages for objects display a diff. In legacy mode, error messages for objects display the objects, often truncated.</source>
          <target state="translated">在 &lt;code&gt;strict&lt;/code&gt; 模式下，对象的错误消息显示差异。在传统模式下，对象的错误消息显示对象，通常将其截断。</target>
        </trans-unit>
        <trans-unit id="43a752735db76822b3df812a4e23e21c8db8bd00" translate="yes" xml:space="preserve">
          <source>In HTTP/2, the request path, host name, protocol, and method are represented as special headers prefixed with the &lt;code&gt;:&lt;/code&gt; character (e.g. &lt;code&gt;':path'&lt;/code&gt;). These special headers will be included in the &lt;code&gt;request.headers&lt;/code&gt; object. Care must be taken not to inadvertently modify these special headers or errors may occur. For instance, removing all headers from the request will cause errors to occur:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cedb49bba43339d6f4d8ab4643cc70bc8770d4d" translate="yes" xml:space="preserve">
          <source>In HTTP/2, the request path, hostname, protocol, and method are represented as special headers prefixed with the &lt;code&gt;:&lt;/code&gt; character (e.g. &lt;code&gt;':path'&lt;/code&gt;). These special headers will be included in the &lt;code&gt;request.headers&lt;/code&gt; object. Care must be taken not to inadvertently modify these special headers or errors may occur. For instance, removing all headers from the request will cause errors to occur:</source>
          <target state="translated">在HTTP / 2中，请求路径，主机名，协议和方法表示为以 &lt;code&gt;:&lt;/code&gt; 字符为前缀的特殊标头（例如 &lt;code&gt;':path'&lt;/code&gt; ）。这些特殊的标头将包含在 &lt;code&gt;request.headers&lt;/code&gt; 对象中。必须注意不要无意间修改这些特殊标题，否则可能会发生错误。例如，从请求中删除所有标头将导致发生错误：</target>
        </trans-unit>
        <trans-unit id="e2cd10f4ffa78b420a67631c95f5747ddf8e5371" translate="yes" xml:space="preserve">
          <source>In Node.js 0.10, the &lt;a href=&quot;#stream_class_stream_readable&quot;&gt;&lt;code&gt;Readable&lt;/code&gt;&lt;/a&gt; class was added. For backward compatibility with older Node.js programs, &lt;code&gt;Readable&lt;/code&gt; streams switch into &quot;flowing mode&quot; when a &lt;a href=&quot;#stream_event_data&quot;&gt;&lt;code&gt;'data'&lt;/code&gt;&lt;/a&gt; event handler is added, or when the &lt;a href=&quot;#stream_readable_resume&quot;&gt;&lt;code&gt;stream.resume()&lt;/code&gt;&lt;/a&gt; method is called. The effect is that, even when not using the new &lt;a href=&quot;#stream_readable_read_size&quot;&gt;&lt;code&gt;stream.read()&lt;/code&gt;&lt;/a&gt; method and &lt;a href=&quot;#stream_event_readable&quot;&gt;&lt;code&gt;'readable'&lt;/code&gt;&lt;/a&gt; event, it is no longer necessary to worry about losing &lt;a href=&quot;#stream_event_data&quot;&gt;&lt;code&gt;'data'&lt;/code&gt;&lt;/a&gt; chunks.</source>
          <target state="translated">在Node.js 0.10中，添加了&lt;a href=&quot;#stream_class_stream_readable&quot;&gt; &lt;code&gt;Readable&lt;/code&gt; &lt;/a&gt;类。为了与较旧的Node.js程序向后兼容，当添加&lt;a href=&quot;#stream_event_data&quot;&gt; &lt;code&gt;'data'&lt;/code&gt; &lt;/a&gt;事件处理程序或调用&lt;a href=&quot;#stream_readable_resume&quot;&gt; &lt;code&gt;stream.resume()&lt;/code&gt; &lt;/a&gt;方法时， &lt;code&gt;Readable&lt;/code&gt; 流将切换为&amp;ldquo;流模式&amp;rdquo; 。结果是，即使不使用新的&lt;a href=&quot;#stream_readable_read_size&quot;&gt; &lt;code&gt;stream.read()&lt;/code&gt; &lt;/a&gt;方法和&lt;a href=&quot;#stream_event_readable&quot;&gt; &lt;code&gt;'readable'&lt;/code&gt; &lt;/a&gt;事件，也不必担心丢失&lt;a href=&quot;#stream_event_data&quot;&gt; &lt;code&gt;'data'&lt;/code&gt; &lt;/a&gt;块。</target>
        </trans-unit>
        <trans-unit id="6ec913d843e5ce0486a69aa4f80f551326e2892c" translate="yes" xml:space="preserve">
          <source>In Node.js versions prior to v15.0.0, the error code being used here was &lt;a href=&quot;#ERR_MISSING_MESSAGE_PORT_IN_TRANSFER_LIST&quot;&gt;&lt;code&gt;ERR_MISSING_MESSAGE_PORT_IN_TRANSFER_LIST&lt;/code&gt;&lt;/a&gt;. However, the set of transferable object types has been expanded to cover more types than &lt;code&gt;MessagePort&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2907f0887fd67060d1c8b859ffab65821bd5c8a" translate="yes" xml:space="preserve">
          <source>In V8, a context is an execution environment that allows separate, unrelated, JavaScript applications to run in a single instance of V8. You must explicitly specify the context in which you want any JavaScript code to be run.</source>
          <target state="translated">在V8中,上下文是一种执行环境,它允许单独的、不相关的JavaScript应用程序在V8的单个实例中运行。你必须明确地指定要运行任何JavaScript代码的上下文。</target>
        </trans-unit>
        <trans-unit id="f3d8bc4ddec331ca5a88314794e8687bdb713403" translate="yes" xml:space="preserve">
          <source>In a package&amp;rsquo;s &lt;code&gt;package.json&lt;/code&gt; file, two fields can define entry points for a package: &lt;a href=&quot;#packages_main&quot;&gt;&lt;code&gt;&quot;main&quot;&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#packages_exports&quot;&gt;&lt;code&gt;&quot;exports&quot;&lt;/code&gt;&lt;/a&gt;. The &lt;a href=&quot;#packages_main&quot;&gt;&lt;code&gt;&quot;main&quot;&lt;/code&gt;&lt;/a&gt; field is supported in all versions of Node.js, but its capabilities are limited: it only defines the main entry point of the package.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f608ecc99c06cfa50baaffc2c3cd8fff338f4fc" translate="yes" xml:space="preserve">
          <source>In a successful request, the following events will be emitted in the following order:</source>
          <target state="translated">在一个成功的请求中,以下事件将按以下顺序发出。</target>
        </trans-unit>
        <trans-unit id="cf790810b2507f884c03af267a9c95a2dbc7ba26" translate="yes" xml:space="preserve">
          <source>In a worker this sends a message to the master. It is identical to &lt;code&gt;process.send()&lt;/code&gt;.</source>
          <target state="translated">在工作者中，这会向主服务器发送一条消息。它与 &lt;code&gt;process.send()&lt;/code&gt; 相同。</target>
        </trans-unit>
        <trans-unit id="89f9cefb5509de84f4d3b8e9ae50db89a7da0b91" translate="yes" xml:space="preserve">
          <source>In a worker, &lt;code&gt;process.disconnect&lt;/code&gt; exists, but it is not this function; it is &lt;a href=&quot;child_process#child_process_subprocess_disconnect&quot;&gt;&lt;code&gt;disconnect()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在工作 &lt;code&gt;process.disconnect&lt;/code&gt; 存在process.disconnect，但这不是此功能；它是&lt;a href=&quot;child_process#child_process_subprocess_disconnect&quot;&gt; &lt;code&gt;disconnect()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6635bab64752609670a0d11b7b0ac6ba30c036b1" translate="yes" xml:space="preserve">
          <source>In a worker, &lt;code&gt;process.kill()&lt;/code&gt; exists, but it is not this function; it is &lt;a href=&quot;process#process_process_kill_pid_signal&quot;&gt;&lt;code&gt;kill()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在工作程序中，存在 &lt;code&gt;process.kill()&lt;/code&gt; ，但它不是此函数；它是&lt;a href=&quot;process#process_process_kill_pid_signal&quot;&gt; &lt;code&gt;kill()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="188dc51b267f1ce409fcd61f18bf1777940cfa1c" translate="yes" xml:space="preserve">
          <source>In a worker, this function will close all servers, wait for the &lt;code&gt;'close'&lt;/code&gt; event on those servers, and then disconnect the IPC channel.</source>
          <target state="translated">在工作服务器中，此功能将关闭所有服务器，等待这些服务器上的 &lt;code&gt;'close'&lt;/code&gt; 事件，然后断开IPC通道。</target>
        </trans-unit>
        <trans-unit id="c45585efffb25f706fc168893be3eee9fb3732c3" translate="yes" xml:space="preserve">
          <source>In accordance with browser conventions, all properties of &lt;code&gt;URL&lt;/code&gt; objects are implemented as getters and setters on the class prototype, rather than as data properties on the object itself. Thus, unlike &lt;a href=&quot;#url_legacy_urlobject&quot;&gt;legacy &lt;code&gt;urlObject&lt;/code&gt;&lt;/a&gt;s, using the &lt;code&gt;delete&lt;/code&gt; keyword on any properties of &lt;code&gt;URL&lt;/code&gt; objects (e.g. &lt;code&gt;delete myURL.protocol&lt;/code&gt;, &lt;code&gt;delete myURL.pathname&lt;/code&gt;, etc) has no effect but will still return &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">根据浏览器约定， &lt;code&gt;URL&lt;/code&gt; 对象的所有属性都实现为类原型上的getter和setter，而不是对象本身的数据属性。因此，与&lt;a href=&quot;#url_legacy_urlobject&quot;&gt;旧版 &lt;code&gt;urlObject&lt;/code&gt; &lt;/a&gt;不同，在 &lt;code&gt;URL&lt;/code&gt; 对象的任何属性（例如 &lt;code&gt;delete myURL.protocol&lt;/code&gt; ， &lt;code&gt;delete myURL.pathname&lt;/code&gt; 等）上使用 &lt;code&gt;delete&lt;/code&gt; 关键字无效，但仍会返回 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4c7734f0b3567b3c7b9193631a31766ec4ead09b" translate="yes" xml:space="preserve">
          <source>In addition to being accessible through &lt;code&gt;util.inspect.custom&lt;/code&gt;, this symbol is &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol/for&quot;&gt;registered globally&lt;/a&gt; and can be accessed in any environment as &lt;code&gt;Symbol.for('nodejs.util.inspect.custom')&lt;/code&gt;.</source>
          <target state="translated">除了可以通过 &lt;code&gt;util.inspect.custom&lt;/code&gt; 进行访问之外，该符号是&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol/for&quot;&gt;全局注册的，&lt;/a&gt;并且可以在任何环境中作为 &lt;code&gt;Symbol.for('nodejs.util.inspect.custom')&lt;/code&gt; 进行访问。</target>
        </trans-unit>
        <trans-unit id="bb42d431dbb8dd60cb5da5552ac7c99e0c05dcb2" translate="yes" xml:space="preserve">
          <source>In addition to being accessible through &lt;code&gt;util.promisify.custom&lt;/code&gt;, this symbol is &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol/for&quot;&gt;registered globally&lt;/a&gt; and can be accessed in any environment as &lt;code&gt;Symbol.for('nodejs.util.promisify.custom')&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a017a14a50b8af7f35bbfe35a7128002e7b0433" translate="yes" xml:space="preserve">
          <source>In addition to defining an alias, subpaths not defined by &lt;code&gt;&quot;exports&quot;&lt;/code&gt; will throw when an attempt is made to import them:</source>
          <target state="translated">除了定义别名之外，当尝试导入它们时，未由 &lt;code&gt;&quot;exports&quot;&lt;/code&gt; 定义的子路径也会抛出：</target>
        </trans-unit>
        <trans-unit id="ec37922ca0e62e70ed6bb763b482389137379290" translate="yes" xml:space="preserve">
          <source>In addition to direct mappings, Node.js also supports nested condition objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87788a1c64b835765d4d327b936fd17de0ba8095" translate="yes" xml:space="preserve">
          <source>In addition to new &lt;code&gt;Readable&lt;/code&gt; streams switching into flowing mode, pre-0.10 style streams can be wrapped in a &lt;code&gt;Readable&lt;/code&gt; class using the &lt;a href=&quot;#stream_readable_wrap_stream&quot;&gt;&lt;code&gt;readable.wrap()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">除了新的 &lt;code&gt;Readable&lt;/code&gt; 流切换为流动模式外，还可以使用&lt;a href=&quot;#stream_readable_wrap_stream&quot;&gt; &lt;code&gt;readable.wrap()&lt;/code&gt; &lt;/a&gt;方法将0.10之前的样式流包装到 &lt;code&gt;Readable&lt;/code&gt; 类中。</target>
        </trans-unit>
        <trans-unit id="531fe4364b08e0a91d004f6c008a9907fd321d5e" translate="yes" xml:space="preserve">
          <source>In addition to returning the resolved file URL value, the resolve hook also returns a &lt;code&gt;format&lt;/code&gt; property specifying the module format of the resolved module. This can be one of the following:</source>
          <target state="translated">除了返回解析的文件URL值之外，解析挂钩还返回一个 &lt;code&gt;format&lt;/code&gt; 属性，该属性指定解析模块的模块格式。可以是以下之一：</target>
        </trans-unit>
        <trans-unit id="3d9073ec95fdd950b7d180fdae1aaadb4dc002b4" translate="yes" xml:space="preserve">
          <source>In addition to the &lt;a href=&quot;#packages_exports&quot;&gt;&lt;code&gt;&quot;exports&quot;&lt;/code&gt;&lt;/a&gt; field, it is possible to define internal package import maps that only apply to import specifiers from within the package itself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9b72f820929e77bac018c0ca5b3cc4d77951c0c" translate="yes" xml:space="preserve">
          <source>In addition to wrapping and returning C++ objects, it is possible to pass wrapped objects around by unwrapping them with the Node.js helper function &lt;code&gt;node::ObjectWrap::Unwrap&lt;/code&gt;. The following examples shows a function &lt;code&gt;add()&lt;/code&gt; that can take two &lt;code&gt;MyObject&lt;/code&gt; objects as input arguments:</source>
          <target state="translated">除了包装和返回C ++对象之外，还可以通过使用Node.js帮助器函数 &lt;code&gt;node::ObjectWrap::Unwrap&lt;/code&gt; 包装的对象来传递包装的对象。下面的示例显示一个函数 &lt;code&gt;add()&lt;/code&gt; ，该函数可以将两个 &lt;code&gt;MyObject&lt;/code&gt; 对象用作输入参数：</target>
        </trans-unit>
        <trans-unit id="3250b3c9156a53b11995d8b61bc7651346b38dd6" translate="yes" xml:space="preserve">
          <source>In an earlier version of the Node.js &lt;code&gt;cluster&lt;/code&gt;, a boolean property with the name &lt;code&gt;suicide&lt;/code&gt; was added to the &lt;code&gt;Worker&lt;/code&gt; object. The intent of this property was to provide an indication of how and why the &lt;code&gt;Worker&lt;/code&gt; instance exited. In Node.js 6.0.0, the old property was deprecated and replaced with a new &lt;a href=&quot;cluster#cluster_worker_exitedafterdisconnect&quot;&gt;&lt;code&gt;worker.exitedAfterDisconnect&lt;/code&gt;&lt;/a&gt; property. The old property name did not precisely describe the actual semantics and was unnecessarily emotion-laden.</source>
          <target state="translated">在Node.js &lt;code&gt;cluster&lt;/code&gt; 的早期版本中，将名为 &lt;code&gt;suicide&lt;/code&gt; 的布尔属性添加到 &lt;code&gt;Worker&lt;/code&gt; 对象。此属性的目的是提供有关 &lt;code&gt;Worker&lt;/code&gt; 实例如何以及为何退出的指示。在Node.js 6.0.0中，旧的属性已弃用，并用新的&lt;a href=&quot;cluster#cluster_worker_exitedafterdisconnect&quot;&gt; &lt;code&gt;worker.exitedAfterDisconnect&lt;/code&gt; &lt;/a&gt;属性代替。旧的属性名称无法准确描述实际的语义，并且不必要地充满了情感。</target>
        </trans-unit>
        <trans-unit id="45f34b6c8dddeb170b4ea2c2a91a4f0f3bf29b30" translate="yes" xml:space="preserve">
          <source>In asynchronous code, the &lt;code&gt;'unhandledRejection'&lt;/code&gt; event is emitted when the list of unhandled rejections grows, and the &lt;code&gt;'rejectionHandled'&lt;/code&gt; event is emitted when the list of unhandled rejections shrinks.</source>
          <target state="translated">在异步代码中，当未处理拒绝的列表增加时，将发出 &lt;code&gt;'unhandledRejection'&lt;/code&gt; 事件，而当未处理拒绝的列表缩小时，将发出 &lt;code&gt;'rejectionHandled'&lt;/code&gt; 事件。</target>
        </trans-unit>
        <trans-unit id="30fe6e0dbb3ad0e70ec0d1b125ead1922456d17e" translate="yes" xml:space="preserve">
          <source>In browsers, the top-level scope is the global scope. This means that within the browser &lt;code&gt;var something&lt;/code&gt; will define a new global variable. In Node.js this is different. The top-level scope is not the global scope; &lt;code&gt;var something&lt;/code&gt; inside a Node.js module will be local to that module.</source>
          <target state="translated">在浏览器中，顶级范围是全局范围。这意味着在浏览器 &lt;code&gt;var something&lt;/code&gt; 中将定义新的全局变量。在Node.js中，这是不同的。顶级范围不是全局范围； &lt;code&gt;var something&lt;/code&gt; Node.js模块内部的某些内容对于该模块而言是本地的。</target>
        </trans-unit>
        <trans-unit id="6d0d858774c88480d91a106fadc1779bc8dd52cc" translate="yes" xml:space="preserve">
          <source>In busy processes, use the asynchronous versions of these calls. The synchronous versions will block the entire process until they complete, halting all connections.</source>
          <target state="translated">在繁忙的进程中,使用这些调用的异步版本。同步版本会阻塞整个进程,直到它们完成,停止所有连接。</target>
        </trans-unit>
        <trans-unit id="a6dde02e444feeff7342a6c14a7993d14efd44e6" translate="yes" xml:space="preserve">
          <source>In case an option value happens to contain a space (for example a path listed in &lt;code&gt;--require&lt;/code&gt;), it must be escaped using double quotes. For example:</source>
          <target state="translated">如果选项值恰好包含空格（例如 &lt;code&gt;--require&lt;/code&gt; 中列出的路径），则必须使用双引号将其转义。例如：</target>
        </trans-unit>
        <trans-unit id="15c9b09b7cd71bda560724b30fa35f7d291b25b6" translate="yes" xml:space="preserve">
          <source>In case if &lt;code&gt;callback&lt;/code&gt; is not a function, a new &lt;code&gt;ERR_INVALID_CALLBACK&lt;/code&gt; error will be thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a549d05af2ccfc0ca015a5a981e3076d4f98a52b" translate="yes" xml:space="preserve">
          <source>In case of an error status code, additional information can be obtained using &lt;code&gt;napi_get_last_error_info&lt;/code&gt;. More information can be found in the error handling section &lt;a href=&quot;#n_api_error_handling&quot;&gt;Error Handling&lt;/a&gt;.</source>
          <target state="translated">如果有错误状态代码，则可以使用 &lt;code&gt;napi_get_last_error_info&lt;/code&gt; 获得其他信息。可以在错误处理部分&amp;ldquo; &lt;a href=&quot;#n_api_error_handling&quot;&gt;错误处理&amp;rdquo;中&lt;/a&gt;找到更多信息。</target>
        </trans-unit>
        <trans-unit id="9788bf70d68a70d51e5e80b5a843e841d7c07e6d" translate="yes" xml:space="preserve">
          <source>In case of an error status code, additional information can be obtained using &lt;code&gt;napi_get_last_error_info&lt;/code&gt;. More information can be found in the error handling section &lt;a href=&quot;#n_api_error_handling&quot;&gt;Error handling&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60a7a3354fb49e4ea54bdc9ce39be38347f08d3e" translate="yes" xml:space="preserve">
          <source>In case of an error, the &lt;code&gt;err.code&lt;/code&gt; will be one of &lt;a href=&quot;errors#errors_common_system_errors&quot;&gt;Common System Errors&lt;/a&gt;.</source>
          <target state="translated">如果发生错误，则 &lt;code&gt;err.code&lt;/code&gt; 将是&lt;a href=&quot;errors#errors_common_system_errors&quot;&gt;Common System Errors之一&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="83638801ee92420c039136960543463b06296385" translate="yes" xml:space="preserve">
          <source>In case of inactivity, the rules defined in &lt;a href=&quot;#http_server_timeout&quot;&gt;&lt;code&gt;server.timeout&lt;/code&gt;&lt;/a&gt; apply. However, that inactivity based timeout would still allow the connection to be kept open if the headers are being sent very slowly (by default, up to a byte per 2 minutes). In order to prevent this, whenever header data arrives an additional check is made that more than &lt;code&gt;server.headersTimeout&lt;/code&gt; milliseconds has not passed since the connection was established. If the check fails, a &lt;code&gt;'timeout'&lt;/code&gt; event is emitted on the server object, and (by default) the socket is destroyed. See &lt;a href=&quot;#http_server_timeout&quot;&gt;&lt;code&gt;server.timeout&lt;/code&gt;&lt;/a&gt; for more information on how timeout behavior can be customized.</source>
          <target state="translated">在不活动的情况下，将应用&lt;a href=&quot;#http_server_timeout&quot;&gt; &lt;code&gt;server.timeout&lt;/code&gt; 中&lt;/a&gt;定义的规则。但是，如果报头的发送速度非常慢（默认情况下，每2分钟最多发送一个字节），则基于不活动的超时仍将使连接保持打开状态。为了防止这种情况，每当头数据到达时，都要进行一次额外的检查，即自建立连接以来，还没有超过 &lt;code&gt;server.headersTimeout&lt;/code&gt; 毫秒。如果检查失败，则会在服务器对象上发出 &lt;code&gt;'timeout'&lt;/code&gt; 事件，并且（默认情况下）套接字被破坏。有关如何自定义超时行为的更多信息，请参见&lt;a href=&quot;#http_server_timeout&quot;&gt; &lt;code&gt;server.timeout&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8fe24f759353e3c9ef13728cf5d98486ed424be5" translate="yes" xml:space="preserve">
          <source>In case of no callback function were assigned, a new &lt;code&gt;ERR_INVALID_CALLBACK&lt;/code&gt; error will be thrown.</source>
          <target state="translated">如果未分配回调函数，则将引发新的 &lt;code&gt;ERR_INVALID_CALLBACK&lt;/code&gt; 错误。</target>
        </trans-unit>
        <trans-unit id="a6d18d7e0676cf5071ee5c355fa6cde45cfbf4f6" translate="yes" xml:space="preserve">
          <source>In case of server request, the HTTP version sent by the client. In the case of client response, the HTTP version of the connected-to server. Probably either &lt;code&gt;'1.1'&lt;/code&gt; or &lt;code&gt;'1.0'&lt;/code&gt;.</source>
          <target state="translated">如果有服务器请求，则由客户端发送HTTP版本。如果是客户端响应，则为连接服务器的HTTP版本。可能是 &lt;code&gt;'1.1'&lt;/code&gt; 或 &lt;code&gt;'1.0'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="288453ee826f1533d87079e6da5e8a9939a1c3c7" translate="yes" xml:space="preserve">
          <source>In case of server request, the HTTP version sent by the client. In the case of client response, the HTTP version of the connected-to server. Returns &lt;code&gt;'2.0'&lt;/code&gt;.</source>
          <target state="translated">如果有服务器请求，则由客户端发送HTTP版本。如果是客户端响应，则为连接服务器的HTTP版本。返回 &lt;code&gt;'2.0'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8a083755276d9eeea7f1c7589a28aafc0f42f80d" translate="yes" xml:space="preserve">
          <source>In cases where a return value other than &lt;code&gt;napi_ok&lt;/code&gt; or &lt;code&gt;napi_pending_exception&lt;/code&gt; is returned, &lt;a href=&quot;#n_api_napi_is_exception_pending&quot;&gt;&lt;code&gt;napi_is_exception_pending&lt;/code&gt;&lt;/a&gt; must be called to check if an exception is pending. See the section on exceptions for more details.</source>
          <target state="translated">如果返回的返回值不是 &lt;code&gt;napi_ok&lt;/code&gt; 或 &lt;code&gt;napi_pending_exception&lt;/code&gt; ，&lt;a href=&quot;#n_api_napi_is_exception_pending&quot;&gt; &lt;code&gt;napi_is_exception_pending&lt;/code&gt; &lt;/a&gt;必须调用napi_is_exception_pending来检查异常是否未决。有关更多详细信息，请参见异常部分。</target>
        </trans-unit>
        <trans-unit id="3352c4c1cafe79135726b64a02a391ead0f41a7a" translate="yes" xml:space="preserve">
          <source>In cases where it is not known in advance if &lt;code&gt;input&lt;/code&gt; is an absolute URL and a &lt;code&gt;base&lt;/code&gt; is provided, it is advised to validate that the &lt;code&gt;origin&lt;/code&gt; of the &lt;code&gt;URL&lt;/code&gt; object is what is expected.</source>
          <target state="translated">在如果事先不知道的情况下， &lt;code&gt;input&lt;/code&gt; 是一个绝对的URL和 &lt;code&gt;base&lt;/code&gt; 提供，建议以验证 &lt;code&gt;origin&lt;/code&gt; 的的 &lt;code&gt;URL&lt;/code&gt; 对象的期望是什么。</target>
        </trans-unit>
        <trans-unit id="64ee0f45e9598117687157f2af97b1b0166cabde" translate="yes" xml:space="preserve">
          <source>In cases where there is more than one &lt;code&gt;.cc&lt;/code&gt; file, simply add the additional filename to the &lt;code&gt;sources&lt;/code&gt; array:</source>
          <target state="translated">如果存在多个 &lt;code&gt;.cc&lt;/code&gt; 文件，只需将其他文件名添加到 &lt;code&gt;sources&lt;/code&gt; 数组中：</target>
        </trans-unit>
        <trans-unit id="a54ba662593323ae67f27f49552b1bb4dbd0fd34" translate="yes" xml:space="preserve">
          <source>In certain cases, &lt;code&gt;require('.')&lt;/code&gt; could resolve outside the package directory. This behavior has been removed.</source>
          <target state="translated">在某些情况下， &lt;code&gt;require('.')&lt;/code&gt; 可以在包目录之外进行解析。此行为已被删除。</target>
        </trans-unit>
        <trans-unit id="6bf7779b67ab0aad41f5916dd6b3a65b83dcba67" translate="yes" xml:space="preserve">
          <source>In contrast, the following example turns off the default warning output and adds a custom handler to the &lt;code&gt;'warning'&lt;/code&gt; event:</source>
          <target state="translated">相反，以下示例关闭了默认警告输出，并向 &lt;code&gt;'warning'&lt;/code&gt; 事件添加了自定义处理程序：</target>
        </trans-unit>
        <trans-unit id="34bc31b96f714b0e14d2f04bc73e790c177f0030" translate="yes" xml:space="preserve">
          <source>In cryptography, &quot;wrapping a key&quot; refers to exporting and then encrypting the keying material. The &lt;code&gt;subtle.unwrapKey()&lt;/code&gt; method attempts to decrypt a wrapped key and create a &lt;a href=&quot;webcrypto#webcrypto_class_cryptokey&quot;&gt;&amp;lt;CryptoKey&amp;gt;&lt;/a&gt; instance. It is equivalent to calling &lt;code&gt;subtle.decrypt()&lt;/code&gt; first on the encrypted key data (using the &lt;code&gt;wrappedKey&lt;/code&gt;, &lt;code&gt;unwrapAlgo&lt;/code&gt;, and &lt;code&gt;unwrappingKey&lt;/code&gt; arguments as input) then passing the results in to the &lt;code&gt;subtle.importKey()&lt;/code&gt; method using the &lt;code&gt;unwrappedKeyAlgo&lt;/code&gt;, &lt;code&gt;extractable&lt;/code&gt;, and &lt;code&gt;keyUsages&lt;/code&gt; arguments as inputs. If successful, the returned promise is resolved with a &lt;a href=&quot;webcrypto#webcrypto_class_cryptokey&quot;&gt;&amp;lt;CryptoKey&amp;gt;&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03f0907a39eb8eb75ec80d3428fd907be73a4a3d" translate="yes" xml:space="preserve">
          <source>In cryptography, &quot;wrapping a key&quot; refers to exporting and then encrypting the keying material. The &lt;code&gt;subtle.wrapKey()&lt;/code&gt; method exports the keying material into the format identified by &lt;code&gt;format&lt;/code&gt;, then encrypts it using the method and parameters specified by &lt;code&gt;wrapAlgo&lt;/code&gt; and the keying material provided by &lt;code&gt;wrappingKey&lt;/code&gt;. It is the equivalent to calling &lt;code&gt;subtle.exportKey()&lt;/code&gt; using &lt;code&gt;format&lt;/code&gt; and &lt;code&gt;key&lt;/code&gt; as the arguments, then passing the result to the &lt;code&gt;subtle.encrypt()&lt;/code&gt; method using &lt;code&gt;wrappingKey&lt;/code&gt; and &lt;code&gt;wrapAlgo&lt;/code&gt; as inputs. If successful, the returned promise will be resolved with an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer&quot;&gt;&amp;lt;ArrayBuffer&amp;gt;&lt;/a&gt; containing the encrypted key data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd982c8835710e676f97498aa2a426f67aae0d05" translate="yes" xml:space="preserve">
          <source>In current Node.js, specifiers starting with &lt;code&gt;https://&lt;/code&gt; are unsupported. The loader below registers hooks to enable rudimentary support for such specifiers. While this may seem like a significant improvement to Node.js core functionality, there are substantial downsides to actually using this loader: performance is much slower than loading files from disk, there is no caching, and there is no security.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd3587bc97949af37236db6b9a0a1d14eae323d5" translate="yes" xml:space="preserve">
          <source>In custom builds from non-release versions of the source tree, only the &lt;code&gt;name&lt;/code&gt; property may be present. The additional properties should not be relied upon to exist.</source>
          <target state="translated">在源树的非发行版的自定义生成中，可能仅存在 &lt;code&gt;name&lt;/code&gt; 属性。不应依赖其他属性。</target>
        </trans-unit>
        <trans-unit id="327449f48d0f91fc55b3b3b7eb5d0b9b76cc0b33" translate="yes" xml:space="preserve">
          <source>In each module, the &lt;code&gt;module&lt;/code&gt; free variable is a reference to the object representing the current module. For convenience, &lt;code&gt;module.exports&lt;/code&gt; is also accessible via the &lt;code&gt;exports&lt;/code&gt; module-global. &lt;code&gt;module&lt;/code&gt; is not actually a global but rather local to each module.</source>
          <target state="translated">在每个模块中， &lt;code&gt;module&lt;/code&gt; 自由变量是对表示当前模块的对象的引用。为了方便起见，也可以通过 &lt;code&gt;exports&lt;/code&gt; -global来访问 &lt;code&gt;module.exports&lt;/code&gt; 。实际上， &lt;code&gt;module&lt;/code&gt; 不是每个模块的全局变量，而是局部的。</target>
        </trans-unit>
        <trans-unit id="37db4cd4b343ff7b0d4d0a02ce9acc6d525c6d68" translate="yes" xml:space="preserve">
          <source>In each of the previous examples, an &lt;code&gt;Error&lt;/code&gt; object is generated internally by &lt;code&gt;process.emitWarning()&lt;/code&gt; and passed through to the &lt;a href=&quot;#process_event_warning&quot;&gt;&lt;code&gt;'warning'&lt;/code&gt;&lt;/a&gt; handler.</source>
          <target state="translated">在前面的每个示例中， &lt;code&gt;Error&lt;/code&gt; 对象都是由 &lt;code&gt;process.emitWarning()&lt;/code&gt; 内部生成的，并传递给&lt;a href=&quot;#process_event_warning&quot;&gt; &lt;code&gt;'warning'&lt;/code&gt; &lt;/a&gt;处理程序。</target>
        </trans-unit>
        <trans-unit id="820400607edfb4a60ac510c205956515ea9fa75c" translate="yes" xml:space="preserve">
          <source>In either case, the handler function is invoked with the &lt;code&gt;event&lt;/code&gt; argument passed to the &lt;code&gt;eventTarget.dispatchEvent()&lt;/code&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6707c880c79f3eb01db7774cdf36344d80a74bb4" translate="yes" xml:space="preserve">
          <source>In flowing mode, data is read from the underlying system automatically and provided to an application as quickly as possible using events via the &lt;a href=&quot;events#events_class_eventemitter&quot;&gt;&lt;code&gt;EventEmitter&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">在流动模式下，会通过&lt;a href=&quot;events#events_class_eventemitter&quot;&gt; &lt;code&gt;EventEmitter&lt;/code&gt; &lt;/a&gt;接口使用事件自动从底层系统读取数据并将其尽快提供给应用程序。</target>
        </trans-unit>
        <trans-unit id="ae82f246808400841098c679191185dab7d9015c" translate="yes" xml:space="preserve">
          <source>In future versions of Node.js, &lt;code&gt;fs.rmdir(path, { recursive: true })&lt;/code&gt; will throw if &lt;code&gt;path&lt;/code&gt; does not exist or is a file. Use &lt;code&gt;fs.rm(path, { recursive: true, force: true })&lt;/code&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="409446af31735d46729e6eb84ac5244d78721628" translate="yes" xml:space="preserve">
          <source>In future versions of Node.js, &lt;code&gt;fs.rmdir(path, { recursive: true })&lt;/code&gt; will throw on nonexistent paths, or when given a file as a target. Use &lt;code&gt;fs.rm(path, { recursive: true, force: true })&lt;/code&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd353fe48ae2599b92caa0441615c03958d5543e" translate="yes" xml:space="preserve">
          <source>In general, check for the accessibility of a file only if the file will not be used directly, for example when its accessibility is a signal from another process.</source>
          <target state="translated">一般来说,只有在文件不会被直接使用的情况下才会检查文件的可访问性,例如当文件的可访问性是来自另一个进程的信号时。</target>
        </trans-unit>
        <trans-unit id="087f71387196c21047e8de00ada98ef5f02eb85e" translate="yes" xml:space="preserve">
          <source>In general, check for the existence of a file only if the file won&amp;rsquo;t be used directly, for example when its existence is a signal from another process.</source>
          <target state="translated">通常，仅当不直接使用文件时（例如，文件的存在是来自另一个进程的信号），才检查文件的存在。</target>
        </trans-unit>
        <trans-unit id="0780a6d7f3a8d6f30bfe170e7ebcad79382accb5" translate="yes" xml:space="preserve">
          <source>In general, greater memory usage options will mean that Node.js has to make fewer calls to &lt;code&gt;zlib&lt;/code&gt; because it will be able to process more data on each &lt;code&gt;write&lt;/code&gt; operation. So, this is another factor that affects the speed, at the cost of memory usage.</source>
          <target state="translated">通常，更大的内存使用选项将意味着Node.js只需对 &lt;code&gt;zlib&lt;/code&gt; 进行较少的调用，因为它可以在每次 &lt;code&gt;write&lt;/code&gt; 操作中处理更多的数据。因此，这是另一个影响速度的因素，但会消耗内存。</target>
        </trans-unit>
        <trans-unit id="45a19be887817fbe3d3f39ecc27f73a30b8611a2" translate="yes" xml:space="preserve">
          <source>In general, the &lt;code&gt;readable.pipe()&lt;/code&gt; and &lt;code&gt;'data'&lt;/code&gt; event mechanisms are easier to understand than the &lt;code&gt;'readable'&lt;/code&gt; event. However, handling &lt;code&gt;'readable'&lt;/code&gt; might result in increased throughput.</source>
          <target state="translated">通常，与 &lt;code&gt;'readable'&lt;/code&gt; 事件相比， &lt;code&gt;readable.pipe()&lt;/code&gt; 和 &lt;code&gt;'data'&lt;/code&gt; 事件机制更易于理解。但是，处理 &lt;code&gt;'readable'&lt;/code&gt; 可能会导致吞吐量增加。</target>
        </trans-unit>
        <trans-unit id="e29f7ea80cfdc8edcce7cf9808c9e14cd5f2e801" translate="yes" xml:space="preserve">
          <source>In line with OpenSSL's recommendation to use a more modern algorithm instead of &lt;a href=&quot;https://www.openssl.org/docs/man1.1.0/crypto/EVP_BytesToKey.html&quot;&gt;&lt;code&gt;EVP_BytesToKey&lt;/code&gt;&lt;/a&gt; it is recommended that developers derive a key and IV on their own using &lt;a href=&quot;#crypto_crypto_scrypt_password_salt_keylen_options_callback&quot;&gt;&lt;code&gt;crypto.scrypt()&lt;/code&gt;&lt;/a&gt; and to use &lt;a href=&quot;#crypto_crypto_createcipheriv_algorithm_key_iv_options&quot;&gt;&lt;code&gt;crypto.createCipheriv()&lt;/code&gt;&lt;/a&gt; to create the &lt;code&gt;Cipher&lt;/code&gt; object. Users should not use ciphers with counter mode (e.g. CTR, GCM, or CCM) in &lt;code&gt;crypto.createCipher()&lt;/code&gt;. A warning is emitted when they are used in order to avoid the risk of IV reuse that causes vulnerabilities. For the case when IV is reused in GCM, see &lt;a href=&quot;https://github.com/nonce-disrespect/nonce-disrespect&quot;&gt;Nonce-Disrespecting Adversaries&lt;/a&gt; for details.</source>
          <target state="translated">与OpenSSL建议使用更现代的算法而不是&lt;a href=&quot;https://www.openssl.org/docs/man1.1.0/crypto/EVP_BytesToKey.html&quot;&gt; &lt;code&gt;EVP_BytesToKey&lt;/code&gt; 一致&lt;/a&gt;，建议开发人员使用&lt;a href=&quot;#crypto_crypto_scrypt_password_salt_keylen_options_callback&quot;&gt; &lt;code&gt;crypto.scrypt()&lt;/code&gt; &lt;/a&gt;自行派生密钥和IV，并使用&lt;a href=&quot;#crypto_crypto_createcipheriv_algorithm_key_iv_options&quot;&gt; &lt;code&gt;crypto.createCipheriv()&lt;/code&gt; &lt;/a&gt;创建 &lt;code&gt;Cipher&lt;/code&gt; 对象。用户不应在 &lt;code&gt;crypto.createCipher()&lt;/code&gt; 中使用具有计数器模式的密码（例如CTR，GCM或CCM ）。使用它们时会发出警告，以避免IV重用导致漏洞的风险。对于在GCM中重用IV的情况，请参阅&lt;a href=&quot;https://github.com/nonce-disrespect/nonce-disrespect&quot;&gt;不敬拜对手&lt;/a&gt;以获取详细信息。</target>
        </trans-unit>
        <trans-unit id="4427809c2da46e37a477a14b3a6dae947f069aba" translate="yes" xml:space="preserve">
          <source>In line with OpenSSL's recommendation to use a more modern algorithm instead of &lt;a href=&quot;https://www.openssl.org/docs/man1.1.0/crypto/EVP_BytesToKey.html&quot;&gt;&lt;code&gt;EVP_BytesToKey&lt;/code&gt;&lt;/a&gt; it is recommended that developers derive a key and IV on their own using &lt;a href=&quot;#crypto_crypto_scrypt_password_salt_keylen_options_callback&quot;&gt;&lt;code&gt;crypto.scrypt()&lt;/code&gt;&lt;/a&gt; and to use &lt;a href=&quot;#crypto_crypto_createdecipheriv_algorithm_key_iv_options&quot;&gt;&lt;code&gt;crypto.createDecipheriv()&lt;/code&gt;&lt;/a&gt; to create the &lt;code&gt;Decipher&lt;/code&gt; object.</source>
          <target state="translated">与OpenSSL建议使用更现代的算法而不是&lt;a href=&quot;https://www.openssl.org/docs/man1.1.0/crypto/EVP_BytesToKey.html&quot;&gt; &lt;code&gt;EVP_BytesToKey&lt;/code&gt; 一致&lt;/a&gt;，建议开发人员使用&lt;a href=&quot;#crypto_crypto_scrypt_password_salt_keylen_options_callback&quot;&gt; &lt;code&gt;crypto.scrypt()&lt;/code&gt; &lt;/a&gt;自行派生密钥和IV，并使用&lt;a href=&quot;#crypto_crypto_createdecipheriv_algorithm_key_iv_options&quot;&gt; &lt;code&gt;crypto.createDecipheriv()&lt;/code&gt; &lt;/a&gt;创建 &lt;code&gt;Decipher&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="f16244b364da53115174b4fd4f6aa18f7d9fb44a" translate="yes" xml:space="preserve">
          <source>In many cases when an N-API function is called and an exception is already pending, the function will return immediately with a &lt;code&gt;napi_status&lt;/code&gt; of &lt;code&gt;napi_pending_exception&lt;/code&gt;. However, this is not the case for all functions. N-API allows a subset of the functions to be called to allow for some minimal cleanup before returning to JavaScript. In that case, &lt;code&gt;napi_status&lt;/code&gt; will reflect the status for the function. It will not reflect previous pending exceptions. To avoid confusion, check the error status after every function call.</source>
          <target state="translated">在许多情况下，当调用N-API函数并且一个异常已经挂起时，该函数将立即以 &lt;code&gt;napi_status&lt;/code&gt; 的 &lt;code&gt;napi_pending_exception&lt;/code&gt; 。但是，并非所有功能都如此。N-API允许调用函数的子集，以便在返回JavaScript之前进行一些最小的清理。在这种情况下， &lt;code&gt;napi_status&lt;/code&gt; 将反映该功能的状态。它不会反映以前的未决异常。为避免混淆，请在每次函数调用后检查错误状态。</target>
        </trans-unit>
        <trans-unit id="4d4aeb489e9e86e74a64fc02a38fd7bd2ebbd390" translate="yes" xml:space="preserve">
          <source>In many cases, however, it is necessary that the handles remain valid for either a shorter or longer lifespan than that of the native method. The sections which follow describe the N-API functions that can be used to change the handle lifespan from the default.</source>
          <target state="translated">然而,在许多情况下,有必要让句柄的有效期比本地方法的有效期短或长。下面的章节描述了可以用来改变默认句柄寿命的N-API函数。</target>
        </trans-unit>
        <trans-unit id="4b34bf1445c109117747980b5d96ac739f8c0f64" translate="yes" xml:space="preserve">
          <source>In most cases your application or library code should have no issues with &lt;code&gt;AsyncLocalStorage&lt;/code&gt;. But in rare cases you may face situations when the current store is lost in one of asynchronous operations. In those cases, consider the following options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39ad6cea5c8da673dfb8d0d33d34ec8391a32abb" translate="yes" xml:space="preserve">
          <source>In most cases, the ES module &lt;code&gt;import&lt;/code&gt; can be used to load CommonJS modules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dd8e7e54f1e17d20c23615bc834dee206f45159" translate="yes" xml:space="preserve">
          <source>In most cases, there should be little to no reason for an application to manually create instances of the &lt;code&gt;tty.ReadStream&lt;/code&gt; and &lt;code&gt;tty.WriteStream&lt;/code&gt; classes.</source>
          <target state="translated">在大多数情况下，应用程序几乎没有理由手动创建 &lt;code&gt;tty.ReadStream&lt;/code&gt; 和 &lt;code&gt;tty.WriteStream&lt;/code&gt; 类的实例。</target>
        </trans-unit>
        <trans-unit id="5bc3a0789b533753ef17917c6e76c2314768199f" translate="yes" xml:space="preserve">
          <source>In most operating systems, listening to the &lt;a href=&quot;https://en.wikipedia.org/wiki/IPv6_address#Unspecified_address&quot;&gt;unspecified IPv6 address&lt;/a&gt; (&lt;code&gt;::&lt;/code&gt;) may cause the &lt;code&gt;net.Server&lt;/code&gt; to also listen on the &lt;a href=&quot;https://en.wikipedia.org/wiki/0.0.0.0&quot;&gt;unspecified IPv4 address&lt;/a&gt; (&lt;code&gt;0.0.0.0&lt;/code&gt;).</source>
          <target state="translated">在大多数操作系统中，听着&lt;a href=&quot;https://en.wikipedia.org/wiki/IPv6_address#Unspecified_address&quot;&gt;不特定的IPv6地址&lt;/a&gt;（ &lt;code&gt;::&lt;/code&gt; ）可能会导致 &lt;code&gt;net.Server&lt;/code&gt; 也听在&lt;a href=&quot;https://en.wikipedia.org/wiki/0.0.0.0&quot;&gt;未指定的IPv4地址&lt;/a&gt;（ &lt;code&gt;0.0.0.0&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="7a9fa045058fbc4f76eea96849e5ca18e4b0477e" translate="yes" xml:space="preserve">
          <source>In most situations, it is not actually necessary to call &lt;code&gt;process.exit()&lt;/code&gt; explicitly. The Node.js process will exit on its own &lt;em&gt;if there is no additional work pending&lt;/em&gt; in the event loop. The &lt;code&gt;process.exitCode&lt;/code&gt; property can be set to tell the process which exit code to use when the process exits gracefully.</source>
          <target state="translated">在大多数情况下，实际上没有必要显式调用 &lt;code&gt;process.exit()&lt;/code&gt; 。&lt;em&gt;如果&lt;/em&gt;事件循环中&lt;em&gt;没有其他待处理&lt;/em&gt;的&lt;em&gt;工作&lt;/em&gt;，则Node.js进程将自行退出。该 &lt;code&gt;process.exitCode&lt;/code&gt; 属性可以设置来告诉进程使用，当进程退出其正常退出代码。</target>
        </trans-unit>
        <trans-unit id="8ba73ffda62f255ad07619c0e3bdc1d844b17d1f" translate="yes" xml:space="preserve">
          <source>In order to avoid the garbage collection overhead of creating many individually allocated &lt;code&gt;Buffer&lt;/code&gt; instances, by default allocations under 4KB are sliced from a single larger allocated object.</source>
          <target state="translated">为了避免创建许多单独分配的 &lt;code&gt;Buffer&lt;/code&gt; 实例的垃圾回收开销，默认情况下，从单个较大的分配对象中分割4KB以下的分配。</target>
        </trans-unit>
        <trans-unit id="07817ef1abfbcf964409ae72ee3eff00eaa052ac" translate="yes" xml:space="preserve">
          <source>In order to be loaded from multiple Node.js environments, such as a main thread and a Worker thread, an add-on needs to either:</source>
          <target state="translated">为了从多个Node.js环境中加载,比如一个主线程和一个Worker线程,一个插件需要或者。</target>
        </trans-unit>
        <trans-unit id="30b26d492c1627fc6654e900f98b2c495fce1ecb" translate="yes" xml:space="preserve">
          <source>In order to create a mixed &lt;a href=&quot;https&quot;&gt;HTTPS&lt;/a&gt; and HTTP/2 server, refer to the &lt;a href=&quot;#http2_alpn_negotiation&quot;&gt;ALPN negotiation&lt;/a&gt; section. Upgrading from non-tls HTTP/1 servers is not supported.</source>
          <target state="translated">为了创建混合的&lt;a href=&quot;https&quot;&gt;HTTPS&lt;/a&gt;和HTTP / 2服务器，请参考&lt;a href=&quot;#http2_alpn_negotiation&quot;&gt;ALPN协商&lt;/a&gt;部分。不支持从非tls HTTP / 1服务器升级。</target>
        </trans-unit>
        <trans-unit id="9608ef8288365a7cade4d998db1fc0243461174f" translate="yes" xml:space="preserve">
          <source>In order to do this, it is necessary to get a reference to the &lt;code&gt;module&lt;/code&gt; object. Since &lt;code&gt;require()&lt;/code&gt; returns the &lt;code&gt;module.exports&lt;/code&gt;, and the &lt;code&gt;module&lt;/code&gt; is typically &lt;em&gt;only&lt;/em&gt; available within a specific module's code, it must be explicitly exported in order to be used.</source>
          <target state="translated">为此，必须获取对 &lt;code&gt;module&lt;/code&gt; 对象的引用。由于 &lt;code&gt;require()&lt;/code&gt; 返回 &lt;code&gt;module.exports&lt;/code&gt; ，并且该 &lt;code&gt;module&lt;/code&gt; 通常&lt;em&gt;仅&lt;/em&gt;在特定模块的代码中可用，因此必须显式导出该模块才能使用。</target>
        </trans-unit>
        <trans-unit id="34523f8cc30ff0b87b5cd5c6314ffe804fe892b1" translate="yes" xml:space="preserve">
          <source>In order to expose a function as part of the add-on's module exports, set the newly created function on the exports object. A sample module might look as follows:</source>
          <target state="translated">为了将一个函数作为附加组件的模块导出的一部分,请在导出对象上设置新创建的函数。一个示例模块可能如下所示。</target>
        </trans-unit>
        <trans-unit id="5be94aad2d7524c4d29b1665cfabd8e1b693ef9b" translate="yes" xml:space="preserve">
          <source>In order to make modules available to the Node.js REPL, it might be useful to also add the &lt;code&gt;/usr/lib/node_modules&lt;/code&gt; folder to the &lt;code&gt;$NODE_PATH&lt;/code&gt; environment variable. Since the module lookups using &lt;code&gt;node_modules&lt;/code&gt; folders are all relative, and based on the real path of the files making the calls to &lt;code&gt;require()&lt;/code&gt;, the packages themselves can be anywhere.</source>
          <target state="translated">为了使模块可用于Node.js REPL，将 &lt;code&gt;/usr/lib/node_modules&lt;/code&gt; 文件夹也添加到 &lt;code&gt;$NODE_PATH&lt;/code&gt; 环境变量中可能会很有用。由于使用 &lt;code&gt;node_modules&lt;/code&gt; 文件夹的模块查找都是相对的，并且基于调用 &lt;code&gt;require()&lt;/code&gt; 的文件的真实路径，因此包本身可以在任何地方。</target>
        </trans-unit>
        <trans-unit id="34fc5ed6a9101bb04240e52968cc6d46716398a6" translate="yes" xml:space="preserve">
          <source>In order to prevent excessive memory usage, &lt;code&gt;Domain&lt;/code&gt; objects themselves are not implicitly added as children of the active domain. If they were, then it would be too easy to prevent request and response objects from being properly garbage collected.</source>
          <target state="translated">为了防止过多使用内存，不会将 &lt;code&gt;Domain&lt;/code&gt; 对象本身隐式添加为活动域的子级。如果它们是这样，那么防止请求和响应对象被正确地垃圾回收太容易了。</target>
        </trans-unit>
        <trans-unit id="0d96a80c80037641a2b7ed11d9c8516d07755e88" translate="yes" xml:space="preserve">
          <source>In order to retain ABI compatibility with previous versions, passing &lt;code&gt;NULL&lt;/code&gt; for &lt;code&gt;async_resource&lt;/code&gt; does not result in an error. However, this is not recommended as this will result poor results with &lt;code&gt;async_hooks&lt;/code&gt;&lt;a href=&quot;async_hooks#async_hooks_init_asyncid_type_triggerasyncid_resource&quot;&gt;&lt;code&gt;init&lt;/code&gt; hooks&lt;/a&gt; and &lt;code&gt;async_hooks.executionAsyncResource()&lt;/code&gt; as the resource is now required by the underlying &lt;code&gt;async_hooks&lt;/code&gt; implementation in order to provide the linkage between async callbacks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1872d37dd99da69f48fff6e8ea85d653766d0af1" translate="yes" xml:space="preserve">
          <source>In order to retrieve this information &lt;a href=&quot;#n_api_napi_get_last_error_info&quot;&gt;&lt;code&gt;napi_get_last_error_info&lt;/code&gt;&lt;/a&gt; is provided which returns a &lt;code&gt;napi_extended_error_info&lt;/code&gt; structure. The format of the &lt;code&gt;napi_extended_error_info&lt;/code&gt; structure is as follows:</source>
          <target state="translated">为了检索这些信息&lt;a href=&quot;#n_api_napi_get_last_error_info&quot;&gt; &lt;code&gt;napi_get_last_error_info&lt;/code&gt; &lt;/a&gt;提供它返回一个 &lt;code&gt;napi_extended_error_info&lt;/code&gt; 结构。 &lt;code&gt;napi_extended_error_info&lt;/code&gt; 结构的格式如下：</target>
        </trans-unit>
        <trans-unit id="1ba193044958a2078ac8148d7933406e9ff8c99a" translate="yes" xml:space="preserve">
          <source>In order to run a simple web server using the &lt;code&gt;http&lt;/code&gt; module the code passed to the context must either call &lt;code&gt;require('http')&lt;/code&gt; on its own, or have a reference to the &lt;code&gt;http&lt;/code&gt; module passed to it. For instance:</source>
          <target state="translated">为了使用 &lt;code&gt;http&lt;/code&gt; 模块运行简单的Web服务器，传递给上下文的代码必须自行调用 &lt;code&gt;require('http')&lt;/code&gt; ，或者对传递给它的 &lt;code&gt;http&lt;/code&gt; 模块进行引用。例如：</target>
        </trans-unit>
        <trans-unit id="90f2e2db8a43d295cc2c537970470ccdaed26c6e" translate="yes" xml:space="preserve">
          <source>In order to set up a &lt;code&gt;v8::Isolate&lt;/code&gt;, an &lt;code&gt;v8::ArrayBuffer::Allocator&lt;/code&gt; needs to be provided. One possible choice is the default Node.js allocator, which can be created through &lt;code&gt;node::ArrayBufferAllocator::Create()&lt;/code&gt;. Using the Node.js allocator allows minor performance optimizations when addons use the Node.js C++ &lt;code&gt;Buffer&lt;/code&gt; API, and is required in order to track &lt;code&gt;ArrayBuffer&lt;/code&gt; memory in &lt;a href=&quot;process#process_process_memoryusage&quot;&gt;&lt;code&gt;process.memoryUsage()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcb69e44c062ea7704f38e703e2936582cc9f855" translate="yes" xml:space="preserve">
          <source>In order to support &lt;a href=&quot;worker_threads#worker_threads_class_worker&quot;&gt;&lt;code&gt;Worker&lt;/code&gt;&lt;/a&gt; threads, addons need to clean up any resources they may have allocated when such a thread exists. This can be achieved through the usage of the &lt;code&gt;AddEnvironmentCleanupHook()&lt;/code&gt; function:</source>
          <target state="translated">为了支持&lt;a href=&quot;worker_threads#worker_threads_class_worker&quot;&gt; &lt;code&gt;Worker&lt;/code&gt; &lt;/a&gt;线程，附加组件需要清理在存在此类线程时可能已分配的所有资源。这可以通过使用 &lt;code&gt;AddEnvironmentCleanupHook()&lt;/code&gt; 函数来实现：</target>
        </trans-unit>
        <trans-unit id="6e43ad63b79dd141d986e828eceee78812aec282" translate="yes" xml:space="preserve">
          <source>In order to support the full spectrum of possible HTTP applications, Node.js's HTTP API is very low-level. It deals with stream handling and message parsing only. It parses a message into headers and body but it does not parse the actual headers or the body.</source>
          <target state="translated">为了支持所有可能的HTTP应用,Node.js的HTTP API是非常低级的。它只处理流处理和消息解析。它将消息解析为头部和主体,但它不解析实际的头部或主体。</target>
        </trans-unit>
        <trans-unit id="cacbbe490b57fd8bf29c6d4c231226a0b14306b9" translate="yes" xml:space="preserve">
          <source>In order to support the full spectrum of possible HTTP applications, the Node.js HTTP API is very low-level. It deals with stream handling and message parsing only. It parses a message into headers and body but it does not parse the actual headers or the body.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff3632f1db32bf01741e5bbea082ca20145fb38f" translate="yes" xml:space="preserve">
          <source>In order to use the N-API functions, include the file &lt;a href=&quot;https://github.com/nodejs/node/blob/master/src/node_api.h&quot;&gt;&lt;code&gt;node_api.h&lt;/code&gt;&lt;/a&gt; which is located in the src directory in the node development tree:</source>
          <target state="translated">为了使用N-API功能，请包括位于节点开发树的src目录中的文件&lt;a href=&quot;https://github.com/nodejs/node/blob/master/src/node_api.h&quot;&gt; &lt;code&gt;node_api.h&lt;/code&gt; &lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="4ac594a0cf5cfa895ed35f6b2ef04dc94e26df89" translate="yes" xml:space="preserve">
          <source>In particular, the significant differences to &lt;code&gt;JSON&lt;/code&gt; are:</source>
          <target state="translated">特别是，与 &lt;code&gt;JSON&lt;/code&gt; 的显着区别是：</target>
        </trans-unit>
        <trans-unit id="8f2a5459c07d70896c8081dfc8b2f3407dcb02df" translate="yes" xml:space="preserve">
          <source>In particular, this makes sense for objects that can be cloned, rather than transferred, and which are used by other objects on the sending side. For example, Node.js marks the &lt;code&gt;ArrayBuffer&lt;/code&gt;s it uses for its &lt;a href=&quot;buffer#buffer_static_method_buffer_allocunsafe_size&quot;&gt;&lt;code&gt;Buffer&lt;/code&gt; pool&lt;/a&gt; with this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b654969e8b0fb9bedec078843fc01697a0cd123" translate="yes" xml:space="preserve">
          <source>In particular:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d252f3d1a06c3b2a3ae5ad98ef71487c919a9c51" translate="yes" xml:space="preserve">
          <source>In paused mode, the &lt;a href=&quot;#stream_readable_read_size&quot;&gt;&lt;code&gt;stream.read()&lt;/code&gt;&lt;/a&gt; method must be called explicitly to read chunks of data from the stream.</source>
          <target state="translated">在暂停模式下，必须显式调用&lt;a href=&quot;#stream_readable_read_size&quot;&gt; &lt;code&gt;stream.read()&lt;/code&gt; &lt;/a&gt;方法以从流中读取数据块。</target>
        </trans-unit>
        <trans-unit id="9a5c41117e426ba3a059f25450d02c56bbffe674" translate="yes" xml:space="preserve">
          <source>In recent versions of Node.js, there is no difference between &lt;a href=&quot;crypto#crypto_crypto_randombytes_size_callback&quot;&gt;&lt;code&gt;crypto.randomBytes()&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;crypto.pseudoRandomBytes()&lt;/code&gt;. The latter is deprecated along with the undocumented aliases &lt;code&gt;crypto.prng()&lt;/code&gt; and &lt;code&gt;crypto.rng()&lt;/code&gt; in favor of &lt;a href=&quot;crypto#crypto_crypto_randombytes_size_callback&quot;&gt;&lt;code&gt;crypto.randomBytes()&lt;/code&gt;&lt;/a&gt; and may be removed in a future release.</source>
          <target state="translated">在最新版本的Node.js中，&lt;a href=&quot;crypto#crypto_crypto_randombytes_size_callback&quot;&gt; &lt;code&gt;crypto.randomBytes()&lt;/code&gt; &lt;/a&gt;和 &lt;code&gt;crypto.pseudoRandomBytes()&lt;/code&gt; 之间没有区别。不推荐使用后者， &lt;code&gt;crypto.rng()&lt;/code&gt; 别名 &lt;code&gt;crypto.prng()&lt;/code&gt; 和crypto.rng（）则支持&lt;a href=&quot;crypto#crypto_crypto_randombytes_size_callback&quot;&gt; &lt;code&gt;crypto.randomBytes()&lt;/code&gt; ,&lt;/a&gt;并且可能在将来的版本中删除。</target>
        </trans-unit>
        <trans-unit id="482c092668220dab66fd94c51463dcf51a819a39" translate="yes" xml:space="preserve">
          <source>In recent versions of Node.js, there is no difference between &lt;a href=&quot;crypto#crypto_crypto_randombytes_size_callback&quot;&gt;&lt;code&gt;crypto.randomBytes()&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;crypto.pseudoRandomBytes()&lt;/code&gt;. The latter is deprecated along with the undocumented aliases &lt;code&gt;crypto.prng()&lt;/code&gt; and &lt;code&gt;crypto.rng()&lt;/code&gt; in favor of &lt;a href=&quot;crypto#crypto_crypto_randombytes_size_callback&quot;&gt;&lt;code&gt;crypto.randomBytes()&lt;/code&gt;&lt;/a&gt; and might be removed in a future release.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="177049c3930ff3f87e8368c6c3d05d129ef44094" translate="yes" xml:space="preserve">
          <source>In some cases an addon will need to be able to create and reference objects with a lifespan longer than that of a single native method invocation. For example, to create a constructor and later use that constructor in a request to creates instances, it must be possible to reference the constructor object across many different instance creation requests. This would not be possible with a normal handle returned as a &lt;code&gt;napi_value&lt;/code&gt; as described in the earlier section. The lifespan of a normal handle is managed by scopes and all scopes must be closed before the end of a native method.</source>
          <target state="translated">在某些情况下，附加组件将需要能够创建和引用寿命比单个本机方法调用更长的对象。例如，要创建构造函数，然后在请求中使用该构造函数创建实例，必须有可能在许多不同的实例创建请求中引用构造函数对象。如前面部分所述，使用正常的句柄作为 &lt;code&gt;napi_value&lt;/code&gt; 返回这是不可能的。普通句柄的寿命由作用域管理，并且所有作用域必须在本机方法结束之前关闭。</target>
        </trans-unit>
        <trans-unit id="e22a93062d451b249b9309c60af8192dbe28ccd1" translate="yes" xml:space="preserve">
          <source>In some cases the resource object is reused for performance reasons, it is thus not safe to use it as a key in a &lt;code&gt;WeakMap&lt;/code&gt; or add properties to it.</source>
          <target state="translated">在某些情况下，由于性能原因，资源对象被重用，因此将其用作 &lt;code&gt;WeakMap&lt;/code&gt; 的键或为其添加属性是不安全的。</target>
        </trans-unit>
        <trans-unit id="4ad5e1a1929b5b0a41cfc844642f2414d2f858a5" translate="yes" xml:space="preserve">
          <source>In some cases, a &lt;code&gt;Sign&lt;/code&gt; instance can be created using the name of a signature algorithm, such as &lt;code&gt;'RSA-SHA256'&lt;/code&gt;, instead of a digest algorithm. This will use the corresponding digest algorithm. This does not work for all signature algorithms, such as &lt;code&gt;'ecdsa-with-SHA256'&lt;/code&gt;, so it is best to always use digest algorithm names.</source>
          <target state="translated">在某些情况下，可以使用签名算法（例如 &lt;code&gt;'RSA-SHA256'&lt;/code&gt; ）的名称而不是摘要算法来创建 &lt;code&gt;Sign&lt;/code&gt; 实例。这将使用相应的摘要算法。这不适用于所有签名算法，例如 &lt;code&gt;'ecdsa-with-SHA256'&lt;/code&gt; ，因此最好始终使用摘要算法名称。</target>
        </trans-unit>
        <trans-unit id="e37ebca3d8b767295ac2a49a166fe5a6bbb405cb" translate="yes" xml:space="preserve">
          <source>In some cases, a &lt;code&gt;Verify&lt;/code&gt; instance can be created using the name of a signature algorithm, such as &lt;code&gt;'RSA-SHA256'&lt;/code&gt;, instead of a digest algorithm. This will use the corresponding digest algorithm. This does not work for all signature algorithms, such as &lt;code&gt;'ecdsa-with-SHA256'&lt;/code&gt;, so it is best to always use digest algorithm names.</source>
          <target state="translated">在某些情况下，可以使用签名算法（例如 &lt;code&gt;'RSA-SHA256'&lt;/code&gt; ）的名称而不是摘要算法来创建 &lt;code&gt;Verify&lt;/code&gt; 实例。这将使用相应的摘要算法。这不适用于所有签名算法，例如 &lt;code&gt;'ecdsa-with-SHA256'&lt;/code&gt; ，因此最好始终使用摘要算法名称。</target>
        </trans-unit>
        <trans-unit id="715189038eeefcaa56acee7c2e2873a2e151a84e" translate="yes" xml:space="preserve">
          <source>In some cases, a transform operation may need to emit an additional bit of data at the end of the stream. For example, a &lt;code&gt;zlib&lt;/code&gt; compression stream will store an amount of internal state used to optimally compress the output. When the stream ends, however, that additional data needs to be flushed so that the compressed data will be complete.</source>
          <target state="translated">在某些情况下，转换操作可能需要在流的末尾发射额外的数据位。例如， &lt;code&gt;zlib&lt;/code&gt; 压缩流将存储用于最佳压缩输出的内部状态量。但是，当流结束时，需要刷新其他数据，以便完成压缩数据。</target>
        </trans-unit>
        <trans-unit id="60c6c3683d6de9acfc87a92e7bab5fb89fe40cef" translate="yes" xml:space="preserve">
          <source>In some cases, the client has already received the response and/or the socket has already been destroyed, like in case of &lt;code&gt;ECONNRESET&lt;/code&gt; errors. Before trying to send data to the socket, it is better to check that it is still writable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="449c40eda8a931307bfa01c725cde16111359434" translate="yes" xml:space="preserve">
          <source>In strict assertion mode, error messages for objects display a diff. In legacy assertion mode, error messages for objects display the objects, often truncated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25f6b941385c959247bdc6909616b44376b1d8ef" translate="yes" xml:space="preserve">
          <source>In strict assertion mode, non-strict methods behave like their corresponding strict methods. For example, &lt;a href=&quot;#assert_assert_deepequal_actual_expected_message&quot;&gt;&lt;code&gt;assert.deepEqual()&lt;/code&gt;&lt;/a&gt; will behave like &lt;a href=&quot;#assert_assert_deepstrictequal_actual_expected_message&quot;&gt;&lt;code&gt;assert.deepStrictEqual()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0648c6c88ba0416f92bbc79ff87e571aa792e5c" translate="yes" xml:space="preserve">
          <source>In synchronous code, the &lt;code&gt;'uncaughtException'&lt;/code&gt; event is emitted when the list of unhandled exceptions grows.</source>
          <target state="translated">在同步代码中，当未处理的异常列表增加时，将发出 &lt;code&gt;'uncaughtException'&lt;/code&gt; 事件。</target>
        </trans-unit>
        <trans-unit id="621f9ba64d0f93481000b51697b0e8e212cfe125" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;hello.cc&lt;/code&gt; example, then, the initialization function is &lt;code&gt;Initialize&lt;/code&gt; and the addon module name is &lt;code&gt;addon&lt;/code&gt;.</source>
          <target state="translated">在 &lt;code&gt;hello.cc&lt;/code&gt; 示例中，初始化函数为 &lt;code&gt;Initialize&lt;/code&gt; ，插件模块名称为 &lt;code&gt;addon&lt;/code&gt; 。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
