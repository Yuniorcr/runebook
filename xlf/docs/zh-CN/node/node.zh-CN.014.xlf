<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="node">
    <body>
      <group id="node">
        <trans-unit id="d7a1dc1cbb67ff0479ab2d4ec138ffb994e39f33" translate="yes" xml:space="preserve">
          <source>This method works much like &lt;a href=&quot;http://man7.org/linux/man-pages/man5/resolv.conf.5.html&quot;&gt;resolve.conf&lt;/a&gt;. That is, if attempting to resolve with the first server provided results in a &lt;code&gt;NOTFOUND&lt;/code&gt; error, the &lt;code&gt;resolve()&lt;/code&gt; method will &lt;em&gt;not&lt;/em&gt; attempt to resolve with subsequent servers provided. Fallback DNS servers will only be used if the earlier ones time out or result in some other error.</source>
          <target state="translated">此方法的工作原理与&lt;a href=&quot;http://man7.org/linux/man-pages/man5/resolv.conf.5.html&quot;&gt;resolve.conf&lt;/a&gt;相似。也就是说，如果尝试使用提供的第一个服务器进行解析会导致 &lt;code&gt;NOTFOUND&lt;/code&gt; 错误，则 &lt;code&gt;resolve()&lt;/code&gt; 方法将&lt;em&gt;不会&lt;/em&gt;尝试使用提供的后续服务器进行解析。仅当较早的DNS超时或导致其他错误时，才使用备用DNS服务器。</target>
        </trans-unit>
        <trans-unit id="338d35f90fcbabeed9638d0994745e773b223f83" translate="yes" xml:space="preserve">
          <source>This method works much like &lt;a href=&quot;https://man7.org/linux/man-pages/man5/resolv.conf.5.html&quot;&gt;resolve.conf&lt;/a&gt;. That is, if attempting to resolve with the first server provided results in a &lt;code&gt;NOTFOUND&lt;/code&gt; error, the &lt;code&gt;resolve()&lt;/code&gt; method will &lt;em&gt;not&lt;/em&gt; attempt to resolve with subsequent servers provided. Fallback DNS servers will only be used if the earlier ones time out or result in some other error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da5d4255578cc98dd0bf8203ac9635b394724a79" translate="yes" xml:space="preserve">
          <source>This methods runs a function synchronously outside of a context and return its return value. The store is not accessible within the callback function or the asynchronous operations created within the callback.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44bd57aad2273e41bbc9d4b198d65622d5de140c" translate="yes" xml:space="preserve">
          <source>This methods runs a function synchronously within a context and return its return value. The store is not accessible outside of the callback function or the asynchronous operations created within the callback.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80ac9951e9c15f0ad4db6383a1db28445d3d11d9" translate="yes" xml:space="preserve">
          <source>This mode provides a balance between features and binary size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31b0496aa78380171e1c86de496fc1c12964b92b" translate="yes" xml:space="preserve">
          <source>This mode provides a good balance between features and binary size, and it is the default behavior if no &lt;code&gt;--with-intl&lt;/code&gt; flag is passed. The official binaries are also built in this mode.</source>
          <target state="translated">此模式在功能和二进制大小之间提供了很好的平衡，如果未传递 &lt;code&gt;--with-intl&lt;/code&gt; 标志，则这是默认行为。官方二进制文件也以这种模式构建。</target>
        </trans-unit>
        <trans-unit id="58478d1f06fd4faab8d57954c1994c2807d9e162" translate="yes" xml:space="preserve">
          <source>This module provides an implementation of a subset of the W3C &lt;a href=&quot;https://w3c.github.io/perf-timing-primer/&quot;&gt;Web Performance APIs&lt;/a&gt; as well as additional APIs for Node.js-specific performance measurements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61829d000837d81bc1af29b5a18d65d68b23b06e" translate="yes" xml:space="preserve">
          <source>This must be called after the module has been instantiated; otherwise it will throw an error. It could be called also when the module has already been evaluated, in which case it will do one of the following two things:</source>
          <target state="translated">这个函数必须在模块被实例化后调用,否则会抛出一个错误。它也可以在模块已经被评估时被调用,在这种情况下,它将做以下两种事情之一。</target>
        </trans-unit>
        <trans-unit id="6f7e3676799bc8a3bb8082ebb54448a8f098105d" translate="yes" xml:space="preserve">
          <source>This must be called after the module has been linked; otherwise it will reject. It could be called also when the module has already been evaluated, in which case it will either do nothing if the initial evaluation ended in success (&lt;code&gt;module.status&lt;/code&gt; is &lt;code&gt;'evaluated'&lt;/code&gt;) or it will re-throw the exception that the initial evaluation resulted in (&lt;code&gt;module.status&lt;/code&gt; is &lt;code&gt;'errored'&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e9b793d8f4835801a2e03d986f43b29e0294b7f" translate="yes" xml:space="preserve">
          <source>This object is created internally and is returned from &lt;a href=&quot;timers#timers_setimmediate_callback_args&quot;&gt;&lt;code&gt;setImmediate()&lt;/code&gt;&lt;/a&gt;. It can be passed to &lt;a href=&quot;timers#timers_clearimmediate_immediate&quot;&gt;&lt;code&gt;clearImmediate()&lt;/code&gt;&lt;/a&gt; in order to cancel the scheduled actions.</source>
          <target state="translated">此对象在内部创建，并从&lt;a href=&quot;timers#timers_setimmediate_callback_args&quot;&gt; &lt;code&gt;setImmediate()&lt;/code&gt; &lt;/a&gt;返回。可以将其传递给&lt;a href=&quot;timers#timers_clearimmediate_immediate&quot;&gt; &lt;code&gt;clearImmediate()&lt;/code&gt; &lt;/a&gt;以取消计划的操作。</target>
        </trans-unit>
        <trans-unit id="30df376bcf445e9ea2fd9f87e4e31b34c96b80ed" translate="yes" xml:space="preserve">
          <source>This object is created internally and is returned from &lt;a href=&quot;timers#timers_settimeout_callback_delay_args&quot;&gt;&lt;code&gt;setTimeout()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;timers#timers_setinterval_callback_delay_args&quot;&gt;&lt;code&gt;setInterval()&lt;/code&gt;&lt;/a&gt;. It can be passed to either &lt;a href=&quot;timers#timers_cleartimeout_timeout&quot;&gt;&lt;code&gt;clearTimeout()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;timers#timers_clearinterval_timeout&quot;&gt;&lt;code&gt;clearInterval()&lt;/code&gt;&lt;/a&gt; in order to cancel the scheduled actions.</source>
          <target state="translated">此对象在内部创建，并从&lt;a href=&quot;timers#timers_settimeout_callback_delay_args&quot;&gt; &lt;code&gt;setTimeout()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;timers#timers_setinterval_callback_delay_args&quot;&gt; &lt;code&gt;setInterval()&lt;/code&gt; 返回&lt;/a&gt;。可以将其传递给&lt;a href=&quot;timers#timers_cleartimeout_timeout&quot;&gt; &lt;code&gt;clearTimeout()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;timers#timers_clearinterval_timeout&quot;&gt; &lt;code&gt;clearInterval()&lt;/code&gt; &lt;/a&gt;来取消计划的操作。</target>
        </trans-unit>
        <trans-unit id="11bcec38f2abde0cda814ffe6df5a8ef30f2d46d" translate="yes" xml:space="preserve">
          <source>This object is created internally and returned from &lt;a href=&quot;#http_http_request_options_callback&quot;&gt;&lt;code&gt;http.request()&lt;/code&gt;&lt;/a&gt;. It represents an &lt;em&gt;in-progress&lt;/em&gt; request whose header has already been queued. The header is still mutable using the &lt;a href=&quot;#http_request_setheader_name_value&quot;&gt;&lt;code&gt;setHeader(name, value)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#http_request_getheader_name&quot;&gt;&lt;code&gt;getHeader(name)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#http_request_removeheader_name&quot;&gt;&lt;code&gt;removeHeader(name)&lt;/code&gt;&lt;/a&gt; API. The actual header will be sent along with the first data chunk or when calling &lt;a href=&quot;#http_request_end_data_encoding_callback&quot;&gt;&lt;code&gt;request.end()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此对象在内部创建，并从&lt;a href=&quot;#http_http_request_options_callback&quot;&gt; &lt;code&gt;http.request()&lt;/code&gt; &lt;/a&gt;返回。它表示一个&lt;em&gt;正在进行的&lt;/em&gt;请求，其标头已经排队。使用&lt;a href=&quot;#http_request_setheader_name_value&quot;&gt; &lt;code&gt;setHeader(name, value)&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#http_request_getheader_name&quot;&gt; &lt;code&gt;getHeader(name)&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#http_request_removeheader_name&quot;&gt; &lt;code&gt;removeHeader(name)&lt;/code&gt; &lt;/a&gt; API 仍可以更改标头。实际的标头将与第一个数据块一起发送，或者在调用&lt;a href=&quot;#http_request_end_data_encoding_callback&quot;&gt; &lt;code&gt;request.end()&lt;/code&gt; 时发送&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="276727d393a49049986a6764a6b9df30b3c6e8d1" translate="yes" xml:space="preserve">
          <source>This object is created internally by an HTTP server &amp;mdash; not by the user. It is passed as the second parameter to the &lt;a href=&quot;#http2_event_request&quot;&gt;&lt;code&gt;'request'&lt;/code&gt;&lt;/a&gt; event.</source>
          <target state="translated">该对象是由HTTP服务器在内部创建的，而不是由用户创建的。它作为第二个参数传递给&lt;a href=&quot;#http2_event_request&quot;&gt; &lt;code&gt;'request'&lt;/code&gt; &lt;/a&gt;事件。</target>
        </trans-unit>
        <trans-unit id="5b243244bb0ee3d29d16ef5c4abcf7c8294d4366" translate="yes" xml:space="preserve">
          <source>This object is created internally by an HTTP server &amp;mdash; not by the user. It is passed as the second parameter to the &lt;a href=&quot;#http_event_request&quot;&gt;&lt;code&gt;'request'&lt;/code&gt;&lt;/a&gt; event.</source>
          <target state="translated">该对象是由HTTP服务器在内部创建的，而不是由用户创建的。它作为第二个参数传递给&lt;a href=&quot;#http_event_request&quot;&gt; &lt;code&gt;'request'&lt;/code&gt; &lt;/a&gt;事件。</target>
        </trans-unit>
        <trans-unit id="6d42c4c77f2412e6c0e13465d846324fb36177a5" translate="yes" xml:space="preserve">
          <source>This object is created internally by an HTTP server, not by the user. It is passed as the second parameter to the &lt;a href=&quot;#http2_event_request&quot;&gt;&lt;code&gt;'request'&lt;/code&gt;&lt;/a&gt; event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6828f42c873a55b00234dc584cf52b644aef0a4c" translate="yes" xml:space="preserve">
          <source>This object is created internally by an HTTP server, not by the user. It is passed as the second parameter to the &lt;a href=&quot;#http_event_request&quot;&gt;&lt;code&gt;'request'&lt;/code&gt;&lt;/a&gt; event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b590c4862d8c62879d75abd1aa21bce18d4bbd42" translate="yes" xml:space="preserve">
          <source>This object is not intended to be changed or set manually.</source>
          <target state="translated">此对象不打算手动更改或设置。</target>
        </trans-unit>
        <trans-unit id="39f42f9d3b7870458abec1b8bba415750246f54d" translate="yes" xml:space="preserve">
          <source>This operation cannot be undone.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d68cfded63649ce7ce6716537aea2949bfdc24a" translate="yes" xml:space="preserve">
          <source>This operator is inherited from &lt;code&gt;Uint8Array&lt;/code&gt;, so its behavior on out-of-bounds access is the same as &lt;code&gt;UInt8Array&lt;/code&gt; - that is, getting returns &lt;code&gt;undefined&lt;/code&gt; and setting does nothing.</source>
          <target state="translated">此运算符是从 &lt;code&gt;Uint8Array&lt;/code&gt; 继承的，因此它的越界访问行为与 &lt;code&gt;UInt8Array&lt;/code&gt; 相同-也就是说，获取 &lt;code&gt;undefined&lt;/code&gt; 返回值，并且设置不执行任何操作。</target>
        </trans-unit>
        <trans-unit id="7b68e9509c532127f52fafc15b3bbfa8dc0ae41a" translate="yes" xml:space="preserve">
          <source>This operator is inherited from &lt;code&gt;Uint8Array&lt;/code&gt;, so its behavior on out-of-bounds access is the same as &lt;code&gt;Uint8Array&lt;/code&gt;. In other words, &lt;code&gt;buf[index]&lt;/code&gt; returns &lt;code&gt;undefined&lt;/code&gt; when &lt;code&gt;index&lt;/code&gt; is negative or greater or equal to &lt;code&gt;buf.length&lt;/code&gt;, and &lt;code&gt;buf[index] = value&lt;/code&gt; does not modify the buffer if &lt;code&gt;index&lt;/code&gt; is negative or &lt;code&gt;&amp;gt;= buf.length&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd5bc0556c47cdb09e41d5ea59f149aa88e6a463" translate="yes" xml:space="preserve">
          <source>This option is a no-op. It is kept for compatibility.</source>
          <target state="translated">这个选项是一个无选项。保留这个选项是为了兼容。</target>
        </trans-unit>
        <trans-unit id="4951046a2e8ef3ca45424f2c3f92fe4d355065b2" translate="yes" xml:space="preserve">
          <source>This option is no longer experimental.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ab4df6e22ae62c4d079027a2c218b72789bdc22" translate="yes" xml:space="preserve">
          <source>This option makes the resulting binary link against ICU statically and include a full set of ICU data. A binary created this way has no further external dependencies and supports all locales, but might be rather large. See &lt;a href=&quot;https://github.com/nodejs/node/blob/master/BUILDING.md#build-with-full-icu-support-all-locales-supported-by-icu&quot;&gt;BUILDING.md&lt;/a&gt; on how to compile a binary using this mode.</source>
          <target state="translated">此选项使生成的针对ICU的二进制链接静态生成，并包含完整的ICU数据集。用这种方法创建的二进制文件没有其他外部依赖关系，并且支持所有语言环境，但可能会很大。有关如何使用此模式编译二进制文件，请参阅&lt;a href=&quot;https://github.com/nodejs/node/blob/master/BUILDING.md#build-with-full-icu-support-all-locales-supported-by-icu&quot;&gt;BUILDING.md&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="883efe526d0eeec11102d9602133026d76078e17" translate="yes" xml:space="preserve">
          <source>This option makes the resulting binary link against ICU statically and include a full set of ICU data. A binary created this way has no further external dependencies and supports all locales, but might be rather large. This is the default behavior if no &lt;code&gt;--with-intl&lt;/code&gt; flag is passed. The official binaries are also built in this mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="394a6a9a97a53a953940a51f3bdcf234aa0c8526" translate="yes" xml:space="preserve">
          <source>This option makes the resulting binary link against the ICU library statically, and includes a subset of ICU data (typically only the English locale) within the &lt;code&gt;node&lt;/code&gt; executable.</source>
          <target state="translated">此选项使生成的针对ICU库的二进制链接静态生成，并在 &lt;code&gt;node&lt;/code&gt; 可执行文件中包含ICU数据的子集（通常仅英语语言环境）。</target>
        </trans-unit>
        <trans-unit id="28fb57d096952e1be65ad8500b5938bfe5fc415f" translate="yes" xml:space="preserve">
          <source>This optional function will be called before the stream closes, delaying the &lt;code&gt;'finish'&lt;/code&gt; event until &lt;code&gt;callback&lt;/code&gt; is called. This is useful to close resources or write buffered data before a stream ends.</source>
          <target state="translated">该可选函数将在流关闭之前被调用，从而延迟 &lt;code&gt;'finish'&lt;/code&gt; 事件，直到 &lt;code&gt;callback&lt;/code&gt; 。这对于在流结束之前关闭资源或写入缓冲的数据很有用。</target>
        </trans-unit>
        <trans-unit id="1e3da6c9301c93f8176d26d36040c1dd6fd9b584" translate="yes" xml:space="preserve">
          <source>This optional function will be called in a tick after the stream constructor has returned, delaying any &lt;code&gt;_write()&lt;/code&gt;, &lt;code&gt;_final()&lt;/code&gt; and &lt;code&gt;_destroy()&lt;/code&gt; calls until &lt;code&gt;callback&lt;/code&gt; is called. This is useful to initialize state or asynchronously initialize resources before the stream can be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74b3259a863b34aca5868a5d91c49dfe546aa404" translate="yes" xml:space="preserve">
          <source>This optional function will be scheduled in the next tick by the stream constructor, delaying any &lt;code&gt;_read()&lt;/code&gt; and &lt;code&gt;_destroy()&lt;/code&gt; calls until &lt;code&gt;callback&lt;/code&gt; is called. This is useful to initialize state or asynchronously initialize resources before the stream can be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68790ca7ff85f8f0b0ee5bc2bc19cfd046718f03" translate="yes" xml:space="preserve">
          <source>This page provides guidance for package authors writing &lt;code&gt;package.json&lt;/code&gt; files along with a reference for the &lt;a href=&quot;#packages_node_js_package_json_field_definitions&quot;&gt;&lt;code&gt;package.json&lt;/code&gt;&lt;/a&gt; fields defined by Node.js.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a912ac54f282aa0ebdc6b3d1ffc8071941bc6bc" translate="yes" xml:space="preserve">
          <source>This particular operation may be hard to use in a Node.js context, as the streaming layer makes it hard to know which data will end up in this frame. Also, there is currently no way to consume this data through the Node.js API.</source>
          <target state="translated">这个特殊的操作可能很难在Node.js上下文中使用,因为流媒体层使得我们很难知道哪些数据会最终出现在这个框架中。另外,目前还没有办法通过Node.js API来消费这些数据。</target>
        </trans-unit>
        <trans-unit id="019c5d87354ac10b6f36fe3aa511b3b40d2ed49a" translate="yes" xml:space="preserve">
          <source>This pool could be used as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9a02d3eca403bdc666212cf0c86fe38b7d15dd1" translate="yes" xml:space="preserve">
          <source>This property contains the number of bytes (or objects) in the queue ready to be read. The value provides introspection data regarding the status of the &lt;code&gt;highWaterMark&lt;/code&gt;.</source>
          <target state="translated">此属性包含队列中准备读取的字节（或对象）数。该值提供有关 &lt;code&gt;highWaterMark&lt;/code&gt; 状态的自省数据。</target>
        </trans-unit>
        <trans-unit id="eb9e3144be10a8f3e780007f6d355783bf984b8d" translate="yes" xml:space="preserve">
          <source>This property contains the number of bytes (or objects) in the queue ready to be written. The value provides introspection data regarding the status of the &lt;code&gt;highWaterMark&lt;/code&gt;.</source>
          <target state="translated">此属性包含队列中准备写入的字节（或对象）数。该值提供有关 &lt;code&gt;highWaterMark&lt;/code&gt; 状态的自省数据。</target>
        </trans-unit>
        <trans-unit id="386fd84fec99ef9b47b7d16488786592c44b6e77" translate="yes" xml:space="preserve">
          <source>This property is &lt;code&gt;true&lt;/code&gt; if the underlying file has not been opened yet, i.e. before the &lt;code&gt;'ready'&lt;/code&gt; event is emitted.</source>
          <target state="translated">如果尚未打开基础文件，即在发出 &lt;code&gt;'ready'&lt;/code&gt; 事件之前，则此属性为 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7fec8e8f93a4601a9b7a5243b25b3bca584a0d87" translate="yes" xml:space="preserve">
          <source>This property is &lt;code&gt;true&lt;/code&gt; if the worker exited due to &lt;code&gt;.kill()&lt;/code&gt; or &lt;code&gt;.disconnect()&lt;/code&gt;. If the worker exited any other way, it is &lt;code&gt;false&lt;/code&gt;. If the worker has not exited, it is &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f517051737746faa183df11c32566027df8f1e76" translate="yes" xml:space="preserve">
          <source>This property is &lt;code&gt;undefined&lt;/code&gt; for unrecognized &lt;code&gt;KeyObject&lt;/code&gt; types and symmetric keys.</source>
          <target state="translated">对于无法识别的 &lt;code&gt;KeyObject&lt;/code&gt; 类型和对称密钥，此属性 &lt;code&gt;undefined&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d3602e2ea022e3bc39b7484318da9a603e6288b8" translate="yes" xml:space="preserve">
          <source>This property is a reference to the instance itself.</source>
          <target state="translated">此属性是对实例本身的引用。</target>
        </trans-unit>
        <trans-unit id="5e977f5de1846b2e85081b0ccf09406769d1cc7c" translate="yes" xml:space="preserve">
          <source>This property is also set for received headers. It will contain the names of all headers marked as sensitive, including ones marked that way automatically.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e33cc887d6f76fe29d205691170fbab8a5395204" translate="yes" xml:space="preserve">
          <source>This property is deprecated.</source>
          <target state="translated">此属性已被废弃。</target>
        </trans-unit>
        <trans-unit id="f73f92d394bd6733681726663afa3be14f683e89" translate="yes" xml:space="preserve">
          <source>This property is deprecated. Please use &lt;code&gt;crypto.setFips()&lt;/code&gt; and &lt;code&gt;crypto.getFips()&lt;/code&gt; instead.</source>
          <target state="translated">不推荐使用此属性。请改用 &lt;code&gt;crypto.setFips()&lt;/code&gt; 和 &lt;code&gt;crypto.getFips()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8853fccd2133c9b9842c8f0088d75409954f4216" translate="yes" xml:space="preserve">
          <source>This property is guaranteed to be an instance of the &lt;a href=&quot;net#net_class_net_socket&quot;&gt;&amp;lt;net.Socket&amp;gt;&lt;/a&gt; class, a subclass of &lt;a href=&quot;stream#stream_class_stream_duplex&quot;&gt;&amp;lt;stream.Duplex&amp;gt;&lt;/a&gt;, unless the user specified a socket type other than &lt;a href=&quot;net#net_class_net_socket&quot;&gt;&amp;lt;net.Socket&amp;gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7a656096a20de49803ec12a402ed5a91dccea98" translate="yes" xml:space="preserve">
          <source>This property is particularly useful as a means of determining if a client or server fully transmitted a message before a connection was terminated:</source>
          <target state="translated">这个属性特别有用,可以用来确定客户端或服务器在连接终止前是否完全传输了消息。</target>
        </trans-unit>
        <trans-unit id="f429a22f8731ad82e20fb7b571d26a7a167f34d0" translate="yes" xml:space="preserve">
          <source>This property now returns &lt;code&gt;undefined&lt;/code&gt; for KeyObject instances of unrecognized type instead of aborting.</source>
          <target state="translated">现在，对于无法识别类型的KeyObject实例，此属性返回 &lt;code&gt;undefined&lt;/code&gt; ，而不是中止。</target>
        </trans-unit>
        <trans-unit id="0258cc0d87a79ada93448982013acd1442be2048" translate="yes" xml:space="preserve">
          <source>This property refers to the value of underlying file descriptor of &lt;code&gt;process.stderr&lt;/code&gt;. The value is fixed at &lt;code&gt;2&lt;/code&gt;. In &lt;a href=&quot;worker_threads#worker_threads_class_worker&quot;&gt;&lt;code&gt;Worker&lt;/code&gt;&lt;/a&gt; threads, this field does not exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92d2b06eec651f39ccf3c9d6223d4bc3c22e2f93" translate="yes" xml:space="preserve">
          <source>This property refers to the value of underlying file descriptor of &lt;code&gt;process.stdin&lt;/code&gt;. The value is fixed at &lt;code&gt;0&lt;/code&gt;. In &lt;a href=&quot;worker_threads#worker_threads_class_worker&quot;&gt;&lt;code&gt;Worker&lt;/code&gt;&lt;/a&gt; threads, this field does not exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e844b6956113839c2be7aaa33d95e92dee6d1883" translate="yes" xml:space="preserve">
          <source>This property refers to the value of underlying file descriptor of &lt;code&gt;process.stdout&lt;/code&gt;. The value is fixed at &lt;code&gt;1&lt;/code&gt;. In &lt;a href=&quot;worker_threads#worker_threads_class_worker&quot;&gt;&lt;code&gt;Worker&lt;/code&gt;&lt;/a&gt; threads, this field does not exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ac2df8cfb8a6ab600d58d12a18a1fd49b8186b6" translate="yes" xml:space="preserve">
          <source>This property reflects the current state of a &lt;code&gt;Readable&lt;/code&gt; stream as described in the &lt;a href=&quot;#stream_three_states&quot;&gt;Three states&lt;/a&gt; section.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8bac265f5b733744a963486d246686da65c6443" translate="yes" xml:space="preserve">
          <source>This property represents the state of the connection as a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eefab09d53dbef4bb15074330e33f073160962a7" translate="yes" xml:space="preserve">
          <source>This property shows the number of characters buffered for writing. The buffer may contain strings whose length after encoding is not yet known. So this number is only an approximation of the number of bytes in the buffer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1a6a91551ecd980b558ff842b37549796e6bf30" translate="yes" xml:space="preserve">
          <source>This property shows the number of characters currently buffered to be written. See &lt;a href=&quot;net#net_socket_buffersize&quot;&gt;&lt;code&gt;net.Socket.bufferSize&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">此属性显示当前缓冲以待写入的字符数。有关详细信息，请参见&lt;a href=&quot;net#net_socket_buffersize&quot;&gt; &lt;code&gt;net.Socket.bufferSize&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="275fd6bab7ae5428d094e40bf2e70f30dde5cd7c" translate="yes" xml:space="preserve">
          <source>This represents the underlying binary scalar datatype of the &lt;code&gt;TypedArray&lt;/code&gt;. Elements of this enum correspond to &lt;a href=&quot;https://tc39.github.io/ecma262/#sec-typedarray-objects&quot;&gt;Section 22.2&lt;/a&gt; of the &lt;a href=&quot;https://tc39.github.io/ecma262/&quot;&gt;ECMAScript Language Specification&lt;/a&gt;.</source>
          <target state="translated">这表示 &lt;code&gt;TypedArray&lt;/code&gt; 的基础二进制标量数据类型。该枚举对应于元件&lt;a href=&quot;https://tc39.github.io/ecma262/#sec-typedarray-objects&quot;&gt;第22.2节&lt;/a&gt;所述的&lt;a href=&quot;https://tc39.github.io/ecma262/&quot;&gt;ECMAScript的语言规范&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="750611976052ddea1aefb70b31d097d53f3ce423" translate="yes" xml:space="preserve">
          <source>This restricts the N-API surface to just the functionality that was available in the specified (and earlier) versions.</source>
          <target state="translated">这就限制了N-API表面只限于指定(和更早)版本中可用的功能。</target>
        </trans-unit>
        <trans-unit id="36c4ff0f9108bfa3f5ac17d8e5cddf8133c7ace6" translate="yes" xml:space="preserve">
          <source>This section describes the fields used by the Node.js runtime. Other tools (such as &lt;a href=&quot;https://docs.npmjs.com/creating-a-package-json-file&quot;&gt;npm&lt;/a&gt;) use additional fields which are ignored by Node.js and not documented here.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34670d73c4e4f5a65a2cb44fbd1ad5dc7e3c2e51" translate="yes" xml:space="preserve">
          <source>This section was moved to &lt;a href=&quot;module#module_source_map_v3_support&quot;&gt;Modules: &lt;code&gt;module&lt;/code&gt; core module&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3356fbb2ec8113ec889350faf51d5150518f85cf" translate="yes" xml:space="preserve">
          <source>This section was moved to &lt;a href=&quot;module#module_the_module_object&quot;&gt;Modules: &lt;code&gt;module&lt;/code&gt; core module&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36ef0fd0665d4357db1b84a2e19547d2706f8eb2" translate="yes" xml:space="preserve">
          <source>This section was moved to &lt;a href=&quot;packages&quot;&gt;Modules: Packages&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e161eae495f60eecc39fcb871e7db25d724d21cd" translate="yes" xml:space="preserve">
          <source>This sends a chunk of the response body. This method may be called multiple times to provide successive parts of the body.</source>
          <target state="translated">这将发送响应体的一个分块。这个方法可以被多次调用,以提供连续的主体部分。</target>
        </trans-unit>
        <trans-unit id="f47c2c3b1777de556577edd88a50fe16d9b43ef1" translate="yes" xml:space="preserve">
          <source>This should only be disabled for testing; HTTP requires the Date header in responses.</source>
          <target state="translated">这应该只在测试时被禁用;HTTP要求在响应中使用Date头。</target>
        </trans-unit>
        <trans-unit id="f59eae131a4bc1e43befd9071b9f0e34721e73ef" translate="yes" xml:space="preserve">
          <source>This status does not convey any information regarding if &lt;code&gt;module.link()&lt;/code&gt; has been called. See &lt;code&gt;module.linkingStatus&lt;/code&gt; for that.</source>
          <target state="translated">此状态不传达有关是否已调用 &lt;code&gt;module.link()&lt;/code&gt; 的任何信息。参见 &lt;code&gt;module.linkingStatus&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d569011bacf9d6bd4852dc82cdff4824a76def0c" translate="yes" xml:space="preserve">
          <source>This symbol can be set as a property on the HTTP/2 headers object with an array value in order to provide a list of headers considered sensitive. See &lt;a href=&quot;#http2_sensitive_headers&quot;&gt;Sensitive headers&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0116ac87fb2193b9cadfa6e6c4b58a397209ffa8" translate="yes" xml:space="preserve">
          <source>This symbol shall be used to install a listener for only monitoring &lt;code&gt;'error'&lt;/code&gt; events. Listeners installed using this symbol are called before the regular &lt;code&gt;'error'&lt;/code&gt; listeners are called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d49c824be76a8237417ac95208be1205943ec8d" translate="yes" xml:space="preserve">
          <source>This throws an error if &lt;code&gt;value&lt;/code&gt; cannot be serialized.</source>
          <target state="translated">如果无法序列化 &lt;code&gt;value&lt;/code&gt; 则会引发错误。</target>
        </trans-unit>
        <trans-unit id="c1f045702ea4da181894894d719dc7571a2ba4e1" translate="yes" xml:space="preserve">
          <source>This transition will continue for the &lt;em&gt;entire&lt;/em&gt; synchronous execution. This means that if, for example, the context is entered within an event handler subsequent event handlers will also run within that context unless specifically bound to another context with an &lt;code&gt;AsyncResource&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c184cfb934c9b738977c32837985d21a951b41c" translate="yes" xml:space="preserve">
          <source>This type of record contains an array property called &lt;code&gt;entries&lt;/code&gt; which refers to &lt;a href=&quot;#dns_dns_resolvetxt_hostname_callback&quot;&gt;&lt;code&gt;dns.resolveTxt()&lt;/code&gt;&lt;/a&gt;, e.g. &lt;code&gt;{ entries: ['...'], type: 'TXT' }&lt;/code&gt;</source>
          <target state="translated">这种类型的记录包含一个称为 &lt;code&gt;entries&lt;/code&gt; 的数组属性，该属性引用&lt;a href=&quot;#dns_dns_resolvetxt_hostname_callback&quot;&gt; &lt;code&gt;dns.resolveTxt()&lt;/code&gt; &lt;/a&gt;，例如 &lt;code&gt;{ entries: ['...'], type: 'TXT' }&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6eeca1c2f00a4310890a7139dcfe6a2e6c8c965b" translate="yes" xml:space="preserve">
          <source>This type of record contains an array property called &lt;code&gt;entries&lt;/code&gt; which refers to &lt;a href=&quot;#dns_dnspromises_resolvetxt_hostname&quot;&gt;&lt;code&gt;dnsPromises.resolveTxt()&lt;/code&gt;&lt;/a&gt;, e.g. &lt;code&gt;{ entries: ['...'], type: 'TXT' }&lt;/code&gt;</source>
          <target state="translated">这种类型的记录包含一个称为一个数组属性 &lt;code&gt;entries&lt;/code&gt; 其指&lt;a href=&quot;#dns_dnspromises_resolvetxt_hostname&quot;&gt; &lt;code&gt;dnsPromises.resolveTxt()&lt;/code&gt; &lt;/a&gt;例如 &lt;code&gt;{ entries: ['...'], type: 'TXT' }&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4fe3642f2b14cc07a05a25a58a28addaf29cbab1" translate="yes" xml:space="preserve">
          <source>This use of the &lt;a href=&quot;domain&quot;&gt;&lt;code&gt;domain&lt;/code&gt;&lt;/a&gt; module in the REPL has these side effects:</source>
          <target state="translated">REPL 中对&lt;a href=&quot;domain&quot;&gt; &lt;code&gt;domain&lt;/code&gt; &lt;/a&gt;模块的这种使用具有以下副作用：</target>
        </trans-unit>
        <trans-unit id="aba8179089db1922508405d8b782dab836cca61d" translate="yes" xml:space="preserve">
          <source>This value is also available as &lt;a href=&quot;#buffer_buffer_kmaxlength&quot;&gt;&lt;code&gt;buffer.kMaxLength&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">该值也可以作为&lt;a href=&quot;#buffer_buffer_kmaxlength&quot;&gt; &lt;code&gt;buffer.kMaxLength&lt;/code&gt; 使用&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1960fefc47eea7af53d2386124418b76d027b6f6" translate="yes" xml:space="preserve">
          <source>This value may depend on the JS engine that is being used.</source>
          <target state="translated">这个值可能取决于正在使用的JS引擎。</target>
        </trans-unit>
        <trans-unit id="1786c62ca4014aae9c8daf35face4f14af3bb962" translate="yes" xml:space="preserve">
          <source>This variable may appear to be global but is not. See &lt;a href=&quot;modules#modules_dirname&quot;&gt;&lt;code&gt;__dirname&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此变量可能看起来是全局变量，但不是全局变量。参见&lt;a href=&quot;modules#modules_dirname&quot;&gt; &lt;code&gt;__dirname&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a88498e969bb560f2877e63299e4b7964f93ae3a" translate="yes" xml:space="preserve">
          <source>This variable may appear to be global but is not. See &lt;a href=&quot;modules#modules_exports&quot;&gt;&lt;code&gt;exports&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此变量可能看起来是全局变量，但不是全局变量。见&lt;a href=&quot;modules#modules_exports&quot;&gt; &lt;code&gt;exports&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="12ae6d48315f5836aaba96e8fe5033389f67632a" translate="yes" xml:space="preserve">
          <source>This variable may appear to be global but is not. See &lt;a href=&quot;modules#modules_filename&quot;&gt;&lt;code&gt;__filename&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此变量可能看起来是全局变量，但不是全局变量。参见&lt;a href=&quot;modules#modules_filename&quot;&gt; &lt;code&gt;__filename&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9d045d7bbd376d894aa22ac1819fb6f7283f644a" translate="yes" xml:space="preserve">
          <source>This variable may appear to be global but is not. See &lt;a href=&quot;modules#modules_module&quot;&gt;&lt;code&gt;module&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此变量可能看起来是全局变量，但不是全局变量。参见&lt;a href=&quot;modules#modules_module&quot;&gt; &lt;code&gt;module&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0714b1ea5c5b147147404c53c9c7ea1c9d011bd2" translate="yes" xml:space="preserve">
          <source>This variable may appear to be global but is not. See &lt;a href=&quot;modules#modules_require_id&quot;&gt;&lt;code&gt;require()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此变量可能看起来是全局变量，但不是全局变量。参见&lt;a href=&quot;modules#modules_require_id&quot;&gt; &lt;code&gt;require()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7388904d6f49c90b401aa690cef27c57e52dd479" translate="yes" xml:space="preserve">
          <source>This was an undocumented helper function not intended for use outside Node.js core and obsoleted by the removal of NPN (Next Protocol Negotiation) support.</source>
          <target state="translated">这是一个未记录的帮助函数,不打算在Node.js核心之外使用,并且由于NPN(Next Protocol Negotiation)支持的移除而过时。</target>
        </trans-unit>
        <trans-unit id="ce2a6d546b034160617c687e3f2691f4eb71b066" translate="yes" xml:space="preserve">
          <source>This was never a documented feature.</source>
          <target state="translated">这是从来没有记录的功能。</target>
        </trans-unit>
        <trans-unit id="946c9714458dbb894196ffd1f153f59f0b8d6c98" translate="yes" xml:space="preserve">
          <source>This will ensure that the per-addon-instance data reaches each binding that can be called from JavaScript. The per-addon-instance data must also be passed into any asynchronous callbacks the addon may create.</source>
          <target state="translated">这将确保每个addon-instance数据到达每个可以从JavaScript调用的绑定。每个addon-instance数据也必须传递到addon可能创建的任何异步回调中。</target>
        </trans-unit>
        <trans-unit id="110650dd72d6d2fde8d01c7a0259236b0dc7296b" translate="yes" xml:space="preserve">
          <source>This will not change the behavior in other error-throwing situations, e.g. when the input data has an invalid format. Using this method, it will not be possible to determine whether the input ended prematurely or lacks the integrity checks, making it necessary to manually check that the decompressed result is valid.</source>
          <target state="translated">这不会改变其他错误抛出情况下的行为,例如当输入数据的格式无效时。使用这种方法,将无法确定输入是否过早结束或缺乏完整性检查,使得有必要手动检查解压结果是否有效。</target>
        </trans-unit>
        <trans-unit id="d25a5d904dfe4b2d558d89e8b007b3cb884783fb" translate="yes" xml:space="preserve">
          <source>This will not work because the callback function passed to &lt;code&gt;fs.readFile()&lt;/code&gt; is called asynchronously. By the time the callback has been called, the surrounding code, including the &lt;code&gt;try&amp;hellip;catch&lt;/code&gt; block, will have already exited. Throwing an error inside the callback &lt;strong&gt;can crash the Node.js process&lt;/strong&gt; in most cases. If &lt;a href=&quot;domain&quot;&gt;domains&lt;/a&gt; are enabled, or a handler has been registered with &lt;code&gt;process.on('uncaughtException')&lt;/code&gt;, such errors can be intercepted.</source>
          <target state="translated">这将不起作用，因为传递给 &lt;code&gt;fs.readFile()&lt;/code&gt; 的回调函数是异步调用的。到回调被调用时，周围的代码（包括 &lt;code&gt;try&amp;hellip;catch&lt;/code&gt; 块）将已经退出。在大多数情况下，在回调中引发错误&lt;strong&gt;可能会使Node.js进程崩溃&lt;/strong&gt;。如果启用了&lt;a href=&quot;domain&quot;&gt;域&lt;/a&gt;，或者已向 &lt;code&gt;process.on('uncaughtException')&lt;/code&gt; 注册了处理程序，则可以拦截此类错误。</target>
        </trans-unit>
        <trans-unit id="3b97a9813dd547ff5a18b92d60ea9c7c60a244fb" translate="yes" xml:space="preserve">
          <source>This will opt into the default &lt;code&gt;NAPI_VERSION&lt;/code&gt; for the given release of Node.js. In order to ensure compatibility with specific versions of N-API, the version can be specified explicitly when including the header:</source>
          <target state="translated">对于给定的Node.js版本，这将选择默认的 &lt;code&gt;NAPI_VERSION&lt;/code&gt; 。为了确保与特定版本的N-API兼容，可以在包含标头时明确指定该版本：</target>
        </trans-unit>
        <trans-unit id="c2caba2077af1acf81bcaf212679d9efc23f7b46" translate="yes" xml:space="preserve">
          <source>This will track where the current cursor lands in the input string, when reading input from a TTY stream. The position of cursor determines the portion of the input string that will be modified as input is processed, as well as the column where the terminal caret will be rendered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03b61b4fd778d330c4d9ae04ee169c3836b77a3e" translate="yes" xml:space="preserve">
          <source>This will, however, generally degrade compression.</source>
          <target state="translated">不过,这一般会降低压缩率。</target>
        </trans-unit>
        <trans-unit id="898d4d4c37da591f1dbaea989ea4b845e4eb4dcd" translate="yes" xml:space="preserve">
          <source>This would result in a large number of handles being created, consuming substantial resources. In addition, even though the native code could only use the most recent handle, all of the associated objects would also be kept alive since they all share the same scope.</source>
          <target state="translated">这将导致大量的句柄被创建,消耗大量资源。此外,尽管本地代码只能使用最近的句柄,但所有相关的对象也将保持活力,因为它们都共享同一个范围。</target>
        </trans-unit>
        <trans-unit id="d467439a515ceca23a9a5fc18245fc89bdccd935" translate="yes" xml:space="preserve">
          <source>Though the call to &lt;code&gt;dns.lookup()&lt;/code&gt; will be asynchronous from JavaScript's perspective, it is implemented as a synchronous call to &lt;a href=&quot;http://man7.org/linux/man-pages/man3/getaddrinfo.3.html&quot;&gt;&lt;code&gt;getaddrinfo(3)&lt;/code&gt;&lt;/a&gt; that runs on libuv's threadpool. This can have surprising negative performance implications for some applications, see the &lt;a href=&quot;cli#cli_uv_threadpool_size_size&quot;&gt;&lt;code&gt;UV_THREADPOOL_SIZE&lt;/code&gt;&lt;/a&gt; documentation for more information.</source>
          <target state="translated">尽管从JavaScript的角度来看，对 &lt;code&gt;dns.lookup()&lt;/code&gt; 的调用将是异步的，但它是作为对libuv线程池上运行的&lt;a href=&quot;http://man7.org/linux/man-pages/man3/getaddrinfo.3.html&quot;&gt; &lt;code&gt;getaddrinfo(3)&lt;/code&gt; &lt;/a&gt;的同步调用实现的。对于某些应用程序，这可能会对性能产生负面影响，请参见&lt;a href=&quot;cli#cli_uv_threadpool_size_size&quot;&gt; &lt;code&gt;UV_THREADPOOL_SIZE&lt;/code&gt; &lt;/a&gt;文档以获取更多信息。</target>
        </trans-unit>
        <trans-unit id="bf8b9bcd61ac02e20b1f70392f83be7f64e30820" translate="yes" xml:space="preserve">
          <source>Threadpool Usage</source>
          <target state="translated">线程池使用情况</target>
        </trans-unit>
        <trans-unit id="194378c3031d5f4c91d972a4e5fae3797161a3bf" translate="yes" xml:space="preserve">
          <source>Threadpool usage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b84236df57d6e40394ff631a8881c1eb98f55ef" translate="yes" xml:space="preserve">
          <source>Threadpool usage and performance considerations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c31834fd4f46e0567ccae1bc9794a97e2ef2ae6" translate="yes" xml:space="preserve">
          <source>Threads can be added to and removed from a &lt;code&gt;napi_threadsafe_function&lt;/code&gt; object during its existence. Thus, in addition to specifying an initial number of threads upon creation, &lt;code&gt;napi_acquire_threadsafe_function&lt;/code&gt; can be called to indicate that a new thread will start making use of the thread-safe function. Similarly, &lt;code&gt;napi_release_threadsafe_function&lt;/code&gt; can be called to indicate that an existing thread will stop making use of the thread-safe function.</source>
          <target state="translated">可以在 &lt;code&gt;napi_threadsafe_function&lt;/code&gt; 对象存在期间向其添加线程或从中删除线程。因此，除了在创建时指定初始线程数之外，还可以调用 &lt;code&gt;napi_acquire_threadsafe_function&lt;/code&gt; 来指示新线程将开始使用线程安全功能。同样，可以调用 &lt;code&gt;napi_release_threadsafe_function&lt;/code&gt; 来指示现有线程将停止使用线程安全功能。</target>
        </trans-unit>
        <trans-unit id="dd491a1a20798b4f3eab7ca47ce9cde3c1a3f963" translate="yes" xml:space="preserve">
          <source>Three States</source>
          <target state="translated">三国</target>
        </trans-unit>
        <trans-unit id="6e9c26957242e69ce7b5e779efca06887090978a" translate="yes" xml:space="preserve">
          <source>Three states</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f702a6c25a0cf4674613f32d0f9697e71800855" translate="yes" xml:space="preserve">
          <source>Throw ERR_INVALID_ARG_VALUE instead of ERR_INVALID_OPT_VALUE for invalid input arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e50789f4c54d6872bdd31a68fcda1c02e644ea74" translate="yes" xml:space="preserve">
          <source>Throw a &lt;em&gt;Module Not Found&lt;/em&gt; error.</source>
          <target state="translated">引发&lt;em&gt;模块未找到&lt;/em&gt;错误。</target>
        </trans-unit>
        <trans-unit id="3c2047ffcc9c1f89b1e17b907380a299308c953e" translate="yes" xml:space="preserve">
          <source>Throw a &lt;em&gt;Package Import Not Defined&lt;/em&gt; error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="157fa426a458f5a47aca54e42c4db7bded9d4f50" translate="yes" xml:space="preserve">
          <source>Throw a &lt;em&gt;Package Path Not Exported&lt;/em&gt; error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8170c71e55e480b36becd3a8bdae44cd43c0144e" translate="yes" xml:space="preserve">
          <source>Throw an &lt;em&gt;Invalid Module Specifier&lt;/em&gt; error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df6f0a31b4716ff39675671a8367ef62be40d012" translate="yes" xml:space="preserve">
          <source>Throw an &lt;em&gt;Invalid Package Configuration&lt;/em&gt; error.</source>
          <target state="translated">引发&lt;em&gt;无效的软件包配置&lt;/em&gt;错误。</target>
        </trans-unit>
        <trans-unit id="a78220df6c48d2fb08d8df29384d6309dc62e9a0" translate="yes" xml:space="preserve">
          <source>Throw an &lt;em&gt;Invalid Specifier&lt;/em&gt; error.</source>
          <target state="translated">引发&lt;em&gt;无效的说明符&lt;/em&gt;错误。</target>
        </trans-unit>
        <trans-unit id="14508f1d752fa9f1a58cf9aef8de034062c7fcf3" translate="yes" xml:space="preserve">
          <source>Throw an &lt;em&gt;Unsupported Directory Import&lt;/em&gt; error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6b845975caf9cd24e6a6a64484cf34be9a5885d" translate="yes" xml:space="preserve">
          <source>Throw an &lt;em&gt;Unsupported File Extension&lt;/em&gt; error.</source>
          <target state="translated">引发&lt;em&gt;不支持的文件扩展名&lt;/em&gt;错误。</target>
        </trans-unit>
        <trans-unit id="274bb320296e78e649774ab7cf14c8bffcb9c969" translate="yes" xml:space="preserve">
          <source>Throw errors for deprecations.</source>
          <target state="translated">抛出弃用的错误。</target>
        </trans-unit>
        <trans-unit id="ca7b995e33945e66abe60ea39498a0102ea95fab" translate="yes" xml:space="preserve">
          <source>Thrown in case a function option does not provide a valid value for one of its returned object properties on execution.</source>
          <target state="translated">当函数选项在执行时没有为其返回的对象属性提供有效值时抛出。</target>
        </trans-unit>
        <trans-unit id="e035afeae4a1775ec604c8b5d8f677f77e629c2f" translate="yes" xml:space="preserve">
          <source>Thrown in case a function option does not provide an expected value type for one of its returned object properties on execution.</source>
          <target state="translated">当函数选项在执行时没有为其返回的一个对象属性提供预期值类型时抛出。</target>
        </trans-unit>
        <trans-unit id="500f81cca30019a552ab883030a9f388e713b7de" translate="yes" xml:space="preserve">
          <source>Thrown in case a function option does not return an expected value type on execution, such as when a function is expected to return a promise.</source>
          <target state="translated">在函数选项在执行时没有返回预期值类型的情况下抛出,例如当一个函数预期返回一个承诺时。</target>
        </trans-unit>
        <trans-unit id="5ad63a3ff43abbab909982b69d4d78b65b2aafab" translate="yes" xml:space="preserve">
          <source>Thrown when an attempt is made to recursively dispatch an event on &lt;code&gt;EventTarget&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34a1483538db6bbfe91dd9089515dcf6beb98e43" translate="yes" xml:space="preserve">
          <source>Throws &lt;code&gt;ERR_HTTP2_INVALID_SETTING_VALUE&lt;/code&gt; for invalid &lt;code&gt;settings&lt;/code&gt; values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e302253df36558f348486c40585b9f94218d17e8" translate="yes" xml:space="preserve">
          <source>Throws &lt;code&gt;ERR_INVALID_ARG_TYPE&lt;/code&gt; for invalid &lt;code&gt;settings&lt;/code&gt; argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c9dfd60d599c5257e4849241e700802dc509d8e" translate="yes" xml:space="preserve">
          <source>Throws &lt;code&gt;ERR_OUT_OF_RANGE&lt;/code&gt; instead of &lt;code&gt;ERR_INDEX_OUT_OF_RANGE&lt;/code&gt;.</source>
          <target state="translated">抛出 &lt;code&gt;ERR_OUT_OF_RANGE&lt;/code&gt; 而不是 &lt;code&gt;ERR_INDEX_OUT_OF_RANGE&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1f533babc33348b6d3fb4950583edc945f148749" translate="yes" xml:space="preserve">
          <source>Throws &lt;code&gt;value&lt;/code&gt; if &lt;code&gt;value&lt;/code&gt; is not &lt;code&gt;undefined&lt;/code&gt; or &lt;code&gt;null&lt;/code&gt;. This is useful when testing the &lt;code&gt;error&lt;/code&gt; argument in callbacks. The stack trace contains all frames from the error passed to &lt;code&gt;ifError()&lt;/code&gt; including the potential new frames for &lt;code&gt;ifError()&lt;/code&gt; itself.</source>
          <target state="translated">如果 &lt;code&gt;value&lt;/code&gt; 不是 &lt;code&gt;undefined&lt;/code&gt; 或 &lt;code&gt;null&lt;/code&gt; ,则抛出 &lt;code&gt;value&lt;/code&gt; 。在回调中测试 &lt;code&gt;error&lt;/code&gt; 参数时，这很有用。堆栈跟踪包含从错误传递到 &lt;code&gt;ifError()&lt;/code&gt; 的所有帧，包括 &lt;code&gt;ifError()&lt;/code&gt; 本身潜在的新帧。</target>
        </trans-unit>
        <trans-unit id="1d293028683a03e7c8565aef633c4bd64df69e5d" translate="yes" xml:space="preserve">
          <source>Throws a &lt;a href=&quot;errors#errors_class_systemerror&quot;&gt;&lt;code&gt;SystemError&lt;/code&gt;&lt;/a&gt; if a user has no &lt;code&gt;username&lt;/code&gt; or &lt;code&gt;homedir&lt;/code&gt;.</source>
          <target state="translated">如果用户没有 &lt;code&gt;username&lt;/code&gt; 或 &lt;code&gt;homedir&lt;/code&gt; ,则引发&lt;a href=&quot;errors#errors_class_systemerror&quot;&gt; &lt;code&gt;SystemError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="eb037643826c156fd10159ab0e43d2a4ebea39d9" translate="yes" xml:space="preserve">
          <source>Throws an &lt;a href=&quot;#assert_class_assert_assertionerror&quot;&gt;&lt;code&gt;AssertionError&lt;/code&gt;&lt;/a&gt; with the provided error message or a default error message. If the &lt;code&gt;message&lt;/code&gt; parameter is an instance of an &lt;a href=&quot;errors#errors_class_error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt; then it will be thrown instead of the &lt;a href=&quot;#assert_class_assert_assertionerror&quot;&gt;&lt;code&gt;AssertionError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ab0da4aef65302e8e7125139145d3ae9207952c" translate="yes" xml:space="preserve">
          <source>Throws an &lt;code&gt;AssertionError&lt;/code&gt; with the provided error message or a default error message. If the &lt;code&gt;message&lt;/code&gt; parameter is an instance of an &lt;a href=&quot;errors#errors_class_error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt; then it will be thrown instead of the &lt;code&gt;AssertionError&lt;/code&gt;.</source>
          <target state="translated">使用提供的错误消息或默认错误消息引发 &lt;code&gt;AssertionError&lt;/code&gt; 。如果 &lt;code&gt;message&lt;/code&gt; 参数是&lt;a href=&quot;errors#errors_class_error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; 的&lt;/a&gt;一个实例，则将引发它而不是 &lt;code&gt;AssertionError&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0f221650e50054f81fe163161fb94d86584723cb" translate="yes" xml:space="preserve">
          <source>Throws if the &lt;code&gt;fromEnc&lt;/code&gt; or &lt;code&gt;toEnc&lt;/code&gt; specify invalid character encodings or if conversion from &lt;code&gt;fromEnc&lt;/code&gt; to &lt;code&gt;toEnc&lt;/code&gt; is not permitted.</source>
          <target state="translated">如果 &lt;code&gt;fromEnc&lt;/code&gt; 或 &lt;code&gt;toEnc&lt;/code&gt; 指定无效的字符编码，或者 &lt;code&gt;fromEnc&lt;/code&gt; 将 &lt;code&gt;toEnc&lt;/code&gt; 转换为toEnc，则抛出该异常。</target>
        </trans-unit>
        <trans-unit id="60660bb221304e5fad9ca2c2dd92e7d7c409ce60" translate="yes" xml:space="preserve">
          <source>Thus, even if a cycle is encountered, or if there are dependency conflicts, every module will be able to get a version of its dependency that it can use.</source>
          <target state="translated">因此,即使遇到循环,或者存在依赖冲突,每个模块都能得到它可以使用的依赖版本。</target>
        </trans-unit>
        <trans-unit id="f395da331ca8317cd167d68da7aed50270080a44" translate="yes" xml:space="preserve">
          <source>Thus, for an addon to remain ABI-compatible across Node.js major versions, it must make use exclusively of N-API by restricting itself to using</source>
          <target state="translated">因此,一个addon要想在Node.js的主要版本中保持ABI兼容,它必须通过限制自己使用N-API来专门使用。</target>
        </trans-unit>
        <trans-unit id="112c3024c3d7912fd57cd8ebb68639fc60c09698" translate="yes" xml:space="preserve">
          <source>Thus, for an addon to remain ABI-compatible across Node.js major versions, it must use N-API exclusively by restricting itself to using</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4c45de0fe64ac43c72a798c67faaadadfaa1b90" translate="yes" xml:space="preserve">
          <source>Timeout</source>
          <target state="translated">Timeout</target>
        </trans-unit>
        <trans-unit id="551d6adf37a9cb1b523706676a5c3aab5b5fcb93" translate="yes" xml:space="preserve">
          <source>Timeout interactions with asynchronous tasks and Promises</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca7f027cfebdbd1cfd15712b89e96328bae876ed" translate="yes" xml:space="preserve">
          <source>Timeout limitations when using process.nextTick(), Promises, and queueMicrotask()</source>
          <target state="translated">使用process.nextTick()、Promises和queueMicrotask()时的超时限制。</target>
        </trans-unit>
        <trans-unit id="841cd03a97cd854590864d79ae48ee749c5e902e" translate="yes" xml:space="preserve">
          <source>Timers</source>
          <target state="translated">Timers</target>
        </trans-unit>
        <trans-unit id="b30cd93bad7030d8a76933dae1934ce5c619d4e0" translate="yes" xml:space="preserve">
          <source>Timers Promises API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7391e8fca236efbdf30a41b1765e03b0aedeea8" translate="yes" xml:space="preserve">
          <source>To access it:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f285c5caf3395120404e2b15ef1afaae7633a15" translate="yes" xml:space="preserve">
          <source>To access the &lt;code&gt;stream&lt;/code&gt; module:</source>
          <target state="translated">要访问 &lt;code&gt;stream&lt;/code&gt; 模块：</target>
        </trans-unit>
        <trans-unit id="113093009a6693093866588b6702951e8ef8612a" translate="yes" xml:space="preserve">
          <source>To achieve consistent results when working with POSIX file paths on any operating system, use &lt;a href=&quot;#path_path_posix&quot;&gt;&lt;code&gt;path.posix&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">为了在任何操作系统上使用POSIX文件路径时获得一致的结果，请使用&lt;a href=&quot;#path_path_posix&quot;&gt; &lt;code&gt;path.posix&lt;/code&gt; &lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="89017d2ede47b0785d45ee78f6f27262e118a2db" translate="yes" xml:space="preserve">
          <source>To achieve consistent results when working with Windows file paths on any operating system, use &lt;a href=&quot;#path_path_win32&quot;&gt;&lt;code&gt;path.win32&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">要在任何操作系统上使用Windows文件路径时获得一致的结果，请使用&lt;a href=&quot;#path_path_win32&quot;&gt; &lt;code&gt;path.win32&lt;/code&gt; &lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="b45c1d802e95d3410405265dfd8e4d44f4dbfd27" translate="yes" xml:space="preserve">
          <source>To add the method &lt;code&gt;hello&lt;/code&gt; as a function so that it can be called as a method provided by the addon:</source>
          <target state="translated">要将方法 &lt;code&gt;hello&lt;/code&gt; 添加为函数，以便可以将其作为插件提供的方法进行调用：</target>
        </trans-unit>
        <trans-unit id="81c0394f49db892821115b54c6eb0edd5cc1ba09" translate="yes" xml:space="preserve">
          <source>To be notified when the file was modified, not just accessed, it is necessary to compare &lt;code&gt;curr.mtime&lt;/code&gt; and &lt;code&gt;prev.mtime&lt;/code&gt;.</source>
          <target state="translated">要在修改文件（而不只是访问文件）时收到通知，有必要比较 &lt;code&gt;curr.mtime&lt;/code&gt; 和 &lt;code&gt;prev.mtime&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="817d0bb7fcad591dfad28392604533ca026ba506" translate="yes" xml:space="preserve">
          <source>To be used in conjunction with &lt;code&gt;--experimental-modules&lt;/code&gt;. Sets the resolution algorithm for resolving specifiers. Valid options are &lt;code&gt;explicit&lt;/code&gt; and &lt;code&gt;node&lt;/code&gt;.</source>
          <target state="translated">与 &lt;code&gt;--experimental-modules&lt;/code&gt; 结合使用。设置用于解析说明符的解析算法。有效选项是 &lt;code&gt;explicit&lt;/code&gt; 和 &lt;code&gt;node&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f8a3354dac48c927a38f89348c115a2d20de7cf0" translate="yes" xml:space="preserve">
          <source>To begin watching an expression, type &lt;code&gt;watch('my_expression')&lt;/code&gt;. The command &lt;code&gt;watchers&lt;/code&gt; will print the active watchers. To remove a watcher, type &lt;code&gt;unwatch('my_expression')&lt;/code&gt;.</source>
          <target state="translated">要开始观看表达式，请输入 &lt;code&gt;watch('my_expression')&lt;/code&gt; 。命令 &lt;code&gt;watchers&lt;/code&gt; 将打印活动监视程序。要删除观察者，请输入 &lt;code&gt;unwatch('my_expression')&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1a0304f4e61d19a2c2ac88f8d7fae8f457554b26" translate="yes" xml:space="preserve">
          <source>To break on the first line of the application code, pass the &lt;code&gt;--inspect-brk&lt;/code&gt; flag instead of &lt;code&gt;--inspect&lt;/code&gt;.</source>
          <target state="translated">要在应用程序代码的第一行中断，请传递 &lt;code&gt;--inspect-brk&lt;/code&gt; 标志而不是 &lt;code&gt;--inspect&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="22dfb32e7c28d8dcaa05c55a622e6cdce176c30b" translate="yes" xml:space="preserve">
          <source>To build this example, the &lt;code&gt;myobject.cc&lt;/code&gt; file must be added to the &lt;code&gt;binding.gyp&lt;/code&gt;:</source>
          <target state="translated">要构建这个例子中， &lt;code&gt;myobject.cc&lt;/code&gt; 文件必须被添加到 &lt;code&gt;binding.gyp&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="cb2546fbdf0da09b297499ea21ca759167d5daca" translate="yes" xml:space="preserve">
          <source>To catch both events, create each of the Promises &lt;em&gt;before&lt;/em&gt; awaiting either of them, then it becomes possible to use &lt;code&gt;Promise.all()&lt;/code&gt;, &lt;code&gt;Promise.race()&lt;/code&gt;, or &lt;code&gt;Promise.allSettled()&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="257192fca64c7e5ef4beea84df13594a588d02bf" translate="yes" xml:space="preserve">
          <source>To change the default timeout use the &lt;a href=&quot;cli#cli_http_server_default_timeout_milliseconds&quot;&gt;&lt;code&gt;--http-server-default-timeout&lt;/code&gt;&lt;/a&gt; flag.</source>
          <target state="translated">要更改默认超时，请使用&lt;a href=&quot;cli#cli_http_server_default_timeout_milliseconds&quot;&gt; &lt;code&gt;--http-server-default-timeout&lt;/code&gt; &lt;/a&gt;标志。</target>
        </trans-unit>
        <trans-unit id="83bf60ee112d40f394c9009468f70ac11d5c5c03" translate="yes" xml:space="preserve">
          <source>To check for support for a non-English locale (i.e. &lt;code&gt;full-icu&lt;/code&gt; or &lt;code&gt;system-icu&lt;/code&gt;), &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat&quot;&gt;&lt;code&gt;Intl.DateTimeFormat&lt;/code&gt;&lt;/a&gt; can be a good distinguishing factor:</source>
          <target state="translated">要检查是否支持非英语语言环境（即 &lt;code&gt;full-icu&lt;/code&gt; 或 &lt;code&gt;system-icu&lt;/code&gt; ），可以使用&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat&quot;&gt; &lt;code&gt;Intl.DateTimeFormat&lt;/code&gt; &lt;/a&gt;作为一个很好的区分因素：</target>
        </trans-unit>
        <trans-unit id="6f9ed209f8f372fe4035b55216331b230379fdb5" translate="yes" xml:space="preserve">
          <source>To check if a file exists without manipulating it afterwards, &lt;a href=&quot;#fs_fs_access_path_mode_callback&quot;&gt;&lt;code&gt;fs.access()&lt;/code&gt;&lt;/a&gt; is recommended.</source>
          <target state="translated">要检查文件是否存在而不随后&lt;a href=&quot;#fs_fs_access_path_mode_callback&quot;&gt; &lt;code&gt;fs.access()&lt;/code&gt; &lt;/a&gt;进行操作，建议使用fs.access（）。</target>
        </trans-unit>
        <trans-unit id="72931344905502cc560ea0d63014dbb48946d73e" translate="yes" xml:space="preserve">
          <source>To check if a stream is connected to a &lt;a href=&quot;tty#tty_tty&quot;&gt;TTY&lt;/a&gt; context, check the &lt;code&gt;isTTY&lt;/code&gt; property.</source>
          <target state="translated">要检查流是否已连接到&lt;a href=&quot;tty#tty_tty&quot;&gt;TTY&lt;/a&gt;上下文，请检查 &lt;code&gt;isTTY&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="84c7039869bdb8532ecd51ab012fbbe93984c08f" translate="yes" xml:space="preserve">
          <source>To configure any of them, a custom &lt;a href=&quot;#http_class_http_agent&quot;&gt;&lt;code&gt;http.Agent&lt;/code&gt;&lt;/a&gt; instance must be created.</source>
          <target state="translated">要配置它们中的任何一个，必须创建一个自定义&lt;a href=&quot;#http_class_http_agent&quot;&gt; &lt;code&gt;http.Agent&lt;/code&gt; &lt;/a&gt;实例。</target>
        </trans-unit>
        <trans-unit id="d69007751c2a41a54e8aeb848a171b7cce6a5036" translate="yes" xml:space="preserve">
          <source>To connect on the socket &lt;code&gt;/tmp/echo.sock&lt;/code&gt; the second line would just be changed to:</source>
          <target state="translated">要在套接字 &lt;code&gt;/tmp/echo.sock&lt;/code&gt; 上进行连接，第二行只需更改为：</target>
        </trans-unit>
        <trans-unit id="13ba3f87d486426a67fdfd4e20f95fec780e8f03" translate="yes" xml:space="preserve">
          <source>To connect on the socket &lt;code&gt;/tmp/echo.sock&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0a6196d20446e42af34618037ad4de017d40178" translate="yes" xml:space="preserve">
          <source>To control how ICU is used in Node.js, four &lt;code&gt;configure&lt;/code&gt; options are available during compilation. Additional details on how to compile Node.js are documented in &lt;a href=&quot;https://github.com/nodejs/node/blob/master/BUILDING.md&quot;&gt;BUILDING.md&lt;/a&gt;.</source>
          <target state="translated">为了控制如何在Node.js中使用ICU，在编译过程中可以使用四个 &lt;code&gt;configure&lt;/code&gt; 选项。&lt;a href=&quot;https://github.com/nodejs/node/blob/master/BUILDING.md&quot;&gt;BUILDING.md&lt;/a&gt;中记录了有关如何编译Node.js的其他详细信息。</target>
        </trans-unit>
        <trans-unit id="67c2ffbe92be0f9b51c9a83a429725a64f6213f9" translate="yes" xml:space="preserve">
          <source>To correctly order the operations, move the &lt;code&gt;fs.stat()&lt;/code&gt; call into the callback of the &lt;code&gt;fs.rename()&lt;/code&gt; operation:</source>
          <target state="translated">要正确排序操作，请将 &lt;code&gt;fs.stat()&lt;/code&gt; 调用移至 &lt;code&gt;fs.rename()&lt;/code&gt; 操作的回调中：</target>
        </trans-unit>
        <trans-unit id="f0520e0374ec9ffcd9c6cf5ec0d679283c3270e7" translate="yes" xml:space="preserve">
          <source>To create a custom dynamic module that doesn't correspond to one of the existing &lt;code&gt;format&lt;/code&gt; interpretations, the &lt;code&gt;dynamicInstantiate&lt;/code&gt; hook can be used. This hook is called only for modules that return &lt;code&gt;format: 'dynamic'&lt;/code&gt; from the &lt;code&gt;resolve&lt;/code&gt; hook.</source>
          <target state="translated">要创建与现有 &lt;code&gt;format&lt;/code&gt; 解释之一不对应的自定义动态模块，可以使用 &lt;code&gt;dynamicInstantiate&lt;/code&gt; 挂钩。该钩子被称为仅为模块返回 &lt;code&gt;format: 'dynamic'&lt;/code&gt; 从 &lt;code&gt;resolve&lt;/code&gt; 钩。</target>
        </trans-unit>
        <trans-unit id="8e176982d3949a6fa8a4834a7abff97fa762f0cb" translate="yes" xml:space="preserve">
          <source>To create custom messaging channels (which is encouraged over using the default global channel because it facilitates separation of concerns), users can create a &lt;code&gt;MessageChannel&lt;/code&gt; object on either thread and pass one of the &lt;code&gt;MessagePort&lt;/code&gt;s on that &lt;code&gt;MessageChannel&lt;/code&gt; to the other thread through a pre-existing channel, such as the global one.</source>
          <target state="translated">创建自定义消息信道（这是使用默认全局信道，因为它便于分离关注鼓励以上），用户可以创建一个 &lt;code&gt;MessageChannel&lt;/code&gt; 任一线程上对象，并通过所述一个 &lt;code&gt;MessagePort&lt;/code&gt; 上，且s &lt;code&gt;MessageChannel&lt;/code&gt; 通过预先给其他线程现有渠道，例如全球渠道。</target>
        </trans-unit>
        <trans-unit id="1a3b265855273805adaa9745965d95cb45ba31be" translate="yes" xml:space="preserve">
          <source>To customize the default module resolution, loader hooks can optionally be provided via a &lt;code&gt;--experimental-loader ./loader-name.mjs&lt;/code&gt; argument to Node.js.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42c2ed95d362ac6e310208df03daab20b4ae57a0" translate="yes" xml:space="preserve">
          <source>To customize the default module resolution, loader hooks can optionally be provided via a &lt;code&gt;--loader ./loader-name.mjs&lt;/code&gt; argument to Node.js.</source>
          <target state="translated">要自定义默认的模块分辨率，可以选择通过Node.js 的 &lt;code&gt;--loader ./loader-name.mjs&lt;/code&gt; 参数提供加载器挂钩。</target>
        </trans-unit>
        <trans-unit id="152f25ba7578f4f82f7a056c9eb04659230b3677" translate="yes" xml:space="preserve">
          <source>To deactivate the colors, use the &lt;code&gt;NODE_DISABLE_COLORS&lt;/code&gt; environment variable. This will also deactivate the colors in the REPL.</source>
          <target state="translated">要禁用颜色，请使用 &lt;code&gt;NODE_DISABLE_COLORS&lt;/code&gt; 环境变量。这还将停用REPL中的颜色。</target>
        </trans-unit>
        <trans-unit id="f63281065a3a3689c14d9466b15bbe449245428a" translate="yes" xml:space="preserve">
          <source>To deactivate the colors, use the &lt;code&gt;NO_COLOR&lt;/code&gt; or &lt;code&gt;NODE_DISABLE_COLORS&lt;/code&gt; environment variables. This will also deactivate the colors in the REPL. For more on color support in terminal environments, read the tty &lt;a href=&quot;tty#tty_writestream_getcolordepth_env&quot;&gt;getColorDepth()&lt;/a&gt; documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee22bab1313bf7a33041e942c66c0625221d4e94" translate="yes" xml:space="preserve">
          <source>To define a class so that new instances can be created (often used with &lt;a href=&quot;#n_api_object_wrap&quot;&gt;Object Wrap&lt;/a&gt;):</source>
          <target state="translated">定义一个类以便可以创建新实例（通常与&lt;a href=&quot;#n_api_object_wrap&quot;&gt;Object Wrap一起使用&lt;/a&gt;）：</target>
        </trans-unit>
        <trans-unit id="ed68c74bf87981629a008b2e07694c150206ebab" translate="yes" xml:space="preserve">
          <source>To define a class so that new instances can be created (often used with &lt;a href=&quot;#n_api_object_wrap&quot;&gt;Object wrap&lt;/a&gt;):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a009f5771c1d5f40af8776f25938972d00c3c60" translate="yes" xml:space="preserve">
          <source>To enable source map parsing, Node.js must be run with the flag &lt;a href=&quot;cli#cli_enable_source_maps&quot;&gt;&lt;code&gt;--enable-source-maps&lt;/code&gt;&lt;/a&gt;, or with code coverage enabled by setting &lt;a href=&quot;cli#cli_node_v8_coverage_dir&quot;&gt;&lt;code&gt;NODE_V8_COVERAGE=dir&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="652b902ed0de8270b9fb62fc619759f8ad4b57a9" translate="yes" xml:space="preserve">
          <source>To enforce a specific color support, use one of the below environment settings.</source>
          <target state="translated">要强制执行特定的颜色支持,请使用以下环境设置之一。</target>
        </trans-unit>
        <trans-unit id="563ac46b64bfdec1cb057f5366a2341549beff68" translate="yes" xml:space="preserve">
          <source>To ensure that the pointer retrieved from the first argument is indeed a pointer to a database handle and, similarly, that the pointer retrieved from the second argument is indeed a pointer to a query handle, the implementation of &lt;code&gt;queryHasRecords()&lt;/code&gt; has to perform a type validation. Retaining the JavaScript class constructor from which the database handle was instantiated and the constructor from which the query handle was instantiated in &lt;code&gt;napi_ref&lt;/code&gt;s can help, because &lt;code&gt;napi_instanceof()&lt;/code&gt; can then be used to ensure that the instances passed into &lt;code&gt;queryHashRecords()&lt;/code&gt; are indeed of the correct type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c55f753794b1f35b9fdcfce66da0b9225f594ed1" translate="yes" xml:space="preserve">
          <source>To exit with a 'failure' code:</source>
          <target state="translated">以 &quot;失败 &quot;代码退出。</target>
        </trans-unit>
        <trans-unit id="ba26739dd8d319b8071919705bb005ee5baa56d8" translate="yes" xml:space="preserve">
          <source>To extract the parameters from the query string, the &lt;code&gt;require('querystring').parse&lt;/code&gt; function can be used, or &lt;code&gt;true&lt;/code&gt; can be passed as the second argument to &lt;code&gt;require('url').parse&lt;/code&gt;.</source>
          <target state="translated">要从查询字符串中提取参数，可以使用 &lt;code&gt;require('querystring').parse&lt;/code&gt; 函数，也可以将 &lt;code&gt;true&lt;/code&gt; 传递给 &lt;code&gt;require('url').parse&lt;/code&gt; 的第二个参数。</target>
        </trans-unit>
        <trans-unit id="5727ff4630ff91a10fefc92eb21eadd2192abbee" translate="yes" xml:space="preserve">
          <source>To extract the parameters from the query string, the &lt;code&gt;require('querystring').parse&lt;/code&gt; function can be used, or &lt;code&gt;true&lt;/code&gt; can be passed as the second argument to &lt;code&gt;require('url').parse&lt;/code&gt;:</source>
          <target state="translated">要从查询字符串中提取参数，可以使用 &lt;code&gt;require('querystring').parse&lt;/code&gt; 函数，也可以将 &lt;code&gt;true&lt;/code&gt; 传递给 &lt;code&gt;require('url').parse&lt;/code&gt; 的第二个参数：</target>
        </trans-unit>
        <trans-unit id="3fefe10ff6dde1978c8f6041595748b6a6792d9d" translate="yes" xml:space="preserve">
          <source>To fully customize the output of a &lt;a href=&quot;#repl_class_replserver&quot;&gt;&lt;code&gt;repl.REPLServer&lt;/code&gt;&lt;/a&gt; instance pass in a new function for the &lt;code&gt;writer&lt;/code&gt; option on construction. The following example, for instance, simply converts any input text to upper case:</source>
          <target state="translated">要完全自定义&lt;a href=&quot;#repl_class_replserver&quot;&gt; &lt;code&gt;repl.REPLServer&lt;/code&gt; &lt;/a&gt;实例的输出，请在构造时为 &lt;code&gt;writer&lt;/code&gt; 选项传入一个新函数。例如，以下示例将所有输入文本简单地转换为大写：</target>
        </trans-unit>
        <trans-unit id="f82f342e2108d2b1a12ccbbfb5e1444bf37c6bd0" translate="yes" xml:space="preserve">
          <source>To generate integrity strings, a script such as &lt;code&gt;printf &quot;sha384-$(cat checked.js | openssl dgst -sha384 -binary | base64)&quot;&lt;/code&gt; can be used.</source>
          <target state="translated">要生成完整性字符串，可以使用诸如 &lt;code&gt;printf &quot;sha384-$(cat checked.js | openssl dgst -sha384 -binary | base64)&quot;&lt;/code&gt; 类的脚本。</target>
        </trans-unit>
        <trans-unit id="ad9bff9dfa86ac3f581dc9a1a87860cd6b7f4e57" translate="yes" xml:space="preserve">
          <source>To generate the certificate and key for this example, run:</source>
          <target state="translated">要为这个例子生成证书和密钥,运行。</target>
        </trans-unit>
        <trans-unit id="69f64fd3b92ea07f26cf029da8688a34b5e1c399" translate="yes" xml:space="preserve">
          <source>To get the exact filename that will be loaded when &lt;code&gt;require()&lt;/code&gt; is called, use the &lt;code&gt;require.resolve()&lt;/code&gt; function.</source>
          <target state="translated">要获取在调用 &lt;code&gt;require()&lt;/code&gt; 时将加载的确切文件名，请使用 &lt;code&gt;require.resolve()&lt;/code&gt; 函数。</target>
        </trans-unit>
        <trans-unit id="6ff57305218fef61e7a1c5f3ae88348b43634dfe" translate="yes" xml:space="preserve">
          <source>To get the response, add a listener for &lt;a href=&quot;#http_event_response&quot;&gt;&lt;code&gt;'response'&lt;/code&gt;&lt;/a&gt; to the request object. &lt;a href=&quot;#http_event_response&quot;&gt;&lt;code&gt;'response'&lt;/code&gt;&lt;/a&gt; will be emitted from the request object when the response headers have been received. The &lt;a href=&quot;#http_event_response&quot;&gt;&lt;code&gt;'response'&lt;/code&gt;&lt;/a&gt; event is executed with one argument which is an instance of &lt;a href=&quot;#http_class_http_incomingmessage&quot;&gt;&lt;code&gt;http.IncomingMessage&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">要获得响应，请向请求对象添加&lt;a href=&quot;#http_event_response&quot;&gt; &lt;code&gt;'response'&lt;/code&gt; &lt;/a&gt;的侦听器。收到响应头后，将从请求对象中发出&lt;a href=&quot;#http_event_response&quot;&gt; &lt;code&gt;'response'&lt;/code&gt; &lt;/a&gt;。所述&lt;a href=&quot;#http_event_response&quot;&gt; &lt;code&gt;'response'&lt;/code&gt; &lt;/a&gt;事件与一个参数，它是的一个实例中执行&lt;a href=&quot;#http_class_http_incomingmessage&quot;&gt; &lt;code&gt;http.IncomingMessage&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="044ebf34f23de583098254e8634e645a39e8143c" translate="yes" xml:space="preserve">
          <source>To get the string representation of the error code, use &lt;a href=&quot;util#util_util_getsystemerrorname_err&quot;&gt;&lt;code&gt;util.getSystemErrorName(error.errno)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="901383fa9c06c6cbf4f565534c4023b071c8fa19" translate="yes" xml:space="preserve">
          <source>To get the version string without the prepended &lt;em&gt;v&lt;/em&gt;, use &lt;code&gt;process.versions.node&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6aa20aefae1fe619888a9d19f8166927723ea251" translate="yes" xml:space="preserve">
          <source>To guard against crashing the Node.js process the &lt;a href=&quot;domain&quot;&gt;&lt;code&gt;domain&lt;/code&gt;&lt;/a&gt; module can be used. (Note, however, that the &lt;code&gt;domain&lt;/code&gt; module is deprecated.)</source>
          <target state="translated">为了防止Node.js进程崩溃，可以使用&lt;a href=&quot;domain&quot;&gt; &lt;code&gt;domain&lt;/code&gt; &lt;/a&gt;模块。（但是请注意，不建议使用 &lt;code&gt;domain&lt;/code&gt; 模块。）</target>
        </trans-unit>
        <trans-unit id="4a3925d0a0110a53c1988b899e2668ed5402b3d3" translate="yes" xml:space="preserve">
          <source>To handle the errors that it catches, listen to its &lt;code&gt;'error'&lt;/code&gt; event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c953e56d44954a70f8f7788b1edcd731a0e9806" translate="yes" xml:space="preserve">
          <source>To handle this case, N-API provides the ability to establish a new 'scope' to which newly created handles will be associated. Once those handles are no longer required, the scope can be 'closed' and any handles associated with the scope are invalidated. The methods available to open/close scopes are &lt;a href=&quot;#n_api_napi_open_handle_scope&quot;&gt;&lt;code&gt;napi_open_handle_scope&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#n_api_napi_close_handle_scope&quot;&gt;&lt;code&gt;napi_close_handle_scope&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">为了处理这种情况，N-API提供了建立新的&amp;ldquo;范围&amp;rdquo;的功能，新创建的句柄将与该范围关联。一旦不再需要这些句柄，就可以&amp;ldquo;关闭&amp;rdquo;范围，并且使与该范围关联的所有句柄都无效。可用于打开/关闭范围的方法是&lt;a href=&quot;#n_api_napi_open_handle_scope&quot;&gt; &lt;code&gt;napi_open_handle_scope&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#n_api_napi_close_handle_scope&quot;&gt; &lt;code&gt;napi_close_handle_scope&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8ae9fb9267ffb10903bb86fc63715f4cd0cfcaaf" translate="yes" xml:space="preserve">
          <source>To have a module execute code multiple times, export a function, and call that function.</source>
          <target state="translated">要让一个模块多次执行代码,可以导出一个函数,并调用该函数。</target>
        </trans-unit>
        <trans-unit id="56b15cec207bf8e8429b8350d22d585ee8bda635" translate="yes" xml:space="preserve">
          <source>To illustrate the behavior, imagine this hypothetical implementation of &lt;code&gt;require()&lt;/code&gt;, which is quite similar to what is actually done by &lt;code&gt;require()&lt;/code&gt;:</source>
          <target state="translated">为了说明这种行为，请想象一下 &lt;code&gt;require()&lt;/code&gt; 的假设实现，这与 &lt;code&gt;require()&lt;/code&gt; 实际完成的工作非常相似：</target>
        </trans-unit>
        <trans-unit id="d68e5b68a41d9794b3e7248a2d7f36459e1a791e" translate="yes" xml:space="preserve">
          <source>To include an ES module into CommonJS, use &lt;a href=&quot;#esm_import-expressions&quot;&gt;&lt;code&gt;import()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">要将ES模块包含到CommonJS中，请使用&lt;a href=&quot;#esm_import-expressions&quot;&gt; &lt;code&gt;import()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d089308ad7fa8608dc856e8dfd0c999ca3ce0d66" translate="yes" xml:space="preserve">
          <source>To include an ES module into CommonJS, use &lt;a href=&quot;#esm_import_expressions&quot;&gt;&lt;code&gt;import()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="652a3cd9523950c5d1acf707c7efb8f626e43774" translate="yes" xml:space="preserve">
          <source>To listen on the socket &lt;code&gt;/tmp/echo.sock&lt;/code&gt; the third line from the last would just be changed to:</source>
          <target state="translated">要在套接字 &lt;code&gt;/tmp/echo.sock&lt;/code&gt; 上侦听，最后一行的第三行将更改为：</target>
        </trans-unit>
        <trans-unit id="4902deed6b5f58c97833c40362dfd51cfd1113c3" translate="yes" xml:space="preserve">
          <source>To listen on the socket &lt;code&gt;/tmp/echo.sock&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21739c6890c2acc4bdec505b9f422fb0e996afe2" translate="yes" xml:space="preserve">
          <source>To maintain existing behaviour &lt;code&gt;response.finished&lt;/code&gt; should be replaced with &lt;code&gt;response.writableEnded&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e10d026ab12717e40d75bbfd814a562f51e4156" translate="yes" xml:space="preserve">
          <source>To make the creation of &lt;code&gt;Buffer&lt;/code&gt; instances more reliable and less error-prone, the various forms of the &lt;code&gt;new Buffer()&lt;/code&gt; constructor have been &lt;strong&gt;deprecated&lt;/strong&gt; and replaced by separate &lt;code&gt;Buffer.from()&lt;/code&gt;, &lt;a href=&quot;#buffer_class_method_buffer_alloc_size_fill_encoding&quot;&gt;&lt;code&gt;Buffer.alloc()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#buffer_class_method_buffer_allocunsafe_size&quot;&gt;&lt;code&gt;Buffer.allocUnsafe()&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">为了使 &lt;code&gt;Buffer&lt;/code&gt; 实例的创建更可靠且更不易出错， &lt;code&gt;new Buffer()&lt;/code&gt; 构造函数的各种形式均已&lt;strong&gt;弃用&lt;/strong&gt;，并由单独的 &lt;code&gt;Buffer.from()&lt;/code&gt; ，&lt;a href=&quot;#buffer_class_method_buffer_alloc_size_fill_encoding&quot;&gt; &lt;code&gt;Buffer.alloc()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#buffer_class_method_buffer_allocunsafe_size&quot;&gt; &lt;code&gt;Buffer.allocUnsafe()&lt;/code&gt; 代替。&lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="eb5ae203366178adec792f09dee66772cb19c68f" translate="yes" xml:space="preserve">
          <source>To make the creation of &lt;code&gt;Buffer&lt;/code&gt; instances more reliable and less error-prone, the various forms of the &lt;code&gt;new Buffer()&lt;/code&gt; constructor have been &lt;strong&gt;deprecated&lt;/strong&gt; and replaced by separate &lt;code&gt;Buffer.from()&lt;/code&gt;, &lt;a href=&quot;#buffer_static_method_buffer_alloc_size_fill_encoding&quot;&gt;&lt;code&gt;Buffer.alloc()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#buffer_static_method_buffer_allocunsafe_size&quot;&gt;&lt;code&gt;Buffer.allocUnsafe()&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f485bda8dbde48a50bff5fb1b3ed1e00c32ea5f0" translate="yes" xml:space="preserve">
          <source>To make the introduction of &lt;a href=&quot;#packages_exports&quot;&gt;&lt;code&gt;&quot;exports&quot;&lt;/code&gt;&lt;/a&gt; non-breaking, ensure that every previously supported entry point is exported. It is best to explicitly specify entry points so that the package&amp;rsquo;s public API is well-defined. For example, a project that previous exported &lt;code&gt;main&lt;/code&gt;, &lt;code&gt;lib&lt;/code&gt;, &lt;code&gt;feature&lt;/code&gt;, and the &lt;code&gt;package.json&lt;/code&gt; could use the following &lt;code&gt;package.exports&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e7d1841b070660f5e124c6d0b0e5f09de0a3865" translate="yes" xml:space="preserve">
          <source>To mitigate tampering with policy files on disk, an integrity for the policy file itself may be provided via &lt;code&gt;--policy-integrity&lt;/code&gt;. This allows running &lt;code&gt;node&lt;/code&gt; and asserting the policy file contents even if the file is changed on disk.</source>
          <target state="translated">为了减轻对磁盘上策略文件的篡改，可以通过 &lt;code&gt;--policy-integrity&lt;/code&gt; 提供策略文件本身的完整性。即使在磁盘上更改了文件，这也允许运行 &lt;code&gt;node&lt;/code&gt; 并声明策略文件的内容。</target>
        </trans-unit>
        <trans-unit id="1a99036e7fc6f4dd433ceb4a4d4fe866ee586c79" translate="yes" xml:space="preserve">
          <source>To mitigate the risk, renegotiation is limited to three times every ten minutes. An &lt;code&gt;'error'&lt;/code&gt; event is emitted on the &lt;a href=&quot;#tls_class_tls_tlssocket&quot;&gt;&lt;code&gt;tls.TLSSocket&lt;/code&gt;&lt;/a&gt; instance when this threshold is exceeded. The limits are configurable:</source>
          <target state="translated">为了降低风险，重新协商限制为每十分钟三次。一个 &lt;code&gt;'error'&lt;/code&gt; 事件上发出&lt;a href=&quot;#tls_class_tls_tlssocket&quot;&gt; &lt;code&gt;tls.TLSSocket&lt;/code&gt; &lt;/a&gt;超过此阈值时实例。限制是可配置的：</target>
        </trans-unit>
        <trans-unit id="6bd92caa0dd0e220612d4509343caa388124bfc1" translate="yes" xml:space="preserve">
          <source>To nest &lt;code&gt;Domain&lt;/code&gt; objects as children of a parent &lt;code&gt;Domain&lt;/code&gt; they must be explicitly added.</source>
          <target state="translated">要将 &lt;code&gt;Domain&lt;/code&gt; 对象嵌套为父 &lt;code&gt;Domain&lt;/code&gt; 的子代，必须显式添加它们。</target>
        </trans-unit>
        <trans-unit id="e8af107ea8ff0e7e34570ffa65be2ae9ff7ad82a" translate="yes" xml:space="preserve">
          <source>To parse the URL into its parts:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a3735245b8ad30f17b7512872187c1aa1d62b39" translate="yes" xml:space="preserve">
          <source>To parse the url into its parts &lt;code&gt;require('url').parse(request.url)&lt;/code&gt; can be used:</source>
          <target state="translated">要将URL解析成一部分，可以使用 &lt;code&gt;require('url').parse(request.url)&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="773a385d557159d7209e8d59495c1d4ae2e640ae" translate="yes" xml:space="preserve">
          <source>To parse the url into its parts, &lt;code&gt;new URL()&lt;/code&gt; can be used:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c60e9cd07a257263fb8969b08ff3c393206c09af" translate="yes" xml:space="preserve">
          <source>To receive pushed streams on the client, set a listener for the &lt;code&gt;'stream'&lt;/code&gt; event on the &lt;code&gt;ClientHttp2Session&lt;/code&gt;:</source>
          <target state="translated">要在客户端上接收推送的流，请在 &lt;code&gt;ClientHttp2Session&lt;/code&gt; 上为 &lt;code&gt;'stream'&lt;/code&gt; 事件设置一个侦听器：</target>
        </trans-unit>
        <trans-unit id="9fa7f2103554e2af5c33c5202941bd62a5133842" translate="yes" xml:space="preserve">
          <source>To restart a crashed application in a more reliable way, whether &lt;code&gt;'uncaughtException'&lt;/code&gt; is emitted or not, an external monitor should be employed in a separate process to detect application failures and recover or restart as needed.</source>
          <target state="translated">为了以更可靠的方式重新启动崩溃的应用程序，无论是否发出 &lt;code&gt;'uncaughtException'&lt;/code&gt; ，都应在单独的过程中使用外部监视器来检测应用程序故障并根据需要恢复或重新启动。</target>
        </trans-unit>
        <trans-unit id="24f3c415831200821564a427fca851b253ddebe0" translate="yes" xml:space="preserve">
          <source>To run the above example, create a new WebAssembly text format file named &lt;code&gt;demo.wat&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f906fc2e9ed75535f0e33b7e1aaaf78e72fcf87b" translate="yes" xml:space="preserve">
          <source>To set a function to be returned by the &lt;code&gt;require()&lt;/code&gt; for the addon:</source>
          <target state="translated">要设置插件的 &lt;code&gt;require()&lt;/code&gt; 返回的函数：</target>
        </trans-unit>
        <trans-unit id="14a2b1e275dc4b6cd9fc94bdafc4ee8fc0b41dfc" translate="yes" xml:space="preserve">
          <source>To set the main entry point for a package, it is advisable to define both &lt;a href=&quot;#packages_exports&quot;&gt;&lt;code&gt;&quot;exports&quot;&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#packages_main&quot;&gt;&lt;code&gt;&quot;main&quot;&lt;/code&gt;&lt;/a&gt; in the package&amp;rsquo;s &lt;a href=&quot;#packages_node_js_package_json_field_definitions&quot;&gt;&lt;code&gt;package.json&lt;/code&gt;&lt;/a&gt; file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4f2374e10f3a7eb6b83d547d6c57c17e364858d" translate="yes" xml:space="preserve">
          <source>To test it in JavaScript:</source>
          <target state="translated">要在JavaScript中测试它。</target>
        </trans-unit>
        <trans-unit id="a0b29e9bbd29bf287a671314a5215366e894cdec" translate="yes" xml:space="preserve">
          <source>To test it, run the following JavaScript:</source>
          <target state="translated">要测试它,请运行以下JavaScript。</target>
        </trans-unit>
        <trans-unit id="80e061ad3871e4c5c14888dba30a6440671c5a6d" translate="yes" xml:space="preserve">
          <source>To test:</source>
          <target state="translated">为了测试。</target>
        </trans-unit>
        <trans-unit id="4606c24e18a786400a447c1828c1a5df8796aaf7" translate="yes" xml:space="preserve">
          <source>To this end, N-API provides a way to allocate data such that its life cycle is tied to the life cycle of the Agent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86732a9994de407a5b4f9e7fdc6f58ff1d7808fa" translate="yes" xml:space="preserve">
          <source>To this end, N-API provides type-tagging capabilities.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e39ad99eeff4166287ae62024f1f20d4affe06b" translate="yes" xml:space="preserve">
          <source>To this env, N-API provides a way to allocate data such that its life cycle is tied to the life cycle of the Agent.</source>
          <target state="translated">对于这种环境,N-API提供了一种分配数据的方式,使其生命周期与Agent的生命周期挂钩。</target>
        </trans-unit>
        <trans-unit id="b5395666fc1a664a6eb308266e88f8f63adf53a4" translate="yes" xml:space="preserve">
          <source>To unset the capture function, &lt;code&gt;process.setUncaughtExceptionCaptureCallback(null)&lt;/code&gt; may be used. Calling this method with a non-&lt;code&gt;null&lt;/code&gt; argument while another capture function is set will throw an error.</source>
          <target state="translated">要取消设置捕获功能，可以使用 &lt;code&gt;process.setUncaughtExceptionCaptureCallback(null)&lt;/code&gt; 。设置了另一个捕获功能时，使用非 &lt;code&gt;null&lt;/code&gt; 参数调用此方法将引发错误。</target>
        </trans-unit>
        <trans-unit id="012fe7e6f8e20a96385f534d6d6e01f2918b08c3" translate="yes" xml:space="preserve">
          <source>To use &lt;code&gt;strict&lt;/code&gt; mode:</source>
          <target state="translated">要使用 &lt;code&gt;strict&lt;/code&gt; 模式：</target>
        </trans-unit>
        <trans-unit id="1ba4716684f52476f95f24b69f86ae65d28cd012" translate="yes" xml:space="preserve">
          <source>To use N-API in the above &quot;Hello world&quot; example, replace the content of &lt;code&gt;hello.cc&lt;/code&gt; with the following. All other instructions remain the same.</source>
          <target state="translated">要在上述&amp;ldquo; Hello world&amp;rdquo;示例中使用N-API， &lt;code&gt;hello.cc&lt;/code&gt; 使用以下内容替换hello.cc的内容。所有其他说明保持不变。</target>
        </trans-unit>
        <trans-unit id="c2030286b077ae9f310389c7d604ec2ac5189637" translate="yes" xml:space="preserve">
          <source>To use Perfect Forward Secrecy using &lt;code&gt;DHE&lt;/code&gt; with the &lt;code&gt;tls&lt;/code&gt; module, it is required to generate Diffie-Hellman parameters and specify them with the &lt;code&gt;dhparam&lt;/code&gt; option to &lt;a href=&quot;#tls_tls_createsecurecontext_options&quot;&gt;&lt;code&gt;tls.createSecureContext()&lt;/code&gt;&lt;/a&gt;. The following illustrates the use of the OpenSSL command-line interface to generate such parameters:</source>
          <target state="translated">要将 &lt;code&gt;DHE&lt;/code&gt; 与 &lt;code&gt;tls&lt;/code&gt; 模块一起使用完全正向保密，需要生成Diffie-Hellman参数，并使用&lt;a href=&quot;#tls_tls_createsecurecontext_options&quot;&gt; &lt;code&gt;tls.createSecureContext()&lt;/code&gt; &lt;/a&gt;的 &lt;code&gt;dhparam&lt;/code&gt; 选项指定它们。下面说明了如何使用OpenSSL命令行界面生成此类参数：</target>
        </trans-unit>
        <trans-unit id="d0a5c6de3c73d917b80285249a110f4f66a4f266" translate="yes" xml:space="preserve">
          <source>To use legacy assertion mode:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="409731a0c399b993f15524f4692dc78e27a98aeb" translate="yes" xml:space="preserve">
          <source>To use legacy mode:</source>
          <target state="translated">要使用传统模式。</target>
        </trans-unit>
        <trans-unit id="b9501e0f16f826f87e9350e123b56bd36119f5d9" translate="yes" xml:space="preserve">
          <source>To use more than one constant, use the bitwise OR &lt;code&gt;|&lt;/code&gt; operator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59a200c232ad3bd583aabc76d909f585e995a5dc" translate="yes" xml:space="preserve">
          <source>To use perfect forward secrecy using &lt;code&gt;DHE&lt;/code&gt; with the &lt;code&gt;tls&lt;/code&gt; module, it is required to generate Diffie-Hellman parameters and specify them with the &lt;code&gt;dhparam&lt;/code&gt; option to &lt;a href=&quot;#tls_tls_createsecurecontext_options&quot;&gt;&lt;code&gt;tls.createSecureContext()&lt;/code&gt;&lt;/a&gt;. The following illustrates the use of the OpenSSL command-line interface to generate such parameters:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c20a336e72da316b2c9c2163a7733348225e4cc6" translate="yes" xml:space="preserve">
          <source>To use strict assertion mode:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b5ad91da59de7323cefe83cf2f0b20fda7969fd" translate="yes" xml:space="preserve">
          <source>To use the HTTP server and client one must &lt;code&gt;require('http')&lt;/code&gt;.</source>
          <target state="translated">要使用HTTP服务器和客户端，必须使用 &lt;code&gt;require('http')&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="71784b618df5ed1f33114983208856ba2d4ca1c0" translate="yes" xml:space="preserve">
          <source>To use this module:</source>
          <target state="translated">要使用这个模块。</target>
        </trans-unit>
        <trans-unit id="b7399a303049823aaa63a8aa2b18850c567f8783" translate="yes" xml:space="preserve">
          <source>To verify that ICU is enabled at all (&lt;code&gt;system-icu&lt;/code&gt;, &lt;code&gt;small-icu&lt;/code&gt;, or &lt;code&gt;full-icu&lt;/code&gt;), simply checking the existence of &lt;code&gt;Intl&lt;/code&gt; should suffice:</source>
          <target state="translated">要验证是否完全启用了ICU（ &lt;code&gt;system-icu&lt;/code&gt; ， &lt;code&gt;small-icu&lt;/code&gt; 或 &lt;code&gt;full-icu&lt;/code&gt; ），只需检查 &lt;code&gt;Intl&lt;/code&gt; 是否存在就足够了：</target>
        </trans-unit>
        <trans-unit id="767a6b4283338f258039c6484f378f9774bf103f" translate="yes" xml:space="preserve">
          <source>To view this documentation as a manual page in a terminal, run &lt;code&gt;man node&lt;/code&gt;.</source>
          <target state="translated">要在终端中以手册页形式查看此文档，请运行 &lt;code&gt;man node&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fa49ae28e51088359080f4611ccdaeaee55d06b4" translate="yes" xml:space="preserve">
          <source>Too much HTTP header data was received. In order to protect against malicious or malconfigured clients, if more than 8KB of HTTP header data is received then HTTP parsing will abort without a request or response object being created, and an &lt;code&gt;Error&lt;/code&gt; with this code will be emitted.</source>
          <target state="translated">收到过多的HTTP标头数据。为了防止恶意或配置错误的客户端，如果接收到超过8KB的HTTP标头数据，则HTTP解析将中止，而不会创建请求或响应对象，并且将发出此代码 &lt;code&gt;Error&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fe926bf43f9c48ad4e7f0d9e66d6b0b6f4a7dcd7" translate="yes" xml:space="preserve">
          <source>Top-level &lt;code&gt;await&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f88bcb86a810807252c2f25ecd279d2e929c894" translate="yes" xml:space="preserve">
          <source>Trace Event provides a mechanism to centralize tracing information generated by V8, Node.js core, and userspace code.</source>
          <target state="translated">跟踪事件提供了一种机制,可以集中处理V8、Node.js核心和用户空间代码产生的跟踪信息。</target>
        </trans-unit>
        <trans-unit id="522930d7db32b707108991daae748228a5372efb" translate="yes" xml:space="preserve">
          <source>Trace Events</source>
          <target state="translated">追踪事件</target>
        </trans-unit>
        <trans-unit id="a397d20d155f600d42049a221bc3c7232e0e47bf" translate="yes" xml:space="preserve">
          <source>Trace events</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28c7adc15802eb0b8935f3924650c3799b474e55" translate="yes" xml:space="preserve">
          <source>Tracing can be enabled with the &lt;code&gt;--trace-event-categories&lt;/code&gt; command-line flag or by using the &lt;code&gt;trace_events&lt;/code&gt; module. The &lt;code&gt;--trace-event-categories&lt;/code&gt; flag accepts a list of comma-separated category names.</source>
          <target state="translated">可以使用 &lt;code&gt;--trace-event-categories&lt;/code&gt; 命令行标志或使用 &lt;code&gt;trace_events&lt;/code&gt; 模块来启用跟踪。该 &lt;code&gt;--trace-event-categories&lt;/code&gt; 标志接受逗号分隔的类别名称的列表。</target>
        </trans-unit>
        <trans-unit id="94e1656659df1321444d7824a33ef26cfdf8bed9" translate="yes" xml:space="preserve">
          <source>Track heap object allocations for heap snapshots.</source>
          <target state="translated">跟踪堆对象分配的堆快照。</target>
        </trans-unit>
        <trans-unit id="3dede6c9f5b091d4f1178b0d775ad848dfc2fe33" translate="yes" xml:space="preserve">
          <source>Tracks the event loop delay at a given sampling rate.</source>
          <target state="translated">以给定的采样率跟踪事件循环延迟。</target>
        </trans-unit>
        <trans-unit id="32233aa3037754c48a35202d5c815e9963127c0e" translate="yes" xml:space="preserve">
          <source>Tracks the event loop delay at a given sampling rate. The constructor of this class not exposed to users.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="751fa34c39229191e6c74b37aabdea80d0e08f00" translate="yes" xml:space="preserve">
          <source>Trailers will &lt;strong&gt;only&lt;/strong&gt; be emitted if chunked encoding is used for the response; if it is not (e.g. if the request was HTTP/1.0), they will be silently discarded.</source>
          <target state="translated">&lt;strong&gt;仅&lt;/strong&gt;在对响应使用分块编码的情况&lt;strong&gt;下&lt;/strong&gt;才会发出预告片。如果不是（例如，请求是HTTP / 1.0），它们将被静默丢弃。</target>
        </trans-unit>
        <trans-unit id="5b80a47ffdd07a222a0a9c9e34f1db9594849a60" translate="yes" xml:space="preserve">
          <source>Trailing Headers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97674c913d04171ff7608f24cd0b8f68dcb4d685" translate="yes" xml:space="preserve">
          <source>Trailing Headers: A block of headers that follow the body of a request or response.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f752da73347f44bd141752afbe732a41e970f215" translate="yes" xml:space="preserve">
          <source>Trailing garbage at the end of the input stream will now result in an &lt;code&gt;'error'&lt;/code&gt; event.</source>
          <target state="translated">现在，在输入流的末尾尾随垃圾将导致 &lt;code&gt;'error'&lt;/code&gt; 事件。</target>
        </trans-unit>
        <trans-unit id="969267a9a3af0fbc68033e5c7098f852a9c4f7be" translate="yes" xml:space="preserve">
          <source>Trailing headers have already been sent on the &lt;code&gt;Http2Stream&lt;/code&gt;.</source>
          <target state="translated">尾标头已经在 &lt;code&gt;Http2Stream&lt;/code&gt; 上发送。</target>
        </trans-unit>
        <trans-unit id="dfe8180f7ea03f9122b6de27291472a8cb2c1cd1" translate="yes" xml:space="preserve">
          <source>Transfer a &lt;code&gt;MessagePort&lt;/code&gt; to a different &lt;a href=&quot;vm&quot;&gt;&lt;code&gt;vm&lt;/code&gt;&lt;/a&gt; Context. The original &lt;code&gt;port&lt;/code&gt; object is rendered unusable, and the returned &lt;code&gt;MessagePort&lt;/code&gt; instance takes its place.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cec91881e34f290385e04905cd9b4c93523b2df" translate="yes" xml:space="preserve">
          <source>Transfer a &lt;code&gt;MessagePort&lt;/code&gt; to a different &lt;a href=&quot;vm&quot;&gt;&lt;code&gt;vm&lt;/code&gt;&lt;/a&gt; Context. The original &lt;code&gt;port&lt;/code&gt; object will be rendered unusable, and the returned &lt;code&gt;MessagePort&lt;/code&gt; instance will take its place.</source>
          <target state="translated">将 &lt;code&gt;MessagePort&lt;/code&gt; 传输到其他&lt;a href=&quot;vm&quot;&gt; &lt;code&gt;vm&lt;/code&gt; &lt;/a&gt;上下文。原始 &lt;code&gt;port&lt;/code&gt; 对象将变得不可用，并且返回的 &lt;code&gt;MessagePort&lt;/code&gt; 实例将取代其位置。</target>
        </trans-unit>
        <trans-unit id="f821472ecd36f99690900f79391a7c77f149a02e" translate="yes" xml:space="preserve">
          <source>Transform streams are &lt;a href=&quot;#stream_class_stream_duplex&quot;&gt;&lt;code&gt;Duplex&lt;/code&gt;&lt;/a&gt; streams where the output is in some way related to the input. Like all &lt;a href=&quot;#stream_class_stream_duplex&quot;&gt;&lt;code&gt;Duplex&lt;/code&gt;&lt;/a&gt; streams, &lt;code&gt;Transform&lt;/code&gt; streams implement both the &lt;a href=&quot;#stream_class_stream_readable&quot;&gt;&lt;code&gt;Readable&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#stream_class_stream_writable&quot;&gt;&lt;code&gt;Writable&lt;/code&gt;&lt;/a&gt; interfaces.</source>
          <target state="translated">转换流是&lt;a href=&quot;#stream_class_stream_duplex&quot;&gt; &lt;code&gt;Duplex&lt;/code&gt; &lt;/a&gt;流，其中输出在某种程度上与输入有关。像所有&lt;a href=&quot;#stream_class_stream_duplex&quot;&gt; &lt;code&gt;Duplex&lt;/code&gt; &lt;/a&gt;流一样， &lt;code&gt;Transform&lt;/code&gt; 流实现了&lt;a href=&quot;#stream_class_stream_readable&quot;&gt; &lt;code&gt;Readable&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#stream_class_stream_writable&quot;&gt; &lt;code&gt;Writable&lt;/code&gt; &lt;/a&gt;接口。</target>
        </trans-unit>
        <trans-unit id="5d44411ee4a477c4003d0a4fd42fc9852f8eec42" translate="yes" xml:space="preserve">
          <source>Transmits a &lt;code&gt;GOAWAY&lt;/code&gt; frame to the connected peer &lt;em&gt;without&lt;/em&gt; shutting down the &lt;code&gt;Http2Session&lt;/code&gt;.</source>
          <target state="translated">发送 &lt;code&gt;GOAWAY&lt;/code&gt; 帧到连接对等体&lt;em&gt;，而不&lt;/em&gt;关闭 &lt;code&gt;Http2Session&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ea9576ac65abef46df5e8efa3c56554f7250f9bd" translate="yes" xml:space="preserve">
          <source>Transpiler loader</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49a8085f322954c5cb827e7d3811aff927e4beb4" translate="yes" xml:space="preserve">
          <source>Trigger an &lt;code&gt;'uncaughtException'&lt;/code&gt; in JavaScript. Useful if an async callback throws an exception with no way to recover.</source>
          <target state="translated">在JavaScript中触发 &lt;code&gt;'uncaughtException'&lt;/code&gt; 。如果异步回调引发无法恢复的异常，则很有用。</target>
        </trans-unit>
        <trans-unit id="88fd9bf4f298a1d2622150397c550c3d7a9663cc" translate="yes" xml:space="preserve">
          <source>Triggered immediately after &lt;code&gt;'connect'&lt;/code&gt;.</source>
          <target state="translated">在 &lt;code&gt;'connect'&lt;/code&gt; 之后立即触发。</target>
        </trans-unit>
        <trans-unit id="87d70346099a1ae1acdb1f551d32288df3e619c7" translate="yes" xml:space="preserve">
          <source>Triggers the abort signal, causing the &lt;code&gt;abortController.signal&lt;/code&gt; to emit the &lt;code&gt;'abort'&lt;/code&gt; event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="285ec850c11d78bac10f6bfa31b69a37f1b257c9" translate="yes" xml:space="preserve">
          <source>Troubleshooting</source>
          <target state="translated">Troubleshooting</target>
        </trans-unit>
        <trans-unit id="00719949dbe60c953bfc33c3a4fc7d650107ce37" translate="yes" xml:space="preserve">
          <source>True if headers were sent, false otherwise (read-only).</source>
          <target state="translated">如果发送了头文件,则为真,否则为假(只读)。</target>
        </trans-unit>
        <trans-unit id="b2b51224ff63b91805e91d8fb1e7f7c31a7fb84f" translate="yes" xml:space="preserve">
          <source>True if the &lt;code&gt;QuicSession&lt;/code&gt; was closed due to QUIC stateless reset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00f5babaddb644d2b78ece8c666bd73f4c43cd62" translate="yes" xml:space="preserve">
          <source>True if the certificate provided by the peer during the TLS 1.3 handshake has been verified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52aaf50525ff477ac5ccb10f3e94474da0a7e6a3" translate="yes" xml:space="preserve">
          <source>True if the process is a master. This is determined by the &lt;code&gt;process.env.NODE_UNIQUE_ID&lt;/code&gt;. If &lt;code&gt;process.env.NODE_UNIQUE_ID&lt;/code&gt; is undefined, then &lt;code&gt;isMaster&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">如果流程是主流程，则为true。这由 &lt;code&gt;process.env.NODE_UNIQUE_ID&lt;/code&gt; 确定。如果 &lt;code&gt;process.env.NODE_UNIQUE_ID&lt;/code&gt; 未定义，则 &lt;code&gt;isMaster&lt;/code&gt; 为 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f753bfbea14649b01155a879f0a01fd20d9acfb3" translate="yes" xml:space="preserve">
          <source>True if the process is not a master (it is the negation of &lt;code&gt;cluster.isMaster&lt;/code&gt;).</source>
          <target state="translated">如果该进程不是主服务器，则为true（它是 &lt;code&gt;cluster.isMaster&lt;/code&gt; 的否定）。</target>
        </trans-unit>
        <trans-unit id="a402e4d3f2f574d66f39eac4a0a59eb01b7429dc" translate="yes" xml:space="preserve">
          <source>Truncates the &lt;code&gt;path&lt;/code&gt; then resolves the &lt;code&gt;Promise&lt;/code&gt; with no arguments upon success. The &lt;code&gt;path&lt;/code&gt;&lt;em&gt;must&lt;/em&gt; be a string or &lt;code&gt;Buffer&lt;/code&gt;.</source>
          <target state="translated">截断 &lt;code&gt;path&lt;/code&gt; 然后在成功时不带任何参数地解决 &lt;code&gt;Promise&lt;/code&gt; 。该 &lt;code&gt;path&lt;/code&gt; &lt;em&gt;必须&lt;/em&gt;是字符串或 &lt;code&gt;Buffer&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2e6fcf342166aa2b3f7da014c8cfdbe02e48d00f" translate="yes" xml:space="preserve">
          <source>Truncates the file then resolves the &lt;code&gt;Promise&lt;/code&gt; with no arguments upon success.</source>
          <target state="translated">截断文件，然后在成功时不带任何参数地解决 &lt;code&gt;Promise&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="eb397e6582ffce2afa6f0c50c11a1da76968e2e5" translate="yes" xml:space="preserve">
          <source>Try to construct a table with the columns of the properties of &lt;code&gt;tabularData&lt;/code&gt; (or use &lt;code&gt;properties&lt;/code&gt;) and rows of &lt;code&gt;tabularData&lt;/code&gt; and log it. Falls back to just logging the argument if it can&amp;rsquo;t be parsed as tabular.</source>
          <target state="translated">尝试使用 &lt;code&gt;tabularData&lt;/code&gt; 属性的列（或使用 &lt;code&gt;properties&lt;/code&gt; ）和 &lt;code&gt;tabularData&lt;/code&gt; 的行构造一个表并将其记录。如果无法将其解析为表格形式，则退回到仅记录参数。</target>
        </trans-unit>
        <trans-unit id="bd5dbabbefef5321cc8fd2b28e920d3d40a94172" translate="yes" xml:space="preserve">
          <source>Trying to use &lt;a href=&quot;process#process_process_setuncaughtexceptioncapturecallback_fn&quot;&gt;&lt;code&gt;process.setUncaughtExceptionCaptureCallback()&lt;/code&gt;&lt;/a&gt; throws an &lt;a href=&quot;errors#errors_err_domain_cannot_set_uncaught_exception_capture&quot;&gt;&lt;code&gt;ERR_DOMAIN_CANNOT_SET_UNCAUGHT_EXCEPTION_CAPTURE&lt;/code&gt;&lt;/a&gt; error.</source>
          <target state="translated">尝试使用&lt;a href=&quot;process#process_process_setuncaughtexceptioncapturecallback_fn&quot;&gt; &lt;code&gt;process.setUncaughtExceptionCaptureCallback()&lt;/code&gt; &lt;/a&gt;会引发&lt;a href=&quot;errors#errors_err_domain_cannot_set_uncaught_exception_capture&quot;&gt; &lt;code&gt;ERR_DOMAIN_CANNOT_SET_UNCAUGHT_EXCEPTION_CAPTURE&lt;/code&gt; &lt;/a&gt;错误。</target>
        </trans-unit>
        <trans-unit id="21b131d9028db7e6607d213bfbc66c0ff665f5d4" translate="yes" xml:space="preserve">
          <source>Turning auto padding off will only work if the input data's length is a multiple of the ciphers block size.</source>
          <target state="translated">只有当输入数据的长度是密码块大小的倍数时,关闭自动填充才会有效。</target>
        </trans-unit>
        <trans-unit id="33207f4af1d127df91481b71b60c34a426f9170e" translate="yes" xml:space="preserve">
          <source>Two Reading Modes</source>
          <target state="translated">两种阅读模式</target>
        </trans-unit>
        <trans-unit id="27d8454a7bd0ba08acf51f96558585ee7039de1c" translate="yes" xml:space="preserve">
          <source>Two reading modes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3deb7456519697ecf4eefc455516c969a3681bae" translate="yes" xml:space="preserve">
          <source>Type</source>
          <target state="translated">Type</target>
        </trans-unit>
        <trans-unit id="81dec3dee152341fcaaa1202574f5bfce2107fdc" translate="yes" xml:space="preserve">
          <source>Type: &lt;a href=&quot;buffer#buffer_class_buffer&quot;&gt;&amp;lt;Buffer&amp;gt;&lt;/a&gt; The prime parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dbaee6b3d72c5fb2d6b4e87ebb27439475283a2" translate="yes" xml:space="preserve">
          <source>Type: &lt;a href=&quot;events#events_class_eventtarget&quot;&gt;&amp;lt;EventTarget&amp;gt;&lt;/a&gt; The &lt;code&gt;EventTarget&lt;/code&gt; dispatching the event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b791360c3c51b123734a073dbdd5929c2635c37" translate="yes" xml:space="preserve">
          <source>Type: &lt;a href=&quot;globals#globals_class_abortsignal&quot;&gt;&amp;lt;AbortSignal&amp;gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdf3e2cffad5a828a7aa4148e91fb5cc50141041" translate="yes" xml:space="preserve">
          <source>Type: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type&quot;&gt;&amp;lt;boolean&amp;gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ab2fdbf860e78b084aa29dd2be0b21f910fe1b8" translate="yes" xml:space="preserve">
          <source>Type: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type&quot;&gt;&amp;lt;boolean&amp;gt;&lt;/a&gt; Always returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="559b8e980fd843d8f083ddbc18aa96d47d8fe569" translate="yes" xml:space="preserve">
          <source>Type: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type&quot;&gt;&amp;lt;boolean&amp;gt;&lt;/a&gt; True after the &lt;code&gt;AbortController&lt;/code&gt; has been aborted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f769c6c38cdc512378467d74cdd67725602d5d4" translate="yes" xml:space="preserve">
          <source>Type: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type&quot;&gt;&amp;lt;boolean&amp;gt;&lt;/a&gt; True for Node.js internal events, false otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd98bdcf8d930cfc4fddad7bdbcbed014cb5963b" translate="yes" xml:space="preserve">
          <source>Type: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type&quot;&gt;&amp;lt;boolean&amp;gt;&lt;/a&gt; True if the event has not been canceled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="592434911cf70ed7c8d94bc575c5dc4ad5fcd012" translate="yes" xml:space="preserve">
          <source>Type: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type&quot;&gt;&amp;lt;boolean&amp;gt;&lt;/a&gt; True if the event was created with the &lt;code&gt;cancelable&lt;/code&gt; option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f83a891c954bfcae9f8213ec30898062cbe835e" translate="yes" xml:space="preserve">
          <source>Type: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type&quot;&gt;&amp;lt;boolean&amp;gt;&lt;/a&gt; When &lt;code&gt;true&lt;/code&gt;, the &lt;code&gt;QuicSocket&lt;/code&gt; will reject new connections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5ba0f6f560f85a29174a7580551297604de31ba" translate="yes" xml:space="preserve">
          <source>Type: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type&quot;&gt;&amp;lt;boolean&amp;gt;&lt;/a&gt;&lt;code&gt;true&lt;/code&gt; if stateless reset processing is enabled; &lt;code&gt;false&lt;/code&gt; if disabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d077718461853f8c66f956fa3929098d50db3cc" translate="yes" xml:space="preserve">
          <source>Type: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type&quot;&gt;&amp;lt;boolean&amp;gt;&lt;/a&gt;&lt;code&gt;true&lt;/code&gt; if the module is running during the Node.js preload phase.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9aed18d242ca05f3f44be6eed337a107faa0a84" translate="yes" xml:space="preserve">
          <source>Type: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type&quot;&gt;&amp;lt;integer&amp;gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cc31d3d2b5210c7375845876ff2a16826ac9806" translate="yes" xml:space="preserve">
          <source>Type: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type&quot;&gt;&amp;lt;number&amp;gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f6a4292808d277171818eb5b44f627e4679f084" translate="yes" xml:space="preserve">
          <source>Type: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type&quot;&gt;&amp;lt;number&amp;gt;&lt;/a&gt; A custom generator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03bafe5ad8828c6fe457c8f446cd198a580ac9ee" translate="yes" xml:space="preserve">
          <source>Type: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type&quot;&gt;&amp;lt;number&amp;gt;&lt;/a&gt; Block size parameter. &lt;strong&gt;Default&lt;/strong&gt;: &lt;code&gt;8&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9d23e0025240d7a4b74b72edbd5c82f2a34ec81" translate="yes" xml:space="preserve">
          <source>Type: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type&quot;&gt;&amp;lt;number&amp;gt;&lt;/a&gt; Memory upper bound. It is an error when (approximately) &lt;code&gt;127 * N * r &amp;gt; maxmem&lt;/code&gt;. &lt;strong&gt;Default:&lt;/strong&gt;&lt;code&gt;32 * 1024 * 1024&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c82c20b3feb29912776423b0e35d03d30f486991" translate="yes" xml:space="preserve">
          <source>Type: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type&quot;&gt;&amp;lt;number&amp;gt;&lt;/a&gt; Parallelization parameter. &lt;strong&gt;Default&lt;/strong&gt;&lt;code&gt;1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32b6894e9b972a02fbebf6decdecb826a9a08499" translate="yes" xml:space="preserve">
          <source>Type: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type&quot;&gt;&amp;lt;number&amp;gt;&lt;/a&gt; Returns &lt;code&gt;0&lt;/code&gt; while an event is not being dispatched, &lt;code&gt;2&lt;/code&gt; while it is being dispatched.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="191f21e8620a363c6e6653d4276709505b0c1f39" translate="yes" xml:space="preserve">
          <source>Type: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type&quot;&gt;&amp;lt;number&amp;gt;&lt;/a&gt; The CPU/memory cost parameter. Must e a power of two greater than 1. &lt;strong&gt;Default&lt;/strong&gt;&lt;code&gt;16384&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df7e1519d6665be682578426958b31fcdaa096e5" translate="yes" xml:space="preserve">
          <source>Type: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type&quot;&gt;&amp;lt;number&amp;gt;&lt;/a&gt; The length in bits of the prime.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a55d5b2ec241b1a7926617263c0c009b0e87335f" translate="yes" xml:space="preserve">
          <source>Type: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type&quot;&gt;&amp;lt;number&amp;gt;&lt;/a&gt; The number of bits in the &lt;code&gt;aesCtrParams.counter&lt;/code&gt; that are to be used as the counter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ef1abafdf3655626452ea56735bc00d8e22f2c1" translate="yes" xml:space="preserve">
          <source>Type: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type&quot;&gt;&amp;lt;number&amp;gt;&lt;/a&gt; The size in bits of the generated authentication tag. This values must be one of &lt;code&gt;32&lt;/code&gt;, &lt;code&gt;64&lt;/code&gt;, &lt;code&gt;96&lt;/code&gt;, &lt;code&gt;104&lt;/code&gt;, &lt;code&gt;112&lt;/code&gt;, &lt;code&gt;120&lt;/code&gt;, or &lt;code&gt;128&lt;/code&gt;. &lt;strong&gt;Default&lt;/strong&gt;: &lt;code&gt;128&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a21a74a74290067e973bcaa8fa38d6218f2fc11f" translate="yes" xml:space="preserve">
          <source>Type: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string&amp;gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7a0e9b4740cfad9b64a9a86d1b326d57f5a812d" translate="yes" xml:space="preserve">
          <source>Type: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string&amp;gt;&lt;/a&gt; Must be &lt;code&gt;'AES-CBC'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2603363893f59f8abd09a786ddc7895f4619f485" translate="yes" xml:space="preserve">
          <source>Type: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string&amp;gt;&lt;/a&gt; Must be &lt;code&gt;'AES-CTR'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2516b6e63cfc635e02f04e70def23ebe7133872f" translate="yes" xml:space="preserve">
          <source>Type: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string&amp;gt;&lt;/a&gt; Must be &lt;code&gt;'AES-GCM'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d95be9478e8842ab65be05f22f7d1dc208a44b8" translate="yes" xml:space="preserve">
          <source>Type: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string&amp;gt;&lt;/a&gt; Must be &lt;code&gt;'AES-KW'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df699e54874e5e112905c5fa3549600fafcd87e7" translate="yes" xml:space="preserve">
          <source>Type: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string&amp;gt;&lt;/a&gt; Must be &lt;code&gt;'ECDH'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c66a6d5b46bbd0ed19420fb6cd18291f8f9d9b1" translate="yes" xml:space="preserve">
          <source>Type: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string&amp;gt;&lt;/a&gt; Must be &lt;code&gt;'ECDSA'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87c4a1dce5235029e0203eba172053de5a6b23b3" translate="yes" xml:space="preserve">
          <source>Type: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string&amp;gt;&lt;/a&gt; Must be &lt;code&gt;'HKDF'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2732ca262af774941f8d3b728853d75ad8dfbda2" translate="yes" xml:space="preserve">
          <source>Type: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string&amp;gt;&lt;/a&gt; Must be &lt;code&gt;'HMAC'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42e697aea220f34c7166854dfdd1d89eea1709ca" translate="yes" xml:space="preserve">
          <source>Type: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string&amp;gt;&lt;/a&gt; Must be &lt;code&gt;'HMAC&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6b26ae2daa7d41b9a19a98c93b2406feff1aee5" translate="yes" xml:space="preserve">
          <source>Type: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string&amp;gt;&lt;/a&gt; Must be &lt;code&gt;'NODE-DH'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="694bf461bef5a32a65a35acab62f2342237c5048" translate="yes" xml:space="preserve">
          <source>Type: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string&amp;gt;&lt;/a&gt; Must be &lt;code&gt;'NODE-DSA'&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="906115badaf9f8d9dee887c9a00b704cbab3a734" translate="yes" xml:space="preserve">
          <source>Type: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string&amp;gt;&lt;/a&gt; Must be &lt;code&gt;'NODE-DSA'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e77d10d10e61d73182f40d31a0dc792ca7a4b9b5" translate="yes" xml:space="preserve">
          <source>Type: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string&amp;gt;&lt;/a&gt; Must be &lt;code&gt;'NODE-SCRYPT'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd3fb2427d956c17c38ee43762a35f8c02a4945a" translate="yes" xml:space="preserve">
          <source>Type: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string&amp;gt;&lt;/a&gt; Must be &lt;code&gt;'PBKDF2'&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfe6d30d11d81818f12d9501faefcb917f4c1992" translate="yes" xml:space="preserve">
          <source>Type: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string&amp;gt;&lt;/a&gt; Must be &lt;code&gt;'PBKDF2'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="629ad0eafb7a7a59682b4caf68a6598770c4b4b7" translate="yes" xml:space="preserve">
          <source>Type: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string&amp;gt;&lt;/a&gt; Must be &lt;code&gt;'RSA-PSS'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bc7af1a2745c2e040d02d130e5b4afb195477f6" translate="yes" xml:space="preserve">
          <source>Type: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string&amp;gt;&lt;/a&gt; Must be &lt;code&gt;'RSASSA-PKCS1-v1_5'&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff0df871f8046c4ac3fd19b66dc75a7d2450124e" translate="yes" xml:space="preserve">
          <source>Type: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string&amp;gt;&lt;/a&gt; Must be one of &lt;code&gt;'AES-CBC'&lt;/code&gt;, &lt;code&gt;'AES-CTR'&lt;/code&gt;, &lt;code&gt;'AES-GCM'&lt;/code&gt;, or &lt;code&gt;'AES-KW'&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="457d486fac563d2e96cedee67f290d1a3c6bbc78" translate="yes" xml:space="preserve">
          <source>Type: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string&amp;gt;&lt;/a&gt; Must be one of &lt;code&gt;'AES-CTR'&lt;/code&gt;, &lt;code&gt;'AES-CBC'&lt;/code&gt;, &lt;code&gt;'AES-GCM'&lt;/code&gt;, or &lt;code&gt;'AES-KW'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f461cba0e1d0a7fb74661e3c0c7124874446a1e2" translate="yes" xml:space="preserve">
          <source>Type: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string&amp;gt;&lt;/a&gt; Must be one of &lt;code&gt;'ECDSA'&lt;/code&gt; or &lt;code&gt;'ECDH'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b895e6451776bebb9276ef128dfddd936fca60f" translate="yes" xml:space="preserve">
          <source>Type: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string&amp;gt;&lt;/a&gt; Must be one of &lt;code&gt;'P-256'&lt;/code&gt;, &lt;code&gt;'P-384'&lt;/code&gt; or &lt;code&gt;'P-521'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a8d228704d1caec209b77781372f8dc9951f32a" translate="yes" xml:space="preserve">
          <source>Type: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string&amp;gt;&lt;/a&gt; Must be one of &lt;code&gt;'RSASSA-PKCS1-v1_5'&lt;/code&gt;, &lt;code&gt;'RSA-PSS'&lt;/code&gt;, or &lt;code&gt;'RSA-OAEP'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a699d6b6caf1b9a5bd3c6c23dd7b70e70089b93" translate="yes" xml:space="preserve">
          <source>Type: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string&amp;gt;&lt;/a&gt; One of &lt;code&gt;'secret'&lt;/code&gt;, &lt;code&gt;'private'&lt;/code&gt;, or &lt;code&gt;'public'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="978e1a5a183ad430b4f5ed38ac04c4e08fb5ef7c" translate="yes" xml:space="preserve">
          <source>Type: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string&amp;gt;&lt;/a&gt; The Diffie-Hellman group name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9fcfb7c58be096f0473d03d8c166fef5a4bbcdf" translate="yes" xml:space="preserve">
          <source>Type: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string&amp;gt;&lt;/a&gt; The string encoding when &lt;code&gt;salt&lt;/code&gt; is a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfe640573e0e27a7ea866d3c74caa1acdc2ceaff" translate="yes" xml:space="preserve">
          <source>Type: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string&amp;gt;&lt;/a&gt; must be &lt;code&gt;'RSA-OAEP'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ccb3da55d3c8149262995c5bbbd57dd299e1fba" translate="yes" xml:space="preserve">
          <source>Type: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer&quot;&gt;&amp;lt;ArrayBuffer&amp;gt;&lt;/a&gt; | &lt;a href=&quot;buffer#buffer_class_buffer&quot;&gt;&amp;lt;Buffer&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray&quot;&gt;&amp;lt;TypedArray&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView&quot;&gt;&amp;lt;DataView&amp;gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8a5ab0c011b8b439e3ddf4315f71a57dfd504c3" translate="yes" xml:space="preserve">
          <source>Type: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object&quot;&gt;&amp;lt;Object&amp;gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4265544e82459f2823e2fcde24684b91e1cb0b4" translate="yes" xml:space="preserve">
          <source>Type: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string[]&amp;gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f4031cfacd061ce21c7543c8e8bdf69c3458801" translate="yes" xml:space="preserve">
          <source>Type: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer&quot;&gt;&amp;lt;ArrayBuffer&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray&quot;&gt;&amp;lt;TypedArray&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView&quot;&gt;&amp;lt;DataView&amp;gt;&lt;/a&gt; | &lt;a href=&quot;buffer#buffer_class_buffer&quot;&gt;&amp;lt;Buffer&amp;gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ea1f8486f61d3e2e80f8f2fc8fc310045bbed70" translate="yes" xml:space="preserve">
          <source>Type: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer&quot;&gt;&amp;lt;ArrayBuffer&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray&quot;&gt;&amp;lt;TypedArray&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView&quot;&gt;&amp;lt;DataView&amp;gt;&lt;/a&gt; | &lt;a href=&quot;buffer#buffer_class_buffer&quot;&gt;&amp;lt;Buffer&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Undefined_type&quot;&gt;&amp;lt;undefined&amp;gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a3f00ce80162490a7815c4706ba984eacb6bac5" translate="yes" xml:space="preserve">
          <source>Type: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function&quot;&gt;&amp;lt;Function&amp;gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03fbf3b7db603e2ab0dcaf326b514b18dffd7814" translate="yes" xml:space="preserve">
          <source>Type: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function&quot;&gt;&amp;lt;Function&amp;gt;&lt;/a&gt; Invoked with a received message cannot be deserialized.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bee2c30d2a3ec1a9c85913276e07b0d8052bec99" translate="yes" xml:space="preserve">
          <source>Type: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function&quot;&gt;&amp;lt;Function&amp;gt;&lt;/a&gt; Invoked with a single &lt;code&gt;MessageEvent&lt;/code&gt; argument when a message is received.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8a0a1ec9c884ec256153c9a5006a88ba84a4281" translate="yes" xml:space="preserve">
          <source>Type: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object&quot;&gt;&amp;lt;Object&amp;gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01f78ac9cdfc8f669c51d4b1a75e40e81917f104" translate="yes" xml:space="preserve">
          <source>Type: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object&quot;&gt;&amp;lt;Object&amp;gt;&lt;/a&gt; An error object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49742d616ad76a5147e9598cf63783142528874b" translate="yes" xml:space="preserve">
          <source>Type: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object&quot;&gt;&amp;lt;Object&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string[]&amp;gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2272da20a862e296c374258d5bacab43343eec53" translate="yes" xml:space="preserve">
          <source>Type: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array&quot;&gt;&amp;lt;Uint8Array&amp;gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ceb223a22edb2173e00d8e6fa8f8508c7109b1c2" translate="yes" xml:space="preserve">
          <source>Type: &lt;a href=&quot;net#net_class_net_blocklist&quot;&gt;&amp;lt;net.BlockList&amp;gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ffeb31b143fc73e85da403cf1496272e5d911b7" translate="yes" xml:space="preserve">
          <source>Type: &lt;a href=&quot;quic#quic_class_quicendpoint&quot;&gt;&amp;lt;QuicEndpoint[]&amp;gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34847f742650e612d151120815dcdf1cd8a3f44b" translate="yes" xml:space="preserve">
          <source>Type: &lt;a href=&quot;quic#quic_class_quicserversession_extends_quicsession&quot;&gt;&amp;lt;QuicSession&amp;gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2568506c1a5940d78e32cac20ca0478096bf69d" translate="yes" xml:space="preserve">
          <source>Type: &lt;a href=&quot;quic#quic_net_createquicsocket_options&quot;&gt;&amp;lt;QuicSocket&amp;gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dffc861d30374215dd8373cc077e747d836d6b1" translate="yes" xml:space="preserve">
          <source>Type: &lt;a href=&quot;stream#stream_class_stream_readable&quot;&gt;&amp;lt;stream.Readable&amp;gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91d4b4c41c8ce82611f320cb2c41940c6682c569" translate="yes" xml:space="preserve">
          <source>Type: &lt;a href=&quot;webcrypto#webcrypto_class_aeskeygenparams&quot;&gt;&amp;lt;AesKeyGenParams&amp;gt;&lt;/a&gt; | &lt;a href=&quot;webcrypto#webcrypto_class_rsahashedkeygenparams&quot;&gt;&amp;lt;RsaHashedKeyGenParams&amp;gt;&lt;/a&gt; | &lt;a href=&quot;webcrypto#webcrypto_class_eckeygenparams&quot;&gt;&amp;lt;EcKeyGenParams&amp;gt;&lt;/a&gt; | &lt;a href=&quot;webcrypto#webcrypto_class_hmackeygenparams&quot;&gt;&amp;lt;HmacKeyGenParams&amp;gt;&lt;/a&gt; | &lt;a href=&quot;webcrypto#webcrypto_class_nodedsakeygenparams&quot;&gt;&amp;lt;NodeDsaKeyGenParams&amp;gt;&lt;/a&gt; | &lt;a href=&quot;webcrypto#webcrypto_class_nodedhkeygenparams&quot;&gt;&amp;lt;NodeDhKeyGenParams&amp;gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbaa111a337aab1a6ea00fee972498e5a7c36321" translate="yes" xml:space="preserve">
          <source>Type: &lt;a href=&quot;webcrypto#webcrypto_class_crypto&quot;&gt;&amp;lt;Crypto&amp;gt;&lt;/a&gt; An implementation of the Web Crypto API standard.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="542d17d9e5f335edf7614836cb99abd654ed907c" translate="yes" xml:space="preserve">
          <source>Type: &lt;a href=&quot;webcrypto#webcrypto_class_cryptokey&quot;&gt;&amp;lt;CryptoKey&amp;gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85ab734ae427a00e0161a54603f81fe27ff24d3a" translate="yes" xml:space="preserve">
          <source>Type: &lt;a href=&quot;webcrypto#webcrypto_class_cryptokey&quot;&gt;&amp;lt;CryptoKey&amp;gt;&lt;/a&gt; A &lt;a href=&quot;webcrypto#webcrypto_class_cryptokey&quot;&gt;&amp;lt;CryptoKey&amp;gt;&lt;/a&gt; whose &lt;code&gt;type&lt;/code&gt; will be &lt;code&gt;'private'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0f174332635cd925bbf30c1190a1c28d7eddade" translate="yes" xml:space="preserve">
          <source>Type: &lt;a href=&quot;webcrypto#webcrypto_class_cryptokey&quot;&gt;&amp;lt;CryptoKey&amp;gt;&lt;/a&gt; A &lt;a href=&quot;webcrypto#webcrypto_class_cryptokey&quot;&gt;&amp;lt;CryptoKey&amp;gt;&lt;/a&gt; whose &lt;code&gt;type&lt;/code&gt; will be &lt;code&gt;'public'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44a07774bd9709dce2567f86d83a3b9141c99fdd" translate="yes" xml:space="preserve">
          <source>Type: &lt;a href=&quot;webcrypto#webcrypto_class_cryptokey&quot;&gt;&amp;lt;CryptoKey&amp;gt;&lt;/a&gt; The other parties public key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd480694fcd9a7005cb9e7edf7802cd5407cfcd5" translate="yes" xml:space="preserve">
          <source>Type: &lt;a href=&quot;webcrypto#webcrypto_class_subtlecrypto&quot;&gt;&amp;lt;SubtleCrypto&amp;gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2647e5f13f485f80e1042fd1e8926be242eb82e" translate="yes" xml:space="preserve">
          <source>Type: Address</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9bad3fe9a9d788bf5ced613088a28a42982f43d" translate="yes" xml:space="preserve">
          <source>Type: Compile-time</source>
          <target state="translated">类型。编译时</target>
        </trans-unit>
        <trans-unit id="2e2f71bebdcf0432ba9dae30fc4cd34d69a994d9" translate="yes" xml:space="preserve">
          <source>Type: Deprecation revoked</source>
          <target state="translated">类型:废弃的类型:</target>
        </trans-unit>
        <trans-unit id="4afacd032dbf0b042ddec6e49a24f87b169ee946" translate="yes" xml:space="preserve">
          <source>Type: Documentation-only</source>
          <target state="translated">类型:仅限文件</target>
        </trans-unit>
        <trans-unit id="f4038b1c0b648006573b34c3b0edb7a524d16ee2" translate="yes" xml:space="preserve">
          <source>Type: Documentation-only (supports &lt;a href=&quot;cli#cli_pending_deprecation&quot;&gt;&lt;code&gt;--pending-deprecation&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">类型：仅文档（支持&lt;a href=&quot;cli#cli_pending_deprecation&quot;&gt; &lt;code&gt;--pending-deprecation&lt;/code&gt; &lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="c0334739797e8108100cffbf45a4decc971aeb44" translate="yes" xml:space="preserve">
          <source>Type: End-of-Life</source>
          <target state="translated">类型:生命末期</target>
        </trans-unit>
        <trans-unit id="c05f59a4cce67895e11eed8826cf4cee5bd54571" translate="yes" xml:space="preserve">
          <source>Type: End-of-Life.</source>
          <target state="translated">类型:生命末期。</target>
        </trans-unit>
        <trans-unit id="daf411b4184b37552deeb3149950b164297c489d" translate="yes" xml:space="preserve">
          <source>Type: Runtime</source>
          <target state="translated">类型。运行时</target>
        </trans-unit>
        <trans-unit id="ebfbea69b5d285abfce6c4bef135a0ed69b7b0de" translate="yes" xml:space="preserve">
          <source>Type: Runtime (supports &lt;a href=&quot;cli#cli_pending_deprecation&quot;&gt;&lt;code&gt;--pending-deprecation&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">类型：运行时（支持&lt;a href=&quot;cli#cli_pending_deprecation&quot;&gt; &lt;code&gt;--pending-deprecation&lt;/code&gt; &lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="024bfd95e02496791b2881c7c1f7dd42376280b5" translate="yes" xml:space="preserve">
          <source>Type: Runtime &lt;code&gt;Transform._transformState&lt;/code&gt; will be removed in future versions where it is no longer required due to simplification of the implementation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9af8f14bd15271db0f113f7c146e7fa9294b1caa" translate="yes" xml:space="preserve">
          <source>TypeError</source>
          <target state="translated">TypeError</target>
        </trans-unit>
        <trans-unit id="44f1ccbdc81b78ae74c2d0ae854796e4d7061770" translate="yes" xml:space="preserve">
          <source>Typed array slices are handled correctly now.</source>
          <target state="translated">现在可以正确处理类型化的数组切片。</target>
        </trans-unit>
        <trans-unit id="38f54df64da42601768ef91ee31423fac4d49160" translate="yes" xml:space="preserve">
          <source>Types of Streams</source>
          <target state="translated">溪流的类型</target>
        </trans-unit>
        <trans-unit id="d580373209dd6a1707a0a6d7b5661be32ac592f2" translate="yes" xml:space="preserve">
          <source>Types of streams</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7824c5156ab482008ad2ab94f44f8d1d1cdb802" translate="yes" xml:space="preserve">
          <source>Typically when wrapping a class instance, a finalize callback should be provided that simply deletes the native instance that is received as the &lt;code&gt;data&lt;/code&gt; argument to the finalize callback.</source>
          <target state="translated">通常，在包装类实例时，应提供一个finalize回调，该回调仅删除作为该finalize回调的 &lt;code&gt;data&lt;/code&gt; 参数接收的本机实例。</target>
        </trans-unit>
        <trans-unit id="f65c7601001c43a1759b63d4de8c6cbfa1fdec3a" translate="yes" xml:space="preserve">
          <source>Typically, the &lt;code&gt;response&lt;/code&gt; is a digitally signed object from the server's CA that contains information about server's certificate revocation status.</source>
          <target state="translated">通常， &lt;code&gt;response&lt;/code&gt; 是来自服务器CA的数字签名对象，其中包含有关服务器证书吊销状态的信息。</target>
        </trans-unit>
        <trans-unit id="1a77b330d905af0212c5c7ff0c6a442a27aabe49" translate="yes" xml:space="preserve">
          <source>Typically, the size of the current buffer is measured against the &lt;code&gt;highWaterMark&lt;/code&gt; in &lt;em&gt;bytes&lt;/em&gt;. However, after &lt;code&gt;setEncoding()&lt;/code&gt; is called, the comparison function will begin to measure the buffer's size in &lt;em&gt;characters&lt;/em&gt;.</source>
          <target state="translated">通常，当前缓冲区的大小是相对于 &lt;code&gt;highWaterMark&lt;/code&gt; 的&lt;em&gt;字节数&lt;/em&gt;。但是，在 &lt;code&gt;setEncoding()&lt;/code&gt; 之后，比较函数将开始以&lt;em&gt;character&lt;/em&gt;为单位测量缓冲区的大小。</target>
        </trans-unit>
        <trans-unit id="219e224c2a9b92a6e101f6876f27314c5bbac679" translate="yes" xml:space="preserve">
          <source>Typically, this is managed through the number of &lt;code&gt;'disconnect'&lt;/code&gt; and &lt;code&gt;'message'&lt;/code&gt; listeners on the &lt;code&gt;process&lt;/code&gt; object. However, this method can be used to explicitly request a specific behavior.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2c7c0caa10a0cca5ea7d69e54018ae0c0389dd6" translate="yes" xml:space="preserve">
          <source>U</source>
          <target state="translated">U</target>
        </trans-unit>
        <trans-unit id="b31db7cab86864065f3e106f86c44b514de32cc5" translate="yes" xml:space="preserve">
          <source>UDP/Datagram</source>
          <target state="translated">UDP/Datagram</target>
        </trans-unit>
        <trans-unit id="9f78a32c9e9869badba95ed40dd1e0e645130d94" translate="yes" xml:space="preserve">
          <source>UDP/Datagram Sockets</source>
          <target state="translated">UDP/数据口</target>
        </trans-unit>
        <trans-unit id="fb468ca992673c8e389166a22b228b123bbe372c" translate="yes" xml:space="preserve">
          <source>UDP/datagram</source>
          <target state="translated">UDP/datagram</target>
        </trans-unit>
        <trans-unit id="acc6e7e4a3651dd476a52e5cffe0d3c3489395d7" translate="yes" xml:space="preserve">
          <source>UDP/datagram sockets</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e2d9b0777a485c1276de0803c12a7d76fbc5c39" translate="yes" xml:space="preserve">
          <source>URL</source>
          <target state="translated">URL</target>
        </trans-unit>
        <trans-unit id="0aa6d0c7243e93e5b8220dee83a136c689b755fa" translate="yes" xml:space="preserve">
          <source>URL Strings and URL Objects</source>
          <target state="translated">URL字符串和URL对象</target>
        </trans-unit>
        <trans-unit id="668c7293b4faab50fd65a1538e196f37e127ab64" translate="yes" xml:space="preserve">
          <source>URL object support</source>
          <target state="translated">支持URL对象</target>
        </trans-unit>
        <trans-unit id="79b0dc43bf17928f302cb7ea469c8717b49e7aa7" translate="yes" xml:space="preserve">
          <source>URL strings and URL objects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44c577ae467a3484accd429a3a86f410b07ee886" translate="yes" xml:space="preserve">
          <source>URL-based paths</source>
          <target state="translated">基于URL的路径</target>
        </trans-unit>
        <trans-unit id="b19e8d66e7f004e226c44a75766dadab7d09911a" translate="yes" xml:space="preserve">
          <source>URLSearchParams</source>
          <target state="translated">URLSearchParams</target>
        </trans-unit>
        <trans-unit id="01f03837323aab32409bb99c50d6c475179c49df" translate="yes" xml:space="preserve">
          <source>URLs</source>
          <target state="translated">URLs</target>
        </trans-unit>
        <trans-unit id="aaa0bde7f5196da87592a553fbff4a7d60686471" translate="yes" xml:space="preserve">
          <source>URLs are permitted to only contain a certain range of characters. Any character falling outside of that range must be encoded. How such characters are encoded, and which characters to encode depends entirely on where the character is located within the structure of the URL.</source>
          <target state="translated">URL只允许包含一定范围的字符。任何超出该范围的字符都必须进行编码。如何对这些字符进行编码,对哪些字符进行编码,完全取决于该字符在URL结构中的位置。</target>
        </trans-unit>
        <trans-unit id="1caa901ddac6183bbfa527108f80fb9a81c3fb50" translate="yes" xml:space="preserve">
          <source>URLs with a &lt;code&gt;file:&lt;/code&gt; scheme will now always use the correct number of slashes regardless of &lt;code&gt;slashes&lt;/code&gt; option. A false-y &lt;code&gt;slashes&lt;/code&gt; option with no protocol is now also respected at all times.</source>
          <target state="translated">带有 &lt;code&gt;file:&lt;/code&gt; URL 现在将始终使用正确数量的斜杠，而不管 &lt;code&gt;slashes&lt;/code&gt; 选项如何。现在也始终遵守不带协议的false -y &lt;code&gt;slashes&lt;/code&gt; 选项。</target>
        </trans-unit>
        <trans-unit id="7ce43f682f8e00790c8ef30d56b7ba3f345e48bf" translate="yes" xml:space="preserve">
          <source>URLs with a &lt;code&gt;file:&lt;/code&gt; scheme will now always use the correct number of slashes regardless of &lt;code&gt;slashes&lt;/code&gt; option. A falsy &lt;code&gt;slashes&lt;/code&gt; option with no protocol is now also respected at all times.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cf77927f71e28dcf1f204b6a54ebaa27e8f22d5" translate="yes" xml:space="preserve">
          <source>UTF-8 encodes the &lt;code&gt;input&lt;/code&gt; string and returns a &lt;code&gt;Uint8Array&lt;/code&gt; containing the encoded bytes.</source>
          <target state="translated">UTF-8对 &lt;code&gt;input&lt;/code&gt; 字符串进行编码，并返回包含编码字节的 &lt;code&gt;Uint8Array&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b71146a62fb63a8add8a5579d875bb69309a465e" translate="yes" xml:space="preserve">
          <source>UTF-8 encodes the &lt;code&gt;src&lt;/code&gt; string to the &lt;code&gt;dest&lt;/code&gt; Uint8Array and returns an object containing the read Unicode code units and written UTF-8 bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2a020ddc6f85f9747d28e1db856f35e5132b29d" translate="yes" xml:space="preserve">
          <source>Uncaught exceptions only emit the &lt;a href=&quot;process#process_event_uncaughtexception&quot;&gt;&lt;code&gt;'uncaughtException'&lt;/code&gt;&lt;/a&gt; event if the &lt;code&gt;repl&lt;/code&gt; is used as standalone program. If the &lt;code&gt;repl&lt;/code&gt; is included anywhere in another application, adding a listener for this event will throw an &lt;a href=&quot;errors#errors_err_invalid_repl_input&quot;&gt;&lt;code&gt;ERR_INVALID_REPL_INPUT&lt;/code&gt;&lt;/a&gt; exception.</source>
          <target state="translated">如果将 &lt;code&gt;repl&lt;/code&gt; 用作独立程序，则&lt;a href=&quot;process#process_event_uncaughtexception&quot;&gt; &lt;code&gt;'uncaughtException'&lt;/code&gt; &lt;/a&gt;捕获的异常只会发出&amp;ldquo; uncaughtException&amp;rdquo;事件。如果 &lt;code&gt;repl&lt;/code&gt; 包含在另一个应用程序中的任何位置，则为此事件添加侦听器将引发&lt;a href=&quot;errors#errors_err_invalid_repl_input&quot;&gt; &lt;code&gt;ERR_INVALID_REPL_INPUT&lt;/code&gt; &lt;/a&gt;异常。</target>
        </trans-unit>
        <trans-unit id="00499514ac2e595db5c7987996d23850bbb67efb" translate="yes" xml:space="preserve">
          <source>Uncaught exceptions only emit the &lt;a href=&quot;process#process_event_uncaughtexception&quot;&gt;&lt;code&gt;'uncaughtException'&lt;/code&gt;&lt;/a&gt; event in the standalone REPL. Adding a listener for this event in a REPL within another Node.js program throws &lt;a href=&quot;errors#errors_err_invalid_repl_input&quot;&gt;&lt;code&gt;ERR_INVALID_REPL_INPUT&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12780a16241be2fa7756cbd98a691718ec9bd790" translate="yes" xml:space="preserve">
          <source>Undefined value error is identified by &lt;code&gt;code: 'ERR_HTTP_INVALID_HEADER_VALUE'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="355754b0f03869d3cdd89f47abdc47135392a8b0" translate="yes" xml:space="preserve">
          <source>Under normal circumstances, there is no need to modify the report triggering signal. However, if &lt;code&gt;SIGUSR2&lt;/code&gt; is already used for other purposes, then this flag helps to change the signal for report generation and preserve the original meaning of &lt;code&gt;SIGUSR2&lt;/code&gt; for the said purposes.</source>
          <target state="translated">通常情况下，无需修改报告触发信号。但是，如果 &lt;code&gt;SIGUSR2&lt;/code&gt; 已经用于其他目的，则此标志有助于更改信号以生成报告，并保留 &lt;code&gt;SIGUSR2&lt;/code&gt; 的原始含义。</target>
        </trans-unit>
        <trans-unit id="91d9c4087497cf56cdc0c9a2696808d747e7494c" translate="yes" xml:space="preserve">
          <source>Under the hood, &lt;a href=&quot;#dns_dns_lookup_hostname_options_callback&quot;&gt;&lt;code&gt;dns.lookup()&lt;/code&gt;&lt;/a&gt; uses the same operating system facilities as most other programs. For instance, &lt;a href=&quot;#dns_dns_lookup_hostname_options_callback&quot;&gt;&lt;code&gt;dns.lookup()&lt;/code&gt;&lt;/a&gt; will almost always resolve a given name the same way as the &lt;code&gt;ping&lt;/code&gt; command. On most POSIX-like operating systems, the behavior of the &lt;a href=&quot;#dns_dns_lookup_hostname_options_callback&quot;&gt;&lt;code&gt;dns.lookup()&lt;/code&gt;&lt;/a&gt; function can be modified by changing settings in &lt;a href=&quot;http://man7.org/linux/man-pages/man5/nsswitch.conf.5.html&quot;&gt;&lt;code&gt;nsswitch.conf(5)&lt;/code&gt;&lt;/a&gt; and/or &lt;a href=&quot;http://man7.org/linux/man-pages/man5/resolv.conf.5.html&quot;&gt;&lt;code&gt;resolv.conf(5)&lt;/code&gt;&lt;/a&gt;, but changing these files will change the behavior of all other programs running on the same operating system.</source>
          <target state="translated">在&lt;a href=&quot;#dns_dns_lookup_hostname_options_callback&quot;&gt; &lt;code&gt;dns.lookup()&lt;/code&gt; &lt;/a&gt;，dns.lookup（）使用与大多数其他程序相同的操作系统功能。例如，&lt;a href=&quot;#dns_dns_lookup_hostname_options_callback&quot;&gt; &lt;code&gt;dns.lookup()&lt;/code&gt; &lt;/a&gt;几乎总是以与 &lt;code&gt;ping&lt;/code&gt; 命令相同的方式解析给定名称。在大多数类似POSIX的操作系统上，可以通过更改&lt;a href=&quot;http://man7.org/linux/man-pages/man5/nsswitch.conf.5.html&quot;&gt; &lt;code&gt;nsswitch.conf(5)&lt;/code&gt; &lt;/a&gt;和/或&lt;a href=&quot;http://man7.org/linux/man-pages/man5/resolv.conf.5.html&quot;&gt; &lt;code&gt;resolv.conf(5)&lt;/code&gt; 中的&lt;/a&gt;设置来修改&lt;a href=&quot;#dns_dns_lookup_hostname_options_callback&quot;&gt; &lt;code&gt;dns.lookup()&lt;/code&gt; &lt;/a&gt;函数的行为，但是更改这些文件将更改行为。在同一操作系统上运行的所有其他程序。</target>
        </trans-unit>
        <trans-unit id="580e3fbd2559f3ee3cfa1776417d5a62f4c14b7c" translate="yes" xml:space="preserve">
          <source>Underscores instead of dashes are now allowed for Node.js options as well, in addition to V8 options.</source>
          <target state="translated">除了V8选项外,现在Node.js选项也允许用下划线代替破折号。</target>
        </trans-unit>
        <trans-unit id="ed2bd0b19c6dea70c7607644329c823665264cfc" translate="yes" xml:space="preserve">
          <source>Unflag &lt;code&gt;--experimental-modules&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c2e7282fb0e27b15982f88c5929897b3adfb4d7" translate="yes" xml:space="preserve">
          <source>Unflag Top-Level Await.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d19cffd05ee3c79cb00f356aecb7406fcb1d3e26" translate="yes" xml:space="preserve">
          <source>Unflag conditional exports.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a980d0989e6f2d52c0782eb0bf64b702bd0c9261" translate="yes" xml:space="preserve">
          <source>Unflag self-referencing a package using its name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6535069f12c408de03e4a4245fa064b53e80ecc" translate="yes" xml:space="preserve">
          <source>Unfortunately, &lt;code&gt;napi_instanceof()&lt;/code&gt; does not protect against prototype manipulation. For example, the prototype of the database handle instance can be set to the prototype of the constructor for query handle instances. In this case, the database handle instance can appear as a query handle instance, and it will pass the &lt;code&gt;napi_instanceof()&lt;/code&gt; test for a query handle instance, while still containing a pointer to a database handle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b6da39f1b5c6c93e6c62b868278c8947240fb88" translate="yes" xml:space="preserve">
          <source>Unhandled &lt;code&gt;Promise&lt;/code&gt; rejections will now emit a process warning.</source>
          <target state="translated">现在，未处理的 &lt;code&gt;Promise&lt;/code&gt; 拒绝将发出过程警告。</target>
        </trans-unit>
        <trans-unit id="8ceb854cab777251b618db6f339ec0de596df6df" translate="yes" xml:space="preserve">
          <source>Unhandled promise rejections are deprecated. By default, promise rejections that are not handled terminate the Node.js process with a non-zero exit code. To change the way Node.js treats unhandled rejections, use the &lt;a href=&quot;cli#cli_unhandled_rejections_mode&quot;&gt;&lt;code&gt;--unhandled-rejections&lt;/code&gt;&lt;/a&gt; command-line option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="464f051574cc9f087c75400c48b33f6db9e3b08d" translate="yes" xml:space="preserve">
          <source>Unhandled promise rejections are deprecated. In the future, promise rejections that are not handled will terminate the Node.js process with a non-zero exit code.</source>
          <target state="translated">未处理的承诺拒绝已被废弃。未来,未处理的承诺拒绝将以一个非零的退出代码终止Node.js进程。</target>
        </trans-unit>
        <trans-unit id="584854aa0e9467ba1a8c66c80f5e294682497d95" translate="yes" xml:space="preserve">
          <source>Unicode characters appearing within the host name of &lt;code&gt;input&lt;/code&gt; will be automatically converted to ASCII using the &lt;a href=&quot;https://tools.ietf.org/html/rfc5891#section-4.4&quot;&gt;Punycode&lt;/a&gt; algorithm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="571721324afa74a8ee617292febb542f1513c933" translate="yes" xml:space="preserve">
          <source>Unicode characters appearing within the hostname of &lt;code&gt;input&lt;/code&gt; will be automatically converted to ASCII using the &lt;a href=&quot;https://tools.ietf.org/html/rfc5891#section-4.4&quot;&gt;Punycode&lt;/a&gt; algorithm.</source>
          <target state="translated">&lt;code&gt;input&lt;/code&gt; 的主机名中出现的Unicode字符将使用&lt;a href=&quot;https://tools.ietf.org/html/rfc5891#section-4.4&quot;&gt;Punycode&lt;/a&gt;算法自动转换为ASCII 。</target>
        </trans-unit>
        <trans-unit id="12b0a12e37a0aa70166ef0879f9a3b2e21c18fa6" translate="yes" xml:space="preserve">
          <source>Unknown values for the resolved module location cause failures but are not guaranteed to be forward compatible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d44850afeb4065072620c926d0775df5f7048af1" translate="yes" xml:space="preserve">
          <source>Unless an application is dynamically generating and running code, &lt;code&gt;ReferenceError&lt;/code&gt; instances indicate a bug in the code or its dependencies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="929fece4ad5f5e7b4b1b96bae39ed7f671795daa" translate="yes" xml:space="preserve">
          <source>Unless an application is dynamically generating and running code, &lt;code&gt;ReferenceError&lt;/code&gt; instances should always be considered a bug in the code or its dependencies.</source>
          <target state="translated">除非应用程序动态生成并运行代码，否则应始终将 &lt;code&gt;ReferenceError&lt;/code&gt; 实例视为代码或其依赖项中的错误。</target>
        </trans-unit>
        <trans-unit id="fe2b51adbc6c7b0bc926ec919779dce328f8537f" translate="yes" xml:space="preserve">
          <source>Unless explicitly specified when creating a &lt;a href=&quot;worker_threads#worker_threads_class_worker&quot;&gt;&lt;code&gt;Worker&lt;/code&gt;&lt;/a&gt; instance, each &lt;a href=&quot;worker_threads#worker_threads_class_worker&quot;&gt;&lt;code&gt;Worker&lt;/code&gt;&lt;/a&gt; thread has its own copy of &lt;code&gt;process.env&lt;/code&gt;, based on its parent thread&amp;rsquo;s &lt;code&gt;process.env&lt;/code&gt;, or whatever was specified as the &lt;code&gt;env&lt;/code&gt; option to the &lt;a href=&quot;worker_threads#worker_threads_class_worker&quot;&gt;&lt;code&gt;Worker&lt;/code&gt;&lt;/a&gt; constructor. Changes to &lt;code&gt;process.env&lt;/code&gt; will not be visible across &lt;a href=&quot;worker_threads#worker_threads_class_worker&quot;&gt;&lt;code&gt;Worker&lt;/code&gt;&lt;/a&gt; threads, and only the main thread can make changes that are visible to the operating system or to native add-ons.</source>
          <target state="translated">除非在创建&lt;a href=&quot;worker_threads#worker_threads_class_worker&quot;&gt; &lt;code&gt;Worker&lt;/code&gt; &lt;/a&gt;实例时明确指定，否则每个&lt;a href=&quot;worker_threads#worker_threads_class_worker&quot;&gt; &lt;code&gt;Worker&lt;/code&gt; &lt;/a&gt;线程都会基于其父线程的 &lt;code&gt;process.env&lt;/code&gt; 或指定为&lt;a href=&quot;worker_threads#worker_threads_class_worker&quot;&gt; &lt;code&gt;Worker&lt;/code&gt; &lt;/a&gt;构造函数的 &lt;code&gt;env&lt;/code&gt; 选项的内容拥有自己的 &lt;code&gt;process.env&lt;/code&gt; 副本。对 &lt;code&gt;process.env&lt;/code&gt; 所做的更改将在&lt;a href=&quot;worker_threads#worker_threads_class_worker&quot;&gt; &lt;code&gt;Worker&lt;/code&gt; &lt;/a&gt;线程之间不可见，并且只有主线程才能进行对操作系统或本机附加组件可见的更改。</target>
        </trans-unit>
        <trans-unit id="a72e9d9932fe774a0515db2c6aaea624c04effad" translate="yes" xml:space="preserve">
          <source>Unless for reasons discussed in &lt;a href=&quot;#n_api_object_lifetime_management&quot;&gt;Object Lifetime Management&lt;/a&gt;, creating a handle and/or callback scope inside a &lt;code&gt;napi_callback&lt;/code&gt; is not necessary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0edc9ad8deb45d66b9a4ce8ca1ee4d65518cb9fc" translate="yes" xml:space="preserve">
          <source>Unless for reasons discussed in &lt;a href=&quot;#n_api_object_lifetime_management&quot;&gt;Object Lifetime Management&lt;/a&gt;, creating a handle and/or callback scope inside the function body is not necessary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2172d325e09251aae77841665a275f9f12e96c85" translate="yes" xml:space="preserve">
          <source>Unless otherwise scoped within blocks or functions, variables declared either implicitly or using the &lt;code&gt;const&lt;/code&gt;, &lt;code&gt;let&lt;/code&gt;, or &lt;code&gt;var&lt;/code&gt; keywords are declared at the global scope.</source>
          <target state="translated">除非以其他方式限制在块或函数内，否则将在全局范围内声明隐式声明或使用 &lt;code&gt;const&lt;/code&gt; ， &lt;code&gt;let&lt;/code&gt; 或 &lt;code&gt;var&lt;/code&gt; 关键字声明的变量。</target>
        </trans-unit>
        <trans-unit id="f2b9cb312ebc7377e0acc37ab64028e168b79e3b" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;#n_api_napi_add_env_cleanup_hook&quot;&gt;&lt;code&gt;napi_add_env_cleanup_hook&lt;/code&gt;&lt;/a&gt;, the hook is allowed to be asynchronous.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="738279034066201991d76c70c2c3ad5d7acd5fb5" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;#process_process_hrtime_time&quot;&gt;&lt;code&gt;process.hrtime()&lt;/code&gt;&lt;/a&gt;, it does not support an additional &lt;code&gt;time&lt;/code&gt; argument since the difference can just be computed directly by subtraction of the two &lt;code&gt;bigint&lt;/code&gt;s.</source>
          <target state="translated">与&lt;a href=&quot;#process_process_hrtime_time&quot;&gt; &lt;code&gt;process.hrtime()&lt;/code&gt; &lt;/a&gt;不同，它不支持其他 &lt;code&gt;time&lt;/code&gt; 参数，因为可以通过直接减去两个 &lt;code&gt;bigint&lt;/code&gt; 来直接计算差异。</target>
        </trans-unit>
        <trans-unit id="a7d31182b596602990e6a1b35091501ddc7cd0bd" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;#stream_readable_push_chunk_encoding&quot;&gt;&lt;code&gt;stream.push(chunk)&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;stream.unshift(chunk)&lt;/code&gt; will not end the reading process by resetting the internal reading state of the stream. This can cause unexpected results if &lt;code&gt;readable.unshift()&lt;/code&gt; is called during a read (i.e. from within a &lt;a href=&quot;#stream_readable_read_size_1&quot;&gt;&lt;code&gt;stream._read()&lt;/code&gt;&lt;/a&gt; implementation on a custom stream). Following the call to &lt;code&gt;readable.unshift()&lt;/code&gt; with an immediate &lt;a href=&quot;#stream_readable_push_chunk_encoding&quot;&gt;&lt;code&gt;stream.push('')&lt;/code&gt;&lt;/a&gt; will reset the reading state appropriately, however it is best to simply avoid calling &lt;code&gt;readable.unshift()&lt;/code&gt; while in the process of performing a read.</source>
          <target state="translated">与&lt;a href=&quot;#stream_readable_push_chunk_encoding&quot;&gt; &lt;code&gt;stream.push(chunk)&lt;/code&gt; &lt;/a&gt;不同， &lt;code&gt;stream.unshift(chunk)&lt;/code&gt; 不会通过重置流的内部读取状态来结束读取过程。如果在读取过程中（即从自定义流的&lt;a href=&quot;#stream_readable_read_size_1&quot;&gt; &lt;code&gt;stream._read()&lt;/code&gt; &lt;/a&gt;实现内部 &lt;code&gt;readable.unshift()&lt;/code&gt; 调用read.unshift（），则可能导致意外结果。继调用 &lt;code&gt;readable.unshift()&lt;/code&gt; 有立即&lt;a href=&quot;#stream_readable_push_chunk_encoding&quot;&gt; &lt;code&gt;stream.push('')&lt;/code&gt; &lt;/a&gt;能正确地复位读取状态，但它是最简单地避免调用 &lt;code&gt;readable.unshift()&lt;/code&gt; 在执行读取的过程，同时。</target>
        </trans-unit>
        <trans-unit id="ffbea780c221ab67ef22ff2efead15150ae9d4ad" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;querystring&quot;&gt;&lt;code&gt;querystring&lt;/code&gt;&lt;/a&gt; module, duplicate keys in the form of array values are not allowed. Arrays are stringified using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/toString&quot;&gt;&lt;code&gt;array.toString()&lt;/code&gt;&lt;/a&gt;, which simply joins all array elements with commas.</source>
          <target state="translated">与&lt;a href=&quot;querystring&quot;&gt; &lt;code&gt;querystring&lt;/code&gt; &lt;/a&gt;模块不同，不允许使用数组值形式的重复键。数组使用&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/toString&quot;&gt; &lt;code&gt;array.toString()&lt;/code&gt; &lt;/a&gt;进行字符串化，该数组仅将所有数组元素都用逗号连接。</target>
        </trans-unit>
        <trans-unit id="cf1a2bd2bcaee5665438d46897ea1c835ab3373a" translate="yes" xml:space="preserve">
          <source>Unlike &lt;code&gt;EventEmitter&lt;/code&gt;, any given &lt;code&gt;listener&lt;/code&gt; can be registered at most once per event &lt;code&gt;type&lt;/code&gt;. Attempts to register a &lt;code&gt;listener&lt;/code&gt; multiple times are ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93286044bb9cc680edddcad0e702f7630a603e80" translate="yes" xml:space="preserve">
          <source>Unlike &lt;code&gt;child_process&lt;/code&gt; or &lt;code&gt;cluster&lt;/code&gt;, &lt;code&gt;worker_threads&lt;/code&gt; can share memory. They do so by transferring &lt;code&gt;ArrayBuffer&lt;/code&gt; instances or sharing &lt;code&gt;SharedArrayBuffer&lt;/code&gt; instances.</source>
          <target state="translated">与 &lt;code&gt;child_process&lt;/code&gt; 或 &lt;code&gt;cluster&lt;/code&gt; 不同， &lt;code&gt;worker_threads&lt;/code&gt; 可以共享内存。它们通过传输 &lt;code&gt;ArrayBuffer&lt;/code&gt; 实例或共享 &lt;code&gt;SharedArrayBuffer&lt;/code&gt; 实例来实现。</target>
        </trans-unit>
        <trans-unit id="786c293ea8a2a263e26d57c1c94d19f2b5a49165" translate="yes" xml:space="preserve">
          <source>Unlike &lt;code&gt;eval&lt;/code&gt;, this function does not allow the script to access the current lexical scope, and therefore also does not allow to access the &lt;a href=&quot;modules#modules_the_module_scope&quot;&gt;module scope&lt;/a&gt;, meaning that pseudo-globals such as &lt;code&gt;require&lt;/code&gt; will not be available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b31b651c0bd301bf713d75fd4cc4cb768e5aecc6" translate="yes" xml:space="preserve">
          <source>Unlike &lt;code&gt;vm.Script&lt;/code&gt; however, every &lt;code&gt;vm.Module&lt;/code&gt; object is bound to a context from its creation. Operations on &lt;code&gt;vm.Module&lt;/code&gt; objects are intrinsically asynchronous, in contrast with the synchronous nature of &lt;code&gt;vm.Script&lt;/code&gt; objects. The use of 'async' functions can help with manipulating &lt;code&gt;vm.Module&lt;/code&gt; objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc66008fe7449b513d18dc2e492a0bd73292fdec" translate="yes" xml:space="preserve">
          <source>Unlike &lt;code&gt;vm.Script&lt;/code&gt; however, every &lt;code&gt;vm.SourceTextModule&lt;/code&gt; object is bound to a context from its creation. Operations on &lt;code&gt;vm.SourceTextModule&lt;/code&gt; objects are intrinsically asynchronous, in contrast with the synchronous nature of &lt;code&gt;vm.Script&lt;/code&gt; objects. With the help of async functions, however, manipulating &lt;code&gt;vm.SourceTextModule&lt;/code&gt; objects is fairly straightforward.</source>
          <target state="translated">但是，与 &lt;code&gt;vm.Script&lt;/code&gt; 不同，每个 &lt;code&gt;vm.SourceTextModule&lt;/code&gt; 对象都从其创建时绑定到上下文。上的操作 &lt;code&gt;vm.SourceTextModule&lt;/code&gt; 对象本质上是异步的，在与的同步特性的对比度 &lt;code&gt;vm.Script&lt;/code&gt; 对象。但是，借助异步功能，操作 &lt;code&gt;vm.SourceTextModule&lt;/code&gt; 对象非常简单。</target>
        </trans-unit>
        <trans-unit id="0599776b2acdfbdb39a04e0dc3671e103e9a70bf" translate="yes" xml:space="preserve">
          <source>Unlike modules written in JavaScript, developing and deploying Node.js native addons using N-API requires an additional set of tools. Besides the basic tools required to develop for Node.js, the native addon developer requires a toolchain that can compile C and C++ code into a binary. In addition, depending upon how the native addon is deployed, the &lt;em&gt;user&lt;/em&gt; of the native addon will also need to have a C/C++ toolchain installed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c5877252fff27f076a79408216302ad7142ca78" translate="yes" xml:space="preserve">
          <source>Unlike other methods operating on &lt;code&gt;Module&lt;/code&gt;, this function completes synchronously and returns nothing.</source>
          <target state="translated">与在 &lt;code&gt;Module&lt;/code&gt; 上操作的其他方法不同，此函数同步完成，并且不返回任何内容。</target>
        </trans-unit>
        <trans-unit id="d88dff4d6b12aaa62861c546611f134585732b86" translate="yes" xml:space="preserve">
          <source>Unlike the 16 kb default &lt;code&gt;highWaterMark&lt;/code&gt; for a readable stream, the stream returned by this method has a default &lt;code&gt;highWaterMark&lt;/code&gt; of 64 kb.</source>
          <target state="translated">与可读流的16 kb默认 &lt;code&gt;highWaterMark&lt;/code&gt; 不同，此方法返回的流的默认 &lt;code&gt;highWaterMark&lt;/code&gt; 为64 kb。</target>
        </trans-unit>
        <trans-unit id="c89fbd3cb8564198493b0872bc897f53689f1cdc" translate="yes" xml:space="preserve">
          <source>Unlike the &lt;a href=&quot;http://man7.org/linux/man-pages/man2/fork.2.html&quot;&gt;&lt;code&gt;fork(2)&lt;/code&gt;&lt;/a&gt; POSIX system call, &lt;code&gt;child_process.fork()&lt;/code&gt; does not clone the current process.</source>
          <target state="translated">与&lt;a href=&quot;http://man7.org/linux/man-pages/man2/fork.2.html&quot;&gt; &lt;code&gt;fork(2)&lt;/code&gt; &lt;/a&gt; POSIX系统调用不同， &lt;code&gt;child_process.fork()&lt;/code&gt; 不会克隆当前进程。</target>
        </trans-unit>
        <trans-unit id="14ecf150019ebe6bc4270fdded6d714de98dea3b" translate="yes" xml:space="preserve">
          <source>Unlike the &lt;a href=&quot;http://man7.org/linux/man-pages/man3/exec.3.html&quot;&gt;&lt;code&gt;exec(3)&lt;/code&gt;&lt;/a&gt; POSIX system call, &lt;code&gt;child_process.exec()&lt;/code&gt; does not replace the existing process and uses a shell to execute the command.</source>
          <target state="translated">与&lt;a href=&quot;http://man7.org/linux/man-pages/man3/exec.3.html&quot;&gt; &lt;code&gt;exec(3)&lt;/code&gt; &lt;/a&gt; POSIX系统调用不同， &lt;code&gt;child_process.exec()&lt;/code&gt; 不会替换现有进程，而是使用Shell执行命令。</target>
        </trans-unit>
        <trans-unit id="ac552eba22b166975a88df1dd5f700d09b1fc6fd" translate="yes" xml:space="preserve">
          <source>Unlike the &lt;code&gt;&quot;exports&quot;&lt;/code&gt; field, the &lt;code&gt;&quot;imports&quot;&lt;/code&gt; field permits mapping to external packages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8550f7544a3f4ee9abeb8cba1ce111534a3ad502" translate="yes" xml:space="preserve">
          <source>Unlike the &lt;code&gt;https&lt;/code&gt; API, &lt;code&gt;tls.connect()&lt;/code&gt; does not enable the SNI (Server Name Indication) extension by default, which may cause some servers to return an incorrect certificate or reject the connection altogether. To enable SNI, set the &lt;code&gt;servername&lt;/code&gt; option in addition to &lt;code&gt;host&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6945f22f96a4e53b030942319ed3d31db4f4e41" translate="yes" xml:space="preserve">
          <source>Unlike the &lt;code&gt;net.Socket&lt;/code&gt; and &lt;code&gt;tls.TLSSocket&lt;/code&gt;, a &lt;code&gt;QuicSocket&lt;/code&gt; instance cannot be directly used by user code at the JavaScript level to send or receive data over the network.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a651eaa44463d71d0ba17228140a40f73da19e4" translate="yes" xml:space="preserve">
          <source>Unlike the &lt;code&gt;request&lt;/code&gt; object, if the response closes prematurely, the &lt;code&gt;response&lt;/code&gt; object does not emit an &lt;code&gt;'error'&lt;/code&gt; event but instead emits the &lt;code&gt;'aborted'&lt;/code&gt; event.</source>
          <target state="translated">与 &lt;code&gt;request&lt;/code&gt; 对象不同，如果响应过早关闭，则 &lt;code&gt;response&lt;/code&gt; 对象不会发出 &lt;code&gt;'error'&lt;/code&gt; 事件，而是发出 &lt;code&gt;'aborted'&lt;/code&gt; 事件。</target>
        </trans-unit>
        <trans-unit id="245fd6876839504d24af1a18605a9594e7b65485" translate="yes" xml:space="preserve">
          <source>Unlike the callback-based API (&lt;code&gt;fs.fstat()&lt;/code&gt;, &lt;code&gt;fs.fchown()&lt;/code&gt;, &lt;code&gt;fs.fchmod()&lt;/code&gt;, and so on), a numeric file descriptor is not used by the promise-based API. Instead, the promise-based API uses the &lt;code&gt;FileHandle&lt;/code&gt; class in order to help avoid accidental leaking of unclosed file descriptors after a &lt;code&gt;Promise&lt;/code&gt; is resolved or rejected.</source>
          <target state="translated">与基于回调的API（ &lt;code&gt;fs.fstat()&lt;/code&gt; ， &lt;code&gt;fs.fchown()&lt;/code&gt; ， &lt;code&gt;fs.fchmod()&lt;/code&gt; 等）不同，基于promise的API不会使用数字文件描述符。相反，基于承诺的API使用 &lt;code&gt;FileHandle&lt;/code&gt; 类，以帮助避免在解决或拒绝 &lt;code&gt;Promise&lt;/code&gt; 后意外泄漏未关闭的文件描述符。</target>
        </trans-unit>
        <trans-unit id="aec5e222fb21197428b2bc12e8d85d03d3d352d7" translate="yes" xml:space="preserve">
          <source>Unregisters &lt;code&gt;fun&lt;/code&gt; as a function to be run with the &lt;code&gt;arg&lt;/code&gt; parameter once the current Node.js environment exits. Both the argument and the function value need to be exact matches.</source>
          <target state="translated">当前Node.js环境退出后，将 &lt;code&gt;fun&lt;/code&gt; 取消注册为要使用 &lt;code&gt;arg&lt;/code&gt; 参数运行的函数。参数和函数值都必须完全匹配。</target>
        </trans-unit>
        <trans-unit id="d18fe6d2e5688021879f7a873899d3115ce6e749" translate="yes" xml:space="preserve">
          <source>Unregisters the cleanup hook corresponding to &lt;code&gt;remove_handle&lt;/code&gt;. This will prevent the hook from being executed, unless it has already started executing. This must be called on any &lt;code&gt;napi_async_cleanup_hook_handle&lt;/code&gt; value obtained from &lt;a href=&quot;#n_api_napi_add_async_cleanup_hook&quot;&gt;&lt;code&gt;napi_add_async_cleanup_hook&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65c4b2669e9c330ac9f73450acc1e9a90e0c45de" translate="yes" xml:space="preserve">
          <source>Updates the &lt;code&gt;Hmac&lt;/code&gt; content with the given &lt;code&gt;data&lt;/code&gt;, the encoding of which is given in &lt;code&gt;inputEncoding&lt;/code&gt;. If &lt;code&gt;encoding&lt;/code&gt; is not provided, and the &lt;code&gt;data&lt;/code&gt; is a string, an encoding of &lt;code&gt;'utf8'&lt;/code&gt; is enforced. If &lt;code&gt;data&lt;/code&gt; is a &lt;a href=&quot;buffer&quot;&gt;&lt;code&gt;Buffer&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;TypedArray&lt;/code&gt;, or &lt;code&gt;DataView&lt;/code&gt;, then &lt;code&gt;inputEncoding&lt;/code&gt; is ignored.</source>
          <target state="translated">使用给定的 &lt;code&gt;data&lt;/code&gt; 更新 &lt;code&gt;Hmac&lt;/code&gt; 内容，该数据的编码在 &lt;code&gt;inputEncoding&lt;/code&gt; 中给出。如果未提供 &lt;code&gt;encoding&lt;/code&gt; ，并且 &lt;code&gt;data&lt;/code&gt; 是字符串，则将强制执行 &lt;code&gt;'utf8'&lt;/code&gt; 编码。如果 &lt;code&gt;data&lt;/code&gt; 是&lt;a href=&quot;buffer&quot;&gt; &lt;code&gt;Buffer&lt;/code&gt; &lt;/a&gt;， &lt;code&gt;TypedArray&lt;/code&gt; 或 &lt;code&gt;DataView&lt;/code&gt; ，则 &lt;code&gt;inputEncoding&lt;/code&gt; 被忽略。</target>
        </trans-unit>
        <trans-unit id="93605dc813a8e916582ddbffd733db79b79cce3c" translate="yes" xml:space="preserve">
          <source>Updates the &lt;code&gt;Sign&lt;/code&gt; content with the given &lt;code&gt;data&lt;/code&gt;, the encoding of which is given in &lt;code&gt;inputEncoding&lt;/code&gt;. If &lt;code&gt;encoding&lt;/code&gt; is not provided, and the &lt;code&gt;data&lt;/code&gt; is a string, an encoding of &lt;code&gt;'utf8'&lt;/code&gt; is enforced. If &lt;code&gt;data&lt;/code&gt; is a &lt;a href=&quot;buffer&quot;&gt;&lt;code&gt;Buffer&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;TypedArray&lt;/code&gt;, or &lt;code&gt;DataView&lt;/code&gt;, then &lt;code&gt;inputEncoding&lt;/code&gt; is ignored.</source>
          <target state="translated">使用给定的 &lt;code&gt;data&lt;/code&gt; 更新 &lt;code&gt;Sign&lt;/code&gt; 内容，该数据的编码在 &lt;code&gt;inputEncoding&lt;/code&gt; 中给出。如果未提供 &lt;code&gt;encoding&lt;/code&gt; ，并且 &lt;code&gt;data&lt;/code&gt; 是字符串，则将强制执行 &lt;code&gt;'utf8'&lt;/code&gt; 编码。如果 &lt;code&gt;data&lt;/code&gt; 是&lt;a href=&quot;buffer&quot;&gt; &lt;code&gt;Buffer&lt;/code&gt; &lt;/a&gt;， &lt;code&gt;TypedArray&lt;/code&gt; 或 &lt;code&gt;DataView&lt;/code&gt; ，则 &lt;code&gt;inputEncoding&lt;/code&gt; 被忽略。</target>
        </trans-unit>
        <trans-unit id="a2260478143ea14e9583ad4e3b793657f13996f1" translate="yes" xml:space="preserve">
          <source>Updates the &lt;code&gt;Verify&lt;/code&gt; content with the given &lt;code&gt;data&lt;/code&gt;, the encoding of which is given in &lt;code&gt;inputEncoding&lt;/code&gt;. If &lt;code&gt;inputEncoding&lt;/code&gt; is not provided, and the &lt;code&gt;data&lt;/code&gt; is a string, an encoding of &lt;code&gt;'utf8'&lt;/code&gt; is enforced. If &lt;code&gt;data&lt;/code&gt; is a &lt;a href=&quot;buffer&quot;&gt;&lt;code&gt;Buffer&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;TypedArray&lt;/code&gt;, or &lt;code&gt;DataView&lt;/code&gt;, then &lt;code&gt;inputEncoding&lt;/code&gt; is ignored.</source>
          <target state="translated">使用给定 &lt;code&gt;data&lt;/code&gt; 更新 &lt;code&gt;Verify&lt;/code&gt; 内容，该数据的编码在 &lt;code&gt;inputEncoding&lt;/code&gt; 中给出。如果未提供 &lt;code&gt;inputEncoding&lt;/code&gt; ，并且 &lt;code&gt;data&lt;/code&gt; 为字符串，则将强制使用 &lt;code&gt;'utf8'&lt;/code&gt; 编码。如果 &lt;code&gt;data&lt;/code&gt; 是&lt;a href=&quot;buffer&quot;&gt; &lt;code&gt;Buffer&lt;/code&gt; &lt;/a&gt;， &lt;code&gt;TypedArray&lt;/code&gt; 或 &lt;code&gt;DataView&lt;/code&gt; ，则 &lt;code&gt;inputEncoding&lt;/code&gt; 被忽略。</target>
        </trans-unit>
        <trans-unit id="77d2af3d6057a23de355899c59dd7f7a41c92d30" translate="yes" xml:space="preserve">
          <source>Updates the cipher with &lt;code&gt;data&lt;/code&gt;. If the &lt;code&gt;inputEncoding&lt;/code&gt; argument is given, the &lt;code&gt;data&lt;/code&gt; argument is a string using the specified encoding. If the &lt;code&gt;inputEncoding&lt;/code&gt; argument is not given, &lt;code&gt;data&lt;/code&gt; must be a &lt;a href=&quot;buffer&quot;&gt;&lt;code&gt;Buffer&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;TypedArray&lt;/code&gt;, or &lt;code&gt;DataView&lt;/code&gt;. If &lt;code&gt;data&lt;/code&gt; is a &lt;a href=&quot;buffer&quot;&gt;&lt;code&gt;Buffer&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;TypedArray&lt;/code&gt;, or &lt;code&gt;DataView&lt;/code&gt;, then &lt;code&gt;inputEncoding&lt;/code&gt; is ignored.</source>
          <target state="translated">用 &lt;code&gt;data&lt;/code&gt; 更新密码。如果指定了 &lt;code&gt;inputEncoding&lt;/code&gt; 参数，则 &lt;code&gt;data&lt;/code&gt; 参数是使用指定编码的字符串。如果未提供 &lt;code&gt;inputEncoding&lt;/code&gt; 参数，则 &lt;code&gt;data&lt;/code&gt; 必须是&lt;a href=&quot;buffer&quot;&gt; &lt;code&gt;Buffer&lt;/code&gt; &lt;/a&gt;， &lt;code&gt;TypedArray&lt;/code&gt; 或 &lt;code&gt;DataView&lt;/code&gt; 。如果 &lt;code&gt;data&lt;/code&gt; 是&lt;a href=&quot;buffer&quot;&gt; &lt;code&gt;Buffer&lt;/code&gt; &lt;/a&gt;， &lt;code&gt;TypedArray&lt;/code&gt; 或 &lt;code&gt;DataView&lt;/code&gt; ，则 &lt;code&gt;inputEncoding&lt;/code&gt; 被忽略。</target>
        </trans-unit>
        <trans-unit id="db6770b018c405d1e79d9580f71bd8cf8282662f" translate="yes" xml:space="preserve">
          <source>Updates the current local settings for this &lt;code&gt;Http2Session&lt;/code&gt; and sends a new &lt;code&gt;SETTINGS&lt;/code&gt; frame to the connected HTTP/2 peer.</source>
          <target state="translated">更新此 &lt;code&gt;Http2Session&lt;/code&gt; 的当前本地设置，并将新的 &lt;code&gt;SETTINGS&lt;/code&gt; 帧发送到连接的HTTP / 2对等方。</target>
        </trans-unit>
        <trans-unit id="957c600a690a3a36412946efac93320156d3eb42" translate="yes" xml:space="preserve">
          <source>Updates the decipher with &lt;code&gt;data&lt;/code&gt;. If the &lt;code&gt;inputEncoding&lt;/code&gt; argument is given, the &lt;code&gt;data&lt;/code&gt; argument is a string using the specified encoding. If the &lt;code&gt;inputEncoding&lt;/code&gt; argument is not given, &lt;code&gt;data&lt;/code&gt; must be a &lt;a href=&quot;buffer&quot;&gt;&lt;code&gt;Buffer&lt;/code&gt;&lt;/a&gt;. If &lt;code&gt;data&lt;/code&gt; is a &lt;a href=&quot;buffer&quot;&gt;&lt;code&gt;Buffer&lt;/code&gt;&lt;/a&gt; then &lt;code&gt;inputEncoding&lt;/code&gt; is ignored.</source>
          <target state="translated">用 &lt;code&gt;data&lt;/code&gt; 更新解密。如果指定了 &lt;code&gt;inputEncoding&lt;/code&gt; 参数，则 &lt;code&gt;data&lt;/code&gt; 参数是使用指定编码的字符串。如果未提供 &lt;code&gt;inputEncoding&lt;/code&gt; 参数，则 &lt;code&gt;data&lt;/code&gt; 必须是&lt;a href=&quot;buffer&quot;&gt; &lt;code&gt;Buffer&lt;/code&gt; &lt;/a&gt;。如果 &lt;code&gt;data&lt;/code&gt; 是&lt;a href=&quot;buffer&quot;&gt; &lt;code&gt;Buffer&lt;/code&gt; ,&lt;/a&gt;则 &lt;code&gt;inputEncoding&lt;/code&gt; 被忽略。</target>
        </trans-unit>
        <trans-unit id="5ed45c49beca4ce2a38119d874096a97e38115cc" translate="yes" xml:space="preserve">
          <source>Updates the hash content with the given &lt;code&gt;data&lt;/code&gt;, the encoding of which is given in &lt;code&gt;inputEncoding&lt;/code&gt;. If &lt;code&gt;encoding&lt;/code&gt; is not provided, and the &lt;code&gt;data&lt;/code&gt; is a string, an encoding of &lt;code&gt;'utf8'&lt;/code&gt; is enforced. If &lt;code&gt;data&lt;/code&gt; is a &lt;a href=&quot;buffer&quot;&gt;&lt;code&gt;Buffer&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;TypedArray&lt;/code&gt;, or &lt;code&gt;DataView&lt;/code&gt;, then &lt;code&gt;inputEncoding&lt;/code&gt; is ignored.</source>
          <target state="translated">使用给定的 &lt;code&gt;data&lt;/code&gt; 更新哈希内容，该数据的编码在 &lt;code&gt;inputEncoding&lt;/code&gt; 中给出。如果未提供 &lt;code&gt;encoding&lt;/code&gt; ，并且 &lt;code&gt;data&lt;/code&gt; 是字符串，则将强制执行 &lt;code&gt;'utf8'&lt;/code&gt; 编码。如果 &lt;code&gt;data&lt;/code&gt; 是&lt;a href=&quot;buffer&quot;&gt; &lt;code&gt;Buffer&lt;/code&gt; &lt;/a&gt;， &lt;code&gt;TypedArray&lt;/code&gt; 或 &lt;code&gt;DataView&lt;/code&gt; ，则 &lt;code&gt;inputEncoding&lt;/code&gt; 被忽略。</target>
        </trans-unit>
        <trans-unit id="7d2950e7ca60835246638412bbc7c834bf90e01b" translate="yes" xml:space="preserve">
          <source>Updates the priority for this &lt;code&gt;Http2Stream&lt;/code&gt; instance.</source>
          <target state="translated">更新此 &lt;code&gt;Http2Stream&lt;/code&gt; 实例的优先级。</target>
        </trans-unit>
        <trans-unit id="da0f7a31471fb4f5f448dffafa53fb94e1f6c0de" translate="yes" xml:space="preserve">
          <source>Uploading precompiled binaries</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6b150488cf43f5c486b4617e1a3281d94130a34" translate="yes" xml:space="preserve">
          <source>Upon assigning a value to the port, the value will first be converted to a string using &lt;code&gt;.toString()&lt;/code&gt;.</source>
          <target state="translated">在为端口分配值后，将首先使用 &lt;code&gt;.toString()&lt;/code&gt; 将值转换为字符串。</target>
        </trans-unit>
        <trans-unit id="f8d1386e91a02cb0c85bee48bbf4edcff35a05d0" translate="yes" xml:space="preserve">
          <source>Upon creation of a &lt;code&gt;napi_threadsafe_function&lt;/code&gt; a &lt;code&gt;napi_finalize&lt;/code&gt; callback can be provided. This callback will be invoked on the main thread when the thread-safe function is about to be destroyed. It receives the context and the finalize data given during construction, and provides an opportunity for cleaning up after the threads e.g. by calling &lt;code&gt;uv_thread_join()&lt;/code&gt;. &lt;strong&gt;Aside from the main loop thread, no threads should be using the thread-safe function after the finalize callback completes.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a21b6b47f79ea7bf24d3448220aa0114efedd561" translate="yes" xml:space="preserve">
          <source>Upon creation of a &lt;code&gt;napi_threadsafe_function&lt;/code&gt; a &lt;code&gt;napi_finalize&lt;/code&gt; callback can be provided. This callback will be invoked on the main thread when the thread-safe function is about to be destroyed. It receives the context and the finalize data given during construction, and provides an opportunity for cleaning up after the threads e.g. by calling &lt;code&gt;uv_thread_join()&lt;/code&gt;. &lt;strong&gt;It is important that, aside from the main loop thread, there be no threads left using the thread-safe function after the finalize callback completes.&lt;/strong&gt;</source>
          <target state="translated">在创建的 &lt;code&gt;napi_threadsafe_function&lt;/code&gt; 一个 &lt;code&gt;napi_finalize&lt;/code&gt; 可提供的回调。当线程安全功能将要销毁时，将在主线程上调用此回调。它接收构造期间给出的上下文和完成数据，并提供了在线程执行后清理的机会，例如通过调用 &lt;code&gt;uv_thread_join()&lt;/code&gt; 。&lt;strong&gt;重要的是，除了主循环线程外，在完成finalize回调后，不要使用线程安全功能留下任何线程。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b0ce53004853a0d3cc308cfeea91d8ad9ccd6880" translate="yes" xml:space="preserve">
          <source>Upon success, the &lt;code&gt;Promise&lt;/code&gt; is resolved without arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">Usage</target>
        </trans-unit>
        <trans-unit id="2de39f1fb97e8b9fad2a13c376d5983dda0775fd" translate="yes" xml:space="preserve">
          <source>Usage &amp;amp; Example</source>
          <target state="translated">用法与范例</target>
        </trans-unit>
        <trans-unit id="e52c8372eec3736296f93f87fe2977417bbb2721" translate="yes" xml:space="preserve">
          <source>Usage and example</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d36ee1550e836b658bce06b4f1d49c2dec79550a" translate="yes" xml:space="preserve">
          <source>Usage of &lt;code&gt;ECDH&lt;/code&gt; with non-dynamically generated key pairs has been simplified. Now, &lt;a href=&quot;#crypto_ecdh_setprivatekey_privatekey_encoding&quot;&gt;&lt;code&gt;ecdh.setPrivateKey()&lt;/code&gt;&lt;/a&gt; can be called with a preselected private key and the associated public point (key) will be computed and stored in the object. This allows code to only store and provide the private part of the EC key pair. &lt;a href=&quot;#crypto_ecdh_setprivatekey_privatekey_encoding&quot;&gt;&lt;code&gt;ecdh.setPrivateKey()&lt;/code&gt;&lt;/a&gt; now also validates that the private key is valid for the selected curve.</source>
          <target state="translated">的使用 &lt;code&gt;ECDH&lt;/code&gt; 与非动态生成的密钥对已被简化。现在，可以使用预选的私钥调用&lt;a href=&quot;#crypto_ecdh_setprivatekey_privatekey_encoding&quot;&gt; &lt;code&gt;ecdh.setPrivateKey()&lt;/code&gt; &lt;/a&gt;，并将计算关联的公共点（密钥）并将其存储在对象中。这允许代码仅存储和提供EC密钥对的私有部分。&lt;a href=&quot;#crypto_ecdh_setprivatekey_privatekey_encoding&quot;&gt; &lt;code&gt;ecdh.setPrivateKey()&lt;/code&gt; &lt;/a&gt;现在也可以验证私钥对所选曲线是否有效。</target>
        </trans-unit>
        <trans-unit id="5ff118bed7c719c614a84434b5439be16bf71d2c" translate="yes" xml:space="preserve">
          <source>Usage of &lt;code&gt;util.inherits()&lt;/code&gt; is discouraged. Please use the ES6 &lt;code&gt;class&lt;/code&gt; and &lt;code&gt;extends&lt;/code&gt; keywords to get language level inheritance support. Also note that the two styles are &lt;a href=&quot;https://github.com/nodejs/node/issues/4179&quot;&gt;semantically incompatible&lt;/a&gt;.</source>
          <target state="translated">不鼓励使用 &lt;code&gt;util.inherits()&lt;/code&gt; 。请使用ES6 &lt;code&gt;class&lt;/code&gt; 并 &lt;code&gt;extends&lt;/code&gt; 关键字以获得语言级别继承支持。另请注意，这两种样式在&lt;a href=&quot;https://github.com/nodejs/node/issues/4179&quot;&gt;语义上是不兼容的&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a7631402d6fe2c428c59f2ef506230c3fbbc9e7d" translate="yes" xml:space="preserve">
          <source>Usage with &lt;code&gt;async/await&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="861a0e430ffac5e4ae6e11b7a947f2c32d388cf4" translate="yes" xml:space="preserve">
          <source>Usage:</source>
          <target state="translated">Usage:</target>
        </trans-unit>
        <trans-unit id="eae67d2af37c578abfdf9b05166c5445461a54fd" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;#crypto_crypto_getcurves&quot;&gt;&lt;code&gt;crypto.getCurves()&lt;/code&gt;&lt;/a&gt; to obtain a list of available curve names. On recent OpenSSL releases, &lt;code&gt;openssl ecparam -list_curves&lt;/code&gt; will also display the name and description of each available elliptic curve.</source>
          <target state="translated">使用&lt;a href=&quot;#crypto_crypto_getcurves&quot;&gt; &lt;code&gt;crypto.getCurves()&lt;/code&gt; &lt;/a&gt;获得可用曲线名称的列表。在最新的OpenSSL版本中， &lt;code&gt;openssl ecparam -list_curves&lt;/code&gt; 还将显示每个可用椭圆曲线的名称和描述。</target>
        </trans-unit>
        <trans-unit id="765064bc0f2ebbee5fd48d238b26225a203b8acc" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;async_hooks#async_hooks_asyncresource_runinasyncscope_fn_thisarg_args&quot;&gt;&lt;code&gt;asyncResource.runInAsyncScope()&lt;/code&gt;&lt;/a&gt; API instead which provides a much safer, and more convenient, alternative. See &lt;a href=&quot;https://github.com/nodejs/node/pull/18513&quot;&gt;https://github.com/nodejs/node/pull/18513&lt;/a&gt;.</source>
          <target state="translated">请改用&lt;a href=&quot;async_hooks#async_hooks_asyncresource_runinasyncscope_fn_thisarg_args&quot;&gt; &lt;code&gt;asyncResource.runInAsyncScope()&lt;/code&gt; &lt;/a&gt; API，它提供了更安全，更方便的替代方法。参见&lt;a href=&quot;https://github.com/nodejs/node/pull/18513&quot;&gt;https://github.com/nodejs/node/pull/18513&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="49f7b175b350d863eddd6c45e7bde6196f5a3dae" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;http#http_request_destroy_error&quot;&gt;&lt;code&gt;request.destroy()&lt;/code&gt;&lt;/a&gt; instead of &lt;a href=&quot;http#http_request_abort&quot;&gt;&lt;code&gt;request.abort()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6154b148a1c536c520dcd143957f4ee42fa11bca" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;http#http_response_writablefinished&quot;&gt;&lt;code&gt;response.writableFinished&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;http#http_response_writableended&quot;&gt;&lt;code&gt;response.writableEnded&lt;/code&gt;&lt;/a&gt; accordingly instead to avoid the ambigiuty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a30ec81f674dcb2bdd37f247d94a36bf6b4dc08" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;https://github.com/WebAssembly/wabt&quot;&gt;wabt&lt;/a&gt; to compile &lt;code&gt;.wat&lt;/code&gt; to &lt;code&gt;.wasm&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21fffe7297300dbe9e8fff2c0d9e6bf6dadca3c2" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;Content-Length&lt;/code&gt; or &lt;code&gt;Transfer-Encoding: chunked&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0002c56173cba9691148346f5ff59f5e6272f3f" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;cwd&lt;/code&gt; to specify the working directory from which the process is spawned. If not given, the default is to inherit the current working directory.</source>
          <target state="translated">使用 &lt;code&gt;cwd&lt;/code&gt; 指定从中产生该进程的工作目录。如果未给出，则默认值为继承当前工作目录。</target>
        </trans-unit>
        <trans-unit id="c05a3240b8dcb6543102bd118217246c78db60fb" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;cwd&lt;/code&gt; to specify the working directory from which the process is spawned. If not given, the default is to inherit the current working directory. If given, but the path does not exist, the child process emits an &lt;code&gt;ENOENT&lt;/code&gt; error and exits immediately. &lt;code&gt;ENOENT&lt;/code&gt; is also emitted when the command does not exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f76aedfcb8be71f942f01d87d5c0635892414e98" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;delete&lt;/code&gt; to delete a property from &lt;code&gt;process.env&lt;/code&gt;.</source>
          <target state="translated">使用 &lt;code&gt;delete&lt;/code&gt; 从 &lt;code&gt;process.env&lt;/code&gt; 中删除属性。</target>
        </trans-unit>
        <trans-unit id="bf939c90dc4dd9f69fea1af3d6551d592973f347" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;env&lt;/code&gt; to specify environment variables that will be visible to the new process, the default is &lt;a href=&quot;process#process_process_env&quot;&gt;&lt;code&gt;process.env&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">使用 &lt;code&gt;env&lt;/code&gt; 指定对新进程可见的环境变量，默认值为&lt;a href=&quot;process#process_process_env&quot;&gt; &lt;code&gt;process.env&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bdf8f57531e78c20b41a30f579a4c55918a56c3e" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;nc&lt;/code&gt; to connect to a Unix domain socket server:</source>
          <target state="translated">使用 &lt;code&gt;nc&lt;/code&gt; 连接到Unix域套接字服务器：</target>
        </trans-unit>
        <trans-unit id="62e20e3f8690fbd92499a0d02dda8d74f948e711" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;require('crypto').webcrypto&lt;/code&gt; to access this module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="356edf58e99c3593deffa78d682258b2fdf50801" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;require('crypto')&lt;/code&gt; to access this module.</source>
          <target state="translated">使用 &lt;code&gt;require('crypto')&lt;/code&gt; 访问此模块。</target>
        </trans-unit>
        <trans-unit id="38303ef87943f896c6983d0f7cf9a70cfee6997e" translate="yes" xml:space="preserve">
          <source>Use a &lt;a href=&quot;#esm_dynamic_instantiate_hook&quot;&gt;dynamic instantiate hook&lt;/a&gt;</source>
          <target state="translated">使用&lt;a href=&quot;#esm_dynamic_instantiate_hook&quot;&gt;动态实例化钩子&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e8deebbe7ac1f499b778249832e695a840225107" translate="yes" xml:space="preserve">
          <source>Use an insecure HTTP parser that accepts invalid HTTP headers. This may allow interoperability with non-conformant HTTP implementations. It may also allow request smuggling and other HTTP attacks that rely on invalid headers being accepted. Avoid using this option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dec969f970ae2da31370314777710e2a530ab15f" translate="yes" xml:space="preserve">
          <source>Use bundled Mozilla CA store as supplied by current Node.js version or use OpenSSL's default CA store. The default store is selectable at build-time.</source>
          <target state="translated">使用当前Node.js版本提供的Mozilla CA存储,或者使用OpenSSL的默认CA存储。默认的存储是可以在构建时选择的。</target>
        </trans-unit>
        <trans-unit id="66143e2c420f8a7613239f1e3efea9682fa4826d" translate="yes" xml:space="preserve">
          <source>Use care when dropping privileges:</source>
          <target state="translated">掉落权限时要小心。</target>
        </trans-unit>
        <trans-unit id="c22810f5eadd6fdab3516f9428266e7d74af7b11" translate="yes" xml:space="preserve">
          <source>Use care when using &lt;code&gt;.searchParams&lt;/code&gt; to modify the &lt;code&gt;URL&lt;/code&gt; because, per the WHATWG specification, the &lt;code&gt;URLSearchParams&lt;/code&gt; object uses different rules to determine which characters to percent-encode. For instance, the &lt;code&gt;URL&lt;/code&gt; object will not percent encode the ASCII tilde (&lt;code&gt;~&lt;/code&gt;) character, while &lt;code&gt;URLSearchParams&lt;/code&gt; will always encode it:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f880e14ac8f636e000356a9df1eb2bc8423b67a" translate="yes" xml:space="preserve">
          <source>Use of &lt;code&gt;SlowBuffer&lt;/code&gt; should be used only as a last resort &lt;em&gt;after&lt;/em&gt; a developer has observed undue memory retention in their applications.</source>
          <target state="translated">&lt;em&gt;在&lt;/em&gt;开发人员发现应用程序中过多的内存保留&lt;em&gt;后&lt;/em&gt;， &lt;code&gt;SlowBuffer&lt;/code&gt; 应将SlowBuffer用作最后手段。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fb9a785beb4586226520f84b421e62184beadeba" translate="yes" xml:space="preserve">
          <source>Use of &lt;code&gt;crypto.timingSafeEqual&lt;/code&gt; does not guarantee that the &lt;em&gt;surrounding&lt;/em&gt; code is timing-safe. Care should be taken to ensure that the surrounding code does not introduce timing vulnerabilities.</source>
          <target state="translated">使用 &lt;code&gt;crypto.timingSafeEqual&lt;/code&gt; 不能保证&lt;em&gt;周围的&lt;/em&gt;代码是定时安全的。应注意确保周围的代码不会引入时序漏洞。</target>
        </trans-unit>
        <trans-unit id="a2d44bc65ec8f3fb2f025187a40ecd2da6969c33" translate="yes" xml:space="preserve">
          <source>Use of &lt;code&gt;readable.push('')&lt;/code&gt; is not recommended.</source>
          <target state="translated">不建议使用 &lt;code&gt;readable.push('')&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d7a18f27832e42f62a26d1adff869deccc220b01" translate="yes" xml:space="preserve">
          <source>Use of the &lt;a href=&quot;crypto#crypto_crypto_pbkdf2_password_salt_iterations_keylen_digest_callback&quot;&gt;&lt;code&gt;crypto.pbkdf2()&lt;/code&gt;&lt;/a&gt; API without specifying a digest was deprecated in Node.js 6.0 because the method defaulted to using the non-recommended &lt;code&gt;'SHA1'&lt;/code&gt; digest. Previously, a deprecation warning was printed. Starting in Node.js 8.0.0, calling &lt;code&gt;crypto.pbkdf2()&lt;/code&gt; or &lt;code&gt;crypto.pbkdf2Sync()&lt;/code&gt; with &lt;code&gt;digest&lt;/code&gt; set to &lt;code&gt;undefined&lt;/code&gt; will throw a &lt;code&gt;TypeError&lt;/code&gt;.</source>
          <target state="translated">所述的使用&lt;a href=&quot;crypto#crypto_crypto_pbkdf2_password_salt_iterations_keylen_digest_callback&quot;&gt; &lt;code&gt;crypto.pbkdf2()&lt;/code&gt; &lt;/a&gt; API，而不指定摘要中的Node.js 6.0被废弃，因为该方法默认为使用非推荐的 &lt;code&gt;'SHA1'&lt;/code&gt; 消化。以前，已打印弃用警告。开始在Node.js的8.0.0，调用 &lt;code&gt;crypto.pbkdf2()&lt;/code&gt; 或 &lt;code&gt;crypto.pbkdf2Sync()&lt;/code&gt; 与 &lt;code&gt;digest&lt;/code&gt; 设置为 &lt;code&gt;undefined&lt;/code&gt; 将抛出 &lt;code&gt;TypeError&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d7240b7777dbbea1e8a1ef48b75d9dcfb9881251" translate="yes" xml:space="preserve">
          <source>Use of the &lt;code&gt;101&lt;/code&gt; Informational status code is forbidden in HTTP/2.</source>
          <target state="translated">HTTP / 2中禁止使用 &lt;code&gt;101&lt;/code&gt; 信息状态代码。</target>
        </trans-unit>
        <trans-unit id="e598d7c6a0b9a276ca5b3bfcb5495de0f13c1ad6" translate="yes" xml:space="preserve">
          <source>Use of the &lt;code&gt;completer&lt;/code&gt; Function</source>
          <target state="translated">使用 &lt;code&gt;completer&lt;/code&gt; 函数</target>
        </trans-unit>
        <trans-unit id="d093439750831928b8de4711644263144b0afd9f" translate="yes" xml:space="preserve">
          <source>Use of the &lt;code&gt;completer&lt;/code&gt; function</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d32435c7a197f2836dfd3532944c2482f4fd236" translate="yes" xml:space="preserve">
          <source>Use of the &lt;code&gt;readable.pipe()&lt;/code&gt; method is recommended for most users as it has been implemented to provide the easiest way of consuming stream data. Developers that require more fine-grained control over the transfer and generation of data can use the &lt;a href=&quot;events#events_class_eventemitter&quot;&gt;&lt;code&gt;EventEmitter&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;readable.on('readable')&lt;/code&gt;/&lt;code&gt;readable.read()&lt;/code&gt; or the &lt;code&gt;readable.pause()&lt;/code&gt;/&lt;code&gt;readable.resume()&lt;/code&gt; APIs.</source>
          <target state="translated">建议大多数用户使用 &lt;code&gt;readable.pipe()&lt;/code&gt; 方法，因为已实现该方法以提供最简单的方式使用流数据。需要对数据的传输和生成可以使用更精细的控制开发者&lt;a href=&quot;events#events_class_eventemitter&quot;&gt; &lt;code&gt;EventEmitter&lt;/code&gt; &lt;/a&gt;和 &lt;code&gt;readable.on('readable')&lt;/code&gt; / &lt;code&gt;readable.read()&lt;/code&gt; 或 &lt;code&gt;readable.pause()&lt;/code&gt; / &lt;code&gt;readable.resume()&lt;/code&gt; 的API。</target>
        </trans-unit>
        <trans-unit id="51dda8e8d6b44f5c574aaf42f7777da76a59fa0f" translate="yes" xml:space="preserve">
          <source>Use of the API is unsafe.</source>
          <target state="translated">使用API是不安全的。</target>
        </trans-unit>
        <trans-unit id="948edf4448016b2dd50434fa23064801c2a1cb22" translate="yes" xml:space="preserve">
          <source>Use of the legacy &lt;code&gt;url.parse()&lt;/code&gt; method is discouraged. Users should use the WHATWG &lt;code&gt;URL&lt;/code&gt; API. Because the &lt;code&gt;url.parse()&lt;/code&gt; method uses a lenient, non-standard algorithm for parsing URL strings, security issues can be introduced. Specifically, issues with &lt;a href=&quot;https://hackerone.com/reports/678487&quot;&gt;host name spoofing&lt;/a&gt; and incorrect handling of usernames and passwords have been identified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecb58157819114bf578e605246aad486b041e117" translate="yes" xml:space="preserve">
          <source>Use of this pre-allocated internal memory pool is a key difference between calling &lt;code&gt;Buffer.alloc(size, fill)&lt;/code&gt; vs. &lt;code&gt;Buffer.allocUnsafe(size).fill(fill)&lt;/code&gt;. Specifically, &lt;code&gt;Buffer.alloc(size, fill)&lt;/code&gt; will &lt;em&gt;never&lt;/em&gt; use the internal &lt;code&gt;Buffer&lt;/code&gt; pool, while &lt;code&gt;Buffer.allocUnsafe(size).fill(fill)&lt;/code&gt;&lt;em&gt;will&lt;/em&gt; use the internal &lt;code&gt;Buffer&lt;/code&gt; pool if &lt;code&gt;size&lt;/code&gt; is less than or equal to half &lt;a href=&quot;#buffer_class_property_buffer_poolsize&quot;&gt;&lt;code&gt;Buffer.poolSize&lt;/code&gt;&lt;/a&gt;. The difference is subtle but can be important when an application requires the additional performance that &lt;a href=&quot;#buffer_class_method_buffer_allocunsafe_size&quot;&gt;&lt;code&gt;Buffer.allocUnsafe()&lt;/code&gt;&lt;/a&gt; provides.</source>
          <target state="translated">使用此预分配的内部内存池是调用 &lt;code&gt;Buffer.alloc(size, fill)&lt;/code&gt; 与 &lt;code&gt;Buffer.allocUnsafe(size).fill(fill)&lt;/code&gt; 之间的关键区别。具体来说，如果 &lt;code&gt;size&lt;/code&gt; 小于或等于&lt;a href=&quot;#buffer_class_property_buffer_poolsize&quot;&gt; &lt;code&gt;Buffer.poolSize&lt;/code&gt; 的&lt;/a&gt;一半，则 &lt;code&gt;Buffer.alloc(size, fill)&lt;/code&gt; 将&lt;em&gt;永远不会&lt;/em&gt;使用内部 &lt;code&gt;Buffer&lt;/code&gt; 池，而 &lt;code&gt;Buffer.allocUnsafe(size).fill(fill)&lt;/code&gt; &lt;em&gt;将&lt;/em&gt;使用内部 &lt;code&gt;Buffer&lt;/code&gt; 池。差异是细微的，但是当应用程序需要&lt;a href=&quot;#buffer_class_method_buffer_allocunsafe_size&quot;&gt; &lt;code&gt;Buffer.allocUnsafe()&lt;/code&gt; &lt;/a&gt;提供的其他性能时，差异可能很重要。</target>
        </trans-unit>
        <trans-unit id="e255a577e807bc002dfb0d84533a52b730e80888" translate="yes" xml:space="preserve">
          <source>Use of this pre-allocated internal memory pool is a key difference between calling &lt;code&gt;Buffer.alloc(size, fill)&lt;/code&gt; vs. &lt;code&gt;Buffer.allocUnsafe(size).fill(fill)&lt;/code&gt;. Specifically, &lt;code&gt;Buffer.alloc(size, fill)&lt;/code&gt; will &lt;em&gt;never&lt;/em&gt; use the internal &lt;code&gt;Buffer&lt;/code&gt; pool, while &lt;code&gt;Buffer.allocUnsafe(size).fill(fill)&lt;/code&gt;&lt;em&gt;will&lt;/em&gt; use the internal &lt;code&gt;Buffer&lt;/code&gt; pool if &lt;code&gt;size&lt;/code&gt; is less than or equal to half &lt;a href=&quot;#buffer_class_property_buffer_poolsize&quot;&gt;&lt;code&gt;Buffer.poolSize&lt;/code&gt;&lt;/a&gt;. The difference is subtle but can be important when an application requires the additional performance that &lt;a href=&quot;#buffer_static_method_buffer_allocunsafe_size&quot;&gt;&lt;code&gt;Buffer.allocUnsafe()&lt;/code&gt;&lt;/a&gt; provides.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7a11077ab4673062788e7639d751aef808d830d" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;&quot;scopes&quot;&lt;/code&gt; field of a manifest to set configuration for many resources at once. The &lt;code&gt;&quot;scopes&quot;&lt;/code&gt; field works by matching resources by their segments. If a scope or resource includes &lt;code&gt;&quot;cascade&quot;: true&lt;/code&gt;, unknown specifiers will be searched for in their containing scope. The containing scope for cascading is found by recursively reducing the resource URL by removing segments for &lt;a href=&quot;https://url.spec.whatwg.org/#special-scheme&quot;&gt;special schemes&lt;/a&gt;, keeping trailing &lt;code&gt;&quot;/&quot;&lt;/code&gt; suffixes, and removing the query and hash fragment. This leads to the eventual reduction of the URL to its origin. If the URL is non-special the scope will be located by the URL's origin. If no scope is found for the origin or in the case of opaque origins, a protocol string can be used as a scope.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c412511e5a0d8bdf92bc274feb5291adda3aa57" translate="yes" xml:space="preserve">
          <source>Use the dynamically loaded pointer to invoke the function.</source>
          <target state="translated">使用动态加载的指针来调用函数。</target>
        </trans-unit>
        <trans-unit id="ae952fa27153fb5a58933981baea15f63402ec27" translate="yes" xml:space="preserve">
          <source>Use the internal &lt;code&gt;require()&lt;/code&gt; machinery to look up the location of a module, but rather than loading the module, just return the resolved filename.</source>
          <target state="translated">使用内部的 &lt;code&gt;require()&lt;/code&gt; 机制查找模块的位置，而不是加载模块，只需返回解析的文件名即可。</target>
        </trans-unit>
        <trans-unit id="15ee6e17c37012897af5f61e78384cc87974d16d" translate="yes" xml:space="preserve">
          <source>Use the specified file as a security policy.</source>
          <target state="translated">使用指定的文件作为安全策略。</target>
        </trans-unit>
        <trans-unit id="3380a8b2c6439c7c83ba160cfc5cef5210723c7c" translate="yes" xml:space="preserve">
          <source>Use this to determine what colors the terminal supports. Due to the nature of colors in terminals it is possible to either have false positives or false negatives. It depends on process information and the environment variables that may lie about what terminal is used. It is possible to pass in an &lt;code&gt;env&lt;/code&gt; object to simulate the usage of a specific terminal. This can be useful to check how specific environment settings behave.</source>
          <target state="translated">使用它来确定终端支持的颜色。由于端子中颜色的性质，可能会出现误报或误报的情况。它取决于过程信息和可能使用的终端有关的环境变量。可以传入一个 &lt;code&gt;env&lt;/code&gt; 对象来模拟特定终端的用法。这对于检查特定环境设置的行为很有用。</target>
        </trans-unit>
        <trans-unit id="14e00386da63c018937b609a03a6c28267f1376b" translate="yes" xml:space="preserve">
          <source>Use-case</source>
          <target state="translated">Use-case</target>
        </trans-unit>
        <trans-unit id="076dfed9bb64ae1973f85bbafed11ff094afb9b7" translate="yes" xml:space="preserve">
          <source>Used by the &lt;code&gt;N-API&lt;/code&gt; when &lt;code&gt;Constructor.prototype&lt;/code&gt; is not an object.</source>
          <target state="translated">当 &lt;code&gt;Constructor.prototype&lt;/code&gt; 不是对象时，由 &lt;code&gt;N-API&lt;/code&gt; 使用。</target>
        </trans-unit>
        <trans-unit id="f72f4e59693c2865eebdfafc952cee36d7e9a557" translate="yes" xml:space="preserve">
          <source>Used comparison changed from Strict Equality to &lt;code&gt;Object.is()&lt;/code&gt;</source>
          <target state="translated">使用的比较从严格相等更改为 &lt;code&gt;Object.is()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="db16827b1edd8cd50f51af8bc6cc80b85ac16c6d" translate="yes" xml:space="preserve">
          <source>Used comparison changed from Strict Equality to &lt;code&gt;Object.is()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15e9f8f7397050b664350844dc4e6a33a7224b3d" translate="yes" xml:space="preserve">
          <source>Used generically to identify that an operation caused an out of memory condition.</source>
          <target state="translated">一般用于标识某项操作引起的失忆状态。</target>
        </trans-unit>
        <trans-unit id="1e1d73a3cdadd107c1c0da0fdccf79bf1ab7ae85" translate="yes" xml:space="preserve">
          <source>Used in the &lt;code&gt;repl&lt;/code&gt; in case the old history file is used and an error occurred while trying to read and parse it.</source>
          <target state="translated">如果使用了旧的历史文件并且在尝试读取和解析该文件时发生错误，则在 &lt;code&gt;repl&lt;/code&gt; 中使用。</target>
        </trans-unit>
        <trans-unit id="f6a37aa63269784f0b4d16ef57e43eb383bb66e3" translate="yes" xml:space="preserve">
          <source>Used to handle binary data. See the &lt;a href=&quot;buffer&quot;&gt;buffer section&lt;/a&gt;.</source>
          <target state="translated">用于处理二进制数据。请参阅&lt;a href=&quot;buffer&quot;&gt;缓冲区部分&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="121dfb0e20e51079f748b8e0a1ace5ae85b26d22" translate="yes" xml:space="preserve">
          <source>Used to identify a specific kind of internal Node.js error that should not typically be triggered by user code. Instances of this error point to an internal bug within the Node.js binary itself.</source>
          <target state="translated">用于识别特定类型的Node.js内部错误,通常不应该由用户代码触发。这种错误的例子指向Node.js二进制本身的内部错误。</target>
        </trans-unit>
        <trans-unit id="ce0213c2efe3eaf7abfd7af48ac8bb37a30fe5e7" translate="yes" xml:space="preserve">
          <source>Used to import modules, &lt;code&gt;JSON&lt;/code&gt;, and local files. Modules can be imported from &lt;code&gt;node_modules&lt;/code&gt;. Local modules and JSON files can be imported using a relative path (e.g. &lt;code&gt;./&lt;/code&gt;, &lt;code&gt;./foo&lt;/code&gt;, &lt;code&gt;./bar/baz&lt;/code&gt;, &lt;code&gt;../foo&lt;/code&gt;) that will be resolved against the directory named by &lt;a href=&quot;#modules_dirname&quot;&gt;&lt;code&gt;__dirname&lt;/code&gt;&lt;/a&gt; (if defined) or the current working directory.</source>
          <target state="translated">用于导入模块， &lt;code&gt;JSON&lt;/code&gt; 和本地文件。可以从 &lt;code&gt;node_modules&lt;/code&gt; 导入模块。本地模块和JSON文件可以使用相对路径导入（例如 &lt;code&gt;./&lt;/code&gt; ， &lt;code&gt;./foo&lt;/code&gt; ， &lt;code&gt;./bar/baz&lt;/code&gt; ， &lt;code&gt;../foo&lt;/code&gt; ），将针对由指定的目录来解决&lt;a href=&quot;#modules_dirname&quot;&gt; &lt;code&gt;__dirname&lt;/code&gt; &lt;/a&gt;（如果定义）或当前工作目录。</target>
        </trans-unit>
        <trans-unit id="fa8901f3c2c158cdcada361a79f96ed53f062e7a" translate="yes" xml:space="preserve">
          <source>Used to import modules, &lt;code&gt;JSON&lt;/code&gt;, and local files. Modules can be imported from &lt;code&gt;node_modules&lt;/code&gt;. Local modules and JSON files can be imported using a relative path (e.g. &lt;code&gt;./&lt;/code&gt;, &lt;code&gt;./foo&lt;/code&gt;, &lt;code&gt;./bar/baz&lt;/code&gt;, &lt;code&gt;../foo&lt;/code&gt;) that will be resolved against the directory named by &lt;a href=&quot;#modules_dirname&quot;&gt;&lt;code&gt;__dirname&lt;/code&gt;&lt;/a&gt; (if defined) or the current working directory. The relative paths of POSIX style are resolved in an OS independent fashion, meaning that the examples above will work on Windows in the same way they would on Unix systems.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8051e6f08f0917697ec0c2567547cefbbb345f70" translate="yes" xml:space="preserve">
          <source>Used to prevent an abort if a string decoder was set on the Socket.</source>
          <target state="translated">如果Socket上设置了字符串解码器,用于防止中止。</target>
        </trans-unit>
        <trans-unit id="24a89de7a287742d4f61724e35de45c6f674e19c" translate="yes" xml:space="preserve">
          <source>Used to print to stdout and stderr. See the &lt;a href=&quot;console&quot;&gt;&lt;code&gt;console&lt;/code&gt;&lt;/a&gt; section.</source>
          <target state="translated">用于打印到stdout和stderr。请参阅&lt;a href=&quot;console&quot;&gt; &lt;code&gt;console&lt;/code&gt; &lt;/a&gt;部分。</target>
        </trans-unit>
        <trans-unit id="4da4cffb302360787d219a0d7461f4f5f41ed1b7" translate="yes" xml:space="preserve">
          <source>Used to set a callback function that is called when there is no activity on the &lt;code&gt;Http2Session&lt;/code&gt; after &lt;code&gt;msecs&lt;/code&gt; milliseconds. The given &lt;code&gt;callback&lt;/code&gt; is registered as a listener on the &lt;code&gt;'timeout'&lt;/code&gt; event.</source>
          <target state="translated">用于设置时，有上没有活动时调用回调函数 &lt;code&gt;Http2Session&lt;/code&gt; 之后 &lt;code&gt;msecs&lt;/code&gt; 毫秒。给定的 &lt;code&gt;callback&lt;/code&gt; 在 &lt;code&gt;'timeout'&lt;/code&gt; 事件中注册为侦听器。</target>
        </trans-unit>
        <trans-unit id="d6092c257f3fe7fbcae918b9f10d3f9f4b59efd5" translate="yes" xml:space="preserve">
          <source>Used to set the timeout value for http2 secure server requests, and sets a callback function that is called when there is no activity on the &lt;code&gt;Http2SecureServer&lt;/code&gt; after &lt;code&gt;msecs&lt;/code&gt; milliseconds.</source>
          <target state="translated">用于设置http2安全服务器请求的超时值，并设定时，有上没有活动时调用回调函数 &lt;code&gt;Http2SecureServer&lt;/code&gt; 之后 &lt;code&gt;msecs&lt;/code&gt; 毫秒。</target>
        </trans-unit>
        <trans-unit id="6099d205b5ac90f16eaba84f09879638c543bdb1" translate="yes" xml:space="preserve">
          <source>Used to set the timeout value for http2 server requests, and sets a callback function that is called when there is no activity on the &lt;code&gt;Http2Server&lt;/code&gt; after &lt;code&gt;msecs&lt;/code&gt; milliseconds.</source>
          <target state="translated">用于设置http2服务器请求的超时值，并设定时，有上没有活动时调用回调函数 &lt;code&gt;Http2Server&lt;/code&gt; 之后 &lt;code&gt;msecs&lt;/code&gt; 毫秒。</target>
        </trans-unit>
        <trans-unit id="cf089c5d65bc1c1b020815a919861fac22a741cc" translate="yes" xml:space="preserve">
          <source>Used to update the server with the provided settings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a9e06ca05bd0b8449a2a685aa272bd3371a92a9" translate="yes" xml:space="preserve">
          <source>Used when a TLS renegotiation request has failed in a non-specific way.</source>
          <target state="translated">当TLS重新协商请求以非特定方式失败时使用。</target>
        </trans-unit>
        <trans-unit id="a98d52897ccd48ecb3e15ea244dd351b3da000ab" translate="yes" xml:space="preserve">
          <source>Used when a child process is being forked without specifying an IPC channel.</source>
          <target state="translated">当子进程在没有指定IPC通道的情况下被分叉时使用。</target>
        </trans-unit>
        <trans-unit id="1794600a519f16a59864bcb7c5c177b882aefaec" translate="yes" xml:space="preserve">
          <source>Used when a failure occurs sending an individual frame on the HTTP/2 session.</source>
          <target state="translated">当在HTTP/2会话上发送单个帧发生故障时使用。</target>
        </trans-unit>
        <trans-unit id="4abe7a2e8fd5924bf7dbdcead54c7db33c5f705e" translate="yes" xml:space="preserve">
          <source>Used when a feature that is not available to the current platform which is running Node.js is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61c5e151234f65531c9bcb06fcbd6d0a3e18e2c5" translate="yes" xml:space="preserve">
          <source>Used when a given value is out of the accepted range.</source>
          <target state="translated">当给定的值超出接受范围时使用。</target>
        </trans-unit>
        <trans-unit id="0845a17575717bce690fdf146f5a3dc7aca2d779" translate="yes" xml:space="preserve">
          <source>Used when a required header is missing in an HTTP/2 message.</source>
          <target state="translated">当HTTP/2消息中缺少必要的头时使用。</target>
        </trans-unit>
        <trans-unit id="9467d12ac92740faa32b731bd21160bacd588f2c" translate="yes" xml:space="preserve">
          <source>Used when an &lt;a href=&quot;esm&quot;&gt;ES Module&lt;/a&gt; loader hook specifies &lt;code&gt;format: 'dynamic'&lt;/code&gt; but does not provide a &lt;code&gt;dynamicInstantiate&lt;/code&gt; hook.</source>
          <target state="translated">当&lt;a href=&quot;esm&quot;&gt;ES Module&lt;/a&gt;加载器挂钩指定 &lt;code&gt;format: 'dynamic'&lt;/code&gt; 但不提供 &lt;code&gt;dynamicInstantiate&lt;/code&gt; 挂钩时使用。</target>
        </trans-unit>
        <trans-unit id="1b24d21ed4c6621caddd9f321ae8b6a469e204be" translate="yes" xml:space="preserve">
          <source>Used when an HTTP/2 Headers Object is expected.</source>
          <target state="translated">当需要HTTP/2 Headers对象时使用。</target>
        </trans-unit>
        <trans-unit id="b918d798cee5f2a6e9c8d72f61abe8eb608f5d3f" translate="yes" xml:space="preserve">
          <source>Used when an action has been performed on an HTTP/2 Stream that has already been closed.</source>
          <target state="translated">当对已经关闭的HTTP/2流进行了操作时使用。</target>
        </trans-unit>
        <trans-unit id="23bd3e8d7b3edf9e72a7c01d81c202ff7d9bedc0" translate="yes" xml:space="preserve">
          <source>Used when an attempt is made to use a &lt;code&gt;zlib&lt;/code&gt; object after it has already been closed.</source>
          <target state="translated">当 &lt;code&gt;zlib&lt;/code&gt; 对象已被关闭后尝试使用它时使用。</target>
        </trans-unit>
        <trans-unit id="664c1b2e71185319ae6e8b3d421c03ad9ceaa149" translate="yes" xml:space="preserve">
          <source>Used when an attempt is made to use a readable stream that has not implemented &lt;a href=&quot;stream#stream_readable_read_size_1&quot;&gt;&lt;code&gt;readable._read()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">尝试使用尚未实现&lt;a href=&quot;stream#stream_readable_read_size_1&quot;&gt; &lt;code&gt;readable._read()&lt;/code&gt; &lt;/a&gt;的可读流时使用。</target>
        </trans-unit>
        <trans-unit id="c6832c2b5ead9c19cb61232927aae0d3eaeaef49" translate="yes" xml:space="preserve">
          <source>Used when an invalid character is found in an HTTP response status message (reason phrase).</source>
          <target state="translated">当在HTTP响应状态信息(原因短语)中发现无效字符时使用。</target>
        </trans-unit>
        <trans-unit id="3fb26f283a60b38e80c873a606c7a370e1e92380" translate="yes" xml:space="preserve">
          <source>Used when an operation has been aborted (typically using an &lt;code&gt;AbortController&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="429695ecac5f7fdb897661f9a315b10c325303e4" translate="yes" xml:space="preserve">
          <source>Used when the main process is trying to read data from the child process's STDERR/STDOUT, and the data's length is longer than the &lt;code&gt;maxBuffer&lt;/code&gt; option.</source>
          <target state="translated">当主进程试图从子进程的STDERR / STDOUT读取数据，并且数据的长度大于 &lt;code&gt;maxBuffer&lt;/code&gt; 选项时，使用此函数。</target>
        </trans-unit>
        <trans-unit id="d86017044b62d046dd7d3f8a998cad704c8b25df" translate="yes" xml:space="preserve">
          <source>Used with &lt;code&gt;--experimental-modules&lt;/code&gt;, this configures Node.js to interpret string input as CommonJS or as an ES module. String input is input via &lt;code&gt;--eval&lt;/code&gt;, &lt;code&gt;--print&lt;/code&gt;, or &lt;code&gt;STDIN&lt;/code&gt;.</source>
          <target state="translated">与 &lt;code&gt;--experimental-modules&lt;/code&gt; 一起使用，这将Node.js配置为将字符串输入解释为CommonJS或ES模块。字符串输入是通过输入 &lt;code&gt;--eval&lt;/code&gt; ， &lt;code&gt;--print&lt;/code&gt; ，或 &lt;code&gt;STDIN&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fbdf0f773f2695d034eda295b87b8838ae8922ee" translate="yes" xml:space="preserve">
          <source>Useful V8 options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ae2f04ad43660c25b4e8672a9f94dac65a9177d" translate="yes" xml:space="preserve">
          <source>User Timing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25616a502c1bbb6bbe041649df7e3295c2d10d6d" translate="yes" xml:space="preserve">
          <source>User code will not construct &lt;code&gt;Http2Stream&lt;/code&gt; instances directly. Rather, these are created, managed, and provided to user code through the &lt;code&gt;Http2Session&lt;/code&gt; instance. On the server, &lt;code&gt;Http2Stream&lt;/code&gt; instances are created either in response to an incoming HTTP request (and handed off to user code via the &lt;code&gt;'stream'&lt;/code&gt; event), or in response to a call to the &lt;code&gt;http2stream.pushStream()&lt;/code&gt; method. On the client, &lt;code&gt;Http2Stream&lt;/code&gt; instances are created and returned when either the &lt;code&gt;http2session.request()&lt;/code&gt; method is called, or in response to an incoming &lt;code&gt;'push'&lt;/code&gt; event.</source>
          <target state="translated">用户代码不会直接构造 &lt;code&gt;Http2Stream&lt;/code&gt; 实例。相反，它们是通过 &lt;code&gt;Http2Session&lt;/code&gt; 实例创建，管理并提供给用户代码的。在服务器上，创建 &lt;code&gt;Http2Stream&lt;/code&gt; 实例是为了响应传入的HTTP请求（并通过 &lt;code&gt;'stream'&lt;/code&gt; 事件将其移交给用户代码），或者是响应对 &lt;code&gt;http2stream.pushStream()&lt;/code&gt; 方法的调用。在客户端上，当调用 &lt;code&gt;http2session.request()&lt;/code&gt; 方法或响应传入的 &lt;code&gt;'push'&lt;/code&gt; 事件时，将创建并返回 &lt;code&gt;Http2Stream&lt;/code&gt; 实例。</target>
        </trans-unit>
        <trans-unit id="39f51fc9e130a165a9061ccc184b4da818b4ea69" translate="yes" xml:space="preserve">
          <source>User code will not create &lt;code&gt;Http2Session&lt;/code&gt; instances directly. Server-side &lt;code&gt;Http2Session&lt;/code&gt; instances are created by the &lt;code&gt;Http2Server&lt;/code&gt; instance when a new HTTP/2 connection is received. Client-side &lt;code&gt;Http2Session&lt;/code&gt; instances are created using the &lt;code&gt;http2.connect()&lt;/code&gt; method.</source>
          <target state="translated">用户代码不会直接创建 &lt;code&gt;Http2Session&lt;/code&gt; 实例。服务器端 &lt;code&gt;Http2Session&lt;/code&gt; 实例由创建 &lt;code&gt;Http2Server&lt;/code&gt; 实例接收到一个新的HTTP / 2连接时。客户端 &lt;code&gt;Http2Session&lt;/code&gt; 实例是使用 &lt;code&gt;http2.connect()&lt;/code&gt; 方法创建的。</target>
        </trans-unit>
        <trans-unit id="fddae98305cdd05d2b80966abde1a85c4a0cb970" translate="yes" xml:space="preserve">
          <source>User code will typically not listen for this event directly.</source>
          <target state="translated">用户代码一般不会直接监听这个事件。</target>
        </trans-unit>
        <trans-unit id="fe593d151fbd8534d3e17f4a715524cf5537157f" translate="yes" xml:space="preserve">
          <source>User defined prototype properties are inspected in case &lt;code&gt;showHidden&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e44d414f4523cb0020fa3bb9ef006880758d42a0" translate="yes" xml:space="preserve">
          <source>User-specified errors triggered by application code.</source>
          <target state="translated">由应用程序代码引发的用户指定的错误。</target>
        </trans-unit>
        <trans-unit id="7006cd764ba16178062bfab50e81a707bc1f87ed" translate="yes" xml:space="preserve">
          <source>Users are able to define their own &lt;code&gt;type&lt;/code&gt; when using the public embedder API.</source>
          <target state="translated">使用公共嵌入器API时，用户可以定义自己的 &lt;code&gt;type&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cf5ef9d00cdafe23ad10052c62fc3a82ffe4cd3c" translate="yes" xml:space="preserve">
          <source>Users of &lt;code&gt;MakeCallback&lt;/code&gt; that add the &lt;code&gt;domain&lt;/code&gt; property to carry context, should start using the &lt;code&gt;async_context&lt;/code&gt; variant of &lt;code&gt;MakeCallback&lt;/code&gt; or &lt;code&gt;CallbackScope&lt;/code&gt;, or the high-level &lt;code&gt;AsyncResource&lt;/code&gt; class.</source>
          <target state="translated">添加了 &lt;code&gt;domain&lt;/code&gt; 属性以携带上下文的 &lt;code&gt;MakeCallback&lt;/code&gt; 的用户应开始使用 &lt;code&gt;MakeCallback&lt;/code&gt; 或 &lt;code&gt;CallbackScope&lt;/code&gt; 的 &lt;code&gt;async_context&lt;/code&gt; 变体或高级 &lt;code&gt;AsyncResource&lt;/code&gt; 类。</target>
        </trans-unit>
        <trans-unit id="76bd16f83da4c24b980d59d68158565cc72444d4" translate="yes" xml:space="preserve">
          <source>Users should take full responsibility for selecting the crypto algorithm and key size according to their security requirements.</source>
          <target state="translated">用户应根据自己的安全要求,全权负责选择加密算法和密钥大小。</target>
        </trans-unit>
        <trans-unit id="125395920a5c21bcd712ff46c895d10dd8989f5b" translate="yes" xml:space="preserve">
          <source>Users who experience large or growing &lt;code&gt;bufferSize&lt;/code&gt; should attempt to &quot;throttle&quot; the data flows in their program with &lt;a href=&quot;#net_socket_pause&quot;&gt;&lt;code&gt;socket.pause()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#net_socket_resume&quot;&gt;&lt;code&gt;socket.resume()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">遇到 &lt;code&gt;bufferSize&lt;/code&gt; 较大或不断增大的用户，应尝试使用&lt;a href=&quot;#net_socket_pause&quot;&gt; &lt;code&gt;socket.pause()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#net_socket_resume&quot;&gt; &lt;code&gt;socket.resume()&lt;/code&gt; &lt;/a&gt; &amp;ldquo;限制&amp;rdquo;其程序中的数据流。</target>
        </trans-unit>
        <trans-unit id="c441c245c026869fc42a7d133264a863c02ddd56" translate="yes" xml:space="preserve">
          <source>Users will not create instances of &lt;code&gt;QuicEndpoint&lt;/code&gt; directly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c916db3f2c5f001f12fde4c7e7de18a2a34d7b3f" translate="yes" xml:space="preserve">
          <source>Users will not create instances of &lt;code&gt;QuicSession&lt;/code&gt; directly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0b211e8d0fac47b645a9c120fc49ca3721fc00f" translate="yes" xml:space="preserve">
          <source>Uses &lt;a href=&quot;util#util_util_inspect_object_options&quot;&gt;&lt;code&gt;util.inspect()&lt;/code&gt;&lt;/a&gt; on &lt;code&gt;obj&lt;/code&gt; and prints the resulting string to &lt;code&gt;stdout&lt;/code&gt;. This function bypasses any custom &lt;code&gt;inspect()&lt;/code&gt; function defined on &lt;code&gt;obj&lt;/code&gt;.</source>
          <target state="translated">在 &lt;code&gt;obj&lt;/code&gt; 上使用&lt;a href=&quot;util#util_util_inspect_object_options&quot;&gt; &lt;code&gt;util.inspect()&lt;/code&gt; &lt;/a&gt;并将结果字符串 &lt;code&gt;stdout&lt;/code&gt; 到stdout。此函数绕过 &lt;code&gt;obj&lt;/code&gt; 上定义的任何自定义 &lt;code&gt;inspect()&lt;/code&gt; 函数。</target>
        </trans-unit>
        <trans-unit id="8a548e7c578e9bcae5441755ca6981e1376b6940" translate="yes" xml:space="preserve">
          <source>Uses a &lt;a href=&quot;#v8_class_v8_defaultdeserializer&quot;&gt;&lt;code&gt;DefaultDeserializer&lt;/code&gt;&lt;/a&gt; with default options to read a JS value from a buffer.</source>
          <target state="translated">使用带有默认选项的&lt;a href=&quot;#v8_class_v8_defaultdeserializer&quot;&gt; &lt;code&gt;DefaultDeserializer&lt;/code&gt; &lt;/a&gt;来从缓冲区读取JS值。</target>
        </trans-unit>
        <trans-unit id="ffa3ccebd075b40f80d680d211108b377dc2860c" translate="yes" xml:space="preserve">
          <source>Uses a &lt;a href=&quot;#v8_class_v8_defaultserializer&quot;&gt;&lt;code&gt;DefaultSerializer&lt;/code&gt;&lt;/a&gt; to serialize &lt;code&gt;value&lt;/code&gt; into a buffer.</source>
          <target state="translated">使用&lt;a href=&quot;#v8_class_v8_defaultserializer&quot;&gt; &lt;code&gt;DefaultSerializer&lt;/code&gt; &lt;/a&gt;将 &lt;code&gt;value&lt;/code&gt; 序列化到缓冲区中。</target>
        </trans-unit>
        <trans-unit id="8c67b5925b673c832694d1ebc5382ae5e3763bab" translate="yes" xml:space="preserve">
          <source>Uses the DNS protocol to resolve &lt;code&gt;CAA&lt;/code&gt; records for the &lt;code&gt;hostname&lt;/code&gt;. On success, the &lt;code&gt;Promise&lt;/code&gt; is resolved with an array of objects containing available certification authority authorization records available for the &lt;code&gt;hostname&lt;/code&gt; (e.g. &lt;code&gt;[{critial: 0, iodef: 'mailto:pki@example.com'},{critical: 128, issue: 'pki.example.com'}]&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09d6517df50af67360f17bc302c32dc5e4d01ecd" translate="yes" xml:space="preserve">
          <source>Uses the DNS protocol to resolve &lt;code&gt;CAA&lt;/code&gt; records for the &lt;code&gt;hostname&lt;/code&gt;. The &lt;code&gt;addresses&lt;/code&gt; argument passed to the &lt;code&gt;callback&lt;/code&gt; function will contain an array of certification authority authorization records available for the &lt;code&gt;hostname&lt;/code&gt; (e.g. &lt;code&gt;[{critial: 0, iodef: 'mailto:pki@example.com'}, {critical: 128, issue: 'pki.example.com'}]&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e77d28cd7b2015b232d52aaadac17eb6a30ee01" translate="yes" xml:space="preserve">
          <source>Uses the DNS protocol to resolve &lt;code&gt;CNAME&lt;/code&gt; records for the &lt;code&gt;hostname&lt;/code&gt;. On success, the &lt;code&gt;Promise&lt;/code&gt; is resolved with an array of canonical name records available for the &lt;code&gt;hostname&lt;/code&gt; (e.g. &lt;code&gt;['bar.example.com']&lt;/code&gt;).</source>
          <target state="translated">使用DNS协议解析 &lt;code&gt;hostname&lt;/code&gt; &lt;code&gt;CNAME&lt;/code&gt; 记录。成功后，将使用一系列可用于 &lt;code&gt;hostname&lt;/code&gt; 的规范名称记录（例如 &lt;code&gt;['bar.example.com']&lt;/code&gt; ）来解决 &lt;code&gt;Promise&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bb68d3eb1bfdcd227e65a5b4689509e2b0fe739c" translate="yes" xml:space="preserve">
          <source>Uses the DNS protocol to resolve &lt;code&gt;CNAME&lt;/code&gt; records for the &lt;code&gt;hostname&lt;/code&gt;. The &lt;code&gt;addresses&lt;/code&gt; argument passed to the &lt;code&gt;callback&lt;/code&gt; function will contain an array of canonical name records available for the &lt;code&gt;hostname&lt;/code&gt; (e.g. &lt;code&gt;['bar.example.com']&lt;/code&gt;).</source>
          <target state="translated">使用DNS协议解析 &lt;code&gt;hostname&lt;/code&gt; &lt;code&gt;CNAME&lt;/code&gt; 记录。传递给 &lt;code&gt;callback&lt;/code&gt; 函数的 &lt;code&gt;addresses&lt;/code&gt; 参数将包含一组可用于 &lt;code&gt;hostname&lt;/code&gt; 的规范名称记录（例如 &lt;code&gt;['bar.example.com']&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="13e7d8dc5961f06bdcab36b2aa9dd7f9b7f85a28" translate="yes" xml:space="preserve">
          <source>Uses the DNS protocol to resolve IPv4 addresses (&lt;code&gt;A&lt;/code&gt; records) for the &lt;code&gt;hostname&lt;/code&gt;. On success, the &lt;code&gt;Promise&lt;/code&gt; is resolved with an array of IPv4 addresses (e.g. &lt;code&gt;['74.125.79.104', '74.125.79.105', '74.125.79.106']&lt;/code&gt;).</source>
          <target state="translated">使用DNS协议解析 &lt;code&gt;hostname&lt;/code&gt; IPv4地址（ &lt;code&gt;A&lt;/code&gt; 记录）。成功后，将使用一系列IPv4地址（例如 &lt;code&gt;['74.125.79.104', '74.125.79.105', '74.125.79.106']&lt;/code&gt; ）来解决 &lt;code&gt;Promise&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0c48d5cd8409e2e76101eadd1fce8d4f40ef0330" translate="yes" xml:space="preserve">
          <source>Uses the DNS protocol to resolve IPv6 addresses (&lt;code&gt;AAAA&lt;/code&gt; records) for the &lt;code&gt;hostname&lt;/code&gt;. On success, the &lt;code&gt;Promise&lt;/code&gt; is resolved with an array of IPv6 addresses.</source>
          <target state="translated">使用DNS协议解析 &lt;code&gt;hostname&lt;/code&gt; IPv6地址（ &lt;code&gt;AAAA&lt;/code&gt; 记录）。成功后，将通过一系列IPv6地址来解决 &lt;code&gt;Promise&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="66301e6000e1db09536b4bdae064e2b5fa0494b8" translate="yes" xml:space="preserve">
          <source>Uses the DNS protocol to resolve a IPv4 addresses (&lt;code&gt;A&lt;/code&gt; records) for the &lt;code&gt;hostname&lt;/code&gt;. The &lt;code&gt;addresses&lt;/code&gt; argument passed to the &lt;code&gt;callback&lt;/code&gt; function will contain an array of IPv4 addresses (e.g. &lt;code&gt;['74.125.79.104', '74.125.79.105', '74.125.79.106']&lt;/code&gt;).</source>
          <target state="translated">使用DNS协议解析 &lt;code&gt;hostname&lt;/code&gt; 的IPv4地址（ &lt;code&gt;A&lt;/code&gt; 记录）。传递给 &lt;code&gt;callback&lt;/code&gt; 函数的 &lt;code&gt;addresses&lt;/code&gt; 参数将包含一个IPv4地址数组（例如 &lt;code&gt;['74.125.79.104', '74.125.79.105', '74.125.79.106']&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="11d194e2b3963c1420f88e04b7c8db00b6ab9e52" translate="yes" xml:space="preserve">
          <source>Uses the DNS protocol to resolve a IPv6 addresses (&lt;code&gt;AAAA&lt;/code&gt; records) for the &lt;code&gt;hostname&lt;/code&gt;. The &lt;code&gt;addresses&lt;/code&gt; argument passed to the &lt;code&gt;callback&lt;/code&gt; function will contain an array of IPv6 addresses.</source>
          <target state="translated">使用DNS协议解析 &lt;code&gt;hostname&lt;/code&gt; 的IPv6地址（ &lt;code&gt;AAAA&lt;/code&gt; 记录）。传递给 &lt;code&gt;callback&lt;/code&gt; 函数的 &lt;code&gt;addresses&lt;/code&gt; 参数将包含一个IPv6地址数组。</target>
        </trans-unit>
        <trans-unit id="b9e411c1d095a916a43fc5af2efc5891cd2e489d" translate="yes" xml:space="preserve">
          <source>Uses the DNS protocol to resolve a host name (e.g. &lt;code&gt;'nodejs.org'&lt;/code&gt;) into an array of the resource records. The &lt;code&gt;callback&lt;/code&gt; function has arguments &lt;code&gt;(err, records)&lt;/code&gt;. When successful, &lt;code&gt;records&lt;/code&gt; will be an array of resource records. The type and structure of individual results varies based on &lt;code&gt;rrtype&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d8e2cf4737608f9a6c0665ab07ec0fd30414f31" translate="yes" xml:space="preserve">
          <source>Uses the DNS protocol to resolve a host name (e.g. &lt;code&gt;'nodejs.org'&lt;/code&gt;) into an array of the resource records. When successful, the &lt;code&gt;Promise&lt;/code&gt; is resolved with an array of resource records. The type and structure of individual results vary based on &lt;code&gt;rrtype&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca7ed788165420143fc03ed1657a6c888a22a6f3" translate="yes" xml:space="preserve">
          <source>Uses the DNS protocol to resolve a hostname (e.g. &lt;code&gt;'nodejs.org'&lt;/code&gt;) into an array of the resource records. The &lt;code&gt;callback&lt;/code&gt; function has arguments &lt;code&gt;(err, records)&lt;/code&gt;. When successful, &lt;code&gt;records&lt;/code&gt; will be an array of resource records. The type and structure of individual results varies based on &lt;code&gt;rrtype&lt;/code&gt;:</source>
          <target state="translated">使用DNS协议将主机名（例如 &lt;code&gt;'nodejs.org'&lt;/code&gt; ）解析为资源记录的数组。该 &lt;code&gt;callback&lt;/code&gt; 函数的参数 &lt;code&gt;(err, records)&lt;/code&gt; 。成功后， &lt;code&gt;records&lt;/code&gt; 将是资源记录的数组。各个结果的类型和结构因 &lt;code&gt;rrtype&lt;/code&gt; 而异：</target>
        </trans-unit>
        <trans-unit id="b416ceeaa487d3b737e0905aac04cace17b4a344" translate="yes" xml:space="preserve">
          <source>Uses the DNS protocol to resolve a hostname (e.g. &lt;code&gt;'nodejs.org'&lt;/code&gt;) into an array of the resource records. When successful, the &lt;code&gt;Promise&lt;/code&gt; is resolved with an array of resource records. The type and structure of individual results vary based on &lt;code&gt;rrtype&lt;/code&gt;:</source>
          <target state="translated">使用DNS协议将主机名（例如 &lt;code&gt;'nodejs.org'&lt;/code&gt; ）解析为资源记录的数组。成功后，将使用一系列资源记录来解决 &lt;code&gt;Promise&lt;/code&gt; 。各个结果的类型和结构因 &lt;code&gt;rrtype&lt;/code&gt; 而异：</target>
        </trans-unit>
        <trans-unit id="5a5f278be9d05db0c31bebe95c9e1802d584b324" translate="yes" xml:space="preserve">
          <source>Uses the DNS protocol to resolve a start of authority record (&lt;code&gt;SOA&lt;/code&gt; record) for the &lt;code&gt;hostname&lt;/code&gt;. On success, the &lt;code&gt;Promise&lt;/code&gt; is resolved with an object with the following properties:</source>
          <target state="translated">使用DNS协议来解析 &lt;code&gt;hostname&lt;/code&gt; 的授权记录（ &lt;code&gt;SOA&lt;/code&gt; 记录）的开始。成功完成后，将使用具有以下属性的对象来解决 &lt;code&gt;Promise&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="7b9a78a34b578f971014342e21ffa69021b10337" translate="yes" xml:space="preserve">
          <source>Uses the DNS protocol to resolve a start of authority record (&lt;code&gt;SOA&lt;/code&gt; record) for the &lt;code&gt;hostname&lt;/code&gt;. The &lt;code&gt;address&lt;/code&gt; argument passed to the &lt;code&gt;callback&lt;/code&gt; function will be an object with the following properties:</source>
          <target state="translated">使用DNS协议来解析 &lt;code&gt;hostname&lt;/code&gt; 的授权记录（ &lt;code&gt;SOA&lt;/code&gt; 记录）的开始。传递给 &lt;code&gt;callback&lt;/code&gt; 函数的 &lt;code&gt;address&lt;/code&gt; 参数将是具有以下属性的对象：</target>
        </trans-unit>
        <trans-unit id="1d74ad0a633112cf81a8691b4596126feb4dd586" translate="yes" xml:space="preserve">
          <source>Uses the DNS protocol to resolve all records (also known as &lt;code&gt;ANY&lt;/code&gt; or &lt;code&gt;*&lt;/code&gt; query). On success, the &lt;code&gt;Promise&lt;/code&gt; is resolved with an array containing various types of records. Each object has a property &lt;code&gt;type&lt;/code&gt; that indicates the type of the current record. And depending on the &lt;code&gt;type&lt;/code&gt;, additional properties will be present on the object:</source>
          <target state="translated">使用DNS协议解析所有记录（也称为 &lt;code&gt;ANY&lt;/code&gt; 或 &lt;code&gt;*&lt;/code&gt; 查询）。成功后，将使用包含各种类型的记录的数组来解决 &lt;code&gt;Promise&lt;/code&gt; 。每个对象都有一个指示当前记录类型的属性 &lt;code&gt;type&lt;/code&gt; 。并根据 &lt;code&gt;type&lt;/code&gt; ，对象上将出现其他属性：</target>
        </trans-unit>
        <trans-unit id="91e1407dc9084d4aaa922119e46c0bce323d3dc6" translate="yes" xml:space="preserve">
          <source>Uses the DNS protocol to resolve all records (also known as &lt;code&gt;ANY&lt;/code&gt; or &lt;code&gt;*&lt;/code&gt; query). The &lt;code&gt;ret&lt;/code&gt; argument passed to the &lt;code&gt;callback&lt;/code&gt; function will be an array containing various types of records. Each object has a property &lt;code&gt;type&lt;/code&gt; that indicates the type of the current record. And depending on the &lt;code&gt;type&lt;/code&gt;, additional properties will be present on the object:</source>
          <target state="translated">使用DNS协议解析所有记录（也称为 &lt;code&gt;ANY&lt;/code&gt; 或 &lt;code&gt;*&lt;/code&gt; 查询）。传递给 &lt;code&gt;callback&lt;/code&gt; 函数的 &lt;code&gt;ret&lt;/code&gt; 参数将是一个包含各种记录类型的数组。每个对象都有一个指示当前记录类型的属性 &lt;code&gt;type&lt;/code&gt; 。并根据 &lt;code&gt;type&lt;/code&gt; ，对象上将出现其他属性：</target>
        </trans-unit>
        <trans-unit id="30c274b11b43436ca8e50e4b9bb064ebfa8da047" translate="yes" xml:space="preserve">
          <source>Uses the DNS protocol to resolve mail exchange records (&lt;code&gt;MX&lt;/code&gt; records) for the &lt;code&gt;hostname&lt;/code&gt;. On success, the &lt;code&gt;Promise&lt;/code&gt; is resolved with an array of objects containing both a &lt;code&gt;priority&lt;/code&gt; and &lt;code&gt;exchange&lt;/code&gt; property (e.g. &lt;code&gt;[{priority: 10, exchange: 'mx.example.com'}, ...]&lt;/code&gt;).</source>
          <target state="translated">使用DNS协议解析 &lt;code&gt;hostname&lt;/code&gt; 邮件交换记录（ &lt;code&gt;MX&lt;/code&gt; 记录）。成功后，将使用包含 &lt;code&gt;priority&lt;/code&gt; 和 &lt;code&gt;exchange&lt;/code&gt; 属性（例如 &lt;code&gt;[{priority: 10, exchange: 'mx.example.com'}, ...]&lt;/code&gt; ）的一系列对象来解决 &lt;code&gt;Promise&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="109d6398fcfc69ceb7fa119270ab376ba6aa392e" translate="yes" xml:space="preserve">
          <source>Uses the DNS protocol to resolve mail exchange records (&lt;code&gt;MX&lt;/code&gt; records) for the &lt;code&gt;hostname&lt;/code&gt;. The &lt;code&gt;addresses&lt;/code&gt; argument passed to the &lt;code&gt;callback&lt;/code&gt; function will contain an array of objects containing both a &lt;code&gt;priority&lt;/code&gt; and &lt;code&gt;exchange&lt;/code&gt; property (e.g. &lt;code&gt;[{priority: 10, exchange: 'mx.example.com'}, ...]&lt;/code&gt;).</source>
          <target state="translated">使用DNS协议解析 &lt;code&gt;hostname&lt;/code&gt; 邮件交换记录（ &lt;code&gt;MX&lt;/code&gt; 记录）。传递给 &lt;code&gt;callback&lt;/code&gt; 函数的 &lt;code&gt;addresses&lt;/code&gt; 参数将包含一个对象数组，该对象数组同时包含一个 &lt;code&gt;priority&lt;/code&gt; 和 &lt;code&gt;exchange&lt;/code&gt; 属性（例如 &lt;code&gt;[{priority: 10, exchange: 'mx.example.com'}, ...]&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="dc59fbd604c9eff0af9fa4244d01a2d19d4bd02a" translate="yes" xml:space="preserve">
          <source>Uses the DNS protocol to resolve name server records (&lt;code&gt;NS&lt;/code&gt; records) for the &lt;code&gt;hostname&lt;/code&gt;. On success, the &lt;code&gt;Promise&lt;/code&gt; is resolved with an array of name server records available for &lt;code&gt;hostname&lt;/code&gt; (e.g. &lt;code&gt;['ns1.example.com', 'ns2.example.com']&lt;/code&gt;).</source>
          <target state="translated">使用DNS协议解析 &lt;code&gt;hostname&lt;/code&gt; 名称服务器记录（ &lt;code&gt;NS&lt;/code&gt; 记录）。成功后，将使用可用于 &lt;code&gt;hostname&lt;/code&gt; 的名称服务器记录阵列（例如 &lt;code&gt;['ns1.example.com', 'ns2.example.com']&lt;/code&gt; ）来解决 &lt;code&gt;Promise&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a484c1ce770c84e5d673e21b1f4c11f303be390f" translate="yes" xml:space="preserve">
          <source>Uses the DNS protocol to resolve name server records (&lt;code&gt;NS&lt;/code&gt; records) for the &lt;code&gt;hostname&lt;/code&gt;. The &lt;code&gt;addresses&lt;/code&gt; argument passed to the &lt;code&gt;callback&lt;/code&gt; function will contain an array of name server records available for &lt;code&gt;hostname&lt;/code&gt; (e.g. &lt;code&gt;['ns1.example.com', 'ns2.example.com']&lt;/code&gt;).</source>
          <target state="translated">使用DNS协议解析 &lt;code&gt;hostname&lt;/code&gt; 名称服务器记录（ &lt;code&gt;NS&lt;/code&gt; 记录）。传递给 &lt;code&gt;callback&lt;/code&gt; 函数的 &lt;code&gt;addresses&lt;/code&gt; 参数将包含可用于 &lt;code&gt;hostname&lt;/code&gt; 的名称服务器记录数组（例如 &lt;code&gt;['ns1.example.com', 'ns2.example.com']&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="5f701aceb1092a30bfd015c6bc287c6570a19d1b" translate="yes" xml:space="preserve">
          <source>Uses the DNS protocol to resolve pointer records (&lt;code&gt;PTR&lt;/code&gt; records) for the &lt;code&gt;hostname&lt;/code&gt;. On success, the &lt;code&gt;Promise&lt;/code&gt; is resolved with an array of strings containing the reply records.</source>
          <target state="translated">使用DNS协议解析 &lt;code&gt;hostname&lt;/code&gt; 指针记录（ &lt;code&gt;PTR&lt;/code&gt; 记录）。成功后，将使用包含答复记录的字符串数组来解决 &lt;code&gt;Promise&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="51cf59a347f4849fe20aa2233c19cbb8407512e2" translate="yes" xml:space="preserve">
          <source>Uses the DNS protocol to resolve pointer records (&lt;code&gt;PTR&lt;/code&gt; records) for the &lt;code&gt;hostname&lt;/code&gt;. The &lt;code&gt;addresses&lt;/code&gt; argument passed to the &lt;code&gt;callback&lt;/code&gt; function will be an array of strings containing the reply records.</source>
          <target state="translated">使用DNS协议解析 &lt;code&gt;hostname&lt;/code&gt; 指针记录（ &lt;code&gt;PTR&lt;/code&gt; 记录）。传递给 &lt;code&gt;callback&lt;/code&gt; 函数的 &lt;code&gt;addresses&lt;/code&gt; 参数将是包含回复记录的字符串数组。</target>
        </trans-unit>
        <trans-unit id="3c00d6863ed2c84283db0b45a7fe5c8f979162e0" translate="yes" xml:space="preserve">
          <source>Uses the DNS protocol to resolve regular expression based records (&lt;code&gt;NAPTR&lt;/code&gt; records) for the &lt;code&gt;hostname&lt;/code&gt;. On success, the &lt;code&gt;Promise&lt;/code&gt; is resolved with an array of objects with the following properties:</source>
          <target state="translated">使用DNS协议解析 &lt;code&gt;hostname&lt;/code&gt; 基于正则表达式的记录（ &lt;code&gt;NAPTR&lt;/code&gt; 记录）。成功完成后，将使用具有以下属性的对象数组来解决 &lt;code&gt;Promise&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="dbf18146ec8d0d15c5714fd4e604aee38719c40f" translate="yes" xml:space="preserve">
          <source>Uses the DNS protocol to resolve regular expression based records (&lt;code&gt;NAPTR&lt;/code&gt; records) for the &lt;code&gt;hostname&lt;/code&gt;. The &lt;code&gt;addresses&lt;/code&gt; argument passed to the &lt;code&gt;callback&lt;/code&gt; function will contain an array of objects with the following properties:</source>
          <target state="translated">使用DNS协议解析 &lt;code&gt;hostname&lt;/code&gt; 基于正则表达式的记录（ &lt;code&gt;NAPTR&lt;/code&gt; 记录）。传递给 &lt;code&gt;callback&lt;/code&gt; 函数的 &lt;code&gt;addresses&lt;/code&gt; 参数将包含具有以下属性的对象数组：</target>
        </trans-unit>
        <trans-unit id="f6fadfed87100de6310ccfb92dbee96e3e654ff8" translate="yes" xml:space="preserve">
          <source>Uses the DNS protocol to resolve service records (&lt;code&gt;SRV&lt;/code&gt; records) for the &lt;code&gt;hostname&lt;/code&gt;. On success, the &lt;code&gt;Promise&lt;/code&gt; is resolved with an array of objects with the following properties:</source>
          <target state="translated">使用DNS协议解析 &lt;code&gt;hostname&lt;/code&gt; 服务记录（ &lt;code&gt;SRV&lt;/code&gt; 记录）。成功完成后，将使用具有以下属性的对象数组来解决 &lt;code&gt;Promise&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="73c844bbadf29a730e5b2f6bec825acea856f5b3" translate="yes" xml:space="preserve">
          <source>Uses the DNS protocol to resolve service records (&lt;code&gt;SRV&lt;/code&gt; records) for the &lt;code&gt;hostname&lt;/code&gt;. The &lt;code&gt;addresses&lt;/code&gt; argument passed to the &lt;code&gt;callback&lt;/code&gt; function will be an array of objects with the following properties:</source>
          <target state="translated">使用DNS协议解析 &lt;code&gt;hostname&lt;/code&gt; 服务记录（ &lt;code&gt;SRV&lt;/code&gt; 记录）。传递给 &lt;code&gt;callback&lt;/code&gt; 函数的 &lt;code&gt;addresses&lt;/code&gt; 参数将是具有以下属性的对象数组：</target>
        </trans-unit>
        <trans-unit id="c1829d47cc7a75e0eab657043bb6bf54db2a3b9d" translate="yes" xml:space="preserve">
          <source>Uses the DNS protocol to resolve text queries (&lt;code&gt;TXT&lt;/code&gt; records) for the &lt;code&gt;hostname&lt;/code&gt;. On success, the &lt;code&gt;Promise&lt;/code&gt; is resolved with a two-dimensional array of the text records available for &lt;code&gt;hostname&lt;/code&gt; (e.g. &lt;code&gt;[ ['v=spf1 ip4:0.0.0.0 ', '~all' ] ]&lt;/code&gt;). Each sub-array contains TXT chunks of one record. Depending on the use case, these could be either joined together or treated separately.</source>
          <target state="translated">使用DNS协议解析 &lt;code&gt;hostname&lt;/code&gt; 文本查询（ &lt;code&gt;TXT&lt;/code&gt; 记录）。成功后，将使用可用于 &lt;code&gt;hostname&lt;/code&gt; 的文本记录的二维数组来解决 &lt;code&gt;Promise&lt;/code&gt; （例如 &lt;code&gt;[ ['v=spf1 ip4:0.0.0.0 ', '~all' ] ]&lt;/code&gt; ）。每个子数组包含一个记录的TXT块。根据使用情况，可以将它们结合在一起或分开处理。</target>
        </trans-unit>
        <trans-unit id="d9d9bd15a950f14f1ee431ff23ce67682340f14c" translate="yes" xml:space="preserve">
          <source>Uses the DNS protocol to resolve text queries (&lt;code&gt;TXT&lt;/code&gt; records) for the &lt;code&gt;hostname&lt;/code&gt;. The &lt;code&gt;records&lt;/code&gt; argument passed to the &lt;code&gt;callback&lt;/code&gt; function is a two-dimensional array of the text records available for &lt;code&gt;hostname&lt;/code&gt; (e.g. &lt;code&gt;[ ['v=spf1 ip4:0.0.0.0 ', '~all' ] ]&lt;/code&gt;). Each sub-array contains TXT chunks of one record. Depending on the use case, these could be either joined together or treated separately.</source>
          <target state="translated">使用DNS协议解析 &lt;code&gt;hostname&lt;/code&gt; 文本查询（ &lt;code&gt;TXT&lt;/code&gt; 记录）。传递给 &lt;code&gt;callback&lt;/code&gt; 函数的 &lt;code&gt;records&lt;/code&gt; 参数是可用于 &lt;code&gt;hostname&lt;/code&gt; 的文本记录的二维数组（例如 &lt;code&gt;[ ['v=spf1 ip4:0.0.0.0 ', '~all' ] ]&lt;/code&gt; ）。每个子数组包含一个记录的TXT块。根据使用情况，可以将它们结合在一起或分开处理。</target>
        </trans-unit>
        <trans-unit id="616674bd4b150c64ea79003b2aaf1d39214fdf57" translate="yes" xml:space="preserve">
          <source>Using &lt;a href=&quot;#fs_fs_watch_filename_options_listener&quot;&gt;&lt;code&gt;fs.watch()&lt;/code&gt;&lt;/a&gt; is more efficient than &lt;code&gt;fs.watchFile()&lt;/code&gt; and &lt;code&gt;fs.unwatchFile()&lt;/code&gt;. &lt;code&gt;fs.watch()&lt;/code&gt; should be used instead of &lt;code&gt;fs.watchFile()&lt;/code&gt; and &lt;code&gt;fs.unwatchFile()&lt;/code&gt; when possible.</source>
          <target state="translated">使用&lt;a href=&quot;#fs_fs_watch_filename_options_listener&quot;&gt; &lt;code&gt;fs.watch()&lt;/code&gt; &lt;/a&gt;比 &lt;code&gt;fs.watchFile()&lt;/code&gt; 和 &lt;code&gt;fs.unwatchFile()&lt;/code&gt; 更有效。 &lt;code&gt;fs.watch()&lt;/code&gt; 应使用的 &lt;code&gt;fs.watchFile()&lt;/code&gt; 和 &lt;code&gt;fs.unwatchFile()&lt;/code&gt; 时可能的。</target>
        </trans-unit>
        <trans-unit id="7acdc60681bce725b5f723840ea2948503a011d1" translate="yes" xml:space="preserve">
          <source>Using &lt;a href=&quot;#fs_fs_watch_filename_options_listener&quot;&gt;&lt;code&gt;fs.watch()&lt;/code&gt;&lt;/a&gt; is more efficient than &lt;code&gt;fs.watchFile&lt;/code&gt; and &lt;code&gt;fs.unwatchFile&lt;/code&gt;. &lt;code&gt;fs.watch&lt;/code&gt; should be used instead of &lt;code&gt;fs.watchFile&lt;/code&gt; and &lt;code&gt;fs.unwatchFile&lt;/code&gt; when possible.</source>
          <target state="translated">使用&lt;a href=&quot;#fs_fs_watch_filename_options_listener&quot;&gt; &lt;code&gt;fs.watch()&lt;/code&gt; &lt;/a&gt;比 &lt;code&gt;fs.watchFile&lt;/code&gt; 和 &lt;code&gt;fs.unwatchFile&lt;/code&gt; 更有效。 &lt;code&gt;fs.watch&lt;/code&gt; 应该用来代替 &lt;code&gt;fs.watchFile&lt;/code&gt; 和 &lt;code&gt;fs.unwatchFile&lt;/code&gt; 在可能的情况。</target>
        </trans-unit>
        <trans-unit id="1d856b63c6bc2607094f4910592eaafc6767cf8e" translate="yes" xml:space="preserve">
          <source>Using &lt;a href=&quot;crypto#crypto_crypto_createcipher_algorithm_password_options&quot;&gt;&lt;code&gt;crypto.createCipher()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;crypto#crypto_crypto_createdecipher_algorithm_password_options&quot;&gt;&lt;code&gt;crypto.createDecipher()&lt;/code&gt;&lt;/a&gt; should be avoided as they use a weak key derivation function (MD5 with no salt) and static initialization vectors. It is recommended to derive a key using &lt;a href=&quot;crypto#crypto_crypto_pbkdf2_password_salt_iterations_keylen_digest_callback&quot;&gt;&lt;code&gt;crypto.pbkdf2()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;crypto#crypto_crypto_scrypt_password_salt_keylen_options_callback&quot;&gt;&lt;code&gt;crypto.scrypt()&lt;/code&gt;&lt;/a&gt; and to use &lt;a href=&quot;crypto#crypto_crypto_createcipheriv_algorithm_key_iv_options&quot;&gt;&lt;code&gt;crypto.createCipheriv()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;crypto#crypto_crypto_createdecipheriv_algorithm_key_iv_options&quot;&gt;&lt;code&gt;crypto.createDecipheriv()&lt;/code&gt;&lt;/a&gt; to obtain the &lt;a href=&quot;crypto#crypto_class_cipher&quot;&gt;&lt;code&gt;Cipher&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;crypto#crypto_class_decipher&quot;&gt;&lt;code&gt;Decipher&lt;/code&gt;&lt;/a&gt; objects respectively.</source>
          <target state="translated">应避免使用&lt;a href=&quot;crypto#crypto_crypto_createcipher_algorithm_password_options&quot;&gt; &lt;code&gt;crypto.createCipher()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;crypto#crypto_crypto_createdecipher_algorithm_password_options&quot;&gt; &lt;code&gt;crypto.createDecipher()&lt;/code&gt; ,&lt;/a&gt;因为它们使用了弱密钥派生函数（不带盐的MD5）和静态初始化向量。建议使用&lt;a href=&quot;crypto#crypto_crypto_pbkdf2_password_salt_iterations_keylen_digest_callback&quot;&gt; &lt;code&gt;crypto.pbkdf2()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;crypto#crypto_crypto_scrypt_password_salt_keylen_options_callback&quot;&gt; &lt;code&gt;crypto.scrypt()&lt;/code&gt; &lt;/a&gt;派生密钥，并建议使用&lt;a href=&quot;crypto#crypto_crypto_createcipheriv_algorithm_key_iv_options&quot;&gt; &lt;code&gt;crypto.createCipheriv()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;crypto#crypto_crypto_createdecipheriv_algorithm_key_iv_options&quot;&gt; &lt;code&gt;crypto.createDecipheriv()&lt;/code&gt; &lt;/a&gt;分别获取&lt;a href=&quot;crypto#crypto_class_cipher&quot;&gt; &lt;code&gt;Cipher&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;crypto#crypto_class_decipher&quot;&gt; &lt;code&gt;Decipher&lt;/code&gt; &lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="4b53d1b9edfc43df645d059459c36ecb01b6cc17" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;'readable'&lt;/code&gt; requires calling &lt;code&gt;.read()&lt;/code&gt;.</source>
          <target state="translated">使用 &lt;code&gt;'readable'&lt;/code&gt; 要求调用 &lt;code&gt;.read()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a0776ba10ce280120f92b94baeeaca430daff582" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;AsyncResource&lt;/code&gt; for a &lt;code&gt;Worker&lt;/code&gt; thread pool</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00f82cdad4ad46b131c753812c570f4c13076bc0" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;assert.doesNotReject()&lt;/code&gt; is actually not useful because there is little benefit in catching a rejection and then rejecting it again. Instead, consider adding a comment next to the specific code path that should not reject and keep error messages as expressive as possible.</source>
          <target state="translated">使用 &lt;code&gt;assert.doesNotReject()&lt;/code&gt; 实际上没有用，因为捕获拒绝然后再次拒绝几乎没有好处。相反，请考虑在特定的代码路径旁边添加一个注释，该注释不应拒绝并保持错误消息尽可能具有表现力。</target>
        </trans-unit>
        <trans-unit id="3df009e595692ba82d237e1bc93633ed46c2f125" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;assert.doesNotThrow()&lt;/code&gt; is actually not useful because there is no benefit in catching an error and then rethrowing it. Instead, consider adding a comment next to the specific code path that should not throw and keep error messages as expressive as possible.</source>
          <target state="translated">使用 &lt;code&gt;assert.doesNotThrow()&lt;/code&gt; 实际上没有用，因为捕获错误然后重新抛出错误没有任何好处。相反，请考虑在特定的代码路径旁边添加注释，该注释不应引发并保持错误消息尽可能具有表现力。</target>
        </trans-unit>
        <trans-unit id="8a7025ea485b11ba34d71bc4d34fa0cc905dbacf" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;assert.fail()&lt;/code&gt; with more than one argument is deprecated. Use &lt;code&gt;assert.fail()&lt;/code&gt; with only one argument or use a different &lt;code&gt;assert&lt;/code&gt; module method.</source>
          <target state="translated">不建议将 &lt;code&gt;assert.fail()&lt;/code&gt; 与多个参数一起使用。只能将 &lt;code&gt;assert.fail()&lt;/code&gt; 与一个参数一起使用，或者使用不同的 &lt;code&gt;assert&lt;/code&gt; 模块方法。</target>
        </trans-unit>
        <trans-unit id="2fab1e938204573f477a12aeb4d7d89efdf6f853" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;assert.fail()&lt;/code&gt; with more than two arguments is possible but deprecated. See below for further details.</source>
          <target state="translated">可以将 &lt;code&gt;assert.fail()&lt;/code&gt; 与两个以上的参数一起使用，但不建议使用。有关更多详细信息，请参见下文。</target>
        </trans-unit>
        <trans-unit id="e32aee247c3e1fa65dfda18102dd4efc4ac847de" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;async&lt;/code&gt; functions with event handlers is problematic, because it can lead to an unhandled rejection in case of a thrown exception:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1df525a3f01a20d07a7478823ea9706315ce03a1" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;cleartext&lt;/code&gt; has the same API as &lt;a href=&quot;#tls_class_tls_tlssocket&quot;&gt;&lt;code&gt;tls.TLSSocket&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">使用 &lt;code&gt;cleartext&lt;/code&gt; 具有与&lt;a href=&quot;#tls_class_tls_tlssocket&quot;&gt; &lt;code&gt;tls.TLSSocket&lt;/code&gt; &lt;/a&gt;相同的API 。</target>
        </trans-unit>
        <trans-unit id="b83dbd9102872f7df5e6cd66317d7029d871d346" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;executionAsyncResource()&lt;/code&gt; in the top-level execution context will return an empty object as there is no handle or request object to use, but having an object representing the top-level can be helpful.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="014449c1eec2b95f43b792ba5e16cf560609f257" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;fs.access()&lt;/code&gt; to check for the accessibility of a file before calling &lt;code&gt;fs.open()&lt;/code&gt;, &lt;code&gt;fs.readFile()&lt;/code&gt; or &lt;code&gt;fs.writeFile()&lt;/code&gt; is not recommended. Doing so introduces a race condition, since other processes may change the file's state between the two calls. Instead, user code should open/read/write the file directly and handle the error raised if the file is not accessible.</source>
          <target state="translated">不建议在调用 &lt;code&gt;fs.open()&lt;/code&gt; ， &lt;code&gt;fs.readFile()&lt;/code&gt; 或 &lt;code&gt;fs.writeFile()&lt;/code&gt; 之前使用 &lt;code&gt;fs.access()&lt;/code&gt; 检查文件的可访问性。这样做会引入竞争条件，因为其他进程可能会在两次调用之间更改文件的状态。而是，用户代码应直接打开/读取/写入文件，并处理无法访问文件时引发的错误。</target>
        </trans-unit>
        <trans-unit id="e5a8a3949f23f51bf204d9b3ac70d7f2b96dab32" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;fs.exists()&lt;/code&gt; to check for the existence of a file before calling &lt;code&gt;fs.open()&lt;/code&gt;, &lt;code&gt;fs.readFile()&lt;/code&gt; or &lt;code&gt;fs.writeFile()&lt;/code&gt; is not recommended. Doing so introduces a race condition, since other processes may change the file's state between the two calls. Instead, user code should open/read/write the file directly and handle the error raised if the file does not exist.</source>
          <target state="translated">使用 &lt;code&gt;fs.exists()&lt;/code&gt; 调用之前检查文件是否存在 &lt;code&gt;fs.open()&lt;/code&gt; ， &lt;code&gt;fs.readFile()&lt;/code&gt; 或 &lt;code&gt;fs.writeFile()&lt;/code&gt; 不推荐。这样做会引入竞争条件，因为其他进程可能会在两次调用之间更改文件的状态。而是，用户代码应直接打开/读取/写入文件，并处理文件不存在时引发的错误。</target>
        </trans-unit>
        <trans-unit id="970e60822303aa19d5df0e3b029d9e1d8c3b3bec" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;fs.rmdir()&lt;/code&gt; on a file (not a directory) results in an &lt;code&gt;ENOENT&lt;/code&gt; error on Windows and an &lt;code&gt;ENOTDIR&lt;/code&gt; error on POSIX.</source>
          <target state="translated">在文件（而非目录 &lt;code&gt;fs.rmdir()&lt;/code&gt; 上使用fs.rmdir（）会在Windows上导致 &lt;code&gt;ENOENT&lt;/code&gt; 错误，而在POSIX 上导致 &lt;code&gt;ENOTDIR&lt;/code&gt; 错误。</target>
        </trans-unit>
        <trans-unit id="bf6ef6db0ae8640548b812e024c0fa7a48f1c482" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;fs.rmdirSync()&lt;/code&gt; on a file (not a directory) results in an &lt;code&gt;ENOENT&lt;/code&gt; error on Windows and an &lt;code&gt;ENOTDIR&lt;/code&gt; error on POSIX.</source>
          <target state="translated">在文件（而非目录 &lt;code&gt;fs.rmdirSync()&lt;/code&gt; 上使用fs.rmdirSync（）会在Windows上导致 &lt;code&gt;ENOENT&lt;/code&gt; 错误，而在POSIX 上导致 &lt;code&gt;ENOTDIR&lt;/code&gt; 错误。</target>
        </trans-unit>
        <trans-unit id="a9f914be0f6e22f62b0aedd8bc70861ee2deabaa" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;fs.stat()&lt;/code&gt; to check for the existence of a file before calling &lt;code&gt;fs.open()&lt;/code&gt;, &lt;code&gt;fs.readFile()&lt;/code&gt; or &lt;code&gt;fs.writeFile()&lt;/code&gt; is not recommended. Instead, user code should open/read/write the file directly and handle the error raised if the file is not available.</source>
          <target state="translated">不建议在调用 &lt;code&gt;fs.open()&lt;/code&gt; ， &lt;code&gt;fs.readFile()&lt;/code&gt; 或 &lt;code&gt;fs.writeFile()&lt;/code&gt; 之前使用 &lt;code&gt;fs.stat()&lt;/code&gt; 检查文件是否存在。而是，用户代码应直接打开/读取/写入文件，并在文件不可用时处理引发的错误。</target>
        </trans-unit>
        <trans-unit id="866bfc24ae093b35297a6e8aab3beb28ab1fd1f4" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;fs.writeFile()&lt;/code&gt; with File Descriptors</source>
          <target state="translated">将 &lt;code&gt;fs.writeFile()&lt;/code&gt; 与文件描述符一起使用</target>
        </trans-unit>
        <trans-unit id="335c637b7e6b77e8111a742f9e57617c84a27b7c" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;fs.writeFile()&lt;/code&gt; with file descriptors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a5d496423749962cb5512ba1b233acfcd0078b4" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;fsPromises.access()&lt;/code&gt; to check for the accessibility of a file before calling &lt;code&gt;fsPromises.open()&lt;/code&gt; is not recommended. Doing so introduces a race condition, since other processes may change the file's state between the two calls. Instead, user code should open/read/write the file directly and handle the error raised if the file is not accessible.</source>
          <target state="translated">不建议在调用 &lt;code&gt;fsPromises.open()&lt;/code&gt; 之前使用 &lt;code&gt;fsPromises.access()&lt;/code&gt; 检查文件的可访问性。这样做会引入竞争条件，因为其他进程可能会在两次调用之间更改文件的状态。而是，用户代码应直接打开/读取/写入文件，并处理无法访问文件时引发的错误。</target>
        </trans-unit>
        <trans-unit id="c607cf90a0d8916415b340eb0252a8713b884eb8" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;fsPromises.rmdir()&lt;/code&gt; on a file (not a directory) results in the &lt;code&gt;Promise&lt;/code&gt; being rejected with an &lt;code&gt;ENOENT&lt;/code&gt; error on Windows and an &lt;code&gt;ENOTDIR&lt;/code&gt; error on POSIX.</source>
          <target state="translated">在文件（而非目录 &lt;code&gt;fsPromises.rmdir()&lt;/code&gt; 上使用fsPromises.rmdir（）会导致 &lt;code&gt;Promise&lt;/code&gt; 被拒绝，在Windows 上出现 &lt;code&gt;ENOENT&lt;/code&gt; 错误，在POSIX 上出现 &lt;code&gt;ENOTDIR&lt;/code&gt; 错误。</target>
        </trans-unit>
        <trans-unit id="07472a684a532bb4eee8dd81f03cb60e9e4331c6" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;options.selectPadding()&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;options.selectPadding()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="81de70c1267400cfc41cc7333bc90195bd61f1a0" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;process.binding()&lt;/code&gt; in general should be avoided. The type checking methods in particular can be replaced by using &lt;a href=&quot;util#util_util_types&quot;&gt;&lt;code&gt;util.types&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">通常应避免使用 &lt;code&gt;process.binding()&lt;/code&gt; 。类型检查方法尤其可以使用&lt;a href=&quot;util#util_util_types&quot;&gt; &lt;code&gt;util.types&lt;/code&gt; 代替&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7d9d256692251bf585c474d243da24c4bf848c2c" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;promisify()&lt;/code&gt; on class methods or other methods that use &lt;code&gt;this&lt;/code&gt; may not work as expected unless handled specially:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71279ee197c5f01129ef5e543cfc6f739195ac37" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;require&lt;/code&gt; to load an ES module is not supported because ES modules have asynchronous execution. Instead, use use &lt;a href=&quot;#esm_import_expressions&quot;&gt;&lt;code&gt;import()&lt;/code&gt;&lt;/a&gt; to load an ES module from a CommonJS module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f9fa4662d9e59fdef4b483f80021b9e3a425c60" translate="yes" xml:space="preserve">
          <source>Using OpenSSL store allows for external modifications of the store. For most Linux and BSD distributions, this store is maintained by the distribution maintainers and system administrators. OpenSSL CA store location is dependent on configuration of the OpenSSL library but this can be altered at runtime using environment variables.</source>
          <target state="translated">使用OpenSSL商店可以对商店进行外部修改。对于大多数Linux和BSD发行版来说,这个存储是由发行版维护者和系统管理员维护的。OpenSSL CA商店的位置取决于OpenSSL库的配置,但这可以在运行时使用环境变量进行修改。</target>
        </trans-unit>
        <trans-unit id="0ddc3e6b3b925cb8ef6a355cbeeeb58f94dd4be4" translate="yes" xml:space="preserve">
          <source>Using WHATWG &lt;a href=&quot;url#url_the_whatwg_url_api&quot;&gt;&lt;code&gt;URL&lt;/code&gt;&lt;/a&gt; objects might introduce platform-specific behaviors.</source>
          <target state="translated">使用WHATWG &lt;a href=&quot;url#url_the_whatwg_url_api&quot;&gt; &lt;code&gt;URL&lt;/code&gt; &lt;/a&gt;对象可能会引入特定于平台的行为。</target>
        </trans-unit>
        <trans-unit id="9024760327c0026f81de6546b338f59f0dbed57d" translate="yes" xml:space="preserve">
          <source>Using a &lt;code&gt;vm.Module&lt;/code&gt; object requires three distinct steps: creation/parsing, linking, and evaluation. These three steps are illustrated in the following example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e0ad87979a98d2f046dff89a35addd29f2194ab" translate="yes" xml:space="preserve">
          <source>Using a &lt;code&gt;vm.SourceTextModule&lt;/code&gt; object requires four distinct steps: creation/parsing, linking, instantiation, and evaluation. These four steps are illustrated in the following example.</source>
          <target state="translated">使用 &lt;code&gt;vm.SourceTextModule&lt;/code&gt; 对象需要四个不同的步骤：创建/解析，链接，实例化和评估。以下示例说明了这四个步骤。</target>
        </trans-unit>
        <trans-unit id="c9b23dcc63cc7270d9b15447d12ff7f9dfd57376" translate="yes" xml:space="preserve">
          <source>Using a property named &lt;code&gt;inspect&lt;/code&gt; on an object to specify a custom inspection function for &lt;a href=&quot;util#util_util_inspect_object_options&quot;&gt;&lt;code&gt;util.inspect()&lt;/code&gt;&lt;/a&gt; is deprecated. Use &lt;a href=&quot;util#util_util_inspect_custom&quot;&gt;&lt;code&gt;util.inspect.custom&lt;/code&gt;&lt;/a&gt; instead. For backward compatibility with Node.js prior to version 6.4.0, both can be specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcf15580a7b8d6e22735987585fb71e72c7b9956" translate="yes" xml:space="preserve">
          <source>Using a property named &lt;code&gt;inspect&lt;/code&gt; on an object to specify a custom inspection function for &lt;a href=&quot;util#util_util_inspect_object_options&quot;&gt;&lt;code&gt;util.inspect()&lt;/code&gt;&lt;/a&gt; is deprecated. Use &lt;a href=&quot;util#util_util_inspect_custom&quot;&gt;&lt;code&gt;util.inspect.custom&lt;/code&gt;&lt;/a&gt; instead. For backward compatibility with Node.js prior to version 6.4.0, both may be specified.</source>
          <target state="translated">不建议使用在对象上使用名为 &lt;code&gt;inspect&lt;/code&gt; 的属性为&lt;a href=&quot;util#util_util_inspect_object_options&quot;&gt; &lt;code&gt;util.inspect()&lt;/code&gt; &lt;/a&gt;指定自定义检查功能。请改用&lt;a href=&quot;util#util_util_inspect_custom&quot;&gt; &lt;code&gt;util.inspect.custom&lt;/code&gt; &lt;/a&gt;。为了与6.4.0之前的Node.js向后兼容，可以同时指定两者。</target>
        </trans-unit>
        <trans-unit id="088c5711cb1136a04d7d37ed97c2ab691586c0df" translate="yes" xml:space="preserve">
          <source>Using a regular expression runs &lt;code&gt;.toString&lt;/code&gt; on the error object, and will therefore also include the error name.</source>
          <target state="translated">使用正则表达式在错误对象上运行 &lt;code&gt;.toString&lt;/code&gt; ，因此还将包括错误名称。</target>
        </trans-unit>
        <trans-unit id="09fba33f227f6c3a033ebafcb4b5bbd4a4ad47b5" translate="yes" xml:space="preserve">
          <source>Using a timer to detect approximate event loop delay works because the execution of timers is tied specifically to the lifecycle of the libuv event loop. That is, a delay in the loop will cause a delay in the execution of the timer, and those delays are specifically what this API is intended to detect.</source>
          <target state="translated">使用定时器来检测近似的事件循环延迟是可行的,因为定时器的执行是与libuv事件循环的生命周期具体联系在一起的,也就是说,循环的延迟会导致定时器的执行延迟,而这些延迟正是这个API所要检测的。也就是说,循环中的延迟会导致定时器执行的延迟,而这些延迟正是这个API所要检测的具体内容。</target>
        </trans-unit>
        <trans-unit id="0e89804501b3927f4e3765d3fa4f23cb1fd82b30" translate="yes" xml:space="preserve">
          <source>Using invalid characters within an HTTP header field name will cause the stream to be closed with a protocol error being reported.</source>
          <target state="translated">在HTTP头字段名中使用无效字符将导致流被关闭并报告协议错误。</target>
        </trans-unit>
        <trans-unit id="6ae1a5ec2d8cfc6ba65f3c09bb2fe2404975a0fd" translate="yes" xml:space="preserve">
          <source>Using stream methods such as &lt;code&gt;write(data)&lt;/code&gt;, &lt;code&gt;end(data)&lt;/code&gt; or &lt;code&gt;pipe()&lt;/code&gt; in CCM mode might fail as CCM cannot handle more than one chunk of data per instance.</source>
          <target state="translated">在CCM模式下使用诸如 &lt;code&gt;write(data)&lt;/code&gt; ， &lt;code&gt;end(data)&lt;/code&gt; 或 &lt;code&gt;pipe()&lt;/code&gt; 之类的流方法可能会失败，因为CCM无法为每个实例处理多个数据块。</target>
        </trans-unit>
        <trans-unit id="127dafee70173e34186216b2c8f8c09db267903c" translate="yes" xml:space="preserve">
          <source>Using the &lt;a href=&quot;#crypto_cipher_update_data_inputencoding_outputencoding&quot;&gt;&lt;code&gt;cipher.update()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#crypto_cipher_final_outputencoding&quot;&gt;&lt;code&gt;cipher.final()&lt;/code&gt;&lt;/a&gt; methods to produce the encrypted data.</source>
          <target state="translated">使用&lt;a href=&quot;#crypto_cipher_update_data_inputencoding_outputencoding&quot;&gt; &lt;code&gt;cipher.update()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#crypto_cipher_final_outputencoding&quot;&gt; &lt;code&gt;cipher.final()&lt;/code&gt; &lt;/a&gt;方法生成加密数据。</target>
        </trans-unit>
        <trans-unit id="4f251efb4db5e9c8a5087bef9044351fae0d9331" translate="yes" xml:space="preserve">
          <source>Using the &lt;a href=&quot;#crypto_decipher_update_data_inputencoding_outputencoding&quot;&gt;&lt;code&gt;decipher.update()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#crypto_decipher_final_outputencoding&quot;&gt;&lt;code&gt;decipher.final()&lt;/code&gt;&lt;/a&gt; methods to produce the unencrypted data.</source>
          <target state="translated">使用&lt;a href=&quot;#crypto_decipher_update_data_inputencoding_outputencoding&quot;&gt; &lt;code&gt;decipher.update()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#crypto_decipher_final_outputencoding&quot;&gt; &lt;code&gt;decipher.final()&lt;/code&gt; &lt;/a&gt;方法生成未加密的数据。</target>
        </trans-unit>
        <trans-unit id="64be152252122733e4bbc53b6ae8d30fe4a43dfa" translate="yes" xml:space="preserve">
          <source>Using the &lt;a href=&quot;#crypto_hash_update_data_inputencoding&quot;&gt;&lt;code&gt;hash.update()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#crypto_hash_digest_encoding&quot;&gt;&lt;code&gt;hash.digest()&lt;/code&gt;&lt;/a&gt; methods to produce the computed hash.</source>
          <target state="translated">使用&lt;a href=&quot;#crypto_hash_update_data_inputencoding&quot;&gt; &lt;code&gt;hash.update()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#crypto_hash_digest_encoding&quot;&gt; &lt;code&gt;hash.digest()&lt;/code&gt; &lt;/a&gt;方法生成计算出的哈希。</target>
        </trans-unit>
        <trans-unit id="c7e8e3be278fe75f9d2fd0de66e184b886ca17f4" translate="yes" xml:space="preserve">
          <source>Using the &lt;a href=&quot;#crypto_hmac_update_data_inputencoding&quot;&gt;&lt;code&gt;hmac.update()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#crypto_hmac_digest_encoding&quot;&gt;&lt;code&gt;hmac.digest()&lt;/code&gt;&lt;/a&gt; methods to produce the computed HMAC digest.</source>
          <target state="translated">使用&lt;a href=&quot;#crypto_hmac_update_data_inputencoding&quot;&gt; &lt;code&gt;hmac.update()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#crypto_hmac_digest_encoding&quot;&gt; &lt;code&gt;hmac.digest()&lt;/code&gt; &lt;/a&gt;方法生成计算出的HMAC摘要。</target>
        </trans-unit>
        <trans-unit id="67f4f0b34dd18e7592930fb00cda12215d238144" translate="yes" xml:space="preserve">
          <source>Using the &lt;a href=&quot;#crypto_sign_update_data_inputencoding&quot;&gt;&lt;code&gt;sign.update()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#crypto_sign_sign_privatekey_outputencoding&quot;&gt;&lt;code&gt;sign.sign()&lt;/code&gt;&lt;/a&gt; methods to produce the signature.</source>
          <target state="translated">使用&lt;a href=&quot;#crypto_sign_update_data_inputencoding&quot;&gt; &lt;code&gt;sign.update()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#crypto_sign_sign_privatekey_outputencoding&quot;&gt; &lt;code&gt;sign.sign()&lt;/code&gt; &lt;/a&gt;方法生成签名。</target>
        </trans-unit>
        <trans-unit id="bc23ae8e8540ed779fd8566342f072b035c26f81" translate="yes" xml:space="preserve">
          <source>Using the &lt;a href=&quot;#crypto_verify_update_data_inputencoding&quot;&gt;&lt;code&gt;verify.update()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#crypto_verify_verify_object_signature_signatureencoding&quot;&gt;&lt;code&gt;verify.verify()&lt;/code&gt;&lt;/a&gt; methods to verify the signature.</source>
          <target state="translated">使用&lt;a href=&quot;#crypto_verify_update_data_inputencoding&quot;&gt; &lt;code&gt;verify.update()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#crypto_verify_verify_object_signature_signatureencoding&quot;&gt; &lt;code&gt;verify.verify()&lt;/code&gt; &lt;/a&gt;方法来验证签名。</target>
        </trans-unit>
        <trans-unit id="1c1528a393c438992217fc1628dac9e34225dbec" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;&quot;import&quot;&lt;/code&gt; and &lt;code&gt;&quot;require&quot;&lt;/code&gt; conditions can lead to some hazards, which are further explained in &lt;a href=&quot;#packages_dual_commonjs_es_module_packages&quot;&gt;the dual CommonJS/ES module packages section&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb25820ec4ba15c58d1aef843277d65ff7264047" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;--no-deprecation&lt;/code&gt; command line flag will suppress all reporting of the custom deprecation.</source>
          <target state="translated">使用 &lt;code&gt;--no-deprecation&lt;/code&gt; 命令行标志将禁止自定义弃用的所有报告。</target>
        </trans-unit>
        <trans-unit id="3cfbf93b670c4a35f238c70ab57bf106e5b849c9" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;--no-deprecation&lt;/code&gt; command-line flag will suppress all reporting of the custom deprecation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="beb85e77bb17580639378b9767ab4b8f3f18878a" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;--trace-deprecation&lt;/code&gt; command line flag will cause the custom deprecation to be printed to &lt;code&gt;stderr&lt;/code&gt; along with the stack trace.</source>
          <target state="translated">使用 &lt;code&gt;--trace-deprecation&lt;/code&gt; 命令行标志将导致自定义弃用与堆栈跟踪一起打印到 &lt;code&gt;stderr&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="58b0ea8ad0986c815bfa086203f4052b8a4075eb" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;--trace-deprecation&lt;/code&gt; command-line flag will cause the custom deprecation to be printed to &lt;code&gt;stderr&lt;/code&gt; along with the stack trace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1aade48dc74184bf3018e802b560bc9fdde1529a" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;eventEmitter.once()&lt;/code&gt; method, it is possible to register a listener that is called at most once for a particular event. Once the event is emitted, the listener is unregistered and &lt;em&gt;then&lt;/em&gt; called.</source>
          <target state="translated">使用 &lt;code&gt;eventEmitter.once()&lt;/code&gt; 方法，可以注册针对特定事件最多被调用一次的侦听器。发出事件后，将取消注册监听器，&lt;em&gt;然后&lt;/em&gt;调用该监听器。</target>
        </trans-unit>
        <trans-unit id="76c7bac3d55ead2fa3d5ee94ca9f99c7c33e9a42" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;noAssert&lt;/code&gt; argument has no functionality anymore. All input is going to be verified, no matter if it is set to true or not. Skipping the verification could lead to hard to find errors and crashes.</source>
          <target state="translated">使用 &lt;code&gt;noAssert&lt;/code&gt; 参数不再具有任何功能。无论是否将其设置为true，所有输入都将被验证。跳过验证可能导致难以发现错误和崩溃。</target>
        </trans-unit>
        <trans-unit id="75bf5fd5057c88a02149a0ccbe74842e13ef3ab9" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;timeout&lt;/code&gt; or &lt;code&gt;breakOnSigint&lt;/code&gt; options will result in new event loops and corresponding threads being started, which have a non-zero performance overhead.</source>
          <target state="translated">使用 &lt;code&gt;timeout&lt;/code&gt; 或 &lt;code&gt;breakOnSigint&lt;/code&gt; 选项将导致新的事件循环和相应的线程被启动，这将导致非零性能开销。</target>
        </trans-unit>
        <trans-unit id="97b15491568eb88678c0630c2498ffe3eb457850" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;util.promisify.custom&lt;/code&gt; symbol one can override the return value of &lt;a href=&quot;#util_util_promisify_original&quot;&gt;&lt;code&gt;util.promisify()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">使用 &lt;code&gt;util.promisify.custom&lt;/code&gt; 符号可以覆盖&lt;a href=&quot;#util_util_promisify_original&quot;&gt; &lt;code&gt;util.promisify()&lt;/code&gt; &lt;/a&gt;的返回值：</target>
        </trans-unit>
        <trans-unit id="fef65abe276369de6a7f627f0f824c09d9010621" translate="yes" xml:space="preserve">
          <source>Using the Node.js REPL with advanced line-editors</source>
          <target state="translated">使用Node.js REPL和高级行编辑器</target>
        </trans-unit>
        <trans-unit id="7328f5c7c59ba3af2610c9a943fda05bd71b6ac5" translate="yes" xml:space="preserve">
          <source>Using the method and parameters given by &lt;code&gt;algorithm&lt;/code&gt; and the keying material provided by &lt;code&gt;key&lt;/code&gt;, &lt;code&gt;subtle.sign()&lt;/code&gt; attempts to generate a cryptographic signature of &lt;code&gt;data&lt;/code&gt;. If successful, the returned promise is resolved with an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer&quot;&gt;&amp;lt;ArrayBuffer&amp;gt;&lt;/a&gt; containing the generated signature.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0550897b357b50919d983a5a08b40321e1020e5a" translate="yes" xml:space="preserve">
          <source>Using the method and parameters given in &lt;code&gt;algorithm&lt;/code&gt; and the keying material provided by &lt;code&gt;key&lt;/code&gt;, &lt;code&gt;subtle.verify()&lt;/code&gt; attempts to verify that &lt;code&gt;signature&lt;/code&gt; is a valid cryptographic signature of &lt;code&gt;data&lt;/code&gt;. The returned promise is resolved with either &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd75df4f898d0a8260e76ac2471d4e0cb6001495" translate="yes" xml:space="preserve">
          <source>Using the method and parameters provided in &lt;code&gt;algorithm&lt;/code&gt;, &lt;code&gt;subtle.generateKey()&lt;/code&gt; attempts to generate new keying material. Depending the method used, the method may generate either a single &lt;a href=&quot;webcrypto#webcrypto_class_cryptokey&quot;&gt;&amp;lt;CryptoKey&amp;gt;&lt;/a&gt; or a &lt;a href=&quot;webcrypto#webcrypto_class_cryptokeypair&quot;&gt;&amp;lt;CryptoKeyPair&amp;gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff8a97499c1a0fef025c19e37d1fdcb3b9749a54" translate="yes" xml:space="preserve">
          <source>Using the method and parameters specified by &lt;code&gt;algorithm&lt;/code&gt; and the keying material provided by &lt;code&gt;key&lt;/code&gt;, &lt;code&gt;subtle.encrypt()&lt;/code&gt; attempts to encipher &lt;code&gt;data&lt;/code&gt;. If successful, the returned promise is resolved with an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer&quot;&gt;&amp;lt;ArrayBuffer&amp;gt;&lt;/a&gt; containing the encrypted result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b685ede9ec73b82334a4d6a026af50ed779b939a" translate="yes" xml:space="preserve">
          <source>Using the method and parameters specified in &lt;code&gt;algorithm&lt;/code&gt; and the keying material provided by &lt;code&gt;baseKey&lt;/code&gt;, &lt;code&gt;subtle.deriveBits()&lt;/code&gt; attempts to generate &lt;code&gt;length&lt;/code&gt; bits. The Node.js implementation requires that &lt;code&gt;length&lt;/code&gt; is a multiple of &lt;code&gt;8&lt;/code&gt;. If successful, the returned promise will be resolved with an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer&quot;&gt;&amp;lt;ArrayBuffer&amp;gt;&lt;/a&gt; containing the generated data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="329bc16a9f339512e66fcd94fc126a6b0e2d6f00" translate="yes" xml:space="preserve">
          <source>Using the method and parameters specified in &lt;code&gt;algorithm&lt;/code&gt; and the keying material provided by &lt;code&gt;key&lt;/code&gt;, &lt;code&gt;subtle.decrypt()&lt;/code&gt; attempts to decipher the provided &lt;code&gt;data&lt;/code&gt;. If successful, the returned promise will be resolved with an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer&quot;&gt;&amp;lt;ArrayBuffer&amp;gt;&lt;/a&gt; containing the plaintext result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7bc73140bc0a85391234d71c752cc5842d6b97c" translate="yes" xml:space="preserve">
          <source>Using the method and parameters specified in &lt;code&gt;algorithm&lt;/code&gt;, and the keying material provided by &lt;code&gt;baseKey&lt;/code&gt;, &lt;code&gt;subtle.deriveKey()&lt;/code&gt; attempts to generate a new &lt;a href=&quot;webcrypto#webcrypto_class_cryptokey&quot;&gt;&amp;lt;CryptoKey&amp;gt;&lt;/a&gt; based on the method and parameters in &lt;code&gt;derivedKeyAlgorithm&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1e4e36e1fe7e0c80cded4e1c209428b480cd429" translate="yes" xml:space="preserve">
          <source>Using the method identified by &lt;code&gt;algorithm&lt;/code&gt;, &lt;code&gt;subtle.digest()&lt;/code&gt; attempts to generate a digest of &lt;code&gt;data&lt;/code&gt;. If successful, the returned promise is resolved with an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer&quot;&gt;&amp;lt;ArrayBuffer&amp;gt;&lt;/a&gt; containing the computed digest.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1416cd9b70255f5e8b906ccade9b66d4be132754" translate="yes" xml:space="preserve">
          <source>Using the worker's unique id is the easiest way to locate the worker.</source>
          <target state="translated">使用工人的唯一id是定位工人的最简单方法。</target>
        </trans-unit>
        <trans-unit id="89b4493de3d831021cc129eb07c2fd6b4e897a68" translate="yes" xml:space="preserve">
          <source>Using this flag allows to change what should happen when an unhandled rejection occurs. One of the following modes can be chosen:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5d1341a74557dbb20bf54caa7e5e21ff2a54cbf" translate="yes" xml:space="preserve">
          <source>Using this flag allows to change what should happen when an unhandled rejection occurs. One of three modes can be chosen:</source>
          <target state="translated">使用这个标志可以改变当发生未处理的拒绝时应该发生什么。可以选择三种模式之一。</target>
        </trans-unit>
        <trans-unit id="44a6c833440a89de21d1119627e5bdd4e162ca03" translate="yes" xml:space="preserve">
          <source>Using this function is mutually exclusive with using the deprecated &lt;a href=&quot;domain&quot;&gt;&lt;code&gt;domain&lt;/code&gt;&lt;/a&gt; built-in module.</source>
          <target state="translated">使用此功能与使用不赞成使用的&lt;a href=&quot;domain&quot;&gt; &lt;code&gt;domain&lt;/code&gt; &lt;/a&gt;置模块互斥。</target>
        </trans-unit>
        <trans-unit id="a406802ec60c173518984b9e73db43db31538d00" translate="yes" xml:space="preserve">
          <source>Using this on a timer that has already called its callback will reactivate the timer.</source>
          <target state="translated">在已经调用了回调的定时器上使用该功能将重新激活定时器。</target>
        </trans-unit>
        <trans-unit id="4c31156efed35ee7814650f8971c3698059440e3" translate="yes" xml:space="preserve">
          <source>Util</source>
          <target state="translated">Util</target>
        </trans-unit>
        <trans-unit id="18fdc5ee8b1f8fba8dabaa933373c0483ab7fad7" translate="yes" xml:space="preserve">
          <source>Utilities</source>
          <target state="translated">Utilities</target>
        </trans-unit>
        <trans-unit id="b8b097d0eea0934533ba237923021e6a341048fe" translate="yes" xml:space="preserve">
          <source>V8</source>
          <target state="translated">V8</target>
        </trans-unit>
        <trans-unit id="d72bb28caa036c763c48ffce7432d03efc797595" translate="yes" xml:space="preserve">
          <source>V8 Inspector Integration for Node.js</source>
          <target state="translated">Node.js的V8 Inspector集成</target>
        </trans-unit>
        <trans-unit id="cabd879dfeef746d08c749d5af715f589036a5b1" translate="yes" xml:space="preserve">
          <source>V8 Inspector can be enabled by passing the &lt;code&gt;--inspect&lt;/code&gt; flag when starting a Node.js application. It is also possible to supply a custom port with that flag, e.g. &lt;code&gt;--inspect=9222&lt;/code&gt; will accept DevTools connections on port 9222.</source>
          <target state="translated">可以通过在启动Node.js应用程序时传递 &lt;code&gt;--inspect&lt;/code&gt; 标志来启用V8检查器。也可以为自定义端口提供该标志，例如 &lt;code&gt;--inspect=9222&lt;/code&gt; 将接受端口9222上的DevTools连接。</target>
        </trans-unit>
        <trans-unit id="9bdd712745068212698e2ff31a51cc113ecfb32e" translate="yes" xml:space="preserve">
          <source>V8 Inspector integration allows attaching Chrome DevTools to Node.js instances for debugging and profiling. It uses the &lt;a href=&quot;https://chromedevtools.github.io/devtools-protocol/&quot;&gt;Chrome DevTools Protocol&lt;/a&gt;.</source>
          <target state="translated">V8 Inspector集成允许将Chrome DevTools附加到Node.js实例以进行调试和分析。它使用&lt;a href=&quot;https://chromedevtools.github.io/devtools-protocol/&quot;&gt;Chrome DevTools协议&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0695bb193877756fc54a72ca47f48f1583220e62" translate="yes" xml:space="preserve">
          <source>V8 has its own set of CLI options. Any V8 CLI option that is provided to &lt;code&gt;node&lt;/code&gt; will be passed on to V8 to handle. V8's options have &lt;em&gt;no stability guarantee&lt;/em&gt;. The V8 team themselves don't consider them to be part of their formal API, and reserve the right to change them at any time. Likewise, they are not covered by the Node.js stability guarantees. Many of the V8 options are of interest only to V8 developers. Despite this, there is a small set of V8 options that are widely applicable to Node.js, and they are documented here:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18746efcdacafb5421ac3876f8538e235a64b91d" translate="yes" xml:space="preserve">
          <source>V8 inspector integration allows tools such as Chrome DevTools and IDEs to debug and profile Node.js instances. The tools attach to Node.js instances via a tcp port and communicate using the &lt;a href=&quot;https://chromedevtools.github.io/devtools-protocol/&quot;&gt;Chrome DevTools Protocol&lt;/a&gt;.</source>
          <target state="translated">V8检查器集成允许Chrome DevTools和IDE等工具调试和配置Node.js实例。这些工具通过tcp端口连接到Node.js实例，并使用&lt;a href=&quot;https://chromedevtools.github.io/devtools-protocol/&quot;&gt;Chrome DevTools协议进行&lt;/a&gt;通信。</target>
        </trans-unit>
        <trans-unit id="28b99136362001f8842d1ba7dd740d8b6cf55c58" translate="yes" xml:space="preserve">
          <source>V8 inspector integration for Node.js</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fb5b6ec0ebc7cc5b53865e6b15aed12de71598b" translate="yes" xml:space="preserve">
          <source>V8 options that are allowed are:</source>
          <target state="translated">允许的V8选项有:</target>
        </trans-unit>
        <trans-unit id="8a7d326dfb5b6af4779be16c67127f3a43de3ca1" translate="yes" xml:space="preserve">
          <source>V8 per-process requirements, such as a &lt;code&gt;v8::Platform&lt;/code&gt; instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a93137526f7cbc73e7e9d50d14c1c433440b1b0e" translate="yes" xml:space="preserve">
          <source>V8: the C++ library Node.js currently uses to provide the JavaScript implementation. V8 provides the mechanisms for creating objects, calling functions, etc. V8's API is documented mostly in the &lt;code&gt;v8.h&lt;/code&gt; header file (&lt;code&gt;deps/v8/include/v8.h&lt;/code&gt; in the Node.js source tree), which is also available &lt;a href=&quot;https://v8docs.nodesource.com/&quot;&gt;online&lt;/a&gt;.</source>
          <target state="translated">V8：Node.js当前使用的C ++库提供JavaScript实现。V8提供了用于创建对象，调用函数等的机制 &lt;code&gt;v8.h&lt;/code&gt; 的API主要记录在v8.h头文件（Node.js源树中的 &lt;code&gt;deps/v8/include/v8.h&lt;/code&gt; ）中，该文件也可以&lt;a href=&quot;https://v8docs.nodesource.com/&quot;&gt;在线获得&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fa9b1b42d23723b880299a1e8d6f48ff3becf2ce" translate="yes" xml:space="preserve">
          <source>V8: the C++ library Node.js uses to provide the JavaScript implementation. V8 provides the mechanisms for creating objects, calling functions, etc. V8's API is documented mostly in the &lt;code&gt;v8.h&lt;/code&gt; header file (&lt;code&gt;deps/v8/include/v8.h&lt;/code&gt; in the Node.js source tree), which is also available &lt;a href=&quot;https://v8docs.nodesource.com/&quot;&gt;online&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="494e5398b739ace80c2800a4e5b3cd1fb68001cf" translate="yes" xml:space="preserve">
          <source>VM</source>
          <target state="translated">VM</target>
        </trans-unit>
        <trans-unit id="dbe377a114ceb49b6128d4c1ccda27673cda2b2b" translate="yes" xml:space="preserve">
          <source>VM (Executing JavaScript)</source>
          <target state="translated">VM(执行JavaScript)</target>
        </trans-unit>
        <trans-unit id="0af4bf1819c48bb84742feec149353f7191c2e13" translate="yes" xml:space="preserve">
          <source>VM (executing JavaScript)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb8f27aea3185e30c92158b5a72b5e68427a8747" translate="yes" xml:space="preserve">
          <source>Valid TLS protocol versions are &lt;code&gt;'TLSv1'&lt;/code&gt;, &lt;code&gt;'TLSv1.1'&lt;/code&gt;, or &lt;code&gt;'TLSv1.2'&lt;/code&gt;.</source>
          <target state="translated">有效的TLS协议版本为 &lt;code&gt;'TLSv1'&lt;/code&gt; ， &lt;code&gt;'TLSv1.1'&lt;/code&gt; 或 &lt;code&gt;'TLSv1.2'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a987e7a89129aa23cb3e6c2551267ffab5bdfaa7" translate="yes" xml:space="preserve">
          <source>Valid key usages depend on the key algorithm (identified by &lt;code&gt;cryptokey.algorithm.name&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="393b0cd2d2b4c056628251cd2e23912b2a26f716" translate="yes" xml:space="preserve">
          <source>Valid values are &lt;code&gt;&quot;commonjs&quot;&lt;/code&gt; and &lt;code&gt;&quot;module&quot;&lt;/code&gt;. The default is &lt;code&gt;&quot;commonjs&quot;&lt;/code&gt;.</source>
          <target state="translated">有效值为 &lt;code&gt;&quot;commonjs&quot;&lt;/code&gt; 和 &lt;code&gt;&quot;module&quot;&lt;/code&gt; 。默认值为 &lt;code&gt;&quot;commonjs&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a528ab622db5be3124b720c51ff8a564a3515496" translate="yes" xml:space="preserve">
          <source>Validate error message using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions&quot;&gt;&lt;code&gt;RegExp&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">使用&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions&quot;&gt; &lt;code&gt;RegExp&lt;/code&gt; &lt;/a&gt;验证错误消息：</target>
        </trans-unit>
        <trans-unit id="81b25ad8225f7ecb896fabebec88216239869060" translate="yes" xml:space="preserve">
          <source>Validate instanceof using constructor:</source>
          <target state="translated">使用构造函数验证instanceof。</target>
        </trans-unit>
        <trans-unit id="8ef03321a63fe1d0ebb05c543908688a331dd8ae" translate="yes" xml:space="preserve">
          <source>Validation errors occur when an incorrect argument, option, or setting value is passed in. These will always be reported by a synchronous &lt;code&gt;throw&lt;/code&gt;.</source>
          <target state="translated">传递不正确的参数，选项或设置值时，将发生验证错误。这些错误将始终通过同步 &lt;code&gt;throw&lt;/code&gt; 报告。</target>
        </trans-unit>
        <trans-unit id="8dce170de238b1feda2ecd9674ea3ca0d068fbcb" translate="yes" xml:space="preserve">
          <source>Value</source>
          <target state="translated">Value</target>
        </trans-unit>
        <trans-unit id="27d2412cca245376cbe8f7b65f5729cd3d3ae3c9" translate="yes" xml:space="preserve">
          <source>Value is &lt;code&gt;undefined&lt;/code&gt; if the &lt;code&gt;Http2Session&lt;/code&gt; session socket has not yet been connected, &lt;code&gt;true&lt;/code&gt; if the &lt;code&gt;Http2Session&lt;/code&gt; is connected with a &lt;code&gt;TLSSocket&lt;/code&gt;, and &lt;code&gt;false&lt;/code&gt; if the &lt;code&gt;Http2Session&lt;/code&gt; is connected to any other kind of socket or stream.</source>
          <target state="translated">值是 &lt;code&gt;undefined&lt;/code&gt; ，如果 &lt;code&gt;Http2Session&lt;/code&gt; 会话插槽尚未连接， &lt;code&gt;true&lt;/code&gt; 如果 &lt;code&gt;Http2Session&lt;/code&gt; 与连接 &lt;code&gt;TLSSocket&lt;/code&gt; 和 &lt;code&gt;false&lt;/code&gt; 如果 &lt;code&gt;Http2Session&lt;/code&gt; 连接到任何其他类型的插座或流。</target>
        </trans-unit>
        <trans-unit id="b1b2d39b70dc3fb0257610327d062b71a8c39503" translate="yes" xml:space="preserve">
          <source>Value may now only be &lt;code&gt;undefined&lt;/code&gt; or &lt;code&gt;null&lt;/code&gt;. Before all falsy values were handled the same as &lt;code&gt;null&lt;/code&gt; and did not throw.</source>
          <target state="translated">现在值只能是 &lt;code&gt;undefined&lt;/code&gt; 或 &lt;code&gt;null&lt;/code&gt; 。在处理所有伪造的值之前，将其与 &lt;code&gt;null&lt;/code&gt; 相同，并且不会抛出异常。</target>
        </trans-unit>
        <trans-unit id="384f69d4253fbebb54d8368317298745f013ef88" translate="yes" xml:space="preserve">
          <source>Value will be &lt;code&gt;undefined&lt;/code&gt; if the &lt;code&gt;Http2Session&lt;/code&gt; is not yet connected to a socket, &lt;code&gt;h2c&lt;/code&gt; if the &lt;code&gt;Http2Session&lt;/code&gt; is not connected to a &lt;code&gt;TLSSocket&lt;/code&gt;, or will return the value of the connected &lt;code&gt;TLSSocket&lt;/code&gt;'s own &lt;code&gt;alpnProtocol&lt;/code&gt; property.</source>
          <target state="translated">值将 &lt;code&gt;undefined&lt;/code&gt; ，如果 &lt;code&gt;Http2Session&lt;/code&gt; 尚未连接到插座， &lt;code&gt;h2c&lt;/code&gt; 如果 &lt;code&gt;Http2Session&lt;/code&gt; 没有连接到 &lt;code&gt;TLSSocket&lt;/code&gt; ，或将返回连接的价值 &lt;code&gt;TLSSocket&lt;/code&gt; 自己 &lt;code&gt;alpnProtocol&lt;/code&gt; 财产。</target>
        </trans-unit>
        <trans-unit id="3374585616cd19cdf8913de105924c8996485ee4" translate="yes" xml:space="preserve">
          <source>Value: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type&quot;&gt;&amp;lt;boolean&amp;gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99bfc53543bae130b78974f3ac786581c4580860" translate="yes" xml:space="preserve">
          <source>Value: &lt;code&gt;Symbol.for('nodejs.rejection')&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="719b833bb97b00a6ee4444c1d9b2ce985e6a1a74" translate="yes" xml:space="preserve">
          <source>Values can be either numbers representing Unix epoch time in seconds, &lt;code&gt;Date&lt;/code&gt;s, or a numeric string like &lt;code&gt;'123456789.0'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9b183d756719a245acd620179f819dd9041ffd2" translate="yes" xml:space="preserve">
          <source>Values can be either numbers representing Unix epoch time, &lt;code&gt;Date&lt;/code&gt;s, or a numeric string like &lt;code&gt;'123456789.0'&lt;/code&gt;.</source>
          <target state="translated">值可以是代表Unix纪元时间的数字， &lt;code&gt;Date&lt;/code&gt; ，也可以是数字字符串，例如 &lt;code&gt;'123456789.0'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="53c0bb5f3d02bff6545de0ad72cc4c3a77afccdb" translate="yes" xml:space="preserve">
          <source>Values that are not part of the format string are formatted using &lt;code&gt;util.inspect()&lt;/code&gt; if their type is not &lt;code&gt;string&lt;/code&gt;.</source>
          <target state="translated">如果值的类型不是 &lt;code&gt;string&lt;/code&gt; ,则使用 &lt;code&gt;util.inspect()&lt;/code&gt; 格式化不属于格式字符串的值。</target>
        </trans-unit>
        <trans-unit id="8c84c56936b14a1634315a3aa83091b5dcfaa5b5" translate="yes" xml:space="preserve">
          <source>Variables local to the module will be private, because the module is wrapped in a function by Node.js (see &lt;a href=&quot;#modules_the_module_wrapper&quot;&gt;module wrapper&lt;/a&gt;). In this example, the variable &lt;code&gt;PI&lt;/code&gt; is private to &lt;code&gt;circle.js&lt;/code&gt;.</source>
          <target state="translated">模块本地变量将是私有的，因为Node.js将模块包装在一个函数中（请参阅&lt;a href=&quot;#modules_the_module_wrapper&quot;&gt;模块包装器&lt;/a&gt;）。在此示例中，变量 &lt;code&gt;PI&lt;/code&gt; 是 &lt;code&gt;circle.js&lt;/code&gt; 私有的。</target>
        </trans-unit>
        <trans-unit id="075be6a60b145b1ce1b874ce5a76b369cdd0b469" translate="yes" xml:space="preserve">
          <source>Various</source>
          <target state="translated">Various</target>
        </trans-unit>
        <trans-unit id="5a8e182151fdcadd9117a606819b5b815c60f49d" translate="yes" xml:space="preserve">
          <source>Various behaviors of the Node.js REPL can be customized using the following environment variables:</source>
          <target state="translated">Node.js REPL的各种行为可以使用以下环境变量进行自定义。</target>
        </trans-unit>
        <trans-unit id="63ed65929f9b05267e5a93a328e53542d3c61717" translate="yes" xml:space="preserve">
          <source>Various networking APIs will call &lt;code&gt;dns.lookup()&lt;/code&gt; internally to resolve host names. If that is an issue, consider resolving the host name to an address using &lt;code&gt;dns.resolve()&lt;/code&gt; and using the address instead of a host name. Also, some networking APIs (such as &lt;a href=&quot;net#net_socket_connect_options_connectlistener&quot;&gt;&lt;code&gt;socket.connect()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;dgram#dgram_dgram_createsocket_options_callback&quot;&gt;&lt;code&gt;dgram.createSocket()&lt;/code&gt;&lt;/a&gt;) allow the default resolver, &lt;code&gt;dns.lookup()&lt;/code&gt;, to be replaced.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c96b8eeb58d81747d1411796da291708a9308b67" translate="yes" xml:space="preserve">
          <source>Various networking APIs will call &lt;code&gt;dns.lookup()&lt;/code&gt; internally to resolve host names. If that is an issue, consider resolving the hostname to an address using &lt;code&gt;dns.resolve()&lt;/code&gt; and using the address instead of a host name. Also, some networking APIs (such as &lt;a href=&quot;net#net_socket_connect_options_connectlistener&quot;&gt;&lt;code&gt;socket.connect()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;dgram#dgram_dgram_createsocket_options_callback&quot;&gt;&lt;code&gt;dgram.createSocket()&lt;/code&gt;&lt;/a&gt;) allow the default resolver, &lt;code&gt;dns.lookup()&lt;/code&gt;, to be replaced.</source>
          <target state="translated">各种网络API将在内部调用 &lt;code&gt;dns.lookup()&lt;/code&gt; 来解析主机名。如果这是一个问题，请考虑使用 &lt;code&gt;dns.resolve()&lt;/code&gt; 将主机名解析为一个地址，并使用该地址而不是主机名。另外，某些联网API（例如&lt;a href=&quot;net#net_socket_connect_options_connectlistener&quot;&gt; &lt;code&gt;socket.connect()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;dgram#dgram_dgram_createsocket_options_callback&quot;&gt; &lt;code&gt;dgram.createSocket()&lt;/code&gt; &lt;/a&gt;）允许替换默认的解析程序 &lt;code&gt;dns.lookup()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b390264aee088cb79da9e392cde3a01f345279e2" translate="yes" xml:space="preserve">
          <source>Verifies the certificate &lt;code&gt;cert&lt;/code&gt; is issued to &lt;code&gt;hostname&lt;/code&gt;.</source>
          <target state="translated">验证证书 &lt;code&gt;cert&lt;/code&gt; 颁发给 &lt;code&gt;hostname&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7a70b5dbdbc521149cff80d733ae43d7c43b9c7c" translate="yes" xml:space="preserve">
          <source>Verifies the given signature for &lt;code&gt;data&lt;/code&gt; using the given key and algorithm. If &lt;code&gt;algorithm&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt;, then the algorithm is dependent upon the key type (especially Ed25519 and Ed448).</source>
          <target state="translated">使用给定的密钥和算法验证给定的 &lt;code&gt;data&lt;/code&gt; 签名。如果 &lt;code&gt;algorithm&lt;/code&gt; 为 &lt;code&gt;null&lt;/code&gt; 或 &lt;code&gt;undefined&lt;/code&gt; ，则算法取决于密钥类型（尤其是Ed25519和Ed448）。</target>
        </trans-unit>
        <trans-unit id="c802399b8ccd9918dcfcec45fe61466996fd99af" translate="yes" xml:space="preserve">
          <source>Verifies the provided data using the given &lt;code&gt;object&lt;/code&gt; and &lt;code&gt;signature&lt;/code&gt;.</source>
          <target state="translated">使用给定的 &lt;code&gt;object&lt;/code&gt; 和 &lt;code&gt;signature&lt;/code&gt; 验证提供的数据。</target>
        </trans-unit>
        <trans-unit id="dda6ac27b9d3b234a68e8b2c412e90ab5a03a4e1" translate="yes" xml:space="preserve">
          <source>Verify</source>
          <target state="translated">Verify</target>
        </trans-unit>
        <trans-unit id="2da600bf9404843107a9531694f654e5662959e0" translate="yes" xml:space="preserve">
          <source>Version</source>
          <target state="translated">Version</target>
        </trans-unit>
        <trans-unit id="53b449b15b889b1bdc8c4adba25d7f5d77268215" translate="yes" xml:space="preserve">
          <source>Version Management</source>
          <target state="translated">版本管理</target>
        </trans-unit>
        <trans-unit id="6df95f05b4f3bc565b7412688db876c215c30e58" translate="yes" xml:space="preserve">
          <source>Version management</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2415cb7f63df0c9de23362326ad3c37a9adfc96" translate="yes" xml:space="preserve">
          <source>W</source>
          <target state="translated">W</target>
        </trans-unit>
        <trans-unit id="84367e806ed16f93cd67aba890fbaef52d16a0b0" translate="yes" xml:space="preserve">
          <source>WASI</source>
          <target state="translated">WASI</target>
        </trans-unit>
        <trans-unit id="50147dd0e338da6e654eba9af1030e40f73121ed" translate="yes" xml:space="preserve">
          <source>WHATWG API</source>
          <target state="translated">WHATWG API</target>
        </trans-unit>
        <trans-unit id="49ba0e373af06482bcd7581a6a5ec7546822ccf5" translate="yes" xml:space="preserve">
          <source>WHATWG Supported Encodings</source>
          <target state="translated">WHATWG支持的编码</target>
        </trans-unit>
        <trans-unit id="67198102e3d66c7df492b61bda67c0480340d548" translate="yes" xml:space="preserve">
          <source>WHATWG URL Parser</source>
          <target state="translated">WHATWG URL解析器</target>
        </trans-unit>
        <trans-unit id="a6c20faa9094807e512be33285730d967b0f5fa0" translate="yes" xml:space="preserve">
          <source>WHATWG URL's &lt;code&gt;origin&lt;/code&gt; property includes &lt;code&gt;protocol&lt;/code&gt; and &lt;code&gt;host&lt;/code&gt;, but not &lt;code&gt;username&lt;/code&gt; or &lt;code&gt;password&lt;/code&gt;.</source>
          <target state="translated">WHATWG URL的 &lt;code&gt;origin&lt;/code&gt; 属性包括 &lt;code&gt;protocol&lt;/code&gt; 和 &lt;code&gt;host&lt;/code&gt; ，但不包括 &lt;code&gt;username&lt;/code&gt; 或 &lt;code&gt;password&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1a23d1b755affd82fb4b985673a55f141e42ed04" translate="yes" xml:space="preserve">
          <source>WHATWG supported encodings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="beab9fd3086850e64e9b1822421a582494860e7c" translate="yes" xml:space="preserve">
          <source>Wait for server &lt;code&gt;QuicSession&lt;/code&gt; instances; or</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2cf74613ac46317886ce4819718d05b8611088d" translate="yes" xml:space="preserve">
          <source>Warning: Don't Ignore Errors!</source>
          <target state="translated">警告:不要忽视错误!</target>
        </trans-unit>
        <trans-unit id="1a381fabac245f16381f9fcc429f3d58cda41f8f" translate="yes" xml:space="preserve">
          <source>Warning: Don't ignore errors!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba74e05534617d2ea02ad96b1b65727a369644b9" translate="yes" xml:space="preserve">
          <source>Warning: Using &lt;code&gt;'uncaughtException'&lt;/code&gt; correctly</source>
          <target state="translated">警告：正确使用 &lt;code&gt;'uncaughtException'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="88c9b3b7035c622e0f389e01ba6cf0e17f9a8035" translate="yes" xml:space="preserve">
          <source>Warning: binding inspector to a public IP:port combination is insecure</source>
          <target state="translated">警告:将检查器绑定到公共IP:端口组合是不安全的。</target>
        </trans-unit>
        <trans-unit id="5572df96747c775e74faaf9fbcff598c0868e454" translate="yes" xml:space="preserve">
          <source>Wasm modules</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cc3642e79938d3a54d70cdcf5471b1c853bb99c" translate="yes" xml:space="preserve">
          <source>Watch for changes on &lt;code&gt;filename&lt;/code&gt;, where &lt;code&gt;filename&lt;/code&gt; is either a file or a directory.</source>
          <target state="translated">监视 &lt;code&gt;filename&lt;/code&gt; 的更改，其中 &lt;code&gt;filename&lt;/code&gt; 是文件或目录。</target>
        </trans-unit>
        <trans-unit id="3cc8e7672ff86422896943e5f086f88c2cb556a9" translate="yes" xml:space="preserve">
          <source>Watch for changes on &lt;code&gt;filename&lt;/code&gt;. The callback &lt;code&gt;listener&lt;/code&gt; will be called each time the file is accessed.</source>
          <target state="translated">注意 &lt;code&gt;filename&lt;/code&gt; 更改。每次访问文件时都会调用回调 &lt;code&gt;listener&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cdc01934e544fe692a8a590e35cab70ab09f9b33" translate="yes" xml:space="preserve">
          <source>Watchers</source>
          <target state="translated">Watchers</target>
        </trans-unit>
        <trans-unit id="994fd9faac8b6e6f0fb4f4db18b10bc4de502de5" translate="yes" xml:space="preserve">
          <source>We are not endorsed by or affiliated with Joyent.</source>
          <target state="translated">我们没有得到Joyent的认可,也不隶属于Joyent。</target>
        </trans-unit>
        <trans-unit id="7d95a3ca55b65642f528e4081042f0f3f23c8511" translate="yes" xml:space="preserve">
          <source>We can construct a Node.js Readable Stream from an asynchronous generator using the &lt;code&gt;Readable.from()&lt;/code&gt; utility method:</source>
          <target state="translated">我们可以使用 &lt;code&gt;Readable.from()&lt;/code&gt; 实用程序方法从异步生成器构造Node.js可读流：</target>
        </trans-unit>
        <trans-unit id="2caad1f379f9a1c6cd05c938b7dd3f820e135760" translate="yes" xml:space="preserve">
          <source>We can construct a Node.js readable stream from an asynchronous generator using the &lt;code&gt;Readable.from()&lt;/code&gt; utility method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d22ce1330ab24cd772e12179abf27c3f4e3a3767" translate="yes" xml:space="preserve">
          <source>Web Crypto API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="051061c35dede06e751f127657cfd8dabc9b47ce" translate="yes" xml:space="preserve">
          <source>WebAssembly</source>
          <target state="translated">WebAssembly</target>
        </trans-unit>
        <trans-unit id="db0624b3355092508d71740bf70a2f3d923a7aa7" translate="yes" xml:space="preserve">
          <source>WebAssembly System Interface (WASI)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="895286b9ffc9d778c00bb9c441eadee44988cc4d" translate="yes" xml:space="preserve">
          <source>What does it mean to &quot;contextify&quot; an object?</source>
          <target state="translated">什么叫 &quot;情境化 &quot;的对象?</target>
        </trans-unit>
        <trans-unit id="ea899a2b4f85a243eb31293d0815ef8d517aa58c" translate="yes" xml:space="preserve">
          <source>What makes &lt;code&gt;Buffer.allocUnsafe()&lt;/code&gt; and &lt;code&gt;Buffer.allocUnsafeSlow()&lt;/code&gt; &quot;unsafe&quot;?</source>
          <target state="translated">是什么使 &lt;code&gt;Buffer.allocUnsafe()&lt;/code&gt; 和 &lt;code&gt;Buffer.allocUnsafeSlow()&lt;/code&gt; 成为 &amp;ldquo;不安全&amp;rdquo;？</target>
        </trans-unit>
        <trans-unit id="a5ff49b6cb64f5bd92a07be45aae4e9be901e2eb" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;#fs_fs_readdir_path_options_callback&quot;&gt;&lt;code&gt;fs.readdir()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#fs_fs_readdirsync_path_options&quot;&gt;&lt;code&gt;fs.readdirSync()&lt;/code&gt;&lt;/a&gt; is called with the &lt;code&gt;withFileTypes&lt;/code&gt; option set to &lt;code&gt;true&lt;/code&gt;, the resulting array is filled with &lt;code&gt;fs.Dirent&lt;/code&gt; objects, rather than strings or &lt;code&gt;Buffers&lt;/code&gt;.</source>
          <target state="translated">在将 &lt;code&gt;withFileTypes&lt;/code&gt; 选项设置为 &lt;code&gt;true&lt;/code&gt; 的情况下调用&lt;a href=&quot;#fs_fs_readdir_path_options_callback&quot;&gt; &lt;code&gt;fs.readdir()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#fs_fs_readdirsync_path_options&quot;&gt; &lt;code&gt;fs.readdirSync()&lt;/code&gt; 时&lt;/a&gt;，结果数组将填充 &lt;code&gt;fs.Dirent&lt;/code&gt; 对象，而不是字符串或 &lt;code&gt;Buffers&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f2c50750aec5f7dfc5188b6d2b5475a40f7a9f36" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;#stream_readable_read_size_1&quot;&gt;&lt;code&gt;readable._read()&lt;/code&gt;&lt;/a&gt; is called, if data is available from the resource, the implementation should begin pushing that data into the read queue using the &lt;a href=&quot;#stream_readable_push_chunk_encoding&quot;&gt;&lt;code&gt;this.push(dataChunk)&lt;/code&gt;&lt;/a&gt; method. &lt;code&gt;_read()&lt;/code&gt; should continue reading from the resource and pushing data until &lt;code&gt;readable.push()&lt;/code&gt; returns &lt;code&gt;false&lt;/code&gt;. Only when &lt;code&gt;_read()&lt;/code&gt; is called again after it has stopped should it resume pushing additional data onto the queue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd82acd7823cb8417adc5ed62f046044d1b1434e" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;SIGUSR1&lt;/code&gt; is received by a Node.js process, Node.js will start the debugger. See &lt;a href=&quot;#process_signal_events&quot;&gt;Signal Events&lt;/a&gt;.</source>
          <target state="translated">当Node.js进程收到 &lt;code&gt;SIGUSR1&lt;/code&gt; 时，Node.js将启动调试器。请参阅&lt;a href=&quot;#process_signal_events&quot;&gt;信号事件&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="dc9b3892e250b09e2ccf1ba6dcba82854161c467" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;assert.doesNotThrow()&lt;/code&gt; is called, it will immediately call the &lt;code&gt;fn&lt;/code&gt; function.</source>
          <target state="translated">当 &lt;code&gt;assert.doesNotThrow()&lt;/code&gt; 被调用时，它会立即拨打 &lt;code&gt;fn&lt;/code&gt; 功能。</target>
        </trans-unit>
        <trans-unit id="c51a7ae7f92cedc40838aa3599bed7de4ae3f59c" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;autoPadding&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;, the length of the entire input data must be a multiple of the cipher's block size or &lt;a href=&quot;#crypto_cipher_final_outputencoding&quot;&gt;&lt;code&gt;cipher.final()&lt;/code&gt;&lt;/a&gt; will throw an error. Disabling automatic padding is useful for non-standard padding, for instance using &lt;code&gt;0x0&lt;/code&gt; instead of PKCS padding.</source>
          <target state="translated">当 &lt;code&gt;autoPadding&lt;/code&gt; 为 &lt;code&gt;false&lt;/code&gt; 时，整个输入数据的长度必须是密码块大小的倍数，否则&lt;a href=&quot;#crypto_cipher_final_outputencoding&quot;&gt; &lt;code&gt;cipher.final()&lt;/code&gt; &lt;/a&gt;将引发错误。禁用自动填充对于非标准填充很有用，例如，使用 &lt;code&gt;0x0&lt;/code&gt; 代替PKCS填充。</target>
        </trans-unit>
        <trans-unit id="d5b4788c570217c4c4cd383fd70f220b520d0f3f" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;chunk&lt;/code&gt; is a &lt;code&gt;Buffer&lt;/code&gt;, &lt;code&gt;Uint8Array&lt;/code&gt; or &lt;code&gt;string&lt;/code&gt;, the &lt;code&gt;chunk&lt;/code&gt; of data will be added to the internal queue for users of the stream to consume. Passing &lt;code&gt;chunk&lt;/code&gt; as &lt;code&gt;null&lt;/code&gt; signals the end of the stream (EOF), after which no more data can be written.</source>
          <target state="translated">当 &lt;code&gt;chunk&lt;/code&gt; 是 &lt;code&gt;Buffer&lt;/code&gt; ， &lt;code&gt;Uint8Array&lt;/code&gt; 或 &lt;code&gt;string&lt;/code&gt; 时，数据 &lt;code&gt;chunk&lt;/code&gt; 将添加到内部队列中，以供流用户使用。将 &lt;code&gt;chunk&lt;/code&gt; 作为 &lt;code&gt;null&lt;/code&gt; 传递表示流的结尾（EOF），此后无法再写入数据。</target>
        </trans-unit>
        <trans-unit id="4f925a53c29c5bcd12a5d6dfdd3867f89f8364a3" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;delay&lt;/code&gt; is larger than &lt;code&gt;2147483647&lt;/code&gt; or less than &lt;code&gt;1&lt;/code&gt;, the &lt;code&gt;delay&lt;/code&gt; will be set to &lt;code&gt;1&lt;/code&gt;. Non-integer delays are truncated to an integer.</source>
          <target state="translated">当 &lt;code&gt;delay&lt;/code&gt; 大于 &lt;code&gt;2147483647&lt;/code&gt; 或小于 &lt;code&gt;1&lt;/code&gt; 时， &lt;code&gt;delay&lt;/code&gt; 将设置为 &lt;code&gt;1&lt;/code&gt; 。非整数延迟被截断为整数。</target>
        </trans-unit>
        <trans-unit id="c5f55b3490002d692e1a0bc547c5d27f68d920cd" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;encoding&lt;/code&gt; is being passed, the &lt;code&gt;byteOffset&lt;/code&gt; parameter is no longer required.</source>
          <target state="translated">当 &lt;code&gt;encoding&lt;/code&gt; 被传递，所述 &lt;code&gt;byteOffset&lt;/code&gt; 参数不再需要。</target>
        </trans-unit>
        <trans-unit id="5f4541cc38a816abc8f23ec4b8971b3ebd174a1a" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;file&lt;/code&gt; is a file descriptor, the behavior is almost identical to directly calling &lt;code&gt;fs.write()&lt;/code&gt; like:</source>
          <target state="translated">当 &lt;code&gt;file&lt;/code&gt; 是文件描述符时，其行为几乎与直接调用 &lt;code&gt;fs.write()&lt;/code&gt; 相同，例如：</target>
        </trans-unit>
        <trans-unit id="2701fff05e428233b787d036477d25103b1785f2" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;file&lt;/code&gt; is a file descriptor, the behavior is similar to calling &lt;code&gt;fs.write()&lt;/code&gt; directly (which is recommended). See the notes below on using a file descriptor.</source>
          <target state="translated">当 &lt;code&gt;file&lt;/code&gt; 是文件描述符时，其行为类似于直接调用 &lt;code&gt;fs.write()&lt;/code&gt; （建议）。请参阅以下有关使用文件描述符的注释。</target>
        </trans-unit>
        <trans-unit id="90ac1e3daacaea2849e260a99067b74ddaee1919" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;file&lt;/code&gt; is a filename, asynchronously writes data to the file, replacing the file if it already exists. &lt;code&gt;data&lt;/code&gt; can be a string or a buffer.</source>
          <target state="translated">如果 &lt;code&gt;file&lt;/code&gt; 是文件名，则将数据异步写入文件，如果文件已经存在，则将其替换。 &lt;code&gt;data&lt;/code&gt; 可以是字符串或缓冲区。</target>
        </trans-unit>
        <trans-unit id="6fae7e3a5f019a0902ac6919aec620f66f32a1e8" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;format&lt;/code&gt; is &lt;code&gt;'jwk'&lt;/code&gt; and the export is successful, the returned promise will be resolved with a JavaScript object conforming to the &lt;a href=&quot;https://tools.ietf.org/html/rfc7517&quot;&gt;JSON Web Key&lt;/a&gt; specification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1281287fb6cbb852cce4f82592cc1ef45ca96d01" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;format&lt;/code&gt; is either &lt;code&gt;'pkcs8'&lt;/code&gt; or &lt;code&gt;'spki'&lt;/code&gt; and the export is successful, the returned promise will be resolved with an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer&quot;&gt;&amp;lt;ArrayBuffer&amp;gt;&lt;/a&gt; containing the exported key data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be558d668e858413c7f08029fc6140d8cc4aaa06" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;main.js&lt;/code&gt; loads &lt;code&gt;a.js&lt;/code&gt;, then &lt;code&gt;a.js&lt;/code&gt; in turn loads &lt;code&gt;b.js&lt;/code&gt;. At that point, &lt;code&gt;b.js&lt;/code&gt; tries to load &lt;code&gt;a.js&lt;/code&gt;. In order to prevent an infinite loop, an &lt;strong&gt;unfinished copy&lt;/strong&gt; of the &lt;code&gt;a.js&lt;/code&gt; exports object is returned to the &lt;code&gt;b.js&lt;/code&gt; module. &lt;code&gt;b.js&lt;/code&gt; then finishes loading, and its &lt;code&gt;exports&lt;/code&gt; object is provided to the &lt;code&gt;a.js&lt;/code&gt; module.</source>
          <target state="translated">当 &lt;code&gt;main.js&lt;/code&gt; 负载 &lt;code&gt;a.js&lt;/code&gt; ，然后 &lt;code&gt;a.js&lt;/code&gt; 依次加载 &lt;code&gt;b.js&lt;/code&gt; 。在这一点上， &lt;code&gt;b.js&lt;/code&gt; 尝试加载 &lt;code&gt;a.js&lt;/code&gt; 。为了防止无限循环，将 &lt;code&gt;a.js&lt;/code&gt; 导出对象的&lt;strong&gt;未完成副本&lt;/strong&gt;返回到 &lt;code&gt;b.js&lt;/code&gt; 模块。然后 &lt;code&gt;b.js&lt;/code&gt; 完成加载，并将其 &lt;code&gt;exports&lt;/code&gt; 对象提供给 &lt;code&gt;a.js&lt;/code&gt; 模块。</target>
        </trans-unit>
        <trans-unit id="116dd83b9194432a786c2f883396dbf7da0f9614" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;node-gyp&lt;/code&gt; runs, it will detect the specific release version of Node.js and download either the full source tarball or just the headers. If the full source is downloaded, Addons will have complete access to the full set of Node.js dependencies. However, if only the Node.js headers are downloaded, then only the symbols exported by Node.js will be available.</source>
          <target state="translated">当 &lt;code&gt;node-gyp&lt;/code&gt; 运行时，它将检测到特定版本的Node.js，并下载完整的源tarball或仅下载标头。如果下载了完整源代码，则Addons将具有对完整Node.js依赖项的完整访问权限。但是，如果仅下载Node.js标头，则只有Node.js导出的符号可用。</target>
        </trans-unit>
        <trans-unit id="5c3380def0df49b31f9e57740ec509df8706002f" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;node-gyp&lt;/code&gt; runs, it will detect the specific release version of Node.js and download either the full source tarball or just the headers. If the full source is downloaded, addons will have complete access to the full set of Node.js dependencies. However, if only the Node.js headers are downloaded, then only the symbols exported by Node.js will be available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d0a3872ff2b1c3b6aad0d9e67dc6a7b215bb7bb" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;options.buffered&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;, the &lt;code&gt;callback&lt;/code&gt; will be invoked once for every &lt;code&gt;PerformanceEntry&lt;/code&gt; instance:</source>
          <target state="translated">当 &lt;code&gt;options.buffered&lt;/code&gt; 为 &lt;code&gt;false&lt;/code&gt; 时，将为每个 &lt;code&gt;PerformanceEntry&lt;/code&gt; 实例调用一次 &lt;code&gt;callback&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="b573fea9c7ba66a6043fa6811606bc0e5d00ae79" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;options.paddingStrategy&lt;/code&gt; is equal to &lt;code&gt;http2.constants.PADDING_STRATEGY_CALLBACK&lt;/code&gt;, the HTTP/2 implementation will consult the &lt;code&gt;options.selectPadding()&lt;/code&gt; callback function, if provided, to determine the specific amount of padding to use per &lt;code&gt;HEADERS&lt;/code&gt; and &lt;code&gt;DATA&lt;/code&gt; frame.</source>
          <target state="translated">当 &lt;code&gt;options.paddingStrategy&lt;/code&gt; 等于 &lt;code&gt;http2.constants.PADDING_STRATEGY_CALLBACK&lt;/code&gt; 时，HTTP / 2实现将参考 &lt;code&gt;options.selectPadding()&lt;/code&gt; 回调函数（如果提供）以确定每个 &lt;code&gt;HEADERS&lt;/code&gt; 和 &lt;code&gt;DATA&lt;/code&gt; 帧使用的特定填充量。</target>
        </trans-unit>
        <trans-unit id="f03d6dd27fa836da716d942b341ab7febca3677a" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;options.signal&lt;/code&gt; is set with an &lt;code&gt;AbortSignal&lt;/code&gt; and then &lt;code&gt;abort&lt;/code&gt; on the corresponding &lt;code&gt;AbortController&lt;/code&gt; is called, the request will emit an &lt;code&gt;'error'&lt;/code&gt; event with an &lt;code&gt;AbortError&lt;/code&gt; error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c36d3249d148321075b6e5c9c7a29462665fd54" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;options.waitForTrailers&lt;/code&gt; is set, the &lt;code&gt;Http2Stream&lt;/code&gt; will not automatically close when the final &lt;code&gt;DATA&lt;/code&gt; frame is transmitted. User code &lt;em&gt;must&lt;/em&gt; call either &lt;code&gt;http2stream.sendTrailers()&lt;/code&gt; or &lt;code&gt;http2stream.close()&lt;/code&gt; to close the &lt;code&gt;Http2Stream&lt;/code&gt;.</source>
          <target state="translated">当 &lt;code&gt;options.waitForTrailers&lt;/code&gt; 被设置时， &lt;code&gt;Http2Stream&lt;/code&gt; 不会自动关闭时，最终 &lt;code&gt;DATA&lt;/code&gt; 发送帧。用户代码&lt;em&gt;必须&lt;/em&gt;调用 &lt;code&gt;http2stream.sendTrailers()&lt;/code&gt; 或 &lt;code&gt;http2stream.close()&lt;/code&gt; 来关闭 &lt;code&gt;Http2Stream&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="06cc8b92c09da71177b92ce0b2f605e7dfac1ca4" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;options.waitForTrailers&lt;/code&gt; is set, the &lt;code&gt;Http2Stream&lt;/code&gt; will not automatically close when the final &lt;code&gt;DATA&lt;/code&gt; frame is transmitted. User code must call either &lt;code&gt;http2stream.sendTrailers()&lt;/code&gt; or &lt;code&gt;http2stream.close()&lt;/code&gt; to close the &lt;code&gt;Http2Stream&lt;/code&gt;.</source>
          <target state="translated">当 &lt;code&gt;options.waitForTrailers&lt;/code&gt; 被设置时， &lt;code&gt;Http2Stream&lt;/code&gt; 不会自动关闭时，最终 &lt;code&gt;DATA&lt;/code&gt; 发送帧。用户代码必须调用 &lt;code&gt;http2stream.sendTrailers()&lt;/code&gt; 或 &lt;code&gt;http2stream.close()&lt;/code&gt; 来关闭 &lt;code&gt;Http2Stream&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="44b13adb4475f68a6d3809ca001bb5510270e765" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;performanceEntry.entryType&lt;/code&gt; is equal to &lt;code&gt;'gc'&lt;/code&gt;, the &lt;code&gt;performance.flags&lt;/code&gt; property contains additional information about garbage collection operation. The value may be one of:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b367288f95ded72c1333b22b3d7d31a6efa1b87f" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;performanceEntry.entryType&lt;/code&gt; is equal to &lt;code&gt;'gc'&lt;/code&gt;, the &lt;code&gt;performance.kind&lt;/code&gt; property identifies the type of garbage collection operation that occurred. The value may be one of:</source>
          <target state="translated">当 &lt;code&gt;performanceEntry.entryType&lt;/code&gt; 等于 &lt;code&gt;'gc'&lt;/code&gt; 时， &lt;code&gt;performance.kind&lt;/code&gt; 属性标识发生的垃圾收集操作的类型。该值可以是以下之一：</target>
        </trans-unit>
        <trans-unit id="fdf7e39c38e83dd8dabed9d41e819f625fb4d322" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;preserveCursor&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, the cursor placement will not be reset to &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">当 &lt;code&gt;preserveCursor&lt;/code&gt; 为 &lt;code&gt;true&lt;/code&gt; 时，光标位置不会重置为 &lt;code&gt;0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1570becd301409cef87544fe074fd1a4f64f49f4" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;quicsocket.listen()&lt;/code&gt; is called, a &lt;a href=&quot;tls#tls_tls_createsecurecontext_options&quot;&gt;&amp;lt;tls.SecureContext&amp;gt;&lt;/a&gt; is created and used by default for all new &lt;code&gt;QuicServerSession&lt;/code&gt; instances. There are times, however, when the &lt;a href=&quot;tls#tls_tls_createsecurecontext_options&quot;&gt;&amp;lt;tls.SecureContext&amp;gt;&lt;/a&gt; to be used for a &lt;code&gt;QuicSession&lt;/code&gt; can only be determined once the client initiates a connection. This is accomplished using the &lt;code&gt;clientHelloHandler&lt;/code&gt; option when calling &lt;code&gt;quicsocket.listen()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a39666ec417748f8c63aee587bbe9944f396c7a0" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;readable._read()&lt;/code&gt; is called, if data is available from the resource, the implementation should begin pushing that data into the read queue using the &lt;a href=&quot;#stream_readable_push_chunk_encoding&quot;&gt;&lt;code&gt;this.push(dataChunk)&lt;/code&gt;&lt;/a&gt; method. &lt;code&gt;_read()&lt;/code&gt; should continue reading from the resource and pushing data until &lt;code&gt;readable.push()&lt;/code&gt; returns &lt;code&gt;false&lt;/code&gt;. Only when &lt;code&gt;_read()&lt;/code&gt; is called again after it has stopped should it resume pushing additional data onto the queue.</source>
          <target state="translated">当 &lt;code&gt;readable._read()&lt;/code&gt; 被调用时，如果数据是可用的资源，实施应该开始推送的数据到使用的读队列&lt;a href=&quot;#stream_readable_push_chunk_encoding&quot;&gt; &lt;code&gt;this.push(dataChunk)&lt;/code&gt; &lt;/a&gt;方法。 &lt;code&gt;_read()&lt;/code&gt; 应该继续从资源中读取数据并推送数据，直到 &lt;code&gt;readable.push()&lt;/code&gt; 返回 &lt;code&gt;false&lt;/code&gt; 为止。只有停止后再次调用 &lt;code&gt;_read()&lt;/code&gt; 时，它才可以继续将其他数据推入队列。</target>
        </trans-unit>
        <trans-unit id="415b52239b8b94c7fa3114478d7d7ecdce354a16" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;readable.readableFlowing&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, no mechanism for consuming the stream's data is provided. Therefore, the stream will not generate data. While in this state, attaching a listener for the &lt;code&gt;'data'&lt;/code&gt; event, calling the &lt;code&gt;readable.pipe()&lt;/code&gt; method, or calling the &lt;code&gt;readable.resume()&lt;/code&gt; method will switch &lt;code&gt;readable.readableFlowing&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;, causing the &lt;code&gt;Readable&lt;/code&gt; to begin actively emitting events as data is generated.</source>
          <target state="translated">当 &lt;code&gt;readable.readableFlowing&lt;/code&gt; 为 &lt;code&gt;null&lt;/code&gt; 时，不提供使用流数据的机制。因此，该流将不会生成数据。在此状态下，安装一个侦听器 &lt;code&gt;'data'&lt;/code&gt; 事件，调用 &lt;code&gt;readable.pipe()&lt;/code&gt; 方法，或调用 &lt;code&gt;readable.resume()&lt;/code&gt; 方法将切换 &lt;code&gt;readable.readableFlowing&lt;/code&gt; 到 &lt;code&gt;true&lt;/code&gt; ，导致 &lt;code&gt;Readable&lt;/code&gt; 开始积极地发射事件数据已生成。</target>
        </trans-unit>
        <trans-unit id="8e9d949fb4bb20efb20445fe1a7086affdc76d63" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;request.url&lt;/code&gt; is &lt;code&gt;'/status?name=ryan'&lt;/code&gt; and &lt;code&gt;request.headers.host&lt;/code&gt; is &lt;code&gt;'localhost:3000'&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0d03546e4741a7e49019e1ebd77ec915605ef57" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;stdout&lt;/code&gt; is a TTY, calling &lt;code&gt;console.clear()&lt;/code&gt; will attempt to clear the TTY. When &lt;code&gt;stdout&lt;/code&gt; is not a TTY, this method does nothing.</source>
          <target state="translated">如果 &lt;code&gt;stdout&lt;/code&gt; 是TTY，则调用 &lt;code&gt;console.clear()&lt;/code&gt; 将尝试清除TTY。如果 &lt;code&gt;stdout&lt;/code&gt; 不是TTY，则此方法不执行任何操作。</target>
        </trans-unit>
        <trans-unit id="dde7ffbfdb4a192362f42e087299ff40d0514549" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;string&lt;/code&gt; is a &lt;code&gt;Buffer&lt;/code&gt;/&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView&quot;&gt;&lt;code&gt;DataView&lt;/code&gt;&lt;/a&gt;/&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray&quot;&gt;&lt;code&gt;TypedArray&lt;/code&gt;&lt;/a&gt;/&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt;/ &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer&quot;&gt;&lt;code&gt;SharedArrayBuffer&lt;/code&gt;&lt;/a&gt;, the actual byte length is returned.</source>
          <target state="translated">当 &lt;code&gt;string&lt;/code&gt; 为 &lt;code&gt;Buffer&lt;/code&gt; / &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView&quot;&gt; &lt;code&gt;DataView&lt;/code&gt; &lt;/a&gt; / &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray&quot;&gt; &lt;code&gt;TypedArray&lt;/code&gt; &lt;/a&gt; / &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer&quot;&gt; &lt;code&gt;ArrayBuffer&lt;/code&gt; &lt;/a&gt; / &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer&quot;&gt; &lt;code&gt;SharedArrayBuffer&lt;/code&gt; 时&lt;/a&gt;，返回实际的字节长度。</target>
        </trans-unit>
        <trans-unit id="9ac661dcdccd7433059697ab48894dd8e9ddbe65" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;string&lt;/code&gt; is a &lt;code&gt;Buffer&lt;/code&gt;/&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView&quot;&gt;&lt;code&gt;DataView&lt;/code&gt;&lt;/a&gt;/&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray&quot;&gt;&lt;code&gt;TypedArray&lt;/code&gt;&lt;/a&gt;/&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt;/ &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer&quot;&gt;&lt;code&gt;SharedArrayBuffer&lt;/code&gt;&lt;/a&gt;, the byte length as reported by &lt;code&gt;.byteLength&lt;/code&gt; is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e85ba5aa76361578aa11ab45899f063297a4632" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;true&lt;/code&gt;, the &lt;a href=&quot;webcrypto#webcrypto_class_cryptokey&quot;&gt;&amp;lt;CryptoKey&amp;gt;&lt;/a&gt; can be extracted using either &lt;code&gt;subtleCrypto.exportKey()&lt;/code&gt; or &lt;code&gt;subtleCrypto.wrapKey()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b83fecde6d4c12f20d0cd6ce7299c23edb443120" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;true&lt;/code&gt;, the &lt;code&gt;QuicStream&lt;/code&gt; is bidirectional. Both the readable and writable sides of the &lt;code&gt;QuicStream&lt;/code&gt;&lt;code&gt;Duplex&lt;/code&gt; are open.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b97abb19ab4fafe544fd2b1944b99263574df87" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;write&lt;/code&gt; function is called with empty string or buffer, it does nothing and waits for more input.</source>
          <target state="translated">当使用空字符串或缓冲区调用 &lt;code&gt;write&lt;/code&gt; 函数时，它不执行任何操作并等待更多输入。</target>
        </trans-unit>
        <trans-unit id="555a795705636054e34975bf9307cbe9b5899232" translate="yes" xml:space="preserve">
          <source>When JavaScript code invokes a constructor for a class that was defined using &lt;code&gt;napi_define_class()&lt;/code&gt;, the &lt;code&gt;napi_callback&lt;/code&gt; for the constructor is invoked. After constructing an instance of the native class, the callback must then call &lt;code&gt;napi_wrap()&lt;/code&gt; to wrap the newly constructed instance in the already-created JavaScript object that is the &lt;code&gt;this&lt;/code&gt; argument to the constructor callback. (That &lt;code&gt;this&lt;/code&gt; object was created from the constructor function's &lt;code&gt;prototype&lt;/code&gt;, so it already has definitions of all the instance properties and methods.)</source>
          <target state="translated">当JavaScript代码为使用 &lt;code&gt;napi_define_class()&lt;/code&gt; 定义的类调用构造函数时，将调用该构造函数的 &lt;code&gt;napi_callback&lt;/code&gt; 。构造完本机类的实例之后，回调必须随后调用 &lt;code&gt;napi_wrap()&lt;/code&gt; ，将新构造的实例包装在已创建的JavaScript对象中，该对象是构造函数回调的 &lt;code&gt;this&lt;/code&gt; 参数。 （ &lt;code&gt;this&lt;/code&gt; 对象是从构造函数的 &lt;code&gt;prototype&lt;/code&gt; 创建的，因此它已经具有所有实例属性和方法的定义。）</target>
        </trans-unit>
        <trans-unit id="1774b24fbf47d198b3a30100903828d7409b5b6c" translate="yes" xml:space="preserve">
          <source>When JavaScript code invokes a method or property accessor on the class, the corresponding &lt;code&gt;napi_callback&lt;/code&gt; C++ function is invoked. For an instance callback, &lt;a href=&quot;#n_api_napi_unwrap&quot;&gt;&lt;code&gt;napi_unwrap&lt;/code&gt;&lt;/a&gt; obtains the C++ instance that is the target of the call.</source>
          <target state="translated">当JavaScript代码在类上调用方法或属性访问器时，将调用相应的 &lt;code&gt;napi_callback&lt;/code&gt; C ++函数。对于实例回调，&lt;a href=&quot;#n_api_napi_unwrap&quot;&gt; &lt;code&gt;napi_unwrap&lt;/code&gt; &lt;/a&gt;获取作为调用目标的C ++实例。</target>
        </trans-unit>
        <trans-unit id="0918571bdde3395da834b0207495ce14e0fe8c8e" translate="yes" xml:space="preserve">
          <source>When JavaScript code invokes a method or property accessor on the class, the corresponding &lt;code&gt;napi_callback&lt;/code&gt; is invoked. If the callback is for an instance method or accessor, then the &lt;code&gt;this&lt;/code&gt; argument to the callback is the wrapper object; the wrapped C++ instance that is the target of the call can be obtained then by calling &lt;code&gt;napi_unwrap()&lt;/code&gt; on the wrapper object.</source>
          <target state="translated">当JavaScript代码在类上调用方法或属性访问器时，将调用相应的 &lt;code&gt;napi_callback&lt;/code&gt; 。如果回调是针对实例方法或访问器的，则回调的 &lt;code&gt;this&lt;/code&gt; 参数是包装对象；然后可以通过在包装对象上调用 &lt;code&gt;napi_unwrap()&lt;/code&gt; 来获取作为调用目标的包装的C ++实例。</target>
        </trans-unit>
        <trans-unit id="0ace059614f2d50957d2d6ec33c21258514bba31" translate="yes" xml:space="preserve">
          <source>When JavaScript code invokes the constructor, the constructor callback uses &lt;a href=&quot;#n_api_napi_wrap&quot;&gt;&lt;code&gt;napi_wrap&lt;/code&gt;&lt;/a&gt; to wrap a new C++ instance in a JavaScript object, then returns the wrapper object.</source>
          <target state="translated">当JavaScript代码调用构造函数时，构造函数回调使用&lt;a href=&quot;#n_api_napi_wrap&quot;&gt; &lt;code&gt;napi_wrap&lt;/code&gt; &lt;/a&gt;将新的C ++实例包装在JavaScript对象中，然后返回包装对象。</target>
        </trans-unit>
        <trans-unit id="e1e6d67a00f46d577c6fd5ff65d30fd56c2bc6ed" translate="yes" xml:space="preserve">
          <source>When Node.js detects that it is being run with a text terminal (&quot;TTY&quot;) attached, &lt;a href=&quot;process#process_process_stdin&quot;&gt;&lt;code&gt;process.stdin&lt;/code&gt;&lt;/a&gt; will, by default, be initialized as an instance of &lt;code&gt;tty.ReadStream&lt;/code&gt; and both &lt;a href=&quot;process#process_process_stdout&quot;&gt;&lt;code&gt;process.stdout&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;process#process_process_stderr&quot;&gt;&lt;code&gt;process.stderr&lt;/code&gt;&lt;/a&gt; will, by default be instances of &lt;code&gt;tty.WriteStream&lt;/code&gt;. The preferred method of determining whether Node.js is being run within a TTY context is to check that the value of the &lt;code&gt;process.stdout.isTTY&lt;/code&gt; property is &lt;code&gt;true&lt;/code&gt;:</source>
          <target state="translated">当Node.js检测到它正在运行并连接了文本终端（&amp;ldquo; TTY&amp;rdquo;）时，默认情况下，&lt;a href=&quot;process#process_process_stdin&quot;&gt; &lt;code&gt;process.stdin&lt;/code&gt; &lt;/a&gt;将被初始化为 &lt;code&gt;tty.ReadStream&lt;/code&gt; 的实例，而&lt;a href=&quot;process#process_process_stdout&quot;&gt; &lt;code&gt;process.stdout&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;process#process_process_stderr&quot;&gt; &lt;code&gt;process.stderr&lt;/code&gt; &lt;/a&gt;都将被初始化。默认是 &lt;code&gt;tty.WriteStream&lt;/code&gt; 的实例。确定Node.js是否在TTY上下文中运行的首选方法是检查 &lt;code&gt;process.stdout.isTTY&lt;/code&gt; 属性的值是否为 &lt;code&gt;true&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="0d04f8d87844828d3bad4ca9fd29c03215b925a5" translate="yes" xml:space="preserve">
          <source>When PEM encoding was selected, the result will be a string, otherwise it will be a buffer containing the data encoded as DER.</source>
          <target state="translated">当选择PEM编码时,结果将是一个字符串,否则将是一个包含DER编码数据的缓冲区。</target>
        </trans-unit>
        <trans-unit id="712e5de5a18b32a0cd5de594028fd6970962defd" translate="yes" xml:space="preserve">
          <source>When a &lt;code&gt;Buffer&lt;/code&gt; instance is written to the &lt;code&gt;StringDecoder&lt;/code&gt; instance, an internal buffer is used to ensure that the decoded string does not contain any incomplete multibyte characters. These are held in the buffer until the next call to &lt;code&gt;stringDecoder.write()&lt;/code&gt; or until &lt;code&gt;stringDecoder.end()&lt;/code&gt; is called.</source>
          <target state="translated">将 &lt;code&gt;Buffer&lt;/code&gt; 实例写入 &lt;code&gt;StringDecoder&lt;/code&gt; 实例时，将使用内部缓冲区来确保解码后的字符串不包含任何不完整的多字节字符。这些都是在缓存器中保存，直到下一个呼叫 &lt;code&gt;stringDecoder.write()&lt;/code&gt; 或直到 &lt;code&gt;stringDecoder.end()&lt;/code&gt; 被调用。</target>
        </trans-unit>
        <trans-unit id="d7f554f90810f250f3efe7dd028d56f55a04d642" translate="yes" xml:space="preserve">
          <source>When a TCP connection is created, it will have Nagle's algorithm enabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19927653ece31251319386d70d376450d99eecd0" translate="yes" xml:space="preserve">
          <source>When a connection is closed by the client or the server, it is removed from the pool. Any unused sockets in the pool will be unrefed so as not to keep the Node.js process running when there are no outstanding requests. (see &lt;a href=&quot;net#net_socket_unref&quot;&gt;&lt;code&gt;socket.unref()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">当客户端或服务器关闭连接时，会将其从池中删除。池中任何未使用的套接字都将被取消引用，以免在没有未完成的请求时不让Node.js进程运行。（请参阅&lt;a href=&quot;net#net_socket_unref&quot;&gt; &lt;code&gt;socket.unref()&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="e10f31dacabf18eebe8a53f9a06341d949975f16" translate="yes" xml:space="preserve">
          <source>When a file being watched by &lt;code&gt;fs.watchFile()&lt;/code&gt; disappears and reappears, then the &lt;code&gt;previousStat&lt;/code&gt; reported in the second callback event (the file's reappearance) will be the same as the &lt;code&gt;previousStat&lt;/code&gt; of the first callback event (its disappearance).</source>
          <target state="translated">当一个文件被观看 &lt;code&gt;fs.watchFile()&lt;/code&gt; 消失和重新出现，那么 &lt;code&gt;previousStat&lt;/code&gt; 报道，在第二个回调事件（该文件的再现）将是相同 &lt;code&gt;previousStat&lt;/code&gt; 第一回调事件的（它的消失）。</target>
        </trans-unit>
        <trans-unit id="0583ea7689fd44ba5f0901f941df4efc5774f1dd" translate="yes" xml:space="preserve">
          <source>When a file being watched by &lt;code&gt;fs.watchFile()&lt;/code&gt; disappears and reappears, then the contents of &lt;code&gt;previous&lt;/code&gt; in the second callback event (the file's reappearance) will be the same as the contents of &lt;code&gt;previous&lt;/code&gt; in the first callback event (its disappearance).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1894f695ef22c3ee491695c8dc21d4765ddad8a" translate="yes" xml:space="preserve">
          <source>When a file is run directly from Node.js, &lt;code&gt;require.main&lt;/code&gt; is set to its &lt;code&gt;module&lt;/code&gt;. That means that it is possible to determine whether a file has been run directly by testing &lt;code&gt;require.main === module&lt;/code&gt;.</source>
          <target state="translated">当直接从Node.js运行文件时， &lt;code&gt;require.main&lt;/code&gt; 设置为其 &lt;code&gt;module&lt;/code&gt; 。这意味着可以通过测试 &lt;code&gt;require.main === module&lt;/code&gt; 来确定文件是否已经直接运行。</target>
        </trans-unit>
        <trans-unit id="5b842430962e7964c7770de7491a5dbb686db47c" translate="yes" xml:space="preserve">
          <source>When a listener is registered using the &lt;code&gt;eventEmitter.on()&lt;/code&gt; method, that listener is invoked &lt;em&gt;every time&lt;/em&gt; the named event is emitted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb4289ace81cecf2b85810326c8fe6461f147516" translate="yes" xml:space="preserve">
          <source>When a listener is registered using the &lt;code&gt;eventEmitter.on()&lt;/code&gt; method, that listener will be invoked &lt;em&gt;every time&lt;/em&gt; the named event is emitted.</source>
          <target state="translated">使用 &lt;code&gt;eventEmitter.on()&lt;/code&gt; 方法注册侦听器时，&lt;em&gt;每次&lt;/em&gt;发出命名事件&lt;em&gt;时&lt;/em&gt;都会调用该侦听器。</target>
        </trans-unit>
        <trans-unit id="ec661b7d7bfcd43207b92f13fc2978eb8e876b58" translate="yes" xml:space="preserve">
          <source>When a new &lt;a href=&quot;#repl_class_replserver&quot;&gt;&lt;code&gt;repl.REPLServer&lt;/code&gt;&lt;/a&gt; is created, a custom evaluation function may be provided. This can be used, for instance, to implement fully customized REPL applications.</source>
          <target state="translated">创建新的&lt;a href=&quot;#repl_class_replserver&quot;&gt; &lt;code&gt;repl.REPLServer&lt;/code&gt; 时&lt;/a&gt;，可以提供自定义评估功能。例如，可以使用它来实现完全定制的REPL应用程序。</target>
        </trans-unit>
        <trans-unit id="2de6c1acec16c787db17c177ceceacef6cbfddcd" translate="yes" xml:space="preserve">
          <source>When a new value is assigned, different platforms will impose different maximum length restrictions on the title. Usually such restrictions are quite limited. For instance, on Linux and macOS, &lt;code&gt;process.title&lt;/code&gt; is limited to the size of the binary name plus the length of the command line arguments because setting the &lt;code&gt;process.title&lt;/code&gt; overwrites the &lt;code&gt;argv&lt;/code&gt; memory of the process. Node.js v0.8 allowed for longer process title strings by also overwriting the &lt;code&gt;environ&lt;/code&gt; memory but that was potentially insecure and confusing in some (rather obscure) cases.</source>
          <target state="translated">分配新值后，不同的平台将对标题施加不同的最大长度限制。通常，此类限制非常有限。例如，在Linux和macOS上， &lt;code&gt;process.title&lt;/code&gt; 限制为二进制名称的大小加上命令行参数的长度，因为设置 &lt;code&gt;process.title&lt;/code&gt; 会覆盖进程的 &lt;code&gt;argv&lt;/code&gt; 内存。Node.js v0.8还通过覆盖 &lt;code&gt;environ&lt;/code&gt; 内存来允许更长的进程标题字符串，但是在某些（而不是晦涩的情况）下这可能是不安全的并且令人困惑。</target>
        </trans-unit>
        <trans-unit id="41f14c991157e8be59395364f28e0f2bab7ae43c" translate="yes" xml:space="preserve">
          <source>When a new value is assigned, different platforms will impose different maximum length restrictions on the title. Usually such restrictions are quite limited. For instance, on Linux and macOS, &lt;code&gt;process.title&lt;/code&gt; is limited to the size of the binary name plus the length of the command-line arguments because setting the &lt;code&gt;process.title&lt;/code&gt; overwrites the &lt;code&gt;argv&lt;/code&gt; memory of the process. Node.js v0.8 allowed for longer process title strings by also overwriting the &lt;code&gt;environ&lt;/code&gt; memory but that was potentially insecure and confusing in some (rather obscure) cases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e6192f9f2edc651bd27c25fb6f640d241f78140" translate="yes" xml:space="preserve">
          <source>When a new worker is forked the cluster module will emit a &lt;code&gt;'fork'&lt;/code&gt; event. This can be used to log worker activity, and create a custom timeout.</source>
          <target state="translated">当新的工作人员被分叉时，集群模块将发出 &lt;code&gt;'fork'&lt;/code&gt; 事件。这可用于记录工作人员活动并创建自定义超时。</target>
        </trans-unit>
        <trans-unit id="ccdde242365773b6d1c801177f6044e7fed74140" translate="yes" xml:space="preserve">
          <source>When a package has an &lt;a href=&quot;#packages_exports&quot;&gt;&lt;code&gt;&quot;exports&quot;&lt;/code&gt;&lt;/a&gt; field, this will take precedence over the &lt;code&gt;&quot;main&quot;&lt;/code&gt; field when importing the package by name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac6ece066e2e44ee56af54a0e437179aefc818e3" translate="yes" xml:space="preserve">
          <source>When a policy check fails, Node.js by default will throw an error. It is possible to change the error behavior to one of a few possibilities by defining an &quot;onerror&quot; field in a policy manifest. The following values are available to change the behavior:</source>
          <target state="translated">当策略检查失败时,Node.js默认会抛出一个错误。通过在策略清单中定义一个 &quot;onerror &quot;字段,可以将错误行为更改为几种可能性之一。下面的值可以用来改变行为。</target>
        </trans-unit>
        <trans-unit id="f6734825ccf390de2be59d84f5e066dbca41f678" translate="yes" xml:space="preserve">
          <source>When a registered event listener throws (or returns a Promise that rejects), by default the error is forwarded to the &lt;code&gt;process.on('error')&lt;/code&gt; event on &lt;code&gt;process.nextTick()&lt;/code&gt;. Throwing within an event listener will &lt;em&gt;not&lt;/em&gt; stop the other registered handlers from being invoked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="640af45d9fc3cb08af64151f9dd193ba65c4834a" translate="yes" xml:space="preserve">
          <source>When a report is written, start and end messages are issued to stderr and the filename of the report is returned to the caller. The default filename includes the date, time, PID and a sequence number. The sequence number helps in associating the report dump with the runtime state if generated multiple times for the same Node.js process.</source>
          <target state="translated">当一个报告被写入时,开始和结束的消息会被发布到stderr,报告的文件名会返回给调用者。默认的文件名包括日期、时间、PID和一个序列号。如果为同一个Node.js进程多次生成报告,序列号有助于将报告转储与运行时状态关联起来。</target>
        </trans-unit>
        <trans-unit id="15bb4b88c15a01df74babc65463bcbe4252a9901" translate="yes" xml:space="preserve">
          <source>When a single function has been added as a handler multiple times for a single event (as in the example below), &lt;code&gt;removeListener()&lt;/code&gt; will remove the most recently added instance. In the example the &lt;code&gt;once('ping')&lt;/code&gt; listener is removed:</source>
          <target state="translated">当已将单个函数多次添加为单个事件的处理程序时（如下面的示例所示）， &lt;code&gt;removeListener()&lt;/code&gt; 将删除最近添加的实例。在示例中， &lt;code&gt;once('ping')&lt;/code&gt; 侦听器被删除：</target>
        </trans-unit>
        <trans-unit id="511a8bb474a1e812669ff871a25d9353657ef621" translate="yes" xml:space="preserve">
          <source>When a string is passed as an &lt;code&gt;origin&lt;/code&gt;, it will be parsed as a URL and the origin will be derived. For instance, the origin for the HTTP URL &lt;code&gt;'https://example.org/foo/bar'&lt;/code&gt; is the ASCII string &lt;code&gt;'https://example.org'&lt;/code&gt;. An error will be thrown if either the given string cannot be parsed as a URL or if a valid origin cannot be derived.</source>
          <target state="translated">当将字符串作为 &lt;code&gt;origin&lt;/code&gt; 传递时，它将被解析为URL，并且将衍生出原点。例如，HTTP URL'https &lt;code&gt;'https://example.org/foo/bar'&lt;/code&gt; 的起源是ASCII字符串 &lt;code&gt;'https://example.org'&lt;/code&gt; 。如果无法将给定的字符串解析为URL或无法派生有效的来源，则会引发错误。</target>
        </trans-unit>
        <trans-unit id="3e15aaa4c3d9a784868ceb60e33edb993d7e58a2" translate="yes" xml:space="preserve">
          <source>When a string is passed for the &lt;code&gt;originOrStream&lt;/code&gt; argument, it will be parsed as a URL and the origin will be derived. For instance, the origin for the HTTP URL &lt;code&gt;'https://example.org/foo/bar'&lt;/code&gt; is the ASCII string &lt;code&gt;'https://example.org'&lt;/code&gt;. An error will be thrown if either the given string cannot be parsed as a URL or if a valid origin cannot be derived.</source>
          <target state="translated">当将字符串传递给 &lt;code&gt;originOrStream&lt;/code&gt; 参数时，它将被解析为URL，并且将派生起源。例如，HTTP URL'https &lt;code&gt;'https://example.org/foo/bar'&lt;/code&gt; 的起源是ASCII字符串 &lt;code&gt;'https://example.org'&lt;/code&gt; 。如果无法将给定的字符串解析为URL或无法派生有效的来源，则会引发错误。</target>
        </trans-unit>
        <trans-unit id="17832f33592cea32687ed0391953029199680044" translate="yes" xml:space="preserve">
          <source>When all of the &lt;code&gt;QuicEndpoint&lt;/code&gt; instances associated with a &lt;code&gt;QuicSocket&lt;/code&gt; have closed, the &lt;code&gt;QuicEndpoint&lt;/code&gt; will also automatically close.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afd64c1a21186719f41d045393b1ae954b443d5b" translate="yes" xml:space="preserve">
          <source>When an &lt;code&gt;Http2Stream&lt;/code&gt; instance is destroyed, an attempt will be made to send an &lt;code&gt;RST_STREAM&lt;/code&gt; frame to the connected peer.</source>
          <target state="translated">当 &lt;code&gt;Http2Stream&lt;/code&gt; 实例被破坏，试图将作出一个发送 &lt;code&gt;RST_STREAM&lt;/code&gt; 帧到所连接的对等体。</target>
        </trans-unit>
        <trans-unit id="9126903cfca7540b84da69ca08800be0ac994dcc" translate="yes" xml:space="preserve">
          <source>When an &lt;code&gt;fs.watchFile&lt;/code&gt; operation results in an &lt;code&gt;ENOENT&lt;/code&gt; error, it will invoke the listener once, with all the fields zeroed (or, for dates, the Unix Epoch). If the file is created later on, the listener will be called again, with the latest stat objects. This is a change in functionality since v0.10.</source>
          <target state="translated">当 &lt;code&gt;fs.watchFile&lt;/code&gt; 操作导致 &lt;code&gt;ENOENT&lt;/code&gt; 错误时，它将调用一次侦听器，并将所有字段清零（或者，对于日期，则为Unix Epoch）。如果稍后创建文件，则将使用最新的stat对象再次调用侦听器。从v0.10开始，这是功能上的更改。</target>
        </trans-unit>
        <trans-unit id="15d5ff09225189118135ef540fc0d06959e1b6ea" translate="yes" xml:space="preserve">
          <source>When an IPC channel has been established between the parent and child ( i.e. when using &lt;a href=&quot;#child_process_child_process_fork_modulepath_args_options&quot;&gt;&lt;code&gt;child_process.fork()&lt;/code&gt;&lt;/a&gt;), the &lt;code&gt;subprocess.send()&lt;/code&gt; method can be used to send messages to the child process. When the child process is a Node.js instance, these messages can be received via the &lt;a href=&quot;process#process_event_message&quot;&gt;&lt;code&gt;'message'&lt;/code&gt;&lt;/a&gt; event.</source>
          <target state="translated">当在父级和子级之间建立了IPC通道时（即，使用&lt;a href=&quot;#child_process_child_process_fork_modulepath_args_options&quot;&gt; &lt;code&gt;child_process.fork()&lt;/code&gt; 时&lt;/a&gt;），可以使用subprocess.send &lt;code&gt;subprocess.send()&lt;/code&gt; 方法将消息发送到子级进程。当子进程是Node.js实例时，可以通过&lt;a href=&quot;process#process_event_message&quot;&gt; &lt;code&gt;'message'&lt;/code&gt; &lt;/a&gt;事件接收这些消息。</target>
        </trans-unit>
        <trans-unit id="1e27b21d76575a6545a822c2e33f4c81b2756f09" translate="yes" xml:space="preserve">
          <source>When an addon has additional threads and JavaScript functions need to be invoked based on the processing completed by those threads, those threads must communicate with the addon's main thread so that the main thread can invoke the JavaScript function on their behalf. The thread-safe function APIs provide an easy way to do this.</source>
          <target state="translated">当一个addon有额外的线程,并且需要根据这些线程完成的处理来调用JavaScript函数时,这些线程必须与addon的主线程进行通信,以便主线程能够代表它们调用JavaScript函数。线程安全函数API提供了一个简单的方法来实现这一点。</target>
        </trans-unit>
        <trans-unit id="c7a942a0f6d718e366c908d56adfffde40992b49" translate="yes" xml:space="preserve">
          <source>When an application is using a package that provides both CommonJS and ES module sources, there is a risk of certain bugs if both versions of the package get loaded. This potential comes from the fact that the &lt;code&gt;pkgInstance&lt;/code&gt; created by &lt;code&gt;const pkgInstance = require('pkg')&lt;/code&gt; is not the same as the &lt;code&gt;pkgInstance&lt;/code&gt; created by &lt;code&gt;import pkgInstance from 'pkg'&lt;/code&gt; (or an alternative main path like &lt;code&gt;'pkg/module'&lt;/code&gt;). This is the &amp;ldquo;dual package hazard,&amp;rdquo; where two versions of the same package can be loaded within the same runtime environment. While it is unlikely that an application or package would intentionally load both versions directly, it is common for an application to load one version while a dependency of the application loads the other version. This hazard can happen because Node.js supports intermixing CommonJS and ES modules, and can lead to unexpected behavior.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9756dd0510cc11850f4ec535793e6081c77c3248" translate="yes" xml:space="preserve">
          <source>When an asynchronous method is called on an object that is an &lt;a href=&quot;events#events_class_eventemitter&quot;&gt;&lt;code&gt;EventEmitter&lt;/code&gt;&lt;/a&gt;, errors can be routed to that object's &lt;code&gt;'error'&lt;/code&gt; event.</source>
          <target state="translated">在作为&lt;a href=&quot;events#events_class_eventemitter&quot;&gt; &lt;code&gt;EventEmitter&lt;/code&gt; &lt;/a&gt;的对象上调用异步方法时，可以将错误路由到该对象的 &lt;code&gt;'error'&lt;/code&gt; 事件。</target>
        </trans-unit>
        <trans-unit id="d18e3a14276353b8018b491a75c5696499ddaf86" translate="yes" xml:space="preserve">
          <source>When an asynchronous operation is initiated (such as a TCP server receiving a new connection) or completes (such as writing data to disk) a callback is called to notify the user. The &lt;code&gt;before&lt;/code&gt; callback is called just before said callback is executed. &lt;code&gt;asyncId&lt;/code&gt; is the unique identifier assigned to the resource about to execute the callback.</source>
          <target state="translated">当启动异步操作（例如TCP服务器接收新连接）或完成异步操作（例如将数据写入磁盘）时，将调用回调以通知用户。在 &lt;code&gt;before&lt;/code&gt; 调用回调之前执行所述的回调。 &lt;code&gt;asyncId&lt;/code&gt; 是分配给将要执行回调的资源的唯一标识符。</target>
        </trans-unit>
        <trans-unit id="d6b9733c7131b1f270bd8a59447f8373638fdeb8" translate="yes" xml:space="preserve">
          <source>When an error occurs within an &lt;code&gt;EventEmitter&lt;/code&gt; instance, the typical action is for an &lt;code&gt;'error'&lt;/code&gt; event to be emitted. These are treated as special cases within Node.js.</source>
          <target state="translated">当 &lt;code&gt;EventEmitter&lt;/code&gt; 实例中发生错误时，典型的操作是发出 &lt;code&gt;'error'&lt;/code&gt; 事件。这些在Node.js中被视为特殊情况。</target>
        </trans-unit>
        <trans-unit id="881c946d092eee0c2019dddd26763c107f92074b" translate="yes" xml:space="preserve">
          <source>When an exception is pending one of two approaches can be employed.</source>
          <target state="translated">当异常情况待定时,可以采用两种方法之一。</target>
        </trans-unit>
        <trans-unit id="b8d8e67ab97c6a356d400452947e7a1f5c25de46" translate="yes" xml:space="preserve">
          <source>When an idle timeout is triggered the socket will receive a &lt;a href=&quot;#net_event_timeout&quot;&gt;&lt;code&gt;'timeout'&lt;/code&gt;&lt;/a&gt; event but the connection will not be severed. The user must manually call &lt;a href=&quot;#net_socket_end_data_encoding_callback&quot;&gt;&lt;code&gt;socket.end()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#net_socket_destroy_error&quot;&gt;&lt;code&gt;socket.destroy()&lt;/code&gt;&lt;/a&gt; to end the connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b12a2263759010fd5cb937026f4d3cc1d87aca96" translate="yes" xml:space="preserve">
          <source>When an idle timeout is triggered the socket will receive a &lt;a href=&quot;#net_event_timeout&quot;&gt;&lt;code&gt;'timeout'&lt;/code&gt;&lt;/a&gt; event but the connection will not be severed. The user must manually call &lt;a href=&quot;#net_socket_end_data_encoding_callback&quot;&gt;&lt;code&gt;socket.end()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#net_socket_destroy_exception&quot;&gt;&lt;code&gt;socket.destroy()&lt;/code&gt;&lt;/a&gt; to end the connection.</source>
          <target state="translated">触发空闲超时时，套接字将收到&lt;a href=&quot;#net_event_timeout&quot;&gt; &lt;code&gt;'timeout'&lt;/code&gt; &lt;/a&gt;事件，但不会断开连接。用户必须手动调用&lt;a href=&quot;#net_socket_end_data_encoding_callback&quot;&gt; &lt;code&gt;socket.end()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#net_socket_destroy_exception&quot;&gt; &lt;code&gt;socket.destroy()&lt;/code&gt; &lt;/a&gt;才能终止连接。</target>
        </trans-unit>
        <trans-unit id="77087efee8715a6dc2457aee2202585a65670e3f" translate="yes" xml:space="preserve">
          <source>When any of the workers die the cluster module will emit the &lt;code&gt;'exit'&lt;/code&gt; event.</source>
          <target state="translated">当任何一个工人死亡时，集群模块将发出 &lt;code&gt;'exit'&lt;/code&gt; 事件。</target>
        </trans-unit>
        <trans-unit id="116eb8d9b320b92f34b0093303e05d42b3f6ac48" translate="yes" xml:space="preserve">
          <source>When assigning a non-string property to &lt;a href=&quot;process#process_process_env&quot;&gt;&lt;code&gt;process.env&lt;/code&gt;&lt;/a&gt;, the assigned value is implicitly converted to a string. This behavior is deprecated if the assigned value is not a string, boolean, or number. In the future, such assignment may result in a thrown error. Please convert the property to a string before assigning it to &lt;code&gt;process.env&lt;/code&gt;.</source>
          <target state="translated">在为&lt;a href=&quot;process#process_process_env&quot;&gt; &lt;code&gt;process.env&lt;/code&gt; &lt;/a&gt;分配非字符串属性时，分配的值将隐式转换为字符串。如果分配的值不是字符串，布尔值或数字，则不建议使用此行为。将来，这种分配可能会导致抛出错误。在将属性分配给 &lt;code&gt;process.env&lt;/code&gt; 之前，请将其转换为字符串。</target>
        </trans-unit>
        <trans-unit id="7d917de109fb537bcc255120b58c25b9a1a0ef08" translate="yes" xml:space="preserve">
          <source>When assigning a non-string property to &lt;a href=&quot;process#process_process_env&quot;&gt;&lt;code&gt;process.env&lt;/code&gt;&lt;/a&gt;, the assigned value is implicitly converted to a string. This behavior is deprecated if the assigned value is not a string, boolean, or number. In the future, such assignment might result in a thrown error. Please convert the property to a string before assigning it to &lt;code&gt;process.env&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b818f741bbe7288d1ef2ca2faa3d09c3b90b166" translate="yes" xml:space="preserve">
          <source>When building addons with &lt;code&gt;node-gyp&lt;/code&gt;, using the macro &lt;code&gt;NODE_GYP_MODULE_NAME&lt;/code&gt; as the first parameter of &lt;code&gt;NODE_MODULE()&lt;/code&gt; will ensure that the name of the final binary will be passed to &lt;code&gt;NODE_MODULE()&lt;/code&gt;.</source>
          <target state="translated">当使用 &lt;code&gt;node-gyp&lt;/code&gt; &lt;code&gt;NODE_GYP_MODULE_NAME&lt;/code&gt; 构建插件时，使用宏NODE_GYP_MODULE_NAME作为 &lt;code&gt;NODE_MODULE()&lt;/code&gt; 的第一个参数将确保最终二进制文件的名称将传递给 &lt;code&gt;NODE_MODULE()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ad44239206d327c587affb7903510f4fb3d9e0f3" translate="yes" xml:space="preserve">
          <source>When called on an unbound socket, this method will implicitly bind to a random port, listening on all interfaces.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="deed801833ff5cd178d1520926c3e8872b44b700" translate="yes" xml:space="preserve">
          <source>When called, &lt;code&gt;rl.prompt()&lt;/code&gt; will resume the &lt;code&gt;input&lt;/code&gt; stream if it has been paused.</source>
          <target state="translated">调用时， &lt;code&gt;rl.prompt()&lt;/code&gt; 将恢复 &lt;code&gt;input&lt;/code&gt; 流（如果已暂停）。</target>
        </trans-unit>
        <trans-unit id="95690a6b2ee253f0d475698c7f4cb4b18f80c22a" translate="yes" xml:space="preserve">
          <source>When called, &lt;code&gt;rl.question()&lt;/code&gt; will resume the &lt;code&gt;input&lt;/code&gt; stream if it has been paused.</source>
          <target state="translated">调用时， &lt;code&gt;rl.question()&lt;/code&gt; 将恢复 &lt;code&gt;input&lt;/code&gt; 流（如果已暂停）。</target>
        </trans-unit>
        <trans-unit id="03e0cfc11341c28038f0a5d042284497f7d85fcb" translate="yes" xml:space="preserve">
          <source>When called, &lt;code&gt;rl.write()&lt;/code&gt; will resume the &lt;code&gt;input&lt;/code&gt; stream if it has been paused.</source>
          <target state="translated">调用时， &lt;code&gt;rl.write()&lt;/code&gt; 将恢复 &lt;code&gt;input&lt;/code&gt; 流（如果已暂停）。</target>
        </trans-unit>
        <trans-unit id="ffb3e53f526ac9005699e2122cb50b0c9899e0ac" translate="yes" xml:space="preserve">
          <source>When called, &lt;code&gt;util.deprecate()&lt;/code&gt; will return a function that will emit a &lt;code&gt;DeprecationWarning&lt;/code&gt; using the &lt;a href=&quot;process#process_event_warning&quot;&gt;&lt;code&gt;'warning'&lt;/code&gt;&lt;/a&gt; event. The warning will be emitted and printed to &lt;code&gt;stderr&lt;/code&gt; the first time the returned function is called. After the warning is emitted, the wrapped function is called without emitting a warning.</source>
          <target state="translated">调用时， &lt;code&gt;util.deprecate()&lt;/code&gt; 将返回一个函数，该函数将使用&lt;a href=&quot;process#process_event_warning&quot;&gt; &lt;code&gt;'warning'&lt;/code&gt; &lt;/a&gt;事件发出 &lt;code&gt;DeprecationWarning&lt;/code&gt; 。第一次调用返回的函数时，警告将发出并打印到 &lt;code&gt;stderr&lt;/code&gt; 。发出警告后，将调用包装的函数而不发出警告。</target>
        </trans-unit>
        <trans-unit id="782b4e66ba3724b519a47f97cc938ec98cfd3fc0" translate="yes" xml:space="preserve">
          <source>When called, requests that the Node.js event loop &lt;em&gt;not&lt;/em&gt; exit so long as the &lt;code&gt;FSWatcher&lt;/code&gt; is active. Calling &lt;code&gt;watcher.ref()&lt;/code&gt; multiple times will have no effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41e9efc4f4b110bf919f383c4bad1087df420418" translate="yes" xml:space="preserve">
          <source>When called, requests that the Node.js event loop &lt;em&gt;not&lt;/em&gt; exit so long as the &lt;code&gt;Immediate&lt;/code&gt; is active. Calling &lt;code&gt;immediate.ref()&lt;/code&gt; multiple times will have no effect.</source>
          <target state="translated">调用时，请求&amp;ldquo; &lt;code&gt;Immediate&lt;/code&gt; 处于活动状态时&lt;em&gt;不&lt;/em&gt;退出Node.js事件循环。多次调用 &lt;code&gt;immediate.ref()&lt;/code&gt; 将无效。</target>
        </trans-unit>
        <trans-unit id="74a07dd0d422c69557a3f1212fdca158cd9d1388" translate="yes" xml:space="preserve">
          <source>When called, requests that the Node.js event loop &lt;em&gt;not&lt;/em&gt; exit so long as the &lt;code&gt;StatWatcher&lt;/code&gt; is active. Calling &lt;code&gt;watcher.ref()&lt;/code&gt; multiple times will have no effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be1e4bc9da3126435a172ee6de0a8b7b01a0eecb" translate="yes" xml:space="preserve">
          <source>When called, requests that the Node.js event loop &lt;em&gt;not&lt;/em&gt; exit so long as the &lt;code&gt;Timeout&lt;/code&gt; is active. Calling &lt;code&gt;timeout.ref()&lt;/code&gt; multiple times will have no effect.</source>
          <target state="translated">调用时，请求 &lt;code&gt;Timeout&lt;/code&gt; 活动处于活动状态时&lt;em&gt;不&lt;/em&gt;退出Node.js事件循环。多次调用 &lt;code&gt;timeout.ref()&lt;/code&gt; 将无效。</target>
        </trans-unit>
        <trans-unit id="3bdd99a968eb6c7c6f053bc7b91cc625374d6faa" translate="yes" xml:space="preserve">
          <source>When called, the active &lt;code&gt;FSWatcher&lt;/code&gt; object will not require the Node.js event loop to remain active. If there is no other activity keeping the event loop running, the process may exit before the &lt;code&gt;FSWatcher&lt;/code&gt; object's callback is invoked. Calling &lt;code&gt;watcher.unref()&lt;/code&gt; multiple times will have no effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e832ff5be2f07a09ebaa7573b2df95ffeb3614c" translate="yes" xml:space="preserve">
          <source>When called, the active &lt;code&gt;Immediate&lt;/code&gt; object will not require the Node.js event loop to remain active. If there is no other activity keeping the event loop running, the process may exit before the &lt;code&gt;Immediate&lt;/code&gt; object's callback is invoked. Calling &lt;code&gt;immediate.unref()&lt;/code&gt; multiple times will have no effect.</source>
          <target state="translated">调用时，活动的 &lt;code&gt;Immediate&lt;/code&gt; 对象将不需要Node.js事件循环保持活动状态。如果没有其他活动保持事件循环运行，则在调用 &lt;code&gt;Immediate&lt;/code&gt; 对象的回调之前，进程可能会退出。多次调用 &lt;code&gt;immediate.unref()&lt;/code&gt; 将无效。</target>
        </trans-unit>
        <trans-unit id="855b13a333a844940a73826ba1ecc4be80be3cfb" translate="yes" xml:space="preserve">
          <source>When called, the active &lt;code&gt;StatWatcher&lt;/code&gt; object will not require the Node.js event loop to remain active. If there is no other activity keeping the event loop running, the process may exit before the &lt;code&gt;StatWatcher&lt;/code&gt; object's callback is invoked. Calling &lt;code&gt;watcher.unref()&lt;/code&gt; multiple times will have no effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52de90f11b22fd290fb3c08dde2358cfaa2b0340" translate="yes" xml:space="preserve">
          <source>When called, the active &lt;code&gt;Timeout&lt;/code&gt; object will not require the Node.js event loop to remain active. If there is no other activity keeping the event loop running, the process may exit before the &lt;code&gt;Timeout&lt;/code&gt; object's callback is invoked. Calling &lt;code&gt;timeout.unref()&lt;/code&gt; multiple times will have no effect.</source>
          <target state="translated">调用时，活动的 &lt;code&gt;Timeout&lt;/code&gt; 对象将不需要Node.js事件循环保持活动状态。如果没有其他活动保持事件循环运行，则在调用 &lt;code&gt;Timeout&lt;/code&gt; 对象的回调之前，进程可能会退出。多次调用 &lt;code&gt;timeout.unref()&lt;/code&gt; 将无效。</target>
        </trans-unit>
        <trans-unit id="9472be900a89f3ccdcf5acc7441e9034a55e1be5" translate="yes" xml:space="preserve">
          <source>When calling &lt;a href=&quot;#buffer_class_method_buffer_allocunsafe_size&quot;&gt;&lt;code&gt;Buffer.allocUnsafe()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#buffer_class_method_buffer_allocunsafeslow_size&quot;&gt;&lt;code&gt;Buffer.allocUnsafeSlow()&lt;/code&gt;&lt;/a&gt;, the segment of allocated memory is &lt;em&gt;uninitialized&lt;/em&gt; (it is not zeroed-out). While this design makes the allocation of memory quite fast, the allocated segment of memory might contain old data that is potentially sensitive. Using a &lt;code&gt;Buffer&lt;/code&gt; created by &lt;a href=&quot;#buffer_class_method_buffer_allocunsafe_size&quot;&gt;&lt;code&gt;Buffer.allocUnsafe()&lt;/code&gt;&lt;/a&gt; without &lt;em&gt;completely&lt;/em&gt; overwriting the memory can allow this old data to be leaked when the &lt;code&gt;Buffer&lt;/code&gt; memory is read.</source>
          <target state="translated">调用&lt;a href=&quot;#buffer_class_method_buffer_allocunsafe_size&quot;&gt; &lt;code&gt;Buffer.allocUnsafe()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#buffer_class_method_buffer_allocunsafeslow_size&quot;&gt; &lt;code&gt;Buffer.allocUnsafeSlow()&lt;/code&gt; 时&lt;/a&gt;，分配的内存段&lt;em&gt;未初始化&lt;/em&gt;（未归零）。尽管此设计使内存分配非常快，但是分配的内存段可能包含潜在敏感的旧数据。在不&lt;em&gt;完全&lt;/em&gt;覆盖内存的情况下使用由&lt;a href=&quot;#buffer_class_method_buffer_allocunsafe_size&quot;&gt; &lt;code&gt;Buffer.allocUnsafe()&lt;/code&gt; &lt;/a&gt;创建的 &lt;code&gt;Buffer&lt;/code&gt; 可能会导致在读取 &lt;code&gt;Buffer&lt;/code&gt; 内存时泄漏这些旧数据。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="96f6bf2e2ec8bbbea1c61816a4f0b4a72612a006" translate="yes" xml:space="preserve">
          <source>When calling &lt;a href=&quot;#buffer_static_method_buffer_allocunsafe_size&quot;&gt;&lt;code&gt;Buffer.allocUnsafe()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#buffer_static_method_buffer_allocunsafeslow_size&quot;&gt;&lt;code&gt;Buffer.allocUnsafeSlow()&lt;/code&gt;&lt;/a&gt;, the segment of allocated memory is &lt;em&gt;uninitialized&lt;/em&gt; (it is not zeroed-out). While this design makes the allocation of memory quite fast, the allocated segment of memory might contain old data that is potentially sensitive. Using a &lt;code&gt;Buffer&lt;/code&gt; created by &lt;a href=&quot;#buffer_static_method_buffer_allocunsafe_size&quot;&gt;&lt;code&gt;Buffer.allocUnsafe()&lt;/code&gt;&lt;/a&gt; without &lt;em&gt;completely&lt;/em&gt; overwriting the memory can allow this old data to be leaked when the &lt;code&gt;Buffer&lt;/code&gt; memory is read.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="468120732bcdf214c7e9f58563736b992ee8c4bf" translate="yes" xml:space="preserve">
          <source>When calling &lt;a href=&quot;modules#modules_require_id&quot;&gt;&lt;code&gt;require()&lt;/code&gt;&lt;/a&gt;, the &lt;code&gt;.node&lt;/code&gt; extension can usually be omitted and Node.js will still find and initialize the Addon. One caveat, however, is that Node.js will first attempt to locate and load modules or JavaScript files that happen to share the same base name. For instance, if there is a file &lt;code&gt;addon.js&lt;/code&gt; in the same directory as the binary &lt;code&gt;addon.node&lt;/code&gt;, then &lt;a href=&quot;modules#modules_require_id&quot;&gt;&lt;code&gt;require('addon')&lt;/code&gt;&lt;/a&gt; will give precedence to the &lt;code&gt;addon.js&lt;/code&gt; file and load it instead.</source>
          <target state="translated">调用&lt;a href=&quot;modules#modules_require_id&quot;&gt; &lt;code&gt;require()&lt;/code&gt; 时&lt;/a&gt;，通常可以省略 &lt;code&gt;.node&lt;/code&gt; 扩展名，并且Node.js仍将查找并初始化插件。但是，一个警告是，Node.js将首先尝试查找和加载碰巧共享相同基本名称的模块或JavaScript文件。例如，如果在与二进制文件 &lt;code&gt;addon.node&lt;/code&gt; 相同的目录中有一个文件 &lt;code&gt;addon.js&lt;/code&gt; ，则&lt;a href=&quot;modules#modules_require_id&quot;&gt; &lt;code&gt;require('addon')&lt;/code&gt; &lt;/a&gt;将优先于 &lt;code&gt;addon.js&lt;/code&gt; 文件并加载它。</target>
        </trans-unit>
        <trans-unit id="da566e0b89c4ee78a1cb664d3a13e2b25f5806e2" translate="yes" xml:space="preserve">
          <source>When calling &lt;a href=&quot;modules#modules_require_id&quot;&gt;&lt;code&gt;require()&lt;/code&gt;&lt;/a&gt;, the &lt;code&gt;.node&lt;/code&gt; extension can usually be omitted and Node.js will still find and initialize the addon. One caveat, however, is that Node.js will first attempt to locate and load modules or JavaScript files that happen to share the same base name. For instance, if there is a file &lt;code&gt;addon.js&lt;/code&gt; in the same directory as the binary &lt;code&gt;addon.node&lt;/code&gt;, then &lt;a href=&quot;modules#modules_require_id&quot;&gt;&lt;code&gt;require('addon')&lt;/code&gt;&lt;/a&gt; will give precedence to the &lt;code&gt;addon.js&lt;/code&gt; file and load it instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa673ee946e346399b283e0ddd06ac9b7dc3be24" translate="yes" xml:space="preserve">
          <source>When calling &lt;code&gt;asyncLocalStorage.disable()&lt;/code&gt;, all current contexts linked to the instance will be exited.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01bbab8a41af1b936d094221718dc42485ff9707" translate="yes" xml:space="preserve">
          <source>When connecting as a client, if the remote IP address is blocked, the connection attempt will be rejected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35899d0224206f7ecd5b079bec2e5ae41bf88bc6" translate="yes" xml:space="preserve">
          <source>When converting between &lt;code&gt;Buffer&lt;/code&gt;s and strings, a character encoding may be specified. If no character encoding is specified, UTF-8 will be used as the default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69c454c7fd1f23edf7fd0f8da819640c0634eb1b" translate="yes" xml:space="preserve">
          <source>When created, the &lt;code&gt;Tracing&lt;/code&gt; object is disabled. Calling the &lt;code&gt;tracing.enable()&lt;/code&gt; method adds the categories to the set of enabled trace event categories. Calling &lt;code&gt;tracing.disable()&lt;/code&gt; will remove the categories from the set of enabled trace event categories.</source>
          <target state="translated">创建 &lt;code&gt;Tracing&lt;/code&gt; 对象后，该对象将被禁用。调用 &lt;code&gt;tracing.enable()&lt;/code&gt; 方法会将类别添加到已启用的跟踪事件类别的集合中。调用 &lt;code&gt;tracing.disable()&lt;/code&gt; 将从已启用的跟踪事件类别集中删除类别。</target>
        </trans-unit>
        <trans-unit id="cdfbef80b77a4d29415e274eb994b5bd25290e5d" translate="yes" xml:space="preserve">
          <source>When creating a &lt;code&gt;Buffer&lt;/code&gt; using a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray&quot;&gt;&lt;code&gt;TypedArray&lt;/code&gt;&lt;/a&gt;'s &lt;code&gt;.buffer&lt;/code&gt;, it is possible to use only a portion of the underlying &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt; by passing in &lt;code&gt;byteOffset&lt;/code&gt; and &lt;code&gt;length&lt;/code&gt; parameters.</source>
          <target state="translated">使用&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray&quot;&gt; &lt;code&gt;TypedArray&lt;/code&gt; &lt;/a&gt;的 &lt;code&gt;.buffer&lt;/code&gt; 创建 &lt;code&gt;Buffer&lt;/code&gt; 时，可以通过传入 &lt;code&gt;byteOffset&lt;/code&gt; 和 &lt;code&gt;length&lt;/code&gt; 参数来仅使用底层&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer&quot;&gt; &lt;code&gt;ArrayBuffer&lt;/code&gt; &lt;/a&gt;的一部分。</target>
        </trans-unit>
        <trans-unit id="05011da92dca1fbee82021fa4aeff73f6a280090" translate="yes" xml:space="preserve">
          <source>When data has been encrypted without standard block padding, calling &lt;code&gt;decipher.setAutoPadding(false)&lt;/code&gt; will disable automatic padding to prevent &lt;a href=&quot;#crypto_decipher_final_outputencoding&quot;&gt;&lt;code&gt;decipher.final()&lt;/code&gt;&lt;/a&gt; from checking for and removing padding.</source>
          <target state="translated">当数据已加密且没有标准块填充时，调用 &lt;code&gt;decipher.setAutoPadding(false)&lt;/code&gt; 将禁用自动填充，以防止&lt;a href=&quot;#crypto_decipher_final_outputencoding&quot;&gt; &lt;code&gt;decipher.final()&lt;/code&gt; &lt;/a&gt;检查并删除填充。</target>
        </trans-unit>
        <trans-unit id="41a108b65d6c3bc13552fc5b243229555d3f5234" translate="yes" xml:space="preserve">
          <source>When decrypting, the authentication tag must be set via &lt;code&gt;setAuthTag()&lt;/code&gt; before calling &lt;code&gt;update()&lt;/code&gt;. Otherwise, decryption will fail and &lt;code&gt;final()&lt;/code&gt; will throw an error in compliance with section 2.6 of &lt;a href=&quot;https://www.rfc-editor.org/rfc/rfc3610.txt&quot;&gt;RFC 3610&lt;/a&gt;.</source>
          <target state="translated">解密时，必须在调用 &lt;code&gt;update()&lt;/code&gt; 之前通过 &lt;code&gt;setAuthTag()&lt;/code&gt; 设置身份验证标签。否则，解密将失败，并且 &lt;code&gt;final()&lt;/code&gt; 将抛出与&lt;a href=&quot;https://www.rfc-editor.org/rfc/rfc3610.txt&quot;&gt;RFC 3610的&lt;/a&gt; 2.6节兼容的错误。</target>
        </trans-unit>
        <trans-unit id="7900ae4062073e82206b0fa6925789e3589d4177" translate="yes" xml:space="preserve">
          <source>When enabled, TLS packet trace information is written to &lt;code&gt;stderr&lt;/code&gt;. This can be used to debug TLS connection problems.</source>
          <target state="translated">启用后，TLS数据包跟踪信息将写入 &lt;code&gt;stderr&lt;/code&gt; 。这可用于调试TLS连接问题。</target>
        </trans-unit>
        <trans-unit id="6983a109482d5a03d2a40f9b0b6b02c14a31403b" translate="yes" xml:space="preserve">
          <source>When encoding public keys, it is recommended to use &lt;code&gt;'spki'&lt;/code&gt;. When encoding private keys, it is recommended to use &lt;code&gt;'pkcs8'&lt;/code&gt; with a strong passphrase, and to keep the passphrase confidential.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7ef1148fcaa829598a8bfe1284ca6b09d93c35a" translate="yes" xml:space="preserve">
          <source>When encoding public keys, it is recommended to use &lt;code&gt;'spki'&lt;/code&gt;. When encoding private keys, it is recommended to use &lt;code&gt;'pks8'&lt;/code&gt; with a strong passphrase, and to keep the passphrase confidential.</source>
          <target state="translated">编码公共密钥时，建议使用 &lt;code&gt;'spki'&lt;/code&gt; 。在对私钥进行编码时，建议使用带有强密码短语的 &lt;code&gt;'pks8'&lt;/code&gt; ，并对密码短语进行保密。</target>
        </trans-unit>
        <trans-unit id="05906fb7a190e151a8a2e400c141bb3e603ff56b" translate="yes" xml:space="preserve">
          <source>When encountering this error, a possible alternative to creating a &lt;code&gt;Buffer&lt;/code&gt; instance is to create a normal &lt;code&gt;Uint8Array&lt;/code&gt;, which only differs in the prototype of the resulting object. &lt;code&gt;Uint8Array&lt;/code&gt;s are generally accepted in all Node.js core APIs where &lt;code&gt;Buffer&lt;/code&gt;s are; they are available in all Contexts.</source>
          <target state="translated">遇到此错误时，创建 &lt;code&gt;Buffer&lt;/code&gt; 实例的一种可能替代方法是创建一个普通的 &lt;code&gt;Uint8Array&lt;/code&gt; ，仅在所得对象的原型上有所不同。在所有 &lt;code&gt;Buffer&lt;/code&gt; 所在的Node.js核心API中，通常都接受 &lt;code&gt;Uint8Array&lt;/code&gt; 。它们在所有上下文中均可用。</target>
        </trans-unit>
        <trans-unit id="fbea7195eb1a28298b5c6bcea88ce20614ead794" translate="yes" xml:space="preserve">
          <source>When extending streams, keep in mind what options the user can and should provide before forwarding these to the base constructor. For example, if the implementation makes assumptions in regard to the &lt;code&gt;autoDestroy&lt;/code&gt; and &lt;code&gt;emitClose&lt;/code&gt; options, do not allow the user to override these. Be explicit about what options are forwarded instead of implicitly forwarding all options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3a545d2ef71b7de3995f4fd31454d72ba7d867d" translate="yes" xml:space="preserve">
          <source>When generating snapshots, garbage collection may be triggered and bring the heap usage down, therefore multiple snapshots may be written to disk before the Node.js instance finally runs out of memory. These heap snapshots can be compared to determine what objects are being allocated during the time consecutive snapshots are taken. It's not guaranteed that Node.js will write exactly &lt;code&gt;max_count&lt;/code&gt; snapshots to disk, but it will try its best to generate at least one and up to &lt;code&gt;max_count&lt;/code&gt; snapshots before the Node.js instance runs out of memory when &lt;code&gt;max_count&lt;/code&gt; is greater than &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e76bc96e47739cd7dc97aceca50067613ec70e6a" translate="yes" xml:space="preserve">
          <source>When having multiple instances of &lt;code&gt;AsyncLocalStorage&lt;/code&gt;, they are independent from each other. It is safe to instantiate this class multiple times.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b68d52fb44ce1ad14ef826fcceca8bc169d525a5" translate="yes" xml:space="preserve">
          <source>When headers have been set with &lt;a href=&quot;#http2_response_setheader_name_value&quot;&gt;&lt;code&gt;response.setHeader()&lt;/code&gt;&lt;/a&gt;, they will be merged with any headers passed to &lt;a href=&quot;#http2_response_writehead_statuscode_statusmessage_headers&quot;&gt;&lt;code&gt;response.writeHead()&lt;/code&gt;&lt;/a&gt;, with the headers passed to &lt;a href=&quot;#http2_response_writehead_statuscode_statusmessage_headers&quot;&gt;&lt;code&gt;response.writeHead()&lt;/code&gt;&lt;/a&gt; given precedence.</source>
          <target state="translated">如果已使用&lt;a href=&quot;#http2_response_setheader_name_value&quot;&gt; &lt;code&gt;response.setHeader()&lt;/code&gt; &lt;/a&gt;设置标头，则它们将与传递给&lt;a href=&quot;#http2_response_writehead_statuscode_statusmessage_headers&quot;&gt; &lt;code&gt;response.writeHead()&lt;/code&gt; 的&lt;/a&gt;任何标头合并，并优先传递给&lt;a href=&quot;#http2_response_writehead_statuscode_statusmessage_headers&quot;&gt; &lt;code&gt;response.writeHead()&lt;/code&gt; &lt;/a&gt;的标头。</target>
        </trans-unit>
        <trans-unit id="c27d25166c52526d61af879040d266b4ce3293c5" translate="yes" xml:space="preserve">
          <source>When headers have been set with &lt;a href=&quot;#http_response_setheader_name_value&quot;&gt;&lt;code&gt;response.setHeader()&lt;/code&gt;&lt;/a&gt;, they will be merged with any headers passed to &lt;a href=&quot;#http_response_writehead_statuscode_statusmessage_headers&quot;&gt;&lt;code&gt;response.writeHead()&lt;/code&gt;&lt;/a&gt;, with the headers passed to &lt;a href=&quot;#http_response_writehead_statuscode_statusmessage_headers&quot;&gt;&lt;code&gt;response.writeHead()&lt;/code&gt;&lt;/a&gt; given precedence.</source>
          <target state="translated">如果已使用&lt;a href=&quot;#http_response_setheader_name_value&quot;&gt; &lt;code&gt;response.setHeader()&lt;/code&gt; &lt;/a&gt;设置标头，则它们将与传递给&lt;a href=&quot;#http_response_writehead_statuscode_statusmessage_headers&quot;&gt; &lt;code&gt;response.writeHead()&lt;/code&gt; 的&lt;/a&gt;任何标头合并，并优先传递给&lt;a href=&quot;#http_response_writehead_statuscode_statusmessage_headers&quot;&gt; &lt;code&gt;response.writeHead()&lt;/code&gt; &lt;/a&gt;的标头。</target>
        </trans-unit>
        <trans-unit id="30fa6efb90162b70bba910948f8d508f93d02aec" translate="yes" xml:space="preserve">
          <source>When hooks are used they only apply to ES module loading and not to any CommonJS modules loaded.</source>
          <target state="translated">当使用钩子时,它们只适用于ES模块加载,而不是任何CommonJS模块加载。</target>
        </trans-unit>
        <trans-unit id="b5a6dd08e0729dc5592da6bcbaa315760902c033" translate="yes" xml:space="preserve">
          <source>When implementing a worker pool, use the &lt;a href=&quot;async_hooks#async_hooks_class_asyncresource&quot;&gt;&lt;code&gt;AsyncResource&lt;/code&gt;&lt;/a&gt; API to inform diagnostic tools (e.g. in order to provide asynchronous stack traces) about the correlation between tasks and their outcomes.</source>
          <target state="translated">在实现工作池时，请使用&lt;a href=&quot;async_hooks#async_hooks_class_asyncresource&quot;&gt; &lt;code&gt;AsyncResource&lt;/code&gt; &lt;/a&gt; API通知诊断工具（例如，以便提供异步堆栈跟踪）有关任务及其结果之间的相关性。</target>
        </trans-unit>
        <trans-unit id="86fa0425ee48db6d8d29ec95b9974a8ecde279dc" translate="yes" xml:space="preserve">
          <source>When implementing a worker pool, use the &lt;a href=&quot;async_hooks#async_hooks_class_asyncresource&quot;&gt;&lt;code&gt;AsyncResource&lt;/code&gt;&lt;/a&gt; API to inform diagnostic tools (e.g. in order to provide asynchronous stack traces) about the correlation between tasks and their outcomes. See &lt;a href=&quot;async_hooks#async-resource-worker-pool&quot;&gt;&quot;Using &lt;code&gt;AsyncResource&lt;/code&gt; for a &lt;code&gt;Worker&lt;/code&gt; thread pool&quot;&lt;/a&gt; in the &lt;code&gt;async_hooks&lt;/code&gt; documentation for an example implementation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9c208a745801e45a4f35ec88446a8d65ce92804" translate="yes" xml:space="preserve">
          <source>When implementing a worker pool, use the &lt;a href=&quot;async_hooks#async_hooks_class_asyncresource&quot;&gt;&lt;code&gt;AsyncResource&lt;/code&gt;&lt;/a&gt; API to inform diagnostic tools (e.g. to provide asynchronous stack traces) about the correlation between tasks and their outcomes. See &lt;a href=&quot;async_hooks#async-resource-worker-pool&quot;&gt;&quot;Using &lt;code&gt;AsyncResource&lt;/code&gt; for a &lt;code&gt;Worker&lt;/code&gt; thread pool&quot;&lt;/a&gt; in the &lt;code&gt;async_hooks&lt;/code&gt; documentation for an example implementation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9447dff2dc7b6ea8f82aeb79872b54050b5c6671" translate="yes" xml:space="preserve">
          <source>When importing &lt;a href=&quot;#esm_commonjs_namespaces&quot;&gt;CommonJS modules&lt;/a&gt;, the &lt;code&gt;module.exports&lt;/code&gt; object is provided as the default export. Named exports may be available, provided by static analysis as a convenience for better ecosystem compatibility.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db0a58857ea8172591d17a349d053d1cf051d60f" translate="yes" xml:space="preserve">
          <source>When importing a CommonJS module, it can be reliably imported using the ES module default import or its corresponding sugar syntax:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc3b5f795fe89b94678eaec7d3231cbad8bf6c33" translate="yes" xml:space="preserve">
          <source>When in raw mode, input is always available character-by-character, not including modifiers. Additionally, all special processing of characters by the terminal is disabled, including echoing input characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9ddcbd7ac9a3379f4508938d4baf9617576b349" translate="yes" xml:space="preserve">
          <source>When in raw mode, input is always available character-by-character, not including modifiers. Additionally, all special processing of characters by the terminal is disabled, including echoing input characters. &lt;code&gt;CTRL&lt;/code&gt;+&lt;code&gt;C&lt;/code&gt; will no longer cause a &lt;code&gt;SIGINT&lt;/code&gt; when in this mode.</source>
          <target state="translated">在原始模式下，输入始终按字符可用，不包括修饰符。此外，将禁用终端对字符的所有特殊处理，包括回显输入字符。在此模式下， &lt;code&gt;CTRL&lt;/code&gt; + &lt;code&gt;C&lt;/code&gt; 将不再导致 &lt;code&gt;SIGINT&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cd0a26ba226713539b41536c16abf31af0d2cd2d" translate="yes" xml:space="preserve">
          <source>When iterating over &lt;code&gt;process.allowedNodeEnvironmentFlags&lt;/code&gt;, flags will appear only &lt;em&gt;once&lt;/em&gt;; each will begin with one or more dashes. Flags passed through to V8 will contain underscores instead of non-leading dashes:</source>
          <target state="translated">当遍历 &lt;code&gt;process.allowedNodeEnvironmentFlags&lt;/code&gt; 时，标志只会出现&lt;em&gt;一次&lt;/em&gt;；每个将以一个或多个破折号开头。传递给V8的标志将包含下划线而不是非引号。</target>
        </trans-unit>
        <trans-unit id="e74d2be5a7317a9ec278704eed362d45bd75d40b" translate="yes" xml:space="preserve">
          <source>When listening as a server, if a packet is received from a blocked address, the packet will be ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="152f4ff941bc3f806360985c462b440ec7b21293" translate="yes" xml:space="preserve">
          <source>When loading resources the entire URL must match including search parameters and hash fragment. &lt;code&gt;./a.js?b&lt;/code&gt; will not be used when attempting to load &lt;code&gt;./a.js&lt;/code&gt; and vice versa.</source>
          <target state="translated">加载资源时，整个URL必须匹配，包括搜索参数和哈希片段。 &lt;code&gt;./a.js?b&lt;/code&gt; 不会在尝试加载 &lt;code&gt;./a.js&lt;/code&gt; 时使用，反之亦然。</target>
        </trans-unit>
        <trans-unit id="aa04f5cf4c0a06d2c3131d5e120108e37b37f3ff" translate="yes" xml:space="preserve">
          <source>When looking for the CommonJS modules that have required the current one, &lt;code&gt;require.cache&lt;/code&gt; and &lt;code&gt;module.children&lt;/code&gt; can be used:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e88de394e67150d9975fd970bf780f1247bdc0e" translate="yes" xml:space="preserve">
          <source>When multi-line input is being entered, an ellipsis is printed rather than the 'prompt'.</source>
          <target state="translated">当输入多行输入时,会打印一个省略号,而不是 &quot;提示&quot;。</target>
        </trans-unit>
        <trans-unit id="da3fdcb3773839fe853004d32c8734d9ff43b77b" translate="yes" xml:space="preserve">
          <source>When multiple calls to &lt;code&gt;setImmediate()&lt;/code&gt; are made, the &lt;code&gt;callback&lt;/code&gt; functions are queued for execution in the order in which they are created. The entire callback queue is processed every event loop iteration. If an immediate timer is queued from inside an executing callback, that timer will not be triggered until the next event loop iteration.</source>
          <target state="translated">当对 &lt;code&gt;setImmediate()&lt;/code&gt; 进行多次调用时， &lt;code&gt;callback&lt;/code&gt; 函数将按照创建它们的顺序排队等待执行。每次事件循环迭代都会处理整个回调队列。如果立即计时器从正在执行的回调内部排队，则该计时器将在下一次事件循环迭代之前不被触发。</target>
        </trans-unit>
        <trans-unit id="798ac8eedc938f74e1db139185f92862c77691f3" translate="yes" xml:space="preserve">
          <source>When multiple, sequential path segment separation characters are found (e.g. &lt;code&gt;/&lt;/code&gt; on POSIX and either &lt;code&gt;\&lt;/code&gt; or &lt;code&gt;/&lt;/code&gt; on Windows), they are replaced by a single instance of the platform-specific path segment separator (&lt;code&gt;/&lt;/code&gt; on POSIX and &lt;code&gt;\&lt;/code&gt; on Windows). Trailing separators are preserved.</source>
          <target state="translated">当多个连续的路径段的分离的字符被发现（例如 &lt;code&gt;/&lt;/code&gt; 上POSIX，要么 &lt;code&gt;\&lt;/code&gt; 或 &lt;code&gt;/&lt;/code&gt; （在Windows上），它们由特定于平台的路径段分离器的单一实例替换 &lt;code&gt;/&lt;/code&gt; 上POSIX和 &lt;code&gt;\&lt;/code&gt; Windows上）。尾随的分隔符被保留。</target>
        </trans-unit>
        <trans-unit id="33339c7accc5eb5c867d93f62942b6b1c37dab1e" translate="yes" xml:space="preserve">
          <source>When negotiating TLS-PSK (pre-shared keys), this function is called with optional identity &lt;code&gt;hint&lt;/code&gt; provided by the server or &lt;code&gt;null&lt;/code&gt; in case of TLS 1.3 where &lt;code&gt;hint&lt;/code&gt; was removed. It will be necessary to provide a custom &lt;code&gt;tls.checkServerIdentity()&lt;/code&gt; for the connection as the default one will try to check host name/IP of the server against the certificate but that's not applicable for PSK because there won't be a certificate present. More information can be found in the &lt;a href=&quot;https://tools.ietf.org/html/rfc4279&quot;&gt;RFC 4279&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d0d09a9388f0d0382aca9117ad64b6468d50a91" translate="yes" xml:space="preserve">
          <source>When negotiating TLS-PSK (pre-shared keys), this function is called with the identity provided by the client. If the return value is &lt;code&gt;null&lt;/code&gt; the negotiation process will stop and an &quot;unknown_psk_identity&quot; alert message will be sent to the other party. If the server wishes to hide the fact that the PSK identity was not known, the callback must provide some random data as &lt;code&gt;psk&lt;/code&gt; to make the connection fail with &quot;decrypt_error&quot; before negotiation is finished. PSK ciphers are disabled by default, and using TLS-PSK thus requires explicitly specifying a cipher suite with the &lt;code&gt;ciphers&lt;/code&gt; option. More information can be found in the &lt;a href=&quot;https://tools.ietf.org/html/rfc4279&quot;&gt;RFC 4279&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04c7d9678da6dfcd3add1c63322a588714097a94" translate="yes" xml:space="preserve">
          <source>When nesting scopes, there are cases where a handle from an inner scope needs to live beyond the lifespan of that scope. N-API supports an 'escapable scope' in order to support this case. An escapable scope allows one handle to be 'promoted' so that it 'escapes' the current scope and the lifespan of the handle changes from the current scope to that of the outer scope.</source>
          <target state="translated">在嵌套作用域时,有些情况下,来自内部作用域的句柄需要在该作用域的生命周期之后继续存在。N-API支持 &quot;可逃逸的作用域&quot;,以支持这种情况。一个可逃逸的作用域允许一个句柄被 &quot;提升&quot;,这样它就可以 &quot;逃逸 &quot;当前作用域,而句柄的寿命从当前作用域变为外部作用域。</target>
        </trans-unit>
        <trans-unit id="1ac9efff7e0ed2baf0cde15422c85d12b4cfa7e9" translate="yes" xml:space="preserve">
          <source>When non-ASCII characters appear within a host name, the host name is encoded using the &lt;a href=&quot;https://tools.ietf.org/html/rfc5891#section-4.4&quot;&gt;Punycode&lt;/a&gt; algorithm. Note, however, that a host name &lt;em&gt;may&lt;/em&gt; contain &lt;em&gt;both&lt;/em&gt; Punycode encoded and percent-encoded characters:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10235144f1c4270cc259caf923559f1488e62e3a" translate="yes" xml:space="preserve">
          <source>When non-ASCII characters appear within a hostname, the hostname is encoded using the &lt;a href=&quot;https://tools.ietf.org/html/rfc5891#section-4.4&quot;&gt;Punycode&lt;/a&gt; algorithm. Note, however, that a hostname &lt;em&gt;may&lt;/em&gt; contain &lt;em&gt;both&lt;/em&gt; Punycode encoded and percent-encoded characters:</source>
          <target state="translated">当主机名中出现非ASCII字符时，将使用&lt;a href=&quot;https://tools.ietf.org/html/rfc5891#section-4.4&quot;&gt;Punycode&lt;/a&gt;算法对主机名进行编码。但是请注意，一个主机名&lt;em&gt;可能&lt;/em&gt;包含&lt;em&gt;两个&lt;/em&gt;的Punycode编码，百分比编码字符：</target>
        </trans-unit>
        <trans-unit id="0a421b9c16e5b3e7316b0d634726cc34111fd19c" translate="yes" xml:space="preserve">
          <source>When not using N-API, implementing Addons is complicated, involving knowledge of several components and APIs:</source>
          <target state="translated">当不使用N-API时,实现Addons是很复杂的,涉及多个组件和API的知识。</target>
        </trans-unit>
        <trans-unit id="b75365dd456e2085d1af3e62e1e9c9ca89f8f54f" translate="yes" xml:space="preserve">
          <source>When not using N-API, implementing addons is complicated, involving knowledge of several components and APIs:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9264aa00cdf70e8036e90c5dcb862b3e0cf826b" translate="yes" xml:space="preserve">
          <source>When operating on file handles, the mode cannot be changed from what it was set to with &lt;a href=&quot;#fs_fspromises_open_path_flags_mode&quot;&gt;&lt;code&gt;fsPromises.open()&lt;/code&gt;&lt;/a&gt;. Therefore, this is equivalent to &lt;a href=&quot;#fs_filehandle_writefile_data_options&quot;&gt;&lt;code&gt;filehandle.writeFile()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7403bcfa35b1ae51039252b3f7bbba8a1bd6482b" translate="yes" xml:space="preserve">
          <source>When passing additional authenticated data (AAD), the length of the actual message in bytes must be passed to &lt;code&gt;setAAD()&lt;/code&gt; via the &lt;code&gt;plaintextLength&lt;/code&gt; option. Many crypto libraries include the authentication tag in the ciphertext, which means that they produce ciphertexts of the length &lt;code&gt;plaintextLength + authTagLength&lt;/code&gt;. Node.js does not include the authentication tag, so the ciphertext length is always &lt;code&gt;plaintextLength&lt;/code&gt;. This is not necessary if no AAD is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8683bab3670783f3e04b5996df01e0d7dd2896d5" translate="yes" xml:space="preserve">
          <source>When passing additional authenticated data (AAD), the length of the actual message in bytes must be passed to &lt;code&gt;setAAD()&lt;/code&gt; via the &lt;code&gt;plaintextLength&lt;/code&gt; option. This is not necessary if no AAD is used.</source>
          <target state="translated">当传递其他认证数据（AAD）时，必须通过 &lt;code&gt;plaintextLength&lt;/code&gt; 选项将实际消息的长度（以字节为 &lt;code&gt;setAAD()&lt;/code&gt; 传递给setAAD（）。如果不使用AAD，则没有必要。</target>
        </trans-unit>
        <trans-unit id="9ba341ca5199ac44852abeb44a5301af661ece2d" translate="yes" xml:space="preserve">
          <source>When providing properties to the &lt;code&gt;pathObject&lt;/code&gt; remember that there are combinations where one property has priority over another:</source>
          <target state="translated">在为 &lt;code&gt;pathObject&lt;/code&gt; 提供属性时，请记住，在某些组合中，一个属性优先于另一个属性：</target>
        </trans-unit>
        <trans-unit id="cec04fbd71c75ae41d540467b94b25559cc93156" translate="yes" xml:space="preserve">
          <source>When running Node.js, custom user conditions can be added with the &lt;code&gt;--conditions&lt;/code&gt; flag:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0944cac5b42f3c2ff1100fac2f3b7a8f1fc8ea80" translate="yes" xml:space="preserve">
          <source>When running as the server, the socket will be destroyed with an error after &lt;code&gt;handshakeTimeout&lt;/code&gt; timeout.</source>
          <target state="translated">当作为服务器运行时，套接字将在 &lt;code&gt;handshakeTimeout&lt;/code&gt; 超时后被破坏并报错。</target>
        </trans-unit>
        <trans-unit id="3e15b5e8110d7e4311accf450e570804ba7780a4" translate="yes" xml:space="preserve">
          <source>When sending request through a keep-alive enabled agent, the underlying socket might be reused. But if server closes connection at unfortunate time, client may run into a 'ECONNRESET' error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19afa335a5a1a42b34eda8c5c3d35d2ff56880d3" translate="yes" xml:space="preserve">
          <source>When set to &lt;code&gt;1&lt;/code&gt;, emit pending deprecation warnings.</source>
          <target state="translated">设置为 &lt;code&gt;1&lt;/code&gt; 时，发出挂起的弃用警告。</target>
        </trans-unit>
        <trans-unit id="9967655ab23757c342e087c9abcca7e897cc09b4" translate="yes" xml:space="preserve">
          <source>When set to &lt;code&gt;1&lt;/code&gt;, instructs the module loader to preserve symbolic links when resolving and caching modules.</source>
          <target state="translated">设置为 &lt;code&gt;1&lt;/code&gt; 时，指示模块加载器在解析和缓存模块时保留符号链接。</target>
        </trans-unit>
        <trans-unit id="69eba8f2f8e4e897994fbb45673663b7f28cc8f9" translate="yes" xml:space="preserve">
          <source>When set to &lt;code&gt;1&lt;/code&gt;, process warnings are silenced.</source>
          <target state="translated">设置为 &lt;code&gt;1&lt;/code&gt; 时，过程警告将静音。</target>
        </trans-unit>
        <trans-unit id="fc9e5b7fcfaf3f43b575085ed7b886c4b43ff254" translate="yes" xml:space="preserve">
          <source>When set, Node.js will begin outputting &lt;a href=&quot;https://v8project.blogspot.com/2017/12/javascript-code-coverage.html&quot;&gt;V8 JavaScript code coverage&lt;/a&gt; and &lt;a href=&quot;https://sourcemaps.info/spec.html&quot;&gt;Source Map&lt;/a&gt; data to the directory provided as an argument (coverage information is written as JSON to files with a &lt;code&gt;coverage&lt;/code&gt; prefix).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4676881586437aa22ae98370e5573441d068f144" translate="yes" xml:space="preserve">
          <source>When set, Node.js will begin outputting &lt;a href=&quot;https://v8project.blogspot.com/2017/12/javascript-code-coverage.html&quot;&gt;V8 JavaScript code coverage&lt;/a&gt; to the directory provided as an argument. Coverage is output as an array of &lt;a href=&quot;https://chromedevtools.github.io/devtools-protocol/tot/Profiler#type-ScriptCoverage&quot;&gt;ScriptCoverage&lt;/a&gt; objects:</source>
          <target state="translated">设置后，Node.js将开始将&lt;a href=&quot;https://v8project.blogspot.com/2017/12/javascript-code-coverage.html&quot;&gt;V8 JavaScript代码覆盖率&lt;/a&gt;输出到作为参数提供的目录中。Coverage作为&lt;a href=&quot;https://chromedevtools.github.io/devtools-protocol/tot/Profiler#type-ScriptCoverage&quot;&gt;ScriptCoverage&lt;/a&gt;对象的数组输出：</target>
        </trans-unit>
        <trans-unit id="43bc494caa00b16fbe479ff6c1a8ba8a4a01ffcf" translate="yes" xml:space="preserve">
          <source>When set, a memory file mapping is used to access the file. This flag is available on Windows operating systems only. On other operating systems, this flag is ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9ad737be96822ad9acfdd2cb175b36332328f41" translate="yes" xml:space="preserve">
          <source>When set, an attempt will be made to minimize caching effects of file I/O.</source>
          <target state="translated">当设置时,将尝试减少文件I/O的缓存效果。</target>
        </trans-unit>
        <trans-unit id="c2ae5aecd16350b5fc32d69e0be29e2779f212ba" translate="yes" xml:space="preserve">
          <source>When set, colors will not be used in the REPL.</source>
          <target state="translated">当设置时,颜色将不会在REPL中使用。</target>
        </trans-unit>
        <trans-unit id="8933a68a9c2d796954f82edce5bf021ad21802b1" translate="yes" xml:space="preserve">
          <source>When set, process warnings will be emitted to the given file instead of printing to stderr. The file will be created if it does not exist, and will be appended to if it does. If an error occurs while attempting to write the warning to the file, the warning will be written to stderr instead. This is equivalent to using the &lt;code&gt;--redirect-warnings=file&lt;/code&gt; command-line flag.</source>
          <target state="translated">设置后，过程警告将被发送到给定的文件，而不是打印到stderr。如果文件不存在，则将创建该文件；如果文件不存在，则将附加到该文件。如果在尝试将警告写入文件时发生错误，则会将警告写入stderr。这等效于使用 &lt;code&gt;--redirect-warnings=file&lt;/code&gt; 命令行标志。</target>
        </trans-unit>
        <trans-unit id="cc0c1ee3850dee15dcc0b864f7be858c91b16927" translate="yes" xml:space="preserve">
          <source>When set, the well known &quot;root&quot; CAs (like VeriSign) will be extended with the extra certificates in &lt;code&gt;file&lt;/code&gt;. The file should consist of one or more trusted certificates in PEM format. A message will be emitted (once) with &lt;a href=&quot;process#process_process_emitwarning_warning_type_code_ctor&quot;&gt;&lt;code&gt;process.emitWarning()&lt;/code&gt;&lt;/a&gt; if the file is missing or malformed, but any errors are otherwise ignored.</source>
          <target state="translated">设置后，众所周知的&amp;ldquo;根&amp;rdquo; CA（如VeriSign）将使用 &lt;code&gt;file&lt;/code&gt; 中的额外证书进行扩展。该文件应包含一个或多个PEM格式的受信任证书。如果文件丢失或格式错误，则将（一次）通过&lt;a href=&quot;process#process_process_emitwarning_warning_type_code_ctor&quot;&gt; &lt;code&gt;process.emitWarning()&lt;/code&gt; &lt;/a&gt;发出一条消息，但否则将忽略任何错误。</target>
        </trans-unit>
        <trans-unit id="f7c6e4d2978ec1bf438db14a2c184e3b7c1012e0" translate="yes" xml:space="preserve">
          <source>When setting &lt;code&gt;byteOffset&lt;/code&gt; in &lt;code&gt;Buffer.from(ArrayBuffer, byteOffset, length)&lt;/code&gt; or sometimes when allocating a buffer smaller than &lt;code&gt;Buffer.poolSize&lt;/code&gt; the buffer doesn't start from a zero offset on the underlying &lt;code&gt;ArrayBuffer&lt;/code&gt;.</source>
          <target state="translated">当设置 &lt;code&gt;byteOffset&lt;/code&gt; 在 &lt;code&gt;Buffer.from(ArrayBuffer, byteOffset, length)&lt;/code&gt; 或有时分配缓冲区小于当 &lt;code&gt;Buffer.poolSize&lt;/code&gt; 缓冲区不从零底层上偏移开始 &lt;code&gt;ArrayBuffer&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0f7cfcbc6e6fdd528d5cb04ee742b42d07cf59f4" translate="yes" xml:space="preserve">
          <source>When setting &lt;code&gt;byteOffset&lt;/code&gt; in &lt;code&gt;Buffer.from(ArrayBuffer, byteOffset, length)&lt;/code&gt;, or sometimes when allocating a &lt;code&gt;Buffer&lt;/code&gt; smaller than &lt;code&gt;Buffer.poolSize&lt;/code&gt;, the buffer does not start from a zero offset on the underlying &lt;code&gt;ArrayBuffer&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="085c71302b8f2176512c80177d18f67801dc5d7e" translate="yes" xml:space="preserve">
          <source>When setting the priority for an HTTP/2 stream, the stream may be marked as a dependency for a parent stream. This error code is used when an attempt is made to mark a stream and dependent of itself.</source>
          <target state="translated">当设置HTTP/2流的优先级时,该流可能被标记为父流的依赖关系。当试图将一个流标记为自己的依赖性时,就会使用这个错误代码。</target>
        </trans-unit>
        <trans-unit id="a923dc95c051ae3fd873a26d6090eee9433803c1" translate="yes" xml:space="preserve">
          <source>When sharing a UDP socket across multiple &lt;code&gt;cluster&lt;/code&gt; workers, the &lt;code&gt;socket.addMembership()&lt;/code&gt; function must be called only once or an &lt;code&gt;EADDRINUSE&lt;/code&gt; error will occur:</source>
          <target state="translated">在多个 &lt;code&gt;cluster&lt;/code&gt; 工作程序之间共享UDP套接字时，必须仅调用一次 &lt;code&gt;socket.addMembership()&lt;/code&gt; 函数， &lt;code&gt;EADDRINUSE&lt;/code&gt; 将发生EADDRINUSE错误：</target>
        </trans-unit>
        <trans-unit id="c4b3b4a6b2873bb41380ccce7474b29f9a36d610" translate="yes" xml:space="preserve">
          <source>When string data is stored in or extracted out of a &lt;code&gt;Buffer&lt;/code&gt; instance, a character encoding may be specified.</source>
          <target state="translated">当字符串数据存储在 &lt;code&gt;Buffer&lt;/code&gt; 实例中或从Buffer实例中提取时，可以指定字符编码。</target>
        </trans-unit>
        <trans-unit id="7f00737601b54a24483d073d129fba80a4c04bdc" translate="yes" xml:space="preserve">
          <source>When the &lt;a href=&quot;#packages_exports&quot;&gt;&lt;code&gt;&quot;exports&quot;&lt;/code&gt;&lt;/a&gt; field is defined, all subpaths of the package are encapsulated and no longer available to importers. For example, &lt;code&gt;require('pkg/subpath.js')&lt;/code&gt; throws an &lt;a href=&quot;errors#errors_err_package_path_not_exported&quot;&gt;&lt;code&gt;ERR_PACKAGE_PATH_NOT_EXPORTED&lt;/code&gt;&lt;/a&gt; error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0a3c28f7d09722c63135541dd0b7a96ff34d1c3" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;'clientError'&lt;/code&gt; event occurs, there is no &lt;code&gt;request&lt;/code&gt; or &lt;code&gt;response&lt;/code&gt; object, so any HTTP response sent, including response headers and payload, &lt;em&gt;must&lt;/em&gt; be written directly to the &lt;code&gt;socket&lt;/code&gt; object. Care must be taken to ensure the response is a properly formatted HTTP response message.</source>
          <target state="translated">当 &lt;code&gt;'clientError'&lt;/code&gt; 事件发生时，没有 &lt;code&gt;request&lt;/code&gt; 或 &lt;code&gt;response&lt;/code&gt; 对象，所以任何HTTP响应中发送，包括响应头和有效载荷，&lt;em&gt;必须&lt;/em&gt;被直接写入到 &lt;code&gt;socket&lt;/code&gt; 对象。必须注意确保响应是格式正确的HTTP响应消息。</target>
        </trans-unit>
        <trans-unit id="46722ab714bf122284c53952ac05784c4ed481c3" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;'exit'&lt;/code&gt; event is triggered, child process stdio streams might still be open.</source>
          <target state="translated">当 &lt;code&gt;'exit'&lt;/code&gt; 时触发的事件，子进程stdio流的可能仍然是开放的。</target>
        </trans-unit>
        <trans-unit id="ae71290bea971b38db44d801b8804d4b598df24d" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;--experimental-json-modules&lt;/code&gt; flag is included, both the &lt;code&gt;commonjs&lt;/code&gt; and &lt;code&gt;module&lt;/code&gt; mode use the new experimental JSON loader. The imported JSON only exposes a &lt;code&gt;default&lt;/code&gt;. There is no support for named exports. A cache entry is created in the CommonJS cache to avoid duplication. The same object is returned in CommonJS if the JSON module has already been imported from the same path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9963a38aa2feb80593cf79934ad0090b99243136" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;EventEmitter&lt;/code&gt; object emits an event, all of the functions attached to that specific event are called &lt;em&gt;synchronously&lt;/em&gt;. Any values returned by the called listeners are &lt;em&gt;ignored&lt;/em&gt; and discarded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="426682a4550b69dd0a79aa54c6bda8543efe9bc9" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;EventEmitter&lt;/code&gt; object emits an event, all of the functions attached to that specific event are called &lt;em&gt;synchronously&lt;/em&gt;. Any values returned by the called listeners are &lt;em&gt;ignored&lt;/em&gt; and will be discarded.</source>
          <target state="translated">当 &lt;code&gt;EventEmitter&lt;/code&gt; 对象发出一个事件时，该特定事件附带的所有函数都被&lt;em&gt;同步&lt;/em&gt;调用。被调用的侦听器返回的任何值都将被&lt;em&gt;忽略&lt;/em&gt;，并将被丢弃。</target>
        </trans-unit>
        <trans-unit id="9335ae09cb81077658802cf50fdbfc1ca1ad08cf" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;Http2Stream&lt;/code&gt; instance is destroyed, the &lt;code&gt;'close'&lt;/code&gt; event will be emitted. Because &lt;code&gt;Http2Stream&lt;/code&gt; is an instance of &lt;code&gt;stream.Duplex&lt;/code&gt;, the &lt;code&gt;'end'&lt;/code&gt; event will also be emitted if the stream data is currently flowing. The &lt;code&gt;'error'&lt;/code&gt; event may also be emitted if &lt;code&gt;http2stream.destroy()&lt;/code&gt; was called with an &lt;code&gt;Error&lt;/code&gt; passed as the first argument.</source>
          <target state="translated">当 &lt;code&gt;Http2Stream&lt;/code&gt; 实例被破坏， &lt;code&gt;'close'&lt;/code&gt; 事件将被发射。因为 &lt;code&gt;Http2Stream&lt;/code&gt; 是实例 &lt;code&gt;stream.Duplex&lt;/code&gt; 中， &lt;code&gt;'end'&lt;/code&gt; 事件也将被发射，如果流数据当前流动。的 &lt;code&gt;'error'&lt;/code&gt; 事件也可被发射，如果 &lt;code&gt;http2stream.destroy()&lt;/code&gt; 被调用与 &lt;code&gt;Error&lt;/code&gt; 作为第一个参数传递。</target>
        </trans-unit>
        <trans-unit id="67505530725409fba9c4758f50e5cd65e987bcc3" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;Readable&lt;/code&gt; is operating in flowing mode, the data added with &lt;code&gt;readable.push()&lt;/code&gt; will be delivered by emitting a &lt;code&gt;'data'&lt;/code&gt; event.</source>
          <target state="translated">当 &lt;code&gt;Readable&lt;/code&gt; 在流动模式下运行时，将通过发出 &lt;code&gt;'data'&lt;/code&gt; 事件来传递添加有 &lt;code&gt;readable.push()&lt;/code&gt; 的数据。</target>
        </trans-unit>
        <trans-unit id="c739d18f886c043c152b5e0e4e291d65429b3771" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;Readable&lt;/code&gt; is operating in paused mode, the data added with &lt;code&gt;readable.push()&lt;/code&gt; can be read out by calling the &lt;a href=&quot;#stream_readable_read_size&quot;&gt;&lt;code&gt;readable.read()&lt;/code&gt;&lt;/a&gt; method when the &lt;a href=&quot;#stream_event_readable&quot;&gt;&lt;code&gt;'readable'&lt;/code&gt;&lt;/a&gt; event is emitted.</source>
          <target state="translated">当 &lt;code&gt;Readable&lt;/code&gt; 在暂停模式下运行时，可以在发出&lt;a href=&quot;#stream_event_readable&quot;&gt; &lt;code&gt;'readable'&lt;/code&gt; &lt;/a&gt;事件时通过调用&lt;a href=&quot;#stream_readable_read_size&quot;&gt; &lt;code&gt;readable.read()&lt;/code&gt; &lt;/a&gt;方法来读取添加有 &lt;code&gt;readable.push()&lt;/code&gt; 的数据。</target>
        </trans-unit>
        <trans-unit id="c93b11ec833bbc0f705edd63f5118a1273fee958" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;module.exports&lt;/code&gt; property is being completely replaced by a new object, it is common to also reassign &lt;code&gt;exports&lt;/code&gt;:</source>
          <target state="translated">当 &lt;code&gt;module.exports&lt;/code&gt; 属性是由一个新的对象被完全取代，是很常见的也重新分配 &lt;code&gt;exports&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="eb83f1239982a95be7fd015fe27103105cb812e7" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;options.waitForTrailers&lt;/code&gt; option is set, the &lt;code&gt;'wantTrailers'&lt;/code&gt; event is emitted immediately after queuing the last chunk of payload data to be sent. The &lt;code&gt;http2stream.sendTrailers()&lt;/code&gt; method can then be called to send trailing headers to the peer.</source>
          <target state="translated">当 &lt;code&gt;options.waitForTrailers&lt;/code&gt; 选项设置，在 &lt;code&gt;'wantTrailers'&lt;/code&gt; 事件被排队的有效载荷数据的最后一个块被发送后立即发出。所述 &lt;code&gt;http2stream.sendTrailers()&lt;/code&gt; 然后方法可以被调用到后头部发送给对等体。</target>
        </trans-unit>
        <trans-unit id="0ffadd51efd23bab12b01de439947d260bc199f3" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;options.waitForTrailers&lt;/code&gt; option is set, the &lt;code&gt;'wantTrailers'&lt;/code&gt; event will be emitted immediately after queuing the last chunk of payload data to be sent. The &lt;code&gt;http2stream.sendTrailers()&lt;/code&gt; method can then be used to sent trailing header fields to the peer.</source>
          <target state="translated">当 &lt;code&gt;options.waitForTrailers&lt;/code&gt; 选项设置，在 &lt;code&gt;'wantTrailers'&lt;/code&gt; 事件将立即排队有效载荷数据的最后一个块被发送后发出。所述 &lt;code&gt;http2stream.sendTrailers()&lt;/code&gt; 然后方法可用于对发送拖尾头字段给对端。</target>
        </trans-unit>
        <trans-unit id="c5c32a70dad0d7767f357bc2634db83528bf93d5" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;path&lt;/code&gt; is a directory, the behavior of &lt;code&gt;fsPromises.readFile()&lt;/code&gt; is platform-specific. On macOS, Linux, and Windows, the promise will be rejected with an error. On FreeBSD, a representation of the directory's contents will be returned.</source>
          <target state="translated">当 &lt;code&gt;path&lt;/code&gt; 是目录时， &lt;code&gt;fsPromises.readFile()&lt;/code&gt; 的行为是特定于平台的。在macOS，Linux和Windows上，承诺将被拒绝并出现错误。在FreeBSD上，将返回目录内容的表示。</target>
        </trans-unit>
        <trans-unit id="0620756c2aebd9c4bc3154b06ffe2566efb57b85" translate="yes" xml:space="preserve">
          <source>When the child process is a Node.js instance (e.g. spawned using &lt;a href=&quot;#child_process_child_process_fork_modulepath_args_options&quot;&gt;&lt;code&gt;child_process.fork()&lt;/code&gt;&lt;/a&gt;), the &lt;code&gt;process.disconnect()&lt;/code&gt; method can be invoked within the child process to close the IPC channel as well.</source>
          <target state="translated">当子进程是Node.js实例（例如，使用&lt;a href=&quot;#child_process_child_process_fork_modulepath_args_options&quot;&gt; &lt;code&gt;child_process.fork()&lt;/code&gt; 生成&lt;/a&gt;）时，可以在子进程内调用 &lt;code&gt;process.disconnect()&lt;/code&gt; 方法以关闭IPC通道。</target>
        </trans-unit>
        <trans-unit id="25fac66347fd0ed458017f12238e9c5ff50ec269" translate="yes" xml:space="preserve">
          <source>When the code in the &lt;code&gt;foo&lt;/code&gt; package does &lt;code&gt;require('bar')&lt;/code&gt;, it will get the version that is symlinked into &lt;code&gt;/usr/lib/node/foo/1.2.3/node_modules/bar&lt;/code&gt;. Then, when the code in the &lt;code&gt;bar&lt;/code&gt; package calls &lt;code&gt;require('quux')&lt;/code&gt;, it'll get the version that is symlinked into &lt;code&gt;/usr/lib/node/bar/4.3.2/node_modules/quux&lt;/code&gt;.</source>
          <target state="translated">当 &lt;code&gt;foo&lt;/code&gt; 包中的代码确实 &lt;code&gt;require('bar')&lt;/code&gt; ，它将获得符号链接到 &lt;code&gt;/usr/lib/node/foo/1.2.3/node_modules/bar&lt;/code&gt; 的版本。然后，当 &lt;code&gt;bar&lt;/code&gt; 包中的代码调用 &lt;code&gt;require('quux')&lt;/code&gt; 时，它将获得与 &lt;code&gt;/usr/lib/node/bar/4.3.2/node_modules/quux&lt;/code&gt; 符号链接的版本。</target>
        </trans-unit>
        <trans-unit id="cd46976fb0354327dc13a6ec7685b60dc19749f9" translate="yes" xml:space="preserve">
          <source>When the connection is established, a &lt;a href=&quot;#net_event_connect&quot;&gt;&lt;code&gt;'connect'&lt;/code&gt;&lt;/a&gt; event will be emitted on the returned socket. The last parameter &lt;code&gt;connectListener&lt;/code&gt;, if supplied, will be added as a listener for the &lt;a href=&quot;#net_event_connect&quot;&gt;&lt;code&gt;'connect'&lt;/code&gt;&lt;/a&gt; event &lt;strong&gt;once&lt;/strong&gt;.</source>
          <target state="translated">建立&lt;a href=&quot;#net_event_connect&quot;&gt; &lt;code&gt;'connect'&lt;/code&gt; &lt;/a&gt;将在返回的套接字上发出&amp;ldquo; connect&amp;rdquo;事件。最后一个参数 &lt;code&gt;connectListener&lt;/code&gt; ，如果提供，将被添加为一个监听器&lt;a href=&quot;#net_event_connect&quot;&gt; &lt;code&gt;'connect'&lt;/code&gt; &lt;/a&gt;事件&lt;strong&gt;一次&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="cfa09effef8afe3e66a0a81273124da1b75d2f40" translate="yes" xml:space="preserve">
          <source>When the method &lt;code&gt;vm.createContext()&lt;/code&gt; is called, the &lt;code&gt;contextObject&lt;/code&gt; argument (or a newly-created object if &lt;code&gt;contextObject&lt;/code&gt; is &lt;code&gt;undefined&lt;/code&gt;) is associated internally with a new instance of a V8 Context. This V8 Context provides the &lt;code&gt;code&lt;/code&gt; run using the &lt;code&gt;vm&lt;/code&gt; module's methods with an isolated global environment within which it can operate. The process of creating the V8 Context and associating it with the &lt;code&gt;contextObject&lt;/code&gt; is what this document refers to as &quot;contextifying&quot; the object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="729d92164779ddba59574378cc26cf3a6d136c2c" translate="yes" xml:space="preserve">
          <source>When the method &lt;code&gt;vm.createContext()&lt;/code&gt; is called, the &lt;code&gt;sandbox&lt;/code&gt; object that is passed in (or a newly created object if &lt;code&gt;sandbox&lt;/code&gt; is &lt;code&gt;undefined&lt;/code&gt;) is associated internally with a new instance of a V8 Context. This V8 Context provides the &lt;code&gt;code&lt;/code&gt; run using the &lt;code&gt;vm&lt;/code&gt; module's methods with an isolated global environment within which it can operate. The process of creating the V8 Context and associating it with the &lt;code&gt;sandbox&lt;/code&gt; object is what this document refers to as &quot;contextifying&quot; the &lt;code&gt;sandbox&lt;/code&gt;.</source>
          <target state="translated">调用方法 &lt;code&gt;vm.createContext()&lt;/code&gt; 时，传入的 &lt;code&gt;sandbox&lt;/code&gt; 对象（如果 &lt;code&gt;undefined&lt;/code&gt; &lt;code&gt;sandbox&lt;/code&gt; 则为新创建的对象）在内部与V8上下文的新实例关联。该V8上下文提供了使用 &lt;code&gt;vm&lt;/code&gt; 模块的方法运行的 &lt;code&gt;code&lt;/code&gt; ，以及可以在其中运行的隔离全局环境。创建V8上下文并将其与 &lt;code&gt;sandbox&lt;/code&gt; 对象相关联的过程是本文档所称的&amp;ldquo;使 &lt;code&gt;sandbox&lt;/code&gt; &amp;ldquo;环境化&amp;rdquo; 。</target>
        </trans-unit>
        <trans-unit id="01caadbe64330cc1819e53d479c1f2414ca0dd3c" translate="yes" xml:space="preserve">
          <source>When the path is a directory, the behavior of &lt;code&gt;fs.readFile()&lt;/code&gt; and &lt;a href=&quot;#fs_fs_readfilesync_path_options&quot;&gt;&lt;code&gt;fs.readFileSync()&lt;/code&gt;&lt;/a&gt; is platform-specific. On macOS, Linux, and Windows, an error will be returned. On FreeBSD, a representation of the directory's contents will be returned.</source>
          <target state="translated">当路径是目录时， &lt;code&gt;fs.readFile()&lt;/code&gt; 和&lt;a href=&quot;#fs_fs_readfilesync_path_options&quot;&gt; &lt;code&gt;fs.readFileSync()&lt;/code&gt; &lt;/a&gt;的行为是特定于平台的。在macOS，Linux和Windows上，将返回错误。在FreeBSD上，将返回目录内容的表示。</target>
        </trans-unit>
        <trans-unit id="7d8a9e86b434a10cd051dc6d1f9ee3082f6619f5" translate="yes" xml:space="preserve">
          <source>When the process is about to exit, one last coverage will still be written to disk unless &lt;a href=&quot;#v8_v8_stopcoverage&quot;&gt;&lt;code&gt;v8.stopCoverage()&lt;/code&gt;&lt;/a&gt; is invoked before the process exits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eba9274eddef14d7dda14e216ded1ef3a82c17c6" translate="yes" xml:space="preserve">
          <source>When the program is resumed using &lt;a href=&quot;http://man7.org/linux/man-pages/man1/fg.1p.html&quot;&gt;&lt;code&gt;fg(1p)&lt;/code&gt;&lt;/a&gt;, the &lt;code&gt;'pause'&lt;/code&gt; and &lt;code&gt;'SIGCONT'&lt;/code&gt; events will be emitted. These can be used to resume the &lt;code&gt;input&lt;/code&gt; stream.</source>
          <target state="translated">使用&lt;a href=&quot;http://man7.org/linux/man-pages/man1/fg.1p.html&quot;&gt; &lt;code&gt;fg(1p)&lt;/code&gt; &lt;/a&gt;恢复程序时，将发出 &lt;code&gt;'pause'&lt;/code&gt; 和 &lt;code&gt;'SIGCONT'&lt;/code&gt; 事件。这些可用于恢复 &lt;code&gt;input&lt;/code&gt; 流。</target>
        </trans-unit>
        <trans-unit id="973f019c301a2f10546fdf95359798a8afd4304b" translate="yes" xml:space="preserve">
          <source>When there are circular &lt;code&gt;require()&lt;/code&gt; calls, a module might not have finished executing when it is returned.</source>
          <target state="translated">当有循环的 &lt;code&gt;require()&lt;/code&gt; 调用时，模块返回时可能尚未完成执行。</target>
        </trans-unit>
        <trans-unit id="a83856f569bf73cddb634b7c469e9e76c59c0d43" translate="yes" xml:space="preserve">
          <source>When these methods are invoked, the &lt;code&gt;data&lt;/code&gt; parameter passed will be the addon-provided &lt;code&gt;void*&lt;/code&gt; data that was passed into the &lt;code&gt;napi_create_async_work&lt;/code&gt; call.</source>
          <target state="translated">调用这些方法时，传递的 &lt;code&gt;data&lt;/code&gt; 参数将是传递给 &lt;code&gt;napi_create_async_work&lt;/code&gt; 调用的附加组件提供的 &lt;code&gt;void*&lt;/code&gt; 数据。</target>
        </trans-unit>
        <trans-unit id="161d84962881869453298b631777f71cfe4e6b80" translate="yes" xml:space="preserve">
          <source>When they are disconnected all internal handles will be closed, allowing the master process to die gracefully if no other event is waiting.</source>
          <target state="translated">当它们被断开时,所有的内部句柄将被关闭,如果没有其他事件在等待,则允许主进程优雅地死去。</target>
        </trans-unit>
        <trans-unit id="848bbfa33309d052a04b6c8cbbcac51e750f16d7" translate="yes" xml:space="preserve">
          <source>When this code is executed, the global &lt;code&gt;'m'&lt;/code&gt; variable can be modified but then reset to its initial value using the &lt;code&gt;.clear&lt;/code&gt; command:</source>
          <target state="translated">执行此代码后，可以修改全局 &lt;code&gt;'m'&lt;/code&gt; 变量，然后使用 &lt;code&gt;.clear&lt;/code&gt; 命令将其重置为初始值：</target>
        </trans-unit>
        <trans-unit id="da17565ee00221d09a97209ab1ae2c18fb43a00e" translate="yes" xml:space="preserve">
          <source>When this event is emitted and handled, the &lt;a href=&quot;#http2_event_request&quot;&gt;&lt;code&gt;'request'&lt;/code&gt;&lt;/a&gt; event will not be emitted.</source>
          <target state="translated">发出并处理此事件时，不会发出&lt;a href=&quot;#http2_event_request&quot;&gt; &lt;code&gt;'request'&lt;/code&gt; &lt;/a&gt;事件。</target>
        </trans-unit>
        <trans-unit id="1d77c2e28b5e02c804db51a74809906188330f9e" translate="yes" xml:space="preserve">
          <source>When this event is emitted and handled, the &lt;a href=&quot;#http_event_request&quot;&gt;&lt;code&gt;'request'&lt;/code&gt;&lt;/a&gt; event will not be emitted.</source>
          <target state="translated">发出并处理此事件时，不会发出&lt;a href=&quot;#http_event_request&quot;&gt; &lt;code&gt;'request'&lt;/code&gt; &lt;/a&gt;事件。</target>
        </trans-unit>
        <trans-unit id="ad65b9cecfc3a17f900491bb46a38e63a093e547" translate="yes" xml:space="preserve">
          <source>When this function is used, no &lt;code&gt;'message'&lt;/code&gt; event is emitted and the &lt;code&gt;onmessage&lt;/code&gt; listener is not invoked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4bcc6914d3f458464403894a448ce8d2cfc0398" translate="yes" xml:space="preserve">
          <source>When this function is used, no &lt;code&gt;'message'&lt;/code&gt; event will be emitted and the &lt;code&gt;onmessage&lt;/code&gt; listener will not be invoked.</source>
          <target state="translated">使用此功能时，将不会发出 &lt;code&gt;'message'&lt;/code&gt; 事件，并且不会调用 &lt;code&gt;onmessage&lt;/code&gt; 侦听器。</target>
        </trans-unit>
        <trans-unit id="daaa6a63bd85db242fbd1af931f53b55126de0a6" translate="yes" xml:space="preserve">
          <source>When true, the Date header will be automatically generated and sent in the response if it is not already present in the headers. Defaults to true.</source>
          <target state="translated">当为 &quot;true &quot;时,如果Date头没有出现在头文件中,则会自动生成并在响应中发送。默认值为true。</target>
        </trans-unit>
        <trans-unit id="73bbf108c7a0af560ba18bfbdfb275fa0bd25416" translate="yes" xml:space="preserve">
          <source>When used in another application:</source>
          <target state="translated">在其他应用中使用时。</target>
        </trans-unit>
        <trans-unit id="7b3fa09a96ecdc067355bcc942d3a49a1906efe1" translate="yes" xml:space="preserve">
          <source>When used, the &lt;code&gt;Http2Stream&lt;/code&gt; object's &lt;code&gt;Duplex&lt;/code&gt; interface will be closed automatically.</source>
          <target state="translated">使用时， &lt;code&gt;Http2Stream&lt;/code&gt; 对象的 &lt;code&gt;Duplex&lt;/code&gt; 接口将自动关闭。</target>
        </trans-unit>
        <trans-unit id="a375a2e214a043804716201bc2ddc239ccd3b5de" translate="yes" xml:space="preserve">
          <source>When using &lt;a href=&quot;#buffer_class_method_buffer_allocunsafe_size&quot;&gt;&lt;code&gt;Buffer.allocUnsafe()&lt;/code&gt;&lt;/a&gt; to allocate new &lt;code&gt;Buffer&lt;/code&gt; instances, allocations under 4KB are sliced from a single pre-allocated &lt;code&gt;Buffer&lt;/code&gt;. This allows applications to avoid the garbage collection overhead of creating many individually allocated &lt;code&gt;Buffer&lt;/code&gt; instances. This approach improves both performance and memory usage by eliminating the need to track and clean up as many persistent objects.</source>
          <target state="translated">使用&lt;a href=&quot;#buffer_class_method_buffer_allocunsafe_size&quot;&gt; &lt;code&gt;Buffer.allocUnsafe()&lt;/code&gt; &lt;/a&gt;分配新的 &lt;code&gt;Buffer&lt;/code&gt; 实例时，将从单个预分配 &lt;code&gt;Buffer&lt;/code&gt; 中分割出4KB以下的分配。这使应用程序可以避免创建许多单独分配的 &lt;code&gt;Buffer&lt;/code&gt; 实例的垃圾回收开销。通过消除跟踪和清理多个持久对象的需要，该方法可以提高性能和内存使用率。</target>
        </trans-unit>
        <trans-unit id="d8af369a122ff8d89a82762dba5d82286fd5b88b" translate="yes" xml:space="preserve">
          <source>When using &lt;a href=&quot;#buffer_static_method_buffer_allocunsafe_size&quot;&gt;&lt;code&gt;Buffer.allocUnsafe()&lt;/code&gt;&lt;/a&gt; to allocate new &lt;code&gt;Buffer&lt;/code&gt; instances, allocations under 4KB are sliced from a single pre-allocated &lt;code&gt;Buffer&lt;/code&gt;. This allows applications to avoid the garbage collection overhead of creating many individually allocated &lt;code&gt;Buffer&lt;/code&gt; instances. This approach improves both performance and memory usage by eliminating the need to track and clean up as many individual &lt;code&gt;ArrayBuffer&lt;/code&gt; objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb8a06fc84bb54aebb3f5d34322924c7994f1112" translate="yes" xml:space="preserve">
          <source>When using &lt;a href=&quot;#stream_writable_cork&quot;&gt;&lt;code&gt;writable.cork()&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;writable.uncork()&lt;/code&gt; to manage the buffering of writes to a stream, it is recommended that calls to &lt;code&gt;writable.uncork()&lt;/code&gt; be deferred using &lt;code&gt;process.nextTick()&lt;/code&gt;. Doing so allows batching of all &lt;code&gt;writable.write()&lt;/code&gt; calls that occur within a given Node.js event loop phase.</source>
          <target state="translated">当使用&lt;a href=&quot;#stream_writable_cork&quot;&gt; &lt;code&gt;writable.cork()&lt;/code&gt; &lt;/a&gt;和 &lt;code&gt;writable.uncork()&lt;/code&gt; 管理对流的写缓冲时，建议使用 &lt;code&gt;process.nextTick()&lt;/code&gt; 推迟对 &lt;code&gt;writable.uncork()&lt;/code&gt; 的调用。这样做可以批量处理在给定的Node.js事件循环阶段内发生的所有 &lt;code&gt;writable.write()&lt;/code&gt; 调用。</target>
        </trans-unit>
        <trans-unit id="f1590b6db3d610ebd53a04e717ee50b6883f13c8" translate="yes" xml:space="preserve">
          <source>When using &lt;a href=&quot;worker_threads#worker_threads_class_worker&quot;&gt;&lt;code&gt;Worker&lt;/code&gt;&lt;/a&gt; threads, &lt;code&gt;rss&lt;/code&gt; will be a value that is valid for the entire process, while the other fields will only refer to the current thread.</source>
          <target state="translated">使用&lt;a href=&quot;worker_threads#worker_threads_class_worker&quot;&gt; &lt;code&gt;Worker&lt;/code&gt; &lt;/a&gt;线程时， &lt;code&gt;rss&lt;/code&gt; 将是对整个进程有效的值，而其他字段仅引用当前线程。</target>
        </trans-unit>
        <trans-unit id="16b462e5d0419f550bd45208e292156c7a67eb63" translate="yes" xml:space="preserve">
          <source>When using &lt;code&gt;http2session.settings()&lt;/code&gt; to submit new settings, the modified settings do not take effect until the &lt;code&gt;'localSettings'&lt;/code&gt; event is emitted.</source>
          <target state="translated">使用 &lt;code&gt;http2session.settings()&lt;/code&gt; 提交新设置时，修改的设置 &lt;code&gt;'localSettings'&lt;/code&gt; 在发出'localSettings'事件后才会生效。</target>
        </trans-unit>
        <trans-unit id="edaaf463c08a1a1d1a15adb2bc0e6d02fbfcb5d4" translate="yes" xml:space="preserve">
          <source>When using &lt;code&gt;node-addon-api&lt;/code&gt; instead of the C APIs, start with the API &lt;a href=&quot;https://github.com/nodejs/node-addon-api#api-documentation&quot;&gt;docs&lt;/a&gt; for &lt;code&gt;node-addon-api&lt;/code&gt;.</source>
          <target state="translated">当使用 &lt;code&gt;node-addon-api&lt;/code&gt; 而不是C的API，开始与API &lt;a href=&quot;https://github.com/nodejs/node-addon-api#api-documentation&quot;&gt;文档&lt;/a&gt;为 &lt;code&gt;node-addon-api&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cbf8c05902e863e4e9f097e100e92d75ee31fd12" translate="yes" xml:space="preserve">
          <source>When using &lt;code&gt;npm install&lt;/code&gt; to install a Node.js Addon, npm uses its own bundled version of &lt;code&gt;node-gyp&lt;/code&gt; to perform this same set of actions, generating a compiled version of the Addon for the user's platform on demand.</source>
          <target state="translated">当使用 &lt;code&gt;npm install&lt;/code&gt; 安装Node.js插件时，npm使用自己的捆绑版的 &lt;code&gt;node-gyp&lt;/code&gt; 执行相同的操作，从而根据需要为用户平台生成插件的编译版本。</target>
        </trans-unit>
        <trans-unit id="f9c3b73b2354de84a2f20da8c37cc1f497ac6163" translate="yes" xml:space="preserve">
          <source>When using &lt;code&gt;npm install&lt;/code&gt; to install a Node.js addon, npm uses its own bundled version of &lt;code&gt;node-gyp&lt;/code&gt; to perform this same set of actions, generating a compiled version of the addon for the user's platform on demand.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="889f878c7063918c8dc415e6b81305b1359bba6a" translate="yes" xml:space="preserve">
          <source>When using &lt;code&gt;require()&lt;/code&gt; all resources involved in loading are checked for integrity if a policy manifest has been specified. If a resource does not match the integrity listed in the manifest, an error will be thrown.</source>
          <target state="translated">如果指定了策略清单，则在使用 &lt;code&gt;require()&lt;/code&gt; 时，将检查所有与加载有关的资源的完整性。如果资源与清单中列出的完整性不匹配，将引发错误。</target>
        </trans-unit>
        <trans-unit id="32dbee3a5d5832dcbb1cd50fd17f7385cbffaaef" translate="yes" xml:space="preserve">
          <source>When using an authenticated encryption mode (&lt;code&gt;GCM&lt;/code&gt;, &lt;code&gt;CCM&lt;/code&gt; and &lt;code&gt;OCB&lt;/code&gt; are currently supported), the &lt;code&gt;cipher.setAAD()&lt;/code&gt; method sets the value used for the &lt;em&gt;additional authenticated data&lt;/em&gt; (AAD) input parameter.</source>
          <target state="translated">当使用认证的加密模式（当前支持 &lt;code&gt;GCM&lt;/code&gt; ， &lt;code&gt;CCM&lt;/code&gt; 和 &lt;code&gt;OCB&lt;/code&gt; ）时， &lt;code&gt;cipher.setAAD()&lt;/code&gt; 方法设置用于&lt;em&gt;附加的认证数据&lt;/em&gt;（AAD）输入参数的值。</target>
        </trans-unit>
        <trans-unit id="bcdf8890c4f9a7a03bba177c0cf2be932cdf094c" translate="yes" xml:space="preserve">
          <source>When using an authenticated encryption mode (&lt;code&gt;GCM&lt;/code&gt;, &lt;code&gt;CCM&lt;/code&gt; and &lt;code&gt;OCB&lt;/code&gt; are currently supported), the &lt;code&gt;decipher.setAAD()&lt;/code&gt; method sets the value used for the &lt;em&gt;additional authenticated data&lt;/em&gt; (AAD) input parameter.</source>
          <target state="translated">当使用经过身份验证的加密模式（当前支持 &lt;code&gt;GCM&lt;/code&gt; ， &lt;code&gt;CCM&lt;/code&gt; 和 &lt;code&gt;OCB&lt;/code&gt; ）时， &lt;code&gt;decipher.setAAD()&lt;/code&gt; 方法设置用于&lt;em&gt;附加的经过身份验证的数据&lt;/em&gt;（AAD）输入参数的值。</target>
        </trans-unit>
        <trans-unit id="0b5becc7fa138f3deaf68c544742ebc6637e666f" translate="yes" xml:space="preserve">
          <source>When using an authenticated encryption mode (&lt;code&gt;GCM&lt;/code&gt;, &lt;code&gt;CCM&lt;/code&gt; and &lt;code&gt;OCB&lt;/code&gt; are currently supported), the &lt;code&gt;decipher.setAuthTag()&lt;/code&gt; method is used to pass in the received &lt;em&gt;authentication tag&lt;/em&gt;. If no tag is provided, or if the cipher text has been tampered with, &lt;a href=&quot;#crypto_decipher_final_outputencoding&quot;&gt;&lt;code&gt;decipher.final()&lt;/code&gt;&lt;/a&gt; will throw, indicating that the cipher text should be discarded due to failed authentication. If the tag length is invalid according to &lt;a href=&quot;https://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-38d.pdf&quot;&gt;NIST SP 800-38D&lt;/a&gt; or does not match the value of the &lt;code&gt;authTagLength&lt;/code&gt; option, &lt;code&gt;decipher.setAuthTag()&lt;/code&gt; will throw an error.</source>
          <target state="translated">当使用经过身份验证的加密模式（当前支持 &lt;code&gt;GCM&lt;/code&gt; ， &lt;code&gt;CCM&lt;/code&gt; 和 &lt;code&gt;OCB&lt;/code&gt; ）时， &lt;code&gt;decipher.setAuthTag()&lt;/code&gt; 方法用于传递接收到的&lt;em&gt;身份验证标签&lt;/em&gt;。如果未提供标签，或者密文已被篡改，则将抛出&lt;a href=&quot;#crypto_decipher_final_outputencoding&quot;&gt; &lt;code&gt;decipher.final()&lt;/code&gt; &lt;/a&gt;，指示由于身份验证失败而应丢弃密文。如果根据&lt;a href=&quot;https://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-38d.pdf&quot;&gt;NIST SP 800-38D&lt;/a&gt;，标签长度无效或与 &lt;code&gt;authTagLength&lt;/code&gt; 选项的值不匹配，则 &lt;code&gt;decipher.setAuthTag()&lt;/code&gt; 将引发错误。</target>
        </trans-unit>
        <trans-unit id="e8abded618bf1e61374edf617c0e50239f5e735f" translate="yes" xml:space="preserve">
          <source>When using an older Node.js library that emits &lt;a href=&quot;#stream_event_data&quot;&gt;&lt;code&gt;'data'&lt;/code&gt;&lt;/a&gt; events and has a &lt;a href=&quot;#stream_readable_pause&quot;&gt;&lt;code&gt;stream.pause()&lt;/code&gt;&lt;/a&gt; method that is advisory only, the &lt;code&gt;readable.wrap()&lt;/code&gt; method can be used to create a &lt;a href=&quot;#stream_class_stream_readable&quot;&gt;&lt;code&gt;Readable&lt;/code&gt;&lt;/a&gt; stream that uses the old stream as its data source.</source>
          <target state="translated">当使用较旧的Node.js库发出&lt;a href=&quot;#stream_event_data&quot;&gt; &lt;code&gt;'data'&lt;/code&gt; &lt;/a&gt;事件和具有&lt;a href=&quot;#stream_readable_pause&quot;&gt; &lt;code&gt;stream.pause()&lt;/code&gt; &lt;/a&gt;方法，该方法咨询而已， &lt;code&gt;readable.wrap()&lt;/code&gt; 方法可用于创建一个&lt;a href=&quot;#stream_class_stream_readable&quot;&gt; &lt;code&gt;Readable&lt;/code&gt; &lt;/a&gt;使用旧的流作为流其数据源。</target>
        </trans-unit>
        <trans-unit id="d4a8a76000e40163d6b78b5788dc252982989de8" translate="yes" xml:space="preserve">
          <source>When using block encryption algorithms, the &lt;code&gt;Cipher&lt;/code&gt; class will automatically add padding to the input data to the appropriate block size. To disable the default padding call &lt;code&gt;cipher.setAutoPadding(false)&lt;/code&gt;.</source>
          <target state="translated">使用块加密算法时， &lt;code&gt;Cipher&lt;/code&gt; 类将自动向输入数据中添加填充以达到适当的块大小。要禁用默认的填充，请调用 &lt;code&gt;cipher.setAutoPadding(false)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6bde8404bcfba13f7fe07b88c2ce9708a51b5344" translate="yes" xml:space="preserve">
          <source>When using either &lt;a href=&quot;#vm_script_runinthiscontext_options&quot;&gt;&lt;code&gt;script.runInThisContext()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#vm_vm_runinthiscontext_code_options&quot;&gt;&lt;code&gt;vm.runInThisContext()&lt;/code&gt;&lt;/a&gt;, the code is executed within the current V8 global context. The code passed to this VM context will have its own isolated scope.</source>
          <target state="translated">使用&lt;a href=&quot;#vm_script_runinthiscontext_options&quot;&gt; &lt;code&gt;script.runInThisContext()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#vm_vm_runinthiscontext_code_options&quot;&gt; &lt;code&gt;vm.runInThisContext()&lt;/code&gt; 时&lt;/a&gt;，代码将在当前V8全局上下文中执行。传递给此VM上下文的代码将具有其自己的隔离范围。</target>
        </trans-unit>
        <trans-unit id="d4b392ebb5f406274751ac4a974842c597a563e1" translate="yes" xml:space="preserve">
          <source>When using environment branches, always include a &lt;code&gt;&quot;default&quot;&lt;/code&gt; condition where possible. Providing a &lt;code&gt;&quot;default&quot;&lt;/code&gt; condition ensures that any unknown JS environments are able to use this universal implementation, which helps avoid these JS environments from having to pretend to be existing environments in order to support packages with conditional exports. For this reason, using &lt;code&gt;&quot;node&quot;&lt;/code&gt; and &lt;code&gt;&quot;default&quot;&lt;/code&gt; condition branches is usually preferable to using &lt;code&gt;&quot;node&quot;&lt;/code&gt; and &lt;code&gt;&quot;browser&quot;&lt;/code&gt; condition branches.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e942021306a7b23d251e9b0a7a27441e49416042" translate="yes" xml:space="preserve">
          <source>When using implicit headers (not calling &lt;a href=&quot;#http2_response_writehead_statuscode_statusmessage_headers&quot;&gt;&lt;code&gt;response.writeHead()&lt;/code&gt;&lt;/a&gt; explicitly), this property controls the status code that will be sent to the client when the headers get flushed.</source>
          <target state="translated">当使用隐式头（不显式调用&lt;a href=&quot;#http2_response_writehead_statuscode_statusmessage_headers&quot;&gt; &lt;code&gt;response.writeHead()&lt;/code&gt; &lt;/a&gt;）时，此属性控制在刷新头时将发送给客户端的状态代码。</target>
        </trans-unit>
        <trans-unit id="60893816080aba27da8d4e6ee7f959a8e20d2f06" translate="yes" xml:space="preserve">
          <source>When using implicit headers (not calling &lt;a href=&quot;#http_response_writehead_statuscode_statusmessage_headers&quot;&gt;&lt;code&gt;response.writeHead()&lt;/code&gt;&lt;/a&gt; explicitly), this property controls the status code that will be sent to the client when the headers get flushed.</source>
          <target state="translated">当使用隐式头（不显式调用&lt;a href=&quot;#http_response_writehead_statuscode_statusmessage_headers&quot;&gt; &lt;code&gt;response.writeHead()&lt;/code&gt; &lt;/a&gt;）时，此属性控制在刷新头时将发送给客户端的状态代码。</target>
        </trans-unit>
        <trans-unit id="1e3f4c4e721d306fd7c7d7b456a5392ba5e3af47" translate="yes" xml:space="preserve">
          <source>When using implicit headers (not calling &lt;a href=&quot;#http_response_writehead_statuscode_statusmessage_headers&quot;&gt;&lt;code&gt;response.writeHead()&lt;/code&gt;&lt;/a&gt; explicitly), this property controls the status message that will be sent to the client when the headers get flushed. If this is left as &lt;code&gt;undefined&lt;/code&gt; then the standard message for the status code will be used.</source>
          <target state="translated">当使用隐式头（不显式调用&lt;a href=&quot;#http_response_writehead_statuscode_statusmessage_headers&quot;&gt; &lt;code&gt;response.writeHead()&lt;/code&gt; &lt;/a&gt;）时，此属性控制当头被刷新时将发送到客户端的状态消息。如果 &lt;code&gt;undefined&lt;/code&gt; 则将使用状态代码的标准消息。</target>
        </trans-unit>
        <trans-unit id="12c9765153405927e84db58e9afc9c476579e1a9" translate="yes" xml:space="preserve">
          <source>When using pipeline:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d7fc4558703896b0eddb79f45cb41e05e1ec2cd" translate="yes" xml:space="preserve">
          <source>When using raw numbers where file modes are expected, any value larger than &lt;code&gt;0o777&lt;/code&gt; may result in platform-specific behaviors that are not supported to work consistently. Therefore constants like &lt;code&gt;S_ISVTX&lt;/code&gt;, &lt;code&gt;S_ISGID&lt;/code&gt; or &lt;code&gt;S_ISUID&lt;/code&gt; are not exposed in &lt;code&gt;fs.constants&lt;/code&gt;.</source>
          <target state="translated">当使用期望文件模式的原始数字时，任何大于 &lt;code&gt;0o777&lt;/code&gt; 的值都可能导致特定于平台的行为，不支持它们一致地工作。因此，常量 &lt;code&gt;S_ISVTX&lt;/code&gt; ， &lt;code&gt;S_ISGID&lt;/code&gt; 或 &lt;code&gt;S_ISUID&lt;/code&gt; 不会在 &lt;code&gt;fs.constants&lt;/code&gt; 中公开。</target>
        </trans-unit>
        <trans-unit id="1f6605525ad51f6a30d5fbabc03561e06e76bfa6" translate="yes" xml:space="preserve">
          <source>When using the &lt;a href=&quot;#packages_exports&quot;&gt;&lt;code&gt;&quot;exports&quot;&lt;/code&gt;&lt;/a&gt; field, custom subpaths can be defined along with the main entry point by treating the main entry point as the &lt;code&gt;&quot;.&quot;&lt;/code&gt; subpath:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="986cd8268880cef740911a0c55d562f7c09c1379" translate="yes" xml:space="preserve">
          <source>When using the &lt;code&gt;detached&lt;/code&gt; option to start a long-running process, the process will not stay running in the background after the parent exits unless it is provided with a &lt;code&gt;stdio&lt;/code&gt; configuration that is not connected to the parent. If the parent's &lt;code&gt;stdio&lt;/code&gt; is inherited, the child will remain attached to the controlling terminal.</source>
          <target state="translated">使用 &lt;code&gt;detached&lt;/code&gt; 选项启动长时间运行的进程时，除非父进程没有提供未连接到父进程的 &lt;code&gt;stdio&lt;/code&gt; 配置，否则该进程将不会在父进程退出后在后台继续运行。如果父代的 &lt;code&gt;stdio&lt;/code&gt; 被继承，则子代将保持与控制终端的连接。</target>
        </trans-unit>
        <trans-unit id="9f2bbc751362fc160bc2ffe73acfb71d4b97aa60" translate="yes" xml:space="preserve">
          <source>When wrapping a C++ class, the C++ constructor callback passed via &lt;code&gt;constructor&lt;/code&gt; should be a static method on the class that calls the actual class constructor, then wraps the new C++ instance in a JavaScript object, and returns the wrapper object. See &lt;a href=&quot;#n_api_napi_wrap&quot;&gt;&lt;code&gt;napi_wrap&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae4a9b10065ee31ea508871d338d7436779cee7c" translate="yes" xml:space="preserve">
          <source>When writing to a writable stream from an async iterator, ensure correct handling of backpressure and errors. &lt;a href=&quot;#stream_stream_pipeline_source_transforms_destination_callback&quot;&gt;&lt;code&gt;stream.pipeline()&lt;/code&gt;&lt;/a&gt; abstracts away the handling of backpressure and backpressure-related errors:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c120d35e20c3a52de19e7e178e265a55a8badd2d" translate="yes" xml:space="preserve">
          <source>Whenever an HTTP/2 &lt;code&gt;SETTINGS&lt;/code&gt; frame is sent to a connected peer, the peer is required to send an acknowledgment that it has received and applied the new &lt;code&gt;SETTINGS&lt;/code&gt;. By default, a maximum number of unacknowledged &lt;code&gt;SETTINGS&lt;/code&gt; frames may be sent at any given time. This error code is used when that limit has been reached.</source>
          <target state="translated">每当将HTTP / 2 &lt;code&gt;SETTINGS&lt;/code&gt; 帧发送到已连接的对等方时，就要求对等方发送确认，确认已接收并应用了新的 &lt;code&gt;SETTINGS&lt;/code&gt; 。默认情况下，可以在任何给定时间发送最大数量的未确认的 &lt;code&gt;SETTINGS&lt;/code&gt; 帧。达到该限制时，将使用此错误代码。</target>
        </trans-unit>
        <trans-unit id="dcc1f2aed891a178fc6f056739700967c873c616" translate="yes" xml:space="preserve">
          <source>Whenever possible, use the &lt;a href=&quot;#assert_strict_assertion_mode&quot;&gt;strict assertion mode&lt;/a&gt; instead. Otherwise, the &lt;a href=&quot;https://tc39.github.io/ecma262/#sec-abstract-equality-comparison&quot;&gt;Abstract Equality Comparison&lt;/a&gt; may cause surprising results. This is especially true for &lt;a href=&quot;#assert_assert_deepequal_actual_expected_message&quot;&gt;&lt;code&gt;assert.deepEqual()&lt;/code&gt;&lt;/a&gt;, where the comparison rules are lax:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de56f8a5e50431418240afbb2b02e04f59424ed0" translate="yes" xml:space="preserve">
          <source>Whenever possible, use the &lt;a href=&quot;#assert_strict_mode&quot;&gt;&lt;code&gt;strict&lt;/code&gt; mode&lt;/a&gt; instead. Otherwise, the &lt;a href=&quot;https://tc39.github.io/ecma262/#sec-abstract-equality-comparison&quot;&gt;Abstract Equality Comparison&lt;/a&gt; may cause surprising results. This is especially true for &lt;a href=&quot;#assert_assert_deepequal_actual_expected_message&quot;&gt;&lt;code&gt;assert.deepEqual()&lt;/code&gt;&lt;/a&gt;, where the comparison rules are lax:</source>
          <target state="translated">尽可能使用&lt;a href=&quot;#assert_strict_mode&quot;&gt; &lt;code&gt;strict&lt;/code&gt; 模式&lt;/a&gt;。否则，&lt;a href=&quot;https://tc39.github.io/ecma262/#sec-abstract-equality-comparison&quot;&gt;抽象平等比较&lt;/a&gt;可能会导致令人惊讶的结果。对于&lt;a href=&quot;#assert_assert_deepequal_actual_expected_message&quot;&gt; &lt;code&gt;assert.deepEqual()&lt;/code&gt; &lt;/a&gt;尤其如此，其中比较规则不严格：</target>
        </trans-unit>
        <trans-unit id="4b0837810808c1db86ff7969b3cc7349ad3a777d" translate="yes" xml:space="preserve">
          <source>Where &lt;code&gt;$HOME&lt;/code&gt; is the user's home directory, and &lt;code&gt;$PREFIX&lt;/code&gt; is Node.js's configured &lt;code&gt;node_prefix&lt;/code&gt;.</source>
          <target state="translated">其中 &lt;code&gt;$HOME&lt;/code&gt; 是用户的主目录，而 &lt;code&gt;$PREFIX&lt;/code&gt; 是Node.js配置的 &lt;code&gt;node_prefix&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f32697019030f03ffa8466dad93332914e45c734" translate="yes" xml:space="preserve">
          <source>Where &lt;code&gt;$HOME&lt;/code&gt; is the user's home directory, and &lt;code&gt;$PREFIX&lt;/code&gt; is the Node.js configured &lt;code&gt;node_prefix&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e741bc3dcef0123eeda11543758853be2aac149" translate="yes" xml:space="preserve">
          <source>Where:</source>
          <target state="translated">Where:</target>
        </trans-unit>
        <trans-unit id="38c19b2f1a4bf680069191361065f1dffe346b36" translate="yes" xml:space="preserve">
          <source>Whereas DOM &lt;code&gt;EventTarget&lt;/code&gt; instances &lt;em&gt;may&lt;/em&gt; be hierarchical, there is no concept of hierarchy and event propagation in Node.js. That is, an event dispatched to an &lt;code&gt;EventTarget&lt;/code&gt; does not propagate through a hierarchy of nested target objects that may each have their own set of handlers for the event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d88ed0feb975e4fa8a53343cb171f8d13d607d4" translate="yes" xml:space="preserve">
          <source>Whether or not the module is done loading, or is in the process of loading.</source>
          <target state="translated">该模块是否已经完成加载,或者正在加载过程中。</target>
        </trans-unit>
        <trans-unit id="150bcea502183560d4bd3b371b2eac70c65966c2" translate="yes" xml:space="preserve">
          <source>While &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/slice&quot;&gt;&lt;code&gt;TypedArray#slice()&lt;/code&gt;&lt;/a&gt; creates a copy of part of the &lt;code&gt;TypedArray&lt;/code&gt;, &lt;a href=&quot;#buffer_buf_slice_start_end&quot;&gt;&lt;code&gt;Buffer#slice()&lt;/code&gt;&lt;/a&gt; creates a view over the existing &lt;code&gt;Buffer&lt;/code&gt; without copying. This behavior can be surprising, and only exists for legacy compatibility. &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/subarray&quot;&gt;&lt;code&gt;TypedArray#subarray()&lt;/code&gt;&lt;/a&gt; can be used to achieve the behavior of &lt;a href=&quot;#buffer_buf_slice_start_end&quot;&gt;&lt;code&gt;Buffer#slice()&lt;/code&gt;&lt;/a&gt; on both &lt;code&gt;Buffer&lt;/code&gt;s and other &lt;code&gt;TypedArray&lt;/code&gt;s.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="073b0a5fc18cb0c2d155506393ae1a3f4713ec1d" translate="yes" xml:space="preserve">
          <source>While &lt;code&gt;readable.readableFlowing&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;, data may be accumulating within the stream's internal buffer.</source>
          <target state="translated">当 &lt;code&gt;readable.readableFlowing&lt;/code&gt; 为 &lt;code&gt;false&lt;/code&gt; 时，数据可能在流的内部缓冲区中累积。</target>
        </trans-unit>
        <trans-unit id="56c8f07d4ebaba9048700c889aa63a035ed687c0" translate="yes" xml:space="preserve">
          <source>While &lt;em&gt;parentURL&lt;/em&gt; is not the file system root,</source>
          <target state="translated">尽管&lt;em&gt;parentURL&lt;/em&gt;不是文件系统根目录，</target>
        </trans-unit>
        <trans-unit id="3eaccbf0809c93e1b57c8a5d1f706909dffd3367" translate="yes" xml:space="preserve">
          <source>While &lt;em&gt;scopeURL&lt;/em&gt; is not the file system root,</source>
          <target state="translated">虽然&lt;em&gt;scopeURL&lt;/em&gt;不是文件系统根目录，</target>
        </trans-unit>
        <trans-unit id="827e891467d3d9882b685c22937f88f6efa8b40f" translate="yes" xml:space="preserve">
          <source>While a Node.js process typically releases all its resources when exiting, embedders of Node.js, or future Worker support, may require addons to register clean-up hooks that will be run once the current Node.js instance exits.</source>
          <target state="translated">虽然Node.js进程在退出时通常会释放其所有资源,但Node.js的嵌入者或未来的Worker支持,可能需要附加组件注册清理钩子,一旦当前Node.js实例退出,这些钩子就会运行。</target>
        </trans-unit>
        <trans-unit id="16bf687a5d42e237a08af3b384d73c158bf3b89e" translate="yes" xml:space="preserve">
          <source>While a stream is not draining, calls to &lt;code&gt;write()&lt;/code&gt; will buffer &lt;code&gt;chunk&lt;/code&gt;, and return false. Once all currently buffered chunks are drained (accepted for delivery by the operating system), the &lt;code&gt;'drain'&lt;/code&gt; event will be emitted. It is recommended that once &lt;code&gt;write()&lt;/code&gt; returns false, no more chunks be written until the &lt;code&gt;'drain'&lt;/code&gt; event is emitted. While calling &lt;code&gt;write()&lt;/code&gt; on a stream that is not draining is allowed, Node.js will buffer all written chunks until maximum memory usage occurs, at which point it will abort unconditionally. Even before it aborts, high memory usage will cause poor garbage collector performance and high RSS (which is not typically released back to the system, even after the memory is no longer required). Since TCP sockets may never drain if the remote peer does not read the data, writing a socket that is not draining may lead to a remotely exploitable vulnerability.</source>
          <target state="translated">当流不耗尽时，对 &lt;code&gt;write()&lt;/code&gt; 的调用将缓冲 &lt;code&gt;chunk&lt;/code&gt; ，并返回false。一旦所有当前缓冲的块都被耗尽（操作系统接受传递），则将发出 &lt;code&gt;'drain'&lt;/code&gt; 事件。建议一旦 &lt;code&gt;write()&lt;/code&gt; 返回false，在发出 &lt;code&gt;'drain'&lt;/code&gt; 事件之前不要再写入任何块。在调用 &lt;code&gt;write()&lt;/code&gt; 时在不允许排空的流上，Node.js将缓冲所有写入的块，直到出现最大内存使用量为止，此时它将无条件中止。即使在中止之前，高内存使用率也会导致较差的垃圾回收器性能和高RSS（即使不再需要内存后，也通常不会释放回系统）。由于远程对等方不读取数据，TCP套接字可能永远不会耗尽，因此编写不耗尽的套接字可能会导致可远程利用的漏洞。</target>
        </trans-unit>
        <trans-unit id="d6a8020de6b381b75f56b7f678ab65ef6cbe3057" translate="yes" xml:space="preserve">
          <source>While a worker is alive, this is the key that indexes it in &lt;code&gt;cluster.workers&lt;/code&gt;.</source>
          <target state="translated">当一个工人还活着的时候，这是在 &lt;code&gt;cluster.workers&lt;/code&gt; 中索引它的关键。</target>
        </trans-unit>
        <trans-unit id="1fd443864b968d1422e68befd59a84340c0cbe2f" translate="yes" xml:space="preserve">
          <source>While calling &lt;code&gt;napi_create_dataview()&lt;/code&gt;, a given &lt;code&gt;offset&lt;/code&gt; was outside the bounds of the dataview or &lt;code&gt;offset + length&lt;/code&gt; was larger than a length of given &lt;code&gt;buffer&lt;/code&gt;.</source>
          <target state="translated">在调用 &lt;code&gt;napi_create_dataview()&lt;/code&gt; 时，给定的 &lt;code&gt;offset&lt;/code&gt; 超出了数据视图的范围，或者 &lt;code&gt;offset + length&lt;/code&gt; 大于给定 &lt;code&gt;buffer&lt;/code&gt; 的长度。</target>
        </trans-unit>
        <trans-unit id="8ac13a17681e077ea5bf349faacd8194b41cfd8a" translate="yes" xml:space="preserve">
          <source>While calling &lt;code&gt;napi_create_typedarray()&lt;/code&gt;, &lt;code&gt;(length * size_of_element) + byte_offset&lt;/code&gt; was larger than the length of given &lt;code&gt;buffer&lt;/code&gt;.</source>
          <target state="translated">调用 &lt;code&gt;napi_create_typedarray()&lt;/code&gt; 时， &lt;code&gt;(length * size_of_element) + byte_offset&lt;/code&gt; 大于给定 &lt;code&gt;buffer&lt;/code&gt; 的长度。</target>
        </trans-unit>
        <trans-unit id="89bedcd7f7b0e6f56592b23db9232857980b56be" translate="yes" xml:space="preserve">
          <source>While calling &lt;code&gt;napi_create_typedarray()&lt;/code&gt;, the provided &lt;code&gt;offset&lt;/code&gt; was not a multiple of the element size.</source>
          <target state="translated">调用 &lt;code&gt;napi_create_typedarray()&lt;/code&gt; 时，提供的 &lt;code&gt;offset&lt;/code&gt; 不是元素大小的倍数。</target>
        </trans-unit>
        <trans-unit id="5f70577b8889d7968ea8fc5369e676e9ca7b273e" translate="yes" xml:space="preserve">
          <source>While client code may generate and propagate these errors, in practice, only V8 will do so.</source>
          <target state="translated">虽然客户端代码可能会产生和传播这些错误,但实际上,只有V8会这样做。</target>
        </trans-unit>
        <trans-unit id="0a77636ef4321da677173086cd96495f6d6cd2c5" translate="yes" xml:space="preserve">
          <source>While it is not recommended, most fs functions allow the callback argument to be omitted, in which case a default callback is used that rethrows errors. To get a trace to the original call site, set the &lt;code&gt;NODE_DEBUG&lt;/code&gt; environment variable:</source>
          <target state="translated">尽管不建议这样做，但是大多数fs函数都允许省略callback参数，在这种情况下，将使用默认的回调来抛出错误。要跟踪原始呼叫站点，请设置 &lt;code&gt;NODE_DEBUG&lt;/code&gt; 环境变量：</target>
        </trans-unit>
        <trans-unit id="07ad085018317673130d977314c9fd1a0ab27428" translate="yes" xml:space="preserve">
          <source>While most applications will almost never need to do this, there are situations within Node.js where this is done, particularly in the &lt;code&gt;Readable&lt;/code&gt; stream class internals.</source>
          <target state="translated">尽管大多数应用程序几乎永远不需要这样做，但是在Node.js中确实有这样做的情况，特别是在 &lt;code&gt;Readable&lt;/code&gt; 流类内部。</target>
        </trans-unit>
        <trans-unit id="12603addff37ef7fb8f4096757cb2ac7b6201fe2" translate="yes" xml:space="preserve">
          <source>While most applications will continue to function normally, this introduces an edge case in the following conditions:</source>
          <target state="translated">虽然大多数应用程序将继续正常运行,但这将在以下情况下引入边缘情况。</target>
        </trans-unit>
        <trans-unit id="2e267fe043876fa36afddb190a1c3ab052c39add" translate="yes" xml:space="preserve">
          <source>While other subpaths will error:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e574df95dc872b8cc54642689247473a5c7d5173" translate="yes" xml:space="preserve">
          <source>While process warnings use &lt;code&gt;Error&lt;/code&gt; objects, the process warning mechanism is &lt;strong&gt;not&lt;/strong&gt; a replacement for normal error handling mechanisms.</source>
          <target state="translated">虽然过程警告使用 &lt;code&gt;Error&lt;/code&gt; 的对象，过程预警机制是&lt;strong&gt;不&lt;/strong&gt;正常的错误处理机制的替代品。</target>
        </trans-unit>
        <trans-unit id="53b02f9a1b3e1a259321fe33272d01f74b179e92" translate="yes" xml:space="preserve">
          <source>While specific instances of &lt;a href=&quot;#stream_class_stream_writable&quot;&gt;&lt;code&gt;Writable&lt;/code&gt;&lt;/a&gt; streams may differ in various ways, all &lt;code&gt;Writable&lt;/code&gt; streams follow the same fundamental usage pattern as illustrated in the example below:</source>
          <target state="translated">尽管&lt;a href=&quot;#stream_class_stream_writable&quot;&gt; &lt;code&gt;Writable&lt;/code&gt; &lt;/a&gt;流的特定实例可能在各种方面有所不同，但是所有 &lt;code&gt;Writable&lt;/code&gt; 流都遵循相同的基本用法模式，如下例所示：</target>
        </trans-unit>
        <trans-unit id="9bda333a604d893d1a75ffb87d5525e7ef7b7daa" translate="yes" xml:space="preserve">
          <source>While the &lt;code&gt;bindings&lt;/code&gt; package implementation is more sophisticated in how it locates Addon modules, it is essentially using a &lt;code&gt;try&amp;hellip;catch&lt;/code&gt; pattern similar to:</source>
          <target state="translated">尽管 &lt;code&gt;bindings&lt;/code&gt; 软件包的实现在如何定位Addon模块方面更加复杂，但它实际上是使用 &lt;code&gt;try&amp;hellip;catch&lt;/code&gt; 模式，类似于：</target>
        </trans-unit>
        <trans-unit id="148734bd8ae3a9daac7e2781c1383ca3a0ec28e6" translate="yes" xml:space="preserve">
          <source>While the &lt;code&gt;bindings&lt;/code&gt; package implementation is more sophisticated in how it locates addon modules, it is essentially using a &lt;code&gt;try&amp;hellip;catch&lt;/code&gt; pattern similar to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76c90ee7eba72880849307c2039e0e4bb01a80a1" translate="yes" xml:space="preserve">
          <source>While the &lt;code&gt;length&lt;/code&gt; property is not immutable, changing the value of &lt;code&gt;length&lt;/code&gt; can result in undefined and inconsistent behavior. Applications that wish to modify the length of a &lt;code&gt;Buffer&lt;/code&gt; should therefore treat &lt;code&gt;length&lt;/code&gt; as read-only and use &lt;a href=&quot;#buffer_buf_slice_start_end&quot;&gt;&lt;code&gt;buf.slice()&lt;/code&gt;&lt;/a&gt; to create a new &lt;code&gt;Buffer&lt;/code&gt;.</source>
          <target state="translated">虽然 &lt;code&gt;length&lt;/code&gt; 属性不是一成不变的，但是更改 &lt;code&gt;length&lt;/code&gt; 的值可能会导致未定义和不一致的行为。因此，希望修改 &lt;code&gt;Buffer&lt;/code&gt; 长度的应用程序应将 &lt;code&gt;length&lt;/code&gt; 视为只读，并使用&lt;a href=&quot;#buffer_buf_slice_start_end&quot;&gt; &lt;code&gt;buf.slice()&lt;/code&gt; &lt;/a&gt;创建新的 &lt;code&gt;Buffer&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a623dbbd3951370c264476b7c6e7232613236f42" translate="yes" xml:space="preserve">
          <source>While the Legacy API has not been deprecated, it is maintained solely for backwards compatibility with existing applications. New application code should use the WHATWG API.</source>
          <target state="translated">虽然遗留 API 没有被废弃,但它的维护只是为了向后兼容现有的应用程序。新的应用程序代码应该使用 WHATWG API。</target>
        </trans-unit>
        <trans-unit id="09c5d64ead347c0d1001f45fe745bced7173b737" translate="yes" xml:space="preserve">
          <source>While the example above uses a server created using the &lt;code&gt;net&lt;/code&gt; module, &lt;code&gt;dgram&lt;/code&gt; module servers use exactly the same workflow with the exceptions of listening on a &lt;code&gt;'message'&lt;/code&gt; event instead of &lt;code&gt;'connection'&lt;/code&gt; and using &lt;code&gt;server.bind()&lt;/code&gt; instead of &lt;code&gt;server.listen()&lt;/code&gt;. This is, however, currently only supported on Unix platforms.</source>
          <target state="translated">尽管上面的示例使用的是使用 &lt;code&gt;net&lt;/code&gt; 模块创建的服务器，但 &lt;code&gt;dgram&lt;/code&gt; 模块服务器使用的工作流程完全相同，不同的是监听 &lt;code&gt;'message'&lt;/code&gt; 事件而不是 &lt;code&gt;'connection'&lt;/code&gt; 并使用 &lt;code&gt;server.bind()&lt;/code&gt; 代替 &lt;code&gt;server.listen()&lt;/code&gt; 。但是，当前仅在Unix平台上支持。</target>
        </trans-unit>
        <trans-unit id="4cc676ce4cebcbf29d86e81b5c7d0dff3d3d683c" translate="yes" xml:space="preserve">
          <source>While the following will:</source>
          <target state="translated">虽然以下将:</target>
        </trans-unit>
        <trans-unit id="b5fff3058753561ed1c6d6a0fda3b9ebdd80b49a" translate="yes" xml:space="preserve">
          <source>While the function is called &lt;code&gt;kill&lt;/code&gt;, the signal delivered to the child process may not actually terminate the process.</source>
          <target state="translated">虽然该函数称为 &lt;code&gt;kill&lt;/code&gt; ，但传递给子进程的信号实际上可能不会终止该进程。</target>
        </trans-unit>
        <trans-unit id="272a1681221a0eec5a8cfa19d26eb906122e1b59" translate="yes" xml:space="preserve">
          <source>While there are clear performance advantages to using &lt;a href=&quot;#buffer_class_method_buffer_allocunsafe_size&quot;&gt;&lt;code&gt;Buffer.allocUnsafe()&lt;/code&gt;&lt;/a&gt;, extra care &lt;em&gt;must&lt;/em&gt; be taken in order to avoid introducing security vulnerabilities into an application.</source>
          <target state="translated">尽管使用&lt;a href=&quot;#buffer_class_method_buffer_allocunsafe_size&quot;&gt; &lt;code&gt;Buffer.allocUnsafe()&lt;/code&gt; &lt;/a&gt;具有明显的性能优势，但&lt;em&gt;必须&lt;/em&gt;格外小心，以避免在应用程序中引入安全漏洞。</target>
        </trans-unit>
        <trans-unit id="dff47dc75762b117c912273ee750fcd8b8835a1f" translate="yes" xml:space="preserve">
          <source>While there are clear performance advantages to using &lt;a href=&quot;#buffer_static_method_buffer_allocunsafe_size&quot;&gt;&lt;code&gt;Buffer.allocUnsafe()&lt;/code&gt;&lt;/a&gt;, extra care &lt;em&gt;must&lt;/em&gt; be taken in order to avoid introducing security vulnerabilities into an application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="906514837da60312b0100c43d459f45d3629e591" translate="yes" xml:space="preserve">
          <source>While using &lt;a href=&quot;dgram#dgram_dgram_createsocket_options_callback&quot;&gt;&lt;code&gt;dgram.createSocket()&lt;/code&gt;&lt;/a&gt;, the size of the receive or send &lt;code&gt;Buffer&lt;/code&gt; could not be determined.</source>
          <target state="translated">使用&lt;a href=&quot;dgram#dgram_dgram_createsocket_options_callback&quot;&gt; &lt;code&gt;dgram.createSocket()&lt;/code&gt; 时&lt;/a&gt;，无法确定接收或发送 &lt;code&gt;Buffer&lt;/code&gt; 的大小。</target>
        </trans-unit>
        <trans-unit id="05941d502963f71fe136daa4cb4b731bc168d99f" translate="yes" xml:space="preserve">
          <source>While using &lt;code&gt;N-API&lt;/code&gt;, a constructor passed was not a function.</source>
          <target state="translated">使用 &lt;code&gt;N-API&lt;/code&gt; 时，传递的构造函数不是函数。</target>
        </trans-unit>
        <trans-unit id="93457bdd2cd57367c90d2f2935274066789902d1" translate="yes" xml:space="preserve">
          <source>While using TLS, the &lt;code&gt;server.addContext()&lt;/code&gt; method was called without providing a host name in the first parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9146b4c870abc13d8e7270e7e2c8205a2d51013" translate="yes" xml:space="preserve">
          <source>While using TLS, the &lt;code&gt;server.addContext()&lt;/code&gt; method was called without providing a hostname in the first parameter.</source>
          <target state="translated">使用TLS时，在第一个参数中未提供主机名的情况下调用了 &lt;code&gt;server.addContext()&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="4a919666b0cfbcead82430357bab047021b52466" translate="yes" xml:space="preserve">
          <source>While using TLS, the host name/IP of the peer did not match any of the &lt;code&gt;subjectAltNames&lt;/code&gt; in its certificate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a7d1e22335731ae81c12afd1af0756eec95e9e1" translate="yes" xml:space="preserve">
          <source>While using TLS, the hostname/IP of the peer did not match any of the &lt;code&gt;subjectAltNames&lt;/code&gt; in its certificate.</source>
          <target state="translated">使用TLS时，对等方的主机名/ IP 与其证书中的任何 &lt;code&gt;subjectAltNames&lt;/code&gt; 不匹配。</target>
        </trans-unit>
        <trans-unit id="45d99be8b65878064711b0e62c2136d7a075162d" translate="yes" xml:space="preserve">
          <source>While using TLS, the parameter offered for the Diffie-Hellman (&lt;code&gt;DH&lt;/code&gt;) key-agreement protocol is too small. By default, the key length must be greater than or equal to 1024 bits to avoid vulnerabilities, even though it is strongly recommended to use 2048 bits or larger for stronger security.</source>
          <target state="translated">使用TLS时，为Diffie-Hellman（ &lt;code&gt;DH&lt;/code&gt; ）密钥协商协议提供的参数太小。默认情况下，密钥长度必须大于或等于1024位，以避免漏洞，即使强烈建议使用2048位或更大长度来增强安全性。</target>
        </trans-unit>
        <trans-unit id="0255bf434163a119a17b1d975c9f1e7ecfd257e3" translate="yes" xml:space="preserve">
          <source>While using the &lt;code&gt;inspector&lt;/code&gt; module, an attempt was made to activate the inspector when it already started to listen on a port. Use &lt;code&gt;inspector.close()&lt;/code&gt; before activating it on a different address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0ed3431f9e7da6bdb7c0cdcc138f0c67a3a84bd" translate="yes" xml:space="preserve">
          <source>While using the &lt;code&gt;inspector&lt;/code&gt; module, an attempt was made to connect when the inspector was already connected.</source>
          <target state="translated">使用 &lt;code&gt;inspector&lt;/code&gt; 模块时，尝试在已经连接检查器时进行连接。</target>
        </trans-unit>
        <trans-unit id="c9e4d1438169aa995467dae33b288560aea4c176" translate="yes" xml:space="preserve">
          <source>While using the &lt;code&gt;inspector&lt;/code&gt; module, an attempt was made to use the inspector after the session had already closed.</source>
          <target state="translated">在使用 &lt;code&gt;inspector&lt;/code&gt; 模块时，尝试在会话已经关闭之后使用检查器。</target>
        </trans-unit>
        <trans-unit id="7c8341fb6d1f4721021429c0a358429868bcd9a7" translate="yes" xml:space="preserve">
          <source>While using the &lt;code&gt;inspector&lt;/code&gt; module, an attempt was made to use the inspector before it was connected.</source>
          <target state="translated">在使用 &lt;code&gt;inspector&lt;/code&gt; 模块时，尝试在连接检查器之前使用检查器。</target>
        </trans-unit>
        <trans-unit id="85091e3c3a7666c26248b532c8232f034e100cae" translate="yes" xml:space="preserve">
          <source>While using the Performance Timing API (&lt;code&gt;perf_hooks&lt;/code&gt;), a performance mark is invalid.</source>
          <target state="translated">使用Performance Timing API（ &lt;code&gt;perf_hooks&lt;/code&gt; ）时，性能标记无效。</target>
        </trans-unit>
        <trans-unit id="cc4a904bf2febe00864e7180029aef452cfb34c5" translate="yes" xml:space="preserve">
          <source>While using the Performance Timing API (&lt;code&gt;perf_hooks&lt;/code&gt;), no valid performance entry types are found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c712c9cfae45300304fedcd57cc9dbfd5142252" translate="yes" xml:space="preserve">
          <source>While using the Performance Timing API (&lt;code&gt;perf_hooks&lt;/code&gt;), no valid performance entry types were found.</source>
          <target state="translated">在使用Performance Timing API（ &lt;code&gt;perf_hooks&lt;/code&gt; ）时，未找到有效的性能条目类型。</target>
        </trans-unit>
        <trans-unit id="7a0f6c9b6bee563036957bfb2ec6eb810b5f2187" translate="yes" xml:space="preserve">
          <source>While, the &lt;code&gt;Buffer&lt;/code&gt; object is available as a global, there are additional &lt;code&gt;Buffer&lt;/code&gt;-related APIs that are available only via the &lt;code&gt;buffer&lt;/code&gt; module accessed using &lt;code&gt;require('buffer')&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="300d4cf95fd55a00d2f8a5ccb4867cbf70cfc142" translate="yes" xml:space="preserve">
          <source>Will be &lt;code&gt;true&lt;/code&gt; if the &lt;code&gt;QuicSocket&lt;/code&gt; has been destroyed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3ed3d9b3b369ef7cf4a361ca2e1346f0cf8f228" translate="yes" xml:space="preserve">
          <source>Will be &lt;code&gt;true&lt;/code&gt; if the &lt;code&gt;QuicSocket&lt;/code&gt; has been successfully bound to a local UDP port. Initially the value is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51e10faadc7ce3a3d6851a934dfc743094c5a2e1" translate="yes" xml:space="preserve">
          <source>Will be &lt;code&gt;true&lt;/code&gt; if the &lt;code&gt;QuicStream&lt;/code&gt; is unidirectional. Whether the &lt;code&gt;QuicStream&lt;/code&gt; will be readable or writable depends on whether the &lt;code&gt;quicstream.session&lt;/code&gt; is a &lt;code&gt;QuicClientSession&lt;/code&gt; or &lt;code&gt;QuicServerSession&lt;/code&gt;, and whether the &lt;code&gt;QuicStream&lt;/code&gt; was initiated locally or remotely.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56852f1433cd6db40dd6ed5ff8afdb21f7d2b72c" translate="yes" xml:space="preserve">
          <source>Will be &lt;code&gt;true&lt;/code&gt; if the &lt;code&gt;QuicStream&lt;/code&gt; was initiated by a &lt;code&gt;QuicClientSession&lt;/code&gt; instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3c4698c06e9766787f59a0a0720a7451edbc163" translate="yes" xml:space="preserve">
          <source>Will be &lt;code&gt;true&lt;/code&gt; if the &lt;code&gt;QuicStream&lt;/code&gt; was initiated by a &lt;code&gt;QuicServerSession&lt;/code&gt; instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbf2dd154821886de9761f603648735c3e559ee1" translate="yes" xml:space="preserve">
          <source>Will be &lt;code&gt;true&lt;/code&gt; if this &lt;code&gt;Http2Session&lt;/code&gt; instance has been closed, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">将 &lt;code&gt;true&lt;/code&gt; ，如果这 &lt;code&gt;Http2Session&lt;/code&gt; 实例已经关闭，否则 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e76c78443d8eaa0500bc30563e442b910eb81724" translate="yes" xml:space="preserve">
          <source>Will be &lt;code&gt;true&lt;/code&gt; if this &lt;code&gt;Http2Session&lt;/code&gt; instance has been destroyed and must no longer be used, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">将 &lt;code&gt;true&lt;/code&gt; ，如果这 &lt;code&gt;Http2Session&lt;/code&gt; 实例已被破坏，不能再使用，否则 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a6c7b91092846e149e633701cf1ea18b986ae46f" translate="yes" xml:space="preserve">
          <source>Will be &lt;code&gt;true&lt;/code&gt; if this &lt;code&gt;Http2Session&lt;/code&gt; instance is still connecting, will be set to &lt;code&gt;false&lt;/code&gt; before emitting &lt;code&gt;connect&lt;/code&gt; event and/or calling the &lt;code&gt;http2.connect&lt;/code&gt; callback.</source>
          <target state="translated">将 &lt;code&gt;true&lt;/code&gt; ，如果这 &lt;code&gt;Http2Session&lt;/code&gt; 实例仍在连接，将被设置为 &lt;code&gt;false&lt;/code&gt; 发射前 &lt;code&gt;connect&lt;/code&gt; 事件和/或调用 &lt;code&gt;http2.connect&lt;/code&gt; 回调。</target>
        </trans-unit>
        <trans-unit id="5df68b6de935e716e54330bfbad78ac0cfff8003" translate="yes" xml:space="preserve">
          <source>Will generate an object similar to:</source>
          <target state="translated">将生成一个类似于的对象。</target>
        </trans-unit>
        <trans-unit id="49659e5a07d9ec9ddbc5ea2cded9dfed86235252" translate="yes" xml:space="preserve">
          <source>Will generate:</source>
          <target state="translated">会产生。</target>
        </trans-unit>
        <trans-unit id="2c2d1ea901f0c8101ac1fb5fa6dc20b9daa197c0" translate="yes" xml:space="preserve">
          <source>Will print:</source>
          <target state="translated">会打印。</target>
        </trans-unit>
        <trans-unit id="70e640967068e9aeff74a0b63a5f321ce52989ef" translate="yes" xml:space="preserve">
          <source>Windows Performance Counter support has been removed from Node.js. The undocumented &lt;code&gt;COUNTER_NET_SERVER_CONNECTION()&lt;/code&gt;, &lt;code&gt;COUNTER_NET_SERVER_CONNECTION_CLOSE()&lt;/code&gt;, &lt;code&gt;COUNTER_HTTP_SERVER_REQUEST()&lt;/code&gt;, &lt;code&gt;COUNTER_HTTP_SERVER_RESPONSE()&lt;/code&gt;, &lt;code&gt;COUNTER_HTTP_CLIENT_REQUEST()&lt;/code&gt;, and &lt;code&gt;COUNTER_HTTP_CLIENT_RESPONSE()&lt;/code&gt; functions have been deprecated.</source>
          <target state="translated">Windows Performance Counter支持已从Node.js中删除。未记录的 &lt;code&gt;COUNTER_NET_SERVER_CONNECTION()&lt;/code&gt; ， &lt;code&gt;COUNTER_NET_SERVER_CONNECTION_CLOSE()&lt;/code&gt; ， &lt;code&gt;COUNTER_HTTP_SERVER_REQUEST()&lt;/code&gt; ， &lt;code&gt;COUNTER_HTTP_SERVER_RESPONSE()&lt;/code&gt; ， &lt;code&gt;COUNTER_HTTP_CLIENT_REQUEST()&lt;/code&gt; 和 &lt;code&gt;COUNTER_HTTP_CLIENT_RESPONSE()&lt;/code&gt; 函数已被弃用。</target>
        </trans-unit>
        <trans-unit id="d3eb2a06ecdde61b424aed0b151aacc295ac1030" translate="yes" xml:space="preserve">
          <source>Windows Specific Error Constants</source>
          <target state="translated">Windows特定错误常量</target>
        </trans-unit>
        <trans-unit id="c7bb5218ec791e1b5be45e3ebd73be51f17f1af7" translate="yes" xml:space="preserve">
          <source>Windows does not support sending signals, but Node.js offers some emulation with &lt;a href=&quot;#process_process_kill_pid_signal&quot;&gt;&lt;code&gt;process.kill()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;child_process#child_process_subprocess_kill_signal&quot;&gt;&lt;code&gt;subprocess.kill()&lt;/code&gt;&lt;/a&gt;. Sending signal &lt;code&gt;0&lt;/code&gt; can be used to test for the existence of a process. Sending &lt;code&gt;SIGINT&lt;/code&gt;, &lt;code&gt;SIGTERM&lt;/code&gt;, and &lt;code&gt;SIGKILL&lt;/code&gt; cause the unconditional termination of the target process.</source>
          <target state="translated">Windows不支持发送信号，但是Node.js使用&lt;a href=&quot;#process_process_kill_pid_signal&quot;&gt; &lt;code&gt;process.kill()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;child_process#child_process_subprocess_kill_signal&quot;&gt; &lt;code&gt;subprocess.kill()&lt;/code&gt; &lt;/a&gt;提供了一些仿真。发送信号 &lt;code&gt;0&lt;/code&gt; 可用于测试过程的存在。发送 &lt;code&gt;SIGINT&lt;/code&gt; ， &lt;code&gt;SIGTERM&lt;/code&gt; 和 &lt;code&gt;SIGKILL&lt;/code&gt; 会导致无条件终止目标进程。</target>
        </trans-unit>
        <trans-unit id="bfea3e748f09870848545f0c2f952c91ac03fe38" translate="yes" xml:space="preserve">
          <source>Windows does not support signals so has no equivalent to termination by signal, but Node.js offers some emulation with &lt;a href=&quot;#process_process_kill_pid_signal&quot;&gt;&lt;code&gt;process.kill()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;child_process#child_process_subprocess_kill_signal&quot;&gt;&lt;code&gt;subprocess.kill()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aba9f3b1cc568ab6b6fc3f150113c54c4f72c506" translate="yes" xml:space="preserve">
          <source>Windows vs. POSIX</source>
          <target state="translated">Windows与POSIX</target>
        </trans-unit>
        <trans-unit id="b6726453945768d268831e1f085608f8f62e92b3" translate="yes" xml:space="preserve">
          <source>Windows-specific error constants</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27e8d1c11c75449e5d932b4ccddda5d5eb83e4a5" translate="yes" xml:space="preserve">
          <source>With &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray&quot;&gt;&lt;code&gt;TypedArray&lt;/code&gt;&lt;/a&gt; now available, the &lt;code&gt;Buffer&lt;/code&gt; class implements the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array&quot;&gt;&lt;code&gt;Uint8Array&lt;/code&gt;&lt;/a&gt; API in a manner that is more optimized and suitable for Node.js.</source>
          <target state="translated">有了&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray&quot;&gt; &lt;code&gt;TypedArray&lt;/code&gt; &lt;/a&gt;， &lt;code&gt;Buffer&lt;/code&gt; 类以更优化的方式和适用于Node.js的方式实现&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array&quot;&gt; &lt;code&gt;Uint8Array&lt;/code&gt; &lt;/a&gt; API。</target>
        </trans-unit>
        <trans-unit id="cc2ce0a1c1a12ddc001101986e9f3e96a7af34d3" translate="yes" xml:space="preserve">
          <source>With HTTPS support, use &lt;a href=&quot;tls#tls_tlssocket_getpeercertificate_detailed&quot;&gt;&lt;code&gt;request.socket.getPeerCertificate()&lt;/code&gt;&lt;/a&gt; to obtain the client's authentication details.</source>
          <target state="translated">有了HTTPS支持，请使用&lt;a href=&quot;tls#tls_tlssocket_getpeercertificate_detailed&quot;&gt; &lt;code&gt;request.socket.getPeerCertificate()&lt;/code&gt; &lt;/a&gt;获取客户端的身份验证详细信息。</target>
        </trans-unit>
        <trans-unit id="eff3fb3260b706087702387fa36966dba17fa603" translate="yes" xml:space="preserve">
          <source>With TLS/SSL, all servers (and some clients) must have a &lt;em&gt;certificate&lt;/em&gt;. Certificates are &lt;em&gt;public keys&lt;/em&gt; that correspond to a private key, and that are digitally signed either by a Certificate Authority or by the owner of the private key (such certificates are referred to as &quot;self-signed&quot;). The first step to obtaining a certificate is to create a &lt;em&gt;Certificate Signing Request&lt;/em&gt; (CSR) file.</source>
          <target state="translated">使用TLS / SSL，所有服务器（和某些客户端）都必须具有&lt;em&gt;证书&lt;/em&gt;。证书是&lt;em&gt;公共密钥&lt;/em&gt;对应于专用密钥，并以数字方式由证书机构或通过私有密钥的所有者有符号（例如证书称为&amp;ldquo;自签署&amp;rdquo;）。获得证书的第一步是创建&lt;em&gt;证书签名请求&lt;/em&gt;（CSR）文件。</target>
        </trans-unit>
        <trans-unit id="0c21435a9e5e1897d281c15fe6d4278729f4ba10" translate="yes" xml:space="preserve">
          <source>With TLSv1.3, be aware that multiple tickets may be sent by the server, resulting in multiple &lt;code&gt;'session'&lt;/code&gt; events, see &lt;a href=&quot;#tls_event_session&quot;&gt;&lt;code&gt;'session'&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">使用TLSv1.3，请注意服务器可能会发送多个票证，从而导致多个 &lt;code&gt;'session'&lt;/code&gt; 事件，有关更多信息，请参见&lt;a href=&quot;#tls_event_session&quot;&gt; &lt;code&gt;'session'&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f9b2a4a6fab4bc23157008667b80e9978473ae86" translate="yes" xml:space="preserve">
          <source>With few exceptions, &lt;em&gt;Synchronous&lt;/em&gt; APIs (any blocking method that does not accept a &lt;code&gt;callback&lt;/code&gt; function, such as &lt;a href=&quot;fs#fs_fs_readfilesync_path_options&quot;&gt;&lt;code&gt;fs.readFileSync&lt;/code&gt;&lt;/a&gt;), will use &lt;code&gt;throw&lt;/code&gt; to report errors.</source>
          <target state="translated">几乎没有例外，&lt;em&gt;同步&lt;/em&gt; API（任何不接受 &lt;code&gt;callback&lt;/code&gt; 函数的阻塞方法，例如&lt;a href=&quot;fs#fs_fs_readfilesync_path_options&quot;&gt; &lt;code&gt;fs.readFileSync&lt;/code&gt; &lt;/a&gt;）将使用 &lt;code&gt;throw&lt;/code&gt; 报告错误。</target>
        </trans-unit>
        <trans-unit id="19b157b47e83a53d9af8023d224e343715e368cd" translate="yes" xml:space="preserve">
          <source>With the &lt;a href=&quot;cli#cli_experimental_repl_await&quot;&gt;&lt;code&gt;--experimental-repl-await&lt;/code&gt;&lt;/a&gt; command line option specified, experimental support for the &lt;code&gt;await&lt;/code&gt; keyword is enabled.</source>
          <target state="translated">通过指定&lt;a href=&quot;cli#cli_experimental_repl_await&quot;&gt; &lt;code&gt;--experimental-repl-await&lt;/code&gt; &lt;/a&gt;命令行选项，可以启用对 &lt;code&gt;await&lt;/code&gt; 关键字的实验性支持。</target>
        </trans-unit>
        <trans-unit id="627181d1cba340317aff21e0565fb8c5949b0afc" translate="yes" xml:space="preserve">
          <source>With the &lt;a href=&quot;cli#cli_experimental_repl_await&quot;&gt;&lt;code&gt;--experimental-repl-await&lt;/code&gt;&lt;/a&gt; command-line option specified, experimental support for the &lt;code&gt;await&lt;/code&gt; keyword is enabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63ae8776ef3f404c5446c364b77e122a73f3b875" translate="yes" xml:space="preserve">
          <source>With the &lt;code&gt;all&lt;/code&gt; option set to &lt;code&gt;true&lt;/code&gt;, the &lt;code&gt;Promise&lt;/code&gt; is resolved with &lt;code&gt;addresses&lt;/code&gt; being an array of objects with the properties &lt;code&gt;address&lt;/code&gt; and &lt;code&gt;family&lt;/code&gt;.</source>
          <target state="translated">将 &lt;code&gt;all&lt;/code&gt; 选项设置为 &lt;code&gt;true&lt;/code&gt; 时， &lt;code&gt;Promise&lt;/code&gt; 通过 &lt;code&gt;addresses&lt;/code&gt; 是具有属性 &lt;code&gt;address&lt;/code&gt; 和 &lt;code&gt;family&lt;/code&gt; 的对象数组来解决。</target>
        </trans-unit>
        <trans-unit id="0f3cf5f6869dcc18269bb5c37a1d11bb05d05e2a" translate="yes" xml:space="preserve">
          <source>With the &lt;code&gt;all&lt;/code&gt; option set to &lt;code&gt;true&lt;/code&gt;, the arguments for &lt;code&gt;callback&lt;/code&gt; change to &lt;code&gt;(err, addresses)&lt;/code&gt;, with &lt;code&gt;addresses&lt;/code&gt; being an array of objects with the properties &lt;code&gt;address&lt;/code&gt; and &lt;code&gt;family&lt;/code&gt;.</source>
          <target state="translated">将 &lt;code&gt;all&lt;/code&gt; 选项设置为 &lt;code&gt;true&lt;/code&gt; 时，用于 &lt;code&gt;callback&lt;/code&gt; 的参数将更改为 &lt;code&gt;(err, addresses)&lt;/code&gt; ，其中 &lt;code&gt;addresses&lt;/code&gt; 是具有属性 &lt;code&gt;address&lt;/code&gt; 和 &lt;code&gt;family&lt;/code&gt; 的对象数组。</target>
        </trans-unit>
        <trans-unit id="703ba3425a961923f35e100eb6262f175b5c075e" translate="yes" xml:space="preserve">
          <source>With the AES-GCM method, the &lt;code&gt;additionalData&lt;/code&gt; is extra input that is not encrypted but is included in the authentication of the data. The use of &lt;code&gt;additionalData&lt;/code&gt; is optional.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a48f83436ad8aa32468354573f07a9a9b6c4def3" translate="yes" xml:space="preserve">
          <source>With the exception of &lt;code&gt;MessagePort&lt;/code&gt;s being &lt;a href=&quot;events&quot;&gt;&lt;code&gt;EventEmitter&lt;/code&gt;&lt;/a&gt;s rather than &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/EventTarget&quot;&gt;&lt;code&gt;EventTarget&lt;/code&gt;&lt;/a&gt;s, this implementation matches &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/MessagePort&quot;&gt;browser &lt;code&gt;MessagePort&lt;/code&gt;&lt;/a&gt;s.</source>
          <target state="translated">除了 &lt;code&gt;MessagePort&lt;/code&gt; 是&lt;a href=&quot;events&quot;&gt; &lt;code&gt;EventEmitter&lt;/code&gt; &lt;/a&gt;而不是&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/EventTarget&quot;&gt; &lt;code&gt;EventTarget&lt;/code&gt; 之外&lt;/a&gt;，此实现与&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/MessagePort&quot;&gt;浏览器 &lt;code&gt;MessagePort&lt;/code&gt; &lt;/a&gt;匹配。</target>
        </trans-unit>
        <trans-unit id="76d4961d795a294bf706c6cd1dc296778eaba002" translate="yes" xml:space="preserve">
          <source>With the list of module exports provided upfront, the &lt;code&gt;execute&lt;/code&gt; function will then be called at the exact point of module evaluation order for that module in the import tree.</source>
          <target state="translated">通过预先提供的模块导出列表，然后将在导入树中针对该模块的模块评估顺序的确切点调用 &lt;code&gt;execute&lt;/code&gt; 函数。</target>
        </trans-unit>
        <trans-unit id="4f29e9069090db473dbd25a596b113d2b2eef46f" translate="yes" xml:space="preserve">
          <source>With the preceding loader, running &lt;code&gt;node --experimental-loader ./coffeescript-loader.mjs main.coffee&lt;/code&gt; causes &lt;code&gt;main.coffee&lt;/code&gt; to be turned into JavaScript after its source code is loaded from disk but before Node.js executes it; and so on for any &lt;code&gt;.coffee&lt;/code&gt;, &lt;code&gt;.litcoffee&lt;/code&gt; or &lt;code&gt;.coffee.md&lt;/code&gt; files referenced via &lt;code&gt;import&lt;/code&gt; statements of any loaded file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fdbfdcd5f31d2e7aba66fbb5809b057859e2ee3" translate="yes" xml:space="preserve">
          <source>With the preceding loader, running &lt;code&gt;node --experimental-loader ./https-loader.mjs ./main.mjs&lt;/code&gt; prints the current version of CoffeeScript per the module at the URL in &lt;code&gt;main.mjs&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb2445d428b93b1d9ea273fbb18e3604288f8c8a" translate="yes" xml:space="preserve">
          <source>With the support of async generators and iterators in JavaScript, async generators are effectively a first-class language-level stream construct at this point.</source>
          <target state="translated">随着JavaScript中对异步生成器和迭代器的支持,异步生成器此时实际上是一个一流的语言级流结构。</target>
        </trans-unit>
        <trans-unit id="508f1c18f9debe0dd4c0c6ff186eeb7481f33c77" translate="yes" xml:space="preserve">
          <source>With this feature enabled, the &lt;code&gt;LOAD_NODE_MODULES&lt;/code&gt; changes are:</source>
          <target state="translated">启用此功能后， &lt;code&gt;LOAD_NODE_MODULES&lt;/code&gt; 更改为：</target>
        </trans-unit>
        <trans-unit id="29898952c4414597f3478e805087121bf125e40d" translate="yes" xml:space="preserve">
          <source>With this loader, running:</source>
          <target state="translated">有了这个装载机,运行。</target>
        </trans-unit>
        <trans-unit id="87544397313c61419dbce81557d29cbe03ec9f78" translate="yes" xml:space="preserve">
          <source>Within a &lt;code&gt;&quot;type&quot;: &quot;commonjs&quot;&lt;/code&gt; package scope, Node.js can be instructed to interpret a particular file as an ES module by naming it with an &lt;code&gt;.mjs&lt;/code&gt; extension (since both &lt;code&gt;.js&lt;/code&gt; and &lt;code&gt;.cjs&lt;/code&gt; files are treated as CommonJS within a &lt;code&gt;&quot;commonjs&quot;&lt;/code&gt; package scope).</source>
          <target state="translated">在 &lt;code&gt;&quot;type&quot;: &quot;commonjs&quot;&lt;/code&gt; 包范围内，可以指示Node.js通过使用 &lt;code&gt;.mjs&lt;/code&gt; 扩展名将特定文件解释为ES模块（因为 &lt;code&gt;.js&lt;/code&gt; 和 &lt;code&gt;.cjs&lt;/code&gt; 文件在 &lt;code&gt;&quot;commonjs&quot;&lt;/code&gt; 包范围）。</target>
        </trans-unit>
        <trans-unit id="86fcf66426ef1262636ff5dc61cde3531c37f2a3" translate="yes" xml:space="preserve">
          <source>Within a &lt;code&gt;&quot;type&quot;: &quot;commonjs&quot;&lt;/code&gt; package, Node.js can be instructed to interpret a particular file as an &lt;a href=&quot;esm&quot;&gt;ES module&lt;/a&gt; by naming it with an &lt;code&gt;.mjs&lt;/code&gt; extension (since both &lt;code&gt;.js&lt;/code&gt; and &lt;code&gt;.cjs&lt;/code&gt; files are treated as CommonJS within a &lt;code&gt;&quot;commonjs&quot;&lt;/code&gt; package).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0a800b8b27571600ff937bb46cc2b5dfa84cd7b" translate="yes" xml:space="preserve">
          <source>Within a &lt;code&gt;&quot;type&quot;: &quot;module&quot;&lt;/code&gt; package scope, Node.js can be instructed to interpret a particular file as CommonJS by naming it with a &lt;code&gt;.cjs&lt;/code&gt; extension (since both &lt;code&gt;.js&lt;/code&gt; and &lt;code&gt;.mjs&lt;/code&gt; files are treated as ES modules within a &lt;code&gt;&quot;module&quot;&lt;/code&gt; package scope).</source>
          <target state="translated">在 &lt;code&gt;&quot;type&quot;: &quot;module&quot;&lt;/code&gt; 包范围内，可以通过将 &lt;code&gt;.cjs&lt;/code&gt; 命名为.cjs扩展名来指示Node.js将特定文件解释为CommonJS （因为 &lt;code&gt;.js&lt;/code&gt; 和 &lt;code&gt;.mjs&lt;/code&gt; 文件都被视为 &lt;code&gt;&quot;module&quot;&lt;/code&gt; 包装范围）。</target>
        </trans-unit>
        <trans-unit id="5fce17e1fc1d46764d50b59b00210d76e2ffc540" translate="yes" xml:space="preserve">
          <source>Within a &lt;code&gt;&quot;type&quot;: &quot;module&quot;&lt;/code&gt; package, Node.js can be instructed to interpret a particular file as &lt;a href=&quot;modules&quot;&gt;CommonJS&lt;/a&gt; by naming it with a &lt;code&gt;.cjs&lt;/code&gt; extension (since both &lt;code&gt;.js&lt;/code&gt; and &lt;code&gt;.mjs&lt;/code&gt; files are treated as ES modules within a &lt;code&gt;&quot;module&quot;&lt;/code&gt; package).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="062724fc947c8849d3387e1819eee1c552839ad6" translate="yes" xml:space="preserve">
          <source>Within a package, the &lt;a href=&quot;#packages_node_js_package_json_field_definitions&quot;&gt;&lt;code&gt;package.json&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;#packages_type&quot;&gt;&lt;code&gt;&quot;type&quot;&lt;/code&gt;&lt;/a&gt; field defines how Node.js should interpret &lt;code&gt;.js&lt;/code&gt; files. If a &lt;code&gt;package.json&lt;/code&gt; file does not have a &lt;code&gt;&quot;type&quot;&lt;/code&gt; field, &lt;code&gt;.js&lt;/code&gt; files are treated as &lt;a href=&quot;modules&quot;&gt;CommonJS&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f6099de0275d7cce12f45f0778f6466923edf3e" translate="yes" xml:space="preserve">
          <source>Within a package, the values defined in the package&amp;rsquo;s &lt;code&gt;package.json&lt;/code&gt;&lt;a href=&quot;#packages_exports&quot;&gt;&lt;code&gt;&quot;exports&quot;&lt;/code&gt;&lt;/a&gt; field can be referenced via the package&amp;rsquo;s name. For example, assuming the &lt;code&gt;package.json&lt;/code&gt; is:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="370820eaa9e0490009215285dc97963f9f462fd5" translate="yes" xml:space="preserve">
          <source>Within a worker, &lt;code&gt;process.on('error')&lt;/code&gt; may also be used.</source>
          <target state="translated">在工作程序内，也可以使用 &lt;code&gt;process.on('error')&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="af77b260f549d5f7dd63b4b42c896073162aa0b8" translate="yes" xml:space="preserve">
          <source>Within a worker, &lt;code&gt;process.on('message')&lt;/code&gt; may also be used.</source>
          <target state="translated">在工作人员中，也可以使用 &lt;code&gt;process.on('message')&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="42076897c7679f498ccc170d8884642d916c015c" translate="yes" xml:space="preserve">
          <source>Within the &lt;a href=&quot;#packages_exports&quot;&gt;&lt;code&gt;&quot;exports&quot;&lt;/code&gt;&lt;/a&gt; object, key order is significant. During condition matching, earlier entries have higher priority and take precedence over later entries. &lt;em&gt;The general rule is that conditions should be from most specific to least specific in object order&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a03122d92eae16b3e9c16945ae88dceb7d7fdcb5" translate="yes" xml:space="preserve">
          <source>Within the &lt;a href=&quot;child_process&quot;&gt;&lt;code&gt;child_process&lt;/code&gt;&lt;/a&gt; module's &lt;code&gt;spawn()&lt;/code&gt;, &lt;code&gt;fork()&lt;/code&gt;, and &lt;code&gt;exec()&lt;/code&gt; methods, the &lt;code&gt;options.customFds&lt;/code&gt; option is deprecated. The &lt;code&gt;options.stdio&lt;/code&gt; option should be used instead.</source>
          <target state="translated">在&lt;a href=&quot;child_process&quot;&gt; &lt;code&gt;child_process&lt;/code&gt; &lt;/a&gt;模块的 &lt;code&gt;spawn()&lt;/code&gt; ， &lt;code&gt;fork()&lt;/code&gt; 和 &lt;code&gt;exec()&lt;/code&gt; 方法中，不建议使用 &lt;code&gt;options.customFds&lt;/code&gt; 选项。该 &lt;code&gt;options.stdio&lt;/code&gt; 选项应改为使用。</target>
        </trans-unit>
        <trans-unit id="ed4df86a1d1c449942f5123d02a997d7de257959" translate="yes" xml:space="preserve">
          <source>Within the &lt;code&gt;transform._flush()&lt;/code&gt; implementation, the &lt;code&gt;readable.push()&lt;/code&gt; method may be called zero or more times, as appropriate. The &lt;code&gt;callback&lt;/code&gt; function must be called when the flush operation is complete.</source>
          <target state="translated">在 &lt;code&gt;transform._flush()&lt;/code&gt; 实现中， &lt;code&gt;readable.push()&lt;/code&gt; 酌情将read.push（）方法调用零次或多次。该 &lt;code&gt;callback&lt;/code&gt; 当冲洗操作完成函数必须被调用。</target>
        </trans-unit>
        <trans-unit id="1a24fe6d490179934070f782bf83dd8c88d7f94f" translate="yes" xml:space="preserve">
          <source>Within the &lt;code&gt;transform._flush()&lt;/code&gt; implementation, the &lt;code&gt;transform.push()&lt;/code&gt; method may be called zero or more times, as appropriate. The &lt;code&gt;callback&lt;/code&gt; function must be called when the flush operation is complete.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="125b6852cc79b26c024fce31be89c0bb22eff517" translate="yes" xml:space="preserve">
          <source>Within the Legacy API, spaces (&lt;code&gt;' '&lt;/code&gt;) and the following characters will be automatically escaped in the properties of URL objects:</source>
          <target state="translated">在旧版API中，空格（ &lt;code&gt;' '&lt;/code&gt; ）和以下字符将在URL对象的属性中自动转义：</target>
        </trans-unit>
        <trans-unit id="7b09082c8ee521e51bd17ca2ba19995f402a66a3" translate="yes" xml:space="preserve">
          <source>Within the Node.js implementation of the QUIC protocol, there are three main components: the &lt;code&gt;QuicSocket&lt;/code&gt;, the &lt;code&gt;QuicSession&lt;/code&gt; and the &lt;code&gt;QuicStream&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71de115ea7eca96ddac83fb457ce40a81d7b326d" translate="yes" xml:space="preserve">
          <source>Without &lt;code&gt;--pending-deprecation&lt;/code&gt;, runtime warnings occur only for code not in &lt;code&gt;node_modules&lt;/code&gt;. This means there will not be deprecation warnings for &lt;code&gt;Buffer()&lt;/code&gt; usage in dependencies. With &lt;code&gt;--pending-deprecation&lt;/code&gt;, a runtime warning results no matter where the &lt;code&gt;Buffer()&lt;/code&gt; usage occurs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e417b3147471af07c80250cfd0767ce3deae13e0" translate="yes" xml:space="preserve">
          <source>Without &lt;code&gt;--pending-deprecation&lt;/code&gt;, runtime warnings occur only for exports resolutions not in &lt;code&gt;node_modules&lt;/code&gt;. This means there will not be deprecation warnings for &lt;code&gt;&quot;exports&quot;&lt;/code&gt; in dependencies. With &lt;code&gt;--pending-deprecation&lt;/code&gt;, a runtime warning results no matter where the &lt;code&gt;&quot;exports&quot;&lt;/code&gt; usage occurs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56d3f411141d52d4b02e0929571f8e99c9a817d7" translate="yes" xml:space="preserve">
          <source>Without a leading &lt;code&gt;'/'&lt;/code&gt;, &lt;code&gt;'./'&lt;/code&gt;, or &lt;code&gt;'../'&lt;/code&gt; to indicate a file, the module must either be a core module or is loaded from a &lt;code&gt;node_modules&lt;/code&gt; folder.</source>
          <target state="translated">没有前导 &lt;code&gt;'/'&lt;/code&gt; ， &lt;code&gt;'./'&lt;/code&gt; ，或 &lt;code&gt;'../'&lt;/code&gt; ，以指示一个文件，该模块必须是一个核心模块或从装载 &lt;code&gt;node_modules&lt;/code&gt; 文件夹。</target>
        </trans-unit>
        <trans-unit id="d45cd8ec24f5a8c09cf96fd3d60fd8885398b31d" translate="yes" xml:space="preserve">
          <source>Without the explicit tracking added by the &lt;code&gt;WorkerPoolTaskInfo&lt;/code&gt; objects, it would appear that the callbacks are associated with the individual &lt;code&gt;Worker&lt;/code&gt; objects. However, the creation of the &lt;code&gt;Worker&lt;/code&gt;s is not associated with the creation of the tasks and does not provide information about when tasks were scheduled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44568e9f26e0e47d85f67c8ff6f6f8246df7f35a" translate="yes" xml:space="preserve">
          <source>Word left</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ee82f2915df23849a7b17d370c84b9ac570711a" translate="yes" xml:space="preserve">
          <source>Word right</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="026e539e2c03caa3047c3a5a6e112c6b00aad95f" translate="yes" xml:space="preserve">
          <source>Work as a no-op on a stream that has already been destroyed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99edd8c8e615e373739d2cdd38a8942b8a573113" translate="yes" xml:space="preserve">
          <source>Worker</source>
          <target state="translated">Worker</target>
        </trans-unit>
        <trans-unit id="bb3ad4c86040df77ac9065a618741afc7e6fe24d" translate="yes" xml:space="preserve">
          <source>Worker Threads</source>
          <target state="translated">工作线</target>
        </trans-unit>
        <trans-unit id="a8be0bede91ceb6ad718250a6be05f374208c9a0" translate="yes" xml:space="preserve">
          <source>Worker support</source>
          <target state="translated">工人支助</target>
        </trans-unit>
        <trans-unit id="7525522a792d668c0d668b5c21340ba2343b0552" translate="yes" xml:space="preserve">
          <source>Worker threads</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d1b2cb035e0f7274d760db926206b76cf58ce10" translate="yes" xml:space="preserve">
          <source>Worker threads inherit non-process-specific options by default. Refer to &lt;a href=&quot;#worker_threads_new_worker_filename_options&quot;&gt;&lt;code&gt;Worker constructor options&lt;/code&gt;&lt;/a&gt; to know how to customize worker thread options, specifically &lt;code&gt;argv&lt;/code&gt; and &lt;code&gt;execArgv&lt;/code&gt; options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7bd96c1301ecc33bdde8b9a7616014344363a30" translate="yes" xml:space="preserve">
          <source>Worker threads will now use a copy of the parent thread&amp;rsquo;s &lt;code&gt;process.env&lt;/code&gt; by default, configurable through the &lt;code&gt;env&lt;/code&gt; option of the &lt;code&gt;Worker&lt;/code&gt; constructor.</source>
          <target state="translated">现在，默认情况下，工作线程将使用父线程的 &lt;code&gt;process.env&lt;/code&gt; 的副本，该副本可通过 &lt;code&gt;Worker&lt;/code&gt; 构造函数的 &lt;code&gt;env&lt;/code&gt; 选项进行配置。</target>
        </trans-unit>
        <trans-unit id="93f0aed841cd2508c8f0a145d49b6fb5194c2db5" translate="yes" xml:space="preserve">
          <source>Workers (threads) are useful for performing CPU-intensive JavaScript operations. They do not help much with I/O-intensive work. The Node.js built-in asynchronous I/O operations are more efficient than Workers can be.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bd9d3a4fd785ea3f118b263af339d35d0d69b69" translate="yes" xml:space="preserve">
          <source>Workers (threads) are useful for performing CPU-intensive JavaScript operations. They will not help much with I/O-intensive work. Node.js&amp;rsquo;s built-in asynchronous I/O operations are more efficient than Workers can be.</source>
          <target state="translated">工作者（线程）对于执行CPU密集型JavaScript操作非常有用。他们在I / O密集型工作中无济于事。Node.js的内置异步I / O操作比Workers效率更高。</target>
        </trans-unit>
        <trans-unit id="6aaf9b869206de29e79682eff306f67eba9fb067" translate="yes" xml:space="preserve">
          <source>Workers are now included in the report.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32c156f4120dbff1b01165ba34dc20fbf7cb15d1" translate="yes" xml:space="preserve">
          <source>Workers will call &lt;code&gt;process.exit(0)&lt;/code&gt; if the &lt;code&gt;'disconnect'&lt;/code&gt; event occurs on &lt;code&gt;process&lt;/code&gt; and &lt;code&gt;.exitedAfterDisconnect&lt;/code&gt; is not &lt;code&gt;true&lt;/code&gt;. This protects against accidental disconnection.</source>
          <target state="translated">如果在 &lt;code&gt;process&lt;/code&gt; 发生 &lt;code&gt;'disconnect'&lt;/code&gt; 事件并且 &lt;code&gt;.exitedAfterDisconnect&lt;/code&gt; 不是 &lt;code&gt;true&lt;/code&gt; ,则工作人员将调用 &lt;code&gt;process.exit(0)&lt;/code&gt; 。这样可以防止意外断开连接。</target>
        </trans-unit>
        <trans-unit id="94c55bc4e2625d29f89775dbe794f74b359f2824" translate="yes" xml:space="preserve">
          <source>Working with JavaScript Functions</source>
          <target state="translated">使用JavaScript函数</target>
        </trans-unit>
        <trans-unit id="dd0d94c5173cefadd81e71498d52e9ffcecfc3a0" translate="yes" xml:space="preserve">
          <source>Working with JavaScript Properties</source>
          <target state="translated">使用JavaScript属性</target>
        </trans-unit>
        <trans-unit id="ee3e162950e57e3ffb1353d33e108696b8bc1725" translate="yes" xml:space="preserve">
          <source>Working with JavaScript Values</source>
          <target state="translated">使用JavaScript值</target>
        </trans-unit>
        <trans-unit id="304db6c8acf52e9ca4407908d6ca78a88ac2918d" translate="yes" xml:space="preserve">
          <source>Working with JavaScript Values - Abstract Operations</source>
          <target state="translated">使用JavaScript值--抽象操作</target>
        </trans-unit>
        <trans-unit id="9cdd67e5cb2e225c5c0b8b1ce9482a821dbe89a5" translate="yes" xml:space="preserve">
          <source>Working with JavaScript functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="255dcfaf721dcf1dd55894d1a1d93ee0a8e1f0cc" translate="yes" xml:space="preserve">
          <source>Working with JavaScript properties</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca5e66ec209f34b618d4d05c944a86b377ff913f" translate="yes" xml:space="preserve">
          <source>Working with JavaScript values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f0d60670f7f9025ead1a51ac2db4bab8d4c1a28" translate="yes" xml:space="preserve">
          <source>Working with JavaScript values and abstract operations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1423e2e798a017cd435a74859b4b48f6c9e1eba" translate="yes" xml:space="preserve">
          <source>Would generate the output:</source>
          <target state="translated">会产生输出。</target>
        </trans-unit>
        <trans-unit id="a60ec44f3e34e2fc665fcd9d6bf835697ce35472" translate="yes" xml:space="preserve">
          <source>Wrapping C++ objects</source>
          <target state="translated">包裹C++对象</target>
        </trans-unit>
        <trans-unit id="ae49cf3e60a72b1c1ca1223f4465337457a32e0e" translate="yes" xml:space="preserve">
          <source>Wrapping and unwrapping keys</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb06ed8f59f8e191210d4b09f30961561267829c" translate="yes" xml:space="preserve">
          <source>Wraps a function within a new function that measures the running time of the wrapped function. A &lt;code&gt;PerformanceObserver&lt;/code&gt; must be subscribed to the &lt;code&gt;'function'&lt;/code&gt; event type in order for the timing details to be accessed.</source>
          <target state="translated">在新函数中包装一个函数，该函数可以测量包装函数的运行时间。甲 &lt;code&gt;PerformanceObserver&lt;/code&gt; 必须订阅的 &lt;code&gt;'function'&lt;/code&gt; 的事件类型，以便为要被访问的定时的信息。</target>
        </trans-unit>
        <trans-unit id="ebbc2c554bd0547eeb3f522660396f7b8b5cfb4e" translate="yes" xml:space="preserve">
          <source>Wraps a native instance in a JavaScript object. The native instance can be retrieved later using &lt;code&gt;napi_unwrap()&lt;/code&gt;.</source>
          <target state="translated">将本机实例包装在JavaScript对象中。以后可以使用 &lt;code&gt;napi_unwrap()&lt;/code&gt; 检索本机实例。</target>
        </trans-unit>
        <trans-unit id="dd35487a2eb7da40332f7fc41452378d92a72445" translate="yes" xml:space="preserve">
          <source>Writable</source>
          <target state="translated">Writable</target>
        </trans-unit>
        <trans-unit id="6dd1e6b70d2eb237d05773b74a2d7185e892ad13" translate="yes" xml:space="preserve">
          <source>Writable Streams</source>
          <target state="translated">可写流</target>
        </trans-unit>
        <trans-unit id="86793abc57b7f140d05eafeb0e1a06f397559249" translate="yes" xml:space="preserve">
          <source>Writable streams</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00af705aff8c6b3697473cee8f797f564e4c1b63" translate="yes" xml:space="preserve">
          <source>Writable streams are an abstraction for a &lt;em&gt;destination&lt;/em&gt; to which data is written.</source>
          <target state="translated">可写流是数据写入&lt;em&gt;目的地&lt;/em&gt;的抽象。</target>
        </trans-unit>
        <trans-unit id="93d3d897c11d8aae9c1294da774224aade8271d4" translate="yes" xml:space="preserve">
          <source>Write &lt;code&gt;buffer&lt;/code&gt; to the file specified by &lt;code&gt;fd&lt;/code&gt;.</source>
          <target state="translated">将 &lt;code&gt;buffer&lt;/code&gt; 写入 &lt;code&gt;fd&lt;/code&gt; 指定的文件。</target>
        </trans-unit>
        <trans-unit id="cc6f50c4f7427dda3b658235f0762dbc83479459" translate="yes" xml:space="preserve">
          <source>Write &lt;code&gt;buffer&lt;/code&gt; to the file specified by &lt;code&gt;fd&lt;/code&gt;. If &lt;code&gt;buffer&lt;/code&gt; is a normal object, it must have an own &lt;code&gt;toString&lt;/code&gt; function property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cff7cc1f79a86945f495b6f1c3da210c50c3fa3" translate="yes" xml:space="preserve">
          <source>Write &lt;code&gt;buffer&lt;/code&gt; to the file.</source>
          <target state="translated">将 &lt;code&gt;buffer&lt;/code&gt; 写入文件。</target>
        </trans-unit>
        <trans-unit id="bc5b60ee4cb51da03f87e3638498bd67f716e9f2" translate="yes" xml:space="preserve">
          <source>Write &lt;code&gt;string&lt;/code&gt; to the file specified by &lt;code&gt;fd&lt;/code&gt;. If &lt;code&gt;string&lt;/code&gt; is not a string, or an object with an own &lt;code&gt;toString&lt;/code&gt; function property, then an exception is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e90d07d868ba3b83ba0216e05e8251d164962bc9" translate="yes" xml:space="preserve">
          <source>Write &lt;code&gt;string&lt;/code&gt; to the file specified by &lt;code&gt;fd&lt;/code&gt;. If &lt;code&gt;string&lt;/code&gt; is not a string, then the value will be coerced to one.</source>
          <target state="translated">将 &lt;code&gt;string&lt;/code&gt; 写入 &lt;code&gt;fd&lt;/code&gt; 指定的文件。如果 &lt;code&gt;string&lt;/code&gt; 不是字符串，则该值将强制为1。</target>
        </trans-unit>
        <trans-unit id="23d73723d6b78ad57cc38c0dfd0f3e1b71a24ff7" translate="yes" xml:space="preserve">
          <source>Write &lt;code&gt;string&lt;/code&gt; to the file. If &lt;code&gt;string&lt;/code&gt; is not a string, or an object with an own &lt;code&gt;toString&lt;/code&gt; function property, then an exception is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bea8dcde86bb9d8107b916db603faf4f0333db7" translate="yes" xml:space="preserve">
          <source>Write &lt;code&gt;string&lt;/code&gt; to the file. If &lt;code&gt;string&lt;/code&gt; is not a string, then the value will be coerced to one.</source>
          <target state="translated">将 &lt;code&gt;string&lt;/code&gt; 写入文件。如果 &lt;code&gt;string&lt;/code&gt; 不是字符串，则该值将强制为1。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
