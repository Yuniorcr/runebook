<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="electron">
    <body>
      <group id="electron">
        <trans-unit id="36bdb0c4e95eb235a9dae5ec3bc3c0e50ebb1632" translate="yes" xml:space="preserve">
          <source>External Debuggers</source>
          <target state="translated">外部调试器</target>
        </trans-unit>
        <trans-unit id="6665ae025d7bfde53cfcf2c9c281e3a277b67fe8" translate="yes" xml:space="preserve">
          <source>Extra Unpacking on Some APIs</source>
          <target state="translated">一些API的额外解包</target>
        </trans-unit>
        <trans-unit id="2cb5356088da91c919f5f4dfc2d71f36867990f6" translate="yes" xml:space="preserve">
          <source>Extra steps to run the unit test:</source>
          <target state="translated">运行单元测试的额外步骤。</target>
        </trans-unit>
        <trans-unit id="03688ba6aa340b87549088aa5739944cb6b1dc73" translate="yes" xml:space="preserve">
          <source>FAQ</source>
          <target state="translated">FAQ</target>
        </trans-unit>
        <trans-unit id="a53ac626975f27602b101ee26086bf28679223ca" translate="yes" xml:space="preserve">
          <source>Fake Stat Information of &lt;code&gt;fs.stat&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;fs.stat&lt;/code&gt; 的虚假统计信息</target>
        </trans-unit>
        <trans-unit id="97cdbdc7feff827efb082a6b6dd2727237cd49fd" translate="yes" xml:space="preserve">
          <source>False</source>
          <target state="translated">False</target>
        </trans-unit>
        <trans-unit id="0e9430a5c15a25c2e0bc6a804e7395a0d585931b" translate="yes" xml:space="preserve">
          <source>Faroese</source>
          <target state="translated">Faroese</target>
        </trans-unit>
        <trans-unit id="ed3bdadf84df50841fa3f667344949be09290c26" translate="yes" xml:space="preserve">
          <source>Fatal internal compiler error: C1001</source>
          <target state="translated">致命的内部编译器错误。C1001</target>
        </trans-unit>
        <trans-unit id="4f5a54627dea26b6876632913ba4f8191aad7605" translate="yes" xml:space="preserve">
          <source>Feature Flags</source>
          <target state="translated">特色旗帜</target>
        </trans-unit>
        <trans-unit id="b2e49793fe93779cb01b8dc38d230ea8124b18f9" translate="yes" xml:space="preserve">
          <source>Feature flags are a common practice in Chromium, and are well-established in the web-development ecosystem. In the context of Electron, a feature flag or &lt;strong&gt;soft branch&lt;/strong&gt; must have the following properties:</source>
          <target state="translated">功能标记是Chromium中的一种常见做法，并且在网络开发生态系统中已得到完善。在电子的上下文中，功能标志或&lt;strong&gt;软分支&lt;/strong&gt;必须具有以下属性：</target>
        </trans-unit>
        <trans-unit id="d4dcd7fef14f742aac1948cca5e3aa19a6d26619" translate="yes" xml:space="preserve">
          <source>Fedora 21</source>
          <target state="translated">Fedora 21</target>
        </trans-unit>
        <trans-unit id="00be6cb96975f9badf5bf139e5ec261f89ee66e7" translate="yes" xml:space="preserve">
          <source>Fedora 24 and newer</source>
          <target state="translated">Fedora 24及更新版本</target>
        </trans-unit>
        <trans-unit id="68ef9cadad56547c3404ff7d01f699cf1f121a09" translate="yes" xml:space="preserve">
          <source>Feel free to post a comment in the pull request to ping reviewers if you are awaiting an answer on something. If you encounter words or acronyms that seem unfamiliar, refer to this &lt;a href=&quot;https://sites.google.com/a/chromium.org/dev/glossary&quot;&gt;glossary&lt;/a&gt;.</source>
          <target state="translated">如果您正在等待有关问题的解答，请随时在ping请求中向ping评论者发布评论。如果您遇到陌生的单词或首字母缩写词，请参阅此&lt;a href=&quot;https://sites.google.com/a/chromium.org/dev/glossary&quot;&gt;词汇表&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="175df75ca866a486722893cf48cbe47ba7932e38" translate="yes" xml:space="preserve">
          <source>Fetch the git submodules:</source>
          <target state="translated">获取git子模块。</target>
        </trans-unit>
        <trans-unit id="927b92da1ee917ff26d97054707f38033a5f0818" translate="yes" xml:space="preserve">
          <source>Fetches a path's associated icon.</source>
          <target state="translated">获取一个路径的相关图标。</target>
        </trans-unit>
        <trans-unit id="2c3cafa4db3f3e1e51b3dff4303502dbe42b7a89" translate="yes" xml:space="preserve">
          <source>File</source>
          <target state="translated">File</target>
        </trans-unit>
        <trans-unit id="246b2f9db7afd4afaa3d5e709533172c78ad8d0e" translate="yes" xml:space="preserve">
          <source>File Object</source>
          <target state="translated">文件对象</target>
        </trans-unit>
        <trans-unit id="7a3acd779d548299a9f1c4a2da5a38f640685def" translate="yes" xml:space="preserve">
          <source>File names should be concatenated with &lt;code&gt;-&lt;/code&gt; instead of &lt;code&gt;_&lt;/code&gt;, e.g. &lt;code&gt;file-name.js&lt;/code&gt; rather than &lt;code&gt;file_name.js&lt;/code&gt;, because in &lt;a href=&quot;https://github.com/github/atom&quot;&gt;github/atom&lt;/a&gt; module names are usually in the &lt;code&gt;module-name&lt;/code&gt; form. This rule only applies to &lt;code&gt;.js&lt;/code&gt; files.</source>
          <target state="translated">文件名应该用 &lt;code&gt;-&lt;/code&gt; 而不是 &lt;code&gt;_&lt;/code&gt; 串联，例如 &lt;code&gt;file-name.js&lt;/code&gt; 而不是 &lt;code&gt;file_name.js&lt;/code&gt; ，因为在&lt;a href=&quot;https://github.com/github/atom&quot;&gt;github / atom中，&lt;/a&gt;模块名通常采用 &lt;code&gt;module-name&lt;/code&gt; 形式。此规则仅适用于 &lt;code&gt;.js&lt;/code&gt; 文件。</target>
        </trans-unit>
        <trans-unit id="7af55e1bfa851e12bdbfb75d7450fac19000151a" translate="yes" xml:space="preserve">
          <source>FileFilter</source>
          <target state="translated">FileFilter</target>
        </trans-unit>
        <trans-unit id="f462d97028e01e1f17e34060a7c99429b205e942" translate="yes" xml:space="preserve">
          <source>FileFilter Object</source>
          <target state="translated">文件过滤对象</target>
        </trans-unit>
        <trans-unit id="67118f22fa22764c32ce2b488d7a7e32e0cf860d" translate="yes" xml:space="preserve">
          <source>FilePathWithHeaders Object</source>
          <target state="translated">FilePathWithHeaders对象</target>
        </trans-unit>
        <trans-unit id="cd9a5554356141790a82e86864449b480ac00a5e" translate="yes" xml:space="preserve">
          <source>Filipino</source>
          <target state="translated">Filipino</target>
        </trans-unit>
        <trans-unit id="8ded2a18fc7b3c9588e1ef466d67ff6e34da6ebb" translate="yes" xml:space="preserve">
          <source>Filter the &lt;code&gt;remote&lt;/code&gt; module</source>
          <target state="translated">过滤 &lt;code&gt;remote&lt;/code&gt; 模块</target>
        </trans-unit>
        <trans-unit id="131e90e96326989c97e15eca9aa16fac395ba444" translate="yes" xml:space="preserve">
          <source>Finally the &lt;code&gt;index.html&lt;/code&gt; is the web page you want to show:</source>
          <target state="translated">最后， &lt;code&gt;index.html&lt;/code&gt; 是您要显示的网页：</target>
        </trans-unit>
        <trans-unit id="02b74ef965a4dcee339726db07647fc90cfb8e47" translate="yes" xml:space="preserve">
          <source>Find out filesystem location used by Chrome for storing extensions:</source>
          <target state="translated">查找 Chrome 浏览器用于存储扩展程序的文件系统位置。</target>
        </trans-unit>
        <trans-unit id="b9648adc5da1390634fe986be70082d1a7314302" translate="yes" xml:space="preserve">
          <source>Find out what version change is needed</source>
          <target state="translated">找出需要更改的版本</target>
        </trans-unit>
        <trans-unit id="fc3782633b50564c6a87d64da6f78d52af3abfb4" translate="yes" xml:space="preserve">
          <source>Find the image you wish to modify in the build cloud and make note of the &lt;strong&gt;VHD Blob Path&lt;/strong&gt; for that image, which is the value for that corresponding key.</source>
          <target state="translated">在构建云中找到要修改的映像，并记下该映像的&lt;strong&gt;VHD Blob路径&lt;/strong&gt;，即相应密钥的值。</target>
        </trans-unit>
        <trans-unit id="f97c03477f029ec97161fb3249f40975f98cb43e" translate="yes" xml:space="preserve">
          <source>Finding Support</source>
          <target state="translated">寻找支持</target>
        </trans-unit>
        <trans-unit id="57eef27b1643e8b06fcc0444b2a3519d01b2cef8" translate="yes" xml:space="preserve">
          <source>Finnish</source>
          <target state="translated">Finnish</target>
        </trans-unit>
        <trans-unit id="5e52497e1cdbc228ec84c3a498a510d9eb0a9578" translate="yes" xml:space="preserve">
          <source>Fired when a frame has done navigation.</source>
          <target state="translated">当一个框架完成导航时触发。</target>
        </trans-unit>
        <trans-unit id="51a13a5d80380bc539de3421f81e3ce28e63bd46" translate="yes" xml:space="preserve">
          <source>Fired when a load has committed. This includes navigation within the current document as well as subframe document-level loads, but does not include asynchronous resource loads.</source>
          <target state="translated">当一个加载已经提交时被触发。这包括当前文档中的导航以及子框架文档级的加载,但不包括异步资源加载。</target>
        </trans-unit>
        <trans-unit id="277b75ade0fe25c29d720450d6e66a97fb6cf510" translate="yes" xml:space="preserve">
          <source>Fired when a plugin process is crashed.</source>
          <target state="translated">当插件进程崩溃时触发。</target>
        </trans-unit>
        <trans-unit id="6a0ffe5f413971478388bb78716740c0bc854831" translate="yes" xml:space="preserve">
          <source>Fired when a redirect was received while requesting a resource.</source>
          <target state="translated">当请求资源时收到重定向时触发。</target>
        </trans-unit>
        <trans-unit id="6e3ac89d8432eea459401b7b1793621958ef5765" translate="yes" xml:space="preserve">
          <source>Fired when a result is available for &lt;a href=&quot;#webviewfindinpagetext-options&quot;&gt;&lt;code&gt;webview.findInPage&lt;/code&gt;&lt;/a&gt; request.</source>
          <target state="translated">当结果可用于&lt;a href=&quot;#webviewfindinpagetext-options&quot;&gt; &lt;code&gt;webview.findInPage&lt;/code&gt; &lt;/a&gt;请求时触发。</target>
        </trans-unit>
        <trans-unit id="52d384e722ca2265adbacfacb3b2c4c7da5b36c0" translate="yes" xml:space="preserve">
          <source>Fired when details regarding a requested resource is available. &lt;code&gt;status&lt;/code&gt; indicates socket connection to download the resource.</source>
          <target state="translated">当有关请求资源的详细信息可用时触发。 &lt;code&gt;status&lt;/code&gt; 表示要下载资源的套接字连接。</target>
        </trans-unit>
        <trans-unit id="4451d0b8ebb6b9a5a3977344345d786b96cc8075" translate="yes" xml:space="preserve">
          <source>Fired when document in the given frame is loaded.</source>
          <target state="translated">当给定帧中的文档被加载时触发。</target>
        </trans-unit>
        <trans-unit id="f63f99464becc370d140a795365e8fd6b207381a" translate="yes" xml:space="preserve">
          <source>Fired when page enters fullscreen triggered by HTML API.</source>
          <target state="translated">当页面进入全屏时由HTML API触发时触发。</target>
        </trans-unit>
        <trans-unit id="e2934ed79f57401f01947d5576b783caae267c53" translate="yes" xml:space="preserve">
          <source>Fired when page leaves fullscreen triggered by HTML API.</source>
          <target state="translated">当页面离开全屏时由HTML API触发时触发。</target>
        </trans-unit>
        <trans-unit id="0570c1500c67e1d7aebc65a98a1b7e823f516360" translate="yes" xml:space="preserve">
          <source>Fired when page receives favicon urls.</source>
          <target state="translated">当页面收到favicon urls时触发。</target>
        </trans-unit>
        <trans-unit id="117e37459607abb65dce79a7c045800ead6888db" translate="yes" xml:space="preserve">
          <source>Fired when page title is set during navigation. &lt;code&gt;explicitSet&lt;/code&gt; is false when title is synthesized from file url.</source>
          <target state="translated">在导航期间设置页面标题时触发。从文件url合成标题时， &lt;code&gt;explicitSet&lt;/code&gt; 为false。</target>
        </trans-unit>
        <trans-unit id="be44199f58d36bd4301154b23d0dcb330ea0d875" translate="yes" xml:space="preserve">
          <source>Fired when the WebContents is destroyed.</source>
          <target state="translated">当WebContents被销毁时触发。</target>
        </trans-unit>
        <trans-unit id="4c9f296f1d9e1fa51dbae125c7971829e6c0c607" translate="yes" xml:space="preserve">
          <source>Fired when the gpu process is crashed.</source>
          <target state="translated">gpu进程崩溃时触发。</target>
        </trans-unit>
        <trans-unit id="10d97ea48a6bad16b15200e1a9908e3087d0cf68" translate="yes" xml:space="preserve">
          <source>Fired when the guest page attempts to close itself.</source>
          <target state="translated">当客人页面试图关闭自己时触发。</target>
        </trans-unit>
        <trans-unit id="f369a2095107e692ef2ece44e4987543937640cc" translate="yes" xml:space="preserve">
          <source>Fired when the guest page attempts to open a new browser window.</source>
          <target state="translated">当客人页面试图打开一个新的浏览器窗口时触发。</target>
        </trans-unit>
        <trans-unit id="f24231d7fc3dfa3fde6a0c2f7d4794cda64c29f8" translate="yes" xml:space="preserve">
          <source>Fired when the guest page has sent an asynchronous message to embedder page.</source>
          <target state="translated">当访客页面向嵌入者页面发送异步消息时触发。</target>
        </trans-unit>
        <trans-unit id="ec7f3851082921c42a1028ddac2f7bc640c59467" translate="yes" xml:space="preserve">
          <source>Fired when the guest window logs a console message.</source>
          <target state="translated">当客人窗口记录一个控制台消息时触发。</target>
        </trans-unit>
        <trans-unit id="dd8723914c8724f48e88e5f7cbd957e9107f2781" translate="yes" xml:space="preserve">
          <source>Fired when the navigation is done, i.e. the spinner of the tab will stop spinning, and the &lt;code&gt;onload&lt;/code&gt; event is dispatched.</source>
          <target state="translated">导航完成时触发，即选项卡的微调器将停止旋转，并调度 &lt;code&gt;onload&lt;/code&gt; 事件。</target>
        </trans-unit>
        <trans-unit id="2129d76f2db58520ccfef9c9d47b3b2327db6bd4" translate="yes" xml:space="preserve">
          <source>Fired when the renderer process is crashed.</source>
          <target state="translated">当渲染器进程崩溃时触发。</target>
        </trans-unit>
        <trans-unit id="fc1e93fb67c9edaeda6350f0a4f6392669140d9d" translate="yes" xml:space="preserve">
          <source>First please make sure the extension is still being maintained, some extensions can not even work for recent versions of Chrome browser, and we are not able to do anything for them.</source>
          <target state="translated">首先请确认该扩展程序是否还在维护中,有些扩展程序甚至不能用于最新版本的Chrome浏览器,我们也无法为其做任何事情。</target>
        </trans-unit>
        <trans-unit id="12a0d3bebd41a47a1ebcd202cc5fd6f469240c5a" translate="yes" xml:space="preserve">
          <source>First you need to download the &lt;code&gt;chromedriver&lt;/code&gt; binary, and run it:</source>
          <target state="translated">首先，您需要下载 &lt;code&gt;chromedriver&lt;/code&gt; 二进制文件并运行它：</target>
        </trans-unit>
        <trans-unit id="c97db4162758208ef13df66721f7af8cb0c380b7" translate="yes" xml:space="preserve">
          <source>First, in order to avoid deadlocks, the callbacks passed to the main process are called asynchronously. You should not expect the main process to get the return value of the passed callbacks.</source>
          <target state="translated">首先,为了避免死锁,传递给主进程的回调是异步调用的。你不应该期望主进程获得传递的回调的返回值。</target>
        </trans-unit>
        <trans-unit id="34b7a02caa86c50def87d171ced86e2b7a6d85dc" translate="yes" xml:space="preserve">
          <source>First, install &lt;a href=&quot;https://en.wikipedia.org/wiki/Xvfb&quot;&gt;Xvfb&lt;/a&gt;. It's a virtual framebuffer, implementing the X11 display server protocol - it performs all graphical operations in memory without showing any screen output, which is exactly what we need.</source>
          <target state="translated">首先，安装&lt;a href=&quot;https://en.wikipedia.org/wiki/Xvfb&quot;&gt;Xvfb&lt;/a&gt;。这是一个虚拟帧缓冲区，实现了X11显示服务器协议-它在内存中执行所有图形操作，而不会显示任何屏幕输出，这正是我们所需要的。</target>
        </trans-unit>
        <trans-unit id="9be1e7185b5c9d3d7dabfa2ff2d7a828031f3d46" translate="yes" xml:space="preserve">
          <source>First, install a recent version of Node.js. Depending on your Linux distribution, the installation steps might differ. Assuming that you normally install software using a package manager like &lt;code&gt;apt&lt;/code&gt; or &lt;code&gt;pacman&lt;/code&gt;, use the official &lt;a href=&quot;https://nodejs.org/en/download/package-manager/&quot;&gt;Node.js guidance on installing on Linux&lt;/a&gt;.</source>
          <target state="translated">首先，安装最新版本的Node.js。根据您的Linux发行版，安装步骤可能会有所不同。假设您通常使用 &lt;code&gt;apt&lt;/code&gt; 或 &lt;code&gt;pacman&lt;/code&gt; 之类的程序包管理器来安装软件，请使用&lt;a href=&quot;https://nodejs.org/en/download/package-manager/&quot;&gt;有关在Linux上进行安装&lt;/a&gt;的官方Node.js指南。</target>
        </trans-unit>
        <trans-unit id="0af76cb4ec629443cfcf87eae3eddbd49728f097" translate="yes" xml:space="preserve">
          <source>First, install a recent version of Node.js. We recommend that you install either the latest &lt;code&gt;LTS&lt;/code&gt; or &lt;code&gt;Current&lt;/code&gt; version available. Visit &lt;a href=&quot;https://nodejs.org/en/download/&quot;&gt;the Node.js download page&lt;/a&gt; and select the &lt;code&gt;Windows Installer&lt;/code&gt;. Once downloaded, execute the installer and let the installation wizard guide you through the installation.</source>
          <target state="translated">首先，安装最新版本的Node.js。我们建议您安装最新的 &lt;code&gt;LTS&lt;/code&gt; 或 &lt;code&gt;Current&lt;/code&gt; 版本。访问&lt;a href=&quot;https://nodejs.org/en/download/&quot;&gt;Node.js下载页面，&lt;/a&gt;然后选择 &lt;code&gt;Windows Installer&lt;/code&gt; 。下载完成后，执行安装程序，然后让安装向导指导您完成安装。</target>
        </trans-unit>
        <trans-unit id="cc292aedc916ac210a076b2b0186247bdd714b0b" translate="yes" xml:space="preserve">
          <source>First, install a recent version of Node.js. We recommend that you install either the latest &lt;code&gt;LTS&lt;/code&gt; or &lt;code&gt;Current&lt;/code&gt; version available. Visit &lt;a href=&quot;https://nodejs.org/en/download/&quot;&gt;the Node.js download page&lt;/a&gt; and select the &lt;code&gt;macOS Installer&lt;/code&gt;. While Homebrew is an offered option, but we recommend against it - many tools will be incompatible with the way Homebrew installs Node.js.</source>
          <target state="translated">首先，安装最新版本的Node.js。我们建议您安装最新的 &lt;code&gt;LTS&lt;/code&gt; 或 &lt;code&gt;Current&lt;/code&gt; 版本。访问&lt;a href=&quot;https://nodejs.org/en/download/&quot;&gt;Node.js下载页面，&lt;/a&gt;然后选择 &lt;code&gt;macOS Installer&lt;/code&gt; 。虽然提供了Homebrew选项，但我们建议您反对使用它-许多工具将与Homebrew安装Node.js的方式不兼容。</target>
        </trans-unit>
        <trans-unit id="a5f20133fa49f1f0f7a79e4e6d78d4ee0da8b06b" translate="yes" xml:space="preserve">
          <source>First, let's edit our interface so users can toggle between light and dark modes. This basic UI contains buttons to change the &lt;code&gt;nativeTheme.themeSource&lt;/code&gt; setting and a text element indicating which &lt;code&gt;themeSource&lt;/code&gt; value is selected. By default, Electron follows the system's dark mode preference, so we will hardcode the theme source as &quot;System&quot;.</source>
          <target state="translated">首先，让我们编辑界面，以便用户可以在亮和暗模式之间切换。这个基本的UI包含用于更改 &lt;code&gt;nativeTheme.themeSource&lt;/code&gt; 设置的按钮和一个文本元素，该文本元素指示选择了哪个 &lt;code&gt;themeSource&lt;/code&gt; 值。默认情况下，Electron遵循系统的暗模式首选项，因此我们将主题源硬编码为&amp;ldquo;系统&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="aedf37ea270515b99497d91f9406d4da309c9ae7" translate="yes" xml:space="preserve">
          <source>First, you have to add a &lt;code&gt;ElectronTeamID&lt;/code&gt; key to your app's &lt;code&gt;Info.plist&lt;/code&gt;, which has your Team ID as its value:</source>
          <target state="translated">首先，您必须在应用程序的 &lt;code&gt;Info.plist&lt;/code&gt; 中添加一个 &lt;code&gt;ElectronTeamID&lt;/code&gt; 密钥，该密钥具有您的Team ID作为其值：</target>
        </trans-unit>
        <trans-unit id="1d7df8cadd80eb18446994d001ea3461e077d6dd" translate="yes" xml:space="preserve">
          <source>First, you have to add a &lt;code&gt;ElectronTeamID&lt;/code&gt; key to your app's &lt;code&gt;Info.plist&lt;/code&gt;, which has your Team ID as value:</source>
          <target state="translated">首先，您必须将 &lt;code&gt;ElectronTeamID&lt;/code&gt; 密钥添加到应用程序的 &lt;code&gt;Info.plist&lt;/code&gt; 中，该密钥具有您的Team ID作为值：</target>
        </trans-unit>
        <trans-unit id="ca0882e805f3e57f974f180e01085f543e2fb36d" translate="yes" xml:space="preserve">
          <source>Fix &lt;code&gt;*.patch&lt;/code&gt; files in the &lt;code&gt;patches/&lt;/code&gt; and &lt;code&gt;patches-mas/&lt;/code&gt; folders.</source>
          <target state="translated">修复 &lt;code&gt;*.patch&lt;/code&gt; 文件在 &lt;code&gt;patches/&lt;/code&gt; 和 &lt;code&gt;patches-mas/&lt;/code&gt; 文件夹中。</target>
        </trans-unit>
        <trans-unit id="3573878e20013b55583b98e25b25480b5f447544" translate="yes" xml:space="preserve">
          <source>Fix build config errors first</source>
          <target state="translated">首先修复构建配置错误</target>
        </trans-unit>
        <trans-unit id="2fd326b2a55bcce8aaf40e5b205a43586f01e477" translate="yes" xml:space="preserve">
          <source>Fix compilation and linking errors</source>
          <target state="translated">修正编译和链接错误</target>
        </trans-unit>
        <trans-unit id="be472760b1c59aabacb468181805b6d35ea1f4a6" translate="yes" xml:space="preserve">
          <source>Fix fatal errors first, like missing files and errors related to compiler flags or defines</source>
          <target state="translated">首先修复致命的错误,如丢失的文件和与编译器标志或定义有关的错误。</target>
        </trans-unit>
        <trans-unit id="d1cadd8ae95fff74283ef0e169c388a7747600a6" translate="yes" xml:space="preserve">
          <source>Fix missing binaries of a release manually</source>
          <target state="translated">手动修复丢失的版本的二进制文件</target>
        </trans-unit>
        <trans-unit id="ecdbb9113c4d8c2f61653a2c4c861cc1dc00c823" translate="yes" xml:space="preserve">
          <source>Flash Frame</source>
          <target state="translated">闪光灯框架</target>
        </trans-unit>
        <trans-unit id="bd43ec85fdff6518874fb812586a2433706d81d5" translate="yes" xml:space="preserve">
          <source>Focuses on the window.</source>
          <target state="translated">专注于窗口。</target>
        </trans-unit>
        <trans-unit id="cee144f2d216cdc7631ba053ba3f05f1965d28a6" translate="yes" xml:space="preserve">
          <source>Focuses the child window (brings the window to front).</source>
          <target state="translated">聚焦子窗口(使窗口在前面)。</target>
        </trans-unit>
        <trans-unit id="14c6a7fd821dc867b3d84617a634eef0422b84c7" translate="yes" xml:space="preserve">
          <source>Focuses the web page.</source>
          <target state="translated">聚焦网页。</target>
        </trans-unit>
        <trans-unit id="aecd03a4a4b9d532aa63bf7dc404e53645c982b7" translate="yes" xml:space="preserve">
          <source>Follow all the steps above to fix Electron code on all supported platforms.</source>
          <target state="translated">按照上面的所有步骤,在所有支持的平台上修复Electron代码。</target>
        </trans-unit>
        <trans-unit id="1c24b5bf867b6e42c0299f9cc8698367f71b90cc" translate="yes" xml:space="preserve">
          <source>Follow the guidelines below for building Electron on Linux.</source>
          <target state="translated">按照以下指南在Linux上构建Electron。</target>
        </trans-unit>
        <trans-unit id="5b7fa4ec60b9d247ca93f67ab735d3ef943d7b6a" translate="yes" xml:space="preserve">
          <source>Follow the guidelines below for building Electron on Windows.</source>
          <target state="translated">按照以下指南在Windows上建立Electron。</target>
        </trans-unit>
        <trans-unit id="fd80cb5d21b263826159e8667626fffe170c3f97" translate="yes" xml:space="preserve">
          <source>Follow the guidelines below for building Electron on macOS.</source>
          <target state="translated">按照以下指南在macOS上构建Electron。</target>
        </trans-unit>
        <trans-unit id="7918e53919f3efaa0dfa15fb15011ba6065eb834" translate="yes" xml:space="preserve">
          <source>Follow the guidelines below for building Electron with the experimental GN build.</source>
          <target state="translated">按照下面的指南,用实验性的GN构建Electron。</target>
        </trans-unit>
        <trans-unit id="193e1f0e0c4d19d51ab7ad7331c2dd3a3cb75e35" translate="yes" xml:space="preserve">
          <source>Follow the guidelines below for building Electron.</source>
          <target state="translated">按照下面的指引来建造Electron。</target>
        </trans-unit>
        <trans-unit id="921acf758984257599ba401c33220ee705e3803f" translate="yes" xml:space="preserve">
          <source>Following &lt;code&gt;gyp&lt;/code&gt; files contain the main rules for building Electron:</source>
          <target state="translated">以下 &lt;code&gt;gyp&lt;/code&gt; 文件包含构建Electron的主要规则：</target>
        </trans-unit>
        <trans-unit id="549cb66a7786a536325eec62186f803c70217c72" translate="yes" xml:space="preserve">
          <source>Following platforms are supported by Electron:</source>
          <target state="translated">Electron支持以下平台。</target>
        </trans-unit>
        <trans-unit id="c2e6ed1cc1e40ea38253fb9692c1bee87a7a9da6" translate="yes" xml:space="preserve">
          <source>Following suffixes for DPI are also supported:</source>
          <target state="translated">也支持DPI的以下后缀。</target>
        </trans-unit>
        <trans-unit id="e7fe0bf347ec209bee8e530d447ba905eaf79ce5" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;infoType&lt;/code&gt; equal to &lt;code&gt;basic&lt;/code&gt;: Promise is fulfilled with &lt;code&gt;Object&lt;/code&gt; containing fewer attributes than when requested with &lt;code&gt;complete&lt;/code&gt;. Here's an example of basic response:</source>
          <target state="translated">对于 &lt;code&gt;infoType&lt;/code&gt; 等于 &lt;code&gt;basic&lt;/code&gt; 的类型：Promise通过 &lt;code&gt;Object&lt;/code&gt; 包含的属性要少于带有 &lt;code&gt;complete&lt;/code&gt; 要求的属性。这是基本响应的示例：</target>
        </trans-unit>
        <trans-unit id="f082cd56fddf46d89a14c8f8668cb2eb08f6b251" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;infoType&lt;/code&gt; equal to &lt;code&gt;complete&lt;/code&gt;: Promise is fulfilled with &lt;code&gt;Object&lt;/code&gt; containing all the GPU Information as in &lt;a href=&quot;https://chromium.googlesource.com/chromium/src/+/4178e190e9da409b055e5dff469911ec6f6b716f/gpu/config/gpu_info.cc&quot;&gt;chromium's GPUInfo object&lt;/a&gt;. This includes the version and driver information that's shown on &lt;code&gt;chrome://gpu&lt;/code&gt; page.</source>
          <target state="translated">对于 &lt;code&gt;infoType&lt;/code&gt; 等于 &lt;code&gt;complete&lt;/code&gt; 的承诺：通过包含所有GPU信息的 &lt;code&gt;Object&lt;/code&gt; 来实现承诺，就像在&lt;a href=&quot;https://chromium.googlesource.com/chromium/src/+/4178e190e9da409b055e5dff469911ec6f6b716f/gpu/config/gpu_info.cc&quot;&gt;铬的GPUInfo object中一样&lt;/a&gt;。其中包括 &lt;code&gt;chrome://gpu&lt;/code&gt; 页面上显示的版本和驱动程序信息。</target>
        </trans-unit>
        <trans-unit id="9b1856927689f0b70cf48435344dc811e1f0d867" translate="yes" xml:space="preserve">
          <source>For API references, there are exceptions to this rule.</source>
          <target state="translated">对于API引用,这个规则也有例外。</target>
        </trans-unit>
        <trans-unit id="7ed62a7bbd3406e1648a659173663fd21604ab49" translate="yes" xml:space="preserve">
          <source>For C++ and Python, we follow Chromium's &lt;a href=&quot;https://www.chromium.org/developers/coding-style&quot;&gt;Coding Style&lt;/a&gt;. You can use &lt;a href=&quot;clang-format&quot;&gt;clang-format&lt;/a&gt; to format the C++ code automatically. There is also a script &lt;code&gt;script/cpplint.py&lt;/code&gt; to check whether all files conform.</source>
          <target state="translated">对于C ++和Python，我们遵循Chromium的&lt;a href=&quot;https://www.chromium.org/developers/coding-style&quot;&gt;编码风格&lt;/a&gt;。您可以使用&lt;a href=&quot;clang-format&quot;&gt;clang-format&lt;/a&gt;自动格式化C ++代码。还有一个脚本 &lt;code&gt;script/cpplint.py&lt;/code&gt; 来检查是否所有文件都符合。</target>
        </trans-unit>
        <trans-unit id="e74b0c2c245b6a943ac4d87389b49f44dcd696ee" translate="yes" xml:space="preserve">
          <source>For C++ and Python, we follow Chromium's &lt;a href=&quot;https://www.chromium.org/developers/coding-style&quot;&gt;Coding Style&lt;/a&gt;. You can use &lt;a href=&quot;development/clang-format&quot;&gt;clang-format&lt;/a&gt; to format the C++ code automatically. There is also a script &lt;code&gt;script/cpplint.py&lt;/code&gt; to check whether all files conform.</source>
          <target state="translated">对于C ++和Python，我们遵循Chromium的&lt;a href=&quot;https://www.chromium.org/developers/coding-style&quot;&gt;编码风格&lt;/a&gt;。您可以使用&lt;a href=&quot;development/clang-format&quot;&gt;clang-format&lt;/a&gt;自动格式化C ++代码。还有一个脚本 &lt;code&gt;script/cpplint.py&lt;/code&gt; 来检查是否所有文件都符合。</target>
        </trans-unit>
        <trans-unit id="524956d4e49580fce3e083c2e746c9cc4ddc290a" translate="yes" xml:space="preserve">
          <source>For Electron 9 and higher the spellchecker is enabled by default. For Electron 8 you need to enable it in &lt;code&gt;webPreferences&lt;/code&gt;.</source>
          <target state="translated">对于Electron 9及更高版本，默认情况下启用拼写检查器。对于Electron 8，您需要在 &lt;code&gt;webPreferences&lt;/code&gt; 中启用它。</target>
        </trans-unit>
        <trans-unit id="1111e6b08b7a2e0ce97ca11efe04cef41bea428e" translate="yes" xml:space="preserve">
          <source>For Jenkins, a &lt;a href=&quot;https://wiki.jenkins-ci.org/display/JENKINS/Xvfb+Plugin&quot;&gt;Xvfb plugin is available&lt;/a&gt;.</source>
          <target state="translated">对于Jenkins，可以使用&lt;a href=&quot;https://wiki.jenkins-ci.org/display/JENKINS/Xvfb+Plugin&quot;&gt;Xvfb插件&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2e234ecf902399c6ca2e2168815587789055c246" translate="yes" xml:space="preserve">
          <source>For POST requests the &lt;code&gt;uploadData&lt;/code&gt; object must be provided.</source>
          <target state="translated">对于POST请求，必须提供 &lt;code&gt;uploadData&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="b5c7c488de68864ac20ca5e39bc85e54c5c53cbe" translate="yes" xml:space="preserve">
          <source>For Windows and Linux there are a few Electron APIs you should use to set the languages for the spellchecker.</source>
          <target state="translated">对于Windows和Linux,你应该使用一些Electron API来设置拼写检查器的语言。</target>
        </trans-unit>
        <trans-unit id="2e94ed3bd242175238f65cecbea47db530efc30e" translate="yes" xml:space="preserve">
          <source>For a &lt;code&gt;minor&lt;/code&gt; release, e.g. &lt;code&gt;1.8.0&lt;/code&gt;, use this format:</source>
          <target state="translated">对于 &lt;code&gt;minor&lt;/code&gt; 版本（例如 &lt;code&gt;1.8.0&lt;/code&gt; )，请使用以下格式：</target>
        </trans-unit>
        <trans-unit id="c3aef3c0a78c4ebdda5b31c717e34be096a56311" translate="yes" xml:space="preserve">
          <source>For a &lt;code&gt;patch&lt;/code&gt; release, use the following format:</source>
          <target state="translated">对于 &lt;code&gt;patch&lt;/code&gt; 发行版，请使用以下格式：</target>
        </trans-unit>
        <trans-unit id="fc84c5b30853e927ab61c178eca9058bf3442a18" translate="yes" xml:space="preserve">
          <source>For a complex app, the &lt;code&gt;ready-to-show&lt;/code&gt; event could be emitted too late, making the app feel slow. In this case, it is recommended to show the window immediately, and use a &lt;code&gt;backgroundColor&lt;/code&gt; close to your app's background:</source>
          <target state="translated">对于复杂的应用程序， &lt;code&gt;ready-to-show&lt;/code&gt; 事件可能会发布得太晚，从而使应用程序感觉很慢。在这种情况下，建议立即显示窗口，并使用 &lt;code&gt;backgroundColor&lt;/code&gt; 接近你的应用程序的背景：</target>
        </trans-unit>
        <trans-unit id="22fe9873a98adb59030dea1269d80e54827cd0a8" translate="yes" xml:space="preserve">
          <source>For a list of boilerplates and tools to kick-start your development process, see the &lt;a href=&quot;boilerplates-and-clis&quot;&gt;Boilerplates and CLIs documentation&lt;/a&gt;.</source>
          <target state="translated">有关启动开发过程的样板和工具的列表，请参阅&lt;a href=&quot;boilerplates-and-clis&quot;&gt;样板和CLI文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b4fdf20b52a54c5c410ee30c1b5961d4d623dae0" translate="yes" xml:space="preserve">
          <source>For a subset of Electron functionality it makes sense to disable certain features for an entire application. For example, 99% of apps don't make use of &lt;code&gt;ELECTRON_RUN_AS_NODE&lt;/code&gt;, these applications want to be able to ship a binary that is incapable of using that feature. We also don't want Electron consumers building Electron from source as that is both a massive technical challenge and has a high cost of both time and money.</source>
          <target state="translated">对于电子功能的子集，有必要为整个应用程序禁用某些功能。例如，99％的应用程序不使用 &lt;code&gt;ELECTRON_RUN_AS_NODE&lt;/code&gt; ，这些应用程序希望能够发布无法使用该功能的二进制文件。我们也不希望电子消费者从源头构建电子，因为这既是一项巨大的技术挑战，又会花费大量时间和金钱。</target>
        </trans-unit>
        <trans-unit id="956902aa84cfb91f426f18cd11e77e87658eab1e" translate="yes" xml:space="preserve">
          <source>For all other headers, the values are joined together with ', '.</source>
          <target state="translated">对于所有其他的标题,其值都用'、'连接起来。</target>
        </trans-unit>
        <trans-unit id="d588bcee88995a0c7fae3327f86fa8df139ed0a0" translate="yes" xml:space="preserve">
          <source>For an introduction to ProcMon's basic and advanced debugging features, go check out &lt;a href=&quot;https://channel9.msdn.com/shows/defrag-tools/defrag-tools-4-process-monitor&quot;&gt;this video tutorial&lt;/a&gt; provided by Microsoft.</source>
          <target state="translated">有关ProcMon的基本和高级调试功能的介绍，请查看Microsoft提供的&lt;a href=&quot;https://channel9.msdn.com/shows/defrag-tools/defrag-tools-4-process-monitor&quot;&gt;此视频教程&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="20758183c3e1338dc8a6b93162460ce862ff75d3" translate="yes" xml:space="preserve">
          <source>For any issue, there are fundamentally three ways an individual can contribute:</source>
          <target state="translated">对于任何问题,个人基本有三种贡献方式。</target>
        </trans-unit>
        <trans-unit id="c36476d109a6eac638160d47ed71c4848f206bb8" translate="yes" xml:space="preserve">
          <source>For certain events the &lt;code&gt;listener&lt;/code&gt; is passed with a &lt;code&gt;callback&lt;/code&gt;, which should be called with a &lt;code&gt;response&lt;/code&gt; object when &lt;code&gt;listener&lt;/code&gt; has done its work.</source>
          <target state="translated">对于某些事件， &lt;code&gt;listener&lt;/code&gt; 器通过 &lt;code&gt;callback&lt;/code&gt; 传递，当 &lt;code&gt;listener&lt;/code&gt; 器完成工作时，应使用 &lt;code&gt;response&lt;/code&gt; 对象调用该回调。</target>
        </trans-unit>
        <trans-unit id="502cf085450be5d6d8a56eda1a567fd820d5644e" translate="yes" xml:space="preserve">
          <source>For certain features (e.g. pinch-zoom) to work properly, you must target the macOS 10.10 SDK.</source>
          <target state="translated">为了使某些功能(如:捏合缩放)正常工作,你必须以 macOS 10.10 SDK 为目标。</target>
        </trans-unit>
        <trans-unit id="f55316ce3b72dc39959ab1636a82f40fea730083" translate="yes" xml:space="preserve">
          <source>For convenience, you may want to wrap &lt;code&gt;appProcess&lt;/code&gt; in a driver object that provides more high-level functions. Here is an example of how you can do this:</source>
          <target state="translated">为了方便起见，您可能希望将 &lt;code&gt;appProcess&lt;/code&gt; 包装在提供更多高级功能的驱动程序对象中。以下是如何执行此操作的示例：</target>
        </trans-unit>
        <trans-unit id="c20150042740cb3bd17b581a9f4141df5974afae" translate="yes" xml:space="preserve">
          <source>For details, see &lt;a href=&quot;https://github.com/electron/electron/pull/6986&quot;&gt;6986&lt;/a&gt; and &lt;a href=&quot;https://github.com/electron/electron/pull/7189&quot;&gt;7189&lt;/a&gt;.</source>
          <target state="translated">有关详细信息，请参见&lt;a href=&quot;https://github.com/electron/electron/pull/6986&quot;&gt;6986&lt;/a&gt;和&lt;a href=&quot;https://github.com/electron/electron/pull/7189&quot;&gt;7189&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7f4255927b82eac232a3604f861da1b4f744c0e1" translate="yes" xml:space="preserve">
          <source>For duplicate &lt;code&gt;cookie&lt;/code&gt; headers, the values are joined together with '; '.</source>
          <target state="translated">对于重复的 &lt;code&gt;cookie&lt;/code&gt; 标头，这些值以'; '。</target>
        </trans-unit>
        <trans-unit id="6265093784bd7dbf5e19bb812e72dae142bf8944" translate="yes" xml:space="preserve">
          <source>For each major and minor bump, you should expect to see something like the following:</source>
          <target state="translated">对于每一次大的和小的颠簸,你应该期望看到类似以下的东西。</target>
        </trans-unit>
        <trans-unit id="58abffa9ea34b3901414814791108b8b1b94cc23" translate="yes" xml:space="preserve">
          <source>For each patch, do:</source>
          <target state="translated">对于每个补丁,做。</target>
        </trans-unit>
        <trans-unit id="83edd08299e575573bc5493f6bc769dea6d6a6c1" translate="yes" xml:space="preserve">
          <source>For each patch:</source>
          <target state="translated">对于每个补丁。</target>
        </trans-unit>
        <trans-unit id="7e1e492e1ff102dacf9ee3206f3207099b0d6167" translate="yes" xml:space="preserve">
          <source>For example building with GCC toolchain:</source>
          <target state="translated">例如用GCC工具链构建。</target>
        </trans-unit>
        <trans-unit id="065f28411e5112140feb1dde5f9794fa00a0584d" translate="yes" xml:space="preserve">
          <source>For example if &lt;code&gt;icon.png&lt;/code&gt; is a normal image that has standard resolution, then &lt;code&gt;icon@2x.png&lt;/code&gt; will be treated as a high resolution image that has double DPI density.</source>
          <target state="translated">例如，如果 &lt;code&gt;icon.png&lt;/code&gt; 是具有标准分辨率的普通图像，则 &lt;code&gt;icon@2x.png&lt;/code&gt; 将被视为具有双DPI密度的高分辨率图像。</target>
        </trans-unit>
        <trans-unit id="7c473301f00f572dccbc6dcc4c5399d4e0ed0ace" translate="yes" xml:space="preserve">
          <source>For example if you installed &lt;code&gt;clang&lt;/code&gt; under &lt;code&gt;/user/local/bin/clang&lt;/code&gt;:</source>
          <target state="translated">例如，如果你安装 &lt;code&gt;clang&lt;/code&gt; 下 &lt;code&gt;/user/local/bin/clang&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="26f86631003d6d3b4b82afd422075d9ac2b69188" translate="yes" xml:space="preserve">
          <source>For example if you installed &lt;code&gt;clang&lt;/code&gt; under &lt;code&gt;/usr/local/bin/clang&lt;/code&gt;:</source>
          <target state="translated">例如，如果你安装 &lt;code&gt;clang&lt;/code&gt; 下 &lt;code&gt;/usr/local/bin/clang&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="ba48d1140902ffdcb02cd8e0d7757e695bd35f62" translate="yes" xml:space="preserve">
          <source>For example when you load following page with custom protocol without registering it as standard scheme, the image will not be loaded because non-standard schemes can not recognize relative URLs:</source>
          <target state="translated">例如,当您使用自定义协议加载以下页面时,如果没有将其注册为标准方案,图片将无法加载,因为非标准方案无法识别相对的URL。</target>
        </trans-unit>
        <trans-unit id="493ec61d1e04b47a4387b0ca5addeea25d2a2575" translate="yes" xml:space="preserve">
          <source>For example, Windows Media Player might offer standard media transport controls such as play, pause, mute, and stop.</source>
          <target state="translated">例如,Windows Media Player可能提供标准的媒体传输控制,如播放、暂停、静音和停止。</target>
        </trans-unit>
        <trans-unit id="3494f8de5fe0b0ecf247fa44514610b6a4b5dc01" translate="yes" xml:space="preserve">
          <source>For example, an API calling A requests for &lt;code&gt;prevent-app-suspension&lt;/code&gt;, and another calling B requests for &lt;code&gt;prevent-display-sleep&lt;/code&gt;. &lt;code&gt;prevent-display-sleep&lt;/code&gt; will be used until B stops its request. After that, &lt;code&gt;prevent-app-suspension&lt;/code&gt; is used.</source>
          <target state="translated">例如，一个API调用A要求 &lt;code&gt;prevent-app-suspension&lt;/code&gt; ，而另一个调用B则要求 &lt;code&gt;prevent-display-sleep&lt;/code&gt; 。在B停止其请求之前，将使用 &lt;code&gt;prevent-display-sleep&lt;/code&gt; 。之后，将使用 &lt;code&gt;prevent-app-suspension&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="03ca657be2d43086ea0314b5c15e030ff5c58672" translate="yes" xml:space="preserve">
          <source>For example, if &lt;code&gt;icon.png&lt;/code&gt; is a normal image that has standard resolution, then &lt;code&gt;icon@2x.png&lt;/code&gt; will be treated as a high resolution image that has double DPI density.</source>
          <target state="translated">例如，如果 &lt;code&gt;icon.png&lt;/code&gt; 是具有标准分辨率的普通图像，则 &lt;code&gt;icon@2x.png&lt;/code&gt; 将被视为具有双DPI密度的高分辨率图像。</target>
        </trans-unit>
        <trans-unit id="9c1f50d21d4007f1d24f2deda38646ce1693771a" translate="yes" xml:space="preserve">
          <source>For example, suppose we have an &lt;code&gt;example.asar&lt;/code&gt; archive under &lt;code&gt;/path/to&lt;/code&gt;:</source>
          <target state="translated">例如，假设我们在 &lt;code&gt;/path/to&lt;/code&gt; 下有一个 &lt;code&gt;example.asar&lt;/code&gt; 档案：</target>
        </trans-unit>
        <trans-unit id="e6543b5df66545d392593abae27aaf4d3618aaa2" translate="yes" xml:space="preserve">
          <source>For example, the following code seems innocent at first glance. It installs a callback for the &lt;code&gt;close&lt;/code&gt; event on a remote object:</source>
          <target state="translated">例如，以下代码乍一看似乎是无辜的。它在远程对象上为 &lt;code&gt;close&lt;/code&gt; 事件安装一个回调：</target>
        </trans-unit>
        <trans-unit id="5987f05877c28042562f9f718a4a4c8e2dec92e0" translate="yes" xml:space="preserve">
          <source>For example, the methods of the &lt;code&gt;Session&lt;/code&gt; class under the &lt;code&gt;session&lt;/code&gt; module must use &lt;code&gt;ses&lt;/code&gt; as the &lt;code&gt;objectName&lt;/code&gt;.</source>
          <target state="translated">例如， &lt;code&gt;session&lt;/code&gt; 模块下的 &lt;code&gt;Session&lt;/code&gt; 类的方法必须使用 &lt;code&gt;ses&lt;/code&gt; 作为 &lt;code&gt;objectName&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0265d0e5b1761ccffe2ee6e585cbe994b9a3ccbf" translate="yes" xml:space="preserve">
          <source>For example, to access the Electron API in both processes, require its included module:</source>
          <target state="translated">例如,如果要在这两个过程中访问Electron API,就需要它的模块。</target>
        </trans-unit>
        <trans-unit id="b2c330e45eb22f06fc0ae8f33da09f6bd6a525e6" translate="yes" xml:space="preserve">
          <source>For example, to get a file with &lt;code&gt;$.get&lt;/code&gt;:</source>
          <target state="translated">例如，使用 &lt;code&gt;$.get&lt;/code&gt; 获取文件：</target>
        </trans-unit>
        <trans-unit id="6df8cab4c31908f53df67f6b5d786e9e38d009d7" translate="yes" xml:space="preserve">
          <source>For example, to install &lt;code&gt;electron-rebuild&lt;/code&gt; and then rebuild modules with it via the command line:</source>
          <target state="translated">例如，要安装 &lt;code&gt;electron-rebuild&lt;/code&gt; ，然后通过命令行使用它重建模块：</target>
        </trans-unit>
        <trans-unit id="b14eac0e28ae773f75d54ad13525d27764aac116" translate="yes" xml:space="preserve">
          <source>For example, to install all dependencies for Electron:</source>
          <target state="translated">例如,安装Electron的所有依赖关系。</target>
        </trans-unit>
        <trans-unit id="49a277e10dfd7299cf73cfb6c1f4de56cad0bbf3" translate="yes" xml:space="preserve">
          <source>For example, when creating a tray or setting a window's icon, you can pass an image file path as a &lt;code&gt;String&lt;/code&gt;:</source>
          <target state="translated">例如，当创建托盘或设置窗口的图标时，可以将图像文件路径作为 &lt;code&gt;String&lt;/code&gt; 传递：</target>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">例如:</target>
        </trans-unit>
        <trans-unit id="dc165346dfd2f10c3f19f087c010877da49b91ef" translate="yes" xml:space="preserve">
          <source>For information on how to properly disclose an Electron vulnerability, see &lt;a href=&quot;https://github.com/electron/electron/tree/master/SECURITY.md&quot;&gt;SECURITY.md&lt;/a&gt;</source>
          <target state="translated">有关如何正确披露电子漏洞的信息，请参阅&lt;a href=&quot;https://github.com/electron/electron/tree/master/SECURITY.md&quot;&gt;SECURITY.md&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="26000534d32ef52933841a528d4d8361afeb23a6" translate="yes" xml:space="preserve">
          <source>For instance you can't use a function from the renderer process in an &lt;code&gt;Array.map&lt;/code&gt; called in the main process:</source>
          <target state="translated">例如，您不能在主进程中调用的 &lt;code&gt;Array.map&lt;/code&gt; 中使用渲染器进程中的函数：</target>
        </trans-unit>
        <trans-unit id="21d1e0d87b298c57a74a76988b09ab848fb4f7af" translate="yes" xml:space="preserve">
          <source>For instance, Electron uses Chromium's rendering library rather than all of Chromium. This makes it easier to upgrade Chromium but also means some browser features found in Google Chrome do not exist in Electron.</source>
          <target state="translated">例如,Electron使用的是Chromium的渲染库,而不是Chromium的全部。这使得升级Chromium更容易,但也意味着一些在Google Chrome浏览器中发现的浏览器功能在Electron中不存在。</target>
        </trans-unit>
        <trans-unit id="85f3a1e5e439ec3b7f4fca1ecd7c8de55b68620e" translate="yes" xml:space="preserve">
          <source>For instance, the following example quickly shows how the &lt;code&gt;net&lt;/code&gt; API might be used:</source>
          <target state="translated">例如，以下示例快速显示了如何使用 &lt;code&gt;net&lt;/code&gt; API：</target>
        </trans-unit>
        <trans-unit id="aa87bd614d9dce370155a8e065a88a9011399793" translate="yes" xml:space="preserve">
          <source>For instance, to use the China CDN mirror:</source>
          <target state="translated">例如,要使用中国CDN镜像。</target>
        </trans-unit>
        <trans-unit id="248c4264fd961b911b66e5010fd921898cf7d57a" translate="yes" xml:space="preserve">
          <source>For instance, to use the China mirror:</source>
          <target state="translated">比如说,要用中国镜。</target>
        </trans-unit>
        <trans-unit id="253f8917506432b3ee4474e59a0b7110f22e5749" translate="yes" xml:space="preserve">
          <source>For instance, we could have created the same request to 'github.com' as follows:</source>
          <target state="translated">例如,我们可以创建同样的请求到'github.com',如下所示。</target>
        </trans-unit>
        <trans-unit id="f1c45df08669248a19de97849fd5f55d5638340a" translate="yes" xml:space="preserve">
          <source>For instructions on how to acquire a Google API key, visit &lt;a href=&quot;https://www.chromium.org/developers/how-tos/api-keys&quot;&gt;this page&lt;/a&gt;.</source>
          <target state="translated">有关如何获取Google API密钥的说明，请访问&lt;a href=&quot;https://www.chromium.org/developers/how-tos/api-keys&quot;&gt;此页面&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="243e0173737239b628ca89b755eb49cb3a3707d3" translate="yes" xml:space="preserve">
          <source>For keyboard events, the &lt;code&gt;event&lt;/code&gt; object also have following properties:</source>
          <target state="translated">对于键盘事件， &lt;code&gt;event&lt;/code&gt; 对象还具有以下属性：</target>
        </trans-unit>
        <trans-unit id="d013779a88817719fd09fd1a28d823c7cb62d408" translate="yes" xml:space="preserve">
          <source>For macOS, the progress bar will also be indicated for your application when using &lt;a href=&quot;https://support.apple.com/en-us/HT204100&quot;&gt;Mission Control&lt;/a&gt;:</source>
          <target state="translated">对于macOS，使用&lt;a href=&quot;https://support.apple.com/en-us/HT204100&quot;&gt;Mission Control&lt;/a&gt;时也会为您的应用程序显示进度栏：</target>
        </trans-unit>
        <trans-unit id="b3fc23298d85bc89aaf5e8a548d3f5379c0642de" translate="yes" xml:space="preserve">
          <source>For modules that are not classes, their methods and events must be listed under the &lt;code&gt;## Methods&lt;/code&gt; and &lt;code&gt;## Events&lt;/code&gt; chapters.</source>
          <target state="translated">对于不是类的模块，必须在 &lt;code&gt;## Methods&lt;/code&gt; 和 &lt;code&gt;## Events&lt;/code&gt; 章节下列出其方法和事件。</target>
        </trans-unit>
        <trans-unit id="97f78d47d10950220c612b6122939434b1918061" translate="yes" xml:space="preserve">
          <source>For modules, the &lt;code&gt;objectName&lt;/code&gt; is the module's name. For classes, it must be the name of the instance of the class, and must not be the same as the module's name.</source>
          <target state="translated">对于模块， &lt;code&gt;objectName&lt;/code&gt; 是模块的名称。对于类，它必须是该类实例的名称，并且不能与模块的名称相同。</target>
        </trans-unit>
        <trans-unit id="c21531e0b7a208c2ac961ef8759257c43f46a280" translate="yes" xml:space="preserve">
          <source>For more detailed information see &lt;a href=&quot;https://github.com/electron/electron/issues/18397&quot;&gt;#18397&lt;/a&gt;.</source>
          <target state="translated">有关更多详细信息，请参见&lt;a href=&quot;https://github.com/electron/electron/issues/18397&quot;&gt;＃18397&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6a7f01cebc66bde3e43e0b7a5f6ee0627c0752df" translate="yes" xml:space="preserve">
          <source>For more detailed information, see &lt;a href=&quot;https://github.com/electron/electron/pull/23578&quot;&gt;#23578&lt;/a&gt;.</source>
          <target state="translated">有关更多详细信息，请参见&lt;a href=&quot;https://github.com/electron/electron/pull/23578&quot;&gt;＃23578&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="41d825d9a729036d3726dec181c4a0ca26f90914" translate="yes" xml:space="preserve">
          <source>For more details see: &lt;a href=&quot;https://github.com/electron/electron/issues/23506&quot;&gt;https://github.com/electron/electron/issues/23506&lt;/a&gt;</source>
          <target state="translated">有关更多详细信息，请参见：&lt;a href=&quot;https://github.com/electron/electron/issues/23506&quot;&gt;https&lt;/a&gt; : //github.com/electron/electron/issues/23506</target>
        </trans-unit>
        <trans-unit id="12ce8d2e3bf4689b50d95cab569ba2b0adf45656" translate="yes" xml:space="preserve">
          <source>For more info, see the &lt;a href=&quot;mac-app-store-submission-guide&quot;&gt;Mac App Store Submission Guide&lt;/a&gt;.</source>
          <target state="translated">有关更多信息，请参阅&lt;a href=&quot;mac-app-store-submission-guide&quot;&gt;Mac App Store提交指南&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="72310bb077b7a4aabe4c2bd84e6c77d6e4541848" translate="yes" xml:space="preserve">
          <source>For more information on the available configuration options, see the &lt;a href=&quot;https://docs.snapcraft.io/build-snaps/syntax&quot;&gt;documentation on the snapcraft syntax&lt;/a&gt;. Let's look at an example:</source>
          <target state="translated">有关可用配置选项的更多信息，请参见&lt;a href=&quot;https://docs.snapcraft.io/build-snaps/syntax&quot;&gt;有关snapcraft语法&lt;/a&gt;的文档。让我们看一个例子：</target>
        </trans-unit>
        <trans-unit id="1156b44768e791541399e9626467d2fa45aff864" translate="yes" xml:space="preserve">
          <source>For more information on usage and integration with other tools, consult the project's README.</source>
          <target state="translated">关于使用和与其他工具集成的更多信息,请查阅项目的 README。</target>
        </trans-unit>
        <trans-unit id="662bf66887805cc6f07ab4a9d9987ed6e8a73dad" translate="yes" xml:space="preserve">
          <source>For more information on using &lt;code&gt;MessagePort&lt;/code&gt; and &lt;code&gt;MessageChannel&lt;/code&gt;, see the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/MessageChannel&quot;&gt;MDN documentation&lt;/a&gt;.</source>
          <target state="translated">有关使用 &lt;code&gt;MessagePort&lt;/code&gt; 和 &lt;code&gt;MessageChannel&lt;/code&gt; 的更多信息，请参见&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/MessageChannel&quot;&gt;MDN文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ce256d31a23e00fc1e35c2b76c94dbc91d687a2b" translate="yes" xml:space="preserve">
          <source>For more information on what &lt;code&gt;contextIsolation&lt;/code&gt; is and how to enable it please see our dedicated &lt;a href=&quot;context-isolation&quot;&gt;Context Isolation&lt;/a&gt; document.</source>
          <target state="translated">有关什么是 &lt;code&gt;contextIsolation&lt;/code&gt; 以及如何启用它的更多信息，请参见我们专用的&lt;a href=&quot;context-isolation&quot;&gt;Context Isolation&lt;/a&gt;文档。</target>
        </trans-unit>
        <trans-unit id="854ce0d4cf9c287a66b6b50afecbce3bab18c78c" translate="yes" xml:space="preserve">
          <source>For more information on what &lt;code&gt;contextIsolation&lt;/code&gt; is and how to enable it please see our dedicated &lt;a href=&quot;tutorial/context-isolation&quot;&gt;Context Isolation&lt;/a&gt; document.</source>
          <target state="translated">有关什么是 &lt;code&gt;contextIsolation&lt;/code&gt; 以及如何启用它的更多信息，请参见我们专用的&lt;a href=&quot;tutorial/context-isolation&quot;&gt;Context Isolation&lt;/a&gt;文档。</target>
        </trans-unit>
        <trans-unit id="7b97ac2424ca35d3d40825b17c00e58c2ad2cf20" translate="yes" xml:space="preserve">
          <source>For more information on what kinds of flags and switches you can use, check out the &lt;a href=&quot;api/command-line-switches&quot;&gt;Command Line Switches&lt;/a&gt; document.</source>
          <target state="translated">有关可以使用哪种标志和开关的更多信息，请查看&amp;ldquo;&lt;a href=&quot;api/command-line-switches&quot;&gt;命令行开关&amp;rdquo;&lt;/a&gt;文档。</target>
        </trans-unit>
        <trans-unit id="d80b3171cdeb075c156fe30fb4ae0b15630792a5" translate="yes" xml:space="preserve">
          <source>For more information on what kinds of flags and switches you can use, check out the &lt;a href=&quot;command-line-switches&quot;&gt;Command Line Switches&lt;/a&gt; document.</source>
          <target state="translated">有关可以使用哪种标志和开关的更多信息，请查看&amp;ldquo;&lt;a href=&quot;command-line-switches&quot;&gt;命令行开关&amp;rdquo;&lt;/a&gt;文档。</target>
        </trans-unit>
        <trans-unit id="a49cdb56dde81924b746254a7f24e97ae73d88e0" translate="yes" xml:space="preserve">
          <source>For more information, please see the &lt;a href=&quot;tutorial/security&quot;&gt;security introduction&lt;/a&gt;.</source>
          <target state="translated">有关更多信息，请参阅&lt;a href=&quot;tutorial/security&quot;&gt;安全性简介&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2af1bafb37e1efc8e25030cb405ee2425e632d82" translate="yes" xml:space="preserve">
          <source>For more information, see the &lt;a href=&quot;debugging-main-process&quot;&gt;Debugging the Main Process documentation&lt;/a&gt;.</source>
          <target state="translated">有关更多信息，请参见&lt;a href=&quot;debugging-main-process&quot;&gt;调试主流程文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="78de7b99a69004cbf5fe0b14086d9a273d74413f" translate="yes" xml:space="preserve">
          <source>For more information, see the &lt;a href=&quot;tutorial/debugging-main-process&quot;&gt;Debugging the Main Process documentation&lt;/a&gt;.</source>
          <target state="translated">有关更多信息，请参见&lt;a href=&quot;tutorial/debugging-main-process&quot;&gt;调试主流程文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="41cd0116e7dd1d6789182cceddbd7400a085cc79" translate="yes" xml:space="preserve">
          <source>For mouse events, the &lt;code&gt;event&lt;/code&gt; object also have following properties:</source>
          <target state="translated">对于鼠标事件， &lt;code&gt;event&lt;/code&gt; 对象还具有以下属性：</target>
        </trans-unit>
        <trans-unit id="55c6af6d16985648f77a3161d644bf54c2338ed4" translate="yes" xml:space="preserve">
          <source>For other non-module APIs, use natural titles, like &lt;code&gt;&amp;lt;webview&amp;gt; Tag&lt;/code&gt; or &lt;code&gt;Process Object&lt;/code&gt;.</source>
          <target state="translated">对于其他非模块API，请使用自然标题，例如 &lt;code&gt;&amp;lt;webview&amp;gt; Tag&lt;/code&gt; 或 &lt;code&gt;Process Object&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8e8f284ed89eff022fe5d6e59ebdfca883cde645" translate="yes" xml:space="preserve">
          <source>For security and cost reasons, access to Electron's Goma cluster is currently restricted to Electron Maintainers. If you want access please head to &lt;code&gt;#access-requests&lt;/code&gt; in Slack and ping &lt;code&gt;@goma-squad&lt;/code&gt; to ask for access. Please be aware that being a maintainer does not &lt;em&gt;automatically&lt;/em&gt; grant access and access is determined on a case by case basis.</source>
          <target state="translated">出于安全和成本方面的考虑，当前仅限于Electron Maintenanceer可以访问Electron的Goma集群。如果您想访问，请前往Slack中的 &lt;code&gt;#access-requests&lt;/code&gt; 并ping &lt;code&gt;@goma-squad&lt;/code&gt; 进行访问。请注意，作为维护者并不会&lt;em&gt;自动&lt;/em&gt;授予访问权限，并且访问权限将视具体情况而定。</target>
        </trans-unit>
        <trans-unit id="874be508e5c6c8bb81ba63b5d40f3aa79ddc3ebe" translate="yes" xml:space="preserve">
          <source>For setting up a server to accept and process crash reports, you can use following projects:</source>
          <target state="translated">要设置一个服务器来接受和处理崩溃报告,你可以使用以下项目。</target>
        </trans-unit>
        <trans-unit id="893021d623407b15b31b3974ad7dd84b9b512520" translate="yes" xml:space="preserve">
          <source>For some cases like verifying the &lt;code&gt;asar&lt;/code&gt; archive's checksum, we need to read the content of an &lt;code&gt;asar&lt;/code&gt; archive as a file. For this purpose you can use the built-in &lt;code&gt;original-fs&lt;/code&gt; module which provides original &lt;code&gt;fs&lt;/code&gt; APIs without &lt;code&gt;asar&lt;/code&gt; support:</source>
          <target state="translated">在某些情况下，例如验证 &lt;code&gt;asar&lt;/code&gt; 存档的校验和，我们需要将 &lt;code&gt;asar&lt;/code&gt; 存档的内容作为文件读取。为此，您可以使用内置的 &lt;code&gt;original-fs&lt;/code&gt; 模块，该模块在不提供 &lt;code&gt;asar&lt;/code&gt; 支持的情况下提供原始 &lt;code&gt;fs&lt;/code&gt; API ：</target>
        </trans-unit>
        <trans-unit id="b835b6381166067c2c6c297fb53d050596f4659d" translate="yes" xml:space="preserve">
          <source>For some operations, such as streaming media using RTMP, it is necessary to grant wider permissions to players&amp;rsquo; &lt;code&gt;.swf&lt;/code&gt; files. One way of accomplishing this, is to use &lt;a href=&quot;https://github.com/szwacz/nw-flash-trust&quot;&gt;nw-flash-trust&lt;/a&gt;.</source>
          <target state="translated">对于某些操作，例如使用RTMP的流媒体，有必要向播放器的 &lt;code&gt;.swf&lt;/code&gt; 文件授予更广泛的权限。实现此目的的一种方法是使用&lt;a href=&quot;https://github.com/szwacz/nw-flash-trust&quot;&gt;nw-flash-trust&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4bca33f19785ae50790d03e5e8b8f9fa3f8e8940" translate="yes" xml:space="preserve">
          <source>For the &lt;code&gt;mouseWheel&lt;/code&gt; event, the &lt;code&gt;event&lt;/code&gt; object also have following properties:</source>
          <target state="translated">对于 &lt;code&gt;mouseWheel&lt;/code&gt; 事件， &lt;code&gt;event&lt;/code&gt; 对象还具有以下属性：</target>
        </trans-unit>
        <trans-unit id="6b89f521faed3627ceafb1ee77d1aa33c1a76a31" translate="yes" xml:space="preserve">
          <source>For the Renderer process, Electron conveniently allows developers to send notifications with the &lt;a href=&quot;https://notifications.spec.whatwg.org/&quot;&gt;HTML5 Notification API&lt;/a&gt;, using the currently running operating system's native notification APIs to display it.</source>
          <target state="translated">对于Renderer流程，Electron方便开发人员使用&lt;a href=&quot;https://notifications.spec.whatwg.org/&quot;&gt;HTML5 Notification API&lt;/a&gt;发送通知，并使用当前运行的操作系统的本机通知API进行显示。</target>
        </trans-unit>
        <trans-unit id="7fb6776dd36c28d9729c375ab3890832423d6bae" translate="yes" xml:space="preserve">
          <source>For the release configuration:</source>
          <target state="translated">对于发布配置。</target>
        </trans-unit>
        <trans-unit id="e83235f1c87cd602a012533efaf359d9a476b742" translate="yes" xml:space="preserve">
          <source>For the testing configuration:</source>
          <target state="translated">对于测试配置。</target>
        </trans-unit>
        <trans-unit id="9a0e094c08e431ed56d092afefc892be387c6c60" translate="yes" xml:space="preserve">
          <source>For those unsure where to acquire this code or how to build it, &lt;a href=&quot;https://github.com/electron/build-tools&quot;&gt;Electron's Build Tools&lt;/a&gt; automates and explains most of this process. If you wish to manually set up the environment, you can instead use these &lt;a href=&quot;../development/build-instructions-gn&quot;&gt;build instructions&lt;/a&gt;.</source>
          <target state="translated">对于那些不确定从何处获取此代码或如何构建它的人，&lt;a href=&quot;https://github.com/electron/build-tools&quot;&gt;Electron的构建工具会&lt;/a&gt;自动执行并解释该过程的大部分。如果您希望手动设置环境，则可以改用这些&lt;a href=&quot;../development/build-instructions-gn&quot;&gt;构建说明&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fee4a5b3b989d078c41beb68e97f9c4c52aededd" translate="yes" xml:space="preserve">
          <source>For those unsure where to acquire this code or how to build it, &lt;a href=&quot;https://github.com/electron/build-tools&quot;&gt;Electron's Build Tools&lt;/a&gt; automates and explains most of this process. If you wish to manually set up the environment, you can instead use these &lt;a href=&quot;development/build-instructions-gn&quot;&gt;build instructions&lt;/a&gt;.</source>
          <target state="translated">对于那些不确定从何处获取此代码或如何构建它的人，&lt;a href=&quot;https://github.com/electron/build-tools&quot;&gt;Electron的构建工具会&lt;/a&gt;自动执行并解释该过程的大部分。如果您希望手动设置环境，则可以改用这些&lt;a href=&quot;development/build-instructions-gn&quot;&gt;构建说明&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="42cf0bcb717e6e1c5bc2bab69a7555abd5c7050c" translate="yes" xml:space="preserve">
          <source>Force closing the view, the &lt;code&gt;unload&lt;/code&gt; and &lt;code&gt;beforeunload&lt;/code&gt; events won't be emitted for the web page. After you're done with a view, call this function in order to free memory and other resources as soon as possible.</source>
          <target state="translated">强制关闭视图，网页不会发出 &lt;code&gt;unload&lt;/code&gt; 和 &lt;code&gt;beforeunload&lt;/code&gt; 事件。完成视图操作后，请调用此函数以尽快释放内存和其他资源。</target>
        </trans-unit>
        <trans-unit id="41c34d9172157555e51609e1dd9cdae11457b4a8" translate="yes" xml:space="preserve">
          <source>Force closing the window, the &lt;code&gt;unload&lt;/code&gt; and &lt;code&gt;beforeunload&lt;/code&gt; event won't be emitted for the web page, and &lt;code&gt;close&lt;/code&gt; event will also not be emitted for this window, but it guarantees the &lt;code&gt;closed&lt;/code&gt; event will be emitted.</source>
          <target state="translated">强制关闭窗口，在 &lt;code&gt;unload&lt;/code&gt; 和 &lt;code&gt;beforeunload&lt;/code&gt; 事件将不发射的网页，和 &lt;code&gt;close&lt;/code&gt; 事件也不会发出此窗口，但它保证了 &lt;code&gt;closed&lt;/code&gt; 事件将被发射。</target>
        </trans-unit>
        <trans-unit id="5a606dcde8ee92bc944b2d682a973d2fa5471fb8" translate="yes" xml:space="preserve">
          <source>Force using discrete GPU when there are multiple GPUs available.</source>
          <target state="translated">当有多个GPU可用时,强制使用独立GPU。</target>
        </trans-unit>
        <trans-unit id="23ae0ea8dd8e7096384ac7c6d644c6bfbff518dc" translate="yes" xml:space="preserve">
          <source>Force using integrated GPU when there are multiple GPUs available.</source>
          <target state="translated">当有多个GPU可用时,强制使用集成GPU。</target>
        </trans-unit>
        <trans-unit id="8a6a94c0656419d75d09c1f47735e377b3dc71eb" translate="yes" xml:space="preserve">
          <source>Forcefully closes the child window without calling its unload event.</source>
          <target state="translated">强制关闭子窗口,而不调用其卸载事件。</target>
        </trans-unit>
        <trans-unit id="b171aa0f99529c72056aab7a831c7f98c02499aa" translate="yes" xml:space="preserve">
          <source>Forcefully terminates the renderer process that is currently hosting this &lt;code&gt;webContents&lt;/code&gt;. This will cause the &lt;code&gt;render-process-gone&lt;/code&gt; event to be emitted with the &lt;code&gt;reason=killed || reason=crashed&lt;/code&gt;. Please note that some webContents share renderer processes and therefore calling this method may also crash the host process for other webContents as well.</source>
          <target state="translated">强制终止当前托管此 &lt;code&gt;webContents&lt;/code&gt; 的渲染器进程。这将导致使用 &lt;code&gt;reason=killed || reason=crashed&lt;/code&gt; 发出 &lt;code&gt;render-process-gone&lt;/code&gt; 事件。原因=崩溃。请注意，某些webContents共享渲染器进程，因此调用此方法也可能使其他webContents的宿主进程崩溃。</target>
        </trans-unit>
        <trans-unit id="11ec4772862b480bc0d4330e63394f4c0dd82ef7" translate="yes" xml:space="preserve">
          <source>Forces the maximum disk space to be used by the disk cache, in bytes.</source>
          <target state="translated">强制磁盘缓存使用的最大磁盘空间,以字节为单位。</target>
        </trans-unit>
        <trans-unit id="e3dbab8791e9c1d7fca1b6bb2e6c3d88b5142281" translate="yes" xml:space="preserve">
          <source>Forge comes with &lt;a href=&quot;https://electronforge.io/templates&quot;&gt;a ready-to-use template&lt;/a&gt; using Webpack as a bundler. It includes an example typescript configuration and provides two configuration files to enable easy customization. It uses the same core modules used by the greater Electron community (like &lt;a href=&quot;https://github.com/electron/electron-packager&quot;&gt;&lt;code&gt;electron-packager&lt;/code&gt;&lt;/a&gt;) &amp;ndash; changes made by Electron maintainers (like Slack) benefit Forge's users, too.</source>
          <target state="translated">Forge附带了&lt;a href=&quot;https://electronforge.io/templates&quot;&gt;一个&lt;/a&gt;使用Webpack作为捆绑器的现成模板。它包括一个示例打字稿配置，并提供了两个配置文件以使自定义变得容易。它使用了更大的Electron社区（如&lt;a href=&quot;https://github.com/electron/electron-packager&quot;&gt; &lt;code&gt;electron-packager&lt;/code&gt; &lt;/a&gt;）所使用的相同核心模块-Electron维护人员（如Slack）所做的更改也使Forge的用户受益。</target>
        </trans-unit>
        <trans-unit id="ffda46761bf18cf0dd922e7a16c1a3454103fb87" translate="yes" xml:space="preserve">
          <source>Forge comes with &lt;a href=&quot;https://electronforge.io/templates&quot;&gt;ready-to-use templates&lt;/a&gt; for popular frameworks like React, Vue, or Angular. It uses the same core modules used by the greater Electron community (like &lt;a href=&quot;https://github.com/electron-userland/electron-packager&quot;&gt;&lt;code&gt;electron-packager&lt;/code&gt;&lt;/a&gt;) &amp;ndash; changes made by Electron maintainers (like Slack) benefit Forge's users, too.</source>
          <target state="translated">Forge随附了适用于流行框架（如React，Vue或Angular）的&lt;a href=&quot;https://electronforge.io/templates&quot;&gt;现成模板&lt;/a&gt;。它使用了更大的Electron社区（例如&lt;a href=&quot;https://github.com/electron-userland/electron-packager&quot;&gt; &lt;code&gt;electron-packager&lt;/code&gt; &lt;/a&gt;）使用的相同核心模块-Electron维护人员（例如Slack）所做的更改也使Forge的用户受益。</target>
        </trans-unit>
        <trans-unit id="a640134df49a1d7ac759c390662f71687021a130" translate="yes" xml:space="preserve">
          <source>Fork the project &lt;a href=&quot;https://github.com/electron/electron&quot;&gt;on GitHub&lt;/a&gt; and clone your fork locally.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/electron/electron&quot;&gt;在GitHub上&lt;/a&gt;分叉该项目，然后在本地克隆您的fork。</target>
        </trans-unit>
        <trans-unit id="d735aafe3953821674bcc047eed0a464f448083f" translate="yes" xml:space="preserve">
          <source>Forwarding</source>
          <target state="translated">Forwarding</target>
        </trans-unit>
        <trans-unit id="048394d7b70f10b345e72c4c9fdb7401b26faee6" translate="yes" xml:space="preserve">
          <source>Frameless Window</source>
          <target state="translated">无框窗</target>
        </trans-unit>
        <trans-unit id="17a56f23cb49369abb90876a7fc79db233cbec85" translate="yes" xml:space="preserve">
          <source>Frameless window</source>
          <target state="translated">无框窗</target>
        </trans-unit>
        <trans-unit id="44389f6a466eaabf5c1db729e369511134e2b03b" translate="yes" xml:space="preserve">
          <source>French</source>
          <target state="translated">French</target>
        </trans-unit>
        <trans-unit id="33f0ca3b78634f70f34727200cfe101d4f639b17" translate="yes" xml:space="preserve">
          <source>French (Canada)</source>
          <target state="translated">法语(加拿大)</target>
        </trans-unit>
        <trans-unit id="950e3b8444abd67e768a641c20181ffe0042529b" translate="yes" xml:space="preserve">
          <source>French (France)</source>
          <target state="translated">法国(法国)</target>
        </trans-unit>
        <trans-unit id="d4e7895fbc7b89b31127508cafb2663fdb083fa2" translate="yes" xml:space="preserve">
          <source>French (Switzerland)</source>
          <target state="translated">法国(瑞士)</target>
        </trans-unit>
        <trans-unit id="6f09db2793c736909bd6c37b71f7a0bc8a0f19ae" translate="yes" xml:space="preserve">
          <source>Frisian</source>
          <target state="translated">Frisian</target>
        </trans-unit>
        <trans-unit id="0ff10501f7e66c9f19bf9c4babdd10ca579ce254" translate="yes" xml:space="preserve">
          <source>From 2.0 onward, Electron will follow semver.</source>
          <target state="translated">从2.0开始,Electron将跟随semver。</target>
        </trans-unit>
        <trans-unit id="c3a8674a8d599ddfc6957634e4c486efbfebd3ff" translate="yes" xml:space="preserve">
          <source>From &lt;a href=&quot;https://sites.google.com/a/chromium.org/chromedriver/&quot;&gt;ChromeDriver - WebDriver for Chrome&lt;/a&gt;:</source>
          <target state="translated">从&lt;a href=&quot;https://sites.google.com/a/chromium.org/chromedriver/&quot;&gt;ChromeDriver-WebDriver for Chrome&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="10fb85a843ef18824df96f590580867cf985b2c6" translate="yes" xml:space="preserve">
          <source>From Electron 12, it will be enabled by default. For lower versions it is an option in the &lt;code&gt;webPreferences&lt;/code&gt; option when constructing &lt;code&gt;new BrowserWindow&lt;/code&gt;'s.</source>
          <target state="translated">在Electron 12中，默认情况下将启用它。对于较低版本，在构造 &lt;code&gt;new BrowserWindow&lt;/code&gt; 时，它是 &lt;code&gt;webPreferences&lt;/code&gt; 选项中的一个选项。</target>
        </trans-unit>
        <trans-unit id="2913aab19780bda8d7bb89f9e9bccc9c50a55e58" translate="yes" xml:space="preserve">
          <source>From Electron 2.0 on, developers will see warnings and recommendations printed to the developer console. They only show up when the binary's name is Electron, indicating that a developer is currently looking at the console.</source>
          <target state="translated">从Electron 2.0开始,开发者将看到警告和建议打印到开发者控制台。只有当二进制的名字是Electron时,它们才会显示出来,这表明当前有开发者正在查看控制台。</target>
        </trans-unit>
        <trans-unit id="4a3e35689697ec190cd2fb0c4be0d315bd4c2251" translate="yes" xml:space="preserve">
          <source>From Electron root's root, run &lt;code&gt;script/update.py&lt;/code&gt;</source>
          <target state="translated">从Electron根目录的根目录运行 &lt;code&gt;script/update.py&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4c958b0e9d4b9e2e2a54c9e8c8cd51e301fc6448" translate="yes" xml:space="preserve">
          <source>From MSDN, it's illustrated:</source>
          <target state="translated">来自MSDN,图文并茂。</target>
        </trans-unit>
        <trans-unit id="293e001db2bc6c3edac85f89a102d08d11b1b8f6" translate="yes" xml:space="preserve">
          <source>From PowerShell, execute &lt;code&gt;ps1&lt;/code&gt; file with &lt;code&gt;./create_master_vm_from_vhd.ps1&lt;/code&gt;</source>
          <target state="translated">在PowerShell中，使用 &lt;code&gt;./create_master_vm_from_vhd.ps1&lt;/code&gt; 执行 &lt;code&gt;ps1&lt;/code&gt; 文件。</target>
        </trans-unit>
        <trans-unit id="a8c830c74e35a88a338f5bb276b585128de8b31c" translate="yes" xml:space="preserve">
          <source>From a development perspective, an Electron application is essentially a Node.js application. This means that the starting point of your Electron application will be a &lt;code&gt;package.json&lt;/code&gt; file like in any other Node.js application. A minimal Electron application has the following structure:</source>
          <target state="translated">从开发角度来看，Electron应用程序本质上是Node.js应用程序。这意味着您的Electron应用程序的起点将是 &lt;code&gt;package.json&lt;/code&gt; 文件，就像其他任何Node.js应用程序一样。最小的电子应用程序具有以下结构：</target>
        </trans-unit>
        <trans-unit id="a4394da6bd07f1ee0042ce07dda3d202ffb90075" translate="yes" xml:space="preserve">
          <source>From a terminal that has &lt;code&gt;snapcraft&lt;/code&gt; in its &lt;code&gt;PATH&lt;/code&gt;, run &lt;code&gt;electron-installer-snap&lt;/code&gt; with the only required parameter &lt;code&gt;--src&lt;/code&gt;, which is the location of your packaged Electron application created in the first step.</source>
          <target state="translated">在 &lt;code&gt;PATH&lt;/code&gt; 中具有 &lt;code&gt;snapcraft&lt;/code&gt; 的终端上，使用唯一必需的参数 &lt;code&gt;--src&lt;/code&gt; 运行 &lt;code&gt;electron-installer-snap&lt;/code&gt; ，这是第一步中创建的打包电子应用程序的位置。</target>
        </trans-unit>
        <trans-unit id="e5b99d0a24b6837e0fdb16a7b9dadc5b38ac1363" translate="yes" xml:space="preserve">
          <source>From an elevated PowerShell (run it &quot;as Administrator&quot;), run &lt;code&gt;electron-windows-store&lt;/code&gt; with the required parameters, passing both the input and output directories, the app's name and version, and confirmation that &lt;code&gt;node_modules&lt;/code&gt; should be flattened.</source>
          <target state="translated">从提升的PowerShell（以&amp;ldquo;管理员&amp;rdquo;身份运行），使用必需的参数运行 &lt;code&gt;electron-windows-store&lt;/code&gt; ，传递输入和输出目录，应用程序的名称和版本，并确认 &lt;code&gt;node_modules&lt;/code&gt; 平。</target>
        </trans-unit>
        <trans-unit id="734f49b3b8a88010f69b244bff01621f449f9ac4" translate="yes" xml:space="preserve">
          <source>From within GitHub, opening a new pull request will present you with a template that should be filled out:</source>
          <target state="translated">在GitHub内部,打开一个新的拉取请求会出现一个需要填写的模板。</target>
        </trans-unit>
        <trans-unit id="3c5d7a65a8198b0252fff09bfd52a41eca42cbfa" translate="yes" xml:space="preserve">
          <source>From within the Electron app, you can listen for messages and send replies using the Node.js &lt;a href=&quot;https://nodejs.org/api/process.html&quot;&gt;process&lt;/a&gt; API:</source>
          <target state="translated">在Electron应用程序中，您可以使用Node.js&lt;a href=&quot;https://nodejs.org/api/process.html&quot;&gt;流程&lt;/a&gt;API侦听消息并发送回复：</target>
        </trans-unit>
        <trans-unit id="2131cc39138eced8836ed354bc7b8c3289d46bc7" translate="yes" xml:space="preserve">
          <source>From within the Electron app, you can listen for messages and send replies using the nodejs &lt;a href=&quot;https://nodejs.org/api/process.html&quot;&gt;process&lt;/a&gt; API:</source>
          <target state="translated">在Electron应用程序中，您可以使用nodejs &lt;a href=&quot;https://nodejs.org/api/process.html&quot;&gt;流程&lt;/a&gt; API 监听消息并发送回复：</target>
        </trans-unit>
        <trans-unit id="bafd4b54282745a2bed1442852b73f4b3189a77a" translate="yes" xml:space="preserve">
          <source>Further Reading</source>
          <target state="translated">进一步阅读</target>
        </trans-unit>
        <trans-unit id="5bdf7278fcea3b5007a7f31401ae7da8c28c2e82" translate="yes" xml:space="preserve">
          <source>Furthermore, in Windows 8, the maximum length for the notification body is 250 characters, with the Windows team recommending that notifications should be kept to 200 characters. That said, that limitation has been removed in Windows 10, with the Windows team asking developers to be reasonable. Attempting to send gigantic amounts of text to the API (thousands of characters) might result in instability.</source>
          <target state="translated">此外,在Windows 8中,通知正文的最大长度为250个字符,Windows团队建议通知应控制在200个字符以内。尽管如此,在Windows 10中,这一限制已经被取消,Windows团队要求开发者合理使用。试图向API发送巨量文本(数千字符)可能会导致不稳定。</target>
        </trans-unit>
        <trans-unit id="2c248b36041d438fc46a4d75feaf8db587e389a3" translate="yes" xml:space="preserve">
          <source>Fuses are the solution to this problem, at a high level they are &quot;magic bits&quot; in the Electron binary that can be flipped when packaging your Electron app to enable / disable certain features / restrictions. Because they are flipped at package time before you code sign your app the OS becomes responsible for ensuring those bits aren't flipped back via OS level code signing validation (Gatekeeper / App Locker).</source>
          <target state="translated">引信是解决这个问题的方法,从高层次上讲,它们是Electron二进制中的 &quot;魔法位&quot;,可以在打包Electron应用时翻转,以启用/禁用某些功能/限制。因为它们是在打包时,在你对应用进行代码签名之前被翻转的,所以操作系统有责任通过操作系统级别的代码签名验证(Gatekeeper/App Locker)来确保这些位子不会被翻转回来。</target>
        </trans-unit>
        <trans-unit id="6a9e32ab99cab709bd6ba82b9aa8fbf0350b16d2" translate="yes" xml:space="preserve">
          <source>GN Files</source>
          <target state="translated">GN文件</target>
        </trans-unit>
        <trans-unit id="5d979da1e00ef42608b0265200caf848fb7c79fc" translate="yes" xml:space="preserve">
          <source>GN prerequisites</source>
          <target state="translated">GN的先决条件</target>
        </trans-unit>
        <trans-unit id="1db4aba2bc9d400d5e75f5473ff811cd819a436d" translate="yes" xml:space="preserve">
          <source>GOOGLE_API_KEY</source>
          <target state="translated">GOOGLE_API_KEY</target>
        </trans-unit>
        <trans-unit id="3ee288cccc04fc78b1de48dba8362ca4f281d5e7" translate="yes" xml:space="preserve">
          <source>GPU accelerated</source>
          <target state="translated">GPU加速</target>
        </trans-unit>
        <trans-unit id="4a539dd2d84c22ed68a37ed7e9d7601dc94bdf7f" translate="yes" xml:space="preserve">
          <source>GPU accelerated rendering means that the GPU is used for composition. Because of that the frame has to be copied from the GPU which requires more performance, thus this mode is quite a bit slower than the other one. The benefit of this mode is that WebGL and 3D CSS animations are supported.</source>
          <target state="translated">GPU加速渲染是指使用GPU进行合成。正因为如此,帧必须从GPU复制,这需要更多的性能,因此这种模式比其他模式慢了不少。这种模式的好处是支持WebGL和3D CSS动画。</target>
        </trans-unit>
        <trans-unit id="63e7c142f025c95ec8531acfd0d122a163cb6b1f" translate="yes" xml:space="preserve">
          <source>GPU accelerated rendering means that the GPU is used for composition. Because of that the frame has to be copied from the GPU which requires more performance, thus this mode is quite a bit slower than the other one. The benefit of this mode that WebGL and 3D CSS animations are supported.</source>
          <target state="translated">GPU加速渲染是指使用GPU进行合成。正因为如此,帧必须从GPU上复制,这需要更多的性能,因此这种模式比其他模式慢了不少。这种模式的好处是支持WebGL和3D CSS动画。</target>
        </trans-unit>
        <trans-unit id="27e0642d3d0283fa0d1d5b490eeb105437323129" translate="yes" xml:space="preserve">
          <source>GPUFeatureStatus</source>
          <target state="translated">GPUFeatureStatus</target>
        </trans-unit>
        <trans-unit id="1fae790cf35d61c88e97f17c988718c8de99c880" translate="yes" xml:space="preserve">
          <source>GPUFeatureStatus Object</source>
          <target state="translated">GPUFeatureStatus对象</target>
        </trans-unit>
        <trans-unit id="ccece2966ff8b4cb279897a70ef4ca32da17c0cd" translate="yes" xml:space="preserve">
          <source>Galician</source>
          <target state="translated">Galician</target>
        </trans-unit>
        <trans-unit id="63f15e2cad489c7f65563ae7617fe47ac16f9b26" translate="yes" xml:space="preserve">
          <source>General Code</source>
          <target state="translated">总则</target>
        </trans-unit>
        <trans-unit id="c6fd7bce8f72bd46f1133e18bc9aeb61522b29be" translate="yes" xml:space="preserve">
          <source>General considerations</source>
          <target state="translated">一般性考虑</target>
        </trans-unit>
        <trans-unit id="3c5d21815e853ee353943f1b16ccdedddafbb86a" translate="yes" xml:space="preserve">
          <source>Generally speaking, Electron supports Ubuntu 12.04, Fedora 21, Debian 8 and later.</source>
          <target state="translated">一般来说,Electron支持Ubuntu 12.04、Fedora 21、Debian 8及以后的版本。</target>
        </trans-unit>
        <trans-unit id="a0586638574b9f7ba5670b689a6ecc29e679e895" translate="yes" xml:space="preserve">
          <source>Generally speaking, all advice for building performant web apps for modern browsers apply to Electron's renderers, too. The two primary tools at your disposal are currently &lt;code&gt;requestIdleCallback()&lt;/code&gt; for small operations and &lt;code&gt;Web Workers&lt;/code&gt; for long-running operations.</source>
          <target state="translated">一般来说，为现代浏览器构建高性能Web应用程序的所有建议也都适用于Electron的渲染器。您现在可以使用的两个主要工具是：用于小操作的 &lt;code&gt;requestIdleCallback()&lt;/code&gt; 和用于长时间运行的操作的 &lt;code&gt;Web Workers&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="90b6f5d52bf8b14dce89eab99bf56fc36ee3ce58" translate="yes" xml:space="preserve">
          <source>Generally speaking, it is easier to completely disable &lt;code&gt;eval()&lt;/code&gt; than to make it bulletproof. Thus, if you do not need it, it is a good idea to disable it.</source>
          <target state="translated">一般来说，完全禁用 &lt;code&gt;eval()&lt;/code&gt; 比使它防弹更容易。因此，如果您不需要它，则最好禁用它。</target>
        </trans-unit>
        <trans-unit id="13f9f22123ed9e158e8f29705aa35590736ffaba" translate="yes" xml:space="preserve">
          <source>Generally speaking, setting the parameter to a value below zero (like &lt;code&gt;-1&lt;/code&gt;) will remove the progress bar while setting it to a value higher than one (like &lt;code&gt;2&lt;/code&gt;) will switch the progress bar to intermediate mode.</source>
          <target state="translated">一般而言，将参数设置为小于零的值（如 &lt;code&gt;-1&lt;/code&gt; ）将删除进度条，而将其设置为大于1的值（如 &lt;code&gt;2&lt;/code&gt; ）会将进度条切换到中间模式。</target>
        </trans-unit>
        <trans-unit id="9a1b685e55f4b94987ef88208f8882ad9106ba1c" translate="yes" xml:space="preserve">
          <source>Generally speaking, shortcuts are added by providing a &lt;code&gt;Name&lt;/code&gt; and &lt;code&gt;Exec&lt;/code&gt; property for each entry in the shortcuts menu. Unity will execute the &lt;code&gt;Exec&lt;/code&gt; field once clicked by the user. The format is as follows:</source>
          <target state="translated">通常，通过为快捷方式菜单中的每个条目提供 &lt;code&gt;Name&lt;/code&gt; 和 &lt;code&gt;Exec&lt;/code&gt; 属性来添加快捷方式。用户单击后，Unity将执行 &lt;code&gt;Exec&lt;/code&gt; 字段。格式如下：</target>
        </trans-unit>
        <trans-unit id="1538647f42f7d3d79050cbefe208f89d3f10ca55" translate="yes" xml:space="preserve">
          <source>Generally speaking, there are likely good reasons if a feature was not enabled by default. Legitimate use cases for enabling specific features exist. As a developer, you should know exactly why you need to enable a feature, what the ramifications are, and how it impacts the security of your application. Under no circumstances should you enable features speculatively.</source>
          <target state="translated">一般来说,如果某项功能在默认情况下没有启用,很可能有充分的理由。启用特定功能的合法用例是存在的。作为开发人员,你应该清楚地知道为什么需要启用一个功能,其后果是什么,以及它如何影响你的应用程序的安全性。在任何情况下,你都不应该投机取巧地启用功能。</target>
        </trans-unit>
        <trans-unit id="2729a90cd6cab76c61d94de18b8caf7262113dcf" translate="yes" xml:space="preserve">
          <source>Generally, the &lt;code&gt;template&lt;/code&gt; is an array of &lt;code&gt;options&lt;/code&gt; for constructing a &lt;a href=&quot;api/menu-item&quot;&gt;MenuItem&lt;/a&gt;. The usage can be referenced above.</source>
          <target state="translated">通常， &lt;code&gt;template&lt;/code&gt; 是用于构造&lt;a href=&quot;api/menu-item&quot;&gt;MenuItem&lt;/a&gt;的 &lt;code&gt;options&lt;/code&gt; 数组。用法可以在上面引用。</target>
        </trans-unit>
        <trans-unit id="df13bde07a0723acaab7f213d04b6cfcb3082ad5" translate="yes" xml:space="preserve">
          <source>Generally, the &lt;code&gt;template&lt;/code&gt; is an array of &lt;code&gt;options&lt;/code&gt; for constructing a &lt;a href=&quot;menu-item&quot;&gt;MenuItem&lt;/a&gt;. The usage can be referenced above.</source>
          <target state="translated">通常， &lt;code&gt;template&lt;/code&gt; 是用于构造&lt;a href=&quot;menu-item&quot;&gt;MenuItem&lt;/a&gt;的 &lt;code&gt;options&lt;/code&gt; 数组。用法可以在上面引用。</target>
        </trans-unit>
        <trans-unit id="3169e818304c83f7b1d25d45a63a2afbec618473" translate="yes" xml:space="preserve">
          <source>Generally, the &lt;code&gt;template&lt;/code&gt; is just an array of &lt;code&gt;options&lt;/code&gt; for constructing a &lt;a href=&quot;menu-item&quot;&gt;MenuItem&lt;/a&gt;. The usage can be referenced above.</source>
          <target state="translated">通常， &lt;code&gt;template&lt;/code&gt; 只是用于构造&lt;a href=&quot;menu-item&quot;&gt;MenuItem&lt;/a&gt;的 &lt;code&gt;options&lt;/code&gt; 数组。用法可以在上面引用。</target>
        </trans-unit>
        <trans-unit id="5e016c4e6c4388b4fdc614cd782c50dda7199bee" translate="yes" xml:space="preserve">
          <source>Generate xcode project for debugging sources (cannot build code from xcode)</source>
          <target state="translated">生成xcode工程,用于调试源码(不能从xcode构建代码)。</target>
        </trans-unit>
        <trans-unit id="0afb4a7756056519dfbd37bafb195e85a8b71d1c" translate="yes" xml:space="preserve">
          <source>Generate, download, and install &lt;a href=&quot;https://github.com/electron-userland/electron-osx-sign/wiki/1.-Getting-Started#certificates&quot;&gt;signing certificates&lt;/a&gt;</source>
          <target state="translated">生成，下载和安装&lt;a href=&quot;https://github.com/electron-userland/electron-osx-sign/wiki/1.-Getting-Started#certificates&quot;&gt;签名证书&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="844e1ad2301336675d91d14f5d54415f71da466b" translate="yes" xml:space="preserve">
          <source>Generate, download, and install &lt;a href=&quot;https://github.com/electron/electron-osx-sign/wiki/1.-Getting-Started#certificates&quot;&gt;signing certificates&lt;/a&gt;</source>
          <target state="translated">生成，下载和安装&lt;a href=&quot;https://github.com/electron/electron-osx-sign/wiki/1.-Getting-Started#certificates&quot;&gt;签名证书&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a3d952d915882776a804ebcb451b68280f150a03" translate="yes" xml:space="preserve">
          <source>Generating &lt;code&gt;asar&lt;/code&gt; Archives</source>
          <target state="translated">生成 &lt;code&gt;asar&lt;/code&gt; 档案</target>
        </trans-unit>
        <trans-unit id="7585e74bae56fdc23c3110b7a00c699530461cc8" translate="yes" xml:space="preserve">
          <source>Generating a CPU profile and a heap memory profile for loading a module can be done with a single command on the command line. In the example below, we're looking at the popular module &lt;code&gt;request&lt;/code&gt;.</source>
          <target state="translated">可以使用命令行上的单个命令来生成用于加载模块的CPU配置文件和堆内存配置文件。在下面的示例中，我们正在查看流行的模块 &lt;code&gt;request&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0e4e031d86d0110b37d71551b28614ffdcf68aee" translate="yes" xml:space="preserve">
          <source>Generating asar Archives</source>
          <target state="translated">生成asar档案</target>
        </trans-unit>
        <trans-unit id="308d823eb2f5ba3ab75d3a7c08e661aeae1e790e" translate="yes" xml:space="preserve">
          <source>Geolocation support in Electron requires the use of Google Cloud Platform's geolocation webservice. To enable this feature, acquire a &lt;a href=&quot;https://developers.google.com/maps/documentation/geolocation/get-api-key&quot;&gt;Google API key&lt;/a&gt; and place the following code in your main process file, before opening any browser windows that will make geolocation requests:</source>
          <target state="translated">Electron中的地理位置支持需要使用Google Cloud Platform的地理位置Web服务。要启用此功能，请在打开任何发出地理定位请求的浏览器窗口之前，获取&lt;a href=&quot;https://developers.google.com/maps/documentation/geolocation/get-api-key&quot;&gt;Google API密钥&lt;/a&gt;并将以下代码放入您的主过程文件中：</target>
        </trans-unit>
        <trans-unit id="aca441ddd2e8d07643b87c1b24a828fa5b4b3e42" translate="yes" xml:space="preserve">
          <source>Georgian</source>
          <target state="translated">Georgian</target>
        </trans-unit>
        <trans-unit id="da91388c72d3e31da19dcd85c97374197748485d" translate="yes" xml:space="preserve">
          <source>German</source>
          <target state="translated">German</target>
        </trans-unit>
        <trans-unit id="078c5c2d83171c5c9230eb9470f612f005a42c2d" translate="yes" xml:space="preserve">
          <source>German (Austria)</source>
          <target state="translated">德国(奥地利)</target>
        </trans-unit>
        <trans-unit id="9c71d86768bbc4160407ef4ed71ede2d112003c0" translate="yes" xml:space="preserve">
          <source>German (Germany)</source>
          <target state="translated">德文(德国)</target>
        </trans-unit>
        <trans-unit id="09e6c204b1cd8e89c8f7fe995a77b7e2feb3c179" translate="yes" xml:space="preserve">
          <source>German (Switzerland)</source>
          <target state="translated">德国(瑞士)</target>
        </trans-unit>
        <trans-unit id="9a96c736087dc403a036da96c29f464627719640" translate="yes" xml:space="preserve">
          <source>Get Certificate</source>
          <target state="translated">获得证书</target>
        </trans-unit>
        <trans-unit id="56403cae91f81004fd95e821f0aef26fe73c0765" translate="yes" xml:space="preserve">
          <source>Get Started With Analyzing Runtime Performance</source>
          <target state="translated">开始分析运行时性能</target>
        </trans-unit>
        <trans-unit id="97902b12593780ddf28d3457dbb261e2b807323d" translate="yes" xml:space="preserve">
          <source>Get Team ID</source>
          <target state="translated">获取团队ID</target>
        </trans-unit>
        <trans-unit id="1d751cd6f2223c387565d489fdaf84c5a57d5ce2" translate="yes" xml:space="preserve">
          <source>Get a Windows Authenticode code signing certificate</source>
          <target state="translated">获取Windows Authenticode代码签名证书</target>
        </trans-unit>
        <trans-unit id="b7a7fa4d410be0b8db57dbbf12974ffa93e61b0b" translate="yes" xml:space="preserve">
          <source>Get a Windows Authenticode code signing certificate (requires an annual fee)</source>
          <target state="translated">获得Windows Authenticode代码签名证书(需要年费)。</target>
        </trans-unit>
        <trans-unit id="b9b7985f4cabac6df8ab0ce7316af20136bc9a96" translate="yes" xml:space="preserve">
          <source>Get a copy of Electron's libcc fork</source>
          <target state="translated">获取一份Electron的libcc fork的副本。</target>
        </trans-unit>
        <trans-unit id="3dfdaa9a34c13df1a4918f14dbd278dbcb6ad6d1" translate="yes" xml:space="preserve">
          <source>Get a set of category groups. The category groups can change as new code paths are reached.</source>
          <target state="translated">获取一组类别组。当达到新的代码路径时,类别组可以改变。</target>
        </trans-unit>
        <trans-unit id="7f4bf81de63a424d3021097f2e716b1a8865357f" translate="yes" xml:space="preserve">
          <source>Get a set of category groups. The category groups can change as new code paths are reached. See also the &lt;a href=&quot;https://chromium.googlesource.com/chromium/src/+/master/base/trace_event/builtin_categories.h&quot;&gt;list of built-in tracing categories&lt;/a&gt;.</source>
          <target state="translated">获取一组类别组。类别组可以随着到达新的代码路径而改变。另请参阅&lt;a href=&quot;https://chromium.googlesource.com/chromium/src/+/master/base/trace_event/builtin_categories.h&quot;&gt;内置跟踪类别列表&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b31590d49ba6cc9bd37661826a0e210780ebf287" translate="yes" xml:space="preserve">
          <source>Get and set properties of a session.</source>
          <target state="translated">获取和设置会话的属性。</target>
        </trans-unit>
        <trans-unit id="4651f3efda204499e94165cf4e7980b1e52540ef" translate="yes" xml:space="preserve">
          <source>Get system preferences.</source>
          <target state="translated">获取系统偏好。</target>
        </trans-unit>
        <trans-unit id="0843d0855d06f634a18af84e43b73a0cdbbb035d" translate="yes" xml:space="preserve">
          <source>Get the Azure storage account key</source>
          <target state="translated">获取Azure存储账户密钥</target>
        </trans-unit>
        <trans-unit id="f8a9296dea080088611ff14ad0eae0f5c7d1c3c8" translate="yes" xml:space="preserve">
          <source>Get the code and initialize the project:</source>
          <target state="translated">获取代码并初始化项目。</target>
        </trans-unit>
        <trans-unit id="42e39f6d0cb0eadebb6a9541f6e152c7e729a7f1" translate="yes" xml:space="preserve">
          <source>Get the code:</source>
          <target state="translated">获取代码。</target>
        </trans-unit>
        <trans-unit id="6e09fde08da990083e9a1d35f798afb7b2e02572" translate="yes" xml:space="preserve">
          <source>Get the current monitoring traced data.</source>
          <target state="translated">获取当前监控的跟踪数据。</target>
        </trans-unit>
        <trans-unit id="ab030a93caed07ab74219faedeff57c5ef6b6ba1" translate="yes" xml:space="preserve">
          <source>Get the full virtual machine image URI from Azure</source>
          <target state="translated">从 Azure 获取完整的虚拟机映像 URI</target>
        </trans-unit>
        <trans-unit id="708a06cd5805e6920aca6e92df00bcc5ff1e8017" translate="yes" xml:space="preserve">
          <source>Get the maximum usage across processes of trace buffer as a percentage of the full state.</source>
          <target state="translated">获取各进程对跟踪缓冲区的最大使用量占全状态的百分比。</target>
        </trans-unit>
        <trans-unit id="af84e9850a364806c20ee98a9f19df0ba5a1b68f" translate="yes" xml:space="preserve">
          <source>Get the maximum usage across processes of trace buffer as a percentage of the full state. When the TraceBufferUsage value is determined the &lt;code&gt;callback&lt;/code&gt; is called.</source>
          <target state="translated">获取整个跟踪缓冲区进程的最大使用量（占满状态的百分比）。确定TraceBufferUsage值后，将 &lt;code&gt;callback&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f0e6b1c9b8b0f68211223759203e1903246b8a61" translate="yes" xml:space="preserve">
          <source>Get the system printer list.</source>
          <target state="translated">获取系统打印机列表。</target>
        </trans-unit>
        <trans-unit id="7c8c41f61ee8c8b61ef31de98aef8618369ead6d" translate="yes" xml:space="preserve">
          <source>Get the version of crashpad that we're going to use.</source>
          <target state="translated">获取我们要使用的crashpad的版本。</target>
        </trans-unit>
        <trans-unit id="fe46d111db1537c8fb76f549a57af34807d5dc12" translate="yes" xml:space="preserve">
          <source>Gets the macOS appearance setting that is currently applied to your application, maps to &lt;a href=&quot;https://developer.apple.com/documentation/appkit/nsapplication/2967171-effectiveappearance?language=objc&quot;&gt;NSApplication.effectiveAppearance&lt;/a&gt;</source>
          <target state="translated">获取当前应用于您的应用程序的macOS外观设置，映射到&lt;a href=&quot;https://developer.apple.com/documentation/appkit/nsapplication/2967171-effectiveappearance?language=objc&quot;&gt;NSApplication.effectiveAppearance&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fb615fb195390346d9d0144db8bc845911c0ed59" translate="yes" xml:space="preserve">
          <source>Gets the macOS appearance setting that you have declared you want for your application, maps to &lt;a href=&quot;https://developer.apple.com/documentation/appkit/nsapplication/2967170-appearance?language=objc&quot;&gt;NSApplication.appearance&lt;/a&gt;. You can use the &lt;code&gt;setAppLevelAppearance&lt;/code&gt; API to set this value.</source>
          <target state="translated">获取您声明为应用程序所需的macOS外观设置，映射到&lt;a href=&quot;https://developer.apple.com/documentation/appkit/nsapplication/2967170-appearance?language=objc&quot;&gt;NSApplication.appearance&lt;/a&gt;。您可以使用 &lt;code&gt;setAppLevelAppearance&lt;/code&gt; API设置此值。</target>
        </trans-unit>
        <trans-unit id="efdcb676f7e4576e5bad658605652f36207e9edd" translate="yes" xml:space="preserve">
          <source>Getting Support</source>
          <target state="translated">获得支持</target>
        </trans-unit>
        <trans-unit id="f49bca71c706c74f9f8e17cb3d8f3dfd4b2d9817" translate="yes" xml:space="preserve">
          <source>Getting additional help</source>
          <target state="translated">获得额外帮助</target>
        </trans-unit>
        <trans-unit id="060f712c74598ce01e86d56802d9344d8ed68bb7" translate="yes" xml:space="preserve">
          <source>Getting help</source>
          <target state="translated">获得帮助</target>
        </trans-unit>
        <trans-unit id="774b49b5b98b5374e54d194a189001e6997ca6b2" translate="yes" xml:space="preserve">
          <source>Getting the Code</source>
          <target state="translated">获取代码</target>
        </trans-unit>
        <trans-unit id="325db80c1b58c07e66e7df993a652a63302c152d" translate="yes" xml:space="preserve">
          <source>Getting the code</source>
          <target state="translated">获取代码</target>
        </trans-unit>
        <trans-unit id="68de8000c7168871fa3b06a000cc52b36c447b72" translate="yes" xml:space="preserve">
          <source>Getting the library</source>
          <target state="translated">获取图书馆</target>
        </trans-unit>
        <trans-unit id="1f5fe669e18521007ce5a8aa2cce9d3c3fa007a4" translate="yes" xml:space="preserve">
          <source>Getting the plugin</source>
          <target state="translated">获取插件</target>
        </trans-unit>
        <trans-unit id="5819778898df55e3a762f0c5728b457970d72cae" translate="yes" xml:space="preserve">
          <source>Git</source>
          <target state="translated">Git</target>
        </trans-unit>
        <trans-unit id="31a9c72c1cf9aa2b3749a61100d0110a62a633e0" translate="yes" xml:space="preserve">
          <source>GitHub's Electron team maintains &lt;a href=&quot;https://github.com/electron/update.electronjs.org&quot;&gt;update.electronjs.org&lt;/a&gt;, a free and open-source webservice that Electron apps can use to self-update. The service is designed for Electron apps that meet the following criteria:</source>
          <target state="translated">GitHub的Electron团队维护&lt;a href=&quot;https://github.com/electron/update.electronjs.org&quot;&gt;update.electronjs.org&lt;/a&gt;，这是一个免费的开源Web服务，Electron应用程序可以使用该服务进行自我更新。该服务是为满足以下条件的Electron应用程序设计的：</target>
        </trans-unit>
        <trans-unit id="99e4e21466cd569957ff19180668d99a6399bbd0" translate="yes" xml:space="preserve">
          <source>Given that hardware manufacturers, Microsoft, Chromium, and Node.js haven't released even critical security updates for that system, we have to warn you that using Windows XP is wildly insecure and outright irresponsible.</source>
          <target state="translated">鉴于硬件制造商、微软、Chromium和Node.js甚至没有为该系统发布关键的安全更新,我们不得不警告你,使用Windows XP是疯狂的不安全和彻底的不负责任。</target>
        </trans-unit>
        <trans-unit id="74fe7d567bf71c112291a363a3d9b39b53cc1350" translate="yes" xml:space="preserve">
          <source>Gives the default maximal active V-logging level; 0 is the default. Normally positive values are used for V-logging levels.</source>
          <target state="translated">给出默认的最大活动V-logging级别,默认为0。通常V-logging级别使用正值。</target>
        </trans-unit>
        <trans-unit id="04622ff2db8ee08e5e23ba617b529878c0062cd3" translate="yes" xml:space="preserve">
          <source>Gives the per-module maximal V-logging levels to override the value given by &lt;code&gt;--v&lt;/code&gt;. E.g. &lt;code&gt;my_module=2,foo*=3&lt;/code&gt; would change the logging level for all code in source files &lt;code&gt;my_module.*&lt;/code&gt; and &lt;code&gt;foo*.*&lt;/code&gt;.</source>
          <target state="translated">给出每个模块的最大V记录级别，以覆盖 &lt;code&gt;--v&lt;/code&gt; 给定的值。例如， &lt;code&gt;my_module=2,foo*=3&lt;/code&gt; 将更改源文件 &lt;code&gt;my_module.*&lt;/code&gt; 和 &lt;code&gt;foo*.*&lt;/code&gt; 所有代码的日志记录级别。</target>
        </trans-unit>
        <trans-unit id="2a102f27f850350772f2e44ae41ae0c25df0de90" translate="yes" xml:space="preserve">
          <source>Global Installation</source>
          <target state="translated">全球安装</target>
        </trans-unit>
        <trans-unit id="9b2c45900d277c38ce7727bdb988069b357640ce" translate="yes" xml:space="preserve">
          <source>Global Shortcuts</source>
          <target state="translated">全球捷径</target>
        </trans-unit>
        <trans-unit id="7427cf697be16a4ec1d916910128a59d920125e7" translate="yes" xml:space="preserve">
          <source>Glossary</source>
          <target state="translated">Glossary</target>
        </trans-unit>
        <trans-unit id="47ba3bd2a5c6aeb3e8cad3b83d7b5602dbe77429" translate="yes" xml:space="preserve">
          <source>Glossary of Terms</source>
          <target state="translated">术语表</target>
        </trans-unit>
        <trans-unit id="d692e9d7a0982826f6b9d2c6fb8fe74bb5d32c6d" translate="yes" xml:space="preserve">
          <source>Go into Azure and get the URI for the newly created image as described in a previous step</source>
          <target state="translated">进入Azure,按照上一步的描述,获取新创建的图像的URI。</target>
        </trans-unit>
        <trans-unit id="c476992f33540e23daa401c4e60e99186e563a56" translate="yes" xml:space="preserve">
          <source>GoDaddy</source>
          <target state="translated">GoDaddy</target>
        </trans-unit>
        <trans-unit id="00292eece64f295067fc39740fb3a0128f087df2" translate="yes" xml:space="preserve">
          <source>Goma</source>
          <target state="translated">Goma</target>
        </trans-unit>
        <trans-unit id="cef072c554ff5a0c22c00cafb210950bdf7d3505" translate="yes" xml:space="preserve">
          <source>Goma is a distributed compiler service for open-source projects such as Chromium and Android.</source>
          <target state="translated">Goma是针对Chromium和Android等开源项目的分布式编译器服务。</target>
        </trans-unit>
        <trans-unit id="28732829f3eca4da96a693af0bb508a19d3ecbdf" translate="yes" xml:space="preserve">
          <source>Google offers &lt;a href=&quot;https://developer.chrome.com/devtools&quot;&gt;excellent documentation for their developer tools&lt;/a&gt;. We recommend that you make yourself familiar with them - they are usually one of the most powerful utilities in any Electron Developer's tool belt.</source>
          <target state="translated">Google &lt;a href=&quot;https://developer.chrome.com/devtools&quot;&gt;为他们的开发人员工具&lt;/a&gt;提供了出色的文档。我们建议您使他们熟悉它们-它们通常是任何Electron Developer工具带中功能最强大的实用程序之一。</target>
        </trans-unit>
        <trans-unit id="59d5f5b13f13f6d5e8e88a5a92e137f7d64b2954" translate="yes" xml:space="preserve">
          <source>Greek</source>
          <target state="translated">Greek</target>
        </trans-unit>
        <trans-unit id="e96b7da2918127b11fa0a0e9eee6e9a1c10a65ca" translate="yes" xml:space="preserve">
          <source>Guarani</source>
          <target state="translated">Guarani</target>
        </trans-unit>
        <trans-unit id="929a28d261428029e61c0f81c6161fd71ba0b2fe" translate="yes" xml:space="preserve">
          <source>Guides</source>
          <target state="translated">Guides</target>
        </trans-unit>
        <trans-unit id="8da0077fda7c3873b2109d7ff97c49289bade98b" translate="yes" xml:space="preserve">
          <source>Guides and Tutorials</source>
          <target state="translated">指南和教程</target>
        </trans-unit>
        <trans-unit id="7d874f5abb3950680f297babc41172373fdc4c32" translate="yes" xml:space="preserve">
          <source>Guides: Development</source>
          <target state="translated">指南。发展</target>
        </trans-unit>
        <trans-unit id="905d38c755a96138170302a7c56baed9094e1527" translate="yes" xml:space="preserve">
          <source>Guides: Getting Started with Electron</source>
          <target state="translated">指南。电子入门</target>
        </trans-unit>
        <trans-unit id="c06c55a5bcd005bf56c5234eb953099ffc1de3f1" translate="yes" xml:space="preserve">
          <source>Gujarati</source>
          <target state="translated">Gujarati</target>
        </trans-unit>
        <trans-unit id="12b4aa2e03f9d0d04893ebd755d57aa21da50f87" translate="yes" xml:space="preserve">
          <source>Gyp Files</source>
          <target state="translated">Gyp文件</target>
        </trans-unit>
        <trans-unit id="6ab64c2c4cbe25df11defa0cabb6e1d056d0b05d" translate="yes" xml:space="preserve">
          <source>HKDF - &lt;a href=&quot;https://csrc.nist.gov/publications/nistpubs/800-56C/SP-800-56C.pdf&quot;&gt;NIST SP 800-56C&lt;/a&gt;</source>
          <target state="translated">HKDF- &lt;a href=&quot;https://csrc.nist.gov/publications/nistpubs/800-56C/SP-800-56C.pdf&quot;&gt;NIST SP 800-56C&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="96aef50bf3aade35f7355d1a4921a735889e4d65" translate="yes" xml:space="preserve">
          <source>HMAC - &lt;a href=&quot;https://csrc.nist.gov/publications/fips/fips198-1/FIPS-198-1_final.pdf&quot;&gt;FIPS 198-1&lt;/a&gt;</source>
          <target state="translated">HMAC- &lt;a href=&quot;https://csrc.nist.gov/publications/fips/fips198-1/FIPS-198-1_final.pdf&quot;&gt;FIPS 198-1&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1ec65432dccf7be3dd348b42b4845c542f32d36e" translate="yes" xml:space="preserve">
          <source>Handle responses to HTTP/HTTPS requests.</source>
          <target state="translated">处理对HTTP/HTTPS请求的响应。</target>
        </trans-unit>
        <trans-unit id="0bdcb3359e0bc7193184a50e6c4ff8c1c1fef02a" translate="yes" xml:space="preserve">
          <source>Handles a single &lt;code&gt;invoke&lt;/code&gt;able IPC message, then removes the listener. See &lt;code&gt;ipcMain.handle(channel, listener)&lt;/code&gt;.</source>
          <target state="translated">处理单个可 &lt;code&gt;invoke&lt;/code&gt; IPC消息，然后删除侦听器。请参阅 &lt;code&gt;ipcMain.handle(channel, listener)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e34b76c18492cbccb6cd816eb3e1a919459421f5" translate="yes" xml:space="preserve">
          <source>Handling Updates Manually</source>
          <target state="translated">手动处理更新</target>
        </trans-unit>
        <trans-unit id="c6198e10656789bfc9a2ce6cde36df2a0803c265" translate="yes" xml:space="preserve">
          <source>Hausa</source>
          <target state="translated">Hausa</target>
        </trans-unit>
        <trans-unit id="cd7668c561bd17eb1bdc17551d90f80f2444fe05" translate="yes" xml:space="preserve">
          <source>Hawaiian</source>
          <target state="translated">Hawaiian</target>
        </trans-unit>
        <trans-unit id="348d00693e12bc983bd092677b90434b5a4d869e" translate="yes" xml:space="preserve">
          <source>Hebrew</source>
          <target state="translated">Hebrew</target>
        </trans-unit>
        <trans-unit id="dad314e6fa5d85b60cfa86c8054b26586b2695a7" translate="yes" xml:space="preserve">
          <source>Here are some things to consider before rendering untrusted content:</source>
          <target state="translated">在渲染不受信任的内容之前,这里有一些需要考虑的事情。</target>
        </trans-unit>
        <trans-unit id="32e9448bc4ec32f0e45beaffa974dfcc238350cc" translate="yes" xml:space="preserve">
          <source>Here is a pre-configured project that you can download and directly debug in VSCode: &lt;a href=&quot;https://github.com/octref/vscode-electron-debug/tree/master/electron-quick-start&quot;&gt;https://github.com/octref/vscode-electron-debug/tree/master/electron-quick-start&lt;/a&gt;</source>
          <target state="translated">这是一个预配置的项目，您可以下载并直接在VSCode中进行调试：&lt;a href=&quot;https://github.com/octref/vscode-electron-debug/tree/master/electron-quick-start&quot;&gt;https&lt;/a&gt; : //github.com/octref/vscode-electron-debug/tree/master/electron-quick-start</target>
        </trans-unit>
        <trans-unit id="7511063de052867ece2aea3d8c3eafd004df2d88" translate="yes" xml:space="preserve">
          <source>Here is an example of the 1.x strategy:</source>
          <target state="translated">下面是一个1.x策略的例子。</target>
        </trans-unit>
        <trans-unit id="536ab89c6edf5aadcd8667b06d61bfd9d8b1c469" translate="yes" xml:space="preserve">
          <source>Here is an example that shows how to use In-App Purchases in Electron. You'll have to replace the product ids by the identifiers of the products created with iTunes Connect (the identifier of &lt;code&gt;com.example.app.product1&lt;/code&gt; is &lt;code&gt;product1&lt;/code&gt;). Note that you have to listen to the &lt;code&gt;transactions-updated&lt;/code&gt; event as soon as possible in your app.</source>
          <target state="translated">以下示例显示了如何在Electron中使用应用内购买。您必须将商品ID替换为使用iTunes Connect创建的产品的标识符（ &lt;code&gt;com.example.app.product1&lt;/code&gt; 的标识符为 &lt;code&gt;product1&lt;/code&gt; ）。请注意，您必须尽快在应用程序中收听 &lt;code&gt;transactions-updated&lt;/code&gt; 事件。</target>
        </trans-unit>
        <trans-unit id="6d95a763e8b803427825f074147dbb618bb8baf8" translate="yes" xml:space="preserve">
          <source>Here's a very simple example of creating a custom Jump List:</source>
          <target state="translated">下面是一个非常简单的创建自定义跳转列表的例子。</target>
        </trans-unit>
        <trans-unit id="a2e3007d0832120c6f9a0f910d309296102f99f4" translate="yes" xml:space="preserve">
          <source>Hides all application windows without minimizing them.</source>
          <target state="translated">隐藏所有应用程序窗口而不将其最小化。</target>
        </trans-unit>
        <trans-unit id="c6b1b93e545fd554605800d785e996e3dc0eb5ee" translate="yes" xml:space="preserve">
          <source>Hides the dock icon.</source>
          <target state="translated">隐藏Dock图标。</target>
        </trans-unit>
        <trans-unit id="5a43dc7f2f465c2745f7cb820f2abef02d340442" translate="yes" xml:space="preserve">
          <source>Hides the window.</source>
          <target state="translated">隐藏窗口。</target>
        </trans-unit>
        <trans-unit id="ef8f36f42eba0b8668da702476cc74241114add9" translate="yes" xml:space="preserve">
          <source>High Resolution Image</source>
          <target state="translated">高分辨率图像</target>
        </trans-unit>
        <trans-unit id="c9e6b253fc34a7155f97dc0aab1c389d34cafdad" translate="yes" xml:space="preserve">
          <source>Hindi</source>
          <target state="translated">Hindi</target>
        </trans-unit>
        <trans-unit id="90ccd6497400b5576aeca1bd94af74aae1e0a250" translate="yes" xml:space="preserve">
          <source>History</source>
          <target state="translated">History</target>
        </trans-unit>
        <trans-unit id="9b0ec9db7c0e86a129f9fa1bab0da6d3e2b91722" translate="yes" xml:space="preserve">
          <source>Hooks a windows message. The &lt;code&gt;callback&lt;/code&gt; is called when the message is received in the WndProc.</source>
          <target state="translated">挂钩Windows消息。在WndProc中收到消息时，将 &lt;code&gt;callback&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3960ec4ca5fb5e5d8cdb2cc1c5121c003e426517" translate="yes" xml:space="preserve">
          <source>Host</source>
          <target state="translated">Host</target>
        </trans-unit>
        <trans-unit id="32db97527de21c253684c122aa8c360cbda6c820" translate="yes" xml:space="preserve">
          <source>How do I enable it?</source>
          <target state="translated">如何启用?</target>
        </trans-unit>
        <trans-unit id="119099b76d7b39cb325429aae09a037d7d8aaba2" translate="yes" xml:space="preserve">
          <source>How do I flip the fuses?</source>
          <target state="translated">如何翻转保险丝?</target>
        </trans-unit>
        <trans-unit id="0e9ab2e20e4caad9a56c772925e1cc937d765a03" translate="yes" xml:space="preserve">
          <source>How do I put the results of the spellchecker in my context menu?</source>
          <target state="translated">我如何将拼写检查器的结果放在我的上下文菜单中?</target>
        </trans-unit>
        <trans-unit id="e31334bebb7eaceff6fb89067353d34e43f8191c" translate="yes" xml:space="preserve">
          <source>How to Contribute in Issues</source>
          <target state="translated">如何在议题中投稿</target>
        </trans-unit>
        <trans-unit id="d430e9707eeeb4d553faa161d543b89fb53d8001" translate="yes" xml:space="preserve">
          <source>How to Contribute to Issues</source>
          <target state="translated">如何对问题做出贡献</target>
        </trans-unit>
        <trans-unit id="5a8e3da66fa923f0ece07325d1e26b9f23216424" translate="yes" xml:space="preserve">
          <source>How to Submit Your App</source>
          <target state="translated">如何提交您的应用程序</target>
        </trans-unit>
        <trans-unit id="5d6d0e6a86f87e3c9dad5af1e78f722b2a0eddbd" translate="yes" xml:space="preserve">
          <source>How to enable the spellchecker?</source>
          <target state="translated">如何启用拼写检查程序?</target>
        </trans-unit>
        <trans-unit id="77a4a1a408e307fcb086698bb67fe202442adacb" translate="yes" xml:space="preserve">
          <source>How to install native modules</source>
          <target state="translated">如何安装本地模块</target>
        </trans-unit>
        <trans-unit id="e219f690385e428b335d5c1debc806bb7f162143" translate="yes" xml:space="preserve">
          <source>How to load a DevTools Extension</source>
          <target state="translated">如何加载DevTools扩展</target>
        </trans-unit>
        <trans-unit id="7ef7dc5d8fc5fe32ebda37262b6105258e86dfac" translate="yes" xml:space="preserve">
          <source>How to remove a DevTools Extension</source>
          <target state="translated">如何删除DevTools扩展</target>
        </trans-unit>
        <trans-unit id="015aa1fe4ce333a7a911acd12759ad11420c4555" translate="yes" xml:space="preserve">
          <source>How to set the languages the spellchecker uses?</source>
          <target state="translated">如何设置拼写检查器使用的语言?</target>
        </trans-unit>
        <trans-unit id="42990de13e12a6f3fe14f015c9fa5f168409cf6f" translate="yes" xml:space="preserve">
          <source>How to share data between web pages?</source>
          <target state="translated">如何在网页之间共享数据?</target>
        </trans-unit>
        <trans-unit id="006cb42291b4d2a8b6209f1743122eaed8f3b45c" translate="yes" xml:space="preserve">
          <source>How to use Node.js and Electron APIs.</source>
          <target state="translated">如何使用Node.js和Electron APIs。</target>
        </trans-unit>
        <trans-unit id="a592ebd85a69060d7634d9886b10816e9eb5584f" translate="yes" xml:space="preserve">
          <source>How?</source>
          <target state="translated">How?</target>
        </trans-unit>
        <trans-unit id="3dd7ebb42cfd90c92c21fd773d0d3b2eaa35204b" translate="yes" xml:space="preserve">
          <source>However if you are using the built-in module but still getting this error, it is very likely you are using the module in the wrong process. For example &lt;code&gt;electron.app&lt;/code&gt; can only be used in the main process, while &lt;code&gt;electron.webFrame&lt;/code&gt; is only available in renderer processes.</source>
          <target state="translated">但是，如果您使用内置模块但仍然出现此错误，则很可能您在错误的过程中使用了该模块。例如， &lt;code&gt;electron.app&lt;/code&gt; 只能在主进程中使用，而 &lt;code&gt;electron.webFrame&lt;/code&gt; 仅在渲染器进程中可用。</target>
        </trans-unit>
        <trans-unit id="6b7b787445f7ea095e630d9e3c933f0698df2d83" translate="yes" xml:space="preserve">
          <source>However, if your app can run untrusted content and even if you &lt;a href=&quot;../api/sandbox-option&quot;&gt;sandbox&lt;/a&gt; your renderer processes accordingly, the &lt;code&gt;remote&lt;/code&gt; module makes it easy for malicious code to escape the sandbox and have access to system resources via the higher privileges of the main process. Therefore, it should be disabled in such circumstances.</source>
          <target state="translated">但是，如果您的应用程序可以运行不受信任的内容，并且即使您对呈现器进行相应的&lt;a href=&quot;../api/sandbox-option&quot;&gt;沙箱&lt;/a&gt;处理，则 &lt;code&gt;remote&lt;/code&gt; 模块也可以使恶意代码更容易逃脱沙箱并通过主进程的更高特权来访问系统资源。因此，在这种情况下应禁用它。</target>
        </trans-unit>
        <trans-unit id="27e5f816b5ffe68e25d9539e555bfe6e858dff61" translate="yes" xml:space="preserve">
          <source>However, if your app can run untrusted content and even if you &lt;a href=&quot;api/sandbox-option&quot;&gt;sandbox&lt;/a&gt; your renderer processes accordingly, the &lt;code&gt;remote&lt;/code&gt; module makes it easy for malicious code to escape the sandbox and have access to system resources via the higher privileges of the main process. Therefore, it should be disabled in such circumstances.</source>
          <target state="translated">但是，如果您的应用程序可以运行不受信任的内容，并且即使您对呈现器进行相应的&lt;a href=&quot;api/sandbox-option&quot;&gt;沙箱&lt;/a&gt;处理，则 &lt;code&gt;remote&lt;/code&gt; 模块也可以使恶意代码更容易逃脱沙箱并通过主进程的更高特权来访问系统资源。因此，在这种情况下应禁用它。</target>
        </trans-unit>
        <trans-unit id="de558fe6876f5a554a359adecff730a0c6725485" translate="yes" xml:space="preserve">
          <source>However, it is recommended to avoid using the &lt;code&gt;remote&lt;/code&gt; module altogether.</source>
          <target state="translated">但是，建议避免完全使用 &lt;code&gt;remote&lt;/code&gt; 模块。</target>
        </trans-unit>
        <trans-unit id="20ce304447aa2efbe1f8ace27ad4da722ab8973b" translate="yes" xml:space="preserve">
          <source>However, we understand that requirements outside our wildest imagination may exist, so if you're looking for something like Electron that runs on Windows XP, the NW.js legacy release might be the right fit for you.</source>
          <target state="translated">然而,我们理解可能存在超出我们最疯狂想象的要求,所以如果你正在寻找像Electron这样可以在Windows XP上运行的东西,NW.js传统版本可能是适合你的。</target>
        </trans-unit>
        <trans-unit id="80cb96f852d1ce7ae9b00c59c13912122674f7ce" translate="yes" xml:space="preserve">
          <source>Hungarian</source>
          <target state="translated">Hungarian</target>
        </trans-unit>
        <trans-unit id="4663bd433a3403bb10d42d1a6d961eb823a20381" translate="yes" xml:space="preserve">
          <source>I can not use jQuery/RequireJS/Meteor/AngularJS in Electron.</source>
          <target state="translated">我无法在Electron中使用jQuery/RequireJS/Meteor/AngularJS。</target>
        </trans-unit>
        <trans-unit id="2fff4c2349e41985a187ff34f8c6f944604a97df" translate="yes" xml:space="preserve">
          <source>I used to provide APIs from my preload script using &lt;code&gt;window.X = apiObject&lt;/code&gt; now what?</source>
          <target state="translated">我以前使用 &lt;code&gt;window.X = apiObject&lt;/code&gt; 从预加载脚本中提供API，现在呢？</target>
        </trans-unit>
        <trans-unit id="d16e7df7f833569127024b8ec6cd77f88623e120" translate="yes" xml:space="preserve">
          <source>I'm being asked for a username/password for chromium-internal.googlesource.com</source>
          <target state="translated">我被要求提供chromium-internal.googlesource.com的用户名/密码。</target>
        </trans-unit>
        <trans-unit id="aa130cab90e070fea7cd0266d20e2823a9c3cc5b" translate="yes" xml:space="preserve">
          <source>I.e. This method returns &lt;code&gt;true&lt;/code&gt; if your process is the primary instance of your application and your app should continue loading. It returns &lt;code&gt;false&lt;/code&gt; if your process should immediately quit as it has sent its parameters to another instance that has already acquired the lock.</source>
          <target state="translated">即，如果您的进程是应用程序的主要实例，并且您的应用程序应继续加载，则此方法返回 &lt;code&gt;true&lt;/code&gt; 。如果您的进程已将其参数发送到已获取该锁的另一个实例，则应立即退出，它将返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f6443e9e80d7ff5014bd87a1c30a8be0edfc3cec" translate="yes" xml:space="preserve">
          <source>IDEA - &quot;On the Design and Security of Block Ciphers&quot; book by X. Lai</source>
          <target state="translated">IDEA--《论块状密码的设计与安全》一书,作者:赖X。</target>
        </trans-unit>
        <trans-unit id="2d2784b01eb1135581b7a56e053cc184e7b456aa" translate="yes" xml:space="preserve">
          <source>IDL</source>
          <target state="translated">IDL</target>
        </trans-unit>
        <trans-unit id="d0f99dc7f22f9fd48a428327fd8c96820f8a762f" translate="yes" xml:space="preserve">
          <source>IME</source>
          <target state="translated">IME</target>
        </trans-unit>
        <trans-unit id="7c68728ac018ddf5a25a386395b4b5962be1aaf6" translate="yes" xml:space="preserve">
          <source>IOCounters</source>
          <target state="translated">IOCounters</target>
        </trans-unit>
        <trans-unit id="1fd209e564e2f820f91ecf2931819f28bad1b99c" translate="yes" xml:space="preserve">
          <source>IOCounters Object</source>
          <target state="translated">IOCounters对象</target>
        </trans-unit>
        <trans-unit id="f4aa7e6cdf843e01253be3fd2becaee731842f78" translate="yes" xml:space="preserve">
          <source>IPC</source>
          <target state="translated">IPC</target>
        </trans-unit>
        <trans-unit id="890a7404cde81122526f825a731ae1012afa8fc4" translate="yes" xml:space="preserve">
          <source>IPC stands for Inter-Process Communication. Electron uses IPC to send serialized JSON messages between the &lt;a href=&quot;#main-process&quot;&gt;main&lt;/a&gt; and &lt;a href=&quot;#renderer-process&quot;&gt;renderer&lt;/a&gt; processes.</source>
          <target state="translated">IPC代表进程间通信。Electron使用IPC在&lt;a href=&quot;#main-process&quot;&gt;主&lt;/a&gt;进程和&lt;a href=&quot;#renderer-process&quot;&gt;渲染器&lt;/a&gt;进程之间发送序列化的JSON消息。</target>
        </trans-unit>
        <trans-unit id="4908b12c142b7bd671d43e5185556c158bb0999c" translate="yes" xml:space="preserve">
          <source>Icelandic</source>
          <target state="translated">Icelandic</target>
        </trans-unit>
        <trans-unit id="b1faf3607f00a15313ffe083e5f26329c2c9887b" translate="yes" xml:space="preserve">
          <source>Icon Overlays in Taskbar</source>
          <target state="translated">任务栏中的图标覆盖</target>
        </trans-unit>
        <trans-unit id="4b58f92cb05655184beba35216e41c88e52c8808" translate="yes" xml:space="preserve">
          <source>Icon overlays serve as a contextual notification of status, and are intended to negate the need for a separate notification area status icon to communicate that information to the user. For instance, the new mail status in Microsoft Outlook, currently shown in the notification area, can now be indicated through an overlay on the taskbar button. Again, you must decide during your development cycle which method is best for your application. Overlay icons are intended to supply important, long-standing status or notifications such as network status, messenger status, or new mail. The user should not be presented with constantly changing overlays or animations.</source>
          <target state="translated">图标覆盖作为状态的上下文通知,其目的是否定单独的通知区域状态图标向用户传达该信息的必要性。例如,微软Outlook中的新邮件状态,目前显示在通知区,现在可以通过任务栏按钮上的覆盖来指示。同样,你必须在开发周期内决定哪种方法最适合你的应用程序。叠加图标旨在提供重要的、长期存在的状态或通知,如网络状态、信使状态或新邮件。用户不应该看到不断变化的覆盖或动画。</target>
        </trans-unit>
        <trans-unit id="1431424e0aa0d00794b34d04eefeac90cc58d9b8" translate="yes" xml:space="preserve">
          <source>Icons associated with certain file extensions, like &lt;code&gt;.mp3&lt;/code&gt;, &lt;code&gt;.png&lt;/code&gt;, etc.</source>
          <target state="translated">与某些文件扩展名相关的图标，例如 &lt;code&gt;.mp3&lt;/code&gt; ， &lt;code&gt;.png&lt;/code&gt; 等。</target>
        </trans-unit>
        <trans-unit id="b87b9c7cefbb13a341bb1187e3a49551471edda0" translate="yes" xml:space="preserve">
          <source>Icons inside the file itself, like &lt;code&gt;.exe&lt;/code&gt;, &lt;code&gt;.dll&lt;/code&gt;, &lt;code&gt;.ico&lt;/code&gt;.</source>
          <target state="translated">文件本身内部的图标，例如 &lt;code&gt;.exe&lt;/code&gt; ， &lt;code&gt;.dll&lt;/code&gt; 和 &lt;code&gt;.ico&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="186bfe94308b4c8b9444f82e3fabdd4996e0d6b2" translate="yes" xml:space="preserve">
          <source>Ideally, the pull request will pass (&quot;be green&quot;) on all of CI's platforms. This means that all tests pass and there are no linting errors. However, it is not uncommon for the CI infrastructure itself to fail on specific platforms or for so-called &quot;flaky&quot; tests to fail (&quot;be red&quot;). Each CI failure must be manually inspected to determine the cause.</source>
          <target state="translated">理想情况下,拉取请求将在CI的所有平台上通过(&quot;绿色&quot;)。这意味着所有的测试都通过了,而且不存在任何掉线错误。然而,CI基础架构本身在特定平台上失败或所谓的 &quot;片状 &quot;测试失败(&quot;呈红色&quot;)的情况并不少见。每一次CI失败都必须进行人工检查以确定原因。</target>
        </trans-unit>
        <trans-unit id="c950e5fcb340b66b792a98a1b860f73128a02acd" translate="yes" xml:space="preserve">
          <source>Identify the image you wish to modify.</source>
          <target state="translated">确定您要修改的图像。</target>
        </trans-unit>
        <trans-unit id="9daef1fc4f2699e1ced9a8bca6a46f684613c300" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;https://alienryderflex.com/sub_pixel/&quot;&gt;sub-pixel anti-aliasing&lt;/a&gt; is deactivated, then fonts on LCD screens can look blurry. Example:</source>
          <target state="translated">如果禁用了&lt;a href=&quot;https://alienryderflex.com/sub_pixel/&quot;&gt;亚像素抗锯齿&lt;/a&gt;功能，则LCD屏幕上的字体可能会变得模糊。例：</target>
        </trans-unit>
        <trans-unit id="e3388f8c3e24c8f4cfd0feb826cdf4bd66d6bb3a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;app.getPath('logs')&lt;/code&gt; is called without called &lt;code&gt;app.setAppLogsPath()&lt;/code&gt; being called first, a default log directory will be created equivalent to calling &lt;code&gt;app.setAppLogsPath()&lt;/code&gt; without a &lt;code&gt;path&lt;/code&gt; parameter.</source>
          <target state="translated">如果在没有先调用 &lt;code&gt;app.setAppLogsPath()&lt;/code&gt; 的情况下调用 &lt;code&gt;app.getPath('logs')&lt;/code&gt; ，则将创建一个默认日志目录，等效于在不使用 &lt;code&gt;path&lt;/code&gt; 参数的情况下调用 &lt;code&gt;app.setAppLogsPath()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9241deb084a6d5babf2886e1ab3012b3abf8b22b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;backgroundThrottling&lt;/code&gt; is disabled, the visibility state will remain &lt;code&gt;visible&lt;/code&gt; even if the window is minimized, occluded, or hidden.</source>
          <target state="translated">如果禁用 &lt;code&gt;backgroundThrottling&lt;/code&gt; ，则即使窗口被最小化，遮挡或隐藏， &lt;code&gt;visible&lt;/code&gt; 性状态也将保持可见。</target>
        </trans-unit>
        <trans-unit id="2ab64bd4fbc9f13434f020a4d72f5c0bab58107c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;callback&lt;/code&gt; is called without a username or password, the authentication request will be cancelled and the authentication error will be returned to the page.</source>
          <target state="translated">如果在没有用户名或密码的情况下 &lt;code&gt;callback&lt;/code&gt; ，则身份验证请求将被取消，并且身份验证错误将返回到页面。</target>
        </trans-unit>
        <trans-unit id="271d04a59e510c2f17aaa6bc0a410f5e69008aa0" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;categories&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt; the previously set custom Jump List (if any) will be replaced by the standard Jump List for the app (managed by Windows).</source>
          <target state="translated">如果 &lt;code&gt;categories&lt;/code&gt; 为 &lt;code&gt;null&lt;/code&gt; ,则先前设置的自定义跳转列表（如果有）将被应用程序的标准跳转列表（由Windows管理）替换。</target>
        </trans-unit>
        <trans-unit id="d7d5f50e7e236c4c3873874792fb7811f4c1a44b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;gclient sync&lt;/code&gt; is interrupted the git tree may be left in a bad state, leading to a cryptic message when running &lt;code&gt;gclient sync&lt;/code&gt; in the future:</source>
          <target state="translated">如果 &lt;code&gt;gclient sync&lt;/code&gt; 被中断，则git树可能会处于错误状态，从而在将来运行 &lt;code&gt;gclient sync&lt;/code&gt; 时导致出现隐秘消息：</target>
        </trans-unit>
        <trans-unit id="36c123521ae2817ad24173691362787c56b44843" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;git-import-patches -3&lt;/code&gt; encounters a merge conflict that it can't resolve automatically, it will pause and allow you to resolve the conflict manually. Once you have resolved the conflict, &lt;code&gt;git add&lt;/code&gt; the resolved files and continue to apply the rest of the patches by running &lt;code&gt;git am --continue&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;git-import-patches -3&lt;/code&gt; 遇到无法自动解决的合并冲突，它将暂停并允许您手动解决冲突。解决冲突后， &lt;code&gt;git add&lt;/code&gt; 已解决的文件，并通过运行 &lt;code&gt;git am --continue&lt;/code&gt; 继续应用其余补丁。</target>
        </trans-unit>
        <trans-unit id="8a0633c123f77fc0c055ad23664ec2cd171adc37" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;listener&lt;/code&gt; returns a Promise, the eventual result of the promise will be returned as a reply to the remote caller. Otherwise, the return value of the listener will be used as the value of the reply.</source>
          <target state="translated">如果 &lt;code&gt;listener&lt;/code&gt; 返回了Promise，则Promise的最终结果将作为对远程调用者的答复而返回。否则，侦听器的返回值将用作回复的值。</target>
        </trans-unit>
        <trans-unit id="556f915b2e5f20804107a01cb875b2dc9074fb1f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;partition&lt;/code&gt; starts with &lt;code&gt;persist:&lt;/code&gt;, the page will use a persistent session available to all pages in the app with the same &lt;code&gt;partition&lt;/code&gt;. if there is no &lt;code&gt;persist:&lt;/code&gt; prefix, the page will use an in-memory session. If the &lt;code&gt;partition&lt;/code&gt; is empty then default session of the app will be returned.</source>
          <target state="translated">如果 &lt;code&gt;partition&lt;/code&gt; 以 &lt;code&gt;persist:&lt;/code&gt; 开始，则页面将使用一个持久会话，该会话可用于应用程序中具有相同 &lt;code&gt;partition&lt;/code&gt; 的所有页面。如果没有 &lt;code&gt;persist:&lt;/code&gt; 前缀，则该页面将使用内存会话。如果 &lt;code&gt;partition&lt;/code&gt; 为空，则将返回应用程序的默认会话。</target>
        </trans-unit>
        <trans-unit id="a67226ca7a777cfee22c5e1499e50c2b4b369ea4" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;scaleFactor&lt;/code&gt; is passed, this will return the aspect ratio corresponding to the image representation most closely matching the passed value.</source>
          <target state="translated">如果传递了 &lt;code&gt;scaleFactor&lt;/code&gt; ，则将返回与传递的值最接近的图像表示相对应的宽高比。</target>
        </trans-unit>
        <trans-unit id="ef9a1b0a2183ac9ff1b8bccaa4dea34f40d8277c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;scaleFactor&lt;/code&gt; is passed, this will return the size corresponding to the image representation most closely matching the passed value.</source>
          <target state="translated">如果传递了 &lt;code&gt;scaleFactor&lt;/code&gt; ，则将返回与所传递的值最接近的图像表示相对应的大小。</target>
        </trans-unit>
        <trans-unit id="06b1dcac461294816a12b307466803637f810c1d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;timeoutType&lt;/code&gt; is set to 'never', the notification never expires. It stays open until closed by the calling API or the user.</source>
          <target state="translated">如果 &lt;code&gt;timeoutType&lt;/code&gt; 设置为&amp;ldquo; never&amp;rdquo;，则通知永不过期。它保持打开状态，直到被调用API或用户关闭为止。</target>
        </trans-unit>
        <trans-unit id="159278b031266e4365b8e89cb754ee1575e08111" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;offscreen rendering&lt;/em&gt; is enabled and not painting, start painting.</source>
          <target state="translated">如果启用了&lt;em&gt;屏幕外渲染&lt;/em&gt;且未绘制，请开始绘制。</target>
        </trans-unit>
        <trans-unit id="727cf6c7299aabc319e19a37a009db3233858a37" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;offscreen rendering&lt;/em&gt; is enabled and painting, stop painting.</source>
          <target state="translated">如果启用了&lt;em&gt;屏幕外渲染&lt;/em&gt;并绘制，请停止绘制。</target>
        </trans-unit>
        <trans-unit id="0341ea0a3b398358cb52497946e862feaf676cae" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;offscreen rendering&lt;/em&gt; is enabled invalidates the frame and generates a new one through the &lt;code&gt;'paint'&lt;/code&gt; event.</source>
          <target state="translated">如果启用了&lt;em&gt;屏幕外渲染，&lt;/em&gt;则会使帧无效，并通过 &lt;code&gt;'paint'&lt;/code&gt; 事件生成一个新帧。</target>
        </trans-unit>
        <trans-unit id="71adc365e97dd03614eb0aaea1310a81945c3c0a" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;offscreen rendering&lt;/em&gt; is enabled sets the frame rate to the specified number. Only values between 1 and 60 are accepted.</source>
          <target state="translated">如果启用了&lt;em&gt;屏幕外渲染，&lt;/em&gt;则将帧频设置为指定的数字。仅接受1到60之间的值。</target>
        </trans-unit>
        <trans-unit id="4722ea2a3cf0c60dab14c9eaa28ad6f7054a8910" translate="yes" xml:space="preserve">
          <source>If Electron is running under a different user account, select the &lt;code&gt;Show processes from all users&lt;/code&gt; check box. Notice that depending on how many BrowserWindows your app opened, you will see multiple processes. A typical one-window app will result in Visual Studio presenting you with two &lt;code&gt;Electron.exe&lt;/code&gt; entries - one for the main process and one for the renderer process. Since the list only gives you names, there's currently no reliable way of figuring out which is which.</source>
          <target state="translated">如果Electron在其他用户帐户下运行，请选中&amp;ldquo; &lt;code&gt;Show processes from all users&lt;/code&gt; 复选框。请注意，根据您的应用程序打开了多少个BrowserWindows，您将看到多个进程。一个典型的单窗口应用程序将在Visual Studio中为您提供两个 &lt;code&gt;Electron.exe&lt;/code&gt; 条目-一个用于主进程，一个用于渲染器进程。由于列表仅列出您的姓名，因此目前尚无可靠的方法来确定哪个是哪个。</target>
        </trans-unit>
        <trans-unit id="dfa45c90a49b752076cafae378cbfb0fc75ef031" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;BrowserWindow&lt;/code&gt; is created with &lt;code&gt;show: false&lt;/code&gt;, the initial visibility state will be &lt;code&gt;visible&lt;/code&gt; despite the window actually being hidden.</source>
          <target state="translated">如果使用 &lt;code&gt;show: false&lt;/code&gt; 创建 &lt;code&gt;BrowserWindow&lt;/code&gt; ,则尽管窗口实际上是隐藏的，但初始可见性状态仍 &lt;code&gt;visible&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e0338bcfcb4104ead00fe9414b0bc6c798aebd82" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;callback&lt;/code&gt; is passed, the API call will be asynchronous and the result will be passed via &lt;code&gt;callback(filename)&lt;/code&gt;.</source>
          <target state="translated">如果传递了 &lt;code&gt;callback&lt;/code&gt; ，则API调用将是异步的，结果将通过 &lt;code&gt;callback(filename)&lt;/code&gt; 传递。</target>
        </trans-unit>
        <trans-unit id="71e356d72e9973e91887cd4f40f232a75076438d" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;callback&lt;/code&gt; is passed, the API call will be asynchronous and the result will be passed via &lt;code&gt;callback(filenames)&lt;/code&gt;.</source>
          <target state="translated">如果传递了 &lt;code&gt;callback&lt;/code&gt; ，则API调用将是异步的，结果将通过 &lt;code&gt;callback(filenames)&lt;/code&gt; 传递。</target>
        </trans-unit>
        <trans-unit id="e3791cf12a77a8315d2f8d2c28114944e087288f" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;callback&lt;/code&gt; is passed, the dialog will not block the process. The API call will be asynchronous and the result will be passed via &lt;code&gt;callback(response)&lt;/code&gt;.</source>
          <target state="translated">如果传递了 &lt;code&gt;callback&lt;/code&gt; ，则对话框不会阻止该过程。API调用将是异步的，结果将通过 &lt;code&gt;callback(response)&lt;/code&gt; 传递。</target>
        </trans-unit>
        <trans-unit id="933de00af7bd0e61f4522a7eb8447733c9fb6a06" translate="yes" xml:space="preserve">
          <source>If a diff section has no instances of &lt;code&gt;deps/V8&lt;/code&gt;, remove it altogether.</source>
          <target state="translated">如果diff节中没有 &lt;code&gt;deps/V8&lt;/code&gt; 的实例，则将其完全删除。</target>
        </trans-unit>
        <trans-unit id="ce51a26435dc6c860dd5b7261fd1da0add0d6ab9" translate="yes" xml:space="preserve">
          <source>If a particular beta release is &lt;em&gt;generally regarded&lt;/em&gt; as stable, it will be re-released as a stable build, changing only the version information. e.g. &lt;code&gt;2.0.0&lt;/code&gt;.</source>
          <target state="translated">如果&lt;em&gt;通常将&lt;/em&gt;某个特定的beta版本&lt;em&gt;视为&lt;/em&gt;稳定版本，则它将重新发布为稳定版本，仅更改版本信息。例如 &lt;code&gt;2.0.0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3381ab7d07ff7f44a23923b82111564a74ce1259" translate="yes" xml:space="preserve">
          <source>If a particular beta release is &lt;em&gt;generally regarded&lt;/em&gt; as stable, it will be re-released as a stable build, changing only the version information. e.g. &lt;code&gt;2.0.0&lt;/code&gt;. After the first stable, all changes must be backwards-compatible bug or security fixes.</source>
          <target state="translated">如果&lt;em&gt;通常将&lt;/em&gt;某个特定的beta版本&lt;em&gt;视为&lt;/em&gt;稳定版本，则它将重新发布为稳定版本，仅更改版本信息。例如 &lt;code&gt;2.0.0&lt;/code&gt; 。在第一个稳定版本之后，所有更改都必须是向后兼容的错误或安全修复程序。</target>
        </trans-unit>
        <trans-unit id="9cbb2f79307ba23d0b161591cc6814a5de337e7d" translate="yes" xml:space="preserve">
          <source>If a recording is already running, the promise will be immediately resolved, as only one trace operation can be in progress at a time.</source>
          <target state="translated">如果一个录音已经在运行,承诺将被立即解决,因为一次只能进行一个跟踪操作。</target>
        </trans-unit>
        <trans-unit id="1a3c6692afccf3587e8e76384b39c2f121c66aaa" translate="yes" xml:space="preserve">
          <source>If allowed changes need to be made once a release is beta, they are applied and the prerelease tag is incremented, e.g. &lt;code&gt;2.0.0-beta.2&lt;/code&gt;.</source>
          <target state="translated">如果在beta版本发布后需要进行允许的更改，则应用更改并增加prerelease标签，例如 &lt;code&gt;2.0.0-beta.2&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="62a428d1aa74808bcd0676cdc2f0ecc3426101a5" translate="yes" xml:space="preserve">
          <source>If an application has exceptional circumstances and needs to stay on an unsupported series of Electron, developers can silence the end-of-support warning by omitting the final release from the app's &lt;code&gt;package.json&lt;/code&gt;&lt;code&gt;devDependencies&lt;/code&gt;. For example, since the 1-6-x series ended with an end-of-support 1.6.18 release, developers could choose to stay in the 1-6-x series without warnings with &lt;code&gt;devDependency&lt;/code&gt; of &lt;code&gt;&quot;electron&quot;: 1.6.0 - 1.6.17&lt;/code&gt;.</source>
          <target state="translated">如果应用程序在特殊情况下需要继续使用不受支持的Electron系列软件，则开发人员可以通过从应用程序的 &lt;code&gt;package.json&lt;/code&gt; &lt;code&gt;devDependencies&lt;/code&gt; 中省略最终版本来使支持终止警告保持沉默。例如，由于1-6-x系列以支持终止的1.6.18版本结束，因此开发人员可以选择在1-6-x系列中使用，而不用带有 &lt;code&gt;&quot;electron&quot;: 1.6.0 - 1.6.17&lt;/code&gt; &lt;code&gt;devDependency&lt;/code&gt; 的警告：1.6.0- 1.6.17。</target>
        </trans-unit>
        <trans-unit id="227ed419db90b65ed7017e1ab78195d8ce8a48ed" translate="yes" xml:space="preserve">
          <source>If an argument or a method is unique to certain platforms, those platforms are denoted using a space-delimited italicized list following the datatype. Values can be &lt;code&gt;macOS&lt;/code&gt;, &lt;code&gt;Windows&lt;/code&gt; or &lt;code&gt;Linux&lt;/code&gt;.</source>
          <target state="translated">如果参数或方法对于某些平台是唯一的，则在数据类型后使用空格分隔的斜体列表表示这些平台。值可以是 &lt;code&gt;macOS&lt;/code&gt; ， &lt;code&gt;Windows&lt;/code&gt; 或 &lt;code&gt;Linux&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b3b63c9e15d16c79e73b80be24bb123149539714" translate="yes" xml:space="preserve">
          <source>If both commands printed a version number, you are all set! Before you get started, you might want to install a &lt;a href=&quot;#a-good-editor&quot;&gt;code editor&lt;/a&gt; suited for JavaScript development.</source>
          <target state="translated">如果两个命令都打印了版本号，则说明一切就绪！在开始之前，您可能需要安装适合JavaScript开发的&lt;a href=&quot;#a-good-editor&quot;&gt;代码编辑器&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3bb932b3c9db14b7bf8934cd43d3008c15bd7ef5" translate="yes" xml:space="preserve">
          <source>If building under Cygwin, you may see &lt;code&gt;bootstrap.py&lt;/code&gt; failed with following error:</source>
          <target state="translated">如果在Cygwin下进行构建，则可能会看到 &lt;code&gt;bootstrap.py&lt;/code&gt; 失败，并显示以下错误：</target>
        </trans-unit>
        <trans-unit id="3293c5bdfae6887ec9205c0f094060db05923daa" translate="yes" xml:space="preserve">
          <source>If done successfully, the command prompt should print something similar to this on startup:</source>
          <target state="translated">如果成功完成,命令提示符应该在启动时打印类似这样的内容。</target>
        </trans-unit>
        <trans-unit id="0c921c76717bc0c31716bfb5e7e1d21ffd8545b4" translate="yes" xml:space="preserve">
          <source>If either of these requirements are not met the button simply won't appear.</source>
          <target state="translated">如果不满足其中任何一个要求,按钮就不会出现。</target>
        </trans-unit>
        <trans-unit id="24c200fa42489448d0578157380e7ed444fcfa81" translate="yes" xml:space="preserve">
          <source>If either of these requirements are not met the button won't appear.</source>
          <target state="translated">如果不满足其中任何一个要求,按钮就不会出现。</target>
        </trans-unit>
        <trans-unit id="6f7cf0c5d1b5e702650badf2be6e09235ead62c0" translate="yes" xml:space="preserve">
          <source>If future bug fixes or security patches need to be made once a release is stable, they are applied and the &lt;em&gt;patch&lt;/em&gt; version is incremented accordingly e.g. &lt;code&gt;2.0.1&lt;/code&gt;.</source>
          <target state="translated">如果在发行版稳定后需要进行将来的错误修复或安全补丁，请应用它们并相应地增加&lt;em&gt;补丁&lt;/em&gt;版本，例如 &lt;code&gt;2.0.1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2e630a63128205fbb59eba620d0c310d7bc845d6" translate="yes" xml:space="preserve">
          <source>If future bug fixes or security patches need to be made once a release is stable, they are applied and the &lt;em&gt;patch&lt;/em&gt; version is incremented e.g. &lt;code&gt;2.0.1&lt;/code&gt;.</source>
          <target state="translated">如果在发行版稳定后需要进行将来的错误修复或安全补丁，请应用它们并增加&lt;em&gt;补丁&lt;/em&gt;版本，例如 &lt;code&gt;2.0.1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="44ed5688e741dfaf087bcb72ad97d72432431f8e" translate="yes" xml:space="preserve">
          <source>If installation fails with an &lt;code&gt;EACCESS&lt;/code&gt; error you may need to &lt;a href=&quot;https://docs.npmjs.com/getting-started/fixing-npm-permissions&quot;&gt;fix your npm permissions&lt;/a&gt;.</source>
          <target state="translated">如果安装失败并出现 &lt;code&gt;EACCESS&lt;/code&gt; 错误，则可能需要&lt;a href=&quot;https://docs.npmjs.com/getting-started/fixing-npm-permissions&quot;&gt;修复npm权限&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="815eb8dd187b8fd58d929aed602225532bb831cc" translate="yes" xml:space="preserve">
          <source>If it is something like &lt;code&gt;node_modules/electron/index.js&lt;/code&gt;, then you have to either remove the npm &lt;code&gt;electron&lt;/code&gt; module, or rename it.</source>
          <target state="translated">如果它类似于 &lt;code&gt;node_modules/electron/index.js&lt;/code&gt; ，那么您必须删除npm &lt;code&gt;electron&lt;/code&gt; 模块，或者重命名它。</target>
        </trans-unit>
        <trans-unit id="a859a4ddd12f0e153e138787f8b6dc0429da67f2" translate="yes" xml:space="preserve">
          <source>If modules provide binaries for the usage in Electron, make sure to omit &lt;code&gt;--build-from-source&lt;/code&gt; and the &lt;code&gt;npm_config_build_from_source&lt;/code&gt; environment variable in order to take full advantage of the prebuilt binaries.</source>
          <target state="translated">如果模块提供二进制文件供Electron使用，请确保省略 &lt;code&gt;--build-from-source&lt;/code&gt; 和 &lt;code&gt;npm_config_build_from_source&lt;/code&gt; 环境变量，以便充分利用预构建的二进制文件。</target>
        </trans-unit>
        <trans-unit id="0a7fc7f45e66e5f0ebd9efc56a7fc45a306be368" translate="yes" xml:space="preserve">
          <source>If only the &lt;code&gt;height&lt;/code&gt; or the &lt;code&gt;width&lt;/code&gt; are specified then the current aspect ratio will be preserved in the resized image.</source>
          <target state="translated">如果仅指定 &lt;code&gt;height&lt;/code&gt; 或 &lt;code&gt;width&lt;/code&gt; ，则当前的纵横比将保留在调整大小后的图像中。</target>
        </trans-unit>
        <trans-unit id="9d9162a12eb8774afee04e7764955db85194d35b" translate="yes" xml:space="preserve">
          <source>If running the above command prompts you for a reboot, please restart your machine and run the above command again after a successful restart.</source>
          <target state="translated">如果运行上述命令提示您重启,请重新启动机器,重启成功后再运行上述命令。</target>
        </trans-unit>
        <trans-unit id="036a6278d7e573afe9f50df254cc0f6f441e101f" translate="yes" xml:space="preserve">
          <source>If some patches are no longer compatible with the Chromium code, fix compilation errors.</source>
          <target state="translated">如果某些补丁与Chromium代码不再兼容,请修复编译错误。</target>
        </trans-unit>
        <trans-unit id="7804d7554a30dcbd8e8d5d5a73b45bb44515f84f" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;type&lt;/code&gt; parameter is &lt;code&gt;custom&lt;/code&gt;, the &lt;code&gt;image&lt;/code&gt; parameter will hold the custom cursor image in a &lt;a href=&quot;api/native-image&quot;&gt;&lt;code&gt;NativeImage&lt;/code&gt;&lt;/a&gt;, and &lt;code&gt;scale&lt;/code&gt;, &lt;code&gt;size&lt;/code&gt; and &lt;code&gt;hotspot&lt;/code&gt; will hold additional information about the custom cursor.</source>
          <target state="translated">如果 &lt;code&gt;type&lt;/code&gt; 参数是 &lt;code&gt;custom&lt;/code&gt; ，则 &lt;code&gt;image&lt;/code&gt; 参数将在&lt;a href=&quot;api/native-image&quot;&gt; &lt;code&gt;NativeImage&lt;/code&gt; 中&lt;/a&gt;保存自定义光标图像，并且 &lt;code&gt;scale&lt;/code&gt; ， &lt;code&gt;size&lt;/code&gt; 和 &lt;code&gt;hotspot&lt;/code&gt; 将保存有关自定义光标的其他信息。</target>
        </trans-unit>
        <trans-unit id="45e3367833fa240b813e722d92da74d613a9b625" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;type&lt;/code&gt; parameter is &lt;code&gt;custom&lt;/code&gt;, the &lt;code&gt;image&lt;/code&gt; parameter will hold the custom cursor image in a &lt;a href=&quot;native-image&quot;&gt;&lt;code&gt;NativeImage&lt;/code&gt;&lt;/a&gt;, and &lt;code&gt;scale&lt;/code&gt;, &lt;code&gt;size&lt;/code&gt; and &lt;code&gt;hotspot&lt;/code&gt; will hold additional information about the custom cursor.</source>
          <target state="translated">如果 &lt;code&gt;type&lt;/code&gt; 参数是 &lt;code&gt;custom&lt;/code&gt; ，则 &lt;code&gt;image&lt;/code&gt; 参数会将自定义光标图像保存在&lt;a href=&quot;native-image&quot;&gt; &lt;code&gt;NativeImage&lt;/code&gt; 中&lt;/a&gt;，并且 &lt;code&gt;scale&lt;/code&gt; ， &lt;code&gt;size&lt;/code&gt; 和 &lt;code&gt;hotspot&lt;/code&gt; 将保存有关自定义光标的其他信息。</target>
        </trans-unit>
        <trans-unit id="3ff219d7e6ae5dba72d0fde282805fcedb6155cd" translate="yes" xml:space="preserve">
          <source>If the V8 context crashes, the DevTools will display this message.</source>
          <target state="translated">如果V8上下文崩溃,DevTools将显示此消息。</target>
        </trans-unit>
        <trans-unit id="3074d076d9db7915861fa0e3b33bf85ee60ae69e" translate="yes" xml:space="preserve">
          <source>If the above error persists, the &lt;a href=&quot;https://docs.npmjs.com/misc/config#unsafe-perm&quot;&gt;unsafe-perm&lt;/a&gt; flag may need to be set to true:</source>
          <target state="translated">如果以上错误仍然存​​在，则可能需要将&lt;a href=&quot;https://docs.npmjs.com/misc/config#unsafe-perm&quot;&gt;unsafe-perm&lt;/a&gt;标志设置为true：</target>
        </trans-unit>
        <trans-unit id="a2d265f7d654fec2f7394cb9d7e334abf7e454fc" translate="yes" xml:space="preserve">
          <source>If the bootstrap script is interrupted while using the git cache, it will leave the cache locked. To remove the lock, delete the files ending in &lt;code&gt;.lock&lt;/code&gt;:</source>
          <target state="translated">如果在使用git缓存时引导脚本被中断，它将使缓存锁定。要删除锁，请删除以 &lt;code&gt;.lock&lt;/code&gt; 结尾的文件：</target>
        </trans-unit>
        <trans-unit id="227b7a1a4062e4eb30d21b7dd3febec236df7570" translate="yes" xml:space="preserve">
          <source>If the files present in &lt;code&gt;hunspell_dictionaries.zip&lt;/code&gt; are available at &lt;code&gt;https://example.com/dictionaries/language-code.bdic&lt;/code&gt; then you should call this api with &lt;code&gt;ses.setSpellCheckerDictionaryDownloadURL('https://example.com/dictionaries/')&lt;/code&gt;. Please note the trailing slash. The URL to the dictionaries is formed as &lt;code&gt;${url}${filename}&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;hunspell_dictionaries.zip&lt;/code&gt; 中存在的文件可从 &lt;code&gt;https://example.com/dictionaries/language-code.bdic&lt;/code&gt; 获得，则应使用 &lt;code&gt;ses.setSpellCheckerDictionaryDownloadURL('https://example.com/dictionaries/')&lt;/code&gt; 调用此api。。请注意斜杠。字典的URL由 &lt;code&gt;${url}${filename}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d777a0bd454d49b73cbb2b36d2133d3780f64fba" translate="yes" xml:space="preserve">
          <source>If the menu bar is already visible, calling &lt;code&gt;setAutoHideMenuBar(true)&lt;/code&gt; won't hide it immediately.</source>
          <target state="translated">如果菜单栏已经可见，则调用 &lt;code&gt;setAutoHideMenuBar(true)&lt;/code&gt; 不会立即将其隐藏。</target>
        </trans-unit>
        <trans-unit id="b4d7bfe662ffcc3a7190fd9aa6a772d7dca99a41" translate="yes" xml:space="preserve">
          <source>If the menu bar is already visible, setting this property to &lt;code&gt;true&lt;/code&gt; won't hide it immediately.</source>
          <target state="translated">如果菜单栏已经可见，则将此属性设置为 &lt;code&gt;true&lt;/code&gt; 不会立即隐藏它。</target>
        </trans-unit>
        <trans-unit id="1445a9cf2dc0e174a88f6508636dd9e681cc9bbe" translate="yes" xml:space="preserve">
          <source>If the method returns an &lt;code&gt;Object&lt;/code&gt;, its structure can be specified using a colon followed by a newline then an unordered list of properties in the same style as function parameters.</source>
          <target state="translated">如果该方法返回 &lt;code&gt;Object&lt;/code&gt; ，则可以使用冒号，换行符以及与函数参数相同的样式的无序属性列表来指定其结构。</target>
        </trans-unit>
        <trans-unit id="0d81ef85e9492d93d3361d1faa21f3536481d645" translate="yes" xml:space="preserve">
          <source>If the notification has been shown before, this method will dismiss the previously shown notification and create a new one with identical properties.</source>
          <target state="translated">如果之前已经显示过通知,此方法将删除之前显示的通知,并创建一个具有相同属性的新通知。</target>
        </trans-unit>
        <trans-unit id="46d9109487375980a467e3475b5025f5fb361e14" translate="yes" xml:space="preserve">
          <source>If the remote object is leaked in the renderer process (e.g. stored in a map but never freed), the corresponding object in the main process will also be leaked, so you should be very careful not to leak remote objects.</source>
          <target state="translated">如果远程对象在渲染器进程中被泄露(如存储在地图中但从未释放),主进程中的相应对象也会被泄露,所以你应该非常小心,不要泄露远程对象。</target>
        </trans-unit>
        <trans-unit id="5e6949fb4346277bbe7db3c64a65fcba98095e0f" translate="yes" xml:space="preserve">
          <source>If the result of the executed code is a promise the callback result will be the resolved value of the promise. We recommend that you use the returned Promise to handle code that results in a Promise.</source>
          <target state="translated">如果执行代码的结果是一个promise,回调结果将是promise的解析值。我们建议你使用返回的promise来处理导致promise的代码。</target>
        </trans-unit>
        <trans-unit id="d826471e04a7d4fc05bf0a83dfdd02e0fb722702" translate="yes" xml:space="preserve">
          <source>If the script returns that your configuration is using an outdated security protocol, use your system's package manager to update Python to the latest version in the 2.7.x branch. Alternatively, visit &lt;a href=&quot;https://www.python.org/downloads/&quot;&gt;https://www.python.org/downloads/&lt;/a&gt; for detailed instructions.</source>
          <target state="translated">如果脚本返回您的配置正在使用过时的安全协议，请使用系统的程序包管理器将Python更新到2.7.x分支中的最新版本。另外，请访问&lt;a href=&quot;https://www.python.org/downloads/&quot;&gt;https://www.python.org/downloads/&lt;/a&gt;了解详细说明。</target>
        </trans-unit>
        <trans-unit id="e4adbc188f4d1ddc4f11150ad0b6625adc75ae52" translate="yes" xml:space="preserve">
          <source>If the script returns that your configuration is using an outdated security protocol, you can either update macOS to High Sierra or install a new version of Python 2.7.x. To upgrade Python, use &lt;a href=&quot;https://brew.sh/&quot;&gt;Homebrew&lt;/a&gt;:</source>
          <target state="translated">如果脚本返回您的配置正在使用过时的安全协议，则可以将macOS更新为High Sierra或安装新版本的Python2.7.x。要升级Python，请使用&lt;a href=&quot;https://brew.sh/&quot;&gt;Homebrew&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="9bc366f85878aed74d84170109b09f689d2913c9" translate="yes" xml:space="preserve">
          <source>If the service worker does not exist or is not running this method will throw an exception.</source>
          <target state="translated">如果服务工作者不存在或没有运行,本方法将抛出一个异常。</target>
        </trans-unit>
        <trans-unit id="07e786051fa4107bbbfff765db6fcd965cc9e749" translate="yes" xml:space="preserve">
          <source>If the size is unknown, it returns 0.</source>
          <target state="translated">如果大小未知,则返回0。</target>
        </trans-unit>
        <trans-unit id="0a6fe5b89f2dabed06a3aea1db923c81989e03ac" translate="yes" xml:space="preserve">
          <source>If the type you care about is not in the above table, it is probably not supported.</source>
          <target state="translated">如果你关心的类型不在上表中,那么它可能不受支持。</target>
        </trans-unit>
        <trans-unit id="a6400f1ceae84e75b1798da7ac8f97b4940146c9" translate="yes" xml:space="preserve">
          <source>If there are any compilation errors related to the Crashpad, it probably means you need to update the fork to a newer revision. See &lt;a href=&quot;upgrading-crashpad&quot;&gt;Upgrading Crashpad&lt;/a&gt; for instructions on how to do that.</source>
          <target state="translated">如果存在与Crashpad相关的任何编译错误，则可能意味着您需要将fork更新为较新的修订版。有关如何执行此操作的说明，请参阅&lt;a href=&quot;upgrading-crashpad&quot;&gt;升级Crashpad&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7288c9fc494492fc851891528f5ac380e8879e56" translate="yes" xml:space="preserve">
          <source>If there are no git conflicts or rebases in &lt;code&gt;src/electron&lt;/code&gt;, you may need to abort a &lt;code&gt;git am&lt;/code&gt; in &lt;code&gt;src&lt;/code&gt;:</source>
          <target state="translated">如果没有git的冲突或底垫中 &lt;code&gt;src/electron&lt;/code&gt; ，则可能需要放弃一个 &lt;code&gt;git am&lt;/code&gt; 在 &lt;code&gt;src&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="41adaaf7621b67f42d66ba786ca7f6d40a727edc" translate="yes" xml:space="preserve">
          <source>If these are not present in your app's entitlements when you invoke, for example:</source>
          <target state="translated">如果当你调用时,这些在你的应用程序的权利中不存在,例如。</target>
        </trans-unit>
        <trans-unit id="0e029bfb7f6d5d31d74119f5385dfc1876480404" translate="yes" xml:space="preserve">
          <source>If this impacts you, you can temporarily set &lt;code&gt;app.allowRendererProcessReuse&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; to revert to the old behavior. This flag will only be an option until Electron 11 so you should plan to update your native modules to be context aware.</source>
          <target state="translated">如果这对您 &lt;code&gt;app.allowRendererProcessReuse&lt;/code&gt; ，则可以将app.allowRendererProcessReuse临时设置为 &lt;code&gt;false&lt;/code&gt; 以恢复为旧行为。该标志仅在Electron 11之前是一个选项，因此您应该计划更新本机模块以了解上下文。</target>
        </trans-unit>
        <trans-unit id="45e7ea50ccb6720b475c6d32018899d97fd8d406" translate="yes" xml:space="preserve">
          <source>If you access &lt;a href=&quot;http://localhost:8088&quot;&gt;http://localhost:8088&lt;/a&gt; on your local machine you can monitor compile jobs as they flow through the goma system.</source>
          <target state="translated">如果您在本地计算机上访问&lt;a href=&quot;http://localhost:8088&quot;&gt;http：// localhost：8088&lt;/a&gt;，则可以在编译作业流过goma系统时对其进行监视。</target>
        </trans-unit>
        <trans-unit id="e6f86e7d6a316512c338668077a47aabdfb66578" translate="yes" xml:space="preserve">
          <source>If you are a developer developing a native module and want to test it against Electron, you might want to rebuild the module for Electron manually. You can use &lt;code&gt;node-gyp&lt;/code&gt; directly to build for Electron:</source>
          <target state="translated">如果您是开发本机模块的开发人员，并且想要针对Electron进行测试，则可能需要手动为Electron重建模块。您可以直接使用 &lt;code&gt;node-gyp&lt;/code&gt; 为Electron构建：</target>
        </trans-unit>
        <trans-unit id="49115902c75aef7b53bdb1f21224aac236275b01" translate="yes" xml:space="preserve">
          <source>If you are a maintainer and have access to our cluster, please ensure that you run &lt;code&gt;e init&lt;/code&gt; with &lt;code&gt;--goma=cluster&lt;/code&gt; in order to configure &lt;code&gt;build-tools&lt;/code&gt; to use the Goma cluster. If you have an existing config, you can just set &lt;code&gt;&quot;goma&quot;: &quot;cluster&quot;&lt;/code&gt; in your config file.</source>
          <target state="translated">如果您是维护者并且可以访问我们的集群，请确保使用 &lt;code&gt;--goma=cluster&lt;/code&gt; 运行 &lt;code&gt;e init&lt;/code&gt; 以便配置 &lt;code&gt;build-tools&lt;/code&gt; 以使用Goma集群。如果您已有配置，则只需在配置文件中设置 &lt;code&gt;&quot;goma&quot;: &quot;cluster&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3546e0934a49c0841002196b0423ec133b58edb9" translate="yes" xml:space="preserve">
          <source>If you are an experienced NW.js user, you should be familiar with the concept of Node context and web context. These concepts were invented because of how NW.js was implemented.</source>
          <target state="translated">如果你是一个有经验的NW.js用户,你应该熟悉Node上下文和Web上下文的概念。这些概念的发明是因为NW.js的实现方式。</target>
        </trans-unit>
        <trans-unit id="f518771fd5cfe4822af6e39ccae8294353675f7b" translate="yes" xml:space="preserve">
          <source>If you are building an Electron app that you intend to package and distribute, it should be code signed. The Mac and Windows app stores do not allow unsigned apps.</source>
          <target state="translated">如果你正在开发一个Electron应用程序,并打算将其打包发布,那么它应该是有代码签名的。Mac和Windows应用商店不允许未签名的应用。</target>
        </trans-unit>
        <trans-unit id="97f0e081f738233e6a12d3e89dc6709d9705e577" translate="yes" xml:space="preserve">
          <source>If you are building an Electron app that you intend to package and distribute, it should be code-signed.</source>
          <target state="translated">如果你正在构建一个Electron应用程序,并打算打包发布,那么它应该是有代码签名的。</target>
        </trans-unit>
        <trans-unit id="372e64afe8410fe3d2465d66f766d65bf0c095de" translate="yes" xml:space="preserve">
          <source>If you are following the &lt;code&gt;npm&lt;/code&gt; way of installing modules, then this is done by default, if not, you have to pass &lt;code&gt;--build-from-source&lt;/code&gt; to &lt;code&gt;npm&lt;/code&gt;, or set the &lt;code&gt;npm_config_build_from_source&lt;/code&gt; environment variable.</source>
          <target state="translated">如果您遵循 &lt;code&gt;npm&lt;/code&gt; 的模块安装方式，则默认情况下会完成此操作，否则，您必须将 &lt;code&gt;--build-from-source&lt;/code&gt; 传递给 &lt;code&gt;npm&lt;/code&gt; ，或者设置 &lt;code&gt;npm_config_build_from_source&lt;/code&gt; 环境变量。</target>
        </trans-unit>
        <trans-unit id="2cfb529b6f7d16f1e4b79765a55450d85ee67a59" translate="yes" xml:space="preserve">
          <source>If you are new to app sandboxing under macOS, you should also read through Apple's &lt;a href=&quot;https://developer.apple.com/library/ios/documentation/Miscellaneous/Reference/EntitlementKeyReference/Chapters/EnablingAppSandbox.html&quot;&gt;Enabling App Sandbox&lt;/a&gt; to have a basic idea, then add keys for the permissions needed by your app to the entitlements files.</source>
          <target state="translated">如果您不熟悉macOS下的应用程序沙箱，还应通读Apple的&amp;ldquo; &lt;a href=&quot;https://developer.apple.com/library/ios/documentation/Miscellaneous/Reference/EntitlementKeyReference/Chapters/EnablingAppSandbox.html&quot;&gt;启用应用程序沙箱&amp;rdquo;&lt;/a&gt;以了解基本知识，然后将应用程序所需权限的密钥添加到权利文件中。</target>
        </trans-unit>
        <trans-unit id="f0b3f8b9ad9918ed70820f49feece7ddb02cf731" translate="yes" xml:space="preserve">
          <source>If you are not using &lt;a href=&quot;https://github.com/electron/build-tools&quot;&gt;build-tools&lt;/a&gt;, ensure that that name you have configured for your local build of Electron is one of &lt;code&gt;Testing&lt;/code&gt;, &lt;code&gt;Release&lt;/code&gt;, &lt;code&gt;Default&lt;/code&gt;, &lt;code&gt;Debug&lt;/code&gt;, or you have set &lt;code&gt;process.env.ELECTRON_OUT_DIR&lt;/code&gt;. Without these set, Electron will fail to perform some pre-testing steps.</source>
          <target state="translated">如果您不使用&lt;a href=&quot;https://github.com/electron/build-tools&quot;&gt;构建工具&lt;/a&gt;，请确保为您的Electron本地构建配置的名称是 &lt;code&gt;Testing&lt;/code&gt; ， &lt;code&gt;Release&lt;/code&gt; ， &lt;code&gt;Default&lt;/code&gt; ， &lt;code&gt;Debug&lt;/code&gt; 之一，或者已设置 &lt;code&gt;process.env.ELECTRON_OUT_DIR&lt;/code&gt; 。没有这些设置，Electron将无法执行某些预测试步骤。</target>
        </trans-unit>
        <trans-unit id="03cf4ab71384adf8e5e662d0d5afa5788d1fca8c" translate="yes" xml:space="preserve">
          <source>If you are one of the many developers with a strong preference, know that virtually all code editors and IDEs these days support JavaScript.</source>
          <target state="translated">如果你是众多有强烈偏好的开发者之一,要知道现在几乎所有的代码编辑器和IDE都支持JavaScript。</target>
        </trans-unit>
        <trans-unit id="511ece18190383d8648593fd41d94edf88da2d63" translate="yes" xml:space="preserve">
          <source>If you are unable to access GitHub or you need to provide a custom build, you can do so by either providing a mirror or an existing cache directory.</source>
          <target state="translated">如果你无法访问GitHub,或者你需要提供一个自定义的构建,你可以通过提供一个镜像或现有的缓存目录来实现。</target>
        </trans-unit>
        <trans-unit id="b718a7b2269d6aeeadc157ddb6619fbdfb0c4120" translate="yes" xml:space="preserve">
          <source>If you are updating tests and want to run a single spec to check it:</source>
          <target state="translated">如果你正在更新测试,并希望运行一个单一的规范来检查它。</target>
        </trans-unit>
        <trans-unit id="74e0ec616a5f2db0a595e964d3bee0948512b949" translate="yes" xml:space="preserve">
          <source>If you are using &lt;a href=&quot;../api/web-view&quot;&gt;&lt;code&gt;WebViews&lt;/code&gt;&lt;/a&gt;, you might need the pages and scripts loaded in your &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; tag to open new windows. The &lt;code&gt;allowpopups&lt;/code&gt; attribute enables them to create new &lt;a href=&quot;../api/browser-window&quot;&gt;&lt;code&gt;BrowserWindows&lt;/code&gt;&lt;/a&gt; using the &lt;code&gt;window.open()&lt;/code&gt; method. &lt;code&gt;WebViews&lt;/code&gt; are otherwise not allowed to create new windows.</source>
          <target state="translated">如果您使用的是&lt;a href=&quot;../api/web-view&quot;&gt; &lt;code&gt;WebViews&lt;/code&gt; &lt;/a&gt;，则可能需要在 &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; 标记中加载的页面和脚本才能打开新窗口。该 &lt;code&gt;allowpopups&lt;/code&gt; 属性使他们能够创造新的&lt;a href=&quot;../api/browser-window&quot;&gt; &lt;code&gt;BrowserWindows&lt;/code&gt; &lt;/a&gt;使用 &lt;code&gt;window.open()&lt;/code&gt; 方法。否则， &lt;code&gt;WebViews&lt;/code&gt; 不允许创建新窗口。</target>
        </trans-unit>
        <trans-unit id="b28d1a471531e27a0e67beca8afcb797c46bf343" translate="yes" xml:space="preserve">
          <source>If you are using &lt;a href=&quot;../api/webview-tag&quot;&gt;&lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt;&lt;/a&gt;, you might need the pages and scripts loaded in your &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; tag to open new windows. The &lt;code&gt;allowpopups&lt;/code&gt; attribute enables them to create new &lt;a href=&quot;../api/browser-window&quot;&gt;&lt;code&gt;BrowserWindows&lt;/code&gt;&lt;/a&gt; using the &lt;code&gt;window.open()&lt;/code&gt; method. &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; tags are otherwise not allowed to create new windows.</source>
          <target state="translated">如果使用的是&lt;a href=&quot;../api/webview-tag&quot;&gt; &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; &lt;/a&gt;，则可能需要在 &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; 标记中加载的页面和脚本才能打开新窗口。该 &lt;code&gt;allowpopups&lt;/code&gt; 属性使他们能够创造新的&lt;a href=&quot;../api/browser-window&quot;&gt; &lt;code&gt;BrowserWindows&lt;/code&gt; &lt;/a&gt;使用 &lt;code&gt;window.open()&lt;/code&gt; 方法。否则，不允许使用 &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; 标记创建新窗口。</target>
        </trans-unit>
        <trans-unit id="b5161903d562f174b719944298b3ecbac6a1c316" translate="yes" xml:space="preserve">
          <source>If you are using &lt;a href=&quot;api/webview-tag&quot;&gt;&lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt;&lt;/a&gt;, you might need the pages and scripts loaded in your &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; tag to open new windows. The &lt;code&gt;allowpopups&lt;/code&gt; attribute enables them to create new &lt;a href=&quot;api/browser-window&quot;&gt;&lt;code&gt;BrowserWindows&lt;/code&gt;&lt;/a&gt; using the &lt;code&gt;window.open()&lt;/code&gt; method. &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; tags are otherwise not allowed to create new windows.</source>
          <target state="translated">如果使用的是&lt;a href=&quot;api/webview-tag&quot;&gt; &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; &lt;/a&gt;，则可能需要在 &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; 标记中加载的页面和脚本才能打开新窗口。该 &lt;code&gt;allowpopups&lt;/code&gt; 属性使他们能够创造新的&lt;a href=&quot;api/browser-window&quot;&gt; &lt;code&gt;BrowserWindows&lt;/code&gt; &lt;/a&gt;使用 &lt;code&gt;window.open()&lt;/code&gt; 方法。否则，不允许使用 &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; 标记创建新窗口。</target>
        </trans-unit>
        <trans-unit id="debc2e94eac4ca97e2e31778bad9a6ac9e1e229c" translate="yes" xml:space="preserve">
          <source>If you are using Python as provided by Homebrew, you also need to install the following Python modules:</source>
          <target state="translated">如果你使用的是Homebrew提供的Python,你还需要安装以下Python模块。</target>
        </trans-unit>
        <trans-unit id="80fc6f9726825bf77f66d4a114a758748f0e0bf6" translate="yes" xml:space="preserve">
          <source>If you are using editor supports &lt;a href=&quot;http://clang.llvm.org/docs/JSONCompilationDatabase.html&quot;&gt;JSON compilation database&lt;/a&gt; based language server, you can generate it:</source>
          <target state="translated">如果使用的编辑器支持基于&lt;a href=&quot;http://clang.llvm.org/docs/JSONCompilationDatabase.html&quot;&gt;JSON编译数据库&lt;/a&gt;的语言服务器，则可以生成它：</target>
        </trans-unit>
        <trans-unit id="8e963bbebca819cdbe96d82ab1123fe0801d2967" translate="yes" xml:space="preserve">
          <source>If you believe that you have found a bug in Electron, please fill out the template to the best of your ability.</source>
          <target state="translated">如果您认为您在Electron中发现了一个BUG,请尽您所能填写模板。</target>
        </trans-unit>
        <trans-unit id="f0743e84e5a23466f35691c6aa8c710c8f0896bd" translate="yes" xml:space="preserve">
          <source>If you believe that you have found a bug in Electron, please fill out this form to the best of your ability.</source>
          <target state="translated">如果您认为您在Electron中发现了一个bug,请尽您所能填写这个表格。</target>
        </trans-unit>
        <trans-unit id="0d1f21c92cfe0a6c7ef64ca363457616064abf36" translate="yes" xml:space="preserve">
          <source>If you cannot disable the &lt;code&gt;remote&lt;/code&gt; module, you should filter the globals, Node, and Electron modules (so-called built-ins) accessible via &lt;code&gt;remote&lt;/code&gt; that your application does not require. This can be done by blocking certain modules entirely and by replacing others with proxies that expose only the functionality that your app needs.</source>
          <target state="translated">如果无法禁用 &lt;code&gt;remote&lt;/code&gt; 模块，则应过滤可通过应用程序不需要的 &lt;code&gt;remote&lt;/code&gt; 访问的全局模块，节点模块和电子模块（所谓的内置模块）。这可以通过完全阻止某些模块并用仅公开您应用所需功能的代理替换其他模块来完成。</target>
        </trans-unit>
        <trans-unit id="2c464ba2442537db7f0883a14d30c8fd64d00801" translate="yes" xml:space="preserve">
          <source>If you click &lt;code&gt;Help&lt;/code&gt; or press the defined accelerator and then open the terminal that you ran your Electron application from, you will see the message that was generated after triggering the &lt;code&gt;click&lt;/code&gt; event: &quot;Electron rocks!&quot;.</source>
          <target state="translated">如果单击&amp;ldquo; &lt;code&gt;Help&lt;/code&gt; 或按定义的加速器，然后打开从中运行Electron应用程序的终端，则将看到触发 &lt;code&gt;click&lt;/code&gt; 事件后生成的消息：&amp;ldquo;电子摇滚！&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="04ed95949f9fc3a03f546e9a18f26b5b78dac1cb" translate="yes" xml:space="preserve">
          <source>If you do not already have a &lt;code&gt;.deb&lt;/code&gt; package, using &lt;code&gt;electron-installer-snap&lt;/code&gt; might be an easier path to create snap packages. However, multiple solutions for creating Debian packages exist, including &lt;a href=&quot;https://github.com/electron-userland/electron-forge&quot;&gt;&lt;code&gt;electron-forge&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/electron-userland/electron-builder&quot;&gt;&lt;code&gt;electron-builder&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://github.com/unindented/electron-installer-debian&quot;&gt;&lt;code&gt;electron-installer-debian&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果您还没有 &lt;code&gt;.deb&lt;/code&gt; 软件包，那么使用 &lt;code&gt;electron-installer-snap&lt;/code&gt; 可能是创建快照软件包的更简单方法。但是，存在用于创建Debian软件包的多种解决方案，包括&lt;a href=&quot;https://github.com/electron-userland/electron-forge&quot;&gt; &lt;code&gt;electron-forge&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;https://github.com/electron-userland/electron-builder&quot;&gt; &lt;code&gt;electron-builder&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;https://github.com/unindented/electron-installer-debian&quot;&gt; &lt;code&gt;electron-installer-debian&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="61c4fcc639c2347d0ac3c19e17cd07322003d4c5" translate="yes" xml:space="preserve">
          <source>If you do not need a response to the message, consider using &lt;a href=&quot;#ipcrenderersendchannel-args&quot;&gt;&lt;code&gt;ipcRenderer.send&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果不需要响应消息，请考虑使用&lt;a href=&quot;#ipcrenderersendchannel-args&quot;&gt; &lt;code&gt;ipcRenderer.send&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="dae223953c408d185a172c63bf31851f299204f8" translate="yes" xml:space="preserve">
          <source>If you do not need popups, you are better off not allowing the creation of new &lt;a href=&quot;../api/browser-window&quot;&gt;&lt;code&gt;BrowserWindows&lt;/code&gt;&lt;/a&gt; by default. This follows the principle of minimally required access: Don't let a website create new popups unless you know it needs that feature.</source>
          <target state="translated">如果不需要弹出窗口，最好不要在默认情况下允许创建新的&lt;a href=&quot;../api/browser-window&quot;&gt; &lt;code&gt;BrowserWindows&lt;/code&gt; &lt;/a&gt;。这遵循最低要求访问的原则：除非您知道网站需要该功能，否则不要让网站创建新的弹出窗口。</target>
        </trans-unit>
        <trans-unit id="1787986385964b5b499de8bb40a5580e8c570902" translate="yes" xml:space="preserve">
          <source>If you do not need popups, you are better off not allowing the creation of new &lt;a href=&quot;api/browser-window&quot;&gt;&lt;code&gt;BrowserWindows&lt;/code&gt;&lt;/a&gt; by default. This follows the principle of minimally required access: Don't let a website create new popups unless you know it needs that feature.</source>
          <target state="translated">如果不需要弹出窗口，则最好不要在默认情况下允许创建新的&lt;a href=&quot;api/browser-window&quot;&gt; &lt;code&gt;BrowserWindows&lt;/code&gt; &lt;/a&gt;。这遵循最低要求访问的原则：除非您知道网站需要该功能，否则不要让它创建新的弹出窗口。</target>
        </trans-unit>
        <trans-unit id="17ca2154e7a651f9f4580eef9e3684e7990f9e09" translate="yes" xml:space="preserve">
          <source>If you do not set &lt;code&gt;credits&lt;/code&gt; but still wish to surface them in your app, AppKit will look for a file named &quot;Credits.html&quot;, &quot;Credits.rtf&quot;, and &quot;Credits.rtfd&quot;, in that order, in the bundle returned by the NSBundle class method main. The first file found is used, and if none is found, the info area is left blank. See Apple &lt;a href=&quot;https://developer.apple.com/documentation/appkit/nsaboutpaneloptioncredits?language=objc&quot;&gt;documentation&lt;/a&gt; for more information.</source>
          <target state="translated">如果您没有设置 &lt;code&gt;credits&lt;/code&gt; 但仍然希望在您的应用程序中显示信用额度，则AppKit将按此顺序在返回的捆绑包中查找名为&amp;ldquo; Credits.html&amp;rdquo;，&amp;ldquo; Credits.rtf&amp;rdquo;和&amp;ldquo; Credits.rtfd&amp;rdquo;的文件。由NSBundle类方法决定。使用找到的第一个文件，如果找不到，则信息区域为空白。有关更多信息，请参阅Apple&lt;a href=&quot;https://developer.apple.com/documentation/appkit/nsaboutpaneloptioncredits?language=objc&quot;&gt;文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="75e742cb1e3b85a399839264fcadf6ad1ed680a7" translate="yes" xml:space="preserve">
          <source>If you do not subscribe to this event and all windows are closed, the default behavior is to quit the app; however, if you subscribe, you control whether the app quits or not. If the user pressed &lt;code&gt;Cmd + Q&lt;/code&gt;, or the developer called &lt;code&gt;app.quit()&lt;/code&gt;, Electron will first try to close all the windows and then emit the &lt;code&gt;will-quit&lt;/code&gt; event, and in this case the &lt;code&gt;window-all-closed&lt;/code&gt; event would not be emitted.</source>
          <target state="translated">如果您不订阅此事件并且所有窗口都已关闭，则默认行为是退出应用程序；但是，如果您订阅，则可以控制应用程序是否退出。如果用户按下 &lt;code&gt;Cmd + Q&lt;/code&gt; 或开发人员叫 &lt;code&gt;app.quit()&lt;/code&gt; ，Electron将首先尝试关闭所有窗口，然后发出 &lt;code&gt;will-quit&lt;/code&gt; 事件，在这种情况下， &lt;code&gt;window-all-closed&lt;/code&gt; 事件不会发射。</target>
        </trans-unit>
        <trans-unit id="5d0f3f38792a28a4c020dd49aaa3a70bf46349b1" translate="yes" xml:space="preserve">
          <source>If you don't currently have a Windows installation, &lt;a href=&quot;https://developer.microsoft.com/en-us/microsoft-edge/tools/vms/&quot;&gt;dev.microsoftedge.com&lt;/a&gt; has timebombed versions of Windows that you can use to build Electron.</source>
          <target state="translated">如果您当前没有安装Windows，则&lt;a href=&quot;https://developer.microsoft.com/en-us/microsoft-edge/tools/vms/&quot;&gt;dev.microsoftedge.com&lt;/a&gt;具有定时炸弹版本的Windows，您可以用来构建Electron。</target>
        </trans-unit>
        <trans-unit id="7c78880b2801eaeed7ce1f2cc4299bfdc75ef332" translate="yes" xml:space="preserve">
          <source>If you don't want any tools but only a solid boilerplate to build from, CT Lin's &lt;a href=&quot;https://github.com/chentsulin/electron-react-boilerplate&quot;&gt;&lt;code&gt;electron-react-boilerplate&lt;/code&gt;&lt;/a&gt; might be worth a look. It's quite popular in the community and uses &lt;code&gt;electron-builder&lt;/code&gt; internally.</source>
          <target state="translated">如果您不希望使用任何工具，而仅要构建一个坚固的样板，则CT Lin的&lt;a href=&quot;https://github.com/chentsulin/electron-react-boilerplate&quot;&gt; &lt;code&gt;electron-react-boilerplate&lt;/code&gt; &lt;/a&gt;可能值得一看。它在社区中非常流行，并且在内部使用了 &lt;code&gt;electron-builder&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c2d2d4069ba374557cc5e36c5e853eb18c112d2e" translate="yes" xml:space="preserve">
          <source>If you don't want to do manual shortcut parsing there are libraries that do advanced key detection such as &lt;a href=&quot;https://github.com/ccampbell/mousetrap&quot;&gt;mousetrap&lt;/a&gt;.</source>
          <target state="translated">如果您不想进行手动快捷键解析，则可以使用一些库进行高级键检测，例如&lt;a href=&quot;https://github.com/ccampbell/mousetrap&quot;&gt;mousetrap&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="730a8bacfbbaf464f8c72e5cc1b5310549e38196" translate="yes" xml:space="preserve">
          <source>If you don't want to do manual shortcut parsing, there are libraries that do advanced key detection, such as &lt;a href=&quot;https://github.com/ccampbell/mousetrap&quot;&gt;mousetrap&lt;/a&gt;. Below are examples of usage of the &lt;code&gt;mousetrap&lt;/code&gt; running in the Renderer process:</source>
          <target state="translated">如果您不想进行手动快捷键解析，则可以使用一些库来执行高级键检测，例如&lt;a href=&quot;https://github.com/ccampbell/mousetrap&quot;&gt;mousetrap&lt;/a&gt;。以下是在渲染器进程中运行的 &lt;code&gt;mousetrap&lt;/code&gt; 用法的示例：</target>
        </trans-unit>
        <trans-unit id="6e2c37f59119cfb703651a8895ab5775e299cf90" translate="yes" xml:space="preserve">
          <source>If you encounter a problem with this documentation, or if your app works when compiled for x86 but not for arm64, please &lt;a href=&quot;../development/issues&quot;&gt;file an issue&lt;/a&gt; with &quot;Windows on Arm&quot; in the title.</source>
          <target state="translated">如果您在使用本文档时遇到问题，或者您的应用在针对x86而不是针对arm64编译时可以运行，请&lt;a href=&quot;../development/issues&quot;&gt;提出&lt;/a&gt;标题为&amp;ldquo; Windows on Arm&amp;rdquo;的问题。</target>
        </trans-unit>
        <trans-unit id="23760b9083d657587a0a29a01b29a3fef89834ea" translate="yes" xml:space="preserve">
          <source>If you encounter a problem with this documentation, or if your app works when compiled for x86 but not for arm64, please &lt;a href=&quot;development/issues&quot;&gt;file an issue&lt;/a&gt; with &quot;Windows on Arm&quot; in the title.</source>
          <target state="translated">如果您在使用本文档时遇到问题，或者您的应用在针对x86而不是针对arm64编译时可以运行，请&lt;a href=&quot;development/issues&quot;&gt;提出&lt;/a&gt;标题为&amp;ldquo; Windows on Arm&amp;rdquo;的问题。</target>
        </trans-unit>
        <trans-unit id="1634a77e4ab54136589ef244b5dfae0ea6e1af51" translate="yes" xml:space="preserve">
          <source>If you encounter this problem, the following articles may prove helpful:</source>
          <target state="translated">如果你遇到了这个问题,下面的文章可能会对你有所帮助。</target>
        </trans-unit>
        <trans-unit id="7d3538dfb360b356c09289f91591872a5d74f7fc" translate="yes" xml:space="preserve">
          <source>If you encountered an error like &lt;code&gt;Command xxxx not found&lt;/code&gt;, you may try to use the &lt;code&gt;VS2015 Command Prompt&lt;/code&gt; console to execute the build scripts.</source>
          <target state="translated">如果遇到诸如 &lt;code&gt;Command xxxx not found&lt;/code&gt; 类的错误，则可以尝试使用 &lt;code&gt;VS2015 Command Prompt&lt;/code&gt; 控制台执行构建脚本。</target>
        </trans-unit>
        <trans-unit id="3595e2ec6842f8df110a7a6f959fa86d9077fff8" translate="yes" xml:space="preserve">
          <source>If you experience crashes or issues in Electron that you believe are not caused by your JavaScript application, but instead by Electron itself, debugging can be a little bit tricky, especially for developers not used to native/C++ debugging. However, using Visual Studio, Electron's hosted Symbol Server, and the Electron source code, you can enable step-through debugging with breakpoints inside Electron's source code.</source>
          <target state="translated">如果你在Electron中遇到的崩溃或问题不是由你的JavaScript应用程序引起的,而是由Electron本身引起的,那么调试可能会有点棘手,特别是对于不习惯于本地/C++调试的开发人员来说。然而,通过使用Visual Studio、Electron托管的Symbol Server和Electron源代码,你可以在Electron的源代码中使用断点进行逐步调试。</target>
        </trans-unit>
        <trans-unit id="76da07e932527a6117c3a56371ba3e3878b1de65" translate="yes" xml:space="preserve">
          <source>If you experience crashes or issues in Electron that you believe are not caused by your JavaScript application, but instead by Electron itself, debugging can be a little bit tricky, especially for developers not used to native/C++ debugging. However, using Visual Studio, GitHub's hosted Electron Symbol Server, and the Electron source code, you can enable step-through debugging with breakpoints inside Electron's source code.</source>
          <target state="translated">如果你在Electron中遇到的崩溃或问题,你认为不是由你的JavaScript应用程序造成的,而是由Electron本身造成的,那么调试可能会有点棘手,特别是对于不习惯于本地/C++调试的开发人员来说。然而,通过使用Visual Studio、GitHub托管的Electron符号服务器和Electron源代码,你可以在Electron的源代码中使用断点进行分步调试。</target>
        </trans-unit>
        <trans-unit id="ea02dd04609c3e21d8286b42c8f5b437dc845f82" translate="yes" xml:space="preserve">
          <source>If you experience crashes or issues in Electron that you believe are not caused by your JavaScript application, but instead by Electron itself, debugging can be a little bit tricky, especially for developers not used to native/C++ debugging. However, using lldb, and the Electron source code, you can enable step-through debugging with breakpoints inside Electron's source code. You can also use &lt;a href=&quot;debugging-instructions-macos-xcode&quot;&gt;XCode for debugging&lt;/a&gt; if you prefer a graphical interface.</source>
          <target state="translated">如果您认为Electron中的崩溃或问题不是由JavaScript应用程序引起的，而是由Electron本身引起的，则调试可能会有些棘手，特别是对于不习惯于本机/ C ++调试的开发人员。但是，使用lldb和Electron源代码，您可以使用Electron源代码中的断点启用逐步调试。如果您喜欢图形界面，也可以使用&lt;a href=&quot;debugging-instructions-macos-xcode&quot;&gt;XCode进行调试&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e36764f2b3bedf628cf3e94d4618a408cd75d8ad" translate="yes" xml:space="preserve">
          <source>If you experience crashes or issues in Electron that you believe are not caused by your JavaScript application, but instead by Electron itself, debugging can be a little bit tricky, especially for developers not used to native/C++ debugging. However, using lldb, and the Electron source code, you can enable step-through debugging with breakpoints inside Electron's source code. You can also use &lt;a href=&quot;development/debugging-instructions-macos-xcode&quot;&gt;XCode for debugging&lt;/a&gt; if you prefer a graphical interface.</source>
          <target state="translated">如果您认为Electron中的崩溃或问题不是由JavaScript应用程序引起的，而是由Electron本身引起的，则调试可能会有些棘手，特别是对于不习惯于本机/ C ++调试的开发人员。但是，使用lldb和Electron源代码，您可以使用Electron源代码中的断点启用逐步调试。如果您更喜欢图形界面，也可以使用&lt;a href=&quot;development/debugging-instructions-macos-xcode&quot;&gt;XCode进行调试&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f1171b325559215ec56cc0828283ad57319637d7" translate="yes" xml:space="preserve">
          <source>If you find yourself in the unfortunate position of having to make a change which can only be made through patching an upstream project, you'll need to know how to manage patches in Electron.</source>
          <target state="translated">如果你发现自己很不幸地要做一个只能通过给上游项目打补丁的改变,你就需要知道如何在Electron中管理补丁。</target>
        </trans-unit>
        <trans-unit id="fda1e9a41486e8e36fc4cac6397fc3739cf7ace7" translate="yes" xml:space="preserve">
          <source>If you find yourself running this command often, you can create an alias for it in your &lt;code&gt;~/.gitconfig&lt;/code&gt; file:</source>
          <target state="translated">如果发现自己经常运行此命令，则可以在 &lt;code&gt;~/.gitconfig&lt;/code&gt; 文件中为其创建别名：</target>
        </trans-unit>
        <trans-unit id="729626f04053461aa92f6cfc4ef0e70943479a8f" translate="yes" xml:space="preserve">
          <source>If you get an error like &lt;code&gt;Module did not self-register&lt;/code&gt;, or &lt;code&gt;The specified procedure could not be found&lt;/code&gt;, it may mean that the module you're trying to use did not correctly include the delay-load hook. If the module is built with node-gyp, ensure that the &lt;code&gt;win_delay_load_hook&lt;/code&gt; variable is set to &lt;code&gt;true&lt;/code&gt; in the &lt;code&gt;binding.gyp&lt;/code&gt; file, and isn't getting overridden anywhere. If the module is built with another system, you'll need to ensure that you build with a delay-load hook installed in the main &lt;code&gt;.node&lt;/code&gt; file. Your &lt;code&gt;link.exe&lt;/code&gt; invocation should look like this:</source>
          <target state="translated">如果出现类似 &lt;code&gt;Module did not self-register&lt;/code&gt; 的错误，或者 &lt;code&gt;The specified procedure could not be found&lt;/code&gt; ，则可能意味着您要使用的模块未正确包含delay-load挂钩。如果模块与节点GYP建，确保 &lt;code&gt;win_delay_load_hook&lt;/code&gt; 变量设置为 &lt;code&gt;true&lt;/code&gt; 在 &lt;code&gt;binding.gyp&lt;/code&gt; 文件，并没有得到任何地方重写。如果模块是使用其他系统构建的，则需要确保在主 &lt;code&gt;.node&lt;/code&gt; 文件中安装了延迟加载挂钩。您的 &lt;code&gt;link.exe&lt;/code&gt; 调用应如下所示：</target>
        </trans-unit>
        <trans-unit id="6caaa6701c1bb5c365b0ebd072bb25957e2e71a2" translate="yes" xml:space="preserve">
          <source>If you have a known set of windows, it's a good idea to limit the creation of additional windows in your app.</source>
          <target state="translated">如果你有一组已知的窗口,最好限制在你的应用程序中创建额外的窗口。</target>
        </trans-unit>
        <trans-unit id="977cfcf861c658c441dcec6fe519ad85a7fcbd6c" translate="yes" xml:space="preserve">
          <source>If you have a security concern, please see the &lt;a href=&quot;https://electronjs.org/SECURITY&quot;&gt;security document&lt;/a&gt;.</source>
          <target state="translated">如果您有安全方面的顾虑，请参阅&lt;a href=&quot;https://electronjs.org/SECURITY&quot;&gt;安全文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e244a06f0d682e212b64b6fdbe33b66b8cc2cd2f" translate="yes" xml:space="preserve">
          <source>If you have a security concern, please see the &lt;a href=&quot;https://github.com/electron/electron/tree/master/SECURITY.md&quot;&gt;security document&lt;/a&gt;.</source>
          <target state="translated">如果您有安全方面的顾虑，请参阅&lt;a href=&quot;https://github.com/electron/electron/tree/master/SECURITY.md&quot;&gt;安全文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="90986c2e6ef30ce59319ba1048589dd7c4ace399" translate="yes" xml:space="preserve">
          <source>If you have an existing build pipeline, you can use &lt;code&gt;electron-installer-snap&lt;/code&gt; programmatically. For more information, see the &lt;a href=&quot;https://docs.snapcraft.io/build-snaps/syntax&quot;&gt;Snapcraft API docs&lt;/a&gt;.</source>
          <target state="translated">如果您有现有的构建管道，则可以以编程方式使用 &lt;code&gt;electron-installer-snap&lt;/code&gt; 。有关更多信息，请参见&lt;a href=&quot;https://docs.snapcraft.io/build-snaps/syntax&quot;&gt;Snapcraft API文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a6f88582221de280004c045b340f35f801e9a46e" translate="yes" xml:space="preserve">
          <source>If you have expensive setup operations, consider deferring those. Inspect all the work being executed right after the application starts. Instead of firing off all operations right away, consider staggering them in a sequence more closely aligned with the user's journey.</source>
          <target state="translated">如果你有昂贵的设置操作,考虑推迟这些操作。在应用程序启动后立即检查所有正在执行的工作。不要马上启动所有的操作,而是考虑以更接近用户旅程的顺序交错进行。</target>
        </trans-unit>
        <trans-unit id="e9dd61e326667f41af614721259e6dba815d5abe" translate="yes" xml:space="preserve">
          <source>If you have libcc built on your machine in its own repo, tell Electron to use it:</source>
          <target state="translated">如果你的机器上有自己的 repo 中的 libcc,请告诉 Electron 使用它。</target>
        </trans-unit>
        <trans-unit id="b9451ff4b171f5e826b90ddca819cb5ae01298c9" translate="yes" xml:space="preserve">
          <source>If you have no need to create windows in addition to the ones you know you'll need to create, disabling the creation buys you a little bit of extra security at no cost. This is commonly the case for apps that open one &lt;code&gt;BrowserWindow&lt;/code&gt; and do not need to open an arbitrary number of additional windows at runtime.</source>
          <target state="translated">如果除了您需要创建的窗口之外，您还不需要创建其他窗口，则禁用创建可以免费为您提供一点额外的安全性。对于打开一个 &lt;code&gt;BrowserWindow&lt;/code&gt; 且无需在运行时打开任意数量的其他窗口的应用程序，通常是这种情况。</target>
        </trans-unit>
        <trans-unit id="eccf94d9d65934fc068a168b1624f831893d9ff6" translate="yes" xml:space="preserve">
          <source>If you haven't already, you&amp;rsquo;ll need to sign the Paid Applications Agreement and set up your banking and tax information in iTunes Connect.</source>
          <target state="translated">如果尚未注册，则需要签署&amp;ldquo;付费应用程序协议&amp;rdquo;，并在iTunes Connect中设置银行和税务信息。</target>
        </trans-unit>
        <trans-unit id="6edde71923d9748cba71b225bd9e64e0b494c180" translate="yes" xml:space="preserve">
          <source>If you haven't yet built libcc but it's already supposed to be upgraded to a new Chromium, bootstrap Electron as usual &lt;code&gt;$ ./script/bootstrap.py -v&lt;/code&gt;</source>
          <target state="translated">如果尚未构建libcc，但已经将其升级到新的Chromium，请像往常一样 &lt;code&gt;$ ./script/bootstrap.py -v&lt;/code&gt; bootstrap.py -v引导Electron。</target>
        </trans-unit>
        <trans-unit id="085847f31a461d6e1ddd1ea7a20e15c8719731d9" translate="yes" xml:space="preserve">
          <source>If you installed a native module and found it was not working, you need to check following things:</source>
          <target state="translated">如果你安装了一个原生模块并发现它不能工作,你需要检查以下事项。</target>
        </trans-unit>
        <trans-unit id="744fad50f9edce40f3137bc907446af3946e2d7a" translate="yes" xml:space="preserve">
          <source>If you installed a native module and found it was not working, you need to check the following things:</source>
          <target state="translated">如果你安装了原生模块后发现不能使用,你需要检查以下事项。</target>
        </trans-unit>
        <trans-unit id="862fd233566c698b5d3c7d3252812c38e06fbc82" translate="yes" xml:space="preserve">
          <source>If you intend to &lt;code&gt;git pull&lt;/code&gt; or &lt;code&gt;git push&lt;/code&gt; from the official &lt;code&gt;electron&lt;/code&gt; repository in the future, you now need to update the respective folder's origin URLs.</source>
          <target state="translated">如果您打算将来从官方 &lt;code&gt;electron&lt;/code&gt; 存储库进行 &lt;code&gt;git pull&lt;/code&gt; 或 &lt;code&gt;git push&lt;/code&gt; ，则现在需要更新相应文件夹的原始URL。</target>
        </trans-unit>
        <trans-unit id="7118d24a866d3a9a6e79ed6be1e457ffad2d3d88" translate="yes" xml:space="preserve">
          <source>If you know of other great accessibility tools for Electron, add them to the accessibility documentation with a pull request.</source>
          <target state="translated">如果你知道Electron还有其他优秀的可访问性工具,可以通过拉取请求将它们添加到可访问性文档中。</target>
        </trans-unit>
        <trans-unit id="52d812014ac06ca7d290314b0daf6918fd02d885" translate="yes" xml:space="preserve">
          <source>If you need the entire &lt;code&gt;electron&lt;/code&gt; module, you can require it and then using destructuring to access the individual modules from &lt;code&gt;electron&lt;/code&gt;.</source>
          <target state="translated">如果您需要整个 &lt;code&gt;electron&lt;/code&gt; 模块，则可以使用它，然后使用解构从 &lt;code&gt;electron&lt;/code&gt; 访问各个模块。</target>
        </trans-unit>
        <trans-unit id="13f9e4e0c8e8e4ed90e08b42600091d977f0e2ed" translate="yes" xml:space="preserve">
          <source>If you need to customize your configuration, you can &lt;a href=&quot;https://github.com/electron/update-electron-app&quot;&gt;pass options to &lt;code&gt;update-electron-app&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://github.com/electron/update.electronjs.org&quot;&gt;use the update service directly&lt;/a&gt;.</source>
          <target state="translated">如果您需要自定义配置，则可以&lt;a href=&quot;https://github.com/electron/update-electron-app&quot;&gt;将选项传递给 &lt;code&gt;update-electron-app&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;https://github.com/electron/update.electronjs.org&quot;&gt;直接使用更新服务&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="476bf4b37d10e866176315b603d648667b556ae6" translate="yes" xml:space="preserve">
          <source>If you need to force a re-download of the asset and the SHASUM file set the &lt;code&gt;force_no_cache&lt;/code&gt; environment variable to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">如果需要强制重新下载资产和SHASUM文件，请将 &lt;code&gt;force_no_cache&lt;/code&gt; 环境变量设置为 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5862300ccd0c3e98db2dcc5d2da273c4be2b2485" translate="yes" xml:space="preserve">
          <source>If you need to mix sandboxed and non-sandboxed renderers in one application, simply omit the &lt;code&gt;--enable-sandbox&lt;/code&gt; argument. Without this argument, windows created with &lt;code&gt;sandbox: true&lt;/code&gt; will still have node.js disabled and communicate only via IPC, which by itself is already a gain from security POV.</source>
          <target state="translated">如果需要在一个应用程序中混合使用沙盒渲染器和非沙盒渲染器，只需省略 &lt;code&gt;--enable-sandbox&lt;/code&gt; 参数。没有此参数，使用 &lt;code&gt;sandbox: true&lt;/code&gt; 创建的窗口仍将禁用node.js，仅通过IPC进行通信，而IPC本身已从安全POV中获得收益。</target>
        </trans-unit>
        <trans-unit id="4e5d3e00b1acf57a3dfb7ccb824bbb30a89ca407" translate="yes" xml:space="preserve">
          <source>If you need to transfer a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/MessagePort&quot;&gt;&lt;code&gt;MessagePort&lt;/code&gt;&lt;/a&gt; to the main process, use &lt;a href=&quot;#ipcrendererpostmessagechannel-message-transfer&quot;&gt;&lt;code&gt;ipcRenderer.postMessage&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果需要将&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/MessagePort&quot;&gt; &lt;code&gt;MessagePort&lt;/code&gt; &lt;/a&gt;传输到主进程，请使用&lt;a href=&quot;#ipcrendererpostmessagechannel-message-transfer&quot;&gt; &lt;code&gt;ipcRenderer.postMessage&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="629e945de9624fcccddb1992beb1d4c29daab014" translate="yes" xml:space="preserve">
          <source>If you need to use an HTTP proxy you can &lt;a href=&quot;https://github.com/request/request/tree/f0c4ec061141051988d1216c24936ad2e7d5c45d#controlling-proxy-behaviour-using-environment-variables&quot;&gt;set these environment variables&lt;/a&gt;.</source>
          <target state="translated">如果需要使用HTTP代理，则可以&lt;a href=&quot;https://github.com/request/request/tree/f0c4ec061141051988d1216c24936ad2e7d5c45d#controlling-proxy-behaviour-using-environment-variables&quot;&gt;设置这些环境变量&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="916072759272af9ebfcc73cf18bfe5d4af43e141" translate="yes" xml:space="preserve">
          <source>If you need to use an HTTP proxy, you need to set the &lt;code&gt;ELECTRON_GET_USE_PROXY&lt;/code&gt; variable to any value, plus additional environment variables depending on your host system's Node version:</source>
          <target state="translated">如果需要使用HTTP代理，则需要将 &lt;code&gt;ELECTRON_GET_USE_PROXY&lt;/code&gt; 变量设置为任何值，并根据主机系统的Node版本设置其他环境变量：</target>
        </trans-unit>
        <trans-unit id="792716b5a2b850708663c8f195d92cab5976c508" translate="yes" xml:space="preserve">
          <source>If you only want to build Electron quickly for testing or development, you can download the shared library versions by passing the &lt;code&gt;--dev&lt;/code&gt; parameter:</source>
          <target state="translated">如果只想快速构建Electron以进行测试或开发，则可以通过传递 &lt;code&gt;--dev&lt;/code&gt; 参数来下载共享库版本：</target>
        </trans-unit>
        <trans-unit id="2a0675074e37c9f1201aade7c2b3243a6fbfeea2" translate="yes" xml:space="preserve">
          <source>If you open the Console and then click the notification, you will see the message that was generated after triggering the &lt;code&gt;onclick&lt;/code&gt; event:</source>
          <target state="translated">如果打开控制台，然后单击通知，您将看到触发 &lt;code&gt;onclick&lt;/code&gt; 事件后生成的消息：</target>
        </trans-unit>
        <trans-unit id="c91705c98998332219bba13da150b72386da10cf" translate="yes" xml:space="preserve">
          <source>If you plan on checking out Electron more than once (for example, to have multiple parallel directories checked out to different branches), using the git cache will speed up subsequent calls to &lt;code&gt;gclient&lt;/code&gt;. To do this, set a &lt;code&gt;GIT_CACHE_PATH&lt;/code&gt; environment variable:</source>
          <target state="translated">如果您计划多次检出Electron（例如，将多个并行目录检出到不同的分支），则使用git缓存将加快对 &lt;code&gt;gclient&lt;/code&gt; 的后续调用。为此，请设置 &lt;code&gt;GIT_CACHE_PATH&lt;/code&gt; 环境变量：</target>
        </trans-unit>
        <trans-unit id="31e865bf17672f9c0bcddb4825f65867f344cad4" translate="yes" xml:space="preserve">
          <source>If you plan to access the microphone or camera within your app using Electron's APIs, you'll also need to add the following entitlements:</source>
          <target state="translated">如果您打算在您的应用程序中使用Electron的API来访问麦克风或摄像头,您还需要添加以下权利。</target>
        </trans-unit>
        <trans-unit id="2d7d40dcd0ee25b28e3d79e5292f1b6c52000d40" translate="yes" xml:space="preserve">
          <source>If you provided &lt;code&gt;path&lt;/code&gt; and &lt;code&gt;args&lt;/code&gt; options to &lt;code&gt;app.setLoginItemSettings&lt;/code&gt; then you need to pass the same arguments here for &lt;code&gt;openAtLogin&lt;/code&gt; to be set correctly.</source>
          <target state="translated">如果为 &lt;code&gt;app.setLoginItemSettings&lt;/code&gt; 提供了 &lt;code&gt;path&lt;/code&gt; 和 &lt;code&gt;args&lt;/code&gt; 选项，则需要在此处传递相同的参数，以正确设置 &lt;code&gt;openAtLogin&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9cdbfca2d06cca9079a13a154e2b80fd157b62f0" translate="yes" xml:space="preserve">
          <source>If you provided &lt;code&gt;path&lt;/code&gt; and &lt;code&gt;args&lt;/code&gt; options to &lt;code&gt;app.setLoginItemSettings&lt;/code&gt;, then you need to pass the same arguments here for &lt;code&gt;openAtLogin&lt;/code&gt; to be set correctly.</source>
          <target state="translated">如果您为 &lt;code&gt;app.setLoginItemSettings&lt;/code&gt; 提供了 &lt;code&gt;path&lt;/code&gt; 和 &lt;code&gt;args&lt;/code&gt; 选项，则需要在此处传递相同的参数以正确设置 &lt;code&gt;openAtLogin&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6a4e5f7678d709e4dcef1c6fdccd006e98d7006a" translate="yes" xml:space="preserve">
          <source>If you run your code at this point, you'll see that your buttons don't do anything just yet, and your Main process will output an error like this when you click on your buttons: &lt;code&gt;Error occurred in handler for 'dark-mode:toggle': No handler registered for 'dark-mode:toggle'&lt;/code&gt; This is expected &amp;mdash; we haven't actually touched any &lt;code&gt;nativeTheme&lt;/code&gt; code yet.</source>
          <target state="translated">如果此时运行代码，您将看到您的按钮尚无任何作用，并且您的Main进程在您单击按钮时将输出如下所示的错误： &lt;code&gt;Error occurred in handler for 'dark-mode:toggle': No handler registered for 'dark-mode:toggle'&lt;/code&gt; 这是预期的-我们实际上还没有触摸过任何 &lt;code&gt;nativeTheme&lt;/code&gt; 代码。</target>
        </trans-unit>
        <trans-unit id="972e0678e759d22802056c49f486c83c9f92bec0" translate="yes" xml:space="preserve">
          <source>If you see a prompt for &lt;code&gt;Username for 'https://chrome-internal.googlesource.com':&lt;/code&gt; when running &lt;code&gt;gclient sync&lt;/code&gt; on Windows, it's probably because the &lt;code&gt;DEPOT_TOOLS_WIN_TOOLCHAIN&lt;/code&gt; environment variable is not set to 0. Open &lt;code&gt;Control Panel&lt;/code&gt; &amp;rarr; &lt;code&gt;System and Security&lt;/code&gt; &amp;rarr; &lt;code&gt;System&lt;/code&gt; &amp;rarr; &lt;code&gt;Advanced system settings&lt;/code&gt; and add a system variable &lt;code&gt;DEPOT_TOOLS_WIN_TOOLCHAIN&lt;/code&gt; with value &lt;code&gt;0&lt;/code&gt;. This tells &lt;code&gt;depot_tools&lt;/code&gt; to use your locally installed version of Visual Studio (by default, &lt;code&gt;depot_tools&lt;/code&gt; will try to download a Google-internal version that only Googlers have access to).</source>
          <target state="translated">如果您看到提示输入 &lt;code&gt;Username for 'https://chrome-internal.googlesource.com':&lt;/code&gt; 在Windows上运行 &lt;code&gt;gclient sync&lt;/code&gt; 时，可能是因为 &lt;code&gt;DEPOT_TOOLS_WIN_TOOLCHAIN&lt;/code&gt; 环境变量未设置为0。打开 &lt;code&gt;Control Panel&lt;/code&gt; &amp;rarr; &lt;code&gt;System and Security&lt;/code&gt; &amp;rarr; &lt;code&gt;System&lt;/code&gt; &amp;rarr; &lt;code&gt;Advanced system settings&lt;/code&gt; 并添加值为 &lt;code&gt;0&lt;/code&gt; 的系统变量 &lt;code&gt;DEPOT_TOOLS_WIN_TOOLCHAIN&lt;/code&gt; 。这告诉 &lt;code&gt;depot_tools&lt;/code&gt; 使用本地安装的Visual Studio版本（默认情况下， &lt;code&gt;depot_tools&lt;/code&gt; 会尝试下载仅Google员工有权访问的Google内部版本）。</target>
        </trans-unit>
        <trans-unit id="5b348b4f0d8865286aaee0ce01c2c9e1a6f5a402" translate="yes" xml:space="preserve">
          <source>If you test other combinations and find them to work, please update this document :)</source>
          <target state="translated">如果您测试其他组合并发现它们可行,请更新本文档:)</target>
        </trans-unit>
        <trans-unit id="a41b590466efc05fff264e1613e0e6f4820c05b4" translate="yes" xml:space="preserve">
          <source>If you use native modules, you must make sure that they compile against v142 of the MSVC compiler (provided in Visual Studio 2017). You must also check that any pre-built &lt;code&gt;.dll&lt;/code&gt; or &lt;code&gt;.lib&lt;/code&gt; files provided or referenced by the native module are available for Windows on Arm.</source>
          <target state="translated">如果使用本机模块，则必须确保它们可以针对MSVC编译器的v142（在Visual Studio 2017中提供）进行编译。您还必须检查本机模块提供或引用的所有预建 &lt;code&gt;.dll&lt;/code&gt; 或 &lt;code&gt;.lib&lt;/code&gt; 文件是否可用于Windows on Arm。</target>
        </trans-unit>
        <trans-unit id="1f1e57d4cd3f8005ef706f6a418f0bd254fc0428" translate="yes" xml:space="preserve">
          <source>If you want a quick fix, you can make the variables global by changing your code from this:</source>
          <target state="translated">如果你想快速解决这个问题,你可以通过修改你的代码使变量成为全局变量。</target>
        </trans-unit>
        <trans-unit id="ba62b7d30bbee706fa722a552d79a60b4d164e0c" translate="yes" xml:space="preserve">
          <source>If you want to apply this example to an existing project:</source>
          <target state="translated">如果你想把这个例子应用到现有的项目中。</target>
        </trans-unit>
        <trans-unit id="7fff812835a9064675286d186c1511b936ffb7a0" translate="yes" xml:space="preserve">
          <source>If you want to build Electron from source and modify the native Electron codebase, this section will help you in testing your modifications.</source>
          <target state="translated">如果你想从源码中构建Electron,并修改原生Electron代码库,本节将帮助你测试你的修改。</target>
        </trans-unit>
        <trans-unit id="c9335e6d51d50f1c8319d8890f1068dd36a905ea" translate="yes" xml:space="preserve">
          <source>If you want to build for an &lt;code&gt;arm&lt;/code&gt; target you should also install the following dependencies:</source>
          <target state="translated">如果要为 &lt;code&gt;arm&lt;/code&gt; 目标构建，还应该安装以下依赖项：</target>
        </trans-unit>
        <trans-unit id="4c1e6dc0c9b9cafd7d68ef3e780b5817a75fc949" translate="yes" xml:space="preserve">
          <source>If you want to change the architecture that is downloaded (e.g., &lt;code&gt;ia32&lt;/code&gt; on an &lt;code&gt;x64&lt;/code&gt; machine), you can use the &lt;code&gt;--arch&lt;/code&gt; flag with npm install or set the &lt;code&gt;npm_config_arch&lt;/code&gt; environment variable:</source>
          <target state="translated">如果要更改下载的体系结构（例如， &lt;code&gt;x64&lt;/code&gt; 计算机上的 &lt;code&gt;ia32&lt;/code&gt; ），则可以将 &lt;code&gt;--arch&lt;/code&gt; 标志与npm install一起使用或设置 &lt;code&gt;npm_config_arch&lt;/code&gt; 环境变量：</target>
        </trans-unit>
        <trans-unit id="5201d3612d4e2d0860bad7ca51a07c78c1f45c88" translate="yes" xml:space="preserve">
          <source>If you want to control the guest content in any way, you can write JavaScript that listens for &lt;code&gt;webview&lt;/code&gt; events and responds to those events using the &lt;code&gt;webview&lt;/code&gt; methods. Here's sample code with two event listeners: one that listens for the web page to start loading, the other for the web page to stop loading, and displays a &quot;loading...&quot; message during the load time:</source>
          <target state="translated">如果要以任何方式控制来宾内容，则可以编写JavaScript来侦听 &lt;code&gt;webview&lt;/code&gt; 事件并使用 &lt;code&gt;webview&lt;/code&gt; 方法响应这些事件。以下是带有两个事件侦听器的示例代码：一个侦听网页开始加载，另一个侦听网页停止加载，并在加载期间显示&amp;ldquo; loading ...&amp;rdquo;消息：</target>
        </trans-unit>
        <trans-unit id="4fb4f89f45ce1db939f58b3755053c11fd6862aa" translate="yes" xml:space="preserve">
          <source>If you want to debug and step through libchromiumcontent, you will have to run the bootsrap script with the &lt;code&gt;--build_debug_libcc&lt;/code&gt; argument.</source>
          <target state="translated">如果要调试并逐步检查libchromiumcontent，则必须使用 &lt;code&gt;--build_debug_libcc&lt;/code&gt; 参数运行bootsrap脚本。</target>
        </trans-unit>
        <trans-unit id="ecec29786835d37d6116231acec6106da9970502" translate="yes" xml:space="preserve">
          <source>If you want to develop your application directly on a Windows on Arm device, substitute &lt;code&gt;vcvarsx86_arm64.bat&lt;/code&gt; in &lt;em&gt;Target&lt;/em&gt; so that cross-compilation can happen with the device's x86 emulation.</source>
          <target state="translated">如果要直接在Windows on Arm设备上开发应用程序， &lt;code&gt;vcvarsx86_arm64.bat&lt;/code&gt; 在&lt;em&gt;Target中&lt;/em&gt;替换vcvarsx86_arm64.bat，以便使用该设备的x86仿真可以进行交叉编译。</target>
        </trans-unit>
        <trans-unit id="139a966830264531c65ccf48a0c89b2a2d904cf1" translate="yes" xml:space="preserve">
          <source>If you want to embed (third-party) web content in an Electron &lt;code&gt;BrowserWindow&lt;/code&gt;, there are three options available to you: &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; tags, &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; tags, and &lt;code&gt;BrowserViews&lt;/code&gt;. Each one offers slightly different functionality and is useful in different situations. To help you choose between these, this guide explains the differences and capabilities of each option.</source>
          <target state="translated">如果要在第三方浏览器 &lt;code&gt;BrowserWindow&lt;/code&gt; 嵌入（第三方）Web内容，则可以使用以下三个选项： &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; 标签， &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; 标签和 &lt;code&gt;BrowserViews&lt;/code&gt; 。每个选项提供的功能略有不同，并且在不同情况下很有用。为了帮助您在这些选项之间进行选择，本指南介绍了每个选项的区别和功能。</target>
        </trans-unit>
        <trans-unit id="70bc54ee6a7f8f0d7dd27d707f8b8f93a407e696" translate="yes" xml:space="preserve">
          <source>If you want to format the changed code on your latest git commit (HEAD), you can run &lt;code&gt;git-clang-format HEAD~1&lt;/code&gt;. See &lt;code&gt;git-clang-format -h&lt;/code&gt; for more details.</source>
          <target state="translated">如果要在最新的git commit（HEAD）上格式化更改的代码，则可以运行 &lt;code&gt;git-clang-format HEAD~1&lt;/code&gt; 。有关更多详细信息，请参见 &lt;code&gt;git-clang-format -h&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="eb463cc6beabb5e19f505e5b54b8aa6bc4bd08f4" translate="yes" xml:space="preserve">
          <source>If you want to get the &lt;code&gt;frameId&lt;/code&gt; of a given renderer context you should use the &lt;code&gt;webFrame.routingId&lt;/code&gt; value. E.g.</source>
          <target state="translated">如果要获取给定渲染器上下文的 &lt;code&gt;frameId&lt;/code&gt; ，则应使用 &lt;code&gt;webFrame.routingId&lt;/code&gt; 值。例如</target>
        </trans-unit>
        <trans-unit id="1a26518fe1e613b5d3ff699a348197b25272e778" translate="yes" xml:space="preserve">
          <source>If you want to handle keyboard shortcuts for a &lt;a href=&quot;../api/browser-window&quot;&gt;BrowserWindow&lt;/a&gt;, you can use the &lt;code&gt;keyup&lt;/code&gt; and &lt;code&gt;keydown&lt;/code&gt; event listeners on the window object inside the renderer process.</source>
          <target state="translated">如果要处理&lt;a href=&quot;../api/browser-window&quot;&gt;BrowserWindow的&lt;/a&gt;键盘快捷键，则可以在渲染器进程内的窗口对象上使用 &lt;code&gt;keyup&lt;/code&gt; 和 &lt;code&gt;keydown&lt;/code&gt; 事件侦听器。</target>
        </trans-unit>
        <trans-unit id="f9619991e707dfdaa233a6ea6e854f6efa95ba2e" translate="yes" xml:space="preserve">
          <source>If you want to handle keyboard shortcuts within a &lt;a href=&quot;../api/browser-window&quot;&gt;BrowserWindow&lt;/a&gt;, you can listen for the &lt;code&gt;keyup&lt;/code&gt; and &lt;code&gt;keydown&lt;/code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events&quot;&gt;DOM events&lt;/a&gt; inside the renderer process using the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener&quot;&gt;addEventListener() API&lt;/a&gt;.</source>
          <target state="translated">如果要在&lt;a href=&quot;../api/browser-window&quot;&gt;BrowserWindow中&lt;/a&gt;处理键盘快捷键，则可以使用&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener&quot;&gt;addEventListener（）API&lt;/a&gt;监听渲染器进程中的 &lt;code&gt;keyup&lt;/code&gt; 和 &lt;code&gt;keydown&lt;/code&gt; &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events&quot;&gt;DOM事件&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a7af87528df4c89f426fca0b97e3d514b6cc4fe4" translate="yes" xml:space="preserve">
          <source>If you want to handle keyboard shortcuts within a &lt;a href=&quot;api/browser-window&quot;&gt;BrowserWindow&lt;/a&gt;, you can listen for the &lt;code&gt;keyup&lt;/code&gt; and &lt;code&gt;keydown&lt;/code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events&quot;&gt;DOM events&lt;/a&gt; inside the renderer process using the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener&quot;&gt;addEventListener() API&lt;/a&gt;.</source>
          <target state="translated">如果要在&lt;a href=&quot;api/browser-window&quot;&gt;BrowserWindow中&lt;/a&gt;处理键盘快捷键，则可以使用&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener&quot;&gt;addEventListener（）API&lt;/a&gt;监听渲染器进程中的 &lt;code&gt;keyup&lt;/code&gt; 和 &lt;code&gt;keydown&lt;/code&gt; &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events&quot;&gt;DOM事件&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e23f9ec8d6d374e4f11ab44cabacc757c58d8152" translate="yes" xml:space="preserve">
          <source>If you want to keep exact same behaviors on all platforms, you should not rely on the &lt;code&gt;click&lt;/code&gt; event and always attach a context menu to the tray icon.</source>
          <target state="translated">如果要在所有平台上保持完全相同的行为，则不应依赖 &lt;code&gt;click&lt;/code&gt; 事件，而应始终将上下文菜单附加到任务栏图标。</target>
        </trans-unit>
        <trans-unit id="16fa7c70fe6bf74886856fb7d0c2c3ec2dc12b2c" translate="yes" xml:space="preserve">
          <source>If you want to manually switch between light/dark modes, you can do this by setting the desired mode in the &lt;a href=&quot;../api/native-theme#nativethemethemesource&quot;&gt;themeSource&lt;/a&gt; property of the &lt;code&gt;nativeTheme&lt;/code&gt; module. This property's value will be propagated to your Renderer process. Any CSS rules related to &lt;code&gt;prefers-color-scheme&lt;/code&gt; will be updated accordingly.</source>
          <target state="translated">如果要在亮/暗模式之间手动切换，可以通过在 &lt;code&gt;nativeTheme&lt;/code&gt; 模块的&lt;a href=&quot;../api/native-theme#nativethemethemesource&quot;&gt;themeSource&lt;/a&gt;属性中设置所需的模式来实现。该属性的值将传播到您的Renderer进程。所有与 &lt;code&gt;prefers-color-scheme&lt;/code&gt; 相关的CSS规则都会相应更新。</target>
        </trans-unit>
        <trans-unit id="08abf6625066282c15d1acd36b4977905bbaab83" translate="yes" xml:space="preserve">
          <source>If you want to manually switch between light/dark modes, you can do this by setting the desired mode in the &lt;a href=&quot;api/native-theme#nativethemethemesource&quot;&gt;themeSource&lt;/a&gt; property of the &lt;code&gt;nativeTheme&lt;/code&gt; module. This property's value will be propagated to your Renderer process. Any CSS rules related to &lt;code&gt;prefers-color-scheme&lt;/code&gt; will be updated accordingly.</source>
          <target state="translated">如果要在亮/暗模式之间手动切换，可以通过在 &lt;code&gt;nativeTheme&lt;/code&gt; 模块的&lt;a href=&quot;api/native-theme#nativethemethemesource&quot;&gt;themeSource&lt;/a&gt;属性中设置所需的模式来实现。该属性的值将传播到您的Renderer进程。所有与 &lt;code&gt;prefers-color-scheme&lt;/code&gt; 相关的CSS规则都会相应更新。</target>
        </trans-unit>
        <trans-unit id="42b6556ac745af25c9b3f90c599d87788c581b57" translate="yes" xml:space="preserve">
          <source>If you want to receive a single response from the main process, like the result of a method call, consider using &lt;a href=&quot;#ipcrendererinvokechannel-args&quot;&gt;&lt;code&gt;ipcRenderer.invoke&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果要从主进程接收单个响应，例如方法调用的结果，请考虑使用&lt;a href=&quot;#ipcrendererinvokechannel-args&quot;&gt; &lt;code&gt;ipcRenderer.invoke&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f18bc349ad3d428e75b99e3c156715cfcda822c2" translate="yes" xml:space="preserve">
          <source>If you want to show Notifications from a renderer process you should use the &lt;a href=&quot;../tutorial/notifications&quot;&gt;HTML5 Notification API&lt;/a&gt;</source>
          <target state="translated">如果要显示来自渲染器进程的通知，则应使用&lt;a href=&quot;../tutorial/notifications&quot;&gt;HTML5 Notification API&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7b100d63742c1396902bd80576437573757e38c1" translate="yes" xml:space="preserve">
          <source>If you want to show Notifications from a renderer process you should use the &lt;a href=&quot;tutorial/notifications&quot;&gt;HTML5 Notification API&lt;/a&gt;</source>
          <target state="translated">如果要显示来自渲染器进程的通知，则应使用&lt;a href=&quot;tutorial/notifications&quot;&gt;HTML5 Notification API&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9767f677f83eca842bdd0bf0ecee26c0ee37f559" translate="yes" xml:space="preserve">
          <source>If you want to support displays with different DPI densities at the same time, you can put images with different sizes in the same folder and use the filename without DPI suffixes. For example:</source>
          <target state="translated">如果你想同时支持不同DPI密度的显示,你可以把不同尺寸的图像放在同一个文件夹里,并使用不带DPI后缀的文件名。比如说</target>
        </trans-unit>
        <trans-unit id="328af310b89d96317c74ea0727ffffa163478fcf" translate="yes" xml:space="preserve">
          <source>If you want to target arm64, logic like this will typically select the wrong architecture, so carefully check your application and build scripts for conditions like this. In custom build and packaging scripts, you should always check the value of &lt;code&gt;npm_config_arch&lt;/code&gt; in the environment, rather than relying on the current process arch.</source>
          <target state="translated">如果要针对arm64，那么类似这样的逻辑通常会选择错误的体系结构，因此请仔细检查您的应用程序并针对此类情况构建脚本。在定制的构建和打包脚本中，您应该始终在环境中检查 &lt;code&gt;npm_config_arch&lt;/code&gt; 的值，而不是依赖当前的进程体系结构。</target>
        </trans-unit>
        <trans-unit id="8e9880ad441ad45f30eca80c7b9d8eefd5e0f74c" translate="yes" xml:space="preserve">
          <source>If you want to use Chrome's built-in &lt;code&gt;window.open()&lt;/code&gt; implementation, set &lt;code&gt;nativeWindowOpen&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; in the &lt;code&gt;webPreferences&lt;/code&gt; options object.</source>
          <target state="translated">如果要使用Chrome的内置 &lt;code&gt;window.open()&lt;/code&gt; 实现，请在 &lt;code&gt;webPreferences&lt;/code&gt; 选项对象中将 &lt;code&gt;nativeWindowOpen&lt;/code&gt; 设置为 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ba8fa6ac102805baeacc0c51622c2c757699c321" translate="yes" xml:space="preserve">
          <source>If you want to use this method you must disable the builtin spellchecker when you construct the window.</source>
          <target state="translated">如果您想使用此方法,您必须在构建窗口时禁用内置的拼写检查器。</target>
        </trans-unit>
        <trans-unit id="d493f1aaab9516cf7e42fb75df751b76f3dfd6bc" translate="yes" xml:space="preserve">
          <source>If you wish to opt-out while using Electron &amp;gt; 8.0.0, you must set the &lt;code&gt;NSRequiresAquaSystemAppearance&lt;/code&gt; key in the &lt;code&gt;Info.plist&lt;/code&gt; file to &lt;code&gt;true&lt;/code&gt;. Please note that Electron 8.0.0 and above will not let you opt-out of this theming, due to the use of the macOS 10.14 SDK.</source>
          <target state="translated">如果希望在使用Electron&amp;gt; 8.0.0时退出，则必须将 &lt;code&gt;Info.plist&lt;/code&gt; 文件中的 &lt;code&gt;NSRequiresAquaSystemAppearance&lt;/code&gt; 项设置为 &lt;code&gt;true&lt;/code&gt; 。请注意，由于使用了macOS 10.14 SDK，Electron 8.0.0及更高版本将不允许您退出此主题。</target>
        </trans-unit>
        <trans-unit id="aaffc18ff167e6c5dc5030e5cecc520f958918d9" translate="yes" xml:space="preserve">
          <source>If you would like to build both &lt;code&gt;Release&lt;/code&gt; and &lt;code&gt;Debug&lt;/code&gt; targets:</source>
          <target state="translated">如果您要同时构建 &lt;code&gt;Release&lt;/code&gt; 和 &lt;code&gt;Debug&lt;/code&gt; 目标：</target>
        </trans-unit>
        <trans-unit id="f79f8a39f57cfbd50d711f9530442b82349e7cfe" translate="yes" xml:space="preserve">
          <source>If you'd like to contribute to Electron, see the &lt;a href=&quot;https://electronjs.org/CONTRIBUTING&quot;&gt;contributing document&lt;/a&gt;.</source>
          <target state="translated">如果您想为Electron做出贡献，请参阅&lt;a href=&quot;https://electronjs.org/CONTRIBUTING&quot;&gt;贡献文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c0b8132204e1892fbd05ed0f66b5b9d20f26559e" translate="yes" xml:space="preserve">
          <source>If you'd like to contribute to Electron, see the &lt;a href=&quot;https://github.com/electron/electron/blob/master/CONTRIBUTING.md&quot;&gt;contributing document&lt;/a&gt;.</source>
          <target state="translated">如果您想为Electron做出贡献，请参阅&lt;a href=&quot;https://github.com/electron/electron/blob/master/CONTRIBUTING.md&quot;&gt;贡献文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d108f8272b951fb453c00cf7b7e332e6d5ee6191" translate="yes" xml:space="preserve">
          <source>If you're appending an argument like &lt;code&gt;--switch=value&lt;/code&gt;, consider using &lt;code&gt;appendSwitch('switch', 'value')&lt;/code&gt; instead.</source>
          <target state="translated">如果要附加 &lt;code&gt;--switch=value&lt;/code&gt; 之类的参数，请考虑改用 &lt;code&gt;appendSwitch('switch', 'value')&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2aead26dae48a464ea0fe8f7ce84ef9144a991e3" translate="yes" xml:space="preserve">
          <source>If you're debugging something, it can be helpful to pass some extra flags to the Electron binary:</source>
          <target state="translated">如果你在调试一些东西,可以给Electron二进制传递一些额外的标志。</target>
        </trans-unit>
        <trans-unit id="5f5e9e99ea82483efec97ab08ba1a5f91453255c" translate="yes" xml:space="preserve">
          <source>If you're developing Electron and don't plan to redistribute your custom Electron build, you may skip this section.</source>
          <target state="translated">如果你正在开发Electron,并且不打算重新发布你的自定义Electron构建,你可以跳过本节。</target>
        </trans-unit>
        <trans-unit id="c161dc98d83657640db26ca7b021acbcc3a9d819" translate="yes" xml:space="preserve">
          <source>If you're developing a private Electron application, or if you're not publishing releases to GitHub Releases, it may be necessary to run your own update server.</source>
          <target state="translated">如果你正在开发一个私人的Electron应用程序,或者如果你不在GitHub发布版本,可能需要运行自己的更新服务器。</target>
        </trans-unit>
        <trans-unit id="8b9eaf73429dbe46c500b2d1339d9d43d1c25e98" translate="yes" xml:space="preserve">
          <source>If you're looking for programming help, for answers to questions, or to join in discussion with other developers who use Electron, you can interact with the community in these locations:</source>
          <target state="translated">如果你正在寻找编程帮助,寻找问题的答案,或者加入与其他使用Electron的开发者的讨论,你可以在这些地方与社区互动。</target>
        </trans-unit>
        <trans-unit id="816aa1e52dc040306cac74231f09035756d3b3b4" translate="yes" xml:space="preserve">
          <source>If you're not using an integrated build pipeline like Forge or Builder, you are likely using &lt;a href=&quot;https://github.com/electron/electron-packager&quot;&gt;&lt;code&gt;electron-packager&lt;/code&gt;&lt;/a&gt;, which includes &lt;a href=&quot;https://github.com/electron-userland/electron-osx-sign&quot;&gt;&lt;code&gt;electron-osx-sign&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://github.com/electron/electron-notarize&quot;&gt;&lt;code&gt;electron-notarize&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果您未使用Forge或Builder之类的集成构建管道，则可能会使用&lt;a href=&quot;https://github.com/electron/electron-packager&quot;&gt; &lt;code&gt;electron-packager&lt;/code&gt; &lt;/a&gt;，其中包括&lt;a href=&quot;https://github.com/electron-userland/electron-osx-sign&quot;&gt; &lt;code&gt;electron-osx-sign&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;https://github.com/electron/electron-notarize&quot;&gt; &lt;code&gt;electron-notarize&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2e4347e1c3003343233b5246cca112a5cc44df4e" translate="yes" xml:space="preserve">
          <source>If you're only setting a custom titlebar as draggable, you also need to make all buttons in titlebar non-draggable.</source>
          <target state="translated">如果你只是将自定义的标题栏设置为可拖动,还需要将标题栏中的所有按钮设置为不可拖动。</target>
        </trans-unit>
        <trans-unit id="af25fd84a5e354fae9ce7065072bc6d204e2a1e1" translate="yes" xml:space="preserve">
          <source>If you're setting just a custom titlebar as draggable, you also need to make all buttons in titlebar non-draggable.</source>
          <target state="translated">如果你只是将自定义的标题栏设置为可拖动的,你还需要将标题栏中的所有按钮设置为不可拖动的。</target>
        </trans-unit>
        <trans-unit id="f919888e2af1bbd22b248b54264d8e7a6875359e" translate="yes" xml:space="preserve">
          <source>If you're using &lt;code&gt;build-tools&lt;/code&gt;, appropriate &lt;code&gt;-j&lt;/code&gt; values will automatically be used for you.</source>
          <target state="translated">如果您使用的是 &lt;code&gt;build-tools&lt;/code&gt; ，那么将自动为您使用适当的 &lt;code&gt;-j&lt;/code&gt; 值。</target>
        </trans-unit>
        <trans-unit id="8bf0ecf05bfb15e4c20cec629ef1066e38a05a6f" translate="yes" xml:space="preserve">
          <source>If you're using Electron's favorite build tool, getting your application signed and notarized requires a few additions to your configuration. &lt;a href=&quot;https://electronforge.io&quot;&gt;Forge&lt;/a&gt; is a collection of the official Electron tools, using &lt;a href=&quot;https://github.com/electron/electron-packager&quot;&gt;&lt;code&gt;electron-packager&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/electron-userland/electron-osx-sign&quot;&gt;&lt;code&gt;electron-osx-sign&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;https://github.com/electron/electron-notarize&quot;&gt;&lt;code&gt;electron-notarize&lt;/code&gt;&lt;/a&gt; under the hood.</source>
          <target state="translated">如果您使用的是Electron最喜欢的构建工具，则对应用程序进行签名和公证需要对配置进行一些补充。&lt;a href=&quot;https://electronforge.io&quot;&gt;Forge&lt;/a&gt;是官方的Electron工具的集合，使用了&lt;a href=&quot;https://github.com/electron/electron-packager&quot;&gt; &lt;code&gt;electron-packager&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;https://github.com/electron-userland/electron-osx-sign&quot;&gt; &lt;code&gt;electron-osx-sign&lt;/code&gt; &lt;/a&gt;和在引擎盖下进行&lt;a href=&quot;https://github.com/electron/electron-notarize&quot;&gt; &lt;code&gt;electron-notarize&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="dfb91461f3270851f4aabc5259ff9b378e4a6391" translate="yes" xml:space="preserve">
          <source>If you're using Packager's API, you can pass &lt;a href=&quot;https://electron.github.io/electron-packager/master/interfaces/electronpackager.options.html&quot;&gt;in configuration that both signs and notarizes your application&lt;/a&gt;.</source>
          <target state="translated">如果您使用Packager的API，则可以传入&lt;a href=&quot;https://electron.github.io/electron-packager/master/interfaces/electronpackager.options.html&quot;&gt;对应用程序进行签名和公证的配置&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0d4152d746ef76603ca3b1bace3cae203a001696" translate="yes" xml:space="preserve">
          <source>If you're using a transpiler/compiler like TypeScript, examine its configuration and ensure that you're targeting the latest ECMAScript version supported by Electron.</source>
          <target state="translated">如果你使用的是像TypeScript这样的转码器/编译器,请检查它的配置并确保你的目标是Electron支持的最新ECMAScript版本。</target>
        </trans-unit>
        <trans-unit id="e6b3c3654b5d12a62eae18258917bf4a22841276" translate="yes" xml:space="preserve">
          <source>If you've found a bug in a &lt;a href=&quot;#supported-versions&quot;&gt;supported version&lt;/a&gt; of Electron, please report it with the &lt;a href=&quot;../development/issues&quot;&gt;issue tracker&lt;/a&gt;.</source>
          <target state="translated">如果您在&lt;a href=&quot;#supported-versions&quot;&gt;受支持&lt;/a&gt;的Electron 版本中发现了错误，请向&lt;a href=&quot;../development/issues&quot;&gt;问题跟踪器&lt;/a&gt;报告。</target>
        </trans-unit>
        <trans-unit id="317fd2ed19d313febf9709098ba52a3d10a1546c" translate="yes" xml:space="preserve">
          <source>If you've found a bug in a &lt;a href=&quot;#supported-versions&quot;&gt;supported version&lt;/a&gt; of Electron, please report it with the &lt;a href=&quot;development/issues&quot;&gt;issue tracker&lt;/a&gt;.</source>
          <target state="translated">如果您发现了&lt;a href=&quot;#supported-versions&quot;&gt;受支持&lt;/a&gt;的Electron版本中的错误，请向&lt;a href=&quot;development/issues&quot;&gt;问题跟踪器&lt;/a&gt;报告该错误。</target>
        </trans-unit>
        <trans-unit id="83cde1678e22555cea50d9dba022038c0481c357" translate="yes" xml:space="preserve">
          <source>If your Visual Studio is installed in a directory other than the default, you'll need to set a few environment variables to point the toolchains to your installation path.</source>
          <target state="translated">如果你的Visual Studio安装在一个非默认的目录中,你需要设置一些环境变量,将工具链指向你的安装路径。</target>
        </trans-unit>
        <trans-unit id="ac034e9dd471eb0680d3bb87436c2f1c385f1f31" translate="yes" xml:space="preserve">
          <source>If your app doesn't use any native modules, then it's really easy to create an Arm version of your app.</source>
          <target state="translated">如果你的应用没有使用任何本地模块,那么创建一个Arm版本的应用真的很容易。</target>
        </trans-unit>
        <trans-unit id="a96ddbc042e498571c8e2d0224cc23cdef0e2780" translate="yes" xml:space="preserve">
          <source>If your app has its own dark mode, you should toggle it on and off in sync with the system's dark mode setting. You can do this by using the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/@media/prefers-color-scheme&quot;&gt;prefer-color-scheme&lt;/a&gt; CSS media query.</source>
          <target state="translated">如果您的应用具有自己的暗模式，则应与系统的暗模式设置同步打开和关闭它。您可以通过使用&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/@media/prefers-color-scheme&quot;&gt;preferred-color-scheme&lt;/a&gt; CSS媒体查询来实现。</target>
        </trans-unit>
        <trans-unit id="e97395a97ab0d83dd8253148219bda14c139d633" translate="yes" xml:space="preserve">
          <source>If your app has no need for navigation, you can call &lt;code&gt;event.preventDefault()&lt;/code&gt; in a &lt;a href=&quot;../api/web-contents#event-will-navigate&quot;&gt;&lt;code&gt;will-navigate&lt;/code&gt;&lt;/a&gt; handler. If you know which pages your app might navigate to, check the URL in the event handler and only let navigation occur if it matches the URLs you're expecting.</source>
          <target state="translated">如果您的应用无需导航，则可以在&lt;a href=&quot;../api/web-contents#event-will-navigate&quot;&gt; &lt;code&gt;will-navigate&lt;/code&gt; &lt;/a&gt;处理程序中调用 &lt;code&gt;event.preventDefault()&lt;/code&gt; 。如果您知道您的应用可能会导航到哪些页面，请检查事件处理程序中的URL，仅在与您期望的URL匹配时才进行导航。</target>
        </trans-unit>
        <trans-unit id="a2062767040e060b8a328bc1c68dec44cdbcfede" translate="yes" xml:space="preserve">
          <source>If your app has no need for navigation, you can call &lt;code&gt;event.preventDefault()&lt;/code&gt; in a &lt;a href=&quot;api/web-contents#event-will-navigate&quot;&gt;&lt;code&gt;will-navigate&lt;/code&gt;&lt;/a&gt; handler. If you know which pages your app might navigate to, check the URL in the event handler and only let navigation occur if it matches the URLs you're expecting.</source>
          <target state="translated">如果您的应用无需导航，则可以在&lt;a href=&quot;api/web-contents#event-will-navigate&quot;&gt; &lt;code&gt;will-navigate&lt;/code&gt; &lt;/a&gt;处理程序中调用 &lt;code&gt;event.preventDefault()&lt;/code&gt; 。如果您知道您的应用可能会导航到哪些页面，请检查事件处理程序中的URL，仅在与您期望的URL匹配时才进行导航。</target>
        </trans-unit>
        <trans-unit id="0a8670c9b3e2d32026da8aaa4611925534a8a5f6" translate="yes" xml:space="preserve">
          <source>If your app has no need to navigate or only needs to navigate to known pages, it is a good idea to limit navigation outright to that known scope, disallowing any other kinds of navigation.</source>
          <target state="translated">如果你的应用不需要导航,或者只需要导航到已知的页面,那么直接将导航限制在该已知的范围内,不允许任何其他类型的导航,是个好主意。</target>
        </trans-unit>
        <trans-unit id="51aa10ea3c1c92e6ecacb529aa885236faf8f979" translate="yes" xml:space="preserve">
          <source>If your app is packaged with &lt;a href=&quot;https://github.com/electron-userland/electron-builder&quot;&gt;&lt;code&gt;electron-builder&lt;/code&gt;&lt;/a&gt; you can use the &lt;a href=&quot;https://www.electron.build/auto-update&quot;&gt;electron-updater&lt;/a&gt; module, which does not require a server and allows for updates from S3, GitHub or any other static file host. This sidesteps Electron's built-in update mechanism, meaning that the rest of this documentation will not apply to &lt;code&gt;electron-builder&lt;/code&gt;'s updater.</source>
          <target state="translated">如果您的应用与&lt;a href=&quot;https://github.com/electron-userland/electron-builder&quot;&gt; &lt;code&gt;electron-builder&lt;/code&gt; &lt;/a&gt;打包在一起，则可以使用&lt;a href=&quot;https://www.electron.build/auto-update&quot;&gt;电子更新器&lt;/a&gt;模块，该模块不需要服务器，并且可以从S3，GitHub或任何其他静态文件主机进行更新。这回避了Electron的内置更新机制，这意味着本文档的其余部分将不适用于 &lt;code&gt;electron-builder&lt;/code&gt; 的更新器。</target>
        </trans-unit>
        <trans-unit id="4c91aa3550c425c5f42a685ca2ce387079dc10f8" translate="yes" xml:space="preserve">
          <source>If your app runs with Electron 6.0.8 or later, you can now build it for Windows 10 on Arm. This considerably improves performance, but requires recompilation of any native modules used in your app. It may also require small fixups to your build and packaging scripts.</source>
          <target state="translated">如果你的应用在Electron 6.0.8或更高版本中运行,你现在可以在Arm上为Windows 10构建它。这极大地提高了性能,但需要重新编译应用程序中使用的任何本地模块。这可能还需要对您的构建和打包脚本进行小的修正。</target>
        </trans-unit>
        <trans-unit id="b5db399cb506fdf95ca39ff6d372b347df9a8b96" translate="yes" xml:space="preserve">
          <source>If your crash ingestion server does not support compressed payloads, you can turn off compression by specifying &lt;code&gt;{ compress: false }&lt;/code&gt; in the crash reporter options.</source>
          <target state="translated">如果崩溃接收服务器不支持压缩的有效负载，则可以通过在崩溃报告器选项中指定 &lt;code&gt;{ compress: false }&lt;/code&gt; 来关闭压缩。</target>
        </trans-unit>
        <trans-unit id="afeba0f50d830551f87d523923c509fa4098940d" translate="yes" xml:space="preserve">
          <source>Iframes</source>
          <target state="translated">Iframes</target>
        </trans-unit>
        <trans-unit id="25818d994b9714bdeb509e88b48c3d68d9c085b6" translate="yes" xml:space="preserve">
          <source>Iframes in Electron behave like iframes in regular browsers. An &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; element in your page can show external web pages, provided that their &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP&quot;&gt;Content Security Policy&lt;/a&gt; allows it. To limit the number of capabilities of a site in an &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; tag, it is recommended to use the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe#attr-sandbox&quot;&gt;&lt;code&gt;sandbox&lt;/code&gt; attribute&lt;/a&gt; and only allow the capabilities you want to support.</source>
          <target state="translated">Electron中的iframe与常规浏览器中的iframe一样。页面中的 &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; 元素可以显示外部网页，前提是其&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP&quot;&gt;内容安全策略&lt;/a&gt;允许。要限制 &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; 标记中网站的功能数量，建议使用&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe#attr-sandbox&quot;&gt; &lt;code&gt;sandbox&lt;/code&gt; 属性，&lt;/a&gt;并且仅允许您要支持的功能。</target>
        </trans-unit>
        <trans-unit id="892280c67a78254c94b3aa2e961496a6129be496" translate="yes" xml:space="preserve">
          <source>Ignore application menu shortcuts while this web contents is focused.</source>
          <target state="translated">在关注本网站内容时,请忽略应用程序菜单的快捷方式。</target>
        </trans-unit>
        <trans-unit id="424100d46b3ab239a3c2ec5d1347f13d4479a06e" translate="yes" xml:space="preserve">
          <source>Ignore the connections limit for &lt;code&gt;domains&lt;/code&gt; list separated by &lt;code&gt;,&lt;/code&gt;.</source>
          <target state="translated">忽略以 &lt;code&gt;,&lt;/code&gt; 分隔的 &lt;code&gt;domains&lt;/code&gt; 列表的连接限制。</target>
        </trans-unit>
        <trans-unit id="d5fcbfbdcdfee026e6182c4343823188f45b893e" translate="yes" xml:space="preserve">
          <source>Ignores certificate related errors.</source>
          <target state="translated">忽略证书相关的错误。</target>
        </trans-unit>
        <trans-unit id="5044799f824f27630de93bd0f1eb314c6bd530a3" translate="yes" xml:space="preserve">
          <source>Ignoring Above Advice</source>
          <target state="translated">无视上述建议</target>
        </trans-unit>
        <trans-unit id="a063d213139ef01259fb2e1362319e9b85ed8247" translate="yes" xml:space="preserve">
          <source>Ignoring mouse messages makes the web page oblivious to mouse movement, meaning that mouse movement events will not be emitted. On Windows operating systems an optional parameter can be used to forward mouse move messages to the web page, allowing events such as &lt;code&gt;mouseleave&lt;/code&gt; to be emitted:</source>
          <target state="translated">忽略鼠标消息会使网页忽略鼠标移动，这意味着将不会发出鼠标移动事件。在Windows操作系统上，可以使用可选参数将鼠标移动消息转发到网页，从而允许发出诸如 &lt;code&gt;mouseleave&lt;/code&gt; 之类的事件：</target>
        </trans-unit>
        <trans-unit id="d61395e15170593395436a90303b589946ad7e24" translate="yes" xml:space="preserve">
          <source>Immediately shows the notification to the user, please note this means unlike the HTML5 Notification implementation, instantiating a &lt;code&gt;new Notification&lt;/code&gt; does not immediately show it to the user, you need to call this method before the OS will display it.</source>
          <target state="translated">立即向用户显示通知，请注意，这意味着与HTML5 Notification实现不同，实例化 &lt;code&gt;new Notification&lt;/code&gt; 不会立即向用户显示通知，您需要在操作系统显示该方法之前调用此方法。</target>
        </trans-unit>
        <trans-unit id="3ca349de6e383b65bb6d1144f63a50efd179453b" translate="yes" xml:space="preserve">
          <source>Immediately shows the notification to the user, please note this means unlike the HTML5 Notification implementation, simply instantiating a &lt;code&gt;new Notification&lt;/code&gt; does not immediately show it to the user, you need to call this method before the OS will display it.</source>
          <target state="translated">立即向用户显示通知，请注意，这意味着与HTML5 Notification实现不同，仅实例化一个 &lt;code&gt;new Notification&lt;/code&gt; 不会立即向用户显示该通知，您需要在操作系统显示它之前调用此方法。</target>
        </trans-unit>
        <trans-unit id="ebb90ad1916e70a7d909dacfe5051f48aa4dd948" translate="yes" xml:space="preserve">
          <source>Implementing Updates in Your App</source>
          <target state="translated">在您的应用程序中实施更新</target>
        </trans-unit>
        <trans-unit id="3ac28996909d61694a5d92238b0257784c34868e" translate="yes" xml:space="preserve">
          <source>Import Electron Forge to your app folder:</source>
          <target state="translated">将Electron Forge导入到你的应用程序文件夹中。</target>
        </trans-unit>
        <trans-unit id="35256a74cd327e48afb44264e126538252574d13" translate="yes" xml:space="preserve">
          <source>ImportError: No module named win32file</source>
          <target state="translated">ImportError.没有名为win32file的模块。没有名为win32file的模块</target>
        </trans-unit>
        <trans-unit id="80a2156ead1464481656033b2bec2df99e3e0ae6" translate="yes" xml:space="preserve">
          <source>Important Note: &lt;a href=&quot;../api/webview-tag#warning&quot;&gt;we do not recommend you to use use WebViews&lt;/a&gt;, as this tag undergoes dramatic architectural changes that may affect stability of your application. Consider switching to alternatives, like &lt;code&gt;iframe&lt;/code&gt; and Electron's &lt;code&gt;BrowserView&lt;/code&gt;, or an architecture that avoids embedded content by design.</source>
          <target state="translated">重要说明：&lt;a href=&quot;../api/webview-tag#warning&quot;&gt;我们不建议您使用WebViews&lt;/a&gt;，因为此标签进行了重大的体系结构更改，可能会影响应用程序的稳定性。考虑切换到其他替代方案，例如 &lt;code&gt;iframe&lt;/code&gt; 和Electron的 &lt;code&gt;BrowserView&lt;/code&gt; ，或一种避免设计导致嵌入内容的体系结构。</target>
        </trans-unit>
        <trans-unit id="74e63e1abcc3e42be0673213a26dae4874c870fb" translate="yes" xml:space="preserve">
          <source>Important Note: &lt;a href=&quot;api/webview-tag#warning&quot;&gt;we do not recommend you to use use WebViews&lt;/a&gt;, as this tag undergoes dramatic architectural changes that may affect stability of your application. Consider switching to alternatives, like &lt;code&gt;iframe&lt;/code&gt; and Electron's &lt;code&gt;BrowserView&lt;/code&gt;, or an architecture that avoids embedded content by design.</source>
          <target state="translated">重要说明：&lt;a href=&quot;api/webview-tag#warning&quot;&gt;我们不建议您使用WebViews&lt;/a&gt;，因为此标签进行了重大的体系结构更改，可能会影响应用程序的稳定性。考虑切换到其他替代方案，例如 &lt;code&gt;iframe&lt;/code&gt; 和Electron的 &lt;code&gt;BrowserView&lt;/code&gt; ，或一种避免设计导致嵌入内容的体系结构。</target>
        </trans-unit>
        <trans-unit id="ebcfb4906925f0491b8dbb88fb357667615aabaa" translate="yes" xml:space="preserve">
          <source>Important things to notice in the preload script:</source>
          <target state="translated">预加载脚本中需要注意的重要事项。</target>
        </trans-unit>
        <trans-unit id="ee896cf9660d981f601a64d656271d3fb2ecc95f" translate="yes" xml:space="preserve">
          <source>Imports the certificate in pkcs12 format into the platform certificate store. &lt;code&gt;callback&lt;/code&gt; is called with the &lt;code&gt;result&lt;/code&gt; of import operation, a value of &lt;code&gt;0&lt;/code&gt; indicates success while any other value indicates failure according to Chromium &lt;a href=&quot;https://code.google.com/p/chromium/codesearch#chromium/src/net/base/net_error_list.h&quot;&gt;net_error_list&lt;/a&gt;.</source>
          <target state="translated">将pkcs12格式的证书导入平台证书存储中。根据Chromium &lt;a href=&quot;https://code.google.com/p/chromium/codesearch#chromium/src/net/base/net_error_list.h&quot;&gt;net_error_list&lt;/a&gt;，将使用导入操作的 &lt;code&gt;result&lt;/code&gt; &lt;code&gt;callback&lt;/code&gt; 值为 &lt;code&gt;0&lt;/code&gt; 表示成功，而其他任何值表示失败。</target>
        </trans-unit>
        <trans-unit id="aeebb2ee44266da25bb466aa24666f88aee9acbf" translate="yes" xml:space="preserve">
          <source>Imports the certificate in pkcs12 format into the platform certificate store. &lt;code&gt;callback&lt;/code&gt; is called with the &lt;code&gt;result&lt;/code&gt; of import operation, a value of &lt;code&gt;0&lt;/code&gt; indicates success while any other value indicates failure according to chromium &lt;a href=&quot;https://code.google.com/p/chromium/codesearch#chromium/src/net/base/net_error_list.h&quot;&gt;net_error_list&lt;/a&gt;.</source>
          <target state="translated">将pkcs12格式的证书导入平台证书存储中。根据导入操作的 &lt;code&gt;result&lt;/code&gt; &lt;code&gt;callback&lt;/code&gt; ，值 &lt;code&gt;0&lt;/code&gt; 表示成功，而其他任何值则根据铬&lt;a href=&quot;https://code.google.com/p/chromium/codesearch#chromium/src/net/base/net_error_list.h&quot;&gt;net_error_list&lt;/a&gt;表示失败。</target>
        </trans-unit>
        <trans-unit id="80975bcad8a865f0024bd74f52d8e3210a0d2b90" translate="yes" xml:space="preserve">
          <source>Improper use of &lt;a href=&quot;../api/shell#shellopenexternalurl-options&quot;&gt;&lt;code&gt;openExternal&lt;/code&gt;&lt;/a&gt; can be leveraged to compromise the user's host. When openExternal is used with untrusted content, it can be leveraged to execute arbitrary commands.</source>
          <target state="translated">可能会利用&lt;a href=&quot;../api/shell#shellopenexternalurl-options&quot;&gt; &lt;code&gt;openExternal&lt;/code&gt; 的&lt;/a&gt;不当使用来危害用户的主机。当openExternal与不受信任的内容一起使用时，可以利用它来执行任意命令。</target>
        </trans-unit>
        <trans-unit id="9affe9f4f1f91678197560baa0de8f251f819c94" translate="yes" xml:space="preserve">
          <source>Improper use of &lt;a href=&quot;api/shell#shellopenexternalurl-options&quot;&gt;&lt;code&gt;openExternal&lt;/code&gt;&lt;/a&gt; can be leveraged to compromise the user's host. When openExternal is used with untrusted content, it can be leveraged to execute arbitrary commands.</source>
          <target state="translated">可能会利用&lt;a href=&quot;api/shell#shellopenexternalurl-options&quot;&gt; &lt;code&gt;openExternal&lt;/code&gt; 的&lt;/a&gt;不当使用来危害用户的主机。当openExternal与不受信任的内容一起使用时，可以利用它来执行任意命令。</target>
        </trans-unit>
        <trans-unit id="93eb2d382a0cf31181d40b8e56752440dc849dc7" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;https://github.com/electron/electron/blob/master/appveyor.yml&quot;&gt;appveyor.yml&lt;/a&gt;, the image is identified by the property &lt;em&gt;image&lt;/em&gt;.</source>
          <target state="translated">在&lt;a href=&quot;https://github.com/electron/electron/blob/master/appveyor.yml&quot;&gt;appveyor.yml中&lt;/a&gt;，该图像由属性&lt;em&gt;image&lt;/em&gt;标识。</target>
        </trans-unit>
        <trans-unit id="54d043d66902b54dc09febe87486b632a9ed7082" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;electron-crashpad-vA.B.C.D&lt;/code&gt;, cherry-pick the patch's checksum</source>
          <target state="translated">在 &lt;code&gt;electron-crashpad-vA.B.C.D&lt;/code&gt; ，选择补丁的校验和</target>
        </trans-unit>
        <trans-unit id="2c0a5b221735fd5165fe6a72b7dd95e84d476107" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;script/upload.py&lt;/code&gt;, you &lt;em&gt;must&lt;/em&gt; set &lt;code&gt;ELECTRON_REPO&lt;/code&gt; to your fork (&lt;code&gt;MYORG/electron&lt;/code&gt;), especially if you are a contributor to Electron proper.</source>
          <target state="translated">在 &lt;code&gt;script/upload.py&lt;/code&gt; 中，&lt;em&gt;必须&lt;/em&gt;将 &lt;code&gt;ELECTRON_REPO&lt;/code&gt; 设置为fork（ &lt;code&gt;MYORG/electron&lt;/code&gt; ），特别是如果您是Electron 属性的贡献者。</target>
        </trans-unit>
        <trans-unit id="21e0f6f2ce9e10de95c77dbb8d73d89c7bd736b0" translate="yes" xml:space="preserve">
          <source>In Chromium, this process is referred to as the &quot;browser process&quot;. It is renamed in Electron to avoid confusion with renderer processes.</source>
          <target state="translated">在Chromium中,这个进程被称为 &quot;浏览器进程&quot;。在Electron中,它被重新命名为 &quot;浏览器进程&quot;,以避免与渲染器进程混淆。</target>
        </trans-unit>
        <trans-unit id="0ab2e606ea24062674776c9630ae58f479fc3332" translate="yes" xml:space="preserve">
          <source>In Detail</source>
          <target state="translated">详细介绍</target>
        </trans-unit>
        <trans-unit id="f1437a264a3475229aede1c4942b00e775cc3256" translate="yes" xml:space="preserve">
          <source>In Detail: Electron's Versioning Scheme</source>
          <target state="translated">详细介绍。Electron的版本方案</target>
        </trans-unit>
        <trans-unit id="48a32c72dc62cc33ed97d937cb01ff3252d0a200" translate="yes" xml:space="preserve">
          <source>In Detail: Installing Electron</source>
          <target state="translated">详细介绍。安装电子</target>
        </trans-unit>
        <trans-unit id="f1e68e5a8bcc9c028bebf7a43fc653e2a4ab4f00" translate="yes" xml:space="preserve">
          <source>In Detail: Packaging App Source Code with asar</source>
          <target state="translated">详解 用asar打包App源代码</target>
        </trans-unit>
        <trans-unit id="cad4f214e72fcc9d3a93d8052858e48edb7b60be" translate="yes" xml:space="preserve">
          <source>In Detail: Using Pepper Flash Plugin</source>
          <target state="translated">详细介绍:使用Pepper Flash插件</target>
        </trans-unit>
        <trans-unit id="7fada1074b55085e8425e24c9b5cdb61ea84c1ba" translate="yes" xml:space="preserve">
          <source>In Detail: Using Widevine CDM Plugin</source>
          <target state="translated">详细介绍 使用Widevine CDM插件</target>
        </trans-unit>
        <trans-unit id="6cff52c011bfed815b8af07ca624dea395e580f9" translate="yes" xml:space="preserve">
          <source>In Devtron, there is a new accessibility tab which will allow you to audit a page in your app, sort and filter the results.</source>
          <target state="translated">在Devtron中,有一个新的可访问性标签,它将允许您审核应用程序中的页面,排序和过滤结果。</target>
        </trans-unit>
        <trans-unit id="3a51a157251fd6774edf5dfa74f615531dbb4aca" translate="yes" xml:space="preserve">
          <source>In Devtron, there is an accessibility tab which will allow you to audit a page in your app, sort and filter the results.</source>
          <target state="translated">在Devtron中,有一个可访问性选项卡,它可以让你审核应用程序中的页面,对结果进行排序和过滤。</target>
        </trans-unit>
        <trans-unit id="1d0a705d0d8940c67fb021afdcf78a9ef8a67315" translate="yes" xml:space="preserve">
          <source>In Electron &amp;lt;=6, this would return a &lt;code&gt;FileList&lt;/code&gt; with a &lt;code&gt;File&lt;/code&gt; object for:</source>
          <target state="translated">在Electron &amp;lt;= 6中，这将返回带有 &lt;code&gt;File&lt;/code&gt; 对象的 &lt;code&gt;FileList&lt;/code&gt; ，用于：</target>
        </trans-unit>
        <trans-unit id="aaf225b3428e50bd33b903dbe40e005dff21a519" translate="yes" xml:space="preserve">
          <source>In Electron 12, &lt;code&gt;contextIsolation&lt;/code&gt; will be enabled by default. To restore the previous behavior, &lt;code&gt;contextIsolation: false&lt;/code&gt; must be specified in WebPreferences.</source>
          <target state="translated">在Electron 12中，默认情况下将启用 &lt;code&gt;contextIsolation&lt;/code&gt; 。若要恢复以前的行为，必须在WebPreferences中指定 &lt;code&gt;contextIsolation: false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="843d56141e607369d152c0036082a52a6b00e934" translate="yes" xml:space="preserve">
          <source>In Electron 7, this now returns a &lt;code&gt;FileList&lt;/code&gt; with a &lt;code&gt;File&lt;/code&gt; object for:</source>
          <target state="translated">在Electron 7中，这现在返回带有 &lt;code&gt;File&lt;/code&gt; 对象的 &lt;code&gt;FileList&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="2c2ca90c6c6031612b73199be39fe9042b1e0b8a" translate="yes" xml:space="preserve">
          <source>In Electron 8.0, IPC was changed to use the Structured Clone Algorithm, bringing significant performance improvements. To help ease the transition, the old IPC serialization algorithm was kept and used for some objects that aren't serializable with Structured Clone. In particular, DOM objects (e.g. &lt;code&gt;Element&lt;/code&gt;, &lt;code&gt;Location&lt;/code&gt; and &lt;code&gt;DOMMatrix&lt;/code&gt;), Node.js objects backed by C++ classes (e.g. &lt;code&gt;process.env&lt;/code&gt;, some members of &lt;code&gt;Stream&lt;/code&gt;), and Electron objects backed by C++ classes (e.g. &lt;code&gt;WebContents&lt;/code&gt;, &lt;code&gt;BrowserWindow&lt;/code&gt; and &lt;code&gt;WebFrame&lt;/code&gt;) are not serializable with Structured Clone. Whenever the old algorithm was invoked, a deprecation warning was printed.</source>
          <target state="translated">在Electron 8.0中，将IPC更改为使用结构化克隆算法，从而显着提高了性能。为了帮助简化过渡，保留了旧的IPC序列化算法，并将其用于某些无法使用结构化克隆序列化的对象。特别是，DOM对象（例如 &lt;code&gt;Element&lt;/code&gt; ， &lt;code&gt;Location&lt;/code&gt; 和 &lt;code&gt;DOMMatrix&lt;/code&gt; ），由C ++类支持的Node.js对象（例如 &lt;code&gt;process.env&lt;/code&gt; ， &lt;code&gt;Stream&lt;/code&gt; 的某些成员）和由C ++类支持的Electron对象（例如 &lt;code&gt;WebContents&lt;/code&gt; ， &lt;code&gt;BrowserWindow&lt;/code&gt; 和 &lt;code&gt;WebFrame&lt;/code&gt; ）是无法使用结构化克隆序列化。每当调用旧算法时，就会显示弃用警告。</target>
        </trans-unit>
        <trans-unit id="0014b5b3fddf891600080a2d855b30f8fff38d83" translate="yes" xml:space="preserve">
          <source>In Electron 9, using the remote module without explicitly enabling it via the &lt;code&gt;enableRemoteModule&lt;/code&gt; WebPreferences option began emitting a warning. In Electron 10, the remote module is now disabled by default. To use the remote module, &lt;code&gt;enableRemoteModule: true&lt;/code&gt; must be specified in WebPreferences:</source>
          <target state="translated">在Electron 9中，使用没有通过 &lt;code&gt;enableRemoteModule&lt;/code&gt; WebPreferences选项显式启用它的远程模块开始发出警告。在Electron 10中，现在默认情况下禁用远程模块。要使用远程模块，必须在WebPreferences中指定 &lt;code&gt;enableRemoteModule: true&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="d3e8c29e8bef6ac53ceaa6086d444a6d8b05a4dd" translate="yes" xml:space="preserve">
          <source>In Electron 9.0, the old serialization algorithm has been removed, and sending such non-serializable objects will now throw an &quot;object could not be cloned&quot; error.</source>
          <target state="translated">在Electron 9.0中,旧的序列化算法已经被移除,现在发送这种不可序列化的对象将抛出 &quot;对象无法被克隆 &quot;的错误。</target>
        </trans-unit>
        <trans-unit id="9d9c3ade67add20f1f2811f5e2457d94c8480632" translate="yes" xml:space="preserve">
          <source>In Electron there are two sets of APIs: Node APIs provided by Node.js and Web APIs provided by Chromium. Both APIs support reading files from &lt;code&gt;asar&lt;/code&gt; archives.</source>
          <target state="translated">在Electron中，有两组API：Node.js提供的Node API和Chromium提供的Web API。两种API均支持从 &lt;code&gt;asar&lt;/code&gt; 档案中读取文件。</target>
        </trans-unit>
        <trans-unit id="0b42fd03fbe33fd66fe7eccfe82548b3608207c4" translate="yes" xml:space="preserve">
          <source>In Electron we took a very similar approach: for &lt;code&gt;Debug&lt;/code&gt; builds, the binary will be linked to a shared library version of Chromium's components to achieve fast linking time; for &lt;code&gt;Release&lt;/code&gt; builds, the binary will be linked to the static library versions, so we can have the best possible binary size and performance.</source>
          <target state="translated">在Electron中，我们采用了一种非常相似的方法：对于 &lt;code&gt;Debug&lt;/code&gt; 构建，二进制文件将链接到Chromium组件的共享库版本，以实现快速链接时间；对于 &lt;code&gt;Release&lt;/code&gt; 版本，二进制文件将链接到静态库版本，因此我们可以拥有最佳的二进制文件大小和性能。</target>
        </trans-unit>
        <trans-unit id="621b692306e5cced167a10f5fe89210f064bd7fd" translate="yes" xml:space="preserve">
          <source>In Electron you can use the Widevine CDM library shipped with Chrome browser.</source>
          <target state="translated">在Electron中,你可以使用Chrome浏览器附带的Widevine CDM库。</target>
        </trans-unit>
        <trans-unit id="625f5fe9d865e659c090177d284e16759fd6bea9" translate="yes" xml:space="preserve">
          <source>In Electron you can use the Widevine CDM plugin shipped with Chrome browser.</source>
          <target state="translated">在Electron中,你可以使用Chrome浏览器附带的Widevine CDM插件。</target>
        </trans-unit>
        <trans-unit id="e1e890d94f8d23d7f8fadfe52d2a05946a4ed8db" translate="yes" xml:space="preserve">
          <source>In Electron, GUI-related modules (such as &lt;code&gt;dialog&lt;/code&gt;, &lt;code&gt;menu&lt;/code&gt; etc.) are only available in the main process, not in the renderer process. In order to use them from the renderer process, the &lt;code&gt;ipc&lt;/code&gt; module is necessary to send inter-process messages to the main process. With the &lt;code&gt;remote&lt;/code&gt; module, you can invoke methods of the main process object without explicitly sending inter-process messages, similar to Java's &lt;a href=&quot;https://en.wikipedia.org/wiki/Java_remote_method_invocation&quot;&gt;RMI&lt;/a&gt;. An example of creating a browser window from a renderer process:</source>
          <target state="translated">在Electron中，与GUI相关的模块（例如， &lt;code&gt;dialog&lt;/code&gt; ， &lt;code&gt;menu&lt;/code&gt; 等）仅在主进程中可用，而在渲染器进程中不可用。为了从渲染器进程中使用它们， &lt;code&gt;ipc&lt;/code&gt; 模块对于将进程间消息发送到主进程是必需的。使用 &lt;code&gt;remote&lt;/code&gt; 模块，您可以调用主流程对象的方法而无需显式发送进程间消息，这类似于Java的&lt;a href=&quot;https://en.wikipedia.org/wiki/Java_remote_method_invocation&quot;&gt;RMI&lt;/a&gt;。从渲染器进程创建浏览器窗口的示例：</target>
        </trans-unit>
        <trans-unit id="1202e6b2d57c7ee8995daa820672658a3e0badef" translate="yes" xml:space="preserve">
          <source>In Electron, Node.js and Chromium share a single V8 instance&amp;mdash;usually the version that Chromium is using. Most of the time this &lt;em&gt;just works&lt;/em&gt; but sometimes it means patching Node.js.</source>
          <target state="translated">在Electron中，Node.js和Chromium共享一个V8实例，通常是Chromium使用的版本。这其中大部分时间&lt;em&gt;只是工作&lt;/em&gt;，但有时它意味着修补Node.js的</target>
        </trans-unit>
        <trans-unit id="3034223aae286e52538a3884619c4b3277a74c70" translate="yes" xml:space="preserve">
          <source>In Electron, for the APIs that take images, you can pass either file paths or &lt;code&gt;NativeImage&lt;/code&gt; instances. An empty image will be used when &lt;code&gt;null&lt;/code&gt; is passed.</source>
          <target state="translated">在Electron中，对于获取图像的API，您可以传递文件路径或 &lt;code&gt;NativeImage&lt;/code&gt; 实例。传递 &lt;code&gt;null&lt;/code&gt; 时将使用空图像。</target>
        </trans-unit>
        <trans-unit id="b349f269ed56f6dd1e5062315e66fa6cb87823e6" translate="yes" xml:space="preserve">
          <source>In Electron, the entry point is a JavaScript script. Instead of providing a URL directly, you manually create a browser window and load an HTML file using the API. You also need to listen to window events to decide when to quit the application.</source>
          <target state="translated">在Electron中,入口点是一个JavaScript脚本。而不是直接提供一个URL,你需要手动创建一个浏览器窗口,并使用API加载一个HTML文件。你还需要监听窗口事件来决定何时退出应用程序。</target>
        </trans-unit>
        <trans-unit id="14187e1fe61b244be8f4e80375b8a9c8e7433f8a" translate="yes" xml:space="preserve">
          <source>In Electron, the entry point is always a JavaScript script. Instead of providing a URL directly, you manually create a browser window and load an HTML file using the API. You also need to listen to window events to decide when to quit the application.</source>
          <target state="translated">在Electron中,切入点总是一个JavaScript脚本,而不是直接提供URL,你可以手动创建浏览器窗口并使用API加载HTML文件。而不是直接提供一个URL,你需要手动创建一个浏览器窗口,并使用API加载一个HTML文件。你还需要监听窗口事件来决定何时退出应用程序。</target>
        </trans-unit>
        <trans-unit id="63df86282942316da6f7f2debaa8b9d3f7f75671" translate="yes" xml:space="preserve">
          <source>In Electron, the process that runs &lt;code&gt;package.json&lt;/code&gt;'s &lt;code&gt;main&lt;/code&gt; script is called &lt;strong&gt;the main process&lt;/strong&gt;. The script that runs in the main process can display a GUI by creating web pages. An Electron app always has one main process, but never more.</source>
          <target state="translated">在Electron中，运行 &lt;code&gt;package.json&lt;/code&gt; 的 &lt;code&gt;main&lt;/code&gt; 脚本&lt;strong&gt;的进程&lt;/strong&gt;称为&lt;strong&gt;main process&lt;/strong&gt;。在主流程中运行的脚本可以通过创建网页来显示GUI。Electron应用程序始终只有一个主要过程，但没有更多。</target>
        </trans-unit>
        <trans-unit id="37b502635f1118a89c49c89684115bf4576afe89" translate="yes" xml:space="preserve">
          <source>In Electron, we have several ways to communicate between the main process and renderer processes. Like &lt;a href=&quot;../api/ipc-renderer&quot;&gt;&lt;code&gt;ipcRenderer&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../api/ipc-main&quot;&gt;&lt;code&gt;ipcMain&lt;/code&gt;&lt;/a&gt; modules for sending messages, and the &lt;a href=&quot;../api/remote&quot;&gt;remote&lt;/a&gt; module for RPC style communication. There is also an FAQ entry on &lt;a href=&quot;../faq#how-to-share-data-between-web-pages&quot;&gt;how to share data between web pages&lt;/a&gt;.</source>
          <target state="translated">在Electron中，我们有几种在主进程和渲染器进程之间进行通信的方式。类似于用于发送消息的&lt;a href=&quot;../api/ipc-renderer&quot;&gt; &lt;code&gt;ipcRenderer&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../api/ipc-main&quot;&gt; &lt;code&gt;ipcMain&lt;/code&gt; &lt;/a&gt;模块，以及用于RPC样式通信的&lt;a href=&quot;../api/remote&quot;&gt;远程&lt;/a&gt;模块。还有一个有关&lt;a href=&quot;../faq#how-to-share-data-between-web-pages&quot;&gt;如何在网页之间共享数据&lt;/a&gt;的FAQ条目。</target>
        </trans-unit>
        <trans-unit id="1a0df57b98ac115921f2ce0f52c5cef0f577cce5" translate="yes" xml:space="preserve">
          <source>In NW.js the main entry point of an application is a web page or a JS script. You specify a html or js file in the &lt;code&gt;package.json&lt;/code&gt; and it is opened in a browser window as the application's main window (in case of an html entrypoint) or the script is executed.</source>
          <target state="translated">在NW.js中，应用程序的主要入口点是网页或JS脚本。您可以在 &lt;code&gt;package.json&lt;/code&gt; 中指定一个html或js文件，并在浏览器窗口中打开该文件作为应用程序的主窗口（如果是html入口点）或执行脚本。</target>
        </trans-unit>
        <trans-unit id="3b25c7d6b9167a18b1209e7e736a5bf9ae9c224f" translate="yes" xml:space="preserve">
          <source>In NW.js, the Node integration in web pages requires patching Chromium to work, while in Electron we chose a different way to integrate the &lt;code&gt;libuv&lt;/code&gt; loop with each platform's message loop to avoid hacking Chromium. See the &lt;a href=&quot;https://github.com/electron/electron/tree/master/lib/common&quot;&gt;&lt;code&gt;node_bindings&lt;/code&gt;&lt;/a&gt; code for how that was done.</source>
          <target state="translated">在NW.js中，网页中的Node集成需要修补Chromium才能起作用，而在Electron中，我们选择了另一种方式来将 &lt;code&gt;libuv&lt;/code&gt; 循环与每个平台的消息循环相集成，从而避免对Chromium的入侵。请参阅&lt;a href=&quot;https://github.com/electron/electron/tree/master/lib/common&quot;&gt; &lt;code&gt;node_bindings&lt;/code&gt; &lt;/a&gt;代码以了解如何完成此操作。</target>
        </trans-unit>
        <trans-unit id="c8afc68a42dc2274d210dd3bcb2dc90a34aef201" translate="yes" xml:space="preserve">
          <source>In NW.js, the Node integration in web pages requires patching Chromium to work, while in Electron we chose a different way to integrate the libuv loop with each platform's message loop to avoid hacking Chromium. See the &lt;a href=&quot;https://github.com/electron/electron/tree/master/atom/common&quot;&gt;&lt;code&gt;node_bindings&lt;/code&gt;&lt;/a&gt; code for how that was done.</source>
          <target state="translated">在NW.js中，网页中的Node集成需要修补Chromium才能起作用，而在Electron中，我们选择了另一种方式来将libuv循环与每个平台的消息循环相集成，从而避免对Chromium的入侵。有关如何完成的信息，请参见&lt;a href=&quot;https://github.com/electron/electron/tree/master/atom/common&quot;&gt; &lt;code&gt;node_bindings&lt;/code&gt; &lt;/a&gt;代码。</target>
        </trans-unit>
        <trans-unit id="89e76feba5d7bd3189916cba504f396c76fbbd79" translate="yes" xml:space="preserve">
          <source>In NW.js, the main entry point of an application can be an HTML web page. In that case, NW.js will open the given entry point in a browser window.</source>
          <target state="translated">在NW.js中,应用程序的主要入口点可以是一个HTML网页。在这种情况下,NW.js将在浏览器窗口中打开给定的入口点。</target>
        </trans-unit>
        <trans-unit id="ef45d1cc4d48650ae9b6257f804949f11c64aa48" translate="yes" xml:space="preserve">
          <source>In Node.js and Electron, each running process has a &lt;code&gt;process&lt;/code&gt; object. This object is a global that provides information about, and control over, the current process. As a global, it is always available to applications without using require().</source>
          <target state="translated">在Node.js和Electron中，每个正在运行的进程都有一个 &lt;code&gt;process&lt;/code&gt; 对象。该对象是全局的，提供有关当前过程的信息并对其进行控制。作为全局变量，它始终可用于应用程序，而无需使用require（）。</target>
        </trans-unit>
        <trans-unit id="06a2578fe47cfb3fe4a65aa1152d38d6988feb9c" translate="yes" xml:space="preserve">
          <source>In a frameless window the dragging behavior may conflict with selecting text. For example, when you drag the titlebar you may accidentally select the text on the titlebar. To prevent this, you need to disable text selection within a draggable area like this:</source>
          <target state="translated">在无框窗口中,拖动行为可能与选择文本相冲突。例如,当您拖动标题栏时,您可能会意外地选择标题栏上的文本。为了防止这种情况发生,您需要在可拖动区域内禁用文本选择,比如这样。</target>
        </trans-unit>
        <trans-unit id="fd36a9edb29970d52de8da21b0c6a4fa6aa74ad9" translate="yes" xml:space="preserve">
          <source>In a frameless window the dragging behaviour may conflict with selecting text. For example, when you drag the titlebar you may accidentally select the text on the titlebar. To prevent this, you need to disable text selection within a draggable area like this:</source>
          <target state="translated">在无框窗口中,拖动行为可能与选择文本相冲突。例如,当您拖动标题栏时,您可能会意外地选择标题栏上的文本。为了防止这种情况发生,您需要在可拖动区域内禁用文本选择,例如,在这种情况下。</target>
        </trans-unit>
        <trans-unit id="0993be2098f3d2d823e3f842cc460f60cc7dc51f" translate="yes" xml:space="preserve">
          <source>In a web page, files in an archive can be requested with the &lt;code&gt;file:&lt;/code&gt; protocol. Like the Node API, &lt;code&gt;asar&lt;/code&gt; archives are treated as directories.</source>
          <target state="translated">在网页中，可以使用 &lt;code&gt;file:&lt;/code&gt; 协议请求档案中的文件。与Node API一样， &lt;code&gt;asar&lt;/code&gt; 存档也被视为目录。</target>
        </trans-unit>
        <trans-unit id="4ebbe08fb4030b6ca8614a5b9c6fc5a297df17c6" translate="yes" xml:space="preserve">
          <source>In addition to changing the architecture, you can also specify the platform (e.g., &lt;code&gt;win32&lt;/code&gt;, &lt;code&gt;linux&lt;/code&gt;, etc.) using the &lt;code&gt;--platform&lt;/code&gt; flag:</source>
          <target state="translated">除了更改体系结构，您还可以使用 &lt;code&gt;--platform&lt;/code&gt; 标志指定平台（例如 &lt;code&gt;win32&lt;/code&gt; ， &lt;code&gt;linux&lt;/code&gt; 等）：</target>
        </trans-unit>
        <trans-unit id="ad38744a2cd250359b7a0139989ab544e5c30bfd" translate="yes" xml:space="preserve">
          <source>In addition to these methods, the child window implements &lt;code&gt;window.opener&lt;/code&gt; object with no properties and a single method.</source>
          <target state="translated">除了这些方法之外，子窗口还实现了不带属性和单个方法的 &lt;code&gt;window.opener&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="af93f2d22fd400e353ce8610b9a34ece6504c189" translate="yes" xml:space="preserve">
          <source>In addition, carefully examine the libraries you use. Are they really necessary? &lt;code&gt;jQuery&lt;/code&gt;, for example, was such a success that many of its features are now part of the &lt;a href=&quot;http://youmightnotneedjquery.com/&quot;&gt;standard JavaScript feature set available&lt;/a&gt;.</source>
          <target state="translated">另外，请仔细检查您使用的库。他们真的有必要吗？例如， &lt;code&gt;jQuery&lt;/code&gt; 如此成功，以至于其许多功能现在已成为&lt;a href=&quot;http://youmightnotneedjquery.com/&quot;&gt;可用&lt;/a&gt;的标准JavaScript功能集的一部分。</target>
        </trans-unit>
        <trans-unit id="eb6b63b8a09f8385b54d78c9291e4e4e947d73b7" translate="yes" xml:space="preserve">
          <source>In addition, the exe is launched inside the appx model - meaning that it can use many of the APIs available to the Universal Windows Platform. To gain even more capabilities, an Electron app can pair up with an invisible UWP background task launched together with the &lt;code&gt;exe&lt;/code&gt; - sort of launched as a sidekick to run tasks in the background, receive push notifications, or to communicate with other UWP applications.</source>
          <target state="translated">此外，该exe在appx模型内启动-意味着它可以使用通用Windows平台可用的许多API。为了获得更多功能，Electron应用程序可以与与 &lt;code&gt;exe&lt;/code&gt; 一起启动的不可见的UWP后台任务配合使用-作为一种助手在后台运行任务，接收推送通知或与其他UWP应用程序进行通信。</target>
        </trans-unit>
        <trans-unit id="7f65725b617730ca820bb32d3b898b98d459f50d" translate="yes" xml:space="preserve">
          <source>In addition, there are some subtle differences on each platform:</source>
          <target state="translated">此外,每个平台上都有一些细微的差别。</target>
        </trans-unit>
        <trans-unit id="7f2fa843ea25b67d9f9124439c22087532ac27ad" translate="yes" xml:space="preserve">
          <source>In all cases, you will need to have the &lt;code&gt;snapcraft&lt;/code&gt; tool installed. We recommend building on Ubuntu 16.04 (or the current LTS).</source>
          <target state="translated">在所有情况下，都需要安装 &lt;code&gt;snapcraft&lt;/code&gt; 工具。我们建议在Ubuntu 16.04（或当前的LTS）上构建。</target>
        </trans-unit>
        <trans-unit id="88eb93dee96b67a7045b74d8bbad7d7a85a57f79" translate="yes" xml:space="preserve">
          <source>In almost all cases, these errors are the result of network problems and not actual issues with the &lt;code&gt;electron&lt;/code&gt; npm package. Errors like &lt;code&gt;ELIFECYCLE&lt;/code&gt;, &lt;code&gt;EAI_AGAIN&lt;/code&gt;, &lt;code&gt;ECONNRESET&lt;/code&gt;, and &lt;code&gt;ETIMEDOUT&lt;/code&gt; are all indications of such network problems. The best resolution is to try switching networks, or wait a bit and try installing again.</source>
          <target state="translated">在几乎所有情况下，这些错误都是网络问题的结果，而不是 &lt;code&gt;electron&lt;/code&gt; npm封装的实际问题。诸如 &lt;code&gt;ELIFECYCLE&lt;/code&gt; ， &lt;code&gt;EAI_AGAIN&lt;/code&gt; ， &lt;code&gt;ECONNRESET&lt;/code&gt; 和 &lt;code&gt;ETIMEDOUT&lt;/code&gt; 之类的错误均表示此类网络问题。最好的解决方法是尝试切换网络，或者稍等片刻，然后再次尝试安装。</target>
        </trans-unit>
        <trans-unit id="6ad054ebef9c59dced1a818e17f21ba9bc619b06" translate="yes" xml:space="preserve">
          <source>In an ideal world, your application wouldn't need the network to operate at all. To get there, you must understand what resources your app is downloading - and how large those resources are.</source>
          <target state="translated">在一个理想的世界里,你的应用根本不需要网络来运行。为了达到这个目的,你必须了解你的应用程序正在下载哪些资源--以及这些资源的数量有多大。</target>
        </trans-unit>
        <trans-unit id="5d02c9a4ff99b3ea1cc26fddc98762a6d30daa6e" translate="yes" xml:space="preserve">
          <source>In general, all the upstream projects we work with are friendly folks and are often happy to accept refactorings that allow the code in question to be compatible with both Electron and the upstream project. (See e.g. &lt;a href=&quot;https://chromium-review.googlesource.com/c/chromium/src/+/1637040&quot;&gt;this&lt;/a&gt; change in Chromium, which allowed us to remove a patch that did the same thing, or &lt;a href=&quot;https://github.com/nodejs/node/pull/22110&quot;&gt;this&lt;/a&gt; change in Node, which was a no-op for Node but fixed a bug in Electron.) &lt;strong&gt;We should aim to upstream changes whenever we can, and avoid indefinite-lifetime patches&lt;/strong&gt;.</source>
          <target state="translated">总的来说，我们与之合作的所有上游项目都是友好的人，并且常常乐于接受重构，以使所讨论的代码与Electron和上游项目兼容。（例如，请参阅Chromium中的&lt;a href=&quot;https://chromium-review.googlesource.com/c/chromium/src/+/1637040&quot;&gt;此&lt;/a&gt;更改，该更改允许我们删除执行相同操作的补丁，或Node中的&lt;a href=&quot;https://github.com/nodejs/node/pull/22110&quot;&gt;此&lt;/a&gt;更改，此更改对Node而言是无操作，但修复了Electron中的一个错误。）&lt;strong&gt;我们应该在任何时候都应致力于上游更改我们可以避免出现无限期的补丁&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="d0732649820524d2f9b56ebe8bdbd3d628fa8ed9" translate="yes" xml:space="preserve">
          <source>In macOS 10.14 Mojave, Apple introduced a new &lt;a href=&quot;https://developer.apple.com/design/human-interface-guidelines/macos/visual-design/dark-mode/&quot;&gt;system-wide dark mode&lt;/a&gt; for all macOS computers. If your Electron app has a dark mode, you can make it follow the system-wide dark mode setting using &lt;a href=&quot;../api/native-theme&quot;&gt;the &lt;code&gt;nativeTheme&lt;/code&gt; api&lt;/a&gt;.</source>
          <target state="translated">在macOS 10.14 Mojave中，Apple为所有macOS计算机引入了新的&lt;a href=&quot;https://developer.apple.com/design/human-interface-guidelines/macos/visual-design/dark-mode/&quot;&gt;系统范围内的暗模式&lt;/a&gt;。如果您的电子应用程序有一个黑色的模式，你可以把它遵循使用系统级暗模式设定&lt;a href=&quot;../api/native-theme&quot;&gt;的 &lt;code&gt;nativeTheme&lt;/code&gt; API&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="98a90ed219735fb98579fd275bd2b96c22bda9fd" translate="yes" xml:space="preserve">
          <source>In macOS 10.14 Mojave, Apple introduced a new &lt;a href=&quot;https://developer.apple.com/design/human-interface-guidelines/macos/visual-design/dark-mode/&quot;&gt;system-wide dark mode&lt;/a&gt; for all macOS computers. If your Electron app has a dark mode, you can make it follow the system-wide dark mode setting using &lt;a href=&quot;api/native-theme&quot;&gt;the &lt;code&gt;nativeTheme&lt;/code&gt; api&lt;/a&gt;.</source>
          <target state="translated">在macOS 10.14 Mojave中，Apple为所有macOS计算机引入了新的&lt;a href=&quot;https://developer.apple.com/design/human-interface-guidelines/macos/visual-design/dark-mode/&quot;&gt;系统范围内的暗模式&lt;/a&gt;。如果您的电子应用程序有一个黑色的模式，你可以把它遵循使用系统级暗模式设定&lt;a href=&quot;api/native-theme&quot;&gt;的 &lt;code&gt;nativeTheme&lt;/code&gt; API&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4d458bea96941dcf11682801623ac1a7fcc8de1d" translate="yes" xml:space="preserve">
          <source>In macOS 10.15 Catalina, Apple introduced a new &quot;automatic&quot; dark mode option for all macOS computers. In order for the &lt;code&gt;nativeTheme.shouldUseDarkColors&lt;/code&gt; and &lt;code&gt;Tray&lt;/code&gt; APIs to work correctly in this mode on Catalina, you need to use Electron &lt;code&gt;&amp;gt;=7.0.0&lt;/code&gt;, or set &lt;code&gt;NSRequiresAquaSystemAppearance&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; in your &lt;code&gt;Info.plist&lt;/code&gt; file for older versions. Both &lt;a href=&quot;https://github.com/electron/electron-packager&quot;&gt;Electron Packager&lt;/a&gt; and &lt;a href=&quot;https://www.electronforge.io/&quot;&gt;Electron Forge&lt;/a&gt; have a &lt;a href=&quot;https://electron.github.io/electron-packager/master/interfaces/electronpackager.options.html#darwindarkmodesupport&quot;&gt;&lt;code&gt;darwinDarkModeSupport&lt;/code&gt; option&lt;/a&gt; to automate the &lt;code&gt;Info.plist&lt;/code&gt; changes during app build time.</source>
          <target state="translated">在macOS 10.15 Catalina中，Apple为所有macOS计算机引入了新的&amp;ldquo;自动&amp;rdquo;暗模式选项。为了使 &lt;code&gt;nativeTheme.shouldUseDarkColors&lt;/code&gt; 和 &lt;code&gt;Tray&lt;/code&gt; API在Catalina上的此模式下正常工作，您需要使用Electron &lt;code&gt;&amp;gt;=7.0.0&lt;/code&gt; ，或者对于较旧版本，在 &lt;code&gt;Info.plist&lt;/code&gt; 文件中将 &lt;code&gt;NSRequiresAquaSystemAppearance&lt;/code&gt; 设置为 &lt;code&gt;false&lt;/code&gt; 。这两种&lt;a href=&quot;https://github.com/electron/electron-packager&quot;&gt;电子打包&lt;/a&gt;和&lt;a href=&quot;https://www.electronforge.io/&quot;&gt;电子锻造&lt;/a&gt;有&lt;a href=&quot;https://electron.github.io/electron-packager/master/interfaces/electronpackager.options.html#darwindarkmodesupport&quot;&gt; &lt;code&gt;darwinDarkModeSupport&lt;/code&gt; &lt;/a&gt;选项来自动 &lt;code&gt;Info.plist&lt;/code&gt; 中的应用程序编译时间的变化。</target>
        </trans-unit>
        <trans-unit id="9fdc7b529c347177c59ced6d1fe81f09d890e189" translate="yes" xml:space="preserve">
          <source>In many server contexts, startup time is virtually irrelevant. A Node.js server that requires information about all ports is likely actually &quot;more performant&quot; if it loads all required information into memory whenever the server boots at the benefit of serving requests faster. The module discussed in this example is not a &quot;bad&quot; module. Electron apps, however, should not be loading, parsing, and storing in memory information that it does not actually need.</source>
          <target state="translated">在许多服务器的情况下,启动时间几乎是无关紧要的。一个需要所有端口信息的 Node.js 服务器,如果每当服务器启动时都将所有需要的信息加载到内存中,那么实际上可能会 &quot;更有性能&quot;,这样做的好处是可以更快地服务于请求。这个例子中讨论的模块并不是一个 &quot;坏 &quot;模块。然而,Electron应用程序不应该在内存中加载、解析和存储它实际上不需要的信息。</target>
        </trans-unit>
        <trans-unit id="5ae6c186beda7cc6d08d8d308468631bd4cc4a2f" translate="yes" xml:space="preserve">
          <source>In most cases, you should do everything in the &lt;code&gt;ready&lt;/code&gt; event handler.</source>
          <target state="translated">在大多数情况下，您应该在 &lt;code&gt;ready&lt;/code&gt; 事件处理程序中执行所有操作。</target>
        </trans-unit>
        <trans-unit id="195f1e249de6eef85e19604ad6504295fedc65f1" translate="yes" xml:space="preserve">
          <source>In most cases, you should just do everything in the &lt;code&gt;ready&lt;/code&gt; event handler.</source>
          <target state="translated">在大多数情况下，您应该在 &lt;code&gt;ready&lt;/code&gt; 事件处理程序中执行所有操作。</target>
        </trans-unit>
        <trans-unit id="1c30404658bd31cd20bc5c1bc6d71f1b96198591" translate="yes" xml:space="preserve">
          <source>In normal browsers, web pages usually run in a sandboxed environment and are not allowed access to native resources. Electron users, however, have the power to use Node.js APIs in web pages allowing lower level operating system interactions.</source>
          <target state="translated">在普通浏览器中,网页通常运行在沙盒环境中,不允许访问本地资源。然而,Electron用户有能力在网页中使用Node.js API,允许低级别的操作系统交互。</target>
        </trans-unit>
        <trans-unit id="5fc60981dde25a35adbe4ec9983a99588cfe1f9d" translate="yes" xml:space="preserve">
          <source>In opposition to traditional UWP apps, packaged apps currently need to undergo a manual verification process, for which you can apply &lt;a href=&quot;https://developer.microsoft.com/en-us/windows/projects/campaigns/desktop-bridge&quot;&gt;here&lt;/a&gt;. In the meantime, all users will be able to install your package by double-clicking it, so a submission to the store might not be necessary if you're looking for an easier installation method. In managed environments (usually enterprises), the &lt;code&gt;Add-AppxPackage&lt;/code&gt;&lt;a href=&quot;https://technet.microsoft.com/en-us/library/hh856048.aspx&quot;&gt;PowerShell Cmdlet can be used to install it in an automated fashion&lt;/a&gt;.</source>
          <target state="translated">与传统的UWP应用相反，打包的应用当前需要经过手动验证过程，您可以&lt;a href=&quot;https://developer.microsoft.com/en-us/windows/projects/campaigns/desktop-bridge&quot;&gt;在此处&lt;/a&gt;进行申请。同时，所有用户都可以通过双击来安装您的软件包，因此，如果您正在寻找一种更简单的安装方法，则无需向商店提交。在托管环境（通常是企业）中，&lt;a href=&quot;https://technet.microsoft.com/en-us/library/hh856048.aspx&quot;&gt;可以使用&lt;/a&gt; &lt;code&gt;Add-AppxPackage&lt;/code&gt; PowerShell Cmdlet以自动方式安装它。</target>
        </trans-unit>
        <trans-unit id="17b33efa1e685afd83e922c98be3ad7481f7164a" translate="yes" xml:space="preserve">
          <source>In order for extra notification buttons to work on macOS your app must meet the following criteria.</source>
          <target state="translated">为了让额外的通知按钮在macOS上工作,你的应用程序必须满足以下标准。</target>
        </trans-unit>
        <trans-unit id="f6e38a957812e9a29ac5c2d2a05f0c16dc841b4a" translate="yes" xml:space="preserve">
          <source>In order to avoid the complexity of building all of Chromium, Electron uses &lt;a href=&quot;https://github.com/electron/libchromiumcontent&quot;&gt;&lt;code&gt;libchromiumcontent&lt;/code&gt;&lt;/a&gt; to access Chromium's Content API. &lt;code&gt;libchromiumcontent&lt;/code&gt; is a single shared library that includes the Chromium Content module and all of its dependencies. Users don't need a powerful machine to build Electron.</source>
          <target state="translated">为了避免构建所有Chromium的复杂性，Electron使用&lt;a href=&quot;https://github.com/electron/libchromiumcontent&quot;&gt; &lt;code&gt;libchromiumcontent&lt;/code&gt; &lt;/a&gt;来访问Chromium的Content API。 &lt;code&gt;libchromiumcontent&lt;/code&gt; 是一个单个共享库，其中包括Chromium Content模块及其所有依赖项。用户不需要强大的机器来构建Electron。</target>
        </trans-unit>
        <trans-unit id="002692fd3df32049bef10d52e5d3b2dc239a4e1a" translate="yes" xml:space="preserve">
          <source>In order to be able to use this feature on Windows, your application has to be registered as a handler of the file type of the document, otherwise the file won't appear in JumpList even after you have added it. You can find everything on registering your application in &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/cc144104(VS.85).aspx&quot;&gt;Application Registration&lt;/a&gt;.</source>
          <target state="translated">为了能够在Windows上使用此功能，必须将您的应用程序注册为文档文件类型的处理程序，否则，即使添加了该文件，该文件也不会出现在JumpList中。您可以在&amp;ldquo; &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/cc144104(VS.85).aspx&quot;&gt;应用程序注册&amp;rdquo;中&lt;/a&gt;找到有关注册应用程序的所有信息。</target>
        </trans-unit>
        <trans-unit id="6017616527bbb59b4e2288b1e97e6e007923f3e5" translate="yes" xml:space="preserve">
          <source>In order to keep Electron small (file size) and sustainable (the spread of dependencies and APIs) the project limits the scope of the core project.</source>
          <target state="translated">为了保持Electron的小规模(文件大小)和可持续发展(依赖和API的传播),该项目限制了核心项目的范围。</target>
        </trans-unit>
        <trans-unit id="9e93969c6ab6312de3ab1b1363ee597f5e3607f7" translate="yes" xml:space="preserve">
          <source>In order to land, a pull request needs to be reviewed and approved by at least one Electron Code Owner and pass CI. After that, if there are no objections from other contributors, the pull request can be merged.</source>
          <target state="translated">为了落地,一个pull请求需要由至少一个电子代码所有者审核批准,并通过CI。之后,如果没有其他贡献者的反对意见,就可以合并这个pull请求。</target>
        </trans-unit>
        <trans-unit id="5038620daa1de28b5745b004ae182c0ced6a13fd" translate="yes" xml:space="preserve">
          <source>In order to run your package, your users will need Windows 10 with the so-called &quot;Anniversary Update&quot; - details on how to update Windows can be found &lt;a href=&quot;https://blogs.windows.com/windowsexperience/2016/08/02/how-to-get-the-windows-10-anniversary-update&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">为了运行您的程序包，您的用户将需要带有所谓的&amp;ldquo;周年更新&amp;rdquo;的Windows 10-有关如何更新Windows的详细信息，请参见&lt;a href=&quot;https://blogs.windows.com/windowsexperience/2016/08/02/how-to-get-the-windows-10-anniversary-update&quot;&gt;此处&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e6c6f45a1b0186062309a1e7bd6d2d0cdccc0365" translate="yes" xml:space="preserve">
          <source>In order to satisfy all requirements for app sandboxing, the following modules have been disabled in the MAS build:</source>
          <target state="translated">为了满足应用沙盒的所有要求,在MAS构建中禁用了以下模块。</target>
        </trans-unit>
        <trans-unit id="2aa9e4b60cc508d244b171006423246637a0b33f" translate="yes" xml:space="preserve">
          <source>In other words, when the sandbox is enabled, the renderers can only make changes to the system by delegating tasks to the main process via IPC. &lt;a href=&quot;https://www.chromium.org/developers/design-documents/sandbox&quot;&gt;Here's&lt;/a&gt; more information about the sandbox.</source>
          <target state="translated">换句话说，启用沙箱后，渲染器只能通过将任务通过IPC委托给主进程来对系统进行更改。&lt;a href=&quot;https://www.chromium.org/developers/design-documents/sandbox&quot;&gt;这是&lt;/a&gt;有关沙箱的更多信息。</target>
        </trans-unit>
        <trans-unit id="fd975f4fa62673732c3cd8653b8c7c96a7c5a05e" translate="yes" xml:space="preserve">
          <source>In particular, it's important that:</source>
          <target state="translated">特别是,重要的是:</target>
        </trans-unit>
        <trans-unit id="3c4a5f97c64371ef090e35ab1c804d051479e9b8" translate="yes" xml:space="preserve">
          <source>In sandboxed renderers the &lt;code&gt;process&lt;/code&gt; object contains only a subset of the APIs:</source>
          <target state="translated">在沙盒渲染器中， &lt;code&gt;process&lt;/code&gt; 对象仅包含API的一部分：</target>
        </trans-unit>
        <trans-unit id="96067b815c9925760b852202bccc2c19a357cb7a" translate="yes" xml:space="preserve">
          <source>In short, a seemingly excellent module written primarily for Node.js servers running Linux might be bad news for your app's performance. In this particular example, the correct solution was to use no module at all, and to instead use connectivity checks included in later versions of Chromium.</source>
          <target state="translated">简而言之,一个看似优秀的模块主要是为运行Linux的Node.js服务器编写的,对你的应用程序的性能来说可能是个坏消息。在这个特殊的例子中,正确的解决方案是完全不使用模块,而是使用Chromium以后版本中包含的连接性检查。</target>
        </trans-unit>
        <trans-unit id="ca822e94dc51a45c6a07d596e0cce39c754e99f4" translate="yes" xml:space="preserve">
          <source>In short, allocate resources &quot;just in time&quot; rather than allocating them all when your app starts.</source>
          <target state="translated">简而言之,&quot;及时 &quot;地分配资源,而不是在你的应用启动时就全部分配。</target>
        </trans-unit>
        <trans-unit id="3ac12e0a1bc0bd8fd393384502411912c0f8b64c" translate="yes" xml:space="preserve">
          <source>In some cases, the &lt;code&gt;NSImageName&lt;/code&gt; doesn't match its string representation; one example of this is &lt;code&gt;NSFolderImageName&lt;/code&gt;, whose string representation would actually be &lt;code&gt;NSFolder&lt;/code&gt;. Therefore, you'll need to determine the correct string representation for your image before passing it in. This can be done with the following:</source>
          <target state="translated">在某些情况下， &lt;code&gt;NSImageName&lt;/code&gt; 与它的字符串表示形式不匹配。一个示例是 &lt;code&gt;NSFolderImageName&lt;/code&gt; ，其字符串表示形式实际上是 &lt;code&gt;NSFolder&lt;/code&gt; 。因此，在传递图像之前，您需要确定图像的正确字符串表示形式。这可以通过以下操作完成：</target>
        </trans-unit>
        <trans-unit id="6c2cd704ac091728bfdf7057438f3689c7afa99c" translate="yes" xml:space="preserve">
          <source>In some cases, you will need to have the &lt;code&gt;snapcraft&lt;/code&gt; tool installed. Instructions to install &lt;code&gt;snapcraft&lt;/code&gt; for your particular distribution are available &lt;a href=&quot;https://snapcraft.io/docs/installing-snapcraft&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">在某些情况下，您将需要安装 &lt;code&gt;snapcraft&lt;/code&gt; 工具。可&lt;a href=&quot;https://snapcraft.io/docs/installing-snapcraft&quot;&gt;在此处&lt;/a&gt; &lt;code&gt;snapcraft&lt;/code&gt; 针对特定发行版安装snapcraft的说明。</target>
        </trans-unit>
        <trans-unit id="add54ea319b290d6512f35724ac20b939ad3c263" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;release&lt;/code&gt; branch, verify that the release's files have been created:</source>
          <target state="translated">在 &lt;code&gt;release&lt;/code&gt; 分支中，验证是否已创建发行文件：</target>
        </trans-unit>
        <trans-unit id="7c0c7f9705ecc67c5757806bf976f1d5c21275cc" translate="yes" xml:space="preserve">
          <source>In the Main process(&lt;code&gt;main.js&lt;/code&gt; file), expand the received event with a path to the file that is being dragged and an icon:</source>
          <target state="translated">在Main进程（ &lt;code&gt;main.js&lt;/code&gt; 文件）中，使用所拖动文件的路径和图标展开接收到的事件：</target>
        </trans-unit>
        <trans-unit id="1b05098558dc728fe3efe959d2682edcea24e265" translate="yes" xml:space="preserve">
          <source>In the above code the &lt;a href=&quot;api/browser-window&quot;&gt;&lt;code&gt;BrowserWindow&lt;/code&gt;&lt;/a&gt; that was created has Node.js disabled and can communicate only via IPC. The use of this option stops Electron from creating a Node.js runtime in the renderer. Also, within this new window &lt;code&gt;window.open&lt;/code&gt; follows the native behavior (by default Electron creates a &lt;a href=&quot;api/browser-window&quot;&gt;&lt;code&gt;BrowserWindow&lt;/code&gt;&lt;/a&gt; and returns a proxy to this via &lt;code&gt;window.open&lt;/code&gt;).</source>
          <target state="translated">在上面的代码中，创建的&lt;a href=&quot;api/browser-window&quot;&gt; &lt;code&gt;BrowserWindow&lt;/code&gt; &lt;/a&gt;禁用了Node.js，并且只能通过IPC进行通信。使用此选项可阻止Electron在渲染器中创建Node.js运行时。另外，在这个新窗口中， &lt;code&gt;window.open&lt;/code&gt; 遵循本机行为（默认情况下，Electron创建一个&lt;a href=&quot;api/browser-window&quot;&gt; &lt;code&gt;BrowserWindow&lt;/code&gt; &lt;/a&gt;并通过 &lt;code&gt;window.open&lt;/code&gt; 返回对此的代理）。</target>
        </trans-unit>
        <trans-unit id="7dfe6082e8695706fcfeace5667ec9a145a1ae11" translate="yes" xml:space="preserve">
          <source>In the above code the &lt;a href=&quot;browser-window&quot;&gt;&lt;code&gt;BrowserWindow&lt;/code&gt;&lt;/a&gt; that was created has Node.js disabled and can communicate only via IPC. The use of this option stops Electron from creating a Node.js runtime in the renderer. Also, within this new window &lt;code&gt;window.open&lt;/code&gt; follows the native behavior (by default Electron creates a &lt;a href=&quot;browser-window&quot;&gt;&lt;code&gt;BrowserWindow&lt;/code&gt;&lt;/a&gt; and returns a proxy to this via &lt;code&gt;window.open&lt;/code&gt;).</source>
          <target state="translated">在上面的代码中，创建的&lt;a href=&quot;browser-window&quot;&gt; &lt;code&gt;BrowserWindow&lt;/code&gt; &lt;/a&gt;禁用了Node.js，并且只能通过IPC进行通信。使用此选项可阻止Electron在渲染器中创建Node.js运行时。同样，在此新窗口中， &lt;code&gt;window.open&lt;/code&gt; 遵循本机行为（默认情况下，Electron创建一个&lt;a href=&quot;browser-window&quot;&gt; &lt;code&gt;BrowserWindow&lt;/code&gt; &lt;/a&gt;并通过 &lt;code&gt;window.open&lt;/code&gt; 返回对此的代理）。</target>
        </trans-unit>
        <trans-unit id="af7489da9de75d590f13f01cdc9c2b48b8b1b424" translate="yes" xml:space="preserve">
          <source>In the above code the &lt;a href=&quot;browser-window&quot;&gt;&lt;code&gt;BrowserWindow&lt;/code&gt;&lt;/a&gt; that was created has node.js disabled and can communicate only via IPC. The use of this option stops electron from creating a node.js runtime in the renderer. Also, within this new window &lt;code&gt;window.open&lt;/code&gt; follows the native behaviour (by default electron creates a &lt;a href=&quot;browser-window&quot;&gt;&lt;code&gt;BrowserWindow&lt;/code&gt;&lt;/a&gt; and returns a proxy to this via &lt;code&gt;window.open&lt;/code&gt;).</source>
          <target state="translated">在上面的代码中，创建的&lt;a href=&quot;browser-window&quot;&gt; &lt;code&gt;BrowserWindow&lt;/code&gt; &lt;/a&gt;禁用了node.js，并且只能通过IPC进行通信。使用此选项可阻止电子在渲染器中创建node.js运行时。同样，在这个新窗口中， &lt;code&gt;window.open&lt;/code&gt; 遵循本机行为（默认情况下，electron创建一个&lt;a href=&quot;browser-window&quot;&gt; &lt;code&gt;BrowserWindow&lt;/code&gt; &lt;/a&gt;并通过 &lt;code&gt;window.open&lt;/code&gt; 返回对此的代理）。</target>
        </trans-unit>
        <trans-unit id="b6ba7cf42dca8a64f3fe2f70864af6cff82eb338" translate="yes" xml:space="preserve">
          <source>In the above example, we're doing a lot of work that's being executed as soon as the file is loaded. Do we need to get parsed files right away? Could we do this work a little later, when &lt;code&gt;getParsedFiles()&lt;/code&gt; is actually called?</source>
          <target state="translated">在上面的示例中，文件加载后，我们正在执行大量工作。我们需要立即获取解析的文件吗？当实际调用 &lt;code&gt;getParsedFiles()&lt;/code&gt; 时，我们可以稍后进行此工作吗？</target>
        </trans-unit>
        <trans-unit id="dd8a333887f050bcaedb3788895a13b656bcd030" translate="yes" xml:space="preserve">
          <source>In the app, you'd need to write a simple handler for the RPC calls:</source>
          <target state="translated">在应用程序中,你需要为RPC调用写一个简单的处理程序。</target>
        </trans-unit>
        <trans-unit id="8caa74ae2f7b42454248de05b842fae89740cc2b" translate="yes" xml:space="preserve">
          <source>In the browser window some HTML APIs like &lt;code&gt;requestFullScreen&lt;/code&gt; can only be invoked by a gesture from the user. Setting &lt;code&gt;userGesture&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; will remove this limitation.</source>
          <target state="translated">在浏览器窗口中，某些HTML API（例如 &lt;code&gt;requestFullScreen&lt;/code&gt; )只能通过用户的手势来调用。将 &lt;code&gt;userGesture&lt;/code&gt; 设置为 &lt;code&gt;true&lt;/code&gt; 将消除此限制。</target>
        </trans-unit>
        <trans-unit id="db52ca544e2d57543b2ade9a5da326a4317aad0a" translate="yes" xml:space="preserve">
          <source>In the case of a corrupted release with broken CI machines, we might have to re-upload the binaries for an already published release.</source>
          <target state="translated">在CI机器损坏的情况下,我们可能不得不为已经发布的版本重新上传二进制文件。</target>
        </trans-unit>
        <trans-unit id="65aff7f4d7a69e63a0aa2edd13236128f00b4935" translate="yes" xml:space="preserve">
          <source>In the example above, both &lt;a href=&quot;api/browser-window&quot;&gt;&lt;code&gt;BrowserWindow&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;win&lt;/code&gt; were remote objects and &lt;code&gt;new BrowserWindow&lt;/code&gt; didn't create a &lt;code&gt;BrowserWindow&lt;/code&gt; object in the renderer process. Instead, it created a &lt;code&gt;BrowserWindow&lt;/code&gt; object in the main process and returned the corresponding remote object in the renderer process, namely the &lt;code&gt;win&lt;/code&gt; object.</source>
          <target state="translated">在上面的示例中，&lt;a href=&quot;api/browser-window&quot;&gt; &lt;code&gt;BrowserWindow&lt;/code&gt; &lt;/a&gt;和 &lt;code&gt;win&lt;/code&gt; 都是远程对象， &lt;code&gt;new BrowserWindow&lt;/code&gt; 不在渲染器过程中创建 &lt;code&gt;BrowserWindow&lt;/code&gt; 对象。相反，它在主进程中创建了 &lt;code&gt;BrowserWindow&lt;/code&gt; 对象，并在渲染器进程中返回了相应的远程对象，即 &lt;code&gt;win&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="b49bd272eea5595d87ad5e2fe5c9c9b77041719c" translate="yes" xml:space="preserve">
          <source>In the example above, both &lt;a href=&quot;browser-window&quot;&gt;&lt;code&gt;BrowserWindow&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;win&lt;/code&gt; were remote objects and &lt;code&gt;new BrowserWindow&lt;/code&gt; didn't create a &lt;code&gt;BrowserWindow&lt;/code&gt; object in the renderer process. Instead, it created a &lt;code&gt;BrowserWindow&lt;/code&gt; object in the main process and returned the corresponding remote object in the renderer process, namely the &lt;code&gt;win&lt;/code&gt; object.</source>
          <target state="translated">在上面的示例中，&lt;a href=&quot;browser-window&quot;&gt; &lt;code&gt;BrowserWindow&lt;/code&gt; &lt;/a&gt;和 &lt;code&gt;win&lt;/code&gt; 都是远程对象， &lt;code&gt;new BrowserWindow&lt;/code&gt; 不在渲染器过程中创建 &lt;code&gt;BrowserWindow&lt;/code&gt; 对象。相反，它在主进程中创建了 &lt;code&gt;BrowserWindow&lt;/code&gt; 对象，并在渲染器进程中返回了相应的远程对象，即 &lt;code&gt;win&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="5074e68733d141bd5c5268004d80f2dacb17e13e" translate="yes" xml:space="preserve">
          <source>In the following example preload script, the later loaded website will have access to a &lt;code&gt;window.readConfig()&lt;/code&gt; method, but no Node.js features.</source>
          <target state="translated">在以下示例预加载脚本中，稍后加载的网站将有权访问 &lt;code&gt;window.readConfig()&lt;/code&gt; 方法，但没有Node.js功能。</target>
        </trans-unit>
        <trans-unit id="414aa2ce159660a2aa729cc43d3da5d88f9d1618" translate="yes" xml:space="preserve">
          <source>In the following list, look for the VHD path name you got from Appveyor and then click on it.</source>
          <target state="translated">在下面的列表中,寻找你从Appveyor得到的VHD路径名称,然后点击它。</target>
        </trans-unit>
        <trans-unit id="51b18288d03cd733f92b99f7141ed513739578d6" translate="yes" xml:space="preserve">
          <source>In the testing framework Spectron, you can now audit each window and &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; tag in your application. For example:</source>
          <target state="translated">现在，在测试框架Spectron中，您可以审核应用程序中的每个窗口和 &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; 标记。例如：</target>
        </trans-unit>
        <trans-unit id="1870f312bcf3ffda327f15732c46a2c3d4906421" translate="yes" xml:space="preserve">
          <source>In this example, on the author's machine, we saw that loading &lt;code&gt;request&lt;/code&gt; took almost half a second, whereas &lt;code&gt;node-fetch&lt;/code&gt; took dramatically less memory and less than 50ms.</source>
          <target state="translated">在这个例子中，在作者的机器上，我们看到加载 &lt;code&gt;request&lt;/code&gt; 花费了将近半秒，而 &lt;code&gt;node-fetch&lt;/code&gt; 花费了更少的内存，并且不到50ms。</target>
        </trans-unit>
        <trans-unit id="0428ea8dae54fd10d81ecab5e1a0475b4a54689c" translate="yes" xml:space="preserve">
          <source>In this mode, you will be able to pass &lt;a href=&quot;https://nodejs.org/api/cli.html&quot;&gt;cli options&lt;/a&gt; to Node.js as you would when running the normal Node.js executable, with the exception of the following flags:</source>
          <target state="translated">在这种模式下，您可以像运行普通Node.js可执行文件时一样将&lt;a href=&quot;https://nodejs.org/api/cli.html&quot;&gt;cli选项&lt;/a&gt;传递给Node.js，但以下标志除外：</target>
        </trans-unit>
        <trans-unit id="e109cb7fec054143478442624f3e7c73d3fd7ca9" translate="yes" xml:space="preserve">
          <source>In traditional Node.js development, we're used to putting all our &lt;code&gt;require()&lt;/code&gt; statements at the top. If you're currently writing your Electron application using the same strategy &lt;em&gt;and&lt;/em&gt; are using sizable modules that you do not immediately need, apply the same strategy and defer loading to a more opportune time.</source>
          <target state="translated">在传统的Node.js开发中，我们习惯于将所有 &lt;code&gt;require()&lt;/code&gt; 语句放在顶部。如果您当前正在使用相同的策略来编写Electron应用程序，&lt;em&gt;并且&lt;/em&gt;正在使用您不立即需要的可伸缩模块，请应用相同的策略并将加载时间推迟到更合适的时间。</target>
        </trans-unit>
        <trans-unit id="1afa241f36d4217397dfec694d2d1215891c4684" translate="yes" xml:space="preserve">
          <source>In web pages, calling native GUI related APIs is not allowed because managing native GUI resources in web pages is very dangerous and it is easy to leak resources. If you want to perform GUI operations in a web page, the renderer process of the web page must communicate with the main process to request that the main process perform those operations.</source>
          <target state="translated">在网页中,不允许调用原生GUI相关的API,因为在网页中管理原生GUI资源是非常危险的,很容易泄露资源。如果要在网页中执行GUI操作,网页的渲染器进程必须与主进程通信,请求主进程执行这些操作。</target>
        </trans-unit>
        <trans-unit id="c4d0e6c3e076cd6a699c60ad2b55fac7991337f3" translate="yes" xml:space="preserve">
          <source>In your renderer process, handle the &lt;code&gt;ondragstart&lt;/code&gt; event and forward the information to your main process.</source>
          <target state="translated">在渲染器进程中，处理 &lt;code&gt;ondragstart&lt;/code&gt; 事件，并将信息转发到您的主进程。</target>
        </trans-unit>
        <trans-unit id="fdaff53585816691fa4fe5c4dfd5b6e20360de51" translate="yes" xml:space="preserve">
          <source>In-App Purchase (macOS)</source>
          <target state="translated">应用内购买(macOS)</target>
        </trans-unit>
        <trans-unit id="fcd33c35409267d26cf472bd170c7b44220760a0" translate="yes" xml:space="preserve">
          <source>In-app purchases on Mac App Store.</source>
          <target state="translated">Mac App Store 上的应用内购买。</target>
        </trans-unit>
        <trans-unit id="01b9ecc39af8da56d7570c19b704feba4523b1b2" translate="yes" xml:space="preserve">
          <source>IncomingMessage</source>
          <target state="translated">IncomingMessage</target>
        </trans-unit>
        <trans-unit id="8ae7bbd6069f22c66e50f126098e0615acb15d2b" translate="yes" xml:space="preserve">
          <source>Increase the capturer count by one. The page is considered visible when its browser window is hidden and the capturer count is non-zero. If you would like the page to stay hidden, you should ensure that &lt;code&gt;stayHidden&lt;/code&gt; is set to true.</source>
          <target state="translated">将捕获器数量增加一。当页面的浏览器窗口被隐藏并且捕获器计数为非零时，该页面被视为可见。如果您希望页面保持隐藏状态，则应确保将 &lt;code&gt;stayHidden&lt;/code&gt; 设置为true。</target>
        </trans-unit>
        <trans-unit id="13e9abca83628630f255579050b5c29afcf1c1f8" translate="yes" xml:space="preserve">
          <source>Indicates that response body has ended.</source>
          <target state="translated">表示响应主体已经结束。</target>
        </trans-unit>
        <trans-unit id="52427cb53936c651c26d729f75fb470f91b58cab" translate="yes" xml:space="preserve">
          <source>Indicates the creation time of the application. The time is represented as number of milliseconds since epoch. It returns null if it is unable to get the process creation time.</source>
          <target state="translated">表示应用程序的创建时间。时间用epoch后的毫秒数表示。如果无法获得进程创建时间,则返回null。</target>
        </trans-unit>
        <trans-unit id="2339b8ad3625abec50c5fec9ccfe1b4c0adb5b6e" translate="yes" xml:space="preserve">
          <source>Indonesian</source>
          <target state="translated">Indonesian</target>
        </trans-unit>
        <trans-unit id="41081854a1a02c1d897267422d71fc0bdd712cd1" translate="yes" xml:space="preserve">
          <source>Initiates a download of the resource at &lt;code&gt;url&lt;/code&gt; without navigating.</source>
          <target state="translated">在不进行导航的情况下启动 &lt;code&gt;url&lt;/code&gt; 资源的下载。</target>
        </trans-unit>
        <trans-unit id="56476d27ce24389481bda3f5413b884651cdc573" translate="yes" xml:space="preserve">
          <source>Initiates a download of the resource at &lt;code&gt;url&lt;/code&gt; without navigating. The &lt;code&gt;will-download&lt;/code&gt; event of &lt;code&gt;session&lt;/code&gt; will be triggered.</source>
          <target state="translated">在不进行导航的情况下启动 &lt;code&gt;url&lt;/code&gt; 资源的下载。 &lt;code&gt;session&lt;/code&gt; 的 &lt;code&gt;will-download&lt;/code&gt; 事件将被触发。</target>
        </trans-unit>
        <trans-unit id="a9d29bf7f006a5266a616bc9d1b7d546179c25a2" translate="yes" xml:space="preserve">
          <source>Initiates a download of the resource at &lt;code&gt;url&lt;/code&gt;. The API will generate a &lt;a href=&quot;api/download-item&quot;&gt;DownloadItem&lt;/a&gt; that can be accessed with the &lt;a href=&quot;#event-will-download&quot;&gt;will-download&lt;/a&gt; event.</source>
          <target state="translated">在 &lt;code&gt;url&lt;/code&gt; 处启动资源下载。API将生成一个&lt;a href=&quot;api/download-item&quot;&gt;DownloadItem&lt;/a&gt;，可通过&lt;a href=&quot;#event-will-download&quot;&gt;will-download&lt;/a&gt;事件对其进行访问。</target>
        </trans-unit>
        <trans-unit id="4377654b3e841e66a0e4552cf5bb0040f9de006d" translate="yes" xml:space="preserve">
          <source>Initiates a download of the resource at &lt;code&gt;url&lt;/code&gt;. The API will generate a &lt;a href=&quot;download-item&quot;&gt;DownloadItem&lt;/a&gt; that can be accessed with the &lt;a href=&quot;#event-will-download&quot;&gt;will-download&lt;/a&gt; event.</source>
          <target state="translated">在 &lt;code&gt;url&lt;/code&gt; 处启动资源下载。API将生成一个&lt;a href=&quot;download-item&quot;&gt;DownloadItem&lt;/a&gt;，可以通过&lt;a href=&quot;#event-will-download&quot;&gt;will-download&lt;/a&gt;事件进行访问。</target>
        </trans-unit>
        <trans-unit id="e5e155b477fc18106c133eb62ec3dc25ba846ec1" translate="yes" xml:space="preserve">
          <source>Injects CSS into the current web page and returns a unique key for the inserted stylesheet.</source>
          <target state="translated">将CSS注入到当前网页中,并为插入的样式表返回一个唯一的键。</target>
        </trans-unit>
        <trans-unit id="f0dfd5f0e298aa47a48b7d8cbced854e9d4e2a6d" translate="yes" xml:space="preserve">
          <source>Injects CSS into the current web page.</source>
          <target state="translated">将CSS注入到当前网页中。</target>
        </trans-unit>
        <trans-unit id="b7e359bfdb20491c11d50453bcef336f0fdfbaf1" translate="yes" xml:space="preserve">
          <source>Injects CSS into the guest page.</source>
          <target state="translated">将CSS注入到客人页面中。</target>
        </trans-unit>
        <trans-unit id="0c476f7fcf5175b2a06fb617a213f4c2f93acbb8" translate="yes" xml:space="preserve">
          <source>Input Method Editor. A program that allows users to enter characters and symbols not found on their keyboard. For example, this allows users of Latin keyboards to input Chinese, Japanese, Korean and Indic characters.</source>
          <target state="translated">输入法编辑器。一个允许用户输入键盘上没有的字符和符号的程序。例如,这允许拉丁语键盘的用户输入中文、日文、韩文和印地语字符。</target>
        </trans-unit>
        <trans-unit id="0eae9d550a0ef49777e521e2538dd1118f800cf8" translate="yes" xml:space="preserve">
          <source>InputEvent Object</source>
          <target state="translated">输入事件对象</target>
        </trans-unit>
        <trans-unit id="24599b3c6ab1eb1b9bce61098d2b77a02aba0f64" translate="yes" xml:space="preserve">
          <source>Inserts &lt;code&gt;text&lt;/code&gt; to the focused element.</source>
          <target state="translated">将 &lt;code&gt;text&lt;/code&gt; 插入到聚焦的元素中。</target>
        </trans-unit>
        <trans-unit id="d8520f87c739aa4e579f6880a74b33685e460efb" translate="yes" xml:space="preserve">
          <source>Inserts the &lt;code&gt;menuItem&lt;/code&gt; to the &lt;code&gt;pos&lt;/code&gt; position of the menu.</source>
          <target state="translated">将 &lt;code&gt;menuItem&lt;/code&gt; 插入菜单的 &lt;code&gt;pos&lt;/code&gt; 位置。</target>
        </trans-unit>
        <trans-unit id="b18ed5b223e999f64c1ccaea33926bea7922e4c2" translate="yes" xml:space="preserve">
          <source>Inside Application</source>
          <target state="translated">内部应用</target>
        </trans-unit>
        <trans-unit id="67efb1af030003bc2e370e914ca924f2de6b7ff4" translate="yes" xml:space="preserve">
          <source>Inspect Node &lt;a href=&quot;https://github.com/electron/node&quot;&gt;repo&lt;/a&gt; to see what patches upstream Node used with their v8 after bumping its version</source>
          <target state="translated">检查节点存储&lt;a href=&quot;https://github.com/electron/node&quot;&gt;库，&lt;/a&gt;以查看上游节点在修改其v8版本后使用了哪些补丁</target>
        </trans-unit>
        <trans-unit id="fc94ce67e51fa7ea969dbaee7bf90130edb770e8" translate="yes" xml:space="preserve">
          <source>Inspects the shared worker based on its ID.</source>
          <target state="translated">根据ID检查共享工作者。</target>
        </trans-unit>
        <trans-unit id="a092085f2c9866b83b7573ea43eba27961c12c78" translate="yes" xml:space="preserve">
          <source>Install &lt;a href=&quot;https://chromium.googlesource.com/chromium/src/+/master/docs/linux_build_instructions.md#Install&quot;&gt;depot_tools&lt;/a&gt;</source>
          <target state="translated">安装&lt;a href=&quot;https://chromium.googlesource.com/chromium/src/+/master/docs/linux_build_instructions.md#Install&quot;&gt;depot_tools&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9ddc5636813d8d39f423ad830592f346531bb89f" translate="yes" xml:space="preserve">
          <source>Install &lt;a href=&quot;https://chromium.googlesource.com/chromium/src/+/master/docs/linux_build_instructions.md#Install-additional-build-dependencies&quot;&gt;additional build dependencies&lt;/a&gt;</source>
          <target state="translated">安装&lt;a href=&quot;https://chromium.googlesource.com/chromium/src/+/master/docs/linux_build_instructions.md#Install-additional-build-dependencies&quot;&gt;其他构建依赖项&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c751bdc0defb0bcc2e0fb38801b511d7b20b126b" translate="yes" xml:space="preserve">
          <source>Install &lt;a href=&quot;https://github.com/surf-build/surf&quot;&gt;Surf&lt;/a&gt;, via npm: &lt;code&gt;npm install -g surf-build@latest&lt;/code&gt;</source>
          <target state="translated">通过npm 安装&lt;a href=&quot;https://github.com/surf-build/surf&quot;&gt;Surf&lt;/a&gt;： &lt;code&gt;npm install -g surf-build@latest&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c86a288868b37cbc3c18d110b12eb7f17faf0a40" translate="yes" xml:space="preserve">
          <source>Install Electron</source>
          <target state="translated">安装电子</target>
        </trans-unit>
        <trans-unit id="af7e1eda11eb3ba6c4a6534ba4973cba0e85d446" translate="yes" xml:space="preserve">
          <source>Install Electron via &lt;code&gt;npm install electron&lt;/code&gt;</source>
          <target state="translated">通过 &lt;code&gt;npm install electron&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="59def4f4c416f5ec11a55b89f42f9c04dda49d4c" translate="yes" xml:space="preserve">
          <source>Install Visual Studio 2015/2017 (to get the signing utility)</source>
          <target state="translated">安装Visual Studio 2015/2017(获取签名实用程序)。</target>
        </trans-unit>
        <trans-unit id="60f4317addf48a766ff06d21d0528f663490057f" translate="yes" xml:space="preserve">
          <source>Install Visual Studio to get the signing utility (the free &lt;a href=&quot;https://visualstudio.microsoft.com/vs/community/&quot;&gt;Community Edition&lt;/a&gt; is enough)</source>
          <target state="translated">安装Visual Studio以获取签名实用程序（免费的&lt;a href=&quot;https://visualstudio.microsoft.com/vs/community/&quot;&gt;Community Edition&lt;/a&gt;就足够了）</target>
        </trans-unit>
        <trans-unit id="b0a08fb068315f0e1c7ff6b9951586a86d940581" translate="yes" xml:space="preserve">
          <source>Install it in Chrome browser.</source>
          <target state="translated">在Chrome浏览器中安装。</target>
        </trans-unit>
        <trans-unit id="c1cf7ea58fe26587ea330bcf3383edd9081a470a" translate="yes" xml:space="preserve">
          <source>Install the module:</source>
          <target state="translated">安装模块。</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">Installation</target>
        </trans-unit>
        <trans-unit id="49badac7f3152085c3ccdfbd4aec9ad26474d44b" translate="yes" xml:space="preserve">
          <source>Installing Electron</source>
          <target state="translated">安装电子</target>
        </trans-unit>
        <trans-unit id="01530047c3eb49aada2802a1ac3a4c313f6cdb3e" translate="yes" xml:space="preserve">
          <source>Installing modules and rebuilding for Electron</source>
          <target state="translated">为Electron安装模块和重建</target>
        </trans-unit>
        <trans-unit id="93e1f66298d41be94ea2442fc257bf8bcd4c056b" translate="yes" xml:space="preserve">
          <source>Instance Events</source>
          <target state="translated">实例事件</target>
        </trans-unit>
        <trans-unit id="061c23b642f541c97df74623e463e371a73cf5e7" translate="yes" xml:space="preserve">
          <source>Instance Events must be listed under an &lt;code&gt;### Instance Events&lt;/code&gt; chapter.</source>
          <target state="translated">实例事件必须在&amp;ldquo; &lt;code&gt;### Instance Events&lt;/code&gt; 一章下列出。</target>
        </trans-unit>
        <trans-unit id="dd4a61ab3dc44ab9b5a205303724a68f74a735a7" translate="yes" xml:space="preserve">
          <source>Instance Methods</source>
          <target state="translated">实例方法</target>
        </trans-unit>
        <trans-unit id="227bff69876b172aeee6752f9b003b6b9627ce6c" translate="yes" xml:space="preserve">
          <source>Instance Properties</source>
          <target state="translated">实例属性</target>
        </trans-unit>
        <trans-unit id="61916ab2e3433d6ffbb8ce1a774ea4d4be15cff4" translate="yes" xml:space="preserve">
          <source>Instance Properties must be listed under an &lt;code&gt;### Instance Properties&lt;/code&gt; chapter.</source>
          <target state="translated">实例属性必须在&amp;ldquo; &lt;code&gt;### Instance Properties&lt;/code&gt; 一章下列出。</target>
        </trans-unit>
        <trans-unit id="8362b73eb793173f5bd3a1f478b69e06eecb033b" translate="yes" xml:space="preserve">
          <source>Instance methods and properties</source>
          <target state="translated">实例方法和属性</target>
        </trans-unit>
        <trans-unit id="d7bdfca8d5860d3e348d16366e2d6d47432a9a96" translate="yes" xml:space="preserve">
          <source>Instance properties must start with &quot;A [Property Type] ...&quot;</source>
          <target state="translated">实例属性必须以 &quot;A[属性类型]...&quot;开头。</target>
        </trans-unit>
        <trans-unit id="20d33549668c4d09ea6ef7d6c02f07fdfb9c25a1" translate="yes" xml:space="preserve">
          <source>Instances of the &lt;code&gt;Cookies&lt;/code&gt; class are accessed by using &lt;code&gt;cookies&lt;/code&gt; property of a &lt;code&gt;Session&lt;/code&gt;.</source>
          <target state="translated">使用 &lt;code&gt;Session&lt;/code&gt; 的 &lt;code&gt;cookies&lt;/code&gt; 属性访问 &lt;code&gt;Cookies&lt;/code&gt; 类的实例。</target>
        </trans-unit>
        <trans-unit id="11b9e088e579b4a97a72bdefa7d3eb659ab722d1" translate="yes" xml:space="preserve">
          <source>Instances of the &lt;code&gt;ServiceWorkers&lt;/code&gt; class are accessed by using &lt;code&gt;serviceWorkers&lt;/code&gt; property of a &lt;code&gt;Session&lt;/code&gt;.</source>
          <target state="translated">通过使用 &lt;code&gt;Session&lt;/code&gt; 的 &lt;code&gt;serviceWorkers&lt;/code&gt; 属性可以访问 &lt;code&gt;ServiceWorkers&lt;/code&gt; 类的实例。</target>
        </trans-unit>
        <trans-unit id="ba9374c6843f9596e1f6431ed4d21e4162f669de" translate="yes" xml:space="preserve">
          <source>Instances of the &lt;code&gt;WebRequest&lt;/code&gt; class are accessed by using the &lt;code&gt;webRequest&lt;/code&gt; property of a &lt;code&gt;Session&lt;/code&gt;.</source>
          <target state="translated">通过使用 &lt;code&gt;Session&lt;/code&gt; 的 &lt;code&gt;webRequest&lt;/code&gt; 属性访问 &lt;code&gt;WebRequest&lt;/code&gt; 类的实例。</target>
        </trans-unit>
        <trans-unit id="554911029299375829269fa9162db763e8344c4b" translate="yes" xml:space="preserve">
          <source>Instantiates a special &quot;other items proxy&quot;, which nests TouchBar elements inherited from Chromium at the space indicated by the proxy. By default, this proxy is added to each TouchBar at the end of the input. For more information, see the AppKit docs on &lt;a href=&quot;https://developer.apple.com/documentation/appkit/nstouchbaritemidentifierotheritemsproxy&quot;&gt;NSTouchBarItemIdentifierOtherItemsProxy&lt;/a&gt;</source>
          <target state="translated">实例化一个特殊的&amp;ldquo;其他项代理&amp;rdquo;，该代理将从Chromium继承的TouchBar元素嵌套在该代理指示的空间中。默认情况下，此代理会在输入末尾添加到每个TouchBar。有关更多信息，请参阅&lt;a href=&quot;https://developer.apple.com/documentation/appkit/nstouchbaritemidentifierotheritemsproxy&quot;&gt;NSTouchBarItemIdentifierOtherItemsProxy&lt;/a&gt;上的AppKit文档。</target>
        </trans-unit>
        <trans-unit id="fda6d9fe352fc67e7751222e8711cad163e6c057" translate="yes" xml:space="preserve">
          <source>Instantiates a special &quot;other items proxy&quot;, which nests TouchBar elements inherited from Chromium at the space indicated by the proxy. By default, this proxy is added to each TouchBar at the end of the input. For more information, see the AppKit docs on NSTouchBarItemIdentifierOtherItemsProxy Note: Only one instance of this class can be added per TouchBar.</source>
          <target state="translated">实例化一个特殊的 &quot;其他项目代理&quot;,它将继承自Chromium的TouchBar元素嵌套在代理所指示的空间中。默认情况下,这个代理会被添加到每个TouchBar的输入结束处。更多信息,请参阅AppKit文档中关于NSTouchBarItemIdentifierOtherItemsProxy的说明:每个TouchBar只能添加一个该类的实例。</target>
        </trans-unit>
        <trans-unit id="d001b3aa791829d21434a552dac73a8360b747df" translate="yes" xml:space="preserve">
          <source>Instead of &lt;code&gt;https://github.com/electron/electron&lt;/code&gt;, you can use your own fork here (something like &lt;code&gt;https://github.com/&amp;lt;username&amp;gt;/electron&lt;/code&gt;).</source>
          <target state="translated">除了使用 &lt;code&gt;https://github.com/electron/electron&lt;/code&gt; 之外，您还可以在这里使用自己的fork（类似 &lt;code&gt;https://github.com/&amp;lt;username&amp;gt;/electron&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="16270f869f551f34445155955c881cfa37616466" translate="yes" xml:space="preserve">
          <source>Instructs Electron to bypass the proxy server for the given semi-colon-separated list of hosts. This flag has an effect only if used in tandem with &lt;code&gt;--proxy-server&lt;/code&gt;.</source>
          <target state="translated">指示Electron绕过给定的以分号分隔的主机列表的代理服务器。仅当与 &lt;code&gt;--proxy-server&lt;/code&gt; 一起使用时，此标志才有效。</target>
        </trans-unit>
        <trans-unit id="6d6d2d7b468b24a48b35ded8843a5bd10903effd" translate="yes" xml:space="preserve">
          <source>Intercept and modify the contents of a request at various stages of its lifetime.</source>
          <target state="translated">拦截并修改请求中各个阶段的内容。</target>
        </trans-unit>
        <trans-unit id="ec8f8e0bfb9aa904007cb6480a58a60f41047d71" translate="yes" xml:space="preserve">
          <source>Intercepting events in the main process</source>
          <target state="translated">拦截主流程中的事件</target>
        </trans-unit>
        <trans-unit id="ee6f75429405860b71bcefde477ecaf5969a2348" translate="yes" xml:space="preserve">
          <source>Intercepts &lt;code&gt;scheme&lt;/code&gt; protocol and uses &lt;code&gt;handler&lt;/code&gt; as the protocol's new handler which sends a &lt;code&gt;Buffer&lt;/code&gt; as a response.</source>
          <target state="translated">拦截 &lt;code&gt;scheme&lt;/code&gt; 协议，并使用 &lt;code&gt;handler&lt;/code&gt; 作为协议的新处理程序，该处理程序发送 &lt;code&gt;Buffer&lt;/code&gt; 作为响应。</target>
        </trans-unit>
        <trans-unit id="be11c9050ebdb78d8293caf5907f221e92288ad5" translate="yes" xml:space="preserve">
          <source>Intercepts &lt;code&gt;scheme&lt;/code&gt; protocol and uses &lt;code&gt;handler&lt;/code&gt; as the protocol's new handler which sends a &lt;code&gt;String&lt;/code&gt; as a response.</source>
          <target state="translated">拦截 &lt;code&gt;scheme&lt;/code&gt; 协议，并使用 &lt;code&gt;handler&lt;/code&gt; 作为协议的新处理程序，该处理程序发送 &lt;code&gt;String&lt;/code&gt; 作为响应。</target>
        </trans-unit>
        <trans-unit id="637ab926f95aaf76690f739533e2ba5eb9714a4e" translate="yes" xml:space="preserve">
          <source>Intercepts &lt;code&gt;scheme&lt;/code&gt; protocol and uses &lt;code&gt;handler&lt;/code&gt; as the protocol's new handler which sends a file as a response.</source>
          <target state="translated">拦截 &lt;code&gt;scheme&lt;/code&gt; 协议，并将 &lt;code&gt;handler&lt;/code&gt; 用作协议的新处理程序，该处理程序发送文件作为响应。</target>
        </trans-unit>
        <trans-unit id="c92f450a734d695eb0e09f842f66dc4c08221e1d" translate="yes" xml:space="preserve">
          <source>Intercepts &lt;code&gt;scheme&lt;/code&gt; protocol and uses &lt;code&gt;handler&lt;/code&gt; as the protocol's new handler which sends a new HTTP request as a response.</source>
          <target state="translated">拦截 &lt;code&gt;scheme&lt;/code&gt; 协议，并将 &lt;code&gt;handler&lt;/code&gt; 用作协议的新处理程序，该处理程序发送新的HTTP请求作为响应。</target>
        </trans-unit>
        <trans-unit id="afee89207b5b63f5ec244d5599398760f821a96d" translate="yes" xml:space="preserve">
          <source>Interface description language. Write function signatures and data types in a format that can be used to generate interfaces in Java, C++, JavaScript, etc.</source>
          <target state="translated">接口描述语言。编写函数签名和数据类型的格式,可以用来生成Java、C++、JavaScript等语言的接口。</target>
        </trans-unit>
        <trans-unit id="06fac3d23961645b440211045f3413e391d15637" translate="yes" xml:space="preserve">
          <source>Interlingua</source>
          <target state="translated">Interlingua</target>
        </trans-unit>
        <trans-unit id="f9ce090f6b4e6812a2a33054e170fe0befa25fea" translate="yes" xml:space="preserve">
          <source>Internal implementation</source>
          <target state="translated">内部执行</target>
        </trans-unit>
        <trans-unit id="2b7835ef37ebd3e0fc33cd0b04741ea8f2f7dedf" translate="yes" xml:space="preserve">
          <source>Introduction of &lt;a href=&quot;https://conventionalcommits.org/&quot;&gt;conventional commit messages&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://conventionalcommits.org/&quot;&gt;常规提交消息的&lt;/a&gt;介绍</target>
        </trans-unit>
        <trans-unit id="41573236e6fbc505575a3621ccf0f5fca3ab0ac6" translate="yes" xml:space="preserve">
          <source>Introduction of semver-compliant &lt;code&gt;-beta&lt;/code&gt; tags</source>
          <target state="translated">符合semver的 &lt;code&gt;-beta&lt;/code&gt; 标签的介绍</target>
        </trans-unit>
        <trans-unit id="c9bc3dddf21efcfe1e523f2f2860c73024488699" translate="yes" xml:space="preserve">
          <source>Invalidates the current &lt;a href=&quot;https://developer.apple.com/library/ios/documentation/UserExperience/Conceptual/Handoff/HandoffFundamentals/HandoffFundamentals.html&quot;&gt;Handoff&lt;/a&gt; user activity.</source>
          <target state="translated">使当前的&lt;a href=&quot;https://developer.apple.com/library/ios/documentation/UserExperience/Conceptual/Handoff/HandoffFundamentals/HandoffFundamentals.html&quot;&gt;切换&lt;/a&gt;用户活动无效。</target>
        </trans-unit>
        <trans-unit id="8b99998c625d0b440d99f2fb14b8c59a1c9c7445" translate="yes" xml:space="preserve">
          <source>Invoke the updater from your app's main process file:</source>
          <target state="translated">从应用程序的主进程文件中调用更新程序。</target>
        </trans-unit>
        <trans-unit id="98e37149c6765bae15ead855a09f4ad812f8e179" translate="yes" xml:space="preserve">
          <source>Invokes the print dialog on the child window.</source>
          <target state="translated">调用子窗口上的打印对话框。</target>
        </trans-unit>
        <trans-unit id="5d8e0045883199ce732e034c1958412c32625a78" translate="yes" xml:space="preserve">
          <source>IpcMainEvent Object extends &lt;code&gt;Event&lt;/code&gt;</source>
          <target state="translated">IpcMainEvent对象扩展 &lt;code&gt;Event&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="07e9fbe62dfb276d54579222fc7b60502c07078a" translate="yes" xml:space="preserve">
          <source>IpcMainEvent Object extends Event</source>
          <target state="translated">IpcMainEvent对象扩展为Event。</target>
        </trans-unit>
        <trans-unit id="2c4c5f35a2c2e47174a786858d499c7cf486975b" translate="yes" xml:space="preserve">
          <source>IpcMainEvent object</source>
          <target state="translated">IpcMainEvent对象</target>
        </trans-unit>
        <trans-unit id="fec4a5c254373af96ba79d5ba125dc5218f3bf78" translate="yes" xml:space="preserve">
          <source>IpcMainInvokeEvent Object extends &lt;code&gt;Event&lt;/code&gt;</source>
          <target state="translated">IpcMainInvokeEvent对象扩展 &lt;code&gt;Event&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a90d910c9b70f6a833226a55d5b513419289fdec" translate="yes" xml:space="preserve">
          <source>IpcMainInvokeEvent Object extends Event</source>
          <target state="translated">IpcMainInvokeEvent对象扩展为Event。</target>
        </trans-unit>
        <trans-unit id="cccc257b87213115e00c47772ffb89e407aacaaf" translate="yes" xml:space="preserve">
          <source>IpcMainInvokeEvent object</source>
          <target state="translated">IpcMainInvokeEvent对象</target>
        </trans-unit>
        <trans-unit id="b62ba674eed713d7e230008a90a92bced392a498" translate="yes" xml:space="preserve">
          <source>IpcRendererEvent Object extends &lt;code&gt;Event&lt;/code&gt;</source>
          <target state="translated">IpcRendererEvent对象扩展 &lt;code&gt;Event&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="311c42a75f9b891c26d9c8973c9fbfa247e7fb33" translate="yes" xml:space="preserve">
          <source>IpcRendererEvent Object extends Event</source>
          <target state="translated">IpcRendererEvent对象扩展为Event。</target>
        </trans-unit>
        <trans-unit id="2bddaea174340270be5a83fe7aed2e32aa628eba" translate="yes" xml:space="preserve">
          <source>Irish</source>
          <target state="translated">Irish</target>
        </trans-unit>
        <trans-unit id="bb860a8fb79ef836fe43c8401ef19b5d319dfdc3" translate="yes" xml:space="preserve">
          <source>Is anyone using the API?</source>
          <target state="translated">有人在使用API吗?</target>
        </trans-unit>
        <trans-unit id="d72f416aa575437886003d40111c597233a5b888" translate="yes" xml:space="preserve">
          <source>Is the API fulfilling the original proposed usecases, does it have any gaps?</source>
          <target state="translated">API是否满足原来提出的用例,是否有差距?</target>
        </trans-unit>
        <trans-unit id="db50cd83394f392eeb9b4f8789ad0a098bcbaebd" translate="yes" xml:space="preserve">
          <source>Isolated World</source>
          <target state="translated">孤立的世界</target>
        </trans-unit>
        <trans-unit id="56403f13c63fe5f09bf79f86c5ea1a90addc46f8" translate="yes" xml:space="preserve">
          <source>Isolation For Untrusted Content</source>
          <target state="translated">不受信任内容的隔离</target>
        </trans-unit>
        <trans-unit id="3a83c1973a29789e42e9e79148e2ce42769de102" translate="yes" xml:space="preserve">
          <source>Issue HTTP/HTTPS requests using Chromium's native networking library</source>
          <target state="translated">使用Chromium的本地网络库发出HTTP/HTTPS请求。</target>
        </trans-unit>
        <trans-unit id="30ce4cb25faae86427d8ac22e8f50a0a74f3f393" translate="yes" xml:space="preserve">
          <source>Issues</source>
          <target state="translated">Issues</target>
        </trans-unit>
        <trans-unit id="6cd8dd2ee0aacb1c1c58c1806551c4e2b82b59a5" translate="yes" xml:space="preserve">
          <source>Issues In Electron</source>
          <target state="translated">电子方面的问题</target>
        </trans-unit>
        <trans-unit id="71df46d765d8779ff3c19865c5451195c37e4d80" translate="yes" xml:space="preserve">
          <source>It can be used by the preload script to add removed Node global symbols back to the global scope when node integration is turned off:</source>
          <target state="translated">当节点集成关闭时,它可以被预加载脚本用来将移除的Node全局符号添加回全局作用域。</target>
        </trans-unit>
        <trans-unit id="5496611a4bb2d2ad0c6f82becb4734760e9dc457" translate="yes" xml:space="preserve">
          <source>It creates a new &lt;code&gt;BrowserWindow&lt;/code&gt; with native properties as set by the &lt;code&gt;options&lt;/code&gt;.</source>
          <target state="translated">它使用 &lt;code&gt;options&lt;/code&gt; 设置的本机属性创建一个新的 &lt;code&gt;BrowserWindow&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7391d87c0a1a2fe7c0ab00835f38a129f96ed5e0" translate="yes" xml:space="preserve">
          <source>It creates a new &lt;code&gt;Notification&lt;/code&gt; with native properties as set by the &lt;code&gt;options&lt;/code&gt;.</source>
          <target state="translated">它使用 &lt;code&gt;options&lt;/code&gt; 设置的本机属性创建一个新的 &lt;code&gt;Notification&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e93ddd5bab35c5101381bb6a00ab5c7573470386" translate="yes" xml:space="preserve">
          <source>It directly exposes a powerful API without any kind of argument filtering. This would allow any website to send arbitrary IPC messages which you do not want to be possible. The correct way to expose IPC-based APIs would instead be to provide one method per IPC message.</source>
          <target state="translated">它直接暴露了一个强大的API,没有任何形式的参数过滤。这将允许任何网站发送任意的IPC消息,这是你不希望发生的。暴露基于IPC的API的正确方式反而是为每个IPC消息提供一个方法。</target>
        </trans-unit>
        <trans-unit id="9172bf0f438712c9c3dd7ca8795d16a4bee8eaa8" translate="yes" xml:space="preserve">
          <source>It has since become a popular tool used by open source developers, startups, and established companies. &lt;a href=&quot;https://electronjs.org/apps&quot;&gt;See who is building on Electron&lt;/a&gt;.</source>
          <target state="translated">此后，它已成为开放源代码开发人员，初创公司和成熟公司使用的流行工具。&lt;a href=&quot;https://electronjs.org/apps&quot;&gt;看看谁在建立Electron&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0f85d3bf8bcd7441256bc10040e9eefdc09d6b25" translate="yes" xml:space="preserve">
          <source>It is a good idea to control the creation of new &lt;a href=&quot;../api/web-view&quot;&gt;&lt;code&gt;WebViews&lt;/code&gt;&lt;/a&gt; from the main process and to verify that their webPreferences do not disable security features.</source>
          <target state="translated">&lt;a href=&quot;../api/web-view&quot;&gt; &lt;code&gt;WebViews&lt;/code&gt; &lt;/a&gt;从主过程控制新WebView的创建，并确认其webPreferences不禁用安全功能。</target>
        </trans-unit>
        <trans-unit id="bb8febdeb30c9ebc1be10f82081b038fbe9cfab2" translate="yes" xml:space="preserve">
          <source>It is a good idea to control the creation of new &lt;a href=&quot;../api/webview-tag&quot;&gt;&lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt;&lt;/a&gt; tags from the main process and to verify that their webPreferences do not disable security features.</source>
          <target state="translated">最好从主过程控制新&lt;a href=&quot;../api/webview-tag&quot;&gt; &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; &lt;/a&gt;标记的创建，并验证其webPreferences不会禁用安全功能。</target>
        </trans-unit>
        <trans-unit id="9e8b236e77dcb919d04a3d3457a47a0fc9adfff6" translate="yes" xml:space="preserve">
          <source>It is a good idea to control the creation of new &lt;a href=&quot;api/webview-tag&quot;&gt;&lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt;&lt;/a&gt; tags from the main process and to verify that their webPreferences do not disable security features.</source>
          <target state="translated">最好从主过程控制新的&lt;a href=&quot;api/webview-tag&quot;&gt; &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; &lt;/a&gt;标记的创建，并确认其webPreferences不禁用安全功能。</target>
        </trans-unit>
        <trans-unit id="964da9fea4bbafe96ef1db6a86f52b43e7414473" translate="yes" xml:space="preserve">
          <source>It is acceptable for some commits in a pull request to not include a semantic prefix, as long as a later commit in the same pull request contains a meaningful encompassing semantic message.</source>
          <target state="translated">对于拉取请求中的某些提交来说,不包含语义前缀是可以接受的,只要以后同一拉取请求中的提交包含有意义的包含语义的信息。</target>
        </trans-unit>
        <trans-unit id="99e6b0fd7f9cb07760e0c7a12bf305b87ded1292" translate="yes" xml:space="preserve">
          <source>It is acceptable for some commits in a pull request to not include a semantic prefix, as long as the pull request title contains a meaningful encompassing semantic message.</source>
          <target state="translated">在拉取请求中,只要拉取请求的标题包含有意义的包含语义的信息,那么对于某些提交来说,不包含语义前缀是可以接受的。</target>
        </trans-unit>
        <trans-unit id="6513c3b2261075b5414276dd4b7c570732e84c37" translate="yes" xml:space="preserve">
          <source>It is also not emitted during in-page navigation, such as clicking anchor links or updating the &lt;code&gt;window.location.hash&lt;/code&gt;. Use &lt;code&gt;did-navigate-in-page&lt;/code&gt; event for this purpose.</source>
          <target state="translated">在页面内导航期间，例如单击锚链接或更新 &lt;code&gt;window.location.hash&lt;/code&gt; ，也不会发出它。为此，请使用 &lt;code&gt;did-navigate-in-page&lt;/code&gt; 事件。</target>
        </trans-unit>
        <trans-unit id="3c815f956f73b5874b39eadfd911308e44d74e4a" translate="yes" xml:space="preserve">
          <source>It is also not emitted for in-page navigations, such as clicking anchor links or updating the &lt;code&gt;window.location.hash&lt;/code&gt;. Use &lt;code&gt;did-navigate-in-page&lt;/code&gt; event for this purpose.</source>
          <target state="translated">页面内导航（例如单击锚链接或更新 &lt;code&gt;window.location.hash&lt;/code&gt; ）也不会发出。为此，请使用 &lt;code&gt;did-navigate-in-page&lt;/code&gt; 事件。</target>
        </trans-unit>
        <trans-unit id="f8da655fcd87f5210eafad0aaf91c55a5fb6c0b3" translate="yes" xml:space="preserve">
          <source>It is also possible to rebrand Electron by changing the product name and building it from source. To do this you need to modify the &lt;code&gt;atom.gyp&lt;/code&gt; file and have a clean rebuild.</source>
          <target state="translated">也可以通过更改产品名称并从源代码构建产品来重命名Electron。为此，您需要修改 &lt;code&gt;atom.gyp&lt;/code&gt; 文件并进行干净的重建。</target>
        </trans-unit>
        <trans-unit id="c2ff743cbfcce9aa6f420e40188018854b31b03d" translate="yes" xml:space="preserve">
          <source>It is also possible to rebrand Electron by changing the product name and building it from source. To do this you need to set the build argument corresponding to the product name (&lt;code&gt;electron_product_name = &quot;YourProductName&quot;&lt;/code&gt;) in the &lt;code&gt;args.gn&lt;/code&gt; file and rebuild.</source>
          <target state="translated">也可以通过更改产品名称并从源代码构建产品来重命名Electron。为此，您需要在 &lt;code&gt;args.gn&lt;/code&gt; 文件中设置与产品名称（ &lt;code&gt;electron_product_name = &quot;YourProductName&quot;&lt;/code&gt; ）相对应的构建参数，然后进行重新构建。</target>
        </trans-unit>
        <trans-unit id="d2c2d0778e9b8a7250b6f58b96b6a278aba4e5f2" translate="yes" xml:space="preserve">
          <source>It is also possible to send messages from the main process to the renderer process, see &lt;a href=&quot;api/web-contents#contentssendchannel-args&quot;&gt;webContents.send&lt;/a&gt; for more information.</source>
          <target state="translated">也可以将消息从主进程发送到渲染器进程，有关更多信息，请参见&lt;a href=&quot;api/web-contents#contentssendchannel-args&quot;&gt;webContents.send&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d8df1867931cc05780a7151ac1bb5b025a291ead" translate="yes" xml:space="preserve">
          <source>It is also possible to send messages from the main process to the renderer process, see &lt;a href=&quot;web-contents#contentssendchannel-args&quot;&gt;webContents.send&lt;/a&gt; for more information.</source>
          <target state="translated">也可以将消息从主进程发送到渲染器进程，有关更多信息，请参见&lt;a href=&quot;web-contents#contentssendchannel-args&quot;&gt;webContents.send&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4b32930b704c36912af4b6b8a8b75fd0314d1679" translate="yes" xml:space="preserve">
          <source>It is also possible to send messages from the main process to the renderer process, see &lt;a href=&quot;web-contents#webcontentssendchannel-arg1-arg2-&quot;&gt;webContents.send&lt;/a&gt; for more information.</source>
          <target state="translated">也可以将消息从主进程发送到渲染器进程，有关更多信息，请参见&lt;a href=&quot;web-contents#webcontentssendchannel-arg1-arg2-&quot;&gt;webContents.send&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0b91cede13154f320e8b22c673ef890bdace73b6" translate="yes" xml:space="preserve">
          <source>It is best to specify &lt;code&gt;role&lt;/code&gt; for any menu item that matches a standard role, rather than trying to manually implement the behavior in a &lt;code&gt;click&lt;/code&gt; function. The built-in &lt;code&gt;role&lt;/code&gt; behavior will give the best native experience.</source>
          <target state="translated">最好为与标准角色匹配的任何菜单项指定 &lt;code&gt;role&lt;/code&gt; ，而不是尝试在 &lt;code&gt;click&lt;/code&gt; 功能中手动实现该行为。内置 &lt;code&gt;role&lt;/code&gt; 行为将提供最佳的本机体验。</target>
        </trans-unit>
        <trans-unit id="dd1e1c98b6db6cc4fd46785c694a1841f6fdf1e7" translate="yes" xml:space="preserve">
          <source>It is essential to copy the VM because if you spin up a VM against an image that image cannot at the same time be used by AppVeyor.</source>
          <target state="translated">复制虚拟机是非常必要的,因为如果您针对一个镜像旋转了一个虚拟机,该镜像不能同时被AppVeyor使用。</target>
        </trans-unit>
        <trans-unit id="70390302435eeaafda262133a9e687cdd3b70aea" translate="yes" xml:space="preserve">
          <source>It is highly recommended to format your changed C++ code before opening pull requests, which will save you and the reviewers' time.</source>
          <target state="translated">强烈建议在打开pull请求之前,将你修改后的C++代码格式化,这样可以节省你和审稿人的时间。</target>
        </trans-unit>
        <trans-unit id="7830172c1d0f8fe69e4f504337f2d2af361b31bd" translate="yes" xml:space="preserve">
          <source>It is important to note that this option alone won't enable the OS-enforced sandbox. To enable this feature, the &lt;code&gt;--enable-sandbox&lt;/code&gt; command-line argument must be passed to electron, which will force &lt;code&gt;sandbox: true&lt;/code&gt; for all &lt;code&gt;BrowserWindow&lt;/code&gt; instances.</source>
          <target state="translated">重要的是要注意，仅此选项不会启用操作系统强制的沙箱。要启用此功能，必须将 &lt;code&gt;--enable-sandbox&lt;/code&gt; 命令行参数传递给electronic，这将强制 &lt;code&gt;sandbox: true&lt;/code&gt; 对于所有 &lt;code&gt;BrowserWindow&lt;/code&gt; 实例均为true。</target>
        </trans-unit>
        <trans-unit id="bc521905c727fd3e0d69803c031fa725b88fa0cf" translate="yes" xml:space="preserve">
          <source>It is important to remember that the security of your Electron application is the result of the overall security of the framework foundation (&lt;em&gt;Chromium&lt;/em&gt;, &lt;em&gt;Node.js&lt;/em&gt;), Electron itself, all NPM dependencies and your code. As such, it is your responsibility to follow a few important best practices:</source>
          <target state="translated">重要的是要记住，Electron应用程序的安全性是框架基础（&lt;em&gt;Chromium&lt;/em&gt;，&lt;em&gt;Node.js&lt;/em&gt;），Electron本身，所有NPM依赖项和代码的整体安全性的结果。因此，您有责任遵循一些重要的最佳做法：</target>
        </trans-unit>
        <trans-unit id="06b0757ae0de67fc7189e624df8530d408b9ad1e" translate="yes" xml:space="preserve">
          <source>It is not possible to have the OS sandbox active only for some renderers, if &lt;code&gt;--enable-sandbox&lt;/code&gt; is enabled, normal electron windows cannot be created.</source>
          <target state="translated">不能仅对某些渲染器激活OS沙箱，如果启用了 &lt;code&gt;--enable-sandbox&lt;/code&gt; ，则无法创建常规电子窗口。</target>
        </trans-unit>
        <trans-unit id="26eccb2be6647f437eee41fc998f1735f2fdfb59" translate="yes" xml:space="preserve">
          <source>It is paramount that you disable Node.js integration in any renderer (&lt;a href=&quot;../api/browser-window&quot;&gt;&lt;code&gt;BrowserWindow&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../api/browser-view&quot;&gt;&lt;code&gt;BrowserView&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;../api/web-view&quot;&gt;&lt;code&gt;WebView&lt;/code&gt;&lt;/a&gt;) that loads remote content. The goal is to limit the powers you grant to remote content, thus making it dramatically more difficult for an attacker to harm your users should they gain the ability to execute JavaScript on your website.</source>
          <target state="translated">在加载远程内容的任何渲染器（&lt;a href=&quot;../api/browser-window&quot;&gt; &lt;code&gt;BrowserWindow&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../api/browser-view&quot;&gt; &lt;code&gt;BrowserView&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../api/web-view&quot;&gt; &lt;code&gt;WebView&lt;/code&gt; &lt;/a&gt;）中禁用Node.js集成是至关重要的。目标是限制您授予远程内容的权力，从而使攻击者在拥有能够在您的网站上执行JavaScript的能力的情况下，更加难以伤害用户。</target>
        </trans-unit>
        <trans-unit id="d86d6d8cd3673155bb33cd4fc8e7c4f37210ae45" translate="yes" xml:space="preserve">
          <source>It is paramount that you do not enable Node.js integration in any renderer (&lt;a href=&quot;../api/browser-window&quot;&gt;&lt;code&gt;BrowserWindow&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../api/browser-view&quot;&gt;&lt;code&gt;BrowserView&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;../api/webview-tag&quot;&gt;&lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt;&lt;/a&gt;) that loads remote content. The goal is to limit the powers you grant to remote content, thus making it dramatically more difficult for an attacker to harm your users should they gain the ability to execute JavaScript on your website.</source>
          <target state="translated">至关重要的是，您不要在加载远程内容的任何渲染器（&lt;a href=&quot;../api/browser-window&quot;&gt; &lt;code&gt;BrowserWindow&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../api/browser-view&quot;&gt; &lt;code&gt;BrowserView&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../api/webview-tag&quot;&gt; &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; &lt;/a&gt;）中启用Node.js集成。目标是限制您授予远程内容的权力，从而使攻击者在拥有能够在您的网站上执行JavaScript的能力的情况下，更加难以伤害用户。</target>
        </trans-unit>
        <trans-unit id="9dfa7db15ad481f737f1498bb63baa10067bc005" translate="yes" xml:space="preserve">
          <source>It is paramount that you do not enable Node.js integration in any renderer (&lt;a href=&quot;api/browser-window&quot;&gt;&lt;code&gt;BrowserWindow&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;api/browser-view&quot;&gt;&lt;code&gt;BrowserView&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;api/webview-tag&quot;&gt;&lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt;&lt;/a&gt;) that loads remote content. The goal is to limit the powers you grant to remote content, thus making it dramatically more difficult for an attacker to harm your users should they gain the ability to execute JavaScript on your website.</source>
          <target state="translated">至关重要的是，不要在加载远程内容的任何渲染器（&lt;a href=&quot;api/browser-window&quot;&gt; &lt;code&gt;BrowserWindow&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;api/browser-view&quot;&gt; &lt;code&gt;BrowserView&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;api/webview-tag&quot;&gt; &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; &lt;/a&gt;）中启用Node.js集成。目标是限制您授予远程内容的权力，从而使攻击者如果获得在您的网站上执行JavaScript的能力，就很难伤害到您的用户。</target>
        </trans-unit>
        <trans-unit id="1d2c153e62eb4f6c67c3c1fd908c8f60efcdd975" translate="yes" xml:space="preserve">
          <source>It is possible to circumvent this limitation by capturing system audio with another macOS app like Soundflower and passing it through a virtual audio input device. This virtual device can then be queried with &lt;code&gt;navigator.mediaDevices.getUserMedia&lt;/code&gt;.</source>
          <target state="translated">通过使用另一个MacOS应用程序（如Soundflower）捕获系统音频并将其通过虚拟音频输入设备来规避此限制是可能的。然后可以使用 &lt;code&gt;navigator.mediaDevices.getUserMedia&lt;/code&gt; 查询该虚拟设备。</target>
        </trans-unit>
        <trans-unit id="199273e0544a82108bdacc659f2b6ad6ccf8c086" translate="yes" xml:space="preserve">
          <source>It is possible to debug Chromium with Electron by passing &lt;code&gt;--build_debug_libcc&lt;/code&gt; to the bootstrap script:</source>
          <target state="translated">通过将 &lt;code&gt;--build_debug_libcc&lt;/code&gt; 传递给引导脚本，可以使用Electron调试Chromium ：</target>
        </trans-unit>
        <trans-unit id="89660d837d9b5fa4be0177ad642c3c4194a2b505" translate="yes" xml:space="preserve">
          <source>It is possible to pass any object that implements the readable stream API (emits &lt;code&gt;data&lt;/code&gt;/&lt;code&gt;end&lt;/code&gt;/&lt;code&gt;error&lt;/code&gt; events). For example, here's how a file could be returned:</source>
          <target state="translated">可以传递实现可读流API的任何对象（发出 &lt;code&gt;data&lt;/code&gt; / &lt;code&gt;end&lt;/code&gt; / &lt;code&gt;error&lt;/code&gt; 事件）。例如，以下是文件的返回方式：</target>
        </trans-unit>
        <trans-unit id="01838a541d27cddb64533a95704c1d80412cb073" translate="yes" xml:space="preserve">
          <source>It is possible to share the gclient git cache with other machines by exporting it as SMB share on linux, but only one process/machine can be using the cache at a time. The locks created by git-cache script will try to prevent this, but it may not work perfectly in a network.</source>
          <target state="translated">在linux上,可以通过导出为SMB共享的方式与其他机器共享gclient git缓存,但一次只能有一个进程/机器使用缓存。git-cache脚本创建的锁会尽量防止这种情况发生,但在网络中可能无法完美运行。</target>
        </trans-unit>
        <trans-unit id="e711e87900ad11545fe6d11f0b1dd6baa4c2a7bf" translate="yes" xml:space="preserve">
          <source>It is possible to share this directory with other machines by exporting it as SMB share on linux, but only one process/machine can be using the cache at a time. The locks created by git-cache script will try to prevent this, but it may not work perfectly in a network.</source>
          <target state="translated">在linux上可以通过导出为SMB共享的方式与其他机器共享这个目录,但一次只能有一个进程/机器使用缓存。git-cache脚本创建的锁会尽量防止这种情况,但在网络中可能无法完美运行。</target>
        </trans-unit>
        <trans-unit id="729b1792b3971af4760afa3ec670d4bd463f68ae" translate="yes" xml:space="preserve">
          <source>It is possible to use Node.js features in Electron's Web Workers, to do so the &lt;code&gt;nodeIntegrationInWorker&lt;/code&gt; option should be set to &lt;code&gt;true&lt;/code&gt; in &lt;code&gt;webPreferences&lt;/code&gt;.</source>
          <target state="translated">它可以使用Node.js的在电子的Web工人功能，这样做 &lt;code&gt;nodeIntegrationInWorker&lt;/code&gt; 选项应被设置为 &lt;code&gt;true&lt;/code&gt; 在 &lt;code&gt;webPreferences&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1eed923b3a2d0655e7d02fcfeb29a9b888b89a69" translate="yes" xml:space="preserve">
          <source>It is rare for a JavaScript-based polyfill to be faster than the equivalent native feature in Electron. Do not slow down your Electron app by shipping your own version of standard web platform features.</source>
          <target state="translated">基于JavaScript的polyfill比Electron中同等的原生功能更快的情况很少。不要通过发布您自己的标准网络平台功能版本来减慢您的Electron应用程序的速度。</target>
        </trans-unit>
        <trans-unit id="60e41f92d43dd7cb52a699ea13c91a702e3b522b" translate="yes" xml:space="preserve">
          <source>It is recommended that you pause expensive operations when the visibility state is &lt;code&gt;hidden&lt;/code&gt; in order to minimize power consumption.</source>
          <target state="translated">建议您在 &lt;code&gt;hidden&lt;/code&gt; 可见性状态时暂停昂贵的操作，以最大程度地降低功耗。</target>
        </trans-unit>
        <trans-unit id="af7b492c8cb4914e87549f09be97fa5754d25b6e" translate="yes" xml:space="preserve">
          <source>It is recommended to keep your changes grouped logically within individual commits. Many contributors find it easier to review changes that are split across multiple commits. There is no limit to the number of commits in a pull request.</source>
          <target state="translated">我们建议将你的修改按逻辑归类到各个提交中。许多贡献者会发现,审查分在多个提交中的修改会更容易。一个拉取请求中的提交次数没有限制。</target>
        </trans-unit>
        <trans-unit id="e1cf52e7ed40575673e4cacbc143a8a1d2a41a19" translate="yes" xml:space="preserve">
          <source>It is strongly recommended that the task list be static. It should remain the same regardless of the state or status of the application. While it is possible to vary the list dynamically, you should consider that this could confuse the user who does not expect that portion of the destination list to change.</source>
          <target state="translated">强烈建议任务列表是静态的。无论应用程序的状态或状态如何,它都应该保持不变。虽然可以动态地改变列表,但您应该考虑到这可能会使用户感到困惑,因为他们不希望目标列表的那部分内容发生变化。</target>
        </trans-unit>
        <trans-unit id="5f0fdd38eb013530dfda0e785c93fb1ed05e3eee" translate="yes" xml:space="preserve">
          <source>It is very likely you are using the module in the wrong process. For example &lt;code&gt;electron.app&lt;/code&gt; can only be used in the main process, while &lt;code&gt;electron.webFrame&lt;/code&gt; is only available in renderer processes.</source>
          <target state="translated">您很有可能在错误的过程中使用了模块。例如， &lt;code&gt;electron.app&lt;/code&gt; 只能在主进程中使用，而 &lt;code&gt;electron.webFrame&lt;/code&gt; 仅在渲染器进程中可用。</target>
        </trans-unit>
        <trans-unit id="06810b9a24cd224beebc872577e421af21ac01c7" translate="yes" xml:space="preserve">
          <source>It will create a &lt;code&gt;dist/main&lt;/code&gt; folder in the libcc repo's root. You will need this to build Electron.</source>
          <target state="translated">它将在libcc存储库的根目录中创建一个 &lt;code&gt;dist/main&lt;/code&gt; 文件夹。您将需要此来构建Electron。</target>
        </trans-unit>
        <trans-unit id="3647db27602728c98ee2a2301c17868327282d6d" translate="yes" xml:space="preserve">
          <source>It will probably fail applying patches.</source>
          <target state="translated">它可能会失败应用补丁。</target>
        </trans-unit>
        <trans-unit id="3343764ed4d8b21d498c1a44d6f90876c8454213" translate="yes" xml:space="preserve">
          <source>It's common for open issues to involve discussion. Some contributors may have differing opinions, including whether the behavior is a bug or feature. This discussion is part of the process and should be kept focused, helpful, and professional.</source>
          <target state="translated">开放性问题涉及讨论是很常见的。一些贡献者可能会有不同的意见,包括该行为是错误还是功能。这种讨论是整个过程的一部分,应该保持专注、有用和专业。</target>
        </trans-unit>
        <trans-unit id="485b57adcc80650a0f376fe516e0ea35fef68007" translate="yes" xml:space="preserve">
          <source>Italian</source>
          <target state="translated">Italian</target>
        </trans-unit>
        <trans-unit id="b9bc30a5feae532b939b0112f6162a8c1d64ca9e" translate="yes" xml:space="preserve">
          <source>Italian (Italy)</source>
          <target state="translated">意大利语</target>
        </trans-unit>
        <trans-unit id="9b542a61893cf94c6b2aa33589915292aa185c08" translate="yes" xml:space="preserve">
          <source>Italian (Switzerland)</source>
          <target state="translated">意大利语(瑞士)</target>
        </trans-unit>
        <trans-unit id="9239c22d1d1c990ca8c206cb408b345a3ec8114c" translate="yes" xml:space="preserve">
          <source>Japanese</source>
          <target state="translated">Japanese</target>
        </trans-unit>
        <trans-unit id="ee620923ff5fc510555dc37083a135ee93b5404b" translate="yes" xml:space="preserve">
          <source>JavaScript</source>
          <target state="translated">JavaScript</target>
        </trans-unit>
        <trans-unit id="6910a0b5a00af25b7ba39985cfb9347d8203a0a2" translate="yes" xml:space="preserve">
          <source>JavaScript will always be disabled in the opened &lt;code&gt;window&lt;/code&gt; if it is disabled on the parent window.</source>
          <target state="translated">如果在父窗口中禁用了JavaScript，则将始终在打开的 &lt;code&gt;window&lt;/code&gt; 禁用JavaScript 。</target>
        </trans-unit>
        <trans-unit id="4d3bb51ea74dbb54d8ffaf04425ff843127f10a5" translate="yes" xml:space="preserve">
          <source>Javanese</source>
          <target state="translated">Javanese</target>
        </trans-unit>
        <trans-unit id="a2feefe9afbc3d0f6fec53c2b390d4515e363675" translate="yes" xml:space="preserve">
          <source>Jenkins</source>
          <target state="translated">Jenkins</target>
        </trans-unit>
        <trans-unit id="2023379a50fddc81cf53bdb2ea7da27bdc589b20" translate="yes" xml:space="preserve">
          <source>JumpList</source>
          <target state="translated">JumpList</target>
        </trans-unit>
        <trans-unit id="6298a2509790f8ae562a533cfb770f6ee7778f71" translate="yes" xml:space="preserve">
          <source>JumpListCategory</source>
          <target state="translated">JumpListCategory</target>
        </trans-unit>
        <trans-unit id="0ff8418a0fc25bab796d47849f1222ead79fc898" translate="yes" xml:space="preserve">
          <source>JumpListCategory Object</source>
          <target state="translated">JumpListCategory对象</target>
        </trans-unit>
        <trans-unit id="94afa3adf74d2a4329032ec8d8dda74daa3c70b5" translate="yes" xml:space="preserve">
          <source>JumpListItem</source>
          <target state="translated">JumpListItem</target>
        </trans-unit>
        <trans-unit id="46eed83a18817455ede51e512cb72e4bd08a77a3" translate="yes" xml:space="preserve">
          <source>JumpListItem Object</source>
          <target state="translated">JumpListItem对象</target>
        </trans-unit>
        <trans-unit id="bf8afa3e80d6f2c0bd4db91bcae008d7f7118b98" translate="yes" xml:space="preserve">
          <source>Just enabling &lt;code&gt;contextIsolation&lt;/code&gt; and using &lt;code&gt;contextBridge&lt;/code&gt; does not automatically mean that everything you do is safe. For instance this code is &lt;strong&gt;unsafe&lt;/strong&gt;.</source>
          <target state="translated">仅启用 &lt;code&gt;contextIsolation&lt;/code&gt; 并使用 &lt;code&gt;contextBridge&lt;/code&gt; 并不自动意味着您所做的一切都是安全的。例如，此代码&lt;strong&gt;不安全&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="c3ed665577f91f82c451742a0c8875950d42b19f" translate="yes" xml:space="preserve">
          <source>Kannada</source>
          <target state="translated">Kannada</target>
        </trans-unit>
        <trans-unit id="b9fedaa07b209e1f7a9c2d83295a76fe49f3b49f" translate="yes" xml:space="preserve">
          <source>Kazakh</source>
          <target state="translated">Kazakh</target>
        </trans-unit>
        <trans-unit id="bae6d59bf391c6b00cbe84e270764a5b277dd65c" translate="yes" xml:space="preserve">
          <source>Keep the second line blank.</source>
          <target state="translated">第二行保持空白。</target>
        </trans-unit>
        <trans-unit id="3aed4e511b017fafe9de3e6cb5aa57466d57dfaa" translate="yes" xml:space="preserve">
          <source>Keeping Git Submodules Up to Date</source>
          <target state="translated">保持Git子模块的更新</target>
        </trans-unit>
        <trans-unit id="b465751c05fbc426234f552a5d95e9103bd3e6dc" translate="yes" xml:space="preserve">
          <source>Keyboard Shortcuts</source>
          <target state="translated">键盘快捷键</target>
        </trans-unit>
        <trans-unit id="b1b8ca52391c49152b6bb1826b475ea8eaddc867" translate="yes" xml:space="preserve">
          <source>KeyboardEvent Object</source>
          <target state="translated">键盘事件对象</target>
        </trans-unit>
        <trans-unit id="ab497ec0dfa486f643cc63c8cb71f2bd88ad7f78" translate="yes" xml:space="preserve">
          <source>KeyboardInputEvent Object extends &lt;code&gt;InputEvent&lt;/code&gt;</source>
          <target state="translated">KeyboardInputEvent对象扩展了 &lt;code&gt;InputEvent&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="289268ce605211f8219bfb3814ba2cbd96f76d4c" translate="yes" xml:space="preserve">
          <source>KeyboardInputEvent Object extends InputEvent</source>
          <target state="translated">键盘输入事件对象扩展为InputEvent。</target>
        </trans-unit>
        <trans-unit id="492d599f268d2b9c10e44ddc75a00f1af51f075b" translate="yes" xml:space="preserve">
          <source>Keys must be supported using only &quot;Simple&quot; types in this table. Values must be supported in this table. Prototype modifications are dropped. Sending custom classes will copy values but not the prototype.</source>
          <target state="translated">本表中必须支持只使用 &quot;简单 &quot;类型的键。值必须在本表中支持。原型的修改会被放弃。发送自定义类将复制值,但不复制原型。</target>
        </trans-unit>
        <trans-unit id="b05203cf89b60eb36609a1a8b7f3cafe0927486a" translate="yes" xml:space="preserve">
          <source>Known issues</source>
          <target state="translated">已知问题</target>
        </trans-unit>
        <trans-unit id="dec66c5bf0f7fe4cc038ac871def8eb1ac31c146" translate="yes" xml:space="preserve">
          <source>Korean</source>
          <target state="translated">Korean</target>
        </trans-unit>
        <trans-unit id="a06efeaf4455fbbc03855e222511ad582f621f28" translate="yes" xml:space="preserve">
          <source>Kurdish</source>
          <target state="translated">Kurdish</target>
        </trans-unit>
        <trans-unit id="5aea8700748f6946f70240cab14148a2c449ed9c" translate="yes" xml:space="preserve">
          <source>Kyrgyz</source>
          <target state="translated">Kyrgyz</target>
        </trans-unit>
        <trans-unit id="843195acc182eab1aff0d0e1f754451a5eccd288" translate="yes" xml:space="preserve">
          <source>LLDB is a powerful tool and supports multiple strategies for code inspection. For this basic introduction, let's assume that you're calling a command from JavaScript that isn't behaving correctly - so you'd like to break on that command's C++ counterpart inside the Electron source.</source>
          <target state="translated">LLDB是一个强大的工具,支持多种策略的代码检查。对于这个基本的介绍,让我们假设你从JavaScript中调用了一个行为不正确的命令--所以你想在Electron源码内对该命令的C++对应物进行突破。</target>
        </trans-unit>
        <trans-unit id="7d3d95ffa3f81f91f71534d6dadf0dec108ea6c6" translate="yes" xml:space="preserve">
          <source>LLDB is a powerful tool with a great documentation. To learn more about it, consider Apple's debugging documentation, for instance the &lt;a href=&quot;https://developer.apple.com/library/mac/documentation/IDEs/Conceptual/gdb_to_lldb_transition_guide/document/lldb-basics.html#//apple_ref/doc/uid/TP40012917-CH2-SW2&quot;&gt;LLDB Command Structure Reference&lt;/a&gt; or the introduction to &lt;a href=&quot;https://developer.apple.com/library/mac/documentation/IDEs/Conceptual/gdb_to_lldb_transition_guide/document/lldb-terminal-workflow-tutorial.html&quot;&gt;Using LLDB as a Standalone Debugger&lt;/a&gt;.</source>
          <target state="translated">LLDB是功能强大的工具，提供了出色的文档。要了解更多信息，请考虑Apple的调试文档，例如《&lt;a href=&quot;https://developer.apple.com/library/mac/documentation/IDEs/Conceptual/gdb_to_lldb_transition_guide/document/lldb-basics.html#//apple_ref/doc/uid/TP40012917-CH2-SW2&quot;&gt;LLDB命令结构参考》&lt;/a&gt;或&amp;ldquo;将&lt;a href=&quot;https://developer.apple.com/library/mac/documentation/IDEs/Conceptual/gdb_to_lldb_transition_guide/document/lldb-terminal-workflow-tutorial.html&quot;&gt;LLDB用作独立调试器&amp;rdquo;的介绍&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d19a4be135980e5ef4a065ac5b4d796f7207e00d" translate="yes" xml:space="preserve">
          <source>LNK1181: cannot open input file 'kernel32.lib'</source>
          <target state="translated">LNK1181:无法打开输入文件 'kernel32.lib' 。</target>
        </trans-unit>
        <trans-unit id="80fea83804bf0e1f73c7272f7a19c26bc52d63ef" translate="yes" xml:space="preserve">
          <source>LTS</source>
          <target state="translated">LTS</target>
        </trans-unit>
        <trans-unit id="800734d40ea8493c3a8bf4b7794c379316a3df97" translate="yes" xml:space="preserve">
          <source>Language Code</source>
          <target state="translated">语言代码</target>
        </trans-unit>
        <trans-unit id="2ccd20b6dbc9562a28819fbf7ff0129d89476dcb" translate="yes" xml:space="preserve">
          <source>Language Name</source>
          <target state="translated">语言名称</target>
        </trans-unit>
        <trans-unit id="535cdb9bf5c901974567357abde733d39ad34291" translate="yes" xml:space="preserve">
          <source>Laothian</source>
          <target state="translated">Laothian</target>
        </trans-unit>
        <trans-unit id="d110f1435e34b27515c30f3be3bcd2bfb2388e70" translate="yes" xml:space="preserve">
          <source>Large icon</source>
          <target state="translated">大图标</target>
        </trans-unit>
        <trans-unit id="e05f92ac1b16cc7edb8d43150b49e59e79895476" translate="yes" xml:space="preserve">
          <source>Later versions of Windows allow for advanced notifications, with custom templates, images, and other flexible elements. To send those notifications (from either the main process or the renderer process), use the userland module &lt;a href=&quot;https://github.com/felixrieseberg/electron-windows-notifications&quot;&gt;electron-windows-notifications&lt;/a&gt;, which uses native Node addons to send &lt;code&gt;ToastNotification&lt;/code&gt; and &lt;code&gt;TileNotification&lt;/code&gt; objects.</source>
          <target state="translated">Windows的更高版本允许使用自定义模板，图像和其他灵活元素的高级通知。要发送这些通知（从主进程或渲染器进程），请使用userland模块&lt;a href=&quot;https://github.com/felixrieseberg/electron-windows-notifications&quot;&gt;electronic-windows-notifications&lt;/a&gt;，该模块使用本机Node插件发送 &lt;code&gt;ToastNotification&lt;/code&gt; 和 &lt;code&gt;TileNotification&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="1728312ad64b08dc2b1876cfbbf9262bc117c354" translate="yes" xml:space="preserve">
          <source>Later versions of macOS allow for notifications with an input field, allowing the user to quickly reply to a notification. In order to send notifications with an input field, use the userland module &lt;a href=&quot;https://github.com/CharlieHess/node-mac-notifier&quot;&gt;node-mac-notifier&lt;/a&gt;.</source>
          <target state="translated">更高版本的macOS允许在输入字段中进行通知，从而允许用户快速回复通知。为了使用输入字段发送通知，请使用userland模块&lt;a href=&quot;https://github.com/CharlieHess/node-mac-notifier&quot;&gt;node-mac-notifier&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="79102e50ec1470cd9d985bb97a7ee168aea5c9fa" translate="yes" xml:space="preserve">
          <source>Later, a zero-day exploit is revealed and a fix is applied to master. We backport the fix to the &lt;code&gt;2-0-x&lt;/code&gt; line and release &lt;code&gt;2.0.1&lt;/code&gt;.</source>
          <target state="translated">后来，发现了零日漏洞利用，并向母版应用了修复程序。我们将修复程序反向移植到 &lt;code&gt;2-0-x&lt;/code&gt; 行，并发布 &lt;code&gt;2.0.1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9bde795b72be44b343c829314d764282997de688" translate="yes" xml:space="preserve">
          <source>Latin</source>
          <target state="translated">Latin</target>
        </trans-unit>
        <trans-unit id="9ed6ae997b1668915a9529a0889d5ac9735b0c4b" translate="yes" xml:space="preserve">
          <source>Latvian</source>
          <target state="translated">Latvian</target>
        </trans-unit>
        <trans-unit id="f24a5193238f86b2d3d254301b3c323f9785e36d" translate="yes" xml:space="preserve">
          <source>Launch Electron app after build. You can now open the xcode workspace created above and attach to the Electron process through the Debug &amp;gt; Attach To Process &amp;gt; Electron debug menu. [Note: If you want to debug the renderer process, you need to attach to the Electron Helper as well.]</source>
          <target state="translated">构建后启动Electron应用程序。现在，您可以打开上面创建的xcode工作区，并通过&amp;ldquo;调试&amp;rdquo;&amp;gt;&amp;ldquo;附加到进程&amp;rdquo;&amp;gt;&amp;ldquo; Electron调试&amp;rdquo;菜单附加到Electron进程。[注意：如果要调试渲染器进程，则还需要附加到Electron Helper。</target>
        </trans-unit>
        <trans-unit id="76482ebb939485aeaa736d61937bc8887f92fd1e" translate="yes" xml:space="preserve">
          <source>Launch Visual Studio 2017 on your development machine.</source>
          <target state="translated">在开发机上启动Visual Studio 2017。</target>
        </trans-unit>
        <trans-unit id="12c9e11f89aca32c500a6c6be3bcd67a6e93e727" translate="yes" xml:space="preserve">
          <source>Launch electron app after build. You can now open the xcode workspace created above and attach to the electron process through the Debug &amp;gt; Attach To Process &amp;gt; Electron debug menu. [Note: If you want to debug the renderer process, you need to attach to the Electron Helper as well.]</source>
          <target state="translated">构建后启动电子应用程序。现在，您可以打开上面创建的xcode工作区，并通过&amp;ldquo;调试&amp;rdquo;&amp;gt;&amp;ldquo;附加到进程&amp;rdquo;&amp;gt;&amp;ldquo;电子调试&amp;rdquo;菜单附加到电子进程。[注意：如果要调试渲染器过程，则还需要附加到Electron Helper。</target>
        </trans-unit>
        <trans-unit id="a5303f1d5313a1be24a844d73befd4f8a1111c34" translate="yes" xml:space="preserve">
          <source>Launch your app &lt;code&gt;.exe&lt;/code&gt; on the target device via the &lt;em&gt;Command Prompt&lt;/em&gt; (passing &lt;code&gt;--inspect-brk&lt;/code&gt; to pause it before any native modules are loaded).</source>
          <target state="translated">通过&lt;em&gt;命令提示符&lt;/em&gt;在目标设备上启动您的应用程序 &lt;code&gt;.exe&lt;/code&gt; （在加载任何本机模块之前，传递 &lt;code&gt;--inspect-brk&lt;/code&gt; 使其暂停）。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cbd9b1b900b29e1c4c6b76c3752bba04afcef68e" translate="yes" xml:space="preserve">
          <source>Learning the basics</source>
          <target state="translated">学习基础知识</target>
        </trans-unit>
        <trans-unit id="edb627b677bb2e85eb500bda16bcdd868b84eb44" translate="yes" xml:space="preserve">
          <source>Legitimate use cases exist, but unless you know what you are doing, you should not enable this property.</source>
          <target state="translated">合法的用例是存在的,但除非你知道你在做什么,否则你不应该启用这个属性。</target>
        </trans-unit>
        <trans-unit id="e5416149c06382c28af60fb1dc625ea79a1e2812" translate="yes" xml:space="preserve">
          <source>Let's assume that you want to debug &lt;code&gt;app.setName()&lt;/code&gt;, which is defined in &lt;code&gt;browser.cc&lt;/code&gt; as &lt;code&gt;Browser::SetName()&lt;/code&gt;. Set the breakpoint using the &lt;code&gt;breakpoint&lt;/code&gt; command, specifying file and line to break on:</source>
          <target state="translated">假设您要调试 &lt;code&gt;app.setName()&lt;/code&gt; ，它在 &lt;code&gt;browser.cc&lt;/code&gt; 中定义为 &lt;code&gt;Browser::SetName()&lt;/code&gt; 。使用 &lt;code&gt;breakpoint&lt;/code&gt; 命令设置断点，指定要中断的文件和行：</target>
        </trans-unit>
        <trans-unit id="a080ac531dcc73a8c207eaedd84e7f44ba1ebf68" translate="yes" xml:space="preserve">
          <source>Let's consider Visual Studio Code as an example. When you open a file, it will immediately display the file to you without any code highlighting, prioritizing your ability to interact with the text. Once it has done that work, it will move on to code highlighting.</source>
          <target state="translated">我们以Visual Studio Code为例。当你打开一个文件时,它会立即将文件显示给你,而不进行任何代码高亮,优先考虑你与文本的交互能力。一旦它完成了这些工作,它就会继续进行代码高亮。</target>
        </trans-unit>
        <trans-unit id="10cfd7be6b4c87dffec0c382114913cacbf312a7" translate="yes" xml:space="preserve">
          <source>Let's consider an example and assume that your application is parsing files in the fictitious &lt;code&gt;.foo&lt;/code&gt; format. In order to do that, it relies on the equally fictitious &lt;code&gt;foo-parser&lt;/code&gt; module. In traditional Node.js development, you might write code that eagerly loads dependencies:</source>
          <target state="translated">让我们考虑一个示例，并假定您的应用程序正在解析虚拟的 &lt;code&gt;.foo&lt;/code&gt; 格式的文件。为此，它依赖于同样虚构的 &lt;code&gt;foo-parser&lt;/code&gt; 模块。在传统的Node.js开发中，您可能会编写渴望加载依赖关系的代码：</target>
        </trans-unit>
        <trans-unit id="a89f07ae8bf8f667f4acbbda19c42b285c948799" translate="yes" xml:space="preserve">
          <source>Let's create a basic application based on the structure above.</source>
          <target state="translated">让我们根据上面的结构创建一个基本的应用程序。</target>
        </trans-unit>
        <trans-unit id="bd60bf81eb78f217cd0f5886c23198c274578a36" translate="yes" xml:space="preserve">
          <source>Let's take a look at an example configuration with all required fields. Not all of them are required: the tools will be clever enough to automatically find a suitable &lt;code&gt;identity&lt;/code&gt;, for instance, but we recommend that you are explicit.</source>
          <target state="translated">让我们看一下带有所有必填字段的示例配置。并非全部都是必需的：例如，这些工具足够聪明，可以自动找到合适的 &lt;code&gt;identity&lt;/code&gt; ，但是我们建议您使用显式工具。</target>
        </trans-unit>
        <trans-unit id="c58bd40e95aef48eee67a645bb4f78e1797cdf10" translate="yes" xml:space="preserve">
          <source>Licensed under the MIT license.</source>
          <target state="translated">根据麻省理工学院许可证授权。</target>
        </trans-unit>
        <trans-unit id="2685bc981621da79d2600fee575db7b305064b8d" translate="yes" xml:space="preserve">
          <source>Lifetime of Remote Objects</source>
          <target state="translated">远程对象的寿命</target>
        </trans-unit>
        <trans-unit id="7ca3b9cea4395aa3b2fc28c2e8bca789ab8d4c2a" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;https://nwjs.io/&quot;&gt;NW.js&lt;/a&gt;, Electron provides a platform to write desktop applications with web technologies. Both platforms enable developers to utilize HTML, JavaScript, and Node.js. On the surface, they seem very similar.</source>
          <target state="translated">像&lt;a href=&quot;https://nwjs.io/&quot;&gt;NW.js&lt;/a&gt;一样，Electron提供了一个使用Web技术编写桌面应用程序的平台。这两个平台都使开发人员能够利用HTML，JavaScript和Node.js。从表面上看，它们看起来非常相似。</target>
        </trans-unit>
        <trans-unit id="5e9ffa6ffac7ebf299d8829cf9d9d0fbcc4082a7" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;--host-rules&lt;/code&gt; but these &lt;code&gt;rules&lt;/code&gt; only apply to the host resolver.</source>
          <target state="translated">与 &lt;code&gt;--host-rules&lt;/code&gt; 类似，但这些 &lt;code&gt;rules&lt;/code&gt; 仅适用于主机解析器。</target>
        </trans-unit>
        <trans-unit id="cf07f03f4c10e887c4ab3647d44403ccb8dab3d1" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;--inspect&lt;/code&gt; but pauses execution on the first line of JavaScript.</source>
          <target state="translated">像 &lt;code&gt;--inspect&lt;/code&gt; 一样，但是在JavaScript的第一行暂停执行。</target>
        </trans-unit>
        <trans-unit id="f2c530a19bd62e37e3a792fa8bf53464fa79e244" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;ipcRenderer.send&lt;/code&gt; but the event will be sent to the &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; element in the host page instead of the main process.</source>
          <target state="translated">与 &lt;code&gt;ipcRenderer.send&lt;/code&gt; 类似,但事件将被发送到主机页面中的 &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; 元素，而不是主进程。</target>
        </trans-unit>
        <trans-unit id="94b0ded4d60e2107d4aeb10a52dcd568cfff0aed" translate="yes" xml:space="preserve">
          <source>Like NW.js, Electron provides a platform to write desktop applications with JavaScript and HTML and has Node integration to grant access to the low level system from web pages.</source>
          <target state="translated">和NW.js一样,Electron也提供了一个用JavaScript和HTML编写桌面应用的平台,并且集成了Node,可以从网页上授予对低级系统的访问权。</target>
        </trans-unit>
        <trans-unit id="71c3e236560dfd383eb6c25132ec2f90fb850124" translate="yes" xml:space="preserve">
          <source>Like Node, Electron is focused on having a small set of APIs that provide all the necessary primitives for developing multi-platform desktop applications. This design philosophy allows Electron to remain a flexible tool without being overly prescriptive about how it should be used. Userland enables users to create and share tools that provide additional functionality on top of what is available in &quot;core&quot;.</source>
          <target state="translated">和Node一样,Electron专注于拥有一套小型的API,为开发多平台桌面应用提供所有必要的基元。这种设计理念使得Electron仍然是一个灵活的工具,而不会过分规定如何使用它。Userland使用户能够创建和共享工具,在 &quot;核心 &quot;的基础上提供额外的功能。</target>
        </trans-unit>
        <trans-unit id="a7c04c64ed3f2a9374590c76c50d3b7f1b18e3da" translate="yes" xml:space="preserve">
          <source>Limitations</source>
          <target state="translated">Limitations</target>
        </trans-unit>
        <trans-unit id="3c46b62eb65be1e5fd1cb89afd7c2ec725817824" translate="yes" xml:space="preserve">
          <source>Limitations of MAS Build</source>
          <target state="translated">MAS建设的局限性</target>
        </trans-unit>
        <trans-unit id="b62ec0042a445f3138737f83a1b75da7db12a301" translate="yes" xml:space="preserve">
          <source>Limitations of the Node API</source>
          <target state="translated">Node API的局限性</target>
        </trans-unit>
        <trans-unit id="67964fcdb98b346ac7601e97da9b492079aa1c15" translate="yes" xml:space="preserve">
          <source>Line 16: You create a new browser window by invoking the &lt;code&gt;createWindow&lt;/code&gt; function once the Electron application &lt;a href=&quot;../api/app#appwhenready&quot;&gt;is initialized&lt;/a&gt;.</source>
          <target state="translated">第16行：&lt;a href=&quot;../api/app#appwhenready&quot;&gt;初始化&lt;/a&gt;Electron应用程序后，您可以通过调用 &lt;code&gt;createWindow&lt;/code&gt; 函数来创建新的浏览器窗口。</target>
        </trans-unit>
        <trans-unit id="a88ed512c2ab4ebdd6420edb4b33272a2726586f" translate="yes" xml:space="preserve">
          <source>Line 16: You create a new browser window by invoking the &lt;code&gt;createWindow&lt;/code&gt; function once the Electron application &lt;a href=&quot;api/app#appwhenready&quot;&gt;is initialized&lt;/a&gt;.</source>
          <target state="translated">第16行：&lt;a href=&quot;api/app#appwhenready&quot;&gt;初始化&lt;/a&gt;Electron应用程序后，您可以通过调用 &lt;code&gt;createWindow&lt;/code&gt; 函数来创建新的浏览器窗口。</target>
        </trans-unit>
        <trans-unit id="b82ae7014f179dacfeeb04d5514ba216aa8d105a" translate="yes" xml:space="preserve">
          <source>Line 18: You add a new listener that tries to quit the application when it no longer has any open windows. This listener is a no-op on macOS due to the operating system's &lt;a href=&quot;https://support.apple.com/en-ca/guide/mac-help/mchlp2469/mac&quot;&gt;window management behavior&lt;/a&gt;.</source>
          <target state="translated">第18行：您添加了一个新的侦听器，当它不再有打开的窗口时，它会尝试退出该应用程序。由于操作系统的&lt;a href=&quot;https://support.apple.com/en-ca/guide/mac-help/mchlp2469/mac&quot;&gt;窗口管理行为，&lt;/a&gt;该侦听器在macOS上是禁止操作的。</target>
        </trans-unit>
        <trans-unit id="514c6823cc622ec82d28d3773b74d33fdd425c8f" translate="yes" xml:space="preserve">
          <source>Line 1: First, you import the &lt;code&gt;app&lt;/code&gt; and &lt;code&gt;BrowserWindow&lt;/code&gt; modules of the &lt;code&gt;electron&lt;/code&gt; package to be able to manage your application's lifecycle events, as well as create and control browser windows.</source>
          <target state="translated">第1行：首先，导入 &lt;code&gt;electron&lt;/code&gt; 封装的 &lt;code&gt;app&lt;/code&gt; 和 &lt;code&gt;BrowserWindow&lt;/code&gt; 模块，以能够管理应用程序的生命周期事件，以及创建和控制浏览器窗口。</target>
        </trans-unit>
        <trans-unit id="87894685915c49b65290bf0dd9f036412ff8ca7f" translate="yes" xml:space="preserve">
          <source>Line 24: You add a new listener that creates a new browser window only if when the application has no visible windows after being activated. For example, after launching the application for the first time, or re-launching the already running application.</source>
          <target state="translated">第24行:你添加了一个新的监听器,只有当应用程序被激活后没有可见窗口时,才会创建一个新的浏览器窗口。例如,第一次启动应用程序后,或重新启动已经运行的应用程序。</target>
        </trans-unit>
        <trans-unit id="0006eded6f8f03a487d831ba07231bf4c16dcf29" translate="yes" xml:space="preserve">
          <source>Line 3: After that, you define a function that creates a &lt;a href=&quot;../api/browser-window#new-browserwindowoptions&quot;&gt;new browser window&lt;/a&gt; with node integration enabled, loads &lt;code&gt;index.html&lt;/code&gt; file into this window (line 12, we will discuss the file later) and opens Developer Tools (line 13).</source>
          <target state="translated">第3行：此后，您定义一个函数来创建一个&lt;a href=&quot;../api/browser-window#new-browserwindowoptions&quot;&gt;新的&lt;/a&gt;启用了节点集成的浏览器窗口，将 &lt;code&gt;index.html&lt;/code&gt; 文件加载到该窗口中（第12行，我们将在稍后讨论该文件）并打开Developer Tools（第13行）。</target>
        </trans-unit>
        <trans-unit id="54cbd6299a0d2407338028c41e7bee838f2ff1bb" translate="yes" xml:space="preserve">
          <source>Line 3: After that, you define a function that creates a &lt;a href=&quot;api/browser-window#new-browserwindowoptions&quot;&gt;new browser window&lt;/a&gt; with node integration enabled, loads &lt;code&gt;index.html&lt;/code&gt; file into this window (line 12, we will discuss the file later) and opens Developer Tools (line 13).</source>
          <target state="translated">第3行：此后，您定义一个函数，该函数创建一个启用了节点集成的&lt;a href=&quot;api/browser-window#new-browserwindowoptions&quot;&gt;新浏览器窗口&lt;/a&gt;，将 &lt;code&gt;index.html&lt;/code&gt; 文件加载到该窗口中（第12行，我们将在稍后讨论该文件）并打开Developer Tools（第13行）。</target>
        </trans-unit>
        <trans-unit id="cb66995abb74e805e53169314b54331289ce47c8" translate="yes" xml:space="preserve">
          <source>Lines should be wrapped at 80 columns.</source>
          <target state="translated">线路应按80列包干。</target>
        </trans-unit>
        <trans-unit id="bdf581cc1c81ea3b5fa1a390925a643afcab19e5" translate="yes" xml:space="preserve">
          <source>Lingala</source>
          <target state="translated">Lingala</target>
        </trans-unit>
        <trans-unit id="be34399d2ade8873f3c53335c4fca0fc637ac2c0" translate="yes" xml:space="preserve">
          <source>Linking against the correct &lt;code&gt;node.lib&lt;/code&gt;</source>
          <target state="translated">链接到正确的 &lt;code&gt;node.lib&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8740f6b1646315b108f5a7b7630739c109bdee42" translate="yes" xml:space="preserve">
          <source>Linting</source>
          <target state="translated">Linting</target>
        </trans-unit>
        <trans-unit id="83ad8510bbd3f22363d068e1c96f82fd0fcccd31" translate="yes" xml:space="preserve">
          <source>Linux</source>
          <target state="translated">Linux</target>
        </trans-unit>
        <trans-unit id="18777160cf1a72270b7936a6a4eaee0e6afd8fc1" translate="yes" xml:space="preserve">
          <source>Linux x64</source>
          <target state="translated">Linux x64</target>
        </trans-unit>
        <trans-unit id="cbbe22f2550a73a1a46fffc9f1b0fb85f17d128b" translate="yes" xml:space="preserve">
          <source>Linux x86</source>
          <target state="translated">Linux x86</target>
        </trans-unit>
        <trans-unit id="7f370089b00f31b78935318c07ce7b050337cf2a" translate="yes" xml:space="preserve">
          <source>Linux: &lt;code&gt;$XDG_CACHE_HOME&lt;/code&gt; or &lt;code&gt;~/.cache/electron/&lt;/code&gt;</source>
          <target state="translated">Linux： &lt;code&gt;$XDG_CACHE_HOME&lt;/code&gt; 或 &lt;code&gt;~/.cache/electron/&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="20cb29cb8daab844a02a18f0ac83d7c62fbad7dc" translate="yes" xml:space="preserve">
          <source>List all files under the root of the archive:</source>
          <target state="translated">列出存档根下的所有文件。</target>
        </trans-unit>
        <trans-unit id="ebd312c54c59e660e8a804202db75a55093c1d92" translate="yes" xml:space="preserve">
          <source>Listens to &lt;code&gt;channel&lt;/code&gt;, when a new message arrives &lt;code&gt;listener&lt;/code&gt; would be called with &lt;code&gt;listener(event, args...)&lt;/code&gt;.</source>
          <target state="translated">听 &lt;code&gt;channel&lt;/code&gt; ，当有新邮件到达 &lt;code&gt;listener&lt;/code&gt; 将与被称为 &lt;code&gt;listener(event, args...)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="553c519c9addc3f4dad41b4a23238251692354b7" translate="yes" xml:space="preserve">
          <source>Lithuanian</source>
          <target state="translated">Lithuanian</target>
        </trans-unit>
        <trans-unit id="c195f338511e5c39daf33da048f7d8fc20adcba4" translate="yes" xml:space="preserve">
          <source>Loaded extensions will not be automatically remembered across exits; if you do not call &lt;code&gt;loadExtension&lt;/code&gt; when the app runs, the extension will not be loaded.</source>
          <target state="translated">加载的扩展程序不会在出口之间自动记住。如果您在应用运行时未调用 &lt;code&gt;loadExtension&lt;/code&gt; ，则不会加载该扩展程序。</target>
        </trans-unit>
        <trans-unit id="c7276725d40e1b9cf349327a4ce3aafa60e776c3" translate="yes" xml:space="preserve">
          <source>Loading and running code too soon</source>
          <target state="translated">过早加载和运行代码</target>
        </trans-unit>
        <trans-unit id="ef941bb9afb25b349511256cc034b5e38d94c79b" translate="yes" xml:space="preserve">
          <source>Loading content over &lt;code&gt;HTTPS&lt;/code&gt; assures the authenticity and integrity of the loaded resources while encrypting the traffic itself. See the section on &lt;a href=&quot;#1-only-load-secure-content&quot;&gt;only displaying secure content&lt;/a&gt; for more details.</source>
          <target state="translated">通过 &lt;code&gt;HTTPS&lt;/code&gt; 加载内容可在加密流量本身的同时，确保所加载资源的真实性和完整性。有关更多详细信息，请参见&lt;a href=&quot;#1-only-load-secure-content&quot;&gt;仅显示安全内容&lt;/a&gt;部分。</target>
        </trans-unit>
        <trans-unit id="6a7adf5ab6dcd5fe2a6411597ecf86d181fec9ea" translate="yes" xml:space="preserve">
          <source>Loading extensions</source>
          <target state="translated">加载分机</target>
        </trans-unit>
        <trans-unit id="b68cad196571ec704765f46bcf228bf7fe3b4e20" translate="yes" xml:space="preserve">
          <source>Loading modules is a surprisingly expensive operation, especially on Windows. When your app starts, it should not make users wait for operations that are currently not necessary.</source>
          <target state="translated">加载模块是一个令人惊讶的昂贵操作,尤其是在Windows上。当你的应用启动时,不应该让用户等待目前不需要的操作。</target>
        </trans-unit>
        <trans-unit id="fc079f52aed3f3417e23c1f910ecdea48460cc9f" translate="yes" xml:space="preserve">
          <source>Loading the initial HTML of a website over &lt;code&gt;HTTPS&lt;/code&gt; and attempting to load subsequent resources via &lt;code&gt;HTTP&lt;/code&gt; is also known as &quot;mixed content&quot;.</source>
          <target state="translated">通过 &lt;code&gt;HTTPS&lt;/code&gt; 加载网站的初始HTML 并尝试通过 &lt;code&gt;HTTP&lt;/code&gt; 加载后续资源也称为&amp;ldquo;混合内容&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="30a1a104adb3f5e456c05c2a32c27218b68a7f56" translate="yes" xml:space="preserve">
          <source>Loads the &lt;code&gt;url&lt;/code&gt; in the webview, the &lt;code&gt;url&lt;/code&gt; must contain the protocol prefix, e.g. the &lt;code&gt;http://&lt;/code&gt; or &lt;code&gt;file://&lt;/code&gt;.</source>
          <target state="translated">将 &lt;code&gt;url&lt;/code&gt; 加载到Web视图中，该 &lt;code&gt;url&lt;/code&gt; 必须包含协议前缀，例如 &lt;code&gt;http://&lt;/code&gt; 或 &lt;code&gt;file://&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="be93699ca87035f9fc36269481c3bdb20862991d" translate="yes" xml:space="preserve">
          <source>Loads the &lt;code&gt;url&lt;/code&gt; in the window. The &lt;code&gt;url&lt;/code&gt; must contain the protocol prefix, e.g. the &lt;code&gt;http://&lt;/code&gt; or &lt;code&gt;file://&lt;/code&gt;. If the load should bypass http cache then use the &lt;code&gt;pragma&lt;/code&gt; header to achieve it.</source>
          <target state="translated">将 &lt;code&gt;url&lt;/code&gt; 加载到窗口中。该 &lt;code&gt;url&lt;/code&gt; 必须包含协议前缀，例如在 &lt;code&gt;http://&lt;/code&gt; 或 &lt;code&gt;file://&lt;/code&gt; 。如果加载应绕过http缓存，请使用 &lt;code&gt;pragma&lt;/code&gt; 标头来实现。</target>
        </trans-unit>
        <trans-unit id="49f3107176240c3484499f42d4ea3791ab0eb6ce" translate="yes" xml:space="preserve">
          <source>Loads the given file in the window, &lt;code&gt;filePath&lt;/code&gt; should be a path to an HTML file relative to the root of your application. For instance an app structure like this:</source>
          <target state="translated">在窗口中加载给定文件， &lt;code&gt;filePath&lt;/code&gt; 应该是相对于应用程序根目录的HTML文件的路径。例如这样的应用程序结构：</target>
        </trans-unit>
        <trans-unit id="9ee0cb93b5814acea6da884dc9bf6b78f5602f71" translate="yes" xml:space="preserve">
          <source>Local Modules (using relative paths)</source>
          <target state="translated">本地模块(使用相对路径</target>
        </trans-unit>
        <trans-unit id="bf7c326f8217d8d073a4c87dc6c0c16e9df63e9f" translate="yes" xml:space="preserve">
          <source>Local Shortcuts</source>
          <target state="translated">本地捷径</target>
        </trans-unit>
        <trans-unit id="e3905b29d9bf54a33a15a18b60c1dcaf0efa3336" translate="yes" xml:space="preserve">
          <source>Local keyboard shortcuts are triggered only when the application is focused. To configure a local keyboard shortcut, you need to specify an &lt;a href=&quot;../api/accelerator&quot;&gt;&lt;code&gt;accelerator&lt;/code&gt;&lt;/a&gt; property when creating a &lt;a href=&quot;../api/menu-item&quot;&gt;MenuItem&lt;/a&gt; within the &lt;a href=&quot;../api/menu&quot;&gt;Menu&lt;/a&gt; module.</source>
          <target state="translated">仅当应用程序处于焦点状态时，才会触发本地键盘快捷键。若要配置本地键盘快捷键，在&amp;ldquo;&lt;a href=&quot;../api/menu&quot;&gt;菜单&amp;rdquo;&lt;/a&gt;模块中创建&lt;a href=&quot;../api/menu-item&quot;&gt;MenuItem&lt;/a&gt;时需要指定&lt;a href=&quot;../api/accelerator&quot;&gt; &lt;code&gt;accelerator&lt;/code&gt; &lt;/a&gt;属性。</target>
        </trans-unit>
        <trans-unit id="4a729b9929af80edd77447c2518d36e70780a5d1" translate="yes" xml:space="preserve">
          <source>Local keyboard shortcuts are triggered only when the application is focused. To configure a local keyboard shortcut, you need to specify an &lt;a href=&quot;api/accelerator&quot;&gt;&lt;code&gt;accelerator&lt;/code&gt;&lt;/a&gt; property when creating a &lt;a href=&quot;api/menu-item&quot;&gt;MenuItem&lt;/a&gt; within the &lt;a href=&quot;api/menu&quot;&gt;Menu&lt;/a&gt; module.</source>
          <target state="translated">仅当应用程序处于焦点状态时，才会触发本地键盘快捷键。若要配置本地键盘快捷键，在&amp;ldquo;&lt;a href=&quot;api/menu&quot;&gt;菜单&amp;rdquo;&lt;/a&gt;模块中创建&lt;a href=&quot;api/menu-item&quot;&gt;MenuItem&lt;/a&gt;时需要指定&lt;a href=&quot;api/accelerator&quot;&gt; &lt;code&gt;accelerator&lt;/code&gt; &lt;/a&gt;属性。</target>
        </trans-unit>
        <trans-unit id="031b11f4c0cdf5c68d2539db1248bf550f65668e" translate="yes" xml:space="preserve">
          <source>Locale values returned by &lt;code&gt;app.getLocale()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;app.getLocale()&lt;/code&gt; 返回的语言环境值。</target>
        </trans-unit>
        <trans-unit id="9a621b0da3425ea2613fe09c377400e16b011ee6" translate="yes" xml:space="preserve">
          <source>Locale values returned by app.getLocale().</source>
          <target state="translated">由app.getLocale()返回的Locale值。</target>
        </trans-unit>
        <trans-unit id="a222060e32289bf6910ac4a07a10733be500bd99" translate="yes" xml:space="preserve">
          <source>Locales</source>
          <target state="translated">Locales</target>
        </trans-unit>
        <trans-unit id="e101dd7d36fcf91f4a7562468263eaf821e410bf" translate="yes" xml:space="preserve">
          <source>Located in &lt;code&gt;electron/libchromiumcontent/src/tools/clang/scripts/update.py&lt;/code&gt;</source>
          <target state="translated">位于 &lt;code&gt;electron/libchromiumcontent/src/tools/clang/scripts/update.py&lt;/code&gt; 中</target>
        </trans-unit>
        <trans-unit id="e10fb5f8bb5cc4a40661ba94d0a1e8704aee55b0" translate="yes" xml:space="preserve">
          <source>Location use &lt;code&gt;East US&lt;/code&gt;</source>
          <target state="translated">位置使用 &lt;code&gt;East US&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1d792990f936b88d205256443e175e2497e70039" translate="yes" xml:space="preserve">
          <source>Log back into Azure and find the VM you just created in Home &amp;lt; Virtual Machines &amp;lt; &lt;code&gt;$YOUR_NEW_VM&lt;/code&gt;</source>
          <target state="translated">重新登录到Azure并找到您刚在Home &amp;lt;虚拟机&amp;lt; &lt;code&gt;$YOUR_NEW_VM&lt;/code&gt; 创建的VM</target>
        </trans-unit>
        <trans-unit id="f11d5438ffd1df7b05d1d8c7d640c31e01f85aa7" translate="yes" xml:space="preserve">
          <source>Log into Azure using credentials stored in LastPass (under Azure Enterprise) and then find the storage account corresponding to the name found in AppVeyor.</source>
          <target state="translated">使用存储在LastPass中的凭证(在Azure Enterprise下)登录Azure,然后找到与AppVeyor中找到的名称相对应的存储账户。</target>
        </trans-unit>
        <trans-unit id="040cec91903a1472149963d35b391790f775f3b7" translate="yes" xml:space="preserve">
          <source>Logging network events for a session.</source>
          <target state="translated">记录一个会话的网络事件。</target>
        </trans-unit>
        <trans-unit id="857d812e97fcac1b5c82d2064588db4e5ddd72d4" translate="yes" xml:space="preserve">
          <source>Long term support of older versions of Electron does not currently exist. If your current version of Electron works for you, you can stay on it for as long as you'd like. If you want to make use of new features as they come in you should upgrade to a newer version.</source>
          <target state="translated">目前不存在对旧版Electron的长期支持。如果您当前的Electron版本还能正常使用,您可以一直使用它。如果您想使用新的功能,您应该升级到一个新的版本。</target>
        </trans-unit>
        <trans-unit id="3a0bc0281fd3595d7a2edb4b0727d10f9458d490" translate="yes" xml:space="preserve">
          <source>Lots of Windows-specific code contains if... else logic that selects between either the x64 or x86 architectures.</source>
          <target state="translated">很多Windows特有的代码包含if...else逻辑,在x64或x86架构之间进行选择。</target>
        </trans-unit>
        <trans-unit id="cc77b5d76eb28a6a1071f43293da2ad44963802d" translate="yes" xml:space="preserve">
          <source>M61</source>
          <target state="translated">M61</target>
        </trans-unit>
        <trans-unit id="bd601302ae1022e3c587ef6ff9f36d99c05033a2" translate="yes" xml:space="preserve">
          <source>M66</source>
          <target state="translated">M66</target>
        </trans-unit>
        <trans-unit id="570fd89a6a1e3d247f91e4b98c64316550cc23fe" translate="yes" xml:space="preserve">
          <source>M69</source>
          <target state="translated">M69</target>
        </trans-unit>
        <trans-unit id="67e8ecdb180a8b9e10f32fc21f30fce4b4b43d88" translate="yes" xml:space="preserve">
          <source>M73</source>
          <target state="translated">M73</target>
        </trans-unit>
        <trans-unit id="ec5b1178518609c1bf685a6f309f5dde452c774d" translate="yes" xml:space="preserve">
          <source>M76</source>
          <target state="translated">M76</target>
        </trans-unit>
        <trans-unit id="f3c13bb155162fb5b8a51b2f09ad8ab39460bd6b" translate="yes" xml:space="preserve">
          <source>M78</source>
          <target state="translated">M78</target>
        </trans-unit>
        <trans-unit id="bdc2f0a5b17b29b5cbf1cbeed4c49ef4fe9d4d45" translate="yes" xml:space="preserve">
          <source>M80</source>
          <target state="translated">M80</target>
        </trans-unit>
        <trans-unit id="f9973645a0bf87e6405e445fd1eb4a38f408d8ff" translate="yes" xml:space="preserve">
          <source>M83</source>
          <target state="translated">M83</target>
        </trans-unit>
        <trans-unit id="da7293df79dccd7586a8aa6f59fec17cb41f9954" translate="yes" xml:space="preserve">
          <source>M85</source>
          <target state="translated">M85</target>
        </trans-unit>
        <trans-unit id="96e50765184ecbab70a9259abc6bc3b814072569" translate="yes" xml:space="preserve">
          <source>M87</source>
          <target state="translated">M87</target>
        </trans-unit>
        <trans-unit id="735728986e2d4027455f0815374e51ec5e662523" translate="yes" xml:space="preserve">
          <source>M89</source>
          <target state="translated">M89</target>
        </trans-unit>
        <trans-unit id="68af66810bb202c8b75471176a3f65b13ff42f73" translate="yes" xml:space="preserve">
          <source>MAS</source>
          <target state="translated">MAS</target>
        </trans-unit>
        <trans-unit id="87622d875bec8a4daf829da2f6e6a4da0aa5935c" translate="yes" xml:space="preserve">
          <source>MD2 - &lt;a href=&quot;https://tools.ietf.org/html/rfc1319&quot;&gt;RFC 1319&lt;/a&gt;</source>
          <target state="translated">MD2- &lt;a href=&quot;https://tools.ietf.org/html/rfc1319&quot;&gt;RFC 1319&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="48c7fdf5c55534c6ded90e9795080da11821105c" translate="yes" xml:space="preserve">
          <source>MD4 - &lt;a href=&quot;https://tools.ietf.org/html/rfc6150&quot;&gt;RFC 6150&lt;/a&gt;</source>
          <target state="translated">MD4- &lt;a href=&quot;https://tools.ietf.org/html/rfc6150&quot;&gt;RFC 6150&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5b2779c17e43e24356f84eb01a1a814532502f63" translate="yes" xml:space="preserve">
          <source>MD5 - &lt;a href=&quot;https://tools.ietf.org/html/rfc1321&quot;&gt;RFC 1321&lt;/a&gt;</source>
          <target state="translated">MD5- &lt;a href=&quot;https://tools.ietf.org/html/rfc1321&quot;&gt;RFC 1321&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4eb4ebbec5df5de4887b468de43d79bcbae01a9d" translate="yes" xml:space="preserve">
          <source>MDC2 - &lt;a href=&quot;https://wiki.openssl.org/index.php/Manual:Mdc2(3)&quot;&gt;ISO/IEC 10118-2&lt;/a&gt;</source>
          <target state="translated">MDC2- &lt;a href=&quot;https://wiki.openssl.org/index.php/Manual:Mdc2(3)&quot;&gt;ISO / IEC 10118-2&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1764c9b488881944bdd8aa802a90466c19b07913" translate="yes" xml:space="preserve">
          <source>Mac App Store</source>
          <target state="translated">Mac应用商店</target>
        </trans-unit>
        <trans-unit id="780c258bc4ad975884ac6bdcaf6f0e1e3b380a9d" translate="yes" xml:space="preserve">
          <source>Mac App Store Submission Guide</source>
          <target state="translated">Mac应用商店提交指南</target>
        </trans-unit>
        <trans-unit id="e1147b6f453aa3574afe7faf01df8f4f43a25471" translate="yes" xml:space="preserve">
          <source>MacOS Dock</source>
          <target state="translated">MacOS Dock</target>
        </trans-unit>
        <trans-unit id="55d8cae81f999b148f7f11049a80625438104669" translate="yes" xml:space="preserve">
          <source>MacOS: &lt;code&gt;~/Library/Caches/electron/&lt;/code&gt;</source>
          <target state="translated">MacOS： &lt;code&gt;~/Library/Caches/electron/&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b3fe571f349f4b42daacd19bf3d1a708f4bec7cd" translate="yes" xml:space="preserve">
          <source>Macedonian</source>
          <target state="translated">Macedonian</target>
        </trans-unit>
        <trans-unit id="62bce9422ff2d14f69ab80a154510232fc8a9afd" translate="yes" xml:space="preserve">
          <source>Main</source>
          <target state="translated">Main</target>
        </trans-unit>
        <trans-unit id="99effeb4610a03a43d98c6d679f8583dca53d6ac" translate="yes" xml:space="preserve">
          <source>Main Menu's Name</source>
          <target state="translated">主菜单名称</target>
        </trans-unit>
        <trans-unit id="e49b821b2c7b6714f350a8dd1146a21a18871a8c" translate="yes" xml:space="preserve">
          <source>Main Process</source>
          <target state="translated">主要流程</target>
        </trans-unit>
        <trans-unit id="95836e91069265d349e4b4e0509d813110335b7c" translate="yes" xml:space="preserve">
          <source>Main Process Modules</source>
          <target state="translated">主要流程模块</target>
        </trans-unit>
        <trans-unit id="ff42ca890ec61938ef6f2eb4ad8fb33f2d2c8439" translate="yes" xml:space="preserve">
          <source>Main World</source>
          <target state="translated">主世界</target>
        </trans-unit>
        <trans-unit id="9efa37270cf8257d0ec596934c9bc2db502ebdcd" translate="yes" xml:space="preserve">
          <source>Main and Renderer</source>
          <target state="translated">主和渲染器</target>
        </trans-unit>
        <trans-unit id="b53208d488815855dd895906ff829adc9ff78cea" translate="yes" xml:space="preserve">
          <source>Main and Renderer Processes</source>
          <target state="translated">主程序和渲染器程序</target>
        </trans-unit>
        <trans-unit id="bd28ae81bb664c783b6f9a050e87f13629f673d6" translate="yes" xml:space="preserve">
          <source>Main process</source>
          <target state="translated">主要过程</target>
        </trans-unit>
        <trans-unit id="e92739bf5eb177cbc20df5d923a76a756209a14d" translate="yes" xml:space="preserve">
          <source>Major Version Increments</source>
          <target state="translated">主要版本增量</target>
        </trans-unit>
        <trans-unit id="15658f56ce81f1e448f2ea894b48e7e0a98dfaa8" translate="yes" xml:space="preserve">
          <source>Major releases</source>
          <target state="translated">主要版本</target>
        </trans-unit>
        <trans-unit id="538d8b92993a68dce392ee56fb0fb80b9f6b4060" translate="yes" xml:space="preserve">
          <source>Major version change</source>
          <target state="translated">重大版本变更</target>
        </trans-unit>
        <trans-unit id="6304d1caf7f16f9be785c9c328a018b0d5156b1d" translate="yes" xml:space="preserve">
          <source>Make Electron code compatible with the new libcc</source>
          <target state="translated">使Electron代码与新的libcc兼容。</target>
        </trans-unit>
        <trans-unit id="123ebe43cb0ceb7111bbb2d0db8366fa969b4407" translate="yes" xml:space="preserve">
          <source>Make HTTP/HTTPS requests.</source>
          <target state="translated">进行HTTP/HTTPS请求。</target>
        </trans-unit>
        <trans-unit id="78ccfead62fd93ae7a93727e70b96ebb1a1ca6c1" translate="yes" xml:space="preserve">
          <source>Make a checklist of the Electron patches that need to be applied with &lt;code&gt;git log --oneline&lt;/code&gt;</source>
          <target state="translated">制作需要与 &lt;code&gt;git log --oneline&lt;/code&gt; 一起应用的Electron补丁清单</target>
        </trans-unit>
        <trans-unit id="fb9d214a8c3a813ca4f40f1248f0fa923e2c259d" translate="yes" xml:space="preserve">
          <source>Make codes changes in Electron repository.</source>
          <target state="translated">在Electron存储库中进行代码修改。</target>
        </trans-unit>
        <trans-unit id="20990824044b34a54949bd84530966fc5cb788ea" translate="yes" xml:space="preserve">
          <source>Make internal builds of libcc and electron</source>
          <target state="translated">对libcc和electron进行内部构建。</target>
        </trans-unit>
        <trans-unit id="6c3892045c656f1e659c81949a277d7e8a795831" translate="yes" xml:space="preserve">
          <source>Make sure &lt;code&gt;win_delay_load_hook&lt;/code&gt; is not set to &lt;code&gt;false&lt;/code&gt; in the module's &lt;code&gt;binding.gyp&lt;/code&gt;.</source>
          <target state="translated">确保 &lt;code&gt;win_delay_load_hook&lt;/code&gt; 未设置为 &lt;code&gt;false&lt;/code&gt; 在模块的 &lt;code&gt;binding.gyp&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="22a93996cb9b35166bec2f617cb93d4e0a0ce26d" translate="yes" xml:space="preserve">
          <source>Make sure it builds then add, commit, and push work to electron's crashpad fork</source>
          <target state="translated">确保它的构建,然后添加,提交,并推送工作到电子的crashpad fork。</target>
        </trans-unit>
        <trans-unit id="0abed7d5a480fac5cef7a4545cb0d29ba466f6cf" translate="yes" xml:space="preserve">
          <source>Make sure that your app's &lt;code&gt;node_modules&lt;/code&gt; directory is empty.</source>
          <target state="translated">确保您应用的 &lt;code&gt;node_modules&lt;/code&gt; 目录为空。</target>
        </trans-unit>
        <trans-unit id="ce695f6c79213567b657ab0ab0a20b729a1495b1" translate="yes" xml:space="preserve">
          <source>Make sure the linter does not report any issues and that all tests pass. Please do not submit patches that fail either check.</source>
          <target state="translated">确保linter不报告任何问题,并且所有测试都通过。请不要提交没有通过任何一项检查的补丁。</target>
        </trans-unit>
        <trans-unit id="01a4bd30b0fc35971b3145968b1e61859627562f" translate="yes" xml:space="preserve">
          <source>Make sure the native module is compatible with the target platform and architecture for your Electron app.</source>
          <target state="translated">确保本地模块与你的Electron应用的目标平台和架构兼容。</target>
        </trans-unit>
        <trans-unit id="8719c0f428cd1e89411827eefee5c4f8bba44fef" translate="yes" xml:space="preserve">
          <source>Make sure you have installed &lt;code&gt;pywin32&lt;/code&gt; with &lt;code&gt;pip install pywin32&lt;/code&gt;.</source>
          <target state="translated">请确保您已安装 &lt;code&gt;pywin32&lt;/code&gt; 与 &lt;code&gt;pip install pywin32&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="971665255c9f7514f0fb7340e444b4ea708018ac" translate="yes" xml:space="preserve">
          <source>Make sure you have the latest Visual Studio update installed.</source>
          <target state="translated">确保你已经安装了最新的Visual Studio更新。</target>
        </trans-unit>
        <trans-unit id="bd200749e96183e292d7ffb6a2e24e6e794542ea" translate="yes" xml:space="preserve">
          <source>Makes the browser go back a web page.</source>
          <target state="translated">让浏览器返回一个网页。</target>
        </trans-unit>
        <trans-unit id="fb33f8c8468b4ef03b24447c1b467fe21bdd8e7f" translate="yes" xml:space="preserve">
          <source>Makes the browser go forward a web page.</source>
          <target state="translated">使浏览器前进一个网页。</target>
        </trans-unit>
        <trans-unit id="3598715e580b14a7b0457c42b72ca9d527ffe21e" translate="yes" xml:space="preserve">
          <source>Makes the guest page go back.</source>
          <target state="translated">让客人的页面回去。</target>
        </trans-unit>
        <trans-unit id="8fecea1ee7ec37d488b674dfe0c96e2d98ff2179" translate="yes" xml:space="preserve">
          <source>Makes the guest page go forward.</source>
          <target state="translated">让客人的页面向前发展。</target>
        </trans-unit>
        <trans-unit id="267a0d8700d17b6e1c1981abe6b4204bfac85631" translate="yes" xml:space="preserve">
          <source>Makes the window ignore all mouse events.</source>
          <target state="translated">使窗口忽略所有鼠标事件。</target>
        </trans-unit>
        <trans-unit id="6dd49a56260ae56c79b5cb939972481551eeff57" translate="yes" xml:space="preserve">
          <source>Makes the window not show in the taskbar.</source>
          <target state="translated">使窗口不显示在任务栏中。</target>
        </trans-unit>
        <trans-unit id="671c4a1a00d83c053d9d4fc465a563ed8e1f7e2c" translate="yes" xml:space="preserve">
          <source>Making Changes</source>
          <target state="translated">做出改变</target>
        </trans-unit>
        <trans-unit id="046dd363a2869c372fd92b4d7fc805573323a713" translate="yes" xml:space="preserve">
          <source>Making accessible applications is important and we're happy to introduce new functionality to &lt;a href=&quot;https://electronjs.org/devtron&quot;&gt;Devtron&lt;/a&gt; and &lt;a href=&quot;https://electronjs.org/spectron&quot;&gt;Spectron&lt;/a&gt; that gives developers the opportunity to make their apps better for everyone.</source>
          <target state="translated">使得可访问的应用程序很重要，我们很高兴为&lt;a href=&quot;https://electronjs.org/devtron&quot;&gt;Devtron&lt;/a&gt;和&lt;a href=&quot;https://electronjs.org/spectron&quot;&gt;Spectron&lt;/a&gt;引入新功能，使开发人员有机会使每个人的应用程序变得更好。</target>
        </trans-unit>
        <trans-unit id="2e08aa5ea347df43acdfe2f0439c979d90b654c1" translate="yes" xml:space="preserve">
          <source>Making accessible applications is important and we're happy to provide functionality to &lt;a href=&quot;https://electronjs.org/devtron&quot;&gt;Devtron&lt;/a&gt; and &lt;a href=&quot;https://electronjs.org/spectron&quot;&gt;Spectron&lt;/a&gt; that gives developers the opportunity to make their apps better for everyone.</source>
          <target state="translated">使得可访问的应用程序很重要，我们很高兴为&lt;a href=&quot;https://electronjs.org/devtron&quot;&gt;Devtron&lt;/a&gt;和&lt;a href=&quot;https://electronjs.org/spectron&quot;&gt;Spectron&lt;/a&gt;提供功能，使开发人员有机会使他们的应用程序更适合所有人。</target>
        </trans-unit>
        <trans-unit id="08f0c0cf51888a42175c6e62922d9b9e24579a11" translate="yes" xml:space="preserve">
          <source>Malay</source>
          <target state="translated">Malay</target>
        </trans-unit>
        <trans-unit id="c730df3afaaac142f305e8f798eca241f12abf9f" translate="yes" xml:space="preserve">
          <source>Malayalam</source>
          <target state="translated">Malayalam</target>
        </trans-unit>
        <trans-unit id="cfb5310c4958ed16357aa5406e541fbeec602420" translate="yes" xml:space="preserve">
          <source>Maltese</source>
          <target state="translated">Maltese</target>
        </trans-unit>
        <trans-unit id="64ee1d8049f251ea9cde4c5ba76bbc0737728e80" translate="yes" xml:space="preserve">
          <source>Manage browser sessions, cookies, cache, proxy settings, etc.</source>
          <target state="translated">管理浏览器会话、cookies、缓存、代理设置等。</target>
        </trans-unit>
        <trans-unit id="dec209aaca99776ec018cbb9ee0ec7a9b32b56e6" translate="yes" xml:space="preserve">
          <source>Manage files and URLs using their default applications.</source>
          <target state="translated">使用其默认的应用程序管理文件和URL。</target>
        </trans-unit>
        <trans-unit id="c14e21aaec4b77e9b50c210353d726630a69b1b8" translate="yes" xml:space="preserve">
          <source>Manipulate the child browser window</source>
          <target state="translated">操作子浏览器窗口</target>
        </trans-unit>
        <trans-unit id="a4ec06ac844939e1ccc621aa0ad111fd5f89f005" translate="yes" xml:space="preserve">
          <source>Manipulate the command line arguments for your app that Chromium reads</source>
          <target state="translated">为你的应用程序操纵Chromium读取的命令行参数。</target>
        </trans-unit>
        <trans-unit id="fb1bd8fdc6e94ec7a627151e90abe08525adced7" translate="yes" xml:space="preserve">
          <source>Manual distribution</source>
          <target state="translated">手动分配</target>
        </trans-unit>
        <trans-unit id="5821968c0c33922eaabe477fa49fcd35619ff03e" translate="yes" xml:space="preserve">
          <source>Manually Enabling Accessibility Features</source>
          <target state="translated">手动启用辅助功能</target>
        </trans-unit>
        <trans-unit id="a0ba40e77497397867a1a3dd6568cf58eee5431d" translate="yes" xml:space="preserve">
          <source>Manually building for Electron</source>
          <target state="translated">手动构建电子</target>
        </trans-unit>
        <trans-unit id="bb6cefe0d60d1a577573bd69f97f78669acd2fbc" translate="yes" xml:space="preserve">
          <source>Manually building for a custom build of Electron</source>
          <target state="translated">手动构建Electron的自定义构建。</target>
        </trans-unit>
        <trans-unit id="568e03bb96ad8f988e60a033c47bd9714368a07a" translate="yes" xml:space="preserve">
          <source>Manually enables Chrome's accessibility support, allowing to expose accessibility switch to users in application settings. &lt;a href=&quot;https://www.chromium.org/developers/design-documents/accessibility&quot;&gt;https://www.chromium.org/developers/design-documents/accessibility&lt;/a&gt; for more details. Disabled by default.</source>
          <target state="translated">手动启用Chrome的辅助功能支持，从而允许在应用程序设置中向用户公开辅助功能开关。&lt;a href=&quot;https://www.chromium.org/developers/design-documents/accessibility&quot;&gt;https://www.chromium.org/developers/design-documents/accessibility&lt;/a&gt;以获得更多详细信息。默认禁用。</target>
        </trans-unit>
        <trans-unit id="836ee840bea7373db0e0cc4f531370bb5b60dcbe" translate="yes" xml:space="preserve">
          <source>Manually enables Chrome's accessibility support, allowing to expose accessibility switch to users in application settings. See &lt;a href=&quot;https://www.chromium.org/developers/design-documents/accessibility&quot;&gt;Chromium's accessibility docs&lt;/a&gt; for more details. Disabled by default.</source>
          <target state="translated">手动启用Chrome的辅助功能支持，从而可以在应用程序设置中向用户公开辅助功能开关。有关更多详细信息，请参见&lt;a href=&quot;https://www.chromium.org/developers/design-documents/accessibility&quot;&gt;Chromium的辅助功能文档&lt;/a&gt;。默认禁用。</target>
        </trans-unit>
        <trans-unit id="1265c5ec1ee3a59d7960f4a72261d97be1d0e0b9" translate="yes" xml:space="preserve">
          <source>Manually enabling accessibility features</source>
          <target state="translated">手动启用无障碍功能</target>
        </trans-unit>
        <trans-unit id="c54a6216905d7535196708b7c1d5030973af5032" translate="yes" xml:space="preserve">
          <source>Manually flipping fuses requires editing the Electron binary and modifying the fuse wire to be the sequence of bytes that represent the state of the fuses you want.</source>
          <target state="translated">手动翻转保险丝需要编辑电子二进制,并将保险丝线修改为代表你想要的保险丝状态的字节序列。</target>
        </trans-unit>
        <trans-unit id="62e5d6a3d84b993e435e90eb7d2198758109e5ef" translate="yes" xml:space="preserve">
          <source>Manually update your own interfaces</source>
          <target state="translated">手动更新自己的接口</target>
        </trans-unit>
        <trans-unit id="f04f90a6b4ac5544979ae8b2d057dc2a6dc802bf" translate="yes" xml:space="preserve">
          <source>Many users of Electron start with an entirely web-based app that they're turning into a desktop application. As web developers, we are used to loading resources from a variety of content delivery networks. Now that you are shipping a proper desktop application, attempt to &quot;cut the cord&quot; where possible and avoid letting your users wait for resources that never change and could easily be included in your app.</source>
          <target state="translated">许多Electron的用户从一个完全基于网络的应用开始,他们要把它变成一个桌面应用。作为网络开发者,我们习惯于从各种内容传输网络加载资源。现在,你正在发布一个合适的桌面应用程序,试图尽可能地 &quot;剪断电线&quot;,避免让你的用户等待那些永远不会改变的资源,并且很容易被包含在你的应用程序中。</target>
        </trans-unit>
        <trans-unit id="6bb4b981fc369f78634393c244cc62dcb75bb23c" translate="yes" xml:space="preserve">
          <source>Marathi</source>
          <target state="translated">Marathi</target>
        </trans-unit>
        <trans-unit id="6877b22121257272b4fb1ebd67b0539d5fb26baf" translate="yes" xml:space="preserve">
          <source>Markdown rules</source>
          <target state="translated">Markdown规则</target>
        </trans-unit>
        <trans-unit id="d28e529f4c8df657c79a8c2500e90ad8459e8c57" translate="yes" xml:space="preserve">
          <source>Marks the current &lt;a href=&quot;https://developer.apple.com/library/ios/documentation/UserExperience/Conceptual/Handoff/HandoffFundamentals/HandoffFundamentals.html&quot;&gt;Handoff&lt;/a&gt; user activity as inactive without invalidating it.</source>
          <target state="translated">将当前的&lt;a href=&quot;https://developer.apple.com/library/ios/documentation/UserExperience/Conceptual/Handoff/HandoffFundamentals/HandoffFundamentals.html&quot;&gt;切换&lt;/a&gt;用户活动标记为非活动，而不会使其无效。</target>
        </trans-unit>
        <trans-unit id="e8ceadd643faeb0bb54502b73c425647ff136a31" translate="yes" xml:space="preserve">
          <source>Marks the image as a template image.</source>
          <target state="translated">将图像标记为模板图像。</target>
        </trans-unit>
        <trans-unit id="6faf97cbf665d5c18d8d5f1fd4f3406005bc9b9a" translate="yes" xml:space="preserve">
          <source>Master VHD URI - use URI obtained @ end of previous step</source>
          <target state="translated">主VHD URI-使用上一步结束时获得的URI。</target>
        </trans-unit>
        <trans-unit id="1576e95f7c9ece7c3cbadabe664fd458e0dba654" translate="yes" xml:space="preserve">
          <source>Master VM name - just a unique name to identify the temporary VM</source>
          <target state="translated">主虚拟机名称--只是一个识别临时虚拟机的唯一名称。</target>
        </trans-unit>
        <trans-unit id="9893692afa63ac13cae95202fe36b917b133c42c" translate="yes" xml:space="preserve">
          <source>Master VM size - use &lt;code&gt;Standard_F32s_v2&lt;/code&gt;</source>
          <target state="translated">主VM大小-使用 &lt;code&gt;Standard_F32s_v2&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e4cb68450d6ee60729f8e6bf50c6178cacca48e3" translate="yes" xml:space="preserve">
          <source>Match URLs which are IP address literals.</source>
          <target state="translated">匹配IP地址的URL。</target>
        </trans-unit>
        <trans-unit id="33ab1c88001bf081442d8776abcc8ae32ce1b8a6" translate="yes" xml:space="preserve">
          <source>Match a particular domain suffix.</source>
          <target state="translated">匹配特定的域名后缀。</target>
        </trans-unit>
        <trans-unit id="7ef5c8e655993c05557e9aa0674b43d038556da1" translate="yes" xml:space="preserve">
          <source>Match all hostnames that match the pattern HOSTNAME_PATTERN.</source>
          <target state="translated">匹配所有符合模式HOSTNAME_PATTERN的主机名。</target>
        </trans-unit>
        <trans-unit id="a6ab65cfe6eda9c382fe697344f8af846c1bc900" translate="yes" xml:space="preserve">
          <source>Match any URL that is to an IP literal that falls between the given range. IP range is specified using CIDR notation.</source>
          <target state="translated">匹配任何位于给定范围之间的IP文字的URL。IP范围是用CIDR符号指定的。</target>
        </trans-unit>
        <trans-unit id="66b5a35f9ebfbc106121468ab684462bb4780f8a" translate="yes" xml:space="preserve">
          <source>Match local addresses. The meaning of &lt;code&gt;&amp;lt;local&amp;gt;&lt;/code&gt; is whether the host matches one of: &quot;127.0.0.1&quot;, &quot;::1&quot;, &quot;localhost&quot;.</source>
          <target state="translated">匹配本地地址。 &lt;code&gt;&amp;lt;local&amp;gt;&lt;/code&gt; 的含义是主机是否匹配以下之一：&amp;ldquo; 127.0.0.1&amp;rdquo;，&amp;ldquo; :: 1&amp;rdquo;，&amp;ldquo; localhost&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="bc1970136ab27583ccea13cbf7161d7e25b69a5e" translate="yes" xml:space="preserve">
          <source>Maximizes the window. This will also show (but not focus) the window if it isn't being displayed already.</source>
          <target state="translated">最大化窗口。如果窗口还没有显示,这也会显示(但不是聚焦)窗口。</target>
        </trans-unit>
        <trans-unit id="44d7922eadbe45b1774995d2449a5359ea62d9a2" translate="yes" xml:space="preserve">
          <source>Measure, Measure, Measure</source>
          <target state="translated">衡量,衡量,衡量</target>
        </trans-unit>
        <trans-unit id="e0efdce50032a40b3a3914e5fc8bfa6cd4288bb5" translate="yes" xml:space="preserve">
          <source>Memory Management</source>
          <target state="translated">内存管理</target>
        </trans-unit>
        <trans-unit id="a39a2691f8ac63df7fcbe6ae7ece40b10d717679" translate="yes" xml:space="preserve">
          <source>MemoryInfo</source>
          <target state="translated">MemoryInfo</target>
        </trans-unit>
        <trans-unit id="d2f3ea8610a8148842353371965b406006ea2e95" translate="yes" xml:space="preserve">
          <source>MemoryInfo Object</source>
          <target state="translated">MemoryInfo对象</target>
        </trans-unit>
        <trans-unit id="b6f34e962df288485f4a23a96a69701e9811a805" translate="yes" xml:space="preserve">
          <source>MemoryUsageDetails</source>
          <target state="translated">MemoryUsageDetails</target>
        </trans-unit>
        <trans-unit id="6b8e378b13b324bf2719d56f05d2a76e1fdca001" translate="yes" xml:space="preserve">
          <source>MemoryUsageDetails Object</source>
          <target state="translated">MemoryUsageDetails对象</target>
        </trans-unit>
        <trans-unit id="57f5f5efbc5990f5230aa95359042338b856707b" translate="yes" xml:space="preserve">
          <source>Menu</source>
          <target state="translated">Menu</target>
        </trans-unit>
        <trans-unit id="ac638b6bd0a0e2ae3936b49675084e959e08498d" translate="yes" xml:space="preserve">
          <source>Menu Item Position</source>
          <target state="translated">菜单项目位置</target>
        </trans-unit>
        <trans-unit id="c80d07f2f5248a4d681913d75eca7a816c2ab9da" translate="yes" xml:space="preserve">
          <source>Menu()</source>
          <target state="translated">Menu()</target>
        </trans-unit>
        <trans-unit id="6c4aea89b61f6d70b9afb61efa7ba962a76cb7a1" translate="yes" xml:space="preserve">
          <source>Menu:</source>
          <target state="translated">Menu:</target>
        </trans-unit>
        <trans-unit id="fd0b0b8f9535c21f5c697415e34da8e008d26d26" translate="yes" xml:space="preserve">
          <source>MenuItem</source>
          <target state="translated">MenuItem</target>
        </trans-unit>
        <trans-unit id="7cc9eb5ad4b43fe57d0aef498e053f33d8a9c732" translate="yes" xml:space="preserve">
          <source>MenuItem()</source>
          <target state="translated">MenuItem()</target>
        </trans-unit>
        <trans-unit id="79343f29f5723f9f94c0038b7028cb8a494caeb2" translate="yes" xml:space="preserve">
          <source>Merge temporary branch (pre-2-0-x branches only)</source>
          <target state="translated">合并临时分支(仅限2-0-x之前的分支)</target>
        </trans-unit>
        <trans-unit id="edbc4cdf49b60f12acfba715eaa71dd0dc3b31f8" translate="yes" xml:space="preserve">
          <source>Merges all windows into one window with multiple tabs when native tabs are enabled and there is more than one open window.</source>
          <target state="translated">当启用本机标签且有多个打开的窗口时,将所有窗口合并为一个有多个标签的窗口。</target>
        </trans-unit>
        <trans-unit id="f62e9e3e46d782563d406255ceb97e4d191cd710" translate="yes" xml:space="preserve">
          <source>Merging back into master</source>
          <target state="translated">合并回主设备</target>
        </trans-unit>
        <trans-unit id="b8b0b3aac0d6933ac642e6939867daa972acb2a1" translate="yes" xml:space="preserve">
          <source>Merging back into old release branch</source>
          <target state="translated">合并回旧版本分支</target>
        </trans-unit>
        <trans-unit id="e631ac93f56429496650cc40344c0ce91e67133d" translate="yes" xml:space="preserve">
          <source>MessageChannelMain</source>
          <target state="translated">MessageChannelMain</target>
        </trans-unit>
        <trans-unit id="5dbc81c87b66b57c3100916624cb280e2d838912" translate="yes" xml:space="preserve">
          <source>MessagePortMain</source>
          <target state="translated">MessagePortMain</target>
        </trans-unit>
        <trans-unit id="7e4ac6803c9159c694f63d089cb06b2519c16aba" translate="yes" xml:space="preserve">
          <source>Methods</source>
          <target state="translated">Methods</target>
        </trans-unit>
        <trans-unit id="37d18b76453fed3e678a25bf44af7335d8a1f834" translate="yes" xml:space="preserve">
          <source>Microsoft &lt;a href=&quot;https://github.com/catalystcode/electron-windows-store&quot;&gt;developed a tool that compiles Electron apps as &lt;code&gt;.appx&lt;/code&gt; packages&lt;/a&gt;, enabling developers to use some of the goodies found in the new application model. This guide explains how to use it - and what the capabilities and limitations of an Electron AppX package are.</source>
          <target state="translated">微软&lt;a href=&quot;https://github.com/catalystcode/electron-windows-store&quot;&gt;开发了一种将Electron应用程序编译为 &lt;code&gt;.appx&lt;/code&gt; 软件包的工具&lt;/a&gt;，使开发人员可以使用新应用程序模型中的某些功能。本指南说明了如何使用它-以及Electron AppX软件包的功能和局限性。</target>
        </trans-unit>
        <trans-unit id="6e458173eef4a800366eeb68965cf8f147c4756b" translate="yes" xml:space="preserve">
          <source>Migration</source>
          <target state="translated">Migration</target>
        </trans-unit>
        <trans-unit id="28128d38fad00ed20714cff948ab05f77479d1e6" translate="yes" xml:space="preserve">
          <source>MimeTypedBuffer</source>
          <target state="translated">MimeTypedBuffer</target>
        </trans-unit>
        <trans-unit id="d6b317ab061a8236f4adc5d7739f52a26b4e8122" translate="yes" xml:space="preserve">
          <source>MimeTypedBuffer Object</source>
          <target state="translated">MimeTypedBuffer对象</target>
        </trans-unit>
        <trans-unit id="5c250802ed4e299671bafdfe26fbd5c52d2f174a" translate="yes" xml:space="preserve">
          <source>Minimal Bootstrapping</source>
          <target state="translated">最小化引导</target>
        </trans-unit>
        <trans-unit id="59d44ab0c473a6e50cdb5fc05dcae565d64d32c4" translate="yes" xml:space="preserve">
          <source>Minimizes the window. On some platforms the minimized window will be shown in the Dock.</source>
          <target state="translated">将窗口最小化。在某些平台上,最小化的窗口会显示在Dock中。</target>
        </trans-unit>
        <trans-unit id="822d8a4f24b72b15bce76b88a8306344b595b682" translate="yes" xml:space="preserve">
          <source>Minor Version Increments</source>
          <target state="translated">小版本增量</target>
        </trans-unit>
        <trans-unit id="f00051475cd7040e49b1165a98e0ececdb494a4c" translate="yes" xml:space="preserve">
          <source>Minor releases</source>
          <target state="translated">小规模释放</target>
        </trans-unit>
        <trans-unit id="187790ce114a2fd84cf44bc5850252f1405fdd09" translate="yes" xml:space="preserve">
          <source>Minor version change</source>
          <target state="translated">小的版本变化</target>
        </trans-unit>
        <trans-unit id="74adc5789ce92de7bbb5e3d84a287a1ce6d3e7f5" translate="yes" xml:space="preserve">
          <source>Mirror</source>
          <target state="translated">Mirror</target>
        </trans-unit>
        <trans-unit id="8d568b1b4b206e88208849821e5c0a4c26cb45cd" translate="yes" xml:space="preserve">
          <source>Missing Features: Alphas</source>
          <target state="translated">缺少的功能。Alphas</target>
        </trans-unit>
        <trans-unit id="50b753b77904c96a7fe67edc0e7799140807aeb3" translate="yes" xml:space="preserve">
          <source>Missing Features: Alphas, and Nightly</source>
          <target state="translated">缺少的功能。Alphas,and Nightly</target>
        </trans-unit>
        <trans-unit id="a12f39102ef88d1b1648a3b25092a5d22a170662" translate="yes" xml:space="preserve">
          <source>Missing fonts</source>
          <target state="translated">缺少的字体</target>
        </trans-unit>
        <trans-unit id="40ce4ab635954d17098ad98dd6d97891a6b2d6fa" translate="yes" xml:space="preserve">
          <source>Mixed-sandbox mode is now enabled by default.</source>
          <target state="translated">现在默认启用混合沙盒模式。</target>
        </trans-unit>
        <trans-unit id="aa608f50164ae4468eca5f7a4828180613e032b7" translate="yes" xml:space="preserve">
          <source>MobX Developer Tools</source>
          <target state="translated">MobX开发工具</target>
        </trans-unit>
        <trans-unit id="901b00eb5476b91a74e2f260fe55be50affcee6d" translate="yes" xml:space="preserve">
          <source>Modal windows</source>
          <target state="translated">模态窗口</target>
        </trans-unit>
        <trans-unit id="7a2466ce49a31d04da530301ef401489d60d7cc3" translate="yes" xml:space="preserve">
          <source>Modern JavaScript development usually involves many files and modules. While that's perfectly fine for developing with Electron, we heavily recommend that you bundle all your code into one single file to ensure that the overhead included in calling &lt;code&gt;require()&lt;/code&gt; is only paid once when your application loads.</source>
          <target state="translated">现代JavaScript开发通常涉及许多文件和模块。虽然这对于使用Electron进行开发非常好，但我们强烈建议您将所有代码捆绑到一个文件中，以确保调用 &lt;code&gt;require()&lt;/code&gt; 所包含的开销仅在应用程序加载时才支付一次。</target>
        </trans-unit>
        <trans-unit id="5f063682df9993294db724b001ca80ba840abcb8" translate="yes" xml:space="preserve">
          <source>Modernization</source>
          <target state="translated">Modernization</target>
        </trans-unit>
        <trans-unit id="9c08142f037420f3dd892cd9f96c1c768041be72" translate="yes" xml:space="preserve">
          <source>Modify the VM as required.</source>
          <target state="translated">根据需要修改虚拟机。</target>
        </trans-unit>
        <trans-unit id="5233ddfcb825a01b152dd312db82205b9ff31f04" translate="yes" xml:space="preserve">
          <source>Modify your package.json file</source>
          <target state="translated">修改你的package.json文件</target>
        </trans-unit>
        <trans-unit id="141fcfc0a89ae99212603bd3aa8017d60a94f035" translate="yes" xml:space="preserve">
          <source>Module methods and events</source>
          <target state="translated">模块方法和事件</target>
        </trans-unit>
        <trans-unit id="ac43823e76d4446a8b140446f86e9cf10a49045a" translate="yes" xml:space="preserve">
          <source>Modules for Both Process Types</source>
          <target state="translated">两种工艺类型的模块</target>
        </trans-unit>
        <trans-unit id="0655e943f357853a23dbc1fca9b8b8b74187fed0" translate="yes" xml:space="preserve">
          <source>Modules for Both Processes:</source>
          <target state="translated">两个流程的模块。</target>
        </trans-unit>
        <trans-unit id="fad485f2b0513e07b52567a6f2a346d73ddbc539" translate="yes" xml:space="preserve">
          <source>Modules for the Main Process:</source>
          <target state="translated">主流程的模块。</target>
        </trans-unit>
        <trans-unit id="dfc2146f5598a75fa9da745d85433f8c014cba38" translate="yes" xml:space="preserve">
          <source>Modules for the Renderer Process (Web Page):</source>
          <target state="translated">渲染器过程的模块(网页)。</target>
        </trans-unit>
        <trans-unit id="859556f94b13fc510ff5085b5fb29e88a587fc7b" translate="yes" xml:space="preserve">
          <source>Modules that rely on &lt;code&gt;node-pre-gyp&lt;/code&gt;</source>
          <target state="translated">依赖于 &lt;code&gt;node-pre-gyp&lt;/code&gt; 模块</target>
        </trans-unit>
        <trans-unit id="9e6cb54b92e776ea4523222c80634966b1a25f1c" translate="yes" xml:space="preserve">
          <source>Modules that rely on &lt;code&gt;prebuild&lt;/code&gt;</source>
          <target state="translated">依赖于 &lt;code&gt;prebuild&lt;/code&gt; 模块</target>
        </trans-unit>
        <trans-unit id="977ca71334b90aac52382878a5bc9c5fe2dc63d2" translate="yes" xml:space="preserve">
          <source>Mojo</source>
          <target state="translated">Mojo</target>
        </trans-unit>
        <trans-unit id="981fb1a731db18be7ffbc618830d04ecbc60cd90" translate="yes" xml:space="preserve">
          <source>Moldavian</source>
          <target state="translated">Moldavian</target>
        </trans-unit>
        <trans-unit id="c3bdbab40a4be4ac1b8eb1ccb2dbb2eaf8ed480f" translate="yes" xml:space="preserve">
          <source>Mongolian</source>
          <target state="translated">Mongolian</target>
        </trans-unit>
        <trans-unit id="ad3be9da0333f2d86e25caf5c419702d7e211450" translate="yes" xml:space="preserve">
          <source>Monitor power state changes.</source>
          <target state="translated">监控电源状态变化。</target>
        </trans-unit>
        <trans-unit id="044cb6085769f286e24b4d2a84f4981677f5f54c" translate="yes" xml:space="preserve">
          <source>Monitoring Goma</source>
          <target state="translated">监测戈马</target>
        </trans-unit>
        <trans-unit id="0d6772c17c36f0f8030e0a6c6baa2bec775c05de" translate="yes" xml:space="preserve">
          <source>Monitoring begins immediately locally and asynchronously on child processes as soon as they receive the &lt;code&gt;startMonitoring&lt;/code&gt; request.</source>
          <target state="translated">子进程收到 &lt;code&gt;startMonitoring&lt;/code&gt; 请求后，将立即在本地开始异步监视子进程。</target>
        </trans-unit>
        <trans-unit id="5eaa209d8dce0c8c489a3d027ee8e07c8703eb01" translate="yes" xml:space="preserve">
          <source>More details can be found in &lt;a href=&quot;application-packaging&quot;&gt;Application packaging&lt;/a&gt;.</source>
          <target state="translated">可以在&lt;a href=&quot;application-packaging&quot;&gt;应用程序包装中&lt;/a&gt;找到更多详细信息。</target>
        </trans-unit>
        <trans-unit id="f03c38003a057a3ee024bb1cd2b981c5d824af4a" translate="yes" xml:space="preserve">
          <source>More details can be found in &lt;a href=&quot;tutorial/application-packaging&quot;&gt;Application packaging&lt;/a&gt;.</source>
          <target state="translated">可以在&lt;a href=&quot;tutorial/application-packaging&quot;&gt;应用程序包装中&lt;/a&gt;找到更多详细信息。</target>
        </trans-unit>
        <trans-unit id="ac12df785b0417cadd38f4b76e9fd5ed4a671464" translate="yes" xml:space="preserve">
          <source>More information can be found in the &lt;a href=&quot;https://nodejs.org/dist/latest/docs/api/repl.html&quot;&gt;Node.js REPL docs&lt;/a&gt;.</source>
          <target state="translated">可以在&lt;a href=&quot;https://nodejs.org/dist/latest/docs/api/repl.html&quot;&gt;Node.js REPL文档中&lt;/a&gt;找到更多信息。</target>
        </trans-unit>
        <trans-unit id="00e06820ccf492f1a47ae5ceded61952a3d977ee" translate="yes" xml:space="preserve">
          <source>More may be added as needed to expose more Electron APIs in the sandbox, but any module in the main process can already be used through &lt;code&gt;electron.remote.require&lt;/code&gt;.</source>
          <target state="translated">可以根据需要添加更多的组件，以在沙箱中公开更多的Electron API，但是主进程中的任何模块都可以通过 &lt;code&gt;electron.remote.require&lt;/code&gt; 使用。</target>
        </trans-unit>
        <trans-unit id="381a4f2cdda5a922f71425e63e4ead748c557260" translate="yes" xml:space="preserve">
          <source>More may be added as needed to expose more electron APIs in the sandbox, but any module in the main process can already be used through &lt;code&gt;electron.remote.require&lt;/code&gt;.</source>
          <target state="translated">可以根据需要添加更多的组件，以在沙箱中公开更多的电子API，但是主要过程中的任何模块都可以通过 &lt;code&gt;electron.remote.require&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9a6c5a476bf196391c786e8d65652ebdf2f0edbe" translate="yes" xml:space="preserve">
          <source>More precisely the format is &lt;code&gt;window:id:other_id&lt;/code&gt; where &lt;code&gt;id&lt;/code&gt; is &lt;code&gt;HWND&lt;/code&gt; on Windows, &lt;code&gt;CGWindowID&lt;/code&gt; (&lt;code&gt;uint64_t&lt;/code&gt;) on macOS and &lt;code&gt;Window&lt;/code&gt; (&lt;code&gt;unsigned long&lt;/code&gt;) on Linux. &lt;code&gt;other_id&lt;/code&gt; is used to identify web contents (tabs) so within the same top level window.</source>
          <target state="translated">更准确地说，格式为 &lt;code&gt;window:id:other_id&lt;/code&gt; ，其中，在Windows上， &lt;code&gt;id&lt;/code&gt; 为 &lt;code&gt;HWND&lt;/code&gt; ；在macOS上，id为 &lt;code&gt;CGWindowID&lt;/code&gt; （ &lt;code&gt;uint64_t&lt;/code&gt; ）；在Linux上，id为 &lt;code&gt;Window&lt;/code&gt; （ &lt;code&gt;unsigned long&lt;/code&gt; ）。 &lt;code&gt;other_id&lt;/code&gt; 用于标识Web内容（选项卡），因此位于同一顶级窗口中。</target>
        </trans-unit>
        <trans-unit id="91ad2fc5f8c51939d84c8988f4bdd7e13db85699" translate="yes" xml:space="preserve">
          <source>Most &lt;code&gt;fs&lt;/code&gt; APIs can read a file or get a file's information from &lt;code&gt;asar&lt;/code&gt; archives without unpacking, but for some APIs that rely on passing the real file path to underlying system calls, Electron will extract the needed file into a temporary file and pass the path of the temporary file to the APIs to make them work. This adds a little overhead for those APIs.</source>
          <target state="translated">大多数 &lt;code&gt;fs&lt;/code&gt; API 无需解压缩即可从 &lt;code&gt;asar&lt;/code&gt; 档案中读取文件或获取文件信息，但对于某些依赖于将真实文件路径传递给底层系统调用的API，Electron会将所需的文件提取到临时文件中并传递临时文件到API，以使其正常工作。这会为这些API增加一些开销。</target>
        </trans-unit>
        <trans-unit id="24df657906e0a9ff5dd9d380b688073ddd400cbe" translate="yes" xml:space="preserve">
          <source>Most issues are resolved by opening a pull request. The process for opening and reviewing a pull request is similar to that of opening and triaging issues, but carries with it a necessary review and approval workflow that ensures that the proposed changes meet the minimal quality and functional guidelines of the Electron project.</source>
          <target state="translated">大多数问题都是通过打开一个拉取请求来解决的。打开和审查拉取请求的过程类似于打开和分流问题的过程,但带有必要的审查和批准工作流程,以确保所提出的更改符合Electron项目的最低质量和功能准则。</target>
        </trans-unit>
        <trans-unit id="1963afbf0297022503035c708168c89e69e8dc93" translate="yes" xml:space="preserve">
          <source>Most pull requests opened against the &lt;code&gt;electron/electron&lt;/code&gt; repository include changes to either the C/C++ code in the &lt;code&gt;atom/&lt;/code&gt; or &lt;code&gt;brightray/&lt;/code&gt; folders, the JavaScript code in the &lt;code&gt;lib/&lt;/code&gt; folder, the documentation in &lt;code&gt;docs/api/&lt;/code&gt; or tests in the &lt;code&gt;spec/&lt;/code&gt; folder.</source>
          <target state="translated">针对 &lt;code&gt;electron/electron&lt;/code&gt; 存储库打开的大多数拉取请求包括对 &lt;code&gt;atom/&lt;/code&gt; 或 &lt;code&gt;brightray/&lt;/code&gt; 文件夹中的C / C ++代码， &lt;code&gt;lib/&lt;/code&gt; 文件夹中的JavaScript代码， &lt;code&gt;docs/api/&lt;/code&gt; 中的文档或 &lt;code&gt;spec/&lt;/code&gt; 测试的更改。夹。</target>
        </trans-unit>
        <trans-unit id="d310017fd52c36bba769938ed4541a96183334c5" translate="yes" xml:space="preserve">
          <source>Most pull requests opened against the &lt;code&gt;electron/electron&lt;/code&gt; repository include changes to either the C/C++ code in the &lt;code&gt;shell/&lt;/code&gt; folder, the JavaScript code in the &lt;code&gt;lib/&lt;/code&gt; folder, the documentation in &lt;code&gt;docs/api/&lt;/code&gt; or tests in the &lt;code&gt;spec/&lt;/code&gt; folder.</source>
          <target state="translated">针对 &lt;code&gt;electron/electron&lt;/code&gt; 存储库打开的大多数拉取请求包括更改 &lt;code&gt;shell/&lt;/code&gt; 文件夹中的C / C ++代码， &lt;code&gt;lib/&lt;/code&gt; 文件夹中的JavaScript代码， &lt;code&gt;docs/api/&lt;/code&gt; 中的文档或 &lt;code&gt;spec/&lt;/code&gt; 文件夹中的测试。</target>
        </trans-unit>
        <trans-unit id="61d68b3e3473c488df7dd74b03100ff56229d822" translate="yes" xml:space="preserve">
          <source>Most users will get this feature for free, since it's supported out of the box by &lt;a href=&quot;https://github.com/electron-userland/electron-packager&quot;&gt;&lt;code&gt;electron-packager&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/electron-userland/electron-forge&quot;&gt;&lt;code&gt;electron-forge&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;https://github.com/electron-userland/electron-builder&quot;&gt;&lt;code&gt;electron-builder&lt;/code&gt;&lt;/a&gt;. If you are not using any of these tools, read on.</source>
          <target state="translated">大多数用户将免费获得此功能，因为&lt;a href=&quot;https://github.com/electron-userland/electron-packager&quot;&gt; &lt;code&gt;electron-packager&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;https://github.com/electron-userland/electron-forge&quot;&gt; &lt;code&gt;electron-forge&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;https://github.com/electron-userland/electron-builder&quot;&gt; &lt;code&gt;electron-builder&lt;/code&gt; &lt;/a&gt;已开箱即用地支持该功能。如果您没有使用任何这些工具，请继续阅读。</target>
        </trans-unit>
        <trans-unit id="550338b96f962abd43f9d50834137ff2cdbf04df" translate="yes" xml:space="preserve">
          <source>Most users will get this feature for free, since it's supported out of the box by &lt;a href=&quot;https://github.com/electron/electron-packager&quot;&gt;&lt;code&gt;electron-packager&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/electron-userland/electron-forge&quot;&gt;&lt;code&gt;electron-forge&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;https://github.com/electron-userland/electron-builder&quot;&gt;&lt;code&gt;electron-builder&lt;/code&gt;&lt;/a&gt;. If you are not using any of these tools, read on.</source>
          <target state="translated">大多数用户将免费获得此功能，因为&lt;a href=&quot;https://github.com/electron/electron-packager&quot;&gt; &lt;code&gt;electron-packager&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;https://github.com/electron-userland/electron-forge&quot;&gt; &lt;code&gt;electron-forge&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;https://github.com/electron-userland/electron-builder&quot;&gt; &lt;code&gt;electron-builder&lt;/code&gt; &lt;/a&gt;已开箱即用地支持该功能。如果您没有使用任何这些工具，请继续阅读。</target>
        </trans-unit>
        <trans-unit id="5c866bf8f9578a06c6fde85ef022e9042d1aa154" translate="yes" xml:space="preserve">
          <source>MouseInputEvent Object extends &lt;code&gt;InputEvent&lt;/code&gt;</source>
          <target state="translated">MouseInputEvent对象扩展 &lt;code&gt;InputEvent&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1e274257075c36c67ce2efd3b62de41253ca1f8d" translate="yes" xml:space="preserve">
          <source>MouseInputEvent Object extends InputEvent</source>
          <target state="translated">MouseInputEvent对象扩展为InputEvent。</target>
        </trans-unit>
        <trans-unit id="5a253abd6c7677d413a48e9e5d28d6651416e2c3" translate="yes" xml:space="preserve">
          <source>MouseWheelInputEvent Object extends &lt;code&gt;MouseInputEvent&lt;/code&gt;</source>
          <target state="translated">MouseWheelInputEvent对象扩展 &lt;code&gt;MouseInputEvent&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="379690624a74e4217623302bebdd5a2c8a92a873" translate="yes" xml:space="preserve">
          <source>MouseWheelInputEvent Object extends MouseInputEvent</source>
          <target state="translated">MouseWheelInputEvent对象扩展为MouseInputEvent。</target>
        </trans-unit>
        <trans-unit id="b1e64e060fa9046354b956496a4b20d4ea90d4ac" translate="yes" xml:space="preserve">
          <source>Move it to &lt;code&gt;%APPDATA%\..\Local\node-gyp\Cache\6.0.9\arm64\node.lib&lt;/code&gt;</source>
          <target state="translated">将其移动到 &lt;code&gt;%APPDATA%\..\Local\node-gyp\Cache\6.0.9\arm64\node.lib&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f6950455d237806d5d93ac0532b6858342225fe4" translate="yes" xml:space="preserve">
          <source>Move the given file to trash and returns a boolean status for the operation.</source>
          <target state="translated">将给定的文件移动到垃圾桶,并返回操作的布尔状态。</target>
        </trans-unit>
        <trans-unit id="1a3875c81017814140fd6c2816640edc744cfd83" translate="yes" xml:space="preserve">
          <source>Moves the current tab into a new window if native tabs are enabled and there is more than one tab in the current window.</source>
          <target state="translated">如果启用了本地标签,并且当前窗口中有多个标签,则将当前标签移动到新窗口。</target>
        </trans-unit>
        <trans-unit id="e5660e1f2cd10cda0a29aeade3256c592f8b18ef" translate="yes" xml:space="preserve">
          <source>Moves window above the source window in the sense of z-order. If the &lt;code&gt;mediaSourceId&lt;/code&gt; is not of type window or if the window does not exist then this method throws an error.</source>
          <target state="translated">将窗口按z顺序移动到源窗口上方。如果 &lt;code&gt;mediaSourceId&lt;/code&gt; 不是window类型或该窗口不存在，则此方法将引发错误。</target>
        </trans-unit>
        <trans-unit id="2151334426d72b39234474a7474182d61ff5ba8c" translate="yes" xml:space="preserve">
          <source>Moves window to &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;.</source>
          <target state="translated">将窗口移动到 &lt;code&gt;x&lt;/code&gt; 和 &lt;code&gt;y&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a9fd7b0bda50a6a5e59d1f13795eb4c168f24976" translate="yes" xml:space="preserve">
          <source>Moves window to the center of the screen.</source>
          <target state="translated">将窗口移动到屏幕中央。</target>
        </trans-unit>
        <trans-unit id="7ecadb0cd9f622532810aec703f5a1a3c4801173" translate="yes" xml:space="preserve">
          <source>Moves window to top(z-order) regardless of focus</source>
          <target state="translated">将窗口移动到顶部(z-order),而不考虑焦点。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
